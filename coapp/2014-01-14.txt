{"nick":"auroraeosrose","reason":"Read error: Connection reset by peer","date":"2014-01-14T00:52:24.845Z","type":"quit"}
{"nick":"bcraig","reason":"Ping timeout: 272 seconds","date":"2014-01-14T01:03:35.792Z","type":"quit"}
{"nick":"auroraeosrose","date":"2014-01-14T01:18:01.718Z","type":"join"}
{"nick":"FearTheCowboy","message":"Well bandit is a bust.","date":"2014-01-14T01:18:19.778Z","type":"message"}
{"nick":"FearTheCowboy","message":"I dunno what that thing is doing, but to compile it's own simple tests... the x86 version takes over five minutes to compile and link on my machine","date":"2014-01-14T01:18:52.338Z","type":"message"}
{"nick":"FearTheCowboy","message":"the x64 only takes about 1 minute","date":"2014-01-14T01:19:02.071Z","type":"message"}
{"nick":"FearTheCowboy","message":"but...","date":"2014-01-14T01:19:03.911Z","type":"message"}
{"nick":"FearTheCowboy","message":"the test exe is only 300k (which works just fine)","date":"2014-01-14T01:19:20.577Z","type":"message"}
{"nick":"FearTheCowboy","message":"but the PDB is ~64 mb!","date":"2014-01-14T01:19:31.579Z","type":"message"}
{"nick":"FearTheCowboy","message":"xUnit++ is ... workable. works x-plat and I got the test runner integrated with VS2013.","date":"2014-01-14T02:19:15.623Z","type":"message"}
{"nick":"FearTheCowboy","message":"The nice part about that is that VS will run the tests in the background after a build for you; and highlight failures (so you don't have to put them in post-build steps)","date":"2014-01-14T02:20:23.259Z","type":"message"}
{"nick":"AtashiCon","reason":"Quit: AtashiCon","date":"2014-01-14T03:06:50.861Z","type":"quit"}
{"nick":"AtashiCon","date":"2014-01-14T03:07:17.016Z","type":"join"}
{"nick":"Disgaea","reason":"Ping timeout: 248 seconds","date":"2014-01-14T03:14:45.691Z","type":"quit"}
{"nick":"Disgaea","date":"2014-01-14T03:17:21.641Z","type":"join"}
{"nick":"auroraeosrose","reason":"Ping timeout: 272 seconds","date":"2014-01-14T03:19:13.346Z","type":"quit"}
{"nick":"alkaline","reason":"Ping timeout: 272 seconds","date":"2014-01-14T06:42:31.348Z","type":"quit"}
{"nick":"ender`","date":"2014-01-14T07:23:41.658Z","type":"join"}
{"nick":"Jeanne-Kamikaze","date":"2014-01-14T11:43:39.757Z","type":"join"}
{"nick":"auroraeosrose","date":"2014-01-14T11:43:46.535Z","type":"join"}
{"nick":"bcraig","date":"2014-01-14T13:30:58.664Z","type":"join"}
{"nick":"madewokherd","date":"2014-01-14T16:35:24.906Z","type":"join"}
{"nick":"madewokherd","message":"FearTheCowboy: please let me know when you've posted some onesetup code that's in a platform-neutral style","date":"2014-01-14T16:38:54.818Z","type":"message"}
{"nick":"madewokherd","message":"especially if that code is using xmllite","date":"2014-01-14T16:39:04.361Z","type":"message"}
{"nick":"madewokherd","message":"figuring out how to define IUnknown and IStream in public non-windows headers is going to be, uh, interesting","date":"2014-01-14T16:47:53.003Z","type":"message"}
{"nick":"madewokherd","message":"mostly because it seems presumptuous to assume nothing else is going to define those","date":"2014-01-14T16:49:55.741Z","type":"message"}
{"nick":"bcraig","message":"ideally, don't define those at all","date":"2014-01-14T16:50:34.595Z","type":"message"}
{"nick":"bcraig","message":"if you have control of the source that uses those interfaces, have them inherit from I_xmllite_IUnknown (or something like that)","date":"2014-01-14T16:51:02.360Z","type":"message"}
{"nick":"madewokherd","message":"I don't think I can make a source-compatible xmllite without doing that","date":"2014-01-14T16:51:02.507Z","type":"message"}
{"nick":"bcraig","message":"then, on Windows, typedef I_xmllite_IUnknown to the real IUnknonw","date":"2014-01-14T16:51:21.229Z","type":"message"}
{"nick":"bcraig","message":"and on non-Windows, make it a \"real\" class","date":"2014-01-14T16:51:38.632Z","type":"message"}
{"nick":"bcraig","message":"note that Mac does define IUnknown (poorly)","date":"2014-01-14T16:51:53.557Z","type":"message"}
{"nick":"madewokherd","message":"are the headers that do that on the web?","date":"2014-01-14T16:52:19.471Z","type":"message"}
{"nick":"bcraig","message":"I believe so.  off the top of my head, I think it is something like CFPlugin.h","date":"2014-01-14T16:52:40.492Z","type":"message"}
{"nick":"bcraig","message":"http://www.opensource.apple.com/source/CF/CF-476.14/CFPlugInCOM.h?txt","date":"2014-01-14T16:54:05.929Z","type":"message"}
{"nick":"madewokherd","message":"ugh","date":"2014-01-14T16:54:45.485Z","type":"message"}
{"nick":"madewokherd","message":"void *_reserved","date":"2014-01-14T16:54:52.041Z","type":"message"}
{"nick":"bcraig","message":"yep","date":"2014-01-14T16:54:57.177Z","type":"message"}
{"nick":"madewokherd","message":"so it's not compatible with the windows IUnknown","date":"2014-01-14T16:55:04.398Z","type":"message"}
{"nick":"bcraig","message":"they didn't even remove it in x64","date":"2014-01-14T16:55:07.156Z","type":"message"}
{"nick":"bcraig","message":"so yes, it is very presumptuous to assume nothing else is going to define IUnknown","date":"2014-01-14T16:55:43.957Z","type":"message"}
{"nick":"madewokherd","message":"well, I definitely need some sort of prefix in that case","date":"2014-01-14T16:55:57.983Z","type":"message"}
{"nick":"bcraig","message":"or HRESULT, or uint32_t, or a number of other things like that","date":"2014-01-14T16:56:02.081Z","type":"message"}
{"nick":"madewokherd","message":"I can include stdint.h","date":"2014-01-14T16:56:10.730Z","type":"message"}
{"nick":"madewokherd","message":"and replace windows types with standard ones","date":"2014-01-14T16:56:17.128Z","type":"message"}
{"nick":"madewokherd","message":"that's what mono does for its win32 internal functions","date":"2014-01-14T16:56:31.520Z","type":"message"}
{"nick":"bcraig","message":"right, just saying that a lot of open source developers start porting their code to an older windows compiler, and when stdint.h doesn't define uint32_t, they define it","date":"2014-01-14T16:56:47.861Z","type":"message"}
{"nick":"alkaline","date":"2014-01-14T16:56:49.250Z","type":"join"}
{"nick":"alkaline","reason":"Changing host","date":"2014-01-14T16:56:49.403Z","type":"quit"}
{"nick":"alkaline","date":"2014-01-14T16:56:49.403Z","type":"join"}
{"nick":"bcraig","message":"but only one person can get away with that in a given c++ file","date":"2014-01-14T16:57:00.318Z","type":"message"}
{"nick":"bcraig","message":"if the OS or a large library normally provides a definition for something, you shouldn't get clever and provide it as well.  It will only cause trouble","date":"2014-01-14T16:57:29.824Z","type":"message"}
{"nick":"bcraig","message":"use your own name, and typedef / #define to the \"real\" ones when present","date":"2014-01-14T16:57:51.969Z","type":"message"}
{"nick":"madewokherd","message":"screw windows, this library is unix-only","date":"2014-01-14T16:58:02.969Z","type":"message"}
{"nick":"madewokherd","message":"windows users can use the real xmllite","date":"2014-01-14T16:58:13.689Z","type":"message"}
{"nick":"bcraig","message":"fair enough","date":"2014-01-14T16:58:39.038Z","type":"message"}
{"nick":"bcraig","message":"it makes sense for this project, but it's not something that every open source project can / should do though","date":"2014-01-14T16:59:18.681Z","type":"message"}
{"nick":"madewokherd","message":"well, most open-source projects wouldn't have any need to use windows types","date":"2014-01-14T17:00:09.267Z","type":"message"}
{"nick":"madewokherd","message":"because they're not going for source-compatibility with a windows library","date":"2014-01-14T17:00:17.910Z","type":"message"}
{"nick":"bcraig","message":"I've seen the reverse happen as well.  Someone will define a unix type on Windows so that they don't have to change the code.","date":"2014-01-14T17:01:26.337Z","type":"message"}
{"nick":"bcraig","message":"for example, defining the \"poll\" function, or something similar","date":"2014-01-14T17:01:36.294Z","type":"message"}
{"nick":"madewokherd","message":"have you seen gnulib?","date":"2014-01-14T17:01:59.145Z","type":"message"}
{"nick":"bcraig","message":"a project I work on #defined errno to ::WSAGetLastError","date":"2014-01-14T17:02:01.092Z","type":"message"}
{"nick":"madewokherd","message":"it's that for every function you could possibly need","date":"2014-01-14T17:02:09.019Z","type":"message"}
{"nick":"bcraig","message":"I have not.  And it sounds like I should be a little scared of it.","date":"2014-01-14T17:02:33.710Z","type":"message"}
{"nick":"madewokherd","message":"I guess if I define COM interfaces with a prefix and don't define any other windows types (use stdint stuff instead), the code using it can conditionally define things to make the code as windowsy as desired","date":"2014-01-14T17:02:58.141Z","type":"message"}
{"nick":"madewokherd","message":"well, really, it's any non-xmllite-specific structs I'd need to define with a prefix","date":"2014-01-14T17:03:44.937Z","type":"message"}
{"nick":"madewokherd","message":"I wonder if it already has a prefix that it uses in practice..","date":"2014-01-14T17:06:00.979Z","type":"message"}
{"nick":"madewokherd","message":"Xml","date":"2014-01-14T17:06:39.871Z","type":"message"}
{"nick":"madewokherd","message":"heh, that's a bit presumptuous too..","date":"2014-01-14T17:06:48.628Z","type":"message"}
{"nick":"madewokherd","message":"but if I were to define IXmlUnknown and IXmlStream that would make a weird sort of sense","date":"2014-01-14T17:07:29.860Z","type":"message"}
{"nick":"sungami","reason":"Ping timeout: 245 seconds","date":"2014-01-14T17:45:00.369Z","type":"quit"}
{"nick":"madewokherd","message":"FearTheCowboy: what are you planning to use as a widechar type on linux?","date":"2014-01-14T18:02:04.003Z","type":"message"}
{"nick":"madewokherd","message":"I guess it'd be either wchar_t, char16_t, or char32_t","date":"2014-01-14T18:04:49.720Z","type":"message"}
{"nick":"madewokherd","message":"and char32_t would be very inconvenient on windows","date":"2014-01-14T18:05:01.596Z","type":"message"}
{"nick":"madewokherd","message":"but I'm not sure if wchar_t is good for use in a shared library","date":"2014-01-14T18:05:21.197Z","type":"message"}
{"nick":"madewokherd","message":"yeah, gcc has a switch that changes the size of wchar_t :/","date":"2014-01-14T18:06:49.239Z","type":"message"}
{"nick":"madewokherd","action":"does \"typedef uint16_t WCHAR\" for now","date":"2014-01-14T18:12:31.759Z","type":"action"}
{"nick":"madewokherd","message":"translating COM to platform-neutral headers manually is more annoying than I expected","date":"2014-01-14T19:04:07.541Z","type":"message"}
{"nick":"bcraig","message":"I believe it","date":"2014-01-14T19:04:56.101Z","type":"message"}
{"nick":"madewokherd","message":"not quite annoying enough to write a preprocessor though","date":"2014-01-14T19:06:07.763Z","type":"message"}
{"nick":"bcraig","message":"I've worked on a product that generated some code with microsoft's MIDL, then used a perl script to modify it","date":"2014-01-14T19:06:45.648Z","type":"message"}
{"nick":"bcraig","message":"it was horrible","date":"2014-01-14T19:06:49.221Z","type":"message"}
{"nick":"auroraeosrose","message":"I believe the uint16 was what was decided but don't quote me","date":"2014-01-14T19:07:19.215Z","type":"message"}
{"nick":"auroraeosrose","message":"I'm a bit brain happy today","date":"2014-01-14T19:07:24.152Z","type":"message"}
{"nick":"sungami","date":"2014-01-14T19:09:16.298Z","type":"join"}
{"nick":"FearTheCowboy","message":"Sorry.. I was out at the dentist.","date":"2014-01-14T19:46:04.236Z","type":"message"}
{"nick":"alkaline","message":"unacceptable.","date":"2014-01-14T19:46:46.161Z","type":"message"}
{"nick":"alkaline","message":":P","date":"2014-01-14T19:46:58.825Z","type":"message"}
{"nick":"bcraig","message":"exactly what I was thinking","date":"2014-01-14T19:47:07.746Z","type":"message"}
{"nick":"FearTheCowboy","message":"I'm not entirely sure which charset I'm going to use on linux yet; I'm thinking possibly C++11's UTF-8 or UTF-16 support would be nice.","date":"2014-01-14T19:47:34.975Z","type":"message"}
{"nick":"FearTheCowboy","message":"I want to write some more test code before I commit one way or the other. Safe enough to use the typedef for now :D","date":"2014-01-14T19:48:19.301Z","type":"message"}
{"nick":"FearTheCowboy","message":"If VC++ handled UTF-8 *at all* I'd have said f'it we're going UTF-8. Unfortuneatly, VC Sux at UTF-8","date":"2014-01-14T19:48:56.640Z","type":"message"}
{"nick":"FearTheCowboy","message":"like... terrrrible.","date":"2014-01-14T19:49:01.974Z","type":"message"}
{"nick":"auroraeosrose","message":"not just vc","date":"2014-01-14T19:49:11.792Z","type":"message"}
{"nick":"auroraeosrose","action":"sighs","date":"2014-01-14T19:49:14.077Z","type":"action"}
{"nick":"auroraeosrose","message":"my #1 request - FIX UTF-8 on windows","date":"2014-01-14T19:49:26.856Z","type":"message"}
{"nick":"auroraeosrose","message":"pretty pretty please","date":"2014-01-14T19:49:30.869Z","type":"message"}
{"nick":"auroraeosrose","action":"cries","date":"2014-01-14T19:49:32.382Z","type":"action"}
{"nick":"FearTheCowboy","message":"Well, Windows is gonna be UCS-2 for ever I'm sure.","date":"2014-01-14T19:49:46.023Z","type":"message"}
{"nick":"FearTheCowboy","message":"but if the damn  compiler wasn't so f'ing clueless... it'd help","date":"2014-01-14T19:50:06.380Z","type":"message"}
{"nick":"FearTheCowboy","message":"Hell, Windows has a CP for UTF-8, but the locale stuff in the CRT doesn't let you use it. What the hell is with *that*!?","date":"2014-01-14T19:50:43.503Z","type":"message"}
{"nick":"bcraig","message":"calling bytes, null terminated ascii strings, utf8 strings, and mbcs strings \"char *\" is a shame","date":"2014-01-14T19:50:50.753Z","type":"message"}
{"nick":"FearTheCowboy","message":"Especially since C++11 introduced native types for UTF-8, -16, and -32","date":"2014-01-14T19:51:24.077Z","type":"message"}
{"nick":"FearTheCowboy","message":"And CLang worked perfectly like I thought it should. Same code on VC doens't even compile. *sigh*","date":"2014-01-14T19:51:50.780Z","type":"message"}
{"nick":"bcraig","message":"I haven't stared at the spec enough to remember if they are new types, or just typedefs.  I hope they are new types","date":"2014-01-14T19:52:02.744Z","type":"message"}
{"nick":"FearTheCowboy","message":"new types","date":"2014-01-14T19:52:08.730Z","type":"message"}
{"nick":"FearTheCowboy","message":"and new UTF string literals ... auto text = u8\"this text is UTF-8\";","date":"2014-01-14T19:52:47.026Z","type":"message"}
{"nick":"FearTheCowboy","message":"bcraig -> as for the VS test suite automation, that code at bitbucket http://j.mp/1j63axd works pretty good for integrating xUnit++ tests into VS","date":"2014-01-14T19:56:00.187Z","type":"message"}
{"nick":"bcraig","message":"I'll have to give that a look over.  thanks","date":"2014-01-14T19:57:18.548Z","type":"message"}
{"nick":"madewokherd","message":"changing the interface to utf8 would probably be difficult for me","date":"2014-01-14T19:59:12.095Z","type":"message"}
{"nick":"madewokherd","message":"since it's all going to be WCHAR-based internally","date":"2014-01-14T19:59:25.748Z","type":"message"}
{"nick":"madewokherd","message":"(and the more diffs I make in the actual code, the harder it is to merge fixes from upstream)","date":"2014-01-14T19:59:43.817Z","type":"message"}
{"nick":"FearTheCowboy","message":"true enough.","date":"2014-01-14T19:59:50.210Z","type":"message"}
{"nick":"FearTheCowboy","message":"work with it that way, we'll have to deal outside of that anyway.","date":"2014-01-14T20:00:02.323Z","type":"message"}
{"nick":"FearTheCowboy","message":"although, XML docs can set the charset in their header line right? <xml charset=\"utf-8\" />","date":"2014-01-14T20:00:31.339Z","type":"message"}
{"nick":"FearTheCowboy","message":"how do we handle that? Do we have to translate the doc to WCHAR first?","date":"2014-01-14T20:00:52.154Z","type":"message"}
{"nick":"mgdm","message":"in the <?xml ?> bit surely? </pedant>","date":"2014-01-14T20:00:58.935Z","type":"message"}
{"nick":"madewokherd","message":"uh, no, xmllite has to figure out the encoding (unless you tell it) and translate it itself as needed","date":"2014-01-14T20:01:24.209Z","type":"message"}
{"nick":"FearTheCowboy","message":"ah, well, then no worry","date":"2014-01-14T20:01:32.623Z","type":"message"}
{"nick":"FearTheCowboy","message":"then I'm fine with the WCHAR","date":"2014-01-14T20:01:46.028Z","type":"message"}
{"nick":"madewokherd","message":"I assume you're going to need an IStream implementation as well","date":"2014-01-14T20:03:20.213Z","type":"message"}
{"nick":"FearTheCowboy","message":"As minimal as possible; the Windows implementation can do that without COM for XMLLite","date":"2014-01-14T20:03:58.879Z","type":"message"}
{"nick":"FearTheCowboy","message":"Isn't it really really a light interface anyway?","date":"2014-01-14T20:04:06.261Z","type":"message"}
{"nick":"madewokherd","message":"it is, but it's completely nonexistent on linux of course","date":"2014-01-14T20:04:19.850Z","type":"message"}
{"nick":"FearTheCowboy","message":"right.","date":"2014-01-14T20:04:24.755Z","type":"message"}
{"nick":"FearTheCowboy","message":"so, yeah.","date":"2014-01-14T20:04:27.682Z","type":"message"}
{"nick":"FearTheCowboy","message":"You know MSBuild is both brilliant and sad at the same time.","date":"2014-01-14T20:05:01.100Z","type":"message"}
{"nick":"madewokherd","message":"I was thinking of just making one based on FILE* but I don't know if you're going to be working with files","date":"2014-01-14T20:05:02.499Z","type":"message"}
{"nick":"madewokherd","message":"I guess I'll need one to run the tests anyway","date":"2014-01-14T20:05:23.173Z","type":"message"}
{"nick":"FearTheCowboy","message":"Hmm. It's possible they may not be, so keep our options open","date":"2014-01-14T20:05:25.169Z","type":"message"}
{"nick":"madewokherd","message":"well, you'll certainly have the option to provide your own","date":"2014-01-14T20:05:43.219Z","type":"message"}
{"nick":"madewokherd","message":"there's no advantage to me in hard-coding the implementation","date":"2014-01-14T20:05:57.260Z","type":"message"}
{"nick":"FearTheCowboy","message":"msbuild would make a great x-plat build tool if it was available on non-windows systems","date":"2014-01-14T20:06:02.296Z","type":"message"}
{"nick":"FearTheCowboy","message":"lol","date":"2014-01-14T20:06:07.118Z","type":"message"}
{"nick":"auroraeosrose","message":"good luck with that","date":"2014-01-14T20:06:11.153Z","type":"message"}
{"nick":"madewokherd","message":"mono has xbuild","date":"2014-01-14T20:06:12.594Z","type":"message"}
{"nick":"auroraeosrose","message":"any news on cmake ;)","date":"2014-01-14T20:06:23.528Z","type":"message"}
{"nick":"madewokherd","message":"probably .net-only though","date":"2014-01-14T20:06:25.441Z","type":"message"}
{"nick":"FearTheCowboy","message":"CMake is still in the thinking process. Pity part is, cmake is often a terrible ratsnest too.","date":"2014-01-14T20:06:56.356Z","type":"message"}
{"nick":"FearTheCowboy","message":"msbuild's model is actually quite nice, if only (a) it was native, not .NET (b) x-plat (c) the VS people would learn how to use it right","date":"2014-01-14T20:07:38.945Z","type":"message"}
{"nick":"bcraig","message":"all the build platforms are horrible.  It's a matter of finding the least bad option","date":"2014-01-14T20:07:46.083Z","type":"message"}
{"nick":"auroraeosrose","message":"I can tell you the most bad","date":"2014-01-14T20:07:55.945Z","type":"message"}
{"nick":"auroraeosrose","action":"stabs autoconf","date":"2014-01-14T20:07:59.275Z","type":"action"}
{"nick":"FearTheCowboy","message":"auroraeosrose -> that goes without saying :D","date":"2014-01-14T20:08:12.226Z","type":"message"}
{"nick":"mgdm","message":"I learned a bit about autoconf recently, enough to build some libraries","date":"2014-01-14T20:08:19.960Z","type":"message"}
{"nick":"madewokherd","message":"wow, \"pure bourne shell\" beat it?","date":"2014-01-14T20:08:20.485Z","type":"message"}
{"nick":"mgdm","message":"I didn't enjoy it","date":"2014-01-14T20:08:22.927Z","type":"message"}
{"nick":"FearTheCowboy","message":"Still, if someone sucked it up and made .targets files for gcc, msbuild would be so usefule.","date":"2014-01-14T20:08:49.642Z","type":"message"}
{"nick":"mgdm","message":"I also liked 'waf' (which is Python)","date":"2014-01-14T20:08:51.165Z","type":"message"}
{"nick":"auroraeosrose","message":"madewokherd yes","date":"2014-01-14T20:08:55.439Z","type":"message"}
{"nick":"mgdm","message":"s/liked/didn't want to set on fire/","date":"2014-01-14T20:09:20.356Z","type":"message"}
{"nick":"madewokherd","action":"makes an XMLWCHAR typedef","date":"2014-01-14T20:17:23.661Z","type":"action"}
{"nick":"FearTheCowboy","message":"lol","date":"2014-01-14T20:17:32.528Z","type":"message"}
{"nick":"madewokherd","message":"I had to do it","date":"2014-01-14T20:17:49.807Z","type":"message"}
{"nick":"madewokherd","message":"it has to be in the public headers, and I have to be able to change it easily","date":"2014-01-14T20:18:02.298Z","type":"message"}
{"nick":"FearTheCowboy","message":"As much effort as this is, I think OneSetup will be orders of magnitude easier to test than any project I've ever done.","date":"2014-01-14T20:41:11.106Z","type":"message"}
{"nick":"FearTheCowboy","message":"now, it'll be nice if someone actually writes the tests, but hey, you can only fix one thing at a time :D","date":"2014-01-14T20:41:38.402Z","type":"message"}
{"nick":"FearTheCowboy","message":"And, no matter what goofy hoops I have to put in place for Windows code to make the lawyers happy, at least anyone can contribute tests.","date":"2014-01-14T20:42:24.023Z","type":"message"}
{"nick":"alkaline","message":"(you should add a little *hint, hint* in there somewhere)","date":"2014-01-14T20:43:33.322Z","type":"message"}
{"nick":"FearTheCowboy","message":"I figured it was implied :D","date":"2014-01-14T20:44:20.435Z","type":"message"}
{"nick":"alkaline","message":"hehe.","date":"2014-01-14T20:45:19.090Z","type":"message"}
{"nick":"alkaline","message":"since i've been obscenely out of the loop, what's going on anyway? :P","date":"2014-01-14T20:45:36.139Z","type":"message"}
{"nick":"FearTheCowboy","message":"well the short of it, is that I'm building a cross-platform component that is a pluggable interface for package managers that will eventually ship in-box in Windows","date":"2014-01-14T20:47:54.527Z","type":"message"}
{"nick":"FearTheCowboy","message":"and we'll be able to plug any MS or third-party package managers into it.","date":"2014-01-14T20:48:11.584Z","type":"message"}
{"nick":"FearTheCowboy","message":"and have common commands for everything.","date":"2014-01-14T20:48:19.856Z","type":"message"}
{"nick":"FearTheCowboy","message":"as well as a remotable WMI (OMI on non-windows) interface for remote management of software","date":"2014-01-14T20:48:57.954Z","type":"message"}
{"nick":"FearTheCowboy","message":"first step is the pluggable API where we can plug in everything from MSIs to Chocolatey, nuget, etc...","date":"2014-01-14T20:49:29.808Z","type":"message"}
{"nick":"FearTheCowboy","message":"so you can in the not-too-distant future use commands like","date":"2014-01-14T20:49:43.612Z","type":"message"}
{"nick":"FearTheCowboy","message":"PS > install-package http://apache.org/httpd","date":"2014-01-14T20:50:01.962Z","type":"message"}
{"nick":"FearTheCowboy","message":"and it just works.","date":"2014-01-14T20:50:04.684Z","type":"message"}
{"nick":"alkaline","message":"is dependency checking done automagically or published by the respective build pkgs?","date":"2014-01-14T20:50:50.388Z","type":"message"}
{"nick":"FearTheCowboy","message":"that's all delegated to the individual pkg handlers","date":"2014-01-14T20:51:07.795Z","type":"message"}
{"nick":"FearTheCowboy","message":"however","date":"2014-01-14T20:51:09.256Z","type":"message"}
{"nick":"FearTheCowboy","message":"if a pkg handler is wise, they can optionally call back into OneSetup to resolve dependencies that aren't theirs","date":"2014-01-14T20:51:30.122Z","type":"message"}
{"nick":"FearTheCowboy","message":"which would then find the appropriate handler","date":"2014-01-14T20:52:04.761Z","type":"message"}
{"nick":"alkaline","message":"ya know, it's still a very enticing concept after all these years...","date":"2014-01-14T20:52:33.614Z","type":"message"}
{"nick":"alkaline","message":"i don't think the vision has changed much; only the use-cases have been modernized a bit.","date":"2014-01-14T20:53:09.975Z","type":"message"}
{"nick":"FearTheCowboy","message":"the big difference is that instead of trying to make one pkgr to solve them all, we just made some universal-super-glue instead","date":"2014-01-14T20:53:47.492Z","type":"message"}
{"nick":"madewokherd","message":"yay, IXmlReader definition compiles on C and C++","date":"2014-01-14T20:53:53.524Z","type":"message"}
{"nick":"FearTheCowboy","message":"Wheeee!","date":"2014-01-14T20:53:58.659Z","type":"message"}
{"nick":"madewokherd","message":"I wonder if they're actually compatible and not broken","date":"2014-01-14T20:54:00.978Z","type":"message"}
{"nick":"alkaline","message":"hmm... so how can i help, FearTheCowboy?","date":"2014-01-14T20:58:27.071Z","type":"message"}
{"nick":"alkaline","message":"and w/ regards to my msgs last week, yeah... relocation is in my future.","date":"2014-01-14T20:59:09.111Z","type":"message"}
{"nick":"FearTheCowboy","message":"as to the first, I'm meeting with our legal folks to go over rules for where I can and can't take contributions, and once that's settled, I'll be creating a project on github, and with that and the contribution procedures, I'd be happy to take any code you could write. ( Tests will for certain be   something I can take contributions for)","date":"2014-01-14T21:01:17.878Z","type":"message"}
{"nick":"FearTheCowboy","message":"my meeting with them is tomorrow.","date":"2014-01-14T21:01:28.804Z","type":"message"}
{"nick":"alkaline","message":"that sounds like good news :)","date":"2014-01-14T21:02:00.444Z","type":"message"}
{"nick":"FearTheCowboy","message":"I'm just putting in all the build plumbing for all the project parts right now (and all the test projects)","date":"2014-01-14T21:02:02.959Z","type":"message"}
{"nick":"FearTheCowboy","message":"Shortly after we actually get the damn thing building some code, we'll have to make build scripts for non-windows","date":"2014-01-14T21:02:48.231Z","type":"message"}
{"nick":"FearTheCowboy","message":"so we can hopefully be building for at least linux at the same time.","date":"2014-01-14T21:03:04.319Z","type":"message"}
{"nick":"FearTheCowboy","message":"As to the second, I'm in my office tomorrow, so ping me on skype tomorrow afternoon, perhaps around 2pm pacific?","date":"2014-01-14T21:04:19.377Z","type":"message"}
{"nick":"madewokherd","message":"https://github.com/madewokherd/xmllite/blob/master/xmllite.h <-- I guess if you really want to, you can try using this in platform-neutral code using xmllite and see if it builds","date":"2014-01-14T21:04:25.760Z","type":"message"}
{"nick":"madewokherd","message":"probably won't work with windows headers imported","date":"2014-01-14T21:04:43.716Z","type":"message"}
{"nick":"madewokherd","message":"and will fail to link of course","date":"2014-01-14T21:04:58.427Z","type":"message"}
{"nick":"FearTheCowboy","message":"I'll try that once I'm finished with integrating all the test stuff.","date":"2014-01-14T21:05:32.116Z","type":"message"}
{"nick":"FearTheCowboy","message":"Hmm. I wonder if I can steal some xmllite test suites from the windows source base :D","date":"2014-01-14T21:05:51.245Z","type":"message"}
{"nick":"FearTheCowboy","message":"hmmmmmmm","date":"2014-01-14T21:05:58.356Z","type":"message"}
{"nick":"madewokherd","message":"I was going to steal them from wine, of course","date":"2014-01-14T21:06:20.430Z","type":"message"}
{"nick":"madewokherd","message":"but that would be pretty cool","date":"2014-01-14T21:06:33.832Z","type":"message"}
{"nick":"FearTheCowboy","message":"the ones in Windows will cover everything. I'll look into that tomorrow, and see how hard they would be to grab","date":"2014-01-14T21:06:58.523Z","type":"message"}
{"nick":"madewokherd","message":"especially if they're C++, then I can actually test the compatibility of those c++ definitions","date":"2014-01-14T21:07:03.722Z","type":"message"}
{"nick":"alkaline","message":"2p Pacific Time?  Thank you, i'll surely hit you up tomorrow.","date":"2014-01-14T21:09:12.163Z","type":"message"}
{"nick":"FearTheCowboy","message":"ok","date":"2014-01-14T21:09:18.173Z","type":"message"}
{"nick":"bcraig","reason":"Ping timeout: 252 seconds","date":"2014-01-14T22:13:23.662Z","type":"quit"}
{"nick":"bcraig","date":"2014-01-14T22:58:13.819Z","type":"join"}
{"nick":"Jeanne-Kamikaze","reason":"Quit: Leaving","date":"2014-01-14T23:03:41.049Z","type":"quit"}
{"nick":"ender`","reason":"Quit:  \"HR?\" \"Human Resources.\" \"In Brussels that kind of department is referred to as the Office for Personkind Enablement. Resources sounds like something you dig out of the ground.\"\t-- Peter F. Hamilton: Great North Road\u000f","date":"2014-01-14T23:08:20.807Z","type":"quit"}
{"nick":"auroraeosrose","reason":"Ping timeout: 245 seconds","date":"2014-01-14T23:43:20.313Z","type":"quit"}
{"nick":"auroraeosrose","date":"2014-01-14T23:51:22.217Z","type":"join"}
