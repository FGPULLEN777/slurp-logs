{"nick":"piscisaureus_","date":"2013-06-27T00:39:35.103Z","type":"join"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-06-27T02:02:03.723Z","type":"quit"}
{"nick":"hanrahat","date":"2013-06-27T05:08:48.113Z","type":"join"}
{"nick":"hanrahat","reason":"Ping timeout: 252 seconds","date":"2013-06-27T05:13:08.019Z","type":"quit"}
{"nick":"madewokherd","reason":"Remote host closed the connection","date":"2013-06-27T05:40:43.446Z","type":"quit"}
{"nick":"ender`","date":"2013-06-27T06:17:18.643Z","type":"join"}
{"nick":"Arnavion","reason":"Quit: Arnavion","date":"2013-06-27T06:33:57.418Z","type":"quit"}
{"nick":"drdanz","date":"2013-06-27T07:07:52.385Z","type":"join"}
{"nick":"Arnavion","date":"2013-06-27T07:15:56.703Z","type":"join"}
{"nick":"cH40z-Lord","reason":"*.net *.split","date":"2013-06-27T07:35:08.873Z","type":"quit"}
{"nick":"ender|","reason":"*.net *.split","date":"2013-06-27T07:35:09.114Z","type":"quit"}
{"nick":"Arnavion","reason":"*.net *.split","date":"2013-06-27T07:35:09.233Z","type":"quit"}
{"nick":"ender`","reason":"*.net *.split","date":"2013-06-27T07:35:09.379Z","type":"quit"}
{"nick":"gix-","reason":"*.net *.split","date":"2013-06-27T07:35:10.446Z","type":"quit"}
{"nick":"[[zz]]","reason":"*.net *.split","date":"2013-06-27T07:35:10.446Z","type":"quit"}
{"nick":"ChanServ","reason":"*.net *.split","date":"2013-06-27T07:35:11.621Z","type":"quit"}
{"nick":"drdanz","reason":"*.net *.split","date":"2013-06-27T07:35:12.320Z","type":"quit"}
{"nick":"FearTheCowboy","reason":"*.net *.split","date":"2013-06-27T07:35:12.740Z","type":"quit"}
{"nick":"TReKiE","reason":"*.net *.split","date":"2013-06-27T07:35:12.740Z","type":"quit"}
{"nick":"azeno_","reason":"*.net *.split","date":"2013-06-27T07:35:13.458Z","type":"quit"}
{"nick":"stalled","reason":"*.net *.split","date":"2013-06-27T07:35:14.391Z","type":"quit"}
{"nick":"AtashiCon","reason":"*.net *.split","date":"2013-06-27T07:35:16.113Z","type":"quit"}
{"nick":"ln-","reason":"*.net *.split","date":"2013-06-27T07:35:17.112Z","type":"quit"}
{"nick":"sungami","reason":"*.net *.split","date":"2013-06-27T07:35:17.363Z","type":"quit"}
{"nick":"Arnavion","date":"2013-06-27T07:37:44.717Z","type":"join"}
{"nick":"drdanz","date":"2013-06-27T07:37:44.988Z","type":"join"}
{"nick":"ender`","date":"2013-06-27T07:37:44.988Z","type":"join"}
{"nick":"gix-","date":"2013-06-27T07:37:44.988Z","type":"join"}
{"nick":"[[zz]]","date":"2013-06-27T07:37:44.988Z","type":"join"}
{"nick":"AtashiCon","date":"2013-06-27T07:37:44.988Z","type":"join"}
{"nick":"cH40z-Lord","date":"2013-06-27T07:37:44.988Z","type":"join"}
{"nick":"ln-","date":"2013-06-27T07:37:44.988Z","type":"join"}
{"nick":"azeno_","date":"2013-06-27T07:37:44.988Z","type":"join"}
{"nick":"ender|","date":"2013-06-27T07:37:44.988Z","type":"join"}
{"nick":"FearTheCowboy","date":"2013-06-27T07:37:44.988Z","type":"join"}
{"nick":"TReKiE","date":"2013-06-27T07:37:44.989Z","type":"join"}
{"nick":"stalled","date":"2013-06-27T07:37:44.989Z","type":"join"}
{"nick":"sungami","date":"2013-06-27T07:37:44.989Z","type":"join"}
{"nick":"ChanServ","date":"2013-06-27T07:37:44.989Z","type":"join"}
{"nick":"Arnavion","reason":"Quit: Arnavion","date":"2013-06-27T08:20:52.607Z","type":"quit"}
{"nick":"Arnavion","date":"2013-06-27T08:22:16.529Z","type":"join"}
{"nick":"Arnavion","reason":"Quit: Arnavion","date":"2013-06-27T09:35:03.960Z","type":"quit"}
{"nick":"Arnavion","date":"2013-06-27T09:35:49.384Z","type":"join"}
{"nick":"theshadow","reason":"Quit: theshadow","date":"2013-06-27T13:18:55.150Z","type":"quit"}
{"nick":"theshadow","date":"2013-06-27T14:02:04.004Z","type":"join"}
{"nick":"johne53","date":"2013-06-27T14:12:36.899Z","type":"join"}
{"nick":"johne53","message":"Arnavion: John Emmas here... we were talking with Garrett a couple of weeks ago (over on #hexchat). You mentioned that you'd built the Gtk stack (which I've also done). But I wondered if you've ever built the C++ modules (glibmm / gtkmm etc). I'm just starting them but they're not easy to build with MSVC :-(","date":"2013-06-27T14:25:15.958Z","type":"message"}
{"nick":"auroraeosrose","message":"do they need patches for them? build errors? or just hard to get the right config stuff?","date":"2013-06-27T14:27:43.162Z","type":"message"}
{"nick":"vit122","date":"2013-06-27T14:29:52.007Z","type":"join"}
{"nick":"johne53","message":"auroraeorose: The Git sources contain (almost) no source or header files. They all need to get generated by a macro processor called 'M4' (some old 'Kernighan & Richie' thing). AFAICT there isn't a standalone version of M4 for Windows. I can only get it by installing some other Windows build system, such as Cygwin :-(","date":"2013-06-27T14:35:58.314Z","type":"message"}
{"nick":"auroraeosrose","message":"....","date":"2013-06-27T14:38:51.545Z","type":"message"}
{"nick":"auroraeosrose","message":"LOL - you mean autotools","date":"2013-06-27T14:38:59.640Z","type":"message"}
{"nick":"auroraeosrose","message":"yeah a lot of open sources uses that","date":"2013-06-27T14:39:03.929Z","type":"message"}
{"nick":"auroraeosrose","message":"use msys","date":"2013-06-27T14:39:07.902Z","type":"message"}
{"nick":"auroraeosrose","message":"not cygwin","date":"2013-06-27T14:39:10.276Z","type":"message"}
{"nick":"auroraeosrose","message":"you can put the windows linker and compiler in your path and run ./configure","date":"2013-06-27T14:39:23.214Z","type":"message"}
{"nick":"auroraeosrose","message":"it'll work - we do that for a lot of projects","date":"2013-06-27T14:39:36.121Z","type":"message"}
{"nick":"johne53","message":"auroraeorose: Thanks, I figured it'd be something like that. It's just so annoying to have to install one build system, before your preferred build system will work ;-)","date":"2013-06-27T14:41:51.843Z","type":"message"}
{"nick":"auroraeosrose","message":"you just need autotools and a bash shell - msys will give you that","date":"2013-06-27T14:41:55.198Z","type":"message"}
{"nick":"auroraeosrose","message":"yeah, I know - nuts","date":"2013-06-27T14:42:00.877Z","type":"message"}
{"nick":"auroraeosrose","message":"if you can, just commit the generated files","date":"2013-06-27T14:42:10.335Z","type":"message"}
{"nick":"johne53","message":"auroraeorose: Thanks.","date":"2013-06-27T14:42:24.574Z","type":"message"}
{"nick":"auroraeosrose","message":"when you're done - to the coapp magic branch ;)","date":"2013-06-27T14:42:25.603Z","type":"message"}
{"nick":"auroraeosrose","message":"no problem","date":"2013-06-27T14:42:27.563Z","type":"message"}
{"nick":"auroraeosrose","message":"note - you just need msys, NOT mingw","date":"2013-06-27T14:43:28.355Z","type":"message"}
{"nick":"vpovirk","date":"2013-06-27T14:44:04.541Z","type":"join"}
{"nick":"auroraeosrose","message":"I think you may have to tell it what linker to use too, it's been a bit since I've done the nonsense ;)","date":"2013-06-27T14:44:13.617Z","type":"message"}
{"nick":"auroraeosrose","message":"vpovirk: when you run configure in msys with msvc compiler/linker - you have to tell it what linker correct? it's been awhile ;)","date":"2013-06-27T14:44:47.217Z","type":"message"}
{"nick":"johne53","message":"auroraeorose: Excellent...  I think I already have TDM-GCC installed somewhere (it's a variation on MinGW) but I've never used it for anything.","date":"2013-06-27T14:45:07.933Z","type":"message"}
{"nick":"FearTheCowboy","message":"Chuckle-of-the-day --- we built the BerkeleyDB package, for the typical pivots... the package file came out to 1.08 GB","date":"2013-06-27T14:48:24.093Z","type":"message"}
{"nick":"FearTheCowboy","message":"O_O","date":"2013-06-27T14:48:26.747Z","type":"message"}
{"nick":"FearTheCowboy","message":"I guess that work to split up packages into finer peices is gonna have to come sooner rather than later.","date":"2013-06-27T14:49:10.532Z","type":"message"}
{"nick":"vpovirk","message":"auroraeosrose: I'm not sure I've ever done that","date":"2013-06-27T14:50:04.262Z","type":"message"}
{"nick":"auroraeosrose","message":"johne53: errr - yeah... that won't work","date":"2013-06-27T14:52:05.974Z","type":"message"}
{"nick":"auroraeosrose","message":";)","date":"2013-06-27T14:52:08.772Z","type":"message"}
{"nick":"auroraeosrose","message":"unless you want to compile with that","date":"2013-06-27T14:52:12.985Z","type":"message"}
{"nick":"auroraeosrose","message":"msys is just the tools - bash, autotools, etc","date":"2013-06-27T14:52:18.902Z","type":"message"}
{"nick":"auroraeosrose","message":"no compiler or anything","date":"2013-06-27T14:52:23.188Z","type":"message"}
{"nick":"johne53","message":"auroraeorose: I've got a vague feeling that TDM-GCC is some kind of \"souped up\" version of MinGW (i.e. with MSYS and various other things already included). I'll have to see if I can find it again.","date":"2013-06-27T14:59:53.308Z","type":"message"}
{"nick":"FearTheCowboy","message":"oh, and FYI, I got parallel building working in PTK now -- we can build projects against multiple compilers/platforms/arches all at the same time :D","date":"2013-06-27T15:08:31.559Z","type":"message"}
{"nick":"FearTheCowboy","message":"I really gotta document this stuff.","date":"2013-06-27T15:08:37.563Z","type":"message"}
{"nick":"auroraeosrose","message":"FearTheCowboy: yeah but ptk doesn't run ./configure ;)","date":"2013-06-27T15:09:41.876Z","type":"message"}
{"nick":"FearTheCowboy","message":"no, it don't. :(","date":"2013-06-27T15:10:01.892Z","type":"message"}
{"nick":"FearTheCowboy","message":"but, if Rafael would free up a day somwhere, I think we can get the trace -> mkProject stuff working... then you could build it once in mingw/GCC and generate the VCXproj files fromt hat.","date":"2013-06-27T15:10:53.938Z","type":"message"}
{"nick":"auroraeosrose","message":"that still doesn't fix build systems that use configure to generate code","date":"2013-06-27T15:11:09.489Z","type":"message"}
{"nick":"auroraeosrose","message":"there are LOT that do that","date":"2013-06-27T15:11:13.506Z","type":"message"}
{"nick":"auroraeosrose","message":"(I own two)","date":"2013-06-27T15:11:19.865Z","type":"message"}
{"nick":"auroraeosrose","action":"hides","date":"2013-06-27T15:11:25.963Z","type":"action"}
{"nick":"FearTheCowboy","message":"Yeah, we hates that.","date":"2013-06-27T15:11:30.674Z","type":"message"}
{"nick":"FearTheCowboy","message":"in the short-to-mid-term, we pretty much have to capture the commands that generate that code and either (a) run them as custom steps in the vc build, or (b) preseve the generated files.","date":"2013-06-27T15:12:10.961Z","type":"message"}
{"nick":"FearTheCowboy","message":"The other option is to install the GnuWin binaries, which works for some situations","date":"2013-06-27T15:13:19.310Z","type":"message"}
{"nick":"FearTheCowboy","message":"chocolatey has an  install for that. It's not *terrible* ... :S","date":"2013-06-27T15:13:32.079Z","type":"message"}
{"nick":"FearTheCowboy","message":"hmm. M4 is in there.","date":"2013-06-27T15:13:41.298Z","type":"message"}
{"nick":"FearTheCowboy","message":"hmm. so is autoconf ... does that stuff acutally work!?","date":"2013-06-27T15:14:30.201Z","type":"message"}
{"nick":"auroraeosrose","message":"well some of gnuwin32 is on our build list already yes","date":"2013-06-27T15:14:33.507Z","type":"message"}
{"nick":"auroraeosrose","message":"yes","date":"2013-06-27T15:14:36.236Z","type":"message"}
{"nick":"auroraeosrose","message":"in fact you can even do non-complicated stuff with gnuwin32 binaries and powershell","date":"2013-06-27T15:14:50.417Z","type":"message"}
{"nick":"auroraeosrose","action":"has done great evil","date":"2013-06-27T15:14:55.141Z","type":"action"}
{"nick":"FearTheCowboy","message":"hmm. That's interesting.","date":"2013-06-27T15:15:12.164Z","type":"message"}
{"nick":"auroraeosrose","message":"and evil","date":"2013-06-27T15:15:19.694Z","type":"message"}
{"nick":"FearTheCowboy","message":"Well, in the short-to-mid term, I think we're going to take a dependency on chocolatey (at least under-the-covers) as a way to get tools in a standardized way.","date":"2013-06-27T15:16:07.529Z","type":"message"}
{"nick":"FearTheCowboy","message":"I should add that support in today.","date":"2013-06-27T15:16:19.230Z","type":"message"}
{"nick":"FearTheCowboy","message":"if I can ever fully wake up.","date":"2013-06-27T15:16:36.510Z","type":"message"}
{"nick":"azeno_","reason":"Quit: No Ping reply in 180 seconds.","date":"2013-06-27T15:20:06.083Z","type":"quit"}
{"nick":"azeno","date":"2013-06-27T15:20:12.002Z","type":"join"}
{"nick":"FearTheCowboy","message":"DERP: http://www.hanselman.com/blog/10NewFeaturesInWindows81PreviewThatSavedMySurfaceRT.aspx","date":"2013-06-27T15:21:24.457Z","type":"message"}
{"nick":"FearTheCowboy","message":"#1 \"BEING ABLE TO USE YOUR DESKTOP WALLPAPER AS YOUR START MENU BACKGROUND\" ...  uh, really? who cares about the background of the start screen. I mean *really*!?","date":"2013-06-27T15:22:12.890Z","type":"message"}
{"nick":"auroraeosrose","message":"yo mama!","date":"2013-06-27T15:22:22.515Z","type":"message"}
{"nick":"FearTheCowboy","message":"Ok, outlook would be nice.","date":"2013-06-27T15:22:27.299Z","type":"message"}
{"nick":"FearTheCowboy","message":"as for the rest... big-whoop-de-doo.","date":"2013-06-27T15:22:47.949Z","type":"message"}
{"nick":"vpovirk","message":"how good is outlook at rss?","date":"2013-06-27T15:29:57.283Z","type":"message"}
{"nick":"FearTheCowboy","message":"Dunno, never really tried it.","date":"2013-06-27T15:31:01.676Z","type":"message"}
{"nick":"johne53","message":"@FearThecowboy: I was telling out team leader about NuGet / CoApp etc and ke asked me to find out something....","date":"2013-06-27T15:51:46.774Z","type":"message"}
{"nick":"FearTheCowboy","message":"shoot","date":"2013-06-27T15:52:37.070Z","type":"message"}
{"nick":"johne53","message":"Great idea to have a FOSS repo available for Windows. It could include apps and libraries, like we all discussed - but what about paid-for s/ware that gets distributed via some kind of installer? How can we prevent if from over-writing DLLs already downloaded (i.e. DLL hell)? Would it be preferable to have a dedicated installer (wix?) which is intelligent enough to get libraries from the repo","date":"2013-06-27T15:54:53.893Z","type":"message"}
{"nick":"johne53","message":"- so that installers don't need to ship them?","date":"2013-06-27T15:54:54.242Z","type":"message"}
{"nick":"vpovirk","message":"this is what sxs is for","date":"2013-06-27T15:56:05.049Z","type":"message"}
{"nick":"johne53","message":"vpovirk: Yes - and it works well for Microsoft DLLs (C runtime etc) but will it work for 3rd party DLLs?","date":"2013-06-27T15:57:08.326Z","type":"message"}
{"nick":"FearTheCowboy","message":"Yeah, SxS will work for third party stuff perfectly fine.","date":"2013-06-27T15:57:27.538Z","type":"message"}
{"nick":"vpovirk","message":"3rd party DLL's are more what it's designed for, as I understand it","date":"2013-06-27T15:57:34.348Z","type":"message"}
{"nick":"vpovirk","message":"it gives each third party a namespace, based on their public key, so they won't conflict with each other","date":"2013-06-27T15:58:02.177Z","type":"message"}
{"nick":"johne53","message":"vpovirk: @FearTheCowboy: Great, I wasn't sure of that so thought I should flag it up...","date":"2013-06-27T15:58:35.740Z","type":"message"}
{"nick":"FearTheCowboy","message":"I'm planning on working with WiX over the next year to make this a very simple thing","date":"2013-06-27T15:58:45.263Z","type":"message"}
{"nick":"FearTheCowboy","message":"so that installers can just reference a common package like that","date":"2013-06-27T15:58:58.683Z","type":"message"}
{"nick":"FearTheCowboy","message":"and get them at install time (and can get independently updated when necessary)","date":"2013-06-27T15:59:22.278Z","type":"message"}
{"nick":"FearTheCowboy","message":"it's what CoApp was originally going to be, but we're going to merge all that functionality into WiX itself","date":"2013-06-27T15:59:41.702Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: Yes, that's exactly what's needed I think.","date":"2013-06-27T15:59:56.817Z","type":"message"}
{"nick":"FearTheCowboy","message":"so that any application install can use it","date":"2013-06-27T15:59:59.023Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: I'm still not 100% clear about the difference between NuGet and CoApp. Is CoApp just the overall project name and NuGet is the Repo name?","date":"2013-06-27T16:01:10.511Z","type":"message"}
{"nick":"FearTheCowboy","message":"I'll likely actually start that work in the fall, over the summer I'm just putting the last tweaks into the NuGet side of stuff","date":"2013-06-27T16:01:13.001Z","type":"message"}
{"nick":"FearTheCowboy","message":"so, for the immediate term, I wouldn't invest a lot of time into it quite yet.","date":"2013-06-27T16:01:39.109Z","type":"message"}
{"nick":"vpovirk","message":"nuget is an entirely separate project","date":"2013-06-27T16:02:15.803Z","type":"message"}
{"nick":"vpovirk","message":"but nuget was originally a package manager for developers to get .NET libraries only","date":"2013-06-27T16:02:55.843Z","type":"message"}
{"nick":"FearTheCowboy","message":"CoApp and NuGet had some overlaps, so we adapted to get NuGet updated to support native libraries.","date":"2013-06-27T16:03:03.750Z","type":"message"}
{"nick":"vpovirk","message":"also coapp produces tools for building those native nuget libraries (which as I understand it will also be able to build other things in the future)","date":"2013-06-27T16:03:50.226Z","type":"message"}
{"nick":"FearTheCowboy","message":"most of the work for that ended up being in the magic of acutally packaging, and the NuGet folks don't really do anything complex there, so I kept the tools for doing this as the \"CoApp powershell tools\"","date":"2013-06-27T16:03:52.229Z","type":"message"}
{"nick":"vpovirk","action":"should really just let FearTheCowboy talk about this stuff, but this is more fun","date":"2013-06-27T16:04:19.781Z","type":"action"}
{"nick":"FearTheCowboy","message":"LOL","date":"2013-06-27T16:04:24.667Z","type":"message"}
{"nick":"johne53","message":"FearTheCowboy: Is CoApp a prject that's evolving / merging with NuGet to provide support for FOSS libraries?","date":"2013-06-27T16:05:38.708Z","type":"message"}
{"nick":"FearTheCowboy","message":"Let's put it this way: CoApp was originally going to be a Package Management system, but over the last year, I've come to the realization that we're better off integrating with the popular stuff directly, so CoApp's just becoming a toolset for using those systems, and an effort to bootstrap the repositories","date":"2013-06-27T16:06:05.450Z","type":"message"}
{"nick":"FearTheCowboy","message":"We'll likely never actually merge the native package building with the nuget stuff -- it's *really* complex and they're not really equipped to maintain it.","date":"2013-06-27T16:06:43.863Z","type":"message"}
{"nick":"FearTheCowboy","message":"but the packages can be *used* by developers without anything more than NuGet itself","date":"2013-06-27T16:07:07.568Z","type":"message"}
{"nick":"FearTheCowboy","message":"And, as we go, I keep making more tools/cmdlets for automating native build processes a lot.","date":"2013-06-27T16:07:33.136Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: and remind me what Chocolatey is? That's something similar from an outside party?","date":"2013-06-27T16:07:33.941Z","type":"message"}
{"nick":"FearTheCowboy","message":"Chocolatey is a really thin vaneer on top of NuGet that abuses it to make a general purpose package management system","date":"2013-06-27T16:08:16.995Z","type":"message"}
{"nick":"FearTheCowboy","message":"it's really not that good, but good enough in the short term","date":"2013-06-27T16:08:25.805Z","type":"message"}
{"nick":"FearTheCowboy","message":"it's a potential security nightmare (so I wouldn't really recommend it for non-techies)","date":"2013-06-27T16:08:47.705Z","type":"message"}
{"nick":"theshadow","reason":"Ping timeout: 240 seconds","date":"2013-06-27T16:08:54.170Z","type":"quit"}
{"nick":"theshado_","date":"2013-06-27T16:08:54.438Z","type":"join"}
{"nick":"FearTheCowboy","message":"and its codebase is a ratsnest of pain and suffering.","date":"2013-06-27T16:09:02.865Z","type":"message"}
{"nick":"FearTheCowboy","message":"but it works... mostly.","date":"2013-06-27T16:09:11.054Z","type":"message"}
{"nick":"FearTheCowboy","message":"http://chocolatey.org/","date":"2013-06-27T16:09:23.782Z","type":"message"}
{"nick":"FearTheCowboy","message":"at its heart, it's just a way of automating installs of stuff, not a true package management system","date":"2013-06-27T16:09:51.313Z","type":"message"}
{"nick":"FearTheCowboy","message":"When we get package support added to WiX, chocolatey will be an awful lot less useful.","date":"2013-06-27T16:10:25.021Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: So, let's suppose I (and Arnavion) have produced some GNU libraries, how do we co-ordinate it all so you can add them to where..? NuGet?","date":"2013-06-27T16:12:00.161Z","type":"message"}
{"nick":"FearTheCowboy","message":"The best way to handle this is to adapt the build process that you have to the one that the CoApp tools can use (which isn't well documented at this point)... which allows us to trivially build the same library for many different variations (and combinations of variations) ... think VC12, VC11, VC10  * Release, Debug * static, dynamic * X64, X86 ...","date":"2013-06-27T16:13:54.374Z","type":"message"}
{"nick":"FearTheCowboy","message":"I have a cmdlet that can take a typical VCXPROJ file and generate a new one that can be built against all combinations of variations with a single command","date":"2013-06-27T16:14:36.725Z","type":"message"}
{"nick":"FearTheCowboy","message":"(the invoke-build cmdlet -- what we often call 'ptk' )","date":"2013-06-27T16:14:53.066Z","type":"message"}
{"nick":"FearTheCowboy","message":"once I catch up on the stuff I'm trying to get past, I'll work with you guys to get this done.","date":"2013-06-27T16:15:51.421Z","type":"message"}
{"nick":"FearTheCowboy","message":"from there, it becomes much easier to maintain this stuff, each library can be built, packaged and published independently  in a reliable fashion","date":"2013-06-27T16:16:56.288Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: Yes, it's coming back to me now. I'm currently using VS2005 which was too old to accommodate any of this but with my MSDN subscription, that should get solved now.","date":"2013-06-27T16:16:57.484Z","type":"message"}
{"nick":"FearTheCowboy","message":"indeed.","date":"2013-06-27T16:17:09.860Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: I guess your main task is to produce at least _some_ documentation as a starting point for us.","date":"2013-06-27T16:17:48.708Z","type":"message"}
{"nick":"FearTheCowboy","message":"Yeah. I have a couple more scripts I need to finish up (mainly making it so that some tools can be installed in a standardized way) and then I can start working with you to do this. It's gonna be a bootstrap-levitation process where I generate the docs as I work thru this stuff with you guys as an example","date":"2013-06-27T16:19:30.130Z","type":"message"}
{"nick":"FearTheCowboy","message":"the goal is to get it simple enough that you can go to a fresh machine with a minimal set of stuff installed (VS, git and the CoApp tools) and do a simple 'git clone ...' and 'invoke-build ...' for a given project, and that should work.","date":"2013-06-27T16:21:21.149Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: Great. We probably need to decide also on some kind of standardised naming scheme for the DLLs etc - and probably even some standardised build settings. I'ts going to get very confused if I build with certain settings enabled while Arnavion usually has them disabled (or whatever).","date":"2013-06-27T16:26:06.945Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: For example, because building a fully optimized Release project can be very time consuing, I tend to build 3 x build targets for our projects:- 1) Debug, 2) Release and 3) \"Debuggable Release (unoptimized)","date":"2013-06-27T16:27:55.776Z","type":"message"}
{"nick":"FearTheCowboy","message":"So, we've come up with a set of patterns for that ... we try to keep all the DLL and LIB files the same name, and generate into unique paths that have all the variations in them","date":"2013-06-27T16:28:59.125Z","type":"message"}
{"nick":"FearTheCowboy","message":"this way, it's WAAAAY simpler to make it so that consuming developers don't have to futz with things to consume a library (or change their mind how they consume it)","date":"2013-06-27T16:29:33.783Z","type":"message"}
{"nick":"FearTheCowboy","message":"the build settings are generally constrained to a set of common files (so that *everything* we build is built in a similar fashion)","date":"2013-06-27T16:30:32.647Z","type":"message"}
{"nick":"FearTheCowboy","message":"and developers are doing accidental one-off changes on a given build (which really, is not a good idea)","date":"2013-06-27T16:30:52.225Z","type":"message"}
{"nick":"FearTheCowboy","message":"this also makes it easy to simplfiy the hell out of the actual VCXPRoj files that each project has","date":"2013-06-27T16:31:43.836Z","type":"message"}
{"nick":"vpovirk","message":"do optimizations really get in the way of debugging?","date":"2013-06-27T16:31:52.466Z","type":"message"}
{"nick":"vpovirk","message":"somehow I thought that wasn't the case anymore","date":"2013-06-27T16:32:07.823Z","type":"message"}
{"nick":"johne53","message":"vpovirk: It always seems to for me (although I'm currently using VC2005)","date":"2013-06-27T16:32:43.682Z","type":"message"}
{"nick":"FearTheCowboy","message":"aggressive optimizations *can* (PGO-style stuff) ... and even regular optimizations can make it so some things aren't inspectable.","date":"2013-06-27T16:32:46.079Z","type":"message"}
{"nick":"FearTheCowboy","message":"but generally, a decent DEBUG build should suffice. (which should be very close to what people call \"debuggable release\")","date":"2013-06-27T16:33:44.675Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: It's extremely rare for us to need the Debuggable Release version - but there are very rare occasions where a bug exhibits itself in the Release build but not in the Debug build.","date":"2013-06-27T16:35:17.827Z","type":"message"}
{"nick":"FearTheCowboy","message":"johne53 -> this is an example of one of our VCXProj files: https://github.com/coapp-packages/freeglut/blob/master/COPKG/freeglut.vcxproj","date":"2013-06-27T16:35:38.184Z","type":"message"}
{"nick":"FearTheCowboy","message":"I'd argue that they DEBUG build should be more like the \"debuggable release\" build then :D","date":"2013-06-27T16:35:56.315Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: Rmember too that GUN libraries tend to have a LOT of auto-generated stuff. If you're auto-generating for every build, the projects are permanently out of date (i.e. building a Debug target makes the Release target out of date and vice-versa). So we put all that auto-generation stuff into the Debuggable Release target (which we only rarely need to build). It saves a lot of","date":"2013-06-27T16:39:11.345Z","type":"message"}
{"nick":"johne53","message":"unneccessary rebuilding!","date":"2013-06-27T16:39:11.618Z","type":"message"}
{"nick":"johne53","message":"GNU, not GUN ;)","date":"2013-06-27T16:39:34.393Z","type":"message"}
{"nick":"vpovirk","message":"we'd probably put those in the intermediate directory, or outside the vcxproj entirely","date":"2013-06-27T16:40:04.359Z","type":"message"}
{"nick":"vpovirk","message":"but even if you're not using coapp tools, it seems like you'd be better off with a separate project for them","date":"2013-06-27T16:40:55.413Z","type":"message"}
{"nick":"johne53","message":"vpovirk: Possibly - but the nice thing about it is that we almost have a 'one click' build solution for the whole GTK+ stack. Absolutely everything gets built, even the files that need to get auto-generated. It's pretty neat.","date":"2013-06-27T16:43:02.123Z","type":"message"}
{"nick":"FearTheCowboy","message":"The one-click is kinda nice, except that encourages tighter dependencies than are sometimes necessary","date":"2013-06-27T16:44:03.453Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: Your vcxproj doesn't look too bad. I've never needed to use one before now.","date":"2013-06-27T16:44:16.077Z","type":"message"}
{"nick":"FearTheCowboy","message":"when each item is independently 'one-click' (or at close to it), doing a whole stack is kinda trivial","date":"2013-06-27T16:44:43.586Z","type":"message"}
{"nick":"vpovirk","message":"how is that different from a project that depends on another project?","date":"2013-06-27T16:44:55.626Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: Yes. The tighter dependencies are helpful to us but probably not so good for what you want.","date":"2013-06-27T16:45:11.453Z","type":"message"}
{"nick":"FearTheCowboy","message":"Still, having a gtk-stack meta-project is trivial to do, and would get you exactly the same thing (and allow you to build and publish *all* the variations of everything in a one-click fashion)","date":"2013-06-27T16:46:23.994Z","type":"message"}
{"nick":"FearTheCowboy","message":"of course, it might take a day or two to build it all :D","date":"2013-06-27T16:46:40.165Z","type":"message"}
{"nick":"johne53","message":"vpovirk: What's nice about it is that we don't need to leave Visual Studio. Everthing gets built automatically. It's appealing for us.","date":"2013-06-27T16:47:30.670Z","type":"message"}
{"nick":"vpovirk","message":"well, sure, but you wouldn't anyway","date":"2013-06-27T16:48:08.526Z","type":"message"}
{"nick":"vpovirk","message":"as long as all relevant projects are in the same solution","date":"2013-06-27T16:48:18.671Z","type":"message"}
{"nick":"johne53","message":"vpovirk: Yes, we just have one solution with a long chain of dependent projects.","date":"2013-06-27T16:49:32.369Z","type":"message"}
{"nick":"FearTheCowboy","message":"our vcxproj files are buildable from VS still. But I do have a todo to generate a .sln file.","date":"2013-06-27T16:49:46.932Z","type":"message"}
{"nick":"FearTheCowboy","message":"having a mega-solution can be awful handy for a ton of developers","date":"2013-06-27T16:50:31.161Z","type":"message"}
{"nick":"johne53","message":"I've never used a vcxproj file so far. I'll have to do some reading about them.","date":"2013-06-27T16:50:54.998Z","type":"message"}
{"nick":"FearTheCowboy","message":"well, you've used vcproj files in VS2005 - this is the evolution of that stuff (evolved to be common for all MS languages)","date":"2013-06-27T16:52:01.342Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: Yes. I live in Manchester (UK) but all the other devs are in USA (and are mostly non-Windows users) so I try to simplify everything for them.","date":"2013-06-27T16:52:03.243Z","type":"message"}
{"nick":"johne53","message":"I know the pain of having to build all this stuff on Linux, which I'm not familiar with - so a simple solution is really good for us!","date":"2013-06-27T16:53:43.152Z","type":"message"}
{"nick":"FearTheCowboy","message":"Hmm. I think I can do a generator for a mega-sln file. We can may have to add a couple lines into our common vcxproj stuff to pick up sibling-libraries from the build location instead of the nuget-package path, but shouldn't be terribly difficult.","date":"2013-06-27T16:57:54.910Z","type":"message"}
{"nick":"FearTheCowboy","message":"I think I can even make it so that all the variations show up as different configurations in the configuration manager.","date":"2013-06-27T16:58:44.827Z","type":"message"}
{"nick":"FearTheCowboy","message":"pity that could be 30+ configurations, but at least you could trivially pick one and build.","date":"2013-06-27T16:59:11.529Z","type":"message"}
{"nick":"johne53","message":"@FearTheCowboy: Neat!","date":"2013-06-27T16:59:22.570Z","type":"message"}
{"nick":"FearTheCowboy","message":"the hardest problem is actually that crappy SLN format, wihch isn't well structured, and breaks at the slightest issues. (silly VS people :p)","date":"2013-06-27T17:00:33.987Z","type":"message"}
{"nick":"FearTheCowboy","message":"and I don't believe there is any programatic code for manipulating them","date":"2013-06-27T17:00:57.826Z","type":"message"}
{"nick":"theshado_","reason":"Quit: theshado_","date":"2013-06-27T17:00:58.504Z","type":"quit"}
{"nick":"johne53","message":"@FearTheCowboy: Yes, I've noticed that! BTW - did you say that current VS offerings (VC12 etc) can build a project as if it had been built with an earlier compiler or did I imagine that? i.e. would it be necessary to have all the different compilers available to build all the different versions?","date":"2013-06-27T17:02:40.977Z","type":"message"}
{"nick":"FearTheCowboy","message":"You need to have the earlier VC versions installed, but once you do, it's just a configuration change to support older compilers","date":"2013-06-27T17:03:37.732Z","type":"message"}
{"nick":"FearTheCowboy","message":"you don't have to change IDEs or anything","date":"2013-06-27T17:03:51.903Z","type":"message"}
{"nick":"FearTheCowboy","message":"(although they hide it in the properties window -- it's called 'PlatformToolset'","date":"2013-06-27T17:04:30.163Z","type":"message"}
{"nick":"FearTheCowboy","message":"oh, and MS didn't actually include the support for VC 6,7,8 -- you need to install the stuff from http://daffodil.codeplex.com","date":"2013-06-27T17:05:09.560Z","type":"message"}
{"nick":"theshadow","date":"2013-06-27T17:05:14.064Z","type":"join"}
{"nick":"theshadow","reason":"Max SendQ exceeded","date":"2013-06-27T17:05:17.018Z","type":"quit"}
{"nick":"FearTheCowboy","message":"I think I'm going to include that in the coapp tools tho'","date":"2013-06-27T17:05:19.609Z","type":"message"}
{"nick":"FearTheCowboy","message":"soon","date":"2013-06-27T17:05:20.667Z","type":"message"}
{"nick":"theshadow","date":"2013-06-27T17:05:54.051Z","type":"join"}
{"nick":"Arnavion","message":"<johne53> Arnavion: John Emmas here... we were talking with Garrett a couple of weeks ago (over on #hexchat). You mentioned that you'd built the Gtk stack (which I've also done). But I wondered if you've ever built the C++ modules (glibmm / gtkmm etc). I'm just starting them but they're not easy to build with MSVC :-(","date":"2013-06-27T17:05:58.532Z","type":"message"}
{"nick":"Arnavion","message":"Nope","date":"2013-06-27T17:06:02.934Z","type":"message"}
{"nick":"Arnavion","message":"HC is entirely C","date":"2013-06-27T17:06:12.429Z","type":"message"}
{"nick":"Arnavion","message":"Also in the last few days new versions of things came out","date":"2013-06-27T17:07:09.042Z","type":"message"}
{"nick":"Arnavion","message":"https://github.com/hexchat/gtk-win32/issues/10","date":"2013-06-27T17:07:11.459Z","type":"message"}
{"nick":"Arnavion","message":"Fun~","date":"2013-06-27T17:07:13.143Z","type":"message"}
{"nick":"johne53","message":"Arnavion: Is hexchat an IRC client? I use mIRC at the moment but I don't like it much.","date":"2013-06-27T17:08:46.591Z","type":"message"}
{"nick":"Arnavion","message":"Yes","date":"2013-06-27T17:08:56.263Z","type":"message"}
{"nick":"FearTheCowboy","message":"Hmm. there's a codeplex project that can generate sln files.","date":"2013-06-27T17:08:59.348Z","type":"message"}
{"nick":"Arnavion","message":"Why do you need to generate sln files?","date":"2013-06-27T17:09:14.202Z","type":"message"}
{"nick":"Arnavion","message":"Here at SQL we just write a dirs.proj that includes all the .*proj we want and open that","date":"2013-06-27T17:09:35.024Z","type":"message"}
{"nick":"Arnavion","message":"because VS has the weird behavior of where it doesn't build references dependency projects if they're not in the solution","date":"2013-06-27T17:09:51.146Z","type":"message"}
{"nick":"Arnavion","message":"referenced*","date":"2013-06-27T17:09:58.139Z","type":"message"}
{"nick":"johne53","message":"Arnavion: Will it 'beep' me if someone replies with my name? mIRC does do that - but only when it feels like it :-(","date":"2013-06-27T17:10:21.315Z","type":"message"}
{"nick":"Arnavion","message":"Yes","date":"2013-06-27T17:10:30.050Z","type":"message"}
{"nick":"Arnavion","message":"The only feature it doesn't have from mIRC is the existence of a retarded scripting language","date":"2013-06-27T17:10:47.325Z","type":"message"}
{"nick":"johne53","message":"Arnavion: Hmmm... I might try it.","date":"2013-06-27T17:10:48.391Z","type":"message"}
{"nick":"FearTheCowboy","message":"Arnavion -> one of the things I want to do is make it trivial for devs to build any variation (platform/linkage/platformatoolset/debugrelease/etc)  from the IDE that we can build from the command line","date":"2013-06-27T17:13:48.422Z","type":"message"}
{"nick":"Arnavion","message":"FearTheCowboy: Yes, and you can do the same thing with an overarching .proj file that references all the projects you want to build","date":"2013-06-27T17:14:21.130Z","type":"message"}
{"nick":"FearTheCowboy","message":"you have an example of one? Does it just have a ton of <ProjectReference> nodes in it?","date":"2013-06-27T17:16:09.150Z","type":"message"}
{"nick":"Arnavion","message":"Yes","date":"2013-06-27T17:16:45.041Z","type":"message"}
{"nick":"FearTheCowboy","message":"when dependent projects build, what are they using for $(SolutionDir) ?","date":"2013-06-27T17:16:46.344Z","type":"message"}
{"nick":"FearTheCowboy","action":"wishes that VS would have thrown out SLN files years ago...","date":"2013-06-27T17:17:17.714Z","type":"action"}
{"nick":"Arnavion","message":"I figure for SolutionDir they probably use the most common part of root of all the projects","date":"2013-06-27T17:18:40.137Z","type":"message"}
{"nick":"vpovirk","message":"I'm not sure if I understand the use case for a solution builder","date":"2013-06-27T17:18:55.374Z","type":"message"}
{"nick":"Arnavion","message":"So if you have C:\\foo\\one\\one.vcxproj and C:\\foo\\two\\two.vcxproj, the SolutionDir would be the most common part of the two ProjectDir's - C:\\Foo","date":"2013-06-27T17:19:15.120Z","type":"message"}
{"nick":"Arnavion","message":"That's how it looks like when you open the combined project too","date":"2013-06-27T17:19:34.476Z","type":"message"}
{"nick":"Arnavion","message":"Instead of having all the projects at the top level (like with opening sln files), they appear under a directory hierarchy","date":"2013-06-27T17:20:03.859Z","type":"message"}
{"nick":"FearTheCowboy","message":"Are you hand-making those?","date":"2013-06-27T17:20:41.753Z","type":"message"}
{"nick":"Arnavion","message":"Yes","date":"2013-06-27T17:20:51.214Z","type":"message"}
{"nick":"Arnavion","message":"They're called dirs.proj by convention and they're regular msbuild projects","date":"2013-06-27T17:21:12.184Z","type":"message"}
{"nick":"Arnavion","message":"<Project ToolsVersion=\"4.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">","date":"2013-06-27T17:21:13.553Z","type":"message"}
{"nick":"Arnavion","message":"Then an <ItemGroup>","date":"2013-06-27T17:21:20.565Z","type":"message"}
{"nick":"vpovirk","message":"I'm concerned that any information in .buildinfo about non-msbuild steps would have to be duplicated","date":"2013-06-27T17:21:23.223Z","type":"message"}
{"nick":"Arnavion","message":"Inside that, all the <ProjectReference> that are needed","date":"2013-06-27T17:21:29.921Z","type":"message"}
{"nick":"FearTheCowboy","message":"hmm. that does sound a bit less silly","date":"2013-06-27T17:21:51.177Z","type":"message"}
{"nick":"Arnavion","message":"Any common <Import> for props files before and after the ItemGroup","date":"2013-06-27T17:21:55.145Z","type":"message"}
{"nick":"FearTheCowboy","message":"So, properties from the top-level get propogated down to the Referenced projects? Hmmm.","date":"2013-06-27T17:22:46.732Z","type":"message"}
{"nick":"Arnavion","message":"Yes","date":"2013-06-27T17:22:54.926Z","type":"message"}
{"nick":"FearTheCowboy","message":"vpovirk -> the .buildinfo would be the source of the generated sln, but perhaps not even needed at all.","date":"2013-06-27T17:23:11.985Z","type":"message"}
{"nick":"FearTheCowboy","action":"now has to go and twiddle with this.","date":"2013-06-27T17:23:28.222Z","type":"action"}
{"nick":"vpovirk","message":":|","date":"2013-06-27T17:23:50.697Z","type":"message"}
{"nick":"Arnavion","message":"You only need the dirs.proj thing if your projects don't have dependencies between them","date":"2013-06-27T17:23:59.301Z","type":"message"}
{"nick":"vpovirk","message":"this seems completely out of coapp's scope to me","date":"2013-06-27T17:24:16.892Z","type":"message"}
{"nick":"Arnavion","message":"If one.vcxproj and two.vcxproj have nothing in common, then you need a dirs.proj to be able to open both of them","date":"2013-06-27T17:24:17.378Z","type":"message"}
{"nick":"Arnavion","message":"But if one.vcxproj already has a ProjectReference to two.vcxproj, then you don't need a dirs.proj","date":"2013-06-27T17:24:34.113Z","type":"message"}
{"nick":"Arnavion","message":"Just open one.vcxproj directly. It'll open two.vcxproj in the same solution","date":"2013-06-27T17:24:50.302Z","type":"message"}
{"nick":"Arnavion","message":"So I think the problem you're trying to solve doesn't even exist in the first place","date":"2013-06-27T17:25:10.483Z","type":"message"}
{"nick":"vpovirk","message":"VS isn't going to do a good job of editing our vcxproj files","date":"2013-06-27T17:25:45.717Z","type":"message"}
{"nick":"FearTheCowboy","message":"We haven't use Project References between projects at all, since we tend to build projects atomically and then reference the generated  package","date":"2013-06-27T17:25:50.582Z","type":"message"}
{"nick":"Arnavion","message":"I see","date":"2013-06-27T17:26:10.487Z","type":"message"}
{"nick":"vpovirk","message":"so at best you'll end up with the equivalent of ptk but selecting only one target and via a gui","date":"2013-06-27T17:26:22.000Z","type":"message"}
{"nick":"FearTheCowboy","message":"vpovirk -> pretty much. which can be good if you're actually working on the project instead of just packaging it (like we do...)","date":"2013-06-27T17:27:02.452Z","type":"message"}
{"nick":"vpovirk","message":"if people only want a few types of builds, they don't need to be using our tools","date":"2013-06-27T17:27:13.943Z","type":"message"}
{"nick":"FearTheCowboy","message":"No, but if we encourage people to drop the lousy vcxproj files and just use ours, they're gonna want to do the things they are used to.","date":"2013-06-27T17:27:48.314Z","type":"message"}
{"nick":"Arnavion","message":"At SQL we all know not to modify the projects from within VS","date":"2013-06-27T17:28:17.049Z","type":"message"}
{"nick":"Arnavion","message":"We do it by hand","date":"2013-06-27T17:28:19.302Z","type":"message"}
{"nick":"FearTheCowboy","message":"LOL","date":"2013-06-27T17:28:20.892Z","type":"message"}
{"nick":"FearTheCowboy","message":"generally speaking, that's good policy :D","date":"2013-06-27T17:28:32.350Z","type":"message"}
{"nick":"vpovirk","message":"and it's not our job to add features (like ability to switch between static/dynamic easily) that the VS people don't think are necessary","date":"2013-06-27T17:28:33.593Z","type":"message"}
{"nick":"Arnavion","message":"Yep","date":"2013-06-27T17:28:35.103Z","type":"message"}
{"nick":"vpovirk","message":"let the VS authors fix VS","date":"2013-06-27T17:29:15.687Z","type":"message"}
{"nick":"FearTheCowboy","message":"vpovirk -> that's really not the big deal. Just making it easy to build whatever they are working on from the IDE is","date":"2013-06-27T17:29:24.809Z","type":"message"}
{"nick":"Arnavion","message":"At any rate, even if someone does modify the VS project","date":"2013-06-27T17:29:38.369Z","type":"message"}
{"nick":"FearTheCowboy","message":"I'm not trying to fix anything. Just make sure that they can open up and start working.","date":"2013-06-27T17:29:40.164Z","type":"message"}
{"nick":"Arnavion","message":"The VS project doesn't matter, does it? Only the .buildinfo does?","date":"2013-06-27T17:29:47.645Z","type":"message"}
{"nick":"Arnavion","message":"So what's the problem?","date":"2013-06-27T17:29:51.938Z","type":"message"}
{"nick":"vpovirk","message":"who is going to use our vcxproj template and want to do this?","date":"2013-06-27T17:30:08.684Z","type":"message"}
{"nick":"vpovirk","message":"for consuming them, you can use a nuget package, and for editing them you're not going to get good results from VS","date":"2013-06-27T17:31:53.235Z","type":"message"}
{"nick":"FearTheCowboy","message":"If I'm an active developer on zlib, I'm going to want to work from the IDE.","date":"2013-06-27T17:32:02.557Z","type":"message"}
{"nick":"FearTheCowboy","message":"I'm not saying they are going to edit the vcxproj file in VS (which still works, btw), but they are going to want to compile, debug and run from there.","date":"2013-06-27T17:32:32.754Z","type":"message"}
{"nick":"Arnavion","message":"That doesn't work now?","date":"2013-06-27T17:32:40.058Z","type":"message"}
{"nick":"FearTheCowboy","message":"For an individual project, sure.","date":"2013-06-27T17:33:01.212Z","type":"message"}
{"nick":"FearTheCowboy","message":"for one that depends on another, right *now*, you have to have project A generate the .nupkg file and project B update their reference to that","date":"2013-06-27T17:33:32.912Z","type":"message"}
{"nick":"FearTheCowboy","message":"Ideally if I'm working on two related projects, it'd be kinda nice to open up VS and make changes where needed, and hit compile and have it do the right thing.","date":"2013-06-27T17:34:18.740Z","type":"message"}
{"nick":"FearTheCowboy","message":"Like I said, we don't have any inter *project* references right now, just project -> package dependencies.","date":"2013-06-27T17:35:03.187Z","type":"message"}
{"nick":"Arnavion","message":"So you want to be able to second-guess whether the user wants to build dependency projects or whether they want to use the DLL off nuget?","date":"2013-06-27T17:35:04.110Z","type":"message"}
{"nick":"vpovirk","message":"by \"projects\" do you mean vcxproj files, or repos?","date":"2013-06-27T17:35:05.113Z","type":"message"}
{"nick":"FearTheCowboy","message":"Arnavion -> yes. ( :D ) .. I'd like them to have the option of doing what they'd like","date":"2013-06-27T17:35:40.218Z","type":"message"}
{"nick":"Arnavion","message":"So make it an option for the .buildinfo -> vcxproj file generator","date":"2013-06-27T17:36:05.742Z","type":"message"}
{"nick":"Arnavion","message":"They'll have to be conscious of it the first time","date":"2013-06-27T17:36:15.853Z","type":"message"}
{"nick":"FearTheCowboy","message":"vpovirk -> technically, both. freeglut  has like 10 vcxproj files that are bound by the buildinfo. but nothing right now inside of VS","date":"2013-06-27T17:36:25.916Z","type":"message"}
{"nick":"Arnavion","message":"and they can't mix and match","date":"2013-06-27T17:36:28.845Z","type":"message"}
{"nick":"FearTheCowboy","message":"Arnavion -> that's pretty much what I'm thinking.","date":"2013-06-27T17:36:45.176Z","type":"message"}
{"nick":"Arnavion","message":"Alternatively generate two vcxproj files, one for sources builds and one for nuget DLLs builds","date":"2013-06-27T17:36:45.824Z","type":"message"}
{"nick":"Arnavion","message":"Let the user decide which","date":"2013-06-27T17:36:53.307Z","type":"message"}
{"nick":"Arnavion","message":"which they want to use*","date":"2013-06-27T17:37:06.771Z","type":"message"}
{"nick":"FearTheCowboy","message":"Arnavion -> they can be the same file, the common files can use properties to drive which way they want it.","date":"2013-06-27T17:37:18.490Z","type":"message"}
{"nick":"Arnavion","message":"How would they set those properties from within VS?","date":"2013-06-27T17:37:42.592Z","type":"message"}
{"nick":"vpovirk","message":"I just don't think we have the information to do this without manual intervention that's required anyway","date":"2013-06-27T17:37:43.573Z","type":"message"}
{"nick":"FearTheCowboy","message":"Arnavion -> We already generate .xml files that populate settings in the VC properties window, this could be done for dependency library source selection","date":"2013-06-27T17:38:56.964Z","type":"message"}
{"nick":"Arnavion","message":"Ah","date":"2013-06-27T17:39:08.389Z","type":"message"}
{"nick":"Arnavion","message":"That would work","date":"2013-06-27T17:39:12.332Z","type":"message"}
{"nick":"vpovirk","message":"how do you know when to remove a dependency on a nuget package, in favor of a dep on another project and a properties file that (afaik) would have to be generated based on the autopkg file?","date":"2013-06-27T17:39:19.934Z","type":"message"}
{"nick":"Arnavion","message":"vpovirk: That is what he said. He'll give a setting in the properties window in VS to toggle that","date":"2013-06-27T17:39:51.612Z","type":"message"}
{"nick":"FearTheCowboy","message":"oddly enough I have this EXACT same problem right now with the coapp tools. I have the clrplus libraries built seperately in a seperate sln than the coapp.powershell project","date":"2013-06-27T17:40:36.272Z","type":"message"}
{"nick":"FearTheCowboy","message":"I had to manually tweak the coapp.powershell project to peek next door for outputs first.","date":"2013-06-27T17:40:58.504Z","type":"message"}
{"nick":"vpovirk","message":"but you couldn't add new projects from within the VS gui","date":"2013-06-27T17:41:02.192Z","type":"message"}
{"nick":"FearTheCowboy","message":"it's still a bit glitchy.","date":"2013-06-27T17:41:10.447Z","type":"message"}
{"nick":"vpovirk","message":"you'd need some sort of generator to actually add the dependent projects","date":"2013-06-27T17:41:20.556Z","type":"message"}
{"nick":"FearTheCowboy","message":"vpovirk -> Yeah. Ideally.","date":"2013-06-27T17:41:47.053Z","type":"message"}
{"nick":"Arnavion","message":"It's a matter of replacing all the <Reference Nuget-sourced DLL /> with <ProjectReference path to downloaded project />","date":"2013-06-27T17:42:35.607Z","type":"message"}
{"nick":"vpovirk","message":"ideally, VS would understand all of our stuff and have a wonderful gui built around it, and also any features not specific to us would just be merged into it","date":"2013-06-27T17:42:46.738Z","type":"message"}
{"nick":"vpovirk","message":"what you're talking about can never be described as \"ideal\"","date":"2013-06-27T17:43:43.791Z","type":"message"}
{"nick":"FearTheCowboy","message":"Arnavion -> ideally. except native references are handled implemented as <Import>ed .targets and .props files that are found in the packages directory","date":"2013-06-27T17:43:50.548Z","type":"message"}
{"nick":"FearTheCowboy","message":"I'm gonna go talk with the VS/VC folks about some of this stuff soon anyway... there are some issues with building store apps that pull in libraries that I don't think anyone has thought thru all the way.","date":"2013-06-27T17:44:12.712Z","type":"message"}
{"nick":"Arnavion","message":"By the way","date":"2013-06-27T17:45:06.212Z","type":"message"}
{"nick":"FearTheCowboy","message":"I've actually been considering altering the <Import>'d .targets files to do a <ProjectReference> to a synthetic project","date":"2013-06-27T17:45:16.331Z","type":"message"}
{"nick":"Arnavion","message":"What's the status of this .buildinfo -> vcxproj generator?","date":"2013-06-27T17:45:25.872Z","type":"message"}
{"nick":"Arnavion","message":"It's not functional right now?","date":"2013-06-27T17:45:31.101Z","type":"message"}
{"nick":"vpovirk","message":"the status is that he just made it up, which (I'm hoping) means it doesn't have to ever really be built","date":"2013-06-27T17:46:12.595Z","type":"message"}
{"nick":"Arnavion","message":"Huh? Why?","date":"2013-06-27T17:46:36.648Z","type":"message"}
{"nick":"FearTheCowboy","message":"the vcxproj generation (harvesting from old vcxproj files) works, and binding them together with .buildifo works","date":"2013-06-27T17:46:42.504Z","type":"message"}
{"nick":"drdanz","reason":"Read error: Connection reset by peer","date":"2013-06-27T17:46:52.609Z","type":"quit"}
{"nick":"FearTheCowboy","message":"I added support to parallel build variations this week, and we tested it by building BerkeleyDB in all its flavors","date":"2013-06-27T17:47:27.024Z","type":"message"}
{"nick":"vpovirk","message":"I don't want it taking up time that could be spent on other things","date":"2013-06-27T17:47:47.349Z","type":"message"}
{"nick":"FearTheCowboy","message":"It built just fine... but produced a (compressed) 1.08gb package (3+ gb uncompressed)","date":"2013-06-27T17:48:02.217Z","type":"message"}
{"nick":"johne53","date":"2013-06-27T17:48:43.956Z","type":"quit"}
{"nick":"FearTheCowboy","message":"I want to add the stuff to buildinfo to specify the required tools and automate the dependent libraries (since that's still a bit manual) and I think we're ready to try and start working on gtk","date":"2013-06-27T17:49:02.266Z","type":"message"}
{"nick":"vpovirk","message":"I thought we were already ready to try to build anything and package any library","date":"2013-06-27T17:49:46.553Z","type":"message"}
{"nick":"FearTheCowboy","message":"vpovirk -> we *can* but if you're missing tools we don't have a way to get them consistently. (this is a tiny thing, really...)","date":"2013-06-27T17:50:33.560Z","type":"message"}
{"nick":"FearTheCowboy","message":"I'm also writing a DCR to change the generator to split up the redistributables of a nuget package to finer grained packages, since NuGet can't practically handle stuff over 200mb-ish","date":"2013-06-27T17:50:59.409Z","type":"message"}
{"nick":"FearTheCowboy","message":"But I won't get to coding that till after July 15th","date":"2013-06-27T17:51:19.256Z","type":"message"}
{"nick":"FearTheCowboy","message":"I'm still making the spec for that.","date":"2013-06-27T17:53:26.883Z","type":"message"}
{"nick":"FearTheCowboy","message":"but that won't affect any of the .buildinfo or .autopkg source files, just what gets generated.","date":"2013-06-27T17:53:57.797Z","type":"message"}
{"nick":"FearTheCowboy","message":"and If I can squeeze in some fix to support libraries for store apps (where they have items they want in the Toolbox), I think I'll make some more friends. I just can't find any docs on any of that tho'","date":"2013-06-27T17:55:02.832Z","type":"message"}
{"nick":"FearTheCowboy","message":"I don't think they made that work right except with ExtensionSDKs (which suck, and they *know* they suck...)","date":"2013-06-27T17:55:38.857Z","type":"message"}
{"nick":"stalled","reason":"Ping timeout: 260 seconds","date":"2013-06-27T17:57:36.098Z","type":"quit"}
{"nick":"stalled","date":"2013-06-27T18:11:25.867Z","type":"join"}
{"nick":"jgmdev","date":"2013-06-27T18:13:53.323Z","type":"join"}
{"nick":"cH40z-Lord","reason":"Quit: Wenn 2 im Raum sind, 3 raus gehen, dann muss einer zurückkommen, dass keiner mehr da ist.","date":"2013-06-27T19:22:53.789Z","type":"quit"}
{"nick":"drdanz","date":"2013-06-27T20:25:17.149Z","type":"join"}
{"nick":"drdanz","reason":"Read error: Connection reset by peer","date":"2013-06-27T20:32:44.278Z","type":"quit"}
{"nick":"drdanz","date":"2013-06-27T20:34:38.032Z","type":"join"}
{"nick":"vit122","reason":"Remote host closed the connection","date":"2013-06-27T20:51:59.854Z","type":"quit"}
{"nick":"theshadow","reason":"Ping timeout: 240 seconds","date":"2013-06-27T21:03:34.276Z","type":"quit"}
{"nick":"vit122","date":"2013-06-27T21:19:01.075Z","type":"join"}
{"nick":"drdanz","reason":"Remote host closed the connection","date":"2013-06-27T21:32:55.124Z","type":"quit"}
{"nick":"[[zzz]]","date":"2013-06-27T21:38:25.781Z","type":"join"}
{"nick":"cH40z-Lord","date":"2013-06-27T21:38:55.117Z","type":"join"}
{"nick":"vpovirk","reason":"Remote host closed the connection","date":"2013-06-27T21:40:42.562Z","type":"quit"}
{"nick":"[[zz]]","reason":"Ping timeout: 240 seconds","date":"2013-06-27T21:41:54.071Z","type":"quit"}
{"nick":"theshadow","date":"2013-06-27T21:52:05.083Z","type":"join"}
{"nick":"ender`","reason":"Quit:  #define sizeof(x) ((rand() % 100 == 42) ? sizeof(x)-1 : sizeof(x))\u000f","date":"2013-06-27T22:00:46.408Z","type":"quit"}
{"nick":"madewokherd","date":"2013-06-27T22:11:08.401Z","type":"join"}
{"nick":"drdanz","date":"2013-06-27T22:15:18.344Z","type":"join"}
{"nick":"drdanz","reason":"Remote host closed the connection","date":"2013-06-27T22:16:23.028Z","type":"quit"}
{"nick":"drdanz","date":"2013-06-27T22:18:22.979Z","type":"join"}
{"nick":"drdanz","reason":"Remote host closed the connection","date":"2013-06-27T22:19:18.326Z","type":"quit"}
{"nick":"drdanz","date":"2013-06-27T22:20:01.061Z","type":"join"}
{"nick":"drdanz","reason":"Read error: Connection reset by peer","date":"2013-06-27T22:20:10.648Z","type":"quit"}
{"nick":"drdanz","date":"2013-06-27T22:22:01.170Z","type":"join"}
{"nick":"drdanz","reason":"Remote host closed the connection","date":"2013-06-27T22:40:30.373Z","type":"quit"}
{"nick":"drdanz","date":"2013-06-27T22:42:25.081Z","type":"join"}
{"nick":"drdanz","reason":"Remote host closed the connection","date":"2013-06-27T22:47:27.289Z","type":"quit"}
{"nick":"drdanz","date":"2013-06-27T22:49:30.176Z","type":"join"}
{"nick":"drdanz","reason":"Read error: Connection reset by peer","date":"2013-06-27T22:49:39.275Z","type":"quit"}
