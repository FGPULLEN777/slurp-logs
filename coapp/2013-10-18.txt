{"nick":"bcraig","reason":"Ping timeout: 246 seconds","date":"2013-10-18T00:03:46.979Z","type":"quit"}
{"nick":"coyo","reason":"Disconnected by services","date":"2013-10-18T02:19:35.973Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-10-18T03:06:58.834Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 245 seconds","date":"2013-10-18T05:06:41.694Z","type":"quit"}
{"nick":"ender`","date":"2013-10-18T06:33:31.676Z","type":"join"}
{"nick":"ender|","message":"WTF Microsoft: http://eternallybored.org/Image1.png","date":"2013-10-18T09:01:01.252Z","type":"message"}
{"nick":"ender|","message":"(look at the weird scaling)","date":"2013-10-18T09:05:43.927Z","type":"message"}
{"nick":"bcraig","date":"2013-10-18T12:30:53.582Z","type":"join"}
{"nick":"bcraig","reason":"Ping timeout: 265 seconds","date":"2013-10-18T12:39:35.478Z","type":"quit"}
{"nick":"bcraig","date":"2013-10-18T13:05:39.193Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-10-18T14:19:57.453Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 272 seconds","date":"2013-10-18T14:47:47.218Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-10-18T14:49:41.433Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 272 seconds","date":"2013-10-18T14:57:55.219Z","type":"quit"}
{"nick":"auroraeosrose","date":"2013-10-18T15:05:52.634Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-10-18T15:46:32.415Z","type":"join"}
{"nick":"auroraeosrose","reason":"Read error: Connection reset by peer","date":"2013-10-18T15:50:27.283Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 272 seconds","date":"2013-10-18T15:51:45.189Z","type":"quit"}
{"nick":"vpovirk","date":"2013-10-18T16:32:54.189Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-10-18T16:35:39.038Z","type":"join"}
{"nick":"ender|","message":"meeting today?","date":"2013-10-18T16:38:05.684Z","type":"message"}
{"nick":"HamishC","date":"2013-10-18T16:56:49.317Z","type":"join"}
{"nick":"FearTheCowboy","date":"2013-10-18T17:16:15.273Z","type":"join"}
{"nick":"FearTheCowboy","message":"Quick CoApp meeting this 10:30 morning: https://join.microsoft.com/meet/garretts/HZ96LF57  #JoinAnytime","date":"2013-10-18T17:17:00.821Z","type":"message"}
{"nick":"vpovirk","message":"I missed it, sorry :(","date":"2013-10-18T17:57:57.993Z","type":"message"}
{"nick":"vpovirk","message":"forgot these were a thing","date":"2013-10-18T17:58:22.649Z","type":"message"}
{"nick":"FearTheCowboy","message":"s'ok. nothing important this week;","date":"2013-10-18T18:03:01.066Z","type":"message"}
{"nick":"bcraig","message":"something I've been meaning to ask... I know there is work being done to make it so that clients only need to download the pivots that they are actually using.  Is there an example of how to do that?","date":"2013-10-18T18:05:37.096Z","type":"message"}
{"nick":"bcraig","message":"I know it isn't necessarily production ready at this point, but I'd like to start wrapping my head around how to use it","date":"2013-10-18T18:05:57.542Z","type":"message"}
{"nick":"FearTheCowboy","message":"gimme a couple seconds.","date":"2013-10-18T18:06:49.784Z","type":"message"}
{"nick":"FearTheCowboy","message":"So in the next version of the tools, each pivot combination generates a seperate container for the files that are in that pivot combination.","date":"2013-10-18T18:13:01.141Z","type":"message"}
{"nick":"FearTheCowboy","message":"The .targets/.props files determine which pivots are needed at compile time","date":"2013-10-18T18:13:17.319Z","type":"message"}
{"nick":"bcraig","message":"is this \"container\" a different technology, or is it just a bunch of nuget packages with dependencies linking them together?","date":"2013-10-18T18:14:37.415Z","type":"message"}
{"nick":"FearTheCowboy","message":"just another nuget file (that just contains the files, no .targets and .props)","date":"2013-10-18T18:15:12.441Z","type":"message"}
{"nick":"FearTheCowboy","message":"it doesn't have dependency data in it either","date":"2013-10-18T18:15:23.160Z","type":"message"}
{"nick":"FearTheCowboy","message":"the main package has the smarts to determine what it needs at compile time","date":"2013-10-18T18:15:47.687Z","type":"message"}
{"nick":"bcraig","message":"does this file-only package show up in regular searches on nuget.org?","date":"2013-10-18T18:16:02.734Z","type":"message"}
{"nick":"FearTheCowboy","message":"and includes an msbuild extension task and a nuget extension that makes it all work together","date":"2013-10-18T18:16:11.183Z","type":"message"}
{"nick":"FearTheCowboy","message":"no, it won't, if you use the publish-nugetpackage cmdlet","date":"2013-10-18T18:16:45.798Z","type":"message"}
{"nick":"FearTheCowboy","message":"since it uploads the overlay versions and then marks them as unlisted","date":"2013-10-18T18:17:04.474Z","type":"message"}
{"nick":"FearTheCowboy","message":"it also just means you can specify the base package, and it picks up all the overlays without you having to upload them all individually","date":"2013-10-18T18:17:31.539Z","type":"message"}
{"nick":"bcraig","message":"gotcha.  Is there a prototype zlib (or some other package) in a github repo that I can look at that does this?","date":"2013-10-18T18:18:13.336Z","type":"message"}
{"nick":"FearTheCowboy","message":"the .autopkg script actually doesn't change at all to make this happen","date":"2013-10-18T18:18:47.604Z","type":"message"}
{"nick":"FearTheCowboy","message":"you can update to the \"development version\" (my off-the-cuff builds) of the tools  by using update-coapptools -devlopment -killpowershells","date":"2013-10-18T18:19:31.101Z","type":"message"}
{"nick":"FearTheCowboy","message":"and if you generate a package, you should get the new one with the overlay pgks.","date":"2013-10-18T18:19:52.622Z","type":"message"}
{"nick":"bcraig","message":"hmm, ok.","date":"2013-10-18T18:20:24.201Z","type":"message"}
{"nick":"ender|","message":"...and i'm back","date":"2013-10-18T18:20:59.809Z","type":"message"}
{"nick":"ender|","message":"(and missed the meeting)","date":"2013-10-18T18:21:09.238Z","type":"message"}
{"nick":"FearTheCowboy","message":"I've also been tweaking the impelemtation of the stuff that copies bin files to the output folder (so that you can generate arbitrary collections of files and do arbitrary things with them)","date":"2013-10-18T18:23:43.206Z","type":"message"}
{"nick":"FearTheCowboy","message":"you can see some of the progress that was made if you look at the conversations: https://github.com/coapp/coapp.powershell/issues?state=open","date":"2013-10-18T18:24:37.694Z","type":"message"}
{"nick":"bcraig","message":"so... sort of a cross between the nuget use case and the chocolatey use case?","date":"2013-10-18T18:24:43.076Z","type":"message"}
{"nick":"bcraig","message":"like if I wanted to package a static lib and a code generator in my package, and have the .targets / .props invoke the code generator some way","date":"2013-10-18T18:25:17.499Z","type":"message"}
{"nick":"FearTheCowboy","message":"that's *possible*, but I'd have to make an example of how to make that work right.","date":"2013-10-18T18:26:04.539Z","type":"message"}
{"nick":"FearTheCowboy","message":"wouldn't require any tool changes tho;","date":"2013-10-18T18:26:17.120Z","type":"message"}
{"nick":"bcraig","message":"the dream there is to have the input file just be listed as a source file, and have the tool automatically invoked on that source file.  I have no idea how hard that is though","date":"2013-10-18T18:26:57.335Z","type":"message"}
{"nick":"bcraig","message":"It almost feels like have a way of adding a new language to the project system (though not necessarily the editor)","date":"2013-10-18T18:27:22.080Z","type":"message"}
{"nick":"vpovirk","message":"I feel like the nasm package did that..","date":"2013-10-18T18:29:16.646Z","type":"message"}
{"nick":"vpovirk","message":"but maybe I misunderstood","date":"2013-10-18T18:29:25.942Z","type":"message"}
{"nick":"FearTheCowboy","message":"Yeah, kindof.","date":"2013-10-18T18:29:40.573Z","type":"message"}
{"nick":"FearTheCowboy","message":"it's not terribly hard, just not well documented","date":"2013-10-18T18:30:20.464Z","type":"message"}
{"nick":"FearTheCowboy","message":"nor good examples","date":"2013-10-18T18:30:25.940Z","type":"message"}
{"nick":"FearTheCowboy","message":"and I think the nasm one doesn't quite work right either nowth athI think about it","date":"2013-10-18T18:30:45.054Z","type":"message"}
{"nick":"bcraig","message":"well, if I have a bad example and a week or so to tinker with it, I -might- be able to make a good example with a real product","date":"2013-10-18T18:31:33.148Z","type":"message"}
{"nick":"FearTheCowboy","message":"After I get the next version of the tools out (which is only days away) perhaps we can spend a couple days and make a good go of this with something like nasm","date":"2013-10-18T18:32:14.409Z","type":"message"}
{"nick":"bcraig","message":"well, the selfish project I had in mind was Apache Thrift, but sure :)","date":"2013-10-18T18:32:41.454Z","type":"message"}
{"nick":"bcraig","message":"nasm is almost certainly farther along right now, as I haven't even started making the nuget packages for thrift yet","date":"2013-10-18T18:33:30.583Z","type":"message"}
{"nick":"bcraig","message":"I'm just happy that there is a boost that is good enough to limp along with","date":"2013-10-18T18:33:45.501Z","type":"message"}
{"nick":"FearTheCowboy","message":"hmm. thrift would be a good idea too.","date":"2013-10-18T18:33:49.146Z","type":"message"}
{"nick":"FearTheCowboy","message":"So, just so that I'm clear on how you think about thrift working, you'd like to put thrift source files into your project so that when you hit build, it generates the C/C++, and passes that along to the Compiler task.","date":"2013-10-18T18:38:59.704Z","type":"message"}
{"nick":"bcraig","message":"right","date":"2013-10-18T18:39:17.073Z","type":"message"}
{"nick":"bcraig","message":"so the project file view (whatever it's called) might have two files in it, main.cpp, and foo.thrift","date":"2013-10-18T18:39:39.754Z","type":"message"}
{"nick":"bcraig","message":"and the project would figure out that main.cpp, and three other cpp files need to get passed to cl","date":"2013-10-18T18:40:11.120Z","type":"message"}
{"nick":"FearTheCowboy","message":"and you'd include the thift-exe that in the package itself.","date":"2013-10-18T18:40:29.716Z","type":"message"}
{"nick":"FearTheCowboy","message":"Yeah, we can totally do that.","date":"2013-10-18T18:40:34.683Z","type":"message"}
{"nick":"bcraig","message":"yep","date":"2013-10-18T18:40:35.568Z","type":"message"}
{"nick":"bcraig","message":"what if you need to inspect the .thrift file to figure out the names of the .cpp files?","date":"2013-10-18T18:41:16.412Z","type":"message"}
{"nick":"bcraig","message":"and by \"inspect\", I mean run the thrift-exe with some extra flags to find out the names of those files","date":"2013-10-18T18:41:35.914Z","type":"message"}
{"nick":"bcraig","message":"somewhat reminiscent of figuring out header dependencies given a cpp file","date":"2013-10-18T18:41:53.466Z","type":"message"}
{"nick":"FearTheCowboy","message":"does the thrift-exe generate files that are predictably named from the source file, or the declared elements inside the .thrift  file","date":"2013-10-18T18:42:20.225Z","type":"message"}
{"nick":"FearTheCowboy","message":"??","date":"2013-10-18T18:42:21.540Z","type":"message"}
{"nick":"bcraig","message":"some of both","date":"2013-10-18T18:42:27.932Z","type":"message"}
{"nick":"FearTheCowboy","message":"hmm.","date":"2013-10-18T18:42:31.883Z","type":"message"}
{"nick":"FearTheCowboy","message":"lemme think about that a moment.","date":"2013-10-18T18:42:42.691Z","type":"message"}
{"nick":"bcraig","message":"it doesn't currently have a way to return that information, but that would be easy (on the thrift side) to add","date":"2013-10-18T18:43:00.221Z","type":"message"}
{"nick":"FearTheCowboy","message":"Really? it doesn't return that information? even via stdout?","date":"2013-10-18T18:43:44.479Z","type":"message"}
{"nick":"bcraig","message":"hasn't been a lot of demand for that.  Generally the files that the .thrift generates aren't changing all that often","date":"2013-10-18T18:44:27.932Z","type":"message"}
{"nick":"FearTheCowboy","message":"hmm. But you'd need to know what they were in the first place. Which I think is one step too many.","date":"2013-10-18T18:44:59.825Z","type":"message"}
{"nick":"bcraig","message":"For the nuget case, yes","date":"2013-10-18T18:45:13.381Z","type":"message"}
{"nick":"bcraig","message":"The current workflow requires people to know ahead of time, and add those files to their project","date":"2013-10-18T18:45:53.755Z","type":"message"}
{"nick":"FearTheCowboy","message":"If we could make the thrift generator spit out the filenames in a predictable way via stdout, we could easily dynamically transform that into additional <ClCompile> file objects at build time.","date":"2013-10-18T18:45:57.124Z","type":"message"}
{"nick":"FearTheCowboy","message":"then you'd be able to just \"build\" .thrift files","date":"2013-10-18T18:46:13.780Z","type":"message"}
{"nick":"bcraig","message":"well, the thrift side can be changed to make that work.","date":"2013-10-18T18:46:52.817Z","type":"message"}
{"nick":"bcraig","message":"should I look at existing nasm packages as a starting point?  Is there any other (possibly bad) example of dynamically adding <ClCompile> objects at build time?","date":"2013-10-18T18:47:29.923Z","type":"message"}
{"nick":"FearTheCowboy","message":"no, that doesn't do that.","date":"2013-10-18T18:47:41.599Z","type":"message"}
{"nick":"FearTheCowboy","message":"it works in a different way (and not easy to understand anyway, I think that it tried too hard)","date":"2013-10-18T18:48:15.102Z","type":"message"}
{"nick":"FearTheCowboy","action":"is considering the fastest way to do this.","date":"2013-10-18T18:48:58.346Z","type":"action"}
{"nick":"FearTheCowboy","message":"done right, we don't have to make seperate files for this, we can do it entirely in the .autopkg script (since it generates the .props and .targets files, and all the logic can be done in there)","date":"2013-10-18T18:51:04.344Z","type":"message"}
{"nick":"FearTheCowboy","message":"gimme a couple of minutes, lemme see if I can push of the work that I was doing today, so I can work on this...","date":"2013-10-18T18:52:59.448Z","type":"message"}
{"nick":"bcraig","message":"I think you are prioritizing this higher than I am :)","date":"2013-10-18T18:53:27.188Z","type":"message"}
{"nick":"FearTheCowboy","message":"(I needed something that wasn't brain-sucking to work on today)","date":"2013-10-18T18:53:54.837Z","type":"message"}
{"nick":"bcraig","message":"but I'm glad that I've sparked your interest","date":"2013-10-18T18:54:06.964Z","type":"message"}
{"nick":"FearTheCowboy","message":"This is a worthy distraction","date":"2013-10-18T18:54:12.478Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 248 seconds","date":"2013-10-18T18:57:09.740Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-10-18T19:41:29.377Z","type":"join"}
{"nick":"FearTheCowboy","message":"bcraig -> hmm. I seem to have introduced a bug that breaks other things. I may not get back to this today, but let's try to connect next week and see what we can get working.","date":"2013-10-18T20:00:45.495Z","type":"message"}
{"nick":"bcraig","message":"sure thing.  I will be on IRC most of next week as well","date":"2013-10-18T20:01:20.378Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 245 seconds","date":"2013-10-18T21:09:35.157Z","type":"quit"}
{"nick":"vpovirk","reason":"Remote host closed the connection","date":"2013-10-18T21:40:48.814Z","type":"quit"}
{"nick":"HamishC","reason":"Quit: Page closed","date":"2013-10-18T22:21:20.802Z","type":"quit"}
{"nick":"madewokherd","date":"2013-10-18T22:45:00.742Z","type":"join"}
{"nick":"bcraig","reason":"Ping timeout: 240 seconds","date":"2013-10-18T23:15:48.430Z","type":"quit"}
{"nick":"ender`","reason":"Quit:  I was in the grocery store. I saw a sign that said \"pet supplies.\" So I did. Then I went outside and saw a sign that said \"compact cars\"...\u000f","date":"2013-10-18T23:27:53.852Z","type":"quit"}
