{"nick":"Rashad","reason":"Ping timeout: 260 seconds","date":"2017-06-03T00:30:48.320Z","type":"quit"}
{"nick":"Rashad","date":"2017-06-03T00:39:29.976Z","type":"join"}
{"nick":"Lipp","date":"2017-06-03T00:44:13.958Z","type":"join"}
{"nick":"Lipp","reason":"Ping timeout: 240 seconds","date":"2017-06-03T00:57:22.729Z","type":"quit"}
{"nick":"Rashad","reason":"Ping timeout: 268 seconds","date":"2017-06-03T01:05:19.982Z","type":"quit"}
{"nick":"zzz","date":"2017-06-03T01:14:22.424Z","type":"join"}
{"nick":"OnkelTem","date":"2017-06-03T01:20:16.965Z","type":"join"}
{"nick":"Lipp","date":"2017-06-03T01:25:01.778Z","type":"join"}
{"nick":"Lipp","reason":"Ping timeout: 260 seconds","date":"2017-06-03T01:35:49.286Z","type":"quit"}
{"nick":"lewiscowper","date":"2017-06-03T01:38:32.816Z","type":"join"}
{"nick":"Lipp","date":"2017-06-03T02:02:47.608Z","type":"join"}
{"nick":"johnnyb","date":"2017-06-03T02:13:35.387Z","type":"join"}
{"nick":"Lipp","reason":"Ping timeout: 260 seconds","date":"2017-06-03T02:15:20.397Z","type":"quit"}
{"nick":"lewiscowper","reason":"Ping timeout: 240 seconds","date":"2017-06-03T02:15:28.812Z","type":"quit"}
{"nick":"Lipp","date":"2017-06-03T02:43:53.656Z","type":"join"}
{"nick":"Lipp","reason":"Ping timeout: 255 seconds","date":"2017-06-03T02:54:26.104Z","type":"quit"}
{"nick":"texinwien_","reason":"Ping timeout: 240 seconds","date":"2017-06-03T02:59:52.672Z","type":"quit"}
{"nick":"texinwien_","date":"2017-06-03T03:00:54.699Z","type":"join"}
{"nick":"mzaza","date":"2017-06-03T03:09:03.449Z","type":"join"}
{"nick":"mzaza","message":"Is it possible while using npm install for an angular project to define a version for the @angular/cli package?","date":"2017-06-03T03:09:45.355Z","type":"message"}
{"nick":"mzaza","message":"Anyone alive here?","date":"2017-06-03T03:20:14.991Z","type":"message"}
{"nick":"Lipp","date":"2017-06-03T03:21:48.409Z","type":"join"}
{"nick":"dk0r","date":"2017-06-03T03:31:57.661Z","type":"join"}
{"nick":"Lipp","reason":"Ping timeout: 240 seconds","date":"2017-06-03T03:33:58.799Z","type":"quit"}
{"nick":"plasticle","reason":"Ping timeout: 240 seconds","date":"2017-06-03T03:37:58.861Z","type":"quit"}
{"nick":"jt","date":"2017-06-03T03:39:18.057Z","type":"join"}
{"nick":"jt","reason":"Ping timeout: 255 seconds","date":"2017-06-03T03:46:36.060Z","type":"quit"}
{"nick":"upbeta","reason":"Remote host closed the connection","date":"2017-06-03T03:50:26.984Z","type":"quit"}
{"nick":"mzaza","reason":"Quit: Lost terminal","date":"2017-06-03T03:59:01.117Z","type":"quit"}
{"nick":"Lipp","date":"2017-06-03T04:01:51.417Z","type":"join"}
{"nick":"Lipp","reason":"Ping timeout: 260 seconds","date":"2017-06-03T04:08:39.259Z","type":"quit"}
{"nick":"b0neskull","message":"am I correct that it doesn't really make sense to use both yarn and npm 5's lockfile?","date":"2017-06-03T04:27:34.724Z","type":"message"}
{"nick":"b0neskull","new_nick":"boneskull","date":"2017-06-03T04:27:44.881Z","type":"nick"}
{"nick":"boneskull","message":"we're trying to determine which to use if any","date":"2017-06-03T04:27:51.204Z","type":"message"}
{"nick":"zzz","reason":"Quit: zzz","date":"2017-06-03T04:29:03.711Z","type":"quit"}
{"nick":"johnnyb","reason":"Ping timeout: 245 seconds","date":"2017-06-03T04:40:03.341Z","type":"quit"}
{"nick":"dk0r","reason":"Ping timeout: 240 seconds","date":"2017-06-03T04:50:06.623Z","type":"quit"}
{"nick":"ljharb","message":"boneskull: yes. pick one.","date":"2017-06-03T05:03:18.292Z","type":"message"}
{"nick":"ljharb","message":"boneskull: i recommend picking the tool that ships with node, personally.","date":"2017-06-03T05:03:26.378Z","type":"message"}
{"nick":"boneskull","message":"I pick neither","date":"2017-06-03T05:03:28.686Z","type":"message"}
{"nick":"ljharb","message":"pick one tool, i mean.","date":"2017-06-03T05:03:34.196Z","type":"message"}
{"nick":"boneskull","message":"probably will, but want to wait and see","date":"2017-06-03T05:03:38.279Z","type":"message"}
{"nick":"ljharb","message":"for lockfiles, \"none\" is a fine choice :-)","date":"2017-06-03T05:03:42.394Z","type":"message"}
{"nick":"ljharb","message":"(altho i'd suggest always using a lockfile in apps, and never one in non-apps)","date":"2017-06-03T05:03:54.609Z","type":"message"}
{"nick":"boneskull","message":"hmm, I've heard mixed things about using lockfiles in libraries","date":"2017-06-03T05:04:09.855Z","type":"message"}
{"nick":"boneskull","message":"why are you anti?","date":"2017-06-03T05:04:17.896Z","type":"message"}
{"nick":"ljharb","message":"specifically because devs (working in the repo) who do a fresh `npm install` should, imo, always get the same experience as a consumer (working in their own project) who `npm install`s the package.","date":"2017-06-03T05:05:16.373Z","type":"message"}
{"nick":"Lipp","date":"2017-06-03T05:05:40.288Z","type":"join"}
{"nick":"ljharb","message":"using shrinkwrap means that both of you get the same experience, but you block the consumer from being able to dedupe, and to smoothly upgrade to nonbreaking fixes","date":"2017-06-03T05:05:47.181Z","type":"message"}
{"nick":"ljharb","message":"using package-lock means that the dev gets an experience that can mask bugs that the consumer experiences.","date":"2017-06-03T05:06:02.245Z","type":"message"}
{"nick":"ljharb","message":"and using nothing means you get the same experience, and consumers have freedom to dedupe and upgrade transitive deps.","date":"2017-06-03T05:06:16.658Z","type":"message"}
{"nick":"ljharb","message":"*note that i'm saying \"same experience\", because a deterministic lockfile is the only way to get the same node_modules dir; but i don't think that actually matters in practice (and i've yet to see a concrete case where it does, from the yarn or the npm team)","date":"2017-06-03T05:07:01.845Z","type":"message"}
{"nick":"ljharb","message":"it's also important to note that my opinion here is not universally shared. both yarn and npm recommend the package-lock approach (which is, devs get a lockfile, consumers do not)","date":"2017-06-03T05:08:00.659Z","type":"message"}
{"nick":"boneskull","message":"does package-lock inhibit deduping like shrinkwrap?","date":"2017-06-03T05:08:02.765Z","type":"message"}
{"nick":"ljharb","message":"no","date":"2017-06-03T05:08:05.822Z","type":"message"}
{"nick":"ljharb","message":"because package-lock (and yarn.lock) are only used when working in that project. package-lock can never be published, and yarn ignores yarn.lock files inside node_modules.","date":"2017-06-03T05:08:27.921Z","type":"message"}
{"nick":"ljharb","message":"so, in the order of \"best to worst\" for modules, i claim it's \"nothing\", \"package-lock/yarn.lock\", \"npm-shrinkwrap.json\"","date":"2017-06-03T05:09:06.900Z","type":"message"}
{"nick":"ljharb","message":"and best to worst for apps is \"any kind of lockfile\", a huge huge gap, \"no lockfile\" :-)","date":"2017-06-03T05:09:21.352Z","type":"message"}
{"nick":"ljharb","message":"(hopefully i'm representing my position both clearly, and diplomatically)","date":"2017-06-03T05:09:52.714Z","type":"message"}
{"nick":"boneskull","message":"no, it makes sense.","date":"2017-06-03T05:10:00.890Z","type":"message"}
{"nick":"ljharb","message":"the npm/yarn teams' opinion for modules is \"package-lock/yarn.lock\" first, and npm has made no expressed opinion on shrinkwrap, yarn ignores published shrinkwraps.","date":"2017-06-03T05:10:36.307Z","type":"message"}
{"nick":"boneskull","message":"I think I agree with you.","date":"2017-06-03T05:10:41.239Z","type":"message"}
{"nick":"ljharb","message":"üëç","date":"2017-06-03T05:10:47.240Z","type":"message"}
{"nick":"boneskull","message":"so, then, why isn't there a better way?","date":"2017-06-03T05:11:09.065Z","type":"message"}
{"nick":"ljharb","message":"if you do agree with me, then i recommend adding `package-lock=false` to `.npmrc` in your published package's repo, and gitignoring yarn.lock and package-lock.json","date":"2017-06-03T05:11:09.264Z","type":"message"}
{"nick":"ljharb","message":"so far, the package-lock/yarn.lock approach is the best way","date":"2017-06-03T05:11:26.559Z","type":"message"}
{"nick":"ljharb","message":"(short of \"doing nothing\", which i think is best)","date":"2017-06-03T05:11:39.479Z","type":"message"}
{"nick":"boneskull","message":"yet, it doesn't reproduce the consumer experience (I'm talking about libns)","date":"2017-06-03T05:11:40.890Z","type":"message"}
{"nick":"boneskull","message":"libs","date":"2017-06-03T05:11:42.738Z","type":"message"}
{"nick":"ljharb","message":"nobody's yet come up with a proposal for any better solution that would provide both determinism, and freedom of deduping/updates, that's consistent for both devs and consumers.","date":"2017-06-03T05:11:59.083Z","type":"message"}
{"nick":"boneskull","message":"well, I'll get right on that","date":"2017-06-03T05:12:10.419Z","type":"message"}
{"nick":"ljharb","message":"i'm quite sure that both the npm and yarn teams would, as would i, be delighted to read one :-)","date":"2017-06-03T05:12:12.627Z","type":"message"}
{"nick":"boneskull","message":"why doesn't the package-lock get published?","date":"2017-06-03T05:12:36.053Z","type":"message"}
{"nick":"ljharb","message":"because if lockfiles are published, it limits deduping and smooth semver upgrading. which is generally considered a bad thing.","date":"2017-06-03T05:12:57.378Z","type":"message"}
{"nick":"ljharb","message":"if you *want* to publish a lockfile, you'd use npm-shrinkwrap.json","date":"2017-06-03T05:13:05.503Z","type":"message"}
{"nick":"boneskull","message":"why do we care so much about deduping?'","date":"2017-06-03T05:13:13.568Z","type":"message"}
{"nick":"ljharb","message":"so npm actually allows you all three choices freely","date":"2017-06-03T05:13:20.503Z","type":"message"}
{"nick":"ljharb","message":"boneskull: for a number of reasons:","date":"2017-06-03T05:13:32.114Z","type":"message"}
{"nick":"ljharb","message":"1) lots of npm code gets sent to browsers, and sending multiple copies of the same dep unnecessarily is harmful in terms of bandwith, parse time, etc","date":"2017-06-03T05:13:52.533Z","type":"message"}
{"nick":"boneskull","message":"ahh, right. browsers.","date":"2017-06-03T05:14:17.734Z","type":"message"}
{"nick":"ljharb","message":"2) windows has very tight file system path limits, so unnecessarily deep node_modules dirs can make projects unusable on windows (npm 3+ mitigates but does not solve this)","date":"2017-06-03T05:14:23.033Z","type":"message"}
{"nick":"boneskull","message":"aware of that","date":"2017-06-03T05:14:52.300Z","type":"message"}
{"nick":"ljharb","message":"3) deduping goes along with \"smooth semver upgrades\", in other words, if you use A, and A uses B, which uses C, and C gets an urgent security patch - then you definitely want the freedom to upgrade C without having to wait on an upgrade and publish of B, and then A, in turn.","date":"2017-06-03T05:15:06.148Z","type":"message"}
{"nick":"ljharb","message":"(also it's not just browsers; the memory footprint in node of loading N copies of \"foo\", versus loading 1, matters in long-running apps)","date":"2017-06-03T05:15:31.454Z","type":"message"}
{"nick":"boneskull","message":"I've found that it's more likely to get somewhat screwed by a fuzzy version range than royally screwed by a vulnerability","date":"2017-06-03T05:16:23.617Z","type":"message"}
{"nick":"boneskull","message":"so, in mocha, we keep the (production) dependencies exact numbers for this reason","date":"2017-06-03T05:17:10.586Z","type":"message"}
{"nick":"ljharb","message":"that's a fair counterpoint. but the damage differs there - \"somewhat\" versus \"royally\"","date":"2017-06-03T05:17:13.415Z","type":"message"}
{"nick":"boneskull","message":"indeed it does","date":"2017-06-03T05:17:19.232Z","type":"message"}
{"nick":"ljharb","message":"boneskull: in mocha, that's not actually giving you any guarantees tho","date":"2017-06-03T05:17:21.989Z","type":"message"}
{"nick":"ljharb","message":"because pinning 1st-degree deps does NOT pin N-degree deps.","date":"2017-06-03T05:17:32.005Z","type":"message"}
{"nick":"boneskull","message":"that's true, but if our direct dep has a security flaw, nobody can upgrade it until we do...","date":"2017-06-03T05:17:45.091Z","type":"message"}
{"nick":"ljharb","message":"basically, either you use npm-shrinkwrap.json, or you should use ^ semver ranges everywhere, period","date":"2017-06-03T05:17:47.851Z","type":"message"}
{"nick":"ljharb","message":"anything else is a false sense of confidence.","date":"2017-06-03T05:17:56.279Z","type":"message"}
{"nick":"ljharb","message":"(separate from specific exceptions, like a package that doesn't follow semver, or that has a known not-yet-fixed bug)","date":"2017-06-03T05:18:16.869Z","type":"message"}
{"nick":"boneskull","message":"right, but it avoids a shitstorm of issues if some fuzzy range causes everything to break","date":"2017-06-03T05:18:30.329Z","type":"message"}
{"nick":"ljharb","message":"that's what i'm saying tho; it only avoids that shitstorm if the breakage comes from a direct dep.","date":"2017-06-03T05:18:48.966Z","type":"message"}
{"nick":"ljharb","message":"if it comes from a transitive dep, you haven't avoided anything.","date":"2017-06-03T05:18:55.603Z","type":"message"}
{"nick":"boneskull","message":"it's happened before :(","date":"2017-06-03T05:18:56.264Z","type":"message"}
{"nick":"ljharb","message":"which basically means that you're insuring against breakage, only from the developers you've manually selected and trust","date":"2017-06-03T05:19:09.025Z","type":"message"}
{"nick":"ljharb","message":"and NOT insuring against breakage from whoever they've delegated their trust to.","date":"2017-06-03T05:19:18.642Z","type":"message"}
{"nick":"ljharb","message":"only npm-shrinkwrap.json can truly give you that protection","date":"2017-06-03T05:19:31.331Z","type":"message"}
{"nick":"ljharb","message":"(which i don't think you really need; if it's happened more than once, find a replacement dep :-) )","date":"2017-06-03T05:19:46.075Z","type":"message"}
{"nick":"boneskull","message":"assuming all that in shrinkwrap is vuln-free","date":"2017-06-03T05:19:57.764Z","type":"message"}
{"nick":"ljharb","message":"exactly, but it's breakage vs vulns","date":"2017-06-03T05:20:09.852Z","type":"message"}
{"nick":"boneskull","message":"yes, I've considered forking and maintaining our own version of various things","date":"2017-06-03T05:20:30.957Z","type":"message"}
{"nick":"Lipp","reason":"Ping timeout: 268 seconds","date":"2017-06-03T05:20:37.952Z","type":"quit"}
{"nick":"boneskull","message":"there was some lib we actually just threw in our source files because they renamed it and it broke stuff. sigh","date":"2017-06-03T05:20:51.655Z","type":"message"}
{"nick":"ljharb","message":"iow, pinning deps as you describe gives you 100% protection against semver breakage in the 1st tier, and 0% against vulns; and 100% protection against vulns in all the rest of the graph, and 0% against unintentional breakage in the rest of the graph","date":"2017-06-03T05:20:53.321Z","type":"message"}
{"nick":"ljharb","message":"which means you don't have consistent protection of any kind in your dep graph, when you pin deps.","date":"2017-06-03T05:21:06.743Z","type":"message"}
{"nick":"boneskull","message":"given that mocha is not intended to be used in publicly-facing apps","date":"2017-06-03T05:21:25.168Z","type":"message"}
{"nick":"ljharb","message":"separately, it's fair that a testing framework like mocha might have different concerns and paranoia levels; but that's why you might want to use ^, but also ship an npm-shrinkwrap.json","date":"2017-06-03T05:21:25.377Z","type":"message"}
{"nick":"boneskull","message":"what would you do?","date":"2017-06-03T05:21:27.736Z","type":"message"}
{"nick":"ljharb","message":"right","date":"2017-06-03T05:21:28.505Z","type":"message"}
{"nick":"boneskull","message":"yes.","date":"2017-06-03T05:21:30.762Z","type":"message"}
{"nick":"ljharb","message":"i would ship shrinkwrap.","date":"2017-06-03T05:21:31.389Z","type":"message"}
{"nick":"ljharb","message":"because in mocha's case, it's not really a lib, it's a binary","date":"2017-06-03T05:21:38.609Z","type":"message"}
{"nick":"ljharb","message":"thus, it's a top-level app.","date":"2017-06-03T05:21:44.296Z","type":"message"}
{"nick":"ljharb","message":"(of a sort).","date":"2017-06-03T05:21:47.236Z","type":"message"}
{"nick":"ljharb","message":"and, because it's never bundled for production (only for tests, and only rarely), \"deduping\" really isn't a concern","date":"2017-06-03T05:22:08.841Z","type":"message"}
{"nick":"boneskull","message":"I'll look into shrinkwrap.  it's gotten a lot of flak over the years","date":"2017-06-03T05:22:12.216Z","type":"message"}
{"nick":"ljharb","message":"the usability of it has historically sucked, and may still","date":"2017-06-03T05:22:21.220Z","type":"message"}
{"nick":"ljharb","message":"but that's only a problem for mocha devs, in this case","date":"2017-06-03T05:22:28.846Z","type":"message"}
{"nick":"ljharb","message":"mocha users have no such issues.","date":"2017-06-03T05:22:33.126Z","type":"message"}
{"nick":"ljharb","message":"and, you can work around that by adding some npm scripts to help manage it, and simply writing explicit instructions for devs to follow when changing package versions.","date":"2017-06-03T05:22:57.352Z","type":"message"}
{"nick":"ljharb","message":"in fact, you may even be able to use package-lock.json (which has really nice UX), and then, prepublish, do some sort of conversion of it to a shrinkwrap file (ie, `npm install && npm shrinkwrap`)","date":"2017-06-03T05:23:33.081Z","type":"message"}
{"nick":"ljharb","message":"if that works smoothly, that'd sidestep pretty much all the UX issues of shrinkwrap, i think. (you'd also want postpublish to `rm npm-shrinkwrap.json`, ofc)","date":"2017-06-03T05:23:55.435Z","type":"message"}
{"nick":"ljharb","message":"(i just came up with that now, so, no guarantees)","date":"2017-06-03T05:24:21.330Z","type":"message"}
{"nick":"boneskull","message":"haha","date":"2017-06-03T05:24:32.229Z","type":"message"}
{"nick":"boneskull","message":"I'll give it a shot and publish something that helps do it if it works for us","date":"2017-06-03T05:24:51.615Z","type":"message"}
{"nick":"boneskull","message":"hmm.. does npm install do a \"prune\" now like yarn?","date":"2017-06-03T05:25:32.050Z","type":"message"}
{"nick":"boneskull","message":"anyway, ty for the info.","date":"2017-06-03T05:26:11.179Z","type":"message"}
{"nick":"xall_","date":"2017-06-03T05:32:01.958Z","type":"join"}
{"nick":"xall","reason":"Ping timeout: 245 seconds","date":"2017-06-03T05:32:08.444Z","type":"quit"}
{"nick":"xall_","reason":"Client Quit","date":"2017-06-03T05:32:15.280Z","type":"quit"}
{"nick":"boneskull","message":"if an attacker had shell access and could execute the mocha executable, and there was a vulnerability, it could be of the \"privilege escalation\" variety, which is about the only way I can think of it being used as a vector","date":"2017-06-03T05:37:27.256Z","type":"message"}
{"nick":"upbeta","date":"2017-06-03T05:37:40.463Z","type":"join"}
{"nick":"boneskull","message":"granted, I don't think about this too terribly often or very hard when I do","date":"2017-06-03T05:38:01.546Z","type":"message"}
{"nick":"ljharb","message":"boneskull: yes, npm 5+ does auto-prune on install","date":"2017-06-03T05:53:43.265Z","type":"message"}
{"nick":"gnarf","reason":"Ping timeout: 255 seconds","date":"2017-06-03T06:06:01.092Z","type":"quit"}
{"nick":"mylesborins","reason":"Ping timeout: 255 seconds","date":"2017-06-03T06:07:22.123Z","type":"quit"}
{"nick":"McJesis","reason":"Ping timeout: 272 seconds","date":"2017-06-03T06:07:26.199Z","type":"quit"}
{"nick":"mylesborins","date":"2017-06-03T06:07:30.577Z","type":"join"}
{"nick":"dimi1947","date":"2017-06-03T06:09:57.192Z","type":"join"}
{"nick":"lanceball","reason":"Ping timeout: 255 seconds","date":"2017-06-03T06:10:58.126Z","type":"quit"}
{"nick":"McJesus","date":"2017-06-03T06:11:21.876Z","type":"join"}
{"nick":"lewiscowper","date":"2017-06-03T06:13:51.227Z","type":"join"}
{"nick":"lanceball","date":"2017-06-03T06:14:49.351Z","type":"join"}
{"nick":"gnarf","date":"2017-06-03T06:15:44.175Z","type":"join"}
{"nick":"lewiscowper","reason":"Ping timeout: 260 seconds","date":"2017-06-03T06:18:44.315Z","type":"quit"}
{"nick":"McJesus","reason":"Ping timeout: 240 seconds","date":"2017-06-03T06:18:56.071Z","type":"quit"}
{"nick":"McJesus","date":"2017-06-03T06:19:52.491Z","type":"join"}
{"nick":"Lipp","date":"2017-06-03T06:47:36.345Z","type":"join"}
{"nick":"Lipp","reason":"Ping timeout: 255 seconds","date":"2017-06-03T07:04:11.201Z","type":"quit"}
{"nick":"doodadjs_","reason":"Quit: Leaving","date":"2017-06-03T07:12:14.060Z","type":"quit"}
{"nick":"DoubleMalt","date":"2017-06-03T07:28:17.413Z","type":"join"}
{"nick":"Lipp","date":"2017-06-03T07:31:28.396Z","type":"join"}
{"nick":"Lipp","reason":"Ping timeout: 255 seconds","date":"2017-06-03T07:43:47.233Z","type":"quit"}
{"nick":"upbeta","reason":"Remote host closed the connection","date":"2017-06-03T07:47:44.817Z","type":"quit"}
{"nick":"dimi1947","reason":"Ping timeout: 255 seconds","date":"2017-06-03T07:54:35.178Z","type":"quit"}
{"nick":"zzz","date":"2017-06-03T08:00:39.556Z","type":"join"}
{"nick":"doodadjs","date":"2017-06-03T08:03:33.730Z","type":"join"}
{"nick":"zzz","reason":"Quit: zzz","date":"2017-06-03T08:09:58.073Z","type":"quit"}
{"nick":"Lipp","date":"2017-06-03T08:11:22.328Z","type":"join"}
{"nick":"lewiscowper","date":"2017-06-03T08:14:03.418Z","type":"join"}
{"nick":"lewiscowper","reason":"Ping timeout: 258 seconds","date":"2017-06-03T08:18:33.567Z","type":"quit"}
{"nick":"basiclaser","date":"2017-06-03T08:29:23.265Z","type":"join"}
{"nick":"DoubleMalt","reason":"Read error: Connection reset by peer","date":"2017-06-03T09:13:53.500Z","type":"quit"}
{"nick":"doublemalt_","date":"2017-06-03T09:14:00.399Z","type":"join"}
{"nick":"dimi1947","date":"2017-06-03T09:25:22.227Z","type":"join"}
{"nick":"ahmedelgabri","date":"2017-06-03T09:29:41.618Z","type":"join"}
{"nick":"MaybeDragon","date":"2017-06-03T09:32:02.018Z","type":"join"}
{"nick":"dimi1947","reason":"Quit: Leaving","date":"2017-06-03T09:32:13.069Z","type":"quit"}
{"nick":"Lipp","reason":"Remote host closed the connection","date":"2017-06-03T10:05:26.102Z","type":"quit"}
{"nick":"Lipp","date":"2017-06-03T10:06:46.339Z","type":"join"}
{"nick":"lewiscowper","date":"2017-06-03T10:07:03.643Z","type":"join"}
{"nick":"lewiscowper","reason":"Ping timeout: 255 seconds","date":"2017-06-03T10:15:53.007Z","type":"quit"}
{"nick":"lewiscowper","date":"2017-06-03T10:16:21.074Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-06-03T10:25:08.698Z","type":"quit"}
{"nick":"mylesborins","date":"2017-06-03T10:25:39.048Z","type":"join"}
{"nick":"lewiscowper","reason":"Ping timeout: 255 seconds","date":"2017-06-03T10:29:50.012Z","type":"quit"}
{"nick":"lewiscowper","date":"2017-06-03T10:30:56.270Z","type":"join"}
{"nick":"basiclaser","reason":"Quit: Connection closed for inactivity","date":"2017-06-03T10:55:54.497Z","type":"quit"}
{"nick":"mystfox","reason":"Quit: Connection closed for inactivity","date":"2017-06-03T11:04:34.090Z","type":"quit"}
{"nick":"Rashad","date":"2017-06-03T11:07:57.266Z","type":"join"}
{"nick":"lewiscowper","reason":"Ping timeout: 260 seconds","date":"2017-06-03T11:10:08.213Z","type":"quit"}
{"nick":"lewiscowper","date":"2017-06-03T11:10:36.633Z","type":"join"}
{"nick":"lewiscowper","reason":"Ping timeout: 240 seconds","date":"2017-06-03T11:19:58.628Z","type":"quit"}
{"nick":"lewiscowper","date":"2017-06-03T11:20:36.391Z","type":"join"}
{"nick":"lewiscowper","reason":"Ping timeout: 245 seconds","date":"2017-06-03T11:29:13.357Z","type":"quit"}
{"nick":"lewiscowper","date":"2017-06-03T11:30:11.170Z","type":"join"}
{"nick":"chipping","date":"2017-06-03T11:37:11.725Z","type":"join"}
{"nick":"Rashad","reason":"Ping timeout: 255 seconds","date":"2017-06-03T11:41:42.863Z","type":"quit"}
{"nick":"Rashad","date":"2017-06-03T11:42:00.061Z","type":"join"}
{"nick":"Rashad","reason":"Ping timeout: 255 seconds","date":"2017-06-03T11:54:26.003Z","type":"quit"}
{"nick":"plasticle","date":"2017-06-03T12:13:50.223Z","type":"join"}
{"nick":"lewiscowper","reason":"Ping timeout: 260 seconds","date":"2017-06-03T12:15:28.164Z","type":"quit"}
{"nick":"doublemalt__","date":"2017-06-03T12:24:52.076Z","type":"join"}
{"nick":"doublemalt_","reason":"Ping timeout: 260 seconds","date":"2017-06-03T12:28:32.237Z","type":"quit"}
{"nick":"lewiscowper","date":"2017-06-03T13:12:31.179Z","type":"join"}
{"nick":"lewiscowper","reason":"Ping timeout: 260 seconds","date":"2017-06-03T13:17:04.218Z","type":"quit"}
{"nick":"johnnyb","date":"2017-06-03T13:41:47.591Z","type":"join"}
{"nick":"chipping","reason":"Ping timeout: 268 seconds","date":"2017-06-03T13:42:35.719Z","type":"quit"}
{"nick":"chipping","date":"2017-06-03T13:43:15.598Z","type":"join"}
{"nick":"Manaus","date":"2017-06-03T14:01:28.976Z","type":"join"}
{"nick":"Rashad","date":"2017-06-03T14:05:57.519Z","type":"join"}
{"nick":"johnnyb","message":"so after npm update, 'npm outdated' shows the Current and Wanted versions to be the same, but the latest is a higher rev","date":"2017-06-03T14:11:22.444Z","type":"message"}
{"nick":"johnnyb","message":"does that mean a package in use is holding the version back?","date":"2017-06-03T14:11:41.020Z","type":"message"}
{"nick":"lewiscowper","date":"2017-06-03T14:27:46.088Z","type":"join"}
{"nick":"lewiscowper","reason":"Ping timeout: 260 seconds","date":"2017-06-03T14:32:12.089Z","type":"quit"}
{"nick":"Manaus","reason":"Ping timeout: 255 seconds","date":"2017-06-03T14:45:52.928Z","type":"quit"}
{"nick":"dk0r","date":"2017-06-03T15:10:45.193Z","type":"join"}
{"nick":"lewiscowper","date":"2017-06-03T15:30:08.499Z","type":"join"}
{"nick":"lewiscowper","reason":"Ping timeout: 240 seconds","date":"2017-06-03T15:39:36.492Z","type":"quit"}
{"nick":"lewiscowper","date":"2017-06-03T15:40:10.063Z","type":"join"}
{"nick":"zzz","date":"2017-06-03T15:47:51.906Z","type":"join"}
{"nick":"zzz","reason":"Quit: zzz","date":"2017-06-03T15:52:16.963Z","type":"quit"}
{"nick":"lewiscowper","reason":"Ping timeout: 260 seconds","date":"2017-06-03T15:53:54.083Z","type":"quit"}
{"nick":"lewiscowper","date":"2017-06-03T15:54:10.993Z","type":"join"}
