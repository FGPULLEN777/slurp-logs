{"nick":"LeBlaaanc","date":"2016-06-28T00:02:31.133Z","type":"join"}
{"nick":"hpehl","reason":"Ping timeout: 240 seconds","date":"2016-06-28T00:05:33.983Z","type":"quit"}
{"nick":"smokeo","reason":"Remote host closed the connection","date":"2016-06-28T00:08:46.965Z","type":"quit"}
{"nick":"qard","reason":"Quit: (╯°□°）╯︵ pɹɐb","date":"2016-06-28T00:09:45.832Z","type":"quit"}
{"nick":"smokeo","date":"2016-06-28T00:10:52.389Z","type":"join"}
{"nick":"hpehl","date":"2016-06-28T00:10:52.931Z","type":"join"}
{"nick":"smokeo","reason":"Remote host closed the connection","date":"2016-06-28T00:13:21.149Z","type":"quit"}
{"nick":"evanlucas","date":"2016-06-28T00:15:46.533Z","type":"join"}
{"nick":"subsignal","reason":"Remote host closed the connection","date":"2016-06-28T00:16:11.312Z","type":"quit"}
{"nick":"subsignal","date":"2016-06-28T00:19:32.317Z","type":"join"}
{"nick":"kftzg","date":"2016-06-28T00:22:14.633Z","type":"join"}
{"nick":"xall","date":"2016-06-28T00:24:24.162Z","type":"join"}
{"nick":"ahmedelgabri","date":"2016-06-28T00:28:02.199Z","type":"join"}
{"nick":"ahmedelgabri","reason":"Ping timeout: 272 seconds","date":"2016-06-28T00:33:06.142Z","type":"quit"}
{"nick":"ome","date":"2016-06-28T00:37:21.326Z","type":"join"}
{"nick":"annoymouse","reason":"Quit: Connection closed for inactivity","date":"2016-06-28T00:39:34.900Z","type":"quit"}
{"nick":"Orion3k","date":"2016-06-28T00:39:43.219Z","type":"join"}
{"nick":"tapout","reason":"Ping timeout: 244 seconds","date":"2016-06-28T00:45:17.663Z","type":"quit"}
{"nick":"tapout","date":"2016-06-28T00:48:03.984Z","type":"join"}
{"nick":"ahmedelgabri","date":"2016-06-28T00:53:17.189Z","type":"join"}
{"nick":"smokeo","date":"2016-06-28T00:58:39.417Z","type":"join"}
{"nick":"ahmedelgabri","reason":"Ping timeout: 264 seconds","date":"2016-06-28T01:02:52.002Z","type":"quit"}
{"nick":"smokeo","reason":"Remote host closed the connection","date":"2016-06-28T01:08:22.179Z","type":"quit"}
{"nick":"smokeo","date":"2016-06-28T01:16:21.351Z","type":"join"}
{"nick":"ahmedelgabri","date":"2016-06-28T01:28:33.168Z","type":"join"}
{"nick":"hpehl","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-06-28T01:35:04.038Z","type":"quit"}
{"nick":"ahmedelgabri","reason":"Ping timeout: 258 seconds","date":"2016-06-28T01:36:01.150Z","type":"quit"}
{"nick":"xall","reason":"Quit: WeeChat 1.5","date":"2016-06-28T01:37:29.062Z","type":"quit"}
{"nick":"zignd_","date":"2016-06-28T01:39:17.617Z","type":"join"}
{"nick":"ThePhoenix47","new_nick":"ThePhoeni","date":"2016-06-28T02:03:30.388Z","type":"nick"}
{"nick":"smokeo","reason":"Remote host closed the connection","date":"2016-06-28T02:11:45.306Z","type":"quit"}
{"nick":"mich-cook","reason":"Ping timeout: 240 seconds","date":"2016-06-28T02:15:03.935Z","type":"quit"}
{"nick":"kftzg","reason":"Remote host closed the connection","date":"2016-06-28T02:25:14.590Z","type":"quit"}
{"nick":"smokeo","date":"2016-06-28T02:29:41.394Z","type":"join"}
{"nick":"gkatsev","reason":"Ping timeout: 276 seconds","date":"2016-06-28T02:37:45.679Z","type":"quit"}
{"nick":"gkatsev","date":"2016-06-28T02:39:08.976Z","type":"join"}
{"nick":"howdoi","date":"2016-06-28T02:40:20.401Z","type":"join"}
{"nick":"mich-cook","date":"2016-06-28T02:42:31.528Z","type":"join"}
{"nick":"zignd__","date":"2016-06-28T02:49:11.621Z","type":"join"}
{"nick":"ome","reason":"Quit: Connection closed for inactivity","date":"2016-06-28T02:49:37.482Z","type":"quit"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2016-06-28T02:49:44.233Z","type":"quit"}
{"nick":"rmg","date":"2016-06-28T02:50:20.674Z","type":"join"}
{"nick":"zignd_","reason":"Ping timeout: 244 seconds","date":"2016-06-28T02:52:21.621Z","type":"quit"}
{"nick":"rmg","reason":"Ping timeout: 260 seconds","date":"2016-06-28T02:54:47.673Z","type":"quit"}
{"nick":"ahmedelgabri","date":"2016-06-28T03:32:09.148Z","type":"join"}
{"nick":"emceeaich_","reason":"Remote host closed the connection","date":"2016-06-28T03:33:56.428Z","type":"quit"}
{"nick":"M-shine","reason":"Remote host closed the connection","date":"2016-06-28T03:35:13.917Z","type":"quit"}
{"nick":"Siilwyn[m]1","reason":"Read error: Connection reset by peer","date":"2016-06-28T03:35:14.220Z","type":"quit"}
{"nick":"ahmedelgabri","reason":"Ping timeout: 258 seconds","date":"2016-06-28T03:37:09.147Z","type":"quit"}
{"nick":"smokeo","reason":"Remote host closed the connection","date":"2016-06-28T03:48:44.444Z","type":"quit"}
{"nick":"emceeaich_","date":"2016-06-28T03:49:08.959Z","type":"join"}
{"nick":"rmg","date":"2016-06-28T03:50:50.493Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 252 seconds","date":"2016-06-28T03:55:31.574Z","type":"quit"}
{"nick":"M-shine","date":"2016-06-28T04:01:10.949Z","type":"join"}
{"nick":"smokeo","date":"2016-06-28T04:03:06.946Z","type":"join"}
{"nick":"mich-cook","reason":"Quit: Leaving.","date":"2016-06-28T04:08:05.812Z","type":"quit"}
{"nick":"EnigmaFX","reason":"Read error: Connection reset by peer","date":"2016-06-28T04:09:18.665Z","type":"quit"}
{"nick":"EnigmaFXX","date":"2016-06-28T04:09:48.910Z","type":"join"}
{"nick":"EnigmaFXX","new_nick":"EnigmaFX","date":"2016-06-28T04:10:01.488Z","type":"nick"}
{"nick":"doodadjs","reason":"Quit: Leaving","date":"2016-06-28T04:10:08.633Z","type":"quit"}
{"nick":"Siilwyn[m]","date":"2016-06-28T04:25:43.751Z","type":"join"}
{"nick":"kftzg","date":"2016-06-28T04:26:33.010Z","type":"join"}
{"nick":"kftzg","reason":"Ping timeout: 250 seconds","date":"2016-06-28T04:31:54.670Z","type":"quit"}
{"nick":"eljimmy","reason":"Quit: Leaving","date":"2016-06-28T04:40:42.328Z","type":"quit"}
{"nick":"rmg_","date":"2016-06-28T04:51:37.449Z","type":"join"}
{"nick":"bdb-me","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-06-28T04:51:38.242Z","type":"quit"}
{"nick":"rmg_","reason":"Ping timeout: 244 seconds","date":"2016-06-28T04:56:12.076Z","type":"quit"}
{"nick":"LeBlaaanc","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2016-06-28T04:56:27.498Z","type":"quit"}
{"nick":"lpin","date":"2016-06-28T05:16:27.058Z","type":"join"}
{"nick":"boneskull","date":"2016-06-28T05:24:45.160Z","type":"join"}
{"nick":"ahmedelgabri","date":"2016-06-28T05:32:51.264Z","type":"join"}
{"nick":"ahmedelgabri","reason":"Ping timeout: 250 seconds","date":"2016-06-28T05:37:46.561Z","type":"quit"}
{"nick":"doodadjs","date":"2016-06-28T05:42:41.414Z","type":"join"}
{"nick":"ljharb","message":"hey npm folks! is there any way, while in a prepublish script, to detect what the dist-tag will be? (ie, \"latest\" if nothing's specified, or \"foo\" if that's specified)","date":"2016-06-28T06:01:28.507Z","type":"message"}
{"nick":"smokeo","reason":"Remote host closed the connection","date":"2016-06-28T06:04:22.967Z","type":"quit"}
{"nick":"ljharb","message":"it appears like my only option is to follow the approach in https://github.com/iarna/in-publish/blob/master/index.js","date":"2016-06-28T06:04:54.703Z","type":"message"}
{"nick":"ome","date":"2016-06-28T06:13:19.743Z","type":"join"}
{"nick":"kftzg","date":"2016-06-28T06:15:06.586Z","type":"join"}
{"nick":"iarna","message":"ljharb: The npm_config_tag should have that value for you","date":"2016-06-28T06:19:39.692Z","type":"message"}
{"nick":"iarna","message":"env var","date":"2016-06-28T06:19:47.364Z","type":"message"}
{"nick":"kftzg","reason":"Ping timeout: 250 seconds","date":"2016-06-28T06:20:14.524Z","type":"quit"}
{"nick":"hpehl","date":"2016-06-28T06:25:11.166Z","type":"join"}
{"nick":"ljharb","message":"iarna: yay ty that's much simpler. do you know how far back in npm versions that goes?","date":"2016-06-28T06:28:52.189Z","type":"message"}
{"nick":"DoubleMalt","date":"2016-06-28T06:29:14.534Z","type":"join"}
{"nick":"hpehl","new_nick":"hpehl_afk","date":"2016-06-28T06:36:39.798Z","type":"nick"}
{"nick":"hpehl_afk","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-06-28T06:37:08.719Z","type":"quit"}
{"nick":"tapout","reason":"Ping timeout: 244 seconds","date":"2016-06-28T06:41:15.973Z","type":"quit"}
{"nick":"ahmedelgabri","date":"2016-06-28T06:42:49.039Z","type":"join"}
{"nick":"tapout","date":"2016-06-28T06:43:36.008Z","type":"join"}
{"nick":"hpehl","date":"2016-06-28T06:45:44.597Z","type":"join"}
{"nick":"ahmedelgabri","reason":"Ping timeout: 264 seconds","date":"2016-06-28T06:47:51.991Z","type":"quit"}
{"nick":"iarna","message":"ljharb: way way back, 1.x","date":"2016-06-28T06:53:40.031Z","type":"message"}
{"nick":"ljharb","message":"delightful, thank you!","date":"2016-06-28T06:53:56.476Z","type":"message"}
{"nick":"iarna","message":"I don't know exactly, but we've been exposing env vars for a long long time","date":"2016-06-28T06:54:12.708Z","type":"message"}
{"nick":"iarna","message":"(Anything that can be set in the config file or passed in via argument will be in the env.)","date":"2016-06-28T06:54:32.950Z","type":"message"}
{"nick":"ljharb","message":"i'm making a module that you can stick in your prepublish script that will error out if your dist-tag is \"latest\" and you're trying to publish a version that isn't semver-latest","date":"2016-06-28T06:54:54.202Z","type":"message"}
{"nick":"ljharb","message":"so that backports aren't full of accidental latest publishes","date":"2016-06-28T06:55:09.383Z","type":"message"}
{"nick":"iarna","message":"(The env vars include args npm doesn't know about, so this is a sneaky way to pass all new options into scripts.)","date":"2016-06-28T06:55:38.251Z","type":"message"}
{"nick":"ljharb","message":"iarna: do you think there'd be a way for me to *overwrite* that env var, so that i can change what the dist-tag will end up being?","date":"2016-06-28T06:56:00.970Z","type":"message"}
{"nick":"iarna","message":"ah nice, that's been thing we've needed","date":"2016-06-28T06:56:04.863Z","type":"message"}
{"nick":"iarna","message":"There's no way to pass values back from lifecycle scripts, except errors, unfortunately.","date":"2016-06-28T06:56:40.004Z","type":"message"}
{"nick":"iarna","message":"And we don't reread config files after running them.","date":"2016-06-28T06:56:46.910Z","type":"message"}
{"nick":"ljharb","message":"and presumably there's not a good cross-platform way to make a shell script to export an env var","date":"2016-06-28T06:57:09.080Z","type":"message"}
{"nick":"hpehl","new_nick":"hpehl_afk","date":"2016-06-28T06:57:22.753Z","type":"nick"}
{"nick":"ljharb","message":"because i could .exec `export npm_config_tag=foo` or something, maybe","date":"2016-06-28T06:57:26.340Z","type":"message"}
{"nick":"iarna","message":"Right","date":"2016-06-28T06:57:33.246Z","type":"message"}
{"nick":"ljharb","message":"but it's probably also not doable due to subshells","date":"2016-06-28T06:57:40.751Z","type":"message"}
{"nick":"hpehl_afk","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-06-28T06:57:50.013Z","type":"quit"}
{"nick":"iarna","message":"There are some modules for setting env vars in crossplatform ways but I don't recall their names","date":"2016-06-28T06:57:51.549Z","type":"message"}
{"nick":"iarna","message":"The only way I can see to do that would be to use an all new command, eg `npm run safepublish` and _that_ calls `npm publish` for you.","date":"2016-06-28T06:58:15.881Z","type":"message"}
{"nick":"ljharb","message":"yeah i think for now i'll just error out and provide an example `npm publish --tag=foo` command","date":"2016-06-28T06:59:04.931Z","type":"message"}
{"nick":"iarna","message":"You could use custom config options to ensure that a regular call to `npm publish` fails, eg, a prepublish that looks for `--yes-really` to be passed in by looking for npm_config_yes_really","date":"2016-06-28T06:59:06.541Z","type":"message"}
{"nick":"iarna","message":"*nods*","date":"2016-06-28T06:59:19.048Z","type":"message"}
{"nick":"zignd__","reason":"Quit: Leaving","date":"2016-06-28T07:02:02.182Z","type":"quit"}
{"nick":"smokeo","date":"2016-06-28T07:05:25.623Z","type":"join"}
{"nick":"smokeo","reason":"Read error: Connection reset by peer","date":"2016-06-28T07:06:30.769Z","type":"quit"}
{"nick":"smokeo","date":"2016-06-28T07:07:10.886Z","type":"join"}
{"nick":"hpehl","date":"2016-06-28T07:07:42.686Z","type":"join"}
{"nick":"smokeo","reason":"Ping timeout: 240 seconds","date":"2016-06-28T07:11:33.980Z","type":"quit"}
{"nick":"basiclaser","date":"2016-06-28T07:12:55.337Z","type":"join"}
{"nick":"ljharb","message":"if i have an array of version numbers, how can i use https://www.npmjs.com/package/semver to determine *both* that a given version is greater than everything in that range (i can do it with `semver.gtr(version, versions.join('||'))`) but also that `version` is *not* a prerelease version?","date":"2016-06-28T07:17:54.607Z","type":"message"}
{"nick":"ahmedelgabri","date":"2016-06-28T07:29:33.931Z","type":"join"}
{"nick":"ahmed_elgabri","date":"2016-06-28T07:33:42.645Z","type":"join"}
{"nick":"ahmedelgabri","reason":"Ping timeout: 240 seconds","date":"2016-06-28T07:34:03.886Z","type":"quit"}
{"nick":"ljharb","message":"nvm, i see https://github.com/npm/node-semver/issues/133","date":"2016-06-28T07:51:59.689Z","type":"message"}
