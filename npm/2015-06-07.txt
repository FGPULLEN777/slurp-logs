{"nick":"ircretary","reason":"Remote host closed the connection","date":"2015-06-07T00:00:00.921Z","type":"quit"}
{"nick":"ircretary","date":"2015-06-07T00:00:09.718Z","type":"join"}
{"nick":"danecando","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-06-07T00:03:42.147Z","type":"quit"}
{"nick":"danecando","date":"2015-06-07T00:07:03.415Z","type":"join"}
{"nick":"yoshuawuyts","reason":"Ping timeout: 265 seconds","date":"2015-06-07T00:16:13.567Z","type":"quit"}
{"nick":"danecando","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-06-07T00:33:17.591Z","type":"quit"}
{"nick":"danecando","date":"2015-06-07T00:39:42.938Z","type":"join"}
{"nick":"williamcotton","reason":"Read error: Connection reset by peer","date":"2015-06-07T00:58:22.048Z","type":"quit"}
{"nick":"williamcotton","date":"2015-06-07T00:58:44.267Z","type":"join"}
{"nick":"williamcotton","reason":"Ping timeout: 272 seconds","date":"2015-06-07T01:05:16.283Z","type":"quit"}
{"nick":"bcoe","date":"2015-06-07T01:08:15.486Z","type":"join"}
{"nick":"ibash","date":"2015-06-07T01:21:02.280Z","type":"join"}
{"nick":"ibash","reason":"Quit: ibash","date":"2015-06-07T01:27:57.848Z","type":"quit"}
{"nick":"adamdicarlo","date":"2015-06-07T01:38:14.539Z","type":"join"}
{"nick":"meisth0th","reason":"Quit: Leaving...","date":"2015-06-07T02:00:34.869Z","type":"quit"}
{"nick":"bcoe","reason":"Remote host closed the connection","date":"2015-06-07T02:05:03.962Z","type":"quit"}
{"nick":"Havvy","reason":"Quit: Leaving","date":"2015-06-07T02:07:33.989Z","type":"quit"}
{"nick":"KushS","date":"2015-06-07T02:13:08.967Z","type":"join"}
{"nick":"KushS","reason":"Ping timeout: 245 seconds","date":"2015-06-07T02:23:59.688Z","type":"quit"}
{"nick":"step1step2","date":"2015-06-07T02:28:05.197Z","type":"join"}
{"nick":"adamdicarlo","reason":"Remote host closed the connection","date":"2015-06-07T02:40:16.750Z","type":"quit"}
{"nick":"yoshuawuyts","date":"2015-06-07T03:12:51.300Z","type":"join"}
{"nick":"yoshuawuyts","reason":"Ping timeout: 272 seconds","date":"2015-06-07T03:17:38.226Z","type":"quit"}
{"nick":"mcqueenorama","date":"2015-06-07T03:23:48.756Z","type":"join"}
{"nick":"rmg","date":"2015-06-07T03:23:52.401Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 272 seconds","date":"2015-06-07T03:29:02.239Z","type":"quit"}
{"nick":"adamdicarlo","date":"2015-06-07T03:41:11.466Z","type":"join"}
{"nick":"adamdicarlo","reason":"Ping timeout: 265 seconds","date":"2015-06-07T03:45:55.174Z","type":"quit"}
{"nick":"kftzg","reason":"Remote host closed the connection","date":"2015-06-07T04:03:52.513Z","type":"quit"}
{"nick":"isaacs","message":"I have an API puzzle that I think might be irreconcilable","date":"2015-06-07T04:18:40.607Z","type":"message"}
{"nick":"Aria","message":"Ooh?","date":"2015-06-07T04:18:55.024Z","type":"message"}
{"nick":"isaacs","message":"so, node-tap used to do this thing where when you did a bunch of `t.test(...)` calls, it'd actually not run them right now, but instead, put them in a queue, and at the end of the tick, start processing them","date":"2015-06-07T04:19:13.186Z","type":"message"}
{"nick":"Aria","message":"Yeah.","date":"2015-06-07T04:19:35.620Z","type":"message"}
{"nick":"isaacs","message":"but that sucks, because if you do `console.log('hi');t.test(function (t) { t.pass('ok');t.end()}); console.log('loo')`","date":"2015-06-07T04:20:05.045Z","type":"message"}
{"nick":"isaacs","message":"then the logs are out of order","date":"2015-06-07T04:20:09.976Z","type":"message"}
{"nick":"isaacs","message":"so now, with tap 1.x, synchronous tests are run synchronously","date":"2015-06-07T04:20:33.565Z","type":"message"}
{"nick":"isaacs","message":"that's also way simpler, and i really like it.","date":"2015-06-07T04:20:40.474Z","type":"message"}
{"nick":"mcqueenorama","reason":"Remote host closed the connection","date":"2015-06-07T04:20:40.527Z","type":"quit"}
{"nick":"isaacs","message":"but!  the root test thingie calls end() on process.on('exit'), right?","date":"2015-06-07T04:20:54.025Z","type":"message"}
{"nick":"isaacs","message":"and I want to re-add the `tap.tearDown(function)` method","date":"2015-06-07T04:21:10.794Z","type":"message"}
{"nick":"isaacs","message":"so that means, you can do `tap.tearDown(()=>{ server.close() })`, right?","date":"2015-06-07T04:22:15.813Z","type":"message"}
{"nick":"isaacs","message":"but when do i run the teardown?","date":"2015-06-07T04:22:21.163Z","type":"message"}
{"nick":"isaacs","message":"on('end')?  no.. because process.emit('exit') never happens","date":"2015-06-07T04:22:31.374Z","type":"message"}
{"nick":"isaacs","message":"that's the point","date":"2015-06-07T04:22:34.238Z","type":"message"}
{"nick":"isaacs","message":"so i was thinking... how to detect if I should end the root test.","date":"2015-06-07T04:22:54.884Z","type":"message"}
{"nick":"isaacs","message":"but it's not so simple any more.","date":"2015-06-07T04:23:03.972Z","type":"message"}
{"nick":"isaacs","message":"i can't just say, \"whenever there's nothing in the queue\", because there's *usually* nothing in the queue","date":"2015-06-07T04:23:15.963Z","type":"message"}
{"nick":"Aria","message":"Hrm.","date":"2015-06-07T04:23:33.488Z","type":"message"}
{"nick":"Aria","message":"I think I actually tripped over this on Thursday.","date":"2015-06-07T04:23:43.499Z","type":"message"}
{"nick":"isaacs","message":"t.tearDown(function(){ clearTimeout(timer) }); timer = setTimeout(..., 1000000); t.pass('timer set');","date":"2015-06-07T04:23:52.805Z","type":"message"}
{"nick":"Aria","message":"Just it not working in the order I think.","date":"2015-06-07T04:23:55.431Z","type":"message"}
{"nick":"isaacs","message":"^ what to do about that?","date":"2015-06-07T04:23:58.404Z","type":"message"}
{"nick":"Aria","message":"Aye.","date":"2015-06-07T04:24:15.072Z","type":"message"}
{"nick":"isaacs","message":"like, t.end() *never* happens, because you didn't ever end the process","date":"2015-06-07T04:24:19.104Z","type":"message"}
{"nick":"isaacs","message":"but!","date":"2015-06-07T04:24:24.573Z","type":"message"}
{"nick":"isaacs","message":"t.pass('ok'); setTimeout(function () { t.pass('still ok') })","date":"2015-06-07T04:24:36.882Z","type":"message"}
{"nick":"isaacs","message":"if I implicitly end, then the 'still ok' test point casues a 'test after end' error","date":"2015-06-07T04:24:55.052Z","type":"message"}
{"nick":"Aria","message":"Yup. Wow.","date":"2015-06-07T04:25:09.550Z","type":"message"}
{"nick":"Aria","message":"One solution would be domain-like wrap-all-the-asynchronous-stuff. Of course that way lies madness.","date":"2015-06-07T04:25:26.252Z","type":"message"}
{"nick":"isaacs","message":"this wasn't a problem in tap 0.x because the root object had a test(name,fn) method, but no assert methods","date":"2015-06-07T04:25:27.464Z","type":"message"}
{"nick":"isaacs","message":"i am using domains for thrown errors, actually.  works like a charm :)","date":"2015-06-07T04:25:46.081Z","type":"message"}
{"nick":"Aria","message":"Hehe, for their purpose? Yeah.","date":"2015-06-07T04:25:56.992Z","type":"message"}
{"nick":"Aria","message":"you just saw how long that took to get right.","date":"2015-06-07T04:26:06.086Z","type":"message"}
{"nick":"isaacs","message":"turns out they're pretty good for that.","date":"2015-06-07T04:26:11.371Z","type":"message"}
{"nick":"isaacs","message":"but almost no one has that use case","date":"2015-06-07T04:26:17.781Z","type":"message"}
{"nick":"isaacs","message":"they THINK they have that use case.","date":"2015-06-07T04:26:23.071Z","type":"message"}
{"nick":"Aria","message":"Yeah. I wouldn't want to design around it, but for those few cases, yeah.","date":"2015-06-07T04:26:26.129Z","type":"message"}
{"nick":"Aria","message":"THAT","date":"2015-06-07T04:26:27.803Z","type":"message"}
{"nick":"isaacs","message":"but mostly they wanna track what happened, not catch errors","date":"2015-06-07T04:26:34.181Z","type":"message"}
{"nick":"isaacs","message":"they want long stack traces or continuation-local-storage","date":"2015-06-07T04:27:09.360Z","type":"message"}
{"nick":"Aria","message":"Yeah.","date":"2015-06-07T04:27:25.291Z","type":"message"}
{"nick":"Aria","message":"And CLS is its own bag of worms too.","date":"2015-06-07T04:27:33.715Z","type":"message"}
{"nick":"Aria","message":"Turns out when a programmer says 'from context', one should run away.","date":"2015-06-07T04:27:57.256Z","type":"message"}
{"nick":"isaacs","message":"heh","date":"2015-06-07T04:28:45.269Z","type":"message"}
{"nick":"Aria","message":"So ... when _should_ teardown happen?","date":"2015-06-07T04:28:46.204Z","type":"message"}
{"nick":"isaacs","message":"at \"the end\"","date":"2015-06-07T04:28:52.069Z","type":"message"}
{"nick":"isaacs","message":"but like... wtf does that even MEAN?","date":"2015-06-07T04:28:59.515Z","type":"message"}
{"nick":"Aria","message":"Yeah, exactly.","date":"2015-06-07T04:29:04.737Z","type":"message"}
{"nick":"isaacs","message":"and looking at the code in tap 0.x that made this sorta work... ugh.  no.","date":"2015-06-07T04:29:11.309Z","type":"message"}
{"nick":"Aria","message":"I'd like to think \"when t.end()\" is called.","date":"2015-06-07T04:29:15.591Z","type":"message"}
{"nick":"isaacs","message":"i'm surprised it EVER worked at all","date":"2015-06-07T04:29:16.899Z","type":"message"}
{"nick":"isaacs","message":"Aria: right, and that's easy for every Test object except the root","date":"2015-06-07T04:29:28.339Z","type":"message"}
{"nick":"Aria","message":"Yeah. Urgh.","date":"2015-06-07T04:29:53.845Z","type":"message"}
{"nick":"isaacs","message":"well, that is, when end() is called, or when the plan is completed.","date":"2015-06-07T04:30:06.068Z","type":"message"}
{"nick":"Aria","message":"How about no teardown on the root? ;-)","date":"2015-06-07T04:30:06.964Z","type":"message"}
{"nick":"isaacs","message":"either one","date":"2015-06-07T04:30:07.898Z","type":"message"}
{"nick":"isaacs","message":"ha!","date":"2015-06-07T04:30:12.476Z","type":"message"}
{"nick":"Aria","message":"Yeah.","date":"2015-06-07T04:30:12.771Z","type":"message"}
{"nick":"Aria","message":"Seriously, though. Teardown isn't a destructor.","date":"2015-06-07T04:31:22.796Z","type":"message"}
{"nick":"isaacs","message":"in almost every case where it's used, it's a way to close a server or whatever.","date":"2015-06-07T04:31:53.817Z","type":"message"}
{"nick":"isaacs","message":"if you just made it a t.test(fn) at the end of the file, it'd be the same thing","date":"2015-06-07T04:32:11.207Z","type":"message"}
{"nick":"isaacs","message":"so.. what I could do is just add the \"implicit end after it's all over\" only when and if you do a t.tearDown(fn)","date":"2015-06-07T04:33:01.637Z","type":"message"}
{"nick":"isaacs","message":"i have something like that, and it's working, but it kinda irks me to have that weird side effect.","date":"2015-06-07T04:33:25.287Z","type":"message"}
{"nick":"isaacs","message":"but like... if you say you want a teardown, then..","date":"2015-06-07T04:33:34.557Z","type":"message"}
{"nick":"Aria","message":"Yeah. That doesn't seem unreasonable.","date":"2015-06-07T04:33:35.676Z","type":"message"}
{"nick":"isaacs","message":"so, basically, what that amounts to is, after every result that gets written out, it checks to see if there's anything pending.  if not, it sets a timeout and when that timeout dings, it checks to see if still nothing is pending, and then if not, it calls t.end()","date":"2015-06-07T04:34:55.777Z","type":"message"}
{"nick":"isaacs","message":"it's only a problem if you do:  t.tearDown(f);t.pass('ok');setTimeout(function(){t.pass('ok2')}, 100)","date":"2015-06-07T04:35:22.696Z","type":"message"}
{"nick":"isaacs","action":"grr","date":"2015-06-07T04:37:38.884Z","type":"action"}
{"nick":"isaacs","message":"jerkwad time alwasy being all jerkwad linear and crap","date":"2015-06-07T04:37:57.684Z","type":"message"}
{"nick":"isaacs","message":"what a jerk","date":"2015-06-07T04:38:00.404Z","type":"message"}
{"nick":"isaacs","message":"i find myself in these API puzzles sometimes where knowing the future would be hella useful","date":"2015-06-07T04:38:20.563Z","type":"message"}
{"nick":"adamdicarlo","date":"2015-06-07T04:41:49.580Z","type":"join"}
{"nick":"adamdicarlo","reason":"Ping timeout: 256 seconds","date":"2015-06-07T04:46:20.290Z","type":"quit"}
{"nick":"Aria","message":"Heh. Yep.","date":"2015-06-07T04:52:44.150Z","type":"message"}
{"nick":"Aria","message":"This is where promises shine.","date":"2015-06-07T04:52:59.864Z","type":"message"}
{"nick":"Aria","message":"You have a list of things pending, rather than \"eh, maybe! It might call back!\"","date":"2015-06-07T04:53:15.304Z","type":"message"}
{"nick":"mcqueenorama","date":"2015-06-07T04:58:13.627Z","type":"join"}
{"nick":"mcqueeno_","date":"2015-06-07T05:02:46.556Z","type":"join"}
{"nick":"boneskull","date":"2015-06-07T05:04:23.284Z","type":"join"}
{"nick":"mcqueenorama","reason":"Read error: Connection reset by peer","date":"2015-06-07T05:04:39.485Z","type":"quit"}
{"nick":"bcoe","date":"2015-06-07T05:05:58.512Z","type":"join"}
{"nick":"bcoe","reason":"Ping timeout: 264 seconds","date":"2015-06-07T05:10:37.396Z","type":"quit"}
{"nick":"mcqueeno_","reason":"Remote host closed the connection","date":"2015-06-07T05:16:18.376Z","type":"quit"}
{"nick":"mcqueenorama","date":"2015-06-07T05:16:51.619Z","type":"join"}
{"nick":"mcqueeno_","date":"2015-06-07T05:18:32.884Z","type":"join"}
{"nick":"mcqueenorama","reason":"Read error: Connection reset by peer","date":"2015-06-07T05:18:45.061Z","type":"quit"}
{"nick":"ome","date":"2015-06-07T05:40:57.259Z","type":"join"}
{"nick":"dbclk","reason":"Ping timeout: 255 seconds","date":"2015-06-07T05:48:52.285Z","type":"quit"}
{"nick":"mcqueeno_","reason":"Remote host closed the connection","date":"2015-06-07T05:53:26.375Z","type":"quit"}
{"nick":"lpin","date":"2015-06-07T05:54:57.284Z","type":"join"}
{"nick":"ibash","date":"2015-06-07T06:16:57.932Z","type":"join"}
{"nick":"adamdicarlo","date":"2015-06-07T06:26:15.186Z","type":"join"}
{"nick":"KushS","date":"2015-06-07T06:50:24.776Z","type":"join"}
{"nick":"adamdicarlo","reason":"Remote host closed the connection","date":"2015-06-07T06:51:46.742Z","type":"quit"}
{"nick":"ibash","reason":"Quit: ibash","date":"2015-06-07T07:02:26.418Z","type":"quit"}
{"nick":"KushS","reason":"Remote host closed the connection","date":"2015-06-07T07:14:16.693Z","type":"quit"}
{"nick":"adamdicarlo","date":"2015-06-07T07:52:18.556Z","type":"join"}
{"nick":"adamdicarlo","reason":"Ping timeout: 265 seconds","date":"2015-06-07T07:57:15.228Z","type":"quit"}
