{"nick":"__ransom__","reason":"Ping timeout: 276 seconds","date":"2016-03-17T00:26:51.308Z","type":"quit"}
{"nick":"knksmith57","reason":"Ping timeout: 244 seconds","date":"2016-03-17T01:01:47.990Z","type":"quit"}
{"nick":"ceej","reason":"Remote host closed the connection","date":"2016-03-17T01:22:01.264Z","type":"quit"}
{"nick":"ceej","date":"2016-03-17T01:23:08.471Z","type":"join"}
{"nick":"joshontheweb","date":"2016-03-17T01:35:41.801Z","type":"join"}
{"nick":"brianGO","date":"2016-03-17T01:55:07.371Z","type":"join"}
{"nick":"TheThing","message":"varader-","date":"2016-03-17T01:58:39.668Z","type":"message"}
{"nick":"TheThing","message":"oh he's gone","date":"2016-03-17T01:58:41.267Z","type":"message"}
{"nick":"ceej","reason":"*.net *.split","date":"2016-03-17T02:20:02.304Z","type":"quit"}
{"nick":"mezod","reason":"*.net *.split","date":"2016-03-17T02:20:02.479Z","type":"quit"}
{"nick":"shesek","reason":"*.net *.split","date":"2016-03-17T02:20:03.202Z","type":"quit"}
{"nick":"rmi7","reason":"*.net *.split","date":"2016-03-17T02:20:04.581Z","type":"quit"}
{"nick":"TheThing","reason":"*.net *.split","date":"2016-03-17T02:20:04.582Z","type":"quit"}
{"nick":"olleman","reason":"*.net *.split","date":"2016-03-17T02:20:05.208Z","type":"quit"}
{"nick":"trollixx","reason":"*.net *.split","date":"2016-03-17T02:20:05.209Z","type":"quit"}
{"nick":"mekwall","reason":"*.net *.split","date":"2016-03-17T02:20:05.760Z","type":"quit"}
{"nick":"dobson","reason":"*.net *.split","date":"2016-03-17T02:20:05.761Z","type":"quit"}
{"nick":"TBotV63","reason":"*.net *.split","date":"2016-03-17T02:20:05.761Z","type":"quit"}
{"nick":"felixjet","reason":"*.net *.split","date":"2016-03-17T02:20:07.034Z","type":"quit"}
{"nick":"kudos","reason":"*.net *.split","date":"2016-03-17T02:20:07.244Z","type":"quit"}
{"nick":"rickharrison","reason":"*.net *.split","date":"2016-03-17T02:20:07.244Z","type":"quit"}
{"nick":"xintox","reason":"*.net *.split","date":"2016-03-17T02:20:07.245Z","type":"quit"}
{"nick":"lennon","reason":"*.net *.split","date":"2016-03-17T02:20:07.245Z","type":"quit"}
{"nick":"AustinMatherne","reason":"*.net *.split","date":"2016-03-17T02:20:07.246Z","type":"quit"}
{"nick":"brianGO","reason":"*.net *.split","date":"2016-03-17T02:20:07.717Z","type":"quit"}
{"nick":"joshontheweb","reason":"*.net *.split","date":"2016-03-17T02:20:19.857Z","type":"quit"}
{"nick":"Lulzon","reason":"*.net *.split","date":"2016-03-17T02:20:20.032Z","type":"quit"}
{"nick":"luxferresum","reason":"*.net *.split","date":"2016-03-17T02:20:20.035Z","type":"quit"}
{"nick":"McJesus","reason":"*.net *.split","date":"2016-03-17T02:20:20.037Z","type":"quit"}
{"nick":"frankdrey","reason":"*.net *.split","date":"2016-03-17T02:20:20.389Z","type":"quit"}
{"nick":"brianGO","date":"2016-03-17T02:25:42.093Z","type":"join"}
{"nick":"joshontheweb","date":"2016-03-17T02:25:42.093Z","type":"join"}
{"nick":"ceej","date":"2016-03-17T02:25:42.093Z","type":"join"}
{"nick":"frankdrey","date":"2016-03-17T02:25:42.093Z","type":"join"}
{"nick":"TheThing","date":"2016-03-17T02:25:42.198Z","type":"join"}
{"nick":"mezod","date":"2016-03-17T02:25:42.198Z","type":"join"}
{"nick":"shesek","date":"2016-03-17T02:25:42.198Z","type":"join"}
{"nick":"McJesus","date":"2016-03-17T02:25:42.198Z","type":"join"}
{"nick":"kudos","date":"2016-03-17T02:25:42.198Z","type":"join"}
{"nick":"rickharrison","date":"2016-03-17T02:25:42.198Z","type":"join"}
{"nick":"olleman","date":"2016-03-17T02:25:42.198Z","type":"join"}
{"nick":"rmi7","date":"2016-03-17T02:25:42.199Z","type":"join"}
{"nick":"felixjet","date":"2016-03-17T02:25:42.199Z","type":"join"}
{"nick":"AustinMatherne","date":"2016-03-17T02:25:42.199Z","type":"join"}
{"nick":"xintox","date":"2016-03-17T02:25:42.199Z","type":"join"}
{"nick":"trollixx","date":"2016-03-17T02:25:42.199Z","type":"join"}
{"nick":"lennon","date":"2016-03-17T02:25:42.199Z","type":"join"}
{"nick":"Lulzon","date":"2016-03-17T02:25:42.200Z","type":"join"}
{"nick":"mekwall","date":"2016-03-17T02:25:42.200Z","type":"join"}
{"nick":"dobson","date":"2016-03-17T02:25:42.200Z","type":"join"}
{"nick":"TBotV63","date":"2016-03-17T02:25:42.200Z","type":"join"}
{"nick":"luxferresum","date":"2016-03-17T02:25:42.200Z","type":"join"}
{"nick":"TheThing","message":"felixjet: I'm always here <3","date":"2016-03-17T02:38:48.433Z","type":"message"}
{"nick":"TheThing","message":"highlight me if you need something","date":"2016-03-17T02:38:52.852Z","type":"message"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-03-17T02:42:07.945Z","type":"quit"}
{"nick":"mezod","reason":"Remote host closed the connection","date":"2016-03-17T03:04:31.715Z","type":"quit"}
{"nick":"felixjet","message":"TheThing, just wondering... i've seen a starter kit with express that uses cascading async/await middleware","date":"2016-03-17T03:13:47.835Z","type":"message"}
{"nick":"felixjet","message":"so.. whats the point of koa anymore?","date":"2016-03-17T03:13:53.706Z","type":"message"}
{"nick":"TheThing","message":"you mean the promise middleware?","date":"2016-03-17T03:14:06.799Z","type":"message"}
{"nick":"TheThing","message":"uhh, promise router thingy?","date":"2016-03-17T03:14:19.754Z","type":"message"}
{"nick":"felixjet","message":"you right, it's a router thing","date":"2016-03-17T03:15:17.061Z","type":"message"}
{"nick":"TheThing","message":"yeah, completely different thing","date":"2016-03-17T03:15:26.913Z","type":"message"}
{"nick":"TheThing","message":"it won't add native support for promise/await thing into middlewares","date":"2016-03-17T03:15:41.198Z","type":"message"}
{"nick":"TheThing","message":"https://github.com/nfp-projects/isaland_mail/blob/master/server/middlewares.js#L3 <--- this won't be possible with it","date":"2016-03-17T03:15:46.229Z","type":"message"}
{"nick":"TheThing","message":"the router thing is very handy though","date":"2016-03-17T03:16:07.276Z","type":"message"}
{"nick":"TheThing","message":"like, EXTREMELY handy","date":"2016-03-17T03:16:09.922Z","type":"message"}
{"nick":"TheThing","message":"it allows you to make routes that are async/await designed","date":"2016-03-17T03:16:20.451Z","type":"message"}
{"nick":"felixjet","message":"indeed","date":"2016-03-17T03:16:25.125Z","type":"message"}
{"nick":"TheThing","message":"and make it throw exceptions","date":"2016-03-17T03:16:26.359Z","type":"message"}
{"nick":"felixjet","message":"better error handling","date":"2016-03-17T03:16:33.289Z","type":"message"}
{"nick":"TheThing","message":"TONS better","date":"2016-03-17T03:16:38.954Z","type":"message"}
{"nick":"felixjet","message":"which is the feature i like most in koa","date":"2016-03-17T03:16:39.398Z","type":"message"}
{"nick":"TheThing","message":"using it for one project","date":"2016-03-17T03:16:41.419Z","type":"message"}
{"nick":"TheThing","message":"but it doesn't add native await/async support into middleware","date":"2016-03-17T03:16:53.427Z","type":"message"}
{"nick":"felixjet","message":"but... apart from routes, is async/await really needed for middleware?","date":"2016-03-17T03:17:20.039Z","type":"message"}
{"nick":"TheThing","message":"you won't be able to do this with express: https://github.com/nfp-projects/isaland_mail/blob/master/server/middlewares.js#L32","date":"2016-03-17T03:17:22.469Z","type":"message"}
{"nick":"TheThing","message":"plus it's essentially a wrapper really, the promise router thingy","date":"2016-03-17T03:18:32.439Z","type":"message"}
{"nick":"TheThing","message":"so there's tons of overhead going on","date":"2016-03-17T03:18:39.566Z","type":"message"}
{"nick":"TheThing","message":"I've never been fan of express really so I'm VERY biased","date":"2016-03-17T03:19:18.494Z","type":"message"}
{"nick":"TheThing","message":"but yes, there is a point in koa","date":"2016-03-17T03:19:25.866Z","type":"message"}
{"nick":"TheThing","message":"it's just so much lighter compared to express","date":"2016-03-17T03:19:33.409Z","type":"message"}
{"nick":"felixjet","message":"i also never been a fan of express","date":"2016-03-17T03:20:44.160Z","type":"message"}
{"nick":"felixjet","message":"i love koa","date":"2016-03-17T03:20:47.258Z","type":"message"}
{"nick":"felixjet","message":"but i'm trying to use react with a starter kit, and all of them uses express :(","date":"2016-03-17T03:20:57.264Z","type":"message"}
{"nick":"TheThing","message":"also, another thing I like about koa compared to express is, when you're ready to send response, you can EASILY manipulate it in a middleware","date":"2016-03-17T03:21:00.202Z","type":"message"}
{"nick":"felixjet","message":"trying to replace it for koa it's so hard","date":"2016-03-17T03:21:04.398Z","type":"message"}
{"nick":"TheThing","message":"My current project uses express","date":"2016-03-17T03:21:06.190Z","type":"message"}
{"nick":"TheThing","message":"and I've wrapped res.json like three times","date":"2016-03-17T03:21:13.520Z","type":"message"}
{"nick":"TheThing","message":"it's so bad","date":"2016-03-17T03:21:17.750Z","type":"message"}
{"nick":"TheThing","message":"and it makes it hard for me to transform the response or work with it in any way","date":"2016-03-17T03:21:32.696Z","type":"message"}
{"nick":"TheThing","message":"except by wrapping res.json","date":"2016-03-17T03:21:36.037Z","type":"message"}
{"nick":"TheThing","message":"it's absolutely horrible","date":"2016-03-17T03:21:39.589Z","type":"message"}
{"nick":"felixjet","message":"manipulating response is so side-effects anyway","date":"2016-03-17T03:21:43.371Z","type":"message"}
{"nick":"felixjet","message":"the ctx.body is too magic","date":"2016-03-17T03:21:47.355Z","type":"message"}
{"nick":"TheThing","message":"ctx.body is best","date":"2016-03-17T03:21:52.653Z","type":"message"}
{"nick":"TheThing","message":"<3","date":"2016-03-17T03:21:56.694Z","type":"message"}
{"nick":"TheThing","message":"the ctx.body also allows me to re-use routes elsewhere","date":"2016-03-17T03:22:09.651Z","type":"message"}
{"nick":"TheThing","message":"for example: I have a route called getUserSingle","date":"2016-03-17T03:22:20.585Z","type":"message"}
{"nick":"TheThing","message":"it gets the user and does bunch of security stuff and eventually adds the user to ctx.body","date":"2016-03-17T03:22:34.002Z","type":"message"}
{"nick":"TheThing","message":"I can call that same function from different routes to get the routes","date":"2016-03-17T03:22:43.616Z","type":"message"}
{"nick":"felixjet","message":"but you can do that in express too, don't?","date":"2016-03-17T03:23:09.524Z","type":"message"}
{"nick":"TheThing","message":"like: await userRoutes.getUserSingle(ctx); /* do something with user which is now in ctx.body */","date":"2016-03-17T03:23:18.624Z","type":"message"}
{"nick":"TheThing","message":"not really because express routes don't RETURN result","date":"2016-03-17T03:23:35.099Z","type":"message"}
{"nick":"TheThing","message":"they send it into res.json","date":"2016-03-17T03:23:41.882Z","type":"message"}
{"nick":"TheThing","message":"and once it's in res.json you're screwed","date":"2016-03-17T03:23:47.874Z","type":"message"}
{"nick":"TheThing","message":"the upside as I described above is sometimes I have to have tons of security checks surrounding getting resources. I can now implement it one route and call it from different routes if I need to get the resource and do something with it","date":"2016-03-17T03:24:25.254Z","type":"message"}
{"nick":"TheThing","message":"so now for example, PUT for user would be like:","date":"2016-03-17T03:24:41.291Z","type":"message"}
{"nick":"TheThing","message":"function updateUser(ctx) { await getUserSingle(ctx); let user = ctx.body; user.update(req.body); }","date":"2016-03-17T03:25:14.316Z","type":"message"}
{"nick":"TheThing","message":"for example","date":"2016-03-17T03:25:16.096Z","type":"message"}
{"nick":"felixjet","message":"but... you can use a promise based router and chain them, right'","date":"2016-03-17T03:25:24.539Z","type":"message"}
{"nick":"TheThing","message":"a promise based router can't return the result","date":"2016-03-17T03:25:39.407Z","type":"message"}
{"nick":"TheThing","message":"I think you might be misunderstanding something about the promise router express thingy","date":"2016-03-17T03:25:50.806Z","type":"message"}
{"nick":"felixjet","message":"like .then(() => { return getUserSingle() }).then(user => { // do something with user })","date":"2016-03-17T03:25:57.336Z","type":"message"}
{"nick":"TheThing","message":"ahh, you mean like that","date":"2016-03-17T03:26:07.629Z","type":"message"}
{"nick":"TheThing","message":"but then you have a function for every route","date":"2016-03-17T03:26:27.972Z","type":"message"}
{"nick":"felixjet","message":"no, since getUserSingle() is separate","date":"2016-03-17T03:26:44.864Z","type":"message"}
{"nick":"TheThing","message":"if you did it like that","date":"2016-03-17T03:26:48.610Z","type":"message"}
{"nick":"felixjet","message":"you can have it anywhere","date":"2016-03-17T03:26:49.306Z","type":"message"}
{"nick":"TheThing","message":"then for every route like getUserSingle","date":"2016-03-17T03:26:55.336Z","type":"message"}
{"nick":"TheThing","message":"you would have to do: router.get('/users', (req, res) => getUserSingle(req, res).then(req.json))","date":"2016-03-17T03:27:24.050Z","type":"message"}
{"nick":"TheThing","message":"or something like that","date":"2016-03-17T03:27:26.016Z","type":"message"}
{"nick":"felixjet","message":"yea","date":"2016-03-17T03:27:33.503Z","type":"message"}
{"nick":"TheThing","message":"which is a function for every route","date":"2016-03-17T03:27:37.769Z","type":"message"}
{"nick":"TheThing","message":"no matter how hard you try to hide it","date":"2016-03-17T03:27:42.596Z","type":"message"}
{"nick":"TheThing","message":"*res.json","date":"2016-03-17T03:27:51.902Z","type":"message"}
{"nick":"felixjet","message":"but no magic","date":"2016-03-17T03:28:07.403Z","type":"message"}
{"nick":"felixjet","message":"you can see what is happening instead of random middleware mutating the body","date":"2016-03-17T03:28:20.742Z","type":"message"}
{"nick":"TheThing","message":"what random middleware","date":"2016-03-17T03:28:29.757Z","type":"message"}
{"nick":"TheThing","message":"uhh","date":"2016-03-17T03:28:37.307Z","type":"message"}
{"nick":"TheThing","message":"also","date":"2016-03-17T03:28:37.986Z","type":"message"}
{"nick":"TheThing","message":"middleware will ALWAYS have to mutate the body","date":"2016-03-17T03:28:43.805Z","type":"message"}
{"nick":"TheThing","message":"ever used partial?","date":"2016-03-17T03:28:46.777Z","type":"message"}
{"nick":"felixjet","message":"never","date":"2016-03-17T03:29:21.674Z","type":"message"}
{"nick":"TheThing","message":"should check it out","date":"2016-03-17T03:29:32.381Z","type":"message"}
{"nick":"TheThing","message":"it's the best thing ever","date":"2016-03-17T03:29:47.674Z","type":"message"}
{"nick":"TheThing","message":"for an API user","date":"2016-03-17T03:29:58.543Z","type":"message"}
{"nick":"TheThing","message":"I use it on almost all my API stuff","date":"2016-03-17T03:30:05.866Z","type":"message"}
{"nick":"TheThing","message":"also, in the above example","date":"2016-03-17T03:30:49.540Z","type":"message"}
{"nick":"TheThing","message":"router.get('/users', (req, res) => getUserSingle(req, res).then(req.json))","date":"2016-03-17T03:30:50.616Z","type":"message"}
{"nick":"TheThing","message":"getUSerSingle is effectively a resource layer object","date":"2016-03-17T03:30:58.338Z","type":"message"}
{"nick":"TheThing","message":"*function","date":"2016-03-17T03:31:12.543Z","type":"message"}
{"nick":"TheThing","message":"it's not a route controller","date":"2016-03-17T03:31:16.851Z","type":"message"}
{"nick":"felixjet","message":">.<","date":"2016-03-17T03:32:21.197Z","type":"message"}
{"nick":"TheThing","message":"that being said","date":"2016-03-17T03:33:19.275Z","type":"message"}
{"nick":"TheThing","message":"it's something that I've been meaning to think of to do","date":"2016-03-17T03:33:29.383Z","type":"message"}
{"nick":"TheThing","message":"there are two types of implementing security","date":"2016-03-17T03:33:34.718Z","type":"message"}
{"nick":"TheThing","message":"on is explicit and the other implicit","date":"2016-03-17T03:33:39.788Z","type":"message"}
{"nick":"TheThing","message":"most of my project require explicit implementation of security","date":"2016-03-17T03:33:49.724Z","type":"message"}
{"nick":"TheThing","message":"so stuff like this","date":"2016-03-17T03:33:51.445Z","type":"message"}
{"nick":"TheThing","message":"(gonna take a screenshot)","date":"2016-03-17T03:33:57.917Z","type":"message"}
{"nick":"TheThing","message":"I've done a lot of API design and creation over my lifetime and had a lot of bad experience with badly designed stuff (stuff that I've designed(","date":"2016-03-17T03:35:35.483Z","type":"message"}
{"nick":"TheThing","message":"my latest design looks like this:","date":"2016-03-17T03:35:39.662Z","type":"message"}
{"nick":"TheThing","message":"http://i.imgur.com/AnQQf5o.png","date":"2016-03-17T03:35:46.306Z","type":"message"}
{"nick":"TheThing","message":"This is what I call explicit security implementation. Basically, I have to explicitly call or check the security everytime I retrieve (in this case) a cube","date":"2016-03-17T03:36:22.093Z","type":"message"}
{"nick":"TheThing","message":"My ultimate hope is to have security bits implicitly defined, where if I call to get a resource ANYWHERE in the code, it will automatically verify the security for me","date":"2016-03-17T03:37:09.720Z","type":"message"}
{"nick":"felixjet","message":"yea, middleware helps there","date":"2016-03-17T03:37:26.318Z","type":"message"}
{"nick":"TheThing","message":"the problem with explicitly having to check the security is it makes it more likely you'll accidentally forget to call it once","date":"2016-03-17T03:37:36.000Z","type":"message"}
{"nick":"TheThing","message":"I don't want middleware for this though","date":"2016-03-17T03:37:46.159Z","type":"message"}
{"nick":"TheThing","message":"that would be a horrendously huge and horrible to maintain middleware if it had to check the security access on every single resource type","date":"2016-03-17T03:38:07.522Z","type":"message"}
{"nick":"TheThing","message":"in any case, felixjet, I STILL haven't come up with a good solution to this YET","date":"2016-03-17T03:38:33.038Z","type":"message"}
{"nick":"TheThing","message":"this is my latest iteration and it's the least horrible I've done","date":"2016-03-17T03:38:45.898Z","type":"message"}
{"nick":"TheThing","message":"actually, the latest latest iteration I've done was to actually send the req object directly into the database layer and have it take care of any security access for me","date":"2016-03-17T03:39:26.889Z","type":"message"}
{"nick":"TheThing","message":"and I'm leaning on that for my future solution to implementing implicit security access to resources","date":"2016-03-17T03:39:42.928Z","type":"message"}
{"nick":"TheThing","message":"felixjet: http://i.imgur.com/QkvJK99.png the latest latest iteration that I'm STILL not sure is the best way","date":"2016-03-17T03:40:36.968Z","type":"message"}
{"nick":"TheThing","message":"so I'm trying it out and collecting experience on whether I'm happy with this solution","date":"2016-03-17T03:41:16.605Z","type":"message"}
{"nick":"TheThing","action":"is an avid thinker and constantly thinking and brainstorming new design ideas and solutions to implementation problems and etc.","date":"2016-03-17T03:41:36.502Z","type":"action"}
{"nick":"felixjet","message":"probably a framework will replace koa meanwhile","date":"2016-03-17T03:41:40.131Z","type":"message"}
{"nick":"felixjet","message":"xD","date":"2016-03-17T03:41:40.693Z","type":"message"}
{"nick":"TheThing","message":"koa meanwhile?","date":"2016-03-17T03:41:59.609Z","type":"message"}
{"nick":"TheThing","message":"anyways, I should get back to work now","date":"2016-03-17T03:42:25.413Z","type":"message"}
{"nick":"TheThing","message":"working on an older project that unfortunately does not use those clean design routes I just showed you :<","date":"2016-03-17T03:42:42.004Z","type":"message"}
{"nick":"TheThing","message":"it's a horrible mess","date":"2016-03-17T03:42:53.032Z","type":"message"}
{"nick":"TheThing","message":"it's the iteration I did before I came up with the \"clean\" design I posted in the pictures above","date":"2016-03-17T03:43:06.426Z","type":"message"}
{"nick":"TheThing","message":"I really wish companies and projects and programmers would actually share their post mortem so I wouldn't have to go through all their problems","date":"2016-03-17T03:43:43.655Z","type":"message"}
{"nick":"TheThing","message":"I do like that I'm still constantly evolving my programming techniques and skills","date":"2016-03-17T03:44:50.261Z","type":"message"}
{"nick":"TheThing","message":"I've always been afraid I'm growing stale :<","date":"2016-03-17T03:44:56.170Z","type":"message"}
{"nick":"felixjet","message":"like all of us","date":"2016-03-17T03:45:18.098Z","type":"message"}
{"nick":"TheThing","message":"and with that","date":"2016-03-17T03:45:21.967Z","type":"message"}
{"nick":"TheThing","action":"is gone to work, highlight me if you need me or wanna talk more :b","date":"2016-03-17T03:45:37.414Z","type":"action"}
{"nick":"felixjet","message":"thanks mate","date":"2016-03-17T03:45:47.796Z","type":"message"}
{"nick":"TheThing","message":"I would say res.json is more magic than ctx.body but I digress :b","date":"2016-03-17T03:48:09.061Z","type":"message"}
{"nick":"__ransom__","date":"2016-03-17T05:25:44.517Z","type":"join"}
{"nick":"joshontheweb","date":"2016-03-17T06:15:22.463Z","type":"join"}
{"nick":"__ransom__","new_nick":"ransom_","date":"2016-03-17T06:16:13.384Z","type":"nick"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-03-17T06:32:04.139Z","type":"quit"}
{"nick":"TheThing","message":"dammit felixjet","date":"2016-03-17T07:51:26.502Z","type":"message"}
{"nick":"TheThing","message":"look what you made me do: https://github.com/alex-whitney/express-promise-router/pull/22","date":"2016-03-17T07:52:05.799Z","type":"message"}
{"nick":"TheThing","message":":<","date":"2016-03-17T07:52:42.434Z","type":"message"}
{"nick":"joshontheweb","date":"2016-03-17T08:36:15.556Z","type":"join"}
{"nick":"DrMabuse","date":"2016-03-17T11:05:58.393Z","type":"join"}
{"nick":"DrMabuse","reason":"Remote host closed the connection","date":"2016-03-17T11:30:59.880Z","type":"quit"}
{"nick":"Diromox","date":"2016-03-17T11:32:15.000Z","type":"join"}
{"nick":"DrMabuse","date":"2016-03-17T12:01:47.055Z","type":"join"}
{"nick":"DrMabuse","reason":"Read error: Connection reset by peer","date":"2016-03-17T12:03:04.084Z","type":"quit"}
{"nick":"DrMabuse","date":"2016-03-17T12:03:32.486Z","type":"join"}
{"nick":"DrMabuse","reason":"Ping timeout: 260 seconds","date":"2016-03-17T12:10:24.483Z","type":"quit"}
{"nick":"DrMabuse","date":"2016-03-17T12:19:27.543Z","type":"join"}
{"nick":"mezod","date":"2016-03-17T12:20:05.079Z","type":"join"}
{"nick":"TheThing","reason":"Remote host closed the connection","date":"2016-03-17T12:54:43.365Z","type":"quit"}
{"nick":"Diromox","date":"2016-03-17T12:55:21.982Z","type":"quit"}
{"nick":"mezod","reason":"Remote host closed the connection","date":"2016-03-17T13:26:07.756Z","type":"quit"}
{"nick":"mezod","date":"2016-03-17T13:38:10.620Z","type":"join"}
{"nick":"knksmith57","date":"2016-03-17T14:47:51.716Z","type":"join"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-03-17T15:09:08.290Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-03-17T15:09:34.455Z","type":"join"}
{"nick":"joshontheweb","reason":"Ping timeout: 244 seconds","date":"2016-03-17T15:14:16.652Z","type":"quit"}
{"nick":"knksmith57","reason":"Quit: Leaving.","date":"2016-03-17T15:23:53.837Z","type":"quit"}
{"nick":"knksmith57","date":"2016-03-17T15:48:47.048Z","type":"join"}
{"nick":"brianGO","reason":"Ping timeout: 246 seconds","date":"2016-03-17T15:50:33.371Z","type":"quit"}
