{"nick":"jcarpenter2","date":"2017-12-29T00:00:21.556Z","type":"join"}
{"nick":"justicefries","date":"2017-12-29T00:00:53.876Z","type":"join"}
{"nick":"uuplusu","reason":"Ping timeout: 252 seconds","date":"2017-12-29T00:01:08.497Z","type":"quit"}
{"nick":"SargoDarya","reason":"Quit: PanicBNC - http://PanicBNC.net","date":"2017-12-29T00:03:21.434Z","type":"quit"}
{"nick":"EyePulp","date":"2017-12-29T00:03:37.527Z","type":"join"}
{"nick":"MeTonaTOR","reason":"Read error: Connection reset by peer","date":"2017-12-29T00:05:28.308Z","type":"quit"}
{"nick":"uuplusu","date":"2017-12-29T00:05:30.513Z","type":"join"}
{"nick":"SargoDarya","date":"2017-12-29T00:07:39.808Z","type":"join"}
{"nick":"EyePulp","reason":"Ping timeout: 264 seconds","date":"2017-12-29T00:08:09.159Z","type":"quit"}
{"nick":"roomcayz","reason":"Quit: roomcayz","date":"2017-12-29T00:08:25.030Z","type":"quit"}
{"nick":"justicefries","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T00:09:32.435Z","type":"quit"}
{"nick":"uuplusu","reason":"Ping timeout: 256 seconds","date":"2017-12-29T00:10:09.493Z","type":"quit"}
{"nick":"ljharb","message":"Lcfvs: you mean scoped modules? @user/module?","date":"2017-12-29T00:10:25.351Z","type":"message"}
{"nick":"ljharb","message":"Lcfvs: it's part of the package name, so no, you can't use it on an existing module","date":"2017-12-29T00:10:35.880Z","type":"message"}
{"nick":"ljharb","message":"Lcfvs: it's also not \"new\", it's been around for over a year","date":"2017-12-29T00:10:44.939Z","type":"message"}
{"nick":"Lcfvs","message":"ok, ok, thx","date":"2017-12-29T00:10:55.095Z","type":"message"}
{"nick":"ljharb","message":"the new changes are simply that you can't make a package name that's similar to an existing one.","date":"2017-12-29T00:11:00.270Z","type":"message"}
{"nick":"zpmorgan","reason":"Ping timeout: 250 seconds","date":"2017-12-29T00:11:41.727Z","type":"quit"}
{"nick":"mandric_","reason":"Quit: Computer has gone to sleep.","date":"2017-12-29T00:11:49.411Z","type":"quit"}
{"nick":"__main__","date":"2017-12-29T00:12:00.416Z","type":"join"}
{"nick":"Lcfvs","message":"I think new because the post is dated 26/12/2017","date":"2017-12-29T00:12:22.999Z","type":"message"}
{"nick":"Lcfvs","message":"but ok, noted :)","date":"2017-12-29T00:12:36.562Z","type":"message"}
{"nick":"uuplusu","date":"2017-12-29T00:13:05.921Z","type":"join"}
{"nick":"ljharb","message":"Lcfvs: i told you the new part. scopes are not new.","date":"2017-12-29T00:13:23.160Z","type":"message"}
{"nick":"BSaboia","date":"2017-12-29T00:13:30.229Z","type":"join"}
{"nick":"Lcfvs","message":"I see :)","date":"2017-12-29T00:13:44.416Z","type":"message"}
{"nick":"BSaboia","reason":"Max SendQ exceeded","date":"2017-12-29T00:13:50.258Z","type":"quit"}
{"nick":"Lcfvs","message":"a lot of PHP, the last 2 years, then I'm not up to date around node :|","date":"2017-12-29T00:14:43.870Z","type":"message"}
{"nick":"ovsh","message":"I have a small bruteforcer that I built in node that now needs to try 4 billion possible combinations. I used a simple array to generate the combinations & a loop to check them all, but this of course runs out of memory with 4 billion combinations (was much smaller before). Any idea how to quickly divide and conquer this?","date":"2017-12-29T00:14:47.494Z","type":"message"}
{"nick":"zwliew","date":"2017-12-29T00:15:05.857Z","type":"join"}
{"nick":"agnat_","date":"2017-12-29T00:16:47.996Z","type":"join"}
{"nick":"igemnace","reason":"Ping timeout: 260 seconds","date":"2017-12-29T00:17:21.200Z","type":"quit"}
{"nick":"igemnace","date":"2017-12-29T00:18:25.667Z","type":"join"}
{"nick":"agnat","reason":"Ping timeout: 240 seconds","date":"2017-12-29T00:18:35.526Z","type":"quit"}
{"nick":"agnat_","new_nick":"agnat","date":"2017-12-29T00:18:36.038Z","type":"nick"}
{"nick":"sterns","date":"2017-12-29T00:18:44.212Z","type":"join"}
{"nick":"uuplusu","reason":"Remote host closed the connection","date":"2017-12-29T00:19:13.490Z","type":"quit"}
{"nick":"uuplusu","date":"2017-12-29T00:19:28.595Z","type":"join"}
{"nick":"dman777_alter","reason":"Quit: Page closed","date":"2017-12-29T00:20:08.354Z","type":"quit"}
{"nick":"easzero","reason":"Quit: Leaving","date":"2017-12-29T00:20:39.272Z","type":"quit"}
{"nick":"Hu0p","date":"2017-12-29T00:22:08.167Z","type":"join"}
{"nick":"tvw","date":"2017-12-29T00:23:24.664Z","type":"quit"}
{"nick":"Lcfvs","message":"'night all","date":"2017-12-29T00:26:57.831Z","type":"message"}
{"nick":"Lcfvs","message":"ljharb: thx again :)","date":"2017-12-29T00:27:10.230Z","type":"message"}
{"nick":"Lcfvs","message":"++","date":"2017-12-29T00:27:14.617Z","type":"message"}
{"nick":"Lcfvs","reason":"Quit: Page closed","date":"2017-12-29T00:27:20.017Z","type":"quit"}
{"nick":"gdainti","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T00:27:41.133Z","type":"quit"}
{"nick":"Arimil","date":"2017-12-29T00:27:55.843Z","type":"join"}
{"nick":"ironfroggy","date":"2017-12-29T00:28:05.765Z","type":"join"}
{"nick":"Arimil","message":"Hey guys, I'm running a website that uses node on the back end, I was wondering if there was an easy way to use npm for js libraries that the client is using when we don't know their path?","date":"2017-12-29T00:28:38.459Z","type":"message"}
{"nick":"GreenJello","message":"Arimil, often webpack is used to let client side code require/import modules","date":"2017-12-29T00:29:14.941Z","type":"message"}
{"nick":"pkx2","reason":"Remote host closed the connection","date":"2017-12-29T00:29:17.707Z","type":"quit"}
{"nick":"Silenced","date":"2017-12-29T00:29:28.656Z","type":"join"}
{"nick":"GreenJello","message":"Arimil, but I don't know if that qualifies as \"easy\"","date":"2017-12-29T00:29:29.697Z","type":"message"}
{"nick":"GreenJello","message":"probably not","date":"2017-12-29T00:29:34.004Z","type":"message"}
{"nick":"Arimil","message":"Well, it'll have to do then, thanks.","date":"2017-12-29T00:29:46.847Z","type":"message"}
{"nick":"Arimil","message":"I'll go read about that.","date":"2017-12-29T00:29:52.717Z","type":"message"}
{"nick":"[iczero]","new_nick":"]orezci[","date":"2017-12-29T00:30:42.732Z","type":"nick"}
{"nick":"x405","date":"2017-12-29T00:31:05.015Z","type":"quit"}
{"nick":"ironfroggy","reason":"Ping timeout: 240 seconds","date":"2017-12-29T00:32:27.794Z","type":"quit"}
{"nick":"xNinjaDNT","date":"2017-12-29T00:36:37.193Z","type":"join"}
{"nick":"fourq","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-12-29T00:39:53.673Z","type":"quit"}
{"nick":"phlyrmn","date":"2017-12-29T00:41:18.952Z","type":"join"}
{"nick":"xNinjaDNT","reason":"Ping timeout: 272 seconds","date":"2017-12-29T00:41:20.179Z","type":"quit"}
{"nick":"fourq","date":"2017-12-29T00:41:27.641Z","type":"join"}
{"nick":"asteele","date":"2017-12-29T00:45:45.476Z","type":"join"}
{"nick":"chjango","date":"2017-12-29T00:45:59.469Z","type":"join"}
{"nick":"chjango","reason":"Client Quit","date":"2017-12-29T00:46:16.997Z","type":"quit"}
{"nick":"xNinjaDNT","date":"2017-12-29T00:48:56.155Z","type":"join"}
{"nick":"phlyrmn","reason":"Remote host closed the connection","date":"2017-12-29T00:49:17.953Z","type":"quit"}
{"nick":"doodadjs","reason":"Quit: Leaving","date":"2017-12-29T00:52:39.077Z","type":"quit"}
{"nick":"aqrln","date":"2017-12-29T00:56:10.548Z","type":"join"}
{"nick":"jxv","date":"2017-12-29T00:57:43.313Z","type":"join"}
{"nick":"Sven_vB_","new_nick":"Sven_vB","date":"2017-12-29T00:58:31.564Z","type":"nick"}
{"nick":"xrash","date":"2017-12-29T00:59:29.892Z","type":"join"}
{"nick":"plevexier","date":"2017-12-29T01:00:54.576Z","type":"join"}
{"nick":"cotko3","reason":"Quit: Konversation terminated!","date":"2017-12-29T01:02:04.002Z","type":"quit"}
{"nick":"aqrln","reason":"Ping timeout: 240 seconds","date":"2017-12-29T01:02:05.536Z","type":"quit"}
{"nick":"chjango","date":"2017-12-29T01:02:07.446Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2017-12-29T01:03:22.288Z","type":"quit"}
{"nick":"Forlorn","reason":"Ping timeout: 268 seconds","date":"2017-12-29T01:04:14.632Z","type":"quit"}
{"nick":"DeltaHeavy","message":"GreenJello Arimil v2+ does it by default","date":"2017-12-29T01:04:27.645Z","type":"message"}
{"nick":"Cabanossi","date":"2017-12-29T01:04:42.737Z","type":"join"}
{"nick":"plevexier","reason":"Quit: Leaving.","date":"2017-12-29T01:06:27.090Z","type":"quit"}
{"nick":"cotko4","date":"2017-12-29T01:09:47.553Z","type":"join"}
{"nick":"Rev_Illo","date":"2017-12-29T01:11:08.552Z","type":"join"}
{"nick":"re1","reason":"Read error: Connection reset by peer","date":"2017-12-29T01:12:19.532Z","type":"quit"}
{"nick":"Neo2","reason":"Quit: Neo2","date":"2017-12-29T01:12:50.641Z","type":"quit"}
{"nick":"prometh","reason":"Quit: My Mac Mini has gone to sleep. ZZZzzz…","date":"2017-12-29T01:12:56.395Z","type":"quit"}
{"nick":"MrAbaddon","date":"2017-12-29T01:13:50.470Z","type":"join"}
{"nick":"asteele","reason":"Ping timeout: 248 seconds","date":"2017-12-29T01:15:13.583Z","type":"quit"}
{"nick":"Arimil","reason":"Ping timeout: 260 seconds","date":"2017-12-29T01:18:59.960Z","type":"quit"}
{"nick":"DeltaHeavy","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-12-29T01:19:39.443Z","type":"quit"}
{"nick":"ed209","reason":"Remote host closed the connection","date":"2017-12-29T01:20:00.806Z","type":"quit"}
{"nick":"ed209","date":"2017-12-29T01:20:07.840Z","type":"join"}
{"nick":"DeltaHeavy","date":"2017-12-29T01:20:20.041Z","type":"join"}
{"nick":"ironfroggy","date":"2017-12-29T01:22:18.554Z","type":"join"}
{"nick":"Rev_Illo","reason":"Ping timeout: 252 seconds","date":"2017-12-29T01:23:38.463Z","type":"quit"}
{"nick":"cotko4","reason":"Quit: Konversation terminated!","date":"2017-12-29T01:24:14.390Z","type":"quit"}
{"nick":"Delta-One","reason":"Read error: Connection reset by peer","date":"2017-12-29T01:24:38.956Z","type":"quit"}
{"nick":"Delta-One","date":"2017-12-29T01:25:04.511Z","type":"join"}
{"nick":"aqrln","date":"2017-12-29T01:25:54.008Z","type":"join"}
{"nick":"jscriptStudent","date":"2017-12-29T01:26:30.213Z","type":"join"}
{"nick":"ironfroggy","reason":"Ping timeout: 256 seconds","date":"2017-12-29T01:26:39.462Z","type":"quit"}
{"nick":"_ritchie__","date":"2017-12-29T01:27:06.322Z","type":"join"}
{"nick":"_ritchie_","reason":"Ping timeout: 264 seconds","date":"2017-12-29T01:28:33.357Z","type":"quit"}
{"nick":"_ritchie__","new_nick":"_ritchie_","date":"2017-12-29T01:28:33.439Z","type":"nick"}
{"nick":"aqrln","reason":"Ping timeout: 265 seconds","date":"2017-12-29T01:30:28.484Z","type":"quit"}
{"nick":"ok91","date":"2017-12-29T01:32:45.236Z","type":"join"}
{"nick":"chjango","reason":"Ping timeout: 265 seconds","date":"2017-12-29T01:33:51.417Z","type":"quit"}
{"nick":"OTBS4Life","date":"2017-12-29T01:34:21.543Z","type":"join"}
{"nick":"kbkk","reason":"Quit: Leaving","date":"2017-12-29T01:34:27.977Z","type":"quit"}
{"nick":"samsch","reason":"Quit: Leaving","date":"2017-12-29T01:35:49.333Z","type":"quit"}
{"nick":"phil22","date":"2017-12-29T01:36:05.186Z","type":"join"}
{"nick":"ok91","reason":"Ping timeout: 264 seconds","date":"2017-12-29T01:37:33.232Z","type":"quit"}
{"nick":"safe","date":"2017-12-29T01:40:00.947Z","type":"join"}
{"nick":"chjango","date":"2017-12-29T01:40:27.564Z","type":"join"}
{"nick":"aqrln","date":"2017-12-29T01:43:25.591Z","type":"join"}
{"nick":"jscriptStudent","reason":"Read error: Connection reset by peer","date":"2017-12-29T01:46:48.325Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-12-29T01:47:08.536Z","type":"join"}
{"nick":"aqrln","reason":"Ping timeout: 252 seconds","date":"2017-12-29T01:47:50.465Z","type":"quit"}
{"nick":"fourq","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T01:49:34.515Z","type":"quit"}
{"nick":"Forlorn","date":"2017-12-29T01:50:40.238Z","type":"join"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-12-29T01:52:44.539Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-12-29T01:52:58.502Z","type":"join"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-12-29T01:53:30.248Z","type":"quit"}
{"nick":"kid_icarus","reason":"Ping timeout: 250 seconds","date":"2017-12-29T01:53:31.819Z","type":"quit"}
{"nick":"foddo","reason":"Read error: Connection reset by peer","date":"2017-12-29T01:53:36.141Z","type":"quit"}
{"nick":"whit537","reason":"Ping timeout: 265 seconds","date":"2017-12-29T01:53:40.422Z","type":"quit"}
{"nick":"McKay","reason":"Read error: Connection reset by peer","date":"2017-12-29T01:53:45.111Z","type":"quit"}
{"nick":"petris","reason":"Read error: Connection reset by peer","date":"2017-12-29T01:53:51.896Z","type":"quit"}
{"nick":"Bantalon","reason":"Ping timeout: 240 seconds","date":"2017-12-29T01:53:51.982Z","type":"quit"}
{"nick":"merpnderp","reason":"Write error: Connection reset by peer","date":"2017-12-29T01:53:52.051Z","type":"quit"}
{"nick":"HeN","reason":"Read error: Connection reset by peer","date":"2017-12-29T01:53:52.119Z","type":"quit"}
{"nick":"stealthii","reason":"Read error: Connection reset by peer","date":"2017-12-29T01:53:52.417Z","type":"quit"}
{"nick":"tharuin","reason":"Read error: Connection reset by peer","date":"2017-12-29T01:53:52.745Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-12-29T01:54:11.172Z","type":"join"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-12-29T01:54:18.279Z","type":"quit"}
{"nick":"foddo","date":"2017-12-29T01:54:28.611Z","type":"join"}
{"nick":"whit537","date":"2017-12-29T01:54:46.355Z","type":"join"}
{"nick":"kid_icarus","date":"2017-12-29T01:54:50.521Z","type":"join"}
{"nick":"McKay","date":"2017-12-29T01:54:56.283Z","type":"join"}
{"nick":"merpnderp","date":"2017-12-29T01:55:04.632Z","type":"join"}
{"nick":"Bantalon","date":"2017-12-29T01:55:04.700Z","type":"join"}
{"nick":"petris","date":"2017-12-29T01:55:14.649Z","type":"join"}
{"nick":"tharuin","date":"2017-12-29T01:55:20.736Z","type":"join"}
{"nick":"HeN","date":"2017-12-29T01:55:32.323Z","type":"join"}
{"nick":"stealthii","date":"2017-12-29T01:55:45.653Z","type":"join"}
{"nick":"jscriptStudent","date":"2017-12-29T01:56:25.631Z","type":"join"}
{"nick":"Gustavo6046","reason":"Quit: Leaving","date":"2017-12-29T01:57:40.586Z","type":"quit"}
{"nick":"aqrln","date":"2017-12-29T01:58:00.299Z","type":"join"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2017-12-29T01:58:03.260Z","type":"quit"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T01:59:00.572Z","type":"quit"}
{"nick":"microdex","date":"2017-12-29T01:59:51.527Z","type":"join"}
{"nick":"Arcarc","reason":"Ping timeout: 248 seconds","date":"2017-12-29T02:01:05.527Z","type":"quit"}
{"nick":"Neo2","date":"2017-12-29T02:01:22.491Z","type":"join"}
{"nick":"jscriptStudent","reason":"Ping timeout: 268 seconds","date":"2017-12-29T02:01:35.629Z","type":"quit"}
{"nick":"gli","date":"2017-12-29T02:02:21.629Z","type":"join"}
{"nick":"plevexier","date":"2017-12-29T02:02:23.242Z","type":"join"}
{"nick":"orbyt_","date":"2017-12-29T02:03:23.328Z","type":"join"}
{"nick":"xNinjaDNT","reason":"Ping timeout: 264 seconds","date":"2017-12-29T02:06:21.281Z","type":"quit"}
{"nick":"xNinjaDNT","date":"2017-12-29T02:12:48.162Z","type":"join"}
{"nick":"Circlefusion","date":"2017-12-29T02:14:34.806Z","type":"join"}
{"nick":"pilne","reason":"Quit: Quitting!","date":"2017-12-29T02:15:30.905Z","type":"quit"}
{"nick":"ironfroggy","date":"2017-12-29T02:16:37.566Z","type":"join"}
{"nick":"discopatrick","reason":"Quit: Connection closed for inactivity","date":"2017-12-29T02:16:42.781Z","type":"quit"}
{"nick":"phil23","date":"2017-12-29T02:18:55.766Z","type":"join"}
{"nick":"phil22","reason":"Read error: Connection reset by peer","date":"2017-12-29T02:18:55.929Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-12-29T02:19:58.534Z","type":"join"}
{"nick":"flashpoint9","reason":"Remote host closed the connection","date":"2017-12-29T02:20:26.414Z","type":"quit"}
{"nick":"ironfroggy","reason":"Ping timeout: 248 seconds","date":"2017-12-29T02:20:49.599Z","type":"quit"}
{"nick":"jscriptStudent","reason":"Read error: Connection reset by peer","date":"2017-12-29T02:20:49.763Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-12-29T02:21:21.068Z","type":"join"}
{"nick":"eshlox","reason":"Quit: Connection closed for inactivity","date":"2017-12-29T02:23:29.517Z","type":"quit"}
{"nick":"piyer","message":"what is best way to drain data in stream? based on some event I am manually emitting end of stream, after that, I am trying to end the source and drain all the data in the pipeline.","date":"2017-12-29T02:24:41.449Z","type":"message"}
{"nick":"ffx_","date":"2017-12-29T02:25:10.227Z","type":"join"}
{"nick":"jscriptStudent","reason":"Ping timeout: 256 seconds","date":"2017-12-29T02:26:09.435Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-12-29T02:26:24.062Z","type":"join"}
{"nick":"doodadjs","date":"2017-12-29T02:26:36.755Z","type":"join"}
{"nick":"Arcaelyx","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T02:26:40.266Z","type":"quit"}
{"nick":"Neo2","reason":"Quit: Neo2","date":"2017-12-29T02:26:53.388Z","type":"quit"}
{"nick":"ffx","reason":"Ping timeout: 246 seconds","date":"2017-12-29T02:28:15.730Z","type":"quit"}
{"nick":"zwliew","reason":"Quit: Connection closed for inactivity","date":"2017-12-29T02:33:28.708Z","type":"quit"}
{"nick":"phil23","reason":"Quit: WeeChat 2.0","date":"2017-12-29T02:33:30.018Z","type":"quit"}
{"nick":"Silenced","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T02:35:13.768Z","type":"quit"}
{"nick":"jxv","reason":"Quit: zzz…","date":"2017-12-29T02:35:36.635Z","type":"quit"}
{"nick":"rich","reason":"Quit: WeeChat 1.0.1","date":"2017-12-29T02:41:23.628Z","type":"quit"}
{"nick":"Neo2","date":"2017-12-29T02:41:50.469Z","type":"join"}
{"nick":"mihaele","date":"2017-12-29T02:42:20.266Z","type":"join"}
{"nick":"flashpoint9","date":"2017-12-29T02:44:15.326Z","type":"join"}
{"nick":"dont-panic","date":"2017-12-29T02:47:12.288Z","type":"join"}
{"nick":"happyhippo","reason":"Remote host closed the connection","date":"2017-12-29T02:47:17.515Z","type":"quit"}
{"nick":"Neo2","reason":"Quit: Neo2","date":"2017-12-29T02:48:01.801Z","type":"quit"}
{"nick":"wonko7","reason":"Ping timeout: 265 seconds","date":"2017-12-29T02:48:46.525Z","type":"quit"}
{"nick":"herpyDerp","reason":"Quit: Connection closed for inactivity","date":"2017-12-29T02:51:54.362Z","type":"quit"}
{"nick":"IanLiu","reason":"Quit: IanLiu","date":"2017-12-29T02:53:46.124Z","type":"quit"}
{"nick":"ffx_","reason":"Remote host closed the connection","date":"2017-12-29T02:54:03.634Z","type":"quit"}
{"nick":"Cache_Money","date":"2017-12-29T02:55:31.170Z","type":"join"}
{"nick":"earendel","reason":"Ping timeout: 260 seconds","date":"2017-12-29T02:56:01.249Z","type":"quit"}
{"nick":"zxc","date":"2017-12-29T02:57:04.633Z","type":"join"}
{"nick":"jxv","date":"2017-12-29T02:57:14.792Z","type":"join"}
{"nick":"earendel","date":"2017-12-29T02:59:00.518Z","type":"join"}
{"nick":"fandi","reason":"Remote host closed the connection","date":"2017-12-29T02:59:25.906Z","type":"quit"}
{"nick":"flashpoint9","reason":"Remote host closed the connection","date":"2017-12-29T03:00:01.259Z","type":"quit"}
{"nick":"jxv","reason":"Client Quit","date":"2017-12-29T03:01:02.318Z","type":"quit"}
{"nick":"microdex","reason":"Remote host closed the connection","date":"2017-12-29T03:01:16.591Z","type":"quit"}
{"nick":"Cache_Money","reason":"Quit: Cache_Money","date":"2017-12-29T03:01:27.665Z","type":"quit"}
{"nick":"cannap","reason":"Quit: Leaving","date":"2017-12-29T03:01:33.002Z","type":"quit"}
{"nick":"flashpoint9","date":"2017-12-29T03:01:35.299Z","type":"join"}
{"nick":"VoradorPT","reason":"Quit: out","date":"2017-12-29T03:02:42.709Z","type":"quit"}
{"nick":"jxv","date":"2017-12-29T03:04:38.941Z","type":"join"}
{"nick":"qrestlove","date":"2017-12-29T03:08:33.480Z","type":"join"}
{"nick":"plevexier","reason":"Quit: Leaving.","date":"2017-12-29T03:09:30.449Z","type":"quit"}
{"nick":"Roughy","reason":"Quit: Meadow Fresh milk","date":"2017-12-29T03:14:20.306Z","type":"quit"}
{"nick":"wonko7","date":"2017-12-29T03:15:29.966Z","type":"join"}
{"nick":"theWhisper_","date":"2017-12-29T03:15:36.237Z","type":"join"}
{"nick":"plevexier","date":"2017-12-29T03:15:52.531Z","type":"join"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T03:18:34.809Z","type":"quit"}
{"nick":"xNinjaDNT","message":"a","date":"2017-12-29T03:21:06.776Z","type":"message"}
{"nick":"Phloxx","reason":"Ping timeout: 265 seconds","date":"2017-12-29T03:21:38.429Z","type":"quit"}
{"nick":"Phloxx","date":"2017-12-29T03:22:51.450Z","type":"join"}
{"nick":"plevexier","reason":"Quit: Leaving.","date":"2017-12-29T03:23:58.958Z","type":"quit"}
{"nick":"flashpoint9","reason":"Remote host closed the connection","date":"2017-12-29T03:25:51.508Z","type":"quit"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-12-29T03:25:58.547Z","type":"quit"}
{"nick":"sanchexm","reason":"Remote host closed the connection","date":"2017-12-29T03:27:23.187Z","type":"quit"}
{"nick":"dont-panic","date":"2017-12-29T03:28:38.593Z","type":"part"}
{"nick":"flashpoint9","date":"2017-12-29T03:33:57.486Z","type":"join"}
{"nick":"Arcaelyx","date":"2017-12-29T03:34:07.427Z","type":"join"}
{"nick":"webguynow","reason":"Ping timeout: 240 seconds","date":"2017-12-29T03:35:27.834Z","type":"quit"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T03:35:45.317Z","type":"quit"}
{"nick":"webguynow","date":"2017-12-29T03:36:15.579Z","type":"join"}
{"nick":"flashpoint9","reason":"Remote host closed the connection","date":"2017-12-29T03:36:37.092Z","type":"quit"}
{"nick":"Forlorn","reason":"Quit: Lost terminal","date":"2017-12-29T03:37:29.998Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-12-29T03:39:35.303Z","type":"join"}
{"nick":"Neo2","date":"2017-12-29T03:39:47.483Z","type":"join"}
{"nick":"jscriptS_","date":"2017-12-29T03:40:26.633Z","type":"join"}
{"nick":"jscriptS_","reason":"Remote host closed the connection","date":"2017-12-29T03:40:57.238Z","type":"quit"}
{"nick":"mihaele","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T03:41:37.312Z","type":"quit"}
{"nick":"mihaele","date":"2017-12-29T03:42:28.633Z","type":"join"}
{"nick":"webdev007","reason":"Remote host closed the connection","date":"2017-12-29T03:43:12.572Z","type":"quit"}
{"nick":"jscriptStudent","reason":"Ping timeout: 264 seconds","date":"2017-12-29T03:44:09.167Z","type":"quit"}
{"nick":"jtl_","date":"2017-12-29T03:45:03.043Z","type":"join"}
{"nick":"smccarth_","reason":"Remote host closed the connection","date":"2017-12-29T03:45:39.567Z","type":"quit"}
{"nick":"flashpoint9","date":"2017-12-29T03:52:22.209Z","type":"join"}
{"nick":"DeltaHeavy","reason":"Ping timeout: 265 seconds","date":"2017-12-29T03:55:28.450Z","type":"quit"}
{"nick":"bq_","date":"2017-12-29T03:55:59.693Z","type":"join"}
{"nick":"wonko7","reason":"Ping timeout: 252 seconds","date":"2017-12-29T04:01:29.528Z","type":"quit"}
{"nick":"DeltaHeavy","date":"2017-12-29T04:01:37.946Z","type":"join"}
{"nick":"ironfroggy","date":"2017-12-29T04:04:48.469Z","type":"join"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-12-29T04:08:35.937Z","type":"quit"}
{"nick":"smccarthy","date":"2017-12-29T04:09:11.443Z","type":"join"}
{"nick":"ironfroggy","reason":"Ping timeout: 252 seconds","date":"2017-12-29T04:09:11.523Z","type":"quit"}
{"nick":"qrestlove","reason":"Ping timeout: 265 seconds","date":"2017-12-29T04:10:56.465Z","type":"quit"}
{"nick":"orbyt_","date":"2017-12-29T04:14:45.938Z","type":"join"}
{"nick":"Neo2","reason":"Quit: Neo2","date":"2017-12-29T04:21:02.080Z","type":"quit"}
{"nick":"asteele","date":"2017-12-29T04:21:04.711Z","type":"join"}
{"nick":"xNinjaDNT","reason":"Ping timeout: 264 seconds","date":"2017-12-29T04:23:09.224Z","type":"quit"}
{"nick":"qrestlove","date":"2017-12-29T04:24:24.481Z","type":"join"}
{"nick":"drewmcmillan","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T04:25:37.937Z","type":"quit"}
{"nick":"DeltaHeavy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T04:25:40.486Z","type":"quit"}
{"nick":"wonko7","date":"2017-12-29T04:28:43.994Z","type":"join"}
{"nick":"igemnace","reason":"Ping timeout: 260 seconds","date":"2017-12-29T04:29:21.190Z","type":"quit"}
{"nick":"xNinjaDNT","date":"2017-12-29T04:30:35.790Z","type":"join"}
{"nick":"smccarthy","reason":"Remote host closed the connection","date":"2017-12-29T04:31:42.245Z","type":"quit"}
{"nick":"webguynow","reason":"Ping timeout: 260 seconds","date":"2017-12-29T04:32:16.224Z","type":"quit"}
{"nick":"smccarthy","date":"2017-12-29T04:32:16.511Z","type":"join"}
{"nick":"webguynow","date":"2017-12-29T04:33:11.437Z","type":"join"}
{"nick":"piyer","date":"2017-12-29T04:39:40.361Z","type":"join"}
{"nick":"leptone","date":"2017-12-29T04:45:35.452Z","type":"join"}
{"nick":"bq_","reason":"Read error: Connection reset by peer","date":"2017-12-29T04:46:02.007Z","type":"quit"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-12-29T04:47:13.481Z","type":"quit"}
{"nick":"leptone_","date":"2017-12-29T04:47:51.405Z","type":"join"}
{"nick":"leptone","reason":"Ping timeout: 265 seconds","date":"2017-12-29T04:52:01.414Z","type":"quit"}
{"nick":"igemnace","date":"2017-12-29T04:53:46.798Z","type":"join"}
{"nick":"myndzi","message":"got a bit of a puzzle i'm trying to work out an elegant solution to","date":"2017-12-29T04:54:37.977Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 276 seconds","date":"2017-12-29T04:54:38.148Z","type":"quit"}
{"nick":"myndzi","message":"https://runkit.com/myndzi/5a457e7b0196720012cec8c8 the data at the bottom describes a series of groups of offsets that must be tested for the presence or absence of a value","date":"2017-12-29T04:55:55.943Z","type":"message"}
{"nick":"myndzi","message":"if there's a hit in one of the arrays, the entire group can be ruled out","date":"2017-12-29T04:56:07.816Z","type":"message"}
{"nick":"myndzi","message":"i'm looking for the first of the lot for which every offset is a miss","date":"2017-12-29T04:56:25.209Z","type":"message"}
{"nick":"myndzi","message":"it seems clear i can build some kind of a data structure to test each value at most once","date":"2017-12-29T04:56:35.499Z","type":"message"}
{"nick":"myndzi","message":"but so far my attempts to do so have been kinda messy","date":"2017-12-29T04:56:45.061Z","type":"message"}
{"nick":"myndzi","message":"i'm wondering if anyone has smart ideas :)","date":"2017-12-29T04:56:53.161Z","type":"message"}
{"nick":"Cabanossi","date":"2017-12-29T04:56:56.737Z","type":"join"}
{"nick":"myndzi","message":"the end result i want is a sequence of \"test this offset, go here if it works, here if it doesn't\"","date":"2017-12-29T04:57:32.978Z","type":"message"}
{"nick":"myndzi","message":"and it needs to be able to say \"this was the end of one of the groups, here's the success value\"","date":"2017-12-29T04:57:51.184Z","type":"message"}
{"nick":"smccarth_","date":"2017-12-29T04:58:07.764Z","type":"join"}
{"nick":"myndzi","message":"as an example, if offsets 1, 2, and 23 all are misses, i want a value (0) that is 1:1 with the group at index 0","date":"2017-12-29T04:58:26.559Z","type":"message"}
{"nick":"ironfroggy","date":"2017-12-29T04:58:49.773Z","type":"join"}
{"nick":"myndzi","message":"if 1 is a hit, i skip the group at index 1 and test 22 and 23; if these succeed, i want a value (10) associated with index 2, having checked three offsets: 1, 22, 33","date":"2017-12-29T04:58:59.962Z","type":"message"}
{"nick":"jxv","reason":"Quit: zzz…","date":"2017-12-29T05:00:02.143Z","type":"quit"}
{"nick":"piyer","date":"2017-12-29T05:00:56.986Z","type":"join"}
{"nick":"piyer","reason":"Read error: Connection reset by peer","date":"2017-12-29T05:00:57.532Z","type":"quit"}
{"nick":"smccarthy","reason":"Ping timeout: 252 seconds","date":"2017-12-29T05:01:26.458Z","type":"quit"}
{"nick":"hillct","reason":"Quit: hillct","date":"2017-12-29T05:02:39.811Z","type":"quit"}
{"nick":"ironfroggy","reason":"Ping timeout: 240 seconds","date":"2017-12-29T05:02:57.764Z","type":"quit"}
{"nick":"justicefries","date":"2017-12-29T05:03:37.058Z","type":"join"}
{"nick":"zxc_","date":"2017-12-29T05:07:03.944Z","type":"join"}
{"nick":"flashpoint9","reason":"Ping timeout: 240 seconds","date":"2017-12-29T05:08:27.904Z","type":"quit"}
{"nick":"zxc","reason":"Ping timeout: 268 seconds","date":"2017-12-29T05:09:40.634Z","type":"quit"}
{"nick":"piyer","date":"2017-12-29T05:12:17.492Z","type":"join"}
{"nick":"jxv","date":"2017-12-29T05:12:47.459Z","type":"join"}
{"nick":"flashpoint9","date":"2017-12-29T05:17:57.274Z","type":"join"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T05:21:17.994Z","type":"quit"}
{"nick":"chjango","reason":"Remote host closed the connection","date":"2017-12-29T05:24:34.288Z","type":"quit"}
{"nick":"uuplusu","reason":"Remote host closed the connection","date":"2017-12-29T05:31:47.551Z","type":"quit"}
{"nick":"smccarth_","reason":"Remote host closed the connection","date":"2017-12-29T05:32:20.095Z","type":"quit"}
{"nick":"flashpoint9","reason":"Remote host closed the connection","date":"2017-12-29T05:34:22.125Z","type":"quit"}
{"nick":"flashpoint9","date":"2017-12-29T05:34:49.246Z","type":"join"}
{"nick":"jcarpenter2","reason":"Quit: Leaving","date":"2017-12-29T05:35:07.587Z","type":"quit"}
{"nick":"jcarpenter2","date":"2017-12-29T05:35:19.284Z","type":"join"}
{"nick":"sbellina","date":"2017-12-29T05:37:43.208Z","type":"join"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-12-29T05:39:15.466Z","type":"quit"}
{"nick":"uuplusu","date":"2017-12-29T05:39:19.212Z","type":"join"}
{"nick":"flashpoint9","reason":"Ping timeout: 264 seconds","date":"2017-12-29T05:39:57.355Z","type":"quit"}
{"nick":"uuplusu","reason":"Ping timeout: 260 seconds","date":"2017-12-29T05:44:01.217Z","type":"quit"}
{"nick":"microdex","date":"2017-12-29T05:45:12.341Z","type":"join"}
{"nick":"leptone_","reason":"Remote host closed the connection","date":"2017-12-29T05:46:18.463Z","type":"quit"}
{"nick":"uuplusu","date":"2017-12-29T05:48:14.244Z","type":"join"}
{"nick":"iFire","reason":"Ping timeout: 272 seconds","date":"2017-12-29T05:49:46.218Z","type":"quit"}
{"nick":"iFire","date":"2017-12-29T05:51:04.234Z","type":"join"}
{"nick":"uuplusu_","date":"2017-12-29T05:51:07.563Z","type":"join"}
{"nick":"flashpoint9","date":"2017-12-29T05:51:13.261Z","type":"join"}
{"nick":"piyer","date":"2017-12-29T05:52:00.691Z","type":"join"}
{"nick":"flashpoint9","reason":"Remote host closed the connection","date":"2017-12-29T05:52:06.587Z","type":"quit"}
{"nick":"uuplusu","reason":"Read error: Connection reset by peer","date":"2017-12-29T05:52:17.714Z","type":"quit"}
{"nick":"flashpoint9","date":"2017-12-29T05:52:33.316Z","type":"join"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-12-29T05:53:00.573Z","type":"quit"}
{"nick":"piyer","date":"2017-12-29T05:53:32.899Z","type":"join"}
{"nick":"jcarpenter2","reason":"Quit: Leaving","date":"2017-12-29T05:54:18.110Z","type":"quit"}
{"nick":"qrestlove","reason":"Remote host closed the connection","date":"2017-12-29T05:54:35.252Z","type":"quit"}
{"nick":"jxv","reason":"Quit: zzz…","date":"2017-12-29T05:54:53.222Z","type":"quit"}
{"nick":"LocaMocha","date":"2017-12-29T05:56:27.760Z","type":"join"}
{"nick":"flashpoint9","reason":"Ping timeout: 264 seconds","date":"2017-12-29T05:57:21.173Z","type":"quit"}
{"nick":"zumba_addict","date":"2017-12-29T05:57:40.323Z","type":"join"}
{"nick":"Arcaelyx","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T05:57:40.961Z","type":"quit"}
{"nick":"piyer","reason":"Ping timeout: 248 seconds","date":"2017-12-29T05:57:54.006Z","type":"quit"}
{"nick":"orbyt_","date":"2017-12-29T05:58:12.724Z","type":"join"}
{"nick":"qrestlove","date":"2017-12-29T05:58:40.485Z","type":"join"}
{"nick":"leptone","date":"2017-12-29T05:59:39.429Z","type":"join"}
{"nick":"jtl_","reason":"Remote host closed the connection","date":"2017-12-29T06:00:57.666Z","type":"quit"}
{"nick":"orbyt_","reason":"Ping timeout: 252 seconds","date":"2017-12-29T06:02:29.512Z","type":"quit"}
{"nick":"user__","date":"2017-12-29T06:02:57.499Z","type":"join"}
{"nick":"aqrln","reason":"Ping timeout: 260 seconds","date":"2017-12-29T06:03:16.259Z","type":"quit"}
{"nick":"igemnace","message":"myndzi: what, sorry? you have a series of groups of offsets and a particular offset. you want the first group that doesn't contain that offset?","date":"2017-12-29T06:04:58.751Z","type":"message"}
{"nick":"zuQe8","reason":"Ping timeout: 264 seconds","date":"2017-12-29T06:05:45.226Z","type":"quit"}
{"nick":"Hu0p","reason":"Quit: See You Space Cowboy. . .","date":"2017-12-29T06:06:34.283Z","type":"quit"}
{"nick":"krystianbajno","reason":"Remote host closed the connection","date":"2017-12-29T06:06:35.355Z","type":"quit"}
{"nick":"myndzi","message":"haha, sorry, was trying to describe the problem without getting into tetris mechanics ;)","date":"2017-12-29T06:07:23.599Z","type":"message"}
{"nick":"myndzi","message":"a piece is made of 4 blocks (minos); when you rotate a piece, if that rotation is impossible (blocked, something is in the way of one of the would-be new mino positions), other locations are tried","date":"2017-12-29T06:08:05.427Z","type":"message"}
{"nick":"myndzi","message":"there are 4 offsets tried; the code in question is phrased as a 1d array, so each of those 5 groups represents the potential position of one of the minos of the rotated piece","date":"2017-12-29T06:08:49.606Z","type":"message"}
{"nick":"myndzi","message":"index 0 = no kick, index 1 = first kick, and so on","date":"2017-12-29T06:08:56.901Z","type":"message"}
{"nick":"myndzi","message":"(offsets guaranteed to be open have been removed - these are the minos of the piece in its position before the rotation)","date":"2017-12-29T06:09:19.406Z","type":"message"}
{"nick":"myndzi","message":"so, in order to select the correct rotation, all the offsets must be free","date":"2017-12-29T06:09:39.036Z","type":"message"}
{"nick":"myndzi","message":"for a particular kick","date":"2017-12-29T06:09:44.881Z","type":"message"}
{"nick":"devc","reason":"Ping timeout: 272 seconds","date":"2017-12-29T06:09:56.974Z","type":"quit"}
{"nick":"devc","date":"2017-12-29T06:10:30.852Z","type":"join"}
{"nick":"myndzi","message":"i can accomplish this task fairly easily with the data at hand, but i'm looking to build a data structure that can do this with the minimum possible tests","date":"2017-12-29T06:10:36.776Z","type":"message"}
{"nick":"Xiti","reason":"Ping timeout: 268 seconds","date":"2017-12-29T06:11:20.647Z","type":"quit"}
{"nick":"myndzi","message":"so, i need a set of instructions that tests each possible offset no more than once, guarantees that every offset in the first group is tested before the second, and so on","date":"2017-12-29T06:11:22.204Z","type":"message"}
{"nick":"myndzi","message":"since some are repeated, i can reuse that information to test fewer things in the next iteration","date":"2017-12-29T06:11:31.923Z","type":"message"}
{"nick":"aqrln","date":"2017-12-29T06:11:44.510Z","type":"join"}
{"nick":"myndzi","message":"some kind of tree structure would be fine, though i suspect it can be collapsed into just an array, but my question is more about a useful way to build up that tree or data structure","date":"2017-12-29T06:12:10.384Z","type":"message"}
{"nick":"myndzi","message":"i thought it might tickle someone's interest :)","date":"2017-12-29T06:12:37.796Z","type":"message"}
{"nick":"Xiti","date":"2017-12-29T06:12:57.624Z","type":"join"}
{"nick":"igemnace","message":"what are offsets and kicks","date":"2017-12-29T06:13:27.405Z","type":"message"}
{"nick":"myndzi","message":"normally if i'm doing something that amounts to permutations i use math to map from values 0-N to each state, but this gets a bit trickier since, taking the first data ([1, 2, 23]) as an example, the potential cases are:","date":"2017-12-29T06:13:51.369Z","type":"message"}
{"nick":"myndzi","message":"all three are empty, 1 and 2 are empty but 23 is blocked, 1 is empty and 2 is blocked, or 1 is blocked","date":"2017-12-29T06:14:04.121Z","type":"message"}
{"nick":"plevexier","date":"2017-12-29T06:14:16.584Z","type":"join"}
{"nick":"myndzi","message":"starting from the piece's position (say, 20), it can be defined by offsets from that location (say, 0, 1, 2, 13)","date":"2017-12-29T06:14:39.555Z","type":"message"}
{"nick":"myndzi","message":"these represent a shape like _|_ where 0 is the bottom left part","date":"2017-12-29T06:15:13.916Z","type":"message"}
{"nick":"plevexier","reason":"Client Quit","date":"2017-12-29T06:15:18.615Z","type":"quit"}
{"nick":"myndzi","message":"when moving it, a single value suffices: to move to the right, each mino is moved by +1","date":"2017-12-29T06:15:36.536Z","type":"message"}
{"nick":"myndzi","message":"to move up, each is moved by +11","date":"2017-12-29T06:15:40.602Z","type":"message"}
{"nick":"myndzi","message":"etc.","date":"2017-12-29T06:15:41.680Z","type":"message"}
{"nick":"piyer","date":"2017-12-29T06:16:06.800Z","type":"join"}
{"nick":"igemnace","message":"ah. so a group of offsets represents a piece location?","date":"2017-12-29T06:16:26.693Z","type":"message"}
{"nick":"myndzi","message":"the data in the runkit notebook represents the target rotation, where the translation offset has been applied to each mino of a piece","date":"2017-12-29T06:16:32.517Z","type":"message"}
{"nick":"myndzi","message":"close enough without going into probably irrelevant details :)","date":"2017-12-29T06:16:55.419Z","type":"message"}
{"nick":"myndzi","message":"the very last output before the comments is [piece in new rotation - no kicks, piece in new rotation kick 1, piece in new rotation - kick 2...]","date":"2017-12-29T06:17:28.347Z","type":"message"}
{"nick":"myndzi","message":"they're not all 4 because some could be elided safely","date":"2017-12-29T06:17:42.487Z","type":"message"}
{"nick":"safe","reason":"Read error: Connection reset by peer","date":"2017-12-29T06:17:47.334Z","type":"quit"}
{"nick":"myndzi","message":"so the naive approach is something like destWithOffset.find(offsets => offset.all(pos => posIsFree(matrix, pos))","date":"2017-12-29T06:18:27.673Z","type":"message"}
{"nick":"myndzi","message":"which would test each set of offsets in order, and return the first one for which all are free","date":"2017-12-29T06:18:47.018Z","type":"message"}
{"nick":"myndzi","message":"hopefully that helps you get the shape of the data better","date":"2017-12-29T06:19:19.950Z","type":"message"}
{"nick":"igemnace","message":"ah, so \"kick\" is a shift in the piece location? you test a few reasonable kicks to get a valid position after a rotation?","date":"2017-12-29T06:19:50.585Z","type":"message"}
{"nick":"myndzi","message":"pretty much","date":"2017-12-29T06:19:59.553Z","type":"message"}
{"nick":"myndzi","message":"if it rotates and isn't blocked, it goes there","date":"2017-12-29T06:20:03.761Z","type":"message"}
{"nick":"myndzi","message":"if it rotates and is blocked, then the first kick (relocation) is attempted; if that's free, it goes there, otherwise it tries the next kick, until it runs out of kick locations","date":"2017-12-29T06:20:25.597Z","type":"message"}
{"nick":"myndzi","message":"(there are 4 kicks; index 0 is the natural rotation without kicking)","date":"2017-12-29T06:20:41.559Z","type":"message"}
{"nick":"jscriptStudent","date":"2017-12-29T06:20:42.556Z","type":"join"}
{"nick":"igemnace","message":"yep","date":"2017-12-29T06:20:48.736Z","type":"message"}
{"nick":"myndzi","message":"the data here represents an SRS L piece in spawn orientation rotating to the right","date":"2017-12-29T06:21:17.570Z","type":"message"}
{"nick":"myndzi","message":"the matrix is 11 wide, so vertical increments are multiples of 11","date":"2017-12-29T06:21:30.829Z","type":"message"}
{"nick":"myndzi","message":"11, 12, 13, 24 = (1,1), (1,2), (1,3), (2,3)","date":"2017-12-29T06:22:06.666Z","type":"message"}
{"nick":"myndzi","message":"an example rotation might be like:","date":"2017-12-29T06:22:47.615Z","type":"message"}
{"nick":"myndzi","message":"test offset 1 -> free; test offset 2 -> blocked; test offset 22 -> free; test offset 33 -> free -- result is kick 2 (index 3)","date":"2017-12-29T06:23:15.219Z","type":"message"}
{"nick":"myndzi","message":"er, index 2","date":"2017-12-29T06:23:24.106Z","type":"message"}
{"nick":"myndzi","message":"bad example","date":"2017-12-29T06:23:48.589Z","type":"message"}
{"nick":"myndzi","message":"retry: test offset 1 -> blocked; test offset 22 -> free; test offset 33 -> free -- result is kick 2 (index 2)","date":"2017-12-29T06:24:06.864Z","type":"message"}
{"nick":"myndzi","message":"we never test anything at index 1 because, since offset 1 is blocked, it rules out the whole group","date":"2017-12-29T06:24:17.573Z","type":"message"}
{"nick":"jxv","date":"2017-12-29T06:24:55.902Z","type":"join"}
{"nick":"myndzi","message":"inverse example: test offset 1 -> free; test offset 2 -> blocked; test offset 22 -> free; test offset 0 -> free - result is kick 1 (index 1)","date":"2017-12-29T06:25:00.476Z","type":"message"}
{"nick":"myndzi","message":"we don't test 1 a second time when evaluating the kick offsets at index 1","date":"2017-12-29T06:25:10.781Z","type":"message"}
{"nick":"myndzi","message":"since we already checked it and know it's free","date":"2017-12-29T06:25:18.685Z","type":"message"}
{"nick":"myndzi","message":"what i'd like to do is build a set of instructions that can be followed in this way, but my results so far have been inelegant ;)","date":"2017-12-29T06:25:54.080Z","type":"message"}
{"nick":"jxv","reason":"Client Quit","date":"2017-12-29T06:26:25.036Z","type":"quit"}
{"nick":"myndzi","message":"the comments show a random example of the remaining things to test based on the result of whether offset 1 is free or occupied","date":"2017-12-29T06:26:26.887Z","type":"message"}
{"nick":"uuplusu_","reason":"Remote host closed the connection","date":"2017-12-29T06:27:36.788Z","type":"quit"}
{"nick":"igemnace","message":"the naive approach + caching test results would be the straightforward way, exactly how you're describing the algorithm should be. i'm still trying to come up with a better data structure for it","date":"2017-12-29T06:27:50.323Z","type":"message"}
{"nick":"myndzi","message":"i was thinking some kind of directed graph","date":"2017-12-29T06:28:15.366Z","type":"message"}
{"nick":"myndzi","message":"i don't care if some of the data is duplicated, it will have to be","date":"2017-12-29T06:28:22.386Z","type":"message"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-12-29T06:28:56.302Z","type":"quit"}
{"nick":"myndzi","message":"building it up something like a trie seems reasonable, and then i could possibly traverse the tree and make it into an array for convenience","date":"2017-12-29T06:28:59.129Z","type":"message"}
{"nick":"myndzi","message":"it seems like there's probably a useful way to use recursion or math trickery to enumerate the valid paths though","date":"2017-12-29T06:29:19.115Z","type":"message"}
{"nick":"piyer","date":"2017-12-29T06:29:31.262Z","type":"join"}
{"nick":"myndzi","message":"i was thinking possibly start with all fails, then backtrack and add success cases","date":"2017-12-29T06:30:21.896Z","type":"message"}
{"nick":"devc","reason":"Remote host closed the connection","date":"2017-12-29T06:30:38.123Z","type":"quit"}
{"nick":"mappuji","date":"2017-12-29T06:30:42.217Z","type":"join"}
{"nick":"mappuji","reason":"Client Quit","date":"2017-12-29T06:30:42.302Z","type":"quit"}
{"nick":"uuplusu","date":"2017-12-29T06:30:43.822Z","type":"join"}
{"nick":"myndzi","message":"eliding the duplicates when relevant","date":"2017-12-29T06:30:51.266Z","type":"message"}
{"nick":"devc","date":"2017-12-29T06:31:10.773Z","type":"join"}
{"nick":"Delta-One","reason":"Ping timeout: 265 seconds","date":"2017-12-29T06:32:04.434Z","type":"quit"}
{"nick":"qrestlove","reason":"Remote host closed the connection","date":"2017-12-29T06:32:08.939Z","type":"quit"}
{"nick":"Flonk","reason":"Ping timeout: 246 seconds","date":"2017-12-29T06:34:18.708Z","type":"quit"}
{"nick":"myndzi","message":"the other approach is something like, add branches for the first set of offsets (index 0), both success and fail, then recursively do the same for a filtered set of the remaining data","date":"2017-12-29T06:34:37.316Z","type":"message"}
{"nick":"igemnace","message":"how are kicks generated?","date":"2017-12-29T06:35:15.612Z","type":"message"}
{"nick":"myndzi","message":"there's a specific data set in the guideline that specifies what the kicks are; in this case, i want to be able to supply just a list of offsets for each rotation and a list of offsets for the kicks","date":"2017-12-29T06:35:51.366Z","type":"message"}
{"nick":"myndzi","message":"and generate the result from that","date":"2017-12-29T06:35:54.836Z","type":"message"}
{"nick":"myndzi","message":"(which leaves it open to play with other kick configurations / systems)","date":"2017-12-29T06:36:15.797Z","type":"message"}
{"nick":"qrestlove","date":"2017-12-29T06:36:17.461Z","type":"join"}
{"nick":"myndzi","message":"the input for the kicks might be something like at the top: [0, -1, 10, -22, -23] describes all the options for rotating a piece from spawn to clockwise","date":"2017-12-29T06:37:17.216Z","type":"message"}
{"nick":"myndzi","message":"(technically, all pieces except O and I anyway)","date":"2017-12-29T06:37:28.429Z","type":"message"}
{"nick":"myndzi","message":"the expansion of this into an array-of-arrays is done to generate the offsets to check, but the kick is only a single translation, not one for each mino of the piece","date":"2017-12-29T06:38:00.863Z","type":"message"}
{"nick":"myndzi","message":"a piece is represented by a tuple of [position, rotation], so to change its position you need only add an offset to position for example","date":"2017-12-29T06:38:58.196Z","type":"message"}
{"nick":"qrestlove","reason":"Remote host closed the connection","date":"2017-12-29T06:39:07.670Z","type":"quit"}
{"nick":"igemnace","message":"so a kick will always be an operation on the piece position? as in, the position where offsets are calculated from","date":"2017-12-29T06:39:15.819Z","type":"message"}
{"nick":"myndzi","message":"it might be more correct to say a kick represents a potential translation of a potential position?","date":"2017-12-29T06:39:37.199Z","type":"message"}
{"nick":"myndzi","message":"if i have position = x and rotation = r, and i rotate, i get rotation \"might be\" (r+1) % numRotations","date":"2017-12-29T06:40:07.059Z","type":"message"}
{"nick":"myndzi","message":"and position \"might be\" x + (no kick, or kick 1, or kick 2, or kick 3, or kick 4)","date":"2017-12-29T06:40:22.610Z","type":"message"}
{"nick":"myndzi","message":"the state updates only if one of those succeeds","date":"2017-12-29T06:40:49.959Z","type":"message"}
{"nick":"igemnace","message":"just a semantics issue, i think we're on the same page. my view is that kick as an operation won't care about potential or real positions, it just operates on positions","date":"2017-12-29T06:40:58.769Z","type":"message"}
{"nick":"myndzi","message":"yep","date":"2017-12-29T06:41:05.128Z","type":"message"}
{"nick":"myndzi","message":"kick should be unaware or uncaring of the piece's position in the matrix, or the matrix's state","date":"2017-12-29T06:41:23.464Z","type":"message"}
{"nick":"myndzi","message":"just needs a way to ask \"is this position free?\", and it can ask about a relative position","date":"2017-12-29T06:41:36.398Z","type":"message"}
{"nick":"coumbole","date":"2017-12-29T06:42:14.176Z","type":"join"}
{"nick":"myndzi","message":"the operation here is really 'rotation'; kick positions are data that feed into that","date":"2017-12-29T06:42:19.048Z","type":"message"}
{"nick":"myndzi","message":"or to put it another way, a kick will never happen independently on its own","date":"2017-12-29T06:42:31.633Z","type":"message"}
{"nick":"myndzi","message":"only as part of a rotation","date":"2017-12-29T06:42:36.526Z","type":"message"}
{"nick":"qrestlove","date":"2017-12-29T06:42:44.580Z","type":"join"}
{"nick":"justicefries","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T06:42:51.012Z","type":"quit"}
{"nick":"mr_lou","date":"2017-12-29T06:43:31.170Z","type":"join"}
{"nick":"qrestlove","reason":"Max SendQ exceeded","date":"2017-12-29T06:44:26.753Z","type":"quit"}
{"nick":"ShekharReddy","reason":"Quit: Connection closed for inactivity","date":"2017-12-29T06:44:28.962Z","type":"quit"}
{"nick":"myndzi","message":"(what i'm trying to do is augment the data about a piece up front, to make calculating kicks simple in the rotation step)","date":"2017-12-29T06:44:38.745Z","type":"message"}
{"nick":"snowcabz","date":"2017-12-29T06:44:43.476Z","type":"join"}
{"nick":"myndzi","message":"i've done similar with shifts (movement); if you think about a flat \"I\" piece: ---- moving to the right, it only needs to make one test, not four, or 16","date":"2017-12-29T06:45:11.511Z","type":"message"}
{"nick":"igemnace","message":"makes sense. i was thinking more along the lines of using a kick algorithm (if any) to generate a nice order of offsets to test that would have canceled out the most positions after the first few tests","date":"2017-12-29T06:46:08.693Z","type":"message"}
{"nick":"qrestlove","date":"2017-12-29T06:46:26.114Z","type":"join"}
{"nick":"myndzi","message":"i did do that before, but then i thought of this optimization haha","date":"2017-12-29T06:46:30.204Z","type":"message"}
{"nick":"myndzi","message":"to be clear, this is wholly for my own interest / curiosity","date":"2017-12-29T06:46:53.764Z","type":"message"}
{"nick":"ironfroggy","date":"2017-12-29T06:47:02.642Z","type":"join"}
{"nick":"myndzi","message":"the actual behavior in most games is probably closer to this: https://tetris.wiki/SRS#How_Guideline_SRS_Really_Works","date":"2017-12-29T06:47:15.269Z","type":"message"}
{"nick":"myndzi","message":"which is kind of clever","date":"2017-12-29T06:47:18.143Z","type":"message"}
{"nick":"microdex2","date":"2017-12-29T06:47:36.094Z","type":"join"}
{"nick":"microdex","reason":"Ping timeout: 264 seconds","date":"2017-12-29T06:47:45.317Z","type":"quit"}
{"nick":"myndzi","message":"i don't remember if that's how it's actually laid out in the guideline though","date":"2017-12-29T06:47:49.771Z","type":"message"}
{"nick":"phlyrmn","date":"2017-12-29T06:49:23.160Z","type":"join"}
{"nick":"lpin","date":"2017-12-29T06:49:54.424Z","type":"join"}
{"nick":"ironfroggy","reason":"Ping timeout: 268 seconds","date":"2017-12-29T06:51:25.635Z","type":"quit"}
{"nick":"Delta-One","date":"2017-12-29T06:52:18.832Z","type":"join"}
{"nick":"justicefries","date":"2017-12-29T06:54:25.790Z","type":"join"}
{"nick":"lordjancso","date":"2017-12-29T06:55:09.548Z","type":"join"}
{"nick":"chjango","date":"2017-12-29T06:55:59.224Z","type":"join"}
{"nick":"chjango","reason":"Remote host closed the connection","date":"2017-12-29T06:56:00.077Z","type":"quit"}
{"nick":"chjango","date":"2017-12-29T06:56:16.039Z","type":"join"}
{"nick":"microdex2","reason":"Remote host closed the connection","date":"2017-12-29T06:56:44.090Z","type":"quit"}
{"nick":"justicefries","reason":"Client Quit","date":"2017-12-29T06:58:08.999Z","type":"quit"}
{"nick":"phlyrmn","reason":"Remote host closed the connection","date":"2017-12-29T07:00:06.728Z","type":"quit"}
{"nick":"bergice_","reason":"Quit: Connection closed for inactivity","date":"2017-12-29T07:01:49.088Z","type":"quit"}
{"nick":"phlyrmn","date":"2017-12-29T07:05:01.936Z","type":"join"}
{"nick":"kakashiAL","reason":"Ping timeout: 256 seconds","date":"2017-12-29T07:08:55.479Z","type":"quit"}
{"nick":"microdex","date":"2017-12-29T07:09:57.476Z","type":"join"}
{"nick":"microdex","reason":"Remote host closed the connection","date":"2017-12-29T07:11:54.296Z","type":"quit"}
{"nick":"microdex","date":"2017-12-29T07:12:03.634Z","type":"join"}
{"nick":"chjango","reason":"Remote host closed the connection","date":"2017-12-29T07:12:49.928Z","type":"quit"}
{"nick":"darutoko","date":"2017-12-29T07:14:22.483Z","type":"join"}
{"nick":"mihaele","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-12-29T07:14:57.727Z","type":"quit"}
{"nick":"chjango","date":"2017-12-29T07:20:07.797Z","type":"join"}
{"nick":"myndzi","message":"(runkit updated with the recursive approach, unpruned)","date":"2017-12-29T07:20:21.321Z","type":"message"}
{"nick":"marthinal","date":"2017-12-29T07:20:34.850Z","type":"join"}
{"nick":"myndzi","message":"i'm still not really certain how to think about enumerating only the valid cases tbh. possibly i just generate them all and filter out the invalids","date":"2017-12-29T07:21:13.687Z","type":"message"}
{"nick":"myndzi","message":"i could do a depth first in-order traversal of this tree to generate the array i was looking for i'm sure","date":"2017-12-29T07:21:51.035Z","type":"message"}
{"nick":"myndzi","message":"given the minimal list of valid sequences","date":"2017-12-29T07:22:05.360Z","type":"message"}
{"nick":"myndzi","message":"but i probably don't need to generate it in such a case anyway","date":"2017-12-29T07:22:31.241Z","type":"message"}
{"nick":"myndzi","message":"eh, that's not quite correct since it assumes a miss moves on","date":"2017-12-29T07:25:10.158Z","type":"message"}
{"nick":"myndzi","message":"boo","date":"2017-12-29T07:25:11.668Z","type":"message"}
{"nick":"phlyrmn","reason":"Remote host closed the connection","date":"2017-12-29T07:26:26.226Z","type":"quit"}
{"nick":"re1","date":"2017-12-29T07:30:23.394Z","type":"join"}
{"nick":"chargen","date":"2017-12-29T07:32:54.486Z","type":"join"}
{"nick":"duderonomy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-29T07:35:28.025Z","type":"quit"}
{"nick":"leptone","reason":"Remote host closed the connection","date":"2017-12-29T07:35:52.271Z","type":"quit"}
{"nick":"qrestlove","reason":"Ping timeout: 265 seconds","date":"2017-12-29T07:38:46.535Z","type":"quit"}
{"nick":"leptone","date":"2017-12-29T07:42:50.140Z","type":"join"}
{"nick":"fl0w","date":"2017-12-29T07:43:15.746Z","type":"join"}
{"nick":"phlyrmn","date":"2017-12-29T07:44:00.500Z","type":"join"}
{"nick":"wsieroci","date":"2017-12-29T07:45:43.461Z","type":"join"}
{"nick":"zumba_addict","reason":"Remote host closed the connection","date":"2017-12-29T07:49:10.454Z","type":"quit"}
{"nick":"qrestlove","date":"2017-12-29T07:52:10.115Z","type":"join"}
{"nick":"groom","date":"2017-12-29T07:52:39.088Z","type":"join"}
{"nick":"led_ir22","reason":"Quit: led_ir22","date":"2017-12-29T07:52:50.030Z","type":"quit"}
{"nick":"wonko7","reason":"Ping timeout: 265 seconds","date":"2017-12-29T07:53:16.431Z","type":"quit"}
