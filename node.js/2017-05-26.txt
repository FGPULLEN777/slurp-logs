{"nick":"ecuanaso","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-05-26T00:00:20.300Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 240 seconds","date":"2017-05-26T00:00:30.593Z","type":"quit"}
{"nick":"bradfordli123","date":"2017-05-26T00:00:43.555Z","type":"join"}
{"nick":"john2","date":"2017-05-26T00:01:26.333Z","type":"join"}
{"nick":"john1","reason":"Ping timeout: 260 seconds","date":"2017-05-26T00:01:44.580Z","type":"quit"}
{"nick":"f32","date":"2017-05-26T00:02:56.307Z","type":"join"}
{"nick":"f32","message":"test","date":"2017-05-26T00:03:06.788Z","type":"message"}
{"nick":"goodenough","reason":"Remote host closed the connection","date":"2017-05-26T00:03:26.307Z","type":"quit"}
{"nick":"gambl0re","date":"2017-05-26T00:03:30.553Z","type":"join"}
{"nick":"f32","message":"does anyone know why nodejs doesn't provide a mechanism for reading and writing unsigned long values to and from a Buffer?","date":"2017-05-26T00:04:15.153Z","type":"message"}
{"nick":"flappynerd","message":"does node not have clamped arrays?","date":"2017-05-26T00:04:30.264Z","type":"message"}
{"nick":"rorro","reason":"Ping timeout: 240 seconds","date":"2017-05-26T00:05:57.834Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-05-26T00:08:25.425Z","type":"join"}
{"nick":"texinwien","date":"2017-05-26T00:09:06.221Z","type":"join"}
{"nick":"karmahacker","date":"2017-05-26T00:09:49.782Z","type":"join"}
{"nick":"plutoniix","date":"2017-05-26T00:10:23.891Z","type":"join"}
{"nick":"chipping","reason":"Ping timeout: 245 seconds","date":"2017-05-26T00:10:48.895Z","type":"quit"}
{"nick":"f32","message":"i have a file which has 64bit unsigned int values written, does this mean i should bit shift the value out, or does not provide a mechanism for this already?","date":"2017-05-26T00:12:35.913Z","type":"message"}
{"nick":"Naan","message":"nice ljharb using has now","date":"2017-05-26T00:13:14.561Z","type":"message"}
{"nick":"plexigras","reason":"Ping timeout: 258 seconds","date":"2017-05-26T00:13:18.209Z","type":"quit"}
{"nick":"dealy__","reason":"Ping timeout: 240 seconds","date":"2017-05-26T00:13:27.806Z","type":"quit"}
{"nick":"dealy____","reason":"Ping timeout: 246 seconds","date":"2017-05-26T00:13:50.210Z","type":"quit"}
{"nick":"dealy___","reason":"Ping timeout: 260 seconds","date":"2017-05-26T00:13:51.509Z","type":"quit"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2017-05-26T00:13:53.976Z","type":"quit"}
{"nick":"the_ant","date":"2017-05-26T00:14:10.900Z","type":"join"}
{"nick":"chipping","date":"2017-05-26T00:15:28.020Z","type":"join"}
{"nick":"__oslobystorm","reason":"Read error: Connection reset by peer","date":"2017-05-26T00:15:28.432Z","type":"quit"}
{"nick":"Naan","message":"zsoc: any chance you can have a look? https://gist.github.com/HanaanY/164489ccb72716e2275e4de83be6ebd6","date":"2017-05-26T00:15:45.912Z","type":"message"}
{"nick":"__oslobystorm","date":"2017-05-26T00:15:57.464Z","type":"join"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-05-26T00:16:11.261Z","type":"quit"}
{"nick":"munch_","reason":"Remote host closed the connection","date":"2017-05-26T00:16:18.868Z","type":"quit"}
{"nick":"zsoc","message":"Naan: where is the error being thrown and what is the then() that is happening that you feel shouldn't be?","date":"2017-05-26T00:16:40.148Z","type":"message"}
{"nick":"zetetetete","reason":"Ping timeout: 260 seconds","date":"2017-05-26T00:17:08.645Z","type":"quit"}
{"nick":"zetetetete","date":"2017-05-26T00:18:02.027Z","type":"join"}
{"nick":"zsoc","message":"I like how you're promisifying a function that is hoisted from a few lines below where you're promisifying it :p","date":"2017-05-26T00:18:10.943Z","type":"message"}
{"nick":"Cohedrin","reason":"Ping timeout: 255 seconds","date":"2017-05-26T00:18:13.896Z","type":"quit"}
{"nick":"__oslobystorm","reason":"Read error: Connection reset by peer","date":"2017-05-26T00:18:39.047Z","type":"quit"}
{"nick":"texinwien","reason":"Ping timeout: 246 seconds","date":"2017-05-26T00:18:44.168Z","type":"quit"}
{"nick":"__oslobystorm","date":"2017-05-26T00:19:07.495Z","type":"join"}
{"nick":"Naan","message":"I don't understand zsoc :(","date":"2017-05-26T00:19:14.448Z","type":"message"}
{"nick":"zsoc","message":"Naan: so insertNewUser doesn't return a promise.. if it throws an error you won't get a promise rejection (and there for your next then will still run) like between lines 16 and 17","date":"2017-05-26T00:19:25.087Z","type":"message"}
{"nick":"rorro","date":"2017-05-26T00:19:31.480Z","type":"join"}
{"nick":"octetcloud","date":"2017-05-26T00:19:38.053Z","type":"join"}
{"nick":"zsoc","message":"you are mixing promises and callbacks... you can just have every function return a promise, you're already using bluebird...","date":"2017-05-26T00:19:39.942Z","type":"message"}
{"nick":"Naan","message":"oh right i need to change the function validateRegistration and then I wont need to promisify it","date":"2017-05-26T00:20:05.511Z","type":"message"}
{"nick":"Naan","message":"sorry zsoc my description was wrong, I meant insertNewUser is executed even though validate(req.body) is throwing an error","date":"2017-05-26T00:20:58.449Z","type":"message"}
{"nick":"Naan","message":"i know this because my console is showing me my test entry goes into the database {ID: 2,  email: 'poop@poopmail.com',  username: 'bob',  password: 'bobber' }","date":"2017-05-26T00:21:41.217Z","type":"message"}
{"nick":"einnjo","date":"2017-05-26T00:22:34.863Z","type":"join"}
{"nick":"zsoc","message":"Naan: also can't you just db.all and resolve the rows?","date":"2017-05-26T00:22:57.265Z","type":"message"}
{"nick":"ividyon_","reason":"Quit: Leaving","date":"2017-05-26T00:23:30.106Z","type":"quit"}
{"nick":"Naan","message":"i don't know i haven't even started working on that bit","date":"2017-05-26T00:23:40.098Z","type":"message"}
{"nick":"Naan","message":"i didn't write that function","date":"2017-05-26T00:23:42.540Z","type":"message"}
{"nick":"Naan","message":"my partner did","date":"2017-05-26T00:23:57.228Z","type":"message"}
{"nick":"zsoc","message":"Naan: so something like this should work (or exactly this): https://gist.github.com/jkantr/5ae4ad2df2a94b6752b45e3e0f783edc","date":"2017-05-26T00:24:04.529Z","type":"message"}
{"nick":"Cohedrin","date":"2017-05-26T00:24:10.201Z","type":"join"}
{"nick":"zsoc","message":"Naan: but my #1 suggestion here is to use a promise compatible sqlite3 driver and then you don't have to roll your own anything","date":"2017-05-26T00:24:28.275Z","type":"message"}
{"nick":"bdunavant","date":"2017-05-26T00:24:36.446Z","type":"join"}
{"nick":"Naan","message":"yeah i looked at node-sqlite it does that","date":"2017-05-26T00:24:43.867Z","type":"message"}
{"nick":"Naan","message":"but it works a little differently and i didn't want to confuse my friend who chose to use this one","date":"2017-05-26T00:26:35.912Z","type":"message"}
{"nick":"zsoc","message":"gotcha, well you can just wrap it like in my example then i guess","date":"2017-05-26T00:26:56.574Z","type":"message"}
{"nick":"ecuanaso","date":"2017-05-26T00:27:49.411Z","type":"join"}
{"nick":"zsoc","message":"Naan: er.. also refresh my gist there.. forgot to return the Promise.reject/resolve in validateRegistration","date":"2017-05-26T00:29:08.945Z","type":"message"}
{"nick":"Naan","message":"zsoc why does it work when you do it like that with lambdas","date":"2017-05-26T00:29:20.712Z","type":"message"}
{"nick":"brent__","date":"2017-05-26T00:30:35.815Z","type":"quit"}
{"nick":"zsoc","message":"that wasn't really the part that fixed anything.. it was making sure each function in your chain was being returned to the next .then() and also each function also returned a promise (resolved or rejected)","date":"2017-05-26T00:31:17.065Z","type":"message"}
{"nick":"zetetetete","reason":"Ping timeout: 272 seconds","date":"2017-05-26T00:31:25.018Z","type":"quit"}
{"nick":"zsoc","message":"if rejected it leaps down to your catch on 16 and if resolved, it just goes to the next .then","date":"2017-05-26T00:31:32.178Z","type":"message"}
{"nick":"nitric","reason":"Ping timeout: 240 seconds","date":"2017-05-26T00:31:57.888Z","type":"quit"}
{"nick":"zsoc","message":"your function validateRegistration isn't doing anything asynchronous.. which i why i replaced the callback and your promisifying of it to just wrapping it in return Promise.try(() => { and then returning Promise.resolve() or Promise.reject(errors)","date":"2017-05-26T00:32:28.411Z","type":"message"}
{"nick":"Naan","message":"oh right i get it now","date":"2017-05-26T00:32:33.245Z","type":"message"}
{"nick":"zsoc","message":"same thing there, that way the rejection will propegate up the chain and land in the catch","date":"2017-05-26T00:32:40.983Z","type":"message"}
{"nick":"EyePulp","reason":"Read error: No route to host","date":"2017-05-26T00:32:46.945Z","type":"quit"}
{"nick":"zsoc","message":"same thing with the rejection of the new promise in the other function on line 32","date":"2017-05-26T00:32:54.125Z","type":"message"}
{"nick":"EyePulp","date":"2017-05-26T00:33:16.101Z","type":"join"}
{"nick":"pbkdf2","reason":"Disconnected by services","date":"2017-05-26T00:33:25.665Z","type":"quit"}
{"nick":"Kylo-Ren","date":"2017-05-26T00:33:35.176Z","type":"join"}
{"nick":"brent__","date":"2017-05-26T00:34:51.578Z","type":"join"}
{"nick":"zsoc","message":"Naan: Also you probably shouldn't be passing your whole `req` object to insertNewUser... you could just return Promise.resolve(data) on line 64 and then on 14.. .then((data) => insertNewUser(data)) .. that way you just have data.email, data.username, data.password to give to your sqlite bindings","date":"2017-05-26T00:35:14.333Z","type":"message"}
{"nick":"Naan","message":"yes there's still a lot to do on that function","date":"2017-05-26T00:35:50.140Z","type":"message"}
{"nick":"Naan","message":"i need to check if we are violating unique constraints for example","date":"2017-05-26T00:36:05.073Z","type":"message"}
{"nick":"Naan","message":"thank you so much zsoc for your help you're a star","date":"2017-05-26T00:36:13.482Z","type":"message"}
{"nick":"zsoc","message":"yeah i touched too many things, sorry i started fixing things that weren't broken lol","date":"2017-05-26T00:36:46.212Z","type":"message"}
{"nick":"Cassiopaya","reason":"Read error: Connection reset by peer","date":"2017-05-26T00:37:20.720Z","type":"quit"}
{"nick":"brent__","reason":"Remote host closed the connection","date":"2017-05-26T00:37:45.501Z","type":"quit"}
{"nick":"zetetetete","date":"2017-05-26T00:37:48.569Z","type":"join"}
{"nick":"Naan","message":"not at all","date":"2017-05-26T00:38:17.068Z","type":"message"}
{"nick":"brent__","date":"2017-05-26T00:38:21.900Z","type":"join"}
{"nick":"justelex","reason":"Ping timeout: 240 seconds","date":"2017-05-26T00:39:35.472Z","type":"quit"}
{"nick":"hndk","reason":"Ping timeout: 240 seconds","date":"2017-05-26T00:40:57.848Z","type":"quit"}
{"nick":"bdunavant","reason":"Remote host closed the connection","date":"2017-05-26T00:41:12.328Z","type":"quit"}
{"nick":"ecuanaso","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-05-26T00:42:12.369Z","type":"quit"}
{"nick":"duderonomy","date":"2017-05-26T00:42:26.106Z","type":"join"}
{"nick":"brent__","reason":"Ping timeout: 240 seconds","date":"2017-05-26T00:42:27.895Z","type":"quit"}
{"nick":"b0neskull","reason":"Ping timeout: 272 seconds","date":"2017-05-26T00:42:49.015Z","type":"quit"}
{"nick":"Naan","message":"zsoc this is the first thing i've read on the web this evening that has made sense http://derpturkey.com/simplify-promise-chains-with-arrow-functions/","date":"2017-05-26T00:43:53.818Z","type":"message"}
{"nick":"zsoc","message":"ah, yeah that one is reasonable","date":"2017-05-26T00:44:05.988Z","type":"message"}
{"nick":"zsoc","message":"i think it's possible i've read every article on the internet about promises... most of them aren't so reasonable :p","date":"2017-05-26T00:44:18.605Z","type":"message"}
{"nick":"MachinShin","reason":"Ping timeout: 240 seconds","date":"2017-05-26T00:44:28.446Z","type":"quit"}
{"nick":"Naan","message":"i've come away from a lot of articles or blog posts in the past day worse off than I was when I started reading them","date":"2017-05-26T00:44:51.772Z","type":"message"}
{"nick":"Naan","message":">_<","date":"2017-05-26T00:45:25.359Z","type":"message"}
{"nick":"boneskull","date":"2017-05-26T00:45:38.322Z","type":"join"}
{"nick":"zsoc","message":"yep a lot of them just are teaching the wrong things quite honestly","date":"2017-05-26T00:46:36.158Z","type":"message"}
{"nick":"smccarthy","date":"2017-05-26T00:47:52.215Z","type":"join"}
{"nick":"ecuanaso","date":"2017-05-26T00:48:00.565Z","type":"join"}
{"nick":"joyee","date":"2017-05-26T00:48:01.713Z","type":"join"}
{"nick":"mjora7","date":"2017-05-26T00:49:28.516Z","type":"join"}
{"nick":"zsoc","message":"Naan: also if you're not burnt out on silliness i've removed your need for `has` and the initializing of an empty array and also the loop and pushing..  by using Object.keys(data).reduce.. if you'd like to refresh the gist, if you're curious :p","date":"2017-05-26T00:49:37.761Z","type":"message"}
{"nick":"_andyj_","date":"2017-05-26T00:49:54.195Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2017-05-26T00:50:10.257Z","type":"quit"}
{"nick":"boneskull","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-05-26T00:50:55.173Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-05-26T00:51:17.471Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 240 seconds","date":"2017-05-26T00:52:00.550Z","type":"quit"}
{"nick":"smccarthy","reason":"Ping timeout: 260 seconds","date":"2017-05-26T00:52:23.192Z","type":"quit"}
{"nick":"apparition","date":"2017-05-26T00:55:40.147Z","type":"join"}
{"nick":"smccarthy","date":"2017-05-26T00:56:49.193Z","type":"join"}
{"nick":"Friss","reason":"Ping timeout: 240 seconds","date":"2017-05-26T00:58:30.619Z","type":"quit"}
{"nick":"goodenough","date":"2017-05-26T00:58:59.289Z","type":"join"}
{"nick":"DeltaHeavy","date":"2017-05-26T00:59:17.791Z","type":"join"}
{"nick":"lynx-r","date":"2017-05-26T01:01:14.205Z","type":"join"}
{"nick":"Friss","date":"2017-05-26T01:01:23.406Z","type":"join"}
{"nick":"EyePulp","reason":"Read error: Connection reset by peer","date":"2017-05-26T01:02:10.439Z","type":"quit"}
{"nick":"EyePulp","date":"2017-05-26T01:02:42.025Z","type":"join"}
{"nick":"zetetetete","reason":"Quit: Leaving","date":"2017-05-26T01:03:09.287Z","type":"quit"}
{"nick":"justelex","date":"2017-05-26T01:05:06.203Z","type":"join"}
{"nick":"rorro","reason":"Ping timeout: 240 seconds","date":"2017-05-26T01:05:28.509Z","type":"quit"}
{"nick":"gucci_meow","date":"2017-05-26T01:05:55.937Z","type":"join"}
{"nick":"smccarthy","date":"2017-05-26T01:05:58.702Z","type":"quit"}
{"nick":"m31271n","date":"2017-05-26T01:06:17.880Z","type":"join"}
{"nick":"FrostCandy","date":"2017-05-26T01:07:51.459Z","type":"join"}
{"nick":"hndk","date":"2017-05-26T01:08:28.927Z","type":"join"}
{"nick":"SwiftMatt","date":"2017-05-26T01:09:03.418Z","type":"join"}
{"nick":"justelex","reason":"Ping timeout: 240 seconds","date":"2017-05-26T01:09:27.847Z","type":"quit"}
{"nick":"jaawerth","message":"it's hard to hit the right balance with promises","date":"2017-05-26T01:10:14.290Z","type":"message"}
{"nick":"nicojuicy","reason":"Ping timeout: 240 seconds","date":"2017-05-26T01:11:00.555Z","type":"quit"}
{"nick":"hndk","reason":"Read error: Connection reset by peer","date":"2017-05-26T01:11:00.965Z","type":"quit"}
{"nick":"hndk","date":"2017-05-26T01:11:51.500Z","type":"join"}
{"nick":"knob","reason":"Quit: Leaving","date":"2017-05-26T01:12:09.696Z","type":"quit"}
{"nick":"zsoc","message":"Deciding whether to use them? or when? heh","date":"2017-05-26T01:12:11.861Z","type":"message"}
{"nick":"zsoc","message":"you sort of have to go all in","date":"2017-05-26T01:12:14.510Z","type":"message"}
{"nick":"jaawerth","message":"because it's a culmination of a lot of things, including chaining methods, the event loop, callbacks, etc","date":"2017-05-26T01:12:18.384Z","type":"message"}
{"nick":"jaawerth","message":"some of those are things a dev can go a long time without having to buckle down and learn, so I feel like it's hard to decide how much to include and how much to skip","date":"2017-05-26T01:12:40.843Z","type":"message"}
{"nick":"fr_","date":"2017-05-26T01:12:50.001Z","type":"join"}
{"nick":"zsoc","message":"yeah if you take the full crash course it can leave your head spinning","date":"2017-05-26T01:13:19.409Z","type":"message"}
{"nick":"sneakertack","date":"2017-05-26T01:15:56.504Z","type":"join"}
{"nick":"einnjo","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-05-26T01:16:04.225Z","type":"quit"}
{"nick":"fr","reason":"Ping timeout: 260 seconds","date":"2017-05-26T01:16:18.245Z","type":"quit"}
{"nick":"Stumbler","date":"2017-05-26T01:17:47.479Z","type":"join"}
{"nick":"SwiftMatt","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2017-05-26T01:19:05.280Z","type":"quit"}
{"nick":"FrostCan_","date":"2017-05-26T01:19:13.189Z","type":"join"}
{"nick":"ed209","reason":"Remote host closed the connection","date":"2017-05-26T01:20:00.614Z","type":"quit"}
{"nick":"ed209","date":"2017-05-26T01:20:06.575Z","type":"join"}
{"nick":"rorro","date":"2017-05-26T01:20:09.573Z","type":"join"}
{"nick":"hndk","reason":"Quit: Leaving","date":"2017-05-26T01:21:13.469Z","type":"quit"}
{"nick":"FrostCandy","reason":"Ping timeout: 240 seconds","date":"2017-05-26T01:21:48.464Z","type":"quit"}
{"nick":"FrostCandy","date":"2017-05-26T01:23:36.486Z","type":"join"}
{"nick":"FrostCan_","reason":"Ping timeout: 260 seconds","date":"2017-05-26T01:26:48.132Z","type":"quit"}
{"nick":"the_ant","reason":"Ping timeout: 268 seconds","date":"2017-05-26T01:28:10.920Z","type":"quit"}
{"nick":"Naan","reason":"Quit: Leaving","date":"2017-05-26T01:30:22.806Z","type":"quit"}
{"nick":"naan","date":"2017-05-26T01:31:11.600Z","type":"join"}
{"nick":"SwiftMatt","date":"2017-05-26T01:32:07.656Z","type":"join"}
{"nick":"FrostCandy","date":"2017-05-26T01:33:50.885Z","type":"quit"}
{"nick":"zsoc","action":"installs the ODBC mysql 5.3 driver","date":"2017-05-26T01:38:42.690Z","type":"action"}
{"nick":"zsoc","action":"feels dirty","date":"2017-05-26T01:38:44.723Z","type":"action"}
{"nick":"zsoc","message":"also it's ANSI... rly >.>","date":"2017-05-26T01:39:18.654Z","type":"message"}
{"nick":"goodenough","reason":"Remote host closed the connection","date":"2017-05-26T01:39:24.614Z","type":"quit"}
{"nick":"brent__","date":"2017-05-26T01:39:50.710Z","type":"join"}
{"nick":"zsoc","message":"oh my god this server is running NT3 O.O","date":"2017-05-26T01:40:33.240Z","type":"message"}
{"nick":"SwiftMatt","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2017-05-26T01:43:08.232Z","type":"quit"}
{"nick":"siba","reason":"Ping timeout: 240 seconds","date":"2017-05-26T01:43:54.189Z","type":"quit"}
{"nick":"devc","reason":"Ping timeout: 260 seconds","date":"2017-05-26T01:43:56.410Z","type":"quit"}
{"nick":"brent__","reason":"Ping timeout: 240 seconds","date":"2017-05-26T01:44:05.468Z","type":"quit"}
{"nick":"perrier-jouet","reason":"Quit: WeeChat 1.8","date":"2017-05-26T01:45:19.746Z","type":"quit"}
{"nick":"joyee","date":"2017-05-26T01:47:45.055Z","type":"join"}
{"nick":"tmccleve","date":"2017-05-26T01:49:51.384Z","type":"join"}
{"nick":"gothicsouth","date":"2017-05-26T01:50:45.544Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 255 seconds","date":"2017-05-26T01:52:11.833Z","type":"quit"}
{"nick":"kfoonamalik","reason":"Ping timeout: 258 seconds","date":"2017-05-26T01:54:53.178Z","type":"quit"}
{"nick":"justelex","date":"2017-05-26T01:55:31.440Z","type":"join"}
{"nick":"ewonou","date":"2017-05-26T01:58:49.406Z","type":"join"}
{"nick":"quakephil","reason":"Ping timeout: 240 seconds","date":"2017-05-26T02:00:57.727Z","type":"quit"}
{"nick":"moony","date":"2017-05-26T02:00:58.294Z","type":"join"}
{"nick":"moony","message":"I would just like to ask, can anyone explain why this program: `global.x={}; x.valueOf =(_=>{return 1*(Object.keys(this).length)}); x+x` returns '10'? I suspected it would return '2'. (its a experiment)","date":"2017-05-26T02:01:34.940Z","type":"message"}
{"nick":"moony","message":"nvm","date":"2017-05-26T02:01:57.850Z","type":"message"}
{"nick":"GreenJello","message":"moony, you got that `this` isn't `x`?","date":"2017-05-26T02:03:14.512Z","type":"message"}
{"nick":"nomoney4u","message":"could be because 10 is a string?","date":"2017-05-26T02:03:15.537Z","type":"message"}
{"nick":"justelex","reason":"Ping timeout: 260 seconds","date":"2017-05-26T02:03:32.398Z","type":"quit"}
{"nick":"moony","message":"GreenJello, yea, that was the answer, took a sec to spot (This is being done on a IRC bot, so we got caught in the bot's event context)","date":"2017-05-26T02:03:52.556Z","type":"message"}
{"nick":"nomoney4u","message":"sorry, 10 is binary for 2.  it might think that it is a string and concat 1+0","date":"2017-05-26T02:04:01.612Z","type":"message"}
{"nick":"nomoney4u","message":"oh nvm :P","date":"2017-05-26T02:04:08.778Z","type":"message"}
{"nick":"Cohedrin","reason":"Read error: Connection reset by peer","date":"2017-05-26T02:04:09.589Z","type":"quit"}
{"nick":"GreenJello","message":"I really wonder if these exercises provide anything other than minor entertainment","date":"2017-05-26T02:04:42.726Z","type":"message"}
{"nick":"nomoney4u","reason":"Remote host closed the connection","date":"2017-05-26T02:05:27.751Z","type":"quit"}
{"nick":"moony","message":"GreenJello, entertainment, definitely. \b<\biovoid\b>\b\u000f _eval global.x={};global.x.valueOf=Math.random;[x,x,x]","date":"2017-05-26T02:05:28.923Z","type":"message"}
{"nick":"moony","message":"entertainment indeed","date":"2017-05-26T02:05:35.052Z","type":"message"}
{"nick":"Cohedrin","date":"2017-05-26T02:05:41.017Z","type":"join"}
{"nick":"felixsanz","reason":"Quit: Bye","date":"2017-05-26T02:09:14.612Z","type":"quit"}
{"nick":"felixsanz","date":"2017-05-26T02:09:54.453Z","type":"join"}
{"nick":"hashrocket","reason":"Quit: Connection closed for inactivity","date":"2017-05-26T02:09:55.241Z","type":"quit"}
{"nick":"jaawerth","message":"n> Object.keys(global).length","date":"2017-05-26T02:11:16.401Z","type":"message"}
{"nick":"babelboot","message":"jaawerth: (okay) 10","date":"2017-05-26T02:11:19.136Z","type":"message"}
{"nick":"jaawerth","message":"yeah just the arrow functions + lack of strict mode + bot/repl weirdness even if you are in strict mode","date":"2017-05-26T02:12:23.197Z","type":"message"}
{"nick":"jaawerth","message":"(I don't even know of the REPL lets you do strict mode outside the context of a function)","date":"2017-05-26T02:12:41.899Z","type":"message"}
{"nick":"jaawerth","message":"if*","date":"2017-05-26T02:12:44.774Z","type":"message"}
{"nick":"f32","message":"has anyone here dealt with event sourcing before?","date":"2017-05-26T02:13:19.103Z","type":"message"}
{"nick":"doodadjs","message":"n> \"use strict\"; a = 1; a","date":"2017-05-26T02:13:25.460Z","type":"message"}
{"nick":"babelboot","message":"doodadjs: (okay) ^  ReferenceError: a is not defined at eval (eval at <anonymous> (/var/ws/eval-js.js:11:21), <anonymous>:1:18) at Object.<anonymous> (/var/ws/eval-js.js:11:21) at Module._compile (module.js:571:32) at Object.Module._e ... https://git.io/vHGGL","date":"2017-05-26T02:13:29.938Z","type":"message"}
{"nick":"f32","message":"the concept behind event sourcing is that all mutations to your data are encoded as a series of events","date":"2017-05-26T02:14:13.845Z","type":"message"}
{"nick":"f32","message":"users of redux might be familiar with this concept","date":"2017-05-26T02:14:25.816Z","type":"message"}
{"nick":"jaawerth","message":"doodadjs: ah, right. I've done that before, lol","date":"2017-05-26T02:14:53.323Z","type":"message"}
{"nick":"doodadjs","message":"I was curious too :)","date":"2017-05-26T02:15:12.218Z","type":"message"}
{"nick":"f32","message":"anyway, one of the primary aspects of event sourcing is that all events through a system are persisted to disk somewhere","date":"2017-05-26T02:15:18.726Z","type":"message"}
{"nick":"jaawerth","message":"oh right, but strict mode doesn't stop 'this' from being the global object when in a global context, which the arrow function preserves, so strict mode is actually irrelevant to that little snippet above","date":"2017-05-26T02:15:47.219Z","type":"message"}
{"nick":"f32","message":"dependant services may then read these events back in sequence, and replay the series of events that lead to the state of a given system","date":"2017-05-26T02:15:54.277Z","type":"message"}
{"nick":"jaawerth","message":"so basically deltas/OT","date":"2017-05-26T02:16:26.323Z","type":"message"}
{"nick":"f32","message":"the thing is, event sourcing sounds great, but the amount of storage required to persist all events in a system for a extended period of time would be huge","date":"2017-05-26T02:16:30.430Z","type":"message"}
{"nick":"chipping","reason":"Ping timeout: 272 seconds","date":"2017-05-26T02:17:10.952Z","type":"quit"}
{"nick":"f32","message":"i mean, event sourcing works today, but we are talking about potentially terrabytes of unnormalized data that need to replayed","date":"2017-05-26T02:17:16.925Z","type":"message"}
{"nick":"f32","message":"does anyone have any thoughts?","date":"2017-05-26T02:17:22.568Z","type":"message"}
{"nick":"jaawerth","message":"I'm pretty sure there's a lot of literature out there on this topic","date":"2017-05-26T02:17:42.308Z","type":"message"}
{"nick":"jaawerth","message":"various compacting strategies etc etc","date":"2017-05-26T02:17:47.038Z","type":"message"}
{"nick":"jaawerth","message":"some with more tradeoffs than others","date":"2017-05-26T02:17:54.166Z","type":"message"}
{"nick":"zsoc","message":"f32: my thoughts are: storage is cheap","date":"2017-05-26T02:18:11.488Z","type":"message"}
{"nick":"f32","message":"jaawerth: well squashing a event system wouldn't be hard","date":"2017-05-26T02:18:15.494Z","type":"message"}
{"nick":"zsoc","message":"and yet... event sourcing.. still kind of silly :p","date":"2017-05-26T02:18:19.874Z","type":"message"}
{"nick":"mochiyoda","reason":"Ping timeout: 260 seconds","date":"2017-05-26T02:18:27.403Z","type":"quit"}
{"nick":"mjora7","reason":"Quit: My MacBook Air has gone to sleep. ZZZzzz…","date":"2017-05-26T02:18:34.473Z","type":"quit"}
{"nick":"chipping","date":"2017-05-26T02:18:37.387Z","type":"join"}
{"nick":"f32","message":"zsoc: if you are managing a system that services 1000's of users","date":"2017-05-26T02:18:41.819Z","type":"message"}
{"nick":"zsoc","message":"a lot of systems do that","date":"2017-05-26T02:18:51.623Z","type":"message"}
{"nick":"f32","message":"and each user submits 1000 updates over a week, that is 1,000,000 events per week","date":"2017-05-26T02:19:05.102Z","type":"message"}
{"nick":"mochiyoda","date":"2017-05-26T02:19:15.430Z","type":"join"}
{"nick":"f32","message":"52,000,000 per year","date":"2017-05-26T02:19:19.348Z","type":"message"}
{"nick":"zsoc","message":"I can see the advantage of stepping though actions in some replay or visualization or whatever.. but yeah.. it's a _lot_ of data","date":"2017-05-26T02:19:22.063Z","type":"message"}
{"nick":"zsoc","message":"but it's very specific data","date":"2017-05-26T02:19:30.023Z","type":"message"}
{"nick":"f32","message":"zsoc: being able to replay a system like that is like insurance","date":"2017-05-26T02:19:53.887Z","type":"message"}
{"nick":"zsoc","message":"you aren't going to be querying all of it in some statistical visualization... it's very specific to some ordering","date":"2017-05-26T02:20:01.088Z","type":"message"}
{"nick":"jaawerth","message":"I mean, I've never had to tackle this directly but I'm pretty sure a fairly common approach is to compact older events at the cost of some of the intermediate state","date":"2017-05-26T02:20:03.315Z","type":"message"}
{"nick":"f32","message":"zsoc: that isn't how it is approached tho","date":"2017-05-26T02:20:19.629Z","type":"message"}
{"nick":"zsoc","message":"so you can tuck it far.. far... far away. And if you need it.. well you can wait a min to grab it from the archives","date":"2017-05-26T02:20:21.971Z","type":"message"}
{"nick":"siba","date":"2017-05-26T02:20:32.822Z","type":"join"}
{"nick":"f32","message":"the idea is that your event sourcing system is a means of constructing domain specific repositories (local databases)","date":"2017-05-26T02:20:44.991Z","type":"message"}
{"nick":"jaawerth","message":"yeah that's the other tradeoff - between minimizing the accrued size and how easy it is to recover past states","date":"2017-05-26T02:20:45.179Z","type":"message"}
{"nick":"f32","message":"local systems can interpret these events however they need to","date":"2017-05-26T02:20:56.634Z","type":"message"}
{"nick":"jaawerth","message":"you can also, depending on the data, do it backwards","date":"2017-05-26T02:21:10.640Z","type":"message"}
{"nick":"zsoc","message":"also 52 million 'things' isn't really a lot of things. 1e7 is a pretty common order even to deal with like.. actual regular data","date":"2017-05-26T02:21:23.066Z","type":"message"}
{"nick":"zsoc","message":"i wonder if time series db's are using for event sourcing.. i imagine they are","date":"2017-05-26T02:22:03.348Z","type":"message"}
{"nick":"f32","message":"zsoc: i wouldn't get hung up on the numbers, we both know the number of possible events would be huge","date":"2017-05-26T02:22:08.817Z","type":"message"}
{"nick":"f32","message":"the biggest problem with event sourcing is the \"what happens\" when you run out of space","date":"2017-05-26T02:22:53.831Z","type":"message"}
{"nick":"doodadjs","message":"how big are rows ?","date":"2017-05-26T02:23:18.578Z","type":"message"}
{"nick":"f32","message":"who knows","date":"2017-05-26T02:23:24.495Z","type":"message"}
{"nick":"karmahac_","date":"2017-05-26T02:23:30.768Z","type":"join"}
{"nick":"jaawerth","message":"I dunno, I think there's also the matter of diminished rate of return as the number of events grow","date":"2017-05-26T02:23:44.989Z","type":"message"}
{"nick":"zsoc","message":"but historically event sourcing has been used to recreate state from events, from some certain point","date":"2017-05-26T02:23:50.386Z","type":"message"}
{"nick":"jaawerth","message":"it gets harder and slower to actually traverse your history","date":"2017-05-26T02:23:52.387Z","type":"message"}
{"nick":"zsoc","message":"so everything before that point is basically archived","date":"2017-05-26T02:23:57.795Z","type":"message"}
{"nick":"zsoc","message":"obv i can't recreate the current state of a user by running a tree of every event since inception every time he logs in","date":"2017-05-26T02:24:19.736Z","type":"message"}
{"nick":"zsoc","message":"I mean... I could","date":"2017-05-26T02:24:21.568Z","type":"message"}
{"nick":"jaawerth","message":"but yeah you gotta more or less start compacting, and getting full snapchots of intermediate states as bookmarks for where you start your playback","date":"2017-05-26T02:24:35.697Z","type":"message"}
{"nick":"f32","message":"its really really extreme tho, you could have a 1 byte database, with 5TB of events representing mutations on that 1 byte database","date":"2017-05-26T02:24:45.915Z","type":"message"}
{"nick":"f32","message":"i mean, why not","date":"2017-05-26T02:24:59.294Z","type":"message"}
{"nick":"jaawerth","message":"that's sounding pretty handwavy","date":"2017-05-26T02:25:02.404Z","type":"message"}
{"nick":"f32","message":"jaawerth: its not handwavy at all, its just unlikely you would have a 1 byte database","date":"2017-05-26T02:25:31.707Z","type":"message"}
{"nick":"smt_","date":"2017-05-26T02:25:47.389Z","type":"join"}
{"nick":"jaawerth","message":"you could also bake a cake in the oven and have it come out frozen","date":"2017-05-26T02:25:54.911Z","type":"message"}
{"nick":"zsoc","message":"maybe i don't understand the currently implementations... but creating intermediate states sort of defeats the purpose of them being event sourced? no? otherwise you're just updating the state based on the last event.. and then that's just a database with a really micromanaged history heh","date":"2017-05-26T02:26:45.232Z","type":"message"}
{"nick":"jaawerth","message":"it's physically possible by the rules of statistical mechanics but you can wait the age of the universe without it happening","date":"2017-05-26T02:26:50.753Z","type":"message"}
{"nick":"karmahacker","reason":"Ping timeout: 240 seconds","date":"2017-05-26T02:26:57.707Z","type":"quit"}
{"nick":"f32","message":"jaawerth: no one cares","date":"2017-05-26T02:27:05.295Z","type":"message"}
{"nick":"bdunavant","date":"2017-05-26T02:27:17.110Z","type":"join"}
{"nick":"zsoc","message":"Is this a reasonable practice anywhere out side of like... something that needs very specific audit trails","date":"2017-05-26T02:27:25.294Z","type":"message"}
{"nick":"zsoc","message":"and dev environments","date":"2017-05-26T02:27:32.077Z","type":"message"}
{"nick":"f32","message":"zsoc: the idea is that you track all operations applied to your system, but you have disparate things interpreting these operations to rebuilt state local to themselves","date":"2017-05-26T02:27:51.151Z","type":"message"}
{"nick":"zsoc","message":"from where? can't be from epoch","date":"2017-05-26T02:28:04.549Z","type":"message"}
{"nick":"jaawerth","message":"haha wow. both mean and showing a total failure to grasp irony. I guess I'm done here, lol","date":"2017-05-26T02:28:11.722Z","type":"message"}
{"nick":"f32","message":"zsoc: so for example, you could have a front facing service for users, and a seperate reporting service that reads each operation in turn and builds a local database to service those reports","date":"2017-05-26T02:28:41.358Z","type":"message"}
{"nick":"f32","message":"jaawerth: again, no one cares","date":"2017-05-26T02:28:57.141Z","type":"message"}
{"nick":"smt","reason":"Ping timeout: 255 seconds","date":"2017-05-26T02:29:10.803Z","type":"quit"}
{"nick":"f32","message":"zsoc: so, i think in a setup like this, you have multiple sources of truth (each local database), but 1 TRUE source of truth, which is encoded as operations in your event stream","date":"2017-05-26T02:29:52.004Z","type":"message"}
{"nick":"jaawerth","message":"f32: that's cool, and I don't mind bowing out, but 1) you only speak for yourself, and 2) you don't have to be an ass","date":"2017-05-26T02:30:35.349Z","type":"message"}
{"nick":"f32","message":"jaawerth: you're being an ass, please stop","date":"2017-05-26T02:30:49.808Z","type":"message"}
{"nick":"gothicsouth","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2017-05-26T02:31:06.866Z","type":"quit"}
{"nick":"jaawerth","message":"as I said, I'm bowing out - just thought the hostility was uncalled for","date":"2017-05-26T02:31:17.014Z","type":"message"}
{"nick":"neoncontrails","date":"2017-05-26T02:31:24.937Z","type":"join"}
{"nick":"f32","message":"zsoc: so in terms of squashing an event stream, i suspect one would only need to implement some external database, apply operations in sequence to build up that database, then blitz the event stream","date":"2017-05-26T02:31:38.317Z","type":"message"}
{"nick":"f32","message":"jaawerth: and again, no one cares","date":"2017-05-26T02:31:52.444Z","type":"message"}
{"nick":"f32","message":"zsoc: its really hard to say what would happen in the long term with event sourcing, and running out of space and having to squash data seems rather dubious","date":"2017-05-26T02:32:33.458Z","type":"message"}
{"nick":"Cohedrin","reason":"Max SendQ exceeded","date":"2017-05-26T02:32:35.075Z","type":"quit"}
{"nick":"Cabanossi","reason":"Ping timeout: 245 seconds","date":"2017-05-26T02:34:33.840Z","type":"quit"}
{"nick":"KermitoniT","reason":"Ping timeout: 240 seconds","date":"2017-05-26T02:35:28.329Z","type":"quit"}
{"nick":"doodadjs","message":"I'll first try to calculate the physical maximum size of one row, then determinate in how many years it will go out of space, and ask if you really need to be able to replay more years or if you can make archives","date":"2017-05-26T02:36:13.423Z","type":"message"}
{"nick":"Cabanossi","date":"2017-05-26T02:36:32.019Z","type":"join"}
{"nick":"zsoc","message":"*snapshots... state doesn't exist really and is always a result of some iterative logic of events.. so you can only go back as far as the last snapshot or eventually things will grind to a crawl","date":"2017-05-26T02:37:08.272Z","type":"message"}
{"nick":"zsoc","message":"and anything before the last few snapshots is archive-able really","date":"2017-05-26T02:37:37.785Z","type":"message"}
{"nick":"k0nsl","reason":"Quit: “If we don't believe in freedom of expression for people we despise, we don't believe in it at all — Noam Chomsky”","date":"2017-05-26T02:37:42.112Z","type":"quit"}
{"nick":"Cohedrin","date":"2017-05-26T02:37:45.790Z","type":"join"}
{"nick":"k0nsl","date":"2017-05-26T02:38:00.340Z","type":"join"}
{"nick":"k0nsl","reason":"Changing host","date":"2017-05-26T02:38:00.528Z","type":"quit"}
{"nick":"k0nsl","date":"2017-05-26T02:38:00.529Z","type":"join"}
{"nick":"zsoc","message":"i don't really see a scaling problem, dunno","date":"2017-05-26T02:38:03.518Z","type":"message"}
{"nick":"Phloxx","reason":"Ping timeout: 258 seconds","date":"2017-05-26T02:38:12.166Z","type":"quit"}
{"nick":"bdunavant","reason":"Remote host closed the connection","date":"2017-05-26T02:39:03.042Z","type":"quit"}
{"nick":"gli","date":"2017-05-26T02:40:39.354Z","type":"join"}
{"nick":"gothicsouth","date":"2017-05-26T02:41:13.323Z","type":"join"}
{"nick":"Phloxx","date":"2017-05-26T02:41:38.905Z","type":"join"}
{"nick":"moony","reason":"Ping timeout: 260 seconds","date":"2017-05-26T02:42:03.072Z","type":"quit"}
{"nick":"m31271n","reason":"Ping timeout: 255 seconds","date":"2017-05-26T02:45:49.791Z","type":"quit"}
{"nick":"sunr00t","date":"2017-05-26T02:46:03.288Z","type":"join"}
{"nick":"Mia","reason":"Read error: Connection reset by peer","date":"2017-05-26T02:46:14.581Z","type":"quit"}
{"nick":"f32","message":"doodadjs: not all operations can be encoded in a fixed sized row","date":"2017-05-26T02:46:16.317Z","type":"message"}
{"nick":"f32","message":"doodadjs: you could estimate that the average size of a message is N bytes, but the most general event source solution would probably encode events as a stream of byte buffers in sequence","date":"2017-05-26T02:47:02.056Z","type":"message"}
{"nick":"hndk","date":"2017-05-26T02:47:08.378Z","type":"join"}
{"nick":"sunr00t","reason":"Client Quit","date":"2017-05-26T02:47:28.651Z","type":"quit"}
{"nick":"pilne","reason":"Quit: Quitting!","date":"2017-05-26T02:47:53.030Z","type":"quit"}
{"nick":"f32","message":"zsoc: its interesting tho, in all, i really really really like the concept of event sourcing, (would be worried the term might become yet another buzz word thrown around), but there are a lot of unknowns and what ifs with regards to managing a system like this into the future.","date":"2017-05-26T02:49:08.302Z","type":"message"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-05-26T02:49:17.421Z","type":"quit"}
{"nick":"tristanp","date":"2017-05-26T02:49:45.080Z","type":"join"}
{"nick":"goodenough","date":"2017-05-26T02:51:23.113Z","type":"join"}
{"nick":"tmccleve","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-05-26T02:51:33.744Z","type":"quit"}
{"nick":"m31271n","date":"2017-05-26T02:52:16.063Z","type":"join"}
{"nick":"k0nsl","reason":"Quit: “If we don't believe in freedom of expression for people we despise, we don't believe in it at all — Noam Chomsky”","date":"2017-05-26T02:52:17.026Z","type":"quit"}
{"nick":"MINIMAN10000","reason":"Ping timeout: 240 seconds","date":"2017-05-26T02:52:30.360Z","type":"quit"}
{"nick":"k0nsl","date":"2017-05-26T02:52:39.798Z","type":"join"}
{"nick":"k0nsl","reason":"Changing host","date":"2017-05-26T02:52:39.798Z","type":"quit"}
{"nick":"k0nsl","date":"2017-05-26T02:52:39.798Z","type":"join"}
{"nick":"zuck05","date":"2017-05-26T02:53:00.241Z","type":"join"}
{"nick":"_neo","date":"2017-05-26T02:53:43.719Z","type":"join"}
{"nick":"_neo","reason":"Client Quit","date":"2017-05-26T02:54:53.171Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 268 seconds","date":"2017-05-26T02:56:58.592Z","type":"quit"}
{"nick":"ewonou","reason":"Remote host closed the connection","date":"2017-05-26T03:02:29.457Z","type":"quit"}
{"nick":"ecuanaso","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-05-26T03:02:52.487Z","type":"quit"}
{"nick":"neoncontrails","reason":"Remote host closed the connection","date":"2017-05-26T03:03:12.527Z","type":"quit"}
{"nick":"neoncontrails","date":"2017-05-26T03:03:50.748Z","type":"join"}
{"nick":"tvw","date":"2017-05-26T03:07:42.056Z","type":"join"}
{"nick":"neoncontrails","reason":"Ping timeout: 255 seconds","date":"2017-05-26T03:08:14.715Z","type":"quit"}
{"nick":"smt_","reason":"Read error: Connection reset by peer","date":"2017-05-26T03:12:02.736Z","type":"quit"}
{"nick":"smt_","date":"2017-05-26T03:12:28.296Z","type":"join"}
{"nick":"nacci","reason":"Ping timeout: 260 seconds","date":"2017-05-26T03:12:57.997Z","type":"quit"}
{"nick":"a_thakur","date":"2017-05-26T03:13:23.028Z","type":"join"}
{"nick":"computer2000","date":"2017-05-26T03:14:21.375Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 240 seconds","date":"2017-05-26T03:17:13.558Z","type":"quit"}
{"nick":"neoncontrails","date":"2017-05-26T03:17:23.055Z","type":"join"}
{"nick":"zxc","date":"2017-05-26T03:17:56.319Z","type":"join"}
{"nick":"julianduque","date":"2017-05-26T03:18:19.520Z","type":"join"}
{"nick":"hndk","reason":"Quit: Leaving","date":"2017-05-26T03:18:19.520Z","type":"quit"}
{"nick":"Defcronyke","reason":"Remote host closed the connection","date":"2017-05-26T03:19:45.634Z","type":"quit"}
{"nick":"Cabanossi","reason":"Ping timeout: 272 seconds","date":"2017-05-26T03:19:52.842Z","type":"quit"}
{"nick":"Cabanoss-","date":"2017-05-26T03:19:57.790Z","type":"join"}
{"nick":"tvw","date":"2017-05-26T03:20:14.764Z","type":"quit"}
{"nick":"Cabanoss-","new_nick":"Cabanossi","date":"2017-05-26T03:21:06.436Z","type":"nick"}
{"nick":"bobbydoogle","date":"2017-05-26T03:21:13.264Z","type":"join"}
{"nick":"goodenough","reason":"Remote host closed the connection","date":"2017-05-26T03:23:10.495Z","type":"quit"}
{"nick":"bobbydoogle","message":"If an org needs to whitelist sites/urls that npm packages pull from (for standard ones available on npmjs) is that through npmjs or is from multiple domains?","date":"2017-05-26T03:23:16.761Z","type":"message"}
{"nick":"AmazeCPK","date":"2017-05-26T03:25:41.594Z","type":"join"}
{"nick":"systemfault","date":"2017-05-26T03:25:47.030Z","type":"join"}
{"nick":"k0nsl","reason":"Quit: “If we don't believe in freedom of expression for people we despise, we don't believe in it at all — Noam Chomsky”","date":"2017-05-26T03:25:47.377Z","type":"quit"}
{"nick":"k0nsl","date":"2017-05-26T03:26:14.296Z","type":"join"}
{"nick":"k0nsl","reason":"Changing host","date":"2017-05-26T03:26:14.485Z","type":"quit"}
{"nick":"k0nsl","date":"2017-05-26T03:26:14.485Z","type":"join"}
{"nick":"octetcloud","date":"2017-05-26T03:26:16.436Z","type":"join"}
{"nick":"GreenJello","message":"bobbydoogle, I think some prebuilt binary packages download from other sites","date":"2017-05-26T03:27:16.401Z","type":"message"}
{"nick":"Cohedrin","reason":"Ping timeout: 240 seconds","date":"2017-05-26T03:27:28.331Z","type":"quit"}
{"nick":"GreenJello","message":"they usually have \"prebuilt\" in the package name","date":"2017-05-26T03:27:33.055Z","type":"message"}
{"nick":"webdev007","reason":"Remote host closed the connection","date":"2017-05-26T03:27:49.702Z","type":"quit"}
{"nick":"GreenJello","message":"or sometimes \"bin\"","date":"2017-05-26T03:28:11.784Z","type":"message"}
{"nick":"GreenJello","message":"you'll have to deal with those case by case","date":"2017-05-26T03:28:28.834Z","type":"message"}
{"nick":"goodenough","date":"2017-05-26T03:30:06.264Z","type":"join"}
{"nick":"the_ant","date":"2017-05-26T03:30:18.271Z","type":"join"}
{"nick":"Cohedrin","date":"2017-05-26T03:30:33.710Z","type":"join"}
{"nick":"AmazeCPK","message":"I'm having a bit of trouble getting some of my information to display correctly when using a many to many join in node/knex/pg. Here is desired, and actual output + code. Anyone willing to take a look? https://gist.github.com/anonymous/4bb573af7b9c0fdce3da059836ab60af","date":"2017-05-26T03:32:57.382Z","type":"message"}
{"nick":"KermitoniT","date":"2017-05-26T03:33:25.544Z","type":"join"}
{"nick":"bobbydoogle","message":"GreenJello! Thanks, I'll dig into that and see what modules are effected. Guess I'll need to monitor my net traffic to see where they pull from.","date":"2017-05-26T03:33:38.672Z","type":"message"}
{"nick":"asteele","message":"AmazeCPK you arent using any many to many relationship helpers, you are just raw querying the db with joins, so what you have is 100% the expected result","date":"2017-05-26T03:34:14.067Z","type":"message"}
{"nick":"MachinShin","date":"2017-05-26T03:34:16.639Z","type":"join"}
{"nick":"k0nsl","reason":"Quit: “If we don't believe in freedom of expression for people we despise, we don't believe in it at all — Noam Chomsky”","date":"2017-05-26T03:34:32.469Z","type":"quit"}
{"nick":"AmazeCPK","message":"ahh, interesting. I'm not quite sure where to proceed from here.","date":"2017-05-26T03:35:02.164Z","type":"message"}
{"nick":"asteele","message":"well knex is just a wuery builder, it is not an ORM","date":"2017-05-26T03:35:17.195Z","type":"message"}
{"nick":"asteele","message":"something that would facilitate your relationships between tables would be an ORM generally, like bookshelf or sequelize","date":"2017-05-26T03:35:44.503Z","type":"message"}
{"nick":"asteele","message":"query builder*","date":"2017-05-26T03:35:49.339Z","type":"message"}
{"nick":"asteele","message":"you can proceed either by using an ORM that does that for you, or formatting the results after they come out of the db","date":"2017-05-26T03:36:45.204Z","type":"message"}
{"nick":"k0nsl","date":"2017-05-26T03:36:54.540Z","type":"join"}
{"nick":"k0nsl","reason":"Changing host","date":"2017-05-26T03:36:54.728Z","type":"quit"}
{"nick":"k0nsl","date":"2017-05-26T03:36:54.728Z","type":"join"}
{"nick":"computer2000","reason":"Ping timeout: 260 seconds","date":"2017-05-26T03:37:20.235Z","type":"quit"}
{"nick":"AmazeCPK","message":"oh, interesting. I wasn't aware. Alright, looks like I'll see if I can try formatting the results","date":"2017-05-26T03:39:10.722Z","type":"message"}
{"nick":"AmazeCPK","message":"Thank you!","date":"2017-05-26T03:39:12.895Z","type":"message"}
{"nick":"bobbydoogle","reason":"Quit: Leaving","date":"2017-05-26T03:39:42.888Z","type":"quit"}
{"nick":"asteele","message":"you're welcome","date":"2017-05-26T03:40:04.162Z","type":"message"}
{"nick":"asteele","message":"feel free to ask more if you need help with getting the result how you want","date":"2017-05-26T03:40:29.286Z","type":"message"}
{"nick":"melvin_","date":"2017-05-26T03:42:04.958Z","type":"join"}
{"nick":"EyePulp","reason":"Read error: Connection reset by peer","date":"2017-05-26T03:42:57.827Z","type":"quit"}
{"nick":"MachinShin","reason":"Ping timeout: 268 seconds","date":"2017-05-26T03:43:13.519Z","type":"quit"}
{"nick":"EyePulp","date":"2017-05-26T03:43:28.075Z","type":"join"}
{"nick":"AmazeCPK","message":"thank you. I'll probably get stuck, but I'll give it a shot!","date":"2017-05-26T03:44:19.393Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2017-05-26T03:47:46.045Z","type":"quit"}
{"nick":"tristanp","reason":"Remote host closed the connection","date":"2017-05-26T03:48:46.500Z","type":"quit"}
{"nick":"indistylo","date":"2017-05-26T03:48:54.667Z","type":"join"}
{"nick":"indistylo","reason":"Max SendQ exceeded","date":"2017-05-26T03:49:09.651Z","type":"quit"}
{"nick":"nomoney4me","date":"2017-05-26T03:49:46.496Z","type":"join"}
{"nick":"f32","message":"does anyone know if its possible to open a file in nodejs and have it locked","date":"2017-05-26T03:50:23.307Z","type":"message"}
{"nick":"Cabanossi","date":"2017-05-26T03:50:28.481Z","type":"join"}
{"nick":"f32","message":"locked in the regards that the process that opened the file is the only one with the ability to write","date":"2017-05-26T03:50:53.226Z","type":"message"}
{"nick":"cagedwisdom","date":"2017-05-26T03:51:41.339Z","type":"join"}
{"nick":"Cohedrin","reason":"Read error: Connection reset by peer","date":"2017-05-26T03:52:07.642Z","type":"quit"}
{"nick":"\\s","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-05-26T03:53:07.009Z","type":"quit"}
{"nick":"melvin_","reason":"Ping timeout: 260 seconds","date":"2017-05-26T03:54:22.907Z","type":"quit"}
{"nick":"Cohedrin","date":"2017-05-26T03:54:42.065Z","type":"join"}
{"nick":"\\s","date":"2017-05-26T03:54:57.938Z","type":"join"}
{"nick":"\\s","reason":"Client Quit","date":"2017-05-26T03:55:09.615Z","type":"quit"}
{"nick":"goodenough","reason":"Read error: Connection reset by peer","date":"2017-05-26T03:55:41.354Z","type":"quit"}
{"nick":"etos","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-05-26T03:56:39.751Z","type":"quit"}
{"nick":"neoncontrails","reason":"Remote host closed the connection","date":"2017-05-26T03:57:34.725Z","type":"quit"}
{"nick":"goodenough","date":"2017-05-26T03:58:24.247Z","type":"join"}
{"nick":"rorro","reason":"Ping timeout: 240 seconds","date":"2017-05-26T03:59:30.178Z","type":"quit"}
{"nick":"snowkidind","date":"2017-05-26T04:00:17.351Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 240 seconds","date":"2017-05-26T04:02:28.182Z","type":"quit"}
{"nick":"m31271n","reason":"Ping timeout: 246 seconds","date":"2017-05-26T04:04:07.944Z","type":"quit"}
{"nick":"f32","message":"and also","date":"2017-05-26T04:04:36.774Z","type":"message"}
{"nick":"f32","message":"synchronous vs asynchronous file writing, does anyone have any thoughts?","date":"2017-05-26T04:04:53.706Z","type":"message"}
{"nick":"ljharb","message":"always do async","date":"2017-05-26T04:05:19.102Z","type":"message"}
{"nick":"f32","message":"ljharb: why?","date":"2017-05-26T04:05:24.766Z","type":"message"}
{"nick":"f32","message":"aside from the obvious","date":"2017-05-26T04:05:35.930Z","type":"message"}
{"nick":"ljharb","message":"also, sync/async file operations in node is not the same thing as sync/async file operations are at a lower level.","date":"2017-05-26T04:05:36.979Z","type":"message"}
{"nick":"m31271n","date":"2017-05-26T04:05:43.703Z","type":"join"}
{"nick":"ljharb","message":"iirc, sync node file operations are still async at the fs level.","date":"2017-05-26T04:05:52.202Z","type":"message"}
{"nick":"ljharb","message":"f32: but also, the obvious is why. everything i/o should be async.","date":"2017-05-26T04:06:06.408Z","type":"message"}
{"nick":"joyee","date":"2017-05-26T04:06:46.487Z","type":"join"}
{"nick":"f32","message":"ljharb: well, the reason is, preforming asynchronous operations on the file system mandates quite a bit of overhead on the node process","date":"2017-05-26T04:06:47.189Z","type":"message"}
{"nick":"f32","message":"ljharb: and i mean, above and beyond the most trivial reading and writing","date":"2017-05-26T04:07:07.036Z","type":"message"}
{"nick":"ljharb","message":"whether you use `fs.writeFile` or `fs.writeFileSync`, i believe it has identical overhead.","date":"2017-05-26T04:07:12.012Z","type":"message"}
{"nick":"ljharb","message":"but regardless, if you want to make a performance claim, get it working first and benchmark it.","date":"2017-05-26T04:07:29.243Z","type":"message"}
{"nick":"EyePulp","reason":"Read error: Connection reset by peer","date":"2017-05-26T04:08:04.169Z","type":"quit"}
{"nick":"f32","message":"ljharb: its more operational queing in node, you need a async semaphore like thing to sequence operations to disk","date":"2017-05-26T04:08:05.606Z","type":"message"}
{"nick":"ljharb","message":"when you use fs sync operations in node tho, it just freezes the main thread while the identical fs operation happens in another thread","date":"2017-05-26T04:08:16.065Z","type":"message"}
{"nick":"EyePulp","date":"2017-05-26T04:08:17.696Z","type":"join"}
{"nick":"led1","reason":"Quit: led1","date":"2017-05-26T04:08:20.985Z","type":"quit"}
{"nick":"ljharb","message":"f32: theoretically; but under the hood i believe it's identical.","date":"2017-05-26T04:08:26.304Z","type":"message"}
{"nick":"graffix","date":"2017-05-26T04:08:51.131Z","type":"join"}
{"nick":"ljharb","message":"the *Sync methods are just a legacy convenience to avoid callbacks; they're not more performant than the normal async methods.","date":"2017-05-26T04:08:55.728Z","type":"message"}
{"nick":"f32","message":"ljharb: im not sure it is, well, if sync ops are going out over IOCP im not sure","date":"2017-05-26T04:09:04.534Z","type":"message"}
{"nick":"nomoney4u","date":"2017-05-26T04:09:27.182Z","type":"join"}
{"nick":"ljharb","message":"there's never been any reason to prefer sync node operations afaik","date":"2017-05-26T04:09:38.468Z","type":"message"}
{"nick":"f32","message":"ljharb: its not that the callbacks are not preformant, im talking about if you need to enforce sequential write operations that may happen in a batch","date":"2017-05-26T04:09:56.006Z","type":"message"}
{"nick":"MachinShin","date":"2017-05-26T04:10:08.738Z","type":"join"}
{"nick":"f32","message":"where if you don't put the necessary checks and balances in place, you wind up with interleaving writes","date":"2017-05-26T04:10:36.526Z","type":"message"}
{"nick":"joyee","reason":"Ping timeout: 240 seconds","date":"2017-05-26T04:11:05.236Z","type":"quit"}
{"nick":"f32","message":"ljharb: basically, you need to \"lock\" the resource (file) for writing, and with sync writes, you get that locking implicitly (allowing you to preform N operations on the file at once at the expense of blocking the thread)","date":"2017-05-26T04:11:42.007Z","type":"message"}
{"nick":"prometh","message":"i use sync operations sometimes in simple build scripts","date":"2017-05-26T04:11:53.196Z","type":"message"}
{"nick":"f32","message":"ljharb: with async, you need to wire up a semaphore that queues write operations, allowing you to batch them sequentially, and its this semaphore like thing that is the overhead","date":"2017-05-26T04:12:35.950Z","type":"message"}
{"nick":"EyePulp","reason":"Read error: Connection reset by peer","date":"2017-05-26T04:12:36.451Z","type":"quit"}
{"nick":"chrisml","reason":"Ping timeout: 240 seconds","date":"2017-05-26T04:13:00.208Z","type":"quit"}
{"nick":"EyePulp","date":"2017-05-26T04:13:11.646Z","type":"join"}
{"nick":"nacci","date":"2017-05-26T04:13:35.306Z","type":"join"}
{"nick":"f32","message":"ljharb: note tho, preforming this kind of sequential batch processing of a file is rather trivial (code wise) with async/await, but the overhead to do it can be prohibitive.","date":"2017-05-26T04:13:54.956Z","type":"message"}
{"nick":"f32","message":"ljharb: so i wonder, would it be better to using sync read / write to achieve this result, and possibly run your disk IO in another dedicated process entirely","date":"2017-05-26T04:14:36.790Z","type":"message"}
{"nick":"EyePulp","reason":"Read error: Connection reset by peer","date":"2017-05-26T04:14:36.978Z","type":"quit"}
{"nick":"EyePulp","date":"2017-05-26T04:15:04.440Z","type":"join"}
{"nick":"f32","message":"ljharb: i mean, there is a case to be made for sync file io","date":"2017-05-26T04:15:21.196Z","type":"message"}
{"nick":"f32","message":"ljharb: so, its blocking the thread or writing a semaphore in javascript, which is better?","date":"2017-05-26T04:16:06.948Z","type":"message"}
{"nick":"chrisml","date":"2017-05-26T04:16:07.226Z","type":"join"}
{"nick":"f32","message":"noting that blocking the thread would have less memory overhead overall","date":"2017-05-26T04:16:26.320Z","type":"message"}
{"nick":"prometh","message":"why do you need batch processes? libuv is a semaphore","date":"2017-05-26T04:16:37.426Z","type":"message"}
{"nick":"f32","message":"prometh: read above","date":"2017-05-26T04:16:53.134Z","type":"message"}
{"nick":"doodadjs","message":"all I know is async writes are through a stream which has a buffer","date":"2017-05-26T04:16:57.734Z","type":"message"}
{"nick":"prometh","message":"streams use less memory than a full read","date":"2017-05-26T04:17:16.884Z","type":"message"}
{"nick":"prometh","message":"regardless of concurrency","date":"2017-05-26T04:17:28.520Z","type":"message"}
{"nick":"\\s","date":"2017-05-26T04:17:40.747Z","type":"join"}
{"nick":"f32","message":"well, in the particular scenario im dealing with, i can't stream the file, rather i have random access read/writes to the file","date":"2017-05-26T04:17:52.923Z","type":"message"}
{"nick":"tcpdump","date":"2017-05-26T04:17:58.731Z","type":"join"}
{"nick":"f32","message":"so reading and writing is non linear","date":"2017-05-26T04:18:04.121Z","type":"message"}
{"nick":"seralina","date":"2017-05-26T04:18:18.886Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 245 seconds","date":"2017-05-26T04:18:43.751Z","type":"quit"}
{"nick":"prometh","message":"i dunno, this goes beyond anything i'd ever need to do","date":"2017-05-26T04:18:46.980Z","type":"message"}
{"nick":"ljharb","message":"f32: right, i'm suggesting that you don't get that locking no matter what","date":"2017-05-26T04:18:48.461Z","type":"message"}
{"nick":"f32","message":"if it was linear, id just stream","date":"2017-05-26T04:18:50.594Z","type":"message"}
{"nick":"systemfault","message":"Under the hood, file IO is sync on node","date":"2017-05-26T04:19:03.125Z","type":"message"}
{"nick":"f32","message":"ljharb: you do with sync tho","date":"2017-05-26T04:19:04.572Z","type":"message"}
{"nick":"ljharb","message":"f32: ie `fs.writeFileSync(path, data); fs.readFileSync(path)` won't necessarily give you the data you just wrote","date":"2017-05-26T04:19:06.853Z","type":"message"}
{"nick":"tcpdump","message":"Hey everyone.","date":"2017-05-26T04:19:10.655Z","type":"message"}
{"nick":"ljharb","message":"f32: you ensure that *javascript* won't write to it in that process. but anything else on the system still could.","date":"2017-05-26T04:19:23.713Z","type":"message"}
{"nick":"f32","message":"ljharb: im reading and writing via a file descriptor","date":"2017-05-26T04:19:26.474Z","type":"message"}
{"nick":"ljharb","message":"systemfault: like at a low level?","date":"2017-05-26T04:19:41.504Z","type":"message"}
{"nick":"systemfault","message":"ljharb: At the libuv level","date":"2017-05-26T04:19:55.489Z","type":"message"}
{"nick":"Cabanossi","date":"2017-05-26T04:19:56.932Z","type":"join"}
{"nick":"ljharb","message":"hm, interesting","date":"2017-05-26T04:20:04.743Z","type":"message"}
{"nick":"systemfault","message":"Still, the IO is run on a thread","date":"2017-05-26T04:20:08.719Z","type":"message"}
{"nick":"tcpdump","message":"So, Im trying to make sure I understand node.js..  So node is an interpretor that the web server (nginx in my case) hands code off to for execution?","date":"2017-05-26T04:20:12.011Z","type":"message"}
{"nick":"systemfault","message":"So it doesn't block","date":"2017-05-26T04:20:13.559Z","type":"message"}
{"nick":"tcpdump","message":"Much like php?","date":"2017-05-26T04:20:17.185Z","type":"message"}
{"nick":"ljharb","message":"in that case, wouldn't it be the same whether you use blocking or nonblocking node APIs?","date":"2017-05-26T04:20:21.302Z","type":"message"}
{"nick":"ljharb","message":"tcpdump: no, node is the webserver.","date":"2017-05-26T04:20:31.038Z","type":"message"}
{"nick":"prometh","message":"tcpdump: php is a separate process","date":"2017-05-26T04:20:31.403Z","type":"message"}
{"nick":"tcpdump","message":"Ah, so it would be used instead of nginx?","date":"2017-05-26T04:20:48.410Z","type":"message"}
{"nick":"f32","message":"ljharb: but think about it tho, if im blocking the JS loop by using sync io, then im guaranteed to have the kind of batch writing with zero interleaving","date":"2017-05-26T04:20:52.968Z","type":"message"}
{"nick":"ljharb","message":"f32: only within that one node process.","date":"2017-05-26T04:21:07.184Z","type":"message"}
{"nick":"EyePulp","reason":"Read error: Connection reset by peer","date":"2017-05-26T04:21:14.472Z","type":"quit"}
{"nick":"f32","message":"ljharb: yes, only with one node process","date":"2017-05-26T04:21:17.199Z","type":"message"}
{"nick":"ljharb","message":"tcpdump: it could be. but you could also use both together.","date":"2017-05-26T04:21:23.981Z","type":"message"}
{"nick":"systemfault","message":"ljharb: Well, the fact the blocking IO happens in a thread still allows the event loop to process events.","date":"2017-05-26T04:21:26.607Z","type":"message"}
{"nick":"EyePulp","date":"2017-05-26T04:21:29.785Z","type":"join"}
{"nick":"f32","message":"i asked earlier if it was possible to lock a file to a process","date":"2017-05-26T04:21:30.687Z","type":"message"}
{"nick":"tcpdump","message":"ljharb: gotcha","date":"2017-05-26T04:21:40.287Z","type":"message"}
{"nick":"f32","message":"ljharb: for this scenario, lets just assume we have 1 process managing the file","date":"2017-05-26T04:21:52.030Z","type":"message"}
{"nick":"tcpdump","message":"Anyone have a good setup and initial config doc?","date":"2017-05-26T04:22:03.729Z","type":"message"}
{"nick":"chipping","reason":"Ping timeout: 260 seconds","date":"2017-05-26T04:22:07.259Z","type":"quit"}
{"nick":"ljharb","message":"f32: given that tho, what does it matter if there's interleaving? your code has the only access to the file.","date":"2017-05-26T04:22:13.564Z","type":"message"}
{"nick":"doodadjs","message":"tcpdump: generally people proxify it through nginx or another http server for, by example, serving static files","date":"2017-05-26T04:22:32.031Z","type":"message"}
{"nick":"systemfault","message":"ljharb: What libuv says: \"Unlike network I/O, there are no platform-specific file I/O primitives libuv could rely on, so the current approach is to run blocking file I/O operations in a thread pool.\"","date":"2017-05-26T04:22:34.407Z","type":"message"}
{"nick":"f32","message":"ljharb: it matters in a async sense, because batched / random access writes to the file need to be sequenced via a semaphore","date":"2017-05-26T04:22:51.734Z","type":"message"}
{"nick":"f32","message":"ljharb: and the semaphore is overhead","date":"2017-05-26T04:23:10.445Z","type":"message"}
{"nick":"ljharb","message":"f32: right, but it's all your code. so you can just sequence it","date":"2017-05-26T04:23:15.488Z","type":"message"}
{"nick":"ljharb","message":"i don't think it's significant overhead.","date":"2017-05-26T04:23:21.726Z","type":"message"}
{"nick":"ljharb","message":"it'd be negligible in practice","date":"2017-05-26T04:23:26.209Z","type":"message"}
{"nick":"f32","message":"ljharb: its actually quite a lot","date":"2017-05-26T04:23:30.713Z","type":"message"}
{"nick":"tcpdump","message":"doodadjs: so it would be better to think of it more like ruby on rails and then passenger, for example, for nginx?","date":"2017-05-26T04:23:32.410Z","type":"message"}
{"nick":"ljharb","message":"f32: ok, so what's your question","date":"2017-05-26T04:23:50.709Z","type":"message"}
{"nick":"ljharb","message":"tcpdump: that's a better analogy","date":"2017-05-26T04:24:00.315Z","type":"message"}
{"nick":"f32","message":"ljharb: read above","date":"2017-05-26T04:24:02.661Z","type":"message"}
{"nick":"f32","message":"ljharb: you have been in this conversation this whole time >_>","date":"2017-05-26T04:24:14.939Z","type":"message"}
{"nick":"ljharb","message":"lol yes but you just asked if anyone has any thoughts","date":"2017-05-26T04:24:31.528Z","type":"message"}
{"nick":"ljharb","message":"and it seems you have all the answers you need or want :-p","date":"2017-05-26T04:24:39.931Z","type":"message"}
{"nick":"mjora7","date":"2017-05-26T04:24:45.549Z","type":"join"}
{"nick":"ljharb","message":"so i'm wondering what more you're hoping for","date":"2017-05-26T04:24:49.978Z","type":"message"}
{"nick":"f32","message":"ljharb: well, its a good discussion the sync/async one","date":"2017-05-26T04:24:51.394Z","type":"message"}
{"nick":"tcpdump","message":"thanks doodadjs","date":"2017-05-26T04:25:04.563Z","type":"message"}
{"nick":"f32","message":"everyone just says use async 100%, but there is a very real case for sync","date":"2017-05-26T04:25:18.887Z","type":"message"}
{"nick":"chipping","date":"2017-05-26T04:25:19.199Z","type":"join"}
{"nick":"m31271n","reason":"Ping timeout: 245 seconds","date":"2017-05-26T04:25:23.744Z","type":"quit"}
{"nick":"ljharb","message":"it sounds like a very real, very very edge case tho.","date":"2017-05-26T04:25:41.750Z","type":"message"}
{"nick":"f32","message":"ljharb: random access reading and writing to a file isn't niche","date":"2017-05-26T04:26:00.792Z","type":"message"}
{"nick":"f32","message":"and i suppose this sync vs async discussion can be boiled down to random access reading and writing to a file","date":"2017-05-26T04:26:36.600Z","type":"message"}
{"nick":"systemfault","message":"f32: I can't see any reason to use the sync functions with node unless you're writing some quick script","date":"2017-05-26T04:26:39.906Z","type":"message"}
{"nick":"systemfault","message":"If that's the case, have fun.","date":"2017-05-26T04:26:55.364Z","type":"message"}
{"nick":"f32","message":"systemfault: well, imagine a file, where you have a header / indexing table, and records written at the end","date":"2017-05-26T04:27:19.699Z","type":"message"}
{"nick":"f32","message":"systemfault: so, when a record gets written, you need to...","date":"2017-05-26T04:27:34.298Z","type":"message"}
{"nick":"f32","message":"1) update the indexing table","date":"2017-05-26T04:27:38.123Z","type":"message"}
{"nick":"f32","message":"2) append the record","date":"2017-05-26T04:27:41.945Z","type":"message"}
{"nick":"f32","message":"that is two write operations at different locations of the file.","date":"2017-05-26T04:27:53.629Z","type":"message"}
{"nick":"stoneburner","reason":"Read error: Connection reset by peer","date":"2017-05-26T04:28:15.269Z","type":"quit"}
{"nick":"f32","message":"systemfault: from a operation standpoint, the index update and append should be transactional and isolated","date":"2017-05-26T04:28:26.842Z","type":"message"}
{"nick":"f32","message":"systemfault: so, its easy to imagine in this scenario that if you were using async to preform this operation, you would need to add a async semaphore and queue / defer writes to the file while you waited for the previous write to complete","date":"2017-05-26T04:29:34.269Z","type":"message"}
{"nick":"ljharb","message":"i would say it's pretty niche, yes :-)","date":"2017-05-26T04:29:34.782Z","type":"message"}
{"nick":"ljharb","message":"not in \"all computers\", but in \"node's typical use cases\"","date":"2017-05-26T04:29:43.834Z","type":"message"}
{"nick":"f32","message":"ljharb: this isn't all that uncommon","date":"2017-05-26T04:30:09.526Z","type":"message"}
{"nick":"Cohedrin","reason":"Read error: Connection reset by peer","date":"2017-05-26T04:30:24.170Z","type":"quit"}
{"nick":"stoneburner","date":"2017-05-26T04:30:35.541Z","type":"join"}
{"nick":"systemfault","message":"f32: Perhaps you'd be better off with a lower level language for a case like that.","date":"2017-05-26T04:30:38.941Z","type":"message"}
{"nick":"f32","message":"systemfault: node seems capable","date":"2017-05-26T04:30:55.630Z","type":"message"}
{"nick":"systemfault","message":"f32: Even sync writes won't give you the guarantees you want.","date":"2017-05-26T04:31:05.812Z","type":"message"}
{"nick":"Cohedrin","date":"2017-05-26T04:31:12.013Z","type":"join"}
{"nick":"systemfault","message":"Since they're exactly the same thing.","date":"2017-05-26T04:31:21.975Z","type":"message"}
{"nick":"doodadjs","message":"f32: you could write a native module then require it in your script if you need a more low level I/O","date":"2017-05-26T04:31:27.192Z","type":"message"}
{"nick":"systemfault","message":"Except that one is run on a thread... the other not.","date":"2017-05-26T04:31:35.626Z","type":"message"}
{"nick":"wsieroci","date":"2017-05-26T04:31:36.159Z","type":"join"}
{"nick":"systemfault","message":"If you want atomicity, you want vectorized I/O","date":"2017-05-26T04:31:49.937Z","type":"message"}
{"nick":"systemfault","message":"And that's lower level than node.","date":"2017-05-26T04:31:55.923Z","type":"message"}
{"nick":"systemfault","message":"*vectored","date":"2017-05-26T04:32:03.616Z","type":"message"}
{"nick":"f32","message":"that would be ideal yes","date":"2017-05-26T04:32:04.781Z","type":"message"}
{"nick":"mjora7","reason":"Quit: My MacBook Air has gone to sleep. ZZZzzz…","date":"2017-05-26T04:32:24.613Z","type":"quit"}
{"nick":"karmahac_","reason":"Remote host closed the connection","date":"2017-05-26T04:32:30.365Z","type":"quit"}
{"nick":"f32","message":"still, node seems capable enough to achieve this, this is very very basic IO in any platform","date":"2017-05-26T04:32:35.225Z","type":"message"}
{"nick":"mjora7","date":"2017-05-26T04:32:53.245Z","type":"join"}
{"nick":"m31271n","date":"2017-05-26T04:33:09.230Z","type":"join"}
{"nick":"f32","message":"systemfault: and regardless, approaching this with async (while the preference) does indeed push back on the application quite a bit","date":"2017-05-26T04:33:44.798Z","type":"message"}
{"nick":"f32","message":"with a application level semaphore effectively playing the role of a blocking sync operation, but with more overhead","date":"2017-05-26T04:34:24.984Z","type":"message"}
{"nick":"hextileX","date":"2017-05-26T04:34:43.161Z","type":"join"}
{"nick":"f32","message":"you kinda have to stand back and ask \"is async writes really the best approach\"","date":"2017-05-26T04:34:53.103Z","type":"message"}
{"nick":"wsieroci","reason":"Remote host closed the connection","date":"2017-05-26T04:35:11.197Z","type":"quit"}
{"nick":"systemfault","message":"Depends on a specific thing... do you want something else to happen while your writes are being done.","date":"2017-05-26T04:35:20.856Z","type":"message"}
{"nick":"f32","message":"systemfault: not nessasarily","date":"2017-05-26T04:35:35.470Z","type":"message"}
{"nick":"systemfault","message":"If no, have fun with the sync functions.","date":"2017-05-26T04:35:36.153Z","type":"message"}
{"nick":"f32","message":"systemfault: i mean, one possible design is to run sync io in a seperate node process","date":"2017-05-26T04:35:57.003Z","type":"message"}
{"nick":"f32","message":"which would decouple it from your application processs","date":"2017-05-26T04:36:14.951Z","type":"message"}
{"nick":"systemfault","message":"If I wanted all the guarantees you seem to want, I'd just write a native C++ module and move on.","date":"2017-05-26T04:36:55.482Z","type":"message"}
{"nick":"systemfault","message":"It's fairly easy.","date":"2017-05-26T04:36:59.321Z","type":"message"}
{"nick":"f32","message":"systemfault: would write it in rust","date":"2017-05-26T04:37:14.088Z","type":"message"}
{"nick":"f32","message":"but yes, its an option sure","date":"2017-05-26T04:37:22.164Z","type":"message"}
{"nick":"Cohedrin","reason":"Read error: Connection reset by peer","date":"2017-05-26T04:38:30.190Z","type":"quit"}
{"nick":"EyePulp","reason":"Read error: Connection reset by peer","date":"2017-05-26T04:41:13.714Z","type":"quit"}
{"nick":"MachinShin","reason":"Ping timeout: 245 seconds","date":"2017-05-26T04:41:13.939Z","type":"quit"}
{"nick":"EyePulp","date":"2017-05-26T04:41:47.280Z","type":"join"}
{"nick":"stoneburner","reason":"Ping timeout: 268 seconds","date":"2017-05-26T04:42:25.510Z","type":"quit"}
{"nick":"Cohedrin","date":"2017-05-26T04:42:51.406Z","type":"join"}
{"nick":"john2","reason":"Ping timeout: 240 seconds","date":"2017-05-26T04:45:00.170Z","type":"quit"}
{"nick":"karmahacker","date":"2017-05-26T04:48:08.973Z","type":"join"}
{"nick":"stoneburner","date":"2017-05-26T04:48:44.604Z","type":"join"}
{"nick":"medikoo-bot","reason":"Remote host closed the connection","date":"2017-05-26T04:49:22.997Z","type":"quit"}
{"nick":"medikoo-bot","date":"2017-05-26T04:49:31.276Z","type":"join"}
{"nick":"Stumbler","reason":"Ping timeout: 260 seconds","date":"2017-05-26T04:51:03.282Z","type":"quit"}
{"nick":"the_ant","reason":"Ping timeout: 240 seconds","date":"2017-05-26T04:51:28.221Z","type":"quit"}
{"nick":"EyePulp","reason":"Read error: Connection reset by peer","date":"2017-05-26T04:53:47.699Z","type":"quit"}
{"nick":"EyePulp","date":"2017-05-26T04:54:14.660Z","type":"join"}
{"nick":"Cohedrin","reason":"Ping timeout: 260 seconds","date":"2017-05-26T04:55:43.300Z","type":"quit"}
{"nick":"k0nsl","reason":"Quit: “If we don't believe in freedom of expression for people we despise, we don't believe in it at all — Noam Chomsky”","date":"2017-05-26T04:56:54.060Z","type":"quit"}
{"nick":"k0nsl","date":"2017-05-26T04:57:14.986Z","type":"join"}
{"nick":"k0nsl","reason":"Changing host","date":"2017-05-26T04:57:15.175Z","type":"quit"}
{"nick":"k0nsl","date":"2017-05-26T04:57:15.175Z","type":"join"}
{"nick":"Cohedrin","date":"2017-05-26T04:59:11.288Z","type":"join"}
{"nick":"markasoftware","reason":"Ping timeout: 245 seconds","date":"2017-05-26T04:59:33.773Z","type":"quit"}
{"nick":"marthinal","date":"2017-05-26T05:00:08.270Z","type":"join"}
{"nick":"lpin","date":"2017-05-26T05:00:10.887Z","type":"join"}
{"nick":"led1","date":"2017-05-26T05:01:28.648Z","type":"join"}
{"nick":"foddo","reason":"Quit: Connection closed for inactivity","date":"2017-05-26T05:01:37.127Z","type":"quit"}
{"nick":"zero1one0","date":"2017-05-26T05:03:26.939Z","type":"quit"}
{"nick":"Cabanossi","reason":"Ping timeout: 272 seconds","date":"2017-05-26T05:03:44.805Z","type":"quit"}
{"nick":"EyePulp","reason":"Read error: Connection reset by peer","date":"2017-05-26T05:03:52.244Z","type":"quit"}
{"nick":"howdoi","date":"2017-05-26T05:03:55.431Z","type":"join"}
{"nick":"EyePulp","date":"2017-05-26T05:04:08.540Z","type":"join"}
{"nick":"Cabanossi","date":"2017-05-26T05:05:06.217Z","type":"join"}
{"nick":"EyePulp","reason":"Read error: Connection reset by peer","date":"2017-05-26T05:07:08.168Z","type":"quit"}
{"nick":"EyePulp","date":"2017-05-26T05:07:26.205Z","type":"join"}
{"nick":"zero1one0","date":"2017-05-26T05:07:47.255Z","type":"join"}
{"nick":"mjora7","reason":"Quit: My MacBook Air has gone to sleep. ZZZzzz…","date":"2017-05-26T05:08:04.493Z","type":"quit"}
{"nick":"led2","date":"2017-05-26T05:12:25.355Z","type":"join"}
{"nick":"led2","reason":"Client Quit","date":"2017-05-26T05:12:42.980Z","type":"quit"}
{"nick":"xall","date":"2017-05-26T05:16:49.060Z","type":"join"}
{"nick":"Cohedri__","date":"2017-05-26T05:17:00.430Z","type":"join"}
{"nick":"Cohedrin","reason":"Ping timeout: 246 seconds","date":"2017-05-26T05:17:04.279Z","type":"quit"}
{"nick":"gucci_meow","reason":"Remote host closed the connection","date":"2017-05-26T05:18:27.029Z","type":"quit"}
{"nick":"a_thakur","reason":"Read error: Connection reset by peer","date":"2017-05-26T05:21:25.454Z","type":"quit"}
{"nick":"a_thakur","date":"2017-05-26T05:21:55.091Z","type":"join"}
{"nick":"pstef__","date":"2017-05-26T05:23:14.656Z","type":"join"}
{"nick":"mjora7","date":"2017-05-26T05:24:04.832Z","type":"join"}
{"nick":"MachinShin","date":"2017-05-26T05:25:48.086Z","type":"join"}
{"nick":"MachinShin","reason":"Changing host","date":"2017-05-26T05:25:59.475Z","type":"quit"}
{"nick":"MachinShin","date":"2017-05-26T05:25:59.664Z","type":"join"}
{"nick":"joyee","date":"2017-05-26T05:26:08.430Z","type":"join"}
{"nick":"boneskull","date":"2017-05-26T05:27:25.431Z","type":"join"}
{"nick":"plauclair","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-05-26T05:28:04.429Z","type":"quit"}
{"nick":"Bock","date":"2017-05-26T05:29:07.066Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 240 seconds","date":"2017-05-26T05:30:05.240Z","type":"quit"}
{"nick":"EyePulp","reason":"Read error: Connection reset by peer","date":"2017-05-26T05:30:10.929Z","type":"quit"}
{"nick":"prometh","reason":"Quit: My Mac Mini has gone to sleep. ZZZzzz…","date":"2017-05-26T05:31:13.555Z","type":"quit"}
{"nick":"EyePulp","date":"2017-05-26T05:32:03.304Z","type":"join"}
{"nick":"gucci_meow","date":"2017-05-26T05:32:42.437Z","type":"join"}
{"nick":"foddo","date":"2017-05-26T05:33:17.981Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2017-05-26T05:34:34.021Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-05-26T05:35:10.232Z","type":"join"}
{"nick":"w0ng","reason":"Ping timeout: 276 seconds","date":"2017-05-26T05:35:56.412Z","type":"quit"}
{"nick":"the_ant","date":"2017-05-26T05:36:37.995Z","type":"join"}
{"nick":"snowkidind","reason":"Quit: astalaPIZZA Baby!","date":"2017-05-26T05:40:16.033Z","type":"quit"}
{"nick":"GanzAndere","reason":"Ping timeout: 255 seconds","date":"2017-05-26T05:41:46.701Z","type":"quit"}
{"nick":"rorro","date":"2017-05-26T05:42:33.802Z","type":"join"}
{"nick":"Cohedri__","reason":"Ping timeout: 258 seconds","date":"2017-05-26T05:48:20.027Z","type":"quit"}
{"nick":"lordjancso","date":"2017-05-26T05:48:33.651Z","type":"join"}
{"nick":"k0nsl","reason":"Quit: “If we don't believe in freedom of expression for people we despise, we don't believe in it at all — Noam Chomsky”","date":"2017-05-26T05:51:04.604Z","type":"quit"}
{"nick":"goodenough","reason":"Remote host closed the connection","date":"2017-05-26T05:51:20.523Z","type":"quit"}
{"nick":"goodenough","date":"2017-05-26T05:51:53.232Z","type":"join"}
{"nick":"wonko7","reason":"Ping timeout: 240 seconds","date":"2017-05-26T05:52:00.070Z","type":"quit"}
{"nick":"k0nsl","date":"2017-05-26T05:53:51.257Z","type":"join"}
{"nick":"k0nsl","reason":"Changing host","date":"2017-05-26T05:53:51.484Z","type":"quit"}
{"nick":"k0nsl","date":"2017-05-26T05:53:51.484Z","type":"join"}
{"nick":"GanzAndere","date":"2017-05-26T05:53:59.219Z","type":"join"}
{"nick":"Bishop_Bautista","date":"2017-05-26T05:54:25.349Z","type":"join"}
{"nick":"goodenough","reason":"Ping timeout: 246 seconds","date":"2017-05-26T05:55:55.212Z","type":"quit"}
{"nick":"MachinShin","reason":"Ping timeout: 240 seconds","date":"2017-05-26T05:56:00.078Z","type":"quit"}
{"nick":"chjj","reason":"Quit: WeeChat 1.7","date":"2017-05-26T05:56:12.015Z","type":"quit"}
{"nick":"chjj","date":"2017-05-26T05:59:22.501Z","type":"join"}
{"nick":"AmazeCPK","reason":"Quit: Leaving","date":"2017-05-26T06:00:42.702Z","type":"quit"}
{"nick":"Bishop_Bautista","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-05-26T06:00:58.864Z","type":"quit"}
{"nick":"fatalhalt","reason":"Ping timeout: 240 seconds","date":"2017-05-26T06:02:00.102Z","type":"quit"}
{"nick":"Cohedrin","date":"2017-05-26T06:02:10.459Z","type":"join"}
{"nick":"a_thakur","reason":"Remote host closed the connection","date":"2017-05-26T06:02:23.340Z","type":"quit"}
{"nick":"a_thakur","date":"2017-05-26T06:02:46.610Z","type":"join"}
{"nick":"w0ng","date":"2017-05-26T06:03:14.794Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 245 seconds","date":"2017-05-26T06:03:18.758Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-05-26T06:05:13.488Z","type":"join"}
{"nick":"fatalhalt","date":"2017-05-26T06:05:25.874Z","type":"join"}
{"nick":"m31271n","reason":"Remote host closed the connection","date":"2017-05-26T06:05:48.330Z","type":"quit"}
{"nick":"m31271n","date":"2017-05-26T06:05:58.489Z","type":"join"}
{"nick":"boneskull","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-05-26T06:06:11.036Z","type":"quit"}
{"nick":"m31271n1","date":"2017-05-26T06:10:28.263Z","type":"join"}
{"nick":"m31271n","reason":"Ping timeout: 268 seconds","date":"2017-05-26T06:10:36.486Z","type":"quit"}
{"nick":"m31271n1","new_nick":"m31271n","date":"2017-05-26T06:10:37.239Z","type":"nick"}
{"nick":"safe","reason":"Read error: Connection reset by peer","date":"2017-05-26T06:11:21.880Z","type":"quit"}
{"nick":"gamelaster","date":"2017-05-26T06:14:50.783Z","type":"join"}
{"nick":"Bishop_Bautista","date":"2017-05-26T06:16:23.658Z","type":"join"}
{"nick":"m31271n1","date":"2017-05-26T06:17:40.335Z","type":"join"}
{"nick":"m31271n","reason":"Ping timeout: 260 seconds","date":"2017-05-26T06:17:52.389Z","type":"quit"}
{"nick":"m31271n1","new_nick":"m31271n","date":"2017-05-26T06:17:52.701Z","type":"nick"}
{"nick":"Bishop_Bautista","reason":"Client Quit","date":"2017-05-26T06:19:21.172Z","type":"quit"}
{"nick":"Cabanossi","reason":"Ping timeout: 272 seconds","date":"2017-05-26T06:21:00.776Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-05-26T06:22:46.844Z","type":"join"}
{"nick":"DeltaHeavy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-05-26T06:23:00.139Z","type":"quit"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2017-05-26T06:24:04.364Z","type":"quit"}
{"nick":"chipping","reason":"Ping timeout: 260 seconds","date":"2017-05-26T06:29:04.198Z","type":"quit"}
{"nick":"chipping","date":"2017-05-26T06:30:28.761Z","type":"join"}
{"nick":"tristanp","date":"2017-05-26T06:31:42.076Z","type":"join"}
{"nick":"k0nsl","reason":"Quit: “If we don't believe in freedom of expression for people we despise, we don't believe in it at all — Noam Chomsky”","date":"2017-05-26T06:33:57.125Z","type":"quit"}
{"nick":"m31271n","reason":"Ping timeout: 240 seconds","date":"2017-05-26T06:34:05.220Z","type":"quit"}
{"nick":"varunest","date":"2017-05-26T06:35:52.822Z","type":"join"}
{"nick":"zsentinel","reason":"Ping timeout: 255 seconds","date":"2017-05-26T06:36:35.616Z","type":"quit"}
{"nick":"gothicsouth","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2017-05-26T06:37:15.522Z","type":"quit"}
{"nick":"k0nsl","date":"2017-05-26T06:37:59.225Z","type":"join"}
{"nick":"k0nsl","reason":"Changing host","date":"2017-05-26T06:37:59.429Z","type":"quit"}
{"nick":"k0nsl","date":"2017-05-26T06:37:59.617Z","type":"join"}
{"nick":"gucci_meow","reason":"Remote host closed the connection","date":"2017-05-26T06:38:40.419Z","type":"quit"}
{"nick":"zsentinel","date":"2017-05-26T06:38:56.982Z","type":"join"}
{"nick":"varunest","reason":"Remote host closed the connection","date":"2017-05-26T06:39:48.676Z","type":"quit"}
{"nick":"m31271n","date":"2017-05-26T06:40:21.181Z","type":"join"}
{"nick":"ahmedelgabri","date":"2017-05-26T06:42:21.032Z","type":"join"}
{"nick":"m31271n1","date":"2017-05-26T06:46:34.863Z","type":"join"}
{"nick":"hextileX","reason":"Ping timeout: 240 seconds","date":"2017-05-26T06:47:30.025Z","type":"quit"}
{"nick":"m31271n","reason":"Ping timeout: 260 seconds","date":"2017-05-26T06:47:44.221Z","type":"quit"}
{"nick":"m31271n1","new_nick":"m31271n","date":"2017-05-26T06:47:44.752Z","type":"nick"}
{"nick":"roomcayz","date":"2017-05-26T06:48:10.590Z","type":"join"}
{"nick":"m31271n","reason":"Remote host closed the connection","date":"2017-05-26T06:50:40.997Z","type":"quit"}
{"nick":"m31271n","date":"2017-05-26T06:50:58.177Z","type":"join"}
{"nick":"nodweber","date":"2017-05-26T06:51:30.554Z","type":"join"}
{"nick":"MachinShin","date":"2017-05-26T06:52:40.022Z","type":"join"}
{"nick":"MachinShin","reason":"Changing host","date":"2017-05-26T06:52:40.210Z","type":"quit"}
{"nick":"MachinShin","date":"2017-05-26T06:52:40.211Z","type":"join"}
{"nick":"ilyaigpetrov","date":"2017-05-26T06:54:58.825Z","type":"join"}
{"nick":"cotko","date":"2017-05-26T06:56:37.767Z","type":"join"}
{"nick":"cotko","reason":"Remote host closed the connection","date":"2017-05-26T06:57:44.109Z","type":"quit"}
{"nick":"cotko","date":"2017-05-26T06:58:08.636Z","type":"join"}
{"nick":"w0ng","reason":"Quit: leaving","date":"2017-05-26T06:59:17.175Z","type":"quit"}
{"nick":"w0ng","date":"2017-05-26T06:59:43.871Z","type":"join"}
{"nick":"rchavik","date":"2017-05-26T07:02:00.765Z","type":"join"}
{"nick":"texinwien","date":"2017-05-26T07:06:11.695Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2017-05-26T07:06:57.990Z","type":"quit"}
{"nick":"varunest","date":"2017-05-26T07:08:10.270Z","type":"join"}
{"nick":"Cabanossi","date":"2017-05-26T07:09:12.650Z","type":"join"}
{"nick":"the_ant","reason":"Ping timeout: 260 seconds","date":"2017-05-26T07:09:47.911Z","type":"quit"}
{"nick":"munch_","date":"2017-05-26T07:12:17.932Z","type":"join"}
{"nick":"ThePendulum","date":"2017-05-26T07:12:29.262Z","type":"join"}
{"nick":"hextileX","date":"2017-05-26T07:13:43.982Z","type":"join"}
{"nick":"MachinShin","reason":"Ping timeout: 240 seconds","date":"2017-05-26T07:16:59.976Z","type":"quit"}
{"nick":"MachinShin","date":"2017-05-26T07:18:19.193Z","type":"join"}
{"nick":"MachinShin","reason":"Changing host","date":"2017-05-26T07:18:19.381Z","type":"quit"}
{"nick":"MachinShin","date":"2017-05-26T07:18:19.381Z","type":"join"}
{"nick":"bradford_","date":"2017-05-26T07:19:04.245Z","type":"join"}
{"nick":"bradfordli123","reason":"Ping timeout: 260 seconds","date":"2017-05-26T07:19:28.173Z","type":"quit"}
{"nick":"joyee","date":"2017-05-26T07:21:57.034Z","type":"join"}
{"nick":"a_thakur","reason":"Remote host closed the connection","date":"2017-05-26T07:27:11.130Z","type":"quit"}
{"nick":"a_thakur","date":"2017-05-26T07:27:38.188Z","type":"join"}
{"nick":"a_thakur","reason":"Ping timeout: 240 seconds","date":"2017-05-26T07:31:52.226Z","type":"quit"}
{"nick":"_andyj_","reason":"Quit: Connection closed for inactivity","date":"2017-05-26T07:38:26.690Z","type":"quit"}
{"nick":"bradford_","reason":"Remote host closed the connection","date":"2017-05-26T07:41:36.610Z","type":"quit"}
{"nick":"star_prone","date":"2017-05-26T07:42:30.753Z","type":"join"}
{"nick":"prillian5","date":"2017-05-26T07:42:36.726Z","type":"join"}
{"nick":"Booster2ooo","date":"2017-05-26T07:43:32.939Z","type":"join"}
{"nick":"a_thakur","date":"2017-05-26T07:44:03.247Z","type":"join"}
{"nick":"rezetta","reason":"Remote host closed the connection","date":"2017-05-26T07:46:41.179Z","type":"quit"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2017-05-26T07:46:41.569Z","type":"quit"}
{"nick":"joyee_","date":"2017-05-26T07:46:42.077Z","type":"join"}
{"nick":"rendar","date":"2017-05-26T07:47:00.851Z","type":"join"}
{"nick":"rezetta","date":"2017-05-26T07:47:46.958Z","type":"join"}
{"nick":"chargen","date":"2017-05-26T07:50:24.726Z","type":"join"}
{"nick":"sz0","date":"2017-05-26T07:52:10.111Z","type":"join"}
{"nick":"foddo","reason":"Quit: Connection closed for inactivity","date":"2017-05-26T07:52:58.411Z","type":"quit"}
{"nick":"MachinShin","reason":"Ping timeout: 240 seconds","date":"2017-05-26T07:54:48.168Z","type":"quit"}
{"nick":"MachinShin","date":"2017-05-26T07:56:29.233Z","type":"join"}
{"nick":"m31271n","reason":"Ping timeout: 260 seconds","date":"2017-05-26T07:56:48.296Z","type":"quit"}
{"nick":"ahmed_elgabri","date":"2017-05-26T07:57:05.232Z","type":"join"}
{"nick":"m31271n","date":"2017-05-26T07:57:20.739Z","type":"join"}
{"nick":"a_thakur","reason":"Remote host closed the connection","date":"2017-05-26T07:58:59.894Z","type":"quit"}
{"nick":"f32","reason":"Read error: Connection reset by peer","date":"2017-05-26T07:59:14.566Z","type":"quit"}
{"nick":"a_thakur","date":"2017-05-26T07:59:26.352Z","type":"join"}
{"nick":"ahmedelgabri","reason":"Ping timeout: 258 seconds","date":"2017-05-26T07:59:49.026Z","type":"quit"}
