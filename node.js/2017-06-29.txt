{"nick":"jamie_p","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-29T12:01:59.182Z","type":"quit"}
{"nick":"nodweber","date":"2017-06-29T12:02:34.988Z","type":"join"}
{"nick":"cesconix","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-29T12:03:04.204Z","type":"quit"}
{"nick":"zotune_","date":"2017-06-29T12:03:05.897Z","type":"join"}
{"nick":"RLa","date":"2017-06-29T12:03:25.844Z","type":"join"}
{"nick":"czerasz","reason":"Ping timeout: 240 seconds","date":"2017-06-29T12:03:48.473Z","type":"quit"}
{"nick":"chargen","reason":"Quit: Leaving...","date":"2017-06-29T12:04:28.995Z","type":"quit"}
{"nick":"octetcloud","date":"2017-06-29T12:04:57.080Z","type":"join"}
{"nick":"jeromeico","date":"2017-06-29T12:06:07.345Z","type":"join"}
{"nick":"Rodya_","date":"2017-06-29T12:06:12.042Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-06-29T12:06:36.817Z","type":"quit"}
{"nick":"czerasz","date":"2017-06-29T12:07:14.597Z","type":"join"}
{"nick":"iamaregee2","reason":"Quit: Leaving.","date":"2017-06-29T12:07:41.644Z","type":"quit"}
{"nick":"iamaregee2","date":"2017-06-29T12:08:21.901Z","type":"join"}
{"nick":"nodweber","reason":"Remote host closed the connection","date":"2017-06-29T12:09:28.605Z","type":"quit"}
{"nick":"elfuego","date":"2017-06-29T12:09:36.555Z","type":"join"}
{"nick":"ufk","reason":"Quit: Leaving","date":"2017-06-29T12:10:13.900Z","type":"quit"}
{"nick":"mr-foobar","reason":"Ping timeout: 246 seconds","date":"2017-06-29T12:10:38.535Z","type":"quit"}
{"nick":"Rodya_","reason":"Ping timeout: 255 seconds","date":"2017-06-29T12:10:56.842Z","type":"quit"}
{"nick":"chargen","date":"2017-06-29T12:11:29.531Z","type":"join"}
{"nick":"elfuego","reason":"Client Quit","date":"2017-06-29T12:13:25.851Z","type":"quit"}
{"nick":"nodweber","date":"2017-06-29T12:13:53.659Z","type":"join"}
{"nick":"phaji__","date":"2017-06-29T12:14:32.520Z","type":"join"}
{"nick":"nobot","date":"2017-06-29T12:14:32.976Z","type":"join"}
{"nick":"elfuego","date":"2017-06-29T12:16:17.195Z","type":"join"}
{"nick":"ChanServ","topic":"Can't talk? Get registered on freenode ( https://git.io/vaTS2 ) | Latest: v8.1.3 (LTS: Boron v6.11.0, Argon v4.8.3) | Mission Statement: http://bit.ly/node-irc-mission-statement | Info: http://nodeirc.info | Logs: http://logs.nodejs.org/node.js/index | On codes of conduct: http://j.mp/1RFlyvr http://blog.izs.me/post/30036893703/policy-on-trolling","date":"2017-06-29T12:17:01.486Z","type":"topic"}
{"nick":"joepie91","message":"alextes: done","date":"2017-06-29T12:17:16.011Z","type":"message"}
{"nick":"wsieroci","date":"2017-06-29T12:17:20.313Z","type":"join"}
{"nick":"donguston","date":"2017-06-29T12:17:20.797Z","type":"join"}
{"nick":"elfuego","reason":"Client Quit","date":"2017-06-29T12:18:08.356Z","type":"quit"}
{"nick":"elfuego","date":"2017-06-29T12:18:41.645Z","type":"join"}
{"nick":"cesconix","date":"2017-06-29T12:19:04.877Z","type":"join"}
{"nick":"jeromeico","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2017-06-29T12:19:44.615Z","type":"quit"}
{"nick":"kakashiAL","message":"joepie91: you triggered my interest about admin and ssh. Do you know an article that talks about that what you mentioned?","date":"2017-06-29T12:21:09.042Z","type":"message"}
{"nick":"jeromeico","date":"2017-06-29T12:21:20.572Z","type":"join"}
{"nick":"phpnode","date":"2017-06-29T12:21:55.964Z","type":"join"}
{"nick":"YoY","reason":"Read error: No route to host","date":"2017-06-29T12:22:23.524Z","type":"quit"}
{"nick":"YoY","date":"2017-06-29T12:23:16.517Z","type":"join"}
{"nick":"iamaregee2","reason":"Ping timeout: 268 seconds","date":"2017-06-29T12:23:19.750Z","type":"quit"}
{"nick":"cannap","date":"2017-06-29T12:24:49.442Z","type":"join"}
{"nick":"alextes","message":"joepie91: (b ᵔ▽ᵔ)b","date":"2017-06-29T12:25:52.218Z","type":"message"}
{"nick":"alextes","message":"the eyes didn't draw  (╥_╥)","date":"2017-06-29T12:26:44.358Z","type":"message"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2017-06-29T12:27:02.581Z","type":"quit"}
{"nick":"jeffreylevesque","reason":"Ping timeout: 276 seconds","date":"2017-06-29T12:27:16.700Z","type":"quit"}
{"nick":"EyePulp","reason":"Remote host closed the connection","date":"2017-06-29T12:29:22.963Z","type":"quit"}
{"nick":"elfuego","reason":"Quit: elfuego","date":"2017-06-29T12:29:55.216Z","type":"quit"}
{"nick":"djmax","date":"2017-06-29T12:30:25.302Z","type":"join"}
{"nick":"cybeaer","reason":"Ping timeout: 276 seconds","date":"2017-06-29T12:31:49.672Z","type":"quit"}
{"nick":"cstls","date":"2017-06-29T12:31:55.554Z","type":"join"}
{"nick":"wsieroci","reason":"Ping timeout: 240 seconds","date":"2017-06-29T12:31:57.791Z","type":"quit"}
{"nick":"elfuego","date":"2017-06-29T12:32:23.334Z","type":"join"}
{"nick":"DeltaHeavy","date":"2017-06-29T12:32:39.395Z","type":"join"}
{"nick":"wsieroci","date":"2017-06-29T12:32:43.433Z","type":"join"}
{"nick":"blez","date":"2017-06-29T12:33:40.120Z","type":"join"}
{"nick":"elfuego","reason":"Client Quit","date":"2017-06-29T12:34:31.197Z","type":"quit"}
{"nick":"djmax","reason":"Ping timeout: 240 seconds","date":"2017-06-29T12:34:52.336Z","type":"quit"}
{"nick":"sterns","date":"2017-06-29T12:35:23.554Z","type":"join"}
{"nick":"buffal0","date":"2017-06-29T12:36:15.011Z","type":"join"}
{"nick":"elfuego","date":"2017-06-29T12:36:48.325Z","type":"join"}
{"nick":"harryrana","reason":"Quit: Page closed","date":"2017-06-29T12:37:19.297Z","type":"quit"}
{"nick":"rendar","reason":"Ping timeout: 240 seconds","date":"2017-06-29T12:37:27.809Z","type":"quit"}
{"nick":"elfuego","reason":"Client Quit","date":"2017-06-29T12:37:28.578Z","type":"quit"}
{"nick":"phutchins1","date":"2017-06-29T12:38:10.491Z","type":"join"}
{"nick":"mrkmg","date":"2017-06-29T12:38:33.137Z","type":"join"}
{"nick":"tymczenko","date":"2017-06-29T12:39:19.183Z","type":"join"}
{"nick":"lordjancso","reason":"Quit: Leaving","date":"2017-06-29T12:39:40.892Z","type":"quit"}
{"nick":"alraz","date":"2017-06-29T12:40:23.207Z","type":"join"}
{"nick":"lordjancso","date":"2017-06-29T12:42:21.782Z","type":"join"}
{"nick":"alraz_","reason":"Ping timeout: 240 seconds","date":"2017-06-29T12:43:10.420Z","type":"quit"}
{"nick":"alraz_","date":"2017-06-29T12:44:34.350Z","type":"join"}
{"nick":"zsoc","message":"zampa: when you are returning a chain of promises that use the transaction, you don't directly call trx.commit and/or trx.rollback","date":"2017-06-29T12:45:04.583Z","type":"message"}
{"nick":"zsoc","message":"the commit happens automatically when the entire chain returns with no rejects (and will rollback if there's an uncaught rejection)","date":"2017-06-29T12:45:27.122Z","type":"message"}
{"nick":"alraz","reason":"Ping timeout: 255 seconds","date":"2017-06-29T12:46:37.044Z","type":"quit"}
{"nick":"cstls","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-29T12:47:28.226Z","type":"quit"}
{"nick":"HoloIRCUser1","date":"2017-06-29T12:47:51.430Z","type":"join"}
{"nick":"shoky","date":"2017-06-29T12:48:32.963Z","type":"join"}
{"nick":"bf_","date":"2017-06-29T12:48:48.702Z","type":"join"}
{"nick":"shoky_","reason":"Ping timeout: 260 seconds","date":"2017-06-29T12:49:38.151Z","type":"quit"}
{"nick":"phunkren_","date":"2017-06-29T12:50:02.626Z","type":"join"}
{"nick":"shakes808","date":"2017-06-29T12:50:17.833Z","type":"join"}
{"nick":"prometh","message":"nodemon is a piece of crap","date":"2017-06-29T12:51:59.998Z","type":"message"}
{"nick":"prometh","message":"it only supports one instance (and they refuse to fix it) and crashes on osx","date":"2017-06-29T12:52:22.809Z","type":"message"}
{"nick":"phunkren_","date":"2017-06-29T12:52:25.318Z","type":"part"}
{"nick":"etienne","date":"2017-06-29T12:52:32.612Z","type":"join"}
{"nick":"GroenteLa","reason":"Ping timeout: 268 seconds","date":"2017-06-29T12:52:55.857Z","type":"quit"}
{"nick":"tniessen","message":"prometh: language, please","date":"2017-06-29T12:53:12.484Z","type":"message"}
{"nick":"prometh","message":"pft","date":"2017-06-29T12:53:19.017Z","type":"message"}
{"nick":"prometh","message":"\"crap\" is fine","date":"2017-06-29T12:53:32.585Z","type":"message"}
{"nick":"alraz","date":"2017-06-29T12:53:39.005Z","type":"join"}
{"nick":"alextes","message":"nodemon works fine on macOS for me","date":"2017-06-29T12:53:52.681Z","type":"message"}
{"nick":"nobot","date":"2017-06-29T12:54:02.633Z","type":"part"}
{"nick":"prometh","message":"alextes: it works fine here most times, but it fails on travis","date":"2017-06-29T12:54:09.337Z","type":"message"}
{"nick":"alextes","message":"not always easy to work with, granted, especially when using it from a script. But it's great in the simple straightforward use-case.","date":"2017-06-29T12:54:25.554Z","type":"message"}
{"nick":"GreenJello","message":"why would you run it on travis..?","date":"2017-06-29T12:54:28.253Z","type":"message"}
{"nick":"alextes","message":"^","date":"2017-06-29T12:54:32.717Z","type":"message"}
{"nick":"wrainbolt","reason":"Quit: leaving","date":"2017-06-29T12:54:38.052Z","type":"quit"}
{"nick":"prometh","message":"GreenJello: because i'm wrapping it in npmjs.com/npm-watch","date":"2017-06-29T12:54:44.550Z","type":"message"}
{"nick":"alextes","message":"that definitely doesn't qualify as the 'straightforward use-case' I'm afraid.","date":"2017-06-29T12:54:47.898Z","type":"message"}
{"nick":"prometh","message":"typically wehn you write a new library that uses a dependency, you need to test it","date":"2017-06-29T12:55:01.742Z","type":"message"}
{"nick":"prometh","message":"alextes: nodemon documents using it as a library","date":"2017-06-29T12:55:17.479Z","type":"message"}
{"nick":"SourcePhoenix","reason":"Remote host closed the connection","date":"2017-06-29T12:55:21.471Z","type":"quit"}
{"nick":"alraz_","reason":"Ping timeout: 240 seconds","date":"2017-06-29T12:55:35.559Z","type":"quit"}
{"nick":"prometh","message":"alextes: something they should stop doing immediately and say \"we suck\"","date":"2017-06-29T12:55:36.602Z","type":"message"}
{"nick":"prometh","message":"i've always had this mindset: do it right or do don't do it at all","date":"2017-06-29T12:55:53.031Z","type":"message"}
{"nick":"SourcePhoenix","date":"2017-06-29T12:55:57.349Z","type":"join"}
{"nick":"ondras","message":"so, when using sourceStream.pipe(destinationStream), how do I monitor the progress of data being written to the destinationStream?","date":"2017-06-29T12:56:15.199Z","type":"message"}
{"nick":"prometh","message":"i'll be researching npmjs.com/forever or something else now","date":"2017-06-29T12:56:20.949Z","type":"message"}
{"nick":"alextes","message":"prometh: yea I tried that, 'as a library' through a script. Didn't work out for me.","date":"2017-06-29T12:56:53.681Z","type":"message"}
{"nick":"einnjo","date":"2017-06-29T12:57:19.226Z","type":"join"}
{"nick":"alextes","message":"ondras: put another link in the stream that monitors and passes chunks along otherwise unaltered? :]","date":"2017-06-29T12:57:28.041Z","type":"message"}
{"nick":"ExoUNX","date":"2017-06-29T12:58:02.842Z","type":"join"}
{"nick":"darkJedi","reason":"Remote host closed the connection","date":"2017-06-29T12:58:05.199Z","type":"quit"}
{"nick":"mr-foobar","date":"2017-06-29T12:58:09.132Z","type":"join"}
{"nick":"ondras","message":"alextes: would that correspond to data being *written* or *read*?","date":"2017-06-29T12:58:25.746Z","type":"message"}
{"nick":"barhum2013","reason":"Quit: barhum2013","date":"2017-06-29T12:58:30.853Z","type":"quit"}
{"nick":"ondras","message":"alextes: I want to know how many bytes are successfully written, not read","date":"2017-06-29T12:58:39.086Z","type":"message"}
{"nick":"Rodya_","date":"2017-06-29T12:58:43.603Z","type":"join"}
{"nick":"ondras","message":"hm, I am not even sure what happens when sourceStream is way faster than destinationStream","date":"2017-06-29T12:58:55.649Z","type":"message"}
{"nick":"prometh","message":"is it possible to have two different versions of teh same dependency?","date":"2017-06-29T12:59:06.180Z","type":"message"}
{"nick":"GreenJello","message":"ondras, destinationStream would have to let you know when the data is written, by events","date":"2017-06-29T12:59:10.453Z","type":"message"}
{"nick":"prometh","message":"in package.json","date":"2017-06-29T12:59:10.995Z","type":"message"}
{"nick":"AlterDelve","reason":"Quit: Leaving","date":"2017-06-29T12:59:17.240Z","type":"quit"}
{"nick":"GreenJello","message":"prometh, no","date":"2017-06-29T12:59:23.224Z","type":"message"}
{"nick":"prometh","message":"darn","date":"2017-06-29T12:59:25.939Z","type":"message"}
{"nick":"ondras","message":"GreenJello: exactly. and I do not see such events; fs.createWriteStream in my case","date":"2017-06-29T12:59:33.204Z","type":"message"}
{"nick":"GreenJello","message":"prometh, you can make an intermediate package","date":"2017-06-29T12:59:37.125Z","type":"message"}
{"nick":"Hrtln","date":"2017-06-29T12:59:53.682Z","type":"join"}
{"nick":"alextes","message":"ondras: hm, interesting problem.","date":"2017-06-29T12:59:58.448Z","type":"message"}
{"nick":"SargoDarya","message":"Does anyone in here know if it's somehow possible to record audio in one browser and livestream it to tons of others using gstreamer or something?","date":"2017-06-29T13:00:05.014Z","type":"message"}
{"nick":"ondras","message":"alextes: I just basically copy file contents and want to know the progress","date":"2017-06-29T13:00:14.928Z","type":"message"}
{"nick":"SourcePhoenix","reason":"Ping timeout: 240 seconds","date":"2017-06-29T13:00:22.299Z","type":"quit"}
{"nick":"lemoinem","reason":"Ping timeout: 240 seconds","date":"2017-06-29T13:00:27.875Z","type":"quit"}
{"nick":"GreenJello","message":"prometh, package my-lodash-1; yarn add lodash@1; echo 'module.exports = require(\"lodash\")' > index.js","date":"2017-06-29T13:00:40.903Z","type":"message"}
{"nick":"alextes","message":"ondras: node has some pretty awesome backpressure handling I believe, not sure how well your source stream supports it ;] I know there's at least some writing on it out there.","date":"2017-06-29T13:00:55.241Z","type":"message"}
{"nick":"GreenJello","message":"(the 'package' isn't a command, if that was unclear)","date":"2017-06-29T13:00:55.488Z","type":"message"}
{"nick":"prometh","message":"GreenJello: what is it? i'm confused","date":"2017-06-29T13:01:20.268Z","type":"message"}
{"nick":"alextes","message":"Do ask GreenJello about the dest stream events. Never done it myself.","date":"2017-06-29T13:01:22.590Z","type":"message"}
{"nick":"alraz","reason":"Read error: Connection reset by peer","date":"2017-06-29T13:01:34.582Z","type":"quit"}
{"nick":"GreenJello","message":"prometh, my-loadsh-1 in package.json's \"name\"","date":"2017-06-29T13:01:35.043Z","type":"message"}
{"nick":"jeromeico","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2017-06-29T13:01:42.536Z","type":"quit"}
{"nick":"GreenJello","message":"prometh, then you publish that","date":"2017-06-29T13:01:47.861Z","type":"message"}
{"nick":"hextileX","date":"2017-06-29T13:01:53.662Z","type":"join"}
{"nick":"MachinShin","reason":"Ping timeout: 240 seconds","date":"2017-06-29T13:02:05.497Z","type":"quit"}
{"nick":"prometh","message":"oh","date":"2017-06-29T13:02:05.688Z","type":"message"}
{"nick":"DeltaHeavy","message":"Is this a good way to use Mocha for testing object instances? Or is there a better way? https://gist.github.com/mpalmr/d1b549ba57ff7f6fbb927497317041de","date":"2017-06-29T13:02:09.259Z","type":"message"}
{"nick":"HoloIRCUser1","reason":"Ping timeout: 276 seconds","date":"2017-06-29T13:02:22.654Z","type":"quit"}
{"nick":"lemoinem","date":"2017-06-29T13:02:27.291Z","type":"join"}
{"nick":"wrainbolt","date":"2017-06-29T13:02:29.707Z","type":"join"}
{"nick":"GreenJello","message":"DeltaHeavy, it's okay; some people discourage use of beforeEach, etc.","date":"2017-06-29T13:02:47.678Z","type":"message"}
{"nick":"st_elmo","date":"2017-06-29T13:02:55.113Z","type":"join"}
{"nick":"GreenJello","message":"DeltaHeavy, function init(){ return new Thing() }","date":"2017-06-29T13:03:00.214Z","type":"message"}
{"nick":"GreenJello","message":"and call init in each test","date":"2017-06-29T13:03:04.869Z","type":"message"}
{"nick":"DeltaHeavy","message":"More immutable approach I guess?","date":"2017-06-29T13:03:19.339Z","type":"message"}
{"nick":"GreenJello","message":"much simpler, and more flexible; slightly more code","date":"2017-06-29T13:03:22.330Z","type":"message"}
{"nick":"GreenJello","message":"that too","date":"2017-06-29T13:03:44.239Z","type":"message"}
{"nick":"DeltaHeavy","message":"Thanks! I'll do that. Looks nicer to me","date":"2017-06-29T13:04:01.496Z","type":"message"}
{"nick":"DeltaHeavy","message":"const init = () => new ViewModel(testProps);","date":"2017-06-29T13:04:06.078Z","type":"message"}
{"nick":"alraz","date":"2017-06-29T13:04:19.874Z","type":"join"}
{"nick":"tinyV0id","date":"2017-06-29T13:04:58.713Z","type":"join"}
{"nick":"ondras","message":"alextes: my source stream is fs.createReadStream","date":"2017-06-29T13:05:14.613Z","type":"message"}
{"nick":"sobersabre","date":"2017-06-29T13:05:42.652Z","type":"join"}
{"nick":"alextes","message":"ondras: I'm quite confident that means you get automagic backpressure handling (faster IN than OUT)","date":"2017-06-29T13:05:49.002Z","type":"message"}
{"nick":"alextes","message":"which I hear say is a very hard problem","date":"2017-06-29T13:06:01.827Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 276 seconds","date":"2017-06-29T13:06:55.708Z","type":"quit"}
{"nick":"tarwater","date":"2017-06-29T13:07:15.546Z","type":"join"}
{"nick":"null4bl3","date":"2017-06-29T13:07:18.408Z","type":"join"}
{"nick":"EyePulp","date":"2017-06-29T13:08:00.974Z","type":"join"}
{"nick":"Cabanossi","date":"2017-06-29T13:08:21.370Z","type":"join"}
{"nick":"tvw","date":"2017-06-29T13:08:42.303Z","type":"join"}
{"nick":"cstls","date":"2017-06-29T13:11:27.469Z","type":"join"}
{"nick":"alextes","message":"ondras: fs.createWriteStream returns a WriteStream, WriteStreams have a bytesWritten property.","date":"2017-06-29T13:11:39.493Z","type":"message"}
{"nick":"alextes","message":"I'm guessing the easiest way is polling that","date":"2017-06-29T13:11:51.528Z","type":"message"}
{"nick":"ondras","message":"alextes: yeah, but no relevant events","date":"2017-06-29T13:11:57.284Z","type":"message"}
{"nick":"alextes","message":"GreenJello: ^?","date":"2017-06-29T13:11:58.508Z","type":"message"}
{"nick":"ohmyfromage_","date":"2017-06-29T13:12:03.563Z","type":"join"}
{"nick":"GreenJello","message":"I have no idea","date":"2017-06-29T13:12:23.225Z","type":"message"}
{"nick":"alextes","message":"ondras: well no. I don't find that very sensible either. The stream would emit events every what, 1KB written? I don't really see why that would be built in.","date":"2017-06-29T13:13:24.870Z","type":"message"}
{"nick":"cybeaer","date":"2017-06-29T13:13:47.527Z","type":"join"}
{"nick":"alextes","message":"I could maybe see an event every chunk to make sense. Especially since the stream will be buffering I think.","date":"2017-06-29T13:13:51.040Z","type":"message"}
{"nick":"ondras","message":"ok","date":"2017-06-29T13:14:05.067Z","type":"message"}
{"nick":"ondras","message":"I will see whether sourceStream.on(\"data\") is sufficient and use destinationStream.bytesWritten if not","date":"2017-06-29T13:14:24.863Z","type":"message"}
{"nick":"ondras","message":"thanks for pointing me in that direction","date":"2017-06-29T13:14:33.202Z","type":"message"}
{"nick":"thunder-ltu","date":"2017-06-29T13:14:56.845Z","type":"join"}
{"nick":"DeltaHeavy_","date":"2017-06-29T13:15:12.526Z","type":"join"}
{"nick":"ohmyfromage","reason":"Ping timeout: 260 seconds","date":"2017-06-29T13:15:52.667Z","type":"quit"}
{"nick":"alextes","message":"hmhm, that is my best guess too ondras. I don't see any modules that facilitate this either I'm afraid.","date":"2017-06-29T13:16:06.845Z","type":"message"}
{"nick":"alraz_","date":"2017-06-29T13:16:24.793Z","type":"join"}
{"nick":"Rixon","message":"Hi, this console.log behaviour of implicitly using util.inspect is driving me nuts - most of the time it's great but it's inconsistent and I can't see what causes it to revert to just [object Object]","date":"2017-06-29T13:17:16.767Z","type":"message"}
{"nick":"alraz","reason":"Ping timeout: 276 seconds","date":"2017-06-29T13:17:19.674Z","type":"quit"}
{"nick":"zwarag","reason":"Remote host closed the connection","date":"2017-06-29T13:18:26.225Z","type":"quit"}
{"nick":"fourq_","date":"2017-06-29T13:18:37.970Z","type":"join"}
{"nick":"DeltaHeavy","reason":"Ping timeout: 260 seconds","date":"2017-06-29T13:18:48.142Z","type":"quit"}
{"nick":"blackfry888","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-29T13:19:16.753Z","type":"quit"}
{"nick":"GreenJello","message":"Rixon, I don't think it ever does that unless you've converted it to a string","date":"2017-06-29T13:19:34.043Z","type":"message"}
{"nick":"Hoffman","date":"2017-06-29T13:19:38.844Z","type":"join"}
{"nick":"GreenJello","message":"e.g. console.log('x' + y)","date":"2017-06-29T13:19:40.460Z","type":"message"}
{"nick":"GreenJello","message":"contrast with:","date":"2017-06-29T13:19:47.385Z","type":"message"}
{"nick":"GreenJello","message":"console.log('x', y)","date":"2017-06-29T13:19:53.347Z","type":"message"}
{"nick":"trevor","date":"2017-06-29T13:20:24.458Z","type":"join"}
{"nick":"Sharaal","date":"2017-06-29T13:20:38.480Z","type":"join"}
{"nick":"Avaray","reason":"Quit: Leaving","date":"2017-06-29T13:21:26.603Z","type":"quit"}
{"nick":"meisth0th","reason":"Quit: Leaving...","date":"2017-06-29T13:22:13.844Z","type":"quit"}
{"nick":"Sharaal1","reason":"Ping timeout: 255 seconds","date":"2017-06-29T13:23:04.024Z","type":"quit"}
{"nick":"stoneburner","date":"2017-06-29T13:24:44.603Z","type":"join"}
{"nick":"cstls","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-29T13:24:45.387Z","type":"quit"}
{"nick":"czerasz","reason":"Quit: Ex-Chat","date":"2017-06-29T13:25:41.098Z","type":"quit"}
{"nick":"Rixon","message":"GreenJello: I thought that myself, but I just tested let test_label = 'test_label'; let test_obj = JSON.parse('{\"test\":1}'); console.log(test_label + ': ', test_obj); // works fine","date":"2017-06-29T13:25:57.551Z","type":"message"}
{"nick":"Rixon","message":"but the code I am getting [object Object] from is exactly the same","date":"2017-06-29T13:26:08.668Z","type":"message"}
{"nick":"elfuego","date":"2017-06-29T13:26:26.474Z","type":"join"}
{"nick":"wsieroci","reason":"Read error: Connection reset by peer","date":"2017-06-29T13:26:46.049Z","type":"quit"}
{"nick":"AtumT","date":"2017-06-29T13:26:52.975Z","type":"join"}
{"nick":"DeltaHeavy__","date":"2017-06-29T13:27:16.683Z","type":"join"}
{"nick":"Rixon","message":"for now I'm just using JSON.stringify(obj, null, '  '); to pretty print it instead haha","date":"2017-06-29T13:28:00.418Z","type":"message"}
{"nick":"DeltaHeavy__","reason":"Read error: Connection reset by peer","date":"2017-06-29T13:28:11.690Z","type":"quit"}
{"nick":"cstls","date":"2017-06-29T13:28:12.510Z","type":"join"}
{"nick":"DeltaHeavy","date":"2017-06-29T13:28:50.435Z","type":"join"}
{"nick":"DeltaHeavy","reason":"Changing host","date":"2017-06-29T13:28:51.487Z","type":"quit"}
{"nick":"DeltaHeavy","date":"2017-06-29T13:28:51.659Z","type":"join"}
{"nick":"Rixon","message":"OH","date":"2017-06-29T13:28:57.673Z","type":"message"}
{"nick":"Rixon","message":"now I see what the problem is","date":"2017-06-29T13:29:03.039Z","type":"message"}
{"nick":"Rixon","message":"haha","date":"2017-06-29T13:29:03.647Z","type":"message"}
{"nick":"elfuego","reason":"Client Quit","date":"2017-06-29T13:29:18.509Z","type":"quit"}
{"nick":"Rixon","message":"this is being fet to arr.push before console.log, and the mixture of concat and commas there is screwing it up","date":"2017-06-29T13:29:35.654Z","type":"message"}
{"nick":"Rixon","message":"*fed","date":"2017-06-29T13:29:39.491Z","type":"message"}
{"nick":"esv","date":"2017-06-29T13:29:51.590Z","type":"join"}
{"nick":"DeltaHeavy_","reason":"Ping timeout: 240 seconds","date":"2017-06-29T13:30:05.494Z","type":"quit"}
{"nick":"Entanor","date":"2017-06-29T13:31:11.468Z","type":"join"}
{"nick":"djmax","date":"2017-06-29T13:32:06.267Z","type":"join"}
{"nick":"Rodya_","reason":"Remote host closed the connection","date":"2017-06-29T13:33:36.017Z","type":"quit"}
{"nick":"theparadoxer02_","date":"2017-06-29T13:34:05.886Z","type":"join"}
{"nick":"esv","message":"hey folks, I am following a tutorial that requires/installs nodejs and then what I assume to be a node, yet \"npm install\" hangs and fails with a timeout error on what I assume my company proxy is blocking but I have no idea what it is trying to access","date":"2017-06-29T13:35:19.278Z","type":"message"}
{"nick":"esv","message":"is there a way to make that thing run in a little more verbose mode?","date":"2017-06-29T13:35:35.384Z","type":"message"}
{"nick":"Snugglebash","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2017-06-29T13:36:14.755Z","type":"quit"}
{"nick":"iffraff1","date":"2017-06-29T13:36:16.262Z","type":"join"}
{"nick":"djmax","reason":"Ping timeout: 240 seconds","date":"2017-06-29T13:36:22.281Z","type":"quit"}
{"nick":"Snugglebash","date":"2017-06-29T13:36:24.312Z","type":"join"}
{"nick":"Fleebox","reason":"Quit: Fleebox","date":"2017-06-29T13:36:48.577Z","type":"quit"}
{"nick":"alraz_","reason":"Ping timeout: 246 seconds","date":"2017-06-29T13:36:58.555Z","type":"quit"}
{"nick":"Snugglebash","reason":"Client Quit","date":"2017-06-29T13:37:02.287Z","type":"quit"}
{"nick":"Snugglebash","date":"2017-06-29T13:37:11.312Z","type":"join"}
{"nick":"evilqubit","date":"2017-06-29T13:37:19.297Z","type":"join"}
{"nick":"jeffreylevesque","date":"2017-06-29T13:37:48.456Z","type":"join"}
{"nick":"Snugglebash","reason":"Client Quit","date":"2017-06-29T13:37:49.686Z","type":"quit"}
{"nick":"Snugglebash","date":"2017-06-29T13:37:58.300Z","type":"join"}
{"nick":"Snugglebash","reason":"Client Quit","date":"2017-06-29T13:38:36.376Z","type":"quit"}
{"nick":"Snugglebash","date":"2017-06-29T13:38:46.947Z","type":"join"}
{"nick":"Snugglebash","reason":"Client Quit","date":"2017-06-29T13:39:24.659Z","type":"quit"}
{"nick":"Snugglebash","date":"2017-06-29T13:39:33.920Z","type":"join"}
{"nick":"ddelrio1986","date":"2017-06-29T13:39:47.275Z","type":"join"}
{"nick":"Snugglebash","reason":"Client Quit","date":"2017-06-29T13:40:12.391Z","type":"quit"}
{"nick":"Snugglebash","date":"2017-06-29T13:40:21.973Z","type":"join"}
{"nick":"cstls","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-29T13:40:31.740Z","type":"quit"}
{"nick":"tymczenko","reason":"Quit: Leaving","date":"2017-06-29T13:40:33.440Z","type":"quit"}
{"nick":"Snugglebash","reason":"Client Quit","date":"2017-06-29T13:41:00.387Z","type":"quit"}
{"nick":"stoneburner","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2017-06-29T13:41:02.120Z","type":"quit"}
{"nick":"Snugglebash","date":"2017-06-29T13:41:10.475Z","type":"join"}
{"nick":"djmax","date":"2017-06-29T13:41:25.887Z","type":"join"}
{"nick":"Snugglebash","reason":"Client Quit","date":"2017-06-29T13:41:48.424Z","type":"quit"}
{"nick":"Snugglebash","date":"2017-06-29T13:41:58.436Z","type":"join"}
{"nick":"Snugglebash","reason":"Client Quit","date":"2017-06-29T13:42:36.449Z","type":"quit"}
{"nick":"joepie91","message":"esv: try --loglevel=silly","date":"2017-06-29T13:43:27.615Z","type":"message"}
{"nick":"joepie91","message":"(if I remember the flag correctly)","date":"2017-06-29T13:43:30.903Z","type":"message"}
{"nick":"zsoc","message":"n> const zero = 0; zero || 1","date":"2017-06-29T13:43:50.096Z","type":"message"}
{"nick":"babelboot","message":"zsoc: (okay) 1","date":"2017-06-29T13:43:52.555Z","type":"message"}
{"nick":"joepie91","message":"esv: specifically, use that flag for your `npm` command :)","date":"2017-06-29T13:43:56.540Z","type":"message"}
{"nick":"zsoc","message":"n> const empty = ''; empty || 1","date":"2017-06-29T13:44:15.459Z","type":"message"}
{"nick":"babelboot","message":"zsoc: (okay) 1","date":"2017-06-29T13:44:17.445Z","type":"message"}
{"nick":"zsoc","message":"eesh","date":"2017-06-29T13:44:20.246Z","type":"message"}
{"nick":"joepie91","message":"zsoc: this surprises you? :P","date":"2017-06-29T13:44:37.523Z","type":"message"}
{"nick":"cstls","date":"2017-06-29T13:44:49.007Z","type":"join"}
{"nick":"Mia","date":"2017-06-29T13:45:03.051Z","type":"join"}
{"nick":"Mia","reason":"Changing host","date":"2017-06-29T13:45:03.223Z","type":"quit"}
{"nick":"Mia","date":"2017-06-29T13:45:03.223Z","type":"join"}
{"nick":"f32","date":"2017-06-29T13:45:07.475Z","type":"join"}
{"nick":"mezod","date":"2017-06-29T13:45:15.846Z","type":"join"}
{"nick":"zsoc","message":"i dunno, i guess i should have know it was straight falsy","date":"2017-06-29T13:46:05.436Z","type":"message"}
{"nick":"einnjo","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-29T13:46:14.497Z","type":"quit"}
{"nick":"zsoc","message":"i've never attempted to use it that way because... it's ugly lol","date":"2017-06-29T13:46:22.618Z","type":"message"}
{"nick":"zsoc","message":"i think we need an actual null coalescing operator","date":"2017-06-29T13:46:33.549Z","type":"message"}
{"nick":"joepie91","message":"zsoc: well, it's why I constantly tell people to stop using || :P","date":"2017-06-29T13:46:36.308Z","type":"message"}
{"nick":"zsoc","message":"?| sounds good :p","date":"2017-06-29T13:46:36.480Z","type":"message"}
{"nick":"VirtuallyCreativ","date":"2017-06-29T13:46:48.135Z","type":"join"}
{"nick":"joepie91","message":"obligatory https://www.npmjs.com/package/default-value","date":"2017-06-29T13:46:56.724Z","type":"message"}
{"nick":"zsoc","message":"hmmm or maybe |?","date":"2017-06-29T13:47:04.966Z","type":"message"}
{"nick":"zsoc","message":"there's probably some reason ?? is bad","date":"2017-06-29T13:47:12.596Z","type":"message"}
{"nick":"elfuego","date":"2017-06-29T13:47:29.139Z","type":"join"}
{"nick":"Rixon","message":"I like :? in php because it is like collapsing a ternary","date":"2017-06-29T13:47:40.692Z","type":"message"}
{"nick":"Rixon","message":"sorry ?: I meant","date":"2017-06-29T13:47:47.052Z","type":"message"}
{"nick":"joepie91","message":"ternaries and null coalescing are not the same thing though","date":"2017-06-29T13:48:07.439Z","type":"message"}
{"nick":"zsoc","message":"yeah, there's also no ?: but this is different :> , more just a convenience thing","date":"2017-06-29T13:48:34.044Z","type":"message"}
{"nick":"joepie91","message":"zsoc: also, https://github.com/claudepache/es-optional-chaining","date":"2017-06-29T13:48:37.165Z","type":"message"}
{"nick":"zsoc","message":"joepie91: yeah that's the .? one","date":"2017-06-29T13:48:47.439Z","type":"message"}
{"nick":"Rixon","message":"I know, but the similarity between (value) ? value : alternative; and (value) ?: alternative; makes sense, right?","date":"2017-06-29T13:48:50.779Z","type":"message"}
{"nick":"zsoc","message":"or ?. they couldn't decide :p","date":"2017-06-29T13:48:53.644Z","type":"message"}
{"nick":"joepie91","message":"Rixon: no, the point is that the ternary example you're giving there *doesn't* do the same thing as a null coalescing operator would","date":"2017-06-29T13:49:11.278Z","type":"message"}
{"nick":"joepie91","message":"Rixon: your ternary example checks for truthiness, not nullness","date":"2017-06-29T13:49:21.831Z","type":"message"}
{"nick":"zsoc","message":"Rixon: foo = value || alternative tho?","date":"2017-06-29T13:49:32.162Z","type":"message"}
{"nick":"fourq_","new_nick":"fourq","date":"2017-06-29T13:49:44.694Z","type":"nick"}
{"nick":"elfuego","reason":"Client Quit","date":"2017-06-29T13:49:46.691Z","type":"quit"}
{"nick":"joepie91","message":"n> 0 ? 0 : 1","date":"2017-06-29T13:49:50.716Z","type":"message"}
{"nick":"Rodya_","date":"2017-06-29T13:49:52.719Z","type":"join"}
{"nick":"babelboot","message":"joepie91: (okay) 1","date":"2017-06-29T13:49:53.923Z","type":"message"}
{"nick":"joepie91","message":"Rixon: ^","date":"2017-06-29T13:49:54.523Z","type":"message"}
{"nick":"Rixon","message":"zsoc: yes that's what I was getting at - joepie91: yes, what zsoc said","date":"2017-06-29T13:49:55.478Z","type":"message"}
{"nick":"Rixon","message":"lol","date":"2017-06-29T13:49:56.078Z","type":"message"}
{"nick":"fourq","action":"waves at joepie91","date":"2017-06-29T13:50:08.048Z","type":"action"}
{"nick":"elfuego","date":"2017-06-29T13:50:18.475Z","type":"join"}
{"nick":"joepie91","message":"Rixon: I really don't see the value in a ?: operator with that semantic meaning though","date":"2017-06-29T13:50:20.442Z","type":"message"}
{"nick":"joepie91","message":"it'd just add more stuff to learn while not really simplifying anything common","date":"2017-06-29T13:50:28.970Z","type":"message"}
{"nick":"AvianFlu","date":"2017-06-29T13:50:29.660Z","type":"join"}
{"nick":"joepie91","message":"and it would further legitimize doing the wrong thing","date":"2017-06-29T13:50:37.747Z","type":"message"}
{"nick":"Rixon","message":"it just looks less ugly than || and makes a bit more sense IMO","date":"2017-06-29T13:50:38.617Z","type":"message"}
{"nick":"joepie91","message":"fourq: ohai!","date":"2017-06-29T13:50:40.426Z","type":"message"}
{"nick":"joepie91","message":"Rixon: more sense how?","date":"2017-06-29T13:50:43.971Z","type":"message"}
{"nick":"joepie91","message":"it'd do literally the same thing","date":"2017-06-29T13:50:50.461Z","type":"message"}
{"nick":"thunder-ltu","reason":"Ping timeout: 255 seconds","date":"2017-06-29T13:50:50.845Z","type":"quit"}
{"nick":"tniessen","reason":"\"Leaving\"","date":"2017-06-29T13:51:00.365Z","type":"part"}
{"nick":"elfuego","reason":"Client Quit","date":"2017-06-29T13:51:02.141Z","type":"quit"}
{"nick":"joepie91","message":"(which is the wrong thing almost every time)","date":"2017-06-29T13:51:06.097Z","type":"message"}
{"nick":"Rixon","message":"yes but it implicitly looks like what a ternary does where you would repeat value between ? and :","date":"2017-06-29T13:51:18.865Z","type":"message"}
{"nick":"Rixon","message":"i guess it's just a syntactical preference","date":"2017-06-29T13:51:37.061Z","type":"message"}
{"nick":"karmahacker","reason":"Remote host closed the connection","date":"2017-06-29T13:51:38.356Z","type":"quit"}
{"nick":"joepie91","message":"Rixon: okay, and what is the value in that?","date":"2017-06-29T13:51:39.226Z","type":"message"}
{"nick":"joepie91","message":"beyond what we already have","date":"2017-06-29T13:51:43.052Z","type":"message"}
{"nick":"joepie91","message":"fourq: wait was that you who sent me that email","date":"2017-06-29T13:51:54.024Z","type":"message"}
{"nick":"Rixon","message":"nothing, this really _is_ a matter of personal preference in syntax","date":"2017-06-29T13:51:59.260Z","type":"message"}
{"nick":"Rixon","message":"lol","date":"2017-06-29T13:52:00.165Z","type":"message"}
{"nick":"Rixon","message":"I was just talking about 'consistency' in php","date":"2017-06-29T13:52:20.887Z","type":"message"}
{"nick":"joepie91","message":"Rixon: right, seems like a purely aesthetic preference though :p","date":"2017-06-29T13:52:21.129Z","type":"message"}
{"nick":"Rixon","message":"if you can call it that","date":"2017-06-29T13:52:23.385Z","type":"message"}
{"nick":"Rixon","message":"yes, it is haha :P","date":"2017-06-29T13:52:30.016Z","type":"message"}
{"nick":"joepie91","message":"ah, I thought you were talking about having this in JS","date":"2017-06-29T13:52:30.246Z","type":"message"}
{"nick":"rendar","date":"2017-06-29T13:52:38.026Z","type":"join"}
{"nick":"rendar","reason":"Changing host","date":"2017-06-29T13:52:38.198Z","type":"quit"}
{"nick":"rendar","date":"2017-06-29T13:52:38.198Z","type":"join"}
{"nick":"joepie91","message":"okay, then what you're saying makes more sense :)","date":"2017-06-29T13:52:38.370Z","type":"message"}
{"nick":"evilqubit","reason":"Ping timeout: 240 seconds","date":"2017-06-29T13:52:52.252Z","type":"quit"}
{"nick":"ujjain","reason":"Remote host closed the connection","date":"2017-06-29T13:53:03.613Z","type":"quit"}
{"nick":"ujjain","date":"2017-06-29T13:53:17.510Z","type":"join"}
{"nick":"ujjain","reason":"Changing host","date":"2017-06-29T13:53:17.681Z","type":"quit"}
{"nick":"ujjain","date":"2017-06-29T13:53:17.681Z","type":"join"}
{"nick":"Rixon","message":"using || in php doesn't return value","date":"2017-06-29T13:53:34.452Z","type":"message"}
{"nick":"elfuego","date":"2017-06-29T13:53:37.882Z","type":"join"}
{"nick":"fumblehool","reason":"Quit: Connection closed for inactivity","date":"2017-06-29T13:54:06.995Z","type":"quit"}
{"nick":"joepie91","message":"yeah, not sure how I feel about that","date":"2017-06-29T13:54:24.801Z","type":"message"}
{"nick":"evilqubit","date":"2017-06-29T13:54:40.452Z","type":"join"}
{"nick":"basiclaser","reason":"Quit: Connection closed for inactivity","date":"2017-06-29T13:54:53.588Z","type":"quit"}
{"nick":"gunnaro","reason":"Ping timeout: 240 seconds","date":"2017-06-29T13:54:57.904Z","type":"quit"}
{"nick":"joepie91","message":"fourq: nah nevermind wasn't you","date":"2017-06-29T13:55:11.982Z","type":"message"}
{"nick":"Rixon","message":"I like using value || alternative in JS","date":"2017-06-29T13:55:13.900Z","type":"message"}
{"nick":"joepie91","message":"fourq: somebody sent me a somewhat cryptic email and I'm pretty sure I remember the name from #Node.js, but I have no idea who it is :P","date":"2017-06-29T13:55:26.825Z","type":"message"}
{"nick":"joepie91","message":"Rixon: it's semantically wrong, though.","date":"2017-06-29T13:55:44.973Z","type":"message"}
{"nick":"joepie91","message":"(in most cases)","date":"2017-06-29T13:55:51.366Z","type":"message"}
{"nick":"Rixon","message":"not if you read it aloud ;P","date":"2017-06-29T13:56:00.328Z","type":"message"}
{"nick":"joepie91","message":"obviously if your actual intention is \"pick the first truthy value\" then it's semantically right, but that is almost never the case","date":"2017-06-29T13:56:09.507Z","type":"message"}
{"nick":"joepie91","message":"the intention is almost always \"pick the first defined/set value\"","date":"2017-06-29T13:56:18.240Z","type":"message"}
{"nick":"esv","message":"joepie91: thanks!","date":"2017-06-29T13:56:19.554Z","type":"message"}
{"nick":"joepie91","message":"in which case || is just wrong","date":"2017-06-29T13:56:26.008Z","type":"message"}
{"nick":"joepie91","message":"Rixon: 'semantically wrong' refers to the semantic meaning of the || operator, and whether you \"read it aloud\" doesn't change whether it's semantically wrong","date":"2017-06-29T13:56:49.162Z","type":"message"}
{"nick":"alraz","date":"2017-06-29T13:56:53.148Z","type":"join"}
{"nick":"Rixon","message":"ah well yes now I see why you were talking about the need for a null coalescing op","date":"2017-06-29T13:57:11.520Z","type":"message"}
{"nick":"joepie91","message":"Rixon: if your goal is to do A, and instead you do B that kinda sorta works like A but not always, then it's semantically wrong (which is wrong from a technical perspective, ie. you shouldn't do it)","date":"2017-06-29T13:57:14.299Z","type":"message"}
{"nick":"alraz_","date":"2017-06-29T13:57:41.958Z","type":"join"}
{"nick":"joepie91","message":"like, I am aware that || is very very popular in JS land for existence checking but it's still wrong and a common source of bugs :P","date":"2017-06-29T13:57:50.347Z","type":"message"}
{"nick":"alraz","reason":"Read error: Connection reset by peer","date":"2017-06-29T13:57:50.519Z","type":"quit"}
{"nick":"joepie91","message":"often subtle bugs that fail quietly and are not detected until much later, when they've already corrupted data or caused issues for users","date":"2017-06-29T13:58:14.572Z","type":"message"}
{"nick":"ohmyfromage__","date":"2017-06-29T13:58:17.103Z","type":"join"}
{"nick":"prometh","message":"js is the source of much laziness","date":"2017-06-29T13:58:33.700Z","type":"message"}
{"nick":"phutchins1","reason":"Quit: WeeChat 1.8","date":"2017-06-29T13:58:34.172Z","type":"quit"}
{"nick":"joepie91","message":"tl;dr do not use || for existence checking, this is what https://www.npmjs.com/package/default-value is for and what hopefully a null operator will eventually be added for","date":"2017-06-29T13:58:35.759Z","type":"message"}
{"nick":"prometh","message":"\"i hate typing double quotes\"","date":"2017-06-29T13:58:39.083Z","type":"message"}
{"nick":"prometh","message":"\"i have to press shift, omg\" ... yet they do it for {}","date":"2017-06-29T13:58:51.960Z","type":"message"}
{"nick":"joshontheweb","date":"2017-06-29T13:58:55.525Z","type":"join"}
{"nick":"prometh","message":"and ()","date":"2017-06-29T13:58:55.954Z","type":"message"}
{"nick":"Sharaal","message":"\"a = b || c\" instead of \"if (b) { a = b } else { a = c }\", there is nothing wrong","date":"2017-06-29T13:59:00.711Z","type":"message"}
{"nick":"prometh","message":"b****es","date":"2017-06-29T13:59:02.716Z","type":"message"}
{"nick":"phutchins","date":"2017-06-29T13:59:04.882Z","type":"join"}
{"nick":"joepie91","message":"Sharaal: sure, but `if (b)` itself is wrong in most cases","date":"2017-06-29T13:59:17.627Z","type":"message"}
{"nick":"joepie91","message":"that's kind of my point :)","date":"2017-06-29T13:59:28.750Z","type":"message"}
{"nick":"doomhz","reason":"Remote host closed the connection","date":"2017-06-29T13:59:39.778Z","type":"quit"}
{"nick":"Rixon","message":"haha I was just paraphrasing you and you beat me to it","date":"2017-06-29T13:59:40.569Z","type":"message"}
{"nick":"Sharaal","message":"don't see what's wrong with it","date":"2017-06-29T13:59:42.653Z","type":"message"}
{"nick":"joepie91","message":"if (b) checks whether b is truthy, not whether it *exists*","date":"2017-06-29T13:59:43.886Z","type":"message"}
{"nick":"joepie91","message":"and often what you're trying to check is existence","date":"2017-06-29T13:59:52.080Z","type":"message"}
{"nick":"joepie91","message":"not truthiness","date":"2017-06-29T13:59:53.572Z","type":"message"}
{"nick":"prometh","message":"truthy is for boolean only","date":"2017-06-29T13:59:57.548Z","type":"message"}
{"nick":"joepie91","message":"therefore, if(b) is wrong under those circumstances","date":"2017-06-29T13:59:59.948Z","type":"message"}
{"nick":"joepie91","message":"exactly","date":"2017-06-29T14:00:01.432Z","type":"message"}
{"nick":"phutchins","reason":"Client Quit","date":"2017-06-29T14:00:05.787Z","type":"quit"}
{"nick":"GreenJello","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-29T14:00:23.999Z","type":"quit"}
{"nick":"Soopaman","date":"2017-06-29T14:00:24.604Z","type":"join"}
{"nick":"doomhz","date":"2017-06-29T14:00:32.658Z","type":"join"}
{"nick":"joepie91","message":"n> a = 0; b = 1; a || b","date":"2017-06-29T14:00:33.324Z","type":"message"}
{"nick":"babelboot","message":"joepie91: (okay) 1","date":"2017-06-29T14:00:35.908Z","type":"message"}
{"nick":"Rixon","message":"function is_set(variable){ if (variable === null || variable === undefined) return false; return true }","date":"2017-06-29T14:00:37.016Z","type":"message"}
{"nick":"joepie91","message":"n> a = 0; b = 1; a ? a : b","date":"2017-06-29T14:00:37.606Z","type":"message"}
{"nick":"babelboot","message":"joepie91: (okay) 1","date":"2017-06-29T14:00:40.885Z","type":"message"}
{"nick":"prometh","message":"if you're checking for existence, use: `if (a != null)`","date":"2017-06-29T14:00:42.977Z","type":"message"}
{"nick":"Rixon","message":"?","date":"2017-06-29T14:00:44.368Z","type":"message"}
{"nick":"plexigras","message":"is there a way i can run a localy installed npm bin in an easy way?","date":"2017-06-29T14:00:48.125Z","type":"message"}
{"nick":"Rixon","message":"oh loose null works for undefined?","date":"2017-06-29T14:00:52.626Z","type":"message"}
{"nick":"GreenJello","date":"2017-06-29T14:00:53.592Z","type":"join"}
{"nick":"GreenJello","reason":"Client Quit","date":"2017-06-29T14:00:56.920Z","type":"quit"}
{"nick":"joepie91","message":"n> a = 0; b = 1; if(a) { console.log(a); } else { console.log(b); }","date":"2017-06-29T14:00:57.540Z","type":"message"}
{"nick":"Rixon","message":"niiice","date":"2017-06-29T14:00:58.564Z","type":"message"}
{"nick":"babelboot","message":"joepie91: (okay) 1 undefined","date":"2017-06-29T14:01:00.555Z","type":"message"}
{"nick":"prometh","message":"Rixon: yes, with loose equals","date":"2017-06-29T14:01:01.256Z","type":"message"}
{"nick":"joepie91","message":"Sharaal: see above; all of the above have the exact same issue","date":"2017-06-29T14:01:08.578Z","type":"message"}
{"nick":"Rixon","message":"cool I just won an internet","date":"2017-06-29T14:01:12.088Z","type":"message"}
{"nick":"Rixon","message":"thx","date":"2017-06-29T14:01:14.160Z","type":"message"}
{"nick":"prometh","message":"Rixon: this is also the /only/ situation to use !=","date":"2017-06-29T14:01:25.964Z","type":"message"}
{"nick":"Sharaal","message":"they doesn't have an issue, they works","date":"2017-06-29T14:01:26.887Z","type":"message"}
{"nick":"joepie91","message":"...","date":"2017-06-29T14:01:30.575Z","type":"message"}
{"nick":"prometh","message":"Rixon: and/or ==","date":"2017-06-29T14:01:31.117Z","type":"message"}
{"nick":"Rixon","message":"haha","date":"2017-06-29T14:01:33.773Z","type":"message"}
{"nick":"ohmyfromage_","reason":"Ping timeout: 240 seconds","date":"2017-06-29T14:01:35.495Z","type":"quit"}
{"nick":"Rixon","message":"fair","date":"2017-06-29T14:01:36.018Z","type":"message"}
{"nick":"Sharaal","message":"but maybe they don't do the thing they should do","date":"2017-06-29T14:01:39.306Z","type":"message"}
{"nick":"DeltaHeavy","message":"I don't agree with prometh here","date":"2017-06-29T14:01:41.325Z","type":"message"}
{"nick":"Rixon","message":"how about... !!~some_string.indexOf('substring')","date":"2017-06-29T14:02:11.405Z","type":"message"}
{"nick":"Sharaal","message":"if you want to check if a exists and is a number or not, check this","date":"2017-06-29T14:02:12.835Z","type":"message"}
{"nick":"jkridner","date":"2017-06-29T14:02:14.499Z","type":"join"}
{"nick":"joepie91","message":"Sharaal: *if* your goal is to check whether a given value is set or not, *then* the above three examples are wrong because they don't check what you're trying to check (existence), but rather they check something else (truthiness) that kinda sorta has the same result in many cases but not all","date":"2017-06-29T14:02:19.209Z","type":"message"}
{"nick":"DeltaHeavy","message":"I check for a truthy value if I want to check if \"something exists\". Depending on the context it might mean checking: typeof foo !== 'undefined'","date":"2017-06-29T14:02:23.699Z","type":"message"}
{"nick":"Rapture","date":"2017-06-29T14:02:29.482Z","type":"join"}
{"nick":"prometh","message":"though, i did use == in one other situation that i'm unsure of:  cfg.a='1'; if (cfg.a == 1)","date":"2017-06-29T14:02:30.926Z","type":"message"}
{"nick":"roomcayz","reason":"Quit: roomcayz","date":"2017-06-29T14:02:42.470Z","type":"quit"}
{"nick":"DeltaHeavy","message":"It's rare I care about an empty string and want to treat it as a true value","date":"2017-06-29T14:02:42.641Z","type":"message"}
{"nick":"alextes","message":"Yea I don't like `!=` either.","date":"2017-06-29T14:02:42.641Z","type":"message"}
{"nick":"joepie91","message":"Sharaal: *if* your goal is actually to check truthiness, *then* the above three are correct -- but that is a rare case.","date":"2017-06-29T14:02:43.697Z","type":"message"}
{"nick":"prometh","message":"DeltaHeavy: typeof null === \"object\"","date":"2017-06-29T14:03:00.430Z","type":"message"}
{"nick":"Sharaal","message":"If I wanna check a is a true or falsy value a || or if (a) it not wrong","date":"2017-06-29T14:03:04.362Z","type":"message"}
{"nick":"DeltaHeavy","message":"prometh: I know, not sure how that applies though.","date":"2017-06-29T14:03:17.014Z","type":"message"}
{"nick":"joepie91","message":"DeltaHeavy: if you're using a truthiness check to check existence, you're doing it wrong, simple as that - and you're setting yourself up for failure, because you're introducing an additional scenario where you could overlook something and introduce a silent bug.","date":"2017-06-29T14:03:23.434Z","type":"message"}
{"nick":"evilqubit","reason":"Read error: Connection reset by peer","date":"2017-06-29T14:03:23.606Z","type":"quit"}
{"nick":"DeltaHeavy","message":"null would mean it \"exists\" in said case","date":"2017-06-29T14:03:26.248Z","type":"message"}
{"nick":"prometh","message":"DeltaHeavy: func(a, null, c)","date":"2017-06-29T14:03:30.622Z","type":"message"}
{"nick":"joepie91","message":"DeltaHeavy: really the only reason people even argue about this is that the use of boolean checks is so ingrained in JS culture; it is very blatantly the wrong thing to do from a technical perspective.","date":"2017-06-29T14:03:46.371Z","type":"message"}
{"nick":"prometh","message":"callback(null, result)","date":"2017-06-29T14:03:50.617Z","type":"message"}
{"nick":"prometh","message":"callback(undefined, result)","date":"2017-06-29T14:04:03.680Z","type":"message"}
{"nick":"phutchins","date":"2017-06-29T14:04:05.685Z","type":"join"}
{"nick":"joepie91","message":"and given the non-cost of getting it right, there's really no point over trying to defend the semantically wrong approach.","date":"2017-06-29T14:04:05.857Z","type":"message"}
{"nick":"prometh","message":"callback()","date":"2017-06-29T14:04:10.509Z","type":"message"}
{"nick":"joepie91","message":"(and given the risks)","date":"2017-06-29T14:04:10.681Z","type":"message"}
{"nick":"DeltaHeavy","message":"joepie91: Depends on what you mean by \"checking existence\". In the most literal sense I agree, and that's when you should typeof foo !== 'undefined' no?","date":"2017-06-29T14:04:11.158Z","type":"message"}
{"nick":"joepie91","message":"DeltaHeavy: no.","date":"2017-06-29T14:04:15.825Z","type":"message"}
{"nick":"brent__","date":"2017-06-29T14:04:20.156Z","type":"join"}
{"nick":"joepie91","message":"DeltaHeavy: 'existence' can either be undefined or null depending on context; in most cases you can assume both null and undefined to translate to 'nonexistent'","date":"2017-06-29T14:04:35.688Z","type":"message"}
{"nick":"brent__","reason":"Remote host closed the connection","date":"2017-06-29T14:04:38.037Z","type":"quit"}
{"nick":"prometh","message":"why would you use typeof when you have `undefined`, anyway?","date":"2017-06-29T14:04:40.025Z","type":"message"}
{"nick":"scare_byte","date":"2017-06-29T14:04:47.609Z","type":"join"}
{"nick":"DeltaHeavy","message":"How do you check if something exists?","date":"2017-06-29T14:04:48.563Z","type":"message"}
{"nick":"joepie91","message":"prometh: undefined can technically be redefined","date":"2017-06-29T14:04:52.079Z","type":"message"}
{"nick":"scare_byte","date":"2017-06-29T14:04:53.723Z","type":"part"}
{"nick":"prometh","message":"joepie91: aye, bummer","date":"2017-06-29T14:05:00.807Z","type":"message"}
{"nick":"joepie91","message":"DeltaHeavy: simplest approach according to the null+undefined scenario: != null","date":"2017-06-29T14:05:04.407Z","type":"message"}
{"nick":"brent__","date":"2017-06-29T14:05:10.690Z","type":"join"}
{"nick":"joepie91","message":"DeltaHeavy: for just undefined: !== (void 0), iirc","date":"2017-06-29T14:05:11.834Z","type":"message"}
{"nick":"joepie91","message":"or typeof foo === \"undefined\"","date":"2017-06-29T14:05:19.479Z","type":"message"}
{"nick":"gxt","reason":"Ping timeout: 260 seconds","date":"2017-06-29T14:05:20.602Z","type":"quit"}
{"nick":"alextes","message":"hm, I try to always have 'undefined' mean 'the question didn't make sense' and 'null' know what you're looking for but not there.","date":"2017-06-29T14:05:30.387Z","type":"message"}
{"nick":"prometh","message":"typeof null === \"object\"","date":"2017-06-29T14:05:34.966Z","type":"message"}
{"nick":"joepie91","message":"if you just want to specify default values, then use default-value, that's what it's for","date":"2017-06-29T14:05:36.452Z","type":"message"}
{"nick":"joepie91","message":"n> undefined === (void 0)","date":"2017-06-29T14:06:26.064Z","type":"message"}
{"nick":"DeltaHeavy","message":" Yeah, typeof foo !== 'undefined' is what I'd do then, as I stated in my original statement.","date":"2017-06-29T14:06:26.344Z","type":"message"}
{"nick":"babelboot","message":"joepie91: (okay) true","date":"2017-06-29T14:06:28.499Z","type":"message"}
{"nick":"prometh","message":"n> callback = (error, result) => typeof error === \"undefined\";  callback(null, 1)","date":"2017-06-29T14:06:29.478Z","type":"message"}
{"nick":"babelboot","message":"prometh: (okay) false","date":"2017-06-29T14:06:32.422Z","type":"message"}
{"nick":"joepie91","message":"DeltaHeavy: right, just be aware that that doesn't cover null. sometimes that's the right approach, sometimes not","date":"2017-06-29T14:06:45.108Z","type":"message"}
{"nick":"joepie91","message":"DeltaHeavy: but honestly, so long as you're not doing a boolean check for existence you're probably fine :P","date":"2017-06-29T14:07:12.032Z","type":"message"}
{"nick":"prometh","message":"i consider null to be a placeholder value that means nothing, as trying to avoid defining as undefined","date":"2017-06-29T14:07:20.766Z","type":"message"}
{"nick":"prometh","message":"but to me, they both mean \"nothing here\"","date":"2017-06-29T14:07:26.816Z","type":"message"}
{"nick":"prometh","message":"undefiend is not defined, null is defined as nothing... both are nothing","date":"2017-06-29T14:07:39.994Z","type":"message"}
{"nick":"joepie91","message":"you'll generally find undefined to be used as an implicit nothing, and null as an explicit nothing","date":"2017-06-29T14:07:46.421Z","type":"message"}
{"nick":"djmax","reason":"Remote host closed the connection","date":"2017-06-29T14:07:51.171Z","type":"quit"}
{"nick":"DeltaHeavy","message":"joepie91: So null is the same as not existing?","date":"2017-06-29T14:08:05.099Z","type":"message"}
{"nick":"DeltaHeavy","message":"Ok nvm","date":"2017-06-29T14:08:12.244Z","type":"message"}
{"nick":"DeltaHeavy","message":"I see","date":"2017-06-29T14:08:12.902Z","type":"message"}
{"nick":"joepie91","message":"DeltaHeavy: not exactly, but that is how it's generally treated","date":"2017-06-29T14:08:18.996Z","type":"message"}
{"nick":"prometh","message":"functionally, not existing","date":"2017-06-29T14:08:25.097Z","type":"message"}
{"nick":"joepie91","message":"DeltaHeavy: eg. people tend to pass `null` into functions for arguments they want to leave empty","date":"2017-06-29T14:08:28.168Z","type":"message"}
{"nick":"prometh","message":"n> a=undefined; typeof a === \"undefined\"","date":"2017-06-29T14:08:40.920Z","type":"message"}
{"nick":"babelboot","message":"prometh: (okay) true","date":"2017-06-29T14:08:43.402Z","type":"message"}
{"nick":"prometh","message":"a exists!","date":"2017-06-29T14:08:44.809Z","type":"message"}
{"nick":"fourq","reason":"Read error: Connection reset by peer","date":"2017-06-29T14:09:16.103Z","type":"quit"}
{"nick":"DeltaHeavy","message":"I generally avoid null so I'm a bit shaky in this territory. I'll usually explicitly check for it as using != feels dirt.","date":"2017-06-29T14:09:23.892Z","type":"message"}
{"nick":"zsoc","message":"joepie91: is there an alternative to that, speaking of which?","date":"2017-06-29T14:09:51.436Z","type":"message"}
{"nick":"brent__","reason":"Ping timeout: 276 seconds","date":"2017-06-29T14:09:58.674Z","type":"quit"}
{"nick":"joepie91","message":"DeltaHeavy: anyhow, I'd just really like for people to stop using boolean checks all over the place. it causes *so many* silent bugs and is probably one of my least favourite pet peeves in the JS community, because even experienced developers will often actively defend doing the wrong thing just to not have to change their habits or admit that their habits are flawed.","date":"2017-06-29T14:10:05.968Z","type":"message"}
{"nick":"joepie91","message":"it's... irritating.","date":"2017-06-29T14:10:14.863Z","type":"message"}
{"nick":"joepie91","message":"zsoc: that = ?","date":"2017-06-29T14:10:19.348Z","type":"message"}
{"nick":"prometh","message":"boolean checks?","date":"2017-06-29T14:10:22.253Z","type":"message"}
{"nick":"zsoc","message":"joepie91: null to skip arguments","date":"2017-06-29T14:10:38.792Z","type":"message"}
{"nick":"DeltaHeavy","message":"joepie91: Instead you'd just check for truthyness?","date":"2017-06-29T14:10:45.523Z","type":"message"}
{"nick":"joepie91","message":"zsoc: explicitly specifying undefined? :P","date":"2017-06-29T14:10:59.158Z","type":"message"}
{"nick":"joepie91","message":"DeltaHeavy: ?","date":"2017-06-29T14:11:05.825Z","type":"message"}
{"nick":"zsoc","message":"yeah alright, this is why people use null lol","date":"2017-06-29T14:11:09.471Z","type":"message"}
{"nick":"kakashiAL","message":"I am using tape with knex where I have this structure:  initDatabase(t)  t.test(...)   destroyDatabase(t)   <--all run in this order because of tapes nature, but if I invoke initDatabase(t) again (which is a wrapper that I wrote to create a new database wiht seeds) I get this error:","date":"2017-06-29T14:11:16.876Z","type":"message"}
{"nick":"kakashiAL","message":"Unable to acquire a connection","date":"2017-06-29T14:11:18.848Z","type":"message"}
{"nick":"joepie91","message":"DeltaHeavy: I'm saying that that's *not* what you should be doing, unless your actual intention is to check truthiness (eg. for a boolean \"do X\" flag)","date":"2017-06-29T14:11:21.654Z","type":"message"}
{"nick":"bdunavant","date":"2017-06-29T14:11:24.836Z","type":"join"}
{"nick":"joepie91","message":"DeltaHeavy: there is precisely one case where it is valid to do truthiness checks, and that's when you're working with booleans","date":"2017-06-29T14:11:36.232Z","type":"message"}
{"nick":"joepie91","message":"every other application of them is wrong","date":"2017-06-29T14:11:43.932Z","type":"message"}
{"nick":"dionesoodes","date":"2017-06-29T14:12:32.120Z","type":"join"}
{"nick":"djmax","date":"2017-06-29T14:13:00.378Z","type":"join"}
{"nick":"DeltaHeavy","message":"Hm, I've been doing what Airbnb's style guide says, being to prefer checking for truthy/falsey values but I see what you're saying and have had such concerns in the past but figured I just didn't know any better.","date":"2017-06-29T14:13:16.166Z","type":"message"}
{"nick":"doomhz","reason":"Remote host closed the connection","date":"2017-06-29T14:14:34.499Z","type":"quit"}
{"nick":"joepie91","message":"if the airbnb style guide says to use truthiness checks for checking existence, then the airbnb style guide is wrong :)","date":"2017-06-29T14:14:37.254Z","type":"message"}
{"nick":"joepie91","message":"there's not really a discussion here; the semantic meaning is quite clear","date":"2017-06-29T14:14:51.323Z","type":"message"}
{"nick":"joepie91","message":"anything that deviates from that semantic meaning is automatically wrong","date":"2017-06-29T14:14:58.530Z","type":"message"}
{"nick":"djmax","reason":"Remote host closed the connection","date":"2017-06-29T14:15:05.535Z","type":"quit"}
{"nick":"joyee","reason":"Remote host closed the connection","date":"2017-06-29T14:15:10.779Z","type":"quit"}
{"nick":"prometh","message":"might wanna tell ljharb about that","date":"2017-06-29T14:15:13.591Z","type":"message"}
{"nick":"notebox","reason":"Quit: My Mac Pro has gone to sleep. ZZZzzz…","date":"2017-06-29T14:15:17.539Z","type":"quit"}
{"nick":"DeltaHeavy","message":"Maybe I'm wrong on this though, can't find it now","date":"2017-06-29T14:15:54.203Z","type":"message"}
{"nick":"prometh","message":"maybe they fixed it","date":"2017-06-29T14:16:08.674Z","type":"message"}
{"nick":"Rodya_","reason":"Remote host closed the connection","date":"2017-06-29T14:17:37.711Z","type":"quit"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2017-06-29T14:17:44.235Z","type":"quit"}
{"nick":"kakashiAL","message":"does anyone know how to solve my tape/knex problem?","date":"2017-06-29T14:18:12.019Z","type":"message"}
{"nick":"evilqubit","date":"2017-06-29T14:18:30.500Z","type":"join"}
{"nick":"DeltaHeavy","message":"I've heard arguments for things like 'a && a.length' being better as if 'a' is NOT an array, you'd get an error thrown.","date":"2017-06-29T14:18:42.345Z","type":"message"}
{"nick":"DeltaHeavy","message":"Though, what if 'a' is some other object with a property / getter 'length'","date":"2017-06-29T14:18:56.690Z","type":"message"}
{"nick":"kakashiAL","message":"Array.isArray()","date":"2017-06-29T14:19:16.359Z","type":"message"}
{"nick":"SourcePhoenix","date":"2017-06-29T14:19:23.850Z","type":"join"}
{"nick":"notebox","date":"2017-06-29T14:20:06.820Z","type":"join"}
{"nick":"SourcePhoenix","reason":"Remote host closed the connection","date":"2017-06-29T14:20:09.348Z","type":"quit"}
{"nick":"SourcePhoenix","date":"2017-06-29T14:20:15.851Z","type":"join"}
{"nick":"cstls","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-29T14:21:00.871Z","type":"quit"}
{"nick":"coot_________","reason":"Remote host closed the connection","date":"2017-06-29T14:23:07.038Z","type":"quit"}
{"nick":"DeltaHeavy","message":"I know of that and I know it's more explicit but I think I've been checking for truthy values instead and now I'm reconsidering","date":"2017-06-29T14:23:11.437Z","type":"message"}
{"nick":"morenoh149","date":"2017-06-29T14:23:20.299Z","type":"join"}
{"nick":"coot_________","date":"2017-06-29T14:23:25.167Z","type":"join"}
{"nick":"joshontheweb","date":"2017-06-29T14:24:21.841Z","type":"join"}
{"nick":"MerlinDMC","reason":"Ping timeout: 255 seconds","date":"2017-06-29T14:24:35.852Z","type":"quit"}
{"nick":"sqz_","reason":"Ping timeout: 258 seconds","date":"2017-06-29T14:24:47.237Z","type":"quit"}
{"nick":"DeltaHeavy","message":"On another note, when writing unit tests I have some dummy data that's JSON compatible I'm using to plug into a constructor function. Is it a good idea to make a function that _.cloneDeep's that object for every time I want to construct the function?","date":"2017-06-29T14:24:51.702Z","type":"message"}
{"nick":"DeltaHeavy","message":"If anybody wants to critique my unit tests period I can make a gist","date":"2017-06-29T14:25:08.124Z","type":"message"}
{"nick":"kakashiAL","message":"DeltaHeavy: dont know what you mean, but do the Array.isArray() checking first to be sure that everything after it is an array","date":"2017-06-29T14:25:12.986Z","type":"message"}
{"nick":"einnjo","date":"2017-06-29T14:25:19.472Z","type":"join"}
{"nick":"joyee","date":"2017-06-29T14:25:32.733Z","type":"join"}
{"nick":"DeltaHeavy","message":"kakashiAL: The question is more about whether being that explicit is an advantage or not.","date":"2017-06-29T14:25:43.112Z","type":"message"}
{"nick":"kakashiAL","message":"DeltaHeavy: this will make it sure that you dont have another datastructure with the length property","date":"2017-06-29T14:25:45.478Z","type":"message"}
{"nick":"DeltaHeavy","message":"Unit test stuff, please don't hate on my use of ESM, out of my control: https://gist.github.com/mpalmr/fdc88851c074e0b50f78aba403dee03a","date":"2017-06-29T14:26:16.283Z","type":"message"}
{"nick":"kakashiAL","message":"DeltaHeavy: in my opinion \"go always full explicite\"","date":"2017-06-29T14:26:28.056Z","type":"message"}
{"nick":"DeltaHeavy","message":"kakashiAL: Yep, for sure","date":"2017-06-29T14:26:28.433Z","type":"message"}
{"nick":"gunnaro","date":"2017-06-29T14:26:30.828Z","type":"join"}
{"nick":"DeltaHeavy","message":"I used to think like that but I backed off based off a rule I THOUGHT was in Airbnb's style guide but perhaps I was wrong.","date":"2017-06-29T14:26:53.119Z","type":"message"}
{"nick":"Silenced","reason":"Ping timeout: 260 seconds","date":"2017-06-29T14:27:38.115Z","type":"quit"}
{"nick":"thunder-ltu","date":"2017-06-29T14:28:00.644Z","type":"join"}
{"nick":"buffal0","reason":"Quit: Computer has gone to sleep. ZZZzzz…","date":"2017-06-29T14:28:21.910Z","type":"quit"}
{"nick":"sqz","date":"2017-06-29T14:29:06.834Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 246 seconds","date":"2017-06-29T14:29:56.584Z","type":"quit"}
{"nick":"MerlinDMC","date":"2017-06-29T14:30:20.501Z","type":"join"}
{"nick":"esv","reason":"Ping timeout: 260 seconds","date":"2017-06-29T14:31:29.995Z","type":"quit"}
{"nick":"ohmyfromage__","reason":"Quit: Leaving","date":"2017-06-29T14:32:27.641Z","type":"quit"}
{"nick":"stoneburner","date":"2017-06-29T14:32:36.473Z","type":"join"}
{"nick":"ohmyfromage","date":"2017-06-29T14:32:46.684Z","type":"join"}
{"nick":"buffal0","date":"2017-06-29T14:32:56.269Z","type":"join"}
{"nick":"buffal0","reason":"Client Quit","date":"2017-06-29T14:36:42.496Z","type":"quit"}
{"nick":"brent__","date":"2017-06-29T14:38:22.900Z","type":"join"}
{"nick":"djmax","date":"2017-06-29T14:38:34.524Z","type":"join"}
{"nick":"brent__","reason":"Remote host closed the connection","date":"2017-06-29T14:38:57.611Z","type":"quit"}
{"nick":"brent__","date":"2017-06-29T14:39:32.895Z","type":"join"}
{"nick":"joyee","date":"2017-06-29T14:40:14.675Z","type":"join"}
{"nick":"alraz_","reason":"Read error: Connection reset by peer","date":"2017-06-29T14:40:33.114Z","type":"quit"}
{"nick":"brent__","reason":"Ping timeout: 240 seconds","date":"2017-06-29T14:44:27.913Z","type":"quit"}
{"nick":"joyee","reason":"Ping timeout: 240 seconds","date":"2017-06-29T14:44:35.514Z","type":"quit"}
{"nick":"cesconix","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-29T14:45:13.033Z","type":"quit"}
{"nick":"jaawerth","message":"DeltaHeavy: no need to cloneDeep there. If it's coming out of a factory function, it's going to be a different object (with a different reference) every time.","date":"2017-06-29T14:45:47.025Z","type":"message"}
{"nick":"rezetta","reason":"Remote host closed the connection","date":"2017-06-29T14:45:48.800Z","type":"quit"}
{"nick":"abruns","date":"2017-06-29T14:46:41.013Z","type":"join"}
{"nick":"DeltaHeavy","message":"Oh true, idk what I'm thinking lol","date":"2017-06-29T14:46:41.456Z","type":"message"}
{"nick":"stoneburner","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2017-06-29T14:47:44.536Z","type":"quit"}
{"nick":"rezetta","date":"2017-06-29T14:47:54.000Z","type":"join"}
{"nick":"rezetta","reason":"Client Quit","date":"2017-06-29T14:47:54.172Z","type":"quit"}
{"nick":"omnihil","reason":"Remote host closed the connection","date":"2017-06-29T14:51:59.475Z","type":"quit"}
{"nick":"omnihil","date":"2017-06-29T14:52:14.900Z","type":"join"}
{"nick":"cesconix","date":"2017-06-29T14:52:32.033Z","type":"join"}
{"nick":"st_elmo","reason":"Quit: st_elmo","date":"2017-06-29T14:55:02.793Z","type":"quit"}
{"nick":"InverseRhombus","reason":"Quit: Leaving","date":"2017-06-29T14:56:37.230Z","type":"quit"}
{"nick":"null4bl3","reason":"Remote host closed the connection","date":"2017-06-29T14:58:07.208Z","type":"quit"}
{"nick":"kunerd","reason":"Quit: Leaving","date":"2017-06-29T15:00:21.307Z","type":"quit"}
{"nick":"chll_","reason":"Quit: quit","date":"2017-06-29T15:00:49.293Z","type":"quit"}
{"nick":"Donitzo","message":"is it a bad way to load balance by telling each client which websocket port to connect to?","date":"2017-06-29T15:01:54.806Z","type":"message"}
{"nick":"phpnode","reason":"Remote host closed the connection","date":"2017-06-29T15:02:10.270Z","type":"quit"}
{"nick":"Donitzo","message":"and having multiple websocket servers on different workers","date":"2017-06-29T15:02:12.929Z","type":"message"}
{"nick":"doomhz","date":"2017-06-29T15:02:49.465Z","type":"join"}
{"nick":"zsoc","message":"I say conservatively... yes. The client really shouldn't be trusted with that sort of decision imo. But I don't have any first hand experience with load balancing websockets so it's only theory","date":"2017-06-29T15:02:51.006Z","type":"message"}
{"nick":"phpnode","date":"2017-06-29T15:03:34.705Z","type":"join"}
{"nick":"Donitzo","message":"what alternative would there be?","date":"2017-06-29T15:03:38.474Z","type":"message"}
{"nick":"Donitzo","message":"A single websocket won't be able to handle a very large number of clients","date":"2017-06-29T15:04:03.297Z","type":"message"}
{"nick":"alfie","reason":"Remote host closed the connection","date":"2017-06-29T15:04:12.020Z","type":"quit"}
{"nick":"Donitzo","message":"and I can't exactly force the client to connect to anything","date":"2017-06-29T15:04:36.415Z","type":"message"}
{"nick":"roelmonn_","date":"2017-06-29T15:05:32.477Z","type":"join"}
{"nick":"roelmonn_","reason":"Remote host closed the connection","date":"2017-06-29T15:05:59.927Z","type":"quit"}
{"nick":"roelmonn_","date":"2017-06-29T15:06:34.465Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 246 seconds","date":"2017-06-29T15:07:02.639Z","type":"quit"}
{"nick":"justelex_","date":"2017-06-29T15:07:21.696Z","type":"join"}
{"nick":"alfie","date":"2017-06-29T15:07:30.352Z","type":"join"}
{"nick":"Cabanossi","date":"2017-06-29T15:08:04.174Z","type":"join"}
{"nick":"neilf__","reason":"Quit: Connection closed for inactivity","date":"2017-06-29T15:08:21.523Z","type":"quit"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2017-06-29T15:08:22.753Z","type":"quit"}
{"nick":"Snugglebash","date":"2017-06-29T15:08:49.685Z","type":"join"}
{"nick":"doomhz","reason":"Remote host closed the connection","date":"2017-06-29T15:08:50.186Z","type":"quit"}
{"nick":"zsoc","message":"Donitzo: sorry what do you mean 'a single websocket'","date":"2017-06-29T15:09:09.214Z","type":"message"}
{"nick":"roelmonnens","reason":"Ping timeout: 255 seconds","date":"2017-06-29T15:09:13.950Z","type":"quit"}
{"nick":"tvw","reason":"Ping timeout: 240 seconds","date":"2017-06-29T15:09:22.207Z","type":"quit"}
{"nick":"doomhz","date":"2017-06-29T15:09:34.447Z","type":"join"}
{"nick":"zsoc","message":"Donitzo: a single websocket server? The largest application I have using websockets handles upwards of a few hundred active clients fairly trivially. With sending many frames (and broadcasting all at once on updates). I haven't even needed to scale vertically yet (it's a mid range cpu and < 2gb ram)","date":"2017-06-29T15:10:32.953Z","type":"message"}
{"nick":"nodweber","reason":"Remote host closed the connection","date":"2017-06-29T15:10:34.006Z","type":"quit"}
{"nick":"roelmonn_","reason":"Ping timeout: 260 seconds","date":"2017-06-29T15:11:08.551Z","type":"quit"}
{"nick":"Donitzo","message":"maybe I need something other than websockets","date":"2017-06-29T15:11:22.318Z","type":"message"}
{"nick":"zsoc","message":"in fact my mem usage never spikes over like 80mb~ on this app heh. The limitation to websockets is generally the OS level socket limit, usually before memory/cpu becomes an issue","date":"2017-06-29T15:11:26.292Z","type":"message"}
{"nick":"Donitzo","message":"I want much more than that","date":"2017-06-29T15:11:26.899Z","type":"message"}
{"nick":"nodweber","date":"2017-06-29T15:11:34.762Z","type":"join"}
{"nick":"Donitzo","message":"but I want real-time messaging too","date":"2017-06-29T15:11:42.901Z","type":"message"}
{"nick":"zsoc","message":"Well, 'much more' might work fine, I've never tested it.","date":"2017-06-29T15:11:43.113Z","type":"message"}
{"nick":"zsoc","message":"Donitzo: what is your requirement? Real time in both directions? Or just push from server to client?","date":"2017-06-29T15:11:54.081Z","type":"message"}
{"nick":"trumco","date":"2017-06-29T15:11:57.501Z","type":"join"}
{"nick":"Donitzo","message":"real time only in one direction","date":"2017-06-29T15:12:44.204Z","type":"message"}
{"nick":"Donitzo","message":"the client must know when the server updates","date":"2017-06-29T15:12:51.553Z","type":"message"}
{"nick":"zsoc","message":"The way the protocol is going (with http) is SSE (Server Sent Events)","date":"2017-06-29T15:13:02.071Z","type":"message"}
{"nick":"Donitzo","message":"and I'd like it if I could have several thousand clients","date":"2017-06-29T15:13:08.422Z","type":"message"}
{"nick":"zsoc","message":"sorry i meant http2","date":"2017-06-29T15:13:12.997Z","type":"message"}
{"nick":"zsoc","message":"you can also do Server Sent Events with HTTP tho i'm pretty certain","date":"2017-06-29T15:13:24.578Z","type":"message"}
{"nick":"plutoniix","date":"2017-06-29T15:13:35.491Z","type":"join"}
{"nick":"zsoc","message":"and if the only requirement is push from server, this is probably a much better bet for your case","date":"2017-06-29T15:13:36.487Z","type":"message"}
{"nick":"Donitzo","message":"if it's well supported","date":"2017-06-29T15:13:46.983Z","type":"message"}
{"nick":"doomhz","reason":"Ping timeout: 240 seconds","date":"2017-06-29T15:13:48.459Z","type":"quit"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2017-06-29T15:13:48.631Z","type":"quit"}
{"nick":"zsoc","message":"it's not really, but either way you are polyfilling, even with websockets","date":"2017-06-29T15:14:02.164Z","type":"message"}
{"nick":"zsoc","message":"unless you don't need to support IE or mobile~","date":"2017-06-29T15:14:09.437Z","type":"message"}
{"nick":"tvw","date":"2017-06-29T15:14:18.915Z","type":"join"}
{"nick":"plutoniix","date":"2017-06-29T15:14:20.683Z","type":"join"}
{"nick":"Donitzo","message":"and what could polyfill do to fill the gap","date":"2017-06-29T15:14:30.348Z","type":"message"}
{"nick":"onel0p3z","date":"2017-06-29T15:14:40.784Z","type":"join"}
{"nick":"zsoc","message":"It's a good question, let me make sure it's a shimmable thing...","date":"2017-06-29T15:14:50.587Z","type":"message"}
{"nick":"zsoc","message":"There seems to be a polyfill for EventSource (the client side part of Server Sent Events): https://github.com/Yaffle/EventSource","date":"2017-06-29T15:15:31.929Z","type":"message"}
{"nick":"Donitzo","message":"and does it use sockets?","date":"2017-06-29T15:16:09.239Z","type":"message"}
{"nick":"zsoc","message":"Which supports IE10+, firefox, chrome, safari, opera, mobile (except opera mini) which is the same boat websockets more or less","date":"2017-06-29T15:16:13.961Z","type":"message"}
{"nick":"zsoc","message":"It uses them differently","date":"2017-06-29T15:16:17.030Z","type":"message"}
{"nick":"Donitzo","message":"because then it's just back to square one","date":"2017-06-29T15:16:18.705Z","type":"message"}
{"nick":"stoneburner","date":"2017-06-29T15:16:26.919Z","type":"join"}
{"nick":"Donitzo","message":"I'm using websocket ws, so it's already close to as lightweight as you can get","date":"2017-06-29T15:16:41.855Z","type":"message"}
{"nick":"nodweber","reason":"Ping timeout: 276 seconds","date":"2017-06-29T15:16:55.697Z","type":"quit"}
{"nick":"notebox","reason":"Quit: My Mac Pro has gone to sleep. ZZZzzz…","date":"2017-06-29T15:17:00.073Z","type":"quit"}
{"nick":"Donitzo","message":"hmm, maybe I should try time synchronization again","date":"2017-06-29T15:17:41.178Z","type":"message"}
{"nick":"zsoc","message":"yes except of the persistent open socket thing... i don't know the *exact* mechanism of SSE but it's something like it 'reserves' a socket for reuse but then sends the messages over standard http","date":"2017-06-29T15:17:48.588Z","type":"message"}
{"nick":"fr4nk","date":"2017-06-29T15:17:53.793Z","type":"join"}
{"nick":"zsoc","message":"Donitzo: don't get me wrong, i love websockets and use it with everything","date":"2017-06-29T15:17:57.287Z","type":"message"}
{"nick":"zsoc","message":"and `ws` is a nice package","date":"2017-06-29T15:18:01.541Z","type":"message"}
{"nick":"Donitzo","message":"yeah, but it uses a single port for each connection, and doesn't really scale well with huge amounts of users","date":"2017-06-29T15:18:33.541Z","type":"message"}
{"nick":"zsoc","message":"Donitzo: are you currently having a problem scaling? Is it just testing right now? What is the ultimate goal?","date":"2017-06-29T15:18:35.640Z","type":"message"}
{"nick":"FunnyLookinHat","date":"2017-06-29T15:18:44.469Z","type":"join"}
{"nick":"FunnyLookinHat","reason":"Changing host","date":"2017-06-29T15:18:44.642Z","type":"quit"}
{"nick":"FunnyLookinHat","date":"2017-06-29T15:18:44.642Z","type":"join"}
{"nick":"Donitzo","message":"Future proofing, so I don't need to redesign this simple game if I manage to get a few tens of thousands of users","date":"2017-06-29T15:19:15.495Z","type":"message"}
{"nick":"joshontheweb","date":"2017-06-29T15:19:22.126Z","type":"join"}
{"nick":"Donitzo","message":"eh, maybe I need redis after all","date":"2017-06-29T15:19:22.298Z","type":"message"}
{"nick":"zsoc","message":"Right, that is sort of the direction that people go in at that point","date":"2017-06-29T15:19:34.585Z","type":"message"}
{"nick":"zsoc","message":"You basically need something like that anyway to share in-memory cache of gamestate","date":"2017-06-29T15:19:49.883Z","type":"message"}
{"nick":"zsoc","message":"(if you're going to be running multiple processes of your application in parallel)","date":"2017-06-29T15:20:15.979Z","type":"message"}
{"nick":"Donitzo","message":"so as far as I understand I can just make a seperate redis websocket app, and another game app","date":"2017-06-29T15:20:22.036Z","type":"message"}
{"nick":"Donitzo","message":"and just spawn however many websocket apps I want","date":"2017-06-29T15:20:30.286Z","type":"message"}
{"nick":"Donitzo","message":"maybe I'll even cluster them","date":"2017-06-29T15:20:35.305Z","type":"message"}
{"nick":"Donitzo","message":"also they don't need to be on the same server","date":"2017-06-29T15:20:53.269Z","type":"message"}
{"nick":"LeBlaaanc","date":"2017-06-29T15:20:58.223Z","type":"join"}
{"nick":"goodenough","date":"2017-06-29T15:21:03.519Z","type":"join"}
{"nick":"zsoc","message":"right but spawning them on the same physical hardware would have no benefit.. it's the same limitation of sockets","date":"2017-06-29T15:21:06.943Z","type":"message"}
{"nick":"nodweber","date":"2017-06-29T15:21:12.214Z","type":"join"}
{"nick":"zsoc","message":"Donitzo: this might be moot tho","date":"2017-06-29T15:21:30.276Z","type":"message"}
{"nick":"Donitzo","message":"still a good idea to spread them out of several processes, since too many connections on one websocket server gets a bit heavy","date":"2017-06-29T15:21:43.350Z","type":"message"}
{"nick":"zsoc","message":"your time might be better invested setting up something like Artillery.io to test your application","date":"2017-06-29T15:21:46.874Z","type":"message"}
{"nick":"zsoc","message":"since a single vertically scaled installation could handle 10,000 websockets","date":"2017-06-29T15:22:02.292Z","type":"message"}
{"nick":"zsoc","message":"in practice","date":"2017-06-29T15:22:05.851Z","type":"message"}
{"nick":"Donitzo","message":"well, if I use redis at least I am technically future-proof","date":"2017-06-29T15:22:11.406Z","type":"message"}
{"nick":"zsoc","message":"i mean you could do 60,000 (the limit is really just how many sockets you can have open in linux heh)","date":"2017-06-29T15:22:21.660Z","type":"message"}
{"nick":"zsoc","message":"but you're adding a huge amount of complexity to your application (and its deployment process)","date":"2017-06-29T15:22:36.831Z","type":"message"}
{"nick":"Donitzo","message":"not if I use socket.io-redis","date":"2017-06-29T15:22:52.992Z","type":"message"}
{"nick":"Rodya_","date":"2017-06-29T15:23:01.839Z","type":"join"}
{"nick":"Donitzo","message":"it's almost the exact same thing as using socket.io","date":"2017-06-29T15:23:02.196Z","type":"message"}
{"nick":"zsoc","message":"\"too many connections on one websocket server gets a bit heavy\" <-- heavy in what way?","date":"2017-06-29T15:23:04.238Z","type":"message"}
{"nick":"zsoc","message":"yes and socket.io brings its own brand of heaviness","date":"2017-06-29T15:23:18.397Z","type":"message"}
{"nick":"Donitzo","message":"https://bocoup.com/blog/node-stress-test-analysis/","date":"2017-06-29T15:23:21.960Z","type":"message"}
{"nick":"zsoc","message":"compares to just `ws`, socket.io is a monster","date":"2017-06-29T15:23:23.925Z","type":"message"}
{"nick":"Donitzo","message":"Yeah I know","date":"2017-06-29T15:23:29.337Z","type":"message"}
{"nick":"Donitzo","message":"but then I have to use redis manually. I guess that'll work","date":"2017-06-29T15:23:38.584Z","type":"message"}
{"nick":"Donitzo","message":"wait","date":"2017-06-29T15:24:05.210Z","type":"message"}
{"nick":"Donitzo","message":"that's the wrong article","date":"2017-06-29T15:24:07.496Z","type":"message"}
{"nick":"zsoc","message":"Donitzo: 1.) that article is 5 years old","date":"2017-06-29T15:24:10.644Z","type":"message"}
{"nick":"zsoc","message":"lol","date":"2017-06-29T15:24:11.168Z","type":"message"}
{"nick":"Donitzo","message":"https://medium.com/@denizozger/finding-the-right-node-js-websocket-implementation-b63bfca0539","date":"2017-06-29T15:24:27.447Z","type":"message"}
{"nick":"roomcayz","date":"2017-06-29T15:24:45.591Z","type":"join"}
{"nick":"zsoc","message":"Donitzo: if you're going to make the leap from `ws` to something where you don't have to roll your own cluster / redis implementation.. my suggestion is Primus along with the requisite cluster and redis plugins","date":"2017-06-29T15:25:24.122Z","type":"message"}
{"nick":"zsoc","message":"and again, that article is interesting (actually i'm going to read the whole thing i think) but it's 3 years old","date":"2017-06-29T15:26:13.349Z","type":"message"}
{"nick":"lordjancso","reason":"Quit: Leaving","date":"2017-06-29T15:26:17.568Z","type":"quit"}
{"nick":"Donitzo","message":"doesn't seem very popular","date":"2017-06-29T15:26:18.025Z","type":"message"}
{"nick":"Donitzo","message":"https://www.npmjs.com/package/primus-redis","date":"2017-06-29T15:26:28.394Z","type":"message"}
{"nick":"Donitzo","message":"I'll probably just do it from scratch with ws","date":"2017-06-29T15:27:06.906Z","type":"message"}
{"nick":"zsoc","message":"it's a 50 line lib.. a lot of people likely just implement it on their own heh","date":"2017-06-29T15:27:23.054Z","type":"message"}
{"nick":"zsoc","message":"and doing so with `ws` is by far your best bet","date":"2017-06-29T15:27:30.349Z","type":"message"}
{"nick":"Silenced","date":"2017-06-29T15:27:37.942Z","type":"join"}
{"nick":"zsoc","message":"But again, consider whether it's really necessary or not... the examples in that article is 10kb data per second per client.. that's a *lot* of JSON","date":"2017-06-29T15:27:58.776Z","type":"message"}
{"nick":"Donitzo","message":"it's not like I really gain anything from using socket.io","date":"2017-06-29T15:28:30.935Z","type":"message"}
{"nick":"Donitzo","message":"I don't want rooms","date":"2017-06-29T15:28:35.493Z","type":"message"}
{"nick":"Donitzo","message":"and I can just serialize json if I need it","date":"2017-06-29T15:28:55.190Z","type":"message"}
{"nick":"zsoc","message":"right, if you don't want to use rooms / channels or custom events etc etc...","date":"2017-06-29T15:28:57.149Z","type":"message"}
{"nick":"zsoc","message":"exactly","date":"2017-06-29T15:28:59.055Z","type":"message"}
{"nick":"Donitzo","message":"ws.on('message', (message) => { let [type, data] = message.split(';');","date":"2017-06-29T15:29:10.062Z","type":"message"}
{"nick":"zsoc","message":"i agree with everything you're saying except that this seems like a premature optimization to me","date":"2017-06-29T15:29:12.573Z","type":"message"}
{"nick":"prometh","message":"charmander: shouldn't utf8-typed package have outputted a Uint8Array ?","date":"2017-06-29T15:29:19.472Z","type":"message"}
{"nick":"Donitzo","message":"and that's about as easy as it is to get message type","date":"2017-06-29T15:29:19.665Z","type":"message"}
{"nick":"zsoc","message":"but i guess it's trivial to implement the redis pub/sub broadcasting just so you have it","date":"2017-06-29T15:29:27.880Z","type":"message"}
{"nick":"mh_","reason":"Remote host closed the connection","date":"2017-06-29T15:29:55.490Z","type":"quit"}
{"nick":"Donitzo","message":"well, I really need to go","date":"2017-06-29T15:30:10.637Z","type":"message"}
{"nick":"thunder-ltu","reason":"Ping timeout: 260 seconds","date":"2017-06-29T15:30:16.562Z","type":"quit"}
{"nick":"zsoc","message":"splitting on ';' is interesting... i've always just done { event: 'foo', msg: 'bar' } but i've never had optimization concerns","date":"2017-06-29T15:30:20.201Z","type":"message"}
{"nick":"zsoc","message":"kk","date":"2017-06-29T15:30:21.177Z","type":"message"}
{"nick":"zsoc","message":"later","date":"2017-06-29T15:30:22.001Z","type":"message"}
{"nick":"joyee","date":"2017-06-29T15:31:11.339Z","type":"join"}
{"nick":"zsoc","message":"Donitzo: er, wait, the other option is just use pm2.. i guess you'd be using redis anyway for the in-memory cache sharing but pm2 can spin up multiple instances of your application and also load balance incoming connections","date":"2017-06-29T15:32:07.982Z","type":"message"}
{"nick":"groom","reason":"Quit: Leaving.","date":"2017-06-29T15:33:09.745Z","type":"quit"}
{"nick":"zsoc","message":"and there's probably faster/easier in memory stores than redis out there too if you don't need the pub/sub stuff","date":"2017-06-29T15:33:11.517Z","type":"message"}
{"nick":"DeltaHeavy","reason":"Read error: Connection reset by peer","date":"2017-06-29T15:33:27.466Z","type":"quit"}
{"nick":"notebox","date":"2017-06-29T15:33:40.498Z","type":"join"}
{"nick":"prometh","message":"n> [].fill(0, 0, 10)","date":"2017-06-29T15:34:00.561Z","type":"message"}
{"nick":"babelboot","message":"prometh: (okay) []","date":"2017-06-29T15:34:03.324Z","type":"message"}
{"nick":"prometh","message":"wtf, why is it not [0,0,0,0,0,0,0,0,0,0]","date":"2017-06-29T15:34:11.425Z","type":"message"}
{"nick":"m8","reason":"Read error: Connection reset by peer","date":"2017-06-29T15:34:19.741Z","type":"quit"}
{"nick":"sobersabre","reason":"Quit: WeeChat 1.7","date":"2017-06-29T15:35:21.624Z","type":"quit"}
{"nick":"joyee","reason":"Ping timeout: 240 seconds","date":"2017-06-29T15:35:22.176Z","type":"quit"}
{"nick":"prometh","message":"n> new Array(10).fill(0, 0, 10)","date":"2017-06-29T15:35:31.899Z","type":"message"}
{"nick":"babelboot","message":"prometh: (okay) [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]","date":"2017-06-29T15:35:35.164Z","type":"message"}
{"nick":"prometh","message":"do i seriously need to do that?","date":"2017-06-29T15:35:40.689Z","type":"message"}
{"nick":"brent__","date":"2017-06-29T15:35:40.891Z","type":"join"}
{"nick":"omnipot","date":"2017-06-29T15:36:45.173Z","type":"join"}
{"nick":"jaawerth","message":"n> Array.from({length: 10}, () => 10)","date":"2017-06-29T15:37:09.597Z","type":"message"}
{"nick":"babelboot","message":"jaawerth: (okay) [ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 ]","date":"2017-06-29T15:37:11.849Z","type":"message"}
{"nick":"jaawerth","message":"or 0 or whatever, lol","date":"2017-06-29T15:37:17.841Z","type":"message"}
{"nick":"goodenough","reason":"Remote host closed the connection","date":"2017-06-29T15:37:34.879Z","type":"quit"}
{"nick":"jaawerth","message":"n> Array.from({length: 10}, (_,i) => (i + 10).toString(36))","date":"2017-06-29T15:38:20.321Z","type":"message"}
{"nick":"babelboot","message":"jaawerth: (okay) [ 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j' ]","date":"2017-06-29T15:38:22.861Z","type":"message"}
{"nick":"zsoc","message":"just for a fill tho... the map is probably not necessary","date":"2017-06-29T15:39:01.262Z","type":"message"}
{"nick":"jaawerth","message":"yeah but it's more fun","date":"2017-06-29T15:39:17.930Z","type":"message"}
{"nick":"zsoc","message":"n> [...Array(10).fill(0)]","date":"2017-06-29T15:39:23.809Z","type":"message"}
{"nick":"babelboot","message":"zsoc: (okay) [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]","date":"2017-06-29T15:39:26.691Z","type":"message"}
{"nick":"cbyrda","date":"2017-06-29T15:39:32.414Z","type":"join"}
{"nick":"zsoc","message":"prometh: ^ more concise","date":"2017-06-29T15:39:57.020Z","type":"message"}
{"nick":"wsieroci","date":"2017-06-29T15:39:59.031Z","type":"join"}
{"nick":"brent___","date":"2017-06-29T15:40:05.121Z","type":"join"}
{"nick":"prometh","message":"wtfux","date":"2017-06-29T15:40:10.728Z","type":"message"}
{"nick":"jaawerth","message":"you don't even need the spread","date":"2017-06-29T15:40:22.014Z","type":"message"}
{"nick":"zsoc","message":"orly?","date":"2017-06-29T15:40:26.736Z","type":"message"}
{"nick":"jaawerth","message":"n> Array(10).fill(0)","date":"2017-06-29T15:40:31.228Z","type":"message"}
{"nick":"babelboot","message":"jaawerth: (okay) [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]","date":"2017-06-29T15:40:32.393Z","type":"message"}
{"nick":"zsoc","message":"oh neat","date":"2017-06-29T15:40:35.008Z","type":"message"}
{"nick":"zsoc","message":"well there :p","date":"2017-06-29T15:40:36.555Z","type":"message"}
{"nick":"jaawerth","message":"hehe","date":"2017-06-29T15:40:39.063Z","type":"message"}
{"nick":"prometh","message":"is removing the \"new\" a good idea?","date":"2017-06-29T15:40:42.868Z","type":"message"}
{"nick":"zsoc","message":"never use new","date":"2017-06-29T15:40:46.425Z","type":"message"}
{"nick":"prometh","message":"all of this is getting very javascript-hacky","date":"2017-06-29T15:40:50.076Z","type":"message"}
{"nick":"zsoc","message":"using it is a bad idea","date":"2017-06-29T15:40:51.404Z","type":"message"}
{"nick":"jaawerth","message":"yes. it is the way to do it. for.. reasons","date":"2017-06-29T15:40:54.940Z","type":"message"}
{"nick":"prometh","message":"zsoc: because?","date":"2017-06-29T15:40:55.701Z","type":"message"}
{"nick":"jaawerth","message":"that I forget","date":"2017-06-29T15:40:57.989Z","type":"message"}
{"nick":"brent__","reason":"Read error: Connection reset by peer","date":"2017-06-29T15:40:58.797Z","type":"quit"}
{"nick":"jaawerth","message":"but ljharb remembers","date":"2017-06-29T15:41:01.697Z","type":"message"}
{"nick":"jaawerth","message":"I mean in general, all the native global constructors can and should be used without new, except for Map/Set","date":"2017-06-29T15:41:39.273Z","type":"message"}
{"nick":"phaji__","reason":"Ping timeout: 240 seconds","date":"2017-06-29T15:41:48.485Z","type":"quit"}
{"nick":"prometh","message":"f***ing javascript","date":"2017-06-29T15:41:54.367Z","type":"message"}
{"nick":"jaawerth","message":"yeah.","date":"2017-06-29T15:42:01.017Z","type":"message"}
{"nick":"phaji__","date":"2017-06-29T15:42:16.473Z","type":"join"}
{"nick":"jaawerth","message":"in some of those cases, they'll work similarly or the same. In others, using the constructor without new will do explicit casting","date":"2017-06-29T15:42:29.385Z","type":"message"}
{"nick":"jaawerth","message":"(Boolean and Number, at least)","date":"2017-06-29T15:42:39.536Z","type":"message"}
{"nick":"Silenced","reason":"Ping timeout: 276 seconds","date":"2017-06-29T15:42:55.833Z","type":"quit"}
{"nick":"jaawerth","message":"(also kinda-sorta Object but usually you don't do that when you need to hack something like a Symbol fallback)","date":"2017-06-29T15:43:04.931Z","type":"message"}
{"nick":"zsoc","message":"new Function :>","date":"2017-06-29T15:43:16.574Z","type":"message"}
{"nick":"jaawerth","message":"ah yeah","date":"2017-06-29T15:43:21.593Z","type":"message"}
{"nick":"jaawerth","message":"I always forget about the Function constructor","date":"2017-06-29T15:43:27.537Z","type":"message"}
{"nick":"zsoc","message":"bad news bears","date":"2017-06-29T15:43:33.765Z","type":"message"}
{"nick":"hextileX","reason":"Ping timeout: 276 seconds","date":"2017-06-29T15:43:34.697Z","type":"quit"}
{"nick":"jaawerth","message":"lol yeah I mean it doesn't get to count","date":"2017-06-29T15:43:40.005Z","type":"message"}
{"nick":"jaawerth","message":"it's eval","date":"2017-06-29T15:43:41.193Z","type":"message"}
{"nick":"jaawerth","message":"and therefore is a tool for breaking reality","date":"2017-06-29T15:43:53.489Z","type":"message"}
{"nick":"sz0","reason":"Quit: Connection closed for inactivity","date":"2017-06-29T15:44:09.618Z","type":"quit"}
{"nick":"jaawerth","message":"but good call ;-)","date":"2017-06-29T15:44:10.404Z","type":"message"}
{"nick":"prometh","message":"beer soon","date":"2017-06-29T15:44:17.959Z","type":"message"}
{"nick":"DeltaHeavy","date":"2017-06-29T15:44:28.786Z","type":"join"}
{"nick":"zotune__","reason":"Quit: Leaving","date":"2017-06-29T15:44:45.920Z","type":"quit"}
{"nick":"ahmed_elgabri","reason":"Ping timeout: 240 seconds","date":"2017-06-29T15:44:50.432Z","type":"quit"}
{"nick":"abpa","date":"2017-06-29T15:44:52.537Z","type":"join"}
{"nick":"Bj83","date":"2017-06-29T15:47:19.096Z","type":"join"}
{"nick":"cotko","date":"2017-06-29T15:50:13.017Z","type":"join"}
{"nick":"cybeaer","reason":"Ping timeout: 240 seconds","date":"2017-06-29T15:51:05.526Z","type":"quit"}
{"nick":"ircuser-1","reason":"Quit: because","date":"2017-06-29T15:51:20.465Z","type":"quit"}
{"nick":"roomcayz","reason":"Ping timeout: 240 seconds","date":"2017-06-29T15:51:57.864Z","type":"quit"}
{"nick":"karmahacker","date":"2017-06-29T15:52:37.666Z","type":"join"}
{"nick":"omnihil","reason":"Remote host closed the connection","date":"2017-06-29T15:52:39.431Z","type":"quit"}
{"nick":"srpx","date":"2017-06-29T15:52:50.318Z","type":"join"}
{"nick":"omnihil","date":"2017-06-29T15:52:54.851Z","type":"join"}
{"nick":"Bj83","new_nick":"cybeaer","date":"2017-06-29T15:53:06.148Z","type":"nick"}
{"nick":"srpx","message":"Can I use closure compiler without installing JDK? If not, is there any similar product?","date":"2017-06-29T15:53:07.034Z","type":"message"}
{"nick":"roomcayz","date":"2017-06-29T15:53:55.947Z","type":"join"}
{"nick":"nodweber","reason":"Remote host closed the connection","date":"2017-06-29T15:54:24.561Z","type":"quit"}
{"nick":"zzz","date":"2017-06-29T15:55:42.866Z","type":"join"}
{"nick":"nodweber","date":"2017-06-29T15:56:30.972Z","type":"join"}
{"nick":"prometh","message":"jaawerth: also Uint8Array() needs `new`","date":"2017-06-29T15:57:08.100Z","type":"message"}
{"nick":"zsoc","message":"closure compiler? for node.js code?","date":"2017-06-29T15:57:51.844Z","type":"message"}
{"nick":"karmahacker","reason":"Ping timeout: 276 seconds","date":"2017-06-29T15:57:52.696Z","type":"quit"}
{"nick":"zsoc","message":"i've not heard of that","date":"2017-06-29T15:57:54.249Z","type":"message"}
{"nick":"Snugglebash","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2017-06-29T15:58:03.310Z","type":"quit"}
{"nick":"cybeaer","reason":"Quit: Leaving","date":"2017-06-29T15:58:51.510Z","type":"quit"}
{"nick":"h12o","date":"2017-06-29T15:59:16.790Z","type":"join"}
{"nick":"joepie91","message":"just got a recruiter e-mail that pretends to be personally written, but totally fails to acknowledge that I live in NL (it's from an NL company, and sent in English), and best of all it recommends a job in working with MongoDB","date":"2017-06-29T15:59:47.411Z","type":"message"}
{"nick":"joepie91","message":"I mean... lol","date":"2017-06-29T15:59:55.413Z","type":"message"}
