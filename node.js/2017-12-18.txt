{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-12-18T00:00:27.879Z","type":"quit"}
{"nick":"d4rklit3","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-18T00:00:29.112Z","type":"quit"}
{"nick":"A7785-Guest-KW","date":"2017-12-18T00:00:55.352Z","type":"join"}
{"nick":"A7785-Guest-KW","reason":"Client Quit","date":"2017-12-18T00:02:43.122Z","type":"quit"}
{"nick":"elxa","reason":"Read error: Connection reset by peer","date":"2017-12-18T00:03:01.827Z","type":"quit"}
{"nick":"GrandpaOnionHead","date":"2017-12-18T00:03:42.771Z","type":"join"}
{"nick":"tripflex","reason":"Quit: Aloha!","date":"2017-12-18T00:04:33.061Z","type":"quit"}
{"nick":"eclm","date":"2017-12-18T00:08:04.865Z","type":"join"}
{"nick":"m15k","reason":"Quit: Page closed","date":"2017-12-18T00:08:33.673Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-12-18T00:12:23.534Z","type":"join"}
{"nick":"raynold","date":"2017-12-18T00:13:16.659Z","type":"join"}
{"nick":"xNinjaDNT","reason":"Ping timeout: 248 seconds","date":"2017-12-18T00:15:28.019Z","type":"quit"}
{"nick":"cads","reason":"Remote host closed the connection","date":"2017-12-18T00:17:52.540Z","type":"quit"}
{"nick":"eclm","reason":"Ping timeout: 265 seconds","date":"2017-12-18T00:19:37.468Z","type":"quit"}
{"nick":"FishPencil","date":"2017-12-18T00:21:40.209Z","type":"join"}
{"nick":"FishPencil","message":"Will node.js be much faster than python's requests at making a lot of GET requests for data?","date":"2017-12-18T00:22:05.881Z","type":"message"}
{"nick":"FishPencil","message":"I'm currently using python's threading.Thread to spawn a lot of connections, but I'm curious if node would be faster at this","date":"2017-12-18T00:22:37.644Z","type":"message"}
{"nick":"xNinjaDNT","date":"2017-12-18T00:22:48.515Z","type":"join"}
{"nick":"YungMoonHodler__","date":"2017-12-18T00:23:03.478Z","type":"join"}
{"nick":"YungMoonHodler__","reason":"Changing host","date":"2017-12-18T00:23:03.547Z","type":"quit"}
{"nick":"YungMoonHodler__","date":"2017-12-18T00:23:03.547Z","type":"join"}
{"nick":"modernpacifist","message":"FishPencil: It depends on the amount of idle and computation required per connection. Node is single threaded, but can have multiple connections transferring data off the main thread concurrently","date":"2017-12-18T00:23:26.973Z","type":"message"}
{"nick":"AtumT_","date":"2017-12-18T00:23:35.547Z","type":"join"}
{"nick":"modernpacifist","message":"But once the data is received, operations like JSON parsing will likely fight for access to the main node.js thread","date":"2017-12-18T00:23:57.756Z","type":"message"}
{"nick":"FishPencil","message":"modernpacifist: I just need to make a lot of requests, scrape the data for an xpath, and store the results in an sqlite3 db. Can node do all that?","date":"2017-12-18T00:24:09.353Z","type":"message"}
{"nick":"AtumT","reason":"Read error: Connection reset by peer","date":"2017-12-18T00:24:14.849Z","type":"quit"}
{"nick":"modernpacifist","message":"Almost any language can do that","date":"2017-12-18T00:24:20.967Z","type":"message"}
{"nick":"FishPencil","message":"Is node.js the fastest at that","date":"2017-12-18T00:24:34.876Z","type":"message"}
{"nick":"PalmerEk69","date":"2017-12-18T00:24:35.456Z","type":"join"}
{"nick":"modernpacifist","message":"Depends on the programmer","date":"2017-12-18T00:24:52.439Z","type":"message"}
{"nick":"ljharb","message":"\"fastest\" doesn't matter.","date":"2017-12-18T00:25:06.006Z","type":"message"}
{"nick":"FishPencil","message":"My bottle neck right now is clearly requests time, as I'm barely even using all my CPU or NIC","date":"2017-12-18T00:25:42.200Z","type":"message"}
{"nick":"theWhisper_","date":"2017-12-18T00:26:09.472Z","type":"join"}
{"nick":"ljharb","message":"FishPencil: node would be better merely because you wouldn't have to use threads.","date":"2017-12-18T00:26:17.922Z","type":"message"}
{"nick":"FishPencil","message":"ljharb: That's what I was thinking","date":"2017-12-18T00:26:30.543Z","type":"message"}
{"nick":"FishPencil","message":"I'll do some benchmarking","date":"2017-12-18T00:26:39.570Z","type":"message"}
{"nick":"YungMoonHodler_","reason":"Ping timeout: 272 seconds","date":"2017-12-18T00:27:06.170Z","type":"quit"}
{"nick":"FishPencil","message":"Since nodejs is async I can just do a: for (i in urls) {http.get(urls[i], function(res) { ... })} to get the best speed?","date":"2017-12-18T00:27:54.558Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 250 seconds","date":"2017-12-18T00:28:32.468Z","type":"quit"}
{"nick":"ljharb","message":"FishPencil: first, never use for..in for anything","date":"2017-12-18T00:29:08.316Z","type":"message"}
{"nick":"Cabanossi","date":"2017-12-18T00:29:11.613Z","type":"join"}
{"nick":"ljharb","message":"FishPencil: and second, that depends on if you need to know when they're all finished","date":"2017-12-18T00:29:22.157Z","type":"message"}
{"nick":"ljharb","message":"FishPencil: if you only want to spawn N requests, and whenever each is done, do something, but then otherwise just let the program finish when all the requests are finished? then iterating over the URLs works fine.","date":"2017-12-18T00:29:52.098Z","type":"message"}
{"nick":"ljharb","message":"(but you don't ever want to use for..in to iterate anything)","date":"2017-12-18T00:29:59.391Z","type":"message"}
{"nick":"FishPencil","message":"I'll likely just be building a big array of returned data","date":"2017-12-18T00:30:03.695Z","type":"message"}
{"nick":"ljharb","message":"FishPencil: in that case, you want to use promises.","date":"2017-12-18T00:30:33.951Z","type":"message"}
{"nick":"ljharb","message":"FishPencil: and then you'd make an array of promises, and `Promise.all(promises).then(function (results) { … })`","date":"2017-12-18T00:30:47.299Z","type":"message"}
{"nick":"piyer","date":"2017-12-18T00:31:19.860Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-12-18T00:31:26.777Z","type":"quit"}
{"nick":"webbb","reason":"Remote host closed the connection","date":"2017-12-18T00:32:46.615Z","type":"quit"}
{"nick":"horsey","date":"2017-12-18T00:34:17.816Z","type":"join"}
{"nick":"phil22","reason":"Ping timeout: 260 seconds","date":"2017-12-18T00:35:01.539Z","type":"quit"}
{"nick":"piyer","reason":"Ping timeout: 256 seconds","date":"2017-12-18T00:35:37.456Z","type":"quit"}
{"nick":"Xiti","reason":"Ping timeout: 256 seconds","date":"2017-12-18T00:35:37.542Z","type":"quit"}
{"nick":"FishPencil","message":"Holy cow look at that go. That looks way faster","date":"2017-12-18T00:35:43.358Z","type":"message"}
{"nick":"Flynnn","reason":"Quit: Auf Wiedersehen!","date":"2017-12-18T00:36:57.315Z","type":"quit"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-12-18T00:38:04.349Z","type":"quit"}
{"nick":"Xiti","date":"2017-12-18T00:38:14.193Z","type":"join"}
{"nick":"horsey","reason":"Ping timeout: 256 seconds","date":"2017-12-18T00:39:01.490Z","type":"quit"}
{"nick":"PalmerEk69","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2017-12-18T00:39:13.699Z","type":"quit"}
{"nick":"HPH^","date":"2017-12-18T00:39:21.280Z","type":"join"}
{"nick":"Flynnn","date":"2017-12-18T00:43:39.316Z","type":"join"}
{"nick":"felixsanz","reason":"Ping timeout: 248 seconds","date":"2017-12-18T00:43:44.075Z","type":"quit"}
{"nick":"bq_","date":"2017-12-18T00:45:23.433Z","type":"join"}
{"nick":"zsoc","message":"FishPencil: you may run into timeouts, however, or socket limitations","date":"2017-12-18T00:45:43.027Z","type":"message"}
{"nick":"zsoc","message":"if you're running thousands of urls","date":"2017-12-18T00:45:46.873Z","type":"message"}
{"nick":"zsoc","message":"You'll have to limit concurrency","date":"2017-12-18T00:45:52.583Z","type":"message"}
{"nick":"FishPencil","message":"zsoc: Already am","date":"2017-12-18T00:45:54.288Z","type":"message"}
{"nick":"zsoc","message":"so, use bluebird","date":"2017-12-18T00:46:00.923Z","type":"message"}
{"nick":"FishPencil","message":"and am trying to read on how to do that","date":"2017-12-18T00:46:03.116Z","type":"message"}
{"nick":"zsoc","message":"Promise.map(arrayOfUrls, mapFn, { concurrency: 15 })","date":"2017-12-18T00:46:23.365Z","type":"message"}
{"nick":"felixsanz","date":"2017-12-18T00:46:42.171Z","type":"join"}
{"nick":"devsnek","message":"you can use an agent","date":"2017-12-18T00:46:51.794Z","type":"message"}
{"nick":"devsnek","message":"if you don’t want to dep bluebird","date":"2017-12-18T00:46:55.427Z","type":"message"}
{"nick":"zsoc","message":"FishPencil: Promise.map is analogous to Promise.all(myArr.map( but allows you to set concurrency","date":"2017-12-18T00:47:03.592Z","type":"message"}
{"nick":"zsoc","message":"it sounds like he's just running a script.. there's no reason not to use bluebird","date":"2017-12-18T00:47:10.446Z","type":"message"}
{"nick":"FishPencil","message":"zsoc: with const Promise = require('bluebird'); ?","date":"2017-12-18T00:47:15.535Z","type":"message"}
{"nick":"zsoc","message":"yes","date":"2017-12-18T00:47:20.078Z","type":"message"}
{"nick":"devsnek","message":"i mean","date":"2017-12-18T00:47:26.906Z","type":"message"}
{"nick":"zsoc","message":"then you just need to use a sane client request library that returns a promise","date":"2017-12-18T00:47:34.071Z","type":"message"}
{"nick":"devsnek","message":"there’s no reason not to give other options","date":"2017-12-18T00:47:34.641Z","type":"message"}
{"nick":"zsoc","message":"like node-fetch, bhttp, got, etc","date":"2017-12-18T00:47:38.787Z","type":"message"}
{"nick":"devsnek","message":"snekfetch","date":"2017-12-18T00:47:49.998Z","type":"message"}
{"nick":"FishPencil","message":"I'm good with whatever is the most popular","date":"2017-12-18T00:48:12.643Z","type":"message"}
{"nick":"FishPencil","message":"bluebird seems pretty popular","date":"2017-12-18T00:48:21.822Z","type":"message"}
{"nick":"zsoc","message":"Popular != good, I'd be wary about that :p","date":"2017-12-18T00:48:32.348Z","type":"message"}
{"nick":"zsoc","message":"I just listed the easiest tool for your particular job that I know of. Yes of course there are alternatives.","date":"2017-12-18T00:48:43.653Z","type":"message"}
{"nick":"FishPencil","message":"says the one who suggested it lol","date":"2017-12-18T00:48:45.814Z","type":"message"}
{"nick":"devsnek","message":"bluebird has some pretty interesting source code","date":"2017-12-18T00:48:47.190Z","type":"message"}
{"nick":"ljharb","message":"native promises are the most popular.","date":"2017-12-18T00:48:52.557Z","type":"message"}
{"nick":"devsnek","message":"read: messy","date":"2017-12-18T00:48:53.765Z","type":"message"}
{"nick":"zsoc","message":"the most interesting","date":"2017-12-18T00:48:54.252Z","type":"message"}
{"nick":"devsnek","message":"native promises aren’t opinionated enough for my purposes","date":"2017-12-18T00:49:28.071Z","type":"message"}
{"nick":"ahmed_elgabri","reason":"Ping timeout: 264 seconds","date":"2017-12-18T00:49:33.270Z","type":"quit"}
{"nick":"zsoc","message":"ljharb: please share with my how to easily limit concurrency with a Promise.all + an iteration method with native promises","date":"2017-12-18T00:49:34.192Z","type":"message"}
{"nick":"zsoc","message":"I'm open to making different suggestions","date":"2017-12-18T00:49:41.542Z","type":"message"}
{"nick":"zsoc","message":"it's a very common problem","date":"2017-12-18T00:49:46.188Z","type":"message"}
{"nick":"devsnek","message":"well you’re specificially trying to do http requests right","date":"2017-12-18T00:49:52.976Z","type":"message"}
{"nick":"ljharb","message":"i didn't say bluebird was the wrong choice here","date":"2017-12-18T00:49:54.591Z","type":"message"}
{"nick":"zsoc","message":"okay","date":"2017-12-18T00:49:59.694Z","type":"message"}
{"nick":"ljharb","message":"just saying bluebird's not the most popular :-p","date":"2017-12-18T00:50:00.121Z","type":"message"}
{"nick":"FishPencil","message":"https, but yeah","date":"2017-12-18T00:50:06.556Z","type":"message"}
{"nick":"zsoc","message":"the most popular userland promise library in node :p","date":"2017-12-18T00:50:08.588Z","type":"message"}
{"nick":"zsoc","message":"The other option is to create a custom pool of https.Agent's i guess? and uh.. some sort of lock","date":"2017-12-18T00:50:29.904Z","type":"message"}
{"nick":"modernpacifist","message":"MongoDB is popular but you may as well dump your data into a bonfire","date":"2017-12-18T00:50:40.556Z","type":"message"}
{"nick":"zsoc","message":"^","date":"2017-12-18T00:50:45.254Z","type":"message"}
{"nick":"devsnek","message":"my db is /dev/null","date":"2017-12-18T00:50:53.179Z","type":"message"}
{"nick":"zsoc","message":"a bonfire that gives you terrible headaches while it's slowly corrupting your data","date":"2017-12-18T00:50:59.607Z","type":"message"}
{"nick":"devsnek","message":"i hear its exteremely popular on linux distros","date":"2017-12-18T00:51:00.709Z","type":"message"}
{"nick":"FishPencil","message":"haha","date":"2017-12-18T00:51:17.246Z","type":"message"}
{"nick":"devsnek","message":"but anyway","date":"2017-12-18T00:51:18.636Z","type":"message"}
{"nick":"devsnek","message":"you have lots of options","date":"2017-12-18T00:51:24.345Z","type":"message"}
{"nick":"devsnek","message":"choose whatever you think is best","date":"2017-12-18T00:51:29.211Z","type":"message"}
{"nick":"FishPencil","message":"I'll just try bluebird right now","date":"2017-12-18T00:51:48.473Z","type":"message"}
{"nick":"devsnek","message":"and if you wanna stick with “the most popular isn’t always the best,” my request lib is pretty ok :^)","date":"2017-12-18T00:52:40.902Z","type":"message"}
{"nick":"zsoc","message":":p","date":"2017-12-18T00:52:52.598Z","type":"message"}
{"nick":"devsnek","message":"solid 88% coverage","date":"2017-12-18T00:53:23.883Z","type":"message"}
{"nick":"webbb","date":"2017-12-18T00:54:17.518Z","type":"join"}
{"nick":"zsoc","message":"node-fetch may or may not have 99.3%","date":"2017-12-18T00:54:34.578Z","type":"message"}
{"nick":"zsoc","message":"and obviously test coverage is the main indicator of quality amirite","date":"2017-12-18T00:54:49.458Z","type":"message"}
{"nick":"aalex","date":"2017-12-18T00:55:10.163Z","type":"join"}
{"nick":"devsnek","message":"writing tests is exhausting","date":"2017-12-18T00:55:22.435Z","type":"message"}
{"nick":"cotko4","reason":"Read error: Connection reset by peer","date":"2017-12-18T00:55:31.113Z","type":"quit"}
{"nick":"cotko4","date":"2017-12-18T00:55:42.247Z","type":"join"}
{"nick":"zsoc","message":"Especially when you bend over backwards to write hacky tests just to hit a certain line","date":"2017-12-18T00:55:47.143Z","type":"message"}
{"nick":"zsoc","message":"it's antithetical","date":"2017-12-18T00:56:00.687Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2017-12-18T00:56:46.258Z","type":"quit"}
{"nick":"devsnek","message":"https://gc.gy/⟦籠.png","date":"2017-12-18T00:57:01.172Z","type":"message"}
{"nick":"devsnek","message":":^)","date":"2017-12-18T00:57:05.053Z","type":"message"}
{"nick":"HPH^","reason":"Ping timeout: 264 seconds","date":"2017-12-18T00:58:33.259Z","type":"quit"}
{"nick":"doodadjs","message":"(Strange that my HexChat on Windows 10 doesn't show half of Unicode chars)","date":"2017-12-18T00:58:49.706Z","type":"message"}
{"nick":"Cabanossi","date":"2017-12-18T00:59:13.328Z","type":"join"}
{"nick":"FishPencil","message":"Do I want {concurrency: 15}).call() or .then() or what? Sorry, new to this","date":"2017-12-18T00:59:17.546Z","type":"message"}
{"nick":"e14","date":"2017-12-18T00:59:59.915Z","type":"join"}
{"nick":"aalex","reason":"Ping timeout: 272 seconds","date":"2017-12-18T01:00:02.129Z","type":"quit"}
{"nick":"devsnek","message":"https://www.google.com/search?q=bluebird+docs","date":"2017-12-18T01:00:24.924Z","type":"message"}
{"nick":"devsnek","message":":)","date":"2017-12-18T01:00:29.623Z","type":"message"}
{"nick":"zsoc","message":"FishPencil: nothing, just return it","date":"2017-12-18T01:01:46.718Z","type":"message"}
{"nick":"cthulchu","date":"2017-12-18T01:02:29.961Z","type":"join"}
{"nick":"zsoc","message":"FishPencil: Promise.all(arrOfUrls, url => fetch(url).then(res => res.text()), { concurrency: 8 }).then((arrayOfResponses) => { ...","date":"2017-12-18T01:03:00.227Z","type":"message"}
{"nick":"zsoc","message":"as an example","date":"2017-12-18T01:03:01.863Z","type":"message"}
{"nick":"zsoc","message":"that would kickstart the fetch calls (assuming node-fetch) , grab the text from the body, and resolve into an array of those texts.. to which you can then parse. Whether you're doingso inside of the function or in the .then() callback depends on what behavior you're looking for","date":"2017-12-18T01:03:51.208Z","type":"message"}
{"nick":"zsoc","message":"err.. Promise.map, obv i meant","date":"2017-12-18T01:04:15.648Z","type":"message"}
{"nick":"HPH^","date":"2017-12-18T01:04:19.120Z","type":"join"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-18T01:05:40.568Z","type":"quit"}
{"nick":"FishPencil","message":"Is fetch better than https.get ?","date":"2017-12-18T01:06:36.313Z","type":"message"}
{"nick":"cads","date":"2017-12-18T01:06:46.437Z","type":"join"}
{"nick":"zsoc","message":"well you can't https.get(url) and send sane headers and have a promise returned","date":"2017-12-18T01:06:56.004Z","type":"message"}
{"nick":"zsoc","message":"so yes, significantly","date":"2017-12-18T01:06:58.249Z","type":"message"}
{"nick":"piyer","date":"2017-12-18T01:07:25.165Z","type":"join"}
{"nick":"zsoc","message":"the built in http(s) libs are very low level, and not terribly useful outside of being a base for more appropriate abstractions","date":"2017-12-18T01:07:26.177Z","type":"message"}
{"nick":"devsnek","message":"as a side note","date":"2017-12-18T01:07:37.360Z","type":"message"}
{"nick":"devsnek","message":"node-fetch should handle concurrent connections","date":"2017-12-18T01:07:44.191Z","type":"message"}
{"nick":"zsoc","message":"uh..","date":"2017-12-18T01:07:50.613Z","type":"message"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-12-18T01:07:56.831Z","type":"quit"}
{"nick":"devsnek","message":"not as an option","date":"2017-12-18T01:07:57.837Z","type":"message"}
{"nick":"piyer","date":"2017-12-18T01:08:13.483Z","type":"join"}
{"nick":"zsoc","message":"node-fetch tries to stick as close to fetch spec as possible","date":"2017-12-18T01:08:14.498Z","type":"message"}
{"nick":"devsnek","message":"ya","date":"2017-12-18T01:08:18.080Z","type":"message"}
{"nick":"Soopaman","reason":"Quit: Leaving.","date":"2017-12-18T01:08:19.921Z","type":"quit"}
{"nick":"zsoc","message":"which leaves concurrency / agency to implementation","date":"2017-12-18T01:08:34.668Z","type":"message"}
{"nick":"zsoc","message":"unless i'm missing something","date":"2017-12-18T01:08:36.942Z","type":"message"}
{"nick":"piyer","reason":"Client Quit","date":"2017-12-18T01:08:42.273Z","type":"quit"}
{"nick":"leptone","reason":"Remote host closed the connection","date":"2017-12-18T01:08:52.185Z","type":"quit"}
{"nick":"devsnek","message":"sorry concurrency was a bad word","date":"2017-12-18T01:08:54.043Z","type":"message"}
{"nick":"iCharlie_","date":"2017-12-18T01:08:59.453Z","type":"join"}
{"nick":"devsnek","message":"fetch spec defines a connection pool","date":"2017-12-18T01:09:00.516Z","type":"message"}
{"nick":"devsnek","message":"which is automatically handled for you","date":"2017-12-18T01:09:14.472Z","type":"message"}
{"nick":"Soopaman","date":"2017-12-18T01:09:31.398Z","type":"join"}
{"nick":"devsnek","message":"technically its already doing that agent thing i mentioned","date":"2017-12-18T01:09:35.911Z","type":"message"}
{"nick":"Quixote_","date":"2017-12-18T01:10:20.420Z","type":"join"}
{"nick":"Gustavo6046","reason":"Quit: Leaving","date":"2017-12-18T01:11:01.882Z","type":"quit"}
{"nick":"piyer","date":"2017-12-18T01:11:14.312Z","type":"join"}
{"nick":"snowkidind","reason":"Quit: See Ya Later Alligator!","date":"2017-12-18T01:11:29.747Z","type":"quit"}
{"nick":"zsoc","message":"orly","date":"2017-12-18T01:11:33.891Z","type":"message"}
{"nick":"iCharlie","reason":"Ping timeout: 265 seconds","date":"2017-12-18T01:11:49.592Z","type":"quit"}
{"nick":"zsoc","message":"so it does","date":"2017-12-18T01:11:51.963Z","type":"message"}
{"nick":"iCharlie_","reason":"Client Quit","date":"2017-12-18T01:11:57.879Z","type":"quit"}
{"nick":"zsoc","message":"yeah that... sort of definition doesn't affect what he's trying to do, i'm pretty certain","date":"2017-12-18T01:13:08.138Z","type":"message"}
{"nick":"zsoc","message":"the spec allows for that implementation... like how most browsers have a max number of connections per origin","date":"2017-12-18T01:13:30.090Z","type":"message"}
{"nick":"zsoc","message":"but the spec itself doesn't say \"use 6\"... it just defines 'zero or more ... to the same origin'","date":"2017-12-18T01:13:47.943Z","type":"message"}
{"nick":"zsoc","message":"i don't think it's implemented in node to actually hold a pool of connections to same origin. It could tho. Maybe it should.","date":"2017-12-18T01:14:04.849Z","type":"message"}
{"nick":"cthulchu","message":"lol, the whole network is being spammed","date":"2017-12-18T01:14:31.058Z","type":"message"}
{"nick":"cthulchu","message":"the channels with no ops that is","date":"2017-12-18T01:14:37.782Z","type":"message"}
{"nick":"h12o","date":"2017-12-18T01:14:41.480Z","type":"join"}
{"nick":"zsoc","message":"regular day in freenode land","date":"2017-12-18T01:14:50.194Z","type":"message"}
{"nick":"cthulchu","message":"freenode is overwhelmed","date":"2017-12-18T01:14:51.310Z","type":"message"}
{"nick":"cthulchu","message":"hehe","date":"2017-12-18T01:14:53.772Z","type":"message"}
{"nick":"devsnek","message":"boring","date":"2017-12-18T01:15:43.293Z","type":"message"}
{"nick":"xkapastel","date":"2017-12-18T01:17:01.818Z","type":"join"}
{"nick":"Roughy","reason":"Quit: Meadow Fresh milk","date":"2017-12-18T01:17:04.308Z","type":"quit"}
{"nick":"h12o","reason":"Ping timeout: 248 seconds","date":"2017-12-18T01:19:29.700Z","type":"quit"}
{"nick":"ed209","reason":"Remote host closed the connection","date":"2017-12-18T01:20:00.999Z","type":"quit"}
{"nick":"ed209","date":"2017-12-18T01:20:07.907Z","type":"join"}
{"nick":"zsoc","message":"FishPencil: btw this reference may help you get at least somewhat comfortable with promises https://gist.github.com/joepie91/791640557e3e5fd80861","date":"2017-12-18T01:21:05.408Z","type":"message"}
{"nick":"x405","date":"2017-12-18T01:21:28.026Z","type":"quit"}
{"nick":"sterns","reason":"Read error: Connection reset by peer","date":"2017-12-18T01:21:28.098Z","type":"quit"}
{"nick":"orbyt_","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-12-18T01:21:35.398Z","type":"quit"}
{"nick":"sterns","date":"2017-12-18T01:21:54.505Z","type":"join"}
{"nick":"FishPencil","message":"zsoc: Thanks, you've helped a lot but there's still a lot I don't get. I'll read that","date":"2017-12-18T01:24:13.522Z","type":"message"}
{"nick":"kakashiA1","reason":"Ping timeout: 248 seconds","date":"2017-12-18T01:25:20.534Z","type":"quit"}
{"nick":"FishPencil","message":"zsoc: I have this so far: https://paste.ubuntu.com/26205977/ It took me longer than I'd like to admit to understand your shorthand","date":"2017-12-18T01:25:25.460Z","type":"message"}
{"nick":"devsnek","message":"you don’t need a bodies array","date":"2017-12-18T01:28:28.005Z","type":"message"}
{"nick":"devsnek","message":"you can just return res.text","date":"2017-12-18T01:28:41.451Z","type":"message"}
{"nick":"stf-146","date":"2017-12-18T01:28:52.189Z","type":"join"}
{"nick":"devsnek","message":"the Promise.map will resolve with an array","date":"2017-12-18T01:28:54.405Z","type":"message"}
{"nick":"devsnek","message":"also `url => res.text()` isn’t shorthand","date":"2017-12-18T01:29:18.541Z","type":"message"}
{"nick":"devsnek","message":"thats an arrow function","date":"2017-12-18T01:29:30.296Z","type":"message"}
{"nick":"xkapastel","reason":"Ping timeout: 240 seconds","date":"2017-12-18T01:29:48.479Z","type":"quit"}
{"nick":"devsnek","message":"er `res => res.text()`*","date":"2017-12-18T01:29:59.574Z","type":"message"}
{"nick":"stf-146","reason":"Remote host closed the connection","date":"2017-12-18T01:30:05.715Z","type":"quit"}
{"nick":"davidmichaelkarr","date":"2017-12-18T01:31:22.986Z","type":"quit"}
{"nick":"theWhisper_","reason":"Read error: Connection reset by peer","date":"2017-12-18T01:31:33.067Z","type":"quit"}
{"nick":"devsnek","message":"FishPencil: https://hastebin.com/yajigopalu.js","date":"2017-12-18T01:32:38.416Z","type":"message"}
{"nick":"FishPencil","message":"devsnek: Like this? https://paste.ubuntu.com/26206019/","date":"2017-12-18T01:32:41.232Z","type":"message"}
{"nick":"devsnek","message":"o","date":"2017-12-18T01:32:47.154Z","type":"message"}
{"nick":"devsnek","message":"yea","date":"2017-12-18T01:32:47.783Z","type":"message"}
{"nick":"devsnek","message":"exactly","date":"2017-12-18T01:32:51.168Z","type":"message"}
{"nick":"devsnek","message":"hehe","date":"2017-12-18T01:32:55.078Z","type":"message"}
{"nick":"deltab","message":"uh, I think line 2 needs return","date":"2017-12-18T01:33:20.525Z","type":"message"}
{"nick":"devsnek","message":"oyea","date":"2017-12-18T01:33:40.481Z","type":"message"}
{"nick":"devsnek","message":"good catch","date":"2017-12-18T01:33:42.804Z","type":"message"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-12-18T01:34:46.971Z","type":"quit"}
{"nick":"kividroid","reason":"Quit: Leaving","date":"2017-12-18T01:34:48.954Z","type":"quit"}
{"nick":"FishPencil","message":"In mine?","date":"2017-12-18T01:35:11.593Z","type":"message"}
{"nick":"piyer","date":"2017-12-18T01:35:12.719Z","type":"join"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-12-18T01:35:17.800Z","type":"quit"}
{"nick":"piyer","date":"2017-12-18T01:37:15.603Z","type":"join"}
{"nick":"kakashiA1","date":"2017-12-18T01:37:36.542Z","type":"join"}
{"nick":"e14","date":"2017-12-18T01:38:06.671Z","type":"join"}
{"nick":"deltab","message":"yes","date":"2017-12-18T01:39:52.527Z","type":"message"}
{"nick":"kliq","date":"2017-12-18T01:40:49.690Z","type":"join"}
{"nick":"bq_","reason":"Ping timeout: 260 seconds","date":"2017-12-18T01:40:56.560Z","type":"quit"}
{"nick":"ffx","reason":"Quit: Leaving...","date":"2017-12-18T01:41:07.579Z","type":"quit"}
{"nick":"HPH^","reason":"Ping timeout: 272 seconds","date":"2017-12-18T01:42:28.139Z","type":"quit"}
{"nick":"Tennis","reason":"Quit: Leaving","date":"2017-12-18T01:42:34.614Z","type":"quit"}
{"nick":"xkapastel","date":"2017-12-18T01:43:15.707Z","type":"join"}
{"nick":"jscriptStudent","date":"2017-12-18T01:44:13.281Z","type":"join"}
{"nick":"deltab","message":"FishPencil: fetch(...).then(...) results in a promise, and in general you should return promises or do something else with them. not just drop them","date":"2017-12-18T01:46:00.407Z","type":"message"}
{"nick":"cotko4","reason":"Quit: Konversation terminated!","date":"2017-12-18T01:47:08.451Z","type":"quit"}
{"nick":"wonko7","reason":"Ping timeout: 272 seconds","date":"2017-12-18T01:49:26.218Z","type":"quit"}
{"nick":"FishPencil","message":"oh right","date":"2017-12-18T01:52:22.484Z","type":"message"}
{"nick":"FishPencil","message":"woops","date":"2017-12-18T01:52:24.794Z","type":"message"}
{"nick":"AtumT_","reason":"Remote host closed the connection","date":"2017-12-18T01:54:20.691Z","type":"quit"}
{"nick":"FishPencil","message":"What popular tools are available to extract data from a page? I'm used to jQuery for JS, or xpath for other langs","date":"2017-12-18T01:55:04.687Z","type":"message"}
{"nick":"chici624","date":"2017-12-18T01:55:09.387Z","type":"join"}
{"nick":"FishPencil","message":"Maybe cheerio could do it?","date":"2017-12-18T01:56:37.573Z","type":"message"}
{"nick":"danyim","reason":"Ping timeout: 256 seconds","date":"2017-12-18T01:56:39.464Z","type":"quit"}
{"nick":"YungMoonHodler__","new_nick":"YungMoonHodler","date":"2017-12-18T01:57:04.968Z","type":"nick"}
{"nick":"zsoc","message":"FishPencil: cheerio yes","date":"2017-12-18T01:59:09.969Z","type":"message"}
{"nick":"chici624","reason":"Remote host closed the connection","date":"2017-12-18T02:00:05.425Z","type":"quit"}
{"nick":"zxc","date":"2017-12-18T02:00:24.491Z","type":"join"}
{"nick":"tacoboy","date":"2017-12-18T02:00:32.932Z","type":"join"}
{"nick":"zsoc","message":"that would always be my suggestion really... unless you need to render client side","date":"2017-12-18T02:01:16.019Z","type":"message"}
{"nick":"HPH^","date":"2017-12-18T02:01:18.447Z","type":"join"}
{"nick":"xkapastel","date":"2017-12-18T02:01:41.280Z","type":"quit"}
{"nick":"zsoc","message":"in which case.. jsdom or a full browser env like puppeteer","date":"2017-12-18T02:01:43.395Z","type":"message"}
{"nick":"FishPencil","message":"I'm already seeing a massive speed increase over Python","date":"2017-12-18T02:02:16.935Z","type":"message"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-12-18T02:03:11.407Z","type":"quit"}
{"nick":"kliq","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-18T02:03:12.948Z","type":"quit"}
{"nick":"modernpacifist","message":"Does python have proper threads or some sort of global interpretor lock?","date":"2017-12-18T02:03:13.752Z","type":"message"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-18T02:03:25.075Z","type":"quit"}
{"nick":"kakashiA1","reason":"Ping timeout: 260 seconds","date":"2017-12-18T02:03:41.547Z","type":"quit"}
{"nick":"knoxy","reason":"Quit: Saindo","date":"2017-12-18T02:04:52.734Z","type":"quit"}
{"nick":"kakashiAL","date":"2017-12-18T02:05:16.497Z","type":"join"}
{"nick":"zsoc","message":"FishPencil: and this is with 1 process :) async i/o is stronk","date":"2017-12-18T02:07:05.183Z","type":"message"}
{"nick":"devsnek","message":"needsmorethreads","date":"2017-12-18T02:07:15.243Z","type":"message"}
{"nick":"zsoc","message":"python does have uh.. what is that thing called.. that tornado is based on?","date":"2017-12-18T02:07:41.090Z","type":"message"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-12-18T02:07:50.385Z","type":"quit"}
{"nick":"FishPencil","message":"What's the correct way to get the data out of fetch? var h = fetch(url).then(res => res.text());","date":"2017-12-18T02:08:16.235Z","type":"message"}
{"nick":"zsoc","message":"i wonder if there's an event loop based framework in python that isn't web server specific","date":"2017-12-18T02:08:22.321Z","type":"message"}
{"nick":"zsoc","message":"FishPencil: don't assign it.. think functionally","date":"2017-12-18T02:08:35.629Z","type":"message"}
{"nick":"zsoc","message":"gist the code you have so far :)","date":"2017-12-18T02:08:52.119Z","type":"message"}
{"nick":"yengas","reason":"Quit: Leaving","date":"2017-12-18T02:08:52.701Z","type":"quit"}
{"nick":"FishPencil","message":"Well I need to run a regex search on some html, then set the value to a var so I can use it later","date":"2017-12-18T02:09:54.506Z","type":"message"}
{"nick":"zsoc","message":"i really shouldn't use 100% of my CPU cores when compiling node... it makes anything else very difficult to do lol","date":"2017-12-18T02:09:56.100Z","type":"message"}
{"nick":"FishPencil","message":"-j 100 FTW","date":"2017-12-18T02:10:11.436Z","type":"message"}
{"nick":"zsoc","message":"yeah i wasn't thinking lol","date":"2017-12-18T02:10:23.281Z","type":"message"}
{"nick":"zsoc","message":"fetch(url).then(res => res.text()).then(myFn);","date":"2017-12-18T02:10:25.725Z","type":"message"}
{"nick":"jscriptStudent","date":"2017-12-18T02:10:28.448Z","type":"join"}
{"nick":"devsnek","message":"you could also get into async/await","date":"2017-12-18T02:10:34.289Z","type":"message"}
{"nick":"zsoc","message":"where myFn is (html) => { ...","date":"2017-12-18T02:10:36.870Z","type":"message"}
{"nick":"FishPencil","message":"yeah that does make more sense","date":"2017-12-18T02:10:51.196Z","type":"message"}
{"nick":"igemnace","date":"2017-12-18T02:10:58.479Z","type":"join"}
{"nick":"zsoc","message":"async/await makes async things look sync, as well as brings you back to old sync try/catch and assignments etc... embrace the functional paradigms :p","date":"2017-12-18T02:11:03.416Z","type":"message"}
{"nick":"devsnek","message":"awaiting a promise is also faster than .then-ing it","date":"2017-12-18T02:11:12.007Z","type":"message"}
{"nick":"FishPencil","message":"One gets used to living outside JS for a while and it is ugly to go back","date":"2017-12-18T02:11:17.494Z","type":"message"}
{"nick":"zsoc","message":"that's just plan untrue","date":"2017-12-18T02:11:18.963Z","type":"message"}
{"nick":"superlou","reason":"Quit: Leaving","date":"2017-12-18T02:11:25.136Z","type":"quit"}
{"nick":"zsoc","message":"FishPencil: it's not ugly if you go to haskell or kotlin or elixir :p","date":"2017-12-18T02:11:35.740Z","type":"message"}
{"nick":"zsoc","message":"okay well.. it is, but for different reasons..","date":"2017-12-18T02:11:41.004Z","type":"message"}
{"nick":"devsnek","message":"whats untrue?","date":"2017-12-18T02:11:54.727Z","type":"message"}
{"nick":"zsoc","message":"devsnek: explain please how awaiting a promise is \"faster\"?","date":"2017-12-18T02:12:04.038Z","type":"message"}
{"nick":"devsnek","message":"uhhhh","date":"2017-12-18T02:12:08.348Z","type":"message"}
{"nick":"devsnek","message":"its not just syntax sugar","date":"2017-12-18T02:12:11.597Z","type":"message"}
{"nick":"devsnek","message":"they talked about it in the 6.3 or 6.2 release for v8","date":"2017-12-18T02:12:27.579Z","type":"message"}
{"nick":"zsoc","message":"if you're talking about some micro optimization in the < 1ms range.. okay?","date":"2017-12-18T02:12:53.210Z","type":"message"}
{"nick":"zsoc","message":"but it is pretty much sugar, yes","date":"2017-12-18T02:13:00.041Z","type":"message"}
{"nick":"devsnek","message":"technically","date":"2017-12-18T02:13:08.574Z","type":"message"}
{"nick":"devsnek","message":"no","date":"2017-12-18T02:13:12.029Z","type":"message"}
{"nick":"VoradorPT","reason":"Quit: out","date":"2017-12-18T02:13:14.193Z","type":"quit"}
{"nick":"Zamerick_","reason":"Ping timeout: 256 seconds","date":"2017-12-18T02:13:39.480Z","type":"quit"}
{"nick":"devsnek","message":"heck i can’t find the post","date":"2017-12-18T02:13:52.250Z","type":"message"}
{"nick":"devsnek","message":"i would love to link you","date":"2017-12-18T02:13:59.900Z","type":"message"}
{"nick":"zsoc","message":"it really is, tho","date":"2017-12-18T02:14:12.930Z","type":"message"}
{"nick":"devsnek","message":"not as implementation","date":"2017-12-18T02:14:29.758Z","type":"message"}
{"nick":"zsoc","message":"you can say there is some optimization in v8 that only applies to async/await in such-and-such an instance","date":"2017-12-18T02:14:36.103Z","type":"message"}
{"nick":"zsoc","message":"but i can say there's some deopt in such-and-other an instance","date":"2017-12-18T02:14:45.711Z","type":"message"}
{"nick":"zsoc","message":"arguing over ms in javascript is pointless","date":"2017-12-18T02:14:50.966Z","type":"message"}
{"nick":"h12o","date":"2017-12-18T02:14:55.123Z","type":"join"}
{"nick":"devsnek","message":"shrug","date":"2017-12-18T02:14:58.799Z","type":"message"}
{"nick":"ZLSA_","date":"2017-12-18T02:16:22.881Z","type":"quit"}
{"nick":"wonko7","date":"2017-12-18T02:16:31.888Z","type":"join"}
{"nick":"Quixote_","reason":"Remote host closed the connection","date":"2017-12-18T02:17:02.103Z","type":"quit"}
{"nick":"djapo","message":"hello i have this in one of my components <Link to={`/products/${pageInfo.previousPageNumber}`}> and also this line const { pageInfo, prefix } = this.props;","date":"2017-12-18T02:22:06.111Z","type":"message"}
{"nick":"theWhisper_","date":"2017-12-18T02:23:02.671Z","type":"join"}
{"nick":"aalex","date":"2017-12-18T02:23:07.684Z","type":"join"}
{"nick":"djapo","message":"I want to place prefix instead of `/products/..` would i do it like this `${prefix}/${pageInfo.previousPageNumber}`","date":"2017-12-18T02:23:19.265Z","type":"message"}
{"nick":"h12o","reason":"Ping timeout: 272 seconds","date":"2017-12-18T02:24:16.375Z","type":"quit"}
{"nick":"zsoc","message":"djapo: probably yes.. but not really a node question... #reactjs might be of more help","date":"2017-12-18T02:24:17.795Z","type":"message"}
{"nick":"kliq","date":"2017-12-18T02:26:15.355Z","type":"join"}
{"nick":"the_ant","date":"2017-12-18T02:27:18.801Z","type":"join"}
{"nick":"aalex","reason":"Ping timeout: 272 seconds","date":"2017-12-18T02:28:04.134Z","type":"quit"}
{"nick":"chjj","reason":"Quit: WeeChat 2.0","date":"2017-12-18T02:28:17.871Z","type":"quit"}
{"nick":"FishPencil","message":"so does fetch().then().then() wait to finish until it's done?","date":"2017-12-18T02:29:02.700Z","type":"message"}
{"nick":"wonko7","reason":"Ping timeout: 264 seconds","date":"2017-12-18T02:29:45.228Z","type":"quit"}
{"nick":"userx","reason":"Quit: userx","date":"2017-12-18T02:29:48.031Z","type":"quit"}
{"nick":"modernpacifist","message":"FishPencil: Its chained waiting. So the first then will only be called when fetch is done. The second then wiill be called when the first then is done","date":"2017-12-18T02:29:53.035Z","type":"message"}
{"nick":"modernpacifist","message":"And by 'done', that refers to both the function you pass to a .then and also any associated promises that that function may return","date":"2017-12-18T02:30:28.662Z","type":"message"}
{"nick":"e14","date":"2017-12-18T02:31:16.418Z","type":"join"}
{"nick":"aalex","date":"2017-12-18T02:31:33.831Z","type":"join"}
{"nick":"zsoc","message":"FishPencil: if you can gist some of your code we can give you a better idea of what is happening when","date":"2017-12-18T02:31:39.679Z","type":"message"}
{"nick":"zsoc","message":"But if you have a chain off of the map function you are passing Promise.map, that chain is waiting on itself for each of those steps","date":"2017-12-18T02:32:19.599Z","type":"message"}
{"nick":"zsoc","message":"but each concurrent chain are not waiting on one another (or happening in any order)","date":"2017-12-18T02:32:35.203Z","type":"message"}
{"nick":"djapo","reason":"Ping timeout: 265 seconds","date":"2017-12-18T02:34:28.407Z","type":"quit"}
{"nick":"horsey","date":"2017-12-18T02:34:57.397Z","type":"join"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2017-12-18T02:35:36.443Z","type":"quit"}
{"nick":"aalex","reason":"Ping timeout: 248 seconds","date":"2017-12-18T02:36:15.881Z","type":"quit"}
{"nick":"MutterMan","date":"2017-12-18T02:36:28.177Z","type":"join"}
{"nick":"heyitsrama","date":"2017-12-18T02:36:30.484Z","type":"join"}
{"nick":"leptone","date":"2017-12-18T02:39:24.462Z","type":"join"}
{"nick":"horsey","reason":"Ping timeout: 272 seconds","date":"2017-12-18T02:40:06.109Z","type":"quit"}
{"nick":"upperdeck","reason":"Read error: Connection reset by peer","date":"2017-12-18T02:40:06.437Z","type":"quit"}
{"nick":"orbyt_","date":"2017-12-18T02:42:27.744Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 276 seconds","date":"2017-12-18T02:42:50.138Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-12-18T02:43:54.430Z","type":"join"}
{"nick":"leptone","reason":"Ping timeout: 265 seconds","date":"2017-12-18T02:44:08.451Z","type":"quit"}
{"nick":"upperdeck","date":"2017-12-18T02:44:58.145Z","type":"join"}
{"nick":"gli","date":"2017-12-18T02:46:30.002Z","type":"join"}
{"nick":"Zamerick_","date":"2017-12-18T02:47:44.805Z","type":"join"}
{"nick":"xNinjaDNT","reason":"Quit: ZNC 1.6.5+deb2build2 - http://znc.in","date":"2017-12-18T02:50:08.723Z","type":"quit"}
{"nick":"xNinjaDNT","date":"2017-12-18T02:50:40.500Z","type":"join"}
{"nick":"HPH^","reason":"Ping timeout: 248 seconds","date":"2017-12-18T02:50:41.498Z","type":"quit"}
{"nick":"FishPencil","message":"Well right now I have: https://gist.github.com/anonymous/b9e8aac4bb2c89f3b925e6dcb0c459fd but it's not working","date":"2017-12-18T02:51:41.016Z","type":"message"}
{"nick":"chjj","date":"2017-12-18T02:52:15.086Z","type":"join"}
{"nick":"chjj","reason":"Client Quit","date":"2017-12-18T02:53:11.548Z","type":"quit"}
{"nick":"piyer","date":"2017-12-18T02:53:31.353Z","type":"join"}
{"nick":"chjj","date":"2017-12-18T02:54:00.134Z","type":"join"}
{"nick":"zsoc","message":"!not working @ fishpencil","date":"2017-12-18T02:54:06.148Z","type":"message"}
{"nick":"ecmabot","message":"fishpencil: What do you mean it doesn't work? Is it unemployed? What happens when you try to run it? What's the output? What's the error message? What did you want or expect to happen?","date":"2017-12-18T02:54:06.476Z","type":"message"}
{"nick":"piyer","reason":"Read error: Connection reset by peer","date":"2017-12-18T02:54:57.941Z","type":"quit"}
{"nick":"piyer","date":"2017-12-18T02:55:41.639Z","type":"join"}
{"nick":"zsoc","message":"oh man, no no no","date":"2017-12-18T02:55:57.456Z","type":"message"}
{"nick":"zsoc","message":"FishPencil: so line 7 is running before any request is sent anywhere or anything does anything","date":"2017-12-18T02:56:26.186Z","type":"message"}
{"nick":"zsoc","message":"!event loop @ FishPencil","date":"2017-12-18T02:56:29.945Z","type":"message"}
{"nick":"ecmabot","message":"FishPencil: https://nodesource.com/blog/understanding-the-nodejs-event-loop ; https://www.youtube.com/watch?v=8aGhZQkoFbQ Philip Roberts: What the heck is the event loop anyway? | JSConf EU 2014","date":"2017-12-18T02:56:30.503Z","type":"message"}
{"nick":"zsoc","message":"specifically that video, it's like 30 or 40 minutes but it will help conceptually with understanding an event loop","date":"2017-12-18T02:56:46.572Z","type":"message"}
{"nick":"wonko7","date":"2017-12-18T02:57:02.525Z","type":"join"}
{"nick":"zsoc","message":"also that assignment is a global (well, module scoped) var that is being overwritten in an awkward way","date":"2017-12-18T02:57:23.601Z","type":"message"}
{"nick":"zsoc","message":"FishPencil: try something like this, for now, conceptually: https://gist.github.com/jkantr/1461d87be6c2328a4f7aea95dfd297ad","date":"2017-12-18T02:58:54.190Z","type":"message"}
{"nick":"zsoc","message":"but i def suggest cheerio if you're going to try to parse the dom","date":"2017-12-18T02:59:07.181Z","type":"message"}
{"nick":"FishPencil","message":"I would but I need to get something within a script block","date":"2017-12-18T02:59:51.326Z","type":"message"}
{"nick":"zsoc","message":"Okay, so try String#match then and see if that does what you need","date":"2017-12-18T03:00:22.438Z","type":"message"}
{"nick":"zsoc","message":"moving the console log to somewhere like that will at least get you output","date":"2017-12-18T03:00:33.301Z","type":"message"}
{"nick":"ljharb","message":"!regex html @ FishPencil","date":"2017-12-18T03:00:35.761Z","type":"message"}
{"nick":"ecmabot","message":"FishPencil: http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454","date":"2017-12-18T03:00:35.922Z","type":"message"}
{"nick":"zsoc","message":"well, in theory if he can treat the page source as a long string and extract a very specific pattern, he doesn't need to parse html/xml","date":"2017-12-18T03:01:27.577Z","type":"message"}
{"nick":"zsoc","message":"albeit that would be a rare scenario...","date":"2017-12-18T03:01:37.623Z","type":"message"}
{"nick":"ljharb","message":"\"pattern\" is parsing it.","date":"2017-12-18T03:02:07.354Z","type":"message"}
{"nick":"ljharb","message":"or rather, failing to do so because you can't parse non-regular text with regex :-p","date":"2017-12-18T03:02:41.662Z","type":"message"}
{"nick":"aalex","date":"2017-12-18T03:02:43.438Z","type":"join"}
{"nick":"xNinjaDNT","reason":"Quit: ZNC 1.6.5+deb2build2 - http://znc.in","date":"2017-12-18T03:03:47.096Z","type":"quit"}
{"nick":"zsoc","message":"It may very well be containing regular text. I mean using a dom parser won't help him if he needs random text in a scrip","date":"2017-12-18T03:04:13.171Z","type":"message"}
{"nick":"zsoc","message":"*script tag","date":"2017-12-18T03:04:20.200Z","type":"message"}
{"nick":"samsch","reason":"Quit: Leaving","date":"2017-12-18T03:04:39.440Z","type":"quit"}
{"nick":"ljharb","message":"you'd still need one to get the script tag.","date":"2017-12-18T03:04:53.035Z","type":"message"}
{"nick":"zsoc","message":"okay that's not entirely true.. yeah i guess you can still find('script')","date":"2017-12-18T03:05:01.080Z","type":"message"}
{"nick":"xNinjaDNT","date":"2017-12-18T03:05:09.417Z","type":"join"}
{"nick":"smccarthy","date":"2017-12-18T03:05:53.477Z","type":"join"}
{"nick":"zsoc","message":"might have to turn off xmlmode tho in cheerio for that to even work","date":"2017-12-18T03:05:56.939Z","type":"message"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-18T03:06:42.537Z","type":"quit"}
{"nick":"aalex","reason":"Ping timeout: 240 seconds","date":"2017-12-18T03:06:48.501Z","type":"quit"}
{"nick":"zsoc","message":"otherwise the script tag won't contain text.. it will contain whatever the heck elements the dom consider it as having","date":"2017-12-18T03:06:52.651Z","type":"message"}
{"nick":"Hoffman","reason":"Ping timeout: 256 seconds","date":"2017-12-18T03:07:29.520Z","type":"quit"}
{"nick":"xNinjaDNT","reason":"Client Quit","date":"2017-12-18T03:08:04.824Z","type":"quit"}
{"nick":"zsoc","message":"why does node take a yeaarrrrrrrrrr to build. I have a ryzen 7 1700 sitting in a box behind me because time. But I think if I consider the time wasted waiting for compiling things i could have installed it a week ago...","date":"2017-12-18T03:08:12.190Z","type":"message"}
{"nick":"xNinjaDNT","date":"2017-12-18T03:08:58.438Z","type":"join"}
{"nick":"HPH^","date":"2017-12-18T03:10:12.550Z","type":"join"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-12-18T03:10:28.980Z","type":"quit"}
{"nick":"piyer","date":"2017-12-18T03:11:16.724Z","type":"join"}
{"nick":"xNinjaDNT","reason":"Quit: ZNC 1.6.5+deb2build2 - http://znc.in","date":"2017-12-18T03:15:40.897Z","type":"quit"}
{"nick":"munichlinux","date":"2017-12-18T03:15:58.264Z","type":"join"}
{"nick":"xNinjaDNT","date":"2017-12-18T03:16:04.897Z","type":"join"}
{"nick":"piyer","reason":"Ping timeout: 272 seconds","date":"2017-12-18T03:16:12.220Z","type":"quit"}
{"nick":"kliq","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-18T03:17:43.484Z","type":"quit"}
{"nick":"munichlinux","reason":"Read error: Connection reset by peer","date":"2017-12-18T03:17:58.635Z","type":"quit"}
{"nick":"piyer","date":"2017-12-18T03:18:33.174Z","type":"join"}
{"nick":"bwn","reason":"Read error: Connection reset by peer","date":"2017-12-18T03:19:05.847Z","type":"quit"}
{"nick":"tinyV0id","reason":"Quit: My PC went to BSOD","date":"2017-12-18T03:20:00.839Z","type":"quit"}
{"nick":"MutterMan","reason":"Quit: Mutter: www.mutterirc.com","date":"2017-12-18T03:20:23.463Z","type":"quit"}
{"nick":"himanshu","date":"2017-12-18T03:23:00.462Z","type":"join"}
{"nick":"bwn","date":"2017-12-18T03:23:52.534Z","type":"join"}
{"nick":"FishPencil","message":"zsoc: your gist is actually working with the search, but how can I use str outside of the fetch context?","date":"2017-12-18T03:23:58.289Z","type":"message"}
{"nick":"zsoc","message":"FishPencil: you don't.. your problem is not a scope one","date":"2017-12-18T03:24:13.252Z","type":"message"}
{"nick":"zsoc","message":"it is a conceptual async one","date":"2017-12-18T03:24:20.990Z","type":"message"}
{"nick":"zsoc","message":"if you make another gist also showing the rest of the 'context' you're trying to involve it in....","date":"2017-12-18T03:24:31.566Z","type":"message"}
{"nick":"himanshu","reason":"Client Quit","date":"2017-12-18T03:25:10.452Z","type":"quit"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-12-18T03:25:25.813Z","type":"quit"}
{"nick":"zsoc","message":"but something like Promise.map(arrOfUrls, url => thatPromiseChainInYourGist, { concurrency: 8 }).then((arrayOfStringReturns) => { ...","date":"2017-12-18T03:25:30.346Z","type":"message"}
{"nick":"zsoc","message":"only take out the console.log part.. just return the matched string","date":"2017-12-18T03:25:55.698Z","type":"message"}
{"nick":"piyer","date":"2017-12-18T03:26:13.552Z","type":"join"}
{"nick":"Zamerick_","reason":"Ping timeout: 272 seconds","date":"2017-12-18T03:26:20.095Z","type":"quit"}
{"nick":"zsoc","message":"that will iterator over your urls, returning a chain for each.. each chain resulting in a matched string... resolving to a promise of an array of those strings, hence the above code","date":"2017-12-18T03:26:32.492Z","type":"message"}
{"nick":"Flynnn","reason":"Quit: Auf Wiedersehen!","date":"2017-12-18T03:26:47.525Z","type":"quit"}
{"nick":"Flynnn","date":"2017-12-18T03:28:27.883Z","type":"join"}
{"nick":"FishPencil","message":"zsoc: This sums the idea up I think: https://gist.github.com/anonymous/d8f0d382122df43e526d7da8f84bbcbe","date":"2017-12-18T03:29:21.047Z","type":"message"}
{"nick":"zsoc","message":"no for loop","date":"2017-12-18T03:30:15.618Z","type":"message"}
{"nick":"zsoc","message":"for loops are synchronous","date":"2017-12-18T03:30:20.500Z","type":"message"}
{"nick":"zsoc","message":"what you want is a transformation.. you have n things and you want an array with the same number of results (that's what map does)","date":"2017-12-18T03:30:44.792Z","type":"message"}
{"nick":"SenasOzys_","reason":"Read error: Connection reset by peer","date":"2017-12-18T03:30:48.362Z","type":"quit"}
{"nick":"SenasOzys","date":"2017-12-18T03:31:02.044Z","type":"join"}
{"nick":"Phloxx","reason":"Ping timeout: 265 seconds","date":"2017-12-18T03:33:26.589Z","type":"quit"}
{"nick":"Phloxx","date":"2017-12-18T03:34:24.492Z","type":"join"}
{"nick":"zsoc","message":"FishPencil: https://gist.github.com/jkantr/368e23775f4d82b14e90c47365410378","date":"2017-12-18T03:35:22.658Z","type":"message"}
{"nick":"zsoc","message":"there's much more readable ways to do this.. you could break those steps down into individual functions","date":"2017-12-18T03:35:32.116Z","type":"message"}
{"nick":"knoxy","date":"2017-12-18T03:36:21.520Z","type":"join"}
{"nick":"knoxy","reason":"Remote host closed the connection","date":"2017-12-18T03:36:27.571Z","type":"quit"}
{"nick":"zsoc","message":"you can also make the whole thing less readable by giving the first chain that creates the url array directly as the first argument of Promise.map: https://gist.github.com/jkantr/c15917078246c1f7465aec9d63f9b5c9","date":"2017-12-18T03:37:31.941Z","type":"message"}
{"nick":"zsoc","message":"but i assume that isn't your goal","date":"2017-12-18T03:37:35.502Z","type":"message"}
{"nick":"zhangyu","date":"2017-12-18T03:38:34.929Z","type":"join"}
{"nick":"piyer","reason":"Ping timeout: 260 seconds","date":"2017-12-18T03:39:56.509Z","type":"quit"}
{"nick":"Flynnn","reason":"Quit: Auf Wiedersehen!","date":"2017-12-18T03:40:12.063Z","type":"quit"}
{"nick":"mrmoneyc_","reason":"Remote host closed the connection","date":"2017-12-18T03:40:15.366Z","type":"quit"}
{"nick":"Flynnn","date":"2017-12-18T03:41:27.917Z","type":"join"}
{"nick":"webbb","reason":"Remote host closed the connection","date":"2017-12-18T03:41:42.769Z","type":"quit"}
{"nick":"zsoc","message":"oh I missed you wanting to stuff the index onto the end of the url","date":"2017-12-18T03:41:43.861Z","type":"message"}
{"nick":"zsoc","message":"oh n_pages is a number, duh","date":"2017-12-18T03:43:14.494Z","type":"message"}
{"nick":"zsoc","message":"FishPencil: https://gist.github.com/jkantr/368e23775f4d82b14e90c47365410378","date":"2017-12-18T03:44:27.556Z","type":"message"}
{"nick":"Flynnn","reason":"Quit: Auf Wiedersehen!","date":"2017-12-18T03:46:56.036Z","type":"quit"}
{"nick":"pilne","reason":"Quit: Quitting!","date":"2017-12-18T03:47:53.262Z","type":"quit"}
{"nick":"Flynnn","date":"2017-12-18T03:51:27.817Z","type":"join"}
{"nick":"piyer","date":"2017-12-18T03:51:45.780Z","type":"join"}
{"nick":"beefjoe","date":"2017-12-18T03:51:57.955Z","type":"join"}
{"nick":"Zamerick_","date":"2017-12-18T03:52:42.786Z","type":"join"}
{"nick":"piyer","reason":"Client Quit","date":"2017-12-18T03:52:54.374Z","type":"quit"}
{"nick":"grapheti","reason":"Remote host closed the connection","date":"2017-12-18T03:53:57.465Z","type":"quit"}
{"nick":"hallcyon","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2017-12-18T03:55:07.390Z","type":"quit"}
{"nick":"happyhippo","reason":"Ping timeout: 264 seconds","date":"2017-12-18T03:55:33.314Z","type":"quit"}
{"nick":"FishPencil","message":"zsoc: So you basically have to keep nesting things with async?","date":"2017-12-18T03:55:52.367Z","type":"message"}
{"nick":"zsoc","message":"They aren't nested, it's one long chain","date":"2017-12-18T03:56:09.002Z","type":"message"}
{"nick":"FishPencil","message":"Could you make the map its own function and call that?","date":"2017-12-18T03:56:43.910Z","type":"message"}
{"nick":"zsoc","message":"you need a callback. Whether that's using literal callbacks (nesting functions), promise chains, or async/await, or some other stream or event based abstraction... you have to be able to communicate the state of your application internally somehow","date":"2017-12-18T03:56:58.253Z","type":"message"}
{"nick":"zsoc","message":"Sure","date":"2017-12-18T03:57:00.807Z","type":"message"}
{"nick":"bwn","reason":"Quit: Quit","date":"2017-12-18T03:58:58.294Z","type":"quit"}
{"nick":"zsoc","message":"FishPencil: equivalent: https://gist.github.com/jkantr/368e23775f4d82b14e90c47365410378","date":"2017-12-18T03:58:59.698Z","type":"message"}
{"nick":"FishPencil","message":"I like/understand that way more","date":"2017-12-18T03:59:24.181Z","type":"message"}
{"nick":"zsoc","message":"there were typos, refresh","date":"2017-12-18T03:59:29.856Z","type":"message"}
{"nick":"zsoc","message":"but yes sure :) javascript has first class functions.. you can compose as you deem reasonable","date":"2017-12-18T03:59:49.228Z","type":"message"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2017-12-18T04:00:11.259Z","type":"quit"}
{"nick":"FishPencil","message":"Are older function(var) {} ever used in node lol, I see so many arrow functions","date":"2017-12-18T04:01:00.018Z","type":"message"}
{"nick":"heyitsrama","date":"2017-12-18T04:01:55.693Z","type":"join"}
{"nick":"mrmoneyc","date":"2017-12-18T04:02:03.988Z","type":"join"}
{"nick":"FishPencil","message":"Why did you do this?  (_, i)","date":"2017-12-18T04:02:26.727Z","type":"message"}
{"nick":"leptone","date":"2017-12-18T04:02:28.416Z","type":"join"}
{"nick":"tacoboy","reason":"Remote host closed the connection","date":"2017-12-18T04:02:41.237Z","type":"quit"}
{"nick":"devsnek","message":"FishPencil: ignoring the first arg","date":"2017-12-18T04:04:53.912Z","type":"message"}
{"nick":"hh","date":"2017-12-18T04:04:54.979Z","type":"join"}
{"nick":"devsnek","message":"_ is a common variable for that","date":"2017-12-18T04:05:03.638Z","type":"message"}
{"nick":"hh","reason":"Client Quit","date":"2017-12-18T04:05:16.929Z","type":"quit"}
{"nick":"devsnek","message":"i think at some point we're supposed to be able to do `(, i)` but not yet","date":"2017-12-18T04:05:18.180Z","type":"message"}
{"nick":"leptone","reason":"Ping timeout: 265 seconds","date":"2017-12-18T04:07:16.425Z","type":"quit"}
{"nick":"zsoc","reason":"Ping timeout: 268 seconds","date":"2017-12-18T04:08:55.952Z","type":"quit"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2017-12-18T04:09:40.019Z","type":"quit"}
{"nick":"Soopaman","reason":"Quit: Leaving.","date":"2017-12-18T04:10:16.181Z","type":"quit"}
{"nick":"heyitsrama","date":"2017-12-18T04:10:50.812Z","type":"join"}
{"nick":"zsoc","date":"2017-12-18T04:10:51.580Z","type":"join"}
{"nick":"zsoc","message":"sorry","date":"2017-12-18T04:11:07.267Z","type":"message"}
{"nick":"zsoc","message":"seems snek answered you tho","date":"2017-12-18T04:11:35.242Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 250 seconds","date":"2017-12-18T04:11:41.742Z","type":"quit"}
{"nick":"zsoc","message":"FishPencil: because we're creating an array in place, the elements have no values (they are undefined), so we're ignoring it and just using the second arg (the index). You could just as easily do (v, i) or whatever","date":"2017-12-18T04:12:17.754Z","type":"message"}
{"nick":"Cabanossi","date":"2017-12-18T04:13:55.959Z","type":"join"}
{"nick":"zsoc","message":"in fact (_, i) is probably bad because it shadows the convention some common utils use like lodash, so i guess yeah don't do that","date":"2017-12-18T04:15:11.205Z","type":"message"}
{"nick":"bwn","date":"2017-12-18T04:15:13.473Z","type":"join"}
{"nick":"Zamerick_","reason":"Ping timeout: 256 seconds","date":"2017-12-18T04:15:29.483Z","type":"quit"}
{"nick":"ljharb","message":"nah, it's fine. no need for lodash anyways :-)","date":"2017-12-18T04:16:32.956Z","type":"message"}
{"nick":"zsoc","message":"i mean.. you're right","date":"2017-12-18T04:16:47.602Z","type":"message"}
{"nick":"zsoc","message":"but especially in collab environments or dealing with even slightly legacy code.. it's probably a bad idea to get accustomed to using _ as an argument identifier :p","date":"2017-12-18T04:17:13.088Z","type":"message"}
{"nick":"qerolt","date":"2017-12-18T04:19:30.511Z","type":"join"}
{"nick":"qerolt_","date":"2017-12-18T04:19:35.146Z","type":"join"}
{"nick":"qerolt_","reason":"Remote host closed the connection","date":"2017-12-18T04:19:45.743Z","type":"quit"}
{"nick":"sterns","reason":"Read error: Connection reset by peer","date":"2017-12-18T04:21:23.638Z","type":"quit"}
{"nick":"sterns","date":"2017-12-18T04:22:18.475Z","type":"join"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-12-18T04:23:06.306Z","type":"quit"}
{"nick":"BoneTone","reason":"Ping timeout: 256 seconds","date":"2017-12-18T04:23:25.553Z","type":"quit"}
{"nick":"markasoftware","message":"is there any equivalent of /dev/null for node.js streams?","date":"2017-12-18T04:23:47.506Z","type":"message"}
{"nick":"markasoftware","message":"a stream i can write to where all data is discarded?","date":"2017-12-18T04:23:52.453Z","type":"message"}
{"nick":"_main_","date":"2017-12-18T04:24:08.151Z","type":"join"}
{"nick":"zsoc","message":"uh","date":"2017-12-18T04:24:11.076Z","type":"message"}
{"nick":"zsoc","message":"i mean you could open a writeFile to /dev/null ? xD","date":"2017-12-18T04:24:37.238Z","type":"message"}
{"nick":"zsoc","message":"pipe to stream that doesn't handle data events?","date":"2017-12-18T04:25:33.552Z","type":"message"}
{"nick":"__main__","reason":"Ping timeout: 255 seconds","date":"2017-12-18T04:27:38.116Z","type":"quit"}
{"nick":"mrmoneyc","reason":"Remote host closed the connection","date":"2017-12-18T04:27:50.490Z","type":"quit"}
{"nick":"_main_","new_nick":"__main__","date":"2017-12-18T04:28:03.755Z","type":"nick"}
{"nick":"Planet_EN","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-18T04:28:44.242Z","type":"quit"}
{"nick":"FishPencil","message":"Why is this not returning ['1554']: console.log(\"p(1, 1554);\".match(/(\\d+)\\)/g));, it's returning [ '1554)' ]","date":"2017-12-18T04:31:26.102Z","type":"message"}
{"nick":"GreenJello","message":"FishPencil, remove the /g","date":"2017-12-18T04:32:14.903Z","type":"message"}
{"nick":"GreenJello","message":"FishPencil, and then it returns [wholeMatch, firstCaptureGroup] or null","date":"2017-12-18T04:32:37.833Z","type":"message"}
{"nick":"zxc","reason":"Read error: Connection reset by peer","date":"2017-12-18T04:33:37.198Z","type":"quit"}
{"nick":"ljharb","message":"markasoftware: just write to a stream that has no consumers","date":"2017-12-18T04:34:50.880Z","type":"message"}
{"nick":"horsey","date":"2017-12-18T04:35:48.256Z","type":"join"}
{"nick":"markasoftware","message":"basically i want to use the readline module, but not have an output for it","date":"2017-12-18T04:36:50.852Z","type":"message"}
{"nick":"markasoftware","message":"because im prompting for passwords","date":"2017-12-18T04:36:56.845Z","type":"message"}
{"nick":"melvster","reason":"Ping timeout: 264 seconds","date":"2017-12-18T04:36:57.249Z","type":"quit"}
{"nick":"markasoftware","message":"but doing it with a random writeable stream i created is causing non-ascii character output now","date":"2017-12-18T04:37:09.285Z","type":"message"}
{"nick":"markasoftware","message":"or amybe it's just because im doing it from the REPL","date":"2017-12-18T04:38:00.392Z","type":"message"}
{"nick":"smccarthy","date":"2017-12-18T04:38:09.284Z","type":"quit"}
{"nick":"GreenJello","message":"markasoftware, yeah, don't use readline in the repl","date":"2017-12-18T04:38:47.303Z","type":"message"}
{"nick":"GreenJello","message":"kinda silly","date":"2017-12-18T04:38:52.423Z","type":"message"}
{"nick":"plexigras","reason":"Ping timeout: 255 seconds","date":"2017-12-18T04:39:13.882Z","type":"quit"}
{"nick":"wonko7","reason":"Ping timeout: 248 seconds","date":"2017-12-18T04:39:27.837Z","type":"quit"}
{"nick":"horsey","reason":"Ping timeout: 268 seconds","date":"2017-12-18T04:40:22.633Z","type":"quit"}
{"nick":"zxc","date":"2017-12-18T04:40:58.634Z","type":"join"}
{"nick":"plexigras","date":"2017-12-18T04:41:33.722Z","type":"join"}
{"nick":"zxc","reason":"Client Quit","date":"2017-12-18T04:41:37.182Z","type":"quit"}
{"nick":"Flynnn","reason":"Quit: Auf Wiedersehen!","date":"2017-12-18T04:42:08.457Z","type":"quit"}
{"nick":"markasoftware","message":"so, i can create a readline interface without specifying the `output`...does it default to process.stdout or does that just mean no output?","date":"2017-12-18T04:42:35.952Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2017-12-18T04:43:34.321Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-12-18T04:43:58.036Z","type":"join"}
{"nick":"GreenJello","message":"markasoftware, you're just trying to do a password input?","date":"2017-12-18T04:44:04.938Z","type":"message"}
{"nick":"markasoftware","message":"yeah","date":"2017-12-18T04:44:10.457Z","type":"message"}
{"nick":"markasoftware","message":"multiple secret things which must not be displayed","date":"2017-12-18T04:44:17.200Z","type":"message"}
{"nick":"GreenJello","message":"google \"npm password prompt\"","date":"2017-12-18T04:44:29.065Z","type":"message"}
{"nick":"markasoftware","message":"for some reason the `line` event is firing even though I haven't entered anything...","date":"2017-12-18T04:44:43.179Z","type":"message"}
{"nick":"markasoftware","message":"ok thanks GreenJello there seem to be some good packages there","date":"2017-12-18T04:45:18.725Z","type":"message"}
{"nick":"GreenJello","message":"markasoftware, is this still in the repl?","date":"2017-12-18T04:46:43.693Z","type":"message"}
{"nick":"markasoftware","message":"GreenJello: not just in repl, no","date":"2017-12-18T04:46:53.149Z","type":"message"}
{"nick":"beefjoe","reason":"Remote host closed the connection","date":"2017-12-18T04:47:05.883Z","type":"quit"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-18T04:48:00.492Z","type":"quit"}
{"nick":"markasoftware","message":"actually maybe just in repl","date":"2017-12-18T04:48:08.247Z","type":"message"}
{"nick":"markasoftware","message":"im not sure anymore","date":"2017-12-18T04:48:09.913Z","type":"message"}
{"nick":"zxc","date":"2017-12-18T04:55:29.549Z","type":"join"}
{"nick":"kliq","date":"2017-12-18T04:55:41.223Z","type":"join"}
{"nick":"howdoi","date":"2017-12-18T04:56:05.336Z","type":"join"}
{"nick":"markasoftware","message":"nevermind, it does work fine outside of repl","date":"2017-12-18T04:56:21.722Z","type":"message"}
{"nick":"markasoftware","message":"when not listing output it works as intended","date":"2017-12-18T04:56:27.949Z","type":"message"}
{"nick":"Cabanoss-","date":"2017-12-18T04:58:00.231Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 276 seconds","date":"2017-12-18T04:58:02.263Z","type":"quit"}
{"nick":"Cabanoss-","new_nick":"Cabanossi","date":"2017-12-18T04:58:34.212Z","type":"nick"}
{"nick":"howdoi","message":"what could be the reasons when _headers are set and not headers for res.","date":"2017-12-18T04:58:37.032Z","type":"message"}
{"nick":"howdoi","message":"?","date":"2017-12-18T04:58:38.901Z","type":"message"}
{"nick":"qerolt","reason":"Quit: Leaving","date":"2017-12-18T05:00:19.625Z","type":"quit"}
{"nick":"PeDr0_HuG0","reason":"Ping timeout: 240 seconds","date":"2017-12-18T05:01:27.827Z","type":"quit"}
{"nick":"theRealGent","reason":"Ping timeout: 255 seconds","date":"2017-12-18T05:03:11.113Z","type":"quit"}
{"nick":"leptone","date":"2017-12-18T05:05:47.251Z","type":"join"}
{"nick":"wonko7","date":"2017-12-18T05:06:48.401Z","type":"join"}
{"nick":"dconroy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-18T05:09:33.441Z","type":"quit"}
{"nick":"kliq","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-18T05:10:14.138Z","type":"quit"}
{"nick":"leptone","reason":"Ping timeout: 255 seconds","date":"2017-12-18T05:10:23.113Z","type":"quit"}
{"nick":"sstercan","reason":"Ping timeout: 240 seconds","date":"2017-12-18T05:11:08.898Z","type":"quit"}
{"nick":"ShekharReddy","date":"2017-12-18T05:14:29.159Z","type":"quit"}
{"nick":"Flynnn","date":"2017-12-18T05:17:28.339Z","type":"join"}
{"nick":"zsocw","date":"2017-12-18T05:20:05.503Z","type":"join"}
{"nick":"zsoc","reason":"Ping timeout: 256 seconds","date":"2017-12-18T05:23:29.534Z","type":"quit"}
{"nick":"upperdeck","reason":"Read error: Connection reset by peer","date":"2017-12-18T05:27:10.543Z","type":"quit"}
{"nick":"zsocw","reason":"Ping timeout: 256 seconds","date":"2017-12-18T05:27:27.440Z","type":"quit"}
{"nick":"leptone","date":"2017-12-18T05:28:41.468Z","type":"join"}
{"nick":"melvster","date":"2017-12-18T05:30:34.900Z","type":"join"}
{"nick":"zsoc","date":"2017-12-18T05:30:44.438Z","type":"join"}
{"nick":"upperdeck","date":"2017-12-18T05:31:46.429Z","type":"join"}
{"nick":"donflopez","date":"2017-12-18T05:34:11.134Z","type":"join"}
{"nick":"kakashiAL","reason":"Ping timeout: 248 seconds","date":"2017-12-18T05:34:57.537Z","type":"quit"}
{"nick":"toi","date":"2017-12-18T05:38:09.539Z","type":"join"}
{"nick":"aalex","date":"2017-12-18T05:38:39.199Z","type":"join"}
{"nick":"mrmoneyc","date":"2017-12-18T05:38:51.482Z","type":"join"}
{"nick":"Raheel_","date":"2017-12-18T05:40:56.158Z","type":"join"}
{"nick":"aalex","reason":"Ping timeout: 264 seconds","date":"2017-12-18T05:43:33.283Z","type":"quit"}
{"nick":"Raheel_","reason":"Client Quit","date":"2017-12-18T05:43:44.782Z","type":"quit"}
{"nick":"koodi","reason":"Quit: WeeChat 1.4","date":"2017-12-18T05:48:50.617Z","type":"quit"}
{"nick":"led_ir22","reason":"Quit: led_ir22","date":"2017-12-18T05:49:02.984Z","type":"quit"}
{"nick":"cchoi","reason":"Ping timeout: 248 seconds","date":"2017-12-18T05:50:24.029Z","type":"quit"}
{"nick":"karmahacker","date":"2017-12-18T05:51:47.756Z","type":"join"}
{"nick":"leptone","reason":"Remote host closed the connection","date":"2017-12-18T05:52:39.551Z","type":"quit"}
{"nick":"cads","message":"Hey guys, say I have to fetch data from a paginated json api, so I'm getting, say, 20 requests of 50 items each from some base URL using  (page_number) => `/api/endpoint.json?page_items=50&offset=${50 * page_number}`. So now I have a list of 20 promises which will eventually return data.","date":"2017-12-18T05:53:32.477Z","type":"message"}
{"nick":"cads","message":"That data will eventually have to be loaded into a database, and what I need to do at this point is decide how to handle errors - do I commit data as soon as I start getting it back? do I stop committing data if some response times out? If I try to recover from an error do I try to to save that failing response or do I start back from page zero. I can think of reasons for each scenario, and ways to do them with promises","date":"2017-12-18T05:55:49.831Z","type":"message"}
{"nick":"h12o","date":"2017-12-18T05:56:11.108Z","type":"join"}
{"nick":"marthinal","date":"2017-12-18T05:56:57.859Z","type":"join"}
{"nick":"modernpacifist","message":"Depends on a combination of user experience, data integrity and amount of data being captured","date":"2017-12-18T05:57:34.702Z","type":"message"}
{"nick":"cads","message":"right","date":"2017-12-18T05:58:38.656Z","type":"message"}
{"nick":"cads","message":"certain scenarios are hard to encode with promises, such as the scenario where you make each request sequentially and wait for the previous request to complete before making the new one. I was wondering if something like streams might be more useful for that case in particular, where for example you will make k attempts to get page n and only attempt to get page n+1 if you finally get page n.","date":"2017-12-18T05:59:41.016Z","type":"message"}
{"nick":"GreenJello","message":"also depends on what happens when your users request data that's in progress of being fetched","date":"2017-12-18T05:59:46.951Z","type":"message"}
{"nick":"modernpacifist","message":"I would probably attempt to design the import such that it doesn't matter if I accidentially import the same thing multiple times (i.e. check before store or upsert - for safety sake). Then potentially buffer all the data locally into a flat file or something - i.e. wait until I've got everything I need from the remote server before proceeding further","date":"2017-12-18T06:00:00.442Z","type":"message"}
{"nick":"cads","message":"I think that scenario could be done with two nested for loops and some async/await magic","date":"2017-12-18T06:00:13.834Z","type":"message"}
{"nick":"BoneTone","date":"2017-12-18T06:00:27.509Z","type":"join"}
{"nick":"cads","message":"or use a stream abstraction rather than manually chaining promises","date":"2017-12-18T06:00:32.550Z","type":"message"}
{"nick":"h12o","reason":"Ping timeout: 272 seconds","date":"2017-12-18T06:00:52.105Z","type":"quit"}
{"nick":"modernpacifist","message":"Could work - it depends on how screwed you are if there is an issue during the fetch from the remote source","date":"2017-12-18T06:00:59.395Z","type":"message"}
{"nick":"modernpacifist","message":"i.e. does fetching half the data successfully and storing it cause issues in your application (incorrect calculations or whatever)","date":"2017-12-18T06:01:21.105Z","type":"message"}
{"nick":"GreenJello","message":"a queue might be good here. You can define concurrency for doing fetches, and if one fails, you insert it back into the queue","date":"2017-12-18T06:01:38.594Z","type":"message"}
{"nick":"GreenJello","message":"and you can also track total failures, and abort the process","date":"2017-12-18T06:01:58.827Z","type":"message"}
{"nick":"orbyt_","date":"2017-12-18T06:02:01.708Z","type":"join"}
{"nick":"cads","message":"ie, I think streams would better encode the \"retry k times\" logic - I'm confident I could whip that up using promises, but I'm sure it'd not be pretty, especially if I'm threading error retries and error reporting throughout the promise chain","date":"2017-12-18T06:02:17.902Z","type":"message"}
{"nick":"modernpacifist","message":"Well you could have your page aware data fetcher simply emulate a read stream","date":"2017-12-18T06:02:59.872Z","type":"message"}
{"nick":"modernpacifist","message":"The consumers then don't really care what logic its following - just that it generates objects fetched from the remote server","date":"2017-12-18T06:03:19.188Z","type":"message"}
{"nick":"modernpacifist","message":"Its probably also worth mentioning that depending on your backend database, you may benefit from some buffering for bulk insert","date":"2017-12-18T06:03:51.363Z","type":"message"}
{"nick":"cads","message":"looking up the streams api","date":"2017-12-18T06:03:52.329Z","type":"message"}
{"nick":"GreenJello","message":"well, the built in stream apis aren't good. You probably want observables (e.g. rxjs) or higher level streams (event-stream)","date":"2017-12-18T06:05:16.221Z","type":"message"}
{"nick":"cads","message":"yeah this is ugly af","date":"2017-12-18T06:05:34.264Z","type":"message"}
{"nick":"re1","date":"2017-12-18T06:05:38.979Z","type":"join"}
{"nick":"theWhisper_","reason":"Read error: Connection reset by peer","date":"2017-12-18T06:05:39.088Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-12-18T06:05:46.464Z","type":"join"}
{"nick":"cads","message":"lol I shouldn't have to define a constructor to build a stream source! :D","date":"2017-12-18T06:06:18.838Z","type":"message"}
{"nick":"orbyt_","reason":"Ping timeout: 240 seconds","date":"2017-12-18T06:06:27.777Z","type":"quit"}
{"nick":"cads","message":"checking out observables","date":"2017-12-18T06:06:30.223Z","type":"message"}
{"nick":"shangxiao","date":"2017-12-18T06:06:56.282Z","type":"join"}
{"nick":"GreenJello","message":"rx.js has a ton of stuff in it, so you'd have to find the relevant parts","date":"2017-12-18T06:07:29.046Z","type":"message"}
{"nick":"leptone","date":"2017-12-18T06:07:49.235Z","type":"join"}
{"nick":"uptime","reason":"Changing host","date":"2017-12-18T06:09:12.995Z","type":"quit"}
{"nick":"uptime","date":"2017-12-18T06:09:13.103Z","type":"join"}
{"nick":"leptone","reason":"Remote host closed the connection","date":"2017-12-18T06:09:34.581Z","type":"quit"}
{"nick":"cads","message":"so really I could create an event stream and just subscribe the data transformation via a listener. And then error handling is a callback that gets hit when the stream enters either a recoverable or unrecoverable error state","date":"2017-12-18T06:10:19.638Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 250 seconds","date":"2017-12-18T06:10:51.782Z","type":"quit"}
{"nick":"Flynnn","reason":"Quit: Auf Wiedersehen!","date":"2017-12-18T06:11:17.057Z","type":"quit"}
{"nick":"cads","message":"rx js looks futuristic and old at the same time :D","date":"2017-12-18T06:11:36.111Z","type":"message"}
{"nick":"cads","message":"like the international space station, or Q promises","date":"2017-12-18T06:12:07.642Z","type":"message"}
{"nick":"cads","message":"I'm sorry, I meant bluebird","date":"2017-12-18T06:12:19.732Z","type":"message"}
{"nick":"cads","message":"GreenJello, have you worked much with async/await?","date":"2017-12-18T06:13:01.666Z","type":"message"}
{"nick":"Cabanossi","date":"2017-12-18T06:13:06.742Z","type":"join"}
{"nick":"cads","message":"I really like this comparison of observables vs promises https://i.stack.imgur.com/Ewn3b.png","date":"2017-12-18T06:13:56.116Z","type":"message"}
{"nick":"cchoi","date":"2017-12-18T06:14:52.467Z","type":"join"}
{"nick":"GreenJello","message":"cads, yeah, I use async/await very often","date":"2017-12-18T06:15:05.837Z","type":"message"}
{"nick":"cads","message":"I think that by using an extended promise chain, you could implement all those observables features, I feel it would be error prone at the least","date":"2017-12-18T06:15:10.628Z","type":"message"}
{"nick":"cads","message":"so I'm liking this","date":"2017-12-18T06:15:20.594Z","type":"message"}
{"nick":"Flynnn","date":"2017-12-18T06:16:53.896Z","type":"join"}
{"nick":"GreenJello","message":"I don't really have any experience with observables or streams, so not sure how they compare to promises here","date":"2017-12-18T06:17:11.132Z","type":"message"}
{"nick":"BoneTone","reason":"Quit: gone","date":"2017-12-18T06:17:52.535Z","type":"quit"}
{"nick":"mezod","date":"2017-12-18T06:18:25.759Z","type":"join"}
{"nick":"re1_","date":"2017-12-18T06:18:43.032Z","type":"join"}
{"nick":"cads","message":"it looks like for long drawn out async sessions they're a useful abstraction of what actually goes on - you'll have to cancel the connection, or retry it, plus you want to define multiple subscriptions/views of the data","date":"2017-12-18T06:18:47.235Z","type":"message"}
{"nick":"cads","message":"if your use case has all that in it, then it seems like streams are the way to go","date":"2017-12-18T06:19:46.807Z","type":"message"}
{"nick":"GreenJello","message":"sounds good","date":"2017-12-18T06:20:25.573Z","type":"message"}
{"nick":"leptone","date":"2017-12-18T06:20:36.467Z","type":"join"}
{"nick":"Flynnn","reason":"Max SendQ exceeded","date":"2017-12-18T06:21:04.447Z","type":"quit"}
{"nick":"re1","reason":"Ping timeout: 256 seconds","date":"2017-12-18T06:21:17.494Z","type":"quit"}
{"nick":"BoneTone","date":"2017-12-18T06:21:19.873Z","type":"join"}
{"nick":"ShekharReddy","date":"2017-12-18T06:21:51.613Z","type":"join"}
{"nick":"Flynnn","date":"2017-12-18T06:22:11.719Z","type":"join"}
{"nick":"leptone","reason":"Remote host closed the connection","date":"2017-12-18T06:23:57.865Z","type":"quit"}
{"nick":"cads","message":"I'm really liking rxjs","date":"2017-12-18T06:26:02.923Z","type":"message"}
{"nick":"vnasibyan","date":"2017-12-18T06:26:34.203Z","type":"join"}
{"nick":"cads","message":"looks like there's an observables proposal to ecmascript, too https://github.com/tc39/proposal-observable","date":"2017-12-18T06:26:49.659Z","type":"message"}
{"nick":"Xiti","reason":"Quit: Xiti","date":"2017-12-18T06:27:43.796Z","type":"quit"}
{"nick":"Flynnn","reason":"Quit: Auf Wiedersehen!","date":"2017-12-18T06:30:46.742Z","type":"quit"}
{"nick":"mr_lou","reason":"Quit: Ex-Chat","date":"2017-12-18T06:30:56.836Z","type":"quit"}
{"nick":"lpin","date":"2017-12-18T06:33:56.256Z","type":"join"}
{"nick":"cads","message":"GreenJello, are you tempted to start using observables after learning more about them, or do you feel your existing tool comfortably handle the observables-like uses cases you're likely to need?","date":"2017-12-18T06:34:30.554Z","type":"message"}
{"nick":"led1","date":"2017-12-18T06:34:57.547Z","type":"join"}
{"nick":"cads","message":"tools*","date":"2017-12-18T06:35:07.392Z","type":"message"}
{"nick":"GreenJello","message":"cads, I haven't needed to do things like this many times, but I've used queues with promises a few times","date":"2017-12-18T06:35:56.476Z","type":"message"}
{"nick":"karmahacker","date":"2017-12-18T06:36:31.094Z","type":"quit"}
{"nick":"horsey","date":"2017-12-18T06:36:32.258Z","type":"join"}
{"nick":"GreenJello","message":"so I can't really say if promises hold up with more complex processes","date":"2017-12-18T06:36:34.285Z","type":"message"}
{"nick":"cads","message":"you mentioned queues earlier, but nothing jumped out at me - were you using a queue pattern, or a queue library?","date":"2017-12-18T06:37:01.894Z","type":"message"}
{"nick":"led1","reason":"Remote host closed the connection","date":"2017-12-18T06:38:49.158Z","type":"quit"}
{"nick":"cads","message":"here is how I do it now","date":"2017-12-18T06:39:13.646Z","type":"message"}
{"nick":"cads","message":"https://gist.github.com/maxsu/b868d80df34cde36812d4661652e56b3","date":"2017-12-18T06:39:15.609Z","type":"message"}
{"nick":"cads","message":"it is awful","date":"2017-12-18T06:39:44.835Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2017-12-18T06:40:34.361Z","type":"quit"}
{"nick":"horsey","reason":"Ping timeout: 240 seconds","date":"2017-12-18T06:40:57.831Z","type":"quit"}
{"nick":"leptone","date":"2017-12-18T06:41:16.522Z","type":"join"}
{"nick":"led1","date":"2017-12-18T06:41:26.461Z","type":"join"}
{"nick":"MOVAH09","reason":"Ping timeout: 255 seconds","date":"2017-12-18T06:42:11.186Z","type":"quit"}
{"nick":"cchoi","reason":"Ping timeout: 240 seconds","date":"2017-12-18T06:42:28.438Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-12-18T06:43:10.069Z","type":"join"}
{"nick":"fandi","date":"2017-12-18T06:44:46.484Z","type":"join"}
{"nick":"mezod","reason":"Remote host closed the connection","date":"2017-12-18T06:45:59.708Z","type":"quit"}
{"nick":"coumbole","date":"2017-12-18T06:47:12.589Z","type":"join"}
{"nick":"Hellz2K","date":"2017-12-18T06:47:17.499Z","type":"join"}
{"nick":"Hellz2K","reason":"Client Quit","date":"2017-12-18T06:47:17.567Z","type":"quit"}
{"nick":"ma12345679","date":"2017-12-18T06:47:24.315Z","type":"join"}
{"nick":"darutoko","date":"2017-12-18T06:48:29.541Z","type":"join"}
{"nick":"leptone","reason":"Remote host closed the connection","date":"2017-12-18T06:49:08.773Z","type":"quit"}
{"nick":"mynick123456798","date":"2017-12-18T06:49:32.474Z","type":"join"}
{"nick":"mynick123456798","reason":"Read error: Connection reset by peer","date":"2017-12-18T06:49:32.957Z","type":"quit"}
{"nick":"leptone","date":"2017-12-18T06:50:09.267Z","type":"join"}
{"nick":"Mamut","date":"2017-12-18T06:51:34.123Z","type":"join"}
{"nick":"sqram","reason":"Ping timeout: 240 seconds","date":"2017-12-18T06:52:57.772Z","type":"quit"}
{"nick":"rchavik","date":"2017-12-18T06:54:53.176Z","type":"join"}
{"nick":"bergice_","reason":"Quit: Connection closed for inactivity","date":"2017-12-18T06:56:11.281Z","type":"quit"}
{"nick":"ma12345679","date":"2017-12-18T06:58:44.737Z","type":"quit"}
{"nick":"roomcayz","date":"2017-12-18T06:59:03.386Z","type":"join"}
{"nick":"gerren","date":"2017-12-18T06:59:55.286Z","type":"join"}
{"nick":"donflopez","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-18T07:03:44.235Z","type":"quit"}
{"nick":"leptone","reason":"Remote host closed the connection","date":"2017-12-18T07:05:32.880Z","type":"quit"}
{"nick":"donflopez","date":"2017-12-18T07:06:13.939Z","type":"join"}
{"nick":"gerren","reason":"Remote host closed the connection","date":"2017-12-18T07:06:26.912Z","type":"quit"}
{"nick":"gerren","date":"2017-12-18T07:06:50.420Z","type":"join"}
{"nick":"gerren","reason":"Client Quit","date":"2017-12-18T07:07:03.307Z","type":"quit"}
{"nick":"aalex","date":"2017-12-18T07:10:31.256Z","type":"join"}
{"nick":"aalex","reason":"Ping timeout: 264 seconds","date":"2017-12-18T07:15:21.148Z","type":"quit"}
{"nick":"bravoslo","reason":"Remote host closed the connection","date":"2017-12-18T07:15:42.534Z","type":"quit"}
{"nick":"Mamut","reason":"Quit: I cna ytpe 300 wrods pre mniuet!!!","date":"2017-12-18T07:18:16.350Z","type":"quit"}
{"nick":"groom","date":"2017-12-18T07:22:16.427Z","type":"join"}
{"nick":"ilyaigpetrov","date":"2017-12-18T07:22:44.636Z","type":"join"}
{"nick":"vnasibyan","reason":"Quit: This computer has gone to sleep","date":"2017-12-18T07:29:17.067Z","type":"quit"}
{"nick":"dre_","date":"2017-12-18T07:29:42.488Z","type":"join"}
{"nick":"patterson","reason":"Quit: I quit","date":"2017-12-18T07:31:28.916Z","type":"quit"}
{"nick":"wonko7","reason":"Ping timeout: 264 seconds","date":"2017-12-18T07:32:45.154Z","type":"quit"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2017-12-18T07:33:11.939Z","type":"quit"}
{"nick":"vnasibyan","date":"2017-12-18T07:35:57.199Z","type":"join"}
{"nick":"shrayz","date":"2017-12-18T07:36:22.686Z","type":"join"}
{"nick":"rezetta","date":"2017-12-18T07:37:42.458Z","type":"join"}
{"nick":"BeerLover","date":"2017-12-18T07:38:45.520Z","type":"join"}
{"nick":"patterson","date":"2017-12-18T07:38:47.776Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 276 seconds","date":"2017-12-18T07:41:11.181Z","type":"quit"}
{"nick":"rendar","date":"2017-12-18T07:42:05.679Z","type":"join"}
{"nick":"bravoslo","date":"2017-12-18T07:42:17.205Z","type":"join"}
{"nick":"donguston","reason":"Ping timeout: 248 seconds","date":"2017-12-18T07:42:57.469Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-12-18T07:43:18.023Z","type":"join"}
{"nick":"daniel","date":"2017-12-18T07:49:18.146Z","type":"join"}
{"nick":"daniel","new_nick":"Guest28570","date":"2017-12-18T07:49:35.403Z","type":"nick"}
{"nick":"tvw","date":"2017-12-18T07:49:48.484Z","type":"join"}
{"nick":"MeltedLux_","reason":"Ping timeout: 240 seconds","date":"2017-12-18T07:52:28.484Z","type":"quit"}
{"nick":"bravoslo","reason":"Remote host closed the connection","date":"2017-12-18T07:53:05.703Z","type":"quit"}
{"nick":"mezod","date":"2017-12-18T07:53:34.896Z","type":"join"}
{"nick":"Guest28570","reason":"Quit: Guest28570","date":"2017-12-18T07:56:27.043Z","type":"quit"}
{"nick":"KG7QEO","reason":"Ping timeout: 248 seconds","date":"2017-12-18T07:57:52.052Z","type":"quit"}
{"nick":"wonko7","date":"2017-12-18T07:59:49.834Z","type":"join"}
