{"nick":"milardovich","date":"2017-01-08T00:00:11.135Z","type":"quit"}
{"nick":"jeffreylevesque","reason":"Ping timeout: 258 seconds","date":"2017-01-08T00:01:20.061Z","type":"quit"}
{"nick":"darkpassenger","reason":"Quit: leaving","date":"2017-01-08T00:01:46.939Z","type":"quit"}
{"nick":"modlin","reason":"Ping timeout: 240 seconds","date":"2017-01-08T00:03:13.021Z","type":"quit"}
{"nick":"zsoc","message":"Ah, apparently the prebuilt npm package exports a 'path' property.. how convenient lol","date":"2017-01-08T00:03:45.037Z","type":"message"}
{"nick":"modlin_","date":"2017-01-08T00:03:47.196Z","type":"join"}
{"nick":"braincrash","reason":"Ping timeout: 240 seconds","date":"2017-01-08T00:04:06.494Z","type":"quit"}
{"nick":"IrishGringo","date":"2017-01-08T00:04:21.010Z","type":"join"}
{"nick":"kingarmadillo","reason":"Ping timeout: 240 seconds","date":"2017-01-08T00:06:39.786Z","type":"quit"}
{"nick":"jongleberry","date":"2017-01-08T00:06:53.984Z","type":"join"}
{"nick":"cagedwisdom","reason":"Ping timeout: 245 seconds","date":"2017-01-08T00:08:07.473Z","type":"quit"}
{"nick":"bv","date":"2017-01-08T00:08:12.207Z","type":"join"}
{"nick":"ironfroggy","reason":"Remote host closed the connection","date":"2017-01-08T00:11:51.771Z","type":"quit"}
{"nick":"wadie","reason":"Quit: wadie","date":"2017-01-08T00:12:46.344Z","type":"quit"}
{"nick":"medikoo-bot","reason":"Write error: Broken pipe","date":"2017-01-08T00:12:46.560Z","type":"quit"}
{"nick":"medikoo-bot2","date":"2017-01-08T00:12:50.466Z","type":"join"}
{"nick":"boneskull","date":"2017-01-08T00:13:55.172Z","type":"join"}
{"nick":"timetocode","date":"2017-01-08T00:14:26.009Z","type":"join"}
{"nick":"kuldeep_","date":"2017-01-08T00:15:27.441Z","type":"join"}
{"nick":"howitdo","reason":"Read error: Connection reset by peer","date":"2017-01-08T00:15:43.379Z","type":"quit"}
{"nick":"boneskull","reason":"Client Quit","date":"2017-01-08T00:16:23.233Z","type":"quit"}
{"nick":"timetocode","message":"this is my index.js https://bpaste.net/show/4a8ac4b02df9  -- it basically requires and exposes a couple dozen other files. Out of all of those, there are ~2 files that I don't want built into the lib for the browser version. Is there a pretty way to do that?","date":"2017-01-08T00:16:46.154Z","type":"message"}
{"nick":"boneskull","date":"2017-01-08T00:17:10.171Z","type":"join"}
{"nick":"timetocode","message":"Also, i build my clients with browserify, so just checking typeof module === 'undefined' doesn't get me home free","date":"2017-01-08T00:17:18.949Z","type":"message"}
{"nick":"hypfer","reason":"Changing host","date":"2017-01-08T00:17:35.796Z","type":"quit"}
{"nick":"hypfer","date":"2017-01-08T00:17:35.973Z","type":"join"}
{"nick":"myndzi","message":"you need to set up a different index for the browser build","date":"2017-01-08T00:17:41.618Z","type":"message"}
{"nick":"boneskull","reason":"Client Quit","date":"2017-01-08T00:17:44.132Z","type":"quit"}
{"nick":"myndzi","message":"and put it in package.json under \"browser\"","date":"2017-01-08T00:17:49.233Z","type":"message"}
{"nick":"timetocode","message":"i had no idea that was a thing","date":"2017-01-08T00:18:19.994Z","type":"message"}
{"nick":"timetocode","message":"thanks!!!","date":"2017-01-08T00:18:21.318Z","type":"message"}
{"nick":"wadie","date":"2017-01-08T00:19:03.785Z","type":"join"}
{"nick":"boneskull","date":"2017-01-08T00:19:04.464Z","type":"join"}
{"nick":"gwozt","date":"2017-01-08T00:19:06.498Z","type":"join"}
{"nick":"johnd0e","date":"2017-01-08T00:19:14.280Z","type":"join"}
{"nick":"phutchins","date":"2017-01-08T00:20:08.851Z","type":"join"}
{"nick":"zsoc","message":"hmm.. browser field as a hint for tooling... interesting. TIL","date":"2017-01-08T00:20:26.357Z","type":"message"}
{"nick":"braincrash","date":"2017-01-08T00:20:32.689Z","type":"join"}
{"nick":"timetocode","message":"i'll let u know in a sec if browserify obeys it","date":"2017-01-08T00:20:45.225Z","type":"message"}
{"nick":"webdev007","date":"2017-01-08T00:20:47.465Z","type":"join"}
{"nick":"myndzi","message":"it's not so much a hint as it is a separate entry point","date":"2017-01-08T00:21:33.117Z","type":"message"}
{"nick":"zsoc","message":"huh, you can apparently \"browser\": { \"./core/bot/Bot\": false }","date":"2017-01-08T00:21:44.592Z","type":"message"}
{"nick":"zsoc","message":"(that's what i meant by hinting)","date":"2017-01-08T00:21:48.551Z","type":"message"}
{"nick":"jongleberry","reason":"Ping timeout: 255 seconds","date":"2017-01-08T00:23:12.950Z","type":"quit"}
{"nick":"nolash","date":"2017-01-08T00:23:17.314Z","type":"join"}
{"nick":"quattro_","reason":"Quit: quattro_","date":"2017-01-08T00:23:20.237Z","type":"quit"}
{"nick":"elsevero","reason":"Quit: elsevero","date":"2017-01-08T00:23:24.187Z","type":"quit"}
{"nick":"timetocode","message":"it seems to still be using index.js, even tho i now have a browserIndex.js in addition and this in package:   \"main\": \"index.js\",","date":"2017-01-08T00:23:52.162Z","type":"message"}
{"nick":"timetocode","message":"  \"browser\": \"browserIndex.js\",","date":"2017-01-08T00:23:52.639Z","type":"message"}
{"nick":"mrmax","reason":"Quit: mrmax","date":"2017-01-08T00:23:53.282Z","type":"quit"}
{"nick":"timetocode","message":"but perhaps i've just made things too weird... as i dont have it installed as an npm module, its just sitting in a folder next to the rest of my project","date":"2017-01-08T00:24:16.865Z","type":"message"}
{"nick":"xrash","reason":"Ping timeout: 240 seconds","date":"2017-01-08T00:24:33.055Z","type":"quit"}
{"nick":"Mikk36","date":"2017-01-08T00:24:37.474Z","type":"join"}
{"nick":"polydo_s","date":"2017-01-08T00:24:48.914Z","type":"join"}
{"nick":"myndzi","message":"yeah, it might only work for dependencies that are required in","date":"2017-01-08T00:25:03.638Z","type":"message"}
{"nick":"myndzi","message":"if you're doing something like 'browserify index.js' it's obviously being told specifically what to bundle","date":"2017-01-08T00:25:14.153Z","type":"message"}
{"nick":"myndzi","message":"of course in that case you would just do browserify browserIndex.js","date":"2017-01-08T00:25:25.863Z","type":"message"}
{"nick":"zsoc","message":"maybe it's time to learn webpack :3","date":"2017-01-08T00:25:52.813Z","type":"message"}
{"nick":"timetocode","message":"its a client-server type of thing, for the server i do node server.js, and for the client I do watchify main.js -o app.js","date":"2017-01-08T00:26:00.252Z","type":"message"}
{"nick":"cagedwisdom","date":"2017-01-08T00:26:20.514Z","type":"join"}
{"nick":"jongleberry","date":"2017-01-08T00:26:37.956Z","type":"join"}
{"nick":"timetocode","message":"surely if i get rid of index.js altogether it'll have something to think about? ;)","date":"2017-01-08T00:26:39.844Z","type":"message"}
{"nick":"zsoc","message":"is this like a thing where when you run the node app it also launches your web browser?","date":"2017-01-08T00:27:24.914Z","type":"message"}
{"nick":"superlou","date":"2017-01-08T00:27:34.995Z","type":"join"}
{"nick":"xrash","date":"2017-01-08T00:27:35.438Z","type":"join"}
{"nick":"timetocode","message":"its a game server and a game client that share a networking lib","date":"2017-01-08T00:27:50.469Z","type":"message"}
{"nick":"timetocode","message":"its just a layer over websockets with game logic","date":"2017-01-08T00:27:57.922Z","type":"message"}
{"nick":"zsoc","message":"ah okaay","date":"2017-01-08T00:28:11.095Z","type":"message"}
{"nick":"gwozt","reason":"Quit: This computer has gone to sleep","date":"2017-01-08T00:28:24.042Z","type":"quit"}
{"nick":"mmmveggies","date":"2017-01-08T00:28:25.456Z","type":"join"}
{"nick":"zsoc","message":"what uh.. how is the client implemented? Is it like electron or something?","date":"2017-01-08T00:28:26.540Z","type":"message"}
{"nick":"timetocode","message":"this one is just browser","date":"2017-01-08T00:28:46.004Z","type":"message"}
{"nick":"zsoc","message":"o okay","date":"2017-01-08T00:28:51.806Z","type":"message"}
{"nick":"polydo_s","reason":"Ping timeout: 248 seconds","date":"2017-01-08T00:29:08.591Z","type":"quit"}
{"nick":"zsoc","message":"Ooo it's underwater. I'm sold :p","date":"2017-01-08T00:29:27.659Z","type":"message"}
{"nick":"anuxivm","date":"2017-01-08T00:29:55.083Z","type":"join"}
{"nick":"timetocode","message":"little buggy, prolly only works in chrome: http://sharkz.io/","date":"2017-01-08T00:30:13.365Z","type":"message"}
{"nick":"zwarag","date":"2017-01-08T00:30:20.471Z","type":"join"}
{"nick":"jongleberry","reason":"Ping timeout: 255 seconds","date":"2017-01-08T00:31:18.950Z","type":"quit"}
{"nick":"zsoc","message":"huh, binary data transfer over websockets... 60fps?","date":"2017-01-08T00:31:35.427Z","type":"message"}
{"nick":"zsoc","message":"interdasting","date":"2017-01-08T00:31:38.339Z","type":"message"}
{"nick":"timetocode","message":"yeah its been fun.. still a bit rough around the edges","date":"2017-01-08T00:32:06.026Z","type":"message"}
{"nick":"zsoc","message":"Piranha's are OP","date":"2017-01-08T00:32:15.565Z","type":"message"}
{"nick":"timetocode","message":"yea they are so good","date":"2017-01-08T00:32:21.321Z","type":"message"}
{"nick":"kadiks","date":"2017-01-08T00:32:52.051Z","type":"join"}
{"nick":"timetocode","message":"im releasing this code along w/ the networking lib, so just trying to clean it all up","date":"2017-01-08T00:33:20.208Z","type":"message"}
{"nick":"reverberations","date":"2017-01-08T00:34:07.520Z","type":"join"}
{"nick":"jongleberry","date":"2017-01-08T00:34:49.958Z","type":"join"}
{"nick":"gwozt","date":"2017-01-08T00:35:03.064Z","type":"join"}
{"nick":"kadiks","message":"I'm trying to implement this node library ( https://github.com/jamon/playmusic ) in React Native. Is there a way to reproduce entirely the request sent by the https module in node?","date":"2017-01-08T00:35:25.376Z","type":"message"}
{"nick":"kadiks","message":"If not, can someone explain me why?","date":"2017-01-08T00:35:38.718Z","type":"message"}
{"nick":"jackrabbitj","date":"2017-01-08T00:36:24.031Z","type":"join"}
{"nick":"xrash","reason":"Remote host closed the connection","date":"2017-01-08T00:38:17.290Z","type":"quit"}
{"nick":"Anonymoose2","date":"2017-01-08T00:38:34.055Z","type":"join"}
{"nick":"reverberations","reason":"Ping timeout: 248 seconds","date":"2017-01-08T00:41:24.417Z","type":"quit"}
{"nick":"siba","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-01-08T00:43:03.235Z","type":"quit"}
{"nick":"rho","reason":"Ping timeout: 245 seconds","date":"2017-01-08T00:43:07.460Z","type":"quit"}
{"nick":"jongleberry","reason":"Ping timeout: 255 seconds","date":"2017-01-08T00:43:27.939Z","type":"quit"}
{"nick":"djmax","reason":"Remote host closed the connection","date":"2017-01-08T00:44:13.630Z","type":"quit"}
{"nick":"re1","date":"2017-01-08T00:45:25.434Z","type":"join"}
{"nick":"jackrabbitj","reason":"Quit: Page closed","date":"2017-01-08T00:45:30.185Z","type":"quit"}
{"nick":"lithie","reason":"Quit: Connection closed for inactivity","date":"2017-01-08T00:46:02.381Z","type":"quit"}
{"nick":"Rightling","date":"2017-01-08T00:47:33.339Z","type":"join"}
{"nick":"zsoc","message":"timetocode: does the whole area still render off screen?","date":"2017-01-08T00:48:43.258Z","type":"message"}
{"nick":"zsoc","message":"or is there like a buffer 10% out or something and it doesn't bother updating farther?","date":"2017-01-08T00:49:02.188Z","type":"message"}
{"nick":"nolash","reason":"Ping timeout: 240 seconds","date":"2017-01-08T00:49:09.837Z","type":"quit"}
{"nick":"timetocode","message":"its all culled","date":"2017-01-08T00:49:17.113Z","type":"message"}
{"nick":"timetocode","message":"the entities are just past the edge of the screen","date":"2017-01-08T00:49:24.168Z","type":"message"}
{"nick":"timetocode","message":"and the background is in big tiles","date":"2017-01-08T00:49:29.624Z","type":"message"}
{"nick":"DjKad","date":"2017-01-08T00:49:46.875Z","type":"join"}
{"nick":"reverberations","date":"2017-01-08T00:49:48.524Z","type":"join"}
{"nick":"timetocode","message":"it uses pixi.js as the renderer, set to webgl","date":"2017-01-08T00:49:51.614Z","type":"message"}
{"nick":"zsoc","message":"neat","date":"2017-01-08T00:49:59.035Z","type":"message"}
{"nick":"zsoc","message":"it's pretty smooth","date":"2017-01-08T00:50:04.903Z","type":"message"}
{"nick":"timetocode","message":"the network lib is my pet project of like 3 years.. finally done","date":"2017-01-08T00:50:14.011Z","type":"message"}
{"nick":"zsoc","message":"yeah it looks like it could be a good starting point for a lot of things","date":"2017-01-08T00:50:25.271Z","type":"message"}
{"nick":"timetocode","message":"broke 650 concurrent sharks this morning @_@","date":"2017-01-08T00:50:27.571Z","type":"message"}
{"nick":"nolash","date":"2017-01-08T00:50:48.439Z","type":"join"}
{"nick":"timetocode","message":"it caps at about ~100 players on the same screen at a server tickrate of 20","date":"2017-01-08T00:51:04.569Z","type":"message"}
{"nick":"timetocode","message":"or a lot more if... it can cull them","date":"2017-01-08T00:51:08.727Z","type":"message"}
{"nick":"DragonPunch","reason":"Ping timeout: 248 seconds","date":"2017-01-08T00:51:29.938Z","type":"quit"}
{"nick":"odyniec_","date":"2017-01-08T00:51:44.618Z","type":"join"}
{"nick":"idrathernotsay1","date":"2017-01-08T00:52:03.900Z","type":"join"}
{"nick":"Anonymoose2","reason":"Ping timeout: 240 seconds","date":"2017-01-08T00:52:09.749Z","type":"quit"}
{"nick":"tocka","date":"2017-01-08T00:52:57.547Z","type":"quit"}
{"nick":"odyniec__","reason":"Ping timeout: 240 seconds","date":"2017-01-08T00:53:09.780Z","type":"quit"}
{"nick":"Incisor_Marks","date":"2017-01-08T00:53:18.341Z","type":"join"}
{"nick":"timetocode","message":"okay removing index.js and then defining a \"main\" in package.json does get node to obey the entry point","date":"2017-01-08T00:54:35.888Z","type":"message"}
{"nick":"timetocode","message":"anddddddd after clearing some cache stuff, browserify is obeying the \"browser\" in package.json as well,","date":"2017-01-08T00:55:04.653Z","type":"message"}
{"nick":"timetocode","message":"woot, thanks all!","date":"2017-01-08T00:55:06.907Z","type":"message"}
{"nick":"djmax","date":"2017-01-08T00:55:10.696Z","type":"join"}
{"nick":"idrathernotsay1","message":"Is there a web scraping guru in the room?","date":"2017-01-08T00:55:27.931Z","type":"message"}
{"nick":"timetocode","message":"i used to write scrapers, not a guru tho and it was before i laerned node, why what's up?","date":"2017-01-08T00:55:57.043Z","type":"message"}
{"nick":"idrathernotsay1","message":"I'm looking for nodejs/jsdom","date":"2017-01-08T00:56:03.065Z","type":"message"}
{"nick":"node_fanatic","reason":"Ping timeout: 255 seconds","date":"2017-01-08T00:56:04.043Z","type":"quit"}
{"nick":"idrathernotsay1","message":"I can get a page, but it comes back less complete than what a real browser returns.","date":"2017-01-08T00:56:23.679Z","type":"message"}
{"nick":"DjKad","message":"here i am :9","date":"2017-01-08T00:56:47.324Z","type":"message"}
{"nick":"idrathernotsay1","message":"Details at http://stackoverflow.com/questions/41526729/make-nodejs-jsdom-wait-for-full-rendering-before-scraping","date":"2017-01-08T00:57:04.263Z","type":"message"}
{"nick":"jkstrick","date":"2017-01-08T00:57:40.402Z","type":"join"}
{"nick":"DjKad","message":"my first advise about scrape is: try to find first a page that return json object","date":"2017-01-08T00:57:45.947Z","type":"message"}
{"nick":"idrathernotsay1","message":"hmm, I can scrape a school closings page from our local TV channel.","date":"2017-01-08T00:58:22.547Z","type":"message"}
{"nick":"DjKad","message":"check if the site has a mobile version (for example m.domain.com). It usually use ajax","date":"2017-01-08T00:58:41.030Z","type":"message"}
{"nick":"idrathernotsay1","message":"interesting","date":"2017-01-08T00:58:50.507Z","type":"message"}
{"nick":"Limes__","reason":"Ping timeout: 248 seconds","date":"2017-01-08T00:59:00.469Z","type":"quit"}
{"nick":"jongleberry","date":"2017-01-08T00:59:20.888Z","type":"join"}
{"nick":"DjKad","message":"and if the site has an android app...you can download the .apk, decompile it with dex, investigate into the code to find the api endpoint and api calls","date":"2017-01-08T00:59:33.619Z","type":"message"}
{"nick":"zsoc","message":"idrathernotsay1: for what it's worth, i'm pretty biased towards an actual headless browser.. either Horseman (Phantomjs) or Nightmare (Electron)","date":"2017-01-08T00:59:41.520Z","type":"message"}
{"nick":"zsoc","message":"DjKad: that right there is fantastic advice, heh","date":"2017-01-08T00:59:51.956Z","type":"message"}
{"nick":"DjKad","message":"and your scraper will be less affected by html modifications","date":"2017-01-08T01:00:03.161Z","type":"message"}
{"nick":"DjKad","message":"i've scraped at least 20 sites in these months","date":"2017-01-08T01:00:24.953Z","type":"message"}
{"nick":"idrathernotsay1","message":"fwiw, this isn't my day job. Just trying to automate downloading of monthly statements.","date":"2017-01-08T01:01:07.213Z","type":"message"}
{"nick":"DjKad","message":".NET web forms for now has been one of the trickyest site","date":"2017-01-08T01:01:13.344Z","type":"message"}
{"nick":"mcollina","date":"2017-01-08T01:01:39.962Z","type":"join"}
{"nick":"idrathernotsay1","message":"If I could, I'd use Java, but getting the SSL handshaking is very problematic.","date":"2017-01-08T01:01:41.127Z","type":"message"}
{"nick":"DjKad","message":"i use php with curl","date":"2017-01-08T01:01:52.824Z","type":"message"}
{"nick":"zsoc","message":"idrathernotsay1: oh 100% use horseman or nightmare imo, using an actual headless browser will take most of that pain away","date":"2017-01-08T01:01:55.553Z","type":"message"}
{"nick":"zsoc","message":"you can even hang onto the cookie and keep your session alive for reuse :p","date":"2017-01-08T01:02:23.129Z","type":"message"}
{"nick":"idrathernotsay1","message":"are these Javascript solutions","date":"2017-01-08T01:02:27.380Z","type":"message"}
{"nick":"idrathernotsay1","message":"?","date":"2017-01-08T01:02:28.408Z","type":"message"}
{"nick":"DjKad","message":"you have to try to mimic the web calls","date":"2017-01-08T01:02:34.363Z","type":"message"}
{"nick":"mezod","reason":"Remote host closed the connection","date":"2017-01-08T01:02:41.827Z","type":"quit"}
{"nick":"BadQuanta","date":"2017-01-08T01:02:44.980Z","type":"join"}
{"nick":"DjKad","message":"so user agent, cookies, token and so on","date":"2017-01-08T01:02:51.735Z","type":"message"}
{"nick":"zsoc","message":"idrathernotsay1: Specifically nodejs solutions. Horseman is a node package that is a wrapper for Phantom, and Nightmare the same but with the Electron platform instead. They are made specifically for headless browsing","date":"2017-01-08T01:03:09.725Z","type":"message"}
{"nick":"duckpuppy","date":"2017-01-08T01:03:18.473Z","type":"join"}
{"nick":"jez9999","date":"2017-01-08T01:03:58.288Z","type":"quit"}
{"nick":"ThePendulum","reason":"Quit: leaving","date":"2017-01-08T01:03:58.628Z","type":"quit"}
{"nick":"zsoc","message":"Instead of having to mimic everything, for instance.. you could go to a login page, type in your user/pass, and return the cookie with the session info. Then just make a fetch call mimicing the headers you would normally use to get the file","date":"2017-01-08T01:04:05.751Z","type":"message"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-01-08T01:04:20.348Z","type":"quit"}
{"nick":"bkolden","message":"quit","date":"2017-01-08T01:04:51.336Z","type":"message"}
{"nick":"bkolden","reason":"Quit: WeeChat 1.4","date":"2017-01-08T01:04:54.362Z","type":"quit"}
{"nick":"djmax","reason":"Remote host closed the connection","date":"2017-01-08T01:05:26.852Z","type":"quit"}
{"nick":"zwarag","reason":"Quit: zwarag","date":"2017-01-08T01:06:02.721Z","type":"quit"}
{"nick":"idrathernotsay1","message":"thank you all :)","date":"2017-01-08T01:06:19.142Z","type":"message"}
{"nick":"mcollina","reason":"Ping timeout: 255 seconds","date":"2017-01-08T01:06:24.950Z","type":"quit"}
{"nick":"zsoc","message":"np.. i have.. what is probably /too/ much experience (at least with Horseman) at this point, if you have future questions and i'm around lol","date":"2017-01-08T01:06:56.537Z","type":"message"}
{"nick":"DjKad","message":"np, if you give me in private the link i would look if there's something interesting","date":"2017-01-08T01:07:00.038Z","type":"message"}
{"nick":"DjKad","message":"lol","date":"2017-01-08T01:07:01.840Z","type":"message"}
{"nick":"omnihil","reason":"Ping timeout: 255 seconds","date":"2017-01-08T01:07:07.013Z","type":"quit"}
{"nick":"duckpuppy","reason":"Ping timeout: 240 seconds","date":"2017-01-08T01:08:06.525Z","type":"quit"}
{"nick":"omnihil","date":"2017-01-08T01:08:35.096Z","type":"join"}
{"nick":"frett","date":"2017-01-08T01:09:18.826Z","type":"join"}
{"nick":"BadQuanta","reason":"Quit: Leaving","date":"2017-01-08T01:10:42.210Z","type":"quit"}
{"nick":"oojacoboo","reason":"Quit: Computer has gone to sleep.","date":"2017-01-08T01:13:02.763Z","type":"quit"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-01-08T01:13:07.447Z","type":"quit"}
{"nick":"davimore","date":"2017-01-08T01:13:26.496Z","type":"join"}
{"nick":"BadQuanta","date":"2017-01-08T01:14:38.946Z","type":"join"}
{"nick":"BadQuanta","reason":"Client Quit","date":"2017-01-08T01:16:08.958Z","type":"quit"}
{"nick":"BadQuanta","date":"2017-01-08T01:16:33.974Z","type":"join"}
{"nick":"djmax","date":"2017-01-08T01:16:45.780Z","type":"join"}
{"nick":"rohanrhu","reason":"Read error: Connection reset by peer","date":"2017-01-08T01:17:03.035Z","type":"quit"}
{"nick":"DragonPunch","date":"2017-01-08T01:17:04.757Z","type":"join"}
{"nick":"SwiftMatt","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2017-01-08T01:17:33.788Z","type":"quit"}
{"nick":"BadQuanta","reason":"Client Quit","date":"2017-01-08T01:18:49.956Z","type":"quit"}
{"nick":"macabre_","reason":"Remote host closed the connection","date":"2017-01-08T01:18:50.613Z","type":"quit"}
{"nick":"polydo_s","date":"2017-01-08T01:19:00.329Z","type":"join"}
{"nick":"BadQuanta","date":"2017-01-08T01:19:07.966Z","type":"join"}
{"nick":"idrathernotsay1","reason":"Quit: Leaving.","date":"2017-01-08T01:19:32.576Z","type":"quit"}
{"nick":"rohanrhu","date":"2017-01-08T01:19:37.504Z","type":"join"}
{"nick":"jongleberry","reason":"Ping timeout: 255 seconds","date":"2017-01-08T01:19:54.928Z","type":"quit"}
{"nick":"ed209","reason":"Remote host closed the connection","date":"2017-01-08T01:20:01.294Z","type":"quit"}
{"nick":"ed209","date":"2017-01-08T01:20:07.482Z","type":"join"}
{"nick":"macabre","date":"2017-01-08T01:20:09.935Z","type":"join"}
{"nick":"nikivi","reason":"Quit: irc","date":"2017-01-08T01:21:34.485Z","type":"quit"}
{"nick":"ironfroggy","date":"2017-01-08T01:22:01.390Z","type":"join"}
{"nick":"subfuzion","date":"2017-01-08T01:23:30.162Z","type":"join"}
{"nick":"polydo_s","reason":"Ping timeout: 255 seconds","date":"2017-01-08T01:23:30.850Z","type":"quit"}
{"nick":"gwozt","reason":"Quit: This computer has gone to sleep","date":"2017-01-08T01:24:10.383Z","type":"quit"}
{"nick":"IrishGringo","reason":"Ping timeout: 255 seconds","date":"2017-01-08T01:24:24.845Z","type":"quit"}
{"nick":"macabre","reason":"Ping timeout: 255 seconds","date":"2017-01-08T01:24:51.853Z","type":"quit"}
{"nick":"EyePulp","date":"2017-01-08T01:25:46.653Z","type":"join"}
{"nick":"timetocode","reason":"Quit: Leaving","date":"2017-01-08T01:25:58.040Z","type":"quit"}
{"nick":"jongleberry","date":"2017-01-08T01:26:54.949Z","type":"join"}
{"nick":"perrier-jouet","reason":"Ping timeout: 246 seconds","date":"2017-01-08T01:28:37.206Z","type":"quit"}
{"nick":"dk0r","date":"2017-01-08T01:29:03.851Z","type":"join"}
{"nick":"reverberations","reason":"Ping timeout: 248 seconds","date":"2017-01-08T01:29:24.387Z","type":"quit"}
{"nick":"kadiks","reason":"Ping timeout: 260 seconds","date":"2017-01-08T01:29:26.051Z","type":"quit"}
{"nick":"EyePulp","reason":"Ping timeout: 248 seconds","date":"2017-01-08T01:30:29.061Z","type":"quit"}
{"nick":"frett","reason":"Quit: Page closed","date":"2017-01-08T01:30:36.319Z","type":"quit"}
{"nick":"node_fanatic","date":"2017-01-08T01:31:04.940Z","type":"join"}
{"nick":"e14","date":"2017-01-08T01:31:19.162Z","type":"join"}
{"nick":"aeontech","date":"2017-01-08T01:32:03.188Z","type":"join"}
{"nick":"zsoc","message":"hmmmm what would be a good way to display a progress indicator to the console when doing a stream transform? Preferably something like \"% processed\"","date":"2017-01-08T01:33:13.378Z","type":"message"}
{"nick":"joepie91","message":"zsoc: a progress bar that doesn't lag the operations! :P","date":"2017-01-08T01:34:03.576Z","type":"message"}
{"nick":"zsoc","message":"I guess I could do `progress: ${+100 * done / total}`... assuming i somehow have information about the total size... I probably can grab it from the request header","date":"2017-01-08T01:34:15.972Z","type":"message"}
{"nick":"duckpuppy","date":"2017-01-08T01:34:26.392Z","type":"join"}
{"nick":"BadQuanta","reason":"Quit: Leaving","date":"2017-01-08T01:34:30.489Z","type":"quit"}
{"nick":"joepie91","message":"zsoc: see also https://github.com/sindresorhus/log-update","date":"2017-01-08T01:34:40.449Z","type":"message"}
{"nick":"zsoc","message":"oooo","date":"2017-01-08T01:34:51.104Z","type":"message"}
{"nick":"zsoc","message":"yes that's much better than spamming the scrollback haha","date":"2017-01-08T01:34:59.864Z","type":"message"}
{"nick":"joepie91","message":":)","date":"2017-01-08T01:35:04.100Z","type":"message"}
{"nick":"BadQuanta","date":"2017-01-08T01:35:26.836Z","type":"join"}
{"nick":"zsoc","message":"The example code uses setInterval >.>","date":"2017-01-08T01:35:29.971Z","type":"message"}
{"nick":"zsoc","message":"although maybe it's not a bad idea here... since ultimately your console output is the least important thing.. should it be delayed","date":"2017-01-08T01:35:42.492Z","type":"message"}
{"nick":"joepie91","message":"nah, setTimeout is still better","date":"2017-01-08T01:36:03.457Z","type":"message"}
{"nick":"nolash","reason":"Remote host closed the connection","date":"2017-01-08T01:36:05.099Z","type":"quit"}
{"nick":"jongleberry","reason":"Ping timeout: 255 seconds","date":"2017-01-08T01:36:33.840Z","type":"quit"}
{"nick":"ianmethyst","reason":"Quit: WeeChat 1.6","date":"2017-01-08T01:38:45.426Z","type":"quit"}
{"nick":"munch_","reason":"Remote host closed the connection","date":"2017-01-08T01:39:41.981Z","type":"quit"}
{"nick":"SwiftMatt","date":"2017-01-08T01:43:07.995Z","type":"join"}
{"nick":"GreenJello","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-01-08T01:44:59.220Z","type":"quit"}
{"nick":"perrier-jouet","date":"2017-01-08T01:45:21.458Z","type":"join"}
{"nick":"GreenJello","date":"2017-01-08T01:45:32.205Z","type":"join"}
{"nick":"DjKad","reason":"Ping timeout: 258 seconds","date":"2017-01-08T01:45:58.673Z","type":"quit"}
{"nick":"reverberations","date":"2017-01-08T01:46:01.496Z","type":"join"}
{"nick":"duckpuppy","reason":"Ping timeout: 240 seconds","date":"2017-01-08T01:47:13.047Z","type":"quit"}
{"nick":"zsoc","message":"i'm amazed at how well node-fetch worked with streams","date":"2017-01-08T01:47:27.871Z","type":"message"}
{"nick":"zsoc","message":"like i can literally start handling and parsing data coming across a relatively large file and work with it at roughly the same speed it's being downloaded... and the back pressure and everything does it's job","date":"2017-01-08T01:48:00.690Z","type":"message"}
{"nick":"jbud","date":"2017-01-08T01:48:46.667Z","type":"join"}
{"nick":"zsoc","message":"now i need to break it mid-stream to figure out how to handle the rollbacks gracefully heh","date":"2017-01-08T01:49:05.179Z","type":"message"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-01-08T01:53:02.721Z","type":"quit"}
{"nick":"Incisor_Marks","reason":"Quit: Incisor_Marks","date":"2017-01-08T01:53:06.911Z","type":"quit"}
{"nick":"alileza","date":"2017-01-08T01:53:51.919Z","type":"join"}
{"nick":"e14","date":"2017-01-08T01:54:52.003Z","type":"join"}
{"nick":"NeverDie","date":"2017-01-08T01:56:14.871Z","type":"join"}
{"nick":"jongleberry","date":"2017-01-08T01:56:43.867Z","type":"join"}
{"nick":"roelmonnens","date":"2017-01-08T01:56:49.999Z","type":"join"}
{"nick":"alileza","reason":"Ping timeout: 255 seconds","date":"2017-01-08T01:59:03.824Z","type":"quit"}
{"nick":"macabre","date":"2017-01-08T02:00:28.813Z","type":"join"}
{"nick":"roelmonnens","reason":"Ping timeout: 240 seconds","date":"2017-01-08T02:00:53.017Z","type":"quit"}
{"nick":"kaicataldo","date":"2017-01-08T02:01:46.781Z","type":"join"}
{"nick":"reverberations","reason":"Read error: Connection reset by peer","date":"2017-01-08T02:02:50.190Z","type":"quit"}
{"nick":"SuperHans","date":"2017-01-08T02:03:35.845Z","type":"join"}
{"nick":"djmax","reason":"Remote host closed the connection","date":"2017-01-08T02:08:16.088Z","type":"quit"}
{"nick":"SuperHans","reason":"Ping timeout: 248 seconds","date":"2017-01-08T02:08:20.388Z","type":"quit"}
{"nick":"rohanrhu","reason":"Remote host closed the connection","date":"2017-01-08T02:09:17.782Z","type":"quit"}
{"nick":"rohanrhu","date":"2017-01-08T02:10:35.717Z","type":"join"}
{"nick":"reverberations","date":"2017-01-08T02:11:26.352Z","type":"join"}
{"nick":"polydo_s","date":"2017-01-08T02:13:16.314Z","type":"join"}
{"nick":"rohanrhu","reason":"Remote host closed the connection","date":"2017-01-08T02:13:19.242Z","type":"quit"}
{"nick":"bronson","date":"2017-01-08T02:13:21.440Z","type":"join"}
{"nick":"rohanrhu","date":"2017-01-08T02:14:35.075Z","type":"join"}
{"nick":"rohanrhu","reason":"Remote host closed the connection","date":"2017-01-08T02:16:02.066Z","type":"quit"}
{"nick":"jongleberry","reason":"Ping timeout: 255 seconds","date":"2017-01-08T02:16:36.820Z","type":"quit"}
{"nick":"howitdo","date":"2017-01-08T02:16:51.049Z","type":"join"}
{"nick":"polydo_s","reason":"Ping timeout: 255 seconds","date":"2017-01-08T02:17:57.867Z","type":"quit"}
{"nick":"Conner05","date":"2017-01-08T02:19:27.106Z","type":"join"}
{"nick":"jongleberry","date":"2017-01-08T02:20:07.843Z","type":"join"}
{"nick":"zsoc","message":"uhhhhh `npm start` is literally `npm run start`.. no?","date":"2017-01-08T02:20:20.076Z","type":"message"}
{"nick":"Conner05","message":"does anyone have any experience streaming audio files in node?","date":"2017-01-08T02:20:45.328Z","type":"message"}
{"nick":"ryanmurakami","date":"2017-01-08T02:21:05.679Z","type":"join"}
{"nick":"zsoc","message":"I have some experience /serving/ audio files... but no not streaming them heh","date":"2017-01-08T02:21:11.333Z","type":"message"}
{"nick":"zsoc","message":"You mean like Icecast?","date":"2017-01-08T02:21:28.381Z","type":"message"}
{"nick":"gamblor3","reason":"Ping timeout: 240 seconds","date":"2017-01-08T02:21:31.508Z","type":"quit"}
{"nick":"Conner05","message":"zsoc: if you wanted to code up something that did...where would you start?","date":"2017-01-08T02:21:34.457Z","type":"message"}
{"nick":"zsoc","message":"Are you trying to decode an audio file and play it over speakers? Or send raw chunks to some other amp on your network? Or you mean like stream a live feed of data over wan?","date":"2017-01-08T02:22:10.528Z","type":"message"}
{"nick":"Conner05","message":"zsoc: I'm trying to do what spotify and other music streaming services do - have audio files on a server and push them to a client as fast as possible","date":"2017-01-08T02:23:03.112Z","type":"message"}
{"nick":"zsoc","message":"I mean.. in theory the server end of that is just pointing to a file.. your client implementation does the fun scrubbing/streaming stuffs","date":"2017-01-08T02:23:38.086Z","type":"message"}
{"nick":"zsoc","message":"Maybe that's an old/inefficient way to think of it tho..","date":"2017-01-08T02:23:43.956Z","type":"message"}
{"nick":"reverberations","reason":"Ping timeout: 260 seconds","date":"2017-01-08T02:24:22.366Z","type":"quit"}
{"nick":"jongleberry","reason":"Ping timeout: 255 seconds","date":"2017-01-08T02:24:42.837Z","type":"quit"}
{"nick":"rohanrhu","date":"2017-01-08T02:25:06.537Z","type":"join"}
{"nick":"zsoc","message":"Conner05: for example.. i just opened play.spotify.com and played a song. it just made a static audio/mpeg request","date":"2017-01-08T02:26:15.915Z","type":"message"}
{"nick":"Conner05","message":"oh yea, I can see how their web player handles that stuff","date":"2017-01-08T02:27:01.750Z","type":"message"}
{"nick":"zsoc","message":"youtube does some crazy stuff with like.. serving chunked data for pieces of video .. that i can't even begin to understand... but for audio, with modern internet, can prolly just serve the song heh","date":"2017-01-08T02:27:33.393Z","type":"message"}
{"nick":"Conner05","message":"zsoc: I just wonder how the front end starts playing while still getting the data from the network.","date":"2017-01-08T02:28:00.848Z","type":"message"}
{"nick":"djmax","date":"2017-01-08T02:28:06.330Z","type":"join"}
{"nick":"zsoc","message":"Does it? I mean that would be... fairly trivial (i think) using streams.. which was the thing i was just ranting about","date":"2017-01-08T02:28:33.911Z","type":"message"}
{"nick":"zsoc","message":"although i don't know how to implement that client side","date":"2017-01-08T02:28:40.643Z","type":"message"}
{"nick":"Conner05","message":"zsoc yea I had thought about like splitting songs up into 15 second chunks and then serving them up in pieces like that to ensure selecting \"Play\" was as responsive as possible, but seems like a lot of work.","date":"2017-01-08T02:28:57.208Z","type":"message"}
{"nick":"jongleberry","date":"2017-01-08T02:28:59.817Z","type":"join"}
{"nick":"zsoc","message":"I.. THINK that Fetch API (including in the browser) does allow for somewhat low-level body streaming","date":"2017-01-08T02:29:42.191Z","type":"message"}
{"nick":"bronson","reason":"Remote host closed the connection","date":"2017-01-08T02:30:09.092Z","type":"quit"}
{"nick":"zsoc","message":"so you can start parsing the response body as it's being received... as long as it's compatible with whatever you're using to play it back","date":"2017-01-08T02:30:10.292Z","type":"message"}
{"nick":"zsoc","message":"I imagine that also has something to do with the compression/encoding (if an mp3 is playable sequentially like that)","date":"2017-01-08T02:30:23.080Z","type":"message"}
{"nick":"halcyon","date":"2017-01-08T02:30:55.923Z","type":"join"}
{"nick":"gener1c_","date":"2017-01-08T02:31:59.835Z","type":"part"}
{"nick":"gener1c","date":"2017-01-08T02:32:13.445Z","type":"join"}
{"nick":"gener1c","message":"how should i pass an object around node across requests per user?","date":"2017-01-08T02:32:30.756Z","type":"message"}
{"nick":"djmax","reason":"Ping timeout: 260 seconds","date":"2017-01-08T02:32:32.348Z","type":"quit"}
{"nick":"zsoc","message":"It probably isn't, so the mp3 probably will need to be decoded in node and served via temporary cached url in an audio/mpeg layer 1/2 format","date":"2017-01-08T02:32:34.686Z","type":"message"}
{"nick":"zsoc","message":"that's what spotify is doing it looks like","date":"2017-01-08T02:32:38.476Z","type":"message"}
{"nick":"gener1c","message":"i tried attaching it to req.session","date":"2017-01-08T02:32:40.628Z","type":"message"}
{"nick":"gener1c","message":"has issues with method calls and keeping state","date":"2017-01-08T02:32:53.416Z","type":"message"}
{"nick":"zsoc","message":"gener1c: you would need to serialize the object to store it in the session","date":"2017-01-08T02:32:55.356Z","type":"message"}
{"nick":"gener1c","message":"oi","date":"2017-01-08T02:33:05.820Z","type":"message"}
{"nick":"gener1c","message":"so only string and int values","date":"2017-01-08T02:33:14.758Z","type":"message"}
{"nick":"jongleberry","reason":"Ping timeout: 255 seconds","date":"2017-01-08T02:33:15.784Z","type":"quit"}
{"nick":"xissburg","reason":"Quit: leaving","date":"2017-01-08T02:34:30.882Z","type":"quit"}
{"nick":"zsoc","message":"i feel like i just had this conversation too yesterday, heh.","date":"2017-01-08T02:34:37.171Z","type":"message"}
{"nick":"xissburg","date":"2017-01-08T02:34:59.486Z","type":"join"}
{"nick":"gener1c","message":"lol","date":"2017-01-08T02:35:01.197Z","type":"message"}
{"nick":"bronson","date":"2017-01-08T02:35:07.508Z","type":"join"}
{"nick":"zsoc","message":"you /could/ store the methods as well, using the stringify's `replacer` function... but it won't retain the scope (since you're serializing it)","date":"2017-01-08T02:35:10.211Z","type":"message"}
{"nick":"halcyon","date":"2017-01-08T02:35:24.495Z","type":"part"}
{"nick":"Zexorz","reason":"Read error: Connection reset by peer","date":"2017-01-08T02:35:37.045Z","type":"quit"}
{"nick":"gener1c","message":"so ill need to rebind","date":"2017-01-08T02:35:38.972Z","type":"message"}
{"nick":"orbital-smith","date":"2017-01-08T02:35:46.816Z","type":"join"}
{"nick":"zsoc","message":"I don't know what it is you're doing. You could keep the object somewhere else in memory (although I have the feeling this is a user/state thing and you really want it tied to the request)","date":"2017-01-08T02:36:11.047Z","type":"message"}
{"nick":"zsoc","message":"localeStorage is another (probably bad) option","date":"2017-01-08T02:36:49.787Z","type":"message"}
{"nick":"_2E0PGS","reason":"Quit: Leaving","date":"2017-01-08T02:36:53.300Z","type":"quit"}
{"nick":"gener1c","message":"yeah its an auth object","date":"2017-01-08T02:37:26.335Z","type":"message"}
{"nick":"Conner05","message":"thanks zsoc I am going to try and get some benchmarks running (comparing it to .net core)","date":"2017-01-08T02:37:30.690Z","type":"message"}
{"nick":"zsoc","message":"Conner05: how did you plan on doing it in .net core? There's some preconfabulated stuff for this?","date":"2017-01-08T02:37:48.114Z","type":"message"}
{"nick":"gener1c","message":"i have some weird sso procedure going on where the user bounces off another server and then i need to resend some token to authenticate its identity","date":"2017-01-08T02:37:52.643Z","type":"message"}
{"nick":"orbital-smith","message":"can anyone see this?","date":"2017-01-08T02:38:01.890Z","type":"message"}
{"nick":"gener1c","message":"so i figured ill encapsulate it into a class that ill attach to the session","date":"2017-01-08T02:38:06.207Z","type":"message"}
{"nick":"orbital-smith","action":"wonders if he is registered","date":"2017-01-08T02:38:10.352Z","type":"action"}
{"nick":"zsoc","message":"Conner05: here's something to take a gander at, https://github.com/revolunet/webaudio-wav-stream-player , and also a simpler code snippet just to see how it works with fetch and buffers: https://gist.github.com/revolunet/e620e2c532b7144c62768a36b8b96da2","date":"2017-01-08T02:38:15.260Z","type":"message"}
{"nick":"gener1c","message":"yes orbital-smith","date":"2017-01-08T02:38:17.099Z","type":"message"}
{"nick":"orbital-smith","message":"nice, thanks","date":"2017-01-08T02:38:23.289Z","type":"message"}
{"nick":"Conner05","message":"zsoc just opening up a FileStream object and see what happens :)","date":"2017-01-08T02:38:29.494Z","type":"message"}
{"nick":"orbital-smith","message":"so, i have a question regarding process.nextTick()","date":"2017-01-08T02:38:35.599Z","type":"message"}
{"nick":"orbital-smith","message":"specifically, should i be using setTimeout() or process.nextTick()","date":"2017-01-08T02:38:50.193Z","type":"message"}
{"nick":"orbital-smith","message":"setTimeout() seems like it might be somewhat less effecient, process.nextTick() seems like it would just post to the nodejs event loop","date":"2017-01-08T02:39:22.483Z","type":"message"}
{"nick":"gener1c","message":"so i guess i can try and keep all state on the session ver","date":"2017-01-08T02:39:35.222Z","type":"message"}
{"nick":"gener1c","message":"var","date":"2017-01-08T02:39:38.428Z","type":"message"}
{"nick":"inflames","date":"2017-01-08T02:39:42.000Z","type":"join"}
{"nick":"zsoc","message":"Conner05: yeah unless that does some magic specifically having to do with mp3.. i don't think it would work. it would have to decode it and send a bytestream of the data... I mean it very well might, I dunno lol","date":"2017-01-08T02:39:44.027Z","type":"message"}
{"nick":"orbital-smith","message":"iirc, historically, people were adverse to using process.nextTick() for anything","date":"2017-01-08T02:39:45.573Z","type":"message"}
{"nick":"gener1c","message":"it will break encapsulation tho","date":"2017-01-08T02:39:46.975Z","type":"message"}
{"nick":"modlin_","reason":"Quit: modlin_","date":"2017-01-08T02:40:01.300Z","type":"quit"}
{"nick":"superlou","reason":"Quit: Leaving","date":"2017-01-08T02:40:18.919Z","type":"quit"}
{"nick":"zsoc","message":"orbital-smith: process.nextTick() allows you to let other events in the queue have a turn even though your process is cpu intensive.. it's a good way to make some method less greedy for cpu time","date":"2017-01-08T02:41:08.797Z","type":"message"}
{"nick":"Conner05","message":"zsoc: yea, you're probably right. I'll dig into it. I'm much more comfy in .net so I'm not as worried about it as I am node. I just want the best tech for the job.","date":"2017-01-08T02:41:16.719Z","type":"message"}
{"nick":"smccarthy","date":"2017-01-08T02:41:52.514Z","type":"join"}
{"nick":"zsoc","message":"Conner05: but honestly i don't think that would be hard in node either.. but give it a go and see how Core fares ^_^","date":"2017-01-08T02:41:54.832Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: lets say tho, i have some asynchronous recursive thing","date":"2017-01-08T02:42:07.113Z","type":"message"}
{"nick":"zsoc","message":"well it being async is now already moving it to another thread","date":"2017-01-08T02:42:29.245Z","type":"message"}
{"nick":"zsoc","message":"er.. not thread in the node/js sense, that's single threaded ofc heh","date":"2017-01-08T02:42:57.108Z","type":"message"}
{"nick":"zsoc","message":"but another thread, as in whatever the i/o or tcp request or whatever other process you're waiting in","date":"2017-01-08T02:43:26.069Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: in this scenario, i will explode the javascript function stack, typically the way to approach this is to use setTimeout() which registers some function for notification with the event loop","date":"2017-01-08T02:43:27.791Z","type":"message"}
{"nick":"noethics","date":"2017-01-08T02:43:29.506Z","type":"join"}
{"nick":"SwiftMatt","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2017-01-08T02:43:33.702Z","type":"quit"}
{"nick":"ironfroggy","reason":"Remote host closed the connection","date":"2017-01-08T02:44:01.426Z","type":"quit"}
{"nick":"orbital-smith","message":"and that registration means is effecitively pushing the function out to some completion queue (processed out of band)","date":"2017-01-08T02:44:11.346Z","type":"message"}
{"nick":"zsoc","message":"sorry i dont know what you mean by explode the function stack","date":"2017-01-08T02:44:16.623Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: the call stack","date":"2017-01-08T02:44:29.558Z","type":"message"}
{"nick":"Atlas","reason":"Ping timeout: 258 seconds","date":"2017-01-08T02:44:37.465Z","type":"quit"}
{"nick":"orbital-smith","message":"for example...","date":"2017-01-08T02:44:38.526Z","type":"message"}
{"nick":"zsoc","message":"oh, because it's recursive AND async, i see what you're saying","date":"2017-01-08T02:44:47.676Z","type":"message"}
{"nick":"orbital-smith","message":"let foo = () => foo()  ... followed by foo()","date":"2017-01-08T02:44:57.168Z","type":"message"}
{"nick":"orbital-smith","message":"however...","date":"2017-01-08T02:45:01.104Z","type":"message"}
{"nick":"zsoc","message":"I mean.. if it's async.. shouldn't you just be setting max-concurrency and be done with it?","date":"2017-01-08T02:45:06.016Z","type":"message"}
{"nick":"orbital-smith","message":"let foo = () => setTimeout(() => foo(), 1)","date":"2017-01-08T02:45:16.349Z","type":"message"}
{"nick":"orbital-smith","message":"foo() // no call stack explosion","date":"2017-01-08T02:45:29.508Z","type":"message"}
{"nick":"zsoc","message":"either you're going to do them 1 at a time and wait for the return.. or you're going to do them in parallel and you need to have a max-concurrency","date":"2017-01-08T02:45:47.175Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: sorry?","date":"2017-01-08T02:45:57.525Z","type":"message"}
{"nick":"orbital-smith","message":"this isn't really related to parallism","date":"2017-01-08T02:46:16.128Z","type":"message"}
{"nick":"orbital-smith","message":"my question is....","date":"2017-01-08T02:46:46.838Z","type":"message"}
{"nick":"zsoc","message":"You're saying you have some async task that is called recursively... so then if you aren't waiting for the task to return and performing the actions one at a time.. it is related to parallelism lol","date":"2017-01-08T02:46:47.507Z","type":"message"}
{"nick":"orbital-smith","message":"let foo = () => process.nextTick(() => foo())","date":"2017-01-08T02:47:45.043Z","type":"message"}
{"nick":"orbital-smith","message":"^ is this acceptable ?","date":"2017-01-08T02:47:56.560Z","type":"message"}
{"nick":"jongleberry","date":"2017-01-08T02:48:34.765Z","type":"join"}
{"nick":"zsoc","message":"In your case I don't see how that's any different from not using nextTick(). If the only thing your function is doing is calling some async process, you're still going to flood your stack","date":"2017-01-08T02:48:37.258Z","type":"message"}
{"nick":"Bob8989|2","reason":"Quit: KVIrc 4.0.4 Insomnia http://www.kvirc.net/","date":"2017-01-08T02:49:00.158Z","type":"quit"}
{"nick":"orbital-smith","message":"let foo = () => process.nextTick(() => foo()) does not explode the call stack","date":"2017-01-08T02:49:04.805Z","type":"message"}
{"nick":"orbital-smith","message":"(neither does setTimeout)","date":"2017-01-08T02:49:12.131Z","type":"message"}
{"nick":"orbital-smith","message":"the reason its not is because the function is registering itself with some \"External\" process (the event loop in both cases), meaning the JS callstack can unwind","date":"2017-01-08T02:49:56.941Z","type":"message"}
{"nick":"orbital-smith","message":"the question is, is it acceptable to use process.nextTick() for this","date":"2017-01-08T02:50:20.499Z","type":"message"}
{"nick":"orbital-smith","message":"?","date":"2017-01-08T02:50:23.105Z","type":"message"}
{"nick":"zsoc","message":"Well you need to pay attention to your maxTickDepth at that point.","date":"2017-01-08T02:51:03.833Z","type":"message"}
{"nick":"zsoc","message":"Because iirc how it works, it's still being 'flooded' to some obscene default value (like 1,000)","date":"2017-01-08T02:51:19.433Z","type":"message"}
{"nick":"zivester","date":"2017-01-08T02:51:34.119Z","type":"join"}
{"nick":"orbital-smith","message":"the same would be true for setTimeout tho","date":"2017-01-08T02:51:34.902Z","type":"message"}
{"nick":"orbital-smith","message":"well, lets back up abit....","date":"2017-01-08T02:51:47.420Z","type":"message"}
{"nick":"zsoc","message":"well, at 1, then yes lol","date":"2017-01-08T02:51:49.604Z","type":"message"}
{"nick":"not-an-aardvark","date":"2017-01-08T02:51:55.614Z","type":"join"}
{"nick":"orbital-smith","message":"my assumption here is that nodejs is keeping a backend queue of things inside its event loop","date":"2017-01-08T02:52:12.873Z","type":"message"}
{"nick":"orbital-smith","message":"a queue of \"functions\"","date":"2017-01-08T02:52:22.885Z","type":"message"}
{"nick":"SwiftMatt","date":"2017-01-08T02:52:58.988Z","type":"join"}
{"nick":"jongleberry","reason":"Ping timeout: 255 seconds","date":"2017-01-08T02:53:03.666Z","type":"quit"}
{"nick":"orbital-smith","message":"this queue is run off in sequence... (one function after another), which calls back into JS.... this is how JS is single theaded","date":"2017-01-08T02:53:05.844Z","type":"message"}
{"nick":"orbital-smith","message":"1 queue, 1 queue processer picking up and calling back into JS","date":"2017-01-08T02:53:18.404Z","type":"message"}
{"nick":"orbital-smith","message":"^ event loop","date":"2017-01-08T02:53:34.307Z","type":"message"}
{"nick":"zsoc","message":"yes thank you for describing the event loop lol","date":"2017-01-08T02:53:38.773Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: right, so my thinking here is that....","date":"2017-01-08T02:54:00.786Z","type":"message"}
{"nick":"Atlas","date":"2017-01-08T02:54:09.589Z","type":"join"}
{"nick":"orbital-smith","message":"setTimeout - registers a timeout handle, pushes the completion callback into the event loop","date":"2017-01-08T02:54:19.964Z","type":"message"}
{"nick":"orbital-smith","message":"nextTick() - pushes the completion callback into the event loop","date":"2017-01-08T02:54:37.147Z","type":"message"}
{"nick":"kuldeep_","new_nick":"kuldeep","date":"2017-01-08T02:54:46.655Z","type":"nick"}
{"nick":"orbital-smith","message":"note that nextTick() doesn't implicate any timing mechanism, so it should be considerably more lightweight than using setTimeout()","date":"2017-01-08T02:55:04.189Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: right?","date":"2017-01-08T02:55:28.886Z","type":"message"}
{"nick":"jongleberry","date":"2017-01-08T02:56:30.850Z","type":"join"}
{"nick":"orbital-smith","message":"zsoc: its just that historically, people haven't been too keen on using nextTick(), or there have been \"warnings\" to \"use with caution\"","date":"2017-01-08T02:57:08.247Z","type":"message"}
{"nick":"orbital-smith","message":"im just trying to get some perspective on the matter is all","date":"2017-01-08T02:57:23.801Z","type":"message"}
{"nick":"zsoc","message":"I'm.. not sure I agree 100% in the sense that using nextTick is a performant/optimization thing here... but I can't say for certainty. I feel like it strictly isn't however, as I know for a fact that setTimeout isn't going to block i/o","date":"2017-01-08T02:57:24.662Z","type":"message"}
{"nick":"zsoc","message":"nextTick very well might","date":"2017-01-08T02:57:36.099Z","type":"message"}
{"nick":"calamity","date":"2017-01-08T02:57:42.696Z","type":"join"}
{"nick":"orbital-smith","message":"zsoc: how so?","date":"2017-01-08T02:57:53.261Z","type":"message"}
{"nick":"orbital-smith","message":"not really sure how I/O is involved in this scenario","date":"2017-01-08T02:58:09.847Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: are you saying a call to nextTick() may block?","date":"2017-01-08T02:58:25.429Z","type":"message"}
{"nick":"zsoc","message":"hold on i'm actually looking at node man pages, i don't usually do this haha","date":"2017-01-08T02:58:58.682Z","type":"message"}
{"nick":"calamity","message":"Howdy all, I have a webpage with a 'send email' section. Is there a particular benefit to handling this from the front end (e.g. with angular) vs having the message sent to the backend and then sent from there?","date":"2017-01-08T02:59:22.091Z","type":"message"}
{"nick":"bronson","reason":"Remote host closed the connection","date":"2017-01-08T03:00:01.311Z","type":"quit"}
{"nick":"zsoc","message":"nextTick always defers to the beginning of the next stack","date":"2017-01-08T03:00:02.534Z","type":"message"}
{"nick":"apparition","date":"2017-01-08T03:00:14.949Z","type":"join"}
{"nick":"GreenJello","message":"calamity, you need to send the email from the server; the decision is between a simple form post and ajax","date":"2017-01-08T03:00:32.204Z","type":"message"}
{"nick":"djmax","date":"2017-01-08T03:00:35.647Z","type":"join"}
{"nick":"GreenJello","message":"calamity, doing it with ajax gives you more control over the experience","date":"2017-01-08T03:00:53.929Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: so, there is a chance that the event loop could be prepended by a horde of nextTicks(), which means other async operations don't get a chance to complete","date":"2017-01-08T03:00:54.821Z","type":"message"}
{"nick":"dmz","reason":"Remote host closed the connection","date":"2017-01-08T03:00:57.142Z","type":"quit"}
{"nick":"calamity","message":"GreenJello, fair enough.  :)","date":"2017-01-08T03:01:10.251Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: i don't think that is a issue im liable to run into","date":"2017-01-08T03:01:21.814Z","type":"message"}
{"nick":"calamity","message":"GreenJello, on the server side, would nodemailer be appropriate?","date":"2017-01-08T03:01:36.994Z","type":"message"}
{"nick":"GreenJello","message":"calamity, yeah","date":"2017-01-08T03:01:44.732Z","type":"message"}
{"nick":"zsoc","message":"orbital-smith: I don't actually know the answer to your question. My general understanding is to /only/ use nextTick when you need to relieve the rest of your stack.. give some breathing room, because you have a computationally expensive recursive method. You seem to be describing the opposite","date":"2017-01-08T03:01:48.562Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: and that is still fine and all, but if contrasted with setTimeout(), i wonder how that would be any different","date":"2017-01-08T03:01:51.219Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: my specific usecase here is a pub/sub mechanism that gets stuck in a ping/pong loop","date":"2017-01-08T03:03:01.866Z","type":"message"}
{"nick":"orbital-smith","message":"so, a sends to b, b sends to a, a sends to b, and so on","date":"2017-01-08T03:03:15.408Z","type":"message"}
{"nick":"zsoc","message":"If you are only creating a recursive set of asynchronous tasks... there might be no difference. But I would wait for someone who understands it a little better than me to respond","date":"2017-01-08T03:03:21.064Z","type":"message"}
{"nick":"macwinne_","date":"2017-01-08T03:03:27.914Z","type":"join"}
{"nick":"orbital-smith","message":"zsoc: the problem is, if A->B, B->A, A->B over and over, you actually have a stack overflow if this exchange is happening in process","date":"2017-01-08T03:04:16.226Z","type":"message"}
{"nick":"SuperHans","date":"2017-01-08T03:04:28.677Z","type":"join"}
{"nick":"zsoc","message":"Yeah no it definitely is a problem. If you keep firing off recursive nextTicks for a non computationally expensive method, your i/o callbacks aren't actually going to run. You're just going to keep loading up the next event loop","date":"2017-01-08T03:05:02.889Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: typically, you would involve a socket, or other IO thing to push between A and B, but as the A and B exist within the same process, and messaging is asynchronous, the stack will explode, you need to defer it somehow","date":"2017-01-08T03:05:08.763Z","type":"message"}
{"nick":"orbital-smith","message":"let me post you some code...","date":"2017-01-08T03:05:35.583Z","type":"message"}
{"nick":"zsoc","message":"I mean this is sort of theoretical territory for me. I'm just yammering in hopes someone will correct me lol.","date":"2017-01-08T03:05:52.003Z","type":"message"}
{"nick":"zsoc","message":"I mean if you don't need the callbacks from your async calls... then maybe it would be okay?","date":"2017-01-08T03:06:15.711Z","type":"message"}
{"nick":"polydo_s","date":"2017-01-08T03:07:33.762Z","type":"join"}
{"nick":"zsoc","message":"but i'm pretty sure if you constantly have 1000 depth stack of nextTick's, you aren't going to ever get the callbacks from the async method that's in that loop.","date":"2017-01-08T03:08:18.432Z","type":"message"}
{"nick":"SuperHans","reason":"Ping timeout: 240 seconds","date":"2017-01-08T03:08:51.533Z","type":"quit"}
{"nick":"orbital-smith","message":"zsoc: http://pastebin.com/LBMVxN80","date":"2017-01-08T03:09:02.099Z","type":"message"}
{"nick":"bradfordli123","date":"2017-01-08T03:09:08.380Z","type":"join"}
{"nick":"Bajax","reason":"Remote host closed the connection","date":"2017-01-08T03:09:31.726Z","type":"quit"}
{"nick":"orbital-smith","message":"zsoc: line 22","date":"2017-01-08T03:09:41.923Z","type":"message"}
{"nick":"zsoc","message":"¯\\_(ツ)_/¯","date":"2017-01-08T03:09:55.579Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: i could just have easily used a setTimeout()","date":"2017-01-08T03:10:08.923Z","type":"message"}
{"nick":"orbital-smith","message":"both work, its just that nextTick() seems considerbly more lightweight a thing to use.","date":"2017-01-08T03:10:26.119Z","type":"message"}
{"nick":"macabre","reason":"Remote host closed the connection","date":"2017-01-08T03:10:32.008Z","type":"quit"}
{"nick":"nettoweb","date":"2017-01-08T03:10:55.986Z","type":"join"}
{"nick":"ahmed_elgabri","reason":"Ping timeout: 246 seconds","date":"2017-01-08T03:11:31.146Z","type":"quit"}
{"nick":"hextileX","date":"2017-01-08T03:11:48.529Z","type":"join"}
{"nick":"polydo_s","reason":"Ping timeout: 255 seconds","date":"2017-01-08T03:11:57.767Z","type":"quit"}
{"nick":"zsoc","message":"my answer is use setTimeout()","date":"2017-01-08T03:12:19.649Z","type":"message"}
{"nick":"zsoc","message":"otherwise try it yourself and see what you can break lol","date":"2017-01-08T03:12:26.753Z","type":"message"}
{"nick":"kaicataldo","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-01-08T03:12:40.392Z","type":"quit"}
{"nick":"orbital-smith","message":"zsoc: but why setTimeout() ?","date":"2017-01-08T03:12:43.531Z","type":"message"}
{"nick":"Bajax","date":"2017-01-08T03:13:34.156Z","type":"join"}
{"nick":"proscape","date":"2017-01-08T03:13:39.935Z","type":"join"}
{"nick":"orbital-smith","message":"im not sure why i would use setTimeout() which seems less efficient, and potentially slower (as we expect a timer mechanism, and a 1ms minimal delay)","date":"2017-01-08T03:14:35.440Z","type":"message"}
{"nick":"ironfroggy","date":"2017-01-08T03:15:01.519Z","type":"join"}
{"nick":"zsoc","message":"Because. Something something async callbacks not being processed and weird I/O things I don't understand. Either try it yourself or wait for someone else who understands it better lol.","date":"2017-01-08T03:15:03.464Z","type":"message"}
{"nick":"cagedwisdom","reason":"Ping timeout: 240 seconds","date":"2017-01-08T03:15:06.535Z","type":"quit"}
{"nick":"orbital-smith","action":"wonders if ljharb has any thoughts on this","date":"2017-01-08T03:15:28.124Z","type":"action"}
{"nick":"orbital-smith","message":"zsoc: well, thanks for your help","date":"2017-01-08T03:15:53.873Z","type":"message"}
{"nick":"Virtulis","reason":"Ping timeout: 248 seconds","date":"2017-01-08T03:17:05.827Z","type":"quit"}
{"nick":"bv","reason":"Quit: bv","date":"2017-01-08T03:17:56.893Z","type":"quit"}
{"nick":"melvster","date":"2017-01-08T03:18:50.335Z","type":"join"}
{"nick":"zsoc","message":"thanks for making me read things i am now slightly more knowledgeable about lol","date":"2017-01-08T03:19:20.616Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: unrelated note, do you know if many people are using async/await with node yet?","date":"2017-01-08T03:20:10.275Z","type":"message"}
{"nick":"zsoc","message":"with babel, sure","date":"2017-01-08T03:20:19.314Z","type":"message"}
{"nick":"orbital-smith","message":"common?","date":"2017-01-08T03:20:32.916Z","type":"message"}
{"nick":"zsoc","message":"it's V8 v5.5 which isn't integrated into node yet so it's behind a flag still","date":"2017-01-08T03:20:33.759Z","type":"message"}
{"nick":"zsoc","message":"er, no.. latest probably, it's stage4","date":"2017-01-08T03:20:44.288Z","type":"message"}
{"nick":"kbck","reason":"Quit: Leaving","date":"2017-01-08T03:20:52.881Z","type":"quit"}
{"nick":"zsoc","message":"BUTTT the v5.5 integration is done.. just some little weird fixes going on for CI greenness","date":"2017-01-08T03:21:03.362Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: i note that typescript now supports direct generator shimming from the compiler, so that's nice","date":"2017-01-08T03:21:15.044Z","type":"message"}
{"nick":"zsoc","message":"probably won't be backported to node v7.X tho so that means waiting til node v8.0 which is ... April","date":"2017-01-08T03:21:18.790Z","type":"message"}
{"nick":"orbital-smith","message":"can't do without me typescript, the workflow tho from TS -> Babel (regenerator) -> JS was pretty terrible in the past, its quite nice nowadays","date":"2017-01-08T03:22:16.004Z","type":"message"}
{"nick":"kegster","reason":"Ping timeout: 248 seconds","date":"2017-01-08T03:23:29.864Z","type":"quit"}
{"nick":"zsoc","message":"i'm not a huge typescript fan but i agree in general modern tooling is fantastic","date":"2017-01-08T03:24:05.472Z","type":"message"}
{"nick":"orbital-smith","message":"zsoc: never really understood why people don't like typescript","date":"2017-01-08T03:24:40.626Z","type":"message"}
{"nick":"orbital-smith","message":"each to their own i suppose","date":"2017-01-08T03:25:08.718Z","type":"message"}
{"nick":"zsoc","message":"Some of us don't come from c#/java xDDD","date":"2017-01-08T03:25:53.840Z","type":"message"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-01-08T03:26:24.499Z","type":"quit"}
{"nick":"nettoweb1","date":"2017-01-08T03:28:06.985Z","type":"join"}
{"nick":"jongleberry","reason":"Ping timeout: 255 seconds","date":"2017-01-08T03:31:38.133Z","type":"quit"}
{"nick":"orbital-smith","message":"zsoc: open to type systems tho?","date":"2017-01-08T03:31:38.447Z","type":"message"}
{"nick":"zsoc","message":"yeah i mean i've used typescript and i get the idea","date":"2017-01-08T03:31:38.679Z","type":"message"}
{"nick":"zsoc","message":"i'm a cowboy i guess :>","date":"2017-01-08T03:31:38.856Z","type":"message"}
{"nick":"kaicataldo","date":"2017-01-08T03:31:38.857Z","type":"join"}
{"nick":"orbital-smith","message":"zsoc: im too dumb to code without a type system :D","date":"2017-01-08T03:31:39.034Z","type":"message"}
{"nick":"zsoc","message":"and i'm too dumb to code with one :D","date":"2017-01-08T03:31:39.212Z","type":"message"}
{"nick":"nettoweb","reason":"Ping timeout: 260 seconds","date":"2017-01-08T03:31:39.212Z","type":"quit"}
{"nick":"schm0","reason":"Ping timeout: 255 seconds","date":"2017-01-08T03:31:45.620Z","type":"quit"}
{"nick":"ironfroggy","reason":"Read error: Connection reset by peer","date":"2017-01-08T03:34:35.228Z","type":"quit"}
{"nick":"node_fanatic","reason":"Quit: Leaving","date":"2017-01-08T03:34:44.816Z","type":"quit"}
{"nick":"braincrash","reason":"Ping timeout: 258 seconds","date":"2017-01-08T03:34:50.284Z","type":"quit"}
{"nick":"ironfroggy","date":"2017-01-08T03:35:49.513Z","type":"join"}
{"nick":"Herebord","reason":"Remote host closed the connection","date":"2017-01-08T03:40:07.224Z","type":"quit"}
{"nick":"calamity","reason":"Ping timeout: 240 seconds","date":"2017-01-08T03:40:39.660Z","type":"quit"}
{"nick":"noethics","message":"for smaller applications i think it just adds more development time without much benefit","date":"2017-01-08T03:41:22.702Z","type":"message"}
{"nick":"noethics","message":"and flow looks actually good now so id probably opt for that","date":"2017-01-08T03:41:38.652Z","type":"message"}
{"nick":"noethics","message":"for large monoliths typescript seems good ;D","date":"2017-01-08T03:42:27.774Z","type":"message"}
{"nick":"nettoweb1","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-01-08T03:42:44.604Z","type":"quit"}
{"nick":"noethics","message":"https://flowtype.org/docs/disjoint-unions.html#_","date":"2017-01-08T03:44:03.301Z","type":"message"}
{"nick":"noethics","message":"does ts have something like that?","date":"2017-01-08T03:44:14.999Z","type":"message"}
{"nick":"djmax","reason":"Remote host closed the connection","date":"2017-01-08T03:44:39.008Z","type":"quit"}
{"nick":"thebisquickman","reason":"Ping timeout: 240 seconds","date":"2017-01-08T03:45:09.621Z","type":"quit"}
{"nick":"djmax","date":"2017-01-08T03:46:02.495Z","type":"join"}
{"nick":"noethics","message":"the only bad thing is you cant switch on the type itself","date":"2017-01-08T03:46:05.499Z","type":"message"}
{"nick":"noethics","message":"should be like case Done(answer): ...","date":"2017-01-08T03:46:43.654Z","type":"message"}
{"nick":"aeontech","reason":"Quit: aeontech","date":"2017-01-08T03:47:49.582Z","type":"quit"}
{"nick":"sabrehagen","reason":"Quit: Leaving.","date":"2017-01-08T03:48:17.410Z","type":"quit"}
{"nick":"aeontech","date":"2017-01-08T03:48:47.995Z","type":"join"}
{"nick":"ryanmurakami","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-01-08T03:50:45.079Z","type":"quit"}
{"nick":"djmax","reason":"Remote host closed the connection","date":"2017-01-08T03:50:51.518Z","type":"quit"}
{"nick":"braincrash","date":"2017-01-08T03:51:45.225Z","type":"join"}
{"nick":"djmax","date":"2017-01-08T03:52:28.586Z","type":"join"}
{"nick":"ponga","date":"2017-01-08T03:52:35.571Z","type":"quit"}
{"nick":"weckstrom","reason":"Remote host closed the connection","date":"2017-01-08T03:52:39.102Z","type":"quit"}
{"nick":"phpnode","reason":"Remote host closed the connection","date":"2017-01-08T03:52:45.123Z","type":"quit"}
{"nick":"polonel_","date":"2017-01-08T03:52:58.219Z","type":"join"}
{"nick":"polonel","reason":"Ping timeout: 245 seconds","date":"2017-01-08T03:53:32.507Z","type":"quit"}
{"nick":"macabre","date":"2017-01-08T03:55:53.566Z","type":"join"}
{"nick":"zivester","reason":"Ping timeout: 255 seconds","date":"2017-01-08T03:56:30.609Z","type":"quit"}
{"nick":"djmax","reason":"Remote host closed the connection","date":"2017-01-08T03:56:32.364Z","type":"quit"}
{"nick":"djmax","date":"2017-01-08T03:56:55.524Z","type":"join"}
{"nick":"calamity","date":"2017-01-08T03:59:10.631Z","type":"join"}
{"nick":"macabre","reason":"Ping timeout: 255 seconds","date":"2017-01-08T04:00:33.592Z","type":"quit"}
{"nick":"polydo_s","date":"2017-01-08T04:01:51.131Z","type":"join"}
{"nick":"anuxivm","date":"2017-01-08T04:02:50.532Z","type":"part"}
{"nick":"conta","date":"2017-01-08T04:04:16.181Z","type":"join"}
{"nick":"Noldorin","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2017-01-08T04:04:36.337Z","type":"quit"}
{"nick":"braincrash","reason":"Ping timeout: 260 seconds","date":"2017-01-08T04:04:42.318Z","type":"quit"}
{"nick":"SuperHans","date":"2017-01-08T04:05:11.179Z","type":"join"}
{"nick":"polydo_s","reason":"Ping timeout: 255 seconds","date":"2017-01-08T04:06:24.589Z","type":"quit"}
{"nick":"jongleberry","date":"2017-01-08T04:06:26.598Z","type":"join"}
{"nick":"conta","reason":"Ping timeout: 258 seconds","date":"2017-01-08T04:08:34.163Z","type":"quit"}
{"nick":"SuperHans","reason":"Ping timeout: 258 seconds","date":"2017-01-08T04:09:43.158Z","type":"quit"}
{"nick":"djmax","reason":"Remote host closed the connection","date":"2017-01-08T04:10:26.104Z","type":"quit"}
{"nick":"jongleberry","reason":"Remote host closed the connection","date":"2017-01-08T04:13:44.364Z","type":"quit"}
{"nick":"jongleberry","date":"2017-01-08T04:13:50.539Z","type":"join"}
{"nick":"nishu-tryinghard","date":"2017-01-08T04:15:09.616Z","type":"join"}
{"nick":"braincrash","date":"2017-01-08T04:26:22.396Z","type":"join"}
{"nick":"djmax","date":"2017-01-08T04:26:48.097Z","type":"join"}
{"nick":"phutchins","reason":"Ping timeout: 248 seconds","date":"2017-01-08T04:27:32.413Z","type":"quit"}
{"nick":"smccarthy","reason":"Remote host closed the connection","date":"2017-01-08T04:29:36.284Z","type":"quit"}
{"nick":"aeontech","date":"2017-01-08T04:32:05.376Z","type":"part"}
{"nick":"IrishGringo","date":"2017-01-08T04:33:57.513Z","type":"join"}
{"nick":"MINIMAN10000","reason":"Ping timeout: 255 seconds","date":"2017-01-08T04:34:45.504Z","type":"quit"}
{"nick":"proscape","reason":"Quit: Page closed","date":"2017-01-08T04:36:30.543Z","type":"quit"}
{"nick":"jbud","reason":"Quit: leaving","date":"2017-01-08T04:37:45.478Z","type":"quit"}
{"nick":"ljharb","message":"orbital-smith: ?","date":"2017-01-08T04:39:21.016Z","type":"message"}
{"nick":"ljharb","message":"!setinterval @ orbital-smith","date":"2017-01-08T04:39:28.869Z","type":"message"}
{"nick":"ecmabot","message":"orbital-smith: Avoid setInterval; use setTimeout instead. http://zetafleet.com/blog/why-i-consider-setinterval-harmful","date":"2017-01-08T04:39:29.083Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: you should *never ever ever* use setInterval under any circumstances.","date":"2017-01-08T04:39:38.065Z","type":"message"}
{"nick":"orbital-smith","message":"ljharb: wasn't talking about setInterval at all","date":"2017-01-08T04:39:50.448Z","type":"message"}
{"nick":"orbital-smith","message":"so...","date":"2017-01-08T04:39:56.076Z","type":"message"}
{"nick":"ljharb","message":"oh lol","date":"2017-01-08T04:39:58.308Z","type":"message"}
{"nick":"ljharb","message":"what thought of mine did you want","date":"2017-01-08T04:40:02.032Z","type":"message"}
{"nick":"orbital-smith","message":"ljharb: the question was, setTimeout vs process.nextTick()","date":"2017-01-08T04:40:13.729Z","type":"message"}
{"nick":"ljharb","message":"oh","date":"2017-01-08T04:40:27.848Z","type":"message"}
{"nick":"ljharb","message":"it depends what semantics you want","date":"2017-01-08T04:40:32.730Z","type":"message"}
{"nick":"orbital-smith","message":"ljharb: in the topic of recursive functions that are async","date":"2017-01-08T04:40:33.663Z","type":"message"}
{"nick":"ljharb","message":"but setTimeout is more portable","date":"2017-01-08T04:40:35.447Z","type":"message"}
{"nick":"ljharb","message":"oh","date":"2017-01-08T04:40:37.953Z","type":"message"}
{"nick":"ljharb","message":"recursion you def don't want nextTick","date":"2017-01-08T04:40:44.609Z","type":"message"}
{"nick":"ljharb","message":"you can starve the event loop doing that","date":"2017-01-08T04:40:48.530Z","type":"message"}
{"nick":"orbital-smith","message":"ljharb: its not endlessly recursive tho","date":"2017-01-08T04:41:02.181Z","type":"message"}
{"nick":"ljharb","message":"still","date":"2017-01-08T04:41:14.495Z","type":"message"}
{"nick":"orbital-smith","message":"the context was to do with message exchange, imagine you have two actors, A and B","date":"2017-01-08T04:41:31.399Z","type":"message"}
{"nick":"node_fanatic","date":"2017-01-08T04:41:45.179Z","type":"join"}
{"nick":"orbital-smith","message":"A -> ping -> B -> pong -> A -> ping -> B -> pong -> A and so on","date":"2017-01-08T04:41:55.440Z","type":"message"}
{"nick":"ljharb","message":"right but why would you want nextTick there","date":"2017-01-08T04:42:12.774Z","type":"message"}
{"nick":"orbital-smith","message":"ljharb: so, here, you have a loop of messaging pinging between these actors.","date":"2017-01-08T04:42:14.704Z","type":"message"}
{"nick":"ljharb","message":"are these actors both in the same JS thread?","date":"2017-01-08T04:42:25.005Z","type":"message"}
{"nick":"wadie","reason":"Remote host closed the connection","date":"2017-01-08T04:42:28.278Z","type":"quit"}
{"nick":"orbital-smith","message":"ljharb: they may, they may not, but im designing like they are in the same js thread","date":"2017-01-08T04:42:43.178Z","type":"message"}
{"nick":"orbital-smith","message":"ljharb: in a deployment scenario, they will be in different processes (probably on other networks)","date":"2017-01-08T04:43:00.589Z","type":"message"}
{"nick":"orbital-smith","message":"for building a local test case, i want them in the same process","date":"2017-01-08T04:43:13.372Z","type":"message"}
{"nick":"orbital-smith","message":"ljharb: so, in the same JS thread, the stack will explode eventually, (or quickly if i don't add some delay), the question was, would it be reasonable to leverage nextTick here, all i want is to be able to defer the sending off the message and let the JS call stack unwind....i could use setTimeout","date":"2017-01-08T04:44:35.235Z","type":"message"}
{"nick":"ljharb","message":"i'd recommend setTimeout","date":"2017-01-08T04:44:53.190Z","type":"message"}
{"nick":"orbital-smith","message":"but, wouldn't that be significantly slower?","date":"2017-01-08T04:45:13.642Z","type":"message"}
{"nick":"noethics","message":"out of curiosity how would you starve the event loop with nexttick?","date":"2017-01-08T04:45:15.762Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: no?","date":"2017-01-08T04:45:35.638Z","type":"message"}
{"nick":"ljharb","message":"noethics: if you recursively set nextTick, nothing else can run","date":"2017-01-08T04:45:45.992Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: what is the async thing you're doing?","date":"2017-01-08T04:45:59.337Z","type":"message"}
{"nick":"orbital-smith","message":"ljharb: but setTimeout kicks up a nodejs timer, nextTick doesn't, also, doesn't the setTimeout come back after 1ms?","date":"2017-01-08T04:46:04.334Z","type":"message"}
{"nick":"GreenJello","message":"noethics, process.nextTick(function foo(){ process.nextTick(foo) })","date":"2017-01-08T04:46:04.512Z","type":"message"}
{"nick":"noethics","message":"oh right because it has to return","date":"2017-01-08T04:46:05.388Z","type":"message"}
{"nick":"mrkmg","reason":"Quit: mrkmg","date":"2017-01-08T04:46:07.553Z","type":"quit"}
{"nick":"ljharb","message":"orbital-smith: um. yes they both do","date":"2017-01-08T04:46:12.668Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: what they both do is add things to an internal queue. there's no \"running timer\"","date":"2017-01-08T04:46:25.010Z","type":"message"}
{"nick":"orbital-smith","message":"i thought nextTick would just post a callback directly to the loop","date":"2017-01-08T04:46:29.954Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: and yes, setTimeout comes back after 4ms iir","date":"2017-01-08T04:46:33.594Z","type":"message"}
{"nick":"ljharb","message":"c","date":"2017-01-08T04:46:34.605Z","type":"message"}
{"nick":"GreenJello","message":"it posts it to a special queue afaik","date":"2017-01-08T04:46:40.700Z","type":"message"}
{"nick":"orbital-smith","message":"4ms is too slow","date":"2017-01-08T04:46:43.616Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: that's storing a callback in the queue just like setTimeout oes.","date":"2017-01-08T04:46:45.296Z","type":"message"}
{"nick":"ljharb","message":"*does","date":"2017-01-08T04:46:47.099Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: you can't get faster than that without starving the event loop","date":"2017-01-08T04:46:57.320Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: altho node has setImmediate i think","date":"2017-01-08T04:47:03.238Z","type":"message"}
{"nick":"noethics","message":"nexttick should have the same latency","date":"2017-01-08T04:47:03.834Z","type":"message"}
{"nick":"orbital-smith","message":"ljharb: sure, but its the difference between (storing a function) and (storing a function + timer)","date":"2017-01-08T04:47:13.791Z","type":"message"}
{"nick":"ljharb","message":"it probably does","date":"2017-01-08T04:47:14.176Z","type":"message"}
{"nick":"noethics","message":"setimmediate is an alias for setTimeout(x, 0) i thought","date":"2017-01-08T04:47:15.681Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: no, it's not","date":"2017-01-08T04:47:17.876Z","type":"message"}
{"nick":"orbital-smith","message":"how so?","date":"2017-01-08T04:47:22.839Z","type":"message"}
{"nick":"GreenJello","message":"setImmediate is faster than setTimeout","date":"2017-01-08T04:47:25.863Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: it's \"storing a function + next tick flag\" and \"storing a function + timestamp\"","date":"2017-01-08T04:47:28.650Z","type":"message"}
{"nick":"noethics","message":":o","date":"2017-01-08T04:47:29.859Z","type":"message"}
{"nick":"GreenJello","message":"setTimeout has a 4ms minimum","date":"2017-01-08T04:47:31.746Z","type":"message"}
{"nick":"orbital-smith","message":"GreenJello: that's a good point actually, setImmediate","date":"2017-01-08T04:47:44.539Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: nextTick isn't faster than setTimeout inherently, it's identical but has different execution semantics","date":"2017-01-08T04:47:52.345Z","type":"message"}
{"nick":"noethics","message":"i thought anything would have a 4ms minimum","date":"2017-01-08T04:48:01.870Z","type":"message"}
{"nick":"ljharb","message":"there's no such thing as \"kicking up a timer\", that's just a concept","date":"2017-01-08T04:48:04.365Z","type":"message"}
{"nick":"noethics","message":"since that's the tickrate","date":"2017-01-08T04:48:05.977Z","type":"message"}
{"nick":"orbital-smith","message":"ljharb: well, its the execution semantics im thinking about here","date":"2017-01-08T04:48:12.465Z","type":"message"}
{"nick":"noethics","message":"setimmediate might run it on the same tick?","date":"2017-01-08T04:48:12.789Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: i can't fathom what you need that's faster than 4ms","date":"2017-01-08T04:48:28.761Z","type":"message"}
{"nick":"ljharb","message":"noethics: just after","date":"2017-01-08T04:48:33.699Z","type":"message"}
{"nick":"orbital-smith","message":"...","date":"2017-01-08T04:48:34.599Z","type":"message"}
{"nick":"orbital-smith","message":"ljharb: really?","date":"2017-01-08T04:48:41.882Z","type":"message"}
{"nick":"ljharb","message":"yes really","date":"2017-01-08T04:48:46.449Z","type":"message"}
{"nick":"orbital-smith","message":"4ms is slow","date":"2017-01-08T04:48:47.769Z","type":"message"}
{"nick":"ljharb","message":"4ms is probably faster than it takes to send each message in JS","date":"2017-01-08T04:49:01.733Z","type":"message"}
{"nick":"noethics","message":"4ms is insanely slow for anything realtime","date":"2017-01-08T04:49:03.188Z","type":"message"}
{"nick":"orbital-smith","message":"^","date":"2017-01-08T04:49:10.151Z","type":"message"}
{"nick":"noethics","message":"but anything with network it shouldnt matter","date":"2017-01-08T04:49:12.227Z","type":"message"}
{"nick":"noethics","message":"if you use the network, it ain't realtime","date":"2017-01-08T04:49:18.479Z","type":"message"}
{"nick":"ljharb","message":"right","date":"2017-01-08T04:49:20.657Z","type":"message"}
{"nick":"ljharb","message":"that's what i'm saying","date":"2017-01-08T04:49:24.297Z","type":"message"}
{"nick":"orbital-smith","message":"ljharb: lets say you have a high throughput server, and you receive 10 messages ever 1ms","date":"2017-01-08T04:49:32.287Z","type":"message"}
{"nick":"braincrash","reason":"Ping timeout: 240 seconds","date":"2017-01-08T04:49:32.969Z","type":"quit"}
{"nick":"ljharb","message":"for anything with network and/or processing time, it's fast enough","date":"2017-01-08T04:49:36.841Z","type":"message"}
{"nick":"orbital-smith","message":"having a 4ms self induced delay means node is going have have to buffer those messages while it waits for the 4ms to elapse","date":"2017-01-08T04:50:08.456Z","type":"message"}
{"nick":"noethics","message":"no","date":"2017-01-08T04:50:19.099Z","type":"message"}
{"nick":"noethics","message":"if you get 10 msgs at the same tick and you defer them to the next tick to process","date":"2017-01-08T04:50:34.246Z","type":"message"}
{"nick":"noethics","message":"they should all be processed in that tick","date":"2017-01-08T04:50:39.638Z","type":"message"}
{"nick":"GreenJello","message":"other timers can fire, it's not like it just stops doing stuff for 4ms","date":"2017-01-08T04:50:41.695Z","type":"message"}
{"nick":"GreenJello","message":"if you set one 2ms ago and another now, the first will fire in 2ms","date":"2017-01-08T04:51:03.792Z","type":"message"}
{"nick":"noethics","message":"but really this is why node isnt used for games and stuff","date":"2017-01-08T04:51:04.714Z","type":"message"}
{"nick":"orbital-smith","message":"ljharb: 4ms is just slow, if there is a mechanism that lets me just defer the processing (while unwinding the js call stack), its probably worth investigating","date":"2017-01-08T04:51:11.279Z","type":"message"}
{"nick":"noethics","message":"anything with a gc and especially node because of event loop","date":"2017-01-08T04:51:13.602Z","type":"message"}
{"nick":"noethics","message":"is going to have latency","date":"2017-01-08T04:51:17.297Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: then build it with setTimeout, benchmark it, and THEN try to make it faster","date":"2017-01-08T04:51:26.398Z","type":"message"}
{"nick":"GreenJello","message":"you don't use node for the performance...","date":"2017-01-08T04:51:28.795Z","type":"message"}
{"nick":"noethics","message":"node has really good perf","date":"2017-01-08T04:51:50.446Z","type":"message"}
{"nick":"ljharb","message":"orbital-smith: trying to reason about performance is always going to end up in you being wrong. built it, test it, profile it, and only *then* can you make a successful optimization","date":"2017-01-08T04:51:50.625Z","type":"message"}
{"nick":"orbital-smith","message":"i don't see why you couldn't use nodeis for performance","date":"2017-01-08T04:51:59.462Z","type":"message"}
{"nick":"ljharb","message":"ofc you can","date":"2017-01-08T04:52:05.137Z","type":"message"}
{"nick":"noethics","message":"but the problem is the gc and event loop are extra latency on top of its good performance","date":"2017-01-08T04:52:10.340Z","type":"message"}
{"nick":"GreenJello","message":"node just performs well enough","date":"2017-01-08T04:52:15.367Z","type":"message"}
{"nick":"ljharb","message":"but until you have a baseline, and benchmarks, you can't possibly know for sure if you made anything faster","date":"2017-01-08T04:52:18.954Z","type":"message"}
{"nick":"GreenJello","message":"for most apps","date":"2017-01-08T04:52:21.110Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: most network servers handle synchronization on a single thread","date":"2017-01-08T04:52:32.806Z","type":"message"}
{"nick":"noethics","message":"okay?","date":"2017-01-08T04:52:42.892Z","type":"message"}
{"nick":"noethics","message":"define synchronization","date":"2017-01-08T04:52:57.081Z","type":"message"}
{"nick":"noethics","message":"and your point :P","date":"2017-01-08T04:53:01.881Z","type":"message"}
{"nick":"phpnode","date":"2017-01-08T04:53:13.449Z","type":"join"}
{"nick":"orbital-smith","message":"that node is no different to how other servers are handling things","date":"2017-01-08T04:53:15.523Z","type":"message"}
{"nick":"pilne","reason":"Quit: Quitting!","date":"2017-01-08T04:53:51.664Z","type":"quit"}
{"nick":"orbital-smith","message":"and for synchronization, the application makes a call over the IOCP/epoll and needs to wait on some background thread, when it completes, the message is \"synchronized\" with the caller thread, this is what event loops do","date":"2017-01-08T04:54:10.426Z","type":"message"}
{"nick":"noethics","message":"its entirely different","date":"2017-01-08T04:54:19.571Z","type":"message"}
{"nick":"orbital-smith","message":"but that is what node is doing tho","date":"2017-01-08T04:54:31.939Z","type":"message"}
{"nick":"noethics","message":"often you have a single thread that does the scheduling for other threads","date":"2017-01-08T04:54:33.680Z","type":"message"}
{"nick":"orbital-smith","message":"sure","date":"2017-01-08T04:54:42.683Z","type":"message"}
{"nick":"noethics","message":"*user* threads","date":"2017-01-08T04:54:48.105Z","type":"message"}
{"nick":"orbital-smith","message":"these are background details","date":"2017-01-08T04:54:48.282Z","type":"message"}
{"nick":"noethics","message":"it would be if node did that in the general case","date":"2017-01-08T04:55:00.010Z","type":"message"}
{"nick":"noethics","message":"but it doesn't","date":"2017-01-08T04:55:03.217Z","type":"message"}
{"nick":"IrishGringo","reason":"Ping timeout: 255 seconds","date":"2017-01-08T04:55:27.452Z","type":"quit"}
{"nick":"noethics","message":"it has a threadpool it uses for very specific things like io","date":"2017-01-08T04:55:37.845Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: ..... and how are the results given back from each thread synchronized with javascript?","date":"2017-01-08T04:56:04.817Z","type":"message"}
{"nick":"polydo_s","date":"2017-01-08T04:56:07.068Z","type":"join"}
{"nick":"noethics","message":"but very unlikely that any of your actual user code is going to be in a different thread","date":"2017-01-08T04:56:07.920Z","type":"message"}
{"nick":"orbital-smith","message":"in javascript, its not","date":"2017-01-08T04:56:20.314Z","type":"message"}
{"nick":"noethics","message":"?","date":"2017-01-08T04:56:29.667Z","type":"message"}
{"nick":"orbital-smith","message":"javascript is single threaded","date":"2017-01-08T04:56:38.434Z","type":"message"}
{"nick":"noethics","message":"it's not actually single threaded but sure","date":"2017-01-08T04:56:52.958Z","type":"message"}
{"nick":"noethics","message":"i just explained it","date":"2017-01-08T04:57:05.346Z","type":"message"}
{"nick":"orbital-smith","message":"results from each internal thread is scheduled on the event loop is it not?","date":"2017-01-08T04:57:11.182Z","type":"message"}
{"nick":"noethics","message":"it depends on what you're talking about","date":"2017-01-08T04:57:26.531Z","type":"message"}
{"nick":"weckstrom","date":"2017-01-08T04:57:45.952Z","type":"join"}
{"nick":"orbital-smith","message":"im confused, you are just saying exactly what im saying","date":"2017-01-08T04:57:54.871Z","type":"message"}
{"nick":"orbital-smith","message":"why?","date":"2017-01-08T04:58:01.161Z","type":"message"}
{"nick":"phpnode","reason":"Ping timeout: 260 seconds","date":"2017-01-08T04:58:22.247Z","type":"quit"}
{"nick":"noethics","message":"your point was the fact that it uses a scheduler for other threads makes it the same as other network frameworks in other languages","date":"2017-01-08T04:58:34.967Z","type":"message"}
{"nick":"noethics","message":"but it's entirely different, because your \"handlers\" are running in different threads usually","date":"2017-01-08T04:58:48.892Z","type":"message"}
{"nick":"orbital-smith","message":"yes, many approach things this way","date":"2017-01-08T04:58:53.537Z","type":"message"}
{"nick":"noethics","message":"not just the io","date":"2017-01-08T04:58:55.128Z","type":"message"}
{"nick":"noethics","message":"not just X, all code that is executed as per your orders","date":"2017-01-08T04:59:08.885Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: my point was that event loops are not unique to node, and by using a event loop, changes are the event loop is automatically scheduling to the same thread, its why people use event loops","date":"2017-01-08T04:59:37.972Z","type":"message"}
{"nick":"noethics","message":"node is often a \"good enough\" solution, but not for realtime systems","date":"2017-01-08T04:59:44.903Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: i disagree","date":"2017-01-08T05:00:01.439Z","type":"message"}
{"nick":"noethics","message":"people use event loops to do async, yes, we know","date":"2017-01-08T05:00:21.841Z","type":"message"}
{"nick":"polydo_s","reason":"Ping timeout: 255 seconds","date":"2017-01-08T05:00:24.509Z","type":"quit"}
{"nick":"bronson","date":"2017-01-08T05:00:28.610Z","type":"join"}
{"nick":"Limes__","date":"2017-01-08T05:00:34.588Z","type":"join"}
{"nick":"orbital-smith","message":"right, so ?","date":"2017-01-08T05:00:40.865Z","type":"message"}
{"nick":"noethics","message":"languages usually don't have a single event loop at the core of the language, not \"high throughput\" ones","date":"2017-01-08T05:00:47.444Z","type":"message"}
{"nick":"orbital-smith","message":"that is true, but that makes node sublime","date":"2017-01-08T05:01:03.192Z","type":"message"}
{"nick":"noethics","message":"and you already were surprised by the 4ms latency between ticks, so?","date":"2017-01-08T05:01:12.981Z","type":"message"}
{"nick":"noethics","message":"why are you arguing with me about it","date":"2017-01-08T05:01:18.168Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: it wasn't for ticks, it was for setTimeout","date":"2017-01-08T05:01:35.006Z","type":"message"}
{"nick":"noethics","message":"where does the 4ms come from when you use settimeout/","date":"2017-01-08T05:01:59.819Z","type":"message"}
{"nick":"noethics","message":"process.sleep(4)?","date":"2017-01-08T05:02:10.837Z","type":"message"}
{"nick":"noethics","message":"no, it's the tick","date":"2017-01-08T05:02:14.968Z","type":"message"}
{"nick":"orbital-smith","message":"i would have thought nextTick() response times would be largely dependent on how many things are in the event loop queue","date":"2017-01-08T05:02:15.921Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: ljharb said 4ms","date":"2017-01-08T05:02:28.546Z","type":"message"}
{"nick":"noethics","message":"ok?","date":"2017-01-08T05:02:39.046Z","type":"message"}
{"nick":"kingarmadillo","date":"2017-01-08T05:02:41.020Z","type":"join"}
{"nick":"orbital-smith","message":"i said it was too slow, there must be a better alternitive","date":"2017-01-08T05:02:41.318Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: why are you asking me things, then being confrontational when i answer you?","date":"2017-01-08T05:03:01.507Z","type":"message"}
{"nick":"noethics","message":"setImmediate apparently can sometimes be run on the same tick","date":"2017-01-08T05:03:05.333Z","type":"message"}
{"nick":"noethics","message":"those were rhetorical questions","date":"2017-01-08T05:03:14.019Z","type":"message"}
{"nick":"braincrash","date":"2017-01-08T05:03:16.658Z","type":"join"}
{"nick":"calamity","reason":"Ping timeout: 240 seconds","date":"2017-01-08T05:03:36.513Z","type":"quit"}
{"nick":"noethics","message":"if you want to avoid latency (consistently), don't use node","date":"2017-01-08T05:03:50.353Z","type":"message"}
{"nick":"noethics","message":"simple as that","date":"2017-01-08T05:03:53.550Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: you are missing the point, and you are not being constructive to this conversation","date":"2017-01-08T05:04:38.658Z","type":"message"}
{"nick":"bronson","reason":"Ping timeout: 240 seconds","date":"2017-01-08T05:05:11.585Z","type":"quit"}
{"nick":"jeffreylevesque","date":"2017-01-08T05:05:55.518Z","type":"join"}
{"nick":"SuperHans","date":"2017-01-08T05:05:59.385Z","type":"join"}
{"nick":"subfuzion","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-01-08T05:06:14.603Z","type":"quit"}
{"nick":"Limes__","reason":"Ping timeout: 245 seconds","date":"2017-01-08T05:06:27.515Z","type":"quit"}
{"nick":"orbital-smith","message":"sweeping generalizations about what i do want, putting words in my mouth and calling me out on it, and diverting the question off to some random discussion about systems and event loops gets me no closer to answering the question, should one use setTimeout, setImmediate, or process.nextTick","date":"2017-01-08T05:06:37.208Z","type":"message"}
{"nick":"orbital-smith","message":"but thanks","date":"2017-01-08T05:06:39.742Z","type":"message"}
{"nick":"noethics","message":"you did the diverting of the conversation when you said other \"high throughput\" systems do the same thing","date":"2017-01-08T05:06:59.262Z","type":"message"}
{"nick":"noethics","message":"you generalized (sweepingly) the node event loop to every other event loop","date":"2017-01-08T05:07:10.267Z","type":"message"}
{"nick":"kingarmadillo","reason":"Ping timeout: 258 seconds","date":"2017-01-08T05:07:12.952Z","type":"quit"}
{"nick":"noethics","message":"and your question was already answered about those 3 functions","date":"2017-01-08T05:07:22.567Z","type":"message"}
{"nick":"subfuzion","date":"2017-01-08T05:07:47.483Z","type":"join"}
{"nick":"siba","date":"2017-01-08T05:07:56.177Z","type":"join"}
{"nick":"orbital-smith","message":"https://nodejs.org/api/process.html#process_process_nexttick_callback_args","date":"2017-01-08T05:08:08.435Z","type":"message"}
{"nick":"orbital-smith","message":"specifically \"This is not a simple alias to setTimeout(fn, 0). It is much more efficient. It runs before any additional I/O events (including timers) fire in subsequent ticks of the event loop.\"","date":"2017-01-08T05:08:20.779Z","type":"message"}
{"nick":"orbital-smith","message":"which seems like the behavior i want","date":"2017-01-08T05:08:31.342Z","type":"message"}
{"nick":"noethics","message":"it is good for what you want, but there will still be latency from the last tick","date":"2017-01-08T05:08:49.910Z","type":"message"}
{"nick":"noethics","message":"and as shown you can't use it recursively","date":"2017-01-08T05:09:00.652Z","type":"message"}
{"nick":"snowkidind","reason":"Quit: astalaPIZZA Baby!","date":"2017-01-08T05:09:03.940Z","type":"quit"}
{"nick":"jscheel","date":"2017-01-08T05:09:55.274Z","type":"join"}
{"nick":"orbital-smith","message":"https://nodejs.org/api/timers.html#timers_setimmediate_callback_args also looks reasonable","date":"2017-01-08T05:10:11.316Z","type":"message"}
{"nick":"SuperHans","reason":"Ping timeout: 260 seconds","date":"2017-01-08T05:10:37.236Z","type":"quit"}
{"nick":"orbital-smith","message":"noethics: the thing is, i like the idea of posting directly to the event loop, which means callback is invoked as soon as it can be, without involving a timer at all","date":"2017-01-08T05:12:10.343Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: one is dependent on timing, the other is dependent on how much load there is on the process","date":"2017-01-08T05:12:38.612Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: using setTimeout just incurs additional load (by scheduling a timer as well as scheduling in the event loop)","date":"2017-01-08T05:13:13.992Z","type":"message"}
{"nick":"noethics","message":"setImmediate and nextTick are probably your best options","date":"2017-01-08T05:13:48.125Z","type":"message"}
{"nick":"noethics","message":"i would lean to setImmediate if you're using recursion","date":"2017-01-08T05:14:13.806Z","type":"message"}
{"nick":"noethics","message":"or you could use a trampoline with nextTick","date":"2017-01-08T05:14:22.415Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: im not doing recursion specifically,","date":"2017-01-08T05:14:37.624Z","type":"message"}
{"nick":"dk0r","reason":"Read error: Connection reset by peer","date":"2017-01-08T05:14:50.340Z","type":"quit"}
{"nick":"orbital-smith","message":"its just that the reason im picking one over the other satisfies a particular recursive usecase","date":"2017-01-08T05:15:06.090Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: i mean i could look at this another way....","date":"2017-01-08T05:15:28.683Z","type":"message"}
{"nick":"noethics","message":"im talking about programmatic recursion. if you call a function from itself you're doing recursion","date":"2017-01-08T05:15:36.249Z","type":"message"}
{"nick":"orbital-smith","message":"lets assume i receive a message.....","date":"2017-01-08T05:15:37.260Z","type":"message"}
{"nick":"noethics","message":"if you're not you're not doing recursion","date":"2017-01-08T05:15:41.407Z","type":"message"}
{"nick":"orbital-smith","message":"messages.push(themessage)","date":"2017-01-08T05:15:43.849Z","type":"message"}
{"nick":"noethics","message":"that's all i care about","date":"2017-01-08T05:15:44.026Z","type":"message"}
{"nick":"orbital-smith","message":"then, i have some setInterval() => { /* while messages > 0, dispatch */ })","date":"2017-01-08T05:16:09.084Z","type":"message"}
{"nick":"orbital-smith","message":"so, this second case would satisfy receiving messages, and messages would be published in 1ms intervals, which would be somewhat ok...","date":"2017-01-08T05:17:12.850Z","type":"message"}
{"nick":"orbital-smith","message":"again, the effort in doing things this way would be to prevent a recursive loop from happening if you have a ping/pong loop occur in the application","date":"2017-01-08T05:18:02.794Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: i should note, that recusion would be the exception, its not the rule","date":"2017-01-08T05:18:35.396Z","type":"message"}
{"nick":"noethics","message":"i don't see any recursion there","date":"2017-01-08T05:18:55.197Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: http://pastebin.com/LBMVxN80","date":"2017-01-08T05:18:58.814Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: which demonstrates the application getting into a recursive loop","date":"2017-01-08T05:19:47.987Z","type":"message"}
{"nick":"orbital-smith","message":"im saying, i could mitigate that recursion by using process.nextTick() as demonstrated","date":"2017-01-08T05:20:09.721Z","type":"message"}
{"nick":"ianmethyst","date":"2017-01-08T05:20:28.506Z","type":"join"}
{"nick":"noethics","message":"that's not programmatic recursion in the sense i mean","date":"2017-01-08T05:20:34.051Z","type":"message"}
{"nick":"orbital-smith","message":"yes, and it wasn't in the sense i meant either","date":"2017-01-08T05:20:50.557Z","type":"message"}
{"nick":"noethics","message":"you shouldnt have a problem with nexttick","date":"2017-01-08T05:20:56.296Z","type":"message"}
{"nick":"nikivi","date":"2017-01-08T05:21:12.104Z","type":"join"}
{"nick":"noethics","message":"of course you need some kind of base case to eliminate a deadlock","date":"2017-01-08T05:21:12.527Z","type":"message"}
{"nick":"orbital-smith","message":"right, and i should incur a 4ms penalty either","date":"2017-01-08T05:21:15.012Z","type":"message"}
{"nick":"kuldeep","reason":"Remote host closed the connection","date":"2017-01-08T05:21:26.656Z","type":"quit"}
{"nick":"orbital-smith","message":"deadlock, yes, that is a consideration","date":"2017-01-08T05:21:31.630Z","type":"message"}
{"nick":"kuldeep","date":"2017-01-08T05:21:49.299Z","type":"join"}
{"nick":"Ryuken","date":"2017-01-08T05:23:39.637Z","type":"join"}
{"nick":"orbital-smith","message":"noethics: on deadlock, the case would be true for setTimeout, so i wonder, would it be good to have some contextual setTimeout like thing that doesn't involve a timer, but just lets you kick up some mini event loop that yields to the main event loop, and you would call nextTick() on that","date":"2017-01-08T05:24:08.196Z","type":"message"}
{"nick":"noethics","message":"to be clear this isn't exactly a deadlock. it's just an infinite loop","date":"2017-01-08T05:24:34.628Z","type":"message"}
{"nick":"orbital-smith","message":"yes","date":"2017-01-08T05:24:43.492Z","type":"message"}
{"nick":"noethics","message":"but i think if you have one, as per your protocol, it's an error in the protocol","date":"2017-01-08T05:24:50.418Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: it might be, it might not be","date":"2017-01-08T05:25:10.606Z","type":"message"}
{"nick":"noethics","message":"if i understand correctly, you're responding to a pong?","date":"2017-01-08T05:25:26.513Z","type":"message"}
{"nick":"noethics","message":"which is not really a typical thing to do","date":"2017-01-08T05:25:32.371Z","type":"message"}
{"nick":"noethics","message":"ping -> pong // end","date":"2017-01-08T05:25:37.493Z","type":"message"}
{"nick":"polydo_s","date":"2017-01-08T05:25:51.223Z","type":"join"}
{"nick":"kuldeep","reason":"Read error: Connection reset by peer","date":"2017-01-08T05:26:02.041Z","type":"quit"}
{"nick":"orbital-smith","message":"noethics: no, the usecase is a ping -> pong then pong -> ping....the implementation was quite intentional","date":"2017-01-08T05:26:03.391Z","type":"message"}
{"nick":"noethics","message":"pong -> ping makes no sense to me","date":"2017-01-08T05:26:19.239Z","type":"message"}
{"nick":"noethics","message":"why do you want that","date":"2017-01-08T05:26:22.300Z","type":"message"}
{"nick":"orbital-smith","message":"i wouldn't usually","date":"2017-01-08T05:26:29.281Z","type":"message"}
{"nick":"kuldeep","date":"2017-01-08T05:27:01.411Z","type":"join"}
{"nick":"orbital-smith","message":"note, that the messages that fly around are a application detail, not a protocol detail","date":"2017-01-08T05:27:13.169Z","type":"message"}
{"nick":"kuldeep","reason":"Read error: Connection reset by peer","date":"2017-01-08T05:27:28.177Z","type":"quit"}
{"nick":"zxc","date":"2017-01-08T05:27:34.882Z","type":"join"}
{"nick":"kuldeep","date":"2017-01-08T05:27:57.516Z","type":"join"}
{"nick":"orbital-smith","message":"noethics: if wanted checks and balances in the protocol, i would add some count on the message, and the count would get incremented on each pass","date":"2017-01-08T05:28:06.068Z","type":"message"}
{"nick":"Joufflu","date":"2017-01-08T05:28:13.544Z","type":"join"}
{"nick":"Joufflu","reason":"Remote host closed the connection","date":"2017-01-08T05:28:19.113Z","type":"quit"}
{"nick":"noethics","message":"if your protocol has an infinite loop in it in any case then it's an error","date":"2017-01-08T05:28:37.962Z","type":"message"}
{"nick":"orbital-smith","message":"i could then say... \"if the count exceeds some threshold, terminate the message\", its equivalent to keeping track of the callstack level","date":"2017-01-08T05:28:48.180Z","type":"message"}
{"nick":"noethics","message":"that's all i can say without knowing about your requirements :P","date":"2017-01-08T05:28:51.699Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: just socket scale out in node","date":"2017-01-08T05:29:14.261Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: socket scale out in node is probably a already solved problem, i haven't really been paying attention to node developments in recent years so i wouldn't know","date":"2017-01-08T05:30:08.379Z","type":"message"}
{"nick":"noethics","message":"there is a cluster package","date":"2017-01-08T05:30:29.773Z","type":"message"}
{"nick":"noethics","message":"it's pretty bad but probably fine for your needs","date":"2017-01-08T05:30:38.469Z","type":"message"}
{"nick":"noethics","message":"i prefer to use a mq","date":"2017-01-08T05:30:44.730Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: zmq?","date":"2017-01-08T05:30:53.103Z","type":"message"}
{"nick":"noethics","message":"not by itself","date":"2017-01-08T05:31:04.349Z","type":"message"}
{"nick":"noethics","message":"but yeah","date":"2017-01-08T05:31:07.003Z","type":"message"}
{"nick":"kuldeep","reason":"Read error: Connection reset by peer","date":"2017-01-08T05:31:27.317Z","type":"quit"}
{"nick":"orbital-smith","message":"well, nothing against zeromq, thought id just write the thing from node from the ground up","date":"2017-01-08T05:31:40.849Z","type":"message"}
{"nick":"noethics","message":"rabbitmq or amq","date":"2017-01-08T05:31:47.681Z","type":"message"}
{"nick":"noethics","message":"are pretty common","date":"2017-01-08T05:31:50.981Z","type":"message"}
{"nick":"kuldeep","date":"2017-01-08T05:31:58.802Z","type":"join"}
{"nick":"noethics","message":"you can also use cluster module","date":"2017-01-08T05:32:05.005Z","type":"message"}
{"nick":"noethics","message":"it's built into node","date":"2017-01-08T05:32:08.154Z","type":"message"}
{"nick":"noethics","message":"but like i said it's sort of shit","date":"2017-01-08T05:32:12.409Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: cluster is only local to the process","date":"2017-01-08T05:32:14.671Z","type":"message"}
{"nick":"noethics","message":"i wouldn't build this yourself","date":"2017-01-08T05:32:17.371Z","type":"message"}
{"nick":"noethics","message":"well they're child procs","date":"2017-01-08T05:32:40.493Z","type":"message"}
{"nick":"orbital-smith","message":"why not? ive built this kinda thing dozens of times","date":"2017-01-08T05:32:42.091Z","type":"message"}
{"nick":"hextileX","reason":"Ping timeout: 245 seconds","date":"2017-01-08T05:33:07.562Z","type":"quit"}
{"nick":"noethics","message":"because you're reinventing the wheel and unless you're doing it for fun you're just sinking time into something that's been solved in better ways","date":"2017-01-08T05:33:10.247Z","type":"message"}
{"nick":"orbital-smith","message":"zeromq doesn't provide anything other than a basic messaging protocol and socket clustering","date":"2017-01-08T05:33:38.773Z","type":"message"}
{"nick":"noethics","message":"0mq is not meant to be used by itself","date":"2017-01-08T05:33:48.505Z","type":"message"}
{"nick":"orbital-smith","message":"i don't know any off the shelf things to use","date":"2017-01-08T05:34:02.588Z","type":"message"}
{"nick":"noethics","message":"rabbitmq is safe","date":"2017-01-08T05:34:07.008Z","type":"message"}
{"nick":"orbital-smith","message":"i don't mind about reliability, or queuing at all","date":"2017-01-08T05:34:24.912Z","type":"message"}
{"nick":"orbital-smith","message":"if messages arrive, that is great, if they don't, no big deal","date":"2017-01-08T05:34:55.897Z","type":"message"}
{"nick":"orbital-smith","message":"there are a number of things i can optimize in a setup like that","date":"2017-01-08T05:35:17.176Z","type":"message"}
{"nick":"noethics","message":"there's also work queues like beanstalkd which are really nice to use","date":"2017-01-08T05:35:24.829Z","type":"message"}
{"nick":"noethics","message":"ive used it for this purpose before and it worked out","date":"2017-01-08T05:35:37.953Z","type":"message"}
{"nick":"orbital-smith","message":"never liked beanstalk","date":"2017-01-08T05:35:53.346Z","type":"message"}
{"nick":"noethics","message":":(","date":"2017-01-08T05:35:57.911Z","type":"message"}
{"nick":"noethics","message":"why?","date":"2017-01-08T05:36:00.851Z","type":"message"}
{"nick":"orbital-smith","message":"it was clunky, applications took minutes to recycle, deployment felt weird, configuring the load balancer and wiring sockets was painful too","date":"2017-01-08T05:36:40.062Z","type":"message"}
{"nick":"noethics","message":"it's the opposite of clunky i think","date":"2017-01-08T05:37:00.125Z","type":"message"}
{"nick":"nikivi","reason":"Quit: irc","date":"2017-01-08T05:37:01.618Z","type":"quit"}
{"nick":"noethics","message":"it's a single C program that's super fast and optimized","date":"2017-01-08T05:37:08.794Z","type":"message"}
{"nick":"noethics","message":"deployment is trivial, there is no load balancer built in afaik","date":"2017-01-08T05:37:23.310Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: might the wrong word to use, its just they need to boost their provisioning infrastructure","date":"2017-01-08T05:37:24.155Z","type":"message"}
{"nick":"orbital-smith","message":"it might be better than it was, i used it last in 2012","date":"2017-01-08T05:37:35.627Z","type":"message"}
{"nick":"noethics","message":"i don't think it's changed since then","date":"2017-01-08T05:37:52.291Z","type":"message"}
{"nick":"noethics","message":"it's definitely not batteries included for cloud deployment if you want to cluster it","date":"2017-01-08T05:38:04.107Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: i moved to azure since, haven't looked back","date":"2017-01-08T05:38:08.104Z","type":"message"}
{"nick":"noethics","message":"in my case i only needed one monolithic one","date":"2017-01-08T05:38:11.408Z","type":"message"}
{"nick":"noethics","message":"in almost any case i think you should only need one","date":"2017-01-08T05:38:26.882Z","type":"message"}
{"nick":"noethics","message":"it's really fast","date":"2017-01-08T05:38:30.610Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: but its ironic, the only reason im building this thing is to replace a infrastructure i ran on google app engine","date":"2017-01-08T05:38:49.236Z","type":"message"}
{"nick":"orbital-smith","message":"(due to deprecation of one of their services happening in october)","date":"2017-01-08T05:39:04.397Z","type":"message"}
{"nick":"noethics","message":"which service","date":"2017-01-08T05:39:12.361Z","type":"message"}
{"nick":"orbital-smith","message":"data channels","date":"2017-01-08T05:39:16.651Z","type":"message"}
{"nick":"noethics","message":"i use gae and gcp day to day","date":"2017-01-08T05:39:24.155Z","type":"message"}
{"nick":"noethics","message":"never used those","date":"2017-01-08T05:39:30.252Z","type":"message"}
{"nick":"noethics","message":"it still has pubsub afaik","date":"2017-01-08T05:39:37.893Z","type":"message"}
{"nick":"subfuzion","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-01-08T05:39:40.058Z","type":"quit"}
{"nick":"orbital-smith","message":"https://cloud.google.com/appengine/docs/go/channel/","date":"2017-01-08T05:39:49.542Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: well, they are saying to move over to firebase","date":"2017-01-08T05:40:07.809Z","type":"message"}
{"nick":"noethics","message":"oh","date":"2017-01-08T05:40:09.072Z","type":"message"}
{"nick":"orbital-smith","message":"not keen","date":"2017-01-08T05:40:09.956Z","type":"message"}
{"nick":"noethics","message":"it is probably in the trash for firebase","date":"2017-01-08T05:40:15.468Z","type":"message"}
{"nick":"orbital-smith","message":"i was already vendor locked with appengine, im not going to be routed into further vendor lock going with a SAAS solution :)","date":"2017-01-08T05:40:49.537Z","type":"message"}
{"nick":"orbital-smith","action":"draws the line with PAAS","date":"2017-01-08T05:40:59.500Z","type":"action"}
{"nick":"noethics","message":"yeah","date":"2017-01-08T05:41:02.039Z","type":"message"}
{"nick":"noethics","message":"i think gae is nice","date":"2017-01-08T05:41:07.764Z","type":"message"}
{"nick":"DjKad","date":"2017-01-08T05:41:20.519Z","type":"join"}
{"nick":"noethics","message":"but if you want something like that channel thing its not a bad idea to handroll it","date":"2017-01-08T05:41:25.564Z","type":"message"}
{"nick":"noethics","message":"i dont see how clustering node is doing that for you though","date":"2017-01-08T05:41:35.730Z","type":"message"}
{"nick":"noethics","message":"i do something similar with a service at work and we use redis which keeps track of the node that a user is connected to","date":"2017-01-08T05:41:55.802Z","type":"message"}
{"nick":"noethics","message":"but tht's all that there is to the problem","date":"2017-01-08T05:42:03.004Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: well, the problem with socket development in node (or any other thing) is how you go from 1 socket server, to N socket servers","date":"2017-01-08T05:42:09.905Z","type":"message"}
{"nick":"orbital-smith","message":"nodejs provides a reasonable backend for prototyping a few things","date":"2017-01-08T05:42:28.386Z","type":"message"}
{"nick":"orbital-smith","message":"and its not a bad platform overall","date":"2017-01-08T05:42:35.873Z","type":"message"}
{"nick":"noethics","message":"redis pubsub actually solved the problem entirely out of the box","date":"2017-01-08T05:42:44.257Z","type":"message"}
{"nick":"macabre","date":"2017-01-08T05:44:15.398Z","type":"join"}
{"nick":"orbital-smith","message":"yes, that is all you need, but even in the redis case, there is something not so nice about redis when you compare it against zmq","date":"2017-01-08T05:44:44.891Z","type":"message"}
{"nick":"noethics","message":"if your problem is deployment it's miles ahead of 0mq","date":"2017-01-08T05:45:01.772Z","type":"message"}
{"nick":"noethics","message":"redis sentinel is life","date":"2017-01-08T05:45:06.028Z","type":"message"}
{"nick":"node_fanatic","reason":"Ping timeout: 255 seconds","date":"2017-01-08T05:45:24.441Z","type":"quit"}
{"nick":"orbital-smith","message":"noethics: what is nice about zmq is that the process itself manages itself, meaning you can deploy a process and not worry about some external backing store (like redis)","date":"2017-01-08T05:45:34.803Z","type":"message"}
{"nick":"DjKad","reason":"Ping timeout: 240 seconds","date":"2017-01-08T05:45:36.522Z","type":"quit"}
{"nick":"noethics","message":"that is what beanstalkd gives you","date":"2017-01-08T05:45:48.072Z","type":"message"}
{"nick":"noethics","message":"and redis has the option to turn off persistence and automatic evacuation","date":"2017-01-08T05:46:07.927Z","type":"message"}
{"nick":"noethics","message":"but it is not as nice as beanstalkd imo for this purpose","date":"2017-01-08T05:46:21.100Z","type":"message"}
{"nick":"orbital-smith","message":"what does beanstalk give me?","date":"2017-01-08T05:46:26.444Z","type":"message"}
{"nick":"noethics","message":"the ability to not require a storage backend and you control when something is evicted","date":"2017-01-08T05:46:45.677Z","type":"message"}
{"nick":"orbital-smith","message":"there are many things that offer that","date":"2017-01-08T05:47:01.227Z","type":"message"}
{"nick":"noethics","message":"sure","date":"2017-01-08T05:47:06.575Z","type":"message"}
{"nick":"noethics","message":"beanstalkd is just super clean, fast, and stable","date":"2017-01-08T05:47:15.398Z","type":"message"}
{"nick":"orbital-smith","message":"still not keen on beanstalk","date":"2017-01-08T05:47:19.205Z","type":"message"}
{"nick":"orbital-smith","message":"well, im not anti beanstalk, i just prefer azure to amazon","date":"2017-01-08T05:47:36.248Z","type":"message"}
{"nick":"noethics","message":"¯\\_(ツ)_/¯","date":"2017-01-08T05:47:40.007Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 245 seconds","date":"2017-01-08T05:47:42.553Z","type":"quit"}
{"nick":"noethics","message":"amazon?","date":"2017-01-08T05:47:45.450Z","type":"message"}
{"nick":"noethics","message":"im not talking about elastic beanstalk","date":"2017-01-08T05:47:51.464Z","type":"message"}
{"nick":"orbital-smith","message":"heh, ok :D","date":"2017-01-08T05:47:57.638Z","type":"message"}
{"nick":"noethics","message":"https://github.com/kr/beanstalkd","date":"2017-01-08T05:48:00.776Z","type":"message"}
{"nick":"noethics","message":"different things","date":"2017-01-08T05:48:09.503Z","type":"message"}
{"nick":"orbital-smith","message":"well, that explains the spelling (i thought it was a typo)","date":"2017-01-08T05:48:12.589Z","type":"message"}
{"nick":"macabre","reason":"Ping timeout: 255 seconds","date":"2017-01-08T05:49:00.365Z","type":"quit"}
{"nick":"orbital-smith","message":"not looked at it then","date":"2017-01-08T05:49:06.572Z","type":"message"}
{"nick":"Dembel","date":"2017-01-08T05:49:09.185Z","type":"join"}
{"nick":"orbital-smith","message":"ill check it out","date":"2017-01-08T05:49:11.522Z","type":"message"}
{"nick":"noethics","message":"http://kr.github.io/beanstalkd/","date":"2017-01-08T05:49:16.582Z","type":"message"}
{"nick":"Cabanossi","date":"2017-01-08T05:49:41.476Z","type":"join"}
{"nick":"wlp1s1","reason":"Read error: Connection reset by peer","date":"2017-01-08T05:49:45.152Z","type":"quit"}
{"nick":"noethics","message":"but redis is more batteries included","date":"2017-01-08T05:49:56.158Z","type":"message"}
{"nick":"noethics","message":"and with lua you have more power over everything","date":"2017-01-08T05:50:03.648Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: interesting, does it scale out?","date":"2017-01-08T05:50:05.551Z","type":"message"}
{"nick":"noethics","message":"not by itself","date":"2017-01-08T05:50:12.864Z","type":"message"}
{"nick":"noethics","message":"like i said you probably only need one","date":"2017-01-08T05:50:19.321Z","type":"message"}
{"nick":"noethics","message":"mine was handling a few hundred thousand messages a second","date":"2017-01-08T05:50:29.062Z","type":"message"}
{"nick":"ianmethyst","reason":"Quit: WeeChat 1.6","date":"2017-01-08T05:50:34.914Z","type":"quit"}
{"nick":"alileza","date":"2017-01-08T05:51:57.189Z","type":"join"}
{"nick":"noethics","message":"also rabbitmq lets you do the muxing a lot easier","date":"2017-01-08T05:52:08.352Z","type":"message"}
{"nick":"noethics","message":"in this case id say rabbitmq > * for you :P","date":"2017-01-08T05:52:19.522Z","type":"message"}
{"nick":"orbital-smith","message":"tempting to rewrite it in Rust :D","date":"2017-01-08T05:52:49.448Z","type":"message"}
{"nick":"plevexier","date":"2017-01-08T05:53:07.571Z","type":"join"}
{"nick":"orbital-smith","message":"would be pretty easy to do a in memory version of it","date":"2017-01-08T05:53:13.570Z","type":"message"}
{"nick":"noethics","message":"iirc it's in erlang","date":"2017-01-08T05:53:15.983Z","type":"message"}
{"nick":"orbital-smith","message":"red flags !","date":"2017-01-08T05:53:26.584Z","type":"message"}
{"nick":"noethics","message":"rabbitmq you mean right?","date":"2017-01-08T05:53:28.122Z","type":"message"}
{"nick":"noethics","message":"why is erlang a red flag :|","date":"2017-01-08T05:53:38.559Z","type":"message"}
{"nick":"noethics","message":"it's a lemme use it flag","date":"2017-01-08T05:53:43.972Z","type":"message"}
{"nick":"phpnode","date":"2017-01-08T05:54:23.062Z","type":"join"}
{"nick":"orbital-smith","message":"i really shouldn't be too adverse to erlang, its just i don't really like the runtime dependency, and i don't understand the language","date":"2017-01-08T05:54:25.360Z","type":"message"}
{"nick":"noethics","message":"you don't touch the code :P","date":"2017-01-08T05:54:37.989Z","type":"message"}
{"nick":"noethics","message":"erlang is pretty amazing if you're looking for scale anyway","date":"2017-01-08T05:54:57.228Z","type":"message"}
{"nick":"noethics","message":"it's not the fastest but insanely good for distribution and system resource utilization","date":"2017-01-08T05:55:12.716Z","type":"message"}
{"nick":"noethics","message":"(opposite of node)","date":"2017-01-08T05:55:17.026Z","type":"message"}
{"nick":"orbital-smith","message":"noethics: my last dealings with Erlang involved ejabberd","date":"2017-01-08T05:55:27.324Z","type":"message"}
{"nick":"noethics","message":"id say the problem there is not erlang lol","date":"2017-01-08T05:55:37.498Z","type":"message"}
{"nick":"noethics","message":"xmpp is fucking awful","date":"2017-01-08T05:55:49.641Z","type":"message"}
{"nick":"orbital-smith","message":"heh, not enough stanzas for what i needed it for","date":"2017-01-08T05:56:02.587Z","type":"message"}
{"nick":"alileza","reason":"Ping timeout: 260 seconds","date":"2017-01-08T05:56:42.167Z","type":"quit"}
{"nick":"safe","date":"2017-01-08T05:56:51.573Z","type":"join"}
{"nick":"phpnode","reason":"Ping timeout: 240 seconds","date":"2017-01-08T05:58:53.053Z","type":"quit"}
{"nick":"noethics","message":"my latest project im doing for fun is a mesh network in go","date":"2017-01-08T05:58:56.202Z","type":"message"}
{"nick":"noethics","message":"the rpc package is so nice, i don't even write any network code","date":"2017-01-08T05:59:10.901Z","type":"message"}
{"nick":"bronson","date":"2017-01-08T06:01:11.519Z","type":"join"}
{"nick":"oxhak","date":"2017-01-08T06:01:31.504Z","type":"join"}
{"nick":"mcollina","date":"2017-01-08T06:03:04.636Z","type":"join"}
{"nick":"bronson","reason":"Ping timeout: 240 seconds","date":"2017-01-08T06:05:09.500Z","type":"quit"}
{"nick":"davimore_","date":"2017-01-08T06:05:39.486Z","type":"join"}
{"nick":"ironfroggy","reason":"Remote host closed the connection","date":"2017-01-08T06:06:11.493Z","type":"quit"}
{"nick":"ironfroggy","date":"2017-01-08T06:06:45.529Z","type":"join"}
{"nick":"SuperHans","date":"2017-01-08T06:06:45.754Z","type":"join"}
{"nick":"mcollina","reason":"Ping timeout: 240 seconds","date":"2017-01-08T06:07:31.581Z","type":"quit"}
{"nick":"davimore","reason":"Ping timeout: 240 seconds","date":"2017-01-08T06:08:09.535Z","type":"quit"}
{"nick":"kegster","date":"2017-01-08T06:10:29.229Z","type":"join"}
{"nick":"ironfroggy","reason":"Ping timeout: 240 seconds","date":"2017-01-08T06:11:09.521Z","type":"quit"}
{"nick":"SuperHans","reason":"Ping timeout: 255 seconds","date":"2017-01-08T06:11:30.303Z","type":"quit"}
{"nick":"ironfroggy","date":"2017-01-08T06:14:35.989Z","type":"join"}
{"nick":"empxre","date":"2017-01-08T06:18:28.504Z","type":"join"}
{"nick":"empxre","message":"maybe someone can help me with terminology. I don't know for sure how to describe what I'm doing here - I've created a library that has 2 ways of using it. you define a model which is returned to you so you can use methods directly on it, or you can also access it from the top level parent instance","date":"2017-01-08T06:19:44.663Z","type":"message"}
{"nick":"empxre","message":"so you'd have `model.get({ ... })` and `db.get(modelName, { ... })`","date":"2017-01-08T06:20:08.487Z","type":"message"}
{"nick":"empxre","message":"how would I refer to that second usage?","date":"2017-01-08T06:20:27.147Z","type":"message"}
{"nick":"enderv","date":"2017-01-08T06:23:46.981Z","type":"join"}
{"nick":"jonglebe_","date":"2017-01-08T06:28:40.394Z","type":"join"}
{"nick":"smccarthy","date":"2017-01-08T06:30:07.271Z","type":"join"}
{"nick":"cagedwisdom","date":"2017-01-08T06:31:14.653Z","type":"join"}
{"nick":"jongleberry","reason":"Ping timeout: 255 seconds","date":"2017-01-08T06:31:45.352Z","type":"quit"}
{"nick":"czerasz","date":"2017-01-08T06:32:59.020Z","type":"join"}
{"nick":"arnoDorial","date":"2017-01-08T06:33:02.986Z","type":"join"}
{"nick":"arnoDorial","reason":"Client Quit","date":"2017-01-08T06:33:44.713Z","type":"quit"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-01-08T06:33:47.046Z","type":"quit"}
{"nick":"smccarthy","reason":"Ping timeout: 255 seconds","date":"2017-01-08T06:34:27.291Z","type":"quit"}
{"nick":"djmax","reason":"Remote host closed the connection","date":"2017-01-08T06:35:42.584Z","type":"quit"}
{"nick":"mnutt","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-01-08T06:37:34.723Z","type":"quit"}
{"nick":"cagedwisdom","reason":"Ping timeout: 258 seconds","date":"2017-01-08T06:37:40.625Z","type":"quit"}
{"nick":"subhojit777","date":"2017-01-08T06:37:53.645Z","type":"join"}
{"nick":"Virtulis","date":"2017-01-08T06:38:55.047Z","type":"join"}
{"nick":"gopi1410","date":"2017-01-08T06:39:07.341Z","type":"join"}
{"nick":"hextileX","date":"2017-01-08T06:39:27.541Z","type":"join"}
{"nick":"oxhak","reason":"Remote host closed the connection","date":"2017-01-08T06:40:52.197Z","type":"quit"}
{"nick":"elh9","date":"2017-01-08T06:41:11.597Z","type":"join"}
{"nick":"SwiftMatt","reason":"Remote host closed the connection","date":"2017-01-08T06:42:09.082Z","type":"quit"}
{"nick":"SwiftMatt","date":"2017-01-08T06:45:47.054Z","type":"join"}
{"nick":"Dev0n","date":"2017-01-08T06:46:29.991Z","type":"join"}
{"nick":"duckpuppy","date":"2017-01-08T06:47:21.393Z","type":"join"}
{"nick":"SwiftMatt","reason":"Remote host closed the connection","date":"2017-01-08T06:48:47.218Z","type":"quit"}
{"nick":"ironfroggy","reason":"Remote host closed the connection","date":"2017-01-08T06:50:13.911Z","type":"quit"}
{"nick":"cagedwisdom","date":"2017-01-08T06:50:45.434Z","type":"join"}
{"nick":"ironfroggy","date":"2017-01-08T06:50:49.162Z","type":"join"}
{"nick":"lpin","date":"2017-01-08T06:50:55.218Z","type":"join"}
{"nick":"djmax","date":"2017-01-08T06:51:23.514Z","type":"join"}
{"nick":"duckpuppy","reason":"Ping timeout: 245 seconds","date":"2017-01-08T06:51:27.520Z","type":"quit"}
{"nick":"rohanrhu","reason":"Ping timeout: 258 seconds","date":"2017-01-08T06:51:51.577Z","type":"quit"}
{"nick":"phaleth","date":"2017-01-08T06:52:48.315Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-01-08T06:54:20.382Z","type":"quit"}
{"nick":"jj-_","date":"2017-01-08T06:54:36.446Z","type":"part"}
{"nick":"phpnode","date":"2017-01-08T06:55:12.843Z","type":"join"}
{"nick":"ironfroggy","reason":"Ping timeout: 260 seconds","date":"2017-01-08T06:55:37.151Z","type":"quit"}
{"nick":"djmax","reason":"Ping timeout: 245 seconds","date":"2017-01-08T06:55:37.515Z","type":"quit"}
{"nick":"jj-","date":"2017-01-08T06:55:47.078Z","type":"join"}
{"nick":"mazula","date":"2017-01-08T06:57:48.458Z","type":"join"}
{"nick":"phpnode","reason":"Ping timeout: 240 seconds","date":"2017-01-08T06:59:31.745Z","type":"quit"}
{"nick":"vuoto","date":"2017-01-08T07:00:30.174Z","type":"join"}
{"nick":"SwiftMatt","date":"2017-01-08T07:01:14.683Z","type":"join"}
{"nick":"gopi1410","reason":"Read error: Connection reset by peer","date":"2017-01-08T07:01:27.625Z","type":"quit"}
{"nick":"kaicataldo","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-01-08T07:01:28.196Z","type":"quit"}
{"nick":"jekrb","reason":"Remote host closed the connection","date":"2017-01-08T07:01:35.271Z","type":"quit"}
{"nick":"bronson","date":"2017-01-08T07:01:56.463Z","type":"join"}
{"nick":"jekrb","date":"2017-01-08T07:02:07.220Z","type":"join"}
{"nick":"tomku","reason":"Read error: Connection reset by peer","date":"2017-01-08T07:02:45.405Z","type":"quit"}
{"nick":"kingarmadillo","date":"2017-01-08T07:03:17.324Z","type":"join"}
{"nick":"bronson","reason":"Ping timeout: 240 seconds","date":"2017-01-08T07:06:09.481Z","type":"quit"}
{"nick":"jekrb","reason":"Ping timeout: 255 seconds","date":"2017-01-08T07:06:24.264Z","type":"quit"}
{"nick":"kingarmadillo","reason":"Ping timeout: 240 seconds","date":"2017-01-08T07:07:31.690Z","type":"quit"}
{"nick":"SuperHans","date":"2017-01-08T07:07:35.652Z","type":"join"}
{"nick":"orbital-smith","message":"noethics: came up with this anyway http://pastebin.com/Evqa8k6F","date":"2017-01-08T07:07:44.932Z","type":"message"}
{"nick":"tomku","date":"2017-01-08T07:07:47.697Z","type":"join"}
{"nick":"siba","reason":"Ping timeout: 240 seconds","date":"2017-01-08T07:08:51.624Z","type":"quit"}
{"nick":"orbital-smith","message":"noethics: interesting in the regard, message routing becomes a reverse tree search through the network, that just kind of pops out of it","date":"2017-01-08T07:09:46.008Z","type":"message"}
{"nick":"SwiftMatt","reason":"Remote host closed the connection","date":"2017-01-08T07:10:05.133Z","type":"quit"}
{"nick":"SuperHans","reason":"Ping timeout: 258 seconds","date":"2017-01-08T07:12:10.503Z","type":"quit"}
{"nick":"noethics","reason":"Quit: Leaving","date":"2017-01-08T07:12:46.858Z","type":"quit"}
{"nick":"orbital-smith","message":"noethics: also quite nice, assigning (or binding addresses / endpoints) assumes unique-ness through the network.","date":"2017-01-08T07:12:49.733Z","type":"message"}
{"nick":"noethics","date":"2017-01-08T07:13:23.133Z","type":"join"}
{"nick":"mr-foobar","reason":"Ping timeout: 255 seconds","date":"2017-01-08T07:13:36.222Z","type":"quit"}
{"nick":"mr-foobar","date":"2017-01-08T07:14:51.140Z","type":"join"}
{"nick":"lpin","reason":"Ping timeout: 260 seconds","date":"2017-01-08T07:18:22.134Z","type":"quit"}
{"nick":"FIFOd","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-01-08T07:19:55.560Z","type":"quit"}
{"nick":"SwiftMatt","date":"2017-01-08T07:19:57.573Z","type":"join"}
{"nick":"LucaTM","date":"2017-01-08T07:23:03.368Z","type":"join"}
{"nick":"hadifarnoud","date":"2017-01-08T07:23:50.270Z","type":"join"}
{"nick":"lithie","date":"2017-01-08T07:26:05.212Z","type":"join"}
{"nick":"kadiks","date":"2017-01-08T07:26:36.978Z","type":"join"}
{"nick":"apparition","reason":"Quit: Bye","date":"2017-01-08T07:26:50.894Z","type":"quit"}
{"nick":"empxre","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2017-01-08T07:31:32.113Z","type":"quit"}
{"nick":"macabre","date":"2017-01-08T07:32:32.194Z","type":"join"}
{"nick":"macabre","reason":"Ping timeout: 255 seconds","date":"2017-01-08T07:37:00.204Z","type":"quit"}
{"nick":"DragonPunch","reason":"Ping timeout: 240 seconds","date":"2017-01-08T07:37:39.479Z","type":"quit"}
{"nick":"chandu20","date":"2017-01-08T07:38:42.697Z","type":"join"}
{"nick":"Oog","date":"2017-01-08T07:41:05.686Z","type":"join"}
{"nick":"Oog","message":"does async await work in nodejs 6.9.1","date":"2017-01-08T07:41:14.929Z","type":"message"}
{"nick":"ljharb","message":"Oog: http://node.green, uncheck \"harmony\"","date":"2017-01-08T07:42:17.498Z","type":"message"}
{"nick":"Oog","message":":(","date":"2017-01-08T07:43:13.163Z","type":"message"}
{"nick":"ljharb","message":"iow, no","date":"2017-01-08T07:44:18.560Z","type":"message"}
{"nick":"deltab","message":"async functions are expected in ES2017, later this year","date":"2017-01-08T07:44:19.343Z","type":"message"}
{"nick":"deltab","message":"— https://github.com/tc39/proposals/blob/master/finished-proposals.md","date":"2017-01-08T07:44:36.318Z","type":"message"}
{"nick":"chandu20","reason":"Ping timeout: 240 seconds","date":"2017-01-08T07:47:11.671Z","type":"quit"}
{"nick":"chandu20","date":"2017-01-08T07:47:54.738Z","type":"join"}
{"nick":"Omnilord","reason":"Quit: Something went wrong because I left.","date":"2017-01-08T07:50:19.947Z","type":"quit"}
{"nick":"hextileX","reason":"Ping timeout: 245 seconds","date":"2017-01-08T07:52:17.536Z","type":"quit"}
{"nick":"djmax","date":"2017-01-08T07:52:45.189Z","type":"join"}
{"nick":"phpnode","date":"2017-01-08T07:56:00.069Z","type":"join"}
{"nick":"enderv","reason":"Ping timeout: 260 seconds","date":"2017-01-08T07:56:46.007Z","type":"quit"}
{"nick":"SwiftMatt","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2017-01-08T07:57:37.321Z","type":"quit"}
{"nick":"nya_","reason":"Remote host closed the connection","date":"2017-01-08T07:58:53.015Z","type":"quit"}
