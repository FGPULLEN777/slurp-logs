{"nick":"dunpeal","reason":"Ping timeout: 252 seconds","date":"2016-07-14T00:00:10.464Z","type":"quit"}
{"nick":"ljharb","message":"Nikesh: no, i run eslint on the command line. people do tho.","date":"2016-07-14T00:01:06.707Z","type":"message"}
{"nick":"martin290","message":"has anyone went from php to node.js?","date":"2016-07-14T00:02:06.075Z","type":"message"}
{"nick":"tfennelly","date":"2016-07-14T00:02:31.455Z","type":"join"}
{"nick":"danmulvey","reason":"Quit: leaving","date":"2016-07-14T00:03:48.327Z","type":"quit"}
{"nick":"smc9115","reason":"Remote host closed the connection","date":"2016-07-14T00:04:42.375Z","type":"quit"}
{"nick":"devc","date":"2016-07-14T00:05:06.945Z","type":"join"}
{"nick":"F4lk0n","date":"2016-07-14T00:06:25.317Z","type":"join"}
{"nick":"DeltaHeavy","date":"2016-07-14T00:06:29.245Z","type":"join"}
{"nick":"Enmadaio","reason":"Remote host closed the connection","date":"2016-07-14T00:06:42.734Z","type":"quit"}
{"nick":"idefine","date":"2016-07-14T00:06:48.345Z","type":"join"}
{"nick":"tfennelly","reason":"Ping timeout: 240 seconds","date":"2016-07-14T00:06:51.453Z","type":"quit"}
{"nick":"sadtaco","reason":"Ping timeout: 250 seconds","date":"2016-07-14T00:06:56.973Z","type":"quit"}
{"nick":"cerebro","date":"2016-07-14T00:07:38.019Z","type":"join"}
{"nick":"Ahmed90","reason":"Ping timeout: 244 seconds","date":"2016-07-14T00:07:46.705Z","type":"quit"}
{"nick":"sadtaco","date":"2016-07-14T00:07:53.143Z","type":"join"}
{"nick":"ljharb","message":"martin290: indirectly. why?","date":"2016-07-14T00:07:54.848Z","type":"message"}
{"nick":"virtulis","message":"martin290, yes, why","date":"2016-07-14T00:08:01.652Z","type":"message"}
{"nick":"MrMetalDick","reason":"Remote host closed the connection","date":"2016-07-14T00:08:02.213Z","type":"quit"}
{"nick":"knksmith571","reason":"Read error: Connection reset by peer","date":"2016-07-14T00:08:26.740Z","type":"quit"}
{"nick":"martin290","message":"well, i was thinking about picking up node so i was wondering how the transition was, and what tutorials, if any, you used to learn node.js","date":"2016-07-14T00:08:36.171Z","type":"message"}
{"nick":"cerebro","reason":"Read error: Connection reset by peer","date":"2016-07-14T00:08:43.151Z","type":"quit"}
{"nick":"cerebro","date":"2016-07-14T00:08:53.074Z","type":"join"}
{"nick":"smc9115","date":"2016-07-14T00:09:28.049Z","type":"join"}
{"nick":"smc9115","reason":"Remote host closed the connection","date":"2016-07-14T00:09:40.704Z","type":"quit"}
{"nick":"virtulis","message":"oh... well i started small, some daemons and such, then we made a big project with node. it's very different from php tbh","date":"2016-07-14T00:09:46.605Z","type":"message"}
{"nick":"diogogmt","date":"2016-07-14T00:09:55.181Z","type":"join"}
{"nick":"eya","date":"2016-07-14T00:09:59.014Z","type":"join"}
{"nick":"martin290","message":"virtulis: some daemons? and a good different or bad different?","date":"2016-07-14T00:10:17.261Z","type":"message"}
{"nick":"virtulis","message":"martin290, yeah, you know, servers that stay in background processing stuff. probably more good than bad, but callback hell is a real thing","date":"2016-07-14T00:11:02.438Z","type":"message"}
{"nick":"modernpacifist","message":"martin290: With PHP->node, one of the larger jumps will be from a heap of different .php files that the web server executes through a PHP engine on demand to a long-lived persistent process","date":"2016-07-14T00:11:10.093Z","type":"message"}
{"nick":"diogogmt","reason":"Client Quit","date":"2016-07-14T00:11:13.303Z","type":"quit"}
{"nick":"idefine","reason":"Ping timeout: 250 seconds","date":"2016-07-14T00:11:17.058Z","type":"quit"}
{"nick":"virtulis","message":"all the asynchronous stuff takes time getting used to. and in our case we just ended up spending half a year making our own framework :)","date":"2016-07-14T00:11:22.925Z","type":"message"}
{"nick":"virtulis","message":"(not sure if I should spam it here)","date":"2016-07-14T00:11:43.149Z","type":"message"}
{"nick":"tristanp","reason":"Ping timeout: 252 seconds","date":"2016-07-14T00:11:43.566Z","type":"quit"}
{"nick":"Xiti`","date":"2016-07-14T00:12:16.327Z","type":"join"}
{"nick":"tristanp","date":"2016-07-14T00:13:17.118Z","type":"join"}
{"nick":"Xiti","reason":"Ping timeout: 240 seconds","date":"2016-07-14T00:15:04.023Z","type":"quit"}
{"nick":"Literphor","date":"2016-07-14T00:15:06.735Z","type":"join"}
{"nick":"robertmaxrees","date":"2016-07-14T00:15:10.902Z","type":"quit"}
{"nick":"martin290","message":"that's one of the reasons i was thinking about node, the async stuff, and i heard it's a huge performance boost","date":"2016-07-14T00:15:34.917Z","type":"message"}
{"nick":"krish203","reason":"Quit: Leaving.","date":"2016-07-14T00:15:51.617Z","type":"quit"}
{"nick":"modernpacifist","message":"martin290: It typically allows for more work to be done overall","date":"2016-07-14T00:16:01.327Z","type":"message"}
{"nick":"martin290","message":"but more work being done in the same amount of time, right?","date":"2016-07-14T00:16:43.995Z","type":"message"}
{"nick":"smccarthy","reason":"Remote host closed the connection","date":"2016-07-14T00:17:03.528Z","type":"quit"}
{"nick":"modernpacifist","message":"Only if that work can be performed asyncronously, such as network/disk IO","date":"2016-07-14T00:17:08.470Z","type":"message"}
{"nick":"modernpacifist","message":"or external command execution","date":"2016-07-14T00:17:15.454Z","type":"message"}
{"nick":"ljharb","message":"martin290: learning JS itself is going to be a challenge because it's very different from PHP.","date":"2016-07-14T00:17:57.215Z","type":"message"}
{"nick":"ljharb","message":"node vs js is minimal.","date":"2016-07-14T00:18:00.409Z","type":"message"}
{"nick":"Havvy","message":"Node vs Browser is the apt comparison for Node.  Node.js IS JS.","date":"2016-07-14T00:18:22.683Z","type":"message"}
{"nick":"modernpacifist","message":"Node draws its advantage from the event loop, which is single threaded. The event loop is only doing work when it has actual computation to perform, such as iterating over an array of 1 million items. Such a computation would lock the event loop while its processing - the performance profile would be similar between PHP and node.js in that regard.","date":"2016-07-14T00:18:32.022Z","type":"message"}
{"nick":"kevireilly","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-07-14T00:18:59.230Z","type":"quit"}
{"nick":"martin290","message":"ahh ok","date":"2016-07-14T00:19:47.293Z","type":"message"}
{"nick":"mhernandez1","reason":"Remote host closed the connection","date":"2016-07-14T00:20:06.674Z","type":"quit"}
{"nick":"kevireilly","date":"2016-07-14T00:20:21.516Z","type":"join"}
{"nick":"modernpacifist","message":"The difference comes when you say call out to a database. The PHP script would block/hold on the database query while it waits for a response. Node on the other hand would perform other work while it waits for that response, which could involve serving other HTTP requests/kicking off other queries","date":"2016-07-14T00:20:34.151Z","type":"message"}
{"nick":"mellernoia","date":"2016-07-14T00:20:35.438Z","type":"quit"}
{"nick":"DeltaHeavy","reason":"Excess Flood","date":"2016-07-14T00:21:09.605Z","type":"quit"}
{"nick":"martin290","message":"can't you do async database calls with php too though?","date":"2016-07-14T00:21:22.741Z","type":"message"}
{"nick":"modernpacifist","message":"I have no idea. Maybe? The way PHP performs multiple concurrent requests in the face of such restirctions is typically to spawn additional processes/threads/workers to handle other requests","date":"2016-07-14T00:22:09.925Z","type":"message"}
{"nick":"modernpacifist","message":"Generally, the request throughput per process is higher with node because all I/O is async","date":"2016-07-14T00:22:33.276Z","type":"message"}
{"nick":"Havvy","message":"With Node, the IO happens in its own threads, and computations share a thread.","date":"2016-07-14T00:22:58.823Z","type":"message"}
{"nick":"Havvy","message":"So you get the advantage of not having to worry about concurrency while still reaping a lot of its benefits.","date":"2016-07-14T00:23:20.328Z","type":"message"}
{"nick":"Havvy","message":"Granted, you don't reap even most of it.","date":"2016-07-14T00:23:32.460Z","type":"message"}
{"nick":"onto","date":"2016-07-14T00:24:10.566Z","type":"join"}
{"nick":"onto","date":"2016-07-14T00:24:22.494Z","type":"part"}
{"nick":"inkyoto","reason":"Quit: Connection closed for inactivity","date":"2016-07-14T00:24:24.552Z","type":"quit"}
{"nick":"modernpacifist","message":"And sure, callback hell was a real thing but can be easily addressed through Promises","date":"2016-07-14T00:24:41.259Z","type":"message"}
{"nick":"mhernandez1","date":"2016-07-14T00:25:13.367Z","type":"join"}
{"nick":"martin290","message":"sounds like a whole lot to learn then lol","date":"2016-07-14T00:25:28.182Z","type":"message"}
{"nick":"modernpacifist","message":"Promises are best practice for general javascript programming","date":"2016-07-14T00:25:43.201Z","type":"message"}
{"nick":"modernpacifist","message":"Since you use node by writing JS, the practice follows","date":"2016-07-14T00:26:04.906Z","type":"message"}
{"nick":"modernpacifist","message":"Ultimately you should focus on learning to write good javascript code instead of good node code","date":"2016-07-14T00:26:28.816Z","type":"message"}
{"nick":"martin290","message":"so first learn javascript, then move onto node, right?","date":"2016-07-14T00:26:57.256Z","type":"message"}
{"nick":"Havvy","message":"martin290:  Sure.","date":"2016-07-14T00:27:09.456Z","type":"message"}
{"nick":"modernpacifist","message":"You could also jump into node straight away as your vehicle for learning javascript","date":"2016-07-14T00:27:30.019Z","type":"message"}
{"nick":"mven","reason":"Ping timeout: 240 seconds","date":"2016-07-14T00:27:34.038Z","type":"quit"}
{"nick":"Havvy","message":"Also, if you see a tutorial that uses `alert(SOMETHING)`, you can usually replace that with `console.log(SOMETHING)`","date":"2016-07-14T00:27:37.794Z","type":"message"}
{"nick":"tristanp","reason":"Ping timeout: 252 seconds","date":"2016-07-14T00:27:40.427Z","type":"quit"}
{"nick":"Havvy","message":"But yeah, you need /some/ JS environment. Node.js or Browser are the common starting ones. (Heck, most never leave)","date":"2016-07-14T00:28:02.884Z","type":"message"}
{"nick":"zaphod_b","date":"2016-07-14T00:28:14.043Z","type":"join"}
{"nick":"zaphod_b","reason":"Client Quit","date":"2016-07-14T00:28:27.769Z","type":"quit"}
{"nick":"agnat","date":"2016-07-14T00:28:50.571Z","type":"join"}
{"nick":"tristanp","date":"2016-07-14T00:28:51.319Z","type":"join"}
{"nick":"agnat","reason":"Client Quit","date":"2016-07-14T00:29:00.791Z","type":"quit"}
{"nick":"sputnik13","date":"2016-07-14T00:30:09.707Z","type":"join"}
{"nick":"sputnik13","reason":"Read error: Connection reset by peer","date":"2016-07-14T00:30:48.693Z","type":"quit"}
{"nick":"icebattle","reason":"Quit: Leaving","date":"2016-07-14T00:30:51.486Z","type":"quit"}
{"nick":"brainpro1","reason":"Ping timeout: 252 seconds","date":"2016-07-14T00:31:31.569Z","type":"quit"}
{"nick":"Muhamta","reason":"Ping timeout: 276 seconds","date":"2016-07-14T00:31:33.695Z","type":"quit"}
{"nick":"chevett","reason":"Ping timeout: 276 seconds","date":"2016-07-14T00:32:51.318Z","type":"quit"}
{"nick":"DeltaHeavy","date":"2016-07-14T00:32:54.558Z","type":"join"}
{"nick":"flyinprogrammer","date":"2016-07-14T00:33:08.258Z","type":"part"}
{"nick":"brainpro1","date":"2016-07-14T00:33:10.528Z","type":"join"}
{"nick":"jxv","date":"2016-07-14T00:34:43.032Z","type":"join"}
{"nick":"harryh","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2016-07-14T00:35:53.576Z","type":"quit"}
{"nick":"mven","date":"2016-07-14T00:37:00.577Z","type":"join"}
{"nick":"sagerdearia","reason":"Ping timeout: 246 seconds","date":"2016-07-14T00:37:30.118Z","type":"quit"}
{"nick":"dvinciguerra_","reason":"Ping timeout: 240 seconds","date":"2016-07-14T00:37:51.321Z","type":"quit"}
{"nick":"T-2000","date":"2016-07-14T00:38:37.054Z","type":"join"}
{"nick":"Sucks","date":"2016-07-14T00:39:38.414Z","type":"join"}
{"nick":"thomas_25","reason":"Quit: This computer has gone to sleep","date":"2016-07-14T00:39:39.324Z","type":"quit"}
{"nick":"idefine","date":"2016-07-14T00:39:54.033Z","type":"join"}
{"nick":"asteele","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-07-14T00:39:55.722Z","type":"quit"}
{"nick":"mcc","date":"2016-07-14T00:40:02.182Z","type":"join"}
{"nick":"DeltaHeavy","reason":"Ping timeout: 252 seconds","date":"2016-07-14T00:40:52.437Z","type":"quit"}
{"nick":"josh","date":"2016-07-14T00:41:10.978Z","type":"join"}
{"nick":"tristanp","reason":"Ping timeout: 252 seconds","date":"2016-07-14T00:44:10.561Z","type":"quit"}
{"nick":"tristanp","date":"2016-07-14T00:45:10.631Z","type":"join"}
{"nick":"elsevero","date":"2016-07-14T00:45:24.465Z","type":"join"}
{"nick":"alanszlosek","reason":"Remote host closed the connection","date":"2016-07-14T00:45:32.862Z","type":"quit"}
{"nick":"ConspiratorX","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-07-14T00:45:47.143Z","type":"quit"}
{"nick":"josh","reason":"Ping timeout: 258 seconds","date":"2016-07-14T00:46:26.215Z","type":"quit"}
{"nick":"ircer","reason":"Ping timeout: 276 seconds","date":"2016-07-14T00:46:30.700Z","type":"quit"}
{"nick":"fetarijon","date":"2016-07-14T00:46:33.447Z","type":"join"}
{"nick":"hyeonu","date":"2016-07-14T00:47:55.547Z","type":"join"}
{"nick":"dandan86","date":"2016-07-14T00:48:26.241Z","type":"join"}
{"nick":"chevett","date":"2016-07-14T00:48:45.316Z","type":"join"}
{"nick":"ircer","date":"2016-07-14T00:49:15.324Z","type":"join"}
{"nick":"elsevero","reason":"Ping timeout: 240 seconds","date":"2016-07-14T00:50:31.335Z","type":"quit"}
{"nick":"mven","reason":"Ping timeout: 240 seconds","date":"2016-07-14T00:50:33.938Z","type":"quit"}
{"nick":"OnkelTem","reason":"Ping timeout: 276 seconds","date":"2016-07-14T00:51:03.349Z","type":"quit"}
{"nick":"fetarijon","reason":"Client Quit","date":"2016-07-14T00:51:22.860Z","type":"quit"}
{"nick":"bdunavant","date":"2016-07-14T00:53:07.581Z","type":"join"}
{"nick":"bdunavant","reason":"Remote host closed the connection","date":"2016-07-14T00:53:09.074Z","type":"quit"}
{"nick":"dandan86","reason":"Ping timeout: 264 seconds","date":"2016-07-14T00:53:16.052Z","type":"quit"}
{"nick":"u0m3","reason":"Read error: Connection reset by peer","date":"2016-07-14T00:55:53.332Z","type":"quit"}
{"nick":"narkewoody","date":"2016-07-14T00:57:09.697Z","type":"join"}
{"nick":"JPT","reason":"Ping timeout: 260 seconds","date":"2016-07-14T00:57:27.737Z","type":"quit"}
{"nick":"isberg_","reason":"Ping timeout: 276 seconds","date":"2016-07-14T00:58:12.331Z","type":"quit"}
{"nick":"idefine","reason":"Remote host closed the connection","date":"2016-07-14T00:58:19.560Z","type":"quit"}
{"nick":"tristanp","reason":"Ping timeout: 276 seconds","date":"2016-07-14T00:58:51.335Z","type":"quit"}
{"nick":"tristanp","date":"2016-07-14T00:59:54.438Z","type":"join"}
{"nick":"ConspiratorX","date":"2016-07-14T01:00:34.334Z","type":"join"}
{"nick":"SwiftMatt","date":"2016-07-14T01:00:36.119Z","type":"join"}
{"nick":"nnyk","reason":"Ping timeout: 272 seconds","date":"2016-07-14T01:01:00.227Z","type":"quit"}
{"nick":"idefine","date":"2016-07-14T01:01:07.999Z","type":"join"}
{"nick":"Nikesh","reason":"Ping timeout: 244 seconds","date":"2016-07-14T01:02:02.964Z","type":"quit"}
{"nick":"sobersabre_","reason":"Read error: Connection reset by peer","date":"2016-07-14T01:02:16.905Z","type":"quit"}
{"nick":"stelarcf","reason":"Quit: stelarcf","date":"2016-07-14T01:02:32.556Z","type":"quit"}
{"nick":"sobersabre","date":"2016-07-14T01:02:42.279Z","type":"join"}
{"nick":"asteele","date":"2016-07-14T01:03:28.223Z","type":"join"}
{"nick":"Nikesh","date":"2016-07-14T01:04:00.102Z","type":"join"}
{"nick":"narkewoody","reason":"Ping timeout: 276 seconds","date":"2016-07-14T01:04:03.673Z","type":"quit"}
{"nick":"bottazzini","reason":"Quit: Disappears in a puff of smoke","date":"2016-07-14T01:04:25.085Z","type":"quit"}
{"nick":"diamonds","date":"2016-07-14T01:04:28.104Z","type":"join"}
{"nick":"ConspiratorX","reason":"Client Quit","date":"2016-07-14T01:04:44.359Z","type":"quit"}
{"nick":"CrazyTux[m]","reason":"Quit: This computer has gone to sleep","date":"2016-07-14T01:04:59.070Z","type":"quit"}
{"nick":"JPT","date":"2016-07-14T01:07:16.004Z","type":"join"}
{"nick":"smccarthy","date":"2016-07-14T01:07:27.036Z","type":"join"}
{"nick":"diogogmt","date":"2016-07-14T01:07:53.209Z","type":"join"}
{"nick":"pcarrier_","reason":"Quit: Connection closed for inactivity","date":"2016-07-14T01:09:55.982Z","type":"quit"}
{"nick":"Literphor","reason":"Quit: Literphor","date":"2016-07-14T01:10:33.210Z","type":"quit"}
{"nick":"WebSpirit","date":"2016-07-14T01:11:56.987Z","type":"join"}
{"nick":"u0m3","date":"2016-07-14T01:12:12.048Z","type":"join"}
{"nick":"tristanp","reason":"Ping timeout: 252 seconds","date":"2016-07-14T01:12:13.416Z","type":"quit"}
{"nick":"s3shs","reason":"Quit: Computer has gone to sleep.","date":"2016-07-14T01:12:33.014Z","type":"quit"}
{"nick":"smccarthy","reason":"Ping timeout: 240 seconds","date":"2016-07-14T01:12:33.977Z","type":"quit"}
{"nick":"plutoniix","date":"2016-07-14T01:13:28.170Z","type":"join"}
{"nick":"Avihay","date":"2016-07-14T01:13:29.328Z","type":"join"}
{"nick":"Sixmsj","reason":"Ping timeout: 272 seconds","date":"2016-07-14T01:13:40.234Z","type":"quit"}
{"nick":"tristanp","date":"2016-07-14T01:13:40.928Z","type":"join"}
{"nick":"WebSpirit_","reason":"Ping timeout: 244 seconds","date":"2016-07-14T01:14:26.983Z","type":"quit"}
{"nick":"vinzusama","reason":"Quit: iQuit","date":"2016-07-14T01:14:29.210Z","type":"quit"}
{"nick":"Sixmsj","date":"2016-07-14T01:15:28.731Z","type":"join"}
{"nick":"NomadJim","reason":"Read error: Connection reset by peer","date":"2016-07-14T01:15:59.565Z","type":"quit"}
{"nick":"JPT","reason":"Ping timeout: 258 seconds","date":"2016-07-14T01:16:20.236Z","type":"quit"}
{"nick":"sumobob","reason":"Ping timeout: 250 seconds","date":"2016-07-14T01:16:43.007Z","type":"quit"}
{"nick":"NomadJim","date":"2016-07-14T01:16:44.387Z","type":"join"}
{"nick":"the_ant","date":"2016-07-14T01:18:04.006Z","type":"join"}
{"nick":"JPT","date":"2016-07-14T01:18:23.635Z","type":"join"}
{"nick":"sagerdearia","date":"2016-07-14T01:19:34.025Z","type":"join"}
{"nick":"ed209","reason":"Remote host closed the connection","date":"2016-07-14T01:20:00.606Z","type":"quit"}
{"nick":"ed209","date":"2016-07-14T01:20:06.979Z","type":"join"}
{"nick":"rho","reason":"Ping timeout: 240 seconds","date":"2016-07-14T01:22:34.012Z","type":"quit"}
{"nick":"mhernandez1","reason":"Remote host closed the connection","date":"2016-07-14T01:22:49.824Z","type":"quit"}
{"nick":"Swizec","reason":"Quit: Computer has gone to sleep.","date":"2016-07-14T01:27:36.087Z","type":"quit"}
{"nick":"tristanp","reason":"Ping timeout: 240 seconds","date":"2016-07-14T01:28:51.384Z","type":"quit"}
{"nick":"ddddn","reason":"Ping timeout: 250 seconds","date":"2016-07-14T01:28:52.453Z","type":"quit"}
{"nick":"tristanp","date":"2016-07-14T01:30:01.578Z","type":"join"}
{"nick":"jdelers","message":"when i run the node app from the webstorm using the button run -- it runs fine but when i do the same from the terminal i am not able to run it","date":"2016-07-14T01:31:58.157Z","type":"message"}
{"nick":"jdelers","message":"this is curious","date":"2016-07-14T01:32:06.010Z","type":"message"}
{"nick":"d4rklit3","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-07-14T01:32:13.904Z","type":"quit"}
{"nick":"jdelers","action":"confusing","date":"2016-07-14T01:32:15.172Z","type":"action"}
{"nick":"thunfisch_","date":"2016-07-14T01:32:59.923Z","type":"join"}
{"nick":"alphamale93","date":"2016-07-14T01:33:10.669Z","type":"join"}
{"nick":"martin290","date":"2016-07-14T01:33:20.737Z","type":"part"}
{"nick":"monk_king_kong","date":"2016-07-14T01:34:51.555Z","type":"join"}
{"nick":"benniblanco","reason":"Ping timeout: 244 seconds","date":"2016-07-14T01:35:07.032Z","type":"quit"}
{"nick":"thunfisch","reason":"Ping timeout: 244 seconds","date":"2016-07-14T01:35:37.972Z","type":"quit"}
{"nick":"bumblehead","date":"2016-07-14T01:35:45.102Z","type":"join"}
{"nick":"Milos|Work","reason":"Ping timeout: 276 seconds","date":"2016-07-14T01:35:54.697Z","type":"quit"}
{"nick":"Lee1092","date":"2016-07-14T01:38:06.068Z","type":"join"}
{"nick":"JaffaKree","date":"2016-07-14T01:38:15.067Z","type":"join"}
{"nick":"bumblehead","reason":"Ping timeout: 246 seconds","date":"2016-07-14T01:40:09.102Z","type":"quit"}
{"nick":"ekkis","date":"2016-07-14T01:40:23.128Z","type":"join"}
{"nick":"ekkis","message":"if I have some non-async function f and I want to chain some .then()s to it, can I do: Promise.try(() => x()), or do I need to resolve it?","date":"2016-07-14T01:41:30.062Z","type":"message"}
{"nick":"voycey","date":"2016-07-14T01:41:42.320Z","type":"join"}
{"nick":"ljharb","message":"ekkis: `Promise.try(f)` is fine.","date":"2016-07-14T01:42:41.684Z","type":"message"}
{"nick":"ljharb","message":"ekkis: otherwise you'd need `Promise.resolve().then(f)`","date":"2016-07-14T01:42:47.507Z","type":"message"}
{"nick":"kevireilly","message":"jdelers: in what way does it not run?","date":"2016-07-14T01:43:01.796Z","type":"message"}
{"nick":"ekkis","message":"oh... I can just specify the function itself directly.  cool","date":"2016-07-14T01:43:45.354Z","type":"message"}
{"nick":"Nikesh","reason":"Quit: leaving","date":"2016-07-14T01:44:00.884Z","type":"quit"}
{"nick":"Brett[Air]","date":"2016-07-14T01:44:03.017Z","type":"join"}
{"nick":"joepie91","message":"mmmm","date":"2016-07-14T01:44:37.518Z","type":"message"}
{"nick":"joepie91","message":"hold on","date":"2016-07-14T01:44:39.015Z","type":"message"}
{"nick":"jdelers","message":"kevireilly:  in terminal i am able to see the app running but in the browser localhost:3001 is saying site can't be reached","date":"2016-07-14T01:44:40.440Z","type":"message"}
{"nick":"joepie91","message":"ekkis: you always want to wrap stuff in a callback","date":"2016-07-14T01:44:46.736Z","type":"message"}
{"nick":"jdelers","message":"kevireilly:  if i run using the webstorm","date":"2016-07-14T01:44:58.045Z","type":"message"}
{"nick":"joepie91","message":"including when using Promise.try or .then","date":"2016-07-14T01:44:59.289Z","type":"message"}
{"nick":"Trinity","message":"with mongodb in order to update multiple documents and not worry about possible data corruption if the DB fails they recommend two phase commits","date":"2016-07-14T01:45:11.105Z","type":"message"}
{"nick":"ekkis","message":"kevireilly: I'm not sure I understand it yet... I have something like Promise.try(() => { non-async-code }).then(() => more-non-async-code)... etc. and I'm expecting that the second block won't execute until the first block has","date":"2016-07-14T01:45:22.267Z","type":"message"}
{"nick":"jdelers","message":"kevireilly:  then i am able to see the app at localhost:3001","date":"2016-07-14T01:45:22.865Z","type":"message"}
{"nick":"Trinity","message":"wouldn't promises void that need? As you know if something fails and then you can instantly rollback as needed?","date":"2016-07-14T01:45:30.028Z","type":"message"}
{"nick":"joepie91","message":"ekkis: so indeed Promise.try(() => x()) rather than Promise.try(x)","date":"2016-07-14T01:45:31.118Z","type":"message"}
{"nick":"tristanp","reason":"Ping timeout: 276 seconds","date":"2016-07-14T01:45:39.347Z","type":"quit"}
{"nick":"Sucks","reason":"Remote host closed the connection","date":"2016-07-14T01:45:46.401Z","type":"quit"}
{"nick":"ekkis","message":"so in the first block I assign to a global variable and in the second I rely on it... it doesn't quite seem to be firing off the async code","date":"2016-07-14T01:46:00.169Z","type":"message"}
{"nick":"PabloR","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2016-07-14T01:46:32.713Z","type":"quit"}
{"nick":"elsevero","date":"2016-07-14T01:46:39.416Z","type":"join"}
{"nick":"tristanp","date":"2016-07-14T01:46:40.991Z","type":"join"}
{"nick":"jdelers","message":"kevireilly:  FYI i run the app on 3001 port","date":"2016-07-14T01:46:59.484Z","type":"message"}
{"nick":"sliter","date":"2016-07-14T01:47:05.474Z","type":"join"}
{"nick":"sliter","message":"Hello!","date":"2016-07-14T01:47:08.698Z","type":"message"}
{"nick":"ekkis","message":"joepie91: oh, ok.  that's how I currently have it, wrapped in a callback e.g. Promise.try(() => { my-async-code(); })","date":"2016-07-14T01:47:19.819Z","type":"message"}
{"nick":"sliter","message":"How do i send message into socket by just running file?","date":"2016-07-14T01:47:26.177Z","type":"message"}
{"nick":"fr_","date":"2016-07-14T01:47:46.379Z","type":"join"}
{"nick":"ekkis","message":"joepie91: actually that makes sense because of the signature","date":"2016-07-14T01:47:48.460Z","type":"message"}
{"nick":"modernpacifist","message":"Trinity: By data corruption, do you mean inconsistent/non-sensical data if your updates start failing half way through?","date":"2016-07-14T01:48:08.811Z","type":"message"}
{"nick":"benniblanco","date":"2016-07-14T01:48:09.729Z","type":"join"}
{"nick":"ekkis","message":"so I just need to debug a bit more before I can figure out what's wrong...","date":"2016-07-14T01:48:16.025Z","type":"message"}
{"nick":"p4trix","reason":"Ping timeout: 272 seconds","date":"2016-07-14T01:48:30.253Z","type":"quit"}
{"nick":"joepie91","message":"ekkis: you forgot a return there ;)","date":"2016-07-14T01:48:30.440Z","type":"message"}
{"nick":"ekkis","message":"yes, bad pseudo-code","date":"2016-07-14T01:49:03.324Z","type":"message"}
{"nick":"the_ant","reason":"Ping timeout: 244 seconds","date":"2016-07-14T01:49:04.001Z","type":"quit"}
{"nick":"Abhishek_","reason":"Quit: Connection closed for inactivity","date":"2016-07-14T01:49:33.722Z","type":"quit"}
{"nick":"joepie91","message":"[03:46] <ekkis> so in the first block I assign to a global variable and in the second I rely on it... it doesn't quite seem to be firing off the async code","date":"2016-07-14T01:49:44.319Z","type":"message"}
{"nick":"joepie91","message":"don't","date":"2016-07-14T01:49:45.816Z","type":"message"}
{"nick":"joepie91","message":"if you need to maintain a piece of scope across multiple .then callbacks, nest one level","date":"2016-07-14T01:50:06.368Z","type":"message"}
{"nick":"joepie91","message":"don't try to set variables out-of-scope","date":"2016-07-14T01:50:13.430Z","type":"message"}
{"nick":"fr","reason":"Ping timeout: 250 seconds","date":"2016-07-14T01:50:56.962Z","type":"quit"}
{"nick":"ekkis","message":"joepie91: I'm running this in the browser, the global var I set is a database connection object that various parts of the app require.  the app is browserified and I'm unsure quite what the best practice in this case is","date":"2016-07-14T01:51:05.282Z","type":"message"}
{"nick":"joepie91","message":"ekkis: none of the things you said change my recommendation :)","date":"2016-07-14T01:51:15.720Z","type":"message"}
{"nick":"joepie91","message":"also, database connection object? in the browser?","date":"2016-07-14T01:51:22.576Z","type":"message"}
{"nick":"joepie91","message":"not Firebase, surely?","date":"2016-07-14T01:51:30.215Z","type":"message"}
{"nick":"Literphor","date":"2016-07-14T01:51:33.489Z","type":"join"}
{"nick":"ekkis","message":"when you say \"nest one level\" I presume you mean to declare a lexical variable available to all the .then()s in my chain","date":"2016-07-14T01:52:02.762Z","type":"message"}
{"nick":"ekkis","message":"but the variable needs to be set globally for all parts of the application to have access to it","date":"2016-07-14T01:52:21.096Z","type":"message"}
{"nick":"ekkis","message":"no... in fact, it's a proxy object","date":"2016-07-14T01:52:49.133Z","type":"message"}
{"nick":"jdelers","message":"kevireilly:  u here?","date":"2016-07-14T01:53:04.341Z","type":"message"}
{"nick":"ekkis","message":"so my app reaches back to the server when it needs data and the server reaches out to the db","date":"2016-07-14T01:53:14.355Z","type":"message"}
{"nick":"elsevero","reason":"Ping timeout: 244 seconds","date":"2016-07-14T01:53:42.999Z","type":"quit"}
{"nick":"joepie91","message":"ekkis: https://gist.github.com/joepie91/cfc1de376e3ebd1a8e8e1468cf2aaee6","date":"2016-07-14T01:53:51.423Z","type":"message"}
{"nick":"ekkis","message":"the client asks the server for a proxy object, gets back a bunch of methods that all basically call $.get(/some/path, ...) on the server","date":"2016-07-14T01:54:05.406Z","type":"message"}
{"nick":"jdelers","action":"yawning","date":"2016-07-14T01:54:09.940Z","type":"action"}
{"nick":"jdelers","reason":"Quit: gotta sleep see ya","date":"2016-07-14T01:54:10.261Z","type":"quit"}
{"nick":"ekkis","action":"looks","date":"2016-07-14T01:54:18.450Z","type":"action"}
{"nick":"joepie91","message":"ekkis: F5, fixed a thing","date":"2016-07-14T01:54:38.432Z","type":"message"}
{"nick":"joepie91","message":":p","date":"2016-07-14T01:54:39.919Z","type":"message"}
{"nick":"ekkis","message":"ah, I understand what you mean","date":"2016-07-14T01:54:55.208Z","type":"message"}
{"nick":"ekkis","message":"F5?","date":"2016-07-14T01:55:08.092Z","type":"message"}
{"nick":"joepie91","message":"refresh","date":"2016-07-14T01:55:10.693Z","type":"message"}
{"nick":"ekkis","message":"oh, that's the old Windows thing.  it's been years for me :)","date":"2016-07-14T01:55:21.308Z","type":"message"}
{"nick":"ekkis","message":"yes, I understand your example but my situation is a bit different.  I need to set a global variable so it's available to all parts of the page","date":"2016-07-14T01:56:03.785Z","type":"message"}
{"nick":"lsyoyom","reason":"Remote host closed the connection","date":"2016-07-14T01:56:05.512Z","type":"quit"}
{"nick":"ljharb","message":"no you do not.","date":"2016-07-14T01:56:16.073Z","type":"message"}
{"nick":"ekkis","message":"but the thing is the code doesn't even seem to be firing","date":"2016-07-14T01:56:18.090Z","type":"message"}
{"nick":"harryh","date":"2016-07-14T01:56:20.918Z","type":"join"}
{"nick":"ljharb","message":"you need to explicitly require something everywhere you need it.","date":"2016-07-14T01:56:23.603Z","type":"message"}
{"nick":"ekkis","message":"ljharb: then how do I do it?","date":"2016-07-14T01:56:26.174Z","type":"message"}
{"nick":"dunpeal","date":"2016-07-14T01:56:28.766Z","type":"join"}
{"nick":"joepie91","message":"ekkis: there are exactly zero valid usecases for global variables in normal application code","date":"2016-07-14T01:56:34.059Z","type":"message"}
{"nick":"joepie91","message":":P","date":"2016-07-14T01:56:35.559Z","type":"message"}
{"nick":"ljharb","message":"if you need it in 50 files, you have 50 requires.","date":"2016-07-14T01:56:35.746Z","type":"message"}
{"nick":"joepie91","message":"ljharb: this seems to concern an instance","date":"2016-07-14T01:56:43.249Z","type":"message"}
{"nick":"lsyoyom","date":"2016-07-14T01:56:43.955Z","type":"join"}
{"nick":"joepie91","message":"so I'd rather suggest a parametric module","date":"2016-07-14T01:56:49.756Z","type":"message"}
{"nick":"ljharb","message":"it's fine. export a singleton","date":"2016-07-14T01:56:52.354Z","type":"message"}
{"nick":"ljharb","message":"or export a function that memoizes its return value.","date":"2016-07-14T01:57:03.381Z","type":"message"}
{"nick":"joepie91","message":"ekkis: example sucks a bit but https://gist.github.com/joepie91/83a8e03ad931e696df22","date":"2016-07-14T01:57:07.193Z","type":"message"}
{"nick":"joepie91","message":"I should have a better one..","date":"2016-07-14T01:57:14.148Z","type":"message"}
{"nick":"ekkis","message":"so var x = require('./x'); but then I need to do x.init(); - if I do that in one file and require it in a different file then I need to initialize it there too?","date":"2016-07-14T01:57:43.243Z","type":"message"}
{"nick":"ljharb","message":"ekkis: what needs initialization?","date":"2016-07-14T01:57:54.572Z","type":"message"}
{"nick":"ekkis","message":"the object that the require() returns is just a framework, it needs initialisation, for example, it's an object that knows how to talk to a certain system, but initialisation will tell it which system to connect to","date":"2016-07-14T01:59:00.698Z","type":"message"}
{"nick":"ekkis","message":"so I would prefer to initialize it once and share it across the app","date":"2016-07-14T01:59:20.816Z","type":"message"}
{"nick":"mmmveggies","reason":"Quit: Connection closed for inactivity","date":"2016-07-14T01:59:52.453Z","type":"quit"}
{"nick":"ljharb","message":"ekkis: what is the framework and why doesn't it autoinitialize with environment-based config?","date":"2016-07-14T01:59:56.131Z","type":"message"}
{"nick":"ekkis","action":"looks at joepie91's code","date":"2016-07-14T02:00:20.429Z","type":"action"}
{"nick":"ekkis","message":"ljharb: perhaps I use \"framework\" loosely.  I really mean a module.  it could be any kind of functionality that needs state","date":"2016-07-14T02:01:07.162Z","type":"message"}
{"nick":"ekkis","message":"and initialization could be from the environment but it could be from other sources, like a database, or a file","date":"2016-07-14T02:01:32.226Z","type":"message"}
{"nick":"ljharb","message":"`var initialized; module.exports = function (config) { if (!initialized) { initialized = doWhatever(config); } return initialized; }`","date":"2016-07-14T02:02:09.240Z","type":"message"}
{"nick":"ljharb","message":"problem solved.","date":"2016-07-14T02:02:12.169Z","type":"message"}
{"nick":"GreenJello","message":"ekkis, you probably only need to do it in one place, unless it creates and returns the object instead of mutating state","date":"2016-07-14T02:02:12.750Z","type":"message"}
{"nick":"joepie91","message":"ekkis: so the example I linked - which really isn't very good... - demonstrates parametric modules, ie. modules that expect their state to be passed in through a wrapper function, so that you can access it from anywhere within the module because of lexical scope","date":"2016-07-14T02:02:15.692Z","type":"message"}
{"nick":"tristanp","reason":"Ping timeout: 252 seconds","date":"2016-07-14T02:02:16.470Z","type":"quit"}
{"nick":"dunpeal","reason":"Ping timeout: 276 seconds","date":"2016-07-14T02:02:33.704Z","type":"quit"}
{"nick":"joepie91","message":"ekkis: means no singletons, no globals, very lightweight dependency injection, a unidirectional 'tree' of how state gets passed down (everything gets initialized in the entry point file)","date":"2016-07-14T02:02:43.177Z","type":"message"}
{"nick":"joepie91","message":"and every module is stateless in and of itself, it's just the wrapper functions that can work with state","date":"2016-07-14T02:02:57.024Z","type":"message"}
{"nick":"ekkis","message":"ljharb: so when I require it from two different places it remembers its values?","date":"2016-07-14T02:03:02.730Z","type":"message"}
{"nick":"Douhan","reason":"Quit: Connection closed for inactivity","date":"2016-07-14T02:03:10.484Z","type":"quit"}
{"nick":"JaffaKree","reason":"Quit: Leaving","date":"2016-07-14T02:03:25.299Z","type":"quit"}
{"nick":"tristanp","date":"2016-07-14T02:03:30.673Z","type":"join"}
{"nick":"tfennelly","date":"2016-07-14T02:03:56.197Z","type":"join"}
{"nick":"ljharb","message":"ekkis: yes","date":"2016-07-14T02:03:57.675Z","type":"message"}
{"nick":"ljharb","message":"ekkis: and you only have to pass the config the first time.","date":"2016-07-14T02:04:03.862Z","type":"message"}
{"nick":"ljharb","message":"ekkis: you can also add `if (!initialized && !config) { throw new TypeError('initialize me first, jerk'); }` for extra protection","date":"2016-07-14T02:04:20.660Z","type":"message"}
{"nick":"ekkis","message":"hmm... yes, I think that's the bit that I was missing... I need to test that","date":"2016-07-14T02:05:01.203Z","type":"message"}
{"nick":"ekkis","message":"thanks for the advice","date":"2016-07-14T02:05:10.197Z","type":"message"}
{"nick":"ljharb","message":"np","date":"2016-07-14T02:05:31.630Z","type":"message"}
{"nick":"DigitalSpeed","reason":"Ping timeout: 250 seconds","date":"2016-07-14T02:07:50.941Z","type":"quit"}
{"nick":"ekkis","message":"so to make sure I'm understanding this correctly: if in Module1.js I have var x = require('./x'); x.test = 1; and in Module2.js I have var x = require('./x'); console.log(x.test); then when Module2.js runs I should get 1, correct?","date":"2016-07-14T02:07:59.246Z","type":"message"}
{"nick":"tfennelly","reason":"Ping timeout: 244 seconds","date":"2016-07-14T02:08:10.979Z","type":"quit"}
{"nick":"ekkis","message":"and perhaps x.js just contains: module.exports = { test: 0 };","date":"2016-07-14T02:08:33.932Z","type":"message"}
{"nick":"ekkis","action":"googles TypeError","date":"2016-07-14T02:08:57.564Z","type":"action"}
{"nick":"Havvy","message":"ekkis:  Only if you require(\"./Module1\") first.","date":"2016-07-14T02:09:22.932Z","type":"message"}
{"nick":"Havvy","message":"And in general, mutating objects that you don't \"own\" like that is a bad idea.","date":"2016-07-14T02:09:35.228Z","type":"message"}
{"nick":"ekkis","message":"ok, fair enough","date":"2016-07-14T02:09:40.098Z","type":"message"}
{"nick":"ekkis","message":"do you guys know if this thesis will survive across browserification?","date":"2016-07-14T02:10:13.235Z","type":"message"}
{"nick":"Havvy","message":"Depends upon the method of browserification.","date":"2016-07-14T02:10:36.991Z","type":"message"}
{"nick":"Havvy","message":"And again, it's not something you want to rely on.","date":"2016-07-14T02:10:48.368Z","type":"message"}
{"nick":"ekkis","message":"there's more than 1?","date":"2016-07-14T02:10:51.337Z","type":"message"}
{"nick":"ekkis","message":"what is it I don't want to rely on?","date":"2016-07-14T02:11:04.966Z","type":"message"}
{"nick":"Havvy","message":"If you mean \"Using browserify\" there's only one.","date":"2016-07-14T02:11:08.598Z","type":"message"}
{"nick":"ekkis","message":"yes, I'm using browserify","date":"2016-07-14T02:11:23.476Z","type":"message"}
{"nick":"Havvy","message":"You don't want to rely on mutating values that you import.","date":"2016-07-14T02:11:34.732Z","type":"message"}
{"nick":"mich-cook","reason":"Ping timeout: 276 seconds","date":"2016-07-14T02:11:39.364Z","type":"quit"}
{"nick":"ekkis","message":"ah, yes, agreed","date":"2016-07-14T02:11:49.285Z","type":"message"}
{"nick":"nebrew","reason":"Quit: Leaving","date":"2016-07-14T02:11:59.089Z","type":"quit"}
{"nick":"mhernandez1","date":"2016-07-14T02:12:36.399Z","type":"join"}
{"nick":"sbellina","reason":"Ping timeout: 250 seconds","date":"2016-07-14T02:14:20.902Z","type":"quit"}
{"nick":"phutchins","reason":"Ping timeout: 276 seconds","date":"2016-07-14T02:14:54.691Z","type":"quit"}
{"nick":"mhernandez1","reason":"Ping timeout: 264 seconds","date":"2016-07-14T02:17:16.047Z","type":"quit"}
{"nick":"DigitalSpeed","date":"2016-07-14T02:18:33.843Z","type":"join"}
{"nick":"p15","date":"2016-07-14T02:20:27.905Z","type":"join"}
{"nick":"_yoy_","reason":"Quit: Computer has gone to sleep.","date":"2016-07-14T02:20:42.678Z","type":"quit"}
{"nick":"blessYahu","date":"2016-07-14T02:20:52.018Z","type":"join"}
{"nick":"devc","reason":"Ping timeout: 250 seconds","date":"2016-07-14T02:21:16.768Z","type":"quit"}
{"nick":"tristanp","reason":"Ping timeout: 258 seconds","date":"2016-07-14T02:21:53.256Z","type":"quit"}
{"nick":"mhernandez1","date":"2016-07-14T02:22:30.438Z","type":"join"}
{"nick":"monk_king_kong","reason":"Quit: leaving","date":"2016-07-14T02:23:07.178Z","type":"quit"}
{"nick":"monk_king_kong","date":"2016-07-14T02:23:19.773Z","type":"join"}
{"nick":"cuebix-wk","date":"2016-07-14T02:23:22.699Z","type":"join"}
{"nick":"krauq","date":"2016-07-14T02:23:33.889Z","type":"join"}
{"nick":"msafi","reason":"Ping timeout: 252 seconds","date":"2016-07-14T02:23:43.619Z","type":"quit"}
{"nick":"tristanp","date":"2016-07-14T02:23:54.878Z","type":"join"}
{"nick":"heliumcraft","date":"2016-07-14T02:25:35.001Z","type":"join"}
{"nick":"xall","reason":"Ping timeout: 252 seconds","date":"2016-07-14T02:25:55.479Z","type":"quit"}
{"nick":"mven","date":"2016-07-14T02:26:33.634Z","type":"join"}
{"nick":"texinwien_","date":"2016-07-14T02:26:53.000Z","type":"join"}
{"nick":"mhernandez1","reason":"Ping timeout: 240 seconds","date":"2016-07-14T02:27:03.906Z","type":"quit"}
{"nick":"a_thakur","date":"2016-07-14T02:28:27.772Z","type":"join"}
{"nick":"the_ant","date":"2016-07-14T02:29:32.329Z","type":"join"}
{"nick":"blahfoo","date":"2016-07-14T02:29:55.627Z","type":"join"}
{"nick":"Mia","date":"2016-07-14T02:30:24.442Z","type":"join"}
{"nick":"ericwooley","reason":"Ping timeout: 258 seconds","date":"2016-07-14T02:31:51.256Z","type":"quit"}
{"nick":"dunpeal","date":"2016-07-14T02:32:05.044Z","type":"join"}
{"nick":"lhdc","date":"2016-07-14T02:32:29.594Z","type":"join"}
{"nick":"texinwien_","reason":"Ping timeout: 244 seconds","date":"2016-07-14T02:33:29.973Z","type":"quit"}
{"nick":"devc","date":"2016-07-14T02:34:13.226Z","type":"join"}
{"nick":"gli","date":"2016-07-14T02:34:13.987Z","type":"join"}
{"nick":"drew7721","date":"2016-07-14T02:36:26.694Z","type":"join"}
{"nick":"kspr1","date":"2016-07-14T02:37:28.330Z","type":"join"}
{"nick":"Xiti`","reason":"Quit: Xiti`","date":"2016-07-14T02:40:20.894Z","type":"quit"}
{"nick":"d4rklit3","date":"2016-07-14T02:40:49.202Z","type":"join"}
{"nick":"ekkis","message":"ok, I have another question: if I do Promise.resolve().then(() => x()).then(() => y()).then(() => z()), can I not expect that x() will run before y()?","date":"2016-07-14T02:41:11.500Z","type":"message"}
{"nick":"tristanp","reason":"Ping timeout: 252 seconds","date":"2016-07-14T02:41:19.414Z","type":"quit"}
{"nick":"ekkis","message":"and x and y are functions that return promises (do they have to, now that I think of it?)","date":"2016-07-14T02:41:56.688Z","type":"message"}
{"nick":"JFlash","reason":"Ping timeout: 276 seconds","date":"2016-07-14T02:42:12.676Z","type":"quit"}
{"nick":"Havvy","message":"ekkis:  You can expect x() to execute before y()","date":"2016-07-14T02:42:18.175Z","type":"message"}
{"nick":"Havvy","message":"They don't have to return promises.","date":"2016-07-14T02:42:25.320Z","type":"message"}
{"nick":"qard-appneta","reason":"Quit: (╯°□°）╯︵ pɹɐb","date":"2016-07-14T02:42:41.078Z","type":"quit"}
{"nick":"ekkis","message":"hmm... ok.  that was my premise.  then something else is wrong...","date":"2016-07-14T02:42:43.433Z","type":"message"}
{"nick":"tristanp","date":"2016-07-14T02:42:46.231Z","type":"join"}
{"nick":"Havvy","message":"If you return a sync value, it'll be wrapped into a Promise like with Promise.resolve()","date":"2016-07-14T02:42:47.857Z","type":"message"}
{"nick":"ekkis","message":"thanks","date":"2016-07-14T02:42:49.283Z","type":"message"}
{"nick":"ekkis","message":"when I put breakpoints in the browser, z() is the first one to run","date":"2016-07-14T02:43:22.020Z","type":"message"}
{"nick":"ekkis","message":"which is why my code isn't working","date":"2016-07-14T02:43:31.925Z","type":"message"}
{"nick":"ekkis","message":"I expected x() to run first","date":"2016-07-14T02:43:38.585Z","type":"message"}
{"nick":"Havvy","message":"Also, if `x()` is the entire body of your function, you can just do `.then(x)`. But it's probably not.","date":"2016-07-14T02:44:00.002Z","type":"message"}
{"nick":"abijeet","date":"2016-07-14T02:44:15.102Z","type":"join"}
{"nick":"Havvy","message":"And yes, `aPromise.then(x).then(y).then(z)` will have `x` execute with the value that aPromise wraps.","date":"2016-07-14T02:44:48.393Z","type":"message"}
{"nick":"ekkis","message":"ya, it isn't","date":"2016-07-14T02:44:49.853Z","type":"message"}
{"nick":"Havvy","message":"Then `y` will get the value that `x()` returns.","date":"2016-07-14T02:45:05.908Z","type":"message"}
{"nick":"Havvy","message":"What's the actual code look like?","date":"2016-07-14T02:45:28.641Z","type":"message"}
{"nick":"ekkis","message":"but in any case, .then(() => x()) means call x() at the time that the .then() is executed, not at the time it's declared, right?","date":"2016-07-14T02:45:40.830Z","type":"message"}
{"nick":"Havvy","message":"Yes.","date":"2016-07-14T02:45:49.077Z","type":"message"}
{"nick":"ekkis","message":"it's too complicated to post here","date":"2016-07-14T02:45:55.336Z","type":"message"}
{"nick":"Havvy","message":"Not if the issue is typographical.","date":"2016-07-14T02:46:05.770Z","type":"message"}
{"nick":"ekkis","message":"so I'm approximating the base case in my little examples","date":"2016-07-14T02:46:06.209Z","type":"message"}
{"nick":"smccarthy","date":"2016-07-14T02:46:13.212Z","type":"join"}
{"nick":"ekkis","message":"true true","date":"2016-07-14T02:46:13.414Z","type":"message"}
{"nick":"sin8h","date":"2016-07-14T02:46:40.485Z","type":"join"}
{"nick":"ekkis","message":"let me pastebin something more closely representative","date":"2016-07-14T02:46:46.682Z","type":"message"}
{"nick":"a_thakur","date":"2016-07-14T02:46:55.265Z","type":"quit"}
{"nick":"Havvy","message":"Just pastebin the .then() chain.","date":"2016-07-14T02:47:07.030Z","type":"message"}
{"nick":"dandan86","date":"2016-07-14T02:49:58.195Z","type":"join"}
{"nick":"DigitalSpeed","reason":"Read error: No route to host","date":"2016-07-14T02:50:08.826Z","type":"quit"}
{"nick":"sliter","message":"Guys","date":"2016-07-14T02:50:13.457Z","type":"message"}
{"nick":"DigitalSpeed","date":"2016-07-14T02:50:22.713Z","type":"join"}
{"nick":"sliter","message":"Any ideas of how sockets.io throught cloudflare?","date":"2016-07-14T02:50:23.287Z","type":"message"}
{"nick":"ekkis","message":"Havvy: http://pastebin.com/wYvZ14kH","date":"2016-07-14T02:50:29.488Z","type":"message"}
{"nick":"sliter","message":"Isn't it potential hole for DDOS?","date":"2016-07-14T02:50:36.623Z","type":"message"}
{"nick":"ekkis","message":"Havvy: so a little explanation: line 4 makes sure that the function picks up the functions attached to it.  it gets them in order (x first since it's declared first).  for the first call it initializes p, subsequent calls create a .then() chain","date":"2016-07-14T02:52:37.319Z","type":"message"}
{"nick":"ekkis","message":"if I set breakpoints inside the functions, y() runs first","date":"2016-07-14T02:52:56.785Z","type":"message"}
{"nick":"Rodya_","reason":"Remote host closed the connection","date":"2016-07-14T02:53:11.924Z","type":"quit"}
{"nick":"ekkis","message":"by the way, this is in the browser (through browserify), with bluebird promises","date":"2016-07-14T02:53:20.366Z","type":"message"}
{"nick":"Havvy","message":"ekkis:  Yeah, I understand what the code is doing. Why are you building up the promise chain so dynamically?","date":"2016-07-14T02:53:39.015Z","type":"message"}
{"nick":"peey","date":"2016-07-14T02:54:09.470Z","type":"join"}
{"nick":"JFlash","date":"2016-07-14T02:54:12.722Z","type":"join"}
{"nick":"ekkis","message":"because the number of handlers are dynamic.  if I add one tomorrow it automatically runs, I just need to put it in the right sequence","date":"2016-07-14T02:54:15.457Z","type":"message"}
{"nick":"ekkis","message":"is there a better way?","date":"2016-07-14T02:54:27.224Z","type":"message"}
{"nick":"dandan86","reason":"Ping timeout: 264 seconds","date":"2016-07-14T02:55:04.047Z","type":"quit"}
{"nick":"Havvy","message":"I'd hard-code the list of subfunctions to run personally.","date":"2016-07-14T02:55:12.438Z","type":"message"}
{"nick":"ekkis","message":"why? it's more maintenance","date":"2016-07-14T02:55:23.345Z","type":"message"}
{"nick":"nd__","date":"2016-07-14T02:55:36.332Z","type":"join"}
{"nick":"ekkis","message":"I can just pick them up this way","date":"2016-07-14T02:55:38.111Z","type":"message"}
{"nick":"Havvy","message":"Because it's more readable.","date":"2016-07-14T02:55:45.085Z","type":"message"}
{"nick":"ekkis","message":"so my module is small in functionality","date":"2016-07-14T02:55:47.339Z","type":"message"}
{"nick":"ekkis","message":"ok... but do you see what could be wrong?","date":"2016-07-14T02:56:09.879Z","type":"message"}
{"nick":"ekkis","message":"why would y() run first?","date":"2016-07-14T02:56:16.009Z","type":"message"}
{"nick":"xall","date":"2016-07-14T02:56:29.458Z","type":"join"}
{"nick":"Havvy","message":"Maybe the for loop is looping in an order you didn't expect?","date":"2016-07-14T02:57:38.895Z","type":"message"}
{"nick":"Rodya_","date":"2016-07-14T02:57:45.829Z","type":"join"}
{"nick":"Havvy","message":"console.log(k)","date":"2016-07-14T02:57:46.794Z","type":"message"}
{"nick":"ekkis","message":"I used to do: for (var k in self) self[k](); and that worked fine but now that I'm building the chain it doesn't run in the right order","date":"2016-07-14T02:57:51.828Z","type":"message"}
{"nick":"howdoi","date":"2016-07-14T02:57:58.232Z","type":"join"}
{"nick":"ekkis","message":"no, I've watched it building the chain and it's in the correct order","date":"2016-07-14T02:58:12.653Z","type":"message"}
{"nick":"ekkis","message":"the thing is that once the chain is built, it needs to run and I'm wondering if it starts backwards","date":"2016-07-14T02:58:45.486Z","type":"message"}
{"nick":"ekkis","action":"adds console output...","date":"2016-07-14T02:59:03.467Z","type":"action"}
{"nick":"Rodya_","reason":"Remote host closed the connection","date":"2016-07-14T02:59:06.389Z","type":"quit"}
{"nick":"Havvy","message":"Also, line 4... why not just name the function expression?","date":"2016-07-14T02:59:45.368Z","type":"message"}
{"nick":"anth0ny","date":"2016-07-14T03:00:12.333Z","type":"join"}
{"nick":"Rodya_","date":"2016-07-14T03:00:17.782Z","type":"join"}
{"nick":"Havvy","message":"Also, before ES6, there was no order defined for for-in loops.","date":"2016-07-14T03:00:58.432Z","type":"message"}
{"nick":"Xiti","date":"2016-07-14T03:01:03.240Z","type":"join"}
{"nick":"nd__","reason":"Ping timeout: 276 seconds","date":"2016-07-14T03:01:03.427Z","type":"quit"}
{"nick":"Havvy","message":"I wouldn't go relying on it personally.","date":"2016-07-14T03:01:23.000Z","type":"message"}
{"nick":"tristanp","reason":"Ping timeout: 264 seconds","date":"2016-07-14T03:01:40.077Z","type":"quit"}
{"nick":"d4rklit3","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-07-14T03:02:50.822Z","type":"quit"}
{"nick":"Havvy","message":"[\"x\", \"y\", \"z\"].reduce(function (promise, fnName) { return promise.then(self[fnName]); }, Promise.resolve(undefined));","date":"2016-07-14T03:02:54.184Z","type":"message"}
{"nick":"tristanp","date":"2016-07-14T03:03:03.330Z","type":"join"}
{"nick":"ircer","reason":"Ping timeout: 240 seconds","date":"2016-07-14T03:03:31.374Z","type":"quit"}
{"nick":"ekkis","message":"Havvy: oh... I followed your advice and found something even stranger.  I put the console.log(k) in the loop but also put return console.log('x') (or 'y') at the top of the functions.  what I got was x, x, y, y!","date":"2016-07-14T03:04:12.605Z","type":"message"}
{"nick":"ekkis","message":"which means it's executing the functions at the time I build the .then() chain!","date":"2016-07-14T03:04:29.027Z","type":"message"}
{"nick":"Havvy","message":"Oh.","date":"2016-07-14T03:04:39.115Z","type":"message"}
{"nick":"mich-cook","date":"2016-07-14T03:04:45.722Z","type":"join"}
{"nick":"Havvy","message":"That would mean....","date":"2016-07-14T03:05:04.464Z","type":"message"}
{"nick":"Havvy","message":"It's reading `() => self[k]()` as `(() => self[k])()`?","date":"2016-07-14T03:05:24.656Z","type":"message"}
{"nick":"Havvy","message":"`self[k]` is all you need there anyways.","date":"2016-07-14T03:05:54.479Z","type":"message"}
{"nick":"ekkis","message":"oh... that's possible","date":"2016-07-14T03:05:56.580Z","type":"message"}
{"nick":"DigitalSpeed","reason":"Remote host closed the connection","date":"2016-07-14T03:06:28.436Z","type":"quit"}
{"nick":"ekkis","message":"oh, perhaps you're right and I don't need the ().  I did it that way because the original syntax was () => { return self[k]() }","date":"2016-07-14T03:07:02.181Z","type":"message"}
{"nick":"ekkis","message":"so when I shortened it, it became () => self[k]()","date":"2016-07-14T03:07:19.662Z","type":"message"}
{"nick":"drew7721","reason":"Quit: Leaving","date":"2016-07-14T03:07:44.803Z","type":"quit"}
{"nick":"Havvy","message":"b> (() => console.log(5)())","date":"2016-07-14T03:07:49.500Z","type":"message"}
{"nick":"babelboot","message":"Havvy: (okay) [Function]","date":"2016-07-14T03:07:53.676Z","type":"message"}
{"nick":"Havvy","message":"Oh wait, no.","date":"2016-07-14T03:08:29.033Z","type":"message"}
{"nick":"Havvy","action":"facepalms.","date":"2016-07-14T03:08:31.816Z","type":"action"}
{"nick":"rolandnsharp","reason":"Remote host closed the connection","date":"2016-07-14T03:08:34.576Z","type":"quit"}
{"nick":"Havvy","message":"No wait, that wouldn't be it.","date":"2016-07-14T03:08:48.185Z","type":"message"}
{"nick":"rolandnsharp","date":"2016-07-14T03:08:50.457Z","type":"join"}
{"nick":"ekkis","message":"ok, if I use the longer format it still behaves that way","date":"2016-07-14T03:08:51.084Z","type":"message"}
{"nick":"Havvy","message":"Unless the first function doesn't return a value.","date":"2016-07-14T03:09:06.496Z","type":"message"}
{"nick":"ekkis","message":"so when I do: .then(() => { self[k](); }) it actually runs the function.  at the time the chain is created!","date":"2016-07-14T03:09:30.953Z","type":"message"}
{"nick":"ekkis","message":"does that make any sense?","date":"2016-07-14T03:09:35.918Z","type":"message"}
{"nick":"Havvy","message":"It shouldn't?","date":"2016-07-14T03:09:54.553Z","type":"message"}
{"nick":"ekkis","message":"and it means it's not getting confused about the ()s","date":"2016-07-14T03:10:00.846Z","type":"message"}
{"nick":"ekkis","message":".e. (() => self[k])()","date":"2016-07-14T03:10:16.138Z","type":"message"}
{"nick":"ekkis","message":".e.g.","date":"2016-07-14T03:10:18.944Z","type":"message"}
{"nick":"ekkis","message":"fuck i.e.","date":"2016-07-14T03:10:22.704Z","type":"message"}
{"nick":"ekkis","action":"tests self[k]","date":"2016-07-14T03:10:33.971Z","type":"action"}
{"nick":"heliumcraft","reason":"Quit: Lingo: www.lingoirc.com","date":"2016-07-14T03:10:57.117Z","type":"quit"}
{"nick":"apparition","date":"2016-07-14T03:11:00.946Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2016-07-14T03:11:04.133Z","type":"quit"}
{"nick":"ekkis","message":"though, if I think about it, () => { self[k] } doesn't make much sense","date":"2016-07-14T03:11:30.300Z","type":"message"}
{"nick":"ekkis","message":"what you'll get is a function, not a value, and the function will never be called","date":"2016-07-14T03:11:52.623Z","type":"message"}
{"nick":"Havvy","message":"Right.","date":"2016-07-14T03:12:06.863Z","type":"message"}
{"nick":"Havvy","message":"But it's always a function.","date":"2016-07-14T03:12:16.044Z","type":"message"}
{"nick":"Havvy","message":"And wrapping a function in a function is silly.","date":"2016-07-14T03:12:20.555Z","type":"message"}
{"nick":"ircer","date":"2016-07-14T03:12:24.730Z","type":"join"}
{"nick":"Havvy","message":"So just `self[k]` without the arrow function nonesense.","date":"2016-07-14T03:12:33.854Z","type":"message"}
{"nick":"ekkis","message":"ok, I'm really confused now.  self[k] actually runs","date":"2016-07-14T03:12:56.861Z","type":"message"}
{"nick":"Havvy","message":"In the correct order?","date":"2016-07-14T03:13:22.011Z","type":"message"}
{"nick":"ekkis","message":"yes but .then(self[k]) would be wrong because .then() is expecting a (resolve, reject) signature","date":"2016-07-14T03:13:38.820Z","type":"message"}
{"nick":"jonasen","date":"2016-07-14T03:13:54.198Z","type":"join"}
{"nick":"GreenJello","message":"nope, that's new Promise() only","date":"2016-07-14T03:13:55.646Z","type":"message"}
{"nick":"ekkis","message":"but ok.  my functions have no parameters, so then() will run them","date":"2016-07-14T03:13:58.870Z","type":"message"}
{"nick":"a_thakur","date":"2016-07-14T03:14:02.110Z","type":"join"}
{"nick":"a_thakur","reason":"Read error: Connection reset by peer","date":"2016-07-14T03:14:18.476Z","type":"quit"}
{"nick":"ekkis","message":"no, they're still running in x, x, y, y order","date":"2016-07-14T03:14:18.663Z","type":"message"}
{"nick":"Literphor","reason":"Quit: Literphor","date":"2016-07-14T03:14:33.709Z","type":"quit"}
{"nick":"a_thakur","date":"2016-07-14T03:14:34.529Z","type":"join"}
{"nick":"GreenJello","message":"oh you probably mean .then takes up to two function arguments","date":"2016-07-14T03:14:41.821Z","type":"message"}
{"nick":"ekkis","message":"let me try the shorter syntax .then(self[k])","date":"2016-07-14T03:14:44.005Z","type":"message"}
{"nick":"krauq","reason":"Read error: No route to host","date":"2016-07-14T03:14:49.789Z","type":"quit"}
{"nick":"quark[0]","date":"2016-07-14T03:14:51.316Z","type":"join"}
{"nick":"ekkis","message":"GreenJello: yes, but specific arguments meant to deal with the promise","date":"2016-07-14T03:15:01.786Z","type":"message"}
{"nick":"Utal","date":"2016-07-14T03:15:21.451Z","type":"join"}
{"nick":"ekkis","message":"Havvy: ok .then(self[k]) runs in the same order: x, x, y, y","date":"2016-07-14T03:15:54.650Z","type":"message"}
{"nick":"alphamale93","message":"how do I add ssl to a node.js app?","date":"2016-07-14T03:16:09.282Z","type":"message"}
{"nick":"ekkis","message":"which means it's executing the function at the time I call the .then()","date":"2016-07-14T03:16:11.493Z","type":"message"}
{"nick":"qard-appneta","date":"2016-07-14T03:16:13.679Z","type":"join"}
{"nick":"alphamale93","message":"having trouble finding the most straightforward way","date":"2016-07-14T03:16:14.306Z","type":"message"}
{"nick":"ekkis","action":"will need to figure that out too, soon","date":"2016-07-14T03:16:34.126Z","type":"action"}
{"nick":"Havvy","message":"ekkis:  Alright. So, uh, is `p` every truthy?","date":"2016-07-14T03:16:38.081Z","type":"message"}
{"nick":"Havvy","message":"Oh, and x, x, y, y sounds right for a two fn case?","date":"2016-07-14T03:16:49.804Z","type":"message"}
{"nick":"Havvy","message":"I'd expect `x, X, y, z, Y, Z` (where caps are the actual calls)","date":"2016-07-14T03:17:09.879Z","type":"message"}
{"nick":"ekkis","message":"I would have expected x, y, z, X, Y, Z","date":"2016-07-14T03:17:44.880Z","type":"message"}
{"nick":"jcroasii","message":"within a .catch(err)   is there a way i can console.log  the trace that shows me where in the code the error occurred?","date":"2016-07-14T03:17:50.615Z","type":"message"}
{"nick":"stoneburner","date":"2016-07-14T03:18:00.213Z","type":"join"}
{"nick":"ekkis","message":"truthy? you mean because p ? :","date":"2016-07-14T03:18:04.765Z","type":"message"}
{"nick":"Havvy","message":"ekkis:  `p` starts out undefined. So it does the else case, which calls immediately.","date":"2016-07-14T03:18:33.108Z","type":"message"}
{"nick":"ekkis","message":"hmm... so I should: var p = Promise.resolve();","date":"2016-07-14T03:19:27.926Z","type":"message"}
{"nick":"ekkis","action":"tests","date":"2016-07-14T03:19:35.343Z","type":"action"}
{"nick":"krish203","date":"2016-07-14T03:20:01.723Z","type":"join"}
{"nick":"stonebur_","reason":"Ping timeout: 246 seconds","date":"2016-07-14T03:20:15.110Z","type":"quit"}
{"nick":"Havvy","message":"That would work.","date":"2016-07-14T03:20:35.022Z","type":"message"}
{"nick":"Havvy","message":"You could then remove the conditional logic too.","date":"2016-07-14T03:20:40.156Z","type":"message"}
{"nick":"ekkis","message":"damn it.  wtf?","date":"2016-07-14T03:20:51.699Z","type":"message"}
{"nick":"ekkis","message":"that works","date":"2016-07-14T03:20:53.433Z","type":"message"}
{"nick":"ekkis","message":"yes, much nicer","date":"2016-07-14T03:21:01.254Z","type":"message"}
{"nick":"ekkis","message":"why does it work?","date":"2016-07-14T03:21:06.045Z","type":"message"}
{"nick":"blahfoo","reason":"Ping timeout: 252 seconds","date":"2016-07-14T03:21:28.405Z","type":"quit"}
{"nick":"ekkis","message":"the first call was special and had to return a promise or else the chain couldn't work","date":"2016-07-14T03:21:41.063Z","type":"message"}
{"nick":"ekkis","message":"so it did","date":"2016-07-14T03:21:46.168Z","type":"message"}
{"nick":"Havvy","message":"Because your old code was synchronously calling the first function.","date":"2016-07-14T03:21:50.044Z","type":"message"}
{"nick":"ekkis","message":"ah","date":"2016-07-14T03:21:55.487Z","type":"message"}
{"nick":"ekkis","message":"fuck me","date":"2016-07-14T03:21:58.180Z","type":"message"}
{"nick":"Yoofie","reason":"Ping timeout: 240 seconds","date":"2016-07-14T03:22:04.002Z","type":"quit"}
{"nick":"ekkis","message":"I had: return new Promise.resolve();","date":"2016-07-14T03:22:11.214Z","type":"message"}
{"nick":"ekkis","message":"instead of return Promise.resolve();","date":"2016-07-14T03:22:18.218Z","type":"message"}
{"nick":"Havvy","message":"Yeah...that'd be wrong.","date":"2016-07-14T03:22:29.935Z","type":"message"}
{"nick":"JFlash","reason":"Ping timeout: 260 seconds","date":"2016-07-14T03:22:42.715Z","type":"quit"}
{"nick":"ekkis","message":"yes, it's because originally I was going to do: return new Promise(); but then found out it barfs as it needs a handler","date":"2016-07-14T03:22:55.170Z","type":"message"}
{"nick":"ekkis","message":"and I came across .resolve()","date":"2016-07-14T03:23:03.490Z","type":"message"}
{"nick":"Havvy","message":"So many ways to misuse `new`. :(","date":"2016-07-14T03:23:09.840Z","type":"message"}
{"nick":"ekkis","message":"dude, I owe you a beer","date":"2016-07-14T03:23:11.815Z","type":"message"}
{"nick":"mhernandez1","date":"2016-07-14T03:23:17.483Z","type":"join"}
{"nick":"ekkis","message":"btc address pls","date":"2016-07-14T03:23:20.017Z","type":"message"}
{"nick":"tristanp","reason":"Ping timeout: 246 seconds","date":"2016-07-14T03:23:24.119Z","type":"quit"}
{"nick":"Havvy","message":"I'm not setting up bitcoin for $5. >_>","date":"2016-07-14T03:23:38.474Z","type":"message"}
{"nick":"ekkis","message":"laughing","date":"2016-07-14T03:23:45.535Z","type":"message"}
{"nick":"ekkis","message":"ether?","date":"2016-07-14T03:23:48.030Z","type":"message"}
{"nick":"ekkis","message":"you seriously don't have a btc address???","date":"2016-07-14T03:23:59.787Z","type":"message"}
{"nick":"Havvy","message":"Or those other things.","date":"2016-07-14T03:24:02.696Z","type":"message"}
{"nick":"Havvy","message":"I had a btc address at one point.","date":"2016-07-14T03:24:10.462Z","type":"message"}
{"nick":"ekkis","message":"well, sometimes a beer is a nice way to say thanks than just the words","date":"2016-07-14T03:24:49.764Z","type":"message"}
{"nick":"cuebix-wk","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-07-14T03:24:51.424Z","type":"quit"}
{"nick":"ekkis","message":"but thanks, much obliged","date":"2016-07-14T03:24:57.587Z","type":"message"}
{"nick":"Havvy","message":"(Hint: I don't drink anyways)","date":"2016-07-14T03:25:01.145Z","type":"message"}
{"nick":"ekkis","message":"LoL","date":"2016-07-14T03:25:08.492Z","type":"message"}
{"nick":"ekkis","message":"all right.  then I'm out of luck","date":"2016-07-14T03:25:15.562Z","type":"message"}
{"nick":"Havvy","message":"Go donate the money to a charity.","date":"2016-07-14T03:25:17.440Z","type":"message"}
{"nick":"tristanp","date":"2016-07-14T03:25:19.927Z","type":"join"}
{"nick":"ekkis","message":"how can you not drink?","date":"2016-07-14T03:25:20.667Z","type":"message"}
{"nick":"ekkis","message":"that's inconceivable","date":"2016-07-14T03:25:24.807Z","type":"message"}
{"nick":"Havvy","message":"No. I enjoy myself more when I'm sober.","date":"2016-07-14T03:25:44.377Z","type":"message"}
{"nick":"greydawg1","date":"2016-07-14T03:26:31.102Z","type":"join"}
{"nick":"ekkis","message":"ya.  i can understand that","date":"2016-07-14T03:26:59.065Z","type":"message"}
{"nick":"DeltaHeavy","date":"2016-07-14T03:27:26.329Z","type":"join"}
{"nick":"Narigo","date":"2016-07-14T03:27:26.714Z","type":"join"}
{"nick":"anth0ny","reason":"Quit: anth0ny","date":"2016-07-14T03:28:02.064Z","type":"quit"}
{"nick":"sqram","reason":"Quit: WeeChat 1.5","date":"2016-07-14T03:28:24.440Z","type":"quit"}
{"nick":"treaki_","date":"2016-07-14T03:28:41.407Z","type":"join"}
{"nick":"plutoniix","date":"2016-07-14T03:29:30.215Z","type":"join"}
{"nick":"alphamale93","message":"SSL on node.js app. any tips?","date":"2016-07-14T03:32:05.865Z","type":"message"}
{"nick":"diamonds","reason":"Ping timeout: 246 seconds","date":"2016-07-14T03:32:09.107Z","type":"quit"}
{"nick":"treaki","reason":"Ping timeout: 252 seconds","date":"2016-07-14T03:32:28.431Z","type":"quit"}
{"nick":"idefine","reason":"Remote host closed the connection","date":"2016-07-14T03:33:06.212Z","type":"quit"}
{"nick":"ekkis","message":"alphamale93: have you seen this? http://stackoverflow.com/questions/5998694/how-to-create-an-https-server-in-node-js","date":"2016-07-14T03:33:19.679Z","type":"message"}
{"nick":"abijeet","reason":"Remote host closed the connection","date":"2016-07-14T03:33:24.111Z","type":"quit"}
{"nick":"ekkis","message":"alphamale93: I will need to do this soon too","date":"2016-07-14T03:33:53.129Z","type":"message"}
{"nick":"airtonix","reason":"Remote host closed the connection","date":"2016-07-14T03:34:13.154Z","type":"quit"}
{"nick":"d4rklit3","date":"2016-07-14T03:34:33.848Z","type":"join"}
{"nick":"bumblehead","date":"2016-07-14T03:36:39.359Z","type":"join"}
{"nick":"lsyoyom","reason":"Ping timeout: 250 seconds","date":"2016-07-14T03:36:40.666Z","type":"quit"}
{"nick":"iyogeshjoshi","date":"2016-07-14T03:37:39.045Z","type":"join"}
{"nick":"tristanp","reason":"Ping timeout: 252 seconds","date":"2016-07-14T03:39:37.442Z","type":"quit"}
{"nick":"modernpacifist","message":"alphamale93: If your using express.js or something like it, it should just be a matter of supplying a certificate","date":"2016-07-14T03:40:00.045Z","type":"message"}
{"nick":"sabrehagen","date":"2016-07-14T03:40:27.030Z","type":"join"}
{"nick":"bumblehead","reason":"Ping timeout: 240 seconds","date":"2016-07-14T03:40:51.307Z","type":"quit"}
{"nick":"tristanp","date":"2016-07-14T03:41:09.028Z","type":"join"}
{"nick":"ConspiratorX","date":"2016-07-14T03:41:30.617Z","type":"join"}
{"nick":"soee","date":"2016-07-14T03:42:08.757Z","type":"join"}
{"nick":"timmywil","reason":"Quit: O.o","date":"2016-07-14T03:42:37.441Z","type":"quit"}
{"nick":"iLogic","reason":"Quit: iLogic","date":"2016-07-14T03:42:45.467Z","type":"quit"}
{"nick":"iLogic","date":"2016-07-14T03:43:19.036Z","type":"join"}
{"nick":"ekkis","message":"Havvy: just as a point of curiosity: p.then(self[k]) works, p.then(() => { return self[k](); }) runs x, y, z, Z, Z, Z, p.then(() => self[k]()) runs the same as the previous, p.then(() => self[k]) returns nothing at all and p.then(self[k]) works as expected","date":"2016-07-14T03:43:25.814Z","type":"message"}
{"nick":"ekkis","message":"so I guess my only question is I would have expected the first case to work","date":"2016-07-14T03:43:42.373Z","type":"message"}
{"nick":"ekkis","message":"but it seems like a closure issue","date":"2016-07-14T03:43:56.664Z","type":"message"}
{"nick":"iyogi","date":"2016-07-14T03:43:58.983Z","type":"join"}
{"nick":"p15","reason":"Ping timeout: 250 seconds","date":"2016-07-14T03:44:02.594Z","type":"quit"}
{"nick":"ekkis","message":"k isn't making it into the arrow expression","date":"2016-07-14T03:44:09.639Z","type":"message"}
{"nick":"Havvy","message":"Oh, right...all of your functions are closing over the single variable `k`.","date":"2016-07-14T03:44:19.083Z","type":"message"}
{"nick":"Havvy","message":"And it keeps changing from out under you.","date":"2016-07-14T03:44:24.574Z","type":"message"}
{"nick":"ekkis","message":"but => functions are supposed to avoid the need for closures","date":"2016-07-14T03:44:34.930Z","type":"message"}
{"nick":"blessYahu","reason":"Remote host closed the connection","date":"2016-07-14T03:44:43.045Z","type":"quit"}
{"nick":"Havvy","message":"Arrow functions statically close over `this`, not the other variables.","date":"2016-07-14T03:44:55.540Z","type":"message"}
{"nick":"Havvy","message":"b> var k = 0;  var f1 = () => console.log(k);  k = 1; f1()","date":"2016-07-14T03:45:31.978Z","type":"message"}
{"nick":"Narigo","reason":"Quit: This computer has gone to sleep","date":"2016-07-14T03:45:33.280Z","type":"quit"}
{"nick":"babelboot","message":"Havvy: (okay) 1 undefined","date":"2016-07-14T03:45:36.643Z","type":"message"}
{"nick":"ekkis","message":"oh... so are you saying I could do: p.then(() => { return self[this.k](); })?","date":"2016-07-14T03:45:40.437Z","type":"message"}
{"nick":"Havvy","message":"No.","date":"2016-07-14T03:45:49.741Z","type":"message"}
{"nick":"ekkis","message":"because k is defined within the this of the =>","date":"2016-07-14T03:46:09.333Z","type":"message"}
{"nick":"devc","reason":"Quit: bang bang; my baby shot me down","date":"2016-07-14T03:46:09.727Z","type":"quit"}
{"nick":"Utal","reason":"Ping timeout: 240 seconds","date":"2016-07-14T03:46:11.467Z","type":"quit"}
{"nick":"Havvy","message":"That would use the `k` property on `this`.","date":"2016-07-14T03:46:43.681Z","type":"message"}
{"nick":"ljharb","message":"`this[k]` maybe","date":"2016-07-14T03:46:46.012Z","type":"message"}
{"nick":"Havvy","message":"ljharb:  Even then, no.","date":"2016-07-14T03:46:58.002Z","type":"message"}
{"nick":"iyogeshjoshi","reason":"Ping timeout: 264 seconds","date":"2016-07-14T03:47:16.030Z","type":"quit"}
{"nick":"ljharb","message":"yeah i dunno the context :-p","date":"2016-07-14T03:47:16.910Z","type":"message"}
{"nick":"Havvy","message":"Because it's `for (var k in self) { }","date":"2016-07-14T03:47:18.477Z","type":"message"}
{"nick":"ljharb","message":"but using \"self\" is an antipattern where arrow functions are available.","date":"2016-07-14T03:47:29.294Z","type":"message"}
{"nick":"ljharb","message":"and for..in is always an antipattern.","date":"2016-07-14T03:47:34.483Z","type":"message"}
{"nick":"geofflan","date":"2016-07-14T03:47:44.009Z","type":"join"}
{"nick":"Sixmsj","reason":"Ping timeout: 276 seconds","date":"2016-07-14T03:47:51.731Z","type":"quit"}
{"nick":"Havvy","message":"ekkis:  Object.keys(self).forEach(function (k) { self[k]; })","date":"2016-07-14T03:47:57.591Z","type":"message"}
{"nick":"ekkis","message":"but for() has its own scope right? so k is not defined at the level of this","date":"2016-07-14T03:48:03.393Z","type":"message"}
{"nick":"Havvy","message":"ljharb:  `self` is literally the function being called.","date":"2016-07-14T03:48:04.360Z","type":"message"}
{"nick":"ljharb","message":"oh","date":"2016-07-14T03:48:06.796Z","type":"message"}
{"nick":"ljharb","message":"that's weird.","date":"2016-07-14T03:48:09.209Z","type":"message"}
{"nick":"ljharb","message":"\"self\" is a very weird name for a function.","date":"2016-07-14T03:48:17.648Z","type":"message"}
{"nick":"ljharb","message":"ekkis: no, loops don't have their own scope.","date":"2016-07-14T03:48:24.543Z","type":"message"}
{"nick":"Sixmsj","date":"2016-07-14T03:48:28.075Z","type":"join"}
{"nick":"Havvy","message":"ljharb:  It's defined as `var self = argument.callee;`","date":"2016-07-14T03:48:28.595Z","type":"message"}
{"nick":"ljharb","message":"omg wat","date":"2016-07-14T03:48:33.578Z","type":"message"}
{"nick":"ljharb","message":"arguments.callee is deprecated and removed in strict mode. never use it.","date":"2016-07-14T03:48:41.229Z","type":"message"}
{"nick":"Havvy","message":"(I don't know why.)","date":"2016-07-14T03:48:42.518Z","type":"message"}
{"nick":"mhernandez1","reason":"Ping timeout: 272 seconds","date":"2016-07-14T03:48:50.171Z","type":"quit"}
{"nick":"Havvy","message":"It should just be `init: function init () { ...` and `init[k]`","date":"2016-07-14T03:49:08.660Z","type":"message"}
{"nick":"ljharb","message":"or `init() { }`","date":"2016-07-14T03:49:30.748Z","type":"message"}
{"nick":"konobi","message":"there are very few valid reasons to use argument.callee (though there are a few)","date":"2016-07-14T03:49:35.306Z","type":"message"}
{"nick":"anth0ny","date":"2016-07-14T03:49:41.222Z","type":"join"}
{"nick":"Havvy","message":"konobi:  I've not seen a valid usage?","date":"2016-07-14T03:49:50.535Z","type":"message"}
{"nick":"konobi","message":"it's solved now with Symbol","date":"2016-07-14T03:50:03.846Z","type":"message"}
{"nick":"Havvy","message":"And before Symbol?","date":"2016-07-14T03:50:22.001Z","type":"message"}
{"nick":"ljharb","message":"konobi: what use cases?","date":"2016-07-14T03:50:27.319Z","type":"message"}
{"nick":"ljharb","message":"i'm not aware of any.","date":"2016-07-14T03:50:29.162Z","type":"message"}
{"nick":"dandan86","date":"2016-07-14T03:50:42.278Z","type":"join"}
{"nick":"konobi","message":"lemme try to remember","date":"2016-07-14T03:50:45.251Z","type":"message"}
{"nick":"GreenJello","message":"it was useful when you couldn't do var f = function foo(){ foo() }","date":"2016-07-14T03:51:10.827Z","type":"message"}
{"nick":"GreenJello","message":"which was es3?","date":"2016-07-14T03:51:31.078Z","type":"message"}
{"nick":"ljharb","message":"why couldn't you do that?","date":"2016-07-14T03:51:31.266Z","type":"message"}
{"nick":"GreenJello","message":"it wasn't valid syntax in some version of js","date":"2016-07-14T03:52:00.984Z","type":"message"}
{"nick":"ljharb","message":"hm","date":"2016-07-14T03:52:07.902Z","type":"message"}
{"nick":"ljharb","message":"ok - well in that case, recursion is gross anyways :-p","date":"2016-07-14T03:52:16.510Z","type":"message"}
{"nick":"GreenJello","message":"well it could be used for recursive setTimeout, for example","date":"2016-07-14T03:52:42.791Z","type":"message"}
{"nick":"ljharb","message":"i'm still not sure where that wasn't valid","date":"2016-07-14T03:52:54.399Z","type":"message"}
{"nick":"Doginal","date":"2016-07-14T03:52:58.562Z","type":"join"}
{"nick":"ljharb","message":"afaik it works fine in ES3 too.","date":"2016-07-14T03:53:01.554Z","type":"message"}
{"nick":"anth0ny","reason":"Client Quit","date":"2016-07-14T03:53:16.143Z","type":"quit"}
{"nick":"konobi","message":"bah, i can't quite remember, but it was to do with dynamically generating curried functions that would work as methods/properties on an object that it was bound to","date":"2016-07-14T03:53:48.254Z","type":"message"}
{"nick":"ch9rl3s","date":"2016-07-14T03:54:03.123Z","type":"join"}
{"nick":"d4rklit3","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-07-14T03:54:04.499Z","type":"quit"}
{"nick":"ljharb","message":"that sounds like eval","date":"2016-07-14T03:54:20.184Z","type":"message"}
{"nick":"ekkis","message":"ljharb, Havvy: this is old code.  I rely on the following pattern: var self = { init: function() { var self = arguments.callee; for (var k in self) self[k](); } }; and then I can do: self.init.section1 = function() {}; self.init.section2 = function() {};","date":"2016-07-14T03:54:43.249Z","type":"message"}
{"nick":"quark[0]","reason":"Ping timeout: 276 seconds","date":"2016-07-14T03:55:00.304Z","type":"quit"}
{"nick":"ljharb","message":"ekkis: so update the code.","date":"2016-07-14T03:55:09.389Z","type":"message"}
{"nick":"ekkis","message":"if you guys can suggest a cleaner pattern, I'd be happy for it but this works","date":"2016-07-14T03:55:12.275Z","type":"message"}
{"nick":"sabrehagen","reason":"Quit: Leaving.","date":"2016-07-14T03:55:12.720Z","type":"quit"}
{"nick":"Havvy","message":"init: function self() {","date":"2016-07-14T03:55:23.812Z","type":"message"}
{"nick":"tristanp","reason":"Ping timeout: 252 seconds","date":"2016-07-14T03:55:34.567Z","type":"quit"}
{"nick":"ljharb","message":"ekkis: i'm confused what \"init\" is meant to do","date":"2016-07-14T03:55:35.663Z","type":"message"}
{"nick":"dandan86","reason":"Ping timeout: 264 seconds","date":"2016-07-14T03:55:40.023Z","type":"quit"}
{"nick":"Havvy","message":"ljharb:  It's supposed to do some initialization.","date":"2016-07-14T03:55:47.114Z","type":"message"}
{"nick":"ekkis","message":"self.init() will run all the sections","date":"2016-07-14T03:55:59.673Z","type":"message"}
{"nick":"ljharb","message":"ekkis: hardcode them.","date":"2016-07-14T03:56:13.798Z","type":"message"}
{"nick":"ekkis","message":"no way","date":"2016-07-14T03:56:18.938Z","type":"message"}
{"nick":"anth0ny","date":"2016-07-14T03:56:20.191Z","type":"join"}
{"nick":"GreenJello","message":"if I'm reading that correctly, the init function will have own properties that are other functions?","date":"2016-07-14T03:56:21.352Z","type":"message"}
{"nick":"GreenJello","message":"weird","date":"2016-07-14T03:56:22.267Z","type":"message"}
{"nick":"ekkis","message":"why would I do such a thing?","date":"2016-07-14T03:56:25.129Z","type":"message"}
{"nick":"ljharb","message":"ekkis: or, use Object.keys. but in no case do you need arguments.callee or a loop.","date":"2016-07-14T03:56:25.402Z","type":"message"}
{"nick":"Havvy","message":"GreenJello:  Yes.","date":"2016-07-14T03:56:26.769Z","type":"message"}
{"nick":"ekkis","message":"GreenJello: yes","date":"2016-07-14T03:56:33.822Z","type":"message"}
{"nick":"ljharb","message":"ekkis: because the current way is excessive dynamism, which is far worse.","date":"2016-07-14T03:56:36.744Z","type":"message"}
{"nick":"tristanp","date":"2016-07-14T03:56:36.931Z","type":"join"}
{"nick":"ljharb","message":"ekkis: but also yeah, don't put properties on \"init\"","date":"2016-07-14T03:56:43.926Z","type":"message"}
{"nick":"GreenJello","message":"ekkis, put the functions in an array","date":"2016-07-14T03:57:00.284Z","type":"message"}
{"nick":"Havvy","action":"doesn't see a problem with having them on `init` on its own.","date":"2016-07-14T03:57:04.296Z","type":"action"}
{"nick":"ljharb","message":"^","date":"2016-07-14T03:57:05.516Z","type":"message"}
{"nick":"ljharb","message":"functions shouldn't generally have properties.","date":"2016-07-14T03:57:07.938Z","type":"message"}
{"nick":"ekkis","message":"ljharb: it means that tomorrow I can add a section or remove one and I don't need to maintain anything else","date":"2016-07-14T03:57:10.412Z","type":"message"}
{"nick":"ljharb","message":"ekkis: ok put the functions in an array then.","date":"2016-07-14T03:57:19.907Z","type":"message"}
{"nick":"ljharb","message":"but don't stick them as properties on init, that's weird.","date":"2016-07-14T03:57:29.551Z","type":"message"}
{"nick":"konobi","message":"ljharb: it was again specifically related to the name used. I discussed it with brendan in person and he agreed that it was probably the only valid usecase he'd heard of. but he told me it wasn't going to be an issue in the future.","date":"2016-07-14T03:58:13.221Z","type":"message"}
{"nick":"ekkis","message":"GreenJello: yes, an array of functions would be ok too but I thought that hanging them off the init function was pretty cool, since it has no other attributes and it allows me to write self.init.sectionX = function() {} which is pretty easy to understand","date":"2016-07-14T03:58:20.394Z","type":"message"}
{"nick":"ljharb","message":"konobi: i'd love to see a code example for it.","date":"2016-07-14T03:58:31.780Z","type":"message"}
{"nick":"mich-cook","reason":"Quit: Leaving.","date":"2016-07-14T03:58:42.176Z","type":"quit"}
{"nick":"ljharb","message":"ekkis: it makes those functions externally accessible tho. which you don't want.","date":"2016-07-14T03:58:47.977Z","type":"message"}
{"nick":"ekkis","message":"ljharb: what would I use Object.keys on?","date":"2016-07-14T03:58:59.991Z","type":"message"}
{"nick":"Havvy","message":"ekkis:  Object.keys(init)","date":"2016-07-14T03:59:12.072Z","type":"message"}
{"nick":"GreenJello","message":"also this code would break with some polyfills I think","date":"2016-07-14T03:59:24.633Z","type":"message"}
{"nick":"Havvy","message":"Gives you an array of the enumerable properties on your function, which would only be the ones you added.","date":"2016-07-14T03:59:25.735Z","type":"message"}
{"nick":"hugominari","reason":"Remote host closed the connection","date":"2016-07-14T03:59:46.798Z","type":"quit"}
{"nick":"GreenJello","message":"specifically in IE8","date":"2016-07-14T03:59:48.453Z","type":"message"}
{"nick":"WebSpirit","reason":"Read error: Connection reset by peer","date":"2016-07-14T04:00:07.108Z","type":"quit"}
{"nick":"ljharb","message":"GreenJello: which?","date":"2016-07-14T04:00:11.019Z","type":"message"}
{"nick":"ekkis","message":"ljharb: actually, I do want that, it's one of the reasons why I built it that way","date":"2016-07-14T04:00:26.217Z","type":"message"}
{"nick":"GreenJello","message":"ljharb, for..in on a function would return F.p.bind, etc.","date":"2016-07-14T04:00:33.029Z","type":"message"}
{"nick":"qard-appneta","reason":"Quit: (╯°□°）╯︵ pɹɐb","date":"2016-07-14T04:00:35.837Z","type":"quit"}
{"nick":"GreenJello","message":"in es3","date":"2016-07-14T04:00:39.646Z","type":"message"}
{"nick":"diogogmt","reason":"Quit: diogogmt","date":"2016-07-14T04:00:40.215Z","type":"quit"}
{"nick":"ekkis","message":"Havvy: yeah, Object.keys(init) would work too","date":"2016-07-14T04:00:43.385Z","type":"message"}
{"nick":"GreenJello","message":"not that IE8 is super important these days","date":"2016-07-14T04:00:59.558Z","type":"message"}
{"nick":"ljharb","message":"ekkis: then expose a function that returns the array.","date":"2016-07-14T04:01:07.184Z","type":"message"}
{"nick":"Havvy","message":"But everybody else in here (self included) thinks your initialization strategy is bad.","date":"2016-07-14T04:01:10.712Z","type":"message"}
{"nick":"ljharb","message":"GreenJello: ah, true.","date":"2016-07-14T04:01:16.602Z","type":"message"}
{"nick":"ekkis","message":"why is it bad?","date":"2016-07-14T04:01:38.439Z","type":"message"}
{"nick":"qard-appneta","date":"2016-07-14T04:01:43.207Z","type":"join"}
{"nick":"ekkis","message":"why am I not supposed to put properties on a function?","date":"2016-07-14T04:01:48.426Z","type":"message"}
{"nick":"ekkis","message":"if I can do it, why not? it's clean","date":"2016-07-14T04:01:55.099Z","type":"message"}
{"nick":"modernpacifist","message":"GreenJello: You say that and I believed that. But one of our guys went to demo our product to some...not so technical people. One had a gaalxy S3 mini with a default browser called \"Browser\" that didn't even have CSS3 and was running Android 4.1 something","date":"2016-07-14T04:01:56.293Z","type":"message"}
{"nick":"ljharb","message":"ekkis: you \"can\" use eval too. \"can\" never justifies \"should\".","date":"2016-07-14T04:02:03.656Z","type":"message"}
{"nick":"modernpacifist","message":"GreenJello: Another arrived with a flip phone","date":"2016-07-14T04:02:14.342Z","type":"message"}
{"nick":"ljharb","message":"modernpacifist: old android is far worse than old IE.","date":"2016-07-14T04:02:16.537Z","type":"message"}
{"nick":"ekkis","message":"ljharb: ok, I take your point but it doesn't answer my question","date":"2016-07-14T04:02:27.010Z","type":"message"}
{"nick":"ljharb","message":"modernpacifist: but also, if they have a flip phone, they don't count. nobody with a flip phone is spending money on the internet.","date":"2016-07-14T04:02:28.157Z","type":"message"}
{"nick":"ljharb","message":"ekkis: we're saying it's not clean. overuse of reflection and dynamism is not clean.","date":"2016-07-14T04:02:44.040Z","type":"message"}
{"nick":"modernpacifist","message":"ljharb: Oh I know. Its just...unreal","date":"2016-07-14T04:02:47.338Z","type":"message"}
{"nick":"ljharb","message":"ekkis: hardcoding things is often much cleaner.","date":"2016-07-14T04:02:55.033Z","type":"message"}
{"nick":"ekkis","message":"it's also more work","date":"2016-07-14T04:03:05.993Z","type":"message"}
{"nick":"Havvy","message":"Doing the right thing is often more work.","date":"2016-07-14T04:03:15.558Z","type":"message"}
{"nick":"ekkis","message":"more places to maintain","date":"2016-07-14T04:03:16.176Z","type":"message"}
{"nick":"ekkis","message":"sometimes, true","date":"2016-07-14T04:03:23.950Z","type":"message"}
{"nick":"Havvy","message":"But in the end, it's less work to continue working on it.","date":"2016-07-14T04:03:25.581Z","type":"message"}
{"nick":"iLogic","reason":"Quit: iLogic","date":"2016-07-14T04:03:37.495Z","type":"quit"}
{"nick":"GreenJello","message":"do the simple thing, even if it's less \"cool\"","date":"2016-07-14T04:03:51.828Z","type":"message"}
{"nick":"ljharb","message":"ekkis: it's more work up front. less later. and \"later\" is always billions of times more important than \"now\".","date":"2016-07-14T04:04:04.616Z","type":"message"}
{"nick":"ljharb","message":"you read code MUCH more than you write it. never optimize for writing less.","date":"2016-07-14T04:04:16.095Z","type":"message"}
{"nick":"waz","date":"2016-07-14T04:06:19.500Z","type":"join"}
{"nick":"Sixmsj","reason":"Ping timeout: 240 seconds","date":"2016-07-14T04:07:34.003Z","type":"quit"}
{"nick":"MauveDog","date":"2016-07-14T04:07:57.035Z","type":"join"}
{"nick":"ekkis","message":"interesting thought","date":"2016-07-14T04:09:23.264Z","type":"message"}
{"nick":"ekkis","message":"ok guys, thanks for the help","date":"2016-07-14T04:09:34.618Z","type":"message"}
{"nick":"ircer","reason":"Ping timeout: 249 seconds","date":"2016-07-14T04:10:28.587Z","type":"quit"}
{"nick":"_2E0PGS","reason":"Quit: Leaving","date":"2016-07-14T04:11:36.603Z","type":"quit"}
{"nick":"ConspiratorX","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-07-14T04:11:46.495Z","type":"quit"}
{"nick":"qard-appneta","reason":"Quit: (╯°□°）╯︵ pɹɐb","date":"2016-07-14T04:12:23.547Z","type":"quit"}
{"nick":"qard-appneta","date":"2016-07-14T04:14:15.573Z","type":"join"}
{"nick":"Doginal","reason":"Quit: Doginal","date":"2016-07-14T04:14:42.381Z","type":"quit"}
{"nick":"dunpeal","reason":"Ping timeout: 264 seconds","date":"2016-07-14T04:15:28.052Z","type":"quit"}
{"nick":"anth0ny","reason":"Quit: anth0ny","date":"2016-07-14T04:16:38.653Z","type":"quit"}
{"nick":"krish203","reason":"Quit: Leaving.","date":"2016-07-14T04:17:36.189Z","type":"quit"}
{"nick":"subhojit777","date":"2016-07-14T04:19:40.291Z","type":"join"}
{"nick":"waz","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-07-14T04:19:54.661Z","type":"quit"}
{"nick":"Poeticode","reason":"Ping timeout: 276 seconds","date":"2016-07-14T04:23:36.676Z","type":"quit"}
{"nick":"alphamale93","reason":"Ping timeout: 276 seconds","date":"2016-07-14T04:26:51.695Z","type":"quit"}
{"nick":"niemal_","reason":"Read error: Connection reset by peer","date":"2016-07-14T04:27:22.092Z","type":"quit"}
{"nick":"MauveDog","reason":"Remote host closed the connection","date":"2016-07-14T04:29:07.785Z","type":"quit"}
{"nick":"b0x","date":"2016-07-14T04:29:24.410Z","type":"join"}
{"nick":"konobi","message":"anyone know of any context-aware tcp proxies on npm?","date":"2016-07-14T04:33:04.183Z","type":"message"}
{"nick":"alphamale93","date":"2016-07-14T04:33:04.548Z","type":"join"}
{"nick":"konobi","message":"nightmare to search for","date":"2016-07-14T04:33:16.842Z","type":"message"}
{"nick":"idefine","date":"2016-07-14T04:33:36.775Z","type":"join"}
{"nick":"d4rklit3","date":"2016-07-14T04:34:29.075Z","type":"join"}
{"nick":"eya","reason":"Remote host closed the connection","date":"2016-07-14T04:34:56.253Z","type":"quit"}
{"nick":"tristanp_","date":"2016-07-14T04:34:56.951Z","type":"join"}
{"nick":"tristanp","reason":"Ping timeout: 252 seconds","date":"2016-07-14T04:35:10.576Z","type":"quit"}
{"nick":"eya","date":"2016-07-14T04:35:32.856Z","type":"join"}
{"nick":"mrogne","date":"2016-07-14T04:35:45.844Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 276 seconds","date":"2016-07-14T04:35:57.680Z","type":"quit"}
{"nick":"qard-appneta","reason":"Quit: (╯°□°）╯︵ pɹɐb","date":"2016-07-14T04:37:06.919Z","type":"quit"}
{"nick":"eya","reason":"Read error: Connection reset by peer","date":"2016-07-14T04:38:09.886Z","type":"quit"}
{"nick":"BeerLover","date":"2016-07-14T04:38:17.283Z","type":"join"}
{"nick":"idefine","reason":"Ping timeout: 250 seconds","date":"2016-07-14T04:38:38.454Z","type":"quit"}
{"nick":"eya","date":"2016-07-14T04:38:54.566Z","type":"join"}
{"nick":"BobGneu","date":"2016-07-14T04:39:30.624Z","type":"join"}
{"nick":"BeerLover","message":"I am using knexjs with postgres and doing the following.... I created an endpoint to post users.... if a user already exists, i return 409, else i make a transaction - create user and then create an otp entry...","date":"2016-07-14T04:39:33.977Z","type":"message"}
{"nick":"eya","reason":"Read error: Connection reset by peer","date":"2016-07-14T04:39:54.415Z","type":"quit"}
{"nick":"BeerLover","message":"but the check doesn't work, and i now have 50+ users with same credentials","date":"2016-07-14T04:40:01.529Z","type":"message"}
{"nick":"BeerLover","message":"https://dpaste.de/6SpG","date":"2016-07-14T04:40:02.749Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2016-07-14T04:40:04.067Z","type":"quit"}
{"nick":"mrogne","reason":"\"Textual IRC Client: www.textualapp.com\"","date":"2016-07-14T04:40:13.573Z","type":"part"}
{"nick":"BeerLover","message":"also, i can see in my console \"a promise was created but didn't return\"","date":"2016-07-14T04:40:27.079Z","type":"message"}
{"nick":"eya","date":"2016-07-14T04:40:32.503Z","type":"join"}
{"nick":"tvw","date":"2016-07-14T04:40:50.045Z","type":"join"}
{"nick":"pingupingu","reason":"Quit: Leaving","date":"2016-07-14T04:41:32.663Z","type":"quit"}
{"nick":"eya","reason":"Read error: Connection reset by peer","date":"2016-07-14T04:41:42.585Z","type":"quit"}
{"nick":"Cabanossi","date":"2016-07-14T04:41:48.702Z","type":"join"}
{"nick":"eya","date":"2016-07-14T04:42:05.344Z","type":"join"}
{"nick":"eya","reason":"Read error: Connection reset by peer","date":"2016-07-14T04:43:18.936Z","type":"quit"}
{"nick":"Literphor","date":"2016-07-14T04:43:50.108Z","type":"join"}
{"nick":"eya","date":"2016-07-14T04:43:57.068Z","type":"join"}
{"nick":"eya","reason":"Read error: Connection reset by peer","date":"2016-07-14T04:45:00.455Z","type":"quit"}
{"nick":"mhernandez1","date":"2016-07-14T04:45:23.568Z","type":"join"}
{"nick":"eya","date":"2016-07-14T04:45:30.020Z","type":"join"}
{"nick":"shouvik","date":"2016-07-14T04:46:01.533Z","type":"join"}
{"nick":"eya","reason":"Read error: Connection reset by peer","date":"2016-07-14T04:46:41.754Z","type":"quit"}
{"nick":"eya","date":"2016-07-14T04:47:07.856Z","type":"join"}
{"nick":"Literphor","reason":"Client Quit","date":"2016-07-14T04:47:34.202Z","type":"quit"}
{"nick":"chevett","reason":"Ping timeout: 276 seconds","date":"2016-07-14T04:47:39.347Z","type":"quit"}
{"nick":"BeerLover","message":"anyone here?","date":"2016-07-14T04:48:18.415Z","type":"message"}
{"nick":"alphamale93","reason":"Quit: alphamale93","date":"2016-07-14T04:49:52.077Z","type":"quit"}
{"nick":"Anupkumar","date":"2016-07-14T04:50:05.087Z","type":"join"}
{"nick":"Anupkumar","date":"2016-07-14T04:50:34.528Z","type":"part"}
{"nick":"shouvik","reason":"Remote host closed the connection","date":"2016-07-14T04:51:20.615Z","type":"quit"}
{"nick":"dandan86","date":"2016-07-14T04:51:26.280Z","type":"join"}
{"nick":"Narigo","date":"2016-07-14T04:52:39.324Z","type":"join"}
{"nick":"shouvik","date":"2016-07-14T04:55:02.021Z","type":"join"}
{"nick":"ekkis","message":"BeerLover: I'm not here","date":"2016-07-14T04:55:07.559Z","type":"message"}
{"nick":"Flaim","message":"nobody's here","date":"2016-07-14T04:55:31.594Z","type":"message"}
{"nick":"ekkis","action":"looks","date":"2016-07-14T04:56:03.711Z","type":"action"}
{"nick":"dandan86","reason":"Ping timeout: 264 seconds","date":"2016-07-14T04:56:16.039Z","type":"quit"}
{"nick":"the_ant1","date":"2016-07-14T04:56:54.736Z","type":"join"}
{"nick":"evilbug","message":"why does '/' path have to be last or else other paths won't resolve to their respective views?","date":"2016-07-14T04:57:02.977Z","type":"message"}
{"nick":"evilbug","message":"at least for express.","date":"2016-07-14T04:57:16.204Z","type":"message"}
{"nick":"BeerLover","message":"https://dpaste.de/6SpG","date":"2016-07-14T04:57:23.563Z","type":"message"}
{"nick":"the_ant","reason":"Ping timeout: 276 seconds","date":"2016-07-14T04:57:24.368Z","type":"quit"}
{"nick":"the_ant1","new_nick":"the_ant","date":"2016-07-14T04:57:24.680Z","type":"nick"}
{"nick":"Flaim","message":"evilbug: cuz if it's first it'll match everything..","date":"2016-07-14T04:57:48.836Z","type":"message"}
{"nick":"ekkis","message":"BeerLover: you can't just return in line 24","date":"2016-07-14T04:57:50.004Z","type":"message"}
{"nick":"ekkis","message":"you need to send that back to the client","date":"2016-07-14T04:57:55.706Z","type":"message"}
{"nick":"ekkis","message":"res.send() type of thing","date":"2016-07-14T04:58:03.319Z","type":"message"}
{"nick":"evilbug","message":"Flaim: but isn't there a difference between / and /*?","date":"2016-07-14T04:58:15.139Z","type":"message"}
{"nick":"ekkis","message":"evilbug: because they're evaluated in the order you create them","date":"2016-07-14T04:58:33.916Z","type":"message"}
{"nick":"Abhishek_","date":"2016-07-14T04:58:47.449Z","type":"join"}
{"nick":"BeerLover","message":"ekkis: error._409 is a function that returns res.send","date":"2016-07-14T04:58:49.180Z","type":"message"}
{"nick":"evilbug","message":"ok, i just thought /* would resolve to any route where as / would be specifically index.","date":"2016-07-14T04:58:56.408Z","type":"message"}
{"nick":"ekkis","message":"BeerLover: what is the sound of count?","date":"2016-07-14T04:58:57.307Z","type":"message"}
{"nick":"idefine","date":"2016-07-14T04:58:58.651Z","type":"join"}
{"nick":"BeerLover","message":"it doesn't make any","date":"2016-07-14T04:59:08.094Z","type":"message"}
{"nick":"ekkis","message":"ah, ok","date":"2016-07-14T04:59:08.988Z","type":"message"}
{"nick":"BeerLover","message":"actually the count is 50+","date":"2016-07-14T04:59:18.065Z","type":"message"}
{"nick":"ekkis","message":"sorry, value of count","date":"2016-07-14T04:59:21.248Z","type":"message"}
{"nick":"ekkis","message":"yes but is that the value as shows up in line 23?","date":"2016-07-14T04:59:42.427Z","type":"message"}
{"nick":"ekkis","message":"evilbug: I believe it's a regex","date":"2016-07-14T05:00:22.132Z","type":"message"}
{"nick":"ekkis","message":"sort of","date":"2016-07-14T05:00:27.643Z","type":"message"}
{"nick":"BeerLover","message":"okay wait","date":"2016-07-14T05:00:49.898Z","type":"message"}
{"nick":"evilbug","message":"ekkis: right. i'm not used to express routes, been using react and laravel where / specifically resolves to index.","date":"2016-07-14T05:01:39.177Z","type":"message"}
{"nick":"d5sx43","date":"2016-07-14T05:02:06.506Z","type":"join"}
{"nick":"boogyman","date":"2016-07-14T05:02:06.784Z","type":"join"}
{"nick":"dodobrain","reason":"Ping timeout: 264 seconds","date":"2016-07-14T05:02:16.028Z","type":"quit"}
{"nick":"BeerLover","message":"ekkis: [ anonymous { count: '26' } ]","date":"2016-07-14T05:02:33.745Z","type":"message"}
{"nick":"ekkis","message":"it's not exactly a regex.  /* would match a / zero or more times but instead it matches anything preceded by a slash","date":"2016-07-14T05:02:46.303Z","type":"message"}
{"nick":"BeerLover","message":"it wasn't like this before.....","date":"2016-07-14T05:02:51.635Z","type":"message"}
{"nick":"ekkis","message":"it should have been /.*","date":"2016-07-14T05:02:53.653Z","type":"message"}
{"nick":"OnBrokenWings","date":"2016-07-14T05:03:13.545Z","type":"join"}
{"nick":"idefine","reason":"Ping timeout: 250 seconds","date":"2016-07-14T05:03:20.405Z","type":"quit"}
{"nick":"ekkis","message":"BeerLover: I don't know the postgres library but obviously it doesn't just return a scalar","date":"2016-07-14T05:03:58.364Z","type":"message"}
{"nick":"evilbug","message":"ekkis: weird but ok, thanks.","date":"2016-07-14T05:04:14.295Z","type":"message"}
{"nick":"sliter","reason":"Ping timeout: 276 seconds","date":"2016-07-14T05:04:33.677Z","type":"quit"}
{"nick":"ekkis","message":"evilbug: you'll need to read up on it.  I read it and promptly forgot it","date":"2016-07-14T05:04:38.308Z","type":"message"}
{"nick":"Mia","reason":"Read error: Connection reset by peer","date":"2016-07-14T05:05:02.116Z","type":"quit"}
{"nick":"platonic","reason":"Remote host closed the connection","date":"2016-07-14T05:05:34.501Z","type":"quit"}
{"nick":"evilbug","message":"ekkis: sure, no worries. just got confused earlier why all of my routes would resolve to index by / being first.","date":"2016-07-14T05:05:40.581Z","type":"message"}
{"nick":"iyogi","reason":"Remote host closed the connection","date":"2016-07-14T05:05:46.953Z","type":"quit"}
{"nick":"tfennelly","date":"2016-07-14T05:05:53.372Z","type":"join"}
{"nick":"iyogeshjoshi","date":"2016-07-14T05:06:26.442Z","type":"join"}
{"nick":"ekkis","message":"evilbug: the router in MVC does the same, it's in order of declaration","date":"2016-07-14T05:06:27.040Z","type":"message"}
{"nick":"OnBrokenWings","reason":"Client Quit","date":"2016-07-14T05:06:35.907Z","type":"quit"}
{"nick":"ircer","date":"2016-07-14T05:06:44.740Z","type":"join"}
{"nick":"NeverDie","reason":"Quit: http://radiux.io/","date":"2016-07-14T05:06:54.391Z","type":"quit"}
{"nick":"smccarthy","reason":"Remote host closed the connection","date":"2016-07-14T05:07:30.489Z","type":"quit"}
{"nick":"ekkis","reason":"Quit: This computer has gone to sleep","date":"2016-07-14T05:07:48.164Z","type":"quit"}
{"nick":"smccarthy","date":"2016-07-14T05:08:04.528Z","type":"join"}
{"nick":"mhernandez1","reason":"Ping timeout: 244 seconds","date":"2016-07-14T05:08:30.004Z","type":"quit"}
{"nick":"tfennelly","reason":"Ping timeout: 246 seconds","date":"2016-07-14T05:10:30.102Z","type":"quit"}
{"nick":"iyogeshjoshi","reason":"Ping timeout: 252 seconds","date":"2016-07-14T05:11:28.427Z","type":"quit"}
{"nick":"xnite","reason":"Ping timeout: 258 seconds","date":"2016-07-14T05:12:28.261Z","type":"quit"}
{"nick":"ypqqq","date":"2016-07-14T05:12:38.102Z","type":"join"}
{"nick":"RobertLaptop","reason":"Ping timeout: 258 seconds","date":"2016-07-14T05:12:51.250Z","type":"quit"}
{"nick":"RobertLaptop","date":"2016-07-14T05:13:12.709Z","type":"join"}
{"nick":"Cohedrin","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-07-14T05:13:14.126Z","type":"quit"}
{"nick":"xnite","date":"2016-07-14T05:13:48.720Z","type":"join"}
{"nick":"ircer","reason":"Ping timeout: 260 seconds","date":"2016-07-14T05:14:07.726Z","type":"quit"}
{"nick":"lpin","date":"2016-07-14T05:15:17.560Z","type":"join"}
{"nick":"LambdaSource","date":"2016-07-14T05:17:08.621Z","type":"join"}
{"nick":"christo_m","reason":"Ping timeout: 250 seconds","date":"2016-07-14T05:17:12.411Z","type":"quit"}
{"nick":"GustavoLapasta","date":"2016-07-14T05:18:21.726Z","type":"join"}
{"nick":"aredridel","reason":"Ping timeout: 244 seconds","date":"2016-07-14T05:18:39.111Z","type":"quit"}
{"nick":"OnBrokenWings","date":"2016-07-14T05:19:18.187Z","type":"join"}
{"nick":"LambdaSource","reason":"Client Quit","date":"2016-07-14T05:19:44.709Z","type":"quit"}
{"nick":"MauveDog","date":"2016-07-14T05:20:11.329Z","type":"join"}
{"nick":"xrash","reason":"Remote host closed the connection","date":"2016-07-14T05:22:40.977Z","type":"quit"}
{"nick":"sunoano1","date":"2016-07-14T05:22:49.442Z","type":"join"}
{"nick":"jeus2","reason":"Remote host closed the connection","date":"2016-07-14T05:23:05.302Z","type":"quit"}
{"nick":"jeus2","date":"2016-07-14T05:23:16.018Z","type":"join"}
{"nick":"sunoano","reason":"Ping timeout: 272 seconds","date":"2016-07-14T05:24:28.240Z","type":"quit"}
{"nick":"the_ant1","date":"2016-07-14T05:25:10.232Z","type":"join"}
{"nick":"the_ant","reason":"Ping timeout: 260 seconds","date":"2016-07-14T05:25:12.712Z","type":"quit"}
{"nick":"the_ant1","new_nick":"the_ant","date":"2016-07-14T05:25:13.216Z","type":"nick"}
{"nick":"chevett","date":"2016-07-14T05:25:41.407Z","type":"join"}
{"nick":"thunfisch_","new_nick":"thunfisch","date":"2016-07-14T05:27:08.296Z","type":"nick"}
{"nick":"a_thakur","reason":"Remote host closed the connection","date":"2016-07-14T05:27:26.041Z","type":"quit"}
{"nick":"yomateo","reason":"Quit: Leaving .. ping me @ http://yodavis.party/hollar if you need me.","date":"2016-07-14T05:28:17.830Z","type":"quit"}
{"nick":"geofflan","reason":"Ping timeout: 240 seconds","date":"2016-07-14T05:28:33.949Z","type":"quit"}
{"nick":"a_thakur","date":"2016-07-14T05:29:40.046Z","type":"join"}
{"nick":"d4rklit3","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-07-14T05:30:13.095Z","type":"quit"}
{"nick":"BeerLover","reason":"Ping timeout: 258 seconds","date":"2016-07-14T05:30:29.220Z","type":"quit"}
{"nick":"AvianFlu","date":"2016-07-14T05:30:55.423Z","type":"join"}
{"nick":"ekkis","date":"2016-07-14T05:32:13.450Z","type":"join"}
{"nick":"krauq","date":"2016-07-14T05:34:05.617Z","type":"join"}
{"nick":"krauq","reason":"Max SendQ exceeded","date":"2016-07-14T05:34:12.454Z","type":"quit"}
{"nick":"krauq","date":"2016-07-14T05:34:37.110Z","type":"join"}
{"nick":"jxv","reason":"Quit: Leaving","date":"2016-07-14T05:34:46.742Z","type":"quit"}
{"nick":"bumblehead","date":"2016-07-14T05:37:30.023Z","type":"join"}
{"nick":"temmi_hoo","date":"2016-07-14T05:37:46.325Z","type":"join"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2016-07-14T05:38:15.747Z","type":"quit"}
{"nick":"shouvik","reason":"Remote host closed the connection","date":"2016-07-14T05:38:23.824Z","type":"quit"}
{"nick":"shouvik_","date":"2016-07-14T05:38:29.460Z","type":"join"}
{"nick":"xall","reason":"Ping timeout: 276 seconds","date":"2016-07-14T05:39:00.378Z","type":"quit"}
{"nick":"bumblehead","reason":"Ping timeout: 264 seconds","date":"2016-07-14T05:42:28.015Z","type":"quit"}
{"nick":"cotalinux","date":"2016-07-14T05:42:41.013Z","type":"join"}
{"nick":"BeerLover","date":"2016-07-14T05:43:20.294Z","type":"join"}
{"nick":"earendel","date":"2016-07-14T05:43:23.190Z","type":"join"}
{"nick":"xall","date":"2016-07-14T05:43:29.348Z","type":"join"}
{"nick":"earendel","date":"2016-07-14T05:43:32.205Z","type":"part"}
{"nick":"earendel","date":"2016-07-14T05:43:37.204Z","type":"join"}
{"nick":"OnBrokenWings","reason":"Quit: ZZZzzz…","date":"2016-07-14T05:44:33.970Z","type":"quit"}
{"nick":"BeerLover","reason":"Max SendQ exceeded","date":"2016-07-14T05:44:45.331Z","type":"quit"}
{"nick":"BeerLover","date":"2016-07-14T05:45:20.636Z","type":"join"}
{"nick":"IamTrying","date":"2016-07-14T05:49:45.147Z","type":"join"}
{"nick":"chevett","reason":"Ping timeout: 250 seconds","date":"2016-07-14T05:50:08.416Z","type":"quit"}
{"nick":"smccarth_","date":"2016-07-14T05:50:22.719Z","type":"join"}
{"nick":"IamTrying","message":"I have files in C:\\scanner\\1.jpg and 2.jpg etc etc. Now How can i upload all files automatically to storage.myserver.com using HTTP POST method?","date":"2016-07-14T05:51:14.477Z","type":"message"}
{"nick":"IamTrying","message":"POST server: http://storage.myserver.com/give_me_the_file","date":"2016-07-14T05:51:42.918Z","type":"message"}
{"nick":"dandan86","date":"2016-07-14T05:52:14.248Z","type":"join"}
{"nick":"smccarthy","reason":"Ping timeout: 250 seconds","date":"2016-07-14T05:53:10.426Z","type":"quit"}
{"nick":"Utal","date":"2016-07-14T05:54:39.050Z","type":"join"}
{"nick":"dandan86","reason":"Ping timeout: 264 seconds","date":"2016-07-14T05:56:52.048Z","type":"quit"}
{"nick":"hyeonu","reason":"Quit: Leaving","date":"2016-07-14T05:57:08.739Z","type":"quit"}
{"nick":"Cohedrin","date":"2016-07-14T05:58:38.831Z","type":"join"}
{"nick":"noraatepernos","date":"2016-07-14T05:59:51.980Z","type":"join"}
{"nick":"nnyk","date":"2016-07-14T06:00:39.175Z","type":"join"}
{"nick":"tfennelly","date":"2016-07-14T06:00:42.598Z","type":"join"}
{"nick":"kspr1","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2016-07-14T06:01:00.800Z","type":"quit"}
{"nick":"chjj","reason":"Ping timeout: 272 seconds","date":"2016-07-14T06:01:12.226Z","type":"quit"}
{"nick":"sankha","date":"2016-07-14T06:02:14.182Z","type":"join"}
{"nick":"hyeonu","date":"2016-07-14T06:02:49.596Z","type":"join"}
{"nick":"a_thakur_","date":"2016-07-14T06:02:56.352Z","type":"join"}
{"nick":"Literphor","date":"2016-07-14T06:03:22.929Z","type":"join"}
{"nick":"Yumonra","date":"2016-07-14T06:03:25.438Z","type":"join"}
{"nick":"a_thakur","reason":"Ping timeout: 264 seconds","date":"2016-07-14T06:04:04.070Z","type":"quit"}
{"nick":"rmg_","date":"2016-07-14T06:05:06.717Z","type":"join"}
{"nick":"d5sx43","reason":"Remote host closed the connection","date":"2016-07-14T06:05:39.511Z","type":"quit"}
{"nick":"kakashiAL","reason":"Ping timeout: 244 seconds","date":"2016-07-14T06:05:51.039Z","type":"quit"}
{"nick":"CrazyTux[m]","date":"2016-07-14T06:05:51.226Z","type":"join"}
{"nick":"mhernandez1","date":"2016-07-14T06:06:08.323Z","type":"join"}
{"nick":"wldcordeiro","reason":"Ping timeout: 250 seconds","date":"2016-07-14T06:06:36.441Z","type":"quit"}
{"nick":"marthinal","date":"2016-07-14T06:06:45.994Z","type":"join"}
{"nick":"sankha","reason":"Ping timeout: 258 seconds","date":"2016-07-14T06:06:54.198Z","type":"quit"}
{"nick":"a_thakur","date":"2016-07-14T06:07:57.723Z","type":"join"}
{"nick":"a_thakur_","reason":"Ping timeout: 276 seconds","date":"2016-07-14T06:08:15.316Z","type":"quit"}
{"nick":"IamTrying","reason":"Quit: Leaving...","date":"2016-07-14T06:09:10.613Z","type":"quit"}
{"nick":"wldcordeiro","date":"2016-07-14T06:09:13.515Z","type":"join"}
{"nick":"rmg_","reason":"Ping timeout: 260 seconds","date":"2016-07-14T06:09:32.700Z","type":"quit"}
{"nick":"bluezone","date":"2016-07-14T06:09:45.362Z","type":"join"}
{"nick":"Rodya_","reason":"Remote host closed the connection","date":"2016-07-14T06:09:57.203Z","type":"quit"}
{"nick":"jdoe_","date":"2016-07-14T06:10:10.047Z","type":"join"}
{"nick":"jeus2","reason":"Remote host closed the connection","date":"2016-07-14T06:10:18.853Z","type":"quit"}
{"nick":"eljimmy","reason":"Quit: This computer has gone to sleep","date":"2016-07-14T06:10:19.478Z","type":"quit"}
{"nick":"jeus2","date":"2016-07-14T06:10:46.037Z","type":"join"}
{"nick":"dunpeal","date":"2016-07-14T06:10:49.541Z","type":"join"}
{"nick":"d4rklit3","date":"2016-07-14T06:13:08.853Z","type":"join"}
{"nick":"chjj","date":"2016-07-14T06:13:11.301Z","type":"join"}
{"nick":"percY-","reason":"Ping timeout: 258 seconds","date":"2016-07-14T06:13:25.230Z","type":"quit"}
{"nick":"Twirl","date":"2016-07-14T06:13:33.303Z","type":"part"}
{"nick":"cam_y","date":"2016-07-14T06:13:56.438Z","type":"join"}
{"nick":"shouvik","date":"2016-07-14T06:14:09.102Z","type":"join"}
{"nick":"sankha","date":"2016-07-14T06:15:03.727Z","type":"join"}
{"nick":"zenekron","date":"2016-07-14T06:15:12.203Z","type":"join"}
{"nick":"Rodya_","date":"2016-07-14T06:15:19.449Z","type":"join"}
{"nick":"shouvik_","reason":"Ping timeout: 250 seconds","date":"2016-07-14T06:16:34.429Z","type":"quit"}
{"nick":"mcc","reason":"Quit: Connection closed for inactivity","date":"2016-07-14T06:16:55.666Z","type":"quit"}
{"nick":"F4lk0n","reason":"Ping timeout: 244 seconds","date":"2016-07-14T06:17:43.961Z","type":"quit"}
{"nick":"krauq","reason":"Ping timeout: 246 seconds","date":"2016-07-14T06:22:36.107Z","type":"quit"}
{"nick":"smccarth_","reason":"Remote host closed the connection","date":"2016-07-14T06:23:43.075Z","type":"quit"}
{"nick":"Utal","reason":"Quit: Saprative has gone to sleep. ZZZzzz…","date":"2016-07-14T06:25:03.420Z","type":"quit"}
{"nick":"Literphor","reason":"Quit: Literphor","date":"2016-07-14T06:25:31.529Z","type":"quit"}
{"nick":"abernix","date":"2016-07-14T06:26:03.014Z","type":"join"}
{"nick":"groom","date":"2016-07-14T06:26:11.415Z","type":"join"}
{"nick":"Utal","date":"2016-07-14T06:26:17.216Z","type":"join"}
{"nick":"tvw","date":"2016-07-14T06:26:24.925Z","type":"quit"}
{"nick":"Utal","reason":"Client Quit","date":"2016-07-14T06:27:00.829Z","type":"quit"}
{"nick":"noraatepernos","reason":"Quit: noraatepernos","date":"2016-07-14T06:29:59.316Z","type":"quit"}
{"nick":"Industrial","date":"2016-07-14T06:30:09.738Z","type":"join"}
{"nick":"Utal","date":"2016-07-14T06:30:35.321Z","type":"join"}
{"nick":"mhernandez1","reason":"Ping timeout: 276 seconds","date":"2016-07-14T06:31:00.701Z","type":"quit"}
{"nick":"iqpi","reason":"Quit: WeeChat 1.5","date":"2016-07-14T06:31:01.055Z","type":"quit"}
{"nick":"rmg","date":"2016-07-14T06:32:10.192Z","type":"join"}
{"nick":"ch9rl3s","reason":"Ping timeout: 246 seconds","date":"2016-07-14T06:32:45.103Z","type":"quit"}
{"nick":"gli","reason":"Ping timeout: 244 seconds","date":"2016-07-14T06:33:13.992Z","type":"quit"}
{"nick":"thomas_25","date":"2016-07-14T06:33:54.731Z","type":"join"}
{"nick":"cotalinux","reason":"Read error: Connection reset by peer","date":"2016-07-14T06:34:01.388Z","type":"quit"}
{"nick":"d4rklit3","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-07-14T06:34:41.141Z","type":"quit"}
{"nick":"cam_y_","date":"2016-07-14T06:35:17.105Z","type":"join"}
{"nick":"Lisrec","date":"2016-07-14T06:35:31.994Z","type":"join"}
{"nick":"sin8h","reason":"Quit: Leaving.","date":"2016-07-14T06:35:40.607Z","type":"quit"}
{"nick":"bumblehead","date":"2016-07-14T06:36:01.102Z","type":"join"}
{"nick":"cerebro","reason":"Ping timeout: 250 seconds","date":"2016-07-14T06:36:04.440Z","type":"quit"}
{"nick":"GUS_","date":"2016-07-14T06:36:17.460Z","type":"join"}
{"nick":"Swizec","date":"2016-07-14T06:36:26.676Z","type":"join"}
{"nick":"sin8h","date":"2016-07-14T06:36:54.304Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 272 seconds","date":"2016-07-14T06:37:18.184Z","type":"quit"}
{"nick":"cam_y","reason":"Ping timeout: 250 seconds","date":"2016-07-14T06:37:22.349Z","type":"quit"}
{"nick":"tristanp_","reason":"Ping timeout: 250 seconds","date":"2016-07-14T06:37:22.536Z","type":"quit"}
{"nick":"Utal","reason":"Quit: Saprative has gone to sleep. ZZZzzz…","date":"2016-07-14T06:39:46.008Z","type":"quit"}
{"nick":"bumblehead","reason":"Ping timeout: 246 seconds","date":"2016-07-14T06:40:27.102Z","type":"quit"}
{"nick":"Lisrec","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2016-07-14T06:40:38.752Z","type":"quit"}
{"nick":"ericwooley","date":"2016-07-14T06:41:02.406Z","type":"join"}
{"nick":"ekkis","message":"var a = { test: 1, b: { base: this, fn: function() { console.log(this.base.test); }}}; how do I set base?","date":"2016-07-14T06:41:27.642Z","type":"message"}
{"nick":"soee","reason":"Quit: Konversation terminated!","date":"2016-07-14T06:41:37.397Z","type":"quit"}
{"nick":"ljharb","message":"ekkis: why are you using \"this\" at all.","date":"2016-07-14T06:41:45.803Z","type":"message"}
{"nick":"Lisrec","date":"2016-07-14T06:41:56.112Z","type":"join"}
{"nick":"ljharb","message":"ekkis: \"a\" is the object. \"a.b\" is the container of the function. just use those.","date":"2016-07-14T06:42:02.343Z","type":"message"}
{"nick":"soee","date":"2016-07-14T06:42:05.457Z","type":"join"}
{"nick":"ekkis","message":"how do I refer to a.test inside of a.b.fn?","date":"2016-07-14T06:42:20.538Z","type":"message"}
{"nick":"Mamut","date":"2016-07-14T06:42:23.410Z","type":"join"}
{"nick":"ljharb","message":"ekkis: `a.test`","date":"2016-07-14T06:42:24.927Z","type":"message"}
{"nick":"ekkis","message":"yes but how does the function know that?","date":"2016-07-14T06:42:40.148Z","type":"message"}
{"nick":"ljharb","message":"ekkis: it keeps a reference via a closure","date":"2016-07-14T06:42:52.679Z","type":"message"}
{"nick":"ljharb","message":"ekkis: that's like, core to how JS works.","date":"2016-07-14T06:42:59.830Z","type":"message"}
{"nick":"ekkis","message":"it could have been r.push({ test: 1 ...}) in which case there's not way to make the reference","date":"2016-07-14T06:43:07.223Z","type":"message"}
{"nick":"sputnik13","date":"2016-07-14T06:43:36.988Z","type":"join"}
{"nick":"ekkis","message":"so, console.log(???)","date":"2016-07-14T06:43:37.374Z","type":"message"}
{"nick":"ljharb","message":"ekkis: then you'd *make* a reference first, and push that.","date":"2016-07-14T06:43:39.058Z","type":"message"}
{"nick":"ekkis","message":"seriously","date":"2016-07-14T06:43:50.372Z","type":"message"}
{"nick":"ljharb","message":"ekkis: the whole point is that you *don't want* those references to be dynamically looked up.","date":"2016-07-14T06:43:53.816Z","type":"message"}
{"nick":"ljharb","message":"yes, seriously.","date":"2016-07-14T06:43:55.268Z","type":"message"}
{"nick":"tristanp","date":"2016-07-14T06:43:58.419Z","type":"join"}
{"nick":"ljharb","message":"dynamism should be avoided.","date":"2016-07-14T06:44:01.645Z","type":"message"}
{"nick":"ekkis","message":"I don't know why you keep saying that","date":"2016-07-14T06:44:15.628Z","type":"message"}
{"nick":"ekkis","message":"dynamic things are useful","date":"2016-07-14T06:44:21.279Z","type":"message"}
{"nick":"ljharb","message":"because it's true.","date":"2016-07-14T06:44:23.682Z","type":"message"}
{"nick":"ljharb","message":"they can be useful. but they can cause other problems sometimes, which trumps their usefulness all the time.","date":"2016-07-14T06:44:38.278Z","type":"message"}
{"nick":"ekkis","message":"ok, so what you're saying is there's no way for a.b.fn to refer to a.test unless it has a reference to a.  there's no such thing as this.parent()","date":"2016-07-14T06:45:38.493Z","type":"message"}
{"nick":"ekkis","message":"because b is not really in a","date":"2016-07-14T06:45:48.027Z","type":"message"}
{"nick":"Klumben","reason":"Ping timeout: 250 seconds","date":"2016-07-14T06:46:02.447Z","type":"quit"}
{"nick":"Sabrink","reason":"Ping timeout: 250 seconds","date":"2016-07-14T06:46:02.634Z","type":"quit"}
{"nick":"ekkis","message":"it's not like in c# or other languages where there is a this.parent()","date":"2016-07-14T06:46:33.029Z","type":"message"}
{"nick":"ljharb","message":"ekkis: yes, that's right","date":"2016-07-14T06:47:25.572Z","type":"message"}
{"nick":"ljharb","message":"JS has no such thing as \"methods\"","date":"2016-07-14T06:47:32.005Z","type":"message"}
{"nick":"ekkis","message":"yeah...","date":"2016-07-14T06:47:38.538Z","type":"message"}
{"nick":"ekkis","message":"grr","date":"2016-07-14T06:47:43.471Z","type":"message"}
{"nick":"ljharb","message":"what most people call a \"method\" is just a function-valued property.","date":"2016-07-14T06:47:45.759Z","type":"message"}
{"nick":"ljharb","message":"so there's no way for any function to know what object it was called from, other than \"this\". and because of how \"this\" works, it's runtime-dependent. so, not guaranteed.","date":"2016-07-14T06:48:09.479Z","type":"message"}
{"nick":"ljharb","message":"and thus, harmful to rely upon.","date":"2016-07-14T06:48:12.594Z","type":"message"}
{"nick":"someone235","message":"Hi, I'm trying to make morgan print post data. is it possible?","date":"2016-07-14T06:48:41.749Z","type":"message"}
{"nick":"one_zero","date":"2016-07-14T06:48:56.013Z","type":"quit"}
{"nick":"greydawg1","reason":"Quit: Leaving.","date":"2016-07-14T06:49:48.025Z","type":"quit"}
{"nick":"konobi","message":"perl essentially does the same thing internally as javascript; except that perl has namespaces (though you can override that behaviour)","date":"2016-07-14T06:50:03.383Z","type":"message"}
{"nick":"gli","date":"2016-07-14T06:50:35.109Z","type":"join"}
{"nick":"konobi","message":"and they're both languages that you can use small building blocks to create very interesting object systems, etc.","date":"2016-07-14T06:50:49.224Z","type":"message"}
{"nick":"kawa2014","date":"2016-07-14T06:51:25.729Z","type":"join"}
{"nick":"shouvik_","date":"2016-07-14T06:51:26.193Z","type":"join"}
{"nick":"jishankai","date":"2016-07-14T06:51:27.880Z","type":"join"}
{"nick":"shouvik","reason":"Ping timeout: 246 seconds","date":"2016-07-14T06:52:00.108Z","type":"quit"}
{"nick":"dandan86","date":"2016-07-14T06:53:05.159Z","type":"join"}
{"nick":"djoot","reason":"Quit: leaving","date":"2016-07-14T06:53:29.818Z","type":"quit"}
{"nick":"Ardethian\\\\work","date":"2016-07-14T06:53:37.335Z","type":"join"}
{"nick":"greydawg","date":"2016-07-14T06:55:38.323Z","type":"join"}
{"nick":"elsevero","date":"2016-07-14T06:55:49.645Z","type":"join"}
{"nick":"Industrial","reason":"Ping timeout: 276 seconds","date":"2016-07-14T06:56:21.675Z","type":"quit"}
{"nick":"Ardethian\\work","reason":"Ping timeout: 244 seconds","date":"2016-07-14T06:56:29.013Z","type":"quit"}
{"nick":"Utal","date":"2016-07-14T06:56:58.767Z","type":"join"}
{"nick":"SuperHans","date":"2016-07-14T06:57:53.780Z","type":"join"}
{"nick":"dandan86","reason":"Ping timeout: 264 seconds","date":"2016-07-14T06:58:04.025Z","type":"quit"}
{"nick":"Utal","reason":"Client Quit","date":"2016-07-14T06:58:21.744Z","type":"quit"}
{"nick":"shouvik_","reason":"Ping timeout: 272 seconds","date":"2016-07-14T06:58:50.229Z","type":"quit"}
{"nick":"rmg","date":"2016-07-14T06:59:23.034Z","type":"join"}
{"nick":"laurensclaessen","date":"2016-07-14T06:59:38.324Z","type":"join"}
{"nick":"Spr0cket","reason":"Ping timeout: 250 seconds","date":"2016-07-14T07:00:09.048Z","type":"quit"}
{"nick":"NomadJim","reason":"Read error: Connection reset by peer","date":"2016-07-14T07:00:21.810Z","type":"quit"}
{"nick":"Rodya_","reason":"Remote host closed the connection","date":"2016-07-14T07:00:25.574Z","type":"quit"}
{"nick":"NomadJim","date":"2016-07-14T07:00:47.355Z","type":"join"}
{"nick":"wldcordeiro","reason":"Quit: WeeChat 1.4","date":"2016-07-14T07:01:03.190Z","type":"quit"}
{"nick":"Utal","date":"2016-07-14T07:01:31.248Z","type":"join"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-07-14T07:01:43.255Z","type":"quit"}
{"nick":"oxhak","date":"2016-07-14T07:02:57.982Z","type":"join"}
{"nick":"MauveDog","reason":"Remote host closed the connection","date":"2016-07-14T07:03:39.080Z","type":"quit"}
{"nick":"rmg","reason":"Ping timeout: 244 seconds","date":"2016-07-14T07:03:42.989Z","type":"quit"}
{"nick":"Spr0cket","date":"2016-07-14T07:04:02.062Z","type":"join"}
{"nick":"Spr0cket","reason":"Changing host","date":"2016-07-14T07:04:02.248Z","type":"quit"}
{"nick":"Spr0cket","date":"2016-07-14T07:04:02.249Z","type":"join"}
{"nick":"_yoy_","date":"2016-07-14T07:04:23.729Z","type":"join"}
{"nick":"isberg","date":"2016-07-14T07:04:27.021Z","type":"join"}
{"nick":"Cagelin","date":"2016-07-14T07:04:48.097Z","type":"join"}
{"nick":"shouvik","date":"2016-07-14T07:05:01.981Z","type":"join"}
{"nick":"JustAnotherIdiot","date":"2016-07-14T07:05:41.895Z","type":"join"}
{"nick":"JustAnotherIdiot","reason":"Remote host closed the connection","date":"2016-07-14T07:06:20.524Z","type":"quit"}
{"nick":"hyeonu","reason":"Quit: Leaving","date":"2016-07-14T07:07:00.194Z","type":"quit"}
{"nick":"Booster2ooo","date":"2016-07-14T07:07:28.059Z","type":"join"}
{"nick":"Totem|Away","new_nick":"TotempaaltJ","date":"2016-07-14T07:08:35.816Z","type":"nick"}
{"nick":"shouvik","reason":"Ping timeout: 244 seconds","date":"2016-07-14T07:09:24.002Z","type":"quit"}
{"nick":"djoot","date":"2016-07-14T07:09:59.954Z","type":"join"}
{"nick":"djoot","reason":"Changing host","date":"2016-07-14T07:10:00.141Z","type":"quit"}
{"nick":"djoot","date":"2016-07-14T07:10:00.141Z","type":"join"}
{"nick":"joshontheweb","date":"2016-07-14T07:11:28.709Z","type":"join"}
{"nick":"Utal","reason":"Quit: Saprative has gone to sleep. ZZZzzz…","date":"2016-07-14T07:11:58.208Z","type":"quit"}
{"nick":"fees","date":"2016-07-14T07:12:23.376Z","type":"join"}
{"nick":"hyeonu","date":"2016-07-14T07:12:27.411Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 276 seconds","date":"2016-07-14T07:14:33.358Z","type":"quit"}
{"nick":"Utal","date":"2016-07-14T07:16:20.011Z","type":"join"}
{"nick":"Swizec_","date":"2016-07-14T07:16:22.375Z","type":"join"}
{"nick":"shouvik","date":"2016-07-14T07:16:35.974Z","type":"join"}
{"nick":"Utal","reason":"Max SendQ exceeded","date":"2016-07-14T07:17:34.088Z","type":"quit"}
{"nick":"amriunix","date":"2016-07-14T07:17:46.430Z","type":"join"}
{"nick":"soee","reason":"Quit: Konversation terminated!","date":"2016-07-14T07:18:47.425Z","type":"quit"}
{"nick":"elsevero","reason":"Quit: elsevero","date":"2016-07-14T07:18:58.943Z","type":"quit"}
{"nick":"soee","date":"2016-07-14T07:19:11.348Z","type":"join"}
{"nick":"Dro","date":"2016-07-14T07:19:22.203Z","type":"join"}
{"nick":"Swizec","reason":"Ping timeout: 276 seconds","date":"2016-07-14T07:19:45.676Z","type":"quit"}
{"nick":"Utal","date":"2016-07-14T07:22:09.328Z","type":"join"}
{"nick":"shouvik","reason":"Ping timeout: 244 seconds","date":"2016-07-14T07:22:49.970Z","type":"quit"}
{"nick":"sin8h","reason":"Quit: Leaving.","date":"2016-07-14T07:23:42.171Z","type":"quit"}
{"nick":"Industrial","date":"2016-07-14T07:23:43.077Z","type":"join"}
{"nick":"shouvik","date":"2016-07-14T07:23:51.294Z","type":"join"}
{"nick":"greves__","reason":"Read error: Connection reset by peer","date":"2016-07-14T07:24:08.871Z","type":"quit"}
{"nick":"hadifarnoud","date":"2016-07-14T07:24:22.465Z","type":"join"}
{"nick":"Sabrink","date":"2016-07-14T07:24:40.370Z","type":"join"}
{"nick":"apparition","reason":"Quit: Bye","date":"2016-07-14T07:25:16.316Z","type":"quit"}
{"nick":"Utal","reason":"Client Quit","date":"2016-07-14T07:25:35.584Z","type":"quit"}
{"nick":"jeus2","reason":"Ping timeout: 244 seconds","date":"2016-07-14T07:26:26.978Z","type":"quit"}
{"nick":"rmg","date":"2016-07-14T07:26:32.357Z","type":"join"}
{"nick":"mhernandez1","date":"2016-07-14T07:27:37.984Z","type":"join"}
{"nick":"kedare","date":"2016-07-14T07:28:24.108Z","type":"join"}
{"nick":"jeus2","date":"2016-07-14T07:29:15.358Z","type":"join"}
{"nick":"plutoniix","reason":"Read error: Connection reset by peer","date":"2016-07-14T07:29:16.566Z","type":"quit"}
{"nick":"wtrocki","date":"2016-07-14T07:29:44.391Z","type":"join"}
{"nick":"Cohedrin","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-07-14T07:29:59.814Z","type":"quit"}
{"nick":"plutoniix","date":"2016-07-14T07:30:00.383Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 240 seconds","date":"2016-07-14T07:30:51.306Z","type":"quit"}
{"nick":"Spr0cket","reason":"Ping timeout: 250 seconds","date":"2016-07-14T07:30:55.023Z","type":"quit"}
{"nick":"amriunix","message":"Node.js is simply the V8 engine bundled with some libraries to do I/O and networking! right ??","date":"2016-07-14T07:31:20.618Z","type":"message"}
{"nick":"DeltaHeavy","reason":"Ping timeout: 276 seconds","date":"2016-07-14T07:31:27.302Z","type":"quit"}
{"nick":"konobi","message":"yup","date":"2016-07-14T07:31:30.807Z","type":"message"}
{"nick":"ilbonte","date":"2016-07-14T07:31:52.684Z","type":"join"}
{"nick":"amriunix","message":"but I/O and networking are not not defined in ECMAScript !","date":"2016-07-14T07:32:03.378Z","type":"message"}
{"nick":"Vignesh_","date":"2016-07-14T07:32:05.525Z","type":"join"}
{"nick":"konobi","message":"and the ability to interact with native libraries. it's an opinionated posix api","date":"2016-07-14T07:32:12.088Z","type":"message"}
{"nick":"konobi","message":"amriunix: neither is the DOM","date":"2016-07-14T07:32:17.876Z","type":"message"}
{"nick":"amriunix","message":"konobi: cool that's waht i need to hear ! thank you","date":"2016-07-14T07:32:47.220Z","type":"message"}
{"nick":"konobi","message":"javascript by itself is useless.","date":"2016-07-14T07:33:12.989Z","type":"message"}
{"nick":"Hounddog","date":"2016-07-14T07:33:33.375Z","type":"join"}
{"nick":"konobi","message":"you have to plug in native code for it to be of use","date":"2016-07-14T07:33:33.562Z","type":"message"}
{"nick":"jeffreylevesque","reason":"Remote host closed the connection","date":"2016-07-14T07:33:51.784Z","type":"quit"}
{"nick":"amriunix","message":"konobi: that's what nodejs did! is to develop V8 with other code and libraries  in order to do the I/O and networking features","date":"2016-07-14T07:35:01.714Z","type":"message"}
{"nick":"evanlucas","reason":"Ping timeout: 246 seconds","date":"2016-07-14T07:35:03.108Z","type":"quit"}
{"nick":"cam_y","date":"2016-07-14T07:35:14.203Z","type":"join"}
{"nick":"cam_y","reason":"Remote host closed the connection","date":"2016-07-14T07:35:18.737Z","type":"quit"}
{"nick":"ekkis","reason":"Quit: This computer has gone to sleep","date":"2016-07-14T07:35:34.657Z","type":"quit"}
{"nick":"nnyk","reason":"Ping timeout: 250 seconds","date":"2016-07-14T07:35:52.393Z","type":"quit"}
{"nick":"ekkis","date":"2016-07-14T07:36:06.124Z","type":"join"}
{"nick":"jud^","date":"2016-07-14T07:36:09.123Z","type":"join"}
{"nick":"ekkis","reason":"Client Quit","date":"2016-07-14T07:36:22.990Z","type":"quit"}
{"nick":"Sharaal","date":"2016-07-14T07:36:39.246Z","type":"join"}
{"nick":"jud","reason":"Ping timeout: 240 seconds","date":"2016-07-14T07:36:51.391Z","type":"quit"}
{"nick":"Spr0cket","date":"2016-07-14T07:37:57.058Z","type":"join"}
{"nick":"Spr0cket","reason":"Changing host","date":"2016-07-14T07:37:57.245Z","type":"quit"}
{"nick":"Spr0cket","date":"2016-07-14T07:37:57.245Z","type":"join"}
{"nick":"a_thakur","reason":"Remote host closed the connection","date":"2016-07-14T07:38:26.048Z","type":"quit"}
{"nick":"marthinal","date":"2016-07-14T07:38:30.724Z","type":"join"}
{"nick":"cam_y_","reason":"Ping timeout: 246 seconds","date":"2016-07-14T07:38:33.104Z","type":"quit"}
{"nick":"Yumonra","message":"hello guys. i use a library by promisifying its functions. there was a problem with the library, that caused my application to crash(an async task created by a function i call, that threw uncaught exception).","date":"2016-07-14T07:39:11.647Z","type":"message"}
{"nick":"Yumonra","message":"i tried using `domain` module to wrap library calls and reject promises if any errors were to occur in the library.","date":"2016-07-14T07:39:39.104Z","type":"message"}
{"nick":"amriunix","reason":"Quit: leaving","date":"2016-07-14T07:40:09.454Z","type":"quit"}
{"nick":"Yumonra","message":"but that caused a memory leak... any ideas? how can i use domain module without causing a memory leak","date":"2016-07-14T07:40:10.200Z","type":"message"}
{"nick":"ericwooley","reason":"Remote host closed the connection","date":"2016-07-14T07:40:10.489Z","type":"quit"}
{"nick":"a_thakur","date":"2016-07-14T07:40:13.002Z","type":"join"}
{"nick":"Sharaal1","reason":"Ping timeout: 240 seconds","date":"2016-07-14T07:40:33.910Z","type":"quit"}
{"nick":"ljharb","message":"i wouldn't use domains. they're generally considered not so good.","date":"2016-07-14T07:40:40.237Z","type":"message"}
{"nick":"TotempaaltJ","new_nick":"Totem|Away","date":"2016-07-14T07:40:49.573Z","type":"nick"}
{"nick":"Totem|Away","new_nick":"TotempaaltJ","date":"2016-07-14T07:40:53.596Z","type":"nick"}
{"nick":"konobi","message":"Yumonra: you may be running into run away recursion","date":"2016-07-14T07:41:33.276Z","type":"message"}
{"nick":"Neobenedict","date":"2016-07-14T07:41:34.107Z","type":"join"}
{"nick":"Neobenedict","reason":"Changing host","date":"2016-07-14T07:41:34.294Z","type":"quit"}
{"nick":"Neobenedict","date":"2016-07-14T07:41:34.294Z","type":"join"}
{"nick":"fracting","reason":"Ping timeout: 260 seconds","date":"2016-07-14T07:42:17.721Z","type":"quit"}
{"nick":"Neobenedict_","reason":"Ping timeout: 244 seconds","date":"2016-07-14T07:42:28.008Z","type":"quit"}
{"nick":"Fleuv","date":"2016-07-14T07:42:38.020Z","type":"join"}
{"nick":"laurensclaessen","reason":"Remote host closed the connection","date":"2016-07-14T07:42:55.019Z","type":"quit"}
{"nick":"sadtaco","reason":"Read error: Connection reset by peer","date":"2016-07-14T07:43:02.034Z","type":"quit"}
{"nick":"Yumonra","message":"@ljharb any other solution than using domains? i don't want to edit the library since it's a npm module and i think it would be hard to manage the edited version of the library.","date":"2016-07-14T07:43:58.898Z","type":"message"}
{"nick":"Yumonra","message":"@konobi need to search on that topic.","date":"2016-07-14T07:44:23.022Z","type":"message"}
{"nick":"konobi","message":"it may be your usage of promises that could be at fault","date":"2016-07-14T07:44:23.559Z","type":"message"}
{"nick":"Yumonra","message":"well i tried removing the domain module","date":"2016-07-14T07:44:43.408Z","type":"message"}
{"nick":"konobi","message":"try reducing your chain of events step by step until you see steady memory usage","date":"2016-07-14T07:44:53.907Z","type":"message"}
{"nick":"Yumonra","message":"and just deployed the service with my promise wrapper","date":"2016-07-14T07:44:58.442Z","type":"message"}
{"nick":"Yumonra","message":"the service runs for the last 40h without any problems","date":"2016-07-14T07:45:08.776Z","type":"message"}
{"nick":"Yumonra","message":"with 100MB~ memory usage","date":"2016-07-14T07:45:29.703Z","type":"message"}
{"nick":"konobi","message":"node-inspector has cpretty indepth heap analysis support to tell you whats going on with your memory and from where","date":"2016-07-14T07:45:33.150Z","type":"message"}
{"nick":"rendar","date":"2016-07-14T07:45:56.595Z","type":"join"}
{"nick":"shouvik_","date":"2016-07-14T07:46:04.103Z","type":"join"}
{"nick":"cam_y","date":"2016-07-14T07:46:23.211Z","type":"join"}
{"nick":"nishu-tryinghard","date":"2016-07-14T07:46:42.109Z","type":"join"}
{"nick":"cam_y","reason":"Client Quit","date":"2016-07-14T07:46:57.047Z","type":"quit"}
{"nick":"shouvik","reason":"Ping timeout: 246 seconds","date":"2016-07-14T07:46:57.234Z","type":"quit"}
{"nick":"Yumonra","message":"@konobi btw about node-inspector. there isn't anyway to see which line is currently executing without setting a breakpoint right?","date":"2016-07-14T07:46:57.960Z","type":"message"}
{"nick":"isberg","reason":"Ping timeout: 264 seconds","date":"2016-07-14T07:47:16.057Z","type":"quit"}
{"nick":"Yumonra","message":"either that or uncaught expcetions?","date":"2016-07-14T07:47:35.234Z","type":"message"}
{"nick":"ljharb","message":"Yumonra: are you using promisifyAll?","date":"2016-07-14T07:48:06.440Z","type":"message"}
{"nick":"ljharb","message":"Yumonra: or properly manually promisifying","date":"2016-07-14T07:48:13.562Z","type":"message"}
{"nick":"Yumonra","message":"ljharb: i'm using promisifyAll with a custom promisifier","date":"2016-07-14T07:48:29.426Z","type":"message"}
{"nick":"ljharb","message":"you can't reliably promisify things that aren't intended to be promisified - the best solution is to use a lib that natively uses promises.","date":"2016-07-14T07:48:30.995Z","type":"message"}
{"nick":"a_thakur","reason":"Read error: Connection reset by peer","date":"2016-07-14T07:48:44.123Z","type":"quit"}
{"nick":"a_thakur","date":"2016-07-14T07:49:03.041Z","type":"join"}
{"nick":"thomas_25","reason":"Ping timeout: 260 seconds","date":"2016-07-14T07:49:17.700Z","type":"quit"}
{"nick":"Yumonra","message":"http://hastebin.com/uheperuvaq.coffee","date":"2016-07-14T07:49:32.380Z","type":"message"}
{"nick":"scippio","reason":"Quit: Leaving.","date":"2016-07-14T07:50:22.197Z","type":"quit"}
{"nick":"mhernandez1","reason":"Ping timeout: 240 seconds","date":"2016-07-14T07:51:51.323Z","type":"quit"}
{"nick":"sin8h","date":"2016-07-14T07:52:11.689Z","type":"join"}
{"nick":"tesrty","date":"2016-07-14T07:52:18.720Z","type":"join"}
{"nick":"Yumonra","message":"@ljharb i see your point and share the same opinion, but this library is one of a kind. i'm a college student and this is my summer job. so i don't want to invest too much time on writing/customizing libraries","date":"2016-07-14T07:52:53.883Z","type":"message"}
{"nick":"Yumonra","message":"my aim is to get things done while i'm at the company for the summer","date":"2016-07-14T07:53:15.461Z","type":"message"}
{"nick":"rmg","date":"2016-07-14T07:53:43.572Z","type":"join"}
{"nick":"laurensclaessen","date":"2016-07-14T07:53:45.052Z","type":"join"}
{"nick":"dandan86","date":"2016-07-14T07:53:56.433Z","type":"join"}
{"nick":"debjeetsarkar","date":"2016-07-14T07:54:52.073Z","type":"join"}
{"nick":"OnkelTem","date":"2016-07-14T07:54:52.609Z","type":"join"}
{"nick":"Yumonra","message":"i've commented only those lines in the link i sent, and the memory leak is gone","date":"2016-07-14T07:55:33.750Z","type":"message"}
{"nick":"xall","reason":"Ping timeout: 240 seconds","date":"2016-07-14T07:56:51.469Z","type":"quit"}
{"nick":"cardiel","reason":"Ping timeout: 258 seconds","date":"2016-07-14T07:56:52.153Z","type":"quit"}
{"nick":"rmg","reason":"Ping timeout: 252 seconds","date":"2016-07-14T07:58:07.515Z","type":"quit"}
{"nick":"dandan86","reason":"Ping timeout: 264 seconds","date":"2016-07-14T07:58:40.027Z","type":"quit"}
{"nick":"guest2091","date":"2016-07-14T07:58:44.612Z","type":"join"}
{"nick":"cardiel","date":"2016-07-14T07:59:09.770Z","type":"join"}
