{"nick":"f32","message":"earendel2: you're doing it wrong, most of vs should be handled in userland >_>","date":"2017-11-25T00:00:07.709Z","type":"message"}
{"nick":"joepie91","message":"frankly at this point I'm just about ready to conclude that you don't have a sound rationale","date":"2017-11-25T00:00:10.542Z","type":"message"}
{"nick":"nnuMTA","reason":"Changing host","date":"2017-11-25T00:00:16.530Z","type":"quit"}
{"nick":"nnuMTA","date":"2017-11-25T00:00:16.621Z","type":"join"}
{"nick":"joepie91","message":"and that you're just evading the critical questions","date":"2017-11-25T00:00:17.433Z","type":"message"}
{"nick":"earendel2","message":"im doing it wrong? whats userland","date":"2017-11-25T00:00:31.171Z","type":"message"}
{"nick":"joepie91","message":"because you keep answering questions that weren't asked, avoiding the ones that are, and giving vague unhelpful directives like \"install VS\"","date":"2017-11-25T00:00:38.956Z","type":"message"}
{"nick":"f32","message":"earendel2: *shrug* as joepie91 hes the expert","date":"2017-11-25T00:00:51.793Z","type":"message"}
{"nick":"f32","message":"*ask","date":"2017-11-25T00:00:55.837Z","type":"message"}
{"nick":"upperdeck","reason":"Ping timeout: 268 seconds","date":"2017-11-25T00:01:05.985Z","type":"quit"}
{"nick":"joepie91","message":"if you have a sound rationale, then it should not be difficult to summarize it and point out the concrete metrics it objectively improves","date":"2017-11-25T00:01:09.192Z","type":"message"}
{"nick":"earendel2","message":"ah ok.","date":"2017-11-25T00:01:11.129Z","type":"message"}
{"nick":"f32","message":"joepie91: i can't keep giving you concrete examples, and have you say \"give me a concrete example\"","date":"2017-11-25T00:01:22.142Z","type":"message"}
{"nick":"joepie91","message":"I didn't ask you for a concrete example, I asked you for concrete metrics.","date":"2017-11-25T00:01:34.440Z","type":"message"}
{"nick":"e14","date":"2017-11-25T00:01:37.557Z","type":"join"}
{"nick":"joepie91","message":"different words with a different meaning.","date":"2017-11-25T00:01:41.678Z","type":"message"}
{"nick":"f32","message":"you don't seem to understand the concrete examples, or why they would be better than manually rolling your own using some fluff in userland","date":"2017-11-25T00:01:45.625Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T00:01:49.099Z","type":"join"}
{"nick":"joepie91","message":"like I said: [01:00] <joepie91> because you keep answering questions that weren't asked, avoiding the ones that are, and giving vague unhelpful directives like \"install VS\"","date":"2017-11-25T00:02:02.609Z","type":"message"}
{"nick":"f32","message":"do you want a code example?","date":"2017-11-25T00:02:05.578Z","type":"message"}
{"nick":"joepie91","message":"no, I don't, I want a concrete metric that your proposal improves.","date":"2017-11-25T00:02:14.240Z","type":"message"}
{"nick":"kroogs","date":"2017-11-25T00:02:16.042Z","type":"join"}
{"nick":"earendel2","message":"but you already said you don't like decorators.","date":"2017-11-25T00:02:20.439Z","type":"message"}
{"nick":"f32","message":"what kind of metric, that its quicker?","date":"2017-11-25T00:02:29.418Z","type":"message"}
{"nick":"earendel2","message":"so whats the point","date":"2017-11-25T00:02:35.777Z","type":"message"}
{"nick":"f32","message":"should i provide a video with a stopwatch of me using VS and doing stuff faster and more accurate using the tooling it offers?","date":"2017-11-25T00:02:51.640Z","type":"message"}
{"nick":"milardovich","date":"2017-11-25T00:02:55.000Z","type":"join"}
{"nick":"joepie91","message":"any kind of relevant development metric. does it make code more performant than a userland implementation, does it make the checks more reliable than a userland implementation, ...?","date":"2017-11-25T00:02:58.880Z","type":"message"}
{"nick":"f32","message":"joepie91: we are talking about code time tooling","date":"2017-11-25T00:03:14.025Z","type":"message"}
{"nick":"joepie91","message":"does it allow to write developer tooling that is not currently possible to write with a userland implementation? and so on","date":"2017-11-25T00:03:22.929Z","type":"message"}
{"nick":"zivester","date":"2017-11-25T00:03:57.268Z","type":"join"}
{"nick":"f32","message":"joepie91: its not about doing it in userland, its about providing the userland libraries better hooks at some lower level (decorators)","date":"2017-11-25T00:04:01.048Z","type":"message"}
{"nick":"joepie91","message":"ie. I'm asking for something it can attain that you can't attain with a userland implementation","date":"2017-11-25T00:04:01.408Z","type":"message"}
{"nick":"joepie91","message":"irrelevant, that's not what I asked","date":"2017-11-25T00:04:07.595Z","type":"message"}
{"nick":"earendel2","message":"every tool could be written by anyone.","date":"2017-11-25T00:04:11.624Z","type":"message"}
{"nick":"joepie91","message":"you don't need to re-describe the proposal to me, I'm asking you to show its merits","date":"2017-11-25T00:04:16.750Z","type":"message"}
{"nick":"joepie91","message":"[01:04] <joepie91> ie. I'm asking for something it can attain that you can't attain with a userland implementation","date":"2017-11-25T00:04:29.256Z","type":"message"}
{"nick":"zivester","reason":"Max SendQ exceeded","date":"2017-11-25T00:04:31.097Z","type":"quit"}
{"nick":"earendel2","message":"why do you ask for it?","date":"2017-11-25T00:04:36.489Z","type":"message"}
{"nick":"earendel2","message":"to be convinced?","date":"2017-11-25T00:04:40.628Z","type":"message"}
{"nick":"earendel2","message":"eventually?","date":"2017-11-25T00:04:44.490Z","type":"message"}
{"nick":"joepie91","message":"AlphaKatten: yes.","date":"2017-11-25T00:04:45.281Z","type":"message"}
{"nick":"joepie91","message":"err","date":"2017-11-25T00:04:46.714Z","type":"message"}
{"nick":"joepie91","message":"earendel2: yes. *","date":"2017-11-25T00:04:48.246Z","type":"message"}
{"nick":"joepie91","message":"fatfingered, sorry AlphaKatten","date":"2017-11-25T00:04:52.672Z","type":"message"}
{"nick":"earendel2","message":"well then :)","date":"2017-11-25T00:04:55.058Z","type":"message"}
{"nick":"f32","message":"joepie91: ok..","date":"2017-11-25T00:05:00.403Z","type":"message"}
{"nick":"gxt","reason":"Ping timeout: 250 seconds","date":"2017-11-25T00:05:01.825Z","type":"quit"}
{"nick":"zivester","date":"2017-11-25T00:05:16.085Z","type":"join"}
{"nick":"f32","message":"1) let me describe a contract (type) in some capacity in JS via decorators","date":"2017-11-25T00:05:19.877Z","type":"message"}
{"nick":"f32","message":"2) let that decorator generate some standard metadata to describe that type","date":"2017-11-25T00:05:35.164Z","type":"message"}
{"nick":"f32","message":"3) let that metadata be used to general IDL documents (JSONSchema, XSD, etc)","date":"2017-11-25T00:05:51.980Z","type":"message"}
{"nick":"e14","reason":"Client Quit","date":"2017-11-25T00:05:55.503Z","type":"quit"}
{"nick":"zivester","reason":"Max SendQ exceeded","date":"2017-11-25T00:06:13.000Z","type":"quit"}
{"nick":"f32","message":"4) let that generated schemas be used to create structural validators for messages (the contract)","date":"2017-11-25T00:06:17.196Z","type":"message"}
{"nick":"upperdeck","reason":"Ping timeout: 240 seconds","date":"2017-11-25T00:06:22.040Z","type":"quit"}
{"nick":"f32","message":"5) optionally publish those schemas to callers","date":"2017-11-25T00:06:38.695Z","type":"message"}
{"nick":"earendel2","message":"xD","date":"2017-11-25T00:06:50.869Z","type":"message"}
{"nick":"zivester","date":"2017-11-25T00:06:52.857Z","type":"join"}
{"nick":"e14","date":"2017-11-25T00:07:07.780Z","type":"join"}
{"nick":"joepie91","message":"f32: okay, and how is this not already possible in userland without using decorators?","date":"2017-11-25T00:07:11.300Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T00:07:19.144Z","type":"join"}
{"nick":"f32","message":"6) at some later date, consider gathering all types exposed across all services in a cluster and build towards some namespace typed ecosystem for which all services interoperate","date":"2017-11-25T00:07:33.967Z","type":"message"}
{"nick":"zivester","reason":"Max SendQ exceeded","date":"2017-11-25T00:07:42.318Z","type":"quit"}
{"nick":"f32","message":"joepie91: all possible in userland, practical ...... no","date":"2017-11-25T00:07:54.336Z","type":"message"}
{"nick":"f32","message":"not even remotely close to practical","date":"2017-11-25T00:08:03.608Z","type":"message"}
{"nick":"earendel2","message":"mostly contracts in js are defined using pen & paper.","date":"2017-11-25T00:08:03.958Z","type":"message"}
{"nick":"joepie91","message":"f32: okay, how is it not practical>","date":"2017-11-25T00:08:05.278Z","type":"message"}
{"nick":"earendel2","message":":P","date":"2017-11-25T00:08:05.589Z","type":"message"}
{"nick":"joepie91","message":"?*","date":"2017-11-25T00:08:06.846Z","type":"message"}
{"nick":"zivester","date":"2017-11-25T00:08:23.641Z","type":"join"}
{"nick":"zivester","reason":"Max SendQ exceeded","date":"2017-11-25T00:09:20.828Z","type":"quit"}
{"nick":"f32","message":"joepie91: consider the work involved in having a reflective metadata first off, then the metadata to IDL transforms, then the message bindings for those types, then the later analysis of types across a enterprise system, and the verification that types are accurate, up to date and well maintained as a system grows","date":"2017-11-25T00:09:24.668Z","type":"message"}
{"nick":"f32","message":"you could do all this manually of course, better hire a guy (or several) to handle this work","date":"2017-11-25T00:09:49.580Z","type":"message"}
{"nick":"zivester","date":"2017-11-25T00:10:09.966Z","type":"join"}
{"nick":"f32","message":"or, you could add decorators to JS, and let the userland libraries build towards this picture","date":"2017-11-25T00:10:14.536Z","type":"message"}
{"nick":"joepie91","message":"f32: why would you need to do any of this manually? that's what tooling is for, and it doesn't require decorators to work","date":"2017-11-25T00:10:34.639Z","type":"message"}
{"nick":"zivester","reason":"Max SendQ exceeded","date":"2017-11-25T00:10:43.557Z","type":"quit"}
{"nick":"samsch","reason":"Quit: Leaving","date":"2017-11-25T00:10:54.165Z","type":"quit"}
{"nick":"f32","message":"joepie91: ive used all available tooling extensively, ive had to, and it sucks","date":"2017-11-25T00:11:04.837Z","type":"message"}
{"nick":"earendel2","message":"functions are for hipsters.. all you need is a stack and conditional jumps","date":"2017-11-25T00:11:12.092Z","type":"message"}
{"nick":"earendel2","message":":)","date":"2017-11-25T00:11:14.140Z","type":"message"}
{"nick":"kroogs","reason":"Ping timeout: 240 seconds","date":"2017-11-25T00:11:22.025Z","type":"quit"}
{"nick":"f32","message":"joepie91: and no, chai (or similar) doesn't cut it","date":"2017-11-25T00:11:25.993Z","type":"message"}
{"nick":"zivester","date":"2017-11-25T00:11:29.546Z","type":"join"}
{"nick":"joepie91","message":"f32: then the problem is insufficient tooling, and that doesn't require core lang changes to fix","date":"2017-11-25T00:11:31.220Z","type":"message"}
{"nick":"ivan_the_monkey","date":"2017-11-25T00:11:33.319Z","type":"join"}
{"nick":"joepie91","message":"it just requires contributions to tooling","date":"2017-11-25T00:11:35.072Z","type":"message"}
{"nick":"f32","message":"joepie91: actually it does","date":"2017-11-25T00:11:40.849Z","type":"message"}
{"nick":"upperdeck","reason":"Ping timeout: 240 seconds","date":"2017-11-25T00:11:42.104Z","type":"quit"}
{"nick":"deltab","message":"you can have tooling parse the source code and look for e.g. specially-formatted comments","date":"2017-11-25T00:11:56.719Z","type":"message"}
{"nick":"joepie91","message":"I don't see how it does - everything you've described can be implemented with JS as it is today","date":"2017-11-25T00:12:02.257Z","type":"message"}
{"nick":"earendel2","message":"yw, but the tools need to be fed with that metadata yw","date":"2017-11-25T00:12:05.247Z","type":"message"}
{"nick":"zivester","reason":"Max SendQ exceeded","date":"2017-11-25T00:12:07.052Z","type":"quit"}
{"nick":"joepie91","message":"even easier if you control a transpiling language","date":"2017-11-25T00:12:14.466Z","type":"message"}
{"nick":"earendel2","message":"its not just the missing tools.","date":"2017-11-25T00:12:15.158Z","type":"message"}
{"nick":"joepie91","message":"earendel2: sure? still doesn't require language changes","date":"2017-11-25T00:12:27.769Z","type":"message"}
{"nick":"f32","message":"RTA does imply some standard to approach it in JS, but RTA is just a small piece of a much much larger picture","date":"2017-11-25T00:12:31.078Z","type":"message"}
{"nick":"joepie91","message":"plenty of ways to annotate code already","date":"2017-11-25T00:12:33.649Z","type":"message"}
{"nick":"joepie91","message":"from specially formatted comments like deltab mentioned, to transpiling","date":"2017-11-25T00:12:46.753Z","type":"message"}
{"nick":"earendel2","message":"joepie91: i think its about recommendation .. not requirement","date":"2017-11-25T00:12:50.508Z","type":"message"}
{"nick":"deltab","message":"but that's slower and less standardized than something integrated into the language","date":"2017-11-25T00:12:51.984Z","type":"message"}
{"nick":"dre_","date":"2017-11-25T00:12:56.868Z","type":"join"}
{"nick":"joepie91","message":"deltab: I don't see how it'd be slower, to be honest","date":"2017-11-25T00:13:06.495Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T00:13:24.044Z","type":"join"}
{"nick":"zsoc","message":"The decorator pattern can be used in javascript right now, without a special class syntax (You just need to directly use prototypal inheritance) - unless I'm missing something","date":"2017-11-25T00:13:27.308Z","type":"message"}
{"nick":"deltab","message":"if you need something to parse the source code again","date":"2017-11-25T00:13:35.006Z","type":"message"}
{"nick":"deltab","message":"vs. reading an existing metadata structure","date":"2017-11-25T00:13:59.798Z","type":"message"}
{"nick":"joepie91","message":"deltab: hm? I'm thinking of this being a build step","date":"2017-11-25T00:14:08.460Z","type":"message"}
{"nick":"f32","message":"joepie91: i mean, i, at a absolute minimum need RTA done in a sensible way, but that is only scratching the surface","date":"2017-11-25T00:14:09.747Z","type":"message"}
{"nick":"horsey","date":"2017-11-25T00:14:18.895Z","type":"join"}
{"nick":"joepie91","message":"you don't need runtime source parsing or anything like that for that","date":"2017-11-25T00:14:35.146Z","type":"message"}
{"nick":"joepie91","message":"and it doesn't have to be less standardized either","date":"2017-11-25T00:14:45.265Z","type":"message"}
{"nick":"deltab","message":"joepie91: ah, then you have extra complication in the authoring","date":"2017-11-25T00:14:52.898Z","type":"message"}
{"nick":"joepie91","message":"something does not need to be part of ECMAScript to be standard","date":"2017-11-25T00:14:54.671Z","type":"message"}
{"nick":"earendel2","message":"well.. thats a point maybe.. jsdoc comments can be used for tooling as well.. without changing tha language..","date":"2017-11-25T00:15:00.719Z","type":"message"}
{"nick":"f32","message":"joepie91: we are literally talking about automating everything from your database, to your service / message endpoints, to even dependency injection / configuration requirements, to rich auto documentation, to everything","date":"2017-11-25T00:15:23.330Z","type":"message"}
{"nick":"joepie91","message":"deltab: if we're going to design the language to compensate for people being unwilling to set up a development environment, we're going to have much bigger problems than decorators","date":"2017-11-25T00:15:23.555Z","type":"message"}
{"nick":"earendel2","message":"however.","date":"2017-11-25T00:15:24.536Z","type":"message"}
{"nick":"joepie91","message":"f32: yet I don't see how any of this requires core lang support","date":"2017-11-25T00:15:45.192Z","type":"message"}
{"nick":"rorro","date":"2017-11-25T00:15:47.329Z","type":"join"}
{"nick":"joepie91","message":"f32: this is the thing, I'm not disputing that better tooling should exist","date":"2017-11-25T00:16:01.217Z","type":"message"}
{"nick":"zsoc","message":"You mean you don't like having your editor/environment/IDE chosen for you by your choice of framework? :thinking:","date":"2017-11-25T00:16:02.581Z","type":"message"}
{"nick":"earendel2","message":"thats stubborn.","date":"2017-11-25T00:16:09.321Z","type":"message"}
{"nick":"joepie91","message":"I'm just disputing that a core lang change is needed (or desirable) to get there","date":"2017-11-25T00:16:09.666Z","type":"message"}
{"nick":"dommel","date":"2017-11-25T00:16:11.317Z","type":"join"}
{"nick":"ivan_the_monkey","reason":"Ping timeout: 248 seconds","date":"2017-11-25T00:16:33.318Z","type":"quit"}
{"nick":"zsoc","message":"My problem with this argument is that you're arguing Visual Studio is a good thing.","date":"2017-11-25T00:16:44.479Z","type":"message"}
{"nick":"f32","message":"joepie91: i am beginning to suspect you're enjoying my 5 year struggle to build professional enterprise software in JS","date":"2017-11-25T00:16:49.350Z","type":"message"}
{"nick":"Technodrome","date":"2017-11-25T00:17:03.070Z","type":"join"}
{"nick":"zsoc","message":"\"professional enterprise software\" often times describes a process, more than a result","date":"2017-11-25T00:17:15.402Z","type":"message"}
{"nick":"earendel2","message":"you wouldnt need to agree. yet to pretend that you dont see how you would need to change the language requires a serious comiittment not to understand i think. and then the debate is useless anyway.","date":"2017-11-25T00:17:26.580Z","type":"message"}
{"nick":"joepie91","message":"f32: not really, I just feel like you've been taking the wrong approach to this","date":"2017-11-25T00:17:30.937Z","type":"message"}
{"nick":"zsoc","message":"and using the same business processes to work with JS as opposed to Java or C# isn't really possible","date":"2017-11-25T00:17:33.438Z","type":"message"}
{"nick":"mooe_","reason":"Quit: Connection closed for inactivity","date":"2017-11-25T00:17:35.212Z","type":"quit"}
{"nick":"f32","message":"zsoc: that and avoiding \"balls of mud\"","date":"2017-11-25T00:17:35.973Z","type":"message"}
{"nick":"dommel","reason":"Client Quit","date":"2017-11-25T00:17:42.011Z","type":"quit"}
{"nick":"spacewal1","reason":"Ping timeout: 268 seconds","date":"2017-11-25T00:17:44.901Z","type":"quit"}
{"nick":"electronicmaji","date":"2017-11-25T00:18:03.262Z","type":"join"}
{"nick":"upperdeck","reason":"Ping timeout: 255 seconds","date":"2017-11-25T00:18:09.116Z","type":"quit"}
{"nick":"Zexorz","reason":"Read error: Connection reset by peer","date":"2017-11-25T00:18:09.415Z","type":"quit"}
{"nick":"f32","message":"joepie91: you won't ever understand without diving into a large distributed application developed with languages like C# to really appreciate all the things node is missing","date":"2017-11-25T00:18:19.509Z","type":"message"}
{"nick":"joepie91","message":"f32: like, I'm getting the impression - not just from this discussion but also from past encounters - that you're trying to stubbornly stick with patterns and processes from other languages, and expect JS to start supporting them; as opposed to learning how to accomplish your goals idiomatically in JS","date":"2017-11-25T00:18:20.869Z","type":"message"}
{"nick":"joepie91","message":"which is not a great approach in *any* language","date":"2017-11-25T00:18:33.138Z","type":"message"}
{"nick":"horsey","reason":"Ping timeout: 248 seconds","date":"2017-11-25T00:18:41.317Z","type":"quit"}
{"nick":"joepie91","message":"f32: you say \"missing\", I say \"don't need\"","date":"2017-11-25T00:18:44.044Z","type":"message"}
{"nick":"f32","message":"joepie91: but i have been writing idiomatic JS for years","date":"2017-11-25T00:18:48.316Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T00:18:50.833Z","type":"join"}
{"nick":"joepie91","message":"Node.js is not C#","date":"2017-11-25T00:18:51.621Z","type":"message"}
{"nick":"joepie91","message":"if you want C# features, go use C# instead","date":"2017-11-25T00:18:55.052Z","type":"message"}
{"nick":"bradfordli123","reason":"Remote host closed the connection","date":"2017-11-25T00:19:12.981Z","type":"quit"}
{"nick":"joepie91","message":"JS and C# are different languages with different tradeoffs, and it's unreasonable to expect feature parity in that context","date":"2017-11-25T00:19:17.244Z","type":"message"}
{"nick":"f32","message":"joepie91: i don't use node because of JS, i use node as its a better fit for event driven systems","date":"2017-11-25T00:19:19.160Z","type":"message"}
{"nick":"joepie91","message":"I don't see why - afaik you can do event loops in C# just fine","date":"2017-11-25T00:19:34.135Z","type":"message"}
{"nick":"eckhardt","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-11-25T00:20:20.725Z","type":"quit"}
{"nick":"zsoc","message":"Eh... Tasks are uh... heavy","date":"2017-11-25T00:20:25.418Z","type":"message"}
{"nick":"zsoc","message":"in C#","date":"2017-11-25T00:20:28.084Z","type":"message"}
{"nick":"f32","message":"joepie91: there is a greater wealth of userland libraries that suit what i need to do, and node core is exactly what i need for most things anyway, the pain point is the JS aversion to providing hooks for development time automation","date":"2017-11-25T00:20:45.107Z","type":"message"}
{"nick":"zsoc","message":"At least I find that cognitively they tired me out","date":"2017-11-25T00:20:47.802Z","type":"message"}
{"nick":"iiie0","reason":"Ping timeout: 252 seconds","date":"2017-11-25T00:20:53.118Z","type":"quit"}
{"nick":"earendel2","message":"and i strongly agree with that analysis f32","date":"2017-11-25T00:21:15.060Z","type":"message"}
{"nick":"f32","message":"thank you, someone agrees \\o/","date":"2017-11-25T00:21:29.480Z","type":"message"}
{"nick":"joepie91","message":"f32: but why does JS need to change to fit your expectations?","date":"2017-11-25T00:21:35.340Z","type":"message"}
{"nick":"f32","message":"joepie91: JS needs to provide hooks to 1) support RTA is a more natural way, 2) provide those hooks for userland libraries to target for better automation","date":"2017-11-25T00:22:13.056Z","type":"message"}
{"nick":"earendel2","message":"i think its not so much because of js","date":"2017-11-25T00:22:32.436Z","type":"message"}
{"nick":"joepie91","message":"f32: I don't think it needs to do either of those, no.","date":"2017-11-25T00:22:42.281Z","type":"message"}
{"nick":"earendel2","message":"its more due to lightweight REST APIs","date":"2017-11-25T00:22:49.157Z","type":"message"}
{"nick":"f32","message":"its more than just decorators, its going as far to provide some standard convention for describing \"designtypes\" that all userland libraries can apex around","date":"2017-11-25T00:22:57.165Z","type":"message"}
{"nick":"joepie91","message":"those just seem to be your expectations based on C#, but like I said, JS is not C# and there is a different set of tradeoffs","date":"2017-11-25T00:22:59.929Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2017-11-25T00:23:10.320Z","type":"quit"}
{"nick":"earendel2","message":"they are so fucking lightweight that you have to do it again and again from scaatch","date":"2017-11-25T00:23:14.023Z","type":"message"}
{"nick":"f32","message":"joepie91: my view is that JS is holding node back","date":"2017-11-25T00:23:19.384Z","type":"message"}
{"nick":"earendel2","message":"and that pisses me off indeed.","date":"2017-11-25T00:23:26.570Z","type":"message"}
{"nick":"upperdeck","reason":"Ping timeout: 240 seconds","date":"2017-11-25T00:23:27.855Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-11-25T00:23:41.878Z","type":"join"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T00:23:46.947Z","type":"quit"}
{"nick":"joepie91","message":"f32: I don't think it is, to be honest, I think it's just not fitting your expectations.","date":"2017-11-25T00:23:57.961Z","type":"message"}
{"nick":"earendel2","message":"you always have to open some manual and check how some dataformat or function signature needs to be implemented","date":"2017-11-25T00:24:02.239Z","type":"message"}
{"nick":"joepie91","message":"you're expecting it to swap out tradeoffs, it seems.","date":"2017-11-25T00:24:06.454Z","type":"message"}
{"nick":"earendel2","message":"and thats kinda annyoing.","date":"2017-11-25T00:24:07.829Z","type":"message"}
{"nick":"f32","message":"joepie91: you can look at things through a microscope and say (this library solves this thing), or you can look at the bigger picture and say (this small feature would enable so much)","date":"2017-11-25T00:24:21.261Z","type":"message"}
{"nick":"f32","message":"that feature being decorators","date":"2017-11-25T00:24:39.649Z","type":"message"}
{"nick":"joepie91","message":"f32: and in the latter case you'd be making the mistake of not looking at the costs.","date":"2017-11-25T00:24:46.153Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T00:24:49.864Z","type":"join"}
{"nick":"joepie91","message":"which you seem to have been doing throughout this discussion.","date":"2017-11-25T00:24:56.150Z","type":"message"}
{"nick":"f32","message":"joepie91: what do you feel those costs would be?","date":"2017-11-25T00:25:00.859Z","type":"message"}
{"nick":"earendel2","message":"and for that you dont need to change js much.. all you would need is some popular json scheme.. and we had none.. or had many but none very well thought through yet","date":"2017-11-25T00:25:03.873Z","type":"message"}
{"nick":"joepie91","message":"I've been repeatedly trying to point out that core lang additions and stdlib additions are extremely expensive","date":"2017-11-25T00:25:14.950Z","type":"message"}
{"nick":"deltab","action":"nods","date":"2017-11-25T00:25:36.502Z","type":"action"}
{"nick":"f32","message":"what costs do you see with the addition on decorators ?","date":"2017-11-25T00:25:41.415Z","type":"message"}
{"nick":"deltab","message":"it's another thing to be learned","date":"2017-11-25T00:25:53.386Z","type":"message"}
{"nick":"joepie91","message":"f32: more syntax and associated semantics to learn, more surface that runtime and tooling need to support, harder to reason about code because you need to take into account more affecting factors, the design must be supported in perpetuity by every other added feature, it can never be deprecated again, the design can't be changed once applied","date":"2017-11-25T00:26:10.094Z","type":"message"}
{"nick":"f32","message":"decorators can be offer as userland libs tho","date":"2017-11-25T00:26:10.205Z","type":"message"}
{"nick":"joepie91","message":"f32: there's a reason the Node.js standard library is almost frozen","date":"2017-11-25T00:26:26.108Z","type":"message"}
{"nick":"kim366","date":"2017-11-25T00:26:31.474Z","type":"join"}
{"nick":"ivan_the_monkey","date":"2017-11-25T00:26:34.417Z","type":"join"}
{"nick":"f32","message":"joepie91: but we are not talking about extending the node standard library at all","date":"2017-11-25T00:26:45.270Z","type":"message"}
{"nick":"f32","message":"we are talking about decorators","date":"2017-11-25T00:26:51.297Z","type":"message"}
{"nick":"joepie91","message":"you want to keep *as much as possible* in userland, because that means it's cheaper to modify and support (or not support)","date":"2017-11-25T00:26:52.111Z","type":"message"}
{"nick":"deltab","message":"it's another keyword or symbol to be added to the spec, parsers, code formatters, etc.","date":"2017-11-25T00:26:57.035Z","type":"message"}
{"nick":"joepie91","message":"f32: which is even worse","date":"2017-11-25T00:27:00.603Z","type":"message"}
{"nick":"joepie91","message":"because it requires a *language* change","date":"2017-11-25T00:27:03.597Z","type":"message"}
{"nick":"joepie91","message":"not just a single runtime stdlib change","date":"2017-11-25T00:27:07.999Z","type":"message"}
{"nick":"f32","message":"deltab: the runtime requirements for decorators is minimal","date":"2017-11-25T00:27:21.611Z","type":"message"}
{"nick":"earendel2","message":"decorators are pretty much like a function call .. one that is contextual and wouldnt demand changes in the source code","date":"2017-11-25T00:27:22.773Z","type":"message"}
{"nick":"earendel2","message":"its not that they are useless","date":"2017-11-25T00:27:29.889Z","type":"message"}
{"nick":"f32","message":"^","date":"2017-11-25T00:27:30.163Z","type":"message"}
{"nick":"earendel2","message":"they are also not the salvation to all problems","date":"2017-11-25T00:27:40.622Z","type":"message"}
{"nick":"joepie91","message":"earendel2: at which point... why not just use a function call?","date":"2017-11-25T00:27:44.175Z","type":"message"}
{"nick":"f32","message":"^","date":"2017-11-25T00:27:44.890Z","type":"message"}
{"nick":"deltab","message":"f32: every program that reads source code potentially needs to know about it","date":"2017-11-25T00:27:48.034Z","type":"message"}
{"nick":"f32","message":"joepie91: use async/await?","date":"2017-11-25T00:28:01.376Z","type":"message"}
{"nick":"earendel2","message":"joepie91: as i tried to pointed out.. for reuseable code","date":"2017-11-25T00:28:16.643Z","type":"message"}
{"nick":"joepie91","message":"f32: ?","date":"2017-11-25T00:28:19.713Z","type":"message"}
{"nick":"earendel2","message":"hence decorators","date":"2017-11-25T00:28:21.016Z","type":"message"}
{"nick":"joepie91","message":"earendel2: your code is just as reusable with function calls.","date":"2017-11-25T00:28:27.563Z","type":"message"}
{"nick":"earendel2","message":"you dont install some module to edit its code.","date":"2017-11-25T00:28:38.973Z","type":"message"}
{"nick":"earendel2","message":"if you dont agree on this im out.","date":"2017-11-25T00:28:49.641Z","type":"message"}
{"nick":"f32","message":"joepie91: i mean the \"why not just use a function call\" is comparible to turning a blind eye to async/await on the basis it can be handled 100% with promises","date":"2017-11-25T00:28:52.489Z","type":"message"}
{"nick":"earendel2","message":"i dare you;)","date":"2017-11-25T00:28:54.636Z","type":"message"}
{"nick":"joepie91","message":"f32: I don't use async/await and recommend against it, because it produces misleading code.","date":"2017-11-25T00:29:05.188Z","type":"message"}
{"nick":"earendel2","message":"you could of course wrap it.","date":"2017-11-25T00:29:16.326Z","type":"message"}
{"nick":"earendel2","message":"but its less nice.","date":"2017-11-25T00:29:23.139Z","type":"message"}
{"nick":"earendel2","message":"so.","date":"2017-11-25T00:29:27.601Z","type":"message"}
{"nick":"AtumT_","reason":"Remote host closed the connection","date":"2017-11-25T00:29:28.175Z","type":"quit"}
{"nick":"f32","message":"joepie91: not in my experience, its actually allowed for a greater level of async sophistication","date":"2017-11-25T00:29:35.628Z","type":"message"}
{"nick":"joepie91","message":"(not to mention that you end up with a weird mix of plain promise code and async/await because the actual scope of what async/await can support is super limited)","date":"2017-11-25T00:29:37.781Z","type":"message"}
{"nick":"earendel2","message":"you can the same way question all other nice-to-haves.","date":"2017-11-25T00:29:40.379Z","type":"message"}
{"nick":"joepie91","message":"f32: how does it?","date":"2017-11-25T00:30:01.109Z","type":"message"}
{"nick":"upperdeck","reason":"Ping timeout: 268 seconds","date":"2017-11-25T00:30:04.863Z","type":"quit"}
{"nick":"deltab","message":"there are costs and benefits, and the balance isn't always clear","date":"2017-11-25T00:30:17.698Z","type":"message"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-11-25T00:30:31.912Z","type":"quit"}
{"nick":"iiie0","date":"2017-11-25T00:30:41.787Z","type":"join"}
{"nick":"earendel2","message":"its not like calling for a .blink() method.","date":"2017-11-25T00:31:16.105Z","type":"message"}
{"nick":"f32","message":"joepie91: async/await if integrated around JS control flow constructs (like switch, for/while loops, if statments, even try / catch) its predictable, and would be challenging (and a bit messy) to write the same using promises alone","date":"2017-11-25T00:31:18.650Z","type":"message"}
{"nick":"f32","message":"*is integrated","date":"2017-11-25T00:31:25.264Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T00:31:25.356Z","type":"join"}
{"nick":"joepie91","message":"f32: JS' own sync try/catch is horrible, and I have yet to run into issues with control flow when writing plain Promises code.","date":"2017-11-25T00:31:55.322Z","type":"message"}
{"nick":"deltab","message":"when you simplify the mechanics of doing something, you make it easier to do, which makes more complex patterns comprehensible","date":"2017-11-25T00:32:13.419Z","type":"message"}
{"nick":"f32","message":"joepie91: well regardless, sometimes you need to try/catch","date":"2017-11-25T00:32:15.168Z","type":"message"}
{"nick":"joepie91","message":"f32: my experience is that the vast majority of people who claim that async/await makes for nicer async code, never wrote sane Promises code in the first place and never learned how to write it correctly.","date":"2017-11-25T00:32:16.472Z","type":"message"}
{"nick":"joepie91","message":"f32: for which you want Bluebird .catch, since that actually allows you to filter by error type/properties.","date":"2017-11-25T00:32:30.232Z","type":"message"}
{"nick":"f32","message":"joepie91: do you put me into that category?","date":"2017-11-25T00:32:31.142Z","type":"message"}
{"nick":"joepie91","message":"f32: I don't know, I haven't seen your plain Promises code I don't think.","date":"2017-11-25T00:32:43.073Z","type":"message"}
{"nick":"f32","message":"[0, 1, 2, 3].reduce((acc, c) => acc.then(c), Promise.resolve())","date":"2017-11-25T00:33:18.590Z","type":"message"}
{"nick":"f32","message":"vs","date":"2017-11-25T00:33:20.868Z","type":"message"}
{"nick":"joepie91","message":"that's invalid code, I'm pretty sure","date":"2017-11-25T00:33:48.972Z","type":"message"}
{"nick":"f32","message":"where [0, 1, 2, 3] are promises (of course)","date":"2017-11-25T00:33:49.085Z","type":"message"}
{"nick":"joepie91","message":"right","date":"2017-11-25T00:33:52.077Z","type":"message"}
{"nick":"joepie91","message":"well, not Promises I hope","date":"2017-11-25T00:33:57.822Z","type":"message"}
{"nick":"joepie91","message":"because then it's still wrong","date":"2017-11-25T00:34:00.162Z","type":"message"}
{"nick":"earendel2","message":"if(await a() && await b()) c(); // let me help you out","date":"2017-11-25T00:34:09.255Z","type":"message"}
{"nick":"joepie91","message":".then takes a callback, not a Promise","date":"2017-11-25T00:34:10.085Z","type":"message"}
{"nick":"f32","message":"joepie91: the principle being that you need to run these off in sequence","date":"2017-11-25T00:34:14.780Z","type":"message"}
{"nick":"joepie91","message":"which you can already do with .then; needing to run a dynamic list of promise-returning callbacks in sequence is an extremely rare case","date":"2017-11-25T00:34:43.144Z","type":"message"}
{"nick":"joepie91","message":"most cases where people try to do this are wrong","date":"2017-11-25T00:34:53.349Z","type":"message"}
{"nick":"f32","message":"joepie91: contrast this with the idiomatic async/await, and ask your average user which is easier","date":"2017-11-25T00:34:59.662Z","type":"message"}
{"nick":"joepie91","message":"see above","date":"2017-11-25T00:35:05.404Z","type":"message"}
{"nick":"earendel2","message":"consider also the benefits from short-circuit logic","date":"2017-11-25T00:35:14.727Z","type":"message"}
{"nick":"joepie91","message":"your async/await code would actually look pretty similar","date":"2017-11-25T00:35:24.684Z","type":"message"}
{"nick":"joepie91","message":"given a dynamic list","date":"2017-11-25T00:35:26.605Z","type":"message"}
{"nick":"joepie91","message":"so I don't see how that's any better here","date":"2017-11-25T00:35:34.957Z","type":"message"}
{"nick":"earendel2","message":"also i do use chaining from inside of async functions","date":"2017-11-25T00:35:40.368Z","type":"message"}
{"nick":"earendel2","message":"when i dont need to await the result","date":"2017-11-25T00:35:49.752Z","type":"message"}
{"nick":"f32","message":"joepie91: let me code some async/await, and show me the idiomatic promise equivalent","date":"2017-11-25T00:35:54.453Z","type":"message"}
{"nick":"joepie91","message":"earendel2: short-circuit logic is generally a terrible idea, it produces misleading code.","date":"2017-11-25T00:35:57.116Z","type":"message"}
{"nick":"joepie91","message":"f32: sure","date":"2017-11-25T00:36:01.571Z","type":"message"}
{"nick":"joepie91","message":"earendel2: (some exceptions do exist)","date":"2017-11-25T00:36:13.863Z","type":"message"}
{"nick":"upperdeck","reason":"Ping timeout: 260 seconds","date":"2017-11-25T00:36:17.394Z","type":"quit"}
{"nick":"earendel2","message":"joepie91: you cant avoid it even if you wish","date":"2017-11-25T00:36:26.822Z","type":"message"}
{"nick":"earendel2","message":"i dont mean its magical use","date":"2017-11-25T00:36:40.951Z","type":"message"}
{"nick":"earendel2","message":"i mean it in the classical way","date":"2017-11-25T00:36:50.261Z","type":"message"}
{"nick":"joepie91","message":"you might be thinking of the exceptions then; in which case you still have the problem that you've sequentialized something that, in idiomatic promise use, would have been parallelized","date":"2017-11-25T00:37:13.314Z","type":"message"}
{"nick":"earendel2","message":"<earendel2>if(await a() && await b()) c(); // wouldnt execute b() if a() is false, right?","date":"2017-11-25T00:37:19.571Z","type":"message"}
{"nick":"joepie91","message":"correct; but you should not write code that relies on that, because it is non-obvious at first glance to a reader","date":"2017-11-25T00:37:45.393Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T00:37:55.361Z","type":"join"}
{"nick":"earendel2","message":"if you want to do that with promises you would probably use promise.all() .. and then check a && b","date":"2017-11-25T00:37:56.710Z","type":"message"}
{"nick":"joepie91","message":"yes; the await alternative you're presenting is sequential, the Promise.all is parallel","date":"2017-11-25T00:38:16.737Z","type":"message"}
{"nick":"joepie91","message":"so they are not equivalent","date":"2017-11-25T00:38:19.457Z","type":"message"}
{"nick":"titankiller","date":"2017-11-25T00:38:33.682Z","type":"join"}
{"nick":"earendel2","message":"no.","date":"2017-11-25T00:38:38.273Z","type":"message"}
{"nick":"earendel2","message":"when u dont need to execute b .. and b is like 3 days of work .. the first variant is faster","date":"2017-11-25T00:39:09.979Z","type":"message"}
{"nick":"earendel2","message":"you can do that with promises, but the code will be significantly harder to read.. it will be more code","date":"2017-11-25T00:39:34.589Z","type":"message"}
{"nick":"joepie91","message":"earendel2: sure, but in that scenario you should not have been using Promise.all either","date":"2017-11-25T00:39:35.691Z","type":"message"}
{"nick":"ivan_the_monkey","reason":"Ping timeout: 260 seconds","date":"2017-11-25T00:39:47.308Z","type":"quit"}
{"nick":"joepie91","message":"and writing the logic like that is a bad idea","date":"2017-11-25T00:39:50.310Z","type":"message"}
{"nick":"joepie91","message":"with await, too","date":"2017-11-25T00:39:53.856Z","type":"message"}
{"nick":"joepie91","message":"because it's not immediately obvious to the reader whether/when b will execute","date":"2017-11-25T00:40:05.093Z","type":"message"}
{"nick":"earendel2","message":"right.. you can try it out .. just write that line without async/await","date":"2017-11-25T00:40:09.757Z","type":"message"}
{"nick":"kim366","reason":"Read error: Connection reset by peer","date":"2017-11-25T00:40:26.668Z","type":"quit"}
{"nick":"dommel","date":"2017-11-25T00:40:49.319Z","type":"join"}
{"nick":"earendel2","message":"i think its like the easiest way to show off its benefits .. especiallly when using conditions it scores","date":"2017-11-25T00:40:58.290Z","type":"message"}
{"nick":"joepie91","message":"earendel2: in practice, complex conditionals like that are extremely rare","date":"2017-11-25T00:41:48.546Z","type":"message"}
{"nick":"f32","message":"joepie91: https://pastebin.com/2sGsnQUF make this better with pure promises","date":"2017-11-25T00:41:50.403Z","type":"message"}
{"nick":"jscriptStudent","date":"2017-11-25T00:42:03.337Z","type":"join"}
{"nick":"earendel2","message":"joepie91: tho that one was not really complex ;)","date":"2017-11-25T00:42:19.039Z","type":"message"}
{"nick":"dommel","reason":"Client Quit","date":"2017-11-25T00:42:38.962Z","type":"quit"}
{"nick":"f32","message":"joepie91: had a typo https://pastebin.com/ZAUpz0Xj","date":"2017-11-25T00:42:47.182Z","type":"message"}
{"nick":"joepie91","message":"was about to say :)","date":"2017-11-25T00:43:01.068Z","type":"message"}
{"nick":"f32","message":"joepie91: if you can make this more understandable and terse with promises, all credit to you","date":"2017-11-25T00:43:11.225Z","type":"message"}
{"nick":"earendel2","message":"i think async coding has its hooks.. and promises are nice.. also as i said i use chains from inside of async functions too","date":"2017-11-25T00:43:18.202Z","type":"message"}
{"nick":"joepie91","message":"f32: I'm going to ignore the 'terse' requirement, because that's not a valid requirement for code quality","date":"2017-11-25T00:43:27.752Z","type":"message"}
{"nick":"piyer","date":"2017-11-25T00:43:28.644Z","type":"join"}
{"nick":"f32","message":"joepie91: idiomatic is fine","date":"2017-11-25T00:43:39.713Z","type":"message"}
{"nick":"e14","date":"2017-11-25T00:43:53.511Z","type":"join"}
{"nick":"zsoc","message":"can't.. you just use recursion + Promise.delay() ?","date":"2017-11-25T00:43:54.120Z","type":"message"}
{"nick":"joepie91","message":"also, this is a very artificial example","date":"2017-11-25T00:43:59.403Z","type":"message"}
{"nick":"f32","message":"joepie91: i was going to be mean and add a while((await queuelength()) > 0) {} example in there, but thought it was a bit much","date":"2017-11-25T00:44:20.962Z","type":"message"}
{"nick":"joepie91","message":"to the point of not being similar to real-world code at all, and being explicitly designed to be difficult to write without async/await","date":"2017-11-25T00:44:35.929Z","type":"message"}
{"nick":"melvster","reason":"Remote host closed the connection","date":"2017-11-25T00:45:00.178Z","type":"quit"}
{"nick":"upperdeck","reason":"Ping timeout: 260 seconds","date":"2017-11-25T00:45:02.342Z","type":"quit"}
{"nick":"earendel2","message":"async blah() { var user=await fetchUser();  displayNote(user).then(startAnimation).then(fadeoff); return user; }","date":"2017-11-25T00:45:16.013Z","type":"message"}
{"nick":"earendel2","message":"or sth","date":"2017-11-25T00:45:17.257Z","type":"message"}
{"nick":"earendel2","message":"in fact it seems to me every function should be \"async\"","date":"2017-11-25T00:45:46.155Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T00:45:50.536Z","type":"join"}
{"nick":"f32","message":"joepie91: the example demonstrates where async/await leads to more easy to reason able sophisticated async, id expect promises on their own to be equally expressive","date":"2017-11-25T00:45:57.076Z","type":"message"}
{"nick":"earendel2","message":"incl. the main module body","date":"2017-11-25T00:46:00.870Z","type":"message"}
{"nick":"melvster","date":"2017-11-25T00:46:03.318Z","type":"join"}
{"nick":"joepie91","message":"f32: ... but only in an extremely artificial situation that does not resemble real-world code, which makes it virtually useless as an example or challenge","date":"2017-11-25T00:46:28.246Z","type":"message"}
{"nick":"f32","message":"joepie91: not at all, i have had to write queue processing code exactly like this, with several other requirements placed on it","date":"2017-11-25T00:46:57.707Z","type":"message"}
{"nick":"joepie91","message":"f32: so why not show me the actual queue processing code, then?","date":"2017-11-25T00:47:11.417Z","type":"message"}
{"nick":"doodadjs","message":"My problem with async is it swallows Promises coming from other implementations","date":"2017-11-25T00:47:31.908Z","type":"message"}
{"nick":"f32","message":"joepie91: why would i need to, is this example too difficult ?","date":"2017-11-25T00:47:53.820Z","type":"message"}
{"nick":"piyer","reason":"Ping timeout: 248 seconds","date":"2017-11-25T00:48:01.318Z","type":"quit"}
{"nick":"joepie91","message":"f32: like I said: this example is unrealistic and specifically designed to make it look bad","date":"2017-11-25T00:48:09.658Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-11-25T00:48:13.154Z","type":"quit"}
{"nick":"dman777_alter","date":"2017-11-25T00:48:25.159Z","type":"join"}
{"nick":"joepie91","message":"you're asking me to play a rigged game","date":"2017-11-25T00:48:28.621Z","type":"message"}
{"nick":"GreenJello","message":"doodadjs, that's usually a good thing","date":"2017-11-25T00:48:32.933Z","type":"message"}
{"nick":"GreenJello","message":"doodadjs, you get consistent results, and you can change a promise to another implementation if/when you need to","date":"2017-11-25T00:48:56.565Z","type":"message"}
{"nick":"doodadjs","message":"GreenJello: what if that impl has cancellation by example ?","date":"2017-11-25T00:49:27.964Z","type":"message"}
{"nick":"GreenJello","message":"doodadjs, I'm not very familiar with the promise cancelation proposals","date":"2017-11-25T00:49:51.496Z","type":"message"}
{"nick":"topher","date":"2017-11-25T00:50:18.041Z","type":"join"}
{"nick":"earendel2","message":"i think cancelling promises is a bad idea..","date":"2017-11-25T00:50:20.192Z","type":"message"}
{"nick":"electronicmaji","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-11-25T00:50:27.887Z","type":"quit"}
{"nick":"doodadjs","action":"definitively has just bad ideas :)","date":"2017-11-25T00:50:46.002Z","type":"action"}
{"nick":"topher","reason":"Client Quit","date":"2017-11-25T00:51:13.431Z","type":"quit"}
{"nick":"earendel2","message":"haha.. well..if you need such behavior you should implement some eventemitter .. and you can still wrap some promises on its handlers","date":"2017-11-25T00:51:26.454Z","type":"message"}
{"nick":"zsoc","message":"ecma thinks cancelling promises is also a bad idea","date":"2017-11-25T00:51:35.714Z","type":"message"}
{"nick":"joepie91","message":"(ecma is right on that)","date":"2017-11-25T00:51:44.688Z","type":"message"}
{"nick":"earendel2","message":"then you can decide if oncancel is resolved or rejected","date":"2017-11-25T00:51:52.468Z","type":"message"}
{"nick":"doodadjs","message":"zsoc: was not implementors who rejected the proposal ?","date":"2017-11-25T00:52:16.055Z","type":"message"}
{"nick":"earendel2","message":"as the cancelling itself must be implemented on its own anyway","date":"2017-11-25T00:52:17.990Z","type":"message"}
{"nick":"f32","message":"joepie91: https://pastebin.com/CbAbVx7t","date":"2017-11-25T00:52:30.242Z","type":"message"}
{"nick":"joepie91","message":"f32: I've given your rigged game a shot anyway, and I think the logic is the same: https://gist.github.com/joepie91/3e905cbee9677048b27a3fcee1fd297c (although your logic is a bit weird, iteration number + 1?)","date":"2017-11-25T00:53:03.022Z","type":"message"}
{"nick":"f32","message":"joepie91: very rough looking queue processing code","date":"2017-11-25T00:53:05.092Z","type":"message"}
{"nick":"upperdeck","reason":"Ping timeout: 240 seconds","date":"2017-11-25T00:53:05.521Z","type":"quit"}
{"nick":"joepie91","message":"looking","date":"2017-11-25T00:53:11.395Z","type":"message"}
{"nick":"doodadjs","message":"anyway I didn't like that proposal because of try {...} else {...} instead of try {...} catch(Canceled ex) {...}","date":"2017-11-25T00:53:49.702Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T00:53:53.091Z","type":"join"}
{"nick":"f32","message":"joepie91: that example would be typical of a end user trying to process a queue on a polling scheme using async/await","date":"2017-11-25T00:54:00.081Z","type":"message"}
{"nick":"doodadjs","message":"* I mean (CanceledError ex)","date":"2017-11-25T00:54:11.987Z","type":"message"}
{"nick":"f32","message":"joepie91: we assume the existence of \"queue\" and \"deadletter\"","date":"2017-11-25T00:54:20.190Z","type":"message"}
{"nick":"f32","message":"and \"delay\" from the previous example","date":"2017-11-25T00:54:27.489Z","type":"message"}
{"nick":"dman777_alter","message":"f32: its best not to mutate memory with push","date":"2017-11-25T00:54:28.723Z","type":"message"}
{"nick":"joepie91","message":"f32: what kind of thing is `deadletter`?","date":"2017-11-25T00:54:38.315Z","type":"message"}
{"nick":"f32","message":"joepie91: failed messages for pushed into a dead-letter store","date":"2017-11-25T00:54:56.989Z","type":"message"}
{"nick":"f32","message":"*get","date":"2017-11-25T00:55:00.970Z","type":"message"}
{"nick":"f32","message":"its some persistence layer, its async","date":"2017-11-25T00:55:12.374Z","type":"message"}
{"nick":"joepie91","message":"and deadletter.push actually returns a promise?","date":"2017-11-25T00:55:13.466Z","type":"message"}
{"nick":"f32","message":"yes","date":"2017-11-25T00:55:20.445Z","type":"message"}
{"nick":"f32","message":"deadletter is a backing store of some kind","date":"2017-11-25T00:55:28.846Z","type":"message"}
{"nick":"piyer","date":"2017-11-25T00:55:47.581Z","type":"join"}
{"nick":"joepie91","message":"okay","date":"2017-11-25T00:56:04.588Z","type":"message"}
{"nick":"f32","message":"joepie91: ive left out requirements like message retry, and flags to cancel the while loop","date":"2017-11-25T00:56:09.649Z","type":"message"}
{"nick":"zsoc","message":"here, use my Promise.wait implementation: https://gist.github.com/jkantr/31bdbb99f684325800fd65b51f8ff5f6 xDDDD","date":"2017-11-25T00:56:16.149Z","type":"message"}
{"nick":"f32","message":"so this is like the minimal minimal minimal baseline requirement joepie91","date":"2017-11-25T00:56:25.633Z","type":"message"}
{"nick":"joepie91","message":"f32: your pastebin looks wrong; if element is undefined it still processes it anyway","date":"2017-11-25T00:56:34.928Z","type":"message"}
{"nick":"joepie91","message":"it just delays first","date":"2017-11-25T00:56:41.422Z","type":"message"}
{"nick":"f32","message":"of, your right, imagine there is a 'continue' there","date":"2017-11-25T00:56:58.146Z","type":"message"}
{"nick":"f32","message":"ill update","date":"2017-11-25T00:57:00.277Z","type":"message"}
{"nick":"joepie91","message":"alright :)","date":"2017-11-25T00:57:12.232Z","type":"message"}
{"nick":"f32","message":"https://pastebin.com/xfiGm7y0","date":"2017-11-25T00:57:29.085Z","type":"message"}
{"nick":"Cohedrin","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T00:57:35.602Z","type":"quit"}
{"nick":"kakashiAL","date":"2017-11-25T00:57:47.562Z","type":"join"}
{"nick":"alexweissman","date":"2017-11-25T00:58:14.577Z","type":"join"}
{"nick":"f32","message":"joepie91: both of these examples are not artificial in the slightest btw, they are examples of code you would see in the wild","date":"2017-11-25T00:59:39.632Z","type":"message"}
{"nick":"f32","message":"and they are expressed trivially with async/await","date":"2017-11-25T00:59:56.933Z","type":"message"}
{"nick":"piyer","reason":"Ping timeout: 240 seconds","date":"2017-11-25T01:00:02.126Z","type":"quit"}
{"nick":"upperdeck","reason":"Ping timeout: 240 seconds","date":"2017-11-25T01:00:42.059Z","type":"quit"}
{"nick":"joepie91","message":"f32: I maintain that the first example was artificial; the second is not :P","date":"2017-11-25T01:01:00.126Z","type":"message"}
{"nick":"joepie91","message":"f32: https://gist.github.com/joepie91/95e14f0f746b215ffaf0922a13b1a1fa","date":"2017-11-25T01:01:05.011Z","type":"message"}
{"nick":"joepie91","message":"er, sec","date":"2017-11-25T01:01:18.789Z","type":"message"}
{"nick":"joepie91","message":"f32: fixed, F5","date":"2017-11-25T01:01:34.242Z","type":"message"}
{"nick":"kroogs","date":"2017-11-25T01:01:47.318Z","type":"join"}
{"nick":"upperdeck","date":"2017-11-25T01:01:55.931Z","type":"join"}
{"nick":"f32","message":"sure, and now ask, of the two implementations, which is more terse, and easier to reason about?","date":"2017-11-25T01:01:58.953Z","type":"message"}
{"nick":"f32","message":"which is less likely to confuse someone?","date":"2017-11-25T01:02:18.310Z","type":"message"}
{"nick":"joepie91","message":"f32: like I said, I'm ignoring the 'terse' requirement, which is irrelevant in code quality (and often actually makes code quality *worse*)","date":"2017-11-25T01:02:38.076Z","type":"message"}
{"nick":"f32","message":"you can ask the channel if you wish, but we probably know the answer already right?","date":"2017-11-25T01:02:38.188Z","type":"message"}
{"nick":"joepie91","message":"f32: they are approximately equivalently easy to reason about; except the async/await versions make it non-obvious at a glance where the async 'boundaries' are","date":"2017-11-25T01:03:00.935Z","type":"message"}
{"nick":"joepie91","message":"which is a problem","date":"2017-11-25T01:03:11.119Z","type":"message"}
{"nick":"titankiller","reason":"Remote host closed the connection","date":"2017-11-25T01:03:30.646Z","type":"quit"}
{"nick":"f32","message":"we expect a promise continuation at each await, with the left side being passed on a imagined .then()","date":"2017-11-25T01:04:00.271Z","type":"message"}
{"nick":"titankiller","date":"2017-11-25T01:04:04.069Z","type":"join"}
{"nick":"f32","message":"joepie91: which is quite easy to fathom","date":"2017-11-25T01:04:18.533Z","type":"message"}
{"nick":"joepie91","message":"f32: emphasis: \"at a glance\"","date":"2017-11-25T01:04:31.362Z","type":"message"}
{"nick":"joepie91","message":"skimmability is a critical metric of code; async/await fails that","date":"2017-11-25T01:04:37.995Z","type":"message"}
{"nick":"joepie91","message":"whether you can understand it if you read it character-by-character is irrelevant there","date":"2017-11-25T01:04:49.619Z","type":"message"}
{"nick":"joepie91","message":"the problem is poor skimmability","date":"2017-11-25T01:04:52.988Z","type":"message"}
{"nick":"joepie91","message":"you'll spend the vast majority of your time reading code trying to infer structure by skimming, not reading line-by-line","date":"2017-11-25T01:05:19.914Z","type":"message"}
{"nick":"joepie91","message":"so that is a critical thing to accommodate","date":"2017-11-25T01:05:25.530Z","type":"message"}
{"nick":"f32","message":"joepie91: you should ask the channel which is easier to \"skim\" through and grok","date":"2017-11-25T01:05:30.091Z","type":"message"}
{"nick":"joepie91","message":"the channel is free to answer.","date":"2017-11-25T01:05:36.591Z","type":"message"}
{"nick":"joepie91","message":"but I can tell you now that missing the obvious 'that looks like a callback' clue will make people more often misinterpret where the async boundaries are","date":"2017-11-25T01:06:21.648Z","type":"message"}
{"nick":"f32","message":"i don't know how you can look at both implementations and say the promise varient is easier to skim through","date":"2017-11-25T01:07:25.510Z","type":"message"}
{"nick":"plexigras","date":"2017-11-25T01:07:31.288Z","type":"join"}
{"nick":"charmander","message":"oh, which implementations are being compared?","date":"2017-11-25T01:08:27.047Z","type":"message"}
{"nick":"titankiller","reason":"Ping timeout: 255 seconds","date":"2017-11-25T01:08:32.981Z","type":"quit"}
{"nick":"f32","message":"you've had to invert everything, you're expecting the end user to understand .try(), the loop is now recursive (instead of a simple while(true)) and there its quite all over really, its not bad or anything, its the best one could do given the task","date":"2017-11-25T01:09:02.932Z","type":"message"}
{"nick":"earendel2","message":"seems you enjoy your disagreements today","date":"2017-11-25T01:09:06.447Z","type":"message"}
{"nick":"earendel2","action":"is a little bit jealous","date":"2017-11-25T01:09:13.212Z","type":"action"}
{"nick":"f32","message":"joepie91: the best of a bad situation","date":"2017-11-25T01:09:28.987Z","type":"message"}
{"nick":"joepie91","message":"f32: you can stop the condescending remarks now.","date":"2017-11-25T01:09:37.375Z","type":"message"}
{"nick":"f32","message":"joepie91: i was complementing you tho","date":"2017-11-25T01:09:47.167Z","type":"message"}
{"nick":"justicefries","date":"2017-11-25T01:09:47.733Z","type":"join"}
{"nick":"f32","message":"you're not reading what im saying","date":"2017-11-25T01:09:54.429Z","type":"message"}
{"nick":"joepie91","message":"yeah, no, I'm not going to play \"backhanded compliment\" games","date":"2017-11-25T01:09:57.396Z","type":"message"}
{"nick":"Sven_vB","message":"oh, code judgement? lemme see too!","date":"2017-11-25T01:10:21.869Z","type":"message"}
{"nick":"f32","message":"joepie91: which part did you take as a back handed compliment ? im just saying, you've done the absolute best that could be done","date":"2017-11-25T01:10:45.807Z","type":"message"}
{"nick":"charmander","message":"is the current comparison https://pastebin.com/xfiGm7y0 and https://gist.github.com/joepie91/95e14f0f746b215ffaf0922a13b1a1fa ?","date":"2017-11-25T01:10:50.195Z","type":"message"}
{"nick":"kroogs","reason":"Ping timeout: 248 seconds","date":"2017-11-25T01:10:57.319Z","type":"quit"}
{"nick":"Cohedrin","date":"2017-11-25T01:11:00.284Z","type":"join"}
{"nick":"joepie91","message":"\"its not bad or anything, its the best one could do given the task\"","date":"2017-11-25T01:11:02.387Z","type":"message"}
{"nick":"joepie91","message":"this comes across *extremely* backhanded","date":"2017-11-25T01:11:16.206Z","type":"message"}
{"nick":"f32","message":"yes, its not bad, i couldn't do any better either","date":"2017-11-25T01:11:22.785Z","type":"message"}
{"nick":"joepie91","message":"charmander: that's one of the two, yes","date":"2017-11-25T01:11:37.100Z","type":"message"}
{"nick":"leptone","date":"2017-11-25T01:11:38.664Z","type":"join"}
{"nick":"Sven_vB","message":"why \"void 0\" instead of undefined?","date":"2017-11-25T01:11:55.589Z","type":"message"}
{"nick":"f32","message":"i disagree that the promise version is more skimmable, but that maybe comes down to your familiarity with async/await","date":"2017-11-25T01:12:06.110Z","type":"message"}
{"nick":"joepie91","message":"charmander: the other is https://pastebin.com/ZAUpz0Xj vs. https://gist.github.com/joepie91/3e905cbee9677048b27a3fcee1fd297c (with the note that the original async/await code is unrealistic and artificially designed to make non-async/await code difficult)(","date":"2017-11-25T01:12:11.777Z","type":"message"}
{"nick":"theWhisper_","reason":"Ping timeout: 260 seconds","date":"2017-11-25T01:12:27.420Z","type":"quit"}
{"nick":"joepie91","message":"Sven_vB: `undefined` can be redefined technically, `void 0` always produces the 'real' undefined","date":"2017-11-25T01:12:30.867Z","type":"message"}
{"nick":"dommel","date":"2017-11-25T01:12:34.333Z","type":"join"}
{"nick":"joepie91","message":"stupid JS oddity","date":"2017-11-25T01:12:46.829Z","type":"message"}
{"nick":"f32","action":"suggests a channel vote 1) for async/await 2) for promises, with the vote based on readability and ease of understanding","date":"2017-11-25T01:12:59.913Z","type":"action"}
{"nick":"deltab","message":"Sven_vB: also it's shorter","date":"2017-11-25T01:13:00.027Z","type":"message"}
{"nick":"joepie91","message":"deltab: that's why the minifiers use it I'm sure :P","date":"2017-11-25T01:13:09.904Z","type":"message"}
{"nick":"Sven_vB","message":"joepie91, oh ok, I somehow assumed this was in a sane code base","date":"2017-11-25T01:13:11.235Z","type":"message"}
{"nick":"joepie91","message":"but not relevant to a human dev","date":"2017-11-25T01:13:12.854Z","type":"message"}
{"nick":"deltab","action":"nods","date":"2017-11-25T01:13:15.338Z","type":"action"}
{"nick":"upperdeck","reason":"Ping timeout: 255 seconds","date":"2017-11-25T01:13:30.001Z","type":"quit"}
{"nick":"joepie91","message":"Sven_vB: given that any module could /technically/ modify `undefined` without you knowing it... :)","date":"2017-11-25T01:13:30.945Z","type":"message"}
{"nick":"piyer","date":"2017-11-25T01:13:41.645Z","type":"join"}
{"nick":"Sven_vB","message":"deltab, it requires evaluation in the readers' heads though.","date":"2017-11-25T01:13:44.427Z","type":"message"}
{"nick":"deltab","message":"yeah, I wouldn't use it","date":"2017-11-25T01:13:53.377Z","type":"message"}
{"nick":"charmander","message":"joepie91: it can’t; it would have to be in scope","date":"2017-11-25T01:13:54.287Z","type":"message"}
{"nick":"charmander","message":"as in `const undefined = …`","date":"2017-11-25T01:13:57.760Z","type":"message"}
{"nick":"charmander","message":"the undefined property is read-only and non-configurable","date":"2017-11-25T01:14:05.985Z","type":"message"}
{"nick":"joepie91","message":"charmander: afaik you can just do `global.undefined = 42;`, or at least I remember that working in the past","date":"2017-11-25T01:14:09.340Z","type":"message"}
{"nick":"joepie91","message":"hm, perhaps that changed","date":"2017-11-25T01:14:13.511Z","type":"message"}
{"nick":"charmander","message":"it did in ES3","date":"2017-11-25T01:14:13.890Z","type":"message"}
{"nick":"Sven_vB","message":"didn't strict mode solve that undefined redef problem?","date":"2017-11-25T01:14:17.503Z","type":"message"}
{"nick":"charmander","message":"ES5 solved it","date":"2017-11-25T01:14:23.844Z","type":"message"}
{"nick":"charmander","message":"strict mode makes assigning to it throw","date":"2017-11-25T01:14:26.818Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T01:14:29.933Z","type":"join"}
{"nick":"dommel","reason":"Client Quit","date":"2017-11-25T01:14:29.933Z","type":"quit"}
{"nick":"joepie91","message":"really? I recall being able to do this during the ES5 era","date":"2017-11-25T01:14:32.384Z","type":"message"}
{"nick":"charmander","message":"browsers hadn’t caught up?","date":"2017-11-25T01:14:39.810Z","type":"message"}
{"nick":"joepie91","message":"maybe that was an incomplete ES5 implementation though, idk","date":"2017-11-25T01:14:42.775Z","type":"message"}
{"nick":"Sven_vB","message":"where does the deadletter come from and what is it?","date":"2017-11-25T01:14:51.948Z","type":"message"}
{"nick":"darkSeid_","message":"sorry for being a noob here but what is `(n: number)`, is it typechecking or smth","date":"2017-11-25T01:14:53.150Z","type":"message"}
{"nick":"charmander","message":"or it was inside a (function (undefined) {})() as was popular for a while?","date":"2017-11-25T01:14:55.455Z","type":"message"}
{"nick":"deltab","message":"darkSeid_: TypeScript?","date":"2017-11-25T01:15:05.520Z","type":"message"}
{"nick":"charmander","message":"darkSeid_: what’s the context?","date":"2017-11-25T01:15:07.543Z","type":"message"}
{"nick":"joepie91","message":"charmander: don't recall the details","date":"2017-11-25T01:15:09.907Z","type":"message"}
{"nick":"joepie91","message":"been a while","date":"2017-11-25T01:15:12.548Z","type":"message"}
{"nick":"charmander","message":"but yes. that was possible, now it isn’t","date":"2017-11-25T01:15:19.924Z","type":"message"}
{"nick":"joepie91","message":"having used JS for 14 years unfortunately means I have 14 years worth of stupid workarounds stuck in my head","date":"2017-11-25T01:15:35.069Z","type":"message"}
{"nick":"charmander","message":"so i’d say it’s fine to use `undefined` in package code now","date":"2017-11-25T01:15:36.489Z","type":"message"}
{"nick":"joepie91","message":":P","date":"2017-11-25T01:15:36.592Z","type":"message"}
{"nick":"charmander","message":"`void 0` also idiomatic]","date":"2017-11-25T01:15:40.735Z","type":"message"}
{"nick":"charmander","message":"just please no typeof === 'undefined' =(","date":"2017-11-25T01:15:46.462Z","type":"message"}
{"nick":"Sven_vB","message":"\"continue\" is a code smell","date":"2017-11-25T01:15:47.285Z","type":"message"}
{"nick":"darkSeid_","message":"its in one of the links posted to compare, its an arg for a fn","date":"2017-11-25T01:15:47.851Z","type":"message"}
{"nick":"charmander","message":"Sven_vB: ah… not really","date":"2017-11-25T01:15:54.183Z","type":"message"}
{"nick":"f32","message":"joepie91: anyway, i have to grab a bit to eat, i don't expect you to conceed that there is value in adding language features to javascript, but of decorators and async/await, decorators are a micro addition to JS compared to the overhaul async/await introduced","date":"2017-11-25T01:16:12.907Z","type":"message"}
{"nick":"leptone","reason":"Ping timeout: 248 seconds","date":"2017-11-25T01:16:17.319Z","type":"quit"}
{"nick":"Sven_vB","message":"charmander, in what scenario is it preferable to a return?","date":"2017-11-25T01:16:19.383Z","type":"message"}
{"nick":"charmander","message":"darkSeid_: oh. yes, TypeScript.","date":"2017-11-25T01:16:20.249Z","type":"message"}
{"nick":"charmander","message":"Sven_vB: well they don’t do the same thing so","date":"2017-11-25T01:16:28.532Z","type":"message"}
{"nick":"darkSeid_","message":"cool, ty","date":"2017-11-25T01:16:29.277Z","type":"message"}
{"nick":"joepie91","message":"Sven_vB: loops? :)","date":"2017-11-25T01:16:30.290Z","type":"message"}
{"nick":"joepie91","message":"I'd have used an if/else there though","date":"2017-11-25T01:16:38.732Z","type":"message"}
{"nick":"charmander","message":"“restart the loop” vs. “exit the function”","date":"2017-11-25T01:16:40.883Z","type":"message"}
{"nick":"earendel2","message":"if you have more than a for-loop ina single function you gonna need it","date":"2017-11-25T01:16:41.408Z","type":"message"}
{"nick":"joepie91","message":"for the same reason I don't usually do early returns...","date":"2017-11-25T01:16:56.771Z","type":"message"}
{"nick":"Sven_vB","message":"joepie91, charmander, any continue I've seen so far had better been a return in a function that would be called from the loop.","date":"2017-11-25T01:17:18.946Z","type":"message"}
{"nick":"f32","message":"Sven_vB: is continue really code smell ?","date":"2017-11-25T01:17:31.143Z","type":"message"}
{"nick":"nnuMTA","new_nick":"ATMunn","date":"2017-11-25T01:17:35.811Z","type":"nick"}
{"nick":"earendel2","message":"wait continue was .. jump to next iteration, right? it wasnt exit at all","date":"2017-11-25T01:17:36.866Z","type":"message"}
{"nick":"earendel2","message":"yeah","date":"2017-11-25T01:17:44.556Z","type":"message"}
{"nick":"Sven_vB","message":"f32, Crockford and I say so. I'd be interested to see code where it's the better option.","date":"2017-11-25T01:17:57.004Z","type":"message"}
{"nick":"f32","message":"continue === exit and repeat the iteration","date":"2017-11-25T01:18:02.235Z","type":"message"}
{"nick":"f32","message":"break == exit","date":"2017-11-25T01:18:08.563Z","type":"message"}
{"nick":"earendel2","message":"though in js you can continue with labels..which isa  bit mindfucking","date":"2017-11-25T01:18:08.940Z","type":"message"}
{"nick":"earendel2","message":"why repeat?","date":"2017-11-25T01:18:19.471Z","type":"message"}
{"nick":"Sven_vB","message":"labels are for obfuscation.","date":"2017-11-25T01:18:21.025Z","type":"message"}
{"nick":"detectiveaoi","date":"2017-11-25T01:18:28.774Z","type":"join"}
{"nick":"joepie91","message":"iirc I've had a valid usecase for labels twice","date":"2017-11-25T01:18:32.948Z","type":"message"}
{"nick":"joepie91","message":"in a bit of perf-critical code","date":"2017-11-25T01:18:42.917Z","type":"message"}
{"nick":"joepie91","message":"don't recall if I used continue or break","date":"2017-11-25T01:19:11.523Z","type":"message"}
{"nick":"Sven_vB","message":"joepie91, yeah ok when it's about perf, you can end up with lots of stuff that's usually a code smell.","date":"2017-11-25T01:19:18.985Z","type":"message"}
{"nick":"earendel2","message":"n>for(var i=5;i-->0;) { if(i==3) continue; console.log(i); }","date":"2017-11-25T01:19:26.197Z","type":"message"}
{"nick":"f32","message":"Sven_vB: i usually agree with Crockford","date":"2017-11-25T01:19:27.191Z","type":"message"}
{"nick":"babelboot","message":"earendel2: (okay) 4 2 1 0 undefined","date":"2017-11-25T01:19:28.864Z","type":"message"}
{"nick":"doodadjs","message":"maybe we need a proposal for goto/gosub :)","date":"2017-11-25T01:19:43.385Z","type":"message"}
{"nick":"f32","message":"Sven_vB: but other times, i don't","date":"2017-11-25T01:19:44.779Z","type":"message"}
{"nick":"ed209","reason":"Remote host closed the connection","date":"2017-11-25T01:20:00.939Z","type":"quit"}
{"nick":"dommel","date":"2017-11-25T01:20:02.767Z","type":"join"}
{"nick":"ed209","date":"2017-11-25T01:20:06.989Z","type":"join"}
{"nick":"earendel2","message":"n>for(var i=5;i-->0;) { if(i!=3) console.log(i); } //would be the same","date":"2017-11-25T01:20:21.399Z","type":"message"}
{"nick":"babelboot","message":"earendel2: (okay) 4 2 1 0 undefined","date":"2017-11-25T01:20:25.416Z","type":"message"}
{"nick":"kuchi","reason":"Ping timeout: 250 seconds","date":"2017-11-25T01:20:25.971Z","type":"quit"}
{"nick":"Sven_vB","message":"f32, well, there are some of his later teachings that I haven't yet understood, and some that my gut isn't ready to accept.","date":"2017-11-25T01:20:42.470Z","type":"message"}
{"nick":"f32","message":"Sven_vB: continue is just useful where you have a sequence of something, and you may need to ignore a element in that sequence for \"reasons\" and just move to the next","date":"2017-11-25T01:20:54.872Z","type":"message"}
{"nick":"f32","message":"Sven_vB: something like...","date":"2017-11-25T01:21:31.975Z","type":"message"}
{"nick":"Sven_vB","message":"f32, so why not put that loop body in a function? that way you can even return an annotation *why* you skipped, which may help you debug.","date":"2017-11-25T01:21:39.118Z","type":"message"}
{"nick":"earendel2","message":"you can just have a conditional block.. so its not irreducibal","date":"2017-11-25T01:21:44.882Z","type":"message"}
{"nick":"dman777_alter","message":"http://dpaste.com/3HHGCWT#line-4 trying my hand at async await instead of the usual promise syntax. Any rejection will send a 500 in the outer catch with one exception... line 4 with the 409 status code. How could I send the 409 and not have the outer catch send a 500 after?","date":"2017-11-25T01:21:45.107Z","type":"message"}
{"nick":"earendel2","message":"irreducibel","date":"2017-11-25T01:21:50.502Z","type":"message"}
{"nick":"f32","message":"while(true) { /* check if something can be processed */ if(nope) continue }","date":"2017-11-25T01:21:51.962Z","type":"message"}
{"nick":"earendel2","message":"ble","date":"2017-11-25T01:21:52.869Z","type":"message"}
{"nick":"earendel2","message":"llol","date":"2017-11-25T01:21:54.036Z","type":"message"}
{"nick":"kuchi","date":"2017-11-25T01:22:07.758Z","type":"join"}
{"nick":"f32","message":"Sven_vB: you can do that also","date":"2017-11-25T01:22:29.778Z","type":"message"}
{"nick":"Technodrome","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T01:22:29.907Z","type":"quit"}
{"nick":"Sven_vB","message":"so, still no example where continue is better than return.","date":"2017-11-25T01:23:03.903Z","type":"message"}
{"nick":"earendel2","message":"its really compleltely something else","date":"2017-11-25T01:23:21.326Z","type":"message"}
{"nick":"earendel2","message":"break is affine to return","date":"2017-11-25T01:23:30.175Z","type":"message"}
{"nick":"doodadjs","message":"to reduce \"if\" imbrications ?","date":"2017-11-25T01:23:40.369Z","type":"message"}
{"nick":"f32","message":"Sven_vB: in fact, its recommended, but at some level, you often processing is a sequence of operations, and if a operation failed, it often doesn't make sense to continue processing, ironically, \"continue\" achieves this","date":"2017-11-25T01:23:46.844Z","type":"message"}
{"nick":"earendel2","message":"sometimes you really didnt want to have an extra function just to \"return\" from inside a loop.. as you wouldnt know how to label it even ;P","date":"2017-11-25T01:24:21.072Z","type":"message"}
{"nick":"Sven_vB","message":"doodadjs, you mean too many nested ifs, or \"then\" clauses that should have been an early return on the negated condition instead?","date":"2017-11-25T01:24:21.202Z","type":"message"}
{"nick":"f32","message":"Sven_vB: i.e. can't reasonably continue procesing this iteration, deal with it in some way, and continue","date":"2017-11-25T01:24:24.790Z","type":"message"}
{"nick":"doodadjs","message":"Sven_vB: yeah, that","date":"2017-11-25T01:24:37.264Z","type":"message"}
{"nick":"deltab","message":"perl calls it 'next'","date":"2017-11-25T01:24:39.106Z","type":"message"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T01:25:10.932Z","type":"quit"}
{"nick":"Sven_vB","message":"earendel2, so you'd use continue to avoid having to find a descriptive name for the conditional task?","date":"2017-11-25T01:25:12.469Z","type":"message"}
{"nick":"jottr_","date":"2017-11-25T01:25:29.306Z","type":"join"}
{"nick":"earendel2","message":"i break","date":"2017-11-25T01:25:34.838Z","type":"message"}
{"nick":"deltab","message":"yeah, naming is hard","date":"2017-11-25T01:25:48.899Z","type":"message"}
{"nick":"earendel2","message":"i continue not have to use an if block around a long procedure..","date":"2017-11-25T01:26:05.116Z","type":"message"}
{"nick":"Sven_vB","message":"f32, if it doesn't make sense to continue processing, just return from the function that does that processing.","date":"2017-11-25T01:26:06.363Z","type":"message"}
{"nick":"earendel2","message":"but i really dont at all.","date":"2017-11-25T01:26:10.234Z","type":"message"}
{"nick":"f32","message":"Sven_vB: more, if you have a sequence of operations to preform on a element, and if one of those operations fail, you have a way to 1) deal with it, 2) move onto the next","date":"2017-11-25T01:26:11.582Z","type":"message"}
{"nick":"earendel2","message":"continue is like .. skip the rest of the shit.","date":"2017-11-25T01:26:34.532Z","type":"message"}
{"nick":"Sven_vB","message":"earendel2, if your procedure is too long, that's a smell too.","date":"2017-11-25T01:26:35.133Z","type":"message"}
{"nick":"earendel2","message":"there really is no justification for it.","date":"2017-11-25T01:26:50.259Z","type":"message"}
{"nick":"earendel2","message":"which should be water for your mill.","date":"2017-11-25T01:27:04.323Z","type":"message"}
{"nick":"earendel2","message":"right?","date":"2017-11-25T01:27:07.453Z","type":"message"}
{"nick":"earendel2","message":"i wouldnt call it smell, as it probably is even some optimization. its legit. but old fashioned maybe.. i dont know.","date":"2017-11-25T01:27:50.206Z","type":"message"}
{"nick":"jottr","reason":"Ping timeout: 240 seconds","date":"2017-11-25T01:28:05.590Z","type":"quit"}
{"nick":"f32","message":"Sven_vB: https://pastebin.com/Bc26RZi6","date":"2017-11-25T01:28:13.223Z","type":"message"}
{"nick":"f32","message":"err, missed a while construct >->","date":"2017-11-25T01:28:46.184Z","type":"message"}
{"nick":"earendel2","message":"however i really hate functions that do a part of a job i couldnt label, bloating my well thought-through public interface :P","date":"2017-11-25T01:29:05.239Z","type":"message"}
{"nick":"Sven_vB","message":"f32, did you receive my last message with \"annotation\" in it?","date":"2017-11-25T01:29:19.215Z","type":"message"}
{"nick":"justicefries","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T01:29:37.970Z","type":"quit"}
{"nick":"earendel2","message":"thanksgiving for anonymous functions!","date":"2017-11-25T01:29:38.534Z","type":"message"}
{"nick":"f32","message":"Sven_vB: https://pastebin.com/iXVJ3n0g","date":"2017-11-25T01:29:40.590Z","type":"message"}
{"nick":"f32","message":"Sven_vB: no, might have missed it","date":"2017-11-25T01:30:15.767Z","type":"message"}
{"nick":"f32","message":"Sven_vB: but i am all about annotations / decorators today","date":"2017-11-25T01:30:31.472Z","type":"message"}
{"nick":"felixsanz","reason":"Ping timeout: 248 seconds","date":"2017-11-25T01:30:40.705Z","type":"quit"}
{"nick":"e14","date":"2017-11-25T01:30:58.352Z","type":"join"}
{"nick":"Sven_vB","message":"earendel2, if you can't come up with a name for that part, Crockford would suggest you think hard about whether you've reached the maximum insight in what you're actually doing.","date":"2017-11-25T01:31:00.690Z","type":"message"}
{"nick":"earendel2","message":"lol","date":"2017-11-25T01:31:18.414Z","type":"message"}
{"nick":"f32","message":"Sven_vB: oh sure","date":"2017-11-25T01:31:20.633Z","type":"message"}
{"nick":"earendel2","message":"ok ;)","date":"2017-11-25T01:31:30.460Z","type":"message"}
{"nick":"Sven_vB","message":"it was <Sven_vB> f32, so why not put that loop body in a function? that way you can even return an annotation *why* you skipped, which may help you debug.","date":"2017-11-25T01:31:40.646Z","type":"message"}
{"nick":"f32","message":"Sven_vB: that annotation is implyed with the \"deal with it\" comment in https://pastebin.com/iXVJ3n0g","date":"2017-11-25T01:32:18.627Z","type":"message"}
{"nick":"f32","message":"you get the idea, how one implements it is another story, but this is generally how one would reasonably use \"continue\"","date":"2017-11-25T01:33:01.821Z","type":"message"}
{"nick":"earendel2","message":"usually i would argue that having several return points is a little bit dirty.. though im not that as strict as once on that .. js made me feel a little bit relaxed i think","date":"2017-11-25T01:33:08.976Z","type":"message"}
{"nick":"Sven_vB","message":"f32, I can't see a reason to use continue there.","date":"2017-11-25T01:33:22.094Z","type":"message"}
{"nick":"upperdeck","reason":"Ping timeout: 260 seconds","date":"2017-11-25T01:33:27.319Z","type":"quit"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-11-25T01:33:28.148Z","type":"quit"}
{"nick":"charmander","message":"here’s my entry https://gist.github.com/charmander/153f235c1c8fbb5f9cff342db8412211","date":"2017-11-25T01:33:40.646Z","type":"message"}
{"nick":"f32","message":"Sven_vB: well, im not advocating the use of \"continue\" by explaining it","date":"2017-11-25T01:33:42.021Z","type":"message"}
{"nick":"justicefries","date":"2017-11-25T01:33:46.038Z","type":"join"}
{"nick":"Sven_vB","message":"earendel2, why would it be dirty to have multiple returns?","date":"2017-11-25T01:33:55.361Z","type":"message"}
{"nick":"f32","message":"Sven_vB: i do however use \"continue\" here an there","date":"2017-11-25T01:34:00.209Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T01:34:00.796Z","type":"join"}
{"nick":"earendel2","message":"i really dont even remember ..","date":"2017-11-25T01:34:43.074Z","type":"message"}
{"nick":"f32","message":"Sven_vB: you could wire up all the operations into a promise chain, or other monadic like thing if you wished","date":"2017-11-25T01:34:45.224Z","type":"message"}
{"nick":"milardovich","reason":"Remote host closed the connection","date":"2017-11-25T01:35:01.688Z","type":"quit"}
{"nick":"konsolebox","reason":"Ping timeout: 255 seconds","date":"2017-11-25T01:35:33.143Z","type":"quit"}
{"nick":"f32","message":"but, op1.then(op2).then(op3).then(...).catch(reason => {}) Sven_vB is also fine","date":"2017-11-25T01:35:50.099Z","type":"message"}
{"nick":"Illianthe2","reason":"Ping timeout: 255 seconds","date":"2017-11-25T01:35:59.966Z","type":"quit"}
{"nick":"Sven_vB","message":"f32, dunno what to learn from the explanation. I knew before how continue works, I just don't see a good reason to use it. (for reasons *against* using it, see Crockford.)","date":"2017-11-25T01:36:00.488Z","type":"message"}
{"nick":"f32","message":"Sven_vB: well, its how \"i\" personally use it, i don't really care for philosophical arguments for and against it, the keyword exists, i use it sometimes for things","date":"2017-11-25T01:36:52.444Z","type":"message"}
{"nick":"earendel2","message":"Sven_vB: if you have to check 10 conditions .. and all need to be satisfied.. you can _skip_  the rest when a single one fails.","date":"2017-11-25T01:37:03.138Z","type":"message"}
{"nick":"Sven_vB","message":"earendel2, an early return would skip them as well.","date":"2017-11-25T01:37:27.697Z","type":"message"}
{"nick":"earendel2","message":"sure.","date":"2017-11-25T01:37:33.623Z","type":"message"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T01:37:38.759Z","type":"quit"}
{"nick":"earendel2","message":"so whats your question?","date":"2017-11-25T01:37:39.135Z","type":"message"}
{"nick":"earendel2","message":"we have established its not the only way to do it already.","date":"2017-11-25T01:38:05.668Z","type":"message"}
{"nick":"felixsanz","date":"2017-11-25T01:38:11.792Z","type":"join"}
{"nick":"f32","message":"Sven_vB: you could use function application wizardry via some monad thing also, but generally, that is outside the realms of mere mortals, alternatively, we could just make all functions return promises >->","date":"2017-11-25T01:38:14.879Z","type":"message"}
{"nick":"f32","message":"Sven_vB: actually, im not adverse to the idea that all functions should return promises","date":"2017-11-25T01:38:43.228Z","type":"message"}
{"nick":"upperdeck","reason":"Ping timeout: 268 seconds","date":"2017-11-25T01:39:08.893Z","type":"quit"}
{"nick":"justicefries","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T01:39:14.869Z","type":"quit"}
{"nick":"charmander","message":"what","date":"2017-11-25T01:39:16.041Z","type":"message"}
{"nick":"Sven_vB","message":"earendel2, so I say \"continue\" is a code smell because there is another way that's (1) at least as effective and (2) has less risks.","date":"2017-11-25T01:39:28.993Z","type":"message"}
{"nick":"earendel2","message":"and thats bullshit.","date":"2017-11-25T01:39:42.115Z","type":"message"}
{"nick":"earendel2","message":";)","date":"2017-11-25T01:39:45.820Z","type":"message"}
{"nick":"f32","message":"Sven_vB: for two reasons, Promises provide a nice continuation syntax, and error handling thing, and the other being that synchronous functions may become async tomorrow","date":"2017-11-25T01:39:46.377Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T01:39:59.321Z","type":"join"}
{"nick":"earendel2","message":"however im ok if dont use it.","date":"2017-11-25T01:40:01.668Z","type":"message"}
{"nick":"sasheto","reason":"Ping timeout: 255 seconds","date":"2017-11-25T01:40:02.985Z","type":"quit"}
{"nick":"earendel2","message":"you","date":"2017-11-25T01:40:06.331Z","type":"message"}
{"nick":"u0m3","reason":"Quit: Leaving","date":"2017-11-25T01:40:15.282Z","type":"quit"}
{"nick":"earendel2","message":"as for me it doesnt make anty difference.","date":"2017-11-25T01:40:21.513Z","type":"message"}
{"nick":"jottr_","reason":"Ping timeout: 268 seconds","date":"2017-11-25T01:40:22.931Z","type":"quit"}
{"nick":"f32","message":"admittedly, its a poor rationale, but there is something to be said for having all functions composable with promises","date":"2017-11-25T01:40:46.399Z","type":"message"}
{"nick":"charmander","message":"not really","date":"2017-11-25T01:40:53.699Z","type":"message"}
{"nick":"earendel2","message":"i would put it differently: make all functions async","date":"2017-11-25T01:41:14.521Z","type":"message"}
{"nick":"charmander","message":"that’s putting it exactly the same","date":"2017-11-25T01:41:23.071Z","type":"message"}
{"nick":"earendel2","message":"and im for it.. as far as i can see","date":"2017-11-25T01:41:26.688Z","type":"message"}
{"nick":"f32","message":"charmander: heh","date":"2017-11-25T01:41:27.828Z","type":"message"}
{"nick":"ivan_the_monkey","date":"2017-11-25T01:41:38.889Z","type":"join"}
{"nick":"earendel2","message":"sure its the same","date":"2017-11-25T01:41:53.390Z","type":"message"}
{"nick":"earendel2","message":"otherwise i would need to bother someone else in another channel","date":"2017-11-25T01:42:09.604Z","type":"message"}
{"nick":"dman777_alter","reason":"Quit: Lost terminal","date":"2017-11-25T01:42:14.208Z","type":"quit"}
{"nick":"earendel2","message":":P","date":"2017-11-25T01:42:14.546Z","type":"message"}
{"nick":"earendel2","message":"or create my own debate","date":"2017-11-25T01:42:27.957Z","type":"message"}
{"nick":"earendel2","message":"but how?","date":"2017-11-25T01:42:31.732Z","type":"message"}
{"nick":"charmander","message":"anyway the idea of https://gist.github.com/charmander/153f235c1c8fbb5f9cff342db8412211 is to pick a better name for “consume”","date":"2017-11-25T01:42:37.027Z","type":"message"}
{"nick":"charmander","message":"probably application-specific","date":"2017-11-25T01:42:44.116Z","type":"message"}
{"nick":"charmander","message":"so it’s immediately obvious that this is the function that takes elements from a source, retrying with a delay","date":"2017-11-25T01:43:09.965Z","type":"message"}
{"nick":"f32","message":"charmander: well, i often build software around external things \"databases, filesystems, networks, messaging backends etc\", sometimes it just easier to model those interactions as inherently async, even if they may not be","date":"2017-11-25T01:43:10.962Z","type":"message"}
{"nick":"charmander","message":"f32: in which cases are those not async","date":"2017-11-25T01:43:30.614Z","type":"message"}
{"nick":"charmander","message":"(in node.) they all sound like i/o","date":"2017-11-25T01:43:50.771Z","type":"message"}
{"nick":"f32","message":"charmander: sure, but lets say you're mocking out a database or something, your mock wouldn't be async, but all your operations on your database are","date":"2017-11-25T01:44:15.643Z","type":"message"}
{"nick":"f32","message":"your mock and database have the same interface, but your mock isn't async","date":"2017-11-25T01:44:40.131Z","type":"message"}
{"nick":"f32","message":"so just pretend it is, and everything is fine","date":"2017-11-25T01:44:52.715Z","type":"message"}
{"nick":"charmander","message":"your mock should be async","date":"2017-11-25T01:45:02.651Z","type":"message"}
{"nick":"f32","message":"the mock is in memory tho","date":"2017-11-25T01:45:10.377Z","type":"message"}
{"nick":"charmander","message":"also don’t mock databases","date":"2017-11-25T01:45:11.234Z","type":"message"}
{"nick":"f32","message":"i mock everything for integration testing","date":"2017-11-25T01:45:26.463Z","type":"message"}
{"nick":"charmander","message":"but i mean it should conform to the same API","date":"2017-11-25T01:45:27.348Z","type":"message"}
{"nick":"charmander","message":"so it should return a promise, so it’s async","date":"2017-11-25T01:45:36.072Z","type":"message"}
{"nick":"f32","message":"but its not \"actually\" async","date":"2017-11-25T01:45:53.195Z","type":"message"}
{"nick":"charmander","message":"this is a case of something that should be async. it is not a case for “make every function async”","date":"2017-11-25T01:45:58.588Z","type":"message"}
{"nick":"charmander","message":"yes, it’s actually async","date":"2017-11-25T01:46:02.027Z","type":"message"}
{"nick":"earendel2","message":"to synchronize is always to await some result ..  1+(2/9) ... is awaiting 2/9 .. so it can continue to add 1 to it","date":"2017-11-25T01:46:03.821Z","type":"message"}
{"nick":"charmander","message":"you can’t use a promise synchronously at all","date":"2017-11-25T01:46:09.665Z","type":"message"}
{"nick":"ivan_the_monkey","reason":"Ping timeout: 240 seconds","date":"2017-11-25T01:46:27.919Z","type":"quit"}
{"nick":"f32","message":"write(record) { this.records.push(record); return Promise.resolve() }","date":"2017-11-25T01:46:28.785Z","type":"message"}
{"nick":"charmander","message":"(in the case of native promises.)","date":"2017-11-25T01:46:32.903Z","type":"message"}
{"nick":"deltab","message":"aw, dman777_alter left","date":"2017-11-25T01:46:46.733Z","type":"message"}
{"nick":"f32","message":"charmander: that line above is my mock","date":"2017-11-25T01:46:53.542Z","type":"message"}
{"nick":"charmander","message":"f32: okay. it’s async","date":"2017-11-25T01:46:59.784Z","type":"message"}
{"nick":"charmander","message":"it’s a function that should be async","date":"2017-11-25T01:47:12.640Z","type":"message"}
{"nick":"charmander","message":"do you want me to list a bunch of functions that should not be async","date":"2017-11-25T01:47:19.566Z","type":"message"}
{"nick":"milardovich","date":"2017-11-25T01:47:24.192Z","type":"join"}
{"nick":"f32","message":"charmander: seems a bit picky and choosy tho, there is a bigger idea here","date":"2017-11-25T01:47:27.978Z","type":"message"}
{"nick":"charmander","message":"i can’t believe this is even an argument. maybe i’m misunderstanding the point.","date":"2017-11-25T01:47:31.530Z","type":"message"}
{"nick":"earendel2","message":"i think on a lower level..like on the arithmetical level.. you would just need to write \"await\" all the time.. while on a higher level of abstraction it would make sense to have all functions async","date":"2017-11-25T01:48:12.566Z","type":"message"}
{"nick":"charmander","message":"congratulations, you have invented threads","date":"2017-11-25T01:48:32.621Z","type":"message"}
{"nick":"f32","message":"charmander: well, there is something to be said about composing functions with promises","date":"2017-11-25T01:48:43.460Z","type":"message"}
{"nick":"jscriptStudent","date":"2017-11-25T01:48:43.850Z","type":"join"}
{"nick":"upperdeck","reason":"Ping timeout: 248 seconds","date":"2017-11-25T01:48:49.319Z","type":"quit"}
{"nick":"charmander","message":"f32: what does that even mean","date":"2017-11-25T01:48:51.496Z","type":"message"}
{"nick":"f32","message":"you said there wasn't anything to be said","date":"2017-11-25T01:48:53.345Z","type":"message"}
{"nick":"iiie0","reason":"Remote host closed the connection","date":"2017-11-25T01:48:57.307Z","type":"quit"}
{"nick":"f32","message":"then we said some stuff","date":"2017-11-25T01:48:58.023Z","type":"message"}
{"nick":"konsolebox","date":"2017-11-25T01:49:06.794Z","type":"join"}
{"nick":"f32","message":"that's how things go","date":"2017-11-25T01:49:08.194Z","type":"message"}
{"nick":"charmander","message":"okay, done w/ this","date":"2017-11-25T01:49:11.937Z","type":"message"}
{"nick":"f32","message":"nice","date":"2017-11-25T01:49:18.678Z","type":"message"}
{"nick":"justicefries","date":"2017-11-25T01:49:22.061Z","type":"join"}
{"nick":"upperdeck","date":"2017-11-25T01:49:30.789Z","type":"join"}
{"nick":"deltab","message":"dman777: oh, still here?","date":"2017-11-25T01:49:39.043Z","type":"message"}
{"nick":"charmander","message":"if you want to have a discussion, that’s great","date":"2017-11-25T01:49:58.250Z","type":"message"}
{"nick":"charmander","message":"wasting my time being “funny” on the other hand","date":"2017-11-25T01:50:09.679Z","type":"message"}
{"nick":"milardovich","reason":"Ping timeout: 240 seconds","date":"2017-11-25T01:51:57.813Z","type":"quit"}
{"nick":"earendel2","message":"a().then(b).then(c) is the same as c(b(a())) ..  just different notation.. for synchronizing","date":"2017-11-25T01:52:07.291Z","type":"message"}
{"nick":"f32","message":"charmander: well, i achieved my goals >-> had a laugh and wasted some time, but now im off to purchases some pies, have a good one !","date":"2017-11-25T01:52:31.854Z","type":"message"}
{"nick":"eckhardt","date":"2017-11-25T01:53:27.319Z","type":"join"}
{"nick":"Sven_vB","reason":"Ping timeout: 248 seconds","date":"2017-11-25T01:54:20.886Z","type":"quit"}
{"nick":"rohanrhu","message":"uv_queue_work() does not call callback function..","date":"2017-11-25T01:55:00.659Z","type":"message"}
{"nick":"rohanrhu","message":"is there anyone have an idea?","date":"2017-11-25T01:55:06.505Z","type":"message"}
{"nick":"sasheto","date":"2017-11-25T01:55:11.561Z","type":"join"}
{"nick":"charmander","message":"rohanrhu: if you set up a process.nextTick after calling uv_queue_work, does it run?","date":"2017-11-25T01:56:09.636Z","type":"message"}
{"nick":"kakashiAL","reason":"Ping timeout: 240 seconds","date":"2017-11-25T01:56:57.802Z","type":"quit"}
{"nick":"upperdeck","reason":"Ping timeout: 268 seconds","date":"2017-11-25T01:57:01.854Z","type":"quit"}
{"nick":"justicefries","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T01:57:32.955Z","type":"quit"}
{"nick":"spacewal1","date":"2017-11-25T01:57:56.659Z","type":"join"}
{"nick":"spacewal1","reason":"Client Quit","date":"2017-11-25T01:58:21.825Z","type":"quit"}
{"nick":"justicefries","date":"2017-11-25T01:58:41.933Z","type":"join"}
{"nick":"upperdeck","date":"2017-11-25T01:59:01.114Z","type":"join"}
{"nick":"zxc","date":"2017-11-25T01:59:48.320Z","type":"join"}
{"nick":"pombreda","reason":"Ping timeout: 248 seconds","date":"2017-11-25T02:00:33.319Z","type":"quit"}
{"nick":"PeDr0_HuG0","reason":"Read error: Connection reset by peer","date":"2017-11-25T02:00:44.533Z","type":"quit"}
{"nick":"PeDr0_HuG0","date":"2017-11-25T02:01:10.105Z","type":"join"}
{"nick":"ahrs","reason":"Remote host closed the connection","date":"2017-11-25T02:01:47.720Z","type":"quit"}
{"nick":"ahrs","date":"2017-11-25T02:02:59.294Z","type":"join"}
{"nick":"Akhil","date":"2017-11-25T02:03:30.011Z","type":"join"}
{"nick":"dman777_alter","date":"2017-11-25T02:03:39.161Z","type":"join"}
{"nick":"Sven_vB","date":"2017-11-25T02:04:02.965Z","type":"join"}
{"nick":"rohanrhu","message":"charmander: i'm writing a native extension","date":"2017-11-25T02:04:45.553Z","type":"message"}
{"nick":"rohanrhu","message":"uv_queue_work()'s last parameter is callback function","date":"2017-11-25T02:05:22.940Z","type":"message"}
{"nick":"rohanrhu","message":"charmander: typedef void (*uv_after_work_cb)(uv_work_t* req, int status);","date":"2017-11-25T02:05:46.842Z","type":"message"}
{"nick":"rohanrhu","message":"callback function arg","date":"2017-11-25T02:05:52.999Z","type":"message"}
{"nick":"Akhil","reason":"Client Quit","date":"2017-11-25T02:06:11.387Z","type":"quit"}
{"nick":"kroogs","date":"2017-11-25T02:06:18.003Z","type":"join"}
{"nick":"rohanrhu","message":"charmander: async worker function is working but callback deos not be called","date":"2017-11-25T02:06:31.269Z","type":"message"}
{"nick":"jottr_","date":"2017-11-25T02:06:45.592Z","type":"join"}
{"nick":"rohanrhu","message":"i will use nan's interface for async works but i dont understand why is this not working","date":"2017-11-25T02:08:02.004Z","type":"message"}
{"nick":"joobz","message":"guys are promises the most efficent way to run multiple mysql queries in a blocking fashion?","date":"2017-11-25T02:08:50.954Z","type":"message"}
{"nick":"joobz","message":"anyone got an exmaple of how to do this?","date":"2017-11-25T02:08:58.714Z","type":"message"}
{"nick":"GreenJello","message":"joobz, they don't block; do you mean sequential?","date":"2017-11-25T02:09:16.635Z","type":"message"}
{"nick":"joobz","message":"GreenJello, oh.. i need my queries to run and hold the code at that point, until they compelte","date":"2017-11-25T02:09:39.456Z","type":"message"}
{"nick":"joobz","message":"and i hvae multiple queries i run..","date":"2017-11-25T02:09:44.028Z","type":"message"}
{"nick":"f32","message":"joobz: do you want those queries to run one after one another?","date":"2017-11-25T02:10:01.944Z","type":"message"}
{"nick":"charmander","message":"rohanrhu: i’m aware","date":"2017-11-25T02:10:05.188Z","type":"message"}
{"nick":"joobz","message":"yes f32","date":"2017-11-25T02:10:07.900Z","type":"message"}
{"nick":"GreenJello","message":"joobz, you can't block, but you can return a promise","date":"2017-11-25T02:10:14.472Z","type":"message"}
{"nick":"rohanrhu","message":"joobz: do you need sequenced queries?","date":"2017-11-25T02:10:16.369Z","type":"message"}
{"nick":"safe","date":"2017-11-25T02:10:16.963Z","type":"join"}
{"nick":"f32","message":"joobz: you need a semaphore","date":"2017-11-25T02:10:21.479Z","type":"message"}
{"nick":"f32","message":"joobz: something like....","date":"2017-11-25T02:10:31.344Z","type":"message"}
{"nick":"charmander","message":"rohanrhu: so again: if you set up a process.nextTick after calling uv_queue_work, does it run?","date":"2017-11-25T02:10:34.893Z","type":"message"}
{"nick":"joobz","message":"right now they run and the results for those queries are not populated to variables, so further in code they are undefined when i reference them","date":"2017-11-25T02:10:35.119Z","type":"message"}
{"nick":"f32","message":"const semaphore = new Semaphore(1) // concurrency limit of 1","date":"2017-11-25T02:10:42.877Z","type":"message"}
{"nick":"charmander","message":"rohanrhu: + how exactly are you calling uv_queue_work?","date":"2017-11-25T02:10:47.847Z","type":"message"}
{"nick":"f32","message":"const write = (record) => semaphore.run(async () => {","date":"2017-11-25T02:10:57.268Z","type":"message"}
{"nick":"f32","message":"  /* write record */","date":"2017-11-25T02:11:06.693Z","type":"message"}
{"nick":"f32","message":"})","date":"2017-11-25T02:11:07.699Z","type":"message"}
{"nick":"rohanrhu","message":"charmander: im pasting","date":"2017-11-25T02:11:08.919Z","type":"message"}
{"nick":"joobz","message":"GreenJello, got an example of this? i was reading promise and whended up doing callback but i dont think i have it right","date":"2017-11-25T02:11:18.222Z","type":"message"}
{"nick":"f32","message":"joobz: promises don't protect against async overlap","date":"2017-11-25T02:11:33.888Z","type":"message"}
{"nick":"ngm","date":"2017-11-25T02:11:39.138Z","type":"join"}
{"nick":"joobz","message":"oh","date":"2017-11-25T02:11:43.471Z","type":"message"}
{"nick":"jottr_","reason":"Ping timeout: 268 seconds","date":"2017-11-25T02:11:49.772Z","type":"quit"}
{"nick":"f32","message":"joobz: what your likely looking to do is queue operations on that database, and run them off","date":"2017-11-25T02:11:59.496Z","type":"message"}
{"nick":"joobz","message":"f32, do u have an example wiht a basic select queery in there?","date":"2017-11-25T02:12:01.615Z","type":"message"}
{"nick":"joobz","message":"im not sure waht record is","date":"2017-11-25T02:12:06.525Z","type":"message"}
{"nick":"deltab","message":"joobz: is overlap a problem, or do you just need a way to not access reuslts before they're available","date":"2017-11-25T02:12:11.730Z","type":"message"}
{"nick":"joobz","message":"f32, i was looking at pool.connection, so it would open 1 connection and run multiple queries.. then i'd releas","date":"2017-11-25T02:12:30.825Z","type":"message"}
{"nick":"joobz","message":"that sounded good from efficiency","date":"2017-11-25T02:12:36.657Z","type":"message"}
{"nick":"joobz","message":"but i need query 1 to finish before query 2 and so forth","date":"2017-11-25T02:12:47.974Z","type":"message"}
{"nick":"Technodrome","date":"2017-11-25T02:13:43.220Z","type":"join"}
{"nick":"f32","message":"joobz: https://pastebin.com/J6ZcRvvz","date":"2017-11-25T02:14:59.118Z","type":"message"}
{"nick":"horsey","date":"2017-11-25T02:15:14.438Z","type":"join"}
{"nick":"kroogs","reason":"Ping timeout: 255 seconds","date":"2017-11-25T02:15:36.554Z","type":"quit"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-11-25T02:15:37.163Z","type":"quit"}
{"nick":"rohanrhu","message":"joobz: this maybe solve your problem https://gist.github.com/rohanrhu/a679be4c85fd44a23b0388369cccadfe","date":"2017-11-25T02:15:58.001Z","type":"message"}
{"nick":"jottr_","date":"2017-11-25T02:16:47.529Z","type":"join"}
{"nick":"u0m3","date":"2017-11-25T02:16:51.554Z","type":"join"}
{"nick":"joobz","message":"f32, so wrap that in a function and pass my query to record everytime i want a single query?","date":"2017-11-25T02:17:30.903Z","type":"message"}
{"nick":"joobz","message":"how does that let me do the 1 connection, multiple queries, then 1 close","date":"2017-11-25T02:17:43.678Z","type":"message"}
{"nick":"joobz","message":"for efficiency","date":"2017-11-25T02:17:46.578Z","type":"message"}
{"nick":"rohanrhu","message":"charmander: https://pastebin.com/jbwdLjRd","date":"2017-11-25T02:18:02.131Z","type":"message"}
{"nick":"titankiller","date":"2017-11-25T02:19:44.718Z","type":"join"}
{"nick":"horsey","reason":"Ping timeout: 268 seconds","date":"2017-11-25T02:19:50.798Z","type":"quit"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-11-25T02:20:46.839Z","type":"quit"}
{"nick":"rohanrhu","message":"charmander: hmm.. now i understand what you said :D","date":"2017-11-25T02:20:52.511Z","type":"message"}
{"nick":"jottr_","reason":"Ping timeout: 240 seconds","date":"2017-11-25T02:21:35.698Z","type":"quit"}
{"nick":"rohanrhu","message":"charmander: no i dont understand..","date":"2017-11-25T02:22:15.860Z","type":"message"}
{"nick":"rohanrhu","message":"charmander: libuv does not call \"async complated function\"","date":"2017-11-25T02:22:43.316Z","type":"message"}
{"nick":"rohanrhu","message":"is there something else i should do except uv_queue_work()?","date":"2017-11-25T02:23:47.024Z","type":"message"}
{"nick":"titankiller","reason":"Ping timeout: 248 seconds","date":"2017-11-25T02:23:59.961Z","type":"quit"}
{"nick":"rohanrhu","message":"joobz: your queries can be catched by another processes of the rdbms","date":"2017-11-25T02:25:20.068Z","type":"message"}
{"nick":"rohanrhu","message":"if you don't need, do not do them sync","date":"2017-11-25T02:25:45.702Z","type":"message"}
{"nick":"rohanrhu","message":"or use async semaphore","date":"2017-11-25T02:26:14.133Z","type":"message"}
{"nick":"rohanrhu","message":"for understanding \"all queries finished\"","date":"2017-11-25T02:26:38.032Z","type":"message"}
{"nick":"rohanrhu","message":"there is no anyone has an idea for not working of uv_queue_work()'s callback?","date":"2017-11-25T02:28:56.127Z","type":"message"}
{"nick":"systemfault","date":"2017-11-25T02:31:09.855Z","type":"join"}
{"nick":"systemfault","reason":"Max SendQ exceeded","date":"2017-11-25T02:31:44.848Z","type":"quit"}
{"nick":"systemfault","date":"2017-11-25T02:32:22.886Z","type":"join"}
{"nick":"systemfault","reason":"Max SendQ exceeded","date":"2017-11-25T02:33:01.816Z","type":"quit"}
{"nick":"systemfault","date":"2017-11-25T02:33:47.324Z","type":"join"}
{"nick":"IanLiu","reason":"Quit: IanLiu","date":"2017-11-25T02:34:11.062Z","type":"quit"}
{"nick":"alexweissman","reason":"Remote host closed the connection","date":"2017-11-25T02:34:36.578Z","type":"quit"}
{"nick":"ivan_the_monkey","date":"2017-11-25T02:37:34.082Z","type":"join"}
{"nick":"dre_","reason":"Remote host closed the connection","date":"2017-11-25T02:38:25.581Z","type":"quit"}
{"nick":"ivan_the_monkey","reason":"Ping timeout: 248 seconds","date":"2017-11-25T02:42:08.077Z","type":"quit"}
{"nick":"neoncontrails","reason":"Remote host closed the connection","date":"2017-11-25T02:42:36.684Z","type":"quit"}
{"nick":"tinyV0id","reason":"Quit: My PC went to BSOD","date":"2017-11-25T02:42:37.378Z","type":"quit"}
{"nick":"Gustavo6046","reason":"Ping timeout: 268 seconds","date":"2017-11-25T02:42:39.810Z","type":"quit"}
{"nick":"rorro","reason":"Ping timeout: 248 seconds","date":"2017-11-25T02:48:33.319Z","type":"quit"}
{"nick":"joobz","message":"f32, how do u suggest to use that semaphore approach?","date":"2017-11-25T02:51:32.404Z","type":"message"}
{"nick":"jottr_","date":"2017-11-25T02:51:50.385Z","type":"join"}
{"nick":"joobz","message":"wrap it in a function and then pass my query to the function each time i want to run a query?","date":"2017-11-25T02:51:58.943Z","type":"message"}
{"nick":"piyer","date":"2017-11-25T02:54:03.867Z","type":"join"}
{"nick":"e14","date":"2017-11-25T02:55:07.124Z","type":"join"}
{"nick":"GreenJello","message":"you probably don't need semaphores","date":"2017-11-25T02:55:50.921Z","type":"message"}
{"nick":"GreenJello","message":"I don't think I've ever used on in js","date":"2017-11-25T02:56:21.706Z","type":"message"}
{"nick":"GreenJello","message":"one*","date":"2017-11-25T02:56:26.635Z","type":"message"}
{"nick":"jottr_","reason":"Ping timeout: 248 seconds","date":"2017-11-25T02:56:33.319Z","type":"quit"}
{"nick":"GreenJello","message":"joobz, let the database driver manage the connections; use promises to manage your concurrency and pass data around","date":"2017-11-25T02:57:54.571Z","type":"message"}
{"nick":"kakashiAL","date":"2017-11-25T02:58:10.319Z","type":"join"}
{"nick":"GreenJello","message":"joobz, if you have an array of things, and want to perform an operation on them one at a time, use https://www.npmjs.com/package/promise.map or similar with a concurrency of 1","date":"2017-11-25T02:58:29.998Z","type":"message"}
{"nick":"GreenJello","message":"then you get back an array of results","date":"2017-11-25T02:58:36.358Z","type":"message"}
{"nick":"earendel2","message":"usually you would want semaphores when accessing shared memory with some parallel process/thread","date":"2017-11-25T02:58:38.815Z","type":"message"}
{"nick":"piyer","reason":"Ping timeout: 248 seconds","date":"2017-11-25T02:58:39.999Z","type":"quit"}
{"nick":"GreenJello","message":"which isn't really a thing in js","date":"2017-11-25T02:58:54.071Z","type":"message"}
{"nick":"earendel2","message":"a db driver should handle locks itself","date":"2017-11-25T02:58:59.953Z","type":"message"}
{"nick":"piyer","date":"2017-11-25T02:59:43.784Z","type":"join"}
{"nick":"tripty","reason":"Quit: ... I must go, my planet needs me ...","date":"2017-11-25T02:59:54.661Z","type":"quit"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-11-25T03:00:13.454Z","type":"quit"}
{"nick":"piyer","date":"2017-11-25T03:00:27.906Z","type":"join"}
{"nick":"sasheto","reason":"Ping timeout: 240 seconds","date":"2017-11-25T03:00:32.075Z","type":"quit"}
{"nick":"earendel2","message":"in js you can have several processes.. or a serviceworker run in parallel..you should only worry when you access the same resource.. like a stream, a file or shared memory blocks.. its unusual yep","date":"2017-11-25T03:01:56.924Z","type":"message"}
{"nick":"dman777_alter","message":"http://dpaste.com/1CKYJFM#line-18 how can I get this 409 to send *instead* of 500?","date":"2017-11-25T03:07:53.942Z","type":"message"}
{"nick":"tripty","date":"2017-11-25T03:08:35.518Z","type":"join"}
{"nick":"GreenJello","message":"does throw actually work with numbers?","date":"2017-11-25T03:08:46.160Z","type":"message"}
{"nick":"kroogs","date":"2017-11-25T03:09:00.544Z","type":"join"}
{"nick":"GreenJello","message":"oh I see","date":"2017-11-25T03:09:04.155Z","type":"message"}
{"nick":"plutoniix","date":"2017-11-25T03:09:04.828Z","type":"join"}
{"nick":"dman777_alter","message":"GreenJello: new territory for me...but so far it does throw the 500 succesfully","date":"2017-11-25T03:09:17.141Z","type":"message"}
{"nick":"GreenJello","message":"dman777_alter, make a custom error class","date":"2017-11-25T03:09:20.823Z","type":"message"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2017-11-25T03:09:45.831Z","type":"quit"}
{"nick":"deltab","message":"hey dman777_alter","date":"2017-11-25T03:09:48.436Z","type":"message"}
{"nick":"GreenJello","message":"class MyError extends Error { constructor(message, status) { super(message); this.status = status; this.isExpected = true }","date":"2017-11-25T03:10:01.538Z","type":"message"}
{"nick":"joobz","message":"what is the most efficient way to do it from what you've seen GreenJello ?","date":"2017-11-25T03:10:15.834Z","type":"message"}
{"nick":"deltab","message":"dman777_alter: I'd throw an exception instead of passing in res","date":"2017-11-25T03:10:16.185Z","type":"message"}
{"nick":"joobz","message":"oh sorry","date":"2017-11-25T03:10:20.754Z","type":"message"}
{"nick":"joobz","message":"i missed a page of text :P","date":"2017-11-25T03:10:26.064Z","type":"message"}
{"nick":"joobz","action":"reading up","date":"2017-11-25T03:10:31.389Z","type":"action"}
{"nick":"joobz","message":"my irc scroll was a page back heh","date":"2017-11-25T03:10:39.411Z","type":"message"}
{"nick":"GreenJello","message":"dman777_alter, then create instances of it and throw those. In your error handling, check the isExpected property of the error, and do something different depending on the status property","date":"2017-11-25T03:10:59.534Z","type":"message"}
{"nick":"deltab","message":"dman777_alter: and only send a response from the uppermost function","date":"2017-11-25T03:11:03.237Z","type":"message"}
{"nick":"GreenJello","message":"yeah, usually you deal with http stuff in the actual route","date":"2017-11-25T03:11:33.452Z","type":"message"}
{"nick":"plutoniix","date":"2017-11-25T03:11:37.131Z","type":"join"}
{"nick":"joobz","message":"GreenJello","date":"2017-11-25T03:11:37.131Z","type":"message"}
{"nick":"deltab","message":"that way your lower-level functions aren't coupled to the http layer","date":"2017-11-25T03:11:37.204Z","type":"message"}
{"nick":"dman777_alter","message":"GreenJello: deltab: thanks!","date":"2017-11-25T03:11:43.265Z","type":"message"}
{"nick":"joobz","message":"what im doing is kinda like .. <perform a few MySQL queries> .. do some stuff .. <perform a few more MySQL queries>","date":"2017-11-25T03:12:03.190Z","type":"message"}
{"nick":"plutoniix","reason":"Read error: Connection reset by peer","date":"2017-11-25T03:12:06.860Z","type":"quit"}
{"nick":"joobz","message":"all the queries need to complete sequentually","date":"2017-11-25T03:12:20.491Z","type":"message"}
{"nick":"GreenJello","message":"you could also have status be a string, and map it to the http status codes in the route, with a generic error handler function","date":"2017-11-25T03:12:27.560Z","type":"message"}
{"nick":"joobz","message":"as the results from the first query are more than often used in the later","date":"2017-11-25T03:12:33.019Z","type":"message"}
{"nick":"zsocw","date":"2017-11-25T03:12:35.595Z","type":"join"}
{"nick":"GreenJello","message":"joobz, okay, so either use async/await or a series of .then() calls","date":"2017-11-25T03:12:56.747Z","type":"message"}
{"nick":"u0m3_","date":"2017-11-25T03:13:09.892Z","type":"join"}
{"nick":"GreenJello","message":"joobz, I prefer await because otherwise you often end up with deep nesting, or compromising on correctness","date":"2017-11-25T03:13:20.510Z","type":"message"}
{"nick":"GreenJello","message":"or other weird workarounds","date":"2017-11-25T03:13:54.715Z","type":"message"}
{"nick":"joobz","message":"nesting is a problem atm","date":"2017-11-25T03:13:57.079Z","type":"message"}
{"nick":"joobz","message":"i tried callback","date":"2017-11-25T03:14:00.744Z","type":"message"}
{"nick":"zotune_","reason":"Read error: Connection reset by peer","date":"2017-11-25T03:14:06.386Z","type":"quit"}
{"nick":"joobz","message":"and it lead to nesting which makes the code hard","date":"2017-11-25T03:14:07.481Z","type":"message"}
{"nick":"joobz","message":"and also doesnt help when you have that ..do some stuff.. in between the queries","date":"2017-11-25T03:14:22.106Z","type":"message"}
{"nick":"GreenJello","message":"joobz, const first = await doSomething(); const second = await doSomethingElse(first); const third = await doAnotherThing(first, second);","date":"2017-11-25T03:14:36.451Z","type":"message"}
{"nick":"smccarthy","date":"2017-11-25T03:15:02.358Z","type":"join"}
{"nick":"u0m3","reason":"Ping timeout: 240 seconds","date":"2017-11-25T03:15:05.582Z","type":"quit"}
{"nick":"GreenJello","message":"and you can wrap each step in a try/catch if you want to handle their errors individually","date":"2017-11-25T03:15:11.229Z","type":"message"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T03:15:26.294Z","type":"quit"}
{"nick":"e14","date":"2017-11-25T03:16:13.641Z","type":"join"}
{"nick":"zsoc","reason":"Ping timeout: 268 seconds","date":"2017-11-25T03:16:34.933Z","type":"quit"}
{"nick":"GreenJello","message":"joobz, you'll need to use node 8 or babel for async/await","date":"2017-11-25T03:17:00.062Z","type":"message"}
{"nick":"u0m3__","date":"2017-11-25T03:17:47.310Z","type":"join"}
{"nick":"kroogs","reason":"Ping timeout: 240 seconds","date":"2017-11-25T03:18:05.570Z","type":"quit"}
{"nick":"joobz","message":"GreenJello, say i do something like this https://pastebin.com/mm6JZK7E","date":"2017-11-25T03:18:29.028Z","type":"message"}
{"nick":"joobz","message":"but see my example above","date":"2017-11-25T03:18:45.178Z","type":"message"}
{"nick":"joobz","message":"<perform a few MySQL queries> .. do some stuff .. <perform a few more MySQL queries>","date":"2017-11-25T03:18:50.923Z","type":"message"}
{"nick":"joobz","message":"i get that i can called buildString() where i have <perform a few MySQL queries>","date":"2017-11-25T03:19:07.706Z","type":"message"}
{"nick":"joobz","message":"that will keep all those queries in sequence","date":"2017-11-25T03:19:15.085Z","type":"message"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-11-25T03:19:16.551Z","type":"quit"}
{"nick":"joobz","message":"then i will do some stuff.. and then create another function where i execute some queries in sequence again (similar to buildString())","date":"2017-11-25T03:19:38.086Z","type":"message"}
{"nick":"joobz","message":"but how can i ensure the first block of mysql queries complies, before the 2nd block of queries runs - which is just after the \"do stuff\" bit","date":"2017-11-25T03:20:03.098Z","type":"message"}
{"nick":"joobz","message":"hope that makes sense :P","date":"2017-11-25T03:20:08.197Z","type":"message"}
{"nick":"jscriptStudent","date":"2017-11-25T03:20:13.320Z","type":"join"}
{"nick":"GreenJello","message":"joobz, the function that calls buildString will be an async function, and it can do const res = await buildString()","date":"2017-11-25T03:20:41.527Z","type":"message"}
{"nick":"kickr","reason":"Read error: Connection reset by peer","date":"2017-11-25T03:20:43.042Z","type":"quit"}
{"nick":"u0m3_","reason":"Ping timeout: 248 seconds","date":"2017-11-25T03:21:05.321Z","type":"quit"}
{"nick":"joobz","message":"ahhh","date":"2017-11-25T03:21:07.832Z","type":"message"}
{"nick":"kickr","date":"2017-11-25T03:21:10.323Z","type":"join"}
{"nick":"joobz","message":"so in other words just call buildString with const res = await buildString() ?","date":"2017-11-25T03:21:19.807Z","type":"message"}
{"nick":"GreenJello","message":"yep","date":"2017-11-25T03:21:26.086Z","type":"message"}
{"nick":"joobz","message":"then it will wait for completion of that function","date":"2017-11-25T03:21:27.650Z","type":"message"}
{"nick":"joobz","message":"ahhhh","date":"2017-11-25T03:21:29.525Z","type":"message"}
{"nick":"joobz","message":"thank you GreenJello  :)","date":"2017-11-25T03:21:33.133Z","type":"message"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-11-25T03:21:50.350Z","type":"quit"}
{"nick":"Cabanossi","reason":"Ping timeout: 276 seconds","date":"2017-11-25T03:23:02.173Z","type":"quit"}
{"nick":"Cohedrin","reason":"Read error: Connection reset by peer","date":"2017-11-25T03:23:19.986Z","type":"quit"}
{"nick":"justicefries","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T03:23:42.564Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-11-25T03:24:01.898Z","type":"join"}
{"nick":"Cohedrin","date":"2017-11-25T03:24:09.319Z","type":"join"}
{"nick":"u0m3_","date":"2017-11-25T03:24:19.919Z","type":"join"}
{"nick":"konsolebox","reason":"Ping timeout: 268 seconds","date":"2017-11-25T03:25:12.777Z","type":"quit"}
{"nick":"djapo","date":"2017-11-25T03:26:24.323Z","type":"join"}
{"nick":"joobz","message":"GreenJello, in that example, why would i use await in the buildString() functoin, if i call the functoni using await buidlString() ?","date":"2017-11-25T03:26:57.844Z","type":"message"}
{"nick":"joobz","message":"is there any benefit?","date":"2017-11-25T03:27:01.904Z","type":"message"}
{"nick":"upperdeck","reason":"Ping timeout: 240 seconds","date":"2017-11-25T03:27:22.014Z","type":"quit"}
{"nick":"u0m3__","reason":"Ping timeout: 248 seconds","date":"2017-11-25T03:27:28.130Z","type":"quit"}
{"nick":"GreenJello","message":"joobz, that's not how it works. buildString returns a promise that resolves when buildString returns. If you don't await something, it'll run in the background and the next line of buildString will run","date":"2017-11-25T03:28:40.527Z","type":"message"}
{"nick":"GreenJello","message":"joobz, so if you don't await at all in buildString, it'll return a resolved promise instantly, before the queries execute","date":"2017-11-25T03:29:02.760Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T03:29:08.321Z","type":"join"}
{"nick":"GreenJello","message":"and the queries will all execute at once, and nothing will be able to see their responses","date":"2017-11-25T03:29:22.066Z","type":"message"}
{"nick":"joobz","message":"thanks GreenJello","date":"2017-11-25T03:30:48.825Z","type":"message"}
{"nick":"joobz","message":"you make a good teacher if you ever need a new day job ;P","date":"2017-11-25T03:31:08.784Z","type":"message"}
{"nick":"joobz","message":"very easy to understand. thanks","date":"2017-11-25T03:31:14.212Z","type":"message"}
{"nick":"GreenJello","message":"thanks :-)","date":"2017-11-25T03:32:02.402Z","type":"message"}
{"nick":"konsolebox","date":"2017-11-25T03:34:36.272Z","type":"join"}
{"nick":"piyer","date":"2017-11-25T03:37:49.725Z","type":"join"}
{"nick":"dommel","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2017-11-25T03:38:50.063Z","type":"quit"}
{"nick":"piyer","reason":"Ping timeout: 260 seconds","date":"2017-11-25T03:42:22.835Z","type":"quit"}
{"nick":"ivan_the_monkey","date":"2017-11-25T03:43:13.586Z","type":"join"}
{"nick":"ivan_the_monkey","reason":"Ping timeout: 240 seconds","date":"2017-11-25T03:48:05.606Z","type":"quit"}
{"nick":"konsolebox","reason":"Ping timeout: 260 seconds","date":"2017-11-25T03:49:57.373Z","type":"quit"}
{"nick":"Cabanossi","reason":"Ping timeout: 250 seconds","date":"2017-11-25T03:51:13.857Z","type":"quit"}
{"nick":"dre_","date":"2017-11-25T03:51:39.105Z","type":"join"}
{"nick":"Cabanossi","date":"2017-11-25T03:53:54.979Z","type":"join"}
{"nick":"patterson","date":"2017-11-25T03:57:24.142Z","type":"join"}
{"nick":"Phloxx","reason":"Ping timeout: 258 seconds","date":"2017-11-25T03:58:17.635Z","type":"quit"}
{"nick":"Phloxx","date":"2017-11-25T03:59:26.709Z","type":"join"}
{"nick":"konsolebox","date":"2017-11-25T03:59:42.013Z","type":"join"}
{"nick":"sz0","reason":"Quit: Connection closed for inactivity","date":"2017-11-25T04:00:32.385Z","type":"quit"}
{"nick":"joobz","message":"hey GreenJello","date":"2017-11-25T04:00:51.681Z","type":"message"}
{"nick":"joobz","message":"I have an issue :)","date":"2017-11-25T04:00:54.098Z","type":"message"}
{"nick":"joobz","message":"i need to use v6.9.2 of node.js","date":"2017-11-25T04:01:00.943Z","type":"message"}
{"nick":"joobz","message":"and async function is not supported","date":"2017-11-25T04:01:13.571Z","type":"message"}
{"nick":"joobz","message":"is there another workaround for this supported with v.6.9?","date":"2017-11-25T04:01:31.284Z","type":"message"}
{"nick":"graffix","date":"2017-11-25T04:01:46.319Z","type":"join"}
{"nick":"piyer","date":"2017-11-25T04:02:25.857Z","type":"join"}
{"nick":"justicefries","date":"2017-11-25T04:03:18.897Z","type":"join"}
{"nick":"kroogs","date":"2017-11-25T04:03:48.952Z","type":"join"}
{"nick":"dman777_alter","reason":"Quit: Lost terminal","date":"2017-11-25T04:10:34.303Z","type":"quit"}
{"nick":"kakashiAL","reason":"Ping timeout: 248 seconds","date":"2017-11-25T04:11:13.319Z","type":"quit"}
{"nick":"deltab","message":"joobz: use Babel to convert it","date":"2017-11-25T04:11:47.800Z","type":"message"}
{"nick":"leptone","date":"2017-11-25T04:11:56.814Z","type":"join"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T04:12:11.133Z","type":"quit"}
{"nick":"alexweissman","date":"2017-11-25T04:12:40.822Z","type":"join"}
{"nick":"kroogs","reason":"Ping timeout: 248 seconds","date":"2017-11-25T04:13:20.044Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-11-25T04:14:29.852Z","type":"join"}
{"nick":"JamesMGreene","date":"2017-11-25T04:15:20.448Z","type":"join"}
{"nick":"konsolebox","reason":"Ping timeout: 248 seconds","date":"2017-11-25T04:15:28.136Z","type":"quit"}
{"nick":"jottr_","date":"2017-11-25T04:15:38.219Z","type":"join"}
{"nick":"horsey","date":"2017-11-25T04:16:08.625Z","type":"join"}
{"nick":"leptone","reason":"Ping timeout: 240 seconds","date":"2017-11-25T04:16:27.926Z","type":"quit"}
{"nick":"justin_0xfff","date":"2017-11-25T04:19:41.959Z","type":"join"}
{"nick":"JamesMGreene","reason":"Ping timeout: 248 seconds","date":"2017-11-25T04:19:45.317Z","type":"quit"}
{"nick":"jottr_","reason":"Ping timeout: 248 seconds","date":"2017-11-25T04:20:17.318Z","type":"quit"}
{"nick":"horsey","reason":"Ping timeout: 248 seconds","date":"2017-11-25T04:20:47.979Z","type":"quit"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2017-11-25T04:21:22.721Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-11-25T04:22:57.613Z","type":"join"}
{"nick":"konsolebox","date":"2017-11-25T04:25:30.527Z","type":"join"}
{"nick":"jscriptStudent","date":"2017-11-25T04:27:39.854Z","type":"quit"}
{"nick":"k0mmunicate","reason":"Ping timeout: 248 seconds","date":"2017-11-25T04:27:44.162Z","type":"quit"}
{"nick":"joobz","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2017-11-25T04:29:40.234Z","type":"quit"}
{"nick":"konsolebox","reason":"Ping timeout: 240 seconds","date":"2017-11-25T04:30:05.548Z","type":"quit"}
{"nick":"joobz","date":"2017-11-25T04:30:43.013Z","type":"join"}
{"nick":"grapheti","reason":"Remote host closed the connection","date":"2017-11-25T04:33:52.490Z","type":"quit"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-11-25T04:38:30.073Z","type":"quit"}
{"nick":"ivan_the_monkey","date":"2017-11-25T04:38:54.277Z","type":"join"}
{"nick":"moloy","date":"2017-11-25T04:40:49.937Z","type":"join"}
{"nick":"justin_0xfff","reason":"Ping timeout: 258 seconds","date":"2017-11-25T04:41:36.695Z","type":"quit"}
{"nick":"ivan_the_monkey","reason":"Ping timeout: 260 seconds","date":"2017-11-25T04:44:12.360Z","type":"quit"}
{"nick":"kroogs","date":"2017-11-25T04:45:22.098Z","type":"join"}
{"nick":"digitalnomad91","reason":"Remote host closed the connection","date":"2017-11-25T04:46:38.427Z","type":"quit"}
{"nick":"digitalnomad91","date":"2017-11-25T04:47:07.655Z","type":"join"}
{"nick":"alexweissman","reason":"Remote host closed the connection","date":"2017-11-25T04:49:36.240Z","type":"quit"}
{"nick":"greves","date":"2017-11-25T04:50:53.822Z","type":"join"}
{"nick":"alexweissman","date":"2017-11-25T04:51:03.404Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 276 seconds","date":"2017-11-25T04:52:44.132Z","type":"quit"}
{"nick":"zpmorgan","reason":"Quit: Leaving","date":"2017-11-25T04:52:50.096Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-11-25T04:53:01.022Z","type":"join"}
{"nick":"piyer","date":"2017-11-25T04:54:14.187Z","type":"join"}
{"nick":"gaara4896","date":"2017-11-25T04:54:28.564Z","type":"join"}
{"nick":"alexweissman","reason":"Ping timeout: 248 seconds","date":"2017-11-25T04:55:27.917Z","type":"quit"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-11-25T04:56:09.177Z","type":"quit"}
{"nick":"piyer","date":"2017-11-25T04:56:23.322Z","type":"join"}
{"nick":"piyer","reason":"Read error: Connection reset by peer","date":"2017-11-25T05:02:33.400Z","type":"quit"}
{"nick":"piyer","date":"2017-11-25T05:03:19.367Z","type":"join"}
{"nick":"SenasOzys","reason":"Ping timeout: 248 seconds","date":"2017-11-25T05:04:32.088Z","type":"quit"}
{"nick":"konsolebox","date":"2017-11-25T05:04:58.081Z","type":"join"}
{"nick":"TandyUK","date":"2017-11-25T05:05:24.274Z","type":"join"}
{"nick":"ChALkeR","reason":"Quit: Konversation terminated!","date":"2017-11-25T05:05:55.139Z","type":"quit"}
{"nick":"ChALkeR","date":"2017-11-25T05:06:04.319Z","type":"join"}
{"nick":"TandyUK","message":"so customer of mine has a problem... about 2 years ago a dev of theirs wrote a node based api, and once finished compiled it using nexe.","date":"2017-11-25T05:07:16.337Z","type":"message"}
{"nick":"TandyUK","message":"dev left about 18 months ago, original source has been lost, and now they need ot make some changes","date":"2017-11-25T05:07:42.215Z","type":"message"}
{"nick":"TandyUK","message":"is there any way to decompile the nexe executable to retrieve the original code?","date":"2017-11-25T05:08:02.834Z","type":"message"}
{"nick":"earendel2","message":"nope","date":"2017-11-25T05:08:41.039Z","type":"message"}
{"nick":"TandyUK","message":"joy, guess they'll be re-writing it from scratch then :P","date":"2017-11-25T05:09:11.605Z","type":"message"}
{"nick":"TandyUK","message":"I'll be giving them on of my \"Keep calm and Backup\" usb sticks, os they'll have no excuse for next time :)","date":"2017-11-25T05:09:51.840Z","type":"message"}
{"nick":"charmander","message":"TandyUK: there probably is","date":"2017-11-25T05:10:18.629Z","type":"message"}
{"nick":"TandyUK","message":"I certainly havent found it via google if there is!","date":"2017-11-25T05:10:43.122Z","type":"message"}
{"nick":"charmander","message":"TandyUK: look inside the file. does anything look like javascript?","date":"2017-11-25T05:12:00.003Z","type":"message"}
{"nick":"greves","reason":"Ping timeout: 240 seconds","date":"2017-11-25T05:12:27.787Z","type":"quit"}
{"nick":"justicefries","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T05:12:35.419Z","type":"quit"}
{"nick":"TandyUK","message":"yeah plenty shows up if i just dump it with strings","date":"2017-11-25T05:12:45.869Z","type":"message"}
{"nick":"milardovich","date":"2017-11-25T05:13:12.652Z","type":"join"}
{"nick":"TandyUK","message":"but theres about a billion includes it feels like lol","date":"2017-11-25T05:13:18.460Z","type":"message"}
{"nick":"justicefries","date":"2017-11-25T05:13:23.042Z","type":"join"}
{"nick":"TandyUK","message":"their actual code im told is only a few hundred lines of code","date":"2017-11-25T05:13:47.499Z","type":"message"}
{"nick":"charmander","message":"TandyUK: i don’t suppose you can open it with e.g. 7zip?","date":"2017-11-25T05:14:15.427Z","type":"message"}
{"nick":"deltab","message":"can you open its debugger, or attach a (browser) debugger to it?","date":"2017-11-25T05:14:31.302Z","type":"message"}
{"nick":"plutoniix","date":"2017-11-25T05:15:40.321Z","type":"join"}
{"nick":"TandyUK","message":"i wouldnt know how tbf","date":"2017-11-25T05:15:40.741Z","type":"message"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2017-11-25T05:15:50.319Z","type":"quit"}
{"nick":"justicef_","date":"2017-11-25T05:16:20.648Z","type":"join"}
{"nick":"TandyUK","message":"it launches a mini webserver on port 3000, which presents a rest api","date":"2017-11-25T05:16:25.171Z","type":"message"}
{"nick":"TandyUK","message":"the exe itself gives no other discernable output","date":"2017-11-25T05:16:44.599Z","type":"message"}
{"nick":"SenasOzys","date":"2017-11-25T05:16:46.114Z","type":"join"}
{"nick":"plutoniix","date":"2017-11-25T05:16:59.323Z","type":"join"}
{"nick":"charmander","message":"TandyUK: try 7zip","date":"2017-11-25T05:17:24.604Z","type":"message"}
{"nick":"justicefries","reason":"Ping timeout: 240 seconds","date":"2017-11-25T05:17:52.083Z","type":"quit"}
{"nick":"TandyUK","message":"we have a full backup of the data the api is serving, and fortunately $dev left prettu good api docs so we know exactly what it takes/outputs","date":"2017-11-25T05:17:52.578Z","type":"message"}
{"nick":"deltab","message":"it check its command-line options","date":"2017-11-25T05:17:53.670Z","type":"message"}
{"nick":"milardovich","reason":"Ping timeout: 260 seconds","date":"2017-11-25T05:18:02.315Z","type":"quit"}
{"nick":"TandyUK","message":"deltab: there arent any","date":"2017-11-25T05:18:07.841Z","type":"message"}
{"nick":"TandyUK","message":"config.js in the same dir sets the db logon details and port number","date":"2017-11-25T05:18:29.943Z","type":"message"}
{"nick":"jottr_","date":"2017-11-25T05:18:50.097Z","type":"join"}
{"nick":"TandyUK","message":"ive tried screwing with the config to add eg \"debug\": true, and everything else i could think of to make it give us anything","date":"2017-11-25T05:19:09.958Z","type":"message"}
{"nick":"TandyUK","message":"it doesnt even log requests","date":"2017-11-25T05:19:29.686Z","type":"message"}
{"nick":"TandyUK","message":"charmander: i have, 7zip doesnt recognise it as an archive of any type","date":"2017-11-25T05:20:04.718Z","type":"message"}
{"nick":"joobz","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2017-11-25T05:21:05.983Z","type":"quit"}
{"nick":"charmander","message":"well, it’s possible to retrieve the original","date":"2017-11-25T05:21:22.729Z","type":"message"}
{"nick":"charmander","message":"if the original was only a few hundred lines, though, maybe it will be less time-consuming to rewrite it","date":"2017-11-25T05:21:40.886Z","type":"message"}
{"nick":"TandyUK","message":"yeah thats what im thinking tbh","date":"2017-11-25T05:21:59.431Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 250 seconds","date":"2017-11-25T05:22:13.840Z","type":"quit"}
{"nick":"TandyUK","message":"with the docs we have, its just a labour excercise, and soundling like less than involed in decompiling","date":"2017-11-25T05:22:17.465Z","type":"message"}
{"nick":"upperdeck","reason":"Ping timeout: 248 seconds","date":"2017-11-25T05:22:41.322Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-11-25T05:23:03.403Z","type":"join"}
{"nick":"dconroy","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-11-25T05:23:05.468Z","type":"quit"}
{"nick":"deltab","message":"dump the strings, search for words you know","date":"2017-11-25T05:23:37.835Z","type":"message"}
{"nick":"jottr_","reason":"Ping timeout: 268 seconds","date":"2017-11-25T05:24:13.822Z","type":"quit"}
{"nick":"alexweissman","date":"2017-11-25T05:24:48.029Z","type":"join"}
{"nick":"upperdeck","date":"2017-11-25T05:25:19.040Z","type":"join"}
{"nick":"smccarthy","date":"2017-11-25T05:25:56.939Z","type":"quit"}
{"nick":"earendel2","message":"not many reasons for compiling js into some nexe .. top1 is probably not willing to reveal the source at all","date":"2017-11-25T05:30:37.253Z","type":"message"}
{"nick":"konsolebox","reason":"Ping timeout: 240 seconds","date":"2017-11-25T05:30:42.041Z","type":"quit"}
{"nick":"earendel2","message":"and that story sounds a bit like your dog has eaten your homework","date":"2017-11-25T05:31:22.012Z","type":"message"}
{"nick":"justicef_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T05:31:22.460Z","type":"quit"}
{"nick":"earendel2","message":"or your wife forgot her password, and now you want so desperately to help her :P","date":"2017-11-25T05:31:44.079Z","type":"message"}
{"nick":"earendel2","message":"i wouldnt mind at all .. but its probably not easy done at all.","date":"2017-11-25T05:32:29.334Z","type":"message"}
{"nick":"JamesMGreene","date":"2017-11-25T05:34:51.483Z","type":"join"}
{"nick":"TandyUK","message":"its not worth the effort, its easier to just rewrite it","date":"2017-11-25T05:38:13.864Z","type":"message"}
{"nick":"TandyUK","message":"I was hoping along the lines of what charmander suggested","date":"2017-11-25T05:38:39.221Z","type":"message"}
{"nick":"djapo","reason":"Quit: leaving","date":"2017-11-25T05:38:59.190Z","type":"quit"}
{"nick":"ccii1","reason":"Ping timeout: 240 seconds","date":"2017-11-25T05:39:05.573Z","type":"quit"}
{"nick":"JamesMGreene","reason":"Ping timeout: 260 seconds","date":"2017-11-25T05:39:37.263Z","type":"quit"}
{"nick":"AlphaKatten","reason":"Ping timeout: 250 seconds","date":"2017-11-25T05:40:25.792Z","type":"quit"}
{"nick":"konsolebox","date":"2017-11-25T05:40:32.097Z","type":"join"}
{"nick":"SenasOzys","reason":"Remote host closed the connection","date":"2017-11-25T05:41:54.720Z","type":"quit"}
{"nick":"TandyUK","message":"[05:30] <earendel2> not many reasons for compiling js into some nexe .. top1 is probably not willing to reveal the source at all  << if thats the case, surely my client has a legal case against their (ex)employee. he wrote the code for the company, he wasnt told to compile it but did so anyway \"because it would be faster\", and never put the source on the companies backed up fileserver","date":"2017-11-25T05:42:02.109Z","type":"message"}
{"nick":"SenasOzys","date":"2017-11-25T05:42:06.286Z","type":"join"}
{"nick":"TandyUK","message":"so it sounds like he may have deliberately obfuscated it as a final 'f##k you'","date":"2017-11-25T05:43:50.222Z","type":"message"}
{"nick":"melvster","reason":"Ping timeout: 248 seconds","date":"2017-11-25T05:44:01.318Z","type":"quit"}
{"nick":"earendel2","message":"possibly. :)","date":"2017-11-25T05:44:18.801Z","type":"message"}
{"nick":"TandyUK","message":"he didnt exaclty leave on good terms so im told lol","date":"2017-11-25T05:44:34.205Z","type":"message"}
{"nick":"jsatk","date":"2017-11-25T05:44:58.058Z","type":"join"}
{"nick":"TandyUK","message":"anyway ty, i'll go tell them to rewite it :)","date":"2017-11-25T05:45:01.770Z","type":"message"}
{"nick":"digitalnomad91","reason":"Read error: Connection reset by peer","date":"2017-11-25T05:45:12.606Z","type":"quit"}
{"nick":"TandyUK","message":"and maybe speak to their solicitor lol","date":"2017-11-25T05:45:13.658Z","type":"message"}
{"nick":"ivan_the_monkey","date":"2017-11-25T05:45:34.162Z","type":"join"}
{"nick":"TandyUK","date":"2017-11-25T05:45:42.494Z","type":"part"}
{"nick":"jottr_","date":"2017-11-25T05:46:42.767Z","type":"join"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-11-25T05:46:53.618Z","type":"quit"}
{"nick":"piyer","date":"2017-11-25T05:47:17.487Z","type":"join"}
{"nick":"konsolebox","reason":"Ping timeout: 240 seconds","date":"2017-11-25T05:47:42.072Z","type":"quit"}
{"nick":"konsolebox","date":"2017-11-25T05:48:29.103Z","type":"join"}
{"nick":"ivan_the_monkey","reason":"Ping timeout: 248 seconds","date":"2017-11-25T05:50:24.100Z","type":"quit"}
{"nick":"turdpile","date":"2017-11-25T05:50:56.081Z","type":"join"}
{"nick":"jottr_","reason":"Ping timeout: 240 seconds","date":"2017-11-25T05:50:57.903Z","type":"quit"}
{"nick":"theWhisper_","date":"2017-11-25T05:51:56.521Z","type":"join"}
{"nick":"zsocw","reason":"Remote host closed the connection","date":"2017-11-25T05:53:48.586Z","type":"quit"}
{"nick":"zsocw","date":"2017-11-25T05:54:00.367Z","type":"join"}
{"nick":"titankiller","date":"2017-11-25T05:55:44.396Z","type":"join"}
{"nick":"SenasOzys","reason":"Read error: Connection reset by peer","date":"2017-11-25T05:59:36.827Z","type":"quit"}
{"nick":"SenasOzys_","date":"2017-11-25T05:59:43.061Z","type":"join"}
{"nick":"titankiller","reason":"Ping timeout: 268 seconds","date":"2017-11-25T06:00:36.833Z","type":"quit"}
{"nick":"alexweissman","reason":"Remote host closed the connection","date":"2017-11-25T06:05:22.193Z","type":"quit"}
{"nick":"konsolebox","reason":"Ping timeout: 240 seconds","date":"2017-11-25T06:10:57.830Z","type":"quit"}
{"nick":"konsolebox","date":"2017-11-25T06:11:59.103Z","type":"join"}
{"nick":"MuffinMedic","date":"2017-11-25T06:14:52.494Z","type":"join"}
{"nick":"MuffinMedic","message":"Hello. I'm receiving an error when running \"npm install\" and am not sure how to fix it. https://hastebin.com/udatehomub.vbs","date":"2017-11-25T06:15:27.838Z","type":"message"}
{"nick":"MuffinMedic","message":"Thank you","date":"2017-11-25T06:15:28.855Z","type":"message"}
{"nick":"horsey","date":"2017-11-25T06:16:58.786Z","type":"join"}
{"nick":"jottr_","date":"2017-11-25T06:17:19.036Z","type":"join"}
{"nick":"horsey","reason":"Ping timeout: 248 seconds","date":"2017-11-25T06:21:20.131Z","type":"quit"}
{"nick":"jottr_","reason":"Ping timeout: 248 seconds","date":"2017-11-25T06:21:52.168Z","type":"quit"}
{"nick":"mercerist","date":"2017-11-25T06:21:58.746Z","type":"join"}
{"nick":"oetjenj","date":"2017-11-25T06:23:13.029Z","type":"join"}
{"nick":"ArchNoob","date":"2017-11-25T06:23:14.410Z","type":"join"}
{"nick":"konsolebox","reason":"Ping timeout: 248 seconds","date":"2017-11-25T06:23:28.028Z","type":"quit"}
{"nick":"avu","message":"MuffinMedic: so, compiling sqlite3 failed, although I can't see the actual error in what you pasted, have you checked the detailed log?","date":"2017-11-25T06:24:00.870Z","type":"message"}
{"nick":"avu","message":"MuffinMedic: just paste it too if you can","date":"2017-11-25T06:24:23.233Z","type":"message"}
{"nick":"MuffinMedic","message":"avu: this? https://hastebin.com/pekelifife.sql","date":"2017-11-25T06:24:59.331Z","type":"message"}
{"nick":"konsolebox","date":"2017-11-25T06:25:00.322Z","type":"join"}
{"nick":"avu","message":"MuffinMedic: are those the complete contents of  /home/bots/.npm/_logs/2017-11-25T06_13_46_566Z-debug.log ?","date":"2017-11-25T06:26:08.912Z","type":"message"}
{"nick":"MuffinMedic","message":"It's the end bt of it yea","date":"2017-11-25T06:26:21.856Z","type":"message"}
{"nick":"MuffinMedic","message":"do you want the whole shebang?","date":"2017-11-25T06:26:26.693Z","type":"message"}
{"nick":"InFlames","reason":"Ping timeout: 268 seconds","date":"2017-11-25T06:26:30.814Z","type":"quit"}
{"nick":"turdpile","reason":"Remote host closed the connection","date":"2017-11-25T06:27:00.188Z","type":"quit"}
{"nick":"avu","message":"well, at least I can't see the actual compile error in there either","date":"2017-11-25T06:27:49.447Z","type":"message"}
{"nick":"piyer","reason":"Remote host closed the connection","date":"2017-11-25T06:27:59.757Z","type":"quit"}
{"nick":"avu","message":"have you tried just installing the sqlite3 dev packages from your distribution?","date":"2017-11-25T06:28:06.269Z","type":"message"}
{"nick":"avu","message":"that should ake sure everything needed for compiling sqlite3 itself is present on your system, maybe that helps","date":"2017-11-25T06:28:30.166Z","type":"message"}
{"nick":"gli","date":"2017-11-25T06:29:45.839Z","type":"join"}
{"nick":"systemfault","reason":"Quit: Bye!","date":"2017-11-25T06:29:47.641Z","type":"quit"}
{"nick":"upperdeck","reason":"Ping timeout: 248 seconds","date":"2017-11-25T06:29:52.178Z","type":"quit"}
{"nick":"gli","reason":"Client Quit","date":"2017-11-25T06:30:47.351Z","type":"quit"}
{"nick":"gli","date":"2017-11-25T06:31:06.837Z","type":"join"}
{"nick":"avu","message":"MuffinMedic: (I mean 'apt build-dep sqlite3' on Debian/Ubuntu)","date":"2017-11-25T06:31:13.146Z","type":"message"}
{"nick":"upperdeck","date":"2017-11-25T06:31:25.478Z","type":"join"}
{"nick":"gli","reason":"Read error: Connection reset by peer","date":"2017-11-25T06:31:35.842Z","type":"quit"}
{"nick":"gli","date":"2017-11-25T06:32:14.318Z","type":"join"}
{"nick":"gli","reason":"Read error: Connection reset by peer","date":"2017-11-25T06:32:42.572Z","type":"quit"}
{"nick":"gli","date":"2017-11-25T06:33:00.282Z","type":"join"}
{"nick":"gli","reason":"Read error: Connection reset by peer","date":"2017-11-25T06:33:03.497Z","type":"quit"}
{"nick":"leptone","date":"2017-11-25T06:33:33.102Z","type":"join"}
{"nick":"gli","date":"2017-11-25T06:34:18.161Z","type":"join"}
{"nick":"gli","reason":"Client Quit","date":"2017-11-25T06:34:18.291Z","type":"quit"}
{"nick":"lpin","date":"2017-11-25T06:35:51.345Z","type":"join"}
{"nick":"konsolebox","reason":"Ping timeout: 248 seconds","date":"2017-11-25T06:36:17.321Z","type":"quit"}
{"nick":"InFlames","date":"2017-11-25T06:36:22.951Z","type":"join"}
{"nick":"konsolebox","date":"2017-11-25T06:37:01.261Z","type":"join"}
{"nick":"ivan_the_monkey","date":"2017-11-25T06:37:26.263Z","type":"join"}
{"nick":"coot___________","date":"2017-11-25T06:37:33.322Z","type":"join"}
{"nick":"leptone","reason":"Ping timeout: 240 seconds","date":"2017-11-25T06:37:42.066Z","type":"quit"}
{"nick":"VibroMax","date":"2017-11-25T06:39:33.971Z","type":"join"}
{"nick":"konsolebox","reason":"Ping timeout: 260 seconds","date":"2017-11-25T06:42:02.322Z","type":"quit"}
{"nick":"ivan_the_monkey","reason":"Ping timeout: 260 seconds","date":"2017-11-25T06:42:37.276Z","type":"quit"}
{"nick":"konsolebox","date":"2017-11-25T06:43:32.781Z","type":"join"}
{"nick":"MuffinMedic","message":"avu: that didnt fix anything","date":"2017-11-25T06:46:44.314Z","type":"message"}
{"nick":"MuffinMedic","message":"And sqlite3 is already installed","date":"2017-11-25T06:46:49.943Z","type":"message"}
{"nick":"konsolebox","reason":"Ping timeout: 268 seconds","date":"2017-11-25T06:48:42.824Z","type":"quit"}
{"nick":"konsolebox","date":"2017-11-25T06:49:01.800Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2017-11-25T06:52:34.333Z","type":"quit"}
{"nick":"milardovich","date":"2017-11-25T06:53:13.082Z","type":"join"}
{"nick":"Cabanossi","date":"2017-11-25T06:53:35.126Z","type":"join"}
{"nick":"theWhisper_","reason":"Ping timeout: 240 seconds","date":"2017-11-25T06:55:05.616Z","type":"quit"}
{"nick":"piyer","date":"2017-11-25T06:58:40.249Z","type":"join"}
{"nick":"VibroMax","reason":"Ping timeout: 268 seconds","date":"2017-11-25T06:59:11.841Z","type":"quit"}
{"nick":"ninegrid","date":"2017-11-25T07:00:56.043Z","type":"join"}
{"nick":"coot___________","reason":"Quit: coot___________","date":"2017-11-25T07:01:58.008Z","type":"quit"}
{"nick":"nickyd","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-11-25T07:02:06.246Z","type":"quit"}
{"nick":"konsolebox","reason":"Ping timeout: 240 seconds","date":"2017-11-25T07:03:57.869Z","type":"quit"}
{"nick":"chowmeined","date":"2017-11-25T07:05:27.424Z","type":"join"}
{"nick":"konsolebox","date":"2017-11-25T07:05:32.772Z","type":"join"}
{"nick":"snowkidind","reason":"Quit: astalaPIZZA Baby!","date":"2017-11-25T07:06:59.932Z","type":"quit"}
{"nick":"Silvering","date":"2017-11-25T07:07:50.512Z","type":"join"}
{"nick":"jottr_","date":"2017-11-25T07:17:17.601Z","type":"join"}
{"nick":"Neuromancer","reason":"Quit: Going offline, see ya! (www.adiirc.com)","date":"2017-11-25T07:18:08.553Z","type":"quit"}
{"nick":"wsieroci","date":"2017-11-25T07:18:12.868Z","type":"join"}
{"nick":"k0mmunicate","date":"2017-11-25T07:18:22.969Z","type":"join"}
{"nick":"ArchNoob","reason":"Ping timeout: 255 seconds","date":"2017-11-25T07:19:48.010Z","type":"quit"}
{"nick":"jottr_","reason":"Ping timeout: 268 seconds","date":"2017-11-25T07:22:00.861Z","type":"quit"}
{"nick":"konsolebox","reason":"Ping timeout: 268 seconds","date":"2017-11-25T07:23:51.940Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-11-25T07:25:41.977Z","type":"join"}
{"nick":"konsolebox","date":"2017-11-25T07:26:03.997Z","type":"join"}
{"nick":"galeBryton","date":"2017-11-25T07:28:31.086Z","type":"join"}
{"nick":"titankiller","date":"2017-11-25T07:32:08.426Z","type":"join"}
{"nick":"galeBryton","reason":"Client Quit","date":"2017-11-25T07:32:28.665Z","type":"quit"}
{"nick":"darutoko","date":"2017-11-25T07:39:50.050Z","type":"join"}
{"nick":"ivan_the_monkey","date":"2017-11-25T07:40:39.160Z","type":"join"}
{"nick":"Zamerick","date":"2017-11-25T07:40:40.306Z","type":"join"}
{"nick":"milardovich","reason":"Remote host closed the connection","date":"2017-11-25T07:42:44.597Z","type":"quit"}
{"nick":"kenansulayman","reason":"Ping timeout: 255 seconds","date":"2017-11-25T07:42:49.988Z","type":"quit"}
{"nick":"ivan_the_monkey","reason":"Ping timeout: 248 seconds","date":"2017-11-25T07:45:35.989Z","type":"quit"}
{"nick":"kenansulayman","date":"2017-11-25T07:45:38.322Z","type":"join"}
{"nick":"konsolebox","reason":"Ping timeout: 248 seconds","date":"2017-11-25T07:46:08.061Z","type":"quit"}
{"nick":"neoncontrails","date":"2017-11-25T07:48:08.072Z","type":"join"}
{"nick":"konsolebox","date":"2017-11-25T07:48:35.322Z","type":"join"}
{"nick":"jsatk","reason":"Ping timeout: 248 seconds","date":"2017-11-25T07:48:48.112Z","type":"quit"}
{"nick":"Mia","date":"2017-11-25T07:48:49.043Z","type":"join"}
{"nick":"Mia","reason":"Changing host","date":"2017-11-25T07:48:49.158Z","type":"quit"}
{"nick":"Mia","date":"2017-11-25T07:48:49.250Z","type":"join"}
{"nick":"jsatk","date":"2017-11-25T07:50:37.319Z","type":"join"}
{"nick":"telephone","reason":"Ping timeout: 240 seconds","date":"2017-11-25T07:51:28.570Z","type":"quit"}
{"nick":"Cabanossi","reason":"Ping timeout: 276 seconds","date":"2017-11-25T07:51:29.136Z","type":"quit"}
{"nick":"karmahacker","date":"2017-11-25T07:52:26.082Z","type":"join"}
{"nick":"Cabanossi","date":"2017-11-25T07:53:11.039Z","type":"join"}
{"nick":"InFlames","reason":"Ping timeout: 240 seconds","date":"2017-11-25T07:55:01.996Z","type":"quit"}
{"nick":"telephone","date":"2017-11-25T07:55:07.009Z","type":"join"}
{"nick":"telephone","reason":"Changing host","date":"2017-11-25T07:55:07.101Z","type":"quit"}
{"nick":"telephone","date":"2017-11-25T07:55:07.101Z","type":"join"}
{"nick":"Virtulis","reason":"Ping timeout: 250 seconds","date":"2017-11-25T07:55:37.839Z","type":"quit"}
{"nick":"donguston","reason":"Ping timeout: 260 seconds","date":"2017-11-25T07:57:17.289Z","type":"quit"}
{"nick":"qrestlove","reason":"Remote host closed the connection","date":"2017-11-25T07:59:03.871Z","type":"quit"}
