{"nick":"roomcayz","reason":"Quit: roomcayz","date":"2017-12-17T00:00:20.639Z","type":"quit"}
{"nick":"djapo","message":"this is the line in their code https://github.com/apollographql/subscriptions-transport-ws/blob/master/src/client.ts#L532","date":"2017-12-17T00:01:10.755Z","type":"message"}
{"nick":"phil22","reason":"Quit: WeeChat 1.9.1","date":"2017-12-17T00:02:29.798Z","type":"quit"}
{"nick":"rafajafar","message":"hey yall, thanks for looking at it earlier ljharb, still having issues: https://gist.github.com/anonymous/5bdcfd1a3b160d5da4d39470cb6e559f","date":"2017-12-17T00:02:51.720Z","type":"message"}
{"nick":"rafajafar","message":"so the \"then\" statement commented out there worked","date":"2017-12-17T00:03:04.546Z","type":"message"}
{"nick":"rafajafar","message":"in \"snippet.js\"","date":"2017-12-17T00:03:17.094Z","type":"message"}
{"nick":"rafajafar","message":"but the actual use of this does not........ and what's funny is, it prints the address.","date":"2017-12-17T00:03:33.296Z","type":"message"}
{"nick":"rafajafar","message":"so in contracts.js it never gets to line 8","date":"2017-12-17T00:04:01.378Z","type":"message"}
{"nick":"djapo","message":"when I console.log(receivedData); this is what gets printed {'type': 'connection_init'} .. but when i try receivedData.type it prints undefined","date":"2017-12-17T00:04:12.146Z","type":"message"}
{"nick":"rafajafar","message":"try receivedData[\"type\"]","date":"2017-12-17T00:04:47.495Z","type":"message"}
{"nick":"e14","date":"2017-12-17T00:04:58.137Z","type":"join"}
{"nick":"geirha","message":"it's clearly not a JSON string at that point at least, so it makes sense for JSON.parse to throw an error","date":"2017-12-17T00:05:08.572Z","type":"message"}
{"nick":"soee_","reason":"Ping timeout: 248 seconds","date":"2017-12-17T00:05:20.181Z","type":"quit"}
{"nick":"bradleyprice","date":"2017-12-17T00:05:46.942Z","type":"join"}
{"nick":"deltab","message":"receivedData should be typed as a string, not 'any'","date":"2017-12-17T00:05:53.209Z","type":"message"}
{"nick":"deltab","message":"JSON.parse expects a string","date":"2017-12-17T00:06:09.645Z","type":"message"}
{"nick":"djapo","message":"rafajafar: it also prints undefined","date":"2017-12-17T00:06:19.489Z","type":"message"}
{"nick":"deltab","message":"what is  typeof receivedData ?","date":"2017-12-17T00:06:40.885Z","type":"message"}
{"nick":"rafajafar","message":"did you JSON.parse it?","date":"2017-12-17T00:06:46.351Z","type":"message"}
{"nick":"rafajafar","message":"oh I see above","date":"2017-12-17T00:06:56.955Z","type":"message"}
{"nick":"djapo","message":"deltab: how can I type cast it to a string? I don't know what type receivedData is","date":"2017-12-17T00:06:59.454Z","type":"message"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T00:07:09.076Z","type":"quit"}
{"nick":"deltab","message":"no, I'm saying it must already be a string","date":"2017-12-17T00:07:13.260Z","type":"message"}
{"nick":"rafajafar","message":"try this","date":"2017-12-17T00:07:24.718Z","type":"message"}
{"nick":"deltab","message":"it doesn't make sense to convert something else into a string for it, but that's what'll happen","date":"2017-12-17T00:07:38.329Z","type":"message"}
{"nick":"rafajafar","message":"JSON.parse(receivedData).type","date":"2017-12-17T00:07:38.409Z","type":"message"}
{"nick":"rafajafar","message":"my god promises are killing me","date":"2017-12-17T00:08:29.099Z","type":"message"}
{"nick":"ljharb","message":"rafajafar: JSON.parse can throw tho","date":"2017-12-17T00:08:30.789Z","type":"message"}
{"nick":"grapheti","reason":"Read error: Connection reset by peer","date":"2017-12-17T00:08:38.630Z","type":"quit"}
{"nick":"rafajafar","message":"that's ok we'r ejust testing","date":"2017-12-17T00:08:41.303Z","type":"message"}
{"nick":"ljharb","message":"rafajafar: make sure to always add a `.catch` on every promise chain.","date":"2017-12-17T00:08:46.793Z","type":"message"}
{"nick":"ljharb","message":"rafajafar: otherwise you'll never see any errors.","date":"2017-12-17T00:08:50.800Z","type":"message"}
{"nick":"rafajafar","message":"ok","date":"2017-12-17T00:08:54.907Z","type":"message"}
{"nick":"rafajafar","message":"let me see if I got one","date":"2017-12-17T00:09:01.713Z","type":"message"}
{"nick":"ljharb","message":"in this case, on the result of `get()`","date":"2017-12-17T00:09:11.501Z","type":"message"}
{"nick":"danyim","date":"2017-12-17T00:09:46.302Z","type":"join"}
{"nick":"grapheti","date":"2017-12-17T00:09:57.452Z","type":"join"}
{"nick":"djapo","message":"rafajafar: it throws an error","date":"2017-12-17T00:10:04.239Z","type":"message"}
{"nick":"deltab","message":"djapo: what is the error message?","date":"2017-12-17T00:10:33.013Z","type":"message"}
{"nick":"djapo","message":"well im new to debuging but in the catch statement I have catch(e)  and when I print it out this is what it says \"{'type': 'connection_init'}\"","date":"2017-12-17T00:11:26.405Z","type":"message"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T00:11:43.149Z","type":"quit"}
{"nick":"e14","date":"2017-12-17T00:12:16.786Z","type":"join"}
{"nick":"djapo","message":"but when I console log it it prints {'type': 'connection_init'} debugger eval code:1:1","date":"2017-12-17T00:12:28.723Z","type":"message"}
{"nick":"djapo","message":"undefined","date":"2017-12-17T00:12:35.988Z","type":"message"}
{"nick":"danyim","reason":"Ping timeout: 264 seconds","date":"2017-12-17T00:14:09.193Z","type":"quit"}
{"nick":"djapo","message":"oh, and in the scope column theres a variable named t that has a syntaxError message: \"JSON.parse: expected property name or '}' at line 1 column 2 of the JSON data\"","date":"2017-12-17T00:14:33.446Z","type":"message"}
{"nick":"deltab","message":"it has {'type': 'connection_init'} with ', not \"?","date":"2017-12-17T00:16:09.682Z","type":"message"}
{"nick":"rafajafar","message":"ljharb, good look but still no errors printed: https://gist.github.com/anonymous/b41004d501314ee7a396536a9a2ddcff","date":"2017-12-17T00:16:13.399Z","type":"message"}
{"nick":"deltab","message":"with ' it's not valid JSON","date":"2017-12-17T00:16:23.771Z","type":"message"}
{"nick":"x405","date":"2017-12-17T00:16:27.751Z","type":"join"}
{"nick":"deltab","message":"djapo: JSON.parse first reads the { in line 1 column 1, which starts an object, then ' in line 1 column 2, which is invalid","date":"2017-12-17T00:17:30.767Z","type":"message"}
{"nick":"cig0","reason":"Ping timeout: 260 seconds","date":"2017-12-17T00:17:51.514Z","type":"quit"}
{"nick":"karmahacker","date":"2017-12-17T00:18:23.235Z","type":"join"}
{"nick":"djapo","message":"deltab: thats odd, In my python code im using double quotes to send the message","date":"2017-12-17T00:18:30.693Z","type":"message"}
{"nick":"d4rklit3","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T00:18:37.683Z","type":"quit"}
{"nick":"deltab","message":"djapo: what function is used to encode it?","date":"2017-12-17T00:18:50.675Z","type":"message"}
{"nick":"rafajafar","message":"so yeahhhh no idea why this isn't getting to \"then\"","date":"2017-12-17T00:19:08.509Z","type":"message"}
{"nick":"rafajafar","message":"I'm def doing something dumb","date":"2017-12-17T00:19:22.693Z","type":"message"}
{"nick":"krek","reason":"Quit: My Mac Mini has gone to sleep. ZZZzzz…","date":"2017-12-17T00:19:24.452Z","type":"quit"}
{"nick":"rafajafar","message":"if I print out api.registryAddress I get a promise dumped lol","date":"2017-12-17T00:19:43.134Z","type":"message"}
{"nick":"mezod","reason":"Remote host closed the connection","date":"2017-12-17T00:20:06.763Z","type":"quit"}
{"nick":"SenasOzys_","date":"2017-12-17T00:20:26.524Z","type":"join"}
{"nick":"deltab","message":"rafajafar: without calling it?","date":"2017-12-17T00:20:57.777Z","type":"message"}
{"nick":"deltab","message":"or do you mean api.registryAddress()?","date":"2017-12-17T00:21:15.846Z","type":"message"}
{"nick":"SenasOzys","reason":"Ping timeout: 256 seconds","date":"2017-12-17T00:21:33.482Z","type":"quit"}
{"nick":"awgh","reason":"Ping timeout: 240 seconds","date":"2017-12-17T00:21:35.545Z","type":"quit"}
{"nick":"aalex","date":"2017-12-17T00:22:36.409Z","type":"join"}
{"nick":"horsey","date":"2017-12-17T00:23:34.721Z","type":"join"}
{"nick":"karmahacker","reason":"Ping timeout: 272 seconds","date":"2017-12-17T00:23:44.198Z","type":"quit"}
{"nick":"ch4plin","reason":"Quit: Leaving","date":"2017-12-17T00:25:00.830Z","type":"quit"}
{"nick":"leptone","date":"2017-12-17T00:26:22.460Z","type":"join"}
{"nick":"djapo","message":"deltab: I don't know how can I inspect what is send over websockets?","date":"2017-12-17T00:26:27.521Z","type":"message"}
{"nick":"aalex","reason":"Ping timeout: 256 seconds","date":"2017-12-17T00:27:13.404Z","type":"quit"}
{"nick":"horsey","reason":"Ping timeout: 265 seconds","date":"2017-12-17T00:28:28.405Z","type":"quit"}
{"nick":"leptone","reason":"Ping timeout: 265 seconds","date":"2017-12-17T00:31:22.456Z","type":"quit"}
{"nick":"gxt","reason":"Quit: WeeChat 2.0","date":"2017-12-17T00:32:57.425Z","type":"quit"}
{"nick":"rafajafar","message":"deltab, yea sorry Yes I call it","date":"2017-12-17T00:33:34.502Z","type":"message"}
{"nick":"rafajafar","message":"yeah I have no idea what's going on here:","date":"2017-12-17T00:34:08.644Z","type":"message"}
{"nick":"rafajafar","message":"https://gist.github.com/anonymous/b41004d501314ee7a396536a9a2ddcff","date":"2017-12-17T00:34:10.767Z","type":"message"}
{"nick":"rafajafar","message":"I should be getting to line 15 of contract.js","date":"2017-12-17T00:34:25.030Z","type":"message"}
{"nick":"orbyt_","date":"2017-12-17T00:34:42.562Z","type":"join"}
{"nick":"MeTonaTOR","reason":"Read error: Connection reset by peer","date":"2017-12-17T00:35:11.803Z","type":"quit"}
{"nick":"gxt","date":"2017-12-17T00:37:01.467Z","type":"join"}
{"nick":"jscriptStudent","date":"2017-12-17T00:37:05.451Z","type":"join"}
{"nick":"soee_","date":"2017-12-17T00:38:45.776Z","type":"join"}
{"nick":"ffx","reason":"Quit: Leaving...","date":"2017-12-17T00:41:11.242Z","type":"quit"}
{"nick":"SenasOzys_","reason":"Ping timeout: 256 seconds","date":"2017-12-17T00:41:24.602Z","type":"quit"}
{"nick":"Cabanossi","reason":"Ping timeout: 250 seconds","date":"2017-12-17T00:42:25.777Z","type":"quit"}
{"nick":"Flynnn","reason":"Quit: Auf Wiedersehen!","date":"2017-12-17T00:42:43.829Z","type":"quit"}
{"nick":"karmahacker","date":"2017-12-17T00:43:34.450Z","type":"join"}
{"nick":"ljharb","message":"rafajafar: oh the other thing. don't use `registry =` or anything","date":"2017-12-17T00:44:18.404Z","type":"message"}
{"nick":"ljharb","message":"rafajafar: iow, don't store things in closed-over vars. return things into the promise chain.","date":"2017-12-17T00:44:31.828Z","type":"message"}
{"nick":"ljharb","message":"rafajafar: the *promise itself* is what should hold the value.","date":"2017-12-17T00:44:41.584Z","type":"message"}
{"nick":"rafajafar","message":"let me take a look","date":"2017-12-17T00:44:45.557Z","type":"message"}
{"nick":"elxa","reason":"Quit: Leaving","date":"2017-12-17T00:45:12.670Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-12-17T00:45:13.563Z","type":"join"}
{"nick":"SenasOzys_","date":"2017-12-17T00:51:54.164Z","type":"join"}
{"nick":"rafajafar","message":"ljharb, I hear that, but I still cant get to line 15","date":"2017-12-17T00:55:00.366Z","type":"message"}
{"nick":"ljharb","message":"rafajafar: what's the call to `get` look like","date":"2017-12-17T00:55:43.218Z","type":"message"}
{"nick":"Milijus","date":"2017-12-17T01:06:06.874Z","type":"join"}
{"nick":"snowkidind","reason":"Quit: astalaPIZZA Baby!","date":"2017-12-17T01:06:38.217Z","type":"quit"}
{"nick":"piyer","reason":"Ping timeout: 264 seconds","date":"2017-12-17T01:09:57.148Z","type":"quit"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-12-17T01:13:14.731Z","type":"quit"}
{"nick":"yengas","reason":"Quit: Leaving","date":"2017-12-17T01:13:27.464Z","type":"quit"}
{"nick":"Roughy","reason":"Quit: Meadow Fresh milk","date":"2017-12-17T01:15:30.405Z","type":"quit"}
{"nick":"captain_morgan","reason":"Remote host closed the connection","date":"2017-12-17T01:15:54.948Z","type":"quit"}
{"nick":"captain_morgan","date":"2017-12-17T01:16:06.457Z","type":"join"}
{"nick":"astrofog","date":"2017-12-17T01:16:11.280Z","type":"join"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T01:16:13.351Z","type":"quit"}
{"nick":"rafajafar","message":"ljharb, return Contracts.get(this.api)","date":"2017-12-17T01:16:24.842Z","type":"message"}
{"nick":"rafajafar","message":"sorry for the delay I'm juggling a lot of things atm, deadline on Monday :-/","date":"2017-12-17T01:16:40.441Z","type":"message"}
{"nick":"rafajafar","message":"ljharb, with full context: https://gist.github.com/anonymous/ba18c6424d32ff230ca214aae516bd4d","date":"2017-12-17T01:19:08.710Z","type":"message"}
{"nick":"e14","date":"2017-12-17T01:19:29.070Z","type":"join"}
{"nick":"ed209","reason":"Remote host closed the connection","date":"2017-12-17T01:20:00.910Z","type":"quit"}
{"nick":"ed209","date":"2017-12-17T01:20:09.141Z","type":"join"}
{"nick":"konsolebox","reason":"Ping timeout: 240 seconds","date":"2017-12-17T01:23:48.479Z","type":"quit"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T01:27:33.352Z","type":"quit"}
{"nick":"eshlox","reason":"Quit: Connection closed for inactivity","date":"2017-12-17T01:28:20.663Z","type":"quit"}
{"nick":"Gustavo6046","date":"2017-12-17T01:29:27.238Z","type":"join"}
{"nick":"Delta-One","reason":"Read error: Connection reset by peer","date":"2017-12-17T01:29:38.864Z","type":"quit"}
{"nick":"Delta-One","date":"2017-12-17T01:30:06.437Z","type":"join"}
{"nick":"konsolebox","date":"2017-12-17T01:30:36.486Z","type":"join"}
{"nick":"soee","date":"2017-12-17T01:31:58.204Z","type":"join"}
{"nick":"soee_","reason":"Read error: Connection reset by peer","date":"2017-12-17T01:32:19.908Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-12-17T01:34:12.060Z","type":"join"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-12-17T01:34:49.355Z","type":"quit"}
{"nick":"heyitsrama","reason":"Ping timeout: 264 seconds","date":"2017-12-17T01:36:21.265Z","type":"quit"}
{"nick":"kividroid","date":"2017-12-17T01:38:38.778Z","type":"join"}
{"nick":"dconroy","date":"2017-12-17T01:41:50.506Z","type":"join"}
{"nick":"kuuranne","reason":"Ping timeout: 240 seconds","date":"2017-12-17T01:43:11.979Z","type":"quit"}
{"nick":"kuuranne","date":"2017-12-17T01:44:05.022Z","type":"join"}
{"nick":"orbyt_","date":"2017-12-17T01:44:30.524Z","type":"join"}
{"nick":"webbb","date":"2017-12-17T01:45:38.413Z","type":"join"}
{"nick":"deltab","message":"rafajafar: hmm, okay, so the first thing that runs is whatever logs \"sedacs.connect():: connecting\" through to \"sedacs.connect():: calling fetchContracts\". Then fetchContracts is called, which logs a couple more lines and calls Contract.get(this.api)","date":"2017-12-17T01:49:36.100Z","type":"message"}
{"nick":"deltab","message":"that logs \"Getting all contracts.\" and calls api.registryAddress","date":"2017-12-17T01:50:49.873Z","type":"message"}
{"nick":"deltab","message":"a new Promise is created, \"registryAddress api.regaddr: \" is logged, the promise is marked resolved, and \"hnmm\" is logged","date":"2017-12-17T01:51:59.162Z","type":"message"}
{"nick":"deltab","message":"the promise's .catch method is called, adding a rejection handler","date":"2017-12-17T01:52:41.963Z","type":"message"}
{"nick":"aalex","date":"2017-12-17T01:53:00.954Z","type":"join"}
{"nick":"deltab","message":"(which won't be called as the promise is already resolved)","date":"2017-12-17T01:53:21.453Z","type":"message"}
{"nick":"deltab","message":"registryAddress returns the promise to line 13","date":"2017-12-17T01:53:44.497Z","type":"message"}
{"nick":"Xiti","reason":"Ping timeout: 264 seconds","date":"2017-12-17T01:53:45.249Z","type":"quit"}
{"nick":"eckhardt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T01:54:01.905Z","type":"quit"}
{"nick":"Sven_vB","reason":"Remote host closed the connection","date":"2017-12-17T01:54:46.151Z","type":"quit"}
{"nick":"deltab","message":"then lines 13 to 51 should add further handlers, each time creating new promises. At this point none of the handlers are run yet","date":"2017-12-17T01:55:01.999Z","type":"message"}
{"nick":"Sven_vB","date":"2017-12-17T01:55:26.807Z","type":"join"}
{"nick":"deltab","message":"Contract.get returns the final promise of the chain","date":"2017-12-17T01:55:37.504Z","type":"message"}
{"nick":"Xiti","date":"2017-12-17T01:55:46.605Z","type":"join"}
{"nick":"deltab","message":"fetchContracts adds another handler, and returns the resulting promise","date":"2017-12-17T01:56:14.283Z","type":"message"}
{"nick":"safe","date":"2017-12-17T01:56:26.235Z","type":"join"}
{"nick":"x405","reason":"Remote host closed the connection","date":"2017-12-17T01:56:27.492Z","type":"quit"}
{"nick":"aalex","reason":"Ping timeout: 248 seconds","date":"2017-12-17T01:57:19.830Z","type":"quit"}
{"nick":"deltab","message":"and I have no idea what happens after that point","date":"2017-12-17T01:57:22.880Z","type":"message"}
{"nick":"poutine","reason":"Quit: ZNC - http://znc.in","date":"2017-12-17T01:57:37.044Z","type":"quit"}
{"nick":"deltab","message":"what should happen is that on the next tick the resolved promise's handler should be called","date":"2017-12-17T01:58:09.099Z","type":"message"}
{"nick":"zombieleet","date":"2017-12-17T01:58:10.900Z","type":"join"}
{"nick":"sqram","date":"2017-12-17T01:58:20.483Z","type":"join"}
{"nick":"rafajafar","message":"deltab yeah but I don't get to the \"then\" after api.registryAddress()","date":"2017-12-17T01:58:28.338Z","type":"message"}
{"nick":"deltab","message":"that would happen on a later tick","date":"2017-12-17T01:58:58.860Z","type":"message"}
{"nick":"deltab","message":"I don't know why it doesn't; I don't know what's happening in sedacs.connect","date":"2017-12-17T01:59:29.769Z","type":"message"}
{"nick":"rafajafar","message":"shouldn't it be fetchContracts() -> Contracts.get() -> api.registryAddress() -> .then()","date":"2017-12-17T01:59:36.702Z","type":"message"}
{"nick":"rafajafar","message":"yeah I dont either it makes no sense, every trace says it should","date":"2017-12-17T01:59:48.683Z","type":"message"}
{"nick":"rafajafar","message":"it even says that api.registryAddress() returns a promise","date":"2017-12-17T02:00:05.339Z","type":"message"}
{"nick":"rafajafar","message":"does resolve prevent \"then\" ?","date":"2017-12-17T02:00:18.101Z","type":"message"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T02:00:22.792Z","type":"quit"}
{"nick":"rafajafar","message":"I tried a simple \"return\" but same effect","date":"2017-12-17T02:00:28.627Z","type":"message"}
{"nick":"poutine","date":"2017-12-17T02:00:35.829Z","type":"join"}
{"nick":"deltab","message":"no, but it doesn't immediately cause the function to be called either","date":"2017-12-17T02:00:49.115Z","type":"message"}
{"nick":"deltab","message":"there's no trace after \"hnmm\", so what I listed after that is supposition","date":"2017-12-17T02:01:18.506Z","type":"message"}
{"nick":"deltab","message":"if something throws an exception there, it's possible that it's not handled","date":"2017-12-17T02:01:49.500Z","type":"message"}
{"nick":"rafajafar","message":"yeah that's what I'm trying to solve","date":"2017-12-17T02:01:55.005Z","type":"message"}
{"nick":"danyim","date":"2017-12-17T02:02:08.463Z","type":"join"}
{"nick":"eckhardt","date":"2017-12-17T02:02:17.467Z","type":"join"}
{"nick":"deltab","message":"add more console.log calls after fetchContacts is called","date":"2017-12-17T02:02:20.407Z","type":"message"}
{"nick":"deltab","message":"after it returns, I mean","date":"2017-12-17T02:02:32.865Z","type":"message"}
{"nick":"deltab","message":"fetchContracts","date":"2017-12-17T02:03:08.131Z","type":"message"}
{"nick":"rafajafar","message":"someone else in another channel said it might be timing issue because fetchContracts is called earlier","date":"2017-12-17T02:03:14.926Z","type":"message"}
{"nick":"rafajafar","message":"deltab not sure where else to add them","date":"2017-12-17T02:04:40.013Z","type":"message"}
{"nick":"rafajafar","message":"I've added and removed a bunch","date":"2017-12-17T02:04:45.307Z","type":"message"}
{"nick":"deltab","message":"there's nothing in the code you've shown between when the promise is created and when its first handler should run","date":"2017-12-17T02:06:09.900Z","type":"message"}
{"nick":"rafajafar","message":"nope","date":"2017-12-17T02:06:41.056Z","type":"message"}
{"nick":"deltab","message":"so I'd add logging to that code, whatever it is","date":"2017-12-17T02:06:52.480Z","type":"message"}
{"nick":"deltab","message":"add to the code you've not shown us, I mean","date":"2017-12-17T02:07:16.027Z","type":"message"}
{"nick":"deltab","message":"the code that calls fetchContracts","date":"2017-12-17T02:07:41.809Z","type":"message"}
{"nick":"rafajafar","message":"ok.. I'll see ... where... I could add more...","date":"2017-12-17T02:09:08.526Z","type":"message"}
{"nick":"rafajafar","message":"thanks","date":"2017-12-17T02:09:10.284Z","type":"message"}
{"nick":"deltab","message":"with promises it's easy to misread the code as if it runs in sequence the way you've written it","date":"2017-12-17T02:10:23.160Z","type":"message"}
{"nick":"Snuupy","reason":"\"I'm not being mean, you're just insignificant.\"","date":"2017-12-17T02:10:30.790Z","type":"part"}
{"nick":"Snuupy","date":"2017-12-17T02:10:36.865Z","type":"join"}
{"nick":"deltab","message":"but all those .then and .catch calls are just setting things up to happen in the future","date":"2017-12-17T02:10:43.438Z","type":"message"}
{"nick":"rafajafar","message":"you see this line in registryAddress","date":"2017-12-17T02:10:47.354Z","type":"message"}
{"nick":"rafajafar","message":"}).catch((err) => {console.log(\"holy error batman X! \" + err);});//.then((thingy)=> {console.log(\"resolved regaddr as \" + thingy);});","date":"2017-12-17T02:10:48.483Z","type":"message"}
{"nick":"rafajafar","message":"see that commented out \"then\"","date":"2017-12-17T02:10:54.793Z","type":"message"}
{"nick":"rafajafar","message":"that prints to the console","date":"2017-12-17T02:10:59.773Z","type":"message"}
{"nick":"rafajafar","message":"if I remove the catch","date":"2017-12-17T02:11:03.248Z","type":"message"}
{"nick":"psk","date":"2017-12-17T02:11:48.838Z","type":"join"}
{"nick":"deltab","message":"makes sense, as you have a resolved promise","date":"2017-12-17T02:12:24.192Z","type":"message"}
{"nick":"deltab","message":"so it'd run on the next tick","date":"2017-12-17T02:12:37.414Z","type":"message"}
{"nick":"e14","date":"2017-12-17T02:12:56.195Z","type":"join"}
{"nick":"deltab","message":"it prints if you remove the //, or only if you remove the .catch(...)?","date":"2017-12-17T02:13:04.926Z","type":"message"}
{"nick":"rafajafar","message":"both","date":"2017-12-17T02:14:00.330Z","type":"message"}
{"nick":"rafajafar","message":"ok soooo I might have a bigger issue.......","date":"2017-12-17T02:14:08.875Z","type":"message"}
{"nick":"aqrln","reason":"Ping timeout: 268 seconds","date":"2017-12-17T02:14:18.630Z","type":"quit"}
{"nick":"rafajafar","message":"https://gist.github.com/anonymous/9a71bc473db985e40427558f6d5deae2","date":"2017-12-17T02:14:49.033Z","type":"message"}
{"nick":"rafajafar","message":"I think it has to do with the proxiedWeb3Handler","date":"2017-12-17T02:15:20.549Z","type":"message"}
{"nick":"aqrln","date":"2017-12-17T02:15:55.905Z","type":"join"}
{"nick":"rafajafar","message":"so you know this is adapting codebases, so a lot of this was written in promises and I'm promisifying it","date":"2017-12-17T02:16:10.860Z","type":"message"}
{"nick":"psk","reason":"Ping timeout: 265 seconds","date":"2017-12-17T02:16:15.403Z","type":"quit"}
{"nick":"rafajafar","message":"under a new library","date":"2017-12-17T02:16:18.611Z","type":"message"}
{"nick":"rafajafar","message":"(because the old one is out of the question now... don't ask)","date":"2017-12-17T02:16:29.008Z","type":"message"}
{"nick":"deltab","message":"using native promises, or another library?","date":"2017-12-17T02:17:20.113Z","type":"message"}
{"nick":"rafajafar","message":"so yeh I think maybe proxiedWeb3Handler is wrapping that function in a promise callback even though it already returns a promise","date":"2017-12-17T02:17:23.984Z","type":"message"}
{"nick":"kividroid","reason":"Quit: Leaving","date":"2017-12-17T02:17:56.139Z","type":"quit"}
{"nick":"kividroid","date":"2017-12-17T02:18:06.501Z","type":"join"}
{"nick":"rafajafar","message":"api doesn't use promises it uses callbacks, this proxiedWeb3Handler promisifies it, but the issue is that it's already promisified so it's wrapping promises in promises?","date":"2017-12-17T02:18:06.937Z","type":"message"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T02:18:50.996Z","type":"quit"}
{"nick":"cthulchu","message":"hehe","date":"2017-12-17T02:19:05.170Z","type":"message"}
{"nick":"cig0","date":"2017-12-17T02:19:40.421Z","type":"join"}
{"nick":"rafajafar","message":"maybe not I tried turning it into a regular function and it didn't fix the issue","date":"2017-12-17T02:19:41.779Z","type":"message"}
{"nick":"deltab","message":"I don't understand this line: return (...args) => promisify(cb => inner(...args, cb));","date":"2017-12-17T02:20:29.084Z","type":"message"}
{"nick":"rafajafar","message":"takes callback and turns it into a promise","date":"2017-12-17T02:21:18.477Z","type":"message"}
{"nick":"rafajafar","message":"function promisify is above","date":"2017-12-17T02:21:26.758Z","type":"message"}
{"nick":"deltab","message":"wouldn't promisify on its own do that?","date":"2017-12-17T02:21:32.657Z","type":"message"}
{"nick":"rafajafar","message":"no","date":"2017-12-17T02:23:13.396Z","type":"message"}
{"nick":"orbyt_","date":"2017-12-17T02:23:15.200Z","type":"join"}
{"nick":"rafajafar","message":"because promisify doesn't handle the arguments","date":"2017-12-17T02:23:22.819Z","type":"message"}
{"nick":"deltab","message":"ah, I see","date":"2017-12-17T02:23:29.840Z","type":"message"}
{"nick":"rafajafar","message":"alright I'm going to make a new gist with the full files in it","date":"2017-12-17T02:24:04.129Z","type":"message"}
{"nick":"horsey","date":"2017-12-17T02:24:27.473Z","type":"join"}
{"nick":"rafajafar","message":"https://gist.github.com/anonymous/2a3459ab72be45893d051366ee6a3499","date":"2017-12-17T02:25:28.338Z","type":"message"}
{"nick":"rafajafar","message":"hey deltab will my test case that invokes all this stop before all promises resolve?","date":"2017-12-17T02:27:11.673Z","type":"message"}
{"nick":"rafajafar","message":"this is the tests: https://gist.github.com/anonymous/45d24e8d31f30b2ff9d1593f415cd1fd","date":"2017-12-17T02:29:30.808Z","type":"message"}
{"nick":"horsey","reason":"Ping timeout: 272 seconds","date":"2017-12-17T02:29:46.194Z","type":"quit"}
{"nick":"HPH^","date":"2017-12-17T02:31:55.802Z","type":"join"}
{"nick":"mandric","reason":"Ping timeout: 265 seconds","date":"2017-12-17T02:32:41.500Z","type":"quit"}
{"nick":"reaperkre","date":"2017-12-17T02:33:19.325Z","type":"join"}
{"nick":"reaperkre","message":"Hi, does anyone recommend a best way to remove undefined/null from an array?","date":"2017-12-17T02:33:39.303Z","type":"message"}
{"nick":"Gustavo6046","reason":"Quit: Leaving","date":"2017-12-17T02:33:40.906Z","type":"quit"}
{"nick":"deltab","message":"reaperkre: a = a.filter(x => x != null);","date":"2017-12-17T02:34:25.551Z","type":"message"}
{"nick":"reaperkre","message":"deltab: f-ing brilliant thank you","date":"2017-12-17T02:34:47.563Z","type":"message"}
{"nick":"deltab","message":"reaperkre: a = a.filter(x => x != null); // includes undefined","date":"2017-12-17T02:34:58.903Z","type":"message"}
{"nick":"reaperkre","message":"yup, you little genius","date":"2017-12-17T02:35:07.833Z","type":"message"}
{"nick":"reaperkre","message":"I was hoping for something involving 'filter'. w0000t","date":"2017-12-17T02:35:24.537Z","type":"message"}
{"nick":"rafajafar","message":"god I cannot freaking figure this out...","date":"2017-12-17T02:35:39.983Z","type":"message"}
{"nick":"rafajafar","message":"weirdest damn bug","date":"2017-12-17T02:35:44.655Z","type":"message"}
{"nick":"rafajafar","message":"it's going to be something stupidly simple, I just know it","date":"2017-12-17T02:36:06.002Z","type":"message"}
{"nick":"duckydan","reason":"Read error: Connection reset by peer","date":"2017-12-17T02:37:26.230Z","type":"quit"}
{"nick":"danyim","reason":"Remote host closed the connection","date":"2017-12-17T02:37:29.150Z","type":"quit"}
{"nick":"deltab","message":"the most puzzling thing is that you did get one of the handlers called","date":"2017-12-17T02:38:56.434Z","type":"message"}
{"nick":"reaperkre","reason":"Quit: WeeChat 1.7","date":"2017-12-17T02:39:21.823Z","type":"quit"}
{"nick":"EyePulp","date":"2017-12-17T02:39:32.602Z","type":"join"}
{"nick":"deltab","message":"so it's not that everything stops at some point","date":"2017-12-17T02:39:33.641Z","type":"message"}
{"nick":"rafajafar","message":"right??","date":"2017-12-17T02:41:27.477Z","type":"message"}
{"nick":"rafajafar","message":"I wonder if I rename that function","date":"2017-12-17T02:41:33.056Z","type":"message"}
{"nick":"EyePulp","reason":"Remote host closed the connection","date":"2017-12-17T02:41:48.731Z","type":"quit"}
{"nick":"jcrawford","date":"2017-12-17T02:42:17.298Z","type":"join"}
{"nick":"jcrawford","reason":"Changing host","date":"2017-12-17T02:42:17.368Z","type":"quit"}
{"nick":"jcrawford","date":"2017-12-17T02:42:17.368Z","type":"join"}
{"nick":"deltab","message":"I'm suspicious of the proxy stuff, because I'm not sure I understand it","date":"2017-12-17T02:42:17.789Z","type":"message"}
{"nick":"rafajafar","message":"no difference if renaming it","date":"2017-12-17T02:43:12.061Z","type":"message"}
{"nick":"rafajafar","message":"yeah man I'm pretty bent about that one too","date":"2017-12-17T02:43:20.983Z","type":"message"}
{"nick":"Industrial","reason":"Ping timeout: 256 seconds","date":"2017-12-17T02:43:47.415Z","type":"quit"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T02:44:01.173Z","type":"quit"}
{"nick":"sstercan","reason":"Ping timeout: 264 seconds","date":"2017-12-17T02:44:09.236Z","type":"quit"}
{"nick":"soee","reason":"Quit: Konversation terminated!","date":"2017-12-17T02:44:35.503Z","type":"quit"}
{"nick":"smccarthy","date":"2017-12-17T02:44:53.515Z","type":"join"}
{"nick":"aqrln","reason":"Ping timeout: 264 seconds","date":"2017-12-17T02:45:21.147Z","type":"quit"}
{"nick":"VoradorPT","reason":"Quit: sleeping","date":"2017-12-17T02:45:41.988Z","type":"quit"}
{"nick":"snowkidind","date":"2017-12-17T02:46:50.119Z","type":"join"}
{"nick":"e14","date":"2017-12-17T02:47:03.863Z","type":"join"}
{"nick":"danyim","date":"2017-12-17T02:47:23.544Z","type":"join"}
{"nick":"dre_","reason":"Quit: Leaving","date":"2017-12-17T02:47:51.954Z","type":"quit"}
{"nick":"movlw","reason":"Read error: Connection reset by peer","date":"2017-12-17T02:48:59.187Z","type":"quit"}
{"nick":"aqrln","date":"2017-12-17T02:49:24.386Z","type":"join"}
{"nick":"devc","reason":"Ping timeout: 268 seconds","date":"2017-12-17T02:49:27.636Z","type":"quit"}
{"nick":"jcrawford","reason":"Quit: Linkinus - http://linkinus.com","date":"2017-12-17T02:51:26.048Z","type":"quit"}
{"nick":"danyim","reason":"Ping timeout: 248 seconds","date":"2017-12-17T02:51:45.442Z","type":"quit"}
{"nick":"movlw","date":"2017-12-17T02:51:50.401Z","type":"join"}
{"nick":"HPH^","reason":"Ping timeout: 272 seconds","date":"2017-12-17T02:51:56.133Z","type":"quit"}
{"nick":"perrier-jouet","reason":"Quit: WeeChat 1.9.1","date":"2017-12-17T02:52:04.365Z","type":"quit"}
{"nick":"SenasOzys__","date":"2017-12-17T02:53:05.125Z","type":"join"}
{"nick":"SenasOzys_","reason":"Read error: Connection reset by peer","date":"2017-12-17T02:53:15.564Z","type":"quit"}
{"nick":"deltab","message":"hmm, so would the proxy only be used at the level of sedacs.connect(true)?","date":"2017-12-17T02:53:22.634Z","type":"message"}
{"nick":"smccarthy","reason":"Remote host closed the connection","date":"2017-12-17T02:53:35.734Z","type":"quit"}
{"nick":"smccarthy","date":"2017-12-17T02:54:08.208Z","type":"join"}
{"nick":"deltab","message":"ah, the promisification calls the original function with an extra argument, a callback","date":"2017-12-17T02:57:30.471Z","type":"message"}
{"nick":"deltab","message":"and returns a promise that resolves or rejects when the callback is called","date":"2017-12-17T02:58:25.360Z","type":"message"}
{"nick":"deltab","message":"but sedacs.connect doesn't take a callback, so it ignores the function it's given and never calls it","date":"2017-12-17T02:58:51.710Z","type":"message"}
{"nick":"reydelcompas","date":"2017-12-17T02:59:12.119Z","type":"join"}
{"nick":"deltab","message":"hence the promise never resolves","date":"2017-12-17T02:59:21.468Z","type":"message"}
{"nick":"x405","date":"2017-12-17T03:00:09.113Z","type":"join"}
{"nick":"rafajafar","message":"ah","date":"2017-12-17T03:00:24.395Z","type":"message"}
{"nick":"rafajafar","message":"deltab, so everything needs a callback and since registryAddress doesn't have one, it flipps out?","date":"2017-12-17T03:00:51.579Z","type":"message"}
{"nick":"deltab","message":"not sure how that affects the rest of the promises though","date":"2017-12-17T03:01:04.030Z","type":"message"}
{"nick":"rafajafar","message":"because sedacs.connect shouldn't care, it's not promisified at all... plus I'm not running it in my test right now","date":"2017-12-17T03:01:12.759Z","type":"message"}
{"nick":"rafajafar","message":"but sedacs.api is","date":"2017-12-17T03:01:22.784Z","type":"message"}
{"nick":"rafajafar","message":"yeah ok hm","date":"2017-12-17T03:01:31.914Z","type":"message"}
{"nick":"deltab","message":"sedacs.connect(true).then(() ...","date":"2017-12-17T03:01:42.272Z","type":"message"}
{"nick":"e14","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T03:02:32.008Z","type":"quit"}
{"nick":"kakashiAL","reason":"Ping timeout: 264 seconds","date":"2017-12-17T03:02:45.327Z","type":"quit"}
{"nick":"rafajafar","message":"yeah but again, not calling that in this test ... just want to instantiate sedacs","date":"2017-12-17T03:02:58.582Z","type":"message"}
{"nick":"aalex","date":"2017-12-17T03:03:02.502Z","type":"join"}
{"nick":"rafajafar","message":"gets stuck at fetchContracts","date":"2017-12-17T03:03:05.358Z","type":"message"}
{"nick":"rafajafar","message":"let's see so how do I fix this","date":"2017-12-17T03:03:19.052Z","type":"message"}
{"nick":"deltab","message":"well, somewhere after there","date":"2017-12-17T03:03:25.906Z","type":"message"}
{"nick":"deltab","message":"we don't know exactly where","date":"2017-12-17T03:03:33.492Z","type":"message"}
{"nick":"qerolt","date":"2017-12-17T03:04:38.707Z","type":"join"}
{"nick":"duckydan","date":"2017-12-17T03:05:09.413Z","type":"join"}
{"nick":"deltab","message":"how about logging inside the proxy?","date":"2017-12-17T03:05:21.098Z","type":"message"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T03:05:24.257Z","type":"quit"}
{"nick":"carif","reason":"Ping timeout: 264 seconds","date":"2017-12-17T03:05:45.296Z","type":"quit"}
{"nick":"deltab","message":"when it returns the promise, and before and after it calls the inner function","date":"2017-12-17T03:05:50.625Z","type":"message"}
{"nick":"superlou","reason":"Ping timeout: 265 seconds","date":"2017-12-17T03:06:02.485Z","type":"quit"}
{"nick":"snowkidind","reason":"Quit: astalaPIZZA Baby!","date":"2017-12-17T03:06:13.467Z","type":"quit"}
{"nick":"aalex","reason":"Ping timeout: 240 seconds","date":"2017-12-17T03:07:08.487Z","type":"quit"}
{"nick":"edgr","date":"2017-12-17T03:07:56.402Z","type":"join"}
{"nick":"rafajafar","message":"ohhh that's an interesting suggestion, thank you","date":"2017-12-17T03:08:00.103Z","type":"message"}
{"nick":"e14","date":"2017-12-17T03:09:21.443Z","type":"join"}
{"nick":"movlw","date":"2017-12-17T03:09:43.206Z","type":"quit"}
{"nick":"karmahacker","reason":"Remote host closed the connection","date":"2017-12-17T03:12:10.060Z","type":"quit"}
{"nick":"karmahacker","date":"2017-12-17T03:12:45.501Z","type":"join"}
{"nick":"zombieleet","reason":"Ping timeout: 272 seconds","date":"2017-12-17T03:13:28.166Z","type":"quit"}
{"nick":"e14","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-12-17T03:14:16.098Z","type":"quit"}
{"nick":"Planet_EN","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T03:14:34.404Z","type":"quit"}
{"nick":"zxc","date":"2017-12-17T03:15:28.474Z","type":"join"}
{"nick":"im_dumbstruck-AW","date":"2017-12-17T03:16:00.496Z","type":"join"}
{"nick":"im_dumbstruck-AW","new_nick":"creativeboulder","date":"2017-12-17T03:16:23.306Z","type":"nick"}
{"nick":"creativeboulder","reason":"Remote host closed the connection","date":"2017-12-17T03:16:28.058Z","type":"quit"}
{"nick":"karmahacker","reason":"Ping timeout: 265 seconds","date":"2017-12-17T03:17:09.478Z","type":"quit"}
{"nick":"im_dumbstruck-AW","date":"2017-12-17T03:17:15.517Z","type":"join"}
{"nick":"im_dumbstruck-AW","new_nick":"creativeboulder","date":"2017-12-17T03:17:50.199Z","type":"nick"}
{"nick":"duderonomy","date":"2017-12-17T03:17:55.181Z","type":"join"}
{"nick":"mollymorphic","date":"2017-12-17T03:20:59.107Z","type":"join"}
{"nick":"orbyt_","date":"2017-12-17T03:22:13.656Z","type":"join"}
{"nick":"kakashiAL","date":"2017-12-17T03:24:14.957Z","type":"join"}
{"nick":"AtumT_","reason":"Remote host closed the connection","date":"2017-12-17T03:25:23.178Z","type":"quit"}
{"nick":"kakashiAL","reason":"Ping timeout: 248 seconds","date":"2017-12-17T03:29:03.991Z","type":"quit"}
{"nick":"cig0","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-12-17T03:32:19.126Z","type":"quit"}
{"nick":"eckhardt","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-12-17T03:34:20.999Z","type":"quit"}
{"nick":"Phloxx","reason":"Ping timeout: 265 seconds","date":"2017-12-17T03:34:33.470Z","type":"quit"}
{"nick":"Phloxx","date":"2017-12-17T03:35:13.440Z","type":"join"}
{"nick":"orbyt_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T03:36:07.146Z","type":"quit"}
{"nick":"konsolebox","reason":"Ping timeout: 248 seconds","date":"2017-12-17T03:37:37.572Z","type":"quit"}
{"nick":"konsolebox","date":"2017-12-17T03:38:39.162Z","type":"join"}
{"nick":"hdon__","date":"2017-12-17T03:42:21.548Z","type":"join"}
{"nick":"hdon__","message":"hi all :) i'm making expensive API requests and want to be careful. instead of a caching HTTP proxy, is there maybe a memoization package that might work well for small projects?","date":"2017-12-17T03:43:02.173Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2017-12-17T03:43:34.266Z","type":"quit"}
{"nick":"patterson","reason":"Quit: I quit","date":"2017-12-17T03:43:40.589Z","type":"quit"}
{"nick":"zumba_addict","reason":"Ping timeout: 265 seconds","date":"2017-12-17T03:44:09.221Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-12-17T03:44:53.760Z","type":"join"}
{"nick":"qerolt","reason":"Quit: Leaving","date":"2017-12-17T03:46:55.713Z","type":"quit"}
{"nick":"GreenJello","message":"hdon__, you can do a very basic one with promises; the harder part is clearing things out of it","date":"2017-12-17T03:56:42.054Z","type":"message"}
{"nick":"orbyt_","date":"2017-12-17T03:56:57.324Z","type":"join"}
{"nick":"hdon__","message":"GreenJello: mmm yes. when i need to clear things out, i might upgrade to a caching http proxy.","date":"2017-12-17T03:57:33.391Z","type":"message"}
{"nick":"hdon__","message":"but a memoization framework that includes some means of managing what's in the cache would be good","date":"2017-12-17T03:57:55.154Z","type":"message"}
{"nick":"GreenJello","message":"there's lru-cache","date":"2017-12-17T03:58:28.729Z","type":"message"}
{"nick":"GreenJello","message":"or you could use something time based","date":"2017-12-17T03:58:39.278Z","type":"message"}
{"nick":"GreenJello","message":"really depends on the details","date":"2017-12-17T03:58:42.711Z","type":"message"}
{"nick":"hdon__","message":"GreenJello: yeah i'm looking at that now. it's used by disk-memoizer npm package","date":"2017-12-17T03:58:47.866Z","type":"message"}
{"nick":"grkblood13","message":"I have a sell contained web app I built with node-packer (nodejs compiler). You launch the executable and then browse to the page. Is there a way to pack this into an android app?","date":"2017-12-17T03:59:11.067Z","type":"message"}
{"nick":"grkblood13","message":"Ive briefly read up on cordova but it seems like it just converts web pages into apps. I already have everything in a binary.","date":"2017-12-17T03:59:56.993Z","type":"message"}
{"nick":"hdon__","message":"grkblood13: easy mode is to host the app yourself and find an app skeleton that just wraps around your internet-hosted web app","date":"2017-12-17T03:59:58.798Z","type":"message"}
{"nick":"hdon__","message":"grkblood13: what do you have in a binary?","date":"2017-12-17T04:00:16.530Z","type":"message"}
{"nick":"GreenJello","message":"grkblood13, you can't run arbitrary node.js programs on android","date":"2017-12-17T04:00:26.760Z","type":"message"}
{"nick":"grkblood13","message":"it's compiled using node.js compiler","date":"2017-12-17T04:00:45.797Z","type":"message"}
{"nick":"grkblood13","message":"aka node-packer","date":"2017-12-17T04:00:51.731Z","type":"message"}
{"nick":"grkblood13","message":"i transport stuff between client and server with socket.io","date":"2017-12-17T04:01:34.022Z","type":"message"}
{"nick":"GreenJello","message":"grkblood13, afaik android requires all interaction with the system to go through java apis","date":"2017-12-17T04:01:57.708Z","type":"message"}
{"nick":"MeltedLux_","date":"2017-12-17T04:02:08.342Z","type":"join"}
{"nick":"GreenJello","message":"you can run pure js code by asking it to execute the js for you","date":"2017-12-17T04:02:21.370Z","type":"message"}
{"nick":"GreenJello","message":"I'm not an expert on this, but it doesn't seem like this would work","date":"2017-12-17T04:03:05.399Z","type":"message"}
{"nick":"grkblood13","message":"I wanted to pack it to keep someone from stealing what I've done","date":"2017-12-17T04:03:15.071Z","type":"message"}
{"nick":"led_ir22","reason":"Remote host closed the connection","date":"2017-12-17T04:03:36.831Z","type":"quit"}
{"nick":"drewmcmillan","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T04:03:41.465Z","type":"quit"}
{"nick":"led_ir22","date":"2017-12-17T04:03:47.579Z","type":"join"}
{"nick":"GreenJello","message":"people are pretty good at extracting data from executables, and disabling security","date":"2017-12-17T04:04:12.996Z","type":"message"}
{"nick":"grkblood13","message":"hrm :/","date":"2017-12-17T04:05:17.307Z","type":"message"}
{"nick":"grkblood13","message":"so whats to stop someone from taking an app youve made and rereleasing it themselves?","date":"2017-12-17T04:05:39.108Z","type":"message"}
{"nick":"grkblood13","message":"this is beyond nodejs talk i know","date":"2017-12-17T04:05:51.293Z","type":"message"}
{"nick":"MeltedLux","reason":"Quit: R.I.P","date":"2017-12-17T04:06:17.634Z","type":"quit"}
{"nick":"EyePulp","date":"2017-12-17T04:06:19.429Z","type":"join"}
{"nick":"GreenJello","message":"grkblood13, you keep sensitive code on the server","date":"2017-12-17T04:06:27.793Z","type":"message"}
{"nick":"GreenJello","message":"grkblood13, if you send it to a user's device, it's their software now","date":"2017-12-17T04:07:02.810Z","type":"message"}
{"nick":"grkblood13","message":"well, in this situation the app would act as it's own server so I guess my approach was flawed to begin with","date":"2017-12-17T04:07:24.771Z","type":"message"}
{"nick":"mollymorphic","message":"grkblood13: if you're talking a server app, you just don't give them the code. If you're talking about something you're distributing, nothing technically - though legally they wouldn't be able to distribute it themselves","date":"2017-12-17T04:07:37.524Z","type":"message"}
{"nick":"mollymorphic","message":"although if you're talking software you distribute it will generally be possible to do something like decompile or at least disassemble it for most languages","date":"2017-12-17T04:08:25.557Z","type":"message"}
{"nick":"mollymorphic","message":"I suppose js might make it easier in some ways, but you could always obsfucate the code or put sensitive functionality in a shared lib or something","date":"2017-12-17T04:09:05.012Z","type":"message"}
{"nick":"tinyV0id","reason":"Quit: My PC went to BSOD","date":"2017-12-17T04:09:24.774Z","type":"quit"}
{"nick":"EyePulp","reason":"Ping timeout: 240 seconds","date":"2017-12-17T04:10:28.504Z","type":"quit"}
{"nick":"tinyV0id","date":"2017-12-17T04:12:52.464Z","type":"join"}
{"nick":"jc_","reason":"Quit: jc_","date":"2017-12-17T04:15:34.295Z","type":"quit"}
{"nick":"jc_","date":"2017-12-17T04:16:04.053Z","type":"join"}
{"nick":"jkridner","reason":"Remote host closed the connection","date":"2017-12-17T04:16:09.166Z","type":"quit"}
{"nick":"jkridner","date":"2017-12-17T04:16:31.445Z","type":"join"}
{"nick":"kfoonamalik","date":"2017-12-17T04:17:51.477Z","type":"join"}
{"nick":"snowkidind","date":"2017-12-17T04:18:18.407Z","type":"join"}
{"nick":"e14","date":"2017-12-17T04:18:36.970Z","type":"join"}
{"nick":"smccarthy","reason":"Remote host closed the connection","date":"2017-12-17T04:20:38.350Z","type":"quit"}
{"nick":"jc_","reason":"Ping timeout: 265 seconds","date":"2017-12-17T04:20:57.467Z","type":"quit"}
{"nick":"e14","reason":"Client Quit","date":"2017-12-17T04:22:03.066Z","type":"quit"}
{"nick":"kfoonamalik","reason":"Ping timeout: 256 seconds","date":"2017-12-17T04:24:39.456Z","type":"quit"}
{"nick":"MochaLoca","date":"2017-12-17T04:24:40.646Z","type":"join"}
{"nick":"dconroy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T04:24:47.919Z","type":"quit"}
{"nick":"horsey","date":"2017-12-17T04:25:19.110Z","type":"join"}
{"nick":"LocaMocha","reason":"Ping timeout: 265 seconds","date":"2017-12-17T04:26:45.507Z","type":"quit"}
{"nick":"MuffinMedic","reason":"Ping timeout: 268 seconds","date":"2017-12-17T04:29:21.639Z","type":"quit"}
{"nick":"horsey","reason":"Ping timeout: 240 seconds","date":"2017-12-17T04:29:57.785Z","type":"quit"}
{"nick":"im_dumbstruck-AW","date":"2017-12-17T04:30:10.461Z","type":"join"}
{"nick":"knoxy","reason":"Remote host closed the connection","date":"2017-12-17T04:33:07.168Z","type":"quit"}
{"nick":"hdon__","message":"using --inspect is there a way in the debugger to run until we return to node's reactor loop, and then break on the next callback?","date":"2017-12-17T04:33:23.703Z","type":"message"}
{"nick":"creativeboulder","reason":"Ping timeout: 256 seconds","date":"2017-12-17T04:33:43.496Z","type":"quit"}
{"nick":"GreenJello","message":"hdon__, that'd be an interesting feature, but I haven't heard anything about it","date":"2017-12-17T04:34:43.211Z","type":"message"}
{"nick":"deltab","message":"put a breakpoint there?","date":"2017-12-17T04:34:49.111Z","type":"message"}
{"nick":"hdon__","message":"ah ok. thanks","date":"2017-12-17T04:34:50.081Z","type":"message"}
{"nick":"hdon__","message":"deltab: what if i don't know which callback will be called next?","date":"2017-12-17T04:34:58.800Z","type":"message"}
{"nick":"hdon__","message":"or do you mean in node's reactor loop?","date":"2017-12-17T04:35:10.939Z","type":"message"}
{"nick":"deltab","message":"in the loop, I mean","date":"2017-12-17T04:35:16.931Z","type":"message"}
{"nick":"hdon__","message":"i assume that's in native code and non-debuggable","date":"2017-12-17T04:35:17.730Z","type":"message"}
{"nick":"hdon__","message":"i might be wrong though","date":"2017-12-17T04:35:21.998Z","type":"message"}
{"nick":"hdon__","message":"in GPSEE we wrote a reactor loop in javascript","date":"2017-12-17T04:35:29.752Z","type":"message"}
{"nick":"deltab","message":"I have no idea","date":"2017-12-17T04:35:31.903Z","type":"message"}
{"nick":"danyim","date":"2017-12-17T04:36:24.987Z","type":"join"}
{"nick":"deltab","message":"oh, I guess it's in libuv","date":"2017-12-17T04:36:46.473Z","type":"message"}
{"nick":"heyitsrama","date":"2017-12-17T04:37:23.710Z","type":"join"}
{"nick":"hdon__","message":"that would be my guess","date":"2017-12-17T04:37:24.069Z","type":"message"}
{"nick":"hdon__","message":"in gpsee we wrote an FFI library and wrote our main reactor loop in javascript","date":"2017-12-17T04:37:44.757Z","type":"message"}
{"nick":"Flynnn","date":"2017-12-17T04:38:59.925Z","type":"join"}
{"nick":"heyitsrama","message":"hey can someone look at this promise chain, having issues with resolving some nested mappings, https://bitbucket.org/ajandu/munchkins/src/11b4198bb0b37b05890937b7e98139bd676f2695/engine_manager/nginFunction.js?at=amar&fileviewer=file-view-default Function is called getUserHand()","date":"2017-12-17T04:39:36.745Z","type":"message"}
{"nick":"danyim","reason":"Ping timeout: 248 seconds","date":"2017-12-17T04:41:03.996Z","type":"quit"}
{"nick":"plexigras","reason":"Ping timeout: 265 seconds","date":"2017-12-17T04:41:45.649Z","type":"quit"}
{"nick":"hdon__","message":"i can't handle these 8-space indents","date":"2017-12-17T04:41:49.883Z","type":"message"}
{"nick":"Quixote_","date":"2017-12-17T04:42:04.391Z","type":"join"}
{"nick":"hdon__","message":"heyitsrama: first off, do you know when it is appropriate to use new Promise() ?","date":"2017-12-17T04:42:17.084Z","type":"message"}
{"nick":"smccarthy","date":"2017-12-17T04:42:18.296Z","type":"join"}
{"nick":"hdon__","message":"heyitsrama: i struggled with this in the beginning, too, but it looks like you do not need to do that","date":"2017-12-17T04:42:28.933Z","type":"message"}
{"nick":"GrandpaOnionHead","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2017-12-17T04:42:45.287Z","type":"quit"}
{"nick":"heyitsrama","message":"hdon__: i believe so, its when dispatching a function that will be asyncronus","date":"2017-12-17T04:42:55.423Z","type":"message"}
{"nick":"GreenJello","message":"heyitsrama, the only time you use `new Promise` is when wrapping an unusual callback or event api","date":"2017-12-17T04:43:01.584Z","type":"message"}
{"nick":"heyitsrama","message":"and dont want it to block the event thread","date":"2017-12-17T04:43:02.476Z","type":"message"}
{"nick":"deltab","message":"only when you're wrapping a non-promise async operation","date":"2017-12-17T04:43:10.455Z","type":"message"}
{"nick":"GreenJello","message":"heyitsrama, when you already have promises, you shouldn't use it","date":"2017-12-17T04:43:25.391Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: yes but also specifically your asynchronous call does NOT return a promise","date":"2017-12-17T04:43:32.945Z","type":"message"}
{"nick":"GreenJello","message":"heyitsrama, when you do need to use it, you write the smallest possible function using it","date":"2017-12-17T04:43:38.402Z","type":"message"}
{"nick":"plexigras","date":"2017-12-17T04:43:39.602Z","type":"join"}
{"nick":"hdon__","message":"heyitsrama: but you're using Promise.all, so you don't need new Promise","date":"2017-12-17T04:43:40.716Z","type":"message"}
{"nick":"heyitsrama","message":"so i would still be able to resolve the data out, to the calling function correctly","date":"2017-12-17T04:44:10.137Z","type":"message"}
{"nick":"GreenJello","message":"heyitsrama, it causes issues like, if gameState.getUsers(gameObj.roomNumber) rejects, your promise never resolves or rejects","date":"2017-12-17T04:44:23.184Z","type":"message"}
{"nick":"aalex","date":"2017-12-17T04:44:29.161Z","type":"join"}
{"nick":"hdon__","message":"well, i have company coming over","date":"2017-12-17T04:45:17.659Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: when you're done listening to GreenJello, your function will have half or fewer of its current lines remaining","date":"2017-12-17T04:45:39.078Z","type":"message"}
{"nick":"GreenJello","message":"heyitsrama, get rid of the `new Promise` and do: userCheckandInsert: function (gameObj) { return gameState.getUsers(gameObj.roomNumber).then(","date":"2017-12-17T04:45:39.658Z","type":"message"}
{"nick":"heyitsrama","message":"thanks hdon__ o/","date":"2017-12-17T04:45:51.838Z","type":"message"}
{"nick":"zxc","reason":"Read error: Connection reset by peer","date":"2017-12-17T04:45:52.321Z","type":"quit"}
{"nick":"GreenJello","message":"heyitsrama, and instead of calling resolve/reject, you return a value, or throw an error","date":"2017-12-17T04:46:11.617Z","type":"message"}
{"nick":"GreenJello","message":"and return the other promises","date":"2017-12-17T04:46:25.661Z","type":"message"}
{"nick":"heyitsrama","message":"this was for getUserHand","date":"2017-12-17T04:46:37.419Z","type":"message"}
{"nick":"cthulchu","message":"guys, is there real need to use classes in Node? I don't wanna miss out.","date":"2017-12-17T04:46:51.872Z","type":"message"}
{"nick":"GreenJello","message":"ah","date":"2017-12-17T04:46:55.411Z","type":"message"}
{"nick":"deltab","message":"same there, remove the use of new Promise","date":"2017-12-17T04:47:01.805Z","type":"message"}
{"nick":"GreenJello","message":"cthulchu, they're nice at times","date":"2017-12-17T04:47:09.767Z","type":"message"}
{"nick":"deltab","message":"heyitsrama: but more importantly, line 106 has a bug","date":"2017-12-17T04:47:34.510Z","type":"message"}
{"nick":"heyitsrama","message":"deltab: yeah it seem that the Push never works correctly","date":"2017-12-17T04:48:01.892Z","type":"message"}
{"nick":"heyitsrama","message":"it complains about the push in the debuggingterminal","date":"2017-12-17T04:48:13.873Z","type":"message"}
{"nick":"deltab","message":"the one in line 111?","date":"2017-12-17T04:48:35.018Z","type":"message"}
{"nick":"heyitsrama","message":"yeah","date":"2017-12-17T04:48:51.976Z","type":"message"}
{"nick":"deltab","message":"see line 101","date":"2017-12-17T04:48:51.996Z","type":"message"}
{"nick":"aalex","reason":"Ping timeout: 264 seconds","date":"2017-12-17T04:48:57.145Z","type":"quit"}
{"nick":"Quixote_","reason":"Ping timeout: 265 seconds","date":"2017-12-17T04:48:59.445Z","type":"quit"}
{"nick":"deltab","message":"localUserList is undefined","date":"2017-12-17T04:49:07.085Z","type":"message"}
{"nick":"GreenJello","message":"also cardData is always going to be undefined","date":"2017-12-17T04:49:32.777Z","type":"message"}
{"nick":"smccarthy","reason":"Remote host closed the connection","date":"2017-12-17T04:49:32.792Z","type":"quit"}
{"nick":"deltab","message":"undefined doesn't have .push","date":"2017-12-17T04:49:33.566Z","type":"message"}
{"nick":"kfoonamalik","date":"2017-12-17T04:49:39.454Z","type":"join"}
{"nick":"GreenJello","message":"because Promise.resolve() is Promise.resolve(undefined)","date":"2017-12-17T04:49:56.508Z","type":"message"}
{"nick":"smccarthy","date":"2017-12-17T04:50:05.893Z","type":"join"}
{"nick":"GreenJello","message":"and these things will error, but you're not handling the errors","date":"2017-12-17T04:50:24.239Z","type":"message"}
{"nick":"GreenJello","message":"because of new Promise","date":"2017-12-17T04:50:44.495Z","type":"message"}
{"nick":"heyitsrama","message":"interesting","date":"2017-12-17T04:51:00.035Z","type":"message"}
{"nick":"heyitsrama","message":"so as i hop down the mapping of the objects, is there a good way to say, hey i want all the nested maps to be assigned to a local value","date":"2017-12-17T04:51:27.755Z","type":"message"}
{"nick":"deltab","message":"the result of .map is another array, filled with the values returned","date":"2017-12-17T04:51:57.313Z","type":"message"}
{"nick":"heyitsrama","message":"and then return that array with the values up to the next function, and do it again","date":"2017-12-17T04:51:58.910Z","type":"message"}
{"nick":"heyitsrama","message":"ah","date":"2017-12-17T04:52:08.167Z","type":"message"}
{"nick":"heyitsrama","message":"so","date":"2017-12-17T04:52:20.168Z","type":"message"}
{"nick":"deltab","message":">> [1, 2, 3].map(function (x) { return x * x; })","date":"2017-12-17T04:52:21.155Z","type":"message"}
{"nick":"ecmabot","message":"deltab: (object) [1, 4, 9]","date":"2017-12-17T04:52:21.396Z","type":"message"}
{"nick":"heyitsrama","message":"so i dont neeed to push them locally","date":"2017-12-17T04:52:27.522Z","type":"message"}
{"nick":"heyitsrama","message":"because its going to just be returned anyway","date":"2017-12-17T04:52:36.126Z","type":"message"}
{"nick":"deltab","message":"right","date":"2017-12-17T04:52:39.735Z","type":"message"}
{"nick":"Flynnn","reason":"Quit: Auf Wiedersehen!","date":"2017-12-17T04:52:56.058Z","type":"quit"}
{"nick":"zxc","date":"2017-12-17T04:53:21.468Z","type":"join"}
{"nick":"SenasOzys_","date":"2017-12-17T04:54:18.503Z","type":"join"}
{"nick":"SenasOzys__","reason":"Read error: Connection reset by peer","date":"2017-12-17T04:54:43.347Z","type":"quit"}
{"nick":"MuffinMedic","date":"2017-12-17T04:54:58.760Z","type":"join"}
{"nick":"cthulchu","message":"how do you plan a new app guys?","date":"2017-12-17T04:56:27.852Z","type":"message"}
{"nick":"cthulchu","message":"like what do you start from and so on","date":"2017-12-17T04:56:37.360Z","type":"message"}
{"nick":"cthulchu","message":"it's just I end up rewriting my implementation many times","date":"2017-12-17T04:56:59.296Z","type":"message"}
{"nick":"deltab","message":"gather requirements","date":"2017-12-17T04:57:09.560Z","type":"message"}
{"nick":"cthulchu","message":"mhm","date":"2017-12-17T04:57:18.274Z","type":"message"}
{"nick":"heyitsrama","message":"siuck","date":"2017-12-17T04:58:04.073Z","type":"message"}
{"nick":"heyitsrama","message":"sick","date":"2017-12-17T04:58:05.451Z","type":"message"}
{"nick":"heyitsrama","message":"so i removed the promies","date":"2017-12-17T04:58:10.108Z","type":"message"}
{"nick":"heyitsrama","message":"but i end up with an undefined array","date":"2017-12-17T04:58:18.891Z","type":"message"}
{"nick":"heyitsrama","message":"with the correct number of elements","date":"2017-12-17T04:58:29.220Z","type":"message"}
{"nick":"deltab","message":"what are you returning?","date":"2017-12-17T04:58:41.968Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 276 seconds","date":"2017-12-17T04:58:56.165Z","type":"quit"}
{"nick":"Cabanoss-","date":"2017-12-17T04:58:59.847Z","type":"join"}
{"nick":"heyitsrama","message":"the function got super small","date":"2017-12-17T04:59:05.393Z","type":"message"}
{"nick":"deltab","message":"good — fewer places for bugs to hide :-)","date":"2017-12-17T04:59:24.205Z","type":"message"}
{"nick":"heyitsrama","message":"its just 2 nested promise.Maps","date":"2017-12-17T04:59:25.004Z","type":"message"}
{"nick":"heyitsrama","message":"right :)","date":"2017-12-17T04:59:28.252Z","type":"message"}
{"nick":"Cabanoss-","new_nick":"Cabanossi","date":"2017-12-17T05:00:05.010Z","type":"nick"}
{"nick":"deltab","message":"so what's happening in the inner function?","date":"2017-12-17T05:00:46.262Z","type":"message"}
{"nick":"heyitsrama","message":"it should be returning attributes from the database","date":"2017-12-17T05:01:09.669Z","type":"message"}
{"nick":"heyitsrama","message":"regarding card data for the spefied card that was passed in","date":"2017-12-17T05:01:23.535Z","type":"message"}
{"nick":"deltab","message":"as promises? return those","date":"2017-12-17T05:01:43.808Z","type":"message"}
{"nick":"deltab","message":"make sure you're not throwing away the promises you get and creating new ones without data","date":"2017-12-17T05:02:57.930Z","type":"message"}
{"nick":"heyitsrama","message":"oh wow","date":"2017-12-17T05:04:13.545Z","type":"message"}
{"nick":"heyitsrama","message":"okay","date":"2017-12-17T05:04:15.131Z","type":"message"}
{"nick":"heyitsrama","message":"i have the data now","date":"2017-12-17T05:04:18.068Z","type":"message"}
{"nick":"heyitsrama","message":"at the end","date":"2017-12-17T05:04:24.150Z","type":"message"}
{"nick":"heyitsrama","message":"i called a Promise.Resolve(results) at the end of the first map","date":"2017-12-17T05:04:46.507Z","type":"message"}
{"nick":"heyitsrama","message":"states its \"undefined\"","date":"2017-12-17T05:05:03.945Z","type":"message"}
{"nick":"deltab","message":"probably not needed","date":"2017-12-17T05:05:10.584Z","type":"message"}
{"nick":"heyitsrama","message":"will it just return the result from the map?","date":"2017-12-17T05:05:27.853Z","type":"message"}
{"nick":"deltab","message":"where does the value of results come from?","date":"2017-12-17T05:05:30.042Z","type":"message"}
{"nick":"heyitsrama","message":"to the calling function?","date":"2017-12-17T05:05:33.024Z","type":"message"}
{"nick":"heyitsrama","message":"from the first promise.","date":"2017-12-17T05:05:46.648Z","type":"message"}
{"nick":"deltab","message":"can I see the code?","date":"2017-12-17T05:06:10.455Z","type":"message"}
{"nick":"heyitsrama","message":"sure","date":"2017-12-17T05:06:14.464Z","type":"message"}
{"nick":"danyim","date":"2017-12-17T05:06:24.506Z","type":"join"}
{"nick":"tinyV0id","reason":"Quit: My PC went to BSOD","date":"2017-12-17T05:06:27.940Z","type":"quit"}
{"nick":"hdon__","message":"heyitsrama: hey i gotta run again but here's some food for thought: https://pastebin.mozilla.org/9074787","date":"2017-12-17T05:07:06.310Z","type":"message"}
{"nick":"jkridner","reason":"Remote host closed the connection","date":"2017-12-17T05:07:10.942Z","type":"quit"}
{"nick":"beerdrop","reason":"Ping timeout: 260 seconds","date":"2017-12-17T05:07:11.520Z","type":"quit"}
{"nick":"hdon__","message":"i might have misinterpreted what your code is supposed to do but if those mocks appear to operate like your real data and such, then you should be good","date":"2017-12-17T05:07:25.118Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: also note that my mock for getAllCardAttributes() could return a proper Promise instance and it wouldn't change the code at all","date":"2017-12-17T05:07:52.578Z","type":"message"}
{"nick":"heyitsrama","message":"https://bitbucket.org/ajandu/munchkins/src/db44a8d1e6ea14340f65244c77a8f8cfd5861be9/engine_manager/nginFunction.js?at=amar&fileviewer=file-view-default","date":"2017-12-17T05:07:54.759Z","type":"message"}
{"nick":"heyitsrama","message":"thansk hdon__ :)","date":"2017-12-17T05:08:06.818Z","type":"message"}
{"nick":"heyitsrama","message":"i thougth you left a while back!","date":"2017-12-17T05:08:12.847Z","type":"message"}
{"nick":"heyitsrama","message":"o/","date":"2017-12-17T05:08:15.337Z","type":"message"}
{"nick":"tinyV0id","date":"2017-12-17T05:09:54.503Z","type":"join"}
{"nick":"smccarthy","reason":"Remote host closed the connection","date":"2017-12-17T05:09:58.286Z","type":"quit"}
{"nick":"danyim","reason":"Ping timeout: 240 seconds","date":"2017-12-17T05:10:28.472Z","type":"quit"}
{"nick":"SenasOzys_","reason":"Ping timeout: 265 seconds","date":"2017-12-17T05:11:13.415Z","type":"quit"}
{"nick":"heyitsrama","message":"deltab: i think i have it","date":"2017-12-17T05:12:32.147Z","type":"message"}
{"nick":"stormbytes","date":"2017-12-17T05:16:56.558Z","type":"join"}
{"nick":"tinyV0id","reason":"Quit: My PC went to BSOD","date":"2017-12-17T05:18:27.499Z","type":"quit"}
{"nick":"beerdrop","date":"2017-12-17T05:19:21.926Z","type":"join"}
{"nick":"SenasOzys_","date":"2017-12-17T05:22:17.777Z","type":"join"}
{"nick":"sliter","date":"2017-12-17T05:24:22.496Z","type":"join"}
{"nick":"BeerLover","date":"2017-12-17T05:24:36.292Z","type":"join"}
{"nick":"InFlames","date":"2017-12-17T05:26:47.544Z","type":"join"}
{"nick":"InFlames","new_nick":"Guest3578","date":"2017-12-17T05:27:11.537Z","type":"nick"}
{"nick":"im_dumbstruck-AW","reason":"Quit: Will be back later...","date":"2017-12-17T05:28:47.403Z","type":"quit"}
{"nick":"cthulchu","message":"is it okay to do many things in one function?","date":"2017-12-17T05:29:00.689Z","type":"message"}
{"nick":"Guest3578","reason":"Client Quit","date":"2017-12-17T05:30:13.499Z","type":"quit"}
{"nick":"Flynnn","date":"2017-12-17T05:30:25.213Z","type":"join"}
{"nick":"GreenJello","message":"cthulchu, keep functions small","date":"2017-12-17T05:30:30.308Z","type":"message"}
{"nick":"cthulchu","message":"ok, an example","date":"2017-12-17T05:30:40.849Z","type":"message"}
{"nick":"cthulchu","message":"I write a regression testing function","date":"2017-12-17T05:31:12.921Z","type":"message"}
{"nick":"cthulchu","message":"it will have to test either: innerhtml value, attribute value or the val","date":"2017-12-17T05:31:41.374Z","type":"message"}
{"nick":"cthulchu","message":"depending on its config that I, for now, have in one .cfg.json file","date":"2017-12-17T05:32:01.389Z","type":"message"}
{"nick":"cthulchu","message":"so the script will loop through each object in the config, take the task and start executing, comparing the values specified with the values stored in the db","date":"2017-12-17T05:32:56.447Z","type":"message"}
{"nick":"cthulchu","message":"then if something changes, it sends neat emails.","date":"2017-12-17T05:33:11.404Z","type":"message"}
{"nick":"cthulchu","message":"so I would make the email sender in a separate file","date":"2017-12-17T05:33:26.589Z","type":"message"}
{"nick":"cthulchu","message":"the pg handler would be in another file","date":"2017-12-17T05:33:38.150Z","type":"message"}
{"nick":"cthulchu","message":"the request handler - in another","date":"2017-12-17T05:33:46.572Z","type":"message"}
{"nick":"cthulchu","message":"but now all the logics would be in this one","date":"2017-12-17T05:33:55.543Z","type":"message"}
{"nick":"cthulchu","message":"it's not too much of logics for one function, is it?","date":"2017-12-17T05:34:40.745Z","type":"message"}
{"nick":"upperdeck","reason":"Read error: Connection reset by peer","date":"2017-12-17T05:34:41.154Z","type":"quit"}
{"nick":"Delta-One","reason":"Read error: Connection reset by peer","date":"2017-12-17T05:38:09.234Z","type":"quit"}
{"nick":"Delta-One","date":"2017-12-17T05:38:36.471Z","type":"join"}
{"nick":"upperdeck","date":"2017-12-17T05:38:52.509Z","type":"join"}
{"nick":"floatleft","reason":"Ping timeout: 256 seconds","date":"2017-12-17T05:38:53.437Z","type":"quit"}
{"nick":"Silenced","date":"2017-12-17T05:39:16.899Z","type":"join"}
{"nick":"floatleft","date":"2017-12-17T05:40:20.508Z","type":"join"}
{"nick":"floatleft","reason":"Read error: Connection reset by peer","date":"2017-12-17T05:40:23.698Z","type":"quit"}
{"nick":"floatleft","date":"2017-12-17T05:40:31.517Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 250 seconds","date":"2017-12-17T05:41:51.776Z","type":"quit"}
{"nick":"grapheti","reason":"Remote host closed the connection","date":"2017-12-17T05:43:48.762Z","type":"quit"}
{"nick":"heyitsrama","message":"ahhhhh","date":"2017-12-17T05:43:50.835Z","type":"message"}
{"nick":"heyitsrama","message":"i refactored","date":"2017-12-17T05:43:54.920Z","type":"message"}
{"nick":"heyitsrama","message":"im racing my team mate to get a solution :p","date":"2017-12-17T05:44:01.880Z","type":"message"}
{"nick":"Cabanossi","date":"2017-12-17T05:44:05.030Z","type":"join"}
{"nick":"heyitsrama","message":"is there a way to use the map function to assign values to the object that was passed in ?","date":"2017-12-17T05:44:33.112Z","type":"message"}
{"nick":"heyitsrama","message":"is that the wrongusage of map?","date":"2017-12-17T05:44:40.361Z","type":"message"}
{"nick":"GreenJello","message":"heyitsrama, you shouldn't mutate anything in .map, but you can return an updated copy","date":"2017-12-17T05:46:06.576Z","type":"message"}
{"nick":"GreenJello","message":"return Object.assign({}, theArgument, { x: 2 })","date":"2017-12-17T05:46:22.117Z","type":"message"}
{"nick":"x405","reason":"Remote host closed the connection","date":"2017-12-17T05:47:45.228Z","type":"quit"}
{"nick":"beerdrop","reason":"Ping timeout: 248 seconds","date":"2017-12-17T05:48:16.047Z","type":"quit"}
{"nick":"heyitsrama","message":"green i have a function that will return me an array","date":"2017-12-17T05:48:17.039Z","type":"message"}
{"nick":"heyitsrama","message":"and i want to replace that with the current array in a map of Users","date":"2017-12-17T05:48:32.022Z","type":"message"}
{"nick":"heyitsrama","message":"user.assign(user.userHand, function)","date":"2017-12-17T05:48:54.732Z","type":"message"}
{"nick":"InFlames_","date":"2017-12-17T05:48:56.498Z","type":"join"}
{"nick":"heyitsrama","message":"because the mapping is working on just the userHands....","date":"2017-12-17T05:49:30.457Z","type":"message"}
{"nick":"rafajafar","message":"this is what I get when I try to npm install","date":"2017-12-17T05:53:51.868Z","type":"message"}
{"nick":"rafajafar","message":"https://gist.github.com/anonymous/81b6983238e7293618fb2414a2eef94f","date":"2017-12-17T05:53:53.053Z","type":"message"}
{"nick":"rafajafar","message":"this happened after I installed \"babel-preset-2017\" (should be babel-preset-es2017 I think)","date":"2017-12-17T05:54:22.815Z","type":"message"}
{"nick":"rafajafar","message":"didnt really need the pacakge","date":"2017-12-17T05:54:29.341Z","type":"message"}
{"nick":"rafajafar","message":"my exact command was: npm install --save-dev babel-preset-2017","date":"2017-12-17T05:56:00.328Z","type":"message"}
{"nick":"Silenced","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T05:56:16.768Z","type":"quit"}
{"nick":"rafajafar","message":"wouldn't work so I tried npm cache clear, npm install, npm cache clear --force, npm install, npm remove babel-preset-2017 (opps remove shoulda been uninstall)","date":"2017-12-17T05:57:15.107Z","type":"message"}
{"nick":"rafajafar","message":"etc etc","date":"2017-12-17T05:57:17.689Z","type":"message"}
{"nick":"rafajafar","message":"I can't get these errors to clear up and I havent been able to diagnose the issue","date":"2017-12-17T05:57:34.058Z","type":"message"}
{"nick":"beerdrop","date":"2017-12-17T05:59:51.244Z","type":"join"}
{"nick":"jscriptStudent","date":"2017-12-17T05:59:57.399Z","type":"join"}
{"nick":"sstercan","date":"2017-12-17T06:00:51.454Z","type":"join"}
{"nick":"kfoonamalik","reason":"Ping timeout: 265 seconds","date":"2017-12-17T06:01:29.481Z","type":"quit"}
{"nick":"x405","date":"2017-12-17T06:02:49.465Z","type":"join"}
{"nick":"jscriptStudent","reason":"Ping timeout: 265 seconds","date":"2017-12-17T06:04:23.398Z","type":"quit"}
{"nick":"heyitsrama","message":"GreenJello: im still having issues with this mutation","date":"2017-12-17T06:04:35.544Z","type":"message"}
{"nick":"heyitsrama","message":"im able to return a function, but i need it performed on each value with in an async call...","date":"2017-12-17T06:04:57.871Z","type":"message"}
{"nick":"aalex","date":"2017-12-17T06:05:40.225Z","type":"join"}
{"nick":"sqram","reason":"Ping timeout: 248 seconds","date":"2017-12-17T06:05:52.025Z","type":"quit"}
{"nick":"aalex","reason":"Ping timeout: 264 seconds","date":"2017-12-17T06:10:33.195Z","type":"quit"}
{"nick":"Delta-One","reason":"Remote host closed the connection","date":"2017-12-17T06:11:37.926Z","type":"quit"}
{"nick":"jayeshsolanki","date":"2017-12-17T06:12:04.631Z","type":"join"}
{"nick":"kfoonamalik","date":"2017-12-17T06:12:08.452Z","type":"join"}
{"nick":"jayeshsolanki","reason":"Max SendQ exceeded","date":"2017-12-17T06:12:28.475Z","type":"quit"}
{"nick":"Delta-One","date":"2017-12-17T06:12:34.471Z","type":"join"}
{"nick":"jayeshsolanki","date":"2017-12-17T06:12:55.204Z","type":"join"}
{"nick":"webbb","reason":"Remote host closed the connection","date":"2017-12-17T06:13:24.174Z","type":"quit"}
{"nick":"Delta-One","reason":"Read error: Connection reset by peer","date":"2017-12-17T06:14:45.475Z","type":"quit"}
{"nick":"Delta-One","date":"2017-12-17T06:14:55.497Z","type":"join"}
{"nick":"webbb","date":"2017-12-17T06:15:54.456Z","type":"join"}
{"nick":"jscriptStudent","date":"2017-12-17T06:16:45.454Z","type":"join"}
{"nick":"jscriptStudent","reason":"Read error: Connection reset by peer","date":"2017-12-17T06:16:47.911Z","type":"quit"}
{"nick":"rafajafar","message":"any idea about why I'm getting those errors above?","date":"2017-12-17T06:18:00.828Z","type":"message"}
{"nick":"rafajafar","message":"I'm still at it, no idea how to fix","date":"2017-12-17T06:18:09.486Z","type":"message"}
{"nick":"reydelcompas","reason":"Quit: Connection closed for inactivity","date":"2017-12-17T06:18:52.035Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-12-17T06:18:59.295Z","type":"join"}
{"nick":"Delta-One","reason":"Ping timeout: 265 seconds","date":"2017-12-17T06:19:51.441Z","type":"quit"}
{"nick":"sliter","reason":"Read error: Connection reset by peer","date":"2017-12-17T06:22:48.953Z","type":"quit"}
{"nick":"Hu0p","reason":"Quit: Do Androids Dream of Electric Sheep?","date":"2017-12-17T06:23:53.192Z","type":"quit"}
{"nick":"Hu0p","date":"2017-12-17T06:25:12.106Z","type":"join"}
{"nick":"Hu0p","reason":"Client Quit","date":"2017-12-17T06:25:25.332Z","type":"quit"}
{"nick":"horsey","date":"2017-12-17T06:26:15.699Z","type":"join"}
{"nick":"horsey","reason":"Ping timeout: 272 seconds","date":"2017-12-17T06:31:04.085Z","type":"quit"}
{"nick":"lpin","date":"2017-12-17T06:31:06.967Z","type":"join"}
{"nick":"dre_","date":"2017-12-17T06:37:07.662Z","type":"join"}
{"nick":"danmactough","reason":"Ping timeout: 248 seconds","date":"2017-12-17T06:39:28.054Z","type":"quit"}
{"nick":"danmactough","date":"2017-12-17T06:40:40.465Z","type":"join"}
{"nick":"snowkidind","reason":"Quit: See Ya Later Alligator!","date":"2017-12-17T06:41:42.977Z","type":"quit"}
{"nick":"hdon__","message":"heyitsrama: i came back just for a bit to write that for you","date":"2017-12-17T06:45:46.466Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: another thing you may want to look at is bluebird's Promise.map http://bluebirdjs.com/docs/api/promise.map.html","date":"2017-12-17T06:46:16.303Z","type":"message"}
{"nick":"Silenced","date":"2017-12-17T06:46:24.533Z","type":"join"}
{"nick":"jscriptStudent","reason":"Remote host closed the connection","date":"2017-12-17T06:47:18.963Z","type":"quit"}
{"nick":"heyitsrama","message":"hey hdon__","date":"2017-12-17T06:47:31.415Z","type":"message"}
{"nick":"jscriptStudent","date":"2017-12-17T06:47:46.477Z","type":"join"}
{"nick":"heyitsrama","message":"i think im having an issue with an understanding of where and how to impliment this","date":"2017-12-17T06:47:51.999Z","type":"message"}
{"nick":"heyitsrama","message":"once i have the returned array of cards, i cant figure out a clean way to get the data into the object that called it","date":"2017-12-17T06:48:31.034Z","type":"message"}
{"nick":"heyitsrama","message":"GreenJello: was saying to use assign, but im not sure how to impliment it","date":"2017-12-17T06:48:54.212Z","type":"message"}
{"nick":"hdon__","message":"well, how do you want the data to be organized?","date":"2017-12-17T06:49:01.552Z","type":"message"}
{"nick":"hdon__","message":"were my mocks accurate btw?","date":"2017-12-17T06:49:36.367Z","type":"message"}
{"nick":"hdon__","message":"i mean, structurally. i assume getAllCardAttributes() doesn't just return the name :P","date":"2017-12-17T06:49:59.123Z","type":"message"}
{"nick":"heyitsrama","message":"so its a GameState object, that has a userList array, within each User, there is a userHand , that has values that i want to replace","date":"2017-12-17T06:50:04.007Z","type":"message"}
{"nick":"heyitsrama","message":"yes you did!","date":"2017-12-17T06:50:07.896Z","type":"message"}
{"nick":"hdon__","message":"ok cool","date":"2017-12-17T06:50:20.000Z","type":"message"}
{"nick":"heyitsrama","message":"the function with the double map worked really  well","date":"2017-12-17T06:50:24.283Z","type":"message"}
{"nick":"hdon__","message":"so you want to modify the game state graph?","date":"2017-12-17T06:50:32.074Z","type":"message"}
{"nick":"heyitsrama","message":"affirmative","date":"2017-12-17T06:50:40.643Z","type":"message"}
{"nick":"heyitsrama","message":"https://bitbucket.org/ajandu/munchkins/src/bf8aa0693d6bdb0df3fc4499ffda770a7b8aa8d7/socket/gameSocket.js?at=amar&fileviewer=file-view-default","date":"2017-12-17T06:52:24.487Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: maybe something like this is what you want? https://pastebin.mozilla.org/9074790","date":"2017-12-17T06:52:29.082Z","type":"message"}
{"nick":"jscriptStudent","reason":"Ping timeout: 256 seconds","date":"2017-12-17T06:52:33.421Z","type":"quit"}
{"nick":"heyitsrama","message":"hdon__: i labled line 224","date":"2017-12-17T06:52:37.254Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: although in this paste, if you have an error on one of your requests, your game state graph will be left in an inconsistent state","date":"2017-12-17T06:53:20.129Z","type":"message"}
{"nick":"kfoonamalik","reason":"Ping timeout: 256 seconds","date":"2017-12-17T06:55:23.489Z","type":"quit"}
{"nick":"hdon__","message":"heyitsrama: what's wrong with this code? it looks like you're assigning the results of mapping returnedGameObj.userList through ngine.getIdentifiedCards() and assigning the result to returnedGameObj.newList. i'm not sure what that's supposed to accomplish","date":"2017-12-17T06:55:53.479Z","type":"message"}
{"nick":"heyitsrama","message":"i was doing that for debugging","date":"2017-12-17T06:56:08.494Z","type":"message"}
{"nick":"heyitsrama","message":"i wanted to see if it was returning correctly","date":"2017-12-17T06:56:14.600Z","type":"message"}
{"nick":"heyitsrama","message":"but ideally i would just like to emit a gameState that has the correct modified userList[user].userHand values","date":"2017-12-17T06:56:52.482Z","type":"message"}
{"nick":"Cabanossi","reason":"Ping timeout: 264 seconds","date":"2017-12-17T06:57:22.316Z","type":"quit"}
{"nick":"SmokinGrunts","reason":"Remote host closed the connection","date":"2017-12-17T06:57:26.797Z","type":"quit"}
{"nick":"hdon__","message":"heyitsrama: i think i understand your difficulty","date":"2017-12-17T06:58:23.465Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: so sometimes it's really helpful to articulate exactly what you want to do","date":"2017-12-17T06:58:33.941Z","type":"message"}
{"nick":"Cabanossi","date":"2017-12-17T06:59:04.084Z","type":"join"}
{"nick":"hdon__","message":"heyitsrama: in this case, i think you want to map each user in userList through getIdentifiedCards() and then modify the corresponding user with the results","date":"2017-12-17T06:59:08.101Z","type":"message"}
{"nick":"heyitsrama","message":"yeah","date":"2017-12-17T06:59:42.403Z","type":"message"}
{"nick":"heyitsrama","message":"but","date":"2017-12-17T06:59:44.350Z","type":"message"}
{"nick":"heyitsrama","message":"im not sure thats an option","date":"2017-12-17T06:59:51.044Z","type":"message"}
{"nick":"heyitsrama","message":"i was trying to do that earlier","date":"2017-12-17T06:59:58.103Z","type":"message"}
{"nick":"heyitsrama","message":"but the issue was the scope of the map?","date":"2017-12-17T07:00:03.953Z","type":"message"}
{"nick":"heyitsrama","message":"it would have to be complete after the nested map function","date":"2017-12-17T07:00:19.209Z","type":"message"}
{"nick":"jayeshsolanki","reason":"Quit: Leaving","date":"2017-12-17T07:00:25.651Z","type":"quit"}
{"nick":"heyitsrama","message":"i think the issue is wihtin the mapping, it seems that its creating scope thats destroyed once the map is complete","date":"2017-12-17T07:02:00.255Z","type":"message"}
{"nick":"heyitsrama","message":"so then its like okay, how do you change the values?","date":"2017-12-17T07:02:19.210Z","type":"message"}
{"nick":"heyitsrama","message":"either way if the approach is like this there has to be a nested map","date":"2017-12-17T07:02:30.788Z","type":"message"}
{"nick":"heyitsrama","message":"even if you try to do it in the calling function, it still has to map over each user","date":"2017-12-17T07:02:46.800Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: https://pastebin.mozilla.org/9074791","date":"2017-12-17T07:03:16.847Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: in \"version B\" it's important that the elements of userList have not changed in the meantime -- if you add, remove, or re-order elements of userList, then they won't correspond to the order that Promise.all() gives you, which holds the results of many getIdentifiedCalls() calls","date":"2017-12-17T07:04:37.878Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: in version A on line 9 of the paste, we have access to the \"user\" variable that references an object representing a user, so we can use that scope on line 9 to handle the resolution of the promise returned by getIdentifiedCards()","date":"2017-12-17T07:05:28.425Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: in version B we exploit that assumption that the order of elements in userList will not change before we're done, and by iterating over userList on line 21, we can use the index of each user object in userList to also look up the corresponding result from the Promise.all() of getIdentifiedCards() calls","date":"2017-12-17T07:06:28.335Z","type":"message"}
{"nick":"grkblood13","reason":"Ping timeout: 248 seconds","date":"2017-12-17T07:06:41.410Z","type":"quit"}
{"nick":"heyitsrama","message":"i went with version a","date":"2017-12-17T07:06:54.985Z","type":"message"}
{"nick":"heyitsrama","message":"and it works","date":"2017-12-17T07:06:59.684Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: exploiting the same assumption, you could also iterate over getIdentifiedCardsResults (i renamed this variable on line 20) instead of iterating over userList","date":"2017-12-17T07:07:07.997Z","type":"message"}
{"nick":"heyitsrama","message":"hdon__: why you so pro","date":"2017-12-17T07:07:08.559Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: i've been at it a while","date":"2017-12-17T07:07:32.181Z","type":"message"}
{"nick":"heyitsrama","message":"hdon__:","date":"2017-12-17T07:07:49.068Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: i was also lucky enough to be part of the community when javascript was first being applied to general purpose and server-side applications","date":"2017-12-17T07:08:03.348Z","type":"message"}
{"nick":"heyitsrama","message":"              return ngine.getIdentifiedCards(user)","date":"2017-12-17T07:08:06.646Z","type":"message"}
{"nick":"heyitsrama","message":"                .then(identifiedCards => user.userHand = identifiedCards)","date":"2017-12-17T07:08:06.728Z","type":"message"}
{"nick":"heyitsrama","message":"why does it say that","date":"2017-12-17T07:08:14.682Z","type":"message"}
{"nick":"^esc_","date":"2017-12-17T07:08:27.451Z","type":"join"}
{"nick":"heyitsrama","message":"i thought we just need to return the map","date":"2017-12-17T07:08:43.966Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: by calling .then() within the userList.map() scope, we have access to the \"user\" variable","date":"2017-12-17T07:09:15.139Z","type":"message"}
{"nick":"^esc","reason":"Ping timeout: 264 seconds","date":"2017-12-17T07:09:21.175Z","type":"quit"}
{"nick":"poutine","reason":"Quit: ZNC - http://znc.in","date":"2017-12-17T07:09:26.794Z","type":"quit"}
{"nick":"hdon__","message":"heyitsrama: incidentally, the return value of that error function is also the argument passed to it, so adding the .then(...) line there does not change the result that Promise.all() resolves","date":"2017-12-17T07:09:55.168Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: incidentally, the return value of that arrow* function is also the argument passed to it, so adding the .then(...) line there does not change the result that Promise.all() resolves","date":"2017-12-17T07:10:05.118Z","type":"message"}
{"nick":"heyitsrama","message":"so its saying","date":"2017-12-17T07:10:46.828Z","type":"message"}
{"nick":"heyitsrama","message":"from the returned value of the promise assign the user.userhand to that returned value","date":"2017-12-17T07:11:13.124Z","type":"message"}
{"nick":"hdon__","message":"well, i wrote user.foo because i didn't know what you wanted, but yes","date":"2017-12-17T07:11:29.466Z","type":"message"}
{"nick":"smccarthy","date":"2017-12-17T07:11:41.373Z","type":"join"}
{"nick":"hdon__","message":"it's probably more clear to say \"resolved\" rather than \"returned\"","date":"2017-12-17T07:11:44.205Z","type":"message"}
{"nick":"heyitsrama","message":"ah yeah, i changed it","date":"2017-12-17T07:11:44.433Z","type":"message"}
{"nick":"hdon__","message":"functions return, promises resolve","date":"2017-12-17T07:11:47.529Z","type":"message"}
{"nick":"heyitsrama","message":"ah","date":"2017-12-17T07:12:03.898Z","type":"message"}
{"nick":"heyitsrama","message":"we never use the results of the map","date":"2017-12-17T07:12:09.186Z","type":"message"}
{"nick":"hdon__","message":"but if you pass a function to .then(), it is essentially a promise. if you return a formal Promise object, then the chain will wait for that promise to complete. if the function you pass to .then() throws an error, then it acts as a promise rejection. finally, if you simply return any value that is not a formal Promise object, then it is considered an already-resolved promise.","date":"2017-12-17T07:13:05.098Z","type":"message"}
{"nick":"heyitsrama","message":"i thought that in the map its creating a local scope for the variables that were passed in","date":"2017-12-17T07:13:16.865Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: yes it's true. the results of the map are packed into the array that Promise.all() will resolve with, and then it is discarded","date":"2017-12-17T07:13:30.249Z","type":"message"}
{"nick":"heyitsrama","message":"so why does the (user) not get destroyed?","date":"2017-12-17T07:13:54.175Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: so, we pass to the map() function another function. that second function creates its own scope. is that what you mean?","date":"2017-12-17T07:14:01.549Z","type":"message"}
{"nick":"re1","date":"2017-12-17T07:14:01.783Z","type":"join"}
{"nick":"grkblood13","date":"2017-12-17T07:14:06.431Z","type":"join"}
{"nick":"hdon__","message":"heyitsrama: ahhh. so, the variable defined on line 7 of my last paste, \"user,\" begins its scope on line 7 after the last curly brace on that line, and ends its scope on the curly brace on line 10","date":"2017-12-17T07:14:46.533Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: the \"user => {\" part of line 10 is the beginning of an arrow function expression. everything in the curly braces (when you're using curly braces) is a function body. any function arguments declared for that arrow function, and any variables declared within the function body inside the curly braces, is scoped to that function body.","date":"2017-12-17T07:15:42.810Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: since line 9 is inside that function body, \"user\" is still in scope.","date":"2017-12-17T07:16:02.281Z","type":"message"}
{"nick":"smccarthy","reason":"Ping timeout: 264 seconds","date":"2017-12-17T07:16:33.220Z","type":"quit"}
{"nick":"heyitsrama","message":"but when the scope is over, its not destroying those variables?","date":"2017-12-17T07:18:03.928Z","type":"message"}
{"nick":"Zamerick_","reason":"Ping timeout: 265 seconds","date":"2017-12-17T07:18:20.483Z","type":"quit"}
{"nick":"hdon__","message":"heyitsrama: variables are not destroyed. they simply go out of scope. if a variable refers to an object, the object is completely separate from any references to it. we say that objects have \"reference semantics\" because when we pass an object to a function or assign it to a variable, we are only manipulating references to those objects. the objects are separate from the variables that refer to them.","date":"2017-12-17T07:19:21.589Z","type":"message"}
{"nick":"Silenced","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-12-17T07:20:19.549Z","type":"quit"}
{"nick":"hdon__","message":"heyitsrama: for example: var arr = new Array(); var obj = new Object(); arr[0] = obj; obj.foo='bar'; console.log(arr[0].foo) // prints \"bar\"","date":"2017-12-17T07:20:28.181Z","type":"message"}
{"nick":"poutine","date":"2017-12-17T07:20:52.218Z","type":"join"}
{"nick":"hdon__","message":"heyitsrama: another example: var a, b; a = new Object; b = a; a.foo = 'bar'; console.log(b.foo) // prints bar","date":"2017-12-17T07:21:14.594Z","type":"message"}
{"nick":"heyitsrama","message":"hdon__: im getting kicked out of the lab at school","date":"2017-12-17T07:21:56.641Z","type":"message"}
{"nick":"sterns","reason":"Read error: Connection reset by peer","date":"2017-12-17T07:21:56.904Z","type":"quit"}
{"nick":"hdon__","message":"heyitsrama: objects do eventually get destroyed, but only once your program contains no more references to them. the garbage collector automatically figures out when an object is no longer reachable, and then it disposes of it for you.","date":"2017-12-17T07:22:04.217Z","type":"message"}
{"nick":"heyitsrama","message":"i will read this when i get back to an internet connection","date":"2017-12-17T07:22:07.895Z","type":"message"}
{"nick":"hdon__","message":"heyitsrama: alright good luck :)","date":"2017-12-17T07:22:09.127Z","type":"message"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2017-12-17T07:22:19.678Z","type":"quit"}
{"nick":"sterns","date":"2017-12-17T07:22:26.574Z","type":"join"}
{"nick":"duderonomy","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-12-17T07:23:31.127Z","type":"quit"}
{"nick":"duderonomy","date":"2017-12-17T07:24:34.186Z","type":"join"}
{"nick":"kividroid","reason":"Read error: Connection reset by peer","date":"2017-12-17T07:26:50.188Z","type":"quit"}
{"nick":"hillct","reason":"Quit: hillct","date":"2017-12-17T07:32:39.556Z","type":"quit"}
{"nick":"poutine","reason":"Quit: ZNC - http://znc.in","date":"2017-12-17T07:33:17.757Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-12-17T07:33:22.886Z","type":"join"}
{"nick":"heyitsrama","date":"2017-12-17T07:34:38.523Z","type":"join"}
{"nick":"aalex","date":"2017-12-17T07:34:53.034Z","type":"join"}
{"nick":"jscriptStudent","reason":"Ping timeout: 248 seconds","date":"2017-12-17T07:37:35.856Z","type":"quit"}
{"nick":"aqrln","reason":"Ping timeout: 264 seconds","date":"2017-12-17T07:39:57.207Z","type":"quit"}
{"nick":"asteele","date":"2017-12-17T07:40:02.006Z","type":"join"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2017-12-17T07:40:09.724Z","type":"quit"}
{"nick":"aalex","reason":"Ping timeout: 248 seconds","date":"2017-12-17T07:40:15.878Z","type":"quit"}
{"nick":"asteele_","reason":"Ping timeout: 265 seconds","date":"2017-12-17T07:40:34.468Z","type":"quit"}
{"nick":"heyitsrama","date":"2017-12-17T07:41:20.304Z","type":"join"}
{"nick":"Cabanossi","reason":"Ping timeout: 276 seconds","date":"2017-12-17T07:42:05.136Z","type":"quit"}
{"nick":"EyePulp","date":"2017-12-17T07:42:47.983Z","type":"join"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2017-12-17T07:44:09.405Z","type":"quit"}
{"nick":"Cabanossi","date":"2017-12-17T07:44:09.485Z","type":"join"}
{"nick":"jscriptStudent","date":"2017-12-17T07:45:33.321Z","type":"join"}
{"nick":"kividroid","date":"2017-12-17T07:45:53.412Z","type":"join"}
{"nick":"Zamerick_","date":"2017-12-17T07:46:01.474Z","type":"join"}
{"nick":"heyitsrama","date":"2017-12-17T07:46:51.999Z","type":"join"}
{"nick":"EyePulp","reason":"Ping timeout: 248 seconds","date":"2017-12-17T07:47:13.419Z","type":"quit"}
{"nick":"Flynnn","reason":"Quit: Auf Wiedersehen!","date":"2017-12-17T07:48:44.713Z","type":"quit"}
{"nick":"jscriptStudent","reason":"Read error: Connection reset by peer","date":"2017-12-17T07:50:08.871Z","type":"quit"}
{"nick":"jscriptStudent","date":"2017-12-17T07:50:36.983Z","type":"join"}
{"nick":"heyitsrama","reason":"Remote host closed the connection","date":"2017-12-17T07:51:13.489Z","type":"quit"}
{"nick":"jscriptStudent","reason":"Read error: Connection reset by peer","date":"2017-12-17T07:51:13.634Z","type":"quit"}
{"nick":"jscriptS_","date":"2017-12-17T07:52:11.095Z","type":"join"}
{"nick":"jscriptS_","reason":"Client Quit","date":"2017-12-17T07:53:16.418Z","type":"quit"}
{"nick":"djapo","reason":"Ping timeout: 265 seconds","date":"2017-12-17T07:53:37.466Z","type":"quit"}
{"nick":"Flynnn","date":"2017-12-17T07:54:23.405Z","type":"join"}
{"nick":"userx","reason":"Quit: userx","date":"2017-12-17T07:55:48.337Z","type":"quit"}
{"nick":"heyitsrama","date":"2017-12-17T07:59:55.209Z","type":"join"}
