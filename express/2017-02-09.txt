{"nick":"node_fanatic","reason":"Ping timeout: 255 seconds","date":"2017-02-09T00:03:14.679Z","type":"quit"}
{"nick":"realisation","date":"2017-02-09T00:05:38.650Z","type":"join"}
{"nick":"realisation","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-02-09T00:11:28.889Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-02-09T00:18:48.507Z","type":"join"}
{"nick":"nitpe","date":"2017-02-09T00:19:58.520Z","type":"join"}
{"nick":"Fishrock123","reason":"Client Quit","date":"2017-02-09T00:20:28.858Z","type":"quit"}
{"nick":"realisation","date":"2017-02-09T00:28:29.823Z","type":"join"}
{"nick":"realisation","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-02-09T00:33:57.586Z","type":"quit"}
{"nick":"iczero","new_nick":"wlp1s1","date":"2017-02-09T00:49:36.173Z","type":"nick"}
{"nick":"node_fanatic","date":"2017-02-09T00:53:33.727Z","type":"join"}
{"nick":"realisation","date":"2017-02-09T01:05:08.959Z","type":"join"}
{"nick":"Auger","date":"2017-02-09T01:15:57.783Z","type":"join"}
{"nick":"realisation","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-02-09T01:19:46.246Z","type":"quit"}
{"nick":"Auger","reason":"Ping timeout: 240 seconds","date":"2017-02-09T01:20:11.806Z","type":"quit"}
{"nick":"Auger","date":"2017-02-09T01:54:15.995Z","type":"join"}
{"nick":"stenno","reason":"Ping timeout: 255 seconds","date":"2017-02-09T02:02:29.709Z","type":"quit"}
{"nick":"dashed","date":"2017-02-09T02:18:15.715Z","type":"join"}
{"nick":"polydo_s","date":"2017-02-09T02:20:38.616Z","type":"join"}
{"nick":"joshonth_","date":"2017-02-09T02:25:13.468Z","type":"join"}
{"nick":"nitpe","reason":"Ping timeout: 245 seconds","date":"2017-02-09T02:29:05.466Z","type":"quit"}
{"nick":"polydo_s","reason":"Ping timeout: 255 seconds","date":"2017-02-09T02:32:11.700Z","type":"quit"}
{"nick":"joshonth_","reason":"Quit: Computer has gone to sleep.","date":"2017-02-09T02:33:01.190Z","type":"quit"}
{"nick":"IcyDiamond","reason":"Ping timeout: 252 seconds","date":"2017-02-09T02:59:24.863Z","type":"quit"}
{"nick":"AKPWD","reason":"Ping timeout: 252 seconds","date":"2017-02-09T02:59:58.280Z","type":"quit"}
{"nick":"lamduh","date":"2017-02-09T03:03:54.611Z","type":"join"}
{"nick":"AKPWD","date":"2017-02-09T03:04:56.529Z","type":"join"}
{"nick":"IcyDiamond","date":"2017-02-09T03:10:58.210Z","type":"join"}
{"nick":"node_fanatic","reason":"Quit: Leaving","date":"2017-02-09T03:12:21.535Z","type":"quit"}
{"nick":"basiclaser","date":"2017-02-09T03:32:53.288Z","type":"join"}
{"nick":"realisation","date":"2017-02-09T03:58:00.456Z","type":"join"}
{"nick":"realisation","reason":"Client Quit","date":"2017-02-09T03:58:15.954Z","type":"quit"}
{"nick":"lamduh","reason":"Ping timeout: 255 seconds","date":"2017-02-09T04:28:44.678Z","type":"quit"}
{"nick":"ShekharReddy","date":"2017-02-09T04:48:11.334Z","type":"join"}
{"nick":"lamduh","date":"2017-02-09T04:54:31.618Z","type":"join"}
{"nick":"Auger","reason":"Quit: leaving","date":"2017-02-09T05:25:20.283Z","type":"quit"}
{"nick":"lamduh","reason":"Ping timeout: 255 seconds","date":"2017-02-09T05:42:05.613Z","type":"quit"}
{"nick":"stenno","date":"2017-02-09T05:58:17.519Z","type":"join"}
{"nick":"stenno","reason":"Ping timeout: 245 seconds","date":"2017-02-09T06:03:15.494Z","type":"quit"}
{"nick":"polonel","date":"2017-02-09T06:08:41.874Z","type":"join"}
{"nick":"polonel_","reason":"Ping timeout: 245 seconds","date":"2017-02-09T06:09:05.555Z","type":"quit"}
{"nick":"bengl_","date":"2017-02-09T06:30:05.007Z","type":"join"}
{"nick":"bengl","reason":"Ping timeout: 240 seconds","date":"2017-02-09T06:33:09.478Z","type":"quit"}
{"nick":"bengl_","new_nick":"bengl","date":"2017-02-09T06:33:48.893Z","type":"nick"}
{"nick":"stenno","date":"2017-02-09T06:41:42.526Z","type":"join"}
{"nick":"stenno","reason":"Ping timeout: 276 seconds","date":"2017-02-09T06:46:36.526Z","type":"quit"}
{"nick":"kbck","date":"2017-02-09T06:53:59.528Z","type":"join"}
{"nick":"ShekharReddy","reason":"Quit: Connection closed for inactivity","date":"2017-02-09T06:57:39.219Z","type":"quit"}
{"nick":"ponga","date":"2017-02-09T07:08:03.540Z","type":"join"}
{"nick":"stenno","date":"2017-02-09T07:09:55.298Z","type":"join"}
{"nick":"bybb","date":"2017-02-09T07:56:43.885Z","type":"join"}
{"nick":"stenno","reason":"Ping timeout: 264 seconds","date":"2017-02-09T08:02:11.308Z","type":"quit"}
{"nick":"stenno","date":"2017-02-09T08:04:03.282Z","type":"join"}
{"nick":"stenno","reason":"Ping timeout: 256 seconds","date":"2017-02-09T08:35:51.241Z","type":"quit"}
{"nick":"stenno","date":"2017-02-09T08:37:20.694Z","type":"join"}
{"nick":"slajax","reason":"Ping timeout: 260 seconds","date":"2017-02-09T08:46:14.661Z","type":"quit"}
{"nick":"slajax","date":"2017-02-09T08:46:24.487Z","type":"join"}
{"nick":"slajax_","date":"2017-02-09T09:13:19.455Z","type":"join"}
{"nick":"slajax","reason":"Read error: Connection reset by peer","date":"2017-02-09T09:13:36.305Z","type":"quit"}
{"nick":"slajax","date":"2017-02-09T09:39:37.712Z","type":"join"}
{"nick":"slajax_","reason":"Ping timeout: 240 seconds","date":"2017-02-09T09:39:49.463Z","type":"quit"}
{"nick":"lennym","date":"2017-02-09T10:02:25.543Z","type":"join"}
{"nick":"stenno","reason":"Ping timeout: 252 seconds","date":"2017-02-09T10:34:48.661Z","type":"quit"}
{"nick":"Keverw","date":"2017-02-09T10:35:12.925Z","type":"join"}
{"nick":"dashed","reason":"Quit: Connection closed for inactivity","date":"2017-02-09T10:50:19.762Z","type":"quit"}
{"nick":"genpaku","date":"2017-02-09T11:06:40.261Z","type":"join"}
{"nick":"_yoy_","date":"2017-02-09T11:08:26.616Z","type":"join"}
{"nick":"YoY","reason":"Ping timeout: 245 seconds","date":"2017-02-09T11:11:10.568Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-02-09T11:25:10.907Z","type":"quit"}
{"nick":"mylesborins","date":"2017-02-09T11:25:41.349Z","type":"join"}
{"nick":"bybb","reason":"Remote host closed the connection","date":"2017-02-09T11:28:26.184Z","type":"quit"}
{"nick":"bybb","date":"2017-02-09T12:12:20.780Z","type":"join"}
{"nick":"realisation","date":"2017-02-09T12:26:19.432Z","type":"join"}
{"nick":"realisation","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-02-09T12:32:51.523Z","type":"quit"}
{"nick":"undertuga","date":"2017-02-09T12:45:39.217Z","type":"join"}
{"nick":"basiclaser","reason":"Quit: Connection closed for inactivity","date":"2017-02-09T12:50:59.654Z","type":"quit"}
{"nick":"realisation","date":"2017-02-09T13:32:33.148Z","type":"join"}
{"nick":"realisation","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-02-09T13:49:38.458Z","type":"quit"}
{"nick":"kbck","reason":"Read error: Connection reset by peer","date":"2017-02-09T14:13:34.566Z","type":"quit"}
{"nick":"ShekharReddy","date":"2017-02-09T14:22:58.767Z","type":"join"}
{"nick":"stenno","date":"2017-02-09T14:30:17.528Z","type":"join"}
{"nick":"ShekharReddy","date":"2017-02-09T14:35:15.131Z","type":"quit"}
{"nick":"stenno","reason":"Ping timeout: 276 seconds","date":"2017-02-09T14:35:54.527Z","type":"quit"}
{"nick":"ponga","date":"2017-02-09T14:40:31.668Z","type":"quit"}
{"nick":"iovoid","reason":"Remote host closed the connection","date":"2017-02-09T14:51:50.938Z","type":"quit"}
{"nick":"iovoid","date":"2017-02-09T14:52:05.902Z","type":"join"}
{"nick":"lohfu","date":"2017-02-09T15:04:40.457Z","type":"join"}
{"nick":"SaltyCatFish","date":"2017-02-09T15:08:13.150Z","type":"join"}
{"nick":"diamonds","date":"2017-02-09T15:11:39.466Z","type":"join"}
{"nick":"georoot","date":"2017-02-09T15:33:56.521Z","type":"join"}
{"nick":"georoot","message":"Hi, can someone please have a look at this question http://stackoverflow.com/questions/42140381/avoid-callback-hell-in-express-routes ?","date":"2017-02-09T15:34:28.663Z","type":"message"}
{"nick":"lennym","message":"georoot: Use a router","date":"2017-02-09T15:36:37.991Z","type":"message"}
{"nick":"lennym","message":"const router = express.Router(); router.use(fun1).use(fun2)... etc.","date":"2017-02-09T15:37:36.167Z","type":"message"}
{"nick":"lennym","message":"router.get('/', router);","date":"2017-02-09T15:37:54.290Z","type":"message"}
{"nick":"commma","message":"aaaaah people misusing \"callback hell\" again","date":"2017-02-09T15:38:27.118Z","type":"message"}
{"nick":"danneu","message":"or assign them outside. middleware = [ mw1, mw2, mw3 ]; app.get(\"/\", middleware, ...)","date":"2017-02-09T15:38:58.647Z","type":"message"}
{"nick":"danneu","message":"not sure your question is related to the middleware, according to your last sentence","date":"2017-02-09T15:40:14.321Z","type":"message"}
{"nick":"danneu","message":"if you want a route handler to return a promise, check out express-promise-router","date":"2017-02-09T15:40:27.167Z","type":"message"}
{"nick":"georoot","message":"@danneu let me check that lib","date":"2017-02-09T15:40:47.772Z","type":"message"}
{"nick":"georoot","message":"@commma was not sure what to call that in the question :(","date":"2017-02-09T15:41:21.004Z","type":"message"}
{"nick":"danneu","message":"that way you can just bubble up rejected promises instead of lifting every single one into a final 500 catch","date":"2017-02-09T15:41:24.511Z","type":"message"}
{"nick":"georoot","message":"danneu: that helped :) place an answer on SO , would be glad to accept it :)","date":"2017-02-09T15:42:57.939Z","type":"message"}
{"nick":"commma","message":"georoot: as far as i can tell your problem is that you think it's prettier not to pass so many arguments to a function","date":"2017-02-09T15:43:22.587Z","type":"message"}
{"nick":"commma","message":"the idea of callback hell is when your callbacks call more callbacks which call more ... and they stack into a pyramid","date":"2017-02-09T15:43:38.527Z","type":"message"}
{"nick":"lennym","message":"CHEVRONS OF DOOM!","date":"2017-02-09T15:45:36.427Z","type":"message"}
{"nick":"danneu","message":"i think they just weren't sure how ask their real question which is the last question on their SO page","date":"2017-02-09T15:45:46.269Z","type":"message"}
{"nick":"lennym","message":"commma: \"callback hell\" has just become \"there's a thing with node I don't like/understand\"","date":"2017-02-09T15:46:27.299Z","type":"message"}
{"nick":"commma","message":"yah :/","date":"2017-02-09T15:46:38.883Z","type":"message"}
{"nick":"lennym","message":"\"I needed to ue a callback once\"","date":"2017-02-09T15:46:42.474Z","type":"message"}
{"nick":"lennym","message":"\"I needed to use a callback once\"","date":"2017-02-09T15:46:46.310Z","type":"message"}
{"nick":"danneu","message":"to be fair, their callback hell was that they had to have the .catch in the handler ;)","date":"2017-02-09T15:46:58.648Z","type":"message"}
{"nick":"danneu","message":"that is a hell of sorts","date":"2017-02-09T15:47:06.719Z","type":"message"}
{"nick":"lennym","message":"I wouldn't know. I'm not a fan of using promises in express","date":"2017-02-09T15:47:31.094Z","type":"message"}
{"nick":"danneu","message":"like having to call next(err)","date":"2017-02-09T15:47:45.473Z","type":"message"}
{"nick":"lennym","message":"I like promises generally, but I think they're a bad fit for express middleware","date":"2017-02-09T15:47:48.614Z","type":"message"}
{"nick":"lennym","message":"Since Promises have two states - resolved/rejected, but middleware has three ways of \"resolving\" - calling back with no error, calling back with an error, and terminating.","date":"2017-02-09T15:48:27.930Z","type":"message"}
{"nick":"lennym","message":"And there's no \"nice\" way of representing those three with Promises.","date":"2017-02-09T15:48:43.641Z","type":"message"}
{"nick":"georoot","reason":"Quit: leaving","date":"2017-02-09T15:49:35.408Z","type":"quit"}
{"nick":"danneu","message":"isn't that just resolve, reject, and res.send?","date":"2017-02-09T15:50:35.303Z","type":"message"}
{"nick":"danneu","message":"express only has \"before-ware\", so you can't do the classic middleware pattern of `log('before request goes downstream'); await next(); log('after response comes upstream')`","date":"2017-02-09T15:52:18.513Z","type":"message"}
{"nick":"commma","message":"which if you really need you just use koa instead","date":"2017-02-09T16:04:32.230Z","type":"message"}
{"nick":"Poeticode","date":"2017-02-09T16:04:49.343Z","type":"join"}
{"nick":"lennym","message":"danneu: Well yes, except there's no way to represent the \"default\" state of res.send, so you have to also explicitly resolve with a value. I just don't like it.","date":"2017-02-09T16:05:09.805Z","type":"message"}
{"nick":"danneu","message":"commma: yeah, i personally don't use express","date":"2017-02-09T16:05:31.755Z","type":"message"}
{"nick":"lennym","message":"danneu: And since if you use the full power of routers and middleware then you *shouldn't* go too deep with callbacks anyway, it's not a problem that needs solving IMO","date":"2017-02-09T16:05:41.516Z","type":"message"}
{"nick":"commma","message":"yeah i really dislike the express-promise-router thing too","date":"2017-02-09T16:06:12.468Z","type":"message"}
{"nick":"commma","message":"it's led to more than a few issues that i've seen people having here and in #node.js","date":"2017-02-09T16:06:24.614Z","type":"message"}
{"nick":"lennym","message":"I use express a lot, and solve most problems by a) making more routers, and b) basically never terminating","date":"2017-02-09T16:06:36.791Z","type":"message"}
{"nick":"commma","message":"ahaha yah","date":"2017-02-09T16:06:43.703Z","type":"message"}
{"nick":"danneu","message":"imo yield/await are what make business logic in node bearable, but i know we all have our own opinions there","date":"2017-02-09T16:06:54.781Z","type":"message"}
{"nick":"commma","message":"yield is awful, i use `async` and `await` quite a bit though","date":"2017-02-09T16:07:10.786Z","type":"message"}
{"nick":"danneu","message":"well, it's the abstraction i'm talking about. async/await wasn't usable afair when koa came out","date":"2017-02-09T16:07:41.155Z","type":"message"}
{"nick":"commma","message":"yeah which is why it's in koa 2, the spec was barely started at the point the first koa was being worked on","date":"2017-02-09T16:08:04.901Z","type":"message"}
{"nick":"danneu","message":"where branching logic that happens to be async is just `if (x) await promis()`","date":"2017-02-09T16:08:08.603Z","type":"message"}
{"nick":"commma","message":"`if` statements considered harmful","date":"2017-02-09T16:08:22.474Z","type":"message"}
{"nick":"danneu","message":"that sort of stuff with callbacks can change entire indentation structures","date":"2017-02-09T16:08:28.207Z","type":"message"}
{"nick":"lennym","message":"MOAR ROUTERS!!","date":"2017-02-09T16:09:15.757Z","type":"message"}
{"nick":"commma","message":"yep","date":"2017-02-09T16:10:08.675Z","type":"message"}
{"nick":"lennym","message":"In short, never more than one layer of async-ness per middleware.","date":"2017-02-09T16:10:50.528Z","type":"message"}
{"nick":"lennym","message":"So everything is just (req, res, next) => { if (x) { return doasync(next); } next(); }","date":"2017-02-09T16:11:55.433Z","type":"message"}
{"nick":"lennym","message":"You can also (ab)use error handling at a router level to bypass sections of middleware.","date":"2017-02-09T16:12:41.671Z","type":"message"}
{"nick":"danneu","message":"def abuse ;)","date":"2017-02-09T16:13:26.801Z","type":"message"}
{"nick":"lennym","message":"Meh, you do the same in promise chains to avoid nesting","date":"2017-02-09T16:14:36.671Z","type":"message"}
{"nick":"danneu","message":"i like static graphs of routes/ware","date":"2017-02-09T16:16:08.956Z","type":"message"}
{"nick":"lennym","message":"There's huge similarity between express routers and promises when it comes to composability","date":"2017-02-09T16:16:16.001Z","type":"message"}
{"nick":"basiclaser","date":"2017-02-09T16:33:10.789Z","type":"join"}
{"nick":"Poeticode","message":"so I've got some authentication middleware that sets a variable in the response. how would I go about checking for this variable on the frontend? These aren't XHR requests, but regular page requests","date":"2017-02-09T16:38:51.690Z","type":"message"}
{"nick":"Poeticode","message":"and in case this is an XY issue, I'm basically wanting to change page content based on whether the user is authenticated or not","date":"2017-02-09T16:39:28.827Z","type":"message"}
{"nick":"lennym","message":"Poeticode: If they're \"regular page requests\" then you're rendering on the server, right?","date":"2017-02-09T16:48:17.350Z","type":"message"}
{"nick":"danneu","message":"Poeticode: the server isn't rendering html?","date":"2017-02-09T16:48:21.898Z","type":"message"}
{"nick":"Poeticode","message":"nah, no server rendering. I'm thinking that I'm going about this the wrong way :/","date":"2017-02-09T16:48:50.741Z","type":"message"}
{"nick":"Poeticode","message":"basically just authenticating users based on the client certificate. Certificates with certain common names will have different permissions","date":"2017-02-09T16:49:57.775Z","type":"message"}
{"nick":"danneu","message":"in a typical server-rendered approach, you authentication middleware sets something like `req.currentUser = user | null` which downstream routes/templates can then inspect","date":"2017-02-09T16:50:57.895Z","type":"message"}
{"nick":"danneu","message":"Welcome, {{ ctx.currUser.uname or \"Guest\" }}!","date":"2017-02-09T16:52:02.702Z","type":"message"}
{"nick":"danneu","message":"so that might be on option","date":"2017-02-09T16:52:32.533Z","type":"message"}
{"nick":"node_fanatic","date":"2017-02-09T16:55:03.635Z","type":"join"}
{"nick":"Poeticode","message":"I see. the app's in its early stages so I could see if I could implement SSR'ing.","date":"2017-02-09T16:55:06.913Z","type":"message"}
{"nick":"SaltyCatFish","reason":"Ping timeout: 258 seconds","date":"2017-02-09T17:03:52.154Z","type":"quit"}
{"nick":"danneu","message":"Poeticode: check out something like nunjucks. i'd get it working at first just having nunjucks serve your view/*.html files at first. `res.render(\"template.html\", { foo: 42, bar: \"hello\" })`","date":"2017-02-09T17:09:24.260Z","type":"message"}
{"nick":"danneu","message":"and then from there you can see about actually accessing the current user from the templates","date":"2017-02-09T17:10:16.674Z","type":"message"}
{"nick":"danneu","message":"https://expressjs.com/en/guide/using-template-engines.html","date":"2017-02-09T17:10:36.796Z","type":"message"}
{"nick":"SaltyCatFish","date":"2017-02-09T17:10:53.238Z","type":"join"}
{"nick":"SaltyCatFish_","date":"2017-02-09T17:23:10.237Z","type":"join"}
{"nick":"SaltyCatFish","reason":"Ping timeout: 260 seconds","date":"2017-02-09T17:24:14.236Z","type":"quit"}
{"nick":"SaltyCatFish_","reason":"Ping timeout: 256 seconds","date":"2017-02-09T17:37:01.160Z","type":"quit"}
{"nick":"kbck","date":"2017-02-09T17:53:47.526Z","type":"join"}
{"nick":"bybb","reason":"Remote host closed the connection","date":"2017-02-09T18:00:05.949Z","type":"quit"}
{"nick":"Poeticode","message":"danneu: sorry, was out for lunch. I'm using Vue in the frontend, so I think I should be able to do that with its templating engine. Thanks!","date":"2017-02-09T18:14:15.684Z","type":"message"}
{"nick":"stenno","date":"2017-02-09T18:23:25.544Z","type":"join"}
{"nick":"node_fanatic","reason":"Read error: Connection reset by peer","date":"2017-02-09T18:24:34.490Z","type":"quit"}
{"nick":"Poeticode","message":"Oooh, this sounds like it'd solve all of my issues: https://www.npmjs.com/package/client-certificate-auth I could just have my admin routes use a specific auth checking middleware for certain users","date":"2017-02-09T18:47:55.346Z","type":"message"}
{"nick":"node_fanatic","date":"2017-02-09T19:07:11.613Z","type":"join"}
{"nick":"Poeticode","message":"hm, and then maybe have a JWT token saved locally when they authenticate, so that I don't have to constantly check the cert, and can access the token on the frontend","date":"2017-02-09T19:26:24.897Z","type":"message"}
{"nick":"lennym","reason":"Quit: Connection closed for inactivity","date":"2017-02-09T19:27:02.812Z","type":"quit"}
{"nick":"oojacoboo","date":"2017-02-09T19:33:34.515Z","type":"join"}
{"nick":"node_fanatic","reason":"Ping timeout: 255 seconds","date":"2017-02-09T19:35:02.648Z","type":"quit"}
{"nick":"diamonds","reason":"Ping timeout: 240 seconds","date":"2017-02-09T19:41:49.462Z","type":"quit"}
{"nick":"oojacoboo","reason":"Quit: Computer has gone to sleep.","date":"2017-02-09T19:46:56.795Z","type":"quit"}
{"nick":"diamonds","date":"2017-02-09T19:57:54.279Z","type":"join"}
{"nick":"oojacoboo","date":"2017-02-09T19:58:49.439Z","type":"join"}
{"nick":"nitpe","date":"2017-02-09T20:09:37.435Z","type":"join"}
{"nick":"nitpe","reason":"Quit: Leaving","date":"2017-02-09T20:14:33.778Z","type":"quit"}
{"nick":"lamduh","date":"2017-02-09T20:22:22.489Z","type":"join"}
{"nick":"smokeo","date":"2017-02-09T20:25:26.423Z","type":"join"}
{"nick":"undertuga","reason":"Quit: Connection closed for inactivity","date":"2017-02-09T20:25:34.840Z","type":"quit"}
{"nick":"basiclaser","reason":"Quit: Connection closed for inactivity","date":"2017-02-09T20:30:59.714Z","type":"quit"}
{"nick":"diamonds","reason":"Quit: Leaving","date":"2017-02-09T20:35:07.743Z","type":"quit"}
{"nick":"diamonds","date":"2017-02-09T20:35:26.466Z","type":"join"}
{"nick":"smokeo","reason":"Remote host closed the connection","date":"2017-02-09T20:47:31.129Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-02-09T20:56:04.835Z","type":"join"}
{"nick":"lamduh","reason":"\"Leaving\"","date":"2017-02-09T20:56:21.085Z","type":"part"}
{"nick":"lamduh","date":"2017-02-09T20:56:27.147Z","type":"join"}
{"nick":"lamduh","message":"was the app.map() function removed from the API?","date":"2017-02-09T20:56:39.647Z","type":"message"}
{"nick":"lamduh","message":"I wanted to do routing like this, https://github.com/expressjs/express/blob/4.13.1/examples/route-map/index.js#L52-L66, but it doesn't appear to be a function?","date":"2017-02-09T20:56:50.411Z","type":"message"}
{"nick":"commma","message":"lamduh: scroll up","date":"2017-02-09T20:58:26.685Z","type":"message"}
{"nick":"commma","message":"they literally define `app.map` on line 11","date":"2017-02-09T20:58:44.397Z","type":"message"}
{"nick":"lamduh","message":"got me there","date":"2017-02-09T20:59:12.515Z","type":"message"}
{"nick":"lamduh","message":"thanks","date":"2017-02-09T20:59:13.066Z","type":"message"}
{"nick":"smokeo","date":"2017-02-09T21:03:37.172Z","type":"join"}
{"nick":"lamduh","reason":"Quit: Leaving","date":"2017-02-09T21:04:32.676Z","type":"quit"}
{"nick":"smokeo","reason":"Client Quit","date":"2017-02-09T21:08:03.688Z","type":"quit"}
{"nick":"node_fanatic","date":"2017-02-09T21:31:53.697Z","type":"join"}
{"nick":"__emps","date":"2017-02-09T22:15:25.838Z","type":"join"}
{"nick":"Poeticode","reason":"Ping timeout: 240 seconds","date":"2017-02-09T22:53:01.285Z","type":"quit"}
{"nick":"diamonds","reason":"Ping timeout: 240 seconds","date":"2017-02-09T23:05:29.477Z","type":"quit"}
{"nick":"esmiurium","date":"2017-02-09T23:11:22.409Z","type":"join"}
{"nick":"Calinou","reason":"Remote host closed the connection","date":"2017-02-09T23:16:39.585Z","type":"quit"}
{"nick":"Calinou","date":"2017-02-09T23:18:56.508Z","type":"join"}
{"nick":"danneu","message":"seems to be missing a place to put middleware","date":"2017-02-09T23:36:35.289Z","type":"message"}
{"nick":"danneu","message":"that'd be a nice upgrade. allow `get: [mws, handler]` and make `use: [mws]` mount middleware at that prefix","date":"2017-02-09T23:38:45.663Z","type":"message"}
