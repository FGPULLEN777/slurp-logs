{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-05-01T00:00:01.158Z","type":"quit"}
{"nick":"ircretary","date":"2013-05-01T00:00:08.581Z","type":"join"}
{"nick":"indutny","message":"ok, enough rust for today :)","date":"2013-05-01T00:10:07.772Z","type":"message"}
{"nick":"indutny","message":"time for sleeping","date":"2013-05-01T00:10:11.328Z","type":"message"}
{"nick":"indutny","action":"&","date":"2013-05-01T00:10:12.451Z","type":"action"}
{"nick":"LOUDBOT","message":"AND APPARENTLY (SHOCKINGLY) THE RESULTS ON STACKOVERFLOW ARE WRONG","date":"2013-05-01T00:10:12.998Z","type":"message"}
{"nick":"kevinswiber","date":"2013-05-01T00:16:14.205Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-01T00:16:18.990Z","type":"quit"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-05-01T00:20:30.467Z","type":"quit"}
{"nick":"mikeal","date":"2013-05-01T00:22:18.993Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-01T00:31:25.465Z","type":"quit"}
{"nick":"rje","reason":"\"Leaving\"","date":"2013-05-01T00:32:33.442Z","type":"part"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-05-01T00:32:53.290Z","type":"quit"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-05-01T00:34:50.974Z","type":"quit"}
{"nick":"rje","date":"2013-05-01T00:36:12.275Z","type":"join"}
{"nick":"dap","message":"HI LOUDBOT","date":"2013-05-01T00:40:31.018Z","type":"message"}
{"nick":"LOUDBOT","message":"I HAVE SO MUCH GAS RIGHT NOW THAT I JUST SET A LEATHER SOFA ON FIRE","date":"2013-05-01T00:40:31.376Z","type":"message"}
{"nick":"qard","reason":"Quit: Leaving.","date":"2013-05-01T00:44:05.056Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-05-01T00:44:48.816Z","type":"join"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-05-01T00:54:26.701Z","type":"quit"}
{"nick":"inolen","date":"2013-05-01T00:55:56.594Z","type":"join"}
{"nick":"inolen","reason":"Client Quit","date":"2013-05-01T00:56:17.877Z","type":"quit"}
{"nick":"mikeal","date":"2013-05-01T01:02:08.450Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 264 seconds","date":"2013-05-01T01:11:55.316Z","type":"quit"}
{"nick":"mikeal","date":"2013-05-01T01:13:06.116Z","type":"join"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-05-01T01:16:59.301Z","type":"quit"}
{"nick":"mmalecki","new_nick":"mmalecki[zzz]","date":"2013-05-01T01:18:13.786Z","type":"nick"}
{"nick":"creationix","message":"tjfontaine: congrats on being an official part of the team","date":"2013-05-01T01:18:41.836Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 252 seconds","date":"2013-05-01T01:25:48.007Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-01T01:27:14.500Z","type":"quit"}
{"nick":"mikeal","date":"2013-05-01T01:28:41.440Z","type":"join"}
{"nick":"indexzero","date":"2013-05-01T01:41:34.176Z","type":"join"}
{"nick":"indexzero","reason":"Client Quit","date":"2013-05-01T01:41:34.177Z","type":"quit"}
{"nick":"Benvie_","date":"2013-05-01T01:41:56.855Z","type":"join"}
{"nick":"mbroadst","date":"2013-05-01T01:44:31.075Z","type":"join"}
{"nick":"mbroadst","message":"hey I'm interested in what reasons there were for not implementing node's core modules as v8::Extensions, was pointed here from #node.js though I understand that libuv can exist independent of node..","date":"2013-05-01T01:46:17.494Z","type":"message"}
{"nick":"mbroadst","message":"does anyone here know why, or is that one of the great node mysteries :)","date":"2013-05-01T01:48:21.222Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-05-01T02:04:29.846Z","type":"quit"}
{"nick":"abraxas","date":"2013-05-01T02:07:51.007Z","type":"join"}
{"nick":"qard","date":"2013-05-01T02:14:35.445Z","type":"join"}
{"nick":"dominictarr","date":"2013-05-01T02:18:58.360Z","type":"join"}
{"nick":"qard","reason":"Ping timeout: 264 seconds","date":"2013-05-01T02:19:07.322Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-05-01T02:24:07.057Z","type":"quit"}
{"nick":"kazupon","date":"2013-05-01T02:44:50.224Z","type":"join"}
{"nick":"brson","date":"2013-05-01T03:07:23.618Z","type":"join"}
{"nick":"brson","reason":"Client Quit","date":"2013-05-01T03:10:31.893Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-01T03:19:56.616Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-05-01T03:26:12.309Z","type":"quit"}
{"nick":"c4milo","date":"2013-05-01T03:26:39.170Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 258 seconds","date":"2013-05-01T03:31:07.108Z","type":"quit"}
{"nick":"st_luke","date":"2013-05-01T03:44:19.874Z","type":"join"}
{"nick":"inolen","date":"2013-05-01T03:50:58.466Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-05-01T03:56:26.782Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-01T03:59:48.410Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-05-01T04:07:20.747Z","type":"nick"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-05-01T04:09:12.292Z","type":"quit"}
{"nick":"kazupon","date":"2013-05-01T04:10:56.625Z","type":"join"}
{"nick":"mikeal","date":"2013-05-01T04:11:49.254Z","type":"join"}
{"nick":"kellabyte","message":"any ideas what this means? I'm trying to use the uv_work_queue()","date":"2013-05-01T04:16:04.436Z","type":"message"}
{"nick":"kellabyte","message":"Assertion failed: req->type == UV_WORK, file src\\win\\threadpool.c, line 45","date":"2013-05-01T04:17:01.779Z","type":"message"}
{"nick":"tjfontaine","message":"the request you passed in wasn't the right type?","date":"2013-05-01T04:17:59.926Z","type":"message"}
{"nick":"dominictarr","date":"2013-05-01T04:22:48.245Z","type":"join"}
{"nick":"kellabyte","message":"tjfontaine: what is \"the request\" mean in this context? the method to call? the uv_work_t?","date":"2013-05-01T04:23:05.241Z","type":"message"}
{"nick":"tjfontaine","message":"the uv_work_t, brb laundry","date":"2013-05-01T04:23:28.234Z","type":"message"}
{"nick":"kellabyte","message":"tjfontaine: anything look wrong with this? I followed the example on the libuv website, obviously got something wrong :P https://gist.github.com/kellabyte/5493726","date":"2013-05-01T04:27:26.569Z","type":"message"}
{"nick":"tjfontaine","message":"kellabyte: your uv_work_t goes out of scope in that function and results in invalid memory?","date":"2013-05-01T04:29:59.049Z","type":"message"}
{"nick":"kellabyte","message":"ah crap thats probably it","date":"2013-05-01T04:32:42.924Z","type":"message"}
{"nick":"kellabyte","message":"damn I hate my C noob skills","date":"2013-05-01T04:32:47.778Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2013-05-01T04:32:57.233Z","type":"message"}
{"nick":"kellabyte","message":"is there a way to new that on the heap?","date":"2013-05-01T04:33:33.261Z","type":"message"}
{"nick":"tjfontaine","message":"in C that would be malloc","date":"2013-05-01T04:34:11.751Z","type":"message"}
{"nick":"kellabyte","message":"ok","date":"2013-05-01T04:34:16.268Z","type":"message"}
{"nick":"kellabyte","message":"thanks for being tolerant of my noob C problems unrelated to libuv :P","date":"2013-05-01T04:35:09.483Z","type":"message"}
{"nick":"tjfontaine","message":"haha we all have to start somewhere","date":"2013-05-01T04:35:27.815Z","type":"message"}
{"nick":"DrPizza","message":"oh hey","date":"2013-05-01T04:37:27.947Z","type":"message"}
{"nick":"DrPizza","message":"haha","date":"2013-05-01T04:37:29.025Z","type":"message"}
{"nick":"DrPizza","message":"I have been idling in here all this time","date":"2013-05-01T04:37:32.896Z","type":"message"}
{"nick":"kellabyte","message":"DrPizza: how long is all this time? :P","date":"2013-05-01T04:39:26.416Z","type":"message"}
{"nick":"DrPizza","message":"several years.","date":"2013-05-01T04:39:37.872Z","type":"message"}
{"nick":"kellabyte","message":"holy crap","date":"2013-05-01T04:41:26.720Z","type":"message"}
{"nick":"DrPizza","message":"?","date":"2013-05-01T04:48:45.325Z","type":"message"}
{"nick":"DrPizza","message":"kellabyte: if you're running on Windows you really should use C++ and not C, because you should be using Visual Studio, and while its C++ support is mostly decent, its C support is not.","date":"2013-05-01T04:49:49.170Z","type":"message"}
{"nick":"DrPizza","message":"I keep asking when they will implement C99.","date":"2013-05-01T04:49:56.025Z","type":"message"}
{"nick":"DrPizza","message":"They keep not answering.","date":"2013-05-01T04:49:58.660Z","type":"message"}
{"nick":"kellabyte","message":"lol","date":"2013-05-01T04:51:49.047Z","type":"message"}
{"nick":"kellabyte","message":"in one project I'm messing with mostly C++, in this one C","date":"2013-05-01T04:52:15.326Z","type":"message"}
{"nick":"DrPizza","message":"as a practical matter, C is literally devoid of merit","date":"2013-05-01T04:52:30.986Z","type":"message"}
{"nick":"DrPizza","message":"especially C89/C90","date":"2013-05-01T04:52:34.630Z","type":"message"}
{"nick":"DrPizza","message":"Can't even mix declarations and code.","date":"2013-05-01T04:52:44.989Z","type":"message"}
{"nick":"kellabyte","message":"oh boy I'm doing some real bad things somewhere LOL","date":"2013-05-01T05:04:11.362Z","type":"message"}
{"nick":"kellabyte","message":"HEAP[hello_world.exe]: HEAP: Free Heap block 000000F7387EDCB0 modified at 000000F7387EDD00 after it was freed","date":"2013-05-01T05:04:35.032Z","type":"message"}
{"nick":"kellabyte","message":":P","date":"2013-05-01T05:04:37.603Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-05-01T05:07:51.117Z","type":"message"}
{"nick":"kellabyte","message":"I wonder what that means, I'm just doing a malloc","date":"2013-05-01T05:13:52.130Z","type":"message"}
{"nick":"kellabyte","message":"uv_write_t* write_req = (uv_write_t *)malloc(sizeof(*write_req));","date":"2013-05-01T05:13:55.435Z","type":"message"}
{"nick":"DrPizza","message":"don't cast the return value of malloc","date":"2013-05-01T05:14:10.436Z","type":"message"}
{"nick":"DrPizza","message":"but the reason that malloc is failing is that there is previous heap corruption","date":"2013-05-01T05:14:21.936Z","type":"message"}
{"nick":"DrPizza","message":"but it only checks the heap's integrity when you call malloc or free","date":"2013-05-01T05:14:31.228Z","type":"message"}
{"nick":"kellabyte","message":"DrPizza: won't compile in VS if I don't, works fine without uv_work_queue(), only exceptions when I use uv_work_queue()","date":"2013-05-01T05:14:52.073Z","type":"message"}
{"nick":"kellabyte","message":"ah, I didn't know thats how the integrity check worked, cool","date":"2013-05-01T05:15:02.365Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-01T05:15:11.176Z","type":"quit"}
{"nick":"kellabyte","message":"what kinds of things cause heap corruption?","date":"2013-05-01T05:16:14.815Z","type":"message"}
{"nick":"kellabyte","message":"is this indicating I'm doing a free where I shouldn't be?","date":"2013-05-01T05:18:47.918Z","type":"message"}
{"nick":"DrPizza","message":"it will compile","date":"2013-05-01T05:23:17.335Z","type":"message"}
{"nick":"DrPizza","message":"if you include the right header","date":"2013-05-01T05:23:21.222Z","type":"message"}
{"nick":"DrPizza","message":"that's why you shouldn't cast the return value","date":"2013-05-01T05:23:25.042Z","type":"message"}
{"nick":"DrPizza","message":"because it masks the problem","date":"2013-05-01T05:23:40.463Z","type":"message"}
{"nick":"DrPizza","message":"(and can result in pointer truncation)","date":"2013-05-01T05:23:44.797Z","type":"message"}
{"nick":"kellabyte","message":"DrPizza: interesting, it does compile but intellisense still complains and puts a red line under it","date":"2013-05-01T05:26:10.298Z","type":"message"}
{"nick":"DrPizza","message":"intellisense only understands C++","date":"2013-05-01T05:26:19.549Z","type":"message"}
{"nick":"mikeal","date":"2013-05-01T05:27:24.658Z","type":"join"}
{"nick":"kellabyte","message":"DrPizza: ah! I didn't know that :)","date":"2013-05-01T05:28:23.898Z","type":"message"}
{"nick":"kellabyte","message":"ok another assertion is happening in libuv, so I'm doing something bad","date":"2013-05-01T05:30:08.132Z","type":"message"}
{"nick":"kellabyte","message":"its 1:30am so back at it tomorrow, thanks for the help :) night!","date":"2013-05-01T05:30:23.746Z","type":"message"}
{"nick":"dominictarr","reason":"Ping timeout: 252 seconds","date":"2013-05-01T05:33:16.390Z","type":"quit"}
{"nick":"bajtos","date":"2013-05-01T05:34:09.681Z","type":"join"}
{"nick":"octetcloud","date":"2013-05-01T05:39:22.093Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-01T05:54:51.643Z","type":"quit"}
{"nick":"mikeal","date":"2013-05-01T05:58:46.587Z","type":"join"}
{"nick":"dominictarr","date":"2013-05-01T06:05:25.716Z","type":"join"}
{"nick":"timoxley","date":"2013-05-01T06:07:08.079Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 256 seconds","date":"2013-05-01T06:08:41.860Z","type":"quit"}
{"nick":"pquerna","reason":"Remote host closed the connection","date":"2013-05-01T06:12:29.813Z","type":"quit"}
{"nick":"rphillips","reason":"Quit: ZNC - http://znc.in","date":"2013-05-01T06:12:30.890Z","type":"quit"}
{"nick":"rphillips","date":"2013-05-01T06:17:18.804Z","type":"join"}
{"nick":"rphillips","reason":"Client Quit","date":"2013-05-01T06:20:03.972Z","type":"quit"}
{"nick":"rphillips","date":"2013-05-01T06:29:53.651Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-05-01T06:31:48.584Z","type":"quit"}
{"nick":"rendar","date":"2013-05-01T06:34:51.365Z","type":"join"}
{"nick":"stagas","date":"2013-05-01T06:36:31.465Z","type":"join"}
{"nick":"dpemmons","reason":"Ping timeout: 272 seconds","date":"2013-05-01T06:42:36.760Z","type":"quit"}
{"nick":"kazupon","date":"2013-05-01T06:42:54.143Z","type":"join"}
{"nick":"dpemmons","date":"2013-05-01T06:43:20.255Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-01T06:43:52.448Z","type":"quit"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-05-01T06:46:04.048Z","type":"quit"}
{"nick":"stolsma","date":"2013-05-01T06:57:35.667Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-05-01T07:07:30.724Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-05-01T07:44:49.479Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-05-01T07:58:29.749Z","type":"quit"}
{"nick":"benoitc","date":"2013-05-01T08:08:48.822Z","type":"join"}
{"nick":"bajtos","reason":"Read error: Operation timed out","date":"2013-05-01T08:09:33.660Z","type":"quit"}
{"nick":"bajtos","date":"2013-05-01T08:09:47.032Z","type":"join"}
{"nick":"bajtos","reason":"Quit: Nettalk6 - www.ntalk.de","date":"2013-05-01T08:22:12.492Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: ping","date":"2013-05-01T08:25:54.251Z","type":"message"}
{"nick":"dominictarr","date":"2013-05-01T08:26:32.934Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-01T08:54:59.330Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 256 seconds","date":"2013-05-01T08:55:50.388Z","type":"quit"}
{"nick":"stagas","date":"2013-05-01T08:56:13.747Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 252 seconds","date":"2013-05-01T09:06:39.016Z","type":"quit"}
{"nick":"stagas","date":"2013-05-01T09:07:13.293Z","type":"join"}
{"nick":"dominictarr","date":"2013-05-01T09:24:06.777Z","type":"join"}
{"nick":"hz","date":"2013-05-01T09:36:22.445Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-05-01T10:05:25.013Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-01T10:05:32.156Z","type":"quit"}
{"nick":"piscisaureus_","message":"good afternoon","date":"2013-05-01T10:18:09.061Z","type":"message"}
{"nick":"stagas_","date":"2013-05-01T10:22:55.736Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: sup bertje?","date":"2013-05-01T10:36:07.015Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: nothing. Just thought I'd say hi :)","date":"2013-05-01T10:36:21.163Z","type":"message"}
{"nick":"dominictarr","date":"2013-05-01T10:50:10.991Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-05-01T11:03:48.429Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 246 seconds","date":"2013-05-01T11:08:16.838Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-05-01T11:22:16.848Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-05-01T11:27:44.784Z","type":"join"}
{"nick":"rje","reason":"Ping timeout: 264 seconds","date":"2013-05-01T11:32:30.092Z","type":"quit"}
{"nick":"rje","date":"2013-05-01T11:33:14.000Z","type":"join"}
{"nick":"stagas_","reason":"Ping timeout: 245 seconds","date":"2013-05-01T11:41:42.244Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-05-01T12:09:43.517Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 255 seconds","date":"2013-05-01T12:14:17.433Z","type":"quit"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-05-01T12:15:11.352Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-05-01T12:19:16.646Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: pong","date":"2013-05-01T12:44:39.249Z","type":"message"}
{"nick":"AvianFlu","date":"2013-05-01T12:49:55.951Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 248 seconds","date":"2013-05-01T12:56:05.743Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-05-01T13:19:41.614Z","type":"join"}
{"nick":"mmalecki[zzz]","new_nick":"mmalecki","date":"2013-05-01T13:24:15.948Z","type":"nick"}
{"nick":"kevinswiber","date":"2013-05-01T13:25:15.562Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-05-01T13:34:54.071Z","type":"join"}
{"nick":"bnoordhuis","message":"indutny: sup?","date":"2013-05-01T13:38:38.711Z","type":"message"}
{"nick":"indutny","message":"idk","date":"2013-05-01T13:39:03.870Z","type":"message"}
{"nick":"indutny","message":"everything is ok","date":"2013-05-01T13:39:10.391Z","type":"message"}
{"nick":"indutny","message":"you pang me","date":"2013-05-01T13:39:12.515Z","type":"message"}
{"nick":"indutny","message":"like 5 hours ago","date":"2013-05-01T13:39:22.232Z","type":"message"}
{"nick":"bnoordhuis","message":"indeed, i pung you","date":"2013-05-01T13:39:28.793Z","type":"message"}
{"nick":"bnoordhuis","message":"it's about the openssl thing","date":"2013-05-01T13:39:40.714Z","type":"message"}
{"nick":"indutny","message":"please continue :)","date":"2013-05-01T13:39:52.145Z","type":"message"}
{"nick":"bnoordhuis","message":"i cc'ed you on a gist i created","date":"2013-05-01T13:39:55.025Z","type":"message"}
{"nick":"bnoordhuis","message":"tl;dr it's not node, it's openssl","date":"2013-05-01T13:40:08.893Z","type":"message"}
{"nick":"bnoordhuis","message":"when i disable sni, i can talk to user-service.condenast.com, else it hangs","date":"2013-05-01T13:40:34.932Z","type":"message"}
{"nick":"bnoordhuis","message":"but with openssl 1.0.0f it Just Works(TM)","date":"2013-05-01T13:40:44.119Z","type":"message"}
{"nick":"indutny","message":"yes!","date":"2013-05-01T13:40:44.375Z","type":"message"}
{"nick":"indutny","message":"I knew it","date":"2013-05-01T13:40:45.821Z","type":"message"}
{"nick":"indutny","message":"ok, I can figure it out","date":"2013-05-01T13:40:49.838Z","type":"message"}
{"nick":"indutny","message":"where is the gist?","date":"2013-05-01T13:40:52.984Z","type":"message"}
{"nick":"indutny","message":"I haven't received anything","date":"2013-05-01T13:40:57.782Z","type":"message"}
{"nick":"bnoordhuis","message":"https://gist.github.com/bnoordhuis/deb34f193e349615a0c1","date":"2013-05-01T13:41:05.772Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-05-01T13:41:22.767Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-05-01T13:42:07.789Z","type":"nick"}
{"nick":"c4milo","date":"2013-05-01T13:45:03.485Z","type":"join"}
{"nick":"mbroadst","message":"hey I was poking around here last night trying to find out if anyone knew why core node modules weren't implemented as v8::Extensions, any takers?","date":"2013-05-01T13:50:48.858Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-05-01T13:51:27.541Z","type":"quit"}
{"nick":"bnoordhuis","message":"mbroadst: why should they be?","date":"2013-05-01T13:51:34.170Z","type":"message"}
{"nick":"indutny","message":"wait","date":"2013-05-01T13:52:08.712Z","type":"message"}
{"nick":"indutny","message":"there's some shit happening there","date":"2013-05-01T13:52:12.535Z","type":"message"}
{"nick":"indutny","message":"I'll gist it in a couple of minutes","date":"2013-05-01T13:52:18.590Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-05-01T13:52:48.746Z","type":"message"}
{"nick":"indutny","message":"no","date":"2013-05-01T13:52:49.159Z","type":"message"}
{"nick":"indutny","message":"its ok","date":"2013-05-01T13:52:49.983Z","type":"message"}
{"nick":"mbroadst","message":"bnoordhuis: as far as my reading it seemed to be the \"right way\" to natively extend the context, I'm trying to figure out if I'm completely wrong about that","date":"2013-05-01T13:53:04.692Z","type":"message"}
{"nick":"bnoordhuis","message":"\"some shit\" - i like your precise choice of words, fedor :)","date":"2013-05-01T13:53:05.606Z","type":"message"}
{"nick":"bnoordhuis","message":"mbroadst: what is your definition of a module? maybe we're talking about two different things","date":"2013-05-01T13:54:01.760Z","type":"message"}
{"nick":"mbroadst","message":"bnoordhuis: like \"os\" for instance","date":"2013-05-01T13:55:42.799Z","type":"message"}
{"nick":"bnoordhuis","message":"mbroadst: that module is part js, part native code","date":"2013-05-01T13:56:27.804Z","type":"message"}
{"nick":"bnoordhuis","message":"as are most things in node","date":"2013-05-01T13:56:33.577Z","type":"message"}
{"nick":"mbroadst","message":"bnoordhuis: right, and the v8::Extension ctor requires a name variable, as well as js code to integrate the native code","date":"2013-05-01T13:57:19.937Z","type":"message"}
{"nick":"mbroadst","message":"I guess I'm just trying to figure out if a) this didn't exist when node was first written, or b) there is some huge oversight I'm making in terms of something like performance going with this approach","date":"2013-05-01T13:58:14.925Z","type":"message"}
{"nick":"bnoordhuis","message":"mbroadst: i don't think it did","date":"2013-05-01T13:59:42.167Z","type":"message"}
{"nick":"bnoordhuis","message":"also, the extensions system is arguably not as flexible as the current module+bindings approach","date":"2013-05-01T14:00:13.023Z","type":"message"}
{"nick":"mbroadst","message":"ah, how so?","date":"2013-05-01T14:00:52.872Z","type":"message"}
{"nick":"kevinswiber","date":"2013-05-01T14:01:45.589Z","type":"join"}
{"nick":"indutny","message":"https://gist.github.com/indutny/51bcf9a7f7b1851052a1","date":"2013-05-01T14:02:49.372Z","type":"message"}
{"nick":"indutny","message":"spot the difference","date":"2013-05-01T14:02:57.628Z","type":"message"}
{"nick":"indutny","message":"hint: only ciphersuite","date":"2013-05-01T14:03:05.753Z","type":"message"}
{"nick":"wavded","date":"2013-05-01T14:03:12.750Z","type":"join"}
{"nick":"indutny","message":"and elliptic curves","date":"2013-05-01T14:03:21.029Z","type":"message"}
{"nick":"indutny","message":"but meh","date":"2013-05-01T14:03:22.202Z","type":"message"}
{"nick":"indutny","message":"I don't think it matters","date":"2013-05-01T14:03:25.970Z","type":"message"}
{"nick":"indutny","message":"err","date":"2013-05-01T14:04:39.888Z","type":"message"}
{"nick":"indutny","message":"except that I missed namings","date":"2013-05-01T14:04:44.424Z","type":"message"}
{"nick":"indutny","message":"first one is working","date":"2013-05-01T14:04:47.182Z","type":"message"}
{"nick":"indutny","message":"and last isn't","date":"2013-05-01T14:04:49.590Z","type":"message"}
{"nick":"wavded","message":"would you guys expect a exceeding of file descriptors for a node process to lock the process at 100% (linux/ubuntu server), this happened yesterday for us and after we found out the issue it made me wonder if any safeguards should be put in place (running node 0.10.5)","date":"2013-05-01T14:05:01.419Z","type":"message"}
{"nick":"wavded","message":"100% CPU that is","date":"2013-05-01T14:05:11.097Z","type":"message"}
{"nick":"bnoordhuis","message":"mbroadst: i'm not 100% sure about this but one limitation iirc is that you can only export functions, not variables","date":"2013-05-01T14:05:57.083Z","type":"message"}
{"nick":"bnoordhuis","message":"well, unless you start getting creative with snprintf()","date":"2013-05-01T14:06:34.912Z","type":"message"}
{"nick":"bnoordhuis","message":"maybe i should reword that as 'i never found a good way to do that' :)","date":"2013-05-01T14:07:05.252Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: hrm, maybe it's choking on 1.[12] ciphers. that sounds plausible (and easy to test)","date":"2013-05-01T14:08:26.606Z","type":"message"}
{"nick":"indutny","message":"yep","date":"2013-05-01T14:08:27.836Z","type":"message"}
{"nick":"indutny","message":"that's ciphers","date":"2013-05-01T14:08:29.327Z","type":"message"}
{"nick":"indutny","message":"I've verified","date":"2013-05-01T14:08:34.942Z","type":"message"}
{"nick":"indutny","message":"now lets figure out what particular ciphers is responsible for it","date":"2013-05-01T14:08:47.181Z","type":"message"}
{"nick":"indutny","message":"s/is/are/","date":"2013-05-01T14:08:57.425Z","type":"message"}
{"nick":"indutny","message":"is there any option to disable latest ciphers?","date":"2013-05-01T14:09:22.715Z","type":"message"}
{"nick":"indutny","message":"just curious","date":"2013-05-01T14:09:27.416Z","type":"message"}
{"nick":"indutny","message":"like NO_TLS12?","date":"2013-05-01T14:09:33.170Z","type":"message"}
{"nick":"indutny","message":"or something like that","date":"2013-05-01T14:09:38.558Z","type":"message"}
{"nick":"bnoordhuis","message":"wavded: SSL_OP_NO_TLSv1_2","date":"2013-05-01T14:09:46.858Z","type":"message"}
{"nick":"bnoordhuis","message":"and 1_1","date":"2013-05-01T14:09:50.230Z","type":"message"}
{"nick":"indutny","message":"ok, and it works?","date":"2013-05-01T14:09:55.847Z","type":"message"}
{"nick":"bnoordhuis","message":"but that didn't work for me","date":"2013-05-01T14:09:57.270Z","type":"message"}
{"nick":"bnoordhuis","message":"so no :)","date":"2013-05-01T14:09:59.925Z","type":"message"}
{"nick":"bnoordhuis","message":"SSL_OP_NO_TLSv1 works","date":"2013-05-01T14:10:07.343Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-05-01T14:10:12.691Z","type":"message"}
{"nick":"bnoordhuis","message":"but that's a bit drastic","date":"2013-05-01T14:10:12.836Z","type":"message"}
{"nick":"indutny","message":"yep","date":"2013-05-01T14:10:14.830Z","type":"message"}
{"nick":"indutny","message":"so","date":"2013-05-01T14:10:15.536Z","type":"message"}
{"nick":"indutny","message":"https://gist.github.com/indutny/60a794ff91e293bf1119","date":"2013-05-01T14:10:16.246Z","type":"message"}
{"nick":"indutny","message":"here is proof","date":"2013-05-01T14:10:17.915Z","type":"message"}
{"nick":"indutny","message":"handshake1 is patched handshake2 with old ciphers","date":"2013-05-01T14:10:26.626Z","type":"message"}
{"nick":"indutny","message":"try switching them and running","date":"2013-05-01T14:10:30.877Z","type":"message"}
{"nick":"wavded","message":"bnoordhuis: you'll have to explain more or point me somewhere, i'm not sure what you are asking (ref: SSL_OP_NO_TLS)","date":"2013-05-01T14:11:35.542Z","type":"message"}
{"nick":"bnoordhuis","message":"wavded: oh sorry, that was for indutny","date":"2013-05-01T14:12:06.207Z","type":"message"}
{"nick":"wavded","message":"bnoordhuis: oh haha","date":"2013-05-01T14:12:18.289Z","type":"message"}
{"nick":"bnoordhuis","message":"wavded: re your question, there are some failsafes in place but they're not perfect","date":"2013-05-01T14:12:39.658Z","type":"message"}
{"nick":"piscisaureus_","message":"what is our current policy towards throwing from the binding layer?","date":"2013-05-01T14:13:01.457Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: verboten","date":"2013-05-01T14:13:08.201Z","type":"message"}
{"nick":"bnoordhuis","message":"in new code, at least","date":"2013-05-01T14:13:15.556Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I'm looking at:","date":"2013-05-01T14:13:34.727Z","type":"message"}
{"nick":"piscisaureus_","message":"  return ThrowException(Exception::RangeError(String::New(\"options->gid is out of range\")));","date":"2013-05-01T14:13:34.875Z","type":"message"}
{"nick":"piscisaureus_","message":"which I have to move around/duplicate for spawnSync","date":"2013-05-01T14:13:43.791Z","type":"message"}
{"nick":"bnoordhuis","message":"it's not a strict policy but throwing from js is preferred","date":"2013-05-01T14:14:17.158Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: you would suggest to setting errno to EINVAL in the binding layer?","date":"2013-05-01T14:14:18.655Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2013-05-01T14:14:24.497Z","type":"message"}
{"nick":"bnoordhuis","message":"or return an exception object","date":"2013-05-01T14:14:29.354Z","type":"message"}
{"nick":"bnoordhuis","message":"but errno is better","date":"2013-05-01T14:14:50.713Z","type":"message"}
{"nick":"piscisaureus_","message":"I wish there was a good way for this","date":"2013-05-01T14:15:43.667Z","type":"message"}
{"nick":"piscisaureus_","message":"one that is consistent and convenient","date":"2013-05-01T14:15:55.456Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: ciphers: 'RC4:HIGH:!MD5:!aNULL:!EDH' <- fixes it :/","date":"2013-05-01T14:16:27.290Z","type":"message"}
{"nick":"indutny","message":"so","date":"2013-05-01T14:16:36.510Z","type":"message"}
{"nick":"indutny","message":"no elliptic stuff?","date":"2013-05-01T14:16:39.543Z","type":"message"}
{"nick":"bnoordhuis","message":"nope, just plain tls 1.0 ciphers","date":"2013-05-01T14:16:49.318Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-05-01T14:16:51.869Z","type":"message"}
{"nick":"indutny","message":"great","date":"2013-05-01T14:16:57.791Z","type":"message"}
{"nick":"indutny","message":"I told you","date":"2013-05-01T14:16:59.814Z","type":"message"}
{"nick":"indutny","message":"may be we can just recommend it to users?","date":"2013-05-01T14:17:08.037Z","type":"message"}
{"nick":"kazupon","date":"2013-05-01T14:17:12.444Z","type":"join"}
{"nick":"indutny","message":"because their cases are really specific","date":"2013-05-01T14:17:14.818Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah...","date":"2013-05-01T14:17:22.947Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess the bottom line is that we're dealing with a buggy tls server here","date":"2013-05-01T14:17:38.872Z","type":"message"}
{"nick":"bnoordhuis","message":"conde nast owes us >:-(","date":"2013-05-01T14:17:54.003Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Textual IRC Client: http://www.textualapp.com/","date":"2013-05-01T14:20:09.219Z","type":"quit"}
{"nick":"bnoordhuis","message":"okay, i'm reverting the downgrade","date":"2013-05-01T14:20:37.367Z","type":"message"}
{"nick":"indutny","message":"great","date":"2013-05-01T14:20:55.455Z","type":"message"}
{"nick":"indutny","message":"I've stubbed some test code","date":"2013-05-01T14:20:59.822Z","type":"message"}
{"nick":"indutny","message":"will try to figure out which particular cipher is causing it","date":"2013-05-01T14:21:05.704Z","type":"message"}
{"nick":"bnoordhuis","message":"nice","date":"2013-05-01T14:21:10.163Z","type":"message"}
{"nick":"stagas","reason":"Quit: ChatZilla 0.9.90-rdmsoft [XULRunner 1.9.0.17/2009122204]","date":"2013-05-01T14:26:17.378Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-01T14:30:09.333Z","type":"quit"}
{"nick":"loladiro","date":"2013-05-01T14:30:18.110Z","type":"join"}
{"nick":"indutny","message":"0044","date":"2013-05-01T14:30:23.287Z","type":"message"}
{"nick":"indutny","message":"its seems that it is it","date":"2013-05-01T14:30:28.240Z","type":"message"}
{"nick":"bnoordhuis","message":"is that hex or octal? :)","date":"2013-05-01T14:30:41.527Z","type":"message"}
{"nick":"indutny","message":"ah no","date":"2013-05-01T14:30:49.063Z","type":"message"}
{"nick":"indutny","message":"hex","date":"2013-05-01T14:30:51.462Z","type":"message"}
{"nick":"indutny","message":"0096","date":"2013-05-01T14:31:05.775Z","type":"message"}
{"nick":"indutny","message":"and 00041","date":"2013-05-01T14:31:07.594Z","type":"message"}
{"nick":"indutny","message":"err","date":"2013-05-01T14:31:09.102Z","type":"message"}
{"nick":"indutny","message":"0041","date":"2013-05-01T14:31:09.742Z","type":"message"}
{"nick":"indutny","message":"all hex","date":"2013-05-01T14:31:11.664Z","type":"message"}
{"nick":"indutny","message":"without them it seems to be working","date":"2013-05-01T14:31:16.391Z","type":"message"}
{"nick":"indutny","message":"so","date":"2013-05-01T14:31:47.130Z","type":"message"}
{"nick":"indutny","message":"TLS_RSA_WITH_CAMELLIA_128_CBC_SHA","date":"2013-05-01T14:31:47.557Z","type":"message"}
{"nick":"indutny","message":"TLS_RSA_WITH_SEED_CBC_SHA","date":"2013-05-01T14:31:53.034Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: ECDHE-RSA-AES128-SHA256:AES128-GCM-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH","date":"2013-05-01T14:31:57.945Z","type":"message"}
{"nick":"indutny","message":"and TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384","date":"2013-05-01T14:31:59.144Z","type":"message"}
{"nick":"bnoordhuis","message":"that's the default cipher list right now","date":"2013-05-01T14:32:03.975Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2013-05-01T14:32:26.430Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: any objections to exposing some form of uv_err_new ?","date":"2013-05-01T14:32:32.514Z","type":"message"}
{"nick":"indutny","message":"and?","date":"2013-05-01T14:32:34.387Z","type":"message"}
{"nick":"indutny","message":"what are you trying to say?","date":"2013-05-01T14:32:38.885Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: or rather, uv_new_artificial_error","date":"2013-05-01T14:32:49.483Z","type":"message"}
{"nick":"bnoordhuis","message":"hm, i thought we didn't compile in camellia?","date":"2013-05-01T14:32:50.807Z","type":"message"}
{"nick":"indutny","message":"interesting thing is that they doesn't play well with other cipher suites","date":"2013-05-01T14:33:16.377Z","type":"message"}
{"nick":"indutny","message":"I mean","date":"2013-05-01T14:33:17.242Z","type":"message"}
{"nick":"indutny","message":"if I'll take cipher list from working tls connection","date":"2013-05-01T14:33:24.770Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: oh, that it should be one of those ciphers that conde nast finds offensive","date":"2013-05-01T14:33:25.718Z","type":"message"}
{"nick":"piscisaureus_","message":"camellia isn't in there","date":"2013-05-01T14:33:28.290Z","type":"message"}
{"nick":"piscisaureus_","message":"atleast, I thought I removed it :)","date":"2013-05-01T14:33:38.456Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah","date":"2013-05-01T14:33:42.639Z","type":"message"}
{"nick":"indutny","message":"and add them one by one","date":"2013-05-01T14:33:44.544Z","type":"message"}
{"nick":"indutny","message":"it fails","date":"2013-05-01T14:33:45.391Z","type":"message"}
{"nick":"bnoordhuis","message":"neither is seed","date":"2013-05-01T14:33:45.646Z","type":"message"}
{"nick":"indutny","message":"but if I'll use","date":"2013-05-01T14:33:47.411Z","type":"message"}
{"nick":"indutny","message":"cs + cipher1","date":"2013-05-01T14:33:49.763Z","type":"message"}
{"nick":"indutny","message":"cs + cipher2","date":"2013-05-01T14:33:51.810Z","type":"message"}
{"nick":"indutny","message":"and etc","date":"2013-05-01T14:33:52.715Z","type":"message"}
{"nick":"indutny","message":"it'll work","date":"2013-05-01T14:33:54.461Z","type":"message"}
{"nick":"indutny","message":"so its a combination of ciphers","date":"2013-05-01T14:33:59.679Z","type":"message"}
{"nick":"bnoordhuis","message":"err","date":"2013-05-01T14:34:43.010Z","type":"message"}
{"nick":"bnoordhuis","message":"when i pass in 'ECDHE-RSA-AES128-SHA256:AES128-GCM-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH', it works","date":"2013-05-01T14:34:49.043Z","type":"message"}
{"nick":"bnoordhuis","message":"hrm","date":"2013-05-01T14:35:04.008Z","type":"message"}
{"nick":"indutny","message":"hehe","date":"2013-05-01T14:35:11.050Z","type":"message"}
{"nick":"bnoordhuis","message":"does that mean we're advertising ciphers we don't support","date":"2013-05-01T14:35:13.834Z","type":"message"}
{"nick":"indutny","message":"no","date":"2013-05-01T14:35:19.606Z","type":"message"}
{"nick":"indutny","message":"server isn't replying","date":"2013-05-01T14:35:24.629Z","type":"message"}
{"nick":"bnoordhuis","message":"and then have the remote end trip up when it tries to use them?","date":"2013-05-01T14:35:25.258Z","type":"message"}
{"nick":"indutny","message":"so server don't know them","date":"2013-05-01T14:35:36.784Z","type":"message"}
{"nick":"indutny","message":"and for some reason not ignoring them","date":"2013-05-01T14:35:41.746Z","type":"message"}
{"nick":"indutny","message":"probably, because its badly written","date":"2013-05-01T14:35:47.089Z","type":"message"}
{"nick":"indutny","message":"anyway","date":"2013-05-01T14:36:08.084Z","type":"message"}
{"nick":"indutny","message":"removing 004100430044","date":"2013-05-01T14:36:12.991Z","type":"message"}
{"nick":"indutny","message":"helps too","date":"2013-05-01T14:36:14.643Z","type":"message"}
{"nick":"indutny","message":"so","date":"2013-05-01T14:36:15.908Z","type":"message"}
{"nick":"bnoordhuis","message":"okay but i want to get this right. i'm blaming conde nast in the commit log :)","date":"2013-05-01T14:36:17.603Z","type":"message"}
{"nick":"indutny","message":"I'm not sure what to think","date":"2013-05-01T14:36:19.395Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-05-01T14:36:20.595Z","type":"quit"}
{"nick":"indutny","message":"oh","date":"2013-05-01T14:36:25.402Z","type":"message"}
{"nick":"indutny","message":"I have an idea","date":"2013-05-01T14:36:27.411Z","type":"message"}
{"nick":"indutny","message":"hahahaha","date":"2013-05-01T14:36:46.620Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2013-05-01T14:36:47.423Z","type":"message"}
{"nick":"indutny","message":"that's it","date":"2013-05-01T14:36:48.329Z","type":"message"}
{"nick":"indutny","message":"oh my god","date":"2013-05-01T14:36:51.614Z","type":"message"}
{"nick":"indutny","message":"it just doesn't work with long ciphersuite list","date":"2013-05-01T14:36:59.688Z","type":"message"}
{"nick":"indutny","message":"if I'll remove any 3 ciphers - it'll work","date":"2013-05-01T14:37:05.935Z","type":"message"}
{"nick":"piscisaureus_","message":"hahahaha","date":"2013-05-01T14:37:08.380Z","type":"message"}
{"nick":"kellabyte","message":"looking for some guidance, I'm getting: Assertion failed: ((handle))->activecnt >= 0, file src\\win\\tcp.c, line 1038 when I try to uv_write(), without uv_work_queue() it works, with it I get that, any hints on what I'm probably not handling correctly? :)","date":"2013-05-01T14:37:09.545Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, really?","date":"2013-05-01T14:37:14.319Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2013-05-01T14:37:16.705Z","type":"message"}
{"nick":"bnoordhuis","message":"what the hell?","date":"2013-05-01T14:37:18.331Z","type":"message"}
{"nick":"indutny","message":"wanna see the code?","date":"2013-05-01T14:37:21.958Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: lets hack it :)","date":"2013-05-01T14:37:26.830Z","type":"message"}
{"nick":"bnoordhuis","message":"yes please","date":"2013-05-01T14:37:29.539Z","type":"message"}
{"nick":"indutny","message":"I believe there is some stack overflow","date":"2013-05-01T14:37:31.896Z","type":"message"}
{"nick":"indutny","message":"https://gist.github.com/indutny/54f429ea658643e1cbc3","date":"2013-05-01T14:37:49.555Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: are you calling uv_write() from inside your work cb? don't do that","date":"2013-05-01T14:38:00.626Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: you can't call uv_write from a \"foreign\" thread, and uv_queue_work enqueues something to the thread pool","date":"2013-05-01T14:38:07.946Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: so in short, you can't mix those","date":"2013-05-01T14:38:15.190Z","type":"message"}
{"nick":"indutny","message":"wait","date":"2013-05-01T14:38:26.775Z","type":"message"}
{"nick":"indutny","message":"let me modify it","date":"2013-05-01T14:38:28.594Z","type":"message"}
{"nick":"indutny","message":"ok, here it comes https://gist.github.com/indutny/54f429ea658643e1cbc3","date":"2013-05-01T14:38:57.238Z","type":"message"}
{"nick":"kevinswiber","date":"2013-05-01T14:38:58.276Z","type":"join"}
{"nick":"indutny","message":"on line https://gist.github.com/indutny/54f429ea658643e1cbc3#file-test-js-L57","date":"2013-05-01T14:39:02.855Z","type":"message"}
{"nick":"indutny","message":"replace .length with .length - 3","date":"2013-05-01T14:39:07.678Z","type":"message"}
{"nick":"indutny","message":"and it'll work in all cases","date":"2013-05-01T14:39:11.560Z","type":"message"}
{"nick":"indutny","message":"note that cipher list is almost randomized","date":"2013-05-01T14:39:16.849Z","type":"message"}
{"nick":"indutny","message":"I mean","date":"2013-05-01T14:39:18.992Z","type":"message"}
{"nick":"indutny","message":"order is changed on every run","date":"2013-05-01T14:39:26.359Z","type":"message"}
{"nick":"indutny","message":"god","date":"2013-05-01T14:39:41.986Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, what did you use async for?","date":"2013-05-01T14:39:42.750Z","type":"message"}
{"nick":"indutny","message":"that's really fun","date":"2013-05-01T14:39:43.780Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I was using it","date":"2013-05-01T14:39:48.891Z","type":"message"}
{"nick":"indutny","message":"you can remove it","date":"2013-05-01T14:39:50.623Z","type":"message"}
{"nick":"indutny","message":"updated gist","date":"2013-05-01T14:40:07.705Z","type":"message"}
{"nick":"bnoordhuis","message":"cool","date":"2013-05-01T14:40:53.586Z","type":"message"}
{"nick":"pquerna","date":"2013-05-01T14:40:53.969Z","type":"join"}
{"nick":"pquerna","reason":"Changing host","date":"2013-05-01T14:40:54.439Z","type":"quit"}
{"nick":"pquerna","date":"2013-05-01T14:40:54.585Z","type":"join"}
{"nick":"indutny","message":"so it seems like they're allocating 64 bytes for ciphersuite+len","date":"2013-05-01T14:40:55.396Z","type":"message"}
{"nick":"indutny","message":"because noone will ever exceed it","date":"2013-05-01T14:41:06.498Z","type":"message"}
{"nick":"kellabyte","message":"piscisaureus_: ah, hrm. so how do I handle dispatching to handlers, getting a response, then writing the response back with uv_write()?","date":"2013-05-01T14:41:35.225Z","type":"message"}
{"nick":"indutny","message":"or idk","date":"2013-05-01T14:41:38.599Z","type":"message"}
{"nick":"indutny","message":"probably they allocate space for whole handshake","date":"2013-05-01T14:41:47.060Z","type":"message"}
{"nick":"bnoordhuis","message":"sounds plausible","date":"2013-05-01T14:41:47.600Z","type":"message"}
{"nick":"bnoordhuis","message":"and hilariously awful","date":"2013-05-01T14:41:51.465Z","type":"message"}
{"nick":"indutny","message":"because disabling extensions works too","date":"2013-05-01T14:41:55.792Z","type":"message"}
{"nick":"indutny","message":"right?","date":"2013-05-01T14:41:56.653Z","type":"message"}
{"nick":"kellabyte","message":"piscisaureus_: I'm dispatching via the thread pool","date":"2013-05-01T14:42:05.330Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah","date":"2013-05-01T14:42:06.487Z","type":"message"}
{"nick":"indutny","message":"ok, so...","date":"2013-05-01T14:42:12.017Z","type":"message"}
{"nick":"bnoordhuis","message":"it worked as soon as i disabled sni","date":"2013-05-01T14:42:12.802Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-05-01T14:42:16.418Z","type":"message"}
{"nick":"indutny","message":"so what can we do about it :)","date":"2013-05-01T14:42:34.259Z","type":"message"}
{"nick":"indutny","message":"disable server name","date":"2013-05-01T14:42:45.353Z","type":"message"}
{"nick":"bnoordhuis","message":"nothing. i believe tjfontaine knows one or two people at conde nast","date":"2013-05-01T14:42:50.828Z","type":"message"}
{"nick":"indutny","message":"disable sessions","date":"2013-05-01T14:42:51.993Z","type":"message"}
{"nick":"bnoordhuis","message":"let them fix their crap","date":"2013-05-01T14:42:55.974Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-05-01T14:42:59.024Z","type":"message"}
{"nick":"indutny","message":"great","date":"2013-05-01T14:43:01.189Z","type":"message"}
{"nick":"indutny","message":"meanwhile","date":"2013-05-01T14:43:02.968Z","type":"message"}
{"nick":"indutny","message":"lets hack them","date":"2013-05-01T14:43:05.371Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-05-01T14:43:06.105Z","type":"message"}
{"nick":"indutny","message":"considering that it isn't replying back to us","date":"2013-05-01T14:43:15.974Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, spoken as a true russian","date":"2013-05-01T14:43:19.610Z","type":"message"}
{"nick":"indutny","message":"some overflow is happening there","date":"2013-05-01T14:43:20.603Z","type":"message"}
{"nick":"indutny","message":"just kidding","date":"2013-05-01T14:43:41.575Z","type":"message"}
{"nick":"indutny","message":"I love my work and family","date":"2013-05-01T14:43:45.709Z","type":"message"}
{"nick":"indutny","message":"no need in illegal activities","date":"2013-05-01T14:43:56.193Z","type":"message"}
{"nick":"bnoordhuis","message":"unless they're hugely profitable","date":"2013-05-01T14:44:05.524Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, i'm pushing the undowngrade","date":"2013-05-01T14:44:20.140Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: can you please revert downgrade then?","date":"2013-05-01T14:44:21.093Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2013-05-01T14:44:23.511Z","type":"message"}
{"nick":"indutny","message":"great","date":"2013-05-01T14:44:24.159Z","type":"message"}
{"nick":"indutny","action":"goes back to his erlang jit compiler","date":"2013-05-01T14:44:39.527Z","type":"action"}
{"nick":"piscisaureus_","message":"bnoordhuis: was it only conde nast that was seeing these problems?","date":"2013-05-01T14:44:41.554Z","type":"message"}
{"nick":"indutny","message":"what's conde nast?","date":"2013-05-01T14:44:58.619Z","type":"message"}
{"nick":"indutny","message":"http://www.condenast.com/ ?","date":"2013-05-01T14:45:12.330Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: well, eh, hard question... You probably want to pass the handler \"response\" back to the main thread and send from there","date":"2013-05-01T14:45:59.731Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: I guess if you want to build a proper multithreaded http server you'll need to use multiple threads with their own event loop","date":"2013-05-01T14:46:36.380Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: yep","date":"2013-05-01T14:47:17.593Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u00022cf7e5d\u0002 : Revert \"deps: downgrade openssl to v1.0.0f\" - http://git.io/KAUS1A","date":"2013-05-01T14:47:24.428Z","type":"message"}
{"nick":"indutny","message":"is it like your clients?","date":"2013-05-01T14:47:32.196Z","type":"message"}
{"nick":"bnoordhuis","message":"no","date":"2013-05-01T14:47:38.294Z","type":"message"}
{"nick":"indutny","action":"just don't get why do we care that much","date":"2013-05-01T14:47:39.063Z","type":"action"}
{"nick":"bnoordhuis","message":"you already asked that yesterday :)","date":"2013-05-01T14:47:43.887Z","type":"message"}
{"nick":"bnoordhuis","message":"they were just a particular good example of the connection issues people were reporting","date":"2013-05-01T14:48:05.804Z","type":"message"}
{"nick":"piscisaureus_","message":"good work btw indutny","date":"2013-05-01T14:48:10.066Z","type":"message"}
{"nick":"bnoordhuis","message":"yep, well done","date":"2013-05-01T14:48:19.732Z","type":"message"}
{"nick":"indutny","message":"thanks","date":"2013-05-01T14:48:22.370Z","type":"message"}
{"nick":"piscisaureus_","message":"actually which issue is this?","date":"2013-05-01T14:48:39.355Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, only the openssl upgrade/downgrade issue everyone was worked up about","date":"2013-05-01T14:49:05.594Z","type":"message"}
{"nick":"wavded","message":"bnoordhuis: it would be nice if we had a process.lsof or something to report how many file descriptors are in use, i see there is lsof module but it basically does a cp.exec","date":"2013-05-01T14:49:13.395Z","type":"message"}
{"nick":"indutny","message":"wavded: why should we do it?","date":"2013-05-01T14:49:29.969Z","type":"message"}
{"nick":"indutny","message":"there is lsof","date":"2013-05-01T14:49:33.066Z","type":"message"}
{"nick":"indutny","message":"and a lof other utilities","date":"2013-05-01T14:49:36.636Z","type":"message"}
{"nick":"bnoordhuis","message":"wavded: what's stopping you from writing a module?","date":"2013-05-01T14:49:40.696Z","type":"message"}
{"nick":"kellabyte","message":"piscisaureus_: that was my original idea, but whats different between writing a response on another uv_loop and trying to write a response on the thread pool thread? both are different threads than the thread that the original uv_loop that received the on_connect happened?","date":"2013-05-01T14:49:46.312Z","type":"message"}
{"nick":"wavded","message":"bnoordhuis: well we have memory usage, you'd recommend cp.exec every time you wanted to see how many are using (if reporting metrics)?","date":"2013-05-01T14:50:17.005Z","type":"message"}
{"nick":"bnoordhuis","message":"wavded: sorry, what i mean is: why should it be in core?","date":"2013-05-01T14:50:39.825Z","type":"message"}
{"nick":"wavded","message":"bnoordhuis: a module has been written - node-lsof","date":"2013-05-01T14:50:45.660Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: libuv doesn't do any internal locking. So if you uv_write from another thread libuv's internal bookkeeping gets messed up by concurrent updates.","date":"2013-05-01T14:50:53.191Z","type":"message"}
{"nick":"bnoordhuis","message":"wavded: our policy is to push everything into modules unless core is the only place where you reasonably implement it","date":"2013-05-01T14:51:34.001Z","type":"message"}
{"nick":"kellabyte","message":"piscisaureus_: so how do I accept connections on the main uv_loop but pass it to other uv_loops?","date":"2013-05-01T14:51:35.892Z","type":"message"}
{"nick":"kellabyte","message":"piscisaureus_: I don't want to open like 4 different ports","date":"2013-05-01T14:51:50.032Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: ehm, that's hard :)","date":"2013-05-01T14:51:52.584Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: you create an ipc pipe between the loops","date":"2013-05-01T14:52:01.597Z","type":"message"}
{"nick":"wavded","message":"bnoordhuis: right, i know we want to keep core small, i was just thinking about how we provide node.memoryUsage() in core, since node is so I/O intensive, having an easy tap on your open FD would be nice","date":"2013-05-01T14:52:02.091Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: and you can uv_write2 socket objects over it","date":"2013-05-01T14:52:12.650Z","type":"message"}
{"nick":"wavded","message":"cp. exec to do that seems expensive, but that is just me","date":"2013-05-01T14:52:24.566Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: note however that this model currently doesn't do very well in performance terms on windows ...","date":"2013-05-01T14:52:31.316Z","type":"message"}
{"nick":"bnoordhuis","message":"wavded: memoryUsage() is an artifact from our younger, wilder days when we didn't know any better","date":"2013-05-01T14:52:58.013Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: something that is bound to change because node is moving to this strategy too (although it'll transfer sockets between processes and not loops)","date":"2013-05-01T14:52:58.840Z","type":"message"}
{"nick":"kellabyte","message":"piscisaureus_: ok.. let me propose an in between way, and see what you think","date":"2013-05-01T14:53:12.506Z","type":"message"}
{"nick":"piscisaureus_","message":"(which is also the reason you have to deal with such a complicated api for transferring sockets)","date":"2013-05-01T14:53:13.665Z","type":"message"}
{"nick":"bnoordhuis","message":"wavded: i'd happily kill it off if it weren't for backwards compatibility","date":"2013-05-01T14:53:16.630Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: good","date":"2013-05-01T14:53:21.358Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: that reminds me, maybe we should bring back uv_import() and uv_export()","date":"2013-05-01T14:53:50.509Z","type":"message"}
{"nick":"bnoordhuis","message":"sharing handles between loops is a royal pita right now","date":"2013-05-01T14:54:00.772Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yeah, you're right","date":"2013-05-01T14:54:11.137Z","type":"message"}
{"nick":"kellabyte","message":"piscisaureus_: I'm reading and writing at a fast pace, I'm more worried the consumers of the requests will do silly things in the handlers, so I can dispatch the req struct to them, get the response bytes, then write it using the main uv_loop","date":"2013-05-01T14:55:02.183Z","type":"message"}
{"nick":"kellabyte","message":"piscisaureus_: so I'm in the uv_worker_queue() thread, how do I then write on the main uv_loop thread?","date":"2013-05-01T14:55:24.321Z","type":"message"}
{"nick":"wavded","message":"bnoordhuis: so would you recommend cp. exec or doing some binding to pull for that?","date":"2013-05-01T14:55:56.777Z","type":"message"}
{"nick":"bnoordhuis","message":"wavded: a binding","date":"2013-05-01T14:56:04.886Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: or maybe we could have some sort of 'uv_async' like functionality which implements a proper queue and allows passing of handles and pointers","date":"2013-05-01T14:56:06.199Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: somehow store the data you want to write inside the uv_work_t struct or on the heap","date":"2013-05-01T14:56:49.860Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: then do the write in the after_cb ?","date":"2013-05-01T14:56:59.648Z","type":"message"}
{"nick":"kellabyte","message":"piscisaureus_: ah, the after_cb is on the uv_loop thread?","date":"2013-05-01T14:57:19.880Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: yep","date":"2013-05-01T14:57:26.380Z","type":"message"}
{"nick":"kellabyte","message":"ah!","date":"2013-05-01T14:57:27.283Z","type":"message"}
{"nick":"kellabyte","message":"piscisaureus_: ok I'll try that, thank you :) I think I'd still love fully threaded but maybe that gets easier later on, I think this may be good enough for now","date":"2013-05-01T14:58:20.770Z","type":"message"}
{"nick":"piscisaureus_","message":"kellabyte: yeah, we also need to make that a bit easier","date":"2013-05-01T14:58:43.165Z","type":"message"}
{"nick":"kellabyte","message":"piscisaureus_: that would rock :)","date":"2013-05-01T14:58:51.363Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: so, thoughts on exposing uv_new_artificial_error ?","date":"2013-05-01T14:59:05.108Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: uv_err_init would be better imo btw","date":"2013-05-01T14:59:19.659Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: why?","date":"2013-05-01T14:59:48.384Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-05-01T14:59:57.610Z","type":"quit"}
{"nick":"piscisaureus_","message":"bnoordhuis: well I need to return uv_err_t objects from a function in the node binding layer","date":"2013-05-01T15:00:06.040Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: why's that?","date":"2013-05-01T15:01:54.374Z","type":"message"}
{"nick":"bnoordhuis","message":"off to pick up mees, biab","date":"2013-05-01T15:03:46.746Z","type":"message"}
{"nick":"kessler","date":"2013-05-01T15:04:47.671Z","type":"join"}
{"nick":"mcavage","date":"2013-05-01T15:05:30.658Z","type":"join"}
{"nick":"mcavage","reason":"Remote host closed the connection","date":"2013-05-01T15:05:36.241Z","type":"quit"}
{"nick":"mcavage","date":"2013-05-01T15:05:44.575Z","type":"join"}
{"nick":"rendar","message":"what is the purpose of uv_write2? is that an undocumented function?","date":"2013-05-01T15:06:23.843Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-05-01T15:07:57.113Z","type":"quit"}
{"nick":"kessler","message":"hi guys, wanted to ask if the problem with node cluster on linux where one process is favoured over others happens in windows as well ","date":"2013-05-01T15:08:58.304Z","type":"message"}
{"nick":"rendar","message":"kellabyte: btw, why you want to accept connections in an uv_loop and manage read/writes in another uv_loop?","date":"2013-05-01T15:10:09.955Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-05-01T15:15:31.631Z","type":"quit"}
{"nick":"kellabyte","message":"rendar: I don't want to open multiple HTTP ports, but I need to dispatch to request handlers, but with the new approach I'm going to dispatch but but still write on the uv_loop for now","date":"2013-05-01T15:15:41.919Z","type":"message"}
{"nick":"rphillips","reason":"Quit: ZNC - http://znc.in","date":"2013-05-01T15:15:57.150Z","type":"quit"}
{"nick":"pquerna","reason":"Read error: Connection reset by peer","date":"2013-05-01T15:15:57.435Z","type":"quit"}
{"nick":"rendar","message":"kellabyte: hmmm","date":"2013-05-01T15:19:29.270Z","type":"message"}
{"nick":"piscisaureus_","message":"#%%$ who decided that uv_process_options_t.file has to be const :(","date":"2013-05-01T15:19:43.942Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #168 \u00037UNSTABLE\u000f windows-ia32 (7/581) windows-x64 (8/581) smartos-x64 (2/581) http://jenkins.nodejs.org/job/nodejs-v0.10/168/","date":"2013-05-01T15:21:29.532Z","type":"message"}
{"nick":"kessler","reason":"Ping timeout: 245 seconds","date":"2013-05-01T15:21:43.051Z","type":"quit"}
{"nick":"rphillips","date":"2013-05-01T15:21:45.457Z","type":"join"}
{"nick":"pquerna","date":"2013-05-01T15:21:46.912Z","type":"join"}
{"nick":"pquerna","reason":"Changing host","date":"2013-05-01T15:21:47.365Z","type":"quit"}
{"nick":"pquerna","date":"2013-05-01T15:21:47.512Z","type":"join"}
{"nick":"rendar","message":"kellabyte: what about using one unique uv_loop which both accepts connections and dispatch to request handlers? what is the new approach?","date":"2013-05-01T15:23:11.156Z","type":"message"}
{"nick":"kellabyte","message":"rendar: it sounds like handing off handles from one uv_loop to another is not so simple right now","date":"2013-05-01T15:26:02.733Z","type":"message"}
{"nick":"rendar","message":"yeah, exactly","date":"2013-05-01T15:26:17.818Z","type":"message"}
{"nick":"rendar","message":"but i still can't understand what is the purpose of moving off handles from uv_loop to another instead of using 1 unique uv_loop :) i guess that 1 uv_loop can manage all the stuff..","date":"2013-05-01T15:27:16.910Z","type":"message"}
{"nick":"kellabyte","message":"well I can dispatch using the worker queue to handlers, populate the struct with the response, then in the callback write using the main uv_loop","date":"2013-05-01T15:28:22.432Z","type":"message"}
{"nick":"rendar","message":"hmm","date":"2013-05-01T15:28:32.857Z","type":"message"}
{"nick":"rendar","message":"ok, i got it!","date":"2013-05-01T15:29:56.144Z","type":"message"}
{"nick":"kellabyte","message":":)","date":"2013-05-01T15:30:46.932Z","type":"message"}
{"nick":"mikeal","date":"2013-05-01T15:41:07.236Z","type":"join"}
{"nick":"dap","date":"2013-05-01T15:41:33.521Z","type":"join"}
{"nick":"loladiro","date":"2013-05-01T15:45:01.578Z","type":"join"}
{"nick":"piscisaureus_","message":"indutny: isaacs: you are the http experts right? :)","date":"2013-05-01T15:46:56.748Z","type":"message"}
{"nick":"piscisaureus_","message":"res.writeHead(200, {'Content-Type': 'text/plain', 'Transfer-Encoding': 'chunked'});","date":"2013-05-01T15:47:36.401Z","type":"message"}
{"nick":"piscisaureus_","message":"      res.end('Hello World\\n');","date":"2013-05-01T15:47:36.553Z","type":"message"}
{"nick":"piscisaureus_","message":"^-- If I do that ab complains that responses have length errors","date":"2013-05-01T15:47:50.557Z","type":"message"}
{"nick":"piscisaureus_","message":"Without the transfer-encoding header the server doesn't do keepalive","date":"2013-05-01T15:48:11.629Z","type":"message"}
{"nick":"piscisaureus_","message":"What am I doing wrong?","date":"2013-05-01T15:48:22.006Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-01T15:50:15.743Z","type":"quit"}
{"nick":"piscisaureus_","message":"--- ahh nevermind scratch that ---","date":"2013-05-01T15:53:46.650Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: figured it out?","date":"2013-05-01T15:56:53.030Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: yeah, it was ab that expects all responses to be the same length","date":"2013-05-01T15:57:07.307Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: wtf?","date":"2013-05-01T15:57:28.958Z","type":"message"}
{"nick":"isaacs","message":"god, ab is such a shit show","date":"2013-05-01T15:57:36.148Z","type":"message"}
{"nick":"piscisaureus_","message":"I should probably migrate to wrk :-p","date":"2013-05-01T15:57:46.050Z","type":"message"}
{"nick":"isaacs","message":"yes","date":"2013-05-01T15:57:49.474Z","type":"message"}
{"nick":"isaacs","message":"you should","date":"2013-05-01T15:57:50.911Z","type":"message"}
{"nick":"isaacs","message":"does wrk work on windows at all?","date":"2013-05-01T15:57:57.271Z","type":"message"}
{"nick":"piscisaureus_","message":"no","date":"2013-05-01T15:58:10.342Z","type":"message"}
{"nick":"isaacs","message":"it'd be nice to run our benchmarks there","date":"2013-05-01T15:58:11.287Z","type":"message"}
{"nick":"isaacs","message":"yeah, that's expected","date":"2013-05-01T15:58:14.740Z","type":"message"}
{"nick":"isaacs","message":"we should migrate it to libuv :)","date":"2013-05-01T15:58:20.326Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-05-01T15:58:29.364Z","type":"quit"}
{"nick":"isaacs","message":"of course, if we use libuv+http_parser to benchmark node, then, well... that's kind of verging on invalid self-testing","date":"2013-05-01T15:58:40.517Z","type":"message"}
{"nick":"isaacs","message":"may as well just use Node to test Node at that point","date":"2013-05-01T15:58:47.467Z","type":"message"}
{"nick":"isaacs","message":"i guess it's fine if we accept that we're really only testing the V8/JS bits","date":"2013-05-01T15:59:18.461Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: yeah you're right although I think we could write a benchmarking tool with uv + http_parser that's much better than ab :)","date":"2013-05-01T15:59:26.808Z","type":"message"}
{"nick":"piscisaureus_","message":"s/then/than/","date":"2013-05-01T15:59:52.445Z","type":"message"}
{"nick":"isaacs","message":"ew could write a benchmarking tool with toothpicks and chewing gum that's much better than ab","date":"2013-05-01T16:00:06.560Z","type":"message"}
{"nick":"piscisaureus_","message":"I have to make the run home","date":"2013-05-01T16:01:32.836Z","type":"message"}
{"nick":"piscisaureus_","message":"bbiab","date":"2013-05-01T16:01:35.023Z","type":"message"}
{"nick":"tjfontaine","message":"indutny: so was it SNI or a cipher list to blame?","date":"2013-05-01T16:04:19.128Z","type":"message"}
{"nick":"wavded","reason":"Quit: Nighty night","date":"2013-05-01T16:04:41.437Z","type":"quit"}
{"nick":"timoxley","date":"2013-05-01T16:05:13.432Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 245 seconds","date":"2013-05-01T16:06:48.607Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-05-01T16:06:58.538Z","type":"nick"}
{"nick":"mikeal","date":"2013-05-01T16:08:38.986Z","type":"join"}
{"nick":"TooTallNate","date":"2013-05-01T16:09:09.986Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-05-01T16:10:34.605Z","type":"quit"}
{"nick":"octetcloud","date":"2013-05-01T16:10:49.525Z","type":"join"}
{"nick":"loladiro","date":"2013-05-01T16:12:18.506Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-05-01T16:13:43.756Z","type":"nick"}
{"nick":"bnoordhuis","date":"2013-05-01T16:14:13.619Z","type":"join"}
{"nick":"isaacs","message":"indutny, bnoordhuis: I see you reverted the openssl downgrade, but i dont' see a fix for the condenast thing... is that coming?  did you guys figure out what it was?","date":"2013-05-01T16:15:32.434Z","type":"message"}
{"nick":"tjfontaine","message":"from reading the backlog it appears to be broken-software/misconfiguration for them, not sure if it's soley SNI or a broken cipher list","date":"2013-05-01T16:16:15.722Z","type":"message"}
{"nick":"trevnorris","message":"morning","date":"2013-05-01T16:19:09.195Z","type":"message"}
{"nick":"tjfontaine","message":"morn","date":"2013-05-01T16:19:16.400Z","type":"message"}
{"nick":"stagas","date":"2013-05-01T16:20:15.622Z","type":"join"}
{"nick":"TooTallNate","message":"mo","date":"2013-05-01T16:20:36.237Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: what tjfontaine said","date":"2013-05-01T16:24:52.966Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: so both tweaking the cipher list and disabling sni solve it for them?","date":"2013-05-01T16:25:20.532Z","type":"message"}
{"nick":"st_luke","date":"2013-05-01T16:25:20.910Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-05-01T16:25:42.496Z","type":"quit"}
{"nick":"bnoordhuis","message":"tjfontaine: yeah. our current working hypothesis is that it uses a fixed-size buffer for processing tls handshakes","date":"2013-05-01T16:25:45.881Z","type":"message"}
{"nick":"bnoordhuis","message":"if the handshake frame is bigger, it hangs","date":"2013-05-01T16:26:03.174Z","type":"message"}
{"nick":"tjfontaine","message":"sounds reasonable, or they have a firewall rule on first packet being too large","date":"2013-05-01T16:26:06.625Z","type":"message"}
{"nick":"kazupon","date":"2013-05-01T16:26:12.610Z","type":"join"}
{"nick":"bnoordhuis","message":"yep, something like that","date":"2013-05-01T16:26:17.190Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: your scrum is all set?","date":"2013-05-01T16:26:47.519Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: yep","date":"2013-05-01T16:26:59.379Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: when I get response back from the conde nast folk I'll give them the updated information","date":"2013-05-01T16:27:19.131Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: thanks","date":"2013-05-01T16:27:21.982Z","type":"message"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-05-01T16:29:29.276Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-05-01T16:30:48.441Z","type":"quit"}
{"nick":"isaacs","message":"bnoordhuis, tjfontaine: So, any further action on our part?  do we need to sniff for tls 1.2 being disabled, and also disable sni or something?","date":"2013-05-01T16:30:49.276Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: there's nothing we can do on this issue, it's totally the other ends fault, openssl is behaving fine, and at least our tls throws a RESET","date":"2013-05-01T16:32:37.758Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-05-01T16:35:56.731Z","type":"quit"}
{"nick":"isaacs","message":"kie dokie","date":"2013-05-01T16:41:03.282Z","type":"message"}
{"nick":"isaacs","message":"sounds good","date":"2013-05-01T16:42:53.321Z","type":"message"}
{"nick":"tjfontaine","message":"we could try our best to limit our handhsake size","date":"2013-05-01T16:43:19.439Z","type":"message"}
{"nick":"isaacs","message":"so, sounds like i'm unblocked, i'll drop a 0.10 and then get to work on the crypto hash perf stuff.","date":"2013-05-01T16:43:32.048Z","type":"message"}
{"nick":"tjfontaine","message":"excellent","date":"2013-05-01T16:43:48.795Z","type":"message"}
{"nick":"isaacs","message":"the thing that sucks is that it'll still be gros if you're using buffers, but meh.  maybe trevnorris and piscisaureus can fix that in 0.12 or 1.0 :)","date":"2013-05-01T16:44:05.560Z","type":"message"}
{"nick":"isaacs","message":"actually... now that i look at it.. there's really not much here to release for.","date":"2013-05-01T16:44:42.730Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-05-01T16:45:20.145Z","type":"quit"}
{"nick":"isaacs","message":"just documentation and a single debugger fix.  i'd thought that the openssl change would require some more work for us to do.","date":"2013-05-01T16:45:21.927Z","type":"message"}
{"nick":"isaacs","message":"gonna kick 0.10.5 down the road a bit further, get right to crypto stuff","date":"2013-05-01T16:45:48.735Z","type":"message"}
{"nick":"tjfontaine","message":"yup, that would be a nice headline to have for the next release","date":"2013-05-01T16:46:10.580Z","type":"message"}
{"nick":"trevnorris","message":"buffer what?","date":"2013-05-01T16:46:34.105Z","type":"message"}
{"nick":"loladiro","date":"2013-05-01T16:48:12.006Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-05-01T16:48:24.757Z","type":"quit"}
{"nick":"tjfontaine","message":"trevnorris: buffer all the things","date":"2013-05-01T16:49:13.735Z","type":"message"}
{"nick":"kevinswiber","date":"2013-05-01T16:51:35.591Z","type":"join"}
{"nick":"amartens","date":"2013-05-01T16:51:42.908Z","type":"join"}
{"nick":"inolen","date":"2013-05-01T16:55:14.963Z","type":"join"}
{"nick":"inolen","reason":"Client Quit","date":"2013-05-01T16:56:54.592Z","type":"quit"}
{"nick":"mikeal","date":"2013-05-01T16:57:12.949Z","type":"join"}
{"nick":"trevnorris","action":"starts to buffer allz da thingz","date":"2013-05-01T17:00:36.820Z","type":"action"}
{"nick":"trevnorris","message":"just didn't follow what would still be gross to buffer.","date":"2013-05-01T17:01:06.120Z","type":"message"}
{"nick":"tjfontaine","message":"he's not saying it'll be gross to buffer, but the usage of the hash perf fixes will be slightly uglier if you want to use buffers","date":"2013-05-01T17:01:36.824Z","type":"message"}
{"nick":"TooTallNate","date":"2013-05-01T17:03:33.467Z","type":"join"}
{"nick":"trevnorris","message":"ah, ok. hm. if we were to know the user wanted a string back then it'd be easy to get around the buffer perf hit.","date":"2013-05-01T17:03:55.274Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-05-01T17:05:44.557Z","type":"join"}
{"nick":"trevnorris","message":"TooTallNate: so I've figured out a way around the if instanceof check in Buffer, but it involves using __proto__","date":"2013-05-01T17:08:39.887Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: what instanceof check?","date":"2013-05-01T17:10:50.050Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: top of function Buffer there's an \"if (!(this instanceof Buffer)) return new Buffer(...)\"","date":"2013-05-01T17:11:17.838Z","type":"message"}
{"nick":"trevnorris","message":"necessary if you always want to return a new Buffer, even if the user doesn't use the \"new\" keyword","date":"2013-05-01T17:11:38.681Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2013-05-01T17:11:50.183Z","type":"message"}
{"nick":"bnoordhuis","message":"is there a problem with that?","date":"2013-05-01T17:12:06.071Z","type":"message"}
{"nick":"trevnorris","message":"which, using __proto__ or the instanceof check?","date":"2013-05-01T17:12:23.705Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-05-01T17:12:35.526Z","type":"quit"}
{"nick":"bnoordhuis","message":"both","date":"2013-05-01T17:12:36.161Z","type":"message"}
{"nick":"trevnorris","message":"it was more academic conversation than anything.","date":"2013-05-01T17:12:56.531Z","type":"message"}
{"nick":"bnoordhuis","message":"ah okay","date":"2013-05-01T17:13:10.104Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-05-01T17:13:32.400Z","type":"quit"}
{"nick":"qard","date":"2013-05-01T17:13:33.004Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: oh sure you saw v8 released fix for the bug you mentioned. upgrade node, or no hurry?","date":"2013-05-01T17:14:42.113Z","type":"message"}
{"nick":"tjfontaine","message":"is there an existing type (that's not buffers) with an internal field count of >= 1 I can hijack?","date":"2013-05-01T17:15:43.824Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: well, if you inherit from ObjectWrap then it'll automatically create a new persistent from an object template and throw in the class instance.","date":"2013-05-01T17:16:39.818Z","type":"message"}
{"nick":"tjfontaine","message":"I explicitly do not want to inherit objectwrap :)","date":"2013-05-01T17:16:52.606Z","type":"message"}
{"nick":"trevnorris","message":"lol.","date":"2013-05-01T17:16:56.222Z","type":"message"}
{"nick":"trevnorris","message":"what are you trying to do?","date":"2013-05-01T17:17:00.412Z","type":"message"}
{"nick":"tjfontaine","message":"I wanted to do a quick mock up to test my persistent pool idea","date":"2013-05-01T17:17:18.032Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: probably just easiest to create a new persistent ObjectTemplate rather than try to use anything existing.","date":"2013-05-01T17:19:33.213Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-05-01T17:19:54.233Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: there's no real hurry. it's a bad bug but it's only in 3.18 (i.e. master)","date":"2013-05-01T17:32:00.941Z","type":"message"}
{"nick":"trevnorris","message":"coolio","date":"2013-05-01T17:32:16.516Z","type":"message"}
{"nick":"inolen1","date":"2013-05-01T17:34:18.467Z","type":"join"}
{"nick":"tjfontaine","message":"oh 0xbaddeaf how I despise you","date":"2013-05-01T17:34:38.239Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u0002794d8e0\u0002 : unix: fix EMFILE error handling - http://git.io/utWF4Q","date":"2013-05-01T17:37:42.293Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u0002b3ab332\u0002 : unix: fix EMFILE error handling - http://git.io/gOHDIQ","date":"2013-05-01T17:38:07.320Z","type":"message"}
{"nick":"bnoordhuis","message":"^ added bug #","date":"2013-05-01T17:38:13.268Z","type":"message"}
{"nick":"bnoordhuis","message":"it's kind of weird that child_process.spawn() throws exceptions rather than emit them as errors","date":"2013-05-01T17:39:33.525Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10\u0002: #48 \u00037UNSTABLE\u000f windows (5/187) osx (1/187) smartos (3/186) linux (1/186) http://jenkins.nodejs.org/job/libuv-v0.10/48/","date":"2013-05-01T17:41:59.277Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10-gyp\u0002: #11 \u00037UNSTABLE\u000f windows-x64 (4/187) linux-ia32 (1/186) smartos-ia32 (3/186) osx-x64 (1/187) smartos-x64 (3/186) linux-x64 (1/186) windows-ia32 (4/187) http://jenkins.nodejs.org/job/libuv-v0.10-gyp/11/","date":"2013-05-01T17:45:30.332Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: so not that I'd do it any time in the near future, but you be open to writing our own builtins and making them available though a ./configure flag?","date":"2013-05-01T17:46:31.006Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10\u0002: #49 \u00037UNSTABLE\u000f windows (6/187) osx (2/187) smartos (3/186) linux (1/186) http://jenkins.nodejs.org/job/libuv-v0.10/49/","date":"2013-05-01T17:47:07.349Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #38 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/libuv-node-integration/38/","date":"2013-05-01T17:49:44.305Z","type":"message"}
{"nick":"tjfontaine","message":"heh, failed by a force push","date":"2013-05-01T17:50:28.338Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-01T17:50:39.289Z","type":"quit"}
{"nick":"rvagg_","date":"2013-05-01T17:51:12.994Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-v0.10-gyp\u0002: #12 \u00037UNSTABLE\u000f windows-x64 (4/187) smartos-ia32 (3/186) osx-x64 (1/187) smartos-x64 (4/186) windows-ia32 (4/187) osx-ia32 (2/187) http://jenkins.nodejs.org/job/libuv-v0.10-gyp/12/","date":"2013-05-01T17:51:36.481Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-01T17:52:28.318Z","type":"quit"}
{"nick":"rvagg","reason":"*.net *.split","date":"2013-05-01T17:52:39.751Z","type":"quit"}
{"nick":"isaacs","reason":"*.net *.split","date":"2013-05-01T17:52:39.751Z","type":"quit"}
{"nick":"rvagg_","new_nick":"rvagg","date":"2013-05-01T17:52:39.900Z","type":"nick"}
{"nick":"st_luke","date":"2013-05-01T17:52:50.660Z","type":"join"}
{"nick":"isaacs","date":"2013-05-01T17:54:12.600Z","type":"join"}
{"nick":"isaacs","new_nick":"Guest67833","date":"2013-05-01T17:54:37.305Z","type":"nick"}
{"nick":"Guest67833","message":"bnoordhuis: you get that? looks like my irc hiccuped","date":"2013-05-01T17:54:45.067Z","type":"message"}
{"nick":"dominictarr","date":"2013-05-01T17:55:32.072Z","type":"join"}
{"nick":"Guest67833","new_nick":"isaacs","date":"2013-05-01T17:55:55.091Z","type":"nick"}
{"nick":"bnoordhuis","message":"isaacs: get what?","date":"2013-05-01T17:57:49.705Z","type":"message"}
{"nick":"isaacs","message":"guess not :)","date":"2013-05-01T17:58:22.824Z","type":"message"}
{"nick":"dominictarr","reason":"Client Quit","date":"2013-05-01T17:58:25.535Z","type":"quit"}
{"nick":"isaacs","message":"17:50 <@isaacs> bnoordhuis: re the C++ StringDecoder RIAA class idea..","date":"2013-05-01T17:58:42.751Z","type":"message"}
{"nick":"isaacs","message":"17:50 <@isaacs> bnoordhuis: I feel a bit funny about having the void* data arg be maybe-not-null and specify how much to write.","date":"2013-05-01T17:58:42.948Z","type":"message"}
{"nick":"isaacs","message":"17:50 <@isaacs> bnoordhuis: what happens if the amount i want to write to it is too big?  then what?  the string doesn't get written?","date":"2013-05-01T17:58:45.783Z","type":"message"}
{"nick":"isaacs","message":"17:52 <@isaacs> bnoordhuis: like, DecodeDataFromString(bigString, UTF8, smallBuffer, 2)","date":"2013-05-01T17:58:48.826Z","type":"message"}
{"nick":"isaacs","message":"17:52 <@isaacs> er, int len=2;DecodeDataFromString(bigString, UTF8, smallBuffer, &len) rather","date":"2013-05-01T17:58:51.846Z","type":"message"}
{"nick":"isaacs","message":"17:53 <@isaacs> bnoordhuis: would it make sense to have it just say, \"Sorry, that's not big enough, I'm gonna put it in a different place\"?","date":"2013-05-01T17:58:54.884Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, that's a possibility","date":"2013-05-01T17:59:39.016Z","type":"message"}
{"nick":"isaacs","message":"i think, first pass, i'm going to do it just for what i need.  i can certaily see the value of \"put that string here\" if you already have the space set up.","date":"2013-05-01T18:00:15.690Z","type":"message"}
{"nick":"isaacs","message":"but that seems like a potential later optimization.","date":"2013-05-01T18:00:31.176Z","type":"message"}
{"nick":"isaacs","message":"and if we wrap in a riaa class, we can always do that later without changing anything else.","date":"2013-05-01T18:00:42.641Z","type":"message"}
{"nick":"bnoordhuis","message":"exactly","date":"2013-05-01T18:00:52.774Z","type":"message"}
{"nick":"bnoordhuis","message":"only it's raii, not riaa :)","date":"2013-05-01T18:00:59.485Z","type":"message"}
{"nick":"isaacs","message":"oh, right.","date":"2013-05-01T18:01:08.797Z","type":"message"}
{"nick":"isaacs","message":"riaa is some macromedia thingie","date":"2013-05-01T18:01:18.886Z","type":"message"}
{"nick":"isaacs","message":":)","date":"2013-05-01T18:01:20.297Z","type":"message"}
{"nick":"isaacs","message":"oh, no, it's the evil recording industry thing","date":"2013-05-01T18:01:47.491Z","type":"message"}
{"nick":"isaacs","message":"pirate-hunters","date":"2013-05-01T18:01:59.257Z","type":"message"}
{"nick":"isaacs","message":"k, thanks, should have something kinda workable later today","date":"2013-05-01T18:02:21.548Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-05-01T18:02:28.279Z","type":"quit"}
{"nick":"isaacs","message":"it's occurring to me that require('string_decoder') is kind of odd.  it's actually ENcoding a to a string, not DEcoding from a string","date":"2013-05-01T18:03:45.171Z","type":"message"}
{"nick":"isaacs","action":"lobs another complaint back in time to ryah...","date":"2013-05-01T18:04:06.294Z","type":"action"}
{"nick":"isaacs","message":"not sure why that never seemed strange to me before.","date":"2013-05-01T18:04:15.319Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: just curious. would it be too much a change to cleanup the naming conventions for the v2 release?","date":"2013-05-01T18:05:11.699Z","type":"message"}
{"nick":"isaacs","message":"v2 or v12?","date":"2013-05-01T18:05:33.399Z","type":"message"}
{"nick":"isaacs","message":"ie, 2.0 or 0.12","date":"2013-05-01T18:05:39.517Z","type":"message"}
{"nick":"trevnorris","message":"v2.0","date":"2013-05-01T18:05:49.280Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: that's probably fine","date":"2013-05-01T18:06:00.133Z","type":"message"}
{"nick":"trevnorris","message":"unless you think it could b e done for v0.12. ;-)","date":"2013-05-01T18:06:07.495Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: we could even do that for 1.0, if we kept backwards compatible shims in place.","date":"2013-05-01T18:06:20.759Z","type":"message"}
{"nick":"isaacs","message":"but i'd like to stabilize what we have first, probabbly.","date":"2013-05-01T18:06:27.174Z","type":"message"}
{"nick":"isaacs","message":"we could put a fresh coat of paint on all the bikesheds between 0.12 and 1.0 :)","date":"2013-05-01T18:06:40.381Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: template <class S> explicit V8_INLINE(Persistent(Handle<S> that)) : Handle<T>(*that) { } --- do I need to specify the T or just rely on the compiler to do the right thing","date":"2013-05-01T18:06:46.919Z","type":"message"}
{"nick":"trevnorris","message":"heh, sounds good to me.","date":"2013-05-01T18:06:52.661Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: if I understand what you're trying to do, it would be Persistent<Something> handle(arg);","date":"2013-05-01T18:08:09.692Z","type":"message"}
{"nick":"tjfontaine","message":"ya, that's what I'm doing, I'm just trying to figure out if that's my problem","date":"2013-05-01T18:08:35.502Z","type":"message"}
{"nick":"trevnorris","message":"how do you mean your problem? It's just that the <Type> of \"arg\" must match Persistent<Type>","date":"2013-05-01T18:09:40.671Z","type":"message"}
{"nick":"trevnorris","message":"so, if you're receiving a Value, but you want an Object. would have to do something like Persistent<Object> handle(arg.As<Object>())","date":"2013-05-01T18:10:12.378Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 248 seconds","date":"2013-05-01T18:10:13.659Z","type":"quit"}
{"nick":"tjfontaine","message":"trevnorris: no my problem is that I'm not returning the object, and making the runtime unhappy","date":"2013-05-01T18:10:14.559Z","type":"message"}
{"nick":"trevnorris","message":"well, is \"arg\" already a Persistent?","date":"2013-05-01T18:10:29.776Z","type":"message"}
{"nick":"tjfontaine","message":"yes","date":"2013-05-01T18:10:33.829Z","type":"message"}
{"nick":"trevnorris","message":"hm. sorry. not too good at helping w/o code. :)","date":"2013-05-01T18:11:49.386Z","type":"message"}
{"nick":"loladiro","date":"2013-05-01T18:11:51.434Z","type":"join"}
{"nick":"tjfontaine","message":"I can post it, I'm sure it's probably something simple like my value going out of scope","date":"2013-05-01T18:12:09.466Z","type":"message"}
{"nick":"brson","date":"2013-05-01T18:13:23.082Z","type":"join"}
{"nick":"trevnorris","message":"acupuncture. biab","date":"2013-05-01T18:16:42.272Z","type":"message"}
{"nick":"trevnorris","action":"&","date":"2013-05-01T18:16:44.677Z","type":"action"}
{"nick":"LOUDBOT","message":"ERNIE VALENTINE WAS A WOMAN THREE DAYS AGO","date":"2013-05-01T18:16:44.877Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: isaacs : it was bad server","date":"2013-05-01T18:19:49.090Z","type":"message"}
{"nick":"indutny","message":"ah I see you've already figured it out","date":"2013-05-01T18:20:05.172Z","type":"message"}
{"nick":"tjfontaine","message":"indutny: ya, thanks","date":"2013-05-01T18:20:12.038Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #39 \u00037UNSTABLE\u000f smartos-x64 (1/581) windows-x64 (8/581) windows-ia32 (8/581) linux-ia32 (1/581) http://jenkins.nodejs.org/job/libuv-node-integration/39/","date":"2013-05-01T18:20:35.479Z","type":"message"}
{"nick":"indutny","message":"you're welcome","date":"2013-05-01T18:22:14.485Z","type":"message"}
{"nick":"tjfontaine","message":"when the conde nast guys respond I'll inform them of the updated information","date":"2013-05-01T18:22:39.989Z","type":"message"}
{"nick":"tjfontaine","message":"if this isn't a hardware terminator issue, it may be a firewall rule that they put in place","date":"2013-05-01T18:23:05.317Z","type":"message"}
{"nick":"isaacs","message":"i'm off to class, but if anyone cares to review: https://gist.github.com/isaacs/5497196","date":"2013-05-01T18:30:37.586Z","type":"message"}
{"nick":"mikeal","date":"2013-05-01T18:37:02.935Z","type":"join"}
{"nick":"piscisaureus_","message":"isaacs: i can't comment on that file...","date":"2013-05-01T18:40:55.124Z","type":"message"}
{"nick":"indutny","message":"isaacs: style man","date":"2013-05-01T18:42:47.042Z","type":"message"}
{"nick":"indutny","message":"style","date":"2013-05-01T18:42:48.325Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: why not?","date":"2013-05-01T18:47:08.723Z","type":"message"}
{"nick":"isaacs","message":"indutny: do we have a style fixer for c++?","date":"2013-05-01T18:47:18.092Z","type":"message"}
{"nick":"indutny","message":"fixer?","date":"2013-05-01T18:47:23.046Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: you can't comment on lines in a gist","date":"2013-05-01T18:47:25.627Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-05-01T18:47:26.388Z","type":"message"}
{"nick":"tjfontaine","message":"linter","date":"2013-05-01T18:47:26.609Z","type":"message"}
{"nick":"indutny","message":"aaah","date":"2013-05-01T18:47:29.866Z","type":"message"}
{"nick":"isaacs","message":"like make jslintfix","date":"2013-05-01T18:47:30.062Z","type":"message"}
{"nick":"indutny","message":"nope","date":"2013-05-01T18:47:35.803Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: oh... right.","date":"2013-05-01T18:47:38.082Z","type":"message"}
{"nick":"isaacs","message":"k, i'll push it in a proper commit when i get back","date":"2013-05-01T18:47:45.957Z","type":"message"}
{"nick":"kevinswiber","date":"2013-05-01T18:48:03.631Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 264 seconds","date":"2013-05-01T18:53:19.374Z","type":"quit"}
{"nick":"qard","reason":"Quit: Leaving.","date":"2013-05-01T18:57:19.318Z","type":"quit"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-05-01T18:57:31.655Z","type":"quit"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-05-01T18:59:36.034Z","type":"quit"}
{"nick":"dominictarr","date":"2013-05-01T19:01:20.896Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-01T19:01:39.734Z","type":"quit"}
{"nick":"kevinswiber","date":"2013-05-01T19:02:14.956Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-05-01T19:12:47.677Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-05-01T19:16:44.084Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-05-01T19:21:42.084Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-05-01T19:27:48.841Z","type":"nick"}
{"nick":"octetcloud","date":"2013-05-01T19:37:09.514Z","type":"join"}
{"nick":"mikeal","date":"2013-05-01T19:37:39.234Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 264 seconds","date":"2013-05-01T19:42:06.084Z","type":"quit"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-05-01T19:45:31.440Z","type":"quit"}
{"nick":"trevnorris","action":"fg","date":"2013-05-01T19:57:51.046Z","type":"action"}
{"nick":"trevnorris","message":"indutny: thought we did, but it was disabled since there are too many errors.","date":"2013-05-01T19:58:58.636Z","type":"message"}
{"nick":"kevinswiber","date":"2013-05-01T20:00:00.788Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-05-01T20:00:13.416Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-05-01T20:04:25.004Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-05-01T20:09:58.695Z","type":"nick"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-05-01T20:11:06.033Z","type":"quit"}
{"nick":"abraxas","date":"2013-05-01T20:16:17.370Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 256 seconds","date":"2013-05-01T20:20:57.000Z","type":"quit"}
{"nick":"mikeal","date":"2013-05-01T20:21:02.239Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: not sure this is what you were talking about, but if you run \"make lint\" it'll show you all the syntax errors in c++.","date":"2013-05-01T20:29:05.677Z","type":"message"}
{"nick":"EhevuTov","date":"2013-05-01T20:33:01.805Z","type":"join"}
{"nick":"rendar","date":"2013-05-01T20:44:05.397Z","type":"quit"}
{"nick":"groundwater","date":"2013-05-01T20:49:42.992Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 264 seconds","date":"2013-05-01T20:53:19.339Z","type":"quit"}
{"nick":"octetcloud","date":"2013-05-01T20:54:26.558Z","type":"join"}
{"nick":"timoxley","date":"2013-05-01T20:54:45.583Z","type":"join"}
{"nick":"qard","date":"2013-05-01T20:56:36.927Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-05-01T21:05:07.432Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-05-01T21:06:15.417Z","type":"join"}
{"nick":"stolsma","reason":"Ping timeout: 256 seconds","date":"2013-05-01T21:07:42.596Z","type":"quit"}
{"nick":"timoxley","reason":"Read error: Connection reset by peer","date":"2013-05-01T21:13:19.776Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: to conserve mem, I'm realloc'ing. working fine but valgrind has a hernia about mismatched free/delete.","date":"2013-05-01T21:16:01.747Z","type":"message"}
{"nick":"trevnorris","message":"anything I can do about that?","date":"2013-05-01T21:16:05.094Z","type":"message"}
{"nick":"wavded","date":"2013-05-01T21:17:24.440Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: use free rather than delete","date":"2013-05-01T21:18:56.745Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: problem is it's in the make weak callback for allocations. and everything else uses \"new\"","date":"2013-05-01T21:19:47.962Z","type":"message"}
{"nick":"tjfontaine","message":"use delete with new, and free with [re|m]alloc","date":"2013-05-01T21:19:48.806Z","type":"message"}
{"nick":"bnoordhuis","message":"yep. for portability's sake, assume that malloc/free and new/delete use different heaps","date":"2013-05-01T21:20:22.991Z","type":"message"}
{"nick":"trevnorris","message":"suck.","date":"2013-05-01T21:20:36.107Z","type":"message"}
{"nick":"trevnorris","message":"it's part of my work to remove the slab allocator: http://git.io/FwDqVA","date":"2013-05-01T21:21:45.358Z","type":"message"}
{"nick":"trevnorris","message":"almost have performance the exact same as it is now.","date":"2013-05-01T21:22:12.898Z","type":"message"}
{"nick":"tjfontaine","message":"the amount that github iterates on their UI is frustrating","date":"2013-05-01T21:23:03.443Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-05-01T21:23:29.371Z","type":"message"}
{"nick":"trevnorris","message":"so it's happening on #L3L242","date":"2013-05-01T21:23:34.610Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-05-01T21:23:52.602Z","type":"nick"}
{"nick":"trevnorris","message":"basically it's malloc'ing the 64kB for the request, but don't want to hang on to what's not being used.","date":"2013-05-01T21:23:58.982Z","type":"message"}
{"nick":"trevnorris","message":"not sure how it'll perform on other OS's but no performance hit on my linux box.","date":"2013-05-01T21:24:27.734Z","type":"message"}
{"nick":"timoxley","date":"2013-05-01T21:28:19.810Z","type":"join"}
{"nick":"wavded","reason":"Quit: Hasta la pasta","date":"2013-05-01T21:28:47.253Z","type":"quit"}
{"nick":"indutny","message":"trevnorris: what?","date":"2013-05-01T21:33:41.290Z","type":"message"}
{"nick":"trevnorris","message":"indutny: were you and isaacs talking before about a c++ linter?","date":"2013-05-01T21:34:18.382Z","type":"message"}
{"nick":"indutny","message":"ah, yes","date":"2013-05-01T21:34:29.430Z","type":"message"}
{"nick":"indutny","message":"we've linter in node","date":"2013-05-01T21:34:32.960Z","type":"message"}
{"nick":"indutny","message":"actually","date":"2013-05-01T21:34:33.887Z","type":"message"}
{"nick":"isaacs","action":"fg","date":"2013-05-01T21:36:32.508Z","type":"action"}
{"nick":"isaacs","message":"tjfontaine: fo rreals","date":"2013-05-01T21:36:47.251Z","type":"message"}
{"nick":"trevnorris","message":"ok, for anyone. architecture Q: created a generic make weak callback that will delete [] memory. want to use realloc, but valigrind hates me for it. so do I create a specialized function set just for this case, or what?","date":"2013-05-01T21:36:52.248Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: especially since they're so NOT interating on anything that actually mattes.","date":"2013-05-01T21:36:57.585Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: re: github ui?","date":"2013-05-01T21:36:58.353Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: yes.","date":"2013-05-01T21:37:00.594Z","type":"message"}
{"nick":"tjfontaine","message":"yup","date":"2013-05-01T21:37:04.117Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: like, I STILL CANT TAG PULL REQS","date":"2013-05-01T21:37:07.724Z","type":"message"}
{"nick":"isaacs","message":"wtf.  srsly","date":"2013-05-01T21:37:11.813Z","type":"message"}
{"nick":"tjfontaine","message":"but if we make it pretty people will like us!","date":"2013-05-01T21:37:24.492Z","type":"message"}
{"nick":"isaacs","message":"and if they're gonna make ui changes, how about fixing the back button on issue tabs?","date":"2013-05-01T21:37:32.293Z","type":"message"}
{"nick":"tjfontaine","message":"github -- like a woman addicted to plastic surgery","date":"2013-05-01T21:37:38.807Z","type":"message"}
{"nick":"isaacs","message":"i already love github.  with all my heart.  it breaks my heart to see it do this to itself.","date":"2013-05-01T21:38:08.041Z","type":"message"}
{"nick":"isaacs","message":"anyway..","date":"2013-05-01T21:38:17.639Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: so have a branch that's removed the slab allocator. except in a few cases it's running the same speed on net/http benchmarks.","date":"2013-05-01T21:40:30.273Z","type":"message"}
{"nick":"isaacs","message":"indutny: what style things were you referring to?  cpplint complains about a lot of stuff we don't actually follow.","date":"2013-05-01T21:42:05.559Z","type":"message"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-05-01T21:43:57.377Z","type":"quit"}
{"nick":"indutny","message":"isaacs: well arguments on next line","date":"2013-05-01T21:44:03.368Z","type":"message"}
{"nick":"indutny","message":"public first, private later","date":"2013-05-01T21:44:36.169Z","type":"message"}
{"nick":"indutny","message":"arguments line up","date":"2013-05-01T21:44:54.315Z","type":"message"}
{"nick":"indutny","message":"if you move any argument to next line - place every argument on next line","date":"2013-05-01T21:45:13.040Z","type":"message"}
{"nick":"isaacs","message":"indutny: we frequently put the args on the next line when they're a long list, and always just indent another 2 spaces.","date":"2013-05-01T21:45:13.608Z","type":"message"}
{"nick":"indutny","message":"I meant function declaration","date":"2013-05-01T21:45:27.745Z","type":"message"}
{"nick":"isaacs","message":"indutny: i'm following the style of stream_wrap.cc and node_buffer.cc","date":"2013-05-01T21:45:30.110Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-05-01T21:45:30.819Z","type":"message"}
{"nick":"indutny","message":"well, then its wrong :)","date":"2013-05-01T21:45:40.133Z","type":"message"}
{"nick":"indutny","message":"c'mon","date":"2013-05-01T21:45:42.627Z","type":"message"}
{"nick":"bnoordhuis","action":"concurs","date":"2013-05-01T21:45:45.854Z","type":"action"}
{"nick":"indutny","message":"we've node_crypto.cc","date":"2013-05-01T21:45:46.262Z","type":"message"}
{"nick":"indutny","message":"and its not following a lot of stuff too","date":"2013-05-01T21:45:53.480Z","type":"message"}
{"nick":"isaacs","message":"  static void OnReadCommon(uv_stream_t* handle, ssize_t nread,","date":"2013-05-01T21:46:00.723Z","type":"message"}
{"nick":"isaacs","message":"      uv_buf_t buf, uv_handle_type pending);","date":"2013-05-01T21:46:00.870Z","type":"message"}
{"nick":"indutny","message":"that's a total shit","date":"2013-05-01T21:46:12.334Z","type":"message"}
{"nick":"isaacs","message":"how would you liek that styled?  for bonus points, find me a linter that will enforce it, and i'll enforce it.","date":"2013-05-01T21:46:37.852Z","type":"message"}
{"nick":"indutny","message":"and I've already fixed it in many places","date":"2013-05-01T21:46:38.422Z","type":"message"}
{"nick":"indutny","message":"oh god","date":"2013-05-01T21:46:56.782Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: want to weigh in?","date":"2013-05-01T21:47:03.995Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah","date":"2013-05-01T21:47:07.508Z","type":"message"}
{"nick":"isaacs","message":"the reason why our style is consistent in JS but not in C++","date":"2013-05-01T21:47:08.210Z","type":"message"}
{"nick":"bnoordhuis","message":"i veto any and all c++ linters","date":"2013-05-01T21:47:19.990Z","type":"message"}
{"nick":"EhevuTov","date":"2013-05-01T21:47:22.059Z","type":"join"}
{"nick":"isaacs","message":"is because we have `make jslint` and `make jslintfix` so it always passes and is always linted","date":"2013-05-01T21:47:24.465Z","type":"message"}
{"nick":"isaacs","message":"ok, then you're going to have inconsistent styles.","date":"2013-05-01T21:47:32.999Z","type":"message"}
{"nick":"trevnorris","message":"since I had to do so much rewrite on node_buffer, I've tried to follow the google style guide best I could. hopefully you guys will pick out anything I missed.","date":"2013-05-01T21:47:38.398Z","type":"message"}
{"nick":"indutny","message":"isaacs: surely you can do whatever you want, but… look at libuv","date":"2013-05-01T21:48:10.736Z","type":"message"}
{"nick":"isaacs","message":"the only sane way to handle style persnicketiness is to have a program that enforces it.","date":"2013-05-01T21:48:11.067Z","type":"message"}
{"nick":"indutny","message":"its so pure and clean","date":"2013-05-01T21:48:14.226Z","type":"message"}
{"nick":"isaacs","message":"indutny: libuv is C, not C++","date":"2013-05-01T21:48:18.984Z","type":"message"}
{"nick":"indutny","message":"and in one style","date":"2013-05-01T21:48:19.141Z","type":"message"}
{"nick":"indutny","message":"and I like it","date":"2013-05-01T21:48:20.833Z","type":"message"}
{"nick":"isaacs","message":"sure","date":"2013-05-01T21:48:21.347Z","type":"message"}
{"nick":"indutny","message":"and so what?","date":"2013-05-01T21:48:25.867Z","type":"message"}
{"nick":"isaacs","message":"or look at node's *.js","date":"2013-05-01T21:48:27.452Z","type":"message"}
{"nick":"indutny","message":"exactly","date":"2013-05-01T21:48:32.494Z","type":"message"}
{"nick":"indutny","message":"there're looking similarly","date":"2013-05-01T21:48:37.249Z","type":"message"}
{"nick":"isaacs","message":"so, let's use a linter.","date":"2013-05-01T21:48:39.069Z","type":"message"}
{"nick":"indutny","message":"sure","date":"2013-05-01T21:48:43.982Z","type":"message"}
{"nick":"isaacs","message":"why not?","date":"2013-05-01T21:48:44.129Z","type":"message"}
{"nick":"isaacs","message":"everyone hates our cpplint we have now.","date":"2013-05-01T21:48:53.586Z","type":"message"}
{"nick":"isaacs","message":"and it's awful","date":"2013-05-01T21:48:55.363Z","type":"message"}
{"nick":"indutny","message":"we already have one in tools/","date":"2013-05-01T21:48:56.431Z","type":"message"}
{"nick":"isaacs","message":"and no one actually uses it, and it has never passed","date":"2013-05-01T21:49:05.961Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2013-05-01T21:49:11.401Z","type":"message"}
{"nick":"isaacs","message":"so let's rip out cpplint, and get a btter one that isn't stupid","date":"2013-05-01T21:49:17.484Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: ?","date":"2013-05-01T21:49:20.695Z","type":"message"}
{"nick":"isaacs","message":"or just accept that node's style is closer to V8's than to libuv's, and be ok with node's C++ being a little more lax.","date":"2013-05-01T21:49:44.417Z","type":"message"}
{"nick":"bnoordhuis","message":"we fix up style issues as we go along","date":"2013-05-01T21:50:21.785Z","type":"message"}
{"nick":"bnoordhuis","message":"it'll eventually get there","date":"2013-05-01T21:50:33.946Z","type":"message"}
{"nick":"isaacs","message":"can you point me to what node's C++ style guide actually is?","date":"2013-05-01T21:50:36.256Z","type":"message"}
{"nick":"kevinswiber","date":"2013-05-01T21:50:40.128Z","type":"join"}
{"nick":"bnoordhuis","message":"mostly google styleguide-ish","date":"2013-05-01T21:50:46.942Z","type":"message"}
{"nick":"isaacs","message":"i cannot express to you how little ic are about this.","date":"2013-05-01T21:50:48.106Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-05-01T21:50:52.927Z","type":"quit"}
{"nick":"isaacs","message":"bnoordhuis: that's not a guide.","date":"2013-05-01T21:50:53.535Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: there are approximately zero cpplint passing files in node/src/","date":"2013-05-01T21:51:31.168Z","type":"message"}
{"nick":"isaacs","message":"and cpplint is the codified authority on google's style guide.","date":"2013-05-01T21:51:47.365Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah. and i don't care","date":"2013-05-01T21:51:53.151Z","type":"message"}
{"nick":"isaacs","message":"so, what's our style guide?  i think we don't have one.","date":"2013-05-01T21:52:03.392Z","type":"message"}
{"nick":"bnoordhuis","message":"like i said, we fix up style violations as we go along","date":"2013-05-01T21:52:16.914Z","type":"message"}
{"nick":"isaacs","message":"what is a \"violation\"?  do we even have a list of rules?","date":"2013-05-01T21:52:29.581Z","type":"message"}
{"nick":"isaacs","message":"it sounds like our c++ style guide is \"the whim of ben noordhuis\"","date":"2013-05-01T21:52:44.295Z","type":"message"}
{"nick":"isaacs","message":"which is fine, and easy to check for, if you're ben noordhuis","date":"2013-05-01T21:52:52.947Z","type":"message"}
{"nick":"isaacs","message":"but the reason why i took a few hours and made all our js pass lint back in 0.7, was because the only way to have sanity with this stuff is to just do it all at once, and have a programmatic way to keep it in line.","date":"2013-05-01T21:54:00.597Z","type":"message"}
{"nick":"isaacs","message":"otherwise it's an unnecessary hurdle to contributions.","date":"2013-05-01T21:54:15.608Z","type":"message"}
{"nick":"bnoordhuis","message":"sure, but i don't care about that","date":"2013-05-01T21:54:22.716Z","type":"message"}
{"nick":"bnoordhuis","message":"if you fix up all the style issues in a single commit","date":"2013-05-01T21:54:31.661Z","type":"message"}
{"nick":"bnoordhuis","message":"you'll probably be touching 50% of all c++ code","date":"2013-05-01T21:54:37.985Z","type":"message"}
{"nick":"indutny","message":"isaacs: v8's style is pretty strict","date":"2013-05-01T21:54:39.015Z","type":"message"}
{"nick":"indutny","message":"and I'm actually using it","date":"2013-05-01T21:54:41.967Z","type":"message"}
{"nick":"indutny","message":"and was talking about it","date":"2013-05-01T21:54:47.490Z","type":"message"}
{"nick":"isaacs","message":"indutny: but you also have extra rules that are not in that style guide, or at least, not enforced by cpplint.","date":"2013-05-01T21:55:09.946Z","type":"message"}
{"nick":"isaacs","message":"indutny: and we frequently violate the #include rules","date":"2013-05-01T21:55:20.166Z","type":"message"}
{"nick":"indutny","message":"probably","date":"2013-05-01T21:55:21.826Z","type":"message"}
{"nick":"indutny","message":"but ben is right about touching 50% of code","date":"2013-05-01T21:55:57.267Z","type":"message"}
{"nick":"isaacs","message":"yeah, linting the js touched just about every js file, as well.  sometimes rather extensively.","date":"2013-05-01T21:56:23.623Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-05-01T21:56:40.168Z","type":"message"}
{"nick":"indutny","message":"the problem is backporting :)","date":"2013-05-01T21:56:44.093Z","type":"message"}
{"nick":"indutny","message":"actually","date":"2013-05-01T21:56:47.294Z","type":"message"}
{"nick":"indutny","message":"porting forward","date":"2013-05-01T21:56:50.244Z","type":"message"}
{"nick":"indutny","message":"from 0.10 to 0.11","date":"2013-05-01T21:56:53.812Z","type":"message"}
{"nick":"isaacs","message":"and this is just silly: src/string_decoder.cc:39:  Missing username in TODO; it should look like \"// TODO(my_username): Stuff.\"  [readability/todo] [2]","date":"2013-05-01T21:56:59.833Z","type":"message"}
{"nick":"indutny","message":"that's not bad, actually","date":"2013-05-01T21:57:07.684Z","type":"message"}
{"nick":"indutny","message":"but pretty silly, yes","date":"2013-05-01T21:57:14.000Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: get's better. have a variable named \"string\" and it bitches about not including <string.h>","date":"2013-05-01T21:57:26.960Z","type":"message"}
{"nick":"isaacs","message":"indutny: we dont' assign our TODOs, and if you want to know who wrote it, check git blame","date":"2013-05-01T21:57:27.710Z","type":"message"}
{"nick":"indutny","message":"that's not assignment","date":"2013-05-01T21:57:33.308Z","type":"message"}
{"nick":"indutny","message":"its like","date":"2013-05-01T21:57:39.519Z","type":"message"}
{"nick":"indutny","message":"I think this stuff must be done","date":"2013-05-01T21:57:44.079Z","type":"message"}
{"nick":"indutny","message":"with specifying who I am","date":"2013-05-01T21:57:48.686Z","type":"message"}
{"nick":"indutny","message":"but yes","date":"2013-05-01T21:57:53.862Z","type":"message"}
{"nick":"indutny","message":"its silly","date":"2013-05-01T21:57:55.646Z","type":"message"}
{"nick":"isaacs","message":"right.  we should not put data in the file that is better handled by source control.","date":"2013-05-01T21:57:59.281Z","type":"message"}
{"nick":"indutny","message":"and redundant","date":"2013-05-01T21:58:00.185Z","type":"message"}
{"nick":"bnoordhuis","message":"convenient though","date":"2013-05-01T21:58:09.679Z","type":"message"}
{"nick":"indutny","message":"isaacs: this line could be moved","date":"2013-05-01T21:58:14.141Z","type":"message"}
{"nick":"bnoordhuis","message":"saves having to sift through git blame","date":"2013-05-01T21:58:14.719Z","type":"message"}
{"nick":"indutny","message":"and source control won't help you","date":"2013-05-01T21:58:19.662Z","type":"message"}
{"nick":"bnoordhuis","message":"possibly multiple git blames in case people have been landing all kinds of lint patches :)","date":"2013-05-01T21:58:31.745Z","type":"message"}
{"nick":"indutny","message":"hahah","date":"2013-05-01T21:58:41.411Z","type":"message"}
{"nick":"indutny","message":"yes :)","date":"2013-05-01T21:58:43.486Z","type":"message"}
{"nick":"isaacs","message":"either the thing should be done, or it shouldn't be.  if you decide it shouldn't be, then remove the TODO.  if you decide it should be, then who cares who wrote the line?","date":"2013-05-01T21:58:49.392Z","type":"message"}
{"nick":"isaacs","message":"that's unnecessary clutter.","date":"2013-05-01T21:58:54.837Z","type":"message"}
{"nick":"isaacs","message":"it's the same reason you don't comment out code.","date":"2013-05-01T21:59:03.244Z","type":"message"}
{"nick":"isaacs","message":"it is *node* saying that this or that needs to be done.","date":"2013-05-01T21:59:22.365Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, midnight","date":"2013-05-01T22:00:19.567Z","type":"message"}
{"nick":"indutny","message":"I care","date":"2013-05-01T22:00:26.382Z","type":"message"}
{"nick":"indutny","message":"its like","date":"2013-05-01T22:00:27.724Z","type":"message"}
{"nick":"indutny","message":"TODO: fix this stuff","date":"2013-05-01T22:00:30.479Z","type":"message"}
{"nick":"bnoordhuis","message":"signing off, have a good night everyone","date":"2013-05-01T22:00:31.878Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: sleep tight","date":"2013-05-01T22:00:37.832Z","type":"message"}
{"nick":"trevnorris","message":"night","date":"2013-05-01T22:00:41.798Z","type":"message"}
{"nick":"indutny","message":"and then someone finds it","date":"2013-05-01T22:00:42.215Z","type":"message"}
{"nick":"indutny","message":"and wonders \"what stuff?\"","date":"2013-05-01T22:00:48.325Z","type":"message"}
{"nick":"bnoordhuis","reason":"Quit: leaving","date":"2013-05-01T22:00:50.374Z","type":"quit"}
{"nick":"indutny","message":"and starts finding person who wrote it","date":"2013-05-01T22:01:04.218Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-05-01T22:02:59.290Z","type":"quit"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-05-01T22:03:04.645Z","type":"quit"}
{"nick":"c4milo","date":"2013-05-01T22:03:25.953Z","type":"join"}
{"nick":"isaacs","message":"g'nite bn","date":"2013-05-01T22:04:03.747Z","type":"message"}
{"nick":"isaacs","message":"g'nite bnoordhuis","date":"2013-05-01T22:04:06.157Z","type":"message"}
{"nick":"isaacs","message":"indutny: well, i mean, that's justa bad todo message :)","date":"2013-05-01T22:04:21.723Z","type":"message"}
{"nick":"isaacs","message":"indutny: the answer there is to not do that :)","date":"2013-05-01T22:04:31.491Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-05-01T22:04:39.240Z","type":"message"}
{"nick":"indutny","message":"that's not that hard to put username here","date":"2013-05-01T22:04:50.803Z","type":"message"}
{"nick":"indutny","message":"and it isn't clobbering code *that* much","date":"2013-05-01T22:05:03.283Z","type":"message"}
{"nick":"indutny","message":"but helps a lot","date":"2013-05-01T22:05:05.873Z","type":"message"}
{"nick":"indutny","message":"sometimes","date":"2013-05-01T22:05:08.406Z","type":"message"}
{"nick":"indutny","message":"and I agree that usually in such times comment is just badly written","date":"2013-05-01T22:05:22.259Z","type":"message"}
{"nick":"timoxley","reason":"Ping timeout: 240 seconds","date":"2013-05-01T22:05:33.805Z","type":"quit"}
{"nick":"indutny","message":"and it should be filtered at review","date":"2013-05-01T22:05:34.750Z","type":"message"}
{"nick":"EhevuTov","date":"2013-05-01T22:07:35.482Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 246 seconds","date":"2013-05-01T22:07:40.802Z","type":"quit"}
{"nick":"isaacs","message":"anyway... if ben and you both want to use cpplint, then fine, i'll put (isaacs) in TODO comments.","date":"2013-05-01T22:11:14.640Z","type":"message"}
{"nick":"isaacs","message":"it's just frustrating to say \"style issues\" without pointing to what specific rules our style requires, you know?","date":"2013-05-01T22:11:40.971Z","type":"message"}
{"nick":"isaacs","message":"and if we use cpplint, then fine, but let's disable the rules we don't actually care about, like header ordering","date":"2013-05-01T22:11:56.448Z","type":"message"}
{"nick":"isaacs","message":"and perhaps add in any that are missing.","date":"2013-05-01T22:12:08.214Z","type":"message"}
{"nick":"indutny","message":"sure, I agree","date":"2013-05-01T22:12:40.313Z","type":"message"}
{"nick":"indutny","message":"but header ordering looks good to me","date":"2013-05-01T22:12:46.190Z","type":"message"}
{"nick":"kenperkins","date":"2013-05-01T22:13:38.350Z","type":"join"}
{"nick":"kellabyte","reason":"Ping timeout: 258 seconds","date":"2013-05-01T22:13:50.689Z","type":"quit"}
{"nick":"isaacs","message":"also, and i really mean this, i have NO personal opinion about any specific style rules, except that they should be clear, and easy to follow.","date":"2013-05-01T22:15:10.270Z","type":"message"}
{"nick":"isaacs","message":"i write modules in every conceivable style.","date":"2013-05-01T22:15:22.777Z","type":"message"}
{"nick":"kellabyte","date":"2013-05-01T22:23:16.546Z","type":"join"}
{"nick":"isaacs","message":"indutny: why is reinterpret_cast<foo>(obj) better than (foo)obj","date":"2013-05-01T22:24:40.484Z","type":"message"}
{"nick":"indutny","message":"because there're a lot of different casts","date":"2013-05-01T22:24:52.568Z","type":"message"}
{"nick":"isaacs","message":"indutny: i don't get this thing's objection to c-style casts.","date":"2013-05-01T22:24:55.196Z","type":"message"}
{"nick":"indutny","message":"c-style casts are just compatibility stuff","date":"2013-05-01T22:25:09.390Z","type":"message"}
{"nick":"isaacs","message":"it seems like reinterpet_cast is basically identical to c-style casts, though","date":"2013-05-01T22:26:03.817Z","type":"message"}
{"nick":"isaacs","message":"\"Here's some memory, interpret it as this sort of thing\"","date":"2013-05-01T22:26:17.483Z","type":"message"}
{"nick":"trevnorris","message":"but (foo)(bar) doesn't imply reinterpret_cast","date":"2013-05-01T22:26:55.711Z","type":"message"}
{"nick":"isaacs","message":"i guess, i mean, the typical use case is if you have a void* and you know that it's actually some other kind of thing.","date":"2013-05-01T22:27:50.278Z","type":"message"}
{"nick":"isaacs","message":"loose typing in C","date":"2013-05-01T22:27:58.952Z","type":"message"}
{"nick":"amartens","message":"the best kind of typing","date":"2013-05-01T22:28:17.451Z","type":"message"}
{"nick":"trevnorris","message":"yeah. and I don't have anything against them. imho it's all about consistency. like semicolons in js. I know I don't _need_ them everywhere.  but don't like to have to remember the list of rules of when (not) to.","date":"2013-05-01T22:29:06.252Z","type":"message"}
{"nick":"tjfontaine","message":"List<? extends NodeProperty<?>>","date":"2013-05-01T22:30:20.576Z","type":"message"}
{"nick":"tjfontaine","message":"oh yes, java how I love you","date":"2013-05-01T22:30:30.160Z","type":"message"}
{"nick":"tjfontaine","message":"LOUDBOT: how do we feel about javur?","date":"2013-05-01T22:30:40.229Z","type":"message"}
{"nick":"LOUDBOT","message":"tjfontaine: BECAUSE I'M THAT KIND OF FRIEND","date":"2013-05-01T22:30:40.424Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-05-01T22:31:51.604Z","type":"join"}
{"nick":"stagas","date":"2013-05-01T22:34:30.733Z","type":"join"}
{"nick":"kellabyte","reason":"Ping timeout: 256 seconds","date":"2013-05-01T22:36:57.864Z","type":"quit"}
{"nick":"isaacs","message":"trevnorris: the rules are actually super simple.","date":"2013-05-01T22:37:39.497Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: before any [ or ( at the start of a line.","date":"2013-05-01T22:37:50.426Z","type":"message"}
{"nick":"isaacs","message":"that's basically the whole ruleset.","date":"2013-05-01T22:37:55.586Z","type":"message"}
{"nick":"isaacs","message":"(ok, if you want to get technical, it's /^[[(+*-]/ and / where it's not a regexp, but the other cases are kind of ridiculous)","date":"2013-05-01T22:38:50.021Z","type":"message"}
{"nick":"trevnorris","message":":)","date":"2013-05-01T22:39:48.158Z","type":"message"}
{"nick":"qard","date":"2013-05-01T22:40:44.398Z","type":"part"}
{"nick":"isaacs","message":"LOUDBOT: search java","date":"2013-05-01T22:41:11.683Z","type":"message"}
{"nick":"LOUDBOT","message":"isaacs: <ew73:#stimutacs> JAVASCRIPT WORKS BECAUSE PROTOTYPES","date":"2013-05-01T22:41:12.197Z","type":"message"}
{"nick":"isaacs","message":"LOUDBOT: search java","date":"2013-05-01T22:41:14.901Z","type":"message"}
{"nick":"LOUDBOT","message":"isaacs: <HighBit:##church-of-loudbot> HEY GUYS GUESS WHAT JAVA HAS CLOSURES NOW!... MADE YOU LOOK","date":"2013-05-01T22:41:15.485Z","type":"message"}
{"nick":"isaacs","message":"LOUDBOT: next","date":"2013-05-01T22:41:25.530Z","type":"message"}
{"nick":"LOUDBOT","message":"isaacs: <nkk:#peltkore> IS THAT JAVA IANK :OO","date":"2013-05-01T22:41:26.069Z","type":"message"}
{"nick":"isaacs","message":"LOUDBOT: next","date":"2013-05-01T22:41:28.202Z","type":"message"}
{"nick":"LOUDBOT","message":"isaacs: <YTZ:##church-of-loudbot> JAVA NEEDS TO STEP THE FUCK UP AND BE SOMETHING","date":"2013-05-01T22:41:28.672Z","type":"message"}
{"nick":"isaacs","message":"LOUDBOT: next","date":"2013-05-01T22:41:32.148Z","type":"message"}
{"nick":"LOUDBOT","message":"isaacs: <machinaut:#ncsulug> USE ALL THE CDN-HOSTED HIPSTER JAVASCRIPT FRAMEWORKS","date":"2013-05-01T22:41:32.601Z","type":"message"}
{"nick":"isaacs","message":"LOUDBOT: next","date":"2013-05-01T22:41:35.650Z","type":"message"}
{"nick":"LOUDBOT","message":"isaacs: <isaacs:#stackvm> HOORAY FOR HORROR JAVASCRIPT!","date":"2013-05-01T22:41:35.913Z","type":"message"}
{"nick":"isaacs","message":"LOUDBOT: next","date":"2013-05-01T22:41:37.712Z","type":"message"}
{"nick":"LOUDBOT","message":"isaacs: <spiffytech:#ncsulug> JAVASCRIPT CAN GO DIE IN A FIRE","date":"2013-05-01T22:41:38.024Z","type":"message"}
{"nick":"isaacs","message":"LOUDBOT: next","date":"2013-05-01T22:41:41.432Z","type":"message"}
{"nick":"LOUDBOT","message":"isaacs: <frijole:##turtles> ... REACTIVATION AFTER THE ONE YEAR. REACTIVATION PROCESS IS THROUGH SHORT SMS CODE. SERVER SIDE WILL ENABLE ME TO FILL SHORT SMS CODE AND MESSAGE CONTENT. GREAT DESIGN AND LOOKS BUT LIGHT IN SIZE AND DATA TRANSMISSION. SEND ME A QUOTE. I NEED VERSION FOR BLACKBERRY,ANDROID,SYMBIAN,S40 AND S60 JAVA PHONES.","date":"2013-05-01T22:41:41.884Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-05-01T22:42:08.239Z","type":"message"}
{"nick":"tjfontaine","message":"##church-of-loudbot sounds amusing","date":"2013-05-01T22:42:38.562Z","type":"message"}
{"nick":"isaacs","message":"oh, it is","date":"2013-05-01T22:43:10.897Z","type":"message"}
{"nick":"isaacs","message":"you must speak in all caps, or you get booted","date":"2013-05-01T22:43:15.231Z","type":"message"}
{"nick":"tjfontaine","message":"haha","date":"2013-05-01T22:43:24.491Z","type":"message"}
{"nick":"tjfontaine","message":"I'm surprised it doesn't also require nicks to be caps","date":"2013-05-01T22:43:41.983Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 268 seconds","date":"2013-05-01T22:46:46.526Z","type":"quit"}
{"nick":"TooTallNate","message":"lol","date":"2013-05-01T22:50:14.701Z","type":"message"}
{"nick":"TooTallNate","message":"i got kicked","date":"2013-05-01T22:50:17.831Z","type":"message"}
{"nick":"tjfontaine","message":"you thought it was a joke :0","date":"2013-05-01T22:50:43.030Z","type":"message"}
{"nick":"TooTallNate","message":"just testing the system :)","date":"2013-05-01T22:51:34.892Z","type":"message"}
{"nick":"TooTallNate","message":"IT WORKSS!!!","date":"2013-05-01T22:51:43.234Z","type":"message"}
{"nick":"LOUDBOT","message":"GAD DANGIT BILL, WE'RE TALKIN' 'BOUT PROPANE","date":"2013-05-01T22:51:43.789Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-05-01T22:52:32.669Z","type":"message"}
{"nick":"tjfontaine","message":"endless amounts of fun","date":"2013-05-01T22:52:41.643Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-05-01T22:53:05.637Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-05-01T22:59:20.384Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: you still working on the persisting persistents thing?","date":"2013-05-01T22:59:37.597Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: I took a break to do some javur, but I'm considering looking at it again","date":"2013-05-01T23:01:55.827Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: my previous error was silly, I was just missing a scope.Close","date":"2013-05-01T23:02:20.484Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: coolio. if you figure anything else out let me know.","date":"2013-05-01T23:02:34.529Z","type":"message"}
{"nick":"trevnorris","message":"i'm pushing the limits on my end, and just need a little more to get performance up-to-par w/o the SlabAllocator","date":"2013-05-01T23:03:18.144Z","type":"message"}
{"nick":"tjfontaine","message":"my next stumbling block was trying to convince Buffer::HasInstance I know what I'm doing","date":"2013-05-01T23:04:28.338Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: right now v8 external string resources are hidden by a flag, but feel like those could offer some noticable perf gains.","date":"2013-05-01T23:06:30.202Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: heh. took me ~3 days to figure out my implementation. and still not sure if it was correct.","date":"2013-05-01T23:06:56.081Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: you around?","date":"2013-05-01T23:07:57.679Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: this of course doesn't work at all right now, but if you wanted to see what my idea was, https://gist.github.com/tjfontaine/aac4a2226c9f15d12ab5 ","date":"2013-05-01T23:08:15.840Z","type":"message"}
{"nick":"DrPizza","message":"isaacs: C++ casts are easier to search for, and prevent you from doing things accidentally e.g. removing const when you don't intend to","date":"2013-05-01T23:10:16.393Z","type":"message"}
{"nick":"isaacs","message":"DrPizza: that's fair, i guess","date":"2013-05-01T23:10:28.803Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: ooh yeah. working around the current buffer cruft will be difficult. might want to try it around the new allocator: http://git.io/EEZuSA","date":"2013-05-01T23:10:43.188Z","type":"message"}
{"nick":"DrPizza","message":"isaacs: plus C casts can't do dynamic_cast","date":"2013-05-01T23:11:45.000Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: those also don't use ObjectWrap.","date":"2013-05-01T23:11:57.995Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: ya, I was just curious with how little impact I could do it with, as if it was a measurable impact it could be back ported without much fear","date":"2013-05-01T23:12:43.486Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: ah, see what you're saying. good point.","date":"2013-05-01T23:12:59.958Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: sup? is it a long question or a short one?","date":"2013-05-01T23:13:07.243Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: depends on how well you answer it :)","date":"2013-05-01T23:13:27.082Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: so, https://github.com/isaacs/node/commit/0a5dda14ab2f811c003055bc1fa87476169a89ab","date":"2013-05-01T23:13:29.073Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: one problem with this, if i was to replace StreamWrap's WriteStringImpl stuff with this","date":"2013-05-01T23:13:45.434Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: but anyway, I was mostly curious if we gain anything by lumping the persistent allocations together","date":"2013-05-01T23:13:56.947Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: need to pass the StringDecoder* around, so that i know when to delete it.  OR, need to have StringDecoder not be RAII, and just say that the consumer is responsible for deleting the char* data","date":"2013-05-01T23:14:24.351Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-05-01T23:14:49.109Z","type":"quit"}
{"nick":"piscisaureus_","message":"isaacs: what's the purpose of that class?","date":"2013-05-01T23:16:13.726Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: is node::Buffer going to embed it?","date":"2013-05-01T23:16:34.873Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: well, we have a bunch of places where it'd be nice to implement the same logic as StreamWrap::WriteStringImpl","date":"2013-05-01T23:16:46.637Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: eg, crypto, zlib, etc.","date":"2013-05-01T23:16:58.710Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: save a new Buffer() in JS-land for string writes","date":"2013-05-01T23:17:10.247Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: I would not make StringDecoder a class.","date":"2013-05-01T23:17:17.773Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: or, I would make it a class but not one to instantiate","date":"2013-05-01T23:17:29.042Z","type":"message"}
{"nick":"isaacs","message":"what approach would you use?","date":"2013-05-01T23:17:29.705Z","type":"message"}
{"nick":"isaacs","message":"sure.  class-as-namespace","date":"2013-05-01T23:17:43.676Z","type":"message"}
{"nick":"isaacs","message":"so, you'd suggest just a function that returns the data pointer, and you pass it an int* for it to write the length for you?","date":"2013-05-01T23:18:10.543Z","type":"message"}
{"nick":"wolfeidau","date":"2013-05-01T23:18:11.488Z","type":"join"}
{"nick":"isaacs","message":"(or returns a uv_buf struct, i guess, would be simpler)","date":"2013-05-01T23:18:34.099Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well two things first, one of the WriteWrap tricks (other than the GetStorageSize trick) is to avoid unnecessary malloc calls","date":"2013-05-01T23:18:36.833Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: so if you make this a class to instantiate then you'll lose this","date":"2013-05-01T23:18:54.010Z","type":"message"}
{"nick":"piscisaureus_","message":"I would just do:","date":"2013-05-01T23:18:56.035Z","type":"message"}
{"nick":"isaacs","message":"yeah, true that","date":"2013-05-01T23:19:01.017Z","type":"message"}
{"nick":"piscisaureus_","message":"(wherever you need this functionality)","date":"2013-05-01T23:19:03.705Z","type":"message"}
{"nick":"isaacs","message":"feels cleaner, but it's actually clumsy","date":"2013-05-01T23:19:06.929Z","type":"message"}
{"nick":"piscisaureus_","message":"size_t size = StringDecoder::GetStorageSize(str, kUtf8);","date":"2013-05-01T23:22:01.520Z","type":"message"}
{"nick":"piscisaureus_","message":"// Allocate space for storage here. Might malloc, might piggyback onto another allocation","date":"2013-05-01T23:22:01.666Z","type":"message"}
{"nick":"piscisaureus_","message":"StringDecoder::Write(str, kUtf8);","date":"2013-05-01T23:22:01.667Z","type":"message"}
{"nick":"piscisaureus_","message":"er.","date":"2013-05-01T23:22:36.605Z","type":"message"}
{"nick":"piscisaureus_","message":"StringDecoder::Write(str, kUtf8, storage)","date":"2013-05-01T23:22:36.756Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: the problem with your approach is also that it always decodes into the storage_ field, so if you want to turn this decoded string into a buffer then you'll need to copy it again, *or* you'd have to embed StringDecoder into the new buffer instance and change the `data` field to be the `string_decoder.storage_` field. Not ideal.","date":"2013-05-01T23:24:04.058Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-05-01T23:24:33.340Z","type":"message"}
{"nick":"isaacs","message":"what about that thing it's doing with +15 and then rounding up to the nearest 16?","date":"2013-05-01T23:24:51.501Z","type":"message"}
{"nick":"isaacs","message":"is that actually necessary?","date":"2013-05-01T23:25:05.066Z","type":"message"}
{"nick":"isaacs","message":"(or rather, actually relevant)","date":"2013-05-01T23:25:13.335Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: very marginally relevant","date":"2013-05-01T23:25:23.225Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: but there are easier tricks to come up with","date":"2013-05-01T23:25:55.737Z","type":"message"}
{"nick":"isaacs","message":"seems like the better API would be:  size_t data_len = StringDecoder::Write(str, encoding, storage)","date":"2013-05-01T23:25:59.253Z","type":"message"}
{"nick":"isaacs","message":"but then you also need to know how many bytes offset it is.","date":"2013-05-01T23:26:09.334Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: also when malloc()ing directly it probably makes no sense at all (you'll get a 16-byte aligned pointer anyway)","date":"2013-05-01T23:26:19.625Z","type":"message"}
{"nick":"isaacs","message":"i guess you could do that yourself, and the StringDecoder class could not know about it.","date":"2013-05-01T23:26:23.295Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: no you need to disconnect the GetStorageSize from the Write method","date":"2013-05-01T23:26:59.122Z","type":"message"}
{"nick":"isaacs","message":"you know... every time i think RAII is a great idea, and i mean, it kinda it sounds great, it just makes things sorta overly clever and complicated.","date":"2013-05-01T23:27:15.775Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: oh - you probably didn't mean to kill that","date":"2013-05-01T23:27:17.861Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: right, i mean, you could do something like this:","date":"2013-05-01T23:27:30.674Z","type":"message"}
{"nick":"isaacs","message":"size = StringDecoder::GetStorageSize(str, encoding); char* storage = new char[size + 15]; data = ROUND_UP(storage, 16); StringDecoder::Write(str, encoding, data);","date":"2013-05-01T23:28:38.669Z","type":"message"}
{"nick":"isaacs","message":"if you really want to do the 16 byte alignment trick","date":"2013-05-01T23:28:49.643Z","type":"message"}
{"nick":"isaacs","message":"or you could just use malloc like a gentleman","date":"2013-05-01T23:29:02.383Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well new char[] is basically malloc so that'd be okay","date":"2013-05-01T23:29:21.467Z","type":"message"}
{"nick":"piscisaureus_","message":"but what we do with wraps is (and here it's somewhat relevant)","date":"2013-05-01T23:29:33.408Z","type":"message"}
{"nick":"isaacs","message":"i guess we're actually stuffing the WriteReq in the first few bytes, right?","date":"2013-05-01T23:29:58.103Z","type":"message"}
{"nick":"isaacs","message":"so they might fit in the 15?","date":"2013-05-01T23:30:08.739Z","type":"message"}
{"nick":"isaacs","message":"er, no, we ad 15 on top of that, nvm","date":"2013-05-01T23:30:47.725Z","type":"message"}
{"nick":"piscisaureus_","message":"Wrap* createWrap(Handle<String> s, enum encoding enc) {","date":"2013-05-01T23:32:33.571Z","type":"message"}
{"nick":"piscisaureus_","message":"  size_t string_offset = ROUD_UP(sizeof(Wrap), 16);","date":"2013-05-01T23:32:33.723Z","type":"message"}
{"nick":"piscisaureus_","message":"  size_t string_len = StringDecoder::GetStorageSize(s, enc);","date":"2013-05-01T23:32:33.723Z","type":"message"}
{"nick":"piscisaureus_","message":"  char* storage = new char[string_offset + string_len];","date":"2013-05-01T23:32:33.723Z","type":"message"}
{"nick":"piscisaureus_","message":"  return new (storage) Wrap(storage + string_offset);","date":"2013-05-01T23:32:33.723Z","type":"message"}
{"nick":"piscisaureus_","message":"}","date":"2013-05-01T23:32:34.436Z","type":"message"}
{"nick":"piscisaureus_","message":".// and I'm missing just before the return statement:","date":"2013-05-01T23:33:50.856Z","type":"message"}
{"nick":"piscisaureus_","message":"StringDecoder::Write(s, enc, storage + string_offset);","date":"2013-05-01T23:33:51.003Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-05-01T23:34:09.921Z","type":"quit"}
{"nick":"isaacs","message":"you're talking about this:","date":"2013-05-01T23:34:24.899Z","type":"message"}
{"nick":"isaacs","message":"  char* storage = new char[sizeof(WriteWrap) + storage_size + 15];","date":"2013-05-01T23:34:25.529Z","type":"message"}
{"nick":"isaacs","message":"  WriteWrap* req_wrap = new(storage)WriteWrap();","date":"2013-05-01T23:34:25.682Z","type":"message"}
{"nick":"isaacs","message":"yes?","date":"2013-05-01T23:34:26.879Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: is there a set-ish time when v0.12 will be released?","date":"2013-05-01T23:34:47.607Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: yes, although now I think that indiscriminately adding 15 to the size is kinda lame","date":"2013-05-01T23:34:52.346Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: when it's ready, as always","date":"2013-05-01T23:34:54.429Z","type":"message"}
{"nick":"piscisaureus_","message":"we can do better than that :)","date":"2013-05-01T23:34:57.044Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: yes.","date":"2013-05-01T23:35:01.110Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: coolio. :)","date":"2013-05-01T23:35:09.857Z","type":"message"}
{"nick":"piscisaureus_","message":"which I did with ROUND_UP in the snippet I posted","date":"2013-05-01T23:35:15.243Z","type":"message"}
{"nick":"isaacs","message":"i see","date":"2013-05-01T23:36:22.374Z","type":"message"}
{"nick":"isaacs","message":"and the `new (pointer) Type(args)` creates a new `Type` thing at the data referenced by pointer?","date":"2013-05-01T23:36:49.270Z","type":"message"}
{"nick":"isaacs","message":"s/data/memory location/","date":"2013-05-01T23:37:11.881Z","type":"message"}
{"nick":"kenperkins","date":"2013-05-01T23:37:52.668Z","type":"join"}
{"nick":"timoxley","date":"2013-05-01T23:39:09.558Z","type":"join"}
{"nick":"piscisaureus_","message":"isaacs: yessir","date":"2013-05-01T23:40:01.285Z","type":"message"}
{"nick":"isaacs","message":"k","date":"2013-05-01T23:40:08.605Z","type":"message"}
{"nick":"isaacs","message":"so the new char[..] gets the memory (without a malloc) and guarantees that string_offset will be at a %16 boundary","date":"2013-05-01T23:41:06.241Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: and then later, when you do `delete wrap`, it freesit","date":"2013-05-01T23:41:19.181Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well - that's not how you do it :)","date":"2013-05-01T23:41:44.023Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: delete both calls the destructor and frees, which assumes that the object was deleted using normal new","date":"2013-05-01T23:42:05.543Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: usually you would call the destructor explicitly","date":"2013-05-01T23:42:17.613Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-05-01T23:42:22.114Z","type":"message"}
{"nick":"isaacs","message":"    req_wrap->~WriteWrap();","date":"2013-05-01T23:42:22.908Z","type":"message"}
{"nick":"piscisaureus_","message":"yes","date":"2013-05-01T23:42:26.688Z","type":"message"}
{"nick":"isaacs","message":"    delete[] storage;","date":"2013-05-01T23:42:27.744Z","type":"message"}
{"nick":"piscisaureus_","message":"yes","date":"2013-05-01T23:42:48.752Z","type":"message"}
{"nick":"isaacs","message":"or:","date":"2013-05-01T23:42:53.468Z","type":"message"}
{"nick":"isaacs","message":"  req_wrap->~WriteWrap();","date":"2013-05-01T23:42:53.818Z","type":"message"}
{"nick":"isaacs","message":"  delete[] reinterpret_cast<char*>(req_wrap);","date":"2013-05-01T23:42:53.969Z","type":"message"}
{"nick":"isaacs","message":"ok, i think i get this.","date":"2013-05-01T23:43:04.015Z","type":"message"}
{"nick":"piscisaureus_","message":"yes you need the reinterpret_cast","date":"2013-05-01T23:43:06.753Z","type":"message"}
{"nick":"piscisaureus_","message":"otherwise it will call the WriteWrap destructor again","date":"2013-05-01T23:43:13.210Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-05-01T23:43:17.078Z","type":"message"}
{"nick":"isaacs","message":"ok, so:","date":"2013-05-01T23:43:24.870Z","type":"message"}
{"nick":"piscisaureus_","message":"technically delete req_wrap should work :)","date":"2013-05-01T23:43:35.194Z","type":"message"}
{"nick":"isaacs","message":"size_t StringDecoder::GetStorageSize(Handle<String>, StringEncoding enum)","date":"2013-05-01T23:43:44.484Z","type":"message"}
{"nick":"piscisaureus_","message":"static","date":"2013-05-01T23:43:57.672Z","type":"message"}
{"nick":"isaacs","message":"that tells you how big a thing it's going to need","date":"2013-05-01T23:43:57.819Z","type":"message"}
{"nick":"isaacs","message":"k, whatever.","date":"2013-05-01T23:44:02.483Z","type":"message"}
{"nick":"piscisaureus_","message":"yes","date":"2013-05-01T23:44:06.997Z","type":"message"}
{"nick":"isaacs","message":"then you make the thing, malloc/new, your pleasure","date":"2013-05-01T23:44:14.576Z","type":"message"}
{"nick":"piscisaureus_","message":"compute where the string goes, or just drop in the the malloced area","date":"2013-05-01T23:44:40.392Z","type":"message"}
{"nick":"isaacs","message":"then you call: static size_t StringDecoder::WriteString(Handle<String>, StringEncoding enum, char* data);","date":"2013-05-01T23:45:05.493Z","type":"message"}
{"nick":"piscisaureus_","message":"yes","date":"2013-05-01T23:45:18.220Z","type":"message"}
{"nick":"isaacs","message":"and it writes the bytes to the pointer you give it, and tells you how much it wrote","date":"2013-05-01T23:45:24.363Z","type":"message"}
{"nick":"piscisaureus_","message":"exactly","date":"2013-05-01T23:45:34.105Z","type":"message"}
{"nick":"isaacs","message":"and hten it's on you to delete or free or whatever you do with that.","date":"2013-05-01T23:45:34.463Z","type":"message"}
{"nick":"piscisaureus_","message":"yep","date":"2013-05-01T23:45:40.293Z","type":"message"}
{"nick":"isaacs","message":"and the data can be (storage + sizeof(blerg) + 123) for all it cares.","date":"2013-05-01T23:45:48.032Z","type":"message"}
{"nick":"isaacs","message":"ok, this is simpler.  fuck riaa, man.  always trying to keep the mp3 pirates down.","date":"2013-05-01T23:46:11.053Z","type":"message"}
{"nick":"piscisaureus_","message":"StringDecoder doesn't give a shit, the caller is responsible for allocating a large enough chunk of memory","date":"2013-05-01T23:46:11.274Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-05-01T23:46:15.069Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: this is not a violation of RIAA I think","date":"2013-05-01T23:46:27.402Z","type":"message"}
{"nick":"piscisaureus_","message":"er, raii","date":"2013-05-01T23:46:52.001Z","type":"message"}
{"nick":"isaacs","message":"well, no, because it's not an instantiation","date":"2013-05-01T23:47:21.592Z","type":"message"}
{"nick":"isaacs","message":"and there's no initialization, per se.","date":"2013-05-01T23:47:34.838Z","type":"message"}
{"nick":"isaacs","message":"it's just two related functions on a namespace.","date":"2013-05-01T23:47:41.061Z","type":"message"}
{"nick":"isaacs","message":"no one's sharing mp3s with anybody","date":"2013-05-01T23:48:02.561Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: so StringDecoder just becomes a container for helper functions","date":"2013-05-01T23:48:41.494Z","type":"message"}
{"nick":"isaacs","message":"yep","date":"2013-05-01T23:48:48.050Z","type":"message"}
{"nick":"isaacs","message":"i like it","date":"2013-05-01T23:48:51.522Z","type":"message"}
{"nick":"isaacs","message":"feels more c-like :)","date":"2013-05-01T23:48:55.057Z","type":"message"}
{"nick":"isaacs","message":"simpler.","date":"2013-05-01T23:49:00.129Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: you *might* want to make it instantiated but it should have no fields in that case","date":"2013-05-01T23:49:08.119Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: what would be teh value of that?","date":"2013-05-01T23:49:17.055Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: if you were to implement StringEncoder you would need it :)","date":"2013-05-01T23:49:25.500Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: so if you are planning to do that too then you might want to make the interfaces as similar as possible","date":"2013-05-01T23:49:49.354Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: but we don't need to implement StringEncoder, becuase v8::String::New","date":"2013-05-01T23:49:54.367Z","type":"message"}
{"nick":"piscisaureus_","message":"but, shrug","date":"2013-05-01T23:49:55.094Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well, true, except that the StringDecoder in node does more because it considers multibyte characters at chunk boundaries","date":"2013-05-01T23:50:59.120Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: also note that your StringDecoder does exactly the opposite as what the string_decoder module does ...","date":"2013-05-01T23:51:24.850Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: yeah, that was another thing i realized...","date":"2013-05-01T23:51:45.418Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: require('string_decoder') isn't decoding strings.","date":"2013-05-01T23:51:55.241Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: it's ENcoding strings.","date":"2013-05-01T23:52:00.262Z","type":"message"}
{"nick":"piscisaureus_","message":"it is","date":"2013-05-01T23:52:02.536Z","type":"message"}
{"nick":"piscisaureus_","message":"it is decoding buffer data into strings","date":"2013-05-01T23:52:08.256Z","type":"message"}
{"nick":"piscisaureus_","message":":)","date":"2013-05-01T23:52:11.119Z","type":"message"}
{"nick":"piscisaureus_","message":"anyway, that ship has sailed","date":"2013-05-01T23:52:15.653Z","type":"message"}
{"nick":"isaacs","message":"require('interpret_data_as_string').DataInterpreterAsString()","date":"2013-05-01T23:52:44.754Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-05-01T23:52:49.767Z","type":"message"}
{"nick":"isaacs","message":"tempted to just pick a completely new name for this class.","date":"2013-05-01T23:52:55.661Z","type":"message"}
{"nick":"isaacs","message":"like \"Fred\"","date":"2013-05-01T23:52:57.536Z","type":"message"}
{"nick":"isaacs","message":"Fred's a great name.","date":"2013-05-01T23:53:01.195Z","type":"message"}
{"nick":"piscisaureus_","message":"DecodeBinaryDataToString","date":"2013-05-01T23:53:05.373Z","type":"message"}
{"nick":"isaacs","message":"or maybe Roberta","date":"2013-05-01T23:53:10.597Z","type":"message"}
{"nick":"piscisaureus_","message":"Call it Isaacs1","date":"2013-05-01T23:54:05.818Z","type":"message"}
{"nick":"trevnorris","message":"is there a minimal webserver written in libuv? google is failing me. every example is crap.","date":"2013-05-01T23:55:04.709Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: ping kellabyte","date":"2013-05-01T23:57:41.078Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: thx","date":"2013-05-01T23:57:58.044Z","type":"message"}
{"nick":"isaacs","message":"ircretary: where's kellabyte","date":"2013-05-01T23:58:09.993Z","type":"message"}
{"nick":"ircretary","message":"isaacs: I'm not sure what to do with that command.  Ask for help in PM.","date":"2013-05-01T23:58:10.761Z","type":"message"}
{"nick":"isaacs","message":"ircretary: where is kellabyte","date":"2013-05-01T23:58:16.707Z","type":"message"}
{"nick":"ircretary","message":"isaacs: kellabyte was last seen at 2013-05-01T22:23:16.772Z, joining #libuv","date":"2013-05-01T23:58:17.129Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: or on the twitters","date":"2013-05-01T23:58:28.981Z","type":"message"}
{"nick":"trevnorris","message":"ah, I forget that exists.","date":"2013-05-01T23:58:39.060Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: making a database with http and libuv and stuff, i believe.","date":"2013-05-01T23:58:50.858Z","type":"message"}
{"nick":"isaacs","message":"someone should totally build node.c, btw","date":"2013-05-01T23:59:09.350Z","type":"message"}
{"nick":"isaacs","message":"(and no, libuv is not node.c)","date":"2013-05-01T23:59:13.963Z","type":"message"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-05-01T23:59:25.988Z","type":"quit"}
{"nick":"isaacs","message":"like, with a module system, and easy http bindings, etc.","date":"2013-05-01T23:59:36.889Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: well, that was easy. first thing on his github. :)","date":"2013-05-01T23:59:48.500Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: her :)","date":"2013-05-01T23:59:56.683Z","type":"message"}
