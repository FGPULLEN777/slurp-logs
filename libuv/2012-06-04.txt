{"nick":"c4milo","date":"2012-06-04T00:23:24.781Z","type":"join"}
{"nick":"brson","date":"2012-06-04T00:39:00.759Z","type":"join"}
{"nick":"mikeal1","reason":"Quit: Leaving.","date":"2012-06-04T00:39:10.594Z","type":"quit"}
{"nick":"mikeal","date":"2012-06-04T01:01:16.092Z","type":"join"}
{"nick":"abraxas","date":"2012-06-04T01:07:45.320Z","type":"join"}
{"nick":"loladiro","date":"2012-06-04T01:18:27.132Z","type":"join"}
{"nick":"abraxas_","date":"2012-06-04T01:23:10.081Z","type":"join"}
{"nick":"Aria_","new_nick":"Aria","date":"2012-06-04T01:24:03.763Z","type":"nick"}
{"nick":"abraxas","reason":"Ping timeout: 252 seconds","date":"2012-06-04T01:25:05.036Z","type":"quit"}
{"nick":"abraxas","date":"2012-06-04T01:31:31.203Z","type":"join"}
{"nick":"AvianFlu","date":"2012-06-04T01:32:47.401Z","type":"join"}
{"nick":"abraxas_","reason":"Ping timeout: 265 seconds","date":"2012-06-04T01:33:48.483Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-06-04T01:34:12.696Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2012-06-04T01:36:21.668Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-06-04T01:44:24.586Z","type":"quit"}
{"nick":"ira","reason":"Quit: Computer has gone to sleep.","date":"2012-06-04T02:12:19.186Z","type":"quit"}
{"nick":"Aria","reason":"Remote host closed the connection","date":"2012-06-04T02:22:17.304Z","type":"quit"}
{"nick":"AvianFlu","reason":"Quit: This computer has gone to sleep","date":"2012-06-04T02:27:49.617Z","type":"quit"}
{"nick":"mikeal","date":"2012-06-04T02:52:40.983Z","type":"join"}
{"nick":"brson","date":"2012-06-04T03:11:19.312Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 248 seconds","date":"2012-06-04T03:15:44.319Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-06-04T03:17:06.352Z","type":"quit"}
{"nick":"brson","date":"2012-06-04T03:17:28.337Z","type":"join"}
{"nick":"mikeal","date":"2012-06-04T03:17:37.136Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2012-06-04T03:17:40.274Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 252 seconds","date":"2012-06-04T03:29:23.042Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2012-06-04T03:33:44.881Z","type":"quit"}
{"nick":"AvianFlu","date":"2012-06-04T03:35:36.743Z","type":"join"}
{"nick":"AvianFlu","reason":"Client Quit","date":"2012-06-04T03:39:02.345Z","type":"quit"}
{"nick":"isaacs","date":"2012-06-04T03:41:26.229Z","type":"join"}
{"nick":"mjr_","reason":"Quit: mjr_","date":"2012-06-04T04:03:30.840Z","type":"quit"}
{"nick":"mikeal","date":"2012-06-04T04:10:27.409Z","type":"join"}
{"nick":"mikeal1","date":"2012-06-04T04:29:30.784Z","type":"join"}
{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2012-06-04T04:29:31.014Z","type":"quit"}
{"nick":"mikeal1","reason":"Quit: Leaving.","date":"2012-06-04T04:58:07.808Z","type":"quit"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-06-04T05:03:03.790Z","type":"quit"}
{"nick":"mikeal","date":"2012-06-04T05:58:57.455Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-06-04T06:08:45.634Z","type":"quit"}
{"nick":"mikeal","date":"2012-06-04T06:21:28.895Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-06-04T06:27:54.412Z","type":"quit"}
{"nick":"DrPizza","reason":"Quit: alice.","date":"2012-06-04T06:42:57.414Z","type":"quit"}
{"nick":"stephank","reason":"Quit: *Poof!*","date":"2012-06-04T06:45:01.746Z","type":"quit"}
{"nick":"perezd","reason":"Quit: perezd","date":"2012-06-04T06:57:19.297Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2012-06-04T07:17:39.704Z","type":"quit"}
{"nick":"paddybyers","date":"2012-06-04T07:23:59.718Z","type":"join"}
{"nick":"mikeal","date":"2012-06-04T07:40:07.772Z","type":"join"}
{"nick":"AvianFlu","date":"2012-06-04T07:46:56.697Z","type":"join"}
{"nick":"rendar","date":"2012-06-04T07:58:37.757Z","type":"join"}
{"nick":"AvianFlu","reason":"\"Leaving\"","date":"2012-06-04T08:35:03.260Z","type":"part"}
{"nick":"paddybyers_","date":"2012-06-04T09:22:13.324Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 256 seconds","date":"2012-06-04T09:24:24.641Z","type":"quit"}
{"nick":"paddybyers_","new_nick":"paddybyers","date":"2012-06-04T09:24:24.873Z","type":"nick"}
{"nick":"mmalecki","date":"2012-06-04T09:33:01.045Z","type":"join"}
{"nick":"mmalecki","reason":"Ping timeout: 245 seconds","date":"2012-06-04T09:54:55.578Z","type":"quit"}
{"nick":"mmalecki","date":"2012-06-04T10:04:07.797Z","type":"join"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-06-04T10:05:55.731Z","type":"quit"}
{"nick":"paddybyers","date":"2012-06-04T10:24:34.030Z","type":"join"}
{"nick":"mmalecki","reason":"Ping timeout: 265 seconds","date":"2012-06-04T10:33:41.482Z","type":"quit"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-06-04T10:37:41.955Z","type":"quit"}
{"nick":"piscisaureus_","date":"2012-06-04T10:48:58.168Z","type":"join"}
{"nick":"paddybyers","date":"2012-06-04T11:05:02.036Z","type":"join"}
{"nick":"indutny","message":"piscisaureus_: heya","date":"2012-06-04T11:05:32.791Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: hey","date":"2012-06-04T11:19:00.209Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: updated PR https://github.com/joyent/libuv/pull/441/files","date":"2012-06-04T11:19:09.377Z","type":"message"}
{"nick":"indutny","message":"and a documentation patch","date":"2012-06-04T11:20:10.718Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: https://gist.github.com/b3f097a50b2ae25988ad","date":"2012-06-04T11:20:20.744Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: :-(","date":"2012-06-04T11:20:51.112Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-06-04T11:20:55.333Z","type":"message"}
{"nick":"indutny","message":"fuck","date":"2012-06-04T11:20:56.417Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: \"Open the fd in the child for 0,1,2 stdios:\"","date":"2012-06-04T11:20:58.128Z","type":"message"}
{"nick":"piscisaureus_","message":"c'mon","date":"2012-06-04T11:21:02.859Z","type":"message"}
{"nick":"indutny","message":"sorry, I cutted down sentence","date":"2012-06-04T11:21:03.091Z","type":"message"}
{"nick":"indutny","message":"my wrong","date":"2012-06-04T11:21:06.101Z","type":"message"}
{"nick":"indutny","message":"s/wrong/bad","date":"2012-06-04T11:21:14.550Z","type":"message"}
{"nick":"indutny","message":"2. `'ignore'` - Open the fd in the child for 0,1,2 stdios, do not expose it to","date":"2012-06-04T11:21:21.458Z","type":"message"}
{"nick":"indutny","message":"   parent.","date":"2012-06-04T11:21:21.691Z","type":"message"}
{"nick":"indutny","message":"err","date":"2012-06-04T11:21:25.484Z","type":"message"}
{"nick":"indutny","message":"s/do/but do/g","date":"2012-06-04T11:21:29.230Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: ok?","date":"2012-06-04T11:21:41.116Z","type":"message"}
{"nick":"piscisaureus_","message":"nah","date":"2012-06-04T11:21:58.263Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: well, that's actually your text","date":"2012-06-04T11:22:21.216Z","type":"message"}
{"nick":"indutny","message":"almost","date":"2012-06-04T11:22:23.298Z","type":"message"}
{"nick":"piscisaureus_","message":"really?","date":"2012-06-04T11:22:27.960Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: let me do the doc patch","date":"2012-06-04T11:23:34.649Z","type":"message"}
{"nick":"indutny","message":"oook","date":"2012-06-04T11:23:43.234Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-06-04T11:23:53.102Z","type":"message"}
{"nick":"indutny","message":"btw, that's not yours","date":"2012-06-04T11:23:57.262Z","type":"message"}
{"nick":"piscisaureus_","message":"Note: A ChildProcess may have at most *one* IPC stdio file descriptor.","date":"2012-06-04T11:37:22.133Z","type":"message"}
{"nick":"piscisaureus_","message":"     Setting this option enables the ChildProcess.send() method.  If","date":"2012-06-04T11:37:22.376Z","type":"message"}
{"nick":"piscisaureus_","message":"</3","date":"2012-06-04T11:37:23.777Z","type":"message"}
{"nick":"piscisaureus_","message":"too much magic","date":"2012-06-04T11:37:27.065Z","type":"message"}
{"nick":"indutny","message":"you think so?","date":"2012-06-04T11:44:03.299Z","type":"message"}
{"nick":"indutny","message":"I think it's quite useful","date":"2012-06-04T11:44:27.724Z","type":"message"}
{"nick":"piscisaureus_","message":"useful - yes","date":"2012-06-04T11:50:50.219Z","type":"message"}
{"nick":"piscisaureus_","message":"but very magical","date":"2012-06-04T11:50:54.101Z","type":"message"}
{"nick":"piscisaureus_","message":"it would be better to make it explicit - e.g. process.setChannel(cp.fds[2]) or something","date":"2012-06-04T11:51:16.541Z","type":"message"}
{"nick":"indutny","message":"well, we'll have enough time to consider that :)","date":"2012-06-04T11:52:33.299Z","type":"message"}
{"nick":"indutny","message":"but I think current API is good enough for 0.8.0","date":"2012-06-04T11:52:43.315Z","type":"message"}
{"nick":"piscisaureus_","message":"ngist y u no work","date":"2012-06-04T12:08:39.952Z","type":"message"}
{"nick":"indutny","message":"hahaha","date":"2012-06-04T12:09:36.815Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: https://gist.github.com/2867969","date":"2012-06-04T12:12:07.081Z","type":"message"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2012-06-04T12:13:29.851Z","type":"quit"}
{"nick":"abraxas","date":"2012-06-04T12:14:08.983Z","type":"join"}
{"nick":"indutny","message":"piscisaureus_: looking","date":"2012-06-04T12:15:29.201Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: lgtm","date":"2012-06-04T12:15:59.230Z","type":"message"}
{"nick":"indutny","message":"much clearer","date":"2012-06-04T12:16:04.088Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: thanks :-)","date":"2012-06-04T12:16:15.658Z","type":"message"}
{"nick":"indutny","message":"hahaha","date":"2012-06-04T12:16:19.485Z","type":"message"}
{"nick":"CIA-112","message":"\u0002node:\u000f \u000303Bert Belder\u000f \u000307master\u000f * r\u00020699f5b\u000f \u000310\u000f/ doc/api/child_process.markdown \u0002:\u000f Improve child process stdio documentation - http://git.io/DRpczA","date":"2012-06-04T12:18:21.544Z","type":"message"}
{"nick":"CIA-112","message":"\u0002node:\u000f \u000303Jeroen Janssen\u000f \u000307master\u000f * r\u00027161ecd\u000f \u000310\u000f/ tools/msvs/msi/product.wxs \u0002:\u000f windows/msi: fix adding node to PATH - http://git.io/igNYyw","date":"2012-06-04T12:18:22.008Z","type":"message"}
{"nick":"abraxas","reason":"Ping timeout: 250 seconds","date":"2012-06-04T12:18:37.042Z","type":"quit"}
{"nick":"CIA-112","message":"\u0002node:\u000f \u000303Bert Belder\u000f \u000307reviewme\u000f * r\u00027614f15\u000f \u000310\u000f/ tools/msvs/msi/product.wxs \u0002:\u000f windows/msi: shorten manufacturer-based registry key (+966 more commits...) - http://git.io/DHi-pw","date":"2012-06-04T12:24:14.693Z","type":"message"}
{"nick":"bnoordhuis","date":"2012-06-04T12:43:46.293Z","type":"join"}
{"nick":"bnoordhuis","message":"http://blog.regehr.org/archives/721 <- 18 out of 20... c is hard","date":"2012-06-04T12:44:03.443Z","type":"message"}
{"nick":"bnoordhuis","message":"not to say a harsh mistress","date":"2012-06-04T12:44:26.510Z","type":"message"}
{"nick":"piscisaureus_","message":"lemme try that","date":"2012-06-04T12:48:53.232Z","type":"message"}
{"nick":"theCole","date":"2012-06-04T12:49:27.981Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: it is much easier if you correctly read the explanations before proceeding to the next question","date":"2012-06-04T12:51:28.506Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: heya","date":"2012-06-04T12:52:40.138Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: hoya","date":"2012-06-04T12:52:45.813Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: wanna review my stdio PR for uv?","date":"2012-06-04T12:52:55.402Z","type":"message"}
{"nick":"indutny","message":" /dev/null stuff","date":"2012-06-04T12:53:00.088Z","type":"message"}
{"nick":"bnoordhuis","message":"already reviewing it","date":"2012-06-04T12:53:01.355Z","type":"message"}
{"nick":"piscisaureus_","message":"also","date":"2012-06-04T12:53:29.179Z","type":"message"}
{"nick":"piscisaureus_","message":"\"What does the expression -1L > 1U evaluate to on x86-64? On x86?\"","date":"2012-06-04T12:53:32.077Z","type":"message"}
{"nick":"piscisaureus_","message":"depends on the platform :-p","date":"2012-06-04T12:53:36.176Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-06-04T12:53:41.733Z","type":"message"}
{"nick":"piscisaureus_","message":"on windows x86 and x64 will be the same","date":"2012-06-04T12:53:53.945Z","type":"message"}
{"nick":"indutny","message":"yeah, that's quite interesting","date":"2012-06-04T12:53:54.305Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: assume LP64","date":"2012-06-04T12:54:25.394Z","type":"message"}
{"nick":"bnoordhuis","message":"it's in the introduction","date":"2012-06-04T12:54:31.000Z","type":"message"}
{"nick":"piscisaureus_","message":"ah, right","date":"2012-06-04T12:54:36.639Z","type":"message"}
{"nick":"piscisaureus_","message":"easy, then :-)","date":"2012-06-04T12:54:42.158Z","type":"message"}
{"nick":"piscisaureus_","message":"What does the expression SCHAR_MAX == CHAR_MAX evaluate to? <-- bah","date":"2012-06-04T12:56:36.457Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, depends on the implementation","date":"2012-06-04T12:57:34.881Z","type":"message"}
{"nick":"piscisaureus_","message":"I have to admit that I have to think very deeply about all these question","date":"2012-06-04T12:58:08.832Z","type":"message"}
{"nick":"piscisaureus_","message":"dangerous","date":"2012-06-04T12:58:10.593Z","type":"message"}
{"nick":"piscisaureus_","message":"I actually made 4 errors","date":"2012-06-04T13:05:08.048Z","type":"message"}
{"nick":"piscisaureus_","message":"Some of them really stupid","date":"2012-06-04T13:05:26.633Z","type":"message"}
{"nick":"bnoordhuis","message":"the ones that tripped me up are type promotion in shifts","date":"2012-06-04T13:05:53.511Z","type":"message"}
{"nick":"piscisaureus_","message":"yeah that one was a genuine error of mine","date":"2012-06-04T13:06:07.071Z","type":"message"}
{"nick":"bnoordhuis","message":"particularly that unsigned short is promoted to signed int... i mean, why?","date":"2012-06-04T13:06:17.001Z","type":"message"}
{"nick":"piscisaureus_","message":"yes, that's super lame","date":"2012-06-04T13:06:29.858Z","type":"message"}
{"nick":"piscisaureus_","message":"c should just preserve unsigned-ness","date":"2012-06-04T13:06:39.608Z","type":"message"}
{"nick":"bnoordhuis","message":"well, i suppose there's a reason it works like that","date":"2012-06-04T13:06:54.804Z","type":"message"}
{"nick":"bnoordhuis","message":"but i'm not able to come up with one myself :)","date":"2012-06-04T13:07:05.028Z","type":"message"}
{"nick":"piscisaureus_","message":"To be honest, I also didn't get (x + 1 - 1) wrong","date":"2012-06-04T13:07:20.740Z","type":"message"}
{"nick":"piscisaureus_","message":"er, I got it wrong","date":"2012-06-04T13:07:28.206Z","type":"message"}
{"nick":"piscisaureus_","message":"If I saw that code I would be scared and do it differently I think","date":"2012-06-04T13:07:40.902Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, that's easy - just substitute x with INT_MIN or INT_MAX","date":"2012-06-04T13:07:46.492Z","type":"message"}
{"nick":"piscisaureus_","message":"yes, but I assumed (hoped) that there would be some constant folding involved","date":"2012-06-04T13:08:20.267Z","type":"message"}
{"nick":"piscisaureus_","message":"I mean,","date":"2012-06-04T13:08:33.665Z","type":"message"}
{"nick":"piscisaureus_","message":"char foo[4 + 1 - 1] is also legal right?","date":"2012-06-04T13:08:33.896Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2012-06-04T13:09:17.215Z","type":"message"}
{"nick":"bnoordhuis","message":"but there's nothing stopping an implementation from doing mov 4, r0; add 1, r0; add 1, r0; add r0, rsp","date":"2012-06-04T13:09:52.033Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yes. Luckily that will just work on any real architecture :-)","date":"2012-06-04T13:10:16.943Z","type":"message"}
{"nick":"bnoordhuis","message":"heh, true enough","date":"2012-06-04T13:10:22.732Z","type":"message"}
{"nick":"bnoordhuis","message":"there is one place where the spec mandates constant folding but i forgot where","date":"2012-06-04T13:10:36.369Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: also, this one: Assume is x is int. Is (short x) + 1 defined for ...","date":"2012-06-04T13:10:44.337Z","type":"message"}
{"nick":"bnoordhuis","message":"you mean (short)x + 1?","date":"2012-06-04T13:10:58.454Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: he says, it's always defined","date":"2012-06-04T13:11:01.526Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yeah","date":"2012-06-04T13:11:03.857Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but is it really defined when x == INT_MAX  ?","date":"2012-06-04T13:11:13.710Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2012-06-04T13:11:40.357Z","type":"message"}
{"nick":"piscisaureus_","message":"so how does the spec define (short)INT_MAX ?","date":"2012-06-04T13:12:00.752Z","type":"message"}
{"nick":"piscisaureus_","message":"I mean, if overflow isn't defined, how can truncation be defined?","date":"2012-06-04T13:12:17.251Z","type":"message"}
{"nick":"piscisaureus_","message":"The explanation is rather unsatisfactory","date":"2012-06-04T13:12:54.367Z","type":"message"}
{"nick":"piscisaureus_","message":"Question 18 Explanation:","date":"2012-06-04T13:12:55.635Z","type":"message"}
{"nick":"piscisaureus_","message":"Any value of type int, after being truncated to short and then promoted back to int, can be safely incremented as long as the int type is wider than the short type.","date":"2012-06-04T13:12:55.862Z","type":"message"}
{"nick":"piscisaureus_","message":"Yeah, sure","date":"2012-06-04T13:13:01.078Z","type":"message"}
{"nick":"bnoordhuis","message":"it just works that way :)","date":"2012-06-04T13:13:34.934Z","type":"message"}
{"nick":"piscisaureus_","message":"I know, but that was the part I knew","date":"2012-06-04T13:13:54.750Z","type":"message"}
{"nick":"piscisaureus_","message":"I was wondering about the truncation","date":"2012-06-04T13:14:07.488Z","type":"message"}
{"nick":"piscisaureus_","message":"how is (short)INT_MIN defined ?","date":"2012-06-04T13:14:22.914Z","type":"message"}
{"nick":"bnoordhuis","message":"as SHORT_MIN","date":"2012-06-04T13:14:50.551Z","type":"message"}
{"nick":"CIA-112","message":"\u0002node:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u0002f0a561f\u000f \u000310\u000f/ lib/net.js \u0002:\u000f net: rename flag FLAG_SHUTDOWNQUED - http://git.io/ybeJAA","date":"2012-06-04T13:16:46.790Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: not really no","date":"2012-06-04T13:17:17.545Z","type":"message"}
{"nick":"bnoordhuis","message":"no?","date":"2012-06-04T13:17:25.386Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: msvc makes it 0","date":"2012-06-04T13:17:26.452Z","type":"message"}
{"nick":"bnoordhuis","message":"hmm, so does gcc","date":"2012-06-04T13:19:17.423Z","type":"message"}
{"nick":"mmalecki","date":"2012-06-04T13:19:22.731Z","type":"join"}
{"nick":"bnoordhuis","message":"let me get my copy of the spec","date":"2012-06-04T13:19:32.505Z","type":"message"}
{"nick":"piscisaureus_","message":"int a = (short) INT_MIN; // 0","date":"2012-06-04T13:19:41.762Z","type":"message"}
{"nick":"piscisaureus_","message":"  int b = (short) INT_MAX; // -1","date":"2012-06-04T13:19:41.991Z","type":"message"}
{"nick":"piscisaureus_","message":"  int c = (unsigned short) INT_MIN; // 0","date":"2012-06-04T13:19:41.992Z","type":"message"}
{"nick":"piscisaureus_","message":"  int d = (unsigned short) INT_MAX; // USHORT_MAX","date":"2012-06-04T13:19:41.992Z","type":"message"}
{"nick":"ira","date":"2012-06-04T13:20:24.352Z","type":"join"}
{"nick":"bnoordhuis","message":"Otherwise, the new type is signed and the value cannot be represented in it; either the result is implementation-defined or an implementation-defined signal is raised.","date":"2012-06-04T13:20:54.153Z","type":"message"}
{"nick":"bnoordhuis","message":"so the answer is 'it depends'...","date":"2012-06-04T13:21:37.041Z","type":"message"}
{"nick":"indutny","message":"the whole libuv core team was freezed by C quiz","date":"2012-06-04T13:21:39.180Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: this is of utmost importance, someone is being wrong on the internet!","date":"2012-06-04T13:22:01.460Z","type":"message"}
{"nick":"indutny","message":"hahahahahaha","date":"2012-06-04T13:22:09.783Z","type":"message"}
{"nick":"piscisaureus_","message":"yep","date":"2012-06-04T13:22:23.858Z","type":"message"}
{"nick":"piscisaureus_","message":"everything on the internet is true","date":"2012-06-04T13:22:30.584Z","type":"message"}
{"nick":"piscisaureus_","message":"this is really shocking","date":"2012-06-04T13:22:34.055Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I wasn't the first one: http://blog.regehr.org/archives/721#comment-4341","date":"2012-06-04T13:22:57.422Z","type":"message"}
{"nick":"piscisaureus_","message":":-)","date":"2012-06-04T13:22:58.168Z","type":"message"}
{"nick":"bnoordhuis","message":"right","date":"2012-06-04T13:23:33.090Z","type":"message"}
{"nick":"piscisaureus_","message":"http://blog.regehr.org/archives/721#comment-4348 <-- boo!","date":"2012-06-04T13:23:45.483Z","type":"message"}
{"nick":"piscisaureus_","message":":-p","date":"2012-06-04T13:23:48.551Z","type":"message"}
{"nick":"piscisaureus_","message":"ok, to work","date":"2012-06-04T13:23:50.903Z","type":"message"}
{"nick":"theCole","reason":"Quit: theCole","date":"2012-06-04T13:25:37.072Z","type":"quit"}
{"nick":"piscisaureus_","message":"The C spec should just have mandated the use of 2s complement","date":"2012-06-04T13:26:42.873Z","type":"message"}
{"nick":"piscisaureus_","message":"then all this undefined bullshit wasn't necessary","date":"2012-06-04T13:26:56.875Z","type":"message"}
{"nick":"indutny","message":"so far, brainfuck's spec is the clearest one in the world","date":"2012-06-04T13:27:03.453Z","type":"message"}
{"nick":"c4milo","date":"2012-06-04T13:27:07.721Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: wanna merge my patch in libuv?","date":"2012-06-04T13:27:49.093Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: https://github.com/joyent/libuv/issues/443","date":"2012-06-04T13:28:43.728Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: we don't support this, although the ECONNREFUSED error is odd","date":"2012-06-04T13:29:06.199Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I think we should do that tho - if we queue all writes in libuv then we can remove the connect_queue from net.js","date":"2012-06-04T13:29:34.680Z","type":"message"}
{"nick":"DrPizza","date":"2012-06-04T13:29:45.565Z","type":"join"}
{"nick":"rendar","reason":"Ping timeout: 245 seconds","date":"2012-06-04T13:34:37.092Z","type":"quit"}
{"nick":"rendar","date":"2012-06-04T13:37:14.005Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: https://github.com/bnoordhuis/libuv/commit/b96ed68","date":"2012-06-04T14:00:42.095Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: and yes, i agree we should queue up writes","date":"2012-06-04T14:01:12.354Z","type":"message"}
{"nick":"bnoordhuis","message":"*if not connected yet","date":"2012-06-04T14:01:24.104Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: the patch is probably not so invasive on unix","date":"2012-06-04T14:01:36.403Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: on windows this equals $work :-)","date":"2012-06-04T14:01:48.963Z","type":"message"}
{"nick":"bnoordhuis","message":"yes? what needs to be changed?","date":"2012-06-04T14:01:58.544Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: well we don't queue anything in userspace on windows atm","date":"2012-06-04T14:02:11.391Z","type":"message"}
{"nick":"bnoordhuis","message":"shall i land that test as a gentle reminder?","date":"2012-06-04T14:02:16.435Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: well, it's no prio. Maybe land it and disable it on windows","date":"2012-06-04T14:02:47.930Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: and create an issue that says we should do it :-)","date":"2012-06-04T14:03:03.380Z","type":"message"}
{"nick":"mmalecki","reason":"Quit: leaving","date":"2012-06-04T14:08:46.448Z","type":"quit"}
{"nick":"CIA-112","message":"\u0002libuv:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u0002b96ed68\u000f \u000310\u000f/ (3 files in 2 dirs)\u0002:\u000f test: add TCP connect error + write test - http://git.io/0YizqQ","date":"2012-06-04T14:09:01.252Z","type":"message"}
{"nick":"CIA-112","message":"\u0002libuv:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u000297801c6\u000f \u000310\u000f/ test/test-tcp-dont-connect-after-write.c \u0002:\u000f test: disable tcp_dont_connect_after_write on windows - http://git.io/UellAA","date":"2012-06-04T14:09:01.489Z","type":"message"}
{"nick":"travis-ci","date":"2012-06-04T14:11:09.518Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#376 (master - 97801c6 : Ben Noordhuis): The build is still failing.","date":"2012-06-04T14:11:09.751Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/c76c206...97801c6","date":"2012-06-04T14:11:09.752Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1525090","date":"2012-06-04T14:11:09.752Z","type":"message"}
{"nick":"travis-ci","date":"2012-06-04T14:11:09.752Z","type":"part"}
{"nick":"bnoordhuis","message":"indutny: can you rebase your pr against master? bert already landed part of it","date":"2012-06-04T14:12:52.961Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ok","date":"2012-06-04T14:12:58.934Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: tests are already here, right?","date":"2012-06-04T14:13:24.682Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2012-06-04T14:13:28.697Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: done","date":"2012-06-04T14:14:37.879Z","type":"message"}
{"nick":"bnoordhuis","message":"what's kind of odd is that the tests were already passing...","date":"2012-06-04T14:15:36.807Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: probably because node doesn't set CLOEXEC on fd 0-2","date":"2012-06-04T14:16:12.905Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: so the child just inherits it from the parent","date":"2012-06-04T14:16:23.762Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: the tests *did* catch a problem on windows (before I patched it)","date":"2012-06-04T14:16:42.977Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: well, they ain't passing actually","date":"2012-06-04T14:21:48.898Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: this test just don't cover unix error","date":"2012-06-04T14:21:58.592Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: before my patch, child was outputing to parent's stdio","date":"2012-06-04T14:22:19.365Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: so output was visible in tty","date":"2012-06-04T14:22:29.190Z","type":"message"}
{"nick":"indutny","message":"I think testing that case is quite complex for such a simple issue","date":"2012-06-04T14:23:01.110Z","type":"message"}
{"nick":"CIA-112","message":"\u0002libuv:\u000f \u000303Fedor Indutny\u000f \u000307master\u000f * r\u0002a30e45f\u000f \u000310\u000f/ src/unix/process.c \u0002:\u000f unix: remap fds 0-2 to /dev/null if ignore flag set - http://git.io/IKRJOA","date":"2012-06-04T14:23:22.588Z","type":"message"}
{"nick":"indutny","message":"good","date":"2012-06-04T14:24:39.651Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2012-06-04T14:24:41.049Z","type":"message"}
{"nick":"bnoordhuis","message":"https://github.com/joyent/node/issues/3370 <- wut?","date":"2012-06-04T14:24:47.935Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2012-06-04T14:25:50.250Z","type":"message"}
{"nick":"indutny","message":"forever in node","date":"2012-06-04T14:27:00.117Z","type":"message"}
{"nick":"travis-ci","date":"2012-06-04T14:33:35.832Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#377 (master - a30e45f : Fedor Indutny): The build is still failing.","date":"2012-06-04T14:33:35.832Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/97801c6...a30e45f","date":"2012-06-04T14:33:35.832Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1525304","date":"2012-06-04T14:33:35.832Z","type":"message"}
{"nick":"travis-ci","date":"2012-06-04T14:33:35.832Z","type":"part"}
{"nick":"bnoordhuis","message":"i learned something today... write(2) can return ECONNREFUSED","date":"2012-06-04T14:35:06.251Z","type":"message"}
{"nick":"tjfontaine","message":"under what condition?","date":"2012-06-04T14:35:48.016Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: connect() returning EINPROGRESS, then doing a write immediately afterwards","date":"2012-06-04T14:36:41.563Z","type":"message"}
{"nick":"tjfontaine","message":"interesting","date":"2012-06-04T14:36:51.753Z","type":"message"}
{"nick":"bnoordhuis","message":"it is, isn't it? here is what it looks like:","date":"2012-06-04T14:37:04.446Z","type":"message"}
{"nick":"tjfontaine","message":"this is that queue conversation you were having earlier","date":"2012-06-04T14:37:04.811Z","type":"message"}
{"nick":"bnoordhuis","message":"connect(5, {sa_family=AF_INET, sin_port=htons(9123), sin_addr=inet_addr(\"127.0.0.1\")}, 16) = -1 EINPROGRESS (Operation now in progress)","date":"2012-06-04T14:37:05.169Z","type":"message"}
{"nick":"bnoordhuis","message":"write(5, \"TEST\", 4)                     = -1 ECONNREFUSED (Connection refused)","date":"2012-06-04T14:37:05.396Z","type":"message"}
{"nick":"bnoordhuis","message":"getsockopt(5, SOL_SOCKET, SO_ERROR, [-7100142103535026176], [4]) = 0","date":"2012-06-04T14:37:05.396Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: yes","date":"2012-06-04T14:37:12.824Z","type":"message"}
{"nick":"tjfontaine","message":"well that's helpful knowledge to have :)","date":"2012-06-04T14:37:53.572Z","type":"message"}
{"nick":"bitprobe","date":"2012-06-04T14:42:47.487Z","type":"join"}
{"nick":"isaacs","date":"2012-06-04T14:46:57.336Z","type":"join"}
{"nick":"ibc","date":"2012-06-04T14:55:15.982Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: uv_buflen_t: yay or nay ?","date":"2012-06-04T15:01:21.089Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: buflen_t would be 32-bit on windows, always","date":"2012-06-04T15:01:33.391Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: yay if you tell me why you need it","date":"2012-06-04T15:04:55.914Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: well I am trying to squash size_t -> uint conversion warnings","date":"2012-06-04T15:05:18.423Z","type":"message"}
{"nick":"piscisaureus_","message":"in libuv","date":"2012-06-04T15:05:21.138Z","type":"message"}
{"nick":"piscisaureus_","message":"but the bottom line is that if someone does uv_buf_init(buf, a_very_big_value) there's not much we can do, except abort","date":"2012-06-04T15:05:54.053Z","type":"message"}
{"nick":"bnoordhuis","message":"what about making it unsigned long or unsigned int?","date":"2012-06-04T15:06:02.538Z","type":"message"}
{"nick":"mmalecki","date":"2012-06-04T15:06:04.586Z","type":"join"}
{"nick":"bnoordhuis","message":"i don't like typedefs very much","date":"2012-06-04T15:06:07.063Z","type":"message"}
{"nick":"piscisaureus_","message":"oh, I wouldn't mind that, either","date":"2012-06-04T15:06:17.565Z","type":"message"}
{"nick":"piscisaureus_","message":"uint32_t would be okay I think","date":"2012-06-04T15:06:29.305Z","type":"message"}
{"nick":"piscisaureus_","message":"or unsigned int","date":"2012-06-04T15:06:38.345Z","type":"message"}
{"nick":"bnoordhuis","message":"let's go with unsigned int then","date":"2012-06-04T15:06:56.510Z","type":"message"}
{"nick":"piscisaureus_","message":"ok","date":"2012-06-04T15:07:00.397Z","type":"message"}
{"nick":"piscisaureus_","message":"kewl","date":"2012-06-04T15:07:01.842Z","type":"message"}
{"nick":"bnoordhuis","message":"in case someone wants to compile libuv on a 16 bits platform :)","date":"2012-06-04T15:07:07.809Z","type":"message"}
{"nick":"piscisaureus_","message":"hahaha lol","date":"2012-06-04T15:07:15.417Z","type":"message"}
{"nick":"piscisaureus_","message":"I don't think that would work in any meaningful way","date":"2012-06-04T15:07:32.228Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't think so either :)","date":"2012-06-04T15:07:43.471Z","type":"message"}
{"nick":"piscisaureus_","action":"dusts off his old watcom compiler","date":"2012-06-04T15:07:43.698Z","type":"action"}
{"nick":"bnoordhuis","message":"i need to finish the cp/m port","date":"2012-06-04T15:08:00.290Z","type":"message"}
{"nick":"piscisaureus_","message":"plan9, dude","date":"2012-06-04T15:08:08.857Z","type":"message"}
{"nick":"piscisaureus_","message":"even google go has plan9 support","date":"2012-06-04T15:08:21.770Z","type":"message"}
{"nick":"bnoordhuis","message":"heh, really?","date":"2012-06-04T15:08:34.714Z","type":"message"}
{"nick":"piscisaureus_","message":"that's gotta put our conceptual integrity to the test","date":"2012-06-04T15:08:35.020Z","type":"message"}
{"nick":"bnoordhuis","message":"i've got plan9 running in a vm actually","date":"2012-06-04T15:08:50.145Z","type":"message"}
{"nick":"piscisaureus_","message":"well, I am not sure it actually works","date":"2012-06-04T15:08:58.254Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll concentrate all my efforts on the p9 port from now on","date":"2012-06-04T15:09:07.310Z","type":"message"}
{"nick":"piscisaureus_","message":"but I saw plan9 code in the source tree","date":"2012-06-04T15:09:07.656Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, maybe rob stole some p9 libs","date":"2012-06-04T15:09:31.814Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: hey","date":"2012-06-04T15:10:20.228Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: so, how about that Cracow thing?","date":"2012-06-04T15:10:46.295Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: hey maciej","date":"2012-06-04T15:11:19.794Z","type":"message"}
{"nick":"bnoordhuis","message":"sorry, i can't","date":"2012-06-04T15:11:22.506Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: no problem","date":"2012-06-04T15:11:32.899Z","type":"message"}
{"nick":"bnoordhuis","message":"i would have liked to","date":"2012-06-04T15:11:40.108Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: yeah, I mean, I totally understand","date":"2012-06-04T15:11:56.782Z","type":"message"}
{"nick":"bnoordhuis","message":"next time, ask me two or three months in advance :)","date":"2012-06-04T15:12:18.304Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: so I guess 2 weeks doesn't cut it, eh ;) ?","date":"2012-06-04T15:12:54.560Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: yeah, too short notice","date":"2012-06-04T15:14:04.427Z","type":"message"}
{"nick":"CIA-112","message":"\u0002libuv:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u0002cb9ca14\u000f \u000310\u000f/ src/unix/stream.c \u0002:\u000f unix: queue write reqs if stream is not connected - http://git.io/o8RIVA","date":"2012-06-04T15:14:27.300Z","type":"message"}
{"nick":"CIA-112","message":"\u0002libuv:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u000276fa163\u000f \u000310\u000f/ test/test-tcp-dont-connect-after-write.c \u0002:\u000f test: add a 'write before connect' test - http://git.io/c-9x0w","date":"2012-06-04T15:14:27.527Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: ^ your turn now :)","date":"2012-06-04T15:15:47.949Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: are they off on windows ?","date":"2012-06-04T15:16:28.513Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2012-06-04T15:16:45.926Z","type":"message"}
{"nick":"bnoordhuis","message":"for now","date":"2012-06-04T15:16:51.713Z","type":"message"}
{"nick":"piscisaureus_","message":"kewl","date":"2012-06-04T15:16:52.274Z","type":"message"}
{"nick":"ibc","message":"hi, the write-after-connect issue is fixed (thanks a lot). I expected that maybe the fix could also solve another issue I've reported  right now, but it does not:  https://github.com/joyent/libuv/issues/445","date":"2012-06-04T15:20:46.857Z","type":"message"}
{"nick":"CIA-112","message":"\u0002libuv:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u0002ed73adb\u000f \u000310\u000f/ (test/test-list.h test/test-tcp-dont-connect-after-write.c)\u0002:\u000f test: rename test tcp_dont_connect_after_write - http://git.io/3eBGPw","date":"2012-06-04T15:21:02.525Z","type":"message"}
{"nick":"bnoordhuis","message":"ibc: yeah, i saw. i'll look into it","date":"2012-06-04T15:21:07.856Z","type":"message"}
{"nick":"ibc","message":"this is more \"shutdown-after-write-after-connect\" :)","date":"2012-06-04T15:21:10.507Z","type":"message"}
{"nick":"ibc","message":"thanks a lot","date":"2012-06-04T15:21:17.718Z","type":"message"}
{"nick":"ibc","message":"hi, is handle->write_queue_size \"public\"? I mean, will it be forever?","date":"2012-06-04T15:27:56.644Z","type":"message"}
{"nick":"piscisaureus_","message":"hmm","date":"2012-06-04T15:28:43.862Z","type":"message"}
{"nick":"piscisaureus_","message":"int ares_expand_name(const unsigned char *encoded, const unsigned char *abuf,","date":"2012-06-04T15:29:52.228Z","type":"message"}
{"nick":"piscisaureus_","message":"                     int alen, char **s, long *enclen)","date":"2012-06-04T15:29:52.228Z","type":"message"}
{"nick":"piscisaureus_","message":"ffs, `long *enclen` ?","date":"2012-06-04T15:30:05.984Z","type":"message"}
{"nick":"CIA-112","message":"\u0002libuv:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u0002d080704\u000f \u000310\u000f/ (4 files in 2 dirs)\u0002:\u000f test: rename test tcp_dont_connect_after_write - http://git.io/WaUucA","date":"2012-06-04T15:37:19.140Z","type":"message"}
{"nick":"bnoordhuis","action":"force-pushed","date":"2012-06-04T15:37:34.677Z","type":"action"}
{"nick":"piscisaureus_","message":"What a stupid pattern","date":"2012-06-04T15:38:53.658Z","type":"message"}
{"nick":"piscisaureus_","message":"int uv_expath(char* buffer, size_t size) {","date":"2012-06-04T15:39:26.050Z","type":"message"}
{"nick":"piscisaureus_","message":"  ...","date":"2012-06-04T15:39:26.281Z","type":"message"}
{"nick":"piscisaureus_","message":"  buffer[size] = '\\0';","date":"2012-06-04T15:39:26.281Z","type":"message"}
{"nick":"piscisaureus_","message":"}","date":"2012-06-04T15:39:26.281Z","type":"message"}
{"nick":"piscisaureus_","message":"how defensive programming can kill you","date":"2012-06-04T15:39:36.438Z","type":"message"}
{"nick":"bnoordhuis","message":"how so?","date":"2012-06-04T15:42:51.649Z","type":"message"}
{"nick":"piscisaureus_","message":"well","date":"2012-06-04T15:48:19.439Z","type":"message"}
{"nick":"piscisaureus_","message":"end the function with an out-of-bounds write","date":"2012-06-04T15:48:28.368Z","type":"message"}
{"nick":"piscisaureus_","message":"not so nice heh","date":"2012-06-04T15:48:30.768Z","type":"message"}
{"nick":"travis-ci","date":"2012-06-04T15:50:08.068Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#378 (master - 76fa163 : Ben Noordhuis): The build is still failing.","date":"2012-06-04T15:50:08.296Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/a30e45f...76fa163","date":"2012-06-04T15:50:08.296Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1525860","date":"2012-06-04T15:50:08.296Z","type":"message"}
{"nick":"travis-ci","date":"2012-06-04T15:50:08.296Z","type":"part"}
{"nick":"travis-ci","date":"2012-06-04T15:50:30.052Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#379 (master - ed73adb : Ben Noordhuis): The build is still failing.","date":"2012-06-04T15:50:30.286Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/76fa163...ed73adb","date":"2012-06-04T15:50:30.286Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1525963","date":"2012-06-04T15:50:30.286Z","type":"message"}
{"nick":"travis-ci","date":"2012-06-04T15:50:30.286Z","type":"part"}
{"nick":"travis-ci","date":"2012-06-04T15:59:30.013Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#380 (master - d080704 : Ben Noordhuis): The build is still failing.","date":"2012-06-04T15:59:30.248Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/ed73adb...d080704","date":"2012-06-04T15:59:30.248Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1526129","date":"2012-06-04T15:59:30.248Z","type":"message"}
{"nick":"travis-ci","date":"2012-06-04T15:59:30.248Z","type":"part"}
