{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-09-30T00:00:00.685Z","type":"quit"}
{"nick":"ircretary","date":"2013-09-30T00:00:08.969Z","type":"join"}
{"nick":"st_luke","reason":"Read error: Connection reset by peer","date":"2013-09-30T00:07:56.572Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-09-30T00:32:13.071Z","type":"quit"}
{"nick":"amartens","date":"2013-09-30T00:48:24.793Z","type":"join"}
{"nick":"c4milo","date":"2013-09-30T01:02:53.387Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-30T01:15:13.810Z","type":"quit"}
{"nick":"loladiro","date":"2013-09-30T01:16:29.547Z","type":"join"}
{"nick":"dsantiago","reason":"Quit: Computer has gone to sleep.","date":"2013-09-30T01:16:59.747Z","type":"quit"}
{"nick":"dsantiago","date":"2013-09-30T01:18:10.974Z","type":"join"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-09-30T01:24:24.833Z","type":"quit"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-09-30T01:37:15.910Z","type":"quit"}
{"nick":"amartens","date":"2013-09-30T01:40:39.865Z","type":"join"}
{"nick":"abraxas","date":"2013-09-30T01:43:20.803Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-30T01:51:49.314Z","type":"nick"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-09-30T01:59:22.737Z","type":"quit"}
{"nick":"loladiro","date":"2013-09-30T02:11:26.318Z","type":"join"}
{"nick":"EhevuTov","date":"2013-09-30T02:24:46.400Z","type":"join"}
{"nick":"trevnorris","message":"othiym23: only place where async listeners will not capture is crypto.pbkdf2() and process.exit()","date":"2013-09-30T02:38:21.883Z","type":"message"}
{"nick":"trevnorris","message":"and coolio. i'll take a look.","date":"2013-09-30T02:38:30.638Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-30T03:12:55.181Z","type":"nick"}
{"nick":"st_luke","date":"2013-09-30T03:17:05.042Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-09-30T03:17:19.124Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-09-30T03:19:37.124Z","type":"quit"}
{"nick":"inolen","date":"2013-09-30T03:20:09.548Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-09-30T03:24:17.413Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-30T03:37:45.236Z","type":"nick"}
{"nick":"trevnorris","message":"othiym23: well, i'm fairly confident that I won't be able to work domains out of core until v0.13. but as it is, async listener doesn't add any performance hit, so hopefully everyone's cool w/ it going in.","date":"2013-09-30T03:37:47.166Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: I thought it'd be fairly trivial to go ahead and instantiate the net server beforehand. but since it's \"net\" and not \"tcp\", Node has to wait for the connection information.","date":"2013-09-30T03:40:36.099Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: but since Node allows the user to listen as a pipe or tcp it has to wait for the listening information to know what type of handle to setup.","date":"2013-09-30T03:42:26.069Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: sup dude?","date":"2013-09-30T03:45:06.436Z","type":"message"}
{"nick":"vptr","date":"2013-09-30T03:50:14.363Z","type":"join"}
{"nick":"tjfontaine","message":"nothing, sup with you","date":"2013-09-30T03:51:49.997Z","type":"message"}
{"nick":"tjfontaine","message":"I mean still fucking with npm but whatever, took some time off it this weekend","date":"2013-09-30T03:52:02.871Z","type":"message"}
{"nick":"TooTallNate","date":"2013-09-30T03:52:04.769Z","type":"join"}
{"nick":"groundwater","message":"what's wrong with npm?","date":"2013-09-30T03:52:44.266Z","type":"message"}
{"nick":"tjfontaine","message":"it's broken in 0.10.19","date":"2013-09-30T03:53:32.496Z","type":"message"}
{"nick":"groundwater","message":"completely? or just some edge case","date":"2013-09-30T03:54:46.326Z","type":"message"}
{"nick":"tjfontaine","message":"seems induced by some internet latency","date":"2013-09-30T03:55:01.591Z","type":"message"}
{"nick":"TooTallNate","reason":"Client Quit","date":"2013-09-30T03:55:32.074Z","type":"quit"}
{"nick":"groundwater","message":"is it the 'cb() not called' error?","date":"2013-09-30T03:56:02.490Z","type":"message"}
{"nick":"groundwater","message":"because i bumped into that several times today","date":"2013-09-30T03:56:15.514Z","type":"message"}
{"nick":"groundwater","message":"i was in a cafe with shitty wifi","date":"2013-09-30T03:56:31.425Z","type":"message"}
{"nick":"tjfontaine","message":"yes that it's it","date":"2013-09-30T03:56:36.149Z","type":"message"}
{"nick":"trevnorris","message":"haven't been able to bisect it down to a few commits?","date":"2013-09-30T03:56:51.666Z","type":"message"}
{"nick":"groundwater","message":"definitely cleared up when i came home","date":"2013-09-30T03:57:08.985Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: you mean in node?","date":"2013-09-30T03:58:17.051Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: um... is it a node issue or npm issue?","date":"2013-09-30T03:58:48.639Z","type":"message"}
{"nick":"tjfontaine","message":"I'm about 90% sure it's an npm issue","date":"2013-09-30T03:59:03.941Z","type":"message"}
{"nick":"trevnorris","message":"fun fun. :P","date":"2013-09-30T03:59:11.966Z","type":"message"}
{"nick":"tjfontaine","message":"but if you're on node 0.10.18 or earlier `npm install -g npm` and find out :)","date":"2013-09-30T03:59:24.777Z","type":"message"}
{"nick":"groundwater","message":"if you're trying to reproduce it, i can point you to the cafe where you'll hit it EVERY TIME","date":"2013-09-30T03:59:43.553Z","type":"message"}
{"nick":"trevnorris","message":"haha.","date":"2013-09-30T03:59:53.288Z","type":"message"}
{"nick":"tjfontaine","message":"heh I have it here as well, on multiple machines :)","date":"2013-09-30T04:00:00.090Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: well, in light of learning domains will not be easily removed, i've pretty much rewritten my v0.13 performance goals.","date":"2013-09-30T04:01:07.062Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: but i'm pretty sick of it for now. how do I reproduce this issue?","date":"2013-09-30T04:01:29.345Z","type":"message"}
{"nick":"tjfontaine","message":"npm install some shit :)","date":"2013-09-30T04:01:43.423Z","type":"message"}
{"nick":"trevnorris","message":"specific version of node?","date":"2013-09-30T04:01:59.086Z","type":"message"}
{"nick":"tjfontaine","message":"0.10.19","date":"2013-09-30T04:02:44.527Z","type":"message"}
{"nick":"tjfontaine","message":"or","date":"2013-09-30T04:02:46.946Z","type":"message"}
{"nick":"tjfontaine","message":"npm install -g npm","date":"2013-09-30T04:02:49.406Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-30T04:03:32.606Z","type":"nick"}
{"nick":"trevnorris","message":"tjfontaine: cool. i'll take a look at this, and how about you figure how how to rewrite {TCP,Pipe}Wrap so a base class can be instantiated immediately then the uv_{tcp,pipe}_ can be set later. :P","date":"2013-09-30T04:05:08.195Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-09-30T04:05:30.451Z","type":"message"}
{"nick":"tjfontaine","message":"I really don't want to context switch :)","date":"2013-09-30T04:05:40.555Z","type":"message"}
{"nick":"trevnorris","message":"does the issue require a latency problem?","date":"2013-09-30T04:06:12.753Z","type":"message"}
{"nick":"tjfontaine","message":"it happens in many circumstances, some times it feels like latency makes it worse","date":"2013-09-30T04:06:40.074Z","type":"message"}
{"nick":"trevnorris","message":"ok","date":"2013-09-30T04:06:44.517Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-30T04:10:44.613Z","type":"nick"}
{"nick":"trevnorris","message":"wow, so npm install newrelic gives me a new world of errors, but doubt any of them are what you're talking about.","date":"2013-09-30T04:10:58.741Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: so what error message should I be looking for?","date":"2013-09-30T04:11:07.631Z","type":"message"}
{"nick":"tjfontaine","message":"hmm maybe I'm wrong","date":"2013-09-30T04:11:10.493Z","type":"message"}
{"nick":"tjfontaine","message":"npm ERR! cb() never called!","date":"2013-09-30T04:11:15.252Z","type":"message"}
{"nick":"tjfontaine","message":"npm ERR! not ok code 0","date":"2013-09-30T04:11:15.618Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: no, npm install newrelic installs like half a gig of dependencies.","date":"2013-09-30T04:12:08.009Z","type":"message"}
{"nick":"tjfontaine","message":"I know what you're saying","date":"2013-09-30T04:12:16.733Z","type":"message"}
{"nick":"trevnorris","message":"and clang was barfing on a bunch of stuff during build","date":"2013-09-30T04:12:24.111Z","type":"message"}
{"nick":"tjfontaine","message":"I just put 1.3.8 npm into node-v0.10.19 and it still failed, so I'm going to try reverting some tls patches","date":"2013-09-30T04:12:45.992Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-09-30T04:13:01.869Z","type":"quit"}
{"nick":"mikeal","date":"2013-09-30T04:13:54.533Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: so, from the error-handler.js seems that another error is occurring, but not being logged.","date":"2013-09-30T04:16:48.355Z","type":"message"}
{"nick":"trevnorris","message":"so might be a double breakage","date":"2013-09-30T04:17:04.145Z","type":"message"}
{"nick":"tjfontaine","message":"no, the event loop is exiting cleanly","date":"2013-09-30T04:18:04.478Z","type":"message"}
{"nick":"tjfontaine","message":"but the last cb doesn't go through the error handler","date":"2013-09-30T04:18:11.984Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: the message appears because itWorked != true, but code === 0. and you don't seem to be getting an E* error message. so the error code being passed isn't recognized by npm","date":"2013-09-30T04:22:40.394Z","type":"message"}
{"nick":"trevnorris","message":"at least, that's my take.","date":"2013-09-30T04:22:45.046Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-30T04:22:57.813Z","type":"nick"}
{"nick":"tjfontaine","message":"yes, thus the event loop is exiting cleanly","date":"2013-09-30T04:23:47.299Z","type":"message"}
{"nick":"tjfontaine","message":"but *not* going through errorHandler","date":"2013-09-30T04:23:54.536Z","type":"message"}
{"nick":"tjfontaine","message":"which is where itWorked is set to true if there was no error","date":"2013-09-30T04:24:03.990Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: i'm confused by the logic, because errorHandler is only run when there is an error from the npm.load callback.","date":"2013-09-30T04:26:25.090Z","type":"message"}
{"nick":"trevnorris","message":"so then itWorked could never be set to true","date":"2013-09-30T04:26:46.367Z","type":"message"}
{"nick":"tjfontaine","message":"no I think it's point is really more like exitHandler","date":"2013-09-30T04:26:52.098Z","type":"message"}
{"nick":"tjfontaine","message":"it's just a generic callback passed to all commands","date":"2013-09-30T04:27:00.278Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: did it dump a useful stack trace?","date":"2013-09-30T04:28:58.305Z","type":"message"}
{"nick":"tjfontaine","message":"not really no, from there all we know is that we're in a clean exit path","date":"2013-09-30T04:29:32.143Z","type":"message"}
{"nick":"trevnorris","message":"can you just inject a console.trace() into npm on exit so you always see how it's leaving?","date":"2013-09-30T04:30:15.621Z","type":"message"}
{"nick":"tjfontaine","message":"what do you mean?","date":"2013-09-30T04:30:45.720Z","type":"message"}
{"nick":"tjfontaine","message":"the stack trace is coming from the cc side of exit","date":"2013-09-30T04:30:54.409Z","type":"message"}
{"nick":"tjfontaine","message":"from EmitExit","date":"2013-09-30T04:31:22.258Z","type":"message"}
{"nick":"trevnorris","message":"yeah, but that message is coming from the process.on('exit' in lib/utils/error-handler","date":"2013-09-30T04:31:50.776Z","type":"message"}
{"nick":"tjfontaine","message":"it's about as clean of an exit as we can get, there's no more work to be done","date":"2013-09-30T04:31:52.424Z","type":"message"}
{"nick":"tjfontaine","message":"yes, because the event loop is empty","date":"2013-09-30T04:32:01.563Z","type":"message"}
{"nick":"trevnorris","message":"ah yeah. so the stack trace will be empty. duh.","date":"2013-09-30T04:33:12.309Z","type":"message"}
{"nick":"trevnorris","message":"if my logic paths are correct, the only way the callback could have been called w/o an error being passed is from the fs.writeFile in lib/install.js","date":"2013-09-30T04:33:36.571Z","type":"message"}
{"nick":"vptr","reason":"Ping timeout: 248 seconds","date":"2013-09-30T04:34:03.754Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: and he has a dead code path in install() where if arguments.length === 3, then he reassigns cb_, but then it's never used.","date":"2013-09-30T04:34:50.409Z","type":"message"}
{"nick":"trevnorris","message":"ah wait, nm. man that's confusing.","date":"2013-09-30T04:35:40.721Z","type":"message"}
{"nick":"trevnorris","message":"ok. so he reassigns it, but it's used in a function declared in the same scope passed as cb","date":"2013-09-30T04:35:58.899Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: what's an example package you've installed and had that failure?","date":"2013-09-30T04:40:16.043Z","type":"message"}
{"nick":"trevnorris","message":"i'm getting plenty of failures, but none like that one.","date":"2013-09-30T04:40:23.245Z","type":"message"}
{"nick":"tjfontaine","message":"`npm install jsontool workflow vasync restify`","date":"2013-09-30T04:40:38.784Z","type":"message"}
{"nick":"tjfontaine","message":"is what's in my test script","date":"2013-09-30T04:40:42.958Z","type":"message"}
{"nick":"tjfontaine","message":"but also `npm install` from a git clone of sntp","date":"2013-09-30T04:40:55.659Z","type":"message"}
{"nick":"hueniverse1","date":"2013-09-30T04:41:31.812Z","type":"join"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-09-30T04:42:18.472Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: well. that first one has given me 21k lines of npm-debug.log output so far, and it's not done","date":"2013-09-30T04:42:52.210Z","type":"message"}
{"nick":"trevnorris","message":"no idea what's going on with my system.","date":"2013-09-30T04:42:57.434Z","type":"message"}
{"nick":"saghul_","date":"2013-09-30T04:44:06.595Z","type":"join"}
{"nick":"tjfontaine","message":"man if increasing the size of this vm to speed the compiles makes it harder to hit this bug I'll be pissed","date":"2013-09-30T04:45:29.488Z","type":"message"}
{"nick":"tjfontaine","message":"well good news","date":"2013-09-30T04:46:53.239Z","type":"message"}
{"nick":"CAPSLOCKBOT","reason":"Remote host closed the connection","date":"2013-09-30T04:47:31.275Z","type":"quit"}
{"nick":"CAPSLOCKBOT","date":"2013-09-30T04:47:59.235Z","type":"join"}
{"nick":"LOUDBOT_","date":"2013-09-30T04:48:04.440Z","type":"join"}
{"nick":"tjfontaine","message":"ya, I'm nearly convinced","date":"2013-09-30T04:48:20.318Z","type":"message"}
{"nick":"trevnorris","message":"wtf. how are all these modules coming to half a gig. i've always enjoyed node for being so light weight.","date":"2013-09-30T04:49:10.708Z","type":"message"}
{"nick":"LOUDBOT","reason":"*.net *.split","date":"2013-09-30T04:49:36.611Z","type":"quit"}
{"nick":"saghul","reason":"*.net *.split","date":"2013-09-30T04:49:37.990Z","type":"quit"}
{"nick":"hueniverse","reason":"*.net *.split","date":"2013-09-30T04:49:38.430Z","type":"quit"}
{"nick":"saghul_","new_nick":"saghul","date":"2013-09-30T04:49:40.440Z","type":"nick"}
{"nick":"trevnorris","message":"ah. mother. I have dev=true in my config","date":"2013-09-30T04:49:46.439Z","type":"message"}
{"nick":"tjfontaine","message":"ok, so it does seem to be the tls stuff, and the fix from fedor already fixes this","date":"2013-09-30T04:50:00.242Z","type":"message"}
{"nick":"tjfontaine","message":"there must be a setTimeout that's happening here and not being handled in npm","date":"2013-09-30T04:50:19.720Z","type":"message"}
{"nick":"trevnorris","message":"cool. well, think building all that just fried all my sperm. glad you got it figured out.","date":"2013-09-30T04:51:33.171Z","type":"message"}
{"nick":"tjfontaine","message":"haha","date":"2013-09-30T04:51:53.100Z","type":"message"}
{"nick":"tjfontaine","message":"well I'm going to let this test script run over night","date":"2013-09-30T04:52:00.645Z","type":"message"}
{"nick":"tjfontaine","message":"if it doesn't fail we can all thank fedor","date":"2013-09-30T04:52:16.415Z","type":"message"}
{"nick":"trevnorris","message":"sounds good to me.","date":"2013-09-30T04:52:24.376Z","type":"message"}
{"nick":"tjfontaine","message":"now on to the other things I was supposed to do this weekend","date":"2013-09-30T04:52:37.280Z","type":"message"}
{"nick":"trevnorris","message":"hah, like what?","date":"2013-09-30T04:52:43.457Z","type":"message"}
{"nick":"tjfontaine","message":"blog posts I've been promising people, or the mdb + manta job","date":"2013-09-30T04:52:59.482Z","type":"message"}
{"nick":"trevnorris","message":"oh yeah.","date":"2013-09-30T04:53:10.733Z","type":"message"}
{"nick":"trevnorris","message":"even i'm looking forward to those blog posts.","date":"2013-09-30T04:53:40.315Z","type":"message"}
{"nick":"trevnorris","message":"dtrace is the shiz","date":"2013-09-30T04:53:43.681Z","type":"message"}
{"nick":"tjfontaine","message":"hehe, well I'm starting with some mdb stuff first since I have those mostly written","date":"2013-09-30T04:53:58.196Z","type":"message"}
{"nick":"tjfontaine","message":"actually it's","date":"2013-09-30T04:54:05.037Z","type":"message"}
{"nick":"tjfontaine","message":"node debugging in parallel, mdb ::findleaks, mdb ::findjsobjects","date":"2013-09-30T04:54:23.623Z","type":"message"}
{"nick":"trevnorris","message":"ah, cool. yeah, last time I tried to do that I got severely lost","date":"2013-09-30T04:54:57.193Z","type":"message"}
{"nick":"trevnorris","message":"too many objects","date":"2013-09-30T04:55:00.821Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-09-30T04:55:05.004Z","type":"message"}
{"nick":"trevnorris","message":"that reminds me, I have some dtrace output to analize on the smartos server","date":"2013-09-30T04:55:27.602Z","type":"message"}
{"nick":"trevnorris","message":"think I might actually be close to finding where that stupid pre 3.20 leak is coming from","date":"2013-09-30T04:55:47.932Z","type":"message"}
{"nick":"tjfontaine","message":"what leak?","date":"2013-09-30T04:55:57.114Z","type":"message"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2013-09-30T04:57:18.625Z","type":"quit"}
{"nick":"LOUDBOT_","reason":"Remote host closed the connection","date":"2013-09-30T04:57:29.893Z","type":"quit"}
{"nick":"LOUDBOT","date":"2013-09-30T04:57:42.067Z","type":"join"}
{"nick":"AvianFlu","date":"2013-09-30T04:58:01.647Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: https://github.com/joyent/node/issues/5828#issuecomment-20846439","date":"2013-09-30T04:58:08.855Z","type":"message"}
{"nick":"tjfontaine","message":"oh that one","date":"2013-09-30T04:58:35.052Z","type":"message"}
{"nick":"tjfontaine","message":"I'm hoping to get some cores from walmart, or at least work with them on tracking that down, but it seems to be in the http client","date":"2013-09-30T05:00:05.245Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: yeah, the newrelic module has a billion development dependencies, sorry about that","date":"2013-09-30T05:00:17.199Z","type":"message"}
{"nick":"tjfontaine","message":"I mean I know their example is in the server, but I think what wpreul is seeing is in the client","date":"2013-09-30T05:00:39.103Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: its runtime dependencies are just bunyan (version-locked to the version before it depended on dtrace-node) and CLS","date":"2013-09-30T05:00:41.803Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: eh, no worries. don't know how my global config got dev=true anyways.","date":"2013-09-30T05:00:48.841Z","type":"message"}
{"nick":"tjfontaine","message":"anyway while I have motivation, time to write","date":"2013-09-30T05:01:51.103Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I'm totally fine with just the asyncListener stuff landing in 0.12, everyone else can fend for themselves O:)","date":"2013-09-30T05:02:10.514Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: well, if you haven't looked recently i've completely updated https://github.com/joyent/node/issues/6252","date":"2013-09-30T05:02:59.338Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: there's a ton of stuff I want to get done before v1.0","date":"2013-09-30T05:03:13.469Z","type":"message"}
{"nick":"trevnorris","message":"but I think the asyncListener stuff will probably have to ship in v0.12 w/ the domain code.","date":"2013-09-30T05:03:37.547Z","type":"message"}
{"nick":"trevnorris","message":"removing them is going to be a pain like no other.","date":"2013-09-30T05:03:44.232Z","type":"message"}
{"nick":"trevnorris","message":"there are some more optimizations I can do, but want an initial review first.","date":"2013-09-30T05:04:14.624Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: once I have New Relic for Node.js 1.0 out the door, I am going to set aside some time to contribute more to Node core","date":"2013-09-30T05:04:48.288Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: and at that point I should be able to help you out with the domains stuff","date":"2013-09-30T05:04:59.429Z","type":"message"}
{"nick":"othiym23","message":"that'll be towards the end of October, tho, so probably in a 0.13 timeframe","date":"2013-09-30T05:05:25.300Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: well, funny part is the domain work actually has nothing to do directly with domains. I need to redo a bunch of the guts to make it so I can instantiate the c++ class at the same time as the js instance.","date":"2013-09-30T05:05:52.298Z","type":"message"}
{"nick":"trevnorris","message":"when that's done then it'll be a snap to remove domain code.","date":"2013-09-30T05:06:30.520Z","type":"message"}
{"nick":"othiym23","message":"well, I'm not *completely* dumb when it comes to C++, it's just been a while since I've done a lot of it seriously","date":"2013-09-30T05:07:52.259Z","type":"message"}
{"nick":"othiym23","message":"and at the very least I can contribute tests and testing","date":"2013-09-30T05:08:04.829Z","type":"message"}
{"nick":"trevnorris","message":"hah, don't know if you could say I've ever done it seriously. ;P","date":"2013-09-30T05:08:11.323Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: but thanks much for your help. those two nights you helped me figure out some really stupid bugs on my part.","date":"2013-09-30T05:09:05.605Z","type":"message"}
{"nick":"trevnorris","message":"but it seems to be working now as intended.","date":"2013-09-30T05:09:14.296Z","type":"message"}
{"nick":"trevnorris","message":"and meets my minimum at performance, so i'd say it's a win-win so far.","date":"2013-09-30T05:09:32.653Z","type":"message"}
{"nick":"othiym23","message":"I am very pleased with how this works out","date":"2013-09-30T05:09:46.490Z","type":"message"}
{"nick":"othiym23","message":"so far, unless people are doing really weird stuff, they should be able to use CLS seamlessly across 0.10 and 0.12","date":"2013-09-30T05:10:06.753Z","type":"message"}
{"nick":"trevnorris","message":"that's great.","date":"2013-09-30T05:10:23.461Z","type":"message"}
{"nick":"trevnorris","message":"and as far as 0.12. there'll be nothing you can't see.","date":"2013-09-30T05:10:42.113Z","type":"message"}
{"nick":"trevnorris","message":"on reason i'm digging it is not I have a single point of reference for dtrace probes.","date":"2013-09-30T05:11:01.956Z","type":"message"}
{"nick":"trevnorris","message":"s/on/one","date":"2013-09-30T05:11:49.147Z","type":"message"}
{"nick":"othiym23","message":"I want to write some example listeners when I have a little more time","date":"2013-09-30T05:12:09.134Z","type":"message"}
{"nick":"othiym23","message":"I highly doubt most people are going to understand what the hell this thing is for one 0.12 lands","date":"2013-09-30T05:12:25.274Z","type":"message"}
{"nick":"trevnorris","message":"i'm interested to see how you plan on using it.","date":"2013-09-30T05:12:25.616Z","type":"message"}
{"nick":"othiym23","message":"so I'll write a little long-stacktrace module, and an even lighter-weight CLS that all fits on a single screen (which is something creationix already wrote), and a little batch-oriented logging module","date":"2013-09-30T05:13:03.392Z","type":"message"}
{"nick":"othiym23","message":"maybe even a lower-level transaction tracer than the one I'm using for New Relic that captures everything","date":"2013-09-30T05:13:30.998Z","type":"message"}
{"nick":"othiym23","message":"those should all be pretty simple to write with what we have now","date":"2013-09-30T05:13:40.334Z","type":"message"}
{"nick":"trevnorris","message":"coolio. there'res one more api that needs to be added. that's the ability to add/remove a listener from an existing handle.","date":"2013-09-30T05:14:57.367Z","type":"message"}
{"nick":"trevnorris","message":"the other one i've played around with is the ability to add native callbacks, c++ methods, that'll run instead of js functions. it'd be a freak a lot faster for specific cases. though think that's probably creep","date":"2013-09-30T05:16:18.983Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: being able to add a listener to an existing handle is an interesting idea -- does it have a use case?","date":"2013-09-30T05:17:34.559Z","type":"message"}
{"nick":"othiym23","message":"or are you just adding that for completeness?","date":"2013-09-30T05:17:40.293Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: yeah. for domains.","date":"2013-09-30T05:17:46.234Z","type":"message"}
{"nick":"trevnorris","message":"if i'm going to fully emulate domains then i'll need the ability to add a listener object to an existing handle.","date":"2013-09-30T05:18:06.434Z","type":"message"}
{"nick":"trevnorris","message":"if not for that then I wouldn't take the time.","date":"2013-09-30T05:18:31.046Z","type":"message"}
{"nick":"othiym23","message":"when I'm not under the gun, I need to sit down and try to chart out all the different ways Node internally uses EEs, and see if I can break those down into different patterns","date":"2013-09-30T05:20:16.667Z","type":"message"}
{"nick":"othiym23","message":"and maybe start separating some of the concerns there and thinking reasonably about how to bridge different asynchronous realms in ways that are easier to reason about","date":"2013-09-30T05:20:45.369Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: on that issue did you read my plan for the future of internal emitters?","date":"2013-09-30T05:21:21.634Z","type":"message"}
{"nick":"trevnorris","message":"i want to standardize the api we use directly on top of the *Wraps, and use that internally. then event emitters can sit on top of that as well","date":"2013-09-30T05:22:09.793Z","type":"message"}
{"nick":"trevnorris","message":"so both domains and the event emitter could technically live in userland.","date":"2013-09-30T05:22:26.262Z","type":"message"}
{"nick":"othiym23","message":"looking at it now","date":"2013-09-30T05:24:28.478Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: do you have numbers (even rough ones) of the difference in execution time between Function#call and Function#apply?","date":"2013-09-30T05:25:33.310Z","type":"message"}
{"nick":"othiym23","message":"I use .apply all over the place","date":"2013-09-30T05:25:45.127Z","type":"message"}
{"nick":"othiym23","message":"I went through the newrelic code base yesterday and replaced all my [].slice.call usage with a handwritten slice() function, good times","date":"2013-09-30T05:26:26.220Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: it depends. from js to js, they're comparable. but for some reason calling apply from a function invoked from c++, and using \"arguments\" makes the call take 4-5x's longer.","date":"2013-09-30T05:26:50.694Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: one thing you need to take into account is the polymorphism the called function is experiencing from the use of call/apply. if the argument order/types are changing often then v8 can't properly IC those methods.","date":"2013-09-30T05:28:12.652Z","type":"message"}
{"nick":"trevnorris","message":"and any use of call/apply automatically rules out the use of inlining.","date":"2013-09-30T05:28:27.369Z","type":"message"}
{"nick":"paddybyers","date":"2013-09-30T05:31:13.311Z","type":"join"}
{"nick":"othiym23","message":"yeah, I've paid some attention to monomorphism in my dev efforts, mostly just trying to make sure I don't do any variadic cleverness with my own stuff","date":"2013-09-30T05:31:34.491Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: but there are some things. like in the case you _have_ to use a function closure. it's better to put a one liner that calls out to another more complex function and that passes the context (e.g. \"this\")  as an argument parameter.","date":"2013-09-30T05:31:35.800Z","type":"message"}
{"nick":"othiym23","message":"I haven't done any serious testing of that, though -- creating a benchmarking suite like core's is on my list of things to do","date":"2013-09-30T05:31:54.130Z","type":"message"}
{"nick":"othiym23","message":"just running the integration tests with --trace-deopt turned on doesn't really give me any surprises, although I'm still learning how to interpret what trace-deopt is telling me","date":"2013-09-30T05:32:21.862Z","type":"message"}
{"nick":"trevnorris","message":"you'll want to run that with --code-comments","date":"2013-09-30T05:33:12.914Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: I usually run with \"--trace-opt-verbose --trace-deopt --trace-inlining --code-comments\"","date":"2013-09-30T05:34:53.854Z","type":"message"}
{"nick":"trevnorris","message":"if you see a wall of constantly re-evaluated methods it means you have a function closure somewhere.","date":"2013-09-30T05:35:25.934Z","type":"message"}
{"nick":"trevnorris","message":"also there's the basic --prof which you can run against v8's tools/linux-tick-processor that'll give you some good info","date":"2013-09-30T05:35:56.869Z","type":"message"}
{"nick":"trevnorris","message":"but for a full swath, run --ll_prof (reference the comments in tools/ll_prof.py on how to use..","date":"2013-09-30T05:36:42.763Z","type":"message"}
{"nick":"othiym23","message":"the problem with --prof is that I'm testing a lot of code that's not my own","date":"2013-09-30T05:36:58.625Z","type":"message"}
{"nick":"othiym23","message":"I need a more controlled benchmarking environment","date":"2013-09-30T05:37:07.590Z","type":"message"}
{"nick":"othiym23","message":"and yeah, I use --trace-opt and --code-comments, and mostly it just tells me that NativeModule.require flaps a lot","date":"2013-09-30T05:37:33.282Z","type":"message"}
{"nick":"trevnorris","message":"ben wrote a perf module that'll allow you to start it lazily and you can start/stop it when needed.","date":"2013-09-30T05:37:54.671Z","type":"message"}
{"nick":"othiym23","message":"in fact, the --trace commands aren't super useful to use on non-core code because most of the output you see is coming from inside core because those are the hottest / most heavily hit paths","date":"2013-09-30T05:38:02.125Z","type":"message"}
{"nick":"othiym23","message":"that would help me more if I didn't develop on OS X ;)","date":"2013-09-30T05:38:26.134Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-09-30T05:38:41.971Z","type":"message"}
{"nick":"othiym23","message":"what I'm going to do when I do that is just clean up my SmartOS vms or take tjfontaine's advice and use manta / some SmartMachines and do all my benchmarking and profiling on a platform that has good support for it","date":"2013-09-30T05:39:07.748Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: well, you could always try irhydra. just need to build core with: GYP_DEFINES=\"v8_enable_disassembler=1 v8_object_print=1\" ./configure; make -j8\"","date":"2013-09-30T05:39:10.193Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: then run your code with --trace-hydrogen --trace-deopt --code-comments --print-opt-code --trace-phase=Z","date":"2013-09-30T05:39:27.047Z","type":"message"}
{"nick":"trevnorris","message":"pipe stdout to code.asm","date":"2013-09-30T05:39:40.495Z","type":"message"}
{"nick":"trevnorris","message":"then go to http://web.irhydra.googlecode.com/git/hydra.html and load your compilation artifacts","date":"2013-09-30T05:39:58.204Z","type":"message"}
{"nick":"trevnorris","message":"(i.e. code.asm and hydrogen*)","date":"2013-09-30T05:40:11.418Z","type":"message"}
{"nick":"othiym23","message":"yeah, I've only played with IRHydra a little bit (mostly following along with mraleph's blog posts), and it seems neat, but I feel like I have a ways to go before I really need to get that into the nitty-gritty of the New Relic stuff's overhead","date":"2013-09-30T05:40:14.580Z","type":"message"}
{"nick":"trevnorris","message":"hah, fair enough.","date":"2013-09-30T05:40:31.145Z","type":"message"}
{"nick":"othiym23","message":"right now I think it's probably < 1% overhead imposed by the agent, and that's acceptable for NR (and most of NR's customers)","date":"2013-09-30T05:40:31.502Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-09-30T05:40:59.376Z","type":"quit"}
{"nick":"othiym23","message":"and there's obvious stuff to clean up, like minimizing object creation and trying to find more ways to eliminate creating closures","date":"2013-09-30T05:41:17.806Z","type":"message"}
{"nick":"trevnorris","message":"yeah. right now i've gotten async listeners to have just about as much minimal overhead as possible. though, there's still not a fast way to get from c++ to js from the event loop.","date":"2013-09-30T05:43:04.641Z","type":"message"}
{"nick":"trevnorris","message":"going through Function::Call() takes a minimum of 50ns, where as js to c++ can be as few as 8ns.","date":"2013-09-30T05:43:54.368Z","type":"message"}
{"nick":"trevnorris","message":"really annoying.","date":"2013-09-30T05:44:02.423Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: do you have any native code in your codebase?","date":"2013-09-30T05:44:26.036Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: so, from dtrace I see \"onread at net.js position 25676\"","date":"2013-09-30T05:45:56.663Z","type":"message"}
{"nick":"trevnorris","message":"does that mean line 25...k","date":"2013-09-30T05:46:04.469Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: no (mostly to keep deployment simple)","date":"2013-09-30T05:46:15.804Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: ok. so i'll shut up about all that stuff :)","date":"2013-09-30T05:46:30.362Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: although I have a longish list of metrics that it would be good to gather that can only be reached from C++-land","date":"2013-09-30T05:46:57.698Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: like what?","date":"2013-09-30T05:47:12.133Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: once Azure has figured out how to host precompiled binaries for npm deployment, I'll probably take another look at it","date":"2013-09-30T05:47:43.233Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: real cputime, better memory usage metrics, GC tracing (without forcing people to start with --expose-gc, because nobody reads the docs), V8 heap vs Node heap","date":"2013-09-30T05:48:55.425Z","type":"message"}
{"nick":"othiym23","message":"maybe some libuv counters if it's possible to implement those without slaughtering performance","date":"2013-09-30T05:49:20.399Z","type":"message"}
{"nick":"trevnorris","message":"i think we already have a bunch of probes in core for stuff like that.","date":"2013-09-30T05:49:44.196Z","type":"message"}
{"nick":"othiym23","message":"you know, the kinds of things it's trivial to grab with DTrace but that it's nearly impossible to get with pure JS","date":"2013-09-30T05:49:48.744Z","type":"message"}
{"nick":"othiym23","message":"yeah, the question is how to get at it in-process","date":"2013-09-30T05:50:06.703Z","type":"message"}
{"nick":"othiym23","message":"NR can't dictate peoples' runtime environment","date":"2013-09-30T05:50:21.095Z","type":"message"}
{"nick":"othiym23","message":"a distressingly high number of Node users deploy to Heroku because of their free tier","date":"2013-09-30T05:50:33.986Z","type":"message"}
{"nick":"othiym23","message":"and I know the person maintaining the Node buildpack over at Heroku, and Heroku and New Relic are partners, but getting perf or systemtap turned on for individual dynos sounds like something approaching real work","date":"2013-09-30T05:51:14.127Z","type":"message"}
{"nick":"EhevuTov","date":"2013-09-30T05:53:20.488Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: quick context switch: here's some dtrace output from mmap after hammering the server and forcing rss to grow beyond what it should've been able to: https://gist.github.com/trevnorris/6759810","date":"2013-09-30T05:57:56.033Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: any tips on here to look next?","date":"2013-09-30T05:58:04.479Z","type":"message"}
{"nick":"trevnorris","action":"&","date":"2013-09-30T06:05:47.445Z","type":"action"}
{"nick":"LOUDBOT","message":"HOLY SHIT IT'S CARNIES AND THEY FEAST ON YOUR FLESH","date":"2013-09-30T06:05:48.113Z","type":"message"}
{"nick":"rendar","date":"2013-09-30T06:10:07.153Z","type":"join"}
{"nick":"icarot","date":"2013-09-30T06:10:20.173Z","type":"join"}
{"nick":"icarot2","date":"2013-09-30T06:13:08.412Z","type":"join"}
{"nick":"icarot","reason":"Ping timeout: 256 seconds","date":"2013-09-30T06:14:48.036Z","type":"quit"}
{"nick":"icarot","date":"2013-09-30T06:32:08.975Z","type":"join"}
{"nick":"icarot2","reason":"Ping timeout: 245 seconds","date":"2013-09-30T06:36:01.214Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #235 \u00037UNSTABLE\u000f windows-ia32 (7/600) windows-x64 (8/600) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/235/","date":"2013-09-30T06:41:20.427Z","type":"message"}
{"nick":"icarot","reason":"\"Leaving\"","date":"2013-09-30T06:55:41.016Z","type":"part"}
{"nick":"rendar","date":"2013-09-30T07:00:54.232Z","type":"quit"}
{"nick":"rendar","date":"2013-09-30T07:02:51.255Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 245 seconds","date":"2013-09-30T07:44:36.700Z","type":"quit"}
{"nick":"dominictarr","date":"2013-09-30T07:49:19.239Z","type":"join"}
{"nick":"`3rdEden","message":"trevnorris: I was looking through your v0.13 optimisation check list, you might want to add removing .bind calls from the core as well ","date":"2013-09-30T07:50:29.183Z","type":"message"}
{"nick":"`3rdEden","message":"There are a couple of .bind calls in the fs module, console and __debugger. Changing them to variable references or just wrapping them with a plain function that does a .call would be much more efficient","date":"2013-09-30T07:52:07.768Z","type":"message"}
