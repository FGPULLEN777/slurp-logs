{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-08-28T00:00:00.324Z","type":"quit"}
{"nick":"ircretary","date":"2013-08-28T00:00:07.345Z","type":"join"}
{"nick":"toddaaro","date":"2013-08-28T00:00:44.422Z","type":"part"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #142 \u00037UNSTABLE\u000f windows-x64 (4/194) windows-ia32 (4/194) smartos-ia32 (2/193) smartos-x64 (2/193) http://jenkins.nodejs.org/job/libuv-master-gyp/142/","date":"2013-08-28T00:02:07.071Z","type":"message"}
{"nick":"ecr","reason":"Quit: ecr","date":"2013-08-28T00:10:48.425Z","type":"quit"}
{"nick":"leonvv","reason":"Read error: Connection reset by peer","date":"2013-08-28T00:15:18.300Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u0002ee695e9\u0002 : child_process: Avoid extra copy for string stdio (+1 more commits) - http://git.io/EQiCjA","date":"2013-08-28T00:29:59.503Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-08-28T00:33:16.165Z","type":"join"}
{"nick":"TooTallNate","date":"2013-08-28T00:36:15.525Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-08-28T00:37:38.165Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #494 \u00037UNSTABLE\u000f smartos-x64 (9/637) smartos-ia32 (3/637) http://jenkins.nodejs.org/job/nodejs-master/494/","date":"2013-08-28T00:39:36.545Z","type":"message"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-08-28T00:43:56.393Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-28T00:52:29.494Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #286 \u00037UNSTABLE\u000f windows-x64 (20/637) windows-ia32 (16/637) http://jenkins.nodejs.org/job/nodejs-master-windows/286/","date":"2013-08-28T00:52:41.810Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: hmm, that last commit fixes an issue I think","date":"2013-08-28T00:57:32.352Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-28T01:00:28.087Z","type":"nick"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-28T01:01:07.183Z","type":"nick"}
{"nick":"austo","reason":"Quit: Leaving","date":"2013-08-28T01:01:58.284Z","type":"quit"}
{"nick":"indexzero","date":"2013-08-28T01:04:07.124Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-28T01:04:30.014Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-28T01:04:51.203Z","type":"join"}
{"nick":"dshaw_","date":"2013-08-28T01:05:36.173Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Mathias Buus\u000f \u00037master\u000f * \u0002ba72570\u0002 : stream: change default hwm for objectMode to 16 - http://git.io/8-ndjg","date":"2013-08-28T01:07:37.968Z","type":"message"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-08-28T01:08:15.322Z","type":"quit"}
{"nick":"wavded","date":"2013-08-28T01:08:45.542Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u0002ba72f8c\u0002 : doc: mark repl as stable - http://git.io/oaY5Nw","date":"2013-08-28T01:09:34.981Z","type":"message"}
{"nick":"hueniverse","message":"is it just me or setTimeout in node 0.11 is ~25ms short?","date":"2013-08-28T01:10:49.746Z","type":"message"}
{"nick":"hueniverse","message":"300 -> 280, 50 -> 25","date":"2013-08-28T01:11:09.597Z","type":"message"}
{"nick":"tjfontaine","message":"every, or just the first, and are you comparing against the wallclock?","date":"2013-08-28T01:12:24.288Z","type":"message"}
{"nick":"othiym23","message":"that's a fast stopwatch finger","date":"2013-08-28T01:13:50.391Z","type":"message"}
{"nick":"hueniverse","message":"hmm","date":"2013-08-28T01:14:17.516Z","type":"message"}
{"nick":"c4milo","date":"2013-08-28T01:14:18.840Z","type":"join"}
{"nick":"hueniverse","message":"looks like just the first in the code snippet","date":"2013-08-28T01:14:30.508Z","type":"message"}
{"nick":"hueniverse","message":"back to the big pile of goo to figure out the crazy timers","date":"2013-08-28T01:14:47.340Z","type":"message"}
{"nick":"hueniverse","message":"tjfontaine: but why would 0.11 change the first?","date":"2013-08-28T01:15:12.803Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #495 \u00034FAILURE\u000f smartos-x64 (10/637) osx-ia32 (1/637) smartos-ia32 (3/637) http://jenkins.nodejs.org/job/nodejs-master/495/","date":"2013-08-28T01:16:51.194Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-28T01:17:00.496Z","type":"quit"}
{"nick":"indexzero","date":"2013-08-28T01:17:29.159Z","type":"join"}
{"nick":"tjfontaine","message":"hueniverse: so, we are now using the hrtime from the uv loop, as compared to do another gettimeofday","date":"2013-08-28T01:18:10.313Z","type":"message"}
{"nick":"hueniverse","message":"something is broken","date":"2013-08-28T01:18:25.749Z","type":"message"}
{"nick":"hueniverse","message":"I got a test that sets a timeout before res.end()","date":"2013-08-28T01:18:36.145Z","type":"message"}
{"nick":"hueniverse","message":"timeout is set to 100ms","date":"2013-08-28T01:18:44.136Z","type":"message"}
{"nick":"hueniverse","message":"sorry, 50ms","date":"2013-08-28T01:18:56.020Z","type":"message"}
{"nick":"hueniverse","message":"gets invoked after 2","date":"2013-08-28T01:19:00.157Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-28T01:19:12.064Z","type":"quit"}
{"nick":"hueniverse","message":"if I wrap the timeout with another for 1ms, it works","date":"2013-08-28T01:19:12.973Z","type":"message"}
{"nick":"tjfontaine","message":"hueniverse: this is a socket.setTimeout I guess?","date":"2013-08-28T01:19:16.523Z","type":"message"}
{"nick":"hueniverse","message":"tjfontaine: nope","date":"2013-08-28T01:19:25.409Z","type":"message"}
{"nick":"kazupon","date":"2013-08-28T01:19:43.788Z","type":"join"}
{"nick":"othiym23","message":"jenkins, you're drunk","date":"2013-08-28T01:19:49.326Z","type":"message"}
{"nick":"hueniverse","message":"https://github.com/spumko/hapi/blob/master/test/integration/clientTimeout.js#L98","date":"2013-08-28T01:20:10.854Z","type":"message"}
{"nick":"tjfontaine","message":"/bin/sh: /bin/sh: cannot execute binary file","date":"2013-08-28T01:20:11.534Z","type":"message"}
{"nick":"tjfontaine","message":"make[1]: *** [/Volumes/External/jenkins/workspace/nodejs-master/dfdb978f/out/Release/obj.target/openssl/deps/openssl/openssl/crypto/bn/bn_mul.o] Error 126","date":"2013-08-28T01:20:11.748Z","type":"message"}
{"nick":"tjfontaine","message":"make[1]: *** Waiting for unfinished jobs....","date":"2013-08-28T01:20:14.508Z","type":"message"}
{"nick":"tjfontaine","message":"what's wrong with my mac","date":"2013-08-28T01:20:15.916Z","type":"message"}
{"nick":"tjfontaine","message":"hueniverse: looking","date":"2013-08-28T01:20:18.387Z","type":"message"}
{"nick":"hueniverse","message":"this is a very simple test. We tell the server to timeout client req after 50ms","date":"2013-08-28T01:20:37.086Z","type":"message"}
{"nick":"hueniverse","message":"then set timeout to 100 before we send res.end()","date":"2013-08-28T01:20:46.108Z","type":"message"}
{"nick":"hueniverse","message":"works in 0.10","date":"2013-08-28T01:20:51.048Z","type":"message"}
{"nick":"hueniverse","message":"fails in 0.11","date":"2013-08-28T01:20:53.320Z","type":"message"}
{"nick":"hueniverse","message":"and the issue boils down to, it's not waiting 100ms","date":"2013-08-28T01:21:08.012Z","type":"message"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-08-28T01:21:20.602Z","type":"quit"}
{"nick":"tjfontaine","message":"hmm","date":"2013-08-28T01:21:21.537Z","type":"message"}
{"nick":"hueniverse","message":"tjfontaine: biab, but you can see it if you npm install hapi than npm test","date":"2013-08-28T01:22:29.520Z","type":"message"}
{"nick":"othiym23","message":"hueniverse: make sure mocha isn't doing something terrible and dumb to setTimeout","date":"2013-08-28T01:22:50.756Z","type":"message"}
{"nick":"othiym23","message":"I see some hinkiness in its source","date":"2013-08-28T01:22:59.193Z","type":"message"}
{"nick":"othiym23","message":"I do not trust mocha any further than I can throw it when it comes to events and timers","date":"2013-08-28T01:23:10.518Z","type":"message"}
{"nick":"othiym23","message":"hmmm never mind, looks like it's mostly just trying to keep Sinon from doing terrible and dumb things","date":"2013-08-28T01:25:40.315Z","type":"message"}
{"nick":"othiym23","message":"back to being Node's fault!","date":"2013-08-28T01:25:50.504Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #496 \u00037UNSTABLE\u000f smartos-x64 (9/637) smartos-ia32 (2/637) http://jenkins.nodejs.org/job/nodejs-master/496/","date":"2013-08-28T01:26:05.396Z","type":"message"}
{"nick":"tjfontaine","message":"othiym23: I have no problem believing it to be my fault :)","date":"2013-08-28T01:26:37.048Z","type":"message"}
{"nick":"tjfontaine","message":"GITHUB CAN I PLEASE FUCKING HAVE THE CLONE URL IN SOME PLACE FUCKING RESPECTABLE","date":"2013-08-28T01:27:29.702Z","type":"message"}
{"nick":"LOUDBOT","message":"TAP A TO FEND OFF HYPERVENTILATING DURING A PTSD-INDUCED PANIC ATTACK","date":"2013-08-28T01:27:30.224Z","type":"message"}
{"nick":"tjfontaine","message":"LOUDBOT: on point as ever","date":"2013-08-28T01:27:44.358Z","type":"message"}
{"nick":"LOUDBOT","message":"tjfontaine: ACHIEVEMENT UNLOCKED: YOU DO GO ON","date":"2013-08-28T01:27:44.777Z","type":"message"}
{"nick":"othiym23","message":"what it's right there in the right nav bar like it's always been","date":"2013-08-28T01:27:52.544Z","type":"message"}
{"nick":"othiym23","message":"we have always been at war with Eastasia","date":"2013-08-28T01:28:03.356Z","type":"message"}
{"nick":"tjfontaine","message":"up and until they promote ssh.github.com","date":"2013-08-28T01:28:19.944Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-28T01:30:55.728Z","type":"quit"}
{"nick":"tjfontaine","message":"well that's odd","date":"2013-08-28T01:34:54.273Z","type":"message"}
{"nick":"tjfontaine","message":"node seems broken","date":"2013-08-28T01:35:00.113Z","type":"message"}
{"nick":"tjfontaine","message":"/Users/tjfontaine/Development/hapi/node_modules/jade/node_modules/transformers/node_modules/uglify-js/lib/parse.js:53","date":"2013-08-28T01:35:23.764Z","type":"message"}
{"nick":"tjfontaine","message":"KEYWORDS = makePredicate(KEYWORDS);","date":"2013-08-28T01:35:26.786Z","type":"message"}
{"nick":"tjfontaine","message":"var KEYWORDS = 'break case catch const continue debugger default delete do else finally for function if in instanceof new return switch throw try typeof var void while with';","date":"2013-08-28T01:35:41.284Z","type":"message"}
{"nick":"tjfontaine","message":"KEYWORDS = makePredicate(KEYWORDS);","date":"2013-08-28T01:35:50.695Z","type":"message"}
{"nick":"tjfontaine","message":"is there a semantic change I'm missing with 'use strict';?","date":"2013-08-28T01:36:02.712Z","type":"message"}
{"nick":"othiym23","message":"some extra keywords are reserved / blacklisted according to ES5 in strict mode","date":"2013-08-28T01:36:59.354Z","type":"message"}
{"nick":"othiym23","message":"but I think I'm lacking context to understand what you're highlighting there","date":"2013-08-28T01:37:08.261Z","type":"message"}
{"nick":"tjfontaine","message":"'use strict'; var foo = 'bar'; foo = 'baz';","date":"2013-08-28T01:37:32.825Z","type":"message"}
{"nick":"tjfontaine","message":"should be fine though?","date":"2013-08-28T01:37:35.245Z","type":"message"}
{"nick":"othiym23","message":"sure","date":"2013-08-28T01:38:05.901Z","type":"message"}
{"nick":"othiym23","message":"this is what I'm referring to: http://es5.github.io/#x7.6.1.2","date":"2013-08-28T01:38:11.234Z","type":"message"}
{"nick":"tjfontaine","message":"this is so weird, simple tests work but it's definitely failingn to parse this","date":"2013-08-28T01:38:40.716Z","type":"message"}
{"nick":"tjfontaine","message":"and there are like 2341234123 versions of uglify included in this","date":"2013-08-28T01:39:15.722Z","type":"message"}
{"nick":"othiym23","message":"that's a lot of versions of uglify","date":"2013-08-28T01:44:04.969Z","type":"message"}
{"nick":"tjfontaine","message":"there were actually 4","date":"2013-08-28T01:44:19.282Z","type":"message"}
{"nick":"othiym23","message":"what are you getting parse errors on?","date":"2013-08-28T01:44:22.288Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-28T01:44:42.615Z","type":"quit"}
{"nick":"tjfontaine","message":"what you saw above, it's complaining that it KEYWORDS (and following) weren't definied, despite it showing clearly they were","date":"2013-08-28T01:44:49.056Z","type":"message"}
{"nick":"tjfontaine","message":"*defined","date":"2013-08-28T01:44:53.792Z","type":"message"}
{"nick":"tjfontaine","message":"anyway, I patched them all for now, and am looking at hoek and see it's using wall time, will try and make it use hrtime","date":"2013-08-28T01:45:30.477Z","type":"message"}
{"nick":"tjfontaine","message":"I mean, if we're going to do it ...","date":"2013-08-28T01:46:03.539Z","type":"message"}
{"nick":"othiym23","message":"I still want to know why gettimeofday / Date.now and hrtime disagree so badly on my machine","date":"2013-08-28T01:46:27.249Z","type":"message"}
{"nick":"othiym23","message":"said machine is running ntpd slaved to 2 masters, so it's not like it's drifting *that* much","date":"2013-08-28T01:46:45.866Z","type":"message"}
{"nick":"st_luke","date":"2013-08-28T01:46:52.879Z","type":"join"}
{"nick":"tjfontaine","message":"define \"disagree\"","date":"2013-08-28T01:47:33.792Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-08-28T01:47:42.879Z","type":"quit"}
{"nick":"othiym23","message":"https://gist.github.com/othiym23/6179922","date":"2013-08-28T01:48:16.611Z","type":"message"}
{"nick":"othiym23","message":"it's still pretty much that bad on that particular machine","date":"2013-08-28T01:48:27.202Z","type":"message"}
{"nick":"othiym23","message":"by which I mean this particular machine","date":"2013-08-28T01:48:46.964Z","type":"message"}
{"nick":"othiym23","message":"that I'm typing on","date":"2013-08-28T01:48:49.009Z","type":"message"}
{"nick":"othiym23","message":"right now","date":"2013-08-28T01:48:50.340Z","type":"message"}
{"nick":"tjfontaine","message":"well, hrtime has nothing to do with the wallclock reall","date":"2013-08-28T01:49:15.679Z","type":"message"}
{"nick":"tjfontaine","message":"y","date":"2013-08-28T01:49:16.240Z","type":"message"}
{"nick":"inolen","date":"2013-08-28T01:49:43.124Z","type":"join"}
{"nick":"tjfontaine","message":"the fact that there's a correlation on some systems is happenstance","date":"2013-08-28T01:49:59.185Z","type":"message"}
{"nick":"othiym23","message":"yeah, but the hwclock and the tick counter shouldn't be *that* far off each other, should they?","date":"2013-08-28T01:50:28.241Z","type":"message"}
{"nick":"othiym23","message":"is this some weird power-saving thing?","date":"2013-08-28T01:50:35.125Z","type":"message"}
{"nick":"tjfontaine","message":"more than likely yes","date":"2013-08-28T01:50:41.904Z","type":"message"}
{"nick":"othiym23","message":"it's a laptop, so I\"m prepared to believe frequency scaling is in the mix somehow, but that's with the APM set for \"maximum performance\", plugged into the wall","date":"2013-08-28T01:51:07.412Z","type":"message"}
{"nick":"othiym23","message":"anyway, I love hrtime but I'm not so sure how much I trust it for durations longer than about 10 seconds","date":"2013-08-28T01:51:54.977Z","type":"message"}
{"nick":"othiym23","action":"&","date":"2013-08-28T01:54:40.981Z","type":"action"}
{"nick":"LOUDBOT","message":"WHATHAHAHAHA!!!?","date":"2013-08-28T01:54:41.433Z","type":"message"}
{"nick":"abraxas","date":"2013-08-28T01:56:29.325Z","type":"join"}
{"nick":"tjfontaine","message":"hueniverse: I will do further investigation but the first timeout is indeed always wrong","date":"2013-08-28T01:58:39.652Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: oh?  what issue did it fix?","date":"2013-08-28T02:01:11.733Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: i'm gonna make pause() and resume() chainable I think","date":"2013-08-28T02:02:46.297Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: in response to that juliangruber issue about setEncoding","date":"2013-08-28T02:03:02.222Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #287 \u00037UNSTABLE\u000f windows-x64 (20/637) windows-ia32 (18/637) http://jenkins.nodejs.org/job/nodejs-master-windows/287/","date":"2013-08-28T02:06:50.941Z","type":"message"}
{"nick":"wavded","reason":"Quit: Hasta la pasta","date":"2013-08-28T02:16:03.547Z","type":"quit"}
{"nick":"dshaw_","date":"2013-08-28T02:17:44.518Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-28T02:18:37.171Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-08-28T02:22:11.993Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-28T02:42:06.421Z","type":"quit"}
{"nick":"dshaw_","date":"2013-08-28T02:43:45.999Z","type":"join"}
{"nick":"isaacs","message":"tjfontaine hueniverse: this timer thing is really interesting.","date":"2013-08-28T02:44:27.904Z","type":"message"}
{"nick":"isaacs","message":"i can very reliably get process.hrtime() showing that the timers are dinging early.  however, Date.now() shows a ms diff of 0 every time","date":"2013-08-28T02:44:54.076Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-28T02:48:27.513Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u000273d328d\u0002 : doc: Adjust util stability index to 'API Frozen' - http://git.io/f8Mc9A","date":"2013-08-28T02:52:34.712Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u000202eb9c8\u0002 : doc: Adjust util stability index to 'API Frozen' - http://git.io/Zx0ClQ","date":"2013-08-28T02:52:57.713Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-28T02:59:53.389Z","type":"quit"}
{"nick":"dap","date":"2013-08-28T03:01:05.536Z","type":"join"}
{"nick":"dshaw_","date":"2013-08-28T03:04:05.972Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1451 \u00037UNSTABLE\u000f osx-ia32 (1/598) smartos-ia32 (1/598) osx-x64 (1/598) smartos-x64 (3/598) http://jenkins.nodejs.org/job/nodejs-v0.10/1451/","date":"2013-08-28T03:05:23.956Z","type":"message"}
{"nick":"AvianFlu","date":"2013-08-28T03:05:57.182Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #497 \u00037UNSTABLE\u000f linux-ia32 (4/637) smartos-x64 (10/637) osx-ia32 (1/637) smartos-ia32 (1/637) osx-x64 (1/637) linux-x64 (5/637) http://jenkins.nodejs.org/job/nodejs-master/497/","date":"2013-08-28T03:06:10.962Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: pause/resume chain seems fine to me","date":"2013-08-28T03:11:53.568Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: the exec one you just closed","date":"2013-08-28T03:11:59.940Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-08-28T03:13:24.730Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-28T03:13:31.068Z","type":"quit"}
{"nick":"tjfontaine","message":"isaacs: while riding the subway, my gut was telling me that the issue is that we're using the cached libuv loop time, which is 25ms behind, so showing that with hrtime seems straight forward because you're forcing the sysclal","date":"2013-08-28T03:14:45.203Z","type":"message"}
{"nick":"tjfontaine","message":"*syscall","date":"2013-08-28T03:14:49.209Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: you can see that by letting the loop iterate once by wrapping the first timeout in an immediate","date":"2013-08-28T03:16:09.282Z","type":"message"}
{"nick":"mcavage","reason":"Remote host closed the connection","date":"2013-08-28T03:16:13.130Z","type":"quit"}
{"nick":"tjfontaine","message":"or another timer for that matter","date":"2013-08-28T03:16:14.795Z","type":"message"}
{"nick":"tjfontaine","message":"so whatever the first deviation is, is roughly equivalent to the startup time of node","date":"2013-08-28T03:16:47.329Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: https://gist.github.com/tjfontaine/6361795","date":"2013-08-28T03:19:08.709Z","type":"message"}
{"nick":"tjfontaine","message":"so, the timer is firing at least 50ms later, but the starting timer point is not an extra syscall, it's from when libuv got to us","date":"2013-08-28T03:21:17.666Z","type":"message"}
{"nick":"mordy__","message":"hrm; what's the equivalent of uv_stop in 0.8?","date":"2013-08-28T03:28:11.481Z","type":"message"}
{"nick":"mordy__","action":"is trying to port to 0.8","date":"2013-08-28T03:28:17.270Z","type":"action"}
{"nick":"mordy__","message":"or is my only option to not use uv_run_default and run uv_run_once in a loop","date":"2013-08-28T03:28:47.772Z","type":"message"}
{"nick":"mordy__","message":"i.e. while (dontstop) { uv_run_once(loop); }","date":"2013-08-28T03:29:07.824Z","type":"message"}
{"nick":"tjfontaine","message":"I'm not going to say that's your only option, but it certainly is an option I can think of off the top of my head :)","date":"2013-08-28T03:29:31.701Z","type":"message"}
{"nick":"groundwater","date":"2013-08-28T03:30:21.417Z","type":"join"}
{"nick":"groundwater","reason":"Client Quit","date":"2013-08-28T03:30:21.417Z","type":"quit"}
{"nick":"tjfontaine","message":"mordy__: that's essentially what uv_run+stop is anyway","date":"2013-08-28T03:32:14.036Z","type":"message"}
{"nick":"mordy__","message":"ahh","date":"2013-08-28T03:33:14.498Z","type":"message"}
{"nick":"mordy__","message":"and there's a return value","date":"2013-08-28T03:33:17.614Z","type":"message"}
{"nick":"mordy__","message":"which i must check to see if the loop still has stuff to do","date":"2013-08-28T03:33:30.287Z","type":"message"}
{"nick":"tjfontaine","message":"right","date":"2013-08-28T03:34:07.030Z","type":"message"}
{"nick":"indexzero","date":"2013-08-28T03:40:50.349Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #288 \u00037UNSTABLE\u000f windows-x64 (21/637) windows-ia32 (19/637) http://jenkins.nodejs.org/job/nodejs-master-windows/288/","date":"2013-08-28T03:45:47.840Z","type":"message"}
{"nick":"TooTallNate","date":"2013-08-28T03:46:52.867Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-08-28T04:03:22.437Z","type":"quit"}
{"nick":"mordy__","message":"http://paste.scsys.co.uk/266784 -- hrm, this should cut it","date":"2013-08-28T04:09:01.912Z","type":"message"}
{"nick":"mordy__","message":"let's see..","date":"2013-08-28T04:09:04.864Z","type":"message"}
{"nick":"mordy__","message":"ok, fixed the UV stuff","date":"2013-08-28T04:11:07.464Z","type":"message"}
{"nick":"mordy__","message":"now let's see node","date":"2013-08-28T04:11:12.103Z","type":"message"}
{"nick":"mordy__","message":"hrm.. 0.8 has Buffer::New(char *, size_t) whereas in 0.10 it's ::New(const char *)","date":"2013-08-28T04:20:29.581Z","type":"message"}
{"nick":"mordy__","message":"i'm imagining that 0.8 doesn't actually modify anything?","date":"2013-08-28T04:20:44.882Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #179 \u00037UNSTABLE\u000f windows-x64 (7/598) windows-ia32 (8/598) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/179/","date":"2013-08-28T04:20:46.382Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-28T04:21:00.840Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-28T04:29:26.247Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-28T04:43:16.427Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #289 \u00037UNSTABLE\u000f windows-x64 (20/637) windows-ia32 (18/637) http://jenkins.nodejs.org/job/nodejs-master-windows/289/","date":"2013-08-28T05:05:40.172Z","type":"message"}
{"nick":"hueniverse","message":"othiym23: we don't use mocha... for many reasons","date":"2013-08-28T05:07:40.401Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-28T05:29:35.002Z","type":"quit"}
{"nick":"pfox__","reason":"Remote host closed the connection","date":"2013-08-28T05:30:51.963Z","type":"quit"}
{"nick":"pfox__","date":"2013-08-28T05:31:20.331Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-28T05:51:12.674Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-28T05:51:41.451Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #290 \u00037UNSTABLE\u000f windows-x64 (18/637) windows-ia32 (21/637) http://jenkins.nodejs.org/job/nodejs-master-windows/290/","date":"2013-08-28T05:52:49.849Z","type":"message"}
{"nick":"indexzero","date":"2013-08-28T05:53:26.251Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-28T06:04:46.149Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-28T06:06:56.873Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-28T06:07:25.456Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-28T06:27:25.614Z","type":"nick"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-28T06:31:24.526Z","type":"nick"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-28T06:45:19.878Z","type":"nick"}
{"nick":"`3E|Zzz","new_nick":"`3rdEden","date":"2013-08-28T06:45:27.421Z","type":"nick"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #180 \u00037UNSTABLE\u000f windows-x64 (7/598) windows-ia32 (7/598) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/180/","date":"2013-08-28T06:46:35.730Z","type":"message"}
{"nick":"rvagg","new_nick":"Omakase","date":"2013-08-28T06:50:12.731Z","type":"nick"}
{"nick":"Omakase","new_nick":"rvagg","date":"2013-08-28T06:50:37.111Z","type":"nick"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-28T06:52:17.530Z","type":"nick"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-08-28T06:54:25.466Z","type":"quit"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-08-28T06:58:16.428Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-28T07:01:55.924Z","type":"nick"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-28T07:18:38.802Z","type":"quit"}
{"nick":"wolfeida_","reason":"Remote host closed the connection","date":"2013-08-28T07:19:10.176Z","type":"quit"}
{"nick":"dominictarr","date":"2013-08-28T07:21:58.571Z","type":"join"}
{"nick":"hz","date":"2013-08-28T07:23:15.645Z","type":"join"}
{"nick":"csaoh","date":"2013-08-28T07:32:20.990Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-28T07:46:07.073Z","type":"quit"}
{"nick":"julianduque","reason":"Quit: leaving","date":"2013-08-28T07:47:20.705Z","type":"quit"}
{"nick":"rendar","date":"2013-08-28T08:08:59.627Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-28T08:11:50.320Z","type":"nick"}
{"nick":"dominictarr","date":"2013-08-28T08:15:02.774Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-28T08:21:45.347Z","type":"nick"}
{"nick":"Benvie","date":"2013-08-28T08:29:45.992Z","type":"join"}
{"nick":"EhevuTov","date":"2013-08-28T08:31:42.825Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-28T09:19:21.540Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-28T09:40:00.217Z","type":"quit"}
{"nick":"bnoordhuis","message":"saghul: re: #908, what commit is that?","date":"2013-08-28T09:44:02.824Z","type":"message"}
{"nick":"saghul","message":"bnoordhuis d48168a","date":"2013-08-28T09:45:33.591Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-08-28T09:46:19.808Z","type":"quit"}
{"nick":"inolen","date":"2013-08-28T09:47:00.559Z","type":"join"}
{"nick":"bnoordhuis","message":"saghul: okay, thanks","date":"2013-08-28T09:47:24.344Z","type":"message"}
{"nick":"bnoordhuis","message":"do older commits work?","date":"2013-08-28T09:47:33.398Z","type":"message"}
{"nick":"bnoordhuis","message":"err, previous","date":"2013-08-28T09:47:42.784Z","type":"message"}
{"nick":"saghul","message":"yes, I guess it will work if I revert this one: https://github.com/joyent/libuv/commit/cd2794c01fc84a4118f79e31071cb1bca78918f5","date":"2013-08-28T09:48:57.626Z","type":"message"}
{"nick":"bnoordhuis","message":"sigh. well, at least it's easy to fix","date":"2013-08-28T09:50:25.345Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll have a patch in 5 minutes you can try","date":"2013-08-28T09:50:39.065Z","type":"message"}
{"nick":"saghul","message":"nice! FWIW, abcad99 works","date":"2013-08-28T09:50:59.970Z","type":"message"}
{"nick":"saghul","message":"I read something about that expression not being really constant, by that's about where my C fu ends","date":"2013-08-28T09:51:29.399Z","type":"message"}
{"nick":"hueniverse","reason":"Read error: Connection reset by peer","date":"2013-08-28T09:54:31.738Z","type":"quit"}
{"nick":"hueniverse","date":"2013-08-28T09:56:10.492Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033bnoordhuis\u000f created branch saghul-review-plox - http://git.io/Shz_zw","date":"2013-08-28T09:59:30.061Z","type":"message"}
{"nick":"bnoordhuis","message":"saghul: ^","date":"2013-08-28T09:59:47.920Z","type":"message"}
{"nick":"saghul","message":"sweet, testing","date":"2013-08-28T10:00:05.749Z","type":"message"}
{"nick":"saghul","message":"bnoordhuis works!","date":"2013-08-28T10:04:04.309Z","type":"message"}
{"nick":"bnoordhuis","message":"nice, thanks","date":"2013-08-28T10:04:22.830Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u000282f2472\u0002 : darwin: fix 10.6 build error in fsevents.c - http://git.io/9r9oAw","date":"2013-08-28T10:04:38.199Z","type":"message"}
{"nick":"rendar","message":"what is that saghul thing all about?","date":"2013-08-28T10:07:24.209Z","type":"message"}
{"nick":"bnoordhuis","message":"'that saghul thing'... saghul has feelings too, you know","date":"2013-08-28T10:11:48.407Z","type":"message"}
{"nick":"bnoordhuis","message":"gcc/clang on 10.6 was complaining about a const int expression not being constant at compile time","date":"2013-08-28T10:12:24.998Z","type":"message"}
{"nick":"rendar","message":"oh, sorry! saghul is a guy?","date":"2013-08-28T10:14:31.715Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-review\u0002: #51 \u00037UNSTABLE\u000f windows-x64 (4/194) windows-ia32 (3/194) smartos-ia32 (2/193) smartos-x64 (2/193) http://jenkins.nodejs.org/job/libuv-review/51/","date":"2013-08-28T10:14:47.300Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, i see...","date":"2013-08-28T10:14:55.351Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-08-28T10:17:39.489Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #143 \u00037UNSTABLE\u000f windows-x64 (3/194) windows-ia32 (3/194) smartos-ia32 (2/193) smartos-x64 (2/193) http://jenkins.nodejs.org/job/libuv-master-gyp/143/","date":"2013-08-28T10:18:38.410Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: https://github.com/joyent/libuv/issues/909","date":"2013-08-28T10:19:02.879Z","type":"message"}
{"nick":"bnoordhuis","message":"also, g'morning :)","date":"2013-08-28T10:19:09.793Z","type":"message"}
{"nick":"piscisaureus_","message":"good morning ben","date":"2013-08-28T10:19:18.577Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #204 \u00037UNSTABLE\u000f windows (3/194) smartos (9/193) http://jenkins.nodejs.org/job/libuv-master/204/","date":"2013-08-28T10:20:51.401Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yeah I saw it. Unfortunately I won't have time to fix this anytime soon.","date":"2013-08-28T10:21:25.464Z","type":"message"}
{"nick":"piscisaureus_","message":"well - we could land that patch if the guy signs the cla","date":"2013-08-28T10:21:48.807Z","type":"message"}
{"nick":"piscisaureus_","message":"(although I have no clue why it works)","date":"2013-08-28T10:21:53.833Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, that doesn't inspire faith","date":"2013-08-28T10:22:02.504Z","type":"message"}
{"nick":"piscisaureus_","message":"well","date":"2013-08-28T10:22:08.370Z","type":"message"}
{"nick":"bnoordhuis","message":"maybe sblom can look at it?","date":"2013-08-28T10:22:10.977Z","type":"message"}
{"nick":"piscisaureus_","message":"it's more that I have forgotten how that code works","date":"2013-08-28T10:22:20.586Z","type":"message"}
{"nick":"piscisaureus_","message":"which makes reviewing the patch not easy","date":"2013-08-28T10:22:32.993Z","type":"message"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-08-28T10:22:35.715Z","type":"quit"}
{"nick":"piscisaureus_","message":"that code is quite old - it predates libuv - and I wasn't as confident writing c as i am today :)","date":"2013-08-28T10:22:52.770Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, okay","date":"2013-08-28T10:23:07.071Z","type":"message"}
{"nick":"bnoordhuis","message":"so, now what? i'd fix it but i don't really have a clue how paths are supposed to work on windows","date":"2013-08-28T10:24:43.039Z","type":"message"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-08-28T10:25:50.398Z","type":"quit"}
{"nick":"piscisaureus_","message":"I also see that we strip single quotes - bad","date":"2013-08-28T10:26:30.022Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: well, it works the same as on unix (forget about PATHEXT now)","date":"2013-08-28T10:26:54.517Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Domenic Denicola\u000f \u00037master\u000f * \u00029c110d8\u0002 : vm: add isContext; prevent double-contextifying (+2 more commits) - http://git.io/MnBdgA","date":"2013-08-28T10:27:04.553Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: except paths are separated by ;","date":"2013-08-28T10:27:12.915Z","type":"message"}
{"nick":"piscisaureus_","message":"and not :","date":"2013-08-28T10:27:16.388Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: paths in the PATH env var may be quoted but I'm doing that wrong","date":"2013-08-28T10:28:00.286Z","type":"message"}
{"nick":"piscisaureus_","message":"even more wrong","date":"2013-08-28T10:28:24.882Z","type":"message"}
{"nick":"piscisaureus_","message":"...","date":"2013-08-28T10:28:25.822Z","type":"message"}
{"nick":"piscisaureus_","message":"it assumes a single quote ' can also be used but in fact it isn't okay","date":"2013-08-28T10:28:49.098Z","type":"message"}
{"nick":"bnoordhuis","message":"oh dear","date":"2013-08-28T10:28:56.427Z","type":"message"}
{"nick":"piscisaureus_","message":"but now I have to figure out what this would do","date":"2013-08-28T10:29:52.502Z","type":"message"}
{"nick":"piscisaureus_","message":"PATH = c:\\windows;\"foo\"bar\";c:\\stuff","date":"2013-08-28T10:30:07.050Z","type":"message"}
{"nick":"piscisaureus_","message":"oh well","date":"2013-08-28T10:32:09.553Z","type":"message"}
{"nick":"piscisaureus_","message":"it seems that that breaks path parsing completely","date":"2013-08-28T10:32:15.917Z","type":"message"}
{"nick":"piscisaureus_","message":"in windows itself","date":"2013-08-28T10:32:21.446Z","type":"message"}
{"nick":"Benvie","reason":"Ping timeout: 260 seconds","date":"2013-08-28T10:35:59.923Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-28T10:37:33.332Z","type":"join"}
{"nick":"piscisaureus_","message":"okay, so the rules are","date":"2013-08-28T10:37:41.721Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u000229d3624\u0002 : crypto: make randomBytes/pbkdf2 cbs domain aware - http://git.io/yl4Vnw","date":"2013-08-28T10:38:17.726Z","type":"message"}
{"nick":"piscisaureus_","message":"* a path entry may contain quoted parts. Quoted parts are valid even in the middle of a path (e.g. c:\\win\"downs","date":"2013-08-28T10:38:35.825Z","type":"message"}
{"nick":"piscisaureus_","message":"e.g. c:\\win\"dows\"\\system32 would be perfectly legal","date":"2013-08-28T10:38:53.276Z","type":"message"}
{"nick":"piscisaureus_","message":"however it may not contain any *empty* quoted parts, eg. c:\\\"\"windows is invalid. It interrupts path parsing at that point and further path components are not considered.","date":"2013-08-28T10:39:30.452Z","type":"message"}
{"nick":"bnoordhuis","message":"is there any logic to that?","date":"2013-08-28T10:40:22.824Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #498 \u00037UNSTABLE\u000f smartos-x64 (8/638) osx-ia32 (1/638) smartos-ia32 (2/638) http://jenkins.nodejs.org/job/nodejs-master/498/","date":"2013-08-28T10:40:33.749Z","type":"message"}
{"nick":"piscisaureus_","message":"no","date":"2013-08-28T10:40:49.964Z","type":"message"}
{"nick":"piscisaureus_","message":"also, the last PATH entry may contain an \"unbalanced\" quote","date":"2013-08-28T10:42:14.057Z","type":"message"}
{"nick":"csaoh","date":"2013-08-28T10:42:20.537Z","type":"join"}
{"nick":"piscisaureus_","message":"so PATH=c:\\windows;\"c:\\stuff","date":"2013-08-28T10:42:41.411Z","type":"message"}
{"nick":"piscisaureus_","message":"would be okay","date":"2013-08-28T10:42:44.025Z","type":"message"}
{"nick":"bnoordhuis","message":"now that you have it all fresh in memory, i move that you go in and fix src/win :)","date":"2013-08-28T10:43:56.155Z","type":"message"}
{"nick":"csaoh","reason":"Client Quit","date":"2013-08-28T10:43:58.312Z","type":"quit"}
{"nick":"piscisaureus_","message":"well - I am compelled but I have no time","date":"2013-08-28T10:44:14.238Z","type":"message"}
{"nick":"piscisaureus_","message":"I have about 11 days to finish execSync, Task and create a presentation about it","date":"2013-08-28T10:44:43.272Z","type":"message"}
{"nick":"piscisaureus_","message":"not to mention file my tax forms","date":"2013-08-28T10:44:53.835Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #187 \u00037UNSTABLE\u000f smartos-x64 (9/637) osx-x64 (2/637) smartos-ia32 (2/637) linux-x64 (5/637) linux-ia32 (1/637) http://jenkins.nodejs.org/job/libuv-node-integration/187/","date":"2013-08-28T10:44:55.910Z","type":"message"}
{"nick":"piscisaureus_","message":"that includes the weekends","date":"2013-08-28T10:45:06.988Z","type":"message"}
{"nick":"piscisaureus_","message":"also this is much more work than computing the environmental impact of saghul's patch","date":"2013-08-28T10:45:28.967Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: also, setting up BVs","date":"2013-08-28T10:45:40.946Z","type":"message"}
{"nick":"piscisaureus_","message":"yes that too","date":"2013-08-28T10:45:51.946Z","type":"message"}
{"nick":"piscisaureus_","message":"there you go.","date":"2013-08-28T10:45:58.241Z","type":"message"}
{"nick":"piscisaureus_","message":"all my excuses","date":"2013-08-28T10:46:00.290Z","type":"message"}
{"nick":"bnoordhuis","message":"i remember you had one or two questions. mail sjoerd, i think he's back from his holiday","date":"2013-08-28T10:46:14.774Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1452 \u00037UNSTABLE\u000f smartos-ia32 (1/598) osx-x64 (1/598) linux-x64 (1/598) smartos-x64 (1/598) linux-ia32 (1/598) http://jenkins.nodejs.org/job/nodejs-v0.10/1452/","date":"2013-08-28T10:51:12.945Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #499 \u00037UNSTABLE\u000f linux-ia32 (1/639) smartos-x64 (10/639) smartos-ia32 (3/639) linux-x64 (1/639) http://jenkins.nodejs.org/job/nodejs-master/499/","date":"2013-08-28T10:52:18.049Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #291 \u00037UNSTABLE\u000f windows-x64 (20/638) windows-ia32 (26/638) http://jenkins.nodejs.org/job/nodejs-master-windows/291/","date":"2013-08-28T10:56:02.097Z","type":"message"}
{"nick":"csaoh","date":"2013-08-28T10:59:26.861Z","type":"join"}
{"nick":"leonvv","date":"2013-08-28T11:06:10.512Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 245 seconds","date":"2013-08-28T11:14:10.223Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #292 \u00034FAILURE\u000f windows-ia32 (24/639) http://jenkins.nodejs.org/job/nodejs-master-windows/292/","date":"2013-08-28T11:45:22.757Z","type":"message"}
{"nick":"kazupon_","date":"2013-08-28T11:46:53.769Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-08-28T11:48:05.857Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2013-08-28T11:48:52.936Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-28T12:17:11.758Z","type":"join"}
{"nick":"kazupon_","reason":"Ping timeout: 240 seconds","date":"2013-08-28T12:19:50.541Z","type":"quit"}
{"nick":"piscisaureus_","message":"hmm why is windowsVerbatimArguments not documented","date":"2013-08-28T12:24:48.958Z","type":"message"}
{"nick":"piscisaureus_","message":"Also \"Example of checking for failed exec:\" is out of date :(","date":"2013-08-28T12:27:01.343Z","type":"message"}
{"nick":"piscisaureus_","message":"\"signal String the signal passed to kill the child process, if it was killed by the parent.\" -> inaccurate.","date":"2013-08-28T12:27:54.482Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-08-28T12:28:14.538Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-28T12:48:26.155Z","type":"join"}
{"nick":"pachet","date":"2013-08-28T12:50:11.288Z","type":"join"}
{"nick":"leonvv","reason":"Remote host closed the connection","date":"2013-08-28T12:57:20.940Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Read error: No route to host","date":"2013-08-28T13:01:53.128Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-08-28T13:09:02.538Z","type":"quit"}
{"nick":"hz","reason":"Ping timeout: 276 seconds","date":"2013-08-28T13:18:09.705Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-08-28T13:22:09.369Z","type":"join"}
{"nick":"hz","date":"2013-08-28T13:23:29.983Z","type":"join"}
{"nick":"kazupon","date":"2013-08-28T13:35:48.973Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-28T13:40:41.114Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 276 seconds","date":"2013-08-28T13:40:54.635Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-28T13:46:45.750Z","type":"join"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-08-28T13:54:07.408Z","type":"quit"}
{"nick":"csaoh","date":"2013-08-28T13:55:56.086Z","type":"join"}
{"nick":"jmar777","date":"2013-08-28T14:01:27.195Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-28T14:27:48.871Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-28T14:30:01.712Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-28T14:33:15.367Z","type":"join"}
{"nick":"kevinswiber","date":"2013-08-28T14:35:36.496Z","type":"join"}
{"nick":"c4milo","date":"2013-08-28T14:39:35.944Z","type":"join"}
{"nick":"kazupon","date":"2013-08-28T15:05:51.085Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 245 seconds","date":"2013-08-28T15:06:15.151Z","type":"quit"}
{"nick":"indexzero","date":"2013-08-28T15:06:36.045Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #500 \u00037UNSTABLE\u000f smartos-x64 (8/639) smartos-ia32 (3/639) http://jenkins.nodejs.org/job/nodejs-master/500/","date":"2013-08-28T15:17:37.561Z","type":"message"}
{"nick":"mordy__","message":"hrm, so we now have 0.8 support","date":"2013-08-28T15:18:59.258Z","type":"message"}
{"nick":"mordy__","message":"this wasn't very painful. 0.11 fails with a flood of errors relating to Persistent<> handles","date":"2013-08-28T15:19:17.077Z","type":"message"}
{"nick":"mordy__","message":"there seems to be some kind of #define to be used to enable Persistent<T> : Handle<T>","date":"2013-08-28T15:19:40.430Z","type":"message"}
{"nick":"mordy__","message":"would it be safe to enable this? or would it break something","date":"2013-08-28T15:19:54.481Z","type":"message"}
{"nick":"bradleymeck","date":"2013-08-28T15:21:10.913Z","type":"join"}
{"nick":"bnoordhuis","message":"mordy__: you mean V8_USE_UNSAFE_HANDLES? that's going away","date":"2013-08-28T15:24:34.476Z","type":"message"}
{"nick":"mordy__","message":"yep :/","date":"2013-08-28T15:25:40.711Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-28T15:29:37.386Z","type":"quit"}
{"nick":"hz","date":"2013-08-28T15:39:13.689Z","type":"quit"}
{"nick":"AvianFlu_","date":"2013-08-28T15:41:03.396Z","type":"join"}
{"nick":"AvianFlu","reason":"Disconnected by services","date":"2013-08-28T15:41:12.987Z","type":"quit"}
{"nick":"AvianFlu_","new_nick":"AvianFlu","date":"2013-08-28T15:41:16.137Z","type":"nick"}
{"nick":"piscisaureus_","date":"2013-08-28T15:53:30.361Z","type":"join"}
{"nick":"dap","date":"2013-08-28T16:05:03.778Z","type":"join"}
{"nick":"TooTallNate","date":"2013-08-28T16:08:57.767Z","type":"join"}
{"nick":"kevinswiber","date":"2013-08-28T16:17:06.374Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: hey","date":"2013-08-28T16:18:47.338Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: do you know if uv_process_kill could ever fail with ESRCH ?","date":"2013-08-28T16:18:59.464Z","type":"message"}
{"nick":"tjfontaine","message":"mordy__: \"safe\" in that it will survive the 0.12 release","date":"2013-08-28T16:20:38.245Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 246 seconds","date":"2013-08-28T16:22:34.914Z","type":"quit"}
{"nick":"sblom","date":"2013-08-28T16:22:58.671Z","type":"join"}
{"nick":"mordy__","message":"tjfontaine: hrm; alright","date":"2013-08-28T16:24:26.064Z","type":"message"}
{"nick":"mordy__","message":"i'm guessing 0.12 will be around for a while","date":"2013-08-28T16:24:33.981Z","type":"message"}
{"nick":"mordy__","message":"do yall have any release cycle?","date":"2013-08-28T16:24:41.172Z","type":"message"}
{"nick":"tjfontaine","message":"if you can avoid using the pattern today your life will be easier later","date":"2013-08-28T16:24:55.781Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-28T16:25:41.031Z","type":"quit"}
{"nick":"tjfontaine","message":"mordy__: we do have a cycle, we're gearing up for 0.12 \"soon\", after that it's focus on 1.0","date":"2013-08-28T16:26:01.026Z","type":"message"}
{"nick":"isaacs","message":"ircretary: tell bnoordhuis Hey, I saw you landed most of https://github.com/joyent/node/pull/6121.  Did you want me to review the options arg and doc bits?","date":"2013-08-28T16:26:23.764Z","type":"message"}
{"nick":"ircretary","message":"isaacs: I'll be sure to tell bnoordhuis","date":"2013-08-28T16:26:23.980Z","type":"message"}
{"nick":"isaacs","message":"ircretary: tell bnoordhuis Or was there some other reason you wanted to push back on that?","date":"2013-08-28T16:26:58.833Z","type":"message"}
{"nick":"ircretary","message":"isaacs: I'll be sure to tell bnoordhuis","date":"2013-08-28T16:26:59.049Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: did you see my response on the timer issue?","date":"2013-08-28T16:27:36.042Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: no, i'll look now","date":"2013-08-28T16:27:50.102Z","type":"message"}
{"nick":"tjfontaine","message":"k","date":"2013-08-28T16:27:54.955Z","type":"message"}
{"nick":"amartens","date":"2013-08-28T16:28:39.866Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-28T16:32:11.239Z","type":"quit"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-28T16:32:36.601Z","type":"quit"}
{"nick":"dshaw_","date":"2013-08-28T16:33:17.337Z","type":"join"}
{"nick":"kevinswiber","date":"2013-08-28T16:35:27.356Z","type":"join"}
{"nick":"mordy__","message":"so what's exactly the deal with the new Persistent<> handles.. let me have a look","date":"2013-08-28T16:37:19.389Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: the options arg and doc bits are the only relevant parts of that PR, I just put it on top of the PR that bnoordhuis landed.","date":"2013-08-28T16:37:20.626Z","type":"message"}
{"nick":"tjfontaine","message":"mordy__: Handle is going away, there won't be a commont root between Local and Persistent anymore","date":"2013-08-28T16:38:12.603Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: I guess making them separate PRs may not have been necessary, but I liked separating the memory-leak stuff from the API-related stuff.","date":"2013-08-28T16:38:23.335Z","type":"message"}
{"nick":"mordy__","message":"tjfontaine: so i want to change all my code to Local<> too","date":"2013-08-28T16:38:28.973Z","type":"message"}
{"nick":"tjfontaine","message":"ideally yes","date":"2013-08-28T16:38:35.760Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: ohh, i see","date":"2013-08-28T16:38:54.345Z","type":"message"}
{"nick":"tjfontaine","message":"mordy__: in master you'll see PersistentToLocal stuff to handle that transition as well","date":"2013-08-28T16:39:08.073Z","type":"message"}
{"nick":"mordy__","message":"i wonder if there's some trick to #define Handle \"DONT USE THIS\"","date":"2013-08-28T16:39:20.764Z","type":"message"}
{"nick":"mordy__","message":"oh wait, no","date":"2013-08-28T16:39:32.629Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: can you rebase vm-options-and-docs on top of joyent/master and then `git push origin +vm-options-and-docs`?","date":"2013-08-28T16:39:41.773Z","type":"message"}
{"nick":"mordy__","message":"do any v8 prototypes still return/accept Handle<> though","date":"2013-08-28T16:39:50.104Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: then the bottom commits will disappear in github ui","date":"2013-08-28T16:39:58.773Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: yeah that was my plan for tonight. can do it at work if that'd be helpful.","date":"2013-08-28T16:40:24.092Z","type":"message"}
{"nick":"isaacs","message":"can someone review this simple and quick regression fix? https://github.com/isaacs/node/commit/fbb963b5d520a70d9c3f2f9ec116d79a0c676f80","date":"2013-08-28T16:40:27.614Z","type":"message"}
{"nick":"tjfontaine","message":"mordy__: it should be fine even if they do, because Local : Handle","date":"2013-08-28T16:40:32.730Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: oh, right, this isn't your job.  sorry, don't worry, i'll do it :)","date":"2013-08-28T16:40:38.563Z","type":"message"}
{"nick":"mordy__","message":"it woudl be helpful if v8.h wasn't 4k lines","date":"2013-08-28T16:41:33.286Z","type":"message"}
{"nick":"tjfontaine","message":"mordy__: ha ha","date":"2013-08-28T16:41:40.887Z","type":"message"}
{"nick":"mordy__","message":"it's probably one of the worst APIs i've ever seen. the API in itself isn't that bad, but without documentation, the names are so unintuitive","date":"2013-08-28T16:42:31.313Z","type":"message"}
{"nick":"mordy__","message":"and what's up with the PascalCase","date":"2013-08-28T16:43:03.002Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: btw, lgtm","date":"2013-08-28T16:44:03.252Z","type":"message"}
{"nick":"tjfontaine","message":"maybe time to rethink him :P","date":"2013-08-28T16:44:28.652Z","type":"message"}
{"nick":"tjfontaine","message":"er ww","date":"2013-08-28T16:44:32.932Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-08-28T16:47:57.596Z","type":"quit"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-28T16:49:01.529Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u0002fbb963b\u0002 : stream: check _events before _events.error - http://git.io/1pW5ZQ","date":"2013-08-28T16:50:46.552Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1453 \u00037UNSTABLE\u000f linux-x64 (2/598) smartos-x64 (2/598) http://jenkins.nodejs.org/job/nodejs-v0.10/1453/","date":"2013-08-28T16:58:12.780Z","type":"message"}
{"nick":"kevinswiber","date":"2013-08-28T16:59:21.337Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-28T16:59:33.161Z","type":"join"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-08-28T16:59:47.397Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-08-28T17:02:30.376Z","type":"join"}
{"nick":"dominictarr","date":"2013-08-28T17:03:27.321Z","type":"join"}
{"nick":"Somebody","date":"2013-08-28T17:05:16.855Z","type":"join"}
{"nick":"bnoordhuis","message":"isaacs: re: #6121, what i landed was #6117 - seems they overlap a little","date":"2013-08-28T17:06:06.858Z","type":"message"}
{"nick":"bnoordhuis","message":"Domenic_: ^","date":"2013-08-28T17:06:19.052Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yeah, Domenic_ pointed that out","date":"2013-08-28T17:06:20.676Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i'll just review and cherry-pick the last two commits","date":"2013-08-28T17:06:33.996Z","type":"message"}
{"nick":"bnoordhuis","message":"cool","date":"2013-08-28T17:06:36.861Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: whatever. after years of web development using jquery i've come to find chainability overrated.","date":"2013-08-28T17:08:53.025Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: but if it's not returning anything then might as well put it to use","date":"2013-08-28T17:09:10.204Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: yeah, that's kind of where i'm at, too","date":"2013-08-28T17:09:41.574Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: it *would* be nice to be able to do var server = net.createServer(fn).listen(PORT);","date":"2013-08-28T17:10:00.665Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-28T17:12:24.839Z","type":"nick"}
{"nick":"isaacs","message":"merging v0.10 into master, please don't push anything for a minute","date":"2013-08-28T17:13:26.392Z","type":"message"}
{"nick":"mikeal","date":"2013-08-28T17:14:03.372Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-28T17:14:40.038Z","type":"nick"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-28T17:14:50.815Z","type":"nick"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u00029635861\u0002 : Merge remote-tracking branch 'ry/v0.10' (+13 more commits) - http://git.io/XB9HDw","date":"2013-08-28T17:17:46.262Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: https://gist.github.com/tjfontaine/6368687","date":"2013-08-28T17:21:58.291Z","type":"message"}
{"nick":"tjfontaine","message":"I still need to cleanup my test case","date":"2013-08-28T17:22:34.339Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: mostly lgtm.  should probably cache the `process.binding('uv')`","date":"2013-08-28T17:25:02.025Z","type":"message"}
{"nick":"isaacs","message":"+test, obv","date":"2013-08-28T17:25:07.645Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: isMain will be true multiple times?","date":"2013-08-28T17:25:16.375Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: oh, haha, right","date":"2013-08-28T17:26:33.864Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #501 \u00037UNSTABLE\u000f smartos-x64 (9/640) smartos-ia32 (2/640) osx-x64 (1/640) http://jenkins.nodejs.org/job/nodejs-master/501/","date":"2013-08-28T17:27:01.349Z","type":"message"}
{"nick":"tjfontaine","message":"I didn't want to put my name onto module.js, but I need to be after any fs operations","date":"2013-08-28T17:27:14.795Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2013-08-28T17:27:18.591Z","type":"message"}
{"nick":"tjfontaine","message":"now people can blame me :)","date":"2013-08-28T17:27:27.782Z","type":"message"}
{"nick":"Domenic_","message":"i felt pretty bad touching module.js for the vm stuff, heh","date":"2013-08-28T17:29:49.674Z","type":"message"}
{"nick":"tjfontaine","message":"inorite?","date":"2013-08-28T17:29:56.988Z","type":"message"}
{"nick":"tjfontaine","message":"this will likely also fix some of the debugger tests on smartos ...","date":"2013-08-28T17:30:14.466Z","type":"message"}
{"nick":"tjfontaine","message":"as screwed up as that is","date":"2013-08-28T17:30:17.226Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-28T17:31:16.258Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 245 seconds","date":"2013-08-28T17:31:40.187Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #181 \u00037UNSTABLE\u000f windows-x64 (8/598) windows-ia32 (7/598) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/181/","date":"2013-08-28T17:32:03.415Z","type":"message"}
{"nick":"dshaw_","date":"2013-08-28T17:32:14.609Z","type":"join"}
{"nick":"isaacs","message":"tjfontaine: ohh... interesting","date":"2013-08-28T17:32:44.379Z","type":"message"}
{"nick":"tjfontaine","message":"I'm building now to test, but I'm fairly positive this is the \"startup issue\" I was debugging","date":"2013-08-28T17:33:15.663Z","type":"message"}
{"nick":"isaacs","message":"well, \"fixes a demonstrable bug that we cannot document our way out of\" is a fine reason to touch frozen code.","date":"2013-08-28T17:33:20.340Z","type":"message"}
{"nick":"isaacs","message":"t's really the ONLY reason to touch frozen code","date":"2013-08-28T17:33:31.280Z","type":"message"}
{"nick":"tjfontaine","message":"after looking at this again debug node has a delay of 50ms to stabalize","date":"2013-08-28T17:33:47.588Z","type":"message"}
{"nick":"tjfontaine","message":"well, we're firing early on that all the time","date":"2013-08-28T17:33:58.816Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-28T17:34:24.343Z","type":"nick"}
{"nick":"Benvie","date":"2013-08-28T17:34:41.964Z","type":"join"}
{"nick":"AvianFlu","date":"2013-08-28T17:37:07.854Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-28T17:40:23.738Z","type":"quit"}
{"nick":"kevinswiber","date":"2013-08-28T17:43:15.562Z","type":"join"}
{"nick":"isaacs","message":"i see","date":"2013-08-28T17:44:12.047Z","type":"message"}
{"nick":"isaacs","message":"that kinda makes sense, then","date":"2013-08-28T17:44:16.932Z","type":"message"}
{"nick":"tjfontaine","message":"it would if I could prove it","date":"2013-08-28T17:44:33.152Z","type":"message"}
{"nick":"tjfontaine","message":"racey tests are racey.","date":"2013-08-28T17:44:50.279Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: well, even if it doesn't fix the racey tests (which, we probably won't know unless we see them not-fail for a few days/weeks) but it does fix the \"timers fire early\" bug, which can be reproduced now, then great.","date":"2013-08-28T17:48:08.131Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: i'm not finding the timer bug, or your comment on it.  which one was that?","date":"2013-08-28T17:49:19.011Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: let's revisit https://github.com/TooTallNate/node/commit/4095add80ca03d9a016ad0f2ae78b51d2bd253a7 after Domenic_'s 2 vm patches and then my update to catch syntax errors better.","date":"2013-08-28T17:50:15.990Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: ya for sure, sounds good","date":"2013-08-28T17:50:35.340Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: but i'm adding this to the list to rebase onto that pile so we can treat const's like syntax violations","date":"2013-08-28T17:50:37.629Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: i think it might be unnecessary then, since run-time errors will never be treated like syntax continuations","date":"2013-08-28T17:50:54.059Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: well, reassignment of consts, specifially ;)","date":"2013-08-28T17:50:57.789Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: only parse-time errors are","date":"2013-08-28T17:50:59.129Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-08-28T17:51:01.009Z","type":"message"}
{"nick":"isaacs","message":"and that'll always happen at run-time","date":"2013-08-28T17:51:05.348Z","type":"message"}
{"nick":"isaacs","message":"we could land this patch in v0.10, of course.","date":"2013-08-28T17:51:10.959Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: there's not a github issue atm, just from here from hueniverse","date":"2013-08-28T17:51:14.254Z","type":"message"}
{"nick":"isaacs","message":"ahhh","date":"2013-08-28T17:51:22.909Z","type":"message"}
{"nick":"brson","date":"2013-08-28T17:51:24.042Z","type":"join"}
{"nick":"isaacs","message":"ok","date":"2013-08-28T17:51:24.429Z","type":"message"}
{"nick":"isaacs","message":"that explains it.  never attribute to github's crappy search what can be explained by not putting it in github in teh first place.","date":"2013-08-28T17:51:42.339Z","type":"message"}
{"nick":"tjfontaine","message":"hehe","date":"2013-08-28T17:51:46.293Z","type":"message"}
{"nick":"tjfontaine","message":"I shouldn't have said \"issue\" i should have said \"irc discussion\"","date":"2013-08-28T17:52:01.837Z","type":"message"}
{"nick":"isaacs","message":"no worries","date":"2013-08-28T17:55:57.018Z","type":"message"}
{"nick":"Benvie","reason":"Ping timeout: 246 seconds","date":"2013-08-28T17:59:52.909Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-28T18:03:01.899Z","type":"join"}
{"nick":"jmar777","reason":"Read error: Connection reset by peer","date":"2013-08-28T18:03:32.216Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-28T18:03:50.378Z","type":"join"}
{"nick":"tjfontaine","message":"I'm not sure what the goal should be here, I'm within 2ms as opposed to 25ms -- but","date":"2013-08-28T18:04:00.342Z","type":"message"}
{"nick":"piscisaureus_","message":"https://github.com/piscisaureus/node/commit/a1c93897bd1e1d86436679f8f609d6501a17055c <-- now completely works","date":"2013-08-28T18:04:45.748Z","type":"message"}
{"nick":"piscisaureus_","message":"next up is to move all spawnSync code to a separate file and revert process_wrap.cc to it's old state","date":"2013-08-28T18:05:06.069Z","type":"message"}
{"nick":"piscisaureus_","message":"unfortunately my laptop is now out of juice","date":"2013-08-28T18:05:26.443Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: \\o/","date":"2013-08-28T18:05:58.263Z","type":"message"}
{"nick":"isaacs","message":"awesome!","date":"2013-08-28T18:05:59.681Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-28T18:09:59.735Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-28T18:10:19.856Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 245 seconds","date":"2013-08-28T18:10:25.142Z","type":"quit"}
{"nick":"isaacs","message":"ok, yoga time, then land the vm stuff from Domenic, fix syntax errors in teh repl, and write a talk for nodeconf eu maybe.","date":"2013-08-28T18:10:40.429Z","type":"message"}
{"nick":"isaacs","action":"&","date":"2013-08-28T18:10:49.118Z","type":"action"}
{"nick":"LOUDBOT","message":"LET HIM BE THE ASSHOLE","date":"2013-08-28T18:10:49.849Z","type":"message"}
{"nick":"hueniverse","message":"tjfontaine: what's the latest on my timer bug?","date":"2013-08-28T18:10:54.450Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-28T18:12:04.065Z","type":"quit"}
{"nick":"othiym23","message":"hueniverse: what are you using for tests that looks so mocha-like?","date":"2013-08-28T18:13:09.288Z","type":"message"}
{"nick":"hueniverse","message":"othiym23: lab. wrote it to work with all our 1000+ mocha tests. it is super simple using domains. we had to write it because we had the worse time fighting mocha over our use of domains in hapi.","date":"2013-08-28T18:14:41.246Z","type":"message"}
{"nick":"othiym23","message":"yeah, I had to do some dumb, Macgyveresque things to test domains-based code in my own tests","date":"2013-08-28T18:15:11.263Z","type":"message"}
{"nick":"hueniverse","message":"othiym23: also didn't need all the crap for browsers, customization, etc. but also wanted built-in coverage","date":"2013-08-28T18:15:14.303Z","type":"message"}
{"nick":"othiym23","message":"I'll take a look at it, I've been meaning to get away from Mocha for a while now","date":"2013-08-28T18:15:56.045Z","type":"message"}
{"nick":"othiym23","message":"and that's easier than moving everything to tap","date":"2013-08-28T18:16:05.473Z","type":"message"}
{"nick":"hueniverse","message":"othiym23: I am careful not to call it a test framework, only a test tool. we have no intentions of extending its applicability :-)","date":"2013-08-28T18:16:10.932Z","type":"message"}
{"nick":"hueniverse","message":"but are open to improvements","date":"2013-08-28T18:16:23.140Z","type":"message"}
{"nick":"hueniverse","message":"esp around how we interact with domains. it is very sensitive to domain bugs (which we find on occasion when our domain fails to trap test exceptions)","date":"2013-08-28T18:17:00.447Z","type":"message"}
{"nick":"othiym23","message":"all I care about are nested describe / it blocks and an easy way to do both sync and async test cases","date":"2013-08-28T18:17:04.095Z","type":"message"}
{"nick":"hueniverse","message":"got all that","date":"2013-08-28T18:17:13.989Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-28T18:17:17.176Z","type":"quit"}
{"nick":"hueniverse","message":"same as express","date":"2013-08-28T18:17:17.796Z","type":"message"}
{"nick":"hueniverse","message":"sorry","date":"2013-08-28T18:17:22.709Z","type":"message"}
{"nick":"hueniverse","message":"same as mocha","date":"2013-08-28T18:17:25.020Z","type":"message"}
{"nick":"julianduque","date":"2013-08-28T18:17:38.434Z","type":"join"}
{"nick":"othiym23","message":"as long as it breaks horribly and obviously on domain failures, I'm good with that, because I'm running my tests under 0.6 / 0.8 / 0.10 and need consistent error behavior across all of them","date":"2013-08-28T18:17:49.499Z","type":"message"}
{"nick":"othiym23","message":"same diff ;)","date":"2013-08-28T18:17:54.076Z","type":"message"}
{"nick":"hueniverse","message":"well, it uses domains, so you need 0.10...","date":"2013-08-28T18:19:01.913Z","type":"message"}
{"nick":"Domenic_","message":"hueniverse: in-ter-esting...","date":"2013-08-28T18:19:13.900Z","type":"message"}
{"nick":"hueniverse","message":"0.8 has the domain nesting bug that caused me a week of grief","date":"2013-08-28T18:19:32.065Z","type":"message"}
{"nick":"hueniverse","message":"while writing lab","date":"2013-08-28T18:19:36.804Z","type":"message"}
{"nick":"Domenic_","message":"hueniverse: yes that bug is horrid.","date":"2013-08-28T18:19:44.018Z","type":"message"}
{"nick":"Domenic_","message":"https://github.com/kriskowal/asap/blob/master/test/domain-implementation.js#L13-L39","date":"2013-08-28T18:20:19.365Z","type":"message"}
{"nick":"tjfontaine","message":"hueniverse: the latest is, I think I'm going to revert Timer.now() usage, because it's just never going to do what people expect","date":"2013-08-28T18:20:22.153Z","type":"message"}
{"nick":"tjfontaine","message":"hueniverse: I am going to file the bug now","date":"2013-08-28T18:20:31.025Z","type":"message"}
{"nick":"hueniverse","message":"Domenic_: I wish I was less lazy about finding bugs when lab pukes. ","date":"2013-08-28T18:20:42.480Z","type":"message"}
{"nick":"hueniverse","message":"tjfontaine: I just expect a 300ms timeout to take, well, 300ms and not 2 :-)","date":"2013-08-28T18:21:20.992Z","type":"message"}
{"nick":"tjfontaine","message":"hueniverse: right, as of now it's only a problem in two scenarios, 1) first turn of the node event loop, 2) cpu bound application :)","date":"2013-08-28T18:21:51.072Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-28T18:22:38.510Z","type":"nick"}
{"nick":"hueniverse","message":"tjfontaine: what's interesting is that setting the 300ms timeout inside a wrapper 0ms timeout works","date":"2013-08-28T18:24:01.183Z","type":"message"}
{"nick":"tjfontaine","message":"hueniverse: right, so the loop sets the time, then we go to launch your module, which in turn does a bunch of sync fs operations (which take time) so by the time you setTimeout the loop time is stale","date":"2013-08-28T18:24:50.326Z","type":"message"}
{"nick":"tjfontaine","message":"process.binding('timer_wrap').Timer.now = Date.now; <-- can monkey patch your away from currently","date":"2013-08-28T18:25:29.298Z","type":"message"}
{"nick":"mcavage","date":"2013-08-28T18:25:29.951Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-28T18:28:03.750Z","type":"quit"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-08-28T18:29:25.212Z","type":"quit"}
{"nick":"dap","date":"2013-08-28T18:29:44.489Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-28T18:30:47.595Z","type":"nick"}
{"nick":"hueniverse","message":"tjfontaine: that works","date":"2013-08-28T18:30:48.799Z","type":"message"}
{"nick":"isaacbw","date":"2013-08-28T18:31:24.304Z","type":"join"}
{"nick":"tjfontaine","message":"right, I'm about to make the pull request that does that, but in a nicer monotonic way","date":"2013-08-28T18:31:37.049Z","type":"message"}
{"nick":"hueniverse","message":"tjfontaine: what's the eta on the next 0.11 release? my goal is to move one server to 0.11 in production as soon as we pass all the hapi tests...","date":"2013-08-28T18:31:42.681Z","type":"message"}
{"nick":"kevinswiber","date":"2013-08-28T18:31:47.379Z","type":"join"}
{"nick":"isaacbw","message":"bnoordhuis: I said this in #node.js but it will probably get lost: did you ever end up switching over to passing pointers rather than whole structs?","date":"2013-08-28T18:32:04.795Z","type":"message"}
{"nick":"tjfontaine","message":"hueniverse: probably tomorrow, if isaacs is cool with that","date":"2013-08-28T18:32:36.493Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: wtf is _thrid_party_main?","date":"2013-08-28T18:32:45.007Z","type":"message"}
{"nick":"tjfontaine","message":"haha you just found that one :)","date":"2013-08-28T18:32:53.588Z","type":"message"}
{"nick":"trevnorris","message":"*_third_party_main","date":"2013-08-28T18:32:54.540Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: did you look at the comment in src/node.js?","date":"2013-08-28T18:33:30.381Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: which one? tracing back through how that was introduced is a pain","date":"2013-08-28T18:35:57.653Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: https://github.com/joyent/node/blob/master/src/node.js#L66-L68","date":"2013-08-28T18:36:40.261Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: ah, comment, not commit","date":"2013-08-28T18:37:28.102Z","type":"message"}
{"nick":"rendar","reason":"Ping timeout: 245 seconds","date":"2013-08-28T18:37:31.641Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: yeah, saw that.it just seems like some seriously legacy stuff that might not need to be in there anymore?","date":"2013-08-28T18:37:52.996Z","type":"message"}
{"nick":"sblom","reason":"Ping timeout: 245 seconds","date":"2013-08-28T18:38:21.694Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #293 \u00037UNSTABLE\u000f windows-x64 (22/640) windows-ia32 (23/640) http://jenkins.nodejs.org/job/nodejs-master-windows/293/","date":"2013-08-28T18:38:58.960Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: I suspect there are silent people out there relying on this, why is it causing you a problem?","date":"2013-08-28T18:39:01.755Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: no problem. i just like to delete code :)","date":"2013-08-28T18:39:18.521Z","type":"message"}
{"nick":"tjfontaine","message":"hah","date":"2013-08-28T18:40:00.164Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #205 \u00037UNSTABLE\u000f linux (1/193) windows (4/194) smartos (9/193) http://jenkins.nodejs.org/job/libuv-master/205/","date":"2013-08-28T18:40:22.991Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-08-28T18:41:53.755Z","type":"join"}
{"nick":"kazupon","date":"2013-08-28T18:42:21.755Z","type":"join"}
{"nick":"tjfontaine","message":"isaacbw: btw, the commit hasn't landed for uv, but as of the status call yesterday bnoordhuis was planning on doing it","date":"2013-08-28T18:42:39.073Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: how's multi-context coming? after using it for a bit you've done a solid job.","date":"2013-08-28T18:43:02.413Z","type":"message"}
{"nick":"isaacbw","message":"tjfontaine: awesome","date":"2013-08-28T18:43:07.715Z","type":"message"}
{"nick":"hueniverse","message":"tjfontaine: sweet. thanks.","date":"2013-08-28T18:43:13.025Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: thanks :)","date":"2013-08-28T18:43:58.920Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: i took a multi-context break today (mostly)","date":"2013-08-28T18:44:19.128Z","type":"message"}
{"nick":"bnoordhuis","message":"need to figure out what to add next","date":"2013-08-28T18:44:28.041Z","type":"message"}
{"nick":"bnoordhuis","message":"if you or anyone else has suggestions for the js api, now is the time to speak up","date":"2013-08-28T18:44:45.160Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: thoughts on https://github.com/joyent/node/pull/6147 (cc hueniverse)","date":"2013-08-28T18:45:08.240Z","type":"message"}
{"nick":"trevnorris","message":"i don't give a crap about js apis. sort of feel those could go in after. the amount of rebasing you're having to do to keep the native code uptodate is sorta ridiculous.","date":"2013-08-28T18:45:31.989Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, it's kind of painful. guess i should land it soon","date":"2013-08-28T18:46:35.804Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: updating the timestamp is pretty expensive","date":"2013-08-28T18:46:54.987Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-28T18:47:05.894Z","type":"nick"}
{"nick":"isaacbw","message":"bnoordhuis: the reason I ask is that I'm planning on writing a binding for common lisp","date":"2013-08-28T18:47:06.653Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: particularly on solaris and windows, i think","date":"2013-08-28T18:47:26.047Z","type":"message"}
{"nick":"isaacbw","message":"I saw your conversation re: cl-async, but it doesn't look like the author is terribly interested in actually switching over to libuv","date":"2013-08-28T18:47:34.659Z","type":"message"}
{"nick":"trevnorris","message":"i agree. since the js api is additive so it _could_ be done during the v0.13 branch. and it seems like more feature requests don't come until after something is officially committed.","date":"2013-08-28T18:47:35.822Z","type":"message"}
{"nick":"tjfontaine","message":"in my testing it didn't seem that bad on solaris","date":"2013-08-28T18:47:38.154Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacbw: i take it the structs are rather awkward to work with?","date":"2013-08-28T18:47:59.429Z","type":"message"}
{"nick":"dshaw_","date":"2013-08-28T18:47:59.972Z","type":"join"}
{"nick":"trevnorris","message":"we should probably have a PR cleanup. after the v8 upgrade, and now this, they're all pretty much invalid. :P","date":"2013-08-28T18:48:13.398Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: when you say 'timers fire early', what exactly happens?","date":"2013-08-28T18:48:48.290Z","type":"message"}
{"nick":"isaacbw","message":"bnoordhuis: they require a bit of hackiness to work with cffi","date":"2013-08-28T18:48:49.491Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: i ask because there's an outstanding libuv issue with timers firing too early","date":"2013-08-28T18:49:04.121Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: other fix I did, https://gist.github.com/tjfontaine/6368687","date":"2013-08-28T18:49:20.048Z","type":"message"}
{"nick":"isaacbw","message":"though as the cl-async guy said, that can be fixed pretty easily with minimal layer written in c","date":"2013-08-28T18:49:27.810Z","type":"message"}
{"nick":"Somebody","reason":"Remote host closed the connection","date":"2013-08-28T18:49:52.016Z","type":"quit"}
{"nick":"tjfontaine","message":"bnoordhuis: the issue is on load we're using a cached time, but we've done fs.ops that have pushed the time a while later, so you set a timeout on first turn of 50ms, it appears as if it fired 25ms early, but really it was accurate as far as libuv is concerned but not if you're observing externally","date":"2013-08-28T18:50:29.308Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: i like the explicit approach better. however, snake_case :)","date":"2013-08-28T18:50:36.229Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-08-28T18:50:38.546Z","type":"quit"}
{"nick":"tjfontaine","message":"bnoordhuis: the explicit case doesn't solve the problem for people who do cpu bound or other sync operations though?","date":"2013-08-28T18:51:01.472Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacbw: interesting. i'll try to get that struct rework thing done before the next minor libuv release","date":"2013-08-28T18:51:04.213Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacbw: it's quite a bit of work though (not difficult work, however)","date":"2013-08-28T18:51:23.907Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: no, that's true. still, calling clock_gettime() all the time will make me feel sad :(","date":"2013-08-28T18:52:01.835Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: it's a damned if we do, damned if we don't sort of thing","date":"2013-08-28T18:52:55.867Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, i guess it is","date":"2013-08-28T18:53:11.713Z","type":"message"}
{"nick":"bnoordhuis","message":"i've toyed around with reading the TSC rather than making a syscall","date":"2013-08-28T18:53:30.089Z","type":"message"}
{"nick":"bnoordhuis","message":"but the TSC is subject to drift too, of course","date":"2013-08-28T18:53:43.783Z","type":"message"}
{"nick":"tjfontaine","message":"frustrating","date":"2013-08-28T18:53:59.078Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess that would only be a real issue when people have event loop ticks that last multiple hours","date":"2013-08-28T18:54:15.816Z","type":"message"}
{"nick":"bnoordhuis","message":"but still","date":"2013-08-28T18:54:18.821Z","type":"message"}
{"nick":"isaacbw","message":"bnoordhuis: I imagine an API change like that could get pretty tedious","date":"2013-08-28T18:54:25.806Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacbw: yeah. it's not very complicated but it requires updating all tests, for example","date":"2013-08-28T18:54:51.086Z","type":"message"}
{"nick":"bnoordhuis","message":"i just need to draw up the mental strength to go in and do it","date":"2013-08-28T18:55:00.781Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: re PR cleanup: yes, agreed","date":"2013-08-28T18:55:41.454Z","type":"message"}
{"nick":"bnoordhuis","message":"Error — Failing tests -- osx-ia32: 1, smartos-ia32: 6, osx-x64: 1, smartos-x64: 201 <- what's up with smartos-x64?","date":"2013-08-28T18:58:48.712Z","type":"message"}
{"nick":"bnoordhuis","message":"they're all failing with EADDRINUSE","date":"2013-08-28T18:58:58.311Z","type":"message"}
{"nick":"tjfontaine","message":"is there a libuv-integration test running?","date":"2013-08-28T18:59:10.830Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #188 \u00037UNSTABLE\u000f smartos-x64 (11/640) smartos-ia32 (2/640) linux-x64 (6/640) linux-ia32 (1/640) http://jenkins.nodejs.org/job/libuv-node-integration/188/","date":"2013-08-28T18:59:12.471Z","type":"message"}
{"nick":"tjfontaine","message":"that answers taht","date":"2013-08-28T18:59:21.434Z","type":"message"}
{"nick":"tjfontaine","message":"hm or","date":"2013-08-28T19:01:19.419Z","type":"message"}
{"nick":"hz","date":"2013-08-28T19:01:33.355Z","type":"join"}
{"nick":"tjfontaine","message":"ah yes, good ol hung processes","date":"2013-08-28T19:02:01.707Z","type":"message"}
{"nick":"bnoordhuis","message":"seems to happen with more PRs","date":"2013-08-28T19:04:47.839Z","type":"message"}
{"nick":"isaacbw","message":"bnoordhuis: well, I'll be in your debt if/when you do. It would save a lot of work","date":"2013-08-28T19:04:55.310Z","type":"message"}
{"nick":"isaacbw","message":"*save me :p","date":"2013-08-28T19:05:05.103Z","type":"message"}
{"nick":"hz","reason":"Client Quit","date":"2013-08-28T19:05:09.326Z","type":"quit"}
{"nick":"bnoordhuis","message":"heh :)","date":"2013-08-28T19:05:12.771Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-28T19:05:53.354Z","type":"nick"}
{"nick":"trevnorris","message":"hm. tracing every async callback path in core is sort of difficult :P","date":"2013-08-28T19:06:31.100Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: yes, there were hung debugger tests","date":"2013-08-28T19:08:31.966Z","type":"message"}
{"nick":"ecr","date":"2013-08-28T19:08:45.239Z","type":"join"}
{"nick":"ecr","reason":"Client Quit","date":"2013-08-28T19:08:47.470Z","type":"quit"}
{"nick":"tjfontaine","message":"bnoordhuis: from a broken PR build","date":"2013-08-28T19:08:55.893Z","type":"message"}
{"nick":"ecr","date":"2013-08-28T19:10:24.919Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u000293b0624\u0002 : timer_wrap: Timer.now always update loop time - http://git.io/yD8FXQ","date":"2013-08-28T19:11:10.823Z","type":"message"}
{"nick":"tjfontaine","message":"hueniverse: the fix will be in the next release","date":"2013-08-28T19:12:10.628Z","type":"message"}
{"nick":"kazupon","date":"2013-08-28T19:17:13.656Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 276 seconds","date":"2013-08-28T19:18:15.560Z","type":"quit"}
{"nick":"EhevuTov","date":"2013-08-28T19:18:59.085Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-28T19:19:02.802Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-28T19:20:27.331Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #502 \u00037UNSTABLE\u000f smartos-x64 (6/641) osx-ia32 (1/641) http://jenkins.nodejs.org/job/nodejs-master/502/","date":"2013-08-28T19:20:52.109Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 260 seconds","date":"2013-08-28T19:21:47.410Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-28T19:33:16.148Z","type":"quit"}
{"nick":"dshaw_","date":"2013-08-28T19:33:47.376Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-28T19:34:36.787Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-28T19:34:49.926Z","type":"join"}
{"nick":"kevinswiber","date":"2013-08-28T19:37:29.337Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 245 seconds","date":"2013-08-28T19:38:03.164Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-28T19:39:42.283Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #294 \u00037UNSTABLE\u000f windows-x64 (25/640) windows-ia32 (24/640) http://jenkins.nodejs.org/job/nodejs-master-windows/294/","date":"2013-08-28T19:41:05.468Z","type":"message"}
{"nick":"dshaw_","date":"2013-08-28T19:56:16.276Z","type":"join"}
{"nick":"hueniverse","message":"One more: console.log(JSON.stringify((new Buffer('text\\0!', 'ascii')).toString())); -> 0.10 \"text !\", 0.11 \"text\\u0000!\" which one is a bug?","date":"2013-08-28T19:56:48.620Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse: neither","date":"2013-08-28T19:57:12.205Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse: has to do with the switch to the new v8 WriteOneByte API","date":"2013-08-28T19:57:30.392Z","type":"message"}
{"nick":"trevnorris","message":"instead of WriteAscii","date":"2013-08-28T19:57:42.934Z","type":"message"}
{"nick":"trevnorris","message":"i remember this conversation with bnoordhuis, he could give you more specifics","date":"2013-08-28T19:58:28.729Z","type":"message"}
{"nick":"Domenic_","message":"\"text\\u0000!\" looks more correct, assuming it was JSON.stringify that introduced the escaping","date":"2013-08-28T19:58:34.835Z","type":"message"}
{"nick":"Domenic_","message":"yeah","date":"2013-08-28T19:58:48.156Z","type":"message"}
{"nick":"hueniverse","message":"Domenic_: it was","date":"2013-08-28T19:58:49.184Z","type":"message"}
{"nick":"trevnorris","message":"Buffer#toString() used to use asciiSlice(), which internally v8 changed the API.","date":"2013-08-28T19:59:34.952Z","type":"message"}
{"nick":"Domenic_","message":"I'd imagine JSON.stringify(string) should equal JSON.stringify((new Buffer(string, 'ascii')).toString()), for ascii strings at least.","date":"2013-08-28T19:59:42.169Z","type":"message"}
{"nick":"hueniverse","message":"What's the process for these? Basically, I have 0.10 code that works and doesn't under 0.11 but we got all these cases where the answer is 0.11 is right - which is fine - but I bet others will hit them at some point with 0.12","date":"2013-08-28T20:00:39.090Z","type":"message"}
{"nick":"Domenic_","message":"i guess this seems like a breaking change on the same level as breaking GEM/PUN support. not sure if the maintainers feel like documenting those.","date":"2013-08-28T20:02:09.654Z","type":"message"}
{"nick":"othiym23","message":"seems like that stuff should go into the release notes","date":"2013-08-28T20:02:28.201Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 240 seconds","date":"2013-08-28T20:03:26.703Z","type":"quit"}
{"nick":"hueniverse","message":"I'm happy to add them somewhere, just need to know where","date":"2013-08-28T20:04:51.993Z","type":"message"}
{"nick":"bnoordhuis","message":"what blasphemy is this? documenting things?","date":"2013-08-28T20:04:56.292Z","type":"message"}
{"nick":"bnoordhuis","message":"hueniverse: the wiki is the place for it","date":"2013-08-28T20:05:07.052Z","type":"message"}
{"nick":"hueniverse","message":"bnoordhuis: care to create a page or guide me where to create it?","date":"2013-08-28T20:05:27.613Z","type":"message"}
{"nick":"bnoordhuis","message":"don't know if there's a v0.10-to-v0.12 page yet. if there isn't, feel free to create one","date":"2013-08-28T20:05:29.107Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, okay :) let me look up the previous one","date":"2013-08-28T20:05:42.380Z","type":"message"}
{"nick":"bnoordhuis","message":"hueniverse: https://github.com/joyent/node/wiki/Api-changes-between-v0.8-and-v0.10","date":"2013-08-28T20:05:57.962Z","type":"message"}
{"nick":"hueniverse","message":"bnoordhuis: thanks","date":"2013-08-28T20:06:37.968Z","type":"message"}
{"nick":"hueniverse","message":"should this be caught by domains: https://gist.github.com/hueniverse/5b75f644ff7b24db0ca4","date":"2013-08-28T20:06:51.015Z","type":"message"}
{"nick":"trevnorris","message":"it's sad, but it's there: https://github.com/joyent/node/wiki/API-changes-between-v0.10-and-v0.12","date":"2013-08-28T20:07:48.272Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse: is that on master or v0.10?","date":"2013-08-28T20:08:43.532Z","type":"message"}
{"nick":"hueniverse","message":"v0.11.6","date":"2013-08-28T20:09:04.267Z","type":"message"}
{"nick":"hueniverse","message":"what do you want me to play with?","date":"2013-08-28T20:09:10.031Z","type":"message"}
{"nick":"hueniverse","message":"master?","date":"2013-08-28T20:09:14.319Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-28T20:09:33.770Z","type":"quit"}
{"nick":"trevnorris","message":"i dunno. i'm rewriting domains anyways, so who knows if it'll be broken in the near future :P","date":"2013-08-28T20:09:50.877Z","type":"message"}
{"nick":"Domenic_","message":"that page reminded me how much i can't wait for a working process.nextTick... having to roll our own queue was painful and felt so unnecesary.","date":"2013-08-28T20:10:31.780Z","type":"message"}
{"nick":"hueniverse","message":"what do you want me to do with these domain fails?","date":"2013-08-28T20:10:32.106Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-28T20:10:53.521Z","type":"nick"}
{"nick":"trevnorris","message":"hueniverse: gist a script that causes that, if you can. i'll take a look.","date":"2013-08-28T20:11:06.116Z","type":"message"}
{"nick":"othiym23","message":"it will be super nice to have a mechanism in place that abstracts the async propagation from the error-handling-y bits","date":"2013-08-28T20:16:13.934Z","type":"message"}
{"nick":"trevnorris","message":"i'm working on it, i'm working on it ;)","date":"2013-08-28T20:16:33.595Z","type":"message"}
{"nick":"othiym23","message":"I'm pretty excited for the new implementation of domains, even though I'm gonna have to redo all my error-tracing code yet again","date":"2013-08-28T20:16:43.042Z","type":"message"}
{"nick":"hueniverse","message":"othiym23: what? you have better things to do?","date":"2013-08-28T20:17:15.644Z","type":"message"}
{"nick":"kazupon","date":"2013-08-28T20:17:49.278Z","type":"join"}
{"nick":"othiym23","message":"mmmmmaybe","date":"2013-08-28T20:18:07.252Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: ping","date":"2013-08-28T20:22:10.604Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 268 seconds","date":"2013-08-28T20:22:37.066Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-28T20:25:26.388Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: pong","date":"2013-08-28T20:28:48.231Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: w/ the context changes, i'm assuming that also means not using static variables within a method?","date":"2013-08-28T20:29:29.142Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: correct","date":"2013-08-28T20:29:47.201Z","type":"message"}
{"nick":"trevnorris","message":"coolio. thanks.","date":"2013-08-28T20:29:51.648Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: I just realized that the intick can be completely moved to C++, so i'm just switching it to a private bool in TickInfo","date":"2013-08-28T20:30:25.090Z","type":"message"}
{"nick":"kellabyte","date":"2013-08-28T20:30:52.557Z","type":"join"}
{"nick":"bnoordhuis","message":"okay","date":"2013-08-28T20:32:07.828Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-08-28T20:33:42.531Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: and from how it looks, you basically baked in isolate support. instead of using node_isolate just need to use env->isolate(), right?","date":"2013-08-28T20:35:43.350Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-08-28T20:36:55.271Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-28T20:42:38.037Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #295 \u00037UNSTABLE\u000f windows-x64 (19/641) windows-ia32 (23/641) http://jenkins.nodejs.org/job/nodejs-master-windows/295/","date":"2013-08-28T20:45:01.997Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-28T20:45:24.116Z","type":"quit"}
{"nick":"bnoordhuis","message":"trevnorris: correct :)","date":"2013-08-28T20:45:52.172Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm discussing with myself if i'll remove node_isolate altogether","date":"2013-08-28T20:46:13.020Z","type":"message"}
{"nick":"bnoordhuis","message":"it's quite possible now, only we have almost 1,000 use sites in src/","date":"2013-08-28T20:46:47.586Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: hah, only that huh? that's intense.","date":"2013-08-28T20:47:54.557Z","type":"message"}
{"nick":"indexzero","date":"2013-08-28T20:49:30.647Z","type":"join"}
{"nick":"dshaw_","date":"2013-08-28T20:58:56.995Z","type":"join"}
{"nick":"txdv","reason":"Ping timeout: 264 seconds","date":"2013-08-28T21:10:18.345Z","type":"quit"}
{"nick":"inolen","reason":"Read error: No route to host","date":"2013-08-28T21:11:49.731Z","type":"quit"}
{"nick":"inolen","date":"2013-08-28T21:11:58.119Z","type":"join"}
{"nick":"jmar777","date":"2013-08-28T21:13:06.110Z","type":"join"}
{"nick":"kazupon","date":"2013-08-28T21:18:23.293Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-28T21:18:40.671Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: ping","date":"2013-08-28T21:20:11.345Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 268 seconds","date":"2013-08-28T21:23:03.159Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23: or you, ping","date":"2013-08-28T21:28:43.354Z","type":"message"}
{"nick":"jmar777","date":"2013-08-28T21:30:31.934Z","type":"join"}
{"nick":"ecr","reason":"Quit: ecr","date":"2013-08-28T21:32:08.018Z","type":"quit"}
{"nick":"ecr","date":"2013-08-28T21:32:35.014Z","type":"join"}
{"nick":"isaacs","message":"trevnorris: pong","date":"2013-08-28T21:32:43.426Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: what about: process.asyncListener.{get,set,has,clear}() ?","date":"2013-08-28T21:33:29.203Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: didn't want to pollute process w/ a bunch of long method names, and needed these internally anyways.","date":"2013-08-28T21:33:56.043Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: yeah, that's probably fine.","date":"2013-08-28T21:34:39.376Z","type":"message"}
{"nick":"isaacs","message":"it's kind of a weird api, though, still","date":"2013-08-28T21:34:51.575Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: i was talking with othiym23 the other day about this, actually.  we really need a way to be able to have more than one, without having them impact one anotehr too badly.","date":"2013-08-28T21:35:26.074Z","type":"message"}
{"nick":"trevnorris","message":"yeah, think the same thing. though right now i'm more concerned about the mechanics. I really don't care if the api changes","date":"2013-08-28T21:35:27.907Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: sure, of course","date":"2013-08-28T21:35:34.205Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: but like, if i use module-a that does some asyncListener stuf, and then module-b that also does, and also i'm using domains, it should all be at least *possible* to do transparently, without wrapping and monkeypatching all to hell.","date":"2013-08-28T21:36:07.844Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Bert Belder\u000f \u00037master\u000f * \u0002de7d698\u0002 : pipe_wrap: squelch integer type conversion warning - http://git.io/-N3oAA","date":"2013-08-28T21:36:21.591Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: of course, you CAN do: var cur = asyncListener.get(); asyncListener.add(function() { curr(); myStuff() })","date":"2013-08-28T21:36:43.574Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Bert Belder\u000f \u00037execSync-wip\u000f * \u000208356fe\u0002 : execSync spawnSync WIP - http://git.io/Mnkm7Q","date":"2013-08-28T21:36:43.791Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: yeah. those are things i'm still working on. right now i'm just getting the simple case to work, but coding with running multiple in mind.","date":"2013-08-28T21:37:08.364Z","type":"message"}
{"nick":"isaacs","message":"ewl","date":"2013-08-28T21:37:17.333Z","type":"message"}
{"nick":"isaacs","message":"kewl","date":"2013-08-28T21:37:21.314Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Bert Belder\u000f \u00037execSync-wip\u000f * \u00028ffa9e4\u0002 : spawn_sync: implement bindings - http://git.io/2Z9BJg","date":"2013-08-28T21:37:47.666Z","type":"message"}
{"nick":"trevnorris","message":"it's the mechanics that are giving me hell. there are several ways to do it, and each have their ups/downs","date":"2013-08-28T21:38:02.631Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: so my initial implementation was that you pass the callback to the async listener, where you can wrap the callback and do whatever you want with it.","date":"2013-08-28T21:39:35.763Z","type":"message"}
{"nick":"piscisaureus_","message":"damm!","date":"2013-08-28T21:39:44.082Z","type":"message"}
{"nick":"piscisaureus_","message":"forgot to remove the printfs","date":"2013-08-28T21:39:48.644Z","type":"message"}
{"nick":"trevnorris","message":"quick, force push!","date":"2013-08-28T21:39:58.162Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Bert Belder\u000f \u00037execSync-wip\u000f * \u00021826bf4\u0002 : spawn_sync: implement bindings - http://git.io/bN3ZVA","date":"2013-08-28T21:40:43.607Z","type":"message"}
{"nick":"piscisaureus_","message":"trevnorris: there ya go","date":"2013-08-28T21:40:48.091Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: but with multiple listeners that means the wrapped callback could also be wrapped by another listener.","date":"2013-08-28T21:40:48.600Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus_: :))","date":"2013-08-28T21:40:55.876Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: exactly","date":"2013-08-28T21:41:04.140Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: so you have to add another closure for each additional listener","date":"2013-08-28T21:41:15.973Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: exactly as in, that's what should happen?","date":"2013-08-28T21:41:16.542Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: no, exactly as in \"that's why this approach sucks\"","date":"2013-08-28T21:41:26.151Z","type":"message"}
{"nick":"isaacs","message":"monkey-patching before and after functional stuf is great in lisp, but in JS its kinda awful, because that's not as optimized.","date":"2013-08-28T21:41:53.123Z","type":"message"}
{"nick":"isaacs","message":"js is not FP","date":"2013-08-28T21:42:00.151Z","type":"message"}
{"nick":"trevnorris","message":"well, then this also bothers the idea of each async listener having its own context.","date":"2013-08-28T21:43:13.705Z","type":"message"}
{"nick":"trevnorris","message":"right now the domain api does some crazy shit to maintain the \"active\" context stack.","date":"2013-08-28T21:44:02.889Z","type":"message"}
{"nick":"trevnorris","message":"but if we have multiple listeners, then each may want to track their own context.","date":"2013-08-28T21:44:17.599Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: basically, the only way I can think of dealing with all the _possible_ cases users will want this for is to allow the callback to be wrapped.","date":"2013-08-28T21:45:36.963Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #503 \u00037UNSTABLE\u000f linux-ia32 (2/641) smartos-x64 (6/641) osx-x64 (1/641) linux-x64 (3/641) http://jenkins.nodejs.org/job/nodejs-master/503/","date":"2013-08-28T21:45:43.736Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-28T21:45:49.767Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Bert Belder\u000f \u00037execSync-wip\u000f * \u000265d0a25\u0002 : spawn_sync: implement bindings - http://git.io/IkKdgg","date":"2013-08-28T21:46:07.739Z","type":"message"}
{"nick":"trevnorris","message":"oy, this is so freakin abstract.","date":"2013-08-28T21:46:09.282Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: yeah","date":"2013-08-28T21:46:12.308Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: so, yes, wrapping the callback is always an option","date":"2013-08-28T21:46:19.057Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: but the simplest way to handle this is like how EE does it","date":"2013-08-28T21:46:26.936Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: if you add a listener, and there's already a listener, then we make it an array, and call them in order.","date":"2013-08-28T21:46:41.706Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: but when does the callback itself get called?","date":"2013-08-28T21:46:55.338Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: because domain has entry/exit maintanence, so we coudln't just call it once.","date":"2013-08-28T21:47:14.840Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: aL.add(fn1); aL.add(fn2); setTimeout(fn3)","date":"2013-08-28T21:47:23.797Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: fn1 and fn2 are not nested domains","date":"2013-08-28T21:47:32.986Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: they're completely different sorts of things","date":"2013-08-28T21:47:39.676Z","type":"message"}
{"nick":"isaacs","message":"that presumably dont' know about or interact with one another","date":"2013-08-28T21:47:49.226Z","type":"message"}
{"nick":"isaacs","message":"ie, fn1 could be the domain async listener, and fn2 could be othiym23's crazy new relic stuff","date":"2013-08-28T21:48:03.626Z","type":"message"}
{"nick":"bradleymeck","date":"2013-08-28T21:48:10.877Z","type":"join"}
{"nick":"trevnorris","message":"the actual callback (e.g. oncomplete) can only be run once. where does that run?","date":"2013-08-28T21:48:22.279Z","type":"message"}
{"nick":"trevnorris","message":"or when","date":"2013-08-28T21:48:31.238Z","type":"message"}
{"nick":"trevnorris","message":"is a better way to ask","date":"2013-08-28T21:48:35.773Z","type":"message"}
{"nick":"isaacs","message":"when does it get run now?","date":"2013-08-28T21:49:03.386Z","type":"message"}
{"nick":"piscisaureus_","message":"ok, this is what I test the execSync-wip branch with: https://gist.github.com/piscisaureus/6371772","date":"2013-08-28T21:49:11.519Z","type":"message"}
{"nick":"isaacs","message":"basically, right now, you have:  asyncListener.add(fn1); setTimeout(fn2)","date":"2013-08-28T21:49:23.645Z","type":"message"}
{"nick":"piscisaureus_","message":"in case someone wants to try it out.","date":"2013-08-28T21:49:24.899Z","type":"message"}
{"nick":"piscisaureus_","message":"I'm off to bed now","date":"2013-08-28T21:49:33.362Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: g'nite, i'll take a look at this later","date":"2013-08-28T21:49:40.277Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus_: night","date":"2013-08-28T21:49:40.993Z","type":"message"}
{"nick":"tjfontaine","message":"piscisaureus_: you should test with a build script for node :P","date":"2013-08-28T21:49:42.265Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: ok, just want to make sure we're on the same page here. an async listener is a callback that will be called when an async event is queued.","date":"2013-08-28T21:49:58.501Z","type":"message"}
{"nick":"isaacs","message":"righ","date":"2013-08-28T21:50:10.885Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: so, in this case, fn1 would be called riht away, because fn2 is being queued.","date":"2013-08-28T21:50:24.796Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: in this case: aL.add(fn1); aL.add(fn2); setTimeout(fn3)","date":"2013-08-28T21:50:37.224Z","type":"message"}
{"nick":"isaacs","message":"it goes:  fn1(); fn2()","date":"2013-08-28T21:50:43.464Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-28T21:50:46.365Z","type":"quit"}
{"nick":"trevnorris","message":"yeah, that makes sense, but what do we pass to those?","date":"2013-08-28T21:50:59.085Z","type":"message"}
{"nick":"isaacs","message":"the same args","date":"2013-08-28T21:51:17.885Z","type":"message"}
{"nick":"isaacs","message":"as if it's like process.emit('asyncThingQueued')","date":"2013-08-28T21:51:43.104Z","type":"message"}
{"nick":"trevnorris","message":"same args as what?","date":"2013-08-28T21:51:43.324Z","type":"message"}
{"nick":"isaacs","message":"what are you passing to them now?","date":"2013-08-28T21:51:50.424Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-08-28T21:51:53.355Z","type":"quit"}
{"nick":"trevnorris","message":"have a few variants that do the same thing, one was it passes an object with {callback: callback, domain: null }","date":"2013-08-28T21:52:49.196Z","type":"message"}
{"nick":"trevnorris","message":"and you can wrap callback, and set domain","date":"2013-08-28T21:52:58.223Z","type":"message"}
{"nick":"trevnorris","message":"then that domain will be set as process.domain when the callback is called.","date":"2013-08-28T21:53:15.648Z","type":"message"}
{"nick":"trevnorris","message":"wrapping had one huge advantage. it made the entire mechanism transparent to core, which meant zero performance hit.","date":"2013-08-28T21:54:22.734Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-28T21:54:39.777Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: another issue, if we allow multiple contexts, which one is passed the error? or do we tell all the contexts there was an error?","date":"2013-08-28T21:54:59.172Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: but in that case, which context tells us the error was properly handled?","date":"2013-08-28T21:55:37.675Z","type":"message"}
{"nick":"c4milo","date":"2013-08-28T21:55:37.895Z","type":"join"}
{"nick":"isaacs","message":"trevnorris: i guess we'd need some way for a context to --- yeah what you just said","date":"2013-08-28T21:55:44.882Z","type":"message"}
{"nick":"isaacs","message":"maybe the function return value could be relevant?","date":"2013-08-28T21:55:56.581Z","type":"message"}
{"nick":"trevnorris","message":"that's an option. but do we listen to fn1 or fn2?","date":"2013-08-28T21:56:16.290Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: sorry, not trying to be difficult with this. my brain has just been melting figuring a way around all these cases.","date":"2013-08-28T21:58:35.414Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: i'd say, in a case like that, we call the first one, and if it's not handled , call the next, and so on down the line.","date":"2013-08-28T21:59:01.069Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: stop at the first one that does return true; or something?","date":"2013-08-28T21:59:18.340Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: it doesn't have to be the nicest API ever.  most people will just use Domains for error handling, and contexts for continuation local storge.","date":"2013-08-28T21:59:46.349Z","type":"message"}
{"nick":"isaacs","message":"probably using othiym23's module.","date":"2013-08-28T21:59:50.568Z","type":"message"}
{"nick":"isaacs","message":"but you could also imagine some kind of logging/etc","date":"2013-08-28T22:00:07.808Z","type":"message"}
{"nick":"isaacs","message":"and it might be a nice place to shove a DTrace probe","date":"2013-08-28T22:00:18.609Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Bert Belder\u000f \u00037execSync-wip\u000f * \u0002f18d2af\u0002 : spawn_sync: implement bindings - http://git.io/h6fPNA","date":"2013-08-28T22:00:21.177Z","type":"message"}
{"nick":"isaacs","message":"guess piscisaureus didn't go to bed ;)","date":"2013-08-28T22:00:34.167Z","type":"message"}
{"nick":"tjfontaine","message":"I don't know how many different things with Context in the subject can we land in one cycle :)","date":"2013-08-28T22:00:48.974Z","type":"message"}
{"nick":"trevnorris","message":"yeah, that's one reason why I've separated the async listener idea from the domain idea. there may be times when I want to know when an async listener is queued, but no need to track a domain.","date":"2013-08-28T22:01:04.053Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: where are you!?","date":"2013-08-28T22:01:52.212Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Bert Belder\u000f \u00037execSync-wip\u000f * \u00020e7c3f3\u0002 : spawn_sync: implement bindings - http://git.io/bwR12w","date":"2013-08-28T22:02:08.145Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: imho, every context should be alerted that there was an error, but if even one of those says the error was handled then we accept the error was handled.","date":"2013-08-28T22:02:55.459Z","type":"message"}
{"nick":"isaacs","message":"i guess, yeah","date":"2013-08-28T22:03:05.916Z","type":"message"}
{"nick":"isaacs","message":"that makes sense","date":"2013-08-28T22:03:09.186Z","type":"message"}
{"nick":"isaacs","action":"on a call","date":"2013-08-28T22:03:10.936Z","type":"action"}
{"nick":"isaacs","action":"&","date":"2013-08-28T22:03:12.789Z","type":"action"}
{"nick":"LOUDBOT","message":"DUH NUH, NUH, DUHNUHNUH, NUUUUHHHHH","date":"2013-08-28T22:03:13.483Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-08-28T22:03:31.844Z","type":"message"}
{"nick":"isaacs","message":"back in 30 minutes or so","date":"2013-08-28T22:03:32.176Z","type":"message"}
{"nick":"trevnorris","message":"coolio","date":"2013-08-28T22:03:37.484Z","type":"message"}
{"nick":"tjfontaine","message":"LOUDBOT: you're awesome.","date":"2013-08-28T22:03:41.083Z","type":"message"}
{"nick":"LOUDBOT","message":"tjfontaine: WE KNOW ABOUT DOMESTIC ABUSE BECAUSE CLOTHING COMPANIES ARE CONCERNED ABOUT THEIR CUSTOMERS","date":"2013-08-28T22:03:41.512Z","type":"message"}
{"nick":"trevnorris","message":"LOUDBOT: HELP ME!!!","date":"2013-08-28T22:04:01.367Z","type":"message"}
{"nick":"LOUDBOT","message":"trevnorris: I'VE GOT THIS BURNING LIKE MY VEINS ARE FILLED","date":"2013-08-28T22:04:01.930Z","type":"message"}
{"nick":"othiym23","message":"sorry d000ds","date":"2013-08-28T22:04:42.746Z","type":"message"}
{"nick":"tjfontaine","message":"I don't even want to know what the next sentence was","date":"2013-08-28T22:04:43.431Z","type":"message"}
{"nick":"othiym23","message":"I, like, have a job","date":"2013-08-28T22:04:48.933Z","type":"message"}
{"nick":"tjfontaine","message":"othiym23: what is this job thing","date":"2013-08-28T22:05:00.563Z","type":"message"}
{"nick":"othiym23","message":"trevnorris, isaacs: I've spent a lot of time thinking about ways to do this without closures, and I've, as the oldsters say, come a-cropper","date":"2013-08-28T22:05:24.754Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: guess I'm not old enough :)","date":"2013-08-28T22:05:50.956Z","type":"message"}
{"nick":"othiym23","message":"I was thinking about this last night, and one thing you *could* do is pass a state object along with the callback as you're evaluating the async listener so different listeners have a clean way to communicate state to each other, but I couldn't come up with a compelling use case fo rit","date":"2013-08-28T22:06:13.122Z","type":"message"}
{"nick":"othiym23","message":"i.e. I couldn't see how that would obviate the need for me to wrap functions in callbacks","date":"2013-08-28T22:06:52.323Z","type":"message"}
{"nick":"othiym23","message":"for continuation-local storage, I need to do the exact same thing as domains","date":"2013-08-28T22:07:05.391Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: let me start from zero, and we'll work though this.","date":"2013-08-28T22:07:23.616Z","type":"message"}
{"nick":"othiym23","message":"which is enter and exit scopes|contexts|whatever with the callback execution in the middle","date":"2013-08-28T22:07:34.439Z","type":"message"}
{"nick":"othiym23","message":"sounds good","date":"2013-08-28T22:07:37.546Z","type":"message"}
{"nick":"othiym23","message":"tjfontaine: it's a way of converting life into money","date":"2013-08-28T22:07:48.975Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: first are async listeners. basically you tell node you want this listener to be called whenever an async event is being queued up.","date":"2013-08-28T22:08:04.876Z","type":"message"}
{"nick":"othiym23","message":"yes","date":"2013-08-28T22:08:22.866Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-28T22:08:47.612Z","type":"quit"}
{"nick":"othiym23","message":"(as a side note, I always figured I'd have to spend a bunch of time with trevnorris working on this thing, I just didn't expect it to take the form of him doing all the actual work ;)","date":"2013-08-28T22:09:02.433Z","type":"message"}
{"nick":"trevnorris","message":"heh, and I wouldn't have except it concerns core performance ;)","date":"2013-08-28T22:09:36.838Z","type":"message"}
{"nick":"tjfontaine","message":"othiym23: what is this life of which you speak?","date":"2013-08-28T22:09:38.612Z","type":"message"}
{"nick":"tjfontaine","message":"also: what is love, baby don't hurt me","date":"2013-08-28T22:10:25.310Z","type":"message"}
{"nick":"othiym23","message":"tjfontaine: the thing that isn't computers","date":"2013-08-28T22:10:39.122Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: the use case for that is to wrap the callback, but that's impossible in some cases (e.g. a user can change the oncomplete callback during the I/O, so the callback would change)","date":"2013-08-28T22:11:01.870Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: so the other option is you set an async listener, and it'll be called when the callback is about to be called.","date":"2013-08-28T22:11:30.283Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: let me restate that use case in the specific context of continuation-local storage, which is that I need a certain set of state to be available when whatever gets executed asynchronously is actually invoked","date":"2013-08-28T22:12:12.989Z","type":"message"}
{"nick":"julian_duque","date":"2013-08-28T22:12:24.539Z","type":"join"}
{"nick":"othiym23","message":"I don't necessarily care that it's the same callback, as long as I have a guarantee that whatever values I've set earlier are available later","date":"2013-08-28T22:12:37.276Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 268 seconds","date":"2013-08-28T22:13:00.158Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23: that's easy. but how do you get that state?","date":"2013-08-28T22:13:07.028Z","type":"message"}
{"nick":"othiym23","message":"I'm actually dealing with one of those edge cases right now, which is the incredibly hinky stuff that readables do is messing with EEs after initialization","date":"2013-08-28T22:13:47.436Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: mechanically, CLS works by entering a context (PLEASE give me a better name), which is then exposed as the active set of state on that namespace, and then you just call namespace.get from user code","date":"2013-08-28T22:14:29.278Z","type":"message"}
{"nick":"julianduque","reason":"Ping timeout: 245 seconds","date":"2013-08-28T22:14:35.225Z","type":"quit"}
{"nick":"othiym23","message":"so like domains, it's not specifically bound to closures","date":"2013-08-28T22:14:40.009Z","type":"message"}
{"nick":"julian_duque","new_nick":"julianduque","date":"2013-08-28T22:15:20.742Z","type":"nick"}
{"nick":"trevnorris","message":"back this up a bit. first, ok let's change the name.","date":"2013-08-28T22:16:01.708Z","type":"message"}
{"nick":"trevnorris","message":"i've been calling it a domain (not the domain module) but simply a domain that wraps the current state of node.","date":"2013-08-28T22:16:32.477Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-08-28T22:16:37.717Z","type":"quit"}
{"nick":"othiym23","message":"I think that's probably how domains got their name in the first place","date":"2013-08-28T22:17:02.745Z","type":"message"}
{"nick":"trevnorris","message":"but we could call it a frame, or a group, or a whore, I don't care","date":"2013-08-28T22:17:03.986Z","type":"message"}
{"nick":"othiym23","message":"whoah there","date":"2013-08-28T22:17:11.086Z","type":"message"}
{"nick":"othiym23","message":"OK","date":"2013-08-28T22:17:16.959Z","type":"message"}
{"nick":"trevnorris","message":"i figured domain, for backwards compatibility with process.domain","date":"2013-08-28T22:17:33.944Z","type":"message"}
{"nick":"trevnorris","message":"since the idea of process.domain lives outside of the domain module","date":"2013-08-28T22:17:45.389Z","type":"message"}
{"nick":"trevnorris","message":"(e.g. you can manually set a process.domain and node will do stuff with it)","date":"2013-08-28T22:17:57.486Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: ok, so how do you want to enter/expose your domain?","date":"2013-08-28T22:18:51.857Z","type":"message"}
{"nick":"kazupon","date":"2013-08-28T22:19:01.858Z","type":"join"}
{"nick":"trevnorris","message":"othiym23: what I was going to do was call async listener when async I/O was initialized, where you can return a domain object that'll persist with the call","date":"2013-08-28T22:19:48.047Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: then I guess there would be an async executor that would be called right when the async callback is about to be called","date":"2013-08-28T22:20:26.276Z","type":"message"}
{"nick":"othiym23","message":"maybe that object is just a closure that gets invoked and sets / clears the state","date":"2013-08-28T22:20:36.688Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: and the context you intially returned from the async listener would be passed as an argument","date":"2013-08-28T22:20:44.078Z","type":"message"}
{"nick":"othiym23","message":"or yeah, we could have an event that gets fired before the async callback is called that can take that object and do whatever with it","date":"2013-08-28T22:21:00.110Z","type":"message"}
{"nick":"othiym23","message":"that seems like it'd be slow, though","date":"2013-08-28T22:21:04.006Z","type":"message"}
{"nick":"trevnorris","message":"no slower than domains are already, actually a little faster maybe (i'm doing some strange shit with state sharing)","date":"2013-08-28T22:21:58.638Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: the outline you suggest would definitely work for CLS","date":"2013-08-28T22:22:06.055Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: ok, we're _not_ going to do a process.on('async',...) thing because going through the event emitter will be super painful.","date":"2013-08-28T22:23:02.460Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-28T22:23:06.650Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2013-08-28T22:23:21.733Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23: but this means we'd need to set two different callback (one that fires when I/O is queued, and the other when I/O is complete)","date":"2013-08-28T22:23:35.391Z","type":"message"}
{"nick":"othiym23","message":"yeah, I don't care if it's an EE or whatever","date":"2013-08-28T22:23:47.946Z","type":"message"}
{"nick":"mikeal","date":"2013-08-28T22:23:50.434Z","type":"join"}
{"nick":"trevnorris","message":"hah! I think I figured out a way to do this with one callback. the api is going to be ridiculous, but eh.","date":"2013-08-28T22:25:46.478Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: https://gist.github.com/othiym23/6372181","date":"2013-08-28T22:27:53.454Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #296 \u00037UNSTABLE\u000f windows-x64 (19/641) windows-ia32 (20/641) http://jenkins.nodejs.org/job/nodejs-master-windows/296/","date":"2013-08-28T22:28:22.702Z","type":"message"}
{"nick":"MI6","message":"\u0002node-review\u0002: #72 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/node-review/72/","date":"2013-08-28T22:29:52.762Z","type":"message"}
{"nick":"tjfontaine","message":"ignore-able","date":"2013-08-28T22:30:00.960Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: sec, have another one for you","date":"2013-08-28T22:30:15.344Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: though, did you catch our conversation about error handling?","date":"2013-08-28T22:30:57.023Z","type":"message"}
{"nick":"othiym23","message":"some of it?","date":"2013-08-28T22:33:53.499Z","type":"message"}
{"nick":"othiym23","message":"which bits do you want me to pay the closest attention to?","date":"2013-08-28T22:34:02.615Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-28T22:36:01.406Z","type":"nick"}
{"nick":"trevnorris","message":"eh, have something else. so, say before(domain) is called just before the callback. if I can track the domain per async listener that technically means we never need to set process.domain, right?","date":"2013-08-28T22:36:05.631Z","type":"message"}
{"nick":"trevnorris","message":"(oh and i'm brain streaming right now, so not everything may make sense)","date":"2013-08-28T22:36:37.629Z","type":"message"}
{"nick":"trevnorris","message":"ok. almost have something usable. sec and i'll post it","date":"2013-08-28T22:40:10.092Z","type":"message"}
{"nick":"wolfeidau","date":"2013-08-28T22:40:47.439Z","type":"join"}
{"nick":"othiym23","message":"as I see it, process.domain is there for extensibility purposes, not the core operation of the system","date":"2013-08-28T22:40:52.677Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: how about this: https://gist.github.com/trevnorris/6372405","date":"2013-08-28T22:53:19.331Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: ^","date":"2013-08-28T22:53:21.621Z","type":"message"}
{"nick":"trevnorris","message":"and whoever else wants to give some feedback","date":"2013-08-28T22:53:30.402Z","type":"message"}
{"nick":"trevnorris","message":"*whomever(?)","date":"2013-08-28T22:53:37.914Z","type":"message"}
{"nick":"trevnorris","message":"added a comment, refresh","date":"2013-08-28T22:54:33.048Z","type":"message"}
{"nick":"othiym23","message":"reviewing...","date":"2013-08-28T22:57:29.885Z","type":"message"}
{"nick":"othiym23","message":"creationix: how does this look to you? ^^","date":"2013-08-28T22:59:11.130Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: that is a very comprehensive api","date":"2013-08-28T22:59:38.689Z","type":"message"}
{"nick":"inolen","reason":"Read error: Connection reset by peer","date":"2013-08-28T23:00:02.126Z","type":"quit"}
{"nick":"Domenic_","message":"trevnorris: alternate removal APIs for your consideration: `var removalToken = addAsyncListener(...); removeAsyncListener(removalToken)` and `var remover = addAsyncListener(...); remover();`.","date":"2013-08-28T23:00:12.392Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: s/setAsyncListener/addAsyncListener/ since there can be more than one","date":"2013-08-28T23:00:19.638Z","type":"message"}
{"nick":"inolen","date":"2013-08-28T23:00:33.942Z","type":"join"}
{"nick":"isaacs","message":"Domenic_: using the listener as the token is node-like","date":"2013-08-28T23:00:36.879Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: whoops. typo. that's what it should have been.","date":"2013-08-28T23:00:38.395Z","type":"message"}
{"nick":"isaacs","message":"kewl","date":"2013-08-28T23:00:41.050Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: so the only issue there is that it still ends up creating closures","date":"2013-08-28T23:01:03.373Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: so, when you do setTimeout(fn, 100), myAsyncListener() gets called with what arguments?","date":"2013-08-28T23:01:14.589Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: erm. none. I can't guarantee the callback all the time (e.g. ReqWrap) or I would pass that.","date":"2013-08-28T23:01:58.434Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: then, 100ms later, it calls beforeAsync(domain);fn();afterAsync(domain), right?","date":"2013-08-28T23:01:59.109Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: ok.  and the returned object becomes process.domain?","date":"2013-08-28T23:02:12.428Z","type":"message"}
{"nick":"othiym23","message":"dumb question: what is domain?","date":"2013-08-28T23:03:09.647Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-28T23:03:21.222Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: yes to the first, and it'll call all before's/after's in the order they were queued","date":"2013-08-28T23:03:31.090Z","type":"message"}
{"nick":"isaacs","message":"othiym23: presumably whatever process.domain was at the time myAsyncListener was called","date":"2013-08-28T23:03:33.098Z","type":"message"}
{"nick":"trevnorris","message":"FIFO style","date":"2013-08-28T23:03:35.966Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: before1();before2();fn();after1();after2()","date":"2013-08-28T23:03:48.346Z","type":"message"}
{"nick":"isaacs","message":"right?","date":"2013-08-28T23:03:56.496Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-08-28T23:03:59.436Z","type":"message"}
{"nick":"trevnorris","message":"but setting process.domain is useless since we can have several listeners each with their own passed domain.","date":"2013-08-28T23:04:20.592Z","type":"message"}
{"nick":"othiym23","message":"I would prefer before1();before2();fn();after2();after1()","date":"2013-08-28T23:04:42.866Z","type":"message"}
{"nick":"trevnorris","message":"e.g. each listener has an attached domain object that only it knows about, that will be passed as the argument","date":"2013-08-28T23:04:43.080Z","type":"message"}
{"nick":"trevnorris","message":"how about I use Math.random() to decide :P","date":"2013-08-28T23:05:00.252Z","type":"message"}
{"nick":"trevnorris","message":"i don't care either way","date":"2013-08-28T23:05:05.683Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: so what initially populates that domain object?","date":"2013-08-28T23:05:11.050Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: ah, that was supposed to be one of the return items in myAsyncListener, let me update that","date":"2013-08-28T23:05:49.964Z","type":"message"}
{"nick":"othiym23","message":"i.e. I need to capture some state at the time myAsyncListener is called, and then have access to that state later","date":"2013-08-28T23:06:21.558Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: refresh the gist","date":"2013-08-28T23:06:39.340Z","type":"message"}
{"nick":"othiym23","message":"with the proposed API, my only way to do that is by making beforeAsync and afterAsync into closures","date":"2013-08-28T23:06:44.976Z","type":"message"}
{"nick":"othiym23","message":"ah gotcha, much better","date":"2013-08-28T23:07:01.873Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-28T23:07:03.709Z","type":"quit"}
{"nick":"trevnorris","message":"still have the problem that I'm not sure what process.domain should be. since we can have multiple domains with multiple listeners.","date":"2013-08-28T23:07:35.639Z","type":"message"}
{"nick":"isaacs","message":"othiym23: the reason it's not b1,b2,fn,a2,a1 is that they're not nesting shells.  1 and 2 shouldn't even know about one another.","date":"2013-08-28T23:07:36.324Z","type":"message"}
{"nick":"julianduque","reason":"Ping timeout: 264 seconds","date":"2013-08-28T23:07:40.380Z","type":"quit"}
{"nick":"isaacs","message":"othiym23: consider that 1 is your cls thing, and 2 is my logging thing, and 3 is the built-in domains","date":"2013-08-28T23:07:52.885Z","type":"message"}
{"nick":"isaacs","message":"othiym23: if they care about their order, we're Doing It Wrong","date":"2013-08-28T23:08:04.455Z","type":"message"}
{"nick":"othiym23","message":"isaacs: I might yet need to have some crosstalk between domains and CLS","date":"2013-08-28T23:08:10.871Z","type":"message"}
{"nick":"othiym23","message":"sucks, but making CLS behave sensibly even when people are doing moronic things with their exception-handling is less than a requirement but more than a nice to have for New Relic","date":"2013-08-28T23:08:55.933Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: well, I could make it so process.domain is the last domain to be set. so if you setup a domain, then you can access it via process.domain to get some of your state information. but that seems arbitrary.","date":"2013-08-28T23:09:12.788Z","type":"message"}
{"nick":"isaacs","message":"othiym23: trevnorris: Oh, I'd assume d tht the \"domain\" arg WAS the thing returned from myAsyncListener","date":"2013-08-28T23:09:32.033Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: process.domain should remain specific to require('domain') and keep the same API, I think","date":"2013-08-28T23:10:07.907Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: that's much easier. we'll do that.","date":"2013-08-28T23:10:22.617Z","type":"message"}
{"nick":"othiym23","message":"so you can just do if (process.domain) process.domain.emit('error', error)","date":"2013-08-28T23:10:24.529Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: no need to pass values around unnecessarily I suppose. setting a domain object will make it simpler that way.","date":"2013-08-28T23:11:17.974Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: ok. i'm cool with that.","date":"2013-08-28T23:11:30.992Z","type":"message"}
{"nick":"spion","date":"2013-08-28T23:11:51.901Z","type":"join"}
{"nick":"isaacs","message":"trevnorris: yeah, that's true","date":"2013-08-28T23:12:06.631Z","type":"message"}
{"nick":"mcculloughsean","date":"2013-08-28T23:12:14.608Z","type":"join"}
{"nick":"tjholowaychuk","date":"2013-08-28T23:12:15.106Z","type":"join"}
{"nick":"isaacs","message":"tjholowaychuk: welcome","date":"2013-08-28T23:12:19.512Z","type":"message"}
{"nick":"tjholowaychuk","message":"hey","date":"2013-08-28T23:12:24.364Z","type":"message"}
{"nick":"trevnorris","message":"so is this api looking complete enough for everyone's needs?","date":"2013-08-28T23:12:27.157Z","type":"message"}
{"nick":"othiym23","message":"Jesus Christ I'm working in Thunderdome right now","date":"2013-08-28T23:12:30.501Z","type":"message"}
{"nick":"isaacs","action":"summoned him from the twitter","date":"2013-08-28T23:12:31.122Z","type":"action"}
{"nick":"tjholowaychuk","message":"hahaha","date":"2013-08-28T23:12:34.747Z","type":"message"}
{"nick":"julianduque","date":"2013-08-28T23:12:42.538Z","type":"join"}
{"nick":"othiym23","message":"our building is shaking thanks to the 8-foot trench they're cutting in the street outside","date":"2013-08-28T23:12:44.278Z","type":"message"}
{"nick":"isaacs","message":"tjholowaychuk: https://gist.github.com/trevnorris/6372405 is what trevnorris is working on","date":"2013-08-28T23:12:50.301Z","type":"message"}
{"nick":"isaacs","message":"tjholowaychuk: othiym23 is building a continuation-local-storage thingie for New Relic, which will use this api hook","date":"2013-08-28T23:13:08.212Z","type":"message"}
{"nick":"othiym23","message":"tjholowaychuk: and this is the API I'm trying to use Trevor's thing to provide: https://github.com/othiym23/node-continuation-local-storage","date":"2013-08-28T23:13:22.678Z","type":"message"}
{"nick":"isaacs","message":"tjholowaychuk: then the existing require('domain') can concievably be implemented in userland (but will still remain for bw compatibility)","date":"2013-08-28T23:13:26.251Z","type":"message"}
{"nick":"tjholowaychuk","message":"right right","date":"2013-08-28T23:13:39.819Z","type":"message"}
{"nick":"isaacs","message":"the reason that othiym23 can't use domains is that if he did, then using the new relic agent will cause your error handling to be changed.","date":"2013-08-28T23:13:52.411Z","type":"message"}
{"nick":"isaacs","message":"and maybe you want to just throw and crash","date":"2013-08-28T23:13:57.000Z","type":"message"}
{"nick":"tjholowaychuk","message":"i need to re-read the domain docs I forget what kind of isolation you can get","date":"2013-08-28T23:13:57.373Z","type":"message"}
{"nick":"tjholowaychuk","message":"could I say wrap just that one stream (and parents) with a domain?","date":"2013-08-28T23:14:12.858Z","type":"message"}
{"nick":"isaacs","message":"tjholowaychuk: if you do d.run(function() { create streams and then pipe everybody })","date":"2013-08-28T23:14:29.970Z","type":"message"}
{"nick":"isaacs","message":"tjholowaychuk: then throws from there will go to the domain","date":"2013-08-28T23:14:37.410Z","type":"message"}
{"nick":"st_luke","date":"2013-08-28T23:14:47.957Z","type":"join"}
{"nick":"tjholowaychuk","message":"what about if they were created before-hand but not piped","date":"2013-08-28T23:14:48.320Z","type":"message"}
{"nick":"othiym23","message":"or just do d.add(stream) to bind a pre-existing stream to a domain","date":"2013-08-28T23:14:50.450Z","type":"message"}
{"nick":"tjholowaychuk","message":"I basically just want to pass the final stream and deal with error-handling elsewhere","date":"2013-08-28T23:15:01.474Z","type":"message"}
{"nick":"isaacs","message":"tjholowaychuk: however, if they do stream.emit('blerg', userFunction) then now userFunction is *also* in the domain","date":"2013-08-28T23:15:05.720Z","type":"message"}
{"nick":"tjholowaychuk","message":"othiym23 ah!","date":"2013-08-28T23:15:18.592Z","type":"message"}
{"nick":"tjholowaychuk","message":"sounds like that might work then","date":"2013-08-28T23:15:21.103Z","type":"message"}
{"nick":"tjholowaychuk","message":"oh wait no","date":"2013-08-28T23:15:25.056Z","type":"message"}
{"nick":"tjholowaychuk","message":"I wont have the references","date":"2013-08-28T23:15:30.974Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-28T23:15:35.158Z","type":"quit"}
{"nick":"isaacs","message":"tjholowaychuk: you could just do something like this:","date":"2013-08-28T23:15:38.678Z","type":"message"}
{"nick":"isaacs","message":"function pipeAndPassError(a,b) { a.on('error', b.emit.bind(b, 'error')); a.pipe(b) }","date":"2013-08-28T23:16:01.989Z","type":"message"}
{"nick":"isaacs","message":"tjholowaychuk: then the last one gets all the errors.  of course, if you have an echo server, then you get RangeErrors","date":"2013-08-28T23:16:29.545Z","type":"message"}
{"nick":"isaacs","message":"special for today!  every error is a range error!","date":"2013-08-28T23:16:40.888Z","type":"message"}
{"nick":"tjholowaychuk","message":"hahahaha","date":"2013-08-28T23:16:45.747Z","type":"message"}
{"nick":"isaacs","message":"that's why we don't do that by default.","date":"2013-08-28T23:17:08.428Z","type":"message"}
{"nick":"isaacs","message":"even though it makes pipe chains more verbose.","date":"2013-08-28T23:17:16.368Z","type":"message"}
{"nick":"tjholowaychuk","message":"yeah I figured there was a reasonable reason","date":"2013-08-28T23:17:24.389Z","type":"message"}
{"nick":"isaacs","message":"bbiab","date":"2013-08-28T23:17:42.699Z","type":"message"}
{"nick":"isaacs","action":"&","date":"2013-08-28T23:17:43.908Z","type":"action"}
{"nick":"LOUDBOT","message":"I DONT EVEN KNOW WHATS REAL ANYMORE!!!","date":"2013-08-28T23:17:44.593Z","type":"message"}
{"nick":"st_luke","date":"2013-08-28T23:18:01.285Z","type":"join"}
{"nick":"MI6","message":"\u0002node-review\u0002: #73 \u00034FAILURE\u000f windows-x64 (18/641) windows-ia32 (16/641) http://jenkins.nodejs.org/job/node-review/73/","date":"2013-08-28T23:18:25.573Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: so this api cool w/ you?","date":"2013-08-28T23:19:23.625Z","type":"message"}
{"nick":"kazupon","date":"2013-08-28T23:19:32.865Z","type":"join"}
{"nick":"tjfontaine","message":"heh, you can tell what platform bert builds on","date":"2013-08-28T23:19:40.564Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-28T23:19:58.666Z","type":"quit"}
{"nick":"trevnorris","message":"hah","date":"2013-08-28T23:19:59.321Z","type":"message"}
{"nick":"trevnorris","message":"that's awesome","date":"2013-08-28T23:20:03.745Z","type":"message"}
{"nick":"mikeal","date":"2013-08-28T23:20:47.295Z","type":"join"}
{"nick":"AvianFlu_","date":"2013-08-28T23:24:45.343Z","type":"join"}
{"nick":"othiym23","message":"trevnorris: yeah, I think so, it feels nice and clean","date":"2013-08-28T23:25:03.641Z","type":"message"}
{"nick":"trevnorris","message":"coolio.","date":"2013-08-28T23:25:25.277Z","type":"message"}
{"nick":"othiym23","message":"tervnorris: I've tasked creationix with getting CLS-glue up and running on yr API as soon as you have a semi-stable version of it pushed, so he'll ultimately have concrete feedback for you","date":"2013-08-28T23:25:41.167Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: heh, ok. i'll try to have something by the end of the week. just remember this also sits on top of bnoordhuis's multi-context branch.","date":"2013-08-28T23:26:23.217Z","type":"message"}
{"nick":"othiym23","message":"I am keenly aware of that fact, yes","date":"2013-08-28T23:26:37.400Z","type":"message"}
{"nick":"othiym23","message":"there are now 3 branches on my critical path for this functionality","date":"2013-08-28T23:27:09.046Z","type":"message"}
{"nick":"othiym23","message":"no pressure or anything","date":"2013-08-28T23:27:12.616Z","type":"message"}
{"nick":"trevnorris","message":"hah","date":"2013-08-28T23:27:14.989Z","type":"message"}
{"nick":"trevnorris","message":"well, it's all on the v0.12 roadmap, and I think isaacs is itching to get that out the door.","date":"2013-08-28T23:27:38.947Z","type":"message"}
{"nick":"othiym23","message":"I will be *very* pleased if we can get addAsyncListener into 0.12","date":"2013-08-28T23:28:14.110Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: i've updated 6011 with the gist information. going to start implementing it now.","date":"2013-08-28T23:28:14.820Z","type":"message"}
{"nick":"othiym23","message":"cool","date":"2013-08-28T23:28:22.528Z","type":"message"}
{"nick":"othiym23","message":"thanks!","date":"2013-08-28T23:28:27.126Z","type":"message"}
{"nick":"trevnorris","message":"np","date":"2013-08-28T23:28:29.499Z","type":"message"}
{"nick":"blissdev","date":"2013-08-28T23:28:44.041Z","type":"join"}
{"nick":"trevnorris","message":"and it will be. this is definitely something we'll want a full stable release of testing with first, before the v1.0 release.","date":"2013-08-28T23:28:54.502Z","type":"message"}
{"nick":"othiym23","message":"you are far more confident about it making 0.12 than isaacs is ;)","date":"2013-08-28T23:29:37.983Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-28T23:30:03.531Z","type":"quit"}
{"nick":"trevnorris","message":"heh, well. i've pulled off some serious refactors before. though this is going to be the most difficult.","date":"2013-08-28T23:30:44.054Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 256 seconds","date":"2013-08-28T23:31:02.703Z","type":"quit"}
{"nick":"trevnorris","message":"been working on prototyping this for the last 2 weeks, so have a good idea of how to implement it.","date":"2013-08-28T23:31:12.552Z","type":"message"}
{"nick":"st_luke","date":"2013-08-28T23:31:14.852Z","type":"join"}
{"nick":"othiym23","message":"trevnorris: this will work for net.Socket and the crypto functions and everything, no?","date":"2013-08-28T23:31:51.754Z","type":"message"}
{"nick":"othiym23","message":"that's where a lot of the wiggliness in the current version of cls-glue comes in","date":"2013-08-28T23:32:05.619Z","type":"message"}
{"nick":"trevnorris","message":"it should cover anything that requires calling a callback in the future.","date":"2013-08-28T23:32:31.674Z","type":"message"}
{"nick":"othiym23","message":"cool","date":"2013-08-28T23:32:54.366Z","type":"message"}
{"nick":"mcculloughsean","reason":"Quit: leaving","date":"2013-08-28T23:33:43.808Z","type":"quit"}
{"nick":"indexzero","date":"2013-08-28T23:43:06.868Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-28T23:54:09.222Z","type":"quit"}
{"nick":"trevnorris","message":"alright, need to go lock myself in a room to get this done.","date":"2013-08-28T23:56:57.664Z","type":"message"}
{"nick":"trevnorris","action":"&","date":"2013-08-28T23:56:59.116Z","type":"action"}
{"nick":"LOUDBOT","message":"ACHIEVEMENT UNLOCKED: VOLUNTARY SILENCE","date":"2013-08-28T23:56:59.777Z","type":"message"}
