{"nick":"loladiro","date":"2012-08-27T00:06:08.350Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2012-08-27T00:08:31.871Z","type":"quit"}
{"nick":"loladiro","date":"2012-08-27T00:47:57.325Z","type":"join"}
{"nick":"ArmyOfBruce","reason":"Excess Flood","date":"2012-08-27T01:28:50.969Z","type":"quit"}
{"nick":"ArmyOfBruce","date":"2012-08-27T01:29:21.170Z","type":"join"}
{"nick":"abraxas","date":"2012-08-27T01:31:17.923Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-08-27T01:41:51.751Z","type":"quit"}
{"nick":"loladiro","date":"2012-08-27T01:54:05.678Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-08-27T01:59:50.063Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2012-08-27T02:23:18.899Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2012-08-27T02:32:49.682Z","type":"quit"}
{"nick":"dshaw_","date":"2012-08-27T02:36:24.409Z","type":"join"}
{"nick":"erickt","date":"2012-08-27T02:38:25.682Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-08-27T02:38:34.053Z","type":"quit"}
{"nick":"mikeal","date":"2012-08-27T03:24:14.715Z","type":"join"}
{"nick":"loladiro","date":"2012-08-27T03:55:59.353Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-08-27T04:37:06.114Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-08-27T04:55:11.356Z","type":"quit"}
{"nick":"loladiro","date":"2012-08-27T05:02:06.711Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2012-08-27T05:06:39.622Z","type":"quit"}
{"nick":"Aria","reason":"Remote host closed the connection","date":"2012-08-27T05:15:11.262Z","type":"quit"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-08-27T05:20:48.659Z","type":"quit"}
{"nick":"ibobrik","date":"2012-08-27T05:21:02.664Z","type":"join"}
{"nick":"avalanche123","date":"2012-08-27T05:26:29.881Z","type":"join"}
{"nick":"avalanche123","reason":"Quit: Computer has gone to sleep.","date":"2012-08-27T05:39:15.124Z","type":"quit"}
{"nick":"indutny","message":"ho","date":"2012-08-27T05:48:41.414Z","type":"message"}
{"nick":"TheJH","date":"2012-08-27T05:52:00.874Z","type":"join"}
{"nick":"isaacs","message":"hola","date":"2012-08-27T05:53:22.845Z","type":"message"}
{"nick":"ibobrik","reason":"Quit: ibobrik","date":"2012-08-27T05:57:01.757Z","type":"quit"}
{"nick":"mikeal","date":"2012-08-27T06:10:28.861Z","type":"join"}
{"nick":"ibobrik","date":"2012-08-27T06:31:05.578Z","type":"join"}
{"nick":"indutny","message":"ohai","date":"2012-08-27T07:08:29.564Z","type":"message"}
{"nick":"mmalecki","reason":"Ping timeout: 246 seconds","date":"2012-08-27T07:27:42.084Z","type":"quit"}
{"nick":"hz","date":"2012-08-27T07:35:23.541Z","type":"join"}
{"nick":"`3rdEden","date":"2012-08-27T07:45:49.364Z","type":"join"}
{"nick":"paddybyers","date":"2012-08-27T08:07:02.343Z","type":"join"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-08-27T08:13:53.504Z","type":"quit"}
{"nick":"mmalecki","date":"2012-08-27T08:16:53.051Z","type":"join"}
{"nick":"einaros","message":"what exactly does node/libuv do to a tcp stream when you call pause()? hold reads?","date":"2012-08-27T08:32:56.684Z","type":"message"}
{"nick":"txdv","reason":"Ping timeout: 252 seconds","date":"2012-08-27T08:35:48.060Z","type":"quit"}
{"nick":"indutny","message":"einaros: I guess it just stop reading","date":"2012-08-27T08:38:01.604Z","type":"message"}
{"nick":"indutny","message":"einaros: and kernel will handle all required bandwith changes","date":"2012-08-27T08:38:22.126Z","type":"message"}
{"nick":"indutny","message":"einaros: i.e. when socket will became full","date":"2012-08-27T08:38:27.429Z","type":"message"}
{"nick":"txdv","date":"2012-08-27T08:38:38.901Z","type":"join"}
{"nick":"rendar","date":"2012-08-27T08:46:26.032Z","type":"join"}
{"nick":"paddybyers","date":"2012-08-27T08:53:57.167Z","type":"join"}
{"nick":"einaros","message":"indutny: yeah, looking at the uv source, that's it :)","date":"2012-08-27T09:06:07.243Z","type":"message"}
{"nick":"einaros","message":"also, wireshark to the rescue","date":"2012-08-27T09:06:12.377Z","type":"message"}
{"nick":"indutny","message":"einaros: definitely","date":"2012-08-27T09:06:43.428Z","type":"message"}
{"nick":"einaros","message":"the os reduces the window size until it indicates that it's full - at that point the remote peer will hold all packets until space is available","date":"2012-08-27T09:06:55.151Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2012-08-27T09:11:25.220Z","type":"quit"}
{"nick":"indutny","message":"obviously","date":"2012-08-27T09:12:12.664Z","type":"message"}
{"nick":"einaros","message":"that means https://github.com/einaros/ratelimit isn't completely off the mark","date":"2012-08-27T09:13:47.581Z","type":"message"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-08-27T09:27:08.811Z","type":"quit"}
{"nick":"paddybyers","date":"2012-08-27T09:29:57.649Z","type":"join"}
{"nick":"mitsuhiko","reason":"Excess Flood","date":"2012-08-27T09:53:54.538Z","type":"quit"}
{"nick":"mitsuhiko","date":"2012-08-27T09:57:20.060Z","type":"join"}
{"nick":"ibobrik","reason":"Ping timeout: 245 seconds","date":"2012-08-27T10:07:13.430Z","type":"quit"}
{"nick":"loladiro","date":"2012-08-27T10:12:33.353Z","type":"join"}
{"nick":"TheJH","reason":"Ping timeout: 246 seconds","date":"2012-08-27T10:13:13.889Z","type":"quit"}
{"nick":"ibobrik","date":"2012-08-27T10:19:43.248Z","type":"join"}
{"nick":"stagas","date":"2012-08-27T10:38:37.053Z","type":"join"}
{"nick":"hz","reason":"Ping timeout: 272 seconds","date":"2012-08-27T10:45:05.490Z","type":"quit"}
{"nick":"hz","date":"2012-08-27T10:46:46.701Z","type":"join"}
{"nick":"saghul","reason":"Ping timeout: 245 seconds","date":"2012-08-27T10:53:09.827Z","type":"quit"}
{"nick":"saghul","date":"2012-08-27T10:55:57.042Z","type":"join"}
{"nick":"bnoordhuis","date":"2012-08-27T11:16:05.046Z","type":"join"}
{"nick":"hz","reason":"Disconnected by services","date":"2012-08-27T11:18:21.962Z","type":"quit"}
{"nick":"hz","date":"2012-08-27T11:18:25.483Z","type":"join"}
{"nick":"stagas","reason":"Quit: ChatZilla 0.9.88-rdmsoft [XULRunner 1.9.0.17/2009122204]","date":"2012-08-27T11:36:17.350Z","type":"quit"}
{"nick":"indutny","message":"bnoordhuis: hey man","date":"2012-08-27T11:46:35.377Z","type":"message"}
{"nick":"indutny","message":"reminding about tls sessions stuff","date":"2012-08-27T11:46:42.245Z","type":"message"}
{"nick":"AvianFlu","reason":"Quit: AvianFlu","date":"2012-08-27T12:09:23.881Z","type":"quit"}
{"nick":"hz","reason":"Read error: Connection reset by peer","date":"2012-08-27T12:10:38.609Z","type":"quit"}
{"nick":"hz","date":"2012-08-27T12:12:49.479Z","type":"join"}
{"nick":"bnoordhuis","message":"$ ab -q -k -c 1000 -n 200000 http://127.0.0.1:1234/ | grep Requests","date":"2012-08-27T12:49:27.386Z","type":"message"}
{"nick":"bnoordhuis","message":"Requests per second:    166813.18 [#/sec] (mean)","date":"2012-08-27T12:49:27.581Z","type":"message"}
{"nick":"bnoordhuis","message":"^ simple keep-alive http server with epoll in edge triggered mode","date":"2012-08-27T12:49:47.717Z","type":"message"}
{"nick":"TheJH","date":"2012-08-27T12:52:23.277Z","type":"join"}
{"nick":"bnoordhuis","message":"$ ab -q -c 1000 -n 200000 http://127.0.0.1:1234/ | grep Requests","date":"2012-08-27T12:52:25.887Z","type":"message"}
{"nick":"bnoordhuis","message":"Requests per second:    26216.41 [#/sec] (mean)","date":"2012-08-27T12:52:26.084Z","type":"message"}
{"nick":"bnoordhuis","message":"^ same server without keep-alive","date":"2012-08-27T12:52:34.319Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: what os?","date":"2012-08-27T12:52:46.334Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: what os has epoll?","date":"2012-08-27T12:52:56.380Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-08-27T12:52:59.238Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2012-08-27T12:53:00.975Z","type":"message"}
{"nick":"indutny","message":"good results","date":"2012-08-27T12:53:04.460Z","type":"message"}
{"nick":"indutny","message":"I've same benchmark for kqueue","date":"2012-08-27T12:53:12.061Z","type":"message"}
{"nick":"bnoordhuis","message":"they are, aren't they?","date":"2012-08-27T12:53:13.404Z","type":"message"}
{"nick":"indutny","message":"here unfinished","date":"2012-08-27T12:53:15.224Z","type":"message"}
{"nick":"indutny","message":"surprisingly good","date":"2012-08-27T12:53:21.378Z","type":"message"}
{"nick":"indutny","message":"I wonder how you hadn't run out of ephemeral ports","date":"2012-08-27T12:53:28.654Z","type":"message"}
{"nick":"bnoordhuis","message":"i tweaked some sysctls","date":"2012-08-27T12:53:37.515Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-08-27T12:53:42.011Z","type":"message"}
{"nick":"indutny","message":"btw, I thought about one way of fixing it","date":"2012-08-27T12:53:49.443Z","type":"message"}
{"nick":"indutny","message":"probably you already know existing solutions","date":"2012-08-27T12:54:01.698Z","type":"message"}
{"nick":"bnoordhuis","message":"of fixing what?","date":"2012-08-27T12:54:07.241Z","type":"message"}
{"nick":"bnoordhuis","message":"ephemeral ports?","date":"2012-08-27T12:54:11.324Z","type":"message"}
{"nick":"indutny","message":"ephemeral ports limit :D","date":"2012-08-27T12:54:12.532Z","type":"message"}
{"nick":"indutny","message":"i.e. handling more than 65k connections","date":"2012-08-27T12:54:22.997Z","type":"message"}
{"nick":"bnoordhuis","message":"i propose we switch to a user mode tcp stack","date":"2012-08-27T12:54:40.867Z","type":"message"}
{"nick":"bnoordhuis","message":"(that was a joke btw)","date":"2012-08-27T12:54:45.251Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2012-08-27T12:55:10.234Z","type":"message"}
{"nick":"indutny","message":"we can do it","date":"2012-08-27T12:55:12.480Z","type":"message"}
{"nick":"indutny","message":"but instead we can have multiple virtual IP interfaces","date":"2012-08-27T12:55:23.237Z","type":"message"}
{"nick":"indutny","message":"and balance incoming tcp packets to that addresses","date":"2012-08-27T12:55:33.594Z","type":"message"}
{"nick":"bnoordhuis","message":"eh?","date":"2012-08-27T12:55:40.455Z","type":"message"}
{"nick":"indutny","message":"using sender's address hash","date":"2012-08-27T12:55:43.604Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2012-08-27T12:55:47.359Z","type":"message"}
{"nick":"indutny","message":"i.e. balancing w/o handling protocol","date":"2012-08-27T12:55:57.523Z","type":"message"}
{"nick":"indutny","message":"so each interface will have it's own separate limit","date":"2012-08-27T12:56:08.755Z","type":"message"}
{"nick":"indutny","message":"I suppose it should be possible to do it as a kernel driver","date":"2012-08-27T12:56:50.593Z","type":"message"}
{"nick":"bnoordhuis","message":"we're not bundling kernel drivers with node :)","date":"2012-08-27T12:57:20.479Z","type":"message"}
{"nick":"indutny","message":"hahaha","date":"2012-08-27T12:57:25.731Z","type":"message"}
{"nick":"bnoordhuis","message":"but by all means have a go at it","date":"2012-08-27T12:57:28.333Z","type":"message"}
{"nick":"indutny","message":"that's not related to node","date":"2012-08-27T12:57:31.672Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: do you know something like that?","date":"2012-08-27T12:57:43.750Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: well... i hacked a patch for the linux kernel a few years ago","date":"2012-08-27T12:58:20.336Z","type":"message"}
{"nick":"indutny","message":"it seems that I need an ARP proxy","date":"2012-08-27T12:58:25.798Z","type":"message"}
{"nick":"bnoordhuis","message":"where i added the tcp sequence number as a source of uniqueness","date":"2012-08-27T12:58:33.919Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: nice","date":"2012-08-27T12:58:35.368Z","type":"message"}
{"nick":"bnoordhuis","message":"not entirely fool proof but it worked well enough","date":"2012-08-27T12:58:42.018Z","type":"message"}
{"nick":"indutny","message":"what uniqueness are we talking about?","date":"2012-08-27T12:58:59.643Z","type":"message"}
{"nick":"bnoordhuis","message":"local addr + local port + remote addr + remote port","date":"2012-08-27T12:59:19.926Z","type":"message"}
{"nick":"bnoordhuis","message":"and + sequence number","date":"2012-08-27T12:59:28.180Z","type":"message"}
{"nick":"indutny","message":"oh, that thing","date":"2012-08-27T12:59:44.395Z","type":"message"}
{"nick":"indutny","message":"interesting","date":"2012-08-27T12:59:46.695Z","type":"message"}
{"nick":"indutny","message":"does this mean that we can have multiple connections with same ports on both sides?","date":"2012-08-27T13:00:05.739Z","type":"message"}
{"nick":"bnoordhuis","message":"technically yes","date":"2012-08-27T13:00:18.659Z","type":"message"}
{"nick":"indutny","message":"but not pratically :D","date":"2012-08-27T13:00:25.440Z","type":"message"}
{"nick":"indutny","message":"at least it'll prevent us from reusing old existing connection","date":"2012-08-27T13:00:38.182Z","type":"message"}
{"nick":"bnoordhuis","message":"it confuses a lot of software","date":"2012-08-27T13:00:38.549Z","type":"message"}
{"nick":"indutny","message":"right?","date":"2012-08-27T13:00:39.208Z","type":"message"}
{"nick":"bnoordhuis","message":"not to mention other operating systems","date":"2012-08-27T13:00:43.648Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2012-08-27T13:00:57.195Z","type":"message"}
{"nick":"indutny","message":"I'll call this utility arpmux","date":"2012-08-27T13:03:22.809Z","type":"message"}
{"nick":"bnoordhuis","message":"has a nice ring to it","date":"2012-08-27T13:04:14.247Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-08-27T13:18:16.569Z","type":"quit"}
{"nick":"indutny","message":"I guess SOCK_RAW may work for that purpose","date":"2012-08-27T13:23:42.022Z","type":"message"}
{"nick":"saghul","reason":"Ping timeout: 252 seconds","date":"2012-08-27T13:27:40.042Z","type":"quit"}
{"nick":"saghul","date":"2012-08-27T13:28:55.592Z","type":"join"}
{"nick":"erickt","date":"2012-08-27T13:38:17.851Z","type":"join"}
{"nick":"piscisaureus_","date":"2012-08-27T13:46:34.548Z","type":"join"}
{"nick":"piscisaureus_","message":"hello","date":"2012-08-27T13:46:40.304Z","type":"message"}
{"nick":"bnoordhuis","message":"olla","date":"2012-08-27T13:47:00.052Z","type":"message"}
{"nick":"indutny","message":"olalal","date":"2012-08-27T13:47:07.783Z","type":"message"}
{"nick":"ibobrik","message":"bnoordhuis: can you explain this for me? maybe it will be useful in libuv: http://pastie.org/4597378","date":"2012-08-27T14:00:26.332Z","type":"message"}
{"nick":"ibobrik","message":"indutny: you may know that too :)","date":"2012-08-27T14:02:39.195Z","type":"message"}
{"nick":"piscisaureus_","message":"ibobrik: I see some code to align a a buffer at a page boundary","date":"2012-08-27T14:03:11.707Z","type":"message"}
{"nick":"piscisaureus_","message":"ibobrik: but... it's probably not needed because when you malloc 64k you'll almost certainly get an aligned block already","date":"2012-08-27T14:03:58.605Z","type":"message"}
{"nick":"ibobrik","message":"but i see 50% win with random file reads!","date":"2012-08-27T14:04:37.862Z","type":"message"}
{"nick":"ibobrik","message":"i double-checked this, really","date":"2012-08-27T14:04:58.533Z","type":"message"}
{"nick":"piscisaureus_","message":"ibobrik: you see that where? and Where did you add this code?","date":"2012-08-27T14:05:26.040Z","type":"message"}
{"nick":"ibobrik","message":"http://pastie.org/4597407 this is my stupid code","date":"2012-08-27T14:07:00.892Z","type":"message"}
{"nick":"piscisaureus_","message":"ibobrik: you see that after adding this alignment code?","date":"2012-08-27T14:09:40.853Z","type":"message"}
{"nick":"piscisaureus_","message":"(ibobrik: btw - if it actually aligns the buffern then you'll cause a buyffer overrun)","date":"2012-08-27T14:09:41.049Z","type":"message"}
{"nick":"ibobrik","message":"yep, 10 mb/s after adding, 7 mb/s before","date":"2012-08-27T14:10:10.749Z","type":"message"}
{"nick":"piscisaureus_","message":"ibobrik: can you print the hex value of buf before and after alignment","date":"2012-08-27T14:10:46.439Z","type":"message"}
{"nick":"piscisaureus_","message":"?","date":"2012-08-27T14:10:47.387Z","type":"message"}
{"nick":"piscisaureus_","message":"ibobrik: printf(\"%x\\n\", (uintptr_t) buf)","date":"2012-08-27T14:11:02.975Z","type":"message"}
{"nick":"ibobrik","message":"i may try, wait a minute","date":"2012-08-27T14:11:05.746Z","type":"message"}
{"nick":"ibobrik","message":"buf before: 25e9010","date":"2012-08-27T14:15:21.445Z","type":"message"}
{"nick":"ibobrik","message":"buf after: 25ea000","date":"2012-08-27T14:15:21.971Z","type":"message"}
{"nick":"ibobrik","message":"printf(\"buf before: %x\\n\", (unsigned int) buf); /* this may be wrong */","date":"2012-08-27T14:15:51.608Z","type":"message"}
{"nick":"piscisaureus_","message":"ah, right","date":"2012-08-27T14:18:36.785Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: it should not be aligned","date":"2012-08-27T14:18:41.474Z","type":"message"}
{"nick":"indutny","message":"there're 16 bytes identifiying it","date":"2012-08-27T14:18:52.003Z","type":"message"}
{"nick":"piscisaureus_","message":"yeah","date":"2012-08-27T14:18:54.721Z","type":"message"}
{"nick":"piscisaureus_","message":"I see now","date":"2012-08-27T14:18:56.475Z","type":"message"}
{"nick":"indutny","message":"allocators are really  odd :D","date":"2012-08-27T14:19:12.618Z","type":"message"}
{"nick":"piscisaureus_","message":"I think on windows this doesn't happen btw","date":"2012-08-27T14:19:22.874Z","type":"message"}
{"nick":"piscisaureus_","message":"I think free() will just know that the buffer has been malloced when it points outside of the heap area","date":"2012-08-27T14:19:59.819Z","type":"message"}
{"nick":"piscisaureus_","message":"er, s/malloced/mmaped","date":"2012-08-27T14:20:11.108Z","type":"message"}
{"nick":"ibobrik","message":"does it make sense to align buffers before reading from files to them? is it safe?","date":"2012-08-27T14:21:52.971Z","type":"message"}
{"nick":"indutny","message":"ibobrik: no, it's not safe","date":"2012-08-27T14:22:09.614Z","type":"message"}
{"nick":"indutny","message":"ibobrik: try free()'ing it","date":"2012-08-27T14:22:15.916Z","type":"message"}
{"nick":"piscisaureus_","message":"ibobrik: it can be made safe, but what you are doing isn't :-)","date":"2012-08-27T14:22:18.450Z","type":"message"}
{"nick":"indutny","message":"you can mmap","date":"2012-08-27T14:22:28.935Z","type":"message"}
{"nick":"indutny","message":"it'll be much more safier","date":"2012-08-27T14:22:34.222Z","type":"message"}
{"nick":"piscisaureus_","message":"yeah","date":"2012-08-27T14:22:39.156Z","type":"message"}
{"nick":"indutny","message":"and even more","date":"2012-08-27T14:22:45.937Z","type":"message"}
{"nick":"indutny","message":"you can mmap file","date":"2012-08-27T14:22:48.899Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-08-27T14:22:54.990Z","type":"message"}
{"nick":"ibobrik","message":"i don't see any mmap in fs module in node.js :)","date":"2012-08-27T14:23:03.381Z","type":"message"}
{"nick":"piscisaureus_","message":"unless it is very big","date":"2012-08-27T14:23:08.325Z","type":"message"}
{"nick":"ibobrik","message":"it's 4 gigabytes","date":"2012-08-27T14:23:26.218Z","type":"message"}
{"nick":"ibobrik","message":"is it big?","date":"2012-08-27T14:23:31.668Z","type":"message"}
{"nick":"indutny","message":"are you on x86?","date":"2012-08-27T14:23:35.609Z","type":"message"}
{"nick":"piscisaureus_","message":"too big to mmap on x86","date":"2012-08-27T14:23:39.289Z","type":"message"}
{"nick":"ibobrik","message":"x86_64","date":"2012-08-27T14:23:46.235Z","type":"message"}
{"nick":"indutny","message":"you should be able to mmap it then","date":"2012-08-27T14:24:06.330Z","type":"message"}
{"nick":"ibobrik","message":"and probably i'll want to use many files like that","date":"2012-08-27T14:24:21.250Z","type":"message"}
{"nick":"indutny","message":"that won't work :D","date":"2012-08-27T14:24:35.772Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: hey man","date":"2012-08-27T14:25:14.088Z","type":"message"}
{"nick":"ibobrik","message":"so how to make it safe?","date":"2012-08-27T14:25:20.545Z","type":"message"}
{"nick":"ibobrik","message":"disk io is bottleneck in my case, 50% is so good","date":"2012-08-27T14:25:52.121Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: why udata is NULL when receiving events from kevent() call?","date":"2012-08-27T14:26:01.339Z","type":"message"}
{"nick":"ibobrik","message":"i found posix_memalign, this probably does the same","date":"2012-08-27T14:35:03.292Z","type":"message"}
{"nick":"indutny","message":"a question","date":"2012-08-27T14:54:48.967Z","type":"message"}
{"nick":"indutny","message":"why ain't we using kqueue for watching signals in node on supported platforms","date":"2012-08-27T14:55:02.439Z","type":"message"}
{"nick":"indutny","message":"it seems to be quite efficient","date":"2012-08-27T14:55:11.919Z","type":"message"}
{"nick":"indutny","message":"and fits event-loop model well","date":"2012-08-27T14:55:18.461Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: I think bnoordhuis would take a patch for it","date":"2012-08-27T14:59:40.225Z","type":"message"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-08-27T14:59:57.545Z","type":"quit"}
{"nick":"piscisaureus_","message":"indutny: I know he has been working on getting multiloop signal handling working, but it could probably be solved with signalfd and kqueue on linux, bsds","date":"2012-08-27T15:00:24.158Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: so solaris is the only chore here","date":"2012-08-27T15:00:29.918Z","type":"message"}
{"nick":"indutny","message":"kqueue on linux?","date":"2012-08-27T15:01:23.128Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: signalfd on linux","date":"2012-08-27T15:01:29.556Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-08-27T15:01:33.024Z","type":"message"}
{"nick":"indutny","message":"complex sentence","date":"2012-08-27T15:01:40.415Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: haha","date":"2012-08-27T15:01:44.240Z","type":"message"}
{"nick":"indutny","message":"yeah, will take a look","date":"2012-08-27T15:01:57.868Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: I don't know if you can receive signals on all loops with kqueue","date":"2012-08-27T15:01:59.695Z","type":"message"}
{"nick":"indutny","message":"finishing simple kqueue http server","date":"2012-08-27T15:02:04.241Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: em... why not?","date":"2012-08-27T15:02:14.760Z","type":"message"}
{"nick":"indutny","message":"every kqueue should receive event","date":"2012-08-27T15:02:29.274Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: are you sure","date":"2012-08-27T15:02:35.621Z","type":"message"}
{"nick":"indutny","message":"no","date":"2012-08-27T15:02:43.890Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: what if the event loop is not in kqueue at that time","date":"2012-08-27T15:02:44.963Z","type":"message"}
{"nick":"indutny","message":"that needs to be checked","date":"2012-08-27T15:02:48.912Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: it's persistent","date":"2012-08-27T15:03:08.817Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: at least it's designed to be so","date":"2012-08-27T15:03:13.844Z","type":"message"}
{"nick":"piscisaureus_","message":"man, kqueue is so nice","date":"2012-08-27T15:03:54.094Z","type":"message"}
{"nick":"piscisaureus_","message":"instead of writing libuv we should just port kqueue to all platforms","date":"2012-08-27T15:04:02.778Z","type":"message"}
{"nick":"indutny","message":"hahaha","date":"2012-08-27T15:04:21.739Z","type":"message"}
{"nick":"indutny","message":"yeah, it's really nice","date":"2012-08-27T15:04:24.743Z","type":"message"}
{"nick":"indutny","message":"berkley mad science","date":"2012-08-27T15:04:48.276Z","type":"message"}
{"nick":"indutny","message":" 16387.18 req/sec so far","date":"2012-08-27T15:05:12.837Z","type":"message"}
{"nick":"indutny","message":"w/o http parsing","date":"2012-08-27T15:05:17.020Z","type":"message"}
{"nick":"indutny","message":"and w/o keep-alive","date":"2012-08-27T15:05:29.307Z","type":"message"}
{"nick":"piscisaureus_","message":"data returns the number of","date":"2012-08-27T15:05:47.213Z","type":"message"}
{"nick":"piscisaureus_","message":"                      times the signal has been generated since the last call to kevent().  This filter","date":"2012-08-27T15:05:47.423Z","type":"message"}
{"nick":"piscisaureus_","message":"                      automatically sets the EV_CLEAR flag internally.","date":"2012-08-27T15:05:47.423Z","type":"message"}
{"nick":"piscisaureus_","message":"^-- indutny: the question is: since the last call to kevent(), or the last call to kevent with that particular kqueue fd ?","date":"2012-08-27T15:06:31.813Z","type":"message"}
{"nick":"indutny","message":"hahaha","date":"2012-08-27T15:06:40.244Z","type":"message"}
{"nick":"indutny","message":"really nice","date":"2012-08-27T15:06:42.080Z","type":"message"}
{"nick":"indutny","message":"I can lookup xnu source if you would like","date":"2012-08-27T15:06:49.788Z","type":"message"}
{"nick":"piscisaureus_","message":"good idea","date":"2012-08-27T15:07:10.909Z","type":"message"}
{"nick":"indutny","message":"for every kqueue","date":"2012-08-27T15:08:02.732Z","type":"message"}
{"nick":"indutny","message":"explaining","date":"2012-08-27T15:08:10.558Z","type":"message"}
{"nick":"piscisaureus_","message":"hmm","date":"2012-08-27T15:08:10.766Z","type":"message"}
{"nick":"indutny","message":"process holds knote list","date":"2012-08-27T15:08:14.417Z","type":"message"}
{"nick":"indutny","message":"and on signal walks it","date":"2012-08-27T15:08:20.299Z","type":"message"}
{"nick":"indutny","message":"and increments data","date":"2012-08-27T15:08:23.912Z","type":"message"}
{"nick":"piscisaureus_","message":"right","date":"2012-08-27T15:08:25.037Z","type":"message"}
{"nick":"piscisaureus_","message":"not very practical","date":"2012-08-27T15:08:35.644Z","type":"message"}
{"nick":"indutny","message":"why not?","date":"2012-08-27T15:08:42.102Z","type":"message"}
{"nick":"AvianFlu","date":"2012-08-27T15:08:50.467Z","type":"join"}
{"nick":"piscisaureus_","message":"indutny: well suppose you have two uv loops and they both watch for sigint","date":"2012-08-27T15:09:06.524Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: then you want this sigint to be delivered to both loops. But if one kqueue() call resets the pending signals list, only one loop will get it.","date":"2012-08-27T15:09:40.771Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: btw - I suppose that using EVFILT_PROC would be nice for watching child processes.","date":"2012-08-27T15:10:03.150Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: your example is incorrect","date":"2012-08-27T15:10:37.927Z","type":"message"}
{"nick":"indutny","message":"EV_CLEAR doesn't work like that","date":"2012-08-27T15:10:41.756Z","type":"message"}
{"nick":"indutny","message":"it just removes single knote from list","date":"2012-08-27T15:10:56.971Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: so when a signal arrives all the kqueues are walked and the first knote it finds has its data member incremented ?","date":"2012-08-27T15:11:52.937Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: whatever - if you say it works, I will believe you.","date":"2012-08-27T15:12:13.985Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: it should increment every matching knote","date":"2012-08-27T15:12:32.774Z","type":"message"}
{"nick":"piscisaureus_","message":"right, ok","date":"2012-08-27T15:12:42.585Z","type":"message"}
{"nick":"indutny","message":"so both loops should receive notifications","date":"2012-08-27T15:13:13.956Z","type":"message"}
{"nick":"dylang","date":"2012-08-27T15:15:53.241Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 248 seconds","date":"2012-08-27T15:18:05.265Z","type":"quit"}
{"nick":"indutny","message":" * Query/Post each knote in the object's list","date":"2012-08-27T15:19:31.208Z","type":"message"}
{"nick":"indutny","message":" *","date":"2012-08-27T15:19:31.411Z","type":"message"}
{"nick":"indutny","message":" *\tThe object lock protects the list. It is assumed","date":"2012-08-27T15:19:31.411Z","type":"message"}
{"nick":"indutny","message":" *\tthat the filter/event routine for the object can","date":"2012-08-27T15:19:31.411Z","type":"message"}
{"nick":"indutny","message":" *\tdetermine that the object is already locked (via","date":"2012-08-27T15:19:31.621Z","type":"message"}
{"nick":"indutny","message":" *\tthe hint) and not deadlock itself.","date":"2012-08-27T15:19:31.831Z","type":"message"}
{"nick":"indutny","message":" *","date":"2012-08-27T15:19:31.832Z","type":"message"}
{"nick":"indutny","message":" *\tThe object lock should also hold off pending","date":"2012-08-27T15:19:32.941Z","type":"message"}
{"nick":"indutny","message":" *\tdetach/drop operations.  But we'll prevent it here","date":"2012-08-27T15:19:32.941Z","type":"message"}
{"nick":"indutny","message":" *\ttoo - just in case.","date":"2012-08-27T15:19:33.770Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: ^","date":"2012-08-27T15:19:36.296Z","type":"message"}
{"nick":"indutny","message":"I just verified","date":"2012-08-27T15:19:51.814Z","type":"message"}
{"nick":"indutny","message":"it seems to be working this way","date":"2012-08-27T15:19:55.222Z","type":"message"}
{"nick":"piscisaureus_","message":"ok","date":"2012-08-27T15:19:59.807Z","type":"message"}
{"nick":"piscisaureus_","message":"well, that's very nice :-)","date":"2012-08-27T15:20:04.012Z","type":"message"}
{"nick":"indutny","message":"https://gist.github.com/2bbef0db7b225d3e9e5c","date":"2012-08-27T15:22:37.102Z","type":"message"}
{"nick":"piscisaureus_","message":"http://mikaelkoskinen.net/post/asp-net-web-api-node-benchmarks.aspx","date":"2012-08-27T15:25:19.462Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yt?","date":"2012-08-27T15:28:01.238Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I need this for windows: https://gist.github.com/337256544ca428905b02. Would it be useful for unix as well or are we divorcing again?","date":"2012-08-27T15:28:59.329Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: confirmation https://gist.github.com/8361b2a97ec7e5149193","date":"2012-08-27T15:29:43.849Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: nice","date":"2012-08-27T15:30:24.104Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: kqueue would really rock if it'd work with /dev/stdin as well _p","date":"2012-08-27T15:30:56.415Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-08-27T15:31:04.452Z","type":"message"}
{"nick":"indutny","message":"that's only on osx","date":"2012-08-27T15:31:26.060Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: do EVFILT_SIGNAL and EVFILT_PROC work on *bsd?","date":"2012-08-27T15:31:55.244Z","type":"message"}
{"nick":"indutny","message":"EVFILT_SIGNAL definitely","date":"2012-08-27T15:32:09.496Z","type":"message"}
{"nick":"indutny","message":"EVFILT_PROC - hadn't checked yet","date":"2012-08-27T15:32:18.647Z","type":"message"}
{"nick":"indutny","message":"suppose so","date":"2012-08-27T15:32:26.163Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis seems to be working on removing ev from libuv","date":"2012-08-27T15:34:43.864Z","type":"message"}
{"nick":"indutny","message":"this is essentially leads to adding new bindings for kqueu","date":"2012-08-27T15:34:58.391Z","type":"message"}
{"nick":"indutny","message":"kqueue*","date":"2012-08-27T15:35:01.086Z","type":"message"}
{"nick":"ibobrik","reason":"Quit: ibobrik","date":"2012-08-27T15:35:48.867Z","type":"quit"}
{"nick":"TooTallNate","date":"2012-08-27T15:36:42.244Z","type":"join"}
{"nick":"piscisaureus_","message":"yes","date":"2012-08-27T15:38:46.115Z","type":"message"}
{"nick":"piscisaureus_","message":"you're welcome","date":"2012-08-27T15:38:49.651Z","type":"message"}
{"nick":"piscisaureus_","message":"what are the current refcount semantics for close callbacks on unref'ed handles","date":"2012-08-27T15:39:25.205Z","type":"message"}
{"nick":"piscisaureus_","message":"?","date":"2012-08-27T15:39:26.786Z","type":"message"}
{"nick":"piscisaureus_","message":"are they always called, or could they be skipped when uv_run returns?","date":"2012-08-27T15:39:59.549Z","type":"message"}
{"nick":"piscisaureus_","action":"does know remember","date":"2012-08-27T15:40:06.373Z","type":"action"}
{"nick":"tjfontaine","message":"I think they're skipped","date":"2012-08-27T15:40:09.264Z","type":"message"}
{"nick":"piscisaureus_","action":"is ashamed","date":"2012-08-27T15:40:10.015Z","type":"action"}
{"nick":"dap","date":"2012-08-27T15:58:45.580Z","type":"join"}
