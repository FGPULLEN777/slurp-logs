{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-10-07T00:00:01.447Z","type":"quit"}
{"nick":"ircretary","date":"2013-10-07T00:00:09.345Z","type":"join"}
{"nick":"Benvie","date":"2013-10-07T00:06:13.297Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-07T00:08:12.542Z","type":"nick"}
{"nick":"Benvie","reason":"Ping timeout: 264 seconds","date":"2013-10-07T00:20:30.230Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-07T00:45:47.728Z","type":"nick"}
{"nick":"kazupon","date":"2013-10-07T00:47:35.971Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-07T01:06:39.792Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-07T01:07:11.974Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 248 seconds","date":"2013-10-07T01:11:28.754Z","type":"quit"}
{"nick":"abraxas","date":"2013-10-07T01:37:24.972Z","type":"join"}
{"nick":"c4milo","date":"2013-10-07T01:39:04.471Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-07T01:39:50.927Z","type":"quit"}
{"nick":"inolen1","date":"2013-10-07T01:42:25.328Z","type":"join"}
{"nick":"inolen","reason":"Read error: Connection reset by peer","date":"2013-10-07T01:42:25.652Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-07T01:53:03.746Z","type":"join"}
{"nick":"trevnorris","message":"hello world","date":"2013-10-07T02:13:42.831Z","type":"message"}
{"nick":"tjfontaine","message":"goodbye cruel world :)","date":"2013-10-07T02:14:00.073Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: heh, how's it been?","date":"2013-10-07T02:36:10.600Z","type":"message"}
{"nick":"tjfontaine","message":"sok, you?","date":"2013-10-07T02:37:26.091Z","type":"message"}
{"nick":"trevnorris","message":"nothing much. been doing a little irhydra debugging with mraleph.","date":"2013-10-07T02:39:19.647Z","type":"message"}
{"nick":"trevnorris","message":"it's not showing deopt's in output.","date":"2013-10-07T02:39:27.870Z","type":"message"}
{"nick":"trevnorris","message":"also cleaning up the patch. since isaacs (supposedly) going to be back tomorrow.","date":"2013-10-07T02:39:58.334Z","type":"message"}
{"nick":"trevnorris","message":"not like he's going to have anything else to do than review my patch. :P","date":"2013-10-07T02:40:08.340Z","type":"message"}
{"nick":"wolfeidau","message":"Heya does anyone know what \"<anonymous> (as DataHandler):\" mean in mdb output?","date":"2013-10-07T02:42:53.427Z","type":"message"}
{"nick":"tjfontaine","message":"that'll be an anonymous function with an assignment I think","date":"2013-10-07T02:44:27.012Z","type":"message"}
{"nick":"tjfontaine","message":"var foo = function(){}","date":"2013-10-07T02:44:52.399Z","type":"message"}
{"nick":"tjfontaine","message":"I think","date":"2013-10-07T02:44:54.039Z","type":"message"}
{"nick":"wolfeidau","message":"I have a \"class like thing\" called DataHandler which is getting created in like 3 places","date":"2013-10-07T02:45:44.310Z","type":"message"}
{"nick":"wolfeidau","message":"Just trying to zero in on which one that is","date":"2013-10-07T02:46:01.603Z","type":"message"}
{"nick":"wolfeidau","message":"As in new DataHandler :P","date":"2013-10-07T02:47:14.621Z","type":"message"}
{"nick":"tjfontaine","message":"you have 3 times someone calls `new DataHandler`?","date":"2013-10-07T02:47:44.952Z","type":"message"}
{"nick":"wolfeidau","message":"Yeah ","date":"2013-10-07T02:49:27.169Z","type":"message"}
{"nick":"wolfeidau","message":"All inside functions","date":"2013-10-07T02:49:36.370Z","type":"message"}
{"nick":"wolfeidau","message":"One is also used in a subsequent closure","date":"2013-10-07T02:49:46.102Z","type":"message"}
{"nick":"wolfeidau","message":"callback function","date":"2013-10-07T02:49:51.075Z","type":"message"}
{"nick":"wolfeidau","message":"so i have set that to dataHandler=null at the end ","date":"2013-10-07T02:50:23.693Z","type":"message"}
{"nick":"wolfeidau","message":"My knowledge of how to force js to clean this up is limited to say the least","date":"2013-10-07T02:51:00.590Z","type":"message"}
{"nick":"wolfeidau","message":"The thing i am trying to accertain is whether or not this is just an effect of a larger leak which is within the same closure","date":"2013-10-07T02:52:06.802Z","type":"message"}
{"nick":"wolfeidau","message":"So if i, heaven forbid had a function that did a ton of stuff would just ONE badness in their retain everything used within that closure?","date":"2013-10-07T02:53:03.470Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: i'm having a pain of a time figuring out how to do an assert.throws() for an asynchronous function.","date":"2013-10-07T03:17:24.442Z","type":"message"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-10-07T03:27:18.827Z","type":"quit"}
{"nick":"abraxas","date":"2013-10-07T03:29:47.853Z","type":"join"}
{"nick":"Kakera","date":"2013-10-07T03:31:42.527Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-07T03:39:31.605Z","type":"quit"}
{"nick":"Benvie","date":"2013-10-07T03:41:54.526Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-07T03:45:48.459Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-07T03:46:21.447Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 256 seconds","date":"2013-10-07T03:50:54.245Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-07T04:09:53.969Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 248 seconds","date":"2013-10-07T04:18:08.753Z","type":"quit"}
{"nick":"Kakera_","date":"2013-10-07T04:18:12.012Z","type":"join"}
{"nick":"Benvie_","date":"2013-10-07T04:18:54.246Z","type":"join"}
{"nick":"Benvie","reason":"Ping timeout: 240 seconds","date":"2013-10-07T04:19:50.529Z","type":"quit"}
{"nick":"Kakera","reason":"Ping timeout: 240 seconds","date":"2013-10-07T04:21:02.529Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-07T04:24:46.633Z","type":"join"}
{"nick":"Kakera_","reason":"Ping timeout: 246 seconds","date":"2013-10-07T04:54:40.871Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-10-07T05:19:40.019Z","type":"quit"}
{"nick":"Benvie","date":"2013-10-07T05:21:48.333Z","type":"join"}
{"nick":"mikeal","date":"2013-10-07T05:21:58.854Z","type":"join"}
{"nick":"Benvie_","reason":"Ping timeout: 264 seconds","date":"2013-10-07T05:23:30.243Z","type":"quit"}
{"nick":"paddybyers","date":"2013-10-07T05:37:31.070Z","type":"join"}
{"nick":"mraleph1","date":"2013-10-07T05:40:20.297Z","type":"part"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2013-10-07T06:04:06.941Z","type":"quit"}
{"nick":"paddybyers","date":"2013-10-07T06:11:36.582Z","type":"join"}
{"nick":"bajtos","date":"2013-10-07T06:12:26.754Z","type":"join"}
{"nick":"Benvie","reason":"Ping timeout: 256 seconds","date":"2013-10-07T06:13:42.414Z","type":"quit"}
{"nick":"Benvie","date":"2013-10-07T06:14:26.135Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #245 \u00037UNSTABLE\u000f windows-ia32 (7/600) windows-x64 (9/600) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/245/","date":"2013-10-07T06:40:55.607Z","type":"message"}
{"nick":"st_luke","date":"2013-10-07T06:41:34.825Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-10-07T06:48:21.977Z","type":"quit"}
{"nick":"inolen1","reason":"Ping timeout: 256 seconds","date":"2013-10-07T06:51:40.324Z","type":"quit"}
{"nick":"inolen","date":"2013-10-07T06:52:01.255Z","type":"join"}
{"nick":"Benvie_","date":"2013-10-07T06:53:52.693Z","type":"join"}
{"nick":"Benvie","reason":"Ping timeout: 245 seconds","date":"2013-10-07T06:54:21.262Z","type":"quit"}
{"nick":"rendar","date":"2013-10-07T07:04:13.447Z","type":"join"}
{"nick":"inolen","reason":"Read error: Connection reset by peer","date":"2013-10-07T07:05:37.714Z","type":"quit"}
{"nick":"inolen","date":"2013-10-07T07:06:09.800Z","type":"join"}
{"nick":"Benvie_","reason":"Ping timeout: 245 seconds","date":"2013-10-07T07:23:21.623Z","type":"quit"}
{"nick":"Benvie","date":"2013-10-07T07:23:39.187Z","type":"join"}
{"nick":"Benvie_","date":"2013-10-07T07:29:44.202Z","type":"join"}
{"nick":"Benvie","reason":"Ping timeout: 245 seconds","date":"2013-10-07T07:30:11.169Z","type":"quit"}
{"nick":"Benvie","date":"2013-10-07T07:46:51.853Z","type":"join"}
{"nick":"Benvie_","reason":"Ping timeout: 240 seconds","date":"2013-10-07T07:48:02.737Z","type":"quit"}
{"nick":"wolfeida_","date":"2013-10-07T07:49:25.981Z","type":"join"}
{"nick":"trevnorris","message":"good night cruel world","date":"2013-10-07T07:50:06.060Z","type":"message"}
{"nick":"trevnorris","action":"&","date":"2013-10-07T07:50:11.938Z","type":"action"}
{"nick":"LOUDBOT","message":"BECAUSE I'M WEB PROGRAMMING AS HARD AS I PONDERED THE EFFECT OF ECHINACEA - YOUR NICK ASSFACE ","date":"2013-10-07T07:50:12.606Z","type":"message"}
{"nick":"wolfeidau","reason":"Ping timeout: 240 seconds","date":"2013-10-07T07:51:08.370Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-10-07T08:00:48.573Z","type":"join"}
{"nick":"hz","date":"2013-10-07T08:02:14.512Z","type":"join"}
{"nick":"Benvie_","date":"2013-10-07T08:09:18.151Z","type":"join"}
{"nick":"Benvie","reason":"Ping timeout: 264 seconds","date":"2013-10-07T08:11:02.813Z","type":"quit"}
{"nick":"bnoordhuis","message":"saghul: do you have moderator rights for the libuv mailing list?","date":"2013-10-07T08:19:21.655Z","type":"message"}
{"nick":"bnoordhuis","message":"saghul: nvm, you are now :)","date":"2013-10-07T08:21:29.498Z","type":"message"}
{"nick":"saghul","message":"bnoordhuis oh, thanks :-)","date":"2013-10-07T08:21:48.378Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: hey ben","date":"2013-10-07T08:24:33.692Z","type":"message"}
{"nick":"indutny","message":"how are you?","date":"2013-10-07T08:24:36.147Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-10-07T08:30:14.388Z","type":"quit"}
{"nick":"inolen","date":"2013-10-07T08:31:24.835Z","type":"join"}
{"nick":"bnoordhuis","message":"indutny: hola. i'm fine (again)","date":"2013-10-07T08:37:36.016Z","type":"message"}
{"nick":"bnoordhuis","message":"was down with a stomach flu over the weekend","date":"2013-10-07T08:37:58.723Z","type":"message"}
{"nick":"bnoordhuis","message":"things like that always happen in the weekends, don't they?","date":"2013-10-07T08:38:10.714Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: btw, are you a libuv ML moderator","date":"2013-10-07T08:43:45.145Z","type":"message"}
{"nick":"indutny","message":"I'm not really sure","date":"2013-10-07T08:43:52.354Z","type":"message"}
{"nick":"indutny","message":"perhaps, no","date":"2013-10-07T08:43:56.803Z","type":"message"}
{"nick":"bnoordhuis","message":"let me check","date":"2013-10-07T08:44:00.865Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: stomach flu sounds quite dangerous","date":"2013-10-07T08:44:03.328Z","type":"message"}
{"nick":"indutny","message":"are you ok?","date":"2013-10-07T08:44:05.241Z","type":"message"}
{"nick":"indutny","message":"I mean now","date":"2013-10-07T08:44:10.001Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, i'm better again","date":"2013-10-07T08:44:29.303Z","type":"message"}
{"nick":"bnoordhuis","message":"and you're a manager now","date":"2013-10-07T08:44:36.995Z","type":"message"}
{"nick":"bnoordhuis","message":"that rat bert made me manager rather than owner so now i can't bump you guys to owner","date":"2013-10-07T08:44:54.002Z","type":"message"}
{"nick":"bnoordhuis","message":"i've emailed him that i expect a fix on my desk before 4 PM","date":"2013-10-07T08:45:33.996Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-10-07T08:45:50.869Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-10-07T08:45:54.136Z","type":"message"}
{"nick":"rendar","date":"2013-10-07T08:57:12.545Z","type":"quit"}
{"nick":"Benvie","date":"2013-10-07T09:04:03.335Z","type":"join"}
{"nick":"Benvie_","reason":"Ping timeout: 245 seconds","date":"2013-10-07T09:05:00.127Z","type":"quit"}
{"nick":"hz","message":"after a FIN recvd, i can call shutdown on my tcp socket.. FIN is sent and socket enters into the LAST_ACK state waiting for the ACK to the sent FIN. can the socket reach the CLOSED state event if i dont call close on my socket?","date":"2013-10-07T09:11:08.337Z","type":"message"}
{"nick":"hz","message":"* event if -> even if","date":"2013-10-07T09:11:40.917Z","type":"message"}
{"nick":"hz","message":"if yes... if now i call close, does it avoid to send FIN right? how it works internally?","date":"2013-10-07T09:13:04.817Z","type":"message"}
{"nick":"bnoordhuis","message":"hz: the answer however is 'no' :)","date":"2013-10-07T09:13:16.262Z","type":"message"}
{"nick":"bnoordhuis","message":"if you don't call close(), it'll end up in a WAIT state","date":"2013-10-07T09:13:42.916Z","type":"message"}
{"nick":"hz","message":"shutdown send a FIN","date":"2013-10-07T09:13:43.357Z","type":"message"}
{"nick":"hz","message":"CLOSE_WAIT even if FIN has been ACKed?","date":"2013-10-07T09:14:23.112Z","type":"message"}
{"nick":"hz","message":"* shutdown(wr)","date":"2013-10-07T09:15:01.931Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2013-10-07T09:15:11.709Z","type":"message"}
{"nick":"hz","message":"is it a TCP directive or just implementation detail","date":"2013-10-07T09:15:38.898Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess the latter","date":"2013-10-07T09:15:48.547Z","type":"message"}
{"nick":"hz","message":"so i have no warranties on it, damn it :D","date":"2013-10-07T09:16:09.852Z","type":"message"}
{"nick":"hz","message":"thanks bnoordhuis :)","date":"2013-10-07T09:16:45.469Z","type":"message"}
{"nick":"bnoordhuis","message":"np :)","date":"2013-10-07T09:16:49.695Z","type":"message"}
{"nick":"hz","message":"what you said, its unix/linux impl?","date":"2013-10-07T09:17:00.538Z","type":"message"}
{"nick":"hz","message":"or other OS?","date":"2013-10-07T09:17:06.125Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, that's how linux works","date":"2013-10-07T09:17:11.286Z","type":"message"}
{"nick":"bnoordhuis","message":"freebsd too, i'm pretty certain","date":"2013-10-07T09:17:16.086Z","type":"message"}
{"nick":"hz","message":"i see","date":"2013-10-07T09:17:28.025Z","type":"message"}
{"nick":"bnoordhuis","message":"it'd be pretty odd if the kernel actually reclaimed the address:port behind your back","date":"2013-10-07T09:17:37.992Z","type":"message"}
{"nick":"hz","message":"are you a ker develper?","date":"2013-10-07T09:17:45.255Z","type":"message"}
{"nick":"bnoordhuis","message":"you mean kernel programmer? off and on","date":"2013-10-07T09:17:59.917Z","type":"message"}
{"nick":"bnoordhuis","message":"my last linux patch is from 2006 or thereabouts though :)","date":"2013-10-07T09:18:16.721Z","type":"message"}
{"nick":"hz","message":"ehehe","date":"2013-10-07T09:18:24.441Z","type":"message"}
{"nick":"rendar","date":"2013-10-07T09:20:59.550Z","type":"join"}
{"nick":"indutny","message":"hz: TCP is really fucked","date":"2013-10-07T09:36:18.537Z","type":"message"}
{"nick":"indutny","message":"use UDP","date":"2013-10-07T09:36:20.029Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-10-07T09:36:21.527Z","type":"message"}
{"nick":"hz","message":"hahahah :D","date":"2013-10-07T09:37:21.770Z","type":"message"}
{"nick":"hz","message":"11:13 <bnoordhuis> if you don't call close(), it'll end up in a WAIT state <--- doesnt shutdown put it into LAST_ACK state?","date":"2013-10-07T09:39:36.597Z","type":"message"}
{"nick":"Benvie_","date":"2013-10-07T09:39:52.771Z","type":"join"}
{"nick":"Benvie","reason":"Ping timeout: 256 seconds","date":"2013-10-07T09:41:40.245Z","type":"quit"}
{"nick":"bnoordhuis","message":"hz: LAST_ACK is when the other end sent a FIN","date":"2013-10-07T09:46:32.890Z","type":"message"}
{"nick":"Benvie_","reason":"Ping timeout: 248 seconds","date":"2013-10-07T09:46:40.771Z","type":"quit"}
{"nick":"hz","message":"CLOSE_WAIT is when the other sends the firts FIN","date":"2013-10-07T09:47:50.452Z","type":"message"}
{"nick":"hz","message":"and i reply with an ACK to it","date":"2013-10-07T09:48:22.135Z","type":"message"}
{"nick":"hz","message":"from close wait, diagram shows the socket can pass into LAST_ACK only by sending the second FIN","date":"2013-10-07T09:48:59.413Z","type":"message"}
{"nick":"bnoordhuis","message":"hz: oh wait, yeah, what i said is only partially correct","date":"2013-10-07T09:49:12.815Z","type":"message"}
{"nick":"hz","message":"so both shutdown(wr) and close should do this","date":"2013-10-07T09:49:22.166Z","type":"message"}
{"nick":"bnoordhuis","message":"shutdown from both sides but there may still be pending data on our side","date":"2013-10-07T09:49:33.494Z","type":"message"}
{"nick":"bnoordhuis","message":"where 'our' means 'in the kernel'","date":"2013-10-07T09:49:45.056Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-10-07T09:50:28.452Z","type":"quit"}
{"nick":"hz","message":"assuming i recevived the first FIN and i sent the ACK to it","date":"2013-10-07T09:50:30.193Z","type":"message"}
{"nick":"bnoordhuis","message":"if you have a lot of sockets in LAST_ACK state, it means you're not closing them","date":"2013-10-07T09:50:46.243Z","type":"message"}
{"nick":"hz","message":"now if i call shutdown does my socket pass into  LAST_ACK?","date":"2013-10-07T09:50:53.120Z","type":"message"}
{"nick":"hz","message":"or LAST_ACK state is recheable only by invoking close syscall?","date":"2013-10-07T09:51:38.088Z","type":"message"}
{"nick":"bnoordhuis","message":"no, it's usually when you call shutdown but not close","date":"2013-10-07T09:52:12.525Z","type":"message"}
{"nick":"bnoordhuis","message":"a socket can stay in LAST_ACK for a little while after close","date":"2013-10-07T09:52:24.007Z","type":"message"}
{"nick":"hz","message":"sure, waiting for 2nd FIN being ACKed","date":"2013-10-07T09:52:58.315Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm curious though, why are you so interested in this? :)","date":"2013-10-07T09:53:50.713Z","type":"message"}
{"nick":"hz","message":"just for study","date":"2013-10-07T09:54:18.065Z","type":"message"}
{"nick":"hz","message":"curiosity its dangerous :D","date":"2013-10-07T09:54:29.144Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, it killed the cat","date":"2013-10-07T09:54:41.863Z","type":"message"}
{"nick":"hz","message":"btw i can think write a didactical TCP socket interactive simulator","date":"2013-10-07T09:55:22.971Z","type":"message"}
{"nick":"hz","message":"where interactions are syscall invokations","date":"2013-10-07T09:55:50.040Z","type":"message"}
{"nick":"hz","message":"so id like understand the result given by \"every state, every syscall\" couples","date":"2013-10-07T09:57:21.242Z","type":"message"}
{"nick":"bnoordhuis","message":"you want to understand the tcp state machine?","date":"2013-10-07T09:57:56.946Z","type":"message"}
{"nick":"hz","message":"yes","date":"2013-10-07T09:58:12.676Z","type":"message"}
{"nick":"hz","message":"but in relation to syscall","date":"2013-10-07T09:58:18.377Z","type":"message"}
{"nick":"hz","message":"what i can read doent talk about syscall shutdown o close","date":"2013-10-07T09:59:13.640Z","type":"message"}
{"nick":"hz","message":"they say \"send a FIN\"","date":"2013-10-07T09:59:26.832Z","type":"message"}
{"nick":"hz","message":"but i know shutdown is not exaclty as close","date":"2013-10-07T10:00:00.936Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, right","date":"2013-10-07T10:00:43.338Z","type":"message"}
{"nick":"bnoordhuis","message":"what kind of shutdown are you doing? SHUT_RDWR?","date":"2013-10-07T10:00:51.896Z","type":"message"}
{"nick":"hz","message":"only WR","date":"2013-10-07T10:00:58.795Z","type":"message"}
{"nick":"hz","message":"RD is quite useless atm","date":"2013-10-07T10:01:17.583Z","type":"message"}
{"nick":"mburns","reason":"Quit: ZNC - http://znc.sourceforge.net","date":"2013-10-07T10:01:37.503Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-07T10:02:05.224Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-07T10:02:31.285Z","type":"join"}
{"nick":"mburns","date":"2013-10-07T10:03:26.885Z","type":"join"}
{"nick":"mburns","reason":"Client Quit","date":"2013-10-07T10:05:29.349Z","type":"quit"}
{"nick":"mburns","date":"2013-10-07T10:06:54.869Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 268 seconds","date":"2013-10-07T10:07:33.125Z","type":"quit"}
{"nick":"bnoordhuis","message":"hz: i guess you could say the same thing about SHUT_WR, it's not that different from a full close","date":"2013-10-07T10:07:50.043Z","type":"message"}
{"nick":"bnoordhuis","message":"you can still receive data but you could argue that's working around application bugs","date":"2013-10-07T10:08:11.492Z","type":"message"}
{"nick":"bnoordhuis","message":"not that i have a really strong opinion on it, i just work with what's there :)","date":"2013-10-07T10:08:29.317Z","type":"message"}
{"nick":"hz","message":"12:08 <bnoordhuis> you can still receive data <-- if im in CLOSE_WAIT i just received FIN from my peer so read its useless (i think i would get another 0 returned from read syscall)","date":"2013-10-07T10:10:22.811Z","type":"message"}
{"nick":"hz","message":"this is why i dont care about RW detail now","date":"2013-10-07T10:11:00.438Z","type":"message"}
{"nick":"bnoordhuis","message":"right","date":"2013-10-07T10:11:42.068Z","type":"message"}
{"nick":"hz","message":"*RD","date":"2013-10-07T10:15:16.281Z","type":"message"}
{"nick":"hz","message":"http://webmuseum.mi.fh-offenburg.de/exhibition/17/assets/statemachine.swf <-- :D it doesnt contemple shutdown, arrrrr","date":"2013-10-07T10:18:20.613Z","type":"message"}
{"nick":"dominictarr","date":"2013-10-07T10:26:24.150Z","type":"join"}
{"nick":"mburns","date":"2013-10-07T10:28:32.512Z","type":"part"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-10-07T10:32:36.597Z","type":"quit"}
{"nick":"dominictarr","date":"2013-10-07T10:34:43.577Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-10-07T10:39:59.981Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1519 \u00037UNSTABLE\u000f smartos-ia32 (1/600) linux-x64 (1/600) osx-x64 (1/600) http://jenkins.nodejs.org/job/nodejs-v0.10/1519/","date":"2013-10-07T10:45:40.919Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-10-07T10:46:48.157Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-10-07T10:48:05.462Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-10-07T10:48:28.123Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-10-07T10:49:52.454Z","type":"quit"}
{"nick":"bajtos","date":"2013-10-07T10:52:51.001Z","type":"join"}
{"nick":"bajtos","reason":"Client Quit","date":"2013-10-07T10:53:01.007Z","type":"quit"}
{"nick":"Benvie","date":"2013-10-07T11:05:32.341Z","type":"join"}
{"nick":"Benvie","reason":"Ping timeout: 264 seconds","date":"2013-10-07T11:10:18.227Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: what are the major outstanding issues for v0.12 in your opinion?","date":"2013-10-07T11:37:29.063Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: ^ ditto","date":"2013-10-07T11:37:32.559Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-10-07T11:38:47.243Z","type":"message"}
{"nick":"indutny","message":"I'd like to introduce cluster.distribute thing","date":"2013-10-07T11:38:56.834Z","type":"message"}
{"nick":"indutny","message":"and probably dualstack","date":"2013-10-07T11:39:07.467Z","type":"message"}
{"nick":"indutny","message":"no other blockers from my side","date":"2013-10-07T11:39:13.296Z","type":"message"}
{"nick":"bnoordhuis","message":"i was thinking more of bugs, not features","date":"2013-10-07T11:39:24.370Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, think it over while i do the groceries :)","date":"2013-10-07T11:40:01.651Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-10-07T11:44:35.122Z","type":"quit"}
{"nick":"bajtos","date":"2013-10-07T11:47:41.054Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: execSync","date":"2013-10-07T12:18:32.232Z","type":"message"}
{"nick":"piscisaureus_","message":"ircretery: tell bnoordhuis execSync, and also sync/async stdio woes","date":"2013-10-07T12:21:33.365Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-10-07T12:37:13.235Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: okay. when is that finished?","date":"2013-10-07T12:38:01.687Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-10-07T13:22:27.928Z","type":"quit"}
{"nick":"bajtos","date":"2013-10-07T13:25:29.080Z","type":"join"}
{"nick":"Kakera_","date":"2013-10-07T13:38:24.766Z","type":"join"}
{"nick":"kevinswiber","date":"2013-10-07T13:51:41.501Z","type":"join"}
{"nick":"c4milo","date":"2013-10-07T13:53:43.480Z","type":"join"}
{"nick":"isaacs","action":"waves","date":"2013-10-07T13:58:10.749Z","type":"action"}
{"nick":"bnoordhuis","message":"hey isaac","date":"2013-10-07T13:59:15.317Z","type":"message"}
{"nick":"piscisaureus_","message":"hello","date":"2013-10-07T14:01:52.677Z","type":"message"}
{"nick":"vptr","date":"2013-10-07T14:04:32.124Z","type":"join"}
{"nick":"AvianFlu","date":"2013-10-07T14:24:04.340Z","type":"join"}
{"nick":"M28","reason":"Read error: Connection reset by peer","date":"2013-10-07T14:27:35.484Z","type":"quit"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-10-07T14:28:00.449Z","type":"quit"}
{"nick":"kevinswiber","date":"2013-10-07T14:28:32.337Z","type":"join"}
{"nick":"M28","date":"2013-10-07T14:29:10.337Z","type":"join"}
{"nick":"inolen1","date":"2013-10-07T14:29:17.767Z","type":"join"}
{"nick":"inolen","reason":"Ping timeout: 264 seconds","date":"2013-10-07T14:29:38.778Z","type":"quit"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-10-07T14:31:16.379Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-10-07T14:32:03.744Z","type":"quit"}
{"nick":"kevinswiber","reason":"Ping timeout: 245 seconds","date":"2013-10-07T14:32:55.190Z","type":"quit"}
{"nick":"piscisaureus_","message":"rendar: ?","date":"2013-10-07T14:37:36.866Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: i saw that named pipes in windows: they're different than those on unix (local sockets) which are more similar to tcp sockets, you have an accept which gives you a new fd. instead with named pipes the listening fd will be the client endpoint fd in the server, right? so how to abstract this to make it working with iocp?","date":"2013-10-07T14:39:01.551Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: so with libuv you just do it the same as on unix","date":"2013-10-07T14:40:13.586Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: internally libuv will create a new \"listening fd\" after it accepts, so it can accept more","date":"2013-10-07T14:40:54.159Z","type":"message"}
{"nick":"saghul","reason":"Ping timeout: 264 seconds","date":"2013-10-07T14:40:54.373Z","type":"quit"}
{"nick":"rendar","message":"piscisaureus_: exactly","date":"2013-10-07T14:41:44.437Z","type":"message"}
{"nick":"saghul","date":"2013-10-07T14:42:45.820Z","type":"join"}
{"nick":"rendar","message":"piscisaureus_: now my question is: when it returns a new fd (which is not a new fd) shouldn't libuv change its iocp key associated with that named pipe handle? i mean: if you set a callback as the completion key, and that callback is \"uv__namedpipe_listening\" after, you should change it to \"uv__normal_stream\" because that fd change \"face\" it passes to be a listening entity to a normal stream ","date":"2013-10-07T14:43:54.888Z","type":"message"}
{"nick":"rendar","message":"entity, this do not happen on unix...how to solve this problem? by modifing callbacks i guess, or changing cb* pointers?","date":"2013-10-07T14:43:55.103Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: the iocp key isn't used","date":"2013-10-07T14:45:07.869Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: oh..i see","date":"2013-10-07T14:45:20.406Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: but why? any particular design decision for that?","date":"2013-10-07T14:45:34.881Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: because the IOCP key would reference a handle","date":"2013-10-07T14:46:23.335Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: but we needed more granularity (track individual OVERLAPPEDs)","date":"2013-10-07T14:47:03.117Z","type":"message"}
{"nick":"rendar","message":"a handle? it can also reference a pointer, right? e.g. a pointer to a callback","date":"2013-10-07T14:47:04.971Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: yes but a handle can have many callbacks","date":"2013-10-07T14:47:26.988Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: e.g. you can have read and multiple writes outstanding at the same time","date":"2013-10-07T14:47:43.573Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: so there isn't really \"the\" callback for a handle","date":"2013-10-07T14:47:55.480Z","type":"message"}
{"nick":"rendar","message":"oh, right","date":"2013-10-07T14:48:21.172Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: you can make it point anywhere, but I never had a use for it. the OVERLAPPED is embedded in a uv_req_t and the uv_req_t points to the handle","date":"2013-10-07T14:48:25.785Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: i saw that also that completion key can't be changed in anyway during the life of the HANDLE, right?","date":"2013-10-07T14:48:38.989Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: so why would I make it redundant?","date":"2013-10-07T14:48:39.422Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: could be yeah","date":"2013-10-07T14:48:48.750Z","type":"message"}
{"nick":"bnoordhuis","message":"accept() really bugs me as an interface","date":"2013-10-07T14:48:52.987Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: so, don't rely on the completion key","date":"2013-10-07T14:48:55.669Z","type":"message"}
{"nick":"mikeal","date":"2013-10-07T14:49:01.340Z","type":"join"}
{"nick":"bnoordhuis","message":"all the EAGAINs!","date":"2013-10-07T14:49:01.598Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: i see","date":"2013-10-07T14:49:04.156Z","type":"message"}
{"nick":"bnoordhuis","message":"and it needs to lock the socket on each call. bah","date":"2013-10-07T14:49:09.991Z","type":"message"}
{"nick":"rendar","message":"what's your network name, EAGAIN?","date":"2013-10-07T14:49:33.050Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: yeah right","date":"2013-10-07T14:49:56.556Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: so what is the question - are you writing your own libuv?","date":"2013-10-07T14:49:56.769Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: nop, i'm just doing some async i/o tests but in C++ instead of C, so i was trying this silly completion key","date":"2013-10-07T14:50:38.053Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: i had completion key pointing to a C++ object which is a listener entity, and i couldn't change it to a stream entity..","date":"2013-10-07T14:51:01.657Z","type":"message"}
{"nick":"piscisaureus_","message":"yup. that don't work","date":"2013-10-07T14:51:32.701Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: interesting the point of using a new pointer for each OVERLAPPEDs","date":"2013-10-07T14:51:50.589Z","type":"message"}
{"nick":"rendar","message":"pointer*","date":"2013-10-07T14:52:11.081Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: before you said \"track\" individual OVERLAPPEDs, what you mean with \"track\"? i guess because each overlapped request created must increment an atomic counter, and decrement it on completion? so the pointer that the OVERLAPPED structure has can be freed?","date":"2013-10-07T14:54:21.153Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: much more bookkeeping, e.g. if a UV_READ req completes we must queue another","date":"2013-10-07T14:56:12.328Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: oh yeah, exactly","date":"2013-10-07T14:56:27.686Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-10-07T14:56:36.242Z","type":"quit"}
{"nick":"rendar","message":"piscisaureus_: thats just what i was thinking about","date":"2013-10-07T14:56:45.798Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: well, i guess windows its the only operating system that uses OVERLAPPED allocation for each request, so in other systems you don't have to worry about OVERLAPPED deallocation, right? thats because epoll() or kqueue() etc just don't have to allocate these \"packets\"","date":"2013-10-07T14:57:55.066Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: but does libuv use something special to assure that every OVERLAPPED will be freed? i thought an atomic counter for pending requests or something like that","date":"2013-10-07T14:58:22.517Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: the user is responsible for allocating an uv_req_t (uv_write_t, uv_shutdown_t) whenever it does an operation","date":"2013-10-07T14:59:16.823Z","type":"message"}
{"nick":"julianduque","date":"2013-10-07T14:59:18.696Z","type":"join"}
{"nick":"piscisaureus_","message":"rendar: and freeing it in the callback","date":"2013-10-07T14:59:25.766Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: the overlapped sits inside that struct","date":"2013-10-07T14:59:35.886Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: as for read and accept requests, their memory management is handled by the bookkeeping code","date":"2013-10-07T15:00:16.731Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: there are no atomic counters involved in the process. that would make no sense since libuv is not thread-safe anyway","date":"2013-10-07T15:01:02.695Z","type":"message"}
{"nick":"julianduque","reason":"Ping timeout: 240 seconds","date":"2013-10-07T15:07:15.955Z","type":"quit"}
{"nick":"rendar","message":"piscisaureus_: i see","date":"2013-10-07T15:08:13.003Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: well this is totally different from the unix way, because in epoll or kquueue you don't have OVERLAPPED packets, so you have to specify a pointer for the final callback?","date":"2013-10-07T15:10:26.806Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: I don't understand the question","date":"2013-10-07T15:11:50.562Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: sorry, i mean, in libuv/win when you start an async request, you have to specify the pointer to the callback, in order to allocate an OVERLAPPED structure with that pointer, and this won't happen in libuv/*nix i guess, because you do not allocate OVERLAPPEDs, but you have just i/o readyness alerts","date":"2013-10-07T15:13:56.191Z","type":"message"}
{"nick":"rendar","message":"so in *nix you will specify an unique pointer that epoll/kqueue or whatever will call when i/o is *ready* but not completed -- my point is that in *nix you'll need less granularity than in windows i guess","date":"2013-10-07T15:15:04.886Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: well on unix libuv does bookkeeping differently","date":"2013-10-07T15:15:45.503Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: it maintains a queue for writes etc","date":"2013-10-07T15:15:53.282Z","type":"message"}
{"nick":"rendar","message":"yeah right","date":"2013-10-07T15:15:59.138Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #597 \u00037UNSTABLE\u000f osx-x64 (1/644) smartos-x64 (5/644) http://jenkins.nodejs.org/job/nodejs-master/597/","date":"2013-10-07T15:17:12.368Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-10-07T15:22:18.337Z","type":"quit"}
{"nick":"bajtos","date":"2013-10-07T15:25:48.034Z","type":"join"}
{"nick":"kevinswiber","date":"2013-10-07T15:39:58.894Z","type":"join"}
{"nick":"octetcloud","date":"2013-10-07T15:40:35.794Z","type":"join"}
{"nick":"TooTallNate","date":"2013-10-07T15:49:08.119Z","type":"join"}
{"nick":"dap","date":"2013-10-07T15:49:21.779Z","type":"join"}
{"nick":"hz","date":"2013-10-07T15:49:35.780Z","type":"quit"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2013-10-07T15:53:03.300Z","type":"quit"}
{"nick":"amartens","date":"2013-10-07T15:55:58.625Z","type":"join"}
