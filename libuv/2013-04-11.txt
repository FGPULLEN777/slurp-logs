{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-04-11T00:00:01.360Z","type":"quit"}
{"nick":"ircretary","date":"2013-04-11T00:00:08.592Z","type":"join"}
{"nick":"tjfontaine","message":"ill-defined and ill-conceived? :)","date":"2013-04-11T00:00:14.743Z","type":"message"}
{"nick":"bnoordhuis","message":"probably :) it's a hobby project","date":"2013-04-11T00:00:27.571Z","type":"message"}
{"nick":"tjfontaine","message":"wc -l lib/_http_*","date":"2013-04-11T00:01:49.896Z","type":"message"}
{"nick":"tjfontaine","message":"     156 lib/_http_agent.js","date":"2013-04-11T00:01:50.048Z","type":"message"}
{"nick":"tjfontaine","message":"     548 lib/_http_client.js","date":"2013-04-11T00:01:50.177Z","type":"message"}
{"nick":"tjfontaine","message":"     231 lib/_http_common.js","date":"2013-04-11T00:01:50.178Z","type":"message"}
{"nick":"tjfontaine","message":"     176 lib/_http_incoming.js","date":"2013-04-11T00:01:52.545Z","type":"message"}
{"nick":"tjfontaine","message":"     645 lib/_http_outgoing.js","date":"2013-04-11T00:01:55.068Z","type":"message"}
{"nick":"tjfontaine","message":"     458 lib/_http_server.js","date":"2013-04-11T00:01:57.556Z","type":"message"}
{"nick":"tjfontaine","message":"    2214 total","date":"2013-04-11T00:02:00.073Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-04-11T00:02:09.787Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-04-11T00:02:29.151Z","type":"quit"}
{"nick":"brson","date":"2013-04-11T00:02:47.606Z","type":"join"}
{"nick":"loladiro","date":"2013-04-11T00:04:12.514Z","type":"join"}
{"nick":"isaacs","message":"mmalecki: 100% fine with this, in master.","date":"2013-04-11T00:06:50.863Z","type":"message"}
{"nick":"eris0xff","date":"2013-04-11T00:09:42.013Z","type":"join"}
{"nick":"mmalecki","message":"isaacs: the verifyError thing?","date":"2013-04-11T00:17:17.584Z","type":"message"}
{"nick":"tjfontaine","message":"that's how I interpreted it","date":"2013-04-11T00:18:06.796Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: yes","date":"2013-04-11T00:18:17.375Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: that's pretty slick","date":"2013-04-11T00:19:36.082Z","type":"message"}
{"nick":"tjfontaine","message":"dunno if it's of any use","date":"2013-04-11T00:20:00.345Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: don't worry about mucking up blame.","date":"2013-04-11T00:20:23.026Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: you'll just be blamed for http :)","date":"2013-04-11T00:20:28.003Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: but yes, internal modules are cached","date":"2013-04-11T00:20:39.060Z","type":"message"}
{"nick":"tjfontaine","message":"ok, I need to actually see if it is slower, or if I was just freaking out while watching it","date":"2013-04-11T00:21:13.271Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-04-11T00:22:00.917Z","type":"quit"}
{"nick":"eris0xff","message":"bnoordhuis: just after I do a uv_accept I need to initialize my session data structure and associate it with the new client socket (uv_tcp_t) so I can pull it up later.   Is there an accepted way to bind these?","date":"2013-04-11T00:22:03.874Z","type":"message"}
{"nick":"eris0xff","message":"I didnt see an unused field in uv_tcp_t ","date":"2013-04-11T00:23:07.632Z","type":"message"}
{"nick":"eris0xff","message":"maybe i missed it","date":"2013-04-11T00:23:16.420Z","type":"message"}
{"nick":"trevnorris","reason":"Quit: Leaving","date":"2013-04-11T00:27:36.191Z","type":"quit"}
{"nick":"bnoordhuis","message":"eris0xff: there's the data field","date":"2013-04-11T00:38:31.400Z","type":"message"}
{"nick":"eris0xff","message":"cool.","date":"2013-04-11T00:38:39.260Z","type":"message"}
{"nick":"eris0xff","message":"didn't know if that was reserved for something else","date":"2013-04-11T00:38:46.850Z","type":"message"}
{"nick":"bnoordhuis","message":"you can also embed the uv_tcp_t in a struct of your own and use container_of to look it up","date":"2013-04-11T00:38:51.210Z","type":"message"}
{"nick":"eris0xff","message":"so if I attach my session pointer to \"void *data\" in uv_tcp_t then it won't be overwritten by lib routines","date":"2013-04-11T00:40:57.918Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-04-11T00:44:19.271Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-04-11T01:01:44.143Z","type":"quit"}
{"nick":"brson","date":"2013-04-11T01:02:00.618Z","type":"join"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-04-11T01:13:05.348Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-04-11T01:29:56.911Z","type":"quit"}
{"nick":"abraxas","date":"2013-04-11T01:36:59.443Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 240 seconds","date":"2013-04-11T02:03:13.691Z","type":"quit"}
{"nick":"inolen","date":"2013-04-11T02:06:18.537Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-04-11T02:17:30.193Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-04-11T02:34:25.486Z","type":"quit"}
{"nick":"inolen","reason":"Ping timeout: 256 seconds","date":"2013-04-11T02:40:10.498Z","type":"quit"}
{"nick":"inolen","date":"2013-04-11T02:40:37.025Z","type":"join"}
{"nick":"inolen","reason":"Ping timeout: 256 seconds","date":"2013-04-11T02:49:39.708Z","type":"quit"}
{"nick":"inolen","date":"2013-04-11T02:50:50.500Z","type":"join"}
{"nick":"kevireilly","reason":"Remote host closed the connection","date":"2013-04-11T02:55:49.673Z","type":"quit"}
{"nick":"kevireilly","date":"2013-04-11T02:56:02.466Z","type":"join"}
{"nick":"loladiro","date":"2013-04-11T02:56:44.503Z","type":"join"}
{"nick":"TooTallNate","date":"2013-04-11T03:15:31.229Z","type":"join"}
{"nick":"dominictarr","date":"2013-04-11T03:58:44.224Z","type":"join"}
{"nick":"dominictarr","reason":"Client Quit","date":"2013-04-11T03:59:49.924Z","type":"quit"}
{"nick":"mmalecki","new_nick":"mmalecki[zzz]","date":"2013-04-11T04:25:47.548Z","type":"nick"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-04-11T04:29:56.458Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-04-11T04:35:13.374Z","type":"quit"}
{"nick":"abraxas","date":"2013-04-11T04:36:58.380Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-04-11T04:50:18.725Z","type":"quit"}
{"nick":"brson","date":"2013-04-11T05:18:06.270Z","type":"join"}
{"nick":"dpemmons","reason":"Ping timeout: 245 seconds","date":"2013-04-11T05:28:28.314Z","type":"quit"}
{"nick":"dpemmons","date":"2013-04-11T05:32:48.503Z","type":"join"}
{"nick":"kevireilly","reason":"\"Bye!\"","date":"2013-04-11T05:52:58.327Z","type":"part"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-04-11T06:05:27.986Z","type":"nick"}
{"nick":"trevnorris","date":"2013-04-11T06:28:34.612Z","type":"join"}
{"nick":"`3rdEden","date":"2013-04-11T06:30:42.621Z","type":"join"}
{"nick":"kuplatup1u","new_nick":"kuplatupsu","date":"2013-04-11T06:36:15.128Z","type":"nick"}
{"nick":"rendar","date":"2013-04-11T06:39:29.948Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-04-11T06:50:25.576Z","type":"quit"}
{"nick":"felixge","reason":"Quit: felixge","date":"2013-04-11T06:57:15.181Z","type":"quit"}
{"nick":"paddybyers","reason":"Read error: Connection reset by peer","date":"2013-04-11T07:07:28.448Z","type":"quit"}
{"nick":"paddybyers_","date":"2013-04-11T07:07:34.399Z","type":"join"}
{"nick":"loladiro","date":"2013-04-11T07:38:19.208Z","type":"join"}
{"nick":"mmalecki[zzz]","new_nick":"mmalecki","date":"2013-04-11T07:43:54.863Z","type":"nick"}
{"nick":"hz","date":"2013-04-11T07:53:24.425Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-04-11T08:01:07.703Z","type":"nick"}
{"nick":"brson","reason":"Ping timeout: 264 seconds","date":"2013-04-11T08:02:19.292Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-04-11T08:04:59.691Z","type":"quit"}
{"nick":"trevnorris","reason":"Quit: Leaving","date":"2013-04-11T08:45:45.968Z","type":"quit"}
{"nick":"dominictarr","date":"2013-04-11T08:49:09.083Z","type":"join"}
{"nick":"stagas","date":"2013-04-11T09:15:27.984Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-04-11T09:22:52.182Z","type":"quit"}
{"nick":"dominictarr","date":"2013-04-11T09:33:00.728Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-04-11T09:40:21.545Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 260 seconds","date":"2013-04-11T09:47:27.861Z","type":"quit"}
{"nick":"abraxas","date":"2013-04-11T09:50:28.172Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 245 seconds","date":"2013-04-11T09:56:39.965Z","type":"quit"}
{"nick":"abraxas","date":"2013-04-11T09:57:07.249Z","type":"join"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-04-11T09:59:51.308Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-04-11T10:02:30.482Z","type":"join"}
{"nick":"mmalecki","new_nick":"mmalecki[out]","date":"2013-04-11T10:03:17.880Z","type":"nick"}
{"nick":"csaoh","date":"2013-04-11T10:07:40.893Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-04-11T10:08:07.320Z","type":"quit"}
{"nick":"piscisaureus_","message":"bnoordhuis: bennetje","date":"2013-04-11T10:16:13.847Z","type":"message"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-04-11T10:20:06.568Z","type":"quit"}
{"nick":"csaoh","date":"2013-04-11T10:24:15.379Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: bertje","date":"2013-04-11T10:35:56.910Z","type":"message"}
{"nick":"piscisaureus_","new_nick":"piscisaureus","date":"2013-04-11T10:36:06.080Z","type":"nick"}
{"nick":"piscisaureus","message":"bnoordhuis: coming to 020 today?","date":"2013-04-11T10:36:16.381Z","type":"message"}
{"nick":"bnoordhuis","message":"i must be. it's in my calendar","date":"2013-04-11T10:36:32.849Z","type":"message"}
{"nick":"piscisaureus","message":"calendar life","date":"2013-04-11T10:36:45.112Z","type":"message"}
{"nick":"piscisaureus","message":"saghul: you still in for today?","date":"2013-04-11T10:36:56.504Z","type":"message"}
{"nick":"saghul","message":"piscisaureus sure!","date":"2013-04-11T10:37:49.715Z","type":"message"}
{"nick":"piscisaureus","message":"saghul: let's exchange phone numbers","date":"2013-04-11T10:41:02.975Z","type":"message"}
{"nick":"piscisaureus","message":"in private :)","date":"2013-04-11T10:41:26.553Z","type":"message"}
{"nick":"saghul","message":";-)","date":"2013-04-11T10:42:07.263Z","type":"message"}
{"nick":"piscisaureus","reason":"Read error: No route to host","date":"2013-04-11T11:03:53.560Z","type":"quit"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-04-11T11:09:29.912Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Trevor Norris\u000f \u00037master\u000f * \u0002f83afd3\u0002 : src: get rid of compiler warning  Removed the following compiler warning  (+4 more commits) - http://git.io/3kIxcQ","date":"2013-04-11T11:09:52.161Z","type":"message"}
{"nick":"abraxas","date":"2013-04-11T11:10:35.553Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-04-11T11:11:58.653Z","type":"quit"}
{"nick":"safdas","date":"2013-04-11T11:22:32.264Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #146 \u00037UNSTABLE\u000f windows-x64 (6/575) linux-x64 (1/575) windows-ia32 (7/575) smartos-ia32 (3/575) smartos-x64 (3/575) http://jenkins.nodejs.org/job/nodejs-master/146/","date":"2013-04-11T11:26:54.129Z","type":"message"}
{"nick":"sgallagh","date":"2013-04-11T11:33:25.076Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u0002dbbfbe7\u0002 : cluster: fix O(n*m) scan of cmd string  Don't scan the whole string for a - http://git.io/5FRgfw","date":"2013-04-11T11:43:31.219Z","type":"message"}
{"nick":"bnoordhuis","message":"^ that should have been caught during review :-/","date":"2013-04-11T11:44:43.001Z","type":"message"}
{"nick":"bnoordhuis","message":"hm, according to git grep, that's not the only place where we're doing that...","date":"2013-04-11T11:46:05.165Z","type":"message"}
{"nick":"mmalecki[out]","new_nick":"mmalecki","date":"2013-04-11T11:46:32.367Z","type":"nick"}
{"nick":"mikeal","date":"2013-04-11T11:47:11.081Z","type":"join"}
{"nick":"`3rdEden","reason":"Remote host closed the connection","date":"2013-04-11T11:50:51.102Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u0002212eb8a\u0002 : child_process: fix O(n*m) scan of cmd string  Don't scan the whole string - http://git.io/FxRHMQ","date":"2013-04-11T11:54:47.857Z","type":"message"}
{"nick":"`3rdEden","date":"2013-04-11T11:55:02.608Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-04-11T11:59:43.606Z","type":"join"}
{"nick":"piscisaureus_","message":"back","date":"2013-04-11T11:59:52.096Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #128 \u00037UNSTABLE\u000f windows-x64 (7/575) windows-ia32 (5/575) http://jenkins.nodejs.org/job/nodejs-v0.10/128/","date":"2013-04-11T12:00:50.230Z","type":"message"}
{"nick":"csaoh","message":"hello ! I don't know if this is an appropriate place for this question, since it's about http-parser but i guess i can give it a try… i'm trying to use a php port of http_parser_execute, and I realized I couldn't parse headers from a request unless it's been completely sent. For instance, if I send a request with Content-Length set to 5096, but with only 4096 bytes in the body (assuming the rest will be sent later), is there a w","date":"2013-04-11T12:03:43.113Z","type":"message"}
{"nick":"csaoh","message":"to parse the headers anyway ?","date":"2013-04-11T12:03:43.757Z","type":"message"}
{"nick":"hz","date":"2013-04-11T12:04:36.730Z","type":"quit"}
{"nick":"bnoordhuis","message":"csaoh: well, the headers will have been parsed. http-parser doesn't buffer anything, it emits parsed header names/values immediately","date":"2013-04-11T12:12:35.395Z","type":"message"}
{"nick":"bnoordhuis","message":"it's probably the php port that is holding them back","date":"2013-04-11T12:12:45.123Z","type":"message"}
{"nick":"csaoh","message":"that must be it then, since i don't get any results unless all of the data is here","date":"2013-04-11T12:13:05.781Z","type":"message"}
{"nick":"csaoh","message":"thanks","date":"2013-04-11T12:13:06.941Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #129 \u00037UNSTABLE\u000f windows-x64 (5/575) windows-ia32 (6/575) http://jenkins.nodejs.org/job/nodejs-v0.10/129/","date":"2013-04-11T12:17:46.310Z","type":"message"}
{"nick":"aledbf","date":"2013-04-11T12:39:32.033Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 252 seconds","date":"2013-04-11T12:43:32.486Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-04-11T12:49:12.880Z","type":"join"}
{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2013-04-11T12:52:27.117Z","type":"quit"}
{"nick":"mikeal1","date":"2013-04-11T12:52:36.213Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-04-11T12:52:54.121Z","type":"join"}
{"nick":"mikeal1","reason":"Client Quit","date":"2013-04-11T12:53:52.196Z","type":"quit"}
{"nick":"c4milo","date":"2013-04-11T12:55:55.337Z","type":"join"}
{"nick":"mmalecki","reason":"Quit: leaving","date":"2013-04-11T12:59:31.723Z","type":"quit"}
{"nick":"aledbf","reason":"Quit: aledbf","date":"2013-04-11T12:59:53.496Z","type":"quit"}
{"nick":"aledbf","date":"2013-04-11T13:00:13.666Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: when are you taking the train?","date":"2013-04-11T13:17:36.744Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: five-ish","date":"2013-04-11T13:33:21.863Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll be in 020 around 1800, i think","date":"2013-04-11T13:33:41.062Z","type":"message"}
{"nick":"bnoordhuis","message":"want to meet up in that pub near the train station?","date":"2013-04-11T13:35:00.722Z","type":"message"}
{"nick":"inolen","reason":"Ping timeout: 256 seconds","date":"2013-04-11T13:35:14.542Z","type":"quit"}
{"nick":"inolen","date":"2013-04-11T13:35:55.774Z","type":"join"}
{"nick":"bnoordhuis","message":"also, http://www.nrc.nl/carriere/2013/04/11/zweedse-lingerieverkoopsters-hoeven-hun-cupmaat-niet-op-naamplaatje/","date":"2013-04-11T13:40:42.014Z","type":"message"}
{"nick":"bnoordhuis","message":"my first 'wat?' moment of the day","date":"2013-04-11T13:40:51.399Z","type":"message"}
{"nick":"bnoordhuis","message":"'wat?' both in dutch and english","date":"2013-04-11T13:41:20.357Z","type":"message"}
{"nick":"safdas","reason":"Ping timeout: 245 seconds","date":"2013-04-11T13:45:03.027Z","type":"quit"}
{"nick":"saghul","message":"bnoordhuis are you riving at CS station?","date":"2013-04-11T13:59:26.811Z","type":"message"}
{"nick":"bnoordhuis","message":"saghul: yep","date":"2013-04-11T14:04:59.228Z","type":"message"}
{"nick":"saghul","message":"bnoordhuis I also need to go there to take the tram, what time does your train arrive?","date":"2013-04-11T14:05:35.153Z","type":"message"}
{"nick":"bnoordhuis","message":"saghul: 17.52 if ns.nl is to be believed","date":"2013-04-11T14:06:38.504Z","type":"message"}
{"nick":"saghul","message":"bnoordhuis ok, lets meet outside of the main entrance, then we go get the tram to meet bert","date":"2013-04-11T14:07:28.827Z","type":"message"}
{"nick":"aledbf","reason":"Ping timeout: 255 seconds","date":"2013-04-11T14:07:41.455Z","type":"quit"}
{"nick":"bnoordhuis","message":"saghul: yeah, but where is bert?","date":"2013-04-11T14:08:33.893Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: wake up!","date":"2013-04-11T14:08:42.303Z","type":"message"}
{"nick":"piscisaureus_","message":"hello","date":"2013-04-11T14:08:53.485Z","type":"message"}
{"nick":"piscisaureus_","message":"I'm here","date":"2013-04-11T14:08:54.854Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: what's the plan?","date":"2013-04-11T14:09:08.976Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: The plan was to go to brecht.","date":"2013-04-11T14:09:20.810Z","type":"message"}
{"nick":"bnoordhuis","message":"brecht?","date":"2013-04-11T14:09:29.649Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but if you and saghul are both at CS then maybe it's easier if I come your way :)","date":"2013-04-11T14:09:40.695Z","type":"message"}
{"nick":"bnoordhuis","message":"agreed :)","date":"2013-04-11T14:09:52.129Z","type":"message"}
{"nick":"saghul","message":"heh","date":"2013-04-11T14:09:59.691Z","type":"message"}
{"nick":"bnoordhuis","message":"saghul: there's this okay pub near CS. i'll walk you there. bert knows where it is","date":"2013-04-11T14:10:29.522Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: which one? dwaze zaken?","date":"2013-04-11T14:10:43.990Z","type":"message"}
{"nick":"saghul","message":"bnoordhuis ack","date":"2013-04-11T14:10:51.990Z","type":"message"}
{"nick":"bnoordhuis","message":"the one in the white building, near the road","date":"2013-04-11T14:10:57.190Z","type":"message"}
{"nick":"piscisaureus_","message":"yeah that's dwaze zaken","date":"2013-04-11T14:11:03.444Z","type":"message"}
{"nick":"piscisaureus_","message":"ok how late?","date":"2013-04-11T14:11:06.101Z","type":"message"}
{"nick":"bnoordhuis","message":"six-ish?","date":"2013-04-11T14:11:10.218Z","type":"message"}
{"nick":"piscisaureus_","message":"ok","date":"2013-04-11T14:11:21.402Z","type":"message"}
{"nick":"bnoordhuis","message":"as long as there's beer, i don't mind if you're a little late","date":"2013-04-11T14:11:33.501Z","type":"message"}
{"nick":"aledbf","date":"2013-04-11T14:14:15.009Z","type":"join"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-04-11T14:14:18.047Z","type":"quit"}
{"nick":"bnoordhuis","reason":"*.net *.split","date":"2013-04-11T14:17:01.399Z","type":"quit"}
{"nick":"sgallagh","reason":"*.net *.split","date":"2013-04-11T14:17:01.400Z","type":"quit"}
{"nick":"txdv","reason":"*.net *.split","date":"2013-04-11T14:17:01.659Z","type":"quit"}
{"nick":"wolfeidau","reason":"*.net *.split","date":"2013-04-11T14:17:01.659Z","type":"quit"}
{"nick":"dscape","reason":"*.net *.split","date":"2013-04-11T14:17:01.928Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-04-11T14:19:01.418Z","type":"join"}
{"nick":"sgallagh","date":"2013-04-11T14:19:01.551Z","type":"join"}
{"nick":"txdv","date":"2013-04-11T14:19:01.551Z","type":"join"}
{"nick":"wolfeidau","date":"2013-04-11T14:19:01.552Z","type":"join"}
{"nick":"dscape","date":"2013-04-11T14:19:01.552Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-04-11T14:20:25.032Z","type":"quit"}
{"nick":"bnoordhuis","message":"saghul: did you get my last message?","date":"2013-04-11T14:24:33.278Z","type":"message"}
{"nick":"bnoordhuis","message":"(\"what last message?\")","date":"2013-04-11T14:24:46.839Z","type":"message"}
{"nick":"saghul","message":"yep, 17:52","date":"2013-04-11T14:24:52.579Z","type":"message"}
{"nick":"saghul","message":"main entrance, right?","date":"2013-04-11T14:25:04.374Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, but","date":"2013-04-11T14:25:13.889Z","type":"message"}
{"nick":"bnoordhuis","message":"saghul: we can meet up in dwaze zaken. saves having to wait outside in the rain","date":"2013-04-11T14:25:16.857Z","type":"message"}
{"nick":"bnoordhuis","message":"^ that last message :)","date":"2013-04-11T14:25:20.824Z","type":"message"}
{"nick":"saghul","message":"sure","date":"2013-04-11T14:25:36.967Z","type":"message"}
{"nick":"saghul","action":"checks map","date":"2013-04-11T14:25:43.261Z","type":"action"}
{"nick":"bnoordhuis","message":"okay, i'm off. bert has my number if you need it (i always forget mine)","date":"2013-04-11T14:27:56.595Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-04-11T14:32:36.008Z","type":"quit"}
{"nick":"`3rdEden","new_nick":"`3E|GONER","date":"2013-04-11T14:55:35.712Z","type":"nick"}
{"nick":"erickt_","date":"2013-04-11T15:22:29.947Z","type":"join"}
{"nick":"erickt_","reason":"Client Quit","date":"2013-04-11T15:22:30.025Z","type":"quit"}
{"nick":"isaacs","message":"good morning","date":"2013-04-11T15:32:18.628Z","type":"message"}
{"nick":"isaacs","message":"about to start v0.10.4","date":"2013-04-11T15:32:34.629Z","type":"message"}
{"nick":"dominictarr","date":"2013-04-11T15:46:24.057Z","type":"join"}
{"nick":"`3E|GONER","reason":"Remote host closed the connection","date":"2013-04-11T15:47:26.119Z","type":"quit"}
{"nick":"piscisaureus_","message":"isaacs: should I make a libuv release?","date":"2013-04-11T15:48:16.509Z","type":"message"}
{"nick":"piscisaureus_","message":"there's a bunch of patches applied","date":"2013-04-11T15:48:29.834Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: you can also practice it yourself if you want to","date":"2013-04-11T15:48:45.127Z","type":"message"}
{"nick":"piscisaureus_","message":"(but that means you'll have to write the changelog)","date":"2013-04-11T15:48:54.349Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: yes! are you free fora few minutes to show me how to do it?","date":"2013-04-11T15:49:00.988Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: only a few minuts. But let's go!","date":"2013-04-11T15:49:09.756Z","type":"message"}
{"nick":"isaacs","message":"great!","date":"2013-04-11T15:49:18.379Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: ok, you'll need an up-to-date libuv clone that has all the tags","date":"2013-04-11T15:49:43.823Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: also clone https://github.com/piscisaureus/libuv-release-tool","date":"2013-04-11T15:49:46.734Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: in the libuv clone, check out the v0.10 branch","date":"2013-04-11T15:50:10.757Z","type":"message"}
{"nick":"isaacs","message":"k","date":"2013-04-11T15:50:24.736Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: tell me when you have that","date":"2013-04-11T15:50:55.363Z","type":"message"}
{"nick":"isaacs","message":"have that","date":"2013-04-11T15:51:04.436Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: ok.","date":"2013-04-11T15:51:10.694Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: ok. go to the libuv tool dir and run './release.js --dir=/path/to/libuv'","date":"2013-04-11T15:51:57.000Z","type":"message"}
{"nick":"piscisaureus_","message":"and be sure that you checkout out v0.10 :)","date":"2013-04-11T15:52:04.783Z","type":"message"}
{"nick":"isaacs","message":"cool! it did stuff","date":"2013-04-11T15:52:27.851Z","type":"message"}
{"nick":"isaacs","message":"https://gist.github.com/5364568","date":"2013-04-11T15:52:28.159Z","type":"message"}
{"nick":"isaacs","message":"looks like it removed one of mscdex's email addresses?","date":"2013-04-11T15:53:01.608Z","type":"message"}
{"nick":"isaacs","message":"oh, no, it just added a new line","date":"2013-04-11T15:53:33.405Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: that looks good, probably mscdex shows up as \"mscdex <mscdex@mscdex.net>\" in the git log","date":"2013-04-11T15:54:22.833Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: so it fixed that","date":"2013-04-11T15:54:25.595Z","type":"message"}
{"nick":"isaacs","message":"k","date":"2013-04-11T15:54:43.914Z","type":"message"}
{"nick":"isaacs","message":"--continue?","date":"2013-04-11T15:54:54.104Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: so just --continue yeah","date":"2013-04-11T15:54:59.224Z","type":"message"}
{"nick":"isaacs","message":"hmm... i think my git is not gitty enough","date":"2013-04-11T15:55:14.724Z","type":"message"}
{"nick":"isaacs","message":"https://gist.github.com/5364600","date":"2013-04-11T15:55:15.299Z","type":"message"}
{"nick":"piscisaureus_","message":"it's too old ...","date":"2013-04-11T15:55:25.109Z","type":"message"}
{"nick":"isaacs","message":"$ git --version","date":"2013-04-11T15:55:32.706Z","type":"message"}
{"nick":"isaacs","message":"git version 1.7.5.4","date":"2013-04-11T15:55:32.903Z","type":"message"}
{"nick":"isaacs","message":"uh oh","date":"2013-04-11T15:55:39.471Z","type":"message"}
{"nick":"isaacs","message":"installing 1.8.2 now","date":"2013-04-11T15:55:55.611Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: kewl","date":"2013-04-11T15:55:59.034Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: it aborted...","date":"2013-04-11T15:56:02.975Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: you probably have to git reset --hard libuv before trying again","date":"2013-04-11T15:56:20.574Z","type":"message"}
{"nick":"isaacs","message":"kk","date":"2013-04-11T15:56:26.962Z","type":"message"}
{"nick":"piscisaureus_","message":"(aborting doesn't roll back the git tree state)","date":"2013-04-11T15:56:29.475Z","type":"message"}
{"nick":"isaacs","message":"dude...","date":"2013-04-11T15:57:11.652Z","type":"message"}
{"nick":"isaacs","message":"this is nice!","date":"2013-04-11T15:57:13.108Z","type":"message"}
{"nick":"isaacs","message":"https://gist.github.com/5364627","date":"2013-04-11T15:57:32.264Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: yup, you can edit stuff in there","date":"2013-04-11T15:57:48.386Z","type":"message"}
{"nick":"isaacs","message":"remove the \"now working\" bit, i take it?","date":"2013-04-11T15:57:52.642Z","type":"message"}
{"nick":"piscisaureus_","message":"oh, that should have been filtered out, weird that it didn't happen","date":"2013-04-11T15:58:03.675Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: but yeah it has to go","date":"2013-04-11T15:58:07.811Z","type":"message"}
{"nick":"isaacs","message":"you can probably omit the \"Changes since version 0.10.3:","date":"2013-04-11T15:58:44.281Z","type":"message"}
{"nick":"isaacs","message":"kind of implied","date":"2013-04-11T15:58:47.533Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well, yeah, just stick to the template :)","date":"2013-04-11T15:59:04.473Z","type":"message"}
{"nick":"isaacs","message":"kk","date":"2013-04-11T15:59:19.081Z","type":"message"}
{"nick":"isaacs","message":"look good? https://gist.github.com/5364645","date":"2013-04-11T15:59:29.445Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: I'm considering making it more aware of merges","date":"2013-04-11T15:59:31.462Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: it's acceptable and I am in a hurry, so just push on with it :)","date":"2013-04-11T15:59:56.967Z","type":"message"}
{"nick":"isaacs","message":"kk","date":"2013-04-11T16:00:02.091Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: I think myself I would redact it a little more because often these commit messages are not very meaningful for a bystander","date":"2013-04-11T16:00:31.869Z","type":"message"}
{"nick":"isaacs","message":"* 5ed1d02 isaacs (HEAD, v0.10) Now working on v0.10.5 (18 seconds ago)","date":"2013-04-11T16:00:35.323Z","type":"message"}
{"nick":"isaacs","message":"* 85827e2 isaacs (v0.10.4) 2013.04.12, Version 0.10.4 (Stable) (22 seconds ago","date":"2013-04-11T16:00:35.920Z","type":"message"}
{"nick":"isaacs","message":"pushing!","date":"2013-04-11T16:00:52.250Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033isaacs\u000f created tag v0.10.4 - http://git.io/bzEOXg","date":"2013-04-11T16:01:04.570Z","type":"message"}
{"nick":"isaacs","message":"kapow","date":"2013-04-11T16:01:05.771Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u00025ed1d02\u0002 : Now working on v0.10.5 (+1 more commits) - http://git.io/jaiDtQ","date":"2013-04-11T16:01:06.515Z","type":"message"}
{"nick":"isaacs","message":"that was easy","date":"2013-04-11T16:01:08.490Z","type":"message"}
{"nick":"TooTallNate","date":"2013-04-11T16:01:10.401Z","type":"join"}
{"nick":"isaacs","message":"let's stop releasing binaries.  they're too much trouble.","date":"2013-04-11T16:01:20.991Z","type":"message"}
{"nick":"tjfontaine","message":"amen.","date":"2013-04-11T16:01:29.152Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: didn't upload the tarball though...","date":"2013-04-11T16:01:30.060Z","type":"message"}
{"nick":"isaacs","message":"and the website.  just redirect to the github download page.","date":"2013-04-11T16:01:30.260Z","type":"message"}
{"nick":"isaacs","message":"right!  where do i send that?","date":"2013-04-11T16:01:37.342Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well it should be automatic (it should say \"...uploadTarBall\")","date":"2013-04-11T16:01:54.159Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: but I think you don't have your ssh key installed where it should be","date":"2013-04-11T16:02:16.305Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: I can fix this up manually though, don't worry for now","date":"2013-04-11T16:02:25.882Z","type":"message"}
{"nick":"isaacs","message":"https://gist.github.com/5364666","date":"2013-04-11T16:02:40.779Z","type":"message"}
{"nick":"isaacs","message":"i don't see it trying any tarball stuff","date":"2013-04-11T16:02:56.240Z","type":"message"}
{"nick":"isaacs","message":"my ssh key is on the agent, should work fine","date":"2013-04-11T16:03:07.369Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10\u0002: #33 \u00034FAILURE\u000f smartos (4/186) http://jenkins.nodejs.org/job/libuv-v0.10/33/","date":"2013-04-11T16:03:08.613Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: after review you --continue'd right? Or it wouldn't have uploaded the tag","date":"2013-04-11T16:03:17.412Z","type":"message"}
{"nick":"piscisaureus_","message":"what did it print then?","date":"2013-04-11T16:03:22.600Z","type":"message"}
{"nick":"isaacs","message":"ohhhh...","date":"2013-04-11T16:03:28.071Z","type":"message"}
{"nick":"isaacs","message":"i pushed the tag myself","date":"2013-04-11T16:03:30.228Z","type":"message"}
{"nick":"isaacs","message":"i didn't --continue again","date":"2013-04-11T16:03:32.429Z","type":"message"}
{"nick":"piscisaureus_","message":"aah","date":"2013-04-11T16:03:32.560Z","type":"message"}
{"nick":"isaacs","message":"thought it was done","date":"2013-04-11T16:03:34.376Z","type":"message"}
{"nick":"piscisaureus_","message":"just run --continue once more :)","date":"2013-04-11T16:03:38.414Z","type":"message"}
{"nick":"isaacs","message":"k, i'll kill hte tag and --continue it","date":"2013-04-11T16:03:40.698Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well don't delete the local tag, just remove the upstream one","date":"2013-04-11T16:03:57.508Z","type":"message"}
{"nick":"tjfontaine","message":"er did someone abort a build, or did windows decide to do that for me","date":"2013-04-11T16:04:02.863Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-04-11T16:04:13.348Z","type":"message"}
{"nick":"isaacs","message":"we're done!","date":"2013-04-11T16:04:17.438Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: yup, it's there: http://libuv.org/dist/","date":"2013-04-11T16:04:34.650Z","type":"message"}
{"nick":"isaacs","message":"i <3 that website, btw.","date":"2013-04-11T16:04:44.278Z","type":"message"}
{"nick":"isaacs","message":"http://libuv.org/","date":"2013-04-11T16:04:45.102Z","type":"message"}
{"nick":"isaacs","message":"so clean!  such wonderful use of white space!","date":"2013-04-11T16:04:53.876Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: but, nice automation eh? :)","date":"2013-04-11T16:05:12.301Z","type":"message"}
{"nick":"isaacs","message":"yah, i like it","date":"2013-04-11T16:05:17.127Z","type":"message"}
{"nick":"isaacs","message":"we need to do that for node.","date":"2013-04-11T16:05:21.177Z","type":"message"}
{"nick":"isaacs","message":"but it has to build binaries on all the different os's","date":"2013-04-11T16:05:35.245Z","type":"message"}
{"nick":"piscisaureus_","message":"good luck with that :)","date":"2013-04-11T16:05:59.503Z","type":"message"}
{"nick":"piscisaureus_","message":"I have to run now, Ben and saghul are probably waiting for me","date":"2013-04-11T16:06:08.568Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: have a good night","date":"2013-04-11T16:06:14.535Z","type":"message"}
{"nick":"isaacs","message":"thanks!!","date":"2013-04-11T16:06:24.747Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10\u0002: #34 \u00037UNSTABLE\u000f smartos (4/186) linux (2/186) osx (2/186) windows (7/187) http://jenkins.nodejs.org/job/libuv-v0.10/34/","date":"2013-04-11T16:06:43.884Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u0002e5fdc4d\u0002 : uv: Upgrade to v0.10.4 - http://git.io/YuACfA","date":"2013-04-11T16:07:36.054Z","type":"message"}
{"nick":"bradleymeck","date":"2013-04-11T16:07:53.399Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 256 seconds","date":"2013-04-11T16:11:04.530Z","type":"quit"}
{"nick":"paddybyers_","reason":"Ping timeout: 255 seconds","date":"2013-04-11T16:15:56.537Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u00021ccae9c\u0002 : npm: Upgrade to 1.2.18 - http://git.io/jIBOog","date":"2013-04-11T16:18:08.619Z","type":"message"}
{"nick":"brson","date":"2013-04-11T16:25:24.849Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #130 \u00037UNSTABLE\u000f osx-x64 (1/575) linux-x64 (2/575) smartos-x64 (43/575) windows-x64 (65/575) windows-ia32 (5/575) http://jenkins.nodejs.org/job/nodejs-v0.10/130/","date":"2013-04-11T16:27:23.228Z","type":"message"}
{"nick":"isaacs","message":"whoa...","date":"2013-04-11T16:27:53.801Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #15 \u00037UNSTABLE\u000f smartos-x64 (1/575) smartos-ia32 (54/575) linux-ia32 (1/575) windows-ia32 (73/575) osx-ia32 (1/575) linux-x64 (1/575) windows-x64 (5/575) http://jenkins.nodejs.org/job/libuv-node-integration/15/","date":"2013-04-11T16:27:56.254Z","type":"message"}
{"nick":"isaacs","message":"43 failures on smartos?","date":"2013-04-11T16:28:00.930Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: weird, getting ADDRINUSE on that one","date":"2013-04-11T16:29:35.503Z","type":"message"}
{"nick":"tjfontaine","message":"are you also building on samrtos-drone at the moment?","date":"2013-04-11T16:29:54.373Z","type":"message"}
{"nick":"isaacs","message":"no","date":"2013-04-11T16:30:00.542Z","type":"message"}
{"nick":"isaacs","message":"but i was about to start :)","date":"2013-04-11T16:30:08.514Z","type":"message"}
{"nick":"tjfontaine","message":"windows also had a lot of failures","date":"2013-04-11T16:31:36.783Z","type":"message"}
{"nick":"tjfontaine","message":"so two jobs running at once it would seem, probably a collision with the libuv-node-integration job --- though it shouldn't have","date":"2013-04-11T16:31:57.726Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-04-11T16:33:20.154Z","type":"quit"}
{"nick":"indexzero","date":"2013-04-11T16:34:12.571Z","type":"join"}
{"nick":"tjfontaine","message":"oh damn","date":"2013-04-11T16:34:52.057Z","type":"message"}
{"nick":"stagas","date":"2013-04-11T16:36:07.440Z","type":"join"}
{"nick":"paddybyers","date":"2013-04-11T16:37:47.429Z","type":"join"}
{"nick":"isaacs","message":"hm","date":"2013-04-11T16:38:26.686Z","type":"message"}
{"nick":"isaacs","message":"that makes sense","date":"2013-04-11T16:38:28.374Z","type":"message"}
{"nick":"isaacs","message":"ok, i'm moving forward with the build","date":"2013-04-11T16:38:34.206Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-04-11T16:38:52.459Z","type":"quit"}
{"nick":"tjfontaine","message":"btw scrum","date":"2013-04-11T16:39:00.546Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f created branch v0.10.4-release - http://git.io/7O5nXw","date":"2013-04-11T16:39:30.782Z","type":"message"}
{"nick":"benoitc","date":"2013-04-11T16:41:57.508Z","type":"join"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-04-11T16:43:46.647Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #131 \u00037UNSTABLE\u000f linux-x64 (1/575) windows-x64 (5/575) windows-ia32 (5/575) http://jenkins.nodejs.org/job/nodejs-v0.10/131/","date":"2013-04-11T16:44:29.223Z","type":"message"}
{"nick":"dominictarr","date":"2013-04-11T16:55:57.722Z","type":"join"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-04-11T17:00:26.176Z","type":"quit"}
{"nick":"loladiro","date":"2013-04-11T17:09:32.312Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-04-11T17:23:02.071Z","type":"quit"}
{"nick":"trevnorris","date":"2013-04-11T17:25:14.213Z","type":"join"}
{"nick":"trevnorris","message":"good morning-ish","date":"2013-04-11T17:26:43.702Z","type":"message"}
{"nick":"inolen","date":"2013-04-11T17:27:51.696Z","type":"join"}
{"nick":"`3rdEden","date":"2013-04-11T17:28:11.602Z","type":"join"}
{"nick":"eris0xff","reason":"Ping timeout: 245 seconds","date":"2013-04-11T17:34:38.172Z","type":"quit"}
{"nick":"trevnorris","message":"TooTallNate, tjfontaine: api architecture question: say I have \"Alloc(char* data, uint32_t length)\" that will use the data passed, is it overkill to create \"Alloc(const char* data, uint32_t length)\" that will copy the data?","date":"2013-04-11T17:37:09.699Z","type":"message"}
{"nick":"tjfontaine","message":"hmm can you overload with const semantics?","date":"2013-04-11T17:40:18.475Z","type":"message"}
{"nick":"trevnorris","message":"yeah.","date":"2013-04-11T17:40:24.505Z","type":"message"}
{"nick":"trevnorris","message":"apperently. it compiles and works. =)","date":"2013-04-11T17:40:41.189Z","type":"message"}
{"nick":"TooTallNate","message":"i was wondering the same thing haha","date":"2013-04-11T17:41:04.177Z","type":"message"}
{"nick":"tjfontaine","message":"I'm not sure which you would get","date":"2013-04-11T17:41:12.971Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: i would ask one of the C guys like ben or bert if that's conventional in C or not","date":"2013-04-11T17:41:25.739Z","type":"message"}
{"nick":"tjfontaine","message":"if you pass plain old char* to const char* I would presume adding constyness is ok","date":"2013-04-11T17:41:39.157Z","type":"message"}
{"nick":"tjfontaine","message":"but in the case where you have two signatures in c++ I would expect you get the one that matches your type the most","date":"2013-04-11T17:42:01.779Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: good idea.","date":"2013-04-11T17:42:08.549Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: personally i'd probably just do a Copy(const char* data, uint32_t length) function instead","date":"2013-04-11T17:42:12.915Z","type":"message"}
{"nick":"TooTallNate","message":"more explicit that way","date":"2013-04-11T17:42:18.040Z","type":"message"}
{"nick":"tjfontaine","message":"yes, explicit > implicit in this case","date":"2013-04-11T17:42:24.003Z","type":"message"}
{"nick":"trevnorris","message":"ah yeah. good old rule.","date":"2013-04-11T17:42:35.619Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: just about to wrap up the api for the allocator. when I'm done mind giving feedback on the usefulness for module creators?","date":"2013-04-11T17:51:52.710Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: ya for sure","date":"2013-04-11T17:52:27.165Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: are all existing native modules going to break basically?","date":"2013-04-11T17:52:52.276Z","type":"message"}
{"nick":"isaacs","message":"making tests one more time","date":"2013-04-11T17:53:07.965Z","type":"message"}
{"nick":"isaacs","message":"then 10.4","date":"2013-04-11T17:53:32.404Z","type":"message"}
{"nick":"isaacs","message":"it's amazing how people have switched to saying \"version 10\" in conversation","date":"2013-04-11T17:53:47.052Z","type":"message"}
{"nick":"isaacs","message":"i hear it a lot now","date":"2013-04-11T17:53:49.930Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: so can't throw in one more little itty bitty commit?","date":"2013-04-11T17:53:51.869Z","type":"message"}
{"nick":"isaacs","message":"nope","date":"2013-04-11T17:53:55.665Z","type":"message"}
{"nick":"isaacs","message":"10.5!!","date":"2013-04-11T17:53:58.170Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: that's cool. it just gets rid of a compiler warning. nothing big.","date":"2013-04-11T17:54:16.683Z","type":"message"}
{"nick":"isaacs","message":"there will be another next week (or maybe early the week after, TxJS)","date":"2013-04-11T17:54:17.548Z","type":"message"}
{"nick":"isaacs","message":"k","date":"2013-04-11T17:54:19.789Z","type":"message"}
{"nick":"isaacs","message":"binaries are already built and uploaded.","date":"2013-04-11T17:54:28.659Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: I think I'll be able to replicate all current Buffer functionality. going for full backwards compatibility.","date":"2013-04-11T17:55:03.585Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: sounds good","date":"2013-04-11T17:55:42.908Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f created tag v0.10.4 - http://git.io/OCGCbQ","date":"2013-04-11T18:01:12.945Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u000222c7d13\u0002 : lint (+1 more commits) - http://git.io/JYeYtg","date":"2013-04-11T18:06:36.042Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u0002440bc06\u0002 : Now working on v0.10.5 (+2 more commits) - http://git.io/z8OeXA","date":"2013-04-11T18:07:20.114Z","type":"message"}
{"nick":"hz","date":"2013-04-11T18:10:38.444Z","type":"join"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-04-11T18:19:03.803Z","type":"quit"}
{"nick":"hz","date":"2013-04-11T18:19:06.403Z","type":"join"}
{"nick":"qmx","new_nick":"qmx|lunch","date":"2013-04-11T18:19:18.039Z","type":"nick"}
{"nick":"trevnorris","message":"TooTallNate: here's the branch w/ the basics: https://github.com/trevnorris/node/compare/buffer-buffet-revamp","date":"2013-04-11T18:19:41.682Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: what's buffet?","date":"2013-04-11T18:19:59.919Z","type":"message"}
{"nick":"trevnorris","message":"the cc api is in node_smalloc.h, and you can see examples of the js api in test-smalloc.js","date":"2013-04-11T18:20:15.688Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: http://en.wikipedia.org/wiki/Buffet","date":"2013-04-11T18:20:30.329Z","type":"message"}
{"nick":"TooTallNate","message":"oh right","date":"2013-04-11T18:20:49.205Z","type":"message"}
{"nick":"TooTallNate","message":"hahah","date":"2013-04-11T18:20:49.984Z","type":"message"}
{"nick":"trevnorris","message":"strange branch names are one of my few creative outlets. ;-)","date":"2013-04-11T18:20:55.516Z","type":"message"}
{"nick":"TooTallNate","message":"haha","date":"2013-04-11T18:21:05.542Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #132 \u00037UNSTABLE\u000f osx-x64 (1/575) windows-x64 (5/575) windows-ia32 (7/575) http://jenkins.nodejs.org/job/nodejs-v0.10/132/","date":"2013-04-11T18:24:22.167Z","type":"message"}
{"nick":"joshthecoder","reason":"Excess Flood","date":"2013-04-11T18:26:37.427Z","type":"quit"}
{"nick":"joshthecoder","date":"2013-04-11T18:26:43.452Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-04-11T18:28:29.580Z","type":"quit"}
{"nick":"dap","date":"2013-04-11T18:34:11.103Z","type":"join"}
{"nick":"luigy","reason":"Ping timeout: 246 seconds","date":"2013-04-11T18:58:34.814Z","type":"quit"}
{"nick":"luigy","date":"2013-04-11T19:04:16.418Z","type":"join"}
{"nick":"luigy","reason":"Read error: Operation timed out","date":"2013-04-11T19:11:47.276Z","type":"quit"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-04-11T19:13:21.202Z","type":"quit"}
{"nick":"hz","date":"2013-04-11T19:13:24.431Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-04-11T19:23:53.844Z","type":"quit"}
{"nick":"isaacs","message":"trevnorris, tjfontaine, TooTallNate: Any of you gentleman have a time for a streams2 puzzle?","date":"2013-04-11T19:27:57.146Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: sure. what's up?","date":"2013-04-11T19:28:10.940Z","type":"message"}
{"nick":"isaacs","message":"I figured out the problem, but kind of chewing on a few potential solutions.","date":"2013-04-11T19:28:12.032Z","type":"message"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-04-11T19:28:13.551Z","type":"quit"}
{"nick":"isaacs","message":"so, we have this thing, Readable.unshift()","date":"2013-04-11T19:28:19.640Z","type":"message"}
{"nick":"isaacs","message":"for cases when you're optimistically parsing, and then pull off more than you meant to, and want to put some back.","date":"2013-04-11T19:28:33.012Z","type":"message"}
{"nick":"isaacs","message":"a la http->websocket interface","date":"2013-04-11T19:28:43.330Z","type":"message"}
{"nick":"isaacs","message":"also, in Readable._read(), it's expected that the stream Author calls push(chunk) to mark that they're not reading any more.","date":"2013-04-11T19:29:15.272Z","type":"message"}
{"nick":"isaacs","message":"however, if you're the one *consuming* the stream, then you call unshift(chunk), that *also* unsets the \"reading\" flag, and causes colliding _reads, which fucks up in the case of async fs ops, and other things","date":"2013-04-11T19:29:57.800Z","type":"message"}
{"nick":"benoitc","date":"2013-04-11T19:30:27.946Z","type":"join"}
{"nick":"isaacs","message":"one potential solution is for unshift() to *not* set reading=false","date":"2013-04-11T19:30:32.709Z","type":"message"}
{"nick":"yawnt","new_nick":"PKTDev`","date":"2013-04-11T19:30:37.443Z","type":"nick"}
{"nick":"PKTDev`","new_nick":"yawnt","date":"2013-04-11T19:30:49.574Z","type":"nick"}
{"nick":"isaacs","message":"of course, then it should be noted that stream *Authors* always have to call push(), and that *Consumers* call unshift()","date":"2013-04-11T19:30:52.264Z","type":"message"}
{"nick":"isaacs","message":"problem 2: what happens if you're doing this optimistic parsing, and the EOF chunk has been seen?","date":"2013-04-11T19:31:22.998Z","type":"message"}
{"nick":"isaacs","message":"ie, can you read() -> emit('end') -> unshift(somePart)","date":"2013-04-11T19:31:34.981Z","type":"message"}
{"nick":"isaacs","message":"then what...?","date":"2013-04-11T19:32:23.898Z","type":"message"}
{"nick":"isaacs","message":"emit('readable') again, pretend that didn't happen?","date":"2013-04-11T19:32:34.204Z","type":"message"}
{"nick":"trevnorris","message":"heh, give me a few to wrap my head around that.","date":"2013-04-11T19:34:42.428Z","type":"message"}
{"nick":"isaacs","message":"kk :)","date":"2013-04-11T19:34:46.676Z","type":"message"}
{"nick":"luigy","date":"2013-04-11T19:36:32.064Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: too lazy to look at the source right now. does .unshift() copy the data or use the original?","date":"2013-04-11T19:39:10.043Z","type":"message"}
{"nick":"isaacs","message":"uses the original, but of course, what you end up read()ing may be a copy","date":"2013-04-11T19:39:31.021Z","type":"message"}
{"nick":"isaacs","message":"unless you happen to read() the exact size of the unshifted chunk","date":"2013-04-11T19:39:53.356Z","type":"message"}
{"nick":"trevnorris","message":"oh, i'm just thinking about the potential memory leak scenarios using .slice w/ .unshift()","date":"2013-04-11T19:39:53.516Z","type":"message"}
{"nick":"isaacs","message":"sure.","date":"2013-04-11T19:40:01.765Z","type":"message"}
{"nick":"isaacs","message":"forget about New Buffers for now :)","date":"2013-04-11T19:40:06.441Z","type":"message"}
{"nick":"trevnorris","message":"lol, ok.","date":"2013-04-11T19:40:14.054Z","type":"message"}
{"nick":"isaacs","message":"actually, we should trade problems every so often, i think.","date":"2013-04-11T19:40:25.293Z","type":"message"}
{"nick":"isaacs","message":"i used to work on a team where we did that.  it was a very good practice.","date":"2013-04-11T19:40:36.221Z","type":"message"}
{"nick":"isaacs","message":"keeps your brain flexible","date":"2013-04-11T19:40:53.061Z","type":"message"}
{"nick":"trevnorris","message":"sounds good to me. been staring at buffers for weeks.","date":"2013-04-11T19:41:06.397Z","type":"message"}
{"nick":"isaacs","message":"so... i think i have a solution that will work","date":"2013-04-11T19:41:18.783Z","type":"message"}
{"nick":"isaacs","message":"but it requires changing the semantics of unshift() so that it doesn't mark the end of a _read()","date":"2013-04-11T19:41:32.092Z","type":"message"}
{"nick":"isaacs","message":"and so that it can \"push back\" an already-emitted end event","date":"2013-04-11T19:41:44.782Z","type":"message"}
{"nick":"trevnorris","message":"what do you mean by \"push back\"?","date":"2013-04-11T19:43:28.432Z","type":"message"}
{"nick":"isaacs","message":"ok, so...","date":"2013-04-11T19:45:11.397Z","type":"message"}
{"nick":"isaacs","message":"let's say the file is 256 bytes","date":"2013-04-11T19:45:16.990Z","type":"message"}
{"nick":"isaacs","message":"var buf = fs.read();   buf.length === 256, 'end' is emitted","date":"2013-04-11T19:45:43.846Z","type":"message"}
{"nick":"isaacs","message":"(fs == file stream)","date":"2013-04-11T19:45:56.021Z","type":"message"}
{"nick":"isaacs","message":"stream.unshift('didnt parse this bit')","date":"2013-04-11T19:46:12.711Z","type":"message"}
{"nick":"trevnorris","message":"hm. technically it's possible to unshift anything, right?","date":"2013-04-11T19:48:16.611Z","type":"message"}
{"nick":"isaacs","message":"yes","date":"2013-04-11T19:48:39.992Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: https://gist.github.com/5366610","date":"2013-04-11T19:49:16.187Z","type":"message"}
{"nick":"trevnorris","message":"what about if a user does an async .unshift()? it'd be impossible to reliably only emit \"end\" once.","date":"2013-04-11T19:50:29.697Z","type":"message"}
{"nick":"isaacs","message":"exactly","date":"2013-04-11T19:50:59.515Z","type":"message"}
{"nick":"isaacs","message":"pushing null causes a 'readable' to be emitted","date":"2013-04-11T19:51:14.955Z","type":"message"}
{"nick":"isaacs","message":"then read() gets whatever's left","date":"2013-04-11T19:51:24.045Z","type":"message"}
{"nick":"isaacs","message":"and *also* triggers an 'end' event","date":"2013-04-11T19:51:30.925Z","type":"message"}
{"nick":"isaacs","message":"unshifting then puts some more into the buffer","date":"2013-04-11T19:51:43.516Z","type":"message"}
{"nick":"isaacs","message":"and *another* 'end' happens when that chunk is consumed","date":"2013-04-11T19:51:55.655Z","type":"message"}
{"nick":"isaacs","message":"but, if i'm doing this because i'm a parser, and then i'm going to hand the stream off to you, then that's actually what i want.","date":"2013-04-11T19:52:15.282Z","type":"message"}
{"nick":"isaacs","message":"becasue otherwise you wno't see the 'end' event","date":"2013-04-11T19:52:23.993Z","type":"message"}
{"nick":"trevnorris","message":"what about the issue in your gist, where you call \"w.end()\" on the writable stream? how could a user tell when they could call writable.end()?","date":"2013-04-11T19:53:06.413Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-04-11T19:54:01.414Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-04-11T19:55:23.871Z","type":"quit"}
{"nick":"isaacs","message":"right","date":"2013-04-11T19:57:04.144Z","type":"message"}
{"nick":"isaacs","message":"because if you do w.write() after w.end() then it is fucked.","date":"2013-04-11T19:57:18.074Z","type":"message"}
{"nick":"isaacs","message":"so... unshift() after the 'end' event should be verboten...","date":"2013-04-11T19:59:59.973Z","type":"message"}
{"nick":"qmx|lunch","new_nick":"qmx","date":"2013-04-11T20:00:17.579Z","type":"nick"}
{"nick":"isaacs","message":"that's easy enough to detect.","date":"2013-04-11T20:01:16.546Z","type":"message"}
{"nick":"tjfontaine","message":"windows, please tell me why your build is failing *grr*","date":"2013-04-11T20:01:16.813Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: and, looks like we nexTTick the actual emission of the event anyway, so we can just add a check there to make sure that the length is still 0","date":"2013-04-11T20:01:38.712Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 264 seconds","date":"2013-04-11T20:02:19.298Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: what will happen if you wrap your r.unshift() in setImmediate, 'end' would still be emitted and the length == 0, right?","date":"2013-04-11T20:03:20.700Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: correct","date":"2013-04-11T20:03:38.251Z","type":"message"}
{"nick":"isaacs","message":"then your unshift() is a problem.","date":"2013-04-11T20:03:41.274Z","type":"message"}
{"nick":"isaacs","message":"it's like, when you read(), NOW is the only time that you're allowed to put any of that back in","date":"2013-04-11T20:03:55.053Z","type":"message"}
{"nick":"isaacs","message":"otherwise it might be too late.","date":"2013-04-11T20:03:59.150Z","type":"message"}
{"nick":"isaacs","message":"you have this run-to-completion only","date":"2013-04-11T20:04:06.269Z","type":"message"}
{"nick":"trevnorris","message":"so technically if a user has an unshift() anywhere the writable stream could last the entirety of app run time.","date":"2013-04-11T20:04:45.515Z","type":"message"}
{"nick":"trevnorris","message":"it almost seems if a user uses unshift() they have to be responsible to emit end.","date":"2013-04-11T20:05:03.468Z","type":"message"}
{"nick":"isaacs","message":"well, sure, i mean, if you have a readable that doesn't end, then it's the same thing","date":"2013-04-11T20:05:09.517Z","type":"message"}
{"nick":"isaacs","message":"no, that's too easily fucked up","date":"2013-04-11T20:05:23.159Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-04-11T20:05:26.752Z","type":"message"}
{"nick":"trevnorris","message":"ok, so run your solution past me again?","date":"2013-04-11T20:06:41.163Z","type":"message"}
{"nick":"trevnorris","message":"emitting 'end' more than once seems fine. unless the user does some cleanup in the callback that removes the ability to use the stream again.","date":"2013-04-11T20:07:10.077Z","type":"message"}
{"nick":"isaacs","message":"actually, i think emitting end more than once is terrible.","date":"2013-04-11T20:07:27.007Z","type":"message"}
{"nick":"jhlkfas","date":"2013-04-11T20:07:35.207Z","type":"join"}
{"nick":"trevnorris","message":"ah, ok.","date":"2013-04-11T20:07:37.215Z","type":"message"}
{"nick":"trevnorris","message":"misunderstood","date":"2013-04-11T20:07:42.965Z","type":"message"}
{"nick":"isaacs","message":"no, you understood correctly, but then i changed my mind :)","date":"2013-04-11T20:07:52.328Z","type":"message"}
{"nick":"trevnorris","message":"oh. lol","date":"2013-04-11T20:07:57.488Z","type":"message"}
{"nick":"isaacs","message":"you convinced me","date":"2013-04-11T20:07:58.427Z","type":"message"}
{"nick":"isaacs","message":"so","date":"2013-04-11T20:08:00.137Z","type":"message"}
{"nick":"isaacs","message":"we move the endEmitted flag into the nextTick where emit('end') actually happens","date":"2013-04-11T20:08:11.907Z","type":"message"}
{"nick":"isaacs","message":"when you read() and get data, you have one chance to unshift() some of it back if you didn't consume it.","date":"2013-04-11T20:08:33.207Z","type":"message"}
{"nick":"isaacs","message":"this cannot be deferred, or else you'll fuck the 'end' event","date":"2013-04-11T20:08:43.767Z","type":"message"}
{"nick":"trevnorris","message":"sounds good. that one constraint makes things a lot simpler.","date":"2013-04-11T20:09:05.305Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-04-11T20:10:31.356Z","type":"message"}
{"nick":"isaacs","message":"that's easy to document","date":"2013-04-11T20:10:33.345Z","type":"message"}
{"nick":"isaacs","message":"and it makes the test pass nicely :)","date":"2013-04-11T20:10:39.245Z","type":"message"}
{"nick":"isaacs","message":"i get a bunch of orderly \"asdf\" strings each prefixed by \"1234\" and then one last \"1234\" at the very end.","date":"2013-04-11T20:10:57.447Z","type":"message"}
{"nick":"loladiro","date":"2013-04-11T20:14:55.598Z","type":"join"}
{"nick":"jhlkfas","reason":"Ping timeout: 245 seconds","date":"2013-04-11T20:20:03.197Z","type":"quit"}
{"nick":"rasmusln","date":"2013-04-11T20:25:22.532Z","type":"join"}
{"nick":"rasmusln","date":"2013-04-11T20:26:42.177Z","type":"part"}
{"nick":"rasmusln","date":"2013-04-11T20:28:04.657Z","type":"join"}
{"nick":"rasmusln","date":"2013-04-11T20:31:56.374Z","type":"part"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #74 \u00037UNSTABLE\u000f linux (2/187) smartos (4/187) windows (6/188) osx (1/187) http://jenkins.nodejs.org/job/libuv-master/74/","date":"2013-04-11T20:32:21.646Z","type":"message"}
{"nick":"`3rdEden","reason":"Remote host closed the connection","date":"2013-04-11T20:33:48.822Z","type":"quit"}
{"nick":"hz","date":"2013-04-11T20:40:06.485Z","type":"quit"}
{"nick":"rendar","date":"2013-04-11T20:41:56.775Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #16 \u00037UNSTABLE\u000f windows-ia32 (8/575) osx-ia32 (1/575) osx-x64 (1/575) linux-x64 (1/575) windows-x64 (6/575) http://jenkins.nodejs.org/job/libuv-node-integration/16/","date":"2013-04-11T20:49:17.619Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-04-11T20:59:08.609Z","type":"quit"}
{"nick":"loladiro","date":"2013-04-11T21:05:44.770Z","type":"join"}
{"nick":"luigy","reason":"Ping timeout: 248 seconds","date":"2013-04-11T21:12:37.644Z","type":"quit"}
{"nick":"luigy","date":"2013-04-11T21:19:24.750Z","type":"join"}
{"nick":"tjfontaine","message":"ok I was just overly sensitive, my http.js split doesn't have an appreciable effect on test execution time","date":"2013-04-11T21:26:54.304Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: can you recap the decision on passing errors to an async callback? i have so many discussions on this in my head I can't tell them apart.","date":"2013-04-11T21:38:55.708Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: i think that the current thinking is: TRESUR errors get thrown now, everything else passed to cb, emit('error') should not ever be nextTick'ed","date":"2013-04-11T21:51:27.120Z","type":"message"}
{"nick":"isaacs","message":"except in the ctor","date":"2013-04-11T21:51:30.146Z","type":"message"}
{"nick":"isaacs","message":"(and really, if you're emitting error in the ctor, then wth, srsly)","date":"2013-04-11T21:51:44.359Z","type":"message"}
{"nick":"isaacs","message":"since that hsould really be a TRESUR","date":"2013-04-11T21:51:49.870Z","type":"message"}
{"nick":"trevnorris","message":"cool. thanks","date":"2013-04-11T21:52:59.997Z","type":"message"}
{"nick":"isaacs","message":"np","date":"2013-04-11T21:53:23.056Z","type":"message"}
{"nick":"isaacs","message":"edge cases are handled case-by-case","date":"2013-04-11T21:53:33.578Z","type":"message"}
{"nick":"isaacs","message":"\\0 in fs paths is passed to callback.  buffer indexes out of range, or <0, are thrown","date":"2013-04-11T21:53:57.363Z","type":"message"}
{"nick":"trevnorris","message":"makes sense.","date":"2013-04-11T21:54:24.984Z","type":"message"}
{"nick":"isaacs","message":"*in general*, if the error relates to a specific object, it's probably better to emit than throw.","date":"2013-04-11T21:54:26.098Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: well poop. so i implemented buffer pools w/ the new allocator just for kicks, and they're 50% faster for small buffers (< 1000 bytes).","date":"2013-04-11T22:25:35.224Z","type":"message"}
{"nick":"trevnorris","message":"but w/o the pooling they're 30% slower.","date":"2013-04-11T22:25:41.881Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: https://github.com/joyent/node/pull/5280","date":"2013-04-11T22:27:07.986Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: like it. and like the explicit errors. definitely help devs figure out what's going on.","date":"2013-04-11T22:32:39.817Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-04-11T22:32:59.602Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: api question. is it bad practice to overload a function like \"Fn(char* data)\" and \"Fn(const char* data)\"?","date":"2013-04-11T22:41:15.200Z","type":"message"}
{"nick":"trevnorris","message":"(first would use the original data, and the second would copy the data.","date":"2013-04-11T22:41:39.439Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: that won't work in most cases","date":"2013-04-11T22:42:53.644Z","type":"message"}
{"nick":"bnoordhuis","message":"unless Fn() is a const method, i think","date":"2013-04-11T22:43:11.357Z","type":"message"}
{"nick":"bnoordhuis","message":"but to answer your question, no, that's not great api design :)","date":"2013-04-11T22:43:38.606Z","type":"message"}
{"nick":"trevnorris","message":"heh, ok.","date":"2013-04-11T22:44:15.053Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-04-11T22:44:44.503Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: one more q. for kicks I reimplemented buffer pools using the new allocator, and thy're ~50% faster. problem is the pooling is why I started this to begin w/.","date":"2013-04-11T22:46:20.392Z","type":"message"}
{"nick":"trevnorris","message":"initially you think just use the pools, then work out the other later?","date":"2013-04-11T22:46:38.030Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: 50% faster pools sounds great :)","date":"2013-04-11T22:50:26.000Z","type":"message"}
{"nick":"brson","reason":"Remote host closed the connection","date":"2013-04-11T22:50:33.078Z","type":"quit"}
{"nick":"isaacs","message":"trevnorris: but yeah, it doesn't solve the root problem you were going after.","date":"2013-04-11T22:50:35.571Z","type":"message"}
{"nick":"stagas","date":"2013-04-11T22:50:39.891Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: cool. and at the >1024*8 size, it's about 3x's faster.","date":"2013-04-11T22:51:19.737Z","type":"message"}
{"nick":"trevnorris","message":"guess for initial implementation i'll just get the general architecture down, and worry about the root problem later.","date":"2013-04-11T22:51:41.608Z","type":"message"}
{"nick":"trevnorris","message":"this is getting complicated very fast.","date":"2013-04-11T22:51:57.168Z","type":"message"}
{"nick":"aledbf","reason":"Read error: Operation timed out","date":"2013-04-11T22:52:04.525Z","type":"quit"}
{"nick":"isaacs","message":"trevnorris: also, without some kind of pooling, we have that problem bert was talking about re our libuv interaction","date":"2013-04-11T22:52:18.389Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: also, without some kind of pooling, we have that problem piscisaureus was talking about re our libuv interaction","date":"2013-04-11T22:52:30.729Z","type":"message"}
{"nick":"isaacs","message":"(repeated for the benefit of his ircretary logging)","date":"2013-04-11T22:52:38.099Z","type":"message"}
{"nick":"trevnorris","message":"heh, ok.","date":"2013-04-11T22:52:44.043Z","type":"message"}
{"nick":"trevnorris","message":"can you refresh my memory","date":"2013-04-11T22:52:50.543Z","type":"message"}
{"nick":"isaacs","message":"so, when we call into libuv, we do something like:  uv_blerg(buffer, bufferLength, on_blerg_cb)","date":"2013-04-11T22:53:26.786Z","type":"message"}
{"nick":"isaacs","message":"then it calls on_blerg_cb(howManyBytes)","date":"2013-04-11T22:53:54.728Z","type":"message"}
{"nick":"isaacs","message":"which is <= bufferLength","date":"2013-04-11T22:54:00.418Z","type":"message"}
{"nick":"isaacs","message":"so: if we have a pool, then it's great, because we can just slice off that bit, increment the counter, decrement the available space, and reuse most of it","date":"2013-04-11T22:54:40.848Z","type":"message"}
{"nick":"isaacs","message":"if we don't, then even a 10-byte chunk requires 64kb of space","date":"2013-04-11T22:54:56.308Z","type":"message"}
{"nick":"trevnorris","message":"that's handled by the SlabAllocator, right?","date":"2013-04-11T22:55:24.667Z","type":"message"}
{"nick":"tjfontaine","message":"right the Shrink interaction","date":"2013-04-11T22:56:08.338Z","type":"message"}
{"nick":"trevnorris","message":"yeah. there are several things I want to try w/ that.","date":"2013-04-11T22:56:31.456Z","type":"message"}
{"nick":"trevnorris","message":"for example, you can create just allocated memory very very fast (non buffer), then create a buffer from a slice of it later.","date":"2013-04-11T22:57:21.333Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: did you recently force push 5280?","date":"2013-04-11T22:57:49.914Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: i did amend the commit message, yes","date":"2013-04-11T22:58:09.777Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: does that break something, because it's a pull req?","date":"2013-04-11T22:58:22.476Z","type":"message"}
{"nick":"tjfontaine","message":"I was just curious why the CI status stuff dropped off, and why the build was going again","date":"2013-04-11T22:58:50.747Z","type":"message"}
{"nick":"isaacs","message":"ah, kewl","date":"2013-04-11T23:01:39.034Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: wanna review this? https://github.com/joyent/node/pull/5280","date":"2013-04-11T23:01:50.533Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: think I figured out a way to get rid of the instanceof check in Buffer. (emphasis on _think_)","date":"2013-04-11T23:02:27.585Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: or you can review it as well: https://github.com/joyent/node/pull/5280","date":"2013-04-11T23:03:57.282Z","type":"message"}
{"nick":"isaacs","message":"trevnorris already granted the basic sanity check, but it's good to have more eyes on streams changes","date":"2013-04-11T23:04:12.872Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: uh, with any change to streams, i'd hope so. imho that's the most complex code in node.","date":"2013-04-11T23:04:48.445Z","type":"message"}
{"nick":"trevnorris","message":"the api is fleshing out really well, but this transition period has been a trip.","date":"2013-04-11T23:05:16.589Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-04-11T23:07:04.139Z","type":"message"}
{"nick":"isaacs","message":"huh.  making https time out.","date":"2013-04-11T23:09:01.202Z","type":"message"}
{"nick":"isaacs","message":"hooray tests!","date":"2013-04-11T23:09:04.778Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-04-11T23:09:27.986Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 248 seconds","date":"2013-04-11T23:13:09.656Z","type":"quit"}
{"nick":"isaacs","message":"tjfontaine: force push","date":"2013-04-11T23:13:10.585Z","type":"message"}
{"nick":"abraxas","date":"2013-04-11T23:14:10.050Z","type":"join"}
{"nick":"loladiro","date":"2013-04-11T23:15:22.140Z","type":"join"}
{"nick":"tjfontaine","message":"aborted the other, its output is kinda hilarious :)","date":"2013-04-11T23:15:33.887Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: may be too much, but implementation would be trivial. add the ability to callback a js object from a MakeWeakCallback?","date":"2013-04-11T23:18:05.142Z","type":"message"}
{"nick":"trevnorris","message":"*js function","date":"2013-04-11T23:18:15.239Z","type":"message"}
{"nick":"abraxas","reason":"Ping timeout: 260 seconds","date":"2013-04-11T23:18:31.947Z","type":"quit"}
{"nick":"isaacs","message":"trevnorris: like the weak module does?","date":"2013-04-11T23:18:47.592Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: yeah, but much simpler.","date":"2013-04-11T23:19:44.901Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-04-11T23:21:09.225Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: the extent would be \"alloc(n, fn)\". node-weak has a lot more niceties.","date":"2013-04-11T23:22:31.718Z","type":"message"}
{"nick":"isaacs","message":"true that","date":"2013-04-11T23:22:45.261Z","type":"message"}
{"nick":"tjfontaine","message":"there https://github.com/tjfontaine/node/compare/http-split now with logical steps","date":"2013-04-11T23:23:15.605Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: the goal should probably be to remove most of that stuff in _http_common.js out of there","date":"2013-04-11T23:25:49.009Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: eg, client and server should each have their own parser pool","date":"2013-04-11T23:26:02.590Z","type":"message"}
{"nick":"isaacs","message":"but, that's phase 2 :)","date":"2013-04-11T23:26:21.627Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-04-11T23:26:26.406Z","type":"message"}
{"nick":"tjfontaine","message":"shall I make a pull req for this?","date":"2013-04-11T23:26:43.377Z","type":"message"}
{"nick":"tjfontaine","message":"god such inconsistent commit messages","date":"2013-04-11T23:28:03.653Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-04-11T23:28:49.915Z","type":"join"}
{"nick":"c4milo","date":"2013-04-11T23:29:05.104Z","type":"join"}
{"nick":"tjfontaine","message":"isaacs: blah, we're going to need to re-test 5280, osx build slave was misbheaving","date":"2013-04-11T23:29:20.205Z","type":"message"}
{"nick":"isaacs","message":"k","date":"2013-04-11T23:29:28.409Z","type":"message"}
{"nick":"tjfontaine","message":" Error — Failing tests -- osx-ia32: 178, osx-x64: 179","date":"2013-04-11T23:29:37.776Z","type":"message"}
{"nick":"isaacs","message":"well, it passes on os x on my machine :)","date":"2013-04-11T23:29:39.433Z","type":"message"}
{"nick":"tjfontaine","message":"I mean, it was clearly a build problem it would have been green otherwise :)","date":"2013-04-11T23:29:57.540Z","type":"message"}
{"nick":"isaacs","message":"k","date":"2013-04-11T23:30:54.833Z","type":"message"}
{"nick":"loladiro","date":"2013-04-11T23:33:52.376Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-04-11T23:34:21.743Z","type":"join"}
{"nick":"bnoordhuis","message":"back, sorry. had to clean up some kid vomit","date":"2013-04-11T23:38:58.000Z","type":"message"}
{"nick":"bnoordhuis","message":"life of a parent eh?","date":"2013-04-11T23:39:05.175Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: what was the question?","date":"2013-04-11T23:39:26.103Z","type":"message"}
{"nick":"trevnorris","message":"um. my last was about adding the ability to call a js function from MakeWeakCallback (but far simpler than node-weak)","date":"2013-04-11T23:40:12.890Z","type":"message"}
{"nick":"trevnorris","message":"(i seem to have a lot of questions, so it's hard to say =)","date":"2013-04-11T23:40:27.894Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: oh, it was about buffer pools","date":"2013-04-11T23:40:48.571Z","type":"message"}
{"nick":"bnoordhuis","message":"oh right, i see it in the logs now","date":"2013-04-11T23:41:02.659Z","type":"message"}
{"nick":"bnoordhuis","message":"uhm, so what's the question exactly? :)","date":"2013-04-11T23:41:34.010Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yikes.","date":"2013-04-11T23:41:38.007Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: about how to segment the changes. e.g. the new pools are a lot faster, but doesn't solve my intended issue. so should I hold off or create a PR and work out the rest later?","date":"2013-04-11T23:43:43.611Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: i'm generally in favor of atomic commits","date":"2013-04-11T23:44:22.986Z","type":"message"}
{"nick":"bnoordhuis","message":"if this is an atomic change (and an improvement), by all means PR it","date":"2013-04-11T23:44:39.124Z","type":"message"}
{"nick":"trevnorris","message":"ok. i'll PR the first round of changes w/ the plan to continue working on memory leak issue.","date":"2013-04-11T23:45:26.104Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-04-11T23:52:13.413Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 248 seconds","date":"2013-04-11T23:53:41.649Z","type":"quit"}
{"nick":"indutny","message":"evening guys :)","date":"2013-04-11T23:55:15.962Z","type":"message"}
{"nick":"isaacs","message":"good evening, indutny ","date":"2013-04-11T23:56:22.272Z","type":"message"}
{"nick":"indutny","message":"isaacs: how are you doing?","date":"2013-04-11T23:56:31.683Z","type":"message"}
{"nick":"isaacs","message":"indutny: pretty good","date":"2013-04-11T23:56:42.467Z","type":"message"}
{"nick":"isaacs","message":"indutny: wanna review a streams change?","date":"2013-04-11T23:56:49.987Z","type":"message"}
{"nick":"indutny","message":"sure","date":"2013-04-11T23:56:53.357Z","type":"message"}
