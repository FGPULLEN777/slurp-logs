{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-03-18T00:00:01.127Z","type":"quit"}
{"nick":"ircretary","date":"2013-03-18T00:00:08.632Z","type":"join"}
{"nick":"hz","date":"2013-03-18T00:01:09.129Z","type":"quit"}
{"nick":"sh1mmer","message":"you know eran right?","date":"2013-03-18T00:03:17.749Z","type":"message"}
{"nick":"sh1mmer","message":"he's the lead on that","date":"2013-03-18T00:03:22.456Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah. we clash time from time to time on the bug tracker :)","date":"2013-03-18T00:05:15.206Z","type":"message"}
{"nick":"sh1mmer","message":"heh","date":"2013-03-18T00:05:40.322Z","type":"message"}
{"nick":"bnoordhuis","message":"cjd: re that license fixer thingy, i infer you're not a fan of liberal licenses?","date":"2013-03-18T00:11:27.808Z","type":"message"}
{"nick":"cjd","message":"hah","date":"2013-03-18T00:11:43.332Z","type":"message"}
{"nick":"sh1mmer","message":"cid you wrote that?","date":"2013-03-18T00:11:54.906Z","type":"message"}
{"nick":"cjd","message":"every license has it's place","date":"2013-03-18T00:11:57.307Z","type":"message"}
{"nick":"sh1mmer","message":"the pl script on HN?","date":"2013-03-18T00:12:00.009Z","type":"message"}
{"nick":"cjd","message":"yeah","date":"2013-03-18T00:12:02.752Z","type":"message"}
{"nick":"sh1mmer","message":"I have a few half-finished things in that vein","date":"2013-03-18T00:12:15.713Z","type":"message"}
{"nick":"sh1mmer","message":"it made me happy","date":"2013-03-18T00:12:17.955Z","type":"message"}
{"nick":"cjd","message":"thx","date":"2013-03-18T00:12:25.853Z","type":"message"}
{"nick":"cjd","message":"it was a way to poke fun at the BSD/GPL argument","date":"2013-03-18T00:12:38.729Z","type":"message"}
{"nick":"sh1mmer","message":"GPL is becoming toxic because it's obvious (in the real world) how much corporate supports open source","date":"2013-03-18T00:12:41.350Z","type":"message"}
{"nick":"cjd","message":"sort of","date":"2013-03-18T00:13:02.491Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-03-18T00:13:05.072Z","type":"nick"}
{"nick":"cjd","message":"if you GPL a project, you hold it back somewhat but you also protect it from getting crap dumped on it until it's enormous bloatware","date":"2013-03-18T00:13:51.471Z","type":"message"}
{"nick":"sh1mmer","message":"governance I think is a separate issue","date":"2013-03-18T00:14:05.938Z","type":"message"}
{"nick":"sh1mmer","message":"I like the Node approach","date":"2013-03-18T00:14:35.062Z","type":"message"}
{"nick":"cjd","message":"and if you have companies committing to your project who are usually at eachother's throats (think Oracle, RedHat and IBM), it's a way to demilitarize the area","date":"2013-03-18T00:14:39.992Z","type":"message"}
{"nick":"bnoordhuis","message":"cjd: crap dumped on? that's up to the maintainers right?","date":"2013-03-18T00:15:07.443Z","type":"message"}
{"nick":"sh1mmer","message":"I would say Hadoop became a war zone","date":"2013-03-18T00:15:55.359Z","type":"message"}
{"nick":"cjd","message":"yeah but when it's really awesome cool crap, it's hard for the maintainers to resist :)","date":"2013-03-18T00:15:59.968Z","type":"message"}
{"nick":"sh1mmer","message":"Apache Hadoop is a train-wreck and everyone has their own pet distro now","date":"2013-03-18T00:16:10.577Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, you mean pushovers","date":"2013-03-18T00:16:15.681Z","type":"message"}
{"nick":"cjd","message":"well no","date":"2013-03-18T00:16:23.811Z","type":"message"}
{"nick":"sh1mmer","message":"corporate money can be a problem","date":"2013-03-18T00:16:32.629Z","type":"message"}
{"nick":"sh1mmer","message":"I met that a lot in standards work","date":"2013-03-18T00:16:38.829Z","type":"message"}
{"nick":"cjd","message":"it's really really hard to say \"no\" to some cool features because you \"don't want to maintain the code\"","date":"2013-03-18T00:16:56.636Z","type":"message"}
{"nick":"sh1mmer","message":"Where the people writing the standards (and getting paid to do so) got forced into pushing a corporate line","date":"2013-03-18T00:17:01.250Z","type":"message"}
{"nick":"bnoordhuis","message":"i never have a problem with that","date":"2013-03-18T00:17:17.957Z","type":"message"}
{"nick":"bnoordhuis","message":"i use myself as the measure of things. if i'm unlikely to use it now or in the future, i don't merge it","date":"2013-03-18T00:17:49.421Z","type":"message"}
{"nick":"cjd","message":"I did a quick check of find/wc line counts in linux repo and freebsd..   14 million and 27 million","date":"2013-03-18T00:18:14.465Z","type":"message"}
{"nick":"cjd","message":"it's hard to turn features down","date":"2013-03-18T00:18:28.220Z","type":"message"}
{"nick":"bnoordhuis","message":"er, the freebsd repo includes the user land","date":"2013-03-18T00:18:59.874Z","type":"message"}
{"nick":"bnoordhuis","message":"unless you only counted files in sys/","date":"2013-03-18T00:19:22.691Z","type":"message"}
{"nick":"cjd","message":"nope, I counted everything because IMO that's what the freebsd guys have to maintain","date":"2013-03-18T00:19:40.188Z","type":"message"}
{"nick":"cjd","message":"kernel space is a huge line in the sand, even glibc is not linux, \"mean\" licenses help enforce those lines","date":"2013-03-18T00:20:26.779Z","type":"message"}
{"nick":"cjd","message":"so do \"mean\" project managers :)","date":"2013-03-18T00:20:34.756Z","type":"message"}
{"nick":"bnoordhuis","message":"nah, bollocks. it's people, not licenses","date":"2013-03-18T00:21:16.445Z","type":"message"}
{"nick":"bnoordhuis","message":"and freebsd is a bad example because developing the kernel and user land together is what their philosophy is all about","date":"2013-03-18T00:21:45.663Z","type":"message"}
{"nick":"cjd","message":"anyway I'm glad libuv has a liberal license so that cjdns can be GPLv3 :)","date":"2013-03-18T00:22:40.215Z","type":"message"}
{"nick":"sh1mmer","message":"lol","date":"2013-03-18T00:24:16.021Z","type":"message"}
{"nick":"bradleymeck","date":"2013-03-18T00:34:56.828Z","type":"join"}
{"nick":"`3rdEden","date":"2013-03-18T00:36:23.228Z","type":"join"}
{"nick":"`3rdEden","reason":"Ping timeout: 246 seconds","date":"2013-03-18T00:40:56.019Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-18T00:48:39.067Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-03-18T00:49:14.053Z","type":"nick"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-18T00:49:54.215Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-03-18T00:52:47.092Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-03-18T00:55:42.098Z","type":"nick"}
{"nick":"perezd","date":"2013-03-18T01:10:42.104Z","type":"join"}
{"nick":"c4milo","date":"2013-03-18T01:16:05.802Z","type":"join"}
{"nick":"porco","date":"2013-03-18T01:39:04.621Z","type":"join"}
{"nick":"abraxas","date":"2013-03-18T01:43:19.852Z","type":"join"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-03-18T01:43:20.229Z","type":"nick"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-03-18T01:58:22.150Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-03-18T02:05:35.106Z","type":"nick"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-18T02:11:09.376Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-03-18T02:15:16.868Z","type":"nick"}
{"nick":"loladiro","date":"2013-03-18T02:23:30.565Z","type":"join"}
{"nick":"porco","reason":"Quit: Linkinus - http://linkinus.com","date":"2013-03-18T02:26:58.641Z","type":"quit"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-03-18T02:32:19.395Z","type":"nick"}
{"nick":"sh1mmer","reason":"Quit: sh1mmer","date":"2013-03-18T02:32:31.068Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-18T02:36:38.264Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-18T02:43:35.517Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-18T02:44:05.100Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-18T02:44:14.287Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-18T02:50:55.311Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-18T02:54:54.386Z","type":"join"}
{"nick":"abrahm","reason":"Quit: Leaving","date":"2013-03-18T02:58:12.111Z","type":"quit"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-03-18T03:00:08.069Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-18T03:05:02.279Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-18T03:07:33.791Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 276 seconds","date":"2013-03-18T03:10:06.365Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: maybe you can help me out. don't have any experience w/ sunos or dtrace.","date":"2013-03-18T03:12:42.804Z","type":"message"}
{"nick":"tjfontaine","message":"right, well","date":"2013-03-18T03:13:28.739Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: failure is because V8DBG_CLASS_SEQASCIISTRING__CHARS__CHAR is an unknown variable name. but it's in v8abbr.h, which is included in uv8ustack.c","date":"2013-03-18T03:13:39.313Z","type":"message"}
{"nick":"tjfontaine","message":"lemme look at that again","date":"2013-03-18T03:13:40.418Z","type":"message"}
{"nick":"tjfontaine","message":"oh right ok","date":"2013-03-18T03:13:50.235Z","type":"message"}
{"nick":"tjfontaine","message":"I think this was an issue before, but I'm not sure that it was solved","date":"2013-03-18T03:14:14.050Z","type":"message"}
{"nick":"trevnorris","message":"hm ok","date":"2013-03-18T03:15:27.075Z","type":"message"}
{"nick":"trevnorris","message":"i'll look back through the commit logs and see if there was something I missed.","date":"2013-03-18T03:15:47.408Z","type":"message"}
{"nick":"trevnorris","message":"because when I cherry-pick the commit that should be the fix, there are no changes.","date":"2013-03-18T03:16:06.063Z","type":"message"}
{"nick":"tjfontaine","message":"well lemme rephrase","date":"2013-03-18T03:16:20.102Z","type":"message"}
{"nick":"benoitc","date":"2013-03-18T03:16:24.589Z","type":"join"}
{"nick":"tjfontaine","message":"right before the v8 rollback, I was asked to check to see if the postmortem stuff was working, and indeed it wasn't, for a quite similar error","date":"2013-03-18T03:17:22.952Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok.","date":"2013-03-18T03:17:35.700Z","type":"message"}
{"nick":"tjfontaine","message":"but iirc we were on 3.16 then?","date":"2013-03-18T03:17:36.471Z","type":"message"}
{"nick":"trevnorris","message":"3.15","date":"2013-03-18T03:17:43.637Z","type":"message"}
{"nick":"trevnorris","message":"we tried 3.16 but that had a serious ascii regression that has been mostly solved in 3.17","date":"2013-03-18T03:18:06.342Z","type":"message"}
{"nick":"tjfontaine","message":"ok well anyway, the SEQASCIISTRING stuff was involved in the error for postmortem stuff","date":"2013-03-18T03:18:16.434Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok. so it was never working?","date":"2013-03-18T03:18:28.106Z","type":"message"}
{"nick":"tjfontaine","message":"well, ustack != postmortem","date":"2013-03-18T03:18:46.984Z","type":"message"}
{"nick":"tjfontaine","message":"they're related but not entirely the same thing","date":"2013-03-18T03:19:10.589Z","type":"message"}
{"nick":"tjfontaine","message":"I'll need to actually look and see what's going on with this","date":"2013-03-18T03:19:33.038Z","type":"message"}
{"nick":"trevnorris","message":"hm","date":"2013-03-18T03:19:59.628Z","type":"message"}
{"nick":"tjfontaine","message":"in gen-postmortem-metadata.py for instance is: SeqAsciiString, chars, char, kHeaderSize","date":"2013-03-18T03:22:48.030Z","type":"message"}
{"nick":"tjfontaine","message":"so while this header jazz isn't entirely obvious, I have a feeling it's supposed to be generating that define, and since that doesn't exist anymore in v8 it's not getting defined","date":"2013-03-18T03:23:54.643Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok","date":"2013-03-18T03:24:08.974Z","type":"message"}
{"nick":"mikeal","date":"2013-03-18T03:24:12.021Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-03-18T03:24:52.539Z","type":"quit"}
{"nick":"trevnorris","message":"well, sort of. to be honest don't even know how to use dtrace.","date":"2013-03-18T03:25:15.134Z","type":"message"}
{"nick":"tjfontaine","message":"ok see for instance out/Debug/obj/gen/debug-support.cc","date":"2013-03-18T03:25:25.609Z","type":"message"}
{"nick":"mikeal","date":"2013-03-18T03:27:51.540Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-18T03:30:23.050Z","type":"quit"}
{"nick":"tjfontaine","message":"ok right","date":"2013-03-18T03:32:51.827Z","type":"message"}
{"nick":"tjfontaine","message":"see also tools/genv8constants.py","date":"2013-03-18T03:34:02.516Z","type":"message"}
{"nick":"tjfontaine","message":"so V8DBG_CLASS_SEQASCIISTRING__CHARS__CHAR is supposed to be in v8constants.h","date":"2013-03-18T03:35:59.834Z","type":"message"}
{"nick":"trevnorris","message":"ah ok","date":"2013-03-18T03:36:52.830Z","type":"message"}
{"nick":"tjfontaine","message":"and that's generated by walking through the things defined in libv8_base.a","date":"2013-03-18T03:37:09.005Z","type":"message"}
{"nick":"tjfontaine","message":"I will be able to find out more tomorrow, about whether or not simply removing the line from v8abbr is enough, or if there are now other symbols we need to use","date":"2013-03-18T03:38:38.423Z","type":"message"}
{"nick":"trevnorris","message":"cool. thanks a ton.","date":"2013-03-18T03:40:37.524Z","type":"message"}
{"nick":"tjfontaine","message":"my pleasure, was the build report from jenkins helpful?","date":"2013-03-18T03:41:00.548Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: very. just being able to see the build output was very useful.","date":"2013-03-18T03:41:34.671Z","type":"message"}
{"nick":"tjfontaine","message":"excellent","date":"2013-03-18T03:41:54.722Z","type":"message"}
{"nick":"trevnorris","message":"do you do all the builds with g++?","date":"2013-03-18T03:42:33.644Z","type":"message"}
{"nick":"tjfontaine","message":"I will probably be letting the pullreq chrome plugin into the wild tomorrow for some feedback, though I dunno if you use FF all things considered","date":"2013-03-18T03:42:37.124Z","type":"message"}
{"nick":"trevnorris","message":"heh, I work at mozilla. ;-)","date":"2013-03-18T03:43:00.624Z","type":"message"}
{"nick":"tjfontaine","message":"well windows is msvs, osx is clang, linux and smartos are gcc/g++ right now, though I would like to get clang into the mix there as well","date":"2013-03-18T03:43:34.624Z","type":"message"}
{"nick":"tjfontaine","message":"right :)","date":"2013-03-18T03:43:37.753Z","type":"message"}
{"nick":"tjfontaine","message":"it's really just a simple greasemonkey/userscript thing, so trivial for a motivated person to implement there as well","date":"2013-03-18T03:44:00.708Z","type":"message"}
{"nick":"trevnorris","message":"yeah. there was one edge case where building ia32 with clang exposed a bug in clang.","date":"2013-03-18T03:44:10.789Z","type":"message"}
{"nick":"trevnorris","message":"though i'd expect that shouldn't happen hardly ever.","date":"2013-03-18T03:44:19.791Z","type":"message"}
{"nick":"trevnorris","message":"(if ever again)","date":"2013-03-18T03:44:38.583Z","type":"message"}
{"nick":"tjfontaine","message":"right","date":"2013-03-18T03:44:41.961Z","type":"message"}
{"nick":"tjfontaine","message":"I've been a huge llvm/clang for a while, I was in the small group who took the time to figure out how to get v8 to compile with it :)","date":"2013-03-18T03:45:28.604Z","type":"message"}
{"nick":"tjfontaine","message":"back before the c++ compiler was round tripping","date":"2013-03-18T03:45:53.809Z","type":"message"}
{"nick":"trevnorris","message":"that's awesome.","date":"2013-03-18T03:46:44.644Z","type":"message"}
{"nick":"trevnorris","message":"so did you work google?","date":"2013-03-18T03:49:31.399Z","type":"message"}
{"nick":"tjfontaine","message":"nah","date":"2013-03-18T03:50:08.272Z","type":"message"}
{"nick":"tjfontaine","message":"just an enthusiast","date":"2013-03-18T03:50:17.499Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-03-18T03:53:01.128Z","type":"nick"}
{"nick":"brucem","message":"trevnorris: if you feel that way about clang and work at Mozilla, you obviously don' t work with Alon. :)","date":"2013-03-18T03:53:20.861Z","type":"message"}
{"nick":"stagas_","date":"2013-03-18T03:53:35.408Z","type":"join"}
{"nick":"perezd","reason":"Quit: perezd","date":"2013-03-18T03:55:02.585Z","type":"quit"}
{"nick":"trevnorris","message":"brucem: heh, nope.","date":"2013-03-18T03:55:27.968Z","type":"message"}
{"nick":"stagas","reason":"Ping timeout: 258 seconds","date":"2013-03-18T03:56:00.144Z","type":"quit"}
{"nick":"stagas_","new_nick":"stagas","date":"2013-03-18T03:56:00.517Z","type":"nick"}
{"nick":"brucem","message":"trevnorris: between him, me and someone else (with me and someone else not @ Mozilla), we're like walking factories for LLVM-related bugs.","date":"2013-03-18T03:56:11.447Z","type":"message"}
{"nick":"trevnorris","message":"brucem: considering i only started programming c++ 4 months ago, it was just luck i tripped across one (it was bnoordhuis that identified the bug) =)","date":"2013-03-18T03:57:36.369Z","type":"message"}
{"nick":"tjfontaine","message":"heh, anyone with a significant code base is a factory for llvm bugs :)","date":"2013-03-18T03:57:48.426Z","type":"message"}
{"nick":"kazupon","date":"2013-03-18T04:00:47.127Z","type":"join"}
{"nick":"perezd","date":"2013-03-18T04:04:20.245Z","type":"join"}
{"nick":"perezd","reason":"Client Quit","date":"2013-03-18T04:04:20.246Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 248 seconds","date":"2013-03-18T04:08:52.890Z","type":"quit"}
{"nick":"abraxas","date":"2013-03-18T04:11:01.603Z","type":"join"}
{"nick":"kazupon","date":"2013-03-18T04:13:39.222Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-18T04:14:56.486Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-18T04:17:50.234Z","type":"quit"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-03-18T04:19:51.264Z","type":"quit"}
{"nick":"abraxas","date":"2013-03-18T04:32:17.745Z","type":"join"}
{"nick":"kazupon","date":"2013-03-18T04:42:42.141Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-18T05:05:41.915Z","type":"quit"}
{"nick":"tjfontaine","message":"what everyone wants to see https://github.com/joyent/node/pull/5055#issuecomment-15039362","date":"2013-03-18T05:09:04.666Z","type":"message"}
{"nick":"cjd","message":":D","date":"2013-03-18T05:10:52.359Z","type":"message"}
{"nick":"cjd","message":"need a PR closer bot which closes if tests fail","date":"2013-03-18T05:11:15.539Z","type":"message"}
{"nick":"tjfontaine","message":"heh, the existing jenkins pr bot is crap, so I wrote an optin thing for the core devs who are interested","date":"2013-03-18T05:12:11.808Z","type":"message"}
{"nick":"tjfontaine","message":"basically just a content script plugin that will inject PR build status and test failures onto the PR page","date":"2013-03-18T05:12:53.509Z","type":"message"}
{"nick":"cjd","message":"jenkins?   crap?","date":"2013-03-18T05:14:20.278Z","type":"message"}
{"nick":"bradleymeck","date":"2013-03-18T05:14:24.418Z","type":"join"}
{"nick":"cjd","message":"but but but it's java","date":"2013-03-18T05:14:36.549Z","type":"message"}
{"nick":"tjfontaine","message":"I call my little proxy thing jankins to reflect that :P","date":"2013-03-18T05:15:08.009Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: what do you think about creating an official \"include/node.h\" the way v8 has?","date":"2013-03-18T05:34:20.186Z","type":"message"}
{"nick":"trevnorris","message":"i'd like to create one with proper Doxyfile documentation, then use doxygen to build both the v8 and node api docs","date":"2013-03-18T05:34:55.470Z","type":"message"}
{"nick":"tjfontaine","message":"how would it differ from src/node.h?","date":"2013-03-18T05:35:56.440Z","type":"message"}
{"nick":"tjfontaine","message":"I mean node itself doesn't have a lot of entry points from C/++ so what little commenting there is would happen there?","date":"2013-03-18T05:36:55.826Z","type":"message"}
{"nick":"trevnorris","message":"src/node.h would become include/node.h","date":"2013-03-18T05:36:56.135Z","type":"message"}
{"nick":"trevnorris","message":"at least that is how v8 does it.","date":"2013-03-18T05:37:01.017Z","type":"message"}
{"nick":"tjfontaine","message":"but it doesn't really need to move does it?","date":"2013-03-18T05:37:18.245Z","type":"message"}
{"nick":"tjfontaine","message":"I think install does the right thing with it already","date":"2013-03-18T05:37:33.420Z","type":"message"}
{"nick":"trevnorris","message":"well, guess it doesn't need to move, but there are a lot of nice-ities that need to all be included seperately.","date":"2013-03-18T05:37:59.708Z","type":"message"}
{"nick":"trevnorris","message":"(e.g. node-internals.h has \"Thow*Error\", node_buffer has the Buffer interface, node_object_wrap.h has ObjectWrap, etc.)","date":"2013-03-18T05:38:47.213Z","type":"message"}
{"nick":"tjfontaine","message":"for doxygen'y things I suppose you could provide yet another header that maps things","date":"2013-03-18T05:38:50.455Z","type":"message"}
{"nick":"trevnorris","message":"part of it would also to have a single location for all the \"official\" cc interfaces.","date":"2013-03-18T05:39:20.733Z","type":"message"}
{"nick":"trevnorris","message":"i think those should be under the same api locks as the js api.","date":"2013-03-18T05:39:53.606Z","type":"message"}
{"nick":"trevnorris","message":"reason i thought of it was because of GH-5042","date":"2013-03-18T05:40:38.130Z","type":"message"}
{"nick":"tjfontaine","message":"I'm not sure the Throw* stuff should necessarily be exposed, and it's not uncommon for projects (especially c++) to not include all the headers all the time","date":"2013-03-18T05:41:18.187Z","type":"message"}
{"nick":"tjfontaine","message":"c++ being notoriously slow at the actual preprocessing step","date":"2013-03-18T05:41:38.294Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: I'm not too fussed either way, it's just important that we're aware of what we do and don't want to export to addins etc","date":"2013-03-18T05:42:40.992Z","type":"message"}
{"nick":"tjfontaine","message":"something we're not so clear on","date":"2013-03-18T05:42:54.334Z","type":"message"}
{"nick":"trevnorris","message":"so what about a minimum of identifying our official cc api?","date":"2013-03-18T05:43:54.897Z","type":"message"}
{"nick":"tjfontaine","message":"that is something that should indeed be done","date":"2013-03-18T05:44:24.761Z","type":"message"}
{"nick":"tjfontaine","message":"I would think it would go hand in hand for guidelines for writing good addins","date":"2013-03-18T05:44:42.942Z","type":"message"}
{"nick":"trevnorris","message":"nod","date":"2013-03-18T05:44:48.854Z","type":"message"}
{"nick":"trevnorris","message":"and i don't care whether the api is located in single or multiple files, as long as it's well documented.","date":"2013-03-18T05:45:45.566Z","type":"message"}
{"nick":"tjfontaine","message":"yup that's my position as well","date":"2013-03-18T05:46:01.543Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: i'm not familiar with how cc projects break up api stuff in header files, but is it uncommon to have internal api declarations in the same headers as public apis?","date":"2013-03-18T05:47:30.216Z","type":"message"}
{"nick":"tjfontaine","message":"in well behaved projects, yes that's usually not found","date":"2013-03-18T05:48:09.073Z","type":"message"}
{"nick":"tjfontaine","message":"for instance look at how libuv does it","date":"2013-03-18T05:48:15.404Z","type":"message"}
{"nick":"tjfontaine","message":"breaks out platform includes, and then platforms further abstract out what's public/internal","date":"2013-03-18T05:48:46.184Z","type":"message"}
{"nick":"trevnorris","message":"yeah, very similar to how v8 does it.","date":"2013-03-18T05:49:17.575Z","type":"message"}
{"nick":"tjfontaine","message":"now, compilers have the concept of visibility, so it's not always a problem if done carefully, but if you want to have the least amount of unintended consequences you explicitly mark what you want to let others use","date":"2013-03-18T05:50:00.216Z","type":"message"}
{"nick":"trevnorris","message":"so i'll defer to all you that actually have cc  experience to how break up the headers. =)","date":"2013-03-18T05:50:29.004Z","type":"message"}
{"nick":"tjfontaine","message":"as it stands right now, you have cases where node itself works great with how the headers are, but then you hit the case where someone somewhere was relying on something you hadn't anticipated","date":"2013-03-18T05:51:11.132Z","type":"message"}
{"nick":"tjfontaine","message":"ie #5042","date":"2013-03-18T05:51:19.770Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-03-18T05:52:20.465Z","type":"message"}
{"nick":"tjfontaine","message":"I'm going to be adding more downstream projects that will be built and tested after a branch build completes, that should also include a binary addin, probably at the least ffi since that probably should hit common cases","date":"2013-03-18T05:53:29.222Z","type":"message"}
{"nick":"trevnorris","message":"so you think this should be a v0.12 milestone?","date":"2013-03-18T05:54:07.105Z","type":"message"}
{"nick":"tjfontaine","message":"ya, well 1.0 at the latest :P","date":"2013-03-18T05:54:52.073Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-03-18T05:55:07.596Z","type":"message"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-03-18T06:08:32.829Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-03-18T06:09:58.854Z","type":"nick"}
{"nick":"trevnorris","message":"tjfontaine: what did you mean by c++ being slow at the preprocessing step?","date":"2013-03-18T06:21:54.891Z","type":"message"}
{"nick":"`3rdEden","date":"2013-03-18T06:43:15.723Z","type":"join"}
{"nick":"tjfontaine","message":"http://stackoverflow.com/a/318440","date":"2013-03-18T06:47:59.437Z","type":"message"}
{"nick":"tjfontaine","message":"nothing out of the ordinary for compilers, it's just worse for c++","date":"2013-03-18T06:48:33.549Z","type":"message"}
{"nick":"stagas_","date":"2013-03-18T06:48:50.151Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 252 seconds","date":"2013-03-18T06:49:02.343Z","type":"quit"}
{"nick":"stagas_","new_nick":"stagas","date":"2013-03-18T06:49:04.464Z","type":"nick"}
{"nick":"tjfontaine","message":"trevnorris: also of interest to you might be http://llvm.org/devmtg/2012-11/ talk #6 \"Modules\" by dgregor","date":"2013-03-18T06:50:00.513Z","type":"message"}
{"nick":"trevnorris","message":"awesome, thanks.","date":"2013-03-18T06:50:13.349Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: in the following, would I need to replace (int*)mem with reinterpret_cast? https://gist.github.com/trevnorris/5183829","date":"2013-03-18T06:51:52.475Z","type":"message"}
{"nick":"cjd","message":"also C++ is easy to bloat up","date":"2013-03-18T06:51:54.165Z","type":"message"}
{"nick":"trevnorris","message":"i tried static_cast, but errors","date":"2013-03-18T06:52:04.118Z","type":"message"}
{"nick":"`3rdEden","reason":"Ping timeout: 264 seconds","date":"2013-03-18T06:52:08.315Z","type":"quit"}
{"nick":"cjd","message":"#include <boost> -> get coffee while compiling","date":"2013-03-18T06:52:17.689Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: o0 what are you trying to do with your little example there?","date":"2013-03-18T06:53:39.963Z","type":"message"}
{"nick":"trevnorris","message":"write an int value directly to memory","date":"2013-03-18T06:53:58.701Z","type":"message"}
{"nick":"tjfontaine","message":"ok so your question is what should your casts be in c++","date":"2013-03-18T06:57:56.444Z","type":"message"}
{"nick":"trevnorris","message":"sure, or if there's a more c++ way.","date":"2013-03-18T06:58:48.927Z","type":"message"}
{"nick":"tjfontaine","message":"I'm not sure if there is a more c++ way to do what you're doing there, you're being particularly evil and the c++ *_cast<> is kinda meant to protect you from that sort of them","date":"2013-03-18T07:00:11.467Z","type":"message"}
{"nick":"tjfontaine","message":"http://stackoverflow.com/questions/573294/when-to-use-reinterpret-cast","date":"2013-03-18T07:00:50.436Z","type":"message"}
{"nick":"tjfontaine","message":"I think with reinterpret you run the danger of it messing with addresses, but I don't remember the rules all that well","date":"2013-03-18T07:02:00.969Z","type":"message"}
{"nick":"tjfontaine","message":"heh ya that's what the example suggests","date":"2013-03-18T07:02:33.015Z","type":"message"}
{"nick":"trevnorris","message":"ah, that was the example my friend gave me. just left out the void* part.","date":"2013-03-18T07:02:35.836Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-pullrequest\u0002: #1 \u00034FAILURE\u000f osx (2/183) smartos (5/183) linux (2/183) http://jenkins.nodejs.org/job/libuv-pullrequest/1/","date":"2013-03-18T07:22:15.664Z","type":"message"}
{"nick":"rendar","date":"2013-03-18T07:25:52.696Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-18T07:26:06.551Z","type":"quit"}
{"nick":"`3rdEden","date":"2013-03-18T07:36:01.322Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 245 seconds","date":"2013-03-18T07:44:59.860Z","type":"quit"}
{"nick":"stagas_","date":"2013-03-18T07:45:05.458Z","type":"join"}
{"nick":"stagas_","reason":"Ping timeout: 276 seconds","date":"2013-03-18T07:50:15.364Z","type":"quit"}
{"nick":"indutny","message":"morning","date":"2013-03-18T07:54:14.649Z","type":"message"}
