{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-10-30T00:00:00.987Z","type":"quit"}
{"nick":"ircretary","date":"2013-10-30T00:00:08.344Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-10-30T00:00:19.839Z","type":"quit"}
{"nick":"octetcloud","date":"2013-10-30T00:00:23.953Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #654 \u00037UNSTABLE\u000f osx-x64 (1/654) smartos-ia32 (6/654) smartos-x64 (8/654) http://jenkins.nodejs.org/job/nodejs-master/654/","date":"2013-10-30T00:00:36.281Z","type":"message"}
{"nick":"dshaw_","date":"2013-10-30T00:01:27.193Z","type":"join"}
{"nick":"AvianFlu","date":"2013-10-30T00:02:51.882Z","type":"join"}
{"nick":"FROGGS","date":"2013-10-30T00:03:11.741Z","type":"join"}
{"nick":"loladiro","date":"2013-10-30T00:06:55.150Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 245 seconds","date":"2013-10-30T00:07:06.670Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-10-30T00:08:08.428Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #252 \u0002ABORTED\u0002 smartos-ia32 (2/195) smartos-x64 (2/195) osx-x64 (1/196) http://jenkins.nodejs.org/job/libuv-master-gyp/252/","date":"2013-10-30T00:09:45.443Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #311 \u0002ABORTED\u0002 smartos (3/195) http://jenkins.nodejs.org/job/libuv-master/311/","date":"2013-10-30T00:09:54.445Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-review\u0002: #81 \u0002ABORTED\u0002 smartos-x64 (2/195) osx-ia32 (1/196) osx-x64 (3/196) smartos-ia32 (4/195) http://jenkins.nodejs.org/job/libuv-review/81/","date":"2013-10-30T00:09:56.445Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #253 \u0002ABORTED\u0002 http://jenkins.nodejs.org/job/libuv-master-gyp/253/","date":"2013-10-30T00:10:16.448Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033tjfontaine\u000f created branch v0.11.8-release - http://git.io/Fknl6g","date":"2013-10-30T00:11:22.462Z","type":"message"}
{"nick":"dshaw_","date":"2013-10-30T00:11:55.859Z","type":"join"}
{"nick":"trevnorris","message":"can someone else confirm that the styles on https://github.com/joyent/node/pull/6011 are totally fubar?","date":"2013-10-30T00:13:32.183Z","type":"message"}
{"nick":"trevnorris","message":"nm. fixed.","date":"2013-10-30T00:13:38.679Z","type":"message"}
{"nick":"octetcloud","reason":"Ping timeout: 272 seconds","date":"2013-10-30T00:15:49.744Z","type":"quit"}
{"nick":"trevnorris","message":"wow... 6011 is finally cleaned up. i'll be happy to see that thing go.","date":"2013-10-30T00:18:04.999Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-10-30T00:21:47.106Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #443 \u00037UNSTABLE\u000f windows-x64 (23/654) windows-ia32 (25/654) http://jenkins.nodejs.org/job/nodejs-master-windows/443/","date":"2013-10-30T00:30:10.834Z","type":"message"}
{"nick":"zz_karupanerura","new_nick":"karupanerura","date":"2013-10-30T00:31:00.180Z","type":"nick"}
{"nick":"AvianFlu","date":"2013-10-30T00:43:17.898Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 245 seconds","date":"2013-10-30T00:49:36.657Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #444 \u00037UNSTABLE\u000f windows-x64 (23/654) windows-ia32 (22/654) http://jenkins.nodejs.org/job/nodejs-master-windows/444/","date":"2013-10-30T00:50:26.158Z","type":"message"}
{"nick":"AvianFlu","date":"2013-10-30T00:52:08.146Z","type":"join"}
{"nick":"kazupon","date":"2013-10-30T00:54:22.365Z","type":"join"}
{"nick":"superjoe30","reason":"Ping timeout: 246 seconds","date":"2013-10-30T00:57:10.956Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-30T00:58:21.344Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-10-30T01:00:09.646Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-10-30T01:04:26.382Z","type":"quit"}
{"nick":"othiym23","message":"trevnorris: the diff on that PR hurts GH, and by extension Chrome","date":"2013-10-30T01:19:42.809Z","type":"message"}
{"nick":"othiym23","message":"lookin good, though","date":"2013-10-30T01:20:06.536Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-30T01:24:57.029Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-30T01:25:27.156Z","type":"join"}
{"nick":"indexzero","date":"2013-10-30T01:26:39.884Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-10-30T01:26:50.241Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2013-10-30T01:29:43.997Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-30T01:33:59.953Z","type":"join"}
{"nick":"sblom","reason":"Ping timeout: 272 seconds","date":"2013-10-30T01:35:37.737Z","type":"quit"}
{"nick":"abraxas","date":"2013-10-30T01:35:41.762Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-10-30T01:36:07.135Z","type":"quit"}
{"nick":"abraxas","date":"2013-10-30T01:36:24.821Z","type":"join"}
{"nick":"indexzero_","date":"2013-10-30T01:45:18.348Z","type":"join"}
{"nick":"indexzero","reason":"Ping timeout: 245 seconds","date":"2013-10-30T01:47:06.646Z","type":"quit"}
{"nick":"indexzero_","new_nick":"indexzero","date":"2013-10-30T01:47:06.864Z","type":"nick"}
{"nick":"Cesar1","date":"2013-10-30T02:04:40.581Z","type":"join"}
{"nick":"Cesar1","message":"hola","date":"2013-10-30T02:09:12.512Z","type":"message"}
{"nick":"Cesar1","date":"2013-10-30T02:09:36.414Z","type":"part"}
{"nick":"kellabyte","date":"2013-10-30T02:15:12.849Z","type":"join"}
{"nick":"kellabyte","reason":"Changing host","date":"2013-10-30T02:15:23.108Z","type":"quit"}
{"nick":"kellabyte","date":"2013-10-30T02:15:23.318Z","type":"join"}
{"nick":"kellabyte","reason":"Changing host","date":"2013-10-30T02:15:23.318Z","type":"quit"}
{"nick":"kellabyte","date":"2013-10-30T02:15:23.318Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-10-30T02:36:14.333Z","type":"quit"}
{"nick":"loladiro","date":"2013-10-30T02:36:42.131Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-10-30T02:39:29.671Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-10-30T02:41:36.350Z","type":"quit"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-10-30T02:49:55.764Z","type":"quit"}
{"nick":"LOUDBOT_","reason":"Remote host closed the connection","date":"2013-10-30T03:03:21.237Z","type":"quit"}
{"nick":"LOUDBOT","date":"2013-10-30T03:03:34.282Z","type":"join"}
{"nick":"abraxas","date":"2013-10-30T03:05:43.781Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 240 seconds","date":"2013-10-30T03:06:49.974Z","type":"quit"}
{"nick":"indexzero","date":"2013-10-30T03:11:38.429Z","type":"join"}
{"nick":"julianduque","date":"2013-10-30T03:19:20.947Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-30T03:22:10.568Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-30T03:22:42.375Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 245 seconds","date":"2013-10-30T03:26:48.166Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 240 seconds","date":"2013-10-30T03:30:09.107Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-30T03:34:52.676Z","type":"nick"}
{"nick":"luxigo_","reason":"Ping timeout: 245 seconds","date":"2013-10-30T03:44:35.167Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Read error: Operation timed out","date":"2013-10-30T03:58:44.117Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-30T03:59:09.344Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-30T03:59:37.423Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-10-30T04:03:51.788Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-10-30T04:07:47.380Z","type":"join"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-10-30T04:17:59.822Z","type":"quit"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-10-30T04:19:57.288Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-10-30T04:30:14.360Z","type":"join"}
{"nick":"jcrugzz","message":"anyone around that could lend a hand with some odd mdb behavior?","date":"2013-10-30T04:31:05.737Z","type":"message"}
{"nick":"kazupon","date":"2013-10-30T04:42:19.819Z","type":"join"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-10-30T05:00:07.094Z","type":"quit"}
{"nick":"wolfeidau","message":"jcrugzz: which bit?","date":"2013-10-30T05:05:46.611Z","type":"message"}
{"nick":"c4milo","date":"2013-10-30T05:11:26.889Z","type":"join"}
{"nick":"jcrugzz","message":"wolfeidau: so i got a core dump on a small little machine from node","date":"2013-10-30T05:12:04.968Z","type":"message"}
{"nick":"jcrugzz","message":"which cannot be processed on that 256mb machine","date":"2013-10-30T05:12:13.621Z","type":"message"}
{"nick":"jcrugzz","message":"cause when i try and run ::findjsobjects -v","date":"2013-10-30T05:12:21.564Z","type":"message"}
{"nick":"jcrugzz","message":"it never completes","date":"2013-10-30T05:12:23.804Z","type":"message"}
{"nick":"wolfeidau","message":"aha","date":"2013-10-30T05:12:29.321Z","type":"message"}
{"nick":"jcrugzz","message":"so","date":"2013-10-30T05:12:32.308Z","type":"message"}
{"nick":"jcrugzz","message":"i take this core dum","date":"2013-10-30T05:12:34.947Z","type":"message"}
{"nick":"wolfeidau","message":"This is what i am doing","date":"2013-10-30T05:12:40.758Z","type":"message"}
{"nick":"jcrugzz","message":"scp it on a bigger machine","date":"2013-10-30T05:12:42.707Z","type":"message"}
{"nick":"jcrugzz","message":"but get https://gist.github.com/jcrugzz/62a558a8da2a5bdda9a7 when i try and do ::load v8","date":"2013-10-30T05:12:56.651Z","type":"message"}
{"nick":"jcrugzz","message":"when on the small machine with the same smartos version and everything","date":"2013-10-30T05:13:18.369Z","type":"message"}
{"nick":"jcrugzz","message":"it loads perfectly fine","date":"2013-10-30T05:13:21.723Z","type":"message"}
{"nick":"wolfeidau","message":"are they both 64bit?","date":"2013-10-30T05:13:26.935Z","type":"message"}
{"nick":"jcrugzz","message":"yea","date":"2013-10-30T05:13:31.487Z","type":"message"}
{"nick":"wolfeidau","message":"and the same mdb version?","date":"2013-10-30T05:13:44.618Z","type":"message"}
{"nick":"jcrugzz","message":"core dump came from 32bit node version running on the 64bit machine","date":"2013-10-30T05:13:47.266Z","type":"message"}
{"nick":"wolfeidau","message":"ok","date":"2013-10-30T05:13:55.902Z","type":"message"}
{"nick":"wolfeidau","message":"Most of the stuff i have been doing is on 64 bit using one of tjfontaine updated v8 libs","date":"2013-10-30T05:14:21.872Z","type":"message"}
{"nick":"wolfeidau","message":"I normally start by running","date":"2013-10-30T05:14:40.900Z","type":"message"}
{"nick":"wolfeidau","message":"::findjsobjects ! sort -k2","date":"2013-10-30T05:14:49.315Z","type":"message"}
{"nick":"jcrugzz","message":"wolfeidau: id like to get my hands on that if you have a link","date":"2013-10-30T05:14:56.464Z","type":"message"}
{"nick":"jcrugzz","message":"id rather run it with 64bit node","date":"2013-10-30T05:15:04.924Z","type":"message"}
{"nick":"wolfeidau","message":"jcrugzz: You have to use the same arch i believe","date":"2013-10-30T05:15:20.850Z","type":"message"}
{"nick":"wolfeidau","message":"for the core dump, he has both 32 and 64","date":"2013-10-30T05:15:43.603Z","type":"message"}
{"nick":"c4milo","reason":"Ping timeout: 268 seconds","date":"2013-10-30T05:16:25.083Z","type":"quit"}
{"nick":"wolfeidau","message":"Just spinning up my vm to see if i still have teh URL","date":"2013-10-30T05:17:35.053Z","type":"message"}
{"nick":"jcrugzz","message":"wolfeidau: awesome thanks","date":"2013-10-30T05:18:26.335Z","type":"message"}
{"nick":"wolfeidau","message":"jcrugzz: commented on gist","date":"2013-10-30T05:20:52.590Z","type":"message"}
{"nick":"wolfeidau","message":":)","date":"2013-10-30T05:20:54.639Z","type":"message"}
{"nick":"wolfeidau","message":"jcrugzz: quite a version difference https://gist.github.com/wolfeidau/6882870#comment-925387","date":"2013-10-30T05:22:26.297Z","type":"message"}
{"nick":"ryandotsmith","date":"2013-10-30T05:23:05.066Z","type":"join"}
{"nick":"jcrugzz","message":"wolfeidau: you are the main","date":"2013-10-30T05:25:56.667Z","type":"message"}
{"nick":"jcrugzz","message":"man*","date":"2013-10-30T05:25:58.453Z","type":"message"}
{"nick":"jcrugzz","message":"and LOL","date":"2013-10-30T05:26:00.755Z","type":"message"}
{"nick":"jcrugzz","message":"wtf","date":"2013-10-30T05:26:02.585Z","type":"message"}
{"nick":"jcrugzz","message":"quite the difference indeed","date":"2013-10-30T05:26:09.782Z","type":"message"}
{"nick":"wolfeidau","message":"jcrugzz: Yeah the whole tracking releases thing with smartos mite be coming into play here","date":"2013-10-30T05:26:43.588Z","type":"message"}
{"nick":"wolfeidau","message":"I am running from a vm which i keep relatively up to date, but even that is not close to tjfontaine builds","date":"2013-10-30T05:27:16.952Z","type":"message"}
{"nick":"jcrugzz","message":"wolfeidau: newer smartos builds?","date":"2013-10-30T05:27:43.268Z","type":"message"}
{"nick":"wolfeidau","message":"if you run pkgin up i think it is you will see it points to a release directory","date":"2013-10-30T05:28:06.461Z","type":"message"}
{"nick":"wolfeidau","message":"jcrugzz: Like http://pkgsrc.joyent.com/packages/SmartOS/2013Q2/x86_64/All","date":"2013-10-30T05:28:54.792Z","type":"message"}
{"nick":"wolfeidau","message":"If you browse that tree you will see there are more recent snapshots","date":"2013-10-30T05:29:15.933Z","type":"message"}
{"nick":"wolfeidau","message":"I have no idea how it all works, I just nuke my zone and rebuild from a later image ever few months","date":"2013-10-30T05:30:43.461Z","type":"message"}
{"nick":"wolfeidau","message":"pkgin is a pretty robust and simple package manager","date":"2013-10-30T05:31:13.581Z","type":"message"}
{"nick":"wolfeidau","message":"so did that core load with the new library?","date":"2013-10-30T05:31:39.204Z","type":"message"}
{"nick":"jcrugzz","message":"wolfeidau: ahh interesting, and im multitasking a bit so i havent had the chance to try. doing a server migration xD ","date":"2013-10-30T05:32:49.121Z","type":"message"}
{"nick":"wolfeidau","message":"jcrugzz: haha opslife :)","date":"2013-10-30T05:33:07.845Z","type":"message"}
{"nick":"jcrugzz","message":"haha indeed!","date":"2013-10-30T05:33:25.202Z","type":"message"}
{"nick":"ryandotsmith","reason":"Remote host closed the connection","date":"2013-10-30T05:37:20.817Z","type":"quit"}
{"nick":"jcrugzz","message":"wolfeidau: but thanks a bunch for the info, i may ping you later when i have the chance to use it ;)","date":"2013-10-30T05:37:21.816Z","type":"message"}
{"nick":"wolfeidau","message":"jcrugzz: np I am but a novice, but i have gleaned a few commands :)","date":"2013-10-30T05:38:00.780Z","type":"message"}
{"nick":"jcrugzz","message":"gotta start somewhere! :)","date":"2013-10-30T05:38:14.011Z","type":"message"}
{"nick":"wolfeidau","message":"jcrugzz: indeed :)","date":"2013-10-30T05:38:24.034Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-10-30T05:47:24.694Z","type":"quit"}
{"nick":"loladiro","date":"2013-10-30T05:52:18.076Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-10-30T05:53:37.705Z","type":"quit"}
{"nick":"abraxas","date":"2013-10-30T06:04:17.961Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 272 seconds","date":"2013-10-30T06:21:15.732Z","type":"quit"}
{"nick":"julianduque","date":"2013-10-30T06:22:36.545Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 264 seconds","date":"2013-10-30T06:29:16.401Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #294 \u00037UNSTABLE\u000f windows-ia32 (10/603) windows-x64 (10/603) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/294/","date":"2013-10-30T06:41:02.286Z","type":"message"}
{"nick":"FROGGS","reason":"Ping timeout: 272 seconds","date":"2013-10-30T06:41:31.730Z","type":"quit"}
{"nick":"FROGGS","date":"2013-10-30T06:53:14.797Z","type":"join"}
{"nick":"c4milo","date":"2013-10-30T07:00:20.062Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 245 seconds","date":"2013-10-30T07:04:36.637Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-10-30T07:14:37.864Z","type":"quit"}
{"nick":"rendar","date":"2013-10-30T07:15:33.731Z","type":"join"}
{"nick":"skabbes","reason":"Quit: skabbes","date":"2013-10-30T07:57:40.312Z","type":"quit"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2013-10-30T08:02:39.860Z","type":"quit"}
{"nick":"paddybyers","date":"2013-10-30T08:05:13.165Z","type":"join"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2013-10-30T08:16:10.886Z","type":"quit"}
{"nick":"indutny","message":"heya","date":"2013-10-30T08:24:44.258Z","type":"message"}
{"nick":"indutny","message":"morning","date":"2013-10-30T08:24:45.976Z","type":"message"}
{"nick":"mraleph1","reason":"Ping timeout: 246 seconds","date":"2013-10-30T08:31:28.926Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Fedor Indutny\u000f \u00037v0.10\u000f * \u000229fdb34\u0002 : unix: update events from pevents between polls - http://git.io/21nIUw","date":"2013-10-30T08:40:58.311Z","type":"message"}
{"nick":"mraleph","date":"2013-10-30T08:45:00.155Z","type":"join"}
{"nick":"c4milo","date":"2013-10-30T08:49:04.775Z","type":"join"}
{"nick":"mmalecki","message":"indutny: morning Fedor. how're you?","date":"2013-10-30T08:50:35.542Z","type":"message"}
{"nick":"indutny","message":"morning mmalecki","date":"2013-10-30T08:50:44.270Z","type":"message"}
{"nick":"indutny","message":"still good :P","date":"2013-10-30T08:50:46.753Z","type":"message"}
{"nick":"indutny","message":"how are you?","date":"2013-10-30T08:50:47.724Z","type":"message"}
{"nick":"indutny","message":"writing test for the commit above","date":"2013-10-30T08:50:58.809Z","type":"message"}
{"nick":"hz","date":"2013-10-30T08:53:06.163Z","type":"join"}
{"nick":"mmalecki","message":"indutny: good too! nice commit you have there","date":"2013-10-30T08:53:20.152Z","type":"message"}
{"nick":"c4milo","reason":"Ping timeout: 268 seconds","date":"2013-10-30T08:54:06.084Z","type":"quit"}
{"nick":"hz","date":"2013-10-30T09:03:43.828Z","type":"quit"}
{"nick":"SquirrelCZECH_","message":"saghul: tip tap? can I bother you with something? :-) do you think it would be able to create additional handler to \"pyuv\" in python?","date":"2013-10-30T09:07:16.990Z","type":"message"}
{"nick":"saghul","message":"SquirrelCZECH_ define \"additional handler\"","date":"2013-10-30T09:07:43.403Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"saghul: for example \"Serial handler\" which would make \"PySerial\" work like \"pyuv-handler\"","date":"2013-10-30T09:08:11.545Z","type":"message"}
{"nick":"saghul","message":"you shouldn't need to create a handler, I think sing a TTY handler would work","date":"2013-10-30T09:08:50.902Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"aaaah","date":"2013-10-30T09:09:55.513Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"saghul: my bad! :D","date":"2013-10-30T09:10:02.979Z","type":"message"}
{"nick":"saghul","message":"no problem :-)","date":"2013-10-30T09:10:17.837Z","type":"message"}
{"nick":"paddybyers","date":"2013-10-30T09:10:32.071Z","type":"join"}
{"nick":"SquirrelCZECH_","message":"saghul: it didn't worked for me yestrday","date":"2013-10-30T09:10:48.124Z","type":"message"}
{"nick":"saghul","message":"how did you try?","date":"2013-10-30T09:11:01.777Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"but today I noticed that I've got wires on \"usb serial adapters\" wrong","date":"2013-10-30T09:11:05.619Z","type":"message"}
{"nick":"saghul","message":"else try a Pipe handle","date":"2013-10-30T09:11:08.389Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"saghul: ttyUSB1 -> ttyUSB2 :-)","date":"2013-10-30T09:11:16.028Z","type":"message"}
{"nick":"saghul","message":"I meant the code :-)","date":"2013-10-30T09:11:25.103Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"saghul: oh... what exactly now? :D","date":"2013-10-30T09:13:41.765Z","type":"message"}
{"nick":"SquirrelCZECH_","action":"uses \"serial\" instance to get file description ant than let's pyuv.TTY do it's work","date":"2013-10-30T09:14:07.561Z","type":"action"}
{"nick":"SquirrelCZECH_","message":"saghul: http://pastebin.com/yXPb7tpx this is the way I wanted to make it work","date":"2013-10-30T09:15:59.930Z","type":"message"}
{"nick":"saghul","message":"yes, that should work","date":"2013-10-30T09:16:51.964Z","type":"message"}
{"nick":"saghul","message":"doesn't it? any exception?","date":"2013-10-30T09:17:00.296Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"saghul: still problem with hardware I test it on","date":"2013-10-30T09:18:23.281Z","type":"message"}
{"nick":"saghul","message":"SquirrelCZECH_I can't fix that one from here ;-) good luck!","date":"2013-10-30T09:18:43.623Z","type":"message"}
{"nick":"hz","date":"2013-10-30T09:18:52.453Z","type":"join"}
{"nick":"SquirrelCZECH_","message":"saghul: yep, it works now! :D","date":"2013-10-30T09:19:17.655Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"saghul: you got great piece of code btw! :D","date":"2013-10-30T09:19:25.174Z","type":"message"}
{"nick":"saghul","message":"thanks!","date":"2013-10-30T09:19:58.755Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"saghul: btw: did you ever tried performance test vs twisted?","date":"2013-10-30T09:20:46.212Z","type":"message"}
{"nick":"SquirrelCZECH_","action":"hates when he asks something on #python, mentions that he uses pyuv and it's always the same","date":"2013-10-30T09:21:17.473Z","type":"action"}
{"nick":"SquirrelCZECH_","message":"\"why don't you use twisted instead?\"","date":"2013-10-30T09:21:24.134Z","type":"message"}
{"nick":"saghul","message":"nope","date":"2013-10-30T09:21:28.508Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"P.S: I personally hate when one library tries to do things from socket to http server! P.P.S: I also hate when 99% use only one thing on solving something","date":"2013-10-30T09:21:58.685Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"saghul: maybe I will force myself one day :-)","date":"2013-10-30T09:22:13.388Z","type":"message"}
{"nick":"saghul","message":"well, you can have the best of both worlds: https://github.com/saghul/twisted-pyuv :-)","date":"2013-10-30T09:22:16.171Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"wow :D","date":"2013-10-30T09:22:49.452Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"saghul: but this is the place to test performance I would say :-P :-)","date":"2013-10-30T09:22:57.980Z","type":"message"}
{"nick":"SquirrelCZECH_","message":"saghul: thanks, I just love and live with pyuv","date":"2013-10-30T09:23:08.754Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-10-30T09:45:00.071Z","type":"join"}
{"nick":"karupanerura","new_nick":"zz_karupanerura","date":"2013-10-30T09:45:51.196Z","type":"nick"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-30T09:59:53.323Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-30T10:00:20.621Z","type":"join"}
{"nick":"kuebk","date":"2013-10-30T10:03:37.897Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-10-30T10:05:16.334Z","type":"quit"}
{"nick":"kuebk","message":"hello","date":"2013-10-30T10:09:27.085Z","type":"message"}
{"nick":"kuebk","message":"anyone here can help me with npm?","date":"2013-10-30T10:09:31.998Z","type":"message"}
{"nick":"kuebk","message":"i can't unpublish nor publish --force","date":"2013-10-30T10:09:57.862Z","type":"message"}
{"nick":"kuebk","message":":(","date":"2013-10-30T10:09:58.526Z","type":"message"}
{"nick":"bnoordhuis","message":"kuebk: not really on topic for #Libuv","date":"2013-10-30T10:14:42.292Z","type":"message"}
{"nick":"kuebk","message":"yea i know","date":"2013-10-30T10:15:00.152Z","type":"message"}
{"nick":"kuebk","message":"but everytime i ask unusual question on #node.js","date":"2013-10-30T10:15:29.335Z","type":"message"}
{"nick":"kuebk","message":"i don't get answer","date":"2013-10-30T10:15:32.486Z","type":"message"}
{"nick":"bnoordhuis","message":"that's irc for you","date":"2013-10-30T10:16:25.955Z","type":"message"}
{"nick":"kuebk","message":";>","date":"2013-10-30T10:19:36.694Z","type":"message"}
{"nick":"DarkGod","date":"2013-10-30T10:31:47.410Z","type":"join"}
{"nick":"DarkGod","message":"Hi, how should one correctly copy an uv_tcp_t in C? I mean I have two structs like that: struct foo { ... uv_tcp_t sock; ... } and I want to copy sock from one to the other. I tried a simple sock = sock copy; I tried to memcpy with the size given by uv_handle_size(UV_TCP); yet nothing works; when I try to use uv_write on the copy it complains with an assert on req->handle == stream","date":"2013-10-30T10:34:13.057Z","type":"message"}
{"nick":"DarkGod","message":"am I missing something terribly obvious ?","date":"2013-10-30T10:34:26.182Z","type":"message"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-10-30T10:34:51.967Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-30T10:37:59.830Z","type":"join"}
{"nick":"zot1","date":"2013-10-30T10:38:56.591Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 245 seconds","date":"2013-10-30T10:42:30.129Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1570 \u00037UNSTABLE\u000f smartos-x64 (4/603) smartos-ia32 (4/603) linux-x64 (1/603) linux-ia32 (1/603) http://jenkins.nodejs.org/job/nodejs-v0.10/1570/","date":"2013-10-30T10:48:28.706Z","type":"message"}
{"nick":"bnoordhuis","message":"DarkGod: in a nutshell, you can't","date":"2013-10-30T10:52:52.834Z","type":"message"}
{"nick":"bnoordhuis","message":"DarkGod: if you want to clone the socket, you have to jump through some hoops","date":"2013-10-30T10:53:01.526Z","type":"message"}
{"nick":"DarkGod","message":"it's not realyl clone, the firzst struct would never be used again","date":"2013-10-30T10:53:35.854Z","type":"message"}
{"nick":"DarkGod","message":"I just need totransfer the sockto a new struct","date":"2013-10-30T10:53:42.737Z","type":"message"}
{"nick":"bnoordhuis","message":"DarkGod: that won't work either. the uv_tcp_t is part of libuv's internal data structures","date":"2013-10-30T10:54:38.173Z","type":"message"}
{"nick":"DarkGod","message":"you mean it keeps track of the actual memory address of it ? so the clone is not correctly recognized ?","date":"2013-10-30T10:56:46.961Z","type":"message"}
{"nick":"bnoordhuis","message":"correct","date":"2013-10-30T10:57:48.219Z","type":"message"}
{"nick":"DarkGod","message":"damn ..","date":"2013-10-30T10:58:15.949Z","type":"message"}
{"nick":"DarkGod","message":"so I must make it a pointer in my structs so I can just copy the pointer I suppose","date":"2013-10-30T10:58:56.542Z","type":"message"}
{"nick":"rendar","message":"as i can see from libuv srcs, the async wait for a process completion consists on repeatdly call of waitpid with WNOHANG, right? but i can't get how libuv can map the just finished pid to the process_t* object in order to call exit_cb","date":"2013-10-30T11:01:26.214Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: it looks up the associated handle in a red-black tree","date":"2013-10-30T11:03:42.664Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, i see, why not an hash table?","date":"2013-10-30T11:03:57.597Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: subject to change though, the current implementation is not quite optimal","date":"2013-10-30T11:03:58.728Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, hmm there is a better way to map that?","date":"2013-10-30T11:04:16.753Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: turn that question around: why a hash table? :)","date":"2013-10-30T11:04:20.805Z","type":"message"}
{"nick":"rendar","message":"eheheh i see","date":"2013-10-30T11:04:31.410Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, so basically the solution is polling waitpid with WNOHANG","date":"2013-10-30T11:04:58.389Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, but wouldn't this bring cpu use of 100% for that thread?","date":"2013-10-30T11:05:17.142Z","type":"message"}
{"nick":"bnoordhuis","message":"no, because we only call waitpid() when we get a SIGCHLD","date":"2013-10-30T11:05:32.972Z","type":"message"}
{"nick":"rendar","message":"oh ok","date":"2013-10-30T11:05:48.691Z","type":"message"}
{"nick":"rendar","message":"so uv_child() is called fromt he SIGCHLD handler","date":"2013-10-30T11:06:19.444Z","type":"message"}
{"nick":"bnoordhuis","message":"not directly","date":"2013-10-30T11:06:29.365Z","type":"message"}
{"nick":"rendar","message":"yep","date":"2013-10-30T11:06:57.429Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, of course is needed a separate thread for that","date":"2013-10-30T11:07:14.642Z","type":"message"}
{"nick":"bnoordhuis","message":"no, not really. the signal handler writes to a pipe which in turn wakes up any event loops that are interested in the signal","date":"2013-10-30T11:07:50.890Z","type":"message"}
{"nick":"bnoordhuis","message":"but like i said, the above is all subject to change :)","date":"2013-10-30T11:08:02.336Z","type":"message"}
{"nick":"rendar","message":"hmm i see","date":"2013-10-30T11:08:12.260Z","type":"message"}
{"nick":"zot1","reason":"Quit: Leaving.","date":"2013-10-30T11:08:21.346Z","type":"quit"}
{"nick":"rendar","message":"bnoordhuis, time ago for a project i did use this method: all threads with signals blocked, only 1 thread could catch SIGCHLD, then waiting for a pipe to read commands, the commands were add_pid, or wakeup, then the thread did sleep on read(), when SIGCHLD arrived it calls waitpid(-1,...) and map the pid to a callback","date":"2013-10-30T11:10:07.385Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: yeah, that works","date":"2013-10-30T11:10:48.393Z","type":"message"}
{"nick":"bnoordhuis","message":"but we can do better","date":"2013-10-30T11:10:54.973Z","type":"message"}
{"nick":"zot1","date":"2013-10-30T11:10:55.410Z","type":"join"}
{"nick":"rendar","message":"bnoordhuis, hmmm, how that can be done better?","date":"2013-10-30T11:11:19.184Z","type":"message"}
{"nick":"bnoordhuis","message":"for instance, the siginfo_t struct that gets passed to your signal handler has the pid in the si_pid field","date":"2013-10-30T11:11:23.717Z","type":"message"}
{"nick":"rendar","message":"oh","date":"2013-10-30T11:11:35.378Z","type":"message"}
{"nick":"rendar","message":"so you don't need to call waitpid(-1","date":"2013-10-30T11:11:51.667Z","type":"message"}
{"nick":"rendar","message":"for example","date":"2013-10-30T11:11:55.047Z","type":"message"}
{"nick":"bnoordhuis","message":"exactly","date":"2013-10-30T11:11:56.509Z","type":"message"}
{"nick":"bnoordhuis","message":"that's something of a bug in libuv right now","date":"2013-10-30T11:12:13.180Z","type":"message"}
{"nick":"bnoordhuis","message":"if you have multiple uv_signal_t watchers that listen for SIGCHLD","date":"2013-10-30T11:12:26.477Z","type":"message"}
{"nick":"rendar","message":"the point is: how you can get siginfo_t from your signal handler, if the signal handler receive only a int as a prameter?","date":"2013-10-30T11:12:34.982Z","type":"message"}
{"nick":"bnoordhuis","message":"then libuv will consume all waitpid() events before the other watchers get a chance","date":"2013-10-30T11:12:47.336Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: SA_SIGACTION :)","date":"2013-10-30T11:12:58.167Z","type":"message"}
{"nick":"bnoordhuis","message":"er, SA_SIGINFO","date":"2013-10-30T11:13:10.970Z","type":"message"}
{"nick":"bnoordhuis","message":"and call sigaction() instead of signal()","date":"2013-10-30T11:13:20.219Z","type":"message"}
{"nick":"bnoordhuis","message":"was typing too fast :)","date":"2013-10-30T11:13:29.999Z","type":"message"}
{"nick":"rendar","message":"oh right! i remember..i knew that","date":"2013-10-30T11:13:34.018Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, but my point is: if an user who use libuv create a new thread, how we can assure that thread won't receive SIGCHLDs?","date":"2013-10-30T11:15:03.008Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: you don't unless you block it with pthread_sigmask()","date":"2013-10-30T11:16:54.022Z","type":"message"}
{"nick":"bnoordhuis","message":"that's up to the user","date":"2013-10-30T11:17:15.046Z","type":"message"}
{"nick":"rendar","message":"hmm i see","date":"2013-10-30T11:17:36.977Z","type":"message"}
{"nick":"bnoordhuis","message":"it doesn't really matter though because signal handlers are global to the process, not local to the thread","date":"2013-10-30T11:17:45.317Z","type":"message"}
{"nick":"rendar","message":"yeah, but libuv's thread know how to manage a SIGCHLD, a random user thread don't, and the signal is lost, losing the process completion, right?","date":"2013-10-30T11:18:25.046Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: no, because the signal handler is global. it doesn't matter on which thread the signal is delivered, libuv's signal handler will catch it anyway","date":"2013-10-30T11:25:41.730Z","type":"message"}
{"nick":"rendar","message":"oh, ok","date":"2013-10-30T11:27:01.726Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, of course if we have more threads completing SIGCHLD, there will be a lock for that rb-tree or hash map structure ","date":"2013-10-30T11:27:41.236Z","type":"message"}
{"nick":"bnoordhuis","message":"that's correct","date":"2013-10-30T11:28:55.192Z","type":"message"}
{"nick":"bnoordhuis","message":"completely different subject, gettimeofday(3) is supposed to call __vdso_gettimeofday() when available","date":"2013-10-30T11:29:40.489Z","type":"message"}
{"nick":"bnoordhuis","message":"which it is - but glibc is still making the SYS_gettimeofday system call","date":"2013-10-30T11:30:05.359Z","type":"message"}
{"nick":"bnoordhuis","message":"and i'm not sure why...","date":"2013-10-30T11:30:21.320Z","type":"message"}
{"nick":"rendar","message":"hmm whats that __vdso should mean?","date":"2013-10-30T11:31:31.220Z","type":"message"}
{"nick":"bnoordhuis","message":"it's basically a page (or two pages) of kernel memory that's mapped into the process's address space","date":"2013-10-30T11:32:00.188Z","type":"message"}
{"nick":"bnoordhuis","message":"it's a teeny tiny elf library with fast wrappers for common functionality","date":"2013-10-30T11:32:28.209Z","type":"message"}
{"nick":"rendar","message":"i see","date":"2013-10-30T11:33:27.276Z","type":"message"}
{"nick":"bnoordhuis","message":"__vdso_gettimeofday() is supposed to read out the kernel's timestamp counter (which is also mapped into the vdso) instead of making a syscall","date":"2013-10-30T11:33:38.297Z","type":"message"}
{"nick":"bnoordhuis","message":"but it's still making the syscall...","date":"2013-10-30T11:33:50.690Z","type":"message"}
{"nick":"rendar","message":"oh, isn't that vdso that memory page which is shared across processes and contain also the routine to make syscalls switch to kernel mode? iirc :)","date":"2013-10-30T11:34:26.833Z","type":"message"}
{"nick":"bnoordhuis","message":"kind of. you don't need the vdso to make syscalls, that's what int $0x80 and the sysenter/syscall instructions are for","date":"2013-10-30T11:35:11.060Z","type":"message"}
{"nick":"bnoordhuis","message":"actually, the vdso's purpose is to avoid making some syscalls altogether :)","date":"2013-10-30T11:35:45.990Z","type":"message"}
{"nick":"rendar","message":"yeah right, but i remember that the routine which finally accomplish int 0x80; was in the vsdo shared memory, but maybe i remember wrongly","date":"2013-10-30T11:36:12.176Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, i see","date":"2013-10-30T11:36:38.144Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, so __vdso_gettimeofday() is getting called but it determines that the timestamp counter is unreliable and falls back to making the syscall","date":"2013-10-30T11:39:21.680Z","type":"message"}
{"nick":"bnoordhuis","message":"it's amusing that you can actually put a breakpoint on it with `break __vdso_gettimeofday`","date":"2013-10-30T11:39:46.138Z","type":"message"}
{"nick":"bnoordhuis","message":"well done, gdb developers","date":"2013-10-30T11:39:59.787Z","type":"message"}
{"nick":"rendar","message":"yeah very cool","date":"2013-10-30T11:40:40.396Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, thats because it is treated as a normal code memory page, of the actual process","date":"2013-10-30T11:41:00.640Z","type":"message"}
{"nick":"rendar","message":"i guess","date":"2013-10-30T11:41:02.085Z","type":"message"}
{"nick":"bnoordhuis","message":"i suppose so. it's for all practical purposes a valid elf library, but one that only exists in memory","date":"2013-10-30T11:41:37.309Z","type":"message"}
{"nick":"bnoordhuis","message":"i wonder if gdb somehow hooks into the dynamic loader","date":"2013-10-30T11:41:44.668Z","type":"message"}
{"nick":"bnoordhuis","message":"anyway, i guess the conclusion is that clock_gettime(CLOCK_MONOTONIC_COARSE) > gettimeofday() because the former gets serviced inside the vdso","date":"2013-10-30T11:42:34.029Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, thats interesting how if you can change the vdso library you can hook *ALL* the syscalls of the system of all processes :)","date":"2013-10-30T11:42:45.784Z","type":"message"}
{"nick":"bnoordhuis","message":"now to patch libuv and v8","date":"2013-10-30T11:42:46.279Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: no, no - it only contains wrappers for a handful of syscalls","date":"2013-10-30T11:43:05.411Z","type":"message"}
{"nick":"rendar","message":"ok","date":"2013-10-30T11:43:12.714Z","type":"message"}
{"nick":"rendar","message":"so  clock_gettime(CLOCK_MONOTONIC_COARSE) should be used instead of gettimeofday() :)","date":"2013-10-30T11:43:46.231Z","type":"message"}
{"nick":"bnoordhuis","message":"if you turn off aslr, then you can dump the vdso with e.g. xxd and see for yourself","date":"2013-10-30T11:43:58.966Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, very interesting, yeah","date":"2013-10-30T11:44:11.786Z","type":"message"}
{"nick":"bnoordhuis","message":"because i'm a nice guy:","date":"2013-10-30T11:44:31.053Z","type":"message"}
{"nick":"bnoordhuis","message":"0000260: 1600 0000 0000 0000 005f 5f76 6473 6f5f 636c 6f63 6b5f 6765 7474 696d 6500 5f5f  .........__vdso_clock_gettime.__","date":"2013-10-30T11:44:31.346Z","type":"message"}
{"nick":"bnoordhuis","message":"0000280: 7664 736f 5f67 6574 7469 6d65 6f66 6461 7900 5f5f 7664 736f 5f74 696d 6500 5f5f  vdso_gettimeofday.__vdso_time.__","date":"2013-10-30T11:44:34.561Z","type":"message"}
{"nick":"bnoordhuis","message":"00002a0: 7664 736f 5f67 6574 6370 7500 6c69 6e75 782d 7664 736f 2e73 6f2e 3100 4c49 4e55  vdso_getcpu.linux-vdso.so.1.LINU","date":"2013-10-30T11:44:37.567Z","type":"message"}
{"nick":"bnoordhuis","message":"00002c0: 585f 322e 3600 0000 0000 0200 0200 0200 0200 0200 0200 0200 0200 0200 0000 0000  X_2.6...........................","date":"2013-10-30T11:44:40.576Z","type":"message"}
{"nick":"rendar","message":"lol! :)","date":"2013-10-30T11:45:16.203Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, yeah grouping those apis like clock_gettime which returns a system-wide global value (like the time, or ticks or clocks or whatever) in a shared memory makes sense indeed, but i cannot understand why gettimeofday() is not serivced there, i guess for a mistake","date":"2013-10-30T11:47:39.284Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah. i think i'm going to try it on one or two more systems","date":"2013-10-30T11:50:02.198Z","type":"message"}
{"nick":"bnoordhuis","message":"my fedora box is running 3.10 which is ancient history by now, of course","date":"2013-10-30T11:50:23.171Z","type":"message"}
{"nick":"bnoordhuis","action":"switches machines","date":"2013-10-30T11:50:50.043Z","type":"action"}
{"nick":"bnoordhu1s","date":"2013-10-30T11:53:16.230Z","type":"join"}
{"nick":"bnoordhu1s","message":"the balmy if volatile goodness of 3.12-rc6","date":"2013-10-30T11:53:53.655Z","type":"message"}
{"nick":"bnoordhu1s","message":"at least video works again. -rc2 pretty much broke the world","date":"2013-10-30T11:54:16.313Z","type":"message"}
{"nick":"bnoordhu1s","message":"okay, back to work","date":"2013-10-30T11:54:18.709Z","type":"message"}
{"nick":"rendar","message":"eheh :-)","date":"2013-10-30T11:54:24.833Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 268 seconds","date":"2013-10-30T11:55:24.167Z","type":"quit"}
{"nick":"bnoordhu1s","new_nick":"bnoordhuis","date":"2013-10-30T11:56:36.536Z","type":"nick"}
{"nick":"bnoordhuis","message":"interesting... on this system, it does use the vdso...","date":"2013-10-30T11:56:47.530Z","type":"message"}
{"nick":"rendar","message":"maybe the bug has been adjusted","date":"2013-10-30T11:59:30.702Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess it's possible","date":"2013-10-30T12:00:09.666Z","type":"message"}
{"nick":"bnoordhuis","message":"the vdso does a 'is the timestamp reliable?' check","date":"2013-10-30T12:00:26.077Z","type":"message"}
{"nick":"bnoordhuis","message":"i suppose it's possible that on my fedora machine said check fails often or always. it's a relatively old and underpowered system","date":"2013-10-30T12:01:12.768Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: disassable either __vdso_gettimeofday or gettimeofday and compare?","date":"2013-10-30T12:01:13.096Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: you think i haven't already stepped through it? :)","date":"2013-10-30T12:01:31.920Z","type":"message"}
{"nick":"bnoordhuis","message":"challenge me again and i'll dump the full assembly output here!","date":"2013-10-30T12:01:53.239Z","type":"message"}
{"nick":"Kakera_","date":"2013-10-30T12:02:06.930Z","type":"join"}
{"nick":"mmalecki","message":"bnoordhuis: haha, just out of curiosity, how long is it?","date":"2013-10-30T12:02:23.392Z","type":"message"}
{"nick":"bnoordhuis","message":"what's interesting is that it's also making the syscall when i run it in a vm","date":"2013-10-30T12:02:31.565Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: about 100-150 lines","date":"2013-10-30T12:02:42.346Z","type":"message"}
{"nick":"bnoordhuis","message":"the c source in arch/x86/vdso is ~15 lines","date":"2013-10-30T12:03:01.578Z","type":"message"}
{"nick":"zot1","reason":"Quit: Leaving.","date":"2013-10-30T12:04:36.890Z","type":"quit"}
{"nick":"zot1","date":"2013-10-30T12:07:55.380Z","type":"join"}
{"nick":"bnoordhuis","message":"huzzah! https://github.com/bnoordhuis/v8/compare/v8:master...clock-monotonic-coarse","date":"2013-10-30T12:17:56.564Z","type":"message"}
{"nick":"mcavage_","date":"2013-10-30T12:22:48.091Z","type":"join"}
{"nick":"mcavage","reason":"Read error: Connection reset by peer","date":"2013-10-30T12:22:49.053Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-30T12:26:54.220Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 248 seconds","date":"2013-10-30T12:31:33.739Z","type":"quit"}
{"nick":"SquirrelCZECH_","date":"2013-10-30T12:31:38.235Z","type":"quit"}
{"nick":"SquirrelCZECH","date":"2013-10-30T12:32:18.196Z","type":"join"}
{"nick":"bnoordhuis","message":"for posterity and/or future reference: https://codereview.chromium.org/51333007/","date":"2013-10-30T12:33:39.396Z","type":"message"}
{"nick":"abraxas","date":"2013-10-30T12:35:35.107Z","type":"join"}
{"nick":"FROGGS","reason":"Read error: Connection reset by peer","date":"2013-10-30T12:38:14.031Z","type":"quit"}
{"nick":"abraxas","reason":"Ping timeout: 240 seconds","date":"2013-10-30T12:40:08.301Z","type":"quit"}
{"nick":"FROGGS","date":"2013-10-30T12:40:37.403Z","type":"join"}
{"nick":"SquirrelCZECH","message":"hi folks","date":"2013-10-30T12:54:26.994Z","type":"message"}
{"nick":"SquirrelCZECH","message":"what do you use for data compression?","date":"2013-10-30T12:54:31.885Z","type":"message"}
{"nick":"SquirrelCZECH","action":"sends data over network in     key:data format","date":"2013-10-30T12:54:42.639Z","type":"action"}
{"nick":"SquirrelCZECH","message":"and keys repeat a lot","date":"2013-10-30T12:54:45.689Z","type":"message"}
{"nick":"bnoordhuis","message":"SquirrelCZECH: zlib?","date":"2013-10-30T12:55:30.626Z","type":"message"}
{"nick":"bnoordhuis","message":"you can set a fixed dictionary if you have one","date":"2013-10-30T12:55:47.966Z","type":"message"}
{"nick":"bnoordhuis","message":"like spdy does","date":"2013-10-30T12:55:52.789Z","type":"message"}
{"nick":"SquirrelCZECH","message":"yep","date":"2013-10-30T12:58:59.571Z","type":"message"}
{"nick":"SquirrelCZECH","message":"bnoordhuis: thinking about it","date":"2013-10-30T12:59:03.559Z","type":"message"}
{"nick":"FROGGS","reason":"Read error: Connection reset by peer","date":"2013-10-30T13:01:04.489Z","type":"quit"}
{"nick":"bnoordhu1s","date":"2013-10-30T13:01:12.974Z","type":"join"}
{"nick":"FROGGS","date":"2013-10-30T13:01:39.548Z","type":"join"}
{"nick":"indutny","message":"bnoordhu1s: P","date":"2013-10-30T13:02:49.564Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: MONOTONIC!!!!!","date":"2013-10-30T13:02:58.833Z","type":"message"}
{"nick":"bnoordhu1s","reason":"Ping timeout: 246 seconds","date":"2013-10-30T13:05:31.908Z","type":"quit"}
{"nick":"zot1","reason":"Quit: Leaving.","date":"2013-10-30T13:08:46.024Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: i found an amusing bug in libuv actually","date":"2013-10-30T13:14:14.539Z","type":"message"}
{"nick":"bnoordhuis","message":"we assume in some places that two successive calls to uv__hrtime() will produce different values","date":"2013-10-30T13:14:40.231Z","type":"message"}
{"nick":"bnoordhuis","message":"which is now not always the case any more","date":"2013-10-30T13:15:10.338Z","type":"message"}
{"nick":"bnoordhuis","message":"pretty trivial to fix in libuv but i wonder if node is susceptible to the same issue","date":"2013-10-30T13:15:31.887Z","type":"message"}
{"nick":"loladiro","date":"2013-10-30T13:16:30.544Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-10-30T13:16:51.834Z","type":"quit"}
{"nick":"hz","date":"2013-10-30T13:25:12.947Z","type":"quit"}
{"nick":"indutny","message":"bnoordhuis: haha","date":"2013-10-30T13:28:28.537Z","type":"message"}
{"nick":"indutny","message":"nice","date":"2013-10-30T13:28:30.126Z","type":"message"}
{"nick":"indutny","message":"I'll finish up merging PRs later today","date":"2013-10-30T13:28:38.292Z","type":"message"}
{"nick":"indutny","message":"was doing completely different stuff all day","date":"2013-10-30T13:28:46.835Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2013-10-30T13:28:47.561Z","type":"message"}
{"nick":"indutny","message":"ttys","date":"2013-10-30T13:28:53.434Z","type":"message"}
{"nick":"AvianFlu","date":"2013-10-30T13:33:55.057Z","type":"join"}
{"nick":"kaeso","reason":"Read error: Operation timed out","date":"2013-10-30T13:43:34.694Z","type":"quit"}
{"nick":"kaeso","date":"2013-10-30T13:43:45.931Z","type":"join"}
{"nick":"kaeso","reason":"Client Quit","date":"2013-10-30T13:45:36.105Z","type":"quit"}
{"nick":"kaeso","date":"2013-10-30T13:46:07.097Z","type":"join"}
{"nick":"zot1","date":"2013-10-30T13:55:34.768Z","type":"join"}
{"nick":"c4milo","date":"2013-10-30T14:15:47.864Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 246 seconds","date":"2013-10-30T14:20:33.518Z","type":"quit"}
{"nick":"pachet","date":"2013-10-30T14:21:19.902Z","type":"join"}
{"nick":"pachet","reason":"Changing host","date":"2013-10-30T14:21:19.902Z","type":"quit"}
{"nick":"pachet","date":"2013-10-30T14:21:19.902Z","type":"join"}
{"nick":"zot1","reason":"Ping timeout: 248 seconds","date":"2013-10-30T14:35:49.804Z","type":"quit"}
{"nick":"abraxas","date":"2013-10-30T14:36:53.897Z","type":"join"}
{"nick":"c4milo","date":"2013-10-30T14:38:33.376Z","type":"join"}
{"nick":"DarkGod","message":"silly question but still: callbacks from libuv (in this case the read callback of a tcp stream) happen in the thread that created them: libuv doesnt make a thread behind my back and invokes my CB from it, right ?","date":"2013-10-30T14:39:16.591Z","type":"message"}
{"nick":"abraxas","reason":"Ping timeout: 256 seconds","date":"2013-10-30T14:41:24.257Z","type":"quit"}
{"nick":"Domenic_","message":"isaacs: there are some constituents in this revamped-web-streams discussion who are pretty insistent on having binary streams be only a special case of obejct streams (which they conceptualize as RxJS-like observables). Thoughts?","date":"2013-10-30T14:51:49.171Z","type":"message"}
{"nick":"bnoordhuis","message":"DarkGod: correct","date":"2013-10-30T14:58:25.985Z","type":"message"}
{"nick":"julianduque","date":"2013-10-30T15:03:33.908Z","type":"join"}
{"nick":"dddtest_97403","date":"2013-10-30T15:17:07.779Z","type":"join"}
{"nick":"rendar","message":"bnoordhuis, can libuv do timed wait for a process?","date":"2013-10-30T15:17:38.096Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, i saw thats painful on uni","date":"2013-10-30T15:17:45.762Z","type":"message"}
{"nick":"rendar","message":"unix*","date":"2013-10-30T15:17:47.742Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: not possible. it's async all the way, baby","date":"2013-10-30T15:18:10.373Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, eheh yeah","date":"2013-10-30T15:18:27.867Z","type":"message"}
{"nick":"indexzero","date":"2013-10-30T15:18:50.763Z","type":"join"}
{"nick":"rendar","message":"bnoordhuis, btw, just for the sake of discussing, what about a cond.var. signalled on SIGCHLD completion? then another thread could wait (or timed wait) on that cond.var.","date":"2013-10-30T15:19:07.566Z","type":"message"}
{"nick":"rendar","message":"s/signaled/broadcasted/","date":"2013-10-30T15:19:22.034Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: you can't use condvars in signal handlers","date":"2013-10-30T15:19:28.786Z","type":"message"}
{"nick":"bnoordhuis","message":"only sem_post() is async signal-safe iirc","date":"2013-10-30T15:20:02.550Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #655 \u00037UNSTABLE\u000f osx-x64 (1/654) smartos-ia32 (6/654) linux-x64 (1/654) smartos-x64 (7/654) osx-ia32 (1/654) http://jenkins.nodejs.org/job/nodejs-master/655/","date":"2013-10-30T15:20:05.763Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, gotta run. biab","date":"2013-10-30T15:20:08.432Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, ok bye :)","date":"2013-10-30T15:20:14.698Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-30T15:21:00.188Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-30T15:21:35.551Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 264 seconds","date":"2013-10-30T15:26:16.359Z","type":"quit"}
{"nick":"kuebk","reason":"Quit: Leaving.","date":"2013-10-30T15:29:30.210Z","type":"quit"}
{"nick":"36DABNT8G","date":"2013-10-30T15:31:49.334Z","type":"join"}
{"nick":"36DABNT8G","reason":"K-Lined","date":"2013-10-30T15:32:09.699Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-10-30T15:32:14.079Z","type":"join"}
{"nick":"c4milo","date":"2013-10-30T15:34:09.377Z","type":"join"}
{"nick":"c4milo_","date":"2013-10-30T15:49:06.384Z","type":"join"}
{"nick":"loladiro","date":"2013-10-30T15:49:30.435Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 245 seconds","date":"2013-10-30T15:52:13.166Z","type":"quit"}
{"nick":"bajtos","date":"2013-10-30T15:53:34.097Z","type":"join"}
{"nick":"bajtos","message":"bnoordhuis: ping","date":"2013-10-30T15:54:07.724Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033tjfontaine\u000f created tag v0.11.8 - http://git.io/6NJuGQ","date":"2013-10-30T15:54:47.561Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u0002bae4c90\u0002 : Now working on 0.11.9 (+2 more commits) - http://git.io/M51hQg","date":"2013-10-30T15:55:10.566Z","type":"message"}
{"nick":"superjoe30","date":"2013-10-30T15:58:12.326Z","type":"join"}
