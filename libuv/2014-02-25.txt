{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-02-25T00:00:00.371Z","type":"quit"}
{"nick":"ircretary","date":"2014-02-25T00:00:08.818Z","type":"join"}
{"nick":"austo","reason":"Quit: austo","date":"2014-02-25T00:01:40.050Z","type":"quit"}
{"nick":"trevnorris","message":"groundwater: anyways. that's about it. follow that? I'm updating the docs w/ more examples","date":"2014-02-25T00:01:57.333Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2014-02-25T00:02:16.674Z","type":"quit"}
{"nick":"AlexisMocha","message":"tjfontaine: so between the .CRT$XCU issue and stderr sync you are saying that .CRT$XCU is higher priority? I was hoping to get to a vanity 0 failures result for the result, but I guess that's not going to be the case :(","date":"2014-02-25T00:03:20.714Z","type":"message"}
{"nick":"euoia","reason":"Ping timeout: 264 seconds","date":"2014-02-25T00:03:50.700Z","type":"quit"}
{"nick":"tjfontaine","message":"erm","date":"2014-02-25T00:03:55.421Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: so, I've disabled the gc tests so we shouldn't see them for now, the .CRT$XCU issue is higher priority because at least some binary modules will compile but not run (though it's unclear why) and the stderr sync issue is relatively understood and potentially may require more effort and concept changes than we might get in for 0.12 (that being said, I'm ok with an explicit skip in stderr test)","date":"2014-02-25T00:06:27.932Z","type":"message"}
{"nick":"johannish_","date":"2014-02-25T00:06:49.745Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-02-25T00:06:58.163Z","type":"join"}
{"nick":"johannish","date":"2014-02-25T00:07:07.749Z","type":"join"}
{"nick":"johannish_","reason":"Client Quit","date":"2014-02-25T00:07:11.510Z","type":"quit"}
{"nick":"rmg","date":"2014-02-25T00:08:04.062Z","type":"join"}
{"nick":"andrewrk","reason":"Quit: Leaving","date":"2014-02-25T00:11:27.941Z","type":"quit"}
{"nick":"johannish","date":"2014-02-25T00:11:44.001Z","type":"part"}
{"nick":"toothr","new_nick":"toothrot","date":"2014-02-25T00:12:00.647Z","type":"nick"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2014-02-25T00:14:20.605Z","type":"quit"}
{"nick":"m76","reason":"Read error: Connection reset by peer","date":"2014-02-25T00:15:24.272Z","type":"quit"}
{"nick":"groundwater","message":"trevnorris so, i can subscribe to a subset of async events right?","date":"2014-02-25T00:18:14.158Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: yes.","date":"2014-02-25T00:18:23.156Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: where this differs from probes is that the call stack will still be preserved in the background for the entire async chain","date":"2014-02-25T00:18:48.690Z","type":"message"}
{"nick":"kevinsimper","date":"2014-02-25T00:19:10.244Z","type":"join"}
{"nick":"trevnorris","message":"groundwater: but the callbacks will only be called for the providers (i.e. subset of async events) that you specified","date":"2014-02-25T00:19:13.598Z","type":"message"}
{"nick":"Kakera","reason":"Ping timeout: 240 seconds","date":"2014-02-25T00:19:29.193Z","type":"quit"}
{"nick":"groundwater","message":"trevnorris so if i only subscribe to PIPE for example, but the callback chain traverses a TCP event, the continuatino won't be lost?","date":"2014-02-25T00:19:36.403Z","type":"message"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2014-02-25T00:21:03.177Z","type":"quit"}
{"nick":"trevnorris","message":"groundwater: nope. so say addAL(PIPE, ...); net.createServer(8080, fn() { net.createServer('/some/path', fn() { setTimeout(fn() { net.createServer('/other/path', ...","date":"2014-02-25T00:21:11.039Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: the callbacks will still be called for every PIPE event in that chain.","date":"2014-02-25T00:21:26.602Z","type":"message"}
{"nick":"tjfontaine","message":"groundwater: are you asking if tcp shows up in a transaction like: pipe.on('connect', function() { net.connect(, function() { pipe.write() }) }), even though you weren't looking for the TCP create?","date":"2014-02-25T00:22:05.359Z","type":"message"}
{"nick":"rmg","date":"2014-02-25T00:23:27.491Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-02-25T00:23:41.961Z","type":"quit"}
{"nick":"groundwater","message":"hmm... i think i confused myself","date":"2014-02-25T00:24:18.484Z","type":"message"}
{"nick":"tjfontaine","message":"to the code example!","date":"2014-02-25T00:24:30.235Z","type":"message"}
{"nick":"groundwater","message":"no, i get it now","date":"2014-02-25T00:24:34.735Z","type":"message"}
{"nick":"groundwater","message":"so, from a tracing perspective, i don't see why i'd ever subscribe to a subset of events","date":"2014-02-25T00:24:55.927Z","type":"message"}
{"nick":"groundwater","message":"not to say that nobody would","date":"2014-02-25T00:25:10.912Z","type":"message"}
{"nick":"groundwater","message":"also my coffee is not strong enough, so you may be dealing with sleepy-jacob","date":"2014-02-25T00:25:32.651Z","type":"message"}
{"nick":"mikeal","date":"2014-02-25T00:26:58.768Z","type":"join"}
{"nick":"tjfontaine","message":"man, pummel tests work as described.","date":"2014-02-25T00:31:30.192Z","type":"message"}
{"nick":"zz_karupanerura","new_nick":"karupanerura","date":"2014-02-25T00:32:30.998Z","type":"nick"}
{"nick":"tjfontaine","message":"well here's a useless test now ...","date":"2014-02-25T00:32:48.740Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/joyent/node/blob/master/test/pummel/test-next-tick-loops-quick.js","date":"2014-02-25T00:33:10.083Z","type":"message"}
{"nick":"trevnorris","message":"hahaha","date":"2014-02-25T00:33:39.392Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2014-02-25T00:33:40.214Z","type":"message"}
{"nick":"euoia","date":"2014-02-25T00:52:05.160Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 240 seconds","date":"2014-02-25T00:53:12.799Z","type":"quit"}
{"nick":"mmalecki","message":"gah, what sane build system puts a static library in .libs/libuv.a by default?","date":"2014-02-25T00:54:05.700Z","type":"message"}
{"nick":"kazupon","date":"2014-02-25T00:54:12.839Z","type":"join"}
{"nick":"tjfontaine","message":"heh, good ol autohell","date":"2014-02-25T00:54:38.585Z","type":"message"}
{"nick":"mmalecki","message":"could we perhaps use AC_CONFIG_LINKS to link/copy them to libuv.a in the root?","date":"2014-02-25T00:55:24.353Z","type":"message"}
{"nick":"tjfontaine","message":"probably, PRs are reviewed :)","date":"2014-02-25T00:56:56.860Z","type":"message"}
{"nick":"tjfontaine","message":"I thought it had a versioned one in the root though?","date":"2014-02-25T00:57:05.340Z","type":"message"}
{"nick":"mmalecki","message":"nope","date":"2014-02-25T00:58:50.902Z","type":"message"}
{"nick":"mmalecki","message":"it's .gitignore'd","date":"2014-02-25T00:58:54.722Z","type":"message"}
{"nick":"tjfontaine","message":"right, I think it's expecting you to use .la by default in other dependent apps ;)","date":"2014-02-25T00:59:08.758Z","type":"message"}
{"nick":"tjfontaine","message":"mmalecki: to be fair, it's expecting you to `make install`","date":"2014-02-25T01:00:44.741Z","type":"message"}
{"nick":"mmalecki","message":"tjfontaine: I don't want `make install`. I use libuv as a dependedncy in a project","date":"2014-02-25T01:01:05.538Z","type":"message"}
{"nick":"mmalecki","message":"so I just want to link it statically","date":"2014-02-25T01:01:15.033Z","type":"message"}
{"nick":"tjfontaine","message":"right so generally you use \".la\" and it expects your parent project to be managed by autohell","date":"2014-02-25T01:01:28.661Z","type":"message"}
{"nick":"mmalecki","message":"and previously with `make` being libuv's build system, I could just run `make -C` and have it output libuv.a","date":"2014-02-25T01:01:48.992Z","type":"message"}
{"nick":"tjfontaine","message":"in 0.10 we have non-autoconf, in 0.11 it's autoconf","date":"2014-02-25T01:02:08.657Z","type":"message"}
{"nick":"tjfontaine","message":"in both you have gyp","date":"2014-02-25T01:02:12.090Z","type":"message"}
{"nick":"groundwater","message":"trevnorris can't say i'm crazy about having an optional argument at the beginning of the add/create calls","date":"2014-02-25T01:02:17.784Z","type":"message"}
{"nick":"mmalecki","message":"right, but my projects are way too small for gyp/autohell to be useful","date":"2014-02-25T01:02:32.697Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2014-02-25T01:02:46.853Z","type":"message"}
{"nick":"groundwater","message":"trevnorris i hope this is the type of feedback you're looking for, i'm just pointing out potential pain points","date":"2014-02-25T01:02:57.438Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: i can understand that . does make the API look strange.","date":"2014-02-25T01:03:05.879Z","type":"message"}
{"nick":"trevnorris","message":"and yeah. that's the type of feedback i'm looking for. :)","date":"2014-02-25T01:03:14.235Z","type":"message"}
{"nick":"trevnorris","message":"the problem is that the userData argument is a Value (i.e. anything) so there's no way to type distinguish between the two. so it'd require an {create,add}AL(callbacks[, userData[, providers]]); API otherwise","date":"2014-02-25T01:04:29.345Z","type":"message"}
{"nick":"trevnorris","message":"and you'd have to pass null as the userData if you wanted access to the proviers","date":"2014-02-25T01:04:53.332Z","type":"message"}
{"nick":"groundwater","message":"trevnorris right now i'm thinking about this from the perspective of someone new, someone who doesn't have the history we have, and am trying to think about path of least resistance","date":"2014-02-25T01:06:41.665Z","type":"message"}
{"nick":"groundwater","message":"ALs are pretty heavy, and i'm thinking about ways to make the JS api easier to digest","date":"2014-02-25T01:07:13.880Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: yeah. that's a good perspective to take. the API isn't solidified yet, so go ahead and shoot out ideas. :)","date":"2014-02-25T01:07:24.549Z","type":"message"}
{"nick":"trevnorris","message":"hehe. is there an \"easy\" way?","date":"2014-02-25T01:07:34.579Z","type":"message"}
{"nick":"groundwater","message":"trevnorris i'm also not thinking about it from the perspective of \"keeping it in sync\" with the NR async-listener","date":"2014-02-25T01:08:56.290Z","type":"message"}
{"nick":"groundwater","message":"what we have works, and we can always keep using that","date":"2014-02-25T01:09:01.780Z","type":"message"}
{"nick":"groundwater","message":"what you're working on will hopefully be what node *needs*","date":"2014-02-25T01:09:19.188Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2014-02-25T01:09:28.208Z","type":"message"}
{"nick":"groundwater","message":"which ultimiately will probably be what we need too","date":"2014-02-25T01:09:29.681Z","type":"message"}
{"nick":"groundwater","message":"conceptually, i think the 'probe' model that TJ is talking about is easy to understand, but it might be less useful out of the box","date":"2014-02-25T01:10:12.279Z","type":"message"}
{"nick":"groundwater","message":"i think the add/create async listener might be easiest to explain as \"it's a useful wrapper around sets of probes\" even if it's not directly implemented that way","date":"2014-02-25T01:10:40.668Z","type":"message"}
{"nick":"trevnorris","message":"yeah. that's a simpler way of looking at it. problem is that \"probes\" have an on/off switch. where AL doesn't","date":"2014-02-25T01:11:24.388Z","type":"message"}
{"nick":"groundwater","message":"trevnorris that's okay, anyone who wants more granularity can dive into the world of probes","date":"2014-02-25T01:11:42.042Z","type":"message"}
{"nick":"groundwater","message":"this is more like \"if you wanna dive in with 'sane defaults' you should use ALs\"","date":"2014-02-25T01:12:06.858Z","type":"message"}
{"nick":"groundwater","message":"it's a loaded gun, but with the safety switch on","date":"2014-02-25T01:12:19.217Z","type":"message"}
{"nick":"trevnorris","message":"hehe, funny thing is I always thought of them the other way around. AL allows some ridiculous context manipulation. and many more ways to abuse it. :P","date":"2014-02-25T01:12:54.566Z","type":"message"}
{"nick":"rossk","date":"2014-02-25T01:14:49.578Z","type":"quit"}
{"nick":"calvinfo1","reason":"Quit: Leaving.","date":"2014-02-25T01:14:55.218Z","type":"quit"}
{"nick":"calvinfo","date":"2014-02-25T01:15:11.672Z","type":"join"}
{"nick":"groundwater","message":"trevnorris they're both a loaded gun","date":"2014-02-25T01:18:36.168Z","type":"message"}
{"nick":"groundwater","message":"one is loaded with bees, the other is loaded with a grenade ","date":"2014-02-25T01:18:49.080Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2014-02-25T01:18:52.462Z","type":"message"}
{"nick":"groundwater","message":"maybe substack can draw that illustration","date":"2014-02-25T01:19:12.754Z","type":"message"}
{"nick":"trevnorris","message":"ok. well I've gotta run. keep shooting stuff out as you see it. and i'll catch up w/ the logs later.","date":"2014-02-25T01:19:18.564Z","type":"message"}
{"nick":"trevnorris","message":"hahaha","date":"2014-02-25T01:19:19.608Z","type":"message"}
{"nick":"trevnorris","action":"&","date":"2014-02-25T01:19:23.440Z","type":"action"}
{"nick":"LOUDBOT_","message":"OMG CAELUM HAD SURPRISE UNPROTECTED BUTTSEX","date":"2014-02-25T01:19:23.840Z","type":"message"}
{"nick":"trevnorris","message":"....","date":"2014-02-25T01:19:29.720Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2014-02-25T01:23:32.982Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-02-25T01:23:59.796Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 272 seconds","date":"2014-02-25T01:28:27.684Z","type":"quit"}
{"nick":"tjfontaine","message":"trevnorris, groundwater: \"useful out of the box\" is of course where node finds itself in trouble","date":"2014-02-25T01:38:50.372Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris, groundwater: what we need to aim for is \"useful abstraction that lets users build what we don't want to maintain\"","date":"2014-02-25T01:39:09.886Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris, groundwater: a good way to look at it is if this meets the goals of the users who were asking for it, and if not if that requires more complexity, can we constrict on what's in core and let the rest be exposed in a user module","date":"2014-02-25T01:40:03.205Z","type":"message"}
{"nick":"thlorenz","date":"2014-02-25T01:40:39.125Z","type":"join"}
{"nick":"tjfontaine","message":"from the tracing probe mechanism we're not prescribing how these are to be used, but taking an existing interface that's already known and understood, and extending it with a consumable js api that matches our existing EE pattern","date":"2014-02-25T01:41:14.676Z","type":"message"}
{"nick":"tjfontaine","message":"so it's less of a knee jerk reaction when people see it","date":"2014-02-25T01:41:48.778Z","type":"message"}
{"nick":"mmalecki","message":"hmm, I'm getting a pretty mysterious seg fault with uv_queue_work","date":"2014-02-25T01:43:33.541Z","type":"message"}
{"nick":"tjfontaine","message":"mmalecki: are you calling it from the main event loop thread?","date":"2014-02-25T01:45:00.501Z","type":"message"}
{"nick":"mmalecki","message":"yup, I am","date":"2014-02-25T01:46:07.294Z","type":"message"}
{"nick":"mmalecki","message":"let me share some details","date":"2014-02-25T01:46:10.577Z","type":"message"}
{"nick":"mmalecki","message":"code is here: https://github.com/mmalecki/uv_netmap/tree/debug","date":"2014-02-25T01:46:22.934Z","type":"message"}
{"nick":"mmalecki","message":"I was just getting started, this is really minimal","date":"2014-02-25T01:46:31.954Z","type":"message"}
{"nick":"tjfontaine","message":"work_t is going out of scope","date":"2014-02-25T01:46:48.417Z","type":"message"}
{"nick":"tjfontaine","message":"*work_req","date":"2014-02-25T01:47:00.630Z","type":"message"}
{"nick":"tjfontaine","message":"it needs to be malloc'd or static to the translation unit","date":"2014-02-25T01:47:37.307Z","type":"message"}
{"nick":"mmalecki","message":"ohhh","date":"2014-02-25T01:47:49.620Z","type":"message"}
{"nick":"mmalecki","message":"hmm, so I need to fix uv book examples :)","date":"2014-02-25T01:48:13.174Z","type":"message"}
{"nick":"mmalecki","message":"thanks tjfontaine ","date":"2014-02-25T01:48:17.134Z","type":"message"}
{"nick":"tjfontaine","message":"yw","date":"2014-02-25T01:48:22.823Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037merge-review\u000f * \u000278a854f\u0002 : test: move pummel/test-fs-largefile to disabled (+3 more commits) - http://git.io/htHekQ","date":"2014-02-25T01:49:22.101Z","type":"message"}
{"nick":"ik_","date":"2014-02-25T01:54:14.717Z","type":"join"}
{"nick":"ik_","reason":"Client Quit","date":"2014-02-25T01:54:14.835Z","type":"quit"}
{"nick":"AWinterman","reason":"Ping timeout: 264 seconds","date":"2014-02-25T02:02:38.696Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-02-25T02:02:57.029Z","type":"join"}
{"nick":"calvinfo","reason":"Ping timeout: 244 seconds","date":"2014-02-25T02:05:15.776Z","type":"quit"}
{"nick":"groundwater","message":"tjfontaine perhaps you can answer this, can {create/add}AsyncListener be implemented completely on top of tracing probes?","date":"2014-02-25T02:05:42.637Z","type":"message"}
{"nick":"tjfontaine","message":"groundwater: I guess that depends on what you mean by tracing probes","date":"2014-02-25T02:06:05.181Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-02-25T02:06:25.972Z","type":"quit"}
{"nick":"tjfontaine","message":"so keep in mind, that the static probes actually have the ability to \"fix\" the scenario of the disconnect between createServer vs listen","date":"2014-02-25T02:06:46.068Z","type":"message"}
{"nick":"rmg","reason":"Read error: Connection reset by peer","date":"2014-02-25T02:06:46.324Z","type":"quit"}
{"nick":"rmg","date":"2014-02-25T02:07:01.046Z","type":"join"}
{"nick":"groundwater","message":"tjfontaine right, well ALs suffer from that problem as well","date":"2014-02-25T02:07:01.422Z","type":"message"}
{"nick":"tjfontaine","message":"no I mean, this can fix that problem, because I can put the probe exactly in the constructor of Server","date":"2014-02-25T02:07:19.067Z","type":"message"}
{"nick":"groundwater","message":"we typically patch EEs, or bind callbacks in order to recover from that problem","date":"2014-02-25T02:07:21.166Z","type":"message"}
{"nick":"groundwater","message":"right!","date":"2014-02-25T02:07:31.496Z","type":"message"}
{"nick":"tjfontaine","message":"AL gives you the information about when the actual binding time happens","date":"2014-02-25T02:07:50.323Z","type":"message"}
{"nick":"tjfontaine","message":"which can also be very important, but the static probes are far more surgical","date":"2014-02-25T02:08:05.059Z","type":"message"}
{"nick":"groundwater","message":"tjfontaine are you still doing the onAsync(...) probe idea?","date":"2014-02-25T02:08:11.186Z","type":"message"}
{"nick":"groundwater","message":"sorry that's waht i was commenting on","date":"2014-02-25T02:08:17.485Z","type":"message"}
{"nick":"tjfontaine","message":"so, really (I think) what we want is a combination of static probes and a trimmed down AL","date":"2014-02-25T02:09:06.360Z","type":"message"}
{"nick":"groundwater","message":"tjfontaine yes, sounds reasonable","date":"2014-02-25T02:09:33.346Z","type":"message"}
{"nick":"groundwater","message":"from a user perspective, ALs could just be probes","date":"2014-02-25T02:09:54.904Z","type":"message"}
{"nick":"tjfontaine","message":"technically we can iteratively add static probes through patch releases","date":"2014-02-25T02:09:55.991Z","type":"message"}
{"nick":"tjfontaine","message":"the information gleaned from AW is very important though, and is the only sane way to capture that data","date":"2014-02-25T02:10:52.535Z","type":"message"}
{"nick":"tjfontaine","message":"I hadn't pursued onAsync because it feels somewhat wrong to expose *both* addAL and that","date":"2014-02-25T02:11:48.509Z","type":"message"}
{"nick":"groundwater","message":"tjfontaine right, i get it now","date":"2014-02-25T02:12:32.300Z","type":"message"}
{"nick":"groundwater","message":"sorry had been out of sync","date":"2014-02-25T02:12:40.541Z","type":"message"}
{"nick":"tjfontaine","message":"also, because there are two schools of thought on how to consume this data, clearly something like what we have in AL and something along the lines of my onAsync idea, it makes me wonder what the minimum common feature set between the two needs to be exposed such that we can vet both ideas external to the core","date":"2014-02-25T02:15:06.016Z","type":"message"}
{"nick":"groundwater","message":"tjfontaine yes, i like that","date":"2014-02-25T02:16:30.525Z","type":"message"}
{"nick":"groundwater","message":"i think othiym23 brought up a very good point","date":"2014-02-25T02:16:46.477Z","type":"message"}
{"nick":"groundwater","message":"without passing an object through from create to before/after, we have a GC problem","date":"2014-02-25T02:17:01.814Z","type":"message"}
{"nick":"groundwater","message":"seems to me that is part of the 'minimal set'","date":"2014-02-25T02:17:18.694Z","type":"message"}
{"nick":"tjfontaine","message":"can you expand upon that further?","date":"2014-02-25T02:17:26.200Z","type":"message"}
{"nick":"groundwater","message":"if we tracked async events by 'id'","date":"2014-02-25T02:18:16.039Z","type":"message"}
{"nick":"groundwater","message":"and stored associated objects in a global hash, indexed by the id","date":"2014-02-25T02:18:26.892Z","type":"message"}
{"nick":"groundwater","message":"we don't know when we can GC the item stored in the hash","date":"2014-02-25T02:18:41.445Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2014-02-25T02:18:54.951Z","type":"quit"}
{"nick":"tjfontaine","message":"not without a stable notification of delete ","date":"2014-02-25T02:18:59.249Z","type":"message"}
{"nick":"tjfontaine","message":"fwiw, if we were to use a uuid for the handle, passing that back out on destructor is reasonably achievable -- as opposed to giving you back the real object to delete","date":"2014-02-25T02:19:36.138Z","type":"message"}
{"nick":"groundwater","message":"tjfontaine so thinking back, i think firing the probe with the handle as one of the arguments can side-step the requirement for having an 'id'","date":"2014-02-25T02:19:42.741Z","type":"message"}
{"nick":"groundwater","message":"that's kind of what we're doing, but not exposing","date":"2014-02-25T02:20:09.336Z","type":"message"}
{"nick":"tjfontaine","message":"what I'm also somewhat worried about is just how much persistent state this pushes into core, such that we may uninentionally start holding on to things logner than necessary","date":"2014-02-25T02:20:12.014Z","type":"message"}
{"nick":"tjfontaine","message":"groundwater: passing the handle instead of the id solves most of everything except of being notified when the handle is being deallocated","date":"2014-02-25T02:20:40.628Z","type":"message"}
{"nick":"rmg","date":"2014-02-25T02:20:48.277Z","type":"quit"}
{"nick":"groundwater","message":"tjfontaine if i store my stuff *on* the handle, it shouldn't matter","date":"2014-02-25T02:20:58.605Z","type":"message"}
{"nick":"tjfontaine","message":"groundwater: sure, but passing the handle doesn't solve the problem of you not wrapping the createServer call","date":"2014-02-25T02:21:19.519Z","type":"message"}
{"nick":"tjfontaine","message":"groundwater: what we (all) would like is for you to *not* have to monkey patch core","date":"2014-02-25T02:21:34.378Z","type":"message"}
{"nick":"groundwater","message":"oh, right because the handle is created asynchronously?","date":"2014-02-25T02:22:00.362Z","type":"message"}
{"nick":"tjfontaine","message":"yes","date":"2014-02-25T02:22:03.799Z","type":"message"}
{"nick":"groundwater","message":"well isnt' the handle just an object, and the fd is really what happens asyncronously?","date":"2014-02-25T02:22:26.771Z","type":"message"}
{"nick":"tjfontaine","message":"not exactly (unfortunately)","date":"2014-02-25T02:22:38.791Z","type":"message"}
{"nick":"groundwater","message":"can we just create the object, and fill in .fd after?","date":"2014-02-25T02:22:40.581Z","type":"message"}
{"nick":"tjfontaine","message":"can? yes, it's all just software :)","date":"2014-02-25T02:24:21.550Z","type":"message"}
{"nick":"tjfontaine","message":"but that is a very high touch change","date":"2014-02-25T02:24:25.576Z","type":"message"}
{"nick":"groundwater","message":"lol","date":"2014-02-25T02:24:31.736Z","type":"message"}
{"nick":"groundwater","message":"understood","date":"2014-02-25T02:24:39.953Z","type":"message"}
{"nick":"paulfryzel","date":"2014-02-25T02:24:44.802Z","type":"join"}
{"nick":"groundwater","message":"i mean the change doesn't *feel* wrong","date":"2014-02-25T02:24:48.017Z","type":"message"}
{"nick":"groundwater","message":"but i don't have a good feel for how easy/hard the change is","date":"2014-02-25T02:25:31.840Z","type":"message"}
{"nick":"paulfryzel","reason":"Ping timeout: 272 seconds","date":"2014-02-25T02:29:15.703Z","type":"quit"}
{"nick":"groundwater","message":"tjfontaine can you link me to the potential async part of createServer?","date":"2014-02-25T02:30:06.914Z","type":"message"}
{"nick":"tjfontaine","message":"sure","date":"2014-02-25T02:30:35.547Z","type":"message"}
{"nick":"tjfontaine","message":"well, ok let me rephase such that you're clear on what we mean by async","date":"2014-02-25T02:32:11.383Z","type":"message"}
{"nick":"tjfontaine","message":"well what I meant","date":"2014-02-25T02:32:29.137Z","type":"message"}
{"nick":"tjfontaine","message":"the handle is *never* created until .listen","date":"2014-02-25T02:32:32.194Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/joyent/node/blob/master/lib/net.js#L1045","date":"2014-02-25T02:32:57.182Z","type":"message"}
{"nick":"tjfontaine","message":"then maintains the logic for when we `new TCP()` or etc","date":"2014-02-25T02:33:14.033Z","type":"message"}
{"nick":"groundwater","message":"tjfontaine i think right now, a long stack trace with our AL shim will be called on .listen","date":"2014-02-25T02:34:30.267Z","type":"message"}
{"nick":"tjfontaine","message":"it will, yes","date":"2014-02-25T02:34:36.611Z","type":"message"}
{"nick":"groundwater","message":"so that is consistent","date":"2014-02-25T02:34:36.725Z","type":"message"}
{"nick":"tjfontaine","message":"what most people want (at least imo) is to be notified when Server has been instantiated","date":"2014-02-25T02:35:00.509Z","type":"message"}
{"nick":"groundwater","message":"so not .listen, but 'new Server()'","date":"2014-02-25T02:35:50.953Z","type":"message"}
{"nick":"tjfontaine","message":"to me that seems like what actually is interesting","date":"2014-02-25T02:36:17.583Z","type":"message"}
{"nick":"groundwater","message":"so we're (newrelic) definitely not requiring that","date":"2014-02-25T02:37:07.998Z","type":"message"}
{"nick":"groundwater","message":"not that someone else wouldn't","date":"2014-02-25T02:37:12.379Z","type":"message"}
{"nick":"tjfontaine","message":"sure, but from an associative point I can see why it would be the spot that makes sense","date":"2014-02-25T02:37:35.247Z","type":"message"}
{"nick":"tjfontaine","message":"if you're the kind of person looking for \"where this server was created\" that's the information you want, not when .listen was called -- granted for most people that's only a few lines of difference","date":"2014-02-25T02:38:22.617Z","type":"message"}
{"nick":"groundwater","message":"well the createServer probe could always return the server object","date":"2014-02-25T02:39:20.324Z","type":"message"}
{"nick":"groundwater","message":"and i could correlate that to the .listen event","date":"2014-02-25T02:39:31.828Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037merge-review\u000f * \u0002de56ffa\u0002 : test: pummel/*ci-reneg* handle EPIPE (+1 more commits) - http://git.io/riEqUw","date":"2014-02-25T02:39:36.577Z","type":"message"}
{"nick":"groundwater","message":"in 'userland'","date":"2014-02-25T02:39:36.780Z","type":"message"}
{"nick":"groundwater","message":"i mean, right now with ALs doesn't it occur on .listen","date":"2014-02-25T02:47:38.599Z","type":"message"}
{"nick":"groundwater","message":"the onAsync call","date":"2014-02-25T02:47:44.246Z","type":"message"}
{"nick":"tjfontaine","message":"all these async words","date":"2014-02-25T02:47:56.921Z","type":"message"}
{"nick":"groundwater","message":"lol","date":"2014-02-25T02:48:01.802Z","type":"message"}
{"nick":"tjfontaine","message":"yes, al fires in he .listen","date":"2014-02-25T02:48:02.719Z","type":"message"}
{"nick":"groundwater","message":"so passing the handle is consistent","date":"2014-02-25T02:48:17.018Z","type":"message"}
{"nick":"groundwater","message":"and firing on .listen","date":"2014-02-25T02:48:22.249Z","type":"message"}
{"nick":"tjfontaine","message":"yup","date":"2014-02-25T02:48:27.980Z","type":"message"}
{"nick":"groundwater","message":"all i'm saying is that the 'minimal feature set' might include passing the handle to userland","date":"2014-02-25T02:48:55.885Z","type":"message"}
{"nick":"groundwater","message":"vs. passing a storage object","date":"2014-02-25T02:49:00.476Z","type":"message"}
{"nick":"tjfontaine","message":"sure","date":"2014-02-25T02:49:02.291Z","type":"message"}
{"nick":"tjfontaine","message":"I mean, that's already happening in the implementation as it is in trevors latest changes","date":"2014-02-25T02:49:55.911Z","type":"message"}
{"nick":"groundwater","message":"is that 'context'?","date":"2014-02-25T02:50:57.826Z","type":"message"}
{"nick":"jmar777","date":"2014-02-25T02:51:06.883Z","type":"join"}
{"nick":"tjfontaine","message":"yes","date":"2014-02-25T02:51:35.633Z","type":"message"}
{"nick":"groundwater","message":"what i mean is that passing 'userData' can be done out of core, if you pass the handle to create, along with before/after","date":"2014-02-25T02:51:44.412Z","type":"message"}
{"nick":"tjfontaine","message":"presuming everyone gets around the 'ick' feeling of storing it on the handle","date":"2014-02-25T02:52:17.798Z","type":"message"}
{"nick":"groundwater","message":"my understanding is that the return value of create is the 'userData' which, currently implemented, gets attached to the handle object","date":"2014-02-25T02:52:38.960Z","type":"message"}
{"nick":"groundwater","message":"so it's happening anyways","date":"2014-02-25T02:52:59.029Z","type":"message"}
{"nick":"groundwater","message":"and if i recall, you said the JIT can't optimize the handle anyways","date":"2014-02-25T02:53:09.731Z","type":"message"}
{"nick":"tjfontaine","message":"the handle is generally a c++ instantiated object, so there's little to optimize (mostly)","date":"2014-02-25T02:53:39.118Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2014-02-25T02:54:03.285Z","type":"quit"}
{"nick":"groundwater","message":"would *you* let that change through? knowing people would append to the handle","date":"2014-02-25T02:54:06.869Z","type":"message"}
{"nick":"tjfontaine","message":"name spacing would be important for users attaching to the handle, and they coudln't be angry with us if stomp on their keys ;)","date":"2014-02-25T02:54:40.412Z","type":"message"}
{"nick":"groundwater","message":"do you want that enforced by convention, or by construction?","date":"2014-02-25T02:55:10.490Z","type":"message"}
{"nick":"groundwater","message":"i.e. just a line \"PREFIX YOUR SHIT\"","date":"2014-02-25T02:55:17.116Z","type":"message"}
{"nick":"tjfontaine","message":"I would want that by convention, ideally","date":"2014-02-25T02:55:28.322Z","type":"message"}
{"nick":"tjfontaine","message":"it can be expensive to \"freeze\" or equivalent","date":"2014-02-25T02:55:37.613Z","type":"message"}
{"nick":"groundwater","message":"because maybe not all AL callbacks want to actually mutate handle","date":"2014-02-25T02:55:38.412Z","type":"message"}
{"nick":"groundwater","message":"so tell people to prefix their module name, for example","date":"2014-02-25T02:56:19.892Z","type":"message"}
{"nick":"groundwater","message":"__newrelic_bag_o_fun","date":"2014-02-25T02:56:43.023Z","type":"message"}
{"nick":"tjfontaine","message":"right","date":"2014-02-25T02:57:35.469Z","type":"message"}
{"nick":"groundwater","message":"so that's my vote","date":"2014-02-25T03:01:32.260Z","type":"message"}
{"nick":"groundwater","message":"if we're searching for a minimal feature set","date":"2014-02-25T03:01:38.962Z","type":"message"}
{"nick":"tjfontaine","message":"ok","date":"2014-02-25T03:01:47.327Z","type":"message"}
{"nick":"AlexisMocha","reason":"Ping timeout: 246 seconds","date":"2014-02-25T03:01:53.047Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-02-25T03:02:04.795Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 272 seconds","date":"2014-02-25T03:06:37.711Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2014-02-25T03:06:55.581Z","type":"quit"}
{"nick":"AWinterman","date":"2014-02-25T03:08:34.801Z","type":"join"}
{"nick":"Ralith","reason":"Ping timeout: 246 seconds","date":"2014-02-25T03:08:53.222Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-02-25T03:08:56.685Z","type":"quit"}
{"nick":"AWinterman","reason":"Ping timeout: 272 seconds","date":"2014-02-25T03:14:13.682Z","type":"quit"}
{"nick":"kevinsimper","reason":"Remote host closed the connection","date":"2014-02-25T03:33:07.029Z","type":"quit"}
{"nick":"piscisaureus","date":"2014-02-25T03:34:00.133Z","type":"join"}
{"nick":"Ralith","date":"2014-02-25T03:34:12.719Z","type":"join"}
{"nick":"paulfryzel","date":"2014-02-25T03:37:44.790Z","type":"join"}
{"nick":"andrewrk","date":"2014-02-25T03:42:35.019Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 272 seconds","date":"2014-02-25T03:42:43.753Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037merge-review\u000f * \u000277a6ea0\u0002 : tools: wrk update to 5b2fa06 (+1 more commits) - http://git.io/sXYWQQ","date":"2014-02-25T03:51:04.222Z","type":"message"}
{"nick":"piscisaureus","reason":"Ping timeout: 246 seconds","date":"2014-02-25T03:51:35.031Z","type":"quit"}
{"nick":"kazupon","date":"2014-02-25T03:57:54.255Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-02-25T03:59:58.924Z","type":"quit"}
{"nick":"kazupon","date":"2014-02-25T04:01:13.442Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037merge-review\u000f * \u0002102399e\u0002 : wrk: build against our distributed ssl - http://git.io/dABwEw","date":"2014-02-25T04:21:00.504Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037merge-review\u000f * \u00024bba651\u0002 : wrk: build against our distributed ssl - http://git.io/dSAIqw","date":"2014-02-25T04:27:06.560Z","type":"message"}
{"nick":"euoia","reason":"Ping timeout: 246 seconds","date":"2014-02-25T04:31:08.046Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037merge-review\u000f * \u0002f6b5fc1\u0002 : wrk: build against our distributed ssl - http://git.io/cRDAtw","date":"2014-02-25T04:31:26.607Z","type":"message"}
{"nick":"paulfryzel","date":"2014-02-25T04:38:29.793Z","type":"join"}
{"nick":"loladiro","date":"2014-02-25T04:40:17.036Z","type":"join"}
{"nick":"jmar777","date":"2014-02-25T04:40:45.892Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-02-25T04:41:18.571Z","type":"quit"}
{"nick":"thlorenz","date":"2014-02-25T04:41:53.271Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 272 seconds","date":"2014-02-25T04:43:31.747Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 264 seconds","date":"2014-02-25T04:46:26.731Z","type":"quit"}
{"nick":"tjfontaine","message":"I wish I could find a convenient way to serially run phases of a matrix job across a specific axis","date":"2014-02-25T04:48:36.474Z","type":"message"}
{"nick":"thlorenz","date":"2014-02-25T04:51:19.124Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-02-25T04:53:06.827Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037merge-review\u000f * \u00021e182e1\u0002 : wrk: compile on sunos - http://git.io/dChnWw","date":"2014-02-25T04:55:09.822Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037merge-review\u000f * \u0002fd17587\u0002 : wrk: compile on sunos - http://git.io/EYVaYg","date":"2014-02-25T05:00:15.905Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2014-02-25T05:04:44.221Z","type":"quit"}
{"nick":"kevinsimper","date":"2014-02-25T05:33:58.432Z","type":"join"}
{"nick":"kevinsimper","reason":"Ping timeout: 246 seconds","date":"2014-02-25T05:38:41.109Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-02-25T05:39:09.788Z","type":"join"}
{"nick":"thlorenz","date":"2014-02-25T05:42:02.947Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 272 seconds","date":"2014-02-25T05:44:19.825Z","type":"quit"}
{"nick":"calvinfo1","reason":"Quit: Leaving.","date":"2014-02-25T05:45:00.019Z","type":"quit"}
{"nick":"trevnorris","message":"groundwater: yes the userData is attached to the context via ._asyncData. also know that the \"context\" passed is not the Server() object, but the ._handle object attached to the server instance.","date":"2014-02-25T05:53:47.821Z","type":"message"}
{"nick":"calvinfo","date":"2014-02-25T05:54:12.785Z","type":"join"}
{"nick":"trevnorris","message":"it directly exposes Node's entrails.","date":"2014-02-25T05:54:22.038Z","type":"message"}
{"nick":"Hewhokayaks","date":"2014-02-25T05:57:14.105Z","type":"join"}
{"nick":"trevnorris","message":"groundwater tjfontaine: if you wan to have users maintain a userData state outside of AL, each context can easily be given a uid (already done for AL) and then I can queue a callback passing that uid to the user in the destructor.","date":"2014-02-25T05:57:23.494Z","type":"message"}
{"nick":"trevnorris","message":"*want","date":"2014-02-25T05:57:28.580Z","type":"message"}
{"nick":"piscisaureus","date":"2014-02-25T05:58:51.944Z","type":"join"}
{"nick":"Hewhokayaks","reason":"Remote host closed the connection","date":"2014-02-25T06:00:30.805Z","type":"quit"}
{"nick":"trevnorris","message":"groundwater: as tjfontaine said, if a user wants to know when Server() is created, that's a totally different story. Unfortunately that is almost the only case in core code where the C++ class isn't instantiated w/ the JS object.","date":"2014-02-25T06:00:32.732Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: the only way around it is if we combined PipeWrap and TCPWrap (which, i'm not for). the other case is timers. those little bastards are the bane of my existence.","date":"2014-02-25T06:01:18.949Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: though I do have to say that I was hit with a bolt of inspiration just before leaving the office, and I now have a way to complete a feature that has been bothering me for weeks.","date":"2014-02-25T06:02:34.696Z","type":"message"}
{"nick":"kenperkins","date":"2014-02-25T06:06:09.548Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-02-25T06:10:04.335Z","type":"quit"}
{"nick":"thlorenz","date":"2014-02-25T06:10:39.822Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2014-02-25T06:13:12.300Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 272 seconds","date":"2014-02-25T06:15:21.710Z","type":"quit"}
{"nick":"kenperkins","date":"2014-02-25T06:27:01.235Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2014-02-25T06:27:08.599Z","type":"quit"}
{"nick":"kazupon","reason":"Read error: Connection timed out","date":"2014-02-25T06:33:47.079Z","type":"quit"}
{"nick":"kazupon","date":"2014-02-25T06:34:53.922Z","type":"join"}
{"nick":"mikeal","date":"2014-02-25T06:45:56.764Z","type":"join"}
{"nick":"dshaw_","date":"2014-02-25T06:50:30.171Z","type":"join"}
{"nick":"Damn3d","reason":"Ping timeout: 245 seconds","date":"2014-02-25T07:04:06.147Z","type":"quit"}
{"nick":"petka_","date":"2014-02-25T07:06:56.160Z","type":"join"}
{"nick":"Damn3d","date":"2014-02-25T07:18:42.242Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2014-02-25T07:23:33.238Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 246 seconds","date":"2014-02-25T07:26:50.255Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-02-25T07:34:15.265Z","type":"quit"}
{"nick":"guilleiguaran","reason":"Quit: Connection closed for inactivity","date":"2014-02-25T07:37:46.991Z","type":"quit"}
{"nick":"piscisaureus","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2014-02-25T07:40:31.585Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-02-25T07:40:44.796Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 272 seconds","date":"2014-02-25T07:45:55.832Z","type":"quit"}
{"nick":"dshaw_","reason":"Read error: Connection reset by peer","date":"2014-02-25T08:00:50.044Z","type":"quit"}
{"nick":"dshaw_","date":"2014-02-25T08:02:24.970Z","type":"join"}
{"nick":"janjongboom","date":"2014-02-25T08:06:50.723Z","type":"join"}
{"nick":"kevinsimper","date":"2014-02-25T08:11:02.924Z","type":"join"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-02-25T08:14:00.424Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-02-25T08:16:18.080Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 267 seconds","date":"2014-02-25T08:21:27.005Z","type":"quit"}
{"nick":"kenperkins","date":"2014-02-25T08:32:48.932Z","type":"join"}
{"nick":"kenperkins","reason":"Client Quit","date":"2014-02-25T08:32:52.942Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-02-25T08:41:37.792Z","type":"join"}
{"nick":"raffiki","reason":"Remote host closed the connection","date":"2014-02-25T08:45:33.820Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 272 seconds","date":"2014-02-25T08:46:05.694Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-02-25T08:52:34.914Z","type":"quit"}
{"nick":"dshaw_","date":"2014-02-25T09:05:13.944Z","type":"join"}
{"nick":"janjongboom","date":"2014-02-25T09:12:59.680Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Saúl Ibarra Corretgé\u000f \u00037master\u000f * \u00022f58bb6\u0002 : unix, windows: map ERANGE errno - http://git.io/beBj4g","date":"2014-02-25T09:17:05.236Z","type":"message"}
{"nick":"mikolalysenko","date":"2014-02-25T09:17:44.755Z","type":"join"}
{"nick":"saghul","message":"indutny: morning!","date":"2014-02-25T09:18:01.674Z","type":"message"}
{"nick":"indutny","message":"morning, man","date":"2014-02-25T09:18:06.674Z","type":"message"}
{"nick":"indutny","message":"how are you?","date":"2014-02-25T09:18:11.655Z","type":"message"}
{"nick":"saghul","message":"good, you? btw, great article yesterday ;-)","date":"2014-02-25T09:18:26.901Z","type":"message"}
{"nick":"saghul","message":"when you can, have a look at this proposal: https://github.com/joyent/libuv/issues/446","date":"2014-02-25T09:18:40.469Z","type":"message"}
{"nick":"indutny","message":"oh, thank you","date":"2014-02-25T09:18:43.261Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2014-02-25T09:19:24.442Z","type":"message"}
{"nick":"indutny","message":"looks good","date":"2014-02-25T09:19:25.731Z","type":"message"}
{"nick":"saghul","message":"kewl, I'll work on that tonight then","date":"2014-02-25T09:20:00.197Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 264 seconds","date":"2014-02-25T09:22:26.735Z","type":"quit"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-02-25T09:30:12.007Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-02-25T09:42:18.807Z","type":"join"}
{"nick":"hz","date":"2014-02-25T09:44:10.838Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 272 seconds","date":"2014-02-25T09:47:31.729Z","type":"quit"}
{"nick":"janjongboom","date":"2014-02-25T09:49:34.694Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Saúl Ibarra Corretgé\u000f \u00037v0.10\u000f * \u00026f98f4e\u0002 : unix, windows: map ERANGE errno - http://git.io/wnsdIQ","date":"2014-02-25T09:50:21.917Z","type":"message"}
{"nick":"Kakera","date":"2014-02-25T09:51:30.958Z","type":"join"}
{"nick":"`3rdEden","date":"2014-02-25T10:07:59.231Z","type":"join"}
{"nick":"`3rdEden","new_nick":"Guest49821","date":"2014-02-25T10:08:23.333Z","type":"nick"}
{"nick":"Guest49821","new_nick":"V1","date":"2014-02-25T10:08:30.116Z","type":"nick"}
{"nick":"V1","new_nick":"`3rdEden","date":"2014-02-25T10:08:45.484Z","type":"nick"}
{"nick":"mikolalysenko","date":"2014-02-25T10:17:59.161Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 246 seconds","date":"2014-02-25T10:22:52.956Z","type":"quit"}
{"nick":"kazupon_","date":"2014-02-25T10:41:06.934Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2014-02-25T10:41:10.889Z","type":"quit"}
{"nick":"lgierth","date":"2014-02-25T10:49:37.665Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-02-25T10:57:03.467Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Saúl Ibarra Corretgé\u000f \u00037master\u000f * \u00027ad8f74\u0002 : unix, windows: set required size on UV_ENOBUFS - http://git.io/PEHH-g","date":"2014-02-25T11:02:00.175Z","type":"message"}
{"nick":"dshaw_","date":"2014-02-25T11:25:07.873Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 240 seconds","date":"2014-02-25T11:29:12.759Z","type":"quit"}
{"nick":"daviddias","date":"2014-02-25T11:31:57.788Z","type":"join"}
{"nick":"dshaw_","date":"2014-02-25T11:33:33.898Z","type":"join"}
{"nick":"kazupon_","reason":"Remote host closed the connection","date":"2014-02-25T11:35:48.121Z","type":"quit"}
{"nick":"kazupon","date":"2014-02-25T11:36:14.824Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2014-02-25T11:41:02.647Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 240 seconds","date":"2014-02-25T11:42:24.774Z","type":"quit"}
{"nick":"lgierth","reason":"Quit: Ex-Chat","date":"2014-02-25T11:52:04.227Z","type":"quit"}
{"nick":"AlexisMocha","date":"2014-02-25T12:17:31.013Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-02-25T12:21:10.880Z","type":"join"}
{"nick":"sinclair|work","date":"2014-02-25T12:24:42.272Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 244 seconds","date":"2014-02-25T12:25:46.819Z","type":"quit"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-02-25T12:32:44.536Z","type":"quit"}
{"nick":"sinclair|work","reason":"Quit: ChatZilla 0.9.90.1 [Firefox 27.0.1/20140212131424]","date":"2014-02-25T12:34:43.088Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-02-25T12:44:48.813Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 272 seconds","date":"2014-02-25T12:49:17.673Z","type":"quit"}
{"nick":"janjongboom","date":"2014-02-25T12:51:01.643Z","type":"join"}
{"nick":"karupanerura","new_nick":"zz_karupanerura","date":"2014-02-25T12:54:39.451Z","type":"nick"}
{"nick":"loladiro","date":"2014-02-25T13:05:18.294Z","type":"part"}
{"nick":"AlexisMocha","reason":"Write error: Connection reset by peer","date":"2014-02-25T13:14:23.744Z","type":"quit"}
{"nick":"janjongboom","reason":"Ping timeout: 244 seconds","date":"2014-02-25T13:20:01.803Z","type":"quit"}
{"nick":"janjongboom","date":"2014-02-25T13:21:03.643Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-02-25T13:21:53.765Z","type":"join"}
{"nick":"euoia","date":"2014-02-25T13:23:15.814Z","type":"join"}
{"nick":"thlorenz","date":"2014-02-25T13:23:15.815Z","type":"join"}
{"nick":"indutny","message":"hey people","date":"2014-02-25T13:23:22.109Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-02-25T13:23:54.198Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 264 seconds","date":"2014-02-25T13:27:14.644Z","type":"quit"}
{"nick":"rossk","date":"2014-02-25T13:33:19.297Z","type":"join"}
{"nick":"paulfryzel","date":"2014-02-25T13:45:23.788Z","type":"join"}
{"nick":"thlorenz","date":"2014-02-25T13:47:38.887Z","type":"join"}
{"nick":"kenperkins","date":"2014-02-25T13:47:42.699Z","type":"join"}
{"nick":"kenperkins","reason":"Client Quit","date":"2014-02-25T13:47:56.606Z","type":"quit"}
{"nick":"euoia","reason":"Ping timeout: 272 seconds","date":"2014-02-25T13:48:11.751Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 272 seconds","date":"2014-02-25T13:50:05.795Z","type":"quit"}
{"nick":"guilleiguaran","date":"2014-02-25T13:54:59.155Z","type":"join"}
{"nick":"euoia","date":"2014-02-25T14:01:04.837Z","type":"join"}
{"nick":"guybrush","reason":"Excess Flood","date":"2014-02-25T14:15:46.962Z","type":"quit"}
{"nick":"guybrush","date":"2014-02-25T14:16:12.015Z","type":"join"}
{"nick":"janjongboom","reason":"Ping timeout: 264 seconds","date":"2014-02-25T14:20:02.643Z","type":"quit"}
{"nick":"janjongboom","date":"2014-02-25T14:21:36.698Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-02-25T14:22:49.841Z","type":"join"}
{"nick":"kazupon","date":"2014-02-25T14:23:47.790Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 244 seconds","date":"2014-02-25T14:27:42.755Z","type":"quit"}
{"nick":"kenperkins","date":"2014-02-25T14:30:00.988Z","type":"join"}
{"nick":"kenperkins","reason":"Remote host closed the connection","date":"2014-02-25T14:41:18.808Z","type":"quit"}
{"nick":"kenperkins","date":"2014-02-25T14:41:56.847Z","type":"join"}
{"nick":"hz_","date":"2014-02-25T14:42:25.863Z","type":"join"}
{"nick":"hz","reason":"Disconnected by services","date":"2014-02-25T14:42:29.816Z","type":"quit"}
{"nick":"hz_","new_nick":"hz","date":"2014-02-25T14:42:30.884Z","type":"nick"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-02-25T14:42:54.646Z","type":"quit"}
{"nick":"thlorenz","date":"2014-02-25T14:43:27.145Z","type":"join"}
{"nick":"kenperkins","reason":"Client Quit","date":"2014-02-25T14:45:42.139Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-02-25T14:46:13.591Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 246 seconds","date":"2014-02-25T14:47:50.015Z","type":"quit"}
{"nick":"kenperkins","date":"2014-02-25T14:53:27.030Z","type":"join"}
{"nick":"kevinsimper","date":"2014-02-25T14:53:35.237Z","type":"quit"}
{"nick":"austo","date":"2014-02-25T15:00:36.647Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2014-02-25T15:09:48.087Z","type":"quit"}
{"nick":"kazupon","date":"2014-02-25T15:11:00.124Z","type":"join"}
{"nick":"thlorenz","date":"2014-02-25T15:12:03.903Z","type":"join"}
{"nick":"paulfryzel","date":"2014-02-25T15:19:58.807Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-02-25T15:23:29.805Z","type":"join"}
{"nick":"m76","date":"2014-02-25T15:24:20.696Z","type":"join"}
{"nick":"AlexisMocha","date":"2014-02-25T15:25:30.725Z","type":"join"}
{"nick":"xaq","date":"2014-02-25T15:26:18.773Z","type":"join"}
{"nick":"sblom_","reason":"Ping timeout: 252 seconds","date":"2014-02-25T15:28:14.623Z","type":"quit"}
{"nick":"sblom","date":"2014-02-25T15:28:15.638Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 272 seconds","date":"2014-02-25T15:28:53.747Z","type":"quit"}
{"nick":"dap_","date":"2014-02-25T15:29:22.111Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-02-25T15:29:30.781Z","type":"join"}
{"nick":"AlexisMocha","message":"indutny tjfontaine: I have a question about https://github.com/joyent/node/issues/7116","date":"2014-02-25T15:39:23.630Z","type":"message"}
{"nick":"indutny","message":"sure","date":"2014-02-25T15:39:29.976Z","type":"message"}
{"nick":"indutny","message":"shoot","date":"2014-02-25T15:39:30.551Z","type":"message"}
{"nick":"AvianFlu","date":"2014-02-25T15:50:28.805Z","type":"join"}
{"nick":"janjongboom","reason":"Ping timeout: 244 seconds","date":"2014-02-25T15:50:53.932Z","type":"quit"}
{"nick":"janjongboom","date":"2014-02-25T15:52:08.646Z","type":"join"}
{"nick":"mcavage","reason":"Read error: Connection reset by peer","date":"2014-02-25T15:55:46.029Z","type":"quit"}
{"nick":"mcavage","date":"2014-02-25T15:55:54.801Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-02-25T16:01:46.350Z","type":"quit"}
{"nick":"kazupon","date":"2014-02-25T16:02:13.865Z","type":"join"}
{"nick":"kenperkins","date":"2014-02-25T16:03:12.148Z","type":"join"}
{"nick":"jmar777","date":"2014-02-25T16:05:04.923Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 244 seconds","date":"2014-02-25T16:06:23.764Z","type":"quit"}
{"nick":"dazld","reason":"Ping timeout: 252 seconds","date":"2014-02-25T16:08:23.613Z","type":"quit"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2014-02-25T16:10:04.143Z","type":"quit"}
{"nick":"dcrosta","date":"2014-02-25T16:14:39.711Z","type":"join"}
{"nick":"dazld","date":"2014-02-25T16:15:25.607Z","type":"join"}
{"nick":"kpdecker","reason":"Read error: Connection reset by peer","date":"2014-02-25T16:16:47.212Z","type":"quit"}
{"nick":"kpdecker","date":"2014-02-25T16:17:15.672Z","type":"join"}
{"nick":"xaq","reason":"Remote host closed the connection","date":"2014-02-25T16:18:04.429Z","type":"quit"}
{"nick":"daviddias","reason":"Remote host closed the connection","date":"2014-02-25T16:30:07.601Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Mike Pennisi\u000f \u00037v0.10\u000f * \u0002aae51ec\u0002 : assert: Ensure reflexivity of deepEqual - http://git.io/fDt86g","date":"2014-02-25T16:33:08.343Z","type":"message"}
{"nick":"xaq","date":"2014-02-25T16:35:38.884Z","type":"join"}
{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2014-02-25T16:40:45.731Z","type":"quit"}
{"nick":"AWinterman","date":"2014-02-25T16:43:08.119Z","type":"join"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-02-25T16:43:52.799Z","type":"quit"}
{"nick":"petka_","reason":"Quit: Connection closed for inactivity","date":"2014-02-25T16:46:11.049Z","type":"quit"}
{"nick":"hz","date":"2014-02-25T16:46:57.034Z","type":"quit"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2014-02-25T16:48:17.029Z","type":"quit"}
{"nick":"defunctzombie","message":"Error: read ECONNRESET","date":"2014-02-25T16:51:28.620Z","type":"message"}
{"nick":"defunctzombie","message":"    at errnoException (net.js:901:11)","date":"2014-02-25T16:51:28.799Z","type":"message"}
{"nick":"defunctzombie","message":"    at TCP.onread (net.js:556:19)","date":"2014-02-25T16:51:28.913Z","type":"message"}
{"nick":"defunctzombie","message":"    at fireErrorCallbacks (net.js:440:15)","date":"2014-02-25T16:51:28.913Z","type":"message"}
{"nick":"defunctzombie","message":"    at Socket._destroy (net.js:472:3)","date":"2014-02-25T16:51:28.913Z","type":"message"}
{"nick":"dap_","date":"2014-02-25T16:51:33.973Z","type":"join"}
{"nick":"defunctzombie","message":"looking for a way to track down that ECONNRESET","date":"2014-02-25T16:51:41.928Z","type":"message"}
{"nick":"defunctzombie","message":"it bubbles up to the top level of my app","date":"2014-02-25T16:51:47.292Z","type":"message"}
{"nick":"defunctzombie","message":"and crashes it","date":"2014-02-25T16:51:49.579Z","type":"message"}
{"nick":"defunctzombie","message":"v0.10.22","date":"2014-02-25T16:52:04.760Z","type":"message"}
{"nick":"defunctzombie","message":"actually looking for any tips of reproducing ECONNRESET errors","date":"2014-02-25T16:56:32.684Z","type":"message"}
{"nick":"dubban","date":"2014-02-25T16:56:47.699Z","type":"join"}
{"nick":"brson","date":"2014-02-25T16:59:33.706Z","type":"join"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2014-02-25T17:06:57.317Z","type":"quit"}
{"nick":"AvianFlu","message":"defunctzombie: well, for starters, that means one of your external TCP connections sent you an RST","date":"2014-02-25T17:08:31.369Z","type":"message"}
{"nick":"AvianFlu","message":"might mean an external service crashed, or you got a timeout, or somebody tripped over a network cable in a datacenter","date":"2014-02-25T17:08:47.049Z","type":"message"}
{"nick":"AvianFlu","message":"it's hard to say more without knowing more","date":"2014-02-25T17:08:51.683Z","type":"message"}
{"nick":"defunctzombie","message":"AvianFlu: sure","date":"2014-02-25T17:08:55.390Z","type":"message"}
{"nick":"AvianFlu","message":"but look for that kind of thing","date":"2014-02-25T17:08:56.626Z","type":"message"}
{"nick":"defunctzombie","message":"is there a way to can make a script to send an RST ?","date":"2014-02-25T17:09:03.339Z","type":"message"}
{"nick":"AvianFlu","message":"yeah, make an external service accept a connection and then like, socket.destroy()","date":"2014-02-25T17:09:24.739Z","type":"message"}
{"nick":"AvianFlu","message":"or just make it exit","date":"2014-02-25T17:09:30.151Z","type":"message"}
{"nick":"defunctzombie","message":"will that do it?","date":"2014-02-25T17:09:36.056Z","type":"message"}
{"nick":"AvianFlu","message":"making the external service exit is probably a pretty good way to send an RST","date":"2014-02-25T17:09:53.329Z","type":"message"}
{"nick":"dap_","date":"2014-02-25T17:09:54.769Z","type":"join"}
{"nick":"defunctzombie","message":"k.. will try that and see if I can't track down the specific failure location","date":"2014-02-25T17:10:03.783Z","type":"message"}
{"nick":"AvianFlu","message":".destroy() might, but there's like 3 ways to end a socket and I haven't tested it","date":"2014-02-25T17:10:07.829Z","type":"message"}
{"nick":"AvianFlu","message":"you could also use some lower-level language and make your own custom packet, but like ERABBITHOLE","date":"2014-02-25T17:10:42.768Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: what's your question? :)","date":"2014-02-25T17:10:59.107Z","type":"message"}
{"nick":"AlexisMocha","message":"tjfontaine: hi","date":"2014-02-25T17:11:16.115Z","type":"message"}
{"nick":"AlexisMocha","message":"two questions","date":"2014-02-25T17:11:18.511Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: hit me","date":"2014-02-25T17:11:23.793Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: literally?","date":"2014-02-25T17:11:37.780Z","type":"message"}
{"nick":"AlexisMocha","message":"why are we using the CRT section in the first place? are we hoping to be able to do this in plain C?","date":"2014-02-25T17:11:40.281Z","type":"message"}
{"nick":"tjfontaine","message":"indutny: :)","date":"2014-02-25T17:11:42.608Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: indeed, we are going to be having a pure C interface in 0.13","date":"2014-02-25T17:12:03.128Z","type":"message"}
{"nick":"kazupon","date":"2014-02-25T17:12:37.956Z","type":"join"}
{"nick":"AlexisMocha","message":"ok, second question: are we allowing multiple NODE_MODULE declarations in the same dll?","date":"2014-02-25T17:13:08.075Z","type":"message"}
{"nick":"indutny","message":"AlexisMocha: I don't see any reason to not allow it","date":"2014-02-25T17:14:13.171Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: externally, unclear -- I had talked about it, there's not a clear use case for at the moment, but seems like there should be no reason not to allow it","date":"2014-02-25T17:14:19.734Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: question for you, why does this work for node.exe but not binding.node? :)","date":"2014-02-25T17:15:15.733Z","type":"message"}
{"nick":"AlexisMocha","message":"what do you mean \"this work for node.exe\"?","date":"2014-02-25T17:16:06.211Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: currently, our internal modules are loaded with the CRT$XCU section","date":"2014-02-25T17:16:35.559Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: but it's only on the loadable assets that this section is missing","date":"2014-02-25T17:16:53.488Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 244 seconds","date":"2014-02-25T17:17:10.711Z","type":"quit"}
{"nick":"dcrosta","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2014-02-25T17:19:45.705Z","type":"quit"}
{"nick":"AlexisMocha","message":"tjfontaine: not sure, maybe it's VS2013?","date":"2014-02-25T17:20:52.754Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: we build on 2010","date":"2014-02-25T17:21:11.036Z","type":"message"}
{"nick":"AlexisMocha","message":"exactly, maybe if we built on 2013 we would have a surprise","date":"2014-02-25T17:21:28.944Z","type":"message"}
{"nick":"tjfontaine","message":"heh, I think I need to turn up the compiler verbosity -- it seems likely that something we're passing to cl.exe or link.exe is incompatible","date":"2014-02-25T17:22:02.810Z","type":"message"}
{"nick":"AlexisMocha","message":"anyway, even if we allowed multiple NODE_MODULE in one dll, the module name would have to be unique, correct? If so, I think I know a way to fix thi","date":"2014-02-25T17:22:10.188Z","type":"message"}
{"nick":"AlexisMocha","message":"s","date":"2014-02-25T17:22:11.458Z","type":"message"}
{"nick":"tjfontaine","message":"well each module just needs to call node_module_register with a valid structure","date":"2014-02-25T17:22:37.708Z","type":"message"}
{"nick":"AlexisMocha","message":"the linker is simply optimizing that stuff away because it doesn't think it's referenced","date":"2014-02-25T17:22:43.794Z","type":"message"}
{"nick":"tjfontaine","message":"right ok","date":"2014-02-25T17:23:14.885Z","type":"message"}
{"nick":"AlexisMocha","message":"and it's hard to force it to preserve them because they are declared as static","date":"2014-02-25T17:23:53.203Z","type":"message"}
{"nick":"AlexisMocha","message":"but i think i can use the module name to strigize a unique global per module, and force that to be included","date":"2014-02-25T17:24:24.263Z","type":"message"}
{"nick":"AlexisMocha","message":"lemme try that","date":"2014-02-25T17:24:29.735Z","type":"message"}
{"nick":"kenperkins","date":"2014-02-25T17:27:51.493Z","type":"join"}
{"nick":"dap_1","date":"2014-02-25T17:43:25.773Z","type":"join"}
{"nick":"dap_","reason":"Read error: No route to host","date":"2014-02-25T17:43:25.893Z","type":"quit"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2014-02-25T17:49:28.976Z","type":"quit"}
{"nick":"indexzero","date":"2014-02-25T17:51:45.778Z","type":"join"}
{"nick":"xaq","reason":"Remote host closed the connection","date":"2014-02-25T17:54:40.787Z","type":"quit"}
{"nick":"Ralith","reason":"Ping timeout: 264 seconds","date":"2014-02-25T17:58:26.737Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033orangemocha\u000f created branch orangemocha-ModuleReg - http://git.io/410ZQQ","date":"2014-02-25T18:03:50.307Z","type":"message"}
{"nick":"dcrosta","date":"2014-02-25T18:04:03.727Z","type":"join"}
{"nick":"dcrosta","date":"2014-02-25T18:04:07.360Z","type":"part"}
{"nick":"tjfontaine","message":"AlexisMocha: hmm, the dllexport alone I take it wasn't enough?","date":"2014-02-25T18:06:59.349Z","type":"message"}
{"nick":"bajtos","date":"2014-02-25T18:07:04.416Z","type":"join"}
{"nick":"thlorenz","reason":"Read error: Connection reset by peer","date":"2014-02-25T18:07:09.267Z","type":"quit"}
{"nick":"AlexisMocha","message":"needed to be non-static","date":"2014-02-25T18:07:14.793Z","type":"message"}
{"nick":"thlorenz","date":"2014-02-25T18:07:29.396Z","type":"join"}
{"nick":"AlexisMocha","message":"and hence have a unique name if we were going to allow multiple ones","date":"2014-02-25T18:07:30.615Z","type":"message"}
{"nick":"AlexisMocha","message":"tjfontaine: .","date":"2014-02-25T18:08:00.269Z","type":"message"}
{"nick":"tjfontaine","message":"right","date":"2014-02-25T18:08:01.622Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: locally you know about `test-gc` as an argument to vcbuild.bat?","date":"2014-02-25T18:08:29.956Z","type":"message"}
{"nick":"AlexisMocha","message":"tjfontaine: never heard of it","date":"2014-02-25T18:09:04.240Z","type":"message"}
{"nick":"AWinterm_","date":"2014-02-25T18:11:40.813Z","type":"join"}
{"nick":"calvinfo","date":"2014-02-25T18:16:55.740Z","type":"join"}
{"nick":"tjfontaine","message":"indutny: https://github.com/joyent/node/compare/master...merge-review","date":"2014-02-25T18:17:02.472Z","type":"message"}
{"nick":"indutny","message":"ouch","date":"2014-02-25T18:17:25.360Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: https://github.com/joyent/node/compare/master...merge-review#diff-68a49458f9862e08f0c577c5e81a4c70R96","date":"2014-02-25T18:18:12.325Z","type":"message"}
{"nick":"indutny","message":"why case 'ECONNRESET' if you are doing assert below?","date":"2014-02-25T18:18:26.970Z","type":"message"}
{"nick":"indutny","message":"its in many places","date":"2014-02-25T18:18:52.481Z","type":"message"}
{"nick":"tjfontaine","message":"indutny: it could be just assert(false), but having the name of the code is helpful, in practice it won't be anything other than EPIPE or ECONNRESET (depending on if write or read failed)","date":"2014-02-25T18:19:20.875Z","type":"message"}
{"nick":"indutny","message":"well","date":"2014-02-25T18:19:31.243Z","type":"message"}
{"nick":"indutny","message":"I mean you could just remove that `case`","date":"2014-02-25T18:19:37.431Z","type":"message"}
{"nick":"indutny","message":"and check it in assert","date":"2014-02-25T18:19:44.423Z","type":"message"}
{"nick":"indutny","message":"that's fine","date":"2014-02-25T18:19:46.050Z","type":"message"}
{"nick":"tjfontaine","message":"using .equal means I can see the code","date":"2014-02-25T18:19:48.587Z","type":"message"}
{"nick":"indutny","message":"otherwise LGTM","date":"2014-02-25T18:19:48.707Z","type":"message"}
{"nick":"indutny","message":"I understand","date":"2014-02-25T18:19:57.424Z","type":"message"}
{"nick":"indutny","message":"I just stress another point a bit :)","date":"2014-02-25T18:20:04.899Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2014-02-25T18:20:09.899Z","type":"quit"}
{"nick":"tjfontaine","message":"hehe","date":"2014-02-25T18:20:10.889Z","type":"message"}
{"nick":"AWinterman","reason":"Write error: Broken pipe","date":"2014-02-25T18:20:33.806Z","type":"quit"}
{"nick":"guilleiguaran","reason":"Ping timeout: 279 seconds","date":"2014-02-25T18:20:57.626Z","type":"quit"}
{"nick":"andrewrk","reason":"Excess Flood","date":"2014-02-25T18:22:26.696Z","type":"quit"}
{"nick":"jan____","reason":"Ping timeout: 983 seconds","date":"2014-02-25T18:22:54.664Z","type":"quit"}
{"nick":"guilleiguaran","date":"2014-02-25T18:23:27.934Z","type":"join"}
{"nick":"andrewrk","date":"2014-02-25T18:23:29.194Z","type":"join"}
{"nick":"jan____-","date":"2014-02-25T18:24:16.809Z","type":"join"}
{"nick":"jan____-","new_nick":"jan____","date":"2014-02-25T18:24:19.225Z","type":"nick"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-02-25T18:25:49.482Z","type":"quit"}
{"nick":"TooTallNate","date":"2014-02-25T18:27:03.691Z","type":"join"}
{"nick":"Ralith","date":"2014-02-25T18:27:21.737Z","type":"join"}
{"nick":"AlexisMocha_","date":"2014-02-25T18:32:03.986Z","type":"join"}
{"nick":"stagas","date":"2014-02-25T18:34:52.955Z","type":"join"}
{"nick":"thlorenz","date":"2014-02-25T18:38:11.823Z","type":"join"}
{"nick":"rossk","date":"2014-02-25T18:44:28.312Z","type":"quit"}
{"nick":"daviddias","date":"2014-02-25T18:48:11.785Z","type":"join"}
{"nick":"piscisaureus","date":"2014-02-25T18:50:34.134Z","type":"join"}
{"nick":"dshaw_","date":"2014-02-25T18:51:28.143Z","type":"join"}
{"nick":"kenperkins","date":"2014-02-25T18:51:31.888Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 244 seconds","date":"2014-02-25T18:52:45.754Z","type":"quit"}
{"nick":"AlexisMocha_","reason":"Read error: Connection reset by peer","date":"2014-02-25T18:55:33.974Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 246 seconds","date":"2014-02-25T18:55:38.080Z","type":"quit"}
{"nick":"daviddias","date":"2014-02-25T18:57:21.819Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 264 seconds","date":"2014-02-25T18:59:38.818Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2014-02-25T19:00:33.868Z","type":"quit"}
{"nick":"brson","date":"2014-02-25T19:01:13.024Z","type":"join"}
{"nick":"Raynos","reason":"Ping timeout: 265 seconds","date":"2014-02-25T19:02:31.831Z","type":"quit"}
{"nick":"brson","reason":"Client Quit","date":"2014-02-25T19:03:04.021Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-02-25T19:04:04.814Z","type":"join"}
{"nick":"Raynos_","date":"2014-02-25T19:04:20.539Z","type":"join"}
{"nick":"paulfryz_","date":"2014-02-25T19:05:35.793Z","type":"join"}
{"nick":"paulfryz_","reason":"Read error: Connection reset by peer","date":"2014-02-25T19:07:18.143Z","type":"quit"}
{"nick":"paulfry__","date":"2014-02-25T19:07:22.862Z","type":"join"}
{"nick":"nickleefly___","reason":"Ping timeout: 245 seconds","date":"2014-02-25T19:07:26.081Z","type":"quit"}
{"nick":"paulfryzel","reason":"Read error: Connection reset by peer","date":"2014-02-25T19:07:31.877Z","type":"quit"}
{"nick":"rphillips","reason":"Ping timeout: 245 seconds","date":"2014-02-25T19:09:06.068Z","type":"quit"}
{"nick":"rphillips","date":"2014-02-25T19:09:44.017Z","type":"join"}
{"nick":"Raynos_","reason":"Ping timeout: 245 seconds","date":"2014-02-25T19:10:21.158Z","type":"quit"}
{"nick":"nickleefly___","date":"2014-02-25T19:11:29.159Z","type":"join"}
{"nick":"Raynos_","date":"2014-02-25T19:14:05.767Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Alexis Campailla\u000f \u00037orangemocha-ModuleReg\u000f * \u00021312a7b\u0002 : windows: fix module registration - http://git.io/IbpHwg","date":"2014-02-25T19:19:00.103Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2014-02-25T19:27:17.309Z","type":"quit"}
{"nick":"kenperkins","date":"2014-02-25T19:28:09.319Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037merge-review\u000f * \u00026e0837f\u0002 : test: pummel/net-connect-econnrefused backoff (+7 more commits) - http://git.io/1BdAXg","date":"2014-02-25T19:33:10.164Z","type":"message"}
{"nick":"m76","reason":"Read error: Connection reset by peer","date":"2014-02-25T19:33:58.981Z","type":"quit"}
{"nick":"mikeal","date":"2014-02-25T19:48:20.122Z","type":"join"}
{"nick":"xaq","date":"2014-02-25T19:51:12.880Z","type":"join"}
{"nick":"indexzero","date":"2014-02-25T19:52:53.839Z","type":"join"}
{"nick":"indexzero","reason":"Client Quit","date":"2014-02-25T19:53:14.936Z","type":"quit"}
{"nick":"paulfry__","reason":"Remote host closed the connection","date":"2014-02-25T19:55:54.893Z","type":"quit"}
{"nick":"dshaw_","date":"2014-02-25T20:00:27.873Z","type":"join"}
{"nick":"xaq","reason":"Remote host closed the connection","date":"2014-02-25T20:01:38.938Z","type":"quit"}
{"nick":"prettymuchbryce","date":"2014-02-25T20:01:43.062Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2014-02-25T20:01:58.618Z","type":"quit"}
{"nick":"kenperkins","reason":"Remote host closed the connection","date":"2014-02-25T20:06:10.269Z","type":"quit"}
{"nick":"kenperkins","date":"2014-02-25T20:06:46.246Z","type":"join"}
{"nick":"Damn3d","reason":"Ping timeout: 240 seconds","date":"2014-02-25T20:08:24.771Z","type":"quit"}
{"nick":"bajtos","date":"2014-02-25T20:08:32.326Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2014-02-25T20:10:10.681Z","type":"quit"}
{"nick":"kevinsimper","date":"2014-02-25T20:11:42.885Z","type":"join"}
{"nick":"Damn3d","date":"2014-02-25T20:14:59.353Z","type":"join"}
{"nick":"Damn3d","reason":"Changing host","date":"2014-02-25T20:14:59.353Z","type":"quit"}
{"nick":"Damn3d","date":"2014-02-25T20:14:59.353Z","type":"join"}
{"nick":"m76","date":"2014-02-25T20:15:48.731Z","type":"join"}
{"nick":"piscisaureus","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2014-02-25T20:16:20.489Z","type":"quit"}
{"nick":"dsantiago","reason":"Quit: Leaving...","date":"2014-02-25T20:16:52.287Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-02-25T20:19:14.508Z","type":"quit"}
{"nick":"dshaw_","date":"2014-02-25T20:21:39.788Z","type":"join"}
{"nick":"rossk","date":"2014-02-25T20:21:48.118Z","type":"join"}
{"nick":"TooTallNate","date":"2014-02-25T20:22:21.029Z","type":"join"}
{"nick":"paulfryzel","date":"2014-02-25T20:26:34.864Z","type":"join"}
{"nick":"dsantiago","date":"2014-02-25T20:37:51.426Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2014-02-25T20:41:35.593Z","type":"quit"}
{"nick":"daviddias","reason":"Remote host closed the connection","date":"2014-02-25T20:46:40.064Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-02-25T20:48:29.635Z","type":"quit"}
{"nick":"dshaw_","date":"2014-02-25T20:50:49.776Z","type":"join"}
{"nick":"rossk","reason":"Read error: Connection reset by peer","date":"2014-02-25T20:54:31.105Z","type":"quit"}
{"nick":"AWinterman","date":"2014-02-25T20:55:28.913Z","type":"join"}
{"nick":"jmar777_","date":"2014-02-25T20:56:30.952Z","type":"join"}
{"nick":"AWinterm_","reason":"Ping timeout: 264 seconds","date":"2014-02-25T20:59:02.732Z","type":"quit"}
{"nick":"jmar777","reason":"Ping timeout: 240 seconds","date":"2014-02-25T20:59:12.840Z","type":"quit"}
{"nick":"rossk","date":"2014-02-25T20:59:32.880Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2014-02-25T21:03:07.398Z","type":"quit"}
{"nick":"prettymuchbryce","reason":"Quit: prettymuchbryce","date":"2014-02-25T21:03:26.634Z","type":"quit"}
{"nick":"daviddias","date":"2014-02-25T21:05:36.175Z","type":"join"}
{"nick":"daviddias","date":"2014-02-25T21:12:09.669Z","type":"quit"}
{"nick":"prettymuchbryce","date":"2014-02-25T21:15:10.988Z","type":"join"}
{"nick":"daviddias","date":"2014-02-25T21:15:18.838Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2014-02-25T21:17:45.365Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-02-25T21:20:04.763Z","type":"quit"}
{"nick":"AWinterm_","date":"2014-02-25T21:24:25.121Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Alexis Campailla\u000f \u00037merge-review\u000f * \u00022155e3a\u0002 : windows: fix module registration (+3 more commits) - http://git.io/wWjPGQ","date":"2014-02-25T21:25:08.302Z","type":"message"}
{"nick":"AWinterman","reason":"Ping timeout: 244 seconds","date":"2014-02-25T21:25:41.774Z","type":"quit"}
{"nick":"euoia","reason":"Remote host closed the connection","date":"2014-02-25T21:25:59.837Z","type":"quit"}
{"nick":"mikeal","date":"2014-02-25T21:27:08.799Z","type":"join"}
{"nick":"AWinterm_","reason":"Remote host closed the connection","date":"2014-02-25T21:28:05.728Z","type":"quit"}
{"nick":"TooTallNate","date":"2014-02-25T21:28:31.828Z","type":"join"}
{"nick":"tjfontaine","message":"hmm I had a question for you nate, but I forget now","date":"2014-02-25T21:31:01.289Z","type":"message"}
{"nick":"hz","date":"2014-02-25T21:32:32.849Z","type":"join"}
{"nick":"xaq","date":"2014-02-25T21:32:43.795Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-02-25T21:44:19.634Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-02-25T21:44:29.281Z","type":"quit"}
{"nick":"mikeal","date":"2014-02-25T21:45:34.854Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Alexis Campailla\u000f \u00037merge-review\u000f * \u0002b5f9779\u0002 : windows: fix module registration (+2 more commits) - http://git.io/btIjmg","date":"2014-02-25T21:45:44.441Z","type":"message"}
{"nick":"jan____","reason":"Changing host","date":"2014-02-25T21:45:45.624Z","type":"quit"}
{"nick":"jan____","date":"2014-02-25T21:45:45.625Z","type":"join"}
{"nick":"saghul_","date":"2014-02-25T21:46:11.819Z","type":"join"}
{"nick":"saghul","reason":"Ping timeout: 272 seconds","date":"2014-02-25T21:48:53.718Z","type":"quit"}
{"nick":"mikeal","reason":"Ping timeout: 264 seconds","date":"2014-02-25T21:50:02.734Z","type":"quit"}
{"nick":"AWinterman","date":"2014-02-25T21:53:18.889Z","type":"join"}
{"nick":"dshaw_","date":"2014-02-25T21:53:24.769Z","type":"join"}
{"nick":"xaq","reason":"Remote host closed the connection","date":"2014-02-25T21:54:40.336Z","type":"quit"}
{"nick":"bajtos","date":"2014-02-25T21:57:11.205Z","type":"join"}
{"nick":"brson","date":"2014-02-25T21:58:39.652Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Alexis Campailla\u000f \u00037master\u000f * \u0002b5f9779\u0002 : windows: fix module registration (+14 more commits) - http://git.io/Obfj3g","date":"2014-02-25T22:02:23.661Z","type":"message"}
{"nick":"wolfeidau","date":"2014-02-25T22:04:21.763Z","type":"quit"}
{"nick":"tjfontaine","message":"AlexisMocha: thanks, we're down to just those 2 tests on master now, stderr and vm recursion [both of which in the short term I am ok with punting on if we want to get a green board]","date":"2014-02-25T22:05:17.890Z","type":"message"}
{"nick":"mcavage","reason":"Remote host closed the connection","date":"2014-02-25T22:10:33.159Z","type":"quit"}
{"nick":"mcavage","date":"2014-02-25T22:10:59.786Z","type":"join"}
{"nick":"wolfeidau","date":"2014-02-25T22:11:44.273Z","type":"join"}
{"nick":"AlexisMocha","message":"tjfontaine: 1) Vm recursion: why don't we land the v8 patch? It works and it can't be worse than an AV. ","date":"2014-02-25T22:12:14.454Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: floating v8 patches requires consideration, especially since we have a tendency to drop our patches on upgrades :/","date":"2014-02-25T22:13:00.664Z","type":"message"}
{"nick":"AlexisMocha","message":"tjfontaine: 2) I am working on stderr, but it's likely not going to be a small fix","date":"2014-02-25T22:13:44.193Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: I had a feeling","date":"2014-02-25T22:14:02.562Z","type":"message"}
{"nick":"AlexisMocha","message":"tjfontaine: had some questions about that","date":"2014-02-25T22:14:16.653Z","type":"message"}
{"nick":"AlexisMocha","message":"i am gathering that there is no way in node to make something synchronous, that is asynchronous at the UV level","date":"2014-02-25T22:15:15.407Z","type":"message"}
{"nick":"mcavage","reason":"Ping timeout: 272 seconds","date":"2014-02-25T22:15:29.673Z","type":"quit"}
{"nick":"tjfontaine","message":"AlexisMocha: right","date":"2014-02-25T22:15:31.882Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: well","date":"2014-02-25T22:15:36.314Z","type":"message"}
{"nick":"AlexisMocha","message":"being mono-threaded","date":"2014-02-25T22:15:54.691Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: there are some ways, but there are certainly people who would cringe at the sight of us doing it","date":"2014-02-25T22:16:05.447Z","type":"message"}
{"nick":"AlexisMocha","message":"do tell","date":"2014-02-25T22:16:17.746Z","type":"message"}
{"nick":"tjfontaine","message":"I mean to say, if a change is crucial to node but cannot accurately be expressed in a platform neutral way in libuv, it's not out of line for us to include that change only in node","date":"2014-02-25T22:16:51.199Z","type":"message"}
{"nick":"tjfontaine","message":"it's nice to believe there's a world where we can hide everything under a single interface in libuv, but in practice it's unlikely to ever be the case","date":"2014-02-25T22:17:26.776Z","type":"message"}
{"nick":"AlexisMocha","message":"what i am saying is, if you only have uv_pipe_write_async, there is no way that you can expose a pipe.writeSync in node","date":"2014-02-25T22:18:09.295Z","type":"message"}
{"nick":"andrewrk","reason":"Quit: Leaving","date":"2014-02-25T22:18:46.420Z","type":"quit"}
{"nick":"tjfontaine","message":"right, and I'm saying that if we need to support this without changing libuv we could grab the osf handle and write in our own way sync","date":"2014-02-25T22:18:49.239Z","type":"message"}
{"nick":"tjfontaine","message":"if it were crucial to do something and we couldn't immediately get libuv api for it","date":"2014-02-25T22:19:27.739Z","type":"message"}
{"nick":"AlexisMocha","message":"i see","date":"2014-02-25T22:19:35.366Z","type":"message"}
{"nick":"AlexisMocha","message":"well, what i am getting at is that i think we should probably add a writeSync method to those streams","date":"2014-02-25T22:20:06.229Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2014-02-25T22:20:19.402Z","type":"message"}
{"nick":"AlexisMocha","message":"that people might want to call in a blocking way","date":"2014-02-25T22:20:20.578Z","type":"message"}
{"nick":"AlexisMocha","message":"console.error(x) { process.stderr.writeSync(x+'\\n'); }","date":"2014-02-25T22:20:55.612Z","type":"message"}
{"nick":"tjfontaine","message":"well, that's what console.error(x) { fs.writeSync(2, ...) } is? :)","date":"2014-02-25T22:21:53.821Z","type":"message"}
{"nick":"AlexisMocha","message":"you lost me :)","date":"2014-02-25T22:23:17.757Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2014-02-25T22:23:32.713Z","type":"message"}
{"nick":"AlexisMocha","message":"we have writeSync for fs but not for pipes or other streams","date":"2014-02-25T22:23:33.681Z","type":"message"}
{"nick":"andrewrk","date":"2014-02-25T22:24:19.706Z","type":"join"}
{"nick":"tjfontaine","message":"well, writeSync for fs is special in the unicies, since we're jsut really calling write() on that fd directly, but obviously windows is different","date":"2014-02-25T22:24:27.933Z","type":"message"}
{"nick":"andrewrk","new_nick":"Guest92272","date":"2014-02-25T22:24:36.305Z","type":"nick"}
{"nick":"AlexisMocha","message":"it should be fairly easy to implement a writeSync for pipes on Windows","date":"2014-02-25T22:27:14.835Z","type":"message"}
{"nick":"AlexisMocha","message":"as a write+wait","date":"2014-02-25T22:27:23.440Z","type":"message"}
{"nick":"AlexisMocha","message":"and i understand that on unix all pipe writes are sync?","date":"2014-02-25T22:28:12.092Z","type":"message"}
{"nick":"tjfontaine","message":"stdio is always blocking on unix","date":"2014-02-25T22:30:45.851Z","type":"message"}
{"nick":"tjfontaine","message":"sorry synchronous, not necessarily blocking","date":"2014-02-25T22:31:35.160Z","type":"message"}
{"nick":"tjfontaine","message":";)","date":"2014-02-25T22:31:44.402Z","type":"message"}
{"nick":"tjfontaine","message":"using pipe's though it's easy to get in a blocked state, especially with a parent that's not reading the child's stdout","date":"2014-02-25T22:32:19.525Z","type":"message"}
{"nick":"AlexisMocha","message":"right","date":"2014-02-25T22:33:03.991Z","type":"message"}
{"nick":"AlexisMocha","message":"pipes are async on windows and that's generally preferable","date":"2014-02-25T22:33:51.958Z","type":"message"}
{"nick":"AlexisMocha","message":"what i am suggesting as the \"ideal\" state of things is that pipes support async and sync writes, but console methods always use the sync version","date":"2014-02-25T22:34:35.562Z","type":"message"}
{"nick":"AlexisMocha","message":"console.error(x) { if(process.stderr.writeSync) process.stderr.writeSync(x+'\\n'); else process.stderr.write(x+'\\n') }","date":"2014-02-25T22:35:28.197Z","type":"message"}
{"nick":"tjfontaine","message":"well, unfortunately it's not *quite* that simple, because stderr and stdout are actually streams apis","date":"2014-02-25T22:35:49.329Z","type":"message"}
{"nick":"AlexisMocha","message":"and we implement writeSync for pipes on windows","date":"2014-02-25T22:35:50.924Z","type":"message"}
{"nick":"tjfontaine","message":"but the premise is the same, we just implement a PipeWriteSync class that has a _write that implements it","date":"2014-02-25T22:36:20.887Z","type":"message"}
{"nick":"AlexisMocha","message":"right, can't writeSync be a stream method that is not implemented by all streams?","date":"2014-02-25T22:36:31.540Z","type":"message"}
{"nick":"tjfontaine","message":"and when stdout|stderr are instantiated they do the right one","date":"2014-02-25T22:36:33.190Z","type":"message"}
{"nick":"AlexisMocha","message":"mmmm... not too sure about making the stdout|stderr streams implicitly sync, that could have negative performance consequences","date":"2014-02-25T22:38:07.325Z","type":"message"}
{"nick":"AlexisMocha","message":"if someone is calling process.stderr.write, they know they can pass a callback to that","date":"2014-02-25T22:39:05.293Z","type":"message"}
{"nick":"AlexisMocha","message":"it's console.error() that offers no callback mechanism and it's implicitly expected to be sync","date":"2014-02-25T22:39:23.661Z","type":"message"}
{"nick":"tjfontaine","message":"well, when we get to the point where we have something to discuss, it's worth exploring those options :)","date":"2014-02-25T22:39:59.201Z","type":"message"}
{"nick":"AlexisMocha","message":"you want a PR? :)","date":"2014-02-25T22:40:58.291Z","type":"message"}
{"nick":"tjfontaine","message":"doesn't it need to go through libuv first?","date":"2014-02-25T22:41:13.774Z","type":"message"}
{"nick":"Raynos_","reason":"Ping timeout: 246 seconds","date":"2014-02-25T22:41:23.097Z","type":"quit"}
{"nick":"tjfontaine","message":"I mean I think we definitely want to make sure libuv grows this support","date":"2014-02-25T22:41:28.834Z","type":"message"}
{"nick":"AlexisMocha","message":"yes, we would need to add a uv_pipe_write_sync on win","date":"2014-02-25T22:41:33.776Z","type":"message"}
{"nick":"Guest92272","new_nick":"andrewrk","date":"2014-02-25T22:43:49.705Z","type":"nick"}
{"nick":"AlexisMocha","message":"is it too late for such a change?","date":"2014-02-25T22:44:10.643Z","type":"message"}
{"nick":"Raynos_","date":"2014-02-25T22:44:23.254Z","type":"join"}
{"nick":"tjfontaine","message":"it's very close to late, what's your estimate on it?","date":"2014-02-25T22:44:37.657Z","type":"message"}
{"nick":"AlexisMocha","message":"i can possibly implement it in 2 days","date":"2014-02-25T22:44:42.820Z","type":"message"}
{"nick":"AlexisMocha","message":"1 if i am lucky","date":"2014-02-25T22:45:38.988Z","type":"message"}
{"nick":"tjfontaine","message":"well, let me put it this way, it's not particularly a fix that I would be looking to hold the release for, but there are still two features that need to land in general so :)","date":"2014-02-25T22:46:10.216Z","type":"message"}
{"nick":"AlexisMocha","message":"well, i'll give it a shot, if it doesn't make it i am sure the world will still go around","date":"2014-02-25T22:47:19.591Z","type":"message"}
{"nick":"tjfontaine","message":"yup","date":"2014-02-25T22:47:24.739Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2014-02-25T22:47:32.055Z","type":"quit"}
{"nick":"tjfontaine","message":"unfortunately it's been the status quo on windows :/","date":"2014-02-25T22:47:37.111Z","type":"message"}
{"nick":"tjfontaine","message":"but we have you now!","date":"2014-02-25T22:47:45.011Z","type":"message"}
{"nick":"AlexisMocha","message":"one more thing","date":"2014-02-25T22:48:27.002Z","type":"message"}
{"nick":"Raynos_","new_nick":"Raynos","date":"2014-02-25T22:48:53.722Z","type":"nick"}
{"nick":"euoia","date":"2014-02-25T22:49:11.908Z","type":"join"}
{"nick":"AlexisMocha","message":"in the issue https://github.com/joyent/node/issues/3584, it seems that there was a fix suggested. was that ever considered?","date":"2014-02-25T22:49:40.988Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: bert was working with Henry but wasn't thrilled with his direction, but then henry was gone before they could reach an agreement on the right path","date":"2014-02-25T22:50:26.961Z","type":"message"}
{"nick":"saghul_","message":"guys, I caught the discussion in the middle, but maybe this is relevant? https://github.com/joyent/libuv/commit/92040eb7123e892261c8da71c3eedb97c00e4b88","date":"2014-02-25T22:50:43.907Z","type":"message"}
{"nick":"tjfontaine","message":"saghul_: this landed?","date":"2014-02-25T22:51:08.685Z","type":"message"}
{"nick":"tjfontaine","message":"well righ tI see the tags","date":"2014-02-25T22:51:15.404Z","type":"message"}
{"nick":"saghul_","message":"yep","date":"2014-02-25T22:51:16.611Z","type":"message"}
{"nick":"saghul_","message":"however: https://github.com/joyent/libuv/pull/1135","date":"2014-02-25T22:51:24.261Z","type":"message"}
{"nick":"AlexisMocha","message":"yep, that's the one","date":"2014-02-25T22:51:24.809Z","type":"message"}
{"nick":"AlexisMocha","message":"plus this in node: https://github.com/MSOpenTech/node/commit/0b3021ed3389436fe399fdbb02b0d65c23150592","date":"2014-02-25T22:51:29.207Z","type":"message"}
{"nick":"tjfontaine","message":"that doesn't meet all of alexis conerns though, it is only an on/off solution","date":"2014-02-25T22:51:37.758Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-02-25T22:51:55.155Z","type":"quit"}
{"nick":"saghul_","message":"not sure what all his needs are, I picked up half of the conversation, sorry :-)","date":"2014-02-25T22:52:27.882Z","type":"message"}
{"nick":"tjfontaine","message":"well he only wanted some of the writes to be blocking","date":"2014-02-25T22:53:24.730Z","type":"message"}
{"nick":"tjfontaine","message":"that assert in unix side is kinda scary","date":"2014-02-25T22:53:57.461Z","type":"message"}
{"nick":"saghul_","message":"some == \"this and that handles\"?","date":"2014-02-25T22:53:59.958Z","type":"message"}
{"nick":"tjfontaine","message":"no, as in the intent for the user from user land","date":"2014-02-25T22:54:14.165Z","type":"message"}
{"nick":"saghul_","message":"oh","date":"2014-02-25T22:54:23.013Z","type":"message"}
{"nick":"AlexisMocha","message":"right, that sets the whole stream as either blocking or non-blocking","date":"2014-02-25T22:54:23.922Z","type":"message"}
{"nick":"tjfontaine","message":"we also need to take care not to call that path on !win32","date":"2014-02-25T22:54:42.779Z","type":"message"}
{"nick":"saghul_","message":"indeed","date":"2014-02-25T22:55:00.002Z","type":"message"}
{"nick":"tjfontaine","message":"AlexisMocha: as an interim solution we can make all writes to stdout|stderr be blocking, and then fix that in post 0.12","date":"2014-02-25T22:55:33.370Z","type":"message"}
{"nick":"rossk","date":"2014-02-25T22:55:57.404Z","type":"quit"}
{"nick":"tjfontaine","message":"the node fix from henry is not really how we want to do that","date":"2014-02-25T22:56:18.870Z","type":"message"}
{"nick":"saghul_","message":"I'll fix the comment, remove the assert (return UV_ENOSYS) and check that the flag is only set for pipe handles on Windows","date":"2014-02-25T22:57:49.818Z","type":"message"}
{"nick":"saghul_","message":"at least it shouldn't be that scary :-)","date":"2014-02-25T22:58:02.613Z","type":"message"}
{"nick":"tjfontaine","message":"srsly.","date":"2014-02-25T22:58:06.755Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2014-02-25T22:58:07.881Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 244 seconds","date":"2014-02-25T22:58:10.724Z","type":"quit"}
{"nick":"kevinsimper","reason":"Remote host closed the connection","date":"2014-02-25T23:00:22.540Z","type":"quit"}
{"nick":"AlexisMocha","message":"tjfontaine: i suppose this would make windows behave like unix","date":"2014-02-25T23:00:55.250Z","type":"message"}
{"nick":"tjfontaine","message":"right, and then we can later fix the async|sync nature that requires more consideration","date":"2014-02-25T23:01:22.528Z","type":"message"}
{"nick":"dap_1","reason":"Quit: Leaving.","date":"2014-02-25T23:02:08.337Z","type":"quit"}
{"nick":"tjfontaine","message":"I do have questions abotu what it means to allow both sync and async writes, as far as ordering is concerned","date":"2014-02-25T23:02:11.525Z","type":"message"}
{"nick":"AlexisMocha","message":"okay","date":"2014-02-25T23:02:12.095Z","type":"message"}
{"nick":"AlexisMocha","message":"you mean in the model i was proposing? it means that a sync is semantically a an asyncWrite followed by a wait","date":"2014-02-25T23:02:57.827Z","type":"message"}
{"nick":"AlexisMocha","message":"things should get queued properly, but the sync version doesn't return until its request has completed","date":"2014-02-25T23:03:21.933Z","type":"message"}
{"nick":"tjfontaine","message":"no I mean, if I do: process.stderr.write() and then process.stderr.writeSync() is the first guaranteed (or will it ever) to complete before my Sync call completes","date":"2014-02-25T23:03:37.920Z","type":"message"}
{"nick":"tjfontaine","message":"ok","date":"2014-02-25T23:03:45.863Z","type":"message"}
{"nick":"tjfontaine","message":"if making that work doesn't make me feel icky, it certainly seems appropriate","date":"2014-02-25T23:04:01.510Z","type":"message"}
{"nick":"bajtos","date":"2014-02-25T23:04:03.610Z","type":"join"}
{"nick":"tjfontaine","message":":)","date":"2014-02-25T23:04:05.147Z","type":"message"}
{"nick":"saghul_","message":"tjfontaine AlexisMocha: https://github.com/joyent/libuv/pull/1152","date":"2014-02-25T23:05:08.419Z","type":"message"}
{"nick":"tjfontaine","message":"I can't figure out why the CLA stuff works sometimes and not other times","date":"2014-02-25T23:05:18.179Z","type":"message"}
{"nick":"tjfontaine","message":"are these always named pipes?","date":"2014-02-25T23:05:47.959Z","type":"message"}
{"nick":"tjfontaine","message":"anyway, if that's true that certainly GLTM","date":"2014-02-25T23:05:56.033Z","type":"message"}
{"nick":"tjfontaine","message":"yoda comment","date":"2014-02-25T23:06:00.847Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2014-02-25T23:06:01.490Z","type":"message"}
{"nick":"saghul_","message":":-)","date":"2014-02-25T23:06:11.144Z","type":"message"}
{"nick":"saghul_","message":"I'll push it in the morning then, I'm about to go afk","date":"2014-02-25T23:07:44.387Z","type":"message"}
{"nick":"tjfontaine","message":"saghul_: thanks","date":"2014-02-25T23:07:49.821Z","type":"message"}
{"nick":"AlexisMocha","message":"yes thanks, I need to get going too. I'll test that change by HenryRawas tomorrow","date":"2014-02-25T23:09:17.334Z","type":"message"}
{"nick":"TooTallNate","message":"tjfontaine: indutny: if you guys have some downtime: https://github.com/joyent/node/pull/7189","date":"2014-02-25T23:15:02.715Z","type":"message"}
{"nick":"tjfontaine","message":"ya I looked at it briefly","date":"2014-02-25T23:15:31.256Z","type":"message"}
{"nick":"tjfontaine","message":"(no such thing as down time)","date":"2014-02-25T23:15:35.282Z","type":"message"}
{"nick":"tjfontaine","message":"I remember talking with isaacs about the addition of Agent.prototype.request","date":"2014-02-25T23:15:55.312Z","type":"message"}
{"nick":"tjfontaine","message":"it was a conversation about separation of concerns, if what you want to make sure these set of requests actually happen with this agent, it seems unfortunate that you have to always pass in the agent to every request","date":"2014-02-25T23:16:51.629Z","type":"message"}
{"nick":"tjfontaine","message":"TooTallNate: at least that's the reason why it was created","date":"2014-02-25T23:17:01.288Z","type":"message"}
{"nick":"TooTallNate","message":"tjfontaine: it doesn't really make sense to me","date":"2014-02-25T23:18:20.277Z","type":"message"}
{"nick":"TooTallNate","message":"there's also logic in Agent that should probably be in ClientRequest instead...","date":"2014-02-25T23:18:37.678Z","type":"message"}
{"nick":"TooTallNate","message":"see https://github.com/TooTallNate/node/commit/e5b912688dd18b6ce36d11022f4038a7810ce173","date":"2014-02-25T23:18:38.859Z","type":"message"}
{"nick":"TooTallNate","message":"tjfontaine: in any case, no API is breaking, and all the tests are still passing","date":"2014-02-25T23:19:10.569Z","type":"message"}
{"nick":"TooTallNate","message":"tjfontaine: though we could add util.deprecate on agent.request() and agent.get() if you feel that's necessary","date":"2014-02-25T23:19:24.475Z","type":"message"}
{"nick":"TooTallNate","message":"i don't really think so...","date":"2014-02-25T23:19:29.397Z","type":"message"}
{"nick":"tjfontaine","message":"TooTallNate: right I am just trying to explain the justification, there's no need to deprecate Agent.prototype.request, it's new in 0.11","date":"2014-02-25T23:19:40.974Z","type":"message"}
{"nick":"TooTallNate","message":"tjfontaine: ya gotcha, i'm just saying the justification still doesn't make sense to me :)","date":"2014-02-25T23:20:12.704Z","type":"message"}
{"nick":"dap_","date":"2014-02-25T23:20:51.847Z","type":"join"}
{"nick":"tjfontaine","message":"TooTallNate: it's a separation of concerns argument, I don't defend the { agent: false } regression, but if I want to associate requests with a specific agent is backwards to have to supply the agent to the requesting mechansim, as opposed to requesting directly on the interface that I intend to keep around","date":"2014-02-25T23:21:16.676Z","type":"message"}
{"nick":"mcavage","date":"2014-02-25T23:21:25.826Z","type":"join"}
{"nick":"tjfontaine","message":"and from an implementation detail, in flight requests are indeed stored on that agent","date":"2014-02-25T23:22:14.758Z","type":"message"}
{"nick":"TooTallNate","message":"tjfontaine: so the reason why i felt this was necessary is because right now, Agent and ClientRequest have a circular dependency on eachotehr","date":"2014-02-25T23:22:59.412Z","type":"message"}
{"nick":"TooTallNate","message":"in fact, the circular dependency is causing agent.globalAgent to be undefined in the _http_client.js module!","date":"2014-02-25T23:23:30.217Z","type":"message"}
{"nick":"TooTallNate","message":"which is the root of the cause of the regression","date":"2014-02-25T23:23:37.026Z","type":"message"}
{"nick":"TooTallNate","message":"i was mostly just trying to remove the circular dependency","date":"2014-02-25T23:23:49.315Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2014-02-25T23:24:18.547Z","type":"message"}
{"nick":"mcavage","reason":"Ping timeout: 272 seconds","date":"2014-02-25T23:26:25.681Z","type":"quit"}
{"nick":"kpdecker","reason":"Quit: Leaving.","date":"2014-02-25T23:26:59.777Z","type":"quit"}
{"nick":"mikeal","date":"2014-02-25T23:42:23.893Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2014-02-25T23:45:57.613Z","type":"quit"}
{"nick":"austo","reason":"Quit: austo","date":"2014-02-25T23:50:50.680Z","type":"quit"}
{"nick":"mikeal","date":"2014-02-25T23:52:23.783Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 272 seconds","date":"2014-02-25T23:56:11.722Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 264 seconds","date":"2014-02-25T23:58:26.702Z","type":"quit"}
{"nick":"Kakera","reason":"Ping timeout: 246 seconds","date":"2014-02-25T23:59:05.073Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-02-25T23:59:08.818Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2014-02-25T23:59:58.238Z","type":"quit"}
