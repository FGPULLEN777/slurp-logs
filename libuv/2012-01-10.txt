{"nick":"piscisaureus__","action":"off","date":"2012-01-10T00:04:58.192Z","type":"action"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-01-10T00:17:56.469Z","type":"quit"}
{"nick":"piscisaureus__","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-01-10T00:20:11.127Z","type":"quit"}
{"nick":"ErikCorry2","reason":"Quit: Page closed","date":"2012-01-10T00:20:34.207Z","type":"quit"}
{"nick":"mikeal","date":"2012-01-10T00:24:07.586Z","type":"join"}
{"nick":"`3rdEden","reason":"Quit: ZZZZzzzzzz","date":"2012-01-10T00:32:57.367Z","type":"quit"}
{"nick":"mmalecki","message":"any word on the release?","date":"2012-01-10T00:39:35.354Z","type":"message"}
{"nick":"mmalecki","message":"ryah: ^ ?","date":"2012-01-10T00:39:38.297Z","type":"message"}
{"nick":"mmalecki","message":"ok, I'm off for today. we'll upgrade workers tomorrow.","date":"2012-01-10T00:47:36.237Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u000297e4b3a\u000f \u000310\u000f/ (src/node_isolate.cc test/simple/test-isolates-ping-pong.js)\u0002:\u000f isolates: drain message queue completely - http://git.io/kHus1w","date":"2012-01-10T01:16:29.436Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T01:28:09.511Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/node#212 (master - 97e4b3a : Ben Noordhuis): The build is still failing.","date":"2012-01-10T01:28:09.728Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/node/compare/787f62d...97e4b3a","date":"2012-01-10T01:28:09.728Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/node/builds/499982","date":"2012-01-10T01:28:09.728Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T01:28:09.728Z","type":"part"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Fedor Indutny\u000f \u000307master\u000f * r\u0002a5f74b4\u000f \u000310\u000f/ (src/node_script.cc src/node_vars.h)\u0002:\u000f added isolates support - http://git.io/GLGJbg","date":"2012-01-10T01:30:36.950Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Fedor Indutny\u000f \u000307master\u000f * r\u000244e7033\u000f \u000310\u000f/ (src/node.cc src/node_vars.h)\u0002:\u000f fixed debugger segfaults - http://git.io/11velw","date":"2012-01-10T01:30:37.171Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Fedor Indutny\u000f \u000307master\u000f * r\u000299679c6\u000f \u000310\u000f/ (5 files in 2 dirs)\u0002:\u000f IsolateDebugger C++ - http://git.io/pFnUzw","date":"2012-01-10T01:30:37.391Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Fedor Indutny\u000f \u000307master\u000f * r\u00026b2091b\u000f \u000310\u000f/ (lib/_debugger.js lib/child_process.js)\u0002:\u000f debug threads - http://git.io/3W2b3Q","date":"2012-01-10T01:30:37.695Z","type":"message"}
{"nick":"dap1","reason":"Quit: Leaving.","date":"2012-01-10T01:32:14.533Z","type":"quit"}
{"nick":"sh1mmer","reason":"Quit: sh1mmer","date":"2012-01-10T01:32:25.991Z","type":"quit"}
{"nick":"travis-ci","date":"2012-01-10T01:43:19.515Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/node#213 (master - 6b2091b : Fedor Indutny): The build is still failing.","date":"2012-01-10T01:43:19.728Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/node/compare/97e4b3a...6b2091b","date":"2012-01-10T01:43:19.728Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/node/builds/499994","date":"2012-01-10T01:43:19.728Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T01:43:19.728Z","type":"part"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-01-10T01:49:54.363Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 252 seconds","date":"2012-01-10T01:52:53.955Z","type":"quit"}
{"nick":"mikeal","date":"2012-01-10T01:56:21.015Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-01-10T02:02:24.209Z","type":"quit"}
{"nick":"ryah","message":"bnoordhuis: thanks","date":"2012-01-10T02:13:33.019Z","type":"message"}
{"nick":"ryah","message":"mmalecki: probably wont happen today","date":"2012-01-10T02:13:41.563Z","type":"message"}
{"nick":"ryah","message":"mmalecki: why you interested btw?","date":"2012-01-10T02:13:53.885Z","type":"message"}
{"nick":"mikeal","date":"2012-01-10T02:16:01.697Z","type":"join"}
{"nick":"pietern","reason":"Quit: pietern","date":"2012-01-10T02:23:16.324Z","type":"quit"}
{"nick":"sh1mmer","date":"2012-01-10T02:25:35.035Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-01-10T02:39:19.709Z","type":"quit"}
{"nick":"sh1mmer","reason":"Quit: sh1mmer","date":"2012-01-10T02:40:10.162Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2012-01-10T02:49:22.825Z","type":"quit"}
{"nick":"isaacs","reason":"Quit: isaacs","date":"2012-01-10T02:52:20.826Z","type":"quit"}
{"nick":"isaacs","date":"2012-01-10T02:53:41.296Z","type":"join"}
{"nick":"bnoordhuis","reason":"Read error: Operation timed out","date":"2012-01-10T02:54:27.004Z","type":"quit"}
{"nick":"TooTallNate","message":"how come uv_run_once() uses EVRUN_NOWAIT instead of EVRUN_ONCE?","date":"2012-01-10T02:59:41.184Z","type":"message"}
{"nick":"TooTallNate","action":"has no idea what the differences are","date":"2012-01-10T02:59:48.973Z","type":"action"}
{"nick":"isaacs","reason":"Quit: isaacs","date":"2012-01-10T03:03:17.279Z","type":"quit"}
{"nick":"dshaw_","date":"2012-01-10T03:54:12.383Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Linkinus - http://linkinus.com","date":"2012-01-10T03:55:24.203Z","type":"quit"}
{"nick":"sh1mmer","date":"2012-01-10T04:19:54.681Z","type":"join"}
{"nick":"sh1mmer","reason":"Quit: sh1mmer","date":"2012-01-10T04:31:04.757Z","type":"quit"}
{"nick":"mikeal","date":"2012-01-10T04:38:11.322Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2012-01-10T04:40:29.416Z","type":"quit"}
{"nick":"indutny","message":"morning everyone","date":"2012-01-10T04:43:46.867Z","type":"message"}
{"nick":"mikeal","date":"2012-01-10T05:00:05.090Z","type":"join"}
{"nick":"sh1mmer","date":"2012-01-10T05:24:44.033Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-01-10T05:37:48.077Z","type":"quit"}
{"nick":"mikeal","date":"2012-01-10T05:48:26.665Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2012-01-10T05:49:22.970Z","type":"quit"}
{"nick":"mjr_","date":"2012-01-10T05:55:03.419Z","type":"join"}
{"nick":"perezd","reason":"Quit: perezd","date":"2012-01-10T06:18:35.436Z","type":"quit"}
{"nick":"slaskis","date":"2012-01-10T06:33:40.964Z","type":"join"}
{"nick":"paddybyers","date":"2012-01-10T07:01:41.273Z","type":"join"}
{"nick":"mikeal","date":"2012-01-10T07:13:32.660Z","type":"join"}
{"nick":"mjr_","reason":"Quit: mjr_","date":"2012-01-10T07:24:13.826Z","type":"quit"}
{"nick":"kuebk","date":"2012-01-10T07:28:22.129Z","type":"join"}
{"nick":"kuebk1","date":"2012-01-10T07:44:34.078Z","type":"join"}
{"nick":"kuebk","reason":"Ping timeout: 276 seconds","date":"2012-01-10T07:48:51.143Z","type":"quit"}
{"nick":"kuebk1","reason":"Ping timeout: 252 seconds","date":"2012-01-10T07:50:45.959Z","type":"quit"}
{"nick":"kuebk","date":"2012-01-10T07:52:55.681Z","type":"join"}
{"nick":"slaskis","reason":"Quit: slaskis","date":"2012-01-10T07:59:21.152Z","type":"quit"}
{"nick":"vodotikigod","reason":"Ping timeout: 240 seconds","date":"2012-01-10T08:03:49.368Z","type":"quit"}
{"nick":"mmalecki","message":"ryah: I wanted to deploy node v0.7 to nodejs workers on Travis so that people can start testing their stuff out","date":"2012-01-10T08:35:47.400Z","type":"message"}
{"nick":"mmalecki","message":"but anyway, I'll wait :)","date":"2012-01-10T08:36:27.749Z","type":"message"}
{"nick":"mmalecki","message":"indutny: hi!","date":"2012-01-10T08:36:30.201Z","type":"message"}
{"nick":"mmalecki","message":"damn, I have to to school. ttyl","date":"2012-01-10T08:36:49.489Z","type":"message"}
{"nick":"indutny","message":"mmalecki: hi!","date":"2012-01-10T08:37:31.094Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-01-10T08:44:04.618Z","type":"quit"}
{"nick":"slaskis","date":"2012-01-10T08:50:02.496Z","type":"join"}
{"nick":"voodootikigod_","date":"2012-01-10T09:03:45.926Z","type":"join"}
{"nick":"ErikCorryV8","date":"2012-01-10T09:28:47.542Z","type":"join"}
{"nick":"mikeal","date":"2012-01-10T09:35:38.676Z","type":"join"}
{"nick":"mrb_bk","message":"good morning","date":"2012-01-10T12:00:46.530Z","type":"message"}
{"nick":"ErikCorryV8","message":"The 3.6 string hash seeding backport landed.","date":"2012-01-10T12:07:11.876Z","type":"message"}
{"nick":"ErikCorryV8","message":"It was modified a little in review, so it does not correspond exactly to the version that went out in V8.","date":"2012-01-10T12:07:38.288Z","type":"message"}
{"nick":"ErikCorryV8","message":"The main thing is that it got 10362 merged back from bleeding edge too.","date":"2012-01-10T12:08:11.609Z","type":"message"}
{"nick":"ErikCorryV8","message":"argh, I forgot to update version.cc :-(","date":"2012-01-10T12:08:56.639Z","type":"message"}
{"nick":"ErikCorryV8","message":"Fedor is putting the finishing touches to the numeric hash seeding patch.  That will need to be back ported too if it sticks.","date":"2012-01-10T12:14:45.075Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-01-10T12:25:19.793Z","type":"join"}
{"nick":"indutny","message":"release?","date":"2012-01-10T13:11:42.419Z","type":"message"}
{"nick":"indutny","message":"0.7.0","date":"2012-01-10T13:11:44.684Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: https://github.com/v8/v8/commit/2ee154a5b3d09b7ed0a17a108aec40a2174acee0","date":"2012-01-10T13:15:18.313Z","type":"message"}
{"nick":"ErikCorryV8","message":"Now someone just needs to back port...","date":"2012-01-10T13:18:13.229Z","type":"message"}
{"nick":"ErikCorryV8","message":"To 3.6","date":"2012-01-10T13:18:18.843Z","type":"message"}
{"nick":"bnoordhuis","date":"2012-01-10T14:03:55.624Z","type":"join"}
{"nick":"indutny","message":"what's blocking release?","date":"2012-01-10T14:12:14.950Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ^","date":"2012-01-10T14:12:17.842Z","type":"message"}
{"nick":"benvie","date":"2012-01-10T14:15:19.349Z","type":"join"}
{"nick":"kuebk","date":"2012-01-10T14:18:29.677Z","type":"part"}
{"nick":"voodootikigod_","new_nick":"voodootikigod","date":"2012-01-10T14:19:30.820Z","type":"nick"}
{"nick":"bnoordhuis","message":"indutny: i think it's the potential fix for a segfault in the slab allocator that's being tested by the voxer guys","date":"2012-01-10T14:26:37.996Z","type":"message"}
{"nick":"voodootikigod","reason":"Quit: Write failed: Broken pipe","date":"2012-01-10T14:26:52.160Z","type":"quit"}
{"nick":"indutny","message":"bnoordhuis: aah","date":"2012-01-10T14:27:49.865Z","type":"message"}
{"nick":"indutny","message":"I seen it","date":"2012-01-10T14:27:52.466Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: haven't we fixed problem with uv_ref and process.stdin?","date":"2012-01-10T14:34:37.337Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: looks like it's refed by default","date":"2012-01-10T14:35:01.731Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: and unrefed only on .pause method","date":"2012-01-10T14:35:09.200Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: uhm, probably","date":"2012-01-10T14:35:38.164Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: that's wrong","date":"2012-01-10T14:35:58.548Z","type":"message"}
{"nick":"mrb_bk","reason":"Ping timeout: 240 seconds","date":"2012-01-10T14:40:06.431Z","type":"quit"}
{"nick":"Casan","date":"2012-01-10T14:42:40.626Z","type":"join"}
{"nick":"mrb_bk","date":"2012-01-10T14:49:04.947Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: https://github.com/joyent/node/pull/2500","date":"2012-01-10T14:50:35.304Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: read tty stream should not ref by default","date":"2012-01-10T14:50:53.326Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: maybe not but does it pass all tests?","date":"2012-01-10T14:51:10.809Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: lets see","date":"2012-01-10T14:51:44.667Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: yes","date":"2012-01-10T14:54:54.392Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: btw, looks like debugger-repl test needs to be fixed","date":"2012-01-10T14:55:05.277Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: https://github.com/joyent/node/pull/2501","date":"2012-01-10T14:58:15.641Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: can you prefix your commit logs with 'foo:' instead of '[foo]'? `git am` strips off the latter","date":"2012-01-10T14:59:38.158Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ok","date":"2012-01-10T15:00:19.970Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: next time","date":"2012-01-10T15:00:22.298Z","type":"message"}
{"nick":"mjr_","date":"2012-01-10T15:01:49.942Z","type":"join"}
{"nick":"indutny!~indutny@50-57-79-166.static.cloud-ips.com","topic":"welcome to the void","date":"2012-01-10T15:04:00.423Z","type":"topic"}
{"nick":"indutny","message":"bnoordhuis: but initializing tty's readstream is referncing loop","date":"2012-01-10T15:04:19.513Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: that should be a fix for v0.6 too","date":"2012-01-10T15:04:34.255Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: i don't know","date":"2012-01-10T15:04:45.062Z","type":"message"}
{"nick":"bnoordhuis","message":"calling process.stdin.pause() fixes it","date":"2012-01-10T15:05:28.817Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: yes","date":"2012-01-10T15:06:25.385Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: so you propose calling .pause instead of directly unrefing?","date":"2012-01-10T15:06:52.491Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2012-01-10T15:07:19.344Z","type":"message"}
{"nick":"bnoordhuis","message":"unref'ing the stdin handle unconditionally means that process.stdin.on('foo', ...) stops working","date":"2012-01-10T15:07:40.240Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I think there was .pause some time ago","date":"2012-01-10T15:07:42.159Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I don't understand","date":"2012-01-10T15:08:02.461Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: .pause will do same thing","date":"2012-01-10T15:08:07.242Z","type":"message"}
{"nick":"indutny","message":"aaah","date":"2012-01-10T15:08:12.764Z","type":"message"}
{"nick":"indutny","message":"got it","date":"2012-01-10T15:08:13.974Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: is that better ? https://github.com/joyent/node/pull/2500/files","date":"2012-01-10T15:11:19.635Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: i don't think this is something that needs fixing","date":"2012-01-10T15:12:12.778Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: really? say that to every cli script","date":"2012-01-10T15:12:28.202Z","type":"message"}
{"nick":"bnoordhuis","message":"if you use process.stdin, you should be aware that it refs the event loop and that you need to .pause() it if you're done with it","date":"2012-01-10T15:12:37.599Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: you don't understand","date":"2012-01-10T15:12:48.803Z","type":"message"}
{"nick":"bnoordhuis","message":"i think i understand, i just don't see the problem","date":"2012-01-10T15:13:06.630Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: if I just invoke process.stdin getter, loop will never finish","date":"2012-01-10T15:13:07.012Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I'm not calling anything, neither doing anything indirectly","date":"2012-01-10T15:13:31.659Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: just put 'process.stdin;' line in any cli script and it won't exit","date":"2012-01-10T15:13:47.419Z","type":"message"}
{"nick":"mjr_","reason":"Quit: mjr_","date":"2012-01-10T15:13:51.387Z","type":"quit"}
{"nick":"bnoordhuis","message":"i know that, read my comment above","date":"2012-01-10T15:14:06.450Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: problem? unobvious behaviour? API inconsistency?","date":"2012-01-10T15:14:42.759Z","type":"message"}
{"nick":"indutny","message":"this is really obscure problem","date":"2012-01-10T15:14:52.782Z","type":"message"}
{"nick":"indutny","message":"and many people will spend hours finding what causes their scripts to not exit","date":"2012-01-10T15:15:16.301Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: so I think if want to leave it as it is","date":"2012-01-10T15:15:43.859Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: we should init process.stdin by default","date":"2012-01-10T15:15:51.317Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I don't understand why referencing is good","date":"2012-01-10T15:20:37.161Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: while fix won't hurt performance impact","date":"2012-01-10T15:20:50.511Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: and will save API compatibility","date":"2012-01-10T15:20:58.834Z","type":"message"}
{"nick":"bnoordhuis","message":"well... maybe","date":"2012-01-10T15:22:13.584Z","type":"message"}
{"nick":"bnoordhuis","message":"since you need to call .resume() anyway","date":"2012-01-10T15:22:20.482Z","type":"message"}
{"nick":"bnoordhuis","message":"the thing is, i know it was discussed a while ago and there was a reason to do it like this","date":"2012-01-10T15:23:02.699Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: lets find a commit","date":"2012-01-10T15:23:29.787Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: cf20b6bf65bd037193d6e8b1b671c4659897861f","date":"2012-01-10T15:24:08.581Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ok, so if I'll call resume on it loop will be refed two times instead of one?","date":"2012-01-10T15:25:32.731Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: and probably I'm missing point, but it looks like isaacs just forgot to .pause it","date":"2012-01-10T15:26:14.498Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: ask isaacs when he's online","date":"2012-01-10T15:26:55.112Z","type":"message"}
{"nick":"indutny","message":"k","date":"2012-01-10T15:27:37.240Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: is there a better way to do #2501?","date":"2012-01-10T15:27:56.992Z","type":"message"}
{"nick":"pietern","date":"2012-01-10T15:28:19.125Z","type":"join"}
{"nick":"bnoordhuis","message":"i mean without doing a `if (process.features.isolates)` branch?","date":"2012-01-10T15:28:20.569Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: nope","date":"2012-01-10T15:32:13.014Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: debugger has different outputs","date":"2012-01-10T15:32:18.531Z","type":"message"}
{"nick":"mmalecki","message":"so, hey. can we stop nerdfighting in https://github.com/joyent/node/pull/2454 and actually try coming up with some API?","date":"2012-01-10T15:33:29.871Z","type":"message"}
{"nick":"mmalecki","message":"please?","date":"2012-01-10T15:36:41.009Z","type":"message"}
{"nick":"mmalecki","message":"I'd propose spawn(..., { ipc: true }) for just spawning a process with IPC channel and `fork` which could do rocket science with isolates and whatever.","date":"2012-01-10T15:37:27.002Z","type":"message"}
{"nick":"mmalecki","message":"pretty similar to what indexzero proposed.","date":"2012-01-10T15:37:41.611Z","type":"message"}
{"nick":"mmalecki","message":"anyone has any opinion on that?","date":"2012-01-10T15:39:53.544Z","type":"message"}
{"nick":"mmalecki","message":"I see :/","date":"2012-01-10T15:43:19.424Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u00027cee968\u000f \u000310\u000f/ (src/node_isolate.cc src/node_isolate.h)\u0002:\u000f isolates: add process-global list of isolates - http://git.io/sgAm9w","date":"2012-01-10T15:47:36.123Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: what about socket sharing between isolates?","date":"2012-01-10T15:48:40.499Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: do we  have it?","date":"2012-01-10T15:48:46.050Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I mean fd sharing, actually","date":"2012-01-10T15:49:06.708Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: not yet","date":"2012-01-10T15:49:21.806Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: k, just curious","date":"2012-01-10T15:49:30.793Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Fedor Indutny\u000f \u000307master\u000f * r\u00024cbcdb4\u000f \u000310\u000f/ (2 files)\u0002:\u000f test: make debugger-repl tests work with isolates - http://git.io/4V4fuQ","date":"2012-01-10T15:50:32.411Z","type":"message"}
{"nick":"bnoordhuis","message":"Program terminated with signal 11, Segmentation fault.","date":"2012-01-10T15:51:07.640Z","type":"message"}
{"nick":"bnoordhuis","message":"#0  0x0000000000943f3b in v8::internal::CallIC_Miss(v8::internal::Arguments, v8::internal::Isolate*) () <- not good","date":"2012-01-10T15:51:07.853Z","type":"message"}
{"nick":"isaacs","date":"2012-01-10T15:51:18.862Z","type":"join"}
{"nick":"isaacs","message":"indutny: what's up?","date":"2012-01-10T15:51:26.518Z","type":"message"}
{"nick":"indutny","message":"isaacs: cf20b6bf65bd037193d6e8b1b671c4659897861f","date":"2012-01-10T15:52:35.769Z","type":"message"}
{"nick":"indutny","message":"hi","date":"2012-01-10T15:52:37.875Z","type":"message"}
{"nick":"indutny","message":"https://github.com/joyent/node/commits/cf20b6bf65bd037193d6e8b1b671c4659897861f","date":"2012-01-10T15:52:48.890Z","type":"message"}
{"nick":"indutny","message":"oops, wrong url","date":"2012-01-10T15:53:00.857Z","type":"message"}
{"nick":"indutny","message":"https://github.com/joyent/node/commit/cf20b6bf65bd037193d6e8b1b671c4659897861f","date":"2012-01-10T15:53:01.376Z","type":"message"}
{"nick":"indutny","message":"isaacs: we was discussing with bnoordhuis a behaviour of process.stdin","date":"2012-01-10T15:53:43.157Z","type":"message"}
{"nick":"bnoordhuis","message":"^ indutny talks so street","date":"2012-01-10T15:54:12.985Z","type":"message"}
{"nick":"indutny","message":"isaacs: is that was made with some purpose? ./node  -e 'process.stdin' <- will never exit","date":"2012-01-10T15:54:22.555Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: :)","date":"2012-01-10T15:54:34.140Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: just adding context to my words","date":"2012-01-10T15:54:39.720Z","type":"message"}
{"nick":"mmalecki","message":"can I have some feedback for https://github.com/joyent/node/pull/2454#issuecomment-3431711 ?","date":"2012-01-10T15:55:27.820Z","type":"message"}
{"nick":"isaacs","message":"indutny: i don't love having process.stdin be a getter.","date":"2012-01-10T15:55:29.889Z","type":"message"}
{"nick":"indutny","message":"isaacs: I thought process.stdin should be paused immediately after creation, and your commit was intended to fix that problem","date":"2012-01-10T15:55:31.096Z","type":"message"}
{"nick":"indutny","message":"isaacs: that's another question","date":"2012-01-10T15:55:50.108Z","type":"message"}
{"nick":"indutny","message":"isaacs: and problem","date":"2012-01-10T15:55:54.420Z","type":"message"}
{"nick":"indutny","message":"isaacs: but should we unref it by default?","date":"2012-01-10T15:56:07.070Z","type":"message"}
{"nick":"indutny","message":"isaacs: is that what your commit was intended to fix?","date":"2012-01-10T15:56:20.286Z","type":"message"}
{"nick":"isaacs","message":"indutny: the problem was that there was no way to close it except to completely destroy it.","date":"2012-01-10T15:56:25.230Z","type":"message"}
{"nick":"isaacs","message":"which meant it couldn't be read from again","date":"2012-01-10T15:56:35.992Z","type":"message"}
{"nick":"isaacs","message":"so, .resume() has to ref it, and .pause() has to unref it","date":"2012-01-10T15:56:50.354Z","type":"message"}
{"nick":"indutny","message":"isaacs: ah, so you're ok with process.stdin blocking process","date":"2012-01-10T15:56:56.423Z","type":"message"}
{"nick":"indutny","message":"and breaking backwards compatibility ","date":"2012-01-10T15:57:03.676Z","type":"message"}
{"nick":"isaacs","message":"but, the real question is, should the process.stdin be a getter that calls process.openStdin()","date":"2012-01-10T15:57:09.363Z","type":"message"}
{"nick":"indutny","message":"isaacs: if not - what should it be?","date":"2012-01-10T15:57:28.070Z","type":"message"}
{"nick":"isaacs","message":"or should you have to call process.stdin.resume() once to \"open\" it","date":"2012-01-10T15:57:35.898Z","type":"message"}
{"nick":"isaacs","message":"which is how it was pre-0.4","date":"2012-01-10T15:57:43.036Z","type":"message"}
{"nick":"indutny","message":"isaacs: yes, that's it","date":"2012-01-10T15:57:58.898Z","type":"message"}
{"nick":"indutny","message":"isaacs: I think previous semantics were better","date":"2012-01-10T15:58:17.374Z","type":"message"}
{"nick":"isaacs","message":"really, this change you reference is a step towards the 0.4 semantics.  i think we're mostly in agreement here about how it should be.","date":"2012-01-10T15:58:39.176Z","type":"message"}
{"nick":"isaacs","message":"but, here's the rub:","date":"2012-01-10T15:58:44.560Z","type":"message"}
{"nick":"isaacs","message":"people do `process.stdin.on(\"data\", blah blah blah)`, right?","date":"2012-01-10T15:58:54.226Z","type":"message"}
{"nick":"indutny","message":"right","date":"2012-01-10T15:59:00.952Z","type":"message"}
{"nick":"isaacs","message":"and they expect that to work","date":"2012-01-10T15:59:04.058Z","type":"message"}
{"nick":"indutny","message":"and it'll work","date":"2012-01-10T15:59:10.955Z","type":"message"}
{"nick":"indutny","message":"if they'll resume stream","date":"2012-01-10T15:59:14.576Z","type":"message"}
{"nick":"indutny","message":"it should be paused by default","date":"2012-01-10T15:59:22.351Z","type":"message"}
{"nick":"indutny","message":"if you won't call function to receive data from stdin in C++","date":"2012-01-10T15:59:40.713Z","type":"message"}
{"nick":"indutny","message":"app will just exit","date":"2012-01-10T15:59:48.776Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T15:59:53.888Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/node#214 (master - 7cee968 : Ben Noordhuis): The build is still failing.","date":"2012-01-10T15:59:54.105Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/node/compare/6b2091b...7cee968","date":"2012-01-10T15:59:54.106Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/node/builds/502558","date":"2012-01-10T15:59:54.106Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T15:59:54.106Z","type":"part"}
{"nick":"indutny","message":"so you need to explicitly read it","date":"2012-01-10T16:00:00.164Z","type":"message"}
{"nick":"isaacs","message":"well… we could magic up the .on function on the stdin stream","date":"2012-01-10T16:00:02.993Z","type":"message"}
{"nick":"isaacs","message":"i'd rather do that than have a magic getter","date":"2012-01-10T16:00:09.342Z","type":"message"}
{"nick":"indutny","message":"getter is a voodoo magic now, agreed","date":"2012-01-10T16:00:27.681Z","type":"message"}
{"nick":"pietern","reason":"Ping timeout: 255 seconds","date":"2012-01-10T16:00:28.340Z","type":"quit"}
{"nick":"indutny","message":"but I think explicit process.stdin.resume() is good","date":"2012-01-10T16:00:47.239Z","type":"message"}
{"nick":"isaacs","message":"what i'd like to maybe do is if you call on(\"data\") or on(\"end\"), it'll resume it.","date":"2012-01-10T16:00:57.650Z","type":"message"}
{"nick":"indutny","message":"it's like fgets","date":"2012-01-10T16:00:58.203Z","type":"message"}
{"nick":"indutny","message":"isaacs: that's obscure","date":"2012-01-10T16:01:10.680Z","type":"message"}
{"nick":"isaacs","message":"yeah, but really, the metaphor should be to ruby and python here, i think, not to C","date":"2012-01-10T16:01:12.234Z","type":"message"}
{"nick":"indutny","message":"isaacs: and how do they do that?","date":"2012-01-10T16:01:23.483Z","type":"message"}
{"nick":"indutny","message":"isaacs: they're both blocking (by default)","date":"2012-01-10T16:01:35.624Z","type":"message"}
{"nick":"isaacs","message":"i'm not sure, exactly.  not with nonblocking io ;)","date":"2012-01-10T16:01:36.828Z","type":"message"}
{"nick":"indutny","message":"isaacs: yes, that's the case","date":"2012-01-10T16:01:45.653Z","type":"message"}
{"nick":"pietern","date":"2012-01-10T16:01:47.202Z","type":"join"}
{"nick":"bnoordhuis","message":"isaacs: i don't think process.stdin.on('data', ...) works right now, you have to .resume() it first","date":"2012-01-10T16:01:49.272Z","type":"message"}
{"nick":"indutny","message":"even better! :)","date":"2012-01-10T16:02:06.087Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i thought it opened automatically when you reference it","date":"2012-01-10T16:02:32.891Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T16:02:41.763Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/node#215 (master - 4cbcdb4 : Fedor Indutny): The build is still failing.","date":"2012-01-10T16:02:41.979Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/node/compare/7cee968...4cbcdb4","date":"2012-01-10T16:02:41.979Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/node/builds/502579","date":"2012-01-10T16:02:41.979Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T16:02:41.979Z","type":"part"}
{"nick":"bnoordhuis","message":"isaacs: try this: node -e 'process.stdin.on(\"data\", console.error)'","date":"2012-01-10T16:02:58.321Z","type":"message"}
{"nick":"bnoordhuis","message":"vs. node -e 'process.stdin.resume(); process.stdin.on(\"data\", console.error)'","date":"2012-01-10T16:03:04.217Z","type":"message"}
{"nick":"isaacs","message":"oh, right","date":"2012-01-10T16:03:17.726Z","type":"message"}
{"nick":"isaacs","message":"ok, that's a bug, then","date":"2012-01-10T16:03:22.058Z","type":"message"}
{"nick":"isaacs","message":"we should probably not ref on the getter","date":"2012-01-10T16:03:33.101Z","type":"message"}
{"nick":"indutny","message":"yes!!!","date":"2012-01-10T16:03:41.775Z","type":"message"}
{"nick":"indutny","message":":D","date":"2012-01-10T16:03:42.636Z","type":"message"}
{"nick":"isaacs","message":"and instead only ref on resume, and then decide explicitly where and if we want to automatically call .resume() to make users not surprised.","date":"2012-01-10T16:04:02.162Z","type":"message"}
{"nick":"mmalecki","message":"will isolates share a global context or module cache?","date":"2012-01-10T16:04:07.195Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: no","date":"2012-01-10T16:04:15.049Z","type":"message"}
{"nick":"indutny","message":"mmalecki: they're isolates, they're isolates from each other (mostly)","date":"2012-01-10T16:04:39.757Z","type":"message"}
{"nick":"mmalecki","message":"indutny: and fork is called fork, but it isn't fork at all :). wanted to make sure.","date":"2012-01-10T16:05:08.482Z","type":"message"}
{"nick":"indutny","message":"mmalecki: and supposed to contact each other only through messaging channel","date":"2012-01-10T16:05:09.520Z","type":"message"}
{"nick":"indutny","message":"mmalecki: hahaha :)","date":"2012-01-10T16:05:16.812Z","type":"message"}
{"nick":"indutny","message":"righto","date":"2012-01-10T16:05:18.189Z","type":"message"}
{"nick":"paddybyers","message":"bnoordhuis: a quick (probably dumb) question:","date":"2012-01-10T16:06:13.141Z","type":"message"}
{"nick":"paddybyers","message":"why is minizip in the tree, but nothing uses it?","date":"2012-01-10T16:06:31.439Z","type":"message"}
{"nick":"bnoordhuis","message":"paddybyers: because it's part of zlib","date":"2012-01-10T16:06:42.661Z","type":"message"}
{"nick":"paddybyers","message":"there's no plan for a js binding for it?","date":"2012-01-10T16:07:05.643Z","type":"message"}
{"nick":"bnoordhuis","message":"paddybyers: no. but i could imagine taking a patch for that","date":"2012-01-10T16:07:29.361Z","type":"message"}
{"nick":"paddybyers","message":"ok I did a quick port of https://github.com/springmeyer/node-zipfile to use minizip instead","date":"2012-01-10T16:08:10.612Z","type":"message"}
{"nick":"bnoordhuis","message":"the problem is... give the unwashed masses a zip binding and they'll start clamoring for tar support, bzip2, etc","date":"2012-01-10T16:08:13.185Z","type":"message"}
{"nick":"paddybyers","message":"of course","date":"2012-01-10T16:08:43.850Z","type":"message"}
{"nick":"isaacs","message":"i'm not sure that zip qualifies as a core internet protocol.","date":"2012-01-10T16:08:54.175Z","type":"message"}
{"nick":"isaacs","message":"gzip? absolutely.","date":"2012-01-10T16:08:58.009Z","type":"message"}
{"nick":"isaacs","message":"you cannot reasonably run a web server or client in an optimum way on the modern internet without gzip.","date":"2012-01-10T16:09:14.911Z","type":"message"}
{"nick":"bnoordhuis","message":"i kind of agree with that","date":"2012-01-10T16:09:20.632Z","type":"message"}
{"nick":"isaacs","message":"but zip?  meh.","date":"2012-01-10T16:09:22.527Z","type":"message"}
{"nick":"bnoordhuis","message":"and there are already good zip modules out there","date":"2012-01-10T16:09:29.065Z","type":"message"}
{"nick":"isaacs","message":"node is not about providing a binding to every library it bundles.  there are huge bits of openssl that we don't expose, either.","date":"2012-01-10T16:09:54.836Z","type":"message"}
{"nick":"paddybyers","message":"bnoordhuis: only ones that spawn zip, or use zip.h, and I've got neither on Android","date":"2012-01-10T16:10:07.114Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: btw, are we build openssl with zlib?","date":"2012-01-10T16:10:21.320Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yeah, i dont' think there are many good zip modules out there.","date":"2012-01-10T16:10:34.211Z","type":"message"}
{"nick":"paddybyers","message":"it's ok, it's fine to keep it as a separate addon","date":"2012-01-10T16:10:41.552Z","type":"message"}
{"nick":"isaacs","message":"paddybyers: kriszyp's module just does it in js","date":"2012-01-10T16:10:44.029Z","type":"message"}
{"nick":"bnoordhuis","message":"^ that's the one i mean","date":"2012-01-10T16:10:54.579Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: yes","date":"2012-01-10T16:11:03.079Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: but it's not fast.","date":"2012-01-10T16:11:04.287Z","type":"message"}
{"nick":"isaacs","message":"(last i checked)","date":"2012-01-10T16:11:09.347Z","type":"message"}
{"nick":"bnoordhuis","message":"it's a good incentive for the v8 guys to get off their backs","date":"2012-01-10T16:11:31.015Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: what do you think? https://github.com/joyent/node/pull/2454#issuecomment-3431711","date":"2012-01-10T16:11:46.714Z","type":"message"}
{"nick":"bnoordhuis","action":"is off to dinner","date":"2012-01-10T16:12:53.684Z","type":"action"}
{"nick":"paddybyers","message":"https://github.com/paddybyers/node-zipfile/tree/master-minizip if anyone's interested","date":"2012-01-10T16:13:40.155Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: i think this is probably not going to change.","date":"2012-01-10T16:13:56.984Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: why?","date":"2012-01-10T16:14:17.512Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: because that adds complexity to the api unnecessarily.","date":"2012-01-10T16:14:29.247Z","type":"message"}
{"nick":"pquerna","message":"minizip is pretty easy to embed and such. use it in our lua stuff.","date":"2012-01-10T16:14:32.869Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: no, it actually reduces complexity - things become more generice","date":"2012-01-10T16:14:55.456Z","type":"message"}
{"nick":"mmalecki","message":"*generic","date":"2012-01-10T16:14:59.255Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: it adds an option, for the ostensible purpose of making fork() able to run non-javascript programs","date":"2012-01-10T16:15:29.276Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: generic does not always mean lower complexity.","date":"2012-01-10T16:15:43.501Z","type":"message"}
{"nick":"isaacs","message":"orthogonal concerns.","date":"2012-01-10T16:15:51.820Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: I don't want changes to fork(), I want spawn to support ipc","date":"2012-01-10T16:16:54.397Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: then that's even more complexity added, becasue now we are exposing something that we explicitly want to be able to change in the near future.","date":"2012-01-10T16:17:33.170Z","type":"message"}
{"nick":"isaacs","message":"exposing an api locks it in place.","date":"2012-01-10T16:17:38.004Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: hm, you want to change spawn API?","date":"2012-01-10T16:17:59.449Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: not the api, no, but the implementation.","date":"2012-01-10T16:18:11.140Z","type":"message"}
{"nick":"isaacs","message":"if we expose the ipc functionality like your'e suggesting, then we're locked into a specific set of semantics that we're still experimenting with.","date":"2012-01-10T16:18:30.504Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: you want spawn to be able to spawn node processes only?","date":"2012-01-10T16:18:33.608Z","type":"message"}
{"nick":"isaacs","message":"because then it becomes api","date":"2012-01-10T16:18:36.543Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: i want a way to say \"Run another node program and set up a communication channel with it\".","date":"2012-01-10T16:18:51.602Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: so do I.","date":"2012-01-10T16:19:04.020Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: I just want it to be configurable.","date":"2012-01-10T16:19:14.069Z","type":"message"}
{"nick":"isaacs","message":"if you want that program to be a coffee-script loader, then write \"require(\"coffee-script\"); require(process.argv[2])\" in app.js, and do fork(\"app.js foo.coffee\")","date":"2012-01-10T16:19:17.769Z","type":"message"}
{"nick":"isaacs","message":"\"configurable\" == \"more complicated\"","date":"2012-01-10T16:19:40.756Z","type":"message"}
{"nick":"isaacs","message":"in almost every case.","date":"2012-01-10T16:19:44.589Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: making things easier for userland is good.","date":"2012-01-10T16:20:23.696Z","type":"message"}
{"nick":"isaacs","message":"i fail to see how this is making things much harder for userland.","date":"2012-01-10T16:20:36.904Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: if you disagree, please remove http module. it can be implemented with net module.","date":"2012-01-10T16:20:46.622Z","type":"message"}
{"nick":"isaacs","message":"\"use javascript with child_process.fork()\" is not the end of the world.","date":"2012-01-10T16:20:54.412Z","type":"message"}
{"nick":"isaacs","message":"it takes 2 lines to work around it.","date":"2012-01-10T16:20:57.689Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: that's a reduction to absurdity.  there is a line, you know that.","date":"2012-01-10T16:21:10.805Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2012-01-10T16:21:20.663Z","type":"quit"}
{"nick":"mmalecki","message":"isaacs: \"workaround\" is the keyword here.","date":"2012-01-10T16:21:20.874Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: it's not a use case that fork() is designed to address.","date":"2012-01-10T16:21:31.737Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: but spawn is","date":"2012-01-10T16:21:43.983Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: ok","date":"2012-01-10T16:21:49.011Z","type":"message"}
{"nick":"isaacs","message":"so use spawn :)","date":"2012-01-10T16:23:20.775Z","type":"message"}
{"nick":"isaacs","message":"communicate over stdio","date":"2012-01-10T16:23:27.871Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: so reimplement core functionality?","date":"2012-01-10T16:23:48.891Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: no, you're talking about implementing *different* functionality.  that's the whole point.","date":"2012-01-10T16:24:05.279Z","type":"message"}
{"nick":"isaacs","message":"but i mean, we could have the same conversation about chroot, or memmap, or a bunch of other things.","date":"2012-01-10T16:24:31.021Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: I just want core API to not suck.","date":"2012-01-10T16:25:24.510Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: what yoer' talking about is making the core api bigger.","date":"2012-01-10T16:25:34.424Z","type":"message"}
{"nick":"mmalecki","message":"I'm not even asking for a new API, really. I'm asking for making old API more generic.","date":"2012-01-10T16:25:44.258Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: ok, so can we do that if it doesn't add any code?","date":"2012-01-10T16:26:08.772Z","type":"message"}
{"nick":"isaacs","message":"…by adding a new option to it","date":"2012-01-10T16:26:09.808Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: \"doesn't add any code\"?","date":"2012-01-10T16:26:25.185Z","type":"message"}
{"nick":"mmalecki","message":"lines added - lines removed < 0","date":"2012-01-10T16:26:37.186Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: oh, no.","date":"2012-01-10T16:26:41.362Z","type":"message"}
{"nick":"isaacs","message":"we can do it if it doesn't change the api at all.","date":"2012-01-10T16:26:50.307Z","type":"message"}
{"nick":"isaacs","message":";)","date":"2012-01-10T16:26:57.502Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: is that a way of saying 'fuck you, go and reimplement it?'","date":"2012-01-10T16:27:24.563Z","type":"message"}
{"nick":"isaacs","message":"we have to be very careful about changing the api surface.","date":"2012-01-10T16:27:29.219Z","type":"message"}
{"nick":"isaacs","message":"minus the \"fuck you, \"","date":"2012-01-10T16:27:35.427Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: in my opinion, adding .fork() in the first place was extremely regrettable.  however, the spawn() api is not suitable for running isolates, and there was a lot of call for that.","date":"2012-01-10T16:28:35.287Z","type":"message"}
{"nick":"slaskis","reason":"Quit: slaskis","date":"2012-01-10T16:28:50.841Z","type":"quit"}
{"nick":"isaacs","message":"mmalecki: but why can't you just spawn() a process, and send json over stdio now?","date":"2012-01-10T16:28:52.472Z","type":"message"}
{"nick":"isaacs","message":"i mean, you don't even have to write any C++ to make this happen.","date":"2012-01-10T16:29:04.353Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: openssl is building w/o zlib","date":"2012-01-10T16:29:55.490Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: I'm going to. but I'd have to set some fd's to non-blocking mode, no?","date":"2012-01-10T16:30:04.371Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: just added random stuff to zlib compressor's file","date":"2012-01-10T16:30:07.136Z","type":"message"}
{"nick":"isaacs","message":"or you could just say that forever doens't support coffeescript, and tell people to speak through a js file.","date":"2012-01-10T16:30:11.967Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: compiler never gets in","date":"2012-01-10T16:30:12.656Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: and they could write the two-line js loader shim themselves.","date":"2012-01-10T16:30:34.176Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: or they can compile their cs to js","date":"2012-01-10T16:30:40.780Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: it's not as if there aren't already easy ways around the alleged problem here.","date":"2012-01-10T16:30:53.055Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: we have to be careful with changing the api surface.","date":"2012-01-10T16:30:54.616Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: there are far more people using node than using forever.","date":"2012-01-10T16:31:16.507Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: just messing with you :)","date":"2012-01-10T16:32:09.315Z","type":"message"}
{"nick":"isaacs","message":"i don't want to dull your enthusiasm.","date":"2012-01-10T16:32:30.305Z","type":"message"}
{"nick":"isaacs","message":"but we have to stay focused.","date":"2012-01-10T16:32:59.855Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: this issue doesn't make me enthustiastic about contributing to core at all, unfortunately","date":"2012-01-10T16:33:09.764Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: i think it would help to make the roadmap more public.","date":"2012-01-10T16:33:26.032Z","type":"message"}
{"nick":"isaacs","message":"working on that.","date":"2012-01-10T16:33:27.783Z","type":"message"}
{"nick":"mmalecki","message":"but well, I have a war to win!","date":"2012-01-10T16:33:31.407Z","type":"message"}
{"nick":"isaacs","message":"\"you can do that in 2 lines of JS\" is a very compelling argument to say \"no\" to any proposed api change.","date":"2012-01-10T16:34:05.502Z","type":"message"}
{"nick":"isaacs","message":"in fact, in forever, you can even choose to add some shim yourself that does this.","date":"2012-01-10T16:34:52.941Z","type":"message"}
{"nick":"isaacs","message":"and your users can see the same surface as if you got your core proposal.","date":"2012-01-10T16:35:07.083Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: I'm going to reimplement fork in more generic way.","date":"2012-01-10T16:35:23.905Z","type":"message"}
{"nick":"isaacs","message":"that sounds like more work than necessary.","date":"2012-01-10T16:35:32.176Z","type":"message"}
{"nick":"isaacs","message":"and it sounds like unnecessarily adding a compilation step to your module.","date":"2012-01-10T16:35:44.680Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: that sounds generic :)","date":"2012-01-10T16:35:46.227Z","type":"message"}
{"nick":"isaacs","message":"unnecessary compilation is like unnecessary surgery.","date":"2012-01-10T16:36:06.971Z","type":"message"}
{"nick":"isaacs","message":"why not just detect coffeescript and add a js shim for that?","date":"2012-01-10T16:36:58.011Z","type":"message"}
{"nick":"isaacs","message":"or tell your users to?","date":"2012-01-10T16:37:01.462Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: I only need it for setting fds to non-blocking mode, no?","date":"2012-01-10T16:37:12.693Z","type":"message"}
{"nick":"mmalecki","message":"anyway, is 0.7 release expected to happen today?","date":"2012-01-10T16:39:22.154Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: oh, actually, it looks like fork is all-js anyway","date":"2012-01-10T16:40:35.588Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny++ (re number hash fix)","date":"2012-01-10T16:40:57.979Z","type":"message"}
{"nick":"kohai","message":"indutny has 2 beers","date":"2012-01-10T16:40:58.190Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: that was easy, you and ErikCorryV8 done most of job","date":"2012-01-10T16:41:39.636Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: yeah, i haven't looked at this in a while.  looks like all the c++ bits moved to libuv.","date":"2012-01-10T16:41:40.689Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: what node has is just js","date":"2012-01-10T16:41:47.671Z","type":"message"}
{"nick":"piscisaureus_","message":"ok ErikCorryV8++ then :-)","date":"2012-01-10T16:41:55.837Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: but, 100 lines of js vs a 2 line shim?  i think the simpler path is obvious.","date":"2012-01-10T16:42:03.264Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: no, we also need stdout and stderr","date":"2012-01-10T16:42:32.568Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: :)","date":"2012-01-10T16:42:36.712Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: you'd get that with a js shim","date":"2012-01-10T16:42:44.049Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: you fork to a js file that require()s the coffee-script file.","date":"2012-01-10T16:42:58.465Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: hm, no? fork has no .stdout or .stderr.","date":"2012-01-10T16:43:11.743Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: have you worked with openssl compression?","date":"2012-01-10T16:43:15.366Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: oh, i see.","date":"2012-01-10T16:43:20.601Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: how may I choose one?","date":"2012-01-10T16:43:22.674Z","type":"message"}
{"nick":"isaacs","message":"you need stdout and stderr to not be shared with the parent?","date":"2012-01-10T16:43:28.583Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: yes. and to be actually accessible.","date":"2012-01-10T16:43:52.330Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: same thing","date":"2012-01-10T16:43:57.160Z","type":"message"}
{"nick":"mmalecki","message":"we have logging based on that","date":"2012-01-10T16:43:57.888Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: ok, so what you really want then, is a spawn() that lets you do logging through a fd=4 channel?","date":"2012-01-10T16:44:23.939Z","type":"message"}
{"nick":"AndreasMadsen","date":"2012-01-10T16:44:35.948Z","type":"join"}
{"nick":"isaacs","message":"er, 3","date":"2012-01-10T16:44:36.165Z","type":"message"}
{"nick":"ErikCorryV8","reason":"Ping timeout: 258 seconds","date":"2012-01-10T16:45:06.361Z","type":"quit"}
{"nick":"mmalecki","message":"isaacs: and fd=3 is? what I really want spawn which can pass messages around.","date":"2012-01-10T16:45:37.799Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: check out the createChannel function in lib/child_process.js","date":"2012-01-10T16:46:23.357Z","type":"message"}
{"nick":"isaacs","message":"er, setupChannel function, i mean","date":"2012-01-10T16:46:43.913Z","type":"message"}
{"nick":"isaacs","message":"you can also have the child process connect to a socket.","date":"2012-01-10T16:47:04.357Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: it's a private API, no?","date":"2012-01-10T16:47:30.255Z","type":"message"}
{"nick":"indutny","message":"ryah: yt?","date":"2012-01-10T16:47:50.477Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: yeah.  so you'll have to reimplement a lot of it.","date":"2012-01-10T16:47:53.883Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: but really, i think this is a bad path to head down.","date":"2012-01-10T16:48:02.338Z","type":"message"}
{"nick":"isaacs","message":"i don't think you really need this thing you think you need.","date":"2012-01-10T16:48:07.198Z","type":"message"}
{"nick":"indutny","message":"oh, not ryah","date":"2012-01-10T16:48:19.420Z","type":"message"}
{"nick":"indutny","message":"sorry","date":"2012-01-10T16:48:20.319Z","type":"message"}
{"nick":"indutny","message":"or not!","date":"2012-01-10T16:49:05.670Z","type":"message"}
{"nick":"indutny","message":"ryah: https://github.com/joyent/node/commit/e83c6959","date":"2012-01-10T16:49:06.881Z","type":"message"}
{"nick":"indutny","message":"defend! :)","date":"2012-01-10T16:49:12.397Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: probably you can help too https://github.com/joyent/node/commit/e83c6959","date":"2012-01-10T16:49:33.557Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: I'm intelligent enough to know what me and my users need.","date":"2012-01-10T16:49:45.307Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: if it only took intelligence, i'd agree with you.","date":"2012-01-10T16:50:19.609Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: but that's not the point.","date":"2012-01-10T16:50:24.091Z","type":"message"}
{"nick":"isaacs","message":"or rather, that's a much more general point.","date":"2012-01-10T16:50:33.881Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: ryah's defense: http://journal.paul.querna.org/articles/2011/04/05/openssl-memory-use/","date":"2012-01-10T16:50:58.373Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: right, experience and stuff. whatever, I will implement it anyway.","date":"2012-01-10T16:51:52.994Z","type":"message"}
{"nick":"isaacs","message":"k","date":"2012-01-10T16:52:04.472Z","type":"message"}
{"nick":"isaacs","message":"i think you've fully asked 2 why's.  you need 3 more.","date":"2012-01-10T16:52:32.996Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: do we have latest openssl?","date":"2012-01-10T16:52:54.780Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: I think by the time we were using system openssl","date":"2012-01-10T16:53:11.510Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: I can't grep SSL_OP_NO_COMPRESSION","date":"2012-01-10T16:53:16.208Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: nope","date":"2012-01-10T16:53:18.474Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: ah, by the time of article?","date":"2012-01-10T16:53:27.633Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: on master we has static openssl I think","date":"2012-01-10T16:53:36.657Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: sorry? I don't think I follow.","date":"2012-01-10T16:53:45.142Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: that patch is almost a year ago :-)","date":"2012-01-10T16:53:58.822Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: may be it's time to review it :)","date":"2012-01-10T16:54:18.607Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: http://en.wikipedia.org/wiki/5_Whys","date":"2012-01-10T16:54:35.515Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: SSL_MODE_RELEASE_BUFFERS","date":"2012-01-10T16:55:10.990Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: ah, that's not related","date":"2012-01-10T16:55:29.662Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: well at least we can build openssl with zlib","date":"2012-01-10T16:55:49.903Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: otherwise users won't be able to use it","date":"2012-01-10T16:56:05.019Z","type":"message"}
{"nick":"isaacs","message":"in practice, sometimes it takes more than 5.","date":"2012-01-10T16:56:24.777Z","type":"message"}
{"nick":"isaacs","message":"but 5 is a good number to shoot for, since most people stop at 1, and most smart people stop at 2 or 3","date":"2012-01-10T16:56:37.549Z","type":"message"}
{"nick":"dap","date":"2012-01-10T16:58:11.751Z","type":"join"}
{"nick":"mmalecki","message":"isaacs: I see. I don't think I have any question to ask now, tho.","date":"2012-01-10T16:58:35.884Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: it is outside of my area of expertise. I think you should talk to rya","date":"2012-01-10T16:59:04.392Z","type":"message"}
{"nick":"piscisaureus_","message":"... to ryah or pquerna about this","date":"2012-01-10T16:59:14.470Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: answer will be 'no' anyway. let's just stop waisting your time and go waste my time instead.","date":"2012-01-10T16:59:29.526Z","type":"message"}
{"nick":"indutny","message":"ryah: pquerna: ping :)","date":"2012-01-10T17:00:08.350Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: it's not a car breakage or even a proper bug. it's your design problem. it's not that easy to diagnose because it happens in your mind.","date":"2012-01-10T17:01:51.717Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: ok","date":"2012-01-10T17:02:59.230Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: ok, confirm memory leaking with compressors on is true on latest node too","date":"2012-01-10T17:04:51.895Z","type":"message"}
{"nick":"indutny","message":"200 mb in 30 seconds","date":"2012-01-10T17:04:56.933Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: oh, it's leaking memory even w/o compressors","date":"2012-01-10T17:08:21.957Z","type":"message"}
{"nick":"perezd","date":"2012-01-10T17:09:59.253Z","type":"join"}
{"nick":"perezd","reason":"Excess Flood","date":"2012-01-10T17:09:59.772Z","type":"quit"}
{"nick":"paddybyers","date":"2012-01-10T17:10:10.933Z","type":"part"}
{"nick":"paddybyers","date":"2012-01-10T17:10:29.813Z","type":"join"}
{"nick":"indutny","message":"or my spdy server is leaking...","date":"2012-01-10T17:12:29.980Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2012-01-10T17:12:31.013Z","type":"message"}
{"nick":"dshaw_","date":"2012-01-10T17:26:04.001Z","type":"join"}
{"nick":"indutny","message":"isaacs: zlib is leaking","date":"2012-01-10T17:28:37.157Z","type":"message"}
{"nick":"isaacs","message":"indutny: oh?","date":"2012-01-10T17:28:43.710Z","type":"message"}
{"nick":"indutny","message":"isaacs: opening bug","date":"2012-01-10T17:28:51.635Z","type":"message"}
{"nick":"isaacs","message":"can you reproduce?","date":"2012-01-10T17:28:58.021Z","type":"message"}
{"nick":"isaacs","message":"and is it actually leaking, or just using a bunch of memory?","date":"2012-01-10T17:29:05.264Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: In your test case you should check whether GCs are triggered","date":"2012-01-10T17:29:46.183Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: isaacs https://github.com/joyent/node/issues/2504","date":"2012-01-10T17:29:57.168Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: if I won't trigger it, node will crash in seconds","date":"2012-01-10T17:30:10.448Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: because malloc will fial","date":"2012-01-10T17:30:15.284Z","type":"message"}
{"nick":"indutny","message":"s/fial/fail","date":"2012-01-10T17:30:18.583Z","type":"message"}
{"nick":"isaacs","message":"indutny: what do you expect from that?","date":"2012-01-10T17:30:38.037Z","type":"message"}
{"nick":"indutny","message":"isaacs: to not leak memory :)","date":"2012-01-10T17:30:51.494Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: well it leaks here","date":"2012-01-10T17:31:01.004Z","type":"message"}
{"nick":"piscisaureus_","message":"although it takes a while to crash","date":"2012-01-10T17:31:05.836Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: yes","date":"2012-01-10T17:31:10.665Z","type":"message"}
{"nick":"piscisaureus_","message":"it's leaking about 20mb per second","date":"2012-01-10T17:31:13.095Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: but that is a bug","date":"2012-01-10T17:31:14.118Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: because streams are getting gc","date":"2012-01-10T17:31:24.612Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: and using zlib is critical for spdy","date":"2012-01-10T17:31:41.102Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: I think it could be due to the close() callback being deferred","date":"2012-01-10T17:31:51.845Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: what if you run it in a nextTick loop?","date":"2012-01-10T17:32:01.682Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: one sec","date":"2012-01-10T17:32:15.535Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny oh wait","date":"2012-01-10T17:32:58.075Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: you are never releasing the stream :-/","date":"2012-01-10T17:33:04.942Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: how should  I do that?","date":"2012-01-10T17:33:13.892Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: stream.end / destroy ?!","date":"2012-01-10T17:33:43.955Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: setting p to some new value should release it","date":"2012-01-10T17:33:47.404Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: it should get cleaned up if the reference is gc'ed","date":"2012-01-10T17:34:02.537Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: I'll do destroy","date":"2012-01-10T17:34:03.781Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: but actually nextTick trick helps","date":"2012-01-10T17:34:09.148Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: well it actually still leaks for me but much slower","date":"2012-01-10T17:35:47.585Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: yes","date":"2012-01-10T17:35:53.209Z","type":"message"}
{"nick":"indutny","message":"much slower","date":"2012-01-10T17:35:55.937Z","type":"message"}
{"nick":"Casan","reason":"Quit: Leaving","date":"2012-01-10T17:36:32.941Z","type":"quit"}
{"nick":"isaacs","message":"indutny: no .destroy() on zlib streams","date":"2012-01-10T17:36:51.804Z","type":"message"}
{"nick":"isaacs","message":"indutny: it's all handled in .end()","date":"2012-01-10T17:36:57.520Z","type":"message"}
{"nick":"indutny","message":"isaacs: nothing is really handled here :)","date":"2012-01-10T17:37:25.270Z","type":"message"}
{"nick":"indutny","message":"but looks like this is not an issue that I'm experiencing with node-spdy","date":"2012-01-10T17:37:38.916Z","type":"message"}
{"nick":"indutny","message":"something else is leakig","date":"2012-01-10T17:37:44.070Z","type":"message"}
{"nick":"indutny","message":"s/leakig/leaking","date":"2012-01-10T17:37:50.460Z","type":"message"}
{"nick":"isaacs","message":"gotta run to a meeting.  i'll investigate in a bit.","date":"2012-01-10T17:37:50.683Z","type":"message"}
{"nick":"indutny","message":"isaacs: k thank you","date":"2012-01-10T17:38:02.325Z","type":"message"}
{"nick":"isaacs","reason":"Quit: isaacs","date":"2012-01-10T17:38:05.806Z","type":"quit"}
{"nick":"piscisaureus_","message":"node_zlib.cc has some style issues","date":"2012-01-10T17:41:38.763Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: yes, but that's not an issue","date":"2012-01-10T17:43:10.043Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: I wonder how we ensure that the ZCtx object is not cleaned up before the thread pool action returns","date":"2012-01-10T17:43:48.137Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: ooh","date":"2012-01-10T17:44:00.993Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: that applies for many other things too","date":"2012-01-10T17:44:09.024Z","type":"message"}
{"nick":"piscisaureus_","message":"it looks like some bits are missing here","date":"2012-01-10T17:44:15.578Z","type":"message"}
{"nick":"piscisaureus_","message":"no","date":"2012-01-10T17:44:22.681Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: libuv usually takes care of that","date":"2012-01-10T17:44:36.169Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: and libuv streams are not affected by GC anyway","date":"2012-01-10T17:44:45.940Z","type":"message"}
{"nick":"ryah","message":"hello","date":"2012-01-10T17:46:30.739Z","type":"message"}
{"nick":"indutny","message":"ryah: hi!","date":"2012-01-10T17:46:34.188Z","type":"message"}
{"nick":"piscisaureus_","message":"aaaah","date":"2012-01-10T17:48:16.521Z","type":"message"}
{"nick":"ryah","message":"indutny: how's the numeric hash key thing going?","date":"2012-01-10T17:48:19.143Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: gotcha","date":"2012-01-10T17:48:20.488Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: we are leaking uv_work_t objects","date":"2012-01-10T17:48:32.949Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: where?","date":"2012-01-10T17:48:41.827Z","type":"message"}
{"nick":"TooTallNate","date":"2012-01-10T17:48:52.147Z","type":"join"}
{"nick":"piscisaureus_","message":"indutny: WorkReqWrap and uv_work_t objects are allocated in Write","date":"2012-01-10T17:49:07.281Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: ah","date":"2012-01-10T17:49:17.809Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: but only the WorkReqWrap object is freed in After()","date":"2012-01-10T17:49:19.017Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: but this is also no-good style","date":"2012-01-10T17:49:26.628Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: I'm encountering strange issue","date":"2012-01-10T17:49:32.504Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: running a tls server","date":"2012-01-10T17:49:36.469Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: the uv_work_t should be embedded in the WorkReqWrap","date":"2012-01-10T17:49:39.579Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: and it's leaking on connections","date":"2012-01-10T17:49:46.418Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: oh, it's getting to 90mb limit and then lowering","date":"2012-01-10T17:50:22.907Z","type":"message"}
{"nick":"indutny","message":"ah, nope","date":"2012-01-10T17:50:27.085Z","type":"message"}
{"nick":"indutny","message":"99mb","date":"2012-01-10T17:50:28.144Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2012-01-10T17:51:48.123Z","type":"message"}
{"nick":"isaacs","date":"2012-01-10T17:53:03.713Z","type":"join"}
{"nick":"piscisaureus_","message":"indutny: this should probably do it: https://gist.github.com/1590237","date":"2012-01-10T17:54:49.086Z","type":"message"}
{"nick":"isaacs","reason":"Client Quit","date":"2012-01-10T17:55:16.059Z","type":"quit"}
{"nick":"isaacs","date":"2012-01-10T17:55:28.454Z","type":"join"}
{"nick":"indutny","message":"piscisaureus_: one second","date":"2012-01-10T17:55:31.556Z","type":"message"}
{"nick":"indutny","message":"I'll test it","date":"2012-01-10T17:55:33.454Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: I think it can be made better, since we never do more than one write request at a time I guess we could just embed the uv_work_t inside the ZCtx object and we would not have to malloc at all","date":"2012-01-10T17:55:45.496Z","type":"message"}
{"nick":"indutny","message":"let me test it first","date":"2012-01-10T17:56:35.955Z","type":"message"}
{"nick":"indutny","message":"sorry gtg","date":"2012-01-10T17:57:47.476Z","type":"message"}
{"nick":"indutny","message":"be back in 20 minutes","date":"2012-01-10T17:57:51.620Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2012-01-10T17:59:40.376Z","type":"quit"}
{"nick":"piscisaureus_","message":"@jasonh: @twericb @joyent @basho @voxer @nodejs makes the old initial days of twitter look like a little speed bump","date":"2012-01-10T17:59:49.915Z","type":"message"}
{"nick":"piscisaureus_","message":"what does Jason mean with that?","date":"2012-01-10T18:00:01.383Z","type":"message"}
{"nick":"dshaw_","date":"2012-01-10T18:00:41.764Z","type":"join"}
{"nick":"bnoordhuis","message":"indutny: you mean deflate compression of tls streams? that's disabled","date":"2012-01-10T18:02:45.162Z","type":"message"}
{"nick":"bnoordhuis","message":"but i think piscisaureus_ already pointed out why","date":"2012-01-10T18:02:53.667Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: twitter was first hosted at joyent","date":"2012-01-10T18:08:24.225Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: yes","date":"2012-01-10T18:08:39.927Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: and they did a lot of performance analysis with them.","date":"2012-01-10T18:08:43.724Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: piscisaureus_ pointed it out for me","date":"2012-01-10T18:08:47.348Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: sorry for bothering","date":"2012-01-10T18:08:50.846Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: voxer is blowing up way more than twitter was then, and using much faster technology, and we have much better introspection into it now.","date":"2012-01-10T18:09:04.221Z","type":"message"}
{"nick":"rmustacc","message":"And they mostly ignored it...","date":"2012-01-10T18:09:11.859Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: ah that explains, thnx","date":"2012-01-10T18:09:13.719Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: so another question","date":"2012-01-10T18:09:23.578Z","type":"message"}
{"nick":"rmustacc","message":"protip: Don't throw and catch an exception one stack frame away when you have 500 frame stacks.","date":"2012-01-10T18:09:27.752Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: np","date":"2012-01-10T18:09:42.256Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: how are we making sure in node_zlib that the ZLib context is not being GCed before the thread pool is done","date":"2012-01-10T18:09:52.711Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: lemme take a look at that.","date":"2012-01-10T18:10:06.690Z","type":"message"}
{"nick":"`3rdEden","date":"2012-01-10T18:10:11.861Z","type":"join"}
{"nick":"indutny","message":"rmustacc: protip: throw primitives in such cases :)","date":"2012-01-10T18:10:29.142Z","type":"message"}
{"nick":"rmustacc","message":"That's what the twitter folks were doing and that's what was causing horrible latency.","date":"2012-01-10T18:11:27.960Z","type":"message"}
{"nick":"isaacs","message":"rmustacc: you sure?  because i heard that solaris was to blame.","date":"2012-01-10T18:11:53.009Z","type":"message"}
{"nick":"brson","date":"2012-01-10T18:12:06.217Z","type":"join"}
{"nick":"isaacs","message":"rmustacc: after all, they didn't see those problems on linux.","date":"2012-01-10T18:12:46.296Z","type":"message"}
{"nick":"rmustacc","message":"isaacs: Oh right, my mistake. We are talking about slowlaris.","date":"2012-01-10T18:13:14.431Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: it looks like the ReqWrap object has a reference to ctx, and its object gets passed to the js layer.","date":"2012-01-10T18:17:48.508Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: i'm not sure when it gets gc'ed.","date":"2012-01-10T18:17:55.924Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: doesn't ReqWrap clean up its stuff when it gc's the ->object_ handle?","date":"2012-01-10T18:22:29.749Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: ReqWrap doesn't do anything magically","date":"2012-01-10T18:22:55.880Z","type":"message"}
{"nick":"bradleymeck","date":"2012-01-10T18:23:04.176Z","type":"join"}
{"nick":"isaacs","message":"  ~ReqWrap() {","date":"2012-01-10T18:23:18.209Z","type":"message"}
{"nick":"isaacs","message":"    // Assert that someone has called Dispatched()","date":"2012-01-10T18:23:18.419Z","type":"message"}
{"nick":"isaacs","message":"    assert(req_.data == this);","date":"2012-01-10T18:23:18.629Z","type":"message"}
{"nick":"isaacs","message":"    assert(!object_.IsEmpty());","date":"2012-01-10T18:23:18.907Z","type":"message"}
{"nick":"isaacs","message":"    object_.Dispose();","date":"2012-01-10T18:23:19.245Z","type":"message"}
{"nick":"isaacs","message":"    object_.Clear();","date":"2012-01-10T18:23:19.459Z","type":"message"}
{"nick":"isaacs","message":"  }","date":"2012-01-10T18:23:19.765Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: hmm oh wait like that","date":"2012-01-10T18:23:33.094Z","type":"message"}
{"nick":"bradleymeck","message":"anyone know if there is anything to look out for when using DLL injection and LD_PRELOAD in libuv?","date":"2012-01-10T18:23:54.710Z","type":"message"}
{"nick":"isaacs","message":"oh, i guess that's the other way around","date":"2012-01-10T18:23:57.138Z","type":"message"}
{"nick":"indutny","message":"isaacs: I'm often .flush() my zlib streams, is that ok?","date":"2012-01-10T18:24:00.860Z","type":"message"}
{"nick":"isaacs","message":"indutny: it's unnecessary and costly.","date":"2012-01-10T18:24:08.907Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: basically when someone destroys the ReqWrap from C++ then it makes the JS object GC-able","date":"2012-01-10T18:24:14.260Z","type":"message"}
{"nick":"isaacs","message":"indutny: don't do it unless there is no question.","date":"2012-01-10T18:24:17.708Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: ok.","date":"2012-01-10T18:24:23.929Z","type":"message"}
{"nick":"indutny","message":"isaacs: there's no other option","date":"2012-01-10T18:24:24.963Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2012-01-10T18:24:26.384Z","type":"message"}
{"nick":"isaacs","message":"indutny: then do it.","date":"2012-01-10T18:24:29.792Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: also https://gist.github.com/1590237","date":"2012-01-10T18:24:39.509Z","type":"message"}
{"nick":"isaacs","message":"indutny: it can dramatically reduce compression","date":"2012-01-10T18:24:46.241Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: basically you allocate both a ReqWrap and a uv_work_t but you free only the ReqWrap","date":"2012-01-10T18:25:11.473Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: aaah, problem found!!!!!","date":"2012-01-10T18:25:16.418Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: probably","date":"2012-01-10T18:25:25.941Z","type":"message"}
{"nick":"isaacs","message":"ahhh","date":"2012-01-10T18:25:28.872Z","type":"message"}
{"nick":"isaacs","message":"that makes sense.","date":"2012-01-10T18:25:30.771Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2012-01-10T18:25:37.329Z","type":"quit"}
{"nick":"piscisaureus_","message":"isaacs: fortunately you don't need to allocate an uv_wrap_t at all, because ReqWrap<uv_work_t> has an embedded uv_work_t","date":"2012-01-10T18:25:53.817Z","type":"message"}
{"nick":"isaacs","message":"and the ReqWrap is a WorkReqWrap anyway, right?","date":"2012-01-10T18:25:57.229Z","type":"message"}
{"nick":"isaacs","message":"ok.","date":"2012-01-10T18:25:59.989Z","type":"message"}
{"nick":"isaacs","message":"awesome.  ok, you found the issue, then","date":"2012-01-10T18:26:05.168Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: event-loop is very busy","date":"2012-01-10T18:26:11.036Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: setInterval(fun(), 50) fires function once every 4-5 seconds","date":"2012-01-10T18:26:28.118Z","type":"message"}
{"nick":"isaacs","message":"indutny: does that patch fix the issue you're seeing?","date":"2012-01-10T18:26:34.327Z","type":"message"}
{"nick":"indutny","message":"isaacs: nope, and I'm not sure that zlib is related to my issue","date":"2012-01-10T18:26:52.618Z","type":"message"}
{"nick":"isaacs","message":"indutny: the argument to setInterval/setTimeout is a minimum, not a maximum.","date":"2012-01-10T18:26:56.482Z","type":"message"}
{"nick":"indutny","message":"isaacs: I understand","date":"2012-01-10T18:27:03.648Z","type":"message"}
{"nick":"indutny","message":"isaacs: or probably not","date":"2012-01-10T18:27:13.720Z","type":"message"}
{"nick":"indutny","message":"isaacs: so it may be moved inside event-loop queue?","date":"2012-01-10T18:27:26.837Z","type":"message"}
{"nick":"isaacs","message":"indutny: setTimeout is, yes.","date":"2012-01-10T18:27:39.110Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-01-10T18:27:42.390Z","type":"message"}
{"nick":"indutny","message":"so that's not issue then","date":"2012-01-10T18:27:46.015Z","type":"message"}
{"nick":"indutny","message":":D","date":"2012-01-10T18:27:46.533Z","type":"message"}
{"nick":"isaacs","message":"setTimeout(fn, 0) can be called literally at any time in the future.","date":"2012-01-10T18:27:52.077Z","type":"message"}
{"nick":"isaacs","message":"setTimeout(fn, 1000) will be called no sooner than 1 second in the future.","date":"2012-01-10T18:28:02.012Z","type":"message"}
{"nick":"isaacs","message":"etc","date":"2012-01-10T18:28:02.664Z","type":"message"}
{"nick":"bnoordhuis","message":"re setTimeout","date":"2012-01-10T18:28:18.527Z","type":"message"}
{"nick":"isaacs","message":"most of the time, it's called very close to the specified timeout","date":"2012-01-10T18:28:20.422Z","type":"message"}
{"nick":"bnoordhuis","message":"do we have conclusive benchmarks that timer lists are faster than standalone timer objects?","date":"2012-01-10T18:28:35.617Z","type":"message"}
{"nick":"indutny","message":"isaacs: anyway process.nextTick is called with 4-5 seconds delay","date":"2012-01-10T18:28:43.463Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm not seeing much of a difference","date":"2012-01-10T18:28:47.530Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I have not","date":"2012-01-10T18:28:48.050Z","type":"message"}
{"nick":"isaacs","message":"indutny: then that would mean that youer' doing a *lot* of stuff in that tick","date":"2012-01-10T18:28:58.613Z","type":"message"}
{"nick":"indutny","message":"isaacs: or I'm doing a lot of ticks","date":"2012-01-10T18:29:12.623Z","type":"message"}
{"nick":"indutny","message":"isaacs: and they're not well ordered","date":"2012-01-10T18:29:17.797Z","type":"message"}
{"nick":"isaacs","message":"indutny: last i checked, nextTick is pushed into an array, and they're all run at the end of the current tick, before going to the event loop.","date":"2012-01-10T18:29:40.297Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: Ryah is very much much in love with the timer linked list so you should talk to him about it.","date":"2012-01-10T18:29:47.893Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: thanks, i will","date":"2012-01-10T18:30:00.767Z","type":"message"}
{"nick":"indutny","message":"actually recursive process.nextTick should run every odd tick?","date":"2012-01-10T18:30:05.185Z","type":"message"}
{"nick":"indutny","message":"isn't it?","date":"2012-01-10T18:30:07.254Z","type":"message"}
{"nick":"indutny","message":"prob, not real tick","date":"2012-01-10T18:30:14.224Z","type":"message"}
{"nick":"piscisaureus_","message":"no that's not how it works","date":"2012-01-10T18:30:18.844Z","type":"message"}
{"nick":"indutny","message":"if there're many of them","date":"2012-01-10T18:30:24.708Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: that's changed?","date":"2012-01-10T18:30:33.513Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: when are nextTicks run?","date":"2012-01-10T18:30:43.062Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: from a Prepare or Check watcher","date":"2012-01-10T18:30:55.515Z","type":"message"}
{"nick":"isaacs","message":"ohh. right, i remember, there was an issue with recursive nextTick'ing never letting go.","date":"2012-01-10T18:31:17.920Z","type":"message"}
{"nick":"isaacs","action":"hasn't seen that code since 0.3 days or thereabouts","date":"2012-01-10T18:31:50.980Z","type":"action"}
{"nick":"piscisaureus_","message":"the code is also a mess TBH","date":"2012-01-10T18:32:02.759Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-01-10T18:32:09.008Z","type":"message"}
{"nick":"bnoordhuis","message":"it's also quite slow, it could be optimized a great deal","date":"2012-01-10T18:32:43.180Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-01-10T18:33:09.315Z","type":"quit"}
{"nick":"indutny","message":"still I'm trying to find what's leaking","date":"2012-01-10T18:33:46.314Z","type":"message"}
{"nick":"indutny","message":"anyone knows methods?","date":"2012-01-10T18:33:54.769Z","type":"message"}
{"nick":"rmustacc","message":"indutny: What platform are you on?","date":"2012-01-10T18:34:37.403Z","type":"message"}
{"nick":"indutny","message":"rmustacc: osx","date":"2012-01-10T18:34:44.225Z","type":"message"}
{"nick":"indutny","message":"dtrace","date":"2012-01-10T18:34:48.079Z","type":"message"}
{"nick":"indutny","message":"how to use it?","date":"2012-01-10T18:34:53.597Z","type":"message"}
{"nick":"rmustacc","message":"I probably wouldn't use it here.","date":"2012-01-10T18:35:00.722Z","type":"message"}
{"nick":"rmustacc","message":"I was going to suggest using libumem and ::findleaks.","date":"2012-01-10T18:35:07.338Z","type":"message"}
{"nick":"rmustacc","message":"But that's not on OS X.","date":"2012-01-10T18:35:18.574Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: welcome to the force, fedor :)","date":"2012-01-10T18:35:40.414Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: yahoo!! :)","date":"2012-01-10T18:35:59.052Z","type":"message"}
{"nick":"rmustacc","message":"I think valgrind can do some of that stuff, but it's been years since I used it and it was never on anything meaningful.","date":"2012-01-10T18:36:14.572Z","type":"message"}
{"nick":"TooTallNate","message":"does anyone know why \"cflags\" doesn't seem to work with gyp?","date":"2012-01-10T18:36:42.681Z","type":"message"}
{"nick":"ryah","message":"dannycoates: any crashes?","date":"2012-01-10T18:36:55.445Z","type":"message"}
{"nick":"bnoordhuis","message":"TooTallNate: because it's CFLAGS","date":"2012-01-10T18:36:55.787Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: congrats :-)","date":"2012-01-10T18:37:15.114Z","type":"message"}
{"nick":"TooTallNate","message":"bnoordhuis: idk i still don't see em on in the g++ command","date":"2012-01-10T18:37:56.864Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: thanks","date":"2012-01-10T18:37:57.244Z","type":"message"}
{"nick":"bnoordhuis","message":"TooTallNate: use CXXFLAGS for c++ code","date":"2012-01-10T18:38:23.629Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: that patch lgtm.","date":"2012-01-10T18:39:27.727Z","type":"message"}
{"nick":"TooTallNate","message":":\\ it's just not working for me... \"cxxflags\", \"CXXFLAGS\"... seems like its broken in gyp or i'm going crazy","date":"2012-01-10T18:39:46.788Z","type":"message"}
{"nick":"ryah","message":"dannycoates: oh shit you're getting techcrunched","date":"2012-01-10T18:40:03.439Z","type":"message"}
{"nick":"isaacs","message":"https://gist.github.com/1590237","date":"2012-01-10T18:40:06.656Z","type":"message"}
{"nick":"ryah","message":"http://techcrunch.com/2012/01/10/popular-like-voxer/","date":"2012-01-10T18:40:11.183Z","type":"message"}
{"nick":"dannycoates","message":"ryah: no, but we haven't had any segfaults on other machines either since we fixed our code","date":"2012-01-10T18:40:18.434Z","type":"message"}
{"nick":"dannycoates","message":"ryah: crunch cool :)","date":"2012-01-10T18:40:36.337Z","type":"message"}
{"nick":"ryah","message":"dannycoates: please let me know when you are satisfied that the bug is fixed","date":"2012-01-10T18:41:08.842Z","type":"message"}
{"nick":"TooTallNate","message":"indutny: congrats!","date":"2012-01-10T18:41:24.596Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: but I still like to know how we make sure a ZCtx object is not garbage collected before the uv_work_t finishes in the thread pool","date":"2012-01-10T18:41:29.297Z","type":"message"}
{"nick":"indutny","message":"TooTallNate: thanks","date":"2012-01-10T18:41:36.574Z","type":"message"}
{"nick":"TooTallNate","message":"indutny: you still with nodejitsu then?","date":"2012-01-10T18:41:47.811Z","type":"message"}
{"nick":"indutny","message":"TooTallNate: yes","date":"2012-01-10T18:42:04.732Z","type":"message"}
{"nick":"TooTallNate","message":"nice","date":"2012-01-10T18:42:12.682Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: oh, i think that's because the js layer keeps a ref to it","date":"2012-01-10T18:42:23.277Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: i mean, if you drop the ref to the js object, then it could be.","date":"2012-01-10T18:43:07.650Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: maybe use container_of() instead of reinterpret_cast<WorkReqWrap*>(work_req->data);","date":"2012-01-10T18:43:31.536Z","type":"message"}
{"nick":"bnoordhuis","message":"makes it clear that it's embedded","date":"2012-01-10T18:43:37.613Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: by dropping the reference to the Deflate object?","date":"2012-01-10T18:43:52.350Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: I am afraid I cannot approve that :-)","date":"2012-01-10T18:44:01.879Z","type":"message"}
{"nick":"bnoordhuis","message":"TooTallNate: what are you doing exactly?","date":"2012-01-10T18:44:28.978Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: container_of = love","date":"2012-01-10T18:44:29.496Z","type":"message"}
{"nick":"bnoordhuis","message":":)","date":"2012-01-10T18:44:33.464Z","type":"message"}
{"nick":"mikeal","date":"2012-01-10T18:44:54.274Z","type":"join"}
{"nick":"TooTallNate","message":"bnoordhuis: https://gist.github.com/1590458","date":"2012-01-10T18:44:57.196Z","type":"message"}
{"nick":"TooTallNate","message":"the new section at the bottom, for \"mac\"","date":"2012-01-10T18:45:08.307Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: what happens if it gets lost and gc'ed before the thread pool returns?","date":"2012-01-10T18:45:13.860Z","type":"message"}
{"nick":"TooTallNate","message":"the -lobjc flag is added during link, but the cxxflags are not applied every","date":"2012-01-10T18:45:30.097Z","type":"message"}
{"nick":"dannycoates","message":"ryah: looks good to me","date":"2012-01-10T18:45:32.521Z","type":"message"}
{"nick":"bnoordhuis","message":"TooTallNate: oh, like that. sorry, i thought you meant passing extra cflags to make","date":"2012-01-10T18:45:32.739Z","type":"message"}
{"nick":"TooTallNate","message":"*ever","date":"2012-01-10T18:45:33.063Z","type":"message"}
{"nick":"TooTallNate","message":"ahh","date":"2012-01-10T18:45:46.443Z","type":"message"}
{"nick":"TooTallNate","message":"lol","date":"2012-01-10T18:45:47.652Z","type":"message"}
{"nick":"TooTallNate","message":"so is gyp busted then?","date":"2012-01-10T18:45:54.213Z","type":"message"}
{"nick":"bnoordhuis","message":"no - at least, it shouldn't be","date":"2012-01-10T18:46:16.051Z","type":"message"}
{"nick":"bnoordhuis","message":"'cflags' was right","date":"2012-01-10T18:46:31.130Z","type":"message"}
{"nick":"ryah","message":"dannycoates: just to be clear - we're talking about https://github.com/joyent/node/issues/2473 this one right?","date":"2012-01-10T18:47:07.945Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: indutny's test at https://github.com/joyent/node/issues/2504 is going to do exactly that.","date":"2012-01-10T18:47:16.206Z","type":"message"}
{"nick":"dannycoates","message":"ryah: yes 2473","date":"2012-01-10T18:47:37.425Z","type":"message"}
{"nick":"ryah","message":"dannycoates: okay landing","date":"2012-01-10T18:47:44.362Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307v0.6\u000f * r\u0002e6a30bd\u000f \u000310\u000f/ (src/node_buffer.h src/stream_wrap.cc)\u0002:\u000f ","date":"2012-01-10T18:50:42.586Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f Fix #2473","date":"2012-01-10T18:50:42.796Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f Tested in production.","date":"2012-01-10T18:50:42.796Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f See also http://code.google.com/p/v8/issues/detail?id=1889 - http://git.io/6Bn4eA","date":"2012-01-10T18:50:42.796Z","type":"message"}
{"nick":"ryah","message":"once we fix the numeric hash key problem - we'll release v0.6.8","date":"2012-01-10T18:54:36.815Z","type":"message"}
{"nick":"indutny","message":"ryah: it's fixed, but needs to be backported to 3.6","date":"2012-01-10T18:55:48.352Z","type":"message"}
{"nick":"ryah","message":"indutny: ok","date":"2012-01-10T18:55:59.867Z","type":"message"}
{"nick":"indutny","message":"ryah: https://github.com/v8/v8/commit/2ee154a5b3d09b7ed0a17a108aec40a2174acee0","date":"2012-01-10T18:56:10.798Z","type":"message"}
{"nick":"ryah","message":"im going to wait for it to land in the 3.6 branch","date":"2012-01-10T18:56:27.351Z","type":"message"}
{"nick":"indutny","message":"of course","date":"2012-01-10T18:56:57.076Z","type":"message"}
{"nick":"indutny","message":"just FYI","date":"2012-01-10T18:56:59.319Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T18:58:38.368Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/node#216 (v0.6 - e6a30bd : Ryan Dahl): The build passed.","date":"2012-01-10T18:58:38.587Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/node/compare/b07acb3...e6a30bd","date":"2012-01-10T18:58:38.587Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/node/builds/503360","date":"2012-01-10T18:58:38.587Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T18:58:38.587Z","type":"part"}
{"nick":"TooTallNate","message":"bnoordhuis: additionally, the cflags defined in node/common.gypi don't end up in the compilation either","date":"2012-01-10T19:01:31.530Z","type":"message"}
{"nick":"ryah","message":"bnoordhuis, piscisaureus_: want to jump on skype?","date":"2012-01-10T19:01:35.154Z","type":"message"}
{"nick":"TooTallNate","message":"really seems like gyp is busted to me","date":"2012-01-10T19:01:39.636Z","type":"message"}
{"nick":"ryah","message":"TooTallNate: what's it going?","date":"2012-01-10T19:02:04.559Z","type":"message"}
{"nick":"piscisaureus_","message":"ryah: yeah I am on","date":"2012-01-10T19:02:09.388Z","type":"message"}
{"nick":"bnoordhuis","message":"ryah: yep","date":"2012-01-10T19:02:11.113Z","type":"message"}
{"nick":"TooTallNate","message":"  g++ '-D_LARGEFILE_SOURCE' '-D_FILE_OFFSET_BITS=64' '-DDEBUG' '-D_DEBUG' -I../node/src -I../node/deps/uv/include -I../node/deps/v8/include -Ideps/libffi/include -Os -gdwarf-2 -Wnewline-eof -mmacosx-version-min=10.4 -fno-strict-aliasing -Wall -Wendif-labels -W -Wno-unused-parameter -fno-rtti -fno-exceptions -fno-threadsafe-statics -MMD -MF out/Debug/.deps/out/Debug/obj.target/ffi_bindings/src/ffi.o.d.raw  -c -o out/Debug/obj.target","date":"2012-01-10T19:02:23.820Z","type":"message"}
{"nick":"TooTallNate","message":"there's one compilation unit","date":"2012-01-10T19:02:33.907Z","type":"message"}
{"nick":"TooTallNate","message":"but the cflags defined in node/common.gypi aren't included","date":"2012-01-10T19:02:43.062Z","type":"message"}
{"nick":"TooTallNate","message":"nor are the ones defined in my gyp file","date":"2012-01-10T19:02:55.005Z","type":"message"}
{"nick":"TooTallNate","message":"AndreasMadsen: didn't you run into something similar with the cflags param in gyp?","date":"2012-01-10T19:03:18.168Z","type":"message"}
{"nick":"bnoordhuis","message":"TooTallNate: when trying to build an add-on?","date":"2012-01-10T19:03:19.546Z","type":"message"}
{"nick":"TooTallNate","message":"bnoordhuis: ya","date":"2012-01-10T19:03:23.352Z","type":"message"}
{"nick":"AndreasMadsen","message":"hi","date":"2012-01-10T19:03:27.824Z","type":"message"}
{"nick":"bnoordhuis","message":"TooTallNate: one moment please, back in a flash","date":"2012-01-10T19:03:52.239Z","type":"message"}
{"nick":"TooTallNate","message":"ok thanks","date":"2012-01-10T19:04:00.544Z","type":"message"}
{"nick":"AndreasMadsen","message":"TooTallNate: nop","date":"2012-01-10T19:04:09.020Z","type":"message"}
{"nick":"TooTallNate","message":"AndreasMadsen: weren't you the one who tried writing the first node-gyp script?","date":"2012-01-10T19:05:20.288Z","type":"message"}
{"nick":"AndreasMadsen","message":"TooTallNate: no","date":"2012-01-10T19:05:46.558Z","type":"message"}
{"nick":"TooTallNate","message":"oh, haha","date":"2012-01-10T19:05:51.243Z","type":"message"}
{"nick":"TooTallNate","message":"here it is","date":"2012-01-10T19:05:57.457Z","type":"message"}
{"nick":"TooTallNate","message":"https://github.com/joyent/node/pull/2337","date":"2012-01-10T19:05:57.972Z","type":"message"}
{"nick":"TooTallNate","message":"same first name, DOH!","date":"2012-01-10T19:06:02.160Z","type":"message"}
{"nick":"AndreasMadsen","message":"hehe","date":"2012-01-10T19:06:32.751Z","type":"message"}
{"nick":"TooTallNate","message":"anyways, looks like he found the same thing as me","date":"2012-01-10T19:06:44.724Z","type":"message"}
{"nick":"TooTallNate","message":"https://github.com/andreasbotsikas/node/blob/9888507786cae055bd5d3f1fc960f4519fa355e0/tools/node_module.gypi#L54-60","date":"2012-01-10T19:06:45.241Z","type":"message"}
{"nick":"TooTallNate","message":"err, i guess it's a little different","date":"2012-01-10T19:07:20.535Z","type":"message"}
{"nick":"TooTallNate","message":"he's trying to use ldflags, i'm trying to use cflags :\\","date":"2012-01-10T19:07:34.078Z","type":"message"}
{"nick":"kuebk","date":"2012-01-10T19:10:15.224Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: https://gist.github.com/0b3bd8138068d9b884d7","date":"2012-01-10T19:13:19.933Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: lgtm","date":"2012-01-10T19:14:39.985Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-01-10T19:15:55.457Z","type":"quit"}
{"nick":"indutny","message":"ok, going to sleep","date":"2012-01-10T19:18:27.473Z","type":"message"}
{"nick":"indutny","message":"thank you all!","date":"2012-01-10T19:18:31.362Z","type":"message"}
{"nick":"indutny","message":"ttyl","date":"2012-01-10T19:18:32.056Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-01-10T19:18:34.470Z","type":"message"}
{"nick":"dap","date":"2012-01-10T19:19:20.818Z","type":"join"}
{"nick":"mmalecki","message":"indutny: night!","date":"2012-01-10T19:24:47.463Z","type":"message"}
{"nick":"perezd","date":"2012-01-10T19:25:42.023Z","type":"join"}
{"nick":"kuebk","reason":"Ping timeout: 240 seconds","date":"2012-01-10T19:26:49.227Z","type":"quit"}
{"nick":"kuebk","date":"2012-01-10T19:29:30.227Z","type":"join"}
{"nick":"TooTallNate","message":"bnoordhuis: https://gist.github.com/1590684","date":"2012-01-10T19:31:52.247Z","type":"message"}
{"nick":"slaskis","date":"2012-01-10T19:41:05.373Z","type":"join"}
{"nick":"bnoordhuis","message":"TooTallNate: wfm","date":"2012-01-10T19:43:12.706Z","type":"message"}
{"nick":"bnoordhuis","message":"  cc   -ObjC  -MMD -MF out/Default/.deps/out/Default/obj.target/hello/hello.o.d.raw  -c -o out/Default/obj.target/hello/hello.o hello.c","date":"2012-01-10T19:43:20.796Z","type":"message"}
{"nick":"bnoordhuis","message":"cc1: error: invalid option argument ‘-ObjC’","date":"2012-01-10T19:43:21.007Z","type":"message"}
{"nick":"bnoordhuis","message":"make: *** [out/Default/obj.target/hello/hello.o] Error 1","date":"2012-01-10T19:43:21.007Z","type":"message"}
{"nick":"TooTallNate","message":"bnoordhuis: that's messed up","date":"2012-01-10T19:44:37.399Z","type":"message"}
{"nick":"TooTallNate","message":"you on linux?","date":"2012-01-10T19:44:41.067Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2012-01-10T19:45:02.441Z","type":"message"}
{"nick":"TooTallNate","message":"hmmm, maybe it's broken in OS X","date":"2012-01-10T19:45:17.860Z","type":"message"}
{"nick":"TooTallNate","message":"can someone else on OSX please try my gist above?","date":"2012-01-10T19:45:27.039Z","type":"message"}
{"nick":"ryah","message":"yes one sec","date":"2012-01-10T19:49:17.956Z","type":"message"}
{"nick":"mjr_","date":"2012-01-10T19:49:23.162Z","type":"join"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u0002d4ee61f\u000f \u000310\u000f/ (5 files)\u0002:\u000f Add failing test-isolates2.js - http://git.io/NJpx8g","date":"2012-01-10T19:50:16.597Z","type":"message"}
{"nick":"paddybyers","message":"TooTallNate: I get the same result as you on OSX","date":"2012-01-10T19:52:26.241Z","type":"message"}
{"nick":"TooTallNate","message":"here's a second confirmation: https://gist.github.com/1590800","date":"2012-01-10T19:52:32.379Z","type":"message"}
{"nick":"TooTallNate","message":"paddybyers: 3rd","date":"2012-01-10T19:52:35.661Z","type":"message"}
{"nick":"paddybyers","message":"also with xcode as well as make","date":"2012-01-10T19:52:36.226Z","type":"message"}
{"nick":"TooTallNate","message":"geez","date":"2012-01-10T19:52:38.115Z","type":"message"}
{"nick":"ryah","message":"TooTallNate: email evmar","date":"2012-01-10T19:52:42.388Z","type":"message"}
{"nick":"ryah","message":"cc me","date":"2012-01-10T19:52:47.226Z","type":"message"}
{"nick":"TooTallNate","message":"ok will do","date":"2012-01-10T19:52:51.884Z","type":"message"}
{"nick":"ryah","message":"bnoordhuis: heres another failing isolate test","date":"2012-01-10T19:53:09.876Z","type":"message"}
{"nick":"mmalecki","message":"ryah: o hai","date":"2012-01-10T19:53:32.937Z","type":"message"}
{"nick":"mmalecki","message":"ryah: is the 0.7 release going to happen today?","date":"2012-01-10T19:53:46.054Z","type":"message"}
{"nick":"mmalecki","message":"sorry for bothering you, I want to deploy it to travis asap","date":"2012-01-10T19:54:01.944Z","type":"message"}
{"nick":"mmalecki","message":"so that people can start testing their stuff out :)","date":"2012-01-10T19:54:11.102Z","type":"message"}
{"nick":"TooTallNate","message":"mmalecki++","date":"2012-01-10T19:54:36.181Z","type":"message"}
{"nick":"kohai","message":"mmalecki has 41 beers","date":"2012-01-10T19:54:36.522Z","type":"message"}
{"nick":"TooTallNate","message":"i'm gonna have to start deploying prebuilt binaries to travis :)","date":"2012-01-10T19:54:56.925Z","type":"message"}
{"nick":"TooTallNate","message":"they don't have libffi installed for example, so node-ffi can't build","date":"2012-01-10T19:55:08.485Z","type":"message"}
{"nick":"TooTallNate","message":"but thats the benefit of bundling :)","date":"2012-01-10T19:55:17.635Z","type":"message"}
{"nick":"mmalecki","message":"TooTallNate: we can totally install it","date":"2012-01-10T19:55:54.410Z","type":"message"}
{"nick":"TooTallNate","message":"ryah: is evan @chromium.com or @google.com?","date":"2012-01-10T19:56:08.231Z","type":"message"}
{"nick":"TooTallNate","message":"his email","date":"2012-01-10T19:56:09.973Z","type":"message"}
{"nick":"TooTallNate","message":"I have both in my history for some reason","date":"2012-01-10T19:56:20.720Z","type":"message"}
{"nick":"mmalecki","message":"TooTallNate: is it in ubuntu repos?","date":"2012-01-10T19:56:30.594Z","type":"message"}
{"nick":"TooTallNate","message":"mmalecki: that would make the 0.4.x branch build, but really it's not necessary","date":"2012-01-10T19:56:36.498Z","type":"message"}
{"nick":"TooTallNate","message":"mmalecki: yes it's in the ubuntu repo","date":"2012-01-10T19:56:43.224Z","type":"message"}
{"nick":"mmalecki","message":"TooTallNate: all right!","date":"2012-01-10T19:56:50.063Z","type":"message"}
{"nick":"TooTallNate","message":"libffi-dev I'm guessing","date":"2012-01-10T19:56:52.104Z","type":"message"}
{"nick":"TooTallNate","message":"mmalecki: cool thanks!","date":"2012-01-10T19:57:00.140Z","type":"message"}
{"nick":"ryah","message":"TooTallNate: *shrug*","date":"2012-01-10T19:57:02.595Z","type":"message"}
{"nick":"TooTallNate","message":"lol ok","date":"2012-01-10T19:57:07.413Z","type":"message"}
{"nick":"ryah","message":"TooTallNate: @google.com i guess","date":"2012-01-10T19:57:09.653Z","type":"message"}
{"nick":"mmalecki","message":"TooTallNate: my pleasure :)","date":"2012-01-10T19:57:10.857Z","type":"message"}
{"nick":"ryah","message":"TooTallNate: he's also on irc sometimes","date":"2012-01-10T19:57:21.558Z","type":"message"}
{"nick":"TooTallNate","message":"ryah: now or no?","date":"2012-01-10T19:59:17.250Z","type":"message"}
{"nick":"ryah","message":"TooTallNate: *shrug*","date":"2012-01-10T19:59:45.813Z","type":"message"}
{"nick":"mikeal","date":"2012-01-10T20:01:11.233Z","type":"join"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Ben Noordhuis\u000f \u000307v0.6\u000f * r\u00020ad2717\u000f \u000310\u000f/ src/node_zlib.cc \u0002:\u000f Make sure that zlib contexts are not garbage collected when busy - http://git.io/FTSzBw","date":"2012-01-10T20:02:09.793Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Bert Belder\u000f \u000307v0.6\u000f * r\u00022d8af39\u000f \u000310\u000f/ src/node_zlib.cc \u0002:\u000f Fix memory leak in node_zlib - http://git.io/NylRnQ","date":"2012-01-10T20:02:11.102Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T20:02:50.170Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/node#217 (master - d4ee61f : Ryan Dahl): The build is still failing.","date":"2012-01-10T20:02:50.383Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/node/compare/4cbcdb4...d4ee61f","date":"2012-01-10T20:02:50.384Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/node/builds/503595","date":"2012-01-10T20:02:50.384Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T20:02:50.384Z","type":"part"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u0002e1b829d\u000f \u000310\u000f/ (2 files)\u0002:\u000f Add broken test-isolates3.js - http://git.io/gCGb6w","date":"2012-01-10T20:05:06.968Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T20:10:09.797Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/node#218 (v0.6 - 0ad2717 : Ben Noordhuis): The build was broken.","date":"2012-01-10T20:10:10.014Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/node/compare/e6a30bd...0ad2717","date":"2012-01-10T20:10:10.014Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/node/builds/503714","date":"2012-01-10T20:10:10.014Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T20:10:10.014Z","type":"part"}
{"nick":"piscisaureus_","topic":"libuv","date":"2012-01-10T20:13:53.236Z","type":"topic"}
{"nick":"piscisaureus_","topic":"welcome to the void","date":"2012-01-10T20:13:55.620Z","type":"topic"}
{"nick":"pietern","reason":"Quit: pietern","date":"2012-01-10T20:15:11.850Z","type":"quit"}
{"nick":"isaacs","message":"ryah, piscisaureus_, bnoordhuis: if i reuse the workreqwrap, where should i delete the object?  does the ~ZCtx function get called when the wrapped object dies?","date":"2012-01-10T20:15:12.717Z","type":"message"}
{"nick":"ryah","message":"isaacs: it should just be part of the class - it doesn't need to be deleted","date":"2012-01-10T20:15:40.561Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: if you embed it, you don't have to delete it","date":"2012-01-10T20:15:42.855Z","type":"message"}
{"nick":"isaacs","message":"oh, ok, so don't make it a pointer that gets new'ed.","date":"2012-01-10T20:16:00.694Z","type":"message"}
{"nick":"isaacs","message":"that makes sense.","date":"2012-01-10T20:16:06.224Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T20:16:52.695Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/node#219 (master - e1b829d : Ryan Dahl): The build is still failing.","date":"2012-01-10T20:16:52.913Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/node/compare/d4ee61f...e1b829d","date":"2012-01-10T20:16:52.913Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/node/builds/503724","date":"2012-01-10T20:16:52.913Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T20:16:52.913Z","type":"part"}
{"nick":"piscisaureus_","message":"isaacs: I don't think you really need to use WorkReqWrap at all - just embed uv_work_t","date":"2012-01-10T20:17:04.156Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: review? https://gist.github.com/1590952","date":"2012-01-10T20:19:12.218Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: ryah seemed to think it was important to use the ReqWrap approach when i was first doing this.","date":"2012-01-10T20:19:39.522Z","type":"message"}
{"nick":"igorzi","message":"piscisaureus_: so i was wrong about 3 syscalls for stat.. that's because our current implementation of uv_fs_stat does open+fstat+close (so that we could support long paths)","date":"2012-01-10T20:20:10.274Z","type":"message"}
{"nick":"igorzi","message":"piscisaureus_: if i go back to using CRT stat (with FindFirstFileEx) - it's 1 syscall","date":"2012-01-10T20:20:30.770Z","type":"message"}
{"nick":"ryah","message":"piscisaureus_: we'll want that added to your domains handle list","date":"2012-01-10T20:20:51.048Z","type":"message"}
{"nick":"igorzi","message":"piscisaureus_: i'm going to implement stat in libuv (with FindFirstFileEx), which supports long paths","date":"2012-01-10T20:20:55.823Z","type":"message"}
{"nick":"slaskis","reason":"Quit: slaskis","date":"2012-01-10T20:21:01.864Z","type":"quit"}
{"nick":"ryah","message":"piscisaureus_: or maybe just the zlib object itself","date":"2012-01-10T20:21:34.453Z","type":"message"}
{"nick":"ryah","message":"seems janky to have the WorkReqWrap in there","date":"2012-01-10T20:21:49.543Z","type":"message"}
{"nick":"piscisaureus_","message":"ryah: yeah and actually you do want to have the constructor and destructor called","date":"2012-01-10T20:22:04.573Z","type":"message"}
{"nick":"piscisaureus_","message":"ryah: unless they are no-ops","date":"2012-01-10T20:22:11.595Z","type":"message"}
{"nick":"piscisaureus_","message":"still I think you should just embed uv_work_t inside the zlib context","date":"2012-01-10T20:23:07.877Z","type":"message"}
{"nick":"ryah","message":"agreed","date":"2012-01-10T20:23:15.537Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: ^  so get rid of WorkReqWrap","date":"2012-01-10T20:24:11.302Z","type":"message"}
{"nick":"piscisaureus_","message":"igorzi: does FindFirstFile give you enough information","date":"2012-01-10T20:24:20.817Z","type":"message"}
{"nick":"igorzi","message":"piscisaureus_: yeah, i think so","date":"2012-01-10T20:24:55.251Z","type":"message"}
{"nick":"piscisaureus_","message":"igorzi: I think under some rare circumstances you might need to do the open-fstat-close trick (e.g for symlinks)","date":"2012-01-10T20:26:18.037Z","type":"message"}
{"nick":"piscisaureus_","message":"igorzi: but for normal files this works efficiently yeah","date":"2012-01-10T20:26:34.404Z","type":"message"}
{"nick":"kuebzky","date":"2012-01-10T20:26:49.394Z","type":"join"}
{"nick":"kuebk","reason":"Ping timeout: 240 seconds","date":"2012-01-10T20:28:49.229Z","type":"quit"}
{"nick":"piscisaureus_","message":"bbl","date":"2012-01-10T20:31:30.900Z","type":"message"}
{"nick":"isaacs","message":"but doesn't the ReqWrap give me the persistent object handle that gets cleaned up in its destructor?","date":"2012-01-10T20:34:39.593Z","type":"message"}
{"nick":"isaacs","message":"ryah, piscisaureus_ ^","date":"2012-01-10T20:34:47.315Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 240 seconds","date":"2012-01-10T20:35:32.710Z","type":"quit"}
{"nick":"bnoordhuis","message":"isaacs: you don't need it, ZCtx is itself a persistent object","date":"2012-01-10T20:35:34.393Z","type":"message"}
{"nick":"isaacs","message":"then we do this with it:","date":"2012-01-10T20:35:35.327Z","type":"message"}
{"nick":"isaacs","message":"  req.buffer = chunk;","date":"2012-01-10T20:35:36.420Z","type":"message"}
{"nick":"isaacs","message":"  req.callback = callback;","date":"2012-01-10T20:35:36.638Z","type":"message"}
{"nick":"isaacs","message":"  this._processing = req;","date":"2012-01-10T20:35:36.974Z","type":"message"}
{"nick":"isaacs","message":"so you're saying, just hang all that on hte ZCtx itself, and return this->object_?","date":"2012-01-10T20:35:50.834Z","type":"message"}
{"nick":"isaacs","message":"er, ctx->handle_ rather","date":"2012-01-10T20:35:58.762Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: yes","date":"2012-01-10T20:36:07.865Z","type":"message"}
{"nick":"bnoordhuis","message":"you can return Undefined() from Write(), you already have a reference to the object in JS land","date":"2012-01-10T20:36:39.272Z","type":"message"}
{"nick":"isaacs","message":"ok, that seems pretty sane.","date":"2012-01-10T20:36:42.354Z","type":"message"}
{"nick":"isaacs","message":"right, no need to keep the other one.  can just set processing = true","date":"2012-01-10T20:36:54.150Z","type":"message"}
{"nick":"isaacs","message":"otherwise it's just an extra object hanging around","date":"2012-01-10T20:37:20.409Z","type":"message"}
{"nick":"TooTallNate","message":"ryah: also, with a gyp build, `process.platform === 'mac'`","date":"2012-01-10T20:49:08.053Z","type":"message"}
{"nick":"TooTallNate","message":"is that permenant?","date":"2012-01-10T20:49:11.966Z","type":"message"}
{"nick":"isaacs","message":"ryah, bnoordhuis: https://gist.github.com/1591104","date":"2012-01-10T20:50:29.935Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate, ryah: that looks like a bug.  should be \"darwin\", no?","date":"2012-01-10T20:50:53.323Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: ya, should be","date":"2012-01-10T20:51:00.744Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: don't use work_req->data, use container_of()","date":"2012-01-10T20:53:07.217Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: what's container_of()?","date":"2012-01-10T20:53:16.799Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: the best thing since sliced bread","date":"2012-01-10T20:55:01.852Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-01-10T20:55:08.570Z","type":"quit"}
{"nick":"isaacs","message":"besides that :)","date":"2012-01-10T20:55:15.357Z","type":"message"}
{"nick":"isaacs","message":"what does it actually mean?  blah->pointer i get.","date":"2012-01-10T20:55:27.107Z","type":"message"}
{"nick":"bnoordhuis","message":"it returns a pointer to a struct that's embedded in another struct / class","date":"2012-01-10T20:55:28.505Z","type":"message"}
{"nick":"isaacs","message":"oh, ok","date":"2012-01-10T20:55:34.530Z","type":"message"}
{"nick":"bnoordhuis","message":"there are a couple of advantages but the main one is that it makes it clear that you're looking up an embedded struct","date":"2012-01-10T20:56:26.283Z","type":"message"}
{"nick":"isaacs","message":"ok","date":"2012-01-10T20:57:10.512Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: so, something like this?","date":"2012-01-10T20:59:06.280Z","type":"message"}
{"nick":"isaacs","message":"    ZCtx<mode> *ctx = container_of(work_req, uv_work_t, work_req_);","date":"2012-01-10T20:59:07.802Z","type":"message"}
{"nick":"isaacs","message":"assuming that &(ctx->work_req_) === work_req","date":"2012-01-10T20:59:32.234Z","type":"message"}
{"nick":"TooTallNate","message":"mmalecki: woah you got libffi installed that fast, nice ;)","date":"2012-01-10T20:59:38.648Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: yes","date":"2012-01-10T20:59:41.068Z","type":"message"}
{"nick":"isaacs","message":"kewl","date":"2012-01-10T20:59:46.245Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, another thing, you don't need parens in &ctx->work_req_","date":"2012-01-10T21:00:10.328Z","type":"message"}
{"nick":"bnoordhuis","message":"they don't hurt either of course","date":"2012-01-10T21:00:20.654Z","type":"message"}
{"nick":"mmalecki","message":"TooTallNate: oh? I didn't... I wanted to wait for antares, but well... XD","date":"2012-01-10T21:00:25.510Z","type":"message"}
{"nick":"TooTallNate","message":"oh. lol well it looks like it's there :p","date":"2012-01-10T21:00:48.863Z","type":"message"}
{"nick":"mmalecki","message":"TooTallNate: hm, can you link me to the build with and without it?","date":"2012-01-10T21:01:02.422Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i like them.  they're pretty.","date":"2012-01-10T21:01:03.453Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: my internal parser is mostly javascript.  anything to make the C easier for it to grok is good :)","date":"2012-01-10T21:01:54.623Z","type":"message"}
{"nick":"TooTallNate","message":"mmalecki: with: http://travis-ci.org/#!/rbranson/node-ffi/jobs/504116","date":"2012-01-10T21:02:28.452Z","type":"message"}
{"nick":"isaacs","message":"& and -> are both foreign words, so their precedence is a bit easeir to read with the parens.","date":"2012-01-10T21:02:32.420Z","type":"message"}
{"nick":"TooTallNate","message":"without: http://travis-ci.org/#!/rbranson/node-ffi/jobs/475890","date":"2012-01-10T21:02:33.798Z","type":"message"}
{"nick":"mmalecki","message":"TooTallNate: they ended up on different workers, maybe one of them has it installed? that'd be weird tho","date":"2012-01-10T21:03:23.595Z","type":"message"}
{"nick":"TooTallNate","message":"hmmm, not sure","date":"2012-01-10T21:03:36.542Z","type":"message"}
{"nick":"mmalecki","message":"TooTallNate: I'll check it","date":"2012-01-10T21:03:39.650Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: https://gist.github.com/1591225 <-- fourth commit added","date":"2012-01-10T21:10:20.986Z","type":"message"}
{"nick":"isaacs","message":"https://gist.github.com/1591225#file_0004_zlib_use_container_of_instead_of_data.patch","date":"2012-01-10T21:10:50.947Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-01-10T21:11:14.432Z","type":"join"}
{"nick":"bnoordhuis","message":"isaacs: ZCtx<mode> *ctx = container_of(work_req, ZCtx, work_req_); -> ZCtx<mode> *ctx = container_of(work_req, ZCtx<mode>, work_req_); ?","date":"2012-01-10T21:11:17.018Z","type":"message"}
{"nick":"isaacs","message":"oh… hrm.  i wonder why that works.","date":"2012-01-10T21:11:34.621Z","type":"message"}
{"nick":"isaacs","message":"seems like it shouldn't compile without the <mode>","date":"2012-01-10T21:12:11.281Z","type":"message"}
{"nick":"isaacs","message":"but it does, and passes tests.  works by accident, maybe?","date":"2012-01-10T21:12:20.676Z","type":"message"}
{"nick":"bnoordhuis","message":"Process() is part of ZCtx?","date":"2012-01-10T21:12:29.032Z","type":"message"}
{"nick":"isaacs","message":"yes.","date":"2012-01-10T21:12:33.523Z","type":"message"}
{"nick":"bnoordhuis","message":"in that case the compiler knows that ZCtx is really ZCtx<mode>","date":"2012-01-10T21:12:44.804Z","type":"message"}
{"nick":"isaacs","message":"oh, ok","date":"2012-01-10T21:13:07.500Z","type":"message"}
{"nick":"pietern","date":"2012-01-10T21:13:45.977Z","type":"join"}
{"nick":"isaacs","message":"https://gist.github.com/1591238 anyway","date":"2012-01-10T21:13:55.006Z","type":"message"}
{"nick":"isaacs","message":"better to be explicit there.","date":"2012-01-10T21:13:59.837Z","type":"message"}
{"nick":"isaacs","new_nick":"isaacs_lunch","date":"2012-01-10T21:14:48.808Z","type":"nick"}
{"nick":"kuebzky","date":"2012-01-10T21:15:07.682Z","type":"quit"}
{"nick":"bnoordhuis","message":"isaacs_lunch: lgtm","date":"2012-01-10T21:18:22.697Z","type":"message"}
{"nick":"piscisaureus__","date":"2012-01-10T21:27:00.110Z","type":"join"}
{"nick":"piscisaureus_","reason":"Read error: Connection reset by peer","date":"2012-01-10T21:28:11.736Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 240 seconds","date":"2012-01-10T21:38:49.223Z","type":"quit"}
{"nick":"indutny","message":"isaacs_lunch: yt?","date":"2012-01-10T21:44:56.442Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2012-01-10T21:45:04.230Z","type":"message"}
{"nick":"indutny","message":"nick says for itself","date":"2012-01-10T21:45:09.758Z","type":"message"}
{"nick":"indutny","message":":D","date":"2012-01-10T21:45:10.273Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: yt?","date":"2012-01-10T21:45:14.417Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: yes","date":"2012-01-10T21:45:23.748Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I think I found the source of problem","date":"2012-01-10T21:46:18.445Z","type":"message"}
{"nick":"bnoordhuis","message":"of what problem?","date":"2012-01-10T21:46:25.488Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I added logging to ~ZCtx","date":"2012-01-10T21:46:28.941Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: memory leak within node-spdy","date":"2012-01-10T21:46:37.428Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: so I'm creating two zlib streams per connection","date":"2012-01-10T21:46:50.237Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: and destructor never gets fired","date":"2012-01-10T21:47:15.285Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: remember, never cross the streams","date":"2012-01-10T21:47:26.151Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: a couple of patches were just landed / are in progress, you might want to check those","date":"2012-01-10T21:48:12.400Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ok","date":"2012-01-10T21:48:52.355Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: probably I'll create stream pool","date":"2012-01-10T21:49:00.861Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: but .reset() method needs to be landed first","date":"2012-01-10T21:49:11.602Z","type":"message"}
{"nick":"indutny","message":"what do you think?","date":"2012-01-10T21:49:47.356Z","type":"message"}
{"nick":"bnoordhuis","message":"i think it's odd that you don't see the destructor getting called","date":"2012-01-10T21:50:58.894Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: it's called","date":"2012-01-10T21:51:19.596Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: but 2 times","date":"2012-01-10T21:51:31.337Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: while I'm receiving 3k connections","date":"2012-01-10T21:52:10.646Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: sanity check, you do see 3k constructor calls?","date":"2012-01-10T21:52:40.606Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: one sec","date":"2012-01-10T21:52:47.914Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: yes","date":"2012-01-10T21:56:16.125Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: are you 100% confident that your code is not holding onto handles?","date":"2012-01-10T21:56:58.265Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: nope, but I'm storing everything within connection","date":"2012-01-10T21:58:02.569Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I'll add .reset() method for zlib stream","date":"2012-01-10T21:59:18.787Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: try to reduce it to a minimal test case","date":"2012-01-10T21:59:39.131Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: creating two zlib contexts per connection is anyway not a good idea","date":"2012-01-10T21:59:42.065Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ok, one second","date":"2012-01-10T21:59:55.781Z","type":"message"}
{"nick":"pietern_","date":"2012-01-10T22:00:03.102Z","type":"join"}
{"nick":"bnoordhuis","message":"but i'm not going to look at it tonight, i have to get up early tomorrow :)","date":"2012-01-10T22:00:27.489Z","type":"message"}
{"nick":"pietern","reason":"Read error: Connection reset by peer","date":"2012-01-10T22:00:27.773Z","type":"quit"}
{"nick":"pietern_","new_nick":"pietern","date":"2012-01-10T22:00:27.989Z","type":"nick"}
{"nick":"indutny","message":"bnoordhuis: :)","date":"2012-01-10T22:00:43.244Z","type":"message"}
{"nick":"indutny","message":"ok, tomorrow then","date":"2012-01-10T22:02:52.391Z","type":"message"}
{"nick":"rphillips","date":"2012-01-10T22:04:44.876Z","type":"join"}
{"nick":"rphillips","message":"anybody see this assertion before on windows ? http://skitch.com/trolocsis/gaij8/screen-shot-2012-01-10-at-4.02.26-pm","date":"2012-01-10T22:05:02.471Z","type":"message"}
{"nick":"rphillips","message":"line 1277 src\\win\\pipe.c","date":"2012-01-10T22:05:15.752Z","type":"message"}
{"nick":"igorzi","message":"rphillips: are you using libuv from v0.6 branch?","date":"2012-01-10T22:08:08.427Z","type":"message"}
{"nick":"rphillips","message":"yes","date":"2012-01-10T22:08:38.355Z","type":"message"}
{"nick":"igorzi","message":"rphillips: what's the last commit?","date":"2012-01-10T22:09:04.070Z","type":"message"}
{"nick":"rphillips","message":"5cc6090fdf738c7ae6677627f9f151c9bc16b43f","date":"2012-01-10T22:09:36.546Z","type":"message"}
{"nick":"mmalecki","message":"https://github.com/joyent/node/pull/2505 <- just sayin'","date":"2012-01-10T22:09:43.111Z","type":"message"}
{"nick":"AvianFlu","message":"damn it mmalecki that was supposed to be `infernal` not `internal`!","date":"2012-01-10T22:10:21.980Z","type":"message"}
{"nick":"AvianFlu","message":"XD","date":"2012-01-10T22:10:22.698Z","type":"message"}
{"nick":"mmalecki","message":"lol","date":"2012-01-10T22:10:39.220Z","type":"message"}
{"nick":"igorzi","message":"rphillips: that's from master, not v0.6","date":"2012-01-10T22:12:44.451Z","type":"message"}
{"nick":"igorzi","message":"rphillips: how do you reproduce it?","date":"2012-01-10T22:13:07.518Z","type":"message"}
{"nick":"rphillips","message":"igorzi: https://github.com/luvit/luvit/blob/master/tests/runner.lua","date":"2012-01-10T22:13:55.495Z","type":"message"}
{"nick":"rphillips","message":"trying to run this script on windows","date":"2012-01-10T22:14:00.991Z","type":"message"}
{"nick":"rphillips","message":"using luvit","date":"2012-01-10T22:14:06.265Z","type":"message"}
{"nick":"mmalecki","message":"(but no, really, release is coming, can anyone merge it now XD ?)","date":"2012-01-10T22:14:41.887Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: poke poke poke ^","date":"2012-01-10T22:15:00.397Z","type":"message"}
{"nick":"rphillips","message":"igorzi: happens on the latest master also","date":"2012-01-10T22:16:25.617Z","type":"message"}
{"nick":"AndreasMadsen","reason":"Remote host closed the connection","date":"2012-01-10T22:16:33.356Z","type":"quit"}
{"nick":"bnoordhuis","message":"mmalecki: thanks maciej, merged","date":"2012-01-10T22:16:56.853Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Maciej Małecki\u000f \u000307master\u000f * r\u00024d49469\u000f \u000310\u000f/ lib/child_process.js \u0002:\u000f child_process: fix typo in internal message event name - http://git.io/Egl18Q","date":"2012-01-10T22:17:04.380Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ready for my patch?","date":"2012-01-10T22:17:28.999Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I cleaned up node_zlib.cc a little, btw","date":"2012-01-10T22:17:41.819Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: i'm off-duty","date":"2012-01-10T22:17:46.304Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: np","date":"2012-01-10T22:17:53.548Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: thanks! :)","date":"2012-01-10T22:17:57.515Z","type":"message"}
{"nick":"mmalecki","action":"goes to http://github-high-scores.heroku.com/joyent/node/high_scores/ to check how many commits indutny is ahead","date":"2012-01-10T22:18:42.652Z","type":"action"}
{"nick":"piscisaureus__","new_nick":"piscisaureus_","date":"2012-01-10T22:19:42.898Z","type":"nick"}
{"nick":"igorzi","message":"rphillips: one possibility is that you're passed ipc=1 to uv_pipe_init on one end, and passed ipc=0 on another end of the pipe","date":"2012-01-10T22:19:50.236Z","type":"message"}
{"nick":"rphillips","message":"i'll check that out. thanks","date":"2012-01-10T22:20:28.139Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307v0.6\u000f * r\u0002290bc0c\u000f \u000310\u000f/ (5 files in 2 dirs)\u0002:\u000f ","date":"2012-01-10T22:27:02.783Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f Use .jpg instead of .bmp for .msi","date":"2012-01-10T22:27:03.016Z","type":"message"}
{"nick":"CIA-115","message":"\u0002node:\u000f smaller. - http://git.io/EHjFhg","date":"2012-01-10T22:27:03.016Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T22:32:24.819Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/node#220 (master - 4d49469 : Maciej Małecki): The build is still failing.","date":"2012-01-10T22:32:25.036Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/node/compare/e1b829d...4d49469","date":"2012-01-10T22:32:25.036Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/node/builds/504480","date":"2012-01-10T22:32:25.036Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T22:32:25.036Z","type":"part"}
{"nick":"pietern","reason":"Remote host closed the connection","date":"2012-01-10T22:32:41.450Z","type":"quit"}
{"nick":"pietern","date":"2012-01-10T22:32:53.220Z","type":"join"}
{"nick":"mjr_","reason":"Quit: mjr_","date":"2012-01-10T22:34:44.313Z","type":"quit"}
{"nick":"travis-ci","date":"2012-01-10T22:35:02.830Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/node#221 (v0.6 - 290bc0c : Ryan Dahl): The build is still failing.","date":"2012-01-10T22:35:03.040Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/node/compare/0ad2717...290bc0c","date":"2012-01-10T22:35:03.040Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/node/builds/504503","date":"2012-01-10T22:35:03.040Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-10T22:35:03.040Z","type":"part"}
{"nick":"piscisaureus_","message":"rphillips: Are you using the luvit ports branch or are you just using master?","date":"2012-01-10T22:36:40.229Z","type":"message"}
{"nick":"txdv","message":"ev has a readwatcher, it just notifies the user if there is something to read, will libuv have a read watcher too?","date":"2012-01-10T22:38:52.595Z","type":"message"}
{"nick":"rphillips","message":"piscisaureus_: master","date":"2012-01-10T22:39:04.042Z","type":"message"}
{"nick":"piscisaureus_","message":"rphillips: I did some windows work early december but I don't think it ever got merged, it still lives in the ports branch","date":"2012-01-10T22:40:22.132Z","type":"message"}
{"nick":"piscisaureus_","message":"rphillips: anyhow","date":"2012-01-10T22:40:26.999Z","type":"message"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-01-10T22:40:47.201Z","type":"quit"}
{"nick":"piscisaureus_","message":"rphillips: you should not use IPC pipes unless you're doing something similar to child_process.fork() in node","date":"2012-01-10T22:40:55.685Z","type":"message"}
{"nick":"piscisaureus_","message":"rphillips: it basically turns uv_pipe_t from a raw binary stream into a packetized stream that allows handle sharing (so we can do FD passing on windows)","date":"2012-01-10T22:42:03.803Z","type":"message"}
{"nick":"piscisaureus_","message":"but it only works if both ends of the pipe are libuv-based programs","date":"2012-01-10T22:42:25.964Z","type":"message"}
{"nick":"rphillips","message":"luvit is passing 0 to the ipc flag in uv_pipe_init","date":"2012-01-10T22:43:54.760Z","type":"message"}
{"nick":"piscisaureus_","message":"rphillips: hmm maybe the uv_pipe_t handle's memory got clobbered then","date":"2012-01-10T22:46:24.538Z","type":"message"}
{"nick":"mjr_","date":"2012-01-10T22:46:32.847Z","type":"join"}
{"nick":"rphillips","message":"i'll debug it some more and report back","date":"2012-01-10T22:46:52.051Z","type":"message"}
{"nick":"mjr_","reason":"Client Quit","date":"2012-01-10T22:47:20.040Z","type":"quit"}
{"nick":"piscisaureus_","message":"rphillips: but https://github.com/luvit/luvit/blob/master/lib/luvit.lua#L107-111 <-- this doesn't work on windows","date":"2012-01-10T22:47:28.799Z","type":"message"}
{"nick":"piscisaureus_","message":"if you redirect stdio to a file or pipe then it will break in unexpected ways anyway","date":"2012-01-10T22:47:44.577Z","type":"message"}
{"nick":"rphillips","message":"ah I see","date":"2012-01-10T22:48:27.476Z","type":"message"}
{"nick":"bradleymeck","reason":"Read error: Operation timed out","date":"2012-01-10T22:50:40.217Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 252 seconds","date":"2012-01-10T22:56:22.785Z","type":"quit"}
{"nick":"isaacs_limechat","date":"2012-01-10T23:10:05.221Z","type":"join"}
{"nick":"mjr_","date":"2012-01-10T23:11:32.986Z","type":"join"}
{"nick":"mjr_","reason":"Client Quit","date":"2012-01-10T23:12:43.016Z","type":"quit"}
{"nick":"mjr_","date":"2012-01-10T23:13:35.618Z","type":"join"}
{"nick":"mjr_","reason":"Client Quit","date":"2012-01-10T23:13:58.107Z","type":"quit"}
{"nick":"isaacs_lunch","new_nick":"isaacs","date":"2012-01-10T23:18:47.604Z","type":"nick"}
{"nick":"indutny","message":"isaacs: heya","date":"2012-01-10T23:19:40.966Z","type":"message"}
{"nick":"isaacs","message":"yo","date":"2012-01-10T23:19:45.945Z","type":"message"}
{"nick":"indutny","message":"isaacs: I'm very close to the source of my problems with zlib","date":"2012-01-10T23:20:11.009Z","type":"message"}
{"nick":"isaacs","message":"indutny: nice!","date":"2012-01-10T23:20:34.220Z","type":"message"}
{"nick":"isaacs","message":"what'd you find?","date":"2012-01-10T23:20:35.948Z","type":"message"}
{"nick":"indutny","message":"isaacs: looks like flush's callback is sometimes gets into queu's end","date":"2012-01-10T23:20:36.292Z","type":"message"}
{"nick":"indutny","message":"isaacs: so I'm receiving a ton of requests","date":"2012-01-10T23:20:47.291Z","type":"message"}
{"nick":"isaacs","message":"oh, right, yeah, that cb-on-write thing is kind of weird.","date":"2012-01-10T23:20:51.781Z","type":"message"}
{"nick":"isaacs","action":"adds \"Clean up streams\" to the growing node todo list.","date":"2012-01-10T23:21:02.143Z","type":"action"}
{"nick":"indutny","message":"isaacs: yes, looks like eio has a lot of callbacks in queue","date":"2012-01-10T23:21:26.005Z","type":"message"}
{"nick":"indutny","message":"isaacs: and flush is always in end","date":"2012-01-10T23:21:31.748Z","type":"message"}
{"nick":"indutny","message":"isaacs: so once I'll close all that connections","date":"2012-01-10T23:21:47.003Z","type":"message"}
{"nick":"indutny","message":"isaacs: after some time, all callbacks will be fired","date":"2012-01-10T23:21:55.684Z","type":"message"}
{"nick":"isaacs","message":"indutny: why do you need to call flush()?","date":"2012-01-10T23:22:03.351Z","type":"message"}
{"nick":"indutny","message":"isaacs: because I","date":"2012-01-10T23:22:33.498Z","type":"message"}
{"nick":"indutny","message":"isaacs: because I need to parse SPDY headers before doing everything else","date":"2012-01-10T23:22:57.943Z","type":"message"}
{"nick":"indutny","message":"isaacs: should I use write callback instead?","date":"2012-01-10T23:23:18.042Z","type":"message"}
{"nick":"isaacs","message":"hm.","date":"2012-01-10T23:23:42.007Z","type":"message"}
{"nick":"isaacs","message":"indutny: well, so… the thing is, flush doesn't mean \"block until everything is sent\"","date":"2012-01-10T23:24:03.111Z","type":"message"}
{"nick":"isaacs","message":"it means \"tell zlib to send everything as fast as possible\"","date":"2012-01-10T23:24:11.235Z","type":"message"}
{"nick":"isaacs","message":"if you want to knwo that a write is complete, the best way is to check the return value, and if it's false, then attach a drain handler.","date":"2012-01-10T23:24:40.627Z","type":"message"}
{"nick":"isaacs","message":"calling flush a lot is really not good.  there are a few use cases where you do actually need to put a break in the zlib stream, and \u001chave it flush whatever it has, and obviously you have to do that at the end.","date":"2012-01-10T23:25:26.192Z","type":"message"}
{"nick":"indutny","message":"isaacs: I'm doing that at the end of compressed data","date":"2012-01-10T23:26:04.258Z","type":"message"}
{"nick":"indutny","message":"isaacs: looks like requests are coming faster than node can process","date":"2012-01-10T23:27:02.927Z","type":"message"}
{"nick":"isaacs","message":"indutny: then why not call .end()?  are you needing to re-use the stream object?","date":"2012-01-10T23:27:07.935Z","type":"message"}
{"nick":"indutny","message":"isaacs: I think creating it would have bigger performance impact","date":"2012-01-10T23:27:28.413Z","type":"message"}
{"nick":"indutny","message":"isaacs: than reusing","date":"2012-01-10T23:27:42.528Z","type":"message"}
{"nick":"isaacs","message":"yeah, probably","date":"2012-01-10T23:27:42.873Z","type":"message"}
{"nick":"indutny","message":"isaacs: btw, added reset method","date":"2012-01-10T23:27:48.167Z","type":"message"}
{"nick":"indutny","message":"isaacs: locally","date":"2012-01-10T23:27:50.977Z","type":"message"}
{"nick":"isaacs","message":"what's reset do?","date":"2012-01-10T23:27:55.527Z","type":"message"}
{"nick":"indutny","message":"isaacs: reset's dictionary and everything","date":"2012-01-10T23:28:06.972Z","type":"message"}
{"nick":"indutny","message":"isaacs: inflateReset and deflateReset","date":"2012-01-10T23:28:17.028Z","type":"message"}
{"nick":"indutny","message":"isaacs: let me show you","date":"2012-01-10T23:28:21.727Z","type":"message"}
{"nick":"isaacs","message":"oh, right, those are supplied by zlib.h, right?","date":"2012-01-10T23:28:34.975Z","type":"message"}
{"nick":"indutny","message":"isaacs: yes","date":"2012-01-10T23:29:01.747Z","type":"message"}
{"nick":"indutny","message":"isaacs: https://github.com/joyent/node/pull/2506","date":"2012-01-10T23:31:08.059Z","type":"message"}
{"nick":"indutny","message":"oh, 6am is definitely a time to get sleeping :D","date":"2012-01-10T23:33:57.550Z","type":"message"}
{"nick":"indutny","message":"sorry","date":"2012-01-10T23:34:00.308Z","type":"message"}
{"nick":"indutny","message":"ttyl","date":"2012-01-10T23:34:01.170Z","type":"message"}
{"nick":"isaacs","message":"g'nite!","date":"2012-01-10T23:35:18.795Z","type":"message"}
{"nick":"isaacs","reason":"Disconnected by services","date":"2012-01-10T23:36:16.647Z","type":"quit"}
{"nick":"isaacs_limechat","new_nick":"isaacs","date":"2012-01-10T23:36:21.278Z","type":"nick"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-01-10T23:42:26.318Z","type":"quit"}
{"nick":"isaacs_limechat","date":"2012-01-10T23:42:43.506Z","type":"join"}
{"nick":"isaacs_limechat","new_nick":"isaacs","date":"2012-01-10T23:42:53.895Z","type":"nick"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-01-10T23:44:16.172Z","type":"quit"}
{"nick":"isaacs","date":"2012-01-10T23:44:28.807Z","type":"join"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-01-10T23:48:32.152Z","type":"quit"}
{"nick":"isaacs","date":"2012-01-10T23:49:18.035Z","type":"join"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-01-10T23:51:22.407Z","type":"quit"}
{"nick":"isaacs","date":"2012-01-10T23:51:37.370Z","type":"join"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-01-10T23:53:52.059Z","type":"quit"}
{"nick":"isaacs","date":"2012-01-10T23:54:07.524Z","type":"join"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-01-10T23:54:31.971Z","type":"quit"}
{"nick":"isaacs","date":"2012-01-10T23:55:11.914Z","type":"join"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-01-10T23:55:38.832Z","type":"quit"}
{"nick":"isaacs","date":"2012-01-10T23:56:16.020Z","type":"join"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-01-10T23:56:39.611Z","type":"quit"}
{"nick":"isaacs","date":"2012-01-10T23:57:22.807Z","type":"join"}
{"nick":"pietern","reason":"Quit: pietern","date":"2012-01-10T23:57:34.713Z","type":"quit"}
{"nick":"mjr_","date":"2012-01-10T23:57:50.347Z","type":"join"}
