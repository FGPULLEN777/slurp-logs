{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-10-15T00:00:00.984Z","type":"quit"}
{"nick":"ircretary","date":"2013-10-15T00:00:08.341Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: fwiw looks like part of the package was in deps/v8/src/extensions/i18n/, but that's been moved to a third_party folder which requires a checkout.","date":"2013-10-15T00:01:32.993Z","type":"message"}
{"nick":"TooTallNate","date":"2013-10-15T00:07:12.411Z","type":"join"}
{"nick":"trevnorris","message":"TooTallNate: ping!!!","date":"2013-10-15T00:07:19.592Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: pong","date":"2013-10-15T00:07:23.873Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: hey :)","date":"2013-10-15T00:08:46.318Z","type":"message"}
{"nick":"trevnorris","message":"so, v8 introduced this new icu_gyp_path variable that needs to point to some third_party library. but it can be disabled at compile time. though I can't figure out how to tell it \"hey i'm going to disable you at compile time so don't bitch at me during configure\"","date":"2013-10-15T00:08:46.538Z","type":"message"}
{"nick":"trevnorris","message":"for some reason thought you might have an idea what I could do.","date":"2013-10-15T00:08:46.748Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: this is a master branch thing?","date":"2013-10-15T00:09:16.313Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: yeah. I want to try out some new stuff on v8 3.22 and am trying to upgrade","date":"2013-10-15T00:09:42.081Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: what's the error you're seeing?","date":"2013-10-15T00:10:17.300Z","type":"message"}
{"nick":"trevnorris","message":"and they remove their src/extensions folder that provided some support for i18n","date":"2013-10-15T00:10:18.552Z","type":"message"}
{"nick":"trevnorris","message":"gyp: Undefined variable icu_gyp_path in .../deps/v8/tools/gyp/v8.gyp while loading dependencies of .../node.gyp while trying to load .../node.gyp","date":"2013-10-15T00:11:06.956Z","type":"message"}
{"nick":"trevnorris","message":"that variable is in build/standalone.gyi","date":"2013-10-15T00:12:19.920Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: well try adding that \"icu_gyp_path\" to the variables dir in node.gyp","date":"2013-10-15T00:16:20.938Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: cool, i'll try that. i'm also trying to figure out how to disable it by default. think I found the commit that'll show me how. hopefully it'll stop checking that one.","date":"2013-10-15T00:19:00.439Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: tried it. same complaint.","date":"2013-10-15T00:22:34.665Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: ah, ok. so v8_enable_i18n_support must be 0 and then it shouldn't try to read in that file. but guess I'm not passing it in correctly.","date":"2013-10-15T00:29:18.176Z","type":"message"}
{"nick":"c4milo","date":"2013-10-15T00:29:22.491Z","type":"join"}
{"nick":"TooTallNate","message":"trevnorris: perhaps try the common.gypi file","date":"2013-10-15T00:29:33.375Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: yes, they're at 3.22 but it's the unstable, I think I don't think they've started 3.23 yet","date":"2013-10-15T00:30:10.163Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: wait. so their even numbered branches are unstable?","date":"2013-10-15T00:30:44.553Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: they don't do numbering like that, it's just what's tracked intheir current chromium usage","date":"2013-10-15T00:31:40.743Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: ah, ok. thanks.","date":"2013-10-15T00:31:56.696Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: icu is a l10n library, and yes, it's huge","date":"2013-10-15T00:32:01.526Z","type":"message"}
{"nick":"trevnorris","message":"thanks all. that was a fun investigation.","date":"2013-10-15T00:34:14.761Z","type":"message"}
{"nick":"othiym23","message":"isaacs: I hope you're further along with your RTConf than I am","date":"2013-10-15T00:34:20.771Z","type":"message"}
{"nick":"othiym23","message":"isaacs: I have a thesis and a big pile of information that's super interesting to me, but am still working on cramming it in to the correct shape","date":"2013-10-15T00:34:46.285Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-15T00:36:59.576Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-15T00:37:25.418Z","type":"join"}
{"nick":"c4milo_","date":"2013-10-15T00:41:01.077Z","type":"join"}
{"nick":"isaacs","message":"othiym23: yep.  right there with ya","date":"2013-10-15T00:41:02.580Z","type":"message"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2013-10-15T00:42:19.426Z","type":"quit"}
{"nick":"c4milo_","reason":"Remote host closed the connection","date":"2013-10-15T00:44:03.394Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-15T00:44:31.475Z","type":"join"}
{"nick":"inolen","date":"2013-10-15T00:45:25.842Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 264 seconds","date":"2013-10-15T00:49:26.785Z","type":"quit"}
{"nick":"wwicks","reason":"Read error: Connection reset by peer","date":"2013-10-15T00:57:00.316Z","type":"quit"}
{"nick":"wwicks","date":"2013-10-15T00:57:15.474Z","type":"join"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-10-15T01:04:49.516Z","type":"quit"}
{"nick":"julianduque","reason":"Quit: leaving","date":"2013-10-15T01:09:33.681Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-10-15T01:28:36.350Z","type":"quit"}
{"nick":"abraxas","date":"2013-10-15T01:31:30.950Z","type":"join"}
{"nick":"julianduque","date":"2013-10-15T01:34:05.069Z","type":"join"}
{"nick":"hueniverse","reason":"Quit: Leaving.","date":"2013-10-15T01:38:37.020Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-10-15T01:40:12.947Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 260 seconds","date":"2013-10-15T01:43:27.908Z","type":"quit"}
{"nick":"st_luke","date":"2013-10-15T01:44:06.745Z","type":"join"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-10-15T01:55:09.632Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-15T02:19:47.753Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-15T02:21:32.059Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-15T02:22:36.072Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-15T02:24:18.571Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-15T02:24:53.822Z","type":"join"}
{"nick":"mikeal","date":"2013-10-15T02:44:59.526Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-15T02:49:46.801Z","type":"nick"}
{"nick":"c4milo","date":"2013-10-15T03:00:11.261Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-10-15T03:04:37.073Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-10-15T03:31:35.053Z","type":"quit"}
{"nick":"st_luke","date":"2013-10-15T03:32:11.920Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 265 seconds","date":"2013-10-15T03:36:41.033Z","type":"quit"}
{"nick":"st_luke","date":"2013-10-15T03:59:48.750Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-15T04:32:34.610Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-15T04:33:38.330Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-10-15T04:45:35.176Z","type":"quit"}
{"nick":"indexzero","date":"2013-10-15T04:57:34.042Z","type":"join"}
{"nick":"indexzero","reason":"Client Quit","date":"2013-10-15T04:57:35.242Z","type":"quit"}
{"nick":"indutny","message":"heya","date":"2013-10-15T05:14:34.697Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-15T05:19:11.158Z","type":"quit"}
{"nick":"julianduque","reason":"Quit: leaving","date":"2013-10-15T05:20:12.095Z","type":"quit"}
{"nick":"st_luke","date":"2013-10-15T05:36:34.749Z","type":"join"}
{"nick":"bajtos","date":"2013-10-15T06:08:51.457Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-10-15T06:23:49.728Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-15T06:28:00.296Z","type":"nick"}
{"nick":"`3E|SLIDEDECKDUT","new_nick":"`3E","date":"2013-10-15T06:30:41.645Z","type":"nick"}
{"nick":"rendar","date":"2013-10-15T06:36:09.179Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #260 \u00037UNSTABLE\u000f windows-ia32 (11/601) windows-x64 (10/601) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/260/","date":"2013-10-15T06:41:19.189Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-10-15T06:56:39.788Z","type":"join"}
{"nick":"rendar","message":"bnoordhuis: good morning :)","date":"2013-10-15T07:05:25.395Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: hey","date":"2013-10-15T07:06:37.844Z","type":"message"}
{"nick":"kenperkins","reason":"Ping timeout: 272 seconds","date":"2013-10-15T07:08:17.745Z","type":"quit"}
{"nick":"bnoordhuis","message":"rendar, indutny: morning","date":"2013-10-15T07:19:08.904Z","type":"message"}
{"nick":"indutny","message":"how are you?","date":"2013-10-15T07:19:25.353Z","type":"message"}
{"nick":"bnoordhuis","message":"sleepy","date":"2013-10-15T07:19:30.064Z","type":"message"}
{"nick":"bnoordhuis","message":"i have this grocery delivery service now","date":"2013-10-15T07:19:45.759Z","type":"message"}
{"nick":"bnoordhuis","message":"but no one told me they'd be ringing my doorbell at 08.30 am","date":"2013-10-15T07:19:56.613Z","type":"message"}
{"nick":"indutny","message":"hahaha","date":"2013-10-15T07:20:21.802Z","type":"message"}
{"nick":"bnoordhuis","message":"these are not times decent people speak of, let alone are awake at","date":"2013-10-15T07:20:22.674Z","type":"message"}
{"nick":"indutny","message":"we've delivery service in moscow too","date":"2013-10-15T07:20:31.195Z","type":"message"}
{"nick":"indutny","message":"it has free deliveries from 1am to 5 am","date":"2013-10-15T07:20:37.968Z","type":"message"}
{"nick":"indutny","message":"never tried it, though","date":"2013-10-15T07:20:48.483Z","type":"message"}
{"nick":"bnoordhuis","message":"seriously? only free at night?","date":"2013-10-15T07:21:01.158Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2013-10-15T07:21:13.860Z","type":"message"}
{"nick":"indutny","message":"so what about that GH-sec issue?","date":"2013-10-15T07:21:35.841Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, the pipelining thing","date":"2013-10-15T07:21:44.428Z","type":"message"}
{"nick":"bnoordhuis","message":"i think tj and isaac are somewhat opposed to disabling pipelining altogether","date":"2013-10-15T07:21:59.092Z","type":"message"}
{"nick":"bnoordhuis","message":"so rate limiting is probably the next best thing","date":"2013-10-15T07:22:17.466Z","type":"message"}
{"nick":"bnoordhuis","message":"now that i'm up so early, i might as well write the patch","date":"2013-10-15T07:23:14.306Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-10-15T07:23:34.761Z","type":"message"}
{"nick":"indutny","message":"so","date":"2013-10-15T07:29:16.810Z","type":"message"}
{"nick":"indutny","message":"that OSX 10.9 crash is really wierd","date":"2013-10-15T07:31:29.856Z","type":"message"}
{"nick":"indutny","message":"I still have no access to it","date":"2013-10-15T07:31:49.867Z","type":"message"}
{"nick":"indutny","message":"but it seems that callback is trying to be invoked after FSEventStream is released","date":"2013-10-15T07:32:29.172Z","type":"message"}
{"nick":"bnoordhuis","message":"i've no idea what could be causing that","date":"2013-10-15T07:33:15.955Z","type":"message"}
{"nick":"bnoordhuis","message":"if it's your plain old memory corruption, you'd expect a SIGSEGV, not a SIGBUS","date":"2013-10-15T07:33:32.704Z","type":"message"}
{"nick":"bnoordhuis","message":"but well, once 10.9 is officially released and all the SF/SV hipsters upgrade, we'll find out soon enough","date":"2013-10-15T07:34:32.629Z","type":"message"}
{"nick":"mraleph","reason":"Read error: Connection reset by peer","date":"2013-10-15T07:38:27.733Z","type":"quit"}
{"nick":"mraleph1","date":"2013-10-15T07:38:28.827Z","type":"join"}
{"nick":"indutny","message":"yeah","date":"2013-10-15T07:40:17.290Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: its actually a EXC_BAD_ACCESS","date":"2013-10-15T07:40:47.054Z","type":"message"}
{"nick":"indutny","message":"SIGBUS is a result of it","date":"2013-10-15T07:40:59.324Z","type":"message"}
{"nick":"bnoordhuis","message":"ah okay","date":"2013-10-15T07:42:50.351Z","type":"message"}
{"nick":"indutny","message":"actually, I think that it might be a kernel bug","date":"2013-10-15T07:43:42.989Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-10-15T07:43:47.279Z","type":"message"}
{"nick":"indutny","message":"FSEvents bug","date":"2013-10-15T07:43:50.756Z","type":"message"}
{"nick":"indutny","message":"its not related to kernel at all","date":"2013-10-15T07:43:57.863Z","type":"message"}
{"nick":"bnoordhuis","message":"bugs in apple software? unheard of!","date":"2013-10-15T07:45:12.122Z","type":"message"}
{"nick":"bnoordhuis","message":"but what makes you think so?","date":"2013-10-15T07:45:35.360Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-10-15T07:50:47.214Z","type":"message"}
{"nick":"indutny","message":"first of all","date":"2013-10-15T07:50:53.430Z","type":"message"}
{"nick":"indutny","message":"we seen no such crashes on older versions","date":"2013-10-15T07:51:08.569Z","type":"message"}
{"nick":"indutny","message":"and its pretty stable on new osx","date":"2013-10-15T07:51:31.249Z","type":"message"}
{"nick":"indutny","message":"also","date":"2013-10-15T07:51:50.292Z","type":"message"}
{"nick":"indutny","message":"I like to blame other people","date":"2013-10-15T07:51:53.339Z","type":"message"}
{"nick":"bnoordhuis","message":"especially apple engineers","date":"2013-10-15T07:52:57.174Z","type":"message"}
{"nick":"bnoordhuis","message":"they have it coming though","date":"2013-10-15T07:53:02.663Z","type":"message"}
{"nick":"paddybyers","date":"2013-10-15T08:04:11.543Z","type":"join"}
{"nick":"wolfeidau","message":"Anyone know if tjfontaine pushed changes relating to the ReadableState issue in tls? I wanted to test it against some stuff i am working on","date":"2013-10-15T08:07:06.639Z","type":"message"}
{"nick":"hz","date":"2013-10-15T08:16:09.735Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u00029a3a0cc\u0002 : doc: expand os.loadavg() section - http://git.io/SOs7TA","date":"2013-10-15T08:20:41.178Z","type":"message"}
{"nick":"bnoordhuis","message":"wolfeidau: don't know, sorry","date":"2013-10-15T08:20:57.509Z","type":"message"}
{"nick":"bnoordhuis","message":"haven't seen any commits from tj lately though","date":"2013-10-15T08:21:23.864Z","type":"message"}
{"nick":"wolfeidau","message":"I have been trying to find the issue causing quite pronounced increase in memory when using TLS, and no matter how much i poke and prod the code I can't seem to find any clues","date":"2013-10-15T08:23:15.484Z","type":"message"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-10-15T08:23:46.124Z","type":"quit"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-10-15T08:31:13.217Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1534 \u00037UNSTABLE\u000f smartos-x64 (5/601) smartos-ia32 (4/601) linux-ia32 (1/601) osx-ia32 (1/601) http://jenkins.nodejs.org/job/nodejs-v0.10/1534/","date":"2013-10-15T08:31:48.417Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #261 \u00037UNSTABLE\u000f windows-ia32 (10/601) windows-x64 (9/601) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/261/","date":"2013-10-15T08:35:13.488Z","type":"message"}
{"nick":"bnoordhuis","message":"executing:  git am 6350.patch","date":"2013-10-15T08:40:14.325Z","type":"message"}
{"nick":"bnoordhuis","message":"Patch format detection failed.","date":"2013-10-15T08:40:14.537Z","type":"message"}
{"nick":"bnoordhuis","message":"Command exited with non-zero: git am 6350.patch","date":"2013-10-15T08:40:14.966Z","type":"message"}
{"nick":"bnoordhuis","message":"^ i'm guessing github was down again...","date":"2013-10-15T08:40:25.429Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Rod Vagg\u000f \u00037master\u000f * \u0002684dd28\u0002 : util: format as Error if instanceof Error - http://git.io/EL7DeA","date":"2013-10-15T08:45:44.676Z","type":"message"}
{"nick":"bajtos","date":"2013-10-15T08:48:06.550Z","type":"join"}
{"nick":"Kakera","date":"2013-10-15T08:55:32.190Z","type":"join"}
{"nick":"amartens","date":"2013-10-15T08:55:59.589Z","type":"join"}
{"nick":"rvagg","message":"✔","date":"2013-10-15T08:56:12.699Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #613 \u00037UNSTABLE\u000f osx-x64 (1/645) smartos-ia32 (5/645) smartos-x64 (8/645) http://jenkins.nodejs.org/job/nodejs-master/613/","date":"2013-10-15T08:58:14.912Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-10-15T09:01:26.789Z","type":"quit"}
{"nick":"kenperkins","date":"2013-10-15T09:01:55.160Z","type":"join"}
{"nick":"amartens","reason":"Ping timeout: 240 seconds","date":"2013-10-15T09:02:38.547Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #407 \u00037UNSTABLE\u000f windows-x64 (21/645) windows-ia32 (21/645) http://jenkins.nodejs.org/job/nodejs-master-windows/407/","date":"2013-10-15T09:04:27.023Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-10-15T09:11:33.544Z","type":"join"}
{"nick":"abraxas_","date":"2013-10-15T09:32:33.420Z","type":"join"}
{"nick":"wolfeida_","date":"2013-10-15T09:32:50.529Z","type":"join"}
{"nick":"abraxas","reason":"Read error: Connection reset by peer","date":"2013-10-15T09:38:34.218Z","type":"quit"}
{"nick":"wolfeidau","reason":"Read error: Connection reset by peer","date":"2013-10-15T09:38:34.218Z","type":"quit"}
{"nick":"qmx","reason":"Ping timeout: 272 seconds","date":"2013-10-15T09:38:34.438Z","type":"quit"}
{"nick":"qmx","date":"2013-10-15T09:39:43.665Z","type":"join"}
{"nick":"staropram","date":"2013-10-15T09:41:35.812Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-15T09:45:36.915Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Saúl Ibarra Corretgé\u000f \u00037master\u000f * \u00029d44d78\u0002 : unix, windows: add uv_fs_event_start/stop functions - http://git.io/Du8cZQ","date":"2013-10-15T10:09:05.071Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #285 \u00037UNSTABLE\u000f linux (1/195) windows (4/196) smartos (2/195) http://jenkins.nodejs.org/job/libuv-master/285/","date":"2013-10-15T10:13:01.127Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #225 \u00034FAILURE\u000f windows-x64 (3/196) windows-ia32 (3/196) http://jenkins.nodejs.org/job/libuv-master-gyp/225/","date":"2013-10-15T10:14:41.163Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #270 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/libuv-node-integration/270/","date":"2013-10-15T10:25:51.369Z","type":"message"}
{"nick":"wolfeida_","message":"rvagg: Nice work mate","date":"2013-10-15T10:27:38.314Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-10-15T10:27:41.171Z","type":"join"}
{"nick":"inolen","reason":"Ping timeout: 260 seconds","date":"2013-10-15T10:30:47.915Z","type":"quit"}
{"nick":"inolen","date":"2013-10-15T10:32:03.727Z","type":"join"}
{"nick":"rendar","message":"piscisaureus_: hi, yesterday i was reading about uv_read_t, i think its a cool thing, but i didn't get why you were speaking about of a ReadFile of 0 bytes","date":"2013-10-15T10:40:48.900Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: on windows things (read and write and accept) happen in the background","date":"2013-10-15T10:42:22.797Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: and for read and write you must pass a buffer","date":"2013-10-15T10:42:30.542Z","type":"message"}
{"nick":"rendar","message":"yeah","date":"2013-10-15T10:42:37.599Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: but if you have many open sockets that are all reading, those pre allocated buffers add up quickly","date":"2013-10-15T10:42:59.269Z","type":"message"}
{"nick":"piscisaureus_","message":"so we pass a 0 byte length buffer (mostly to WSARecv, sometimes to ReadFile)","date":"2013-10-15T10:43:12.917Z","type":"message"}
{"nick":"piscisaureus_","message":"and then when the 0 bytes read is complete, we get the actual data out with a nonblocking read","date":"2013-10-15T10:43:33.520Z","type":"message"}
{"nick":"rendar","message":"hmm","date":"2013-10-15T10:43:37.198Z","type":"message"}
{"nick":"piscisaureus_","message":"this works because 0-byte reads only complete when there's actually something in the kernel buffer","date":"2013-10-15T10:44:12.342Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: libuv also has a mode where reading is done the canonical way, but it's currently disabled","date":"2013-10-15T10:44:55.225Z","type":"message"}
{"nick":"rendar","message":"oh, i think i got that","date":"2013-10-15T10:45:02.856Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: because the performance gain was almost unmeasurable","date":"2013-10-15T10:45:19.645Z","type":"message"}
{"nick":"piscisaureus_","message":"and the memory benefits of 0-reads are obvious","date":"2013-10-15T10:45:32.744Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: btw, shouldn't iocp work also with a normal nonblocking (so with a OVERLAPPED) ReadFile() on on_open() and next ReadFile()s on on_read()? isn't this the canonical way?","date":"2013-10-15T10:45:53.525Z","type":"message"}
{"nick":"rendar","message":"so instead of passing that new OVERLAPPED in on_open() callback, you do a read of 0 bytes, so you will allocate a new OVERLAPED *only* when the client effectively send data, no otherwise..","date":"2013-10-15T10:46:56.514Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: so the basic idea is to start a ReadFile of 0 bytes with a static and unique OVERLAPPED structure that doesn't cost more memory, if i got it, and then starting allocating new OVERLAPPEDs only *IF* there is data to read?","date":"2013-10-15T10:49:00.541Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1535 \u00037UNSTABLE\u000f smartos-x64 (6/601) smartos-ia32 (6/601) linux-ia32 (1/601) http://jenkins.nodejs.org/job/nodejs-v0.10/1535/","date":"2013-10-15T10:51:50.759Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: that's effectively what happens, because the OVERLAPPED that we use to do 0-reads is embedded in the uv_tcp_t struct","date":"2013-10-15T10:53:04.987Z","type":"message"}
{"nick":"piscisaureus_","message":"so it doesn't get allocated","date":"2013-10-15T10:53:08.383Z","type":"message"}
{"nick":"rendar","message":"i see","date":"2013-10-15T10:53:20.999Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: we don't pass an overlapped to nonblocking WSARecv/ReadFile","date":"2013-10-15T10:53:41.541Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: so exist one unique OVERLAPPED for new connections, and its shared between all HANDLEs?","date":"2013-10-15T10:53:48.108Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: no","date":"2013-10-15T10:53:56.200Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: it's per tcp handle","date":"2013-10-15T10:54:00.927Z","type":"message"}
{"nick":"rendar","message":"oh, i see","date":"2013-10-15T10:54:05.411Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: sharing OVERLAPPEDs that way is not allowed","date":"2013-10-15T10:54:08.477Z","type":"message"}
{"nick":"rendar","message":"yeah because iirc the kernel must copy the OVERLAPPED structure in the non pageable pool of memory, etc..","date":"2013-10-15T10:54:34.110Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: there can only be one pending operation per OVERLAPPED","date":"2013-10-15T10:54:35.129Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: no","date":"2013-10-15T10:54:39.274Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: windows will update fields of the overlapped","date":"2013-10-15T10:54:48.532Z","type":"message"}
{"nick":"piscisaureus_","message":"while the operation happens","date":"2013-10-15T10:54:59.806Z","type":"message"}
{"nick":"rendar","message":"yeah, right","date":"2013-10-15T10:55:07.515Z","type":"message"}
{"nick":"staropram","reason":"\"Leaving\"","date":"2013-10-15T10:56:24.825Z","type":"part"}
{"nick":"rendar","message":"but if on a new connection we have to allocate a uv_tcp_t structure, which in fact contains a OVERLAPPED, is it worth? i mean, if we have to allocate memory for uv_tcp_t+OVERLAPPED, ins't the same of allocating uv_tcp_t (without an OVERLAPPED) and using the canonical way of ReadFile?","date":"2013-10-15T10:56:31.460Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: no","date":"2013-10-15T10:57:08.219Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: the OVERLAPPED is small, only a handful of bytes","date":"2013-10-15T10:57:16.548Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: but the buffer to receive the actual data is ideally ~64 kb","date":"2013-10-15T10:57:32.741Z","type":"message"}
{"nick":"rendar","message":"oh, ok! now i got the reason!","date":"2013-10-15T10:57:34.543Z","type":"message"}
{"nick":"abraxas_","reason":"Remote host closed the connection","date":"2013-10-15T11:01:23.504Z","type":"quit"}
{"nick":"abraxas","date":"2013-10-15T11:01:55.499Z","type":"join"}
{"nick":"rendar","message":"piscisaureus_: just for the sake of knowledge, i saw that AIX has iocp apis, and they're very similar to the windows' ones. really? does it uses the same apis of windows?","date":"2013-10-15T11:02:18.552Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-10-15T11:03:11.411Z","type":"quit"}
{"nick":"abraxas","reason":"Ping timeout: 240 seconds","date":"2013-10-15T11:06:08.228Z","type":"quit"}
{"nick":"wolfeida_","new_nick":"wolfeidau","date":"2013-10-15T11:23:58.784Z","type":"nick"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-10-15T11:42:05.061Z","type":"quit"}
{"nick":"bnoordhuis","message":"hah, trying to capture a heap snapshot when v8 is out of memory is not a great idea","date":"2013-10-15T12:10:22.269Z","type":"message"}
{"nick":"bnoordhuis","message":"25630 retained WriteReqs after ~2s of running... i will go out on a limb and say we can do better","date":"2013-10-15T12:12:23.302Z","type":"message"}
{"nick":"c4milo","date":"2013-10-15T12:17:36.324Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-10-15T12:31:50.539Z","type":"quit"}
{"nick":"bajtos","date":"2013-10-15T12:35:03.558Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-10-15T13:12:40.955Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Jason Gerfen\u000f \u00037master\u000f * \u00027f66e44\u0002 : crypto: add SPKAC support - http://git.io/CgY1dQ","date":"2013-10-15T14:07:22.058Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #614 \u00037UNSTABLE\u000f osx-x64 (2/646) smartos-ia32 (7/646) smartos-x64 (9/646) osx-ia32 (1/646) linux-ia32 (1/646) http://jenkins.nodejs.org/job/nodejs-master/614/","date":"2013-10-15T14:19:59.290Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #408 \u00037UNSTABLE\u000f windows-x64 (22/646) windows-ia32 (20/646) http://jenkins.nodejs.org/job/nodejs-master-windows/408/","date":"2013-10-15T14:28:00.422Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Textual IRC Client: http://www.textualapp.com/","date":"2013-10-15T14:28:23.189Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-10-15T14:30:47.949Z","type":"join"}
{"nick":"inolen","date":"2013-10-15T14:33:55.728Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-15T14:34:18.716Z","type":"nick"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-10-15T14:44:27.852Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-10-15T14:58:46.110Z","type":"join"}
{"nick":"amartens","date":"2013-10-15T15:00:57.582Z","type":"join"}
{"nick":"amartens","reason":"Ping timeout: 240 seconds","date":"2013-10-15T15:05:02.545Z","type":"quit"}
{"nick":"mikeal","date":"2013-10-15T15:06:18.297Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #615 \u00037UNSTABLE\u000f osx-x64 (1/646) smartos-ia32 (8/646) linux-x64 (1/646) smartos-x64 (8/646) osx-ia32 (1/646) http://jenkins.nodejs.org/job/nodejs-master/615/","date":"2013-10-15T15:20:07.641Z","type":"message"}
{"nick":"dap","date":"2013-10-15T15:25:48.990Z","type":"join"}
{"nick":"bnoordhuis","message":"indutny: ping","date":"2013-10-15T15:40:49.459Z","type":"message"}
{"nick":"indexzero","date":"2013-10-15T15:41:27.945Z","type":"join"}
{"nick":"dshaw_","date":"2013-10-15T15:44:47.763Z","type":"join"}
{"nick":"kenperkins","date":"2013-10-15T15:47:36.331Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-10-15T15:51:03.851Z","type":"quit"}
{"nick":"amartens","date":"2013-10-15T15:51:49.154Z","type":"join"}
{"nick":"isaacs","message":"good morning","date":"2013-10-15T15:52:33.099Z","type":"message"}
{"nick":"isaacs","message":"call in 0:10 or so?","date":"2013-10-15T15:52:38.468Z","type":"message"}
{"nick":"bnoordhuis","message":"guess so. anything worthwhile to discuss?","date":"2013-10-15T15:54:36.739Z","type":"message"}
{"nick":"isaacs","message":"yeah!","date":"2013-10-15T15:59:48.134Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine seems to be here in laptop, but not in his physical form.","date":"2013-10-15T16:00:02.466Z","type":"message"}
{"nick":"bradleymeck","date":"2013-10-15T16:00:12.339Z","type":"join"}
{"nick":"isaacs","message":"maybe someone stolehis laptop and put it at his desk to make it look like he's at work today","date":"2013-10-15T16:00:20.610Z","type":"message"}
{"nick":"bnoordhuis","message":"sounds implausible. bit out of character, right?","date":"2013-10-15T16:00:57.370Z","type":"message"}
{"nick":"bnoordhuis","message":"do we have a g+ link?","date":"2013-10-15T16:01:13.089Z","type":"message"}
{"nick":"tjfontaine","message":"I'm an ethereal character","date":"2013-10-15T16:03:41.921Z","type":"message"}
{"nick":"tjfontaine","message":"https://plus.google.com/hangouts/_/e8121e97c0b096631f4f703d0335f49cce948b4a","date":"2013-10-15T16:03:57.931Z","type":"message"}
{"nick":"bnoordhuis","message":"http://www.usdebtclock.org/ <- this is strangely mesmerizing","date":"2013-10-15T16:03:59.573Z","type":"message"}
{"nick":"isaacs","message":"https://plus.google.com/hangouts/_/e8121e97c0b096631f4f703d0335f49cce948b4a","date":"2013-10-15T16:04:14.051Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-15T16:05:36.121Z","type":"nick"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-10-15T16:10:37.343Z","type":"quit"}
{"nick":"indexzero_","date":"2013-10-15T16:15:57.994Z","type":"join"}
{"nick":"indexzero","reason":"Ping timeout: 272 seconds","date":"2013-10-15T16:16:07.964Z","type":"quit"}
{"nick":"indexzero_","new_nick":"indexzero","date":"2013-10-15T16:16:08.404Z","type":"nick"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-10-15T16:28:01.902Z","type":"quit"}
{"nick":"dshaw_","date":"2013-10-15T16:28:21.441Z","type":"join"}
{"nick":"st_luke","date":"2013-10-15T16:46:29.480Z","type":"join"}
{"nick":"wwicks","reason":"Quit: wwicks","date":"2013-10-15T16:52:41.519Z","type":"quit"}
{"nick":"brson","date":"2013-10-15T16:53:24.191Z","type":"join"}
{"nick":"octetcloud","date":"2013-10-15T17:01:26.650Z","type":"join"}
{"nick":"mikeal","date":"2013-10-15T17:02:39.089Z","type":"join"}
{"nick":"dominictarr","date":"2013-10-15T17:03:25.885Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-10-15T17:08:49.029Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-10-15T17:09:34.351Z","type":"join"}
{"nick":"dshaw_","date":"2013-10-15T17:10:32.137Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-10-15T17:17:44.944Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-10-15T17:21:10.399Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 265 seconds","date":"2013-10-15T17:23:40.919Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 246 seconds","date":"2013-10-15T17:28:07.929Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-10-15T17:30:24.760Z","type":"join"}
{"nick":"julianduque","date":"2013-10-15T17:32:50.589Z","type":"join"}
{"nick":"paulfryzel","date":"2013-10-15T17:32:57.759Z","type":"join"}
{"nick":"st_luke","reason":"Read error: Connection reset by peer","date":"2013-10-15T17:36:42.060Z","type":"quit"}
{"nick":"st_luke","date":"2013-10-15T17:36:57.728Z","type":"join"}
{"nick":"dominictarr","date":"2013-10-15T17:45:19.187Z","type":"join"}
{"nick":"st_luke","reason":"Read error: Connection reset by peer","date":"2013-10-15T17:47:14.015Z","type":"quit"}
{"nick":"st_luke","date":"2013-10-15T17:47:34.404Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 272 seconds","date":"2013-10-15T17:52:07.188Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #286 \u00037UNSTABLE\u000f windows (3/196) smartos (2/195) http://jenkins.nodejs.org/job/libuv-master/286/","date":"2013-10-15T17:53:09.732Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-10-15T17:53:41.636Z","type":"quit"}
{"nick":"st_luke","date":"2013-10-15T17:56:25.761Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #271 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/libuv-node-integration/271/","date":"2013-10-15T18:00:34.855Z","type":"message"}
{"nick":"dap","reason":"Ping timeout: 272 seconds","date":"2013-10-15T18:13:17.734Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-15T18:13:52.153Z","type":"nick"}
{"nick":"dap","date":"2013-10-15T18:28:11.950Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-10-15T18:29:02.313Z","type":"join"}
{"nick":"dap","reason":"Client Quit","date":"2013-10-15T18:31:37.543Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-10-15T18:32:46.852Z","type":"quit"}
{"nick":"st_luke","date":"2013-10-15T18:33:14.950Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-10-15T18:33:32.271Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-15T18:33:59.674Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-15T18:34:32.858Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-10-15T18:35:07.243Z","type":"quit"}
{"nick":"st_luke","reason":"Ping timeout: 272 seconds","date":"2013-10-15T18:37:59.732Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2013-10-15T18:39:15.738Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #409 \u00037UNSTABLE\u000f windows-x64 (22/646) windows-ia32 (22/646) http://jenkins.nodejs.org/job/nodejs-master-windows/409/","date":"2013-10-15T18:45:26.630Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-10-15T19:03:19.631Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-10-15T19:05:26.143Z","type":"quit"}
{"nick":"dshaw_","date":"2013-10-15T19:05:35.469Z","type":"join"}
{"nick":"st_luke","date":"2013-10-15T19:06:04.389Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-10-15T19:06:58.157Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-10-15T19:07:14.199Z","type":"join"}
{"nick":"dshaw_","reason":"Read error: Connection reset by peer","date":"2013-10-15T19:07:17.169Z","type":"quit"}
{"nick":"dshaw_","date":"2013-10-15T19:07:30.408Z","type":"join"}
{"nick":"st_luke","reason":"Read error: Connection reset by peer","date":"2013-10-15T19:11:08.567Z","type":"quit"}
{"nick":"st_luke","date":"2013-10-15T19:11:34.517Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033jas-\u000f \u00037master\u000f * \u0002f4528a3\u0002 : doc: crypto: document SPKAC additions - http://git.io/YKKfdA","date":"2013-10-15T19:12:24.181Z","type":"message"}
{"nick":"dshaw_","reason":"Ping timeout: 272 seconds","date":"2013-10-15T19:12:33.190Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Jason Gerfen\u000f \u00037master\u000f * \u0002aa94450\u0002 : doc: crypto: document SPKAC additions - http://git.io/ISVyjQ","date":"2013-10-15T19:13:00.205Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: just fyi, i did an upgrade to 3.21.17 to test  some stuff out. the ArrayBuffer class made a small change.","date":"2013-10-15T19:14:32.854Z","type":"message"}
{"nick":"trevnorris","message":"now it required Allocate() and AllocateUninitialized()","date":"2013-10-15T19:15:01.804Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, that's right. i have a PR somewhere that upgrades v8 with a fixup for htat","date":"2013-10-15T19:15:56.363Z","type":"message"}
{"nick":"bnoordhuis","message":"*that","date":"2013-10-15T19:15:57.825Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok :)","date":"2013-10-15T19:16:13.846Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #616 \u00037UNSTABLE\u000f osx-x64 (3/646) smartos-ia32 (7/646) smartos-x64 (8/646) osx-ia32 (1/646) http://jenkins.nodejs.org/job/nodejs-master/616/","date":"2013-10-15T19:24:20.463Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: ping","date":"2013-10-15T19:30:22.733Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #410 \u00037UNSTABLE\u000f windows-x64 (20/646) windows-ia32 (21/646) http://jenkins.nodejs.org/job/nodejs-master-windows/410/","date":"2013-10-15T19:31:13.594Z","type":"message"}
{"nick":"trevnorris","message":"groundwater_: ping too","date":"2013-10-15T19:31:39.493Z","type":"message"}
{"nick":"dshaw_","date":"2013-10-15T19:35:44.569Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #617 \u00037UNSTABLE\u000f osx-x64 (1/646) smartos-ia32 (7/646) smartos-x64 (8/646) osx-ia32 (2/646) http://jenkins.nodejs.org/job/nodejs-master/617/","date":"2013-10-15T19:36:09.770Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-15T19:39:25.651Z","type":"nick"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-10-15T19:40:40.013Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-15T19:41:11.488Z","type":"join"}
{"nick":"st_luke","date":"2013-10-15T19:42:20.547Z","type":"join"}
{"nick":"EhevuTov","date":"2013-10-15T19:46:50.416Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 256 seconds","date":"2013-10-15T19:47:12.273Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #411 \u00037UNSTABLE\u000f windows-x64 (22/646) windows-ia32 (21/646) http://jenkins.nodejs.org/job/nodejs-master-windows/411/","date":"2013-10-15T19:50:08.033Z","type":"message"}
{"nick":"dshaw_","reason":"Ping timeout: 265 seconds","date":"2013-10-15T19:52:33.115Z","type":"quit"}
{"nick":"trevnorris","message":"wtf. sometimes I hate modules. just did a --dev install just so I could run the benchmarks and now it's installing like half a gig of deps","date":"2013-10-15T20:02:01.257Z","type":"message"}
{"nick":"dap","date":"2013-10-15T20:06:24.951Z","type":"join"}
{"nick":"dominictarr","date":"2013-10-15T20:06:47.989Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 260 seconds","date":"2013-10-15T20:14:04.019Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-15T20:19:19.953Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-15T20:19:53.396Z","type":"join"}
{"nick":"groundwater_","message":"trevnorris: ACK","date":"2013-10-15T20:20:21.524Z","type":"message"}
{"nick":"indexzero_","date":"2013-10-15T20:22:31.876Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 245 seconds","date":"2013-10-15T20:24:10.186Z","type":"quit"}
{"nick":"indexzero","reason":"Ping timeout: 264 seconds","date":"2013-10-15T20:25:26.813Z","type":"quit"}
{"nick":"indexzero_","new_nick":"indexzero","date":"2013-10-15T20:25:27.031Z","type":"nick"}
{"nick":"trevnorris","message":"groundwater_: so, was wondering about possibly allowing the override of before/after/error in the return value of the asyncListener.","date":"2013-10-15T20:27:58.528Z","type":"message"}
{"nick":"trevnorris","message":"groundwater_: but now, can't find a good reason why that'd be useful.","date":"2013-10-15T20:28:31.726Z","type":"message"}
{"nick":"groundwater_","message":"trevnorris: i'm not sure i'm clear what you mean by override","date":"2013-10-15T20:29:06.957Z","type":"message"}
{"nick":"trevnorris","message":"so say you do createAsyncListener(function(value) { if (value === true) return { before: fn() { } }; }, {}, true);","date":"2013-10-15T20:29:54.739Z","type":"message"}
{"nick":"trevnorris","message":"if the return value from asyncListener was an object, and had a before/after/error fields that were functions, then it would overwrite whatever was initially passed to createAsync","date":"2013-10-15T20:30:31.582Z","type":"message"}
{"nick":"groundwater_","message":"is there a use-case that would require this?","date":"2013-10-15T20:31:01.541Z","type":"message"}
{"nick":"trevnorris","message":"no idea.","date":"2013-10-15T20:31:08.524Z","type":"message"}
{"nick":"trevnorris","message":"hence the ping. :)","date":"2013-10-15T20:31:19.988Z","type":"message"}
{"nick":"groundwater_","message":"heh, no worries","date":"2013-10-15T20:31:41.396Z","type":"message"}
{"nick":"groundwater_","message":"i would prefer keeping the scope of the return value narrow","date":"2013-10-15T20:32:24.530Z","type":"message"}
{"nick":"groundwater_","message":"i.e. just the storage object","date":"2013-10-15T20:32:32.929Z","type":"message"}
{"nick":"trevnorris","message":"coolio","date":"2013-10-15T20:32:51.807Z","type":"message"}
{"nick":"groundwater_","message":"actually, you could just pass in handlers that \"interpreted\" the storage object as a before/after/error object and forwarded calls to it","date":"2013-10-15T20:33:49.173Z","type":"message"}
{"nick":"Benvie","reason":"Ping timeout: 265 seconds","date":"2013-10-15T20:37:30.214Z","type":"quit"}
{"nick":"dshaw_","date":"2013-10-15T20:47:17.713Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 240 seconds","date":"2013-10-15T20:51:32.766Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: you know of  a good way to generate a performance tree that shows where times went? I used perf -e cycles:u -g, then perf report --sort=dso, and it tells me 60% of execution time is in node, but when I drill down it's so ambiguous.","date":"2013-10-15T20:53:24.208Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: what do you want to profile? functions?","date":"2013-10-15T20:55:38.129Z","type":"message"}
{"nick":"groundwater_","message":"trevnorris: i'm working on some tests for async-listener","date":"2013-10-15T20:55:52.168Z","type":"message"}
{"nick":"groundwater_","message":"https://github.com/jacobgroundwater/node/commit/10dc2da9da312e906d734acf65d4d0c7983e1eee","date":"2013-10-15T20:55:53.262Z","type":"message"}
{"nick":"groundwater_","message":"for whatever reason, i can't create a PR between my repo and yours on GH","date":"2013-10-15T20:56:17.438Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: yeah. the execution time for each function is small, so I'm looking for a way to see the bigger picture of how long those are getting called.","date":"2013-10-15T20:56:42.810Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: honestly, i'm really trying to figure out why perf report --sort=dso is telling me 60% of execution time is spent in node.","date":"2013-10-15T20:57:45.568Z","type":"message"}
{"nick":"trevnorris","message":"i build a custom data receiver that sits directly on top of pipe_wrap","date":"2013-10-15T20:57:45.772Z","type":"message"}
{"nick":"trevnorris","message":"and so I want to know where the time is going.","date":"2013-10-15T20:58:00.264Z","type":"message"}
{"nick":"trevnorris","message":"since time in js is almost next to nothing.","date":"2013-10-15T20:58:10.039Z","type":"message"}
{"nick":"c4milo","date":"2013-10-15T20:58:58.409Z","type":"join"}
{"nick":"trevnorris","message":"groundwater_: great thanks. i'll talke a look at these a little later. thanks for all the help on this.","date":"2013-10-15T20:59:05.688Z","type":"message"}
{"nick":"groundwater_","message":"trevnorris: no problem, it's such a subtle area i want to make sure the semantics are as explicit as possible","date":"2013-10-15T21:00:04.247Z","type":"message"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-15T21:00:56.012Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-15T21:01:30.408Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: perf report gives a per-function breakdown by default, right?","date":"2013-10-15T21:03:10.251Z","type":"message"}
{"nick":"bnoordhuis","message":"i wager you don't want --sort=dso","date":"2013-10-15T21:03:39.071Z","type":"message"}
{"nick":"trevnorris","message":"well, when I record with -g I can drill down to the by function","date":"2013-10-15T21:04:04.463Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I agree with my esteemed colleague groundwater_ on keeping the scope of behavior of the listener returns as narrowly focused as is practicable","date":"2013-10-15T21:04:11.545Z","type":"message"}
{"nick":"dshaw_","date":"2013-10-15T21:04:13.837Z","type":"join"}
{"nick":"trevnorris","message":"othiym23: agreed. was just brainstorming.","date":"2013-10-15T21:04:30.147Z","type":"message"}
{"nick":"othiym23","message":"NO DON'T","date":"2013-10-15T21:04:47.652Z","type":"message"}
{"nick":"LOUDBOT","message":"SO WHY CAN'T I CALL YOUR MOBILE PHONE?!","date":"2013-10-15T21:04:48.089Z","type":"message"}
{"nick":"othiym23","message":";)","date":"2013-10-15T21:04:50.531Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: so, both perf and --prof tell me ~40% is in syscalls and the rest is in node. all percentages in perf report are < 3%, but I think that's because it's not showing like, hey function A called function B so A's time is A + B's time. type breakdown.","date":"2013-10-15T21:07:01.998Z","type":"message"}
{"nick":"trevnorris","message":"make sense?","date":"2013-10-15T21:07:05.077Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, you want top-down vs bottom-up graphs","date":"2013-10-15T21:09:45.172Z","type":"message"}
{"nick":"trevnorris","message":"yeah :)","date":"2013-10-15T21:09:53.434Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, that's what -g is for","date":"2013-10-15T21:11:10.175Z","type":"message"}
{"nick":"bnoordhuis","message":"`perf report -g` that is","date":"2013-10-15T21:11:41.990Z","type":"message"}
{"nick":"bnoordhuis","message":"or -G to invert","date":"2013-10-15T21:12:16.119Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: pong","date":"2013-10-15T21:13:15.908Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: hey. never mind, we figured it out","date":"2013-10-15T21:13:53.280Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-10-15T21:15:32.661Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-10-15T21:15:33.818Z","type":"message"}
{"nick":"indutny","message":"I was on the plane","date":"2013-10-15T21:15:39.046Z","type":"message"}
{"nick":"indutny","message":"so","date":"2013-10-15T21:15:44.878Z","type":"message"}
{"nick":"indutny","message":"what's up?","date":"2013-10-15T21:15:46.683Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: nothing much. just discussing that pipelining thing","date":"2013-10-15T21:16:40.076Z","type":"message"}
{"nick":"indutny","message":"ok, and what's result of this discussion?","date":"2013-10-15T21:17:07.351Z","type":"message"}
{"nick":"indutny","message":"what will we do?","date":"2013-10-15T21:17:10.595Z","type":"message"}
{"nick":"indutny","message":"backpressure pausing?","date":"2013-10-15T21:17:16.581Z","type":"message"}
{"nick":"indutny","message":"backpressure-driven","date":"2013-10-15T21:17:21.268Z","type":"message"}
{"nick":"bnoordhuis","message":"the conclusion was that http is hard. then we went shopping","date":"2013-10-15T21:17:27.324Z","type":"message"}
{"nick":"bnoordhuis","message":"also, that there's actually two issues","date":"2013-10-15T21:17:38.892Z","type":"message"}
{"nick":"indutny","message":"ah, ok then","date":"2013-10-15T21:17:41.173Z","type":"message"}
{"nick":"indutny","message":"really?","date":"2013-10-15T21:17:45.894Z","type":"message"}
{"nick":"indutny","message":"may be PM me?","date":"2013-10-15T21:17:51.538Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, okay","date":"2013-10-15T21:17:58.268Z","type":"message"}
{"nick":"indutny","message":"not sure if its good idea to discuss it that openly","date":"2013-10-15T21:17:59.272Z","type":"message"}
{"nick":"bnoordhuis","message":"well, it's not exactly rocket science but okay","date":"2013-10-15T21:18:17.482Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: know if there's a trick to get the cumulative time for a match? mainly, I want to find out how much time is spent in v8::internal.","date":"2013-10-15T21:18:49.126Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: you can maybe do some quick perl/awk magic with `perf report --stdio`","date":"2013-10-15T21:20:29.104Z","type":"message"}
{"nick":"bnoordhuis","message":"else you'll have to whip up something with `perf script`","date":"2013-10-15T21:20:39.691Z","type":"message"}
{"nick":"trevnorris","message":"cool. i'll try that out. thanks","date":"2013-10-15T21:20:48.984Z","type":"message"}
{"nick":"rendar","date":"2013-10-15T21:21:52.463Z","type":"quit"}
{"nick":"trevnorris","message":"because it looks like +80% of node execution time is in v8::internal, and maybe that's something I just have to eat.","date":"2013-10-15T21:21:54.658Z","type":"message"}
{"nick":"indutny","message":"heya","date":"2013-10-15T21:23:37.201Z","type":"message"}
{"nick":"bnoordhuis","message":"hoya","date":"2013-10-15T21:23:40.395Z","type":"message"}
{"nick":"indutny","message":"who's going to work on GH-sec issue?","date":"2013-10-15T21:23:48.060Z","type":"message"}
{"nick":"indutny","message":"isaacs: tjfontaine: let me know if I can help you in any way","date":"2013-10-15T21:23:58.890Z","type":"message"}
{"nick":"isaacs","message":"indutny: got a fix","date":"2013-10-15T21:24:13.326Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-10-15T21:24:17.470Z","type":"message"}
{"nick":"indutny","message":"for both cases?","date":"2013-10-15T21:24:20.795Z","type":"message"}
{"nick":"isaacs","message":"passes the tests, i'm just reading the code now to make sure i like it :)","date":"2013-10-15T21:24:23.465Z","type":"message"}
{"nick":"isaacs","message":"especially, trying to figure out why the readStop and readStart are required, because they shouldn't be","date":"2013-10-15T21:24:56.585Z","type":"message"}
{"nick":"bnoordhuis","message":"because else incoming data keeps getting handed off to js land, right?","date":"2013-10-15T21:25:56.802Z","type":"message"}
{"nick":"bnoordhuis","message":"you want the tcp stack to start sending out 'back off yo' packets","date":"2013-10-15T21:26:25.611Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-10-15T21:26:49.128Z","type":"message"}
{"nick":"indutny","message":"isaacs: well, because input and output streams are not backpressure-affecting each other","date":"2013-10-15T21:27:14.347Z","type":"message"}
{"nick":"indutny","message":"isaacs: basically, there're almost independent","date":"2013-10-15T21:27:28.905Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-10-15T21:27:34.853Z","type":"message"}
{"nick":"trevnorris","message":"whoot. got max throughput on pipe_wrap up to 42Gb/s.","date":"2013-10-15T21:29:22.524Z","type":"message"}
{"nick":"julianduque","reason":"Ping timeout: 240 seconds","date":"2013-10-15T21:31:08.389Z","type":"quit"}
{"nick":"wwicks","date":"2013-10-15T21:32:16.186Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: dude, I love libuv. in all my perf reports I have to scroll like two pages down before I see the first uv_* show up.","date":"2013-10-15T21:32:28.227Z","type":"message"}
{"nick":"trevnorris","message":"and it's always registered as like < 0.1%","date":"2013-10-15T21:32:47.681Z","type":"message"}
{"nick":"bnoordhuis","message":"we try, we try :)","date":"2013-10-15T21:35:16.885Z","type":"message"}
{"nick":"bnoordhuis","message":"admittedly it's the kernel that does most of the heavy lifting","date":"2013-10-15T21:35:34.729Z","type":"message"}
{"nick":"bnoordhuis","message":"libuv just tickles it in the right way, so to speak","date":"2013-10-15T21:35:45.577Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-10-15T21:36:46.844Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-15T21:37:31.328Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-15T21:38:04.336Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-10-15T21:39:37.266Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2013-10-15T21:42:55.732Z","type":"quit"}
{"nick":"st_luke","date":"2013-10-15T21:43:41.943Z","type":"join"}
{"nick":"trevnorris","message":"so think we agreed to upgrade to 3.21. was there a timeline on that?","date":"2013-10-15T21:48:22.530Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: i believe as soon as tjfontaine gets v0.11.8 out the door :)","date":"2013-10-15T21:50:48.340Z","type":"message"}
{"nick":"trevnorris","message":"awesome. tjfontaine hurry!!! ;)","date":"2013-10-15T21:50:58.864Z","type":"message"}
{"nick":"trevnorris","message":"i want v0.12 out so freakin bad.","date":"2013-10-15T21:51:05.960Z","type":"message"}
{"nick":"st_luke","reason":"Read error: Connection reset by peer","date":"2013-10-15T21:57:51.192Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: i'm not sure how v8's doing it, but gc times are ~3% total execution time with my direct bindings on top of pipe_wrap.","date":"2013-10-15T21:58:08.738Z","type":"message"}
{"nick":"trevnorris","message":"but do the same w/ the streams api and it ramps up to +20%","date":"2013-10-15T21:58:08.956Z","type":"message"}
{"nick":"st_luke","date":"2013-10-15T21:58:11.406Z","type":"join"}
{"nick":"trevnorris","message":"must be because the incoming buffer's life is only withing the called handlescope, not passed to another function that's called on nextTick or whatever.","date":"2013-10-15T21:58:43.296Z","type":"message"}
{"nick":"st_luke","reason":"Read error: Connection reset by peer","date":"2013-10-15T21:59:41.784Z","type":"quit"}
{"nick":"trevnorris","message":"but i'm pretty happy about this. libuv's pipe_pump1_client reaches 57Gb/s, and the pipe_wrap binding reaches 42Gb/s","date":"2013-10-15T22:00:34.213Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-10-15T22:01:45.192Z","type":"quit"}
{"nick":"Benvie","date":"2013-10-15T22:02:56.169Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: that's because streams create a lot of garbage","date":"2013-10-15T22:04:07.397Z","type":"message"}
{"nick":"bnoordhuis","message":"also because they consist of many objects with overlapping life cycles","date":"2013-10-15T22:04:28.421Z","type":"message"}
{"nick":"bnoordhuis","message":"that's always something of a though nut for garbage collectors","date":"2013-10-15T22:04:40.846Z","type":"message"}
{"nick":"bnoordhuis","message":"er, tough","date":"2013-10-15T22:04:47.682Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: just fyi, if I change WRITE_BUFFER_SIZE from 8192 to (1024 * 32) pipe_pump goes from 57Gb/s to 62Gb/s","date":"2013-10-15T22:05:06.967Z","type":"message"}
{"nick":"trevnorris","message":"an, interesting.","date":"2013-10-15T22:05:17.885Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: oh, yeah, that doesn't surprise me","date":"2013-10-15T22:05:43.822Z","type":"message"}
{"nick":"trevnorris","message":"so it seems my buffer-dispose module solves a problem that could be avoided.","date":"2013-10-15T22:05:54.007Z","type":"message"}
{"nick":"trevnorris","message":"cool.","date":"2013-10-15T22:06:04.487Z","type":"message"}
{"nick":"trevnorris","message":"well, i'm interested in all your feedback for what I have in mind for v0.13.","date":"2013-10-15T22:06:48.491Z","type":"message"}
{"nick":"trevnorris","message":"can I give you an example, or you off to bed. (man it's killing me today)","date":"2013-10-15T22:07:04.349Z","type":"message"}
{"nick":"bnoordhuis","message":"shoot","date":"2013-10-15T22:07:22.287Z","type":"message"}
{"nick":"bnoordhuis","message":"i still have this bowl of cruesli to finish so","date":"2013-10-15T22:07:38.427Z","type":"message"}
{"nick":"trevnorris","message":"heh, ok. quickly then...","date":"2013-10-15T22:07:48.073Z","type":"message"}
{"nick":"trevnorris","message":"all classes that make calls to MakeCallback will have a \"default\" callback as a Persistent<Function> (e.g. Persistent<Function> oncomplete_) that can be set with like require('tcp_wrap').TCPWrap.oncomplete = fn (that's more pseudo code)","date":"2013-10-15T22:09:29.885Z","type":"message"}
{"nick":"trevnorris","message":"because in the majority of cases we don't change the callback while the request is in transit","date":"2013-10-15T22:09:47.355Z","type":"message"}
{"nick":"trevnorris","message":"then when it comes back we don't have to access an object property for the callback.","date":"2013-10-15T22:10:02.495Z","type":"message"}
{"nick":"trevnorris","message":"and, I mean technically if we didn't need the request object to exist in js then we could bypass  the entire step of creating the Persistent<Object> all together. (though haven't exactly figured that one out yet)","date":"2013-10-15T22:11:00.346Z","type":"message"}
{"nick":"bnoordhuis","message":"doesn't really work if you have many overlapping requests, right?","date":"2013-10-15T22:11:02.965Z","type":"message"}
{"nick":"bnoordhuis","message":"on that note, i've been thinking about how to get rid of persistents and all the mallocs for write reqs","date":"2013-10-15T22:12:27.658Z","type":"message"}
{"nick":"trevnorris","message":"yeah, because you still instantiate a new ReqWrap, so the data coming in will be unique. and since we have the \"context\" object stored as a Persistent<Object> anyways it's passed as the \"this\"","date":"2013-10-15T22:12:39.785Z","type":"message"}
{"nick":"trevnorris","message":"oh, do tell.","date":"2013-10-15T22:12:42.911Z","type":"message"}
{"nick":"bnoordhuis","message":"my thinking was that we mmap largish chunks of memory at a fixed address, i.e. mmap(MAP_FIXED)","date":"2013-10-15T22:13:12.021Z","type":"message"}
{"nick":"bnoordhuis","message":"the kernel assigns the initial address but afterwards we expand it upwards","date":"2013-10-15T22:13:27.645Z","type":"message"}
{"nick":"bnoordhuis","message":"the pointer to that memory gets assigned to some global object with SetIndexedPropertiesToExternalArrayData()","date":"2013-10-15T22:13:58.572Z","type":"message"}
{"nick":"bnoordhuis","message":"then instead of req objects, we simply operate on integers that represent offsets in that mapped memory","date":"2013-10-15T22:14:27.490Z","type":"message"}
{"nick":"trevnorris","message":"hah, loving it.","date":"2013-10-15T22:14:49.437Z","type":"message"}
{"nick":"bnoordhuis","message":"i.e. our_internal_heap[write_req_1] points to the first byte of the struct that c++ land needs","date":"2013-10-15T22:15:01.126Z","type":"message"}
{"nick":"bnoordhuis","message":"downside is of course that you can only go up to 1 GB","date":"2013-10-15T22:15:15.637Z","type":"message"}
{"nick":"bnoordhuis","message":"and that the address space on 32 bits archs is kind of cramped, you may get malloc/mmap failures quicker that way","date":"2013-10-15T22:15:35.440Z","type":"message"}
{"nick":"bnoordhuis","message":"still, interesting experiment, right?","date":"2013-10-15T22:15:58.040Z","type":"message"}
{"nick":"trevnorris","message":"heck yeah.","date":"2013-10-15T22:16:08.050Z","type":"message"}
{"nick":"trevnorris","message":"we should be able to reuse a ReqWrap instance anyways, right?","date":"2013-10-15T22:16:20.860Z","type":"message"}
{"nick":"bnoordhuis","message":"in most cases, yes","date":"2013-10-15T22:16:43.766Z","type":"message"}
{"nick":"trevnorris","message":"the lifespan of that is deterministic, so it could be placed in a linked list or what not, and reused.","date":"2013-10-15T22:16:46.684Z","type":"message"}
{"nick":"bnoordhuis","message":"right, but then you still need to malloc + maintain a persistent + create a wrapper object","date":"2013-10-15T22:17:46.872Z","type":"message"}
{"nick":"bnoordhuis","message":"er, not malloc","date":"2013-10-15T22:18:02.900Z","type":"message"}
{"nick":"trevnorris","message":"yeah, I got ya","date":"2013-10-15T22:18:11.530Z","type":"message"}
{"nick":"bnoordhuis","message":"the wrapper object itself is not something i'm really worried about","date":"2013-10-15T22:19:02.402Z","type":"message"}
{"nick":"bnoordhuis","message":"but persistents are kind of troublesome, especially weak ones","date":"2013-10-15T22:19:14.453Z","type":"message"}
{"nick":"trevnorris","message":"seriously.","date":"2013-10-15T22:19:57.312Z","type":"message"}
{"nick":"hz","date":"2013-10-15T22:20:44.621Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: well, wait. if you assign the memory address to the object via SetIndexed..., then any method calls go into c++ and just get that memory address via GetIndexed..., right?","date":"2013-10-15T22:21:09.488Z","type":"message"}
{"nick":"trevnorris","message":"so, i'm not sure why that would be limited to 1GB.","date":"2013-10-15T22:21:24.583Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: what method calls?","date":"2013-10-15T22:22:14.218Z","type":"message"}
{"nick":"trevnorris","message":"basically, static_cast<ReqWrap*>(args.This()->GetIndexed...())->WriteBuffer();","date":"2013-10-15T22:22:27.864Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, right. yeah, it's not an issue on the c++ side of things","date":"2013-10-15T22:23:16.555Z","type":"message"}
{"nick":"bnoordhuis","message":"but it is when you're exposing the memory to js land","date":"2013-10-15T22:23:34.659Z","type":"message"}
{"nick":"bnoordhuis","message":"which you presumably want so you can expose e.g. integer properties directly","date":"2013-10-15T22:23:47.059Z","type":"message"}
{"nick":"trevnorris","message":"how do you mean?","date":"2013-10-15T22:24:00.446Z","type":"message"}
{"nick":"bnoordhuis","message":"i.e. var write_req_size = heap32[offset >> 2]","date":"2013-10-15T22:24:19.855Z","type":"message"}
{"nick":"bnoordhuis","message":"assuming that the first field of the c++ struct is the write_req_size","date":"2013-10-15T22:24:38.672Z","type":"message"}
{"nick":"bnoordhuis","message":"just an example, of course","date":"2013-10-15T22:24:46.116Z","type":"message"}
{"nick":"trevnorris","message":"whoa... didn't get that part of it. so you're talking skipping the initial call into c++ all together?","date":"2013-10-15T22:25:13.088Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah","date":"2013-10-15T22:25:28.605Z","type":"message"}
{"nick":"trevnorris","message":"I was thinking you'd still do the TCPWWrap() call to c++ then assign external memory to the object.","date":"2013-10-15T22:25:32.774Z","type":"message"}
{"nick":"bnoordhuis","message":"we'd be basically managing our own heap","date":"2013-10-15T22:25:35.591Z","type":"message"}
{"nick":"bnoordhuis","message":"but js and c++ land would have uniform views of the memory","date":"2013-10-15T22:26:10.211Z","type":"message"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2013-10-15T22:26:15.704Z","type":"quit"}
{"nick":"trevnorris","message":"but then, would you have a pool of objects that already have external memory assigned, that would be reused?","date":"2013-10-15T22:26:21.258Z","type":"message"}
{"nick":"bnoordhuis","message":"and js land only needs to store / deal with integers, not wrapper objects","date":"2013-10-15T22:26:28.983Z","type":"message"}
{"nick":"bnoordhuis","message":"so there's your answer :)","date":"2013-10-15T22:26:43.718Z","type":"message"}
{"nick":"trevnorris","message":"then, what, a WriteBuffer would pass a number (i.e. offset) instead of passing an object?","date":"2013-10-15T22:27:23.834Z","type":"message"}
{"nick":"trevnorris","message":"*would recieve","date":"2013-10-15T22:27:33.651Z","type":"message"}
{"nick":"trevnorris","message":"that's the offset on the heap?","date":"2013-10-15T22:27:38.781Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2013-10-15T22:27:58.751Z","type":"message"}
{"nick":"trevnorris","message":"...","date":"2013-10-15T22:28:02.062Z","type":"message"}
{"nick":"trevnorris","message":"dude, this is an entirely different level of performance enhancements.","date":"2013-10-15T22:28:25.202Z","type":"message"}
{"nick":"bnoordhuis","message":"and because it's memory-mapped, c++ land only needs to wrap* w = (wrap*) heap_ptr + offset","date":"2013-10-15T22:28:26.363Z","type":"message"}
{"nick":"bnoordhuis","message":"right :)","date":"2013-10-15T22:28:31.549Z","type":"message"}
{"nick":"bnoordhuis","message":"'tis a bit of work though","date":"2013-10-15T22:28:49.863Z","type":"message"}
{"nick":"trevnorris","message":"heh, yeah. a little","date":"2013-10-15T22:28:57.865Z","type":"message"}
{"nick":"trevnorris","message":"so, I haven't benchmarked how fast a Uint32Value() is, but I have been experimenting with writing to external memory just before the c++ method call, then reading out that memory from the c++ side.","date":"2013-10-15T22:29:42.689Z","type":"message"}
{"nick":"bnoordhuis","message":"and?","date":"2013-10-15T22:29:58.223Z","type":"message"}
{"nick":"trevnorris","message":"well, pretty freakin fast.","date":"2013-10-15T22:30:06.508Z","type":"message"}
{"nick":"trevnorris","message":"writing to external memory is sub nanosecond, and so is reading it out.","date":"2013-10-15T22:30:22.223Z","type":"message"}
{"nick":"trevnorris","message":"an if you're not doing anything with v8 whatever's in c++ the methods seem to optimize much better.","date":"2013-10-15T22:30:54.869Z","type":"message"}
{"nick":"trevnorris","message":"probably because you skip a bunch of v8::internal calls.","date":"2013-10-15T22:31:07.138Z","type":"message"}
{"nick":"wwicks","reason":"Ping timeout: 245 seconds","date":"2013-10-15T22:31:40.125Z","type":"quit"}
{"nick":"trevnorris","message":"so, it'd be really ugly, but it's be like, heapPointer[kLocation] = heap32[offset >> 2]; then the WriteBuffer call.","date":"2013-10-15T22:32:47.495Z","type":"message"}
{"nick":"trevnorris","message":"in which it'd be like void* ptr = env()->heap_pointer();","date":"2013-10-15T22:33:05.728Z","type":"message"}
{"nick":"wwicks","date":"2013-10-15T22:33:07.846Z","type":"join"}
{"nick":"trevnorris","message":"since the call is synchronous, and currently single threaded, that should be safe, right?","date":"2013-10-15T22:33:23.466Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2013-10-15T22:33:30.666Z","type":"message"}
{"nick":"trevnorris","message":"awesome. :)","date":"2013-10-15T22:33:52.292Z","type":"message"}
{"nick":"trevnorris","message":"well, have some things to think about and test out.","date":"2013-10-15T22:35:11.926Z","type":"message"}
{"nick":"trevnorris","message":" but first, need to force myself to finish docs for #6011","date":"2013-10-15T22:35:34.327Z","type":"message"}
{"nick":"bnoordhuis","message":"good :) then i'll hit the sack. maybe some lightweight reading first","date":"2013-10-15T22:35:53.182Z","type":"message"}
{"nick":"trevnorris","message":"fun fun, night :)","date":"2013-10-15T22:36:07.064Z","type":"message"}
{"nick":"bnoordhuis","message":"the original treatise on hindler-milney type inference is quite good, heartily recommended!","date":"2013-10-15T22:36:42.538Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, sleep tight :)","date":"2013-10-15T22:36:48.433Z","type":"message"}
{"nick":"trevnorris","message":"hah, yeah. just what I like to read before bed.","date":"2013-10-15T22:37:34.487Z","type":"message"}
{"nick":"Kakera","reason":"Ping timeout: 245 seconds","date":"2013-10-15T22:38:20.154Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-10-15T22:41:15.152Z","type":"quit"}
{"nick":"wwicks","reason":"Quit: wwicks","date":"2013-10-15T22:42:40.859Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u0002a555992\u0002 : Revert \"doc: crypto: document SPKAC additions\" (+1 more commits) - http://git.io/sKuLXw","date":"2013-10-15T22:59:23.938Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: why the revert?","date":"2013-10-15T23:00:03.466Z","type":"message"}
{"nick":"tjfontaine","message":"he's commenting on the issue, but the test only passes on linux","date":"2013-10-15T23:00:20.267Z","type":"message"}
{"nick":"trevnorris","message":"ah.","date":"2013-10-15T23:00:41.233Z","type":"message"}
{"nick":"trevnorris","message":"wonder why that is.","date":"2013-10-15T23:00:46.057Z","type":"message"}
{"nick":"tjfontaine","message":"feel free to investigate :P","date":"2013-10-15T23:01:04.675Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-10-15T23:01:12.766Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-10-15T23:03:47.512Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-10-15T23:05:09.695Z","type":"join"}
{"nick":"julianduque","date":"2013-10-15T23:05:57.095Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: looks like it's something silly. the keys are exactly the same, but with the assertion error message cut I can't see the rest.","date":"2013-10-15T23:07:01.820Z","type":"message"}
{"nick":"Benvie","reason":"Ping timeout: 245 seconds","date":"2013-10-15T23:08:20.368Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: if I push a branch to joyent/node will it automatically run all tests?","date":"2013-10-15T23:10:35.095Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #618 \u00037UNSTABLE\u000f osx-x64 (1/645) smartos-ia32 (7/645) smartos-x64 (7/645) http://jenkins.nodejs.org/job/nodejs-master/618/","date":"2013-10-15T23:11:51.244Z","type":"message"}
{"nick":"julianduque","reason":"Read error: Connection reset by peer","date":"2013-10-15T23:12:59.875Z","type":"quit"}
{"nick":"wwicks","date":"2013-10-15T23:15:32.189Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033trevnorris\u000f created branch pr6330-fix - http://git.io/50USEg","date":"2013-10-15T23:18:43.340Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #412 \u00037UNSTABLE\u000f windows-x64 (21/645) windows-ia32 (21/645) http://jenkins.nodejs.org/job/nodejs-master-windows/412/","date":"2013-10-15T23:19:12.345Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-15T23:22:28.003Z","type":"nick"}
{"nick":"c4milo","date":"2013-10-15T23:31:06.135Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-15T23:34:50.243Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-15T23:35:09.604Z","type":"join"}
{"nick":"MI6","message":"\u0002node-review\u0002: #91 \u00037UNSTABLE\u000f osx-x64 (3/646) smartos-x64 (9/646) centos-x64 (2/646) windows-x64 (20/646) linux-x64 (1/646) osx-ia32 (1/646) windows-ia32 (23/646) centos-ia32 (2/646) smartos-ia32 (8/646) http://jenkins.nodejs.org/job/node-review/91/","date":"2013-10-15T23:39:27.923Z","type":"message"}
{"nick":"wwicks_","date":"2013-10-15T23:53:46.987Z","type":"join"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-10-15T23:53:57.830Z","type":"quit"}
{"nick":"wwicks","reason":"Ping timeout: 272 seconds","date":"2013-10-15T23:55:01.265Z","type":"quit"}
{"nick":"wwicks_","new_nick":"wwicks","date":"2013-10-15T23:55:01.786Z","type":"nick"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #226 \u00034FAILURE\u000f windows-x64 (3/196) windows-ia32 (3/196) http://jenkins.nodejs.org/job/libuv-master-gyp/226/","date":"2013-10-15T23:58:48.285Z","type":"message"}
