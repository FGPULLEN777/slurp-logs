{"nick":"AtumT","reason":"Remote host closed the connection","date":"2017-11-28T02:06:33.949Z","type":"quit"}
{"nick":"rendar","date":"2017-11-28T06:27:07.368Z","type":"join"}
{"nick":"saghul","date":"2017-11-28T08:11:42.522Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-11-28T11:25:10.663Z","type":"quit"}
{"nick":"mylesborins","date":"2017-11-28T11:25:40.469Z","type":"join"}
{"nick":"KennethWilke","reason":"Ping timeout: 248 seconds","date":"2017-11-28T14:31:28.089Z","type":"quit"}
{"nick":"KennethWilke","date":"2017-11-28T16:00:12.802Z","type":"join"}
{"nick":"saghul","reason":"Ping timeout: 248 seconds","date":"2017-11-28T16:10:09.435Z","type":"quit"}
{"nick":"KennethWilke","reason":"Ping timeout: 276 seconds","date":"2017-11-28T16:36:35.175Z","type":"quit"}
{"nick":"KennethWilke","date":"2017-11-28T17:46:30.807Z","type":"join"}
{"nick":"AtumT","date":"2017-11-28T18:56:42.554Z","type":"join"}
{"nick":"AtumT","reason":"Read error: Connection reset by peer","date":"2017-11-28T18:58:03.936Z","type":"quit"}
{"nick":"AtumT","date":"2017-11-28T18:58:10.508Z","type":"join"}
{"nick":"ugexe","message":"refack: have any new thoughts on possible solutions re: uv_process_windows_hide (stdio: 'inherit', detached: false, windowsHide: true)?  i might be able to try some things if i have a little more direction than the vague abstract i've brought up (i.e. create a uv_foobar for new proc, a uv_barbaz for orignal, pass data between them using a SomeWinMethod)","date":"2017-11-28T19:07:30.993Z","type":"message"}
{"nick":"AtumT_","date":"2017-11-28T19:11:52.956Z","type":"join"}
{"nick":"AtumT","reason":"Ping timeout: 240 seconds","date":"2017-11-28T19:12:05.571Z","type":"quit"}
{"nick":"refack","message":"ugexe: I think we might need to explicitly create pipes to connect to the new process, or if it's easy explicitly pass the parent stdio pipes to the child","date":"2017-11-28T19:24:40.568Z","type":"message"}
{"nick":"refack","message":"so essential `stdio: 'inherit'` is not a valid option","date":"2017-11-28T19:25:30.205Z","type":"message"}
{"nick":"ugexe","message":"an easy solution may be to add a flag to toggle off CREATE_NO_WINDOW flag to allow moarvm to keep the old behavior. this is probably ok since moarvm dependency on libuv version will need to be pinned to make use uv_fs_copyfile and uv_ppid (so will have the needed flag added)","date":"2017-11-28T19:34:09.073Z","type":"message"}
{"nick":"vtjnash","date":"2017-11-28T19:35:58.182Z","type":"join"}
{"nick":"ugexe","message":"uv_process_consoles_hide or some such","date":"2017-11-28T19:41:45.313Z","type":"message"}
{"nick":"refack","message":"sounds like an options, try to think about a name that implies it's windows only, and mapped directly to CREATE_NO_WINDOW ","date":"2017-11-28T19:53:44.591Z","type":"message"}
{"nick":"ugexe","message":"uv_process_windows_create + uv_process_windows_hide ","date":"2017-11-28T19:54:11.815Z","type":"message"}
{"nick":"ugexe","message":"_windows_create is the cleanest I can come up with although its a negation of create_no_window","date":"2017-11-28T19:57:15.901Z","type":"message"}
{"nick":"vtjnash","reason":"Remote host closed the connection","date":"2017-11-28T20:09:40.155Z","type":"quit"}
{"nick":"vtjnash","date":"2017-11-28T20:10:08.861Z","type":"join"}
{"nick":"ugexe","message":"unfortunately i cant think of anything that does both a) maps to create_no_window b) makes sense without knowing the win process api. although im not sure the win api makes sense in the first place","date":"2017-11-28T20:11:27.544Z","type":"message"}
{"nick":"vtjnash","reason":"Ping timeout: 252 seconds","date":"2017-11-28T20:14:37.860Z","type":"quit"}
{"nick":"strike_","reason":"Quit: Konversation terminated!","date":"2017-11-28T20:26:46.702Z","type":"quit"}
{"nick":"strike__","date":"2017-11-28T20:45:29.076Z","type":"join"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2017-11-28T21:13:58.441Z","type":"quit"}
