{"nick":"`3rdEden","reason":"Quit: ZZzzzz","date":"2012-01-03T00:01:45.593Z","type":"quit"}
{"nick":"sh1mmer","reason":"Ping timeout: 255 seconds","date":"2012-01-03T00:21:13.847Z","type":"quit"}
{"nick":"sh1mmer","date":"2012-01-03T00:24:57.210Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-01-03T00:25:35.021Z","type":"quit"}
{"nick":"mikeal","date":"2012-01-03T00:36:58.788Z","type":"join"}
{"nick":"brson","date":"2012-01-03T00:52:04.765Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2012-01-03T01:21:36.739Z","type":"quit"}
{"nick":"sh1mmer","reason":"Quit: sh1mmer","date":"2012-01-03T01:41:58.160Z","type":"quit"}
{"nick":"igorzi","reason":"Ping timeout: 258 seconds","date":"2012-01-03T02:46:58.062Z","type":"quit"}
{"nick":"isaacs","reason":"Quit: isaacs","date":"2012-01-03T02:48:55.652Z","type":"quit"}
{"nick":"sh1mmer","date":"2012-01-03T02:49:34.244Z","type":"join"}
{"nick":"sh1mmer","reason":"Client Quit","date":"2012-01-03T02:52:32.065Z","type":"quit"}
{"nick":"pquerna","reason":"Changing host","date":"2012-01-03T03:52:48.153Z","type":"quit"}
{"nick":"pquerna","date":"2012-01-03T03:52:48.374Z","type":"join"}
{"nick":"sh1mmer","date":"2012-01-03T04:19:43.973Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Linkinus - http://linkinus.com","date":"2012-01-03T05:00:25.645Z","type":"quit"}
{"nick":"sh1mmer","reason":"Quit: sh1mmer","date":"2012-01-03T05:18:01.028Z","type":"quit"}
{"nick":"mraleph","date":"2012-01-03T06:04:05.905Z","type":"join"}
{"nick":"mraleph","reason":"Quit: Leaving.","date":"2012-01-03T06:28:56.549Z","type":"quit"}
{"nick":"paddybyers","date":"2012-01-03T07:05:42.512Z","type":"join"}
{"nick":"indutny","message":"benvie: yay!","date":"2012-01-03T07:33:18.686Z","type":"message"}
{"nick":"indutny","message":"oops","date":"2012-01-03T07:33:21.125Z","type":"message"}
{"nick":"indutny","message":"sorry","date":"2012-01-03T07:33:22.080Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ^","date":"2012-01-03T07:33:30.096Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-01-03T08:06:14.834Z","type":"quit"}
{"nick":"mikeal","date":"2012-01-03T08:59:53.747Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2012-01-03T09:02:48.131Z","type":"quit"}
{"nick":"benvie","message":"yay me too =(","date":"2012-01-03T09:49:08.316Z","type":"message"}
{"nick":"indutny","message":"benvie: yay","date":"2012-01-03T10:07:31.955Z","type":"message"}
{"nick":"txdv","reason":"Read error: Connection reset by peer","date":"2012-01-03T11:53:02.576Z","type":"quit"}
{"nick":"txdv","date":"2012-01-03T11:53:40.846Z","type":"join"}
{"nick":"bnoordhuis","date":"2012-01-03T12:32:08.974Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 244 seconds","date":"2012-01-03T12:43:26.796Z","type":"quit"}
{"nick":"indutny","message":"bnoordhuis: heya!","date":"2012-01-03T12:48:54.179Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: https://github.com/indutny/node/commit/3169fb5c8090a6169abc8623cab53b4dea692993","date":"2012-01-03T12:49:13.345Z","type":"message"}
{"nick":"AvianFlu","date":"2012-01-03T12:57:17.181Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: I think uv_async_send(handle, msg) can be easily implemented with ngx_queue and uv_mutex_t","date":"2012-01-03T12:57:32.111Z","type":"message"}
{"nick":"indutny","message":"ryah: yt?","date":"2012-01-03T13:21:15.346Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: the common case for uv_async_send() is to wake up an event loop, nothing more","date":"2012-01-03T13:33:55.717Z","type":"message"}
{"nick":"bnoordhuis","message":"if you need to pass messages back and forth, you can easily build something on top of uv_async_send()","date":"2012-01-03T13:34:30.084Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ok ok, I already built one :D","date":"2012-01-03T13:34:40.424Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: and it still segfaults randomly, have you seen my gist?","date":"2012-01-03T13:34:53.645Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: looking at it now","date":"2012-01-03T13:35:08.547Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: https://gist.github.com/ed5b063b93745de089a6","date":"2012-01-03T13:35:12.702Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: k","date":"2012-01-03T13:35:14.779Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: test it with a debug build","date":"2012-01-03T13:35:35.157Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: fd > 0 assertion","date":"2012-01-03T13:35:54.645Z","type":"message"}
{"nick":"indutny","message":"at StreamWrap::ReadStart","date":"2012-01-03T13:36:16.887Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: oh, I've an idea","date":"2012-01-03T13:36:45.484Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: that's probably the real cause","date":"2012-01-03T13:36:57.958Z","type":"message"}
{"nick":"bnoordhuis","message":"release builds have assertions turned off","date":"2012-01-03T13:37:08.150Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: probably I'm misusing child_process.fork","date":"2012-01-03T13:37:27.771Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I extended it, but it doesn't work fully","date":"2012-01-03T13:37:36.714Z","type":"message"}
{"nick":"indutny","message":"so far","date":"2012-01-03T13:37:59.613Z","type":"message"}
{"nick":"bnoordhuis","message":"that's right","date":"2012-01-03T13:38:21.865Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: probably it tries to open fd=-1 stream","date":"2012-01-03T13:38:34.677Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: and read data from it","date":"2012-01-03T13:38:40.241Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: https://github.com/joyent/libuv/commit/5cc6090 <- still needs to be implemented in node","date":"2012-01-03T13:39:30.336Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: yeah, I'll wait for that ;)","date":"2012-01-03T13:41:16.494Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: to port _debugger to that API","date":"2012-01-03T13:41:21.871Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: do you think ryan will be online today?","date":"2012-01-03T13:42:54.994Z","type":"message"}
{"nick":"indutny","message":"I think some commits from my branch can already be ported to master","date":"2012-01-03T13:43:14.617Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: not sure but i suppose so","date":"2012-01-03T13:43:54.915Z","type":"message"}
{"nick":"AndreasMadsen","date":"2012-01-03T15:02:03.814Z","type":"join"}
{"nick":"piscisaureus_","date":"2012-01-03T15:03:35.836Z","type":"join"}
{"nick":"piscisaureus_","message":"anyone seen mraleph around","date":"2012-01-03T15:12:44.355Z","type":"message"}
{"nick":"piscisaureus_","message":"?","date":"2012-01-03T15:12:46.195Z","type":"message"}
{"nick":"AndreasMadsen","message":"Why is it we don't support message namespaces in the IPC (child_process.fork). I'm have multiply modules there are using the same IPC channel, and are conflicting. ","date":"2012-01-03T16:06:50.293Z","type":"message"}
{"nick":"AndreasMadsen","message":"^ I'm talking about userland modules","date":"2012-01-03T16:07:39.919Z","type":"message"}
{"nick":"bnoordhuis","message":"AndreasMadsen: eh?","date":"2012-01-03T16:17:18.345Z","type":"message"}
{"nick":"AndreasMadsen","message":"bnoordhuis: hi","date":"2012-01-03T16:17:27.054Z","type":"message"}
{"nick":"AndreasMadsen","message":"Suppose you would make a dnode like module, there don't use TCP but the IPC channel given by child_process.fork.","date":"2012-01-03T16:18:18.036Z","type":"message"}
{"nick":"AndreasMadsen","message":"Then all other modules using just the process.on('message') would receive a lot of callback noise.","date":"2012-01-03T16:19:10.139Z","type":"message"}
{"nick":"AndreasMadsen","message":"I think we should support namespaces in process.send so you can do process.send(message, 'dnodeIPC', /*handler*/).","date":"2012-01-03T16:20:13.136Z","type":"message"}
{"nick":"AndreasMadsen","message":"and then receive on some sort of process.on('message', function (message, namespace, /* handle *)) ","date":"2012-01-03T16:21:11.380Z","type":"message"}
{"nick":"bnoordhuis","message":"AndreasMadsen: i don't know dnode, when would you have more than one process.on('message') listener?","date":"2012-01-03T16:21:47.378Z","type":"message"}
{"nick":"bnoordhuis","message":"and wouldn't it be the responsibility of dnode to route the messages?","date":"2012-01-03T16:22:02.701Z","type":"message"}
{"nick":"AndreasMadsen","message":"bnoordhuis: We are already seeing this in the core cluster module, where the online cmd is send to the master.","date":"2012-01-03T16:22:59.248Z","type":"message"}
{"nick":"AndreasMadsen","message":"If i wan't to do IPC between master and worker it going to be a mess.","date":"2012-01-03T16:23:18.399Z","type":"message"}
{"nick":"bnoordhuis","message":"i suppose that's true","date":"2012-01-03T16:24:05.562Z","type":"message"}
{"nick":"AndreasMadsen","message":"This has been solve in the upcoming cluster2, but the issue won't change in userland","date":"2012-01-03T16:24:15.356Z","type":"message"}
{"nick":"AndreasMadsen","message":"dnode is a protocol there allow you to run a function on the server from a client browser, it takes care of all the HTTP request stuff. In the case it just between master and worker.","date":"2012-01-03T16:26:43.167Z","type":"message"}
{"nick":"AndreasMadsen","message":"note: the cluster2 solution is just internal usage, using some prefix. I suggest that we make a public API there allow a userland to use unique namespace/prefix (properly there npm module name). The uniqueName would then be a function argument in the message listener, makeing it easy to filter out messages.","date":"2012-01-03T16:35:59.170Z","type":"message"}
{"nick":"mraleph","date":"2012-01-03T17:18:35.333Z","type":"join"}
{"nick":"indutny","message":"mraleph: oya /cc piscisaureus_ ","date":"2012-01-03T17:20:08.697Z","type":"message"}
{"nick":"mraleph","message":"piscisaureus_: what's up?","date":"2012-01-03T17:23:28.927Z","type":"message"}
{"nick":"dap","date":"2012-01-03T17:24:32.362Z","type":"join"}
{"nick":"piscisaureus_","message":"mraleph: I am still struggling with the serializer","date":"2012-01-03T17:25:17.843Z","type":"message"}
{"nick":"piscisaureus_","message":"mraleph: I can't really detect the type of a HashTable from","date":"2012-01-03T17:25:38.217Z","type":"message"}
{"nick":"piscisaureus_","message":"er, during the serialization process","date":"2012-01-03T17:25:49.362Z","type":"message"}
{"nick":"piscisaureus_","message":"mraleph: so could I give all HashTable implementations their own map type?","date":"2012-01-03T17:26:23.524Z","type":"message"}
{"nick":"piscisaureus_","message":"or does that have crazy consequences?","date":"2012-01-03T17:26:49.677Z","type":"message"}
{"nick":"bradleymeck","date":"2012-01-03T17:29:16.774Z","type":"join"}
{"nick":"sh1mmer","date":"2012-01-03T17:44:57.771Z","type":"join"}
{"nick":"TooTallNate","date":"2012-01-03T18:12:01.022Z","type":"join"}
{"nick":"ryah","message":"yo","date":"2012-01-03T18:23:26.370Z","type":"message"}
{"nick":"creationix","message":"yoyo","date":"2012-01-03T18:24:29.707Z","type":"message"}
{"nick":"TooTallNate","message":"yoyoyo","date":"2012-01-03T18:24:35.751Z","type":"message"}
{"nick":"indutny","message":"ryah: yoyoyoyo","date":"2012-01-03T18:24:38.464Z","type":"message"}
{"nick":"indutny","message":"morning","date":"2012-01-03T18:24:46.394Z","type":"message"}
{"nick":"TooTallNate","message":"indutny: isn't it like late for you?","date":"2012-01-03T18:25:14.862Z","type":"message"}
{"nick":"ryah","message":"indutny: hey i saw your patch","date":"2012-01-03T18:25:38.110Z","type":"message"}
{"nick":"ryah","message":"indutny: going to review it right now","date":"2012-01-03T18:25:46.806Z","type":"message"}
{"nick":"indutny","message":"TooTallNate: 1am","date":"2012-01-03T18:25:47.904Z","type":"message"}
{"nick":"ryah","message":"been away this weekend","date":"2012-01-03T18:25:50.940Z","type":"message"}
{"nick":"indutny","message":"ryah: great! I'll be only for now","date":"2012-01-03T18:25:53.922Z","type":"message"}
{"nick":"indutny","message":"oops","date":"2012-01-03T18:25:58.162Z","type":"message"}
{"nick":"indutny","message":"s/only/online","date":"2012-01-03T18:26:01.175Z","type":"message"}
{"nick":"TooTallNate","message":"indutny: haha, good evening :D","date":"2012-01-03T18:26:03.901Z","type":"message"}
{"nick":"indutny","message":"TooTallNate: :)","date":"2012-01-03T18:26:09.501Z","type":"message"}
{"nick":"indutny","message":"ryah: some commits to js side are not ready for pulling","date":"2012-01-03T18:26:44.506Z","type":"message"}
{"nick":"indutny","message":"ryah: but I added them to PR just to show how cool it works","date":"2012-01-03T18:26:57.247Z","type":"message"}
{"nick":"indutny","message":":D","date":"2012-01-03T18:26:57.908Z","type":"message"}
{"nick":"ryah","message":"indutny: one problem is that im in the middle of adding child_process.fork({ thread: true }) wrapper right now","date":"2012-01-03T18:27:20.707Z","type":"message"}
{"nick":"ryah","message":"with a pipe for ipc","date":"2012-01-03T18:27:24.648Z","type":"message"}
{"nick":"indutny","message":"ryah: np, just don't pull lib/_debugger and lib/child_process","date":"2012-01-03T18:27:45.618Z","type":"message"}
{"nick":"indutny","message":"ryah: I'll port _debugger after your changes","date":"2012-01-03T18:27:52.941Z","type":"message"}
{"nick":"indutny","message":"ryah: my main goal was C++ side","date":"2012-01-03T18:28:03.393Z","type":"message"}
{"nick":"ryah","message":"indutny: is it okay if i land my shit first?","date":"2012-01-03T18:28:52.117Z","type":"message"}
{"nick":"ryah","message":"i can do that today","date":"2012-01-03T18:28:57.667Z","type":"message"}
{"nick":"ryah","message":"it's going to require a somewhat hairy rebase from you","date":"2012-01-03T18:29:15.072Z","type":"message"}
{"nick":"ryah","message":"but i think the DebuggerIsolate stuff will be the same","date":"2012-01-03T18:29:35.658Z","type":"message"}
{"nick":"dshaw_","date":"2012-01-03T18:29:36.979Z","type":"join"}
{"nick":"indutny","message":"ryah: heh, ok - np. I'll go sleeping now then","date":"2012-01-03T18:29:54.204Z","type":"message"}
{"nick":"indutny","message":"ryah: can you comment on my PR when it'll be ready?","date":"2012-01-03T18:30:05.313Z","type":"message"}
{"nick":"ryah","message":"indutny: yes","date":"2012-01-03T18:30:11.782Z","type":"message"}
{"nick":"indutny","message":"just to notify me","date":"2012-01-03T18:30:13.747Z","type":"message"}
{"nick":"indutny","message":"ryah: thanks!","date":"2012-01-03T18:30:16.786Z","type":"message"}
{"nick":"ryah","message":"bnoordhuis, piscisaureus_ - back on the regular meeting schedule today. 30 minutes on skype","date":"2012-01-03T18:31:03.271Z","type":"message"}
{"nick":"`3rdEden","date":"2012-01-03T18:51:27.554Z","type":"join"}
{"nick":"AndreasM_","date":"2012-01-03T18:52:01.948Z","type":"join"}
{"nick":"AndreasM_","reason":"Client Quit","date":"2012-01-03T18:52:13.898Z","type":"quit"}
{"nick":"AndreasM_","date":"2012-01-03T18:52:26.954Z","type":"join"}
{"nick":"igorzi","date":"2012-01-03T18:56:21.119Z","type":"join"}
{"nick":"igorzi","message":"ryah bnoordhuis piscisaureus_: call in 3 min?","date":"2012-01-03T18:57:54.079Z","type":"message"}
{"nick":"bnoordhuis","message":"igorzi: yep","date":"2012-01-03T18:58:03.381Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: call","date":"2012-01-03T18:59:42.519Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: ryah: I am here","date":"2012-01-03T19:01:32.108Z","type":"message"}
{"nick":"isaacs","date":"2012-01-03T19:02:33.912Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: you're on HN! http://news.ycombinator.com/item?id=3420544","date":"2012-01-03T19:03:20.499Z","type":"message"}
{"nick":"Raynos","reason":"Read error: Connection reset by peer","date":"2012-01-03T19:05:03.702Z","type":"quit"}
{"nick":"Raynos","date":"2012-01-03T19:06:06.244Z","type":"join"}
{"nick":"indutny","message":"any openstreetmap fans here?","date":"2012-01-03T19:06:35.415Z","type":"message"}
{"nick":"indutny","message":"moved http://mapchat.me/ to it","date":"2012-01-03T19:06:47.245Z","type":"message"}
{"nick":"CoverSlide","reason":"Quit: leaving","date":"2012-01-03T19:14:15.343Z","type":"quit"}
{"nick":"mikeal","date":"2012-01-03T19:16:54.319Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-01-03T19:23:45.289Z","type":"quit"}
{"nick":"mikeal","date":"2012-01-03T19:29:21.850Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 248 seconds","date":"2012-01-03T19:41:21.576Z","type":"quit"}
{"nick":"ryah","message":"i love the new build system","date":"2012-01-03T19:43:52.169Z","type":"message"}
{"nick":"ryah","message":"every time i have to use v0.6 i get really annoyed","date":"2012-01-03T19:44:09.331Z","type":"message"}
{"nick":"AndreasM_","reason":"Remote host closed the connection","date":"2012-01-03T19:46:41.878Z","type":"quit"}
{"nick":"CoverSlide","date":"2012-01-03T19:50:23.757Z","type":"join"}
{"nick":"CoverSlide","message":"+","date":"2012-01-03T19:51:01.561Z","type":"message"}
{"nick":"AvianFlu","date":"2012-01-03T19:56:00.086Z","type":"join"}
{"nick":"TooTallNate","message":"ryah: speaking of gyp, do you have any thoughts on this? http://groups.google.com/group/gyp-developer/browse_thread/thread/f1c0b2e542cc9521","date":"2012-01-03T19:56:18.105Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, i know what you mean, ryah","date":"2012-01-03T19:57:21.118Z","type":"message"}
{"nick":"bnoordhuis","message":"TooTallNate: you'd have to determine the cpu arch you're running on, then it's a simple matter of adding condition clauses","date":"2012-01-03T19:58:23.236Z","type":"message"}
{"nick":"bnoordhuis","message":"s/running on/compiling for/","date":"2012-01-03T19:58:36.106Z","type":"message"}
{"nick":"TooTallNate","message":"bnoordhuis: have you done anything with .S files and gyp?","date":"2012-01-03T19:59:35.390Z","type":"message"}
{"nick":"ryah","message":"what ben said","date":"2012-01-03T19:59:35.928Z","type":"message"}
{"nick":"ryah","message":"i think gyp might automaticallly take care of asm files","date":"2012-01-03T20:00:00.310Z","type":"message"}
{"nick":"TooTallNate","message":"just include them in the list of source files then?","date":"2012-01-03T20:00:14.544Z","type":"message"}
{"nick":"ryah","message":"TooTallNate: yeah","date":"2012-01-03T20:01:55.870Z","type":"message"}
{"nick":"AndreasMadsen","message":"ryah: what was that cluster.master.send thing?","date":"2012-01-03T20:02:48.263Z","type":"message"}
{"nick":"TooTallNate","message":"ok i'll mess around with that","date":"2012-01-03T20:03:06.685Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-01-03T20:03:54.689Z","type":"quit"}
{"nick":"ryah","message":"TooTallNate: have you seen https://github.com/joyent/node/blob/master/tools/addon.gypi ?","date":"2012-01-03T20:04:33.842Z","type":"message"}
{"nick":"ryah","message":"TooTallNate: also https://github.com/joyent/node/blob/master/tools/gyp_addon","date":"2012-01-03T20:04:44.076Z","type":"message"}
{"nick":"CIA-111","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u0002557fc39\u000f \u000310\u000f/ (18 files in 6 dirs)\u0002:\u000f Upgrade V8 to 3.8.4 - http://git.io/W9ssiA","date":"2012-01-03T20:07:05.610Z","type":"message"}
{"nick":"indutny","message":"woot, another day - another v8 update","date":"2012-01-03T20:10:40.193Z","type":"message"}
{"nick":"indutny","message":":D","date":"2012-01-03T20:10:40.961Z","type":"message"}
{"nick":"CoverSlide","reason":"Quit: leaving","date":"2012-01-03T20:11:01.874Z","type":"quit"}
{"nick":"CoverSlide","date":"2012-01-03T20:12:50.321Z","type":"join"}
{"nick":"dannycoates","date":"2012-01-03T20:29:49.411Z","type":"join"}
{"nick":"travis-ci","date":"2012-01-03T20:38:50.286Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/node#173 (master - 557fc39 : Ryan Dahl): The build is still failing.","date":"2012-01-03T20:38:50.516Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/node/compare/c123ac0...557fc39","date":"2012-01-03T20:38:50.516Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/node/builds/474272","date":"2012-01-03T20:38:50.516Z","type":"message"}
{"nick":"travis-ci","date":"2012-01-03T20:38:50.516Z","type":"part"}
{"nick":"isaacs","reason":"Quit: isaacs","date":"2012-01-03T20:40:18.148Z","type":"quit"}
{"nick":"AndreasMadsen","message":"bnoordhuis: I have made a patch for the namespace in .fork IPC : https://github.com/joyent/node/pull/2458","date":"2012-01-03T20:51:55.871Z","type":"message"}
{"nick":"AndreasMadsen","message":"ryah: Is is also intended to replace the internalMessage patch introduced in cluster2: https://github.com/joyent/node/pull/2388 ","date":"2012-01-03T20:52:56.027Z","type":"message"}
{"nick":"AndreasMadsen","message":"It much easier to userland this way not to worry abut a NODE_ prefix","date":"2012-01-03T20:53:35.490Z","type":"message"}
{"nick":"AndreasMadsen","message":"s/abut/about","date":"2012-01-03T20:53:43.162Z","type":"message"}
{"nick":"benvie","date":"2012-01-03T20:55:10.406Z","type":"quit"}
{"nick":"AvianFlu","reason":"Ping timeout: 240 seconds","date":"2012-01-03T20:57:47.079Z","type":"quit"}
{"nick":"sh1mmer","reason":"Quit: sh1mmer","date":"2012-01-03T21:00:35.367Z","type":"quit"}
{"nick":"AndreasMadsen","reason":"Remote host closed the connection","date":"2012-01-03T21:03:43.378Z","type":"quit"}
{"nick":"AvianFlu","date":"2012-01-03T21:05:21.792Z","type":"join"}
{"nick":"bradleymeck","message":"is it possible to have fork spawn up an older version of node (or any command besides the same version of node in general)","date":"2012-01-03T21:10:23.098Z","type":"message"}
{"nick":"TooTallNate","message":"bradleymeck: there's a pull request open to do that","date":"2012-01-03T21:11:04.747Z","type":"message"}
{"nick":"TooTallNate","message":"by mmalecki i think ^","date":"2012-01-03T21:11:13.209Z","type":"message"}
{"nick":"TooTallNate","message":"but no way currently","date":"2012-01-03T21:11:25.823Z","type":"message"}
{"nick":"bradleymeck","message":"node-fork it is then.","date":"2012-01-03T21:11:33.137Z","type":"message"}
{"nick":"isaacs","date":"2012-01-03T21:23:43.869Z","type":"join"}
{"nick":"ryah","message":"DrPizza: what's your email address?","date":"2012-01-03T21:24:56.874Z","type":"message"}
{"nick":"DrPizza","message":"drpizza@quiscalusmexicanus.org","date":"2012-01-03T21:25:07.298Z","type":"message"}
{"nick":"ryah","message":"TooTallNate: what's your email address?","date":"2012-01-03T21:25:33.189Z","type":"message"}
{"nick":"ryah","message":"nm - got it","date":"2012-01-03T21:25:44.444Z","type":"message"}
{"nick":"TooTallNate","message":"ok","date":"2012-01-03T21:25:49.704Z","type":"message"}
{"nick":"ryah","message":"DrPizza, TooTallNate, bnoordhuis: are there any GYP issues we want to have chrome people look at?","date":"2012-01-03T21:26:10.084Z","type":"message"}
{"nick":"ryah","message":"i have a friend there that is offering to lend us some time","date":"2012-01-03T21:26:21.441Z","type":"message"}
{"nick":"TooTallNate","message":"the 32-bit OSX build for 1","date":"2012-01-03T21:26:23.071Z","type":"message"}
{"nick":"DrPizza","message":"yes, almost certainly","date":"2012-01-03T21:26:27.378Z","type":"message"}
{"nick":"piscisaureus_","message":"mingw support :-)","date":"2012-01-03T21:26:29.154Z","type":"message"}
{"nick":"ryah","message":"64bit","date":"2012-01-03T21:26:30.612Z","type":"message"}
{"nick":"DrPizza","message":"ryah: I will do my utmost to check the current state of play tonight","date":"2012-01-03T21:26:40.760Z","type":"message"}
{"nick":"TooTallNate","message":"ryah: ya, that's what I meant","date":"2012-01-03T21:26:41.889Z","type":"message"}
{"nick":"bnoordhuis","message":"nothing from me","date":"2012-01-03T21:26:52.564Z","type":"message"}
{"nick":"DrPizza","message":"ryah: to build current gyp + current node","date":"2012-01-03T21:26:58.242Z","type":"message"}
{"nick":"DrPizza","message":"and see what gripes there are","date":"2012-01-03T21:27:01.722Z","type":"message"}
{"nick":"piscisaureus_","message":"I also remember there was some issue with relative/absolute paths","date":"2012-01-03T21:27:33.997Z","type":"message"}
{"nick":"ryah","message":"mingw support is a good one","date":"2012-01-03T21:27:49.137Z","type":"message"}
{"nick":"ryah","message":"then we could get rid of the makefiles in libuv","date":"2012-01-03T21:27:54.349Z","type":"message"}
{"nick":"DrPizza","message":"piscisaureus_: yes, that is one thing that I suspect is still an issue","date":"2012-01-03T21:27:56.327Z","type":"message"}
{"nick":"piscisaureus_","message":"ryah: DrPizza: also check the state of https://github.com/joyent/node/issues/2119#issuecomment-2793433","date":"2012-01-03T21:28:14.070Z","type":"message"}
{"nick":"DrPizza","message":"there are some quirks in the .vcproj files it produces that might still be outsatnding","date":"2012-01-03T21:28:21.644Z","type":"message"}
{"nick":"mraleph","reason":"Quit: Leaving.","date":"2012-01-03T21:28:25.832Z","type":"quit"}
{"nick":"DrPizza","message":"I just haven't had a chance to look for several months","date":"2012-01-03T21:28:30.652Z","type":"message"}
{"nick":"DrPizza","message":"piscisaureus_: looks eminently plausible","date":"2012-01-03T21:29:04.355Z","type":"message"}
{"nick":"ryah","message":"i think the 64 bit build on OSX is on our side","date":"2012-01-03T21:29:30.689Z","type":"message"}
{"nick":"ryah","message":"someone just needs to undo all those hardcoded ia32","date":"2012-01-03T21:29:41.952Z","type":"message"}
{"nick":"ryah","message":"(there are several)","date":"2012-01-03T21:30:01.560Z","type":"message"}
{"nick":"bradleymeck","message":"is there still a binding to close() exposed somewhere in 0.6 i know you used to be able to get it from the net bindings","date":"2012-01-03T21:31:37.754Z","type":"message"}
{"nick":"ryah","message":"bradleymeck: not directly","date":"2012-01-03T21:32:07.172Z","type":"message"}
{"nick":"ryah","message":"it all goes through libuv now","date":"2012-01-03T21:32:23.426Z","type":"message"}
{"nick":"bradleymeck","message":"mmm guess ill just go through c++ then","date":"2012-01-03T21:32:29.625Z","type":"message"}
{"nick":"ryah","message":"what are you doing?","date":"2012-01-03T21:33:04.473Z","type":"message"}
{"nick":"bradleymeck","message":"shimming .fork stuff cause we need 0.6 to talk to 0.4","date":"2012-01-03T21:33:23.083Z","type":"message"}
{"nick":"ryah","message":"hm ok","date":"2012-01-03T21:33:39.688Z","type":"message"}
{"nick":"ryah","message":"anything we can help with?","date":"2012-01-03T21:33:48.089Z","type":"message"}
{"nick":"bradleymeck","message":"mmalecki has a couple of open pull requests, other than that im just resolving the differences of stolsma's node-fork and core right now","date":"2012-01-03T21:34:19.349Z","type":"message"}
{"nick":"bradleymeck","message":"the commands one is brutal since we are basically using the .fork as an IPC protocol, but doable with a shim","date":"2012-01-03T21:34:53.616Z","type":"message"}
{"nick":"ryah","message":"is node-fork a fork binding?","date":"2012-01-03T21:36:27.969Z","type":"message"}
{"nick":"ryah","message":"fork(2)","date":"2012-01-03T21:36:38.281Z","type":"message"}
{"nick":"ryah","message":"you guys are going to die a horrible fire if you bind fork","date":"2012-01-03T21:37:14.869Z","type":"message"}
{"nick":"ryah","message":"just warning you","date":"2012-01-03T21:37:21.685Z","type":"message"}
{"nick":"ryah","message":"it is not what you want","date":"2012-01-03T21:37:36.808Z","type":"message"}
{"nick":"bradleymeck","message":"ryah we are not binding unix fork","date":"2012-01-03T21:37:58.922Z","type":"message"}
{"nick":"ryah","message":"oh okay","date":"2012-01-03T21:38:04.710Z","type":"message"}
{"nick":"bradleymeck","message":"we are shimming the child_process.fork","date":"2012-01-03T21:38:11.814Z","type":"message"}
{"nick":"ryah","message":"i see","date":"2012-01-03T21:38:16.829Z","type":"message"}
{"nick":"ryah","message":"cool","date":"2012-01-03T21:38:18.610Z","type":"message"}
{"nick":"TooTallNate","message":"ryah: just plopping .S files into the source_files list doesn't work","date":"2012-01-03T21:42:20.780Z","type":"message"}
{"nick":"TooTallNate","message":"the resulting makefile becomes invalid","date":"2012-01-03T21:42:32.674Z","type":"message"}
{"nick":"TooTallNate","message":"make: *** No rule to make target `out/Debug/obj.target/libffi/src/darwin64.o', needed by `out/Debug/libffi.a'.  Stop.","date":"2012-01-03T21:42:45.545Z","type":"message"}
{"nick":"TooTallNate","message":"where 'darwin64.S' was the input file :(","date":"2012-01-03T21:42:57.314Z","type":"message"}
{"nick":"dshaw_","reason":"Ping timeout: 240 seconds","date":"2012-01-03T21:48:47.073Z","type":"quit"}
{"nick":"TooTallNate","message":"so maybe you could have your friend look into that :p","date":"2012-01-03T21:49:40.209Z","type":"message"}
{"nick":"dshaw_","date":"2012-01-03T21:51:21.655Z","type":"join"}
{"nick":"bnoordhuis","message":"TooTallNate: you probably have to add a rule + action that tells gyp how to assemble .S files","date":"2012-01-03T21:54:26.845Z","type":"message"}
{"nick":"bnoordhuis","message":"TooTallNate: https://github.com/joyent/node/blob/c123ac0/tools/gyp/test/rules/src/subdir4/build-asm.gyp","date":"2012-01-03T21:56:01.507Z","type":"message"}
{"nick":"TooTallNate","message":"bnoordhuis: so it's already supported then?","date":"2012-01-03T21:56:59.117Z","type":"message"}
{"nick":"TooTallNate","message":"i wonder why it's not working :\\","date":"2012-01-03T21:57:06.876Z","type":"message"}
{"nick":"TooTallNate","message":"or do I need to add that example rule to my script?","date":"2012-01-03T21:57:28.216Z","type":"message"}
{"nick":"bnoordhuis","message":"TooTallNate: yes. or rather, something like it","date":"2012-01-03T21:57:43.442Z","type":"message"}
{"nick":"TooTallNate","message":"bnoordhuis: ok thanks, i'll give it a try","date":"2012-01-03T21:58:08.944Z","type":"message"}
{"nick":"dshaw_1","date":"2012-01-03T22:05:14.801Z","type":"join"}
{"nick":"dshaw_","reason":"Read error: No route to host","date":"2012-01-03T22:05:38.852Z","type":"quit"}
{"nick":"TooTallNate","message":"bnoordhuis: nice, that seemed to get it compiling at least, Bus Error: 10 on the test executable though","date":"2012-01-03T22:05:50.270Z","type":"message"}
{"nick":"bnoordhuis","message":"TooTallNate: that sounds more like something on your end","date":"2012-01-03T22:07:04.226Z","type":"message"}
{"nick":"TooTallNate","message":"ya that's what I figured, thanks for the help","date":"2012-01-03T22:07:17.459Z","type":"message"}
{"nick":"bnoordhuis","message":"my pleasure","date":"2012-01-03T22:07:31.150Z","type":"message"}
{"nick":"piscisaureus__","date":"2012-01-03T22:13:10.313Z","type":"join"}
{"nick":"piscisaureus_","message":"ryah: do we have any special security features to avoid \"prototype override\" attacks?","date":"2012-01-03T22:14:40.207Z","type":"message"}
{"nick":"piscisaureus_","message":"ryah: like requesting http://mysite.com/?__proto__=42","date":"2012-01-03T22:14:57.100Z","type":"message"}
{"nick":"TooTallNate","message":"piscisaureus_: probably not","date":"2012-01-03T22:15:25.849Z","type":"message"}
{"nick":"TooTallNate","message":"but in that case above, why would that be a problem?","date":"2012-01-03T22:15:55.063Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-01-03T22:16:18.572Z","type":"part"}
{"nick":"piscisaureus_","date":"2012-01-03T22:16:30.546Z","type":"join"}
{"nick":"piscisaureus_","message":"TooTallNate: well if the user calls headers.hasOwnProperty then the server will crash","date":"2012-01-03T22:17:08.313Z","type":"message"}
{"nick":"piscisaureus_","message":"if __proto__ or hashOwnProperty has been overridden","date":"2012-01-03T22:17:15.854Z","type":"message"}
{"nick":"bradleymeck","message":"TooTallNate, say you override something to have toString be a non-callable it can blow things up","date":"2012-01-03T22:17:24.429Z","type":"message"}
{"nick":"TooTallNate","message":"piscisaureus_: we *do* have a guard for that particular case","date":"2012-01-03T22:17:25.167Z","type":"message"}
{"nick":"TooTallNate","message":"the hasOwnProperty() case","date":"2012-01-03T22:17:35.932Z","type":"message"}
{"nick":"piscisaureus_","message":"TooTallNate: only inside node itself right?","date":"2012-01-03T22:17:44.315Z","type":"message"}
{"nick":"TooTallNate","message":"well, ya","date":"2012-01-03T22:17:52.183Z","type":"message"}
{"nick":"TooTallNate","message":"you were thinking on some global level?","date":"2012-01-03T22:17:58.182Z","type":"message"}
{"nick":"TooTallNate","message":"would that even be possible?","date":"2012-01-03T22:18:05.244Z","type":"message"}
{"nick":"bradleymeck","message":"TooTallNate, its possible if you make it so __proto__ never works :-/","date":"2012-01-03T22:18:41.352Z","type":"message"}
{"nick":"piscisaureus_","message":"paddybyers: no","date":"2012-01-03T22:18:42.450Z","type":"message"}
{"nick":"TooTallNate","message":"bradleymeck: that would be very bad for me :p","date":"2012-01-03T22:18:59.635Z","type":"message"}
{"nick":"piscisaureus_","message":"paddybyers: but Eric Corry is like \"why do you want to fix the hash collision issue while you don't even fix that\"","date":"2012-01-03T22:19:12.841Z","type":"message"}
{"nick":"paddybyers","message":"piscisaureus_: eh?","date":"2012-01-03T22:19:45.362Z","type":"message"}
{"nick":"bradleymeck","message":"piscisaureus_, the problem is that JSON.parse should not use the magic __proto__ property while parsing","date":"2012-01-03T22:20:39.962Z","type":"message"}
{"nick":"bradleymeck","message":"v8 fixed setters / getters from prototypes on literals for a similar reason","date":"2012-01-03T22:21:08.440Z","type":"message"}
{"nick":"bradleymeck","message":"but the left JSON.parse kinda sucky","date":"2012-01-03T22:21:19.187Z","type":"message"}
{"nick":"bradleymeck","message":"so unless we use a non-standard JSON.parse, we are boned","date":"2012-01-03T22:21:42.043Z","type":"message"}
{"nick":"bradleymeck","message":"which at this rate it might be a good idea to just shim JSON.parse anyway from the way v8 guys are dealing with us :-/","date":"2012-01-03T22:23:35.945Z","type":"message"}
{"nick":"piscisaureus_","message":"not so aggrassive","date":"2012-01-03T22:25:16.033Z","type":"message"}
{"nick":"piscisaureus_","message":"they are actually working with us","date":"2012-01-03T22:25:20.255Z","type":"message"}
{"nick":"ErikCorryV8","date":"2012-01-03T22:28:20.152Z","type":"join"}
{"nick":"bradleymeck","message":"piscisaureus_, I just haven't heard many good things, getting tense, sorry","date":"2012-01-03T22:32:15.783Z","type":"message"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-01-03T22:35:50.776Z","type":"quit"}
{"nick":"piscisaureus_","message":"einaros: yt?","date":"2012-01-03T22:51:15.414Z","type":"message"}
{"nick":"ryah","message":"TooTallNate: i'll leave you to reply to evmar","date":"2012-01-03T23:07:39.854Z","type":"message"}
{"nick":"TooTallNate","message":"ok, i'm on it","date":"2012-01-03T23:07:51.030Z","type":"message"}
{"nick":"ryah","message":"god. this parser bug is going to kill me","date":"2012-01-03T23:08:52.814Z","type":"message"}
{"nick":"piscisaureus_","message":"ryah: did you already extract a full http requests from any of the cores?","date":"2012-01-03T23:11:59.202Z","type":"message"}
{"nick":"dshaw_1","new_nick":"dshaw_","date":"2012-01-03T23:13:43.803Z","type":"nick"}
{"nick":"ryah","message":"piscisaureus_: no","date":"2012-01-03T23:16:59.883Z","type":"message"}
{"nick":"ryah","message":"it has to do with how we're managing memory across packets","date":"2012-01-03T23:17:50.853Z","type":"message"}
{"nick":"ryah","message":"im almost certain","date":"2012-01-03T23:17:54.579Z","type":"message"}
{"nick":"ryah","message":"man always_inline really pisses me off","date":"2012-01-03T23:24:03.346Z","type":"message"}
{"nick":"piscisaureus_","message":"ryah: in that case maybe you should attempt to recreate the issue by shooting random http packets to a http server","date":"2012-01-03T23:25:55.119Z","type":"message"}
{"nick":"piscisaureus_","message":"slowly and interleaved","date":"2012-01-03T23:26:07.519Z","type":"message"}
{"nick":"bnoordhuis","message":"ryah: you can remove always_inline, gcc 4.5 doesn't inline it anyway :/","date":"2012-01-03T23:31:09.734Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: i think it should though","date":"2012-01-03T23:40:03.797Z","type":"message"}
{"nick":"piscisaureus_","message":"compile with -Winline to find out why it doesn't","date":"2012-01-03T23:40:16.223Z","type":"message"}
{"nick":"piscisaureus__","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-01-03T23:45:29.739Z","type":"quit"}
{"nick":"ryah","message":"okay","date":"2012-01-03T23:46:34.792Z","type":"message"}
{"nick":"ryah","message":"is this inlining even measurable?","date":"2012-01-03T23:48:52.195Z","type":"message"}
{"nick":"ryah","message":"it makesdebugging it imposible","date":"2012-01-03T23:49:02.454Z","type":"message"}
{"nick":"ryah","message":"s/impossible/difficult","date":"2012-01-03T23:49:11.814Z","type":"message"}
{"nick":"ryah","message":"i find it hard to imagine that call overhead is at all measurable in our region of the latency spectrum ","date":"2012-01-03T23:50:05.722Z","type":"message"}
{"nick":"bnoordhuis","message":"no, it was a convenience thing - so i wouldn't have to prefix every member variable with self-> :)","date":"2012-01-03T23:56:20.053Z","type":"message"}
{"nick":"bnoordhuis","message":"(i kid, i kid - remove it if you want)","date":"2012-01-03T23:57:14.262Z","type":"message"}
