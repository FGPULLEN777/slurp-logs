{"nick":"piscisaureus_","message":"oh","date":"2012-04-25T00:00:01.780Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: my point, that is *not* possible","date":"2012-04-25T00:00:10.558Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis","date":"2012-04-25T00:00:16.004Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, why not?","date":"2012-04-25T00:00:24.522Z","type":"message"}
{"nick":"piscisaureus_","message":".// So now we want to write 42","date":"2012-04-25T00:00:30.733Z","type":"message"}
{"nick":"piscisaureus_","message":"if (...) process.stdout.write(42);","date":"2012-04-25T00:00:41.036Z","type":"message"}
{"nick":"piscisaureus_","message":"fill in the blanks","date":"2012-04-25T00:00:45.277Z","type":"message"}
{"nick":"bnoordhuis","message":"this is probably best handled in libuv","date":"2012-04-25T00:01:11.816Z","type":"message"}
{"nick":"piscisaureus_","message":"orly?","date":"2012-04-25T00:01:33.209Z","type":"message"}
{"nick":"bnoordhuis","message":"we'd need to signal to the application that it's now safe to write (or not safe as the case may be)","date":"2012-04-25T00:01:36.608Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: nah","date":"2012-04-25T00:01:42.306Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: we should just make that bitch nonblocking, and be a little smarter","date":"2012-04-25T00:01:59.685Z","type":"message"}
{"nick":"bnoordhuis","message":"to recap, make pipes non-blocking, keep tty and files blocking?","date":"2012-04-25T00:02:26.893Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: afaict that was always the plan","date":"2012-04-25T00:02:39.217Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but I don't like that rule at all","date":"2012-04-25T00:02:47.630Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, it violates the 'no exceptions' rule","date":"2012-04-25T00:03:08.134Z","type":"message"}
{"nick":"bnoordhuis","message":"we'd have to amend it to 'no exceptions, except for pipes'","date":"2012-04-25T00:03:18.037Z","type":"message"}
{"nick":"piscisaureus_","message":"the fact that stdio is blocking is already a violation of the no exceptions rule","date":"2012-04-25T00:03:28.856Z","type":"message"}
{"nick":"bnoordhuis","message":"which just doesn't have a good ring to it","date":"2012-04-25T00:03:30.236Z","type":"message"}
{"nick":"mjr_","reason":"Ping timeout: 248 seconds","date":"2012-04-25T00:03:36.917Z","type":"quit"}
{"nick":"mjr_","date":"2012-04-25T00:03:44.441Z","type":"join"}
{"nick":"bnoordhuis","message":"but okay, i don't object - make it non-blocking and make it nice","date":"2012-04-25T00:04:09.999Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: uv_pipe_open just doesn't set the nonblocking flag","date":"2012-04-25T00:08:45.637Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: that seems like an oversight to me","date":"2012-04-25T00:08:51.715Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: er, looks","date":"2012-04-25T00:08:58.762Z","type":"message"}
{"nick":"bnoordhuis","message":"possibly, i didn't write that :)","date":"2012-04-25T00:09:18.106Z","type":"message"}
{"nick":"piscisaureus_","message":"maybe we can have process.stdout.setBlocking() ?","date":"2012-04-25T00:09:47.937Z","type":"message"}
{"nick":"piscisaureus_","message":"or would that be awful","date":"2012-04-25T00:09:59.491Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but srsly - libuv writeSync support would be very nice","date":"2012-04-25T00:10:20.580Z","type":"message"}
{"nick":"piscisaureus_","message":"we could also get rid of the fact that writing to tty in a tight loop blows up","date":"2012-04-25T00:10:36.250Z","type":"message"}
{"nick":"piscisaureus_","message":"that's not bad, except for the fact that people know tty is blocking","date":"2012-04-25T00:10:55.407Z","type":"message"}
{"nick":"piscisaureus_","message":"anyway, first things first","date":"2012-04-25T00:11:27.307Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: yes, stdout.setBlocking() would be a little bit of  awful.","date":"2012-04-25T00:53:44.452Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: the main thing is that tty and file stdio must be blocking","date":"2012-04-25T00:54:01.542Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well, tty sure","date":"2012-04-25T00:54:16.689Z","type":"message"}
{"nick":"piscisaureus_","message":"file stdio i don't care about","date":"2012-04-25T00:54:23.995Z","type":"message"}
{"nick":"isaacs","message":"i do :)","date":"2012-04-25T00:54:30.979Z","type":"message"}
{"nick":"isaacs","message":"losing the last write to a log file is a pita","date":"2012-04-25T00:55:05.078Z","type":"message"}
{"nick":"piscisaureus_","message":"true","date":"2012-04-25T00:55:20.886Z","type":"message"}
{"nick":"seebees","message":"i like pita","date":"2012-04-25T00:55:25.923Z","type":"message"}
{"nick":"piscisaureus_","message":"seebees: oh. I have a nice device here to give you some.","date":"2012-04-25T00:55:49.355Z","type":"message"}
{"nick":"seebees","message":"piscisaureus_: does it come with humus?","date":"2012-04-25T00:56:50.213Z","type":"message"}
{"nick":"seebees","message":"or only file io?","date":"2012-04-25T00:57:09.014Z","type":"message"}
{"nick":"piscisaureus_","message":"seebees: lubricating it will make the pita experience less intense","date":"2012-04-25T00:57:18.845Z","type":"message"}
{"nick":"seebees","message":"piscisaureus_: ya, I tried, but I really don't have a come back for that","date":"2012-04-25T00:59:01.725Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: isn't it like 3am where you are?","date":"2012-04-25T01:04:43.583Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: ye","date":"2012-04-25T01:04:51.233Z","type":"message"}
{"nick":"piscisaureus_","message":"s","date":"2012-04-25T01:04:51.922Z","type":"message"}
{"nick":"isaacs","message":"damn.  crazy night owls.","date":"2012-04-25T01:05:02.227Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: yeah, time to leave","date":"2012-04-25T01:05:15.224Z","type":"message"}
{"nick":"bnoordhuis","message":"ditto","date":"2012-04-25T01:05:21.378Z","type":"message"}
{"nick":"isaacs","message":"get some rest, man :)","date":"2012-04-25T01:05:21.579Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: rest is for pussies.","date":"2012-04-25T01:05:31.586Z","type":"message"}
{"nick":"piscisaureus_","message":"coding is for men","date":"2012-04-25T01:05:35.160Z","type":"message"}
{"nick":"bnoordhuis","message":"3 am is nothing, last night i logged off at 6","date":"2012-04-25T01:05:55.553Z","type":"message"}
{"nick":"piscisaureus_","action":"tries to get elected governor of California","date":"2012-04-25T01:06:02.968Z","type":"action"}
{"nick":"bnoordhuis","message":"anyway, sleep tight all","date":"2012-04-25T01:06:20.570Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: anyway, worry about nonblocking stdio pipes","date":"2012-04-25T01:06:29.434Z","type":"message"}
{"nick":"piscisaureus_","message":"then I will get rest","date":"2012-04-25T01:06:32.884Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: hey","date":"2012-04-25T01:06:46.234Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: what time, tomorrow?","date":"2012-04-25T01:06:50.958Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2012-04-25T01:11:29.075Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-04-25T01:20:25.614Z","type":"quit"}
{"nick":"erickt","reason":"Read error: Operation timed out","date":"2012-04-25T01:37:10.356Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2012-04-25T01:38:20.687Z","type":"quit"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2012-04-25T01:45:32.086Z","type":"quit"}
{"nick":"perezd","reason":"Quit: perezd","date":"2012-04-25T01:58:12.133Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Linkinus - http://linkinus.com","date":"2012-04-25T01:59:26.018Z","type":"quit"}
{"nick":"CIA-155","message":"\u0002libuv:\u000f \u000303Luis Lavena\u000f \u000307master\u000f * r\u0002b6e3dcc\u000f \u000310\u000f/ (src/win/winapi.h src/win/winsock.h)\u0002:\u000f (log message trimmed)","date":"2012-04-25T02:07:42.035Z","type":"message"}
{"nick":"CIA-155","message":"\u0002libuv:\u000f Windows: actually detect mingw-w64 and not 64 bits mode","date":"2012-04-25T02:07:42.035Z","type":"message"}
{"nick":"CIA-155","message":"\u0002libuv:\u000f __MINGW64__ is only defined when using mingw-w64 in 64bits mode, not when","date":"2012-04-25T02:07:42.035Z","type":"message"}
{"nick":"CIA-155","message":"\u0002libuv:\u000f using the 32bits version of the compiler.","date":"2012-04-25T02:07:42.035Z","type":"message"}
{"nick":"CIA-155","message":"\u0002libuv:\u000f Instead, to detect usage of mingw-w64 instead of mingw version of GCC we","date":"2012-04-25T02:07:42.036Z","type":"message"}
{"nick":"CIA-155","message":"\u0002libuv:\u000f should look at __MINGW64_VERSION_MAJOR and __MINGW64_VERSION_MINOR. If one","date":"2012-04-25T02:07:42.245Z","type":"message"}
{"nick":"CIA-155","message":"\u0002libuv:\u000f of these is defined means we are running on mingw-w64 compiler and headers","date":"2012-04-25T02:07:43.130Z","type":"message"}
{"nick":"travis-ci","date":"2012-04-25T02:09:33.002Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#223 (master - b6e3dcc : Luis Lavena): The build is still failing.","date":"2012-04-25T02:09:33.211Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/42a8669...b6e3dcc","date":"2012-04-25T02:09:33.211Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1168915","date":"2012-04-25T02:09:33.211Z","type":"message"}
{"nick":"travis-ci","date":"2012-04-25T02:09:33.211Z","type":"part"}
{"nick":"perezd","date":"2012-04-25T02:11:54.704Z","type":"join"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-04-25T02:52:22.117Z","type":"quit"}
{"nick":"erickt","date":"2012-04-25T03:02:48.422Z","type":"join"}
{"nick":"erickt","reason":"Client Quit","date":"2012-04-25T03:03:53.924Z","type":"quit"}
{"nick":"erickt","date":"2012-04-25T03:05:59.495Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 256 seconds","date":"2012-04-25T03:32:01.279Z","type":"quit"}
{"nick":"c4milo","date":"2012-04-25T03:41:15.726Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 265 seconds","date":"2012-04-25T03:56:12.181Z","type":"quit"}
{"nick":"isaacs","date":"2012-04-25T04:05:29.599Z","type":"join"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-04-25T04:46:56.058Z","type":"quit"}
{"nick":"CoverSlide","reason":"Read error: Connection reset by peer","date":"2012-04-25T04:48:36.592Z","type":"quit"}
{"nick":"CoverSlide","date":"2012-04-25T04:51:58.302Z","type":"join"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-04-25T04:59:54.916Z","type":"quit"}
{"nick":"paddybyers","date":"2012-04-25T05:47:08.412Z","type":"join"}
{"nick":"orlandovftw","date":"2012-04-25T06:25:28.473Z","type":"join"}
{"nick":"isaacs","date":"2012-04-25T06:38:35.847Z","type":"join"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-04-25T06:52:08.427Z","type":"quit"}
{"nick":"paddybyers","date":"2012-04-25T07:05:18.691Z","type":"join"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-04-25T07:19:33.169Z","type":"quit"}
{"nick":"perezd","message":"is it possible for node/libuv to use more than 6 threads","date":"2012-04-25T07:33:30.583Z","type":"message"}
{"nick":"rendar","date":"2012-04-25T07:41:12.071Z","type":"join"}
{"nick":"perezd","reason":"Quit: perezd","date":"2012-04-25T08:00:23.644Z","type":"quit"}
{"nick":"orlandovftw","reason":"Ping timeout: 244 seconds","date":"2012-04-25T09:17:46.435Z","type":"quit"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-04-25T09:21:39.785Z","type":"quit"}
{"nick":"isaacs","date":"2012-04-25T09:22:30.298Z","type":"join"}
{"nick":"paddybyers","date":"2012-04-25T09:28:49.612Z","type":"join"}
{"nick":"CoverSlide","reason":"Ping timeout: 272 seconds","date":"2012-04-25T09:35:37.109Z","type":"quit"}
{"nick":"CoverSlide","date":"2012-04-25T09:42:59.150Z","type":"join"}
{"nick":"CoverSlide","reason":"Read error: Connection reset by peer","date":"2012-04-25T10:03:19.550Z","type":"quit"}
{"nick":"CoverSlide","date":"2012-04-25T10:08:16.120Z","type":"join"}
{"nick":"mjr_","reason":"Quit: mjr_","date":"2012-04-25T10:30:46.336Z","type":"quit"}
{"nick":"paddybyers","reason":"Ping timeout: 252 seconds","date":"2012-04-25T10:30:53.595Z","type":"quit"}
{"nick":"bnoordhuis","date":"2012-04-25T10:44:47.463Z","type":"join"}
{"nick":"CIA-155","message":"\u0002libuv:\u000f \u000303Aaron Bieber\u000f \u000307master\u000f * r\u0002109dcb2\u000f \u000310\u000f/ config-unix.mk \u0002:\u000f build: make \"make test\" work on OpenBSD - http://git.io/9iFfDA","date":"2012-04-25T11:00:02.495Z","type":"message"}
{"nick":"travis-ci","date":"2012-04-25T11:02:07.075Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#224 (master - 109dcb2 : Aaron Bieber): The build is still failing.","date":"2012-04-25T11:02:07.273Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/b6e3dcc...109dcb2","date":"2012-04-25T11:02:07.274Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1171525","date":"2012-04-25T11:02:07.274Z","type":"message"}
{"nick":"travis-ci","date":"2012-04-25T11:02:07.274Z","type":"part"}
{"nick":"c4milo","date":"2012-04-25T11:05:10.527Z","type":"join"}
{"nick":"CIA-155","message":"\u0002node:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u00025648d95\u000f \u000310\u000f/ src/node.cc \u0002:\u000f Remove unused local variable. - http://git.io/9RIeyQ","date":"2012-04-25T11:12:23.017Z","type":"message"}
{"nick":"abraxas","date":"2012-04-25T12:05:16.825Z","type":"quit"}
{"nick":"piscisaureus_","date":"2012-04-25T12:33:57.088Z","type":"join"}
{"nick":"creationix","message":"piscisaureus_, on the gist you posted with pipes","date":"2012-04-25T13:12:30.630Z","type":"message"}
{"nick":"creationix","message":"it always returns true, except after it has written 65536 bytes, then it just hangs.","date":"2012-04-25T13:12:58.399Z","type":"message"}
{"nick":"creationix","message":"s/hangs/blocks/","date":"2012-04-25T13:13:43.121Z","type":"message"}
{"nick":"creationix","message":"and it never actually writes to stdout, which baffles me","date":"2012-04-25T13:15:56.139Z","type":"message"}
{"nick":"creationix","message":"ahh, stdout is paused in the child","date":"2012-04-25T13:17:04.720Z","type":"message"}
{"nick":"creationix","message":"that probably explains why it never writes","date":"2012-04-25T13:17:10.478Z","type":"message"}
{"nick":"creationix","message":"if I comment out the pause, it always returns true and never exits the loop","date":"2012-04-25T13:19:23.087Z","type":"message"}
{"nick":"creationix","message":"so yeah, writing appears to be blocking","date":"2012-04-25T13:19:44.817Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: http://en.wikipedia.org/wiki/MIPS_architecture#Pseudo_instructions","date":"2012-04-25T13:29:10.426Z","type":"message"}
{"nick":"pfox___","date":"2012-04-25T14:35:54.160Z","type":"join"}
{"nick":"erickt","date":"2012-04-25T14:36:25.640Z","type":"join"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-04-25T14:52:27.769Z","type":"quit"}
{"nick":"piscisaureus_","message":"bnoordhuis: try this:","date":"2012-04-25T15:07:26.154Z","type":"message"}
{"nick":"piscisaureus_","message":"var s = (new Array(1024*1024)).join('.');","date":"2012-04-25T15:07:27.858Z","type":"message"}
{"nick":"piscisaureus_","message":"require('vm').createContext(s);","date":"2012-04-25T15:07:28.055Z","type":"message"}
{"nick":"piscisaureus_","message":"http://twitter.com/#!/mattn_jp/status/194643021336297472","date":"2012-04-25T15:13:10.356Z","type":"message"}
{"nick":"piscisaureus_","message":"Let me quote that","date":"2012-04-25T15:13:24.607Z","type":"message"}
{"nick":"piscisaureus_","message":"@yukihiro_matz libuv使ってblockをmrb_yieldして回していると数10回まわった所でproc->body->iseqが0x04なんて値になってハマっているのですが、起きうる可能性無いでしょうか？","date":"2012-04-25T15:13:25.219Z","type":"message"}
{"nick":"tjfontaine","message":"I think I agree with him","date":"2012-04-25T15:13:41.596Z","type":"message"}
{"nick":"tjfontaine","message":"do we know what he said?","date":"2012-04-25T15:14:40.052Z","type":"message"}
{"nick":"piscisaureus_","message":"I would almost say","date":"2012-04-25T15:14:43.931Z","type":"message"}
{"nick":"piscisaureus_","message":"@syoyo: epoll/kqueue 自体は libuv で使われているけど、それを libuv がインターフェイスとしては見せていない. fd を渡したらよろしく dispatch してくれるのを libuv に手をいれて追加するか, async + thread で頑張るか.","date":"2012-04-25T15:14:45.827Z","type":"message"}
{"nick":"piscisaureus_","message":"(http://twitter.com/#!/syoyo/status/192663254730940417)","date":"2012-04-25T15:15:05.407Z","type":"message"}
{"nick":"tjfontaine","message":"google translate helps I guess","date":"2012-04-25T15:16:27.748Z","type":"message"}
{"nick":"piscisaureus_","message":"Not really","date":"2012-04-25T15:16:35.943Z","type":"message"}
{"nick":"benvie","date":"2012-04-25T15:32:13.188Z","type":"quit"}
{"nick":"isaacs","reason":"Read error: Connection reset by peer","date":"2012-04-25T16:00:09.982Z","type":"quit"}
{"nick":"isaacs","date":"2012-04-25T16:00:43.358Z","type":"join"}
{"nick":"isaacs","message":"good mornign","date":"2012-04-25T16:09:13.902Z","type":"message"}
{"nick":"bnoordhuis","message":"good afternono","date":"2012-04-25T16:09:33.254Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: hey","date":"2012-04-25T16:18:16.145Z","type":"message"}
{"nick":"orlandovftw","date":"2012-04-25T16:19:56.623Z","type":"join"}
{"nick":"dap","date":"2012-04-25T16:22:26.454Z","type":"join"}
{"nick":"paddybyers","date":"2012-04-25T16:30:32.421Z","type":"join"}
{"nick":"erickt","date":"2012-04-25T16:57:57.844Z","type":"join"}
{"nick":"erickt","reason":"Read error: Operation timed out","date":"2012-04-25T17:01:38.989Z","type":"quit"}
{"nick":"erickt","date":"2012-04-25T17:05:07.649Z","type":"join"}
{"nick":"piscisaureus_","message":"dap: hey, are you going to publish that blog article/","date":"2012-04-25T17:06:23.877Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: I showed it to someone yesterday and people want to read it now","date":"2012-04-25T17:06:48.302Z","type":"message"}
{"nick":"dap","message":"piscisaureus_: someone I know ran into a weird issue that I wanted to root-cause.","date":"2012-04-25T17:07:23.993Z","type":"message"}
{"nick":"dap","message":"though it worked fine for me.","date":"2012-04-25T17:07:30.858Z","type":"message"}
{"nick":"piscisaureus_","message":"dap ah hmmm","date":"2012-04-25T17:07:43.752Z","type":"message"}
{"nick":"dap","message":"I can post it if people are eager to read it.","date":"2012-04-25T17:07:44.054Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: they are here","date":"2012-04-25T17:07:48.696Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: you can also give me another preview link, the current one no longer works","date":"2012-04-25T17:08:06.402Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: maybe just publish","date":"2012-04-25T17:08:16.890Z","type":"message"}
{"nick":"dap","message":"yeah, I'll clean it up and publish it shortly.","date":"2012-04-25T17:11:41.723Z","type":"message"}
{"nick":"isaacs","message":"dap: i take it this is re dtrace and node stuff?  wanna publish it on nodejs.org as well?","date":"2012-04-25T17:12:22.622Z","type":"message"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-04-25T17:12:25.306Z","type":"quit"}
{"nick":"dap","message":"isaacs: sure","date":"2012-04-25T17:12:36.452Z","type":"message"}
{"nick":"dap","message":"…though I kind of would like to figure out Trent's problem","date":"2012-04-25T17:13:16.680Z","type":"message"}
{"nick":"dap","message":"that said, I've used this a ton, and never seen the thing he's seeing, which makes me suspect an odd build or environment issue.","date":"2012-04-25T17:13:40.278Z","type":"message"}
{"nick":"erickt","date":"2012-04-25T17:17:58.499Z","type":"join"}
{"nick":"creationix","message":"is there a reason libuv doesn't expose realpath?","date":"2012-04-25T17:18:56.886Z","type":"message"}
{"nick":"isaacs","message":"creationix: it's hazardous","date":"2012-04-25T17:19:02.968Z","type":"message"}
{"nick":"creationix","message":"really?","date":"2012-04-25T17:19:08.073Z","type":"message"}
{"nick":"isaacs","message":"creationix: like, very badly dangerous.","date":"2012-04-25T17:19:08.601Z","type":"message"}
{"nick":"isaacs","message":"creationix: yeah.","date":"2012-04-25T17:19:11.709Z","type":"message"}
{"nick":"isaacs","message":"creationix: the man pages on bsd and linux both say \"do not use\"","date":"2012-04-25T17:19:21.130Z","type":"message"}
{"nick":"creationix","message":"could libuv provide a safe version then","date":"2012-04-25T17:19:23.900Z","type":"message"}
{"nick":"isaacs","message":"creationix: well... node does this by writing it in js","date":"2012-04-25T17:19:35.000Z","type":"message"}
{"nick":"isaacs","message":"creationix: it's not that hard to port, i'm guessing.","date":"2012-04-25T17:19:42.395Z","type":"message"}
{"nick":"creationix","message":"indeed, and it's a lot of code","date":"2012-04-25T17:19:42.596Z","type":"message"}
{"nick":"creationix","message":"hard to get right I mean","date":"2012-04-25T17:19:53.624Z","type":"message"}
{"nick":"isaacs","message":"creationix: it's a lot less than it would be in C :))","date":"2012-04-25T17:19:55.997Z","type":"message"}
{"nick":"creationix","message":"I guess so","date":"2012-04-25T17:20:03.076Z","type":"message"}
{"nick":"creationix","message":"but if done once right in C, it works everywhere","date":"2012-04-25T17:20:15.478Z","type":"message"}
{"nick":"creationix","message":"and less js -> C++ boundary crosses","date":"2012-04-25T17:20:25.053Z","type":"message"}
{"nick":"orlandovftw","reason":"Quit: leaving","date":"2012-04-25T17:21:04.032Z","type":"quit"}
{"nick":"piscisaureus__","date":"2012-04-25T17:21:48.818Z","type":"join"}
{"nick":"bnoordhuis_","date":"2012-04-25T17:22:00.619Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 248 seconds","date":"2012-04-25T17:22:32.877Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2012-04-25T17:23:18.018Z","type":"quit"}
{"nick":"dap","message":"piscisaureus_: http://dtrace.org/blogs/dap/2012/04/25/profiling-node-js/. I'm not going to publicize yet, but at least it's there for now.","date":"2012-04-25T17:23:33.274Z","type":"message"}
{"nick":"piscisaureus__","message":"dap: cool! thanks !","date":"2012-04-25T17:23:48.842Z","type":"message"}
{"nick":"creationix","message":"wow, realpath is 220 lines of js with seperate windows and posix paths","date":"2012-04-25T17:32:12.980Z","type":"message"}
{"nick":"creationix","message":"and that's on top of libuv's abstractions","date":"2012-04-25T17:32:22.402Z","type":"message"}
{"nick":"piscisaureus__","message":"creationix: yeah. There is some reason for that but I do not recall","date":"2012-04-25T17:33:02.451Z","type":"message"}
{"nick":"piscisaureus__","message":"creationix: it's questionable whether it is needed. I don't recall any issues with libuv's realpath.,","date":"2012-04-25T17:33:20.795Z","type":"message"}
{"nick":"creationix","message":"the windows branch is just a shortcut because there is no lstat on windows","date":"2012-04-25T17:33:21.265Z","type":"message"}
{"nick":"creationix","message":"libuv doesn't have realpath","date":"2012-04-25T17:33:33.855Z","type":"message"}
{"nick":"piscisaureus__","message":"creationix: yeah, that's an open issue. lstat will be fixed.","date":"2012-04-25T17:33:35.625Z","type":"message"}
{"nick":"piscisaureus__","message":"oh","date":"2012-04-25T17:33:38.587Z","type":"message"}
{"nick":"piscisaureus__","message":"windows could just use GetFinalPathName to implement uv_realpath","date":"2012-04-25T17:34:02.164Z","type":"message"}
{"nick":"creationix","message":"right, I think uv could provide a good realpath","date":"2012-04-25T17:34:16.239Z","type":"message"}
{"nick":"piscisaureus__","message":"yes","date":"2012-04-25T17:34:20.226Z","type":"message"}
{"nick":"creationix","message":"seems like it's within scope","date":"2012-04-25T17:34:22.713Z","type":"message"}
{"nick":"piscisaureus__","message":"creationix: yeah. we take patches","date":"2012-04-25T17:34:38.485Z","type":"message"}
{"nick":"creationix","message":"lol","date":"2012-04-25T17:34:44.465Z","type":"message"}
{"nick":"creationix","message":"you don't want me writing windows C++ code","date":"2012-04-25T17:34:49.609Z","type":"message"}
{"nick":"piscisaureus__","message":"creationix: I will do the windows part.","date":"2012-04-25T17:34:57.204Z","type":"message"}
{"nick":"creationix","message":"it's a shame realpath() from stdlib.h isn't usable","date":"2012-04-25T17:35:17.658Z","type":"message"}
{"nick":"piscisaureus__","message":"creationix: on windows it is easy. Just copy the example from http://msdn.microsoft.com/en-us/library/windows/desktop/aa364962%28v=vs.85%29.aspx","date":"2012-04-25T17:36:22.681Z","type":"message"}
{"nick":"piscisaureus__","message":":-p","date":"2012-04-25T17:36:24.574Z","type":"message"}
{"nick":"creationix","message":"actually, modern realpath is fine, it allocs the char* for you if you pass in NULL","date":"2012-04-25T17:36:44.364Z","type":"message"}
{"nick":"creationix","message":"I wonder how many systems support that","date":"2012-04-25T17:36:53.229Z","type":"message"}
{"nick":"creationix","message":"hmm, nevermind, it's still using PATH_MAX","date":"2012-04-25T17:37:32.125Z","type":"message"}
{"nick":"creationix","message":"ahh, found a sane realpath for C++ http://insanecoding.blogspot.com/2007/11/implementing-realpath-in-c.html","date":"2012-04-25T17:41:51.545Z","type":"message"}
{"nick":"c4milo","new_nick":"c4milo|lunch","date":"2012-04-25T17:43:12.156Z","type":"nick"}
{"nick":"piscisaureus__","message":"creationix: that's c++","date":"2012-04-25T17:43:18.498Z","type":"message"}
{"nick":"piscisaureus__","message":"creationix: and it uses stl","date":"2012-04-25T17:43:32.055Z","type":"message"}
{"nick":"creationix","message":"right, it will need to be ported","date":"2012-04-25T17:43:38.385Z","type":"message"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-04-25T17:44:11.848Z","type":"quit"}
{"nick":"erickt","date":"2012-04-25T17:48:12.430Z","type":"join"}
{"nick":"brson","date":"2012-04-25T17:48:48.523Z","type":"join"}
{"nick":"piscisaureus__","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-04-25T17:53:30.806Z","type":"quit"}
{"nick":"c4milo|lunch","new_nick":"c4milo","date":"2012-04-25T18:23:18.290Z","type":"nick"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-04-25T18:24:11.198Z","type":"quit"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-04-25T18:24:40.720Z","type":"quit"}
{"nick":"erickt","date":"2012-04-25T18:25:56.434Z","type":"join"}
{"nick":"creationix","message":"so childProcess.exec uses /bin/sh, could it use /bin/su if the user passed a username?","date":"2012-04-25T18:26:59.213Z","type":"message"}
{"nick":"creationix","message":"or is there a better way to run a child process as a specific uid/gid","date":"2012-04-25T18:27:32.686Z","type":"message"}
{"nick":"tjfontaine","message":"well, I would suggest sudo over su, but I think seteuid/setegid is generally how daemon thigns handle it","date":"2012-04-25T18:33:09.240Z","type":"message"}
{"nick":"mraleph","date":"2012-04-25T18:34:00.677Z","type":"join"}
{"nick":"creationix","message":"yeah, and I have uid/gid, not username/groupname","date":"2012-04-25T18:38:58.756Z","type":"message"}
{"nick":"creationix","message":"I guess I should open a node process, pass in the command to spawn and setuid/gid before spawning","date":"2012-04-25T18:39:19.830Z","type":"message"}
{"nick":"creationix","message":"just seems overkill to have an extra node process just to change the uid and gid of a child","date":"2012-04-25T18:39:40.291Z","type":"message"}
{"nick":"tjfontaine","message":"well, sudo can use a uid/gid","date":"2012-04-25T18:41:43.111Z","type":"message"}
{"nick":"creationix","message":"true, but for my case I can't assume sudo it installed","date":"2012-04-25T18:42:49.642Z","type":"message"}
{"nick":"creationix","message":"many servers don't have it","date":"2012-04-25T18:42:54.801Z","type":"message"}
{"nick":"creationix","message":"maybe a patch to node's spawn?","date":"2012-04-25T18:43:05.672Z","type":"message"}
{"nick":"creationix","message":"to allow setting uid and gid of the child?","date":"2012-04-25T18:43:17.221Z","type":"message"}
{"nick":"tjfontaine","message":"a module should be able to do it","date":"2012-04-25T18:43:21.493Z","type":"message"}
{"nick":"creationix","message":"module?","date":"2012-04-25T18:43:29.529Z","type":"message"}
{"nick":"bnoordhuis_","message":"there's process.setuid() and process.setgid()","date":"2012-04-25T18:43:42.095Z","type":"message"}
{"nick":"tjfontaine","message":"a node module, so that others coudl have it","date":"2012-04-25T18:43:42.408Z","type":"message"}
{"nick":"tjfontaine","message":"oh see, already done :)","date":"2012-04-25T18:43:51.191Z","type":"message"}
{"nick":"orlandovftw","date":"2012-04-25T18:44:02.509Z","type":"join"}
{"nick":"creationix","message":"bnoordhuis_, right, but that's from inside a process","date":"2012-04-25T18:44:06.649Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-04-25T18:44:18.849Z","type":"join"}
{"nick":"creationix","message":"I want to create a child process with a specified uid/gid","date":"2012-04-25T18:44:22.225Z","type":"message"}
{"nick":"bnoordhuis_","message":"we could perhaps add that","date":"2012-04-25T18:46:05.737Z","type":"message"}
{"nick":"tjfontaine","message":"is there an analog in windows land for this?","date":"2012-04-25T18:46:24.964Z","type":"message"}
{"nick":"orlandovftw","reason":"Ping timeout: 244 seconds","date":"2012-04-25T18:48:10.383Z","type":"quit"}
{"nick":"TooTallNate","date":"2012-04-25T18:48:25.649Z","type":"join"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-04-25T18:52:36.967Z","type":"quit"}
{"nick":"orlandovftw","date":"2012-04-25T18:52:42.630Z","type":"join"}
{"nick":"creationix","message":"hmm, my libuv wishlist is growing, maybe I should find time to start submitting patches","date":"2012-04-25T18:56:51.857Z","type":"message"}
{"nick":"bnoordhuis_","reason":"Ping timeout: 252 seconds","date":"2012-04-25T18:57:15.659Z","type":"quit"}
{"nick":"erickt","reason":"Remote host closed the connection","date":"2012-04-25T19:24:30.177Z","type":"quit"}
{"nick":"erickt","date":"2012-04-25T19:24:45.609Z","type":"join"}
{"nick":"paddybyers","date":"2012-04-25T19:52:34.120Z","type":"join"}
{"nick":"isaacs","message":"creationix: childProcess.exec taks a uid and gid","date":"2012-04-25T20:05:53.268Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: That's already supported","date":"2012-04-25T20:06:14.036Z","type":"message"}
{"nick":"isaacs","message":"npm uses that like crazy","date":"2012-04-25T20:06:16.771Z","type":"message"}
{"nick":"creationix","message":"really? sweet","date":"2012-04-25T20:09:16.672Z","type":"message"}
{"nick":"creationix","message":"but not spawn?","date":"2012-04-25T20:09:20.620Z","type":"message"}
{"nick":"creationix","message":"isaacs, cool, looks like spawn does accept uid and git","date":"2012-04-25T20:15:16.879Z","type":"message"}
{"nick":"creationix","action":"read some npm code","date":"2012-04-25T20:15:20.551Z","type":"action"}
{"nick":"creationix","message":":)","date":"2012-04-25T20:15:22.663Z","type":"message"}
{"nick":"creationix","message":"that needs documenting!","date":"2012-04-25T20:17:07.796Z","type":"message"}
{"nick":"isaacs","message":"creationix: oh, yeah, it should be in the docs if it isn't","date":"2012-04-25T20:17:36.855Z","type":"message"}
{"nick":"creationix","message":"though it doesn't seem to be working for me","date":"2012-04-25T20:17:59.057Z","type":"message"}
{"nick":"creationix","message":"I have a node repl as root and I run","date":"2012-04-25T20:18:19.228Z","type":"message"}
{"nick":"creationix","message":"require('child_process').spawn(\"sleep\", [\"100\"], {uid:1000,gid:1000})","date":"2012-04-25T20:18:19.735Z","type":"message"}
{"nick":"creationix","message":"but sleep is running as root","date":"2012-04-25T20:18:23.709Z","type":"message"}
{"nick":"creationix","message":"but I see you're setting uid and gid in npm https://github.com/isaacs/npm/blob/master/lib/utils/exec.js#L97-103","date":"2012-04-25T20:19:16.021Z","type":"message"}
{"nick":"isaacs","message":"hmm","date":"2012-04-25T20:20:47.678Z","type":"message"}
{"nick":"isaacs","message":"weird.  yes, that appears to be broken.  wth.","date":"2012-04-25T20:22:10.216Z","type":"message"}
{"nick":"isaacs","message":"yeah... that's super broken.  and a problem.","date":"2012-04-25T20:22:52.797Z","type":"message"}
{"nick":"isaacs","message":"$ sudo ./node test/disabled/test-setuidgid.js ","date":"2012-04-25T20:23:39.081Z","type":"message"}
{"nick":"isaacs","message":"node.js:256","date":"2012-04-25T20:23:39.294Z","type":"message"}
{"nick":"isaacs","message":"        throw e; // process.nextTick error, or 'error' event on first tick","date":"2012-04-25T20:23:39.493Z","type":"message"}
{"nick":"isaacs","message":"              ^","date":"2012-04-25T20:23:40.362Z","type":"message"}
{"nick":"isaacs","message":"AssertionError: unexpected error message","date":"2012-04-25T20:23:42.370Z","type":"message"}
{"nick":"isaacs","message":"oh, no, that's a different test","date":"2012-04-25T20:24:01.665Z","type":"message"}
{"nick":"isaacs","message":"yeah, looks like that behavior never got ported to libuv","date":"2012-04-25T20:24:37.531Z","type":"message"}
{"nick":"creationix","message":"ouch","date":"2012-04-25T20:24:47.676Z","type":"message"}
{"nick":"isaacs","message":"cwd is there.","date":"2012-04-25T20:25:25.973Z","type":"message"}
{"nick":"isaacs","message":"env is there","date":"2012-04-25T20:25:27.479Z","type":"message"}
{"nick":"isaacs","message":"but no uid/gid","date":"2012-04-25T20:25:30.106Z","type":"message"}
{"nick":"creationix","message":"can we fix this in 0.6.x since it's supposed to be there?","date":"2012-04-25T20:25:49.397Z","type":"message"}
{"nick":"isaacs","message":"yes.","date":"2012-04-25T20:26:07.507Z","type":"message"}
{"nick":"creationix","message":"ok, so I need this for a c9 project and npm depends on it.  What needs to be done to get it fixed","date":"2012-04-25T20:28:11.630Z","type":"message"}
{"nick":"isaacs","message":"i'm writing a patch now.","date":"2012-04-25T20:28:26.947Z","type":"message"}
{"nick":"isaacs","message":"it shouldn't be too hard.","date":"2012-04-25T20:28:29.631Z","type":"message"}
{"nick":"creationix","message":"sweet, thanks","date":"2012-04-25T20:28:33.061Z","type":"message"}
{"nick":"isaacs","message":"but a) libuv 0.6 needs to support it, and b) node needs to be built with that support","date":"2012-04-25T20:28:43.100Z","type":"message"}
{"nick":"creationix","message":"my backup plan was to spawn su -c and escape all the args manually in js","date":"2012-04-25T20:28:55.475Z","type":"message"}
{"nick":"isaacs","message":"creationix: hm... actually, so, we might not be able to do this in v0.6","date":"2012-04-25T20:32:47.291Z","type":"message"}
{"nick":"creationix","message":":(","date":"2012-04-25T20:32:56.642Z","type":"message"}
{"nick":"creationix","message":"too invasive","date":"2012-04-25T20:33:08.730Z","type":"message"}
{"nick":"isaacs","message":"it does change the abi, because it changes the uv_process_options_t","date":"2012-04-25T20:33:15.922Z","type":"message"}
{"nick":"isaacs","message":"no, not too invasive.","date":"2012-04-25T20:33:19.129Z","type":"message"}
{"nick":"isaacs","message":"but a public-facing change","date":"2012-04-25T20:33:22.999Z","type":"message"}
{"nick":"creationix","message":"abi right","date":"2012-04-25T20:33:45.589Z","type":"message"}
{"nick":"creationix","message":"though, how would a change to uv_process_options_t break anything?  Can addons use that structure?","date":"2012-04-25T20:34:04.922Z","type":"message"}
{"nick":"isaacs","message":"well, other libuv users would use that structure if they use spawn :)","date":"2012-04-25T20:34:30.179Z","type":"message"}
{"nick":"isaacs","message":"we can't break them, either","date":"2012-04-25T20:34:34.709Z","type":"message"}
{"nick":"isaacs","message":"so, for node v0.6, you can spawn a node, then process.setuid/setgid, then spawn(process.execPath, process.argv)","date":"2012-04-25T20:35:54.426Z","type":"message"}
{"nick":"isaacs","message":"which is annoying, but whatever","date":"2012-04-25T20:36:07.671Z","type":"message"}
{"nick":"creationix","message":"or use su","date":"2012-04-25T20:36:07.901Z","type":"message"}
{"nick":"creationix","message":"(my use case is posix only)","date":"2012-04-25T20:36:15.130Z","type":"message"}
{"nick":"isaacs","message":"yeah, or use su","date":"2012-04-25T20:36:16.598Z","type":"message"}
{"nick":"creationix","message":"node is very heavy","date":"2012-04-25T20:36:20.714Z","type":"message"}
{"nick":"tjfontaine","message":"I'm still in favor of sudo over su","date":"2012-04-25T20:36:21.923Z","type":"message"}
{"nick":"tjfontaine","message":"I know you say \"sudo\" might not be there, but it's also possible for \"su\" to not be either","date":"2012-04-25T20:36:42.495Z","type":"message"}
{"nick":"isaacs","message":"or sudo -i, sure","date":"2012-04-25T20:36:43.012Z","type":"message"}
{"nick":"isaacs","message":"or is it -u?","date":"2012-04-25T20:36:53.671Z","type":"message"}
{"nick":"creationix","message":"is there a 0.8.x milestone for libuv somewhere so we can make sure this gets in?","date":"2012-04-25T20:36:54.899Z","type":"message"}
{"nick":"isaacs","message":"i always forget","date":"2012-04-25T20:36:57.600Z","type":"message"}
{"nick":"tjfontaine","message":"-i is equivalent to su","date":"2012-04-25T20:37:02.969Z","type":"message"}
{"nick":"isaacs","message":"creationix: there is not, but the issues are being tracked in the node repo","date":"2012-04-25T20:37:10.814Z","type":"message"}
{"nick":"creationix","message":"su -c \"mycommand with args\" username","date":"2012-04-25T20:37:14.467Z","type":"message"}
{"nick":"creationix","message":"tjfontaine, I can't assume sudo","date":"2012-04-25T20:37:36.139Z","type":"message"}
{"nick":"creationix","message":"it's not as standard as su","date":"2012-04-25T20:37:41.826Z","type":"message"}
{"nick":"tjfontaine","message":"sudo -i -u uid -g gid -- ","date":"2012-04-25T20:37:45.552Z","type":"message"}
{"nick":"creationix","message":"a fresh archlinux won't have sudo","date":"2012-04-25T20:37:56.336Z","type":"message"}
{"nick":"creationix","message":"same with webos phones","date":"2012-04-25T20:37:59.987Z","type":"message"}
{"nick":"creationix","message":"I'm sure there are others","date":"2012-04-25T20:38:08.115Z","type":"message"}
{"nick":"tjfontaine","message":"I'm not particularly convinced that \"su\" is what should be considered standard either","date":"2012-04-25T20:38:18.054Z","type":"message"}
{"nick":"creationix","message":"well, spawning a node process is too expensive","date":"2012-04-25T20:38:33.498Z","type":"message"}
{"nick":"creationix","message":"and we don't want to change ABI in 0.6.x","date":"2012-04-25T20:38:47.482Z","type":"message"}
{"nick":"tjfontaine","message":"you could write a node addon to do this as well, less than ideal but certainly doable","date":"2012-04-25T20:38:59.195Z","type":"message"}
{"nick":"creationix","message":"I've never run across a linux that didn't have /bin/su","date":"2012-04-25T20:39:01.539Z","type":"message"}
{"nick":"creationix","message":"yeah, no binary addons either","date":"2012-04-25T20:39:16.456Z","type":"message"}
{"nick":"mjr_","date":"2012-04-25T20:39:26.162Z","type":"join"}
{"nick":"creationix","message":"I need my library to run on most linux boxes with minimal dependencies.  So far I only depend on node 0.6.x","date":"2012-04-25T20:39:46.284Z","type":"message"}
{"nick":"isaacs","message":"creationix: https://github.com/joyent/libuv/pull/389","date":"2012-04-25T21:05:40.811Z","type":"message"}
{"nick":"creationix","message":"isaacs, reading...","date":"2012-04-25T21:09:43.437Z","type":"message"}
{"nick":"creationix","message":"very simple","date":"2012-04-25T21:10:44.485Z","type":"message"}
{"nick":"creationix","message":"it's a shame we can't put this in 0.6.x","date":"2012-04-25T21:10:50.099Z","type":"message"}
{"nick":"creationix","message":"isaacs, could you do `options.gid > 0` instead of `options.gid && options.gid != -1` ?","date":"2012-04-25T21:11:45.171Z","type":"message"}
{"nick":"creationix","message":"or is that less clear","date":"2012-04-25T21:11:52.180Z","type":"message"}
{"nick":"creationix","message":"it does change the behavior for negatives less than -1","date":"2012-04-25T21:12:31.941Z","type":"message"}
{"nick":"tjfontaine","message":"0 is valid, so > -1, or >= 0","date":"2012-04-25T21:13:22.921Z","type":"message"}
{"nick":"creationix","message":"oh, right, I read the logic backwards","date":"2012-04-25T21:13:37.081Z","type":"message"}
{"nick":"creationix","message":"so if gid is 0 then it does nothing?","date":"2012-04-25T21:14:14.982Z","type":"message"}
{"nick":"creationix","message":"shouldn't it error out in that case","date":"2012-04-25T21:14:20.037Z","type":"message"}
{"nick":"tjfontaine","message":"in his current implementation I would say 0 means noop, and no it should be allowed (at least on linux) because CAP_SETUID means regular user could set to 0","date":"2012-04-25T21:14:56.079Z","type":"message"}
{"nick":"creationix","message":"good point","date":"2012-04-25T21:15:34.079Z","type":"message"}
{"nick":"creationix","message":"so then it should be `options.gid != -1 && setgid(options.gid)` just remote the `options.gid &&`","date":"2012-04-25T21:15:55.790Z","type":"message"}
{"nick":"pfox___","reason":"Ping timeout: 246 seconds","date":"2012-04-25T21:15:57.498Z","type":"quit"}
{"nick":"creationix","message":"or options.gid >= 0 (do we care what happens when gid is -3)","date":"2012-04-25T21:16:42.944Z","type":"message"}
{"nick":"tjfontaine","message":"I guess that depends on what uid_t is","date":"2012-04-25T21:16:59.394Z","type":"message"}
{"nick":"creationix","message":".uid is int","date":"2012-04-25T21:17:40.774Z","type":"message"}
{"nick":"tjfontaine","message":"creationix: I meant uid_t in linux, which I think is generally uint32","date":"2012-04-25T21:21:49.383Z","type":"message"}
{"nick":"creationix","message":"right, but once this is bound to node, js numbers can be negative","date":"2012-04-25T21:22:08.575Z","type":"message"}
{"nick":"creationix","message":"I say leave -3 undefined behavior","date":"2012-04-25T21:22:34.155Z","type":"message"}
{"nick":"tjfontaine","message":"creationix: what if I have a user with an id > int32?","date":"2012-04-25T21:23:20.031Z","type":"message"}
{"nick":"creationix","message":"tjfontaine, that would be insane","date":"2012-04-25T21:23:59.929Z","type":"message"}
{"nick":"tjfontaine","message":"creationix: theoretically possible, and probably more likely than you expect because of the way samba and winbind work for negotiated users","date":"2012-04-25T21:24:29.264Z","type":"message"}
{"nick":"creationix","message":"isaacs, I commented inline on not filtering out the 0 case, otherwise looks good to me.  Thanks for getting to this so fast!","date":"2012-04-25T21:24:41.733Z","type":"message"}
{"nick":"mikeal","date":"2012-04-25T21:26:51.279Z","type":"join"}
{"nick":"creationix","message":"tjfontaine, in x86 linux it is unsigned int or unsigned short depending on 64/32","date":"2012-04-25T21:27:29.772Z","type":"message"}
{"nick":"creationix","message":"I looked through the various archs on linux kernel and none were larger than unsigned int","date":"2012-04-25T21:27:59.240Z","type":"message"}
{"nick":"creationix","message":"so our signed int is one bit shy of being large enough for all cases","date":"2012-04-25T21:28:30.244Z","type":"message"}
{"nick":"tjfontaine","message":"creationix: there's a lot of variance through the ages and platforms, I just wanted to put my opinion on the record is all","date":"2012-04-25T21:29:37.024Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-04-25T22:01:32.626Z","type":"join"}
{"nick":"piscisaureus_","message":"isaacs: creationix: we could go the same route as we did with 64 bit file offsets","date":"2012-04-25T22:01:52.581Z","type":"message"}
{"nick":"piscisaureus_","message":"e.g. add uv_spawn2 which does support uid and gid","date":"2012-04-25T22:02:06.629Z","type":"message"}
{"nick":"piscisaureus_","message":"and then properly fix it in libuv.master","date":"2012-04-25T22:02:14.172Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: this is an abi breaker...","date":"2012-04-25T22:03:07.849Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, so node would use the new API, but the original ABI would remain unchanged","date":"2012-04-25T22:04:26.129Z","type":"message"}
{"nick":"piscisaureus_","message":"yes","date":"2012-04-25T22:04:33.865Z","type":"message"}
{"nick":"piscisaureus_","message":"but that would be in 0.6 only","date":"2012-04-25T22:04:45.690Z","type":"message"}
{"nick":"creationix","message":"that works as long as we remember to fix it later","date":"2012-04-25T22:04:51.733Z","type":"message"}
{"nick":"piscisaureus_","message":"in 0.8/master there would be just one api that sets uid and gid","date":"2012-04-25T22:05:05.177Z","type":"message"}
{"nick":"creationix","message":"right","date":"2012-04-25T22:05:11.048Z","type":"message"}
{"nick":"creationix","message":"that would make me happy.  I really don't want to shell out to su or an extra node process","date":"2012-04-25T22:05:33.342Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: that sounds fine to me","date":"2012-04-25T22:08:16.919Z","type":"message"}
{"nick":"isaacs","message":"creationix: well... setuid(0) makes no sense, really","date":"2012-04-25T22:08:39.522Z","type":"message"}
{"nick":"isaacs","message":"creationix: non-root users can't setuid anyway, which means you'er already 0","date":"2012-04-25T22:08:53.421Z","type":"message"}
{"nick":"isaacs","message":"oh, i guess on solaris derivatives you can set an explicit setuid perm bit","date":"2012-04-25T22:09:13.287Z","type":"message"}
{"nick":"creationix","message":"sometimes they can","date":"2012-04-25T22:09:14.711Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2012-04-25T22:09:17.376Z","type":"message"}
{"nick":"creationix","message":"but yeah, not normally","date":"2012-04-25T22:09:24.968Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: also, I think there are gid_t and uid_t","date":"2012-04-25T22:09:28.067Z","type":"message"}
{"nick":"isaacs","message":"yes, that's true","date":"2012-04-25T22:09:32.716Z","type":"message"}
{"nick":"isaacs","message":"should not be ints","date":"2012-04-25T22:09:34.695Z","type":"message"}
{"nick":"creationix","message":"yes, but those are unsigned","date":"2012-04-25T22:09:35.491Z","type":"message"}
{"nick":"piscisaureus_","message":"hmm","date":"2012-04-25T22:09:41.732Z","type":"message"}
{"nick":"creationix","message":"how will you store the -1 case","date":"2012-04-25T22:09:47.260Z","type":"message"}
{"nick":"isaacs","message":"creationix: on os x uid_t is not unsigned, i don't think","date":"2012-04-25T22:09:49.046Z","type":"message"}
{"nick":"creationix","message":"well on linux it is","date":"2012-04-25T22:09:56.410Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: dunno","date":"2012-04-25T22:09:57.794Z","type":"message"}
{"nick":"isaacs","message":"creationix: or maybe it is, and that's why nobody (-2) has such a big number :)","date":"2012-04-25T22:10:06.268Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: maybe options.flags |= UV_SPAWN_SETSID ?","date":"2012-04-25T22:10:11.840Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-04-25T22:10:16.042Z","type":"quit"}
{"nick":"isaacs","message":"$ id -- -2","date":"2012-04-25T22:10:34.583Z","type":"message"}
{"nick":"isaacs","message":"uid=4294967294(nobody) gid=4294967294(nobody) groups=4294967294(nobody),12(everyone),61(localaccounts),402(com.apple.sharepoint.group.1)","date":"2012-04-25T22:10:34.788Z","type":"message"}
{"nick":"creationix","message":"tim@touchsmart:~/luvit$ id nobody","date":"2012-04-25T22:11:13.668Z","type":"message"}
{"nick":"creationix","message":"uid=65534(nobody) gid=65534(nogroup) groups=65534(nogroup)","date":"2012-04-25T22:11:13.873Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: creationix: windows_verbatim_arguments is only just a flag as well","date":"2012-04-25T22:11:16.563Z","type":"message"}
{"nick":"piscisaureus_","message":"so we could just merge all those into a flags fields","date":"2012-04-25T22:11:22.623Z","type":"message"}
{"nick":"piscisaureus_","message":"*field","date":"2012-04-25T22:11:24.895Z","type":"message"}
{"nick":"creationix","message":"that works","date":"2012-04-25T22:11:30.881Z","type":"message"}
{"nick":"piscisaureus_","message":"there's more options I can think off","date":"2012-04-25T22:12:01.127Z","type":"message"}
{"nick":"piscisaureus_","message":"like, UV_SPAWN_SHELL","date":"2012-04-25T22:12:07.033Z","type":"message"}
{"nick":"piscisaureus_","message":"no priority though","date":"2012-04-25T22:12:12.413Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: or setsid","date":"2012-04-25T22:12:16.286Z","type":"message"}
{"nick":"piscisaureus_","message":"yep","date":"2012-04-25T22:12:19.379Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: did that detached stuff ever get back in?","date":"2012-04-25T22:12:34.036Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: oh that too :-)","date":"2012-04-25T22:12:41.880Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: no, AvianFlu never updated his PR","date":"2012-04-25T22:12:50.265Z","type":"message"}
{"nick":"isaacs","message":"AvianFlu: Ping.","date":"2012-04-25T22:12:58.593Z","type":"message"}
{"nick":"AvianFlu","message":"what's up?","date":"2012-04-25T22:13:11.781Z","type":"message"}
{"nick":"piscisaureus_","message":"let me double check that, before we start mud throwing","date":"2012-04-25T22:13:13.705Z","type":"message"}
{"nick":"AvianFlu","message":"I mean, the PR never got any comments, to be fair! but I'm happy to update it","date":"2012-04-25T22:13:38.525Z","type":"message"}
{"nick":"piscisaureus_","message":"oh hmm","date":"2012-04-25T22:14:09.839Z","type":"message"}
{"nick":"piscisaureus_","message":"maybe you did","date":"2012-04-25T22:14:12.505Z","type":"message"}
{"nick":"AvianFlu","message":"I made a second one","date":"2012-04-25T22:14:14.821Z","type":"message"}
{"nick":"AvianFlu","message":"that actually worked","date":"2012-04-25T22:14:17.099Z","type":"message"}
{"nick":"piscisaureus_","message":"I remember the last issues we had was that detach_cb should be dropped","date":"2012-04-25T22:14:28.476Z","type":"message"}
{"nick":"piscisaureus_","message":"and detaching should not imply that all stdio handles are nulled","date":"2012-04-25T22:14:42.451Z","type":"message"}
{"nick":"isaacs","message":"yes, that's a separate concept, for sure","date":"2012-04-25T22:14:56.235Z","type":"message"}
{"nick":"AvianFlu","message":"I agree","date":"2012-04-25T22:15:07.656Z","type":"message"}
{"nick":"AvianFlu","message":"https://github.com/joyent/libuv/pull/329 is the most recent one","date":"2012-04-25T22:15:11.519Z","type":"message"}
{"nick":"AvianFlu","message":"I think the part about not nulling the stdio handles needs some of that stdio refactoring to work","date":"2012-04-25T22:15:36.037Z","type":"message"}
{"nick":"piscisaureus_","message":"unfortunately I am still blocked on the pipe word","date":"2012-04-25T22:17:46.806Z","type":"message"}
{"nick":"piscisaureus_","message":"*work","date":"2012-04-25T22:17:48.993Z","type":"message"}
{"nick":"piscisaureus_","message":"igorzi: did you get the chance to review my commits?","date":"2012-04-25T22:18:04.753Z","type":"message"}
{"nick":"rendar","date":"2012-04-25T22:23:34.498Z","type":"quit"}
{"nick":"mraleph","reason":"Quit: Leaving.","date":"2012-04-25T22:33:19.427Z","type":"quit"}
{"nick":"mikeal","date":"2012-04-25T22:35:05.841Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 246 seconds","date":"2012-04-25T23:05:09.545Z","type":"quit"}
{"nick":"brson","date":"2012-04-25T23:07:14.336Z","type":"join"}
{"nick":"TooTallNate","message":"hggf\\","date":"2012-04-25T23:16:07.449Z","type":"message"}
{"nick":"dap","message":"isaacs: you know what would be great? if we could have V8 call abort() when it encountered an uncaught exception, *before* unwinding the stack. I don't know if that's even possible.","date":"2012-04-25T23:21:12.894Z","type":"message"}
{"nick":"brson","reason":"Ping timeout: 244 seconds","date":"2012-04-25T23:23:33.345Z","type":"quit"}
{"nick":"brson","date":"2012-04-25T23:24:35.769Z","type":"join"}
{"nick":"piscisaureus_","message":"dap: what about you add a dtrace hook in the exception path?","date":"2012-04-25T23:28:13.053Z","type":"message"}
{"nick":"dap","message":"piscisaureus_: that would be nice too.","date":"2012-04-25T23:28:32.351Z","type":"message"}
{"nick":"dap","message":"but I want this on all the time (see node-panic)","date":"2012-04-25T23:28:49.949Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: so you can always record the last one and you know what the last one was when node crashes due to an uncaughtexception","date":"2012-04-25T23:28:50.390Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: I don't think v8 knows at \"throw\" time whether an exception will be caught","date":"2012-04-25T23:29:15.206Z","type":"message"}
{"nick":"dap","message":"Yeah, I'm afraid of that.","date":"2012-04-25T23:29:27.178Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: an exception basically is just a special return value afaik","date":"2012-04-25T23:29:41.154Z","type":"message"}
{"nick":"dap","message":"Well, it still has the stack at that point, and has to unwind it back to the last try/catch. What I'm hoping is that it looks for that before unwinding.","date":"2012-04-25T23:30:12.547Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: well,, the stack is recorded as a property of the exception object","date":"2012-04-25T23:30:32.353Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: that that's always there, right?","date":"2012-04-25T23:30:40.022Z","type":"message"}
{"nick":"dap","message":"well, only some basic information about it.","date":"2012-04-25T23:30:57.314Z","type":"message"}
{"nick":"dap","message":"MDB can examine the function arguments, as long as they're still *on* the stack, so I want to keep that.","date":"2012-04-25T23:31:16.886Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: well, you'd have to add a dtrace hook in the exception constructor","date":"2012-04-25T23:31:22.660Z","type":"message"}
{"nick":"piscisaureus_","message":"and you could grab out of there what you want","date":"2012-04-25T23:31:29.273Z","type":"message"}
{"nick":"dap","message":"that's not really the use case I'm looking for. I want to grab *everything* all the time, for postmortem analysis.","date":"2012-04-25T23:31:47.421Z","type":"message"}
{"nick":"dap","message":"like, if your C program segfaults, you get a core dump, and you figure out what went wrong.","date":"2012-04-25T23:31:54.254Z","type":"message"}
{"nick":"dap","message":"I want that for Node. We already did the work for our debugger to understand node core dumps. Now I just want it to dump core when an uncaught exception happens :)","date":"2012-04-25T23:32:17.703Z","type":"message"}
{"nick":"piscisaureus_","message":"aah","date":"2012-04-25T23:32:32.324Z","type":"message"}
{"nick":"dap","message":"I'll have to dig into V8 and see if this is even remotely possible.","date":"2012-04-25T23:32:46.047Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: well, I think exceptions are caught by a TryCatch object","date":"2012-04-25T23:32:59.056Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: at least, the uncaughtexception should be","date":"2012-04-25T23:33:07.404Z","type":"message"}
{"nick":"piscisaureus_","message":"so maybe you can create a special flavor of TryCatch","date":"2012-04-25T23:33:16.959Z","type":"message"}
{"nick":"dap","message":"yeah, the question is, does it unwind the stack before that object gets it","date":"2012-04-25T23:33:50.721Z","type":"message"}
{"nick":"piscisaureus_","message":"hmm","date":"2012-04-25T23:33:57.037Z","type":"message"}
{"nick":"dap","message":"or does that object do the unwinding.","date":"2012-04-25T23:33:59.639Z","type":"message"}
{"nick":"dap","message":"you know what I mean?","date":"2012-04-25T23:34:04.038Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: yeah, but I don't know","date":"2012-04-25T23:34:16.276Z","type":"message"}
{"nick":"piscisaureus_","action":"looks it up","date":"2012-04-25T23:34:22.185Z","type":"action"}
{"nick":"dap","message":"I could create my own top-level try/catch that just calls abort(), but if it's already popped all the frames, that won't help. But that's a good idea, if it works the way we hope","date":"2012-04-25T23:34:33.410Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: well, calling abort() may be nice for you, but not in general :-)","date":"2012-04-25T23:35:12.470Z","type":"message"}
{"nick":"dap","message":"it's probably the best thing for any production app on SmartOS, but yeah, not on other systems.","date":"2012-04-25T23:35:35.902Z","type":"message"}
{"nick":"pfox___","date":"2012-04-25T23:36:01.127Z","type":"join"}
{"nick":"piscisaureus_","message":"dap:","date":"2012-04-25T23:37:35.610Z","type":"message"}
{"nick":"piscisaureus_","message":"void Isolate::ScheduleThrow(Object* exception) {","date":"2012-04-25T23:37:35.817Z","type":"message"}
{"nick":"piscisaureus_","message":"  // When scheduling a throw we first throw the exception to get the","date":"2012-04-25T23:37:35.817Z","type":"message"}
{"nick":"piscisaureus_","message":"  // error reporting if it is uncaught before rescheduling it.","date":"2012-04-25T23:37:35.817Z","type":"message"}
{"nick":"piscisaureus_","message":"  Throw(exception);","date":"2012-04-25T23:37:35.817Z","type":"message"}
{"nick":"piscisaureus_","message":"  thread_local_top()->scheduled_exception_ = pending_exception();","date":"2012-04-25T23:37:36.425Z","type":"message"}
{"nick":"piscisaureus_","message":"  thread_local_top()->external_caught_exception_ = false;","date":"2012-04-25T23:37:36.626Z","type":"message"}
{"nick":"piscisaureus_","message":"  clear_pending_exception();","date":"2012-04-25T23:37:37.424Z","type":"message"}
{"nick":"piscisaureus_","message":"}","date":"2012-04-25T23:37:37.626Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: looks hopeful","date":"2012-04-25T23:37:53.206Z","type":"message"}
{"nick":"dap","message":"cool","date":"2012-04-25T23:37:56.583Z","type":"message"}
{"nick":"piscisaureus_","message":"dap: I am not sure whether compiled code takes teh same path","date":"2012-04-25T23:38:20.222Z","type":"message"}
{"nick":"dap","message":"I'll have to do some digging. When I get some time :)","date":"2012-04-25T23:38:39.858Z","type":"message"}
{"nick":"avsej","date":"2012-04-25T23:39:59.396Z","type":"join"}
{"nick":"bnoordhuis","date":"2012-04-25T23:49:28.081Z","type":"join"}
{"nick":"bnoordhuis","message":"i finally rebooted my laptop","date":"2012-04-25T23:50:16.641Z","type":"message"}
{"nick":"bnoordhuis","message":"bye bye 4500+ hour uptime :(","date":"2012-04-25T23:50:25.519Z","type":"message"}
