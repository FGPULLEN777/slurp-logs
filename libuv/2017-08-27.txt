{"nick":"rendar","date":"2017-08-27T06:58:25.532Z","type":"join"}
{"nick":"saghul","date":"2017-08-27T08:12:57.312Z","type":"join"}
{"nick":"saghul","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-08-27T08:24:42.023Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-08-27T10:25:11.445Z","type":"quit"}
{"nick":"mylesborins","date":"2017-08-27T10:25:42.238Z","type":"join"}
{"nick":"jshanab","date":"2017-08-27T14:33:22.139Z","type":"join"}
{"nick":"jshanab","message":"I have been looking at a way to pool buffers in libuv like mentioned here; http://www.howtobuildsoftware.com/index.php/how-do/WHC/c-memory-memory-management-libuv-libuv-allocated-memory-buffers-re-use-techniques","date":"2017-08-27T14:34:25.285Z","type":"message"}
{"nick":"jshanab","message":"I do not like one aspect of that.  there is only char* and length.  Is that the length of the allocated or used area. If I am going to re-use it I need a capacity and a used otherwise I will be continuously resizing the buffer, which could defeat the pool concept.","date":"2017-08-27T14:36:05.003Z","type":"message"}
{"nick":"jshanab","message":"It looks like the alloc_cb will provide the len of the actual data and so I can easily aquire the next buffer of suffient size, I jsut loose the capacity information for the release step without now a lookup.","date":"2017-08-27T14:39:01.544Z","type":"message"}
{"nick":"rendar","reason":"Ping timeout: 246 seconds","date":"2017-08-27T14:44:55.676Z","type":"quit"}
{"nick":"jshanab","reason":"Quit: ChatZilla 0.9.90.1-rdmsoft [XULRunner 1.9.0.17/2009122204]","date":"2017-08-27T18:04:51.607Z","type":"quit"}
{"nick":"ncthom91","date":"2017-08-27T20:30:07.791Z","type":"join"}
{"nick":"ncthom91","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-08-27T21:05:49.667Z","type":"quit"}
{"nick":"jshanab_","reason":"Quit: ChatZilla 0.9.93 [Firefox 55.0.1/20170809080026]","date":"2017-08-27T21:52:17.919Z","type":"quit"}
{"nick":"bytekitten","date":"2017-08-27T23:25:21.654Z","type":"join"}
