{"nick":"ircretary","date":"2013-08-26T00:00:08.334Z","type":"join"}
{"nick":"philips","reason":"Read error: Connection reset by peer","date":"2013-08-26T00:00:48.861Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-26T00:01:07.274Z","type":"quit"}
{"nick":"philips","date":"2013-08-26T00:01:38.647Z","type":"join"}
{"nick":"st_luke","date":"2013-08-26T00:03:55.830Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #135 \u00037UNSTABLE\u000f windows-x64 (3/193) windows-ia32 (3/193) smartos-ia32 (2/192) linux-x64 (2/192) linux-ia32 (2/192) smartos-x64 (3/192) http://jenkins.nodejs.org/job/libuv-master-gyp/135/","date":"2013-08-26T00:07:14.336Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-08-26T00:07:15.032Z","type":"quit"}
{"nick":"st_luke","reason":"Ping timeout: 245 seconds","date":"2013-08-26T00:07:56.657Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-08-26T00:33:53.340Z","type":"join"}
{"nick":"pachet","date":"2013-08-26T00:35:41.704Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-08-26T00:43:27.328Z","type":"quit"}
{"nick":"groundwater","date":"2013-08-26T00:48:57.235Z","type":"join"}
{"nick":"kazupon","date":"2013-08-26T01:03:39.010Z","type":"join"}
{"nick":"indexzero","date":"2013-08-26T01:21:34.214Z","type":"join"}
{"nick":"indexzero","reason":"Ping timeout: 264 seconds","date":"2013-08-26T01:28:43.014Z","type":"quit"}
{"nick":"abraxas","date":"2013-08-26T01:44:56.556Z","type":"join"}
{"nick":"swaj","reason":"Remote host closed the connection","date":"2013-08-26T02:11:58.040Z","type":"quit"}
{"nick":"stagas","date":"2013-08-26T02:23:59.521Z","type":"join"}
{"nick":"pachet","reason":"Quit: [ +++ ]","date":"2013-08-26T02:46:35.559Z","type":"quit"}
{"nick":"Guest42317","reason":"Read error: Connection reset by peer","date":"2013-08-26T02:46:41.981Z","type":"quit"}
{"nick":"pfox__","message":"so how does on get the result of a uv_fs_stat() call in the \"older\" API w/ uv_statbuf_t . ?","date":"2013-08-26T03:02:38.554Z","type":"message"}
{"nick":"pfox__","message":"is the ptr field in uv_fs_t pointing at the statbuf out on the heap somewhere?","date":"2013-08-26T03:03:02.749Z","type":"message"}
{"nick":"pfox__","message":"not seeing any docs...","date":"2013-08-26T03:03:06.060Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-26T03:38:34.465Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-26T03:58:55.477Z","type":"join"}
{"nick":"kazupon","date":"2013-08-26T04:08:59.282Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 268 seconds","date":"2013-08-26T04:17:42.108Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-26T04:18:05.279Z","type":"join"}
{"nick":"c4milo","date":"2013-08-26T05:03:48.943Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-26T05:10:42.448Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-08-26T05:26:04.600Z","type":"quit"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-08-26T05:46:26.055Z","type":"quit"}
{"nick":"Benvie","date":"2013-08-26T06:23:28.723Z","type":"join"}
{"nick":"rendar","date":"2013-08-26T06:27:58.597Z","type":"join"}
{"nick":"bajtos","date":"2013-08-26T06:32:39.173Z","type":"join"}
{"nick":"rendar","reason":"Ping timeout: 264 seconds","date":"2013-08-26T06:42:42.249Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-26T06:43:55.538Z","type":"quit"}
{"nick":"emilsedgh_","reason":"Changing host","date":"2013-08-26T06:44:27.477Z","type":"quit"}
{"nick":"emilsedgh_","date":"2013-08-26T06:44:27.692Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #176 \u00037UNSTABLE\u000f windows-x64 (9/597) windows-ia32 (9/597) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/176/","date":"2013-08-26T06:47:38.482Z","type":"message"}
{"nick":"hz","date":"2013-08-26T06:53:18.946Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-26T06:54:53.342Z","type":"nick"}
{"nick":"leonvv","date":"2013-08-26T07:10:05.457Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-26T07:59:00.586Z","type":"nick"}
{"nick":"acrichto","date":"2013-08-26T08:23:32.311Z","type":"join"}
{"nick":"dominictarr","date":"2013-08-26T08:30:49.665Z","type":"join"}
{"nick":"hz","reason":"Ping timeout: 260 seconds","date":"2013-08-26T08:53:31.986Z","type":"quit"}
{"nick":"hz","date":"2013-08-26T08:55:47.578Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 260 seconds","date":"2013-08-26T08:58:11.965Z","type":"quit"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-26T09:07:51.983Z","type":"quit"}
{"nick":"hz","reason":"Read error: Connection reset by peer","date":"2013-08-26T09:08:32.777Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-26T09:08:53.811Z","type":"nick"}
{"nick":"hz","date":"2013-08-26T09:09:37.998Z","type":"join"}
{"nick":"leonvv","reason":"Remote host closed the connection","date":"2013-08-26T09:10:49.458Z","type":"quit"}
{"nick":"bajtos","date":"2013-08-26T09:11:37.179Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-26T09:18:52.326Z","type":"nick"}
{"nick":"bnoordhuis","date":"2013-08-26T09:26:07.008Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-26T09:53:34.734Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-26T09:54:37.851Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-26T09:55:21.717Z","type":"quit"}
{"nick":"indutny","message":"morning","date":"2013-08-26T09:56:26.253Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-26T10:35:53.159Z","type":"quit"}
{"nick":"bnoordhuis","message":"hello fedor","date":"2013-08-26T10:46:28.978Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-08-26T10:47:46.002Z","type":"join"}
{"nick":"bnoordhuis","message":"ci on smartos seems to progressively get worse","date":"2013-08-26T10:49:33.469Z","type":"message"}
{"nick":"bnoordhuis","message":"we're up to 12 failures now for no good reason afaict","date":"2013-08-26T10:49:48.403Z","type":"message"}
{"nick":"bnoordhuis","message":"pfox__: re uv_fs_stat(), req->ptr points to an embedded struct stat","date":"2013-08-26T10:53:04.676Z","type":"message"}
{"nick":"bnoordhuis","message":"pfox__: with the new api, you can just use req->statbuf directly","date":"2013-08-26T10:53:16.426Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1448 \u00037UNSTABLE\u000f osx-ia32 (2/597) smartos-ia32 (5/597) osx-x64 (1/597) linux-x64 (3/597) smartos-x64 (8/597) linux-ia32 (3/597) http://jenkins.nodejs.org/job/nodejs-v0.10/1448/","date":"2013-08-26T10:57:37.217Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: morning","date":"2013-08-26T10:58:08.558Z","type":"message"}
{"nick":"trevnorris","message":"you too indutny ","date":"2013-08-26T11:00:35.999Z","type":"message"}
{"nick":"bnoordhuis","message":"hey trevor. up early today?","date":"2013-08-26T11:03:39.928Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: heh, no. just about to hit the sack.","date":"2013-08-26T11:06:24.136Z","type":"message"}
{"nick":"trevnorris","message":"just got involved in some performance testing and lost track of time.","date":"2013-08-26T11:06:53.431Z","type":"message"}
{"nick":"trevnorris","message":"setup a tcp server that just delivers valid http headers then closes the socket. runs at ~60k req/sec. using it for some internals testing.","date":"2013-08-26T11:08:06.710Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: part of what lead me to https://github.com/joyent/node/pull/6124","date":"2013-08-26T11:08:29.027Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, i saw the email","date":"2013-08-26T11:08:48.575Z","type":"message"}
{"nick":"trevnorris","message":"all those util.is* methods really pollute the --trace-* output","date":"2013-08-26T11:08:53.573Z","type":"message"}
{"nick":"trevnorris","message":"so more than anything just wanted to get rid of them.","date":"2013-08-26T11:09:02.696Z","type":"message"}
{"nick":"kazupon","date":"2013-08-26T11:09:58.185Z","type":"join"}
{"nick":"bnoordhuis","message":"oh, yeah - i agree heartily","date":"2013-08-26T11:10:00.282Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: Failing tests -- linux-ia32: 212, osx-ia32: 200, smartos-ia32: 203, linux-x64: 212, osx-x64: 201, smartos-x64: 253","date":"2013-08-26T11:10:43.471Z","type":"message"}
{"nick":"trevnorris","message":"whoa.","date":"2013-08-26T11:11:05.089Z","type":"message"}
{"nick":"indutny","message":"woooo","date":"2013-08-26T11:11:34.291Z","type":"message"}
{"nick":"indutny","message":"what was thet","date":"2013-08-26T11:11:36.783Z","type":"message"}
{"nick":"bnoordhuis","message":"throw new TypeError('must start with number, buffer, array or string'); <- that","date":"2013-08-26T11:12:00.747Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-08-26T11:12:08.595Z","type":"message"}
{"nick":"indutny","message":"ook","date":"2013-08-26T11:12:10.218Z","type":"message"}
{"nick":"trevnorris","message":"strange. must have left some of the undefined api calls in js land.","date":"2013-08-26T11:12:38.417Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: so what is your conclusion re: util.is*()?","date":"2013-08-26T11:12:58.063Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: they can't be inlined because of a context change, and they're making my performance tracing fugly. don't like them.","date":"2013-08-26T11:13:37.615Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah","date":"2013-08-26T11:14:47.846Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't want to be the \"told you so\" guy but...","date":"2013-08-26T11:15:03.417Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-08-26T11:15:30.220Z","type":"message"}
{"nick":"trevnorris","message":"there, suck on that Jenkins.","date":"2013-08-26T11:15:38.402Z","type":"message"}
{"nick":"trevnorris","message":"honestly i'm not using the checks in super hot code paths (e.g. the ticker code changes i'm doing)","date":"2013-08-26T11:16:26.837Z","type":"message"}
{"nick":"trevnorris","message":"too costly","date":"2013-08-26T11:16:29.619Z","type":"message"}
{"nick":"trevnorris","message":"alright, it's passing. off to sleep for a few hours. see you two in a bit.","date":"2013-08-26T11:19:33.912Z","type":"message"}
{"nick":"trevnorris","action":"&","date":"2013-08-26T11:19:36.555Z","type":"action"}
{"nick":"LOUDBOT","message":"HEY! IM TALKING TO YOU PUNK","date":"2013-08-26T11:19:37.223Z","type":"message"}
{"nick":"trevnorris","message":"LOUDBOT: bite me. i'm off to bed.","date":"2013-08-26T11:19:45.714Z","type":"message"}
{"nick":"LOUDBOT","message":"trevnorris: BACK IN MY DAY WE COMPILED HP.C FROM SOURCE AND SET THE PRINTERS TO SAY \"INSERT COIN\" OR \"HELP IM TRAPPED IN A PRINTER FACTORY\"","date":"2013-08-26T11:19:46.314Z","type":"message"}
{"nick":"bnoordhuis","message":"sleep tight trevor","date":"2013-08-26T11:21:52.627Z","type":"message"}
{"nick":"bnoordhuis","message":"http://coreperf.com/projects/rejit/ <- interesting","date":"2013-08-26T11:24:52.395Z","type":"message"}
{"nick":"piscisaureus_","message":"Hello, any v8 experts in the room","date":"2013-08-26T11:25:14.819Z","type":"message"}
{"nick":"piscisaureus_","message":"?","date":"2013-08-26T11:25:16.427Z","type":"message"}
{"nick":"piscisaureus_","message":"Is a cast of a v8 object with .As<Object>() safe?","date":"2013-08-26T11:25:32.240Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: if it's truly an Object, then yes","date":"2013-08-26T11:26:44.771Z","type":"message"}
{"nick":"piscisaureus_","message":"sure","date":"2013-08-26T11:26:52.008Z","type":"message"}
{"nick":"bnoordhuis","message":"if it's not, it'll assert in debug builds","date":"2013-08-26T11:26:55.626Z","type":"message"}
{"nick":"piscisaureus_","message":"and if it isn't","date":"2013-08-26T11:26:57.633Z","type":"message"}
{"nick":"piscisaureus_","message":"right","date":"2013-08-26T11:27:00.337Z","type":"message"}
{"nick":"piscisaureus_","message":"what will happen in release builds? crash?","date":"2013-08-26T11:28:13.414Z","type":"message"}
{"nick":"bnoordhuis","message":"that's one of the options, yes","date":"2013-08-26T11:28:41.416Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, groceries time. biab","date":"2013-08-26T11:31:14.390Z","type":"message"}
{"nick":"piscisaureus_","message":"I wonder what drove Chris Malinchak to write this song","date":"2013-08-26T11:35:09.526Z","type":"message"}
{"nick":"piscisaureus_","message":"\"oh baby, you're my constipation\"","date":"2013-08-26T11:35:17.642Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-08-26T11:35:55.020Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-26T11:40:55.603Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-26T12:13:40.773Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-08-26T12:14:58.643Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-08-26T12:31:46.230Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-26T12:32:06.300Z","type":"quit"}
{"nick":"icarot","date":"2013-08-26T12:32:22.786Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 264 seconds","date":"2013-08-26T12:40:26.838Z","type":"quit"}
{"nick":"pachet","date":"2013-08-26T13:02:18.436Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00029ac75d1\u0002 : src: remove pointless node_os.h header file - http://git.io/IqTgaA","date":"2013-08-26T13:15:55.330Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #480 \u00037UNSTABLE\u000f smartos-x64 (13/636) osx-ia32 (2/636) smartos-ia32 (6/636) http://jenkins.nodejs.org/job/nodejs-master/480/","date":"2013-08-26T13:31:41.776Z","type":"message"}
{"nick":"jmar777","date":"2013-08-26T13:32:27.849Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-08-26T13:35:28.745Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #272 \u00037UNSTABLE\u000f windows-x64 (19/636) windows-ia32 (19/636) http://jenkins.nodejs.org/job/nodejs-master-windows/272/","date":"2013-08-26T13:36:19.711Z","type":"message"}
{"nick":"c4milo","date":"2013-08-26T13:46:39.341Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: FIXED_ONE_BYTE_STRING is annoying. What about we add a separate class that just has a truckload of javascript string symbols?","date":"2013-08-26T13:46:41.651Z","type":"message"}
{"nick":"piscisaureus_","message":"... which can be shared between all .cc files?","date":"2013-08-26T13:47:16.857Z","type":"message"}
{"nick":"swaj","date":"2013-08-26T13:47:22.120Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: I guess it'd make your context work easier too","date":"2013-08-26T13:47:58.996Z","type":"message"}
{"nick":"Domenic_","message":"I don't understand why we didn't call it node::as_string or something.","date":"2013-08-26T13:52:41.699Z","type":"message"}
{"nick":"piscisaureus_","message":"that too","date":"2013-08-26T13:56:01.968Z","type":"message"}
{"nick":"piscisaureus_","message":"it'd be nice to always cache them though","date":"2013-08-26T13:56:08.328Z","type":"message"}
{"nick":"piscisaureus_","message":"we could do something like:","date":"2013-08-26T13:57:56.910Z","type":"message"}
{"nick":"piscisaureus_","message":"struct JSStrings {","date":"2013-08-26T13:57:57.127Z","type":"message"}
{"nick":"piscisaureus_","message":"  Cached<String> type;","date":"2013-08-26T13:57:57.127Z","type":"message"}
{"nick":"piscisaureus_","message":"  Cached<String> bar;","date":"2013-08-26T13:57:57.127Z","type":"message"}
{"nick":"piscisaureus_","message":"  Cached<String> fd;","date":"2013-08-26T13:57:57.127Z","type":"message"}
{"nick":"bajtos","date":"2013-08-26T13:57:57.127Z","type":"join"}
{"nick":"piscisaureus_","message":"  void Initialize() {","date":"2013-08-26T13:57:57.533Z","type":"message"}
{"nick":"piscisaureus_","message":"    type = Cached<String>::New(\"type\");","date":"2013-08-26T13:57:57.747Z","type":"message"}
{"nick":"piscisaureus_","message":"   ...","date":"2013-08-26T13:57:58.535Z","type":"message"}
{"nick":"piscisaureus_","message":"  }","date":"2013-08-26T13:57:58.747Z","type":"message"}
{"nick":"piscisaureus_","message":"};","date":"2013-08-26T13:57:59.533Z","type":"message"}
{"nick":"piscisaureus_","message":"etc","date":"2013-08-26T13:57:59.791Z","type":"message"}
{"nick":"piscisaureus_","message":"we could even generate the file","date":"2013-08-26T13:58:04.470Z","type":"message"}
{"nick":"piscisaureus_","message":"or use x-macros","date":"2013-08-26T13:58:21.725Z","type":"message"}
{"nick":"kenperkins","date":"2013-08-26T14:16:28.170Z","type":"join"}
{"nick":"bnoordhuis","message":"Cached<T> is gone in the multi-context branch actually","date":"2013-08-26T14:25:53.555Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-26T14:26:09.154Z","type":"quit"}
{"nick":"bnoordhuis","message":"and \"annoying\", well, i don't care - you can call String::NewFromOneByte(isolate, string, sizeof(string) - 1) manually if that makes you feel better","date":"2013-08-26T14:27:09.911Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: as to your 'class with symbols' idea, i suggest you look at the multi-context branch :)","date":"2013-08-26T14:28:35.789Z","type":"message"}
{"nick":"bnoordhuis","message":"anyway, FIXED_ONE_BYTE_STRING is not going away anytime soon. it has its place","date":"2013-08-26T14:29:51.594Z","type":"message"}
{"nick":"Domenic_","message":"probably best to just declare `inline Local<String> as_string(const char* s) { return FIXED_ONE_BYTE_STRING(node_isolate, s); }` at the top of the source file where you're feeling the pain.","date":"2013-08-26T14:31:00.473Z","type":"message"}
{"nick":"bnoordhuis","message":"Domenic_: that doesn't work. FIXED_ONE_BYTE_STRING is for string literals","date":"2013-08-26T14:31:28.569Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I was thinking along these lines -> https://gist.github.com/piscisaureus/6342035","date":"2013-08-26T14:31:56.621Z","type":"message"}
{"nick":"Domenic_","message":"bnoordhuis: what about it doesn't work?","date":"2013-08-26T14:32:08.704Z","type":"message"}
{"nick":"bnoordhuis","message":"Domenic_: because it translates to this -> v8::String::NewFromOneByte(isolate, s, sizeof(s) - 1)","date":"2013-08-26T14:32:43.023Z","type":"message"}
{"nick":"bnoordhuis","message":"that sizeof(s) == sizeof(const char*), i.e. 4 or 8 bytes","date":"2013-08-26T14:33:13.016Z","type":"message"}
{"nick":"Domenic_","message":"bnoordhuis: ah, right, so macro instead of function, annoying.","date":"2013-08-26T14:33:21.791Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: you're basically declaring a ton of Persistents there","date":"2013-08-26T14:34:25.156Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yup - I know","date":"2013-08-26T14:34:33.708Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but only doing it once, so who cares","date":"2013-08-26T14:34:39.704Z","type":"message"}
{"nick":"bnoordhuis","message":"i care","date":"2013-08-26T14:34:48.132Z","type":"message"}
{"nick":"bnoordhuis","message":"i've been working hard to reduce the number of Persistent handles","date":"2013-08-26T14:34:58.216Z","type":"message"}
{"nick":"Domenic_","message":"if only we had C++ 11... `\"MyString\"_fobs`. http://en.cppreference.com/w/cpp/language/user_literal","date":"2013-08-26T14:35:00.269Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: doesn't v8 have something more efficient than persistent nowadays?","date":"2013-08-26T14:35:20.978Z","type":"message"}
{"nick":"kevinswiber","date":"2013-08-26T14:35:31.883Z","type":"join"}
{"nick":"bnoordhuis","message":"yes, and that's what i'm using in the multi-context branch","date":"2013-08-26T14:35:35.623Z","type":"message"}
{"nick":"bnoordhuis","message":"(eternal handles)","date":"2013-08-26T14:35:44.071Z","type":"message"}
{"nick":"bnoordhuis","message":"still, that only makes sense for symbols that are used often","date":"2013-08-26T14:35:55.339Z","type":"message"}
{"nick":"c4milo","date":"2013-08-26T14:38:56.832Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: you're secretly doing isolates","date":"2013-08-26T14:40:05.522Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but yeah it basically boils down to the same","date":"2013-08-26T14:40:15.166Z","type":"message"}
{"nick":"piscisaureus_","message":":)","date":"2013-08-26T14:40:16.643Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm working today on eradicating node_isolate so yeah :)","date":"2013-08-26T14:41:52.761Z","type":"message"}
{"nick":"piscisaureus_","message":"good!","date":"2013-08-26T14:44:41.857Z","type":"message"}
{"nick":"AvianFlu","date":"2013-08-26T14:45:19.750Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: DTLS -> very meh!","date":"2013-08-26T14:45:47.812Z","type":"message"}
{"nick":"bnoordhuis","message":"me too but i'm also not dead set against it","date":"2013-08-26T14:46:04.641Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: there's probably not even a handful of people that cares","date":"2013-08-26T14:46:08.633Z","type":"message"}
{"nick":"bnoordhuis","message":"not currently","date":"2013-08-26T14:46:22.587Z","type":"message"}
{"nick":"bnoordhuis","message":"but i expect that to change in a year or two","date":"2013-08-26T14:46:31.051Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: should I repeat your mantra, which is \"that's what modules are for\"","date":"2013-08-26T14:46:36.155Z","type":"message"}
{"nick":"piscisaureus_","message":"sure","date":"2013-08-26T14:46:37.649Z","type":"message"}
{"nick":"piscisaureus_","message":"let's add it in a year or two minus 2 weeks","date":"2013-08-26T14:46:49.482Z","type":"message"}
{"nick":"bnoordhuis","message":"modules, yeah","date":"2013-08-26T14:47:02.939Z","type":"message"}
{"nick":"bnoordhuis","message":"that's what i'd normally suggest","date":"2013-08-26T14:47:09.813Z","type":"message"}
{"nick":"bnoordhuis","message":"the issue is that you cannot really write an add-on for node that uses openssl","date":"2013-08-26T14:47:25.892Z","type":"message"}
{"nick":"piscisaureus_","message":"let migounette fix that :)","date":"2013-08-26T14:47:35.773Z","type":"message"}
{"nick":"bnoordhuis","message":"heh","date":"2013-08-26T14:47:40.848Z","type":"message"}
{"nick":"piscisaureus_","message":"it's not hard. The hard part is to make it maintainable","date":"2013-08-26T14:47:56.395Z","type":"message"}
{"nick":"piscisaureus_","message":"I think on most OS-es you can just re-export the entire library","date":"2013-08-26T14:48:09.009Z","type":"message"}
{"nick":"piscisaureus_","message":"windows is the only problem","date":"2013-08-26T14:48:13.727Z","type":"message"}
{"nick":"bnoordhuis","message":"and gyp","date":"2013-08-26T14:49:47.671Z","type":"message"}
{"nick":"piscisaureus_","message":"we'd need some sort of script that generates a file like this:","date":"2013-08-26T14:50:19.155Z","type":"message"}
{"nick":"piscisaureus_","message":"__declspec(dllexport) rsa_foobar_128_init(char* cat, int dog);","date":"2013-08-26T14:50:19.369Z","type":"message"}
{"nick":"bradleymeck","date":"2013-08-26T14:52:41.897Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: btw I don't think isaacs is going to be happy to put dtls on the roadmap in the short term","date":"2013-08-26T14:53:13.986Z","type":"message"}
{"nick":"paulfryzel","date":"2013-08-26T14:53:43.747Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: that's why i said v0.14 or v1.0 if ever","date":"2013-08-26T14:53:59.022Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: well - that is the short-term roadmap :)","date":"2013-08-26T14:54:13.543Z","type":"message"}
{"nick":"mmalecki","message":"hey guys","date":"2013-08-26T14:54:16.317Z","type":"message"}
{"nick":"bnoordhuis","message":"i'd be happy with pushing it into a module though","date":"2013-08-26T14:54:18.016Z","type":"message"}
{"nick":"bnoordhuis","message":"the thing is, that needs to be made possible first :)","date":"2013-08-26T14:54:28.016Z","type":"message"}
{"nick":"mmalecki","message":"what do you think would be a  good uv API for SO_REUSEPORT?","date":"2013-08-26T14:54:28.227Z","type":"message"}
{"nick":"pachet","reason":"Ping timeout: 240 seconds","date":"2013-08-26T14:55:02.536Z","type":"quit"}
{"nick":"bnoordhuis","message":"mmalecki: fd = socket(AF_INET, SOCK_DGRAM, 0); setsockopt(fd, SOL_SOCKET, SO_REUSEPORT, &on, sizeof(on)); uv_udp_open(handle, fd);","date":"2013-08-26T14:55:12.788Z","type":"message"}
{"nick":"mmalecki","message":"I came up with https://github.com/mmalecki/libuv/commit/a8cab4a089a63ac3873586fa61860a61bc9786b6 but it requires changing","date":"2013-08-26T14:55:17.908Z","type":"message"}
{"nick":"mmalecki","message":"*changing API","date":"2013-08-26T14:55:23.494Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: heh, okay","date":"2013-08-26T14:55:31.836Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: no interest in adding a uv function?","date":"2013-08-26T14:55:41.396Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: well... the thing is that it only works on linux >= 3.9","date":"2013-08-26T14:56:10.276Z","type":"message"}
{"nick":"bnoordhuis","message":"at least, i'm assuming you want the linux behavior of sharing the port","date":"2013-08-26T14:56:19.720Z","type":"message"}
{"nick":"bnoordhuis","message":"not the BSD version that is basically SO_REUSEADDR","date":"2013-08-26T14:56:36.040Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: yes","date":"2013-08-26T14:56:38.946Z","type":"message"}
{"nick":"piscisaureus_","message":"int val = 1;","date":"2013-08-26T14:56:42.064Z","type":"message"}
{"nick":"piscisaureus_","message":"setsockopt(fd, SOL_SOCKET, SO_REUSEPORT, &val, sizeof val);","date":"2013-08-26T14:56:42.276Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-26T14:56:43.685Z","type":"quit"}
{"nick":"bnoordhuis","message":"right","date":"2013-08-26T14:56:49.655Z","type":"message"}
{"nick":"piscisaureus_","message":"^-- mmalecki good api","date":"2013-08-26T14:56:51.533Z","type":"message"}
{"nick":"mmalecki","message":"piscisaureus_: heh","date":"2013-08-26T14:57:02.627Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: already beat you to it","date":"2013-08-26T14:57:10.076Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: there's no reasonabl way to simulate the linux 3.9 behavior on older kernels or other platforms","date":"2013-08-26T14:57:43.319Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: dang. I hear you are always that fast.","date":"2013-08-26T14:57:46.029Z","type":"message"}
{"nick":"jmar777","reason":"Read error: Connection reset by peer","date":"2013-08-26T14:57:52.364Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-26T14:58:18.826Z","type":"join"}
{"nick":"kevinswiber","date":"2013-08-26T15:09:19.822Z","type":"join"}
{"nick":"pachet","date":"2013-08-26T15:11:55.151Z","type":"join"}
{"nick":"pachet","new_nick":"Guest25414","date":"2013-08-26T15:12:18.237Z","type":"nick"}
{"nick":"Guest25414","reason":"Read error: Connection reset by peer","date":"2013-08-26T15:12:55.023Z","type":"quit"}
{"nick":"pachet","date":"2013-08-26T15:14:13.883Z","type":"join"}
{"nick":"TooTallNate","date":"2013-08-26T15:15:19.410Z","type":"join"}
{"nick":"TooTallNate","reason":"Ping timeout: 240 seconds","date":"2013-08-26T15:19:38.146Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 264 seconds","date":"2013-08-26T15:23:19.033Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #481 \u00037UNSTABLE\u000f smartos-x64 (11/636) osx-ia32 (4/636) smartos-ia32 (10/636) osx-x64 (1/636) http://jenkins.nodejs.org/job/nodejs-master/481/","date":"2013-08-26T15:23:34.685Z","type":"message"}
{"nick":"stagas","date":"2013-08-26T15:27:30.697Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-26T15:28:56.971Z","type":"quit"}
{"nick":"leonvv","date":"2013-08-26T15:31:23.905Z","type":"join"}
{"nick":"isaacs","message":"piscisaureus_: dtls?  why would we put that in core?","date":"2013-08-26T15:36:16.241Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: i know that it's been asked for, but i don't see why it can't be in userland.","date":"2013-08-26T15:36:26.859Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: bnoordhuis knows","date":"2013-08-26T15:36:36.013Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: ?","date":"2013-08-26T15:36:39.764Z","type":"message"}
{"nick":"isaacs","action":"read the scrollback","date":"2013-08-26T15:40:17.238Z","type":"action"}
{"nick":"bnoordhuis","message":"isaacs: because it's probably going to be big in a year or two and because you can't really do it from a userland module right now","date":"2013-08-26T15:40:18.616Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yes, we should fix THAT, then","date":"2013-08-26T15:40:25.381Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: the \"inability to use openssl in a module realistically\"","date":"2013-08-26T15:40:35.757Z","type":"message"}
{"nick":"bnoordhuis","message":"easier said than done","date":"2013-08-26T15:40:45.785Z","type":"message"}
{"nick":"bnoordhuis","message":"but don't forget the other part","date":"2013-08-26T15:40:58.128Z","type":"message"}
{"nick":"isaacs","message":"that it's going to be big in a year?","date":"2013-08-26T15:41:14.227Z","type":"message"}
{"nick":"bnoordhuis","message":"that said, i don't have a really strong opinion","date":"2013-08-26T15:41:14.442Z","type":"message"}
{"nick":"bnoordhuis","message":"well, maybe i do. i'd put it on the same level as importance of, say, ECDH cipher or GCM mode support","date":"2013-08-26T15:42:16.907Z","type":"message"}
{"nick":"isaacs","message":"there are good reasons to make openssl easier to bind against propelry","date":"2013-08-26T15:42:46.917Z","type":"message"}
{"nick":"isaacs","message":"and by \"easier\", i mostly mean \"possible\"","date":"2013-08-26T15:42:58.346Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, but once again, easier said than done","date":"2013-08-26T15:44:08.939Z","type":"message"}
{"nick":"bnoordhuis","message":"i could fix the unices","date":"2013-08-26T15:44:16.621Z","type":"message"}
{"nick":"bnoordhuis","message":"but i believe piscisaureus_ has tried twice to get it to work on windows without success","date":"2013-08-26T15:44:30.470Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: ^ that's correct, right?","date":"2013-08-26T15:44:52.359Z","type":"message"}
{"nick":"Domenic_","message":"all you have to do is somehow get me emotionally invested in a project that desparately needs native openssl support to succeed","date":"2013-08-26T15:44:52.571Z","type":"message"}
{"nick":"piscisaureus_","message":"StringBytes has a nice vulnerability","date":"2013-08-26T15:44:59.750Z","type":"message"}
{"nick":"Domenic_","message":"and then watch a bunch of bug reports file in from poor windows users trying to get it to work","date":"2013-08-26T15:45:03.143Z","type":"message"}
{"nick":"Domenic_","message":"and then i will get so frustrated i will make it happen, somehow","date":"2013-08-26T15:45:13.393Z","type":"message"}
{"nick":"bnoordhuis","message":"Domenic_: well, go for it. you have my blessing :)","date":"2013-08-26T15:45:28.008Z","type":"message"}
{"nick":"Domenic_","message":"bnoordhuis: nobody's managed step 1 yet, like they did for vm :P","date":"2013-08-26T15:45:44.218Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-26T15:47:21.294Z","type":"quit"}
{"nick":"Benvie","reason":"Ping timeout: 245 seconds","date":"2013-08-26T15:48:21.694Z","type":"quit"}
{"nick":"isaacs","message":"piscisaureus_: oh?","date":"2013-08-26T15:49:37.242Z","type":"message"}
{"nick":"piscisaureus_","message":"well - I don't know if it's exploitable in any meaningful way","date":"2013-08-26T15:49:51.850Z","type":"message"}
{"nick":"piscisaureus_","message":"but the assumption is that ToString() returns a constant value","date":"2013-08-26T15:50:00.332Z","type":"message"}
{"nick":"piscisaureus_","message":"because if you call StringBytes::StorageSize(bar, UTF8) it will call bar->ToString()","date":"2013-08-26T15:50:28.588Z","type":"message"}
{"nick":"piscisaureus_","message":"and then when you convert it'll call that function again","date":"2013-08-26T15:50:40.799Z","type":"message"}
{"nick":"piscisaureus_","message":"that assumption is normally valid unless it's not :)","date":"2013-08-26T15:51:05.361Z","type":"message"}
{"nick":"bnoordhuis","message":"that can only happen when bar is reassigned between the two calls, right?","date":"2013-08-26T15:52:02.338Z","type":"message"}
{"nick":"piscisaureus_","message":"no you could do","date":"2013-08-26T15:53:31.228Z","type":"message"}
{"nick":"piscisaureus_","message":"bar = new MyClass()","date":"2013-08-26T15:53:38.164Z","type":"message"}
{"nick":"piscisaureus_","message":"bar.prototype.toString = function() { return global.something += 'xyz' }","date":"2013-08-26T15:53:53.084Z","type":"message"}
{"nick":"piscisaureus_","message":"er well","date":"2013-08-26T15:54:11.993Z","type":"message"}
{"nick":"piscisaureus_","message":"you get the idea","date":"2013-08-26T15:54:14.175Z","type":"message"}
{"nick":"bajtos","date":"2013-08-26T15:54:20.865Z","type":"join"}
{"nick":"piscisaureus_","message":"javascript is hard","date":"2013-08-26T15:54:21.993Z","type":"message"}
{"nick":"bnoordhuis","message":"ah... StorageSize() doesn't check bar is a string?","date":"2013-08-26T15:54:31.715Z","type":"message"}
{"nick":"bnoordhuis","message":"right","date":"2013-08-26T15:54:39.868Z","type":"message"}
{"nick":"piscisaureus_","message":"it does - it calls ToString() always","date":"2013-08-26T15:54:45.424Z","type":"message"}
{"nick":"amartens","date":"2013-08-26T15:54:57.609Z","type":"join"}
{"nick":"piscisaureus_","message":"StorageSize should probably take a Local<String> and checking/coercing types should be left to the callert","date":"2013-08-26T15:55:13.597Z","type":"message"}
{"nick":"bnoordhuis","message":"\"callert\" :)  been mingling with rotterdammers, bertje?","date":"2013-08-26T15:55:55.784Z","type":"message"}
{"nick":"piscisaureus_","message":"heh","date":"2013-08-26T15:56:34.984Z","type":"message"}
{"nick":"piscisaureus_","message":"ken je effe gaan legge","date":"2013-08-26T15:56:56.088Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: https://gist.github.com/isaacs/6343070 fixes?","date":"2013-08-26T15:56:56.357Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well yeah, as long as we compile with assertions on :)","date":"2013-08-26T15:57:21.818Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: which we do","date":"2013-08-26T15:57:27.816Z","type":"message"}
{"nick":"piscisaureus_","message":"on unix","date":"2013-08-26T15:57:31.582Z","type":"message"}
{"nick":"bnoordhuis","message":"it's bad style to rely on !defined(NDEBUG)","date":"2013-08-26T15:57:46.659Z","type":"message"}
{"nick":"piscisaureus_","message":"we should do as v8","date":"2013-08-26T15:57:56.510Z","type":"message"}
{"nick":"bnoordhuis","message":"ASSERT and CHECK macros?","date":"2013-08-26T15:58:04.910Z","type":"message"}
{"nick":"piscisaureus_","message":"have \"classic\" asserts that are only in debug builds","date":"2013-08-26T15:58:11.929Z","type":"message"}
{"nick":"piscisaureus_","message":"and CHECK macros that are always on","date":"2013-08-26T15:58:16.003Z","type":"message"}
{"nick":"bnoordhuis","message":"agreed","date":"2013-08-26T15:58:29.417Z","type":"message"}
{"nick":"isaacs","message":"sure, i'm fine with that.","date":"2013-08-26T15:58:37.785Z","type":"message"}
{"nick":"isaacs","message":"at the moment, we use assert() in this way all over the codebase.","date":"2013-08-26T15:58:44.815Z","type":"message"}
{"nick":"isaacs","message":"and windows, well...","date":"2013-08-26T15:58:52.057Z","type":"message"}
{"nick":"isaacs","message":"it's a bit more loosey","date":"2013-08-26T15:58:56.175Z","type":"message"}
{"nick":"piscisaureus_","message":"I know, but I tend to write a lot of asserts in my code","date":"2013-08-26T15:58:56.938Z","type":"message"}
{"nick":"c4milo","date":"2013-08-26T15:58:57.146Z","type":"join"}
{"nick":"piscisaureus_","message":"most of them are pointless to have a in a release build","date":"2013-08-26T15:59:12.946Z","type":"message"}
{"nick":"isaacs","message":"most times that i've thought that, i've ended up being proven wrong","date":"2013-08-26T15:59:28.016Z","type":"message"}
{"nick":"isaacs","message":"i'm a big fan of asserts in production builds.","date":"2013-08-26T15:59:32.714Z","type":"message"}
{"nick":"piscisaureus_","message":"but there are some asserts that we really rely on now (and I am pretty sure they're off on windows atm)","date":"2013-08-26T15:59:38.562Z","type":"message"}
{"nick":"isaacs","message":"they used to be off even in javascript in release builds.","date":"2013-08-26T16:00:00.027Z","type":"message"}
{"nick":"piscisaureus_","message":"v8 actually has 3 levels","date":"2013-08-26T16:00:13.147Z","type":"message"}
{"nick":"piscisaureus_","message":"they also have \"slow asserts\"","date":"2013-08-26T16:00:17.920Z","type":"message"}
{"nick":"isaacs","message":"but if there ever was a case where the cost is worth the benefit, asserts are it.","date":"2013-08-26T16:00:26.464Z","type":"message"}
{"nick":"piscisaureus_","message":"still I like the distinction between \"this is to catch bugs\" vs \"this is to be secure\"","date":"2013-08-26T16:00:53.307Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: the line is very subtle there.","date":"2013-08-26T16:01:06.673Z","type":"message"}
{"nick":"piscisaureus_","message":"\"this is to catch security bugs\"","date":"2013-08-26T16:01:22.866Z","type":"message"}
{"nick":"piscisaureus_","message":"agreed","date":"2013-08-26T16:01:25.737Z","type":"message"}
{"nick":"isaacs","message":"i like NOT having a line between \"this runs here\" and \"this runs on the server\"","date":"2013-08-26T16:01:33.845Z","type":"message"}
{"nick":"isaacs","message":"dev and prod should be identical.","date":"2013-08-26T16:01:43.873Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well, why don't we ship a debug build then?","date":"2013-08-26T16:01:58.202Z","type":"message"}
{"nick":"isaacs","message":"because it's hella slow","date":"2013-08-26T16:02:05.793Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: how do you think that happens? :)","date":"2013-08-26T16:02:16.844Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well - no optimizations for one. ok","date":"2013-08-26T16:02:30.818Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-08-26T16:02:35.814Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: but also the fact that most of the asserts in v8 are off","date":"2013-08-26T16:02:41.759Z","type":"message"}
{"nick":"isaacs","message":"it's not the assert() calls","date":"2013-08-26T16:02:42.923Z","type":"message"}
{"nick":"isaacs","message":"at least, not the assert() calls in node","date":"2013-08-26T16:02:50.002Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-26T16:13:33.253Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-08-26T16:13:54.272Z","type":"quit"}
{"nick":"saghul","message":"re DTLS: WebRTC datachannels run on DTLS over SCTP, someone may want to write a server with node I guess","date":"2013-08-26T16:16:21.361Z","type":"message"}
{"nick":"hz","date":"2013-08-26T16:17:29.499Z","type":"quit"}
{"nick":"dap","date":"2013-08-26T16:27:51.864Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-26T16:31:19.561Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-26T16:31:22.046Z","type":"quit"}
{"nick":"icarot","reason":"Remote host closed the connection","date":"2013-08-26T16:34:36.860Z","type":"quit"}
{"nick":"leonvv","reason":"Remote host closed the connection","date":"2013-08-26T16:38:40.836Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-26T16:40:16.200Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-26T16:40:28.007Z","type":"join"}
{"nick":"Brett19","reason":"Read error: Connection reset by peer","date":"2013-08-26T16:44:08.375Z","type":"quit"}
{"nick":"Brett19","date":"2013-08-26T16:45:58.921Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-08-26T16:49:06.956Z","type":"quit"}
{"nick":"kevinswiber","date":"2013-08-26T16:55:11.335Z","type":"join"}
{"nick":"groundwater","date":"2013-08-26T16:56:24.534Z","type":"join"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-08-26T17:01:15.328Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-08-26T17:09:05.653Z","type":"join"}
{"nick":"AvianFlu_","date":"2013-08-26T17:13:16.161Z","type":"join"}
{"nick":"dominictarr","date":"2013-08-26T17:15:57.680Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 260 seconds","date":"2013-08-26T17:16:35.925Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-08-26T17:17:11.249Z","type":"join"}
{"nick":"leonvv","date":"2013-08-26T17:17:31.445Z","type":"join"}
{"nick":"pachet","reason":"Read error: Operation timed out","date":"2013-08-26T17:25:05.596Z","type":"quit"}
{"nick":"brson","date":"2013-08-26T17:25:51.072Z","type":"join"}
{"nick":"tjfontaine","message":"bnoordhuis: any arguments with upgrading v8 to 3.20.17?","date":"2013-08-26T17:28:20.935Z","type":"message"}
{"nick":"othiym23`","new_nick":"othiym23","date":"2013-08-26T17:32:04.248Z","type":"nick"}
{"nick":"AvianFlu_","new_nick":"AvianFlu","date":"2013-08-26T17:35:12.232Z","type":"nick"}
{"nick":"bnoordhuis","message":"tjfontaine: not from me","date":"2013-08-26T17:36:41.419Z","type":"message"}
{"nick":"amartens","date":"2013-08-26T17:37:28.350Z","type":"join"}
{"nick":"pachet","date":"2013-08-26T17:38:07.807Z","type":"join"}
{"nick":"tjfontaine","message":"bnoordhuis: ok, I shall do that today then","date":"2013-08-26T17:38:43.610Z","type":"message"}
{"nick":"st_luke","date":"2013-08-26T17:44:30.087Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 240 seconds","date":"2013-08-26T17:49:26.543Z","type":"quit"}
{"nick":"indutny","message":"hey people","date":"2013-08-26T17:49:36.697Z","type":"message"}
{"nick":"indutny","message":"what are we doing today?","date":"2013-08-26T17:49:47.066Z","type":"message"}
{"nick":"hueniverse","message":"I've been playing with 0.11 over the weekend. Got stuck on two stream bugs: https://github.com/joyent/node/issues/6119 and https://github.com/joyent/node/issues/6118","date":"2013-08-26T17:52:26.448Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-08-26T17:59:11.697Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-08-26T18:01:50.538Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #197 \u00037UNSTABLE\u000f windows (3/193) smartos (10/192) http://jenkins.nodejs.org/job/libuv-master/197/","date":"2013-08-26T18:02:06.577Z","type":"message"}
{"nick":"DrPizza_","reason":"Ping timeout: 240 seconds","date":"2013-08-26T18:04:49.657Z","type":"quit"}
{"nick":"othiym23","message":"so process.on('exit') is intended for synchronous cleanup","date":"2013-08-26T18:15:19.609Z","type":"message"}
{"nick":"bradleymeck","message":"yep, its a last ditch effort situation, I would not rely on it though","date":"2013-08-26T18:15:53.249Z","type":"message"}
{"nick":"othiym23","message":"is it reasonable to perform async I/O inside SIGINT / SIGKILL handlers as long as the expectation is that those will terminate in a timely fashion?","date":"2013-08-26T18:16:05.116Z","type":"message"}
{"nick":"bradleymeck","message":"it won't fire if someone does a segfault etc.","date":"2013-08-26T18:16:15.717Z","type":"message"}
{"nick":"othiym23","message":"yeah","date":"2013-08-26T18:16:23.930Z","type":"message"}
{"nick":"othiym23","message":"I'm just trying to figure out if it's sane to install a handler to flush any transaction data from the New Relic agent on normal shutdown","date":"2013-08-26T18:16:44.271Z","type":"message"}
{"nick":"othiym23","message":"hm, but that still wouldn't catch e.g. mocha or tap runs","date":"2013-08-26T18:17:23.666Z","type":"message"}
{"nick":"othiym23","message":"maybe I could do a fs.writeSync to dump state and load it on startup if it's around","date":"2013-08-26T18:17:40.083Z","type":"message"}
{"nick":"ecr","date":"2013-08-26T18:17:46.160Z","type":"join"}
{"nick":"trevnorris","message":"morning","date":"2013-08-26T18:23:48.803Z","type":"message"}
{"nick":"othiym23","message":"morning","date":"2013-08-26T18:24:34.409Z","type":"message"}
{"nick":"bradleymeck","message":"othiym23: been wondering about spawning a child proc w/ shared fd and detecting death via fd close, no new procs for new relic agents?","date":"2013-08-26T18:24:52.210Z","type":"message"}
{"nick":"othiym23","message":"bradleymeck: for the moment, no","date":"2013-08-26T18:25:14.758Z","type":"message"}
{"nick":"othiym23","message":"bradleymeck: it's just a pure-JS parasite attached to the side of the instrumented app's process","date":"2013-08-26T18:25:39.166Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: i'll assume these failures are for other reason: http://jenkins.nodejs.org/job/node-pullrequest/1075/testReport/","date":"2013-08-26T18:25:41.167Z","type":"message"}
{"nick":"brson","message":"which build system does libuv currently support mingw with? we've had some problems trying to use gyp","date":"2013-08-26T18:25:51.092Z","type":"message"}
{"nick":"tjfontaine","message":"# Error: listen EADDRINUSE","date":"2013-08-26T18:26:26.608Z","type":"message"}
{"nick":"tjfontaine","message":"somehow got caught by two things running at the same time, odd doesn't usually happen","date":"2013-08-26T18:26:39.844Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: thanks","date":"2013-08-26T18:27:03.182Z","type":"message"}
{"nick":"trevnorris","message":"then in that case anyone have a problem w/ https://github.com/joyent/node/pull/6124","date":"2013-08-26T18:27:09.221Z","type":"message"}
{"nick":"mikeal","date":"2013-08-26T18:29:47.596Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #182 \u00037UNSTABLE\u000f smartos-x64 (12/636) smartos-ia32 (8/636) linux-x64 (2/636) linux-ia32 (2/636) http://jenkins.nodejs.org/job/libuv-node-integration/182/","date":"2013-08-26T18:32:03.193Z","type":"message"}
{"nick":"julianduque","date":"2013-08-26T18:34:15.595Z","type":"join"}
{"nick":"dshaw_","date":"2013-08-26T18:34:59.132Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-26T18:41:09.901Z","type":"quit"}
{"nick":"trevnorris","message":"bn","date":"2013-08-26T18:47:13.780Z","type":"message"}
{"nick":"dshaw_","date":"2013-08-26T18:47:26.383Z","type":"join"}
{"nick":"tjfontaine","message":"tab complete win trevnorris","date":"2013-08-26T18:50:15.642Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-26T18:54:45.444Z","type":"nick"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-08-26T18:56:24.575Z","type":"quit"}
{"nick":"trevnorris","message":":)","date":"2013-08-26T18:56:34.656Z","type":"message"}
{"nick":"leonvv","reason":"Remote host closed the connection","date":"2013-08-26T19:00:32.613Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-08-26T19:01:28.860Z","type":"join"}
{"nick":"ecr1","date":"2013-08-26T19:11:09.031Z","type":"join"}
{"nick":"ecr","reason":"Ping timeout: 245 seconds","date":"2013-08-26T19:12:05.345Z","type":"quit"}
{"nick":"trevnorris","message":"review. anyone :(","date":"2013-08-26T19:14:40.696Z","type":"message"}
{"nick":"tjfontaine","message":"it seems fine at first glance, but I honestly haven't looked at it in depth","date":"2013-08-26T19:15:00.843Z","type":"message"}
{"nick":"stagas","reason":"Ping timeout: 276 seconds","date":"2013-08-26T19:16:48.670Z","type":"quit"}
{"nick":"trevnorris","message":"it's pretty straight forward. just allowing a super cheap way of returning an empty buffer instance.","date":"2013-08-26T19:16:51.925Z","type":"message"}
{"nick":"groundwater","reason":"Ping timeout: 256 seconds","date":"2013-08-26T19:17:04.261Z","type":"quit"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-08-26T19:17:08.426Z","type":"quit"}
{"nick":"trevnorris","message":"wouldn't have even noticed it weren't it for the util.is* functions","date":"2013-08-26T19:17:17.197Z","type":"message"}
{"nick":"groundwater","date":"2013-08-26T19:19:03.852Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #273 \u00037UNSTABLE\u000f windows-x64 (22/636) windows-ia32 (23/636) http://jenkins.nodejs.org/job/nodejs-master-windows/273/","date":"2013-08-26T19:27:59.060Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-08-26T19:35:11.285Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-08-26T19:35:50.173Z","type":"quit"}
{"nick":"ecr1","reason":"Quit: ecr1","date":"2013-08-26T19:37:09.009Z","type":"quit"}
{"nick":"ecr","date":"2013-08-26T19:39:20.264Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-26T19:39:49.553Z","type":"quit"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-26T19:41:35.466Z","type":"quit"}
{"nick":"amartens","date":"2013-08-26T19:48:03.309Z","type":"join"}
{"nick":"mordy__","message":"hrm, does getPropertyNames() return a copy of the keys, or does it point to some internal structure.. the question being:","date":"2013-08-26T19:55:25.128Z","type":"message"}
{"nick":"mordy__","message":"can i rely on 'GetPropertyNames' to not be modified even if the object itself is modified?","date":"2013-08-26T19:55:43.284Z","type":"message"}
{"nick":"kevinswiber","date":"2013-08-26T19:58:28.503Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-26T19:59:12.675Z","type":"join"}
{"nick":"bnoordhuis","message":"brson: right now that's autotools. i actually deleted the Makefile.mingw this weekend but i can restore it if that makes life easier for you guys","date":"2013-08-26T20:00:12.309Z","type":"message"}
{"nick":"bnoordhuis","message":"mordy__: GetPropertyNames() makes a copy","date":"2013-08-26T20:01:14.866Z","type":"message"}
{"nick":"mordy__","message":"ah ok","date":"2013-08-26T20:01:23.342Z","type":"message"}
{"nick":"brson","message":"bnoordhuis: Makefile.mingw works without autotools? so we would use gyp on unix and plain make on windows?","date":"2013-08-26T20:01:25.677Z","type":"message"}
{"nick":"bnoordhuis","message":"brson: yes, if that works for you","date":"2013-08-26T20:02:09.462Z","type":"message"}
{"nick":"bnoordhuis","message":"ideally gyp should support mingw but alas, it doesn't yet","date":"2013-08-26T20:02:29.554Z","type":"message"}
{"nick":"brson","message":"bnoordhuis: yes, I think we can handle that","date":"2013-08-26T20:02:56.868Z","type":"message"}
{"nick":"brson","message":"acrichto: does that sound workable? ^","date":"2013-08-26T20:03:01.189Z","type":"message"}
{"nick":"brson","message":"bnoordhuis: sorry for the trouble, but we don't like autotools","date":"2013-08-26T20:03:11.989Z","type":"message"}
{"nick":"acrichto","message":"yeah definitely","date":"2013-08-26T20:03:12.806Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, i don't think anyone likes autotools","date":"2013-08-26T20:03:41.790Z","type":"message"}
{"nick":"bnoordhuis","message":"it's just this common standard the FOSS world converged on","date":"2013-08-26T20:04:13.985Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll restore the mingw makefile","date":"2013-08-26T20:04:23.981Z","type":"message"}
{"nick":"brson","message":"thanks!","date":"2013-08-26T20:04:29.011Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002d5ab1c1\u0002 : Revert \"build: remove mingw makefile\" - http://git.io/N3kaUw","date":"2013-08-26T20:06:38.739Z","type":"message"}
{"nick":"acrichto","message":"bnoordhuis: thanks!","date":"2013-08-26T20:07:27.724Z","type":"message"}
{"nick":"txdv","date":"2013-08-26T20:08:02.481Z","type":"join"}
{"nick":"bnoordhuis","message":"no problem :)","date":"2013-08-26T20:09:35.352Z","type":"message"}
{"nick":"acrichto","message":"bnoordhuis: the build should just be `make -f Makefile.mingw`, right?","date":"2013-08-26T20:11:22.169Z","type":"message"}
{"nick":"bnoordhuis","message":"acrichto: provided you have a cc and ar somewhere on the path, yes","date":"2013-08-26T20:13:56.950Z","type":"message"}
{"nick":"acrichto","message":"it seems to be failing with syntax problems at src/win/winapi.h about some expectation of a specifier-qualifier-list","date":"2013-08-26T20:14:36.866Z","type":"message"}
{"nick":"acrichto","message":"the syntax is \"typedef struct {} name, *name\"","date":"2013-08-26T20:14:47.081Z","type":"message"}
{"nick":"acrichto","message":"I wasn't even aware that the \", *name\" was valid syntax...","date":"2013-08-26T20:14:58.358Z","type":"message"}
{"nick":"bnoordhuis","message":"oh? what version mingw is that?","date":"2013-08-26T20:15:24.877Z","type":"message"}
{"nick":"bnoordhuis","message":"*version of","date":"2013-08-26T20:15:27.998Z","type":"message"}
{"nick":"acrichto","message":"hmm... I barely use windows at all, how do I check?","date":"2013-08-26T20:15:55.660Z","type":"message"}
{"nick":"bnoordhuis","message":"er, good question","date":"2013-08-26T20:16:26.288Z","type":"message"}
{"nick":"acrichto","message":"gcc is 4.5.2 if that helps","date":"2013-08-26T20:16:38.441Z","type":"message"}
{"nick":"bnoordhuis","message":"i confess i only cross-compile with the mingw package in yum","date":"2013-08-26T20:16:45.033Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #136 \u00037UNSTABLE\u000f windows-x64 (4/193) windows-ia32 (3/193) smartos-ia32 (4/192) smartos-x64 (4/192) http://jenkins.nodejs.org/job/libuv-master-gyp/136/","date":"2013-08-26T20:17:05.042Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: thanks for the review. and nice &args trick.","date":"2013-08-26T20:17:28.406Z","type":"message"}
{"nick":"trevnorris","message":"created a http server directly on top of tcp (so no keepAlive) and simple hello world is running ~55k req/sec. just trying to figure out where the bottlenecks are.","date":"2013-08-26T20:17:29.417Z","type":"message"}
{"nick":"trevnorris","message":"that's almost 2x's faster than http w/ keepAlive","date":"2013-08-26T20:17:48.111Z","type":"message"}
{"nick":"bnoordhuis","message":"very good :)","date":"2013-08-26T20:17:55.882Z","type":"message"}
{"nick":"bnoordhuis","message":"acrichto: fwiw, the mingw in fc18 is mingw64 with gcc 4.7.2","date":"2013-08-26T20:18:18.211Z","type":"message"}
{"nick":"bnoordhuis","message":"acrichto: i'll take patches that fix things with older versions :)","date":"2013-08-26T20:18:48.955Z","type":"message"}
{"nick":"acrichto","message":"huh, I thought I downloaded the most recent version from about a week ago","date":"2013-08-26T20:18:50.136Z","type":"message"}
{"nick":"acrichto","message":"bnoordhuis: cool, I'll investigate","date":"2013-08-26T20:19:04.255Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #198 \u00037UNSTABLE\u000f windows (5/193) smartos (11/192) http://jenkins.nodejs.org/job/libuv-master/198/","date":"2013-08-26T20:20:36.089Z","type":"message"}
{"nick":"acrichto","message":"bnoordhuis: ah, got it to build just a small movement in the header","date":"2013-08-26T20:21:16.652Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-26T20:22:01.534Z","type":"quit"}
{"nick":"austo","date":"2013-08-26T20:22:32.467Z","type":"join"}
{"nick":"st_luke","date":"2013-08-26T20:24:03.463Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #183 \u00037UNSTABLE\u000f smartos-x64 (11/636) smartos-ia32 (13/636) linux-x64 (1/636) linux-ia32 (1/636) http://jenkins.nodejs.org/job/libuv-node-integration/183/","date":"2013-08-26T20:52:00.700Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Trevor Norris\u000f \u00037master\u000f * \u0002873b5f8\u0002 : buffer: fix assert fail from JS API (+1 more commits) - http://git.io/_ph4oA","date":"2013-08-26T21:12:41.032Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: ping","date":"2013-08-26T21:19:46.681Z","type":"message"}
{"nick":"AvianFlu_","date":"2013-08-26T21:20:14.754Z","type":"join"}
{"nick":"AvianFlu_","reason":"Remote host closed the connection","date":"2013-08-26T21:20:28.560Z","type":"quit"}
{"nick":"EhevuTov","date":"2013-08-26T21:21:40.523Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: ping too :)","date":"2013-08-26T21:23:03.265Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: pong","date":"2013-08-26T21:23:23.185Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 246 seconds","date":"2013-08-26T21:23:26.052Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: so i've created a minimal tcp server that just responds with a simple http hello world. w/o keepAlive it's pushing 60k req/sec","date":"2013-08-26T21:24:05.308Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: but when I set socket.setKeepAlive() it runs slower. i'm not sure if i'm doing something wrong.","date":"2013-08-26T21:24:28.366Z","type":"message"}
{"nick":"creationix","message":"just learned about SO_REUSEPORT in linuc 3.9","date":"2013-08-26T21:25:43.802Z","type":"message"}
{"nick":"creationix","message":"*linux","date":"2013-08-26T21:25:47.793Z","type":"message"}
{"nick":"creationix","message":"it lets you create pre-fork style clusters without the master process","date":"2013-08-26T21:26:26.308Z","type":"message"}
{"nick":"creationix","message":"how hard would it be to add that to libuv?","date":"2013-08-26T21:26:41.653Z","type":"message"}
{"nick":"creationix","message":"I guess it would be an option to the uv_tcp_bind function","date":"2013-08-26T21:26:58.343Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #482 \u00037UNSTABLE\u000f smartos-x64 (11/636) osx-ia32 (2/636) smartos-ia32 (9/636) osx-x64 (1/636) http://jenkins.nodejs.org/job/nodejs-master/482/","date":"2013-08-26T21:27:42.204Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-26T21:29:32.274Z","type":"quit"}
{"nick":"Ralt_","new_nick":"Ralt","date":"2013-08-26T21:34:15.410Z","type":"nick"}
{"nick":"bnoordhuis","message":"creationix: you're the second one asking about that today, tim :)","date":"2013-08-26T21:34:29.989Z","type":"message"}
{"nick":"bnoordhuis","message":"creationix: the tl;dr is \"easy but we're not adding it\"\"","date":"2013-08-26T21:34:53.492Z","type":"message"}
{"nick":"bnoordhuis","message":"or at least not now","date":"2013-08-26T21:35:04.995Z","type":"message"}
{"nick":"bnoordhuis","message":"that said, you can prepare the socket manually and then create a handle with uv_tcp_open() or uv_udp_open()","date":"2013-08-26T21:36:09.404Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: pong","date":"2013-08-26T21:36:18.231Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: code?","date":"2013-08-26T21:36:43.846Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: also, are you doing setKeepAlive(boolean, number) to specify the flag and the timeout?","date":"2013-08-26T21:37:02.806Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: s/timeout/interval/","date":"2013-08-26T21:37:11.096Z","type":"message"}
{"nick":"trevnorris","message":"isaacs, bnoordhuis: https://gist.github.com/trevnorris/6346973","date":"2013-08-26T21:38:48.423Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-26T21:38:55.299Z","type":"quit"}
{"nick":"trevnorris","message":"the keep alive is commented out","date":"2013-08-26T21:39:05.532Z","type":"message"}
{"nick":"trevnorris","message":"i ran this with: wrk -c 32 -t 4 -d 10 'http://127.0.0.1:8012/'","date":"2013-08-26T21:39:37.418Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: nits: the cannonical http delimter is \\r\\n, not \\n","date":"2013-08-26T21:40:19.343Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: and it should send Connection: keep-alive\\r\\n in the head","date":"2013-08-26T21:40:30.674Z","type":"message"}
{"nick":"trevnorris","message":"ah, maybe that's it. thanks","date":"2013-08-26T21:40:41.378Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-26T21:41:43.672Z","type":"quit"}
{"nick":"isaacs","message":"trevnorris: so... also","date":"2013-08-26T21:42:04.122Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: trace this through","date":"2013-08-26T21:42:09.553Z","type":"message"}
{"nick":"isaacs","message":"the client connects, onConnect gets called","date":"2013-08-26T21:42:15.703Z","type":"message"}
{"nick":"isaacs","message":"you say \"keep this connection alive\"","date":"2013-08-26T21:42:22.864Z","type":"message"}
{"nick":"isaacs","message":"client says, \"ok\"","date":"2013-08-26T21:42:26.403Z","type":"message"}
{"nick":"isaacs","message":"(well, it doesn't, but presumably, it does keep the connection alive)","date":"2013-08-26T21:42:38.772Z","type":"message"}
{"nick":"isaacs","message":"client sends a request, you send one response.","date":"2013-08-26T21:42:48.682Z","type":"message"}
{"nick":"isaacs","message":"then hte client sends another request on the same connection, right?","date":"2013-08-26T21:42:58.213Z","type":"message"}
{"nick":"isaacs","message":"but, you're not parsing the incoming data to see that it's sent another req","date":"2013-08-26T21:43:22.652Z","type":"message"}
{"nick":"isaacs","message":"(also, you're sending the response before seeing the request, which is odd, if not exactly incorrect.)","date":"2013-08-26T21:43:39.092Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: the point was to see how quickly I could hit the server. don't actually care about the headers. not sure if that actually makes a difference.","date":"2013-08-26T21:44:16.003Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: well, let's say I'm wrk","date":"2013-08-26T21:44:30.923Z","type":"message"}
{"nick":"isaacs","message":"i connect, write one request","date":"2013-08-26T21:44:41.051Z","type":"message"}
{"nick":"isaacs","message":"you write one response","date":"2013-08-26T21:44:43.570Z","type":"message"}
{"nick":"isaacs","message":"then i write another request *on the same socket*","date":"2013-08-26T21:44:49.991Z","type":"message"}
{"nick":"isaacs","message":"and you... what?","date":"2013-08-26T21:44:54.742Z","type":"message"}
{"nick":"trevnorris","message":"well, won't wrk have registered it's sent another request? or do I need to send back an 'hey thanks, I  got that'?","date":"2013-08-26T21:45:29.247Z","type":"message"}
{"nick":"isaacs","message":"wrk should be printing out that thousands of requests are not being answered.","date":"2013-08-26T21:45:58.261Z","type":"message"}
{"nick":"isaacs","message":"i would think","date":"2013-08-26T21:46:02.461Z","type":"message"}
{"nick":"isaacs","message":"or it's not actually doing http keepalive","date":"2013-08-26T21:46:06.681Z","type":"message"}
{"nick":"qard","date":"2013-08-26T21:46:21.152Z","type":"join"}
{"nick":"trevnorris","message":"must not be, because says there're no errors","date":"2013-08-26T21:46:25.596Z","type":"message"}
{"nick":"qard","date":"2013-08-26T21:46:27.568Z","type":"part"}
{"nick":"bnoordhuis","message":"wrk's http parsing logic is extremely simple","date":"2013-08-26T21:47:10.771Z","type":"message"}
{"nick":"bnoordhuis","message":"you can fool it easily","date":"2013-08-26T21:47:21.611Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-08-26T21:47:26.920Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: what you should do is just keep writing the response over and over again","date":"2013-08-26T21:47:40.435Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: ie, have afterWrite() call write()","date":"2013-08-26T21:48:05.178Z","type":"message"}
{"nick":"bnoordhuis","message":"acrichto: left some comments on the PR. also, please sign the CLA :)","date":"2013-08-26T21:48:10.824Z","type":"message"}
{"nick":"isaacs","message":"\"Oh, you got that one?  Here's anotheR!\"","date":"2013-08-26T21:48:11.720Z","type":"message"}
{"nick":"trevnorris","message":"cool. i'll try that","date":"2013-08-26T21:48:18.350Z","type":"message"}
{"nick":"creationix","message":"bnoordhuis, sounds good","date":"2013-08-26T21:53:34.084Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: a more advanced approach would be to tally up the number of \\r\\n\\r\\n you get in the incoming socket, and write that many responses.","date":"2013-08-26T21:54:59.424Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: not that it'd matter for localhost benchmarking, of course, but if you're sending over a network, you'll save a lot of roundtrips","date":"2013-08-26T21:55:23.425Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: interesting. thanks for the tip.","date":"2013-08-26T21:55:36.453Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: still haven't gotten keepalive to work, but i'll get there :)","date":"2013-08-26T21:55:52.027Z","type":"message"}
{"nick":"trevnorris","message":"w/o it the simple case is running at 65k req/sec","date":"2013-08-26T21:56:03.533Z","type":"message"}
{"nick":"trevnorris","message":"a lot more than I would have expected.","date":"2013-08-26T21:56:09.452Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-26T22:01:40.865Z","type":"quit"}
{"nick":"isaacs","message":"trevnorris: in short, socket.setKeepAlive(true, 10000) says \"Send a KA packet every 10s if the socket has not had any other activity\"","date":"2013-08-26T22:01:51.589Z","type":"message"}
{"nick":"isaacs","message":"it's a heartbeat technique at the tcp level","date":"2013-08-26T22:02:03.949Z","type":"message"}
{"nick":"isaacs","message":"one side sends a KA, the other side sends an ACK","date":"2013-08-26T22:02:16.450Z","type":"message"}
{"nick":"isaacs","message":"if you don't get an ACK from the KA, you know that the socket died","date":"2013-08-26T22:02:24.660Z","type":"message"}
{"nick":"acrichto","message":"bnoordhuis: ok thanks! I think I've singed the CLA now and also just updated the pull","date":"2013-08-26T22:02:25.423Z","type":"message"}
{"nick":"isaacs","message":"more often, if you don't get an ACK, you get a RST","date":"2013-08-26T22:02:39.350Z","type":"message"}
{"nick":"isaacs","message":"ie, ECONNRESET","date":"2013-08-26T22:02:47.169Z","type":"message"}
{"nick":"isaacs","message":"if the other end restarted or something","date":"2013-08-26T22:03:05.918Z","type":"message"}
{"nick":"trevnorris","message":"ok cool","date":"2013-08-26T22:03:17.767Z","type":"message"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-08-26T22:03:45.905Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-26T22:04:37.538Z","type":"join"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2013-08-26T22:05:40.577Z","type":"quit"}
{"nick":"trevnorris","message":"oh hell.","date":"2013-08-26T22:06:56.439Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: ok. so don't understand the mechanics, but I was calling .close() before I had a chance to read data. but I thought that close would keep it alive until all data was read in anyways.","date":"2013-08-26T22:07:36.750Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: oh, ok","date":"2013-08-26T22:07:59.765Z","type":"message"}
{"nick":"trevnorris","message":"yeah. so onread was never getting called. just onconnection","date":"2013-08-26T22:08:21.062Z","type":"message"}
{"nick":"trevnorris","message":"hells yes!!!","date":"2013-08-26T22:11:08.341Z","type":"message"}
{"nick":"trevnorris","message":"120k req/sec","date":"2013-08-26T22:11:12.818Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: got it :)","date":"2013-08-26T22:11:15.105Z","type":"message"}
{"nick":"isaacs","message":"nice :)","date":"2013-08-26T22:11:30.863Z","type":"message"}
{"nick":"isaacs","message":"also, holy slow javascript, batman","date":"2013-08-26T22:11:39.203Z","type":"message"}
{"nick":"isaacs","message":":)","date":"2013-08-26T22:11:42.034Z","type":"message"}
{"nick":"trevnorris","message":"heh, yeah.","date":"2013-08-26T22:11:46.301Z","type":"message"}
{"nick":"trevnorris","message":"so now we know how much overhead http is adding :P","date":"2013-08-26T22:11:52.779Z","type":"message"}
{"nick":"isaacs","message":"oh, http parsing, also","date":"2013-08-26T22:13:38.322Z","type":"message"}
{"nick":"isaacs","message":"yeah, it's adding like 90% overhead","date":"2013-08-26T22:13:46.742Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: also, network","date":"2013-08-26T22:13:52.761Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: your test is probably more a test of wrk's limits than node's","date":"2013-08-26T22:14:03.285Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00029fc0066\u0002 : src: fix up unused/unordered imports - http://git.io/gw8vRA","date":"2013-08-26T22:14:28.153Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: it's good to know that all the req_wrap stuff to create the request isn't adding much overhead.","date":"2013-08-26T22:14:45.727Z","type":"message"}
{"nick":"trevnorris","message":"that's what I was mainly curious about","date":"2013-08-26T22:14:51.082Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: sure","date":"2013-08-26T22:14:58.162Z","type":"message"}
{"nick":"abraxas","date":"2013-08-26T22:16:29.285Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #274 \u00037UNSTABLE\u000f windows-x64 (21/636) windows-ia32 (23/636) http://jenkins.nodejs.org/job/nodejs-master-windows/274/","date":"2013-08-26T22:17:15.154Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: so, there's one thing I'd like to see if possible in stream_wrap. right now we're passing the req_wrap object so MakeCallback can grab the applicable callback, but that means we loose the ability to set the context of the function. if we could pass the client object as the callback context we could completely remove all closures.","date":"2013-08-26T22:17:16.375Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: interesting","date":"2013-08-26T22:18:02.796Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: we could also just put a reference from the req_wrap to the stream_wrap (or js Stream)","date":"2013-08-26T22:18:28.638Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: we have a lot of unnecessary closures anyway","date":"2013-08-26T22:18:45.240Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: yeah. i was writing an example to demonstrate performance gains w/o closures, then realized we can't do a tcp connection w/o a bunch of closures :P","date":"2013-08-26T22:19:25.398Z","type":"message"}
{"nick":"groundwater","reason":"Ping timeout: 245 seconds","date":"2013-08-26T22:19:36.657Z","type":"quit"}
{"nick":"isaacs","message":"kew","date":"2013-08-26T22:20:48.817Z","type":"message"}
{"nick":"abraxas","reason":"Ping timeout: 264 seconds","date":"2013-08-26T22:20:54.999Z","type":"quit"}
{"nick":"groundwater","date":"2013-08-26T22:21:49.802Z","type":"join"}
{"nick":"txdv","reason":"Ping timeout: 264 seconds","date":"2013-08-26T22:22:40.419Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #483 \u00034FAILURE\u000f osx-ia32 (4/636) osx-x64 (4/636) http://jenkins.nodejs.org/job/nodejs-master/483/","date":"2013-08-26T22:23:15.535Z","type":"message"}
{"nick":"tjfontaine","message":"hm","date":"2013-08-26T22:23:31.426Z","type":"message"}
{"nick":"tjfontaine","message":"oh jenkins.","date":"2013-08-26T22:23:53.952Z","type":"message"}
{"nick":"AvianFlu","date":"2013-08-26T22:26:08.361Z","type":"join"}
{"nick":"txdv","date":"2013-08-26T22:27:56.377Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00025d2434b\u0002 : unix, windows: add thread-local storage API - http://git.io/BOJARA","date":"2013-08-26T22:28:27.558Z","type":"message"}
{"nick":"bnoordhuis","message":"it's kind of a shame to go through to the PLT (twice) to do a TLS lookup","date":"2013-08-26T22:30:10.143Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: can you elaborate on the \"put a reference ...\" comment?","date":"2013-08-26T22:30:31.206Z","type":"message"}
{"nick":"bnoordhuis","message":"but what can you do? i don't really want to inline the functions into a header...","date":"2013-08-26T22:30:39.556Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: i mean, doesn't that stuf pass around an arbitrary js object?","date":"2013-08-26T22:31:45.029Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: why are we using closures?  why not just pass a link to the object around?","date":"2013-08-26T22:32:00.650Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: yeah. the req_wrap creates an new object with each request that contains the callbacks and also any domain information.","date":"2013-08-26T22:32:19.139Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: domains are why the new object has to be created. there is an optimization that could default to the \"default\" object if no domain, but that'd be non-trivial","date":"2013-08-26T22:32:46.610Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: what would be most efficient is if we initialized a class w/ all callbacks and stored those as persistents, then they could be passed directly to MakeCallback instead of retrieved from the req_wrap object.","date":"2013-08-26T22:35:10.315Z","type":"message"}
{"nick":"trevnorris","message":"but the only way I can think to do that is to tightly couple the Stream JS function and the Stream C++ class.","date":"2013-08-26T22:35:35.123Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: ping","date":"2013-08-26T22:36:41.830Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Alex Crichton\u000f \u00037master\u000f * \u0002b647c27\u0002 : windows: fix mingw build (+1 more commits) - http://git.io/nq4xWQ","date":"2013-08-26T22:36:55.625Z","type":"message"}
{"nick":"bnoordhuis","message":"acrichto: ^","date":"2013-08-26T22:37:28.761Z","type":"message"}
{"nick":"bnoordhuis","message":"acrichto: btw, for future reference, set your textwidth to 72 next time when writing a commit log","date":"2013-08-26T22:37:44.943Z","type":"message"}
{"nick":"bnoordhuis","message":"if you're a vim user, add this to your .vimrc -> autocmd BufEnter COMMIT_EDITMSG set textwidth=72","date":"2013-08-26T22:38:04.717Z","type":"message"}
{"nick":"bnoordhuis","message":"and enable colorcolumn if your vim supports that","date":"2013-08-26T22:38:23.447Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: pong","date":"2013-08-26T22:38:35.463Z","type":"message"}
{"nick":"trevnorris","message":"hooya for colorcolumn!","date":"2013-08-26T22:38:42.676Z","type":"message"}
{"nick":"bnoordhuis","message":"colorcolumn is nice :)","date":"2013-08-26T22:38:55.825Z","type":"message"}
{"nick":"bnoordhuis","message":"well, unless you're on a really slow ssh connection","date":"2013-08-26T22:39:11.041Z","type":"message"}
{"nick":"trevnorris","message":"i'll keep that in min","date":"2013-08-26T22:39:25.687Z","type":"message"}
{"nick":"trevnorris","message":"d","date":"2013-08-26T22:39:26.834Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: in stream_wrap.cc I see StreamWrapCallbacks::Self() that returns wrap()->object(), but then wrap()->object() is also just used in a lot of places.","date":"2013-08-26T22:39:28.158Z","type":"message"}
{"nick":"trevnorris","message":"i'll assume they do the same thing,","date":"2013-08-26T22:39:50.483Z","type":"message"}
{"nick":"trevnorris","message":"well, i mean. that's obvious, guess I don't see why they weren't all replaced","date":"2013-08-26T22:40:05.540Z","type":"message"}
{"nick":"bnoordhuis","message":"they do","date":"2013-08-26T22:40:05.756Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't know, truth be told. StreamWrapCallbacks::Self() is something fedor introduced","date":"2013-08-26T22:40:23.719Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok","date":"2013-08-26T22:40:29.217Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: also, you have any opposition to making the socket the context of the callback?","date":"2013-08-26T22:41:00.870Z","type":"message"}
{"nick":"trevnorris","message":"right now it's just going to waste and requires we use closures in js to get around it","date":"2013-08-26T22:41:12.797Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess you could replace them with Self(). same thing, less typing","date":"2013-08-26T22:41:18.979Z","type":"message"}
{"nick":"bnoordhuis","message":"what is your definition of 'callback'?","date":"2013-08-26T22:41:38.488Z","type":"message"}
{"nick":"trevnorris","message":"onread, oncomplete","date":"2013-08-26T22:41:55.740Z","type":"message"}
{"nick":"bnoordhuis","message":"and 'socket' is...? net#Socket?","date":"2013-08-26T22:42:12.710Z","type":"message"}
{"nick":"trevnorris","message":"oh, sorry. here in server.onconnect https://gist.github.com/trevnorris/6346973","date":"2013-08-26T22:42:56.981Z","type":"message"}
{"nick":"trevnorris","message":"you'll see how to do client.writeBuffer() i need to have onread in the onconnect closure?","date":"2013-08-26T22:43:15.371Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, you mean the HandleWrap object?","date":"2013-08-26T22:43:22.395Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-08-26T22:43:25.604Z","type":"message"}
{"nick":"bnoordhuis","message":"no objection from me","date":"2013-08-26T22:43:38.963Z","type":"message"}
{"nick":"trevnorris","message":"awesome. thanks.","date":"2013-08-26T22:43:45.190Z","type":"message"}
{"nick":"trevnorris","message":"that should flatten a lot of code","date":"2013-08-26T22:43:48.878Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, time for cereal and some papers on deforestation and LICM","date":"2013-08-26T22:47:46.103Z","type":"message"}
{"nick":"bnoordhuis","message":"have a good night guys","date":"2013-08-26T22:47:55.263Z","type":"message"}
{"nick":"trevnorris","message":"night ben","date":"2013-08-26T22:48:53.953Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-26T22:51:31.992Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-08-26T22:52:06.722Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-26T23:08:26.746Z","type":"join"}
{"nick":"paulfryzel","date":"2013-08-26T23:16:16.743Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2013-08-26T23:20:14.531Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-26T23:37:32.839Z","type":"quit"}
{"nick":"dshaw_","date":"2013-08-26T23:39:19.555Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #275 \u00037UNSTABLE\u000f windows-x64 (20/636) windows-ia32 (28/636) http://jenkins.nodejs.org/job/nodejs-master-windows/275/","date":"2013-08-26T23:39:41.799Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-26T23:39:58.414Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-26T23:41:17.505Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #137 \u00037UNSTABLE\u000f windows-x64 (4/194) windows-ia32 (4/194) smartos-ia32 (2/193) linux-x64 (1/193) smartos-x64 (3/193) http://jenkins.nodejs.org/job/libuv-master-gyp/137/","date":"2013-08-26T23:43:04.843Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-26T23:45:44.606Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #199 \u00037UNSTABLE\u000f linux (1/193) windows (7/194) smartos (11/193) http://jenkins.nodejs.org/job/libuv-master/199/","date":"2013-08-26T23:49:31.939Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-26T23:49:47.711Z","type":"quit"}
{"nick":"kellabyte","message":"damn missed bnoordhuis, meant to tell him I'm giving his code a shot :)","date":"2013-08-26T23:49:52.860Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-26T23:56:57.326Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-08-26T23:58:25.922Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-26T23:59:42.893Z","type":"quit"}
