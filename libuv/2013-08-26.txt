{"nick":"ircretary","date":"2013-08-26T00:00:08.334Z","type":"join"}
{"nick":"philips","reason":"Read error: Connection reset by peer","date":"2013-08-26T00:00:48.861Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-26T00:01:07.274Z","type":"quit"}
{"nick":"philips","date":"2013-08-26T00:01:38.647Z","type":"join"}
{"nick":"st_luke","date":"2013-08-26T00:03:55.830Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #135 \u00037UNSTABLE\u000f windows-x64 (3/193) windows-ia32 (3/193) smartos-ia32 (2/192) linux-x64 (2/192) linux-ia32 (2/192) smartos-x64 (3/192) http://jenkins.nodejs.org/job/libuv-master-gyp/135/","date":"2013-08-26T00:07:14.336Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-08-26T00:07:15.032Z","type":"quit"}
{"nick":"st_luke","reason":"Ping timeout: 245 seconds","date":"2013-08-26T00:07:56.657Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-08-26T00:33:53.340Z","type":"join"}
{"nick":"pachet","date":"2013-08-26T00:35:41.704Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-08-26T00:43:27.328Z","type":"quit"}
{"nick":"groundwater","date":"2013-08-26T00:48:57.235Z","type":"join"}
{"nick":"kazupon","date":"2013-08-26T01:03:39.010Z","type":"join"}
{"nick":"indexzero","date":"2013-08-26T01:21:34.214Z","type":"join"}
{"nick":"indexzero","reason":"Ping timeout: 264 seconds","date":"2013-08-26T01:28:43.014Z","type":"quit"}
{"nick":"abraxas","date":"2013-08-26T01:44:56.556Z","type":"join"}
{"nick":"swaj","reason":"Remote host closed the connection","date":"2013-08-26T02:11:58.040Z","type":"quit"}
{"nick":"stagas","date":"2013-08-26T02:23:59.521Z","type":"join"}
{"nick":"pachet","reason":"Quit: [ +++ ]","date":"2013-08-26T02:46:35.559Z","type":"quit"}
{"nick":"Guest42317","reason":"Read error: Connection reset by peer","date":"2013-08-26T02:46:41.981Z","type":"quit"}
{"nick":"pfox__","message":"so how does on get the result of a uv_fs_stat() call in the \"older\" API w/ uv_statbuf_t . ?","date":"2013-08-26T03:02:38.554Z","type":"message"}
{"nick":"pfox__","message":"is the ptr field in uv_fs_t pointing at the statbuf out on the heap somewhere?","date":"2013-08-26T03:03:02.749Z","type":"message"}
{"nick":"pfox__","message":"not seeing any docs...","date":"2013-08-26T03:03:06.060Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-26T03:38:34.465Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-26T03:58:55.477Z","type":"join"}
{"nick":"kazupon","date":"2013-08-26T04:08:59.282Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 268 seconds","date":"2013-08-26T04:17:42.108Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-26T04:18:05.279Z","type":"join"}
{"nick":"c4milo","date":"2013-08-26T05:03:48.943Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-26T05:10:42.448Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-08-26T05:26:04.600Z","type":"quit"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-08-26T05:46:26.055Z","type":"quit"}
{"nick":"Benvie","date":"2013-08-26T06:23:28.723Z","type":"join"}
{"nick":"rendar","date":"2013-08-26T06:27:58.597Z","type":"join"}
{"nick":"bajtos","date":"2013-08-26T06:32:39.173Z","type":"join"}
{"nick":"rendar","reason":"Ping timeout: 264 seconds","date":"2013-08-26T06:42:42.249Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-26T06:43:55.538Z","type":"quit"}
{"nick":"emilsedgh_","reason":"Changing host","date":"2013-08-26T06:44:27.477Z","type":"quit"}
{"nick":"emilsedgh_","date":"2013-08-26T06:44:27.692Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #176 \u00037UNSTABLE\u000f windows-x64 (9/597) windows-ia32 (9/597) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/176/","date":"2013-08-26T06:47:38.482Z","type":"message"}
{"nick":"hz","date":"2013-08-26T06:53:18.946Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-26T06:54:53.342Z","type":"nick"}
{"nick":"leonvv","date":"2013-08-26T07:10:05.457Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-26T07:59:00.586Z","type":"nick"}
{"nick":"acrichto","date":"2013-08-26T08:23:32.311Z","type":"join"}
{"nick":"dominictarr","date":"2013-08-26T08:30:49.665Z","type":"join"}
{"nick":"hz","reason":"Ping timeout: 260 seconds","date":"2013-08-26T08:53:31.986Z","type":"quit"}
{"nick":"hz","date":"2013-08-26T08:55:47.578Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 260 seconds","date":"2013-08-26T08:58:11.965Z","type":"quit"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-26T09:07:51.983Z","type":"quit"}
{"nick":"hz","reason":"Read error: Connection reset by peer","date":"2013-08-26T09:08:32.777Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-26T09:08:53.811Z","type":"nick"}
{"nick":"hz","date":"2013-08-26T09:09:37.998Z","type":"join"}
{"nick":"leonvv","reason":"Remote host closed the connection","date":"2013-08-26T09:10:49.458Z","type":"quit"}
{"nick":"bajtos","date":"2013-08-26T09:11:37.179Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-26T09:18:52.326Z","type":"nick"}
{"nick":"bnoordhuis","date":"2013-08-26T09:26:07.008Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-26T09:53:34.734Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-26T09:54:37.851Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-26T09:55:21.717Z","type":"quit"}
{"nick":"indutny","message":"morning","date":"2013-08-26T09:56:26.253Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-26T10:35:53.159Z","type":"quit"}
{"nick":"bnoordhuis","message":"hello fedor","date":"2013-08-26T10:46:28.978Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-08-26T10:47:46.002Z","type":"join"}
{"nick":"bnoordhuis","message":"ci on smartos seems to progressively get worse","date":"2013-08-26T10:49:33.469Z","type":"message"}
{"nick":"bnoordhuis","message":"we're up to 12 failures now for no good reason afaict","date":"2013-08-26T10:49:48.403Z","type":"message"}
{"nick":"bnoordhuis","message":"pfox__: re uv_fs_stat(), req->ptr points to an embedded struct stat","date":"2013-08-26T10:53:04.676Z","type":"message"}
{"nick":"bnoordhuis","message":"pfox__: with the new api, you can just use req->statbuf directly","date":"2013-08-26T10:53:16.426Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1448 \u00037UNSTABLE\u000f osx-ia32 (2/597) smartos-ia32 (5/597) osx-x64 (1/597) linux-x64 (3/597) smartos-x64 (8/597) linux-ia32 (3/597) http://jenkins.nodejs.org/job/nodejs-v0.10/1448/","date":"2013-08-26T10:57:37.217Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: morning","date":"2013-08-26T10:58:08.558Z","type":"message"}
{"nick":"trevnorris","message":"you too indutny ","date":"2013-08-26T11:00:35.999Z","type":"message"}
{"nick":"bnoordhuis","message":"hey trevor. up early today?","date":"2013-08-26T11:03:39.928Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: heh, no. just about to hit the sack.","date":"2013-08-26T11:06:24.136Z","type":"message"}
{"nick":"trevnorris","message":"just got involved in some performance testing and lost track of time.","date":"2013-08-26T11:06:53.431Z","type":"message"}
{"nick":"trevnorris","message":"setup a tcp server that just delivers valid http headers then closes the socket. runs at ~60k req/sec. using it for some internals testing.","date":"2013-08-26T11:08:06.710Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: part of what lead me to https://github.com/joyent/node/pull/6124","date":"2013-08-26T11:08:29.027Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, i saw the email","date":"2013-08-26T11:08:48.575Z","type":"message"}
{"nick":"trevnorris","message":"all those util.is* methods really pollute the --trace-* output","date":"2013-08-26T11:08:53.573Z","type":"message"}
{"nick":"trevnorris","message":"so more than anything just wanted to get rid of them.","date":"2013-08-26T11:09:02.696Z","type":"message"}
{"nick":"kazupon","date":"2013-08-26T11:09:58.185Z","type":"join"}
{"nick":"bnoordhuis","message":"oh, yeah - i agree heartily","date":"2013-08-26T11:10:00.282Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: Failing tests -- linux-ia32: 212, osx-ia32: 200, smartos-ia32: 203, linux-x64: 212, osx-x64: 201, smartos-x64: 253","date":"2013-08-26T11:10:43.471Z","type":"message"}
{"nick":"trevnorris","message":"whoa.","date":"2013-08-26T11:11:05.089Z","type":"message"}
{"nick":"indutny","message":"woooo","date":"2013-08-26T11:11:34.291Z","type":"message"}
{"nick":"indutny","message":"what was thet","date":"2013-08-26T11:11:36.783Z","type":"message"}
{"nick":"bnoordhuis","message":"throw new TypeError('must start with number, buffer, array or string'); <- that","date":"2013-08-26T11:12:00.747Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-08-26T11:12:08.595Z","type":"message"}
{"nick":"indutny","message":"ook","date":"2013-08-26T11:12:10.218Z","type":"message"}
{"nick":"trevnorris","message":"strange. must have left some of the undefined api calls in js land.","date":"2013-08-26T11:12:38.417Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: so what is your conclusion re: util.is*()?","date":"2013-08-26T11:12:58.063Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: they can't be inlined because of a context change, and they're making my performance tracing fugly. don't like them.","date":"2013-08-26T11:13:37.615Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah","date":"2013-08-26T11:14:47.846Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't want to be the \"told you so\" guy but...","date":"2013-08-26T11:15:03.417Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-08-26T11:15:30.220Z","type":"message"}
{"nick":"trevnorris","message":"there, suck on that Jenkins.","date":"2013-08-26T11:15:38.402Z","type":"message"}
{"nick":"trevnorris","message":"honestly i'm not using the checks in super hot code paths (e.g. the ticker code changes i'm doing)","date":"2013-08-26T11:16:26.837Z","type":"message"}
{"nick":"trevnorris","message":"too costly","date":"2013-08-26T11:16:29.619Z","type":"message"}
{"nick":"trevnorris","message":"alright, it's passing. off to sleep for a few hours. see you two in a bit.","date":"2013-08-26T11:19:33.912Z","type":"message"}
{"nick":"trevnorris","action":"&","date":"2013-08-26T11:19:36.555Z","type":"action"}
{"nick":"LOUDBOT","message":"HEY! IM TALKING TO YOU PUNK","date":"2013-08-26T11:19:37.223Z","type":"message"}
{"nick":"trevnorris","message":"LOUDBOT: bite me. i'm off to bed.","date":"2013-08-26T11:19:45.714Z","type":"message"}
{"nick":"LOUDBOT","message":"trevnorris: BACK IN MY DAY WE COMPILED HP.C FROM SOURCE AND SET THE PRINTERS TO SAY \"INSERT COIN\" OR \"HELP IM TRAPPED IN A PRINTER FACTORY\"","date":"2013-08-26T11:19:46.314Z","type":"message"}
{"nick":"bnoordhuis","message":"sleep tight trevor","date":"2013-08-26T11:21:52.627Z","type":"message"}
{"nick":"bnoordhuis","message":"http://coreperf.com/projects/rejit/ <- interesting","date":"2013-08-26T11:24:52.395Z","type":"message"}
{"nick":"piscisaureus_","message":"Hello, any v8 experts in the room","date":"2013-08-26T11:25:14.819Z","type":"message"}
{"nick":"piscisaureus_","message":"?","date":"2013-08-26T11:25:16.427Z","type":"message"}
{"nick":"piscisaureus_","message":"Is a cast of a v8 object with .As<Object>() safe?","date":"2013-08-26T11:25:32.240Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: if it's truly an Object, then yes","date":"2013-08-26T11:26:44.771Z","type":"message"}
{"nick":"piscisaureus_","message":"sure","date":"2013-08-26T11:26:52.008Z","type":"message"}
{"nick":"bnoordhuis","message":"if it's not, it'll assert in debug builds","date":"2013-08-26T11:26:55.626Z","type":"message"}
{"nick":"piscisaureus_","message":"and if it isn't","date":"2013-08-26T11:26:57.633Z","type":"message"}
{"nick":"piscisaureus_","message":"right","date":"2013-08-26T11:27:00.337Z","type":"message"}
{"nick":"piscisaureus_","message":"what will happen in release builds? crash?","date":"2013-08-26T11:28:13.414Z","type":"message"}
{"nick":"bnoordhuis","message":"that's one of the options, yes","date":"2013-08-26T11:28:41.416Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, groceries time. biab","date":"2013-08-26T11:31:14.390Z","type":"message"}
{"nick":"piscisaureus_","message":"I wonder what drove Chris Malinchak to write this song","date":"2013-08-26T11:35:09.526Z","type":"message"}
{"nick":"piscisaureus_","message":"\"oh baby, you're my constipation\"","date":"2013-08-26T11:35:17.642Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-08-26T11:35:55.020Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-26T11:40:55.603Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-26T12:13:40.773Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-08-26T12:14:58.643Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-08-26T12:31:46.230Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-26T12:32:06.300Z","type":"quit"}
{"nick":"icarot","date":"2013-08-26T12:32:22.786Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 264 seconds","date":"2013-08-26T12:40:26.838Z","type":"quit"}
{"nick":"pachet","date":"2013-08-26T13:02:18.436Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00029ac75d1\u0002 : src: remove pointless node_os.h header file - http://git.io/IqTgaA","date":"2013-08-26T13:15:55.330Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #480 \u00037UNSTABLE\u000f smartos-x64 (13/636) osx-ia32 (2/636) smartos-ia32 (6/636) http://jenkins.nodejs.org/job/nodejs-master/480/","date":"2013-08-26T13:31:41.776Z","type":"message"}
{"nick":"jmar777","date":"2013-08-26T13:32:27.849Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-08-26T13:35:28.745Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #272 \u00037UNSTABLE\u000f windows-x64 (19/636) windows-ia32 (19/636) http://jenkins.nodejs.org/job/nodejs-master-windows/272/","date":"2013-08-26T13:36:19.711Z","type":"message"}
{"nick":"c4milo","date":"2013-08-26T13:46:39.341Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: FIXED_ONE_BYTE_STRING is annoying. What about we add a separate class that just has a truckload of javascript string symbols?","date":"2013-08-26T13:46:41.651Z","type":"message"}
{"nick":"piscisaureus_","message":"... which can be shared between all .cc files?","date":"2013-08-26T13:47:16.857Z","type":"message"}
{"nick":"swaj","date":"2013-08-26T13:47:22.120Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: I guess it'd make your context work easier too","date":"2013-08-26T13:47:58.996Z","type":"message"}
{"nick":"Domenic_","message":"I don't understand why we didn't call it node::as_string or something.","date":"2013-08-26T13:52:41.699Z","type":"message"}
{"nick":"piscisaureus_","message":"that too","date":"2013-08-26T13:56:01.968Z","type":"message"}
{"nick":"piscisaureus_","message":"it'd be nice to always cache them though","date":"2013-08-26T13:56:08.328Z","type":"message"}
{"nick":"piscisaureus_","message":"we could do something like:","date":"2013-08-26T13:57:56.910Z","type":"message"}
{"nick":"piscisaureus_","message":"struct JSStrings {","date":"2013-08-26T13:57:57.127Z","type":"message"}
{"nick":"piscisaureus_","message":"  Cached<String> type;","date":"2013-08-26T13:57:57.127Z","type":"message"}
{"nick":"piscisaureus_","message":"  Cached<String> bar;","date":"2013-08-26T13:57:57.127Z","type":"message"}
{"nick":"piscisaureus_","message":"  Cached<String> fd;","date":"2013-08-26T13:57:57.127Z","type":"message"}
{"nick":"bajtos","date":"2013-08-26T13:57:57.127Z","type":"join"}
{"nick":"piscisaureus_","message":"  void Initialize() {","date":"2013-08-26T13:57:57.533Z","type":"message"}
{"nick":"piscisaureus_","message":"    type = Cached<String>::New(\"type\");","date":"2013-08-26T13:57:57.747Z","type":"message"}
{"nick":"piscisaureus_","message":"   ...","date":"2013-08-26T13:57:58.535Z","type":"message"}
{"nick":"piscisaureus_","message":"  }","date":"2013-08-26T13:57:58.747Z","type":"message"}
{"nick":"piscisaureus_","message":"};","date":"2013-08-26T13:57:59.533Z","type":"message"}
{"nick":"piscisaureus_","message":"etc","date":"2013-08-26T13:57:59.791Z","type":"message"}
{"nick":"piscisaureus_","message":"we could even generate the file","date":"2013-08-26T13:58:04.470Z","type":"message"}
{"nick":"piscisaureus_","message":"or use x-macros","date":"2013-08-26T13:58:21.725Z","type":"message"}
{"nick":"kenperkins","date":"2013-08-26T14:16:28.170Z","type":"join"}
{"nick":"bnoordhuis","message":"Cached<T> is gone in the multi-context branch actually","date":"2013-08-26T14:25:53.555Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-26T14:26:09.154Z","type":"quit"}
{"nick":"bnoordhuis","message":"and \"annoying\", well, i don't care - you can call String::NewFromOneByte(isolate, string, sizeof(string) - 1) manually if that makes you feel better","date":"2013-08-26T14:27:09.911Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: as to your 'class with symbols' idea, i suggest you look at the multi-context branch :)","date":"2013-08-26T14:28:35.789Z","type":"message"}
{"nick":"bnoordhuis","message":"anyway, FIXED_ONE_BYTE_STRING is not going away anytime soon. it has its place","date":"2013-08-26T14:29:51.594Z","type":"message"}
{"nick":"Domenic_","message":"probably best to just declare `inline Local<String> as_string(const char* s) { return FIXED_ONE_BYTE_STRING(node_isolate, s); }` at the top of the source file where you're feeling the pain.","date":"2013-08-26T14:31:00.473Z","type":"message"}
{"nick":"bnoordhuis","message":"Domenic_: that doesn't work. FIXED_ONE_BYTE_STRING is for string literals","date":"2013-08-26T14:31:28.569Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I was thinking along these lines -> https://gist.github.com/piscisaureus/6342035","date":"2013-08-26T14:31:56.621Z","type":"message"}
{"nick":"Domenic_","message":"bnoordhuis: what about it doesn't work?","date":"2013-08-26T14:32:08.704Z","type":"message"}
{"nick":"bnoordhuis","message":"Domenic_: because it translates to this -> v8::String::NewFromOneByte(isolate, s, sizeof(s) - 1)","date":"2013-08-26T14:32:43.023Z","type":"message"}
{"nick":"bnoordhuis","message":"that sizeof(s) == sizeof(const char*), i.e. 4 or 8 bytes","date":"2013-08-26T14:33:13.016Z","type":"message"}
{"nick":"Domenic_","message":"bnoordhuis: ah, right, so macro instead of function, annoying.","date":"2013-08-26T14:33:21.791Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: you're basically declaring a ton of Persistents there","date":"2013-08-26T14:34:25.156Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yup - I know","date":"2013-08-26T14:34:33.708Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but only doing it once, so who cares","date":"2013-08-26T14:34:39.704Z","type":"message"}
{"nick":"bnoordhuis","message":"i care","date":"2013-08-26T14:34:48.132Z","type":"message"}
{"nick":"bnoordhuis","message":"i've been working hard to reduce the number of Persistent handles","date":"2013-08-26T14:34:58.216Z","type":"message"}
{"nick":"Domenic_","message":"if only we had C++ 11... `\"MyString\"_fobs`. http://en.cppreference.com/w/cpp/language/user_literal","date":"2013-08-26T14:35:00.269Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: doesn't v8 have something more efficient than persistent nowadays?","date":"2013-08-26T14:35:20.978Z","type":"message"}
{"nick":"kevinswiber","date":"2013-08-26T14:35:31.883Z","type":"join"}
{"nick":"bnoordhuis","message":"yes, and that's what i'm using in the multi-context branch","date":"2013-08-26T14:35:35.623Z","type":"message"}
{"nick":"bnoordhuis","message":"(eternal handles)","date":"2013-08-26T14:35:44.071Z","type":"message"}
{"nick":"bnoordhuis","message":"still, that only makes sense for symbols that are used often","date":"2013-08-26T14:35:55.339Z","type":"message"}
{"nick":"c4milo","date":"2013-08-26T14:38:56.832Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: you're secretly doing isolates","date":"2013-08-26T14:40:05.522Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but yeah it basically boils down to the same","date":"2013-08-26T14:40:15.166Z","type":"message"}
{"nick":"piscisaureus_","message":":)","date":"2013-08-26T14:40:16.643Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm working today on eradicating node_isolate so yeah :)","date":"2013-08-26T14:41:52.761Z","type":"message"}
{"nick":"piscisaureus_","message":"good!","date":"2013-08-26T14:44:41.857Z","type":"message"}
{"nick":"AvianFlu","date":"2013-08-26T14:45:19.750Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: DTLS -> very meh!","date":"2013-08-26T14:45:47.812Z","type":"message"}
{"nick":"bnoordhuis","message":"me too but i'm also not dead set against it","date":"2013-08-26T14:46:04.641Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: there's probably not even a handful of people that cares","date":"2013-08-26T14:46:08.633Z","type":"message"}
{"nick":"bnoordhuis","message":"not currently","date":"2013-08-26T14:46:22.587Z","type":"message"}
{"nick":"bnoordhuis","message":"but i expect that to change in a year or two","date":"2013-08-26T14:46:31.051Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: should I repeat your mantra, which is \"that's what modules are for\"","date":"2013-08-26T14:46:36.155Z","type":"message"}
{"nick":"piscisaureus_","message":"sure","date":"2013-08-26T14:46:37.649Z","type":"message"}
{"nick":"piscisaureus_","message":"let's add it in a year or two minus 2 weeks","date":"2013-08-26T14:46:49.482Z","type":"message"}
{"nick":"bnoordhuis","message":"modules, yeah","date":"2013-08-26T14:47:02.939Z","type":"message"}
{"nick":"bnoordhuis","message":"that's what i'd normally suggest","date":"2013-08-26T14:47:09.813Z","type":"message"}
{"nick":"bnoordhuis","message":"the issue is that you cannot really write an add-on for node that uses openssl","date":"2013-08-26T14:47:25.892Z","type":"message"}
{"nick":"piscisaureus_","message":"let migounette fix that :)","date":"2013-08-26T14:47:35.773Z","type":"message"}
{"nick":"bnoordhuis","message":"heh","date":"2013-08-26T14:47:40.848Z","type":"message"}
{"nick":"piscisaureus_","message":"it's not hard. The hard part is to make it maintainable","date":"2013-08-26T14:47:56.395Z","type":"message"}
{"nick":"piscisaureus_","message":"I think on most OS-es you can just re-export the entire library","date":"2013-08-26T14:48:09.009Z","type":"message"}
{"nick":"piscisaureus_","message":"windows is the only problem","date":"2013-08-26T14:48:13.727Z","type":"message"}
{"nick":"bnoordhuis","message":"and gyp","date":"2013-08-26T14:49:47.671Z","type":"message"}
{"nick":"piscisaureus_","message":"we'd need some sort of script that generates a file like this:","date":"2013-08-26T14:50:19.155Z","type":"message"}
{"nick":"piscisaureus_","message":"__declspec(dllexport) rsa_foobar_128_init(char* cat, int dog);","date":"2013-08-26T14:50:19.369Z","type":"message"}
{"nick":"bradleymeck","date":"2013-08-26T14:52:41.897Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: btw I don't think isaacs is going to be happy to put dtls on the roadmap in the short term","date":"2013-08-26T14:53:13.986Z","type":"message"}
{"nick":"paulfryzel","date":"2013-08-26T14:53:43.747Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: that's why i said v0.14 or v1.0 if ever","date":"2013-08-26T14:53:59.022Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: well - that is the short-term roadmap :)","date":"2013-08-26T14:54:13.543Z","type":"message"}
{"nick":"mmalecki","message":"hey guys","date":"2013-08-26T14:54:16.317Z","type":"message"}
{"nick":"bnoordhuis","message":"i'd be happy with pushing it into a module though","date":"2013-08-26T14:54:18.016Z","type":"message"}
{"nick":"bnoordhuis","message":"the thing is, that needs to be made possible first :)","date":"2013-08-26T14:54:28.016Z","type":"message"}
{"nick":"mmalecki","message":"what do you think would be a  good uv API for SO_REUSEPORT?","date":"2013-08-26T14:54:28.227Z","type":"message"}
{"nick":"pachet","reason":"Ping timeout: 240 seconds","date":"2013-08-26T14:55:02.536Z","type":"quit"}
{"nick":"bnoordhuis","message":"mmalecki: fd = socket(AF_INET, SOCK_DGRAM, 0); setsockopt(fd, SOL_SOCKET, SO_REUSEPORT, &on, sizeof(on)); uv_udp_open(handle, fd);","date":"2013-08-26T14:55:12.788Z","type":"message"}
{"nick":"mmalecki","message":"I came up with https://github.com/mmalecki/libuv/commit/a8cab4a089a63ac3873586fa61860a61bc9786b6 but it requires changing","date":"2013-08-26T14:55:17.908Z","type":"message"}
{"nick":"mmalecki","message":"*changing API","date":"2013-08-26T14:55:23.494Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: heh, okay","date":"2013-08-26T14:55:31.836Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: no interest in adding a uv function?","date":"2013-08-26T14:55:41.396Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: well... the thing is that it only works on linux >= 3.9","date":"2013-08-26T14:56:10.276Z","type":"message"}
{"nick":"bnoordhuis","message":"at least, i'm assuming you want the linux behavior of sharing the port","date":"2013-08-26T14:56:19.720Z","type":"message"}
{"nick":"bnoordhuis","message":"not the BSD version that is basically SO_REUSEADDR","date":"2013-08-26T14:56:36.040Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: yes","date":"2013-08-26T14:56:38.946Z","type":"message"}
{"nick":"piscisaureus_","message":"int val = 1;","date":"2013-08-26T14:56:42.064Z","type":"message"}
{"nick":"piscisaureus_","message":"setsockopt(fd, SOL_SOCKET, SO_REUSEPORT, &val, sizeof val);","date":"2013-08-26T14:56:42.276Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-26T14:56:43.685Z","type":"quit"}
{"nick":"bnoordhuis","message":"right","date":"2013-08-26T14:56:49.655Z","type":"message"}
{"nick":"piscisaureus_","message":"^-- mmalecki good api","date":"2013-08-26T14:56:51.533Z","type":"message"}
{"nick":"mmalecki","message":"piscisaureus_: heh","date":"2013-08-26T14:57:02.627Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: already beat you to it","date":"2013-08-26T14:57:10.076Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: there's no reasonabl way to simulate the linux 3.9 behavior on older kernels or other platforms","date":"2013-08-26T14:57:43.319Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: dang. I hear you are always that fast.","date":"2013-08-26T14:57:46.029Z","type":"message"}
{"nick":"jmar777","reason":"Read error: Connection reset by peer","date":"2013-08-26T14:57:52.364Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-26T14:58:18.826Z","type":"join"}
{"nick":"kevinswiber","date":"2013-08-26T15:09:19.822Z","type":"join"}
{"nick":"pachet","date":"2013-08-26T15:11:55.151Z","type":"join"}
{"nick":"pachet","new_nick":"Guest25414","date":"2013-08-26T15:12:18.237Z","type":"nick"}
{"nick":"Guest25414","reason":"Read error: Connection reset by peer","date":"2013-08-26T15:12:55.023Z","type":"quit"}
{"nick":"pachet","date":"2013-08-26T15:14:13.883Z","type":"join"}
{"nick":"TooTallNate","date":"2013-08-26T15:15:19.410Z","type":"join"}
{"nick":"TooTallNate","reason":"Ping timeout: 240 seconds","date":"2013-08-26T15:19:38.146Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 264 seconds","date":"2013-08-26T15:23:19.033Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #481 \u00037UNSTABLE\u000f smartos-x64 (11/636) osx-ia32 (4/636) smartos-ia32 (10/636) osx-x64 (1/636) http://jenkins.nodejs.org/job/nodejs-master/481/","date":"2013-08-26T15:23:34.685Z","type":"message"}
{"nick":"stagas","date":"2013-08-26T15:27:30.697Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-26T15:28:56.971Z","type":"quit"}
{"nick":"leonvv","date":"2013-08-26T15:31:23.905Z","type":"join"}
{"nick":"isaacs","message":"piscisaureus_: dtls?  why would we put that in core?","date":"2013-08-26T15:36:16.241Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: i know that it's been asked for, but i don't see why it can't be in userland.","date":"2013-08-26T15:36:26.859Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: bnoordhuis knows","date":"2013-08-26T15:36:36.013Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: ?","date":"2013-08-26T15:36:39.764Z","type":"message"}
{"nick":"isaacs","action":"read the scrollback","date":"2013-08-26T15:40:17.238Z","type":"action"}
{"nick":"bnoordhuis","message":"isaacs: because it's probably going to be big in a year or two and because you can't really do it from a userland module right now","date":"2013-08-26T15:40:18.616Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yes, we should fix THAT, then","date":"2013-08-26T15:40:25.381Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: the \"inability to use openssl in a module realistically\"","date":"2013-08-26T15:40:35.757Z","type":"message"}
{"nick":"bnoordhuis","message":"easier said than done","date":"2013-08-26T15:40:45.785Z","type":"message"}
{"nick":"bnoordhuis","message":"but don't forget the other part","date":"2013-08-26T15:40:58.128Z","type":"message"}
{"nick":"isaacs","message":"that it's going to be big in a year?","date":"2013-08-26T15:41:14.227Z","type":"message"}
{"nick":"bnoordhuis","message":"that said, i don't have a really strong opinion","date":"2013-08-26T15:41:14.442Z","type":"message"}
{"nick":"bnoordhuis","message":"well, maybe i do. i'd put it on the same level as importance of, say, ECDH cipher or GCM mode support","date":"2013-08-26T15:42:16.907Z","type":"message"}
{"nick":"isaacs","message":"there are good reasons to make openssl easier to bind against propelry","date":"2013-08-26T15:42:46.917Z","type":"message"}
{"nick":"isaacs","message":"and by \"easier\", i mostly mean \"possible\"","date":"2013-08-26T15:42:58.346Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, but once again, easier said than done","date":"2013-08-26T15:44:08.939Z","type":"message"}
{"nick":"bnoordhuis","message":"i could fix the unices","date":"2013-08-26T15:44:16.621Z","type":"message"}
{"nick":"bnoordhuis","message":"but i believe piscisaureus_ has tried twice to get it to work on windows without success","date":"2013-08-26T15:44:30.470Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: ^ that's correct, right?","date":"2013-08-26T15:44:52.359Z","type":"message"}
{"nick":"Domenic_","message":"all you have to do is somehow get me emotionally invested in a project that desparately needs native openssl support to succeed","date":"2013-08-26T15:44:52.571Z","type":"message"}
{"nick":"piscisaureus_","message":"StringBytes has a nice vulnerability","date":"2013-08-26T15:44:59.750Z","type":"message"}
{"nick":"Domenic_","message":"and then watch a bunch of bug reports file in from poor windows users trying to get it to work","date":"2013-08-26T15:45:03.143Z","type":"message"}
{"nick":"Domenic_","message":"and then i will get so frustrated i will make it happen, somehow","date":"2013-08-26T15:45:13.393Z","type":"message"}
{"nick":"bnoordhuis","message":"Domenic_: well, go for it. you have my blessing :)","date":"2013-08-26T15:45:28.008Z","type":"message"}
{"nick":"Domenic_","message":"bnoordhuis: nobody's managed step 1 yet, like they did for vm :P","date":"2013-08-26T15:45:44.218Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-26T15:47:21.294Z","type":"quit"}
{"nick":"Benvie","reason":"Ping timeout: 245 seconds","date":"2013-08-26T15:48:21.694Z","type":"quit"}
{"nick":"isaacs","message":"piscisaureus_: oh?","date":"2013-08-26T15:49:37.242Z","type":"message"}
{"nick":"piscisaureus_","message":"well - I don't know if it's exploitable in any meaningful way","date":"2013-08-26T15:49:51.850Z","type":"message"}
{"nick":"piscisaureus_","message":"but the assumption is that ToString() returns a constant value","date":"2013-08-26T15:50:00.332Z","type":"message"}
{"nick":"piscisaureus_","message":"because if you call StringBytes::StorageSize(bar, UTF8) it will call bar->ToString()","date":"2013-08-26T15:50:28.588Z","type":"message"}
{"nick":"piscisaureus_","message":"and then when you convert it'll call that function again","date":"2013-08-26T15:50:40.799Z","type":"message"}
{"nick":"piscisaureus_","message":"that assumption is normally valid unless it's not :)","date":"2013-08-26T15:51:05.361Z","type":"message"}
{"nick":"bnoordhuis","message":"that can only happen when bar is reassigned between the two calls, right?","date":"2013-08-26T15:52:02.338Z","type":"message"}
{"nick":"piscisaureus_","message":"no you could do","date":"2013-08-26T15:53:31.228Z","type":"message"}
{"nick":"piscisaureus_","message":"bar = new MyClass()","date":"2013-08-26T15:53:38.164Z","type":"message"}
{"nick":"piscisaureus_","message":"bar.prototype.toString = function() { return global.something += 'xyz' }","date":"2013-08-26T15:53:53.084Z","type":"message"}
{"nick":"piscisaureus_","message":"er well","date":"2013-08-26T15:54:11.993Z","type":"message"}
{"nick":"piscisaureus_","message":"you get the idea","date":"2013-08-26T15:54:14.175Z","type":"message"}
{"nick":"bajtos","date":"2013-08-26T15:54:20.865Z","type":"join"}
{"nick":"piscisaureus_","message":"javascript is hard","date":"2013-08-26T15:54:21.993Z","type":"message"}
{"nick":"bnoordhuis","message":"ah... StorageSize() doesn't check bar is a string?","date":"2013-08-26T15:54:31.715Z","type":"message"}
{"nick":"bnoordhuis","message":"right","date":"2013-08-26T15:54:39.868Z","type":"message"}
{"nick":"piscisaureus_","message":"it does - it calls ToString() always","date":"2013-08-26T15:54:45.424Z","type":"message"}
{"nick":"amartens","date":"2013-08-26T15:54:57.609Z","type":"join"}
{"nick":"piscisaureus_","message":"StorageSize should probably take a Local<String> and checking/coercing types should be left to the callert","date":"2013-08-26T15:55:13.597Z","type":"message"}
{"nick":"bnoordhuis","message":"\"callert\" :)  been mingling with rotterdammers, bertje?","date":"2013-08-26T15:55:55.784Z","type":"message"}
{"nick":"piscisaureus_","message":"heh","date":"2013-08-26T15:56:34.984Z","type":"message"}
{"nick":"piscisaureus_","message":"ken je effe gaan legge","date":"2013-08-26T15:56:56.088Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: https://gist.github.com/isaacs/6343070 fixes?","date":"2013-08-26T15:56:56.357Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well yeah, as long as we compile with assertions on :)","date":"2013-08-26T15:57:21.818Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: which we do","date":"2013-08-26T15:57:27.816Z","type":"message"}
{"nick":"piscisaureus_","message":"on unix","date":"2013-08-26T15:57:31.582Z","type":"message"}
{"nick":"bnoordhuis","message":"it's bad style to rely on !defined(NDEBUG)","date":"2013-08-26T15:57:46.659Z","type":"message"}
{"nick":"piscisaureus_","message":"we should do as v8","date":"2013-08-26T15:57:56.510Z","type":"message"}
{"nick":"bnoordhuis","message":"ASSERT and CHECK macros?","date":"2013-08-26T15:58:04.910Z","type":"message"}
{"nick":"piscisaureus_","message":"have \"classic\" asserts that are only in debug builds","date":"2013-08-26T15:58:11.929Z","type":"message"}
{"nick":"piscisaureus_","message":"and CHECK macros that are always on","date":"2013-08-26T15:58:16.003Z","type":"message"}
{"nick":"bnoordhuis","message":"agreed","date":"2013-08-26T15:58:29.417Z","type":"message"}
{"nick":"isaacs","message":"sure, i'm fine with that.","date":"2013-08-26T15:58:37.785Z","type":"message"}
{"nick":"isaacs","message":"at the moment, we use assert() in this way all over the codebase.","date":"2013-08-26T15:58:44.815Z","type":"message"}
{"nick":"isaacs","message":"and windows, well...","date":"2013-08-26T15:58:52.057Z","type":"message"}
{"nick":"isaacs","message":"it's a bit more loosey","date":"2013-08-26T15:58:56.175Z","type":"message"}
{"nick":"piscisaureus_","message":"I know, but I tend to write a lot of asserts in my code","date":"2013-08-26T15:58:56.938Z","type":"message"}
{"nick":"c4milo","date":"2013-08-26T15:58:57.146Z","type":"join"}
{"nick":"piscisaureus_","message":"most of them are pointless to have a in a release build","date":"2013-08-26T15:59:12.946Z","type":"message"}
{"nick":"isaacs","message":"most times that i've thought that, i've ended up being proven wrong","date":"2013-08-26T15:59:28.016Z","type":"message"}
{"nick":"isaacs","message":"i'm a big fan of asserts in production builds.","date":"2013-08-26T15:59:32.714Z","type":"message"}
{"nick":"piscisaureus_","message":"but there are some asserts that we really rely on now (and I am pretty sure they're off on windows atm)","date":"2013-08-26T15:59:38.562Z","type":"message"}
{"nick":"isaacs","message":"they used to be off even in javascript in release builds.","date":"2013-08-26T16:00:00.027Z","type":"message"}
