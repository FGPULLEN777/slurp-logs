{"nick":"ircretary","date":"2013-03-04T00:00:09.661Z","type":"join"}
{"nick":"tjfontaine","message":"are we having fun yet?","date":"2013-03-04T00:00:33.683Z","type":"message"}
{"nick":"isaacs","message":":)","date":"2013-03-04T00:01:57.136Z","type":"message"}
{"nick":"isaacs","message":"almost","date":"2013-03-04T00:01:57.886Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T00:04:38.448Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-04T00:10:46.761Z","type":"join"}
{"nick":"indexzero","date":"2013-03-04T00:15:09.134Z","type":"join"}
{"nick":"loladiro","date":"2013-03-04T00:17:13.224Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-03-04T00:21:06.253Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T00:35:15.258Z","type":"quit"}
{"nick":"tjfontaine","message":"bnoordhuis: heh, nice response on #4884","date":"2013-03-04T00:35:18.658Z","type":"message"}
{"nick":"bnoordhuis","message":"that guy is such a moron. i wish github issues had a 'ban user' button","date":"2013-03-04T00:38:33.263Z","type":"message"}
{"nick":"benoitc","date":"2013-03-04T00:38:46.339Z","type":"join"}
{"nick":"tjfontaine","message":"haha","date":"2013-03-04T00:39:33.691Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: hahah","date":"2013-03-04T00:39:46.845Z","type":"message"}
{"nick":"isaacs","message":"yeah, it's frustrating when someone cba to try the more recent version of node.","date":"2013-03-04T00:40:33.703Z","type":"message"}
{"nick":"isaacs","message":"for all he knows, his problem is already fixed.","date":"2013-03-04T00:40:38.811Z","type":"message"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-03-04T00:41:55.215Z","type":"quit"}
{"nick":"diakopter","date":"2013-03-04T00:49:31.294Z","type":"join"}
{"nick":"diakopter","message":"hi; my build fails with VS2010 - is this known? https://gist.github.com/diakopter/5079171","date":"2013-03-04T00:52:33.036Z","type":"message"}
{"nick":"diakopter","message":"(I'm glad to switch compilers if that's necessary)","date":"2013-03-04T00:52:55.922Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i fixed that writable.end(chunk) 2 times thing","date":"2013-03-04T00:53:23.261Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: are you saying that because of #4574?","date":"2013-03-04T00:55:38.353Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: no, it's unrelated.","date":"2013-03-04T00:56:16.554Z","type":"message"}
{"nick":"tjfontaine","message":"k I wasn't sure","date":"2013-03-04T00:56:23.377Z","type":"message"}
{"nick":"tjfontaine","message":"I mean","date":"2013-03-04T00:56:26.400Z","type":"message"}
{"nick":"tjfontaine","message":"I know that issue is unrelated, but if that's what was prompting your statement now :)","date":"2013-03-04T00:56:38.458Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: just a case i noticed where you've told it to write some bytes, and they don't get written, but also you don't get an error.","date":"2013-03-04T00:56:43.333Z","type":"message"}
{"nick":"isaacs","message":"i don't recall how i got there, exactly","date":"2013-03-04T00:56:49.535Z","type":"message"}
{"nick":"isaacs","message":"oh! probably messing around with SimpleProtocol example and trying to figure out why it wasn't working.  also led to the writeAfterFIN error message thingie","date":"2013-03-04T00:57:12.821Z","type":"message"}
{"nick":"tjfontaine","message":"ah","date":"2013-03-04T00:57:22.286Z","type":"message"}
{"nick":"bnoordhuis","message":"diakopter: https://github.com/joyent/libuv/pull/728 <- does that fix it for you?","date":"2013-03-04T00:59:40.553Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: i was just looking at the PR","date":"2013-03-04T00:59:54.868Z","type":"message"}
{"nick":"loladiro","date":"2013-03-04T00:59:58.945Z","type":"join"}
{"nick":"isaacs","message":"kewl","date":"2013-03-04T00:59:59.482Z","type":"message"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-03-04T01:00:02.059Z","type":"quit"}
{"nick":"isaacs","message":"so, i am also planning to refactor Writable so that _write gets (chunk, encoding, cb) instead of ([chunk,encoding],cb) or (chunk,cb)","date":"2013-03-04T01:01:35.316Z","type":"message"}
{"nick":"isaacs","message":"it's angering V8 to be violating its strong type preference.","date":"2013-03-04T01:01:58.080Z","type":"message"}
{"nick":"tjfontaine","message":"agreed","date":"2013-03-04T01:02:22.006Z","type":"message"}
{"nick":"isaacs","message":"of course... we'll still have _write being called sometimes with a Buffer and sometimes with a String","date":"2013-03-04T01:02:41.118Z","type":"message"}
{"nick":"isaacs","message":"as the first arg","date":"2013-03-04T01:02:45.311Z","type":"message"}
{"nick":"isaacs","message":"but i'm not sure any way around that","date":"2013-03-04T01:02:51.611Z","type":"message"}
{"nick":"diakopter","message":"bnoordhuis: I'm not sure. I ran vcbuild again, and it finished with no errors.. how do I run some tests?","date":"2013-03-04T01:03:01.761Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: in a common pattern that happens?","date":"2013-03-04T01:03:26.077Z","type":"message"}
{"nick":"diakopter","message":"bnoordhuis: oh, just found the run-tests.exe","date":"2013-03-04T01:03:50.663Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: yeah","date":"2013-03-04T01:04:02.758Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: any time you do console.log('flurb')","date":"2013-03-04T01:04:08.219Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: that's calling Socket.write('flurb')","date":"2013-03-04T01:04:18.599Z","type":"message"}
{"nick":"isaacs","message":"which in turn will call Socket.write('flurb', 'utf8', cb)","date":"2013-03-04T01:04:28.678Z","type":"message"}
{"nick":"isaacs","message":"er, Socket._write('flurb', 'utf8', cb)","date":"2013-03-04T01:04:38.035Z","type":"message"}
{"nick":"tjfontaine","message":"well console log could do the buffer conversion heh","date":"2013-03-04T01:05:19.172Z","type":"message"}
{"nick":"isaacs","message":"but i'm pretty sure the overhead of variadic _write chunk type will be greater than the overhead of pre-_write buffer-izing","date":"2013-03-04T01:05:20.343Z","type":"message"}
{"nick":"diakopter","message":"bnoordhuis: I got 5 test failures. should I nopaste the output?","date":"2013-03-04T01:05:32.891Z","type":"message"}
{"nick":"isaacs","message":"because then we do handle.writeBuffer() or handle.writeUtf8String() etc","date":"2013-03-04T01:05:40.824Z","type":"message"}
{"nick":"isaacs","message":"so that we don't create a separate buffer for ti","date":"2013-03-04T01:05:53.234Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-03-04T01:05:53.478Z","type":"message"}
{"nick":"loladiro","date":"2013-03-04T01:06:35.452Z","type":"join"}
{"nick":"diakopter","message":"I updated the above gist.. in case anyone's curious to see the 5 test failures","date":"2013-03-04T01:07:33.255Z","type":"message"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-03-04T01:07:57.535Z","type":"quit"}
{"nick":"loladiro","date":"2013-03-04T01:11:12.161Z","type":"join"}
{"nick":"diakopter","message":"bnoordhuis: thanks for the tip!","date":"2013-03-04T01:14:04.040Z","type":"message"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-03-04T01:15:12.026Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-03-04T01:16:09.066Z","type":"join"}
{"nick":"loladiro","date":"2013-03-04T01:17:13.327Z","type":"join"}
{"nick":"bnoordhuis","message":"diakopter: the threadpool_cancel_* fail because uv_cancel is only implemented on Unices right now","date":"2013-03-04T01:20:21.825Z","type":"message"}
{"nick":"bnoordhuis","message":"there should be a 'test' in that sentence","date":"2013-03-04T01:20:43.847Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess fs_file_loop is supposed to pass","date":"2013-03-04T01:21:05.444Z","type":"message"}
{"nick":"tjfontaine","message":"complete sentences overrated","date":"2013-03-04T01:21:18.634Z","type":"message"}
{"nick":"diakopter","message":"bnoordhuis: seems to me those tests should auto-pass on Windows, then","date":"2013-03-04T01:21:21.684Z","type":"message"}
{"nick":"tjfontaine","message":"diakopter: not implemented failing tests are a reminder","date":"2013-03-04T01:21:56.484Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T01:23:00.791Z","type":"quit"}
{"nick":"bnoordhuis","message":"isaacs: the node.js cla is different from libuv's?","date":"2013-03-04T01:23:41.070Z","type":"message"}
{"nick":"bnoordhuis","message":"i always point people to nodejs.org/cla.html...","date":"2013-03-04T01:23:53.647Z","type":"message"}
{"nick":"bnoordhuis","message":"are you thinking of http_parser's cla maybe?","date":"2013-03-04T01:24:19.867Z","type":"message"}
{"nick":"isaacs","message":"oh, maybe","date":"2013-03-04T01:27:05.687Z","type":"message"}
{"nick":"isaacs","message":"huh.  that guy seems to not be on the google doc","date":"2013-03-04T01:27:16.466Z","type":"message"}
{"nick":"isaacs","message":"ohh, spelled his name differently","date":"2013-03-04T01:28:26.282Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u0002e428bb7\u0002 : cluster: Rename destroy() to kill(signal=SIGTERM)  Fix #4133, bringing th (+1 more commits) - http://git.io/5rYi0w","date":"2013-03-04T01:29:47.496Z","type":"message"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-03-04T01:30:50.177Z","type":"nick"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-03-04T01:31:43.408Z","type":"quit"}
{"nick":"diakopter","date":"2013-03-04T01:32:45.860Z","type":"part"}
{"nick":"abraxas","date":"2013-03-04T01:38:01.595Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T01:40:10.057Z","type":"quit"}
{"nick":"bnoordhuis","message":"hm, seems linux 3.9-rc1 fixes a denial-of-service for ipv6 where all socket objects end up in the same hash table bucket","date":"2013-03-04T01:40:29.044Z","type":"message"}
{"nick":"tjfontaine","message":"cute","date":"2013-03-04T01:40:45.058Z","type":"message"}
{"nick":"bnoordhuis","message":"also explains (or possibly explains) some of the weird ipv6 performance i was seeing","date":"2013-03-04T01:41:25.964Z","type":"message"}
{"nick":"bnoordhuis","message":"guess i'm forced to upgrade now :)","date":"2013-03-04T01:41:55.614Z","type":"message"}
{"nick":"bnoordhuis","message":"cherry-picking the patch would probably work as well but where's the fun in that?","date":"2013-03-04T01:42:33.405Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #51 \u00034FAILURE\u000f windows-x64 (11/546) windows-ia32 (11/546) osx-x64 (1/545) http://jenkins.nodejs.org/job/nodejs-master/51/","date":"2013-03-04T01:43:59.306Z","type":"message"}
{"nick":"benoitc","date":"2013-03-04T01:46:46.616Z","type":"join"}
{"nick":"hz","date":"2013-03-04T02:00:11.133Z","type":"quit"}
{"nick":"bnoordhuis","message":"another nice denial-of-service: slow start tcp sockets with a zero send congestion window cause an infinite loop in 3.6 and up","date":"2013-03-04T02:00:16.326Z","type":"message"}
{"nick":"bnoordhuis","message":"reading through recent kernel commits is not good for one's peace of mind","date":"2013-03-04T02:01:30.350Z","type":"message"}
{"nick":"brucem","message":"bnoordhuis: have to wonder what led to them being found … active attacks, code inspection, fuzz testing somewhere ...","date":"2013-03-04T02:05:11.284Z","type":"message"}
{"nick":"brucem","message":"bnoordhuis: and who knew about them prior to them being found and just hadn't bothered to disclose.","date":"2013-03-04T02:05:25.552Z","type":"message"}
{"nick":"bnoordhuis","message":"brucem: i think it's a combination of all three. maybe not attacks but people running into them as bugs","date":"2013-03-04T02:08:47.122Z","type":"message"}
{"nick":"bnoordhuis","message":"re: fuzz testing, http://codemonkey.org.uk/projects/trinity/ - it's found quite a few bugs so far, including one or two security issues","date":"2013-03-04T02:11:23.920Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, off to bed. sleep tight all","date":"2013-03-04T02:11:36.447Z","type":"message"}
{"nick":"isaacs","message":"g'nite bnoordhuis ","date":"2013-03-04T02:13:05.866Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 248 seconds","date":"2013-03-04T02:16:01.352Z","type":"quit"}
{"nick":"brson","date":"2013-03-04T02:24:23.506Z","type":"join"}
{"nick":"kazupon","date":"2013-03-04T02:31:52.070Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T02:40:26.882Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-04T02:42:48.138Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-04T02:43:47.291Z","type":"quit"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-03-04T03:00:25.640Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-03-04T03:00:40.476Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T03:00:55.030Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-04T03:22:03.365Z","type":"join"}
{"nick":"kazupon","date":"2013-03-04T03:27:04.304Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-03-04T03:27:06.356Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-04T03:27:55.577Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-03-04T03:29:05.963Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-03-04T03:32:09.398Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-03-04T03:33:11.091Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-03-04T03:36:41.745Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T03:40:51.335Z","type":"quit"}
{"nick":"MI6","reason":"Ping timeout: 252 seconds","date":"2013-03-04T03:47:14.429Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-04T03:48:48.074Z","type":"join"}
{"nick":"loladiro","date":"2013-03-04T03:52:12.178Z","type":"join"}
{"nick":"bradleymeck","date":"2013-03-04T03:53:27.382Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-04T03:59:53.358Z","type":"quit"}
{"nick":"abraxas","date":"2013-03-04T04:05:02.677Z","type":"join"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-03-04T04:29:53.564Z","type":"nick"}
{"nick":"bradleymeck","date":"2013-03-04T04:37:32.610Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-04T04:38:53.275Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T04:41:12.569Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-04T04:42:17.732Z","type":"join"}
{"nick":"mikeal","date":"2013-03-04T04:44:06.957Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T04:48:23.007Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-03-04T04:50:21.294Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-04T05:03:32.522Z","type":"quit"}
{"nick":"stagas","reason":"Quit: ChatZilla 0.9.90-rdmsoft [XULRunner 1.9.0.17/2009122204]","date":"2013-03-04T05:04:20.334Z","type":"quit"}
{"nick":"mikeal","date":"2013-03-04T05:09:28.385Z","type":"join"}
{"nick":"kazupon","date":"2013-03-04T05:27:00.941Z","type":"join"}
{"nick":"hij1nx","message":"indutny: i realized that i wrote something very similar to what you had done so i scrapped it and just used your module.","date":"2013-03-04T05:34:07.515Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T05:40:43.666Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T05:41:32.442Z","type":"quit"}
{"nick":"indexzero","date":"2013-03-04T05:45:41.277Z","type":"join"}
{"nick":"benoitc","date":"2013-03-04T05:45:48.262Z","type":"join"}
{"nick":"loladiro","date":"2013-03-04T05:50:50.432Z","type":"join"}
{"nick":"isaacs","message":"wanna see something awesome?","date":"2013-03-04T05:54:05.379Z","type":"message"}
{"nick":"isaacs","message":"http://static.izs.me/benchmark-write-refactor-vs-0.8.html","date":"2013-03-04T05:54:07.348Z","type":"message"}
{"nick":"tjfontaine","message":"now you're talking","date":"2013-03-04T05:55:31.430Z","type":"message"}
{"nick":"isaacs","message":"https://docs.google.com/spreadsheet/ccc?key=0AganzoeqkiHddE9uRlA5WS0xSF9NTGN1QS0zZ3FRSWc#gid=8","date":"2013-03-04T05:57:01.441Z","type":"message"}
{"nick":"isaacs","message":"that's benchmark/http.sh results","date":"2013-03-04T05:57:08.540Z","type":"message"}
{"nick":"isaacs","message":"v0.8 vs my writable-refactor branch","date":"2013-03-04T05:57:15.613Z","type":"message"}
{"nick":"isaacs","message":"hard to measure on smartos, though.","date":"2013-03-04T05:57:27.384Z","type":"message"}
{"nick":"isaacs","message":"the variability is much higher.","date":"2013-03-04T05:57:31.490Z","type":"message"}
{"nick":"isaacs","message":"i think probably just because of the CPU bursty effect","date":"2013-03-04T05:57:38.866Z","type":"message"}
{"nick":"isaacs","message":"benchmarks really want a sustained guaranteed cpu level","date":"2013-03-04T05:57:57.907Z","type":"message"}
{"nick":"tjfontaine","message":"indeed","date":"2013-03-04T05:58:15.173Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T06:10:49.416Z","type":"quit"}
{"nick":"MI6","date":"2013-03-04T06:13:05.168Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Rod Vagg\u000f \u00037v0.8\u000f * \u0002a6a1659\u0002 : link to LevelUP modules wiki page, not level-hooks - http://git.io/8ut8eg","date":"2013-03-04T06:13:08.765Z","type":"message"}
{"nick":"benoitc","date":"2013-03-04T06:14:47.566Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-03-04T06:19:27.851Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #52 \u00034FAILURE\u000f windows-x64 (11/546) linux-ia32 (1/546) windows-ia32 (11/546) osx-x64 (1/545) http://jenkins.nodejs.org/job/nodejs-master/52/","date":"2013-03-04T06:25:19.498Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T06:29:19.721Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.8\u0002: #20 \u00034FAILURE\u000f linux-x64 (2/467) osx-ia32 (1/467) smartos-ia32 (1/467) windows-x64 (2/467) windows-ia32 (2/467) osx-x64 (2/467) smartos-x64 (1/467) linux-ia32 (3/467) http://jenkins.nodejs.org/job/nodejs-v0.8/20/","date":"2013-03-04T06:36:14.223Z","type":"message"}
{"nick":"loladiro","date":"2013-03-04T06:42:27.823Z","type":"join"}
{"nick":"wolfeidau","date":"2013-03-04T06:45:03.199Z","type":"join"}
{"nick":"Raynos","reason":"Ping timeout: 252 seconds","date":"2013-03-04T06:59:48.770Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-04T07:12:33.672Z","type":"quit"}
{"nick":"mikeal","date":"2013-03-04T07:20:01.723Z","type":"join"}
{"nick":"kevireilly","reason":"Read error: Connection reset by peer","date":"2013-03-04T07:30:23.141Z","type":"quit"}
{"nick":"rendar","date":"2013-03-04T07:30:38.968Z","type":"join"}
{"nick":"kevireilly","date":"2013-03-04T07:30:45.228Z","type":"join"}
{"nick":"kevireilly","reason":"Ping timeout: 245 seconds","date":"2013-03-04T07:35:27.069Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T07:37:48.897Z","type":"quit"}
{"nick":"kevireilly","date":"2013-03-04T07:40:42.733Z","type":"join"}
{"nick":"kevireilly","reason":"Write error: Connection reset by peer","date":"2013-03-04T07:54:41.490Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-04T07:56:44.845Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-03-04T08:00:19.663Z","type":"quit"}
{"nick":"dominictarr","date":"2013-03-04T08:09:34.654Z","type":"join"}
{"nick":"dominictarr","reason":"Remote host closed the connection","date":"2013-03-04T08:10:38.870Z","type":"quit"}
{"nick":"dominictarr","date":"2013-03-04T08:11:41.978Z","type":"join"}
{"nick":"indexzero","date":"2013-03-04T08:21:25.383Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-04T08:32:54.891Z","type":"quit"}
{"nick":"csaoh","date":"2013-03-04T08:36:21.801Z","type":"join"}
{"nick":"bradleymeck","date":"2013-03-04T08:38:49.335Z","type":"join"}
{"nick":"slaskis","date":"2013-03-04T08:52:54.609Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-03-04T09:07:10.062Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-03-04T09:10:03.531Z","type":"join"}
{"nick":"`3rdEden","date":"2013-03-04T09:14:48.388Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T09:16:28.816Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T09:23:13.206Z","type":"quit"}
{"nick":"Raynos","date":"2013-03-04T09:29:03.760Z","type":"join"}
{"nick":"loladiro","date":"2013-03-04T09:31:08.245Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-03-04T09:32:45.837Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-04T09:46:50.563Z","type":"join"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-03-04T09:55:57.672Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-03-04T09:56:17.490Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-04T09:56:52.528Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 245 seconds","date":"2013-03-04T10:05:51.274Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-04T10:13:51.336Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T10:14:33.342Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-04T10:15:18.159Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-03-04T10:16:56.779Z","type":"join"}
{"nick":"Kakera","date":"2013-03-04T10:25:07.978Z","type":"join"}
{"nick":"dominictarr","date":"2013-03-04T10:26:04.504Z","type":"join"}
{"nick":"csaoh","date":"2013-03-04T10:29:27.056Z","type":"join"}
{"nick":"Kakera","reason":"Read error: Connection reset by peer","date":"2013-03-04T10:29:57.104Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T10:36:42.295Z","type":"quit"}
{"nick":"roxlu","message":"hi guys, when I have a client socket, what's the correct way of disconnecting / cleaning up the connect? (when my app closes)","date":"2013-03-04T10:57:38.136Z","type":"message"}
{"nick":"roxlu","message":"I mean, when my app closes, I need to wait for the async call to happen; but I actually would need to block my destructor (using c++) till the socket is really disconnected","date":"2013-03-04T11:00:25.139Z","type":"message"}
{"nick":"indutny","message":"uv_close","date":"2013-03-04T11:00:26.981Z","type":"message"}
{"nick":"roxlu","message":"indutny: thanks, but how would I handle that in a destructor (or sig callback)","date":"2013-03-04T11:03:13.816Z","type":"message"}
{"nick":"indutny","message":"oh, there's a simple way","date":"2013-03-04T11:03:29.080Z","type":"message"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-03-04T11:03:34.156Z","type":"quit"}
{"nick":"indutny","message":"if destructor is called before connection is closed","date":"2013-03-04T11:03:35.774Z","type":"message"}
{"nick":"indutny","message":"then you'll need to allocate uv_tcp_t","date":"2013-03-04T11:03:44.606Z","type":"message"}
{"nick":"indutny","message":"and free it in uv_close's callback","date":"2013-03-04T11:03:50.402Z","type":"message"}
{"nick":"indutny","message":"class MyClass { uv_tcp_t* tcp; MyClass() { tcp = new uv_tcp_t(); } ~MyClass() { uv_close(tcp, deletingFunction) } }","date":"2013-03-04T11:04:30.196Z","type":"message"}
{"nick":"roxlu","message":"but uv_close is async, right? ","date":"2013-03-04T11:04:46.144Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2013-03-04T11:05:03.841Z","type":"message"}
{"nick":"indutny","message":"definitely async","date":"2013-03-04T11:05:11.739Z","type":"message"}
{"nick":"roxlu","message":"so after calling uv_close my MyClass is deallocated","date":"2013-03-04T11:05:23.410Z","type":"message"}
{"nick":"hz","date":"2013-03-04T11:05:32.688Z","type":"join"}
{"nick":"roxlu","message":"and wouldn't it result in unexpected behaviour when uv calls my deletingFunction ? ","date":"2013-03-04T11:05:54.721Z","type":"message"}
{"nick":"indutny","message":"no","date":"2013-03-04T11:05:58.288Z","type":"message"}
{"nick":"indutny","message":"void deletingFunction(uv_handle_t* handle) { delete handle }","date":"2013-03-04T11:06:07.118Z","type":"message"}
{"nick":"indutny","message":"deletingFunction is a static function","date":"2013-03-04T11:06:16.933Z","type":"message"}
{"nick":"indutny","message":"not a method","date":"2013-03-04T11:06:30.859Z","type":"message"}
{"nick":"roxlu","message":"ok, thanks","date":"2013-03-04T11:06:55.937Z","type":"message"}
{"nick":"roxlu","message":"I probably miss some info about the destruction of an application","date":"2013-03-04T11:07:24.314Z","type":"message"}
{"nick":"indutny","message":"erm?","date":"2013-03-04T11:07:35.682Z","type":"message"}
{"nick":"roxlu","message":"I thought that as soon as my d'tor has returned it stops executing anything related to the class","date":"2013-03-04T11:07:53.444Z","type":"message"}
{"nick":"indutny","message":"to the instance","date":"2013-03-04T11:08:26.953Z","type":"message"}
{"nick":"indutny","message":"not class itself","date":"2013-03-04T11:08:28.906Z","type":"message"}
{"nick":"roxlu","message":"yes","date":"2013-03-04T11:08:34.863Z","type":"message"}
{"nick":"indutny","message":"and static function is a member of class","date":"2013-03-04T11:08:37.778Z","type":"message"}
{"nick":"indutny","message":"not related to instance at all","date":"2013-03-04T11:08:41.538Z","type":"message"}
{"nick":"indutny","message":"you can't even use `this` in it","date":"2013-03-04T11:08:46.384Z","type":"message"}
{"nick":"roxlu","message":"yeah I see that now indeed. thanks a lot","date":"2013-03-04T11:08:50.875Z","type":"message"}
{"nick":"indutny","message":"np","date":"2013-03-04T11:08:54.389Z","type":"message"}
{"nick":"tellnes","date":"2013-03-04T11:25:59.422Z","type":"join"}
{"nick":"roxlu","message":"indutny: I've got my uv_sock_t on the stack and calling uv_close() when it isn't connected yet gives me a assertion failed in src/unix/core.c 140. ","date":"2013-03-04T11:26:30.447Z","type":"message"}
{"nick":"roxlu","message":"Do I first need to check if the sock is actually connected before calling close\"","date":"2013-03-04T11:26:43.379Z","type":"message"}
{"nick":"indutny","message":"looks like you're passing something wrong to it","date":"2013-03-04T11:28:04.264Z","type":"message"}
{"nick":"indutny","message":"not socket","date":"2013-03-04T11:28:08.051Z","type":"message"}
{"nick":"indutny","message":"probably it was either already destroyed","date":"2013-03-04T11:28:13.707Z","type":"message"}
{"nick":"indutny","message":"or deallocated","date":"2013-03-04T11:28:16.683Z","type":"message"}
{"nick":"indutny","message":"and what's uv_sock_t?","date":"2013-03-04T11:28:27.422Z","type":"message"}
{"nick":"roxlu","message":"uhh uv_tcp_t","date":"2013-03-04T11:28:34.847Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-03-04T11:28:40.630Z","type":"message"}
{"nick":"roxlu","message":"This basic client socket wrapper: https://github.com/roxlu/roxlu/blob/master/addons/UV/include/uv/ClientSocket.h ","date":"2013-03-04T11:29:20.319Z","type":"message"}
{"nick":"roxlu","message":"everything works fine but I just want to make sure it shutdowns down nicely when the object gets destructed","date":"2013-03-04T11:29:57.640Z","type":"message"}
{"nick":"roxlu","message":"so in my d'tor I want to call: uv_close(&sock, NULL); (if a null callback is possible)","date":"2013-03-04T11:30:57.872Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2013-03-04T11:31:01.513Z","type":"message"}
{"nick":"indutny","message":"that won't work","date":"2013-03-04T11:31:04.729Z","type":"message"}
{"nick":"indutny","message":"I told ya","date":"2013-03-04T11:31:07.675Z","type":"message"}
{"nick":"indutny","message":"allocate uv_tcp_t","date":"2013-03-04T11:31:11.756Z","type":"message"}
{"nick":"indutny","message":"and destroy it in uv_close's callback","date":"2013-03-04T11:31:18.947Z","type":"message"}
{"nick":"roxlu","message":"ok so on the stack is not an option","date":"2013-03-04T11:31:25.344Z","type":"message"}
{"nick":"indutny","message":"definitely not","date":"2013-03-04T11:31:30.570Z","type":"message"}
{"nick":"roxlu","message":"ok thanks","date":"2013-03-04T11:31:39.365Z","type":"message"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-03-04T11:32:24.044Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-04T11:37:05.101Z","type":"join"}
{"nick":"roxlu","message":"indutny: it gives me this assertion error when uv_tcp_init() hasn't been called and I call uv_close() on the handle. I know this is not also not the way it's supposed to work, but is there a way to check if a uv_tcp_t is initialized so I can check that myself before calling close() ? ","date":"2013-03-04T11:39:10.198Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-03-04T11:39:20.505Z","type":"message"}
{"nick":"indutny","message":"well, you need to call init","date":"2013-03-04T11:39:24.607Z","type":"message"}
{"nick":"indutny","message":"otherwise it's just a junk","date":"2013-03-04T11:39:29.859Z","type":"message"}
{"nick":"indutny","message":"chunk of dirty uninitialized memory","date":"2013-03-04T11:39:39.501Z","type":"message"}
{"nick":"indutny","message":"what else have you expected","date":"2013-03-04T11:39:43.774Z","type":"message"}
{"nick":"roxlu","message":"I call init, but in my connect() funtion","date":"2013-03-04T11:40:33.359Z","type":"message"}
{"nick":"roxlu","message":"but I'll move it up to my c'tor","date":"2013-03-04T11:40:43.436Z","type":"message"}
{"nick":"roxlu","message":"but I'll move it up to my c'tor","date":"2013-03-04T11:40:45.957Z","type":"message"}
{"nick":"roxlu","message":"oh.. ","date":"2013-03-04T11:40:48.227Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-04T11:40:53.175Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2013-03-04T11:41:39.916Z","type":"quit"}
{"nick":"roxlu","message":"indutny: I'm curious why libuv is so easy with doing things on the heap? allocating when not really necessary seems like a waste of cpu cycles","date":"2013-03-04T11:50:08.083Z","type":"message"}
{"nick":"indutny","message":"it's ok to not allocate, but handle should be alive until callback will be invoked","date":"2013-03-04T11:51:01.265Z","type":"message"}
{"nick":"indutny","message":"and when you're using on-stack variable - function, holding it, returns before callback is invoked","date":"2013-03-04T11:51:28.573Z","type":"message"}
{"nick":"roxlu","message":"yeah I see what you mean","date":"2013-03-04T11:51:34.333Z","type":"message"}
{"nick":"indutny","message":"asynchronous model","date":"2013-03-04T11:51:35.389Z","type":"message"}
{"nick":"indutny","message":"there're no other way to deal with it","date":"2013-03-04T11:51:42.639Z","type":"message"}
{"nick":"indutny","message":"you either not destroy things until they're finished/closed","date":"2013-03-04T11:51:55.281Z","type":"message"}
{"nick":"indutny","message":"or allocate them separately","date":"2013-03-04T11:51:59.383Z","type":"message"}
{"nick":"indutny","message":"depending on what you're doing and how you can do it","date":"2013-03-04T11:52:08.671Z","type":"message"}
{"nick":"rendar","message":"indutny: thats because the thread in the threadpool can receive a completion with an address of a destroyed object causing segfault?","date":"2013-03-04T11:52:57.370Z","type":"message"}
{"nick":"indutny","message":"yes, undefined behaviour","date":"2013-03-04T11:53:08.859Z","type":"message"}
{"nick":"rendar","message":"indutny: what about the user will not destroy the uv_stream_t until on_close() callback is not called?","date":"2013-03-04T11:54:12.732Z","type":"message"}
{"nick":"indutny","message":"it'll work","date":"2013-03-04T11:54:24.404Z","type":"message"}
{"nick":"rendar","message":"indutny: so basically if we assure that the uv_stream_t will be alive until on_close(), we don't need that heap allocation, in theory..","date":"2013-03-04T11:55:07.632Z","type":"message"}
{"nick":"csaoh","date":"2013-03-04T11:55:44.463Z","type":"join"}
{"nick":"indutny","message":"yes","date":"2013-03-04T11:59:09.386Z","type":"message"}
{"nick":"indutny","message":"not in theory","date":"2013-03-04T11:59:11.516Z","type":"message"}
{"nick":"indutny","message":"this really works","date":"2013-03-04T11:59:22.005Z","type":"message"}
{"nick":"rendar","message":"yep","date":"2013-03-04T11:59:29.202Z","type":"message"}
{"nick":"kazupon","date":"2013-03-04T12:03:13.848Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 255 seconds","date":"2013-03-04T12:08:47.489Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-03-04T12:09:16.476Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-04T12:30:03.168Z","type":"join"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-03-04T12:37:44.606Z","type":"nick"}
{"nick":"piscisaureus_","reason":"Ping timeout: 252 seconds","date":"2013-03-04T12:47:20.402Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-03-04T12:51:23.158Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-04T12:56:26.839Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 245 seconds","date":"2013-03-04T13:02:54.890Z","type":"quit"}
{"nick":"abraxas","date":"2013-03-04T13:04:11.552Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: hey ben","date":"2013-03-04T13:06:55.504Z","type":"message"}
{"nick":"indutny","message":"what you're up to today","date":"2013-03-04T13:07:01.299Z","type":"message"}
{"nick":"abraxas","reason":"Ping timeout: 255 seconds","date":"2013-03-04T13:08:44.440Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: nothing much","date":"2013-03-04T13:09:08.337Z","type":"message"}
{"nick":"bnoordhuis","message":"you?","date":"2013-03-04T13:09:13.081Z","type":"message"}
{"nick":"indutny","message":"reading about u-kernels","date":"2013-03-04T13:10:22.336Z","type":"message"}
{"nick":"indutny","message":"and IA32 details","date":"2013-03-04T13:10:33.037Z","type":"message"}
{"nick":"indutny","message":"bbiab","date":"2013-03-04T13:11:08.204Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-03-04T13:12:04.839Z","type":"join"}
{"nick":"piscisaureus_","reason":"Read error: No route to host","date":"2013-03-04T13:19:22.566Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-03-04T13:19:44.995Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-03-04T13:31:23.389Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-04T13:57:55.137Z","type":"join"}
{"nick":"rendar","message":"indutny: what are u-kernels?","date":"2013-03-04T14:02:40.268Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 252 seconds","date":"2013-03-04T14:06:19.791Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-04T14:17:15.834Z","type":"join"}
{"nick":"indutny","message":"back","date":"2013-03-04T14:44:50.461Z","type":"message"}
{"nick":"c4milo","date":"2013-03-04T14:52:28.388Z","type":"join"}
{"nick":"bradleymeck","date":"2013-03-04T14:58:12.410Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T14:58:27.671Z","type":"quit"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-03-04T14:59:09.738Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-04T14:59:31.324Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 256 seconds","date":"2013-03-04T15:00:18.523Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-03-04T15:11:18.139Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: for when you're feeling better, there's a couple of libuv patches you should review","date":"2013-03-04T15:13:53.571Z","type":"message"}
{"nick":"bnoordhuis","message":"and maybe answer rvagg on the mailing list about that ssize_t thing","date":"2013-03-04T15:14:05.780Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: i know, and i will.","date":"2013-03-04T15:14:21.115Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: re rvagg's question - do you think it could be somehow related to including uv.h in a c++ unit?","date":"2013-03-04T15:15:11.567Z","type":"message"}
{"nick":"piscisaureus_","message":"that one makes the mind boggle","date":"2013-03-04T15:15:32.375Z","type":"message"}
{"nick":"bradleymeck","date":"2013-03-04T15:15:39.867Z","type":"join"}
{"nick":"piscisaureus_","message":"jimmies rustled","date":"2013-03-04T15:15:53.107Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't know, possibly, who can tell with msvc?","date":"2013-03-04T15:16:29.726Z","type":"message"}
{"nick":"piscisaureus_","message":"I don't understand why people are reporting that advapi.lib isn't linked","date":"2013-03-04T15:21:43.961Z","type":"message"}
{"nick":"piscisaureus_","message":"it all builds fine for me","date":"2013-03-04T15:21:47.261Z","type":"message"}
{"nick":"piscisaureus_","message":"[%   1|+   3|-   0]: loop_stop","date":"2013-03-04T15:22:12.594Z","type":"message"}
{"nick":"piscisaureus_","message":"`loop_stop` failed: exit code 3","date":"2013-03-04T15:22:12.803Z","type":"message"}
{"nick":"piscisaureus_","message":"Output from process `loop_stop`:","date":"2013-03-04T15:22:12.803Z","type":"message"}
{"nick":"piscisaureus_","message":"Assertion failed in test\\test-loop-stop.c on line 65: prepare_called == 3","date":"2013-03-04T15:22:12.803Z","type":"message"}
{"nick":"piscisaureus_","message":"Someone did not run the tests before landing a patch :-(","date":"2013-03-04T15:22:22.188Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: hi, does libuv uses TransmitFile in windows to emulate sendfile() ?","date":"2013-03-04T15:23:37.886Z","type":"message"}
{"nick":"piscisaureus_","message":"D:\\libuv>grep TransmitFile -r src","date":"2013-03-04T15:24:14.931Z","type":"message"}
{"nick":"piscisaureus_","message":"no","date":"2013-03-04T15:24:16.708Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Xidorn Quan\u000f \u00037master\u000f * \u0002009ba02\u0002 : dns: fix ReferenceError in resolve() error path  A typo in the variable n - http://git.io/z3WbFQ","date":"2013-03-04T15:24:45.806Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: my irc client replaced your path with something scary","date":"2013-03-04T15:25:11.998Z","type":"message"}
{"nick":"indutny","message":"C: D: E: F: G:","date":"2013-03-04T15:25:16.492Z","type":"message"}
{"nick":"indutny","message":"ah, that was D:","date":"2013-03-04T15:25:22.167Z","type":"message"}
{"nick":"isaacs","message":"so, i got a green benchmark result vs v0.8 last night","date":"2013-03-04T15:31:53.538Z","type":"message"}
{"nick":"isaacs","message":"http://static.izs.me/benchmark-write-refactor-vs-0.8.html","date":"2013-03-04T15:32:02.994Z","type":"message"}
{"nick":"indutny","message":"good!","date":"2013-03-04T15:32:12.365Z","type":"message"}
{"nick":"indutny","message":"was that this data, encoding patch?","date":"2013-03-04T15:32:18.661Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-03-04T15:32:23.501Z","type":"message"}
{"nick":"indutny","message":"so still explicit is better than implicit? :)","date":"2013-03-04T15:32:32.986Z","type":"message"}
{"nick":"indutny","message":"what has it actually did?","date":"2013-03-04T15:32:50.808Z","type":"message"}
{"nick":"indutny","message":"s/did/done/","date":"2013-03-04T15:32:55.567Z","type":"message"}
{"nick":"isaacs","message":"the big diff was that we're passing arguments to _write() that are a bit more consistent","date":"2013-03-04T15:34:51.433Z","type":"message"}
{"nick":"isaacs","message":"and that the write()/_write()/onwrite() methods are all split up and organized better.","date":"2013-03-04T15:35:07.745Z","type":"message"}
{"nick":"isaacs","message":"there's still a bit more that can be done in the Readable class, and in Socket","date":"2013-03-04T15:35:20.117Z","type":"message"}
{"nick":"indutny","message":"great","date":"2013-03-04T15:35:32.717Z","type":"message"}
{"nick":"isaacs","message":"it's tricky work, though. you have to make a tiny tiny change, run all the tests, make another tiny change, etc.","date":"2013-03-04T15:35:44.350Z","type":"message"}
{"nick":"isaacs","message":"because it's so easy to screw up","date":"2013-03-04T15:35:49.154Z","type":"message"}
{"nick":"isaacs","message":"turns out computers do exactly what you tell them, even if you tell htem to do the wrong things in the wrong order.","date":"2013-03-04T15:36:08.117Z","type":"message"}
{"nick":"isaacs","message":"they're not very bright.","date":"2013-03-04T15:36:13.016Z","type":"message"}
{"nick":"indutny","message":"I hate heuristics :)","date":"2013-03-04T15:36:14.010Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-03-04T15:36:19.588Z","type":"message"}
{"nick":"indutny","message":"I love determinstics","date":"2013-03-04T15:36:34.681Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-03-04T15:36:35.178Z","type":"message"}
{"nick":"isaacs","message":"i'm seeing hardly any deopts or bailouts in the net bench scripts now, though","date":"2013-03-04T15:36:38.269Z","type":"message"}
{"nick":"isaacs","message":"so that's a plus","date":"2013-03-04T15:36:41.399Z","type":"message"}
{"nick":"indutny","message":"kewl","date":"2013-03-04T15:37:11.852Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-04T15:38:19.621Z","type":"quit"}
{"nick":"isaacs","message":"indutny: how do you feel about hte semantics changes?","date":"2013-03-04T15:38:43.315Z","type":"message"}
{"nick":"isaacs","message":"indutny: now _transform() doens't get an output function, and _write gets a (usually useless) encoding arg","date":"2013-03-04T15:38:59.810Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-03-04T15:39:10.438Z","type":"message"}
{"nick":"isaacs","message":"but i kind of like how _transform() and _write() suddenly have the same signature","date":"2013-03-04T15:39:14.339Z","type":"message"}
{"nick":"indutny","message":"last one is not very friendly","date":"2013-03-04T15:39:18.393Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2013-03-04T15:39:25.293Z","type":"message"}
{"nick":"isaacs","message":"of course, if you don't do decodeBuffers:false, then _write will always get a buffer, and encoding will always be ''","date":"2013-03-04T15:39:47.838Z","type":"message"}
{"nick":"indutny","message":"yeah, I understand","date":"2013-03-04T15:39:55.941Z","type":"message"}
{"nick":"stagas","date":"2013-03-04T15:40:03.595Z","type":"join"}
{"nick":"isaacs","message":"only for TCP is this an issue, and we could probably do the same for CryptoStreams also, and get some better performance there.","date":"2013-03-04T15:40:13.821Z","type":"message"}
{"nick":"indutny","message":"so, despite it's friendlessness, it seems ok to me","date":"2013-03-04T15:40:15.188Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #53 \u00034FAILURE\u000f windows-x64 (11/546) windows-ia32 (12/546) osx-x64 (1/545) http://jenkins.nodejs.org/job/nodejs-master/53/","date":"2013-03-04T15:40:26.757Z","type":"message"}
{"nick":"saghul","message":"piscisaureus_ re uv_stop, test passes for me :-O","date":"2013-03-04T15:40:29.728Z","type":"message"}
{"nick":"piscisaureus_","message":":o","date":"2013-03-04T15:41:03.249Z","type":"message"}
{"nick":"indutny","message":"D:","date":"2013-03-04T15:41:29.035Z","type":"message"}
{"nick":"saghul","message":"piscisaureus_ could it be that the loop iterates more times on uv-win?","date":"2013-03-04T15:41:39.095Z","type":"message"}
{"nick":"piscisaureus_","message":"euh... i didn't look at it yet","date":"2013-03-04T15:42:03.317Z","type":"message"}
{"nick":"piscisaureus_","message":"possibly, yes","date":"2013-03-04T15:42:14.002Z","type":"message"}
{"nick":"AvianFlu","date":"2013-03-04T15:42:49.583Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-04T15:43:01.606Z","type":"quit"}
{"nick":"saghul","message":"maybe the test should say >= 2, since the number of iterations is not guaranteed?","date":"2013-03-04T15:43:34.232Z","type":"message"}
{"nick":"piscisaureus_","message":"brb","date":"2013-03-04T15:54:32.282Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: rvagg was just helped","date":"2013-03-04T15:54:41.593Z","type":"message"}
{"nick":"kazupon","date":"2013-03-04T15:55:21.987Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u0002119cbf4\u0002 : stream: Don't require read(0) to emit 'readable' event  When a readable l - http://git.io/s1XiFA","date":"2013-03-04T15:56:19.735Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 245 seconds","date":"2013-03-04T15:59:09.862Z","type":"quit"}
