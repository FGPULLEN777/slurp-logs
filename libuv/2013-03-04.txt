{"nick":"ircretary","date":"2013-03-04T00:00:09.661Z","type":"join"}
{"nick":"tjfontaine","message":"are we having fun yet?","date":"2013-03-04T00:00:33.683Z","type":"message"}
{"nick":"isaacs","message":":)","date":"2013-03-04T00:01:57.136Z","type":"message"}
{"nick":"isaacs","message":"almost","date":"2013-03-04T00:01:57.886Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T00:04:38.448Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-04T00:10:46.761Z","type":"join"}
{"nick":"indexzero","date":"2013-03-04T00:15:09.134Z","type":"join"}
{"nick":"loladiro","date":"2013-03-04T00:17:13.224Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-03-04T00:21:06.253Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T00:35:15.258Z","type":"quit"}
{"nick":"tjfontaine","message":"bnoordhuis: heh, nice response on #4884","date":"2013-03-04T00:35:18.658Z","type":"message"}
{"nick":"bnoordhuis","message":"that guy is such a moron. i wish github issues had a 'ban user' button","date":"2013-03-04T00:38:33.263Z","type":"message"}
{"nick":"benoitc","date":"2013-03-04T00:38:46.339Z","type":"join"}
{"nick":"tjfontaine","message":"haha","date":"2013-03-04T00:39:33.691Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: hahah","date":"2013-03-04T00:39:46.845Z","type":"message"}
{"nick":"isaacs","message":"yeah, it's frustrating when someone cba to try the more recent version of node.","date":"2013-03-04T00:40:33.703Z","type":"message"}
{"nick":"isaacs","message":"for all he knows, his problem is already fixed.","date":"2013-03-04T00:40:38.811Z","type":"message"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-03-04T00:41:55.215Z","type":"quit"}
{"nick":"diakopter","date":"2013-03-04T00:49:31.294Z","type":"join"}
{"nick":"diakopter","message":"hi; my build fails with VS2010 - is this known? https://gist.github.com/diakopter/5079171","date":"2013-03-04T00:52:33.036Z","type":"message"}
{"nick":"diakopter","message":"(I'm glad to switch compilers if that's necessary)","date":"2013-03-04T00:52:55.922Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i fixed that writable.end(chunk) 2 times thing","date":"2013-03-04T00:53:23.261Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: are you saying that because of #4574?","date":"2013-03-04T00:55:38.353Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: no, it's unrelated.","date":"2013-03-04T00:56:16.554Z","type":"message"}
{"nick":"tjfontaine","message":"k I wasn't sure","date":"2013-03-04T00:56:23.377Z","type":"message"}
{"nick":"tjfontaine","message":"I mean","date":"2013-03-04T00:56:26.400Z","type":"message"}
{"nick":"tjfontaine","message":"I know that issue is unrelated, but if that's what was prompting your statement now :)","date":"2013-03-04T00:56:38.458Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: just a case i noticed where you've told it to write some bytes, and they don't get written, but also you don't get an error.","date":"2013-03-04T00:56:43.333Z","type":"message"}
{"nick":"isaacs","message":"i don't recall how i got there, exactly","date":"2013-03-04T00:56:49.535Z","type":"message"}
{"nick":"isaacs","message":"oh! probably messing around with SimpleProtocol example and trying to figure out why it wasn't working.  also led to the writeAfterFIN error message thingie","date":"2013-03-04T00:57:12.821Z","type":"message"}
{"nick":"tjfontaine","message":"ah","date":"2013-03-04T00:57:22.286Z","type":"message"}
{"nick":"bnoordhuis","message":"diakopter: https://github.com/joyent/libuv/pull/728 <- does that fix it for you?","date":"2013-03-04T00:59:40.553Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: i was just looking at the PR","date":"2013-03-04T00:59:54.868Z","type":"message"}
{"nick":"loladiro","date":"2013-03-04T00:59:58.945Z","type":"join"}
{"nick":"isaacs","message":"kewl","date":"2013-03-04T00:59:59.482Z","type":"message"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-03-04T01:00:02.059Z","type":"quit"}
{"nick":"isaacs","message":"so, i am also planning to refactor Writable so that _write gets (chunk, encoding, cb) instead of ([chunk,encoding],cb) or (chunk,cb)","date":"2013-03-04T01:01:35.316Z","type":"message"}
{"nick":"isaacs","message":"it's angering V8 to be violating its strong type preference.","date":"2013-03-04T01:01:58.080Z","type":"message"}
{"nick":"tjfontaine","message":"agreed","date":"2013-03-04T01:02:22.006Z","type":"message"}
{"nick":"isaacs","message":"of course... we'll still have _write being called sometimes with a Buffer and sometimes with a String","date":"2013-03-04T01:02:41.118Z","type":"message"}
{"nick":"isaacs","message":"as the first arg","date":"2013-03-04T01:02:45.311Z","type":"message"}
{"nick":"isaacs","message":"but i'm not sure any way around that","date":"2013-03-04T01:02:51.611Z","type":"message"}
{"nick":"diakopter","message":"bnoordhuis: I'm not sure. I ran vcbuild again, and it finished with no errors.. how do I run some tests?","date":"2013-03-04T01:03:01.761Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: in a common pattern that happens?","date":"2013-03-04T01:03:26.077Z","type":"message"}
{"nick":"diakopter","message":"bnoordhuis: oh, just found the run-tests.exe","date":"2013-03-04T01:03:50.663Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: yeah","date":"2013-03-04T01:04:02.758Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: any time you do console.log('flurb')","date":"2013-03-04T01:04:08.219Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: that's calling Socket.write('flurb')","date":"2013-03-04T01:04:18.599Z","type":"message"}
{"nick":"isaacs","message":"which in turn will call Socket.write('flurb', 'utf8', cb)","date":"2013-03-04T01:04:28.678Z","type":"message"}
{"nick":"isaacs","message":"er, Socket._write('flurb', 'utf8', cb)","date":"2013-03-04T01:04:38.035Z","type":"message"}
{"nick":"tjfontaine","message":"well console log could do the buffer conversion heh","date":"2013-03-04T01:05:19.172Z","type":"message"}
{"nick":"isaacs","message":"but i'm pretty sure the overhead of variadic _write chunk type will be greater than the overhead of pre-_write buffer-izing","date":"2013-03-04T01:05:20.343Z","type":"message"}
{"nick":"diakopter","message":"bnoordhuis: I got 5 test failures. should I nopaste the output?","date":"2013-03-04T01:05:32.891Z","type":"message"}
{"nick":"isaacs","message":"because then we do handle.writeBuffer() or handle.writeUtf8String() etc","date":"2013-03-04T01:05:40.824Z","type":"message"}
{"nick":"isaacs","message":"so that we don't create a separate buffer for ti","date":"2013-03-04T01:05:53.234Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-03-04T01:05:53.478Z","type":"message"}
{"nick":"loladiro","date":"2013-03-04T01:06:35.452Z","type":"join"}
{"nick":"diakopter","message":"I updated the above gist.. in case anyone's curious to see the 5 test failures","date":"2013-03-04T01:07:33.255Z","type":"message"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-03-04T01:07:57.535Z","type":"quit"}
{"nick":"loladiro","date":"2013-03-04T01:11:12.161Z","type":"join"}
{"nick":"diakopter","message":"bnoordhuis: thanks for the tip!","date":"2013-03-04T01:14:04.040Z","type":"message"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-03-04T01:15:12.026Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-03-04T01:16:09.066Z","type":"join"}
{"nick":"loladiro","date":"2013-03-04T01:17:13.327Z","type":"join"}
{"nick":"bnoordhuis","message":"diakopter: the threadpool_cancel_* fail because uv_cancel is only implemented on Unices right now","date":"2013-03-04T01:20:21.825Z","type":"message"}
{"nick":"bnoordhuis","message":"there should be a 'test' in that sentence","date":"2013-03-04T01:20:43.847Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess fs_file_loop is supposed to pass","date":"2013-03-04T01:21:05.444Z","type":"message"}
{"nick":"tjfontaine","message":"complete sentences overrated","date":"2013-03-04T01:21:18.634Z","type":"message"}
{"nick":"diakopter","message":"bnoordhuis: seems to me those tests should auto-pass on Windows, then","date":"2013-03-04T01:21:21.684Z","type":"message"}
{"nick":"tjfontaine","message":"diakopter: not implemented failing tests are a reminder","date":"2013-03-04T01:21:56.484Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T01:23:00.791Z","type":"quit"}
{"nick":"bnoordhuis","message":"isaacs: the node.js cla is different from libuv's?","date":"2013-03-04T01:23:41.070Z","type":"message"}
{"nick":"bnoordhuis","message":"i always point people to nodejs.org/cla.html...","date":"2013-03-04T01:23:53.647Z","type":"message"}
{"nick":"bnoordhuis","message":"are you thinking of http_parser's cla maybe?","date":"2013-03-04T01:24:19.867Z","type":"message"}
{"nick":"isaacs","message":"oh, maybe","date":"2013-03-04T01:27:05.687Z","type":"message"}
{"nick":"isaacs","message":"huh.  that guy seems to not be on the google doc","date":"2013-03-04T01:27:16.466Z","type":"message"}
{"nick":"isaacs","message":"ohh, spelled his name differently","date":"2013-03-04T01:28:26.282Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u0002e428bb7\u0002 : cluster: Rename destroy() to kill(signal=SIGTERM)  Fix #4133, bringing th (+1 more commits) - http://git.io/5rYi0w","date":"2013-03-04T01:29:47.496Z","type":"message"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-03-04T01:30:50.177Z","type":"nick"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-03-04T01:31:43.408Z","type":"quit"}
{"nick":"diakopter","date":"2013-03-04T01:32:45.860Z","type":"part"}
{"nick":"abraxas","date":"2013-03-04T01:38:01.595Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T01:40:10.057Z","type":"quit"}
{"nick":"bnoordhuis","message":"hm, seems linux 3.9-rc1 fixes a denial-of-service for ipv6 where all socket objects end up in the same hash table bucket","date":"2013-03-04T01:40:29.044Z","type":"message"}
{"nick":"tjfontaine","message":"cute","date":"2013-03-04T01:40:45.058Z","type":"message"}
{"nick":"bnoordhuis","message":"also explains (or possibly explains) some of the weird ipv6 performance i was seeing","date":"2013-03-04T01:41:25.964Z","type":"message"}
{"nick":"bnoordhuis","message":"guess i'm forced to upgrade now :)","date":"2013-03-04T01:41:55.614Z","type":"message"}
{"nick":"bnoordhuis","message":"cherry-picking the patch would probably work as well but where's the fun in that?","date":"2013-03-04T01:42:33.405Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #51 \u00034FAILURE\u000f windows-x64 (11/546) windows-ia32 (11/546) osx-x64 (1/545) http://jenkins.nodejs.org/job/nodejs-master/51/","date":"2013-03-04T01:43:59.306Z","type":"message"}
{"nick":"benoitc","date":"2013-03-04T01:46:46.616Z","type":"join"}
{"nick":"hz","date":"2013-03-04T02:00:11.133Z","type":"quit"}
{"nick":"bnoordhuis","message":"another nice denial-of-service: slow start tcp sockets with a zero send congestion window cause an infinite loop in 3.6 and up","date":"2013-03-04T02:00:16.326Z","type":"message"}
{"nick":"bnoordhuis","message":"reading through recent kernel commits is not good for one's peace of mind","date":"2013-03-04T02:01:30.350Z","type":"message"}
{"nick":"brucem","message":"bnoordhuis: have to wonder what led to them being found … active attacks, code inspection, fuzz testing somewhere ...","date":"2013-03-04T02:05:11.284Z","type":"message"}
{"nick":"brucem","message":"bnoordhuis: and who knew about them prior to them being found and just hadn't bothered to disclose.","date":"2013-03-04T02:05:25.552Z","type":"message"}
{"nick":"bnoordhuis","message":"brucem: i think it's a combination of all three. maybe not attacks but people running into them as bugs","date":"2013-03-04T02:08:47.122Z","type":"message"}
{"nick":"bnoordhuis","message":"re: fuzz testing, http://codemonkey.org.uk/projects/trinity/ - it's found quite a few bugs so far, including one or two security issues","date":"2013-03-04T02:11:23.920Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, off to bed. sleep tight all","date":"2013-03-04T02:11:36.447Z","type":"message"}
{"nick":"isaacs","message":"g'nite bnoordhuis ","date":"2013-03-04T02:13:05.866Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 248 seconds","date":"2013-03-04T02:16:01.352Z","type":"quit"}
{"nick":"brson","date":"2013-03-04T02:24:23.506Z","type":"join"}
{"nick":"kazupon","date":"2013-03-04T02:31:52.070Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T02:40:26.882Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-04T02:42:48.138Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-04T02:43:47.291Z","type":"quit"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-03-04T03:00:25.640Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-03-04T03:00:40.476Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T03:00:55.030Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-04T03:22:03.365Z","type":"join"}
{"nick":"kazupon","date":"2013-03-04T03:27:04.304Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-03-04T03:27:06.356Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-04T03:27:55.577Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-03-04T03:29:05.963Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-03-04T03:32:09.398Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-03-04T03:33:11.091Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-03-04T03:36:41.745Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T03:40:51.335Z","type":"quit"}
{"nick":"MI6","reason":"Ping timeout: 252 seconds","date":"2013-03-04T03:47:14.429Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-04T03:48:48.074Z","type":"join"}
{"nick":"loladiro","date":"2013-03-04T03:52:12.178Z","type":"join"}
{"nick":"bradleymeck","date":"2013-03-04T03:53:27.382Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-04T03:59:53.358Z","type":"quit"}
{"nick":"abraxas","date":"2013-03-04T04:05:02.677Z","type":"join"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-03-04T04:29:53.564Z","type":"nick"}
{"nick":"bradleymeck","date":"2013-03-04T04:37:32.610Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-04T04:38:53.275Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T04:41:12.569Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-04T04:42:17.732Z","type":"join"}
{"nick":"mikeal","date":"2013-03-04T04:44:06.957Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T04:48:23.007Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-03-04T04:50:21.294Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-04T05:03:32.522Z","type":"quit"}
{"nick":"stagas","reason":"Quit: ChatZilla 0.9.90-rdmsoft [XULRunner 1.9.0.17/2009122204]","date":"2013-03-04T05:04:20.334Z","type":"quit"}
{"nick":"mikeal","date":"2013-03-04T05:09:28.385Z","type":"join"}
{"nick":"kazupon","date":"2013-03-04T05:27:00.941Z","type":"join"}
{"nick":"hij1nx","message":"indutny: i realized that i wrote something very similar to what you had done so i scrapped it and just used your module.","date":"2013-03-04T05:34:07.515Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T05:40:43.666Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T05:41:32.442Z","type":"quit"}
{"nick":"indexzero","date":"2013-03-04T05:45:41.277Z","type":"join"}
{"nick":"benoitc","date":"2013-03-04T05:45:48.262Z","type":"join"}
{"nick":"loladiro","date":"2013-03-04T05:50:50.432Z","type":"join"}
{"nick":"isaacs","message":"wanna see something awesome?","date":"2013-03-04T05:54:05.379Z","type":"message"}
{"nick":"isaacs","message":"http://static.izs.me/benchmark-write-refactor-vs-0.8.html","date":"2013-03-04T05:54:07.348Z","type":"message"}
{"nick":"tjfontaine","message":"now you're talking","date":"2013-03-04T05:55:31.430Z","type":"message"}
{"nick":"isaacs","message":"https://docs.google.com/spreadsheet/ccc?key=0AganzoeqkiHddE9uRlA5WS0xSF9NTGN1QS0zZ3FRSWc#gid=8","date":"2013-03-04T05:57:01.441Z","type":"message"}
{"nick":"isaacs","message":"that's benchmark/http.sh results","date":"2013-03-04T05:57:08.540Z","type":"message"}
{"nick":"isaacs","message":"v0.8 vs my writable-refactor branch","date":"2013-03-04T05:57:15.613Z","type":"message"}
{"nick":"isaacs","message":"hard to measure on smartos, though.","date":"2013-03-04T05:57:27.384Z","type":"message"}
{"nick":"isaacs","message":"the variability is much higher.","date":"2013-03-04T05:57:31.490Z","type":"message"}
{"nick":"isaacs","message":"i think probably just because of the CPU bursty effect","date":"2013-03-04T05:57:38.866Z","type":"message"}
{"nick":"isaacs","message":"benchmarks really want a sustained guaranteed cpu level","date":"2013-03-04T05:57:57.907Z","type":"message"}
{"nick":"tjfontaine","message":"indeed","date":"2013-03-04T05:58:15.173Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T06:10:49.416Z","type":"quit"}
{"nick":"MI6","date":"2013-03-04T06:13:05.168Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Rod Vagg\u000f \u00037v0.8\u000f * \u0002a6a1659\u0002 : link to LevelUP modules wiki page, not level-hooks - http://git.io/8ut8eg","date":"2013-03-04T06:13:08.765Z","type":"message"}
{"nick":"benoitc","date":"2013-03-04T06:14:47.566Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-03-04T06:19:27.851Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #52 \u00034FAILURE\u000f windows-x64 (11/546) linux-ia32 (1/546) windows-ia32 (11/546) osx-x64 (1/545) http://jenkins.nodejs.org/job/nodejs-master/52/","date":"2013-03-04T06:25:19.498Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T06:29:19.721Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.8\u0002: #20 \u00034FAILURE\u000f linux-x64 (2/467) osx-ia32 (1/467) smartos-ia32 (1/467) windows-x64 (2/467) windows-ia32 (2/467) osx-x64 (2/467) smartos-x64 (1/467) linux-ia32 (3/467) http://jenkins.nodejs.org/job/nodejs-v0.8/20/","date":"2013-03-04T06:36:14.223Z","type":"message"}
{"nick":"loladiro","date":"2013-03-04T06:42:27.823Z","type":"join"}
{"nick":"wolfeidau","date":"2013-03-04T06:45:03.199Z","type":"join"}
{"nick":"Raynos","reason":"Ping timeout: 252 seconds","date":"2013-03-04T06:59:48.770Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-04T07:12:33.672Z","type":"quit"}
{"nick":"mikeal","date":"2013-03-04T07:20:01.723Z","type":"join"}
{"nick":"kevireilly","reason":"Read error: Connection reset by peer","date":"2013-03-04T07:30:23.141Z","type":"quit"}
{"nick":"rendar","date":"2013-03-04T07:30:38.968Z","type":"join"}
{"nick":"kevireilly","date":"2013-03-04T07:30:45.228Z","type":"join"}
{"nick":"kevireilly","reason":"Ping timeout: 245 seconds","date":"2013-03-04T07:35:27.069Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T07:37:48.897Z","type":"quit"}
{"nick":"kevireilly","date":"2013-03-04T07:40:42.733Z","type":"join"}
{"nick":"kevireilly","reason":"Write error: Connection reset by peer","date":"2013-03-04T07:54:41.490Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-04T07:56:44.845Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-03-04T08:00:19.663Z","type":"quit"}
{"nick":"dominictarr","date":"2013-03-04T08:09:34.654Z","type":"join"}
{"nick":"dominictarr","reason":"Remote host closed the connection","date":"2013-03-04T08:10:38.870Z","type":"quit"}
{"nick":"dominictarr","date":"2013-03-04T08:11:41.978Z","type":"join"}
{"nick":"indexzero","date":"2013-03-04T08:21:25.383Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-04T08:32:54.891Z","type":"quit"}
{"nick":"csaoh","date":"2013-03-04T08:36:21.801Z","type":"join"}
{"nick":"bradleymeck","date":"2013-03-04T08:38:49.335Z","type":"join"}
{"nick":"slaskis","date":"2013-03-04T08:52:54.609Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-03-04T09:07:10.062Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-03-04T09:10:03.531Z","type":"join"}
{"nick":"`3rdEden","date":"2013-03-04T09:14:48.388Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T09:16:28.816Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T09:23:13.206Z","type":"quit"}
{"nick":"Raynos","date":"2013-03-04T09:29:03.760Z","type":"join"}
{"nick":"loladiro","date":"2013-03-04T09:31:08.245Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-03-04T09:32:45.837Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-04T09:46:50.563Z","type":"join"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-03-04T09:55:57.672Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-03-04T09:56:17.490Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-04T09:56:52.528Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 245 seconds","date":"2013-03-04T10:05:51.274Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-04T10:13:51.336Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T10:14:33.342Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-04T10:15:18.159Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-03-04T10:16:56.779Z","type":"join"}
{"nick":"Kakera","date":"2013-03-04T10:25:07.978Z","type":"join"}
{"nick":"dominictarr","date":"2013-03-04T10:26:04.504Z","type":"join"}
{"nick":"csaoh","date":"2013-03-04T10:29:27.056Z","type":"join"}
{"nick":"Kakera","reason":"Read error: Connection reset by peer","date":"2013-03-04T10:29:57.104Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T10:36:42.295Z","type":"quit"}
{"nick":"roxlu","message":"hi guys, when I have a client socket, what's the correct way of disconnecting / cleaning up the connect? (when my app closes)","date":"2013-03-04T10:57:38.136Z","type":"message"}
{"nick":"roxlu","message":"I mean, when my app closes, I need to wait for the async call to happen; but I actually would need to block my destructor (using c++) till the socket is really disconnected","date":"2013-03-04T11:00:25.139Z","type":"message"}
{"nick":"indutny","message":"uv_close","date":"2013-03-04T11:00:26.981Z","type":"message"}
{"nick":"roxlu","message":"indutny: thanks, but how would I handle that in a destructor (or sig callback)","date":"2013-03-04T11:03:13.816Z","type":"message"}
{"nick":"indutny","message":"oh, there's a simple way","date":"2013-03-04T11:03:29.080Z","type":"message"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-03-04T11:03:34.156Z","type":"quit"}
{"nick":"indutny","message":"if destructor is called before connection is closed","date":"2013-03-04T11:03:35.774Z","type":"message"}
{"nick":"indutny","message":"then you'll need to allocate uv_tcp_t","date":"2013-03-04T11:03:44.606Z","type":"message"}
{"nick":"indutny","message":"and free it in uv_close's callback","date":"2013-03-04T11:03:50.402Z","type":"message"}
{"nick":"indutny","message":"class MyClass { uv_tcp_t* tcp; MyClass() { tcp = new uv_tcp_t(); } ~MyClass() { uv_close(tcp, deletingFunction) } }","date":"2013-03-04T11:04:30.196Z","type":"message"}
{"nick":"roxlu","message":"but uv_close is async, right? ","date":"2013-03-04T11:04:46.144Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2013-03-04T11:05:03.841Z","type":"message"}
{"nick":"indutny","message":"definitely async","date":"2013-03-04T11:05:11.739Z","type":"message"}
{"nick":"roxlu","message":"so after calling uv_close my MyClass is deallocated","date":"2013-03-04T11:05:23.410Z","type":"message"}
{"nick":"hz","date":"2013-03-04T11:05:32.688Z","type":"join"}
{"nick":"roxlu","message":"and wouldn't it result in unexpected behaviour when uv calls my deletingFunction ? ","date":"2013-03-04T11:05:54.721Z","type":"message"}
{"nick":"indutny","message":"no","date":"2013-03-04T11:05:58.288Z","type":"message"}
{"nick":"indutny","message":"void deletingFunction(uv_handle_t* handle) { delete handle }","date":"2013-03-04T11:06:07.118Z","type":"message"}
{"nick":"indutny","message":"deletingFunction is a static function","date":"2013-03-04T11:06:16.933Z","type":"message"}
{"nick":"indutny","message":"not a method","date":"2013-03-04T11:06:30.859Z","type":"message"}
{"nick":"roxlu","message":"ok, thanks","date":"2013-03-04T11:06:55.937Z","type":"message"}
{"nick":"roxlu","message":"I probably miss some info about the destruction of an application","date":"2013-03-04T11:07:24.314Z","type":"message"}
{"nick":"indutny","message":"erm?","date":"2013-03-04T11:07:35.682Z","type":"message"}
{"nick":"roxlu","message":"I thought that as soon as my d'tor has returned it stops executing anything related to the class","date":"2013-03-04T11:07:53.444Z","type":"message"}
{"nick":"indutny","message":"to the instance","date":"2013-03-04T11:08:26.953Z","type":"message"}
{"nick":"indutny","message":"not class itself","date":"2013-03-04T11:08:28.906Z","type":"message"}
{"nick":"roxlu","message":"yes","date":"2013-03-04T11:08:34.863Z","type":"message"}
{"nick":"indutny","message":"and static function is a member of class","date":"2013-03-04T11:08:37.778Z","type":"message"}
{"nick":"indutny","message":"not related to instance at all","date":"2013-03-04T11:08:41.538Z","type":"message"}
{"nick":"indutny","message":"you can't even use `this` in it","date":"2013-03-04T11:08:46.384Z","type":"message"}
{"nick":"roxlu","message":"yeah I see that now indeed. thanks a lot","date":"2013-03-04T11:08:50.875Z","type":"message"}
{"nick":"indutny","message":"np","date":"2013-03-04T11:08:54.389Z","type":"message"}
{"nick":"tellnes","date":"2013-03-04T11:25:59.422Z","type":"join"}
{"nick":"roxlu","message":"indutny: I've got my uv_sock_t on the stack and calling uv_close() when it isn't connected yet gives me a assertion failed in src/unix/core.c 140. ","date":"2013-03-04T11:26:30.447Z","type":"message"}
{"nick":"roxlu","message":"Do I first need to check if the sock is actually connected before calling close\"","date":"2013-03-04T11:26:43.379Z","type":"message"}
{"nick":"indutny","message":"looks like you're passing something wrong to it","date":"2013-03-04T11:28:04.264Z","type":"message"}
{"nick":"indutny","message":"not socket","date":"2013-03-04T11:28:08.051Z","type":"message"}
{"nick":"indutny","message":"probably it was either already destroyed","date":"2013-03-04T11:28:13.707Z","type":"message"}
{"nick":"indutny","message":"or deallocated","date":"2013-03-04T11:28:16.683Z","type":"message"}
{"nick":"indutny","message":"and what's uv_sock_t?","date":"2013-03-04T11:28:27.422Z","type":"message"}
{"nick":"roxlu","message":"uhh uv_tcp_t","date":"2013-03-04T11:28:34.847Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-03-04T11:28:40.630Z","type":"message"}
{"nick":"roxlu","message":"This basic client socket wrapper: https://github.com/roxlu/roxlu/blob/master/addons/UV/include/uv/ClientSocket.h ","date":"2013-03-04T11:29:20.319Z","type":"message"}
{"nick":"roxlu","message":"everything works fine but I just want to make sure it shutdowns down nicely when the object gets destructed","date":"2013-03-04T11:29:57.640Z","type":"message"}
{"nick":"roxlu","message":"so in my d'tor I want to call: uv_close(&sock, NULL); (if a null callback is possible)","date":"2013-03-04T11:30:57.872Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2013-03-04T11:31:01.513Z","type":"message"}
{"nick":"indutny","message":"that won't work","date":"2013-03-04T11:31:04.729Z","type":"message"}
{"nick":"indutny","message":"I told ya","date":"2013-03-04T11:31:07.675Z","type":"message"}
{"nick":"indutny","message":"allocate uv_tcp_t","date":"2013-03-04T11:31:11.756Z","type":"message"}
{"nick":"indutny","message":"and destroy it in uv_close's callback","date":"2013-03-04T11:31:18.947Z","type":"message"}
{"nick":"roxlu","message":"ok so on the stack is not an option","date":"2013-03-04T11:31:25.344Z","type":"message"}
{"nick":"indutny","message":"definitely not","date":"2013-03-04T11:31:30.570Z","type":"message"}
{"nick":"roxlu","message":"ok thanks","date":"2013-03-04T11:31:39.365Z","type":"message"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-03-04T11:32:24.044Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-04T11:37:05.101Z","type":"join"}
{"nick":"roxlu","message":"indutny: it gives me this assertion error when uv_tcp_init() hasn't been called and I call uv_close() on the handle. I know this is not also not the way it's supposed to work, but is there a way to check if a uv_tcp_t is initialized so I can check that myself before calling close() ? ","date":"2013-03-04T11:39:10.198Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-03-04T11:39:20.505Z","type":"message"}
{"nick":"indutny","message":"well, you need to call init","date":"2013-03-04T11:39:24.607Z","type":"message"}
{"nick":"indutny","message":"otherwise it's just a junk","date":"2013-03-04T11:39:29.859Z","type":"message"}
{"nick":"indutny","message":"chunk of dirty uninitialized memory","date":"2013-03-04T11:39:39.501Z","type":"message"}
{"nick":"indutny","message":"what else have you expected","date":"2013-03-04T11:39:43.774Z","type":"message"}
{"nick":"roxlu","message":"I call init, but in my connect() funtion","date":"2013-03-04T11:40:33.359Z","type":"message"}
{"nick":"roxlu","message":"but I'll move it up to my c'tor","date":"2013-03-04T11:40:43.436Z","type":"message"}
{"nick":"roxlu","message":"but I'll move it up to my c'tor","date":"2013-03-04T11:40:45.957Z","type":"message"}
{"nick":"roxlu","message":"oh.. ","date":"2013-03-04T11:40:48.227Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-04T11:40:53.175Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2013-03-04T11:41:39.916Z","type":"quit"}
{"nick":"roxlu","message":"indutny: I'm curious why libuv is so easy with doing things on the heap? allocating when not really necessary seems like a waste of cpu cycles","date":"2013-03-04T11:50:08.083Z","type":"message"}
{"nick":"indutny","message":"it's ok to not allocate, but handle should be alive until callback will be invoked","date":"2013-03-04T11:51:01.265Z","type":"message"}
{"nick":"indutny","message":"and when you're using on-stack variable - function, holding it, returns before callback is invoked","date":"2013-03-04T11:51:28.573Z","type":"message"}
{"nick":"roxlu","message":"yeah I see what you mean","date":"2013-03-04T11:51:34.333Z","type":"message"}
{"nick":"indutny","message":"asynchronous model","date":"2013-03-04T11:51:35.389Z","type":"message"}
{"nick":"indutny","message":"there're no other way to deal with it","date":"2013-03-04T11:51:42.639Z","type":"message"}
{"nick":"indutny","message":"you either not destroy things until they're finished/closed","date":"2013-03-04T11:51:55.281Z","type":"message"}
{"nick":"indutny","message":"or allocate them separately","date":"2013-03-04T11:51:59.383Z","type":"message"}
{"nick":"indutny","message":"depending on what you're doing and how you can do it","date":"2013-03-04T11:52:08.671Z","type":"message"}
{"nick":"rendar","message":"indutny: thats because the thread in the threadpool can receive a completion with an address of a destroyed object causing segfault?","date":"2013-03-04T11:52:57.370Z","type":"message"}
{"nick":"indutny","message":"yes, undefined behaviour","date":"2013-03-04T11:53:08.859Z","type":"message"}
{"nick":"rendar","message":"indutny: what about the user will not destroy the uv_stream_t until on_close() callback is not called?","date":"2013-03-04T11:54:12.732Z","type":"message"}
{"nick":"indutny","message":"it'll work","date":"2013-03-04T11:54:24.404Z","type":"message"}
{"nick":"rendar","message":"indutny: so basically if we assure that the uv_stream_t will be alive until on_close(), we don't need that heap allocation, in theory..","date":"2013-03-04T11:55:07.632Z","type":"message"}
{"nick":"csaoh","date":"2013-03-04T11:55:44.463Z","type":"join"}
{"nick":"indutny","message":"yes","date":"2013-03-04T11:59:09.386Z","type":"message"}
{"nick":"indutny","message":"not in theory","date":"2013-03-04T11:59:11.516Z","type":"message"}
{"nick":"indutny","message":"this really works","date":"2013-03-04T11:59:22.005Z","type":"message"}
{"nick":"rendar","message":"yep","date":"2013-03-04T11:59:29.202Z","type":"message"}
{"nick":"kazupon","date":"2013-03-04T12:03:13.848Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 255 seconds","date":"2013-03-04T12:08:47.489Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-03-04T12:09:16.476Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-04T12:30:03.168Z","type":"join"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-03-04T12:37:44.606Z","type":"nick"}
{"nick":"piscisaureus_","reason":"Ping timeout: 252 seconds","date":"2013-03-04T12:47:20.402Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-03-04T12:51:23.158Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-04T12:56:26.839Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 245 seconds","date":"2013-03-04T13:02:54.890Z","type":"quit"}
{"nick":"abraxas","date":"2013-03-04T13:04:11.552Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: hey ben","date":"2013-03-04T13:06:55.504Z","type":"message"}
{"nick":"indutny","message":"what you're up to today","date":"2013-03-04T13:07:01.299Z","type":"message"}
{"nick":"abraxas","reason":"Ping timeout: 255 seconds","date":"2013-03-04T13:08:44.440Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: nothing much","date":"2013-03-04T13:09:08.337Z","type":"message"}
{"nick":"bnoordhuis","message":"you?","date":"2013-03-04T13:09:13.081Z","type":"message"}
{"nick":"indutny","message":"reading about u-kernels","date":"2013-03-04T13:10:22.336Z","type":"message"}
{"nick":"indutny","message":"and IA32 details","date":"2013-03-04T13:10:33.037Z","type":"message"}
{"nick":"indutny","message":"bbiab","date":"2013-03-04T13:11:08.204Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-03-04T13:12:04.839Z","type":"join"}
{"nick":"piscisaureus_","reason":"Read error: No route to host","date":"2013-03-04T13:19:22.566Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-03-04T13:19:44.995Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-03-04T13:31:23.389Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-04T13:57:55.137Z","type":"join"}
{"nick":"rendar","message":"indutny: what are u-kernels?","date":"2013-03-04T14:02:40.268Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 252 seconds","date":"2013-03-04T14:06:19.791Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-04T14:17:15.834Z","type":"join"}
{"nick":"indutny","message":"back","date":"2013-03-04T14:44:50.461Z","type":"message"}
{"nick":"c4milo","date":"2013-03-04T14:52:28.388Z","type":"join"}
{"nick":"bradleymeck","date":"2013-03-04T14:58:12.410Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-04T14:58:27.671Z","type":"quit"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-03-04T14:59:09.738Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-04T14:59:31.324Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 256 seconds","date":"2013-03-04T15:00:18.523Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-03-04T15:11:18.139Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: for when you're feeling better, there's a couple of libuv patches you should review","date":"2013-03-04T15:13:53.571Z","type":"message"}
{"nick":"bnoordhuis","message":"and maybe answer rvagg on the mailing list about that ssize_t thing","date":"2013-03-04T15:14:05.780Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: i know, and i will.","date":"2013-03-04T15:14:21.115Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: re rvagg's question - do you think it could be somehow related to including uv.h in a c++ unit?","date":"2013-03-04T15:15:11.567Z","type":"message"}
{"nick":"piscisaureus_","message":"that one makes the mind boggle","date":"2013-03-04T15:15:32.375Z","type":"message"}
{"nick":"bradleymeck","date":"2013-03-04T15:15:39.867Z","type":"join"}
{"nick":"piscisaureus_","message":"jimmies rustled","date":"2013-03-04T15:15:53.107Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't know, possibly, who can tell with msvc?","date":"2013-03-04T15:16:29.726Z","type":"message"}
{"nick":"piscisaureus_","message":"I don't understand why people are reporting that advapi.lib isn't linked","date":"2013-03-04T15:21:43.961Z","type":"message"}
{"nick":"piscisaureus_","message":"it all builds fine for me","date":"2013-03-04T15:21:47.261Z","type":"message"}
{"nick":"piscisaureus_","message":"[%   1|+   3|-   0]: loop_stop","date":"2013-03-04T15:22:12.594Z","type":"message"}
{"nick":"piscisaureus_","message":"`loop_stop` failed: exit code 3","date":"2013-03-04T15:22:12.803Z","type":"message"}
{"nick":"piscisaureus_","message":"Output from process `loop_stop`:","date":"2013-03-04T15:22:12.803Z","type":"message"}
{"nick":"piscisaureus_","message":"Assertion failed in test\\test-loop-stop.c on line 65: prepare_called == 3","date":"2013-03-04T15:22:12.803Z","type":"message"}
{"nick":"piscisaureus_","message":"Someone did not run the tests before landing a patch :-(","date":"2013-03-04T15:22:22.188Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: hi, does libuv uses TransmitFile in windows to emulate sendfile() ?","date":"2013-03-04T15:23:37.886Z","type":"message"}
{"nick":"piscisaureus_","message":"D:\\libuv>grep TransmitFile -r src","date":"2013-03-04T15:24:14.931Z","type":"message"}
{"nick":"piscisaureus_","message":"no","date":"2013-03-04T15:24:16.708Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Xidorn Quan\u000f \u00037master\u000f * \u0002009ba02\u0002 : dns: fix ReferenceError in resolve() error path  A typo in the variable n - http://git.io/z3WbFQ","date":"2013-03-04T15:24:45.806Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: my irc client replaced your path with something scary","date":"2013-03-04T15:25:11.998Z","type":"message"}
{"nick":"indutny","message":"C: D: E: F: G:","date":"2013-03-04T15:25:16.492Z","type":"message"}
{"nick":"indutny","message":"ah, that was D:","date":"2013-03-04T15:25:22.167Z","type":"message"}
{"nick":"isaacs","message":"so, i got a green benchmark result vs v0.8 last night","date":"2013-03-04T15:31:53.538Z","type":"message"}
{"nick":"isaacs","message":"http://static.izs.me/benchmark-write-refactor-vs-0.8.html","date":"2013-03-04T15:32:02.994Z","type":"message"}
{"nick":"indutny","message":"good!","date":"2013-03-04T15:32:12.365Z","type":"message"}
{"nick":"indutny","message":"was that this data, encoding patch?","date":"2013-03-04T15:32:18.661Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-03-04T15:32:23.501Z","type":"message"}
{"nick":"indutny","message":"so still explicit is better than implicit? :)","date":"2013-03-04T15:32:32.986Z","type":"message"}
{"nick":"indutny","message":"what has it actually did?","date":"2013-03-04T15:32:50.808Z","type":"message"}
{"nick":"indutny","message":"s/did/done/","date":"2013-03-04T15:32:55.567Z","type":"message"}
{"nick":"isaacs","message":"the big diff was that we're passing arguments to _write() that are a bit more consistent","date":"2013-03-04T15:34:51.433Z","type":"message"}
{"nick":"isaacs","message":"and that the write()/_write()/onwrite() methods are all split up and organized better.","date":"2013-03-04T15:35:07.745Z","type":"message"}
{"nick":"isaacs","message":"there's still a bit more that can be done in the Readable class, and in Socket","date":"2013-03-04T15:35:20.117Z","type":"message"}
{"nick":"indutny","message":"great","date":"2013-03-04T15:35:32.717Z","type":"message"}
{"nick":"isaacs","message":"it's tricky work, though. you have to make a tiny tiny change, run all the tests, make another tiny change, etc.","date":"2013-03-04T15:35:44.350Z","type":"message"}
{"nick":"isaacs","message":"because it's so easy to screw up","date":"2013-03-04T15:35:49.154Z","type":"message"}
{"nick":"isaacs","message":"turns out computers do exactly what you tell them, even if you tell htem to do the wrong things in the wrong order.","date":"2013-03-04T15:36:08.117Z","type":"message"}
{"nick":"isaacs","message":"they're not very bright.","date":"2013-03-04T15:36:13.016Z","type":"message"}
{"nick":"indutny","message":"I hate heuristics :)","date":"2013-03-04T15:36:14.010Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-03-04T15:36:19.588Z","type":"message"}
{"nick":"indutny","message":"I love determinstics","date":"2013-03-04T15:36:34.681Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-03-04T15:36:35.178Z","type":"message"}
{"nick":"isaacs","message":"i'm seeing hardly any deopts or bailouts in the net bench scripts now, though","date":"2013-03-04T15:36:38.269Z","type":"message"}
{"nick":"isaacs","message":"so that's a plus","date":"2013-03-04T15:36:41.399Z","type":"message"}
{"nick":"indutny","message":"kewl","date":"2013-03-04T15:37:11.852Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-04T15:38:19.621Z","type":"quit"}
{"nick":"isaacs","message":"indutny: how do you feel about hte semantics changes?","date":"2013-03-04T15:38:43.315Z","type":"message"}
{"nick":"isaacs","message":"indutny: now _transform() doens't get an output function, and _write gets a (usually useless) encoding arg","date":"2013-03-04T15:38:59.810Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-03-04T15:39:10.438Z","type":"message"}
{"nick":"isaacs","message":"but i kind of like how _transform() and _write() suddenly have the same signature","date":"2013-03-04T15:39:14.339Z","type":"message"}
{"nick":"indutny","message":"last one is not very friendly","date":"2013-03-04T15:39:18.393Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2013-03-04T15:39:25.293Z","type":"message"}
{"nick":"isaacs","message":"of course, if you don't do decodeBuffers:false, then _write will always get a buffer, and encoding will always be ''","date":"2013-03-04T15:39:47.838Z","type":"message"}
{"nick":"indutny","message":"yeah, I understand","date":"2013-03-04T15:39:55.941Z","type":"message"}
{"nick":"stagas","date":"2013-03-04T15:40:03.595Z","type":"join"}
{"nick":"isaacs","message":"only for TCP is this an issue, and we could probably do the same for CryptoStreams also, and get some better performance there.","date":"2013-03-04T15:40:13.821Z","type":"message"}
{"nick":"indutny","message":"so, despite it's friendlessness, it seems ok to me","date":"2013-03-04T15:40:15.188Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #53 \u00034FAILURE\u000f windows-x64 (11/546) windows-ia32 (12/546) osx-x64 (1/545) http://jenkins.nodejs.org/job/nodejs-master/53/","date":"2013-03-04T15:40:26.757Z","type":"message"}
{"nick":"saghul","message":"piscisaureus_ re uv_stop, test passes for me :-O","date":"2013-03-04T15:40:29.728Z","type":"message"}
{"nick":"piscisaureus_","message":":o","date":"2013-03-04T15:41:03.249Z","type":"message"}
{"nick":"indutny","message":"D:","date":"2013-03-04T15:41:29.035Z","type":"message"}
{"nick":"saghul","message":"piscisaureus_ could it be that the loop iterates more times on uv-win?","date":"2013-03-04T15:41:39.095Z","type":"message"}
{"nick":"piscisaureus_","message":"euh... i didn't look at it yet","date":"2013-03-04T15:42:03.317Z","type":"message"}
{"nick":"piscisaureus_","message":"possibly, yes","date":"2013-03-04T15:42:14.002Z","type":"message"}
{"nick":"AvianFlu","date":"2013-03-04T15:42:49.583Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-04T15:43:01.606Z","type":"quit"}
{"nick":"saghul","message":"maybe the test should say >= 2, since the number of iterations is not guaranteed?","date":"2013-03-04T15:43:34.232Z","type":"message"}
{"nick":"piscisaureus_","message":"brb","date":"2013-03-04T15:54:32.282Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: rvagg was just helped","date":"2013-03-04T15:54:41.593Z","type":"message"}
{"nick":"kazupon","date":"2013-03-04T15:55:21.987Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u0002119cbf4\u0002 : stream: Don't require read(0) to emit 'readable' event  When a readable l - http://git.io/s1XiFA","date":"2013-03-04T15:56:19.735Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 245 seconds","date":"2013-03-04T15:59:09.862Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-03-04T16:00:39.039Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-03-04T16:02:42.684Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #54 \u00034FAILURE\u000f windows-x64 (11/546) windows-ia32 (11/546) osx-x64 (1/545) http://jenkins.nodejs.org/job/nodejs-master/54/","date":"2013-03-04T16:12:29.727Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: It's super annoying that fs.unlink() fails on read-only files on Windows","date":"2013-03-04T16:13:36.445Z","type":"message"}
{"nick":"piscisaureus_","message":"muhaha","date":"2013-03-04T16:13:43.874Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: yeah.","date":"2013-03-04T16:13:48.493Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: I think libuv should just chmod regular files before deleting them","date":"2013-03-04T16:13:59.132Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: so ... call bill gates once more?","date":"2013-03-04T16:14:01.177Z","type":"message"}
{"nick":"piscisaureus_","message":"nah","date":"2013-03-04T16:14:07.291Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: yeah, or that.","date":"2013-03-04T16:14:10.108Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: it'd be weird. The ususal meaning of the +r bit on windows (which is fairly uncommon) means don't modify or delete","date":"2013-03-04T16:14:38.289Z","type":"message"}
{"nick":"piscisaureus_","message":"I think we should rather not make chmod set the +r bit","date":"2013-03-04T16:14:47.740Z","type":"message"}
{"nick":"isaacs","message":"ok..","date":"2013-03-04T16:14:54.023Z","type":"message"}
{"nick":"piscisaureus_","message":"and make it a complete no-op","date":"2013-03-04T16:14:55.024Z","type":"message"}
{"nick":"isaacs","message":"but doing chmod 0666 on the file before unlinking it work","date":"2013-03-04T16:15:02.635Z","type":"message"}
{"nick":"piscisaureus_","message":"yes chmod 0666 removes the readonly bit","date":"2013-03-04T16:15:28.458Z","type":"message"}
{"nick":"piscisaureus_","message":"I agree with you that we should address this but I am not sure if ignoring the +r bit is the way to go","date":"2013-03-04T16:15:54.355Z","type":"message"}
{"nick":"piscisaureus_","message":"or rather - I'd like to have some more input and not only cater for what is practical for NPM","date":"2013-03-04T16:16:58.123Z","type":"message"}
{"nick":"bnoordhuis","message":"sounds like it'll confuse windows users","date":"2013-03-04T16:17:15.113Z","type":"message"}
{"nick":"piscisaureus_","message":"Are there any extremely windows-y folks around?","date":"2013-03-04T16:17:16.507Z","type":"message"}
{"nick":"bnoordhuis","message":"i bought windows 95. i didn't have a PC at the time but the ads made it sound like you just had to have windows 95","date":"2013-03-04T16:18:40.689Z","type":"message"}
{"nick":"bnoordhuis","message":"windows-y enough?","date":"2013-03-04T16:18:44.479Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: ok show me your pinball highscore","date":"2013-03-04T16:18:57.996Z","type":"message"}
{"nick":"bnoordhuis","message":"i play minesweeper at the grandmaster level","date":"2013-03-04T16:19:43.370Z","type":"message"}
{"nick":"piscisaureus_","message":"which reminds me","date":"2013-03-04T16:19:45.272Z","type":"message"}
{"nick":"piscisaureus_","message":"http://blogs.msdn.com/b/oldnewthing/archive/2012/12/18/10378851.aspx","date":"2013-03-04T16:19:47.322Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: so, npm is going to work aroudn this, because npm needs to work on 0.8","date":"2013-03-04T16:20:10.322Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: that's not the issue.","date":"2013-03-04T16:20:13.740Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: yes - that's great","date":"2013-03-04T16:20:24.113Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: npm is just the thign that i noticed that hit this.  but i think grunt has as well.","date":"2013-03-04T16:20:24.346Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: i removed chmod from rimraf (since it didn't belong there) and a bunch of windows users said it broke their stuff","date":"2013-03-04T16:20:42.969Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: i could just have rimraf do this, of course.  chmod non-directory files to remove the +r","date":"2013-03-04T16:21:06.363Z","type":"message"}
{"nick":"isaacs","message":"but i like how simple rimraf is","date":"2013-03-04T16:21:32.012Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: really, the annoying thing is that git on windows *creates* read-only files in the first place.","date":"2013-03-04T16:22:05.545Z","type":"message"}
{"nick":"piscisaureus_","message":"Does git do this?","date":"2013-03-04T16:22:15.626Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: yes","date":"2013-03-04T16:22:18.595Z","type":"message"}
{"nick":"piscisaureus_","message":"god damn","date":"2013-03-04T16:22:35.719Z","type":"message"}
{"nick":"isaacs","message":"i've been texting linus and telling him to change it, but he doesn't ever answer my texts","date":"2013-03-04T16:22:41.844Z","type":"message"}
{"nick":"piscisaureus_","message":"yeah","date":"2013-03-04T16:22:52.778Z","type":"message"}
{"nick":"piscisaureus_","message":"asshole","date":"2013-03-04T16:23:01.169Z","type":"message"}
{"nick":"isaacs","message":"just sends me something about cats and dogs","date":"2013-03-04T16:23:02.960Z","type":"message"}
{"nick":"isaacs","message":"at least, that's what I assume C&D stands for","date":"2013-03-04T16:23:08.474Z","type":"message"}
{"nick":"piscisaureus_","message":"Oh I heard he usually did fishes and unicorns","date":"2013-03-04T16:23:33.631Z","type":"message"}
{"nick":"bnoordhuis","message":"he's into scuba diving","date":"2013-03-04T16:23:57.636Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: btw: https://docs.google.com/spreadsheet/ccc?key=0AganzoeqkiHddE9uRlA5WS0xSF9NTGN1QS0zZ3FRSWc#gid=8","date":"2013-03-04T16:24:05.603Z","type":"message"}
{"nick":"bnoordhuis","message":"my uncle is a diving instructor. he went diving with linus once","date":"2013-03-04T16:24:08.184Z","type":"message"}
{"nick":"TooTallNate","date":"2013-03-04T16:24:44.064Z","type":"join"}
{"nick":"isaacs","message":"bnoordhuis: care to review? https://github.com/joyent/node/pull/4911","date":"2013-03-04T16:24:44.560Z","type":"message"}
{"nick":"isaacs","message":"that pull gets us over the finish line, at least on osx","date":"2013-03-04T16:24:57.685Z","type":"message"}
{"nick":"bnoordhuis","message":"aww, do i have to?","date":"2013-03-04T16:25:05.695Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: you could just say \"if tootallnate or indutny +1 it, then lgtm\"","date":"2013-03-04T16:25:18.896Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: that's a trick i use a lot.","date":"2013-03-04T16:25:24.204Z","type":"message"}
{"nick":"bnoordhuis","message":"^ what you said","date":"2013-03-04T16:25:37.253Z","type":"message"}
{"nick":"TooTallNate","message":"i can take a look","date":"2013-03-04T16:25:49.877Z","type":"message"}
{"nick":"indutny","message":"if ben or pisci +1 then lgtm","date":"2013-03-04T16:25:58.495Z","type":"message"}
{"nick":"bnoordhuis","message":"the DAG implies it all depends on nathan now","date":"2013-03-04T16:27:05.645Z","type":"message"}
{"nick":"mikeal","date":"2013-03-04T16:29:04.662Z","type":"join"}
{"nick":"isaacs","message":"it'd be nice to get a non-core stream freak to look at it as well","date":"2013-03-04T16:30:25.391Z","type":"message"}
{"nick":"isaacs","message":"Raynos said \"Sure, whatever. Don't care\" about the API change.","date":"2013-03-04T16:30:43.542Z","type":"message"}
{"nick":"isaacs","message":"so i guess that's as good as a +1 :)","date":"2013-03-04T16:30:51.216Z","type":"message"}
{"nick":"`3rdEden","new_nick":"`3E|DINNR","date":"2013-03-04T16:33:02.084Z","type":"nick"}
{"nick":"dap","date":"2013-03-04T16:39:11.095Z","type":"join"}
{"nick":"qmx","new_nick":"qmx|lunch","date":"2013-03-04T16:40:47.209Z","type":"nick"}
{"nick":"qmx|lunch","new_nick":"qmx","date":"2013-03-04T16:40:59.368Z","type":"nick"}
{"nick":"piscisaureus_","reason":"Read error: Connection reset by peer","date":"2013-03-04T16:42:34.540Z","type":"quit"}
{"nick":"qmx","new_nick":"qmx|lunch","date":"2013-03-04T16:45:51.762Z","type":"nick"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-04T16:47:40.998Z","type":"quit"}
{"nick":"loladiro","date":"2013-03-04T16:49:38.444Z","type":"join"}
{"nick":"isaacs","message":"bnoordhuis: What do you think about https://github.com/joyent/node/pull/4912?  It satisfies the requests for a better timeout control on HTTP servers, and provides backwards compatibiltiy, but it does some things that are a bit... weird, I think.","date":"2013-03-04T16:52:50.685Z","type":"message"}
{"nick":"isaacs","message":"basically, if you set a timeout on the socket, then it's your timeout, and your responsibility.  if you don't, we destroy it.","date":"2013-03-04T16:54:25.131Z","type":"message"}
{"nick":"isaacs","message":"er, if you set a timeout callback","date":"2013-03-04T16:54:33.300Z","type":"message"}
{"nick":"isaacs","message":"if you just do socket.setTimeout(100), then we'll still destroy it, because no additional callback was added.","date":"2013-03-04T16:54:48.256Z","type":"message"}
{"nick":"kazupon","date":"2013-03-04T16:56:46.540Z","type":"join"}
{"nick":"bnoordhuis","message":"guess dap beat me to it","date":"2013-03-04T17:00:40.537Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T17:05:32.774Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 248 seconds","date":"2013-03-04T17:06:09.317Z","type":"quit"}
{"nick":"loladiro","date":"2013-03-04T17:14:05.368Z","type":"join"}
{"nick":"tjfontaine","message":"\"That means they don't have time to hold your hand, wipe your nose for you when it's runny or your buttocks when you've done a boo-boo\"","date":"2013-03-04T17:22:17.326Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #55 \u00037UNSTABLE\u000f windows-x64 (11/546) linux-ia32 (1/546) windows-ia32 (11/546) osx-ia32 (1/546) http://jenkins.nodejs.org/job/nodejs-master/55/","date":"2013-03-04T17:23:12.036Z","type":"message"}
{"nick":"TooTallNate","message":"tjfontaine: ya i lol'd pretty hard","date":"2013-03-04T17:32:52.710Z","type":"message"}
{"nick":"tjfontaine","message":"ben's my favorite","date":"2013-03-04T17:33:15.828Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.8\u0002: #21 \u00034FAILURE\u000f linux-x64 (2/467) osx-ia32 (3/467) smartos-ia32 (1/467) windows-x64 (2/467) windows-ia32 (2/467) osx-x64 (1/467) smartos-x64 (1/467) linux-ia32 (3/467) http://jenkins.nodejs.org/job/nodejs-v0.8/21/","date":"2013-03-04T17:34:27.768Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T17:35:08.815Z","type":"quit"}
{"nick":"tjfontaine","message":"I hate you windows","date":"2013-03-04T17:35:20.435Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-03-04T17:45:42.446Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-04T18:02:27.141Z","type":"join"}
{"nick":"loladiro","date":"2013-03-04T18:05:17.865Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 256 seconds","date":"2013-03-04T18:07:01.122Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T18:10:46.633Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-04T18:11:24.423Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #26 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/libuv-master/26/","date":"2013-03-04T18:15:57.301Z","type":"message"}
{"nick":"trevnorris","date":"2013-03-04T18:16:02.404Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: so why was the _events check placed back in emit?","date":"2013-03-04T18:16:34.473Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-03-04T18:17:03.344Z","type":"join"}
{"nick":"trevnorris","message":"piscisaureus_: seriously?","date":"2013-03-04T18:18:32.548Z","type":"message"}
{"nick":"piscisaureus_","message":"trevnorris: no shit sherlock","date":"2013-03-04T18:18:41.465Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus_: ugh. well, guess it was never \"officially\" documented that strings had to be passed.","date":"2013-03-04T18:19:21.245Z","type":"message"}
{"nick":"piscisaureus_","message":"I suppose strings and numbers would be okay in my book","date":"2013-03-04T18:19:44.574Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus_, isaacs: well, rather than adding another || is number check. i'd say just remove the thing all together.","date":"2013-03-04T18:19:56.620Z","type":"message"}
{"nick":"piscisaureus_","message":"(iow, objects /regexes etc -> no!)","date":"2013-03-04T18:19:57.680Z","type":"message"}
{"nick":"piscisaureus_","message":"maybe just coerce to string","date":"2013-03-04T18:20:11.601Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus_: well, i'm fine doing stupid shit like that in addListener because it's not hot. but hell no in emit()","date":"2013-03-04T18:20:41.182Z","type":"message"}
{"nick":"piscisaureus_","message":"oh actually it's mongoose","date":"2013-03-04T18:20:50.715Z","type":"message"}
{"nick":"piscisaureus_","message":"stupid mongoose again","date":"2013-03-04T18:20:56.510Z","type":"message"}
{"nick":"piscisaureus_","message":"https://github.com/mongodb/node-mongodb-native/blob/master/lib/mongodb/connection/base.js#L99","date":"2013-03-04T18:21:57.894Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus_: well that's once, not addListener. guess it'd have to be changed in both places.","date":"2013-03-04T18:23:14.751Z","type":"message"}
{"nick":"piscisaureus_","message":"well - yes, sure. It's the same code basically.","date":"2013-03-04T18:23:41.094Z","type":"message"}
{"nick":"piscisaureus_","message":"and on() and once() should enforce the same restrictions anyway","date":"2013-03-04T18:23:55.738Z","type":"message"}
{"nick":"trevnorris","message":"yea","date":"2013-03-04T18:24:04.030Z","type":"message"}
{"nick":"trevnorris","message":"h","date":"2013-03-04T18:24:05.589Z","type":"message"}
{"nick":"piscisaureus_","message":"But really","date":"2013-03-04T18:24:43.662Z","type":"message"}
{"nick":"piscisaureus_","message":"have EventEmitter.prototype.listenersCount()","date":"2013-03-04T18:25:04.021Z","type":"message"}
{"nick":"piscisaureus_","message":"Please break mongoose :)","date":"2013-03-04T18:25:10.956Z","type":"message"}
{"nick":"piscisaureus_","message":"My kingdom for it","date":"2013-03-04T18:25:17.140Z","type":"message"}
{"nick":"trevnorris","message":"yeah, i completely agree. but don't know how much say I have in it. ;-)","date":"2013-03-04T18:25:43.212Z","type":"message"}
{"nick":"Raynos","message":"Do it","date":"2013-03-04T18:26:03.332Z","type":"message"}
{"nick":"Raynos","message":"I think mongoose should be broken too.","date":"2013-03-04T18:26:25.879Z","type":"message"}
{"nick":"tjfontaine","message":"oh right, I  still need to do tap output for windows","date":"2013-03-04T18:26:32.676Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: wtf is this \"tap\" output? it's stupid we need to check if _events exists in every fucking emit()","date":"2013-03-04T18:27:12.379Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: you're mixing responses :)","date":"2013-03-04T18:27:29.253Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: testanything.org","date":"2013-03-04T18:27:39.645Z","type":"message"}
{"nick":"piscisaureus_","message":"Yes.","date":"2013-03-04T18:28:25.106Z","type":"message"}
{"nick":"trevnorris","message":"ok, now I'm confused. why are we checking if _events exists in emit()?","date":"2013-03-04T18:28:50.618Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T18:29:03.328Z","type":"quit"}
{"nick":"tjfontaine","message":"piscisaureus_: fwiw I did hit that libuv linking issue on the windows build slave","date":"2013-03-04T18:29:04.606Z","type":"message"}
{"nick":"piscisaureus_","message":"you mean the lack of advapi and shell32 ?","date":"2013-03-04T18:29:24.935Z","type":"message"}
{"nick":"tjfontaine","message":"http://jenkins.nodejs.org/job/libuv-master/label=windows/26/console","date":"2013-03-04T18:29:44.760Z","type":"message"}
{"nick":"piscisaureus_","message":"I wonder if gyp was changed to add those to the exclusion list","date":"2013-03-04T18:29:48.975Z","type":"message"}
{"nick":"tjfontaine","message":"seems like that","date":"2013-03-04T18:29:51.139Z","type":"message"}
{"nick":"piscisaureus_","message":"But then, libuv should always use the same version of gyp because it fetches a particular revision w/ svn","date":"2013-03-04T18:30:58.073Z","type":"message"}
{"nick":"tjfontaine","message":"no master uses git","date":"2013-03-04T18:31:13.896Z","type":"message"}
{"nick":"piscisaureus_","message":"ah yes","date":"2013-03-04T18:32:01.235Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul again :-p","date":"2013-03-04T18:32:04.748Z","type":"message"}
{"nick":"piscisaureus_","message":"(j/k saghul)","date":"2013-03-04T18:32:11.256Z","type":"message"}
{"nick":"tjfontaine","message":"hehe","date":"2013-03-04T18:32:35.679Z","type":"message"}
{"nick":"piscisaureus_","message":"I like this theory. /me pounds though the gyp commit log","date":"2013-03-04T18:32:42.907Z","type":"message"}
{"nick":"tjfontaine","message":"libuv uses stderr for test output doesn't it","date":"2013-03-04T18:34:17.485Z","type":"message"}
{"nick":"mikeal","date":"2013-03-04T18:35:36.305Z","type":"join"}
{"nick":"benoitc","date":"2013-03-04T18:35:54.608Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-v0.8\u0002: #13 \u00037UNSTABLE\u000f linux (2/158) osx (2/158) smartos (6/158) http://jenkins.nodejs.org/job/libuv-v0.8/13/","date":"2013-03-04T18:38:04.637Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: well... grep printf -r test/runner*","date":"2013-03-04T18:39:52.172Z","type":"message"}
{"nick":"tjfontaine","message":"it does, it was more of a \"you idiot, how did you forget that\"","date":"2013-03-04T18:40:14.704Z","type":"message"}
{"nick":"`3E|DINNR","new_nick":"`3rdEden","date":"2013-03-04T18:40:33.983Z","type":"nick"}
{"nick":"piscisaureus_","message":"tjfontaine: seems to do both. I will accept patches that make it consistent. Note that you only have to update runner* because the individual tests are first captured by the runner and then echoed","date":"2013-03-04T18:40:42.137Z","type":"message"}
{"nick":"piscisaureus_","message":";-(","date":"2013-03-04T18:40:58.024Z","type":"message"}
{"nick":"piscisaureus_","message":"https://codereview.chromium.org/12256017","date":"2013-03-04T18:41:10.236Z","type":"message"}
{"nick":"tjfontaine","message":"ah","date":"2013-03-04T18:42:11.100Z","type":"message"}
{"nick":"roxlu","reason":"Read error: Connection reset by peer","date":"2013-03-04T18:43:21.469Z","type":"quit"}
{"nick":"roxlu","date":"2013-03-04T18:44:08.792Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Bert Belder\u000f \u00037master\u000f * \u0002890dc2e\u0002 : win/msi: make msi build work when spaces are present in the path - http://git.io/JHhpsQ","date":"2013-03-04T18:47:18.243Z","type":"message"}
{"nick":"tjfontaine","message":"piscisaureus_: can I use getenv(\"UV_TAP_OUTPUT\") on the windows side like I do on the unix side or should I use GetEnvironmentVariableW","date":"2013-03-04T18:48:34.915Z","type":"message"}
{"nick":"slaskis","reason":"Quit: slaskis","date":"2013-03-04T18:48:46.857Z","type":"quit"}
{"nick":"piscisaureus_","message":"tjfontaine: getenv is fine","date":"2013-03-04T18:48:47.776Z","type":"message"}
{"nick":"tjfontaine","message":"k","date":"2013-03-04T18:48:52.666Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T18:49:06.603Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-04T18:51:29.703Z","type":"join"}
{"nick":"isaacs","message":"trevnorris: you can call _emit before any listeners are added.","date":"2013-03-04T18:54:44.844Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: and you can call emit('error', er) and have it *throw* before any listeners are added","date":"2013-03-04T18:54:59.638Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: so we can't just no-op if _events is null, and we certainly can't check _events[type] without a check","date":"2013-03-04T18:55:23.382Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: the only way to reach that point is to call emit before any listeners are added, and before the emitter has been instantiated. that's why I have the object setting this._events = {} in EventEmitter.","date":"2013-03-04T18:55:34.804Z","type":"message"}
{"nick":"trevnorris","message":"so we wouldn't have to do that check.","date":"2013-03-04T18:55:50.397Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 252 seconds","date":"2013-03-04T18:55:54.722Z","type":"quit"}
{"nick":"isaacs","message":"trevnorris: righ, but you can emit before EE gets applied","date":"2013-03-04T18:56:13.235Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: function OldEmitter(n) { if (n < 10) { this.emit('error', Error('n shoudl be at > 10')) } }","date":"2013-03-04T18:56:45.649Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: util.inherits(OldEmitter, Ee)","date":"2013-03-04T18:57:04.414Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: we can't break backwards compatibility on that interface.  not even a little, not even with good reason.","date":"2013-03-04T18:57:36.230Z","type":"message"}
{"nick":"isaacs","message":"sucks.  i know.","date":"2013-03-04T18:57:53.169Z","type":"message"}
{"nick":"trevnorris","message":"that's basically saying we allow you to run instance functions w/o first needing to run the constructor. doesn't make api sense, imho.","date":"2013-03-04T18:57:54.572Z","type":"message"}
{"nick":"isaacs","message":"well.. it's too late to change now.","date":"2013-03-04T18:58:02.923Z","type":"message"}
{"nick":"trevnorris","message":"ah, backwards compatibility crap. ok","date":"2013-03-04T18:58:09.191Z","type":"message"}
{"nick":"isaacs","message":"i feel your frustration.","date":"2013-03-04T18:58:18.725Z","type":"message"}
{"nick":"loladiro","date":"2013-03-04T18:58:18.979Z","type":"join"}
{"nick":"isaacs","message":"it's annoying, because type-checking in emit() is a hot code path","date":"2013-03-04T18:58:27.536Z","type":"message"}
{"nick":"isaacs","message":"one alternative i actually considered was to set EventEmitter.prototype._events = someKnownObject","date":"2013-03-04T18:58:48.660Z","type":"message"}
{"nick":"tjfontaine","message":"piscisaureus_: indeed by reverting to before that change I was able to build","date":"2013-03-04T18:59:05.531Z","type":"message"}
{"nick":"isaacs","message":"then instead of checking if it's undefined/null in on(), we can check if it's the known shared object, and override it","date":"2013-03-04T18:59:06.409Z","type":"message"}
{"nick":"isaacs","message":"but emit-before-ctor would still work","date":"2013-03-04T18:59:21.122Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033piscisaureus\u000f created branch reviewme2 - http://git.io/WOnaAA","date":"2013-03-04T18:59:27.950Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: ok. I will land a fix","date":"2013-03-04T18:59:31.648Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: the fix is there. I just wanted to know what broke it.","date":"2013-03-04T18:59:49.142Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: that is not a bad idea. i like it.","date":"2013-03-04T18:59:49.817Z","type":"message"}
{"nick":"tjfontaine","message":"piscisaureus_: https://github.com/joyent/node/commit/3a387e75369a#L1R829 is that supposed to have a / ?","date":"2013-03-04T19:00:14.633Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: the string thing is also annoying","date":"2013-03-04T19:00:20.307Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: is mongoose calling emit(nonString), or just on(nonString)?","date":"2013-03-04T19:00:30.190Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: they're callling .once(nonString)","date":"2013-03-04T19:00:50.955Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: if they're deopt-ing emit(), then at least they should be slapped","date":"2013-03-04T19:00:55.262Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: once(nonString) I believe","date":"2013-03-04T19:00:56.735Z","type":"message"}
{"nick":"trevnorris","message":".once(nonString, fn)","date":"2013-03-04T19:00:59.716Z","type":"message"}
{"nick":"isaacs","message":"sure","date":"2013-03-04T19:01:03.593Z","type":"message"}
{"nick":"isaacs","message":"so, on(nonString,fn)","date":"2013-03-04T19:01:08.827Z","type":"message"}
{"nick":"isaacs","message":"how do they fire that event, though?","date":"2013-03-04T19:01:19.134Z","type":"message"}
{"nick":"isaacs","message":"with 1 or '1'?","date":"2013-03-04T19:01:22.430Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: well, technically it wouldn't matter because type of type is intentionally not checked in emit().","date":"2013-03-04T19:02:02.121Z","type":"message"}
{"nick":"isaacs","message":"oh, ok","date":"2013-03-04T19:02:16.459Z","type":"message"}
{"nick":"trevnorris","message":"and it would be forced to coerce in the call.","date":"2013-03-04T19:02:17.612Z","type":"message"}
{"nick":"isaacs","message":"ugh","date":"2013-03-04T19:02:22.492Z","type":"message"}
{"nick":"isaacs","message":"so, my guess is that they ARE deopting emit()","date":"2013-03-04T19:02:29.147Z","type":"message"}
{"nick":"isaacs","message":"#$@!$!@#$","date":"2013-03-04T19:02:33.623Z","type":"message"}
{"nick":"qmx|lunch","new_nick":"qmx","date":"2013-03-04T19:02:40.721Z","type":"nick"}
{"nick":"isaacs","message":"MON GOOOOOOOOOSSSSSSSE!","date":"2013-03-04T19:02:41.042Z","type":"message"}
{"nick":"LOUDBOT","message":"WHY THE FUCK ARE YOU STILL USING THE OVERTHRUSTER? YOU SHOULD HAVE UPGRADED TO A HYPERTHRUSTER MONTHS AGO!","date":"2013-03-04T19:02:41.398Z","type":"message"}
{"nick":"trevnorris","message":"stupid on their part. all that coercion is going to slow them down.","date":"2013-03-04T19:02:42.219Z","type":"message"}
{"nick":"isaacs","message":"yes","date":"2013-03-04T19:02:46.849Z","type":"message"}
{"nick":"isaacs","message":"it's going to slow NODE down","date":"2013-03-04T19:02:50.234Z","type":"message"}
{"nick":"isaacs","action":"sigh","date":"2013-03-04T19:03:09.255Z","type":"action"}
{"nick":"isaacs","message":"ok, so, let's remove that chec, i guess","date":"2013-03-04T19:03:17.385Z","type":"message"}
{"nick":"indutny","message":"fuck backwards-compatibility","date":"2013-03-04T19:03:25.199Z","type":"message"}
{"nick":"trevnorris","message":"yeah. part of the reason for the additional checks was to let you know if you would call emit() and force a deopt.","date":"2013-03-04T19:03:26.954Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #56 \u00037UNSTABLE\u000f windows-x64 (11/546) linux-x64 (1/546) windows-ia32 (11/546) http://jenkins.nodejs.org/job/nodejs-master/56/","date":"2013-03-04T19:03:32.212Z","type":"message"}
{"nick":"isaacs","message":"on({toString:'/whatever/'}, fn) .emit(/whatever/) ","date":"2013-03-04T19:03:48.425Z","type":"message"}
{"nick":"indutny","message":"oh gosh","date":"2013-03-04T19:04:02.349Z","type":"message"}
{"nick":"indutny","message":"is mongoose doing it?","date":"2013-03-04T19:04:08.728Z","type":"message"}
{"nick":"isaacs","message":"indutny: well, they're doing .once(1, fn)","date":"2013-03-04T19:04:20.737Z","type":"message"}
{"nick":"isaacs","message":"indutny: and if they are, then someone else is.","date":"2013-03-04T19:04:32.777Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-03-04T19:04:35.198Z","type":"message"}
{"nick":"isaacs","message":"and as much as it annoys me, i'm not comfortable making breaking changes in this part of node","date":"2013-03-04T19:04:53.907Z","type":"message"}
{"nick":"isaacs","message":"so, the type check goes.","date":"2013-03-04T19:04:57.533Z","type":"message"}
{"nick":"isaacs","action":"\\o/","date":"2013-03-04T19:05:00.120Z","type":"action"}
{"nick":"isaacs","message":"er, wrong one.","date":"2013-03-04T19:05:03.049Z","type":"message"}
{"nick":"isaacs","action":"/o\\","date":"2013-03-04T19:05:05.816Z","type":"action"}
{"nick":"isaacs","message":"that one","date":"2013-03-04T19:05:07.716Z","type":"message"}
{"nick":"indutny","message":"D:","date":"2013-03-04T19:05:38.944Z","type":"message"}
{"nick":"indutny","message":"this one ^","date":"2013-03-04T19:05:52.201Z","type":"message"}
{"nick":"indutny","message":"\\/","date":"2013-03-04T19:06:04.134Z","type":"message"}
{"nick":"indutny","message":" |","date":"2013-03-04T19:06:06.146Z","type":"message"}
{"nick":"indutny","message":"  |","date":"2013-03-04T19:06:07.857Z","type":"message"}
{"nick":"indutny","message":" /o\\","date":"2013-03-04T19:06:15.236Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-04T19:06:23.054Z","type":"quit"}
{"nick":"indutny","message":"________","date":"2013-03-04T19:06:24.246Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: can you include this in the commit msg: http://www.ascii-middle-finger.com/","date":"2013-03-04T19:07:24.878Z","type":"message"}
{"nick":"isaacs","message":"hahah","date":"2013-03-04T19:08:03.313Z","type":"message"}
{"nick":"isaacs","message":"no no no, frustration stays on irc, doesn't belong in commit messages","date":"2013-03-04T19:08:25.806Z","type":"message"}
{"nick":"trevnorris","message":"=)","date":"2013-03-04T19:09:30.590Z","type":"message"}
{"nick":"TooTallNate","message":"lulz, mongoose…","date":"2013-03-04T19:14:03.597Z","type":"message"}
{"nick":"isaacs","message":"https://github.com/joyent/node/pull/4914","date":"2013-03-04T19:14:08.534Z","type":"message"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-03-04T19:14:08.743Z","type":"quit"}
{"nick":"roxlu","message":"when I have 3 variables in a thread to which I want to synchronize (all at different times and with different amounts), is it better to create 4 different mutexes? ","date":"2013-03-04T19:14:42.423Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: you don't need to pre-coerce.","date":"2013-03-04T19:14:45.057Z","type":"message"}
{"nick":"roxlu","message":"s/4/3","date":"2013-03-04T19:14:59.900Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: js will automatically do that.","date":"2013-03-04T19:15:01.118Z","type":"message"}
{"nick":"trevnorris","message":"and that way people who don't do that stupid shit doesn't have to pay the price.","date":"2013-03-04T19:15:15.135Z","type":"message"}
{"nick":"trevnorris","message":"but the \"typeof type === 'string'\" checks will all need to be removed.","date":"2013-03-04T19:15:35.978Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T19:17:47.464Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Bert Belder\u000f \u00037master\u000f * \u00021ba5926\u0002 : windows: link with advapi32 and shell32 libraries  Older versions of GYP  - http://git.io/LpVGWw","date":"2013-03-04T19:21:10.276Z","type":"message"}
{"nick":"piscisaureus_","message":"^-- tjfontaine: your fi","date":"2013-03-04T19:21:21.480Z","type":"message"}
{"nick":"piscisaureus_","message":"x","date":"2013-03-04T19:21:22.774Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well it's node-mongodb-native anyway","date":"2013-03-04T19:22:00.770Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: probably file a bug against them?","date":"2013-03-04T19:22:09.251Z","type":"message"}
{"nick":"tjfontaine","message":"piscisaureus_: thanks","date":"2013-03-04T19:22:17.815Z","type":"message"}
{"nick":"piscisaureus_","message":"TooTallNate: wait...","date":"2013-03-04T19:22:36.900Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Bert Belder\u000f \u00037master\u000f * \u0002ea0796f\u0002 : windows: link with advapi32 and shell32 libraries  Older versions of GYP  - http://git.io/LP-V1g","date":"2013-03-04T19:22:41.369Z","type":"message"}
{"nick":"piscisaureus_","message":"TooTallNate: ^-- there!","date":"2013-03-04T19:22:42.589Z","type":"message"}
{"nick":"tjfontaine","message":"and me :)","date":"2013-03-04T19:22:49.610Z","type":"message"}
{"nick":"TooTallNate","message":"nice :)","date":"2013-03-04T19:22:50.865Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: you too buddy","date":"2013-03-04T19:23:11.982Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #27 \u00037UNSTABLE\u000f osx (1/183) smartos (4/183) linux (2/183) http://jenkins.nodejs.org/job/libuv-master/27/","date":"2013-03-04T19:23:18.407Z","type":"message"}
{"nick":"`3rdEden","reason":"Quit: brb","date":"2013-03-04T19:23:41.152Z","type":"quit"}
{"nick":"loladiro","date":"2013-03-04T19:23:46.231Z","type":"join"}
{"nick":"isaacs","message":"trevnorris: is there a diff between pre-coercion and coercing repeatedly?","date":"2013-03-04T19:24:20.694Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: we have a lot fo events[type] in that function","date":"2013-03-04T19:24:34.696Z","type":"message"}
{"nick":"tjfontaine","message":"piscisaureus_: so thoughts on me doing _fdopen on process->stdio_out so I can do fgets?","date":"2013-03-04T19:24:37.035Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: ehwut","date":"2013-03-04T19:24:52.805Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: v8 will autodetect if type == number and coerce it. we don't have to.","date":"2013-03-04T19:24:54.605Z","type":"message"}
{"nick":"isaacs","message":"ok","date":"2013-03-04T19:25:06.219Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #28 \u00037UNSTABLE\u000f osx (1/183) smartos (4/183) linux (2/183) http://jenkins.nodejs.org/job/libuv-master/28/","date":"2013-03-04T19:25:25.539Z","type":"message"}
{"nick":"tjfontaine","message":"piscisaureus_: I'd like to use fgets here https://github.com/joyent/libuv/blob/master/test/runner-win.c#L214 but p->stdio_out is a HANDLE","date":"2013-03-04T19:25:45.200Z","type":"message"}
{"nick":"brson","date":"2013-03-04T19:25:53.693Z","type":"join"}
{"nick":"piscisaureus_","message":"tjfontaine: not fond of it. Also _fdopen won't get you there but _open_osfhandle probably would","date":"2013-03-04T19:26:32.519Z","type":"message"}
{"nick":"tjfontaine","message":"right http://stackoverflow.com/questions/7369445/is-there-a-windows-equivalent-to-fdopen-for-handles suggests I need to do both","date":"2013-03-04T19:26:52.706Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: ok, so for the fix up's seems just need to remove the checks. want me to give a quick go at that pre-set obj thing, or you going to do that?","date":"2013-03-04T19:27:08.239Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: what's wrong with just ReadFile instead of fgets","date":"2013-03-04T19:27:16.813Z","type":"message"}
{"nick":"tjfontaine","message":"piscisaureus_: I need to prepend each line with a # for it to comply with TAP","date":"2013-03-04T19:27:51.849Z","type":"message"}
{"nick":"piscisaureus_","action":"sighs","date":"2013-03-04T19:28:12.130Z","type":"action"}
{"nick":"tjfontaine","message":"otherwise you'll just see that things failed and not why :)","date":"2013-03-04T19:28:29.651Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: I think fgets() will read until","date":"2013-03-04T19:28:44.645Z","type":"message"}
{"nick":"piscisaureus_","message":"\\r\\n","date":"2013-03-04T19:28:47.058Z","type":"message"}
{"nick":"tjfontaine","message":"right","date":"2013-03-04T19:28:52.155Z","type":"message"}
{"nick":"piscisaureus_","message":"so that will probably bite you in different ways","date":"2013-03-04T19:28:57.156Z","type":"message"}
{"nick":"piscisaureus_","message":"so hmm a sec","date":"2013-03-04T19:29:09.601Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/tjfontaine/libuv/commit/a81bd43014476db18cd486fc3e6d0fa7551e4991 is what I had done before I realized it was a handle","date":"2013-03-04T19:29:17.135Z","type":"message"}
{"nick":"piscisaureus_","message":"I haven't looked at that code since I wrote it :-p","date":"2013-03-04T19:29:17.644Z","type":"message"}
{"nick":"tjfontaine","message":"hehe","date":"2013-03-04T19:29:20.963Z","type":"message"}
{"nick":"tjfontaine","message":"and that's more or less how the unix runner works as well","date":"2013-03-04T19:29:50.487Z","type":"message"}
{"nick":"piscisaureus_","message":"well yeah I think I wrote that too but it could've been Ryan too","date":"2013-03-04T19:31:24.200Z","type":"message"}
{"nick":"piscisaureus_","message":"anyway","date":"2013-03-04T19:31:29.295Z","type":"message"}
{"nick":"piscisaureus_","message":"is it so hard to just scan the buffer for \\n and drop an # after that?","date":"2013-03-04T19:32:03.990Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-03-04T19:32:42.317Z","type":"join"}
{"nick":"tjfontaine","message":"it's not that it's hard, it's just that fgets does exist","date":"2013-03-04T19:32:55.168Z","type":"message"}
{"nick":"tjfontaine","message":"I will do it however you'd prefer though","date":"2013-03-04T19:33:09.101Z","type":"message"}
{"nick":"piscisaureus_","message":"well - I prefer the simplest way to do it","date":"2013-03-04T19:34:19.273Z","type":"message"}
{"nick":"piscisaureus_","message":":)","date":"2013-03-04T19:34:21.349Z","type":"message"}
{"nick":"tjfontaine","message":"simple to me sounds like gimmie a file* and use fgets :)","date":"2013-03-04T19:35:18.039Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: so what happens if the line is longer than sizeof(buf) ?","date":"2013-03-04T19:37:04.238Z","type":"message"}
{"nick":"tjfontaine","message":"truncation, the unix path has a todo about that :)","date":"2013-03-04T19:37:34.524Z","type":"message"}
{"nick":"tjfontaine","message":"it's my fault the unix path uses fgets","date":"2013-03-04T19:38:59.470Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: i'm technically not working today.  so go nuts on it :)","date":"2013-03-04T19:41:05.077Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: lol. ok. i'll get the pr setup. =)","date":"2013-03-04T19:41:24.328Z","type":"message"}
{"nick":"isaacs","message":"thanks","date":"2013-03-04T19:41:32.103Z","type":"message"}
{"nick":"isaacs","action":"&","date":"2013-03-04T19:41:34.648Z","type":"action"}
{"nick":"LOUDBOT","message":"HELVETICA IS PLAYED OUT.","date":"2013-03-04T19:41:34.959Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus_: review: http://git.io/v7VGAQ","date":"2013-03-04T19:44:05.506Z","type":"message"}
{"nick":"EhevuTov","date":"2013-03-04T19:45:02.725Z","type":"join"}
{"nick":"piscisaureus_","message":"trevnorris: I see you snuck some secret optimizations in?","date":"2013-03-04T19:45:29.766Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus_: oh, sorry. no. those were for code consistency w/ the rest of the lib.","date":"2013-03-04T19:46:05.338Z","type":"message"}
{"nick":"trevnorris","message":"i'll revert those and push up again.","date":"2013-03-04T19:46:13.282Z","type":"message"}
{"nick":"piscisaureus_","message":"trevnorris: I don't mind","date":"2013-03-04T19:46:22.208Z","type":"message"}
{"nick":"EhevuTov","reason":"Max SendQ exceeded","date":"2013-03-04T19:46:24.792Z","type":"quit"}
{"nick":"piscisaureus_","message":"if they make things better","date":"2013-03-04T19:46:25.394Z","type":"message"}
{"nick":"trevnorris","message":"=)","date":"2013-03-04T19:46:30.350Z","type":"message"}
{"nick":"piscisaureus_","message":"trevnorris: I was going to say lgtm","date":"2013-03-04T19:46:31.062Z","type":"message"}
{"nick":"piscisaureus_","message":"trevnorris: although It'd be better to make them separate commits","date":"2013-03-04T19:46:57.962Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus_: coolio. will do","date":"2013-03-04T19:47:06.001Z","type":"message"}
{"nick":"EhevuTov","date":"2013-03-04T19:47:09.924Z","type":"join"}
{"nick":"trevnorris","message":"piscisaureus_: and think I should throw in a test for mongoose's case?","date":"2013-03-04T19:47:28.583Z","type":"message"}
{"nick":"piscisaureus_","message":"trevnorris: yeah - if we are going t care for it, it'd be good","date":"2013-03-04T19:47:49.968Z","type":"message"}
{"nick":"trevnorris","message":"i'll throw that in too.","date":"2013-03-04T19:47:57.127Z","type":"message"}
{"nick":"bradleymeck","date":"2013-03-04T19:50:52.562Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.8\u000f * \u0002ecf9f60\u0002 : doc: add url.resolve() usage examples  Fixes #4913. - http://git.io/pmkP6A","date":"2013-03-04T19:55:36.393Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: isaacs is out for the day, so he told me to get the PR setup for the mongoose fix.","date":"2013-03-04T20:02:21.756Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus_: finished.","date":"2013-03-04T20:02:45.668Z","type":"message"}
{"nick":"kazupon","date":"2013-03-04T20:03:39.776Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.8\u0002: #22 \u00034FAILURE\u000f linux-x64 (3/467) osx-ia32 (2/467) smartos-ia32 (1/467) windows-x64 (2/467) windows-ia32 (2/467) osx-x64 (1/467) smartos-x64 (1/467) linux-ia32 (1/467) http://jenkins.nodejs.org/job/nodejs-v0.8/22/","date":"2013-03-04T20:05:58.024Z","type":"message"}
{"nick":"piscisaureus_","message":"http://falkvinge.net/2013/03/04/after-being-cut-from-norway-the-pirate-bay-returns-from-north-korea/","date":"2013-03-04T20:08:02.955Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 260 seconds","date":"2013-03-04T20:08:39.635Z","type":"quit"}
{"nick":"slaskis","date":"2013-03-04T20:10:23.564Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: I'd go for trevnorris' patch here.","date":"2013-03-04T20:12:11.244Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Trevor Norris\u000f \u00037master\u000f * \u0002d09ab61\u0002 : events: code consistency  v8 likes when smaller functions have a single r (+1 more commits) - http://git.io/VaXNUg","date":"2013-03-04T20:13:52.500Z","type":"message"}
{"nick":"piscisaureus_","message":"ewa","date":"2013-03-04T20:18:33.873Z","type":"message"}
{"nick":"piscisaureus_","message":"I'm leaving again","date":"2013-03-04T20:18:39.588Z","type":"message"}
{"nick":"piscisaureus_","message":"Love you and goodbye","date":"2013-03-04T20:18:43.850Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-03-04T20:18:53.923Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #57 \u00037UNSTABLE\u000f windows-x64 (11/546) windows-ia32 (12/546) osx-x64 (1/546) osx-ia32 (2/546) http://jenkins.nodejs.org/job/nodejs-master/57/","date":"2013-03-04T20:29:07.438Z","type":"message"}
{"nick":"kazupon","date":"2013-03-04T21:04:28.579Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 276 seconds","date":"2013-03-04T21:04:48.326Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T21:05:56.802Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-03-04T21:08:56.422Z","type":"quit"}
{"nick":"loladiro","date":"2013-03-04T21:09:45.617Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-03-04T21:10:33.728Z","type":"quit"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-03-04T21:11:55.555Z","type":"quit"}
{"nick":"EhevuTov","date":"2013-03-04T21:13:08.285Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.8\u0002: #23 \u00034FAILURE\u000f linux-x64 (2/467) osx-ia32 (2/467) smartos-ia32 (1/467) windows-x64 (2/467) windows-ia32 (2/467) osx-x64 (1/467) smartos-x64 (1/467) linux-ia32 (1/467) http://jenkins.nodejs.org/job/nodejs-v0.8/23/","date":"2013-03-04T21:16:43.379Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-03-04T21:37:34.865Z","type":"join"}
{"nick":"mikeal","date":"2013-03-04T21:40:58.582Z","type":"join"}
{"nick":"rendar","date":"2013-03-04T21:42:32.281Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-03-04T21:43:58.683Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: sorry for the newb question, but is there a doc explaining how to get your example on v8 issue 2551 to compile?","date":"2013-03-04T21:48:33.703Z","type":"message"}
{"nick":"tjfontaine","message":"blah where's sblom","date":"2013-03-04T21:49:03.980Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: oh, just link it to libv8_{base,nosnapshot}.a","date":"2013-03-04T21:49:34.072Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: ah, ok. thanks.","date":"2013-03-04T21:49:44.944Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-03-04T21:50:35.028Z","type":"join"}
{"nick":"bnoordhuis","message":"i wonder if it makes sense when you have a large number of file descriptors to split them over several epoll sets and poll the epoll fds instead","date":"2013-03-04T21:55:32.148Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-03-04T21:55:45.870Z","type":"quit"}
{"nick":"tjfontaine","message":"is there something in particular you're looking to solve? or just more balancing work","date":"2013-03-04T21:56:13.021Z","type":"message"}
{"nick":"bnoordhuis","message":"when you stash everything into one big epoll set, every call to epoll_ctl has to grab the epoll mutex","date":"2013-03-04T21:56:26.436Z","type":"message"}
{"nick":"bnoordhuis","message":"with multiple epoll sets, the locking gets more fine-grained","date":"2013-03-04T21:57:09.758Z","type":"message"}
{"nick":"bnoordhuis","message":"then again, almost all file descriptors are added from the same thread","date":"2013-03-04T21:57:24.964Z","type":"message"}
{"nick":"bnoordhuis","message":"so chances of lock contention should be low, at least in user-mode land","date":"2013-03-04T21:57:57.132Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: to answer your question more directly, the __spinlock_* functions often pop up when i profile with perf","date":"2013-03-04T21:59:20.276Z","type":"message"}
{"nick":"tjfontaine","message":"ah","date":"2013-03-04T21:59:31.778Z","type":"message"}
{"nick":"tjfontaine","message":"were you planning on splitting on work load?","date":"2013-03-04T21:59:42.716Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm toying with the idea","date":"2013-03-04T21:59:51.800Z","type":"message"}
{"nick":"tjfontaine","message":"k","date":"2013-03-04T21:59:55.204Z","type":"message"}
{"nick":"bnoordhuis","message":"guess i'll just have to try and benchmark it","date":"2013-03-04T22:00:45.461Z","type":"message"}
{"nick":"bnoordhuis","message":"same with kqueue, i suppose, but kqueue-in-kqueue has historically been very buggy","date":"2013-03-04T22:01:55.655Z","type":"message"}
{"nick":"wolfeidau","date":"2013-03-04T22:02:41.645Z","type":"join"}
{"nick":"kazupon","date":"2013-03-04T22:04:57.693Z","type":"join"}
{"nick":"trevnorris","reason":"Quit: Leaving","date":"2013-03-04T22:08:41.546Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-03-04T22:09:26.364Z","type":"quit"}
{"nick":"trevnorris","date":"2013-03-04T22:12:39.300Z","type":"join"}
{"nick":"slaskis","reason":"Quit: slaskis","date":"2013-03-04T22:26:19.533Z","type":"quit"}
{"nick":"loladiro","date":"2013-03-04T22:30:38.475Z","type":"join"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-03-04T22:38:47.413Z","type":"nick"}
{"nick":"tjfontaine","message":"I want to seriously hurt windows/msbuild/wix right now","date":"2013-03-04T22:40:01.810Z","type":"message"}
{"nick":"perezd","date":"2013-03-04T22:43:48.603Z","type":"join"}
{"nick":"sblom","date":"2013-03-04T22:51:13.613Z","type":"join"}
{"nick":"tjfontaine","message":"sblom: I'm having no luck with this wix issue, I'm fairly sure I'm going crazy, I've even put the run out of proc in the default wix targets, and it's like msbuild is insisting on not agreeing with me","date":"2013-03-04T22:57:17.778Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: so do we want to crank up dur when we're benchmarking?","date":"2013-03-04T22:58:40.789Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: I mean, when I'm collecting stats","date":"2013-03-04T22:58:59.035Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: yes. we also need to run it more than once.","date":"2013-03-04T22:59:43.129Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: what's the ideal pattern here then","date":"2013-03-04T23:00:21.196Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: D == duration; N == number of times to be run. so","date":"2013-03-04T23:01:20.950Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-04T23:02:34.451Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: D is a random time between [MIN, MAX] (i'd say between 5 to 10 seconds for now) and","date":"2013-03-04T23:02:53.508Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: N is continuously calculated based on the stability of variance over the previous tests.","date":"2013-03-04T23:03:25.963Z","type":"message"}
{"nick":"trevnorris","message":"(this will sound crazy, but give me a sec to explain it)","date":"2013-03-04T23:03:33.684Z","type":"message"}
{"nick":"tjfontaine","message":"it doesn't make sense to just have N be some huge number?","date":"2013-03-04T23:03:50.124Z","type":"message"}
{"nick":"kazupon","date":"2013-03-04T23:05:56.173Z","type":"join"}
{"nick":"trevnorris","message":"N should be a sample based on the distribution. so we can know the distribution by tracking test stability over time.","date":"2013-03-04T23:06:03.371Z","type":"message"}
{"nick":"trevnorris","message":"then we set a cap of max N, of which after that many runs if it hasn't stabalized then we know something else is wrong.","date":"2013-03-04T23:06:24.781Z","type":"message"}
{"nick":"trevnorris","message":"after which we calculate the mean and stdev.","date":"2013-03-04T23:06:53.696Z","type":"message"}
{"nick":"trevnorris","message":"taking two tests, A and B if each mean falls withing 2 stdev's of the other's mean then there is no detectable regression.","date":"2013-03-04T23:07:46.226Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: is that making sense? i was working on a script that would do these calculations and spit out the results of a single test.","date":"2013-03-04T23:09:46.184Z","type":"message"}
{"nick":"trevnorris","message":"then it could be stored, and used to detect regression from a previous test.","date":"2013-03-04T23:10:01.318Z","type":"message"}
{"nick":"tjfontaine","message":"A and B are two different commits?","date":"2013-03-04T23:10:05.551Z","type":"message"}
{"nick":"trevnorris","message":"yes","date":"2013-03-04T23:10:09.760Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-03-04T23:10:15.061Z","type":"quit"}
{"nick":"tjfontaine","message":"why can't we just churn through all the commits and generate raw data, and do analysis later?","date":"2013-03-04T23:10:22.909Z","type":"message"}
{"nick":"trevnorris","message":"by raw data, you mean each the mean of each run?","date":"2013-03-04T23:11:36.540Z","type":"message"}
{"nick":"trevnorris","message":"erm. the time of each run?","date":"2013-03-04T23:11:45.386Z","type":"message"}
{"nick":"trevnorris","message":"or whatever the output...","date":"2013-03-04T23:11:53.243Z","type":"message"}
{"nick":"perezd","reason":"Quit: perezd","date":"2013-03-04T23:11:55.082Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-04T23:11:55.756Z","type":"join"}
{"nick":"tjfontaine","message":"net/tcp-raw-pipe.js len=102400 type=utf dur=5: 4.0757","date":"2013-03-04T23:12:02.156Z","type":"message"}
{"nick":"tjfontaine","message":"right whatever the output","date":"2013-03-04T23:12:13.860Z","type":"message"}
{"nick":"trevnorris","message":"ok. then just run that N times for a commit and store each run.","date":"2013-03-04T23:12:24.903Z","type":"message"}
{"nick":"tjfontaine","message":"supposed to be in name: result format, where result > is better","date":"2013-03-04T23:12:32.940Z","type":"message"}
{"nick":"tjfontaine","message":"right, then you can run all the analysis and pretty graphs you want while it's running through history","date":"2013-03-04T23:13:07.042Z","type":"message"}
{"nick":"kazupon","date":"2013-03-04T23:13:26.949Z","type":"join"}
{"nick":"tjfontaine","message":"I just worry about how much state I have to carry along in the CI to do useful regression testing there","date":"2013-03-04T23:13:48.998Z","type":"message"}
{"nick":"trevnorris","message":"didn't think that was a possible option. if it is possible to run each test N times and just store the data for each run, for each commit, that would be freakin awesome.","date":"2013-03-04T23:13:49.723Z","type":"message"}
{"nick":"trevnorris","message":"i'd be able to yank that into a script and do all sorts of analysis on it.","date":"2013-03-04T23:14:29.553Z","type":"message"}
{"nick":"tjfontaine","message":"ya, I'm afraid of the fidelity you lose if we toss the raw data away","date":"2013-03-04T23:14:49.382Z","type":"message"}
{"nick":"trevnorris","message":"sweet.","date":"2013-03-04T23:15:00.997Z","type":"message"}
{"nick":"trevnorris","message":"the only thing I'd have to add then is make sure duration is a random interval between [MIN, MAX]","date":"2013-03-04T23:15:27.550Z","type":"message"}
{"nick":"tjfontaine","message":"random for each run?","date":"2013-03-04T23:15:39.509Z","type":"message"}
{"nick":"trevnorris","message":"yeah.","date":"2013-03-04T23:15:42.778Z","type":"message"}
{"nick":"tjfontaine","message":"seems like you're changing too many things at once, why shouldn't the duration be static?","date":"2013-03-04T23:16:20.986Z","type":"message"}
{"nick":"trevnorris","message":"if we can take a large sample, then having a uniformly random duration between two values is the best way to get results.","date":"2013-03-04T23:16:21.198Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: http://d3s.mff.cuni.cz/publications/download/KaliberaBulejTuma-AutomatedDetection.pdf","date":"2013-03-04T23:16:52.104Z","type":"message"}
{"nick":"tjfontaine","message":"executive summary? :)","date":"2013-03-04T23:17:06.542Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: don't expect you to read that","date":"2013-03-04T23:17:06.758Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-03-04T23:17:08.998Z","type":"message"}
{"nick":"trevnorris","message":"heh, here it is.","date":"2013-03-04T23:17:13.516Z","type":"message"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-03-04T23:17:20.414Z","type":"quit"}
{"nick":"hz","date":"2013-03-04T23:17:23.723Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-04T23:19:05.207Z","type":"quit"}
{"nick":"trevnorris","message":"the volatility of a benchmark can be measured by a set random conditions. in most statistics many of the initial states can be controlled, but in computer systems that's more difficult to determine. so introducing random initial states to the tests shouldn't change the overall distribution of the result values.","date":"2013-03-04T23:19:52.889Z","type":"message"}
{"nick":"tjfontaine","message":"ok","date":"2013-03-04T23:20:17.242Z","type":"message"}
{"nick":"trevnorris","message":"check out Fig. 1 on page 3.","date":"2013-03-04T23:20:27.855Z","type":"message"}
{"nick":"trevnorris","message":"that shows how much a benchmark can vary based on initial conditions.","date":"2013-03-04T23:20:48.164Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: i would also say that len should be somewhat random, but we know there are performance regressions and specific points.","date":"2013-03-04T23:21:28.771Z","type":"message"}
{"nick":"tjfontaine","message":"in the case of a VM though, an initial condition could be just about anything the host or other guests are doing?","date":"2013-03-04T23:21:33.674Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: so if we could determine those points then we'd be able to successfully group the tests to more determinate results.","date":"2013-03-04T23:21:57.558Z","type":"message"}
{"nick":"tjfontaine","message":"hm ok","date":"2013-03-04T23:22:10.213Z","type":"message"}
{"nick":"trevnorris","message":"sorry, i don't want to make this crazy complicated.","date":"2013-03-04T23:22:55.610Z","type":"message"}
{"nick":"tjfontaine","message":"it's not complicated per se","date":"2013-03-04T23:23:01.511Z","type":"message"}
{"nick":"trevnorris","message":"but i'm afraid i have.","date":"2013-03-04T23:23:01.871Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-04T23:23:03.995Z","type":"quit"}
{"nick":"trevnorris","message":"ok. imho here's the optimal benchmark scenario:","date":"2013-03-04T23:23:37.483Z","type":"message"}
{"nick":"tjfontaine","message":"I'm interested in benchmarks, in so far as I like to see the results, it's just hard for me to reason about moving the N and D around and saying you're getting an apples/apples comparison","date":"2013-03-04T23:24:19.458Z","type":"message"}
{"nick":"perezd","date":"2013-03-04T23:24:35.614Z","type":"join"}
{"nick":"trevnorris","message":"statistically you can if N is large enough and D is over a uniform distribution.","date":"2013-03-04T23:25:07.741Z","type":"message"}
{"nick":"tjfontaine","message":"alright, tell me what conditions you want for N and D and I'll collect the data :)","date":"2013-03-04T23:25:58.349Z","type":"message"}
{"nick":"trevnorris","message":"ok. also there's one more thing, but don't know if it's possible. with this i think we'd be set.","date":"2013-03-04T23:26:25.620Z","type":"message"}
{"nick":"tjfontaine","message":"and I'll read this paper tonight","date":"2013-03-04T23:26:25.972Z","type":"message"}
{"nick":"tjfontaine","message":"ok, things are possible, it's a question of probability <-- stats joke right?","date":"2013-03-04T23:26:49.222Z","type":"message"}
{"nick":"trevnorris","message":"lol","date":"2013-03-04T23:26:54.206Z","type":"message"}
{"nick":"tjfontaine","message":":P","date":"2013-03-04T23:27:09.325Z","type":"message"}
{"nick":"trevnorris","message":"if we could get a list of all tests that will be run, then run them in random order, that would give us a good random distribution of initial conditions.","date":"2013-03-04T23:27:33.468Z","type":"message"}
{"nick":"tjfontaine","message":"is by category random enough or do we need randomize a particular bench?","date":"2013-03-04T23:28:39.547Z","type":"message"}
{"nick":"trevnorris","message":"i think by category would be enough.","date":"2013-03-04T23:29:14.075Z","type":"message"}
{"nick":"tjfontaine","message":"because randomizing order of net/http/fs is trivial, the other just requires more plumbing","date":"2013-03-04T23:29:19.051Z","type":"message"}
{"nick":"tjfontaine","message":"k","date":"2013-03-04T23:29:35.510Z","type":"message"}
{"nick":"trevnorris","message":"yeah, whichever is easier.","date":"2013-03-04T23:29:51.100Z","type":"message"}
{"nick":"tjfontaine","message":"what parameters do you want for D and N","date":"2013-03-04T23:29:53.127Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-04T23:32:29.458Z","type":"quit"}
{"nick":"trevnorris","message":"D = [5, 10] seconds","date":"2013-03-04T23:33:05.150Z","type":"message"}
{"nick":"trevnorris","message":"N = either take two sets of 25, calculate the mean and stdev. if each mean falls within 2 stdevs of the other's mean then clear. OR 100 runs. ;-)","date":"2013-03-04T23:34:24.491Z","type":"message"}
{"nick":"tjfontaine","message":"meh, cpu and time are cheap, we'll just do 100 :P","date":"2013-03-04T23:34:54.942Z","type":"message"}
{"nick":"trevnorris","message":"heh, figured.","date":"2013-03-04T23:35:02.199Z","type":"message"}
{"nick":"tjfontaine","message":"I mean, it's just more data for you later","date":"2013-03-04T23:35:16.007Z","type":"message"}
{"nick":"trevnorris","message":"also, some tests are very deterministic. like Buffer operations.","date":"2013-03-04T23:35:24.404Z","type":"message"}
{"nick":"trevnorris","message":"those don't need to be run near as much.","date":"2013-03-04T23:35:39.826Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-03-04T23:36:01.759Z","type":"message"}
{"nick":"trevnorris","message":"it's the fs operations that worry me the most. those suckers hate to be benchmarked.","date":"2013-03-04T23:36:19.468Z","type":"message"}
{"nick":"tjfontaine","message":"yup","date":"2013-03-04T23:36:41.248Z","type":"message"}
{"nick":"tjfontaine","message":"but there you're also benchmarking underlying fs systems, and the stack below","date":"2013-03-04T23:36:56.563Z","type":"message"}
{"nick":"tjfontaine","message":"so here's the basic layout of what kind of data you want","date":"2013-03-04T23:37:08.103Z","type":"message"}
{"nick":"tjfontaine","message":"run 100 times, for each run randomize duration between [5, 10] and randomize order of execution (by individual bench is best, but category ok)","date":"2013-03-04T23:37:14.956Z","type":"message"}
{"nick":"trevnorris","message":"sounds great.","date":"2013-03-04T23:37:44.813Z","type":"message"}
{"nick":"tjfontaine","message":"alrighty, the good news is I can get this up and running and churning and then worry about what kind of real storage to use so you can run your analysis","date":"2013-03-04T23:39:27.979Z","type":"message"}
{"nick":"trevnorris","message":"though I do have a little worry about impact of the current benchmark library. was looking at the irhydra output. it introduces a possibly statistically significant amount of noise in the tests.","date":"2013-03-04T23:39:30.751Z","type":"message"}
{"nick":"trevnorris","message":"which will make it more difficult to detect regression.","date":"2013-03-04T23:39:39.499Z","type":"message"}
{"nick":"trevnorris","message":"awesome dude. sounds great.","date":"2013-03-04T23:39:56.542Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: oh, right by the way my plan was to just use the benchmark harness from master","date":"2013-03-04T23:40:11.503Z","type":"message"}
{"nick":"tjfontaine","message":"I presume significant changes to that will require us rewalking the history to generate better data","date":"2013-03-04T23:40:30.006Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: continue with that. i'm going to give them a review and see if it's anything to worry about. but either way it won't affect what you're doing.","date":"2013-03-04T23:40:53.547Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-03-04T23:41:05.835Z","type":"message"}
{"nick":"trevnorris","message":"i might say just hit previous tags, then if we find a regression then walk the commits. what do you think?","date":"2013-03-04T23:41:36.662Z","type":"message"}
{"nick":"tjfontaine","message":"depends on how fast the initial population goes, I have a feeling it we'll be able to regenerate data pretty easily","date":"2013-03-04T23:42:22.507Z","type":"message"}
{"nick":"trevnorris","message":"ok, cool","date":"2013-03-04T23:42:32.026Z","type":"message"}
{"nick":"tjfontaine","message":"but hitting tags as a first pass might not be terrible for initial population so people can see the high points","date":"2013-03-04T23:42:52.627Z","type":"message"}
{"nick":"trevnorris","message":"this solution sounds awesome. having all that data available will really help. and be a lot more statistically sound then many current methods used (e.g. v8)","date":"2013-03-04T23:44:39.562Z","type":"message"}
{"nick":"perezd","reason":"Quit: perezd","date":"2013-03-04T23:46:06.059Z","type":"quit"}
{"nick":"tjfontaine","message":"presuming the commit compiles and runs you'll have data for smartos (zone on joyentcloud), ubuntu (vm on joyentcloud), osx (mbp), and windows 2008 x64 (vm on joyentcloud)","date":"2013-03-04T23:46:54.020Z","type":"message"}
{"nick":"mikeal","date":"2013-03-04T23:49:26.922Z","type":"join"}
{"nick":"trevnorris","message":"coolio. that's awesome.","date":"2013-03-04T23:50:45.813Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: { commit: 'sha1', results: [{ platform: 'win32', runs: [{duration: 5, testname: result, ...}, ...] }, ...]}","date":"2013-03-04T23:50:51.871Z","type":"message"}
{"nick":"tjfontaine","message":"sane layout?","date":"2013-03-04T23:51:03.780Z","type":"message"}
{"nick":"trevnorris","message":"yeah, that's great.","date":"2013-03-04T23:51:16.754Z","type":"message"}
{"nick":"wolfeidau","reason":"Read error: Connection reset by peer","date":"2013-03-04T23:56:06.721Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-03-04T23:56:18.659Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 255 seconds","date":"2013-03-04T23:58:26.691Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: tried not to show my cc newbness, but can you give me an example to compile that file? i'm trying with \"clang++ test.cc -I /path/to/v8/include -Xlinker /path/to/libv8_nosnapshot.a -Xlinker /path/to/libv8_base.a\"","date":"2013-03-04T23:59:05.303Z","type":"message"}
