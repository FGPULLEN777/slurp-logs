{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-09-03T00:00:00.512Z","type":"quit"}
{"nick":"ircretary","date":"2013-09-03T00:00:07.335Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #313 \u00037UNSTABLE\u000f windows-x64 (19/642) windows-ia32 (19/642) http://jenkins.nodejs.org/job/nodejs-master-windows/313/","date":"2013-09-03T00:05:29.158Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-09-03T00:09:14.786Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #155 \u00037UNSTABLE\u000f windows-x64 (3/194) windows-ia32 (4/194) smartos-ia32 (2/193) smartos-x64 (2/193) http://jenkins.nodejs.org/job/libuv-master-gyp/155/","date":"2013-09-03T00:09:39.171Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-09-03T00:10:07.452Z","type":"quit"}
{"nick":"mikeal","date":"2013-09-03T00:12:16.577Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-09-03T00:13:19.648Z","type":"quit"}
{"nick":"kazupon","date":"2013-09-03T00:13:46.327Z","type":"join"}
{"nick":"tjholowaychuk","reason":"Quit: Leaving...","date":"2013-09-03T00:29:49.219Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-09-03T00:30:31.816Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 246 seconds","date":"2013-09-03T00:42:13.933Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-03T00:45:35.363Z","type":"nick"}
{"nick":"tjholowaychuk","date":"2013-09-03T00:46:47.160Z","type":"join"}
{"nick":"hz","date":"2013-09-03T00:50:05.440Z","type":"quit"}
{"nick":"kazupon","date":"2013-09-03T00:51:16.504Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-09-03T01:07:32.439Z","type":"quit"}
{"nick":"abraxas","date":"2013-09-03T01:27:30.363Z","type":"join"}
{"nick":"dshaw_","date":"2013-09-03T01:39:27.118Z","type":"join"}
{"nick":"st_luke","date":"2013-09-03T01:48:38.335Z","type":"join"}
{"nick":"kazupon","date":"2013-09-03T01:55:08.335Z","type":"join"}
{"nick":"roxlu","reason":"Ping timeout: 256 seconds","date":"2013-09-03T01:55:18.273Z","type":"quit"}
{"nick":"roxlu","date":"2013-09-03T01:56:23.828Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-03T01:57:18.555Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-09-03T01:59:45.507Z","type":"quit"}
{"nick":"st_luke","reason":"Read error: Connection reset by peer","date":"2013-09-03T02:02:15.247Z","type":"quit"}
{"nick":"st_luke","date":"2013-09-03T02:02:43.840Z","type":"join"}
{"nick":"AvianFlu","date":"2013-09-03T02:08:15.008Z","type":"join"}
{"nick":"tjholowaychuk","reason":"Quit: Linkinus - http://linkinus.com","date":"2013-09-03T02:31:38.235Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u0002906a175\u0002 : process: Add internal _rawDebug() method (+1 more commits) - http://git.io/TdidsQ","date":"2013-09-03T03:16:45.539Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: landed process._rawDebug ^","date":"2013-09-03T03:16:48.972Z","type":"message"}
{"nick":"LOUDBOT","reason":"Ping timeout: 248 seconds","date":"2013-09-03T03:21:41.773Z","type":"quit"}
{"nick":"LOUDBOT","date":"2013-09-03T03:23:03.996Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #521 \u00037UNSTABLE\u000f linux-ia32 (1/643) smartos-x64 (6/643) linux-x64 (1/643) http://jenkins.nodejs.org/job/nodejs-master/521/","date":"2013-09-03T03:26:29.771Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #314 \u00037UNSTABLE\u000f windows-x64 (18/643) windows-ia32 (19/643) http://jenkins.nodejs.org/job/nodejs-master-windows/314/","date":"2013-09-03T03:50:45.272Z","type":"message"}
{"nick":"kazupon","date":"2013-09-03T04:09:11.907Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-09-03T05:01:23.375Z","type":"quit"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-09-03T05:02:33.145Z","type":"quit"}
{"nick":"kazupon","date":"2013-09-03T05:02:46.378Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-03T05:36:11.286Z","type":"quit"}
{"nick":"st_luke","date":"2013-09-03T05:42:18.336Z","type":"join"}
{"nick":"trevnorris","message":"ircretary: tell bnoordhuis I added that for every malloc. saw it done like that in v8 so followed suit.","date":"2013-09-03T05:51:01.313Z","type":"message"}
{"nick":"ircretary","message":"trevnorris: I'll be sure to tell bnoordhuis","date":"2013-09-03T05:51:01.521Z","type":"message"}
{"nick":"csaoh","date":"2013-09-03T06:09:03.158Z","type":"join"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-09-03T06:14:39.565Z","type":"quit"}
{"nick":"trevnorris","message":"i'm getting so many test failures right now it's sort of ridiculous","date":"2013-09-03T06:28:54.850Z","type":"message"}
{"nick":"rendar","date":"2013-09-03T06:41:59.149Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #189 \u00037UNSTABLE\u000f windows-x64 (8/598) windows-ia32 (7/598) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/189/","date":"2013-09-03T06:42:03.624Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-03T06:50:46.176Z","type":"nick"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-09-03T06:52:51.027Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-09-03T06:53:05.590Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-09-03T06:53:15.764Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-03T06:57:49.576Z","type":"nick"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-03T07:04:19.589Z","type":"nick"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-09-03T07:09:36.191Z","type":"quit"}
{"nick":"bajtos","date":"2013-09-03T07:12:47.355Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-09-03T07:17:18.828Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-09-03T07:26:06.708Z","type":"join"}
{"nick":"dominictarr","date":"2013-09-03T07:28:43.560Z","type":"join"}
{"nick":"abraxas","date":"2013-09-03T07:36:35.874Z","type":"join"}
{"nick":"tooxie","date":"2013-09-03T07:39:11.160Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-09-03T07:49:24.121Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-09-03T07:51:48.429Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-03T07:57:39.088Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-09-03T08:01:57.553Z","type":"join"}
{"nick":"csaoh","date":"2013-09-03T08:04:46.581Z","type":"join"}
{"nick":"tooxie","reason":"Ping timeout: 245 seconds","date":"2013-09-03T08:05:08.162Z","type":"quit"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-09-03T08:16:18.467Z","type":"quit"}
{"nick":"dominictarr","date":"2013-09-03T08:22:24.582Z","type":"join"}
{"nick":"hz","date":"2013-09-03T08:29:40.765Z","type":"join"}
{"nick":"inolen","date":"2013-09-03T09:15:17.892Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: sup","date":"2013-09-03T09:17:40.209Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-09-03T09:18:14.544Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-09-03T09:28:22.116Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-09-03T09:42:55.117Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-09-03T10:03:15.483Z","type":"quit"}
{"nick":"rendar","reason":"Ping timeout: 245 seconds","date":"2013-09-03T10:17:30.160Z","type":"quit"}
{"nick":"rendar","date":"2013-09-03T10:18:47.944Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-09-03T10:29:01.692Z","type":"quit"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-09-03T10:34:47.455Z","type":"quit"}
{"nick":"rendar","reason":"Ping timeout: 298 seconds","date":"2013-09-03T10:36:08.593Z","type":"quit"}
{"nick":"rendar","date":"2013-09-03T10:45:28.164Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1461 \u00037UNSTABLE\u000f osx-ia32 (1/598) smartos-x64 (2/598) http://jenkins.nodejs.org/job/nodejs-v0.10/1461/","date":"2013-09-03T10:45:55.244Z","type":"message"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-09-03T10:52:45.320Z","type":"quit"}
{"nick":"aldobee","date":"2013-09-03T11:02:49.908Z","type":"join"}
{"nick":"csaoh","date":"2013-09-03T11:22:07.487Z","type":"join"}
{"nick":"wolfeidau","date":"2013-09-03T11:41:24.648Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-09-03T11:41:52.420Z","type":"quit"}
{"nick":"rendar","reason":"Ping timeout: 245 seconds","date":"2013-09-03T11:48:03.173Z","type":"quit"}
{"nick":"bajtos","date":"2013-09-03T13:22:21.679Z","type":"join"}
{"nick":"kevinswiber","date":"2013-09-03T13:50:43.474Z","type":"join"}
{"nick":"julianduque","reason":"Quit: leaving","date":"2013-09-03T13:52:35.903Z","type":"quit"}
{"nick":"c4milo","date":"2013-09-03T13:53:43.903Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-03T13:53:48.176Z","type":"quit"}
{"nick":"c4milo","date":"2013-09-03T13:53:54.502Z","type":"join"}
{"nick":"jmar777","date":"2013-09-03T14:06:33.908Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-03T14:06:34.118Z","type":"quit"}
{"nick":"philips","reason":"Read error: Connection reset by peer","date":"2013-09-03T14:06:37.513Z","type":"quit"}
{"nick":"philips","date":"2013-09-03T14:07:51.640Z","type":"join"}
{"nick":"kazupon","date":"2013-09-03T14:25:55.754Z","type":"join"}
{"nick":"swaj","date":"2013-09-03T14:36:25.308Z","type":"join"}
{"nick":"swaj","reason":"Changing host","date":"2013-09-03T14:36:27.218Z","type":"quit"}
{"nick":"swaj","date":"2013-09-03T14:36:27.218Z","type":"join"}
{"nick":"groundwater","date":"2013-09-03T14:37:03.827Z","type":"join"}
{"nick":"AvianFlu","date":"2013-09-03T14:41:58.666Z","type":"join"}
{"nick":"AvianFlu_","date":"2013-09-03T14:42:26.966Z","type":"join"}
{"nick":"rendar","date":"2013-09-03T14:42:33.386Z","type":"join"}
{"nick":"AvianFlu","reason":"Disconnected by services","date":"2013-09-03T14:43:37.136Z","type":"quit"}
{"nick":"AvianFlu_","new_nick":"AvianFlu","date":"2013-09-03T14:43:39.642Z","type":"nick"}
{"nick":"tjholowaychuk","date":"2013-09-03T14:53:57.182Z","type":"join"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-09-03T15:06:29.545Z","type":"quit"}
{"nick":"hz","date":"2013-09-03T15:06:35.587Z","type":"join"}
{"nick":"mikeal1","date":"2013-09-03T15:12:44.985Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 256 seconds","date":"2013-09-03T15:13:35.533Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-09-03T15:16:09.484Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #522 \u00037UNSTABLE\u000f linux-ia32 (1/643) smartos-x64 (7/643) linux-x64 (1/643) http://jenkins.nodejs.org/job/nodejs-master/522/","date":"2013-09-03T15:17:32.391Z","type":"message"}
{"nick":"tuxie_","date":"2013-09-03T15:18:52.774Z","type":"join"}
{"nick":"mikeal1","reason":"Quit: Leaving.","date":"2013-09-03T15:21:03.564Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 264 seconds","date":"2013-09-03T15:21:42.211Z","type":"quit"}
{"nick":"mikeal","date":"2013-09-03T15:21:51.292Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-09-03T15:32:17.342Z","type":"quit"}
{"nick":"indutny","message":"hey people","date":"2013-09-03T15:40:44.391Z","type":"message"}
{"nick":"indutny","message":"so long","date":"2013-09-03T15:40:45.849Z","type":"message"}
{"nick":"tjfontaine","message":"so long?","date":"2013-09-03T15:41:34.668Z","type":"message"}
{"nick":"indutny","message":"ouch","date":"2013-09-03T15:43:12.700Z","type":"message"}
{"nick":"tuxie_","message":"that's what she said ^___^","date":"2013-09-03T15:43:15.705Z","type":"message"}
{"nick":"indutny","message":"not exactly what I meant","date":"2013-09-03T15:43:16.564Z","type":"message"}
{"nick":"tuxie_","message":"a little late =/","date":"2013-09-03T15:44:05.201Z","type":"message"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-09-03T15:46:55.757Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-03T15:50:03.747Z","type":"quit"}
{"nick":"isaacs","message":"hola","date":"2013-09-03T15:50:59.795Z","type":"message"}
{"nick":"tjfontaine","message":"hello from burbank california.","date":"2013-09-03T15:51:35.443Z","type":"message"}
{"nick":"c4milo","date":"2013-09-03T15:52:52.460Z","type":"join"}
{"nick":"groundwater","date":"2013-09-03T15:54:47.900Z","type":"join"}
{"nick":"isaacs","message":"tjfontaine: whoa, how's burbank?","date":"2013-09-03T15:56:28.926Z","type":"message"}
{"nick":"tjfontaine","message":"fine, I wasn't supposed to be here this long","date":"2013-09-03T15:56:45.873Z","type":"message"}
{"nick":"tjfontaine","message":"but SFO cancelled my flight last night","date":"2013-09-03T15:56:51.273Z","type":"message"}
{"nick":"isaacs","message":"oh, that sucks","date":"2013-09-03T15:56:55.185Z","type":"message"}
{"nick":"isaacs","message":"ok, i'm heading to a room for cal","date":"2013-09-03T15:57:10.590Z","type":"message"}
{"nick":"isaacs","message":"*call","date":"2013-09-03T15:57:12.620Z","type":"message"}
{"nick":"isaacs","message":"indutny, bnoordhuis, sblom: https://plus.google.com/hangouts/_/5b6b53fce8c09512b15a7e7d5c2fbb51d9557288","date":"2013-09-03T16:00:03.330Z","type":"message"}
{"nick":"bajtos","date":"2013-09-03T16:02:36.682Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-09-03T16:02:50.926Z","type":"join"}
{"nick":"sblom","date":"2013-09-03T16:03:00.741Z","type":"join"}
{"nick":"isaacs","message":"bnoordhuis: http://en.wikipedia.org/wiki/Cinque_Terre","date":"2013-09-03T16:03:05.297Z","type":"message"}
{"nick":"isaacs","message":"sblom: http://en.wikipedia.org/wiki/Cinque_Terre","date":"2013-09-03T16:03:07.217Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-09-03T16:03:12.297Z","type":"join"}
{"nick":"isaacs","message":"trevnorris: http://en.wikipedia.org/wiki/Cinque_Terre","date":"2013-09-03T16:05:00.963Z","type":"message"}
{"nick":"isaacs","message":"er, trevnorris: https://plus.google.com/hangouts/_/5b6b53fce8c09512b15a7e7d5c2fbb51d9557288","date":"2013-09-03T16:05:07.286Z","type":"message"}
{"nick":"isaacs","message":"sorry, wrong url :)","date":"2013-09-03T16:05:10.986Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-09-03T16:08:03.180Z","type":"quit"}
{"nick":"dap","date":"2013-09-03T16:13:06.103Z","type":"join"}
{"nick":"bradleymeck","date":"2013-09-03T16:15:34.512Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-03T16:17:28.130Z","type":"quit"}
{"nick":"hz","date":"2013-09-03T16:20:58.083Z","type":"quit"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-09-03T16:22:26.980Z","type":"quit"}
{"nick":"rendar","message":"isaacs, lol, have you been to cinque terre? :)","date":"2013-09-03T16:24:41.468Z","type":"message"}
{"nick":"isaacs","message":"rendar: no, but i will be in a few weeks","date":"2013-09-03T16:25:01.852Z","type":"message"}
{"nick":"rendar","message":"thats great!","date":"2013-09-03T16:25:11.292Z","type":"message"}
{"nick":"rendar","message":"unfortunately its pretty far from where i live","date":"2013-09-03T16:25:29.456Z","type":"message"}
{"nick":"c4milo","date":"2013-09-03T16:31:27.287Z","type":"join"}
{"nick":"othiym23","message":"isaacs: that looks like a rad place to be, super jelly","date":"2013-09-03T16:35:22.192Z","type":"message"}
{"nick":"CoverSlide","date":"2013-09-03T16:37:24.495Z","type":"join"}
{"nick":"TooTallNate","date":"2013-09-03T16:39:39.644Z","type":"join"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-09-03T16:42:47.590Z","type":"quit"}
{"nick":"indutny","message":":)","date":"2013-09-03T16:48:46.143Z","type":"message"}
{"nick":"ecr","date":"2013-09-03T16:52:38.137Z","type":"join"}
{"nick":"dominictarr","date":"2013-09-03T16:56:18.117Z","type":"join"}
{"nick":"brson","date":"2013-09-03T16:58:35.920Z","type":"join"}
{"nick":"trevnorris","message":"tiny pr for anyone to review https://github.com/joyent/node/pull/6172","date":"2013-09-03T17:01:09.020Z","type":"message"}
{"nick":"trevnorris","message":"doesn't affect multi-context :)","date":"2013-09-03T17:01:13.847Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: lgtm","date":"2013-09-03T17:02:29.089Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: thanks :)","date":"2013-09-03T17:02:43.793Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: are you rebasing onto master, or got a PR i can review?","date":"2013-09-03T17:03:28.469Z","type":"message"}
{"nick":"bnoordhuis","message":"rebasing","date":"2013-09-03T17:04:04.449Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-03T17:04:10.563Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-03T17:04:28.378Z","type":"nick"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-09-03T17:05:17.834Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-03T17:06:01.959Z","type":"nick"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Trevor Norris\u000f \u00037master\u000f * \u00027a235f9\u0002 : string_bytes: use extern for length and write utf8 - http://git.io/Lm22qg","date":"2013-09-03T17:06:22.492Z","type":"message"}
{"nick":"hz","date":"2013-09-03T17:07:19.955Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: so, strange problem. I wrote tests for the async listener. their not passing, because their detecting too many async events.","date":"2013-09-03T17:08:58.421Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: and it's been a pain to track down where their coming from :P","date":"2013-09-03T17:09:12.337Z","type":"message"}
{"nick":"trevnorris","message":"*they're","date":"2013-09-03T17:09:24.350Z","type":"message"}
{"nick":"trevnorris","message":"though _rawDebug is making that much easier :)","date":"2013-09-03T17:10:14.930Z","type":"message"}
{"nick":"AvianFlu","date":"2013-09-03T17:11:07.754Z","type":"join"}
{"nick":"bnoordhuis","message":"https://github.com/joyent/node/pull/6173 <- multi-context","date":"2013-09-03T17:12:22.782Z","type":"message"}
{"nick":"trevnorris","message":"man you rebased that quickly","date":"2013-09-03T17:12:43.774Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: btw, you had a fix for that timer test that's failing right?","date":"2013-09-03T17:12:45.143Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: yeah. https://github.com/trevnorris/node/commit/1308170150abc4198004e2ba2bca26971e2e3571","date":"2013-09-03T17:13:00.541Z","type":"message"}
{"nick":"tjfontaine","message":"which timer test?","date":"2013-09-03T17:13:00.754Z","type":"message"}
{"nick":"bnoordhuis","message":"ah right, that was it","date":"2013-09-03T17:13:22.716Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: just had to do when they required('domain') in the middle of an async call","date":"2013-09-03T17:13:50.773Z","type":"message"}
{"nick":"bnoordhuis","message":"guess i should just fix that and force-push","date":"2013-09-03T17:14:11.498Z","type":"message"}
{"nick":"tjfontaine","message":"ah","date":"2013-09-03T17:14:12.076Z","type":"message"}
{"nick":"trevnorris","message":"sounds good to me","date":"2013-09-03T17:14:21.385Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: I've an idea","date":"2013-09-03T17:15:49.955Z","type":"message"}
{"nick":"indutny","message":"strongloop node \"extra support\" edition","date":"2013-09-03T17:16:01.469Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: still getting failing test-debug-port-from-cmdline and test-debug-signal-cluster. i'll look into those.","date":"2013-09-03T17:16:07.070Z","type":"message"}
{"nick":"indutny","message":"basically node 0.12 RC","date":"2013-09-03T17:16:07.618Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: don't tie your tests to a specific number of async events, i'd think.","date":"2013-09-03T17:16:21.192Z","type":"message"}
{"nick":"indutny","message":"if advertised properly - we can make it out","date":"2013-09-03T17:16:24.111Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: just set some minimum, and make sure it's at least as many as you expect, and not, like 10x as much","date":"2013-09-03T17:16:34.603Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: yeah, those tests are not exactly bad tests but they depend a little too much on the exact order of things at startup","date":"2013-09-03T17:17:27.642Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: ","date":"2013-09-03T17:17:38.305Z","type":"message"}
{"nick":"trevnorris","message":"src/node.cc:2716:  Using sizeof(type).  Use sizeof(varname) instead if possible  [runtime/sizeof] [1]","date":"2013-09-03T17:17:38.894Z","type":"message"}
{"nick":"trevnorris","message":"src/node.cc:2721:  Using sizeof(type).  Use sizeof(varname) instead if possible  [runtime/sizeof] [1]","date":"2013-09-03T17:17:39.102Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: thoughts?","date":"2013-09-03T17:18:00.993Z","type":"message"}
{"nick":"indutny","message":"trevnorris: sizeof(*val) ?","date":"2013-09-03T17:18:12.254Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: oh, i didn't lint it yet :)","date":"2013-09-03T17:18:27.332Z","type":"message"}
{"nick":"trevnorris","message":":)","date":"2013-09-03T17:18:31.574Z","type":"message"}
{"nick":"indutny","message":"aah, that's yours ben :)","date":"2013-09-03T17:18:33.520Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: prefer sizeof(varname) usually. What's your question?","date":"2013-09-03T17:18:39.324Z","type":"message"}
{"nick":"groundwater","date":"2013-09-03T17:18:42.212Z","type":"join"}
{"nick":"piscisaureus_","message":"in fact I'd use `sizeof varname`","date":"2013-09-03T17:18:51.416Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: what do you think about strongloop node \"extra support\" edition","date":"2013-09-03T17:18:55.655Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: good idea for your business ;)","date":"2013-09-03T17:19:03.585Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: what do you mean with \"extra support edition\"","date":"2013-09-03T17:19:20.091Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: basically 0.12 RC with limited time free extra support edition","date":"2013-09-03T17:19:27.235Z","type":"message"}
{"nick":"indutny","message":"with me and probably others from core team helping out people","date":"2013-09-03T17:19:37.780Z","type":"message"}
{"nick":"indutny","message":"basically, what we usually do, but in an another manner","date":"2013-09-03T17:19:47.719Z","type":"message"}
{"nick":"tuxie_","reason":"Ping timeout: 260 seconds","date":"2013-09-03T17:19:51.532Z","type":"quit"}
{"nick":"indutny","message":"and at another scale, hopefuly","date":"2013-09-03T17:19:57.348Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #523 \u00037UNSTABLE\u000f linux-ia32 (1/643) smartos-x64 (12/643) smartos-ia32 (4/643) linux-x64 (1/643) http://jenkins.nodejs.org/job/nodejs-master/523/","date":"2013-09-03T17:20:08.833Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: interesting idea but I need to have some backoffice discussion about that.","date":"2013-09-03T17:20:50.451Z","type":"message"}
{"nick":"indutny","message":"cool","date":"2013-09-03T17:21:10.498Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: also, you could be into it but it's questionable to what extent it'd work for isaac, trevnorris etc","date":"2013-09-03T17:21:12.408Z","type":"message"}
{"nick":"indutny","message":"well, I'm not saying its implied","date":"2013-09-03T17:21:27.844Z","type":"message"}
{"nick":"indutny","message":"just whoever wants to help - should be able to","date":"2013-09-03T17:21:36.020Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-09-03T17:22:58.701Z","type":"quit"}
{"nick":"piscisaureus_","message":"indutny: I'll let you know. I have to think whether/how it could be made to work.","date":"2013-09-03T17:23:42.080Z","type":"message"}
{"nick":"indutny","message":"thanks for listening :)","date":"2013-09-03T17:24:25.231Z","type":"message"}
{"nick":"bradleymeck","date":"2013-09-03T17:24:29.640Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-03T17:24:53.541Z","type":"nick"}
{"nick":"piscisaureus_","message":":)","date":"2013-09-03T17:25:19.774Z","type":"message"}
{"nick":"piscisaureus_","message":"you're welcome","date":"2013-09-03T17:25:23.350Z","type":"message"}
{"nick":"piscisaureus_","message":"listening is easy","date":"2013-09-03T17:25:25.462Z","type":"message"}
{"nick":"piscisaureus_","message":"However I am super hungry and getting some foot. bbl","date":"2013-09-03T17:25:39.949Z","type":"message"}
{"nick":"piscisaureus_","message":"*food","date":"2013-09-03T17:25:47.359Z","type":"message"}
{"nick":"piscisaureus_","message":"Not a cannibal yet","date":"2013-09-03T17:25:53.233Z","type":"message"}
{"nick":"indutny","message":"ttyl","date":"2013-09-03T17:26:00.640Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-09-03T17:26:39.417Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: i'd really like if Object's had a super cheap way of storing flags. just like a uint32_t field on the v8 Object class.","date":"2013-09-03T17:27:53.007Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: then it's be super cheap to store random tidbits of things, like if there's specific data on the object we need to grab.","date":"2013-09-03T17:28:21.368Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: alas, there isn't except maybe SetIndexedPropertiesToExternalArrayData()","date":"2013-09-03T17:28:58.900Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: yeah. problem is that takes just enough time to make it not as useful as it could be. :(","date":"2013-09-03T17:29:33.406Z","type":"message"}
{"nick":"trevnorris","message":"I hate you EAI!","date":"2013-09-03T17:29:51.257Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, that's trivial to fix","date":"2013-09-03T17:30:03.464Z","type":"message"}
{"nick":"bnoordhuis","message":"it makes me kind of say though","date":"2013-09-03T17:30:10.227Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #315 \u00037UNSTABLE\u000f windows-x64 (19/643) windows-ia32 (19/643) http://jenkins.nodejs.org/job/nodejs-master-windows/315/","date":"2013-09-03T17:30:34.025Z","type":"message"}
{"nick":"dshaw_","reason":"Ping timeout: 246 seconds","date":"2013-09-03T17:30:56.003Z","type":"quit"}
{"nick":"kevinswiber","date":"2013-09-03T17:31:22.999Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-09-03T17:32:45.695Z","type":"quit"}
{"nick":"isaacs","action":"reviewing multi-context in earnest...","date":"2013-09-03T17:34:20.671Z","type":"action"}
{"nick":"kevinswiber","date":"2013-09-03T17:35:32.940Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002f3f23b2\u0002 : unix: define _GNU_SOURCE, exposes glibc-isms - http://git.io/cRxegg","date":"2013-09-03T17:36:18.257Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: ^","date":"2013-09-03T17:36:26.883Z","type":"message"}
{"nick":"trevnorris","message":"YEAH!!!","date":"2013-09-03T17:36:33.923Z","type":"message"}
{"nick":"trevnorris","message":":)","date":"2013-09-03T17:36:37.678Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: so, why \"_inl\" and not \"_impl\"","date":"2013-09-03T17:36:41.088Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i keep reading that as \"inline\"","date":"2013-09-03T17:36:46.778Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: also you asked about the FatalError stuff? just curious, or something up?","date":"2013-09-03T17:37:34.967Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: oh, just wondering why you didn't use __func__?","date":"2013-09-03T17:38:05.057Z","type":"message"}
{"nick":"trevnorris","action":"off googling __func__","date":"2013-09-03T17:38:28.862Z","type":"action"}
{"nick":"bnoordhuis","message":"isaacs: you mean the file name, as in env-inl.h? i copied that from v8","date":"2013-09-03T17:39:14.198Z","type":"message"}
{"nick":"bnoordhuis","message":"and libuv","date":"2013-09-03T17:39:24.894Z","type":"message"}
{"nick":"isaacs","message":"oh, fair enough then","date":"2013-09-03T17:40:00.315Z","type":"message"}
{"nick":"isaacs","message":"yeah, that's how they do it, too","date":"2013-09-03T17:40:04.526Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: hm… can't start a build from the web interface...","date":"2013-09-03T17:40:16.044Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: should I update extension?","date":"2013-09-03T17:40:22.689Z","type":"message"}
{"nick":"tjfontaine","message":"indutny: actually...","date":"2013-09-03T17:40:36.370Z","type":"message"}
{"nick":"indutny","message":"actually","date":"2013-09-03T17:40:38.637Z","type":"message"}
{"nick":"indutny","message":"it seems that server is just replying with 500","date":"2013-09-03T17:40:45.659Z","type":"message"}
{"nick":"tjfontaine","message":"it's a stale api key","date":"2013-09-03T17:40:46.560Z","type":"message"}
{"nick":"indutny","message":"{\"message\":\"Jenkins status code 401\"}","date":"2013-09-03T17:40:54.596Z","type":"message"}
{"nick":"indutny","message":"ooh","date":"2013-09-03T17:40:56.859Z","type":"message"}
{"nick":"indutny","message":"how can I renew it?","date":"2013-09-03T17:41:00.208Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: ah, wtf. that would've been great. I just followed v8 (i.e. they pass the full thing as a string)","date":"2013-09-03T17:41:14.893Z","type":"message"}
{"nick":"trevnorris","message":"e.g. http://git.io/rSaXgw","date":"2013-09-03T17:41:30.911Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: ?","date":"2013-09-03T17:42:17.211Z","type":"message"}
{"nick":"tjfontaine","message":"indutny: fixing","date":"2013-09-03T17:42:19.532Z","type":"message"}
{"nick":"bnoordhuis","message":"now that i think of it... it's probably because msvc calls it __FUNCTION__ iirc","date":"2013-09-03T17:42:27.199Z","type":"message"}
{"nick":"bnoordhuis","message":"easy to work around though: #ifdef _WIN32 #define __func__ __FUNCTION__ #endif","date":"2013-09-03T17:42:55.301Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #156 \u00037UNSTABLE\u000f windows-x64 (3/194) windows-ia32 (4/194) smartos-ia32 (2/193) linux-ia32 (1/193) smartos-x64 (2/193) http://jenkins.nodejs.org/job/libuv-master-gyp/156/","date":"2013-09-03T17:43:26.411Z","type":"message"}
{"nick":"bnoordhuis","message":"__func__ is a c99-ism and we all know how MS feels about c99","date":"2013-09-03T17:43:55.702Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-09-03T17:44:16.503Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: is there any API change in this stuff?","date":"2013-09-03T17:44:40.623Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: on the c++ or js side of things?","date":"2013-09-03T17:45:17.729Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #217 \u00037UNSTABLE\u000f windows (3/194) smartos (9/193) http://jenkins.nodejs.org/job/libuv-master/217/","date":"2013-09-03T17:45:32.517Z","type":"message"}
{"nick":"tjfontaine","message":"blah it won't let me recreate you","date":"2013-09-03T17:47:32.632Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: on the js side of things","date":"2013-09-03T17:47:44.640Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: ie, how would one actually use this?","date":"2013-09-03T17:47:49.020Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: you don't currently, not from js. you can start scripts in separate contexts from the command line","date":"2013-09-03T17:48:53.039Z","type":"message"}
{"nick":"isaacs","message":"also this bit: +  // FIXME(bnoordhuis) This should fetch the Environment from the Context","date":"2013-09-03T17:49:48.751Z","type":"message"}
{"nick":"isaacs","message":"+  // where the object lives in, which may be different from the _current_","date":"2013-09-03T17:49:51.778Z","type":"message"}
{"nick":"isaacs","message":"+  // context.","date":"2013-09-03T17:49:54.299Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: it'd be good to actually fix that, or else it seems like a landmine waiting to happen","date":"2013-09-03T17:50:14.171Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: yeah, agreed. only that's not really possible with the current v8 api","date":"2013-09-03T17:50:53.580Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-03T17:51:11.231Z","type":"quit"}
{"nick":"c4milo","date":"2013-09-03T17:51:22.014Z","type":"join"}
{"nick":"bnoordhuis","message":"there's currently no function or method that tells you what context an object belongs to","date":"2013-09-03T17:51:32.357Z","type":"message"}
{"nick":"isaacs","message":"hm.  ok.","date":"2013-09-03T17:52:07.977Z","type":"message"}
{"nick":"bnoordhuis","message":"on a different subject, i did some half-hearted attempt at isolate-ifying NODE_SET_METHOD and NODE_SET_PROTOTYPE_METHOD that i'll probably back out","date":"2013-09-03T17:52:27.657Z","type":"message"}
{"nick":"bnoordhuis","message":"iow, please ignore any NODE_SET_METHOD(isolate, ...) changes","date":"2013-09-03T17:52:54.022Z","type":"message"}
{"nick":"tjfontaine","message":"indutny: ok try again, your api key should be ok now","date":"2013-09-03T17:53:03.963Z","type":"message"}
{"nick":"isaacs","message":"k","date":"2013-09-03T17:53:38.876Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: how do you run scripts in separate contexts fro the cli?","date":"2013-09-03T17:53:52.686Z","type":"message"}
{"nick":"dshaw_","date":"2013-09-03T17:55:18.196Z","type":"join"}
{"nick":"tjfontaine","message":"--context='path/to/script.js arg1 arg2 etc'","date":"2013-09-03T17:55:32.851Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: did you read the PR description? :-)","date":"2013-09-03T17:55:34.656Z","type":"message"}
{"nick":"tjfontaine","message":"it seems?","date":"2013-09-03T17:55:36.430Z","type":"message"}
{"nick":"isaacs","message":"oh, no, i just went straight to the code :)","date":"2013-09-03T17:55:52.045Z","type":"message"}
{"nick":"trevnorris","message":"heh, you weren't kidding about using for (;;)","date":"2013-09-03T17:56:11.741Z","type":"message"}
{"nick":"isaacs","message":"this is a kinda strange API","date":"2013-09-03T17:56:59.583Z","type":"message"}
{"nick":"bnoordhuis","message":"it's not final. i just needed something to test with","date":"2013-09-03T17:57:17.558Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: thanks","date":"2013-09-03T17:57:29.574Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yeah.  so,i take it that's why there's all this tokenize/unescape stuff?","date":"2013-09-03T17:57:31.133Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2013-09-03T17:57:36.370Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: seems to be working!","date":"2013-09-03T17:57:41.702Z","type":"message"}
{"nick":"tjfontaine","message":"indutny: excellent","date":"2013-09-03T17:58:00.553Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-09-03T18:00:02.397Z","type":"quit"}
{"nick":"tjfontaine","message":"bbiab, getting some brunch, then to the airport","date":"2013-09-03T18:00:22.149Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yeah, i understnd the need to have something to test with.  but i'm emphatically -1 on this api approach.  embedding command lines in command lines is notoriously problematic.","date":"2013-09-03T18:00:40.201Z","type":"message"}
{"nick":"bnoordhuis","message":"okay. what do you do propose?","date":"2013-09-03T18:00:55.930Z","type":"message"}
{"nick":"mikeal","date":"2013-09-03T18:01:01.995Z","type":"join"}
{"nick":"bnoordhuis","message":"err, -1 do","date":"2013-09-03T18:01:02.218Z","type":"message"}
{"nick":"isaacs","message":"yeah, that's where i'm puzzling over.","date":"2013-09-03T18:01:10.482Z","type":"message"}
{"nick":"isaacs","message":"i mean, if we want to actually have a completely separate argv etc, it almost feels reasonable to mimic the spawn() api","date":"2013-09-03T18:01:51.201Z","type":"message"}
{"nick":"isaacs","message":"a la isolates","date":"2013-09-03T18:02:00.411Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, right","date":"2013-09-03T18:02:04.533Z","type":"message"}
{"nick":"isaacs","message":"however, it's not actually a child process.","date":"2013-09-03T18:02:06.941Z","type":"message"}
{"nick":"isaacs","message":"and it sort of seems like something that could live happily on require('vm')","date":"2013-09-03T18:02:20.121Z","type":"message"}
{"nick":"bnoordhuis","message":"so... the reason i did it like this is that creating contexts from js land is problematic when security tokens are involved","date":"2013-09-03T18:02:28.436Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-09-03T18:02:33.391Z","type":"message"}
{"nick":"isaacs","message":"if you pass in a different security token, then you can't look at the results of the script","date":"2013-09-03T18:03:00.680Z","type":"message"}
{"nick":"isaacs","message":"or manage who can see what.","date":"2013-09-03T18:03:06.583Z","type":"message"}
{"nick":"bnoordhuis","message":"well, that","date":"2013-09-03T18:03:09.733Z","type":"message"}
{"nick":"bnoordhuis","message":"but also, you can't populate the new context with a custom global object, for example","date":"2013-09-03T18:03:26.912Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-09-03T18:03:32.081Z","type":"message"}
{"nick":"isaacs","message":"it can't look at any objects that you might pass in","date":"2013-09-03T18:03:45.899Z","type":"message"}
{"nick":"isaacs","message":"which makes it feel more like spawn","date":"2013-09-03T18:03:51.760Z","type":"message"}
{"nick":"isaacs","message":"even though it's not an actual child process with a separate pid/signals/etc","date":"2013-09-03T18:04:05.380Z","type":"message"}
{"nick":"bnoordhuis","message":"right","date":"2013-09-03T18:04:19.945Z","type":"message"}
{"nick":"isaacs","message":"vm.spawn()?","date":"2013-09-03T18:04:26.869Z","type":"message"}
{"nick":"isaacs","message":"vm.spawn({stuff that will be copied}, [securityToken])?","date":"2013-09-03T18:05:10.349Z","type":"message"}
{"nick":"isaacs","message":"hm....","date":"2013-09-03T18:05:24.199Z","type":"message"}
{"nick":"isaacs","message":"i mean, i realize that this is like the most minor surface bit of this change, and it's a very deep change.","date":"2013-09-03T18:05:51.266Z","type":"message"}
{"nick":"isaacs","message":"most of it looks fine.  it's pretty big, so we'll probably find bugs by actually hitting them, but as far as i can tell, the actual mechanics of it are good, and a net improvement all over the codebase.","date":"2013-09-03T18:06:21.778Z","type":"message"}
{"nick":"isaacs","message":"very much +1 on all that stuff.","date":"2013-09-03T18:06:27.808Z","type":"message"}
{"nick":"inolen","date":"2013-09-03T18:06:37.994Z","type":"join"}
{"nick":"inolen","reason":"Client Quit","date":"2013-09-03T18:09:44.866Z","type":"quit"}
{"nick":"bnoordhuis","message":"hm, seems i can get the object's context after all. okay, nice, i'll address that FIXME","date":"2013-09-03T18:09:59.793Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-09-03T18:11:36.669Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: specific reason to move stuff from node_internal to util? just curious","date":"2013-09-03T18:11:41.548Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: node_internals.h was getting rather unwieldy","date":"2013-09-03T18:12:14.591Z","type":"message"}
{"nick":"bnoordhuis","message":"i decided to move stuff rather than tack on more","date":"2013-09-03T18:13:08.117Z","type":"message"}
{"nick":"bnoordhuis","message":"but i later gutted node_internals.h in master so it's not as dramatic anymore","date":"2013-09-03T18:13:31.569Z","type":"message"}
{"nick":"mikeal","date":"2013-09-03T18:14:39.571Z","type":"join"}
{"nick":"trevnorris","message":"coolio","date":"2013-09-03T18:21:48.231Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: the dlopen issue, also seems like a landmine","date":"2013-09-03T18:23:57.057Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah. i'm undecided so far on what to do with it","date":"2013-09-03T18:24:53.583Z","type":"message"}
{"nick":"bnoordhuis","message":"'first one to load wins' seems easiest","date":"2013-09-03T18:25:58.391Z","type":"message"}
{"nick":"isaacs","message":"hm.","date":"2013-09-03T18:26:05.755Z","type":"message"}
{"nick":"bnoordhuis","message":"and then bug add-on authors to make their modules context-aware","date":"2013-09-03T18:26:11.851Z","type":"message"}
{"nick":"isaacs","message":"that's going to be a problem if you want to have multiple workers doing some stuff with a binary addon","date":"2013-09-03T18:26:34.656Z","type":"message"}
{"nick":"isaacs","message":"which doesn't seem that strange to want to do","date":"2013-09-03T18:26:40.398Z","type":"message"}
{"nick":"isaacs","message":"but i guess, yeah, module authors just have to deal with it","date":"2013-09-03T18:26:56.125Z","type":"message"}
{"nick":"isaacs","message":"it seems like a lot of ExecutionContext can be removed if we have a js interface to this stuff.","date":"2013-09-03T18:27:41.726Z","type":"message"}
{"nick":"bnoordhuis","message":"it's pretty easy for an add-on author btw, s/he just needs to use the NODE_MODULE_CONTEXT_AWARE macro and be prepared to deal with multiple init calls","date":"2013-09-03T18:28:02.802Z","type":"message"}
{"nick":"isaacs","message":"eg, what if it looked more like web workers, and less like a whole new process?","date":"2013-09-03T18:28:10.785Z","type":"message"}
{"nick":"isaacs","message":"true that","date":"2013-09-03T18:28:15.658Z","type":"message"}
{"nick":"isaacs","message":"ok, dlopen can remain a FIXME, or probably just be fixed with docs.","date":"2013-09-03T18:28:31.464Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-03T18:30:12.828Z","type":"quit"}
{"nick":"TooTallNate","message":"does node automatically use the dns servers on OSX's Network->Advanced->DNS tab?","date":"2013-09-03T18:33:42.433Z","type":"message"}
{"nick":"bnoordhuis","message":"TooTallNate: if libc's getaddrinfo() function does","date":"2013-09-03T18:34:49.668Z","type":"message"}
{"nick":"bnoordhuis","message":"(it should)","date":"2013-09-03T18:35:01.537Z","type":"message"}
{"nick":"TooTallNate","message":"ya that's what i thought","date":"2013-09-03T18:35:15.870Z","type":"message"}
{"nick":"TooTallNate","message":"thanks bnoordhuis ","date":"2013-09-03T18:35:17.070Z","type":"message"}
{"nick":"othiym23","message":"bnoordhuis, isaacs: is there a bug or something somewhare that explains the motivation behind multi-context?","date":"2013-09-03T18:38:04.026Z","type":"message"}
{"nick":"hz","date":"2013-09-03T18:38:07.186Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23: github is paying ben to implement it. and it's \"more correct\" way of doing things.","date":"2013-09-03T18:38:29.976Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-03T18:38:34.104Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-09-03T18:38:37.328Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: this will probably sound ridiculous, but would it be possible to create a class that inherits from v8::Object and adds the flags field I'm looking for.","date":"2013-09-03T18:38:40.623Z","type":"message"}
{"nick":"othiym23","message":"I guess I can wait until the final API for interacting with it lands","date":"2013-09-03T18:39:05.537Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: and still treat it as a v8::Object, but static_cast and grab the flags I'm looking for?","date":"2013-09-03T18:39:22.284Z","type":"message"}
{"nick":"othiym23","message":"it looks like a re-emergence of the old isolate stuff, which could be super useful, but I'm confused by the fact that it doesn't have much to do with the contextify stuff Domenic_ was working on","date":"2013-09-03T18:39:47.158Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: well... not easily","date":"2013-09-03T18:40:06.695Z","type":"message"}
{"nick":"EhevuTov","date":"2013-09-03T18:40:30.671Z","type":"join"}
{"nick":"bnoordhuis","message":"othiym23: it's basically the prequel to isolates reloaded","date":"2013-09-03T18:40:37.559Z","type":"message"}
{"nick":"AvianFlu","date":"2013-09-03T18:40:49.998Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: bummer. it would just be used for the ReqWrap object created on request","date":"2013-09-03T18:41:11.747Z","type":"message"}
{"nick":"trevnorris","message":"that would make all this soooo much easier.","date":"2013-09-03T18:41:31.317Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: then why don't you store that information in the ReqWrap?","date":"2013-09-03T18:41:51.801Z","type":"message"}
{"nick":"bnoordhuis","message":"maybe i'm misunderstanding what you're trying to do","date":"2013-09-03T18:42:06.211Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: because I need to get the data in MakeCallback, which only passes the object. but, guess I could create a version of MakeCallback that accepts a flag.","date":"2013-09-03T18:42:47.423Z","type":"message"}
{"nick":"bnoordhuis","message":"othiym23: what Domenic_ was working on is plain contexts, i.e. running code in a sandbox. multi-context is like that but it integrates with the event loop","date":"2013-09-03T18:43:29.959Z","type":"message"}
{"nick":"Domenic_","message":"i am curious about the connection here too","date":"2013-09-03T18:43:42.530Z","type":"message"}
{"nick":"bnoordhuis","message":"othiym23: e.g. i/o callbacks know what context they belong to","date":"2013-09-03T18:43:48.450Z","type":"message"}
{"nick":"othiym23","message":"right, but doesn't that more or less mean that the two together could expose an API a lot like web workers?","date":"2013-09-03T18:43:59.157Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2013-09-03T18:44:07.224Z","type":"message"}
{"nick":"othiym23","message":"that would be sweet","date":"2013-09-03T18:44:35.649Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: yeah, maybe a ReqWrap::MakeCallback() method that's smart about things","date":"2013-09-03T18:44:54.044Z","type":"message"}
{"nick":"Domenic_","message":"bnoordhuis: so, they don't know already? e.g. if I do `vm.runInNewContext('fs.readFile(\"x.txt\", function (err, result) { })')` what will happen?","date":"2013-09-03T18:44:55.278Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: awesome. thanks for the idea.","date":"2013-09-03T18:45:16.731Z","type":"message"}
{"nick":"bnoordhuis","message":"Domenic_: it works because both contexts share the same security token (or rather, they both don't have one)","date":"2013-09-03T18:45:43.394Z","type":"message"}
{"nick":"Domenic_","message":"bnoordhuis: hmm ok, so what does the multi-context work do then?","date":"2013-09-03T18:46:05.825Z","type":"message"}
{"nick":"bnoordhuis","message":"let you set security tokens :)","date":"2013-09-03T18:46:24.461Z","type":"message"}
{"nick":"bnoordhuis","message":"basically, each context is now a more or less standalone node process","date":"2013-09-03T18:46:56.820Z","type":"message"}
{"nick":"bnoordhuis","message":"the use case is e.g. embedding node in a browser where each tab runs in a separate context","date":"2013-09-03T18:47:43.847Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #316 \u00037UNSTABLE\u000f windows-x64 (17/643) windows-ia32 (20/643) http://jenkins.nodejs.org/job/nodejs-master-windows/316/","date":"2013-09-03T18:48:32.634Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: except one context will block the others, right?","date":"2013-09-03T18:50:42.635Z","type":"message"}
{"nick":"c4milo","date":"2013-09-03T18:51:00.374Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: yeah, there's no pre-emptive scheduling going on","date":"2013-09-03T18:53:25.681Z","type":"message"}
{"nick":"bnoordhuis","message":"everything still runs in a single thread","date":"2013-09-03T18:53:37.863Z","type":"message"}
{"nick":"tjholowaychuk","reason":"Quit: Linkinus - http://linkinus.com","date":"2013-09-03T19:11:56.488Z","type":"quit"}
{"nick":"Apage43","date":"2013-09-03T19:12:00.118Z","type":"part"}
{"nick":"othiym23","message":"I am keenly curious to see what GitHub ends up doing with this ;)","date":"2013-09-03T19:13:07.211Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-09-03T19:13:20.568Z","type":"quit"}
{"nick":"austo","message":"bnoordhuis: in one of your demos, you used a static buffer to handle stream read allocations because they never overlap... is that always true for, say, a tcp stream?","date":"2013-09-03T19:21:20.183Z","type":"message"}
{"nick":"bnoordhuis","message":"austo: for a single tcp handle, yes, but not when you have multiple","date":"2013-09-03T19:23:29.485Z","type":"message"}
{"nick":"bnoordhuis","message":"or maybe i should say \"not on windows\"","date":"2013-09-03T19:24:22.592Z","type":"message"}
{"nick":"austo","message":"not a problem for the moment :)","date":"2013-09-03T19:25:34.068Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: i was wrong about the debugger tests, the bug was mine. mea culpa","date":"2013-09-03T19:26:14.083Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: :)","date":"2013-09-03T19:27:33.690Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-03T19:27:55.891Z","type":"quit"}
{"nick":"dshaw_","date":"2013-09-03T19:28:09.494Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: yt?","date":"2013-09-03T19:28:22.915Z","type":"message"}
{"nick":"indutny","message":"I've a question for you :)","date":"2013-09-03T19:28:44.366Z","type":"message"}
{"nick":"indutny","message":"how would you refactor https://github.com/indutny/mine.uv/blob/master/src/anvil.c#L222 if it was your code?","date":"2013-09-03T19:28:52.472Z","type":"message"}
{"nick":"bnoordhuis","message":"hah","date":"2013-09-03T19:29:20.788Z","type":"message"}
{"nick":"bnoordhuis","message":"it's an array of array of arrays?","date":"2013-09-03T19:29:34.768Z","type":"message"}
{"nick":"bnoordhuis","message":"or at least some multi-dimensional data structure?","date":"2013-09-03T19:30:19.479Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2013-09-03T19:30:41.033Z","type":"message"}
{"nick":"indutny","message":"three dimensional array","date":"2013-09-03T19:30:48.533Z","type":"message"}
{"nick":"indutny","message":"this code is so… nested","date":"2013-09-03T19:30:56.114Z","type":"message"}
{"nick":"indutny","message":"actually, I refactored it a bit","date":"2013-09-03T19:31:16.577Z","type":"message"}
{"nick":"indutny","message":"please refresh","date":"2013-09-03T19:31:19.421Z","type":"message"}
{"nick":"bnoordhuis","message":"is there a performance issue or is it an aesthetic thing?","date":"2013-09-03T19:31:24.642Z","type":"message"}
{"nick":"indutny","message":"oops, forgot to push","date":"2013-09-03T19:31:46.018Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: this shit is totally unreadable :)","date":"2013-09-03T19:31:55.014Z","type":"message"}
{"nick":"indutny","message":"aesthetic","date":"2013-09-03T19:32:00.216Z","type":"message"}
{"nick":"indutny","message":"mostly :)","date":"2013-09-03T19:32:28.703Z","type":"message"}
{"nick":"bnoordhuis","message":"well, you could flatten the array","date":"2013-09-03T19:33:01.363Z","type":"message"}
{"nick":"bnoordhuis","message":"if you reorder your data, you could probably process it in chunks, rather than one at a time","date":"2013-09-03T19:33:29.317Z","type":"message"}
{"nick":"bnoordhuis","message":"what kind of thing is a mchunks->blocks?","date":"2013-09-03T19:33:58.723Z","type":"message"}
{"nick":"indutny","message":"one sec","date":"2013-09-03T19:34:47.087Z","type":"message"}
{"nick":"indutny","message":"  mc_block_t blocks[16][16][16];","date":"2013-09-03T19:35:01.252Z","type":"message"}
{"nick":"indutny","message":"that's mc_chunk_t","date":"2013-09-03T19:35:07.127Z","type":"message"}
{"nick":"bnoordhuis","message":"wait, let me clone it and ctags it","date":"2013-09-03T19:35:23.061Z","type":"message"}
{"nick":"bnoordhuis","message":"hey, it's pretty big. what are you storing in there?","date":"2013-09-03T19:35:35.218Z","type":"message"}
{"nick":"indutny","message":"minecraft blocks","date":"2013-09-03T19:36:30.817Z","type":"message"}
{"nick":"indutny","message":"its really big","date":"2013-09-03T19:36:32.921Z","type":"message"}
{"nick":"indutny","message":"but I see no other way of doing it","date":"2013-09-03T19:36:42.080Z","type":"message"}
{"nick":"indutny","message":"considering that I'll be doing in-memory updates of contents","date":"2013-09-03T19:36:52.074Z","type":"message"}
{"nick":"indutny","message":"and then periodically saving it to file","date":"2013-09-03T19:36:59.587Z","type":"message"}
{"nick":"bnoordhuis","message":"right","date":"2013-09-03T19:37:02.584Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, so you have 4096 blocks in total, right?","date":"2013-09-03T19:37:52.705Z","type":"message"}
{"nick":"indutny","message":"in one chunk","date":"2013-09-03T19:38:16.475Z","type":"message"}
{"nick":"indutny","message":"and 16 chunks for one column","date":"2013-09-03T19:38:21.159Z","type":"message"}
{"nick":"indutny","message":"and 1024 columns per region","date":"2013-09-03T19:38:31.074Z","type":"message"}
{"nick":"indutny","message":"so","date":"2013-09-03T19:38:38.689Z","type":"message"}
{"nick":"indutny","message":"a lot of data :)","date":"2013-09-03T19:38:42.243Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah","date":"2013-09-03T19:38:44.705Z","type":"message"}
{"nick":"bnoordhuis","message":"you could deconstruct mc_block_t into its individual fields","date":"2013-09-03T19:39:08.450Z","type":"message"}
{"nick":"bnoordhuis","message":"wait, let me diff that","date":"2013-09-03T19:39:18.698Z","type":"message"}
{"nick":"indutny","message":"sure","date":"2013-09-03T19:39:44.257Z","type":"message"}
{"nick":"indutny","message":"thanks","date":"2013-09-03T19:39:44.948Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: https://gist.github.com/bnoordhuis/979c930bc82aad3a103b","date":"2013-09-03T19:40:24.679Z","type":"message"}
{"nick":"bnoordhuis","message":"i.e. you decompose the struct and then process each field individually","date":"2013-09-03T19:40:41.365Z","type":"message"}
{"nick":"indutny","message":"oh, well","date":"2013-09-03T19:40:46.567Z","type":"message"}
{"nick":"indutny","message":"while it'll definitely improve parsing","date":"2013-09-03T19:40:58.201Z","type":"message"}
{"nick":"indutny","message":"lookup will become much less sanier","date":"2013-09-03T19:41:05.381Z","type":"message"}
{"nick":"bnoordhuis","message":"helps a great deal with run-time performance though","date":"2013-09-03T19:41:15.192Z","type":"message"}
{"nick":"indutny","message":"saner*","date":"2013-09-03T19:41:16.057Z","type":"message"}
{"nick":"indutny","message":"why?","date":"2013-09-03T19:41:21.629Z","type":"message"}
{"nick":"indutny","message":"won't it spread the cache?","date":"2013-09-03T19:41:33.380Z","type":"message"}
{"nick":"bnoordhuis","message":"on the contrary","date":"2013-09-03T19:41:39.223Z","type":"message"}
{"nick":"bnoordhuis","message":"just to make sure we're on the same page","date":"2013-09-03T19:42:01.925Z","type":"message"}
{"nick":"bnoordhuis","message":"you first process all 4096 ids","date":"2013-09-03T19:42:12.060Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-09-03T19:42:20.151Z","type":"message"}
{"nick":"bnoordhuis","message":"then all 4096 metadata fields and so on","date":"2013-09-03T19:42:21.765Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2013-09-03T19:42:24.835Z","type":"message"}
{"nick":"indutny","message":"interesting","date":"2013-09-03T19:42:28.253Z","type":"message"}
{"nick":"indutny","message":"but still it'll spread the cache later","date":"2013-09-03T19:42:47.387Z","type":"message"}
{"nick":"indutny","message":"when reading from it","date":"2013-09-03T19:42:51.834Z","type":"message"}
{"nick":"indutny","message":"but thanks for the idea","date":"2013-09-03T19:43:01.453Z","type":"message"}
{"nick":"bnoordhuis","message":"right, that may well be true","date":"2013-09-03T19:43:01.667Z","type":"message"}
{"nick":"bnoordhuis","message":"still, that's how most games process graphics data so it can't be all bad :)","date":"2013-09-03T19:43:25.570Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: one thing you may want to consider is to flatten the array","date":"2013-09-03T19:44:30.321Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2013-09-03T19:44:49.297Z","type":"message"}
{"nick":"bnoordhuis","message":"the way you're iterating over it now, you're jumping all over memory, i think","date":"2013-09-03T19:44:54.699Z","type":"message"}
{"nick":"bnoordhuis","action":"looks more closely","date":"2013-09-03T19:44:58.773Z","type":"action"}
{"nick":"indutny","message":"I don't really think so, actually","date":"2013-09-03T19:45:07.250Z","type":"message"}
{"nick":"indutny","message":"it should be quite sequential right now","date":"2013-09-03T19:45:24.846Z","type":"message"}
{"nick":"st_luke","date":"2013-09-03T19:45:24.847Z","type":"join"}
{"nick":"julianduque","date":"2013-09-03T19:46:55.936Z","type":"join"}
{"nick":"bnoordhuis","message":"you sure? y is the inner loop. the way i read it, you're jumping 32 elements at a time","date":"2013-09-03T19:48:15.943Z","type":"message"}
{"nick":"bnoordhuis","message":"er, not 32 - 256","date":"2013-09-03T19:48:35.217Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2013-09-03T19:48:39.289Z","type":"message"}
{"nick":"indutny","message":"aaah, right","date":"2013-09-03T19:48:48.417Z","type":"message"}
{"nick":"indutny","message":"I should store it","date":"2013-09-03T19:48:51.441Z","type":"message"}
{"nick":"indutny","message":"[x][z][y]","date":"2013-09-03T19:48:53.429Z","type":"message"}
{"nick":"indutny","message":"that's a good tip","date":"2013-09-03T19:48:57.188Z","type":"message"}
{"nick":"indutny","message":"thanks","date":"2013-09-03T19:48:58.273Z","type":"message"}
{"nick":"bnoordhuis","message":"np :)","date":"2013-09-03T19:49:01.008Z","type":"message"}
{"nick":"indutny","message":"I wonder if it'll affect performance :)","date":"2013-09-03T19:49:27.887Z","type":"message"}
{"nick":"indutny","message":"right now it takes about 300ms to parse one region","date":"2013-09-03T19:49:40.849Z","type":"message"}
{"nick":"indutny","message":"mostly because of zlib","date":"2013-09-03T19:49:49.431Z","type":"message"}
{"nick":"bnoordhuis","message":"is it hot code?","date":"2013-09-03T19:50:01.789Z","type":"message"}
{"nick":"bnoordhuis","message":"in the sense that it gets called often, i mean :)","date":"2013-09-03T19:50:12.509Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: so, what would be the specific blocker to exposing multi-context as vm.spawn()?","date":"2013-09-03T19:50:44.806Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i'd like to explore what a js binding to this might look like.","date":"2013-09-03T19:51:09.577Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: yeah","date":"2013-09-03T19:51:19.945Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: well, the object/function issue with different security tokens","date":"2013-09-03T19:51:30.998Z","type":"message"}
{"nick":"indutny","message":"I've another idea for improving it","date":"2013-09-03T19:51:35.537Z","type":"message"}
{"nick":"indutny","message":"zone allocation for nbt parser","date":"2013-09-03T19:51:40.300Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: or at least, if we simply cannot do it from js, a way that doesn't involve parsing command lines twice.","date":"2013-09-03T19:51:42.745Z","type":"message"}
{"nick":"indutny","message":"but I think it'll not improve things significantly","date":"2013-09-03T19:51:52.403Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: i'm open to suggestions :)","date":"2013-09-03T19:52:20.870Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: have you perf'd it yet?","date":"2013-09-03T19:52:31.162Z","type":"message"}
{"nick":"indutny","message":"nope","date":"2013-09-03T19:52:37.038Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: so, just so that i understand this,","date":"2013-09-03T19:52:37.464Z","type":"message"}
{"nick":"indutny","message":"still don't have a linux box","date":"2013-09-03T19:52:44.921Z","type":"message"}
{"nick":"indutny","message":"I mean","date":"2013-09-03T19:52:47.381Z","type":"message"}
{"nick":"indutny","message":"non-virtualized linux box","date":"2013-09-03T19:52:51.043Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, so no PMCs. that sucks","date":"2013-09-03T19:52:58.293Z","type":"message"}
{"nick":"indutny","message":"but I run it through Instruments.app","date":"2013-09-03T19:52:58.504Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: let's say we had something like var something = vm.spawn(someScriptCodes, filename, someGlobals)","date":"2013-09-03T19:53:03.894Z","type":"message"}
{"nick":"isaacs","message":"er, vm.spawn(someScriptCodes, filename, someGlobals, securityToken)","date":"2013-09-03T19:53:23.325Z","type":"message"}
{"nick":"AvianFlu_","date":"2013-09-03T19:53:28.675Z","type":"join"}
{"nick":"isaacs","message":"then the problem is that someGlobals are created with a different security token, yes?","date":"2013-09-03T19:53:32.604Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2013-09-03T19:53:35.769Z","type":"message"}
{"nick":"isaacs","message":"ok.  so, let's say you can't pass globals in.","date":"2013-09-03T19:53:42.525Z","type":"message"}
{"nick":"isaacs","message":"vm.spawn(someScriptCodes, filename, securityToken)","date":"2013-09-03T19:53:52.218Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, that works","date":"2013-09-03T19:54:01.353Z","type":"message"}
{"nick":"isaacs","message":"or even:  vm.spawn(filename, securityToken) and it reads the filename and runs it.","date":"2013-09-03T19:54:05.784Z","type":"message"}
{"nick":"isaacs","message":"or vm.spawn(filename, [some, args], securityToken)","date":"2013-09-03T19:54:18.904Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't know about reading files directly","date":"2013-09-03T19:54:44.006Z","type":"message"}
{"nick":"isaacs","message":"it'dbe kinda like child_process.fork() i guess","date":"2013-09-03T19:54:59.123Z","type":"message"}
{"nick":"bnoordhuis","message":"i predict that the first bug report will be \"can't pass source directly\"","date":"2013-09-03T19:55:00.830Z","type":"message"}
{"nick":"isaacs","message":"sure.","date":"2013-09-03T19:55:05.523Z","type":"message"}
{"nick":"isaacs","message":"vm.runInNewEnvironment(src, filename, token)","date":"2013-09-03T19:55:21.984Z","type":"message"}
{"nick":"bnoordhuis","message":"something like that","date":"2013-09-03T19:55:45.260Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 248 seconds","date":"2013-09-03T19:56:21.770Z","type":"quit"}
{"nick":"isaacs","message":"that'd be pretty nice.","date":"2013-09-03T19:56:32.562Z","type":"message"}
{"nick":"isaacs","message":"and one could trivially do the --context='foo.js arg arg' --security-token='deadbeef' if they wanted.","date":"2013-09-03T19:56:59.772Z","type":"message"}
{"nick":"bnoordhuis","message":"yes. i'm fine with it, seems like an okay api","date":"2013-09-03T19:58:20.423Z","type":"message"}
{"nick":"isaacs","message":"ok","date":"2013-09-03T19:58:50.252Z","type":"message"}
{"nick":"isaacs","message":"lemme play with it a little bit more, and i'll have something that's more concrete to pitch.","date":"2013-09-03T19:59:06.621Z","type":"message"}
{"nick":"isaacs","message":"i'd prefer to at least have an idea of what that'll be before we land this.","date":"2013-09-03T19:59:29.621Z","type":"message"}
{"nick":"isaacs","message":"it's ok to land the cli parsing mumbo jumbo and then take it out, but i'm hesitant to let it in if we're not sure how long it'll be there.","date":"2013-09-03T19:59:47.530Z","type":"message"}
{"nick":"isaacs","message":"that's how things get forgotten :)","date":"2013-09-03T19:59:54.360Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: oh, also, i'm seeing this:","date":"2013-09-03T20:00:43.580Z","type":"message"}
{"nick":"isaacs","message":"$ ./node --context='foo.js one'","date":"2013-09-03T20:00:43.801Z","type":"message"}
{"nick":"isaacs","message":"> Assertion failed: (loop->watchers[w->fd] == w), function uv__io_stop, file ../deps/uv/src/unix/core.c, line 677.","date":"2013-09-03T20:00:44.011Z","type":"message"}
{"nick":"isaacs","message":"Abort trap: 6","date":"2013-09-03T20:00:47.119Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-09-03T20:01:02.204Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-09-03T20:02:21.132Z","type":"join"}
{"nick":"bnoordhuis","message":"oh, i guess i should make it so that you can't start an inferior context without also starting the main context","date":"2013-09-03T20:02:47.374Z","type":"message"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-09-03T20:03:12.546Z","type":"quit"}
{"nick":"bajtos","date":"2013-09-03T20:03:58.953Z","type":"join"}
{"nick":"bnoordhuis","message":"seems to work for me though","date":"2013-09-03T20:05:03.158Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: it also fails if i start a main context","date":"2013-09-03T20:06:47.456Z","type":"message"}
{"nick":"isaacs","message":"$ ./node --context='foo.js one' --context='foo.js two' foo.js main","date":"2013-09-03T20:06:47.826Z","type":"message"}
{"nick":"isaacs","message":"main 1378238793692","date":"2013-09-03T20:06:48.042Z","type":"message"}
{"nick":"isaacs","message":"> Assertion failed: (loop->watchers[w->fd] == w), function uv__io_stop, file ../deps/uv/src/unix/core.c, line 677.","date":"2013-09-03T20:06:48.042Z","type":"message"}
{"nick":"isaacs","message":"Abort trap: 6","date":"2013-09-03T20:06:50.985Z","type":"message"}
{"nick":"isaacs","message":"https://gist.github.com/isaacs/6428869","date":"2013-09-03T20:06:59.019Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: could be something specific to timers or stdout writing?","date":"2013-09-03T20:07:27.256Z","type":"message"}
{"nick":"isaacs","message":"i have not dug into it except to complain to the author in #libuv","date":"2013-09-03T20:07:38.089Z","type":"message"}
{"nick":"isaacs","message":":)","date":"2013-09-03T20:07:39.034Z","type":"message"}
{"nick":"bnoordhuis","message":"weird, it works for me on os x","date":"2013-09-03T20:08:18.753Z","type":"message"}
{"nick":"bnoordhuis","message":"i did fix a bug 30 minutes ago","date":"2013-09-03T20:08:35.178Z","type":"message"}
{"nick":"bnoordhuis","message":"can you pull/rebuild and retry?","date":"2013-09-03T20:09:01.563Z","type":"message"}
{"nick":"kazupon","date":"2013-09-03T20:09:12.548Z","type":"join"}
{"nick":"bnoordhuis","message":"works on linux too btw","date":"2013-09-03T20:10:01.294Z","type":"message"}
{"nick":"bajtos","reason":"Ping timeout: 276 seconds","date":"2013-09-03T20:11:21.504Z","type":"quit"}
{"nick":"isaacs","message":"sure.","date":"2013-09-03T20:13:18.749Z","type":"message"}
{"nick":"isaacs","message":"pull from your multi-context branch?","date":"2013-09-03T20:13:24.060Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: ^","date":"2013-09-03T20:13:29.209Z","type":"message"}
{"nick":"isaacs","message":"From git://github.com/bnoordhuis/node * branch            multi-context -> FETCH_HEAD","date":"2013-09-03T20:13:51.727Z","type":"message"}
{"nick":"isaacs","message":"Current branch multi-context is up to date.","date":"2013-09-03T20:13:54.649Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i'm on 314d6ac578f8b867ec0e4f0e3d720d8b2600a474","date":"2013-09-03T20:13:59.885Z","type":"message"}
{"nick":"isaacs","message":"just touched all of deps/uv and src/ and rebuilt.  same thing","date":"2013-09-03T20:15:07.277Z","type":"message"}
{"nick":"bnoordhuis","message":"that's the latest one. well, that's weird","date":"2013-09-03T20:15:12.228Z","type":"message"}
{"nick":"isaacs","message":"weird. running in gdb works fine.","date":"2013-09-03T20:16:32.717Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-09-03T20:16:40.432Z","type":"quit"}
{"nick":"isaacs","message":"with or without the \"main\" foo.js script","date":"2013-09-03T20:17:18.525Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-09-03T20:18:30.191Z","type":"quit"}
{"nick":"hz","date":"2013-09-03T20:20:04.766Z","type":"join"}
{"nick":"isaacs","message":"bnoordhuis: also, this is kinda... wrong.  https://gist.github.com/isaacs/6429018","date":"2013-09-03T20:20:05.347Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i'd expect that a) it should not enter the repl, and b) process.argv should be [foo.js,one]","date":"2013-09-03T20:20:39.699Z","type":"message"}
{"nick":"isaacs","message":"er, rather [foo.js, main]","date":"2013-09-03T20:20:46.135Z","type":"message"}
{"nick":"kevinswiber","date":"2013-09-03T20:21:37.515Z","type":"join"}
{"nick":"isaacs","message":"that's what the blown asserts commented out","date":"2013-09-03T20:22:24.882Z","type":"message"}
{"nick":"bnoordhuis","message":"well, it's going away anyway, right?","date":"2013-09-03T20:23:41.716Z","type":"message"}
{"nick":"isaacs","message":"haha, indeed :)","date":"2013-09-03T20:24:22.573Z","type":"message"}
{"nick":"isaacs","message":"but i'm just trying to kinda mess around with it as it is now","date":"2013-09-03T20:24:35.683Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: so, these separate context scripts, do they run in parallel?","date":"2013-09-03T20:25:09.141Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2013-09-03T20:25:14.074Z","type":"message"}
{"nick":"isaacs","message":"ie, concurrently","date":"2013-09-03T20:25:17.011Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, you mean in different threads? no","date":"2013-09-03T20:25:32.835Z","type":"message"}
{"nick":"bnoordhuis","message":"they share the same event loop and everything runs in the same thread, i.e. sequentially","date":"2013-09-03T20:25:52.897Z","type":"message"}
{"nick":"isaacs","message":"i see.","date":"2013-09-03T20:25:56.482Z","type":"message"}
{"nick":"isaacs","message":"but if they both do setTimeout, that gets interleaved?","date":"2013-09-03T20:26:03.670Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2013-09-03T20:26:07.625Z","type":"message"}
{"nick":"isaacs","message":"ok, that's what i thought, but i was just trying to kinda play around with how that would work","date":"2013-09-03T20:26:19.020Z","type":"message"}
{"nick":"isaacs","message":"i think that's best.","date":"2013-09-03T20:26:41.640Z","type":"message"}
{"nick":"isaacs","message":"i'd like to not invite any coro-type stuff in this.  if you want concurrency, use child processes.","date":"2013-09-03T20:27:09.520Z","type":"message"}
{"nick":"bnoordhuis","message":"how would you implement that anyway?","date":"2013-09-03T20:27:40.143Z","type":"message"}
{"nick":"isaacs","message":"yah i don't even know","date":"2013-09-03T20:27:56.809Z","type":"message"}
{"nick":"isaacs","message":"at least, not in a way that's safe and non-brain-inverting","date":"2013-09-03T20:28:06.497Z","type":"message"}
{"nick":"isaacs","message":"people get excited by concurrency and tend to think it'll solve all their problems for them","date":"2013-09-03T20:28:31.708Z","type":"message"}
{"nick":"isaacs","message":"in my experience, it's usually a hazardous approach","date":"2013-09-03T20:28:44.850Z","type":"message"}
{"nick":"isaacs","message":"maybe i'm just not smart enough to write threaded programs well","date":"2013-09-03T20:29:02.920Z","type":"message"}
{"nick":"bnoordhuis","message":"threads get to be a headache first","date":"2013-09-03T20:29:39.310Z","type":"message"}
{"nick":"bnoordhuis","message":"as soon as there's more than one lock or semaphore involved, you know you're in for a rough time","date":"2013-09-03T20:29:55.342Z","type":"message"}
{"nick":"isaacs","message":"yep","date":"2013-09-03T20:29:58.329Z","type":"message"}
{"nick":"isaacs","message":"i like processes because then the OS handles all that junk for you","date":"2013-09-03T20:30:07.608Z","type":"message"}
{"nick":"isaacs","message":"nice crisp separation","date":"2013-09-03T20:30:14.988Z","type":"message"}
{"nick":"bnoordhuis","message":"er, s/first/fast/ - i guess the context made that clear","date":"2013-09-03T20:30:15.723Z","type":"message"}
{"nick":"isaacs","message":"i figured that your data just got corrupted by multiple threads :)","date":"2013-09-03T20:30:28.516Z","type":"message"}
{"nick":"isaacs","message":"the human brain is one of the greatest examples of why concurrent computation is so hazardous","date":"2013-09-03T20:30:49.098Z","type":"message"}
{"nick":"isaacs","message":"we're a mess.","date":"2013-09-03T20:30:52.157Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-09-03T20:31:07.303Z","type":"quit"}
{"nick":"isaacs","message":"anyway... so.  let's say we do this:","date":"2013-09-03T20:31:17.618Z","type":"message"}
{"nick":"isaacs","message":"var result = vm.runInNewEnvironment('\"foo\"', 'filename', { securityToken: 'deadbeef' })","date":"2013-09-03T20:31:46.448Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: what happens if i try to do console.log(result)","date":"2013-09-03T20:32:03.537Z","type":"message"}
{"nick":"bnoordhuis","message":"depends on what runInNewEnvironment() returns","date":"2013-09-03T20:33:27.341Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-09-03T20:33:28.460Z","type":"quit"}
{"nick":"bnoordhuis","message":"a v8::Context is not a value you can return directly to js land","date":"2013-09-03T20:33:52.563Z","type":"message"}
{"nick":"bnoordhuis","message":"you could make it some kind of proxy that mutates the global object of the context or whatever","date":"2013-09-03T20:34:20.834Z","type":"message"}
{"nick":"isaacs","message":"ok.  right.","date":"2013-09-03T20:34:45.486Z","type":"message"}
{"nick":"isaacs","message":"i'd espect that result is the completion value of the script, just ilke vm.runInContext","date":"2013-09-03T20:35:05.420Z","type":"message"}
{"nick":"bnoordhuis","message":"sure, that works","date":"2013-09-03T20:35:49.846Z","type":"message"}
{"nick":"bnoordhuis","message":"or rather, i can make that work","date":"2013-09-03T20:36:07.112Z","type":"message"}
{"nick":"isaacs","message":"so, another aproach would be to make this a flag we pass to vm.runInContext","date":"2013-09-03T20:36:14.844Z","type":"message"}
{"nick":"isaacs","message":"vm.runInContext(src, file, vm.createContext({some:'stuff'}, securityToken), { nodeEnvironment: true })","date":"2013-09-03T20:36:54.093Z","type":"message"}
{"nick":"isaacs","message":"i mean, the stuff that you did in multi-context is not necessarily tied to securityToken, really, right?  it's more about enabling a *node* environment in a separate context.","date":"2013-09-03T20:37:46.024Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2013-09-03T20:37:51.397Z","type":"message"}
{"nick":"bnoordhuis","message":"the security token thing is just icing on the cake","date":"2013-09-03T20:38:01.316Z","type":"message"}
{"nick":"isaacs","message":"so, what if we put security tokens and/or security callbacks into vm.createContext","date":"2013-09-03T20:38:55.302Z","type":"message"}
{"nick":"isaacs","message":"where the default is to use the security token of the current context.","date":"2013-09-03T20:39:08.892Z","type":"message"}
{"nick":"isaacs","message":"var ctx = vm.createContext({some:'stuff'}, {nodeEnvironment: true, securityToken: 'deadbeef', securityCallback: shouldAllow})","date":"2013-09-03T20:40:06.171Z","type":"message"}
{"nick":"isaacs","message":"so that's kinda like the contextify stuff we have now, except, if it's a different security token, then you cna't actually see the changes?","date":"2013-09-03T20:40:30.246Z","type":"message"}
{"nick":"isaacs","message":"hmm....","date":"2013-09-03T20:40:33.251Z","type":"message"}
{"nick":"kazupon","date":"2013-09-03T20:43:26.947Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-09-03T20:44:18.072Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-09-03T20:44:26.567Z","type":"join"}
{"nick":"st_luke","date":"2013-09-03T20:47:27.839Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 248 seconds","date":"2013-09-03T20:48:05.751Z","type":"quit"}
{"nick":"sblom","reason":"Ping timeout: 248 seconds","date":"2013-09-03T21:17:25.712Z","type":"quit"}
{"nick":"AvianFlu_","new_nick":"AvianFlu","date":"2013-09-03T21:26:09.023Z","type":"nick"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-03T21:41:27.534Z","type":"quit"}
{"nick":"kazupon","date":"2013-09-03T21:44:18.443Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-09-03T21:47:15.449Z","type":"quit"}
{"nick":"sblom","date":"2013-09-03T21:47:15.771Z","type":"join"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-09-03T21:47:59.050Z","type":"quit"}
{"nick":"rendar","reason":"Quit: Leaving","date":"2013-09-03T21:48:07.090Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-09-03T21:49:18.305Z","type":"quit"}
{"nick":"EhevuTov","date":"2013-09-03T21:50:35.341Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: i'm not familiar with the internals of C++ classes, but in req_wrap there's a line that T req_; must be last, but then there're some private members declared underneath.","date":"2013-09-03T21:52:56.301Z","type":"message"}
{"nick":"trevnorris","message":"so i'll assume those don't count as coming after the \"last\"","date":"2013-09-03T21:53:07.619Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2013-09-03T21:54:23.988Z","type":"quit"}
{"nick":"kenperkins","date":"2013-09-03T21:55:13.253Z","type":"join"}
{"nick":"tooxie","date":"2013-09-03T22:00:51.133Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-09-03T22:07:51.594Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-03T22:11:32.232Z","type":"quit"}
{"nick":"hz","date":"2013-09-03T22:37:24.959Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-09-03T22:41:34.129Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-09-03T22:42:49.999Z","type":"quit"}
{"nick":"trevnorris","message":"anyone know how to get the ConnectWrap* out of the uv_stream_t* handle in TCPWrap?","date":"2013-09-03T22:43:20.318Z","type":"message"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-09-03T22:43:43.815Z","type":"quit"}
{"nick":"kenperkins","date":"2013-09-03T22:44:07.738Z","type":"join"}
{"nick":"trevnorris","message":"or basically, is the uv_connect_t* somehow attached to the uv_stream_t*? I can't find it","date":"2013-09-03T22:44:17.900Z","type":"message"}
{"nick":"kazupon","date":"2013-09-03T22:44:50.338Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: it's not really stored on the tcpwrap, it's kinda ephemeral","date":"2013-09-03T22:49:02.891Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2013-09-03T22:49:10.160Z","type":"quit"}
{"nick":"jmar777","date":"2013-09-03T22:52:33.459Z","type":"join"}
{"nick":"tooxie","reason":"Ping timeout: 245 seconds","date":"2013-09-03T22:54:10.152Z","type":"quit"}
{"nick":"trevnorris","message":"<insert expletive here>","date":"2013-09-03T22:54:20.658Z","type":"message"}
{"nick":"trevnorris","message":"come on. it's taking forever to track down all the ways we queue up async requests","date":"2013-09-03T22:55:02.299Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: it could be changed","date":"2013-09-03T22:56:15.875Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: yeah. i'm just trying to figure out how.","date":"2013-09-03T22:58:04.675Z","type":"message"}
{"nick":"trevnorris","message":"I mean. for example. if you simply create a server, it doesn't count as an async request, until you run .listen()","date":"2013-09-03T22:58:33.717Z","type":"message"}
{"nick":"trevnorris","message":"but then if  you've passed a default connection listener, then it should fire for that, but also for a listening callback if you've passed that","date":"2013-09-03T22:58:59.220Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: have any words of wisdom here?","date":"2013-09-03T22:59:31.190Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: ping","date":"2013-09-03T22:59:49.450Z","type":"message"}
{"nick":"trevnorris","message":"creationix: or you ping too","date":"2013-09-03T23:00:02.236Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-09-03T23:00:38.546Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-09-03T23:00:50.312Z","type":"quit"}
{"nick":"creationix","message":"trevnorris, my basic rule of thumb has been around which libuv functions expect callbacks","date":"2013-09-03T23:00:54.869Z","type":"message"}
{"nick":"creationix","message":"whoever called those is the responsible party","date":"2013-09-03T23:01:05.574Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: have 30 sec?","date":"2013-09-03T23:01:58.174Z","type":"message"}
{"nick":"trevnorris","message":"creationix: sorry, not following how that applies to tracking all queued asynchronous requests. e.g. adding a listener to an event is a callback that can technically throw asynchronously, so it will need to also fire the async listener","date":"2013-09-03T23:02:47.630Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-03T23:03:13.909Z","type":"nick"}
{"nick":"creationix","message":"trevnorris, right, it doesn't make sense as the js level.  ","date":"2013-09-03T23:03:15.063Z","type":"message"}
{"nick":"creationix","message":"there can be zero JS listeners at the time the C callback is setup, there can be one, but it changes later, etc","date":"2013-09-03T23:03:48.331Z","type":"message"}
{"nick":"trevnorris","message":"what exactly would be a js listener?","date":"2013-09-03T23:04:42.914Z","type":"message"}
{"nick":"creationix","message":"I mean like the js function passed to EE.on","date":"2013-09-03T23:04:58.820Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-03T23:05:09.454Z","type":"nick"}
{"nick":"creationix","message":"but lower down there is a C callback that libuv calls","date":"2013-09-03T23:05:15.030Z","type":"message"}
{"nick":"creationix","message":"somewhere in between is where the asyncListener hook needs to go","date":"2013-09-03T23:05:25.588Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 276 seconds","date":"2013-09-03T23:05:33.502Z","type":"quit"}
{"nick":"trevnorris","message":"yeah, that fires a callback, that may fire the event emitter","date":"2013-09-03T23:05:36.306Z","type":"message"}
{"nick":"creationix","message":"where is this code in node?","date":"2013-09-03T23:06:01.549Z","type":"message"}
{"nick":"creationix","message":"I know how my various libuv bindings work, but not node itself :/","date":"2013-09-03T23:06:15.105Z","type":"message"}
{"nick":"trevnorris","message":"ok. so a TCPWrap creates an object. attached to that object is .onconnection, this callback is called from MakeCallback, and MakeCallback is called from a native method passed to libuv","date":"2013-09-03T23:07:14.027Z","type":"message"}
{"nick":"trevnorris","message":"when a connection is received","date":"2013-09-03T23:07:22.654Z","type":"message"}
{"nick":"inolen","date":"2013-09-03T23:07:35.830Z","type":"join"}
{"nick":"trevnorris","message":"but from .onconnection you can fire any number of different event emitters, each with their own set of before/after callbacks","date":"2013-09-03T23:08:00.946Z","type":"message"}
{"nick":"trevnorris","message":"that are not directly related to the onconnection callback called","date":"2013-09-03T23:08:10.562Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I think you've stumbled on why domain.add() exists","date":"2013-09-03T23:08:35.978Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: i'm not too worried about the js side. it's figuring out how to capture all of the async requests from the native side that's bothering me.","date":"2013-09-03T23:09:14.924Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-03T23:09:35.648Z","type":"quit"}
{"nick":"othiym23","message":"it's difficult without some form of signaling to say whether an EE wants its own context or to be opted into another event source's context","date":"2013-09-03T23:09:38.894Z","type":"message"}
{"nick":"trevnorris","message":"because you have ReqWrap, which is easy as it's only instantiated once it's needed.","date":"2013-09-03T23:09:51.777Z","type":"message"}
{"nick":"othiym23","message":"right","date":"2013-09-03T23:10:09.809Z","type":"message"}
{"nick":"trevnorris","message":"but then more difficult ones like HandleWrap which immediately aren't technically async requests, up until they're told to be an async request","date":"2013-09-03T23:10:15.699Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-03T23:10:30.529Z","type":"quit"}
{"nick":"trevnorris","message":"e.g. net server called w/ .listen","date":"2013-09-03T23:10:43.139Z","type":"message"}
{"nick":"othiym23","message":"I think my approach was pretty similar to creationix's -- deal with stuff that touches MakeCallback, and then handle the other incidences on a piecemeal basis","date":"2013-09-03T23:10:57.584Z","type":"message"}
{"nick":"othiym23","message":"yeah","date":"2013-09-03T23:11:08.194Z","type":"message"}
{"nick":"othiym23","message":"it seems like you want a context that pre-exists .listen, but you wouldn't want the onAsync handler to fire until .listen is called","date":"2013-09-03T23:11:29.399Z","type":"message"}
{"nick":"trevnorris","message":"technically I don't care. you're the ones consuming this ;)","date":"2013-09-03T23:11:56.181Z","type":"message"}
{"nick":"trevnorris","message":"i'm just implementing it because I have the time, and I'm mostly concerned about impact on performance.","date":"2013-09-03T23:12:10.820Z","type":"message"}
{"nick":"trevnorris","message":"but that being said, I like to do things fully, and it doesn't sit well with me that we don't allow the capture of any async request being fired through libuv","date":"2013-09-03T23:12:42.050Z","type":"message"}
{"nick":"trevnorris","message":"so imo it should fire, passing the object instance, when an object that _could_ become an async request is instantiated","date":"2013-09-03T23:13:03.139Z","type":"message"}
{"nick":"creationix","message":"wait, so .onconnection fires more than just connection events?","date":"2013-09-03T23:13:08.224Z","type":"message"}
{"nick":"creationix","message":"btw, did you see how I monkey-patched these from the outside?","date":"2013-09-03T23:13:25.973Z","type":"message"}
{"nick":"trevnorris","message":"it's hypothetical, you could. I mean, you're running other people's code. and other people's code can do all sorts of stupid stuff","date":"2013-09-03T23:13:53.766Z","type":"message"}
{"nick":"trevnorris","message":"and no, I haven't","date":"2013-09-03T23:13:56.628Z","type":"message"}
{"nick":"creationix","message":"I couldn't reach the good stuff, but this works mostly https://github.com/othiym23/async-listener/blob/master/index.js#L14-L24","date":"2013-09-03T23:14:05.829Z","type":"message"}
{"nick":"creationix","message":"when the user calls listen, I insert a connection listener at the top of the list that monkey-patches the lower-level .onconnection","date":"2013-09-03T23:14:54.621Z","type":"message"}
{"nick":"creationix","message":"and when a connection event happens inside that, I monkey-patch the .onread function","date":"2013-09-03T23:15:09.877Z","type":"message"}
{"nick":"trevnorris","message":"yeah. this is going to be as low as it goes. I have all the performance measures in place so it won't affect core performance if it's not used, and has minimal impact beyond calling the async/before/after callbacks.","date":"2013-09-03T23:15:10.804Z","type":"message"}
{"nick":"trevnorris","message":"explain your case to me better, I'm creating this so you can capture anything that goes on.","date":"2013-09-03T23:16:07.372Z","type":"message"}
{"nick":"trevnorris","message":"beyond the logic flow of what node core does","date":"2013-09-03T23:16:24.088Z","type":"message"}
{"nick":"othiym23","message":"the original use case was to support the setting of values that persist through the entire call chain of e.g. a request, in such a way that each request doesn't overwrite the values of any other request","date":"2013-09-03T23:17:39.460Z","type":"message"}
{"nick":"sblom","reason":"Ping timeout: 248 seconds","date":"2013-09-03T23:17:57.767Z","type":"quit"}
{"nick":"othiym23","message":"this includes any forking of control flow within the request, e.g. using things like async.queue to handle bits of work concurrently","date":"2013-09-03T23:18:17.639Z","type":"message"}
{"nick":"creationix","message":"so the way I understand the event loop from a JS perspective is that each event starts a new call stack that originates from somewhere inside node's C++ code","date":"2013-09-03T23:18:31.188Z","type":"message"}
{"nick":"othiym23","message":"so if you change a value in one async.queue callback it doesn't stomp on that value in the other callbacks","date":"2013-09-03T23:18:41.372Z","type":"message"}
{"nick":"creationix","message":"We need a hook to do things before and after this call stack with context from the previous call stack that made this one possible","date":"2013-09-03T23:18:55.914Z","type":"message"}
{"nick":"trevnorris","message":"creationix: yes, it all originates from C++, and the call stack you speak of is basically the nextTick queue","date":"2013-09-03T23:19:09.379Z","type":"message"}
{"nick":"trevnorris","message":"creationix: once that queue is expired (or an error is thrown) it will continue to the next event in the event loop","date":"2013-09-03T23:19:30.433Z","type":"message"}
{"nick":"creationix","message":"right, it's the parent-child relationship between stacks/events that gets tricky","date":"2013-09-03T23:20:16.115Z","type":"message"}
{"nick":"trevnorris","message":"well, events are emitted immediately. so technically there's no loss in the stack trace. only reason for those is for error capturing","date":"2013-09-03T23:20:26.809Z","type":"message"}
{"nick":"creationix","message":"simple cases are things like setTimeout and process.nextTick","date":"2013-09-03T23:20:31.028Z","type":"message"}
{"nick":"creationix","message":"trevnorris, right, personally I don't care about EE at all, but others may disagree","date":"2013-09-03T23:20:49.277Z","type":"message"}
{"nick":"creationix","message":"EE is all user-space sugar to me","date":"2013-09-03T23:21:00.100Z","type":"message"}
{"nick":"trevnorris","message":"well, since this also allows for custom error handling (another requirement) it'll need to work w/ the event emitter","date":"2013-09-03T23:21:20.139Z","type":"message"}
{"nick":"creationix","message":"not really, EE by default throws the \"error\" event if there is no listener","date":"2013-09-03T23:21:48.731Z","type":"message"}
{"nick":"creationix","message":"so the native error handling will still see it","date":"2013-09-03T23:21:54.702Z","type":"message"}
{"nick":"othiym23","message":"I think (correct me if I'm wrong, Tim) creationix means \"event\" more generally than \"things emitted on EEs\"","date":"2013-09-03T23:21:57.982Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok","date":"2013-09-03T23:22:06.147Z","type":"message"}
{"nick":"trevnorris","message":"yeah. I mean EventEmitter#emit","date":"2013-09-03T23:22:12.627Z","type":"message"}
{"nick":"creationix","message":"sorry, I mean things like uv_timer_cb","date":"2013-09-03T23:22:57.206Z","type":"message"}
{"nick":"creationix","message":"basically all the C callbacks in libuv","date":"2013-09-03T23:23:04.590Z","type":"message"}
{"nick":"trevnorris","message":"heh, so you're talking way deep down.","date":"2013-09-03T23:23:07.751Z","type":"message"}
{"nick":"creationix","message":"those are my \"event sources\"","date":"2013-09-03T23:23:10.877Z","type":"message"}
{"nick":"creationix","message":"they all eventually surface to JS somewhere","date":"2013-09-03T23:23:16.528Z","type":"message"}
{"nick":"creationix","message":"and start new stacks","date":"2013-09-03T23:23:18.702Z","type":"message"}
{"nick":"trevnorris","message":"yes","date":"2013-09-03T23:23:27.123Z","type":"message"}
{"nick":"trevnorris","message":"and that is first what i'm trying to get at.","date":"2013-09-03T23:23:34.129Z","type":"message"}
{"nick":"creationix","message":"so to me it's simple.  Whoever calls the libuv function that accepts the C callback is the parent stack","date":"2013-09-03T23:23:53.895Z","type":"message"}
{"nick":"creationix","message":"so in the case of streams emitting connection events, it's the call to listen that is the parent","date":"2013-09-03T23:24:23.121Z","type":"message"}
{"nick":"creationix","message":"now I understand that domains currently have slightly different semantics and I'm not sure what's best there","date":"2013-09-03T23:24:56.622Z","type":"message"}
{"nick":"trevnorris","message":"there are two main needs. error handling and stack tracing (going to include the cls stuff there)","date":"2013-09-03T23:25:44.689Z","type":"message"}
{"nick":"othiym23","message":"I like simple, general, basic solutions","date":"2013-09-03T23:25:44.953Z","type":"message"}
{"nick":"trevnorris","message":"error handling needs to be done at every callback","date":"2013-09-03T23:25:55.984Z","type":"message"}
{"nick":"trevnorris","message":"seems the cls stuff only needs to happen at every event \"origin\" ?","date":"2013-09-03T23:26:10.085Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: is there a reason why addAsyncListener and _fatalException can't be joined together in some way?","date":"2013-09-03T23:26:25.638Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I find it helpful to think of things in terms of long stacktraces -- ultimately you want to be able to trace consequences back to their ultimate origins","date":"2013-09-03T23:27:23.014Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: they will be, but since each returned object can have it's own error handler, and we will support running the error through multiple handlers, it's slightly compicated.","date":"2013-09-03T23:27:34.820Z","type":"message"}
{"nick":"creationix","message":"trevnorris, right, whenever someone calls a node API that eventually ends up calling something like uv_listen, I want the asyncListener setup hook called","date":"2013-09-03T23:27:46.262Z","type":"message"}
{"nick":"othiym23","message":"I understand","date":"2013-09-03T23:27:47.869Z","type":"message"}
{"nick":"creationix","message":"and then when uv_connection_cb is called for that handle and eventually reaches js, I want the before, error, and after hooks processed","date":"2013-09-03T23:28:43.136Z","type":"message"}
{"nick":"creationix","message":"now the tricky part is not everything in libuv has unique uv_req_t structs","date":"2013-09-03T23:29:11.554Z","type":"message"}
{"nick":"othiym23","message":"oh yeah: trevnorris, when do you envision the done() hook will be called?","date":"2013-09-03T23:29:12.562Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: i might have been a little over zealous with that API, but the idea is it'll recognize when no more async requests could be made (e.g. server is shut down, and there are no more open connections)","date":"2013-09-03T23:30:15.960Z","type":"message"}
{"nick":"creationix","message":"oh, then I got it wrong in my polyfill","date":"2013-09-03T23:30:36.259Z","type":"message"}
{"nick":"creationix","message":"I did it as a second pass on the after hook","date":"2013-09-03T23:30:49.158Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: that would be totally awesome if you were able to make it work, but that sounds like total fucking magic to me ;)","date":"2013-09-03T23:31:02.666Z","type":"message"}
{"nick":"othiym23","message":"creationix: yeah, I left it because I didn't know what it should do","date":"2013-09-03T23:31:20.592Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: heh, yeah. the plan from the beginning was to make an API that never requires another API request for this stuff again.","date":"2013-09-03T23:31:33.631Z","type":"message"}
{"nick":"othiym23","message":"having it be an async listener finalizer seemed not completely implausible","date":"2013-09-03T23:31:34.333Z","type":"message"}
{"nick":"trevnorris","message":"i mean completely encompassing.","date":"2013-09-03T23:31:45.906Z","type":"message"}
{"nick":"othiym23","message":"THAT'LL SHOW ME","date":"2013-09-03T23:31:56.074Z","type":"message"}
{"nick":"LOUDBOT","message":"ACHIEVEMENT UNLOCKED: GRASSY KNOLL","date":"2013-09-03T23:31:56.506Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-09-03T23:32:04.335Z","type":"message"}
{"nick":"trevnorris","message":"well, you want some magic. i'll give you some magic. and this is all i'm working on right now (besides prepping my slides for nodeconf :)","date":"2013-09-03T23:33:03.265Z","type":"message"}
{"nick":"othiym23","message":"my regret at not being able to go to Ireland grows by the day","date":"2013-09-03T23:34:19.912Z","type":"message"}
{"nick":"trevnorris","message":":(","date":"2013-09-03T23:34:52.879Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-09-03T23:35:54.206Z","type":"quit"}
{"nick":"othiym23","message":"well, on the flip side, I'm going to be able to ship soon, and that will feel very very good","date":"2013-09-03T23:36:52.054Z","type":"message"}
{"nick":"creationix","message":"trevnorris, is there a map of all the event sources in node?","date":"2013-09-03T23:37:06.213Z","type":"message"}
{"nick":"creationix","message":"along with what triggers them (their parents)","date":"2013-09-03T23:37:14.692Z","type":"message"}
{"nick":"mikeal","date":"2013-09-03T23:37:37.203Z","type":"join"}
{"nick":"c4milo","date":"2013-09-03T23:37:56.773Z","type":"join"}
{"nick":"creationix","message":"I guess for the libuv bits you can just search for all the _cb references in uv.h","date":"2013-09-03T23:38:20.526Z","type":"message"}
{"nick":"trevnorris","message":"creationix: not really. everything I know has been from looking at source","date":"2013-09-03T23:38:20.733Z","type":"message"}
{"nick":"othiym23","message":"the map is the territory, zudes","date":"2013-09-03T23:38:30.406Z","type":"message"}
{"nick":"creationix","message":"but libuv isn't all of node, there is asyc in the zlib bindings and the openssl bindings","date":"2013-09-03T23:38:42.986Z","type":"message"}
{"nick":"othiym23","message":"creationix: I just grepped for MakeCallback and ReqWrap","date":"2013-09-03T23:39:16.503Z","type":"message"}
{"nick":"trevnorris","message":"but ReqWrap isn't everything","date":"2013-09-03T23:39:27.644Z","type":"message"}
{"nick":"trevnorris","message":"HandleWrap will create an object that you tie callbacks to from js (e.g. TCPWrap) that'll be called later","date":"2013-09-03T23:39:50.272Z","type":"message"}
{"nick":"creationix","message":"right, libuv has uv_handle_t and uv_req_t ","date":"2013-09-03T23:40:19.516Z","type":"message"}
{"nick":"trevnorris","message":"ok, can anyone explain to me what queue.h does?","date":"2013-09-03T23:41:08.179Z","type":"message"}
{"nick":"creationix","message":"trevnorris, if I was implementing asyncListener in node I would stay out of C++ as much as possible and put code right before C++ is called and right after it leaves C++ back to JS","date":"2013-09-03T23:43:02.530Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: good question -- nothing in src/ includes it","date":"2013-09-03T23:44:49.101Z","type":"message"}
{"nick":"trevnorris","message":"creationix: what about when a request object is created that you don't have direct access to from JS (e.g. ReqWrap) i'm using those instances to store the async listeners queue to reduce overhead.","date":"2013-09-03T23:44:57.987Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: req_wrap.h","date":"2013-09-03T23:45:18.056Z","type":"message"}
{"nick":"kazupon","date":"2013-09-03T23:45:26.990Z","type":"join"}
{"nick":"othiym23","message":"whoops on wrong branch, sorry","date":"2013-09-03T23:45:32.686Z","type":"message"}
{"nick":"creationix","message":"trevnorris, can you access the js callback that will be called when the event happens?","date":"2013-09-03T23:45:45.338Z","type":"message"}
{"nick":"creationix","message":"maybe instead of wrapping it, you can just attach data to the callback","date":"2013-09-03T23:45:54.038Z","type":"message"}
{"nick":"jmar777","date":"2013-09-03T23:46:56.560Z","type":"join"}
{"nick":"trevnorris","message":"creationix: the callback is well, a function, and storing unique data for each request would require instantiating a new function every time so each can have it's own data.","date":"2013-09-03T23:46:59.318Z","type":"message"}
{"nick":"creationix","message":"so it's a shared function then?","date":"2013-09-03T23:47:12.481Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-09-03T23:47:15.575Z","type":"message"}
{"nick":"creationix","message":"hmm","date":"2013-09-03T23:47:17.542Z","type":"message"}
{"nick":"trevnorris","message":"if it's not then kiss your performance good bye","date":"2013-09-03T23:47:27.645Z","type":"message"}
{"nick":"trevnorris","message":"v8 will reoptimize every function instance you create","date":"2013-09-03T23:47:41.053Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: looks ike Node just borrowed a queue abstract data type from nginx, looking at the history","date":"2013-09-03T23:47:47.782Z","type":"message"}
{"nick":"creationix","message":"ok, so the function is shared, but the object it's attached to is unique right?","date":"2013-09-03T23:48:28.240Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: yeah. seems to be a queue for processing all the requests?","date":"2013-09-03T23:48:54.441Z","type":"message"}
{"nick":"creationix","message":"for .onconnection add a new data property .onconnectionData or something like that","date":"2013-09-03T23:48:54.657Z","type":"message"}
{"nick":"trevnorris","message":"creationix: you mean on the same object that .onconnection is connected to?","date":"2013-09-03T23:49:34.117Z","type":"message"}
{"nick":"creationix","message":"trevnorris, right","date":"2013-09-03T23:49:39.569Z","type":"message"}
{"nick":"creationix","message":"just need something that server.listen can write to and .onconnection can read from","date":"2013-09-03T23:50:17.530Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 256 seconds","date":"2013-09-03T23:50:23.919Z","type":"quit"}
{"nick":"creationix","message":"that is unique for that uv_stream_t instance","date":"2013-09-03T23:50:28.601Z","type":"message"}
{"nick":"creationix","message":"it's a crying shame V8 isn't better about optimizing closures.  They really aren't that different than functions that use \"this\"","date":"2013-09-03T23:51:29.569Z","type":"message"}
{"nick":"creationix","message":"they just pull from a different scope","date":"2013-09-03T23:51:34.587Z","type":"message"}
{"nick":"dshaw_","date":"2013-09-03T23:52:06.738Z","type":"join"}
{"nick":"othiym23","message":"creationix: mraleph does a pretty good job of laying out why it's not that simple on his blog","date":"2013-09-03T23:52:08.198Z","type":"message"}
{"nick":"creationix","message":"I know, but wasn't it because of some obscure js features, not closures themselves","date":"2013-09-03T23:52:42.625Z","type":"message"}
{"nick":"creationix","message":"other runtimes have optimized them","date":"2013-09-03T23:52:47.509Z","type":"message"}
{"nick":"trevnorris","message":"oh, heh, this is great. queue.h is used for every asynchronous request. tls included. that makes my life a lot easier","date":"2013-09-03T23:52:56.965Z","type":"message"}
{"nick":"creationix","message":"trevnorris, awesome","date":"2013-09-03T23:53:06.572Z","type":"message"}
{"nick":"trevnorris","message":"creationix: reason I want to do it at the C++ level is because I can set class flags that will tell MakeCallback whether it needs to call an extra set of functions. If I don't then I'd have to use ->Has() or some such, which is just sucky slow","date":"2013-09-03T23:54:09.057Z","type":"message"}
{"nick":"creationix","message":"I see","date":"2013-09-03T23:54:30.071Z","type":"message"}
{"nick":"creationix","message":"good luck then","date":"2013-09-03T23:54:34.355Z","type":"message"}
{"nick":"trevnorris","message":"where as I can just do if (inst->async_flags() & ASYNC_LISTENERS)","date":"2013-09-03T23:54:35.250Z","type":"message"}
{"nick":"creationix","message":"the C++ side of node scares me","date":"2013-09-03T23:54:40.300Z","type":"message"}
{"nick":"trevnorris","message":"hehe","date":"2013-09-03T23:54:47.427Z","type":"message"}
{"nick":"othiym23","message":"it's what makes trevnorris feel alive","date":"2013-09-03T23:54:58.190Z","type":"message"}
{"nick":"trevnorris","message":"wait until you see my nodeconf slides on all the crap I pull to make it fast ;)","date":"2013-09-03T23:55:18.119Z","type":"message"}
{"nick":"trevnorris","message":"honestly, i'm surprised anyone can understand what's going that hasn't been in core for a while.","date":"2013-09-03T23:56:10.338Z","type":"message"}
{"nick":"kazupon","date":"2013-09-03T23:57:19.416Z","type":"join"}
{"nick":"othiym23","message":"trevnorris: it's taken some grit","date":"2013-09-03T23:57:38.162Z","type":"message"}
{"nick":"othiym23","message":"but I'm getting there","date":"2013-09-03T23:57:41.482Z","type":"message"}
{"nick":"trevnorris","message":"once all my slides are done it should explain all the state sharing techniques i'm using to quickly communicate between C++ and JS","date":"2013-09-03T23:58:11.359Z","type":"message"}
{"nick":"trevnorris","message":"that should help it make mores sense","date":"2013-09-03T23:58:19.092Z","type":"message"}
