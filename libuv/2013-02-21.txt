{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-02-21T00:00:00.970Z","type":"quit"}
{"nick":"ircretary","date":"2013-02-21T00:00:08.568Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: i was wondering that. ripped it out and all tests pass.","date":"2013-02-21T00:00:22.451Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 252 seconds","date":"2013-02-21T00:01:03.182Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-02-21T00:05:33.266Z","type":"join"}
{"nick":"perezd","date":"2013-02-21T00:18:02.520Z","type":"join"}
{"nick":"Raynos","message":"https://gist.github.com/Raynos/5000773 <- Is that behaviour a bug?","date":"2013-02-21T00:18:52.140Z","type":"message"}
{"nick":"TooTallNate","message":" /cc isaacs ^","date":"2013-02-21T00:20:24.869Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: fwiw, it seems like the net tests go slightly faster with it as a hidden property","date":"2013-02-21T00:20:54.315Z","type":"message"}
{"nick":"isaacs","message":"not sure why that is","date":"2013-02-21T00:20:59.324Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: really? i wouldn't have expected that.","date":"2013-02-21T00:23:30.868Z","type":"message"}
{"nick":"Raynos","message":"I think changing `needReadable` boolean to `readableBytesNeeded` number would allow push() to know whether we pushed over the number of bytes needed and can return false. This also allows us to remember that a large read(n) was made and that we need more bytes then the high water mark","date":"2013-02-21T00:24:36.216Z","type":"message"}
{"nick":"Raynos","message":"I guess I should make a PR against node, not readable-stream","date":"2013-02-21T00:31:51.105Z","type":"message"}
{"nick":"TooTallNate","message":"Raynos: yes indeed, readable-stream is just going to be backwards-compat for v0.8.x from now on","date":"2013-02-21T00:32:33.576Z","type":"message"}
{"nick":"TooTallNate","message":"and just pulling changes from node-core that is","date":"2013-02-21T00:32:40.387Z","type":"message"}
{"nick":"Raynos","message":"im gonna PR this against readable-stream for now and ill backport to core later","date":"2013-02-21T00:32:47.833Z","type":"message"}
{"nick":"Raynos","message":"I need to ship the bug fixes today :D","date":"2013-02-21T00:32:52.918Z","type":"message"}
{"nick":"TooTallNate","message":"Raynos: you mean you don't exclusively use v0.9.x yet? :p","date":"2013-02-21T00:34:17.233Z","type":"message"}
{"nick":"Raynos","message":"I mean I prefer to bugfix npm modules then node core","date":"2013-02-21T00:34:34.021Z","type":"message"}
{"nick":"Raynos","message":"easier","date":"2013-02-21T00:34:37.144Z","type":"message"}
{"nick":"Raynos","message":"cause I can just fork and npm i Raynos/readable-stream","date":"2013-02-21T00:34:44.065Z","type":"message"}
{"nick":"TooTallNate","message":"this is true","date":"2013-02-21T00:34:57.873Z","type":"message"}
{"nick":"mikeal","date":"2013-02-21T00:36:40.961Z","type":"join"}
{"nick":"karupanerura","reason":"Excess Flood","date":"2013-02-21T00:39:36.295Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: just ran tcp-raw benchmarks in 5 sets of 25 and the difference in values don't extend past the error band.","date":"2013-02-21T00:40:07.107Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-02-21T00:40:21.608Z","type":"message"}
{"nick":"isaacs","message":"the diff is less than the jitter","date":"2013-02-21T00:40:29.701Z","type":"message"}
{"nick":"karupanerura","date":"2013-02-21T00:42:35.574Z","type":"join"}
{"nick":"perezd","reason":"Quit: perezd","date":"2013-02-21T00:50:54.267Z","type":"quit"}
{"nick":"kazupon","date":"2013-02-21T00:53:12.824Z","type":"join"}
{"nick":"Raynos","message":"isaacs, TooTallNate: consider https://gist.github.com/Raynos/5001063","date":"2013-02-21T00:57:51.867Z","type":"message"}
{"nick":"Raynos","message":"Which I think is the situation this comment mentions ( https://github.com/joyent/node/blob/master/lib/_stream_readable.js#L117 )","date":"2013-02-21T00:58:40.477Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-02-21T01:00:01.760Z","type":"quit"}
{"nick":"trevnorris","reason":"Quit: Leaving","date":"2013-02-21T01:04:11.229Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-21T01:07:07.885Z","type":"quit"}
{"nick":"bradleymeck_","date":"2013-02-21T01:11:04.166Z","type":"join"}
{"nick":"benoitc","date":"2013-02-21T01:14:40.673Z","type":"join"}
{"nick":"bradleymeck","reason":"Ping timeout: 276 seconds","date":"2013-02-21T01:14:48.495Z","type":"quit"}
{"nick":"bradleymeck_","new_nick":"bradleymeck","date":"2013-02-21T01:14:48.715Z","type":"nick"}
{"nick":"Raynos","message":"Ok, turned those into issues ( https://github.com/joyent/node/issues/4815 , https://github.com/joyent/node/issues/4814 )","date":"2013-02-21T01:19:12.063Z","type":"message"}
{"nick":"rvagg","date":"2013-02-21T01:22:45.249Z","type":"join"}
{"nick":"erickt","date":"2013-02-21T01:28:40.410Z","type":"join"}
{"nick":"abraxas","date":"2013-02-21T01:38:44.411Z","type":"join"}
{"nick":"perezd","date":"2013-02-21T02:01:00.651Z","type":"join"}
{"nick":"perezd","reason":"Client Quit","date":"2013-02-21T02:01:19.707Z","type":"quit"}
{"nick":"kazupon","date":"2013-02-21T02:10:29.227Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 244 seconds","date":"2013-02-21T02:15:03.127Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-21T02:17:42.877Z","type":"quit"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-02-21T02:25:03.947Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-02-21T02:41:34.063Z","type":"quit"}
{"nick":"pooya","reason":"Quit: pooya","date":"2013-02-21T02:43:11.059Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-21T02:43:17.884Z","type":"quit"}
{"nick":"AvianFlu_","date":"2013-02-21T02:47:35.570Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 248 seconds","date":"2013-02-21T02:48:01.112Z","type":"quit"}
{"nick":"AvianFlu_","new_nick":"AvianFlu","date":"2013-02-21T02:48:06.850Z","type":"nick"}
{"nick":"benoitc","date":"2013-02-21T02:48:10.317Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-02-21T03:09:38.496Z","type":"quit"}
{"nick":"abraxas_","date":"2013-02-21T03:15:30.578Z","type":"join"}
{"nick":"abraxas","reason":"Read error: No route to host","date":"2013-02-21T03:15:43.940Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-21T03:43:42.473Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-21T03:51:10.448Z","type":"join"}
{"nick":"kazupon","date":"2013-02-21T03:52:56.321Z","type":"join"}
{"nick":"Raynos","reason":"Ping timeout: 248 seconds","date":"2013-02-21T04:05:21.125Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-02-21T04:06:18.215Z","type":"quit"}
{"nick":"abraxas_","reason":"Read error: No route to host","date":"2013-02-21T04:09:20.821Z","type":"quit"}
{"nick":"abraxas","date":"2013-02-21T04:09:41.163Z","type":"join"}
{"nick":"trevnorris","date":"2013-02-21T04:33:04.971Z","type":"join"}
{"nick":"Raynos","date":"2013-02-21T04:37:00.947Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-21T04:39:11.247Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-21T04:46:41.005Z","type":"join"}
{"nick":"trevnorris","message":"can someone help me understand the \"now\" test in test-debugger-repl?","date":"2013-02-21T04:50:35.889Z","type":"message"}
{"nick":"pooya","date":"2013-02-21T04:54:06.311Z","type":"join"}
{"nick":"pooya","reason":"Client Quit","date":"2013-02-21T04:55:23.770Z","type":"quit"}
{"nick":"trevnorris","message":"nm, figured out how it works.","date":"2013-02-21T04:59:02.648Z","type":"message"}
{"nick":"pooya","date":"2013-02-21T05:02:43.687Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-21T05:23:34.449Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-21T05:27:25.836Z","type":"join"}
{"nick":"pooya","reason":"Quit: pooya","date":"2013-02-21T06:01:56.538Z","type":"quit"}
{"nick":"csaoh","date":"2013-02-21T06:17:26.032Z","type":"join"}
{"nick":"trevnorris","reason":"Quit: Leaving","date":"2013-02-21T06:21:10.636Z","type":"quit"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-02-21T06:22:32.521Z","type":"quit"}
{"nick":"pooya","date":"2013-02-21T06:32:31.216Z","type":"join"}
{"nick":"TooTallNate","date":"2013-02-21T06:41:03.323Z","type":"join"}
{"nick":"TooTallNate","reason":"Client Quit","date":"2013-02-21T06:41:21.487Z","type":"quit"}
{"nick":"Raynos","message":"how much will break if we changed streams to only treat `null` as EOF and not `undefined` ?","date":"2013-02-21T06:48:17.737Z","type":"message"}
{"nick":"c4milo","date":"2013-02-21T06:54:36.007Z","type":"join"}
{"nick":"trevnorris","date":"2013-02-21T06:55:35.957Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-02-21T07:05:10.592Z","type":"quit"}
{"nick":"erickt","reason":"Quit: erickt","date":"2013-02-21T07:17:25.681Z","type":"quit"}
{"nick":"pooya","reason":"Quit: pooya","date":"2013-02-21T07:19:24.576Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-02-21T07:59:21.024Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-02-21T08:00:50.376Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-21T08:01:59.262Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-02-21T08:03:06.803Z","type":"join"}
{"nick":"rendar","date":"2013-02-21T08:03:29.843Z","type":"join"}
{"nick":"stagas","date":"2013-02-21T08:05:28.836Z","type":"join"}
{"nick":"sgallagh","date":"2013-02-21T08:05:40.502Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-02-21T08:13:49.618Z","type":"quit"}
{"nick":"loladiro","date":"2013-02-21T08:14:24.335Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-02-21T08:15:55.999Z","type":"quit"}
{"nick":"loladiro","date":"2013-02-21T08:26:43.173Z","type":"join"}
{"nick":"csaoh","date":"2013-02-21T08:29:41.815Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 255 seconds","date":"2013-02-21T08:30:38.423Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-02-21T08:35:50.299Z","type":"join"}
{"nick":"kazupon_","date":"2013-02-21T08:40:22.496Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-02-21T08:43:33.311Z","type":"quit"}
{"nick":"`3rdEden","date":"2013-02-21T09:01:41.847Z","type":"join"}
{"nick":"csaoh","message":"i keep getting \"Assertion failed: (loop->watchers[w->fd] == w), function uv__io_stop, file src/unix/core.c, line 648.\", when I try to use uv_poll_stop after i called uv_poll_init and uv_poll_start a couple of times… what could it mean ? I don't use the right parameters in uv_poll_stop ?","date":"2013-02-21T09:07:06.439Z","type":"message"}
{"nick":"saghul","message":"csaoh are you using 2 poll handles for the same fd?","date":"2013-02-21T09:07:59.291Z","type":"message"}
{"nick":"csaoh","message":"not as far as i know, but i'll doublecheck","date":"2013-02-21T09:08:25.653Z","type":"message"}
{"nick":"saghul","message":"that would explain","date":"2013-02-21T09:09:34.107Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-02-21T09:15:32.796Z","type":"join"}
{"nick":"csaoh","message":"weird, doesn't look like it's the case…","date":"2013-02-21T09:16:22.012Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 264 seconds","date":"2013-02-21T09:17:30.177Z","type":"quit"}
{"nick":"saghul","message":"csaoh you only call uv_poll_init one, right?","date":"2013-02-21T09:18:19.358Z","type":"message"}
{"nick":"csaoh","message":"once for each fd","date":"2013-02-21T09:18:29.097Z","type":"message"}
{"nick":"saghul","message":"csaoh what that assert means is that the watcher being stopped for that fd is not the one that was started","date":"2013-02-21T09:20:18.592Z","type":"message"}
{"nick":"saghul","message":"that's why I asked if you use multiple poll handles for a given fd","date":"2013-02-21T09:20:31.066Z","type":"message"}
{"nick":"saghul","message":"I have only seen that assert in such a case","date":"2013-02-21T09:20:42.794Z","type":"message"}
{"nick":"csaoh","message":"alright… will look into it, thanks !","date":"2013-02-21T09:20:50.138Z","type":"message"}
{"nick":"csaoh","message":"maybe i got them messed up on a lower level","date":"2013-02-21T09:22:15.486Z","type":"message"}
{"nick":"kazupon_","reason":"Remote host closed the connection","date":"2013-02-21T09:22:46.883Z","type":"quit"}
{"nick":"MI61","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00021d64c82\u0002 : unix: use uv__set_artificial_error in uv_write2  * Use uv__set_artificial (+2 more commits) - http://git.io/_zTROQ","date":"2013-02-21T09:31:17.566Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-02-21T09:34:31.583Z","type":"quit"}
{"nick":"abraxas","date":"2013-02-21T10:04:23.207Z","type":"join"}
{"nick":"sgallagh","reason":"Remote host closed the connection","date":"2013-02-21T10:37:29.541Z","type":"quit"}
{"nick":"sgallagh","date":"2013-02-21T11:03:20.800Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-02-21T11:07:43.722Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 272 seconds","date":"2013-02-21T11:11:54.844Z","type":"quit"}
{"nick":"hz","date":"2013-02-21T11:18:37.442Z","type":"join"}
{"nick":"trevnorris","reason":"Quit: Leaving","date":"2013-02-21T11:22:09.729Z","type":"quit"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-02-21T11:36:49.560Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-21T11:39:28.670Z","type":"quit"}
{"nick":"csaoh","date":"2013-02-21T11:42:42.015Z","type":"join"}
{"nick":"bsnote","reason":"Ping timeout: 252 seconds","date":"2013-02-21T11:45:44.126Z","type":"quit"}
{"nick":"bsnote","date":"2013-02-21T11:45:58.963Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 272 seconds","date":"2013-02-21T11:49:16.840Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-21T11:49:45.133Z","type":"join"}
{"nick":"brucem","reason":"Quit: ZNC - http://znc.sourceforge.net","date":"2013-02-21T11:51:59.126Z","type":"quit"}
{"nick":"KiNgMaR","reason":"Ping timeout: 264 seconds","date":"2013-02-21T11:53:01.212Z","type":"quit"}
{"nick":"brucem","date":"2013-02-21T11:53:29.209Z","type":"join"}
{"nick":"KiNgMaR","date":"2013-02-21T11:57:09.339Z","type":"join"}
{"nick":"txdv","message":"wohever they find is unlikely to survive","date":"2013-02-21T12:05:35.924Z","type":"message"}
{"nick":"stagas","date":"2013-02-21T12:07:00.195Z","type":"join"}
{"nick":"indutny","message":"?","date":"2013-02-21T12:10:23.926Z","type":"message"}
{"nick":"indutny","message":"morning","date":"2013-02-21T12:10:31.529Z","type":"message"}
{"nick":"txdv","message":"morning","date":"2013-02-21T12:12:02.096Z","type":"message"}
{"nick":"txdv","message":"indutny: is it raining metoers today in russia?","date":"2013-02-21T12:12:38.942Z","type":"message"}
{"nick":"indutny","message":"no, its quite sunny","date":"2013-02-21T12:12:49.138Z","type":"message"}
{"nick":"indutny","message":"in moscow","date":"2013-02-21T12:12:53.194Z","type":"message"}
{"nick":"txdv","message":"it was sunny when that meteor fell down ...","date":"2013-02-21T12:13:06.696Z","type":"message"}
{"nick":"txdv","message":"actually, in what city did it go down","date":"2013-02-21T12:13:25.844Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-02-21T12:18:31.949Z","type":"join"}
{"nick":"indutny","message":"Chelyabinsk","date":"2013-02-21T12:21:49.142Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-02-21T12:23:03.916Z","type":"quit"}
{"nick":"txdv","message":"an entire europe away from lithuania","date":"2013-02-21T12:24:31.552Z","type":"message"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-02-21T12:29:30.300Z","type":"quit"}
{"nick":"hz","date":"2013-02-21T12:29:33.422Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-02-21T12:35:43.453Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-02-21T12:49:26.818Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-21T12:55:47.321Z","type":"quit"}
{"nick":"KiNgMaR","reason":"Ping timeout: 264 seconds","date":"2013-02-21T13:02:36.503Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-21T13:03:45.115Z","type":"join"}
{"nick":"KiNgMaR","date":"2013-02-21T13:07:49.224Z","type":"join"}
{"nick":"indexzero","date":"2013-02-21T13:11:21.253Z","type":"join"}
{"nick":"benoitc","reason":"Ping timeout: 264 seconds","date":"2013-02-21T13:44:30.180Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-21T13:57:46.310Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 260 seconds","date":"2013-02-21T14:05:59.377Z","type":"quit"}
{"nick":"stagas","date":"2013-02-21T14:16:57.247Z","type":"join"}
{"nick":"stagas_","date":"2013-02-21T14:20:17.655Z","type":"join"}
{"nick":"c4milo","date":"2013-02-21T14:21:14.185Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 248 seconds","date":"2013-02-21T14:21:53.111Z","type":"quit"}
{"nick":"stagas_","new_nick":"stagas","date":"2013-02-21T14:21:57.956Z","type":"nick"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-21T14:22:39.839Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-02-21T14:24:43.145Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 255 seconds","date":"2013-02-21T14:26:35.559Z","type":"quit"}
{"nick":"stagas","date":"2013-02-21T14:33:56.389Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 260 seconds","date":"2013-02-21T14:42:51.453Z","type":"quit"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-02-21T14:43:44.236Z","type":"nick"}
{"nick":"csaoh","message":"i was wondering something.. let's say i want to bind both read and write events to a stream. Can i call uv_poll_init once and then call uv_poll_start twice, with different flags (WRITEABLE and READABLE) ? or should I use uv_poll_init twice ?","date":"2013-02-21T14:54:40.562Z","type":"message"}
{"nick":"c4milo","date":"2013-02-21T14:54:48.259Z","type":"join"}
{"nick":"erickt","date":"2013-02-21T15:03:54.018Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-21T15:04:34.590Z","type":"quit"}
{"nick":"csaoh","message":"my guess is it i need to call uv_poll_init() once, and then uv_poll_start() twice, but I fail to get both of the callbacks of uv_poll_start to be called","date":"2013-02-21T15:07:11.258Z","type":"message"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-02-21T15:07:48.153Z","type":"nick"}
{"nick":"benoitc","date":"2013-02-21T15:08:16.254Z","type":"join"}
{"nick":"stagas","date":"2013-02-21T15:09:49.780Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 240 seconds","date":"2013-02-21T15:14:33.718Z","type":"quit"}
{"nick":"stagas","date":"2013-02-21T15:17:41.957Z","type":"join"}
{"nick":"loladiro","date":"2013-02-21T15:19:35.448Z","type":"join"}
{"nick":"stagas_","date":"2013-02-21T15:22:19.998Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 276 seconds","date":"2013-02-21T15:22:45.879Z","type":"quit"}
{"nick":"stagas_","new_nick":"stagas","date":"2013-02-21T15:22:47.908Z","type":"nick"}
{"nick":"stagas_","date":"2013-02-21T15:28:29.915Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 260 seconds","date":"2013-02-21T15:29:55.035Z","type":"quit"}
{"nick":"stagas_","new_nick":"stagas","date":"2013-02-21T15:30:10.254Z","type":"nick"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-21T15:34:19.434Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-02-21T15:43:47.882Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-02-21T15:46:49.903Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 255 seconds","date":"2013-02-21T15:47:35.522Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-02-21T15:47:40.142Z","type":"join"}
{"nick":"pooya","date":"2013-02-21T15:48:03.863Z","type":"join"}
{"nick":"stagas","date":"2013-02-21T15:49:36.302Z","type":"join"}
{"nick":"mikeal","date":"2013-02-21T15:50:08.951Z","type":"join"}
{"nick":"indutny","message":"isaacs: call?","date":"2013-02-21T15:52:39.411Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ^","date":"2013-02-21T15:52:42.188Z","type":"message"}
{"nick":"stagas_","date":"2013-02-21T15:52:48.835Z","type":"join"}
{"nick":"indutny","message":"in 8 minutes","date":"2013-02-21T15:52:49.337Z","type":"message"}
{"nick":"stagas","reason":"Ping timeout: 264 seconds","date":"2013-02-21T15:54:42.117Z","type":"quit"}
{"nick":"stagas_","new_nick":"stagas","date":"2013-02-21T15:54:43.893Z","type":"nick"}
{"nick":"pooya","reason":"Quit: pooya","date":"2013-02-21T15:54:56.923Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-21T15:55:11.969Z","type":"quit"}
{"nick":"isaacs","message":"yes, call","date":"2013-02-21T15:57:20.076Z","type":"message"}
{"nick":"isaacs","message":"one sec","date":"2013-02-21T15:57:22.015Z","type":"message"}
{"nick":"stagas_","date":"2013-02-21T16:03:49.475Z","type":"join"}
{"nick":"stagas__","date":"2013-02-21T16:05:37.624Z","type":"join"}
{"nick":"mikeal","date":"2013-02-21T16:05:46.934Z","type":"join"}
{"nick":"stagas__","reason":"Client Quit","date":"2013-02-21T16:06:48.408Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 255 seconds","date":"2013-02-21T16:06:50.835Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-21T16:07:16.972Z","type":"quit"}
{"nick":"stagas_","reason":"Ping timeout: 252 seconds","date":"2013-02-21T16:09:03.165Z","type":"quit"}
{"nick":"loladiro","date":"2013-02-21T16:10:36.109Z","type":"join"}
{"nick":"benoitc","date":"2013-02-21T16:11:17.014Z","type":"join"}
{"nick":"erickt","reason":"Quit: erickt","date":"2013-02-21T16:12:46.742Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-21T16:21:39.331Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-02-21T16:26:04.439Z","type":"quit"}
{"nick":"bradleymeck_","date":"2013-02-21T16:26:39.395Z","type":"join"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2013-02-21T16:27:39.729Z","type":"quit"}
{"nick":"bradleymeck_","new_nick":"bradleymeck","date":"2013-02-21T16:27:40.072Z","type":"nick"}
{"nick":"`3rdEden","new_nick":"`3E|AFK","date":"2013-02-21T16:32:25.903Z","type":"nick"}
{"nick":"mikeal","date":"2013-02-21T16:35:39.931Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 260 seconds","date":"2013-02-21T16:39:03.452Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-02-21T16:42:20.678Z","type":"join"}
{"nick":"isaacs","message":"Raynos: I'm going to remove lowWaterMarks from streams entirely.","date":"2013-02-21T16:42:59.597Z","type":"message"}
{"nick":"isaacs","message":"Raynos: i don't think you ever want that to not be zero anyway","date":"2013-02-21T16:43:05.607Z","type":"message"}
{"nick":"isaacs","message":"and it will remove a lot of checking","date":"2013-02-21T16:43:10.131Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-21T16:45:29.491Z","type":"quit"}
{"nick":"CoverSlide","message":"if it simplifies streams2 i'm all for it","date":"2013-02-21T16:47:11.651Z","type":"message"}
{"nick":"`3E|AFK","reason":"Remote host closed the connection","date":"2013-02-21T16:54:09.111Z","type":"quit"}
{"nick":"`3E|AFK","date":"2013-02-21T16:55:37.072Z","type":"join"}
{"nick":"dap","date":"2013-02-21T16:56:53.860Z","type":"join"}
{"nick":"`3E|AFK","reason":"Read error: Operation timed out","date":"2013-02-21T16:57:49.207Z","type":"quit"}
{"nick":"AvianFlu_","date":"2013-02-21T16:58:30.741Z","type":"join"}
{"nick":"AvianFlu","reason":"Disconnected by services","date":"2013-02-21T16:58:46.850Z","type":"quit"}
{"nick":"AvianFlu_","new_nick":"AvianFlu","date":"2013-02-21T16:58:50.553Z","type":"nick"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-21T16:58:57.278Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-21T17:02:16.253Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 252 seconds","date":"2013-02-21T17:07:21.244Z","type":"quit"}
{"nick":"AvianFlu_","date":"2013-02-21T17:10:33.995Z","type":"join"}
{"nick":"AvianFlu","reason":"Disconnected by services","date":"2013-02-21T17:10:57.908Z","type":"quit"}
{"nick":"AvianFlu_","new_nick":"AvianFlu","date":"2013-02-21T17:11:00.388Z","type":"nick"}
{"nick":"CoverSlide","action":"&","date":"2013-02-21T17:22:43.195Z","type":"action"}
{"nick":"LOUDBOT","message":"IF HE IS BANNED THE WHOLE CATALYST COMMUNITY MOOSE COMMUNITY DBIX COMMUNITY WILL REVOLT","date":"2013-02-21T17:22:43.619Z","type":"message"}
{"nick":"mikeal","date":"2013-02-21T17:24:28.618Z","type":"join"}
{"nick":"bradleymeck","reason":"Ping timeout: 252 seconds","date":"2013-02-21T17:39:48.236Z","type":"quit"}
{"nick":"hz","reason":"Ping timeout: 264 seconds","date":"2013-02-21T17:42:48.456Z","type":"quit"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2013-02-21T17:46:17.224Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-02-21T17:46:44.947Z","type":"join"}
{"nick":"hz","date":"2013-02-21T17:47:39.422Z","type":"join"}
{"nick":"trevnorris","date":"2013-02-21T17:51:07.705Z","type":"join"}
{"nick":"EhevuTov","date":"2013-02-21T17:56:17.973Z","type":"join"}
{"nick":"tjfontaine","message":"I wonder if it would be easier to make the test runner reap left children","date":"2013-02-21T17:56:34.225Z","type":"message"}
{"nick":"TheJH","date":"2013-02-21T17:58:00.972Z","type":"join"}
{"nick":"sgallagh","reason":"Remote host closed the connection","date":"2013-02-21T18:05:43.373Z","type":"quit"}
{"nick":"loladiro","date":"2013-02-21T18:10:06.128Z","type":"join"}
{"nick":"pooya","date":"2013-02-21T18:10:08.356Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-02-21T18:13:43.860Z","type":"join"}
{"nick":"tjfontaine","message":"bnoordhuis: welcome","date":"2013-02-21T18:14:48.200Z","type":"message"}
{"nick":"perezd","date":"2013-02-21T18:16:34.263Z","type":"join"}
{"nick":"indutny","message":"wilcomen","date":"2013-02-21T18:16:47.968Z","type":"message"}
{"nick":"indutny","message":"willkommen","date":"2013-02-21T18:17:01.839Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 246 seconds","date":"2013-02-21T18:18:19.833Z","type":"quit"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-02-21T18:18:51.867Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-02-21T18:21:13.621Z","type":"join"}
{"nick":"TooTallNate","message":"trevnorris: so i guess i'll land your patch","date":"2013-02-21T18:22:16.554Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: any chance of a test case though?","date":"2013-02-21T18:22:23.046Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: was just about to ask you for help.","date":"2013-02-21T18:22:34.066Z","type":"message"}
{"nick":"TooTallNate","message":"well i'll do what i can","date":"2013-02-21T18:22:48.816Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: haven't been able to figure out what mocha is doing to cause that.","date":"2013-02-21T18:22:49.976Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: it's not just mocha though","date":"2013-02-21T18:23:00.673Z","type":"message"}
{"nick":"trevnorris","message":"well. i mean your code.","date":"2013-02-21T18:23:12.498Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: that standalone gist i gave you doesn't fire the \"finish\" event","date":"2013-02-21T18:23:21.395Z","type":"message"}
{"nick":"TooTallNate","message":"https://gist.github.com/TooTallNate/ad7ce486dc328d8f32b7","date":"2013-02-21T18:23:59.128Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: yeah. was trying to figure out how use that w/o the Decoder required.","date":"2013-02-21T18:25:05.821Z","type":"message"}
{"nick":"TooTallNate","message":"well ya of course :p","date":"2013-02-21T18:25:21.045Z","type":"message"}
{"nick":"TooTallNate","message":"it's strange...","date":"2013-02-21T18:25:32.951Z","type":"message"}
{"nick":"TooTallNate","message":"idk what i'd be doing that would cause it to get into that state","date":"2013-02-21T18:25:45.803Z","type":"message"}
{"nick":"trevnorris","message":"i'm confused how none of the existing tests caught this case.","date":"2013-02-21T18:25:55.586Z","type":"message"}
{"nick":"TooTallNate","message":"as am i","date":"2013-02-21T18:26:04.333Z","type":"message"}
{"nick":"trevnorris","message":"well, luckily it was easy to figure out. just noticed the program was exiting w/o continuing execution of the event queue.","date":"2013-02-21T18:27:04.633Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: it seems like that if branch you added in that patch gets executed quite a few times","date":"2013-02-21T18:28:01.130Z","type":"message"}
{"nick":"TooTallNate","message":"is that expected?","date":"2013-02-21T18:28:07.321Z","type":"message"}
{"nick":"trevnorris","message":"yeah. bunch of unecessary calls to the spinner. think i may have a better patch for that. one sec.","date":"2013-02-21T18:30:38.462Z","type":"message"}
{"nick":"MI61","message":"\u0002joyent/node:\u0002 \u00033Trevor Norris\u000f \u00037master\u000f * \u00027301ba3\u0002 : process: fix bug where spinner wasn't called  Apperently there is a case  - http://git.io/4QxrtA","date":"2013-02-21T18:31:35.638Z","type":"message"}
{"nick":"trevnorris","message":"bugger... dude, there's a better one.","date":"2013-02-21T18:32:02.630Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: it was isaacs ","date":"2013-02-21T18:32:22.943Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: we can revert that one","date":"2013-02-21T18:32:42.382Z","type":"message"}
{"nick":"TooTallNate","message":"when we have a better one :)","date":"2013-02-21T18:32:54.820Z","type":"message"}
{"nick":"indutny","message":"isaacs: https://github.com/joyent/node/pull/4826","date":"2013-02-21T18:34:27.325Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-02-21T18:34:56.747Z","type":"quit"}
{"nick":"loladiro","date":"2013-02-21T18:37:06.124Z","type":"join"}
{"nick":"`3E|AFK","date":"2013-02-21T18:37:26.014Z","type":"join"}
{"nick":"TooTallNate","message":"ughh this is really messed","date":"2013-02-21T18:37:58.277Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: what?","date":"2013-02-21T18:38:10.807Z","type":"message"}
{"nick":"indutny","message":"readStart?","date":"2013-02-21T18:38:15.047Z","type":"message"}
{"nick":"TooTallNate","message":"i'm just upset i can't figure out how to test this","date":"2013-02-21T18:38:24.323Z","type":"message"}
{"nick":"TooTallNate","message":"haha","date":"2013-02-21T18:38:24.979Z","type":"message"}
{"nick":"indutny","message":"we've a lot of things messed","date":"2013-02-21T18:38:36.423Z","type":"message"}
{"nick":"indutny","message":"so please be more specific","date":"2013-02-21T18:38:40.833Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: happy everything works though :)","date":"2013-02-21T18:38:42.466Z","type":"message"}
{"nick":"TooTallNate","message":"indutny: it would have been nice to get a test case for https://github.com/joyent/node/commit/7301ba396915a54e1db9a2673a467639ff6cd0b1","date":"2013-02-21T18:39:04.638Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2013-02-21T18:39:19.286Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2013-02-21T18:39:20.584Z","type":"message"}
{"nick":"indutny","message":"I guess so","date":"2013-02-21T18:39:22.571Z","type":"message"}
{"nick":"TooTallNate","message":"indutny: but we can't seem to figure out how to isolate the behavior","date":"2013-02-21T18:39:23.549Z","type":"message"}
{"nick":"Guest____","date":"2013-02-21T18:43:16.611Z","type":"join"}
{"nick":"Guest____","reason":"Max SendQ exceeded","date":"2013-02-21T18:43:21.480Z","type":"quit"}
{"nick":"trevnorris","message":"TooTallNate: i don't understand how it's possible. all callbacks added to the queue must have come though makeCallback, which would have detected there are more callbacks","date":"2013-02-21T18:44:00.735Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: well.. what if an addon isn't using MakeCallback()?","date":"2013-02-21T18:44:37.294Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: … this could be an error on my part is what i'm saying","date":"2013-02-21T18:45:10.536Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: the event queue is only accessible to makecallback and nextTick","date":"2013-02-21T18:45:14.702Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: i'm not using MakeCallback here https://github.com/TooTallNate/node-ogg/blob/master/src/binding.cc#L337","date":"2013-02-21T18:45:56.398Z","type":"message"}
{"nick":"`3rdEden","date":"2013-02-21T18:45:59.200Z","type":"join"}
{"nick":"TooTallNate","message":"or anywhere for that matter, hahah","date":"2013-02-21T18:46:12.577Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: orly?","date":"2013-02-21T18:47:37.864Z","type":"message"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-02-21T18:47:47.824Z","type":"quit"}
{"nick":"indutny","message":"isaacs: ping pong","date":"2013-02-21T18:48:02.482Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: yeah, if there's a better approach, we can just clobber this one and land that.","date":"2013-02-21T18:48:03.025Z","type":"message"}
{"nick":"isaacs","message":"it's cool","date":"2013-02-21T18:48:06.053Z","type":"message"}
{"nick":"indutny","message":"isaacs: https://github.com/joyent/node/pull/4826/files","date":"2013-02-21T18:48:07.541Z","type":"message"}
{"nick":"trevnorris","message":"somehow a callback is being left in the event queue. give me some time to figure out why.","date":"2013-02-21T18:48:18.252Z","type":"message"}
{"nick":"isaacs","message":"indutny: hm.  and this works?","date":"2013-02-21T18:49:11.355Z","type":"message"}
{"nick":"indutny","message":"you can test it ;)","date":"2013-02-21T18:49:17.294Z","type":"message"}
{"nick":"isaacs","message":"indutny: i mean, it's not the ugliest thing ever.","date":"2013-02-21T18:49:19.939Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-02-21T18:49:23.941Z","type":"message"}
{"nick":"indutny","message":"it works","date":"2013-02-21T18:49:26.629Z","type":"message"}
{"nick":"brson","date":"2013-02-21T18:51:25.555Z","type":"join"}
{"nick":"isaacs","message":"running tests now","date":"2013-02-21T18:51:51.783Z","type":"message"}
{"nick":"isaacs","message":"lowWaterMark is almsot all gone.","date":"2013-02-21T18:52:18.329Z","type":"message"}
{"nick":"isaacs","message":"some tests failing, but they're all just tests of lowWaterMark  in stream2 tests :)","date":"2013-02-21T18:52:31.674Z","type":"message"}
{"nick":"isaacs","message":"i'm going to set fire to the debugger tests.","date":"2013-02-21T18:53:54.505Z","type":"message"}
{"nick":"isaacs","message":"and by \"set fire to\" i mean \"rewrite\"","date":"2013-02-21T18:54:04.504Z","type":"message"}
{"nick":"isaacs","message":"but ragefully","date":"2013-02-21T18:54:10.821Z","type":"message"}
{"nick":"isaacs","message":":0","date":"2013-02-21T18:54:12.950Z","type":"message"}
{"nick":"bradleymeck","date":"2013-02-21T18:57:36.715Z","type":"join"}
{"nick":"TheJH","reason":"Ping timeout: 276 seconds","date":"2013-02-21T19:00:30.854Z","type":"quit"}
{"nick":"TooTallNate","message":"trevnorris: this doesn't seem to repro it :\\ https://github.com/TooTallNate/node/commit/68a8b2709e7cbb6a4c42658837f63087df2e923b","date":"2013-02-21T19:03:40.972Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: i'm leaning towards a race condition. the final callback in the queue is afterPacketout, but that thing's been called more than a dozen times already.","date":"2013-02-21T19:05:05.846Z","type":"message"}
{"nick":"TooTallNate","message":"lovely :p","date":"2013-02-21T19:06:12.809Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: the only place I see afterPacketout run is when it's passed to ogg_stream_packetout.","date":"2013-02-21T19:06:26.321Z","type":"message"}
{"nick":"TooTallNate","message":"sounds about right","date":"2013-02-21T19:06:43.842Z","type":"message"}
{"nick":"TooTallNate","message":"and that's an async native function","date":"2013-02-21T19:06:54.643Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: but that's pretty much what you simulated in the test, right?","date":"2013-02-21T19:07:45.995Z","type":"message"}
{"nick":"TooTallNate","message":"ya","date":"2013-02-21T19:08:01.426Z","type":"message"}
{"nick":"TooTallNate","message":"but maybe you need to do it 10 times?","date":"2013-02-21T19:08:08.881Z","type":"message"}
{"nick":"TooTallNate","message":"who knows","date":"2013-02-21T19:08:12.370Z","type":"message"}
{"nick":"trevnorris","message":"can you try that? just run it a bunch.","date":"2013-02-21T19:08:25.122Z","type":"message"}
{"nick":"indutny","message":"isaacs: so, lgty?","date":"2013-02-21T19:14:22.804Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: can't seem to repro still :(","date":"2013-02-21T19:15:42.208Z","type":"message"}
{"nick":"isaacs","message":"indutny: yeah, sure.","date":"2013-02-21T19:20:53.852Z","type":"message"}
{"nick":"isaacs","message":"tests pass","date":"2013-02-21T19:20:55.655Z","type":"message"}
{"nick":"isaacs","message":"cleared for landing","date":"2013-02-21T19:21:03.099Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: is uv_queue_work supposed to call req->callback when complete?","date":"2013-02-21T19:23:29.451Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-21T19:24:21.272Z","type":"quit"}
{"nick":"TooTallNate","message":"trevnorris: no i don't think so, you're supposed to implement the callback manually","date":"2013-02-21T19:24:56.607Z","type":"message"}
{"nick":"tjfontaine","message":"hrm no ben","date":"2013-02-21T19:24:59.595Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: then what is running the callback passed to node_ogg_stream_packetout?","date":"2013-02-21T19:25:28.909Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: nm. see it.","date":"2013-02-21T19:26:33.617Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: i invoke it manually https://github.com/TooTallNate/node-ogg/blob/master/src/binding.cc#L243","date":"2013-02-21T19:26:35.856Z","type":"message"}
{"nick":"mikeal","date":"2013-02-21T19:27:47.564Z","type":"join"}
{"nick":"MI61","message":"\u0002joyent/node:\u0002 \u00033Fedor Indutny\u000f \u00037master\u000f * \u0002ebc95f0\u0002 : tls: _handle.readStart/readStop for CryptoStream  lib/http.js is using st - http://git.io/_muhaQ","date":"2013-02-21T19:29:29.337Z","type":"message"}
{"nick":"indutny","message":"isaacs: thanks","date":"2013-02-21T19:30:12.327Z","type":"message"}
{"nick":"TheJH","date":"2013-02-21T19:31:27.281Z","type":"join"}
{"nick":"EhevuTov","date":"2013-02-21T19:32:10.640Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-02-21T19:32:34.543Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-21T19:33:44.806Z","type":"quit"}
{"nick":"trevnorris","message":"TooTallNate: it's a race condition for sure. the spinner is returning before the next callback has been pushed to the queue.","date":"2013-02-21T19:37:53.193Z","type":"message"}
{"nick":"trevnorris","message":"but when I manually slow down nextTick then it runs fine.","date":"2013-02-21T19:38:04.400Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: but doesn't my callback *not* go through the queue at all? i'm just invoking it on the JS thread directly","date":"2013-02-21T19:41:44.890Z","type":"message"}
{"nick":"TheJH","reason":"Ping timeout: 244 seconds","date":"2013-02-21T19:41:49.175Z","type":"quit"}
{"nick":"trevnorris","message":"TooTallNate: what is afterPageout?","date":"2013-02-21T19:41:53.572Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: i feel like not calling MakeCallback is causing the race","date":"2013-02-21T19:41:55.422Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: the callback function for when ogg_stream_pageout() is finished?","date":"2013-02-21T19:42:17.760Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: afterPacketout is being called by the emitter, which is pushing the callback to the tick queue.","date":"2013-02-21T19:44:41.505Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: by which emitter?","date":"2013-02-21T19:45:35.872Z","type":"message"}
{"nick":"TooTallNate","message":"afterPageout is only referenced 3 times in the code","date":"2013-02-21T19:45:53.427Z","type":"message"}
{"nick":"TooTallNate","message":"only interacting with the native function though","date":"2013-02-21T19:46:04.097Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: i setup a trace in nextTick to look for callbacks with the name afterPacketout. this is what it looks like: https://gist.github.com/trevnorris/5007546","date":"2013-02-21T19:47:12.305Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: i'm pretty sure these are coming in from DecoderStream.prototype._read","date":"2013-02-21T19:48:25.204Z","type":"message"}
{"nick":"TooTallNate","message":"i mean that's pretty weird to me","date":"2013-02-21T19:49:00.772Z","type":"message"}
{"nick":"TooTallNate","message":"afterPageout() should only be invoked directly on the JS stack","date":"2013-02-21T19:49:16.613Z","type":"message"}
{"nick":"TooTallNate","message":"at the beginning that is","date":"2013-02-21T19:49:21.147Z","type":"message"}
{"nick":"MI61","message":"\u0002joyent/node:\u0002 \u00033Arianit Uka\u000f \u00037master\u000f * \u0002055110d\u0002 : path: join throws TypeError on non-string args  lib/path.js:   - throws a - http://git.io/WNBdJA","date":"2013-02-21T19:51:02.497Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: idk where you're getting that from","date":"2013-02-21T19:51:21.968Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: lib/decoder-stream.js","date":"2013-02-21T19:51:44.267Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: are you using master branch or an npm checkout?","date":"2013-02-21T19:51:59.173Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: https://github.com/TooTallNate/node-ogg/blob/master/lib/decoder-stream.js#L168","date":"2013-02-21T19:52:30.399Z","type":"message"}
{"nick":"TooTallNate","message":"ya i see","date":"2013-02-21T19:52:56.271Z","type":"message"}
{"nick":"Raynos","message":"isaacs: lowWaterMark is useful for pull streams","date":"2013-02-21T19:53:03.437Z","type":"message"}
{"nick":"Raynos","message":"isaacs: https://github.com/Raynos/read-stream#example-pull-model","date":"2013-02-21T19:53:23.695Z","type":"message"}
{"nick":"Raynos","message":"a pull stream fills up to the lowWaterMark because when `push()` && length < lowWaterMark then `_read()`","date":"2013-02-21T19:54:00.981Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: oh, you said afterPageout()","date":"2013-02-21T19:54:02.969Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: but your gist is afterPacketout()","date":"2013-02-21T19:54:13.019Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: yeah. basically it's: if (callback.name === 'afterPacketout') console.trace('afterPacketout from nextTick');","date":"2013-02-21T19:54:54.584Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: sure but what function are we actually talking about here?","date":"2013-02-21T19:55:17.998Z","type":"message"}
{"nick":"trevnorris","message":"just popped that in the first line of nextTick()","date":"2013-02-21T19:55:19.081Z","type":"message"}
{"nick":"TooTallNate","message":"i think you mean afterPageout()","date":"2013-02-21T19:55:27.574Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: i'm checking for when you pass afterPacketout() to nextTick.","date":"2013-02-21T19:56:19.718Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: was asking about afterPageout because it was showing up in the trace.","date":"2013-02-21T19:56:39.850Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: but who cares about that function?","date":"2013-02-21T19:56:42.007Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: because when the program exits that is the function left in the queue that hasn't been executed.","date":"2013-02-21T19:57:11.628Z","type":"message"}
{"nick":"TheJH","date":"2013-02-21T19:57:24.618Z","type":"join"}
{"nick":"trevnorris","message":"process.on('exit', function() { console.error(nextTickQueue[0]); })","date":"2013-02-21T19:57:57.338Z","type":"message"}
{"nick":"isaacs","message":"Raynos: no, push() only returns false when you hit the high water mark","date":"2013-02-21T19:57:59.148Z","type":"message"}
{"nick":"Raynos","message":"isaacs: I think it's nice that calling onread() and having length < lwm pre-emptively calls _read again","date":"2013-02-21T19:58:25.037Z","type":"message"}
{"nick":"Raynos","message":"even if the consumer hasn't called read()","date":"2013-02-21T19:58:30.215Z","type":"message"}
{"nick":"`3E|AFK","new_nick":"`3E","date":"2013-02-21T19:58:39.667Z","type":"nick"}
{"nick":"TooTallNate","message":"trevnorris: ok good to know","date":"2013-02-21T19:58:46.092Z","type":"message"}
{"nick":"isaacs","message":"Raynos: right... but.. when do you actually want to call _read *instead* of emitting readable?","date":"2013-02-21T19:59:01.061Z","type":"message"}
{"nick":"Raynos","message":"well if the buffer has one object in it","date":"2013-02-21T19:59:14.800Z","type":"message"}
{"nick":"Raynos","message":"I want to call _read again","date":"2013-02-21T19:59:19.108Z","type":"message"}
{"nick":"Raynos","message":"But I also want to emit \"readable\"","date":"2013-02-21T19:59:26.915Z","type":"message"}
{"nick":"Raynos","message":"I think calling _read if onread() -> length < hwm is not a bad idea","date":"2013-02-21T19:59:40.811Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 246 seconds","date":"2013-02-21T19:59:49.791Z","type":"quit"}
{"nick":"Raynos","message":"that way the stream is always pre-emptively upto the high water mark","date":"2013-02-21T19:59:56.381Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: where is nextTickQueue?","date":"2013-02-21T20:00:12.318Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: src/node.js around line  450","date":"2013-02-21T20:00:32.333Z","type":"message"}
{"nick":"isaacs","message":"Raynos: so, here's a problem:","date":"2013-02-21T20:00:35.230Z","type":"message"}
{"nick":"AvianFlu","date":"2013-02-21T20:00:36.177Z","type":"join"}
{"nick":"Raynos","message":"but I guess emitting readable is the same thing if you read in a tight loop","date":"2013-02-21T20:00:37.472Z","type":"message"}
{"nick":"isaacs","message":"Raynos: we emit 'readable'","date":"2013-02-21T20:00:41.340Z","type":"message"}
{"nick":"isaacs","message":"Raynos: in which point, you call read() again","date":"2013-02-21T20:00:46.379Z","type":"message"}
{"nick":"isaacs","message":"Raynos: and that triggers _read() again","date":"2013-02-21T20:00:56.836Z","type":"message"}
{"nick":"Raynos","message":"which triggers _read because its less then hwm","date":"2013-02-21T20:00:57.988Z","type":"message"}
{"nick":"isaacs","message":"Raynos: but then we call _read *yet again* after emitting?","date":"2013-02-21T20:01:05.379Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: ahh, it's gidden","date":"2013-02-21T20:01:09.814Z","type":"message"}
{"nick":"TooTallNate","message":"hidden","date":"2013-02-21T20:01:11.596Z","type":"message"}
{"nick":"isaacs","message":"Raynos: i guess we can do it if we check for state.reading after emitting readable","date":"2013-02-21T20:01:32.687Z","type":"message"}
{"nick":"wolfeidau","date":"2013-02-21T20:01:35.467Z","type":"join"}
{"nick":"isaacs","message":"Raynos: so, if !reading, and length < hwm, call _read() again","date":"2013-02-21T20:01:47.219Z","type":"message"}
{"nick":"isaacs","message":"Raynos: after emitting readable","date":"2013-02-21T20:01:57.489Z","type":"message"}
{"nick":"Raynos","message":"i guess o","date":"2013-02-21T20:02:08.525Z","type":"message"}
{"nick":"`3rdEden","reason":"Ping timeout: 248 seconds","date":"2013-02-21T20:02:09.126Z","type":"quit"}
{"nick":"Raynos","message":"im not sure though","date":"2013-02-21T20:02:11.492Z","type":"message"}
{"nick":"Raynos","message":"isaacs: btw https://github.com/Raynos/readable-stream/commit/26f4b4635c099f404bad5d5cd1838b9b49ce8ec3","date":"2013-02-21T20:03:23.362Z","type":"message"}
{"nick":"TheJH","reason":"Ping timeout: 255 seconds","date":"2013-02-21T20:03:38.430Z","type":"quit"}
{"nick":"TheJH","date":"2013-02-21T20:04:08.946Z","type":"join"}
{"nick":"isaacs","message":"Raynos: hm...","date":"2013-02-21T20:09:53.624Z","type":"message"}
{"nick":"isaacs","message":"Raynos: so, what happens if you need a readable event there?","date":"2013-02-21T20:10:05.168Z","type":"message"}
{"nick":"isaacs","message":"oh, wait, i think i see..","date":"2013-02-21T20:11:28.221Z","type":"message"}
{"nick":"Raynos","message":"I remove the rs.needReadable check. Hopefully that doesn't break anything","date":"2013-02-21T20:11:39.212Z","type":"message"}
{"nick":"isaacs","message":"Raynos: so, the issue is that onread emits readable on nextTick, because sync","date":"2013-02-21T20:12:00.829Z","type":"message"}
{"nick":"isaacs","message":"Raynos: valid bug.  wrong fix.","date":"2013-02-21T20:12:06.141Z","type":"message"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2013-02-21T20:12:07.680Z","type":"quit"}
{"nick":"isaacs","message":"good catch, though","date":"2013-02-21T20:12:11.672Z","type":"message"}
{"nick":"AvianFlu","date":"2013-02-21T20:12:35.602Z","type":"join"}
{"nick":"isaacs","message":"Raynos: does this fix your issue? https://gist.github.com/5007815","date":"2013-02-21T20:14:46.507Z","type":"message"}
{"nick":"Raynos","message":"isaacs: interesting, it may do","date":"2013-02-21T20:15:49.847Z","type":"message"}
{"nick":"isaacs","message":"Raynos: also, that preemptively rads.","date":"2013-02-21T20:16:25.572Z","type":"message"}
{"nick":"isaacs","message":"*reads","date":"2013-02-21T20:16:26.888Z","type":"message"}
{"nick":"isaacs","message":"which is rad :)","date":"2013-02-21T20:16:29.018Z","type":"message"}
{"nick":"Raynos","message":"also I wanted to make `undefined` the same as `\"\"` in buffer mode. i.e. there is no data now but this is not EOF, EOF is null. https://github.com/joyent/node/issues/4819","date":"2013-02-21T20:16:30.989Z","type":"message"}
{"nick":"Raynos","message":"isaacs: I like the read(0) thing","date":"2013-02-21T20:17:10.588Z","type":"message"}
{"nick":"Raynos","message":"that's a nice touch","date":"2013-02-21T20:17:13.728Z","type":"message"}
{"nick":"Raynos","message":"of course this means that all streams will now fill up to the highWaterMark on read(0)","date":"2013-02-21T20:17:41.574Z","type":"message"}
{"nick":"Raynos","message":"which i dont know whether that's good for memory usage.","date":"2013-02-21T20:17:54.686Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: how for the love of are you calling nextTick after the final spinner has returned? that shouldn't be possible.","date":"2013-02-21T20:18:12.609Z","type":"message"}
{"nick":"isaacs","message":"Raynos: i'm ok with saying that it must === null to be EOF, i guess","date":"2013-02-21T20:19:00.728Z","type":"message"}
{"nick":"Raynos","message":"im on the fence, it's useful but can go in userland if needed","date":"2013-02-21T20:19:47.578Z","type":"message"}
{"nick":"AvianFlu_","date":"2013-02-21T20:21:03.366Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 260 seconds","date":"2013-02-21T20:21:11.495Z","type":"quit"}
{"nick":"isaacs","message":"Raynos: i think if you want this to not fill up, use a lower hwm","date":"2013-02-21T20:22:40.133Z","type":"message"}
{"nick":"isaacs","message":"Raynos: you can set hwm=0 for \"no preemptive anything ever\"","date":"2013-02-21T20:22:57.110Z","type":"message"}
{"nick":"Raynos","message":"well hwm is for two things","date":"2013-02-21T20:23:03.638Z","type":"message"}
{"nick":"isaacs","message":"but already, reading even 1 byte will make it do another read if it's < hwm","date":"2013-02-21T20:23:06.793Z","type":"message"}
{"nick":"Raynos","message":"its for \"how much should it preemptively fill\"","date":"2013-02-21T20:23:11.182Z","type":"message"}
{"nick":"Raynos","message":"and for \"if you add stuff, when does it say NO I AM FULL\"","date":"2013-02-21T20:23:22.568Z","type":"message"}
{"nick":"isaacs","message":"i think those are really the same things","date":"2013-02-21T20:23:30.013Z","type":"message"}
{"nick":"Raynos","message":"the latter is useful for push sources","date":"2013-02-21T20:23:35.372Z","type":"message"}
{"nick":"isaacs","message":"\"adding stuff\" is how preemptive filling works","date":"2013-02-21T20:23:41.012Z","type":"message"}
{"nick":"Raynos","message":"where as the latter doesnt matter for pull sources","date":"2013-02-21T20:23:43.510Z","type":"message"}
{"nick":"isaacs","message":"they should be the same.","date":"2013-02-21T20:23:45.818Z","type":"message"}
{"nick":"isaacs","message":"sure","date":"2013-02-21T20:23:59.306Z","type":"message"}
{"nick":"Raynos","message":"i dont know whether they are the same, i'm ok with them being the same","date":"2013-02-21T20:24:13.215Z","type":"message"}
{"nick":"isaacs","message":"but even \"pull sources\" (ie, fs reads, for example) can be thought of as a push() that we call in the future","date":"2013-02-21T20:24:19.523Z","type":"message"}
{"nick":"isaacs","message":"we just call that a \"callback\" rather than a \"push later\"","date":"2013-02-21T20:24:44.095Z","type":"message"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-02-21T20:25:16.319Z","type":"quit"}
{"nick":"trevnorris","message":"TooTallNate: ok, so there are two overlapping async events and it's a race between the spinner and the _packet being fired by afterPacketout.","date":"2013-02-21T20:25:31.752Z","type":"message"}
{"nick":"EhevuTov","date":"2013-02-21T20:25:42.954Z","type":"join"}
{"nick":"trevnorris","message":"TooTallNate: if the spinner wins then no more callbacks in the queue will be called.","date":"2013-02-21T20:25:59.599Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: ^","date":"2013-02-21T20:26:01.961Z","type":"message"}
{"nick":"AvianFlu_","new_nick":"AvianFlu","date":"2013-02-21T20:26:05.107Z","type":"nick"}
{"nick":"isaacs","message":"trevnorris: huh?","date":"2013-02-21T20:26:41.595Z","type":"message"}
{"nick":"isaacs","message":"what is _packet and afterPacketout?","date":"2013-02-21T20:26:49.425Z","type":"message"}
{"nick":"isaacs","message":"can someone review this pretty plz? https://github.com/isaacs/node/compare/path-resolve-nonstring-typeerror","date":"2013-02-21T20:27:30.682Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: so node-ogg has a cc level async event that when returns fires a callback that shoves a method to nextTick. but if the final spinner has fired then it won't be picked up.","date":"2013-02-21T20:27:31.014Z","type":"message"}
{"nick":"isaacs","message":"oic","date":"2013-02-21T20:27:42.490Z","type":"message"}
{"nick":"isaacs","message":"is node-ogg using node::MakeCallback to call its cb?","date":"2013-02-21T20:27:51.736Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: ^?","date":"2013-02-21T20:28:19.339Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: nope. it's calling the callback directly which then emits an event which then calls nextTick.","date":"2013-02-21T20:28:24.891Z","type":"message"}
{"nick":"isaacs","message":"ok, well, that's not going to work","date":"2013-02-21T20:28:31.802Z","type":"message"}
{"nick":"trevnorris","message":"so _tickCallback won't be run.","date":"2013-02-21T20:28:33.594Z","type":"message"}
{"nick":"isaacs","message":"use node::MakeCallback","date":"2013-02-21T20:28:34.558Z","type":"message"}
{"nick":"isaacs","message":"i guess that's kind of a gfy answer, though, huh?","date":"2013-02-21T20:29:05.319Z","type":"message"}
{"nick":"isaacs","message":"should probably make that work...","date":"2013-02-21T20:29:12.639Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-02-21T20:29:14.203Z","type":"quit"}
{"nick":"EhevuTov_","date":"2013-02-21T20:29:39.262Z","type":"join"}
{"nick":"AvianFlu","date":"2013-02-21T20:29:52.682Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: well, calling the spinner after it's returned in every nextTick works, but it's ugly.","date":"2013-02-21T20:29:55.533Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: and if we're dropping the spinner in v0.11 then we'll need another solution. (you said that right?)","date":"2013-02-21T20:30:11.706Z","type":"message"}
{"nick":"isaacs","message":"yeah..","date":"2013-02-21T20:30:19.468Z","type":"message"}
{"nick":"isaacs","message":"but, i'm not sure the best approach","date":"2013-02-21T20:30:26.968Z","type":"message"}
{"nick":"EhevuTov","reason":"Ping timeout: 246 seconds","date":"2013-02-21T20:30:37.797Z","type":"quit"}
{"nick":"isaacs","message":"since you can jump from C++ to JS without going through our prescribed hoops","date":"2013-02-21T20:30:43.438Z","type":"message"}
{"nick":"isaacs","message":"and basically, nextTick only works if you go through node::MakeCallbac","date":"2013-02-21T20:30:59.222Z","type":"message"}
{"nick":"AvianFlu_","date":"2013-02-21T20:31:07.541Z","type":"join"}
{"nick":"trevnorris","message":"it works if the function called from tickDepth === 0 was called by MakeCallback.","date":"2013-02-21T20:31:28.090Z","type":"message"}
{"nick":"Raynos","message":"isaacs: I think of callbacks as pull streams ( https://github.com/Raynos/read-stream#example-callback ). i.e. pull once in the future and you get it. but I guess pull -> push later","date":"2013-02-21T20:31:30.778Z","type":"message"}
{"nick":"AvianFlu","reason":"Disconnected by services","date":"2013-02-21T20:31:31.020Z","type":"quit"}
{"nick":"AvianFlu_","new_nick":"AvianFlu","date":"2013-02-21T20:31:33.073Z","type":"nick"}
{"nick":"mikeal","date":"2013-02-21T20:38:48.985Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: lgtm","date":"2013-02-21T20:39:25.657Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-02-21T20:39:39.674Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: re spinner: w/o being able to enforce control of async events from cc land then we'll have to leave the spinner check in nextTick.","date":"2013-02-21T20:42:06.244Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: yeah, it's not so bad, i think","date":"2013-02-21T20:44:30.206Z","type":"message"}
{"nick":"isaacs","message":"ugly, sure, but whatever.","date":"2013-02-21T20:44:33.182Z","type":"message"}
{"nick":"mikeal","reason":"Ping timeout: 246 seconds","date":"2013-02-21T20:47:25.791Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-02-21T20:47:49.401Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-02-21T20:49:57.873Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: yeah. and unless we want to enforce callbacks from cc then there'll be no way around it.","date":"2013-02-21T20:50:15.097Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: ok well so your patch is good then?","date":"2013-02-21T20:51:44.060Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: in any case, were you able to make a repro test?","date":"2013-02-21T20:52:05.155Z","type":"message"}
{"nick":"TooTallNate","message":"should be possible now","date":"2013-02-21T20:52:09.029Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: yeah, it's the only way to do it. when callback can be run after an async event in cc land then nextTick needs to be checked.","date":"2013-02-21T20:52:34.480Z","type":"message"}
{"nick":"TooTallNate","message":"yup","date":"2013-02-21T20:52:47.204Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: what was your branch with that test?","date":"2013-02-21T20:53:42.210Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: \"add/async-hello-world\"","date":"2013-02-21T20:53:54.199Z","type":"message"}
{"nick":"TooTallNate","message":"on my fork","date":"2013-02-21T20:53:56.007Z","type":"message"}
{"nick":"trevnorris","message":"ahh. i was trying to check out w/o the add/","date":"2013-02-21T20:54:51.772Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: so this repro's it https://github.com/TooTallNate/node/compare/add;async-hello-world","date":"2013-02-21T20:56:02.029Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: yeah, i've got you added in my remote. =)","date":"2013-02-21T20:56:32.298Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: any objections to pushing that to master? ^","date":"2013-02-21T20:56:51.371Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: does that check properly? give me a set to try it out.","date":"2013-02-21T20:57:26.701Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: good work narrowing it down btw","date":"2013-02-21T20:57:38.439Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: ya the test.js should fail on v0.9.10 but works on master with your patch","date":"2013-02-21T20:57:49.939Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: if it passes on master, but fails before trevor's patch, absolutely","date":"2013-02-21T20:58:09.201Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: cool, that is indeed the case","date":"2013-02-21T20:58:26.272Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: wait.","date":"2013-02-21T20:58:33.903Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: i checked out bbcb8b3 built and ran the test. passes.","date":"2013-02-21T20:58:48.633Z","type":"message"}
{"nick":"trevnorris","message":"am i missing something?","date":"2013-02-21T20:58:53.884Z","type":"message"}
{"nick":"`3E","reason":"Quit: becuz","date":"2013-02-21T20:59:32.872Z","type":"quit"}
{"nick":"TooTallNate","message":"trevnorris: fails for me","date":"2013-02-21T20:59:55.957Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: sure you rebuilt?","date":"2013-02-21T21:00:00.909Z","type":"message"}
{"nick":"trevnorris","message":"trying it again. also remember this is a race condition, so i might not be able to reproduce.","date":"2013-02-21T21:00:17.637Z","type":"message"}
{"nick":"`3rdEden","date":"2013-02-21T21:00:26.296Z","type":"join"}
{"nick":"TooTallNate","message":"v0.9.10 tag definitely fails as well","date":"2013-02-21T21:01:45.346Z","type":"message"}
{"nick":"trevnorris","message":"i'll try v0.9.10 then. mind trying at commit bbcb8b3?","date":"2013-02-21T21:02:14.665Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: https://gist.github.com/TooTallNate/898bc576135e82cdaa53","date":"2013-02-21T21:04:46.922Z","type":"message"}
{"nick":"TooTallNate","message":"that's bbcb8b3","date":"2013-02-21T21:04:51.477Z","type":"message"}
{"nick":"TooTallNate","message":"failing","date":"2013-02-21T21:04:52.528Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: am I doing something wrong here? https://gist.github.com/trevnorris/5008273","date":"2013-02-21T21:10:02.187Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: i think you need to pull","date":"2013-02-21T21:11:20.116Z","type":"message"}
{"nick":"loladiro","date":"2013-02-21T21:11:23.190Z","type":"join"}
{"nick":"trevnorris","message":"...","date":"2013-02-21T21:11:34.930Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: you want the commit \"test: modify async native test.js to test for #4820\"","date":"2013-02-21T21:11:40.035Z","type":"message"}
{"nick":"TooTallNate","message":"wow, \"test\" 3 times in one commit message","date":"2013-02-21T21:11:54.831Z","type":"message"}
{"nick":"trevnorris","message":"yup... fails. sorry bout that.","date":"2013-02-21T21:12:16.190Z","type":"message"}
{"nick":"TooTallNate","action":"slaps writs","date":"2013-02-21T21:12:16.397Z","type":"action"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-02-21T21:12:22.281Z","type":"quit"}
{"nick":"TooTallNate","message":"k well i'm gonna push to master then","date":"2013-02-21T21:12:32.805Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: any objections?","date":"2013-02-21T21:12:36.704Z","type":"message"}
{"nick":"trevnorris","message":"nope. good test","date":"2013-02-21T21:12:43.030Z","type":"message"}
{"nick":"TooTallNate","message":"depends on async which is unfortunate but at least we're not requiring MakeCallback()","date":"2013-02-21T21:13:03.388Z","type":"message"}
{"nick":"TooTallNate","message":"err, not async, but native compilation","date":"2013-02-21T21:13:37.206Z","type":"message"}
{"nick":"trevnorris","message":"yeah. and the additional overhead of calling the spinner should be minimal since it's only called when the spinner isn't already out.","date":"2013-02-21T21:14:04.924Z","type":"message"}
{"nick":"MI61","message":"\u0002joyent/node:\u0002 \u00033Nathan Rajlich\u000f \u00037master\u000f * \u000250c88e0\u0002 : test: modify async native test.js to test for #4820 (+1 more commits) - http://git.io/ZrIbuA","date":"2013-02-21T21:14:33.791Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: so is there a more optimal patch like you were talking about or no?","date":"2013-02-21T21:14:42.940Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: thought there was, but not now.","date":"2013-02-21T21:15:29.387Z","type":"message"}
{"nick":"TooTallNate","message":"ok cool","date":"2013-02-21T21:15:36.836Z","type":"message"}
{"nick":"trevnorris","message":"unless we can somehow cheaply detect when a js callback is called from cc land, then there's nothing else to be done.","date":"2013-02-21T21:15:50.398Z","type":"message"}
{"nick":"TooTallNate","message":"crisis resolved as far as i'm concerned :)","date":"2013-02-21T21:15:50.783Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: thanks a lot for looking into it","date":"2013-02-21T21:15:57.961Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: hey, I defined my work. ;-)","date":"2013-02-21T21:16:10.809Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: at this point you probably have a better handle on a lot of the low-level internals than most","date":"2013-02-21T21:16:33.402Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: heh, thanks.it's where I like to spend my time.","date":"2013-02-21T21:17:14.034Z","type":"message"}
{"nick":"loladiro","date":"2013-02-21T21:17:44.095Z","type":"join"}
{"nick":"trevnorris","message":"i'm working on optimizing EvenEmitter now. the context switching drives me nuts.","date":"2013-02-21T21:18:55.009Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: though I have very little grasp on uv internals. especially the intricacies of uv_run.","date":"2013-02-21T21:23:07.242Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: well even less people know those internals","date":"2013-02-21T21:23:31.028Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: you could probably count them on one hand :P","date":"2013-02-21T21:23:39.589Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: lol. well luckily the code is so clean so it makes life easier.","date":"2013-02-21T21:25:45.103Z","type":"message"}
{"nick":"trevnorris","message":"ugh. needing to use .call() and .apply() in code as hot as .emit() makes me hurt. just can't see a way around it yet.","date":"2013-02-21T21:29:02.556Z","type":"message"}
{"nick":"brson","reason":"Ping timeout: 260 seconds","date":"2013-02-21T21:29:19.368Z","type":"quit"}
{"nick":"TooTallNate","message":"trevnorris: unless the callback are set directly on the emitter object, there's not really a way around it","date":"2013-02-21T21:29:33.381Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: and even then, the variable number of args makes it hard still","date":"2013-02-21T21:29:49.528Z","type":"message"}
{"nick":"brson","date":"2013-02-21T21:30:25.373Z","type":"join"}
{"nick":"trevnorris","message":"TooTallNate: well, at least we can optimize it for internal usage. that's part of what I did for the ticker.","date":"2013-02-21T21:30:34.118Z","type":"message"}
{"nick":"trevnorris","message":"and then use .apply() for userland stuff.","date":"2013-02-21T21:31:25.805Z","type":"message"}
{"nick":"trevnorris","message":"the one that really gets me is the use of double apply()'s for .once(). that is used all over core.","date":"2013-02-21T21:32:23.051Z","type":"message"}
{"nick":"indutny","message":"ttyl guys","date":"2013-02-21T21:33:11.713Z","type":"message"}
{"nick":"indutny","action":"&","date":"2013-02-21T21:33:13.066Z","type":"action"}
{"nick":"LOUDBOT","message":"AND ALL THIS LIQUOR","date":"2013-02-21T21:33:13.463Z","type":"message"}
{"nick":"CoverSlide","action":"&","date":"2013-02-21T21:34:17.161Z","type":"action"}
{"nick":"LOUDBOT","message":"OH SHIT GET YOUR EYES FOR A HUNK'A, A SLAB A SLICE OF CHEESE\" ","date":"2013-02-21T21:34:17.544Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-02-21T21:36:06.631Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-02-21T21:37:01.803Z","type":"join"}
{"nick":"mikeal","date":"2013-02-21T21:39:19.840Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 276 seconds","date":"2013-02-21T21:39:24.416Z","type":"quit"}
{"nick":"tjfontaine","message":"bnoordhuis: how acceptable/unacceptable is that libuv tap change?","date":"2013-02-21T21:41:04.469Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: what libuv tap change? (still catching up on my email)","date":"2013-02-21T21:43:02.095Z","type":"message"}
{"nick":"loladiro","date":"2013-02-21T21:43:02.577Z","type":"join"}
{"nick":"tjfontaine","message":"bnoordhuis: https://github.com/joyent/libuv/pull/717","date":"2013-02-21T21:43:38.414Z","type":"message"}
{"nick":"mikeal","reason":"Ping timeout: 255 seconds","date":"2013-02-21T21:43:53.632Z","type":"quit"}
{"nick":"TheJH","reason":"Read error: Operation timed out","date":"2013-02-21T21:44:27.441Z","type":"quit"}
{"nick":"bnoordhuis","message":"tjfontaine: looks reasonably acceptable","date":"2013-02-21T21:46:44.306Z","type":"message"}
{"nick":"tjfontaine","message":"ok, I'm not entirely sure what the right way to trigger it on windows","date":"2013-02-21T21:48:24.236Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: maybe a command line switch?","date":"2013-02-21T21:50:50.999Z","type":"message"}
{"nick":"txdv","reason":"Ping timeout: 245 seconds","date":"2013-02-21T21:51:16.078Z","type":"quit"}
{"nick":"tjfontaine","message":"bnoordhuis: well, I would have done a command line switch outright, except the way the runner does (or doesn't do) argument parsing, so things are fairly positional","date":"2013-02-21T21:51:54.762Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-02-21T21:57:02.845Z","type":"quit"}
{"nick":"isaacs","message":"hm.. v8 3.16 is looking pretty enticing","date":"2013-02-21T21:59:39.062Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: +1","date":"2013-02-21T22:01:00.986Z","type":"message"}
{"nick":"mikeal","date":"2013-02-21T22:01:24.689Z","type":"join"}
{"nick":"Raynos","message":"isaacs: thanks for making streams2 nicer :)","date":"2013-02-21T22:06:11.106Z","type":"message"}
{"nick":"qmx|away","reason":"Excess Flood","date":"2013-02-21T22:17:16.173Z","type":"quit"}
{"nick":"rendar","date":"2013-02-21T22:18:49.059Z","type":"quit"}
{"nick":"qmx","date":"2013-02-21T22:18:50.415Z","type":"join"}
{"nick":"isaacs","message":"Raynos: so, that patch i gave you is not so great.","date":"2013-02-21T22:24:34.435Z","type":"message"}
{"nick":"isaacs","message":"Raynos: found a bug with it","date":"2013-02-21T22:24:48.599Z","type":"message"}
{"nick":"isaacs","message":"Raynos: but.... here's kind of a weird edge case..","date":"2013-02-21T22:24:57.660Z","type":"message"}
{"nick":"isaacs","message":"Raynos: so, you are, let's say, in the _read function","date":"2013-02-21T22:25:10.566Z","type":"message"}
{"nick":"isaacs","message":"Raynos: and you do var ret = this.push(someBigThing)","date":"2013-02-21T22:25:20.895Z","type":"message"}
{"nick":"isaacs","message":"Raynos: synchronously","date":"2013-02-21T22:25:32.301Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2013-02-21T22:25:41.085Z","type":"message"}
{"nick":"Raynos","message":"oh","date":"2013-02-21T22:25:44.996Z","type":"message"}
{"nick":"isaacs","message":"Raynos: it returns false.","date":"2013-02-21T22:25:45.613Z","type":"message"}
{"nick":"Raynos","message":"infinite loop","date":"2013-02-21T22:25:47.499Z","type":"message"}
{"nick":"isaacs","message":"Raynos: nono, not that","date":"2013-02-21T22:25:50.981Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2013-02-21T22:25:51.306Z","type":"message"}
{"nick":"isaacs","message":"however, the read() call was going to pull in as much as you give it","date":"2013-02-21T22:26:03.624Z","type":"message"}
{"nick":"isaacs","message":"so you're not actually over the hwm, because it'll just return it all now anyway","date":"2013-02-21T22:26:22.222Z","type":"message"}
{"nick":"Raynos","message":"oh wait","date":"2013-02-21T22:26:31.883Z","type":"message"}
{"nick":"isaacs","message":"as it re-evaluates the return size on read(<noargs>)","date":"2013-02-21T22:26:36.290Z","type":"message"}
{"nick":"Raynos","message":"read() calls _read synchronously","date":"2013-02-21T22:26:38.124Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-02-21T22:26:40.902Z","type":"message"}
{"nick":"Raynos","message":"and then returns whats in the buffer","date":"2013-02-21T22:26:45.471Z","type":"message"}
{"nick":"brson","date":"2013-02-21T22:26:47.230Z","type":"join"}
{"nick":"isaacs","message":"and in this case, _read calls its cb (in the form of push(bigThing) also sync)","date":"2013-02-21T22:26:57.460Z","type":"message"}
{"nick":"isaacs","message":"read() is smart enough to know that _read was sync","date":"2013-02-21T22:27:07.484Z","type":"message"}
{"nick":"brson","reason":"Client Quit","date":"2013-02-21T22:27:09.175Z","type":"quit"}
{"nick":"isaacs","message":"so it re-evaluates the amount to return","date":"2013-02-21T22:27:12.423Z","type":"message"}
{"nick":"brson","date":"2013-02-21T22:27:22.894Z","type":"join"}
{"nick":"isaacs","message":"so... in this case, the \"false\" return from push() is a bit misleading.","date":"2013-02-21T22:27:23.116Z","type":"message"}
{"nick":"isaacs","message":"because you actually CAN take more data right now","date":"2013-02-21T22:27:28.274Z","type":"message"}
{"nick":"Raynos","message":"we used to fix this with `return rs.needReable or length < hwm`","date":"2013-02-21T22:27:34.507Z","type":"message"}
{"nick":"isaacs","message":"but i guess it'll just call _read anyway.","date":"2013-02-21T22:27:35.584Z","type":"message"}
{"nick":"isaacs","message":"no, we used to just not fix this :0","date":"2013-02-21T22:27:45.834Z","type":"message"}
{"nick":"Raynos","message":"the only downside","date":"2013-02-21T22:27:51.308Z","type":"message"}
{"nick":"Raynos","message":"is for push sources","date":"2013-02-21T22:27:54.130Z","type":"message"}
{"nick":"Raynos","message":"where you unnecessary pause / resume it","date":"2013-02-21T22:27:59.461Z","type":"message"}
{"nick":"Raynos","message":"and pause / resume is expensive","date":"2013-02-21T22:28:03.232Z","type":"message"}
{"nick":"Raynos","message":"you should just fix this with bigger watermarks :P","date":"2013-02-21T22:28:09.622Z","type":"message"}
{"nick":"Raynos","message":"in fact if you push in a single chunk thats large then your hwm then thats silly","date":"2013-02-21T22:28:19.132Z","type":"message"}
{"nick":"MI61","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.8\u000f * \u000286ae8b3\u0002 : unix: handle EINPROGRESS for unix sockets  Before this commit, it was ass (+1 more commits) - http://git.io/Vd1OIg","date":"2013-02-21T22:29:27.195Z","type":"message"}
{"nick":"MI61","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00023348cd7\u0002 : unix: handle EINPROGRESS for unix sockets  Before this commit, it was ass - http://git.io/JSj4vA","date":"2013-02-21T22:29:30.187Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: it was ass?","date":"2013-02-21T22:31:07.730Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: yep.","date":"2013-02-21T22:32:01.191Z","type":"message"}
{"nick":"isaacs","message":"basically","date":"2013-02-21T22:32:02.840Z","type":"message"}
{"nick":"trevnorris","message":"lol","date":"2013-02-21T22:32:07.686Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-02-21T22:32:37.235Z","type":"quit"}
{"nick":"isaacs","message":"Raynos: https://github.com/isaacs/node/commit/89148d4b68c06a86945b84a1529d0d1806f4f695","date":"2013-02-21T22:32:45.898Z","type":"message"}
{"nick":"bradleymeck","date":"2013-02-21T22:32:50.614Z","type":"join"}
{"nick":"isaacs","message":"TooTallNate: can you review this? https://github.com/joyent/node/pull/4828","date":"2013-02-21T22:32:54.097Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: i think you're probably the core committer with the most streams2 usage experience, after me.","date":"2013-02-21T22:33:22.137Z","type":"message"}
{"nick":"isaacs","message":"though indutny is probably also up there, after crypto streams :)","date":"2013-02-21T22:33:41.380Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: ya probably :) and ya lwm has always seemed a little weird to me","date":"2013-02-21T22:33:59.525Z","type":"message"}
{"nick":"TooTallNate","message":"semantically","date":"2013-02-21T22:34:02.732Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-02-21T22:34:07.278Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: sorry?","date":"2013-02-21T22:37:55.998Z","type":"message"}
{"nick":"bnoordhuis","message":"oh","date":"2013-02-21T22:38:02.232Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: referring to the MI61 post","date":"2013-02-21T22:38:05.777Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: is that a new MI61 ?","date":"2013-02-21T22:38:14.397Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: it's got a 1 on it","date":"2013-02-21T22:38:17.896Z","type":"message"}
{"nick":"tjfontaine","message":"heh, because tcp is hard and when it got reconnected to freenode the ghost was still there :)","date":"2013-02-21T22:38:42.992Z","type":"message"}
{"nick":"MI61","reason":"Remote host closed the connection","date":"2013-02-21T22:38:59.436Z","type":"quit"}
{"nick":"MI6","date":"2013-02-21T22:39:09.119Z","type":"join"}
{"nick":"isaacs","message":"heh","date":"2013-02-21T22:42:33.192Z","type":"message"}
{"nick":"isaacs","message":"Raynos: \"At 2013-02-21T01:57:09.553Z, in #Node.js, Raynos said: You should probably bitch at people about Writable not being correct. I wouldnt be  suprised if its full of bugs","date":"2013-02-21T22:43:56.223Z","type":"message"}
{"nick":"isaacs","message":"Raynos: ?","date":"2013-02-21T22:43:59.308Z","type":"message"}
{"nick":"isaacs","message":"Raynos: writable is not correct?","date":"2013-02-21T22:44:04.196Z","type":"message"}
{"nick":"Raynos","message":"i was grumpy last night","date":"2013-02-21T22:44:28.163Z","type":"message"}
{"nick":"Raynos","message":"I havn't abstracted, used or debugged Writable","date":"2013-02-21T22:44:35.525Z","type":"message"}
{"nick":"Raynos","message":"Given the complexity of objectMode Readable I just assume there are unhandled edge cases in objectMode Writable","date":"2013-02-21T22:45:00.374Z","type":"message"}
{"nick":"isaacs","message":"oh, maybe","date":"2013-02-21T22:45:20.111Z","type":"message"}
{"nick":"isaacs","message":"it's WAY simpler, though, actually","date":"2013-02-21T22:45:23.810Z","type":"message"}
{"nick":"isaacs","message":"and also not very new.","date":"2013-02-21T22:45:27.703Z","type":"message"}
{"nick":"TooTallNate","message":"seems to be working for me","date":"2013-02-21T22:45:53.945Z","type":"message"}
{"nick":"isaacs","message":"as for the object mode-ness of it, i dunno","date":"2013-02-21T22:45:55.804Z","type":"message"}
{"nick":"TooTallNate","message":"even objectMode :)","date":"2013-02-21T22:45:58.284Z","type":"message"}
{"nick":"isaacs","message":"maybe broken, don't really care :)","date":"2013-02-21T22:46:00.620Z","type":"message"}
{"nick":"TooTallNate","message":"oh actually i'm using Transform objectMode","date":"2013-02-21T22:46:24.936Z","type":"message"}
{"nick":"TooTallNate","message":"but where the writable end is normal and the readable side outputs objects","date":"2013-02-21T22:46:40.140Z","type":"message"}
{"nick":"TooTallNate","action":"still needs to make a patch for that API","date":"2013-02-21T22:46:51.809Z","type":"action"}
{"nick":"isaacs","message":"bnoordhuis: review? https://github.com/isaacs/node/compare/path-resolve-nonstring-typeerror","date":"2013-02-21T22:47:44.780Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: this seems unnecessary to me but i'm probably missing something https://github.com/joyent/node/commit/6bd450155c36f9e3dbaa8e4d6261e5e447af0a9a#commitcomment-2669147","date":"2013-02-21T22:51:25.520Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: why wouln't you just begin reading again if there's nothing to return? and not invoke the callback","date":"2013-02-21T22:52:10.484Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: read through lib/tls.js, starting on line 384","date":"2013-02-21T22:53:03.996Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-21T22:53:08.942Z","type":"quit"}
{"nick":"isaacs","message":"TooTallNate: if we're resuming the session, or if there was just no bytes to read from openssl, we return '' so that we can signal that we're done reading","date":"2013-02-21T22:53:48.136Z","type":"message"}
{"nick":"isaacs","message":"otherwise state.reading is still true","date":"2013-02-21T22:53:53.465Z","type":"message"}
{"nick":"isaacs","message":"and it won't try to _read() again","date":"2013-02-21T22:53:57.195Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: of course, you should only do this if you're reasonably sure that you'll call read() at soem point in the future regardless.","date":"2013-02-21T22:55:34.125Z","type":"message"}
{"nick":"isaacs","message":"in cryptostreams, we call read(0) whenever we think there *might* be data availabe","date":"2013-02-21T22:55:44.916Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: i guess my question is: if you return cb(null, ''), when does _read() get called next?","date":"2013-02-21T22:58:11.995Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: when we call read(0) some time in the future","date":"2013-02-21T22:58:27.465Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: ie, if the encrypted side or the readable side get written to","date":"2013-02-21T22:58:46.953Z","type":"message"}
{"nick":"isaacs","message":"crypto is a very complicated double-duplex monster.","date":"2013-02-21T22:59:00.148Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: shouldn't it get called immediately, as long as it's < hwm?","date":"2013-02-21T22:59:05.187Z","type":"message"}
{"nick":"TooTallNate","message":"s/immediately/nextTick","date":"2013-02-21T22:59:11.623Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: no, because we bail out of the onread fucntion when that happens","date":"2013-02-21T23:00:26.603Z","type":"message"}
{"nick":"isaacs","message":"  if (!state.objectMode &&","date":"2013-02-21T23:00:27.129Z","type":"message"}
{"nick":"isaacs","message":"      (chunk || typeof chunk === 'string') &&","date":"2013-02-21T23:00:27.270Z","type":"message"}
{"nick":"isaacs","message":"      0 === chunk.length)","date":"2013-02-21T23:00:27.270Z","type":"message"}
{"nick":"isaacs","message":"    return;","date":"2013-02-21T23:00:27.270Z","type":"message"}
{"nick":"TooTallNate","message":"but why?","date":"2013-02-21T23:00:59.700Z","type":"message"}
{"nick":"TooTallNate","message":"it just really seems like if crypto depends on this feature, then it's not implemented correctly","date":"2013-02-21T23:01:32.312Z","type":"message"}
{"nick":"isaacs","message":"because that'd just triger another call to _read() which has already told us that it doesn't have anythign for us","date":"2013-02-21T23:01:48.109Z","type":"message"}
{"nick":"isaacs","message":"think about it, _read() said \"No data now, come back later maybe\"","date":"2013-02-21T23:02:02.065Z","type":"message"}
{"nick":"isaacs","message":"if we call read(0) right away, we're just being rude","date":"2013-02-21T23:02:19.290Z","type":"message"}
{"nick":"isaacs","message":"at some point in the future, we'll call read() and get something or not, and then that's great.","date":"2013-02-21T23:02:54.184Z","type":"message"}
{"nick":"TooTallNate","message":"i just think the stream class is doing too much work atm","date":"2013-02-21T23:03:15.777Z","type":"message"}
{"nick":"TooTallNate","message":"this state should be kept by crypto or whatever is implementing IMO","date":"2013-02-21T23:03:32.270Z","type":"message"}
{"nick":"TooTallNate","message":"and then you just… don't call the cb() before you have data","date":"2013-02-21T23:03:47.141Z","type":"message"}
{"nick":"benoitc","date":"2013-02-21T23:03:50.740Z","type":"join"}
{"nick":"isaacs","message":"right, but then a) you don't know whether you have data until you check, and the answer might be no, and b) it won't call _read again while it's already got a _read pending, so you end up having to track all the same state in 2 places.","date":"2013-02-21T23:04:37.411Z","type":"message"}
{"nick":"isaacs","message":"or just manually hit this._readableState.reading = false, which is even dirtier","date":"2013-02-21T23:04:57.866Z","type":"message"}
{"nick":"isaacs","message":"another option is to say that \"no data\" is not EOF, and have an explicit way to signal EOF.","date":"2013-02-21T23:05:34.629Z","type":"message"}
{"nick":"isaacs","message":"like a different method or somethign","date":"2013-02-21T23:05:42.620Z","type":"message"}
{"nick":"isaacs","message":"but we end up witht eh same issues.","date":"2013-02-21T23:05:46.703Z","type":"message"}
{"nick":"isaacs","message":"eofTimeNao = function() { this.push(null; }","date":"2013-02-21T23:06:05.417Z","type":"message"}
{"nick":"isaacs","message":"and if you do get null from _read, you still have to know \"Hey, there's nothing now, but i should come back again later when i thin there might be more\"","date":"2013-02-21T23:06:32.088Z","type":"message"}
{"nick":"isaacs","message":"it's easy for transform streams, because you can call cb() when you know you want more stuff.","date":"2013-02-21T23:07:25.127Z","type":"message"}
{"nick":"trevnorris","message":"and this is why i enjoy fine tuning the internals.","date":"2013-02-21T23:07:26.137Z","type":"message"}
{"nick":"isaacs","message":"but that's where you have a clear \"my writer goes to my reader\" kind of thing","date":"2013-02-21T23:07:34.706Z","type":"message"}
{"nick":"isaacs","message":"in teh case of crypto, you might have many kb of data bak and forth with the client over the crypt side, before you ever get any cleartext data.","date":"2013-02-21T23:08:05.918Z","type":"message"}
{"nick":"isaacs","message":"so it's not just that the enc readable goes to the clear writable and vice versa","date":"2013-02-21T23:08:22.266Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: i think the 2 crypto streams should do more communicating (using i.e. events) rather then relying on the stream interface","date":"2013-02-21T23:08:59.842Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: maybe.","date":"2013-02-21T23:09:11.624Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: i think we should revisit that for 0.12 :)","date":"2013-02-21T23:09:16.990Z","type":"message"}
{"nick":"TooTallNate","message":"well…","date":"2013-02-21T23:09:27.734Z","type":"message"}
{"nick":"TooTallNate","message":"it'll be harder to remove the feature then :p","date":"2013-02-21T23:09:39.608Z","type":"message"}
{"nick":"TooTallNate","message":"plus, atm it's an inconsistent feature","date":"2013-02-21T23:09:52.975Z","type":"message"}
{"nick":"TooTallNate","message":"since it doesn't work in objectMode https://github.com/joyent/node/issues/4819","date":"2013-02-21T23:10:04.334Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.8\u000f * \u0002ef94521\u0002 : zlib: fix assert on bad input  The following test case occasionally trigg - http://git.io/nZghTQ","date":"2013-02-21T23:10:40.398Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: i'm just saying that with some of the crazy stream multiplexing things i've implemented so far with streams2, i would have expected to run into this feature if it was really needed...","date":"2013-02-21T23:11:09.699Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: your crazy stream multiplexing things are not tls","date":"2013-02-21T23:11:47.835Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: it's the craziest","date":"2013-02-21T23:11:53.959Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis, tjfontaine: thanks again for the strace and gdb tutorials. don't know how I lived w/o those before.","date":"2013-02-21T23:12:02.679Z","type":"message"}
{"nick":"TooTallNate","message":"a part of me wishes Readable and friends were *even more* abstract then they are right now","date":"2013-02-21T23:12:17.917Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: my employer would also have me suggest you checkout mdb and dtrace on smartos next :)","date":"2013-02-21T23:12:25.662Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: i think we can get away with removing it in 0.12 if we're going to fix tls up","date":"2013-02-21T23:12:30.144Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-02-21T23:12:51.623Z","type":"quit"}
{"nick":"isaacs","message":"TooTallNate: i'm not sure Raynos actually needs it for object streams.","date":"2013-02-21T23:12:51.754Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: the thing is, if you use this, you'll potentially never know when to call _read again","date":"2013-02-21T23:13:06.156Z","type":"message"}
{"nick":"TooTallNate","message":"no he doesn't… he just wants it for convenience","date":"2013-02-21T23:13:07.670Z","type":"message"}
{"nick":"Raynos","message":"need what?","date":"2013-02-21T23:13:11.745Z","type":"message"}
{"nick":"isaacs","message":"Raynos: https://github.com/joyent/node/issues/4819","date":"2013-02-21T23:13:18.007Z","type":"message"}
{"nick":"TooTallNate","message":"Raynos: cb(null, '')","date":"2013-02-21T23:13:20.288Z","type":"message"}
{"nick":"Raynos","message":"oh you want to get rid of no data","date":"2013-02-21T23:13:23.552Z","type":"message"}
{"nick":"Raynos","message":"I like cb(null, undefined","date":"2013-02-21T23:13:28.836Z","type":"message"}
{"nick":"TooTallNate","message":"i want to, ya","date":"2013-02-21T23:13:29.936Z","type":"message"}
{"nick":"isaacs","message":"Raynos: i'd love to get rid of it for all streams, but i don't see a way to do crypto without t","date":"2013-02-21T23:13:36.889Z","type":"message"}
{"nick":"TooTallNate","message":"no, it's too high-level","date":"2013-02-21T23:13:38.344Z","type":"message"}
{"nick":"isaacs","message":"atm, i consider this an internal interface.","date":"2013-02-21T23:13:47.963Z","type":"message"}
{"nick":"isaacs","message":"that's why 'cb(null,\"\")` is not documented","date":"2013-02-21T23:13:56.269Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: well that's a good start - let's keep it that way :)","date":"2013-02-21T23:14:15.857Z","type":"message"}
{"nick":"Raynos","message":"ok it doesnt matter anyway","date":"2013-02-21T23:14:19.251Z","type":"message"}
{"nick":"Raynos","message":"I can just put it in read-stream","date":"2013-02-21T23:14:22.606Z","type":"message"}
{"nick":"Raynos","message":"that will work","date":"2013-02-21T23:14:24.897Z","type":"message"}
{"nick":"isaacs","message":"sure, userland ftw :)","date":"2013-02-21T23:14:35.081Z","type":"message"}
{"nick":"TooTallNate","message":"Raynos: ya totally, a higher level interface is where that belongs :)","date":"2013-02-21T23:14:42.981Z","type":"message"}
{"nick":"isaacs","message":"recall: I'm even somewhat against objectMode in principle anyway","date":"2013-02-21T23:15:03.998Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: keep hearing about those. i'll look into them eventually. =)","date":"2013-02-21T23:15:04.540Z","type":"message"}
{"nick":"tjfontaine","message":"I'll admit I am still mostly a printf/strace/gdb guy","date":"2013-02-21T23:15:40.546Z","type":"message"}
{"nick":"tjfontaine","message":"but largely because that's what I have the most experience with","date":"2013-02-21T23:15:51.951Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: this is an example of using events over cb(null, ''): https://github.com/TooTallNate/node-flv/blob/master/lib/decoder-stream.js#L36-L41","date":"2013-02-21T23:16:31.501Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: i'm not disagreeing with the principle here.  just with hte urgency of changing the implementation.","date":"2013-02-21T23:17:20.601Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: on linux there's also systemtap which is similar to dtrace","date":"2013-02-21T23:17:20.775Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: saying that in the office will get you a demerit","date":"2013-02-21T23:17:36.005Z","type":"message"}
{"nick":"isaacs","message":"just sayin","date":"2013-02-21T23:17:37.949Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: fair enough","date":"2013-02-21T23:17:38.327Z","type":"message"}
{"nick":"isaacs","message":";)","date":"2013-02-21T23:17:39.961Z","type":"message"}
{"nick":"Raynos","message":"isaacs: good point, objectMode is out of scope but dear god the buffering nightmare ;_;","date":"2013-02-21T23:17:48.864Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: I didn't say it aloud of course :)","date":"2013-02-21T23:17:53.382Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: i'd like ot rewrite tls.js entirely.  but indutny was kind enough to duct tape it into shape","date":"2013-02-21T23:17:56.560Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: cool i'll look into it. thanks.","date":"2013-02-21T23:18:01.972Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: and made it way faster in the process :)","date":"2013-02-21T23:18:04.339Z","type":"message"}
{"nick":"isaacs","message":"which is always a plus","date":"2013-02-21T23:18:08.481Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: re https://github.com/isaacs/node/compare/path-resolve-nonstring-typeerror, lgtm","date":"2013-02-21T23:18:11.053Z","type":"message"}
{"nick":"TooTallNate","message":"ya that's badass","date":"2013-02-21T23:18:11.685Z","type":"message"}
{"nick":"TooTallNate","message":"indutny++","date":"2013-02-21T23:18:13.545Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u0002089ec58\u0002 : path: Throw TypeError on non-string args to path.resolve - http://git.io/7kdbpg","date":"2013-02-21T23:18:56.853Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: thanks","date":"2013-02-21T23:18:57.638Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: so, anyway... how do you feel about removing lowWaterMark, and reading up to the highWaterMark?","date":"2013-02-21T23:19:29.321Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: https://github.com/joyent/node/pull/4828","date":"2013-02-21T23:19:32.356Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: yup, sorry, got distracted for a second :)","date":"2013-02-21T23:19:44.285Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f created branch pr/4828 - http://git.io/Mlobvg","date":"2013-02-21T23:20:40.961Z","type":"message"}
{"nick":"Raynos","message":"isaacs: +1 on those changes btw","date":"2013-02-21T23:20:45.862Z","type":"message"}
{"nick":"isaacs","message":"hmmm... that doesn't quite work, i guess...","date":"2013-02-21T23:20:54.697Z","type":"message"}
{"nick":"loladiro","date":"2013-02-21T23:21:31.189Z","type":"join"}
{"nick":"isaacs","message":"hm.  you can't push to the pull-req ref.","date":"2013-02-21T23:22:05.337Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: wha?","date":"2013-02-21T23:24:57.309Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: lwm changes seem good to me","date":"2013-02-21T23:25:07.329Z","type":"message"}
{"nick":"isaacs","message":"kewl","date":"2013-02-21T23:25:15.989Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: pop open your .git/config in your favorite text editor","date":"2013-02-21T23:25:29.531Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate:  in the [remote \"upstream or origin or whatever\"] section, add this line:","date":"2013-02-21T23:25:48.576Z","type":"message"}
{"nick":"isaacs","message":"  fetch = +refs/pull/*/head:refs/remotes/ry/pr/*","date":"2013-02-21T23:25:51.604Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: now git fetch -a originorwhatever will pull down a bunch of \"pr/12345\" type refs","date":"2013-02-21T23:26:04.358Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: so i can do `git merge ry/pr/4828` to merge in my lwm pull req","date":"2013-02-21T23:26:32.964Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: then `git pull --rebase ry master` to rebase onto the latest master.","date":"2013-02-21T23:26:44.894Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: wow that's a badass trick","date":"2013-02-21T23:26:58.191Z","type":"message"}
{"nick":"isaacs","message":"then `git push ry-push master` to push it, and this happens:","date":"2013-02-21T23:27:18.086Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u0002a63c28e\u0002 : stream: Return false from push() more properly  There are cases where a p (+1 more commits) - http://git.io/gNzvbQ","date":"2013-02-21T23:27:27.403Z","type":"message"}
{"nick":"isaacs","message":"(i have ry pointing at the read-only repo, so i'm less likely to push by mistake)","date":"2013-02-21T23:27:37.134Z","type":"message"}
{"nick":"tjfontaine","message":"I remember being extremely happy when bert showed me the pr refs","date":"2013-02-21T23:27:54.264Z","type":"message"}
{"nick":"isaacs","message":"yes, it's very nice","date":"2013-02-21T23:28:01.602Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: i do the same (different names) origin=read-only, upstream=pushable","date":"2013-02-21T23:28:26.908Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-21T23:28:49.696Z","type":"quit"}
{"nick":"isaacs","message":"TooTallNate: my origin is isaacs/node","date":"2013-02-21T23:28:50.933Z","type":"message"}
{"nick":"isaacs","message":"i have a bunch of bash shortcuts that assume that origin will always be a git repo with \"isaacs\" in the url","date":"2013-02-21T23:29:21.291Z","type":"message"}
{"nick":"c4milo","date":"2013-02-21T23:29:24.497Z","type":"join"}
{"nick":"trevnorris","message":"if anyone has a spare hour, here are my event emitter changes in progress: https://github.com/trevnorris/node/compare/emulsify-events","date":"2013-02-21T23:30:46.951Z","type":"message"}
{"nick":"c4milo","reason":"Ping timeout: 244 seconds","date":"2013-02-21T23:34:19.162Z","type":"quit"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-02-21T23:41:32.344Z","type":"nick"}
{"nick":"bnoordhuis","message":"\"emulsify\" :)","date":"2013-02-21T23:41:38.343Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: https://github.com/trevnorris/node/compare/emulsify-events#L1R48","date":"2013-02-21T23:42:32.890Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: should be ||","date":"2013-02-21T23:42:35.536Z","type":"message"}
{"nick":"trevnorris","message":"well, you found that fast. =P","date":"2013-02-21T23:43:37.941Z","type":"message"}
{"nick":"trevnorris","message":"thanks","date":"2013-02-21T23:43:41.217Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: not sure if it's still going to be an issue on 3.16, but you should try to avoid early returns in these small strongly-typed functions","date":"2013-02-21T23:45:21.738Z","type":"message"}
{"nick":"isaacs","message":"speaking of which, running tests now on v8 3.16","date":"2013-02-21T23:45:41.222Z","type":"message"}
{"nick":"trevnorris","message":"oh really? interesting.","date":"2013-02-21T23:46:07.338Z","type":"message"}
{"nick":"trevnorris","message":"and what do you mean by \"running tests now\"? you already have it ported to master?","date":"2013-02-21T23:46:24.160Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: are you considering a jump before .10?","date":"2013-02-21T23:46:29.082Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: yeah, kinda","date":"2013-02-21T23:46:41.656Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: i'd like that. bnoordhuis mentioned a gc fix in 3.16","date":"2013-02-21T23:46:52.235Z","type":"message"}
{"nick":"isaacs","message":"it's a bit risky, but it also might reduce some of our speed regressions","date":"2013-02-21T23:46:54.850Z","type":"message"}
{"nick":"trevnorris","message":"being that many operations use 2x's the memory.","date":"2013-02-21T23:47:08.192Z","type":"message"}
{"nick":"isaacs","message":"simple/test-fs-readfile-error failed","date":"2013-02-21T23:47:18.320Z","type":"message"}
{"nick":"isaacs","message":"kinda odd.","date":"2013-02-21T23:47:19.719Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: you have a branch for 3.16?","date":"2013-02-21T23:47:36.564Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: i'll push it","date":"2013-02-21T23:47:45.614Z","type":"message"}
{"nick":"trevnorris","message":"=))","date":"2013-02-21T23:47:50.009Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: path.js 117 - punny code reporting missing space before (","date":"2013-02-21T23:48:18.099Z","type":"message"}
{"nick":"trevnorris","message":" *puny","date":"2013-02-21T23:48:31.372Z","type":"message"}
{"nick":"tjfontaine","message":"damn debugger repl tests","date":"2013-02-21T23:49:08.926Z","type":"message"}
{"nick":"Raynos","message":"isaacs: I think multiple pushes inside _read cb whilst length < hwm may not garantuee order of the things I push in because _read gets called synchronously inside push","date":"2013-02-21T23:52:33.287Z","type":"message"}
{"nick":"Raynos","message":"I would need to write a test case for this.","date":"2013-02-21T23:52:45.769Z","type":"message"}
{"nick":"isaacs","message":"hmm... it looks like V8 3.16 makes the `message` property on Errors less magical","date":"2013-02-21T23:55:12.626Z","type":"message"}
{"nick":"trevnorris","message":"less... magical?","date":"2013-02-21T23:55:36.972Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-02-21T23:56:53.557Z","type":"message"}
{"nick":"isaacs","message":"like, changing the message doesn't automatically update the stack trace","date":"2013-02-21T23:57:03.045Z","type":"message"}
{"nick":"isaacs","message":"kinda ruins our AssertionError class","date":"2013-02-21T23:57:11.443Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-21T23:58:03.622Z","type":"quit"}
{"nick":"indexzero","date":"2013-02-21T23:58:19.984Z","type":"join"}
{"nick":"isaacs","message":"ohh... it's like this.message is read-only or something","date":"2013-02-21T23:58:51.703Z","type":"message"}
