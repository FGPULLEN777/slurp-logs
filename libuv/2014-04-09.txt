{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-04-09T00:00:00.404Z","type":"quit"}
{"nick":"ircretary","date":"2014-04-09T00:00:08.296Z","type":"join"}
{"nick":"LeftWing","message":"trevnorris: I started on adding it to libuv at some point ... https://github.com/jclulow/libuv/compare/crosscall","date":"2014-04-09T00:00:41.701Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2014-04-09T00:01:24.151Z","type":"quit"}
{"nick":"trevnorris","message":"ooh, nice.","date":"2014-04-09T00:01:29.583Z","type":"message"}
{"nick":"tumdedum","reason":"Ping timeout: 255 seconds","date":"2014-04-09T00:04:20.485Z","type":"quit"}
{"nick":"tumdedum","date":"2014-04-09T00:11:58.477Z","type":"join"}
{"nick":"paulfryzel","date":"2014-04-09T00:13:48.626Z","type":"join"}
{"nick":"seldo","reason":"Remote host closed the connection","date":"2014-04-09T00:14:09.688Z","type":"quit"}
{"nick":"seldo","date":"2014-04-09T00:14:48.475Z","type":"join"}
{"nick":"guybrush","reason":"Excess Flood","date":"2014-04-09T00:16:35.077Z","type":"quit"}
{"nick":"stephank","date":"2014-04-09T00:16:35.560Z","type":"join"}
{"nick":"guybrush","date":"2014-04-09T00:17:04.893Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 246 seconds","date":"2014-04-09T00:18:11.612Z","type":"quit"}
{"nick":"rossk","reason":"Ping timeout: 240 seconds","date":"2014-04-09T00:18:18.471Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 250 seconds","date":"2014-04-09T00:25:05.260Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-09T00:26:56.215Z","type":"join"}
{"nick":"brunkle","reason":"Quit: brunkle","date":"2014-04-09T00:33:24.759Z","type":"quit"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2014-04-09T00:40:50.227Z","type":"quit"}
{"nick":"wolfeidau","date":"2014-04-09T00:40:59.883Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2014-04-09T00:41:07.874Z","type":"quit"}
{"nick":"seldo","reason":"Remote host closed the connection","date":"2014-04-09T00:42:55.067Z","type":"quit"}
{"nick":"benvie_","date":"2014-04-09T00:43:09.176Z","type":"join"}
{"nick":"seldo","date":"2014-04-09T00:43:33.514Z","type":"join"}
{"nick":"benvie","reason":"Ping timeout: 250 seconds","date":"2014-04-09T00:44:35.253Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2014-04-09T00:46:34.936Z","type":"quit"}
{"nick":"inolen","date":"2014-04-09T00:46:50.240Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-04-09T00:48:16.723Z","type":"quit"}
{"nick":"calvinfo","date":"2014-04-09T00:49:58.193Z","type":"join"}
{"nick":"thlorenz","date":"2014-04-09T00:51:23.608Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-04-09T00:51:58.508Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-04-09T00:52:13.447Z","type":"quit"}
{"nick":"Dirkson","message":"Hey all. So if I send a large amount of data via tcp, uv will break up the data into many separate sections for me, and will hand those sections to me one at a time, in order, in my tcp callback. So on the first run of the callback, I can read the first couple bytes of data, see my overall size, see what my data will be... How do I pass this information on to further calls of my receivetcp function?","date":"2014-04-09T00:53:29.420Z","type":"message"}
{"nick":"kazupon","date":"2014-04-09T00:57:46.623Z","type":"join"}
{"nick":"tjfontaine","message":"Dirkson: so -- tcp is a reliable in order transmission of what it's given","date":"2014-04-09T01:03:53.486Z","type":"message"}
{"nick":"sblom","reason":"Read error: Connection reset by peer","date":"2014-04-09T01:04:13.813Z","type":"quit"}
{"nick":"tjfontaine","message":"it's not about what uv will or won't do","date":"2014-04-09T01:04:14.338Z","type":"message"}
{"nick":"thlorenz","date":"2014-04-09T01:04:49.968Z","type":"join"}
{"nick":"tjfontaine","message":"as far as sending lots of data -- http://linux.die.net/man/2/write","date":"2014-04-09T01:04:59.130Z","type":"message"}
{"nick":"tjfontaine","message":"describes what the semantics are, not really about what libuv will do","date":"2014-04-09T01:05:15.104Z","type":"message"}
{"nick":"tjfontaine","message":"and related to how tcp itself also works","date":"2014-04-09T01:05:20.486Z","type":"message"}
{"nick":"stephank","reason":"Ping timeout: 240 seconds","date":"2014-04-09T01:06:42.378Z","type":"quit"}
{"nick":"Qard","reason":"Ping timeout: 240 seconds","date":"2014-04-09T01:08:58.193Z","type":"quit"}
{"nick":"stephank","date":"2014-04-09T01:11:09.314Z","type":"join"}
{"nick":"Dirkson","message":"tjfontaine: Well, I might want to write the data, sure... But to know if I want to do that, I need to check the first few bytes of data I send.","date":"2014-04-09T01:14:54.627Z","type":"message"}
{"nick":"Dirkson","message":"tjfontaine: And once the second callback happens, I lose access to the first bit of data in a particular stream.","date":"2014-04-09T01:16:14.613Z","type":"message"}
{"nick":"nifoc","reason":"Quit: Quit","date":"2014-04-09T01:17:18.340Z","type":"quit"}
{"nick":"euoia","date":"2014-04-09T01:17:33.310Z","type":"join"}
{"nick":"brunkle","date":"2014-04-09T01:17:35.190Z","type":"join"}
{"nick":"Dirkson","message":"And even if I did write it, I'd want to write different data to different places... Which is really hard to do if I can't tell which bit of data a particular callback is intended to reference.","date":"2014-04-09T01:18:08.067Z","type":"message"}
{"nick":"cosnis","date":"2014-04-09T01:19:26.289Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-04-09T01:22:48.981Z","type":"quit"}
{"nick":"bradleymeck","date":"2014-04-09T01:22:56.616Z","type":"join"}
{"nick":"cosnis","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2014-04-09T01:24:33.265Z","type":"quit"}
{"nick":"seldo","reason":"Remote host closed the connection","date":"2014-04-09T01:25:49.379Z","type":"quit"}
{"nick":"seldo","date":"2014-04-09T01:27:49.464Z","type":"join"}
{"nick":"seldo","reason":"Remote host closed the connection","date":"2014-04-09T01:27:59.870Z","type":"quit"}
{"nick":"nifoc","date":"2014-04-09T01:30:22.522Z","type":"join"}
{"nick":"brunkle","reason":"Quit: brunkle","date":"2014-04-09T01:35:40.374Z","type":"quit"}
{"nick":"euoia","reason":"Ping timeout: 240 seconds","date":"2014-04-09T01:38:18.181Z","type":"quit"}
{"nick":"daviddias","date":"2014-04-09T01:49:59.510Z","type":"join"}
{"nick":"calvinfo","date":"2014-04-09T01:53:18.725Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 246 seconds","date":"2014-04-09T01:54:26.569Z","type":"quit"}
{"nick":"Dirkson","message":"Am I expected to write a per-user state machine based on the incoming data?","date":"2014-04-09T01:55:03.649Z","type":"message"}
{"nick":"calvinfo","reason":"Ping timeout: 246 seconds","date":"2014-04-09T01:57:35.526Z","type":"quit"}
{"nick":"Orborde","message":"Dirkson is writing a network protocol that runs over TCP. He wants to know how he is supposed to do the stateful bookkeeping involved in parsing protocol messages that are going to arrive over multiple callbacks.","date":"2014-04-09T01:57:38.594Z","type":"message"}
{"nick":"tjfontaine","message":"yes, tcp doesn't really handle that for you, it's part of your application protocol","date":"2014-04-09T01:57:39.900Z","type":"message"}
{"nick":"tjfontaine","message":"ip has some of those semantics (describing the size of the packet) and tcp enforces that packets will be received in order","date":"2014-04-09T01:58:24.812Z","type":"message"}
{"nick":"tjfontaine","message":"but if you are abstracting data upon tcp, you will need to reconstruct that information on your own, through semantics you define","date":"2014-04-09T01:58:44.929Z","type":"message"}
{"nick":"tjfontaine","message":"http://en.wikipedia.org/wiki/OSI_model#Layer_7:_application_layer","date":"2014-04-09T02:00:00.089Z","type":"message"}
{"nick":"Dirkson","message":"It would be a lot easier if I could have access to a user data pointer in my receive TCP data function. Set it to be a pointer to a struct with information about what's going on. As-is, I think I need to make some sort of lookup table based on whatever value is in the uv_stream_t handed me?","date":"2014-04-09T02:00:52.835Z","type":"message"}
{"nick":"tjfontaine","message":"you can set data on the tcp connection","date":"2014-04-09T02:01:16.391Z","type":"message"}
{"nick":"Orborde","message":"Dirkson: Does uv_stream_t have some kind of \"void* userdata\" field?","date":"2014-04-09T02:01:36.047Z","type":"message"}
{"nick":"Orborde","message":"That's how C libraries usually do this sort of thing.","date":"2014-04-09T02:01:43.777Z","type":"message"}
{"nick":"tjfontaine","message":"yes it does","date":"2014-04-09T02:01:47.298Z","type":"message"}
{"nick":"tjfontaine","message":"->data","date":"2014-04-09T02:01:51.841Z","type":"message"}
{"nick":"Dirkson","message":"Huzzah! That'll solve it.","date":"2014-04-09T02:01:54.908Z","type":"message"}
{"nick":"Dirkson","message":"Still way damn messier than I expected from libuv :-/","date":"2014-04-09T02:03:10.421Z","type":"message"}
{"nick":"tjfontaine","message":"some of the api allows you to associated for *hint","date":"2014-04-09T02:03:46.214Z","type":"message"}
{"nick":"tjfontaine","message":"another solution is to wrap your tcp connection in a struct and use OFFSETOF","date":"2014-04-09T02:04:12.518Z","type":"message"}
{"nick":"Dirkson","message":"\"associated for *hint\" ?  I don't follow","date":"2014-04-09T02:04:34.148Z","type":"message"}
{"nick":"tjfontaine","message":"uv_something(foo, hint);","date":"2014-04-09T02:04:46.146Z","type":"message"}
{"nick":"Orborde","message":"In related news, C is a ridiculous language.","date":"2014-04-09T02:05:22.120Z","type":"message"}
{"nick":"Orborde","message":"Dirkson: This sort of crazy bookkeeping is why people often take the performance hit and use lots of threads.","date":"2014-04-09T02:05:51.979Z","type":"message"}
{"nick":"Orborde","message":"I think","date":"2014-04-09T02:06:02.321Z","type":"message"}
{"nick":"Orborde","message":"At least","date":"2014-04-09T02:06:04.745Z","type":"message"}
{"nick":"Orborde","message":"I'm willing to sacrifice 100x performance not to have to deal with this ;-)","date":"2014-04-09T02:06:16.911Z","type":"message"}
{"nick":"m76","reason":"Read error: Connection reset by peer","date":"2014-04-09T02:06:28.072Z","type":"quit"}
{"nick":"tjfontaine","message":"well in newer C or in apple land you can use blocks","date":"2014-04-09T02:06:30.245Z","type":"message"}
{"nick":"Orborde","message":"tjfontaine: blocks?","date":"2014-04-09T02:06:53.076Z","type":"message"}
{"nick":"tjfontaine","message":"http://en.wikipedia.org/wiki/Blocks_(C_language_extension)","date":"2014-04-09T02:07:12.805Z","type":"message"}
{"nick":"Orborde","message":"tjfontaine: Are these some kind of coroutine thing?","date":"2014-04-09T02:07:49.271Z","type":"message"}
{"nick":"brunkle","date":"2014-04-09T02:08:55.294Z","type":"join"}
{"nick":"Dirkson","message":"If I send a hunk of tcp data < 64kb long, is there any reason to expect it will arrive in two separate callbacks?","date":"2014-04-09T02:10:00.182Z","type":"message"}
{"nick":"Dirkson","message":"If it answer is \"Yes, the data can come in separate callbacks\", what is the size of data that /can't/ come in separate callbacks?","date":"2014-04-09T02:11:48.854Z","type":"message"}
{"nick":"Orborde","message":"Dirkson: betcha the answer is \"1 byte\" because of the potential for IP-level fragmentation","date":"2014-04-09T02:12:29.910Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2014-04-09T02:13:06.424Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-04-09T02:15:10.462Z","type":"quit"}
{"nick":"thlorenz","date":"2014-04-09T02:15:44.279Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 240 seconds","date":"2014-04-09T02:20:07.166Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2014-04-09T02:22:29.852Z","type":"quit"}
{"nick":"brunkle","reason":"Quit: brunkle","date":"2014-04-09T02:23:43.576Z","type":"quit"}
{"nick":"brunkle","date":"2014-04-09T02:27:09.272Z","type":"join"}
{"nick":"brunkle","reason":"Quit: brunkle","date":"2014-04-09T02:42:09.140Z","type":"quit"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2014-04-09T02:48:06.947Z","type":"quit"}
{"nick":"daviddias","date":"2014-04-09T02:51:18.484Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2014-04-09T02:53:27.204Z","type":"quit"}
{"nick":"brson","date":"2014-04-09T02:53:44.619Z","type":"join"}
{"nick":"calvinfo","date":"2014-04-09T02:54:06.309Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 246 seconds","date":"2014-04-09T02:55:20.502Z","type":"quit"}
{"nick":"Orborde","message":"saghul_: Can you verify the above?","date":"2014-04-09T02:56:07.587Z","type":"message"}
{"nick":"Orborde","message":"That libuv's TCP read handler callbacks could get called with arbitrarily small slices of incoming data, regardless of the size of the originating write() on the other end of the socket?","date":"2014-04-09T02:56:57.847Z","type":"message"}
{"nick":"paulfryz_","date":"2014-04-09T02:57:38.668Z","type":"join"}
{"nick":"calvinfo","reason":"Ping timeout: 240 seconds","date":"2014-04-09T02:58:18.177Z","type":"quit"}
{"nick":"paulfryz_","reason":"Ping timeout: 246 seconds","date":"2014-04-09T03:01:59.589Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-04-09T03:02:18.006Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-04-09T03:09:15.309Z","type":"join"}
{"nick":"Orborde","message":"Does libuv have a message-oriented transport protocol in it somewhere?","date":"2014-04-09T03:11:59.926Z","type":"message"}
{"nick":"Orborde","message":"That runs over TCP?","date":"2014-04-09T03:12:04.285Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2014-04-09T03:13:58.178Z","type":"quit"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2014-04-09T03:30:11.986Z","type":"quit"}
{"nick":"eugeneware","reason":"Quit: Connection closed for inactivity","date":"2014-04-09T03:41:26.844Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-04-09T03:42:17.192Z","type":"quit"}
{"nick":"calvinfo","date":"2014-04-09T03:45:48.688Z","type":"join"}
{"nick":"daviddias","date":"2014-04-09T03:51:43.231Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-04-09T03:51:58.682Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 246 seconds","date":"2014-04-09T03:54:08.499Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-04-09T03:55:30.441Z","type":"quit"}
{"nick":"daviddias","reason":"Ping timeout: 240 seconds","date":"2014-04-09T03:55:54.255Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 246 seconds","date":"2014-04-09T03:56:35.455Z","type":"quit"}
{"nick":"paulfryz_","date":"2014-04-09T03:58:17.751Z","type":"join"}
{"nick":"brunkle","date":"2014-04-09T03:59:20.239Z","type":"join"}
{"nick":"WalrusPony","reason":"Ping timeout: 240 seconds","date":"2014-04-09T04:00:54.802Z","type":"quit"}
{"nick":"c4milo","date":"2014-04-09T04:02:32.357Z","type":"join"}
{"nick":"paulfryz_","reason":"Ping timeout: 260 seconds","date":"2014-04-09T04:02:51.865Z","type":"quit"}
{"nick":"WalrusPony","date":"2014-04-09T04:08:27.565Z","type":"join"}
{"nick":"bradleymeck","date":"2014-04-09T04:21:45.970Z","type":"join"}
{"nick":"seldo","date":"2014-04-09T04:24:34.578Z","type":"join"}
{"nick":"seldo","reason":"Ping timeout: 240 seconds","date":"2014-04-09T04:28:58.360Z","type":"quit"}
{"nick":"rmg","date":"2014-04-09T04:31:30.959Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 240 seconds","date":"2014-04-09T04:35:43.199Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2014-04-09T04:53:15.271Z","type":"quit"}
{"nick":"c4milo","date":"2014-04-09T04:53:45.897Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2014-04-09T04:54:37.259Z","type":"quit"}
{"nick":"calvinfo","date":"2014-04-09T04:56:25.307Z","type":"join"}
{"nick":"paulfryz_","date":"2014-04-09T04:59:09.675Z","type":"join"}
{"nick":"paulfryz_","reason":"Ping timeout: 246 seconds","date":"2014-04-09T05:03:26.465Z","type":"quit"}
{"nick":"kazupon","date":"2014-04-09T05:07:09.249Z","type":"join"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2014-04-09T05:11:17.380Z","type":"quit"}
{"nick":"kenperkins","date":"2014-04-09T05:13:57.373Z","type":"join"}
{"nick":"mogill","reason":"Quit: mogill","date":"2014-04-09T05:17:33.632Z","type":"quit"}
{"nick":"mikeal","date":"2014-04-09T05:24:19.428Z","type":"join"}
{"nick":"daviddias","date":"2014-04-09T05:53:01.408Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 240 seconds","date":"2014-04-09T05:57:19.217Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-09T05:59:48.690Z","type":"join"}
{"nick":"janjongboom","date":"2014-04-09T06:03:54.460Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 246 seconds","date":"2014-04-09T06:03:59.461Z","type":"quit"}
{"nick":"AvianFlu","reason":"Ping timeout: 265 seconds","date":"2014-04-09T06:10:10.591Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-09T06:12:20.350Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection timed out","date":"2014-04-09T06:13:19.304Z","type":"quit"}
{"nick":"AvianFlu","date":"2014-04-09T06:14:07.588Z","type":"join"}
{"nick":"paulfryzel","reason":"Read error: No route to host","date":"2014-04-09T06:14:54.413Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-09T06:15:31.689Z","type":"join"}
{"nick":"kazupon","date":"2014-04-09T06:18:19.179Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 246 seconds","date":"2014-04-09T06:19:44.472Z","type":"quit"}
{"nick":"hueniverse","reason":"Quit: Leaving.","date":"2014-04-09T06:22:00.512Z","type":"quit"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-04-09T06:22:44.517Z","type":"quit"}
{"nick":"calvinfo","reason":"Ping timeout: 240 seconds","date":"2014-04-09T06:31:19.258Z","type":"quit"}
{"nick":"Dirkson","message":"Say - Why is the suggestion for UDP allocation 64kbs, when the maximum mtu is something closer to 1600 bytes?","date":"2014-04-09T06:31:37.421Z","type":"message"}
{"nick":"calvinfo","date":"2014-04-09T06:37:33.769Z","type":"join"}
{"nick":"calvinfo1","date":"2014-04-09T06:39:56.581Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-04-09T06:39:56.791Z","type":"quit"}
{"nick":"hz","date":"2014-04-09T06:40:49.147Z","type":"join"}
{"nick":"saghul_","message":"Dirkson: it's just a suggestion ;-)","date":"2014-04-09T06:54:53.201Z","type":"message"}
{"nick":"Dirkson","message":"saghul_: Right, but... What implodes if I ignore it? :D","date":"2014-04-09T06:56:48.799Z","type":"message"}
{"nick":"saghul_","message":"Dirkson: nothing!","date":"2014-04-09T06:56:58.528Z","type":"message"}
{"nick":"Dirkson","message":"saghul_: Great news! ^^","date":"2014-04-09T06:57:05.059Z","type":"message"}
{"nick":"saghul_","message":"Dirkson: it just lets libuv know how big the buffer is when calling recvmsg","date":"2014-04-09T06:57:28.629Z","type":"message"}
{"nick":"Dirkson","message":"saghul_: Also, while you're here - I think the way libuv's tcp wrapper is done, I have to assume that the blobs of data I send via tcp may arrive at the other end single, chopped in two, or even clumped together with other data I sent because of Nagle's algorithm. Is that correct?","date":"2014-04-09T06:58:36.089Z","type":"message"}
{"nick":"Dirkson","message":"I.e. I can't assume that my 500-byte packet will show up on the other end as a single call of the tcp callback.","date":"2014-04-09T06:59:10.110Z","type":"message"}
{"nick":"seldo","date":"2014-04-09T06:59:31.495Z","type":"join"}
{"nick":"paulfryzel","date":"2014-04-09T07:00:38.689Z","type":"join"}
{"nick":"saghul_","message":"yeah, I don't think you can assume that","date":"2014-04-09T07:00:39.542Z","type":"message"}
{"nick":"saghul_","message":"latest kernel even does some \"autocork\" thing","date":"2014-04-09T07:00:58.264Z","type":"message"}
{"nick":"Dirkson","message":"Autocork?","date":"2014-04-09T07:01:04.132Z","type":"message"}
{"nick":"Dirkson","message":"Well, drat. That ups the complexity of the bits I have to code a little. Not too bad - For small packets, I can just make a length-prepended thing without adding much overhead or difficulty.","date":"2014-04-09T07:01:26.466Z","type":"message"}
{"nick":"saghul_","message":"http://kernelnewbies.org/LinuxChanges#head-0fece6c93790364927fae7c33249ad66ed748d41","date":"2014-04-09T07:02:16.785Z","type":"message"}
{"nick":"saghul_","message":"checkout section 1.8","date":"2014-04-09T07:02:22.782Z","type":"message"}
{"nick":"saghul_","message":"yeah","date":"2014-04-09T07:02:38.622Z","type":"message"}
{"nick":"Dirkson","message":"saghul_: Hunh. I thought that WAS Nagle's algorithm","date":"2014-04-09T07:03:22.609Z","type":"message"}
{"nick":"seldo","reason":"Ping timeout: 240 seconds","date":"2014-04-09T07:04:07.346Z","type":"quit"}
{"nick":"Dirkson","message":"saghul_: https://en.wikipedia.org/wiki/Nagle%27s_algorithm - Compare : )","date":"2014-04-09T07:04:20.718Z","type":"message"}
{"nick":"saghul_","message":"if you use manual cork-ing, you can tell the kernel: \"hey, wait to send these packets until I tell you so\"","date":"2014-04-09T07:04:28.874Z","type":"message"}
{"nick":"paulfryzel","reason":"Ping timeout: 246 seconds","date":"2014-04-09T07:04:53.462Z","type":"quit"}
{"nick":"saghul_","message":"now, if the kernel does it automagically I really don't know how it differs from Nagle indeed","date":"2014-04-09T07:04:55.102Z","type":"message"}
{"nick":"Dirkson","message":"Right?","date":"2014-04-09T07:05:11.027Z","type":"message"}
{"nick":"saghul_","message":"maybe ot's a dofferent algorithm or something","date":"2014-04-09T07:05:28.026Z","type":"message"}
{"nick":"Dirkson","message":"Orborde: You were proved right about the tcp thing, but it seems like it's ok to shrink the udp allocater.","date":"2014-04-09T07:06:11.529Z","type":"message"}
{"nick":"Dirkson","message":"saghul_: Thanks for the info, by the way : )","date":"2014-04-09T07:06:22.625Z","type":"message"}
{"nick":"saghul_","message":"Dirkson: http://www.spinics.net/lists/netdev/msg260018.html","date":"2014-04-09T07:06:38.267Z","type":"message"}
{"nick":"saghul_","message":"anytime :-)","date":"2014-04-09T07:06:58.898Z","type":"message"}
{"nick":"Dirkson","message":"Interesting","date":"2014-04-09T07:08:02.118Z","type":"message"}
{"nick":"janjongboom","date":"2014-04-09T07:11:19.469Z","type":"join"}
{"nick":"paulfryzel","date":"2014-04-09T07:16:19.883Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-04-09T07:20:38.850Z","type":"quit"}
{"nick":"kazupon","reason":"Read error: Connection timed out","date":"2014-04-09T07:20:46.989Z","type":"quit"}
{"nick":"kevinsimper","date":"2014-04-09T07:21:42.100Z","type":"join"}
{"nick":"calvinfo1","reason":"Quit: Leaving.","date":"2014-04-09T07:24:04.517Z","type":"quit"}
{"nick":"hz","date":"2014-04-09T07:24:45.888Z","type":"quit"}
{"nick":"kazupon","date":"2014-04-09T07:30:18.413Z","type":"join"}
{"nick":"sinclair|work","date":"2014-04-09T07:30:58.394Z","type":"join"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-04-09T07:32:43.219Z","type":"quit"}
{"nick":"m76","date":"2014-04-09T07:38:58.592Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-04-09T07:40:13.192Z","type":"quit"}
{"nick":"janjongboom","date":"2014-04-09T07:50:21.455Z","type":"join"}
{"nick":"daviddias","date":"2014-04-09T07:57:46.227Z","type":"join"}
{"nick":"paulfryzel","date":"2014-04-09T08:01:21.680Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 246 seconds","date":"2014-04-09T08:05:47.483Z","type":"quit"}
{"nick":"kazupon","date":"2014-04-09T08:06:02.008Z","type":"join"}
{"nick":"brunkle","reason":"Quit: brunkle","date":"2014-04-09T08:12:29.868Z","type":"quit"}
{"nick":"WalrusPony","reason":"Read error: Connection reset by peer","date":"2014-04-09T08:14:20.708Z","type":"quit"}
{"nick":"janjongboom","reason":"Ping timeout: 250 seconds","date":"2014-04-09T08:14:23.527Z","type":"quit"}
{"nick":"janjongboom","date":"2014-04-09T08:15:23.326Z","type":"join"}
{"nick":"paulfryzel","date":"2014-04-09T08:17:00.272Z","type":"join"}
{"nick":"daviddias","reason":"Remote host closed the connection","date":"2014-04-09T08:21:05.021Z","type":"quit"}
{"nick":"daviddias","date":"2014-04-09T08:21:31.469Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 246 seconds","date":"2014-04-09T08:21:32.481Z","type":"quit"}
{"nick":"daviddias","reason":"Ping timeout: 246 seconds","date":"2014-04-09T08:25:44.491Z","type":"quit"}
{"nick":"daviddias","date":"2014-04-09T08:44:04.363Z","type":"join"}
{"nick":"indutny","message":"hey people","date":"2014-04-09T08:56:29.913Z","type":"message"}
{"nick":"indutny","message":"how are you?","date":"2014-04-09T08:56:34.222Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-04-09T08:59:16.237Z","type":"quit"}
{"nick":"janjongboom","reason":"Ping timeout: 240 seconds","date":"2014-04-09T09:00:18.442Z","type":"quit"}
{"nick":"kazupon","date":"2014-04-09T09:00:53.235Z","type":"join"}
{"nick":"eugeneware","date":"2014-04-09T09:01:05.343Z","type":"join"}
{"nick":"janjongboom","date":"2014-04-09T09:01:57.440Z","type":"join"}
{"nick":"seldo","date":"2014-04-09T09:02:49.474Z","type":"join"}
{"nick":"stagas","date":"2014-04-09T09:03:14.564Z","type":"join"}
{"nick":"Kakera","date":"2014-04-09T09:03:45.357Z","type":"join"}
{"nick":"seldo","reason":"Ping timeout: 240 seconds","date":"2014-04-09T09:07:06.231Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-09T09:17:55.683Z","type":"join"}
{"nick":"paulfryzel","reason":"Read error: No route to host","date":"2014-04-09T09:19:08.725Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-09T09:19:45.651Z","type":"join"}
{"nick":"daviddia_","date":"2014-04-09T09:19:48.254Z","type":"join"}
{"nick":"daviddias","reason":"Read error: No route to host","date":"2014-04-09T09:20:35.670Z","type":"quit"}
{"nick":"daviddias","date":"2014-04-09T09:20:53.355Z","type":"join"}
{"nick":"daviddia_","reason":"Ping timeout: 240 seconds","date":"2014-04-09T09:23:54.239Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-04-09T09:23:58.340Z","type":"quit"}
{"nick":"kazupon","reason":"Read error: Connection timed out","date":"2014-04-09T09:32:38.892Z","type":"quit"}
{"nick":"kazupon","date":"2014-04-09T09:33:13.402Z","type":"join"}
{"nick":"karupanerura","new_nick":"zz_karupanerura","date":"2014-04-09T09:45:07.366Z","type":"nick"}
{"nick":"janjongboom","reason":"Ping timeout: 250 seconds","date":"2014-04-09T09:45:23.431Z","type":"quit"}
{"nick":"janjongboom","date":"2014-04-09T09:46:31.436Z","type":"join"}
{"nick":"rmg","date":"2014-04-09T09:51:15.831Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 240 seconds","date":"2014-04-09T09:55:43.269Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-09T10:02:51.680Z","type":"join"}
{"nick":"Kakera","reason":"Ping timeout: 240 seconds","date":"2014-04-09T10:04:55.187Z","type":"quit"}
{"nick":"guybrush","reason":"Excess Flood","date":"2014-04-09T10:05:54.912Z","type":"quit"}
{"nick":"guybrush","date":"2014-04-09T10:06:10.953Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 246 seconds","date":"2014-04-09T10:07:14.466Z","type":"quit"}
{"nick":"Orborde","reason":"Quit: WeeChat 0.3.7","date":"2014-04-09T10:17:05.674Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-09T10:20:21.929Z","type":"join"}
{"nick":"saghul_","message":"aloha","date":"2014-04-09T10:24:04.103Z","type":"message"}
{"nick":"saghul_","message":"does anyone know if Bert is alive?","date":"2014-04-09T10:24:17.592Z","type":"message"}
{"nick":"paulfryzel","reason":"Ping timeout: 250 seconds","date":"2014-04-09T10:24:49.440Z","type":"quit"}
{"nick":"saghul_","message":"WHERE ART THOU PISCI?","date":"2014-04-09T10:25:50.725Z","type":"message"}
{"nick":"LOUDBOT","message":"WHICH IS KIND OF MORBID WHEN YOU THINK ABOUT IT.","date":"2014-04-09T10:25:52.422Z","type":"message"}
{"nick":"bajtos","date":"2014-04-09T10:27:02.782Z","type":"join"}
{"nick":"AlexisMocha_","date":"2014-04-09T10:29:55.154Z","type":"join"}
{"nick":"AlexisMocha","reason":"Ping timeout: 264 seconds","date":"2014-04-09T10:30:53.220Z","type":"quit"}
{"nick":"bajtos","reason":"Ping timeout: 250 seconds","date":"2014-04-09T10:31:45.666Z","type":"quit"}
{"nick":"hz","date":"2014-04-09T10:49:19.037Z","type":"join"}
{"nick":"petka_","date":"2014-04-09T10:57:56.517Z","type":"join"}
{"nick":"paulfryzel","date":"2014-04-09T11:03:42.723Z","type":"join"}
{"nick":"Orborde","date":"2014-04-09T11:03:55.788Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 246 seconds","date":"2014-04-09T11:08:09.049Z","type":"quit"}
{"nick":"daviddias","reason":"Remote host closed the connection","date":"2014-04-09T11:20:48.193Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-09T11:21:11.216Z","type":"join"}
{"nick":"daviddias","date":"2014-04-09T11:21:14.187Z","type":"join"}
{"nick":"Tailor","date":"2014-04-09T11:22:09.205Z","type":"join"}
{"nick":"Tailor","message":"hi","date":"2014-04-09T11:22:10.542Z","type":"message"}
{"nick":"Tailor","message":"How do I get the HTTP verb within node.native (libuv)? - https://github.com/d5/node.native/issues/37","date":"2014-04-09T11:22:27.663Z","type":"message"}
{"nick":"daviddias","reason":"Ping timeout: 240 seconds","date":"2014-04-09T11:25:19.463Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-04-09T11:25:30.277Z","type":"quit"}
{"nick":"saghul_","message":"Tailor: libuv doesn't implement HTTP","date":"2014-04-09T11:26:47.670Z","type":"message"}
{"nick":"saghul_","message":"you'll have to ask that to the node.native people","date":"2014-04-09T11:26:59.751Z","type":"message"}
{"nick":"Tailor","message":"mmm","date":"2014-04-09T11:32:46.406Z","type":"message"}
{"nick":"Tailor","reason":"Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/","date":"2014-04-09T11:55:41.731Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-04-09T12:03:02.726Z","type":"join"}
{"nick":"paulfryzel","date":"2014-04-09T12:04:24.681Z","type":"join"}
{"nick":"seldo","date":"2014-04-09T12:04:48.851Z","type":"join"}
{"nick":"euoia","date":"2014-04-09T12:07:22.661Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 246 seconds","date":"2014-04-09T12:08:41.465Z","type":"quit"}
{"nick":"seldo","reason":"Ping timeout: 250 seconds","date":"2014-04-09T12:09:41.509Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-04-09T12:18:06.857Z","type":"quit"}
{"nick":"kazupon","date":"2014-04-09T12:18:33.849Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2014-04-09T12:21:19.260Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-09T12:21:52.470Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2014-04-09T12:22:58.364Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-04-09T12:24:17.325Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-04-09T12:26:07.117Z","type":"quit"}
{"nick":"euoia","reason":"Ping timeout: 240 seconds","date":"2014-04-09T12:27:38.381Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-04-09T12:30:12.202Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-09T12:38:48.636Z","type":"join"}
{"nick":"daviddias","date":"2014-04-09T12:52:52.545Z","type":"join"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2014-04-09T12:54:12.383Z","type":"quit"}
{"nick":"daviddias","reason":"Ping timeout: 250 seconds","date":"2014-04-09T12:57:21.702Z","type":"quit"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-04-09T13:04:22.084Z","type":"quit"}
{"nick":"thlorenz","date":"2014-04-09T13:04:56.915Z","type":"join"}
{"nick":"paulfryzel","date":"2014-04-09T13:05:15.738Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-04-09T13:09:39.329Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-09T13:18:43.058Z","type":"join"}
{"nick":"bajtos","date":"2014-04-09T13:32:08.614Z","type":"join"}
{"nick":"kevinsim_","date":"2014-04-09T13:35:51.333Z","type":"join"}
{"nick":"kevinsimper","reason":"Read error: Connection reset by peer","date":"2014-04-09T13:35:58.825Z","type":"quit"}
{"nick":"bajtos","reason":"Ping timeout: 240 seconds","date":"2014-04-09T13:36:18.464Z","type":"quit"}
{"nick":"sinclair|work","reason":"Quit: ChatZilla 0.9.90.1 [Firefox 28.0/20140314220517]","date":"2014-04-09T13:43:54.536Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-04-09T13:46:31.449Z","type":"quit"}
{"nick":"kazupon","date":"2014-04-09T13:49:13.353Z","type":"join"}
{"nick":"trevnorris","reason":"Ping timeout: 240 seconds","date":"2014-04-09T13:51:54.929Z","type":"quit"}
{"nick":"daviddias","date":"2014-04-09T13:53:33.471Z","type":"join"}
{"nick":"mikeal","date":"2014-04-09T13:53:58.861Z","type":"join"}
{"nick":"rmg","date":"2014-04-09T13:54:13.002Z","type":"join"}
{"nick":"trevnorris","date":"2014-04-09T13:55:13.669Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 240 seconds","date":"2014-04-09T13:58:38.625Z","type":"quit"}
{"nick":"bajtos","date":"2014-04-09T14:00:05.240Z","type":"join"}
{"nick":"daviddias","reason":"Remote host closed the connection","date":"2014-04-09T14:02:30.357Z","type":"quit"}
{"nick":"daviddias","date":"2014-04-09T14:02:59.504Z","type":"join"}
{"nick":"paulfryz_","date":"2014-04-09T14:06:02.734Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 240 seconds","date":"2014-04-09T14:07:18.707Z","type":"quit"}
{"nick":"rphillips_","date":"2014-04-09T14:07:39.284Z","type":"quit"}
{"nick":"rphillips_","date":"2014-04-09T14:08:10.648Z","type":"join"}
{"nick":"paulfryz_","reason":"Ping timeout: 246 seconds","date":"2014-04-09T14:10:30.110Z","type":"quit"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2014-04-09T14:21:26.419Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-04-09T14:26:14.275Z","type":"quit"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2014-04-09T14:27:46.864Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-04-09T14:32:34.060Z","type":"quit"}
{"nick":"thlorenz","date":"2014-04-09T14:32:48.562Z","type":"join"}
{"nick":"bradleymeck","date":"2014-04-09T14:39:26.540Z","type":"join"}
{"nick":"daviddias","date":"2014-04-09T15:02:16.087Z","type":"join"}
{"nick":"kevinsim_","reason":"Remote host closed the connection","date":"2014-04-09T15:07:14.871Z","type":"quit"}
{"nick":"daviddia_","date":"2014-04-09T15:09:32.310Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 240 seconds","date":"2014-04-09T15:11:19.342Z","type":"quit"}
{"nick":"daviddias","date":"2014-04-09T15:11:37.021Z","type":"join"}
{"nick":"daviddia_","reason":"Ping timeout: 240 seconds","date":"2014-04-09T15:14:38.423Z","type":"quit"}
{"nick":"daviddias","reason":"Client Quit","date":"2014-04-09T15:14:57.271Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-09T15:15:03.841Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2014-04-09T15:15:23.432Z","type":"quit"}
{"nick":"mikeal","date":"2014-04-09T15:17:56.869Z","type":"join"}
{"nick":"Domenic___","new_nick":"Domenic_","date":"2014-04-09T15:22:06.274Z","type":"nick"}
{"nick":"janjongboom","date":"2014-04-09T15:27:29.533Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2014-04-09T15:31:23.534Z","type":"quit"}
{"nick":"kevinsimper","date":"2014-04-09T15:31:54.300Z","type":"join"}
{"nick":"kevinsimper","reason":"Remote host closed the connection","date":"2014-04-09T15:38:00.385Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-04-09T15:39:31.833Z","type":"quit"}
{"nick":"kazupon","date":"2014-04-09T15:39:58.627Z","type":"join"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-04-09T15:43:07.022Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2014-04-09T15:44:18.361Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-04-09T15:47:50.747Z","type":"join"}
{"nick":"rmg","date":"2014-04-09T15:49:48.495Z","type":"join"}
{"nick":"mogill","date":"2014-04-09T15:55:22.721Z","type":"join"}
{"nick":"bajtos","date":"2014-04-09T15:59:20.993Z","type":"join"}
{"nick":"janjongboom","date":"2014-04-09T15:59:44.556Z","type":"join"}
