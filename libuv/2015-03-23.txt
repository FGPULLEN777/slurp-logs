{"nick":"ircretary","reason":"Remote host closed the connection","date":"2015-03-23T00:00:01.078Z","type":"quit"}
{"nick":"ircretary","date":"2015-03-23T00:00:09.283Z","type":"join"}
{"nick":"thlorenz","date":"2015-03-23T00:11:42.215Z","type":"join"}
{"nick":"rendar","date":"2015-03-23T00:25:10.812Z","type":"quit"}
{"nick":"kellabyte","date":"2015-03-23T00:25:29.251Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-03-23T00:29:32.186Z","type":"quit"}
{"nick":"rmg","date":"2015-03-23T00:32:00.527Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 256 seconds","date":"2015-03-23T00:36:40.191Z","type":"quit"}
{"nick":"\\toothrot","date":"2015-03-23T00:37:01.906Z","type":"join"}
{"nick":"toothrot","reason":"Ping timeout: 245 seconds","date":"2015-03-23T00:37:19.560Z","type":"quit"}
{"nick":"jgi","date":"2015-03-23T00:42:55.183Z","type":"join"}
{"nick":"AlexisMocha","reason":"Ping timeout: 252 seconds","date":"2015-03-23T01:18:05.413Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-03-23T01:21:48.256Z","type":"quit"}
{"nick":"thlorenz","date":"2015-03-23T01:28:43.996Z","type":"join"}
{"nick":"maxkorp","reason":"Quit: ZNC - 1.6.0 - http://znc.in","date":"2015-03-23T01:29:01.682Z","type":"quit"}
{"nick":"\\toothrot","reason":"Ping timeout: 272 seconds","date":"2015-03-23T01:29:58.190Z","type":"quit"}
{"nick":"toothrot","date":"2015-03-23T01:39:22.410Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-03-23T01:54:08.477Z","type":"quit"}
{"nick":"thlorenz","date":"2015-03-23T02:05:54.043Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-03-23T02:10:43.104Z","type":"quit"}
{"nick":"nickleefly","date":"2015-03-23T02:13:59.389Z","type":"join"}
{"nick":"Left_Turn","reason":"Remote host closed the connection","date":"2015-03-23T02:22:37.297Z","type":"quit"}
{"nick":"tyleranton","reason":"Quit: tyleranton","date":"2015-03-23T02:59:38.404Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-03-23T03:01:44.370Z","type":"quit"}
{"nick":"jgi","date":"2015-03-23T03:02:41.874Z","type":"join"}
{"nick":"jgi","reason":"Client Quit","date":"2015-03-23T03:03:42.673Z","type":"quit"}
{"nick":"saghul","reason":"Ping timeout: 250 seconds","date":"2015-03-23T03:05:53.364Z","type":"quit"}
{"nick":"saghul","date":"2015-03-23T03:06:51.183Z","type":"join"}
{"nick":"thlorenz","date":"2015-03-23T03:11:38.428Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 265 seconds","date":"2015-03-23T03:16:43.325Z","type":"quit"}
{"nick":"jgi","date":"2015-03-23T03:17:42.174Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-03-23T03:23:24.786Z","type":"quit"}
{"nick":"toothrot","reason":"Ping timeout: 245 seconds","date":"2015-03-23T03:26:04.568Z","type":"quit"}
{"nick":"saghul","reason":"Ping timeout: 272 seconds","date":"2015-03-23T04:58:20.186Z","type":"quit"}
{"nick":"saghul","date":"2015-03-23T04:58:52.973Z","type":"join"}
{"nick":"thlorenz","date":"2015-03-23T05:00:43.219Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 256 seconds","date":"2015-03-23T05:05:16.258Z","type":"quit"}
{"nick":"AlexisMocha","date":"2015-03-23T05:34:46.262Z","type":"join"}
{"nick":"rmg","date":"2015-03-23T05:36:58.091Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 265 seconds","date":"2015-03-23T05:41:43.279Z","type":"quit"}
{"nick":"seishun","date":"2015-03-23T05:58:34.211Z","type":"join"}
{"nick":"jgi","date":"2015-03-23T06:16:16.352Z","type":"join"}
{"nick":"kellabyte","reason":"Quit: Connection closed for inactivity","date":"2015-03-23T06:44:23.573Z","type":"quit"}
{"nick":"thlorenz","date":"2015-03-23T06:49:30.216Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 256 seconds","date":"2015-03-23T06:54:04.212Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 264 seconds","date":"2015-03-23T07:22:01.352Z","type":"quit"}
{"nick":"bajtos","date":"2015-03-23T07:26:37.717Z","type":"join"}
{"nick":"bajtos","reason":"Client Quit","date":"2015-03-23T07:27:29.498Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-03-23T07:27:33.088Z","type":"quit"}
{"nick":"jgi","date":"2015-03-23T07:48:09.577Z","type":"join"}
{"nick":"trafalgarx","date":"2015-03-23T07:51:37.574Z","type":"join"}
{"nick":"trafalgarx","message":"Hi guys. Can i call uv_write many times or need wait for cb and call it sequentially?","date":"2015-03-23T07:54:29.837Z","type":"message"}
{"nick":"trafalgarx","message":"On TCP connection","date":"2015-03-23T07:54:39.839Z","type":"message"}
{"nick":"a3f","date":"2015-03-23T07:57:38.377Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-03-23T07:58:27.873Z","type":"quit"}
{"nick":"AlexisMocha","reason":"Ping timeout: 252 seconds","date":"2015-03-23T08:10:57.538Z","type":"quit"}
{"nick":"thlorenz","date":"2015-03-23T08:18:32.317Z","type":"join"}
{"nick":"rmg","date":"2015-03-23T08:20:50.370Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 246 seconds","date":"2015-03-23T08:22:05.959Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 244 seconds","date":"2015-03-23T08:23:05.385Z","type":"quit"}
{"nick":"SergeiRND","date":"2015-03-23T08:29:44.914Z","type":"join"}
{"nick":"saghul","message":"txdv: no and a while ago","date":"2015-03-23T08:33:54.859Z","type":"message"}
{"nick":"saghul","message":"trafalgarx: you can call it many times","date":"2015-03-23T08:34:03.619Z","type":"message"}
{"nick":"roxlu","date":"2015-03-23T08:37:24.960Z","type":"join"}
{"nick":"txdv","message":"saghul: i figured it out myself after a while","date":"2015-03-23T08:39:22.591Z","type":"message"}
{"nick":"txdv","message":"even had that documented in my readme of my bindings","date":"2015-03-23T08:39:37.106Z","type":"message"}
{"nick":"txdv","message":"but I forgot!","date":"2015-03-23T08:39:49.550Z","type":"message"}
{"nick":"trafalgarx","message":"saghul: but in this case i got valgrind error, Invalid read of size 8 Address 0x18 is not stack'd, malloc'd or (recently) free'd  1: uv__write in stream.c:828","date":"2015-03-23T08:41:53.378Z","type":"message"}
{"nick":"saghul","message":"trafalgarx: the memory needs to be valid until the callback kicks","date":"2015-03-23T08:54:49.988Z","type":"message"}
{"nick":"saghul","message":"and you can't reuse requests until they are finished","date":"2015-03-23T08:55:11.094Z","type":"message"}
{"nick":"saghul","message":"but you can create new requests and call uv_write many times","date":"2015-03-23T08:55:28.839Z","type":"message"}
{"nick":"benjamingr","date":"2015-03-23T09:01:36.824Z","type":"join"}
{"nick":"a3f","reason":"Ping timeout: 265 seconds","date":"2015-03-23T09:02:18.415Z","type":"quit"}
{"nick":"a3f_","date":"2015-03-23T09:02:40.220Z","type":"join"}
{"nick":"a3f_","new_nick":"a3f","date":"2015-03-23T09:04:44.766Z","type":"nick"}
{"nick":"trafalgarx","message":"saghul: this is what I do, but got this error. maybe I have problem in my code. thanks.","date":"2015-03-23T09:08:11.817Z","type":"message"}
{"nick":"a3f","reason":"Quit: ChatZilla 0.9.91.1 [Firefox 36.0.4/20150320202338]","date":"2015-03-23T09:10:33.137Z","type":"quit"}
{"nick":"a3f","date":"2015-03-23T09:13:59.038Z","type":"join"}
{"nick":"txdv","message":"saghul: I don't understand the ffi links","date":"2015-03-23T09:18:35.827Z","type":"message"}
{"nick":"txdv","message":"saghul: do you think that all error codes between the different systems are equal?","date":"2015-03-23T09:19:20.024Z","type":"message"}
{"nick":"txdv","message":"like linux, macosx, solaris, bsd?","date":"2015-03-23T09:19:26.967Z","type":"message"}
{"nick":"a3f","date":"2015-03-23T09:21:16.987Z","type":"part"}
{"nick":"saghul","message":"txdv: the ones defined by POSIX yes, but there are some edge cases IIRC","date":"2015-03-23T09:35:15.281Z","type":"message"}
{"nick":"saghul","message":"like EHOSTDOWN","date":"2015-03-23T09:35:18.057Z","type":"message"}
{"nick":"txdv","message":"anyway uv_err_name solves the problem, I didn't notice it exists, thanks saghul ","date":"2015-03-23T09:36:26.874Z","type":"message"}
{"nick":"saghul","message":"you're welcome!","date":"2015-03-23T09:38:32.692Z","type":"message"}
{"nick":"txdv","message":"lol i actually have that thing already exposed","date":"2015-03-23T09:40:41.098Z","type":"message"}
{"nick":"Left_Turn","date":"2015-03-23T09:48:04.221Z","type":"join"}
{"nick":"txdv","message":"stupid me","date":"2015-03-23T09:48:28.384Z","type":"message"}
{"nick":"thlorenz","date":"2015-03-23T10:04:24.950Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 246 seconds","date":"2015-03-23T10:08:50.988Z","type":"quit"}
{"nick":"iamaroot","date":"2015-03-23T10:26:25.578Z","type":"join"}
{"nick":"iamaroot","message":"hi guy","date":"2015-03-23T10:26:33.265Z","type":"message"}
{"nick":"iamaroot","message":"s","date":"2015-03-23T10:26:34.178Z","type":"message"}
{"nick":"trafalgarx","message":"saghul: is right that write reqs queued? where I can see write requset queue len?","date":"2015-03-23T10:28:17.640Z","type":"message"}
{"nick":"saghul","message":"trafalgarx: yes, they are queued, you can query the queued bytes like this: http://docs.libuv.org/en/latest/stream.html#c.uv_stream_t.write_queue_size","date":"2015-03-23T10:29:30.913Z","type":"message"}
{"nick":"Left_Turn","reason":"Remote host closed the connection","date":"2015-03-23T10:30:40.290Z","type":"quit"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2015-03-23T10:30:57.617Z","type":"quit"}
{"nick":"iamaroot","reason":"Quit: Page closed","date":"2015-03-23T10:35:40.316Z","type":"quit"}
{"nick":"Left_Turn","date":"2015-03-23T10:36:12.546Z","type":"join"}
{"nick":"Mark___","date":"2015-03-23T11:00:55.578Z","type":"join"}
{"nick":"Mark___","message":"hello, I'm back (tjfontain) with more questions about android. I'm sure you're delighted :-)","date":"2015-03-23T11:01:44.660Z","type":"message"}
{"nick":"Mark___","message":"tjfontaine, even","date":"2015-03-23T11:01:55.937Z","type":"message"}
{"nick":"Mark___","message":"I was in on Thursday or Friday, my android build was passing OS X flags in an android compile","date":"2015-03-23T11:02:58.644Z","type":"message"}
{"nick":"wolfeidau","reason":"Ping timeout: 245 seconds","date":"2015-03-23T11:03:09.629Z","type":"quit"}
{"nick":"Mark___","message":"so you suggested I try the autotools route","date":"2015-03-23T11:03:13.092Z","type":"message"}
{"nick":"Mark___","message":"I've done this and can get things compiling","date":"2015-03-23T11:03:26.418Z","type":"message"}
{"nick":"Mark___","message":"but unfortunately make check does not pass","date":"2015-03-23T11:03:36.732Z","type":"message"}
{"nick":"Mark___","message":"CC       test/test_run_tests-runner-unix.o   CCLD     test/run-tests test/test-signal-multiple-loops.c:248: error: undefined reference to 'uv__pthread_sigmask' collect2: error: ld returned 1 exit status make[1]: *** [test/run-tests] Error 1 make: *** [check-am] Error 2","date":"2015-03-23T11:04:12.604Z","type":"message"}
{"nick":"Mark___","message":"I have a test program in iOS (using libuv with libcurl -- works fine on iOS) that I've ported to Android","date":"2015-03-23T11:05:59.926Z","type":"message"}
{"nick":"Mark___","message":"when I run my test program using this android binary, I don't get any libuv callbacks ","date":"2015-03-23T11:06:32.941Z","type":"message"}
{"nick":"wolfeidau","date":"2015-03-23T11:06:35.851Z","type":"join"}
{"nick":"a3f","date":"2015-03-23T11:06:38.828Z","type":"join"}
{"nick":"Mark___","message":"the only functionality that seems to work is the uv idle loop","date":"2015-03-23T11:06:41.132Z","type":"message"}
{"nick":"Mark___","message":"any ideas what I can do to fix this up?","date":"2015-03-23T11:06:54.884Z","type":"message"}
{"nick":"Mark___","message":"any ideas appreciated, cheers","date":"2015-03-23T11:07:01.627Z","type":"message"}
{"nick":"Mark__","reason":"Quit: Page closed","date":"2015-03-23T11:14:47.962Z","type":"quit"}
{"nick":"Mark___","message":"nice, chrome opened two windows (I'm still here)","date":"2015-03-23T11:15:19.886Z","type":"message"}
{"nick":"Mark__","date":"2015-03-23T11:26:12.578Z","type":"join"}
{"nick":"Mark___","reason":"Quit: Page closed","date":"2015-03-23T11:26:20.264Z","type":"quit"}
{"nick":"rmg","date":"2015-03-23T11:31:32.371Z","type":"join"}
{"nick":"trafalgarx","message":"saghul: How do you think, what can be cause of this problem: Address 0x18 is not stack'd, malloc'd or (recently) free'd  1: uv__write в <a href=\"file:///home/ravone/builds/libuv-1.4.0/src/unix/stream.c:828\" >/home/ravone/builds/libuv-1.4.0/src/unix/stream.c:828</a>","date":"2015-03-23T11:35:32.112Z","type":"message"}
{"nick":"rmg","reason":"Ping timeout: 250 seconds","date":"2015-03-23T11:36:21.344Z","type":"quit"}
{"nick":"saghul","message":"trafalgarx: do you have some test code?","date":"2015-03-23T11:41:57.878Z","type":"message"}
{"nick":"nickleefly","reason":"Quit: Connection closed for inactivity","date":"2015-03-23T11:44:53.615Z","type":"quit"}
{"nick":"thlorenz","date":"2015-03-23T11:53:13.216Z","type":"join"}
{"nick":"saghul","reason":"Ping timeout: 246 seconds","date":"2015-03-23T11:53:50.975Z","type":"quit"}
{"nick":"saghul","date":"2015-03-23T11:55:54.443Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 256 seconds","date":"2015-03-23T11:57:48.237Z","type":"quit"}
{"nick":"Tux64","date":"2015-03-23T12:30:44.851Z","type":"join"}
{"nick":"toothrot","date":"2015-03-23T12:44:06.924Z","type":"join"}
{"nick":"thlorenz","date":"2015-03-23T13:09:03.485Z","type":"join"}
{"nick":"saghul","reason":"Ping timeout: 264 seconds","date":"2015-03-23T13:10:34.478Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 264 seconds","date":"2015-03-23T13:13:34.497Z","type":"quit"}
{"nick":"toothrot","reason":"Ping timeout: 265 seconds","date":"2015-03-23T13:15:05.211Z","type":"quit"}
{"nick":"saghul","date":"2015-03-23T13:17:48.633Z","type":"join"}
{"nick":"rmg","date":"2015-03-23T13:20:51.426Z","type":"join"}
{"nick":"saghul","reason":"Ping timeout: 245 seconds","date":"2015-03-23T13:22:19.575Z","type":"quit"}
{"nick":"saghul","date":"2015-03-23T13:24:02.871Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 246 seconds","date":"2015-03-23T13:25:08.911Z","type":"quit"}
{"nick":"thlorenz","date":"2015-03-23T13:33:47.186Z","type":"join"}
{"nick":"chris_99","date":"2015-03-23T13:36:56.165Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-03-23T13:37:41.638Z","type":"quit"}
{"nick":"a3f","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-03-23T13:55:45.455Z","type":"quit"}
{"nick":"a3f","date":"2015-03-23T14:02:35.547Z","type":"join"}
{"nick":"thlorenz","date":"2015-03-23T14:16:09.953Z","type":"join"}
{"nick":"AvianFlu","date":"2015-03-23T14:16:11.238Z","type":"join"}
{"nick":"Fishrock123","date":"2015-03-23T14:20:35.022Z","type":"join"}
{"nick":"WalrusPony","reason":"Read error: Connection reset by peer","date":"2015-03-23T14:20:43.714Z","type":"quit"}
{"nick":"WalrusPony","date":"2015-03-23T14:24:43.465Z","type":"join"}
{"nick":"a3f","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-03-23T14:30:19.114Z","type":"quit"}
{"nick":"jgi","date":"2015-03-23T14:48:52.544Z","type":"join"}
{"nick":"rmg","date":"2015-03-23T14:55:17.338Z","type":"join"}
{"nick":"a3f","date":"2015-03-23T14:59:37.828Z","type":"join"}
{"nick":"SergeiRND","reason":"Quit: Leaving.","date":"2015-03-23T15:06:29.372Z","type":"quit"}
{"nick":"chris_99","reason":"Quit: Ex-Chat","date":"2015-03-23T15:08:48.467Z","type":"quit"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2015-03-23T15:18:49.048Z","type":"nick"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2015-03-23T15:18:52.804Z","type":"nick"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-03-23T15:23:32.368Z","type":"quit"}
{"nick":"octetcloud","date":"2015-03-23T15:32:00.317Z","type":"join"}
{"nick":"rendar","date":"2015-03-23T15:47:12.018Z","type":"join"}
{"nick":"Mark__","message":"anyone built on droid recently? I'm having problems: https://groups.google.com/forum/#!topic/libuv/l0gqS58CErE","date":"2015-03-23T16:04:17.228Z","type":"message"}
{"nick":"qard_","reason":"Remote host closed the connection","date":"2015-03-23T16:10:27.340Z","type":"quit"}
{"nick":"jgi","date":"2015-03-23T16:14:28.180Z","type":"join"}
{"nick":"a3f","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-03-23T16:18:25.861Z","type":"quit"}
{"nick":"seishun","date":"2015-03-23T16:30:29.273Z","type":"join"}
{"nick":"AlexisMocha","date":"2015-03-23T16:40:27.180Z","type":"join"}
{"nick":"kellabyte","date":"2015-03-23T16:50:11.186Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Saúl Ibarra Corretgé\u000f \u00037refs/tags/jenkins-accept-pull-request-temp\u000f * \u00022e66c50\u0002 : watchdog: fix timeout for early polling return - http://git.io/hFhP","date":"2015-03-23T16:53:52.048Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Saúl Ibarra Corretgé\u000f \u00037refs/tags/jenkins-accept-commit-temp\u000f * \u0002a6dda18\u0002 : watchdog: fix timeout for early polling return - http://git.io/hFjG","date":"2015-03-23T16:54:56.009Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-03-23T16:55:13.560Z","type":"quit"}
{"nick":"thlorenz","date":"2015-03-23T17:01:43.661Z","type":"join"}
{"nick":"brson","date":"2015-03-23T17:03:38.290Z","type":"join"}
{"nick":"SergeiRND","date":"2015-03-23T17:05:55.910Z","type":"join"}
{"nick":"piscisaureus","date":"2015-03-23T17:15:45.533Z","type":"join"}
{"nick":"piscisaureus","message":"petka__: I can help you make the libuv-win changes if that helps","date":"2015-03-23T17:16:07.678Z","type":"message"}
{"nick":"petka__","message":"piscisaureus sure","date":"2015-03-23T17:16:20.077Z","type":"message"}
{"nick":"petka__","message":"btw that handle cast was silly mistake :D","date":"2015-03-23T17:16:25.344Z","type":"message"}
{"nick":"piscisaureus","message":"petka__: of course I prefer if you do it yourself :)","date":"2015-03-23T17:16:40.105Z","type":"message"}
{"nick":"petka__","message":"I misremembered how similar code did it before","date":"2015-03-23T17:16:41.363Z","type":"message"}
{"nick":"petka__","message":"just grepped and they are all calling get_fsfhandle indeed ","date":"2015-03-23T17:16:56.800Z","type":"message"}
{"nick":"petka__","message":"osf*","date":"2015-03-23T17:17:06.445Z","type":"message"}
{"nick":"piscisaureus","message":"petka__: the fd / handle duality is really annoying","date":"2015-03-23T17:17:08.602Z","type":"message"}
{"nick":"piscisaureus","message":"petka__: we're also making the assumption that _get_osfhandle(0) == GetStdHandle(STD_INPUT_HANDLE) which should usually be true but it doesn't have to be true...","date":"2015-03-23T17:17:39.097Z","type":"message"}
{"nick":"petka__","message":"yea","date":"2015-03-23T17:18:15.374Z","type":"message"}
{"nick":"petka__","message":"there is another constant","date":"2015-03-23T17:18:21.446Z","type":"message"}
{"nick":"roxlu","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-03-23T17:19:08.193Z","type":"quit"}
{"nick":"petka__","message":"forgot what it was though","date":"2015-03-23T17:19:23.507Z","type":"message"}
{"nick":"petka__","message":"fs_close is always called with unix-style fd though?","date":"2015-03-23T17:21:40.091Z","type":"message"}
{"nick":"petka__","message":"at least io.js does just call it like fs_close(1) to close stdout","date":"2015-03-23T17:21:55.321Z","type":"message"}
{"nick":"petka__","message":"so in this case we could do <= 2 check","date":"2015-03-23T17:22:18.596Z","type":"message"}
{"nick":"SergeiRND","reason":"Quit: Leaving.","date":"2015-03-23T17:22:21.636Z","type":"quit"}
{"nick":"piscisaureus","message":"petka__: yeah. Disk io uses file descriptors and streams io uses handles. I know, it's inconsistent.","date":"2015-03-23T17:24:04.766Z","type":"message"}
{"nick":"piscisaureus","message":"petka__: sometimes a stream is also created from a filedescriptor. We really ought to just remember the original fd (and then use _close() to close it).","date":"2015-03-23T17:25:14.793Z","type":"message"}
{"nick":"petka__","message":"sure","date":"2015-03-23T17:25:48.757Z","type":"message"}
{"nick":"piscisaureus","message":"petka__: right now we close the handle directly, but the slot in the fd table remains reserved (and now is associated with a closed handle)","date":"2015-03-23T17:25:50.397Z","type":"message"}
{"nick":"petka__","message":"I don't really mind if you take over btw","date":"2015-03-23T17:25:55.061Z","type":"message"}
{"nick":"petka__","message":"I forced pushed the <= 2 fix","date":"2015-03-23T17:26:12.483Z","type":"message"}
{"nick":"inolen","date":"2015-03-23T17:28:27.030Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-03-23T17:29:25.877Z","type":"quit"}
{"nick":"octetcloud","reason":"Read error: Connection reset by peer","date":"2015-03-23T17:31:12.975Z","type":"quit"}
{"nick":"petka__","message":"I basically have no idea what I'm doing :)","date":"2015-03-23T17:31:40.856Z","type":"message"}
{"nick":"octetcloud","date":"2015-03-23T17:32:39.861Z","type":"join"}
{"nick":"SergeiRND","date":"2015-03-23T17:36:00.934Z","type":"join"}
{"nick":"thlorenz","date":"2015-03-23T17:47:00.374Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-03-23T17:49:05.163Z","type":"quit"}
{"nick":"SergeiRND","reason":"Quit: Leaving.","date":"2015-03-23T17:53:56.217Z","type":"quit"}
{"nick":"SergeiRND","date":"2015-03-23T17:58:02.012Z","type":"join"}
{"nick":"SergeiRND","reason":"Client Quit","date":"2015-03-23T17:58:39.750Z","type":"quit"}
{"nick":"SergeiRND","date":"2015-03-23T18:05:42.910Z","type":"join"}
{"nick":"trafalgarx","message":"saghul: my mistake. I call uv_write from other thread. now I use uv_async_t and GAsyncQueue form GLib for thread communication. thanks. :)","date":"2015-03-23T18:10:13.394Z","type":"message"}
{"nick":"avalanche123","date":"2015-03-23T18:15:47.351Z","type":"join"}
{"nick":"piscisaureus","message":"trevnorris: just so that I understand your concerns properly - why wouldn't it be possible to clean up c++ resources from a cleanup handler?","date":"2015-03-23T18:20:03.958Z","type":"message"}
{"nick":"miles1","date":"2015-03-23T18:21:54.540Z","type":"join"}
{"nick":"miles1","message":"could any libuv developer explain to me this statement in the doc?","date":"2015-03-23T18:22:13.368Z","type":"message"}
{"nick":"miles1","message":"\"Using uv_poll_t for any other purpose is not recommended; uv_tcp_t, uv_udp_t, etc. provide an implementation that is faster and more scalable than what can be achieved with uv_poll_t, especially on Windows.\"","date":"2015-03-23T18:22:16.216Z","type":"message"}
{"nick":"miles1","message":"how is it slower than uv_udp_t functions? is it because uv_poll_t doesnt use iocp or something?","date":"2015-03-23T18:22:59.515Z","type":"message"}
{"nick":"octetcloud","reason":"Ping timeout: 252 seconds","date":"2015-03-23T18:30:02.874Z","type":"quit"}
{"nick":"thlorenz","date":"2015-03-23T18:49:14.369Z","type":"join"}
{"nick":"octetcloud","date":"2015-03-23T18:50:10.295Z","type":"join"}
{"nick":"a3f","date":"2015-03-23T18:50:20.855Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-03-23T19:01:45.525Z","type":"quit"}
{"nick":"SergeiRND","reason":"Quit: Leaving.","date":"2015-03-23T19:01:50.696Z","type":"quit"}
{"nick":"thlorenz","date":"2015-03-23T19:02:01.257Z","type":"join"}
{"nick":"gnostication","reason":"*.net *.split","date":"2015-03-23T19:04:18.010Z","type":"quit"}
{"nick":"pquerna","reason":"*.net *.split","date":"2015-03-23T19:04:28.598Z","type":"quit"}
{"nick":"gnostication","date":"2015-03-23T19:04:35.302Z","type":"join"}
{"nick":"pquerna","date":"2015-03-23T19:04:37.274Z","type":"join"}
{"nick":"SergeiRND","date":"2015-03-23T19:10:48.911Z","type":"join"}
{"nick":"roxlu","date":"2015-03-23T19:13:06.579Z","type":"join"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2015-03-23T19:16:00.229Z","type":"quit"}
{"nick":"avalanche123","date":"2015-03-23T19:16:29.583Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Shigeki Ohtsu\u000f \u00037v0.10\u000f * \u00024b69c72\u0002 : openssl: fix keypress requirement in apps on win32 (+6 more commits) - http://git.io/hNne","date":"2015-03-23T19:17:14.423Z","type":"message"}
{"nick":"avalanche123","reason":"Ping timeout: 246 seconds","date":"2015-03-23T19:22:08.910Z","type":"quit"}
{"nick":"a3f","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-03-23T19:27:02.232Z","type":"quit"}
{"nick":"stagas","date":"2015-03-23T19:29:39.402Z","type":"join"}
{"nick":"a3f","date":"2015-03-23T19:30:19.741Z","type":"join"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2015-03-23T19:35:56.613Z","type":"nick"}
{"nick":"SergeiRND","reason":"Quit: Leaving.","date":"2015-03-23T19:37:05.305Z","type":"quit"}
{"nick":"chris_99","date":"2015-03-23T19:37:25.054Z","type":"join"}
{"nick":"piscisaureus","message":"miles1: it's slower because because there is a fast mode and a slow mode (slow mode happens when the user has LSPs installed)","date":"2015-03-23T19:44:36.800Z","type":"message"}
{"nick":"piscisaureus","message":"miles1: slow mode is really slow. It uses 2 threads per socket.","date":"2015-03-23T19:44:51.308Z","type":"message"}
{"nick":"piscisaureus","message":"miles1: also overlapped mode requires less syscalls.","date":"2015-03-23T19:45:17.863Z","type":"message"}
{"nick":"txdv","message":"piscisaureus!","date":"2015-03-23T19:46:52.844Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Saúl Ibarra Corretgé\u000f \u00037refs/tags/jenkins-accept-commit-temp\u000f * \u00027e9d2f8\u0002 : watchdog: fix timeout for early polling return - http://git.io/hN2r","date":"2015-03-23T19:47:00.293Z","type":"message"}
{"nick":"piscisaureus","message":"txdv!","date":"2015-03-23T19:47:20.169Z","type":"message"}
{"nick":"piscisaureus","message":"sup?","date":"2015-03-23T19:47:22.276Z","type":"message"}
{"nick":"txdv","message":"http://logs.nodejs.org/libuv/2015-03-22#23:18:35.695","date":"2015-03-23T19:48:34.987Z","type":"message"}
{"nick":"txdv","message":"you were doing windows_epoll in 2012 ","date":"2015-03-23T19:48:49.063Z","type":"message"}
{"nick":"txdv","message":"someone asked if it where possible implemented something similar to the backend api","date":"2015-03-23T19:49:05.386Z","type":"message"}
{"nick":"stagas","reason":"Ping timeout: 256 seconds","date":"2015-03-23T19:53:48.216Z","type":"quit"}
{"nick":"miles1","message":"piscisaureus: ill ask you then what initially i was looking to do. i want to use libuv (we use it for 'real' udp traffic also) to send icmp packets for diverse network analysis that complements my udp traffic. anyways, point is, how is it possible to use libuv to accomplish such thing so that i dont have to do my own IOCP implementation. can i somewhat send icmp packets with uv_udp_t or im stuck with the uv_poll_t funcs?","date":"2015-03-23T19:54:47.525Z","type":"message"}
{"nick":"miles1","message":"and if your answer is 'no choice to use uv_poll_t', then, is there a way i can force fast mode or im risking to get something that is ultra slow.","date":"2015-03-23T19:55:57.144Z","type":"message"}
{"nick":"miles1","message":"anyways, just pointing that out. you guys should have something like uv_raw_t implemented as well for raw sockets, would simplify things considerably for some particular apps.","date":"2015-03-23T19:56:40.233Z","type":"message"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2015-03-23T19:57:41.255Z","type":"nick"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-03-23T19:57:47.973Z","type":"quit"}
{"nick":"piscisaureus","message":"miles1: icmp != udp","date":"2015-03-23T19:58:53.992Z","type":"message"}
{"nick":"piscisaureus","message":"miles1: you'd have to use SOCK_RAW sockets but windows doesn't allow that","date":"2015-03-23T19:59:23.775Z","type":"message"}
{"nick":"txdv","message":"only with admin rights","date":"2015-03-23T19:59:40.030Z","type":"message"}
{"nick":"piscisaureus","message":"not even with admin rights I believe","date":"2015-03-23T19:59:49.026Z","type":"message"}
{"nick":"piscisaureus","message":"only on windows server I think","date":"2015-03-23T19:59:57.375Z","type":"message"}
{"nick":"piscisaureus","message":"(so it's basically just an upsell)","date":"2015-03-23T20:00:10.633Z","type":"message"}
{"nick":"txdv","message":"wtf no pinging on windows","date":"2015-03-23T20:00:32.380Z","type":"message"}
{"nick":"piscisaureus","message":"miles1: windows has high-level ICMP functions that you can use, but you're on your own a bit - libuv doesn't suppeort those","date":"2015-03-23T20:00:34.028Z","type":"message"}
{"nick":"piscisaureus","message":"https://msdn.microsoft.com/en-us/library/windows/desktop/aa366050%28v=vs.85%29.aspx","date":"2015-03-23T20:01:00.980Z","type":"message"}
{"nick":"txdv","message":"miles1: have you tried creating a raw socket and feeding it to libuv?","date":"2015-03-23T20:01:16.432Z","type":"message"}
{"nick":"txdv","message":"have you tried creating a raw socket and just using it without libuv?","date":"2015-03-23T20:01:27.643Z","type":"message"}
{"nick":"piscisaureus","message":"miles1: I think for ICMP uv_poll would be fine","date":"2015-03-23T20:02:16.194Z","type":"message"}
{"nick":"miles1","message":"on any win NT if theres admin rights it's possible to use SOCK_RAW","date":"2015-03-23T20:02:18.250Z","type":"message"}
{"nick":"miles1","message":"but the user has to be in administrator group","date":"2015-03-23T20:02:34.427Z","type":"message"}
{"nick":"piscisaureus","message":"miles1: if you create the socket and specify the AFD provider explicity (with the appropriate GUID) then uv_poll will be in fast mode","date":"2015-03-23T20:03:13.314Z","type":"message"}
{"nick":"SergeiRND","date":"2015-03-23T20:03:20.911Z","type":"join"}
{"nick":"miles1","message":"anyways, i ofc know udp != icmp, but i wondered if i could hack around libuv's uv_udp_funcs to attempt sending an icmp using raw sockets","date":"2015-03-23T20:03:24.927Z","type":"message"}
{"nick":"miles1","message":"using uv_udp_open for example","date":"2015-03-23T20:03:32.621Z","type":"message"}
{"nick":"miles1","message":"to open a previously sat raw socket","date":"2015-03-23T20:03:46.657Z","type":"message"}
{"nick":"piscisaureus","message":"https://msdn.microsoft.com/en-us/library/windows/desktop/ms740548%28v=vs.85%29.aspx <-- see \"limitations on raw sockets\"","date":"2015-03-23T20:03:53.332Z","type":"message"}
{"nick":"piscisaureus","message":"^miles1 txdv","date":"2015-03-23T20:04:02.244Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: not that it isn't possible, just that we have to be careful. what if we allocate before the callback and then free after the callback? since the exception won't allow control to return to C++ we'd loose the pointer to the allocated resource unless we stored it somewhere.","date":"2015-03-23T20:05:03.463Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: the cleanup would probably have to be async though... possibly nextTick and then destroy the c++ object","date":"2015-03-23T20:06:30.679Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: but you see what I'm saying. there are cases where we malloc(), call a callback then immediately free() afterwards. but if an exception is thrown the ability to clean up that pointer is lost.","date":"2015-03-23T20:07:29.507Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: I do see what you're saying. So in any case it shouldn't work that way :)","date":"2015-03-23T20:08:18.223Z","type":"message"}
{"nick":"piscisaureus","message":"we would want it to be not brittle","date":"2015-03-23T20:09:05.431Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: sounds good to me. if we can guarantee resource cleanup then i'm cool w/ it","date":"2015-03-23T20:10:00.646Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: so would your implementation allow something like socket.close().then(...) ?","date":"2015-03-23T20:10:22.383Z","type":"message"}
{"nick":"SergeiRND","reason":"Quit: Leaving.","date":"2015-03-23T20:10:32.924Z","type":"quit"}
{"nick":"Domenic","message":"trevnorris: I think so, not sure what the context is though","date":"2015-03-23T20:11:12.236Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: i'm trying to figure out how internal resource cleanup would be handled. i.e. var c = close(); /* some time later */ c.then(...);","date":"2015-03-23T20:11:55.577Z","type":"message"}
{"nick":"Domenic","message":"ah yeah","date":"2015-03-23T20:12:13.056Z","type":"message"}
{"nick":"trevnorris","message":"would it have to hang onto the internal resources as long as the Promise is still in scope?","date":"2015-03-23T20:12:14.256Z","type":"message"}
{"nick":"Domenic","message":"no, the promise is just a signaller","date":"2015-03-23T20:12:26.327Z","type":"message"}
{"nick":"trevnorris","message":"i.e. we have to depend on the GC to tell us when we can free the underlying class","date":"2015-03-23T20:12:35.187Z","type":"message"}
{"nick":"trevnorris","message":"okay. so we can immediately free the class, and the remaining JS bits will be cleaned up automatically by GC.","date":"2015-03-23T20:13:43.070Z","type":"message"}
{"nick":"Domenic","message":"yeah sounds right","date":"2015-03-23T20:14:07.358Z","type":"message"}
{"nick":"kellabyte","reason":"Quit: Connection closed for inactivity","date":"2015-03-23T20:14:23.377Z","type":"quit"}
{"nick":"trevnorris","message":"how would you set callbacks for errors, etc?","date":"2015-03-23T20:14:40.380Z","type":"message"}
{"nick":"trevnorris","message":"only way I can figure is for it to look EE-ish.","date":"2015-03-23T20:14:53.910Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Saúl Ibarra Corretgé\u000f \u00037v0.12\u000f * \u00027e9d2f8\u0002 : watchdog: fix timeout for early polling return - http://git.io/hNSG","date":"2015-03-23T20:15:41.885Z","type":"message"}
{"nick":"Domenic","message":"socket.cancel().catch(e => console.error(e))?","date":"2015-03-23T20:16:15.837Z","type":"message"}
{"nick":"trevnorris","message":"i mean, say you create a socket and I want to be notified about conneciton/close/error/etc. does the streams API allow me to set those in some uniform way like EE does?","date":"2015-03-23T20:17:47.671Z","type":"message"}
{"nick":"Domenic","message":"reader.closed.catch(e => console.error(e))","date":"2015-03-23T20:18:36.973Z","type":"message"}
{"nick":"trevnorris","message":"so it would have reader.closed, reader.connection, etc.","date":"2015-03-23T20:19:15.847Z","type":"message"}
{"nick":"Domenic","message":"if you ever transition to \"closed\" state, `closed` promise fulfills. If you transition to \"errored\" state, it rejects. They are mutually-exlusive at-most-once state transitions, so it works well","date":"2015-03-23T20:19:20.482Z","type":"message"}
{"nick":"Domenic","message":"Hmm no, you wouldn't distinguish","date":"2015-03-23T20:19:36.055Z","type":"message"}
{"nick":"Domenic","message":"Or if you did, you would do so with error types","date":"2015-03-23T20:19:41.765Z","type":"message"}
{"nick":"trevnorris","message":"what about connection? for a socket that's only going to happen once, but not for server.","date":"2015-03-23T20:20:08.488Z","type":"message"}
{"nick":"Domenic","message":"server isn't a stream though","date":"2015-03-23T20:20:20.567Z","type":"message"}
{"nick":"trevnorris","message":"ah, true. but then would the server be an EE and the connection would be a stream? so they would use two different API styles?","date":"2015-03-23T20:20:46.629Z","type":"message"}
{"nick":"Domenic","message":"yeah that seems likely","date":"2015-03-23T20:20:53.994Z","type":"message"}
{"nick":"Domenic","message":"I mean that's how Node does it right?","date":"2015-03-23T20:21:04.945Z","type":"message"}
{"nick":"trevnorris","message":"well, except it all uses EE style, so there's not mental context switch about how to set the callbacks.","date":"2015-03-23T20:21:41.447Z","type":"message"}
{"nick":"trevnorris","message":"e.g. server.on('connection' or socket.on('connection'","date":"2015-03-23T20:21:49.723Z","type":"message"}
{"nick":"Domenic","message":"Mmm but socket.on('connection') is not used by people who want to consume it as a stream","date":"2015-03-23T20:22:05.012Z","type":"message"}
{"nick":"trevnorris","message":"not exactly. people want to inject themselves into an http stream by getting the inital tcp connection.","date":"2015-03-23T20:22:36.025Z","type":"message"}
{"nick":"trevnorris","message":"then then hijack the stream so they can rewrite encrypted headers, etc. ","date":"2015-03-23T20:22:53.503Z","type":"message"}
{"nick":"trevnorris","message":"it's basically a trick to inject a transform stream into the pipe before the data reaches the http header parser.","date":"2015-03-23T20:23:55.304Z","type":"message"}
{"nick":"Domenic","message":"This is a bit old but it was one idea that one guy had for raw socket APIs on streams http://www.w3.org/2012/sysapps/tcp-udp-sockets/","date":"2015-03-23T20:24:01.298Z","type":"message"}
{"nick":"Domenic","message":"Example here, not updated to async read() http://www.w3.org/2012/sysapps/tcp-udp-sockets/#interface-tcpsocket","date":"2015-03-23T20:24:34.116Z","type":"message"}
{"nick":"Domenic","message":"Mapping to net.Socket is not too different, it separates readable and writable sides but otherwise is fairly close","date":"2015-03-23T20:26:28.651Z","type":"message"}
{"nick":"bradleymeck","date":"2015-03-23T20:29:04.366Z","type":"join"}
{"nick":"piscisaureus","reason":"Ping timeout: 255 seconds","date":"2015-03-23T20:29:04.575Z","type":"quit"}
{"nick":"jgi","date":"2015-03-23T20:29:42.224Z","type":"join"}
{"nick":"Domenic","message":"What is net.Socket bytesRead/bytesWritten used for? Seems trivial to add, but unsure what the use case is.","date":"2015-03-23T20:30:25.193Z","type":"message"}
{"nick":"trevnorris","message":"it's useful for reporting/stats.","date":"2015-03-23T20:30:40.870Z","type":"message"}
{"nick":"jgi","reason":"Client Quit","date":"2015-03-23T20:30:51.107Z","type":"quit"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2015-03-23T20:31:02.879Z","type":"quit"}
{"nick":"Domenic","message":"Yeah but why not put it on every stream ever","date":"2015-03-23T20:31:17.314Z","type":"message"}
{"nick":"avalanche123","date":"2015-03-23T20:32:13.298Z","type":"join"}
{"nick":"trevnorris","message":"I think it should be. just haven't taken the time to implement it more appropriately. :P","date":"2015-03-23T20:32:16.562Z","type":"message"}
{"nick":"bradleymeck","date":"2015-03-23T20:32:26.331Z","type":"join"}
{"nick":"trevnorris","message":"but don't know why it hasn't been done yet.","date":"2015-03-23T20:32:29.486Z","type":"message"}
{"nick":"Domenic","message":"huh ok","date":"2015-03-23T20:32:49.277Z","type":"message"}
{"nick":"bradleymeck","message":"whats going on? /me is apparently late for the conversation","date":"2015-03-23T20:34:29.211Z","type":"message"}
{"nick":"trevnorris","message":"just a conversation about how to extend the Streams API to something like net.Socket()","date":"2015-03-23T20:34:50.984Z","type":"message"}
{"nick":"jgi","date":"2015-03-23T20:35:59.345Z","type":"join"}
{"nick":"bradleymeck","message":"scrollback caught up","date":"2015-03-23T20:37:41.809Z","type":"message"}
{"nick":"bradleymeck","message":"curious about the resource cleanup, Domenic is there a .close() for Readables, like if I want to stop tailing a file?","date":"2015-03-23T20:39:36.307Z","type":"message"}
{"nick":"bradleymeck","message":"also how many of these promises are meant to be used by the end user?","date":"2015-03-23T20:40:55.400Z","type":"message"}
{"nick":"bradleymeck","message":"it seems like some of these internal slots are promises, do they need to be?","date":"2015-03-23T20:41:14.081Z","type":"message"}
{"nick":"bradleymeck","message":"Domenic: I hope you can understand how we are very very nervous about this if we don't have any profiling and it lands in canary","date":"2015-03-23T20:50:10.114Z","type":"message"}
{"nick":"bradleymeck","message":"some things can look good in theory but have a bottleneck that breaks things","date":"2015-03-23T20:50:24.023Z","type":"message"}
{"nick":"bradleymeck","message":"I'm fine with promises etc. being the thing, but I am very nervous that it will stay slow if there is an unseen performance bottleneck from some workflow","date":"2015-03-23T20:50:59.046Z","type":"message"}
{"nick":"bradleymeck","message":"also a lot of these mandate the use of promises for internal state","date":"2015-03-23T20:51:11.165Z","type":"message"}
{"nick":"bradleymeck","message":"once things land in a browser it will be hard to change them and if these problems are hidden that may mean some environments won't adopt them","date":"2015-03-23T20:51:53.022Z","type":"message"}
{"nick":"tjfontaine","message":"it's not clear to me that Readable should have a notion like close, since there may not be a resource associated with it","date":"2015-03-23T20:56:36.728Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: but what's preventing resources to be associated w/ it?","date":"2015-03-23T20:57:05.344Z","type":"message"}
{"nick":"bradleymeck","message":"what do you do if there is a resource?","date":"2015-03-23T20:57:10.767Z","type":"message"}
{"nick":"miles1","date":"2015-03-23T20:57:13.545Z","type":"part"}
{"nick":"bradleymeck","message":"its easy to have a noop if there is no resource","date":"2015-03-23T20:57:18.263Z","type":"message"}
{"nick":"tjfontaine","message":"it's a mechanism of inheritence I think, I've been doing some work .. lemme link it","date":"2015-03-23T20:57:48.924Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/joyent/node/compare/v0.12...tjfontaine:strictee","date":"2015-03-23T20:58:08.887Z","type":"message"}
{"nick":"tjfontaine","message":"it's kind of amusing to write down how you think events are delviered and in what order for node","date":"2015-03-23T20:58:26.140Z","type":"message"}
{"nick":"tjfontaine","message":"and then be shocked at how it actually happens","date":"2015-03-23T20:58:33.487Z","type":"message"}
{"nick":"rendar","reason":"Ping timeout: 245 seconds","date":"2015-03-23T20:58:34.573Z","type":"quit"}
{"nick":"tjfontaine","message":"https://github.com/joyent/node/commit/f990f2e6acc3abaf003ac0760e48c78fa7e535d5 <-- legit bug, and I'm not sure that this pattern should have ever existed","date":"2015-03-23T20:59:02.546Z","type":"message"}
{"nick":"tjfontaine","message":"since it's pretty clear you can re-enter here without .destory being true and have a pretty messed up state machine","date":"2015-03-23T20:59:20.265Z","type":"message"}
{"nick":"bradleymeck","message":"well you can use a promise to wait on .destroy being true","date":"2015-03-23T21:00:36.095Z","type":"message"}
{"nick":"bradleymeck","message":"in the case of whatwg style apis","date":"2015-03-23T21:00:43.906Z","type":"message"}
{"nick":"tjfontaine","message":"destroy and close don't necessasrily make sense to me for plain old readable, but they do for things with resources","date":"2015-03-23T21:02:53.165Z","type":"message"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-03-23T21:03:14.007Z","type":"quit"}
{"nick":"bradleymeck","action":"is confused","date":"2015-03-23T21:03:33.401Z","type":"action"}
{"nick":"bradleymeck","message":"why would you need one for writable and not readable","date":"2015-03-23T21:03:49.861Z","type":"message"}
{"nick":"bradleymeck","message":"if you have one for writable you are assuming some cleanup needs to occur","date":"2015-03-23T21:04:03.876Z","type":"message"}
{"nick":"bradleymeck","message":"same as you don't want to leak a fd if you are done reading it","date":"2015-03-23T21:04:12.396Z","type":"message"}
{"nick":"tjfontaine","message":"in node we have end and finish, one is for readable one is for writable, but close is fired on something that has a resource (but not necessarily for http readables because of socket reuse)","date":"2015-03-23T21:04:30.291Z","type":"message"}
{"nick":"rendar","date":"2015-03-23T21:05:00.834Z","type":"join"}
{"nick":"bradleymeck","message":"as long as I get a way to detect when all things consuming a resource are done idc if its in the standard streams","date":"2015-03-23T21:05:55.833Z","type":"message"}
{"nick":"tyleranton","date":"2015-03-23T21:05:57.804Z","type":"join"}
{"nick":"bradleymeck","message":"but either both should expect resource, or both should not","date":"2015-03-23T21:06:04.907Z","type":"message"}
{"nick":"bradleymeck","message":"resources*","date":"2015-03-23T21:06:11.141Z","type":"message"}
{"nick":"bradleymeck","message":"though idk how we can do a resource cleanup without gc hooks...","date":"2015-03-23T21:09:41.504Z","type":"message"}
{"nick":"bradleymeck","message":"at least if it is not on standard streams","date":"2015-03-23T21:10:00.658Z","type":"message"}
{"nick":"tjfontaine","message":"ya, it's not easy to do without support","date":"2015-03-23T21:10:29.100Z","type":"message"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2015-03-23T21:23:10.351Z","type":"nick"}
{"nick":"jeffreydwalter","date":"2015-03-23T21:23:42.574Z","type":"join"}
{"nick":"jgi","date":"2015-03-23T21:33:37.909Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 256 seconds","date":"2015-03-23T21:49:58.195Z","type":"quit"}
{"nick":"octetcloud","message":"@tjfontaine: there is no v0.10.37-branch for v0.10.37","date":"2015-03-23T22:01:18.379Z","type":"message"}
{"nick":"octetcloud","message":"ah, because its called -release, pls ignore me, sorry","date":"2015-03-23T22:01:58.624Z","type":"message"}
{"nick":"Domenic","message":"bradleymeck: that's not really how APIs work. You don't get to say that an API cannot ship until it is fully optimized. Instead you look to see if there are fundamental design problems that prohibit an optimized version from existing.","date":"2015-03-23T22:04:40.503Z","type":"message"}
{"nick":"bradleymeck","message":"I don't want optimized","date":"2015-03-23T22:04:52.260Z","type":"message"}
{"nick":"bradleymeck","message":"I want profiled","date":"2015-03-23T22:04:54.525Z","type":"message"}
{"nick":"bradleymeck","message":"to check for bottlenecks that are not visible from API surface","date":"2015-03-23T22:05:05.951Z","type":"message"}
{"nick":"bradleymeck","message":"there is a difference between shipping before being optimized and shipping without investigating","date":"2015-03-23T22:05:29.575Z","type":"message"}
{"nick":"Domenic","message":"a given implementation's bottlenecks don't really mean anything with regard to the underlying spec","date":"2015-03-23T22:05:37.029Z","type":"message"}
{"nick":"bradleymeck","message":"workflows","date":"2015-03-23T22:05:51.866Z","type":"message"}
{"nick":"Domenic","message":"now you're just saying words","date":"2015-03-23T22:05:59.370Z","type":"message"}
{"nick":"bradleymeck","message":"workflows may be the problem, I'm not just talking v8 running jit on it","date":"2015-03-23T22:06:04.833Z","type":"message"}
{"nick":"bradleymeck","message":"if I pipe between 2 streams in node for example it is slower than just raw consuming a single stream","date":"2015-03-23T22:06:27.895Z","type":"message"}
{"nick":"bradleymeck","message":"this starts to compound, and is a problem with how the APIs hook together","date":"2015-03-23T22:06:42.470Z","type":"message"}
{"nick":"bradleymeck","message":"I'm just wanting a good profiling to go in before it lands","date":"2015-03-23T22:07:12.468Z","type":"message"}
{"nick":"bradleymeck","message":"when promises landed they pretty much when to unable to be changed","date":"2015-03-23T22:07:27.485Z","type":"message"}
{"nick":"bradleymeck","message":"I think the same will happen with streams, but streams are far closer tied to resource consumption and needing to be able to both handle performance and resource cleanup","date":"2015-03-23T22:07:55.773Z","type":"message"}
{"nick":"tjfontaine","message":"abstractions cost though, I mean there's a lot more happening by definition in a piped stream","date":"2015-03-23T22:07:58.596Z","type":"message"}
{"nick":"bradleymeck","message":"indeed","date":"2015-03-23T22:08:07.052Z","type":"message"}
{"nick":"bradleymeck","message":"you just want to be sure you can avoid the costly bits if possible","date":"2015-03-23T22:08:26.140Z","type":"message"}
{"nick":"bradleymeck","message":"I don't want a repeat where we can't change the spec once it lands","date":"2015-03-23T22:08:49.556Z","type":"message"}
{"nick":"tjfontaine","message":"it's true that constantly re-evaluating the design through out its creation is a good way to identify if there are unexpected work loads","date":"2015-03-23T22:08:58.926Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: but streams are supposed to be a \"low level mechanism\" to consume data. and if it goes in then many APIs will rely on it. so if the abstraction has undesirable overhead then it needs to be rethought.","date":"2015-03-23T22:11:38.535Z","type":"message"}
{"nick":"Domenic","message":"piped streams will be faster since they're designed to allow off-main-thread minimal-copy stuff","date":"2015-03-23T22:11:59.834Z","type":"message"}
{"nick":"Domenic","message":"this is what i mean by look at the design not the implementation","date":"2015-03-23T22:12:06.203Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: and i'm curious how that couldn't be possible by a different EE streams impl? that's a goal being designed in, but not inheritly magical to the streams API choice, right?","date":"2015-03-23T22:12:52.045Z","type":"message"}
{"nick":"Domenic","message":"trevnorris: definitely, yeah, it's orthogonal to EE vs. promises vs. callbacks.","date":"2015-03-23T22:13:23.533Z","type":"message"}
{"nick":"bradleymeck","message":"Domenic: I'm not talking about you need to be fast, just that no strange points look like they are causing more work than they should","date":"2015-03-23T22:13:29.760Z","type":"message"}
{"nick":"bradleymeck","message":"just like watching nextTick in crypto is amazingly strange","date":"2015-03-23T22:13:40.499Z","type":"message"}
{"nick":"Domenic","message":"bradleymeck: well, the spec has no strange points that cause more work than it should. so, you are happy?","date":"2015-03-23T22:14:10.644Z","type":"message"}
{"nick":"bradleymeck","message":"no","date":"2015-03-23T22:14:18.659Z","type":"message"}
{"nick":"bradleymeck","message":"cause I have no data, just what it appears","date":"2015-03-23T22:14:25.650Z","type":"message"}
{"nick":"Domenic","message":"well, i mean, you won't be happy until a completely optimized implementation appears to actually prove to you that what appears to be possible is actually possible.","date":"2015-03-23T22:15:19.771Z","type":"message"}
{"nick":"bradleymeck","message":"appears to be from the spec*","date":"2015-03-23T22:15:22.918Z","type":"message"}
{"nick":"Domenic","message":"and again, that's just not a realistic way of evolving software","date":"2015-03-23T22:15:30.380Z","type":"message"}
{"nick":"bradleymeck","message":"I don't care if it takes minutes to download google.com","date":"2015-03-23T22:15:32.957Z","type":"message"}
{"nick":"bradleymeck","message":"I don't want to see 1000s of task queues on accident in a profiling benchmark","date":"2015-03-23T22:15:53.889Z","type":"message"}
{"nick":"bradleymeck","message":"microtasks*","date":"2015-03-23T22:16:03.059Z","type":"message"}
{"nick":"roxlu","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-03-23T22:16:06.974Z","type":"quit"}
{"nick":"bradleymeck","message":"which I'm fine with it being slow, using memory, and all of this","date":"2015-03-23T22:16:13.544Z","type":"message"}
{"nick":"bradleymeck","message":"I just want to see it out somewhere, doing something, in some measurable manner, that I can reproduce before it goes into a browser which makes it hard to change","date":"2015-03-23T22:16:38.312Z","type":"message"}
{"nick":"bradleymeck","message":"slow is fine if people don't see any oddities","date":"2015-03-23T22:17:43.206Z","type":"message"}
{"nick":"Domenic","message":"I feel like I've already explained why that's not going to happen, and why we've already done a lot in the design. So, I guess there's not much else to say. Sorry to disappoint.","date":"2015-03-23T22:17:43.738Z","type":"message"}
{"nick":"bradleymeck","message":"sure don't test your stuff","date":"2015-03-23T22:17:53.206Z","type":"message"}
{"nick":"bradleymeck","message":"lets just land it because its only fully optimized or not...?","date":"2015-03-23T22:18:08.762Z","type":"message"}
{"nick":"trevnorris","message":"saghul: strange issue. I compiled libuv.a to libnub.a using c89. but now when I'm trying to include libnub.a into my C++ project it's giving me a \"previous declaration error\" for uv_tty_set_mode(). know how to get around that?","date":"2015-03-23T22:18:30.080Z","type":"message"}
{"nick":"nathan7","message":"…fyi, this conversation is a complete trainwreck","date":"2015-03-23T22:18:33.998Z","type":"message"}
{"nick":"bradleymeck","message":"probably","date":"2015-03-23T22:18:48.330Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: i might be missing something, but I don't get how \"stream.writable.closed.then()\" is an improvement over \"stream.on('close'\"","date":"2015-03-23T22:20:24.002Z","type":"message"}
{"nick":"bradleymeck","message":"Domenic: is there anyone else looking at this spec / someone I can get to help build out a benchmark? even if it ships","date":"2015-03-23T22:20:35.742Z","type":"message"}
{"nick":"saghul","message":"trevnorris: did you get latest v1.x?","date":"2015-03-23T22:21:14.906Z","type":"message"}
{"nick":"saghul","message":"we landed a fix for that","date":"2015-03-23T22:21:19.822Z","type":"message"}
{"nick":"trevnorris","message":"saghul: 1.4.2. should I go off latest v1.x?","date":"2015-03-23T22:21:32.802Z","type":"message"}
{"nick":"Domenic","message":"trevnorris: one-and-done events, which could succeed xor fail, and which you might want to add a listener for either before or after they happen, are perfect match for promises","date":"2015-03-23T22:23:13.579Z","type":"message"}
{"nick":"nathan7","message":"Domenic: synchronous inspection would be nice there","date":"2015-03-23T22:23:41.346Z","type":"message"}
{"nick":"Domenic","message":"nathan7: yeah","date":"2015-03-23T22:23:51.245Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: sure, but then you have to tack on a different type of API. e.g. what is \"server.on('connection'\" going to look like, the same?","date":"2015-03-23T22:24:22.675Z","type":"message"}
{"nick":"Domenic","message":"trevnorris: if something can happen more than once, it *should* be a different type of API than something that can happen once","date":"2015-03-23T22:24:45.671Z","type":"message"}
{"nick":"nathan7","message":"trevnorris: a server would be a readable stream of connections (;","date":"2015-03-23T22:24:58.445Z","type":"message"}
{"nick":"Domenic","message":"eeeeeh","date":"2015-03-23T22:25:10.509Z","type":"message"}
{"nick":"trevnorris","message":"someone will do it. :P","date":"2015-03-23T22:25:24.891Z","type":"message"}
{"nick":"nathan7","message":"stream it and they will come","date":"2015-03-23T22:26:09.079Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: sure, but socket.writable.closed.then(), that's pretty freaking long. loose all the characters saved by () => { }. ;)","date":"2015-03-23T22:26:09.928Z","type":"message"}
{"nick":"saghul","message":"trevnorris: yeah","date":"2015-03-23T22:26:38.140Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: also, how will a closed server work? it's an event that can only happen once?","date":"2015-03-23T22:26:47.342Z","type":"message"}
{"nick":"trevnorris","message":"saghul: thanks. will do.","date":"2015-03-23T22:26:50.418Z","type":"message"}
{"nick":"saghul","message":"trevnorris: are you using a c++ compiler though?","date":"2015-03-23T22:26:52.093Z","type":"message"}
{"nick":"Domenic","message":"trevnorris: the http://www.w3.org/2012/sysapps/tcp-udp-sockets/#interface-tcpsocket adds some aggregate-level properties, socket.closed.then(...), for telling when both writable and readable side are closed","date":"2015-03-23T22:27:16.617Z","type":"message"}
{"nick":"trevnorris","message":"saghul: well, am for the C++ part. compiling the libnub.a with clang.","date":"2015-03-23T22:27:45.920Z","type":"message"}
{"nick":"nathan7","message":"trevnorris: `await socket.writable.closed` in ES7 parlance","date":"2015-03-23T22:27:46.911Z","type":"message"}
{"nick":"Domenic","message":"trevnorris: yeah I mean nobody has any ambitions of defining a server API outside node but if i were defining one today I'd do .closed.then(...)","date":"2015-03-23T22:27:49.386Z","type":"message"}
{"nick":"nathan7","message":"do we have any userland prototypes of these cool things?","date":"2015-03-23T22:28:18.430Z","type":"message"}
{"nick":"saghul","message":"trevnorris: here are the details: https://github.com/libuv/libuv/pull/265 using latest v1.x should do","date":"2015-03-23T22:29:19.800Z","type":"message"}
{"nick":"trevnorris","message":"saghul: awesome. thanks.","date":"2015-03-23T22:29:27.270Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-03-23T22:30:13.890Z","type":"quit"}
{"nick":"trevnorris","message":"Domenic: so  the .closed.then() etc. will all create a new Promise when the .then is set?","date":"2015-03-23T22:30:36.249Z","type":"message"}
{"nick":"toothrot","date":"2015-03-23T22:32:18.043Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033misterdjules\u000f created tag v0.10.38 - http://git.io/hAMr","date":"2015-03-23T22:33:17.255Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Julien Gilli\u000f \u00037v0.10\u000f * \u00027edfd5f\u0002 : Now working on 0.10.39 (+2 more commits) - http://git.io/hAMo","date":"2015-03-23T22:33:19.213Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033misterdjules\u000f created branch v0.10.38-release - http://git.io/hAM1","date":"2015-03-23T22:33:24.359Z","type":"message"}
{"nick":"Domenic","message":"trevnorris: in unoptimized VMs, sure","date":"2015-03-23T22:35:07.806Z","type":"message"}
{"nick":"bradleymeck","date":"2015-03-23T22:35:20.996Z","type":"join"}
{"nick":"trevnorris","message":"Domenic: also, I was under the impression that this type of API was to help prevent callback nesting hell, but I haven't seen an example that really displays that. was I under the wrong impression?","date":"2015-03-23T22:36:10.449Z","type":"message"}
{"nick":"Domenic","message":"trevnorris: it's more about error propagation than preventing callback nesting. there are easy examples showing how it prevents callback nesting but everyone just says \"I'll just create named functions\" instead","date":"2015-03-23T22:36:57.008Z","type":"message"}
{"nick":"Domenic","message":"(which of course doesn't work if step 3 depends on step 2 depends on step 1, unless you use state in a common closure or similar. But I digress.)","date":"2015-03-23T22:37:46.994Z","type":"message"}
{"nick":"danfried","date":"2015-03-23T22:40:53.622Z","type":"join"}
{"nick":"trevnorris","message":"saghul: still not working. might be because i'm compiling libnub.a first using clang, then compiling the rest of the application using clang++.","date":"2015-03-23T22:44:51.855Z","type":"message"}
{"nick":"trevnorris","message":"thanks for the tip though. I should be able to get it from here. :)","date":"2015-03-23T22:45:06.445Z","type":"message"}
{"nick":"saghul","message":"trevnorris: humm, that's weird, let me know how it goes!","date":"2015-03-23T22:52:24.499Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-03-23T22:56:13.888Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-03-23T23:08:23.429Z","type":"quit"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2015-03-23T23:10:09.467Z","type":"quit"}
{"nick":"chris_99","reason":"Quit: Ex-Chat","date":"2015-03-23T23:13:15.888Z","type":"quit"}
{"nick":"avalanche123","date":"2015-03-23T23:14:36.056Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-03-23T23:16:14.775Z","type":"quit"}
{"nick":"tjfontaine","message":"copy is rarely (in node.js' case) the expensive part of streams, so it's not really about what thread that happens on","date":"2015-03-23T23:20:29.625Z","type":"message"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2015-03-23T23:29:11.634Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Michael Dawson\u000f \u00037refs/tags/jenkins-accept-pull-request-temp\u000f * \u000266379c9\u0002 : test: Environment varible to specify directory for pipes (+2 more commits) - http://git.io/hxeS","date":"2015-03-23T23:30:51.483Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Michael Dawson\u000f \u00037refs/tags/jenkins-accept-commit-temp\u000f * \u0002ecdf151\u0002 : test: Environment varible to specify directory for pipes (+2 more commits) - http://git.io/hxvR","date":"2015-03-23T23:32:41.655Z","type":"message"}
{"nick":"avalanche123","date":"2015-03-23T23:44:00.424Z","type":"join"}
{"nick":"danfried","reason":"Quit: WeeChat 0.4.2","date":"2015-03-23T23:45:58.388Z","type":"quit"}
{"nick":"benjamingr","reason":"Quit: Connection closed for inactivity","date":"2015-03-23T23:47:21.226Z","type":"quit"}
{"nick":"rendar","date":"2015-03-23T23:56:19.665Z","type":"quit"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2015-03-23T23:59:16.961Z","type":"quit"}
