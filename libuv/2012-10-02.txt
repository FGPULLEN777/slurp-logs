{"nick":"bnoordhuis","message":"piscisaureus_: btw, what exactly do you need it for?","date":"2012-10-02T00:00:02.246Z","type":"message"}
{"nick":"TooTallNate","message":"i know there's packages out there that do that...","date":"2012-10-02T00:00:02.848Z","type":"message"}
{"nick":"mmalecki","message":"that was what I was thinking about :)","date":"2012-10-02T00:00:05.783Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2012-10-02T00:00:12.935Z","type":"quit"}
{"nick":"mmalecki","message":"which config system do you like? nconf?","date":"2012-10-02T00:00:14.648Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: well, my idea is to create a simple array with loop fds","date":"2012-10-02T00:00:23.041Z","type":"message"}
{"nick":"mmalecki","message":"I'm not sure what is used in npm, config-chain?","date":"2012-10-02T00:00:34.960Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: and walk that list when dispatching a signal","date":"2012-10-02T00:00:39.278Z","type":"message"}
{"nick":"c4milo","date":"2012-10-02T00:00:54.642Z","type":"join"}
{"nick":"TooTallNate","message":"mmalecki: i try to stick with what npm uses","date":"2012-10-02T00:00:58.341Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but if I need to expand the array (because a new loop is started) then the array needs to be resized","date":"2012-10-02T00:01:01.891Z","type":"message"}
{"nick":"TooTallNate","message":"mmalecki: do you have a preference for \"disturl\" vs. \"dist-url\"","date":"2012-10-02T00:01:27.263Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: you can't do that from a signal handler","date":"2012-10-02T00:01:27.440Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but I need to avoid releasing the old array while a signal handler is iterating over it","date":"2012-10-02T00:01:30.859Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: why not?","date":"2012-10-02T00:01:42.601Z","type":"message"}
{"nick":"TooTallNate","message":"mmalecki: there's just no config flags that currently have \"-\", so it looks a little werid","date":"2012-10-02T00:01:44.668Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: is for( ;; ) not async signal safe these days?","date":"2012-10-02T00:01:52.948Z","type":"message"}
{"nick":"mmalecki","message":"TooTallNate: I used dist-url because that seems to be a unix convention, but I have no strong feeling for that","date":"2012-10-02T00:02:06.526Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: no, i thought you meant malloc() from a signal handler","date":"2012-10-02T00:02:08.124Z","type":"message"}
{"nick":"TooTallNate","message":"mmalecki: in retrospect, people often try --node-dir when it's really --nodedir","date":"2012-10-02T00:02:35.371Z","type":"message"}
{"nick":"TooTallNate","message":"mmalecki: support for both would be ideal :)","date":"2012-10-02T00:02:44.042Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: but you want to do some compare-and-swap pointer trickery, i presume?","date":"2012-10-02T00:02:46.089Z","type":"message"}
{"nick":"piscisaureus_","message":"yes","date":"2012-10-02T00:02:51.692Z","type":"message"}
{"nick":"mmalecki","message":"yeah, I was wondering wtf didn't that work at first.","date":"2012-10-02T00:02:54.179Z","type":"message"}
{"nick":"mmalecki","message":"TooTallNate: YOU KNOW I STILL NEED SOME SLEEP","date":"2012-10-02T00:03:15.676Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: you don't have to, you can use a volatile sig_atomic_t flag","date":"2012-10-02T00:03:21.566Z","type":"message"}
{"nick":"mmalecki","message":"meh, can do that","date":"2012-10-02T00:03:30.216Z","type":"message"}
{"nick":"TooTallNate","message":"mmalecki: get sleep :) your patch lgtm; mergin","date":"2012-10-02T00:03:31.386Z","type":"message"}
{"nick":"mmalecki","message":"so npm uses npmconf","date":"2012-10-02T00:03:39.833Z","type":"message"}
{"nick":"piscisaureus_","message":"hmm","date":"2012-10-02T00:03:41.857Z","type":"message"}
{"nick":"TooTallNate","message":"mmalecki: i think npmconf is a layer on top of another config system though","date":"2012-10-02T00:03:56.883Z","type":"message"}
{"nick":"bnoordhuis","message":"hmm, wait","date":"2012-10-02T00:03:58.623Z","type":"message"}
{"nick":"mmalecki","message":"TooTallNate: config-chain","date":"2012-10-02T00:04:10.109Z","type":"message"}
{"nick":"mmalecki","message":"thanks for merging :)","date":"2012-10-02T00:04:23.925Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: you need to take some care and avoid races or deadlocks","date":"2012-10-02T00:04:51.133Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yes, I know :-)","date":"2012-10-02T00:04:59.012Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: i want to implement a special type of spinlock","date":"2012-10-02T00:05:11.155Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: there's one issue with signals and locks of any kind, the signal handler can run as the same thread that currently holds the lock","date":"2012-10-02T00:06:08.714Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I know. Hence, a *special* type of spinlock :-)","date":"2012-10-02T00:06:25.438Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: cool. it's possible, you just need to tread carefully","date":"2012-10-02T00:07:09.726Z","type":"message"}
{"nick":"piscisaureus_","message":"it's sad that neither pthread_yield nor nanosleep are async signal safe","date":"2012-10-02T00:07:55.567Z","type":"message"}
{"nick":"piscisaureus_","message":"yet, poll() is ...","date":"2012-10-02T00:08:05.059Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: async safe as in usable from in a signal handler? if you use ppoll(), you can still sleep with nanosecond precision, async safe :)","date":"2012-10-02T00:10:13.765Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yeah, I considered that. I just think it's odd that poll would be safe but nanosleep isn't ...","date":"2012-10-02T00:10:48.140Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: the motivation is that poll() is always a syscall while nanosleep could be a libc function","date":"2012-10-02T00:11:25.616Z","type":"message"}
{"nick":"bnoordhuis","message":"it's not always true btw, poll() isn't a syscall on os x iirc","date":"2012-10-02T00:11:43.078Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: sleep() is also safe","date":"2012-10-02T00:15:08.910Z","type":"message"}
{"nick":"bnoordhuis","message":"is it? okay, bad motivation then","date":"2012-10-02T00:15:22.532Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll be darned. alarm() is as well","date":"2012-10-02T00:16:35.816Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: it would probably be easiest to just block all signals while updating the thing btw","date":"2012-10-02T00:16:53.693Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: why not just do that?","date":"2012-10-02T00:16:58.619Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: http://www.gnu.org/software/libc/manual/html_node/Why-Block.html#Why-Block","date":"2012-10-02T00:18:26.279Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: inside or outside of the signal handler?","date":"2012-10-02T00:18:30.891Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: outsize","date":"2012-10-02T00:18:37.082Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: block it in uv_signal_start/stop","date":"2012-10-02T00:18:50.425Z","type":"message"}
{"nick":"bnoordhuis","message":"oh right, that could work","date":"2012-10-02T00:18:57.967Z","type":"message"}
{"nick":"piscisaureus_","message":"probably even easier :-)","date":"2012-10-02T00:19:09.736Z","type":"message"}
{"nick":"piscisaureus_","message":"we'd still have to ensure that we don't update any state when the signal handler is already running","date":"2012-10-02T00:20:56.645Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2012-10-02T00:23:00.042Z","type":"quit"}
{"nick":"bnoordhuis","message":"piscisaureus_: that's where the sig_atomic_t comes in","date":"2012-10-02T00:23:26.373Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: haha, well...","date":"2012-10-02T00:23:58.627Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: how?","date":"2012-10-02T00:24:00.645Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: consider the situation where one thread is trying to start a signal handler while 2 others are already running a signal handler","date":"2012-10-02T00:24:31.364Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: the signal handler sets the flag, normal code checks it with while (busy); after blocking signals but before touching the array","date":"2012-10-02T00:24:57.576Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: alright. now think of 2 signal handlers running at the same time","date":"2012-10-02T00:25:17.230Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: you want to do:","date":"2012-10-02T00:25:30.481Z","type":"message"}
{"nick":"piscisaureus_","message":"signal_handler_running++ ?","date":"2012-10-02T00:25:30.624Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: that's not race free","date":"2012-10-02T00:25:35.062Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: why would you have more than one signal handler touching that array?","date":"2012-10-02T00:25:43.476Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: maybe you should explain what you're trying to do :)","date":"2012-10-02T00:26:00.486Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: well, because 2 signal handlers could run at the same time right?","date":"2012-10-02T00:26:05.818Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: if you have multiple threads","date":"2012-10-02T00:26:13.599Z","type":"message"}
{"nick":"piscisaureus_","message":"one signal may be delivered to thread A and another could be delivered to thread B at the same tiem","date":"2012-10-02T00:26:29.592Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: you generally let one thread handle signals","date":"2012-10-02T00:27:29.513Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: and block them in the other threads","date":"2012-10-02T00:27:40.358Z","type":"message"}
{"nick":"bnoordhuis","message":"note to self, i need to do that in the new thread pool","date":"2012-10-02T00:27:50.883Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I thought you told me that wasn't safe","date":"2012-10-02T00:27:55.882Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: well... not for a library, because it can't assume that all threads cooperate","date":"2012-10-02T00:28:28.271Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: btw, is this for libuv or runjs?","date":"2012-10-02T00:29:04.949Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: libuv","date":"2012-10-02T00:29:10.851Z","type":"message"}
{"nick":"bnoordhuis","message":"ah okay","date":"2012-10-02T00:29:15.884Z","type":"message"}
{"nick":"c4milo","date":"2012-10-02T00:42:34.308Z","type":"join"}
{"nick":"piscisaureus_","message":"I suppose it would also be possible to implement locking using read() and dup2() :-)","date":"2012-10-02T00:44:45.507Z","type":"message"}
{"nick":"erickt","reason":"Ping timeout: 260 seconds","date":"2012-10-02T00:54:48.562Z","type":"quit"}
{"nick":"piscisaureus_","message":"bnoordhuis: async signal safe lock https://gist.github.com/3815525. How hard can it be?","date":"2012-10-02T00:54:48.704Z","type":"message"}
{"nick":"piscisaureus_","message":"(still have to beware of deadlocks - this can be solved with signal blocking)","date":"2012-10-02T00:54:48.704Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: does it actually compile? } (while r < 0 && errno == EINTR);","date":"2012-10-02T00:56:12.158Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: no it was to give you the idea","date":"2012-10-02T00:56:22.878Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: didn't try","date":"2012-10-02T00:56:25.776Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: okay, noted","date":"2012-10-02T00:57:17.815Z","type":"message"}
{"nick":"bnoordhuis","message":"you swapped the read and write fds btw","date":"2012-10-02T00:57:26.945Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: do you see any conceptual issues?","date":"2012-10-02T00:57:37.553Z","type":"message"}
{"nick":"piscisaureus_","message":"I may just be overlooking something","date":"2012-10-02T00:57:48.619Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: it looks simple enough. just don't call release twice :)","date":"2012-10-02T00:58:27.506Z","type":"message"}
{"nick":"piscisaureus_","message":"true","date":"2012-10-02T00:58:47.715Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033bnoordhuis\u000f created branch reviewme","date":"2012-10-02T01:01:35.064Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: ^","date":"2012-10-02T01:01:42.913Z","type":"message"}
{"nick":"piscisaureus_","message":"it lacks a link","date":"2012-10-02T01:01:50.650Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2012-10-02T01:01:55.055Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: ^","date":"2012-10-02T01:01:55.618Z","type":"message"}
{"nick":"tjfontaine","message":"I have to make that link up, so where would you like to be directed?","date":"2012-10-02T01:02:18.505Z","type":"message"}
{"nick":"travis-ci","date":"2012-10-02T01:03:03.391Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#753 (reviewme - b77b648 : Ben Noordhuis): The build was fixed.","date":"2012-10-02T01:03:03.536Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/commit/b77b648b0b79","date":"2012-10-02T01:03:03.537Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/2631410","date":"2012-10-02T01:03:03.537Z","type":"message"}
{"nick":"travis-ci","date":"2012-10-02T01:03:03.537Z","type":"part"}
{"nick":"tjfontaine","message":"piscisaureus_: for instance the github dashboard only links to https://github.com/joyent/libuv which doesn't seem so helpful","date":"2012-10-02T01:04:05.634Z","type":"message"}
{"nick":"tjfontaine","message":"or would you rather https://github.com/joyent/libuv/compare/reviewme","date":"2012-10-02T01:04:44.543Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: that, or libuv/commits/<branchname>","date":"2012-10-02T01:05:04.209Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: i'd like /compare/<branch>","date":"2012-10-02T01:05:51.905Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2012-10-02T01:06:02.691Z","type":"quit"}
{"nick":"tjfontaine","message":"k","date":"2012-10-02T01:06:11.637Z","type":"message"}
{"nick":"hz","date":"2012-10-02T01:11:03.101Z","type":"quit"}
{"nick":"bnoordhuis","message":"okay, off to bed. sleep tight everyone","date":"2012-10-02T01:13:52.986Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: mostly lgtm, take care of the thread safety issue","date":"2012-10-02T01:14:42.372Z","type":"message"}
{"nick":"piscisaureus_","message":"I'm off to bed too","date":"2012-10-02T01:17:34.432Z","type":"message"}
{"nick":"piscisaureus_","message":"later peepz","date":"2012-10-02T01:17:37.413Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2012-10-02T01:18:36.275Z","type":"quit"}
{"nick":"isaacs","message":"THE DIE IS CAST! http://jsconf.com.au/speakers/isaac","date":"2012-10-02T01:18:59.167Z","type":"message"}
{"nick":"isaacs","message":"I'm on the hook to talk about streams, so i have to actually finish this :)","date":"2012-10-02T01:19:12.063Z","type":"message"}
{"nick":"MI6","reason":"Remote host closed the connection","date":"2012-10-02T01:20:03.686Z","type":"quit"}
{"nick":"MI6","date":"2012-10-02T01:20:14.240Z","type":"join"}
{"nick":"piscisaureus_","message":"australistan","date":"2012-10-02T01:20:14.978Z","type":"message"}
{"nick":"piscisaureus_","message":"cool","date":"2012-10-02T01:20:16.748Z","type":"message"}
{"nick":"lohkey","date":"2012-10-02T01:27:59.460Z","type":"join"}
{"nick":"c4milo","message":"what's the closest datatype to a unsigned long in V8? ","date":"2012-10-02T01:32:35.219Z","type":"message"}
{"nick":"c4milo","message":"Number? ","date":"2012-10-02T01:32:37.413Z","type":"message"}
{"nick":"tjfontaine","message":"javascript numbers are max of 48bits","date":"2012-10-02T01:33:00.130Z","type":"message"}
{"nick":"tjfontaine","message":"c4milo: v8.h says NumberValue is a double though","date":"2012-10-02T01:35:10.148Z","type":"message"}
{"nick":"c4milo","message":"yeah","date":"2012-10-02T01:35:16.039Z","type":"message"}
{"nick":"c4milo","message":"this is what the ecmascript standard says ","date":"2012-10-02T01:36:03.787Z","type":"message"}
{"nick":"c4milo","message":"primitive value corresponding to a double-precision 64-bit binary format IEEE 754 value","date":"2012-10-02T01:36:04.199Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: javascript numbers are doubles","date":"2012-10-02T01:36:10.156Z","type":"message"}
{"nick":"abraxas","date":"2012-10-02T01:37:13.545Z","type":"join"}
{"nick":"piscisaureus_","message":"tjfontaine: but they retain integer precision up to 2^53","date":"2012-10-02T01:37:48.136Z","type":"message"}
{"nick":"tjfontaine","message":"ah that's what I was looking through the rfc for, thanks","date":"2012-10-02T01:38:10.705Z","type":"message"}
{"nick":"tjfontaine","message":"s/frc/standard/","date":"2012-10-02T01:38:21.336Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: the reason is that it has a 52-bit mantissa, plus an extra bit because it has base 2","date":"2012-10-02T01:39:14.968Z","type":"message"}
{"nick":"tjfontaine","message":"right I just found some mentioning of that","date":"2012-10-02T01:40:49.404Z","type":"message"}
{"nick":"piscisaureus_","reason":"Read error: Connection reset by peer","date":"2012-10-02T01:44:23.634Z","type":"quit"}
{"nick":"erickt","date":"2012-10-02T02:01:28.141Z","type":"join"}
{"nick":"piscisaureus_","date":"2012-10-02T02:25:20.096Z","type":"join"}
{"nick":"piscisaureus_","reason":"Client Quit","date":"2012-10-02T02:25:26.034Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2012-10-02T02:41:45.358Z","type":"quit"}
{"nick":"TooTallNate","date":"2012-10-02T02:59:36.644Z","type":"join"}
{"nick":"TooTallNate","reason":"Ping timeout: 245 seconds","date":"2012-10-02T03:03:58.449Z","type":"quit"}
{"nick":"TooTallNate","date":"2012-10-02T03:06:33.582Z","type":"join"}
{"nick":"lohkey","reason":"Quit: lohkey","date":"2012-10-02T03:26:33.971Z","type":"quit"}
{"nick":"EhevuTov","date":"2012-10-02T03:53:12.606Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2012-10-02T04:02:01.290Z","type":"quit"}
{"nick":"mmalecki","new_nick":"mmalecki[zzz]","date":"2012-10-02T04:06:24.488Z","type":"nick"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2012-10-02T04:41:53.102Z","type":"quit"}
{"nick":"MI6","reason":"Remote host closed the connection","date":"2012-10-02T05:19:57.988Z","type":"quit"}
{"nick":"Aria","reason":"Remote host closed the connection","date":"2012-10-02T05:23:31.780Z","type":"quit"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2012-10-02T05:31:03.250Z","type":"quit"}
{"nick":"erickt","reason":"Ping timeout: 240 seconds","date":"2012-10-02T05:37:29.126Z","type":"quit"}
{"nick":"erickt","date":"2012-10-02T05:42:55.326Z","type":"join"}
{"nick":"sj26","reason":"Quit: Rainbows!","date":"2012-10-02T05:45:53.719Z","type":"quit"}
{"nick":"stagas","date":"2012-10-02T05:49:16.314Z","type":"join"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-10-02T06:35:51.068Z","type":"quit"}
{"nick":"kristate","date":"2012-10-02T06:40:57.384Z","type":"join"}
{"nick":"kristate","reason":"Remote host closed the connection","date":"2012-10-02T06:42:04.485Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-10-02T06:43:42.949Z","type":"quit"}
{"nick":"rendar","date":"2012-10-02T06:52:23.769Z","type":"join"}
{"nick":"mikeal","date":"2012-10-02T07:26:08.414Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 260 seconds","date":"2012-10-02T07:36:36.307Z","type":"quit"}
{"nick":"saghul","date":"2012-10-02T07:55:30.258Z","type":"join"}
