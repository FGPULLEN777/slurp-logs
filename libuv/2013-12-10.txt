{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-12-10T00:00:01.250Z","type":"quit"}
{"nick":"ircretary","date":"2013-12-10T00:00:08.940Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 248 seconds","date":"2013-12-10T00:01:09.698Z","type":"quit"}
{"nick":"jmar777","date":"2013-12-10T00:02:12.769Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: ping","date":"2013-12-10T00:07:28.091Z","type":"message"}
{"nick":"tjfontaine","message":"pong","date":"2013-12-10T00:07:37.079Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: two things. can we make console.error = proccess._rawDebug? and, I want to add some simple logic so if console.{log,error,etc.} is called from inside an asynclistener callback it'll automatically bypass the callbacks.","date":"2013-12-10T00:08:44.882Z","type":"message"}
{"nick":"trevnorris","message":"honestly i'm not sure why we need to create a ReqWrap for those calls anyways.","date":"2013-12-10T00:08:54.872Z","type":"message"}
{"nick":"brson","date":"2013-12-10T00:09:03.782Z","type":"join"}
{"nick":"tjfontaine","message":"rawDebug calls a flush on each call?","date":"2013-12-10T00:09:25.222Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-12-10T00:09:36.386Z","type":"message"}
{"nick":"tjfontaine","message":"how does rawDebug help .log?","date":"2013-12-10T00:09:46.222Z","type":"message"}
{"nick":"trevnorris","message":"rawDebug just does fprint(stderr,... but I don't see why .log can't do the same but with stdout","date":"2013-12-10T00:10:19.955Z","type":"message"}
{"nick":"tjfontaine","message":"that's a pretty significant change, I'm sure that we'd get bit by this in one way or another","date":"2013-12-10T00:10:55.884Z","type":"message"}
{"nick":"tjfontaine","message":"at the very least it makes printing much slower triggering a flush every call","date":"2013-12-10T00:11:09.110Z","type":"message"}
{"nick":"trevnorris","message":"is logging asynchronous?","date":"2013-12-10T00:11:33.423Z","type":"message"}
{"nick":"tjfontaine","message":"no","date":"2013-12-10T00:11:35.655Z","type":"message"}
{"nick":"tjfontaine","message":"but","date":"2013-12-10T00:11:38.280Z","type":"message"}
{"nick":"tjfontaine","message":"well","date":"2013-12-10T00:11:39.823Z","type":"message"}
{"nick":"tjfontaine","message":"actually \"sometimes\"","date":"2013-12-10T00:11:43.300Z","type":"message"}
{"nick":"dshaw_","reason":"Read error: Connection reset by peer","date":"2013-12-10T00:12:30.224Z","type":"quit"}
{"nick":"trevnorris","message":"strange. well, i'm going to add in the logic to make console.* an exception when inside an asynclisteners. it's a simple check, and would make other edge cases easier.","date":"2013-12-10T00:12:31.227Z","type":"message"}
{"nick":"trevnorris","message":"my docs:","date":"2013-12-10T00:14:25.477Z","type":"message"}
{"nick":"trevnorris","message":"> \"allows developers to be notified about key events\"","date":"2013-12-10T00:14:25.630Z","type":"message"}
{"nick":"trevnorris","message":"\"key events\"? wtf does that mean. man, I'm really glad I get to revisit this before the v0.12 release","date":"2013-12-10T00:14:25.630Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: a post v0.12 API addition is the \"complete\" callback. the implementation is simple enough, and I think it'd be useful.","date":"2013-12-10T00:16:17.468Z","type":"message"}
{"nick":"dshaw_","date":"2013-12-10T00:17:50.168Z","type":"join"}
{"nick":"timoxley","date":"2013-12-10T00:18:22.997Z","type":"join"}
{"nick":"tjfontaine","message":"what's \"complete\" mean in this context?","date":"2013-12-10T00:18:55.991Z","type":"message"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2013-12-10T00:19:25.926Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-10T00:20:09.062Z","type":"quit"}
{"nick":"mikeal","date":"2013-12-10T00:20:29.555Z","type":"join"}
{"nick":"dap_","date":"2013-12-10T00:20:57.475Z","type":"join"}
{"nick":"trevnorris","message":"a callback that will run when all possible asynchronous events have been run from the level at which the asynclistener was added.","date":"2013-12-10T00:21:26.524Z","type":"message"}
{"nick":"trevnorris","message":"so: addAsync(); nextTick(fn() { setImmediate(fn() { }); }); removeAsync(); would run \"complete\" after the fn in the setImmediate has run","date":"2013-12-10T00:22:21.848Z","type":"message"}
{"nick":"trevnorris","message":"because it'd be impossible for any other asynchronous callbacks to be added to its asynchronous callstack","date":"2013-12-10T00:22:57.235Z","type":"message"}
{"nick":"abraxas","date":"2013-12-10T00:24:28.113Z","type":"join"}
{"nick":"othiym23","message":"trevnorris: I like the idea of the \"complete\" callback, as long as everybody involved understands that it's not guaranteed to fire 100% of the time","date":"2013-12-10T00:25:06.151Z","type":"message"}
{"nick":"othiym23","message":"the discussion of done on thenables for DOM Promises was exhausting enough to go through the first time","date":"2013-12-10T00:25:38.225Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-10T00:25:53.382Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23: why wouldn't it be? i mean, i'm fine w/ that but don't see why it wouldn't. hahaha. yeah, not getting into something that complex.","date":"2013-12-10T00:25:58.966Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I'll put it this way: the obverse of having a done() function is considering how to make async ops cancelable","date":"2013-12-10T00:26:37.717Z","type":"message"}
{"nick":"othiym23","message":"they share a lot of the same concerns (and infringe on the halting problem in similar ways)","date":"2013-12-10T00:26:52.413Z","type":"message"}
{"nick":"trevnorris","message":"this implementation is as simple as a ref counter. I have a central location for all async callbacks to be created and run, so that'll be easy.","date":"2013-12-10T00:27:03.559Z","type":"message"}
{"nick":"trevnorris","message":"oh, freak. yeah. adding something like .pause() to a single async callback stack is ridiculous.","date":"2013-12-10T00:27:19.970Z","type":"message"}
{"nick":"abraxas","reason":"Ping timeout: 248 seconds","date":"2013-12-10T00:28:53.676Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23: so, is your concern that this functionality would make people ask for the other APIs?","date":"2013-12-10T00:30:41.144Z","type":"message"}
{"nick":"mikeal","date":"2013-12-10T00:30:45.938Z","type":"join"}
{"nick":"othiym23","message":"trevnorris: nah, I just don't want to make promises we can't keep","date":"2013-12-10T00:31:29.052Z","type":"message"}
{"nick":"othiym23","message":"also my main concern is how much latency these APIs add when listeners are in use","date":"2013-12-10T00:31:46.930Z","type":"message"}
{"nick":"othiym23","message":"which is sorta the opposite of your concern ;)","date":"2013-12-10T00:31:53.893Z","type":"message"}
{"nick":"trevnorris","message":"haha. no. I want this API to be fast enough that anyone using it won't feel the need to use anything else.","date":"2013-12-10T00:32:21.680Z","type":"message"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-12-10T00:32:24.023Z","type":"quit"}
{"nick":"zz_karupanerura","new_nick":"karupanerura","date":"2013-12-10T00:32:27.350Z","type":"nick"}
{"nick":"trevnorris","message":"cheaply keeping counters is easy.","date":"2013-12-10T00:33:08.330Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-12-10T00:38:14.285Z","type":"quit"}
{"nick":"felixge_","date":"2013-12-10T00:38:54.671Z","type":"join"}
{"nick":"kuplatup1u","date":"2013-12-10T00:38:54.821Z","type":"join"}
{"nick":"felixge","reason":"Ping timeout: 250 seconds","date":"2013-12-10T00:38:56.511Z","type":"quit"}
{"nick":"felixge_","new_nick":"felixge","date":"2013-12-10T00:38:56.891Z","type":"nick"}
{"nick":"kuplatupsu","reason":"Ping timeout: 250 seconds","date":"2013-12-10T00:38:58.212Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 260 seconds","date":"2013-12-10T00:39:59.796Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: on https://github.com/joyent/node/issues/6664 should we just zero fill the stupid things?","date":"2013-12-10T00:41:29.182Z","type":"message"}
{"nick":"AvianFlu","date":"2013-12-10T00:41:59.969Z","type":"join"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2013-12-10T00:42:34.774Z","type":"quit"}
{"nick":"saghul_","date":"2013-12-10T00:42:52.798Z","type":"join"}
{"nick":"hueniverse1","date":"2013-12-10T00:44:26.008Z","type":"join"}
{"nick":"saghul","reason":"Ping timeout: 250 seconds","date":"2013-12-10T00:46:05.336Z","type":"quit"}
{"nick":"saghul_","new_nick":"saghul","date":"2013-12-10T00:46:05.337Z","type":"nick"}
{"nick":"hueniverse","reason":"Ping timeout: 250 seconds","date":"2013-12-10T00:46:07.946Z","type":"quit"}
{"nick":"mmalecki_","date":"2013-12-10T00:46:13.956Z","type":"join"}
{"nick":"mmalecki","reason":"Ping timeout: 250 seconds","date":"2013-12-10T00:46:14.603Z","type":"quit"}
{"nick":"jamesmhowe","date":"2013-12-10T00:49:51.781Z","type":"join"}
{"nick":"kazupon","date":"2013-12-10T00:52:49.042Z","type":"join"}
{"nick":"trevnorris","message":"othiym23: ping","date":"2013-12-10T00:56:28.594Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: pong","date":"2013-12-10T00:57:03.640Z","type":"message"}
{"nick":"jameshowe","reason":"*.net *.split","date":"2013-12-10T00:57:13.579Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23: do you think that the after async-callback should fire even if the event callback itself errored, but was handled?","date":"2013-12-10T00:57:37.583Z","type":"message"}
{"nick":"trevnorris","message":"currently it doesn't, and don't know if that's something I want to bother with.","date":"2013-12-10T00:58:01.334Z","type":"message"}
{"nick":"dap_","date":"2013-12-10T00:58:36.777Z","type":"join"}
{"nick":"othiym23","message":"trevnorris: I went to considerable shenanigans to ensure that worked for the polyfill, so right now it's a difference in behavior that's not exposed via the tests we share","date":"2013-12-10T00:59:07.578Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: ok. so sounds like you think I should implement the same. sounds fine.","date":"2013-12-10T00:59:38.382Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: personally, I think that it's important for consistency's sake, but if you don't think it's worth the hassle, I'd double-check with piscesaureus and ensure it won't nerf tasks if it's not there","date":"2013-12-10T00:59:57.348Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: typed arrays should absolutely behave like their ignorant browser brethren, but with a memset not a .fill","date":"2013-12-10T01:00:14.658Z","type":"message"}
{"nick":"trevnorris","message":"eh, implementation is simple enough. it's just one extra fn call","date":"2013-12-10T01:00:26.804Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: ok. i'll throw that on. it's a super trivial fix","date":"2013-12-10T01:00:34.715Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-12-10T01:00:37.990Z","type":"message"}
{"nick":"trevnorris","message":"but yeah, very ignorant, and slow","date":"2013-12-10T01:00:40.265Z","type":"message"}
{"nick":"tjfontaine","message":"it's should absolutely be opt-in","date":"2013-12-10T01:01:29.187Z","type":"message"}
{"nick":"tjfontaine","message":"but whatever.","date":"2013-12-10T01:01:36.949Z","type":"message"}
{"nick":"kazupon","date":"2013-12-10T01:01:38.907Z","type":"quit"}
{"nick":"tjfontaine","message":"FINE ES PLAY TO THE LOWEST COMMON DENOMINATOR","date":"2013-12-10T01:01:53.345Z","type":"message"}
{"nick":"LOUDBOT","message":"I RAISE MY MIDDLE FINGER AT YOU","date":"2013-12-10T01:01:53.728Z","type":"message"}
{"nick":"tjfontaine","message":"exactly.","date":"2013-12-10T01:01:57.395Z","type":"message"}
{"nick":"trevnorris","message":"i understand it for the browser. you don't want any webpage poking around your memory at random.","date":"2013-12-10T01:02:07.705Z","type":"message"}
{"nick":"tjfontaine","message":"\"random\"","date":"2013-12-10T01:02:14.727Z","type":"message"}
{"nick":"tjfontaine","message":"it's not really like that, because of things like ASLR","date":"2013-12-10T01:02:24.891Z","type":"message"}
{"nick":"kazupon","date":"2013-12-10T01:02:38.917Z","type":"join"}
{"nick":"tjfontaine","message":"it's mostly a concern about data leakage, and about if you know what's going on wrt language and features","date":"2013-12-10T01:03:06.506Z","type":"message"}
{"nick":"trevnorris","message":"why doesn't ./configure auto-run anymore when you run make?","date":"2013-12-10T01:03:25.607Z","type":"message"}
{"nick":"tjfontaine","message":"a chicken and an egg problem, you could make a change to your config.gypi and then it would get blown away because make decided it was time to rerun","date":"2013-12-10T01:04:19.817Z","type":"message"}
{"nick":"tjfontaine","message":"also having make run configure is super automagical","date":"2013-12-10T01:04:36.433Z","type":"message"}
{"nick":"tjfontaine","message":"./configure && make && make install","date":"2013-12-10T01:04:44.257Z","type":"message"}
{"nick":"trevnorris","message":"okie dokie","date":"2013-12-10T01:04:46.607Z","type":"message"}
{"nick":"tjfontaine","message":"that's the tried and true pattern for decades :)","date":"2013-12-10T01:04:56.591Z","type":"message"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2013-12-10T01:05:06.659Z","type":"quit"}
{"nick":"trevnorris","message":"haven't you noticed? we're writing JAVASCRIPT!","date":"2013-12-10T01:05:25.756Z","type":"message"}
{"nick":"tjfontaine","message":"we're running on unix.","date":"2013-12-10T01:05:32.927Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2013-12-10T01:05:35.108Z","type":"message"}
{"nick":"trevnorris","message":"WE LAUGH IN THE FACE OF PROVEN TECHNIQUES!!!","date":"2013-12-10T01:05:54.909Z","type":"message"}
{"nick":"LOUDBOT","message":"GOING HOEM","date":"2013-12-10T01:05:55.323Z","type":"message"}
{"nick":"trevnorris","message":"yes. and it hurts me a little every time I see a module written like it was for the browser...","date":"2013-12-10T01:06:27.601Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-12-10T01:07:01.935Z","type":"quit"}
{"nick":"othiym23","message":"I still think my favorite was the rethinkdb team shipping a minified / Closure Compiler-munged module for Node","date":"2013-12-10T01:07:05.019Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-12-10T01:07:07.088Z","type":"quit"}
{"nick":"othiym23","message":"it took a surprisingly long time to convince them that was a really really really really really really really really really bad idea","date":"2013-12-10T01:07:21.355Z","type":"message"}
{"nick":"tjfontaine","message":"people love the tiny codes","date":"2013-12-10T01:07:44.734Z","type":"message"}
{"nick":"groundwater","message":"cuz less letters = faster! duhh","date":"2013-12-10T01:08:20.205Z","type":"message"}
{"nick":"othiym23","message":"well, the tricky part was that they were using protobufs, which required Closure Compiler to do its thing","date":"2013-12-10T01:09:08.110Z","type":"message"}
{"nick":"othiym23","message":"but still, trying to debug with that thing in the mix was a giant pile of ugh","date":"2013-12-10T01:09:28.889Z","type":"message"}
{"nick":"othiym23","message":"what Node really needs is sourcemap support, othiym23 deadpanned","date":"2013-12-10T01:09:49.677Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Trevor Norris\u000f \u00037master\u000f * \u00027222539\u0002 : node: follow specification, zero-fill ArrayBuffers - http://git.io/kLikvg","date":"2013-12-10T01:14:01.682Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: fwiw, do you remember me asking you about this very specific issue? :)","date":"2013-12-10T01:14:59.913Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: not really, but my memory retention isn't that great :P","date":"2013-12-10T01:15:37.992Z","type":"message"}
{"nick":"tjfontaine","message":"I did a v8 upgrade, and the allocator pattern changed, introducing the secondary function for unitialized functions","date":"2013-12-10T01:16:39.066Z","type":"message"}
{"nick":"tjfontaine","message":"asked if you wanted me to add the memset, and you demurred","date":"2013-12-10T01:16:57.726Z","type":"message"}
{"nick":"trevnorris","message":"BECAUSE PERFORMANCE!","date":"2013-12-10T01:18:01.237Z","type":"message"}
{"nick":"LOUDBOT","message":"OH SHIT CALIFORNIA CALLED FOR BOB BARR","date":"2013-12-10T01:18:01.688Z","type":"message"}
{"nick":"trevnorris","message":"well, i'm out.","date":"2013-12-10T01:18:55.225Z","type":"message"}
{"nick":"trevnorris","action":"&","date":"2013-12-10T01:18:56.877Z","type":"action"}
{"nick":"LOUDBOT","message":"OMG ESCH LET'S GO TO THE RENAISSANCE FAIR","date":"2013-12-10T01:18:57.314Z","type":"message"}
{"nick":"dshaw_","date":"2013-12-10T01:20:58.034Z","type":"join"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2013-12-10T01:22:03.469Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-12-10T01:22:44.792Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 272 seconds","date":"2013-12-10T01:34:57.921Z","type":"quit"}
{"nick":"hueniverse1","message":"trevnorris: any chance of getting a core domains API that allows running a function within the domain but existing the domain on a callback?","date":"2013-12-10T01:38:33.927Z","type":"message"}
{"nick":"abraxas","date":"2013-12-10T01:39:43.959Z","type":"join"}
{"nick":"otwo","date":"2013-12-10T01:44:23.925Z","type":"join"}
{"nick":"mikeal","date":"2013-12-10T01:46:55.953Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-12-10T01:47:38.358Z","type":"quit"}
{"nick":"c4milo","date":"2013-12-10T01:53:04.179Z","type":"join"}
{"nick":"skebcio","reason":"Read error: Connection reset by peer","date":"2013-12-10T01:53:55.484Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #762 \u00037UNSTABLE\u000f smartos-x64 (9/683) osx-x64 (2/683) centos-ia32 (8/683) ubuntu-ia32 (1/683) smartos-ia32 (9/683) osx-ia32 (1/683) centos-x64 (6/683) ubuntu-x64 (2/683) http://jenkins.nodejs.org/job/nodejs-master/762/","date":"2013-12-10T01:54:09.484Z","type":"message"}
{"nick":"skebcio","date":"2013-12-10T01:54:13.646Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-12-10T01:54:30.981Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2013-12-10T01:54:55.444Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-10T01:55:46.380Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 260 seconds","date":"2013-12-10T01:57:55.806Z","type":"quit"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2013-12-10T01:59:50.827Z","type":"quit"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2013-12-10T02:08:25.142Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-12-10T02:09:01.497Z","type":"join"}
{"nick":"jmar777_","date":"2013-12-10T02:14:40.883Z","type":"join"}
{"nick":"dlmanning","reason":"Ping timeout: 252 seconds","date":"2013-12-10T02:15:41.743Z","type":"quit"}
{"nick":"jmar777","reason":"Ping timeout: 248 seconds","date":"2013-12-10T02:16:37.882Z","type":"quit"}
{"nick":"kazupon_","date":"2013-12-10T02:19:20.460Z","type":"join"}
{"nick":"dlmanning","date":"2013-12-10T02:20:03.839Z","type":"join"}
{"nick":"mikolalysenko","date":"2013-12-10T02:22:07.938Z","type":"join"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-12-10T02:27:00.576Z","type":"quit"}
{"nick":"octetcloud","date":"2013-12-10T02:29:03.813Z","type":"join"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2013-12-10T02:37:34.291Z","type":"quit"}
{"nick":"rmg","date":"2013-12-10T02:38:09.248Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-12-10T02:41:52.174Z","type":"quit"}
{"nick":"rmg","reason":"Ping timeout: 248 seconds","date":"2013-12-10T02:42:45.685Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-12-10T02:56:46.363Z","type":"join"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2013-12-10T03:03:14.613Z","type":"quit"}
{"nick":"rmg","date":"2013-12-10T03:06:03.986Z","type":"join"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2013-12-10T03:06:15.911Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-12-10T03:07:02.935Z","type":"join"}
{"nick":"inolen","date":"2013-12-10T03:22:30.469Z","type":"join"}
{"nick":"c4milo","date":"2013-12-10T03:31:53.567Z","type":"join"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2013-12-10T03:36:18.217Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-12-10T03:36:56.387Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-12-10T03:37:48.702Z","type":"join"}
{"nick":"othiym23","message":"hueniverse1: expand, that's an interesting idea that I'm not sure I understand","date":"2013-12-10T03:40:08.593Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 260 seconds","date":"2013-12-10T03:46:11.814Z","type":"quit"}
{"nick":"hueniverse1","message":"othiym23: I want this: https://github.com/spumko/hapi/blob/master/lib/ext.js#L110","date":"2013-12-10T03:53:18.338Z","type":"message"}
{"nick":"mcavage_","date":"2013-12-10T03:59:41.926Z","type":"join"}
{"nick":"mcavage","reason":"Read error: Connection reset by peer","date":"2013-12-10T03:59:42.378Z","type":"quit"}
{"nick":"jmar777_","reason":"Remote host closed the connection","date":"2013-12-10T04:01:22.642Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-12-10T04:01:32.925Z","type":"join"}
{"nick":"othiym23","message":"hueniverse1: so something in core that provides functionality analgous to setup(enter, exit)?","date":"2013-12-10T04:08:47.526Z","type":"message"}
{"nick":"othiym23","message":"hueniverse1: you could probalby do that with asyncListeners instead; the implementation of domains on top of asyncListener should be pretty simple / dumb after the new rewrite","date":"2013-12-10T04:09:28.955Z","type":"message"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2013-12-10T04:17:00.813Z","type":"quit"}
{"nick":"rmg","date":"2013-12-10T04:17:35.203Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-12-10T04:20:22.669Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 272 seconds","date":"2013-12-10T04:20:53.981Z","type":"quit"}
{"nick":"rmg","reason":"Ping timeout: 272 seconds","date":"2013-12-10T04:22:31.327Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-12-10T04:34:57.001Z","type":"join"}
{"nick":"abraxas","date":"2013-12-10T04:37:23.989Z","type":"join"}
{"nick":"rmg","date":"2013-12-10T04:48:04.520Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 272 seconds","date":"2013-12-10T05:02:41.833Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-10T05:03:10.949Z","type":"join"}
{"nick":"kazupon_","reason":"Read error: Connection reset by peer","date":"2013-12-10T05:04:07.471Z","type":"quit"}
{"nick":"toothrot","reason":"Ping timeout: 252 seconds","date":"2013-12-10T05:14:37.670Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-12-10T05:16:56.804Z","type":"nick"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-12-10T05:17:00.798Z","type":"quit"}
{"nick":"c4milo_","date":"2013-12-10T05:21:38.797Z","type":"join"}
{"nick":"toothr","date":"2013-12-10T05:24:05.868Z","type":"join"}
{"nick":"dshaw_","date":"2013-12-10T05:24:22.874Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-12-10T05:26:20.943Z","type":"quit"}
{"nick":"c4milo_","reason":"Ping timeout: 248 seconds","date":"2013-12-10T05:26:29.683Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-10T05:26:39.923Z","type":"join"}
{"nick":"mikeal","date":"2013-12-10T05:28:56.741Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-10T05:34:26.646Z","type":"quit"}
{"nick":"kenperkins","date":"2013-12-10T05:34:47.447Z","type":"join"}
{"nick":"rmg","date":"2013-12-10T05:35:13.996Z","type":"join"}
{"nick":"mikeal","date":"2013-12-10T05:47:35.407Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-12-10T05:49:44.878Z","type":"quit"}
{"nick":"mikeal","date":"2013-12-10T06:17:36.996Z","type":"join"}
{"nick":"paddybyers","date":"2013-12-10T06:18:47.860Z","type":"join"}
{"nick":"abraxas","date":"2013-12-10T06:24:28.341Z","type":"join"}
{"nick":"m76","date":"2013-12-10T06:24:51.960Z","type":"join"}
{"nick":"octetcloud","reason":"Quit: WeeChat 0.4.2","date":"2013-12-10T06:28:36.503Z","type":"quit"}
{"nick":"octetcloud","date":"2013-12-10T06:29:03.477Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 272 seconds","date":"2013-12-10T06:31:59.903Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-12-10T06:38:19.477Z","type":"join"}
{"nick":"hueniverse1","message":"othiym23: is there a doc for the new asyncListener thingie?","date":"2013-12-10T06:38:38.680Z","type":"message"}
{"nick":"groundwater","message":"hueniverse1: i think here is the only place so far https://github.com/joyent/node/pull/6665","date":"2013-12-10T06:39:24.026Z","type":"message"}
{"nick":"hueniverse1","message":"\"dramatic performance impact\"","date":"2013-12-10T06:40:40.013Z","type":"message"}
{"nick":"hueniverse1","message":"thats bad right?","date":"2013-12-10T06:40:43.792Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #369 \u00037UNSTABLE\u000f windows-ia32 (11/605) windows-x64 (12/605) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/369/","date":"2013-12-10T06:41:13.683Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse1: that's just a general warning to make sure people don't over use it.","date":"2013-12-10T06:41:27.328Z","type":"message"}
{"nick":"othiym23","message":"I read that as \"don't ever use it\" first, and that seemed somewhat counterproductive","date":"2013-12-10T06:42:04.720Z","type":"message"}
{"nick":"trevnorris","message":"that's being reworded.","date":"2013-12-10T06:42:20.825Z","type":"message"}
{"nick":"hueniverse1","message":"trevnorris: I hate the current domain.run() option. I really want something better that doesn't wrap the entire execution flow.","date":"2013-12-10T06:42:29.031Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse1: hence my api design with async listeners. so you don't have any function wraps.","date":"2013-12-10T06:42:57.072Z","type":"message"}
{"nick":"hueniverse1","message":"we really need an enter-exit wrapper","date":"2013-12-10T06:42:58.343Z","type":"message"}
{"nick":"othiym23","message":"hueniverse1: it seems like it should be pretty easy to write yourself, no?","date":"2013-12-10T06:43:00.850Z","type":"message"}
{"nick":"hueniverse1","message":"well, I did","date":"2013-12-10T06:43:18.097Z","type":"message"}
{"nick":"hueniverse1","message":"and it's ugly","date":"2013-12-10T06:43:20.984Z","type":"message"}
{"nick":"hueniverse1","message":":-)","date":"2013-12-10T06:43:22.755Z","type":"message"}
{"nick":"hueniverse1","message":"joking aside, I think that people will benefit from it. I wouldn't suggest it but since you are messing with the apis anyway...","date":"2013-12-10T06:43:54.117Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: for reference, here's the PR that will be accumulating the changes: https://github.com/joyent/node/pull/6665","date":"2013-12-10T06:43:59.606Z","type":"message"}
{"nick":"hueniverse1","message":"I am happy publishing a tiny module to do this","date":"2013-12-10T06:44:02.515Z","type":"message"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2013-12-10T06:44:08.037Z","type":"quit"}
{"nick":"othiym23","message":"I would do it, but I'm in the middle of removing the default context from CLS, which breaks like half my tests and I have to look at each one and make sure I'm fixing the test the right way","date":"2013-12-10T06:44:11.210Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: on it already ;)","date":"2013-12-10T06:44:20.802Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: right now there are no actual code changes. just made changes to the tests for reference as I do the rewrite ","date":"2013-12-10T06:44:24.000Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: thank you!","date":"2013-12-10T06:44:24.414Z","type":"message"}
{"nick":"trevnorris","message":"heh, of course :)","date":"2013-12-10T06:44:28.882Z","type":"message"}
{"nick":"othiym23","message":"hueniverse1: I need to understand your API better, but in general I'm fine with adding new stuff to the domains API, but I don't want to do anything that breaks backwards compatibility","date":"2013-12-10T06:45:27.653Z","type":"message"}
{"nick":"othiym23","message":"for what it's worth","date":"2013-12-10T06:45:30.877Z","type":"message"}
{"nick":"othiym23","message":"I don't get a vote, though ;)","date":"2013-12-10T06:45:47.381Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse1: i must be oversimplifying your use case, but it seems like since you can add/remove an async listener at any point in the execution flow, that should take care of your needs.","date":"2013-12-10T06:46:41.319Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: also, i'm adding an exception to console.* so if any of those are run inside an async listener they won't be caught.","date":"2013-12-10T06:47:46.274Z","type":"message"}
{"nick":"hueniverse1","message":"trevnorris: it is going to be in the hottest code in my application, still a good idea?","date":"2013-12-10T06:47:48.067Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse1: after my rewrite, I'll say probably. my performance benchmarks are basically running perfectly tight loops on async code and measuring impact.","date":"2013-12-10T06:49:15.277Z","type":"message"}
{"nick":"trevnorris","message":"so unless you're doing that much traffic on that machine you'll be fine.","date":"2013-12-10T06:49:15.431Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse1: i mean, is your CPU usage anywhere near 100% on your servers?","date":"2013-12-10T06:49:28.429Z","type":"message"}
{"nick":"hueniverse1","message":"trevnorris: is 2% near 100%? I didn't go to CS school.","date":"2013-12-10T06:51:23.928Z","type":"message"}
{"nick":"trevnorris","message":"hahah","date":"2013-12-10T06:51:43.143Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse1: so, CPU _might_ jump to 3%. but your performance numbers won't change in the least.","date":"2013-12-10T06:52:20.900Z","type":"message"}
{"nick":"groundwater","message":"how about latency","date":"2013-12-10T06:52:44.423Z","type":"message"}
{"nick":"groundwater","message":"just being THAT GUY","date":"2013-12-10T06:52:59.511Z","type":"message"}
{"nick":"trevnorris","message":"single digit microseconds per req at worst.","date":"2013-12-10T06:53:19.512Z","type":"message"}
{"nick":"trevnorris","message":"you'll only notice performance impact if CPU is maxing out. but latency won't change much.","date":"2013-12-10T06:54:10.341Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: i mean, to see performance impact I had to hammer kraken on my loopback.","date":"2013-12-10T06:55:07.973Z","type":"message"}
{"nick":"trevnorris","message":"and don't worry about being \"that guy\" ;)","date":"2013-12-10T06:55:40.438Z","type":"message"}
{"nick":"otwo","reason":"Ping timeout: 272 seconds","date":"2013-12-10T06:56:41.897Z","type":"quit"}
{"nick":"trevnorris","message":"hueniverse1: like othiym23 said, the API is going to change slightly before the v0.12 release. that's so it'll be more extendable in the future.","date":"2013-12-10T06:57:28.419Z","type":"message"}
{"nick":"othiym23","message":"man, these changes to CLS are dramatic enough that I might have to bump the version up to 3.0","date":"2013-12-10T06:58:22.192Z","type":"message"}
{"nick":"othiym23","message":"so maybe I'll wait to release this until I've rebuilt the asyncListener polyfill to match the new API","date":"2013-12-10T06:58:43.562Z","type":"message"}
{"nick":"octetcloud","reason":"Ping timeout: 272 seconds","date":"2013-12-10T06:58:57.367Z","type":"quit"}
{"nick":"c4milo","date":"2013-12-10T07:10:06.986Z","type":"join"}
{"nick":"dshaw_","reason":"Read error: Connection reset by peer","date":"2013-12-10T07:11:13.074Z","type":"quit"}
{"nick":"dshaw_","date":"2013-12-10T07:12:07.994Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2013-12-10T07:14:47.368Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-10T07:15:35.057Z","type":"quit"}
{"nick":"stagas","date":"2013-12-10T07:20:16.793Z","type":"join"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2013-12-10T07:21:46.010Z","type":"quit"}
{"nick":"`3E|ZZ","new_nick":"`3rdEden","date":"2013-12-10T07:31:26.404Z","type":"nick"}
{"nick":"otwo","date":"2013-12-10T07:37:07.956Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-12-10T07:42:26.790Z","type":"quit"}
{"nick":"dshaw_","date":"2013-12-10T07:43:49.861Z","type":"join"}
{"nick":"paulfryzel","date":"2013-12-10T07:55:12.563Z","type":"join"}
{"nick":"roxlu","message":"good morning!","date":"2013-12-10T07:56:21.880Z","type":"message"}
{"nick":"roxlu","message":"I've got something silly with c/c++ ... when I do: uint64_t delay = 3 * 1000 * 1000 * 1000;  the value overflows ? ","date":"2013-12-10T07:57:50.083Z","type":"message"}
{"nick":"paulfryzel","reason":"Ping timeout: 272 seconds","date":"2013-12-10T07:59:45.375Z","type":"quit"}
