{"nick":"happy-dude","reason":"Quit: Connection closed for inactivity","date":"2016-04-06T00:19:57.566Z","type":"quit"}
{"nick":"rcyr","date":"2016-04-06T00:25:30.055Z","type":"join"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2016-04-06T00:30:44.767Z","type":"quit"}
{"nick":"rcyr","new_nick":"systemfault","date":"2016-04-06T00:50:57.439Z","type":"nick"}
{"nick":"Ruyi","date":"2016-04-06T01:16:30.634Z","type":"join"}
{"nick":"hij1nx_","message":"txdv: ping","date":"2016-04-06T01:24:48.157Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2016-04-06T01:42:41.944Z","type":"quit"}
{"nick":"Perilous_","reason":"Ping timeout: 250 seconds","date":"2016-04-06T01:57:57.021Z","type":"quit"}
{"nick":"PerilousApricot","date":"2016-04-06T02:07:18.448Z","type":"join"}
{"nick":"happy-dude","date":"2016-04-06T02:10:15.308Z","type":"join"}
{"nick":"Fishrock123","date":"2016-04-06T02:11:14.833Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2016-04-06T02:28:05.739Z","type":"quit"}
{"nick":"tunniclm_","reason":"Ping timeout: 276 seconds","date":"2016-04-06T02:57:12.286Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2016-04-06T03:11:50.038Z","type":"quit"}
{"nick":"PerilousApricot","reason":"Remote host closed the connection","date":"2016-04-06T03:34:09.113Z","type":"quit"}
{"nick":"PerilousApricot","date":"2016-04-06T03:34:54.984Z","type":"join"}
{"nick":"frandagostino","reason":"Ping timeout: 252 seconds","date":"2016-04-06T03:39:37.585Z","type":"quit"}
{"nick":"Fishrock123","date":"2016-04-06T03:43:00.834Z","type":"join"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2016-04-06T04:09:27.565Z","type":"quit"}
{"nick":"frandagostino","date":"2016-04-06T04:38:24.272Z","type":"join"}
{"nick":"txdv","message":"hij1nx_: pong?","date":"2016-04-06T04:41:33.639Z","type":"message"}
{"nick":"frandagostino","reason":"Ping timeout: 276 seconds","date":"2016-04-06T05:18:54.272Z","type":"quit"}
{"nick":"seishun","date":"2016-04-06T05:43:53.934Z","type":"join"}
{"nick":"PerilousApricot","reason":"Remote host closed the connection","date":"2016-04-06T05:59:23.240Z","type":"quit"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2016-04-06T06:54:41.165Z","type":"quit"}
{"nick":"rmg","date":"2016-04-06T06:55:17.583Z","type":"join"}
{"nick":"Dirkson","date":"2016-04-06T06:57:14.896Z","type":"join"}
{"nick":"Dirkson","message":"Hey all. I'm having some horrible issues with uv_async_send. Since it coalesces calls, I can't actually use the uv_async_t data type to send data - If I send an int, it's likely to be dropped on the floor. If I send a pointer, it's likely to drop the *pointer* on the floor, ensuring a data leak. Am I actually intended to send data via uv_async_Send? If so, how? If not, why does it have uv_async_t->data?","date":"2016-04-06T06:59:48.003Z","type":"message"}
{"nick":"rmg","reason":"Ping timeout: 252 seconds","date":"2016-04-06T06:59:49.423Z","type":"quit"}
{"nick":"txdv","message":"use a queue","date":"2016-04-06T07:03:25.808Z","type":"message"}
{"nick":"Dirkson","message":"txdv: Oh, is that provided?","date":"2016-04-06T07:03:55.187Z","type":"message"}
{"nick":"txdv","message":"lock the queue, add the your item to the queue, unlock it, send a notification with uv_send, on receiving lock the queue, dequeue all elements, unlock the queue, enjoy the use of all your elements","date":"2016-04-06T07:04:09.589Z","type":"message"}
{"nick":"txdv","message":"Dirkson: i dont think so","date":"2016-04-06T07:04:21.530Z","type":"message"}
{"nick":"Dirkson","message":"I feel like this has bitten me before. Maybe I should be scrawling \"uv_asynt_send does not send, and does not have data, despite having a data member\" across the top of my uv files.","date":"2016-04-06T07:04:30.686Z","type":"message"}
{"nick":"txdv","message":"if you do 2 uv_async_sends and the other event loop doesn't manage to handle the first 'send' then it will coalese them together, you are right","date":"2016-04-06T07:05:19.429Z","type":"message"}
{"nick":"Dirkson","message":"Which drops either data or pointers on the floor.","date":"2016-04-06T07:05:39.298Z","type":"message"}
{"nick":"txdv","message":"i dont understand what you want to say with 'drops data or pointers on the floor'","date":"2016-04-06T07:06:00.889Z","type":"message"}
{"nick":"Dirkson","message":"txdv: If it coalesces calls, then I lose whatever data was in uv_async_t->data. If that's a pointer, I now have a memory leak. Therefore, I really can't imagine a scenario where passing data into uv_async_t's data member works.","date":"2016-04-06T07:07:14.897Z","type":"message"}
{"nick":"txdv","message":"yes that is true","date":"2016-04-06T07:07:29.616Z","type":"message"}
{"nick":"txdv","message":"as i said, i would just use a queue and use uv_send like a notification system that there is some data in the queue","date":"2016-04-06T07:07:55.913Z","type":"message"}
{"nick":"txdv","message":"the queue will take care of 'decoalescing' or whatever you want to call it","date":"2016-04-06T07:08:12.864Z","type":"message"}
{"nick":"Dirkson","message":"txdv: Yeah, I think this is probably a good way to move forward. I'm just frustrated this bit me again. I'm really displeased with a function called 'send' that LOOKS like it can send data being completely unable to send data","date":"2016-04-06T07:08:52.822Z","type":"message"}
{"nick":"txdv","message":"I remember raising some concern about this","date":"2016-04-06T07:09:29.639Z","type":"message"}
{"nick":"txdv","message":"but the janitors said it is supposed to be like that","date":"2016-04-06T07:09:40.617Z","type":"message"}
{"nick":"txdv","message":"'there are no guarantees that for each send there will be a callback'","date":"2016-04-06T07:09:50.254Z","type":"message"}
{"nick":"txdv","message":"it might get coalesed, as you said","date":"2016-04-06T07:09:57.299Z","type":"message"}
{"nick":"txdv","message":"https://github.com/txdv/LibuvSharp/blob/master/LibuvSharp/AsyncWatcher.cs","date":"2016-04-06T07:10:14.079Z","type":"message"}
{"nick":"txdv","message":"this is how i deal with it","date":"2016-04-06T07:10:17.084Z","type":"message"}
{"nick":"Dirkson","message":"Removing its data member would help. And removing the really REALLY broken example using its data member in the documentation would help more.","date":"2016-04-06T07:10:33.989Z","type":"message"}
{"nick":"txdv","message":"can you give me a link to that exmaple?","date":"2016-04-06T07:10:54.117Z","type":"message"}
{"nick":"Dirkson","message":"txdv: Ah, this is a bit greek to me. More a C guy than a C++ one.","date":"2016-04-06T07:11:09.450Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 244 seconds","date":"2016-04-06T07:11:13.675Z","type":"quit"}
{"nick":"Dirkson","message":"txdv: Yeah, hold on a tick.","date":"2016-04-06T07:11:13.834Z","type":"message"}
{"nick":"txdv","message":"Dirkson: the code is very minimal","date":"2016-04-06T07:11:38.039Z","type":"message"}
{"nick":"txdv","message":"it does exactly what I said, create a queue with every uv_async_t and then on the queue, enques, deques, dispatches","date":"2016-04-06T07:13:29.614Z","type":"message"}
{"nick":"txdv","message":"but yeah, maybe i will try to push it as a change","date":"2016-04-06T07:14:33.187Z","type":"message"}
{"nick":"txdv","message":"Dirkson: is it coalescing on windows or linux?","date":"2016-04-06T07:14:40.022Z","type":"message"}
{"nick":"Dirkson","message":"txdv: https://nikhilm.github.io/uvbook/threads.html - Most of the way down the page, the first example in the \"Inter-thread communication\" section. The example ONLY works when the pointer is global to all libuv functions using it, and is never freed. I've never really seen anyone use a pointer like that. Most real world implementations are going to want to break one of those two things... and fall afoul of the","date":"2016-04-06T07:16:04.478Z","type":"message"}
{"nick":"Dirkson","message":"warning below the example. Like... It's technically correct, especially with the warning right there, but ooooh-so-misleading.","date":"2016-04-06T07:16:06.896Z","type":"message"}
{"nick":"Dirkson","message":"txdv: I'm on linux. I haven't tested the windows build behavior.","date":"2016-04-06T07:16:23.558Z","type":"message"}
{"nick":"txdv","message":"i remember that it coalesces on one but not on the other","date":"2016-04-06T07:17:02.119Z","type":"message"}
{"nick":"txdv","message":"so i guess it does it on linux","date":"2016-04-06T07:17:12.604Z","type":"message"}
{"nick":"Dirkson","message":"Interesting!","date":"2016-04-06T07:17:21.469Z","type":"message"}
{"nick":"txdv","message":"it has bitten many asses in this channel","date":"2016-04-06T07:19:32.996Z","type":"message"}
{"nick":"txdv","message":"and i am for implementing a variant where it does not coalesce the calls","date":"2016-04-06T07:19:51.296Z","type":"message"}
{"nick":"Dirkson","message":"Makes sense. For the time being, I'm just going to do your queue idea. That's a solid one : )","date":"2016-04-06T07:20:40.482Z","type":"message"}
{"nick":"txdv","message":"Dirkson: libuv may also combine multiple calls to uv_async_send and invoke your callback only once","date":"2016-04-06T07:21:49.109Z","type":"message"}
{"nick":"txdv","message":"in the warning tooltip","date":"2016-04-06T07:21:53.715Z","type":"message"}
{"nick":"txdv","message":"in that documentation","date":"2016-04-06T07:21:55.772Z","type":"message"}
{"nick":"txdv","message":"second sentence","date":"2016-04-06T07:22:01.879Z","type":"message"}
{"nick":"Dirkson","message":"txdv: Yup. It's there, and I'm sure I've read it before, but that data member keeps leading me down the wrong path. Most other data members in libuv *can* be trusted for this sort of thing.","date":"2016-04-06T07:23:18.304Z","type":"message"}
{"nick":"Dirkson","message":"... I think. Now I'm less certain of myself.","date":"2016-04-06T07:23:30.099Z","type":"message"}
{"nick":"txdv","message":"the others have a uv_req where the data member lives","date":"2016-04-06T07:24:23.298Z","type":"message"}
{"nick":"txdv","message":"this one doesnt","date":"2016-04-06T07:24:50.496Z","type":"message"}
{"nick":"Dirkson","message":"That sounds familiar","date":"2016-04-06T07:24:50.672Z","type":"message"}
{"nick":"txdv","message":"the data member of this one is associated only with the handle itself","date":"2016-04-06T07:25:35.579Z","type":"message"}
{"nick":"txdv","message":"you are using async_t data member therefore obviously if you use it twice in different places you are going to overwrite it","date":"2016-04-06T07:27:07.088Z","type":"message"}
{"nick":"txdv","message":"if i were you i would store the queue pointer in there","date":"2016-04-06T07:27:23.121Z","type":"message"}
{"nick":"Dirkson","message":"Ugh. Yeah, you're right.","date":"2016-04-06T07:28:12.807Z","type":"message"}
{"nick":"Dirkson","message":"txdv: Thanks for the help and for letting me sound my frustrations : )","date":"2016-04-06T07:44:51.572Z","type":"message"}
{"nick":"txdv","message":"you are welcome","date":"2016-04-06T07:51:42.951Z","type":"message"}
{"nick":"txdv","message":"what are you coding with libuv?","date":"2016-04-06T07:51:53.671Z","type":"message"}
{"nick":"rendar","date":"2016-04-06T07:52:01.951Z","type":"join"}
{"nick":"Dirkson","message":"txdv: https://scrumbleship.com/ - Spacegame!   More current video: https://www.youtube.com/watch?v=yi71aoDFZ2E","date":"2016-04-06T07:53:05.791Z","type":"message"}
{"nick":"txdv","message":"looks like minecraft","date":"2016-04-06T07:55:39.348Z","type":"message"}
{"nick":"txdv","message":"did you write it with C?","date":"2016-04-06T07:55:43.122Z","type":"message"}
{"nick":"Dirkson","message":"I get that a lot. It's a bit different, although there's a solid Minecraft influence. Yup, plain C all the way through.","date":"2016-04-06T07:56:11.653Z","type":"message"}
{"nick":"txdv","message":"looks like it has already a lot of people playing it","date":"2016-04-06T07:56:33.295Z","type":"message"}
{"nick":"Dirkson","message":"There's a bit of a community. Still small.","date":"2016-04-06T07:56:48.731Z","type":"message"}
{"nick":"txdv","message":"are you the only developer?","date":"2016-04-06T07:57:47.786Z","type":"message"}
{"nick":"Dirkson","message":"Yup. Although we occasionally have community members contributing resources or patches.","date":"2016-04-06T07:58:33.303Z","type":"message"}
{"nick":"Ralith","message":"Dirkson: uv_async_send is purely for notification, it is not a message passing mechanism in and of itself","date":"2016-04-06T07:59:47.559Z","type":"message"}
{"nick":"Ralith","message":"the data member functions exactly the same way the data member of every other uv struct does","date":"2016-04-06T07:59:57.011Z","type":"message"}
{"nick":"happy-dude","reason":"Quit: Connection closed for inactivity","date":"2016-04-06T07:59:57.590Z","type":"quit"}
