{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-10-14T00:00:00.909Z","type":"quit"}
{"nick":"ircretary","date":"2013-10-14T00:00:09.415Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-10-14T00:18:00.396Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-10-14T00:18:30.120Z","type":"join"}
{"nick":"wwicks_","date":"2013-10-14T01:44:04.572Z","type":"join"}
{"nick":"wwicks","reason":"Ping timeout: 246 seconds","date":"2013-10-14T01:46:01.948Z","type":"quit"}
{"nick":"wwicks_","new_nick":"wwicks","date":"2013-10-14T01:46:02.158Z","type":"nick"}
{"nick":"wwicks_","date":"2013-10-14T02:05:12.732Z","type":"join"}
{"nick":"wwicks","reason":"Ping timeout: 240 seconds","date":"2013-10-14T02:06:14.535Z","type":"quit"}
{"nick":"wwicks_","new_nick":"wwicks","date":"2013-10-14T02:06:14.753Z","type":"nick"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-10-14T02:48:45.374Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-10-14T02:49:24.159Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 252 seconds","date":"2013-10-14T02:54:06.217Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-14T02:57:37.682Z","type":"nick"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-10-14T03:12:19.102Z","type":"quit"}
{"nick":"wwicks_","date":"2013-10-14T03:26:39.347Z","type":"join"}
{"nick":"wwicks","reason":"Ping timeout: 272 seconds","date":"2013-10-14T03:28:57.769Z","type":"quit"}
{"nick":"wwicks_","new_nick":"wwicks","date":"2013-10-14T03:28:58.425Z","type":"nick"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-14T03:50:24.345Z","type":"nick"}
{"nick":"EhevuTov","date":"2013-10-14T04:24:38.486Z","type":"join"}
{"nick":"Kakera","date":"2013-10-14T04:34:56.539Z","type":"join"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-10-14T04:42:11.427Z","type":"quit"}
{"nick":"amartens","date":"2013-10-14T04:42:50.868Z","type":"join"}
{"nick":"qmx","reason":"Read error: Connection reset by peer","date":"2013-10-14T04:43:04.124Z","type":"quit"}
{"nick":"qmx","date":"2013-10-14T04:44:29.645Z","type":"join"}
{"nick":"bajtos","date":"2013-10-14T04:49:11.465Z","type":"join"}
{"nick":"qmx","reason":"Remote host closed the connection","date":"2013-10-14T04:53:01.314Z","type":"quit"}
{"nick":"qmx","date":"2013-10-14T04:58:14.798Z","type":"join"}
{"nick":"Kakera","reason":"Ping timeout: 240 seconds","date":"2013-10-14T04:58:48.925Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-10-14T04:59:42.480Z","type":"quit"}
{"nick":"mikeal","date":"2013-10-14T05:11:45.179Z","type":"join"}
{"nick":"st_luke","date":"2013-10-14T05:27:02.944Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-10-14T05:42:58.502Z","type":"quit"}
{"nick":"wwicks","reason":"Read error: Connection reset by peer","date":"2013-10-14T06:30:21.734Z","type":"quit"}
{"nick":"wwicks","date":"2013-10-14T06:30:38.759Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #259 \u00037UNSTABLE\u000f windows-ia32 (9/601) windows-x64 (9/601) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/259/","date":"2013-10-14T06:40:49.005Z","type":"message"}
{"nick":"tjfontaine","message":"NET 99280: onread -4095","date":"2013-10-14T06:40:57.960Z","type":"message"}
{"nick":"tjfontaine","message":"NET 99280: EOF","date":"2013-10-14T06:40:58.380Z","type":"message"}
{"nick":"LOUDBOT","message":"IT'S NOT DIFFERENT AT ALL, IS IT STEVE!!!?","date":"2013-10-14T06:40:58.760Z","type":"message"}
{"nick":"tjfontaine","message":"that can't be right","date":"2013-10-14T06:41:01.617Z","type":"message"}
{"nick":"tjfontaine","message":"ahh well that's not the scary part I guess","date":"2013-10-14T06:47:06.278Z","type":"message"}
{"nick":"tjfontaine","message":"readableState has the left over bytes still in .buffer but streams api isn't flushing that data back out","date":"2013-10-14T06:48:05.996Z","type":"message"}
{"nick":"wwicks_","date":"2013-10-14T06:51:43.920Z","type":"join"}
{"nick":"wwicks","reason":"Ping timeout: 272 seconds","date":"2013-10-14T06:53:31.946Z","type":"quit"}
{"nick":"wwicks_","new_nick":"wwicks","date":"2013-10-14T06:53:32.563Z","type":"nick"}
{"nick":"wolfeidau","message":"trevnorris: late night hacking? :)","date":"2013-10-14T07:05:48.372Z","type":"message"}
{"nick":"wolfeidau","message":"oops tjfontaine ^","date":"2013-10-14T07:05:55.082Z","type":"message"}
{"nick":"wolfeidau","message":"to many t's in this channel","date":"2013-10-14T07:06:05.253Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2013-10-14T07:10:43.337Z","type":"message"}
{"nick":"tjfontaine","message":"finally had motivation and time to do more work on this ssl truncation issue","date":"2013-10-14T07:11:18.098Z","type":"message"}
{"nick":"rendar","date":"2013-10-14T07:11:24.030Z","type":"join"}
{"nick":"tjfontaine","message":"as it turns out we're reading everything through the tls_wrap socket fine and putting it all into js land","date":"2013-10-14T07:11:44.734Z","type":"message"}
{"nick":"tjfontaine","message":"but when the socket is done and destroyed, if there's still some buffer's in readableState.buffer it doesn't flush those out before an unpipe","date":"2013-10-14T07:12:14.389Z","type":"message"}
{"nick":"tjfontaine","message":"I added some more dtrace probes to verify some of these things, I'll probably making sure those go in","date":"2013-10-14T07:12:40.017Z","type":"message"}
{"nick":"tjfontaine","message":"to take it the next mile I will have to learn more about the streams plumbing :)","date":"2013-10-14T07:13:51.232Z","type":"message"}
{"nick":"wolfeidau","message":"tjfontaine: that mite be what i was seeing","date":"2013-10-14T07:36:02.201Z","type":"message"}
{"nick":"wolfeidau","message":"?","date":"2013-10-14T07:36:07.987Z","type":"message"}
{"nick":"wolfeidau","message":"tjfontaine:      5c87189f7a9     2515       21 ReadableState: highWaterMark, buffer, ...  lots of those hanging around in my tests","date":"2013-10-14T07:38:04.281Z","type":"message"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-10-14T07:44:31.858Z","type":"quit"}
{"nick":"hz","date":"2013-10-14T08:09:12.298Z","type":"join"}
{"nick":"wwicks_","date":"2013-10-14T08:13:07.938Z","type":"join"}
{"nick":"amartens","date":"2013-10-14T08:15:19.242Z","type":"join"}
{"nick":"wwicks","reason":"Ping timeout: 272 seconds","date":"2013-10-14T08:15:29.926Z","type":"quit"}
{"nick":"wwicks_","new_nick":"wwicks","date":"2013-10-14T08:15:30.178Z","type":"nick"}
{"nick":"amartens","reason":"Ping timeout: 245 seconds","date":"2013-10-14T08:21:51.332Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-10-14T08:44:02.716Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-10-14T08:44:33.369Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 245 seconds","date":"2013-10-14T08:48:56.150Z","type":"quit"}
{"nick":"wwicks_","date":"2013-10-14T08:54:08.697Z","type":"join"}
{"nick":"wwicks","reason":"Ping timeout: 246 seconds","date":"2013-10-14T08:56:11.022Z","type":"quit"}
{"nick":"wwicks_","new_nick":"wwicks","date":"2013-10-14T08:56:11.241Z","type":"nick"}
{"nick":"wwicks","reason":"Ping timeout: 245 seconds","date":"2013-10-14T09:16:16.669Z","type":"quit"}
{"nick":"amartens","date":"2013-10-14T09:19:56.805Z","type":"join"}
{"nick":"amartens","reason":"Ping timeout: 248 seconds","date":"2013-10-14T09:28:27.739Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u000245885a1\u0002 : cluster: fix premature 'disconnect' event (+1 more commits) - http://git.io/qpA8rQ","date":"2013-10-14T09:47:17.754Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #611 \u00037UNSTABLE\u000f smartos-ia32 (5/645) smartos-x64 (9/645) http://jenkins.nodejs.org/job/nodejs-master/611/","date":"2013-10-14T09:59:41.971Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #405 \u00037UNSTABLE\u000f windows-x64 (20/645) windows-ia32 (21/645) http://jenkins.nodejs.org/job/nodejs-master-windows/405/","date":"2013-10-14T10:06:35.190Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-10-14T10:08:15.381Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-10-14T10:13:08.800Z","type":"quit"}
{"nick":"bajtos","date":"2013-10-14T10:14:17.912Z","type":"join"}
{"nick":"bajtos","reason":"Client Quit","date":"2013-10-14T10:14:25.781Z","type":"quit"}
{"nick":"bnoordhuis","message":"hrm, ssh://github.com down again?","date":"2013-10-14T10:15:52.807Z","type":"message"}
{"nick":"bnoordhuis","message":"and back up again","date":"2013-10-14T10:16:12.365Z","type":"message"}
{"nick":"bnoordhuis","message":"painfully slow though","date":"2013-10-14T10:16:30.495Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u000256c5806\u0002 : doc: document os.loadavg() behavior on windows - http://git.io/r3OCeQ","date":"2013-10-14T10:16:53.295Z","type":"message"}
{"nick":"amartens","date":"2013-10-14T10:24:37.348Z","type":"join"}
{"nick":"amartens","reason":"Ping timeout: 256 seconds","date":"2013-10-14T10:29:08.265Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-10-14T10:43:13.889Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1533 \u00037UNSTABLE\u000f smartos-x64 (4/601) smartos-ia32 (4/601) http://jenkins.nodejs.org/job/nodejs-v0.10/1533/","date":"2013-10-14T10:47:55.766Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: ping","date":"2013-10-14T10:57:46.820Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: pong","date":"2013-10-14T10:57:52.724Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: i was thinking about uv_read_t. you and isaac were discussing that the other day, right?","date":"2013-10-14T10:58:25.111Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: http://www.youtube.com/watch?v=dqD1OohY2to","date":"2013-10-14T10:58:26.419Z","type":"message"}
{"nick":"bnoordhuis","message":"more kabouter wesley?","date":"2013-10-14T10:58:33.410Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: another way of saying pong","date":"2013-10-14T10:58:54.485Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, another attempt at humour?","date":"2013-10-14T10:59:21.190Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: Sort of. I think uv_read with a callback would be better design than uv_read_start yeah","date":"2013-10-14T10:59:28.247Z","type":"message"}
{"nick":"bnoordhuis","message":"i usually leave that to the professionals","date":"2013-10-14T10:59:29.194Z","type":"message"}
{"nick":"bnoordhuis","message":"right, i was thinking the same thing. is there a reason we never implemented that?","date":"2013-10-14T10:59:49.185Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: no time, no priority","date":"2013-10-14T11:00:01.943Z","type":"message"}
{"nick":"bnoordhuis","message":"okay. but there is no fundamental IOCP shortcoming that makes that impossible?","date":"2013-10-14T11:00:20.859Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: no","date":"2013-10-14T11:00:27.241Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, good. maybe i'll have a go at it","date":"2013-10-14T11:00:40.758Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: (but the alloc cb complicates things)","date":"2013-10-14T11:00:41.004Z","type":"message"}
{"nick":"bnoordhuis","message":"you'd pass the buffer to uv_read() right?","date":"2013-10-14T11:00:56.192Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: well that is kind of sucky","date":"2013-10-14T11:01:03.225Z","type":"message"}
{"nick":"bnoordhuis","message":"why?","date":"2013-10-14T11:01:09.328Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I think we'd want to keep the alloc cb","date":"2013-10-14T11:01:11.165Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: if you have 100k connections open and they all have a read pending","date":"2013-10-14T11:01:20.987Z","type":"message"}
{"nick":"piscisaureus_","message":"that will use 100k*64k memory","date":"2013-10-14T11:01:31.147Z","type":"message"}
{"nick":"bnoordhuis","message":"okay","date":"2013-10-14T11:01:39.791Z","type":"message"}
{"nick":"bnoordhuis","message":"but that's already kind of how it works with iocp right?","date":"2013-10-14T11:01:51.354Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: upfront allocation needs to be avoided as much as possible","date":"2013-10-14T11:01:53.051Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: hi, does libuv \"reuse\" OVERLAPPED packets for each read/write? i mean, after calling read_cb it can reuse the same OVERLAPPED instead of destroying it and allocating a new one","date":"2013-10-14T11:01:54.936Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: not most of the time.","date":"2013-10-14T11:02:13.742Z","type":"message"}
{"nick":"bnoordhuis","message":"oh? it doesn't actually do IOCP most of the time, or ...?","date":"2013-10-14T11:02:34.296Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: usually the read is a 0-byte read and when it completes we do a nonblocking read to get the actual data out","date":"2013-10-14T11:02:42.443Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: there is also a mode where it allocates upfront, but it is currently disabled","date":"2013-10-14T11:03:01.795Z","type":"message"}
{"nick":"bnoordhuis","message":"right. i've seen that in there somewhere","date":"2013-10-14T11:03:15.208Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: because the performance gains were barely significant and it didn't play well with the slab allocator","date":"2013-10-14T11:03:30.439Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but pipes and tty do allocate early","date":"2013-10-14T11:03:48.513Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: (well, pipes do sometimes)","date":"2013-10-14T11:03:56.698Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: because they read in a thread pool","date":"2013-10-14T11:04:02.960Z","type":"message"}
{"nick":"bnoordhuis","message":"okay. so you'd get something like uv_read(uv_read_t*, uv_stream_t*, uv_alloc_cb, uv_read_cb)","date":"2013-10-14T11:04:16.859Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yes","date":"2013-10-14T11:04:23.966Z","type":"message"}
{"nick":"bnoordhuis","message":"and because we like feature parity, you'd also get something like uv_listen(uv_listen_t*, uv_stream_t*, uv_preaccept_cb, uv_accept_cb)","date":"2013-10-14T11:05:18.723Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: preaccept_cb?","date":"2013-10-14T11:05:30.110Z","type":"message"}
{"nick":"bnoordhuis","message":"to alloc the new handle","date":"2013-10-14T11:05:38.166Z","type":"message"}
{"nick":"piscisaureus_","message":"oh right yeah","date":"2013-10-14T11:05:44.352Z","type":"message"}
{"nick":"bnoordhuis","message":"could also call it uv_new_handle_cb","date":"2013-10-14T11:05:45.311Z","type":"message"}
{"nick":"bnoordhuis","message":"and then everything is request driven and balance will have been restored to the force","date":"2013-10-14T11:06:01.570Z","type":"message"}
{"nick":"bnoordhuis","message":"i like it","date":"2013-10-14T11:06:04.703Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yes, although maybe we should call it uv_accept with a callbacl","date":"2013-10-14T11:06:28.216Z","type":"message"}
{"nick":"bnoordhuis","message":"well okay, works for me too","date":"2013-10-14T11:06:45.249Z","type":"message"}
{"nick":"piscisaureus_","message":"and uv_listen just makes the socket listening","date":"2013-10-14T11:06:48.234Z","type":"message"}
{"nick":"mmalecki","message":"I love uv_preaccept_cb idea. could it be used to reject connections?","date":"2013-10-14T11:06:53.166Z","type":"message"}
{"nick":"bnoordhuis","message":"what if there is no listen request in the queue?","date":"2013-10-14T11:06:59.799Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I have not much time to do it though...","date":"2013-10-14T11:07:04.991Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: yeah, that was my thiking","date":"2013-10-14T11:07:07.046Z","type":"message"}
{"nick":"rendar","message":"mmalecki: yes","date":"2013-10-14T11:07:08.665Z","type":"message"}
{"nick":"bnoordhuis","message":"*thinking","date":"2013-10-14T11:07:08.881Z","type":"message"}
{"nick":"mmalecki","message":"love it","date":"2013-10-14T11:07:10.231Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: it does reuse in case of read_t yes","date":"2013-10-14T11:07:30.300Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: what about write?","date":"2013-10-14T11:07:40.654Z","type":"message"}
{"nick":"mmalecki","message":"piscisaureus_: bnoordhuis if neither of you have time to do this, I might take a stab","date":"2013-10-14T11:07:52.417Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: the OVERLAPPED is embedded int the uv_write_t. If you reuse the uv_write_t the OVERLAPPED inside it gets reused.","date":"2013-10-14T11:08:13.871Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: oh, i see","date":"2013-10-14T11:08:41.497Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: i probably have time to work on it. you can do the windows side of things though :)","date":"2013-10-14T11:08:52.905Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: I prefer leaving Windows work to professionals ;)","date":"2013-10-14T11:09:21.657Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, that's the thing - everyone wants to do cool unix stuff, no one wants to write boring windows code","date":"2013-10-14T11:09:47.909Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: so uv_write_t is allocated on heap, and is a kind of an \"handle\" of the read/write current streaming of the uv_stream_t ?","date":"2013-10-14T11:09:52.015Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't blame anyone, least of all me, but it is an issue","date":"2013-10-14T11:09:59.709Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, lunch - biab","date":"2013-10-14T11:10:12.350Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: uv_read_t doesn't exist so far except internally","date":"2013-10-14T11:11:31.398Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: oh, i see, and uv_write_t exist also externally","date":"2013-10-14T11:11:46.476Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: uv_write_t is a handle to a \"write op\" in the background yes","date":"2013-10-14T11:11:49.063Z","type":"message"}
{"nick":"rendar","message":"got it","date":"2013-10-14T11:11:57.471Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: and uv_write_t is allocated wherever you allocate it, which would typically be on the heap indeed","date":"2013-10-14T11:12:08.687Z","type":"message"}
{"nick":"rendar","message":"yeah, you allocate it whenever you want to start a write stream","date":"2013-10-14T11:12:30.595Z","type":"message"}
{"nick":"rendar","message":"but why uv_read_t doesn't exist externally like uv_write_t ?","date":"2013-10-14T11:12:42.846Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 265 seconds","date":"2013-10-14T11:15:00.912Z","type":"quit"}
{"nick":"amartens","date":"2013-10-14T11:24:56.825Z","type":"join"}
{"nick":"amartens","reason":"Ping timeout: 248 seconds","date":"2013-10-14T11:29:31.739Z","type":"quit"}
{"nick":"stagas","date":"2013-10-14T11:35:36.062Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-10-14T12:14:06.849Z","type":"join"}
{"nick":"amartens","date":"2013-10-14T12:25:23.846Z","type":"join"}
{"nick":"amartens","reason":"Ping timeout: 272 seconds","date":"2013-10-14T12:30:05.825Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-10-14T12:42:56.596Z","type":"quit"}
{"nick":"kevinswiber","date":"2013-10-14T13:00:26.945Z","type":"join"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-10-14T13:09:51.543Z","type":"quit"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-10-14T13:09:58.640Z","type":"quit"}
{"nick":"kevinswiber","date":"2013-10-14T13:10:31.421Z","type":"join"}
{"nick":"mikeal1","date":"2013-10-14T13:10:53.011Z","type":"join"}
{"nick":"mikeal","reason":"Write error: Connection reset by peer","date":"2013-10-14T13:12:25.392Z","type":"quit"}
{"nick":"kevinswiber","reason":"Ping timeout: 252 seconds","date":"2013-10-14T13:15:03.140Z","type":"quit"}
{"nick":"bajtos","date":"2013-10-14T13:20:58.816Z","type":"join"}
{"nick":"amartens","date":"2013-10-14T13:26:06.167Z","type":"join"}
{"nick":"amartens","reason":"Ping timeout: 252 seconds","date":"2013-10-14T13:30:27.157Z","type":"quit"}
{"nick":"Kakera","date":"2013-10-14T13:45:01.689Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-10-14T14:09:01.261Z","type":"join"}
{"nick":"stagas","reason":"Quit: ChatZilla 0.9.90-rdmsoft [XULRunner 1.9.0.17/2009122204]","date":"2013-10-14T14:13:59.168Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-10-14T14:14:31.469Z","type":"join"}
{"nick":"inolen","date":"2013-10-14T14:20:10.635Z","type":"join"}
{"nick":"amartens","date":"2013-10-14T14:26:26.188Z","type":"join"}
{"nick":"amartens","reason":"Ping timeout: 245 seconds","date":"2013-10-14T14:30:50.123Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 268 seconds","date":"2013-10-14T14:33:59.128Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-14T14:38:14.751Z","type":"nick"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-14T14:42:48.233Z","type":"nick"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-10-14T14:51:55.511Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-10-14T14:52:23.288Z","type":"join"}
{"nick":"indexzero","date":"2013-10-14T14:55:26.497Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 268 seconds","date":"2013-10-14T14:57:25.107Z","type":"quit"}
{"nick":"julianduque","date":"2013-10-14T14:59:09.366Z","type":"join"}
{"nick":"indexzero","reason":"Ping timeout: 256 seconds","date":"2013-10-14T15:03:24.363Z","type":"quit"}
{"nick":"mikeal1","reason":"Quit: Leaving.","date":"2013-10-14T15:16:07.777Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #612 \u00037UNSTABLE\u000f osx-x64 (1/645) smartos-ia32 (6/645) smartos-x64 (7/645) osx-ia32 (1/645) http://jenkins.nodejs.org/job/nodejs-master/612/","date":"2013-10-14T15:19:22.240Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-10-14T15:21:54.366Z","type":"join"}
{"nick":"mikeal","date":"2013-10-14T15:22:24.596Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-10-14T15:25:23.964Z","type":"join"}
{"nick":"amartens","date":"2013-10-14T15:26:46.258Z","type":"join"}
{"nick":"amartens","reason":"Ping timeout: 256 seconds","date":"2013-10-14T15:31:10.273Z","type":"quit"}
{"nick":"wwicks","date":"2013-10-14T15:34:42.389Z","type":"join"}
{"nick":"wwicks_","date":"2013-10-14T15:43:20.074Z","type":"join"}
{"nick":"wwicks","reason":"Ping timeout: 256 seconds","date":"2013-10-14T15:45:20.336Z","type":"quit"}
{"nick":"wwicks_","new_nick":"wwicks","date":"2013-10-14T15:45:20.547Z","type":"nick"}
{"nick":"AvianFlu","date":"2013-10-14T15:51:37.066Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-10-14T15:55:24.934Z","type":"quit"}
