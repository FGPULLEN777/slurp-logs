{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-09-18T00:00:00.776Z","type":"quit"}
{"nick":"ircretary","date":"2013-09-18T00:00:08.336Z","type":"join"}
{"nick":"brson","reason":"Remote host closed the connection","date":"2013-09-18T00:02:21.010Z","type":"quit"}
{"nick":"brson","date":"2013-09-18T00:03:26.163Z","type":"join"}
{"nick":"wolfeidau","message":"TooTallNate: you around?","date":"2013-09-18T00:07:19.617Z","type":"message"}
{"nick":"Raynos","message":"tjfontaine: did you mention a findjsobjects exporting tool ?","date":"2013-09-18T00:10:21.316Z","type":"message"}
{"nick":"tjfontaine","message":"Raynos: I started working on one yes","date":"2013-09-18T00:11:44.058Z","type":"message"}
{"nick":"tjfontaine","message":"well, I guess the question is on which project you meant","date":"2013-09-18T00:12:06.154Z","type":"message"}
{"nick":"Raynos","message":"well i'm looking at findjsobjects right now on my smartos from joyent","date":"2013-09-18T00:12:24.396Z","type":"message"}
{"nick":"Raynos","message":"and having a way to do | json-magic > x.json would be great","date":"2013-09-18T00:12:40.578Z","type":"message"}
{"nick":"tjfontaine","message":"yup, what information would you want?","date":"2013-09-18T00:12:57.538Z","type":"message"}
{"nick":"tjfontaine","message":"do you want to see a json blob of *every* object?","date":"2013-09-18T00:13:08.698Z","type":"message"}
{"nick":"julianduque","reason":"Ping timeout: 256 seconds","date":"2013-09-18T00:13:30.258Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-09-18T00:18:48.113Z","type":"quit"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-09-18T00:26:43.018Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-18T00:27:24.522Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-09-18T00:34:46.332Z","type":"quit"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2013-09-18T00:40:38.661Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-09-18T00:41:16.591Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 276 seconds","date":"2013-09-18T00:46:03.388Z","type":"quit"}
{"nick":"Raynos","message":"tjfontaine: json blob of every object would be nice. failing that maybe json blob of a random 100 instances of each shape / structure","date":"2013-09-18T00:50:55.327Z","type":"message"}
{"nick":"tjfontaine","message":"Raynos: nod, it's \"easiest\" to just dump it all","date":"2013-09-18T00:51:16.494Z","type":"message"}
{"nick":"tjfontaine","message":"Raynos: hopefully I will be able to clean up the example for this weekend or so","date":"2013-09-18T00:51:34.263Z","type":"message"}
{"nick":"Raynos","message":"preferably as new line seperated json","date":"2013-09-18T00:51:39.158Z","type":"message"}
{"nick":"tjfontaine","message":"what other way is there? :)","date":"2013-09-18T00:51:49.424Z","type":"message"}
{"nick":"Raynos","message":"a json array","date":"2013-09-18T00:51:56.032Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-09-18T00:52:01.466Z","type":"quit"}
{"nick":"Raynos","message":"which is a pain to parse :p","date":"2013-09-18T00:52:03.186Z","type":"message"}
{"nick":"tjfontaine","message":"hehe ya, I was just stating a preference","date":"2013-09-18T00:52:05.190Z","type":"message"}
{"nick":"tjfontaine","message":"of course it's newline json :)","date":"2013-09-18T00:52:17.596Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-09-18T01:06:05.112Z","type":"quit"}
{"nick":"jmar777","date":"2013-09-18T01:06:22.014Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-09-18T01:12:33.938Z","type":"quit"}
{"nick":"kazupon","date":"2013-09-18T01:12:56.690Z","type":"join"}
{"nick":"wwicks","reason":"Quit: wwicks","date":"2013-09-18T01:15:13.938Z","type":"quit"}
{"nick":"inolen","date":"2013-09-18T01:19:16.813Z","type":"join"}
{"nick":"dshaw_","date":"2013-09-18T01:24:41.426Z","type":"join"}
{"nick":"abraxas","date":"2013-09-18T01:30:05.345Z","type":"join"}
{"nick":"dshaw_","reason":"Read error: Connection reset by peer","date":"2013-09-18T01:31:12.203Z","type":"quit"}
{"nick":"julianduque","date":"2013-09-18T01:34:44.633Z","type":"join"}
{"nick":"c4milo","date":"2013-09-18T01:35:32.372Z","type":"join"}
{"nick":"julianduque","reason":"Client Quit","date":"2013-09-18T01:37:16.274Z","type":"quit"}
{"nick":"julianduque","date":"2013-09-18T01:37:46.072Z","type":"join"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-09-18T01:40:08.354Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-09-18T01:41:45.620Z","type":"join"}
{"nick":"inolen","date":"2013-09-18T01:43:28.370Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 276 seconds","date":"2013-09-18T01:46:30.396Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-09-18T01:46:56.455Z","type":"quit"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-09-18T01:54:23.540Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-09-18T01:55:10.902Z","type":"quit"}
{"nick":"inolen","date":"2013-09-18T02:07:46.307Z","type":"join"}
{"nick":"luigy_","reason":"Ping timeout: 245 seconds","date":"2013-09-18T02:26:48.263Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-09-18T02:39:32.520Z","type":"join"}
{"nick":"luigy_","date":"2013-09-18T02:52:12.486Z","type":"join"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-09-18T03:04:50.350Z","type":"quit"}
{"nick":"inolen","date":"2013-09-18T03:08:28.762Z","type":"join"}
{"nick":"isaacbw","message":"mmalecki: https://github.com/isaacbwagner/cl-sophia","date":"2013-09-18T03:11:34.065Z","type":"message"}
{"nick":"dominictarr","date":"2013-09-18T03:13:01.377Z","type":"join"}
{"nick":"joshthecoder_","date":"2013-09-18T03:13:35.572Z","type":"join"}
{"nick":"sindresorhus_","date":"2013-09-18T03:14:15.714Z","type":"join"}
{"nick":"joshthecoder","reason":"*.net *.split","date":"2013-09-18T03:14:33.458Z","type":"quit"}
{"nick":"CAPSLOCKBOT","reason":"*.net *.split","date":"2013-09-18T03:14:34.718Z","type":"quit"}
{"nick":"blissdev","reason":"*.net *.split","date":"2013-09-18T03:14:35.139Z","type":"quit"}
{"nick":"sindresorhus","reason":"*.net *.split","date":"2013-09-18T03:14:35.979Z","type":"quit"}
{"nick":"joshthecoder_","new_nick":"joshthecoder","date":"2013-09-18T03:14:35.979Z","type":"nick"}
{"nick":"sindresorhus_","new_nick":"sindresorhus","date":"2013-09-18T03:14:35.979Z","type":"nick"}
{"nick":"blissdev","date":"2013-09-18T03:16:17.837Z","type":"join"}
{"nick":"CAPSLOCKBOT","date":"2013-09-18T03:18:52.123Z","type":"join"}
{"nick":"sindresorhus","reason":"Changing host","date":"2013-09-18T03:19:31.167Z","type":"quit"}
{"nick":"sindresorhus","date":"2013-09-18T03:19:31.387Z","type":"join"}
{"nick":"sindresorhus","new_nick":"Guest21838","date":"2013-09-18T03:19:43.827Z","type":"nick"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-09-18T03:31:31.273Z","type":"quit"}
{"nick":"wwicks","date":"2013-09-18T03:47:39.253Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-18T03:56:09.844Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-09-18T03:57:26.503Z","type":"join"}
{"nick":"julianduque","reason":"Quit: leaving","date":"2013-09-18T04:06:21.910Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-18T04:08:57.692Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-18T04:10:39.281Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-09-18T04:11:08.638Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-09-18T04:26:08.409Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-18T04:40:52.578Z","type":"nick"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-18T04:41:58.522Z","type":"quit"}
{"nick":"c4milo","date":"2013-09-18T04:47:25.378Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-18T04:47:25.378Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-18T05:04:51.442Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-09-18T05:07:51.214Z","type":"quit"}
{"nick":"inolen","date":"2013-09-18T05:11:23.127Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-09-18T06:03:08.582Z","type":"quit"}
{"nick":"mmalecki","message":"isaacbw: hah! that's awesome","date":"2013-09-18T06:15:57.513Z","type":"message"}
{"nick":"mmalecki","message":"isaacbw: lisp code scares me just a little bit","date":"2013-09-18T06:16:22.811Z","type":"message"}
{"nick":"rendar","date":"2013-09-18T06:19:08.095Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-18T06:22:06.827Z","type":"nick"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #216 \u00037UNSTABLE\u000f windows-ia32 (7/600) windows-x64 (7/600) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/216/","date":"2013-09-18T06:41:41.506Z","type":"message"}
{"nick":"philips","reason":"Excess Flood","date":"2013-09-18T06:59:57.059Z","type":"quit"}
{"nick":"philips","date":"2013-09-18T07:16:53.133Z","type":"join"}
{"nick":"superdealloc","date":"2013-09-18T07:16:54.166Z","type":"join"}
{"nick":"superdealloc","reason":"Client Quit","date":"2013-09-18T07:17:09.341Z","type":"quit"}
{"nick":"wwicks","reason":"Quit: wwicks","date":"2013-09-18T07:17:59.892Z","type":"quit"}
{"nick":"hz","date":"2013-09-18T07:20:29.168Z","type":"join"}
{"nick":"rvagg","reason":"Ping timeout: 262 seconds","date":"2013-09-18T08:00:27.576Z","type":"quit"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-09-18T08:03:33.180Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-09-18T08:04:25.338Z","type":"join"}
{"nick":"rvagg","date":"2013-09-18T08:04:38.459Z","type":"join"}
{"nick":"abraxas","date":"2013-09-18T08:06:30.718Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-09-18T08:18:00.345Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-18T08:18:01.759Z","type":"nick"}
{"nick":"dominictarr","date":"2013-09-18T08:28:12.601Z","type":"join"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-09-18T08:28:40.140Z","type":"quit"}
{"nick":"felixge","date":"2013-09-18T08:33:09.369Z","type":"join"}
{"nick":"felixge","reason":"Client Quit","date":"2013-09-18T08:33:09.369Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-18T08:33:54.577Z","type":"quit"}
{"nick":"skebcio","date":"2013-09-18T08:50:33.824Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-18T08:55:05.131Z","type":"nick"}
{"nick":"bnoordhuis","date":"2013-09-18T09:02:48.387Z","type":"join"}
{"nick":"txdv","reason":"Ping timeout: 264 seconds","date":"2013-09-18T09:10:54.308Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-09-18T09:26:51.588Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: sup?","date":"2013-09-18T09:28:51.800Z","type":"message"}
{"nick":"amartens","date":"2013-09-18T09:28:57.512Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: morning","date":"2013-09-18T09:30:27.987Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: long time no see. Is your new kiddo about yet?","date":"2013-09-18T09:30:45.540Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: already here :) born sunday night","date":"2013-09-18T09:30:58.782Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: congrats!","date":"2013-09-18T09:31:06.860Z","type":"message"}
{"nick":"bnoordhuis","message":"thanks :)","date":"2013-09-18T09:31:10.434Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: name? b/g?","date":"2013-09-18T09:31:10.735Z","type":"message"}
{"nick":"bnoordhuis","message":"a boy and he's called luca","date":"2013-09-18T09:31:22.267Z","type":"message"}
{"nick":"bnoordhuis","message":"though in everyday use we'll probably call him 'afblijven'","date":"2013-09-18T09:31:37.012Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: also, how are mom and luca doing?","date":"2013-09-18T09:31:37.436Z","type":"message"}
{"nick":"piscisaureus_","message":"hehe","date":"2013-09-18T09:31:42.451Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, they're doing fine. karlijn is up and about already","date":"2013-09-18T09:31:51.705Z","type":"message"}
{"nick":"piscisaureus_","message":"the first one is called \"stil!\" I presume?","date":"2013-09-18T09:32:06.822Z","type":"message"}
{"nick":"bnoordhuis","message":"no, 'geen grote mond jij'. it's a bit long though","date":"2013-09-18T09:32:31.304Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: so al good news","date":"2013-09-18T09:32:53.255Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: funny though that you picked another gender-questionable name","date":"2013-09-18T09:33:05.316Z","type":"message"}
{"nick":"piscisaureus_","message":"although a little better than the last one :)","date":"2013-09-18T09:33:15.866Z","type":"message"}
{"nick":"amartens","reason":"Ping timeout: 260 seconds","date":"2013-09-18T09:33:19.410Z","type":"quit"}
{"nick":"bnoordhuis","message":"i'll let them make up their own minds about what they want to be","date":"2013-09-18T09:33:35.865Z","type":"message"}
{"nick":"bnoordhuis","message":"sons or daughters, it's all good to me","date":"2013-09-18T09:33:51.678Z","type":"message"}
{"nick":"piscisaureus_","message":"maybe they can swap when they are a  little older :)","date":"2013-09-18T09:33:53.009Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: so are you actually working or just checking your email>","date":"2013-09-18T09:35:09.353Z","type":"message"}
{"nick":"dominictarr","date":"2013-09-18T09:35:11.620Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: mwah, mostly checking email","date":"2013-09-18T09:35:58.401Z","type":"message"}
{"nick":"bnoordhuis","message":"but if you have questions, now is the time","date":"2013-09-18T09:36:19.554Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: not really. I was going to bug you about readdir thread safety","date":"2013-09-18T09:37:58.912Z","type":"message"}
{"nick":"piscisaureus_","message":"or how we would implement streaming readdir","date":"2013-09-18T09:38:18.084Z","type":"message"}
{"nick":"piscisaureus_","message":"but it can wait","date":"2013-09-18T09:38:22.848Z","type":"message"}
{"nick":"bnoordhuis","message":"you mean readdir as in readdir(3)?","date":"2013-09-18T09:41:34.391Z","type":"message"}
{"nick":"piscisaureus_","message":"yes","date":"2013-09-18T09:41:39.751Z","type":"message"}
{"nick":"piscisaureus_","message":"also, very odd that fs.truncate clears a file but fs.ftruncate doesn't","date":"2013-09-18T09:41:53.804Z","type":"message"}
{"nick":"piscisaureus_","message":"probably it gets opened with the wrong mode","date":"2013-09-18T09:42:02.110Z","type":"message"}
{"nick":"bnoordhuis","message":"readdir(3) is not un-thread-safe","date":"2013-09-18T09:42:22.728Z","type":"message"}
{"nick":"bnoordhuis","message":"opendir() gives you this DIR* handle that you can readdir() from","date":"2013-09-18T09:42:42.393Z","type":"message"}
{"nick":"piscisaureus_","message":"oh hmm","date":"2013-09-18T09:42:59.572Z","type":"message"}
{"nick":"bnoordhuis","message":"the dirent pointer that readdir() returns is particular to the DIR handle","date":"2013-09-18T09:43:07.781Z","type":"message"}
{"nick":"piscisaureus_","message":"I though that there was some sort of problem with this","date":"2013-09-18T09:43:09.752Z","type":"message"}
{"nick":"roxlu_","message":"hi guys, I've got a build script which builds lib uv for m32/m64,gcc,clang,release,debug, but I noticed that the gcc builds don't have an \"out/Debug/\" but just \"Debug/\" directory and the clang version -do- have these directories .. why is that?","date":"2013-09-18T09:43:09.963Z","type":"message"}
{"nick":"bnoordhuis","message":"roxlu_: is that on windows?","date":"2013-09-18T09:43:34.570Z","type":"message"}
{"nick":"roxlu_","message":"no mac","date":"2013-09-18T09:43:37.914Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, that's probably gyp's xcode emulation mode","date":"2013-09-18T09:43:54.053Z","type":"message"}
{"nick":"roxlu_","message":"ok, some have 2 output dirs (out/Release) and just (Release)","date":"2013-09-18T09:44:23.675Z","type":"message"}
{"nick":"roxlu_","message":"haha oh and there is even a difference between 32 and 64 bit builds :) ","date":"2013-09-18T09:45:07.859Z","type":"message"}
{"nick":"bnoordhuis","message":"roxlu_: how are you executing the actual build?","date":"2013-09-18T09:45:12.221Z","type":"message"}
{"nick":"roxlu_","message":"with `./gyp_uv -Dtarget_arch=ia32 -Dhost_arch=ia32` ","date":"2013-09-18T09:45:45.109Z","type":"message"}
{"nick":"roxlu_","message":"make -C out BUILDTYPE=Release CC=`gcc` CXX=`g++`","date":"2013-09-18T09:46:03.562Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, that's fine. 's got to be gyp then","date":"2013-09-18T09:46:36.832Z","type":"message"}
{"nick":"roxlu_","message":"yeah I'll create some \"ifs\"  to copy the correct file","date":"2013-09-18T09:47:01.332Z","type":"message"}
{"nick":"piscisaureus_","message":"http://facebook.github.io/libphenom/","date":"2013-09-18T09:53:58.708Z","type":"message"}
{"nick":"piscisaureus_","message":"^-- competition!","date":"2013-09-18T09:54:02.455Z","type":"message"}
{"nick":"Kakera","date":"2013-09-18T09:54:12.979Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: yeah, i saw that on HN. it's more libevent-ish than libev/libuv-ish, i think","date":"2013-09-18T09:55:41.484Z","type":"message"}
{"nick":"bnoordhuis","message":"it's thread-aware by default though. that's nice for some things","date":"2013-09-18T09:56:10.685Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-09-18T09:56:38.793Z","type":"quit"}
{"nick":"piscisaureus_","message":"bnoordhuis: yeah that's nice","date":"2013-09-18T09:56:44.878Z","type":"message"}
{"nick":"roxlu_","message":":) ","date":"2013-09-18T09:56:51.327Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but at a cost","date":"2013-09-18T09:57:00.574Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: what is it that oracle wanted btw?","date":"2013-09-18T09:57:07.641Z","type":"message"}
{"nick":"roxlu_","message":"hey guys, yesterday I was looking at http://nanomsg.org/ and was wondering if someone in here has experience with it? Or what do you think about that lib?","date":"2013-09-18T09:57:41.071Z","type":"message"}
{"nick":"piscisaureus_","message":"I don't know it","date":"2013-09-18T09:57:53.830Z","type":"message"}
{"nick":"roxlu_","message":"it's kinda similar too ZMQ, I think it's a rewrite by one of the authors","date":"2013-09-18T09:58:22.168Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: nothing really. libuv already does what they needed, they just didn't know it yet","date":"2013-09-18T09:59:57.865Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: really? what was that?","date":"2013-09-18T10:00:31.799Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: they wanted to know if 'one event loop per thread' was an acceptable model with libuv","date":"2013-09-18T10:00:38.664Z","type":"message"}
{"nick":"piscisaureus_","message":"and yes it was","date":"2013-09-18T10:00:52.396Z","type":"message"}
{"nick":"piscisaureus_","message":"in fact it is the only acceptable model","date":"2013-09-18T10:01:10.159Z","type":"message"}
{"nick":"brucem","message":"roxlu_: it is a rewrite by one of the zeromq people. New licensing model. Much simpler. Has seemed pretty nice and easy and such in casual usage.","date":"2013-09-18T10:01:40.710Z","type":"message"}
{"nick":"bnoordhuis","message":"yep. made their day","date":"2013-09-18T10:01:42.831Z","type":"message"}
{"nick":"roxlu_","message":"nice thing about nanomsg is that you can switch from tcp/ipc/inproc by just change the \"socket address\" ... I guess that's not possible with libuv is? (I gues I would need to write another layer)","date":"2013-09-18T10:01:54.524Z","type":"message"}
{"nick":"brucem","message":"roxlu_: There is a #nanomsg on this IRC network as well.","date":"2013-09-18T10:02:09.891Z","type":"message"}
{"nick":"roxlu_","message":"brucem: yep I hang out there as well : ) ","date":"2013-09-18T10:02:43.689Z","type":"message"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-09-18T10:04:32.928Z","type":"quit"}
{"nick":"abraxas","date":"2013-09-18T10:05:05.725Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 264 seconds","date":"2013-09-18T10:09:50.864Z","type":"quit"}
{"nick":"inolen","date":"2013-09-18T10:27:20.798Z","type":"join"}
{"nick":"amartens","date":"2013-09-18T10:29:18.250Z","type":"join"}
{"nick":"indutny","message":"hey bnoordhuis ","date":"2013-09-18T10:30:11.266Z","type":"message"}
{"nick":"indutny","message":"how are you?","date":"2013-09-18T10:30:13.303Z","type":"message"}
{"nick":"amartens","reason":"Ping timeout: 264 seconds","date":"2013-09-18T10:34:18.273Z","type":"quit"}
{"nick":"inolen","reason":"Ping timeout: 264 seconds","date":"2013-09-18T10:35:38.774Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: hey fedor. i'm fine, taking a break this week. what about you?","date":"2013-09-18T10:44:09.190Z","type":"message"}
{"nick":"indutny","message":"well, I'm good too","date":"2013-09-18T10:44:18.560Z","type":"message"}
{"nick":"indutny","message":"fighting v8 :)","date":"2013-09-18T10:44:20.700Z","type":"message"}
{"nick":"bnoordhuis","message":"aim for the chin, it's got a glass chin","date":"2013-09-18T10:44:41.279Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-09-18T10:44:46.010Z","type":"message"}
{"nick":"indutny","message":"I'll try to :)","date":"2013-09-18T10:44:56.465Z","type":"message"}
{"nick":"indutny","message":"I think I'm going to take a break in this activity","date":"2013-09-18T10:45:04.567Z","type":"message"}
{"nick":"indutny","message":"and work on getting vm2 fast","date":"2013-09-18T10:45:09.069Z","type":"message"}
{"nick":"indutny","message":"and then that strict mode thing","date":"2013-09-18T10:45:16.588Z","type":"message"}
{"nick":"indutny","message":"and then","date":"2013-09-18T10:45:17.698Z","type":"message"}
{"nick":"indutny","message":"wrapping tls in tls","date":"2013-09-18T10:45:21.599Z","type":"message"}
{"nick":"indutny","message":"shit","date":"2013-09-18T10:45:23.194Z","type":"message"}
{"nick":"indutny","message":"I have a lot of stuff to do :)","date":"2013-09-18T10:45:26.815Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: what v8 things are you working on","date":"2013-09-18T10:45:40.420Z","type":"message"}
{"nick":"piscisaureus_","message":"?","date":"2013-09-18T10:45:42.432Z","type":"message"}
{"nick":"indutny","message":"ah, performance problem","date":"2013-09-18T10:45:50.516Z","type":"message"}
{"nick":"indutny","message":"in my friend's code","date":"2013-09-18T10:45:57.967Z","type":"message"}
{"nick":"indutny","message":"nothing to worry about in node","date":"2013-09-18T10:46:04.614Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1488 \u00037UNSTABLE\u000f smartos-x64 (2/600) osx-x64 (1/600) http://jenkins.nodejs.org/job/nodejs-v0.10/1488/","date":"2013-09-18T10:46:07.900Z","type":"message"}
{"nick":"indutny","message":"its just converting all ICs to megamorphic","date":"2013-09-18T10:46:19.212Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: well that means that your friend is creating too many object shapes","date":"2013-09-18T10:56:52.650Z","type":"message"}
{"nick":"indutny","message":"well, not exactly","date":"2013-09-18T10:57:02.255Z","type":"message"}
{"nick":"indutny","message":"I figured it out","date":"2013-09-18T10:57:04.200Z","type":"message"}
{"nick":"indutny","message":"the problem was more subtle than this","date":"2013-09-18T10:57:11.560Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: he was creating too make shapes in a subtly?","date":"2013-09-18T10:57:28.092Z","type":"message"}
{"nick":"indutny","message":"he was doing small modifications to input data","date":"2013-09-18T10:57:31.312Z","type":"message"}
{"nick":"indutny","message":"and benchmarking with the same data over and over again","date":"2013-09-18T10:57:44.222Z","type":"message"}
{"nick":"indutny","message":"while in production the data is always new and fresh","date":"2013-09-18T10:57:53.000Z","type":"message"}
{"nick":"indutny","message":"out of JSON.parse","date":"2013-09-18T10:57:55.962Z","type":"message"}
{"nick":"indutny","message":"with fresh data everything runs smoothly","date":"2013-09-18T10:58:08.136Z","type":"message"}
{"nick":"piscisaureus_","message":"does JSON.parse always generate a slow object ?","date":"2013-09-18T10:58:11.144Z","type":"message"}
{"nick":"piscisaureus_","message":"or does it create many different hidden classes?","date":"2013-09-18T10:58:31.652Z","type":"message"}
{"nick":"indutny","message":"I suppose hidden classes","date":"2013-09-18T11:00:04.138Z","type":"message"}
{"nick":"indutny","message":"at least by looking at benchmark results after update","date":"2013-09-18T11:00:16.872Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: the initial object was a result of JSON.parse anyway","date":"2013-09-18T11:00:36.230Z","type":"message"}
{"nick":"indutny","message":"it was modified by template","date":"2013-09-18T11:00:47.428Z","type":"message"}
{"nick":"indutny","message":"and passed again into the template","date":"2013-09-18T11:00:52.235Z","type":"message"}
{"nick":"indutny","message":"so template was observing new hidden classes at every new call","date":"2013-09-18T11:01:09.623Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 276 seconds","date":"2013-09-18T11:23:03.432Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-09-18T11:26:28.756Z","type":"join"}
{"nick":"amartens","date":"2013-09-18T11:29:40.301Z","type":"join"}
{"nick":"amartens","reason":"Ping timeout: 256 seconds","date":"2013-09-18T11:34:04.329Z","type":"quit"}
{"nick":"bajtos","date":"2013-09-18T11:38:40.585Z","type":"join"}
{"nick":"`3rdEden","message":"bnoordhuis: piscisaureus_:  congrats ;)? http://gigaom.com/2013/09/18/strongloops-gets-8m-and-a-ceo-in-isaac-roth/","date":"2013-09-18T11:41:15.783Z","type":"message"}
{"nick":"piscisaureus_","message":"`3rdEden: thanks :)","date":"2013-09-18T11:41:33.527Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, thanks :)","date":"2013-09-18T11:50:40.014Z","type":"message"}
{"nick":"indutny","message":"oh gosh","date":"2013-09-18T11:57:51.392Z","type":"message"}
{"nick":"indutny","message":"hard to admit","date":"2013-09-18T11:57:53.724Z","type":"message"}
{"nick":"indutny","message":"but vm2 is a total shit :)","date":"2013-09-18T11:58:01.978Z","type":"message"}
{"nick":"indutny","message":"its like a vm1 inside-out","date":"2013-09-18T11:58:15.689Z","type":"message"}
{"nick":"indutny","message":"with fast outer to inter interaction","date":"2013-09-18T11:58:23.636Z","type":"message"}
{"nick":"indutny","message":"s/inter/inner","date":"2013-09-18T11:58:31.993Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: you was right","date":"2013-09-18T11:58:37.631Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: lets revert it","date":"2013-09-18T11:58:41.622Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: what is your position in strongloop now?","date":"2013-09-18T12:01:14.739Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: heh. I get to do nothing","date":"2013-09-18T12:01:38.724Z","type":"message"}
{"nick":"indutny","message":"oh, finally","date":"2013-09-18T12:01:48.267Z","type":"message"}
{"nick":"indutny","message":"you lazy boy :)","date":"2013-09-18T12:01:52.181Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-09-18T12:01:59.691Z","type":"quit"}
{"nick":"piscisaureus_","message":"https://github.com/andrewlow/node/compare/joyent:v0.10.18...v0.10.18-release-ppc","date":"2013-09-18T12:19:22.179Z","type":"message"}
{"nick":"piscisaureus_","message":"^-- doesn't look too complicated","date":"2013-09-18T12:19:26.813Z","type":"message"}
{"nick":"Kakera","reason":"Ping timeout: 264 seconds","date":"2013-09-18T12:22:26.771Z","type":"quit"}
{"nick":"amartens","date":"2013-09-18T12:30:00.438Z","type":"join"}
{"nick":"inolen","date":"2013-09-18T12:31:55.748Z","type":"join"}
{"nick":"Kakera","date":"2013-09-18T12:32:49.411Z","type":"join"}
{"nick":"amartens","reason":"Ping timeout: 260 seconds","date":"2013-09-18T12:34:23.193Z","type":"quit"}
{"nick":"Domenic_","message":"sigh, sad, why is creating lots of contexts a use-case we prioritize the performance of :(","date":"2013-09-18T12:35:41.061Z","type":"message"}
{"nick":"inolen","reason":"Ping timeout: 256 seconds","date":"2013-09-18T12:36:33.760Z","type":"quit"}
{"nick":"piscisaureus_","message":"Domenic_: ?","date":"2013-09-18T12:37:19.155Z","type":"message"}
{"nick":"piscisaureus_","message":"Also NYC getting up early today?","date":"2013-09-18T12:37:36.447Z","type":"message"}
{"nick":"piscisaureus_","message":"oh hm maybe not that early","date":"2013-09-18T12:37:56.283Z","type":"message"}
{"nick":"Domenic_","message":"piscisaureus_: createContext in a loop 1e4 times is slower than it used to be, therefore indutny and bnoordhuis think we should revert vm2 :(","date":"2013-09-18T12:38:41.756Z","type":"message"}
{"nick":"Domenic_","message":"heh yeah only 8:40am","date":"2013-09-18T12:38:49.705Z","type":"message"}
{"nick":"indutny","message":"Domenic_: not only this","date":"2013-09-18T12:39:00.298Z","type":"message"}
{"nick":"indutny","message":"global lookups are very slow too","date":"2013-09-18T12:39:09.271Z","type":"message"}
{"nick":"indutny","message":"inside your context","date":"2013-09-18T12:39:13.245Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: is this fixable?","date":"2013-09-18T12:39:25.176Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: I'm afraid its by-design","date":"2013-09-18T12:39:31.813Z","type":"message"}
{"nick":"Domenic_","message":"indutny: but now they are correct, as opposed to incorrect","date":"2013-09-18T12:39:34.087Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: there is not much pint in having the vm module if people only want to use contextify","date":"2013-09-18T12:39:48.391Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2013-09-18T12:39:58.056Z","type":"message"}
{"nick":"indutny","message":"perhaps I should just use eval","date":"2013-09-18T12:40:02.586Z","type":"message"}
{"nick":"indutny","message":"or new Function","date":"2013-09-18T12:40:06.971Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-09-18T12:40:09.028Z","type":"message"}
{"nick":"piscisaureus_","message":"s/pint/point/","date":"2013-09-18T12:40:10.209Z","type":"message"}
{"nick":"piscisaureus_","message":"I wouldn't like to let it slide","date":"2013-09-18T12:40:31.865Z","type":"message"}
{"nick":"indutny","message":"ok, then its your turn to try to poke with it ;)","date":"2013-09-18T12:40:47.609Z","type":"message"}
{"nick":"Domenic_","message":"yes, if you don't have a custom global, eval (for runInThisContext) or Function (for runInNewContext) are much better.","date":"2013-09-18T12:40:59.507Z","type":"message"}
{"nick":"Domenic_","message":"Originally I wanted to rewrite some cases to use eval/Function, but you can't fix the stack traces that way, sadly.","date":"2013-09-18T12:41:32.492Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: megamorphic IC doesn't exist right?","date":"2013-09-18T12:42:27.263Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: megamorphic === no IC","date":"2013-09-18T12:42:34.355Z","type":"message"}
{"nick":"indutny","message":"not really :)","date":"2013-09-18T12:42:59.792Z","type":"message"}
{"nick":"indutny","message":"it still caches","date":"2013-09-18T12:43:04.119Z","type":"message"}
{"nick":"indutny","message":"oh anyway","date":"2013-09-18T12:43:06.069Z","type":"message"}
{"nick":"indutny","message":"it may be used from v8 internals","date":"2013-09-18T12:43:12.843Z","type":"message"}
{"nick":"indutny","message":"when doing namedpropertylookup","date":"2013-09-18T12:43:23.134Z","type":"message"}
{"nick":"piscisaureus_","message":"Domenic_: I see. But it's not just slower","date":"2013-09-18T12:43:23.911Z","type":"message"}
{"nick":"piscisaureus_","message":"it's 2 orders of magnitude slower","date":"2013-09-18T12:43:34.356Z","type":"message"}
{"nick":"jmar777","date":"2013-09-18T12:44:19.380Z","type":"join"}
{"nick":"Domenic_","message":"i am not sure how running code inside a virtual machine was ever expected to be fast.","date":"2013-09-18T12:44:41.552Z","type":"message"}
{"nick":"piscisaureus_","message":"Would it be possible to use a harmony proxy instead?","date":"2013-09-18T12:45:29.877Z","type":"message"}
{"nick":"Domenic_","message":"also it's only 4x as of latest https://github.com/joyent/node/issues/6115#issuecomment-24459023","date":"2013-09-18T12:45:42.553Z","type":"message"}
{"nick":"Domenic_","message":"hmm maybe","date":"2013-09-18T12:45:54.544Z","type":"message"}
{"nick":"Domenic_","message":"i was thinking of harmony weakmap to fix all the makeweak stuff too, although indutny seems to have taken care of that without such things","date":"2013-09-18T12:46:23.792Z","type":"message"}
{"nick":"piscisaureus_","message":"the relevant question: would it help? :)","date":"2013-09-18T12:46:26.961Z","type":"message"}
{"nick":"indutny","message":"hehe","date":"2013-09-18T12:47:01.361Z","type":"message"}
{"nick":"Domenic_","message":"hard to say. would help with boundary-crossing i guess.","date":"2013-09-18T12:47:02.436Z","type":"message"}
{"nick":"indutny","message":"Domenic_: well, vm is not just a vm","date":"2013-09-18T12:47:06.196Z","type":"message"}
{"nick":"indutny","message":"its a well-crafted eval","date":"2013-09-18T12:47:11.184Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-09-18T12:47:12.074Z","type":"message"}
{"nick":"indutny","message":"ideally it should be as fast as eval","date":"2013-09-18T12:47:23.649Z","type":"message"}
{"nick":"indutny","message":"probably a bit slower","date":"2013-09-18T12:47:26.605Z","type":"message"}
{"nick":"indutny","message":"but not significantly slower","date":"2013-09-18T12:47:30.405Z","type":"message"}
{"nick":"indutny","message":"that's my opinion","date":"2013-09-18T12:47:37.055Z","type":"message"}
{"nick":"piscisaureus_","message":"eval is as fast as anything","date":"2013-09-18T12:47:42.806Z","type":"message"}
{"nick":"Domenic_","message":"that's now how people expect it to work, i guess","date":"2013-09-18T12:47:45.092Z","type":"message"}
{"nick":"Domenic_","message":"they expect it to work as a vm","date":"2013-09-18T12:47:50.803Z","type":"message"}
{"nick":"Domenic_","message":"i.e. with custom globals","date":"2013-09-18T12:47:56.478Z","type":"message"}
{"nick":"Domenic_","message":"but i see your point","date":"2013-09-18T12:48:02.085Z","type":"message"}
{"nick":"Domenic_","message":"the old vm was really just eval, i.e. it used those v8 apis","date":"2013-09-18T12:49:07.918Z","type":"message"}
{"nick":"Domenic_","message":"but, using those apis it is impossible to have vm semantics","date":"2013-09-18T12:49:16.393Z","type":"message"}
{"nick":"Domenic_","message":"i.e. it is impossible to correctly interface with a custom global object","date":"2013-09-18T12:49:27.219Z","type":"message"}
{"nick":"AvianFlu","date":"2013-09-18T12:50:21.768Z","type":"join"}
{"nick":"Domenic_","message":"we could make vm.runInThisContext(), and vm.runInNewContext() when sandbox is not passed, use the eval path.","date":"2013-09-18T12:51:18.991Z","type":"message"}
{"nick":"piscisaureus_","message":"I'm not for reverting this yet, but it would be nice if we could avoid regressions.","date":"2013-09-18T12:51:20.235Z","type":"message"}
{"nick":"piscisaureus_","message":"I think that'd be nice","date":"2013-09-18T12:51:34.575Z","type":"message"}
{"nick":"piscisaureus_","action":"afk for a bit","date":"2013-09-18T12:52:26.909Z","type":"action"}
{"nick":"piscisaureus_","reason":"Ping timeout: 256 seconds","date":"2013-09-18T12:56:48.280Z","type":"quit"}
{"nick":"inolen","date":"2013-09-18T13:01:59.802Z","type":"join"}
{"nick":"inolen","reason":"Ping timeout: 264 seconds","date":"2013-09-18T13:06:50.774Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-09-18T13:08:39.123Z","type":"join"}
{"nick":"kaeso","date":"2013-09-18T13:11:38.599Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-09-18T13:13:20.123Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-18T13:29:21.411Z","type":"quit"}
{"nick":"amartens","date":"2013-09-18T13:30:20.418Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-09-18T13:31:14.614Z","type":"join"}
{"nick":"amartens","reason":"Read error: Operation timed out","date":"2013-09-18T13:34:52.609Z","type":"quit"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-09-18T13:38:38.436Z","type":"quit"}
{"nick":"bajtos","date":"2013-09-18T13:39:08.964Z","type":"join"}
{"nick":"jmar777","reason":"Ping timeout: 245 seconds","date":"2013-09-18T13:49:43.166Z","type":"quit"}
{"nick":"jmar777","date":"2013-09-18T13:54:43.706Z","type":"join"}
{"nick":"luigy_","reason":"Ping timeout: 260 seconds","date":"2013-09-18T14:05:23.344Z","type":"quit"}
{"nick":"luigy_","date":"2013-09-18T14:06:48.361Z","type":"join"}
{"nick":"julianduque","date":"2013-09-18T14:08:01.934Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 276 seconds","date":"2013-09-18T14:10:06.393Z","type":"quit"}
{"nick":"luigy_","reason":"Ping timeout: 256 seconds","date":"2013-09-18T14:11:45.891Z","type":"quit"}
{"nick":"luigy_","date":"2013-09-18T14:19:18.576Z","type":"join"}
{"nick":"kenperkins","date":"2013-09-18T14:21:40.957Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-09-18T14:24:50.514Z","type":"join"}
{"nick":"paulfryzel","date":"2013-09-18T14:28:09.593Z","type":"join"}
{"nick":"amartens","date":"2013-09-18T14:30:40.737Z","type":"join"}
{"nick":"amartens","reason":"Ping timeout: 248 seconds","date":"2013-09-18T14:35:07.728Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 264 seconds","date":"2013-09-18T14:44:30.272Z","type":"quit"}
{"nick":"luigy_","reason":"Ping timeout: 276 seconds","date":"2013-09-18T14:45:12.434Z","type":"quit"}
{"nick":"wwicks","date":"2013-09-18T14:46:45.832Z","type":"join"}
{"nick":"AvianFlu","date":"2013-09-18T14:59:23.592Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #560 \u00037UNSTABLE\u000f smartos-x64 (6/640) http://jenkins.nodejs.org/job/nodejs-master/560/","date":"2013-09-18T15:17:13.238Z","type":"message"}
{"nick":"jmar777","reason":"Read error: Connection reset by peer","date":"2013-09-18T15:20:23.448Z","type":"quit"}
{"nick":"jmar777","date":"2013-09-18T15:20:46.846Z","type":"join"}
{"nick":"luigy_","date":"2013-09-18T15:26:52.183Z","type":"join"}
{"nick":"c4milo","date":"2013-09-18T15:28:26.562Z","type":"join"}
{"nick":"mmalecki","message":"tjfontaine: hey","date":"2013-09-18T15:30:27.187Z","type":"message"}
{"nick":"paulfryzel","reason":"Ping timeout: 276 seconds","date":"2013-09-18T15:30:42.397Z","type":"quit"}
{"nick":"mmalecki","message":"tjfontaine: I heard gossips about a mythical node 0.11 and node 0.10 addon compatibility later","date":"2013-09-18T15:30:55.455Z","type":"message"}
{"nick":"amartens","date":"2013-09-18T15:30:57.373Z","type":"join"}
{"nick":"mmalecki","message":"tjfontaine: are you perhaps, involved with those activities?","date":"2013-09-18T15:32:19.177Z","type":"message"}
{"nick":"paulfryzel","date":"2013-09-18T15:33:39.631Z","type":"join"}
{"nick":"dap","date":"2013-09-18T15:34:00.541Z","type":"join"}
{"nick":"luigy_","reason":"Ping timeout: 264 seconds","date":"2013-09-18T15:34:26.880Z","type":"quit"}
{"nick":"amartens","reason":"Ping timeout: 276 seconds","date":"2013-09-18T15:35:54.427Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-09-18T15:40:36.758Z","type":"join"}
{"nick":"trevnorris","message":"morning all","date":"2013-09-18T15:45:24.630Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-09-18T15:45:38.077Z","type":"join"}
{"nick":"luigy_","date":"2013-09-18T15:56:25.462Z","type":"join"}
{"nick":"tjfontaine","message":"mmalecki: I am that is me","date":"2013-09-18T16:03:44.093Z","type":"message"}
{"nick":"mmalecki","message":"tjfontaine: well, hello then!","date":"2013-09-18T16:04:00.638Z","type":"message"}
{"nick":"tjfontaine","message":"heya :)","date":"2013-09-18T16:04:07.518Z","type":"message"}
{"nick":"mmalecki","message":"tjfontaine: anywhere I can take a look at what you did?","date":"2013-09-18T16:04:26.101Z","type":"message"}
{"nick":"tjfontaine","message":"it's still slightly fresh, but https://github.com/tjfontaine/node-addon-layer is the idea, shim_ is just a place holder namespace","date":"2013-09-18T16:04:58.502Z","type":"message"}
{"nick":"dshaw_","date":"2013-09-18T16:05:19.560Z","type":"join"}
{"nick":"tjfontaine","message":"I'm going to change how persistents themselves work, but otherwise it's pretty straight forward","date":"2013-09-18T16:05:26.902Z","type":"message"}
{"nick":"mmalecki","message":"oh man, that's complex","date":"2013-09-18T16:05:48.261Z","type":"message"}
{"nick":"tjfontaine","message":"mmalecki: if you just want a compatibility header betwixt the two, you can checkout rvagg's nan project","date":"2013-09-18T16:06:12.645Z","type":"message"}
{"nick":"TooTallNate","date":"2013-09-18T16:10:56.718Z","type":"join"}
{"nick":"inolen","date":"2013-09-18T16:11:17.773Z","type":"join"}
{"nick":"mmalecki","message":"tjfontaine: right, looks like this is what I'm going to go with, shim looks kinda too complex","date":"2013-09-18T16:11:46.992Z","type":"message"}
{"nick":"tjfontaine","message":"nan is for \"I love C++/V8 api\" or \"I already have a module and I want it to work with minimal effort\"","date":"2013-09-18T16:12:57.250Z","type":"message"}
{"nick":"tjfontaine","message":"the addon layer is for people writing new modules to target and work regardless going forward","date":"2013-09-18T16:13:09.738Z","type":"message"}
{"nick":"indutny","message":"gosh","date":"2013-09-18T16:19:32.196Z","type":"message"}
{"nick":"indutny","message":"guy was calling russian judges","date":"2013-09-18T16:19:49.145Z","type":"message"}
{"nick":"indutny","message":"saying he is from the government","date":"2013-09-18T16:19:54.631Z","type":"message"}
{"nick":"indutny","message":"and asking to do the right decision","date":"2013-09-18T16:20:00.847Z","type":"message"}
{"nick":"indutny","message":"and they believed him","date":"2013-09-18T16:20:07.725Z","type":"message"}
{"nick":"indutny","message":"now they're going to sue this guy :)","date":"2013-09-18T16:20:12.725Z","type":"message"}
{"nick":"indutny","message":"that's total madness ","date":"2013-09-18T16:20:23.469Z","type":"message"}
{"nick":"tjfontaine","message":"hm?","date":"2013-09-18T16:23:29.059Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-09-18T16:24:04.457Z","type":"quit"}
{"nick":"inolen","date":"2013-09-18T16:24:31.831Z","type":"join"}
{"nick":"inolen","reason":"Client Quit","date":"2013-09-18T16:24:43.448Z","type":"quit"}
{"nick":"indutny","message":"tjfontaine: huh?","date":"2013-09-18T16:26:17.735Z","type":"message"}
{"nick":"indutny","message":"he asked them to change their mind regarding the trial","date":"2013-09-18T16:26:31.302Z","type":"message"}
{"nick":"indutny","message":"and do the \"right\" judgement","date":"2013-09-18T16:26:39.474Z","type":"message"}
{"nick":"indutny","message":"sorry, if it wasn't correct","date":"2013-09-18T16:26:44.530Z","type":"message"}
{"nick":"amartens","date":"2013-09-18T16:27:07.373Z","type":"join"}
{"nick":"brson","date":"2013-09-18T16:28:54.564Z","type":"join"}
{"nick":"groundwater","date":"2013-09-18T16:29:42.992Z","type":"join"}
{"nick":"tjfontaine","message":"oh","date":"2013-09-18T16:29:46.251Z","type":"message"}
{"nick":"tjfontaine","message":"I just wasn't clear on what you meant","date":"2013-09-18T16:29:53.212Z","type":"message"}
{"nick":"TooTallNate","reason":"Ping timeout: 260 seconds","date":"2013-09-18T16:30:03.426Z","type":"quit"}
{"nick":"indutny","message":"yeah, I got it :)","date":"2013-09-18T16:36:15.984Z","type":"message"}
{"nick":"indutny","message":"np","date":"2013-09-18T16:36:16.398Z","type":"message"}
{"nick":"indutny","message":"wanna review v8 update https://github.com/joyent/node/pull/6241 ?","date":"2013-09-18T16:36:22.317Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-09-18T16:36:23.184Z","type":"message"}
{"nick":"indutny","message":"I mean does anyone mind if I'll pull it if jenkins is ok with it?","date":"2013-09-18T16:36:35.119Z","type":"message"}
{"nick":"tjfontaine","message":"if jenkins doesn't complain, yes land it","date":"2013-09-18T16:36:53.219Z","type":"message"}
{"nick":"piscisaureus_","reason":"Read error: Connection reset by peer","date":"2013-09-18T16:49:47.592Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-18T16:53:40.343Z","type":"quit"}
{"nick":"tjfontaine","message":"indutny: I have a smaller test case if you want for 6235","date":"2013-09-18T16:56:48.255Z","type":"message"}
{"nick":"indutny","message":"oh, I'm working at it atm :)","date":"2013-09-18T16:56:59.339Z","type":"message"}
{"nick":"indutny","message":"yeah, just finished","date":"2013-09-18T16:57:17.561Z","type":"message"}
{"nick":"indutny","message":"that seems to be some stubborn v8 issue","date":"2013-09-18T16:57:26.660Z","type":"message"}
{"nick":"indutny","message":"rather than a contextify thing","date":"2013-09-18T16:57:33.841Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-09-18T16:58:09.899Z","type":"message"}
{"nick":"tjfontaine","message":"I agree","date":"2013-09-18T16:58:11.883Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2013-09-18T16:58:19.116Z","type":"message"}
{"nick":"indutny","message":"var makePredicate = function() {}","date":"2013-09-18T16:58:25.314Z","type":"message"}
{"nick":"indutny","message":"will work","date":"2013-09-18T16:58:26.411Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2013-09-18T16:58:30.631Z","type":"message"}
{"nick":"indutny","message":"I don't really know much about strict mode","date":"2013-09-18T16:58:39.792Z","type":"message"}
{"nick":"indutny","message":"is it how it should be working?","date":"2013-09-18T16:58:48.206Z","type":"message"}
{"nick":"tjfontaine","message":"var vm = require('vm');                                                                               ","date":"2013-09-18T16:59:08.804Z","type":"message"}
{"nick":"tjfontaine","message":"var context = vm.createContext({});                                                                   ","date":"2013-09-18T16:59:11.813Z","type":"message"}
{"nick":"tjfontaine","message":"vm.runInContext(\"'use strict'; var KEYWORDS = 'foobar'; KEYWORDS = 'foobaz';\", context, 't.js'); ","date":"2013-09-18T16:59:14.844Z","type":"message"}
{"nick":"indutny","message":"and","date":"2013-09-18T17:00:19.663Z","type":"message"}
{"nick":"indutny","message":"isn't it working?","date":"2013-09-18T17:00:22.924Z","type":"message"}
{"nick":"tjfontaine","message":"nope","date":"2013-09-18T17:00:26.666Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2013-09-18T17:00:28.651Z","type":"message"}
{"nick":"indutny","message":"gosh","date":"2013-09-18T17:00:30.463Z","type":"message"}
{"nick":"tjfontaine","message":"t.js:1","date":"2013-09-18T17:00:36.513Z","type":"message"}
{"nick":"TooTallNate","date":"2013-09-18T17:00:36.513Z","type":"join"}
{"nick":"tjfontaine","message":"'use strict'; var KEYWORDS = 'foobar'; KEYWORDS = 'foobaz';","date":"2013-09-18T17:00:36.514Z","type":"message"}
{"nick":"tjfontaine","message":"ReferenceError: KEYWORDS is not defined","date":"2013-09-18T17:00:44.033Z","type":"message"}
{"nick":"indutny","message":"aah","date":"2013-09-18T17:00:54.218Z","type":"message"}
{"nick":"indutny","message":"stupid me","date":"2013-09-18T17:00:55.333Z","type":"message"}
{"nick":"indutny","message":"I did that too","date":"2013-09-18T17:00:58.188Z","type":"message"}
{"nick":"indutny","message":"and forgot about it :0","date":"2013-09-18T17:01:01.559Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2013-09-18T17:01:04.493Z","type":"message"}
{"nick":"indutny","message":"one-liner","date":"2013-09-18T17:01:39.285Z","type":"message"}
{"nick":"indutny","message":"0x1018577c0","date":"2013-09-18T17:01:39.708Z","type":"message"}
{"nick":"indutny","message":"oops","date":"2013-09-18T17:01:45.362Z","type":"message"}
{"nick":"indutny","message":"require('vm').runInNewContext('\"use strict\"; var v = 1; v = 2');","date":"2013-09-18T17:01:45.633Z","type":"message"}
{"nick":"tjfontaine","message":"right ","date":"2013-09-18T17:01:52.452Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2013-09-18T17:02:55.467Z","type":"message"}
{"nick":"indutny","message":"no, it seems to be vm2 issue","date":"2013-09-18T17:03:00.003Z","type":"message"}
{"nick":"indutny","message":"or not","date":"2013-09-18T17:03:56.072Z","type":"message"}
{"nick":"indutny","message":"gosh","date":"2013-09-18T17:03:56.658Z","type":"message"}
{"nick":"julianduque","reason":"Quit: leaving","date":"2013-09-18T17:07:28.894Z","type":"quit"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-09-18T17:09:34.728Z","type":"quit"}
{"nick":"indutny","message":"ok, found it","date":"2013-09-18T17:13:03.451Z","type":"message"}
{"nick":"c4milo","date":"2013-09-18T17:15:13.131Z","type":"join"}
{"nick":"indutny","message":"oh","date":"2013-09-18T17:16:35.888Z","type":"message"}
{"nick":"indutny","message":"not really","date":"2013-09-18T17:16:37.002Z","type":"message"}
{"nick":"indutny","message":"shit","date":"2013-09-18T17:16:37.442Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-18T17:21:21.626Z","type":"quit"}
{"nick":"bajtos","date":"2013-09-18T17:23:13.076Z","type":"join"}
{"nick":"bajtos","reason":"Client Quit","date":"2013-09-18T17:24:14.951Z","type":"quit"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-09-18T17:24:44.592Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Fedor Indutny\u000f \u00037master\u000f * \u0002a1cf3ad\u0002 : deps: update v8 to 3.20.17.7 - http://git.io/Qhr41Q","date":"2013-09-18T17:25:51.098Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #561 \u00037UNSTABLE\u000f osx-x64 (1/640) smartos-x64 (5/640) http://jenkins.nodejs.org/job/nodejs-master/561/","date":"2013-09-18T17:34:50.232Z","type":"message"}
{"nick":"inolen","date":"2013-09-18T17:37:08.675Z","type":"join"}
{"nick":"trevnorris","message":"ping anyone. what does this syntax imply: void StreamWrap::GetFD(Local<String>, const...","date":"2013-09-18T17:40:42.672Z","type":"message"}
{"nick":"trevnorris","message":"i mean, why doesn't the first argument have a name?","date":"2013-09-18T17:40:50.613Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #354 \u00037UNSTABLE\u000f windows-x64 (21/640) windows-ia32 (21/640) http://jenkins.nodejs.org/job/nodejs-master-windows/354/","date":"2013-09-18T17:46:16.401Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-09-18T17:47:05.175Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: sup dude. get any sleep last night?","date":"2013-09-18T17:47:31.657Z","type":"message"}
{"nick":"EhevuTov","date":"2013-09-18T17:50:29.360Z","type":"join"}
{"nick":"dominictarr","date":"2013-09-18T17:53:25.007Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #246 \u00037UNSTABLE\u000f windows (3/195) smartos (9/194) http://jenkins.nodejs.org/job/libuv-master/246/","date":"2013-09-18T17:53:55.462Z","type":"message"}
{"nick":"trevnorris","message":"indutny: ping","date":"2013-09-18T17:55:32.503Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: hey. yeah, some. not nearly enough though :)","date":"2013-09-18T17:58:01.809Z","type":"message"}
{"nick":"trevnorris","message":"hah, know how that goes :)","date":"2013-09-18T17:58:12.684Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: in StreamWrap::GetFD i'm successfully unwrapping, but then get: ","date":"2013-09-18T17:58:31.627Z","type":"message"}
{"nick":"trevnorris","message":"wrap->stream()->io_watcher","date":"2013-09-18T17:58:32.271Z","type":"message"}
{"nick":"trevnorris","message":"Cannot access memory at address 0x9900003fa1a000b1","date":"2013-09-18T17:58:40.408Z","type":"message"}
{"nick":"trevnorris","message":"and segfault","date":"2013-09-18T17:58:44.100Z","type":"message"}
{"nick":"trevnorris","message":"it's trying to access io_watcher.fd","date":"2013-09-18T17:58:54.188Z","type":"message"}
{"nick":"trevnorris","message":"i'm going through gdb on a debug build trying to track down how it's even getting there.","date":"2013-09-18T18:00:12.614Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: basically i'm trying to print out a socket (I think) but when it tries to access the fd it segfaults","date":"2013-09-18T18:02:01.386Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: what does *wrap->stream() print in gdb?","date":"2013-09-18T18:03:15.446Z","type":"message"}
{"nick":"trevnorris","message":"$6 = (uv_stream_t *) 0x9900003fa1a00041","date":"2013-09-18T18:03:38.158Z","type":"message"}
{"nick":"bnoordhuis","message":"don't forget the star :)","date":"2013-09-18T18:03:46.709Z","type":"message"}
{"nick":"trevnorris","message":"heh, thanks","date":"2013-09-18T18:03:56.985Z","type":"message"}
{"nick":"trevnorris","message":"Cannot access memory at address 0x9900003fa1a00041","date":"2013-09-18T18:04:12.286Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, so it's entirely invalid? okay","date":"2013-09-18T18:04:21.785Z","type":"message"}
{"nick":"bnoordhuis","message":"what about *wrap?","date":"2013-09-18T18:04:32.834Z","type":"message"}
{"nick":"trevnorris","message":"$7 = {<node::HandleWrap> = {<node::AsyncWrap> = {object_ = {val_ = 0x490000131cecf041}, .....","date":"2013-09-18T18:04:46.728Z","type":"message"}
{"nick":"trevnorris","message":"and on","date":"2013-09-18T18:04:48.391Z","type":"message"}
{"nick":"bnoordhuis","message":"well, the on is what's interesting","date":"2013-09-18T18:05:01.156Z","type":"message"}
{"nick":"trevnorris","message":"ok","date":"2013-09-18T18:05:07.502Z","type":"message"}
{"nick":"bnoordhuis","message":"can you `set print pretty` and gist the output?","date":"2013-09-18T18:05:09.567Z","type":"message"}
{"nick":"trevnorris","message":"ok","date":"2013-09-18T18:05:21.392Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, and maybe `set pagination off` to make your life easier","date":"2013-09-18T18:05:23.153Z","type":"message"}
{"nick":"trevnorris","message":"ooh, i like","date":"2013-09-18T18:05:41.619Z","type":"message"}
{"nick":"trevnorris","message":"https://gist.github.com/trevnorris/6613041","date":"2013-09-18T18:06:10.111Z","type":"message"}
{"nick":"bnoordhuis","message":"let me guess, that's the default gdb on os x?","date":"2013-09-18T18:06:46.697Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #231 \u00037UNSTABLE\u000f smartos-ia32 (1/640) smartos-x64 (5/640) http://jenkins.nodejs.org/job/libuv-node-integration/231/","date":"2013-09-18T18:07:09.031Z","type":"message"}
{"nick":"trevnorris","message":"nope linux","date":"2013-09-18T18:07:21.612Z","type":"message"}
{"nick":"trevnorris","message":"just set the two options you just said","date":"2013-09-18T18:07:27.460Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-18T18:07:52.316Z","type":"nick"}
{"nick":"bnoordhuis","message":"okay. are you doing static_casts or reintepret_casts anywhere?","date":"2013-09-18T18:08:13.127Z","type":"message"}
{"nick":"bnoordhuis","message":"i ask because the contents looks like garbage","date":"2013-09-18T18:08:44.354Z","type":"message"}
{"nick":"trevnorris","message":"not in async_wrap","date":"2013-09-18T18:08:49.530Z","type":"message"}
{"nick":"bnoordhuis","message":"take the flags fields for example","date":"2013-09-18T18:09:00.753Z","type":"message"}
{"nick":"bnoordhuis","message":"4278190080 is 0xff000000 which is not a valid combination","date":"2013-09-18T18:09:19.090Z","type":"message"}
{"nick":"bnoordhuis","message":"same for the async_flags_ field","date":"2013-09-18T18:09:25.386Z","type":"message"}
{"nick":"trevnorris","message":"ah, yeah. and async_flags should be 0 or 1","date":"2013-09-18T18:09:29.468Z","type":"message"}
{"nick":"bnoordhuis","message":"so, sounds like a bad pointer. if you have classes with multiple bases, you need to be careful with pointer casts","date":"2013-09-18T18:10:25.054Z","type":"message"}
{"nick":"trevnorris","message":"the only static_cast is done in NODE_UNWRAP_NO_ABORT","date":"2013-09-18T18:10:54.850Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-18T18:11:27.446Z","type":"quit"}
{"nick":"trevnorris","message":"and it's getting wrap from the objects internal field","date":"2013-09-18T18:11:45.503Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: i assume you're casting from void to T? what type is T?","date":"2013-09-18T18:12:14.960Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-18T18:12:29.342Z","type":"nick"}
{"nick":"trevnorris","message":"bnoordhuis: yeah. that's what NODE_UNWRAP does","date":"2013-09-18T18:12:34.741Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: what was the reason for the v8 upgrade?","date":"2013-09-18T18:12:46.255Z","type":"message"}
{"nick":"dshaw_","date":"2013-09-18T18:12:50.339Z","type":"join"}
{"nick":"trevnorris","message":"is it possible for the class to have been cleaned up, but the js object is still around?","date":"2013-09-18T18:13:41.476Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: sure","date":"2013-09-18T18:14:19.004Z","type":"message"}
{"nick":"bnoordhuis","message":"but that's a bug of course","date":"2013-09-18T18:14:35.173Z","type":"message"}
{"nick":"trevnorris","message":"ok yeah. it's for my async listener thing. i'm trying to print out each class, but that's happening when I call .close() on the net server","date":"2013-09-18T18:15:09.868Z","type":"message"}
{"nick":"trevnorris","message":"wait. close has nothing to do with it","date":"2013-09-18T18:15:53.498Z","type":"message"}
{"nick":"trevnorris","message":"ok. so TCP has getter for .fd, but when I try to access it, segfault.","date":"2013-09-18T18:17:23.205Z","type":"message"}
{"nick":"trevnorris","message":"alright. time to dig","date":"2013-09-18T18:17:29.344Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: ok. looks like a possible race condition. might be passing the object_ to the async listener before the fd has been gotten (maybe)","date":"2013-09-18T18:19:44.403Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-18T18:21:02.113Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: seems to possibly be it. if I delay the print of the fd for 1 sec then it doesn't seg fault.","date":"2013-09-18T18:21:53.647Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: okay, noted","date":"2013-09-18T18:22:16.874Z","type":"message"}
{"nick":"trevnorris","message":"thanks for the help","date":"2013-09-18T18:22:30.358Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-18T18:22:46.555Z","type":"quit"}
{"nick":"trevnorris","message":"now going to figure out the order of operations and see how to fix the async listener impl.","date":"2013-09-18T18:22:56.964Z","type":"message"}
{"nick":"c4milo","date":"2013-09-18T18:23:43.973Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: ok, just fyi. think AsyncWrap is instantiating before TCPWrap. so it's calling the listeners before uv_tcp_init has a chance to run.","date":"2013-09-18T18:24:59.403Z","type":"message"}
{"nick":"trevnorris","action":"&","date":"2013-09-18T18:43:23.349Z","type":"action"}
{"nick":"LOUDBOT","message":"JOSIAH WAIT YOU HAVEN'T TOLD US THE BEST WAY TO REDISTRIBUTE WEALTH","date":"2013-09-18T18:43:23.906Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #355 \u00037UNSTABLE\u000f windows-x64 (22/640) windows-ia32 (20/640) http://jenkins.nodejs.org/job/nodejs-master-windows/355/","date":"2013-09-18T18:45:10.437Z","type":"message"}
{"nick":"mcavage","date":"2013-09-18T19:02:45.819Z","type":"join"}
{"nick":"Domenic_","message":"tjfontaine: indutny: any idea what's going on with that strict thing? having a hard time imagining that it's anything but a v8 issue...","date":"2013-09-18T19:06:47.329Z","type":"message"}
{"nick":"dsantiago","reason":"Quit: Leaving...","date":"2013-09-18T19:07:46.116Z","type":"quit"}
{"nick":"inolen","reason":"Read error: Connection reset by peer","date":"2013-09-18T19:15:27.023Z","type":"quit"}
{"nick":"inolen1","date":"2013-09-18T19:15:27.683Z","type":"join"}
{"nick":"dsantiago","date":"2013-09-18T19:19:56.813Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-09-18T19:28:54.982Z","type":"quit"}
{"nick":"EhevuTov","reason":"Quit: Leaving","date":"2013-09-18T19:42:31.313Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-09-18T19:46:06.816Z","type":"join"}
{"nick":"M28","reason":"Ping timeout: 245 seconds","date":"2013-09-18T19:51:16.725Z","type":"quit"}
{"nick":"indutny","message":"pong","date":"2013-09-18T19:54:45.597Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: well, just stability","date":"2013-09-18T19:54:51.870Z","type":"message"}
{"nick":"indutny","message":"Domenic_: its probably a v8 issue","date":"2013-09-18T19:55:07.469Z","type":"message"}
{"nick":"indutny","message":"Domenic_: I'm still quite far from the fix","date":"2013-09-18T19:55:16.106Z","type":"message"}
{"nick":"trevnorris","action":"fg","date":"2013-09-18T19:57:37.258Z","type":"action"}
{"nick":"tjfontaine","message":"trevnorris: are you coming tonight? Because then you and othiym23 and dap can talk about the implications of the asyncListener stuff","date":"2013-09-18T20:05:15.838Z","type":"message"}
{"nick":"kenperkins","date":"2013-09-18T20:05:24.325Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: checking calendar","date":"2013-09-18T20:13:48.378Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: is there a magical way of telling an inherited class to run a command after the inheriting class is done constructing?","date":"2013-09-18T20:14:24.198Z","type":"message"}
{"nick":"tjfontaine","message":"huh?","date":"2013-09-18T20:14:42.061Z","type":"message"}
{"nick":"tjfontaine","message":"the descendent class or the base class?","date":"2013-09-18T20:14:52.633Z","type":"message"}
{"nick":"trevnorris","message":"I want the base class to run a command after the descendant is done constructing.","date":"2013-09-18T20:15:29.466Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: the short answer is 'no'","date":"2013-09-18T20:17:17.362Z","type":"message"}
{"nick":"trevnorris","message":"bummer","date":"2013-09-18T20:17:22.944Z","type":"message"}
{"nick":"trevnorris","action":"off to refactor my code","date":"2013-09-18T20:17:28.796Z","type":"action"}
{"nick":"bnoordhuis","message":"the longer answer is still 'no' btw but comes with a nice disgression on c++","date":"2013-09-18T20:17:50.562Z","type":"message"}
{"nick":"tjfontaine","message":"what problem are you actually trying to solve?","date":"2013-09-18T20:17:52.636Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-18T20:18:05.996Z","type":"nick"}
{"nick":"trevnorris","message":"the AsyncWrap class calls the async listeners that have been queued on class instantiation","date":"2013-09-18T20:18:58.931Z","type":"message"}
{"nick":"trevnorris","message":"but the problem is some of the object properties haven't been set until the parent class is done constructing","date":"2013-09-18T20:19:19.965Z","type":"message"}
{"nick":"trevnorris","message":"namely the fd","date":"2013-09-18T20:19:26.890Z","type":"message"}
{"nick":"trevnorris","message":"so if you try to access context.fd you segfault","date":"2013-09-18T20:19:41.329Z","type":"message"}
{"nick":"trevnorris","message":"so I can't run the callbacks until after the parent class is done constructing","date":"2013-09-18T20:19:58.389Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: sorry, won't be going. i'm responsible for the kid tonight.","date":"2013-09-18T20:21:51.513Z","type":"message"}
{"nick":"tjfontaine","message":"heh ok","date":"2013-09-18T20:22:33.764Z","type":"message"}
{"nick":"tjfontaine","message":"we'll just have to use your name in vain","date":"2013-09-18T20:22:41.545Z","type":"message"}
{"nick":"trevnorris","message":"haha, ok","date":"2013-09-18T20:22:47.540Z","type":"message"}
{"nick":"trevnorris","message":"it just feels ugly/not correct to go scatter the command through all the parent classes. that was the whole point of creating one base class","date":"2013-09-18T20:24:14.650Z","type":"message"}
{"nick":"trevnorris","message":"hm, maybe I could get around it by just not passing it to the listener, and only the before/after/error callbacks.","date":"2013-09-18T20:25:11.212Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: ?","date":"2013-09-18T20:25:12.732Z","type":"message"}
{"nick":"tjfontaine","message":"indutny, Domenic_: a quick tests shows that 3602d4c is fine but 7afdba6 is broken, so while it may be a v8 bug it's certainly something with how vm2 is working","date":"2013-09-18T20:31:43.525Z","type":"message"}
{"nick":"Domenic_","message":"tjfontaine: woaaaah","date":"2013-09-18T20:31:56.672Z","type":"message"}
{"nick":"Domenic_","message":"wait i shoudl look up those commits before","date":"2013-09-18T20:32:06.504Z","type":"message"}
{"nick":"Domenic_","message":"is 3602d4c vm1?","date":"2013-09-18T20:32:12.715Z","type":"message"}
{"nick":"tjfontaine","message":"yup, 7afbda6 is the first part of vm2","date":"2013-09-18T20:32:24.127Z","type":"message"}
{"nick":"Domenic_","message":"ah","date":"2013-09-18T20:32:51.232Z","type":"message"}
{"nick":"Domenic_","message":"well yeah","date":"2013-09-18T20:32:52.517Z","type":"message"}
{"nick":"Domenic_","message":"so vm2 actually uses the proxy global","date":"2013-09-18T20:32:59.808Z","type":"message"}
{"nick":"tjfontaine","message":"right","date":"2013-09-18T20:33:08.505Z","type":"message"}
{"nick":"Domenic_","message":"so my contention is it's a bug in when v8 hits the proxy global's handler","date":"2013-09-18T20:33:10.055Z","type":"message"}
{"nick":"Domenic_","message":"it obviously shouldn't be doing that for reassignments to locally-declared vars","date":"2013-09-18T20:33:21.884Z","type":"message"}
{"nick":"Domenic_","message":"if i was at a computer with vs i would be all over this, putting breakpoints in those handlers","date":"2013-09-18T20:33:35.056Z","type":"message"}
{"nick":"tjfontaine","message":"fear not","date":"2013-09-18T20:33:42.908Z","type":"message"}
{"nick":"tjfontaine","message":"we'll get a nice reduction in for v8","date":"2013-09-18T20:34:04.769Z","type":"message"}
{"nick":"othiym23","message":"what's 'it' in this context, trevnorris?","date":"2013-09-18T20:36:56.180Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: so I did have it so the \"context\" (e.g. the object attached to the request) was passed to the async listener. but in some cases this will cause a segfault if specific properties are accessed.","date":"2013-09-18T20:37:40.689Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: so the easiest solution is to only pass the object on the before/after/error callbacks","date":"2013-09-18T20:37:55.019Z","type":"message"}
{"nick":"othiym23","message":"that's bad","date":"2013-09-18T20:37:57.262Z","type":"message"}
{"nick":"othiym23","message":"that seems fine to me","date":"2013-09-18T20:38:03.446Z","type":"message"}
{"nick":"trevnorris","message":"coolio","date":"2013-09-18T20:38:08.164Z","type":"message"}
{"nick":"othiym23","message":"so e.g. not on the setup handler?","date":"2013-09-18T20:38:11.615Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-09-18T20:38:34.137Z","type":"quit"}
{"nick":"trevnorris","message":"yeah. so the request object won't be passed to the callback that's called as the request is being setup.","date":"2013-09-18T20:38:38.865Z","type":"message"}
{"nick":"trevnorris","message":"but you can still return an object","date":"2013-09-18T20:38:44.867Z","type":"message"}
{"nick":"trevnorris","message":"i really don't like it. was using it for some testing stuff, and i'll look for a work around.","date":"2013-09-18T20:39:04.170Z","type":"message"}
{"nick":"trevnorris","message":"but it won't be a trivial fix.","date":"2013-09-18T20:39:10.924Z","type":"message"}
{"nick":"othiym23","message":"yeah, I agree","date":"2013-09-18T20:40:02.622Z","type":"message"}
{"nick":"indutny","message":"Domenic_: I'm going to debug generated code","date":"2013-09-18T20:42:34.298Z","type":"message"}
{"nick":"indutny","message":"Domenic_: but I'm a bit busy now","date":"2013-09-18T20:42:41.490Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: hey, would you consider it evil if GetFD returned -1 if it hasn't been setup yet?","date":"2013-09-18T20:45:14.253Z","type":"message"}
{"nick":"tjfontaine","message":"it doesn't do that now anyway?","date":"2013-09-18T20:45:55.256Z","type":"message"}
{"nick":"tjfontaine","message":"that's generally how we handle it in other places","date":"2013-09-18T20:46:07.826Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: well, there's a case where if you try to access it, it segfaults","date":"2013-09-18T20:46:19.245Z","type":"message"}
{"nick":"tjfontaine","message":"I presume streamwrap is what we're talking about atm","date":"2013-09-18T20:47:11.273Z","type":"message"}
{"nick":"Domenic_","message":"indutny: thanks so much for your work, not sure i could have done any of the things you're doing :)","date":"2013-09-18T20:47:28.779Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-09-18T20:47:35.493Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: yeah. StreamWrap::GetFD","date":"2013-09-18T20:47:45.739Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: which part segfaults?","date":"2013-09-18T20:48:04.275Z","type":"message"}
{"nick":"trevnorris","message":"fd = wrap->stream()->io_watcher.fd;","date":"2013-09-18T20:48:12.702Z","type":"message"}
{"nick":"tjfontaine","message":"because there's no io_watcher?","date":"2013-09-18T20:48:21.872Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-09-18T20:48:25.099Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: https://gist.github.com/trevnorris/6613041","date":"2013-09-18T20:48:31.138Z","type":"message"}
{"nick":"trevnorris","message":"^ output from gdb","date":"2013-09-18T20:48:37.371Z","type":"message"}
{"nick":"tjfontaine","message":"because stream() isn't returning what's needed?","date":"2013-09-18T20:48:39.144Z","type":"message"}
{"nick":"trevnorris","message":"well, UNWRAP grabs the pointer from the Object, but the pointer just points to random memory","date":"2013-09-18T20:49:17.851Z","type":"message"}
{"nick":"tjfontaine","message":"is there no way we can set that to null so the checks there work?","date":"2013-09-18T20:49:39.689Z","type":"message"}
{"nick":"trevnorris","message":"hm. possible. one sec.","date":"2013-09-18T20:50:04.397Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: I think io_watcher is part of uv_handle_t","date":"2013-09-18T20:51:02.694Z","type":"message"}
{"nick":"tjfontaine","message":"well, can we put a state flag on the streamwrap that we can check against then","date":"2013-09-18T20:51:33.626Z","type":"message"}
{"nick":"tjfontaine","message":"anyway, -1 is fine that's what we want there in that case, yes","date":"2013-09-18T20:52:08.543Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: thoughts?","date":"2013-09-18T20:52:08.792Z","type":"message"}
{"nick":"trevnorris","message":"ok. so basically a state saying that we've created the object but haven't set the pointer to memory yet","date":"2013-09-18T20:52:41.683Z","type":"message"}
{"nick":"trevnorris","message":"right?","date":"2013-09-18T20:52:43.165Z","type":"message"}
{"nick":"tjfontaine","message":"lemme look more closely at this","date":"2013-09-18T20:53:20.372Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: stream_ can't be set to null in the constructor initializer?","date":"2013-09-18T20:55:35.610Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: well, stream_ is set to stream","date":"2013-09-18T20:56:18.885Z","type":"message"}
{"nick":"trevnorris","message":"which is a uv_stream_t*","date":"2013-09-18T20:56:27.163Z","type":"message"}
{"nick":"tjfontaine","message":"right, ok so this is valid, but we haven't uv_*_init'd the structure yet?","date":"2013-09-18T20:56:48.614Z","type":"message"}
{"nick":"trevnorris","message":"exactly","date":"2013-09-18T20:56:56.904Z","type":"message"}
{"nick":"tjfontaine","message":"I wonder if there's a uv_is_* that makes sense here to check against","date":"2013-09-18T20:58:00.355Z","type":"message"}
{"nick":"trevnorris","message":"problem is UNWRAP get's the internal pointer from object_, but that hasn't been set yet. ooh, maybe we can just set that to nil","date":"2013-09-18T20:58:40.875Z","type":"message"}
{"nick":"trevnorris","message":"well, it's going to be expensive. nm.","date":"2013-09-18T20:59:24.433Z","type":"message"}
{"nick":"trevnorris","message":"is there any way to check if the address returned from the fd is a valid pointer to a class?","date":"2013-09-18T21:00:11.336Z","type":"message"}
{"nick":"tjfontaine","message":"well from what you're describing, the segfault is because stream is invalid, so isn't actually failing on trying to dereference the io_watcher?","date":"2013-09-18T21:03:13.373Z","type":"message"}
{"nick":"trevnorris","message":"from gdb it's giving me","date":"2013-09-18T21:04:18.339Z","type":"message"}
{"nick":"trevnorris","message":"(gdb) p *wrap->stream()","date":"2013-09-18T21:04:18.861Z","type":"message"}
{"nick":"trevnorris","message":"Cannot access memory at address 0x9900003fa1a00041","date":"2013-09-18T21:04:19.077Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-09-18T21:04:30.383Z","type":"quit"}
{"nick":"tjfontaine","message":"then stream has definitely not been set to something sane, I guess I don't understand why it's not set to null first","date":"2013-09-18T21:04:56.847Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: ok so TCPWrap::New is constructing with args.This(), let me track down where that's getting called.","date":"2013-09-18T21:07:31.738Z","type":"message"}
{"nick":"kenperkins","date":"2013-09-18T21:08:13.673Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: ok. so it creates a new instance from the FunctionTemplate. I guess v8 doesn't automatically set the internal pointer to nil ?","date":"2013-09-18T21:10:01.743Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: have any idea? if the memory returned is a random address, then i'm not sure how to check if actually been set or not.","date":"2013-09-18T21:12:12.795Z","type":"message"}
{"nick":"trevnorris","message":"only thing I can think is set a flag on the class that toggles once the value has been assigned","date":"2013-09-18T21:12:34.424Z","type":"message"}
{"nick":"tjfontaine","message":"how expensive is it for us to set it to nothing ourselves?","date":"2013-09-18T21:13:19.546Z","type":"message"}
{"nick":"trevnorris","message":"let me check. I have a benchmark setup.","date":"2013-09-18T21:13:37.446Z","type":"message"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2013-09-18T21:22:16.088Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: 10 ns to check the internal field count and set to NULL if > 0","date":"2013-09-18T21:24:07.026Z","type":"message"}
{"nick":"trevnorris","message":"under heavy I/O we can be doing that upwards of 100k/sec. so it'd add ~1ms in execution time","date":"2013-09-18T21:26:02.619Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-09-18T21:26:52.961Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: but that does fix the problem","date":"2013-09-18T21:27:45.279Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: how does that solution sound?","date":"2013-09-18T21:27:54.659Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: can you give me the executive summary?","date":"2013-09-18T21:28:48.546Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: instantiating an Object in v8 with an aligned internal pointer doesn't nil the address, so if you retrieve it before it's been set you get a random pointer.","date":"2013-09-18T21:29:32.254Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: so the possible solution is to check and nil it in AsyncWrap (since it's the first thing to run anyways) then GetFD will return -1 correctly","date":"2013-09-18T21:30:10.569Z","type":"message"}
{"nick":"trevnorris","message":"but it'll add and extra 10 ns to every instantiation","date":"2013-09-18T21:30:27.476Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: sorry, check what?","date":"2013-09-18T21:30:58.945Z","type":"message"}
{"nick":"trevnorris","message":"the async listener runs on AsyncWrap instantiation, and it passes the Object up to JS and is passed to all the async listeners.","date":"2013-09-18T21:32:10.145Z","type":"message"}
{"nick":"trevnorris","message":"if someone tries to access the fd property then it'll segfault because it retrieves the pointer from the internal aligned memory attached to the instantiated Object","date":"2013-09-18T21:32:41.463Z","type":"message"}
{"nick":"trevnorris","message":"but since the pointer hasn't been set by that point, it just has a random memory address","date":"2013-09-18T21:32:59.438Z","type":"message"}
{"nick":"julianduque","date":"2013-09-18T21:33:23.752Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: that doesn't sound like good design because the async listener will always run before the descendant class gets initialized","date":"2013-09-18T21:33:35.782Z","type":"message"}
{"nick":"bnoordhuis","message":"you're just working around one issue now, not fixing the real issue","date":"2013-09-18T21:33:51.242Z","type":"message"}
{"nick":"trevnorris","message":"well, the possibly more appropriate solution is to call the async listeners after the parent class has instantiated","date":"2013-09-18T21:34:18.407Z","type":"message"}
{"nick":"bnoordhuis","message":"exactly","date":"2013-09-18T21:34:24.969Z","type":"message"}
{"nick":"trevnorris","message":"I wanted to get around that if possible because it'll require polluting all the other code with the method execution.","date":"2013-09-18T21:34:50.263Z","type":"message"}
{"nick":"trevnorris","message":"just didn't see that as a \"pretty\" solution, if you will","date":"2013-09-18T21:35:03.712Z","type":"message"}
{"nick":"trevnorris","message":"but, if that's the correct way to do it then that's how I will do it :)","date":"2013-09-18T21:35:15.948Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: hence my previous question if there was a magical way to automatically run something from a child class after it's parent class is done constructing.","date":"2013-09-18T21:36:53.023Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: the parent always initializes before the child","date":"2013-09-18T21:37:34.074Z","type":"message"}
{"nick":"bnoordhuis","message":"if you have three classes, A, B and C where B inherits from A and C inherits from B","date":"2013-09-18T21:37:53.828Z","type":"message"}
{"nick":"bnoordhuis","message":"then the constructor chain looks like A -> B -> C","date":"2013-09-18T21:38:03.298Z","type":"message"}
{"nick":"bnoordhuis","message":"and the destructor chain like C -> B -> A btw","date":"2013-09-18T21:38:16.226Z","type":"message"}
{"nick":"bnoordhuis","message":"iow, the base class has been fully constructed by the time the inheriting class's constructor runs","date":"2013-09-18T21:39:12.642Z","type":"message"}
{"nick":"trevnorris","message":"yeah. and that's straight forward.","date":"2013-09-18T21:39:23.843Z","type":"message"}
{"nick":"trevnorris","message":"wanted to make sure there wasn't some c++ trick I was missing.","date":"2013-09-18T21:39:39.776Z","type":"message"}
{"nick":"bnoordhuis","message":"nothing that isn't too brittle to consider","date":"2013-09-18T21:40:06.302Z","type":"message"}
{"nick":"trevnorris","message":"sounds good. thanks much :)","date":"2013-09-18T21:41:00.697Z","type":"message"}
{"nick":"luigy_","reason":"Ping timeout: 260 seconds","date":"2013-09-18T22:02:47.334Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 268 seconds","date":"2013-09-18T22:05:42.104Z","type":"quit"}
{"nick":"st_luke","date":"2013-09-18T22:08:41.423Z","type":"join"}
{"nick":"rendar","date":"2013-09-18T22:09:28.051Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-18T22:15:00.976Z","type":"quit"}
{"nick":"hueniverse","reason":"Read error: Connection reset by peer","date":"2013-09-18T22:29:20.253Z","type":"quit"}
{"nick":"pfox___","reason":"Ping timeout: 240 seconds","date":"2013-09-18T22:30:38.706Z","type":"quit"}
{"nick":"pfox___","date":"2013-09-18T22:31:48.796Z","type":"join"}
{"nick":"hueniverse","date":"2013-09-18T22:35:46.932Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 276 seconds","date":"2013-09-18T22:36:27.364Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: ping","date":"2013-09-18T22:43:14.006Z","type":"message"}
{"nick":"Kakera","reason":"Ping timeout: 260 seconds","date":"2013-09-18T22:43:51.183Z","type":"quit"}
{"nick":"tjfontaine","message":"pong","date":"2013-09-18T22:44:53.038Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: ","date":"2013-09-18T22:45:53.256Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: so can I screw around w/ joyents smartos servers? mozilla just gave me access to their aws. plan on using it for intra-datacenter benchmarking, but could throw my own install up there too.","date":"2013-09-18T22:47:30.541Z","type":"message"}
{"nick":"tjfontaine","message":"what do you want to benchmark?","date":"2013-09-18T22:48:19.627Z","type":"message"}
{"nick":"tjfontaine","message":"lemme see which one you should login to first","date":"2013-09-18T22:49:02.659Z","type":"message"}
{"nick":"trevnorris","message":"just want to simulate real data transfers between servers within the same datacenter.","date":"2013-09-18T22:49:29.753Z","type":"message"}
{"nick":"trevnorris","message":"instead of just on my laptop.","date":"2013-09-18T22:49:36.600Z","type":"message"}
{"nick":"trevnorris","message":"then I can leave it running longer and check for mem leaks, etc.","date":"2013-09-18T22:49:44.978Z","type":"message"}
{"nick":"tjfontaine","message":"there's one that we used for tls stuff that's relatively sane to use, but it's in eu-ams, I can probably put one closer","date":"2013-09-18T22:49:56.174Z","type":"message"}
{"nick":"trevnorris","message":"eh, no worries. i'll just throw one up on aws and spin it up when needed.","date":"2013-09-18T22:50:18.953Z","type":"message"}
{"nick":"trevnorris","message":"just want to use it to track down any mem leaks, like how max demonstrated.","date":"2013-09-18T22:50:37.825Z","type":"message"}
{"nick":"tjfontaine","message":"sure, you can use that just fine","date":"2013-09-18T22:50:46.108Z","type":"message"}
{"nick":"trevnorris","message":"i'm really wanting to finish this async listener thing so I can play around with that.","date":"2013-09-18T22:50:53.155Z","type":"message"}
{"nick":"tjfontaine","message":"root@37.153.97.13 you should already have access to it","date":"2013-09-18T22:51:06.857Z","type":"message"}
{"nick":"trevnorris","message":"is that smartos.nodejs.org?","date":"2013-09-18T22:53:25.431Z","type":"message"}
{"nick":"tjfontaine","message":"no, smartos.nodejs.org is a different box","date":"2013-09-18T22:53:42.008Z","type":"message"}
{"nick":"trevnorris","message":"coolio","date":"2013-09-18T22:53:48.533Z","type":"message"}
{"nick":"trevnorris","message":"thanks","date":"2013-09-18T22:53:49.635Z","type":"message"}
{"nick":"tjfontaine","message":"np","date":"2013-09-18T22:53:54.710Z","type":"message"}
{"nick":"trevnorris","message":"that box actually have a name?","date":"2013-09-18T22:54:06.498Z","type":"message"}
{"nick":"trevnorris","message":"(just for my ssh config :)","date":"2013-09-18T22:54:10.720Z","type":"message"}
{"nick":"trevnorris","message":"nm. i'll just login","date":"2013-09-18T22:54:20.963Z","type":"message"}
{"nick":"tjfontaine","message":"tls-bench I think, but there's no hostname afaik","date":"2013-09-18T22:54:32.500Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-18T23:07:31.206Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-09-18T23:11:42.060Z","type":"join"}
{"nick":"trevnorris","message":"freakin. this implementation feels so fragile.","date":"2013-09-18T23:15:13.208Z","type":"message"}
{"nick":"tjfontaine","message":"asyncListener?","date":"2013-09-18T23:15:43.142Z","type":"message"}
{"nick":"trevnorris","message":"just a part of it.","date":"2013-09-18T23:15:50.515Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-09-18T23:15:52.800Z","type":"quit"}
{"nick":"trevnorris","message":"the part where i'm running a method at the end of the parent constructor","date":"2013-09-18T23:16:03.290Z","type":"message"}
{"nick":"tjfontaine","message":"which part?","date":"2013-09-18T23:16:03.509Z","type":"message"}
{"nick":"tjfontaine","message":"ah","date":"2013-09-18T23:16:07.919Z","type":"message"}
{"nick":"trevnorris","message":"doesn't feel right","date":"2013-09-18T23:16:12.952Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 268 seconds","date":"2013-09-18T23:16:37.113Z","type":"quit"}
{"nick":"tjfontaine","message":"I wouldn't worry too much about it atm","date":"2013-09-18T23:17:02.682Z","type":"message"}
{"nick":"trevnorris","message":"think i'll just attach the context to the object that's passed to before/after/error by default and not pass it immediately to the listener.","date":"2013-09-18T23:17:16.820Z","type":"message"}
{"nick":"trevnorris","message":"that should work.","date":"2013-09-18T23:17:21.880Z","type":"message"}
{"nick":"trevnorris","message":"i'll figure out something else later.","date":"2013-09-18T23:17:28.309Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: problems i'm running into are that the implementations occationally vary just enough to make life a bitch","date":"2013-09-18T23:18:12.167Z","type":"message"}
{"nick":"tjfontaine","message":"sure","date":"2013-09-18T23:18:30.127Z","type":"message"}
{"nick":"dshaw_","date":"2013-09-18T23:18:59.969Z","type":"join"}
{"nick":"EhevuTov","date":"2013-09-18T23:33:02.994Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-18T23:34:57.106Z","type":"quit"}
{"nick":"dshaw_","date":"2013-09-18T23:42:33.465Z","type":"join"}
{"nick":"jmar777","date":"2013-09-18T23:45:58.764Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-09-18T23:54:27.869Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-09-18T23:59:31.999Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #185 \u00037UNSTABLE\u000f windows-x64 (3/195) smartos-ia32 (2/194) windows-ia32 (3/195) smartos-x64 (2/194) http://jenkins.nodejs.org/job/libuv-master-gyp/185/","date":"2013-09-18T23:59:47.841Z","type":"message"}
