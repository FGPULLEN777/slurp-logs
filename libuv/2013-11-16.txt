{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-11-16T00:00:00.298Z","type":"quit"}
{"nick":"ircretary","date":"2013-11-16T00:00:07.411Z","type":"join"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-11-16T00:00:57.391Z","type":"quit"}
{"nick":"mikeal","date":"2013-11-16T00:01:04.410Z","type":"join"}
{"nick":"paddybyers","date":"2013-11-16T00:02:08.678Z","type":"join"}
{"nick":"othiym23","message":"woop woop woop","date":"2013-11-16T00:03:48.143Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I'm down with that plan","date":"2013-11-16T00:04:20.806Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: coolio.","date":"2013-11-16T00:04:29.926Z","type":"message"}
{"nick":"othiym23","message":"I was writing some asyncListener code last night and found the requirement to have a creation function a little weird","date":"2013-11-16T00:04:42.418Z","type":"message"}
{"nick":"othiym23","message":"I also found about half a dozen things that are awkward with the CLS API, but that's not your problem","date":"2013-11-16T00:05:03.522Z","type":"message"}
{"nick":"trevnorris","message":"i'm trying to get the performance penalty for just placing noop's in each callback spot as close to zero as possible.","date":"2013-11-16T00:05:09.602Z","type":"message"}
{"nick":"trevnorris","message":"yeah. making it required made some things simpler, but that was before I finished AsyncWrap.","date":"2013-11-16T00:05:43.744Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-11-16T00:07:46.670Z","type":"quit"}
{"nick":"othiym23","message":"figuring out how to spread the workload out and where to do shortcutty things is hard","date":"2013-11-16T00:09:56.276Z","type":"message"}
{"nick":"othiym23","message":"I eventually settled on monkeypatching the CLS async listeners to keep from having to add another listener","date":"2013-11-16T00:10:28.902Z","type":"message"}
{"nick":"trevnorris","message":"yeah. that shouldn't be necessary. sorry about that.","date":"2013-11-16T00:10:56.537Z","type":"message"}
{"nick":"othiym23","message":"I think the next optimization is probably to get better about making the asyncListener only active when it needs to be (although then I will need two listeners, because one is the new New Relic error tracer, assuming I can get it to work the way I want it to)","date":"2013-11-16T00:11:09.972Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: you'll have to explain that better. in my implementation they're only active when the user has added one, or one has been set by a running function.","date":"2013-11-16T00:12:09.123Z","type":"message"}
{"nick":"trevnorris","message":"i do some state sharing to check in c++ before making the call to js","date":"2013-11-16T00:12:25.534Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: yeah, that's what I mean -- in my application, I add the listener once and at bootstrap time and then leave it in force for the rest of runtime","date":"2013-11-16T00:12:49.988Z","type":"message"}
{"nick":"kazupon","date":"2013-11-16T00:12:52.562Z","type":"join"}
{"nick":"trevnorris","message":"ah, ok.","date":"2013-11-16T00:13:00.560Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: because I'm relying on the asyncListener seeing all throws to toplevel, I have to leave that part active at all times","date":"2013-11-16T00:13:21.368Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-11-16T00:13:23.422Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23: the issue, and i've wanted to investigate this, is that say a connection to a server won't be captured by the async listener if it's only added to the server","date":"2013-11-16T00:13:26.322Z","type":"message"}
{"nick":"othiym23","message":"but the CLS part only needs to be activated for wrapped async calls","date":"2013-11-16T00:13:34.340Z","type":"message"}
{"nick":"trevnorris","message":"because \"technically\" it's a seperate async event","date":"2013-11-16T00:13:35.242Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I am trying to understand what you mean there, and think I need more context","date":"2013-11-16T00:14:11.132Z","type":"message"}
{"nick":"trevnorris","message":"also, i really really really want to add a way to toggle what you listen for.","date":"2013-11-16T00:14:20.633Z","type":"message"}
{"nick":"trevnorris","message":"ok. so p.addAsync(); net.createServer().listen(); p.removeAsync(); any new connection object won't be listened on","date":"2013-11-16T00:14:49.753Z","type":"message"}
{"nick":"trevnorris","message":"so, say a connection errors, it won't be captured by the async error handler.","date":"2013-11-16T00:14:59.658Z","type":"message"}
{"nick":"octetcloud","reason":"Ping timeout: 268 seconds","date":"2013-11-16T00:15:18.201Z","type":"quit"}
{"nick":"trevnorris","message":"because technically the connection to the server is separate from the server itself.","date":"2013-11-16T00:15:19.209Z","type":"message"}
{"nick":"trevnorris","message":"make sense?","date":"2013-11-16T00:15:20.615Z","type":"message"}
{"nick":"TooTallNate","date":"2013-11-16T00:15:38.743Z","type":"join"}
{"nick":"octetcloud","date":"2013-11-16T00:15:43.859Z","type":"join"}
{"nick":"othiym23","message":"yes","date":"2013-11-16T00:17:04.493Z","type":"message"}
{"nick":"othiym23","message":"this is another case of the issue you run into with EEs all the time","date":"2013-11-16T00:17:20.192Z","type":"message"}
{"nick":"trevnorris","message":"yeah. these are things i'd like to figure out before v0.12","date":"2013-11-16T00:17:52.621Z","type":"message"}
{"nick":"othiym23","message":"i.e. figuring out whether something asynchronous is \"owned\" by an observer, the observed, or something else altogether","date":"2013-11-16T00:17:56.272Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2013-11-16T00:18:19.353Z","type":"quit"}
{"nick":"trevnorris","message":"also, and i'm still not sure how to do this, want to add a c++ api.","date":"2013-11-16T00:18:27.738Z","type":"message"}
{"nick":"trevnorris","message":"it would be more limited in scope (only listen for object creation, etc)","date":"2013-11-16T00:18:42.216Z","type":"message"}
{"nick":"trevnorris","message":"but the idea is that you could create \"groups\" of resources. basically a double linked list.","date":"2013-11-16T00:19:01.560Z","type":"message"}
{"nick":"trevnorris","message":"and if one of them errors then you march through all the others and tell them to stop whatever they're doing and cleanup after themselves.","date":"2013-11-16T00:19:21.257Z","type":"message"}
{"nick":"othiym23","message":"figuring out an efficient way to hook object creation sounds hard","date":"2013-11-16T00:19:33.895Z","type":"message"}
{"nick":"trevnorris","message":"if a dev is good about not affecting global state and keeps things contained, then it should allow a way to properly cleanup after an error.","date":"2013-11-16T00:19:55.197Z","type":"message"}
{"nick":"trevnorris","message":"yeah. i've been thinking about it a lot and still haven't found a good way.","date":"2013-11-16T00:20:11.780Z","type":"message"}
{"nick":"trevnorris","message":"part of this is for a move I want to make in v0.13. adding a super basic low level js api directly on top of the c++ api.","date":"2013-11-16T00:21:25.034Z","type":"message"}
{"nick":"trevnorris","message":"no streams/ee's and whatever. super basic and something all the other apis can build from.","date":"2013-11-16T00:21:51.440Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-11-16T00:24:36.824Z","type":"quit"}
{"nick":"othiym23","message":"trevnorris: do you mean wrt I/O?","date":"2013-11-16T00:24:45.512Z","type":"message"}
{"nick":"othiym23","message":"or what?","date":"2013-11-16T00:24:47.416Z","type":"message"}
{"nick":"othiym23","message":"I mean, the built-in JS stuff is all pretty low-level, and the timers are a pretty straightforward / basic interface to the libuv run loops","date":"2013-11-16T00:25:16.608Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: basically. it's part of my grand plan for https://github.com/joyent/node/issues/6252","date":"2013-11-16T00:25:21.880Z","type":"message"}
{"nick":"trevnorris","message":"so like \"net\", totally wrong. it shouldn't abstract away whether it's a tcp or pipe","date":"2013-11-16T00:26:05.908Z","type":"message"}
{"nick":"trevnorris","message":"it'll also allow doing some crazy stuff like passing c++ methods as callbacks, by passing an External with a pointer to your callback","date":"2013-11-16T00:26:50.458Z","type":"message"}
{"nick":"trevnorris","message":"then it's extracted in c++ and placed on the class instance.","date":"2013-11-16T00:27:04.513Z","type":"message"}
{"nick":"trevnorris","message":"so you can control the business logic in JS, but handle the operations in c++","date":"2013-11-16T00:27:20.597Z","type":"message"}
{"nick":"trevnorris","message":"also make it so class instance methods also work on everything of its type.","date":"2013-11-16T00:28:03.398Z","type":"message"}
{"nick":"trevnorris","message":"e.g. say I want to create a tcp connection, it'd be like: var TCPStream = require('tcp-stream'); var tcpStream = new TCPStream();","date":"2013-11-16T00:29:05.824Z","type":"message"}
{"nick":"trevnorris","message":"but then you can pause _all_ tcp streams with TCPStream.pause();","date":"2013-11-16T00:29:06.001Z","type":"message"}
{"nick":"trevnorris","message":"and get better state information. like (spitballing api here) TCPStream.bytesToBeWritten(); returns the number of bytes waiting to be written out.","date":"2013-11-16T00:29:52.632Z","type":"message"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2013-11-16T00:30:10.073Z","type":"quit"}
{"nick":"trevnorris","message":"it would allow for better control if something bad is happening. say the write queue gets really backed up for some reason, you can pause() all connections and check each instance to see where the clog is happening.","date":"2013-11-16T00:30:45.320Z","type":"message"}
{"nick":"trevnorris","message":"then, say, .destroy() that individual instance and TCPStream.resume() to continue operations as normal.","date":"2013-11-16T00:31:16.180Z","type":"message"}
{"nick":"trevnorris","message":"ok. rant over. i've been thinking about this a lot as you might be able to tell. :P","date":"2013-11-16T00:31:39.802Z","type":"message"}
{"nick":"jmar777","date":"2013-11-16T00:34:37.876Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-11-16T00:34:40.343Z","type":"quit"}
{"nick":"abraxas","date":"2013-11-16T00:34:53.266Z","type":"join"}
{"nick":"othiym23","message":"trevnorris: that almost sounds like a separate project","date":"2013-11-16T00:36:16.450Z","type":"message"}
{"nick":"othiym23","message":"a totally cool project","date":"2013-11-16T00:36:19.165Z","type":"message"}
{"nick":"trevnorris","message":"i've already started. :)","date":"2013-11-16T00:36:38.109Z","type":"message"}
{"nick":"trevnorris","message":"but since it uses most of existing core code i'm hoping we can make the changes in v0.13 and do the same thing as we did w/ domains and async listeners.","date":"2013-11-16T00:37:09.045Z","type":"message"}
{"nick":"abraxas","reason":"Ping timeout: 264 seconds","date":"2013-11-16T00:39:50.749Z","type":"quit"}
{"nick":"trevnorris","message":"alright. off to pick up some dumplings for dinner.","date":"2013-11-16T00:43:02.179Z","type":"message"}
{"nick":"trevnorris","action":"&","date":"2013-11-16T00:43:03.775Z","type":"action"}
{"nick":"LOUDBOT","message":"\"THAT IS MORALLY EQUIVALENT TO COLD-BLOODED HOMICIDE\"","date":"2013-11-16T00:43:04.331Z","type":"message"}
{"nick":"mikeal","date":"2013-11-16T00:49:16.006Z","type":"join"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-11-16T00:49:32.429Z","type":"quit"}
{"nick":"c4milo_","date":"2013-11-16T00:50:27.985Z","type":"join"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2013-11-16T00:52:28.001Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-11-16T00:55:52.491Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 248 seconds","date":"2013-11-16T00:56:05.647Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-11-16T01:00:00.307Z","type":"quit"}
{"nick":"kevinswiber","date":"2013-11-16T01:06:05.503Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-11-16T01:13:11.452Z","type":"quit"}
{"nick":"kazupon","date":"2013-11-16T01:13:53.937Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-11-16T01:17:32.517Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-11-16T01:17:40.699Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-11-16T01:25:53.987Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-11-16T01:28:22.837Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-11-16T01:33:42.468Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 260 seconds","date":"2013-11-16T01:47:15.781Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-11-16T01:47:53.392Z","type":"join"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2013-11-16T01:52:30.909Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-11-16T01:53:13.888Z","type":"join"}
{"nick":"c4milo_","reason":"Remote host closed the connection","date":"2013-11-16T01:54:32.581Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-11-16T02:00:13.826Z","type":"quit"}
{"nick":"kazupon","date":"2013-11-16T02:01:18.302Z","type":"join"}
{"nick":"indexzero","date":"2013-11-16T02:02:50.311Z","type":"join"}
{"nick":"c4milo","date":"2013-11-16T02:16:21.791Z","type":"join"}
{"nick":"abraxas","date":"2013-11-16T02:17:52.290Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-11-16T02:19:05.230Z","type":"quit"}
{"nick":"abraxas","reason":"Ping timeout: 260 seconds","date":"2013-11-16T02:22:15.777Z","type":"quit"}
{"nick":"abraxas","date":"2013-11-16T02:27:56.963Z","type":"join"}
{"nick":"wolfeidau","date":"2013-11-16T02:30:06.623Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 245 seconds","date":"2013-11-16T02:34:35.185Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-11-16T02:45:21.745Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-11-16T02:51:21.626Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-11-16T02:58:47.066Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-11-16T02:59:18.974Z","type":"quit"}
{"nick":"kazupon","date":"2013-11-16T02:59:46.829Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-11-16T03:04:26.712Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-11-16T03:30:50.970Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-11-16T03:33:26.909Z","type":"quit"}
{"nick":"st_luke","date":"2013-11-16T03:52:27.771Z","type":"join"}
{"nick":"wolfeidau","date":"2013-11-16T03:58:09.928Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-11-16T04:18:03.499Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-11-16T04:18:25.938Z","type":"join"}
{"nick":"inolen","date":"2013-11-16T04:21:59.705Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-11-16T04:49:30.711Z","type":"nick"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-11-16T05:07:14.215Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-11-16T05:13:55.496Z","type":"quit"}
{"nick":"mikeal","date":"2013-11-16T06:06:15.872Z","type":"join"}
{"nick":"c4milo","date":"2013-11-16T06:09:50.000Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 264 seconds","date":"2013-11-16T06:11:02.703Z","type":"quit"}
{"nick":"mikeal","date":"2013-11-16T06:12:40.288Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2013-11-16T06:14:53.346Z","type":"quit"}
{"nick":"zz_karupanerura","new_nick":"karupanerura","date":"2013-11-16T06:18:20.911Z","type":"nick"}
{"nick":"karupanerura","new_nick":"zz_karupanerura","date":"2013-11-16T06:19:12.729Z","type":"nick"}
{"nick":"wolfeidau","date":"2013-11-16T06:26:16.067Z","type":"join"}
{"nick":"abraxas","date":"2013-11-16T06:31:59.615Z","type":"join"}
{"nick":"rendar","date":"2013-11-16T06:33:00.194Z","type":"join"}
{"nick":"dshaw_","date":"2013-11-16T06:33:46.463Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 245 seconds","date":"2013-11-16T06:36:26.131Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-11-16T06:52:35.586Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-11-16T06:57:18.410Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-11-16T07:00:27.161Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 245 seconds","date":"2013-11-16T07:00:33.326Z","type":"quit"}
{"nick":"dshaw_","date":"2013-11-16T07:17:31.720Z","type":"join"}
{"nick":"paddybyers","date":"2013-11-16T07:20:34.697Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 272 seconds","date":"2013-11-16T07:22:33.708Z","type":"quit"}
{"nick":"kazupon","date":"2013-11-16T07:27:37.832Z","type":"join"}
{"nick":"dshaw_","date":"2013-11-16T07:56:16.732Z","type":"join"}
{"nick":"c4milo","date":"2013-11-16T07:58:05.297Z","type":"join"}
{"nick":"zz_karupanerura","reason":"Ping timeout: 256 seconds","date":"2013-11-16T07:59:09.466Z","type":"quit"}
{"nick":"zz_karupanerura","date":"2013-11-16T07:59:16.156Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-11-16T07:59:41.155Z","type":"quit"}
{"nick":"zz_karupanerura","new_nick":"karupanerura","date":"2013-11-16T07:59:52.234Z","type":"nick"}
