{"nick":"ircretary","reason":"Remote host closed the connection","date":"2015-01-29T00:00:01.258Z","type":"quit"}
{"nick":"ircretary","date":"2015-01-29T00:00:09.245Z","type":"join"}
{"nick":"chris_99","reason":"Quit: Ex-Chat","date":"2015-01-29T00:05:43.889Z","type":"quit"}
{"nick":"thlorenz","date":"2015-01-29T00:08:40.066Z","type":"join"}
{"nick":"Fishrock123","date":"2015-01-29T00:19:37.318Z","type":"join"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2015-01-29T00:22:10.811Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 276 seconds","date":"2015-01-29T00:22:39.056Z","type":"quit"}
{"nick":"jasnell","date":"2015-01-29T00:23:06.939Z","type":"join"}
{"nick":"wrl","date":"2015-01-29T00:23:52.679Z","type":"join"}
{"nick":"seldo","date":"2015-01-29T00:24:03.859Z","type":"join"}
{"nick":"wrl","message":"hey, here's a question: i currently have some IPC messaging code that incrementally reads and writes messages from an FD","date":"2015-01-29T00:24:11.234Z","type":"message"}
{"nick":"Fishrock123","reason":"Ping timeout: 252 seconds","date":"2015-01-29T00:24:21.348Z","type":"quit"}
{"nick":"wrl","message":"it reads the header and then decides how much more it needs to read past that, depending on the message type","date":"2015-01-29T00:24:29.939Z","type":"message"}
{"nick":"wrl","message":"is there an easy way to accomplish this in libuv?","date":"2015-01-29T00:24:36.717Z","type":"message"}
{"nick":"wrl","message":"i'm looking at the whole uv_stream stuff and i'm not seeing anything super straightforward -- seems to me that just getting a chunk of data read from a pipe in the read_cb would be complicated to process","date":"2015-01-29T00:25:29.173Z","type":"message"}
{"nick":"wrl","message":"i mean, it would be potentially as easy as rewriting my IPC code to deal with having a chunk of data instead of reading it incrementally","date":"2015-01-29T00:26:12.411Z","type":"message"}
{"nick":"wrl","message":"but even with large block sizes, i'm worried about messages getting cut off, and needing to store state between invocations of the read_cb","date":"2015-01-29T00:26:42.755Z","type":"message"}
{"nick":"seldo","reason":"Ping timeout: 264 seconds","date":"2015-01-29T00:28:49.805Z","type":"quit"}
{"nick":"piscisaureus","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2015-01-29T00:36:55.933Z","type":"quit"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2015-01-29T00:38:25.973Z","type":"quit"}
{"nick":"thlorenz","date":"2015-01-29T00:40:07.574Z","type":"join"}
{"nick":"iarna","date":"2015-01-29T00:45:50.253Z","type":"join"}
{"nick":"dshaw_","date":"2015-01-29T00:46:43.347Z","type":"join"}
{"nick":"ijroth","date":"2015-01-29T00:47:51.036Z","type":"join"}
{"nick":"dap_1","date":"2015-01-29T00:48:29.894Z","type":"join"}
{"nick":"dap_","reason":"Read error: Connection reset by peer","date":"2015-01-29T00:48:30.214Z","type":"quit"}
{"nick":"dap_","date":"2015-01-29T00:53:47.899Z","type":"join"}
{"nick":"dap_1","reason":"Read error: Connection reset by peer","date":"2015-01-29T00:53:48.097Z","type":"quit"}
{"nick":"Fishrock123","date":"2015-01-29T01:02:38.258Z","type":"join"}
{"nick":"importantshock","reason":"Remote host closed the connection","date":"2015-01-29T01:02:53.353Z","type":"quit"}
{"nick":"importantshock","date":"2015-01-29T01:03:28.066Z","type":"join"}
{"nick":"importantshock","reason":"Ping timeout: 245 seconds","date":"2015-01-29T01:07:47.592Z","type":"quit"}
{"nick":"dap_","reason":"Read error: Connection reset by peer","date":"2015-01-29T01:08:25.097Z","type":"quit"}
{"nick":"dap_","date":"2015-01-29T01:08:38.848Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2015-01-29T01:13:06.675Z","type":"quit"}
{"nick":"jasnell","date":"2015-01-29T01:13:38.331Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 252 seconds","date":"2015-01-29T01:17:53.311Z","type":"quit"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2015-01-29T01:21:11.787Z","type":"quit"}
{"nick":"Ralith","reason":"Ping timeout: 245 seconds","date":"2015-01-29T01:24:27.597Z","type":"quit"}
{"nick":"qard","reason":"Quit: leaving","date":"2015-01-29T01:28:44.353Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 245 seconds","date":"2015-01-29T01:31:07.756Z","type":"quit"}
{"nick":"a_le","date":"2015-01-29T01:35:48.485Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2015-01-29T01:36:54.101Z","type":"quit"}
{"nick":"ijroth","date":"2015-01-29T01:38:32.820Z","type":"join"}
{"nick":"Ralith","date":"2015-01-29T01:44:40.982Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2015-01-29T01:58:56.142Z","type":"quit"}
{"nick":"ijroth","date":"2015-01-29T02:03:15.279Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2015-01-29T02:20:29.708Z","type":"quit"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2015-01-29T02:20:47.399Z","type":"quit"}
{"nick":"ijroth","date":"2015-01-29T02:29:50.503Z","type":"join"}
{"nick":"jasnell","date":"2015-01-29T02:29:55.540Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 245 seconds","date":"2015-01-29T02:33:59.541Z","type":"quit"}
{"nick":"seldo","date":"2015-01-29T02:36:45.261Z","type":"join"}
{"nick":"jasnell","date":"2015-01-29T02:43:17.318Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2015-01-29T02:43:54.886Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-01-29T02:47:23.327Z","type":"quit"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2015-01-29T02:59:21.237Z","type":"quit"}
{"nick":"jasnell","reason":"Ping timeout: 252 seconds","date":"2015-01-29T03:00:11.343Z","type":"quit"}
{"nick":"seldo","reason":"Remote host closed the connection","date":"2015-01-29T03:02:34.090Z","type":"quit"}
{"nick":"SergeiRND","date":"2015-01-29T03:08:50.895Z","type":"join"}
{"nick":"jasnell","date":"2015-01-29T03:12:17.540Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2015-01-29T03:30:57.314Z","type":"quit"}
{"nick":"brson","date":"2015-01-29T03:31:05.113Z","type":"join"}
{"nick":"SergeiRND","reason":"Quit: Leaving.","date":"2015-01-29T03:31:29.030Z","type":"quit"}
{"nick":"brson","reason":"Client Quit","date":"2015-01-29T03:33:40.099Z","type":"quit"}
{"nick":"brson","date":"2015-01-29T03:33:48.079Z","type":"join"}
{"nick":"brson","reason":"Client Quit","date":"2015-01-29T03:34:40.382Z","type":"quit"}
{"nick":"ijroth","date":"2015-01-29T03:38:18.597Z","type":"join"}
{"nick":"ijroth","reason":"Client Quit","date":"2015-01-29T03:42:06.832Z","type":"quit"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2015-01-29T03:42:38.116Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-01-29T03:46:50.691Z","type":"quit"}
{"nick":"seldo","date":"2015-01-29T03:53:42.492Z","type":"join"}
{"nick":"a_le","date":"2015-01-29T03:59:11.928Z","type":"join"}
{"nick":"Left_Turn","reason":"Read error: Connection reset by peer","date":"2015-01-29T04:02:49.090Z","type":"quit"}
{"nick":"a_le","reason":"Ping timeout: 246 seconds","date":"2015-01-29T04:03:29.907Z","type":"quit"}
{"nick":"seldo","reason":"Remote host closed the connection","date":"2015-01-29T04:04:04.416Z","type":"quit"}
{"nick":"a_le","date":"2015-01-29T04:06:05.957Z","type":"join"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2015-01-29T04:10:09.103Z","type":"quit"}
{"nick":"jasnell","date":"2015-01-29T04:12:07.465Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2015-01-29T04:16:29.417Z","type":"quit"}
{"nick":"seldo","date":"2015-01-29T04:19:07.079Z","type":"join"}
{"nick":"thlorenz","date":"2015-01-29T04:23:04.084Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-01-29T04:25:15.540Z","type":"quit"}
{"nick":"Fishrock123","reason":"Read error: Connection reset by peer","date":"2015-01-29T04:27:56.274Z","type":"quit"}
{"nick":"jasnell","reason":"Read error: Connection reset by peer","date":"2015-01-29T04:28:37.916Z","type":"quit"}
{"nick":"jasnell","date":"2015-01-29T04:29:17.829Z","type":"join"}
{"nick":"dshaw_","date":"2015-01-29T04:30:03.266Z","type":"join"}
{"nick":"rmg","date":"2015-01-29T04:30:56.982Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2015-01-29T04:38:02.177Z","type":"quit"}
{"nick":"az7ar_away","reason":"Ping timeout: 264 seconds","date":"2015-01-29T04:46:15.841Z","type":"quit"}
{"nick":"rkowalski","reason":"Ping timeout: 264 seconds","date":"2015-01-29T04:46:16.043Z","type":"quit"}
{"nick":"rkowalski","date":"2015-01-29T04:50:04.848Z","type":"join"}
{"nick":"a_le","reason":"Ping timeout: 246 seconds","date":"2015-01-29T04:50:23.912Z","type":"quit"}
{"nick":"az7ar_away","date":"2015-01-29T04:54:47.641Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 256 seconds","date":"2015-01-29T04:54:51.312Z","type":"quit"}
{"nick":"dshaw_","date":"2015-01-29T04:59:44.121Z","type":"join"}
{"nick":"sandr8","reason":"Read error: Connection timed out","date":"2015-01-29T05:02:22.559Z","type":"quit"}
{"nick":"seldo","date":"2015-01-29T05:10:22.960Z","type":"quit"}
{"nick":"a_le","date":"2015-01-29T05:16:02.508Z","type":"join"}
{"nick":"AvianFlu","reason":"Quit: Leaving","date":"2015-01-29T05:21:27.852Z","type":"quit"}
{"nick":"sandr8","date":"2015-01-29T05:22:15.009Z","type":"join"}
{"nick":"thlorenz","date":"2015-01-29T05:26:25.000Z","type":"join"}
{"nick":"brson","date":"2015-01-29T05:29:52.290Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 264 seconds","date":"2015-01-29T05:31:50.021Z","type":"quit"}
{"nick":"jgi","date":"2015-01-29T06:07:14.834Z","type":"join"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2015-01-29T06:18:29.674Z","type":"quit"}
{"nick":"iarna","date":"2015-01-29T06:25:45.069Z","type":"join"}
{"nick":"thlorenz","date":"2015-01-29T06:27:37.620Z","type":"join"}
{"nick":"iarna","reason":"Read error: Connection reset by peer","date":"2015-01-29T06:30:23.892Z","type":"quit"}
{"nick":"iarna","date":"2015-01-29T06:30:53.241Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 245 seconds","date":"2015-01-29T06:31:54.545Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2015-01-29T06:37:42.576Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-01-29T07:05:44.170Z","type":"quit"}
{"nick":"SergeiRND","date":"2015-01-29T07:08:02.895Z","type":"join"}
{"nick":"iarna","reason":"Ping timeout: 256 seconds","date":"2015-01-29T07:09:09.261Z","type":"quit"}
{"nick":"Rolinh","reason":"Quit: WeeChat 1.1.1","date":"2015-01-29T07:26:43.411Z","type":"quit"}
{"nick":"thlorenz","date":"2015-01-29T07:28:22.285Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 244 seconds","date":"2015-01-29T07:32:51.195Z","type":"quit"}
{"nick":"bajtos","date":"2015-01-29T07:37:19.323Z","type":"join"}
{"nick":"Rolinh","date":"2015-01-29T07:38:18.545Z","type":"join"}
{"nick":"jasnell","date":"2015-01-29T07:38:54.894Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 240 seconds","date":"2015-01-29T07:43:22.896Z","type":"quit"}
{"nick":"Guest76317","new_nick":"bengl","date":"2015-01-29T07:57:04.483Z","type":"nick"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2015-01-29T08:17:32.344Z","type":"quit"}
{"nick":"bajtos","date":"2015-01-29T08:19:56.056Z","type":"join"}
{"nick":"saghul","message":"wrl: you can shorten the data you get passing a lower value to aloc_cb","date":"2015-01-29T08:22:34.378Z","type":"message"}
{"nick":"ijroth","date":"2015-01-29T08:24:12.105Z","type":"join"}
{"nick":"thlorenz","date":"2015-01-29T08:29:16.597Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2015-01-29T08:30:25.704Z","type":"quit"}
{"nick":"bajtos","date":"2015-01-29T08:31:45.396Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 245 seconds","date":"2015-01-29T08:33:37.597Z","type":"quit"}
{"nick":"normanm","message":"hi there... is it possible to let libuv to run some function in the eventloop ?","date":"2015-01-29T08:39:05.502Z","type":"message"}
{"nick":"brucem","message":"normanm: like an idle callback?","date":"2015-01-29T08:39:51.045Z","type":"message"}
{"nick":"normanm","message":"so like if its blocking and waiting for epoll to wakup submit something that needs to get executed and it automatically unblock epoll_wait and execute it ","date":"2015-01-29T08:39:53.455Z","type":"message"}
{"nick":"normanm","message":"brucem, like what you would for example do eventfd and epoll_wait","date":"2015-01-29T08:40:14.418Z","type":"message"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2015-01-29T08:40:32.394Z","type":"quit"}
{"nick":"saghul","message":"normanm: uv_async_send will wakeup the loop","date":"2015-01-29T08:41:29.208Z","type":"message"}
{"nick":"saghul","message":"then you could run your code in a prepare or check handle","date":"2015-01-29T08:41:49.654Z","type":"message"}
{"nick":"normanm","message":"awesome will try","date":"2015-01-29T08:42:12.208Z","type":"message"}
{"nick":"normanm","message":"thanks","date":"2015-01-29T08:42:13.805Z","type":"message"}
{"nick":"normanm","message":"btw anyone is aware of a benchmark comparing libuv against libev ?","date":"2015-01-29T08:54:52.790Z","type":"message"}
{"nick":"saghul","message":"normanm: compare how? libev doesn't have an abstraction equivalent to uv_stream_t","date":"2015-01-29T08:59:08.613Z","type":"message"}
{"nick":"normanm","message":"just compare for example an echo server written in both","date":"2015-01-29T08:59:29.059Z","type":"message"}
{"nick":"normanm","message":"in terms of throughput/latency","date":"2015-01-29T08:59:33.613Z","type":"message"}
{"nick":"normanm","message":"I know that the abstraction is different but still it's an event io lib","date":"2015-01-29T08:59:51.109Z","type":"message"}
{"nick":"saghul","message":"but it wouldn't be an apples to apples comparison","date":"2015-01-29T09:00:06.436Z","type":"message"}
{"nick":"normanm","message":"you mean apples to organges ?","date":"2015-01-29T09:00:19.078Z","type":"message"}
{"nick":"saghul","message":"I mean, if you compare uv_stream_t vs ev_io that's not the same abstraction","date":"2015-01-29T09:00:51.217Z","type":"message"}
{"nick":"normanm","message":"well not sure I would call it like that... the scope is a bit different but still both are frameworks that allow you to write network servers / clients","date":"2015-01-29T09:00:53.003Z","type":"message"}
{"nick":"saghul","message":"sure","date":"2015-01-29T09:01:03.210Z","type":"message"}
{"nick":"normanm","message":"sure it's not the same abstraction but still it's about sending/receving bytes","date":"2015-01-29T09:01:18.650Z","type":"message"}
{"nick":"saghul","message":"I'm not aware of any benchmarks though","date":"2015-01-29T09:01:19.486Z","type":"message"}
{"nick":"brucem","message":"normanm: Given what you work on ... have you compared libuv with Netty4?","date":"2015-01-29T09:01:22.010Z","type":"message"}
{"nick":"normanm","message":"brucem, actually what I'm currently prototype is a jni based transport using libuv ","date":"2015-01-29T09:01:52.776Z","type":"message"}
{"nick":"brucem","message":"ah, interesting!","date":"2015-01-29T09:02:12.321Z","type":"message"}
{"nick":"normanm","message":"brucem, ;)","date":"2015-01-29T09:02:16.035Z","type":"message"}
{"nick":"normanm","message":"brucem, I have written an pure epoll based transport using jni and put netty on top of it","date":"2015-01-29T09:02:43.570Z","type":"message"}
{"nick":"normanm","message":"but wanted to see how this compares with just using libuv under the hood ","date":"2015-01-29T09:02:54.821Z","type":"message"}
{"nick":"normanm","message":"as this would also work on non linux etc","date":"2015-01-29T09:03:04.895Z","type":"message"}
{"nick":"normanm","message":"so just reading up on libuv a bit to get a better feeling about the api and how I could fit it in best","date":"2015-01-29T09:03:42.124Z","type":"message"}
{"nick":"brucem","message":"normanm: NIO had some bad locking behavior that you wanted to get around, IIRC? or was it allocations?","date":"2015-01-29T09:03:52.366Z","type":"message"}
{"nick":"normanm","message":"brucem, you mean the java nio stuff ?","date":"2015-01-29T09:04:06.268Z","type":"message"}
{"nick":"brucem","message":"yeah","date":"2015-01-29T09:04:12.562Z","type":"message"}
{"nick":"brucem","message":"Clearly you're unhappy with something if you're going to this effort .. and I remember reading something about unhappiness with NIO.","date":"2015-01-29T09:04:40.538Z","type":"message"}
{"nick":"normanm","message":"multiple reasons... java nio produce too much objects and so GC pressure. Also because of how the threading works in netty we not need many guards that java.nio uses ","date":"2015-01-29T09:05:11.425Z","type":"message"}
{"nick":"normanm","message":"also how direct buffers are managed by java nio is not really good imho","date":"2015-01-29T09:05:46.686Z","type":"message"}
{"nick":"normanm","message":"brucem, also I don't think it should be to hard to do this... like I said I wrote a pure epoll transport via jni before and it was not too hard either. Not saying that jni is fun but well","date":"2015-01-29T09:06:20.078Z","type":"message"}
{"nick":"brucem","message":"normanm: It'll be interesting to hear how this goes. :)","date":"2015-01-29T09:10:43.267Z","type":"message"}
{"nick":"normanm","message":"brucem, will report back for sure","date":"2015-01-29T09:10:49.696Z","type":"message"}
{"nick":"normanm","message":"another question as I'm not able to find it in the api docs. ","date":"2015-01-29T09:11:09.126Z","type":"message"}
{"nick":"normanm","message":"is there a way to tell how long epoll_wait or similar calls should block before automatically unblock and call the idle callback ?","date":"2015-01-29T09:11:38.780Z","type":"message"}
{"nick":"brucem","message":"rather than a 0 timeout like now?","date":"2015-01-29T09:11:58.957Z","type":"message"}
{"nick":"normanm","message":"yes","date":"2015-01-29T09:12:03.472Z","type":"message"}
{"nick":"brucem","message":"doesn't look like it from the source.","date":"2015-01-29T09:14:42.194Z","type":"message"}
{"nick":"normanm","message":"bummer","date":"2015-01-29T09:14:49.106Z","type":"message"}
{"nick":"brucem","message":"https://github.com/libuv/libuv/blob/f2bb8d394c06d06ee45e884600466321455751b6/src/unix/core.c#L320 and https://github.com/libuv/libuv/blob/f2bb8d394c06d06ee45e884600466321455751b6/src/unix/timer.c#L129","date":"2015-01-29T09:15:33.213Z","type":"message"}
{"nick":"normanm","message":"seems like I could just use a timer for my use-case","date":"2015-01-29T09:17:22.333Z","type":"message"}
{"nick":"normanm","message":"at the moment we allow to schedule tasks which are executed in the future. we do this by calculate the max time epoll_wait is allowed to block and then just pick them up once it unblocks","date":"2015-01-29T09:18:16.432Z","type":"message"}
{"nick":"normanm","message":"so I guess I could create a timer handle for this","date":"2015-01-29T09:18:52.352Z","type":"message"}
{"nick":"brucem","message":"or implement your timers using uv_timer_t","date":"2015-01-29T09:18:53.406Z","type":"message"}
{"nick":"normanm","message":"yep","date":"2015-01-29T09:18:58.008Z","type":"message"}
{"nick":"normanm","message":"that is what I was refer to","date":"2015-01-29T09:19:06.749Z","type":"message"}
{"nick":"normanm","message":"I'm just a bit concerned about the overhead which is involved from calling back from jni code into java","date":"2015-01-29T09:19:27.934Z","type":"message"}
{"nick":"normanm","message":"but I guess the only way to find out is to actual doing a poc","date":"2015-01-29T09:19:39.054Z","type":"message"}
{"nick":"chris_99","date":"2015-01-29T09:20:28.434Z","type":"join"}
{"nick":"normanm","message":"brucem thanks for all the help btw","date":"2015-01-29T09:20:54.215Z","type":"message"}
{"nick":"brucem","message":"normanm: np!","date":"2015-01-29T09:22:20.194Z","type":"message"}
{"nick":"brucem","message":"normanm: I keep arguing with myself over how much code in the Dylan system libs I want to replace with libuv or not ... so this is interesting to me.","date":"2015-01-29T09:23:09.387Z","type":"message"}
{"nick":"roxlu","date":"2015-01-29T09:24:21.104Z","type":"join"}
{"nick":"thlorenz","date":"2015-01-29T09:29:58.293Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2015-01-29T09:33:19.440Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 252 seconds","date":"2015-01-29T09:34:21.322Z","type":"quit"}
{"nick":"rmg","date":"2015-01-29T09:41:05.375Z","type":"join"}
{"nick":"SergeiRND","reason":"Quit: Leaving.","date":"2015-01-29T09:43:35.521Z","type":"quit"}
{"nick":"rmg","reason":"Ping timeout: 264 seconds","date":"2015-01-29T09:46:14.211Z","type":"quit"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2015-01-29T09:52:45.082Z","type":"quit"}
{"nick":"iarna","date":"2015-01-29T10:11:15.902Z","type":"join"}
{"nick":"iarna","reason":"Ping timeout: 240 seconds","date":"2015-01-29T10:15:22.895Z","type":"quit"}
{"nick":"a_le","date":"2015-01-29T10:19:50.334Z","type":"join"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2015-01-29T10:30:30.734Z","type":"quit"}
{"nick":"thlorenz","date":"2015-01-29T10:30:48.102Z","type":"join"}
{"nick":"kkaefer","date":"2015-01-29T10:31:09.827Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 276 seconds","date":"2015-01-29T10:35:36.064Z","type":"quit"}
{"nick":"saghul","message":"normanm: you cannot currently control that, it's based on the closest timer, the presence of idle handles, etc","date":"2015-01-29T10:35:52.058Z","type":"message"}
{"nick":"normanm","message":"yep... brucem pointed me to the right code","date":"2015-01-29T10:36:25.264Z","type":"message"}
{"nick":"normanm","message":"thanks","date":"2015-01-29T10:36:26.591Z","type":"message"}
{"nick":"saghul","message":"normanm: it's described here: http://docs.libuv.org/en/v1.x/design.html#the-i-o-loop","date":"2015-01-29T10:36:38.106Z","type":"message"}
{"nick":"saghul","message":"oh, yeah, code talks :-)","date":"2015-01-29T10:37:08.329Z","type":"message"}
{"nick":"normanm","message":"yep","date":"2015-01-29T10:38:00.062Z","type":"message"}
{"nick":"normanm","message":":)","date":"2015-01-29T10:38:02.155Z","type":"message"}
{"nick":"Left_Turn","date":"2015-01-29T10:55:34.184Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2015-01-29T11:14:02.030Z","type":"quit"}
{"nick":"seishun","date":"2015-01-29T11:17:05.203Z","type":"join"}
{"nick":"normanm","message":"saghul, what would be the best way to call one task everytime the eventloop finished processing io ?","date":"2015-01-29T11:19:39.694Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2015-01-29T11:20:19.868Z","type":"quit"}
{"nick":"saghul","message":"normanm: run it in a check handle, those chandles run right after i/o","date":"2015-01-29T11:24:14.899Z","type":"message"}
{"nick":"normanm","message":"thanks!","date":"2015-01-29T11:24:37.743Z","type":"message"}
{"nick":"thlorenz","date":"2015-01-29T11:31:36.291Z","type":"join"}
{"nick":"tarruda","date":"2015-01-29T11:35:05.089Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 256 seconds","date":"2015-01-29T11:36:03.250Z","type":"quit"}
{"nick":"bajtos","date":"2015-01-29T11:41:53.477Z","type":"join"}
{"nick":"SergeiRND","date":"2015-01-29T11:44:22.908Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2015-01-29T12:28:05.814Z","type":"quit"}
{"nick":"thlorenz","date":"2015-01-29T12:32:25.964Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 246 seconds","date":"2015-01-29T12:36:35.897Z","type":"quit"}
{"nick":"mmalecki","reason":"Ping timeout: 272 seconds","date":"2015-01-29T12:53:40.355Z","type":"quit"}
{"nick":"gnostication","reason":"Read error: Connection reset by peer","date":"2015-01-29T12:56:38.135Z","type":"quit"}
{"nick":"rmg","date":"2015-01-29T12:57:51.909Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 255 seconds","date":"2015-01-29T13:02:13.450Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2015-01-29T13:11:55.194Z","type":"quit"}
{"nick":"thlorenz","date":"2015-01-29T13:33:15.938Z","type":"join"}
{"nick":"wrl","message":"saghul: yeah, i thought about that","date":"2015-01-29T13:37:05.343Z","type":"message"}
{"nick":"wrl","message":"i would ideally like to not have to suddenly write like","date":"2015-01-29T13:37:13.791Z","type":"message"}
{"nick":"thlorenz","reason":"Ping timeout: 240 seconds","date":"2015-01-29T13:37:22.895Z","type":"quit"}
{"nick":"wrl","message":"or rather i would like to not double the LOC count in my IPC code just to deal with libuv","date":"2015-01-29T13:37:31.399Z","type":"message"}
{"nick":"wrl","message":"honestly what i'm thinking i might do is just have my alloc_cb return 0, and then in the sucessive read_cb with the error, just get the file descriptor from the uv_stream_t and read() on that","date":"2015-01-29T13:38:48.432Z","type":"message"}
{"nick":"tarruda","reason":"Quit: WeeChat 1.0.1","date":"2015-01-29T13:52:40.248Z","type":"quit"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2015-01-29T14:03:00.644Z","type":"nick"}
{"nick":"thlorenz","date":"2015-01-29T14:34:10.584Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 245 seconds","date":"2015-01-29T14:38:34.540Z","type":"quit"}
{"nick":"Fishrock123","date":"2015-01-29T14:42:58.000Z","type":"join"}
{"nick":"thlorenz","date":"2015-01-29T14:43:23.303Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-01-29T14:45:07.308Z","type":"quit"}
{"nick":"SergeiRND","reason":"Quit: Leaving.","date":"2015-01-29T14:47:26.458Z","type":"quit"}
{"nick":"thlorenz","date":"2015-01-29T14:47:36.884Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-01-29T14:49:10.871Z","type":"quit"}
{"nick":"piscisaureus","date":"2015-01-29T15:07:11.319Z","type":"join"}
{"nick":"saghul","message":"wrl: then maybe you are better off using a poll handle","date":"2015-01-29T15:10:55.121Z","type":"message"}
{"nick":"saghul","message":"if the alloc_cb gets a 0 length it won't even attempt a read, you'll get ENOBUFS","date":"2015-01-29T15:11:26.434Z","type":"message"}
{"nick":"saghul","message":"and the stream might not be readable","date":"2015-01-29T15:11:34.538Z","type":"message"}
{"nick":"thlorenz","date":"2015-01-29T15:13:52.931Z","type":"join"}
{"nick":"AvianFlu","date":"2015-01-29T15:15:44.102Z","type":"join"}
{"nick":"tarruda","date":"2015-01-29T15:34:30.312Z","type":"join"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2015-01-29T15:39:19.952Z","type":"quit"}
{"nick":"wrl","message":"saghul: oh, good call.","date":"2015-01-29T15:45:32.825Z","type":"message"}
{"nick":"Fishrock123","date":"2015-01-29T15:45:39.485Z","type":"join"}
{"nick":"jasnell","date":"2015-01-29T15:48:37.785Z","type":"join"}
{"nick":"jasnell_","date":"2015-01-29T15:50:12.203Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 264 seconds","date":"2015-01-29T15:53:27.886Z","type":"quit"}
{"nick":"jasnell","date":"2015-01-29T15:53:38.214Z","type":"join"}
{"nick":"jasnell__","date":"2015-01-29T15:54:53.042Z","type":"join"}
{"nick":"jasnel___","date":"2015-01-29T15:56:18.033Z","type":"join"}
{"nick":"jasnell_","reason":"Ping timeout: 244 seconds","date":"2015-01-29T15:56:36.281Z","type":"quit"}
{"nick":"jasnell","reason":"Ping timeout: 244 seconds","date":"2015-01-29T15:58:09.281Z","type":"quit"}
{"nick":"jasnell__","reason":"Ping timeout: 276 seconds","date":"2015-01-29T15:59:57.050Z","type":"quit"}
