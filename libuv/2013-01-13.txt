{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-01-13T00:00:00.958Z","type":"quit"}
{"nick":"ircretary","date":"2013-01-13T00:00:07.563Z","type":"join"}
{"nick":"indexzero","date":"2013-01-13T00:02:45.241Z","type":"join"}
{"nick":"sblom","reason":"Quit: leaving","date":"2013-01-13T00:14:47.633Z","type":"quit"}
{"nick":"bnoordhuis","message":"those raspberry pis are a bloody scam","date":"2013-01-13T00:16:08.577Z","type":"message"}
{"nick":"bnoordhuis","message":"buy one anywhere in the world: EUR 35","date":"2013-01-13T00:16:17.655Z","type":"message"}
{"nick":"bnoordhuis","message":"buy one in mainland europe: EUR 45","date":"2013-01-13T00:16:26.425Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00028e3e60f\u0002 : linux: only pack struct uv__epoll_event on x86_64  On i386, it does not n (+1 more commits) - http://git.io/_NZ-_g","date":"2013-01-13T00:29:20.119Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002e4f2a14\u0002 : deps: upgrade libuv to 8e3e60f - http://git.io/qukH9Q","date":"2013-01-13T00:29:57.133Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-01-13T00:30:05.980Z","type":"quit"}
{"nick":"travis-ci","date":"2013-01-13T00:31:33.822Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#1018 (master - 8e3e60f : Ben Noordhuis): The build is still failing.","date":"2013-01-13T00:31:33.958Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/9aab5d483794...8e3e60ffbf20","date":"2013-01-13T00:31:33.958Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/4116785","date":"2013-01-13T00:31:33.958Z","type":"message"}
{"nick":"travis-ci","date":"2013-01-13T00:31:33.958Z","type":"part"}
{"nick":"tomshreds","date":"2013-01-13T00:35:46.831Z","type":"join"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-01-13T00:43:07.389Z","type":"quit"}
{"nick":"mikeal","date":"2013-01-13T00:43:22.484Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-01-13T00:44:18.874Z","type":"quit"}
{"nick":"Raynos","message":"How do I test for performance regressions for bug fixes / PRs ?","date":"2013-01-13T00:53:10.246Z","type":"message"}
{"nick":"mikeal","date":"2013-01-13T00:57:06.936Z","type":"join"}
{"nick":"jmar777","date":"2013-01-13T00:57:08.029Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-01-13T01:03:40.802Z","type":"quit"}
{"nick":"tomshreds","reason":"Quit: Linkinus - http://linkinus.com","date":"2013-01-13T01:05:24.397Z","type":"quit"}
{"nick":"isaacs","message":"bnoordhuis: you around?","date":"2013-01-13T01:08:59.501Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: yes","date":"2013-01-13T01:09:02.928Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: check this out: https://gist.github.com/4520094","date":"2013-01-13T01:09:04.331Z","type":"message"}
{"nick":"bnoordhuis","message":"Raynos: make test?","date":"2013-01-13T01:09:19.070Z","type":"message"}
{"nick":"bnoordhuis","message":"Raynos: or better, python tools/test.py --mode=debug,release simple message pummel","date":"2013-01-13T01:09:33.848Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: basically, streams2 is slightly faster than streams1 js + master's libuv + master's v8","date":"2013-01-13T01:09:46.020Z","type":"message"}
{"nick":"Raynos","message":"bnoordhuis: so if the tests take longer that count as a performance regression","date":"2013-01-13T01:09:50.088Z","type":"message"}
{"nick":"isaacs","message":"Raynos: the benchmark that matters the most is http_simple","date":"2013-01-13T01:10:13.420Z","type":"message"}
{"nick":"isaacs","message":"Raynos: bash benchmark/http.sh","date":"2013-01-13T01:10:18.000Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: really? well done in that case :)","date":"2013-01-13T01:10:18.782Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: but!  it still quite a bit slower than V8","date":"2013-01-13T01:10:27.520Z","type":"message"}
{"nick":"isaacs","message":"*er, than v0.8","date":"2013-01-13T01:10:32.670Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, okay. the only metric that counts","date":"2013-01-13T01:10:46.831Z","type":"message"}
{"nick":"bnoordhuis","message":"Raynos: define longer?","date":"2013-01-13T01:11:02.141Z","type":"message"}
{"nick":"isaacs","message":"and using the master's bindings/libuv/streams1-js + the V8 that v0.8 has, is much much slower.","date":"2013-01-13T01:11:03.379Z","type":"message"}
{"nick":"isaacs","message":"Raynos: the time the tests take to run is not a metric we care much about","date":"2013-01-13T01:11:20.029Z","type":"message"}
{"nick":"Raynos","message":"there is a counter in make test that tells me how many seconds it takes to run them I guess","date":"2013-01-13T01:11:22.034Z","type":"message"}
{"nick":"Raynos","message":"Oh ok, cool.","date":"2013-01-13T01:11:25.832Z","type":"message"}
{"nick":"isaacs","message":"Raynos: run benchmark/http.sh","date":"2013-01-13T01:11:34.189Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: well... if they take twice as long all of a sudden something is wrong","date":"2013-01-13T01:11:41.086Z","type":"message"}
{"nick":"isaacs","message":"Raynos: wait at least 120seconds between runs","date":"2013-01-13T01:11:43.184Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: sure, that's true.","date":"2013-01-13T01:11:47.169Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-01-13T01:11:53.343Z","type":"quit"}
{"nick":"isaacs","message":"bnoordhuis: but usually that just means a test is failing","date":"2013-01-13T01:11:53.559Z","type":"message"}
{"nick":"isaacs","message":"and http_simple will show msot issues anyway","date":"2013-01-13T01:12:00.439Z","type":"message"}
{"nick":"bnoordhuis","message":"or that v8 is getting compiled without optimizations again :)","date":"2013-01-13T01:12:16.320Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yes, that could be","date":"2013-01-13T01:12:24.349Z","type":"message"}
{"nick":"Raynos","message":"when I run the tests the debugger repl tests timeout some time","date":"2013-01-13T01:12:43.984Z","type":"message"}
{"nick":"isaacs","message":"but the diff between master js and streams1 js (everything else being the same) makes me think something is fishiy","date":"2013-01-13T01:12:47.158Z","type":"message"}
{"nick":"Raynos","message":"Not sure whether that's my environment or a regression bug from my patch","date":"2013-01-13T01:12:56.320Z","type":"message"}
{"nick":"isaacs","message":"Raynos: the debugger repl tests are assholes.","date":"2013-01-13T01:13:09.218Z","type":"message"}
{"nick":"isaacs","message":"Raynos: that's a separate issue which we've got to fix","date":"2013-01-13T01:13:21.128Z","type":"message"}
{"nick":"isaacs","message":"Raynos: they work 100% of the time for me when run diretly, about 80% of the time run through `make tes`","date":"2013-01-13T01:13:44.579Z","type":"message"}
{"nick":"Raynos","message":"isaacs: did you look at https://github.com/joyent/node/issues/4579 ?","date":"2013-01-13T01:13:46.530Z","type":"message"}
{"nick":"isaacs","message":"t","date":"2013-01-13T01:13:47.619Z","type":"message"}
{"nick":"isaacs","message":"Raynos: yep.  sounds like a bug.","date":"2013-01-13T01:14:56.277Z","type":"message"}
{"nick":"Raynos","message":"I fixed it, PR soon.","date":"2013-01-13T01:15:08.436Z","type":"message"}
{"nick":"Raynos","message":"I fixed it by moving responsibility for edge-case into well compliant writable streams","date":"2013-01-13T01:15:23.644Z","type":"message"}
{"nick":"bnoordhuis","message":"while true; do python tools/test.py --mode=debug,release simple/test-debugger-repl || break; done","date":"2013-01-13T01:18:32.624Z","type":"message"}
{"nick":"bnoordhuis","message":"it's funny, sometimes it fails on the second run, sometimes it goes on for 50 runs or more","date":"2013-01-13T01:18:46.903Z","type":"message"}
{"nick":"bnoordhuis","message":"but when it fails, it leaves a child process behind that hogs the port and all is woe","date":"2013-01-13T01:19:21.775Z","type":"message"}
{"nick":"Raynos","message":"is there way to run a group of tests using the node test tools","date":"2013-01-13T01:19:38.036Z","type":"message"}
{"nick":"bnoordhuis","message":"Raynos: you mean a subset of e.g. the simple test suite?","date":"2013-01-13T01:20:02.181Z","type":"message"}
{"nick":"Raynos","message":"like like make `test-group group=simple/test-stream2-*`","date":"2013-01-13T01:20:05.196Z","type":"message"}
{"nick":"bnoordhuis","message":"you need to specify them by hand","date":"2013-01-13T01:20:23.311Z","type":"message"}
{"nick":"Raynos","message":"I was more going for wildcard searching files inside simple","date":"2013-01-13T01:20:23.999Z","type":"message"}
{"nick":"bnoordhuis","message":"chop of test/ and .js and you're good to go","date":"2013-01-13T01:20:36.637Z","type":"message"}
{"nick":"Raynos","message":"yeah I found that but it was tedious :P","date":"2013-01-13T01:20:55.930Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess i could make test.py do that automatically","date":"2013-01-13T01:21:03.060Z","type":"message"}
{"nick":"isaacs","message":"Raynos: i often do something like: for t in test/simple/test-{http,stream,net}*; do ./node $t || break ; done","date":"2013-01-13T01:21:49.043Z","type":"message"}
{"nick":"isaacs","message":"but a selector in python tools/test.py would be nice","date":"2013-01-13T01:22:14.623Z","type":"message"}
{"nick":"isaacs","message":"python tools/test.py simple/$glob","date":"2013-01-13T01:22:28.892Z","type":"message"}
{"nick":"bnoordhuis","message":"you know, it just works","date":"2013-01-13T01:22:31.443Z","type":"message"}
{"nick":"bnoordhuis","message":"python tools/test.py simple/test-dgram* <- runs just the dgram tests","date":"2013-01-13T01:22:41.682Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, i never knew","date":"2013-01-13T01:22:46.441Z","type":"message"}
{"nick":"isaacs","message":"oh, what do you know!","date":"2013-01-13T01:22:48.362Z","type":"message"}
{"nick":"isaacs","message":"Raynos: guess you got your answer :)","date":"2013-01-13T01:22:56.602Z","type":"message"}
{"nick":"Raynos","message":"oh.","date":"2013-01-13T01:23:11.302Z","type":"message"}
{"nick":"Raynos","message":"cool.","date":"2013-01-13T01:23:12.612Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: it'd be nice if `make test` had an arg or something","date":"2013-01-13T01:23:18.332Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: make test TEST=dgram,stream2,net","date":"2013-01-13T01:23:27.651Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: you know makefile syntax right? :)","date":"2013-01-13T01:23:40.824Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yeah, just playing with ideas.","date":"2013-01-13T01:23:49.442Z","type":"message"}
{"nick":"indexzero","date":"2013-01-13T01:23:53.614Z","type":"join"}
{"nick":"isaacs","message":"now that i know that the test runner Just Works that way, i'll probably do something like that","date":"2013-01-13T01:24:04.972Z","type":"message"}
{"nick":"stagas","date":"2013-01-13T01:24:30.463Z","type":"join"}
{"nick":"isaacs","message":"bnoordhuis: what do you make of streams1-js+master-uv+master-V8 being so much slower than v0.8?","date":"2013-01-13T01:24:45.431Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: that's on os x?","date":"2013-01-13T01:25:02.167Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yeah","date":"2013-01-13T01:25:16.751Z","type":"message"}
{"nick":"bnoordhuis","message":"have you tried downgrading v8 or libuv?","date":"2013-01-13T01:25:58.452Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, are you testing with or without keepalive?","date":"2013-01-13T01:26:13.120Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i tried downgrade V8 to v0.8's and things got worse","date":"2013-01-13T01:26:31.680Z","type":"message"}
{"nick":"isaacs","message":"it's tricky because we changed a bunch of bindings for the V8 update","date":"2013-01-13T01:26:42.860Z","type":"message"}
{"nick":"isaacs","message":"but, basically, streams 1 = master + `git checkout 77ed12f -- lib` to get the pre-streams2 JS","date":"2013-01-13T01:27:04.879Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll try upgrading v8 and libuv in v0.8 and see what happens","date":"2013-01-13T01:27:49.496Z","type":"message"}
{"nick":"bnoordhuis","message":"maybe just libuv first","date":"2013-01-13T01:28:02.915Z","type":"message"}
{"nick":"isaacs","message":"k","date":"2013-01-13T01:28:14.899Z","type":"message"}
{"nick":"bnoordhuis","message":"but try benchmarking with keepalive enabled","date":"2013-01-13T01:28:24.092Z","type":"message"}
{"nick":"isaacs","message":"i mean, if i've managed to make streams2 faster than streams1, then i'll be psyched","date":"2013-01-13T01:28:28.409Z","type":"message"}
{"nick":"isaacs","message":"that benchmark is with keepalive","date":"2013-01-13T01:28:33.838Z","type":"message"}
{"nick":"isaacs","message":"without keepalive the numbers are much smaller.","date":"2013-01-13T01:28:38.859Z","type":"message"}
{"nick":"Raynos","message":"isaacs: https://gist.github.com/d6224c99aad06762726c","date":"2013-01-13T01:28:42.522Z","type":"message"}
{"nick":"isaacs","message":"like 3000 vs 11000","date":"2013-01-13T01:28:45.688Z","type":"message"}
{"nick":"Raynos","message":"I can't seem to run that benchmark","date":"2013-01-13T01:28:46.984Z","type":"message"}
{"nick":"isaacs","message":"Raynos: what os is that?","date":"2013-01-13T01:29:13.968Z","type":"message"}
{"nick":"Raynos","message":"ubuntu 12","date":"2013-01-13T01:29:29.328Z","type":"message"}
{"nick":"isaacs","message":"Raynos: weird.  works on my ubuntu machine.  maybe throw a sudo in front of that?","date":"2013-01-13T01:30:01.578Z","type":"message"}
{"nick":"isaacs","message":"benchmark/http.sh: line 19: ulimit: open files: cannot modify limit: Operation not permitted","date":"2013-01-13T01:30:11.638Z","type":"message"}
{"nick":"isaacs","message":"if you can't modify your fd limit, it's going to choke anyway","date":"2013-01-13T01:30:24.357Z","type":"message"}
{"nick":"Raynos","message":"https://gist.github.com/506c1daa255eb4c73659","date":"2013-01-13T01:31:27.734Z","type":"message"}
{"nick":"Raynos","message":"its ok ill just not run the benchmark :D","date":"2013-01-13T01:31:39.680Z","type":"message"}
{"nick":"Raynos","message":"i doubt my patch regresses","date":"2013-01-13T01:31:44.234Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, the c-ares split... not so convenient now","date":"2013-01-13T01:31:48.040Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: oh?","date":"2013-01-13T01:31:59.686Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: when trying to upgrade libuv in v0.8 to master's version","date":"2013-01-13T01:32:14.919Z","type":"message"}
{"nick":"isaacs","message":"Raynos: try commenting out the sysctl lines at the top of the http.sh file","date":"2013-01-13T01:32:41.986Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: ah, i see","date":"2013-01-13T01:32:52.146Z","type":"message"}
{"nick":"bnoordhuis","message":"nothing that can't be fixed though","date":"2013-01-13T01:33:04.110Z","type":"message"}
{"nick":"Raynos","message":"https://gist.github.com/e11176dc9d5d261398fb","date":"2013-01-13T01:33:11.598Z","type":"message"}
{"nick":"Raynos","message":"nada","date":"2013-01-13T01:33:12.431Z","type":"message"}
{"nick":"Raynos","message":"https://gist.github.com/b7664742da96a9cb6f77 <- that's the problem","date":"2013-01-13T01:34:05.405Z","type":"message"}
{"nick":"EhevuTov","date":"2013-01-13T01:35:38.938Z","type":"join"}
{"nick":"isaacs","message":"Raynos: so, that drain/finish ondrain() thing","date":"2013-01-13T01:36:18.263Z","type":"message"}
{"nick":"isaacs","message":"Raynos: really, the readable stream should not be looking at dest._writableState anyway","date":"2013-01-13T01:36:31.113Z","type":"message"}
{"nick":"isaacs","message":"Raynos: fucking multipipe is the problem","date":"2013-01-13T01:36:42.484Z","type":"message"}
{"nick":"isaacs","action":"hate multipipe","date":"2013-01-13T01:36:50.533Z","type":"action"}
{"nick":"Raynos","message":"isaacs: probably. I presume you do that because you unpipe draining streams","date":"2013-01-13T01:37:06.273Z","type":"message"}
{"nick":"isaacs","message":"Raynos: he issue is that we dont' track *who* we're awaiting a drain from, only how many drains we're awaiting","date":"2013-01-13T01:37:09.063Z","type":"message"}
{"nick":"Raynos","message":"Well there's two ways you can do this","date":"2013-01-13T01:37:27.475Z","type":"message"}
{"nick":"Raynos","message":"either track drain state completely","date":"2013-01-13T01:37:33.382Z","type":"message"}
{"nick":"Raynos","message":"or tell users that if they unpipe draining streams or close draining streams or finish draining streams that","date":"2013-01-13T01:37:48.275Z","type":"message"}
{"nick":"Raynos","message":"it is their problem if they do that","date":"2013-01-13T01:37:54.721Z","type":"message"}
{"nick":"isaacs","message":"you mean, replace the counter with an array of who we're awaiting drain from, and prune the array when it drains?","date":"2013-01-13T01:37:56.922Z","type":"message"}
{"nick":"isaacs","message":"that'd be abusively slow.","date":"2013-01-13T01:38:22.232Z","type":"message"}
{"nick":"Raynos","message":"well the issue is removing drain listeners on writable streams when they are in draining state","date":"2013-01-13T01:38:23.228Z","type":"message"}
{"nick":"Raynos","message":"if pipe does that it's a broken pipe.","date":"2013-01-13T01:38:39.562Z","type":"message"}
{"nick":"Raynos","message":"i recommend we think about all the situations in which we do that and fix Writable so that it's never in draining state for those situations","date":"2013-01-13T01:39:18.544Z","type":"message"}
{"nick":"Raynos","message":"if users use writable streams that do not inherit from Writable they can implement and enforce the constraints of draining stream state themself","date":"2013-01-13T01:39:39.714Z","type":"message"}
{"nick":"Raynos","message":"or when we remove drain listeners we have a way to check whether that stream is in draining state","date":"2013-01-13T01:40:15.875Z","type":"message"}
{"nick":"stagas","reason":"Ping timeout: 276 seconds","date":"2013-01-13T01:40:48.379Z","type":"quit"}
{"nick":"EhevuTov","reason":"Ping timeout: 246 seconds","date":"2013-01-13T01:41:34.783Z","type":"quit"}
{"nick":"mikeal","date":"2013-01-13T01:42:39.915Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-01-13T01:46:50.760Z","type":"quit"}
{"nick":"Raynos","message":"isaacs: I started https://github.com/joyent/node/pull/4581 ","date":"2013-01-13T01:47:24.588Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: libuv from master is faster \\o/","date":"2013-01-13T01:50:06.100Z","type":"message"}
{"nick":"bnoordhuis","message":"not by a wide margin but a repeatable 5-8%","date":"2013-01-13T01:51:14.122Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: in case you want to try it yourself: https://github.com/bnoordhuis/node/compare/v0.8...backport-libuv-to-v0.8","date":"2013-01-13T01:53:05.209Z","type":"message"}
{"nick":"bnoordhuis","message":"Showing 348 changed files with 13,921 additions and 80,707 deletions. <- so sweet","date":"2013-01-13T01:53:20.214Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-01-13T01:53:40.856Z","type":"quit"}
{"nick":"jmar777","date":"2013-01-13T01:54:17.290Z","type":"join"}
{"nick":"jmar777_","date":"2013-01-13T01:56:08.869Z","type":"join"}
{"nick":"jmar777","reason":"Read error: Connection reset by peer","date":"2013-01-13T01:56:24.807Z","type":"quit"}
{"nick":"isaacs","message":"bnoordhuis: ok... so why is master slower?","date":"2013-01-13T01:56:38.490Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: if V8 is faster, and libuv is faster, and the js is faster?","date":"2013-01-13T01:56:45.800Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: flibby bindings?","date":"2013-01-13T01:56:52.290Z","type":"message"}
{"nick":"isaacs","message":"Raynos: it calls _read() until the hwm is set.","date":"2013-01-13T01:57:25.580Z","type":"message"}
{"nick":"isaacs","message":"Raynos: but it doesn't emit 'readable' until the lwm is set","date":"2013-01-13T01:57:32.029Z","type":"message"}
{"nick":"isaacs","message":"s/set/hit/g","date":"2013-01-13T01:57:37.049Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: good question. guess it's time to compare profiler logs","date":"2013-01-13T01:57:37.417Z","type":"message"}
{"nick":"Raynos","message":"isaacs: but if you set the lwm to 0 it wont keep calling _read","date":"2013-01-13T01:57:56.353Z","type":"message"}
{"nick":"Raynos","message":"I think it calls _read until the lwm is set","date":"2013-01-13T01:58:06.150Z","type":"message"}
{"nick":"isaacs","message":"Raynos: no, if you set hwm to 0 it doesn't keep calling _read","date":"2013-01-13T01:58:08.889Z","type":"message"}
{"nick":"isaacs","message":"Raynos: it calls _read until the hwm is hit","date":"2013-01-13T01:58:15.109Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: git checkout 77ed12f -- lib <- that actually works?","date":"2013-01-13T01:58:33.662Z","type":"message"}
{"nick":"Raynos","message":"nope until lwm","date":"2013-01-13T01:58:36.786Z","type":"message"}
{"nick":"bnoordhuis","action":"crosses his fingers","date":"2013-01-13T01:58:39.539Z","type":"action"}
{"nick":"isaacs","message":"bnoordhuis: yes, that actually works","date":"2013-01-13T01:58:44.918Z","type":"message"}
{"nick":"isaacs","message":"Raynos: wrong","date":"2013-01-13T01:59:16.848Z","type":"message"}
{"nick":"isaacs","message":"  if (state.length - n <= state.highWaterMark)","date":"2013-01-13T01:59:17.268Z","type":"message"}
{"nick":"isaacs","message":"    doRead = true;","date":"2013-01-13T01:59:17.397Z","type":"message"}
{"nick":"Raynos","message":"isaacs: https://github.com/joyent/node/blob/master/lib/_stream_readable.js#L277","date":"2013-01-13T01:59:18.561Z","type":"message"}
{"nick":"Raynos","message":"isaacs: if you call read() in a tight loop then until highWaterMark","date":"2013-01-13T01:59:31.981Z","type":"message"}
{"nick":"Raynos","message":"if you call read() once then until lowWaterMark","date":"2013-01-13T01:59:37.974Z","type":"message"}
{"nick":"Raynos","message":"i.e. if you pull continiously it will go until high water mark, if you pull once it will fill upto low water mark","date":"2013-01-13T01:59:58.984Z","type":"message"}
{"nick":"isaacs","message":"Raynos: it'll emit 'readable' at lwm, and stop reading at hwm","date":"2013-01-13T02:00:06.058Z","type":"message"}
{"nick":"Raynos","message":"https://gist.github.com/1e18361d5c9014fd741a three _read because length 3 is > lwm","date":"2013-01-13T02:01:28.449Z","type":"message"}
{"nick":"isaacs","message":"Raynos: please prove it with a test case.","date":"2013-01-13T02:01:30.407Z","type":"message"}
{"nick":"Raynos","message":"but maybe im mistaken here","date":"2013-01-13T02:01:57.105Z","type":"message"}
{"nick":"bnoordhuis","message":"hm. master is faster on some benchmarks, slower on others","date":"2013-01-13T02:03:35.327Z","type":"message"}
{"nick":"isaacs","message":"Raynos: https://gist.github.com/4521829","date":"2013-01-13T02:03:49.445Z","type":"message"}
{"nick":"bnoordhuis","message":"ab-hello-world-buffer-1024 and ab-hello-world-string-102400 are notably slower","date":"2013-01-13T02:04:05.576Z","type":"message"}
{"nick":"isaacs","message":"Raynos: automatically _read() until lwm is hit.  you're right.","date":"2013-01-13T02:04:06.865Z","type":"message"}
{"nick":"isaacs","message":"that's a bug :)","date":"2013-01-13T02:04:15.665Z","type":"message"}
{"nick":"Raynos","message":"which I think is what you would want","date":"2013-01-13T02:04:23.759Z","type":"message"}
{"nick":"mikeal","date":"2013-01-13T02:04:24.935Z","type":"join"}
{"nick":"isaacs","message":"no, it is not what you would want","date":"2013-01-13T02:04:31.215Z","type":"message"}
{"nick":"isaacs","message":"you'd wnat it to buffer up to hwm.  because tha'ts what hwm means :)","date":"2013-01-13T02:04:39.825Z","type":"message"}
{"nick":"Raynos","message":"oh I see","date":"2013-01-13T02:04:46.074Z","type":"message"}
{"nick":"Raynos","message":"the lwm is just an optimization to let you know when to read it","date":"2013-01-13T02:04:53.931Z","type":"message"}
{"nick":"Raynos","message":"you set the lwm to say \"dont bother me about those tiny chunks\"","date":"2013-01-13T02:05:02.968Z","type":"message"}
{"nick":"Raynos","message":"Actually I dont quite understand what the lwm is for","date":"2013-01-13T02:05:14.182Z","type":"message"}
{"nick":"TheJH","reason":"Ping timeout: 255 seconds","date":"2013-01-13T02:05:48.293Z","type":"quit"}
{"nick":"isaacs","message":"yes, it's an optimization to let you know whwen to read it","date":"2013-01-13T02:06:03.284Z","type":"message"}
{"nick":"Raynos","message":"isaacs: var r = new Readable(); r.push(\"foo\"); r.read(); // ERROR","date":"2013-01-13T02:07:04.162Z","type":"message"}
{"nick":"isaacs","message":"Raynos: ohh... wait.  no.","date":"2013-01-13T02:07:05.723Z","type":"message"}
{"nick":"isaacs","message":"Raynos: yeah, you're pushing a string, not a buffer","date":"2013-01-13T02:07:15.133Z","type":"message"}
{"nick":"isaacs","message":"Raynos: so, here's how it works:","date":"2013-01-13T02:07:19.673Z","type":"message"}
{"nick":"Raynos","message":"is the user responsible for setting encoding ","date":"2013-01-13T02:07:23.777Z","type":"message"}
{"nick":"isaacs","message":"Raynos: if you read() and it takes you down *below* the hwm, then it triggers a _read()","date":"2013-01-13T02:07:31.783Z","type":"message"}
{"nick":"isaacs","message":"Raynos: but it still only _read()'s up to the lwm","date":"2013-01-13T02:07:37.666Z","type":"message"}
{"nick":"Raynos","message":"is there value in detecting for a string and defaulting encoding to \"utf8\" ?","date":"2013-01-13T02:07:52.281Z","type":"message"}
{"nick":"isaacs","message":"Raynos: so, lwm=2,hwm=10,buffer=12.  read(4) will trigger a _read()","date":"2013-01-13T02:07:53.143Z","type":"message"}
{"nick":"isaacs","message":"Raynos: sure.","date":"2013-01-13T02:08:02.292Z","type":"message"}
{"nick":"isaacs","message":"Raynos: or push() could take an encoding arg","date":"2013-01-13T02:08:08.612Z","type":"message"}
{"nick":"isaacs","message":"so.. yeah, i guess that's fine.","date":"2013-01-13T02:08:35.612Z","type":"message"}
{"nick":"Raynos","message":"well I would also mean for cb(null, \"foo\") which also fails if you don't configure encoding","date":"2013-01-13T02:08:38.798Z","type":"message"}
{"nick":"isaacs","message":"everything seems to be working","date":"2013-01-13T02:08:42.102Z","type":"message"}
{"nick":"hz","date":"2013-01-13T02:08:48.851Z","type":"quit"}
{"nick":"isaacs","message":"yeah","date":"2013-01-13T02:08:51.142Z","type":"message"}
{"nick":"isaacs","message":"anywya, hwm only matters when deciding whether or not to _read() some more when you call read()","date":"2013-01-13T02:09:15.702Z","type":"message"}
{"nick":"Raynos","message":"yeah that works fine.","date":"2013-01-13T02:09:51.249Z","type":"message"}
{"nick":"isaacs","message":"anyway, i guess it'd be good to document","date":"2013-01-13T02:10:04.441Z","type":"message"}
{"nick":"bnoordhuis","message":"hm. ab-hello-world-string-1024 is a fair bit slower if you crank it up to -k -c 1000","date":"2013-01-13T02:10:29.499Z","type":"message"}
{"nick":"Raynos","message":"isaacs: is there a valid use-case for wanting a stream to fill up to low water mark without consuming chunks from the buffer. Like peak() or start() ","date":"2013-01-13T02:10:35.263Z","type":"message"}
{"nick":"isaacs","message":"Raynos: start() is called read(0)","date":"2013-01-13T02:11:27.460Z","type":"message"}
{"nick":"bnoordhuis","message":"master wins by a fair margin on ab-hello-world-buffer-102400 though. interesting","date":"2013-01-13T02:11:34.942Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: when you say \"master\" you mean \"0.8 with master uv\"?  or \"master\" master?","date":"2013-01-13T02:12:08.860Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: master master","date":"2013-01-13T02:12:20.928Z","type":"message"}
{"nick":"bnoordhuis","message":"without streams2","date":"2013-01-13T02:12:26.717Z","type":"message"}
{"nick":"isaacs","message":"oh.  ok","date":"2013-01-13T02:12:31.149Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: any idea why master-streams1 is slower in http.sh?","date":"2013-01-13T02:12:55.720Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: no, but i'm investigating that","date":"2013-01-13T02:13:42.124Z","type":"message"}
{"nick":"jmar777_","reason":"Remote host closed the connection","date":"2013-01-13T02:17:55.989Z","type":"quit"}
{"nick":"Raynos","message":"isaacs: yeah read(0) is nice, thanks :)","date":"2013-01-13T02:18:23.073Z","type":"message"}
{"nick":"jmar777","date":"2013-01-13T02:18:29.289Z","type":"join"}
{"nick":"bnoordhuis","message":"`perf stat -i -r 5` tells me that v0.8 simply does less, 20.2 vs 21.3 billion cycles","date":"2013-01-13T02:18:33.257Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess `perf record` is in order","date":"2013-01-13T02:18:50.607Z","type":"message"}
{"nick":"jmar777","reason":"Ping timeout: 264 seconds","date":"2013-01-13T02:22:54.109Z","type":"quit"}
{"nick":"bnoordhuis","message":"that 1 billion extra cycles is all user mode","date":"2013-01-13T02:23:20.797Z","type":"message"}
{"nick":"bnoordhuis","message":"2.37%  node  node                 [.] v8::internal::JSObject::LocalLookupRealNamedProperty(v8::internal::String*, v8::internal::LookupResult*)","date":"2013-01-13T02:29:56.678Z","type":"message"}
{"nick":"bnoordhuis","message":"we're doing something in master that triggers a lot of calls to LocalLookupRealNamedProperty","date":"2013-01-13T02:30:14.554Z","type":"message"}
{"nick":"bnoordhuis","message":"and whatever it is, v0.8 isn't doing it","date":"2013-01-13T02:30:20.339Z","type":"message"}
{"nick":"bnoordhuis","message":"i say \"we\" but it could be a v8 thing, of course","date":"2013-01-13T02:30:32.180Z","type":"message"}
{"nick":"bnoordhuis","message":"it's also possible that v8::internal::String::WriteToFlat<char> has become slower","date":"2013-01-13T02:31:44.098Z","type":"message"}
{"nick":"bnoordhuis","message":"but not by much","date":"2013-01-13T02:31:52.375Z","type":"message"}
{"nick":"bnoordhuis","message":"LocalLookupRealNamedProperty explains 0.5 of those 1 billion extra cycles","date":"2013-01-13T02:34:06.033Z","type":"message"}
{"nick":"isaacs","message":"so... we need to... read fewer properties?","date":"2013-01-13T02:34:24.825Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: well... it might be a v8 regression","date":"2013-01-13T02:37:08.692Z","type":"message"}
{"nick":"bnoordhuis","message":"maybe i should've written that as \"regression\"","date":"2013-01-13T02:37:21.188Z","type":"message"}
{"nick":"bnoordhuis","message":"that function now also deals with js proxies","date":"2013-01-13T02:37:29.220Z","type":"message"}
{"nick":"bnoordhuis","message":"which makes it more expensive","date":"2013-01-13T02:37:42.252Z","type":"message"}
{"nick":"isaacs","message":"i see","date":"2013-01-13T02:38:38.112Z","type":"message"}
{"nick":"isaacs","message":"that sucks.  i guess i just got so used to newer V8 versions making us faster, i forgot it's not a guarantee","date":"2013-01-13T02:39:20.752Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: how does your master-streams1 compare with master-streams2?","date":"2013-01-13T02:40:14.221Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: ask me that tomorrow or monday, i'm about to sign off :)","date":"2013-01-13T02:40:31.736Z","type":"message"}
{"nick":"bnoordhuis","message":"it's nearing 4 am here","date":"2013-01-13T02:40:43.168Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, sleep tight","date":"2013-01-13T02:42:06.288Z","type":"message"}
{"nick":"isaacs","message":"yikes","date":"2013-01-13T02:42:12.330Z","type":"message"}
{"nick":"isaacs","message":"g'nite","date":"2013-01-13T02:42:13.210Z","type":"message"}
{"nick":"Raynos","message":"isaacs: https://gist.github.com/029fd41ce1617ded8a4e","date":"2013-01-13T02:43:23.084Z","type":"message"}
{"nick":"Raynos","message":"we don't check `state.buffer.length` here ( https://github.com/joyent/node/blob/master/lib/_stream_readable.js#L153 ) in case user calls `read(0)` on purpose","date":"2013-01-13T02:44:13.581Z","type":"message"}
{"nick":"Raynos","message":"So it should be `n === 0 && nOrig !== 0` or `n === 0 && state.buffer.length === 0`","date":"2013-01-13T02:44:45.308Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 248 seconds","date":"2013-01-13T02:46:44.790Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-01-13T02:47:37.071Z","type":"quit"}
{"nick":"mjr_","date":"2013-01-13T03:20:04.803Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-01-13T03:24:11.630Z","type":"quit"}
{"nick":"indexzero","date":"2013-01-13T03:26:58.537Z","type":"join"}
{"nick":"EhevuTov","date":"2013-01-13T03:29:18.306Z","type":"join"}
{"nick":"mjr_","reason":"Quit: mjr_","date":"2013-01-13T03:37:38.373Z","type":"quit"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-01-13T03:37:42.507Z","type":"quit"}
{"nick":"trevnorris","date":"2013-01-13T03:39:14.971Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-01-13T03:44:40.713Z","type":"quit"}
{"nick":"indexzero","date":"2013-01-13T03:45:09.469Z","type":"join"}
{"nick":"mikeal","date":"2013-01-13T03:54:29.944Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 265 seconds","date":"2013-01-13T04:04:09.886Z","type":"quit"}
{"nick":"mikeal","date":"2013-01-13T04:30:45.267Z","type":"join"}
{"nick":"EhevuTov","date":"2013-01-13T04:38:51.893Z","type":"join"}
{"nick":"trevnorris","reason":"Ping timeout: 245 seconds","date":"2013-01-13T04:42:31.808Z","type":"quit"}
{"nick":"loladiro","date":"2013-01-13T05:03:09.155Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-01-13T05:07:01.802Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-01-13T05:09:56.621Z","type":"quit"}
{"nick":"felixge","date":"2013-01-13T05:10:54.949Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2013-01-13T05:10:55.132Z","type":"quit"}
{"nick":"felixge","date":"2013-01-13T05:10:55.259Z","type":"join"}
{"nick":"loladiro","date":"2013-01-13T05:13:07.757Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-01-13T05:15:14.727Z","type":"quit"}
{"nick":"felixge","reason":"Quit: felixge","date":"2013-01-13T05:32:40.225Z","type":"quit"}
{"nick":"loladiro","date":"2013-01-13T05:35:13.488Z","type":"join"}
{"nick":"indexzero","date":"2013-01-13T05:35:16.898Z","type":"join"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-01-13T06:09:42.462Z","type":"quit"}
{"nick":"felixge","date":"2013-01-13T06:10:59.853Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2013-01-13T06:10:59.853Z","type":"quit"}
{"nick":"felixge","date":"2013-01-13T06:10:59.853Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-01-13T06:14:38.313Z","type":"quit"}
{"nick":"felixge","reason":"Quit: felixge","date":"2013-01-13T06:23:01.250Z","type":"quit"}
{"nick":"felixge","date":"2013-01-13T06:23:28.885Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2013-01-13T06:23:29.243Z","type":"quit"}
{"nick":"felixge","date":"2013-01-13T06:23:29.377Z","type":"join"}
{"nick":"felixge","reason":"Client Quit","date":"2013-01-13T06:23:31.262Z","type":"quit"}
{"nick":"brson","date":"2013-01-13T06:32:52.210Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-01-13T07:00:25.818Z","type":"quit"}
{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2013-01-13T07:11:01.096Z","type":"quit"}
{"nick":"mikeal","date":"2013-01-13T07:15:56.651Z","type":"join"}
{"nick":"indexzero","date":"2013-01-13T07:18:05.910Z","type":"join"}
{"nick":"AvianFlu","date":"2013-01-13T07:23:41.556Z","type":"quit"}
{"nick":"brson","reason":"Read error: Connection reset by peer","date":"2013-01-13T07:56:24.574Z","type":"quit"}
{"nick":"brson","date":"2013-01-13T07:57:04.574Z","type":"join"}
{"nick":"rendar","date":"2013-01-13T08:15:20.873Z","type":"join"}
{"nick":"stagas","date":"2013-01-13T08:24:37.758Z","type":"join"}
{"nick":"EhevuTov","date":"2013-01-13T08:30:38.276Z","type":"join"}
{"nick":"paddybyers","date":"2013-01-13T08:47:04.119Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-01-13T09:07:10.545Z","type":"quit"}
{"nick":"indexzero","date":"2013-01-13T09:14:24.865Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 264 seconds","date":"2013-01-13T09:25:18.135Z","type":"quit"}
{"nick":"paddybyers","date":"2013-01-13T09:31:49.815Z","type":"join"}
{"nick":"`3rdEden","date":"2013-01-13T09:58:40.864Z","type":"join"}
{"nick":"paddybyers_","date":"2013-01-13T10:36:39.779Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 276 seconds","date":"2013-01-13T10:40:39.890Z","type":"quit"}
{"nick":"paddybyers_","new_nick":"paddybyers","date":"2013-01-13T10:40:40.040Z","type":"nick"}
{"nick":"TheJH","date":"2013-01-13T10:55:37.458Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 256 seconds","date":"2013-01-13T11:12:31.806Z","type":"quit"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-01-13T11:29:51.506Z","type":"quit"}
{"nick":"TheJH","reason":"Ping timeout: 276 seconds","date":"2013-01-13T11:37:30.367Z","type":"quit"}
{"nick":"`3rdEden","reason":"Remote host closed the connection","date":"2013-01-13T11:46:30.098Z","type":"quit"}
{"nick":"felixge","date":"2013-01-13T12:03:36.467Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2013-01-13T12:03:36.678Z","type":"quit"}
{"nick":"felixge","date":"2013-01-13T12:03:36.807Z","type":"join"}
{"nick":"TheJH","date":"2013-01-13T12:18:26.880Z","type":"join"}
{"nick":"`3rdEden","date":"2013-01-13T12:43:19.888Z","type":"join"}
{"nick":"TheJH","reason":"Ping timeout: 272 seconds","date":"2013-01-13T12:48:36.870Z","type":"quit"}
{"nick":"hz","date":"2013-01-13T12:49:40.432Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-01-13T12:50:34.846Z","type":"join"}
{"nick":"piscisaureus_","message":"indutny: congrats man!","date":"2013-01-13T12:53:20.526Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-01-13T12:59:51.304Z","type":"quit"}
{"nick":"hz","reason":"Ping timeout: 264 seconds","date":"2013-01-13T13:01:24.409Z","type":"quit"}
{"nick":"hz","date":"2013-01-13T13:04:03.468Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 240 seconds","date":"2013-01-13T13:16:38.655Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-01-13T13:21:37.014Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 276 seconds","date":"2013-01-13T13:34:12.903Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-01-13T14:10:10.278Z","type":"join"}
{"nick":"TheJH","date":"2013-01-13T14:24:25.418Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-01-13T14:34:28.266Z","type":"join"}
{"nick":"TheJH","reason":"Ping timeout: 252 seconds","date":"2013-01-13T14:47:32.884Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 248 seconds","date":"2013-01-13T15:17:41.154Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: fedor, pretty please with sugar on top reapply all patches whenever you upgrade v8 ","date":"2013-01-13T15:18:14.481Z","type":"message"}
{"nick":"bnoordhuis","message":"i've just wasted close to an hour because you upgraded v8 and didn't reapply an arm patch...","date":"2013-01-13T15:18:44.747Z","type":"message"}
{"nick":"bnoordhuis","message":"and now i can recompile v8 yet again","date":"2013-01-13T15:19:29.667Z","type":"message"}
{"nick":"felixge","reason":"Quit: felixge","date":"2013-01-13T15:23:07.451Z","type":"quit"}
{"nick":"TheJH","date":"2013-01-13T15:28:57.518Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-01-13T15:32:44.812Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: oooh","date":"2013-01-13T15:39:52.861Z","type":"message"}
{"nick":"indutny","message":"sorry","date":"2013-01-13T15:39:54.100Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: we should store information about this floating patches somewhere inside project","date":"2013-01-13T15:40:13.769Z","type":"message"}
{"nick":"indutny","message":"have we already did it?","date":"2013-01-13T15:40:20.813Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: well, git log --oneline deps/v8","date":"2013-01-13T15:40:29.649Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2013-01-13T15:40:36.162Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-01-13T15:40:38.259Z","type":"message"}
{"nick":"indutny","message":"will know","date":"2013-01-13T15:40:40.158Z","type":"message"}
{"nick":"bnoordhuis","message":"and will do?","date":"2013-01-13T15:40:46.719Z","type":"message"}
{"nick":"indutny","message":"lets see :)","date":"2013-01-13T15:41:21.523Z","type":"message"}
{"nick":"bnoordhuis","message":"hm. so i'm backporting v8 and libuv from master to v0.8 for benchmarks","date":"2013-01-13T15:45:52.933Z","type":"message"}
{"nick":"bnoordhuis","message":"and both seem to make things slower","date":"2013-01-13T15:45:58.185Z","type":"message"}
{"nick":"`3rdEden","reason":"Remote host closed the connection","date":"2013-01-13T15:46:01.363Z","type":"quit"}
{"nick":"bnoordhuis","message":"but what's odd is that libuv from master seems to regress ab-hello-world-string-102400 and ab-hello-world-buffer-102400 by a fairly substantial margin","date":"2013-01-13T15:46:23.165Z","type":"message"}
{"nick":"bnoordhuis","message":"for no discernible reason as far as i can tell","date":"2013-01-13T15:46:36.790Z","type":"message"}
{"nick":"bnoordhuis","message":"umm, or maybe not","date":"2013-01-13T15:52:58.749Z","type":"message"}
{"nick":"bnoordhuis","message":"the variance is insanely big","date":"2013-01-13T15:53:06.686Z","type":"message"}
{"nick":"bnoordhuis","message":"okay... i've established that the only regression is in ab-hello-world-string-102400","date":"2013-01-13T15:59:11.649Z","type":"message"}
{"nick":"bnoordhuis","message":"and it's apparently caused by libuv","date":"2013-01-13T15:59:39.054Z","type":"message"}
{"nick":"bnoordhuis","message":"the upside is that master's libuv is faster for smaller writes","date":"2013-01-13T16:00:30.842Z","type":"message"}
{"nick":"bnoordhuis","message":"a curious thing, ab-hello-world-string-1024 is about 7% faster, ab-hello-world-string-102400 is about 9% slower","date":"2013-01-13T16:06:06.375Z","type":"message"}
{"nick":"felixge","date":"2013-01-13T16:09:21.542Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2013-01-13T16:09:21.542Z","type":"quit"}
{"nick":"felixge","date":"2013-01-13T16:09:21.543Z","type":"join"}
{"nick":"felixge","reason":"Client Quit","date":"2013-01-13T16:12:33.248Z","type":"quit"}
{"nick":"indutny","message":"hm...","date":"2013-01-13T16:13:11.804Z","type":"message"}
{"nick":"indutny","message":"interesting","date":"2013-01-13T16:13:46.369Z","type":"message"}
{"nick":"indutny","message":"how could it be possible","date":"2013-01-13T16:13:54.328Z","type":"message"}
{"nick":"indutny","message":"I mean, how can it affect libuv","date":"2013-01-13T16:14:06.830Z","type":"message"}
{"nick":"bnoordhuis","message":"i wonder if there's a memory leak in libuv","date":"2013-01-13T16:15:45.798Z","type":"message"}
{"nick":"bnoordhuis","message":"with master's libuv: 644608k rss, 160650 pagefaults","date":"2013-01-13T16:16:04.582Z","type":"message"}
{"nick":"bnoordhuis","message":"with v0.8's libuv: 242320 rss, 21906 pagefaults","date":"2013-01-13T16:16:21.233Z","type":"message"}
{"nick":"indutny","message":"huh","date":"2013-01-13T16:16:32.718Z","type":"message"}
{"nick":"indutny","message":"160650 pagefaults?","date":"2013-01-13T16:16:36.111Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-01-13T16:16:37.925Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-01-13T16:16:41.662Z","type":"message"}
{"nick":"indutny","message":"it's not proportional to rss","date":"2013-01-13T16:16:45.299Z","type":"message"}
{"nick":"bnoordhuis","message":"let's see what the buffer benchmark does","date":"2013-01-13T16:16:59.024Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: may be better valgrinding it?","date":"2013-01-13T16:17:12.633Z","type":"message"}
{"nick":"indutny","message":"btw man, my wife has bought me lego mindstorms","date":"2013-01-13T16:17:26.908Z","type":"message"}
{"nick":"indutny","message":"it's amazing shit","date":"2013-01-13T16:17:29.180Z","type":"message"}
{"nick":"indutny","message":"in good sense","date":"2013-01-13T16:17:34.246Z","type":"message"}
{"nick":"bnoordhuis","message":"hm, buffer benchmarks are more or less identical","date":"2013-01-13T16:17:56.767Z","type":"message"}
{"nick":"indutny","message":"ok, starting VM","date":"2013-01-13T16:17:58.769Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: oh?","date":"2013-01-13T16:18:01.502Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: lego mindstorms?","date":"2013-01-13T16:18:09.111Z","type":"message"}
{"nick":"bnoordhuis","message":"yes?","date":"2013-01-13T16:18:13.812Z","type":"message"}
{"nick":"indutny","message":"http://mindstorms.lego.com/en-us/Products/default.aspx","date":"2013-01-13T16:18:19.256Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, there's still a difference but it's relatively minor","date":"2013-01-13T16:19:01.020Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, valgrind it is","date":"2013-01-13T16:19:07.475Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-01-13T16:19:11.218Z","type":"message"}
{"nick":"indutny","message":"that's what I'm doing right now","date":"2013-01-13T16:19:21.287Z","type":"message"}
{"nick":"bnoordhuis","message":"valgrind + ab == exercise in frustration","date":"2013-01-13T16:22:23.147Z","type":"message"}
{"nick":"bnoordhuis","message":"failing all the time with socket timeouts and no way to increase that timeout","date":"2013-01-13T16:22:37.203Z","type":"message"}
{"nick":"indutny","message":"siege?","date":"2013-01-13T16:22:54.987Z","type":"message"}
{"nick":"indutny","message":"or","date":"2013-01-13T16:23:00.163Z","type":"message"}
{"nick":"indutny","message":"-f flag","date":"2013-01-13T16:23:01.521Z","type":"message"}
{"nick":"indutny","message":"no","date":"2013-01-13T16:23:12.834Z","type":"message"}
{"nick":"indutny","message":"not, -f","date":"2013-01-13T16:23:14.757Z","type":"message"}
{"nick":"indutny","message":"-r","date":"2013-01-13T16:23:24.003Z","type":"message"}
{"nick":"indutny","message":"and -t 10000","date":"2013-01-13T16:23:38.011Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: how can I start server with libuv?","date":"2013-01-13T16:24:45.474Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: what do you mean?","date":"2013-01-13T16:25:02.328Z","type":"message"}
{"nick":"indutny","message":"echo-server?","date":"2013-01-13T16:25:05.408Z","type":"message"}
{"nick":"indutny","message":"well, I want to benchmark libuv","date":"2013-01-13T16:25:09.885Z","type":"message"}
{"nick":"indutny","message":"with ab","date":"2013-01-13T16:25:14.795Z","type":"message"}
{"nick":"indutny","message":"or better blackhole server?","date":"2013-01-13T16:26:18.242Z","type":"message"}
{"nick":"AvianFlu","date":"2013-01-13T16:26:55.834Z","type":"join"}
{"nick":"bnoordhuis","message":"indutny: oh, like that. for example, out/Debug/run-tests tcp_writealot tcp4_echo_server","date":"2013-01-13T16:26:59.530Z","type":"message"}
{"nick":"indutny","message":"ok, thanks","date":"2013-01-13T16:27:16.756Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm not really seeing memory leaks","date":"2013-01-13T16:27:39.201Z","type":"message"}
{"nick":"indutny","message":"so it just allocates more","date":"2013-01-13T16:27:52.596Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess it could be because of libuv processing a whole lot more events per loop tick","date":"2013-01-13T16:28:04.315Z","type":"message"}
{"nick":"bnoordhuis","message":"so allocated memory may stay around longer","date":"2013-01-13T16:28:19.220Z","type":"message"}
{"nick":"bnoordhuis","message":"that's easy to verify","date":"2013-01-13T16:28:34.026Z","type":"message"}
{"nick":"bnoordhuis","message":"no, that's not it","date":"2013-01-13T16:31:35.536Z","type":"message"}
{"nick":"piscisaureus_","reason":"Read error: Connection reset by peer","date":"2013-01-13T16:33:58.805Z","type":"quit"}
{"nick":"bnoordhuis","message":"i guess i found it","date":"2013-01-13T16:44:34.206Z","type":"message"}
{"nick":"bnoordhuis","message":" 51.99    0.000809           0      2571           brk","date":"2013-01-13T16:44:39.534Z","type":"message"}
{"nick":"bnoordhuis","message":"for some reason, libuv is triggering an insane amount of brk() syscalls","date":"2013-01-13T16:45:04.186Z","type":"message"}
{"nick":"bnoordhuis","message":"libuv from v0.8 doesn't","date":"2013-01-13T16:45:16.380Z","type":"message"}
{"nick":"tjfontaine","message":"only major change I can think of was ev removal?","date":"2013-01-13T16:45:34.424Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2013-01-13T16:46:43.601Z","type":"message"}
{"nick":"loladiro","date":"2013-01-13T16:51:39.343Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: brk()?","date":"2013-01-13T16:52:59.019Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I think you need to feed it to massif","date":"2013-01-13T16:53:06.918Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: i already did","date":"2013-01-13T16:53:39.934Z","type":"message"}
{"nick":"indutny","message":"and?","date":"2013-01-13T16:53:43.869Z","type":"message"}
{"nick":"indutny","message":"who is allocating most?","date":"2013-01-13T16:53:54.767Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: well, the heap is stable at about 2.3M with v0.8","date":"2013-01-13T16:56:28.597Z","type":"message"}
{"nick":"bnoordhuis","message":"that's v0.8's libuv","date":"2013-01-13T16:56:37.826Z","type":"message"}
{"nick":"bnoordhuis","message":"it grows to ~12MB with master's libuv and then shrinks to ~10M","date":"2013-01-13T16:56:55.272Z","type":"message"}
{"nick":"bnoordhuis","message":"it looks wildly erratic in massif-visualizer","date":"2013-01-13T16:59:36.936Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, it's so weird","date":"2013-01-13T16:59:43.712Z","type":"message"}
{"nick":"bnoordhuis","message":"apparently it's Isolate::EnsureDefaultIsolate() that causes the spikes","date":"2013-01-13T17:00:13.348Z","type":"message"}
{"nick":"tjfontaine","message":"hrm","date":"2013-01-13T17:00:47.681Z","type":"message"}
{"nick":"bnoordhuis","message":"let me run it one more time, just in case","date":"2013-01-13T17:01:06.779Z","type":"message"}
{"nick":"bnoordhuis","message":"you guys want me to upload the massif logs?","date":"2013-01-13T17:01:55.587Z","type":"message"}
{"nick":"tjfontaine","message":"I'm curious if it's not too much trouble","date":"2013-01-13T17:02:40.635Z","type":"message"}
{"nick":"indutny","message":"es","date":"2013-01-13T17:03:57.149Z","type":"message"}
{"nick":"indutny","message":"upload them","date":"2013-01-13T17:04:00.710Z","type":"message"}
{"nick":"bnoordhuis","message":"let's see if gist.github.com accepts them","date":"2013-01-13T17:04:47.618Z","type":"message"}
{"nick":"bnoordhuis","message":"https://gist.github.com/5be314ba56eac05232a1","date":"2013-01-13T17:06:26.934Z","type":"message"}
{"nick":"tjfontaine","message":"interesting","date":"2013-01-13T17:09:23.208Z","type":"message"}
{"nick":"bnoordhuis","message":"isn't it? but quite inexplicable","date":"2013-01-13T17:12:00.231Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess libuv and the js code are biting each other","date":"2013-01-13T17:12:20.177Z","type":"message"}
{"nick":"bnoordhuis","message":"but exactly how is anyone's guess","date":"2013-01-13T17:12:28.244Z","type":"message"}
{"nick":"bnoordhuis","message":"let's see what happens when i disable the slab allocator","date":"2013-01-13T17:13:29.509Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-01-13T17:13:56.743Z","type":"message"}
{"nick":"indutny","message":"pretty nice","date":"2013-01-13T17:14:06.202Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: correct me if I'm wrong","date":"2013-01-13T17:16:37.090Z","type":"message"}
{"nick":"indutny","message":"but it seems that most allocations are happening StreamWrap","date":"2013-01-13T17:16:45.974Z","type":"message"}
{"nick":"indutny","message":"which is expected","date":"2013-01-13T17:16:48.456Z","type":"message"}
{"nick":"indutny","message":"since that's what really happens","date":"2013-01-13T17:17:15.717Z","type":"message"}
{"nick":"bnoordhuis","message":"i think so, yes","date":"2013-01-13T17:17:26.772Z","type":"message"}
{"nick":"bnoordhuis","message":"but it's rather peculiar that the libuv version has so much impact","date":"2013-01-13T17:17:56.209Z","type":"message"}
{"nick":"indutny","message":"indeed","date":"2013-01-13T17:18:16.976Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-01-13T17:18:57.630Z","type":"join"}
{"nick":"indutny","message":"piscisaureus_: hey man","date":"2013-01-13T17:19:56.166Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: thank you","date":"2013-01-13T17:19:58.666Z","type":"message"}
{"nick":"piscisaureus_","message":"hey fedor","date":"2013-01-13T17:20:07.979Z","type":"message"}
{"nick":"indutny","message":"sorry, I was away","date":"2013-01-13T17:20:16.238Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: having fun today?","date":"2013-01-13T17:20:22.177Z","type":"message"}
{"nick":"indutny","message":"erm","date":"2013-01-13T17:21:05.285Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2013-01-13T17:21:06.070Z","type":"message"}
{"nick":"indutny","message":"sort of :)","date":"2013-01-13T17:21:08.366Z","type":"message"}
{"nick":"bnoordhuis","message":" 97.47    0.002238          37        61           munmap","date":"2013-01-13T17:21:21.679Z","type":"message"}
{"nick":"indutny","message":"I think I'll catch up with some people at tuesday","date":"2013-01-13T17:21:26.398Z","type":"message"}
{"nick":"bnoordhuis","message":"^ not sure if that's an improvment :/","date":"2013-01-13T17:21:28.507Z","type":"message"}
{"nick":"indutny","message":"ahha","date":"2013-01-13T17:21:33.743Z","type":"message"}
{"nick":"indutny","message":"which remind me about mmap() patch","date":"2013-01-13T17:21:40.658Z","type":"message"}
{"nick":"indutny","message":"for buffers","date":"2013-01-13T17:21:51.519Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, tried that - didn't affect memory usage much","date":"2013-01-13T17:21:55.666Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2013-01-13T17:21:59.756Z","type":"message"}
{"nick":"bnoordhuis","message":"or rather, peak rss","date":"2013-01-13T17:22:02.812Z","type":"message"}
{"nick":"indutny","message":"what about performance?","date":"2013-01-13T17:22:09.947Z","type":"message"}
{"nick":"bnoordhuis","message":"didn't check yet","date":"2013-01-13T17:22:39.422Z","type":"message"}
{"nick":"indutny","message":"I suspect mmap() is much slower than malloc()","date":"2013-01-13T17:23:01.574Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, but it maps much larger chunks so it's a one-time cost","date":"2013-01-13T17:24:19.590Z","type":"message"}
{"nick":"bnoordhuis","message":"or maybe not one-time but it's not paid as often","date":"2013-01-13T17:24:29.278Z","type":"message"}
{"nick":"bnoordhuis","message":"memory usage was lowest with mmap() btw but not by enough","date":"2013-01-13T17:24:47.981Z","type":"message"}
{"nick":"bnoordhuis","message":"it's still 27M vs 3M","date":"2013-01-13T17:25:05.274Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-01-13T17:25:06.226Z","type":"message"}
{"nick":"indutny","message":"odd","date":"2013-01-13T17:25:17.289Z","type":"message"}
{"nick":"indutny","message":"is everything except libuv is the same in your builds?","date":"2013-01-13T17:25:30.510Z","type":"message"}
{"nick":"indutny","message":"or are you comparing different v8 versions too?","date":"2013-01-13T17:25:40.878Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033yangguo@chromium.org\u000f \u00037master\u000f * \u0002926c90b\u0002 : v8: Hardfloat does not imply VFPv3, only VFPv2.  Raspberry Pi is an examp - http://git.io/XxS8Rg","date":"2013-01-13T17:27:51.637Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: no, same version of v8","date":"2013-01-13T17:28:10.370Z","type":"message"}
{"nick":"indutny","message":"щлбпщщв","date":"2013-01-13T17:28:15.383Z","type":"message"}
{"nick":"bnoordhuis","message":"i did have to chop up v0.8 a little to get the backport to compile","date":"2013-01-13T17:28:30.583Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: https://github.com/bnoordhuis/node/compare/v0.8...backport-libuv-to-v0.8 <- also includes the v8 update","date":"2013-01-13T17:28:47.551Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm comparing versions of that branch with and without the libuv update","date":"2013-01-13T17:29:10.079Z","type":"message"}
{"nick":"indutny","message":"yep, I undestand","date":"2013-01-13T17:29:11.558Z","type":"message"}
{"nick":"indutny","message":"interesting","date":"2013-01-13T17:29:21.391Z","type":"message"}
{"nick":"bnoordhuis","message":"something to contemplate over dinner","date":"2013-01-13T17:30:13.004Z","type":"message"}
{"nick":"bnoordhuis","message":"biab","date":"2013-01-13T17:30:14.002Z","type":"message"}
{"nick":"bnoordhuis","message":"the mmap() patch fixes the bytes/102400 benchmark, curiously enough","date":"2013-01-13T17:32:46.620Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-01-13T17:33:19.313Z","type":"quit"}
{"nick":"indutny","message":"aha!","date":"2013-01-13T17:34:58.879Z","type":"message"}
{"nick":"piscisaureus_","message":"how curious is all this","date":"2013-01-13T17:49:52.929Z","type":"message"}
{"nick":"mikeal","date":"2013-01-13T17:55:27.992Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 246 seconds","date":"2013-01-13T17:56:41.197Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Read error: Connection reset by peer","date":"2013-01-13T17:58:09.554Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-01-13T18:01:10.169Z","type":"quit"}
{"nick":"`3rdEden","date":"2013-01-13T18:01:41.033Z","type":"join"}
{"nick":"rendar","message":"piscisaureus_: hi, libuv uses ConnectEx right? then when the connection is completed, it calls uv_process_tcp_connect_req() ?","date":"2013-01-13T18:02:50.383Z","type":"message"}
{"nick":"mikeal","date":"2013-01-13T18:29:16.299Z","type":"join"}
{"nick":"toothrot","reason":"Ping timeout: 260 seconds","date":"2013-01-13T18:50:07.577Z","type":"quit"}
{"nick":"toothr","date":"2013-01-13T18:57:00.888Z","type":"join"}
{"nick":"toothr","new_nick":"toothrot","date":"2013-01-13T18:58:20.159Z","type":"nick"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-01-13T19:12:21.917Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-01-13T19:14:53.287Z","type":"join"}
{"nick":"mjr_","date":"2013-01-13T19:18:08.056Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-01-13T19:20:34.030Z","type":"quit"}
{"nick":"mjr_","reason":"Client Quit","date":"2013-01-13T19:22:37.595Z","type":"quit"}
{"nick":"hz","date":"2013-01-13T19:23:24.812Z","type":"quit"}
{"nick":"loladiro","date":"2013-01-13T19:23:36.560Z","type":"join"}
{"nick":"EhevuTov","date":"2013-01-13T19:29:36.525Z","type":"join"}
{"nick":"felixge","date":"2013-01-13T19:33:20.974Z","type":"join"}
{"nick":"felixge","reason":"Read error: Connection reset by peer","date":"2013-01-13T19:35:20.522Z","type":"quit"}
{"nick":"felixge_","date":"2013-01-13T19:35:25.518Z","type":"join"}
{"nick":"felixge_","reason":"Changing host","date":"2013-01-13T19:35:25.519Z","type":"quit"}
{"nick":"felixge_","date":"2013-01-13T19:35:25.519Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-01-13T19:36:24.642Z","type":"quit"}
{"nick":"isaacs","message":"bnoordhuis: any promising insights?","date":"2013-01-13T19:38:36.669Z","type":"message"}
{"nick":"mikeal","date":"2013-01-13T19:42:36.622Z","type":"join"}
{"nick":"dscape","message":"indutny: yt?","date":"2013-01-13T19:43:35.623Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2013-01-13T19:43:38.457Z","type":"message"}
{"nick":"dscape","message":"im trying to use clieasy :\\","date":"2013-01-13T19:43:40.740Z","type":"message"}
{"nick":"dscape","message":"how can i write to stdin?","date":"2013-01-13T19:43:54.510Z","type":"message"}
{"nick":"indutny","message":"erm","date":"2013-01-13T19:43:57.517Z","type":"message"}
{"nick":"indutny","message":"this is a module I wrote?","date":"2013-01-13T19:44:07.051Z","type":"message"}
{"nick":"indutny","message":"I take it? :)","date":"2013-01-13T19:44:10.075Z","type":"message"}
{"nick":"dscape","message":"according to the credits","date":"2013-01-13T19:44:14.213Z","type":"message"}
{"nick":"dscape","message":"yes","date":"2013-01-13T19:44:14.882Z","type":"message"}
{"nick":"dscape","message":":)","date":"2013-01-13T19:44:16.886Z","type":"message"}
{"nick":"dscape","message":"https://github.com/flatiron/cli-easy","date":"2013-01-13T19:44:29.142Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-01-13T19:44:43.089Z","type":"message"}
{"nick":"indutny","message":"next question","date":"2013-01-13T19:44:46.829Z","type":"message"}
{"nick":"indutny","message":"write to stdin!? WTF!","date":"2013-01-13T19:44:51.931Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-01-13T19:45:02.315Z","type":"message"}
{"nick":"indutny","message":"from other side","date":"2013-01-13T19:45:04.427Z","type":"message"}
{"nick":"dscape","message":"well people often do that in cli apps","date":"2013-01-13T19:45:07.618Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-01-13T19:45:22.993Z","type":"message"}
{"nick":"indutny","message":"let me see","date":"2013-01-13T19:45:25.165Z","type":"message"}
{"nick":"dscape","message":"testing clis is terrible, i hoping this to be my salvation","date":"2013-01-13T19:45:48.149Z","type":"message"}
{"nick":"dscape","message":"normally i just dont test stuff","date":"2013-01-13T19:45:52.020Z","type":"message"}
{"nick":"dscape","message":"lol","date":"2013-01-13T19:45:52.806Z","type":"message"}
{"nick":"indutny","message":"it does child_process.exec","date":"2013-01-13T19:46:07.761Z","type":"message"}
{"nick":"dscape","message":"i manually run commands, or end up straight up using diff","date":"2013-01-13T19:46:15.014Z","type":"message"}
{"nick":"indutny","message":"so no way of writing to stdin","date":"2013-01-13T19:46:28.982Z","type":"message"}
{"nick":"indutny","message":":(","date":"2013-01-13T19:46:29.999Z","type":"message"}
{"nick":"indutny","message":"I wonder why I hadn't thought about it before","date":"2013-01-13T19:46:40.618Z","type":"message"}
{"nick":"dscape","message":"indutny: did this module end up not being used then?","date":"2013-01-13T19:47:04.272Z","type":"message"}
{"nick":"indutny","message":"I suppose so","date":"2013-01-13T19:47:10.669Z","type":"message"}
{"nick":"indutny","message":"it way like api-easy for clis","date":"2013-01-13T19:47:15.150Z","type":"message"}
{"nick":"indutny","message":"but demand was pretty low","date":"2013-01-13T19:47:19.734Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2013-01-13T19:47:21.256Z","type":"message"}
{"nick":"dscape","message":"thanks indutny ","date":"2013-01-13T19:47:24.588Z","type":"message"}
{"nick":"mjr_","date":"2013-01-13T19:49:33.953Z","type":"join"}
{"nick":"indutny","message":"dscape: you're welcome","date":"2013-01-13T19:52:07.264Z","type":"message"}
{"nick":"dscape","message":"btw indutny im still using it","date":"2013-01-13T19:52:55.236Z","type":"message"}
{"nick":"dscape","message":"to my knowledge it is still the best thing out there","date":"2013-01-13T19:53:04.106Z","type":"message"}
{"nick":"dscape","message":"lol","date":"2013-01-13T19:53:05.350Z","type":"message"}
{"nick":"indexzero","date":"2013-01-13T20:05:53.802Z","type":"join"}
{"nick":"loladiro","date":"2013-01-13T20:06:40.136Z","type":"join"}
{"nick":"jmar777","date":"2013-01-13T20:06:56.482Z","type":"join"}
{"nick":"indexzero","reason":"Client Quit","date":"2013-01-13T20:07:33.837Z","type":"quit"}
{"nick":"indutny","message":"dscape: :)","date":"2013-01-13T20:09:13.428Z","type":"message"}
{"nick":"indutny","message":"dscape: you should add stdin support then","date":"2013-01-13T20:09:21.099Z","type":"message"}
{"nick":"mjr_","reason":"Quit: mjr_","date":"2013-01-13T20:17:50.147Z","type":"quit"}
{"nick":"indexzero","date":"2013-01-13T20:29:44.036Z","type":"join"}
{"nick":"piscisaureus_","message":"rendar: yes, that's how it works","date":"2013-01-13T20:30:02.226Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-01-13T20:37:50.586Z","type":"quit"}
{"nick":"jmar777","date":"2013-01-13T20:38:26.720Z","type":"join"}
{"nick":"jmar777","reason":"Read error: Connection reset by peer","date":"2013-01-13T20:39:20.864Z","type":"quit"}
{"nick":"jmar777","date":"2013-01-13T20:39:28.418Z","type":"join"}
{"nick":"paddybyers","date":"2013-01-13T20:53:25.399Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-01-13T20:57:29.629Z","type":"quit"}
{"nick":"txdv_","date":"2013-01-13T20:58:00.699Z","type":"join"}
{"nick":"jmar777","date":"2013-01-13T20:58:01.778Z","type":"join"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-01-13T20:58:03.115Z","type":"quit"}
{"nick":"txdv_","reason":"Client Quit","date":"2013-01-13T20:58:03.907Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-01-13T20:59:27.514Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 260 seconds","date":"2013-01-13T20:59:51.558Z","type":"quit"}
{"nick":"jmar777","reason":"Ping timeout: 264 seconds","date":"2013-01-13T21:02:30.300Z","type":"quit"}
{"nick":"ryah","date":"2013-01-13T21:07:34.917Z","type":"join"}
{"nick":"ryah","message":"what's up guys","date":"2013-01-13T21:07:42.591Z","type":"message"}
{"nick":"ryah","message":"when are buffers going to get backed by typed arrays?","date":"2013-01-13T21:07:59.918Z","type":"message"}
{"nick":"pooya","date":"2013-01-13T21:08:13.283Z","type":"join"}
{"nick":"paddybyers","date":"2013-01-13T21:09:42.948Z","type":"join"}
{"nick":"pooya","reason":"Client Quit","date":"2013-01-13T21:10:00.509Z","type":"quit"}
{"nick":"rendar","message":"piscisaureus_: i see, but what i can't get from libuv sources is: when ConnectEx returns ERROR_IO_PENDING, the request will be completed lately, but what about the connection has errors (e.g. connection refused or connection timed out) ? is IOCP callback called in such case?","date":"2013-01-13T21:10:00.817Z","type":"message"}
{"nick":"piscisaureus_","message":"ryah: don't know","date":"2013-01-13T21:11:59.437Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: yes","date":"2013-01-13T21:12:02.448Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: hmm, the system call the iocp callback? and how you know that the completion failed? is this documented somewhere?","date":"2013-01-13T21:13:34.952Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: msdn","date":"2013-01-13T21:13:46.663Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: have you written anything with iocp so far?","date":"2013-01-13T21:13:57.341Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: because the system does not call any callbacks when you use iocp ...","date":"2013-01-13T21:14:19.078Z","type":"message"}
{"nick":"rendar","message":"well, yes, you're right, it puts the completion and GetQueuedCompletionStatus() returns","date":"2013-01-13T21:15:16.723Z","type":"message"}
{"nick":"piscisaureus_","message":"rendar: let me copy the relevant portions for you:","date":"2013-01-13T21:16:58.868Z","type":"message"}
{"nick":"piscisaureus_","message":"Upon failure (the return value is FALSE), those same parameters can contain particular value combinations as follows:","date":"2013-01-13T21:16:59.508Z","type":"message"}
{"nick":"piscisaureus_","message":"... <snip> ...","date":"2013-01-13T21:16:59.774Z","type":"message"}
{"nick":"piscisaureus_","message":"If *lpOverlapped is not NULL and the function dequeues a completion packet for a failed I/O operation from the completion port, the function stores information about the failed operation in the variables pointed to by lpNumberOfBytes, lpCompletionKey, and lpOverlapped. To get extended error information, call GetLastError.","date":"2013-01-13T21:16:59.774Z","type":"message"}
{"nick":"rendar","message":"is this from ConnectEx page?","date":"2013-01-13T21:17:47.128Z","type":"message"}
{"nick":"piscisaureus_","message":"No the GetQueuedCompletionStatus page","date":"2013-01-13T21:18:59.102Z","type":"message"}
{"nick":"rendar","message":"piscisaureus_: thanks, finally i saw what i was doing wrong, in my callback i had while (GetQueuedCompletionStatus(..params)) so on ConnectEx error the thread just died","date":"2013-01-13T21:21:49.044Z","type":"message"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-01-13T21:23:53.065Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Read error: Connection reset by peer","date":"2013-01-13T21:26:12.460Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-01-13T21:26:40.614Z","type":"join"}
{"nick":"txdv","message":"Hello, i am back :P","date":"2013-01-13T21:27:32.463Z","type":"message"}
{"nick":"rendar","date":"2013-01-13T21:43:08.952Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-01-13T22:01:29.271Z","type":"quit"}
{"nick":"bnoordhuis","message":"isaacs: promising insights, yes. it's not v8 and it's not really libuv but master's libuv and the slab allocator don't play nice for some reason","date":"2013-01-13T22:02:52.609Z","type":"message"}
{"nick":"pooya","date":"2013-01-13T22:06:16.164Z","type":"join"}
{"nick":"brson","date":"2013-01-13T22:08:58.331Z","type":"join"}
{"nick":"pooya","reason":"Quit: pooya","date":"2013-01-13T22:13:21.099Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-01-13T22:14:31.412Z","type":"join"}
{"nick":"Benvie","date":"2013-01-13T22:16:05.023Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-01-13T22:21:45.750Z","type":"quit"}
{"nick":"lohkey","date":"2013-01-13T22:27:20.416Z","type":"join"}
{"nick":"lohkey","reason":"Client Quit","date":"2013-01-13T22:28:32.603Z","type":"quit"}
{"nick":"warz","date":"2013-01-13T22:32:10.878Z","type":"join"}
{"nick":"warz","reason":"Changing host","date":"2013-01-13T22:32:12.628Z","type":"quit"}
{"nick":"warz","date":"2013-01-13T22:32:12.754Z","type":"join"}
{"nick":"EhevuTov","date":"2013-01-13T22:33:46.503Z","type":"join"}
{"nick":"indexzero","date":"2013-01-13T22:35:48.283Z","type":"join"}
{"nick":"`3rdEden","reason":"Remote host closed the connection","date":"2013-01-13T22:56:47.169Z","type":"quit"}
{"nick":"wolfeidau","reason":"Read error: Connection reset by peer","date":"2013-01-13T23:05:03.779Z","type":"quit"}
{"nick":"wolfeida_","date":"2013-01-13T23:05:10.019Z","type":"join"}
{"nick":"isaacs","message":"bnoordhuis: nice :)","date":"2013-01-13T23:19:16.293Z","type":"message"}
{"nick":"creationix","reason":"Ping timeout: 245 seconds","date":"2013-01-13T23:30:01.846Z","type":"quit"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-01-13T23:34:46.855Z","type":"nick"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-01-13T23:38:09.199Z","type":"nick"}
{"nick":"creationix","date":"2013-01-13T23:46:16.012Z","type":"join"}
