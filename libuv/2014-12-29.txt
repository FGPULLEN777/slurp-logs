{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-12-29T00:00:00.771Z","type":"quit"}
{"nick":"ircretary","date":"2014-12-29T00:00:10.236Z","type":"join"}
{"nick":"rendar","reason":"Quit: Leaving","date":"2014-12-29T00:02:55.538Z","type":"quit"}
{"nick":"tarruda_","date":"2014-12-29T00:16:02.080Z","type":"join"}
{"nick":"tarruda","reason":"Ping timeout: 265 seconds","date":"2014-12-29T00:17:26.146Z","type":"quit"}
{"nick":"chris_99","reason":"Quit: Ex-Chat","date":"2014-12-29T01:28:06.104Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 245 seconds","date":"2014-12-29T01:29:27.696Z","type":"quit"}
{"nick":"andrehjr","reason":"Quit: Computer has gone to sleep.","date":"2014-12-29T01:40:01.080Z","type":"quit"}
{"nick":"bradleymeck","date":"2014-12-29T01:59:45.616Z","type":"join"}
{"nick":"andrehjr","date":"2014-12-29T02:07:57.366Z","type":"join"}
{"nick":"andrehjr","reason":"Quit: Computer has gone to sleep.","date":"2014-12-29T02:14:04.386Z","type":"quit"}
{"nick":"tjkrusinski","reason":"Ping timeout: 258 seconds","date":"2014-12-29T03:19:50.242Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2014-12-29T03:26:59.979Z","type":"quit"}
{"nick":"Left_Turn","reason":"Quit: Leaving","date":"2014-12-29T03:35:13.185Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2014-12-29T03:37:53.037Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-12-29T03:39:51.058Z","type":"quit"}
{"nick":"Ralith","reason":"Ping timeout: 255 seconds","date":"2014-12-29T04:21:07.278Z","type":"quit"}
{"nick":"Orborde","date":"2014-12-29T04:31:53.148Z","type":"join"}
{"nick":"Ralith","date":"2014-12-29T04:33:45.214Z","type":"join"}
{"nick":"Orborde","message":"Hey, does someone have a libuv dev environment set up on Windows? I don't, and I'm trying to diagnose a possible Windows-only crash: http://paste.orangehattech.com/view/003191f5","date":"2014-12-29T04:34:38.813Z","type":"message"}
{"nick":"Orborde","message":"(to be clear, I'm looking for someone to try running the above snippet on Windows and tell me if it crashes)","date":"2014-12-29T04:36:20.596Z","type":"message"}
{"nick":"txdv","message":"probably not many people  trying to use tha trdlock","date":"2014-12-29T04:59:09.157Z","type":"message"}
{"nick":"txdv","message":"so it might be buggy","date":"2014-12-29T04:59:11.584Z","type":"message"}
{"nick":"a_le","message":"is it ok to uv_read_stop() within the alloc_cb, if I can't provide memory for the next read operation?","date":"2014-12-29T05:00:13.157Z","type":"message"}
{"nick":"txdv","message":"as in you want to that alloc_cb to be called again after running the loop after the stop?","date":"2014-12-29T05:01:25.254Z","type":"message"}
{"nick":"a_le","message":"txdv: I want it to be called again only after I issue another uv_read_start()","date":"2014-12-29T05:01:57.642Z","type":"message"}
{"nick":"a_le","message":"alloc_cb() fires, it goes like: \"oh shit I can't take any data\" and then it issues uv_read_stop(). Some more processing happens, and we are ready to take more data again, we issue uv_read_start(). Hopefully now that old alloc_cb() will get invoked again, but maybe I am daydreaming :)","date":"2014-12-29T05:03:26.706Z","type":"message"}
{"nick":"a_le","message":"what I am afraid will happen instead is:","date":"2014-12-29T05:03:38.768Z","type":"message"}
{"nick":"txdv","message":"it wont","date":"2014-12-29T05:04:02.344Z","type":"message"}
{"nick":"a_le","message":"that the uv_read_stop() doesn't have an immediate effect and that libuv will barf when the uv_buf will have len = 0","date":"2014-12-29T05:04:21.068Z","type":"message"}
{"nick":"a_le","message":"txdv: how do you suggest i handle this?","date":"2014-12-29T05:04:41.196Z","type":"message"}
{"nick":"txdv","message":"just return len = 0 and read_start again lat er","date":"2014-12-29T05:04:49.333Z","type":"message"}
{"nick":"txdv","message":"i think it wont barf on len = 0","date":"2014-12-29T05:05:01.590Z","type":"message"}
{"nick":"txdv","message":"im not sure though","date":"2014-12-29T05:05:04.180Z","type":"message"}
{"nick":"a_le","message":"txdv: i am lost","date":"2014-12-29T05:05:08.756Z","type":"message"}
{"nick":"a_le","message":"so what was wrong?","date":"2014-12-29T05:05:15.662Z","type":"message"}
{"nick":"txdv","message":"no, im talking shit","date":"2014-12-29T05:05:21.722Z","type":"message"}
{"nick":"txdv","message":"it wont barf on unix","date":"2014-12-29T05:05:26.840Z","type":"message"}
{"nick":"txdv","message":"on windows it will","date":"2014-12-29T05:05:30.330Z","type":"message"}
{"nick":"a_le","message":"ChangeLog:* windows: make uv_read_stop immediately stop reading (Jameson Nash)","date":"2014-12-29T05:05:47.490Z","type":"message"}
{"nick":"a_le","message":"is it equivalent to a uv_read_stop() on unix?","date":"2014-12-29T05:06:10.896Z","type":"message"}
{"nick":"txdv","message":"immediately but not in the alloc_cb","date":"2014-12-29T05:06:50.408Z","type":"message"}
{"nick":"a_le","message":"txdv: so the only thing I need to pay attention to is that if i ever return a 0-len buf, I need to later issue another uv_read_start() by myself, even if I never explicitly invoked a uv_read_stop() ?","date":"2014-12-29T05:09:14.125Z","type":"message"}
{"nick":"txdv","message":"no, that was a lie, i thought about the unix aspect of libuv","date":"2014-12-29T05:10:11.942Z","type":"message"}
{"nick":"txdv","message":"windows calls alloc_cb before it issues the IO request","date":"2014-12-29T05:10:25.525Z","type":"message"}
{"nick":"a_le","message":"i am reading src/unix/stream.c","date":"2014-12-29T05:10:49.600Z","type":"message"}
{"nick":"a_le","message":"read_cb(stream, UV_ENOBUFS, &buf) gets invoked right away upon a 0-len buf being returned by alloc_cb","date":"2014-12-29T05:11:21.722Z","type":"message"}
{"nick":"txdv","message":"yeah, so it works on unix for sure","date":"2014-12-29T05:12:48.185Z","type":"message"}
{"nick":"txdv","message":"i dont think that it works on windows though","date":"2014-12-29T05:12:54.216Z","type":"message"}
{"nick":"txdv","message":"wait i have to think about it","date":"2014-12-29T05:13:06.825Z","type":"message"}
{"nick":"a_le","message":"i'll wait :)","date":"2014-12-29T05:13:28.212Z","type":"message"}
{"nick":"txdv","message":"it will work","date":"2014-12-29T05:14:09.777Z","type":"message"}
{"nick":"a_le","message":"on both win and unix?","date":"2014-12-29T05:14:23.154Z","type":"message"}
{"nick":"txdv","message":"the only difference is that alloc_cb on unix is called a bit later","date":"2014-12-29T05:14:32.925Z","type":"message"}
{"nick":"a_le","message":"i'm listening then i have more questions","date":"2014-12-29T05:14:50.799Z","type":"message"}
{"nick":"txdv","message":"return len = 0, stop reading","date":"2014-12-29T05:15:02.771Z","type":"message"}
{"nick":"txdv","message":"start reading when you are ready agian","date":"2014-12-29T05:15:06.821Z","type":"message"}
{"nick":"a_le","message":"stop reading = issue a uv_read_stop()?","date":"2014-12-29T05:15:34.580Z","type":"message"}
{"nick":"txdv","message":"you dont need to stop","date":"2014-12-29T05:16:53.326Z","type":"message"}
{"nick":"txdv","message":"but it will trigger again on the next loop iteration","date":"2014-12-29T05:17:03.085Z","type":"message"}
{"nick":"a_le","message":"even if no new data was received?","date":"2014-12-29T05:17:30.408Z","type":"message"}
{"nick":"a_le","message":"is it ok for me to stop?","date":"2014-12-29T05:17:38.479Z","type":"message"}
{"nick":"a_le","message":"within the alloc_cb?","date":"2014-12-29T05:18:07.461Z","type":"message"}
{"nick":"txdv","message":"if you stop all operations of the current iteration will still be executed","date":"2014-12-29T05:20:29.338Z","type":"message"}
{"nick":"txdv","message":"wait","date":"2014-12-29T05:20:48.925Z","type":"message"}
{"nick":"txdv","message":"you mean read_stop or the other stop which stops the loop?","date":"2014-12-29T05:21:05.028Z","type":"message"}
{"nick":"a_le","message":"uv_read_stop()","date":"2014-12-29T05:21:18.753Z","type":"message"}
{"nick":"a_le","message":"(thank you for your patience :-)","date":"2014-12-29T05:21:49.534Z","type":"message"}
{"nick":"txdv","message":"i dont know for sure","date":"2014-12-29T05:25:31.980Z","type":"message"}
{"nick":"txdv","message":"i'd have to investigate the code","date":"2014-12-29T05:26:02.790Z","type":"message"}
{"nick":"a_le","message":"i see","date":"2014-12-29T05:33:55.706Z","type":"message"}
{"nick":"txdv","message":"a_le: Just try it out","date":"2014-12-29T05:35:40.543Z","type":"message"}
{"nick":"txdv","message":"are you on windows?","date":"2014-12-29T05:35:44.011Z","type":"message"}
{"nick":"a_le","message":"txdv: linux/macOS","date":"2014-12-29T05:41:31.496Z","type":"message"}
{"nick":"a_le","message":"txdv: yeah I guess I could do it on purpose, artificially","date":"2014-12-29T05:41:58.917Z","type":"message"}
{"nick":"txdv","message":"either one dives deep into the code or one just tries it out","date":"2014-12-29T05:42:28.562Z","type":"message"}
{"nick":"txdv","message":"the code part is the better way, because you understand, but it is the harder way and takes much more time","date":"2014-12-29T05:42:47.421Z","type":"message"}
{"nick":"a_le","message":"yep","date":"2014-12-29T05:45:51.099Z","type":"message"}
{"nick":"seishun","date":"2014-12-29T05:46:02.390Z","type":"join"}
{"nick":"a_le","message":"i won't be able to try right away though","date":"2014-12-29T05:46:32.336Z","type":"message"}
{"nick":"a_le","message":"will let you know once i've done it","date":"2014-12-29T05:46:42.731Z","type":"message"}
{"nick":"tarruda_","reason":"Read error: Connection reset by peer","date":"2014-12-29T06:02:54.340Z","type":"quit"}
{"nick":"petka_","reason":"Quit: Connection closed for inactivity","date":"2014-12-29T06:04:46.815Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 272 seconds","date":"2014-12-29T07:04:13.937Z","type":"quit"}
{"nick":"kaeso-","date":"2014-12-29T07:58:14.107Z","type":"join"}
