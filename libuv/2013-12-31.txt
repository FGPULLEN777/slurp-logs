{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-12-31T00:00:00.848Z","type":"quit"}
{"nick":"petka_","message":"it is currently capped at 15000 op/s","date":"2013-12-31T00:00:02.965Z","type":"message"}
{"nick":"ircretary","date":"2013-12-31T00:00:08.927Z","type":"join"}
{"nick":"petka_","message":"that's like, really, really slow","date":"2013-12-31T00:00:22.926Z","type":"message"}
{"nick":"tjfontaine","message":"and since it's not a critical imperative at the moment, it does us all a benefit for it to grow and mature in the npm space on its own, and as adoption of it increases the inclusion can be reevaluated","date":"2013-12-31T00:00:24.205Z","type":"message"}
{"nick":"petka_","message":"you cannot get 100 000 rps if parsing the url already is taking you down to 15k rps","date":"2013-12-31T00:00:57.005Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: ahoy!","date":"2013-12-31T00:01:14.739Z","type":"message"}
{"nick":"tjfontaine","message":"petka_: there are a lot of large and complex deployments out there, they have complaints about node, so far as I know, you're the first to raise the url parser as an issue -- and lucky for you and everyone else in the short term that might experience the pain -- it's really easy to replace the parser by using your module","date":"2013-12-31T00:02:31.392Z","type":"message"}
{"nick":"petka_","message":"I don't understand why it would need to grow and mature, it's the same module but faster. e.g. .resolve code is mostly the same","date":"2013-12-31T00:02:38.650Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: hey dude. one sec and i'd like you to take a quick look at something.","date":"2013-12-31T00:02:57.861Z","type":"message"}
{"nick":"tjfontaine","message":"petka_: it's *not* the same module, it's a ground up rewrite of the parser as you indicate","date":"2013-12-31T00:03:25.076Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: sure","date":"2013-12-31T00:03:29.325Z","type":"message"}
{"nick":"petka_","message":"in terms of api and semantics","date":"2013-12-31T00:03:37.752Z","type":"message"}
{"nick":"tjfontaine","message":"petka_: the API is not the question","date":"2013-12-31T00:03:41.396Z","type":"message"}
{"nick":"tjfontaine","message":"petka_: and semantics are for now undetermined, you know as much of the coverage that our current tests have and any that you've done, that isn't necessarily indicative of all the existing semantics of node's existing parser","date":"2013-12-31T00:04:13.193Z","type":"message"}
{"nick":"mikeal","date":"2013-12-31T00:04:25.984Z","type":"join"}
{"nick":"tjfontaine","message":"petka_: there may yet be unknown corner cases in your implementation, and for that staying out in the community for a while can do it quite well","date":"2013-12-31T00:04:47.748Z","type":"message"}
{"nick":"petka_","message":"sure, but a few minors? doesn't that mean years?","date":"2013-12-31T00:05:01.891Z","type":"message"}
{"nick":"tjfontaine","message":"petka_: again, feel free to file the PR and keep it up to date on the master branch","date":"2013-12-31T00:05:02.665Z","type":"message"}
{"nick":"tjfontaine","message":"petka_: no not really","date":"2013-12-31T00:05:11.051Z","type":"message"}
{"nick":"petka_","message":"again I don't want to rush it but if it takes years","date":"2013-12-31T00:05:13.041Z","type":"message"}
{"nick":"tjfontaine","message":"but that's why npm exists","date":"2013-12-31T00:05:20.544Z","type":"message"}
{"nick":"spion","date":"2013-12-31T00:05:27.194Z","type":"join"}
{"nick":"tjfontaine","message":"this would be a different conversation if url itself were used heavily within node core itself","date":"2013-12-31T00:05:37.985Z","type":"message"}
{"nick":"petka_","message":"afaik url.parse(request.url) is what is done in every web server","date":"2013-12-31T00:06:12.791Z","type":"message"}
{"nick":"tjfontaine","message":"what users decide to do, is not the same as what node itself does","date":"2013-12-31T00:06:25.833Z","type":"message"}
{"nick":"petka_","message":"but the users don't know that url.parse is a heavy bottleneck and wouldn't know to look for another module","date":"2013-12-31T00:06:51.754Z","type":"message"}
{"nick":"petka_","message":"I mean you kinda dismissed it yourself at the beginning as well","date":"2013-12-31T00:07:00.424Z","type":"message"}
{"nick":"tjfontaine","message":"users who are doing heavy amounts of url.parse and do profiling will certainly see it popping up in their results, and then begin searching for solutions","date":"2013-12-31T00:07:51.107Z","type":"message"}
{"nick":"petka_","message":"no, just once per request is already a huge slow down","date":"2013-12-31T00:08:16.207Z","type":"message"}
{"nick":"Domenic_","message":"I am surprised you are dismissing this just because it's not used in core code. It feels like dismissing HTTP performance because of all the users who use Node primarily for Grunt and never run servers.","date":"2013-12-31T00:08:31.541Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #363 \u00037UNSTABLE\u000f windows-x64 (5/202) smartos-ia32 (4/203) smartos-x64 (7/203) windows-ia32 (5/202) linux-ia32 (2/203) osx-ia32 (2/204) http://jenkins.nodejs.org/job/libuv-master-gyp/363/","date":"2013-12-31T00:09:11.488Z","type":"message"}
{"nick":"tjfontaine","message":"node needs to continue to focus on being correct, and not introducing new performance regressions -- but I'm unconvinced it's worth our time in the short term to focus on introducing a rewrite now for something that is generally solvable from npm","date":"2013-12-31T00:09:17.587Z","type":"message"}
{"nick":"tjfontaine","message":"Domenic_: it's not about that","date":"2013-12-31T00:09:22.994Z","type":"message"}
{"nick":"petka_","message":"but it wouldn't be as accessible from npm, I mean I don't really have time to market it ","date":"2013-12-31T00:10:01.249Z","type":"message"}
{"nick":"tjfontaine","message":"Domenic_: it's not dimissing it because it's not used in core, it's not dismissing it at all -- it's a question of priorities","date":"2013-12-31T00:10:03.064Z","type":"message"}
{"nick":"petka_","message":"(or skill :P)","date":"2013-12-31T00:10:16.226Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-31T00:10:22.657Z","type":"quit"}
{"nick":"thlorenz","date":"2013-12-31T00:10:56.500Z","type":"join"}
{"nick":"tjfontaine","message":"if url.parse were somethign that node itself was forcing on users in a hot path it would be crucial and critical to be evaluating all solutions, if there's another core comitter that wants to take this on as their pet project that's fine -- but url parsing is an important part to get *right*","date":"2013-12-31T00:11:29.895Z","type":"message"}
{"nick":"mmalecki","message":"ideally, the tests cover all the semantic catches :P","date":"2013-12-31T00:14:37.332Z","type":"message"}
{"nick":"tjfontaine","message":"mmalecki: in a perfect world, yes","date":"2013-12-31T00:14:48.447Z","type":"message"}
{"nick":"tjfontaine","message":"and of our coverage, url is some of our best","date":"2013-12-31T00:15:05.507Z","type":"message"}
{"nick":"thlorenz","reason":"Ping timeout: 245 seconds","date":"2013-12-31T00:15:08.373Z","type":"quit"}
{"nick":"tjfontaine","message":"mostly because the rfc covers a lot of it","date":"2013-12-31T00:15:14.616Z","type":"message"}
{"nick":"tjfontaine","message":"that doesn't mean we haven't gotten it wrong in the past","date":"2013-12-31T00:15:25.156Z","type":"message"}
{"nick":"tjfontaine","message":"in subtle ways","date":"2013-12-31T00:15:32.567Z","type":"message"}
{"nick":"mmalecki","message":"yeah, I saw those, they are pretty impressive really","date":"2013-12-31T00:15:46.831Z","type":"message"}
{"nick":"tjfontaine","message":"and there are people using node and url.parse in important ways that do require stability in the behavior","date":"2013-12-31T00:16:02.165Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1683 \u00037UNSTABLE\u000f linux-x64 (5/606) osx-x64 (1/606) linux-ia32 (6/606) smartos-x64 (8/606) smartos-ia32 (7/606) osx-ia32 (1/606) http://jenkins.nodejs.org/job/nodejs-v0.10/1683/","date":"2013-12-31T00:16:45.688Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #407 \u00037UNSTABLE\u000f windows-x64 (11/606) windows-ia32 (12/606) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/407/","date":"2013-12-31T00:16:51.678Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: ping","date":"2013-12-31T00:17:50.575Z","type":"message"}
{"nick":"othiym23","message":"TIL that Marak is apparently a \"Node.js sensei\"","date":"2013-12-31T00:17:58.380Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: pong","date":"2013-12-31T00:17:58.547Z","type":"message"}
{"nick":"othiym23","message":"I like to think of myself more as an advanced Node.js padawan","date":"2013-12-31T00:18:08.571Z","type":"message"}
{"nick":"othiym23","message":"or maybe, you know, somebody who uses Node to get his job done","date":"2013-12-31T00:18:19.368Z","type":"message"}
{"nick":"tjfontaine","message":"that's how I view myself","date":"2013-12-31T00:18:42.913Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: forgot whether I talked to you about this, but I noticed that node is cheating the event loop.","date":"2013-12-31T00:19:14.136Z","type":"message"}
{"nick":"tjfontaine","message":"define \"cheat\"","date":"2013-12-31T00:19:21.681Z","type":"message"}
{"nick":"tjfontaine","message":"I hope you mean \"nextTick\" :P","date":"2013-12-31T00:19:32.663Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: for example. when we run Server#close() the callback should be run in the uv__run_closing_handles() phase of the eloop.","date":"2013-12-31T00:19:35.573Z","type":"message"}
{"nick":"trevnorris","message":"but instead it's queued. and even if the callback were queued via setImmediate, it would still fire in the \"technical\" wrong order","date":"2013-12-31T00:19:57.084Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: node should not be calling anything with two _'s in it","date":"2013-12-31T00:19:57.513Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-12-31T00:20:13.128Z","type":"message"}
{"nick":"trevnorris","message":"what are you talking about? everything runs in a phase that has two __ in it.","date":"2013-12-31T00:20:18.343Z","type":"message"}
{"nick":"tjfontaine","message":"it was a silly joke, anyway","date":"2013-12-31T00:20:31.109Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #810 \u00037UNSTABLE\u000f smartos-x64 (10/687) smartos-ia32 (7/687) osx-ia32 (2/687) centos-ia32 (2/687) ubuntu-ia32 (1/687) centos-x64 (3/687) http://jenkins.nodejs.org/job/nodejs-master/810/","date":"2013-12-31T00:21:01.902Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: can you be more explicit about what you're talking about?","date":"2013-12-31T00:21:15.264Z","type":"message"}
{"nick":"trevnorris","message":"when you run Server#close() it then queues up an emit() in nextTick (but that's implementation detail)","date":"2013-12-31T00:21:50.744Z","type":"message"}
{"nick":"trevnorris","message":"when the emit should happen until the run_closing_handles() has finished running","date":"2013-12-31T00:22:10.852Z","type":"message"}
{"nick":"tjfontaine","message":"should it?","date":"2013-12-31T00:22:23.832Z","type":"message"}
{"nick":"trevnorris","message":"so right now we \"close\" the handle and remove the js reference, but it still exists until the eloop ends.","date":"2013-12-31T00:22:36.395Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: the kicker is, even if we setImmediate the callback, those calbacks run _before_ run_closing_handles(), so it still wouldn't be closed at that point.","date":"2013-12-31T00:23:38.189Z","type":"message"}
{"nick":"tjfontaine","message":"define: 'it', the libuv uv_handle_t?","date":"2013-12-31T00:23:40.633Z","type":"message"}
{"nick":"trevnorris","message":"yeah. the uv_handle_t","date":"2013-12-31T00:24:08.165Z","type":"message"}
{"nick":"tjfontaine","message":"I'm not sure where the cheating is happening, and where that might be causing problems","date":"2013-12-31T00:24:09.997Z","type":"message"}
{"nick":"tjfontaine","message":"indutny: if you give me the high sign on libuv v0.11 I will do a release of it and therefore node tonight","date":"2013-12-31T00:24:55.784Z","type":"message"}
{"nick":"rmg","date":"2013-12-31T00:25:22.059Z","type":"join"}
{"nick":"trevnorris","message":"Server#close() basically just does server._handle.close(), then server._handle = null;","date":"2013-12-31T00:25:42.429Z","type":"message"}
{"nick":"trevnorris","message":" server._handle.close() accepts a callback, but instead we're emitting the \"close\" event sooner than uv's had time to properly close the uv_handle_t","date":"2013-12-31T00:26:27.628Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: yes, we've signalled our intent, the event emission in this case is ours and not something to be delivered from libuv","date":"2013-12-31T00:26:32.144Z","type":"message"}
{"nick":"trevnorris","message":"that doesn't make sense to me. imo we shouldn't emit \"close\" until uv has signaled back that the uv_handle_t has in fact been closed.","date":"2013-12-31T00:27:06.622Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: so yes, since we know the intent at this point we can emit the event sooner than when libuv has closed it","date":"2013-12-31T00:27:07.009Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: both are valid to me, it is not unreasonable to simplify the code paths, but it also makes sense to signal as soon as we know it's ok to do so","date":"2013-12-31T00:28:24.233Z","type":"message"}
{"nick":"trevnorris","message":"and for me it's only ok to do so when the layer under us has given the ok.","date":"2013-12-31T00:28:50.602Z","type":"message"}
{"nick":"rmg","reason":"Ping timeout: 245 seconds","date":"2013-12-31T00:29:43.320Z","type":"quit"}
{"nick":"trevnorris","message":"thought experiment. i create a Server instance, then close it in the nextTick, then create a new one in the close callback. since the callback is nextTick and we create a new one then memory is going to fill up with a bunch of uv_handle_t's hanging around.","date":"2013-12-31T00:30:11.034Z","type":"message"}
{"nick":"trevnorris","message":"though, again, just a thought experiment.","date":"2013-12-31T00:30:23.116Z","type":"message"}
{"nick":"tjfontaine","message":"create a bunch of things and there will be a bunch of a lot of things hanging around :)","date":"2013-12-31T00:31:00.004Z","type":"message"}
{"nick":"trevnorris","message":"unless the callback was called when uv gave the all clear, then there'd only be one created at a time.","date":"2013-12-31T00:31:32.226Z","type":"message"}
{"nick":"trevnorris","message":"sorry, just don't like implicit order of operations. like it more when things run when the code makes it look like it should run.","date":"2013-12-31T00:31:55.884Z","type":"message"}
{"nick":"tjfontaine","message":"anyway, if changing the code to be more simple is a bonus, and if that's not changing ordering semantics for consumers and/or adding performance overhead because now they're waiting a more indefinite amount of time for that event -- we should explore it","date":"2013-12-31T00:32:16.080Z","type":"message"}
{"nick":"tjfontaine","message":"it's not implicit, in fact it's very explicit :)","date":"2013-12-31T00:32:25.754Z","type":"message"}
{"nick":"trevnorris","message":"when I read the code in uv_run and saw run_closing_handles() I first thought, oh, that's when all the Server#close() callbacks are called.","date":"2013-12-31T00:33:02.551Z","type":"message"}
{"nick":"trevnorris","message":"but that isn't the case.","date":"2013-12-31T00:33:07.524Z","type":"message"}
{"nick":"tjfontaine","message":"that's the case when something externally may have closed the socket","date":"2013-12-31T00:33:27.573Z","type":"message"}
{"nick":"tjfontaine","message":"if it supplied the callback","date":"2013-12-31T00:33:40.331Z","type":"message"}
{"nick":"trevnorris","message":"how do you mean?","date":"2013-12-31T00:33:53.048Z","type":"message"}
{"nick":"tjfontaine","message":"I just mean, someone/thing using libuv may decide to operate with that mechanism","date":"2013-12-31T00:34:45.987Z","type":"message"}
{"nick":"spion","reason":"\"Leaving\"","date":"2013-12-31T00:34:57.679Z","type":"part"}
{"nick":"tjfontaine","message":"I'm not sure it's necessary for node to do it, as .close in this case has been called by user code","date":"2013-12-31T00:35:28.931Z","type":"message"}
{"nick":"tjfontaine","message":"there's no reason to necessarily wait for notification from the platform that the socket has indeed been closed","date":"2013-12-31T00:35:51.214Z","type":"message"}
{"nick":"octetcloud","message":"@tjfontaine: if I address the small format nits on #6727, and remove the incomplete change (\"a normal disconnect should not error\"), can I get this in tonight? if so, I'll do it tomorrow","date":"2013-12-31T00:36:31.583Z","type":"message"}
{"nick":"wolfeidau","reason":"Ping timeout: 240 seconds","date":"2013-12-31T00:36:59.793Z","type":"quit"}
{"nick":"tjfontaine","message":"octetcloud: yup, I think that's doable","date":"2013-12-31T00:37:02.274Z","type":"message"}
{"nick":"tjfontaine","message":"octetcloud: I absolutely want to get the fixes and the new tests in","date":"2013-12-31T00:37:15.222Z","type":"message"}
{"nick":"octetcloud","message":"ok. will do right away, it means rebasing away one commit, so some comments kindof dissappear, that's ok?","date":"2013-12-31T00:37:36.151Z","type":"message"}
{"nick":"tjfontaine","message":"yup, I can recover them from email","date":"2013-12-31T00:37:50.098Z","type":"message"}
{"nick":"wolfeidau","date":"2013-12-31T00:40:38.898Z","type":"join"}
{"nick":"octetcloud","message":"ok, and will libuv get updated? or has it? I don't see the uv version that fixes node #6749 (an assert) in v0.10 of node, or is it only 0.11 going out?","date":"2013-12-31T00:42:09.468Z","type":"message"}
{"nick":"tjfontaine","message":"libuv will be updated, I do a release of libuv and upgrade before every node release","date":"2013-12-31T00:42:27.276Z","type":"message"}
{"nick":"octetcloud","message":"great, thanks.","date":"2013-12-31T00:43:57.354Z","type":"message"}
{"nick":"kazupon","date":"2013-12-31T00:44:31.935Z","type":"join"}
{"nick":"tjfontaine","message":"octetcloud: fwiw that fix went in v0.10 of libuv, and then bert merged v0.10 into master","date":"2013-12-31T00:44:39.792Z","type":"message"}
{"nick":"tjfontaine","message":"octetcloud: https://github.com/joyent/libuv/commit/140c863ff096a7998fb5528480fc7eccfd837165","date":"2013-12-31T00:44:55.951Z","type":"message"}
{"nick":"tjfontaine","message":"or rather it should have ...","date":"2013-12-31T00:45:23.217Z","type":"message"}
{"nick":"tjfontaine","message":"ah it was https://github.com/joyent/libuv/commit/46a06021415009e0e2918966b926d20bc6f0422c","date":"2013-12-31T00:45:51.436Z","type":"message"}
{"nick":"tjfontaine","message":"anyway","date":"2013-12-31T00:45:54.492Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2013-12-31T00:49:45.779Z","type":"quit"}
{"nick":"stagas","date":"2013-12-31T00:54:31.472Z","type":"join"}
{"nick":"groundwater","message":"any gurus here know how to grab a stack trace out of a \"RangeError: Maximum call stack size exceeded\"","date":"2013-12-31T00:57:54.724Z","type":"message"}
{"nick":"tjfontaine","message":"--abort-on-uncaught-exception","date":"2013-12-31T01:03:18.596Z","type":"message"}
{"nick":"groundwater","message":"tjfontaine: thanks!","date":"2013-12-31T01:06:50.884Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-12-31T01:10:27.572Z","type":"quit"}
{"nick":"groundwater","message":"tjfontaine: looks like something is catching the exception","date":"2013-12-31T01:21:46.081Z","type":"message"}
{"nick":"groundwater","message":"i'm at maximum levels of inception here, i don't even wanna describe it","date":"2013-12-31T01:22:03.275Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-31T01:22:45.430Z","type":"quit"}
{"nick":"thlorenz","date":"2013-12-31T01:23:47.316Z","type":"join"}
{"nick":"trevnorris","message":"groundwater: have a script that replicates this?","date":"2013-12-31T01:25:24.726Z","type":"message"}
{"nick":"tjfontaine","message":"I think ...","date":"2013-12-31T01:25:43.566Z","type":"message"}
{"nick":"tjfontaine","message":"isn't RangeError supposed to be a FatalError? a fixed node should handle that","date":"2013-12-31T01:26:13.883Z","type":"message"}
{"nick":"othiym23","message":"Phusion Passenger may or may not be in the mix here, and may or may not have its own ideas about how Node things want to be done","date":"2013-12-31T01:26:38.168Z","type":"message"}
{"nick":"othiym23","message":"allegedly","date":"2013-12-31T01:26:39.830Z","type":"message"}
{"nick":"othiym23","message":"perhaps","date":"2013-12-31T01:26:41.449Z","type":"message"}
{"nick":"tjfontaine","message":"hmm no I guess not","date":"2013-12-31T01:26:42.170Z","type":"message"}
{"nick":"groundwater","message":"i'm trying to figure out why an app being run through Passenger throws a fit combined with a certain express body parser, and the NR agent","date":"2013-12-31T01:26:45.045Z","type":"message"}
{"nick":"tjfontaine","message":"you poor fucking souls","date":"2013-12-31T01:27:00.701Z","type":"message"}
{"nick":"groundwater","message":"ruby, c, and node are all in the mix here","date":"2013-12-31T01:27:23.556Z","type":"message"}
{"nick":"othiym23","message":"we're not using it, we're just trying to keep it from fuckin' up the program for our users","date":"2013-12-31T01:27:30.841Z","type":"message"}
{"nick":"tjfontaine","message":"are you able to do this on smartos such that we can play dtrace fun games?","date":"2013-12-31T01:27:36.074Z","type":"message"}
{"nick":"tjfontaine","message":"othiym23: ya, I know -- that's why I feel for you","date":"2013-12-31T01:27:48.656Z","type":"message"}
{"nick":"hz","date":"2013-12-31T01:27:59.358Z","type":"quit"}
{"nick":"groundwater","message":"passenger needs to be compiled, and i'm trying to avoid that rabbit hole","date":"2013-12-31T01:28:14.556Z","type":"message"}
{"nick":"tjfontaine","message":"I see","date":"2013-12-31T01:28:24.093Z","type":"message"}
{"nick":"groundwater","message":"but it may be the path of least resistance at htis point","date":"2013-12-31T01:28:25.092Z","type":"message"}
{"nick":"tjfontaine","message":"because you may be able to use the pid provider to grab the Error creation and jstack()","date":"2013-12-31T01:28:58.321Z","type":"message"}
{"nick":"groundwater","message":"i'm gonna try a few more hacks, then jump to that","date":"2013-12-31T01:29:26.132Z","type":"message"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-12-31T01:32:26.985Z","type":"quit"}
{"nick":"stagas","date":"2013-12-31T01:33:08.647Z","type":"join"}
{"nick":"octetcloud","message":"@tjfontaine: #6727 isn't going to happen tonight, test-debug-signal-cluster.js is intermittently failing, I'll need to bisect back to see what I did. it'll have to be next round. sorry.","date":"2013-12-31T01:40:21.120Z","type":"message"}
{"nick":"st_luke","date":"2013-12-31T01:41:27.933Z","type":"join"}
{"nick":"kazupon","date":"2013-12-31T01:45:17.070Z","type":"join"}
{"nick":"tjfontaine","message":"octetcloud: that's ok, no worries","date":"2013-12-31T01:50:47.911Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: wb!","date":"2013-12-31T01:54:24.124Z","type":"message"}
{"nick":"tjfontaine","message":"thanks!","date":"2013-12-31T01:55:52.911Z","type":"message"}
{"nick":"mikeal","date":"2013-12-31T01:59:29.810Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-12-31T02:18:12.979Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2013-12-31T02:19:03.855Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-12-31T02:19:22.306Z","type":"quit"}
{"nick":"sdeath","date":"2013-12-31T02:20:23.734Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-31T02:27:34.541Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-12-31T02:28:49.352Z","type":"join"}
{"nick":"sdeath","reason":"Remote host closed the connection","date":"2013-12-31T02:29:01.048Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-12-31T02:41:37.266Z","type":"quit"}
{"nick":"st_luke","date":"2013-12-31T02:43:13.838Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-12-31T02:57:34.201Z","type":"quit"}
{"nick":"ladymurr","date":"2013-12-31T02:59:53.730Z","type":"join"}
{"nick":"st_luke","date":"2013-12-31T03:00:23.835Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 248 seconds","date":"2013-12-31T03:03:01.649Z","type":"quit"}
{"nick":"st_luke_","date":"2013-12-31T03:04:00.782Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 240 seconds","date":"2013-12-31T03:04:38.643Z","type":"quit"}
{"nick":"inolen","date":"2013-12-31T03:06:21.638Z","type":"join"}
{"nick":"st_luke_","reason":"Ping timeout: 240 seconds","date":"2013-12-31T03:08:14.607Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-31T03:15:19.175Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T03:15:22.984Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2013-12-31T03:20:04.844Z","type":"quit"}
{"nick":"felicity","reason":"Quit: ircII EPIC5-1.1.5 -- Accept specific limitations on /who.","date":"2013-12-31T03:32:29.471Z","type":"quit"}
{"nick":"felicity","date":"2013-12-31T03:35:55.928Z","type":"join"}
{"nick":"st_luke","date":"2013-12-31T03:36:47.497Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 272 seconds","date":"2013-12-31T03:42:23.299Z","type":"quit"}
{"nick":"AlexisMocha","reason":"Ping timeout: 260 seconds","date":"2013-12-31T03:48:03.798Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-12-31T04:06:08.728Z","type":"quit"}
{"nick":"mikeal","date":"2013-12-31T04:10:43.923Z","type":"join"}
{"nick":"calvinfo","date":"2013-12-31T04:16:06.489Z","type":"join"}
{"nick":"kazupon","date":"2013-12-31T04:16:23.939Z","type":"join"}
{"nick":"calvinfo","reason":"Ping timeout: 245 seconds","date":"2013-12-31T04:20:33.325Z","type":"quit"}
{"nick":"ladymurr","reason":"Remote host closed the connection","date":"2013-12-31T04:20:56.436Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2013-12-31T04:20:58.841Z","type":"quit"}
{"nick":"AlexisMocha","date":"2013-12-31T04:23:19.671Z","type":"join"}
{"nick":"mikeal1","date":"2013-12-31T04:24:27.453Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 272 seconds","date":"2013-12-31T04:27:37.798Z","type":"quit"}
{"nick":"abraxas","date":"2013-12-31T04:28:58.449Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 240 seconds","date":"2013-12-31T04:33:26.981Z","type":"quit"}
{"nick":"rnowak_","reason":"Ping timeout: 272 seconds","date":"2013-12-31T04:34:13.785Z","type":"quit"}
{"nick":"rnowak","date":"2013-12-31T04:34:41.313Z","type":"join"}
{"nick":"calvinfo","date":"2013-12-31T04:45:53.056Z","type":"join"}
{"nick":"mikeal1","reason":"Quit: Leaving.","date":"2013-12-31T04:55:55.537Z","type":"quit"}
{"nick":"st_luke","date":"2013-12-31T05:00:04.316Z","type":"join"}
{"nick":"thlorenz","message":"got like 70% of the libuv book examples adapted to the latest API I think its only about 5 more to go https://github.com/thlorenz/libuv-dox/tree/master/examples","date":"2013-12-31T05:02:19.544Z","type":"message"}
{"nick":"AlexisMocha","reason":"Ping timeout: 252 seconds","date":"2013-12-31T05:07:23.650Z","type":"quit"}
{"nick":"rmg","date":"2013-12-31T05:09:35.559Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-12-31T05:11:22.913Z","type":"nick"}
{"nick":"rmg","reason":"Ping timeout: 252 seconds","date":"2013-12-31T05:14:15.013Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-31T05:16:16.802Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T05:17:17.793Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 248 seconds","date":"2013-12-31T05:23:49.628Z","type":"quit"}
{"nick":"calvinfo","date":"2013-12-31T05:23:53.608Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-12-31T05:29:49.074Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-31T05:32:02.243Z","type":"quit"}
{"nick":"calvinfo","date":"2013-12-31T05:36:51.536Z","type":"part"}
{"nick":"m76","date":"2013-12-31T05:43:21.248Z","type":"join"}
{"nick":"stagas","date":"2013-12-31T05:46:55.793Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 245 seconds","date":"2013-12-31T06:17:13.309Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T06:19:46.798Z","type":"join"}
{"nick":"mikeal","date":"2013-12-31T06:22:56.146Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 248 seconds","date":"2013-12-31T06:24:37.628Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #408 \u00037UNSTABLE\u000f windows-x64 (11/606) windows-ia32 (11/606) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/408/","date":"2013-12-31T06:41:14.846Z","type":"message"}
{"nick":"zz_karupanerura","new_nick":"karupanerura","date":"2013-12-31T06:48:27.497Z","type":"nick"}
{"nick":"M28","reason":"Read error: Connection reset by peer","date":"2013-12-31T07:03:20.266Z","type":"quit"}
{"nick":"M28_","date":"2013-12-31T07:03:25.594Z","type":"join"}
{"nick":"kazupon","date":"2013-12-31T07:21:12.151Z","type":"join"}
{"nick":"vptr","reason":"Ping timeout: 260 seconds","date":"2013-12-31T07:21:19.780Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2013-12-31T07:25:57.018Z","type":"quit"}
{"nick":"hallsy","date":"2013-12-31T07:43:07.666Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-12-31T07:45:17.026Z","type":"quit"}
{"nick":"hallsy","reason":"Client Quit","date":"2013-12-31T07:45:23.212Z","type":"quit"}
{"nick":"hallsy","date":"2013-12-31T07:45:53.934Z","type":"join"}
{"nick":"hallsy","message":"Hi. Am I right in thinking uv__inotify_read won't pass on IN_Q_OVERFLOW ?","date":"2013-12-31T07:45:58.642Z","type":"message"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-12-31T07:55:43.388Z","type":"quit"}
{"nick":"M28_","new_nick":"M28","date":"2013-12-31T07:58:51.417Z","type":"nick"}
{"nick":"m76","reason":"Read error: Connection reset by peer","date":"2013-12-31T08:16:16.684Z","type":"quit"}
{"nick":"m76","date":"2013-12-31T08:16:44.693Z","type":"join"}
{"nick":"rendar","date":"2013-12-31T08:19:06.068Z","type":"join"}
{"nick":"`3E|GONE","new_nick":"`3rdEden","date":"2013-12-31T08:22:14.887Z","type":"nick"}
{"nick":"kazupon","date":"2013-12-31T08:22:17.166Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-12-31T08:27:18.016Z","type":"quit"}
{"nick":"calvinfo","date":"2013-12-31T08:35:20.406Z","type":"join"}
{"nick":"hallsy","reason":"Quit: Page closed","date":"2013-12-31T08:47:11.083Z","type":"quit"}
{"nick":"AlexisMocha","date":"2013-12-31T08:59:53.712Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-31T09:08:13.380Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 260 seconds","date":"2013-12-31T09:18:27.794Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T09:23:24.064Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-12-31T09:28:21.021Z","type":"quit"}
{"nick":"indutny","message":"heya","date":"2013-12-31T09:43:51.904Z","type":"message"}
{"nick":"mmalecki","message":"ahoy!","date":"2013-12-31T09:44:40.897Z","type":"message"}
{"nick":"indutny","message":"ohai","date":"2013-12-31T09:46:46.549Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Benjamin Waters\u000f \u00037master\u000f * \u000258d6ca3\u0002 : doc: Fix doc heading for 'response' event - http://git.io/RmVlTg","date":"2013-12-31T09:46:47.248Z","type":"message"}
{"nick":"indutny","message":"how are you?","date":"2013-12-31T09:46:48.517Z","type":"message"}
{"nick":"rmg","date":"2013-12-31T09:51:27.359Z","type":"join"}
{"nick":"hz","date":"2013-12-31T09:52:15.731Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 248 seconds","date":"2013-12-31T09:56:21.628Z","type":"quit"}
{"nick":"mmalecki","message":"I'm good! writing monitoring tool for haproxy","date":"2013-12-31T09:58:03.925Z","type":"message"}
{"nick":"mmalecki","message":"how are you Fedor?","date":"2013-12-31T09:58:09.652Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #811 \u00037UNSTABLE\u000f smartos-x64 (8/687) smartos-ia32 (6/687) centos-ia32 (2/687) ubuntu-x64 (2/687) ubuntu-ia32 (1/687) centos-x64 (1/687) http://jenkins.nodejs.org/job/nodejs-master/811/","date":"2013-12-31T10:00:51.456Z","type":"message"}
{"nick":"timoxley","date":"2013-12-31T10:11:29.264Z","type":"join"}
{"nick":"indutny","message":"mmalecki: nice :)","date":"2013-12-31T10:17:47.449Z","type":"message"}
{"nick":"indutny","message":"I'm good too","date":"2013-12-31T10:17:51.144Z","type":"message"}
{"nick":"indutny","message":"preparing for a new year celebrations","date":"2013-12-31T10:17:57.328Z","type":"message"}
{"nick":"indutny","message":"and triaging some git issues","date":"2013-12-31T10:18:01.704Z","type":"message"}
{"nick":"indutny","message":"s/git/githu","date":"2013-12-31T10:18:06.164Z","type":"message"}
{"nick":"mmalecki","message":"same! I'm making chocolate truffles for the party","date":"2013-12-31T10:18:17.553Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-12-31T10:20:53.248Z","type":"message"}
{"nick":"indutny","message":"cool","date":"2013-12-31T10:20:54.199Z","type":"message"}
{"nick":"kazupon","date":"2013-12-31T10:24:17.804Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-12-31T10:29:08.682Z","type":"quit"}
{"nick":"inolen","reason":"Ping timeout: 246 seconds","date":"2013-12-31T10:32:09.313Z","type":"quit"}
{"nick":"insertcoffee","date":"2013-12-31T10:32:25.878Z","type":"join"}
{"nick":"inolen","date":"2013-12-31T10:36:08.887Z","type":"join"}
{"nick":"insertcoffee","reason":"Ping timeout: 240 seconds","date":"2013-12-31T10:43:17.994Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1684 \u00037UNSTABLE\u000f linux-x64 (2/606) osx-x64 (2/606) linux-ia32 (2/606) smartos-x64 (6/606) smartos-ia32 (6/606) osx-ia32 (2/606) http://jenkins.nodejs.org/job/nodejs-v0.10/1684/","date":"2013-12-31T10:51:11.628Z","type":"message"}
{"nick":"insertcoffee","date":"2013-12-31T11:08:04.751Z","type":"join"}
{"nick":"insertcoffee","reason":"Max SendQ exceeded","date":"2013-12-31T11:09:52.724Z","type":"quit"}
{"nick":"insertcoffee","date":"2013-12-31T11:11:02.161Z","type":"join"}
{"nick":"insertcoffee","reason":"Read error: Connection reset by peer","date":"2013-12-31T11:11:13.897Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-12-31T11:19:16.650Z","type":"quit"}
{"nick":"inolen","date":"2013-12-31T11:19:38.648Z","type":"join"}
{"nick":"inolen1","date":"2013-12-31T11:20:10.684Z","type":"join"}
{"nick":"inolen","reason":"Read error: Connection reset by peer","date":"2013-12-31T11:20:11.235Z","type":"quit"}
{"nick":"inolen1","reason":"Ping timeout: 272 seconds","date":"2013-12-31T11:25:15.984Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T11:25:19.070Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-12-31T11:29:59.372Z","type":"quit"}
{"nick":"Chip_Zero","reason":"Changing host","date":"2013-12-31T11:46:19.957Z","type":"quit"}
{"nick":"Chip_Zero","date":"2013-12-31T11:46:20.105Z","type":"join"}
{"nick":"timoxley","reason":"Ping timeout: 240 seconds","date":"2013-12-31T11:58:00.212Z","type":"quit"}
{"nick":"timoxley","date":"2013-12-31T11:58:14.875Z","type":"join"}
{"nick":"karupanerura","new_nick":"zz_karupanerura","date":"2013-12-31T12:03:52.637Z","type":"nick"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2013-12-31T12:14:23.746Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T12:26:22.164Z","type":"join"}
{"nick":"bajtos","date":"2013-12-31T12:28:44.730Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-12-31T12:30:57.013Z","type":"quit"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-12-31T12:51:59.251Z","type":"quit"}
{"nick":"timoxley","date":"2013-12-31T13:04:34.534Z","type":"join"}
{"nick":"daviddias","date":"2013-12-31T13:08:01.551Z","type":"join"}
{"nick":"m76","reason":"Read error: Connection reset by peer","date":"2013-12-31T13:20:46.270Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T13:27:21.795Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-12-31T13:32:17.689Z","type":"quit"}
{"nick":"timoxley_","date":"2013-12-31T14:06:30.637Z","type":"join"}
{"nick":"kazupon","date":"2013-12-31T14:07:38.936Z","type":"join"}
{"nick":"timoxley","reason":"Ping timeout: 272 seconds","date":"2013-12-31T14:09:23.340Z","type":"quit"}
{"nick":"timoxley_","reason":"Remote host closed the connection","date":"2013-12-31T14:14:08.790Z","type":"quit"}
{"nick":"timoxley","date":"2013-12-31T14:14:44.541Z","type":"join"}
{"nick":"bajtos","date":"2013-12-31T14:17:21.935Z","type":"join"}
{"nick":"timoxley","reason":"Ping timeout: 245 seconds","date":"2013-12-31T14:19:18.629Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-12-31T14:21:49.255Z","type":"quit"}
{"nick":"mikeal","reason":"*.net *.split","date":"2013-12-31T14:29:32.410Z","type":"quit"}
{"nick":"petka_","reason":"*.net *.split","date":"2013-12-31T14:29:32.410Z","type":"quit"}
{"nick":"mikeal","date":"2013-12-31T14:35:09.331Z","type":"join"}
{"nick":"petka_","date":"2013-12-31T14:35:09.486Z","type":"join"}
{"nick":"pachet","date":"2013-12-31T14:40:54.823Z","type":"join"}
{"nick":"pachet","reason":"Changing host","date":"2013-12-31T14:40:54.823Z","type":"quit"}
{"nick":"pachet","date":"2013-12-31T14:40:54.823Z","type":"join"}
{"nick":"thlorenz","date":"2013-12-31T14:44:18.480Z","type":"join"}
{"nick":"hueniverse","reason":"Ping timeout: 252 seconds","date":"2013-12-31T14:54:03.736Z","type":"quit"}
{"nick":"piscisaureus","date":"2013-12-31T15:11:59.050Z","type":"join"}
{"nick":"m76","date":"2013-12-31T15:12:38.887Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-12-31T15:15:35.670Z","type":"nick"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #812 \u00037UNSTABLE\u000f smartos-x64 (7/687) smartos-ia32 (6/687) centos-ia32 (3/687) ubuntu-x64 (2/687) ubuntu-ia32 (2/687) centos-x64 (2/687) http://jenkins.nodejs.org/job/nodejs-master/812/","date":"2013-12-31T15:21:36.933Z","type":"message"}
{"nick":"kazupon","date":"2013-12-31T15:22:38.882Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-31T15:22:56.274Z","type":"quit"}
{"nick":"vptr","date":"2013-12-31T15:26:09.433Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 248 seconds","date":"2013-12-31T15:29:09.632Z","type":"quit"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-12-31T15:30:00.582Z","type":"quit"}
{"nick":"bajtos","date":"2013-12-31T15:31:20.214Z","type":"join"}
{"nick":"timoxley","date":"2013-12-31T15:34:38.917Z","type":"join"}
{"nick":"bajtos","reason":"Read error: Connection reset by peer","date":"2013-12-31T15:45:44.670Z","type":"quit"}
{"nick":"potanin","date":"2013-12-31T15:46:40.735Z","type":"join"}
{"nick":"piscisaureus","reason":"Read error: Connection reset by peer","date":"2013-12-31T15:48:51.592Z","type":"quit"}
{"nick":"piscisaureus","date":"2013-12-31T15:49:38.822Z","type":"join"}
{"nick":"thlorenz","date":"2013-12-31T15:50:08.462Z","type":"join"}
{"nick":"potanin","reason":"K-Lined","date":"2013-12-31T16:01:42.842Z","type":"quit"}
{"nick":"swajr","date":"2013-12-31T16:11:27.638Z","type":"join"}
{"nick":"M28_","date":"2013-12-31T16:12:27.839Z","type":"join"}
{"nick":"[m76]","date":"2013-12-31T16:13:32.764Z","type":"join"}
{"nick":"AvianFlu","date":"2013-12-31T16:13:34.074Z","type":"join"}
{"nick":"[m76]","reason":"Quit: KVIrc 4.0.4 Insomnia http://www.kvirc.net/","date":"2013-12-31T16:20:03.650Z","type":"quit"}
{"nick":"[m76]","date":"2013-12-31T16:20:27.230Z","type":"join"}
{"nick":"[m76]","reason":"Client Quit","date":"2013-12-31T16:20:56.431Z","type":"quit"}
{"nick":"[m76]","date":"2013-12-31T16:21:16.236Z","type":"join"}
{"nick":"[m76]","reason":"Client Quit","date":"2013-12-31T16:21:27.306Z","type":"quit"}
{"nick":"[m76]","date":"2013-12-31T16:21:50.194Z","type":"join"}
{"nick":"hueniverse","date":"2013-12-31T16:22:16.013Z","type":"join"}
{"nick":"swaj","reason":"Ping timeout: 240 seconds","date":"2013-12-31T16:23:06.917Z","type":"quit"}
{"nick":"m76","reason":"Ping timeout: 240 seconds","date":"2013-12-31T16:23:06.917Z","type":"quit"}
{"nick":"M28","reason":"Quit: No Ping reply in 180 seconds.","date":"2013-12-31T16:23:47.586Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T16:25:09.995Z","type":"join"}
{"nick":"[m76]","reason":"Client Quit","date":"2013-12-31T16:25:14.002Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 260 seconds","date":"2013-12-31T16:30:07.856Z","type":"quit"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2013-12-31T16:53:30.774Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T17:08:18.943Z","type":"join"}
{"nick":"tjfontaine","message":"good morning node folk","date":"2013-12-31T17:09:29.775Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2013-12-31T17:13:19.847Z","type":"quit"}
{"nick":"tjfontaine","message":"indutny: all good for me to do libuv v0.11 release?","date":"2013-12-31T17:14:16.066Z","type":"message"}
{"nick":"M28_","new_nick":"M28","date":"2013-12-31T17:18:15.810Z","type":"nick"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-31T17:29:53.375Z","type":"quit"}
{"nick":"octetcloud","date":"2013-12-31T17:32:18.785Z","type":"join"}
{"nick":"piscisaureus","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-12-31T17:36:30.152Z","type":"quit"}
{"nick":"calvinfo","date":"2013-12-31T17:38:55.160Z","type":"join"}
{"nick":"tjfontaine","message":"octetcloud: morning","date":"2013-12-31T17:42:26.822Z","type":"message"}
{"nick":"octetcloud","message":"morning, tj","date":"2013-12-31T17:43:19.315Z","type":"message"}
{"nick":"tjfontaine","message":"how's things?","date":"2013-12-31T17:43:24.645Z","type":"message"}
{"nick":"octetcloud","message":"ok, just cleaning my email. saw your comments. haven't had time to look yet. are you waiting?","date":"2013-12-31T17:44:13.767Z","type":"message"}
{"nick":"tjfontaine","message":"not on you, no","date":"2013-12-31T17:44:23.090Z","type":"message"}
{"nick":"octetcloud","message":"good, I hate being on critical paths!","date":"2013-12-31T17:44:39.110Z","type":"message"}
{"nick":"tjfontaine","message":"I'll let you know if you ever are :)","date":"2013-12-31T17:44:48.182Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #411 \u00037UNSTABLE\u000f windows (4/202) osx (1/204) smartos (3/203) http://jenkins.nodejs.org/job/libuv-master/411/","date":"2013-12-31T17:53:51.773Z","type":"message"}
{"nick":"octetcloud","message":"Do unstable releases always get cut at same time as stable? Just wondering, seems like they do, but its not clear to me what release criteria isfor the master.","date":"2013-12-31T17:53:56.146Z","type":"message"}
{"nick":"tjfontaine","message":"we dont' have one, I'm not planning on doing another stable until next week","date":"2013-12-31T17:54:49.585Z","type":"message"}
{"nick":"tjfontaine","message":"though","date":"2013-12-31T17:54:53.465Z","type":"message"}
{"nick":"tjfontaine","message":"generally if I'm in the sequence of doing a release it's just as easy to do both","date":"2013-12-31T17:55:11.908Z","type":"message"}
{"nick":"octetcloud","message":"ok, and I guess goal for master is to be bug-free (hopefully), though feature IN-complete?","date":"2013-12-31T17:55:52.286Z","type":"message"}
{"nick":"tjfontaine","message":"the release criteria for unstables is generally \"how long since the last? (HOLY SHIT IT'S BEEN A WHILE)\" or \"oh wow that was a big feature that landed we should get people testing it ASAP\"","date":"2013-12-31T17:56:48.503Z","type":"message"}
{"nick":"tjfontaine","message":"but my overall goal is to be much more predictable in releases","date":"2013-12-31T17:57:02.990Z","type":"message"}
{"nick":"tjfontaine","message":"of both stables and unstables","date":"2013-12-31T17:57:13.818Z","type":"message"}
{"nick":"tjfontaine","message":"like make every Monday a release day, and then alternate between stable and unstable","date":"2013-12-31T17:57:37.500Z","type":"message"}
{"nick":"tjfontaine","message":"if there are commits in a branch that warrant a release","date":"2013-12-31T17:57:49.049Z","type":"message"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-31T18:07:55.584Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T18:09:11.397Z","type":"join"}
{"nick":"TooTallNate","date":"2013-12-31T18:11:11.921Z","type":"join"}
{"nick":"mikeal","date":"2013-12-31T18:14:16.973Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2013-12-31T18:14:18.321Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #366 \u00037UNSTABLE\u000f linux-x64 (2/687) smartos-ia32 (5/687) linux-ia32 (2/687) smartos-x64 (7/687) http://jenkins.nodejs.org/job/libuv-node-integration/366/","date":"2013-12-31T18:14:27.135Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: hm...","date":"2013-12-31T18:18:02.031Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: heya","date":"2013-12-31T18:18:03.504Z","type":"message"}
{"nick":"tjfontaine","message":"hey","date":"2013-12-31T18:18:11.603Z","type":"message"}
{"nick":"indutny","message":"I think I have few prs to land","date":"2013-12-31T18:18:15.737Z","type":"message"}
{"nick":"tjfontaine","message":"for libuv?","date":"2013-12-31T18:18:19.520Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2013-12-31T18:18:21.810Z","type":"message"}
{"nick":"indutny","message":"actually","date":"2013-12-31T18:18:23.084Z","type":"message"}
{"nick":"indutny","message":"they all landed, I think","date":"2013-12-31T18:18:25.899Z","type":"message"}
{"nick":"indutny","message":"let me check","date":"2013-12-31T18:18:27.137Z","type":"message"}
{"nick":"tjfontaine","message":"ok","date":"2013-12-31T18:18:29.382Z","type":"message"}
{"nick":"tjfontaine","message":"I'm goign to land this EACCESS cluster fix I think","date":"2013-12-31T18:18:40.618Z","type":"message"}
{"nick":"tjfontaine","message":"squashed and reworded the commit to:","date":"2013-12-31T18:18:52.329Z","type":"message"}
{"nick":"tjfontaine","message":"    cluster: report more errors to workers","date":"2013-12-31T18:18:57.005Z","type":"message"}
{"nick":"tjfontaine","message":"    Some errors for listening and binding to a socket were not properly","date":"2013-12-31T18:18:57.160Z","type":"message"}
{"nick":"tjfontaine","message":"    delivered to workers.","date":"2013-12-31T18:18:57.512Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-12-31T18:19:57.535Z","type":"message"}
{"nick":"indutny","message":"great","date":"2013-12-31T18:19:58.344Z","type":"message"}
{"nick":"indutny","message":"ok, I think everything has landed in libuv","date":"2013-12-31T18:20:11.730Z","type":"message"}
{"nick":"indutny","message":"let's do a release","date":"2013-12-31T18:20:13.766Z","type":"message"}
{"nick":"tjfontaine","message":"sounds good","date":"2013-12-31T18:20:17.902Z","type":"message"}
{"nick":"indutny","message":"yeah :P","date":"2013-12-31T18:21:56.009Z","type":"message"}
{"nick":"indutny","message":"I'll open a uv_try_write PR for node","date":"2013-12-31T18:22:07.636Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Fedor Indutny\u000f \u00037v0.10\u000f * \u00023e9f2e6\u0002 : cluster: report more errors to workers - http://git.io/015mAA","date":"2013-12-31T18:22:43.419Z","type":"message"}
{"nick":"indutny","message":"yay!","date":"2013-12-31T18:22:48.448Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: thank you","date":"2013-12-31T18:22:52.402Z","type":"message"}
{"nick":"tjfontaine","message":"thank you!","date":"2013-12-31T18:23:29.536Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-31T18:24:10.665Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033tjfontaine\u000f created tag v0.11.17 - http://git.io/lVGVdQ","date":"2013-12-31T18:27:59.477Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u00024ce9c39\u0002 : Now working on v0.11.18 (+1 more commits) - http://git.io/pBTimQ","date":"2013-12-31T18:28:01.552Z","type":"message"}
{"nick":"mikeal","date":"2013-12-31T18:28:25.882Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-12-31T18:31:07.192Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-review\u0002: #109 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/libuv-review/109/","date":"2013-12-31T18:31:28.564Z","type":"message"}
{"nick":"octetcloud","message":"@indutny: test-cluster-eaccess.js, not supported on windows because bug exists? or because listen fails differently? on windows, .listen('some-socket') will fail, too, but with error EACCES","date":"2013-12-31T18:32:28.204Z","type":"message"}
{"nick":"tjfontaine","message":"well, it is technically EADDRINUSE, but I will log in and see what the actual failure will be, but I have a feeling it'll be reported on the master not the worker","date":"2013-12-31T18:33:17.539Z","type":"message"}
{"nick":"octetcloud","message":"so I think minor tweak to assert will make test work on windows, but I don't have windows node build env to confirm, sorry","date":"2013-12-31T18:33:18.719Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u00028590f81\u0002 : uv: Upgrade to v0.11.17 - http://git.io/zLWpiA","date":"2013-12-31T18:34:47.748Z","type":"message"}
{"nick":"octetcloud","message":"tj: what do you mean? I just checked. Its EACCES for the path that the test is using (because the path doesn't start with //./pipe/)","date":"2013-12-31T18:36:13.059Z","type":"message"}
{"nick":"tjfontaine","message":"oh, interseting, I mean it's EADDRINUSE in the way he's doing it at the moment for unicies I meant","date":"2013-12-31T18:36:47.855Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #412 \u00037UNSTABLE\u000f windows (6/202) smartos (3/203) http://jenkins.nodejs.org/job/libuv-master/412/","date":"2013-12-31T18:36:53.858Z","type":"message"}
{"nick":"kazupon","date":"2013-12-31T18:38:29.945Z","type":"join"}
{"nick":"octetcloud","message":"right, yes. if you want to get EADDRINUSE, you can, but have to constuct a valid path, like //./pipe/some-name, and then the second listen on it will cause EADDRINUSE. maybe i'll try. it might be necessary to evade cluster... because its purpose in life is to allow multiple listens on the same \"address\"","date":"2013-12-31T18:38:35.425Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-31T18:38:47.733Z","type":"quit"}
{"nick":"tjfontaine","message":"well I'm fine with just using a different regex on windows","date":"2013-12-31T18:39:09.203Z","type":"message"}
{"nick":"tjfontaine","message":"building now on the windows scratch vm just to do the verification of the assumptions","date":"2013-12-31T18:39:40.530Z","type":"message"}
{"nick":"brson","date":"2013-12-31T18:40:30.011Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #364 \u00037UNSTABLE\u000f windows-x64 (4/202) osx-x64 (1/204) smartos-ia32 (3/203) smartos-x64 (4/203) windows-ia32 (4/202) linux-ia32 (1/203) osx-ia32 (1/204) http://jenkins.nodejs.org/job/libuv-master-gyp/364/","date":"2013-12-31T18:42:10.855Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1685 \u00037UNSTABLE\u000f linux-x64 (5/607) osx-x64 (2/607) linux-ia32 (5/607) smartos-x64 (7/607) smartos-ia32 (7/607) osx-ia32 (3/607) http://jenkins.nodejs.org/job/nodejs-v0.10/1685/","date":"2013-12-31T18:42:33.907Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #409 \u00037UNSTABLE\u000f windows-x64 (10/607) windows-ia32 (11/607) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/409/","date":"2013-12-31T18:43:05.943Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2013-12-31T18:43:53.891Z","type":"quit"}
{"nick":"trevnorris","message":"morning","date":"2013-12-31T18:45:06.642Z","type":"message"}
{"nick":"tjfontaine","message":"octetcloud: well, actually it's working fine as is without changing the regex","date":"2013-12-31T18:45:16.490Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: morning","date":"2013-12-31T18:45:31.576Z","type":"message"}
{"nick":"trevnorris","message":"are calls on thurs now?","date":"2013-12-31T18:45:36.907Z","type":"message"}
{"nick":"AvianFlu","date":"2013-12-31T18:45:42.460Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: lemme do one of those calendar things and get us to coordinate on a time that works for us, since it's a new year and all","date":"2013-12-31T18:46:28.109Z","type":"message"}
{"nick":"trevnorris","message":"coolio","date":"2013-12-31T18:46:44.490Z","type":"message"}
{"nick":"calvinfo","date":"2013-12-31T18:46:46.959Z","type":"join"}
{"nick":"tjfontaine","message":"octetcloud: I'm still getting orphaned workers, /Users/tjfontaine/Development/node/out/Release/node --debug=13683 /Users/tjfontaine/Development/node/test/fixtures/clustered-server/app.js","date":"2013-12-31T18:49:04.032Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: so I almost have the close callback thing working, except for the fact that cluster jacks with _handle.close() and overrides it with some other method.","date":"2013-12-31T18:49:12.721Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: ok","date":"2013-12-31T18:50:39.761Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-31T18:53:10.231Z","type":"quit"}
{"nick":"stagas","date":"2013-12-31T18:54:45.679Z","type":"join"}
{"nick":"tjfontaine","message":"man I don't get the test runner","date":"2013-12-31T18:54:45.944Z","type":"message"}
{"nick":"tjfontaine","message":"oh I see","date":"2013-12-31T18:55:03.221Z","type":"message"}
{"nick":"tjfontaine","message":"hmm","date":"2013-12-31T18:55:09.169Z","type":"message"}
{"nick":"tjfontaine","message":"oh right ok ...","date":"2013-12-31T18:55:51.770Z","type":"message"}
{"nick":"tjfontaine","message":"bad tj","date":"2013-12-31T18:56:28.847Z","type":"message"}
{"nick":"octetcloud","message":"@tjfontaine: how are you killing the master?","date":"2013-12-31T18:56:41.682Z","type":"message"}
{"nick":"tjfontaine","message":"octetcloud: in which case?","date":"2013-12-31T18:57:03.780Z","type":"message"}
{"nick":"octetcloud","message":"you have orphan workers. so workers outlived master. so master died... what made it die? app doesn't exit on its own, it needs to be killed (now)","date":"2013-12-31T18:57:40.282Z","type":"message"}
{"nick":"mikeal","date":"2013-12-31T18:57:57.800Z","type":"join"}
{"nick":"tjfontaine","message":"octetcloud: I'm just running make test","date":"2013-12-31T18:58:33.910Z","type":"message"}
{"nick":"tjfontaine","message":"but it was ...","date":"2013-12-31T18:58:53.906Z","type":"message"}
{"nick":"tjfontaine","message":"Command: out/Release/node /Users/tjfontaine/Development/node/test/simple/test-debug-port-cluster.js","date":"2013-12-31T18:59:00.223Z","type":"message"}
{"nick":"tjfontaine","message":"that timedout","date":"2013-12-31T18:59:03.261Z","type":"message"}
{"nick":"tjfontaine","message":"and resulted in orphans","date":"2013-12-31T18:59:06.408Z","type":"message"}
{"nick":"indutny","message":"oh gosh","date":"2013-12-31T18:59:14.370Z","type":"message"}
{"nick":"octetcloud","message":"@tjfontaine: oh, sorry, you pasted a command line, i was trying that, I'll try that last one","date":"2013-12-31T18:59:26.794Z","type":"message"}
{"nick":"tjfontaine","message":"indutny: the test is broken ;)","date":"2013-12-31T18:59:40.488Z","type":"message"}
{"nick":"thlorenz","date":"2013-12-31T19:00:56.838Z","type":"join"}
{"nick":"tjfontaine","message":"brb","date":"2013-12-31T19:01:07.753Z","type":"message"}
{"nick":"octetcloud","message":"@tjfontaine: oh, that, too. right, it never exits. Same change I made to test-debug-cluster.js needs to be made to it. I will do.","date":"2013-12-31T19:03:31.118Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-31T19:04:01.334Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #813 \u00037UNSTABLE\u000f smartos-x64 (9/687) smartos-ia32 (5/687) osx-ia32 (1/687) osx-x64 (3/687) centos-ia32 (2/687) ubuntu-x64 (3/687) centos-x64 (6/687) http://jenkins.nodejs.org/job/nodejs-master/813/","date":"2013-12-31T19:07:57.578Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: ping","date":"2013-12-31T19:13:48.694Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #367 \u00037UNSTABLE\u000f linux-x64 (2/687) smartos-ia32 (9/687) osx-x64 (2/687) linux-ia32 (3/687) smartos-x64 (9/687) http://jenkins.nodejs.org/job/libuv-node-integration/367/","date":"2013-12-31T19:25:33.091Z","type":"message"}
{"nick":"calvinfo","date":"2013-12-31T19:27:47.205Z","type":"part"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-31T19:28:20.880Z","type":"quit"}
{"nick":"daviddias","reason":"Remote host closed the connection","date":"2013-12-31T19:28:39.595Z","type":"quit"}
{"nick":"othiym23","message":"trevnorris: pong","date":"2013-12-31T19:30:32.254Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: say I create an EE observer with \"create\" callbacks (i.e. callbacks that are run when the EE is instantiated). and say I \"attach\" (i.e. add an observer after the EE was instantiated). you think the \"create\" callbacks should be run at that time against the EE instance?","date":"2013-12-31T19:33:48.825Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: basically, the EE was already instantiated, but since the observer is being attached after the fact, should the create callback be run against the instance regardless?","date":"2013-12-31T19:35:46.870Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I'm having a tough time imagining a use case for the create callback for an EE","date":"2013-12-31T19:38:30.127Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: domains need them. it sets the \"domain\" object property on the EE instance when created.","date":"2013-12-31T19:38:56.324Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: whereas all my use cases revolve around observing on / addListener and emit","date":"2013-12-31T19:38:58.122Z","type":"message"}
{"nick":"othiym23","message":"aha","date":"2013-12-31T19:39:02.819Z","type":"message"}
{"nick":"kazupon","date":"2013-12-31T19:39:28.330Z","type":"join"}
{"nick":"groundwater","message":"*sigh* domains","date":"2013-12-31T19:39:43.801Z","type":"message"}
{"nick":"trevnorris","message":"yeah. no kidding. :P","date":"2013-12-31T19:39:55.132Z","type":"message"}
{"nick":"groundwater","message":"othiym23: you're the domain guy! you should have known that :p","date":"2013-12-31T19:39:55.418Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: so if you're supporting implicit binding of EEs to domains (i.e. the current state of play), you don't need to retroactively fire the create observer, I don't think","date":"2013-12-31T19:40:31.056Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: cool. thanks","date":"2013-12-31T19:40:50.292Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: at best you get slightly DRYer code, but at worst you're conflating two different stages of the EE lifecycle unnecessarily","date":"2013-12-31T19:40:57.950Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2013-12-31T19:44:18.414Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23: should I assume that if I have an api to attach an observer to and EE instance then I should also allow to \"detach\" it as well?","date":"2013-12-31T19:53:07.704Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: probably","date":"2013-12-31T19:53:46.762Z","type":"message"}
{"nick":"tjfontaine","message":"indutny, octetcloud: new and improved (and working) test case for EACCES :)","date":"2013-12-31T19:53:57.079Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: domains only allow an EE to be attached to a single domain","date":"2013-12-31T19:54:05.008Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: CLS supports binding EEs to multiple CLS contexts","date":"2013-12-31T19:54:13.646Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-12-31T19:54:26.401Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: so the general way to support that is to support both add and remove","date":"2013-12-31T19:54:43.825Z","type":"message"}
{"nick":"trevnorris","message":"i'm focusing on the ee observer thing right now because it's case is much simpler than async listeners. so it's helping me figure out a few bugs.","date":"2013-12-31T19:54:54.262Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: last one. should I allow users to attach the same observer twice to the same ee instance? or instead just not add it if already found on the instance?","date":"2013-12-31T19:57:56.861Z","type":"message"}
{"nick":"mikeal","date":"2013-12-31T19:58:33.995Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037v0.10\u000f * \u00026f8aa24\u0002 : test: fix test-cluster-eaccess to work on windows - http://git.io/Def-jQ","date":"2013-12-31T20:01:07.908Z","type":"message"}
{"nick":"tjfontaine","message":"octetcloud: things look good with your PR, but I need to go around and clean up the orphans on the jenkins slaves, once I get a green light from there I'll land it, YAY","date":"2013-12-31T20:02:24.766Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I think generality dictates that you should allow the same observer be added multiple times, as long as it's possible for the caller to verify ahead of time whether or not a given observer has been added (i.e. something like .listeners() for EE observers)","date":"2013-12-31T20:05:29.435Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-12-31T20:07:18.263Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23: two options, either I allow each set of the same callbacks to be run multiple times, or I keep a ref counter and still only execute the callbacks once.","date":"2013-12-31T20:10:12.597Z","type":"message"}
{"nick":"thlorenz","date":"2013-12-31T20:10:13.897Z","type":"join"}
{"nick":"inolen","date":"2013-12-31T20:11:06.650Z","type":"join"}
{"nick":"othiym23","message":"trevnorris: KISS -- each set of the same callbacks can be run multiple times","date":"2013-12-31T20:13:10.878Z","type":"message"}
{"nick":"othiym23","message":"IMHO","date":"2013-12-31T20:13:12.440Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: currently I am storing the \"storage\" value in a separate sparse array that is accessed by the observers uid (it's shown the best performance yet), so currently it's easy to just remove the observer and it's associated storage cell.","date":"2013-12-31T20:15:17.971Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: but if multiple of the same observer can be added then I'll have to run through the queue and see if  that cell needs to be repopulated.","date":"2013-12-31T20:15:49.198Z","type":"message"}
{"nick":"trevnorris","message":"wait, nm.","date":"2013-12-31T20:17:08.871Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1686 \u00037UNSTABLE\u000f linux-x64 (4/607) osx-x64 (1/607) linux-ia32 (2/607) smartos-x64 (7/607) smartos-ia32 (8/607) osx-ia32 (1/607) http://jenkins.nodejs.org/job/nodejs-v0.10/1686/","date":"2013-12-31T20:17:23.361Z","type":"message"}
{"nick":"trevnorris","message":"ok, and i'll just make the note that the run order of observers is always non-deterministic.","date":"2013-12-31T20:17:38.737Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #410 \u00037UNSTABLE\u000f windows-x64 (11/607) windows-ia32 (11/607) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/410/","date":"2013-12-31T20:17:43.266Z","type":"message"}
{"nick":"daviddias","date":"2013-12-31T20:19:25.389Z","type":"join"}
{"nick":"trevnorris","message":"groundwater: whenever you have time, mind looking over https://github.com/joyent/node/pull/6502 ?","date":"2013-12-31T20:22:18.143Z","type":"message"}
{"nick":"daviddias","reason":"Ping timeout: 240 seconds","date":"2013-12-31T20:23:35.392Z","type":"quit"}
{"nick":"groundwater","message":"trevnorris: sure thing","date":"2013-12-31T20:25:12.478Z","type":"message"}
{"nick":"trevnorris","message":"thanks","date":"2013-12-31T20:25:18.475Z","type":"message"}
{"nick":"groundwater","message":"which PR again?","date":"2013-12-31T20:25:19.904Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: https://github.com/joyent/node/pull/6502","date":"2013-12-31T20:33:51.367Z","type":"message"}
{"nick":"AlexisMocha","reason":"Ping timeout: 272 seconds","date":"2013-12-31T20:34:21.739Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T20:40:30.944Z","type":"join"}
{"nick":"bajtos","date":"2013-12-31T20:41:50.803Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-31T20:43:27.929Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 265 seconds","date":"2013-12-31T20:46:08.735Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23: fwiw, currently the API is adding < 30ns per instantiation and emit.","date":"2013-12-31T20:47:14.751Z","type":"message"}
{"nick":"AvianFlu","date":"2013-12-31T20:47:16.809Z","type":"join"}
{"nick":"trevnorris","message":"when in use, and nothing when not used.","date":"2013-12-31T20:47:28.090Z","type":"message"}
{"nick":"trevnorris","message":"othiym23/ groundwater: what info do you want on add? like, the event name, the callback, context, anything else?","date":"2013-12-31T20:50:57.796Z","type":"message"}
{"nick":"groundwater","message":"i'm gonna try it out, i just built the branch","date":"2013-12-31T20:51:24.922Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: give me a bit","date":"2013-12-31T20:51:31.065Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: ok, the add/remove aren't implemented yet. working on that now.","date":"2013-12-31T20:51:43.970Z","type":"message"}
{"nick":"groundwater","message":"ahah okay","date":"2013-12-31T20:51:55.581Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: I vote we get rid of the EE leak warning. it's just annoying.","date":"2013-12-31T20:52:00.217Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: but the before/after do work, and there's the events.attachObserver() so you can attach to an existing ee instance.","date":"2013-12-31T20:52:27.849Z","type":"message"}
{"nick":"groundwater","message":"wow, i'm sitting at a cafe, and someone just opened the fridge to get a drink, then just walked away. made no effort to even try closing the door...","date":"2013-12-31T20:52:44.677Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-12-31T20:55:04.236Z","type":"quit"}
{"nick":"trevnorris","message":"groundwater: just added the add observer support. working on remove now.","date":"2013-12-31T20:57:01.836Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: i may have missed or overlooked this discussion, but why is there a \"createobserver\" call?","date":"2013-12-31T21:00:39.406Z","type":"message"}
{"nick":"groundwater","message":"can't i just pass in an object that implements before/after/error/create","date":"2013-12-31T21:00:49.259Z","type":"message"}
{"nick":"groundwater","message":"is that an optimization?","date":"2013-12-31T21:01:01.183Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: you can. the EE.createObserver() creates and returns the observer. EE.addObserver() will create it and add it to the active observers so any EE instantiated during that time will be captured.","date":"2013-12-31T21:02:05.802Z","type":"message"}
{"nick":"trevnorris","message":"so EE.addObserver() can take the same arguments as EE.createObserver()","date":"2013-12-31T21:02:32.703Z","type":"message"}
{"nick":"groundwater","message":"what functionality does createObserver give us?","date":"2013-12-31T21:03:13.551Z","type":"message"}
{"nick":"groundwater","message":"it looks like a hidden-class optimization","date":"2013-12-31T21:03:27.092Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: ^","date":"2013-12-31T21:03:58.012Z","type":"message"}
{"nick":"trevnorris","message":"it's not an optimization. its for the times you want to create on observer, but not actually make it active until some later time.","date":"2013-12-31T21:04:14.575Z","type":"message"}
{"nick":"groundwater","message":"also appologies if my brain just isn't working, i'm still adjusting from a 16 hour time change","date":"2013-12-31T21:04:28.789Z","type":"message"}
{"nick":"trevnorris","message":"no worries.","date":"2013-12-31T21:04:34.976Z","type":"message"}
{"nick":"trevnorris","message":"this whole thing just makes my head hurt.","date":"2013-12-31T21:04:51.096Z","type":"message"}
{"nick":"groundwater","message":"what's the advantage of using createObserver vs. just creating my own object that implements before/after/error/create ?","date":"2013-12-31T21:05:09.919Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: there's a hidden instantiator called ObserverInst() that does a lot of stuff necessary for tracking.","date":"2013-12-31T21:06:32.917Z","type":"message"}
{"nick":"trevnorris","message":"so the return from createObserver doesn't return the object you passed in. it's an instance of a hidden object.","date":"2013-12-31T21:07:17.642Z","type":"message"}
{"nick":"groundwater","message":"okay i'm looking at ObserverInst now","date":"2013-12-31T21:07:35.136Z","type":"message"}
{"nick":"AlexisMocha","date":"2013-12-31T21:07:39.737Z","type":"join"}
{"nick":"trevnorris","message":"i can then use those for more reliable checks, and avoid some collision problems that I'm having w/ async listeners.","date":"2013-12-31T21:07:55.543Z","type":"message"}
{"nick":"groundwater","message":"so, if i pass in an object to createObserver, the methods are plucked off the object right?","date":"2013-12-31T21:08:10.390Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-12-31T21:08:16.866Z","type":"message"}
{"nick":"groundwater","message":"but the object itself is discarded?","date":"2013-12-31T21:08:19.716Z","type":"message"}
{"nick":"trevnorris","message":"it's not used internally if that's what you mean.","date":"2013-12-31T21:08:37.195Z","type":"message"}
{"nick":"groundwater","message":"yah","date":"2013-12-31T21:08:42.440Z","type":"message"}
{"nick":"groundwater","message":"so if i call this.xxx from my before method, it will not see the .xxx property on the object i passed in","date":"2013-12-31T21:09:22.416Z","type":"message"}
{"nick":"groundwater","message":"because the method is attached to ObserverInst instead, right?","date":"2013-12-31T21:09:38.260Z","type":"message"}
{"nick":"groundwater","message":"i suppose that's what .storage is for instead, correct?","date":"2013-12-31T21:09:54.629Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-12-31T21:10:00.871Z","type":"message"}
{"nick":"trevnorris","message":"and i'm doing storage in a new way that really simplifies all the pain I was going through.","date":"2013-12-31T21:10:33.456Z","type":"message"}
{"nick":"trevnorris","message":"think of this as all my lessons learned from doing async listeners.","date":"2013-12-31T21:10:46.033Z","type":"message"}
{"nick":"groundwater","message":"haha","date":"2013-12-31T21:10:51.404Z","type":"message"}
{"nick":"groundwater","message":"so i recognize that there are internal properties we need to keep track of, but what do you think of delegating to the before/after/create object passed in, instead of plucking its methods","date":"2013-12-31T21:12:17.555Z","type":"message"}
{"nick":"groundwater","message":"did that make sense?","date":"2013-12-31T21:12:37.477Z","type":"message"}
{"nick":"groundwater","message":"function ObserverInst(obj, storage) {","date":"2013-12-31T21:13:15.368Z","type":"message"}
{"nick":"groundwater","message":"  this.obj = obj","date":"2013-12-31T21:13:15.588Z","type":"message"}
{"nick":"groundwater","message":"then calling this.obj.before(...) elsewhere","date":"2013-12-31T21:13:28.140Z","type":"message"}
{"nick":"trevnorris","message":"trust me, that leads to a world of hurt. that's how the current async listeners work and there are still edge cases biting me in the ass.","date":"2013-12-31T21:14:04.639Z","type":"message"}
{"nick":"trevnorris","message":"also, believe it or not, it's not faster.","date":"2013-12-31T21:15:25.253Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: what are your concerns with the current implementation?","date":"2013-12-31T21:16:44.800Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: just principle of least surprise","date":"2013-12-31T21:17:23.326Z","type":"message"}
{"nick":"groundwater","message":"if i pass in an object, expecting its methods to be called, i'd be surprised to find it not actually using that object","date":"2013-12-31T21:17:50.638Z","type":"message"}
{"nick":"AlexisMocha","reason":"Ping timeout: 272 seconds","date":"2013-12-31T21:18:03.711Z","type":"quit"}
{"nick":"groundwater","message":"trevnorris: https://github.com/jacobgroundwater/node/commit/23d72ac55ca6d710cefda9717ae0d17adc628077","date":"2013-12-31T21:20:58.712Z","type":"message"}
{"nick":"groundwater","message":"very rough idea","date":"2013-12-31T21:21:02.064Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: but what if a user decides to change the object they've passed in?","date":"2013-12-31T21:22:12.882Z","type":"message"}
{"nick":"trevnorris","message":"then the entire application explodes.","date":"2013-12-31T21:22:19.534Z","type":"message"}
{"nick":"trevnorris","message":"and why are you removing the \"storage\" argument?","date":"2013-12-31T21:23:57.674Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: because the object passed in serves as storage","date":"2013-12-31T21:24:12.030Z","type":"message"}
{"nick":"groundwater","message":"the before/after/create methods resolve 'this' to the object you passed in","date":"2013-12-31T21:24:27.883Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: no no no no no .... dude. that will kill you. the \"create\" callback can change the \"storage\" value if it returns something (making the storage unique to the instance) but that creates a collision.","date":"2013-12-31T21:25:16.593Z","type":"message"}
{"nick":"trevnorris","message":"so you have the same object with \"storage\" but every time \"create\" is run then the \"storage\" will change, for every instance that has the same object.","date":"2013-12-31T21:25:46.038Z","type":"message"}
{"nick":"groundwater","message":"so, my understanding of the observer was that it was not instance unique","date":"2013-12-31T21:26:05.776Z","type":"message"}
{"nick":"trevnorris","message":"it's not. the storage value is","date":"2013-12-31T21:26:18.444Z","type":"message"}
{"nick":"groundwater","message":"oh..","date":"2013-12-31T21:26:23.555Z","type":"message"}
{"nick":"groundwater","message":"why's that?","date":"2013-12-31T21:26:26.960Z","type":"message"}
{"nick":"groundwater","message":"sorry, i missed this discussion i think","date":"2013-12-31T21:26:32.808Z","type":"message"}
{"nick":"groundwater","message":"oh, i guess it's necessary to attach domains etc to the ee","date":"2013-12-31T21:27:27.044Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: the EE leak warning at the very least needs to be improved to tell us which fucking event was oversubscribed :)","date":"2013-12-31T21:27:29.316Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: ok, i think we can do the  best of both. :)","date":"2013-12-31T21:27:46.895Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: why not attach such information to the EE itself, rather than the listener?","date":"2013-12-31T21:28:04.541Z","type":"message"}
{"nick":"groundwater","message":"performance i guess","date":"2013-12-31T21:28:09.450Z","type":"message"}
{"nick":"groundwater","message":"i realize we're in the hottest code path here","date":"2013-12-31T21:28:16.746Z","type":"message"}
{"nick":"trevnorris","message":"sorry, not following about attaching to the listener.","date":"2013-12-31T21:28:36.248Z","type":"message"}
{"nick":"groundwater","message":"storage is supposed to be unique per EE instance, is that right?","date":"2013-12-31T21:30:04.165Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: ^","date":"2013-12-31T21:31:00.594Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: can be, yes. but doesn't have to be.","date":"2013-12-31T21:31:11.162Z","type":"message"}
{"nick":"trevnorris","message":"you can do an EE.addObserver(callbacks, storage); and the \"storage\" there will be the default unless the create callback returns something","date":"2013-12-31T21:31:45.683Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: and we need a storage object because we need a place to store EE stuff, like which domain its bound to?","date":"2013-12-31T21:31:57.982Z","type":"message"}
{"nick":"trevnorris","message":"the separation of the callbacks object and associated storage comes from a hard lesson learned. one sec.","date":"2013-12-31T21:32:55.036Z","type":"message"}
{"nick":"daviddias","date":"2013-12-31T21:33:03.875Z","type":"join"}
{"nick":"trevnorris","message":"groundwater: so here: https://github.com/joyent/node/blob/master/src/node.js#L307-L336","date":"2013-12-31T21:33:50.169Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: see how I have to check if a value was returned, then in that case I have to create a new object pointing to all the callbacks?","date":"2013-12-31T21:34:10.933Z","type":"message"}
{"nick":"trevnorris","message":"so I can properly store the new storage value along side the callbacks.","date":"2013-12-31T21:34:21.471Z","type":"message"}
{"nick":"trevnorris","message":"it was really stupid of me to do that.","date":"2013-12-31T21:34:29.293Z","type":"message"}
{"nick":"trevnorris","message":"so now they're separated and life is much happier.","date":"2013-12-31T21:35:05.336Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Sam Roberts\u000f \u00037master\u000f * \u0002cb1646f\u0002 : test: fix assumption of worker exit on disconnect (+4 more commits) - http://git.io/VjXl3w","date":"2013-12-31T21:35:57.223Z","type":"message"}
{"nick":"daviddias","reason":"Ping timeout: 272 seconds","date":"2013-12-31T21:37:41.739Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: do you know why lib/cluster.js overrides the ._handle.close() callback? overriding it like that makes debugging a serious pain.","date":"2013-12-31T21:38:10.971Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: so it can deregister itself?","date":"2013-12-31T21:39:29.831Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: the part that bothers me is that the _handle looks like a normal Server instance, but then finding out later, though lots of debugging, that the normal methods have been jacked w/.","date":"2013-12-31T21:40:37.721Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: welcome to javascript? :)","date":"2013-12-31T21:40:51.359Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: hah, yeah. and this is why I hated working on front-end. had to deal with jackwads that are always dynamically changing the code.","date":"2013-12-31T21:41:55.378Z","type":"message"}
{"nick":"tjfontaine","message":"well node behaves like this all over the place","date":"2013-12-31T21:42:09.179Z","type":"message"}
{"nick":"tjfontaine","message":"fwiw","date":"2013-12-31T21:42:13.048Z","type":"message"}
{"nick":"tjfontaine","message":"especially the more you learn about the streams api :P","date":"2013-12-31T21:42:25.748Z","type":"message"}
{"nick":"trevnorris","message":"dude. don't get me started.","date":"2013-12-31T21:42:37.763Z","type":"message"}
{"nick":"tjfontaine","message":"or when people override on/emit","date":"2013-12-31T21:42:42.383Z","type":"message"}
{"nick":"kazupon","date":"2013-12-31T21:42:43.938Z","type":"join"}
{"nick":"groundwater","message":"tjfontaine: trevnorris had to deal with this today","date":"2013-12-31T21:42:54.708Z","type":"message"}
{"nick":"trevnorris","message":"i fee like making those readonly properties and tell them to go sit on their thumbs.","date":"2013-12-31T21:43:08.279Z","type":"message"}
{"nick":"trevnorris","message":"*feel","date":"2013-12-31T21:43:12.033Z","type":"message"}
{"nick":"groundwater","message":"passenger and the node agent ended up proxying each other, and causing an infinite recursion","date":"2013-12-31T21:43:14.956Z","type":"message"}
{"nick":"tjfontaine","message":"right, I mean, it's a balance to deal with this as well as you can from node core, but really it can only ever be a best effort","date":"2013-12-31T21:43:33.392Z","type":"message"}
{"nick":"tjfontaine","message":"groundwater: blech","date":"2013-12-31T21:43:38.591Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: in core it should be a simple rule. you never override a prototype _method_","date":"2013-12-31T21:44:11.471Z","type":"message"}
{"nick":"tjfontaine","message":"it's not really always that simple though, is it? :)","date":"2013-12-31T21:44:25.829Z","type":"message"}
{"nick":"groundwater","message":"tjfontaine: i couldn't use dtrace because passenger wouldn't build on smartos, by which i mean it was more trouble than just doing a lot of \"step-by-step\" debugging until i noticed i was about 50 frames deep in the stack","date":"2013-12-31T21:44:36.481Z","type":"message"}
{"nick":"trevnorris","message":"um, yeah. it sort of is when we control all the variables.","date":"2013-12-31T21:44:46.520Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: depends on what we're trying to do frankly, the features of the language exist for a reason though","date":"2013-12-31T21:45:35.599Z","type":"message"}
{"nick":"tjfontaine","message":"groundwater: what didn't build on smartos ooc","date":"2013-12-31T21:45:43.360Z","type":"message"}
{"nick":"groundwater","message":"https://github.com/phusion/passenger","date":"2013-12-31T21:45:58.212Z","type":"message"}
{"nick":"vptr","reason":"Ping timeout: 272 seconds","date":"2013-12-31T21:46:01.354Z","type":"quit"}
{"nick":"tjfontaine","message":"groundwater: well, executive summary of why?","date":"2013-12-31T21:46:12.847Z","type":"message"}
{"nick":"groundwater","message":"i think it hard codes, or doesn't follow conventions for finding build tools","date":"2013-12-31T21:46:39.566Z","type":"message"}
{"nick":"groundwater","message":"i don't think it's smartos' fault","date":"2013-12-31T21:46:49.335Z","type":"message"}
{"nick":"tjfontaine","message":"ah ok","date":"2013-12-31T21:46:56.338Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: https://github.com/joyent/node/blob/master/lib/_stream_readable.js#L662-L693","date":"2013-12-31T21:46:59.341Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: first, doesn't mean we should use all the features of the language (i'll kill the first person to submit a PR using es6 array comprehensions)","date":"2013-12-31T21:47:03.995Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: welcome to backwards compatability, we don't really control all the variables anymore","date":"2013-12-31T21:47:15.220Z","type":"message"}
{"nick":"groundwater","message":"can't find gcc / can't find headers / etc","date":"2013-12-31T21:47:16.765Z","type":"message"}
{"nick":"tjfontaine","message":"groundwater: ya, ok seems like something we can fix for them SomeDay(tm)","date":"2013-12-31T21:47:39.255Z","type":"message"}
{"nick":"groundwater","message":"TIL: trevnorris will murder people over PRs","date":"2013-12-31T21:47:40.572Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-12-31T21:48:01.198Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2013-12-31T21:48:11.862Z","type":"quit"}
{"nick":"trevnorris","message":"groundwater: virtually of course. :P","date":"2013-12-31T21:48:16.559Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: needing to do something like that means a lack in proper lower level (in this case the EE's) API support.","date":"2013-12-31T21:48:58.680Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: needing to do something like that is more like the sins of the father visited upon the sons","date":"2013-12-31T21:49:35.052Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: yes, i will give you that.","date":"2013-12-31T21:49:54.346Z","type":"message"}
{"nick":"groundwater","message":"The Book of TJ","date":"2013-12-31T21:51:08.471Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #814 \u00037UNSTABLE\u000f smartos-x64 (10/690) smartos-ia32 (6/690) osx-ia32 (1/690) centos-ia32 (1/690) ubuntu-ia32 (1/690) centos-x64 (3/690) http://jenkins.nodejs.org/job/nodejs-master/814/","date":"2013-12-31T21:52:58.518Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: but you agree w/ me then, that in a completely controlled environment patching code like that to get desired effects shouldn't be necessary?","date":"2013-12-31T21:54:00.905Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: in a completely controlled environment you probably don't need to be patching things, or at least worried if someone else has already patched something","date":"2013-12-31T21:54:40.371Z","type":"message"}
{"nick":"tjfontaine","message":"but sadly for us, that's not the world we live in","date":"2013-12-31T21:54:51.911Z","type":"message"}
{"nick":"trevnorris","message":"i'll concede there.","date":"2013-12-31T21:55:39.121Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u000213de0f1\u0002 : Merge remote-tracking branch 'upstream/v0.10' (+2 more commits) - http://git.io/AO5NAg","date":"2013-12-31T21:56:27.751Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: ok. create/error/before/after/add/remove are all there. have fun.","date":"2013-12-31T21:59:13.108Z","type":"message"}
{"nick":"trevnorris","message":"i'm going to start working on removing domains completely from EE","date":"2013-12-31T21:59:22.913Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: okay i'll check it out","date":"2013-12-31T21:59:52.875Z","type":"message"}
{"nick":"trevnorris","message":"thanks","date":"2013-12-31T21:59:57.999Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: and i'm just assuming you'll be fine w/ this api addition. :P","date":"2013-12-31T22:00:14.167Z","type":"message"}
{"nick":"tjfontaine","message":"well, I will want to review it before it lands :)","date":"2013-12-31T22:01:09.691Z","type":"message"}
{"nick":"trevnorris","message":"heh, of course. :)","date":"2013-12-31T22:01:20.015Z","type":"message"}
{"nick":"mmun","reason":"\"Textual IRC Client: www.textualapp.com\"","date":"2013-12-31T22:03:12.422Z","type":"part"}
{"nick":"trevnorris","message":"groundwater: oh, btw. since EE's are technically synchronous, i'm not doing any error handling magic. async listeners can take care of that crap.","date":"2013-12-31T22:07:10.845Z","type":"message"}
{"nick":"groundwater","message":"haha","date":"2013-12-31T22:07:24.019Z","type":"message"}
{"nick":"groundwater","message":"orthogonality ftw!","date":"2013-12-31T22:07:33.540Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-12-31T22:15:06.773Z","type":"quit"}
{"nick":"rendar","date":"2013-12-31T22:27:47.969Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #815 \u00037UNSTABLE\u000f smartos-x64 (9/691) smartos-ia32 (7/691) osx-ia32 (2/691) centos-ia32 (3/691) ubuntu-x64 (2/691) centos-x64 (4/691) http://jenkins.nodejs.org/job/nodejs-master/815/","date":"2013-12-31T22:30:56.411Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Tuğrul Topuz\u000f \u00037master\u000f * \u0002bddea03\u0002 : dns: add resolveSoa and 'SOA' rrtype - http://git.io/CTUrLg","date":"2013-12-31T22:31:19.208Z","type":"message"}
{"nick":"trevnorris","message":"ok. now all that's left is to move EE domain error handling out and domains will be completely removed from core.","date":"2013-12-31T22:42:24.184Z","type":"message"}
{"nick":"trevnorris","message":"what a blessed day.","date":"2013-12-31T22:42:26.752Z","type":"message"}
{"nick":"trevnorris","message":"then, just have to spend the next 3 months getting all of hueniverse's tests to pass :P","date":"2013-12-31T22:42:43.171Z","type":"message"}
{"nick":"tjfontaine","message":"well hopefully less than that","date":"2013-12-31T22:42:54.506Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2013-12-31T22:42:55.786Z","type":"message"}
{"nick":"kazupon","date":"2013-12-31T22:43:44.772Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 248 seconds","date":"2013-12-31T22:48:37.667Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037v0.10\u000f * \u0002ffb718b\u0002 : doc: clarify process on exit safe usage (+1 more commits) - http://git.io/DIHplQ","date":"2013-12-31T22:49:18.646Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Maciej Małecki\u000f \u00037v0.10\u000f * \u00025a8de85\u0002 : doc: document that `process.send` is synchronous - http://git.io/sj6S-w","date":"2013-12-31T22:54:46.665Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u000208c83bb\u0002 : Merge remote-tracking branch 'upstream/v0.10' (+3 more commits) - http://git.io/FVWtbg","date":"2013-12-31T22:58:07.690Z","type":"message"}
{"nick":"tjfontaine","message":"ok","date":"2013-12-31T22:58:11.245Z","type":"message"}
{"nick":"tjfontaine","message":"oh, v8 upgrade check","date":"2013-12-31T22:58:16.321Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #816 \u00037UNSTABLE\u000f smartos-x64 (8/691) smartos-ia32 (5/691) osx-x64 (1/691) centos-ia32 (3/691) ubuntu-x64 (2/691) ubuntu-ia32 (4/691) centos-x64 (3/691) http://jenkins.nodejs.org/job/nodejs-master/816/","date":"2013-12-31T23:04:57.858Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #411 \u00037UNSTABLE\u000f windows-x64 (10/607) windows-ia32 (17/607) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/411/","date":"2013-12-31T23:05:48.814Z","type":"message"}
{"nick":"trevnorris","message":"time for food","date":"2013-12-31T23:14:01.883Z","type":"message"}
{"nick":"trevnorris","action":"&","date":"2013-12-31T23:14:02.873Z","type":"action"}
{"nick":"LOUDBOT","message":"THATS NOT A BUG ITS A FEATURE","date":"2013-12-31T23:14:03.396Z","type":"message"}
{"nick":"trevnorris","message":"DAMN RIGHT LOUTBOT","date":"2013-12-31T23:14:15.170Z","type":"message"}
{"nick":"LOUDBOT","message":"I AM LAUNCHING AN ECOMMERCE PORTAL FOR RANKING UPPERCASE TEXT QUOTES","date":"2013-12-31T23:14:16.441Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1687 \u00037UNSTABLE\u000f linux-x64 (4/607) osx-x64 (1/607) linux-ia32 (6/607) smartos-x64 (9/607) smartos-ia32 (6/607) osx-ia32 (1/607) http://jenkins.nodejs.org/job/nodejs-v0.10/1687/","date":"2013-12-31T23:14:59.021Z","type":"message"}
{"nick":"tjfontaine","message":"hah","date":"2013-12-31T23:17:15.376Z","type":"message"}
{"nick":"tjfontaine","message":"ok","date":"2013-12-31T23:17:46.568Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u00025ce4f3e\u0002 : v8: Upgrade to 3.22.24.10 - http://git.io/dt_bfQ","date":"2013-12-31T23:17:49.990Z","type":"message"}
{"nick":"tjfontaine","message":"so time to actually do this 0.11 release","date":"2013-12-31T23:17:54.541Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #412 \u00037UNSTABLE\u000f windows-x64 (11/607) windows-ia32 (14/607) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/412/","date":"2013-12-31T23:23:52.175Z","type":"message"}
{"nick":"pachet","reason":"Quit: leaving","date":"2013-12-31T23:27:18.894Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: likelihood that we'll upgrade v8 to 3.24 before v0.12?","date":"2013-12-31T23:36:10.402Z","type":"message"}
{"nick":"tjfontaine","message":"slim, but maybe 3.23","date":"2013-12-31T23:36:21.407Z","type":"message"}
{"nick":"tjfontaine","message":"3.24 is the active development branch, not the most recent stable","date":"2013-12-31T23:36:42.957Z","type":"message"}
{"nick":"trevnorris","message":"heh, I figured everything they do is considered unstable :P","date":"2013-12-31T23:37:26.394Z","type":"message"}
{"nick":"tjfontaine","message":"well, there are some things that are *more* unstable than others :)","date":"2013-12-31T23:37:46.101Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #817 \u00037UNSTABLE\u000f smartos-x64 (11/691) smartos-ia32 (6/691) osx-ia32 (2/691) osx-x64 (1/691) centos-ia32 (2/691) ubuntu-x64 (1/691) ubuntu-ia32 (2/691) centos-x64 (2/691) http://jenkins.nodejs.org/job/nodejs-master/817/","date":"2013-12-31T23:38:22.339Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033tjfontaine\u000f created branch v0.11.10-release - http://git.io/7ZhF1g","date":"2013-12-31T23:38:24.393Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: didn't someone report an segfault w/ v8 gc in an issue or something like that?","date":"2013-12-31T23:39:18.827Z","type":"message"}
{"nick":"tjfontaine","message":"there have been a few","date":"2013-12-31T23:39:34.947Z","type":"message"}
{"nick":"trevnorris","message":"ok. wonder if it has anything to do w/ https://code.google.com/p/v8/issues/detail?id=3071","date":"2013-12-31T23:40:47.020Z","type":"message"}
{"nick":"tjfontaine","message":"the trace doesn't look familiar","date":"2013-12-31T23:41:21.731Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/joyent/node/issues/6617","date":"2013-12-31T23:41:48.402Z","type":"message"}
{"nick":"kazupon","date":"2013-12-31T23:44:44.526Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: this is a new one: v8::ResourceConstraints::void set_max_available_threads(int value)","date":"2013-12-31T23:47:10.377Z","type":"message"}
{"nick":"trevnorris","message":"guess now that they're moving more out of the main thread, that actually matters.","date":"2013-12-31T23:47:36.357Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: and thanks. that's the issue I was looking for.","date":"2013-12-31T23:47:46.380Z","type":"message"}
{"nick":"octetcloud","message":"[1;3D/names","date":"2013-12-31T23:47:57.639Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1688 \u00037UNSTABLE\u000f linux-x64 (5/607) osx-x64 (1/607) linux-ia32 (4/607) smartos-x64 (7/607) smartos-ia32 (9/607) osx-ia32 (1/607) http://jenkins.nodejs.org/job/nodejs-v0.10/1688/","date":"2013-12-31T23:48:07.588Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: ya, they're getting more aggressive with their threaded gc model and reopt pattern","date":"2013-12-31T23:49:44.046Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: we're going to want to keep an eye on it","date":"2013-12-31T23:49:52.666Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2013-12-31T23:50:09.403Z","type":"quit"}
{"nick":"trevnorris","message":"yeah","date":"2013-12-31T23:50:28.250Z","type":"message"}
{"nick":"trevnorris","message":"another new one: RequestInterrupt()","date":"2013-12-31T23:50:36.841Z","type":"message"}
{"nick":"trevnorris","message":"unless it was there before, but by another name.","date":"2013-12-31T23:51:09.910Z","type":"message"}
{"nick":"tjfontaine","message":"oh god, I'm wary of exposing that functionality directly","date":"2013-12-31T23:52:12.193Z","type":"message"}
{"nick":"tjfontaine","message":"it does however simplify our vm watchdog","date":"2013-12-31T23:52:26.498Z","type":"message"}
{"nick":"trevnorris","message":"hehe","date":"2013-12-31T23:53:48.487Z","type":"message"}
{"nick":"tjfontaine","message":"yaknow?","date":"2013-12-31T23:54:21.223Z","type":"message"}
{"nick":"trevnorris","message":"wtf. CallOnBackgroundThread() ?","date":"2013-12-31T23:55:35.629Z","type":"message"}
{"nick":"trevnorris","message":"that's new","date":"2013-12-31T23:55:39.451Z","type":"message"}
{"nick":"trevnorris","message":"\"Schedules a task to be invoked on a background thread\"","date":"2013-12-31T23:55:54.786Z","type":"message"}
{"nick":"tjfontaine","message":"that's an internal though","date":"2013-12-31T23:56:36.054Z","type":"message"}
{"nick":"trevnorris","message":"don't think so. it's defined in include\\v8-platform.h","date":"2013-12-31T23:57:36.250Z","type":"message"}
{"nick":"trevnorris","message":"and it's initialized on V8::InitializePlatform()","date":"2013-12-31T23:58:02.536Z","type":"message"}
{"nick":"trevnorris","message":"then you can create v8::Tasks from it","date":"2013-12-31T23:58:14.820Z","type":"message"}
{"nick":"trevnorris","message":"yeah. namespace v8::Platform","date":"2013-12-31T23:58:32.320Z","type":"message"}
{"nick":"tjfontaine","message":"it's generally not something an embedder uses, but a porter would","date":"2013-12-31T23:59:04.397Z","type":"message"}
{"nick":"tjfontaine","message":"at least, what I assume from that","date":"2013-12-31T23:59:16.327Z","type":"message"}
{"nick":"tjfontaine","message":"ah, it basically abstracts our interfaces","date":"2013-12-31T23:59:51.502Z","type":"message"}
{"nick":"trevnorris","message":"\"V8 Platform abstraction layer. The embedder has to provide an implementation of this interface before initializing the rest of V8.\"","date":"2013-12-31T23:59:59.823Z","type":"message"}
