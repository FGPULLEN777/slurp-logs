{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-12-31T00:00:00.848Z","type":"quit"}
{"nick":"petka_","message":"it is currently capped at 15000 op/s","date":"2013-12-31T00:00:02.965Z","type":"message"}
{"nick":"ircretary","date":"2013-12-31T00:00:08.927Z","type":"join"}
{"nick":"petka_","message":"that's like, really, really slow","date":"2013-12-31T00:00:22.926Z","type":"message"}
{"nick":"tjfontaine","message":"and since it's not a critical imperative at the moment, it does us all a benefit for it to grow and mature in the npm space on its own, and as adoption of it increases the inclusion can be reevaluated","date":"2013-12-31T00:00:24.205Z","type":"message"}
{"nick":"petka_","message":"you cannot get 100 000 rps if parsing the url already is taking you down to 15k rps","date":"2013-12-31T00:00:57.005Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: ahoy!","date":"2013-12-31T00:01:14.739Z","type":"message"}
{"nick":"tjfontaine","message":"petka_: there are a lot of large and complex deployments out there, they have complaints about node, so far as I know, you're the first to raise the url parser as an issue -- and lucky for you and everyone else in the short term that might experience the pain -- it's really easy to replace the parser by using your module","date":"2013-12-31T00:02:31.392Z","type":"message"}
{"nick":"petka_","message":"I don't understand why it would need to grow and mature, it's the same module but faster. e.g. .resolve code is mostly the same","date":"2013-12-31T00:02:38.650Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: hey dude. one sec and i'd like you to take a quick look at something.","date":"2013-12-31T00:02:57.861Z","type":"message"}
{"nick":"tjfontaine","message":"petka_: it's *not* the same module, it's a ground up rewrite of the parser as you indicate","date":"2013-12-31T00:03:25.076Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: sure","date":"2013-12-31T00:03:29.325Z","type":"message"}
{"nick":"petka_","message":"in terms of api and semantics","date":"2013-12-31T00:03:37.752Z","type":"message"}
{"nick":"tjfontaine","message":"petka_: the API is not the question","date":"2013-12-31T00:03:41.396Z","type":"message"}
{"nick":"tjfontaine","message":"petka_: and semantics are for now undetermined, you know as much of the coverage that our current tests have and any that you've done, that isn't necessarily indicative of all the existing semantics of node's existing parser","date":"2013-12-31T00:04:13.193Z","type":"message"}
{"nick":"mikeal","date":"2013-12-31T00:04:25.984Z","type":"join"}
{"nick":"tjfontaine","message":"petka_: there may yet be unknown corner cases in your implementation, and for that staying out in the community for a while can do it quite well","date":"2013-12-31T00:04:47.748Z","type":"message"}
{"nick":"petka_","message":"sure, but a few minors? doesn't that mean years?","date":"2013-12-31T00:05:01.891Z","type":"message"}
{"nick":"tjfontaine","message":"petka_: again, feel free to file the PR and keep it up to date on the master branch","date":"2013-12-31T00:05:02.665Z","type":"message"}
{"nick":"tjfontaine","message":"petka_: no not really","date":"2013-12-31T00:05:11.051Z","type":"message"}
{"nick":"petka_","message":"again I don't want to rush it but if it takes years","date":"2013-12-31T00:05:13.041Z","type":"message"}
{"nick":"tjfontaine","message":"but that's why npm exists","date":"2013-12-31T00:05:20.544Z","type":"message"}
{"nick":"spion","date":"2013-12-31T00:05:27.194Z","type":"join"}
{"nick":"tjfontaine","message":"this would be a different conversation if url itself were used heavily within node core itself","date":"2013-12-31T00:05:37.985Z","type":"message"}
{"nick":"petka_","message":"afaik url.parse(request.url) is what is done in every web server","date":"2013-12-31T00:06:12.791Z","type":"message"}
{"nick":"tjfontaine","message":"what users decide to do, is not the same as what node itself does","date":"2013-12-31T00:06:25.833Z","type":"message"}
{"nick":"petka_","message":"but the users don't know that url.parse is a heavy bottleneck and wouldn't know to look for another module","date":"2013-12-31T00:06:51.754Z","type":"message"}
{"nick":"petka_","message":"I mean you kinda dismissed it yourself at the beginning as well","date":"2013-12-31T00:07:00.424Z","type":"message"}
{"nick":"tjfontaine","message":"users who are doing heavy amounts of url.parse and do profiling will certainly see it popping up in their results, and then begin searching for solutions","date":"2013-12-31T00:07:51.107Z","type":"message"}
{"nick":"petka_","message":"no, just once per request is already a huge slow down","date":"2013-12-31T00:08:16.207Z","type":"message"}
{"nick":"Domenic_","message":"I am surprised you are dismissing this just because it's not used in core code. It feels like dismissing HTTP performance because of all the users who use Node primarily for Grunt and never run servers.","date":"2013-12-31T00:08:31.541Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #363 \u00037UNSTABLE\u000f windows-x64 (5/202) smartos-ia32 (4/203) smartos-x64 (7/203) windows-ia32 (5/202) linux-ia32 (2/203) osx-ia32 (2/204) http://jenkins.nodejs.org/job/libuv-master-gyp/363/","date":"2013-12-31T00:09:11.488Z","type":"message"}
{"nick":"tjfontaine","message":"node needs to continue to focus on being correct, and not introducing new performance regressions -- but I'm unconvinced it's worth our time in the short term to focus on introducing a rewrite now for something that is generally solvable from npm","date":"2013-12-31T00:09:17.587Z","type":"message"}
{"nick":"tjfontaine","message":"Domenic_: it's not about that","date":"2013-12-31T00:09:22.994Z","type":"message"}
{"nick":"petka_","message":"but it wouldn't be as accessible from npm, I mean I don't really have time to market it ","date":"2013-12-31T00:10:01.249Z","type":"message"}
{"nick":"tjfontaine","message":"Domenic_: it's not dimissing it because it's not used in core, it's not dismissing it at all -- it's a question of priorities","date":"2013-12-31T00:10:03.064Z","type":"message"}
{"nick":"petka_","message":"(or skill :P)","date":"2013-12-31T00:10:16.226Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-31T00:10:22.657Z","type":"quit"}
{"nick":"thlorenz","date":"2013-12-31T00:10:56.500Z","type":"join"}
{"nick":"tjfontaine","message":"if url.parse were somethign that node itself was forcing on users in a hot path it would be crucial and critical to be evaluating all solutions, if there's another core comitter that wants to take this on as their pet project that's fine -- but url parsing is an important part to get *right*","date":"2013-12-31T00:11:29.895Z","type":"message"}
{"nick":"mmalecki","message":"ideally, the tests cover all the semantic catches :P","date":"2013-12-31T00:14:37.332Z","type":"message"}
{"nick":"tjfontaine","message":"mmalecki: in a perfect world, yes","date":"2013-12-31T00:14:48.447Z","type":"message"}
{"nick":"tjfontaine","message":"and of our coverage, url is some of our best","date":"2013-12-31T00:15:05.507Z","type":"message"}
{"nick":"thlorenz","reason":"Ping timeout: 245 seconds","date":"2013-12-31T00:15:08.373Z","type":"quit"}
{"nick":"tjfontaine","message":"mostly because the rfc covers a lot of it","date":"2013-12-31T00:15:14.616Z","type":"message"}
{"nick":"tjfontaine","message":"that doesn't mean we haven't gotten it wrong in the past","date":"2013-12-31T00:15:25.156Z","type":"message"}
{"nick":"tjfontaine","message":"in subtle ways","date":"2013-12-31T00:15:32.567Z","type":"message"}
{"nick":"mmalecki","message":"yeah, I saw those, they are pretty impressive really","date":"2013-12-31T00:15:46.831Z","type":"message"}
{"nick":"tjfontaine","message":"and there are people using node and url.parse in important ways that do require stability in the behavior","date":"2013-12-31T00:16:02.165Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1683 \u00037UNSTABLE\u000f linux-x64 (5/606) osx-x64 (1/606) linux-ia32 (6/606) smartos-x64 (8/606) smartos-ia32 (7/606) osx-ia32 (1/606) http://jenkins.nodejs.org/job/nodejs-v0.10/1683/","date":"2013-12-31T00:16:45.688Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #407 \u00037UNSTABLE\u000f windows-x64 (11/606) windows-ia32 (12/606) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/407/","date":"2013-12-31T00:16:51.678Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: ping","date":"2013-12-31T00:17:50.575Z","type":"message"}
{"nick":"othiym23","message":"TIL that Marak is apparently a \"Node.js sensei\"","date":"2013-12-31T00:17:58.380Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: pong","date":"2013-12-31T00:17:58.547Z","type":"message"}
{"nick":"othiym23","message":"I like to think of myself more as an advanced Node.js padawan","date":"2013-12-31T00:18:08.571Z","type":"message"}
{"nick":"othiym23","message":"or maybe, you know, somebody who uses Node to get his job done","date":"2013-12-31T00:18:19.368Z","type":"message"}
{"nick":"tjfontaine","message":"that's how I view myself","date":"2013-12-31T00:18:42.913Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: forgot whether I talked to you about this, but I noticed that node is cheating the event loop.","date":"2013-12-31T00:19:14.136Z","type":"message"}
{"nick":"tjfontaine","message":"define \"cheat\"","date":"2013-12-31T00:19:21.681Z","type":"message"}
{"nick":"tjfontaine","message":"I hope you mean \"nextTick\" :P","date":"2013-12-31T00:19:32.663Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: for example. when we run Server#close() the callback should be run in the uv__run_closing_handles() phase of the eloop.","date":"2013-12-31T00:19:35.573Z","type":"message"}
{"nick":"trevnorris","message":"but instead it's queued. and even if the callback were queued via setImmediate, it would still fire in the \"technical\" wrong order","date":"2013-12-31T00:19:57.084Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: node should not be calling anything with two _'s in it","date":"2013-12-31T00:19:57.513Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-12-31T00:20:13.128Z","type":"message"}
{"nick":"trevnorris","message":"what are you talking about? everything runs in a phase that has two __ in it.","date":"2013-12-31T00:20:18.343Z","type":"message"}
{"nick":"tjfontaine","message":"it was a silly joke, anyway","date":"2013-12-31T00:20:31.109Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #810 \u00037UNSTABLE\u000f smartos-x64 (10/687) smartos-ia32 (7/687) osx-ia32 (2/687) centos-ia32 (2/687) ubuntu-ia32 (1/687) centos-x64 (3/687) http://jenkins.nodejs.org/job/nodejs-master/810/","date":"2013-12-31T00:21:01.902Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: can you be more explicit about what you're talking about?","date":"2013-12-31T00:21:15.264Z","type":"message"}
{"nick":"trevnorris","message":"when you run Server#close() it then queues up an emit() in nextTick (but that's implementation detail)","date":"2013-12-31T00:21:50.744Z","type":"message"}
{"nick":"trevnorris","message":"when the emit should happen until the run_closing_handles() has finished running","date":"2013-12-31T00:22:10.852Z","type":"message"}
{"nick":"tjfontaine","message":"should it?","date":"2013-12-31T00:22:23.832Z","type":"message"}
{"nick":"trevnorris","message":"so right now we \"close\" the handle and remove the js reference, but it still exists until the eloop ends.","date":"2013-12-31T00:22:36.395Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: the kicker is, even if we setImmediate the callback, those calbacks run _before_ run_closing_handles(), so it still wouldn't be closed at that point.","date":"2013-12-31T00:23:38.189Z","type":"message"}
{"nick":"tjfontaine","message":"define: 'it', the libuv uv_handle_t?","date":"2013-12-31T00:23:40.633Z","type":"message"}
{"nick":"trevnorris","message":"yeah. the uv_handle_t","date":"2013-12-31T00:24:08.165Z","type":"message"}
{"nick":"tjfontaine","message":"I'm not sure where the cheating is happening, and where that might be causing problems","date":"2013-12-31T00:24:09.997Z","type":"message"}
{"nick":"tjfontaine","message":"indutny: if you give me the high sign on libuv v0.11 I will do a release of it and therefore node tonight","date":"2013-12-31T00:24:55.784Z","type":"message"}
{"nick":"rmg","date":"2013-12-31T00:25:22.059Z","type":"join"}
{"nick":"trevnorris","message":"Server#close() basically just does server._handle.close(), then server._handle = null;","date":"2013-12-31T00:25:42.429Z","type":"message"}
{"nick":"trevnorris","message":" server._handle.close() accepts a callback, but instead we're emitting the \"close\" event sooner than uv's had time to properly close the uv_handle_t","date":"2013-12-31T00:26:27.628Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: yes, we've signalled our intent, the event emission in this case is ours and not something to be delivered from libuv","date":"2013-12-31T00:26:32.144Z","type":"message"}
{"nick":"trevnorris","message":"that doesn't make sense to me. imo we shouldn't emit \"close\" until uv has signaled back that the uv_handle_t has in fact been closed.","date":"2013-12-31T00:27:06.622Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: so yes, since we know the intent at this point we can emit the event sooner than when libuv has closed it","date":"2013-12-31T00:27:07.009Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: both are valid to me, it is not unreasonable to simplify the code paths, but it also makes sense to signal as soon as we know it's ok to do so","date":"2013-12-31T00:28:24.233Z","type":"message"}
{"nick":"trevnorris","message":"and for me it's only ok to do so when the layer under us has given the ok.","date":"2013-12-31T00:28:50.602Z","type":"message"}
{"nick":"rmg","reason":"Ping timeout: 245 seconds","date":"2013-12-31T00:29:43.320Z","type":"quit"}
{"nick":"trevnorris","message":"thought experiment. i create a Server instance, then close it in the nextTick, then create a new one in the close callback. since the callback is nextTick and we create a new one then memory is going to fill up with a bunch of uv_handle_t's hanging around.","date":"2013-12-31T00:30:11.034Z","type":"message"}
{"nick":"trevnorris","message":"though, again, just a thought experiment.","date":"2013-12-31T00:30:23.116Z","type":"message"}
{"nick":"tjfontaine","message":"create a bunch of things and there will be a bunch of a lot of things hanging around :)","date":"2013-12-31T00:31:00.004Z","type":"message"}
{"nick":"trevnorris","message":"unless the callback was called when uv gave the all clear, then there'd only be one created at a time.","date":"2013-12-31T00:31:32.226Z","type":"message"}
{"nick":"trevnorris","message":"sorry, just don't like implicit order of operations. like it more when things run when the code makes it look like it should run.","date":"2013-12-31T00:31:55.884Z","type":"message"}
{"nick":"tjfontaine","message":"anyway, if changing the code to be more simple is a bonus, and if that's not changing ordering semantics for consumers and/or adding performance overhead because now they're waiting a more indefinite amount of time for that event -- we should explore it","date":"2013-12-31T00:32:16.080Z","type":"message"}
{"nick":"tjfontaine","message":"it's not implicit, in fact it's very explicit :)","date":"2013-12-31T00:32:25.754Z","type":"message"}
{"nick":"trevnorris","message":"when I read the code in uv_run and saw run_closing_handles() I first thought, oh, that's when all the Server#close() callbacks are called.","date":"2013-12-31T00:33:02.551Z","type":"message"}
{"nick":"trevnorris","message":"but that isn't the case.","date":"2013-12-31T00:33:07.524Z","type":"message"}
{"nick":"tjfontaine","message":"that's the case when something externally may have closed the socket","date":"2013-12-31T00:33:27.573Z","type":"message"}
{"nick":"tjfontaine","message":"if it supplied the callback","date":"2013-12-31T00:33:40.331Z","type":"message"}
{"nick":"trevnorris","message":"how do you mean?","date":"2013-12-31T00:33:53.048Z","type":"message"}
{"nick":"tjfontaine","message":"I just mean, someone/thing using libuv may decide to operate with that mechanism","date":"2013-12-31T00:34:45.987Z","type":"message"}
{"nick":"spion","reason":"\"Leaving\"","date":"2013-12-31T00:34:57.679Z","type":"part"}
{"nick":"tjfontaine","message":"I'm not sure it's necessary for node to do it, as .close in this case has been called by user code","date":"2013-12-31T00:35:28.931Z","type":"message"}
{"nick":"tjfontaine","message":"there's no reason to necessarily wait for notification from the platform that the socket has indeed been closed","date":"2013-12-31T00:35:51.214Z","type":"message"}
{"nick":"octetcloud","message":"@tjfontaine: if I address the small format nits on #6727, and remove the incomplete change (\"a normal disconnect should not error\"), can I get this in tonight? if so, I'll do it tomorrow","date":"2013-12-31T00:36:31.583Z","type":"message"}
{"nick":"wolfeidau","reason":"Ping timeout: 240 seconds","date":"2013-12-31T00:36:59.793Z","type":"quit"}
{"nick":"tjfontaine","message":"octetcloud: yup, I think that's doable","date":"2013-12-31T00:37:02.274Z","type":"message"}
{"nick":"tjfontaine","message":"octetcloud: I absolutely want to get the fixes and the new tests in","date":"2013-12-31T00:37:15.222Z","type":"message"}
{"nick":"octetcloud","message":"ok. will do right away, it means rebasing away one commit, so some comments kindof dissappear, that's ok?","date":"2013-12-31T00:37:36.151Z","type":"message"}
{"nick":"tjfontaine","message":"yup, I can recover them from email","date":"2013-12-31T00:37:50.098Z","type":"message"}
{"nick":"wolfeidau","date":"2013-12-31T00:40:38.898Z","type":"join"}
{"nick":"octetcloud","message":"ok, and will libuv get updated? or has it? I don't see the uv version that fixes node #6749 (an assert) in v0.10 of node, or is it only 0.11 going out?","date":"2013-12-31T00:42:09.468Z","type":"message"}
{"nick":"tjfontaine","message":"libuv will be updated, I do a release of libuv and upgrade before every node release","date":"2013-12-31T00:42:27.276Z","type":"message"}
{"nick":"octetcloud","message":"great, thanks.","date":"2013-12-31T00:43:57.354Z","type":"message"}
{"nick":"kazupon","date":"2013-12-31T00:44:31.935Z","type":"join"}
{"nick":"tjfontaine","message":"octetcloud: fwiw that fix went in v0.10 of libuv, and then bert merged v0.10 into master","date":"2013-12-31T00:44:39.792Z","type":"message"}
{"nick":"tjfontaine","message":"octetcloud: https://github.com/joyent/libuv/commit/140c863ff096a7998fb5528480fc7eccfd837165","date":"2013-12-31T00:44:55.951Z","type":"message"}
{"nick":"tjfontaine","message":"or rather it should have ...","date":"2013-12-31T00:45:23.217Z","type":"message"}
{"nick":"tjfontaine","message":"ah it was https://github.com/joyent/libuv/commit/46a06021415009e0e2918966b926d20bc6f0422c","date":"2013-12-31T00:45:51.436Z","type":"message"}
{"nick":"tjfontaine","message":"anyway","date":"2013-12-31T00:45:54.492Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2013-12-31T00:49:45.779Z","type":"quit"}
{"nick":"stagas","date":"2013-12-31T00:54:31.472Z","type":"join"}
{"nick":"groundwater","message":"any gurus here know how to grab a stack trace out of a \"RangeError: Maximum call stack size exceeded\"","date":"2013-12-31T00:57:54.724Z","type":"message"}
{"nick":"tjfontaine","message":"--abort-on-uncaught-exception","date":"2013-12-31T01:03:18.596Z","type":"message"}
{"nick":"groundwater","message":"tjfontaine: thanks!","date":"2013-12-31T01:06:50.884Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-12-31T01:10:27.572Z","type":"quit"}
{"nick":"groundwater","message":"tjfontaine: looks like something is catching the exception","date":"2013-12-31T01:21:46.081Z","type":"message"}
{"nick":"groundwater","message":"i'm at maximum levels of inception here, i don't even wanna describe it","date":"2013-12-31T01:22:03.275Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-31T01:22:45.430Z","type":"quit"}
{"nick":"thlorenz","date":"2013-12-31T01:23:47.316Z","type":"join"}
{"nick":"trevnorris","message":"groundwater: have a script that replicates this?","date":"2013-12-31T01:25:24.726Z","type":"message"}
{"nick":"tjfontaine","message":"I think ...","date":"2013-12-31T01:25:43.566Z","type":"message"}
{"nick":"tjfontaine","message":"isn't RangeError supposed to be a FatalError? a fixed node should handle that","date":"2013-12-31T01:26:13.883Z","type":"message"}
{"nick":"othiym23","message":"Phusion Passenger may or may not be in the mix here, and may or may not have its own ideas about how Node things want to be done","date":"2013-12-31T01:26:38.168Z","type":"message"}
{"nick":"othiym23","message":"allegedly","date":"2013-12-31T01:26:39.830Z","type":"message"}
{"nick":"othiym23","message":"perhaps","date":"2013-12-31T01:26:41.449Z","type":"message"}
{"nick":"tjfontaine","message":"hmm no I guess not","date":"2013-12-31T01:26:42.170Z","type":"message"}
{"nick":"groundwater","message":"i'm trying to figure out why an app being run through Passenger throws a fit combined with a certain express body parser, and the NR agent","date":"2013-12-31T01:26:45.045Z","type":"message"}
{"nick":"tjfontaine","message":"you poor fucking souls","date":"2013-12-31T01:27:00.701Z","type":"message"}
{"nick":"groundwater","message":"ruby, c, and node are all in the mix here","date":"2013-12-31T01:27:23.556Z","type":"message"}
{"nick":"othiym23","message":"we're not using it, we're just trying to keep it from fuckin' up the program for our users","date":"2013-12-31T01:27:30.841Z","type":"message"}
{"nick":"tjfontaine","message":"are you able to do this on smartos such that we can play dtrace fun games?","date":"2013-12-31T01:27:36.074Z","type":"message"}
{"nick":"tjfontaine","message":"othiym23: ya, I know -- that's why I feel for you","date":"2013-12-31T01:27:48.656Z","type":"message"}
{"nick":"hz","date":"2013-12-31T01:27:59.358Z","type":"quit"}
{"nick":"groundwater","message":"passenger needs to be compiled, and i'm trying to avoid that rabbit hole","date":"2013-12-31T01:28:14.556Z","type":"message"}
{"nick":"tjfontaine","message":"I see","date":"2013-12-31T01:28:24.093Z","type":"message"}
{"nick":"groundwater","message":"but it may be the path of least resistance at htis point","date":"2013-12-31T01:28:25.092Z","type":"message"}
{"nick":"tjfontaine","message":"because you may be able to use the pid provider to grab the Error creation and jstack()","date":"2013-12-31T01:28:58.321Z","type":"message"}
{"nick":"groundwater","message":"i'm gonna try a few more hacks, then jump to that","date":"2013-12-31T01:29:26.132Z","type":"message"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-12-31T01:32:26.985Z","type":"quit"}
{"nick":"stagas","date":"2013-12-31T01:33:08.647Z","type":"join"}
{"nick":"octetcloud","message":"@tjfontaine: #6727 isn't going to happen tonight, test-debug-signal-cluster.js is intermittently failing, I'll need to bisect back to see what I did. it'll have to be next round. sorry.","date":"2013-12-31T01:40:21.120Z","type":"message"}
{"nick":"st_luke","date":"2013-12-31T01:41:27.933Z","type":"join"}
{"nick":"kazupon","date":"2013-12-31T01:45:17.070Z","type":"join"}
{"nick":"tjfontaine","message":"octetcloud: that's ok, no worries","date":"2013-12-31T01:50:47.911Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: wb!","date":"2013-12-31T01:54:24.124Z","type":"message"}
{"nick":"tjfontaine","message":"thanks!","date":"2013-12-31T01:55:52.911Z","type":"message"}
{"nick":"mikeal","date":"2013-12-31T01:59:29.810Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-12-31T02:18:12.979Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2013-12-31T02:19:03.855Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-12-31T02:19:22.306Z","type":"quit"}
{"nick":"sdeath","date":"2013-12-31T02:20:23.734Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-31T02:27:34.541Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-12-31T02:28:49.352Z","type":"join"}
{"nick":"sdeath","reason":"Remote host closed the connection","date":"2013-12-31T02:29:01.048Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-12-31T02:41:37.266Z","type":"quit"}
{"nick":"st_luke","date":"2013-12-31T02:43:13.838Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-12-31T02:57:34.201Z","type":"quit"}
{"nick":"ladymurr","date":"2013-12-31T02:59:53.730Z","type":"join"}
{"nick":"st_luke","date":"2013-12-31T03:00:23.835Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 248 seconds","date":"2013-12-31T03:03:01.649Z","type":"quit"}
{"nick":"st_luke_","date":"2013-12-31T03:04:00.782Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 240 seconds","date":"2013-12-31T03:04:38.643Z","type":"quit"}
{"nick":"inolen","date":"2013-12-31T03:06:21.638Z","type":"join"}
{"nick":"st_luke_","reason":"Ping timeout: 240 seconds","date":"2013-12-31T03:08:14.607Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-31T03:15:19.175Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T03:15:22.984Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2013-12-31T03:20:04.844Z","type":"quit"}
{"nick":"felicity","reason":"Quit: ircII EPIC5-1.1.5 -- Accept specific limitations on /who.","date":"2013-12-31T03:32:29.471Z","type":"quit"}
{"nick":"felicity","date":"2013-12-31T03:35:55.928Z","type":"join"}
{"nick":"st_luke","date":"2013-12-31T03:36:47.497Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 272 seconds","date":"2013-12-31T03:42:23.299Z","type":"quit"}
{"nick":"AlexisMocha","reason":"Ping timeout: 260 seconds","date":"2013-12-31T03:48:03.798Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-12-31T04:06:08.728Z","type":"quit"}
{"nick":"mikeal","date":"2013-12-31T04:10:43.923Z","type":"join"}
{"nick":"calvinfo","date":"2013-12-31T04:16:06.489Z","type":"join"}
{"nick":"kazupon","date":"2013-12-31T04:16:23.939Z","type":"join"}
{"nick":"calvinfo","reason":"Ping timeout: 245 seconds","date":"2013-12-31T04:20:33.325Z","type":"quit"}
{"nick":"ladymurr","reason":"Remote host closed the connection","date":"2013-12-31T04:20:56.436Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2013-12-31T04:20:58.841Z","type":"quit"}
{"nick":"AlexisMocha","date":"2013-12-31T04:23:19.671Z","type":"join"}
{"nick":"mikeal1","date":"2013-12-31T04:24:27.453Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 272 seconds","date":"2013-12-31T04:27:37.798Z","type":"quit"}
{"nick":"abraxas","date":"2013-12-31T04:28:58.449Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 240 seconds","date":"2013-12-31T04:33:26.981Z","type":"quit"}
{"nick":"rnowak_","reason":"Ping timeout: 272 seconds","date":"2013-12-31T04:34:13.785Z","type":"quit"}
{"nick":"rnowak","date":"2013-12-31T04:34:41.313Z","type":"join"}
{"nick":"calvinfo","date":"2013-12-31T04:45:53.056Z","type":"join"}
{"nick":"mikeal1","reason":"Quit: Leaving.","date":"2013-12-31T04:55:55.537Z","type":"quit"}
{"nick":"st_luke","date":"2013-12-31T05:00:04.316Z","type":"join"}
{"nick":"thlorenz","message":"got like 70% of the libuv book examples adapted to the latest API I think its only about 5 more to go https://github.com/thlorenz/libuv-dox/tree/master/examples","date":"2013-12-31T05:02:19.544Z","type":"message"}
{"nick":"AlexisMocha","reason":"Ping timeout: 252 seconds","date":"2013-12-31T05:07:23.650Z","type":"quit"}
{"nick":"rmg","date":"2013-12-31T05:09:35.559Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-12-31T05:11:22.913Z","type":"nick"}
{"nick":"rmg","reason":"Ping timeout: 252 seconds","date":"2013-12-31T05:14:15.013Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-31T05:16:16.802Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T05:17:17.793Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 248 seconds","date":"2013-12-31T05:23:49.628Z","type":"quit"}
{"nick":"calvinfo","date":"2013-12-31T05:23:53.608Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-12-31T05:29:49.074Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-31T05:32:02.243Z","type":"quit"}
{"nick":"calvinfo","date":"2013-12-31T05:36:51.536Z","type":"part"}
{"nick":"m76","date":"2013-12-31T05:43:21.248Z","type":"join"}
{"nick":"stagas","date":"2013-12-31T05:46:55.793Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 245 seconds","date":"2013-12-31T06:17:13.309Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-31T06:19:46.798Z","type":"join"}
{"nick":"mikeal","date":"2013-12-31T06:22:56.146Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 248 seconds","date":"2013-12-31T06:24:37.628Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #408 \u00037UNSTABLE\u000f windows-x64 (11/606) windows-ia32 (11/606) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/408/","date":"2013-12-31T06:41:14.846Z","type":"message"}
{"nick":"zz_karupanerura","new_nick":"karupanerura","date":"2013-12-31T06:48:27.497Z","type":"nick"}
{"nick":"M28","reason":"Read error: Connection reset by peer","date":"2013-12-31T07:03:20.266Z","type":"quit"}
{"nick":"M28_","date":"2013-12-31T07:03:25.594Z","type":"join"}
{"nick":"kazupon","date":"2013-12-31T07:21:12.151Z","type":"join"}
{"nick":"vptr","reason":"Ping timeout: 260 seconds","date":"2013-12-31T07:21:19.780Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2013-12-31T07:25:57.018Z","type":"quit"}
{"nick":"hallsy","date":"2013-12-31T07:43:07.666Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-12-31T07:45:17.026Z","type":"quit"}
{"nick":"hallsy","reason":"Client Quit","date":"2013-12-31T07:45:23.212Z","type":"quit"}
{"nick":"hallsy","date":"2013-12-31T07:45:53.934Z","type":"join"}
{"nick":"hallsy","message":"Hi. Am I right in thinking uv__inotify_read won't pass on IN_Q_OVERFLOW ?","date":"2013-12-31T07:45:58.642Z","type":"message"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-12-31T07:55:43.388Z","type":"quit"}
{"nick":"M28_","new_nick":"M28","date":"2013-12-31T07:58:51.417Z","type":"nick"}
