{"nick":"ircretary","reason":"Remote host closed the connection","date":"2012-12-19T00:00:01.257Z","type":"quit"}
{"nick":"ircretary","date":"2012-12-19T00:00:09.139Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-12-19T00:06:23.303Z","type":"quit"}
{"nick":"loladiro","date":"2012-12-19T00:20:06.003Z","type":"join"}
{"nick":"mraleph","reason":"Ping timeout: 264 seconds","date":"2012-12-19T00:21:06.193Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2012-12-19T00:28:51.446Z","type":"quit"}
{"nick":"bradleymeck","date":"2012-12-19T00:31:23.944Z","type":"join"}
{"nick":"mikeal","date":"2012-12-19T00:36:35.882Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2012-12-19T00:37:54.536Z","type":"quit"}
{"nick":"dscape","reason":"Excess Flood","date":"2012-12-19T00:50:34.382Z","type":"quit"}
{"nick":"dscape","date":"2012-12-19T00:50:53.289Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-12-19T00:57:09.160Z","type":"quit"}
{"nick":"piscisaureus_","date":"2012-12-19T00:58:21.912Z","type":"join"}
{"nick":"loladiro","date":"2012-12-19T00:58:36.605Z","type":"join"}
{"nick":"piscisaureus_","reason":"Client Quit","date":"2012-12-19T00:59:36.257Z","type":"quit"}
{"nick":"philips_","reason":"Excess Flood","date":"2012-12-19T01:06:23.018Z","type":"quit"}
{"nick":"Benvie","date":"2012-12-19T01:09:41.266Z","type":"quit"}
{"nick":"philips_","date":"2012-12-19T01:10:33.888Z","type":"join"}
{"nick":"TooTallNate","date":"2012-12-19T01:18:28.223Z","type":"join"}
{"nick":"jmar777","date":"2012-12-19T01:25:39.939Z","type":"join"}
{"nick":"lohkey","date":"2012-12-19T01:44:04.202Z","type":"part"}
{"nick":"lohkey_","date":"2012-12-19T01:44:28.865Z","type":"join"}
{"nick":"lohkey_","reason":"Client Quit","date":"2012-12-19T01:44:28.993Z","type":"quit"}
{"nick":"abraxas","date":"2012-12-19T01:47:45.092Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2012-12-19T01:53:28.590Z","type":"quit"}
{"nick":"wolfeidau","message":"Gday having issues with a native module, can't require('netif') when it is installed via npm for some reason, any ideas?","date":"2012-12-19T01:56:52.358Z","type":"message"}
{"nick":"wolfeidau","message":"It is just a module with one method","date":"2012-12-19T01:57:11.449Z","type":"message"}
{"nick":"chilts","message":"did it compile fine on install?","date":"2012-12-19T01:59:49.240Z","type":"message"}
{"nick":"chilts","message":"want me to try it?","date":"2012-12-19T01:59:53.678Z","type":"message"}
{"nick":"chilts","message":"heh, I was thinking this was the other channel :)","date":"2012-12-19T02:00:06.380Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2012-12-19T02:01:42.757Z","type":"quit"}
{"nick":"joshthecoder","reason":"Quit: Leaving...","date":"2012-12-19T02:15:40.560Z","type":"quit"}
{"nick":"c4milo","date":"2012-12-19T02:15:56.907Z","type":"join"}
{"nick":"indexzero","date":"2012-12-19T02:17:20.627Z","type":"join"}
{"nick":"wolfeidau","message":"Sorry just learnt about bindings... ","date":"2012-12-19T02:18:43.290Z","type":"message"}
{"nick":"mmalecki","message":"wolfeidau: #node.js channel might be better for you then","date":"2012-12-19T02:25:26.175Z","type":"message"}
{"nick":"wolfeidau","message":"mmalecki: Yeah cheers","date":"2012-12-19T02:26:13.288Z","type":"message"}
{"nick":"wolfeidau","message":"Thought it was a little off topic after posting it here","date":"2012-12-19T02:26:44.984Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2012-12-19T02:38:04.037Z","type":"quit"}
{"nick":"indexzero","date":"2012-12-19T02:44:35.623Z","type":"join"}
{"nick":"mmalecki","new_nick":"mmalecki[zzz]","date":"2012-12-19T02:57:01.255Z","type":"nick"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2012-12-19T03:01:44.713Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 246 seconds","date":"2012-12-19T03:07:01.788Z","type":"quit"}
{"nick":"joshthecoder","date":"2012-12-19T03:08:05.233Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2012-12-19T03:29:52.793Z","type":"quit"}
{"nick":"sblom","reason":"Ping timeout: 276 seconds","date":"2012-12-19T03:36:44.963Z","type":"quit"}
{"nick":"brson","date":"2012-12-19T03:41:36.415Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2012-12-19T03:59:24.881Z","type":"quit"}
{"nick":"dr34dl0ck","date":"2012-12-19T04:01:37.954Z","type":"join"}
{"nick":"kazupon","date":"2012-12-19T04:06:37.918Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-12-19T04:09:36.356Z","type":"quit"}
{"nick":"dr34dl0ck","reason":"Quit: Colloquy for iPad - http://colloquy.mobi","date":"2012-12-19T04:12:47.446Z","type":"quit"}
{"nick":"loladiro","date":"2012-12-19T04:17:49.799Z","type":"join"}
{"nick":"abraxas","date":"2012-12-19T04:30:04.557Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-12-19T05:13:43.113Z","type":"quit"}
{"nick":"bradleymeck","date":"2012-12-19T05:27:38.883Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2012-12-19T05:47:38.530Z","type":"quit"}
{"nick":"loladiro","date":"2012-12-19T06:02:08.837Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2012-12-19T06:16:04.583Z","type":"quit"}
{"nick":"felixge","date":"2012-12-19T06:16:29.716Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2012-12-19T06:16:29.897Z","type":"quit"}
{"nick":"felixge","date":"2012-12-19T06:16:30.026Z","type":"join"}
{"nick":"pooya","date":"2012-12-19T06:26:27.953Z","type":"join"}
{"nick":"joshthecoder","reason":"Quit: Leaving...","date":"2012-12-19T06:35:18.653Z","type":"quit"}
{"nick":"pooya","reason":"Quit: pooya","date":"2012-12-19T06:35:33.641Z","type":"quit"}
{"nick":"felixge","reason":"Quit: felixge","date":"2012-12-19T06:47:46.609Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2012-12-19T06:49:40.902Z","type":"quit"}
{"nick":"felixge","date":"2012-12-19T06:50:46.872Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2012-12-19T06:50:47.120Z","type":"quit"}
{"nick":"felixge","date":"2012-12-19T06:50:47.252Z","type":"join"}
{"nick":"`3rdEden","date":"2012-12-19T07:01:37.331Z","type":"join"}
{"nick":"abraxas","date":"2012-12-19T07:02:10.367Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-12-19T07:09:34.409Z","type":"quit"}
{"nick":"rendar","date":"2012-12-19T07:19:16.989Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2012-12-19T07:36:44.604Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2012-12-19T08:03:27.352Z","type":"quit"}
{"nick":"rendar","date":"2012-12-19T08:09:20.503Z","type":"quit"}
{"nick":"rendar","date":"2012-12-19T08:10:30.875Z","type":"join"}
{"nick":"abraxas","date":"2012-12-19T08:16:56.832Z","type":"join"}
{"nick":"wolfeidau","date":"2012-12-19T08:17:24.712Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2012-12-19T08:22:55.089Z","type":"quit"}
{"nick":"felixge","reason":"Quit: felixge","date":"2012-12-19T08:24:17.799Z","type":"quit"}
{"nick":"felixge","date":"2012-12-19T08:30:18.896Z","type":"join"}
{"nick":"felixge","reason":"Client Quit","date":"2012-12-19T08:31:36.241Z","type":"quit"}
{"nick":"bradleymeck","date":"2012-12-19T08:41:22.441Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2012-12-19T08:44:21.729Z","type":"quit"}
{"nick":"indexzero","date":"2012-12-19T08:48:18.968Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2012-12-19T09:08:50.818Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2012-12-19T09:59:07.114Z","type":"quit"}
{"nick":"bnoordhuis","date":"2012-12-19T10:10:47.410Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u000214ed173\u0002 : test: add TAP output to the test runner - http://git.io/tqlCqQ","date":"2012-12-19T10:17:10.894Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: so...","date":"2012-12-19T10:18:30.508Z","type":"message"}
{"nick":"indutny","message":"why TAP? :)","date":"2012-12-19T10:18:32.905Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: because there's a lot of tools that know tap, probably","date":"2012-12-19T10:18:48.739Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine is working on setting up CI, if i'm not mistaken","date":"2012-12-19T10:19:03.554Z","type":"message"}
{"nick":"indutny","message":"aah","date":"2012-12-19T10:23:46.929Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-12-19T10:23:47.644Z","type":"message"}
{"nick":"loladiro","date":"2012-12-19T10:29:30.320Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2012-12-19T10:31:47.570Z","type":"quit"}
{"nick":"yawnt","message":"hey i was trying to pass an error to the callback","date":"2012-12-19T10:41:48.889Z","type":"message"}
{"nick":"yawnt","message":"but using Handle<Value> err = Exception::Error(String::New(\"err\")) fails with invalid conversion from ‘v8::Value*’ to ‘v8::Primitive*’","date":"2012-12-19T10:42:15.613Z","type":"message"}
{"nick":"yawnt","message":"any idea why?","date":"2012-12-19T10:42:18.621Z","type":"message"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2012-12-19T10:44:39.881Z","type":"quit"}
{"nick":"bnoordhuis","message":"yawnt: does Local<Value> err = ... work?","date":"2012-12-19T10:46:36.819Z","type":"message"}
{"nick":"yawnt","message":"no","date":"2012-12-19T10:47:31.223Z","type":"message"}
{"nick":"bnoordhuis","message":"then you should probably post some full code :)","date":"2012-12-19T10:48:26.609Z","type":"message"}
{"nick":"yawnt","message":"https://gist.github.com/28b56bf1a7b1aa2f3a26 ","date":"2012-12-19T10:49:48.828Z","type":"message"}
{"nick":"yawnt","message":"sorry :P","date":"2012-12-19T10:49:51.136Z","type":"message"}
{"nick":"yawnt","message":"value is the result to a call to msgget()","date":"2012-12-19T10:50:07.369Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-12-19T10:50:36.080Z","type":"message"}
{"nick":"indutny","message":"I think you should not use ternary here","date":"2012-12-19T10:50:41.690Z","type":"message"}
{"nick":"indutny","message":"yawnt: split it into if","date":"2012-12-19T10:50:55.209Z","type":"message"}
{"nick":"yawnt","message":"i did notice that without the ternary it works","date":"2012-12-19T10:50:59.416Z","type":"message"}
{"nick":"yawnt","message":"why is that?","date":"2012-12-19T10:51:04.272Z","type":"message"}
{"nick":"indutny","message":"well, I suppose because right and left side of ternary have different types","date":"2012-12-19T10:51:21.409Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: please weigh in","date":"2012-12-19T10:51:27.714Z","type":"message"}
{"nick":"indutny","message":"i'm getting out of answers here","date":"2012-12-19T10:51:32.181Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, different types","date":"2012-12-19T10:52:06.872Z","type":"message"}
{"nick":"bnoordhuis","message":"Null() returns a Primitive","date":"2012-12-19T10:52:11.284Z","type":"message"}
{"nick":"bnoordhuis","message":"*Handle<Primitive>","date":"2012-12-19T10:52:23.830Z","type":"message"}
{"nick":"yawnt","message":"ah that's why","date":"2012-12-19T10:52:44.400Z","type":"message"}
{"nick":"yawnt","message":"it compiles now","date":"2012-12-19T10:52:48.128Z","type":"message"}
{"nick":"yawnt","message":"thanks!","date":"2012-12-19T10:52:50.105Z","type":"message"}
{"nick":"indutny","message":"yw","date":"2012-12-19T10:52:53.489Z","type":"message"}
{"nick":"rendar","message":"question, the uv_read, be it async or sync, in both cases put forward the current position (that one got by lseek()) of the file (a seekable stream) ?","date":"2012-12-19T11:02:14.306Z","type":"message"}
{"nick":"yawnt","message":"fyi, Local<Value>::New(Null()) worked as well","date":"2012-12-19T11:07:17.030Z","type":"message"}
{"nick":"yawnt","message":":)","date":"2012-12-19T11:07:21.043Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: depends. if you do a positional read, i.e. specify the offset, it uses pread()","date":"2012-12-19T11:08:28.039Z","type":"message"}
{"nick":"bnoordhuis","message":"pread doesn't touch the file position","date":"2012-12-19T11:08:38.408Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: btw, uv_read or uv_fs_read?","date":"2012-12-19T11:09:13.263Z","type":"message"}
{"nick":"bnoordhuis","message":"i assumed you meant the latter","date":"2012-12-19T11:09:24.432Z","type":"message"}
{"nick":"rendar","message":"yeah","date":"2012-12-19T11:11:43.985Z","type":"message"}
{"nick":"rendar","message":"uv_fs_read","date":"2012-12-19T11:11:44.167Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: i thought uv_read could be used as a general read, then it dispatched to the various uv_*_read() checking the type of the stream..","date":"2012-12-19T11:12:36.988Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: not quite. it only works for uv_pipe_t, uv_tcp_t and uv_tty_t","date":"2012-12-19T11:13:08.484Z","type":"message"}
{"nick":"rendar","message":"got it","date":"2012-12-19T11:13:32.416Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: the thing is, in some platform (e.g. Windows) if i perform an async read (or write) with a seekable stream, say for example with ReadFile, the position pointer is not touched. So i guess libuv have to change this behavior manually, changing that pointer with the apis","date":"2012-12-19T11:15:13.644Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: that's possible","date":"2012-12-19T11:16:39.942Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: yeah, but i don't see anything similar in 'fs__read'","date":"2012-12-19T11:17:21.071Z","type":"message"}
{"nick":"bnoordhuis","message":"in src/unix/fs.c or src/win/fs.c?","date":"2012-12-19T11:17:43.052Z","type":"message"}
{"nick":"rendar","message":"src/win/fs.c","date":"2012-12-19T11:17:53.901Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus is the one to ask about that","date":"2012-12-19T11:18:26.496Z","type":"message"}
{"nick":"rendar","message":"thanks","date":"2012-12-19T11:18:39.355Z","type":"message"}
{"nick":"rendar","message":":)","date":"2012-12-19T11:18:40.008Z","type":"message"}
{"nick":"bnoordhuis","message":"http_simple, buffer/1 with keep-alive on. before: 25.10 req/s, after: 14175.07 req/s","date":"2012-12-19T11:33:35.422Z","type":"message"}
{"nick":"bnoordhuis","message":"it's not every day you implement a 565x speedup :)","date":"2012-12-19T11:33:51.757Z","type":"message"}
{"nick":"rendar","message":"cool! :)","date":"2012-12-19T11:36:44.719Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: this enormous speed up is due of keep-alive on ?","date":"2012-12-19T11:37:00.879Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: no, it's because failed to pack the http headers and the response body into a single tcp packet","date":"2012-12-19T11:37:25.506Z","type":"message"}
{"nick":"rendar","message":"oh","date":"2012-12-19T11:37:41.188Z","type":"message"}
{"nick":"bnoordhuis","message":"if you send a string as a response it basically does response = headers + body","date":"2012-12-19T11:37:44.157Z","type":"message"}
{"nick":"bnoordhuis","message":"but with a buffer as the body you get write(headers); write(body)","date":"2012-12-19T11:37:58.009Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: yeah, a typical http thing","date":"2012-12-19T11:38:01.549Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: but that write(headrs); write(body); is intented to writing into a buffer or into the socket?","date":"2012-12-19T11:41:13.436Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: it writes to the socket. it's technically possible for both writes to end up in the same packet","date":"2012-12-19T11:41:57.135Z","type":"message"}
{"nick":"bnoordhuis","message":"but in practice it never seems to happen, at least not on localhost","date":"2012-12-19T11:42:06.413Z","type":"message"}
{"nick":"rendar","message":"hmm i see","date":"2012-12-19T11:42:29.647Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: so 2 or more write() can be packed into a single tcp packet, but how? with some ioctl? it seems an OS thing :)","date":"2012-12-19T11:43:02.041Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: oh, sorry. i was referring to net.Socket.write() back there","date":"2012-12-19T11:43:27.043Z","type":"message"}
{"nick":"rendar","message":"oh i see","date":"2012-12-19T11:43:39.457Z","type":"message"}
{"nick":"bnoordhuis","message":"which passes it off to libuv. libuv then does the actual write(2) or writev(2) syscall","date":"2012-12-19T11:43:53.626Z","type":"message"}
{"nick":"rendar","message":"yeah","date":"2012-12-19T11:44:01.826Z","type":"message"}
{"nick":"rendar","message":"well, in which cases writev is preferred?","date":"2012-12-19T11:44:14.650Z","type":"message"}
{"nick":"bnoordhuis","message":"if you have gather/scatter i/o","date":"2012-12-19T11:44:38.609Z","type":"message"}
{"nick":"bnoordhuis","message":"i.e. several buffers in disjointed places that all should be written out","date":"2012-12-19T11:44:51.073Z","type":"message"}
{"nick":"bnoordhuis","message":"libuv prefers write() because it's usually slightly faster than writev()","date":"2012-12-19T11:45:09.009Z","type":"message"}
{"nick":"bnoordhuis","message":"but there's still some room for improvement here, i think","date":"2012-12-19T11:45:24.122Z","type":"message"}
{"nick":"rendar","message":"yes i know that, but i mean, in which cases libuv selected the gather/scatter i/o? or is the user that tells libuv to do that?","date":"2012-12-19T11:45:27.973Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, the user","date":"2012-12-19T11:45:34.376Z","type":"message"}
{"nick":"rendar","message":"got it","date":"2012-12-19T11:45:38.591Z","type":"message"}
{"nick":"bnoordhuis","message":"when you call uv_write() with bufs > 1","date":"2012-12-19T11:45:44.787Z","type":"message"}
{"nick":"bnoordhuis","message":"but we should maybe optimize that and coalesce two uv_write() calls with bufs==1 into a single writev() instead of two write() syscalls","date":"2012-12-19T11:46:19.282Z","type":"message"}
{"nick":"rendar","message":"i see","date":"2012-12-19T11:46:24.232Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: you mean with a timer, which if expired and no other us_write has been called calls write(), instead calls writev() ?","date":"2012-12-19T11:47:29.263Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: possibly but not necessarily","date":"2012-12-19T11:48:03.558Z","type":"message"}
{"nick":"bnoordhuis","message":"a libuv stream handle has a list of pending writes","date":"2012-12-19T11:48:18.880Z","type":"message"}
{"nick":"bnoordhuis","message":"if length(list) > 1, it could coalesce the entries","date":"2012-12-19T11:48:37.645Z","type":"message"}
{"nick":"bnoordhuis","message":"but that takes some reshuffling","date":"2012-12-19T11:48:45.284Z","type":"message"}
{"nick":"rendar","message":"i see","date":"2012-12-19T11:49:36.904Z","type":"message"}
{"nick":"bnoordhuis","message":"in case you're wondering, it's the write_queue fields in include/uv-private/uv-unix.h","date":"2012-12-19T11:50:13.469Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: so when you actually call uv_write, it simply append a packet into that stream handle's list?!","date":"2012-12-19T11:50:22.102Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2012-12-19T11:50:28.744Z","type":"message"}
{"nick":"rendar","message":"oh, got it!","date":"2012-12-19T11:50:33.992Z","type":"message"}
{"nick":"bnoordhuis","message":"it tries to write it out immediately but if that's not possible, it goes into the queue","date":"2012-12-19T11:50:53.903Z","type":"message"}
{"nick":"rendar","message":"i see","date":"2012-12-19T11:51:22.102Z","type":"message"}
{"nick":"rendar","message":"it not possible = another async i/o is pending?","date":"2012-12-19T11:51:32.605Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: no, because the kernel's send buffer is full","date":"2012-12-19T11:52:08.170Z","type":"message"}
{"nick":"bnoordhuis","message":"i.e. write() returns EAGAIN","date":"2012-12-19T11:52:14.658Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: oh i see","date":"2012-12-19T11:52:19.882Z","type":"message"}
{"nick":"rendar","message":"so if write()==EAGAIN -> put into the list","date":"2012-12-19T11:52:39.863Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2012-12-19T11:52:58.944Z","type":"message"}
{"nick":"bnoordhuis","message":"or if there are already write reqs in the list","date":"2012-12-19T11:53:09.754Z","type":"message"}
{"nick":"rendar","message":"i'm reading the src, but what is that stuff starting with ngx_* ?","date":"2012-12-19T11:53:15.835Z","type":"message"}
{"nick":"bnoordhuis","message":"because you've got to send them out in order","date":"2012-12-19T11:53:16.515Z","type":"message"}
{"nick":"bnoordhuis","message":"it's the queue implementation we stole from nginx","date":"2012-12-19T11:53:28.458Z","type":"message"}
{"nick":"rendar","message":"yeah of course","date":"2012-12-19T11:53:29.832Z","type":"message"}
{"nick":"rendar","message":"i see","date":"2012-12-19T11:53:43.217Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: of course that is a interlocked list, i guess","date":"2012-12-19T11:53:53.204Z","type":"message"}
{"nick":"bnoordhuis","message":"though nginx's is heavily inspired by the queue implementations from the linux and freebsd kernel sources","date":"2012-12-19T11:53:53.332Z","type":"message"}
{"nick":"bnoordhuis","message":"it's an intrusive data structure","date":"2012-12-19T11:54:02.767Z","type":"message"}
{"nick":"bnoordhuis","message":"i.e. you embed the ngx_queue_t in your own structs","date":"2012-12-19T11:54:14.744Z","type":"message"}
{"nick":"rendar","message":"mm i see","date":"2012-12-19T11:54:16.870Z","type":"message"}
{"nick":"rendar","message":"like a linked intrusive list","date":"2012-12-19T11:54:30.963Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2012-12-19T11:54:33.416Z","type":"message"}
{"nick":"rendar","message":"yeah cool","date":"2012-12-19T11:54:40.673Z","type":"message"}
{"nick":"bnoordhuis","message":"that's one benefit c has over c++","date":"2012-12-19T11:54:43.149Z","type":"message"}
{"nick":"bnoordhuis","message":"intrusive data structures are technically illegal in c++","date":"2012-12-19T11:54:55.985Z","type":"message"}
{"nick":"bnoordhuis","message":"though we still use them in node.js - don't tell anyone :)","date":"2012-12-19T11:55:11.240Z","type":"message"}
{"nick":"rendar","message":"well, i've done an intrusive list and hash map time ago, basically your class should inherit from an hook class, for intrusive stuff :)","date":"2012-12-19T11:55:24.856Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: ehehe","date":"2012-12-19T11:55:32.456Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: like: struct IOReq : public IntrusiveListHook { stuf... };","date":"2012-12-19T11:56:12.002Z","type":"message"}
{"nick":"bnoordhuis","message":"^ that's only legal if neither class/struct has virtual members","date":"2012-12-19T11:56:31.634Z","type":"message"}
{"nick":"rendar","message":"well, there is a trick also for virtual members","date":"2012-12-19T11:57:04.152Z","type":"message"}
{"nick":"bnoordhuis","message":"err, i'm assuming you do pointer arithmetic to look up the embedding class","date":"2012-12-19T11:57:12.779Z","type":"message"}
{"nick":"bnoordhuis","message":"if not, disregard what i said :)","date":"2012-12-19T11:57:20.236Z","type":"message"}
{"nick":"rendar","message":"it is used in boost's intrusive_list iirc, i will check","date":"2012-12-19T11:57:25.620Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: oh yeah","date":"2012-12-19T11:57:37.347Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: if you do pointer arithmetic it would be cumbersome","date":"2012-12-19T11:57:45.337Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, and dangerous - the c++ spec doesn't make guarantees about how or where the vtable pointer is laid out","date":"2012-12-19T11:58:19.470Z","type":"message"}
{"nick":"rendar","message":"exactly","date":"2012-12-19T11:58:34.409Z","type":"message"}
{"nick":"rendar","message":"with that intrusive structure you could use member function to manage it, you don't need pointer math anymore","date":"2012-12-19T11:59:05.160Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: i'm thinking of something like this -> class foo { struct intrusive_list list; };","date":"2012-12-19T12:00:05.898Z","type":"message"}
{"nick":"rendar","message":"btw this is an interesting point i wish to discuss: when libuv completed async i/o with the threadpool, is the threadpool itself that run the callback, or it just queue it to the caller thread?","date":"2012-12-19T12:00:24.150Z","type":"message"}
{"nick":"bnoordhuis","message":"then you do foo* p = container_of(list_ptr, class foo, list)","date":"2012-12-19T12:00:28.524Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: yeah right","date":"2012-12-19T12:00:38.266Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: the callback gets run on the thread that called the uv_fs function","date":"2012-12-19T12:01:09.667Z","type":"message"}
{"nick":"rendar","message":"i see","date":"2012-12-19T12:01:19.454Z","type":"message"}
{"nick":"rendar","message":"so libuv ensures that every callback will be called from one thread","date":"2012-12-19T12:01:39.196Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2012-12-19T12:01:43.118Z","type":"message"}
{"nick":"rendar","message":"always the same","date":"2012-12-19T12:01:45.610Z","type":"message"}
{"nick":"bnoordhuis","message":"think of the uv_fs stuff as a thin shim over uv_queue_work","date":"2012-12-19T12:02:03.698Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: yeah","date":"2012-12-19T12:02:14.613Z","type":"message"}
{"nick":"bnoordhuis","message":"the work_cb gets called from the threadpool, the after_work_cb gets called from the original thread","date":"2012-12-19T12:02:24.024Z","type":"message"}
{"nick":"rendar","message":"i see","date":"2012-12-19T12:03:07.218Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: do you think it would be dangerous call the callback from the threadpool?","date":"2012-12-19T12:03:24.989Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: in general or in the particular case of uv_fs_*?","date":"2012-12-19T12:03:41.796Z","type":"message"}
{"nick":"rendar","message":"i mean in general","date":"2012-12-19T12:03:50.691Z","type":"message"}
{"nick":"bnoordhuis","message":"not if your data structures are protected by locks","date":"2012-12-19T12:04:08.759Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: your data structures = data used inside the callback scope?","date":"2012-12-19T12:04:43.486Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: i mean data structures that are shared by both threads","date":"2012-12-19T12:05:04.489Z","type":"message"}
{"nick":"bnoordhuis","message":"in general your callback will want to do something with the result","date":"2012-12-19T12:05:25.329Z","type":"message"}
{"nick":"bnoordhuis","message":"that usually involves updating some state or whatever","date":"2012-12-19T12:05:35.581Z","type":"message"}
{"nick":"rendar","message":"yeah","date":"2012-12-19T12:05:47.037Z","type":"message"}
{"nick":"bnoordhuis","message":"if that state is accessed by multiple threads, you need proper locking","date":"2012-12-19T12:05:49.532Z","type":"message"}
{"nick":"rendar","message":"i see","date":"2012-12-19T12:05:55.892Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: but i think this arises a problem: what about if i have 2 async i/o pending R1 and R2 requests, (assuming the callback is runned by the threadpool) and they are passed to the thread pool to threads T1 (for R1) and T2 (for R2) but for the unpredictable scheduling of the OS, T2 is runned _before_ T1, even if the i/o request R1 happened _before_ R2? shouldn't that mess things up?","date":"2012-12-19T12:08:14.714Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: why would that be an issue?","date":"2012-12-19T12:09:40.961Z","type":"message"}
{"nick":"bnoordhuis","message":"if you want them run in order, you shouldn't start the second req until the first one has completed","date":"2012-12-19T12:10:08.649Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis: hmmm right, so basically you call other i/o operations directly form the callback","date":"2012-12-19T12:10:42.853Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2012-12-19T12:10:49.759Z","type":"message"}
{"nick":"rendar","message":"yeah right, that absoltely makes sense","date":"2012-12-19T12:11:18.890Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki[zzz]: ping","date":"2012-12-19T12:12:32.660Z","type":"message"}
{"nick":"sgallagh","date":"2012-12-19T12:34:05.623Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2012-12-19T13:09:29.241Z","type":"quit"}
{"nick":"bnoordhuis","message":"bleh, why is ab so shitty?","date":"2012-12-19T13:15:55.045Z","type":"message"}
{"nick":"bnoordhuis","message":"ab -k with a server that responds with Connection: keep-alive, Transfer-Encoding: chunked hangs ab :/","date":"2012-12-19T13:21:23.848Z","type":"message"}
{"nick":"bnoordhuis","action":"goes off to write a libuv+http_parser ab replacement","date":"2012-12-19T13:21:59.934Z","type":"action"}
{"nick":"loladiro","date":"2012-12-19T13:57:17.776Z","type":"join"}
{"nick":"indutny","message":"hahaha","date":"2012-12-19T14:08:55.302Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: finally","date":"2012-12-19T14:08:59.540Z","type":"message"}
{"nick":"indutny","message":"I was waiting for it for ages","date":"2012-12-19T14:09:03.462Z","type":"message"}
{"nick":"bnoordhuis","message":"i've been thinking about it for a while now","date":"2012-12-19T14:09:29.741Z","type":"message"}
{"nick":"indutny","message":"and?","date":"2012-12-19T14:09:37.208Z","type":"message"}
{"nick":"bnoordhuis","message":"today ab finally pissed me off one time too many","date":"2012-12-19T14:09:43.961Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-12-19T14:09:47.140Z","type":"message"}
{"nick":"indutny","message":"well, I was thinking about it many times","date":"2012-12-19T14:09:52.449Z","type":"message"}
{"nick":"indutny","message":"considering that siege is completely impredictable","date":"2012-12-19T14:10:00.416Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, and not that useful for what i need","date":"2012-12-19T14:10:13.249Z","type":"message"}
{"nick":"indutny","message":"indeed","date":"2012-12-19T14:10:18.917Z","type":"message"}
{"nick":"mmalecki[zzz]","message":"bnoordhuis: pong","date":"2012-12-19T14:10:20.832Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: if it'll support tls","date":"2012-12-19T14:10:24.633Z","type":"message"}
{"nick":"bnoordhuis","message":"siege is probably okay if you want to simulate a user","date":"2012-12-19T14:10:27.478Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I would be really pleased","date":"2012-12-19T14:10:29.004Z","type":"message"}
{"nick":"mmalecki[zzz]","new_nick":"mmalecki","date":"2012-12-19T14:10:34.806Z","type":"nick"}
{"nick":"bnoordhuis","message":"i'll see what i can do","date":"2012-12-19T14:10:35.193Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: simulate user - sounds quite vague","date":"2012-12-19T14:10:37.361Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: i.e. a user clicking around on a website","date":"2012-12-19T14:10:50.447Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: though, benchmarking tls is as hard as writing fast tls server","date":"2012-12-19T14:10:50.668Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: it's still pretty vague :)","date":"2012-12-19T14:10:58.728Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: pong yourself. i may have a performance patch that's worth testing","date":"2012-12-19T14:11:16.919Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-12-19T14:11:22.641Z","type":"message"}
{"nick":"indutny","message":"pong yourself","date":"2012-12-19T14:11:39.918Z","type":"message"}
{"nick":"indutny","message":"you know how is it called","date":"2012-12-19T14:11:43.065Z","type":"message"}
{"nick":"indutny","message":"icmp spoofing","date":"2012-12-19T14:11:48.340Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: https://github.com/bnoordhuis/node/compare/joyent:v0.8...bnoordhuis:http-pack-buffer <- but don't deploy right away :)","date":"2012-12-19T14:13:24.884Z","type":"message"}
{"nick":"bnoordhuis","message":"do you guys do res.end(buf) somewhere?","date":"2012-12-19T14:13:36.867Z","type":"message"}
{"nick":"bnoordhuis","message":"note buf, not string","date":"2012-12-19T14:13:46.407Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: maybe interesting for you too","date":"2012-12-19T14:14:10.105Z","type":"message"}
{"nick":"indutny","message":"yes it is","date":"2012-12-19T14:14:29.665Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: unlikely that we do","date":"2012-12-19T14:14:35.976Z","type":"message"}
{"nick":"indutny","message":"what is performance improvement?","date":"2012-12-19T14:14:37.983Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: oh, a measly 750x","date":"2012-12-19T14:15:02.740Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: on my system, i went from 250 req/s to nearly 20k req/s :)","date":"2012-12-19T14:15:33.810Z","type":"message"}
{"nick":"bnoordhuis","message":"err, 25 req/s","date":"2012-12-19T14:15:41.741Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: that patch, I call that cheating ;)","date":"2012-12-19T14:16:12.715Z","type":"message"}
{"nick":"bnoordhuis","message":"you say that as if it's a bad thing :)","date":"2012-12-19T14:16:25.726Z","type":"message"}
{"nick":"bnoordhuis","message":"the intriguing thing is it's been like that since at least 0.6.0 and no one's complained","date":"2012-12-19T14:16:57.766Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Vlad Tudose\u000f \u00037master\u000f * \u00024b115f8\u0002 : build: build libuv.a and libuv.so in different dirs  Fixes #659. (+1 more commits) - http://git.io/GkPxmA","date":"2012-12-19T14:35:31.060Z","type":"message"}
{"nick":"travis-ci","date":"2012-12-19T14:37:15.104Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#969 (master - 4b115f8 : Vlad Tudose): The build passed.","date":"2012-12-19T14:37:15.238Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/0820be70084a...4b115f89bf54","date":"2012-12-19T14:37:15.238Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/3740049","date":"2012-12-19T14:37:15.238Z","type":"message"}
{"nick":"travis-ci","date":"2012-12-19T14:37:15.238Z","type":"part"}
{"nick":"piscisaureus_","date":"2012-12-19T14:49:59.621Z","type":"join"}
{"nick":"piscisaureus_","message":"rendar: why do you need to change the file position?","date":"2012-12-19T14:51:55.220Z","type":"message"}
{"nick":"indexzero","date":"2012-12-19T14:58:00.667Z","type":"join"}
{"nick":"kazupon","date":"2012-12-19T15:11:26.991Z","type":"join"}
{"nick":"indutny","message":"piscisaureus_: bertje","date":"2012-12-19T15:13:14.922Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: please land inlined assembly","date":"2012-12-19T15:13:15.050Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: it's time","date":"2012-12-19T15:13:18.672Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: and drunk wednesday is not a reason to not do it","date":"2012-12-19T15:13:42.294Z","type":"message"}
{"nick":"joshthecoder","date":"2012-12-19T15:23:44.799Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2012-12-19T15:33:38.356Z","type":"quit"}
{"nick":"warz","date":"2012-12-19T15:37:49.297Z","type":"join"}
{"nick":"warz","reason":"Changing host","date":"2012-12-19T15:37:49.475Z","type":"quit"}
{"nick":"warz","date":"2012-12-19T15:37:49.607Z","type":"join"}
{"nick":"isaacs","message":"good morning","date":"2012-12-19T15:45:10.005Z","type":"message"}
{"nick":"indutny","message":"morning","date":"2012-12-19T15:45:30.524Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: re the pummel tests, one is trivial but the other... is not.","date":"2012-12-19T15:46:53.443Z","type":"message"}
{"nick":"bnoordhuis","message":"morning isaacs","date":"2012-12-19T15:47:16.176Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: test/pummel/test-net-write-callbacks.js is triky","date":"2012-12-19T15:47:17.913Z","type":"message"}
{"nick":"bnoordhuis","message":"what's the issue?","date":"2012-12-19T15:47:21.282Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: getting a stack overflow","date":"2012-12-19T15:47:26.973Z","type":"message"}
{"nick":"isaacs","message":"streams2 is using recursion for something that was done with a loop before.","date":"2012-12-19T15:47:41.363Z","type":"message"}
{"nick":"isaacs","message":"so i need to fix that","date":"2012-12-19T15:47:44.183Z","type":"message"}
{"nick":"bnoordhuis","message":"you could add tail recursion to v8 :)","date":"2012-12-19T15:48:01.196Z","type":"message"}
{"nick":"isaacs","message":"hahaha","date":"2012-12-19T15:48:04.303Z","type":"message"}
{"nick":"isaacs","message":"that'd be nice :)","date":"2012-12-19T15:48:07.723Z","type":"message"}
{"nick":"kazupon","date":"2012-12-19T15:48:22.622Z","type":"join"}
{"nick":"tjfontaine","message":"bnoordhuis: $20 and a case of beer for you when it's done","date":"2012-12-19T15:48:28.285Z","type":"message"}
{"nick":"isaacs","message":"i tried using nextTick, but it's *crazy* slow in this case, and gives me thousands of warnings.","date":"2012-12-19T15:48:30.794Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2012-12-19T15:48:31.147Z","type":"quit"}
{"nick":"isaacs","message":"needs a more involved refactor","date":"2012-12-19T15:48:40.452Z","type":"message"}
{"nick":"mmalecki","new_nick":"mmalecki[out]","date":"2012-12-19T15:48:48.505Z","type":"nick"}
{"nick":"bnoordhuis","message":"tjfontaine: i may prostitute my art but at least i'm not cheap","date":"2012-12-19T15:49:06.528Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: 25$?","date":"2012-12-19T15:49:17.768Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: what's that in real money?","date":"2012-12-19T15:49:32.273Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-12-19T15:49:39.624Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny, tjfontaine: in case you're wondering, c9 is effectively bankrupt. the days of free node.js sponsorship are over","date":"2012-12-19T15:51:13.372Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ok ok","date":"2012-12-19T15:51:29.717Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: 30$","date":"2012-12-19T15:51:31.664Z","type":"message"}
{"nick":"indutny","message":"you made me cry","date":"2012-12-19T15:51:42.783Z","type":"message"}
{"nick":"indutny","message":"but that's the final price","date":"2012-12-19T15:51:50.133Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: btw, I'm still receiving tons of email from c9","date":"2012-12-19T15:52:03.881Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: so I know","date":"2012-12-19T15:52:09.417Z","type":"message"}
{"nick":"bnoordhuis","message":"me too. it'll pass","date":"2012-12-19T15:52:15.202Z","type":"message"}
{"nick":"indutny","message":"I don't understand benchmarking","date":"2012-12-19T15:53:15.495Z","type":"message"}
{"nick":"indutny","message":"seriously","date":"2012-12-19T15:53:15.630Z","type":"message"}
{"nick":"indutny","message":"I don't get it","date":"2012-12-19T15:53:16.809Z","type":"message"}
{"nick":"bnoordhuis","message":"i have a t-shirt, 'ask me about benchmarking'","date":"2012-12-19T15:53:34.293Z","type":"message"}
{"nick":"indutny","message":"especially for multi-threaded apps","date":"2012-12-19T15:53:34.474Z","type":"message"}
{"nick":"piscisaureus_","message":"so people, in case you were wondering, c9.io is not going away or anything.","date":"2012-12-19T15:53:35.378Z","type":"message"}
{"nick":"tjfontaine","message":"hrm","date":"2012-12-19T15:53:57.505Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: bnoordhuis: why are you guys discussing it there? :)","date":"2012-12-19T15:54:55.304Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: because knowing is half the battle","date":"2012-12-19T15:55:07.396Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: so what's your benchmarking issue?","date":"2012-12-19T15:55:15.787Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: tlsnappy","date":"2012-12-19T15:55:20.356Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I can't figure out what has changed","date":"2012-12-19T15:55:26.674Z","type":"message"}
{"nick":"indutny","message":"and why performance degraded in 0.10","date":"2012-12-19T15:55:32.917Z","type":"message"}
{"nick":"sgallagh","reason":"Remote host closed the connection","date":"2012-12-19T15:55:37.260Z","type":"quit"}
{"nick":"indutny","message":"I mean 0.9.4-pre","date":"2012-12-19T15:55:38.929Z","type":"message"}
{"nick":"indutny","message":"I suppose event-loop ","date":"2012-12-19T15:55:52.386Z","type":"message"}
{"nick":"indutny","message":"is much more busy","date":"2012-12-19T15:55:56.437Z","type":"message"}
{"nick":"indutny","message":"and slow at dispatching sockets to threads","date":"2012-12-19T15:56:05.028Z","type":"message"}
{"nick":"sgallagh","date":"2012-12-19T15:56:08.860Z","type":"join"}
{"nick":"indutny","message":"because threads are doing relatively the same work","date":"2012-12-19T15:56:12.462Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: run perf and compare the logs, it's got a diff mode","date":"2012-12-19T15:56:12.978Z","type":"message"}
{"nick":"indutny","message":"I can't run","date":"2012-12-19T15:56:19.697Z","type":"message"}
{"nick":"indutny","message":"it","date":"2012-12-19T15:56:20.697Z","type":"message"}
{"nick":"indutny","message":"well","date":"2012-12-19T15:56:23.622Z","type":"message"}
{"nick":"indutny","message":"I'll try again","date":"2012-12-19T15:56:25.844Z","type":"message"}
{"nick":"indutny","message":"but last time I was seeing some wierd VM-specific stuff","date":"2012-12-19T15:56:35.513Z","type":"message"}
{"nick":"indutny","message":"you should remember it","date":"2012-12-19T15:56:41.515Z","type":"message"}
{"nick":"bnoordhuis","message":"then don't run it in a vm :)","date":"2012-12-19T15:56:44.889Z","type":"message"}
{"nick":"indutny","message":"hahah","date":"2012-12-19T15:56:49.872Z","type":"message"}
{"nick":"indutny","message":"then buy me a notebook","date":"2012-12-19T15:57:02.750Z","type":"message"}
{"nick":"indutny","message":"oh, that's not hipster","date":"2012-12-19T15:57:10.293Z","type":"message"}
{"nick":"indutny","message":"I should name it laptop","date":"2012-12-19T15:57:15.535Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-12-19T15:57:21.826Z","type":"message"}
{"nick":"bnoordhuis","message":"do it in the cloud","date":"2012-12-19T15:57:22.087Z","type":"message"}
{"nick":"indutny","message":"shower time","date":"2012-12-19T15:57:24.785Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: meh, cloud is so hipster","date":"2012-12-19T15:57:29.010Z","type":"message"}
{"nick":"bnoordhuis","message":"it sounds dirty too, phrased like that","date":"2012-12-19T15:57:38.785Z","type":"message"}
{"nick":"bnoordhuis","message":"\"do it in the cloud\"","date":"2012-12-19T15:57:42.030Z","type":"message"}
