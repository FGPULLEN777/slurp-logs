{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-07-25T00:00:00.393Z","type":"quit"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-07-25T00:00:06.259Z","type":"quit"}
{"nick":"ircretary","date":"2013-07-25T00:00:08.307Z","type":"join"}
{"nick":"isaacs","message":"trevnorris: pong","date":"2013-07-25T00:01:15.643Z","type":"message"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-07-25T00:03:11.894Z","type":"quit"}
{"nick":"qard","reason":"Quit: Leaving.","date":"2013-07-25T00:09:47.224Z","type":"quit"}
{"nick":"wavded","date":"2013-07-25T00:13:25.213Z","type":"join"}
{"nick":"isaacs","message":"trevnorris, bnoordhuis: Why macroify the type checks?","date":"2013-07-25T00:21:20.860Z","type":"message"}
{"nick":"wavded","reason":"Ping timeout: 260 seconds","date":"2013-07-25T00:27:35.990Z","type":"quit"}
{"nick":"isaacs","message":"trevnorris: that is, what's the motivation for doing it this way rather than just using the builtin coercing functions.  Is it better in some way?","date":"2013-07-25T00:28:11.853Z","type":"message"}
{"nick":"tjfontaine","message":"I think they just want to consolidate the core way of doing it, so we're a bit more explicit","date":"2013-07-25T00:28:51.527Z","type":"message"}
{"nick":"isaacs","message":"yeah.","date":"2013-07-25T00:30:22.007Z","type":"message"}
{"nick":"isaacs","message":"anyway, i gotta run","date":"2013-07-25T00:30:24.882Z","type":"message"}
{"nick":"tjfontaine","message":"are you still in jail?","date":"2013-07-25T00:30:51.704Z","type":"message"}
{"nick":"wavded","date":"2013-07-25T00:32:01.526Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-07-25T00:32:36.421Z","type":"quit"}
{"nick":"M28","date":"2013-07-25T00:35:34.164Z","type":"join"}
{"nick":"wavded","reason":"Ping timeout: 256 seconds","date":"2013-07-25T00:36:34.229Z","type":"quit"}
{"nick":"kazupon","date":"2013-07-25T00:37:39.314Z","type":"join"}
{"nick":"abraxas","date":"2013-07-25T00:37:53.335Z","type":"join"}
{"nick":"wavded","date":"2013-07-25T00:39:07.744Z","type":"join"}
{"nick":"wavded","reason":"Quit: Nighty night","date":"2013-07-25T00:44:46.282Z","type":"quit"}
{"nick":"AvianFlu_","date":"2013-07-25T00:47:02.261Z","type":"join"}
{"nick":"AvianFlu_","reason":"Remote host closed the connection","date":"2013-07-25T00:47:35.570Z","type":"quit"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2013-07-25T00:47:35.781Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-07-25T00:48:04.930Z","type":"join"}
{"nick":"wavded","date":"2013-07-25T00:55:57.748Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-07-25T00:56:51.441Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-07-25T00:57:03.027Z","type":"quit"}
{"nick":"mikeal","date":"2013-07-25T00:57:37.937Z","type":"join"}
{"nick":"Domenic_","message":"i assume the macro-ification is for perf benefits over doing `require(\"util\").isArray` or whatevs","date":"2013-07-25T00:57:43.585Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-07-25T00:59:08.230Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-07-25T00:59:36.306Z","type":"join"}
{"nick":"c4milo","date":"2013-07-25T01:01:25.566Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 276 seconds","date":"2013-07-25T01:05:40.095Z","type":"quit"}
{"nick":"kazupon","date":"2013-07-25T01:06:20.305Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-07-25T01:14:10.189Z","type":"quit"}
{"nick":"mikeal","date":"2013-07-25T01:14:28.671Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-07-25T01:19:07.271Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-07-25T01:19:18.507Z","type":"quit"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-07-25T01:24:32.981Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-07-25T01:34:49.776Z","type":"quit"}
{"nick":"dshaw_","date":"2013-07-25T01:37:50.013Z","type":"join"}
{"nick":"indexzero","date":"2013-07-25T01:50:43.749Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-07-25T01:58:26.032Z","type":"quit"}
{"nick":"mikeal","date":"2013-07-25T02:07:57.753Z","type":"join"}
{"nick":"pachet","reason":"Ping timeout: 256 seconds","date":"2013-07-25T02:12:54.356Z","type":"quit"}
{"nick":"indexzero","date":"2013-07-25T02:17:15.240Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-07-25T02:24:48.810Z","type":"nick"}
{"nick":"amartens","date":"2013-07-25T02:26:22.728Z","type":"join"}
{"nick":"amartens","reason":"Client Quit","date":"2013-07-25T02:26:35.886Z","type":"quit"}
{"nick":"kazupon","date":"2013-07-25T02:29:48.286Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 268 seconds","date":"2013-07-25T02:35:32.073Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-07-25T02:46:12.840Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-07-25T02:56:41.696Z","type":"join"}
{"nick":"mikeal","date":"2013-07-25T02:59:18.755Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-07-25T02:59:32.651Z","type":"quit"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-07-25T03:10:26.235Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-07-25T03:14:45.458Z","type":"quit"}
{"nick":"kazupon","date":"2013-07-25T03:16:33.749Z","type":"join"}
{"nick":"groundwater","date":"2013-07-25T03:17:27.998Z","type":"join"}
{"nick":"kazupon_","date":"2013-07-25T03:24:01.107Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-07-25T03:24:38.544Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-07-25T03:33:08.631Z","type":"quit"}
{"nick":"c4milo","date":"2013-07-25T03:33:34.553Z","type":"join"}
{"nick":"pachet","date":"2013-07-25T03:34:33.862Z","type":"join"}
{"nick":"pachet","reason":"Client Quit","date":"2013-07-25T03:34:43.053Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 256 seconds","date":"2013-07-25T03:38:04.222Z","type":"quit"}
{"nick":"kazupon_","reason":"Remote host closed the connection","date":"2013-07-25T03:39:01.495Z","type":"quit"}
{"nick":"kazupon","date":"2013-07-25T03:39:53.421Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-07-25T03:44:37.751Z","type":"quit"}
{"nick":"st_luke","date":"2013-07-25T03:44:48.999Z","type":"join"}
{"nick":"mikeal","date":"2013-07-25T03:49:33.977Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-07-25T03:50:23.851Z","type":"quit"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-07-25T03:51:50.830Z","type":"quit"}
{"nick":"indexzero","date":"2013-07-25T03:58:21.914Z","type":"join"}
{"nick":"kazupon","date":"2013-07-25T03:59:54.283Z","type":"join"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-07-25T04:14:00.609Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-07-25T04:24:52.495Z","type":"join"}
{"nick":"mikeal","date":"2013-07-25T04:24:58.924Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-07-25T04:26:43.689Z","type":"quit"}
{"nick":"bajtos","date":"2013-07-25T04:32:35.973Z","type":"join"}
{"nick":"wavded","reason":"Quit: Hasta la pasta","date":"2013-07-25T04:41:02.959Z","type":"quit"}
{"nick":"julianduque","reason":"Ping timeout: 264 seconds","date":"2013-07-25T04:42:09.856Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-07-25T04:51:50.817Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-07-25T04:52:03.304Z","type":"join"}
{"nick":"TooTallNate","reason":"Client Quit","date":"2013-07-25T04:52:05.610Z","type":"quit"}
{"nick":"c4milo","date":"2013-07-25T04:55:26.423Z","type":"join"}
{"nick":"kazupon_","date":"2013-07-25T05:00:57.282Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-07-25T05:01:07.443Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-07-25T05:09:44.765Z","type":"quit"}
{"nick":"dominictarr","date":"2013-07-25T05:18:26.769Z","type":"join"}
{"nick":"rje","reason":"Quit: Leaving...","date":"2013-07-25T05:21:17.597Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-07-25T05:25:39.165Z","type":"nick"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-07-25T05:27:30.920Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-07-25T05:38:33.748Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-07-25T05:43:45.291Z","type":"quit"}
{"nick":"bradleymeck_","date":"2013-07-25T05:44:41.936Z","type":"join"}
{"nick":"bradleymeck","reason":"Ping timeout: 260 seconds","date":"2013-07-25T05:46:20.087Z","type":"quit"}
{"nick":"bradleymeck_","new_nick":"bradleymeck","date":"2013-07-25T05:46:20.296Z","type":"nick"}
{"nick":"rje","date":"2013-07-25T05:48:28.489Z","type":"join"}
{"nick":"rje","reason":"Quit: Leaving...","date":"2013-07-25T05:57:14.534Z","type":"quit"}
{"nick":"rje","date":"2013-07-25T06:00:20.511Z","type":"join"}
{"nick":"hueniverse","date":"2013-07-25T06:01:27.731Z","type":"join"}
{"nick":"st_luke","date":"2013-07-25T06:01:38.760Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-07-25T06:03:33.376Z","type":"quit"}
{"nick":"mikeal","date":"2013-07-25T06:08:38.018Z","type":"join"}
{"nick":"kazupon_","reason":"Remote host closed the connection","date":"2013-07-25T06:11:43.408Z","type":"quit"}
{"nick":"kazupon","date":"2013-07-25T06:18:58.284Z","type":"join"}
{"nick":"paddybyers","date":"2013-07-25T06:19:30.088Z","type":"join"}
{"nick":"csaoh","date":"2013-07-25T06:27:08.318Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-07-25T06:30:39.891Z","type":"quit"}
{"nick":"csaoh","reason":"Client Quit","date":"2013-07-25T06:31:34.498Z","type":"quit"}
{"nick":"kazupon","date":"2013-07-25T06:33:46.070Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-07-25T06:43:40.104Z","type":"quit"}
{"nick":"qard","date":"2013-07-25T07:10:20.297Z","type":"join"}
{"nick":"qard","reason":"Client Quit","date":"2013-07-25T07:12:24.029Z","type":"quit"}
{"nick":"mikeal","date":"2013-07-25T07:13:51.517Z","type":"join"}
{"nick":"qard","date":"2013-07-25T07:17:31.334Z","type":"join"}
{"nick":"qmx","reason":"Ping timeout: 248 seconds","date":"2013-07-25T07:22:45.756Z","type":"quit"}
{"nick":"qard","reason":"Quit: Leaving.","date":"2013-07-25T07:24:31.463Z","type":"quit"}
{"nick":"paddybyers","reason":"Ping timeout: 276 seconds","date":"2013-07-25T07:24:37.085Z","type":"quit"}
{"nick":"`3E|ZZZ","new_nick":"`3E","date":"2013-07-25T07:25:27.448Z","type":"nick"}
{"nick":"qmx","date":"2013-07-25T07:25:36.184Z","type":"join"}
{"nick":"qmx","reason":"Changing host","date":"2013-07-25T07:25:36.602Z","type":"quit"}
{"nick":"qmx","date":"2013-07-25T07:25:36.602Z","type":"join"}
{"nick":"csaoh","date":"2013-07-25T07:26:06.564Z","type":"join"}
{"nick":"rendar","date":"2013-07-25T07:28:01.451Z","type":"join"}
{"nick":"hz","date":"2013-07-25T07:32:30.754Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-07-25T07:38:47.331Z","type":"quit"}
{"nick":"c4milo","date":"2013-07-25T07:39:15.207Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 245 seconds","date":"2013-07-25T07:43:28.015Z","type":"quit"}
{"nick":"qmx","reason":"Ping timeout: 260 seconds","date":"2013-07-25T07:48:07.916Z","type":"quit"}
{"nick":"qmx","date":"2013-07-25T07:50:05.622Z","type":"join"}
{"nick":"rendar","reason":"Ping timeout: 246 seconds","date":"2013-07-25T08:00:00.238Z","type":"quit"}
{"nick":"roxlu__","message":"hey!","date":"2013-07-25T08:06:08.174Z","type":"message"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-07-25T08:10:11.685Z","type":"quit"}
{"nick":"roxlu__","message":"I'm implementing pipes and I got a silly situation where I close the pipe (uv_close) but I can still write to the connected 'clients' (?)","date":"2013-07-25T08:10:24.271Z","type":"message"}
{"nick":"kazupon","date":"2013-07-25T08:10:35.283Z","type":"join"}
{"nick":"rendar","date":"2013-07-25T08:15:21.102Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-07-25T08:38:48.181Z","type":"nick"}
{"nick":"perezd","reason":"Quit: perezd","date":"2013-07-25T08:44:42.856Z","type":"quit"}
{"nick":"roxlu__","reason":"Quit: leaving","date":"2013-07-25T08:49:23.133Z","type":"quit"}
{"nick":"roxlu","date":"2013-07-25T08:49:31.168Z","type":"join"}
{"nick":"paddybyers","date":"2013-07-25T08:50:35.015Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-07-25T09:08:43.067Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033mscdex\u000f \u00037master\u000f * \u0002c63cdc8\u0002 : src: remove unused variables - http://git.io/5Y8CZg","date":"2013-07-25T09:15:48.036Z","type":"message"}
{"nick":"bnoordhuis","message":"sigh","date":"2013-07-25T09:25:58.579Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00024ce3a31\u0002 : test: fix signed/unsigned comparison warnings (+1 more commits) - http://git.io/4Yjv_g","date":"2013-07-25T09:26:04.233Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-07-25T09:50:09.335Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u0002b13941c\u0002 : build: dtrace shouldn't break out of tree builds - http://git.io/nq-oew","date":"2013-07-25T10:13:00.776Z","type":"message"}
{"nick":"dominictarr","date":"2013-07-25T10:24:29.839Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-07-25T10:25:47.913Z","type":"quit"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-07-25T10:30:11.572Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-07-25T10:31:54.157Z","type":"quit"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-07-25T10:38:13.428Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-07-25T10:41:07.833Z","type":"join"}
{"nick":"kazupon","date":"2013-07-25T10:44:00.302Z","type":"join"}
{"nick":"indutny","message":"hoya","date":"2013-07-25T10:57:24.808Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: how are you?","date":"2013-07-25T10:57:30.113Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: there's still one thing that I'd like you to look at https://github.com/joyent/node/pull/5882","date":"2013-07-25T10:58:23.096Z","type":"message"}
{"nick":"indutny","message":"please","date":"2013-07-25T10:58:25.781Z","type":"message"}
{"nick":"qmx","reason":"Ping timeout: 256 seconds","date":"2013-07-25T11:13:40.594Z","type":"quit"}
{"nick":"qmx","date":"2013-07-25T11:14:25.781Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002977e833\u0002 : build: add mingw makefile (+1 more commits) - http://git.io/fp-Cyg","date":"2013-07-25T11:15:14.673Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: i'll probably get around to it today","date":"2013-07-25T11:16:58.363Z","type":"message"}
{"nick":"indutny","message":"ok, cool","date":"2013-07-25T11:17:05.467Z","type":"message"}
{"nick":"indutny","message":"thank you","date":"2013-07-25T11:17:07.066Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: anything I could help you with?","date":"2013-07-25T11:17:14.405Z","type":"message"}
{"nick":"csaoh","date":"2013-07-25T11:18:45.125Z","type":"join"}
{"nick":"bnoordhuis","message":"indutny: um, anything particular you had in mind?","date":"2013-07-25T11:25:44.360Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm just going through pull requests and issues","date":"2013-07-25T11:25:52.561Z","type":"message"}
{"nick":"indutny","message":"ah, not really","date":"2013-07-25T11:25:58.063Z","type":"message"}
{"nick":"indutny","message":"probably I'll look at that threadpool thingy","date":"2013-07-25T11:26:03.734Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, that'd be good","date":"2013-07-25T11:26:11.464Z","type":"message"}
{"nick":"mikeal","reason":"Ping timeout: 240 seconds","date":"2013-07-25T11:29:45.142Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Read error: Operation timed out","date":"2013-07-25T11:35:48.213Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Brian White\u000f \u00037master\u000f * \u0002e3a657c\u0002 : unix, windows: add MAC to uv_interface_addresses() - http://git.io/kCymPQ","date":"2013-07-25T11:51:29.349Z","type":"message"}
{"nick":"indutny","message":"oh how I hate perl","date":"2013-07-25T11:54:01.715Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-07-25T11:55:34.774Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: how so?","date":"2013-07-25T12:01:02.432Z","type":"message"}
{"nick":"indutny","message":"do you really need comment on that? :)","date":"2013-07-25T12:01:58.373Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2013-07-25T12:11:57.959Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-07-25T12:13:43.351Z","type":"quit"}
{"nick":"mikeal","date":"2013-07-25T12:26:46.990Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 248 seconds","date":"2013-07-25T12:31:01.746Z","type":"quit"}
{"nick":"roxlu","message":"does libuv have cross platform signal handlers, like SIGINT  ? ","date":"2013-07-25T12:50:52.333Z","type":"message"}
{"nick":"felixge","date":"2013-07-25T12:54:37.769Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2013-07-25T12:54:37.980Z","type":"quit"}
{"nick":"felixge","date":"2013-07-25T12:54:37.980Z","type":"join"}
{"nick":"jmar777","date":"2013-07-25T12:55:34.519Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: thougths http://www.wolfssl.com/yaSSL/Products.html ?","date":"2013-07-25T12:56:14.288Z","type":"message"}
{"nick":"indutny","message":"thoughts*","date":"2013-07-25T12:58:34.679Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: not really. why do you ask?","date":"2013-07-25T13:01:00.682Z","type":"message"}
{"nick":"indutny","message":"actually","date":"2013-07-25T13:01:11.149Z","type":"message"}
{"nick":"indutny","message":"I want to write my own SSL implementation","date":"2013-07-25T13:01:17.112Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-07-25T13:01:21.186Z","type":"join"}
{"nick":"indutny","message":"but more I want to move to something saner than openssl","date":"2013-07-25T13:01:28.622Z","type":"message"}
{"nick":"dominictarr","date":"2013-07-25T13:01:45.186Z","type":"join"}
{"nick":"bajtos","date":"2013-07-25T13:01:53.363Z","type":"join"}
{"nick":"bnoordhuis","message":"indutny: what about the actual crypto? are you going to write that from scratch?","date":"2013-07-25T13:03:01.126Z","type":"message"}
{"nick":"indutny","message":"yeah, probably","date":"2013-07-25T13:03:09.989Z","type":"message"}
{"nick":"indutny","message":"eventually","date":"2013-07-25T13:03:23.135Z","type":"message"}
{"nick":"bnoordhuis","message":"brave","date":"2013-07-25T13:03:23.760Z","type":"message"}
{"nick":"bnoordhuis","message":"and probably foolish - but brave :)","date":"2013-07-25T13:03:29.824Z","type":"message"}
{"nick":"indutny","message":"there's not much crypto in SSL","date":"2013-07-25T13:03:34.531Z","type":"message"}
{"nick":"indutny","message":"and it can support limited number of ciphers","date":"2013-07-25T13:03:43.839Z","type":"message"}
{"nick":"indutny","message":"AES-SHA1","date":"2013-07-25T13:03:56.171Z","type":"message"}
{"nick":"indutny","message":"or RC4-MD5","date":"2013-07-25T13:04:01.414Z","type":"message"}
{"nick":"bnoordhuis","message":"MD5-NULL!","date":"2013-07-25T13:04:03.668Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-07-25T13:04:06.324Z","type":"message"}
{"nick":"indutny","message":"yes, that's the most simpliest","date":"2013-07-25T13:04:19.844Z","type":"message"}
{"nick":"bnoordhuis","message":"what about ECDH ciphers?","date":"2013-07-25T13:04:28.562Z","type":"message"}
{"nick":"indutny","message":"eventually too","date":"2013-07-25T13:04:47.525Z","type":"message"}
{"nick":"indutny","message":"ok, whatever","date":"2013-07-25T13:04:54.044Z","type":"message"}
{"nick":"indutny","message":"I'll use openssl","date":"2013-07-25T13:04:56.198Z","type":"message"}
{"nick":"indutny","message":"for encryption/hashing","date":"2013-07-25T13:04:59.376Z","type":"message"}
{"nick":"bnoordhuis","message":"sensible :)","date":"2013-07-25T13:05:01.626Z","type":"message"}
{"nick":"indutny","message":"and do CBC and stream-ciphering myself","date":"2013-07-25T13:05:11.262Z","type":"message"}
{"nick":"bnoordhuis","message":"cbc? isn't that frowned on these days?","date":"2013-07-25T13:05:43.055Z","type":"message"}
{"nick":"indutny","message":"well, yes","date":"2013-07-25T13:06:16.305Z","type":"message"}
{"nick":"indutny","message":"but it should be supported anyway","date":"2013-07-25T13:06:21.065Z","type":"message"}
{"nick":"indutny","message":"and also its not that bad","date":"2013-07-25T13:06:25.020Z","type":"message"}
{"nick":"indutny","message":"if you have different IV for each frame","date":"2013-07-25T13:06:31.952Z","type":"message"}
{"nick":"indutny","message":"and work properly with padding","date":"2013-07-25T13:06:44.049Z","type":"message"}
{"nick":"bajtos","message":"hey guys, I am wondering if you could help me with my TLS benchmark https://github.com/strongloop/strong-cluster-tls-store/tree/benchmark/benchmark","date":"2013-07-25T13:09:40.861Z","type":"message"}
{"nick":"bajtos","message":"when I run a single scenario (set of options), then I can get up to 1400 conn/sec.","date":"2013-07-25T13:10:21.154Z","type":"message"}
{"nick":"bajtos","message":"but when I run multiple scenarios one after another, the performance significantly drops","date":"2013-07-25T13:10:37.602Z","type":"message"}
{"nick":"bajtos","message":"even when running the same scenario multiple times, there can be ~30% drop in the number of connections opened per second","date":"2013-07-25T13:11:06.045Z","type":"message"}
{"nick":"bnoordhuis","message":"bajtos: what cipher are you using? try MD5-NULL first to exclude cpu overhead","date":"2013-07-25T13:11:41.648Z","type":"message"}
{"nick":"bajtos","message":"have you encountered any similar problem? how to best approach troubleshooting?","date":"2013-07-25T13:11:47.421Z","type":"message"}
{"nick":"bajtos","message":"ciphers do not matter","date":"2013-07-25T13:11:56.054Z","type":"message"}
{"nick":"bnoordhuis","message":"the reason i mention that is that intel cpus have this turboboost feature","date":"2013-07-25T13:12:01.993Z","type":"message"}
{"nick":"bajtos","message":"oh, bugger","date":"2013-07-25T13:12:12.921Z","type":"message"}
{"nick":"bnoordhuis","message":"where cores overclock until they get too hot, then they clock back","date":"2013-07-25T13:12:15.327Z","type":"message"}
{"nick":"bnoordhuis","message":"makes it kind of hard to do reliable benchmarks :)","date":"2013-07-25T13:12:31.847Z","type":"message"}
{"nick":"bnoordhuis","message":"you can usually disable it in the bios btw","date":"2013-07-25T13:12:38.744Z","type":"message"}
{"nick":"bnoordhuis","message":"same for hyperthreading, you probably want to disable that when benchmarking","date":"2013-07-25T13:12:59.774Z","type":"message"}
{"nick":"bajtos","message":"that sounds perfectly reasonable :)","date":"2013-07-25T13:13:12.270Z","type":"message"}
{"nick":"bajtos","message":"it was driving me crazy, since it was enough to wait like 10-20 seconds before running the benchmark again to get the same perf.","date":"2013-07-25T13:13:50.033Z","type":"message"}
{"nick":"bajtos","message":"in which case, I am going to reboot now :-D","date":"2013-07-25T13:14:01.162Z","type":"message"}
{"nick":"bnoordhuis","message":"heh :)","date":"2013-07-25T13:14:05.066Z","type":"message"}
{"nick":"bajtos","message":"hmm, not so quickly, apparently Mac don't have BIOS to change that settings","date":"2013-07-25T13:16:39.330Z","type":"message"}
{"nick":"indutny","message":"hahaha","date":"2013-07-25T13:17:21.423Z","type":"message"}
{"nick":"indutny","message":"just forget about benchmarking on mac","date":"2013-07-25T13:17:28.062Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, i don't know how that works on macbooks","date":"2013-07-25T13:17:28.271Z","type":"message"}
{"nick":"bnoordhuis","message":"btw, you're not benchmarking in a vm, are you?","date":"2013-07-25T13:17:43.398Z","type":"message"}
{"nick":"bnoordhuis","message":"because that's close to pointless","date":"2013-07-25T13:17:58.550Z","type":"message"}
{"nick":"bajtos","message":"bnoordhuis: of course not!","date":"2013-07-25T13:18:00.387Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, good :)","date":"2013-07-25T13:18:05.316Z","type":"message"}
{"nick":"bajtos","message":"bnoordhuis: unless OS X is one big VM","date":"2013-07-25T13:18:12.553Z","type":"message"}
{"nick":"bnoordhuis","message":"well... os x is certainly one big something - but not a vm, no","date":"2013-07-25T13:18:37.365Z","type":"message"}
{"nick":"bajtos","message":":-D","date":"2013-07-25T13:18:43.633Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, afk - biab","date":"2013-07-25T13:19:01.411Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 268 seconds","date":"2013-07-25T13:23:39.110Z","type":"quit"}
{"nick":"kazupon","date":"2013-07-25T13:24:12.039Z","type":"join"}
{"nick":"mikeal","date":"2013-07-25T13:27:03.247Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-07-25T13:29:33.739Z","type":"quit"}
{"nick":"indexzero","date":"2013-07-25T13:29:57.557Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 241 seconds","date":"2013-07-25T13:31:08.744Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-07-25T13:32:20.999Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-07-25T13:50:36.733Z","type":"quit"}
{"nick":"perezd","date":"2013-07-25T13:51:05.117Z","type":"join"}
{"nick":"bajtos","message":"indutny: fedor, could you perhaps run the benchmark for me on your machine?","date":"2013-07-25T13:51:27.150Z","type":"message"}
{"nick":"indutny","message":"I'm on mac too","date":"2013-07-25T13:51:33.782Z","type":"message"}
{"nick":"indutny","message":"but if you want - I can do it","date":"2013-07-25T13:51:43.727Z","type":"message"}
{"nick":"indutny","message":"also, if you're benchmarking ssl - please wait a bit","date":"2013-07-25T13:52:01.630Z","type":"message"}
{"nick":"bajtos","message":"well if mac is useless for bechmarks, then it isn't going to help - or is it?","date":"2013-07-25T13:52:03.464Z","type":"message"}
{"nick":"indutny","message":"I'm working on one patch that should speed up it a bit","date":"2013-07-25T13:52:17.774Z","type":"message"}
{"nick":"bajtos","message":"indutny: I am actually benchmarking the difference made by that two patches you wrote for my bugs and also for cluster-messaging based TLS session store for cluster","date":"2013-07-25T13:52:51.381Z","type":"message"}
{"nick":"bajtos","message":"indutny: so the absolute speed of TLS is not so much of my concern, I am interested in difference in speed in different configurations","date":"2013-07-25T13:53:21.611Z","type":"message"}
{"nick":"indutny","message":"aah","date":"2013-07-25T13:56:06.946Z","type":"message"}
{"nick":"indutny","message":"well, ok","date":"2013-07-25T13:56:09.957Z","type":"message"}
{"nick":"indutny","message":"benchmarking on osx is not really useful","date":"2013-07-25T13:56:15.389Z","type":"message"}
{"nick":"indutny","message":"you better ask bnoordhuis to do it","date":"2013-07-25T13:56:22.646Z","type":"message"}
{"nick":"indutny","message":"he has big desktop box","date":"2013-07-25T13:56:26.966Z","type":"message"}
{"nick":"bajtos","message":"yes, I know. he was doing his best to discourage me from buying MBP as my work laptop","date":"2013-07-25T13:57:03.400Z","type":"message"}
{"nick":"bajtos","message":"so how do you benchmark then?","date":"2013-07-25T13:57:10.952Z","type":"message"}
{"nick":"bajtos","message":"reboot into linux?","date":"2013-07-25T13:57:25.071Z","type":"message"}
{"nick":"indutny","message":"bajtos: I only have windows in bootcamp","date":"2013-07-25T14:00:30.025Z","type":"message"}
{"nick":"indutny","message":"and benchmarking tls on remote servers","date":"2013-07-25T14:00:42.468Z","type":"message"}
{"nick":"indutny","message":"sometimes","date":"2013-07-25T14:00:43.978Z","type":"message"}
{"nick":"indutny","message":"also","date":"2013-07-25T14:05:24.954Z","type":"message"}
{"nick":"indutny","message":"you can try running it for a longer time","date":"2013-07-25T14:05:29.489Z","type":"message"}
{"nick":"indutny","message":"like one minute","date":"2013-07-25T14:05:32.644Z","type":"message"}
{"nick":"indutny","message":"or more","date":"2013-07-25T14:05:33.555Z","type":"message"}
{"nick":"bajtos","message":"I have also added a delay between the runs, but that didn't help much.","date":"2013-07-25T14:06:01.602Z","type":"message"}
{"nick":"bajtos","message":"I will try to turn off HT first and see what the numbers are","date":"2013-07-25T14:06:14.187Z","type":"message"}
{"nick":"bajtos","message":"(you have to install xcode to do that, OMG)","date":"2013-07-25T14:06:28.665Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 260 seconds","date":"2013-07-25T14:08:00.026Z","type":"quit"}
{"nick":"c4milo","date":"2013-07-25T14:14:31.299Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-07-25T14:15:48.918Z","type":"join"}
{"nick":"pachet","date":"2013-07-25T14:18:32.277Z","type":"join"}
{"nick":"pachet","reason":"Changing host","date":"2013-07-25T14:18:32.487Z","type":"quit"}
{"nick":"pachet","date":"2013-07-25T14:18:32.488Z","type":"join"}
{"nick":"bajtos","message":"bnoordhuis: welcome back, I have few more questions if you have time to talk now?","date":"2013-07-25T14:21:00.080Z","type":"message"}
{"nick":"bnoordhuis","message":"bajtos: shoot","date":"2013-07-25T14:21:20.023Z","type":"message"}
{"nick":"bajtos","message":"the first thing is disabling tls session tickets extension in v0.10 when running in a cluster","date":"2013-07-25T14:21:46.673Z","type":"message"}
{"nick":"bnoordhuis","message":"go on","date":"2013-07-25T14:22:16.206Z","type":"message"}
{"nick":"bajtos","message":"since we can't get it to work correctly, it seems like a good idea to disable it","date":"2013-07-25T14:22:19.676Z","type":"message"}
{"nick":"bajtos","message":"so I wanted to know your opinion, whether it's something we can get into v0.10","date":"2013-07-25T14:22:44.345Z","type":"message"}
{"nick":"bajtos","message":"I didn't checked the code yet, but I am expecting that when we create TLS server in a cluster worker, we will tell openssl to disable session tickets","date":"2013-07-25T14:23:24.564Z","type":"message"}
{"nick":"bajtos","message":"but now that I think about it, since the cluster in v0.10 is not RR, most requests end up in few workers only","date":"2013-07-25T14:24:10.535Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2013-07-25T14:24:29.318Z","type":"message"}
{"nick":"bajtos","message":"so many connections will still reuse session, because they end up on the same worker","date":"2013-07-25T14:24:52.064Z","type":"message"}
{"nick":"bajtos","message":"so disabling the extension will probably degrade the performance.","date":"2013-07-25T14:25:20.671Z","type":"message"}
{"nick":"bajtos","message":"hmm","date":"2013-07-25T14:25:21.925Z","type":"message"}
{"nick":"mikeal","date":"2013-07-25T14:27:25.294Z","type":"join"}
{"nick":"bajtos","message":"ok, I'll try to fix my machine first so that the benchmarks are more reliable and then I'll see whether extra `resumeSession` calls are such a problem.","date":"2013-07-25T14:28:53.657Z","type":"message"}
{"nick":"bajtos","message":"bnoordhuis: the second question is a longer one","date":"2013-07-25T14:29:10.725Z","type":"message"}
{"nick":"bajtos","message":"bnoordhuis: do you know Timeline tab in Chrome's Developer Tools?","date":"2013-07-25T14:29:22.940Z","type":"message"}
{"nick":"bajtos","message":"bnoordhuis: https://developers.google.com/chrome-developer-tools/docs/timeline -> section About nested events","date":"2013-07-25T14:31:08.171Z","type":"message"}
{"nick":"mikeal","reason":"Ping timeout: 276 seconds","date":"2013-07-25T14:32:19.083Z","type":"quit"}
{"nick":"bajtos","message":"bnoordhuis: I was thinking that if we could instrument node/libuv to report event-loop events with info about which callback scheduled the async request, then Timeline could nicely visualise long-stack for us","date":"2013-07-25T14:34:01.320Z","type":"message"}
{"nick":"bajtos","message":"bnoordhuis: and it shouldn't be a big performance problem, since you can turn on and off the collection of timeline events in the UI","date":"2013-07-25T14:34:57.484Z","type":"message"}
{"nick":"bnoordhuis","message":"bajtos: \"instrument node/libuv to report event-loop events with info about which callback scheduled the async request","date":"2013-07-25T14:38:49.169Z","type":"message"}
{"nick":"bnoordhuis","message":"how would that work?","date":"2013-07-25T14:38:56.570Z","type":"message"}
{"nick":"bajtos","message":"that's what I am not sure about :)","date":"2013-07-25T14:39:14.725Z","type":"message"}
{"nick":"bnoordhuis","message":"let's start with what your definition of 'async request' is","date":"2013-07-25T14:39:39.141Z","type":"message"}
{"nick":"bajtos","message":"so let's say your http request handler calls net.connect (to keep it simple)","date":"2013-07-25T14:40:27.722Z","type":"message"}
{"nick":"bnoordhuis","message":"okay. what info would you want to retain?","date":"2013-07-25T14:41:09.669Z","type":"message"}
{"nick":"kazupon","date":"2013-07-25T14:41:14.949Z","type":"join"}
{"nick":"bajtos","message":"there should be a Timeline event saying in this tick, http request handler callback was running, and it scheduled net.connect. when net.connect calls the callback, you will have a link to the http request handler callback that is a parent of this","date":"2013-07-25T14:41:39.118Z","type":"message"}
{"nick":"bajtos","message":"I guess it is very similar to Bert's tasks","date":"2013-07-25T14:41:54.061Z","type":"message"}
{"nick":"bajtos","message":"which might mean we won't be able to properly visualise until tasks are implemented","date":"2013-07-25T14:42:15.520Z","type":"message"}
{"nick":"bnoordhuis","message":"bajtos: you want to capture a stack trace or ?","date":"2013-07-25T14:42:21.138Z","type":"message"}
{"nick":"bajtos","message":"bajtos: yes, stack trace is a good start","date":"2013-07-25T14:42:44.718Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Fedor Indutny\u000f \u00037master\u000f * \u0002508a6c2\u0002 : openssl: use asm for sha, md5, rmd - http://git.io/Qnnw6w","date":"2013-07-25T14:42:55.047Z","type":"message"}
{"nick":"bnoordhuis","message":"stack traces a re pretty expensive though, both time and memory wise","date":"2013-07-25T14:43:04.024Z","type":"message"}
{"nick":"bnoordhuis","message":"*are","date":"2013-07-25T14:43:07.704Z","type":"message"}
{"nick":"bnoordhuis","message":"rule of thumb is ~1 kb per trace","date":"2013-07-25T14:43:20.763Z","type":"message"}
{"nick":"bnoordhuis","message":"time-wise it's O(n) where n is the number of captured frames","date":"2013-07-25T14:43:55.722Z","type":"message"}
{"nick":"bajtos","message":"bnoordhuis: I know, but you are already running in a debugger and you have explicitly ask for this in the UI","date":"2013-07-25T14:43:56.399Z","type":"message"}
{"nick":"bajtos","message":"*have asked","date":"2013-07-25T14:44:06.683Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, okay - it's an opt-in thing","date":"2013-07-25T14:44:08.184Z","type":"message"}
{"nick":"bajtos","message":"there is a button in the UI and it's disabled by default","date":"2013-07-25T14:44:26.378Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess the first question is: how would you tell node to start collecting that data?","date":"2013-07-25T14:44:56.710Z","type":"message"}
{"nick":"bnoordhuis","message":"i mean, what happens when you click that button?","date":"2013-07-25T14:45:19.946Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-07-25T14:45:34.186Z","type":"quit"}
{"nick":"bajtos","message":"I have this evil plan in my head: since you can eval() code using V8 debugger protocol, node-inspector can inject anything into the running process","date":"2013-07-25T14:45:37.609Z","type":"message"}
{"nick":"bajtos","message":"bnoordhuis: this mechanism can be used for other purposes as well","date":"2013-07-25T14:45:56.481Z","type":"message"}
{"nick":"c4milo","date":"2013-07-25T14:46:01.198Z","type":"join"}
{"nick":"bnoordhuis","message":"okay, so you send a string like \"process._captureAllTheStackTraces()\" and eval that?","date":"2013-07-25T14:46:27.725Z","type":"message"}
{"nick":"bajtos","message":"bnoordhuis: yes, that's the idea","date":"2013-07-25T14:46:38.256Z","type":"message"}
{"nick":"bnoordhuis","message":"workable","date":"2013-07-25T14:47:07.107Z","type":"message"}
{"nick":"bajtos","message":"bnoordhuis: I'll probably have to inject a client that will send Timeline events from the debugged process to the node-inspector process","date":"2013-07-25T14:47:09.498Z","type":"message"}
{"nick":"bnoordhuis","message":"that was my next question - how does the data get from node to the debug client?","date":"2013-07-25T14:47:39.539Z","type":"message"}
{"nick":"bajtos","message":"either node process starts a server for the debug client to connect to; or it opens a (websocket) connection to the debug client (this is probably better & safer)","date":"2013-07-25T14:48:55.173Z","type":"message"}
{"nick":"bajtos","message":"by safer I mean more secure","date":"2013-07-25T14:49:03.949Z","type":"message"}
{"nick":"bnoordhuis","message":"is security important / relevant here? you're already injecting arbitrary code, right? :)","date":"2013-07-25T14:50:12.632Z","type":"message"}
{"nick":"bajtos","message":"since debug client (node inspector) and the debugged process run on the same machine, we can eval \"require('/path/to/inspector/instrumentation/timeline.js').connectTo(inspectorPort)\"","date":"2013-07-25T14:50:15.308Z","type":"message"}
{"nick":"c4milo","reason":"Ping timeout: 240 seconds","date":"2013-07-25T14:50:23.935Z","type":"quit"}
{"nick":"bajtos","message":"probably not, but we don't have to make things even worse :)","date":"2013-07-25T14:50:39.960Z","type":"message"}
{"nick":"bnoordhuis","message":"doesn't the v8 debugger protocol let you send over data?","date":"2013-07-25T14:51:14.357Z","type":"message"}
{"nick":"bnoordhuis","message":"is node-inspector using the v8 debugger protocol?","date":"2013-07-25T14:51:29.757Z","type":"message"}
{"nick":"bajtos","message":"yes and yes","date":"2013-07-25T14:51:34.622Z","type":"message"}
{"nick":"bnoordhuis","message":"okay. so can't you use that rather than a new socket/websocket?","date":"2013-07-25T14:51:56.116Z","type":"message"}
{"nick":"bajtos","message":"I could, but then it will have to be implemented in noe","date":"2013-07-25T14:52:23.439Z","type":"message"}
{"nick":"bajtos","message":"* node","date":"2013-07-25T14:52:26.432Z","type":"message"}
{"nick":"bajtos","message":"while if you inject a new socket, it can be done in user-land","date":"2013-07-25T14:52:42.006Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, because you can inject code that loads the appropriate module. okay","date":"2013-07-25T14:53:09.090Z","type":"message"}
{"nick":"bnoordhuis","message":"that'll break if the user manages to botch the module system though","date":"2013-07-25T14:53:40.366Z","type":"message"}
{"nick":"bajtos","message":"I've got this idea as we were talking: perhaps I can do a proof-of-concept entirely in userland? I can use the same mechanism that long stack trace modules are using, right?","date":"2013-07-25T14:53:46.675Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2013-07-25T14:53:53.996Z","type":"message"}
{"nick":"bnoordhuis","message":"one thing though, where are you going to get the reference to require() from? it's not a global","date":"2013-07-25T14:54:12.484Z","type":"message"}
{"nick":"bajtos","message":"and then if this thing turns out to be useful, we can find out ways how to get it into node core. plus I will have much better understanding of the problem domain by that time","date":"2013-07-25T14:54:27.585Z","type":"message"}
{"nick":"bajtos","message":"I guess it's all I need for now","date":"2013-07-25T14:54:37.683Z","type":"message"}
{"nick":"bajtos","message":"on that topic","date":"2013-07-25T14:54:43.211Z","type":"message"}
{"nick":"bnoordhuis","message":"okay :)","date":"2013-07-25T14:54:46.160Z","type":"message"}
{"nick":"bajtos","message":"and the last question before our hangout starts","date":"2013-07-25T14:54:55.828Z","type":"message"}
{"nick":"bajtos","message":"V8 api change in v0.11 broke v8-profiler (again)","date":"2013-07-25T14:55:11.513Z","type":"message"}
{"nick":"bnoordhuis","message":"i weep with you","date":"2013-07-25T14:55:45.606Z","type":"message"}
{"nick":"bajtos","message":"IMO we should really expose V8 profiler API in node, so there is no need for an extra module","date":"2013-07-25T14:56:04.268Z","type":"message"}
{"nick":"bajtos","message":"Do you remember as we were discussing extension of V8 debugger API to include V8 profiler stuff? So I don't mean to do that now","date":"2013-07-25T14:56:43.665Z","type":"message"}
{"nick":"bajtos","message":"Just to add a new node.js core module, let's say 'profiler', and move the methods from v8-profiler module there","date":"2013-07-25T14:57:16.751Z","type":"message"}
{"nick":"isaacs","message":"good morning heroes","date":"2013-07-25T14:57:54.515Z","type":"message"}
{"nick":"julianduque","date":"2013-07-25T14:58:01.154Z","type":"join"}
{"nick":"bajtos","message":"bnoordhuis: that way you will always have the right profiler for the version of node you are running on","date":"2013-07-25T14:58:11.856Z","type":"message"}
{"nick":"bnoordhuis","message":"bajtos: well, up to a point. the profiler api has changed in incompatible ways in the past, having a core module won't avoid that","date":"2013-07-25T14:59:44.844Z","type":"message"}
{"nick":"bnoordhuis","message":"morning isaac","date":"2013-07-25T14:59:56.429Z","type":"message"}
{"nick":"bajtos","message":"bajtos: but then updating the node profiler api will become a part of V8 upgrade, not a job for module maintainers","date":"2013-07-25T15:00:32.972Z","type":"message"}
{"nick":"bajtos","message":"ehm, talking to myself","date":"2013-07-25T15:00:43.538Z","type":"message"}
{"nick":"bajtos","message":"bnoordhuis: btw is it possible to detect V8/node version in a native module and use the correct V8 methods via #ifdefs?","date":"2013-07-25T15:01:20.275Z","type":"message"}
{"nick":"mikeal","date":"2013-07-25T15:01:31.952Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-07-25T15:03:47.626Z","type":"quit"}
{"nick":"bajtos","message":"bnoordhuis: hangout call?","date":"2013-07-25T15:04:37.545Z","type":"message"}
{"nick":"bnoordhuis","message":"bajtos: node_version.h contains macros you can test against","date":"2013-07-25T15:15:14.544Z","type":"message"}
{"nick":"bajtos","message":"ok, that at least means we can support multiple node versions with a single module","date":"2013-07-25T15:16:38.637Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2013-07-25T15:16:51.873Z","type":"message"}
{"nick":"bajtos","message":"bnoordhuis: if I understand it correctly, you would rather keep the profiler API in a user-land module, right?","date":"2013-07-25T15:17:12.787Z","type":"message"}
{"nick":"bnoordhuis","message":"bajtos: well, not necessarily. it's just that bringing it into the core may not be the panacea you think it is","date":"2013-07-25T15:18:23.005Z","type":"message"}
{"nick":"bnoordhuis","message":"bajtos: what profiler api in particular would you want to see in core?","date":"2013-07-25T15:19:00.964Z","type":"message"}
{"nick":"julianduque","reason":"Ping timeout: 246 seconds","date":"2013-07-25T15:19:08.126Z","type":"quit"}
{"nick":"mikeal","date":"2013-07-25T15:19:19.106Z","type":"join"}
{"nick":"bajtos","message":"bnoordhuis: I didn't look at details, we could begin with the API of v8-profiler: https://github.com/c4milo/v8-profiler","date":"2013-07-25T15:19:50.441Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: What's teh difference between Number.isNaN and global.isNaN?","date":"2013-07-25T15:20:30.515Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: Number.isNaN doesn't coerce to number before checking","date":"2013-07-25T15:20:47.209Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-07-25T15:20:51.372Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: so, it's just `(arg !== arg)`","date":"2013-07-25T15:20:59.553Z","type":"message"}
{"nick":"trevnorris","message":"same with Number.isFinite","date":"2013-07-25T15:21:03.961Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: well, we use isNaN in core, so type coercion must happen. hence the trick I used of !(arg >= arg)","date":"2013-07-25T15:21:42.123Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: i see","date":"2013-07-25T15:21:54.412Z","type":"message"}
{"nick":"isaacs","message":"so, effectively, +arg !== +arg","date":"2013-07-25T15:22:04.041Z","type":"message"}
{"nick":"isaacs","message":"but why not just use isNaN, then?","date":"2013-07-25T15:22:12.062Z","type":"message"}
{"nick":"isaacs","message":"that is, there's already a nice greppable thing we're already using","date":"2013-07-25T15:22:22.851Z","type":"message"}
{"nick":"isaacs","message":"for !~~(+arg) crap, sure","date":"2013-07-25T15:22:31.359Z","type":"message"}
{"nick":"isaacs","message":"totally makes sense","date":"2013-07-25T15:22:34.952Z","type":"message"}
{"nick":"trevnorris","message":"basically. i'm going to generate the assembly from the several checks to demonstrate the difference.","date":"2013-07-25T15:22:37.347Z","type":"message"}
{"nick":"isaacs","message":"if isNaN generates worse assembly than (!(arg>=arg)) then I'd consider that a v8 bug","date":"2013-07-25T15:23:26.966Z","type":"message"}
{"nick":"trevnorris","message":"heh, well isNaN is a function call so it won't be inlined as well.","date":"2013-07-25T15:23:45.231Z","type":"message"}
{"nick":"isaacs","message":"also a v8 bug.  those functions should be extremely hot and inlineable.","date":"2013-07-25T15:24:20.125Z","type":"message"}
{"nick":"bnoordhuis","message":"technically, isNaN can be inlined by v8","date":"2013-07-25T15:24:23.847Z","type":"message"}
{"nick":"bnoordhuis","message":"but i've never gotten a handle on v8's inlining heuristics","date":"2013-07-25T15:24:36.152Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yeah, they're a bit crazy, and the comments in the code assume you've read lots of scholarly articles about VMs","date":"2013-07-25T15:24:58.247Z","type":"message"}
{"nick":"bajtos","message":"bnoordhuis: I have to go. I'll talk to you later if I get to do the update of v8-profiler for v0.11","date":"2013-07-25T15:25:07.940Z","type":"message"}
{"nick":"bnoordhuis","message":"bajtos: okay. bon appetite","date":"2013-07-25T15:25:18.917Z","type":"message"}
{"nick":"isaacs","message":"which is fair, i guess, i mean, the comments in http.js assume you've read the http spec","date":"2013-07-25T15:25:32.712Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: oh, sure. but what i mean is that there's like a 1,000 factors that influence whether or not v8 inlines a function","date":"2013-07-25T15:26:11.835Z","type":"message"}
{"nick":"bnoordhuis","message":"it's neigh impossible to keep them all in your head","date":"2013-07-25T15:26:37.450Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-07-25T15:26:58.431Z","type":"quit"}
{"nick":"trevnorris","message":"heh, my favorite is the function body can't contain more than 600 characters, including comments :P","date":"2013-07-25T15:27:19.736Z","type":"message"}
{"nick":"bnoordhuis","message":"is that one still in there?","date":"2013-07-25T15:27:57.558Z","type":"message"}
{"nick":"trevnorris","message":"yup","date":"2013-07-25T15:28:23.479Z","type":"message"}
{"nick":"AvianFlu","date":"2013-07-25T15:29:19.412Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-07-25T15:29:38.326Z","type":"nick"}
{"nick":"jmar777_","date":"2013-07-25T15:30:01.993Z","type":"join"}
{"nick":"austo","date":"2013-07-25T15:30:21.212Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-07-25T15:30:47.193Z","type":"quit"}
{"nick":"jmar777","reason":"Read error: Connection reset by peer","date":"2013-07-25T15:32:00.212Z","type":"quit"}
{"nick":"isaacs","message":"yeah","date":"2013-07-25T15:33:58.684Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis, trevnorris: The reason i'm raising the macros as an issue is that reading NUMBER_IS_NAN is kind of jarring in JS code, and stands out as magical.","date":"2013-07-25T15:42:03.540Z","type":"message"}
{"nick":"isaacs","message":"it's not a HUGE cost, obviously, and if it's that or a bunch of +~~!~~+ garbage, then ok, worth it","date":"2013-07-25T15:42:39.594Z","type":"message"}
{"nick":"isaacs","message":"but if we're just mapping NUMBER_IS_FINITE() to isFinite(), then it seems silly","date":"2013-07-25T15:42:58.098Z","type":"message"}
{"nick":"mikeal","date":"2013-07-25T15:43:28.937Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: on the side, we can't be using NUMBER_IS_NAN/_IS_FINITE. core depends on type check coercion.","date":"2013-07-25T15:43:50.144Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, i'm not married to NUMBER_IS_NAN and NUMBER_IS_FINITE - they were just the lowest-hanging fruit","date":"2013-07-25T15:44:05.483Z","type":"message"}
{"nick":"bnoordhuis","message":"TO_INT32() and friends however...","date":"2013-07-25T15:44:57.680Z","type":"message"}
{"nick":"c4milo","date":"2013-07-25T15:45:36.156Z","type":"join"}
{"nick":"mcavage","date":"2013-07-25T15:45:56.336Z","type":"join"}
{"nick":"isaacs","message":"right","date":"2013-07-25T15:47:31.710Z","type":"message"}
{"nick":"isaacs","message":"that stuff is clearly MORE jarring than the macro","date":"2013-07-25T15:47:43.479Z","type":"message"}
{"nick":"bnoordhuis","message":"the introduction of macros is part of a greater scheme btw","date":"2013-07-25T15:48:57.023Z","type":"message"}
{"nick":"isaacs","message":"where are you going with it?","date":"2013-07-25T15:49:07.290Z","type":"message"}
{"nick":"bnoordhuis","message":"i want to remove a fair number of persistent strings by introducing `const kHandleWrapCloseCallbackIndex = 0` macros","date":"2013-07-25T15:49:33.919Z","type":"message"}
{"nick":"bnoordhuis","message":"i.e. use numeric indices rather than strings for callback dispatch","date":"2013-07-25T15:49:51.532Z","type":"message"}
{"nick":"bnoordhuis","message":"iow, you'd do `sock._handle[kHandleWrapCloseCallbackIndex] = cb` rather than sock._handle.onclose = cb`","date":"2013-07-25T15:51:09.737Z","type":"message"}
{"nick":"bnoordhuis","message":"faster, less persistents, win all around","date":"2013-07-25T15:51:14.856Z","type":"message"}
{"nick":"bnoordhuis","message":"though i'll probably make it a little less wordy","date":"2013-07-25T15:51:30.923Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, dinner - biab","date":"2013-07-25T15:52:25.337Z","type":"message"}
{"nick":"trevnorris","message":"I updated https://github.com/joyent/node/pull/5898 with the assembly output of the two tests.","date":"2013-07-25T15:52:42.182Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: that sounds like a good idea","date":"2013-07-25T15:52:47.363Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: (i mean, the sock._handle[close] idea, but dinner is probably a good idea, too)","date":"2013-07-25T15:53:10.847Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: Object.is(+arg, NaN) would avoid the double-eval","date":"2013-07-25T15:54:20.066Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: interesting. i'll run that now.","date":"2013-07-25T15:54:58.102Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-07-25T15:55:26.446Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-07-25T15:56:24.135Z","type":"quit"}
{"nick":"isaacs","message":"trevnorris: but, really... i mean.. what's the point?  isNaN is plenty readable, and I'm willing to bet quite a lot that it's not a significant performance hit","date":"2013-07-25T15:56:36.865Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-07-25T15:56:53.960Z","type":"quit"}
{"nick":"isaacs","message":"there's some saying about polishing the doorknobs on the titanic or something","date":"2013-07-25T15:56:58.852Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: honestly I was always just looking for consistency in our checks and coercions. ben threw up the macros yesterday afternoon.","date":"2013-07-25T15:58:04.096Z","type":"message"}
{"nick":"trevnorris","message":"so guess I figured, since they did get implemented might as well make them really good.","date":"2013-07-25T15:58:31.940Z","type":"message"}
{"nick":"isaacs","message":"yeah.  your heart's in the right place :)  i'm not convinced that isNaN and isFinite should be macroed away.  IS_UINT32() and friends, that makes sense.","date":"2013-07-25T15:58:55.938Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: wanna take a look at this? https://github.com/joyent/node/pull/5899","date":"2013-07-25T15:59:13.834Z","type":"message"}
