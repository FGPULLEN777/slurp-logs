{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-02-16T00:00:00.504Z","type":"quit"}
{"nick":"ircretary","date":"2013-02-16T00:00:08.685Z","type":"join"}
{"nick":"dap","message":"isaacs, tjfontaine: Thanks.","date":"2013-02-16T00:00:50.344Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: oh, ok, cool","date":"2013-02-16T00:01:13.391Z","type":"message"}
{"nick":"tjfontaine","message":"dap: no no, thank *you* :)","date":"2013-02-16T00:01:15.315Z","type":"message"}
{"nick":"isaacs","message":"really, one of the best things that Joyent has done for node is get a bunch of experienced systems engineers to use it on a daily basis.","date":"2013-02-16T00:02:05.294Z","type":"message"}
{"nick":"isaacs","message":"if it wasn't for that, all this stuff would go to benefit ruby or somethign","date":"2013-02-16T00:02:48.066Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-02-16T00:02:55.240Z","type":"message"}
{"nick":"loladiro","date":"2013-02-16T00:03:11.057Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 255 seconds","date":"2013-02-16T00:04:23.486Z","type":"quit"}
{"nick":"isaacs","message":"tjfontaine: what are your feelings about https://github.com/joyent/node/pull/3872?","date":"2013-02-16T00:08:59.627Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: i haven't been following it closely.","date":"2013-02-16T00:09:06.730Z","type":"message"}
{"nick":"isaacs","message":"but it looks like ben is saying it's pending a change to libuv?","date":"2013-02-16T00:09:15.353Z","type":"message"}
{"nick":"isaacs","message":"i *adore* his loop diagrams, btw.","date":"2013-02-16T00:09:38.403Z","type":"message"}
{"nick":"isaacs","message":"we need to collect these and put them in the docs.","date":"2013-02-16T00:09:43.115Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: oh, I forgot about libuv 699, my feelings on the bug are that I'm mostly ashamed that I missed the 1ms delay bug in my initial implementation","date":"2013-02-16T00:12:38.722Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: and yes that loop diagram needs to be reappropriated","date":"2013-02-16T00:13:04.634Z","type":"message"}
{"nick":"tjfontaine","message":"I wouldn'y classify libuv 699 necessarily as a blocker, but it helps make sure that the loop diagram is true on all platforms","date":"2013-02-16T00:14:08.972Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-02-16T00:27:57.438Z","type":"message"}
{"nick":"isaacs","message":"yeah, i'm gonna land it","date":"2013-02-16T00:28:02.352Z","type":"message"}
{"nick":"isaacs","message":"all tests pass, and it's faster, libuv#699 is just as broken with this as without it.","date":"2013-02-16T00:28:17.345Z","type":"message"}
{"nick":"isaacs","message":"and we can fix it whenever.","date":"2013-02-16T00:28:25.292Z","type":"message"}
{"nick":"isaacs","message":"(libuv is officially internal api)","date":"2013-02-16T00:28:31.668Z","type":"message"}
{"nick":"MI61","message":"\u0002joyent/node:\u0002 \u00033Shigeki Ohtsu\u000f \u00037master\u000f * \u0002401cef7\u0002 : doc: add setImmediate execute timing description (+1 more commits) - http://git.io/nQOWAw","date":"2013-02-16T00:29:51.865Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-16T00:30:00.817Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-02-16T00:32:14.149Z","type":"quit"}
{"nick":"tjfontaine","message":"isaacs: thanks","date":"2013-02-16T00:51:31.441Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: thank shigeki :)","date":"2013-02-16T00:51:54.241Z","type":"message"}
{"nick":"tjfontaine","message":"heh indeed, I wish he lurked on irc more","date":"2013-02-16T00:52:09.418Z","type":"message"}
{"nick":"dap","message":"Hi TooTallNate","date":"2013-02-16T00:56:28.163Z","type":"message"}
{"nick":"TooTallNate","message":"dap: yo","date":"2013-02-16T00:56:50.415Z","type":"message"}
{"nick":"dap","message":"Would you call yourself a GYP expert? :)","date":"2013-02-16T00:56:59.861Z","type":"message"}
{"nick":"TooTallNate","message":"dap: not really :p but i've done a couple things that impressed me","date":"2013-02-16T00:57:24.099Z","type":"message"}
{"nick":"TooTallNate","message":"dap: sup?","date":"2013-02-16T00:57:25.973Z","type":"message"}
{"nick":"dap","message":"I'm looking into adding CTF support (debug information with very low space overhead)  to Node.  This requires two new build steps: for each .o file, you run a command that modifies that file in place, and after you link the final executable you run another command that modifies it in place.","date":"2013-02-16T00:59:03.952Z","type":"message"}
{"nick":"tjfontaine","message":"hrm","date":"2013-02-16T00:59:20.028Z","type":"message"}
{"nick":"dap","message":"Thinking out loud: maybe I can make the \"node\" target explicitly depend on a target which takes the object files as inputs, but I want it to produce no outputs.","date":"2013-02-16T01:00:22.285Z","type":"message"}
{"nick":"dap","message":"That can cover the object files step, but I'm not sure how to run a step after the final \"node\" binary gets created","date":"2013-02-16T01:00:43.480Z","type":"message"}
{"nick":"tjfontaine","message":"I've not seen an example of gyp where things work around the .o's","date":"2013-02-16T01:00:55.483Z","type":"message"}
{"nick":"dap","message":"We do some trickery for the DTrace object files, but in that case, we're still producing a new object file that's going to be linked in, so it's not *so* gross.","date":"2013-02-16T01:01:23.824Z","type":"message"}
{"nick":"TooTallNate","message":"dap: you can define a target of type \"none\" that does arbitrary actions, and have it depend on the \"node\" main target","date":"2013-02-16T01:02:06.073Z","type":"message"}
{"nick":"dap","message":"and then \"make $mytarget\" instead of just \"make\"?","date":"2013-02-16T01:02:35.778Z","type":"message"}
{"nick":"TooTallNate","message":"dap: i'm not sure… don't all top-level gyp targets get built by default?","date":"2013-02-16T01:02:59.106Z","type":"message"}
{"nick":"dap","message":"Maybe","date":"2013-02-16T01:03:12.610Z","type":"message"}
{"nick":"dap","message":"ISTR that.","date":"2013-02-16T01:03:17.300Z","type":"message"}
{"nick":"dap","message":"TooTallNate: this seems promising.  How do I refer to the \"node\" executable built by the \"node\" target so that I can make it an input to my action?","date":"2013-02-16T01:05:10.995Z","type":"message"}
{"nick":"TooTallNate","message":"that… is a good question…","date":"2013-02-16T01:05:32.132Z","type":"message"}
{"nick":"dap","message":"PRODUCT_DIR may be the answer.","date":"2013-02-16T01:08:39.392Z","type":"message"}
{"nick":"TooTallNate","message":"ya that sounds about right","date":"2013-02-16T01:08:53.376Z","type":"message"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-02-16T01:18:09.495Z","type":"nick"}
{"nick":"dap","message":"TooTallNate: That seems to have gotten me the final step.  Can I use that to do something for each object file too?  (I don't see how, but I'm not yet accustomed to all the ways of tricking GYP ;)","date":"2013-02-16T01:19:47.686Z","type":"message"}
{"nick":"TooTallNate","message":"dap: this is like the middle step you're on now?","date":"2013-02-16T01:20:39.664Z","type":"message"}
{"nick":"dap","message":"Yeah.  It needs to happen for each object file after it's built, but before the final link.","date":"2013-02-16T01:20:57.625Z","type":"message"}
{"nick":"TooTallNate","message":"hmmm","date":"2013-02-16T01:21:12.366Z","type":"message"}
{"nick":"TooTallNate","message":"dap: you might be able to define a rule https://github.com/rbranson/node-ffi/blob/master/deps/libffi/libffi.gyp#L64-L80","date":"2013-02-16T01:21:51.352Z","type":"message"}
{"nick":"dap","message":"But how do I get that rule to be invoked?  It needs to output something that the top-level \"node\" rule depends on, right?","date":"2013-02-16T01:22:47.935Z","type":"message"}
{"nick":"dap","message":"I could imagine an elaborate thing where the rule emits a valid but basically empty ${inputfile}_ctf.o, and I added ${inputfile}_ctf.cc to the list of sources.  But gross.","date":"2013-02-16T01:23:25.462Z","type":"message"}
{"nick":"TooTallNate","message":"dap: ya that's the hard part i think… usually you'd define those as \"sources\" but we want to process the output .o files","date":"2013-02-16T01:23:50.783Z","type":"message"}
{"nick":"TooTallNate","message":"from the previously specified .cc files","date":"2013-02-16T01:23:57.441Z","type":"message"}
{"nick":"hz","date":"2013-02-16T01:27:24.210Z","type":"quit"}
{"nick":"roxlu","message":"yay! just got p2p video streaming with VP8 (webm) working using libuv ","date":"2013-02-16T01:28:06.008Z","type":"message"}
{"nick":"roxlu","message":"for who is interested: https://github.com/roxlu/roxlu/blob/master/addons/Webm/src/webm/VPXStream.cpp <-- networking code + framegrabber","date":"2013-02-16T01:28:18.375Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-02-16T01:28:33.473Z","type":"quit"}
{"nick":"jmar777","date":"2013-02-16T01:29:10.083Z","type":"join"}
{"nick":"jmar777","reason":"Ping timeout: 248 seconds","date":"2013-02-16T01:33:23.929Z","type":"quit"}
{"nick":"dap","message":"TooTallNate: Still not sure, but I'll pick this up next week.  Thanks for the help!","date":"2013-02-16T01:42:27.023Z","type":"message"}
{"nick":"TooTallNate","message":"dap: no prob! (i didn't do much :p)","date":"2013-02-16T01:42:45.236Z","type":"message"}
{"nick":"dap","message":"Your idea solved at least half the problem :)","date":"2013-02-16T01:43:31.226Z","type":"message"}
{"nick":"isaacs","message":"yeah, not going to release 0.9.10 tonight, i think","date":"2013-02-16T01:46:05.783Z","type":"message"}
{"nick":"dap","message":"Later guys.","date":"2013-02-16T01:46:54.729Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-02-16T01:46:56.857Z","type":"quit"}
{"nick":"dap","date":"2013-02-16T01:49:20.139Z","type":"join"}
{"nick":"dap","reason":"Client Quit","date":"2013-02-16T01:49:40.440Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-16T01:59:07.426Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 248 seconds","date":"2013-02-16T02:01:40.099Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-02-16T02:18:00.401Z","type":"join"}
{"nick":"wolfeidau","reason":"Read error: Connection reset by peer","date":"2013-02-16T02:20:01.790Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-02-16T02:27:26.546Z","type":"join"}
{"nick":"pooya","reason":"Quit: pooya","date":"2013-02-16T02:33:34.575Z","type":"quit"}
{"nick":"MI61","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u00029299168\u0002 : test: Bump up debugger timeouts  200ms is still short enough for occasion (+3 more commits) - http://git.io/U80o2g","date":"2013-02-16T02:43:17.165Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-02-16T02:47:26.681Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-16T02:48:36.886Z","type":"join"}
{"nick":"MI61","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u00028476aef\u0002 : fs: Change default WriteStream config, increase perf  This increases fs.W - http://git.io/yU-kxg","date":"2013-02-16T02:49:46.476Z","type":"message"}
{"nick":"MI61","message":"\u0002joyent/node:\u0002 \u00033Gil Pedersen\u000f \u00037master\u000f * \u00020a9930a\u0002 : stream: Pipe data in chunks matching read data  This creates better flow  - http://git.io/94c76A","date":"2013-02-16T03:02:52.388Z","type":"message"}
{"nick":"isaacs","message":"landin patches, all day long.","date":"2013-02-16T03:09:32.347Z","type":"message"}
{"nick":"isaacs","message":"landin patches while i sing my song","date":"2013-02-16T03:09:38.785Z","type":"message"}
{"nick":"c4milo","date":"2013-02-16T03:20:11.150Z","type":"join"}
{"nick":"kazupon","date":"2013-02-16T03:23:17.249Z","type":"join"}
{"nick":"trevnorris","date":"2013-02-16T03:47:52.287Z","type":"join"}
{"nick":"loladiro","date":"2013-02-16T03:50:46.223Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: awesomeness. now time to jam out on those streams.","date":"2013-02-16T03:54:45.273Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: we still need to have benchmarks that actually work.","date":"2013-02-16T03:55:23.577Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: especially if you're going to start polishing streams.  i don't want you wasting effort chasing mice.","date":"2013-02-16T03:55:46.078Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: we need to be cutting into the thick beefy heart of our regressions","date":"2013-02-16T03:55:59.947Z","type":"message"}
{"nick":"trevnorris","message":"mmmm.... thick beefy heart. sounds good to me =)","date":"2013-02-16T03:56:37.390Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-02-16T04:00:17.706Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: i'll try to setup a script this weekend that will run over a slew of the tests with a steady variance in parameters.","date":"2013-02-16T04:00:46.073Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: the idea being to help us understand how/if the benchmarks can be improved for stability. so they don't have to be run many times for good results.","date":"2013-02-16T04:02:03.730Z","type":"message"}
{"nick":"trevnorris","message":"sound like a plan?","date":"2013-02-16T04:02:12.367Z","type":"message"}
{"nick":"isaacs","message":"yeah, that sounds fantastic.","date":"2013-02-16T04:02:38.902Z","type":"message"}
{"nick":"trevnorris","message":"cool.","date":"2013-02-16T04:03:46.196Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: if we can get something so that `make bench` is no more than, say, ±2% variable from one run to the next, and takes < 10 minutes to run, then we've got something we can actually use to evaluate progress in the real world.","date":"2013-02-16T04:03:52.983Z","type":"message"}
{"nick":"isaacs","message":"if a patch is < 2% of a difference, it doesn't matter, and if it takes longer than ~10 minutes to run, then no one will run it.","date":"2013-02-16T04:04:32.193Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: might be over the top, but what about a \"check these while developing\" type of runs (i like to keep those to around a minute for quick iteration) and a larger suit for before submitting pr?","date":"2013-02-16T04:05:57.253Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: sure.","date":"2013-02-16T04:06:16.552Z","type":"message"}
{"nick":"trevnorris","message":"i'm checking my benchmarks just as often as i'm checking the tests, and don't like either of them taking more than a couple minutes.","date":"2013-02-16T04:06:30.690Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: so, `make bench-http` should be fast enough that we can run it quickly","date":"2013-02-16T04:06:32.740Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: or `make bench-fs` if you're doing fs stuff","date":"2013-02-16T04:06:46.079Z","type":"message"}
{"nick":"isaacs","message":"already on benchmark-refactor-2, `make bench` runs fs, tls, net, http","date":"2013-02-16T04:07:31.900Z","type":"message"}
{"nick":"isaacs","message":"if any of those sink, it's a problem.","date":"2013-02-16T04:07:44.359Z","type":"message"}
{"nick":"isaacs","message":"but like, if you're way deep in lib/fs.js, you're not going to somehow accidentally break the http bench","date":"2013-02-16T04:08:03.950Z","type":"message"}
{"nick":"isaacs","message":"the key is that you don't wnat to make a change, then run the benchmark, and then think it was a good/bad change based on machine entropy.","date":"2013-02-16T04:08:35.114Z","type":"message"}
{"nick":"trevnorris","message":"yeah, and any actual breaks will show up in the tests.","date":"2013-02-16T04:08:38.459Z","type":"message"}
{"nick":"isaacs","message":"that's no way to prgram :)","date":"2013-02-16T04:08:39.981Z","type":"message"}
{"nick":"trevnorris","message":"lol, seriously.","date":"2013-02-16T04:08:48.959Z","type":"message"}
{"nick":"isaacs","message":"yeah, totally","date":"2013-02-16T04:08:50.628Z","type":"message"}
{"nick":"isaacs","message":"it's like using a ouija board as your text editor","date":"2013-02-16T04:09:06.788Z","type":"message"}
{"nick":"trevnorris","message":"feel like i've done that before. sort of, \"eh, no idea what's going on but i'll just change this variable for fun and see what happens\"","date":"2013-02-16T04:10:09.278Z","type":"message"}
{"nick":"isaacs","message":"oh, i do that all the time","date":"2013-02-16T04:10:26.865Z","type":"message"}
{"nick":"isaacs","message":"if you have really good tests and benchmarks, you can kinda stumble around until you hit something, and then go back and figure out why it works.","date":"2013-02-16T04:10:43.728Z","type":"message"}
{"nick":"isaacs","message":"and then usually polish it up a bunch","date":"2013-02-16T04:10:50.267Z","type":"message"}
{"nick":"isaacs","message":"but that's like, absolutely an essential exploratory technique","date":"2013-02-16T04:10:59.970Z","type":"message"}
{"nick":"isaacs","message":"totally depends on having valid tests/benches","date":"2013-02-16T04:11:08.617Z","type":"message"}
{"nick":"trevnorris","message":"definitely.","date":"2013-02-16T04:11:49.077Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: thought for events. use .call() and .apply() on .once() callbacks, but think i'm going to try using .bind() on the others as they come in.","date":"2013-02-16T04:19:36.227Z","type":"message"}
{"nick":"trevnorris","message":"then they can just be run with fn(arg[0], arg[1], ...)","date":"2013-02-16T04:19:50.938Z","type":"message"}
{"nick":"isaacs","message":"hm.","date":"2013-02-16T04:19:57.521Z","type":"message"}
{"nick":"isaacs","message":"should be effectively equivalent","date":"2013-02-16T04:20:07.541Z","type":"message"}
{"nick":"isaacs","message":"also, you can do the unrolling trick that we had in process._makeCallback","date":"2013-02-16T04:20:28.271Z","type":"message"}
{"nick":"isaacs","message":"i think we do that for one or two, but then we .apply()","date":"2013-02-16T04:20:43.121Z","type":"message"}
{"nick":"wolfeidau","reason":"Read error: Connection reset by peer","date":"2013-02-16T04:21:00.399Z","type":"quit"}
{"nick":"trevnorris","message":"yeah. right now we use .call() for args < 3, then .apply(this, args.slice(1)) (sudo-code way)","date":"2013-02-16T04:21:47.556Z","type":"message"}
{"nick":"trevnorris","message":"so either way every call requires a change of context.","date":"2013-02-16T04:21:56.470Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-02-16T04:22:33.009Z","type":"message"}
{"nick":"wolfeidau","date":"2013-02-16T04:22:43.590Z","type":"join"}
{"nick":"isaacs","message":"in my experience, fn.bind(obj)(arg) is about equivalent to fn.call(obj, arg)","date":"2013-02-16T04:22:57.940Z","type":"message"}
{"nick":"isaacs","message":"if not worse","date":"2013-02-16T04:23:01.079Z","type":"message"}
{"nick":"isaacs","message":"but, definitely worth testing","date":"2013-02-16T04:23:08.549Z","type":"message"}
{"nick":"trevnorris","message":"well, you only need to run .bind() once. then call it normally from then on.","date":"2013-02-16T04:23:16.984Z","type":"message"}
{"nick":"isaacs","message":"right, but i mean, even calling the function multiple times, is equivalent to using .call","date":"2013-02-16T04:23:33.739Z","type":"message"}
{"nick":"trevnorris","message":"actually the reason i'm brining it up is because my benchmarks just finished. and","date":"2013-02-16T04:24:22.843Z","type":"message"}
{"nick":"trevnorris","message":"the initial bind is 47x's more expensive then using .call(), but then it's equally as quick as calling the function directly.","date":"2013-02-16T04:24:51.606Z","type":"message"}
{"nick":"trevnorris","message":"so the question is if, statistically, for every function callback passed, they average out to at least 47+ calls.","date":"2013-02-16T04:25:29.479Z","type":"message"}
{"nick":"trevnorris","message":"if that's the case then there's a savings.","date":"2013-02-16T04:25:36.063Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: the main reason is that v8 can inline a bound function. by whatever magic sauce it uses.","date":"2013-02-16T04:27:12.096Z","type":"message"}
{"nick":"isaacs","message":"i see","date":"2013-02-16T04:27:41.726Z","type":"message"}
{"nick":"isaacs","message":"well, i'm sure you know what i'll say :)","date":"2013-02-16T04:27:50.470Z","type":"message"}
{"nick":"isaacs","message":"if it makes tls or tcp or http or fs faster, i'm all for it :)","date":"2013-02-16T04:27:58.076Z","type":"message"}
{"nick":"isaacs","message":"we do have a lot of events that only ever fire once, though, or never at all","date":"2013-02-16T04:28:10.067Z","type":"message"}
{"nick":"isaacs","message":"if you bind in .on() then you're moving the cost up front","date":"2013-02-16T04:28:22.806Z","type":"message"}
{"nick":"isaacs","message":"consider a .on('error', neverHappens)","date":"2013-02-16T04:28:28.325Z","type":"message"}
{"nick":"isaacs","message":"i mean, you could count function calls and .bind() the hot ones..","date":"2013-02-16T04:28:55.645Z","type":"message"}
{"nick":"isaacs","message":"but now you'er redoing what v8 does","date":"2013-02-16T04:28:59.967Z","type":"message"}
{"nick":"trevnorris","message":"lol, yeah. thought about that for a sec. that seemed like a crazy overkill solution. even for me. ;-)","date":"2013-02-16T04:29:36.768Z","type":"message"}
{"nick":"isaacs","message":"also, heuristics generally suck.","date":"2013-02-16T04:30:02.575Z","type":"message"}
{"nick":"isaacs","message":"they're super duper magical","date":"2013-02-16T04:30:06.736Z","type":"message"}
{"nick":"isaacs","message":"hard to reason about","date":"2013-02-16T04:30:13.566Z","type":"message"}
{"nick":"isaacs","message":"qv: v8's inlining logic","date":"2013-02-16T04:30:19.421Z","type":"message"}
{"nick":"trevnorris","message":"yeah, fn can't have more than N characters. what's up with that?","date":"2013-02-16T04:30:36.276Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: was doing some additional tests. v8 has improved their call to from cc from to js a lot. if we upgrade to 3.16 in v0.11 then i think passing part of events to cc could be a big win.","date":"2013-02-16T04:31:48.791Z","type":"message"}
{"nick":"isaacs","message":"\"passing part of events\"?","date":"2013-02-16T04:32:14.193Z","type":"message"}
{"nick":"isaacs","message":"like, having node::Emit(obj, event, argv)?","date":"2013-02-16T04:32:50.893Z","type":"message"}
{"nick":"trevnorris","message":"like ->Call() takes context, and N arguments. so no need for apply() or call()","date":"2013-02-16T04:34:33.733Z","type":"message"}
{"nick":"isaacs","message":"right.","date":"2013-02-16T04:35:21.282Z","type":"message"}
{"nick":"isaacs","message":"except... we emit most events from JS","date":"2013-02-16T04:35:30.271Z","type":"message"}
{"nick":"isaacs","message":"not from C++","date":"2013-02-16T04:35:31.860Z","type":"message"}
{"nick":"isaacs","message":"and moving EventEmitter into C++ kinda sucks","date":"2013-02-16T04:35:39.801Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: well, just another crazy idea. sure you've noticed that i'm full of those.","date":"2013-02-16T04:37:54.051Z","type":"message"}
{"nick":"isaacs","message":"hehe","date":"2013-02-16T04:38:01.109Z","type":"message"}
{"nick":"isaacs","message":"sur","date":"2013-02-16T04:38:02.968Z","type":"message"}
{"nick":"trevnorris","message":"btw, love the \"don't do this without a good reason\" comment.","date":"2013-02-16T04:38:25.297Z","type":"message"}
{"nick":"TooTallNate","date":"2013-02-16T04:39:47.322Z","type":"join"}
{"nick":"TooTallNate","reason":"Client Quit","date":"2013-02-16T04:41:07.030Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: well, while i'm waiting for a build. if events were, say, move to cc. where would you hypothetically like them to live (e.g. node_events.cc or directly in node.cc)?","date":"2013-02-16T04:44:57.529Z","type":"message"}
{"nick":"trevnorris","message":"does anyone else see that \"test/simple/test-http-get-pipeline-problem.js\" is failing with an \"Abort (core dumped)\"?","date":"2013-02-16T04:46:39.139Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-16T04:55:02.092Z","type":"quit"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-02-16T04:57:59.913Z","type":"nick"}
{"nick":"c4milo","date":"2013-02-16T04:58:22.984Z","type":"join"}
{"nick":"kazupon","date":"2013-02-16T05:09:28.219Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-16T05:53:00.681Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-02-16T06:29:33.279Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-02-16T06:30:25.668Z","type":"quit"}
{"nick":"kazupon","date":"2013-02-16T07:00:43.656Z","type":"join"}
{"nick":"trevnorris","reason":"Quit: Leaving","date":"2013-02-16T07:07:17.079Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-02-16T07:09:50.528Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-02-16T07:18:45.281Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T08:01:22.268Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-16T08:06:05.344Z","type":"join"}
{"nick":"kazupon","date":"2013-02-16T08:06:42.324Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 244 seconds","date":"2013-02-16T08:11:17.162Z","type":"quit"}
{"nick":"rje","reason":"Quit: Leaving...","date":"2013-02-16T08:17:53.554Z","type":"quit"}
{"nick":"rje","date":"2013-02-16T08:20:49.268Z","type":"join"}
{"nick":"rje","reason":"Excess Flood","date":"2013-02-16T08:20:49.609Z","type":"quit"}
{"nick":"rje","date":"2013-02-16T08:22:02.618Z","type":"join"}
{"nick":"rje","reason":"Excess Flood","date":"2013-02-16T08:22:02.949Z","type":"quit"}
{"nick":"rje","date":"2013-02-16T08:22:35.131Z","type":"join"}
{"nick":"rje","reason":"Excess Flood","date":"2013-02-16T08:22:35.410Z","type":"quit"}
{"nick":"rje","date":"2013-02-16T08:28:27.089Z","type":"join"}
{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2013-02-16T09:03:14.546Z","type":"quit"}
{"nick":"kazupon","date":"2013-02-16T09:07:41.517Z","type":"join"}
{"nick":"mikeal","date":"2013-02-16T09:08:26.657Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 256 seconds","date":"2013-02-16T09:12:58.423Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-02-16T09:26:36.134Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 252 seconds","date":"2013-02-16T10:06:33.210Z","type":"quit"}
{"nick":"kazupon","date":"2013-02-16T10:09:24.655Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-02-16T10:13:13.383Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 255 seconds","date":"2013-02-16T10:14:08.562Z","type":"quit"}
{"nick":"txdv","message":"bnoordhuis: yoohoo","date":"2013-02-16T10:31:23.507Z","type":"message"}
{"nick":"txdv","message":"bnoordhuis: https://github.com/joyent/libuv/pull/712 https://github.com/joyent/libuv/pull/710","date":"2013-02-16T10:32:29.801Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 252 seconds","date":"2013-02-16T10:34:50.719Z","type":"quit"}
{"nick":"txdv","message":"FUUUUUUU","date":"2013-02-16T10:35:19.361Z","type":"message"}
{"nick":"hz","date":"2013-02-16T10:45:48.468Z","type":"join"}
{"nick":"kazupon","date":"2013-02-16T11:10:15.447Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-02-16T11:14:53.124Z","type":"quit"}
{"nick":"TheJH","date":"2013-02-16T11:20:28.673Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-02-16T11:22:29.813Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T11:55:14.768Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-16T12:05:05.454Z","type":"join"}
{"nick":"kazupon","date":"2013-02-16T12:11:33.662Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-02-16T12:16:00.529Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T13:00:05.879Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-16T13:05:07.255Z","type":"join"}
{"nick":"kazupon","date":"2013-02-16T13:11:57.184Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T13:16:00.933Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-16T13:19:37.564Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 248 seconds","date":"2013-02-16T13:30:12.023Z","type":"quit"}
{"nick":"mraleph","date":"2013-02-16T13:48:50.114Z","type":"join"}
{"nick":"c4milo","date":"2013-02-16T13:54:12.086Z","type":"join"}
{"nick":"kazupon","date":"2013-02-16T14:27:09.903Z","type":"join"}
{"nick":"AvianFlu","date":"2013-02-16T14:31:12.232Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 255 seconds","date":"2013-02-16T14:31:53.614Z","type":"quit"}
{"nick":"kazupon","date":"2013-02-16T14:34:31.570Z","type":"join"}
{"nick":"kazupon_","date":"2013-02-16T14:36:49.989Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-02-16T14:36:52.103Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T15:22:48.696Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-16T15:24:09.596Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-16T15:25:13.013Z","type":"quit"}
{"nick":"c4milo","date":"2013-02-16T15:35:04.042Z","type":"join"}
{"nick":"xaq","date":"2013-02-16T15:36:16.612Z","type":"join"}
{"nick":"jmar777","date":"2013-02-16T15:53:01.034Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T16:01:16.720Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-16T16:02:40.276Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-16T16:03:38.206Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-02-16T16:34:01.486Z","type":"quit"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-02-16T16:41:54.538Z","type":"nick"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-02-16T17:10:04.460Z","type":"nick"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T17:22:59.559Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-16T17:32:11.081Z","type":"join"}
{"nick":"bradleymeck","date":"2013-02-16T17:43:20.272Z","type":"join"}
{"nick":"bradleymeck","reason":"Ping timeout: 244 seconds","date":"2013-02-16T17:48:24.082Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-02-16T17:49:36.599Z","type":"join"}
{"nick":"c4milo","date":"2013-02-16T17:57:14.085Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T18:23:39.077Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-16T18:30:40.501Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-02-16T18:33:00.190Z","type":"join"}
{"nick":"bradleymeck","reason":"Ping timeout: 256 seconds","date":"2013-02-16T18:34:08.351Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-02-16T18:34:45.048Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-16T18:39:25.290Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-02-16T18:59:00.609Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-16T19:03:08.564Z","type":"join"}
{"nick":"`3rdEden","date":"2013-02-16T19:18:59.235Z","type":"join"}
{"nick":"kazupon_","reason":"Remote host closed the connection","date":"2013-02-16T19:21:27.599Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T19:44:03.251Z","type":"quit"}
{"nick":"loladiro","date":"2013-02-16T19:46:42.160Z","type":"join"}
{"nick":"benoitc","date":"2013-02-16T19:52:11.914Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-16T19:58:54.218Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-16T20:00:10.777Z","type":"join"}
{"nick":"c4milo_","date":"2013-02-16T20:06:22.144Z","type":"join"}
{"nick":"`3rdEden","reason":"Remote host closed the connection","date":"2013-02-16T20:20:12.463Z","type":"quit"}
{"nick":"xaq","reason":"Remote host closed the connection","date":"2013-02-16T20:20:20.039Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-16T20:29:15.389Z","type":"quit"}
{"nick":"kazupon","date":"2013-02-16T20:31:53.869Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-02-16T20:37:11.745Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-02-16T20:42:59.663Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T20:44:24.230Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-16T20:48:11.442Z","type":"join"}
{"nick":"perezd","date":"2013-02-16T20:50:42.292Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-02-16T20:52:32.735Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-16T20:59:28.638Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-16T21:00:42.402Z","type":"quit"}
{"nick":"loladiro","date":"2013-02-16T21:01:18.143Z","type":"join"}
{"nick":"c4milo_","reason":"Remote host closed the connection","date":"2013-02-16T21:04:50.085Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-02-16T21:05:39.915Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 255 seconds","date":"2013-02-16T21:08:26.406Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-16T21:15:18.299Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-02-16T21:16:06.254Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-02-16T21:18:05.278Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-02-16T21:18:38.047Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T21:24:39.745Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-16T21:25:43.956Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T21:25:45.605Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-16T21:26:42.974Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-02-16T21:28:04.141Z","type":"quit"}
{"nick":"jmar777","date":"2013-02-16T21:28:42.193Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-02-16T21:30:56.538Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-16T21:33:19.990Z","type":"join"}
{"nick":"jmar777","reason":"Ping timeout: 256 seconds","date":"2013-02-16T21:33:26.026Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T21:51:09.518Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-02-16T21:58:13.210Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-16T22:00:13.118Z","type":"join"}
{"nick":"loladiro","date":"2013-02-16T22:08:13.130Z","type":"join"}
{"nick":"AvianFlu","date":"2013-02-16T22:20:15.668Z","type":"join"}
{"nick":"papertigers","reason":"Ping timeout: 260 seconds","date":"2013-02-16T22:24:00.007Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-16T22:48:54.463Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-02-16T22:56:20.408Z","type":"quit"}
{"nick":"hz","date":"2013-02-16T22:59:37.992Z","type":"quit"}
{"nick":"benoitc","date":"2013-02-16T23:01:12.206Z","type":"join"}
{"nick":"txdv","message":"ARGGH","date":"2013-02-16T23:02:05.851Z","type":"message"}
{"nick":"mikeal","date":"2013-02-16T23:03:55.697Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-02-16T23:04:12.921Z","type":"quit"}
{"nick":"isaacs","message":"happy birthday, node","date":"2013-02-16T23:34:59.601Z","type":"message"}
{"nick":"mikeal","date":"2013-02-16T23:37:32.341Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 248 seconds","date":"2013-02-16T23:47:45.116Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-02-16T23:53:56.246Z","type":"quit"}
