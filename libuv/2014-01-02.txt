{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-01-02T00:00:00.813Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #366 \u00037UNSTABLE\u000f windows-x64 (5/202) smartos-ia32 (3/203) smartos-x64 (3/203) windows-ia32 (5/202) http://jenkins.nodejs.org/job/libuv-master-gyp/366/","date":"2014-01-02T00:00:05.121Z","type":"message"}
{"nick":"ircretary","date":"2014-01-02T00:00:08.228Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 272 seconds","date":"2014-01-02T00:10:15.779Z","type":"quit"}
{"nick":"brson","date":"2014-01-02T00:10:37.821Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-01-02T00:42:36.221Z","type":"quit"}
{"nick":"tito","date":"2014-01-02T00:55:09.370Z","type":"join"}
{"nick":"kazupon","date":"2014-01-02T00:56:55.936Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-01-02T01:03:54.473Z","type":"quit"}
{"nick":"thlorenz","date":"2014-01-02T01:05:05.260Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-01-02T01:08:42.795Z","type":"quit"}
{"nick":"calvinfo","date":"2014-01-02T01:09:41.167Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 272 seconds","date":"2014-01-02T01:19:17.898Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 260 seconds","date":"2014-01-02T01:30:39.822Z","type":"quit"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2014-01-02T01:32:17.380Z","type":"quit"}
{"nick":"stagas","date":"2014-01-02T01:34:09.525Z","type":"join"}
{"nick":"mikeal","date":"2014-01-02T01:41:13.015Z","type":"join"}
{"nick":"timoxley","date":"2014-01-02T01:41:20.265Z","type":"join"}
{"nick":"timoxley","reason":"Ping timeout: 245 seconds","date":"2014-01-02T01:51:48.283Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2014-01-02T01:57:01.786Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2014-01-02T01:57:04.468Z","type":"quit"}
{"nick":"timoxley","date":"2014-01-02T01:59:37.861Z","type":"join"}
{"nick":"mitsuhiko_","reason":"Ping timeout: 252 seconds","date":"2014-01-02T01:59:54.016Z","type":"quit"}
{"nick":"m76","date":"2014-01-02T02:02:36.121Z","type":"join"}
{"nick":"thlorenz","date":"2014-01-02T02:06:21.816Z","type":"join"}
{"nick":"daviddias","date":"2014-01-02T02:06:49.925Z","type":"join"}
{"nick":"kazupon","date":"2014-01-02T02:26:56.978Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 260 seconds","date":"2014-01-02T02:32:15.794Z","type":"quit"}
{"nick":"timoxley","reason":"Read error: Connection reset by peer","date":"2014-01-02T03:01:39.056Z","type":"quit"}
{"nick":"timoxley","date":"2014-01-02T03:02:09.773Z","type":"join"}
{"nick":"timoxley","reason":"Read error: Connection reset by peer","date":"2014-01-02T03:04:04.103Z","type":"quit"}
{"nick":"timoxley","date":"2014-01-02T03:12:23.256Z","type":"join"}
{"nick":"mitsuhiko","date":"2014-01-02T03:12:25.177Z","type":"join"}
{"nick":"timoxley","reason":"Read error: Connection reset by peer","date":"2014-01-02T03:18:39.885Z","type":"quit"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2014-01-02T03:25:12.112Z","type":"quit"}
{"nick":"kenperkins","date":"2014-01-02T03:25:37.365Z","type":"join"}
{"nick":"kazupon","date":"2014-01-02T03:27:58.144Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2014-01-02T03:32:51.460Z","type":"quit"}
{"nick":"timoxley","date":"2014-01-02T03:36:17.958Z","type":"join"}
{"nick":"AlexisMocha_","date":"2014-01-02T04:20:52.011Z","type":"join"}
{"nick":"AlexisMocha","reason":"Ping timeout: 252 seconds","date":"2014-01-02T04:22:21.014Z","type":"quit"}
{"nick":"kazupon","date":"2014-01-02T04:28:56.958Z","type":"join"}
{"nick":"abraxas","date":"2014-01-02T04:31:01.347Z","type":"join"}
{"nick":"inolen","date":"2014-01-02T04:32:55.320Z","type":"join"}
{"nick":"vptr","reason":"Quit: WeeChat 0.3.5","date":"2014-01-02T04:34:51.377Z","type":"quit"}
{"nick":"abraxas","reason":"Ping timeout: 246 seconds","date":"2014-01-02T04:35:28.806Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2014-01-02T04:35:37.864Z","type":"quit"}
{"nick":"bradleymeck","date":"2014-01-02T04:38:35.401Z","type":"join"}
{"nick":"m76","reason":"Read error: Connection reset by peer","date":"2014-01-02T04:39:27.314Z","type":"quit"}
{"nick":"timoxley","reason":"Ping timeout: 260 seconds","date":"2014-01-02T04:40:07.808Z","type":"quit"}
{"nick":"timoxley","date":"2014-01-02T04:53:34.470Z","type":"join"}
{"nick":"Ralith_","new_nick":"Ralith","date":"2014-01-02T05:07:56.902Z","type":"nick"}
{"nick":"stagas","reason":"Ping timeout: 265 seconds","date":"2014-01-02T05:08:08.639Z","type":"quit"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2014-01-02T05:09:15.767Z","type":"quit"}
{"nick":"Damn3d","reason":"Ping timeout: 260 seconds","date":"2014-01-02T05:16:55.967Z","type":"quit"}
{"nick":"Damn3d","date":"2014-01-02T05:19:29.351Z","type":"join"}
{"nick":"timoxley_","date":"2014-01-02T05:24:07.168Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-01-02T05:25:56.974Z","type":"quit"}
{"nick":"thlorenz","date":"2014-01-02T05:26:31.936Z","type":"join"}
{"nick":"timoxley","reason":"Ping timeout: 245 seconds","date":"2014-01-02T05:26:48.264Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 245 seconds","date":"2014-01-02T05:30:58.332Z","type":"quit"}
{"nick":"kazupon","date":"2014-01-02T05:31:25.992Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2014-01-02T06:04:43.865Z","type":"quit"}
{"nick":"timoxley_","reason":"Ping timeout: 252 seconds","date":"2014-01-02T06:06:18.012Z","type":"quit"}
{"nick":"timoxley","date":"2014-01-02T06:11:02.943Z","type":"join"}
{"nick":"AlexisMocha_","reason":"Ping timeout: 252 seconds","date":"2014-01-02T06:17:18.017Z","type":"quit"}
{"nick":"octetcloud","date":"2014-01-02T06:19:05.988Z","type":"join"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2014-01-02T06:38:21.564Z","type":"quit"}
{"nick":"kazupon","date":"2014-01-02T06:38:29.953Z","type":"join"}
{"nick":"timoxley","date":"2014-01-02T06:38:48.953Z","type":"join"}
{"nick":"timoxley","reason":"Read error: Connection reset by peer","date":"2014-01-02T06:41:12.209Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #415 \u00037UNSTABLE\u000f windows-x64 (12/607) windows-ia32 (12/607) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/415/","date":"2014-01-02T06:41:32.416Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-01-02T06:45:43.597Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-01-02T06:46:12.856Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 246 seconds","date":"2014-01-02T06:49:52.824Z","type":"quit"}
{"nick":"timoxley","date":"2014-01-02T07:02:49.755Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 260 seconds","date":"2014-01-02T07:12:15.804Z","type":"quit"}
{"nick":"timoxley","reason":"Ping timeout: 265 seconds","date":"2014-01-02T07:17:11.444Z","type":"quit"}
{"nick":"timoxley","date":"2014-01-02T07:24:04.561Z","type":"join"}
{"nick":"calvinfo","date":"2014-01-02T07:37:55.228Z","type":"join"}
{"nick":"stagas","date":"2014-01-02T07:39:35.150Z","type":"join"}
{"nick":"bajtos","date":"2014-01-02T07:53:53.186Z","type":"join"}
{"nick":"kazupon","date":"2014-01-02T08:08:29.774Z","type":"join"}
{"nick":"rendar","date":"2014-01-02T08:09:38.253Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2014-01-02T08:15:22.149Z","type":"quit"}
{"nick":"kazupon","date":"2014-01-02T08:15:33.899Z","type":"join"}
{"nick":"timoxley","reason":"Ping timeout: 240 seconds","date":"2014-01-02T08:18:15.305Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2014-01-02T08:20:43.752Z","type":"quit"}
{"nick":"hz","date":"2014-01-02T08:33:14.653Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-01-02T08:38:35.078Z","type":"quit"}
{"nick":"hz","reason":"Remote host closed the connection","date":"2014-01-02T08:55:25.236Z","type":"quit"}
{"nick":"hz","date":"2014-01-02T08:55:45.148Z","type":"join"}
{"nick":"indexzero","date":"2014-01-02T09:10:13.489Z","type":"join"}
{"nick":"janjongboom","date":"2014-01-02T09:23:04.793Z","type":"join"}
{"nick":"timoxley","date":"2014-01-02T09:26:00.958Z","type":"join"}
{"nick":"kazupon","date":"2014-01-02T09:26:05.577Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 265 seconds","date":"2014-01-02T09:30:35.345Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2014-01-02T09:31:34.360Z","type":"quit"}
{"nick":"piscisaureus","date":"2014-01-02T09:36:27.870Z","type":"join"}
{"nick":"timoxley_","date":"2014-01-02T09:42:59.015Z","type":"join"}
{"nick":"m76","date":"2014-01-02T09:43:10.888Z","type":"join"}
{"nick":"timoxley","reason":"Ping timeout: 260 seconds","date":"2014-01-02T09:46:43.790Z","type":"quit"}
{"nick":"janjongboom","reason":"Ping timeout: 260 seconds","date":"2014-01-02T10:04:55.805Z","type":"quit"}
{"nick":"janjongboom","date":"2014-01-02T10:05:38.732Z","type":"join"}
{"nick":"bajtos","reason":"Ping timeout: 240 seconds","date":"2014-01-02T10:18:39.193Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2014-01-02T10:35:10.506Z","type":"quit"}
{"nick":"timoxley","date":"2014-01-02T10:45:25.850Z","type":"join"}
{"nick":"timoxley_","reason":"Ping timeout: 246 seconds","date":"2014-01-02T10:48:13.832Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1691 \u00037UNSTABLE\u000f linux-x64 (5/607) osx-x64 (1/607) linux-ia32 (2/607) smartos-x64 (5/607) smartos-ia32 (5/607) osx-ia32 (1/607) http://jenkins.nodejs.org/job/nodejs-v0.10/1691/","date":"2014-01-02T10:48:57.636Z","type":"message"}
{"nick":"mmalecki_","new_nick":"mmalecki","date":"2014-01-02T10:55:00.957Z","type":"nick"}
{"nick":"rendar","reason":"Ping timeout: 240 seconds","date":"2014-01-02T11:03:51.535Z","type":"quit"}
{"nick":"AndreasMadsen","date":"2014-01-02T11:06:01.823Z","type":"join"}
{"nick":"rendar","date":"2014-01-02T11:13:59.317Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 252 seconds","date":"2014-01-02T11:17:03.021Z","type":"quit"}
{"nick":"hz","reason":"Read error: Connection reset by peer","date":"2014-01-02T11:41:33.348Z","type":"quit"}
{"nick":"hz","date":"2014-01-02T11:44:55.928Z","type":"join"}
{"nick":"hz","reason":"Changing host","date":"2014-01-02T11:44:56.083Z","type":"quit"}
{"nick":"hz","date":"2014-01-02T11:44:56.083Z","type":"join"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2014-01-02T11:46:17.042Z","type":"quit"}
{"nick":"AlexisMocha","date":"2014-01-02T11:49:02.746Z","type":"join"}
{"nick":"AndreasMadsen","reason":"Remote host closed the connection","date":"2014-01-02T12:12:13.978Z","type":"quit"}
{"nick":"AndreasMadsen","date":"2014-01-02T12:17:34.969Z","type":"join"}
{"nick":"daviddias","reason":"Read error: Connection reset by peer","date":"2014-01-02T12:19:37.098Z","type":"quit"}
{"nick":"daviddias","date":"2014-01-02T12:48:24.956Z","type":"join"}
{"nick":"rje","date":"2014-01-02T13:17:29.974Z","type":"join"}
{"nick":"AndreasMadsen","date":"2014-01-02T13:24:45.109Z","type":"quit"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-01-02T13:38:46.572Z","type":"quit"}
{"nick":"thlorenz","date":"2014-01-02T13:45:28.834Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-01-02T13:49:21.671Z","type":"quit"}
{"nick":"janjongboom","date":"2014-01-02T14:02:16.815Z","type":"join"}
{"nick":"kazupon","date":"2014-01-02T14:05:53.469Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 265 seconds","date":"2014-01-02T14:10:55.011Z","type":"quit"}
{"nick":"timoxley","date":"2014-01-02T14:15:40.912Z","type":"join"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2014-01-02T14:24:02.405Z","type":"quit"}
{"nick":"timoxley","date":"2014-01-02T14:25:10.915Z","type":"join"}
{"nick":"pachet","date":"2014-01-02T14:29:45.892Z","type":"join"}
{"nick":"thlorenz","date":"2014-01-02T14:34:30.502Z","type":"join"}
{"nick":"vptr","date":"2014-01-02T14:35:11.723Z","type":"join"}
{"nick":"janjongboom","reason":"Ping timeout: 260 seconds","date":"2014-01-02T14:36:59.837Z","type":"quit"}
{"nick":"janjongboom","date":"2014-01-02T14:37:48.065Z","type":"join"}
{"nick":"piscisaureus","reason":"Read error: Connection reset by peer","date":"2014-01-02T14:41:04.341Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 245 seconds","date":"2014-01-02T14:47:50.115Z","type":"quit"}
{"nick":"kazupon","date":"2014-01-02T14:54:59.307Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-01-02T15:01:35.893Z","type":"quit"}
{"nick":"kazupon","date":"2014-01-02T15:04:20.840Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #822 \u00037UNSTABLE\u000f smartos-x64 (6/691) smartos-ia32 (4/691) centos-ia32 (1/691) ubuntu-x64 (1/691) centos-x64 (1/691) http://jenkins.nodejs.org/job/nodejs-master/822/","date":"2014-01-02T15:21:13.894Z","type":"message"}
{"nick":"kenperkins","date":"2014-01-02T15:22:31.643Z","type":"join"}
{"nick":"timoxley","reason":"Read error: Connection reset by peer","date":"2014-01-02T15:24:58.781Z","type":"quit"}
{"nick":"rje","reason":"Ping timeout: 248 seconds","date":"2014-01-02T15:28:26.811Z","type":"quit"}
{"nick":"rje","date":"2014-01-02T15:30:17.421Z","type":"join"}
{"nick":"rje","reason":"Excess Flood","date":"2014-01-02T15:32:23.641Z","type":"quit"}
{"nick":"rje","date":"2014-01-02T15:33:18.649Z","type":"join"}
{"nick":"thlorenz","date":"2014-01-02T15:38:35.453Z","type":"join"}
{"nick":"txdv","message":"can we pause listening?","date":"2014-01-02T15:47:12.871Z","type":"message"}
{"nick":"txdv","message":"would be that something we could implement?","date":"2014-01-02T15:47:27.736Z","type":"message"}
{"nick":"tjfontaine","message":"\"pause\"?","date":"2014-01-02T15:47:36.944Z","type":"message"}
{"nick":"AvianFlu","date":"2014-01-02T15:50:21.925Z","type":"join"}
{"nick":"txdv","message":"I can delay the accept right?","date":"2014-01-02T15:52:27.046Z","type":"message"}
{"nick":"tjfontaine","message":"you can not accept and eventually things get lost to backlog, or you can close the listener, or you could interrupt at the firewall level to delay","date":"2014-01-02T15:53:30.444Z","type":"message"}
{"nick":"txdv","message":"i hope it will just return an error if I accept on an empty backlog","date":"2014-01-02T15:59:32.265Z","type":"message"}
{"nick":"hueniverse","reason":"Ping timeout: 260 seconds","date":"2014-01-02T16:00:31.851Z","type":"quit"}
{"nick":"piscisaureus","date":"2014-01-02T16:03:17.035Z","type":"join"}
{"nick":"groundwater","reason":"Ping timeout: 252 seconds","date":"2014-01-02T16:06:49.660Z","type":"quit"}
{"nick":"groundwater","date":"2014-01-02T16:07:24.352Z","type":"join"}
{"nick":"janjongboom","reason":"Ping timeout: 252 seconds","date":"2014-01-02T16:08:00.014Z","type":"quit"}
{"nick":"janjongboom","date":"2014-01-02T16:08:52.574Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2014-01-02T16:09:03.140Z","type":"quit"}
{"nick":"AvianFlu","date":"2014-01-02T16:18:49.167Z","type":"join"}
{"nick":"AvianFlu_","date":"2014-01-02T16:19:23.986Z","type":"join"}
{"nick":"indexzero","date":"2014-01-02T16:20:49.915Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 252 seconds","date":"2014-01-02T16:23:24.013Z","type":"quit"}
{"nick":"brettlangdon","date":"2014-01-02T16:25:07.394Z","type":"join"}
{"nick":"brettlangdon","reason":"\"Textual IRC Client: www.textualapp.com\"","date":"2014-01-02T16:26:26.187Z","type":"part"}
{"nick":"c4milo","date":"2014-01-02T16:26:32.091Z","type":"join"}
{"nick":"piscisaureus","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2014-01-02T16:30:47.388Z","type":"quit"}
{"nick":"groundwater","reason":"Ping timeout: 240 seconds","date":"2014-01-02T16:35:03.489Z","type":"quit"}
{"nick":"groundwater","date":"2014-01-02T16:37:59.849Z","type":"join"}
{"nick":"AndreasMadsen","date":"2014-01-02T16:44:00.028Z","type":"join"}
{"nick":"groundwater","reason":"Ping timeout: 240 seconds","date":"2014-01-02T16:45:27.025Z","type":"quit"}
{"nick":"groundwater","date":"2014-01-02T16:47:31.333Z","type":"join"}
{"nick":"hueniverse","date":"2014-01-02T16:48:27.495Z","type":"join"}
{"nick":"Benvie","date":"2014-01-02T16:53:06.974Z","type":"join"}
{"nick":"groundwater","reason":"Ping timeout: 240 seconds","date":"2014-01-02T16:54:14.693Z","type":"quit"}
{"nick":"AvianFlu_","new_nick":"AvianFlu","date":"2014-01-02T16:54:30.052Z","type":"nick"}
{"nick":"groundwater","date":"2014-01-02T16:58:32.618Z","type":"join"}
{"nick":"tjfontaine","message":"brb","date":"2014-01-02T16:58:36.253Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2014-01-02T16:59:17.016Z","type":"quit"}
{"nick":"Benvie","reason":"Ping timeout: 240 seconds","date":"2014-01-02T17:01:51.407Z","type":"quit"}
{"nick":"Benvie","date":"2014-01-02T17:02:07.470Z","type":"join"}
{"nick":"indutny","message":"hey people","date":"2014-01-02T17:06:38.873Z","type":"message"}
{"nick":"indutny","message":"no call today, I guess?","date":"2014-01-02T17:06:40.056Z","type":"message"}
{"nick":"AlexisMocha","message":"was about to ask the same","date":"2014-01-02T17:07:09.483Z","type":"message"}
{"nick":"AlexisMocha","message":"maybe people are still hungover from NYE ;)","date":"2014-01-02T17:08:47.396Z","type":"message"}
{"nick":"indutny","message":":)","date":"2014-01-02T17:09:46.218Z","type":"message"}
{"nick":"mcavage","date":"2014-01-02T17:09:57.026Z","type":"join"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-01-02T17:10:07.736Z","type":"quit"}
{"nick":"janjongboom","date":"2014-01-02T17:10:39.012Z","type":"join"}
{"nick":"tjfontaine","message":"AlexisMocha: that would be a hell of a NYE :)","date":"2014-01-02T17:10:54.663Z","type":"message"}
{"nick":"rmg","date":"2014-01-02T17:11:30.425Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-01-02T17:15:43.177Z","type":"quit"}
{"nick":"dap_","date":"2014-01-02T17:16:39.801Z","type":"join"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-01-02T17:18:56.230Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-01-02T17:21:40.065Z","type":"quit"}
{"nick":"kazupon","date":"2014-01-02T17:25:35.147Z","type":"join"}
{"nick":"M28","reason":"Read error: Connection reset by peer","date":"2014-01-02T17:25:35.953Z","type":"quit"}
{"nick":"M28","date":"2014-01-02T17:26:04.921Z","type":"join"}
{"nick":"tjfontaine","message":"indutny, AlexisMocha, trevnorris, isaacs, daviddias: http://doodle.com/w8ufb77qkt846qre I've started a timezone poll for you guys to check what days and times work well for you so we can pick an appropriate weekly meeting time","date":"2014-01-02T17:26:20.224Z","type":"message"}
{"nick":"indutny","message":"oh nice","date":"2014-01-02T17:26:36.419Z","type":"message"}
{"nick":"indutny","message":"modern technology","date":"2014-01-02T17:26:40.581Z","type":"message"}
{"nick":"indutny","message":"added myself","date":"2014-01-02T17:27:25.642Z","type":"message"}
{"nick":"tjfontaine","message":"thanks!","date":"2014-01-02T17:27:33.141Z","type":"message"}
{"nick":"AndreasMadsen","reason":"Remote host closed the connection","date":"2014-01-02T17:29:07.516Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2014-01-02T17:32:57.215Z","type":"quit"}
{"nick":"AndreasMadsen","date":"2014-01-02T17:34:02.511Z","type":"join"}
{"nick":"daviddias","message":"tjfontaine: done :)","date":"2014-01-02T17:36:23.312Z","type":"message"}
{"nick":"tjfontaine","message":"daviddias: thanks","date":"2014-01-02T17:36:35.881Z","type":"message"}
{"nick":"daviddias","message":"tjfontaine: did you check my email about the gathering in January? ","date":"2014-01-02T17:36:50.223Z","type":"message"}
{"nick":"daviddias","message":"Is it happening?","date":"2014-01-02T17:37:05.035Z","type":"message"}
{"nick":"daviddias","message":"Do we have dates? :)","date":"2014-01-02T17:37:08.642Z","type":"message"}
{"nick":"calvinfo","date":"2014-01-02T17:37:29.069Z","type":"join"}
{"nick":"AndreasMadsen","reason":"Ping timeout: 252 seconds","date":"2014-01-02T17:38:45.014Z","type":"quit"}
{"nick":"AndreasMadsen","date":"2014-01-02T17:40:24.306Z","type":"join"}
{"nick":"AndreasMadsen","reason":"Remote host closed the connection","date":"2014-01-02T17:50:14.233Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #414 \u00037UNSTABLE\u000f windows (4/202) smartos (3/203) http://jenkins.nodejs.org/job/libuv-master/414/","date":"2014-01-02T17:53:27.977Z","type":"message"}
{"nick":"mikeal","date":"2014-01-02T17:58:15.841Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2014-01-02T18:01:24.555Z","type":"quit"}
{"nick":"txdv","message":"how does one use a connection timeout?","date":"2014-01-02T18:02:27.553Z","type":"message"}
{"nick":"brson","date":"2014-01-02T18:04:14.375Z","type":"join"}
{"nick":"octetcloud","date":"2014-01-02T18:05:22.926Z","type":"join"}
{"nick":"c4milo","date":"2014-01-02T18:08:14.034Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-01-02T18:11:15.726Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #369 \u00037UNSTABLE\u000f linux-x64 (1/691) smartos-ia32 (4/691) smartos-x64 (6/691) http://jenkins.nodejs.org/job/libuv-node-integration/369/","date":"2014-01-02T18:13:48.231Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2014-01-02T18:14:46.176Z","type":"quit"}
{"nick":"trevnorris","message":"morning all","date":"2014-01-02T18:28:23.873Z","type":"message"}
{"nick":"janjongboom","date":"2014-01-02T18:29:36.703Z","type":"join"}
{"nick":"janjongboom","reason":"Ping timeout: 264 seconds","date":"2014-01-02T18:34:26.687Z","type":"quit"}
{"nick":"othiym23","message":"I'm entirely in favor of built-in gopher support in node, fwiw","date":"2014-01-02T18:34:31.891Z","type":"message"}
{"nick":"othiym23","message":"morning trevnorris ","date":"2014-01-02T18:34:43.309Z","type":"message"}
{"nick":"trevnorris","message":"i personally like prairie dogs","date":"2014-01-02T18:35:24.666Z","type":"message"}
{"nick":"rainabba","date":"2014-01-02T18:36:51.764Z","type":"join"}
{"nick":"rainabba","message":"othiym23: I hear you're working on a Hapi plugin for NewRelic and wanted to add my voice to the crowd requesting. I'm a paying customer of NewRelic (for a few months now), loving it, but also looking at moving much of our solution to Node and fear that I'm going to lose most of what I've come to love with NewRelic and ASP.Net.","date":"2014-01-02T18:38:16.750Z","type":"message"}
{"nick":"TooTallNate","date":"2014-01-02T18:38:25.874Z","type":"join"}
{"nick":"rainabba","message":"TooTallNate: Morning","date":"2014-01-02T18:38:43.476Z","type":"message"}
{"nick":"mcavage","reason":"Remote host closed the connection","date":"2014-01-02T18:38:49.269Z","type":"quit"}
{"nick":"janjongboom","date":"2014-01-02T18:39:15.680Z","type":"join"}
{"nick":"TooTallNate","message":"rainabba: hey there","date":"2014-01-02T18:42:51.144Z","type":"message"}
{"nick":"txdv","message":"wtf is gopher","date":"2014-01-02T18:43:51.400Z","type":"message"}
{"nick":"mcavage","date":"2014-01-02T18:44:32.762Z","type":"join"}
{"nick":"trevnorris","message":"NOTICE: i'm reserving double underscore properties on EE for CORE ONLY. mongoose can suck it.","date":"2014-01-02T18:46:05.594Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: is that gonna be your commit message","date":"2014-01-02T18:46:59.746Z","type":"message"}
{"nick":"trevnorris","message":"yeah. i'm actually typing that in now.","date":"2014-01-02T18:47:15.582Z","type":"message"}
{"nick":"groundwater","message":"too bad there is no non-enumerable naming convention","date":"2014-01-02T18:47:52.095Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: well, there is. there's not a non-enumerable that isn't slow as dirt. :P","date":"2014-01-02T18:48:28.268Z","type":"message"}
{"nick":"janjongboom","reason":"Ping timeout: 264 seconds","date":"2014-01-02T18:48:50.781Z","type":"quit"}
{"nick":"groundwater","message":"can we file a v8 bug?","date":"2014-01-02T18:49:12.807Z","type":"message"}
{"nick":"groundwater","message":"pretty sure they accept performance bugs","date":"2014-01-02T18:49:22.957Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: i still feel like the ._storage piece is unnecessary, but i concede the matter because i have failed to convince you or othiym23 ","date":"2014-01-02T18:50:45.369Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: just trust me after having spent 3 months figuring out how to do it w/o. it's brittle and causes a lot of edge cases.","date":"2014-01-02T18:51:39.123Z","type":"message"}
{"nick":"othiym23","message":"rainabba: hapi support is pending","date":"2014-01-02T18:52:02.225Z","type":"message"}
{"nick":"othiym23","message":"rainabba: mostly just trying to get some solid review from nvcexploder and hueniverse / figure out if there's anything additional to add to the integration that makes sense for hapi","date":"2014-01-02T18:52:33.419Z","type":"message"}
{"nick":"othiym23","message":"rainabba: we have the core of it working right now, so it'll be out within the next couple weeks, most likely","date":"2014-01-02T18:52:49.221Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: heh. edge cases = node :)","date":"2014-01-02T18:54:00.011Z","type":"message"}
{"nick":"rainabba","message":"othiym23: I'd be happy to test. My \"node apps\" are quite simple so far but since I'm learning I want everything like a hawk which could be helpful.","date":"2014-01-02T18:54:10.646Z","type":"message"}
{"nick":"othiym23","message":"groundwater, trevnorris: I agree that a case can be made that responsibility for managing storage for listener chains to the observers is a possibility, but trevnorris's strategy minimizes the contamination by confining storage to a standardized location","date":"2014-01-02T18:54:14.107Z","type":"message"}
{"nick":"othiym23","message":"rainabba: we don't really have a good setup for prereleasing new versions, but thanks for the offer","date":"2014-01-02T18:54:43.579Z","type":"message"}
{"nick":"rainabba","message":":","date":"2014-01-02T18:54:56.527Z","type":"message"}
{"nick":"rainabba","message":";)","date":"2014-01-02T18:54:58.743Z","type":"message"}
{"nick":"rainabba","action":"has cold fingers today","date":"2014-01-02T18:55:11.894Z","type":"action"}
{"nick":"trevnorris","message":"groundwater: the issue is that the same observer has a unique storage for every instance on which it's been executed.","date":"2014-01-02T18:55:23.555Z","type":"message"}
{"nick":"rainabba","message":"othiym23: Release will be mentioned in the standard what's new area?","date":"2014-01-02T18:56:03.753Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: the current method achieves almost zero noticable performance implication even when when it's in use.","date":"2014-01-02T18:56:08.349Z","type":"message"}
{"nick":"trevnorris","message":"\"noticeable\" meaning execution will add <10 microseconds of execution per second.","date":"2014-01-02T18:56:48.369Z","type":"message"}
{"nick":"trevnorris","message":"(minus the time spent in the actual callback.","date":"2014-01-02T18:57:02.882Z","type":"message"}
{"nick":"trevnorris","message":")","date":"2014-01-02T18:57:04.513Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: ._storage is attached to the ee, which is passed into the observer anyways, so you still have the same functionality. my argument was to implement that in the observer, vs core. however as othiym23 has pointed out, it nicely contains the mess by having a standardized place","date":"2014-01-02T18:57:28.051Z","type":"message"}
{"nick":"groundwater","message":"it is my tendency, and style to hoist functionality whenever possible, i am a \"when in doubt, leave it out\" kind of guy","date":"2014-01-02T18:58:23.178Z","type":"message"}
{"nick":"trevnorris","message":"i'm not sure how that could be hoisted. after I finish this up you can give me an example of how that could be done.","date":"2014-01-02T18:59:23.938Z","type":"message"}
{"nick":"petka_","reason":"*.net *.split","date":"2014-01-02T18:59:35.433Z","type":"quit"}
{"nick":"trevnorris","message":"groundwater: https://github.com/trevnorris/node/commit/4476452","date":"2014-01-02T18:59:51.956Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: heh","date":"2014-01-02T19:01:18.343Z","type":"message"}
{"nick":"groundwater","message":"not quite as punchy as your previous comment, but it'll do","date":"2014-01-02T19:01:31.831Z","type":"message"}
{"nick":"groundwater","message":"that should probably be documented though","date":"2014-01-02T19:01:41.897Z","type":"message"}
{"nick":"groundwater","message":"does that count as a breaking change to the ee interface?","date":"2014-01-02T19:02:04.304Z","type":"message"}
{"nick":"trevnorris","message":"maybe. tjfontaine ?","date":"2014-01-02T19:03:59.588Z","type":"message"}
{"nick":"othiym23","message":"rainabba: yeah, hapi support will be in one of the 2 next releases, depending on how the pipeline works out","date":"2014-01-02T19:04:05.106Z","type":"message"}
{"nick":"rainabba","message":"othiym23: Cool. Will that provide much of the same code-level analysis or just requests/timing (no code insight)? What about DB insights?","date":"2014-01-02T19:04:59.506Z","type":"message"}
{"nick":"petka_","date":"2014-01-02T19:05:10.245Z","type":"join"}
{"nick":"othiym23","message":"rainabba: the DB stuff is what's already in the agent -- MongoDB, MySQL, Redis, and memcached timings","date":"2014-01-02T19:06:32.387Z","type":"message"}
{"nick":"othiym23","message":"rainabba: that stuff is framework-agnostic","date":"2014-01-02T19:06:46.435Z","type":"message"}
{"nick":"rainabba","message":"Gotcha","date":"2014-01-02T19:07:10.293Z","type":"message"}
{"nick":"othiym23","message":"rainabba: hapi will at least include template rendering timings akin to what New Relic captures in Express and Restify apps","date":"2014-01-02T19:07:15.640Z","type":"message"}
{"nick":"othiym23","message":"the module's not a profiler, though, so it won't be line-by-line performance breakdown","date":"2014-01-02T19:07:36.413Z","type":"message"}
{"nick":"othiym23","message":"which is good, because tracing at that level would slaughter production performance, and the agent's meant to be run in production","date":"2014-01-02T19:07:59.431Z","type":"message"}
{"nick":"rainabba","message":".Net provides that data free then (hence that support in .Net) ?","date":"2014-01-02T19:08:41.651Z","type":"message"}
{"nick":"inolen","date":"2014-01-02T19:10:08.953Z","type":"join"}
{"nick":"trevnorris","message":"groundwater: ok, whenever you want, https://github.com/joyent/node/pull/6502 is working pretty stable, but still lacking some tests and all documentation.","date":"2014-01-02T19:11:04.041Z","type":"message"}
{"nick":"trevnorris","message":"man, I hate documentation.","date":"2014-01-02T19:11:07.552Z","type":"message"}
{"nick":"othiym23","message":"rainabba: .NET and some of the other New Relic instrumentation providers have a concept of \"thread profiling\" and \"X-Ray transactions\" that will gather some more detailed profiling information during targeted intervals","date":"2014-01-02T19:11:15.308Z","type":"message"}
{"nick":"othiym23","message":"the other problem with gathering that information is that it's a large volume of data that has to be packed up and shipped back to New Relic","date":"2014-01-02T19:11:35.644Z","type":"message"}
{"nick":"othiym23","message":"and also to be stored and analyzed for display","date":"2014-01-02T19:11:48.698Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: writing documentation sucks, especially because issues strongly suggest that nobody reads it","date":"2014-01-02T19:12:20.538Z","type":"message"}
{"nick":"othiym23","message":"NOT THAT I'M BITTER","date":"2014-01-02T19:12:29.253Z","type":"message"}
{"nick":"LOUDBOT","message":"(HE'S A LITTLE BIT SLOW AT THIS)","date":"2014-01-02T19:12:29.855Z","type":"message"}
{"nick":"othiym23","message":"lol loudbot","date":"2014-01-02T19:12:36.938Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2014-01-02T19:13:19.275Z","type":"quit"}
{"nick":"rainabba","message":"othiym23: Yeah, nothing worse than finding that you're well written docs are ignored. I know that feeling.","date":"2014-01-02T19:13:34.740Z","type":"message"}
{"nick":"txdv","message":"what docs","date":"2014-01-02T19:14:25.212Z","type":"message"}
{"nick":"AndreasMadsen","date":"2014-01-02T19:15:41.581Z","type":"join"}
{"nick":"AndreasMadsen","reason":"Client Quit","date":"2014-01-02T19:16:49.571Z","type":"quit"}
{"nick":"groundwater","message":"trevnorris: i'm gonna document ee-observers while i go, where should i put the docs?","date":"2014-01-02T19:18:10.629Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: wherever. in a text document? on the wiki?","date":"2014-01-02T19:18:45.002Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: oh i mean *in* the repo","date":"2014-01-02T19:19:07.417Z","type":"message"}
{"nick":"groundwater","message":"i.e. doc/","date":"2014-01-02T19:19:17.810Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: doc/api/events.markdown","date":"2014-01-02T19:19:37.831Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: there are more than a few implementation details i'll fill in for you.","date":"2014-01-02T19:20:36.273Z","type":"message"}
{"nick":"trevnorris","message":"FREAK YEAH!!!","date":"2014-01-02T19:20:57.728Z","type":"message"}
{"nick":"LOUDBOT","message":"MY ONLY DEFENSE IS LOWER CASE AND I AM HAVING TROUBLE HARNESSING IT","date":"2014-01-02T19:20:58.317Z","type":"message"}
{"nick":"groundwater","message":"haha","date":"2014-01-02T19:21:11.056Z","type":"message"}
{"nick":"LeftWing","reason":"Remote host closed the connection","date":"2014-01-02T19:21:17.688Z","type":"quit"}
{"nick":"trevnorris","message":"domains are now completely separated from core, and all tests are passing.","date":"2014-01-02T19:21:17.961Z","type":"message"}
{"nick":"trevnorris","message":"well, all core tests that is.","date":"2014-01-02T19:21:23.257Z","type":"message"}
{"nick":"LeftWing","date":"2014-01-02T19:21:24.526Z","type":"join"}
{"nick":"trevnorris","action":"curses hapi","date":"2014-01-02T19:21:27.075Z","type":"action"}
{"nick":"othiym23","message":"what about haaaaaaaapi","date":"2014-01-02T19:21:52.378Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: that's going to take work from the async listener side. the ee observers are straight forward compared to async listeners.","date":"2014-01-02T19:23:00.665Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: but you now have observers for create/before/after/error/add/remove for events. that enough? ;)","date":"2014-01-02T19:23:26.589Z","type":"message"}
{"nick":"othiym23","message":"how are async listeners interfering with hapi?","date":"2014-01-02T19:23:30.174Z","type":"message"}
{"nick":"trevnorris","message":"indirectly via domains.","date":"2014-01-02T19:23:40.050Z","type":"message"}
{"nick":"othiym23","message":"I just need observability for before and add for my stuff, so yes, I'm satisfied","date":"2014-01-02T19:24:01.490Z","type":"message"}
{"nick":"othiym23","message":"the global EE error listener is handy tho","date":"2014-01-02T19:24:11.196Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: am i being stupid? what's going on here https://gist.github.com/jacobgroundwater/8224957","date":"2014-01-02T19:24:43.856Z","type":"message"}
{"nick":"othiym23","message":"I think all I really need is EE.attachListener, tho","date":"2014-01-02T19:24:49.252Z","type":"message"}
{"nick":"trevnorris","message":"well, it's EE.attachObserver(), \"listener\" is an overloaded term with events.","date":"2014-01-02T19:25:25.426Z","type":"message"}
{"nick":"othiym23","message":"oh good, always nice to see the same concept being given multiple names (o_o)-b","date":"2014-01-02T19:25:49.619Z","type":"message"}
{"nick":"othiym23","message":"groundwater: what happens if you defer lines 20-24 with a setImmediate?","date":"2014-01-02T19:26:15.110Z","type":"message"}
{"nick":"groundwater","message":"othiym23: same","date":"2014-01-02T19:26:55.278Z","type":"message"}
{"nick":"janjongboom","date":"2014-01-02T19:27:25.639Z","type":"join"}
{"nick":"trevnorris","message":"groundwater: strange. console is an empty object there. wtf.","date":"2014-01-02T19:27:25.822Z","type":"message"}
{"nick":"Ralith","action":"wishes microsoft would just implement SCTP already","date":"2014-01-02T19:27:26.619Z","type":"action"}
{"nick":"trevnorris","message":"groundwater: use process._rawDebug()","date":"2014-01-02T19:27:32.580Z","type":"message"}
{"nick":"trevnorris","message":"wait.... console.log does exist. oh.","date":"2014-01-02T19:28:16.381Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: i think that creates an event, so you're going to end up in an infinite loop. :P","date":"2014-01-02T19:28:31.078Z","type":"message"}
{"nick":"othiym23","message":"groundwater: try to stay outside the Schwartzchild radius","date":"2014-01-02T19:28:59.135Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: commented: https://gist.github.com/jacobgroundwater/8224957","date":"2014-01-02T19:30:08.974Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: but, yeah. process._rawDebug() works fine.","date":"2014-01-02T19:30:29.770Z","type":"message"}
{"nick":"trevnorris","message":"console.* creates an event. so you'll end up in an infinite loop.","date":"2014-01-02T19:30:42.393Z","type":"message"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-01-02T19:30:49.271Z","type":"quit"}
{"nick":"groundwater","message":"trevnorris: your change works","date":"2014-01-02T19:30:50.938Z","type":"message"}
{"nick":"groundwater","message":"while i recognize that console.log may trigger some adverse events, why is .log missing altogether?","date":"2014-01-02T19:31:18.918Z","type":"message"}
{"nick":"groundwater","message":"i'm not getting a stack overflow error though, it's a \"has no method\" error","date":"2014-01-02T19:32:31.389Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: run my updated script here: https://gist.github.com/jacobgroundwater/8224957#comment-978188","date":"2014-01-02T19:33:33.616Z","type":"message"}
{"nick":"trevnorris","message":"that might be a bug in core.","date":"2014-01-02T19:33:52.774Z","type":"message"}
{"nick":"calvinfo","date":"2014-01-02T19:33:53.116Z","type":"join"}
{"nick":"trevnorris","message":"we found a few of those while I was developing async listeners.","date":"2014-01-02T19:34:04.115Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: looks like the first 'new EventEmitter()' is causing 4 extra create callbacks to run, somehow","date":"2014-01-02T19:34:06.444Z","type":"message"}
{"nick":"groundwater","message":"and each of those is running without a 'console' object in its context","date":"2014-01-02T19:34:27.158Z","type":"message"}
{"nick":"trevnorris","message":"well, let's grab the stack trace and see where they're coming from. :)","date":"2014-01-02T19:34:34.905Z","type":"message"}
{"nick":"groundwater","message":"sure :)","date":"2014-01-02T19:34:57.975Z","type":"message"}
{"nick":"janjongboom","reason":"Ping timeout: 240 seconds","date":"2014-01-02T19:35:02.936Z","type":"quit"}
{"nick":"rainabba","message":"othiym23: What's the difference between using newrelic.setTransactionName(name) and newrelic.setControllerName(name, [action]) when not providing action with the latter?","date":"2014-01-02T19:35:51.462Z","type":"message"}
{"nick":"tjfontaine","message":"and back.","date":"2014-01-02T19:35:54.381Z","type":"message"}
{"nick":"rainabba","message":"othiym23: .. and I'm a bit confused. All I see reported now is /* so if I want more detail for now I must use one of those in each handler I want to track right?","date":"2014-01-02T19:36:51.603Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: oh, is 'console' a proxy object?","date":"2014-01-02T19:36:57.338Z","type":"message"}
{"nick":"trevnorris","message":"something like that. one sec and i'll update my script.","date":"2014-01-02T19:37:09.849Z","type":"message"}
{"nick":"groundwater","message":"simply referring to 'console' is triggering the extra events","date":"2014-01-02T19:38:06.957Z","type":"message"}
{"nick":"groundwater","message":"https://gist.github.com/jacobgroundwater/8224957#comment-978189","date":"2014-01-02T19:38:07.151Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: yeah. I got the same thing.","date":"2014-01-02T19:38:48.668Z","type":"message"}
{"nick":"groundwater","message":"as long as 'console' is refrenced once before the 'create' observer runs, you can do console.log inside an observer","date":"2014-01-02T19:39:16.550Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: in src/node.js: global.__defineGetter__('console',","date":"2014-01-02T19:39:27.548Z","type":"message"}
{"nick":"othiym23","message":"rainabba: setControllerName makes it emulate Rails / Java-style controller name formatting","date":"2014-01-02T19:39:47.277Z","type":"message"}
{"nick":"othiym23","message":"rainabba: it's notional and a convenience for people who think about their apps that way","date":"2014-01-02T19:39:58.139Z","type":"message"}
{"nick":"rainabba","message":"Gotcha.","date":"2014-01-02T19:40:13.950Z","type":"message"}
{"nick":"rainabba","message":"ty","date":"2014-01-02T19:40:15.380Z","type":"message"}
{"nick":"othiym23","message":"rainabba: and yes, for now, you must include calls to the API to name each handler you want named in New Relic","date":"2014-01-02T19:40:29.760Z","type":"message"}
{"nick":"othiym23","message":"rainabba: the hapi instrumentation simplifies that for you by attaching the path from the route declaration to the transaction as its name","date":"2014-01-02T19:41:06.354Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: well, that's annoying. wonder if there's a way we can not lazy load that. it's making life painful.","date":"2014-01-02T19:41:33.943Z","type":"message"}
{"nick":"rainabba","message":"othiym23: That's what's coming you mean? For now I have to explicitly provide that path?","date":"2014-01-02T19:41:53.952Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: okay, it must be creating some EEs in the process","date":"2014-01-02T19:41:59.461Z","type":"message"}
{"nick":"trevnorris","message":"yeah, it is.","date":"2014-01-02T19:42:18.177Z","type":"message"}
{"nick":"trevnorris","message":"maybe I should just do console; at the top of events.js :P","date":"2014-01-02T19:42:34.101Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: you *could* require('console') as part of require('events') lol","date":"2014-01-02T19:42:43.161Z","type":"message"}
{"nick":"othiym23","message":"rainabba: yes, and yes","date":"2014-01-02T19:42:48.550Z","type":"message"}
{"nick":"groundwater","message":"sorry not require('console') but just type console; somewhere","date":"2014-01-02T19:43:01.616Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: ah suck it. the events module is loaded before the process object is setup. so I can't require('console');","date":"2014-01-02T19:43:36.273Z","type":"message"}
{"nick":"rainabba","action":"shakes othiym23's hand and thanks him for his time :)","date":"2014-01-02T19:43:39.573Z","type":"action"}
{"nick":"trevnorris","message":"oh yeah","date":"2014-01-02T19:43:55.831Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: because I get this: ReferenceError: console is not defined ","date":"2014-01-02T19:44:11.839Z","type":"message"}
{"nick":"groundwater","message":"well shit","date":"2014-01-02T19:44:42.454Z","type":"message"}
{"nick":"trevnorris","message":"yeah.","date":"2014-01-02T19:45:10.757Z","type":"message"}
{"nick":"trevnorris","message":"i'd say just document using process._rawDebug() :P","date":"2014-01-02T19:45:22.113Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: i placed console; at the top of your script and it works fine.","date":"2014-01-02T19:45:38.572Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: where is it actually creating an EE?","date":"2014-01-02T19:45:45.918Z","type":"message"}
{"nick":"othiym23","message":"rainabba: you're welcome o/","date":"2014-01-02T19:45:49.003Z","type":"message"}
{"nick":"groundwater","message":"yup :)","date":"2014-01-02T19:45:56.213Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: in src/node.js:       return NativeModule.require('console');","date":"2014-01-02T19:46:07.618Z","type":"message"}
{"nick":"tjfontaine","message":"document?!","date":"2014-01-02T19:46:13.792Z","type":"message"}
{"nick":"othiym23","message":"shhhhhh process._rawDebug is secret","date":"2014-01-02T19:46:29.582Z","type":"message"}
{"nick":"othiym23","message":"first rule of Node club etc","date":"2014-01-02T19:46:34.528Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: oh, are modules EE instances?","date":"2014-01-02T19:46:40.284Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: console.* is useless right now when trying to get info out of async listeners or event observers.","date":"2014-01-02T19:46:46.860Z","type":"message"}
{"nick":"groundwater","message":"anyone who uses _rawDebug will be attacked by a series node nodebots drone strikes","date":"2014-01-02T19:47:06.245Z","type":"message"}
{"nick":"tjfontaine","message":"it's useless to *us*","date":"2014-01-02T19:47:09.637Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: to anyone who wants to document anything happening from their callbacks.","date":"2014-01-02T19:47:36.507Z","type":"message"}
{"nick":"tjfontaine","message":"we can tell newrelic to use it, but we won't be documenting it for the hordes, lest we end up with yet another situation like nextTick","date":"2014-01-02T19:47:56.505Z","type":"message"}
{"nick":"trevnorris","message":"well then we need to solve the crap hole that console.* is in","date":"2014-01-02T19:48:13.226Z","type":"message"}
{"nick":"trevnorris","message":"because people _will_ want to console.* from their callbacks, but won't be able to, and will be getting cryptic error messages.","date":"2014-01-02T19:48:33.620Z","type":"message"}
{"nick":"tjfontaine","message":"if somehow our changes to callbacks have broken console.* then we need to figure out either: 1) how to fix console (without subverting streams), 2) how to fix streams, 3) how to fix AL and EE observer","date":"2014-01-02T19:48:45.085Z","type":"message"}
{"nick":"mcavage","reason":"Remote host closed the connection","date":"2014-01-02T19:49:09.439Z","type":"quit"}
{"nick":"trevnorris","message":"well, 3 isn't broken. they're meant to observer at that low level. sort of why i've put in all the effort to implement them.","date":"2014-01-02T19:49:26.392Z","type":"message"}
{"nick":"tjfontaine","message":"but telling people to use ._rawDebug means we have done something terribly wrong","date":"2014-01-02T19:49:34.253Z","type":"message"}
{"nick":"mcavage","date":"2014-01-02T19:49:36.334Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: i realize that. it was tongue in cheek.","date":"2014-01-02T19:50:00.860Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: the issue is that events.js is loaded before the process object is created.","date":"2014-01-02T19:50:19.081Z","type":"message"}
{"nick":"tjfontaine","message":"alright -- also, it's absolutely ok to tell people that `console` is off limits in those EEO and AL, and that they need to seek alternate debugging techniques","date":"2014-01-02T19:50:28.378Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: so it's impossible right now that we _don't_ lazy load console.","date":"2014-01-02T19:50:33.612Z","type":"message"}
{"nick":"trevnorris","message":"which leads to a world of hurt.","date":"2014-01-02T19:50:37.532Z","type":"message"}
{"nick":"tjfontaine","message":"ffwiw, console.* is rarely the RightWay(tm) to debug :)","date":"2014-01-02T19:50:50.071Z","type":"message"}
{"nick":"mikeal","date":"2014-01-02T19:50:55.984Z","type":"join"}
{"nick":"trevnorris","message":"tell that to substack :P","date":"2014-01-02T19:51:02.697Z","type":"message"}
{"nick":"tjfontaine","message":"I hate it when he says that shit","date":"2014-01-02T19:51:09.592Z","type":"message"}
{"nick":"tjfontaine","message":"anyway","date":"2014-01-02T19:51:10.347Z","type":"message"}
{"nick":"mcavage","reason":"Remote host closed the connection","date":"2014-01-02T19:51:14.354Z","type":"quit"}
{"nick":"trevnorris","message":"hah","date":"2014-01-02T19:51:15.873Z","type":"message"}
{"nick":"mcavage_","date":"2014-01-02T19:51:20.013Z","type":"join"}
{"nick":"trevnorris","message":"well, my main ways of debugging are console.log (well, process._rawDebug now) and fprintf()","date":"2014-01-02T19:51:33.296Z","type":"message"}
{"nick":"tjfontaine","message":"we should write or fix the tooling to enable better debugging","date":"2014-01-02T19:51:35.275Z","type":"message"}
{"nick":"tjfontaine","message":"then we need to find better ways for you to debug :)","date":"2014-01-02T19:51:50.180Z","type":"message"}
{"nick":"groundwater","message":"i thought the debugger was getting axed?","date":"2014-01-02T19:51:53.950Z","type":"message"}
{"nick":"tjfontaine","message":"no it's nto","date":"2014-01-02T19:51:58.222Z","type":"message"}
{"nick":"groundwater","message":"sorry, that was a half troll statement","date":"2014-01-02T19:52:01.476Z","type":"message"}
{"nick":"trevnorris","message":"you can't debug node when node hasn't started yet :P","date":"2014-01-02T19:52:09.185Z","type":"message"}
{"nick":"tjfontaine","message":"yes you can.","date":"2014-01-02T19:52:13.761Z","type":"message"}
{"nick":"trevnorris","message":"let's not get into this. logging has worked well for me for years when I just need a simple piece of info here or there.","date":"2014-01-02T19:53:07.655Z","type":"message"}
{"nick":"trevnorris","message":"when needed i use your RightWay(tm) of debugging, but most the time it's not needed.","date":"2014-01-02T19:53:36.353Z","type":"message"}
{"nick":"groundwater","message":"i suppose the issue is that having console.log blow up in EE Observers, and even Async-Listeners may be a source of many issues and complaints","date":"2014-01-02T19:54:22.395Z","type":"message"}
{"nick":"groundwater","message":"if there is a reasonable way to change that, that's probably the way to go","date":"2014-01-02T19:54:37.866Z","type":"message"}
{"nick":"groundwater","message":"however that may be easier said than done, and people may need to suck it up for now, in which case we should document the dangers","date":"2014-01-02T19:55:18.298Z","type":"message"}
{"nick":"tjfontaine","message":"which is why I would argue that maybe EEO/AL need a change, or we override console in those contexts, or we simply just document the fuck out of the fact that: HEY RECURSIVE HELL IS ABOUT TO BREAK LOOSE","date":"2014-01-02T19:55:30.509Z","type":"message"}
{"nick":"groundwater","message":"zlago alaert","date":"2014-01-02T19:57:09.762Z","type":"message"}
{"nick":"groundwater","message":"you should replace 'console' in async listeners with require('child_process').exec('rm -rf /')","date":"2014-01-02T19:57:47.985Z","type":"message"}
{"nick":"groundwater","message":"that'll learn 'em real fast","date":"2014-01-02T19:57:54.611Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: this case is just fucked up: https://gist.github.com/trevnorris/8225591","date":"2014-01-02T19:58:03.861Z","type":"message"}
{"nick":"tjfontaine","message":"sounds like exactly what I would expect to happen given what that mechansim is actually trying to do","date":"2014-01-02T19:58:36.278Z","type":"message"}
{"nick":"trevnorris","message":"yeah, because you understand the mechanism. as a normal user i'd think, hey I want to write directly to stdout. wtf is going on?","date":"2014-01-02T19:59:07.944Z","type":"message"}
{"nick":"groundwater","message":"on one hand i am okay with observers and async-listeners being difficult ","date":"2014-01-02T19:59:21.444Z","type":"message"}
{"nick":"tjfontaine","message":"first","date":"2014-01-02T19:59:22.651Z","type":"message"}
{"nick":"tjfontaine","message":"ain't no one using AL and EEO going to be a \"normal\" user","date":"2014-01-02T19:59:32.547Z","type":"message"}
{"nick":"groundwater","message":"because if people start meta-programming with them, it's gonna be even harder to instrument those apps","date":"2014-01-02T19:59:49.578Z","type":"message"}
{"nick":"tjfontaine","message":"this is the price we pay for wanting to observe features of the software from *inside* the software","date":"2014-01-02T19:59:59.181Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: you just made me pee myself a little. if I seriously just implemented a feature that allows strange meta programming crap, i'm ripping it all out. :P","date":"2014-01-02T20:00:24.072Z","type":"message"}
{"nick":"groundwater","message":"i'm *very* okay with just a big fat warning","date":"2014-01-02T20:00:40.279Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: then, at the least, we (meaning not me) need to list appropriate ways to debug EEO/AL","date":"2014-01-02T20:01:03.524Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: if you build it, they it will be meta-programmed","date":"2014-01-02T20:01:05.971Z","type":"message"}
{"nick":"trevnorris","message":".......","date":"2014-01-02T20:01:12.911Z","type":"message"}
{"nick":"trevnorris","action":"runs in fear.","date":"2014-01-02T20:01:15.652Z","type":"action"}
{"nick":"groundwater","message":"require('fs').writeSync(1, 'bla bla')","date":"2014-01-02T20:01:24.022Z","type":"message"}
{"nick":"groundwater","message":"has always worked for me","date":"2014-01-02T20:01:52.177Z","type":"message"}
{"nick":"tjfontaine","message":"ya, I mean, more or less, if you want stdout/stderr logging","date":"2014-01-02T20:02:09.957Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: wtf. ok. that's messed up.","date":"2014-01-02T20:02:18.486Z","type":"message"}
{"nick":"groundwater","message":"lunch time","date":"2014-01-02T20:02:20.705Z","type":"message"}
{"nick":"tjfontaine","message":"that's all ._rawDebug is, just with an associated fflush()","date":"2014-01-02T20:02:29.149Z","type":"message"}
{"nick":"trevnorris","message":"ok, well this doughnut shop is eyeing me weird. think I better head.","date":"2014-01-02T20:03:25.089Z","type":"message"}
{"nick":"trevnorris","message":"bbiab","date":"2014-01-02T20:03:26.620Z","type":"message"}
{"nick":"trevnorris","action":"&","date":"2014-01-02T20:03:28.350Z","type":"action"}
{"nick":"LOUDBOT","message":"I WILL ASSAULT YOUR SENSIBILITIES IN DUE COURSE","date":"2014-01-02T20:03:29.524Z","type":"message"}
{"nick":"groundwater","reason":"Ping timeout: 240 seconds","date":"2014-01-02T20:11:51.167Z","type":"quit"}
{"nick":"groundwater","date":"2014-01-02T20:14:35.213Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2014-01-02T20:21:56.512Z","type":"quit"}
{"nick":"groundwater","reason":"Ping timeout: 240 seconds","date":"2014-01-02T20:23:50.804Z","type":"quit"}
{"nick":"rainabba","message":"groundwater: \"require('child_process').exec('rm -rf /')\"  <--- will teach the folks on posix systems anyway ;)","date":"2014-01-02T20:23:56.032Z","type":"message"}
{"nick":"rainabba","action":"is on Windows and learning more about Node as a result (since so much doesn't work as claimed)","date":"2014-01-02T20:24:29.210Z","type":"action"}
{"nick":"TooTallNate","date":"2014-01-02T20:25:20.797Z","type":"join"}
{"nick":"groundwater","date":"2014-01-02T20:26:12.619Z","type":"join"}
{"nick":"trevnorris","message":"groundwater: will fs.writeSync(1, 'bla bla') also work on windows?","date":"2014-01-02T20:28:04.756Z","type":"message"}
{"nick":"groundwater","reason":"Ping timeout: 240 seconds","date":"2014-01-02T20:35:50.770Z","type":"quit"}
{"nick":"groundwater","date":"2014-01-02T20:38:42.111Z","type":"join"}
{"nick":"vptr","reason":"Quit: WeeChat 0.4.1","date":"2014-01-02T20:40:16.198Z","type":"quit"}
{"nick":"indexzero","date":"2014-01-02T20:47:48.069Z","type":"join"}
{"nick":"groundwater","message":"trevnorris: never tried it, but great question","date":"2014-01-02T20:48:58.496Z","type":"message"}
{"nick":"groundwater","message":"i don't think windows has file descriptors","date":"2014-01-02T20:49:01.423Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: yeah, but I think libuv still treats it that way. indutny ?","date":"2014-01-02T20:49:43.451Z","type":"message"}
{"nick":"groundwater","message":"it all depends how one \"describes\" stdout on windows","date":"2014-01-02T20:50:14.155Z","type":"message"}
{"nick":"othiym23","message":"I think that libuv does map the standard file descriptors for Windows","date":"2014-01-02T20:54:43.537Z","type":"message"}
{"nick":"othiym23","message":"the api docs are pretty good at calling out the areas where there are platform differences","date":"2014-01-02T20:55:00.420Z","type":"message"}
{"nick":"m76","reason":"Quit: KVIrc 4.0.4 Insomnia http://www.kvirc.net/","date":"2014-01-02T20:55:27.877Z","type":"quit"}
{"nick":"groundwater","reason":"Ping timeout: 240 seconds","date":"2014-01-02T20:56:14.980Z","type":"quit"}
{"nick":"c4milo","date":"2014-01-02T20:57:02.776Z","type":"join"}
{"nick":"groundwater","date":"2014-01-02T20:57:54.031Z","type":"join"}
{"nick":"m76","date":"2014-01-02T20:59:03.082Z","type":"join"}
{"nick":"trevnorris","message":"othiym23: so... why don't the events newListener and removeListener work?","date":"2014-01-02T20:59:14.313Z","type":"message"}
{"nick":"indutny","message":"hey","date":"2014-01-02T21:00:30.739Z","type":"message"}
{"nick":"indutny","message":"what's up?","date":"2014-01-02T21:00:34.213Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: is the difference that you want to be notified when any event is added ever?","date":"2014-01-02T21:00:34.624Z","type":"message"}
{"nick":"trevnorris","message":"indutny: nm. think we got it figured out. :)","date":"2014-01-02T21:00:45.100Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2014-01-02T21:01:26.755Z","type":"message"}
{"nick":"indutny","message":"great","date":"2014-01-02T21:01:28.126Z","type":"message"}
{"nick":"c4milo","reason":"Ping timeout: 260 seconds","date":"2014-01-02T21:01:55.884Z","type":"quit"}
{"nick":"AvianFlu","date":"2014-01-02T21:02:29.832Z","type":"join"}
{"nick":"hueniverse","message":" it is worth doing my own mini implementation of EE once() to avoid making every response object inherits from EE for the 5% cases where it is needed?","date":"2014-01-02T21:04:30.132Z","type":"message"}
{"nick":"hueniverse","message":"IOW, is there significant cost in making every internal response object inherit from EE","date":"2014-01-02T21:05:13.293Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse: hapi tests have completely frozen. :P","date":"2014-01-02T21:06:08.657Z","type":"message"}
{"nick":"trevnorris","message":"you're no fun at all","date":"2014-01-02T21:06:18.162Z","type":"message"}
{"nick":"hueniverse","message":"trevnorris: you mean stuck running?","date":"2014-01-02T21:06:36.534Z","type":"message"}
{"nick":"trevnorris","message":"yeah. it's been sitting there for a couple minutes.","date":"2014-01-02T21:06:54.432Z","type":"message"}
{"nick":"hueniverse","message":"if it doesn't timeout after 2s","date":"2014-01-02T21:07:06.806Z","type":"message"}
{"nick":"trevnorris","message":"your test module should really capture SIGINT and print what results it has before existing","date":"2014-01-02T21:07:08.371Z","type":"message"}
{"nick":"hueniverse","message":"something is really broken","date":"2014-01-02T21:07:11.879Z","type":"message"}
{"nick":"trevnorris","message":"heh, then I really broke something :P","date":"2014-01-02T21:07:22.082Z","type":"message"}
{"nick":"hueniverse","message":"lab and hapi both use the exact same pattern of domain","date":"2014-01-02T21:07:34.179Z","type":"message"}
{"nick":"hueniverse","message":"if that's broken, it's all going to be broken","date":"2014-01-02T21:07:41.650Z","type":"message"}
{"nick":"trevnorris","message":"well, fwiw i'm finally to the point where i'm testing my stuff against your stuff.","date":"2014-01-02T21:08:46.427Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse: is there an option to print every failed test as they fail?","date":"2014-01-02T21:12:01.566Z","type":"message"}
{"nick":"hueniverse","message":"trevnorris: no, but you can easily change the code","date":"2014-01-02T21:12:26.129Z","type":"message"}
{"nick":"hueniverse","message":"lab is super simple","date":"2014-01-02T21:12:31.480Z","type":"message"}
{"nick":"hueniverse","message":"also, run just the test you want directly with node","date":"2014-01-02T21:13:06.745Z","type":"message"}
{"nick":"trevnorris","message":"problem is I don't know which test is hanging.","date":"2014-01-02T21:13:25.652Z","type":"message"}
{"nick":"hueniverse","message":"using node master?","date":"2014-01-02T21:13:45.159Z","type":"message"}
{"nick":"hueniverse","message":"I can isolate it for you quickly","date":"2014-01-02T21:13:51.412Z","type":"message"}
{"nick":"trevnorris","message":"thanks","date":"2014-01-02T21:13:57.635Z","type":"message"}
{"nick":"trevnorris","message":"and yeah. master","date":"2014-01-02T21:14:01.305Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: not sure what your question is getting at","date":"2014-01-02T21:18:03.544Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I want to do something to the handler at the time the listener is added, I don't really care about the event type","date":"2014-01-02T21:18:23.281Z","type":"message"}
{"nick":"trevnorris","message":"what do you mean by \"handler\"","date":"2014-01-02T21:19:03.909Z","type":"message"}
{"nick":"othiym23","message":"the listener function itself","date":"2014-01-02T21:20:08.455Z","type":"message"}
{"nick":"othiym23","message":"gotta wrap em all, depending on context","date":"2014-01-02T21:20:15.031Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: oy, which means you want to be able to receive the listener then return a new function that is actually added in the listeners place, so you can wrap it?","date":"2014-01-02T21:21:42.946Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: i notice ObserverInst and EventEmitter both have flags, is one supposed to be .flags and the other .__flags?","date":"2014-01-02T21:22:09.406Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: that's what emitter-listener does, yes","date":"2014-01-02T21:22:11.920Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: well poop. need to go change that.","date":"2014-01-02T21:22:34.976Z","type":"message"}
{"nick":"m76","reason":"Ping timeout: 240 seconds","date":"2014-01-02T21:23:03.474Z","type":"quit"}
{"nick":"trevnorris","message":"groundwater: each ObserverInst has it's own .flags to quickly check which callbacks are available. since multiple observers can be added to an EE instance I can simply |= the .flags to the EE instance's .__flags then know all the callbacks from all the observers.","date":"2014-01-02T21:23:35.423Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: there is inconsistent usage, but i can fix it","date":"2014-01-02T21:24:05.719Z","type":"message"}
{"nick":"groundwater","message":"okay, so ObserverInst has .flags","date":"2014-01-02T21:24:11.923Z","type":"message"}
{"nick":"groundwater","message":"and EE has .__flags","date":"2014-01-02T21:24:15.821Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: inconsistent?","date":"2014-01-02T21:24:25.827Z","type":"message"}
{"nick":"groundwater","message":"yah, i think it's mixed up some places","date":"2014-01-02T21:24:56.788Z","type":"message"}
{"nick":"trevnorris","message":"example?","date":"2014-01-02T21:25:12.951Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2014-01-02T21:25:34.196Z","type":"quit"}
{"nick":"groundwater","message":"trevnorris: oh i had some old commit, i just fetched and it's working now","date":"2014-01-02T21:27:50.083Z","type":"message"}
{"nick":"trevnorris","message":":)","date":"2014-01-02T21:27:59.941Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: is the error listener supposed to catch error events?","date":"2014-01-02T21:29:37.180Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse: you're going to need to help me figure out which are domain specific. e.g. test/integration/auth.js is failing on master, but don't think it's because of domains.","date":"2014-01-02T21:30:20.486Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: yeah.","date":"2014-01-02T21:30:27.043Z","type":"message"}
{"nick":"hueniverse","message":"trevnorris: compiling","date":"2014-01-02T21:30:38.910Z","type":"message"}
{"nick":"hueniverse","message":"going to get you a simple test to look at","date":"2014-01-02T21:30:51.366Z","type":"message"}
{"nick":"hueniverse","message":"will take me an hour","date":"2014-01-02T21:30:56.015Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: that seems opposite behavior of async-listeners","date":"2014-01-02T21:31:06.291Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: that definitely changes this from an Observer to a Meddler","date":"2014-01-02T21:31:24.089Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse: ok. well, i'm stepping through each of your tests. everything that passes on v0.10 should pass now, but since so much has changed not sure if it's related to my work or not in some cases.","date":"2014-01-02T21:31:40.100Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: i'm confused.","date":"2014-01-02T21:31:55.314Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: sorry i should have used a better word than \"catch\"","date":"2014-01-02T21:32:30.855Z","type":"message"}
{"nick":"groundwater","message":"having an error listener causes error events to not throw","date":"2014-01-02T21:32:47.326Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: it will intercept when error is emitted and there's no error event listener set.","date":"2014-01-02T21:32:57.685Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2014-01-02T21:33:05.691Z","type":"message"}
{"nick":"trevnorris","message":"just like domains do.","date":"2014-01-02T21:33:16.970Z","type":"message"}
{"nick":"groundwater","message":"i.e. if you have an error observer, but not listener to the ee 'error' event","date":"2014-01-02T21:33:17.996Z","type":"message"}
{"nick":"groundwater","message":"ahh","date":"2014-01-02T21:33:54.877Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: so async-listeners have the option of intercepting the error, or letting it propagate","date":"2014-01-02T21:34:39.761Z","type":"message"}
{"nick":"rainabba","message":"othiym23: I changed my app name about 10 minutes ago, see it in my NewRelic app list but I'm only seeing /* listed despite having called setControllerName() for every call since. I don't need both methods to set the name do I? Looked like it was showing me transactions two ways when i was calling both to test.","date":"2014-01-02T21:35:05.817Z","type":"message"}
{"nick":"groundwater","message":"i think EE observers may want to do the same","date":"2014-01-02T21:35:10.975Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: yeah. but that's in the case that the error threw. which will cause the program to crash. EE's \"emit\" error objects which will only throw if there's no handler.","date":"2014-01-02T21:35:21.661Z","type":"message"}
{"nick":"groundwater","message":"for example, the agent wants to know about error events, but not prevent them from throwing","date":"2014-01-02T21:35:22.127Z","type":"message"}
{"nick":"trevnorris","message":"but then I'll need to leave the domain specific code in EE, which is what this was supposed to remove.","date":"2014-01-02T21:35:49.657Z","type":"message"}
{"nick":"rainabba","message":"othiym23: Also, setTransactionName() was causing the name to show with // instead of a single /. Should that be?","date":"2014-01-02T21:36:10.993Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: what I could do, like AL, is if the callback returns \"true\" then it's considered handled.","date":"2014-01-02T21:36:12.379Z","type":"message"}
{"nick":"groundwater","message":"what about deciding to throw based on whether the error observer returns true/false","date":"2014-01-02T21:36:44.411Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: otherwise you can just collect info on the error then allow it to be thrown","date":"2014-01-02T21:36:44.567Z","type":"message"}
{"nick":"groundwater","message":"just like async-listener","date":"2014-01-02T21:36:49.798Z","type":"message"}
{"nick":"trevnorris","message":"yeah, that's what I meant.","date":"2014-01-02T21:36:54.470Z","type":"message"}
{"nick":"groundwater","message":"AHA great minds!","date":"2014-01-02T21:37:01.314Z","type":"message"}
{"nick":"trevnorris","message":"give me a few.","date":"2014-01-02T21:37:07.313Z","type":"message"}
{"nick":"groundwater","message":"yup!","date":"2014-01-02T21:37:17.971Z","type":"message"}
{"nick":"groundwater","message":"thanks","date":"2014-01-02T21:37:20.674Z","type":"message"}
{"nick":"hueniverse","message":"trevnorris: you using hapi master?","date":"2014-01-02T21:38:54.472Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: to double check, you just want to be able to wrap the callback on addListener(), correct?","date":"2014-01-02T21:39:16.597Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse: i just did an npm install. should I grab from the repo?","date":"2014-01-02T21:39:26.822Z","type":"message"}
{"nick":"hueniverse","message":"hapi 1.x will fail on 0.11. try master","date":"2014-01-02T21:40:09.454Z","type":"message"}
{"nick":"trevnorris","message":"oh fudge. i just had an rm -rf * screwup....","date":"2014-01-02T21:40:36.568Z","type":"message"}
{"nick":"rainabba","message":"othiym23:nm my question about /*. My mistake with the name I passed (undefined).","date":"2014-01-02T21:41:27.828Z","type":"message"}
{"nick":"othiym23","message":"trevnorris, groundwater, tjfontaine: why Passenger and New Relic don't get along: https://code.google.com/p/phusion-passenger/issues/detail?id=1042","date":"2014-01-02T21:42:59.199Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: yes, and then I need to do some jiggery-pokery before the listener fires","date":"2014-01-02T21:43:25.016Z","type":"message"}
{"nick":"hueniverse","message":"trevnorris: on hapi@master and node@master, run: node test/integration/ext.js","date":"2014-01-02T21:44:24.401Z","type":"message"}
{"nick":"hueniverse","message":"trevnorris: solve that one (2 failed tests) and we'll move on to the next","date":"2014-01-02T21:44:39.193Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: be aware that existing code wants to be able to compare registered listeners to functions they have in hand, so I have workarounds to .removeListener() (and should probably add for .listeners()) to ensure that that code sees the unwrapped listeners","date":"2014-01-02T21:44:44.485Z","type":"message"}
{"nick":"trevnorris","message":"give me a minute while I cry a little bit","date":"2014-01-02T21:44:54.126Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 264 seconds","date":"2014-01-02T21:45:14.682Z","type":"quit"}
{"nick":"tjfontaine","message":"*cry*","date":"2014-01-02T21:45:40.055Z","type":"message"}
{"nick":"othiym23","message":"rainabba: yeah, the double slash is so the code can support path matchers in Express / Restify that don't start with a leading slash (the route name is a subcomponent of a metric name generated by the module)","date":"2014-01-02T21:46:21.217Z","type":"message"}
{"nick":"othiym23","message":"emitter-listener is probably the \"cleverest\" part of CLS that isn't async-listener","date":"2014-01-02T21:46:52.837Z","type":"message"}
{"nick":"othiym23","message":"the whole thing is just one function!","date":"2014-01-02T21:46:58.591Z","type":"message"}
{"nick":"othiym23","message":"but it does a lot","date":"2014-01-02T21:47:02.313Z","type":"message"}
{"nick":"groundwater","message":"tjfontaine: is experiencing PTSD","date":"2014-01-02T21:47:15.480Z","type":"message"}
{"nick":"othiym23","message":"by \"existing code\" I mean \"Connect and longjohn\"","date":"2014-01-02T21:48:05.692Z","type":"message"}
{"nick":"othiym23","message":"nobody really uses those, though, so it's not a big deal","date":"2014-01-02T21:48:13.013Z","type":"message"}
{"nick":"tjfontaine","message":"*cry*","date":"2014-01-02T21:48:30.766Z","type":"message"}
{"nick":"othiym23","message":"https://github.com/othiym23/emitter-listener/blob/master/listener.js#L93-L132","date":"2014-01-02T21:49:12.419Z","type":"message"}
{"nick":"othiym23","message":"I bet that does wonderful things to the performance of .emit()","date":"2014-01-02T21:50:04.408Z","type":"message"}
{"nick":"othiym23","message":"but it was the simplest solution I was able to come up with","date":"2014-01-02T21:50:15.605Z","type":"message"}
{"nick":"othiym23","message":"the alternative is some kind of gross hack where I have a shadow map of wrapped emitters that are actually used for emit calls, and override removeListener to fixup the shadow map when necessary","date":"2014-01-02T21:51:37.129Z","type":"message"}
{"nick":"jxs","reason":"Read error: Connection reset by peer","date":"2014-01-02T21:51:57.038Z","type":"quit"}
{"nick":"othiym23","message":"I could use trevnorris's API if it were possible to grab some state and stash it somewhere at listener addition time and then get access to that when before fires later","date":"2014-01-02T21:53:07.392Z","type":"message"}
{"nick":"othiym23","message":"because that's what the listener wrapping is doing right now","date":"2014-01-02T21:53:19.538Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: i might not completely understand where you're getting, but this has the same type of storage mechanism that AL has, and you get access to it at every step along the way.","date":"2014-01-02T21:54:11.669Z","type":"message"}
{"nick":"othiym23","message":"https://github.com/othiym23/emitter-listener/blob/master/listener.js#L93-L132","date":"2014-01-02T21:54:49.290Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I need the state at the time the listener for an individual event type is added time to be available before every call to emit on that event type","date":"2014-01-02T21:55:59.050Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: sure. that's built in.","date":"2014-01-02T21:56:16.349Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: othiym23 new question, i think the observer should fire *before* the 'new/removeListener' events fire","date":"2014-01-02T21:56:47.559Z","type":"message"}
{"nick":"trevnorris","message":"EE.addObserver({ add: function(context, storage, type, listener) { }});","date":"2014-01-02T21:56:51.790Z","type":"message"}
{"nick":"groundwater","message":"thoughts?","date":"2014-01-02T21:56:59.249Z","type":"message"}
{"nick":"othiym23","message":"groundwater: why before?","date":"2014-01-02T21:57:39.239Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I think that will probably work for me, will need to think about it some more","date":"2014-01-02T21:58:13.481Z","type":"message"}
{"nick":"trevnorris","message":"coolio","date":"2014-01-02T21:58:19.677Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: emitter-listener's code is complicated now because I had to fix it up to work with actual situations that were causing New Relic to explode","date":"2014-01-02T21:58:50.782Z","type":"message"}
{"nick":"AvianFlu","date":"2014-01-02T21:58:59.150Z","type":"join"}
{"nick":"trevnorris","message":"othiym23: i'm hopeful that the api will help with those situations.","date":"2014-01-02T21:59:24.287Z","type":"message"}
{"nick":"othiym23","message":"some of that is due to in-place monkeypatching, but some of it is due to there being a lot of weird ordering dependencies that result from developers assuming EEs work a certain way that they may or may not work","date":"2014-01-02T21:59:31.031Z","type":"message"}
{"nick":"othiym23","message":"remember that I have to deal with existing code in the wild, too ;)","date":"2014-01-02T21:59:44.582Z","type":"message"}
{"nick":"groundwater","message":"othiym23: i think it's reasonable to expect the observer gets \"first dibs\" on events before user code","date":"2014-01-02T22:00:06.774Z","type":"message"}
{"nick":"groundwater","message":"if i have a removeListener event registered, it will end up running before the observer, which feels un-observed in many ways","date":"2014-01-02T22:00:33.831Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: right now i'm not allowing to return/replace the listeners, and not firing until after it's been added/removed gives the context the state just before the function returns.","date":"2014-01-02T22:01:05.858Z","type":"message"}
{"nick":"othiym23","message":"if we really wanted to be comprehensive, the observers for newListener and removeListener would be passed a newListener thunk to invoke, so they could do what they needed to do either before, after, or both before and after the event's been emitted","date":"2014-01-02T22:01:52.954Z","type":"message"}
{"nick":"othiym23","message":"*a newListener / removeListener thunk","date":"2014-01-02T22:02:41.097Z","type":"message"}
{"nick":"groundwater","message":"what is a thunk?","date":"2014-01-02T22:03:05.077Z","type":"message"}
{"nick":"tjfontaine","message":"http://en.wikipedia.org/wiki/Thunk","date":"2014-01-02T22:04:05.558Z","type":"message"}
{"nick":"tjfontaine","message":"one of the first two","date":"2014-01-02T22:04:07.879Z","type":"message"}
{"nick":"othiym23","message":"an opaque continuation closing over execution context and state","date":"2014-01-02T22:04:11.833Z","type":"message"}
{"nick":"othiym23","message":"i.e. a function to invoke when you're ready for the event to be emitted","date":"2014-01-02T22:04:22.455Z","type":"message"}
{"nick":"othiym23","message":"just sayin', that would be the way I'd implement something like this in Scheme","date":"2014-01-02T22:04:45.535Z","type":"message"}
{"nick":"othiym23","message":"I would argue that performance is less of an issue when observing those events because adding and removing listeners is comparatively rare next to emitting","date":"2014-01-02T22:06:20.387Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: is the storage scoped per listener?","date":"2014-01-02T22:09:42.688Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: depends. if you create the observer and pass in an object, and don't override the object in the create callback, then the object is shared w/ all ee instances.","date":"2014-01-02T22:11:06.658Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: i.e. if I add a listener A and a listener B, both on type T, and they set a property 'a' and a property 'b' on their respective storage,  what will be visible on emit of T in A and B's before observers?","date":"2014-01-02T22:11:26.039Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: but you can return a new object from each create callback and then each will have its own object.","date":"2014-01-02T22:11:26.222Z","type":"message"}
{"nick":"rainabba","message":"othiym23: Thank you. There any way to add timing detail info to the call? Something akin to console.log() with timing detections so that the module doesn't need all the detailed stuff but if I need to track some particular chunk of code in a call, I can? Seems like it wouldn't be hard to do given what the system is already capable of (just manually providing the info on-demand rather than an ","date":"2014-01-02T22:11:37.055Z","type":"message"}
{"nick":"rainabba","message":"entire trace).","date":"2014-01-02T22:11:37.211Z","type":"message"}
{"nick":"othiym23","message":"rainabba: that's custom instrumentation, and it's not supported for Node yet","date":"2014-01-02T22:11:58.266Z","type":"message"}
{"nick":"othiym23","message":"rainabba: it's fairly high on our list of priorities, though","date":"2014-01-02T22:12:09.129Z","type":"message"}
{"nick":"rainabba","message":"Cool","date":"2014-01-02T22:12:16.739Z","type":"message"}
{"nick":"rainabba","message":"There any way to do client-size support for Node apps (load, render, etc..)?","date":"2014-01-02T22:12:54.751Z","type":"message"}
{"nick":"rainabba","message":"s/size/side","date":"2014-01-02T22:12:59.209Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: just pushed the error fix thing.","date":"2014-01-02T22:13:11.583Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: CLS requires that A only be able to see the 'a' property and B only be able to see the 'b' property at emit time","date":"2014-01-02T22:13:17.325Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: because in reality A and B will be setting a 'context' property and they need to not be stomping on each other","date":"2014-01-02T22:13:37.094Z","type":"message"}
{"nick":"hueniverse","message":"trevnorris: were you able to get the two errors I mentioned?","date":"2014-01-02T22:13:49.913Z","type":"message"}
{"nick":"othiym23","message":"rainabba: that's real-user monitoring (RUM), and the first piece of it is coming even sooner than custom instrumentation, probably","date":"2014-01-02T22:14:16.439Z","type":"message"}
{"nick":"rainabba","message":":)","date":"2014-01-02T22:14:29.979Z","type":"message"}
{"nick":"othiym23","message":"rainabba: that said, it's going to require a fair amount of work on your part to get it up and running at first, although we have plans to simplify that over time","date":"2014-01-02T22:14:35.645Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: othiym23: right now \"EventEmitter.removeObserver\" does not remove observers from existing EEs. newly defined EEs will not have observers, but existing ones are unaffected, is that what we want?","date":"2014-01-02T22:16:09.359Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-01-02T22:17:02.556Z","type":"quit"}
{"nick":"nickleefly","reason":"Ping timeout: 245 seconds","date":"2014-01-02T22:17:06.007Z","type":"quit"}
{"nick":"rainabba","message":"othiym23: No Request parameters right now either? Coming soon? Don't see an option to enable them in App Settings","date":"2014-01-02T22:17:19.574Z","type":"message"}
{"nick":"petka_","reason":"Ping timeout: 246 seconds","date":"2014-01-02T22:18:35.940Z","type":"quit"}
{"nick":"rainabba","message":"...or should addCustomParameter() work?","date":"2014-01-02T22:19:34.374Z","type":"message"}
{"nick":"iamstef","reason":"Ping timeout: 260 seconds","date":"2014-01-02T22:21:16.481Z","type":"quit"}
{"nick":"Domenic_","reason":"Ping timeout: 272 seconds","date":"2014-01-02T22:21:53.890Z","type":"quit"}
{"nick":"othiym23","message":"rainabba: enable capture_params in your newrelic.js, and you may need to also enable ignore_server_configuration (it's a bug that you can't configure that stuff via the UI right now)","date":"2014-01-02T22:22:32.892Z","type":"message"}
{"nick":"mikeal","date":"2014-01-02T22:22:42.113Z","type":"join"}
{"nick":"Raynos","reason":"Ping timeout: 246 seconds","date":"2014-01-02T22:22:59.163Z","type":"quit"}
{"nick":"nickleefly","date":"2014-01-02T22:23:33.573Z","type":"join"}
{"nick":"rainabba","message":"ty","date":"2014-01-02T22:25:07.094Z","type":"message"}
{"nick":"rendar","date":"2014-01-02T22:25:40.481Z","type":"quit"}
{"nick":"rainabba","message":"The docs all use UPPERCASE_NAME but JS is case-sensitive. Confusing at best. I should be using lowercase_name though from what I'm seeing in the provided newrelic.js. Correct?","date":"2014-01-02T22:26:20.530Z","type":"message"}
{"nick":"rainabba","message":"othiym23: ^","date":"2014-01-02T22:26:28.674Z","type":"message"}
{"nick":"rainabba","message":"More confusing still is that even on the page (https://docs.newrelic.com/docs/nodejs/customizing-your-nodejs-config-file#requirements), I see a mixture of case.","date":"2014-01-02T22:27:50.555Z","type":"message"}
{"nick":"othiym23","message":"rainabba: reread the document again -- the configuration file uses all lowercase, the configuration environment variables all use upper case","date":"2014-01-02T22:28:30.147Z","type":"message"}
{"nick":"rainabba","message":"Ahh","date":"2014-01-02T22:29:03.387Z","type":"message"}
{"nick":"othiym23","message":"rainabba: most of the configuration variable names differ between using environment variables and the file, because of the need to prefix environment variables","date":"2014-01-02T22:29:07.133Z","type":"message"}
{"nick":"rainabba","message":"Was reading right over that everywhere. Thank you.","date":"2014-01-02T22:29:34.758Z","type":"message"}
{"nick":"othiym23","message":"rainabba: we should probably stop talking about this stuff on #libuv -- I keep an eye on #newrelic too","date":"2014-01-02T22:30:00.421Z","type":"message"}
{"nick":"rainabba","message":"I'm all for that. despite the \"newrelic\" trigger mentioned, #newrelic has been dead for some time","date":"2014-01-02T22:30:36.846Z","type":"message"}
{"nick":"nickleefly","reason":"Ping timeout: 246 seconds","date":"2014-01-02T22:33:15.576Z","type":"quit"}
{"nick":"guilleiguaran","reason":"Ping timeout: 246 seconds","date":"2014-01-02T22:33:29.056Z","type":"quit"}
{"nick":"brunkle","date":"2014-01-02T22:33:39.683Z","type":"join"}
{"nick":"nickleefly","date":"2014-01-02T22:36:06.624Z","type":"join"}
{"nick":"guilleiguaran","date":"2014-01-02T22:37:03.752Z","type":"join"}
{"nick":"groundwater","message":"trevnorris: https://gist.github.com/anonymous/c37fc41804a61b361555","date":"2014-01-02T22:37:31.144Z","type":"message"}
{"nick":"groundwater","message":"i just want to confirm this is the intended behavior","date":"2014-01-02T22:38:08.610Z","type":"message"}
{"nick":"groundwater","message":"notice i remove the observer here https://gist.github.com/anonymous/c37fc41804a61b361555#file-test-js-L29","date":"2014-01-02T22:38:20.482Z","type":"message"}
{"nick":"groundwater","message":"ignore line #32","date":"2014-01-02T22:38:47.402Z","type":"message"}
{"nick":"guilleiguaran","reason":"Ping timeout: 264 seconds","date":"2014-01-02T22:42:14.731Z","type":"quit"}
{"nick":"guilleiguaran","date":"2014-01-02T22:43:57.952Z","type":"join"}
{"nick":"c4milo","date":"2014-01-02T22:45:37.936Z","type":"join"}
{"nick":"groundwater","reason":"Ping timeout: 240 seconds","date":"2014-01-02T22:46:14.917Z","type":"quit"}
{"nick":"guilleiguaran","reason":"Ping timeout: 246 seconds","date":"2014-01-02T22:49:02.927Z","type":"quit"}
{"nick":"groundwater","date":"2014-01-02T22:49:20.904Z","type":"join"}
{"nick":"guilleiguaran","date":"2014-01-02T22:50:01.929Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 246 seconds","date":"2014-01-02T22:50:03.414Z","type":"quit"}
{"nick":"trevnorris","message":"bbiab","date":"2014-01-02T22:52:24.229Z","type":"message"}
{"nick":"nickleefly","reason":"Ping timeout: 246 seconds","date":"2014-01-02T22:52:51.401Z","type":"quit"}
{"nick":"guilleiguaran","reason":"Ping timeout: 246 seconds","date":"2014-01-02T22:55:20.959Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2014-01-02T23:00:49.435Z","type":"quit"}
{"nick":"guilleiguaran","date":"2014-01-02T23:03:06.103Z","type":"join"}
{"nick":"trevnorris","message":"and i'm back.","date":"2014-01-02T23:06:48.978Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse: yes. thanks. I'm going to start working on these, and try to replicate them as best I can and place the tests in core.","date":"2014-01-02T23:07:29.378Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: that's fine. in the \"create\" observer you can return anything and it will be attached to just that instance. which is what you'll see in the \"storage\" argument for every observer","date":"2014-01-02T23:09:09.666Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: the first two arguments for every observer are (context, storage), then the arguments vary based on what is being called (e.g. error will receive (context, storage, error))","date":"2014-01-02T23:09:45.034Z","type":"message"}
{"nick":"hueniverse","message":"trevnorris: bug me with anything. this is a priority for me","date":"2014-01-02T23:09:49.337Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I'm talking about specific data per *listener* on an EE, not data per *EE*","date":"2014-01-02T23:10:00.993Z","type":"message"}
{"nick":"txdv","message":"is there anyway to cancel a connect request?","date":"2014-01-02T23:10:17.002Z","type":"message"}
{"nick":"iamstef","date":"2014-01-02T23:10:48.968Z","type":"join"}
{"nick":"txdv","message":"nevermind","date":"2014-01-02T23:10:59.991Z","type":"message"}
{"nick":"trevnorris","message":"hueniverse: will do. we want to get v0.12 out by feb, so getting my stuff working is the top thing on my list before then.","date":"2014-01-02T23:11:03.421Z","type":"message"}
{"nick":"indexzero","date":"2014-01-02T23:11:56.877Z","type":"join"}
{"nick":"txdv","message":"uv_cancel ain't working on uv_connect","date":"2014-01-02T23:12:39.487Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: do you mean per listener type, or per listener meaning function that is about to be executed?","date":"2014-01-02T23:12:49.718Z","type":"message"}
{"nick":"jxs","date":"2014-01-02T23:13:09.471Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-01-02T23:14:33.778Z","type":"quit"}
{"nick":"othiym23","message":"trevnorris: per listener -- I need to capture context at the time the listener is added, and then make it available again when that listener (and only that listener) is invoked","date":"2014-01-02T23:16:36.183Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: an \"observer\" is attached to the EE instance. so once the observer callbacks are registered on the instance then they'll all fire even after the observer is removed.","date":"2014-01-02T23:17:06.622Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: by \"make it available again\" do you mean you'll need to run the listener w/ .call/apply?","date":"2014-01-02T23:17:55.470Z","type":"message"}
{"nick":"mikeal","date":"2014-01-02T23:18:10.921Z","type":"join"}
{"nick":"groundwater","reason":"Ping timeout: 240 seconds","date":"2014-01-02T23:20:39.803Z","type":"quit"}
{"nick":"othiym23","message":"trevnorris: I mean nothing more than I need that context to be bound to the listener in such a way that it's accessible in some way during the execution of that listener on emit","date":"2014-01-02T23:21:13.239Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: and that I also need different listeners to have different contexts","date":"2014-01-02T23:21:27.338Z","type":"message"}
{"nick":"othiym23","message":"it's kind of hilarious and sad how many of my problems would be solved by access to WeakMaps","date":"2014-01-02T23:21:48.014Z","type":"message"}
{"nick":"othiym23","message":"too bad WeakMap polyfills are so slow","date":"2014-01-02T23:22:02.435Z","type":"message"}
{"nick":"groundwater","date":"2014-01-02T23:24:06.797Z","type":"join"}
{"nick":"timoxley","date":"2014-01-02T23:25:19.536Z","type":"join"}
{"nick":"trevnorris","message":"othiym23: this is a long shot, but I might be able to allow you to return a \"context\" from the \"before\" observer that would be passed to the .call/.apply instead of the \"this\". would that be like what you're looking for?","date":"2014-01-02T23:26:02.541Z","type":"message"}
{"nick":"trevnorris","message":"and just to clarify, for me context === this","date":"2014-01-02T23:26:40.434Z","type":"message"}
{"nick":"trevnorris","message":"I know this is a crap solution, but if you just need access to some \"state\" at execution time, then setting a global in the \"before\" would do the trick, then you can remove it in the \"after\".","date":"2014-01-02T23:27:56.031Z","type":"message"}
{"nick":"trevnorris","message":"i dunno. still not completely sure of the use case. instead of your polyfill, do you have any examples using the polyfill?","date":"2014-01-02T23:28:33.145Z","type":"message"}
{"nick":"trevnorris","message":"that would be easier for me to understand.","date":"2014-01-02T23:28:37.547Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: does that make sense? and is that what you were expecting?","date":"2014-01-02T23:28:48.593Z","type":"message"}
{"nick":"groundwater","reason":"Ping timeout: 240 seconds","date":"2014-01-02T23:29:02.672Z","type":"quit"}
{"nick":"othiym23","message":"trevnorris: CLS :D https://github.com/othiym23/node-continuation-local-storage/blob/master/context.js#L114-L145","date":"2014-01-02T23:29:44.473Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: right now I just shove stuff right on the side of the listener function, which I can continue to do, but it does limit the usefulness of the API for me","date":"2014-01-02T23:30:57.095Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: curious, why not instanceof check? do people really rape the methods off EE like that?","date":"2014-01-02T23:31:12.745Z","type":"message"}
{"nick":"pachet","reason":"Quit: leaving","date":"2014-01-02T23:31:17.639Z","type":"quit"}
{"nick":"inolen","date":"2014-01-02T23:31:32.692Z","type":"join"}
{"nick":"groundwater","date":"2014-01-02T23:31:37.506Z","type":"join"}
{"nick":"othiym23","message":"if by \"people\" you mean _stream_readable.js, then yes","date":"2014-01-02T23:32:15.307Z","type":"message"}
{"nick":"trevnorris","message":"... srsly?","date":"2014-01-02T23:32:33.038Z","type":"message"}
{"nick":"othiym23","message":"doing duck typing instead of instanceof there is safer","date":"2014-01-02T23:32:39.909Z","type":"message"}
{"nick":"tjfontaine","message":"yes, I linked you that code this week :)","date":"2014-01-02T23:32:40.540Z","type":"message"}
{"nick":"othiym23","message":"although it should probably include removeListener as well, just for funsies","date":"2014-01-02T23:33:14.794Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: this week has been full of a kid with pink eye and a very pregnant wife. i'm tending to be forgetful right now. :)","date":"2014-01-02T23:33:23.433Z","type":"message"}
{"nick":"tjfontaine","message":"hehe","date":"2014-01-02T23:33:39.717Z","type":"message"}
{"nick":"othiym23","message":"the EE codebase is very unhygienic","date":"2014-01-02T23:33:55.289Z","type":"message"}
{"nick":"trevnorris","message":"really? what makes you say that. :P","date":"2014-01-02T23:34:04.851Z","type":"message"}
{"nick":"tjfontaine","message":"hysterical raisons","date":"2014-01-02T23:34:18.802Z","type":"message"}
{"nick":"othiym23","message":"I prefer my raisins calm and orderly","date":"2014-01-02T23:34:45.573Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-01-02T23:34:57.468Z","type":"quit"}
{"nick":"othiym23","message":"perhaps singing soul hits from the 60s","date":"2014-01-02T23:35:01.639Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: i'm grepping my logs. don't see the link. have it on hand?","date":"2014-01-02T23:35:26.575Z","type":"message"}
{"nick":"trevnorris","message":"nm. found it.","date":"2014-01-02T23:36:05.310Z","type":"message"}
{"nick":"trevnorris","message":"bad grep","date":"2014-01-02T23:36:08.378Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/joyent/node/blob/master/lib/_stream_readable.js#L662-L693","date":"2014-01-02T23:36:20.281Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: (new stream.Readable() instanceof events) === true","date":"2014-01-02T23:37:04.134Z","type":"message"}
{"nick":"trevnorris","message":"that had to do with the land blasting the old method for the new one.","date":"2014-01-02T23:37:32.048Z","type":"message"}
{"nick":"othiym23","message":"it's doubly an EventEmitter, because it re-calls the EE constructor on itself!","date":"2014-01-02T23:37:42.775Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: you're right in that an instanceof check would work with all real EE-inheritors, but like I said, duck typing is safer in New Relic code","date":"2014-01-02T23:38:16.644Z","type":"message"}
{"nick":"tjfontaine","message":"also, there's a reason EE itself potentially lazy inits -- because bad people don't always properly inherit :P","date":"2014-01-02T23:38:50.263Z","type":"message"}
{"nick":"trevnorris","action":"cries a little and says a prayer for othiym23 to mend his ways","date":"2014-01-02T23:38:53.811Z","type":"action"}
{"nick":"tjfontaine","message":"or at least we were ok with it","date":"2014-01-02T23:38:56.647Z","type":"message"}
{"nick":"othiym23","message":"people do incredibly bizarre crap and assume that nothing is typechecking them","date":"2014-01-02T23:39:35.578Z","type":"message"}
{"nick":"tjfontaine","message":"brb","date":"2014-01-02T23:39:48.177Z","type":"message"}
{"nick":"othiym23","message":"and my default position is not to do things that I know might break 3rd party code","date":"2014-01-02T23:39:54.331Z","type":"message"}
{"nick":"othiym23","message":"it is because I am lazy and do not feel like answering people's tickets","date":"2014-01-02T23:40:05.231Z","type":"message"}
{"nick":"trevnorris","message":"the moment I have this EEO/AL stuff solid enough to pass hapi tests i'm starting work on my new stream proposal. which is basically, don't have streams.","date":"2014-01-02T23:40:06.483Z","type":"message"}
{"nick":"othiym23","message":"I think creationix already did that twice","date":"2014-01-02T23:40:26.315Z","type":"message"}
{"nick":"daviddia_","date":"2014-01-02T23:40:34.835Z","type":"join"}
{"nick":"trevnorris","message":"does he have a repo?","date":"2014-01-02T23:40:37.354Z","type":"message"}
{"nick":"trevnorris","message":"i want to see if he's always done what I plan for world domination","date":"2014-01-02T23:40:54.639Z","type":"message"}
{"nick":"daviddias","reason":"Ping timeout: 240 seconds","date":"2014-01-02T23:43:28.274Z","type":"quit"}
{"nick":"othiym23","message":"trevnorris: https://github.com/creationix/min-stream https://github.com/creationix/simple-stream-helpers","date":"2014-01-02T23:43:56.806Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: also https://gist.github.com/creationix/5498108","date":"2014-01-02T23:44:31.824Z","type":"message"}
{"nick":"daviddia_","reason":"Ping timeout: 264 seconds","date":"2014-01-02T23:45:14.734Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23: thanks. also, no error handling is happening for these callbacks. have no intention of adding it either. if it throws, then the only chance you have is for an async listener to catch it.","date":"2014-01-02T23:48:18.159Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: ping","date":"2014-01-02T23:48:19.803Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: that's probably fine, although it means that observer writers have to be careful for footguns","date":"2014-01-02T23:49:29.784Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: as intended. :) at least since EE execution is technically synchronous they'll have the ability to trace back to the exact point of error.","date":"2014-01-02T23:50:11.028Z","type":"message"}
{"nick":"trevnorris","message":"unlike async listeners which would leave them hanging wildly around.","date":"2014-01-02T23:50:24.215Z","type":"message"}
{"nick":"othiym23","message":"yeah, having them be synchronous is helpful","date":"2014-01-02T23:51:00.841Z","type":"message"}
{"nick":"trevnorris","message":"oy, get to update 20 tests to use the new AL API. fun fun.","date":"2014-01-02T23:54:55.511Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: I should have the new callback API done by EOD. the guts needs an overhaul, but at least the API will be stable from this point.","date":"2014-01-02T23:55:40.070Z","type":"message"}
{"nick":"groundwater","reason":"Ping timeout: 240 seconds","date":"2014-01-02T23:55:50.958Z","type":"quit"}
{"nick":"groundwater","date":"2014-01-02T23:57:13.274Z","type":"join"}
{"nick":"trevnorris","message":"othiym23: I was thinking something very devious and dangerous. in the c++ api it's possible to know when a js fn threw w/o stopping execution. so it would be possible to generate the error object, pass that up then see if it is handled correctly. if it is then execution can continue normally from the c++ side.","date":"2014-01-02T23:58:50.860Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: re: streaming, there's also the thing that domenic is working on for the w3c: https://github.com/whatwg/streams/","date":"2014-01-02T23:58:55.351Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: I think that's probably more fun than most Node developers should be allowed to try to handle","date":"2014-01-02T23:59:32.743Z","type":"message"}
{"nick":"othiym23","message":"I'd want to see some pretty compelling use cases before adding something like that to core","date":"2014-01-02T23:59:52.388Z","type":"message"}
