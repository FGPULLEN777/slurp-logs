{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-12-26T00:00:00.932Z","type":"quit"}
{"nick":"ircretary","date":"2013-12-26T00:00:08.941Z","type":"join"}
{"nick":"daviddias","reason":"Remote host closed the connection","date":"2013-12-26T00:07:00.702Z","type":"quit"}
{"nick":"calvinfo","date":"2013-12-26T00:07:41.826Z","type":"join"}
{"nick":"calvinfo1","date":"2013-12-26T00:09:07.035Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2013-12-26T00:09:07.185Z","type":"quit"}
{"nick":"mikeal","date":"2013-12-26T00:15:56.870Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-12-26T00:16:01.518Z","type":"quit"}
{"nick":"calvinfo1","reason":"Quit: Leaving.","date":"2013-12-26T00:19:01.427Z","type":"quit"}
{"nick":"mikeal","date":"2013-12-26T00:23:02.784Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-26T00:33:22.926Z","type":"quit"}
{"nick":"zz_karupanerura","new_nick":"karupanerura","date":"2013-12-26T00:47:51.974Z","type":"nick"}
{"nick":"felicity","message":"hm - i need to fork/exec a process with a uv_tcp_t connected to stdin/out/err - is there any way to do that?  i don't see a dup function or any way to get the fd out of the uv_tcp_t","date":"2013-12-26T00:49:37.516Z","type":"message"}
{"nick":"calvinfo","date":"2013-12-26T00:50:26.058Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-26T00:54:53.480Z","type":"quit"}
{"nick":"felicity","message":"ah i see, uv_spawn can do that with a uv_stdio_container_t","date":"2013-12-26T00:59:41.704Z","type":"message"}
{"nick":"txdv","message":"alternatively you can pass the through a pipe to the created process","date":"2013-12-26T01:05:24.100Z","type":"message"}
{"nick":"txdv","message":"and read directly from the fd","date":"2013-12-26T01:05:27.898Z","type":"message"}
{"nick":"timoxley","date":"2013-12-26T01:07:34.972Z","type":"join"}
{"nick":"timoxley","reason":"Client Quit","date":"2013-12-26T01:11:00.578Z","type":"quit"}
{"nick":"st_luke","date":"2013-12-26T01:16:12.786Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-12-26T01:28:11.952Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-26T01:28:57.002Z","type":"quit"}
{"nick":"calvinfo","date":"2013-12-26T01:30:56.895Z","type":"join"}
{"nick":"st_luke","date":"2013-12-26T01:34:44.753Z","type":"join"}
{"nick":"hz","date":"2013-12-26T01:51:23.706Z","type":"quit"}
{"nick":"thlorenz","date":"2013-12-26T01:59:28.074Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-26T02:00:10.837Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-26T02:03:27.877Z","type":"quit"}
{"nick":"LeftWing__","date":"2013-12-26T02:22:22.508Z","type":"join"}
{"nick":"calvinfo","date":"2013-12-26T02:24:02.896Z","type":"join"}
{"nick":"kuplatup1u","date":"2013-12-26T02:28:22.340Z","type":"join"}
{"nick":"kenperkins_","date":"2013-12-26T02:32:25.552Z","type":"join"}
{"nick":"LeftWing","reason":"*.net *.split","date":"2013-12-26T02:33:58.590Z","type":"quit"}
{"nick":"kenperkins","reason":"*.net *.split","date":"2013-12-26T02:33:59.040Z","type":"quit"}
{"nick":"kuplatupsu","reason":"*.net *.split","date":"2013-12-26T02:33:59.639Z","type":"quit"}
{"nick":"M28","message":"any way to make uv_close let a tcp connection finish sending its data before closing it? or do I have to track that?","date":"2013-12-26T02:47:19.772Z","type":"message"}
{"nick":"thlorenz","date":"2013-12-26T02:54:28.464Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-26T02:54:57.006Z","type":"quit"}
{"nick":"inolen","date":"2013-12-26T03:00:43.838Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-26T03:04:45.258Z","type":"quit"}
{"nick":"calvinfo","date":"2013-12-26T03:05:44.006Z","type":"join"}
{"nick":"thlorenz","date":"2013-12-26T03:10:12.933Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u00027f82fae\u0002 : npm: Upgrade to v1.3.22 - http://git.io/kfFawA","date":"2013-12-26T03:15:38.067Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-12-26T03:21:45.582Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-12-26T03:28:05.379Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #400 \u00037UNSTABLE\u000f windows-ia32 (11/606) windows-x64 (11/606) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/400/","date":"2013-12-26T03:31:15.497Z","type":"message"}
{"nick":"brson","date":"2013-12-26T03:43:15.263Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-26T03:48:17.065Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-26T03:52:51.801Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-12-26T04:02:15.463Z","type":"quit"}
{"nick":"abraxas","date":"2013-12-26T04:23:40.289Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 246 seconds","date":"2013-12-26T04:28:07.809Z","type":"quit"}
{"nick":"inolen","date":"2013-12-26T04:57:34.713Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-12-26T05:07:53.240Z","type":"quit"}
{"nick":"calvinfo","date":"2013-12-26T05:10:00.045Z","type":"join"}
{"nick":"LeftWing__","new_nick":"LeftWing","date":"2013-12-26T05:11:33.460Z","type":"nick"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-26T05:24:18.449Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-26T05:46:09.215Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-12-26T06:06:34.829Z","type":"quit"}
{"nick":"inolen","date":"2013-12-26T06:14:55.402Z","type":"join"}
{"nick":"inolen","reason":"Client Quit","date":"2013-12-26T06:16:10.632Z","type":"quit"}
{"nick":"inolen","date":"2013-12-26T06:30:13.300Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #401 \u00037UNSTABLE\u000f windows-ia32 (11/606) windows-x64 (11/606) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/401/","date":"2013-12-26T06:41:09.967Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-12-26T06:47:35.273Z","type":"quit"}
{"nick":"felixge","date":"2013-12-26T07:25:44.514Z","type":"join"}
{"nick":"felixge","reason":"Ping timeout: 272 seconds","date":"2013-12-26T07:30:39.320Z","type":"quit"}
{"nick":"st_luke","date":"2013-12-26T07:30:43.510Z","type":"join"}
{"nick":"bajtos","date":"2013-12-26T07:50:00.211Z","type":"join"}
{"nick":"indutny","message":"heya","date":"2013-12-26T09:05:21.283Z","type":"message"}
{"nick":"indutny","message":"how are you?","date":"2013-12-26T09:05:23.060Z","type":"message"}
{"nick":"mikeal","date":"2013-12-26T09:13:28.931Z","type":"join"}
{"nick":"calvinfo","date":"2013-12-26T09:18:13.478Z","type":"join"}
{"nick":"felixge","date":"2013-12-26T09:26:43.892Z","type":"join"}
{"nick":"indexzero","date":"2013-12-26T09:27:24.951Z","type":"join"}
{"nick":"felicity","message":"is UV_CREATE_PIPE in uv_spawn the only way to create an anonymous pipe?  i want to just fork, not exec, so i can't use uv_spawn","date":"2013-12-26T09:33:26.543Z","type":"message"}
{"nick":"m76","date":"2013-12-26T09:35:17.722Z","type":"join"}
{"nick":"hz","date":"2013-12-26T09:37:24.861Z","type":"join"}
{"nick":"rendar","date":"2013-12-26T09:45:34.881Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-26T09:59:02.713Z","type":"quit"}
{"nick":"felicity","message":"oh i see, the uv_file in uv_pipe_init is just an fd","date":"2013-12-26T09:59:37.784Z","type":"message"}
{"nick":"txdv","message":"M28: invoke uv_shutdown first and in its callback uv_close","date":"2013-12-26T10:28:16.920Z","type":"message"}
{"nick":"indutny","message":"felicity: I don't think that fork() really works weel in libuv","date":"2013-12-26T10:35:35.534Z","type":"message"}
{"nick":"indutny","message":"well*","date":"2013-12-26T10:35:40.220Z","type":"message"}
{"nick":"felicity","message":"indutny: i fork() as soon as the program starts and hand off fds via pipes to the child process, which then does uv_spawn","date":"2013-12-26T10:36:48.205Z","type":"message"}
{"nick":"felicity","message":"to avoid having to fork the main program while it's running","date":"2013-12-26T10:37:02.482Z","type":"message"}
{"nick":"indutny","message":"it is ok if you're forking before uv_default_loop()/uv_loop_new() call","date":"2013-12-26T10:37:10.596Z","type":"message"}
{"nick":"indutny","message":"anyway","date":"2013-12-26T10:37:22.211Z","type":"message"}
{"nick":"indutny","message":"I think you can do","date":"2013-12-26T10:37:31.377Z","type":"message"}
{"nick":"indutny","message":"uv_pipe_open(..., fd)","date":"2013-12-26T10:37:34.677Z","type":"message"}
{"nick":"indutny","message":"and pass it to uv_spawn","date":"2013-12-26T10:37:40.672Z","type":"message"}
{"nick":"indutny","message":"or","date":"2013-12-26T10:38:32.630Z","type":"message"}
{"nick":"indutny","message":"use UV_INHERIT_FD","date":"2013-12-26T10:38:36.455Z","type":"message"}
{"nick":"indutny","message":"and pass fd to the option","date":"2013-12-26T10:38:42.064Z","type":"message"}
{"nick":"felixge","reason":"Quit: felixge","date":"2013-12-26T10:42:08.374Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-12-26T10:50:46.448Z","type":"quit"}
{"nick":"felixge","date":"2013-12-26T10:54:24.574Z","type":"join"}
{"nick":"felixge","reason":"Client Quit","date":"2013-12-26T10:56:21.166Z","type":"quit"}
{"nick":"skypjack","date":"2013-12-26T11:04:18.928Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-12-26T11:31:40.498Z","type":"quit"}
{"nick":"mmalecki","message":"sup indutny ","date":"2013-12-26T11:32:33.718Z","type":"message"}
{"nick":"indutny","message":"all good","date":"2013-12-26T11:32:38.711Z","type":"message"}
{"nick":"indutny","message":"trying to make use of uv_try_write in node","date":"2013-12-26T11:32:45.636Z","type":"message"}
{"nick":"mmalecki","message":"oh, nice. was the recently added?","date":"2013-12-26T11:33:03.994Z","type":"message"}
{"nick":"indutny","message":"yep","date":"2013-12-26T11:33:32.470Z","type":"message"}
{"nick":"txdv","message":"so","date":"2013-12-26T11:36:42.538Z","type":"message"}
{"nick":"txdv","message":"uv_try_write and if that doesnt work queue the work?","date":"2013-12-26T11:36:48.132Z","type":"message"}
{"nick":"txdv","message":"or how are you going to use it?","date":"2013-12-26T11:36:54.183Z","type":"message"}
{"nick":"mmalecki","message":"whoops. airport security found something in my baggage","date":"2013-12-26T11:37:06.116Z","type":"message"}
{"nick":"mmalecki","message":"brb","date":"2013-12-26T11:37:06.605Z","type":"message"}
{"nick":"indutny","message":"yep","date":"2013-12-26T11:37:31.588Z","type":"message"}
{"nick":"indutny","message":"txdv: indeed","date":"2013-12-26T11:37:34.039Z","type":"message"}
{"nick":"txdv","message":"and you think that will be faster?","date":"2013-12-26T11:38:06.547Z","type":"message"}
{"nick":"indutny","message":"surely it'll be","date":"2013-12-26T11:38:11.376Z","type":"message"}
{"nick":"indutny","message":"we already use this","date":"2013-12-26T11:38:13.803Z","type":"message"}
{"nick":"indutny","message":"in node","date":"2013-12-26T11:38:18.267Z","type":"message"}
{"nick":"indutny","message":"but we're allocating even if it was immediate","date":"2013-12-26T11:38:24.787Z","type":"message"}
{"nick":"indutny","message":"with uv_try_write() we can avoid allocations","date":"2013-12-26T11:38:33.404Z","type":"message"}
{"nick":"txdv","message":"how much speed improvement do you project on low volume streams? something like irc","date":"2013-12-26T11:38:37.634Z","type":"message"}
{"nick":"indutny","message":"it's not for low volume","date":"2013-12-26T11:38:53.183Z","type":"message"}
{"nick":"txdv","message":"WHAAAAAT","date":"2013-12-26T11:40:18.576Z","type":"message"}
{"nick":"txdv","message":"isnt try write in the unstable branch?","date":"2013-12-26T11:40:34.978Z","type":"message"}
{"nick":"indutny","message":"it is","date":"2013-12-26T11:40:44.981Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-12-26T11:40:47.811Z","type":"message"}
{"nick":"indutny","message":"yep","date":"2013-12-26T11:40:49.662Z","type":"message"}
{"nick":"txdv","message":"so when will that hit node.js","date":"2013-12-26T11:41:52.884Z","type":"message"}
{"nick":"mmalecki","message":"fuckme.jpg, or how I should clean my smoking equipment before flying with it","date":"2013-12-26T11:42:08.278Z","type":"message"}
{"nick":"mmalecki","message":"indutny: let me know when you have a patch, we'll give it a try at vigour/spacedock","date":"2013-12-26T11:42:26.593Z","type":"message"}
{"nick":"txdv","message":"what smoking equipment","date":"2013-12-26T11:42:50.355Z","type":"message"}
{"nick":"mmalecki","message":"txdv: grinder, in particular","date":"2013-12-26T11:43:09.827Z","type":"message"}
{"nick":"mmalecki","message":"their dog sniffed something in my luggage","date":"2013-12-26T11:43:42.169Z","type":"message"}
{"nick":"mmalecki","message":"it was my grinder, which turned out to contain silly amount of weed","date":"2013-12-26T11:44:06.219Z","type":"message"}
{"nick":"mmalecki","message":"brb boarding","date":"2013-12-26T11:44:10.155Z","type":"message"}
{"nick":"txdv","message":"yeah","date":"2013-12-26T11:44:17.762Z","type":"message"}
{"nick":"txdv","message":"that is what ginrders contain usually","date":"2013-12-26T11:44:24.967Z","type":"message"}
{"nick":"indutny","message":"oh gos :)","date":"2013-12-26T11:45:46.702Z","type":"message"}
{"nick":"indutny","message":"gosh","date":"2013-12-26T11:45:46.854Z","type":"message"}
{"nick":"indutny","message":"mmalecki: you better be careful","date":"2013-12-26T11:45:46.854Z","type":"message"}
{"nick":"janjongboom","date":"2013-12-26T11:45:52.832Z","type":"join"}
{"nick":"txdv","message":"ja","date":"2013-12-26T11:50:05.502Z","type":"message"}
{"nick":"txdv","message":"mmalecki: do you have a toshiba or a bosh?","date":"2013-12-26T11:52:31.642Z","type":"message"}
{"nick":"txdv","message":"bosch","date":"2013-12-26T11:52:35.534Z","type":"message"}
{"nick":"txdv","message":"indutny: when is the next stable comming?","date":"2013-12-26T11:53:56.780Z","type":"message"}
{"nick":"txdv","message":"will that stable contain ipv6 for tcp?","date":"2013-12-26T11:54:03.457Z","type":"message"}
{"nick":"indutny","message":"in a month or two","date":"2013-12-26T11:54:04.835Z","type":"message"}
{"nick":"indutny","message":"txdv: idk yet","date":"2013-12-26T11:54:09.693Z","type":"message"}
{"nick":"txdv","message":"i have been bitching about that for a year","date":"2013-12-26T11:54:25.536Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-12-26T11:55:21.917Z","type":"message"}
{"nick":"indutny","message":"not too much","date":"2013-12-26T11:55:25.416Z","type":"message"}
{"nick":"indutny","message":"https://github.com/joyent/node/pull/5087","date":"2013-12-26T11:55:44.480Z","type":"message"}
{"nick":"indutny","message":"almost a year too","date":"2013-12-26T11:55:48.238Z","type":"message"}
{"nick":"txdv","message":"https://github.com/joyent/libuv/issues/635","date":"2013-12-26T11:56:19.545Z","type":"message"}
{"nick":"indutny","message":"oh nice :)","date":"2013-12-26T11:56:46.437Z","type":"message"}
{"nick":"indutny","message":"right","date":"2013-12-26T11:56:53.506Z","type":"message"}
{"nick":"indutny","message":"I forgot about it","date":"2013-12-26T11:56:55.200Z","type":"message"}
{"nick":"indutny","message":"well, I think it'll land","date":"2013-12-26T11:57:00.959Z","type":"message"}
{"nick":"indutny","message":"not sure if it'll be enabled by default in node for now","date":"2013-12-26T11:57:09.553Z","type":"message"}
{"nick":"indutny","message":"but perhaps yes","date":"2013-12-26T11:57:12.502Z","type":"message"}
{"nick":"indutny","message":"that's something that we need to discuss","date":"2013-12-26T11:57:21.657Z","type":"message"}
{"nick":"txdv","message":"the api has changed","date":"2013-12-26T11:57:35.484Z","type":"message"}
{"nick":"txdv","message":"no more bind/bind6","date":"2013-12-26T11:57:39.305Z","type":"message"}
{"nick":"indutny","message":"yep","date":"2013-12-26T11:57:41.434Z","type":"message"}
{"nick":"indutny","message":"that's a not a big deal","date":"2013-12-26T11:57:45.661Z","type":"message"}
{"nick":"indutny","message":"the big deal is a dns resolution in node","date":"2013-12-26T11:57:58.270Z","type":"message"}
{"nick":"indutny","message":"it puts A before AAAA","date":"2013-12-26T11:58:03.176Z","type":"message"}
{"nick":"indutny","message":"always","date":"2013-12-26T11:58:05.673Z","type":"message"}
{"nick":"txdv","message":"i hate dns","date":"2013-12-26T11:58:17.426Z","type":"message"}
{"nick":"txdv","message":"never thought about it as a service you have to implement on top of ip","date":"2013-12-26T11:58:42.523Z","type":"message"}
{"nick":"txdv","message":"until i wrote that wrapper for libuv","date":"2013-12-26T11:58:52.834Z","type":"message"}
{"nick":"txdv","message":"funny, i predicted the bind/bind6 -> bind change in my discussion","date":"2013-12-26T11:59:36.114Z","type":"message"}
{"nick":"txdv","message":"em monologue","date":"2013-12-26T11:59:39.540Z","type":"message"}
{"nick":"txdv","message":"cause nobody wanted to talk ipv6 with me","date":"2013-12-26T11:59:44.448Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-12-26T12:02:01.160Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-12-26T12:02:07.148Z","type":"message"}
{"nick":"daviddias","date":"2013-12-26T12:44:42.021Z","type":"join"}
{"nick":"skypjack","reason":"Quit: Sto andando via","date":"2013-12-26T13:38:13.663Z","type":"quit"}
{"nick":"skypjack","date":"2013-12-26T13:38:40.017Z","type":"join"}
{"nick":"thlorenz","date":"2013-12-26T13:48:23.535Z","type":"join"}
{"nick":"c4milo","date":"2013-12-26T13:54:42.838Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-12-26T14:05:23.084Z","type":"quit"}
{"nick":"pachet","date":"2013-12-26T14:27:35.653Z","type":"join"}
{"nick":"karupanerura","new_nick":"zz_karupanerura","date":"2013-12-26T14:36:30.546Z","type":"nick"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2013-12-26T14:42:02.122Z","type":"quit"}
{"nick":"daviddias","reason":"Read error: Connection reset by peer","date":"2013-12-26T14:48:00.865Z","type":"quit"}
{"nick":"daviddias","date":"2013-12-26T14:48:39.827Z","type":"join"}
{"nick":"hz","reason":"Ping timeout: 260 seconds","date":"2013-12-26T14:56:03.883Z","type":"quit"}
{"nick":"daviddias","reason":"Ping timeout: 264 seconds","date":"2013-12-26T14:58:26.679Z","type":"quit"}
{"nick":"daviddias","date":"2013-12-26T14:59:37.830Z","type":"join"}
{"nick":"daviddia_","date":"2013-12-26T15:01:51.978Z","type":"join"}
{"nick":"hz","date":"2013-12-26T15:03:59.623Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 264 seconds","date":"2013-12-26T15:05:38.762Z","type":"quit"}
{"nick":"M28","message":"txdv: thanks!","date":"2013-12-26T15:13:23.854Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-12-26T15:24:32.018Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-26T15:28:30.878Z","type":"join"}
{"nick":"bradleymeck","date":"2013-12-26T15:36:55.101Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-12-26T15:37:11.596Z","type":"quit"}
{"nick":"hz","date":"2013-12-26T15:46:35.862Z","type":"quit"}
{"nick":"skypjack","reason":"Quit: Sto andando via","date":"2013-12-26T16:09:23.940Z","type":"quit"}
{"nick":"rendar","reason":"Quit: Leaving","date":"2013-12-26T16:20:46.277Z","type":"quit"}
{"nick":"inolen","date":"2013-12-26T16:25:23.642Z","type":"join"}
{"nick":"dap_","date":"2013-12-26T16:35:36.819Z","type":"join"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-12-26T16:42:47.000Z","type":"quit"}
{"nick":"c4milo","date":"2013-12-26T16:46:23.471Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 245 seconds","date":"2013-12-26T16:50:50.212Z","type":"quit"}
{"nick":"indutny","message":"рунф","date":"2013-12-26T17:04:46.811Z","type":"message"}
{"nick":"indutny","message":"heya","date":"2013-12-26T17:04:47.767Z","type":"message"}
{"nick":"indutny","message":"no call?","date":"2013-12-26T17:04:49.986Z","type":"message"}
{"nick":"AvianFlu","date":"2013-12-26T17:05:22.887Z","type":"join"}
{"nick":"indutny","message":"isaacs: ?","date":"2013-12-26T17:07:28.888Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: ?","date":"2013-12-26T17:07:30.879Z","type":"message"}
{"nick":"indutny","message":"trevnorris: ?","date":"2013-12-26T17:07:37.475Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Benjamin Waters\u000f \u00037master\u000f * \u00028c4b2c3\u0002 : doc: Missing word 'are' in documentation - http://git.io/3rmryw","date":"2013-12-26T17:17:39.370Z","type":"message"}
{"nick":"isaacs","message":"indutny: oh, right.","date":"2013-12-26T17:21:00.968Z","type":"message"}
{"nick":"indutny","message":"is it a holiday in US?","date":"2013-12-26T17:21:09.404Z","type":"message"}
{"nick":"isaacs","message":"indutny: are you guys calling?  or no call today, i guess, because holiday?","date":"2013-12-26T17:21:11.002Z","type":"message"}
{"nick":"indutny","message":"I mean","date":"2013-12-26T17:21:11.453Z","type":"message"}
{"nick":"indutny","message":"still","date":"2013-12-26T17:21:17.763Z","type":"message"}
{"nick":"isaacs","message":"indutny: not really, but when xmas is in the middle of the week, lots of people just take the whole week off","date":"2013-12-26T17:21:23.016Z","type":"message"}
{"nick":"indutny","message":"ah, I see :)","date":"2013-12-26T17:21:23.168Z","type":"message"}
{"nick":"indutny","message":"its ok then","date":"2013-12-26T17:21:23.168Z","type":"message"}
{"nick":"isaacs","message":"it's \"boxing day\" today, but that's not a real holiday in the US, just in other anglophone countries","date":"2013-12-26T17:21:51.562Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-12-26T17:22:26.751Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-12-26T17:22:28.986Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2013-12-26T17:22:31.203Z","type":"message"}
{"nick":"indutny","message":"dinner time","date":"2013-12-26T17:22:33.152Z","type":"message"}
{"nick":"bajtos","date":"2013-12-26T17:33:16.998Z","type":"join"}
{"nick":"daviddia_","reason":"Remote host closed the connection","date":"2013-12-26T17:41:43.088Z","type":"quit"}
{"nick":"daviddias","date":"2013-12-26T17:42:15.063Z","type":"join"}
{"nick":"daviddia_","date":"2013-12-26T17:44:56.031Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 246 seconds","date":"2013-12-26T17:46:38.985Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-26T18:06:03.470Z","type":"quit"}
{"nick":"M28","reason":"Read error: Connection reset by peer","date":"2013-12-26T18:15:49.909Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-26T18:23:07.790Z","type":"quit"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-12-26T18:25:37.166Z","type":"quit"}
{"nick":"rendar","date":"2013-12-26T18:26:56.551Z","type":"join"}
{"nick":"paulfryzel","date":"2013-12-26T18:31:08.978Z","type":"join"}
{"nick":"c4milo","date":"2013-12-26T18:34:28.986Z","type":"join"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2013-12-26T18:35:21.602Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-12-26T18:35:59.845Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2013-12-26T18:39:43.906Z","type":"quit"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2013-12-26T18:44:33.587Z","type":"quit"}
{"nick":"hz","date":"2013-12-26T18:48:29.238Z","type":"join"}
{"nick":"dcrosta","date":"2013-12-26T18:59:18.456Z","type":"join"}
{"nick":"dcrosta","message":"what is the best/appropriate way to know when a client has closed a tcp connection to a libuv server process? i've attached a close_cb to the uv_tcp_t handle, but it seems never to get called.","date":"2013-12-26T19:00:08.244Z","type":"message"}
{"nick":"felicity","message":"using 0.11.16 on OS X, i have a crash when calling uv_tcp_init: http://privatepaste.com/a360374822 - any suggestions?","date":"2013-12-26T19:12:45.615Z","type":"message"}
{"nick":"felicity","message":"(oh - i guess maybe libuv dislikes the pointer to its handles changing...)","date":"2013-12-26T19:16:22.645Z","type":"message"}
{"nick":"thlorenz","date":"2013-12-26T19:19:28.811Z","type":"join"}
{"nick":"hz_","date":"2013-12-26T19:21:32.687Z","type":"join"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-12-26T19:21:52.043Z","type":"quit"}
{"nick":"hz_","new_nick":"hz","date":"2013-12-26T19:21:52.237Z","type":"nick"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-12-26T19:30:04.679Z","type":"quit"}
{"nick":"brson","date":"2013-12-26T19:30:04.834Z","type":"join"}
{"nick":"dap_","date":"2013-12-26T19:30:15.063Z","type":"join"}
{"nick":"dap_","reason":"Client Quit","date":"2013-12-26T19:30:18.984Z","type":"quit"}
{"nick":"dap_","date":"2013-12-26T19:30:53.383Z","type":"join"}
{"nick":"calvinfo","date":"2013-12-26T19:36:45.838Z","type":"join"}
{"nick":"txdv","message":"dcrosta: if the read callback returns < 0","date":"2013-12-26T19:46:20.324Z","type":"message"}
{"nick":"txdv","message":"you should pretty much uv_close it","date":"2013-12-26T19:46:36.502Z","type":"message"}
{"nick":"dcrosta","message":"txdv thanks -- yeah, just finally managed to find https://groups.google.com/forum/#!searchin/libuv/socket$20close/libuv/IG7tTbf6Zmg/tFJsshNlEEcJ which pointed me in that direction","date":"2013-12-26T19:46:39.980Z","type":"message"}
{"nick":"txdv","message":"otherwise if you are done doing your buisness and you call uv_shutdown and then uv_close in the callback","date":"2013-12-26T19:47:00.089Z","type":"message"}
{"nick":"dcrosta","message":"it wasn't obvious from http://nikhilm.github.io/uvbook/networking.html#tcp that that's how you could tell if it was closed","date":"2013-12-26T19:47:08.217Z","type":"message"}
{"nick":"txdv","message":"THat documentation is not complete","date":"2013-12-26T19:47:26.757Z","type":"message"}
{"nick":"txdv","message":"I had to lookup in my wrapper code","date":"2013-12-26T19:47:41.951Z","type":"message"}
{"nick":"txdv","message":"felicity: what version are you using?","date":"2013-12-26T19:48:16.590Z","type":"message"}
{"nick":"stagas","date":"2013-12-26T19:49:01.869Z","type":"join"}
{"nick":"txdv","message":"that variable uv is probably not allocated","date":"2013-12-26T19:49:09.298Z","type":"message"}
{"nick":"daviddia_","reason":"Remote host closed the connection","date":"2013-12-26T19:49:27.638Z","type":"quit"}
{"nick":"dcrosta","message":"txdv yeah, i've already learned a lot more from reading uv.h than from the tutorial (though i wouldn't have been able to get started without the tutorial). documentation is hard","date":"2013-12-26T19:50:01.218Z","type":"message"}
{"nick":"felicity","message":"txdv: i found the problem: on the second iteration, realloc of course moves the array to a different memory area and the old handle address becomes in valid.","date":"2013-12-26T19:50:08.577Z","type":"message"}
{"nick":"felicity","message":"silly bug ;)","date":"2013-12-26T19:50:15.105Z","type":"message"}
{"nick":"txdv","message":"you cant reallocate the the variable 'uv:uv_tcp_t' because internally libuv saves it","date":"2013-12-26T19:50:53.974Z","type":"message"}
{"nick":"txdv","message":"this is an issue people have in GC languages like I did in my wrapper and you had to lock that memory down","date":"2013-12-26T19:51:25.339Z","type":"message"}
{"nick":"txdv","message":"but in C this should not be an issue because malloc memory doesn't get moved","date":"2013-12-26T19:52:06.997Z","type":"message"}
{"nick":"txdv","message":"unless you realloc it of course, but I don't see a reason why anyone should do that","date":"2013-12-26T19:52:22.222Z","type":"message"}
{"nick":"txdv","message":"dcrosta: what are you doing with libuv?","date":"2013-12-26T19:52:44.198Z","type":"message"}
{"nick":"txdv","message":"any special port or just playing around?","date":"2013-12-26T19:52:49.774Z","type":"message"}
{"nick":"felicity","message":"well, without traversing the list i don't know how many to allocate to begin with.  (easy enough to walk it twice though, or just allocate pointers instead of objects)","date":"2013-12-26T19:53:03.662Z","type":"message"}
{"nick":"dcrosta","message":"txdv at this point mostly just playing around; possibly in the future, a port of a python app to pure-C based on libuv (an RTB app for online advertising)","date":"2013-12-26T19:53:57.479Z","type":"message"}
{"nick":"txdv","message":"you know there is a python binding for libuv","date":"2013-12-26T19:55:02.621Z","type":"message"}
{"nick":"txdv","message":"you could use that if you want real time properties of libuv","date":"2013-12-26T19:55:11.657Z","type":"message"}
{"nick":"txdv","message":"unless you need the speed of c","date":"2013-12-26T19:55:51.734Z","type":"message"}
{"nick":"dcrosta","message":"we need the speed of C (or at least, we'd like it). we've got a pretty well-optimized stack on the connection handling and http decoding side of the world; it's the app logic itself that needs rewriting. refcounting kills you in high-volume and low-latency worlds","date":"2013-12-26T19:57:50.179Z","type":"message"}
{"nick":"txdv","message":"you mean pythons refcounting?","date":"2013-12-26T19:58:32.738Z","type":"message"}
{"nick":"dsantiago","reason":"Ping timeout: 264 seconds","date":"2013-12-26T19:59:38.775Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 272 seconds","date":"2013-12-26T20:02:03.818Z","type":"quit"}
{"nick":"txdv","message":"yeah","date":"2013-12-26T20:02:06.195Z","type":"message"}
{"nick":"txdv","message":"if you want to have low latency you better write in C and manage that memory yourself","date":"2013-12-26T20:02:17.865Z","type":"message"}
{"nick":"dsantiago","date":"2013-12-26T20:03:27.889Z","type":"join"}
{"nick":"dcrosta","message":"that's the idea","date":"2013-12-26T20:04:20.633Z","type":"message"}
{"nick":"dcrosta","message":"truthfully, i've also just been longing to write C for a while. been doing pretty much python only for about 4 years now, need some variety","date":"2013-12-26T20:04:54.339Z","type":"message"}
{"nick":"txdv","message":"after 4 years of python a shotgun would be variety enough for me","date":"2013-12-26T20:05:18.601Z","type":"message"}
{"nick":"txdv","message":"have you written c before dcrosta ?","date":"2013-12-26T20:09:47.221Z","type":"message"}
{"nick":"dcrosta","message":"txdv i'm a bit rusty, but it's coming back to me","date":"2013-12-26T20:14:42.431Z","type":"message"}
{"nick":"dsantiago","reason":"Quit: Computer has gone to sleep.","date":"2013-12-26T20:20:47.128Z","type":"quit"}
{"nick":"c4milo","date":"2013-12-26T20:22:49.185Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-26T20:22:59.141Z","type":"quit"}
{"nick":"calvinfo","date":"2013-12-26T20:23:53.844Z","type":"join"}
{"nick":"daviddias","date":"2013-12-26T20:26:06.863Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2013-12-26T20:27:39.721Z","type":"quit"}
{"nick":"calvinfo","reason":"Ping timeout: 252 seconds","date":"2013-12-26T20:28:13.683Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-26T20:30:48.929Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 272 seconds","date":"2013-12-26T20:30:49.720Z","type":"quit"}
{"nick":"calvinfo","date":"2013-12-26T20:34:08.527Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 260 seconds","date":"2013-12-26T20:35:23.777Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-26T21:02:30.905Z","type":"quit"}
{"nick":"kellabyte","reason":"Ping timeout: 245 seconds","date":"2013-12-26T21:04:30.088Z","type":"quit"}
{"nick":"dcrosta","message":"does uv_write attempt to free the memory in the uv_buf_t's it is passed? I assume not, right?","date":"2013-12-26T21:04:48.546Z","type":"message"}
{"nick":"kellabyte","date":"2013-12-26T21:08:34.551Z","type":"join"}
{"nick":"kellabyte","reason":"Changing host","date":"2013-12-26T21:08:52.673Z","type":"quit"}
{"nick":"kellabyte","date":"2013-12-26T21:08:52.822Z","type":"join"}
{"nick":"kellabyte","reason":"Changing host","date":"2013-12-26T21:08:52.822Z","type":"quit"}
{"nick":"kellabyte","date":"2013-12-26T21:08:52.822Z","type":"join"}
{"nick":"txdv","message":"dcrosta: no","date":"2013-12-26T21:11:11.731Z","type":"message"}
{"nick":"dcrosta","message":"txdv thanks, i thought not. time to break out valgrind, then...","date":"2013-12-26T21:11:29.178Z","type":"message"}
{"nick":"txdv","message":"that would be bad becvause various runtimes have their own heaps and allocation/free functions","date":"2013-12-26T21:11:55.086Z","type":"message"}
{"nick":"dcrosta","message":"txdv yeah, i thought so. but better to ask, i figured","date":"2013-12-26T21:13:30.891Z","type":"message"}
{"nick":"dcrosta","message":"i think i found the problem, was double free()ing","date":"2013-12-26T21:13:37.991Z","type":"message"}
{"nick":"txdv","message":"note that uv_buf_init does allocate the returned uv_buf_t on the stack","date":"2013-12-26T21:13:41.109Z","type":"message"}
{"nick":"txdv","message":"that means it goes away once the method is done","date":"2013-12-26T21:13:50.268Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-12-26T21:13:53.064Z","type":"quit"}
{"nick":"txdv","message":"you need to allocate uv_buf_t with malloc specifically and free it on write or something","date":"2013-12-26T21:14:27.180Z","type":"message"}
{"nick":"dcrosta","message":"uv_buf_init copies the \"base\" pointer (not the value at that addr) right?","date":"2013-12-26T21:17:46.814Z","type":"message"}
{"nick":"txdv","message":"yeah","date":"2013-12-26T21:18:13.308Z","type":"message"}
{"nick":"dcrosta","message":"ah, yes: \"The user is responsible for freeing base after the uv_buf_t is done.\"","date":"2013-12-26T21:18:15.462Z","type":"message"}
{"nick":"txdv","message":"uv-common.c:70","date":"2013-12-26T21:18:21.256Z","type":"message"}
{"nick":"txdv","message":"if you do uv_buf_t buf = uv_buf_init(\"ASD\", 3) it will be allocated on the stack","date":"2013-12-26T21:19:11.417Z","type":"message"}
{"nick":"dcrosta","message":"right","date":"2013-12-26T21:19:24.098Z","type":"message"}
{"nick":"dcrosta","message":"==7967== LEAK SUMMARY:","date":"2013-12-26T21:19:26.116Z","type":"message"}
{"nick":"dcrosta","message":"==7967==    definitely lost: 0 bytes in 0 blocks","date":"2013-12-26T21:19:26.366Z","type":"message"}
{"nick":"dcrosta","message":"==7967==    indirectly lost: 0 bytes in 0 blocks","date":"2013-12-26T21:19:26.514Z","type":"message"}
{"nick":"dcrosta","message":"==7967==      possibly lost: 0 bytes in 0 blocks","date":"2013-12-26T21:19:26.514Z","type":"message"}
{"nick":"LOUDBOT","message":"WHAT SAY YOU TO THAT, FOUL SOUL?","date":"2013-12-26T21:19:26.664Z","type":"message"}
{"nick":"dcrosta","message":":D","date":"2013-12-26T21:19:26.993Z","type":"message"}
{"nick":"dcrosta","message":"sorry LOUDBOT ","date":"2013-12-26T21:19:34.034Z","type":"message"}
{"nick":"indexzero","date":"2013-12-26T21:19:34.330Z","type":"join"}
{"nick":"txdv","message":"CAPSLOCK BOT REPORTING","date":"2013-12-26T21:19:52.479Z","type":"message"}
{"nick":"LOUDBOT","message":"LOL WUT ARE YOU DOING WAY OUT THERE","date":"2013-12-26T21:19:52.931Z","type":"message"}
{"nick":"kazupon","date":"2013-12-26T21:30:52.906Z","type":"join"}
{"nick":"brson","date":"2013-12-26T21:47:57.778Z","type":"join"}
{"nick":"paulfryz_","date":"2013-12-26T21:55:36.988Z","type":"join"}
{"nick":"paulfryz_","reason":"Client Quit","date":"2013-12-26T21:58:06.326Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 252 seconds","date":"2013-12-26T21:59:09.659Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2013-12-26T22:04:33.773Z","type":"quit"}
{"nick":"indexzero","reason":"Ping timeout: 240 seconds","date":"2013-12-26T22:08:16.314Z","type":"quit"}
{"nick":"c4milo","date":"2013-12-26T22:11:01.506Z","type":"join"}
{"nick":"c4milo_","date":"2013-12-26T22:13:44.994Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-12-26T22:13:47.226Z","type":"quit"}
{"nick":"c4milo","date":"2013-12-26T22:15:00.023Z","type":"join"}
{"nick":"c4milo_","reason":"Read error: Connection reset by peer","date":"2013-12-26T22:15:12.130Z","type":"quit"}
{"nick":"M28","date":"2013-12-26T22:20:40.374Z","type":"join"}
{"nick":"rendar","date":"2013-12-26T22:31:47.672Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 240 seconds","date":"2013-12-26T22:58:39.324Z","type":"quit"}
{"nick":"kazupon","date":"2013-12-26T23:00:56.819Z","type":"join"}
{"nick":"hz","date":"2013-12-26T23:02:49.729Z","type":"quit"}
{"nick":"thlorenz","message":"is there a reason the req_cleanup (https://github.com/thlorenz/libuv-dox/blob/master/methods.md#uv_fs_req_cleanup) exists for uv_fs_t but not the other req types?","date":"2013-12-26T23:04:13.875Z","type":"message"}
{"nick":"thlorenz","message":"some other reqs also have extra fields that need cleaning up","date":"2013-12-26T23:05:10.447Z","type":"message"}
{"nick":"daviddias","date":"2013-12-26T23:09:01.202Z","type":"join"}
{"nick":"felicity","message":"when my write callback runs, my buffer is in req->bufsml, which is a private field, not in req->bufs.  so... how do i free it?","date":"2013-12-26T23:09:06.136Z","type":"message"}
{"nick":"felicity","message":"(example: http://privatepaste.com/febc45e111)","date":"2013-12-26T23:10:30.191Z","type":"message"}
{"nick":"daviddias","reason":"Ping timeout: 246 seconds","date":"2013-12-26T23:13:32.974Z","type":"quit"}
{"nick":"inolen","date":"2013-12-26T23:13:44.910Z","type":"join"}
{"nick":"txdv","message":"I don't know about uv_req_cleanup","date":"2013-12-26T23:15:27.620Z","type":"message"}
{"nick":"thlorenz","message":"yeah, I was just wondering since for fs_t I don't have to worry that I may forget to free something","date":"2013-12-26T23:16:05.355Z","type":"message"}
{"nick":"thlorenz","message":"for the other reqs I'm not always sure if something may stay behind","date":"2013-12-26T23:16:32.699Z","type":"message"}
{"nick":"txdv","message":"according to the tests after every uv_fs_* operation(in the callback) you have to call uv_fs_req_cleanup","date":"2013-12-26T23:16:51.554Z","type":"message"}
{"nick":"txdv","message":"look at test/test-fs.c -> in every callback is a uv_fs_req_cleanup","date":"2013-12-26T23:17:29.153Z","type":"message"}
{"nick":"thlorenz","message":"yeah, the fs_t is easy since that method exists, I was talking about the other request types","date":"2013-12-26T23:19:04.865Z","type":"message"}
{"nick":"txdv","message":"what other types?","date":"2013-12-26T23:19:25.542Z","type":"message"}
{"nick":"thlorenz","message":"since such a method doesn't exist for them, I'm mostly guessing what I have to do to properly clean those up","date":"2013-12-26T23:19:29.668Z","type":"message"}
{"nick":"txdv","message":"what other types?","date":"2013-12-26T23:19:42.911Z","type":"message"}
{"nick":"thlorenz","message":"like get_addrinfo_t for instance ","date":"2013-12-26T23:19:52.430Z","type":"message"}
{"nick":"thlorenz","message":"has a bunch of private fields","date":"2013-12-26T23:20:05.423Z","type":"message"}
{"nick":"thlorenz","message":"one being char *service - so I have to keep in mind to free those","date":"2013-12-26T23:20:26.579Z","type":"message"}
{"nick":"txdv","message":"there is no such struct","date":"2013-12-26T23:20:28.610Z","type":"message"}
{"nick":"thlorenz","message":"sry uv_addrinfo_t","date":"2013-12-26T23:20:44.568Z","type":"message"}
{"nick":"thlorenz","message":"https://github.com/thlorenz/libuv-dox/blob/master/types.md#uv_getaddrinfo_t--uv_req_t","date":"2013-12-26T23:20:49.689Z","type":"message"}
{"nick":"thlorenz","message":"actually uv_getaddrinfo_t","date":"2013-12-26T23:21:03.911Z","type":"message"}
{"nick":"txdv","message":"uv_freeaddrinfo","date":"2013-12-26T23:22:13.066Z","type":"message"}
{"nick":"txdv","message":"yeah you have to cleanup that too","date":"2013-12-26T23:22:36.126Z","type":"message"}
{"nick":"felicity","message":"okay, i see that in src/unix/stream.c:677, uv__write_req_finish explicitly sets req->bufs = NULL.  so is this deliberate? i need to keep my own list of buffers to free?","date":"2013-12-26T23:23:04.150Z","type":"message"}
{"nick":"thlorenz","message":"ok bad example, what about uv_write_t though?","date":"2013-12-26T23:23:07.072Z","type":"message"}
{"nick":"txdv","message":"no cleanup for that","date":"2013-12-26T23:23:46.773Z","type":"message"}
{"nick":"thlorenz","message":"unless for those types I can assume that no specific cleaning up is needed","date":"2013-12-26T23:23:49.883Z","type":"message"}
{"nick":"thlorenz","message":":)","date":"2013-12-26T23:23:50.895Z","type":"message"}
{"nick":"thlorenz","message":"ah, so if no cleanup method exists I'm good?","date":"2013-12-26T23:24:01.451Z","type":"message"}
{"nick":"thlorenz","message":"i.e. no manual freeing necessary?","date":"2013-12-26T23:24:11.375Z","type":"message"}
{"nick":"txdv","message":"da","date":"2013-12-26T23:24:20.162Z","type":"message"}
{"nick":"thlorenz","message":"unless of course I added something to void *data","date":"2013-12-26T23:24:35.534Z","type":"message"}
{"nick":"thlorenz","message":"assuming da was russian for yes?","date":"2013-12-26T23:24:52.726Z","type":"message"}
{"nick":"txdv","message":"ja","date":"2013-12-26T23:24:58.795Z","type":"message"}
{"nick":"thlorenz","message":"danke, spasibo, thanks","date":"2013-12-26T23:25:07.557Z","type":"message"}
{"nick":"thlorenz","message":"that makes sense then","date":"2013-12-26T23:25:18.868Z","type":"message"}
{"nick":"txdv","message":"uv_write takes only a uv_buf_t which is a pointer to the buffer and the lenght of it","date":"2013-12-26T23:25:44.198Z","type":"message"}
{"nick":"txdv","message":"there is nothing to cleanup","date":"2013-12-26T23:25:48.168Z","type":"message"}
{"nick":"thlorenz","message":"cool, so in the future if no cleanup_req method exists for a req type, I'm not gonna worry about leaking","date":"2013-12-26T23:26:43.649Z","type":"message"}
{"nick":"txdv","message":"the async api (tcp, udp) is usually clean free","date":"2013-12-26T23:26:55.859Z","type":"message"}
{"nick":"txdv","message":"the problem is with the sync api which is handled by an internal thread poo.l","date":"2013-12-26T23:27:12.186Z","type":"message"}
{"nick":"txdv","message":"always best to lookup in once of the tests, they are showcases if there are any free functions for specific calls","date":"2013-12-26T23:27:40.963Z","type":"message"}
{"nick":"txdv","message":"one of the tests*","date":"2013-12-26T23:27:46.882Z","type":"message"}
{"nick":"thlorenz","message":"yeah, that's what I have been doing","date":"2013-12-26T23:27:58.742Z","type":"message"}
{"nick":"thlorenz","message":"working on getting some examples pulled out from those to make finding these things easier","date":"2013-12-26T23:28:24.295Z","type":"message"}
{"nick":"txdv","message":"felicity: I don't know why it sets it to NULL there","date":"2013-12-26T23:28:25.018Z","type":"message"}
{"nick":"txdv","message":"it might have something to do with passing handles through the buffer","date":"2013-12-26T23:29:24.725Z","type":"message"}
{"nick":"felicity","message":"txdv: i have an idea: because if you pass more than 4 buffers, it malloc()s space for it, which it then has to free.","date":"2013-12-26T23:29:26.729Z","type":"message"}
{"nick":"txdv","message":"o","date":"2013-12-26T23:29:36.021Z","type":"message"}
{"nick":"felicity","message":"so, in the 1-buffer case it would be possible to not NULL it, but with 5 buffers, it has to free the space before the callback...","date":"2013-12-26T23:29:52.486Z","type":"message"}
{"nick":"felicity","message":"(as there is of course, no uv_write_cleanup ;)","date":"2013-12-26T23:30:00.991Z","type":"message"}
{"nick":"txdv","message":"create an issue for that","date":"2013-12-26T23:30:33.334Z","type":"message"}
{"nick":"txdv","message":"indutny should know, or bnoordhuis","date":"2013-12-26T23:30:47.481Z","type":"message"}
{"nick":"felicity","message":"okay","date":"2013-12-26T23:30:47.917Z","type":"message"}
{"nick":"txdv","message":"this is a question that is located too deep in the lib","date":"2013-12-26T23:31:10.384Z","type":"message"}
{"nick":"txdv","message":"i have to investigate that myself but I fell to weak to do it today","date":"2013-12-26T23:31:27.432Z","type":"message"}
{"nick":"felicity","message":"for now i just made a struct to hold my callback data and the buffer, it would be nice if that wasn't necessary though.  (i'll make an issue)","date":"2013-12-26T23:31:52.274Z","type":"message"}
{"nick":"pachet","reason":"Quit: leaving","date":"2013-12-26T23:32:49.439Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-12-26T23:34:07.685Z","type":"quit"}
{"nick":"txdv","message":"I don't know what bufsml is for","date":"2013-12-26T23:34:10.848Z","type":"message"}
{"nick":"txdv","message":"but that is in the internal code of libuv","date":"2013-12-26T23:34:21.218Z","type":"message"}
{"nick":"txdv","message":"(it should work without us looking at it)","date":"2013-12-26T23:34:42.996Z","type":"message"}
{"nick":"txdv","message":"but I wonder as well why it frees bufs","date":"2013-12-26T23:34:59.482Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-12-26T23:35:23.105Z","type":"quit"}
{"nick":"txdv","message":"even the comment says that this part of code should be revisisted","date":"2013-12-26T23:40:19.855Z","type":"message"}
{"nick":"calvinfo","date":"2013-12-26T23:40:55.830Z","type":"join"}
{"nick":"txdv","reason":"Read error: Connection reset by peer","date":"2013-12-26T23:44:50.896Z","type":"quit"}
{"nick":"txdv","date":"2013-12-26T23:44:59.609Z","type":"join"}
{"nick":"felicity","message":"i created https://github.com/joyent/libuv/issues/1059","date":"2013-12-26T23:45:05.361Z","type":"message"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-12-26T23:47:32.257Z","type":"quit"}
{"nick":"txdv","message":"has been set to null","date":"2013-12-26T23:47:56.562Z","type":"message"}
{"nick":"inolen","date":"2013-12-26T23:58:15.953Z","type":"join"}
