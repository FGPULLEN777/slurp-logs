{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-10-31T00:00:01.346Z","type":"quit"}
{"nick":"ircretary","date":"2014-10-31T00:00:10.075Z","type":"join"}
{"nick":"Damn3d","reason":"Ping timeout: 265 seconds","date":"2014-10-31T00:00:11.254Z","type":"quit"}
{"nick":"ijroth","reason":"Client Quit","date":"2014-10-31T00:01:44.789Z","type":"quit"}
{"nick":"iarna","reason":"Read error: Connection reset by peer","date":"2014-10-31T00:03:48.895Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2014-10-31T00:03:57.462Z","type":"quit"}
{"nick":"Damn3d","date":"2014-10-31T00:04:57.119Z","type":"join"}
{"nick":"Damn3d","reason":"Changing host","date":"2014-10-31T00:04:57.175Z","type":"quit"}
{"nick":"Damn3d","date":"2014-10-31T00:04:57.175Z","type":"join"}
{"nick":"ijroth","date":"2014-10-31T00:06:13.610Z","type":"join"}
{"nick":"iarna","date":"2014-10-31T00:08:03.558Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-10-31T00:14:02.303Z","type":"quit"}
{"nick":"ijroth","date":"2014-10-31T00:17:37.132Z","type":"join"}
{"nick":"iarna","reason":"Read error: Connection reset by peer","date":"2014-10-31T00:39:17.068Z","type":"quit"}
{"nick":"iarna","date":"2014-10-31T00:39:46.094Z","type":"join"}
{"nick":"jgi","message":"indutny: hi!","date":"2014-10-31T00:39:54.658Z","type":"message"}
{"nick":"jgi","message":"indutny: are you around?","date":"2014-10-31T00:39:58.719Z","type":"message"}
{"nick":"iarna","reason":"Read error: Connection reset by peer","date":"2014-10-31T00:43:25.106Z","type":"quit"}
{"nick":"iarna","date":"2014-10-31T00:43:54.093Z","type":"join"}
{"nick":"c4milo","date":"2014-10-31T00:46:45.329Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 256 seconds","date":"2014-10-31T00:46:54.732Z","type":"quit"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-10-31T00:47:17.524Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2014-10-31T00:52:03.961Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-10-31T00:53:17.064Z","type":"quit"}
{"nick":"indutny","message":"jgi: heya","date":"2014-10-31T00:59:10.264Z","type":"message"}
{"nick":"indutny","message":"kind of","date":"2014-10-31T00:59:11.224Z","type":"message"}
{"nick":"jgi","message":"indutny: ok :)","date":"2014-10-31T00:59:20.158Z","type":"message"}
{"nick":"indutny","message":"what's up?","date":"2014-10-31T00:59:32.962Z","type":"message"}
{"nick":"jgi","message":"indutny: I just wanted to have one last look at https://github.com/joyent/node/issues/8615, and I was wondering why we wanted to emit ‘end’ when we get a SSL shutdown from the other end","date":"2014-10-31T01:00:23.235Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2014-10-31T01:00:39.154Z","type":"message"}
{"nick":"indutny","message":"we emit 'end'","date":"2014-10-31T01:00:41.987Z","type":"message"}
{"nick":"indutny","message":"because there won't be any new data from other side","date":"2014-10-31T01:00:48.491Z","type":"message"}
{"nick":"indutny","message":"this is kind of what this is event is for here :)","date":"2014-10-31T01:00:57.995Z","type":"message"}
{"nick":"jgi","message":"indutny: isn’t it possible that we get more data from the other side? Could the SSL session be done and the socket would still be open and data could be sent through it?","date":"2014-10-31T01:01:45.402Z","type":"message"}
{"nick":"indutny","message":"nope","date":"2014-10-31T01:01:55.205Z","type":"message"}
{"nick":"indutny","message":"this is impossible","date":"2014-10-31T01:02:02.337Z","type":"message"}
{"nick":"iarna","reason":"Read error: Connection reset by peer","date":"2014-10-31T01:02:05.532Z","type":"quit"}
{"nick":"indutny","message":"this is always the last packet in the session","date":"2014-10-31T01:02:11.280Z","type":"message"}
{"nick":"jgi","message":"ok","date":"2014-10-31T01:02:15.058Z","type":"message"}
{"nick":"iarna","date":"2014-10-31T01:02:34.646Z","type":"join"}
{"nick":"Fishrock123","date":"2014-10-31T01:05:14.549Z","type":"join"}
{"nick":"Ralith","reason":"Ping timeout: 250 seconds","date":"2014-10-31T01:07:40.368Z","type":"quit"}
{"nick":"Fishrock123","reason":"Ping timeout: 256 seconds","date":"2014-10-31T01:09:34.548Z","type":"quit"}
{"nick":"kazupon","date":"2014-10-31T01:12:33.039Z","type":"join"}
{"nick":"jgi","message":"indutny: so the goal of the change in tls_wrap to emit UV_EOF when we get the SSL shutdown is to get the ‘end’ event if we don’t read from the socket?","date":"2014-10-31T01:13:42.501Z","type":"message"}
{"nick":"indutny","message":"you won't get 'end' event if you are not reading from socket","date":"2014-10-31T01:14:10.838Z","type":"message"}
{"nick":"indutny","message":"this is not how _stream_readable.js works","date":"2014-10-31T01:14:17.574Z","type":"message"}
{"nick":"indutny","message":"but the goal is to mark the end of the readable data","date":"2014-10-31T01:14:29.708Z","type":"message"}
{"nick":"nickleefly","reason":"Quit: Connection closed for inactivity","date":"2014-10-31T01:20:21.007Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T01:22:22.826Z","type":"quit"}
{"nick":"jgi","message":"indutny: ok so tls.connect always triggers a read?","date":"2014-10-31T01:23:29.492Z","type":"message"}
{"nick":"indutny","message":"em","date":"2014-10-31T01:23:37.039Z","type":"message"}
{"nick":"indutny","message":"only on encrypted side :)","date":"2014-10-31T01:23:42.243Z","type":"message"}
{"nick":"indutny","message":"not on the cleartext one","date":"2014-10-31T01:23:50.823Z","type":"message"}
{"nick":"jgi","message":"ok","date":"2014-10-31T01:23:54.631Z","type":"message"}
{"nick":"stagas","reason":"Ping timeout: 265 seconds","date":"2014-10-31T01:25:40.561Z","type":"quit"}
{"nick":"jgi","message":"indutny: how can we get an ‘end’ event in this case: https://github.com/joyent/node/blob/master/test/simple/test-tls-close-notify.js without “manually” triggering a read?","date":"2014-10-31T01:28:51.945Z","type":"message"}
{"nick":"jgi","message":"indutny: or am I missing something?","date":"2014-10-31T01:28:57.980Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2014-10-31T01:29:20.324Z","type":"message"}
{"nick":"indutny","message":"good question, actually","date":"2014-10-31T01:29:23.344Z","type":"message"}
{"nick":"indutny","message":"we should not","date":"2014-10-31T01:29:33.499Z","type":"message"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2014-10-31T01:30:07.057Z","type":"quit"}
{"nick":"Ralith","date":"2014-10-31T01:33:05.950Z","type":"join"}
{"nick":"jgi","message":"indutny: the way TLSSocket inherit from net.Socket, wouldn’t an end ‘event’ be emitted on the TLSSocket (the clear text side) when an ‘end’ event is emitted on the net.Socket (the encrypted side)?","date":"2014-10-31T01:37:18.418Z","type":"message"}
{"nick":"indutny","message":"it will be","date":"2014-10-31T01:37:50.742Z","type":"message"}
{"nick":"indutny","message":"and this is correct, afaik","date":"2014-10-31T01:37:55.395Z","type":"message"}
{"nick":"indutny","message":"this is not graceful close","date":"2014-10-31T01:38:03.318Z","type":"message"}
{"nick":"indutny","message":"but still","date":"2014-10-31T01:38:09.381Z","type":"message"}
{"nick":"indutny","message":"means that there won't be any data","date":"2014-10-31T01:38:14.117Z","type":"message"}
{"nick":"jgi","message":"right, then if an SSL_Shutdown is sent on the socket, the end event will be emitted on the “cleartext” side, right?","date":"2014-10-31T01:38:38.496Z","type":"message"}
{"nick":"jgi","message":"even if we don’t read from the cleartext side","date":"2014-10-31T01:38:47.588Z","type":"message"}
{"nick":"jgi","message":"if that’s true, my impression is that even though we try to make TLSSocket behave like a stream, it doesn’t because we can get an end event without reading from it","date":"2014-10-31T01:40:11.913Z","type":"message"}
{"nick":"kazupon","date":"2014-10-31T01:40:42.771Z","type":"join"}
{"nick":"jgi","message":"indutny: does it make sense?","date":"2014-10-31T01:43:01.921Z","type":"message"}
{"nick":"indutny","message":"hm... sorry, it is hard to tell right now","date":"2014-10-31T01:43:28.592Z","type":"message"}
{"nick":"indutny","message":"I need to investigate it a bit","date":"2014-10-31T01:43:34.116Z","type":"message"}
{"nick":"jgi","message":"indutny: ok no problem :)","date":"2014-10-31T01:43:39.962Z","type":"message"}
{"nick":"indutny","message":"and I am currently on a different thing","date":"2014-10-31T01:43:42.194Z","type":"message"}
{"nick":"indutny","message":":)","date":"2014-10-31T01:43:43.181Z","type":"message"}
{"nick":"indutny","message":"so thing is","date":"2014-10-31T01:43:50.164Z","type":"message"}
{"nick":"indutny","message":"that the encrypted side","date":"2014-10-31T01:43:53.138Z","type":"message"}
{"nick":"indutny","message":"is detached from the stream interface","date":"2014-10-31T01:43:59.531Z","type":"message"}
{"nick":"indutny","message":"and UV_EOF from encrypted is propagated manually to cleartext","date":"2014-10-31T01:44:12.640Z","type":"message"}
{"nick":"indutny","message":"in a same way as with received close_notify","date":"2014-10-31T01:44:30.795Z","type":"message"}
{"nick":"indutny","message":"so","date":"2014-10-31T01:44:32.613Z","type":"message"}
{"nick":"indutny","message":"ideally, if I did no mistakes","date":"2014-10-31T01:44:37.787Z","type":"message"}
{"nick":"indutny","message":"it should have correct stream behavior","date":"2014-10-31T01:44:42.233Z","type":"message"}
{"nick":"indutny","message":"and conceptually it seem to be right","date":"2014-10-31T01:44:48.553Z","type":"message"}
{"nick":"indutny","message":"the fact that the 'end' is emitted, is probably because we are triggering the first read on a client socket","date":"2014-10-31T01:45:06.071Z","type":"message"}
{"nick":"indutny","message":"using .read(0)","date":"2014-10-31T01:45:17.848Z","type":"message"}
{"nick":"indutny","message":"and on server socket too","date":"2014-10-31T01:45:30.450Z","type":"message"}
{"nick":"indutny","message":"line 272","date":"2014-10-31T01:45:33.720Z","type":"message"}
{"nick":"jgi","message":"indutny: which file?","date":"2014-10-31T01:46:07.683Z","type":"message"}
{"nick":"indutny","message":"_tls_wrap.js","date":"2014-10-31T01:46:12.142Z","type":"message"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2014-10-31T01:46:16.915Z","type":"quit"}
{"nick":"ijroth","date":"2014-10-31T01:49:45.056Z","type":"join"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-10-31T02:03:08.037Z","type":"quit"}
{"nick":"jgi","message":"indutny: I have to go, thank you for your time and your clarifications :)","date":"2014-10-31T02:06:34.224Z","type":"message"}
{"nick":"indutny","message":"np","date":"2014-10-31T02:06:39.475Z","type":"message"}
{"nick":"indutny","message":"you are welcome :)","date":"2014-10-31T02:06:42.258Z","type":"message"}
{"nick":"jgi","message":"have a good day or night!","date":"2014-10-31T02:07:00.687Z","type":"message"}
{"nick":"jgi","reason":"Quit: jgi","date":"2014-10-31T02:07:07.370Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2014-10-31T02:16:57.675Z","type":"quit"}
{"nick":"brson","date":"2014-10-31T02:17:23.668Z","type":"join"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-10-31T02:25:02.918Z","type":"quit"}
{"nick":"c4milo","date":"2014-10-31T02:25:47.096Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2014-10-31T02:35:55.784Z","type":"quit"}
{"nick":"cosnis","date":"2014-10-31T02:37:17.023Z","type":"join"}
{"nick":"Fishrock123","date":"2014-10-31T02:37:31.930Z","type":"join"}
{"nick":"cosnis","reason":"Client Quit","date":"2014-10-31T02:40:15.081Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2014-10-31T02:50:39.055Z","type":"quit"}
{"nick":"brson","date":"2014-10-31T02:50:54.212Z","type":"join"}
{"nick":"dshaw_","date":"2014-10-31T02:52:24.285Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-10-31T02:56:20.134Z","type":"quit"}
{"nick":"avalanche123","date":"2014-10-31T03:03:31.320Z","type":"join"}
{"nick":"ijroth","date":"2014-10-31T03:03:41.908Z","type":"join"}
{"nick":"avalanche123","reason":"Ping timeout: 265 seconds","date":"2014-10-31T03:08:08.573Z","type":"quit"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-10-31T03:13:27.488Z","type":"quit"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-10-31T03:16:04.278Z","type":"quit"}
{"nick":"iarna","date":"2014-10-31T03:16:59.832Z","type":"join"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-10-31T03:18:58.704Z","type":"quit"}
{"nick":"rmg","date":"2014-10-31T03:34:47.726Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T03:37:06.866Z","type":"quit"}
{"nick":"rmg","reason":"Ping timeout: 272 seconds","date":"2014-10-31T03:39:53.903Z","type":"quit"}
{"nick":"toothrot","reason":"Ping timeout: 245 seconds","date":"2014-10-31T03:47:22.705Z","type":"quit"}
{"nick":"petka_","reason":"Quit: Connection closed for inactivity","date":"2014-10-31T03:49:58.405Z","type":"quit"}
{"nick":"warehouse13","reason":"Read error: Connection reset by peer","date":"2014-10-31T03:51:33.831Z","type":"quit"}
{"nick":"ijroth","date":"2014-10-31T03:56:15.625Z","type":"join"}
{"nick":"ijroth","reason":"Client Quit","date":"2014-10-31T03:57:09.821Z","type":"quit"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2014-10-31T04:01:52.997Z","type":"quit"}
{"nick":"a_le","date":"2014-10-31T04:02:09.863Z","type":"join"}
{"nick":"avalanche123","date":"2014-10-31T04:08:15.387Z","type":"join"}
{"nick":"iarna","date":"2014-10-31T04:11:51.886Z","type":"join"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-10-31T04:19:21.201Z","type":"quit"}
{"nick":"davi","date":"2014-10-31T04:23:22.567Z","type":"join"}
{"nick":"davi","reason":"Changing host","date":"2014-10-31T04:23:22.660Z","type":"quit"}
{"nick":"davi","date":"2014-10-31T04:23:22.660Z","type":"join"}
{"nick":"c4milo","date":"2014-10-31T04:24:21.789Z","type":"join"}
{"nick":"avalanche123","date":"2014-10-31T04:28:19.771Z","type":"join"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-10-31T04:29:12.141Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 255 seconds","date":"2014-10-31T04:29:13.289Z","type":"quit"}
{"nick":"a_le","date":"2014-10-31T04:29:47.974Z","type":"join"}
{"nick":"kazupon","date":"2014-10-31T04:37:38.673Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2014-10-31T04:42:19.689Z","type":"quit"}
{"nick":"kazupon","date":"2014-10-31T04:43:30.218Z","type":"join"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-10-31T04:49:52.734Z","type":"quit"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-10-31T04:54:17.388Z","type":"quit"}
{"nick":"iarna","date":"2014-10-31T04:55:33.159Z","type":"join"}
{"nick":"dsantiago","reason":"Ping timeout: 245 seconds","date":"2014-10-31T05:10:14.703Z","type":"quit"}
{"nick":"dsantiago","date":"2014-10-31T05:12:13.173Z","type":"join"}
{"nick":"a_le_","date":"2014-10-31T05:28:16.057Z","type":"join"}
{"nick":"a_le","reason":"Ping timeout: 264 seconds","date":"2014-10-31T05:30:29.969Z","type":"quit"}
{"nick":"davi","reason":"Remote host closed the connection","date":"2014-10-31T05:36:50.141Z","type":"quit"}
{"nick":"kakaouette","date":"2014-10-31T05:54:19.055Z","type":"join"}
{"nick":"avalanche123","date":"2014-10-31T05:56:39.069Z","type":"join"}
{"nick":"kakaouette","reason":"Remote host closed the connection","date":"2014-10-31T05:57:38.320Z","type":"quit"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-10-31T06:08:55.419Z","type":"quit"}
{"nick":"c4milo","date":"2014-10-31T06:13:30.363Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 245 seconds","date":"2014-10-31T06:18:12.734Z","type":"quit"}
{"nick":"rendar","date":"2014-10-31T06:19:42.366Z","type":"join"}
{"nick":"cosnis","date":"2014-10-31T06:20:44.180Z","type":"join"}
{"nick":"rmg","date":"2014-10-31T06:25:07.108Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 258 seconds","date":"2014-10-31T06:29:31.743Z","type":"quit"}
{"nick":"bhughes","reason":"Ping timeout: 260 seconds","date":"2014-10-31T06:51:53.170Z","type":"quit"}
{"nick":"bhughes_","date":"2014-10-31T06:51:53.816Z","type":"join"}
{"nick":"bhughes_","new_nick":"bhughes","date":"2014-10-31T06:52:25.697Z","type":"nick"}
{"nick":"ijroth","date":"2014-10-31T06:54:21.286Z","type":"join"}
{"nick":"AlexisMocha","reason":"Ping timeout: 245 seconds","date":"2014-10-31T07:00:42.785Z","type":"quit"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-10-31T07:04:48.971Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T07:05:28.103Z","type":"quit"}
{"nick":"kazupon","date":"2014-10-31T07:06:26.659Z","type":"join"}
{"nick":"avalanche123","date":"2014-10-31T07:09:16.071Z","type":"join"}
{"nick":"avalanche123","reason":"Ping timeout: 244 seconds","date":"2014-10-31T07:13:35.066Z","type":"quit"}
{"nick":"iarna","date":"2014-10-31T07:14:15.975Z","type":"join"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-10-31T07:19:44.564Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2014-10-31T07:20:17.815Z","type":"quit"}
{"nick":"iarna","date":"2014-10-31T07:20:49.619Z","type":"join"}
{"nick":"bajtos","date":"2014-10-31T07:29:31.797Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-10-31T07:33:51.801Z","type":"quit"}
{"nick":"stagas","date":"2014-10-31T07:36:37.925Z","type":"join"}
{"nick":"Ldxngx","date":"2014-10-31T07:43:18.017Z","type":"join"}
{"nick":"Ldxngx","reason":"Client Quit","date":"2014-10-31T07:43:32.745Z","type":"quit"}
{"nick":"Ldxngx","date":"2014-10-31T07:43:42.032Z","type":"join"}
{"nick":"janjongboom","date":"2014-10-31T07:49:41.032Z","type":"join"}
{"nick":"piscisaureus","date":"2014-10-31T07:49:52.286Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T07:58:45.866Z","type":"quit"}
{"nick":"c4milo","date":"2014-10-31T08:02:22.220Z","type":"join"}
{"nick":"iarna","reason":"Read error: Connection reset by peer","date":"2014-10-31T08:02:37.141Z","type":"quit"}
{"nick":"iarna","date":"2014-10-31T08:03:02.167Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 240 seconds","date":"2014-10-31T08:06:53.032Z","type":"quit"}
{"nick":"cosnis","reason":"Ping timeout: 255 seconds","date":"2014-10-31T08:35:54.077Z","type":"quit"}
{"nick":"cosnis","date":"2014-10-31T08:39:29.799Z","type":"join"}
{"nick":"cosnis","reason":"Max SendQ exceeded","date":"2014-10-31T08:39:39.646Z","type":"quit"}
{"nick":"cosnis","date":"2014-10-31T08:41:36.072Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-10-31T08:46:00.149Z","type":"quit"}
{"nick":"cosnis","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2014-10-31T08:48:02.745Z","type":"quit"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-10-31T08:52:03.943Z","type":"quit"}
{"nick":"seishun","date":"2014-10-31T09:11:08.058Z","type":"join"}
{"nick":"bhughes","reason":"Ping timeout: 260 seconds","date":"2014-10-31T09:19:21.120Z","type":"quit"}
{"nick":"janjongboom","date":"2014-10-31T09:22:59.068Z","type":"join"}
{"nick":"janjongboom","reason":"Client Quit","date":"2014-10-31T09:23:00.764Z","type":"quit"}
{"nick":"janjongboom","date":"2014-10-31T09:24:19.940Z","type":"join"}
{"nick":"seishun","reason":"Remote host closed the connection","date":"2014-10-31T09:33:17.364Z","type":"quit"}
{"nick":"seishun","date":"2014-10-31T09:39:57.262Z","type":"join"}
{"nick":"c4milo","date":"2014-10-31T09:51:12.817Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 244 seconds","date":"2014-10-31T09:56:07.565Z","type":"quit"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-10-31T10:03:57.417Z","type":"quit"}
{"nick":"janjongboom","date":"2014-10-31T10:21:49.908Z","type":"join"}
{"nick":"petka_","date":"2014-10-31T10:24:04.710Z","type":"join"}
{"nick":"Left_Turn","date":"2014-10-31T10:33:45.925Z","type":"join"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-10-31T10:38:36.323Z","type":"quit"}
{"nick":"iarna","date":"2014-10-31T10:39:10.065Z","type":"join"}
{"nick":"iarna","reason":"Ping timeout: 244 seconds","date":"2014-10-31T10:43:21.067Z","type":"quit"}
{"nick":"avalanche123","date":"2014-10-31T10:47:27.961Z","type":"join"}
{"nick":"avalanche123","reason":"Ping timeout: 245 seconds","date":"2014-10-31T10:51:57.690Z","type":"quit"}
{"nick":"AlexisMocha","date":"2014-10-31T11:09:59.515Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2014-10-31T11:11:49.596Z","type":"quit"}
{"nick":"Left_Turn","reason":"Ping timeout: 272 seconds","date":"2014-10-31T11:17:47.926Z","type":"quit"}
{"nick":"kazupon","date":"2014-10-31T11:33:49.124Z","type":"join"}
{"nick":"iarna","date":"2014-10-31T11:39:48.280Z","type":"join"}
{"nick":"c4milo","date":"2014-10-31T11:40:11.895Z","type":"join"}
{"nick":"bajtos","date":"2014-10-31T11:42:02.752Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 258 seconds","date":"2014-10-31T11:45:00.872Z","type":"quit"}
{"nick":"iarna","reason":"Ping timeout: 255 seconds","date":"2014-10-31T11:51:07.280Z","type":"quit"}
{"nick":"jas-","reason":"Remote host closed the connection","date":"2014-10-31T11:51:32.457Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T12:06:04.407Z","type":"quit"}
{"nick":"chris_99","date":"2014-10-31T12:17:28.613Z","type":"join"}
{"nick":"AlexisMocha","reason":"Ping timeout: 244 seconds","date":"2014-10-31T12:18:12.525Z","type":"quit"}
{"nick":"chris_99","reason":"Remote host closed the connection","date":"2014-10-31T12:21:51.440Z","type":"quit"}
{"nick":"Left_Turn","date":"2014-10-31T12:25:26.452Z","type":"join"}
{"nick":"chris_99","date":"2014-10-31T12:28:07.528Z","type":"join"}
{"nick":"skebcio","date":"2014-10-31T12:29:09.119Z","type":"join"}
{"nick":"kazupon","date":"2014-10-31T12:50:42.213Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2014-10-31T13:05:28.315Z","type":"quit"}
{"nick":"M28","reason":"Read error: Connection reset by peer","date":"2014-10-31T13:20:03.940Z","type":"quit"}
{"nick":"M28_","date":"2014-10-31T13:20:09.280Z","type":"join"}
{"nick":"c4milo","date":"2014-10-31T13:29:05.333Z","type":"join"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2014-10-31T13:31:24.924Z","type":"nick"}
{"nick":"c4milo","reason":"Ping timeout: 256 seconds","date":"2014-10-31T13:33:36.622Z","type":"quit"}
{"nick":"iarna","date":"2014-10-31T13:35:30.280Z","type":"join"}
{"nick":"Fishrock123","date":"2014-10-31T13:36:42.664Z","type":"join"}
{"nick":"iarna","reason":"Ping timeout: 255 seconds","date":"2014-10-31T13:40:01.281Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 272 seconds","date":"2014-10-31T14:36:40.117Z","type":"quit"}
{"nick":"iarna","date":"2014-10-31T14:36:54.065Z","type":"join"}
{"nick":"iarna","reason":"Ping timeout: 244 seconds","date":"2014-10-31T14:42:03.092Z","type":"quit"}
{"nick":"a_le_","reason":"Remote host closed the connection","date":"2014-10-31T14:47:27.080Z","type":"quit"}
{"nick":"kenperkins","date":"2014-10-31T14:48:01.106Z","type":"join"}
{"nick":"a_le","date":"2014-10-31T14:48:03.127Z","type":"join"}
{"nick":"tixz","date":"2014-10-31T14:52:01.623Z","type":"join"}
{"nick":"tixz","date":"2014-10-31T14:52:22.902Z","type":"part"}
{"nick":"a_le","reason":"Ping timeout: 256 seconds","date":"2014-10-31T14:52:44.085Z","type":"quit"}
{"nick":"M28_","new_nick":"M28","date":"2014-10-31T14:54:16.686Z","type":"nick"}
{"nick":"a_le","date":"2014-10-31T14:57:02.095Z","type":"join"}
{"nick":"AlexisMocha","date":"2014-10-31T15:02:00.344Z","type":"join"}
{"nick":"M28","reason":"Read error: Connection reset by peer","date":"2014-10-31T15:14:24.127Z","type":"quit"}
{"nick":"M28","date":"2014-10-31T15:15:16.015Z","type":"join"}
{"nick":"cjb","reason":"Remote host closed the connection","date":"2014-10-31T15:15:50.205Z","type":"quit"}
{"nick":"creationix","message":"indutny: would you happen to know why I can’t use req->ptr in uv_fs_t to store my read buffer for uv_fs_read?","date":"2014-10-31T15:16:07.870Z","type":"message"}
{"nick":"creationix","message":"Currently I create a new void* pointer in my custom struct that lives in req->data. https://github.com/luvit/luv/blob/3e955aac7dc42b362a3034ff4482b33af9312769/src/fs.c#L269-L270","date":"2014-10-31T15:16:46.254Z","type":"message"}
{"nick":"indutny","message":"I think `req->ptr` could be used only for storing results","date":"2014-10-31T15:16:50.133Z","type":"message"}
{"nick":"cjb","date":"2014-10-31T15:16:51.129Z","type":"join"}
{"nick":"indutny","message":"erm","date":"2014-10-31T15:16:52.549Z","type":"message"}
{"nick":"indutny","message":"loading results","date":"2014-10-31T15:16:54.078Z","type":"message"}
{"nick":"indutny","message":"so req->ptr","date":"2014-10-31T15:17:02.941Z","type":"message"}
{"nick":"indutny","message":"req->result","date":"2014-10-31T15:17:04.204Z","type":"message"}
{"nick":"indutny","message":"are all parts of return value","date":"2014-10-31T15:17:08.765Z","type":"message"}
{"nick":"indutny","message":"you only have req->data pointer for your own needs, afaik","date":"2014-10-31T15:17:23.157Z","type":"message"}
{"nick":"creationix","message":"that’s a shame. ","date":"2014-10-31T15:17:50.229Z","type":"message"}
{"nick":"c4milo","date":"2014-10-31T15:17:55.864Z","type":"join"}
{"nick":"creationix","message":"I used to use it for this purpose back in libuv 0.10.x","date":"2014-10-31T15:18:15.058Z","type":"message"}
{"nick":"creationix","message":"but the new code writes over my pointer now","date":"2014-10-31T15:18:24.409Z","type":"message"}
{"nick":"creationix","message":"even better would be if as part of the result was it put the read buffer in req->ptr for read operations","date":"2014-10-31T15:19:03.193Z","type":"message"}
{"nick":"creationix","message":"since it’s a common need to free the pointer onread","date":"2014-10-31T15:19:10.580Z","type":"message"}
{"nick":"creationix","message":"it already has the pointer in uv_but_t’s base member","date":"2014-10-31T15:19:33.515Z","type":"message"}
{"nick":"creationix","message":"*uv_buf_t","date":"2014-10-31T15:19:45.391Z","type":"message"}
{"nick":"indutny","message":"well","date":"2014-10-31T15:22:20.616Z","type":"message"}
{"nick":"indutny","message":"we have only one place like that","date":"2014-10-31T15:22:26.288Z","type":"message"}
{"nick":"indutny","message":"and it is alloc_cb/read_cb","date":"2014-10-31T15:22:31.667Z","type":"message"}
{"nick":"indutny","message":"all other places are either managing memory themselves","date":"2014-10-31T15:22:38.619Z","type":"message"}
{"nick":"c4milo","reason":"Ping timeout: 244 seconds","date":"2014-10-31T15:22:39.518Z","type":"quit"}
{"nick":"indutny","message":"or relying on you","date":"2014-10-31T15:22:40.911Z","type":"message"}
{"nick":"bhughes","date":"2014-10-31T15:22:46.335Z","type":"join"}
{"nick":"indutny","message":"it is better than non-similar behavior","date":"2014-10-31T15:22:51.173Z","type":"message"}
{"nick":"bajtos","date":"2014-10-31T15:24:44.384Z","type":"join"}
{"nick":"creationix","message":"I’m fine with managing the buffer myself.  I prefer that actually.  I just want it to give me back the pointer after it’s done so I can continue managing it","date":"2014-10-31T15:25:04.415Z","type":"message"}
{"nick":"creationix","message":"that’s the only place in all of libuv that I have to store a buffer pointer in my custom place","date":"2014-10-31T15:25:24.514Z","type":"message"}
{"nick":"importantshock","date":"2014-10-31T15:28:19.448Z","type":"join"}
{"nick":"importantshock","reason":"Ping timeout: 258 seconds","date":"2014-10-31T15:32:42.815Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2014-10-31T15:37:43.728Z","type":"quit"}
{"nick":"indutny","message":"creationix: you could still use req->data, right?","date":"2014-10-31T15:41:20.171Z","type":"message"}
{"nick":"creationix","message":"I am.  But req->data already has my custom struct in it for maanaging vm stuff","date":"2014-10-31T15:43:13.206Z","type":"message"}
{"nick":"creationix","message":"I ended up adding a void* to to my req->data and storing the pointer at req->data->data","date":"2014-10-31T15:43:30.131Z","type":"message"}
{"nick":"creationix","message":"just seems wasteful when libuv already has the pointer in buf.base","date":"2014-10-31T15:43:44.549Z","type":"message"}
{"nick":"creationix","message":"and it’s not using req->ptr for anything in that response","date":"2014-10-31T15:43:56.616Z","type":"message"}
{"nick":"creationix","message":"it would make sense for the result of a fs_read to contain a pointer to the data buffer","date":"2014-10-31T15:44:24.074Z","type":"message"}
{"nick":"indutny","message":"well, it doesn't make any sense for me API-wise","date":"2014-10-31T15:47:40.493Z","type":"message"}
{"nick":"inolen","date":"2014-10-31T15:47:49.231Z","type":"join"}
{"nick":"indutny","message":"ah, wait","date":"2014-10-31T15:47:52.598Z","type":"message"}
{"nick":"indutny","message":"I just got what you are talking about","date":"2014-10-31T15:47:59.468Z","type":"message"}
{"nick":"AlexisMocha","reason":"Ping timeout: 250 seconds","date":"2014-10-31T15:50:22.317Z","type":"quit"}
{"nick":"creationix","message":"indutny: am I wrong to want this?  I’m all for uniform APIs and this is the *only* place in my code where I have to externally track this kind of data pointer.","date":"2014-10-31T15:50:23.806Z","type":"message"}
{"nick":"creationix","message":"it makes all my uv reqs need one extra pointer just to support uv_fs_read (that or complicate my code and have a special container type for just that one call)","date":"2014-10-31T15:50:49.436Z","type":"message"}
{"nick":"inolen","reason":"Ping timeout: 265 seconds","date":"2014-10-31T15:52:21.108Z","type":"quit"}
{"nick":"creationix","message":"also unrelated, but I see 1.x was merged into master 11 days ago, but I never saw an announcement for 1.x’s release.  Is it not done yet?","date":"2014-10-31T15:52:36.173Z","type":"message"}
{"nick":"indutny","message":"creationix: I think we could make you have some `req->buf` or something like that","date":"2014-10-31T15:53:47.220Z","type":"message"}
{"nick":"indutny","message":"creationix: we only have some RCs yet, afaik","date":"2014-10-31T15:53:56.229Z","type":"message"}
{"nick":"creationix","message":"yeah, rc3 was the last I saw, then it was merged to master","date":"2014-10-31T15:54:13.460Z","type":"message"}
{"nick":"creationix","message":"I guess that means it’s close","date":"2014-10-31T15:54:17.706Z","type":"message"}
{"nick":"indutny","message":"creationix: I think we have `req->bufs`","date":"2014-10-31T15:55:54.253Z","type":"message"}
{"nick":"creationix","message":"not in the public API","date":"2014-10-31T15:57:17.743Z","type":"message"}
{"nick":"creationix","message":"result is a ssize_t, ptr is a void*, and statbuf is a uv_stat_t.  That’s all the result fields I believe","date":"2014-10-31T15:57:55.767Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2014-10-31T15:58:00.588Z","type":"message"}
{"nick":"indutny","message":"it is present on both windows/unix","date":"2014-10-31T15:58:09.858Z","type":"message"}
{"nick":"indutny","message":"could you please file an issue for this?","date":"2014-10-31T15:58:16.074Z","type":"message"}
{"nick":"creationix","message":"so what does req->bufs contain?","date":"2014-10-31T15:58:29.193Z","type":"message"}
{"nick":"creationix","message":"also fwiw, uv_read (the stream version) does hand back a uv_buf_t containing the buffer I allocated so there is some precedent there","date":"2014-10-31T15:59:33.450Z","type":"message"}
