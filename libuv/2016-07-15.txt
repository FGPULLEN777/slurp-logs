{"nick":"qard-appneta","reason":"Quit: (╯°□°）╯︵ pɹɐb","date":"2016-07-15T00:10:30.159Z","type":"quit"}
{"nick":"rcyr","date":"2016-07-15T00:16:33.937Z","type":"join"}
{"nick":"rcyr","new_nick":"systemfault","date":"2016-07-15T00:22:23.300Z","type":"nick"}
{"nick":"piscisaureus","date":"2016-07-15T00:57:11.980Z","type":"join"}
{"nick":"PerilousApricot","date":"2016-07-15T01:01:48.399Z","type":"join"}
{"nick":"Harageth","reason":"Read error: Connection reset by peer","date":"2016-07-15T01:03:42.404Z","type":"quit"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2016-07-15T01:13:26.626Z","type":"quit"}
{"nick":"PerilousApricot","reason":"Remote host closed the connection","date":"2016-07-15T01:13:32.033Z","type":"quit"}
{"nick":"rmg_","date":"2016-07-15T01:17:19.042Z","type":"join"}
{"nick":"happy-dude","reason":"Quit: Connection closed for inactivity","date":"2016-07-15T01:21:01.830Z","type":"quit"}
{"nick":"rmg_","reason":"Ping timeout: 264 seconds","date":"2016-07-15T01:22:03.983Z","type":"quit"}
{"nick":"Harageth","date":"2016-07-15T01:38:12.699Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2016-07-15T01:49:51.113Z","type":"quit"}
{"nick":"piscisaureus","reason":"Quit: Leaving.","date":"2016-07-15T02:01:15.969Z","type":"quit"}
{"nick":"tunniclm_","reason":"Ping timeout: 244 seconds","date":"2016-07-15T02:33:57.926Z","type":"quit"}
{"nick":"Harageth","reason":"Read error: Connection reset by peer","date":"2016-07-15T02:33:58.460Z","type":"quit"}
{"nick":"rmg_","date":"2016-07-15T03:18:51.924Z","type":"join"}
{"nick":"rmg_","reason":"Ping timeout: 244 seconds","date":"2016-07-15T03:23:02.924Z","type":"quit"}
{"nick":"PerilousApricot","date":"2016-07-15T03:53:03.650Z","type":"join"}
{"nick":"PerilousApricot","reason":"Ping timeout: 276 seconds","date":"2016-07-15T03:58:39.644Z","type":"quit"}
{"nick":"rgrinberg","reason":"Ping timeout: 258 seconds","date":"2016-07-15T04:30:29.229Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-07-15T04:40:01.220Z","type":"join"}
{"nick":"piscisaureus_!~piscisaur@109.174.139.135","topic":"Liberal utopian void ~ http://logs.libuv.org/libuv ~ http://groups.google.com/group/libuv","date":"2016-07-15T05:04:10.919Z","type":"topic"}
{"nick":"piscisaureus_!~piscisaur@109.174.139.135","topic":"Liberal utopian void ~ http://logs.libuv.org/libuv ~ http://groups.google.com/group/libuv","date":"2016-07-15T05:04:49.560Z","type":"topic"}
{"nick":"piscisaureus_!~piscisaur@109.174.139.135","topic":"Liberal utopian void ~ http://logs.libuv.org/libuv ~ http://groups.google.com/group/libuv","date":"2016-07-15T05:05:48.574Z","type":"topic"}
{"nick":"piscisaureus_!~piscisaur@109.174.139.135","topic":"Liberal utopian void ~ http://logs.libuv.org/libuv ~ http://groups.google.com/group/libuv","date":"2016-07-15T05:06:25.997Z","type":"topic"}
{"nick":"piscisaureus_!~piscisaur@109.174.139.135","topic":"Liberal utopian void ~ http://logs.libuv.org/libuv ~ http://groups.google.com/group/libuv","date":"2016-07-15T05:06:58.674Z","type":"topic"}
{"nick":"zju3","reason":"Ping timeout: 250 seconds","date":"2016-07-15T05:12:48.389Z","type":"quit"}
{"nick":"rgrinberg","reason":"Ping timeout: 240 seconds","date":"2016-07-15T05:14:33.999Z","type":"quit"}
{"nick":"rmg_","date":"2016-07-15T05:20:23.421Z","type":"join"}
{"nick":"rmg_","reason":"Ping timeout: 240 seconds","date":"2016-07-15T05:24:31.361Z","type":"quit"}
{"nick":"PerilousApricot","date":"2016-07-15T05:29:07.022Z","type":"join"}
{"nick":"PerilousApricot","reason":"Ping timeout: 264 seconds","date":"2016-07-15T05:34:04.070Z","type":"quit"}
{"nick":"PerilousApricot","date":"2016-07-15T06:30:21.188Z","type":"join"}
{"nick":"PerilousApricot","reason":"Ping timeout: 258 seconds","date":"2016-07-15T06:34:41.179Z","type":"quit"}
{"nick":"systemfault","reason":"Quit: Bye!","date":"2016-07-15T06:55:59.651Z","type":"quit"}
{"nick":"rendar","date":"2016-07-15T07:09:09.158Z","type":"join"}
{"nick":"Fishrock123","date":"2016-07-15T07:11:32.199Z","type":"join"}
{"nick":"rmg_","date":"2016-07-15T07:21:52.004Z","type":"join"}
{"nick":"rmg_","reason":"Ping timeout: 240 seconds","date":"2016-07-15T07:26:04.028Z","type":"quit"}
{"nick":"rmg_","date":"2016-07-15T08:22:37.225Z","type":"join"}
{"nick":"seishun","date":"2016-07-15T08:22:55.971Z","type":"join"}
{"nick":"rmg_","reason":"Ping timeout: 272 seconds","date":"2016-07-15T08:27:42.168Z","type":"quit"}
{"nick":"PerilousApricot","date":"2016-07-15T08:31:50.799Z","type":"join"}
{"nick":"PerilousApricot","reason":"Ping timeout: 250 seconds","date":"2016-07-15T08:36:27.848Z","type":"quit"}
{"nick":"Fishrock","date":"2016-07-15T08:41:52.224Z","type":"join"}
{"nick":"Fishrock123","reason":"Ping timeout: 258 seconds","date":"2016-07-15T08:43:52.270Z","type":"quit"}
{"nick":"Fishrock","reason":"Remote host closed the connection","date":"2016-07-15T09:00:06.431Z","type":"quit"}
{"nick":"Fishrock123","date":"2016-07-15T09:16:28.238Z","type":"join"}
{"nick":"PerilousApricot","date":"2016-07-15T09:32:38.001Z","type":"join"}
{"nick":"PerilousApricot","reason":"Ping timeout: 244 seconds","date":"2016-07-15T09:37:06.966Z","type":"quit"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2016-07-15T10:00:34.506Z","type":"quit"}
{"nick":"avih","message":"creationix: hey. nice work with dukluv :) i found a minor bug which i'll probably PR soon, but regardless, duktape goes 2.0 soon, and some of the stuff you use will get deprecated. specifically, 'print' which you use at your tests/sample and all the module loading/resolution stuff, and iirc you also use file loading which is also removed. i think all of those, maybe except print, are available at 'extra/', but maybe a better approach would be to rely on no ","date":"2016-07-15T10:04:05.224Z","type":"message"}
{"nick":"avih","message":"extras. it should not be too hard to make the adaptation","date":"2016-07-15T10:04:05.449Z","type":"message"}
{"nick":"rmg_","date":"2016-07-15T10:24:04.727Z","type":"join"}
{"nick":"rmg_","reason":"Ping timeout: 260 seconds","date":"2016-07-15T10:28:47.716Z","type":"quit"}
{"nick":"thealphanerd","reason":"Quit: farewell for now","date":"2016-07-15T10:29:29.431Z","type":"quit"}
{"nick":"thealphanerd","date":"2016-07-15T10:29:59.894Z","type":"join"}
{"nick":"PerilousApricot","date":"2016-07-15T10:33:11.445Z","type":"join"}
{"nick":"PerilousApricot","reason":"Ping timeout: 240 seconds","date":"2016-07-15T10:37:31.313Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 272 seconds","date":"2016-07-15T11:09:12.201Z","type":"quit"}
{"nick":"thefourtheye","reason":"Quit: Connection closed for inactivity","date":"2016-07-15T11:30:56.411Z","type":"quit"}
{"nick":"grantila","date":"2016-07-15T12:08:18.225Z","type":"join"}
{"nick":"seishun","date":"2016-07-15T12:09:08.624Z","type":"join"}
{"nick":"rmg_","date":"2016-07-15T12:25:32.758Z","type":"join"}
{"nick":"rmg_","reason":"Ping timeout: 260 seconds","date":"2016-07-15T12:30:07.716Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 272 seconds","date":"2016-07-15T12:34:42.177Z","type":"quit"}
{"nick":"PerilousApricot","date":"2016-07-15T12:34:51.358Z","type":"join"}
{"nick":"PerilousApricot","reason":"Ping timeout: 250 seconds","date":"2016-07-15T12:39:07.277Z","type":"quit"}
{"nick":"seishun","date":"2016-07-15T12:41:09.890Z","type":"join"}
{"nick":"grantila","reason":"Ping timeout: 258 seconds","date":"2016-07-15T12:48:49.265Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-07-15T12:51:43.023Z","type":"join"}
{"nick":"rgrinberg","reason":"Quit: WeeChat 1.5","date":"2016-07-15T13:06:58.465Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-07-15T13:07:18.459Z","type":"join"}
{"nick":"rmg_","date":"2016-07-15T13:26:20.737Z","type":"join"}
{"nick":"rmg_","reason":"Ping timeout: 260 seconds","date":"2016-07-15T13:30:47.727Z","type":"quit"}
{"nick":"PerilousApricot","date":"2016-07-15T13:36:32.031Z","type":"join"}
{"nick":"seishun","reason":"Read error: Connection reset by peer","date":"2016-07-15T13:53:13.859Z","type":"quit"}
{"nick":"seishun","date":"2016-07-15T14:04:32.417Z","type":"join"}
{"nick":"rendar","reason":"Ping timeout: 250 seconds","date":"2016-07-15T14:08:23.287Z","type":"quit"}
{"nick":"tunniclm_","date":"2016-07-15T14:10:45.520Z","type":"join"}
{"nick":"PerilousApricot","reason":"Remote host closed the connection","date":"2016-07-15T14:22:56.841Z","type":"quit"}
{"nick":"rgrinberg","reason":"Ping timeout: 252 seconds","date":"2016-07-15T14:47:46.445Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-07-15T15:05:46.770Z","type":"join"}
{"nick":"creationix","message":"avih thanks","date":"2016-07-15T15:19:47.341Z","type":"message"}
{"nick":"creationix","message":"also have you seen seaduk (part of nucleus.js)","date":"2016-07-15T15:19:57.508Z","type":"message"}
{"nick":"creationix","message":"aka dukluv 2.0","date":"2016-07-15T15:20:00.317Z","type":"message"}
{"nick":"creationix","message":"https://github.com/nucleus-js/seaduk","date":"2016-07-15T15:20:16.349Z","type":"message"}
{"nick":"avih","message":"creationix: i have not, and i'm unfamiliar with nucleus.js ...","date":"2016-07-15T15:21:11.846Z","type":"message"}
{"nick":"creationix","message":"it's super new","date":"2016-07-15T15:21:17.889Z","type":"message"}
{"nick":"creationix","message":"but basic idea is a micro-core that's just libuv + duktape + zip asset bundling","date":"2016-07-15T15:21:34.504Z","type":"message"}
{"nick":"creationix","message":"and by concatenating a zip file of js code you can make standalone binaries","date":"2016-07-15T15:21:44.772Z","type":"message"}
{"nick":"creationix","message":"also the core will have some optional addons like glfw, openssl, sdl, etc","date":"2016-07-15T15:22:19.774Z","type":"message"}
{"nick":"avih","message":"cool","date":"2016-07-15T15:22:43.228Z","type":"message"}
{"nick":"avih","message":"creationix: but dukluv on its own is very raw. great, but not a real framework, IMO","date":"2016-07-15T15:23:04.362Z","type":"message"}
{"nick":"avih","message":"IMO it needs some node-lookalike effort","date":"2016-07-15T15:23:26.457Z","type":"message"}
{"nick":"avih","message":"(i know there have been few attempts)","date":"2016-07-15T15:23:38.245Z","type":"message"}
{"nick":"creationix","message":"it's a lot of work","date":"2016-07-15T15:24:23.799Z","type":"message"}
{"nick":"creationix","message":"I would know, I did the same thing for luvit","date":"2016-07-15T15:24:29.120Z","type":"message"}
{"nick":"avih","message":"(i created a basic stream abstraction which works identically on file/pipe/tty and then console.log/err etc which based on it and doesn't care what std* actually are)","date":"2016-07-15T15:24:39.786Z","type":"message"}
{"nick":"creationix","message":"but I think that nucleus.js could eventually actually become node's core","date":"2016-07-15T15:24:42.287Z","type":"message"}
{"nick":"avih","message":"creationix: btw, re the bug, at duv_is_pipe:","date":"2016-07-15T15:25:23.950Z","type":"message"}
{"nick":"avih","message":"-  uv_tcp_t* handle;","date":"2016-07-15T15:25:24.906Z","type":"message"}
{"nick":"avih","message":"+  uv_pipe_t* handle;","date":"2016-07-15T15:25:25.091Z","type":"message"}
{"nick":"avih","message":"(i bumped into it when i added pipe support to the stream abstraction)","date":"2016-07-15T15:26:00.508Z","type":"message"}
{"nick":"creationix","message":"nice find","date":"2016-07-15T15:26:48.731Z","type":"message"}
{"nick":"creationix","message":"yes, PR please so you can get credit in git","date":"2016-07-15T15:26:54.868Z","type":"message"}
{"nick":"avih","message":"(the stream abstraction is for both in and out, though obviously slightly different APIs between them)","date":"2016-07-15T15:27:00.653Z","type":"message"}
{"nick":"avih","message":"creationix: i don't care about credit, especially not over such a minor thing :) go ahead and land it","date":"2016-07-15T15:27:31.943Z","type":"message"}
{"nick":"rmg_","date":"2016-07-15T15:27:50.923Z","type":"join"}
{"nick":"creationix","message":"k","date":"2016-07-15T15:28:00.494Z","type":"message"}
{"nick":"creationix","message":"avih did that actually cause problems?  I don't see anywhere in that functions that uses pipe specefic members","date":"2016-07-15T15:29:59.984Z","type":"message"}
{"nick":"creationix","message":"->type is the same on all libuv structs I thought","date":"2016-07-15T15:30:08.394Z","type":"message"}
{"nick":"avih","message":"it's not apparently","date":"2016-07-15T15:30:21.649Z","type":"message"}
{"nick":"avih","message":"the struct size is different it seems","date":"2016-07-15T15:30:28.292Z","type":"message"}
{"nick":"avih","message":"iirc","date":"2016-07-15T15:30:29.017Z","type":"message"}
{"nick":"avih","message":"iirc when you check the type you also compare the size, that's what failed iirc","date":"2016-07-15T15:30:47.254Z","type":"message"}
{"nick":"creationix","message":"oh, I see","date":"2016-07-15T15:30:51.474Z","type":"message"}
{"nick":"creationix","message":"yeah, that will do it","date":"2016-07-15T15:30:54.353Z","type":"message"}
{"nick":"creationix","message":"btw, I have a more robust system in seaduk","date":"2016-07-15T15:31:13.051Z","type":"message"}
{"nick":"avih","message":"more robust for what?","date":"2016-07-15T15:31:24.862Z","type":"message"}
{"nick":"creationix","message":"for type checking","date":"2016-07-15T15:31:30.896Z","type":"message"}
{"nick":"avih","message":"btw, your editor system is amazing :)","date":"2016-07-15T15:31:36.773Z","type":"message"}
{"nick":"creationix","message":"editor?","date":"2016-07-15T15:31:42.809Z","type":"message"}
{"nick":"avih","message":"tedit maybe?","date":"2016-07-15T15:31:48.273Z","type":"message"}
{"nick":"rmg_","reason":"Ping timeout: 240 seconds","date":"2016-07-15T15:32:04.015Z","type":"quit"}
{"nick":"creationix","message":"oh thanks.  That was a lot of work","date":"2016-07-15T15:32:05.039Z","type":"message"}
{"nick":"avih","message":"figures :)","date":"2016-07-15T15:32:10.980Z","type":"message"}
{"nick":"creationix","message":"it's a shame I ran out of money and had to abondon it","date":"2016-07-15T15:32:13.290Z","type":"message"}
{"nick":"creationix","message":"especially now that browsers have service workers and ES6","date":"2016-07-15T15:32:29.117Z","type":"message"}
{"nick":"creationix","message":"I could do so much with it","date":"2016-07-15T15:32:35.091Z","type":"message"}
{"nick":"avih","message":"the integration and live runs are really nice","date":"2016-07-15T15:33:10.130Z","type":"message"}
{"nick":"creationix","message":"with service workers I would be able to write server-side JS in the app and the browser actually render the HTML in an iframe","date":"2016-07-15T15:33:34.092Z","type":"message"}
{"nick":"avih","message":"i only played withit very little, but watched your vid. very impressive","date":"2016-07-15T15:33:34.317Z","type":"message"}
{"nick":"avih","message":"how would it be better?","date":"2016-07-15T15:34:03.822Z","type":"message"}
{"nick":"creationix","message":"I could write a new platform that uses duktape on the server (for low cost fremium hosting) but test locally in the browser even when offline","date":"2016-07-15T15:34:04.685Z","type":"message"}
{"nick":"avih","message":"more responsive?","date":"2016-07-15T15:34:07.959Z","type":"message"}
{"nick":"creationix","message":"my main goal with tedit was a real development environment that ran 100% offline in a browser without special extensions","date":"2016-07-15T15:34:32.335Z","type":"message"}
{"nick":"avih","message":"you can run duktape in the browser too :)","date":"2016-07-15T15:34:35.578Z","type":"message"}
{"nick":"creationix","message":"true, then I'd have a real sandbox","date":"2016-07-15T15:34:44.128Z","type":"message"}
{"nick":"creationix","message":"once webassembly lands, tedit will have real potential","date":"2016-07-15T15:34:53.787Z","type":"message"}
{"nick":"avih","message":"iirc duktape.org has such demp, and the code is at the main duktape repo iirc","date":"2016-07-15T15:34:54.409Z","type":"message"}
{"nick":"avih","message":"demo*","date":"2016-07-15T15:35:04.168Z","type":"message"}
{"nick":"creationix","message":"I think that one is using asm.js","date":"2016-07-15T15:35:08.162Z","type":"message"}
{"nick":"creationix","message":"it works, just is a little bloated size-wise","date":"2016-07-15T15:35:17.681Z","type":"message"}
{"nick":"avih","message":"i think so too","date":"2016-07-15T15:35:21.380Z","type":"message"}
{"nick":"creationix","message":"good thing duktape itself is tiny","date":"2016-07-15T15:35:25.709Z","type":"message"}
{"nick":"avih","message":":)","date":"2016-07-15T15:35:26.351Z","type":"message"}
{"nick":"avih","message":"well.. not as tiny as mujs, but quite friendlier license :)","date":"2016-07-15T15:35:42.381Z","type":"message"}
{"nick":"creationix","message":"mujs?","date":"2016-07-15T15:35:51.443Z","type":"message"}
{"nick":"avih","message":"http://mujs.com/","date":"2016-07-15T15:36:07.057Z","type":"message"}
{"nick":"creationix","message":"gpl bleh","date":"2016-07-15T15:36:19.976Z","type":"message"}
{"nick":"avih","message":"way more spartan code and less \"features\", but it gets it right, and IMO also way more maintainable","date":"2016-07-15T15:36:32.739Z","type":"message"}
{"nick":"creationix","message":"I wonder how gpl applies when it's compiled to asm.js and is being used by browser code","date":"2016-07-15T15:37:08.903Z","type":"message"}
{"nick":"avih","message":"duktape is not really maintainable IMO, despite its maintainer being very on top of it, IMO no one else can","date":"2016-07-15T15:37:25.129Z","type":"message"}
{"nick":"creationix","message":"is it that bad.  I found the internals very well documented","date":"2016-07-15T15:37:42.608Z","type":"message"}
{"nick":"creationix","message":"not that I've actually tried to hack on it yet","date":"2016-07-15T15:37:49.351Z","type":"message"}
{"nick":"avih","message":"yes, he's very meticulous, but have you looked at duktape.h ? :)","date":"2016-07-15T15:38:17.016Z","type":"message"}
{"nick":"avih","message":"the #ifdef-ery is mind boggling","date":"2016-07-15T15:38:35.592Z","type":"message"}
{"nick":"creationix","message":"well yeah, it supports a lot of targets","date":"2016-07-15T15:38:55.433Z","type":"message"}
{"nick":"creationix","message":"I like how mujs is also stack based C API","date":"2016-07-15T15:39:09.585Z","type":"message"}
{"nick":"creationix","message":"I never was a fan of V8's smart pointers, handles, etc","date":"2016-07-15T15:39:23.075Z","type":"message"}
{"nick":"avih","message":"yes, and seemingly successfully, but other than him, not many can contribute imo","date":"2016-07-15T15:39:24.070Z","type":"message"}
{"nick":"avih","message":"creationix: i added duktape and mujs support for mpv (even both at the same binary) including a thin abstraction layer to write code which works with both duktape and mujs. works very well, but was not integrated due to license (mujs) or insanity (duktape)  https://github.com/avih/mpv/tree/js-duk","date":"2016-07-15T15:40:46.221Z","type":"message"}
{"nick":"avih","message":"i'm using it as my main scripting interface to mpv","date":"2016-07-15T15:40:55.337Z","type":"message"}
{"nick":"creationix","message":"nice","date":"2016-07-15T15:40:59.904Z","type":"message"}
{"nick":"creationix","message":"avih have you tried the samsung engine?","date":"2016-07-15T15:41:31.203Z","type":"message"}
{"nick":"creationix","message":"https://github.com/Samsung/jerryscript","date":"2016-07-15T15:41:45.675Z","type":"message"}
{"nick":"avih","message":"the jerry thingy? no, iirc they don't support windows","date":"2016-07-15T15:41:59.221Z","type":"message"}
{"nick":"avih","message":"i've looked at it few times, seems preliminary TBH","date":"2016-07-15T15:42:59.535Z","type":"message"}
{"nick":"creationix","message":"I like to think I could contribute to duktape.  I mean, I design languages and write VMs for fun.  Time is my real problem","date":"2016-07-15T15:43:42.016Z","type":"message"}
{"nick":"creationix","message":"I have 4 kids with a 5th on the way","date":"2016-07-15T15:43:53.594Z","type":"message"}
{"nick":"avih","message":":)","date":"2016-07-15T15:43:54.702Z","type":"message"}
{"nick":"avih","message":"oh.. congrats :)","date":"2016-07-15T15:44:01.537Z","type":"message"}
{"nick":"avih","message":"yeah, i did notice much of your stuff is made with kids in mind ;)","date":"2016-07-15T15:44:19.145Z","type":"message"}
{"nick":"avih","message":"not it also makes sense ;)","date":"2016-07-15T15:44:30.221Z","type":"message"}
{"nick":"avih","message":"now*","date":"2016-07-15T15:44:33.701Z","type":"message"}
{"nick":"creationix","message":"also I learned to program very young.  I'm 3rd generation programmer","date":"2016-07-15T15:44:54.955Z","type":"message"}
{"nick":"creationix","message":"My mom was much better at punch-cards than her dad :)","date":"2016-07-15T15:45:13.228Z","type":"message"}
{"nick":"avih","message":"oh :) i'm first, but i started (relatively - to that time) young. about 9 iirc","date":"2016-07-15T15:45:21.103Z","type":"message"}
{"nick":"avih","message":"lol","date":"2016-07-15T15:45:25.121Z","type":"message"}
{"nick":"creationix","message":"yeah, 9 is still pretty early","date":"2016-07-15T15:45:34.298Z","type":"message"}
{"nick":"avih","message":"that's where i learned english from initially. goto END;","date":"2016-07-15T15:46:05.940Z","type":"message"}
{"nick":"avih","message":"(zx81)","date":"2016-07-15T15:47:01.210Z","type":"message"}
{"nick":"creationix","message":":)","date":"2016-07-15T15:47:11.998Z","type":"message"}
{"nick":"creationix","message":"I cut my teeth on C64 in the 80's and then Dos5 on an i386 in the 90's","date":"2016-07-15T15:47:31.354Z","type":"message"}
{"nick":"avih","message":"sounds about the same period :)","date":"2016-07-15T15:48:19.980Z","type":"message"}
{"nick":"avih","message":"though you were probably 4yo ;)","date":"2016-07-15T15:48:38.017Z","type":"message"}
{"nick":"creationix","message":"I certainly played on c64 when I was 4, but programmed when I was closer to 8","date":"2016-07-15T15:49:02.712Z","type":"message"}
{"nick":"avih","message":"i recall two programs which i really liked, one was a piano which would record the tunes you play, and the other was for the sinclair spectrum which would vsync-scroll third of the screen hight with huge fonts which i also created :) sold it to some local cable company at the time","date":"2016-07-15T15:52:33.952Z","type":"message"}
{"nick":"avih","message":"(i'm still fascinated and deals with vsync related stuff to this day)","date":"2016-07-15T15:53:25.447Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 272 seconds","date":"2016-07-15T15:54:12.214Z","type":"quit"}
{"nick":"seishun","date":"2016-07-15T15:55:19.436Z","type":"join"}
{"nick":"PerilousApricot","date":"2016-07-15T16:00:33.232Z","type":"join"}
{"nick":"cremes","reason":"Quit: cremes","date":"2016-07-15T16:01:34.816Z","type":"quit"}
{"nick":"brson","date":"2016-07-15T16:03:07.691Z","type":"join"}
{"nick":"Harageth","date":"2016-07-15T16:12:10.355Z","type":"join"}
{"nick":"PerilousApricot","reason":"Remote host closed the connection","date":"2016-07-15T16:15:08.657Z","type":"quit"}
{"nick":"dap_","date":"2016-07-15T16:17:07.053Z","type":"join"}
{"nick":"cremes","date":"2016-07-15T16:18:08.181Z","type":"join"}
{"nick":"avih","message":"creationix: \"nucleus.getenv(name) -> value\" <-- iirc libuv doesn't have a portable getenv, does it? (unicode aware)","date":"2016-07-15T16:21:43.705Z","type":"message"}
{"nick":"creationix","message":"avih, no I added that","date":"2016-07-15T16:21:57.640Z","type":"message"}
{"nick":"avih","message":"right","date":"2016-07-15T16:22:04.236Z","type":"message"}
{"nick":"creationix","message":"and yes, mine is unicode aware and should work on windows","date":"2016-07-15T16:22:05.600Z","type":"message"}
{"nick":"avih","message":"cool","date":"2016-07-15T16:22:18.734Z","type":"message"}
{"nick":"creationix","message":"at least the lua version is.  I'm havn't yet fixed windows bugs in nucleus yet","date":"2016-07-15T16:22:24.211Z","type":"message"}
{"nick":"zju3","date":"2016-07-15T16:22:36.339Z","type":"join"}
{"nick":"creationix","message":"nucleus will support windows fully, but at the moment, I'm still proving out APIs in unix where I can move faster","date":"2016-07-15T16:22:51.900Z","type":"message"}
{"nick":"avih","message":"hmm.. i found it weird that libuv doesn't have it. it does seem to use it internally with unicode iirc, like with $HOME etc","date":"2016-07-15T16:23:00.941Z","type":"message"}
{"nick":"creationix","message":"yeah, not sure","date":"2016-07-15T16:23:14.365Z","type":"message"}
{"nick":"creationix","message":"seems like something libuv could add","date":"2016-07-15T16:23:18.650Z","type":"message"}
{"nick":"avih","message":"yeah, i think it should too","date":"2016-07-15T16:23:26.002Z","type":"message"}
{"nick":"creationix","message":"I've long wanted an ecosystem of libuv addons.  Things that make sense, but maybe not everyone wants included","date":"2016-07-15T16:23:35.909Z","type":"message"}
{"nick":"creationix","message":"openssl integration, proper event loop sharing with GUI toolkits, leveldb, env variables, etc","date":"2016-07-15T16:24:17.060Z","type":"message"}
{"nick":"avih","message":"hmm... i see the value, but also the issue. IMO depending on how big it could end up. if not a big number of addons, then IMO it should be integrated into libuv","date":"2016-07-15T16:24:52.698Z","type":"message"}
{"nick":"avih","message":"also, iirs there was a similar project forked from libuv with that boal in mind - simpler","date":"2016-07-15T16:25:09.739Z","type":"message"}
{"nick":"avih","message":"goal*","date":"2016-07-15T16:25:36.612Z","type":"message"}
{"nick":"rgrinberg","reason":"Ping timeout: 276 seconds","date":"2016-07-15T16:46:57.766Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 276 seconds","date":"2016-07-15T16:50:51.698Z","type":"quit"}
{"nick":"txdv","message":"creationix: whlat is holding that addon system back?","date":"2016-07-15T16:57:45.181Z","type":"message"}
{"nick":"qard-appneta","date":"2016-07-15T16:59:37.749Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 272 seconds","date":"2016-07-15T17:00:04.240Z","type":"quit"}
{"nick":"PerilousApricot","date":"2016-07-15T17:01:55.381Z","type":"join"}
{"nick":"brson","date":"2016-07-15T17:04:09.100Z","type":"join"}
{"nick":"creationix","message":"txdv inertia?  An official place to post libraries?  Conventions?","date":"2016-07-15T17:05:17.952Z","type":"message"}
{"nick":"creationix","message":"I know indutny wrote several uv-* libraries","date":"2016-07-15T17:05:33.872Z","type":"message"}
{"nick":"creationix","message":"though I agree with avih.  The environment variable stuff seems like it should be in core","date":"2016-07-15T17:06:45.665Z","type":"message"}
{"nick":"creationix","message":"since libuv uses it already for other APIs","date":"2016-07-15T17:06:54.048Z","type":"message"}
{"nick":"avih","message":"+1 :)","date":"2016-07-15T17:07:37.640Z","type":"message"}
{"nick":"seishun","date":"2016-07-15T17:09:06.393Z","type":"join"}
{"nick":"PerilousApricot","reason":"Remote host closed the connection","date":"2016-07-15T17:12:05.570Z","type":"quit"}
{"nick":"avih","message":"creationix: btw, re your module loading code, while i didn't read it thoroughly, it seemed to me more code than it could/should be. IMO it's enough to expose a file_load/run api, and then implement require in js on top of just that. I implemented a similar approach for the mpv scripting support, and then tried it instead of your module load, and it worked on the use cases which i tried see https://github.com/avih/mpv/blob/js-duk/player/javascript/defaults.","date":"2016-07-15T17:22:00.751Z","type":"message"}
{"nick":"avih","message":"js#L32","date":"2016-07-15T17:22:00.973Z","type":"message"}
{"nick":"creationix","message":"avih, right.  I just didn't have a good way to embed JS in the binary","date":"2016-07-15T17:27:08.841Z","type":"message"}
{"nick":"creationix","message":"it might be easier now","date":"2016-07-15T17:27:19.254Z","type":"message"}
{"nick":"creationix","message":"with seaduk, module loaders are all user-space","date":"2016-07-15T17:27:49.541Z","type":"message"}
{"nick":"avih","message":"creationix: embedding js files would be useful for dukluv regardless IMO, since it would allow to create encapsulated applications","date":"2016-07-15T17:28:00.589Z","type":"message"}
{"nick":"creationix","message":"only the raw primitves needed (readfile, scandir, etc) are provided","date":"2016-07-15T17:28:02.460Z","type":"message"}
{"nick":"creationix","message":"well, seaduk solves that nicely","date":"2016-07-15T17:28:14.305Z","type":"message"}
{"nick":"avih","message":"right, i noticed, but didn't look deeply","date":"2016-07-15T17:28:25.119Z","type":"message"}
{"nick":"creationix","message":"asset bundling/loading is it's main feature on top of duktape ","date":"2016-07-15T17:28:30.330Z","type":"message"}
{"nick":"avih","message":"on top of dukluv you mean?","date":"2016-07-15T17:28:46.200Z","type":"message"}
{"nick":"creationix","message":"seaduk doesn't use dukluv","date":"2016-07-15T17:29:02.776Z","type":"message"}
{"nick":"rmg_","date":"2016-07-15T17:29:20.989Z","type":"join"}
{"nick":"avih","message":"is there a projects which connects them?","date":"2016-07-15T17:30:17.632Z","type":"message"}
{"nick":"avih","message":"i.e. duktape, libuv, and assets?","date":"2016-07-15T17:30:33.356Z","type":"message"}
{"nick":"rmg_","reason":"Ping timeout: 244 seconds","date":"2016-07-15T17:33:28.956Z","type":"quit"}
{"nick":"fourq","reason":"Ping timeout: 260 seconds","date":"2016-07-15T17:35:47.991Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-07-15T17:36:09.359Z","type":"join"}
{"nick":"txdv","message":"creationix: what libraries did he write?","date":"2016-07-15T17:42:44.841Z","type":"message"}
{"nick":"qard-appneta","reason":"Max SendQ exceeded","date":"2016-07-15T17:52:21.720Z","type":"quit"}
{"nick":"creationix","message":"txdv: https://github.com/indutny/uv_ssl_t https://github.com/indutny/uv_link_t https://github.com/indutny/uv_http_t","date":"2016-07-15T17:56:21.209Z","type":"message"}
{"nick":"creationix","message":"avih yeah, that's what nucleus.js is.  Seaduk is the nucleus implementation using libuv + duktape in C","date":"2016-07-15T17:57:21.330Z","type":"message"}
{"nick":"creationix","message":"but the code in dukluv isn't used.  Seaduk has it's own libuv bindings for duktape","date":"2016-07-15T17:57:48.509Z","type":"message"}
{"nick":"creationix","message":"it's a much easier interface in JS I think","date":"2016-07-15T17:58:03.857Z","type":"message"}
{"nick":"creationix","message":"and easier to swap out backends","date":"2016-07-15T17:58:08.818Z","type":"message"}
{"nick":"avih","message":"hmm.. didn't look at nucleus, but i thought libuv is great exactly because it's so straight forward mapping from the bindings to libuv","date":"2016-07-15T17:59:17.346Z","type":"message"}
{"nick":"avih","message":"dukluv* is great...","date":"2016-07-15T17:59:28.649Z","type":"message"}
{"nick":"roxlu","date":"2016-07-15T17:59:28.965Z","type":"join"}
{"nick":"txdv","message":"soon we gonna be like libevent","date":"2016-07-15T17:59:48.829Z","type":"message"}
{"nick":"brson","reason":"Quit: leaving","date":"2016-07-15T18:09:52.989Z","type":"quit"}
{"nick":"creationix","message":"avih right, seaduk is similar scope to dukluv, it just had a more clearly defined JS API and a minimal asset bundling feature","date":"2016-07-15T18:29:09.216Z","type":"message"}
{"nick":"creationix","message":"and the core duktape-libuv bundings can probably be extracted into it's own repo","date":"2016-07-15T18:29:34.552Z","type":"message"}
{"nick":"avih","message":"creationix: i should look at it then before i continue discussing it :)","date":"2016-07-15T18:29:38.520Z","type":"message"}
{"nick":"avih","message":"right.","date":"2016-07-15T18:29:50.072Z","type":"message"}
{"nick":"creationix","message":"(in the lua world, I have luv and luvi and luvit)","date":"2016-07-15T18:29:54.565Z","type":"message"}
{"nick":"creationix","message":"luvi uses luv, but you can also use luv from things like plain lua","date":"2016-07-15T18:30:05.924Z","type":"message"}
{"nick":"avih","message":"yeah, which i tried to figure where the boundaries go between those lua thingies, but never quite got it :)","date":"2016-07-15T18:30:26.880Z","type":"message"}
{"nick":"creationix","message":"so seaduk is the JS version of luvi","date":"2016-07-15T18:31:15.831Z","type":"message"}
{"nick":"avih","message":"what does the name mean?","date":"2016-07-15T18:31:31.948Z","type":"message"}
{"nick":"avih","message":"sea?","date":"2016-07-15T18:31:35.883Z","type":"message"}
{"nick":"creationix","message":"it's implemented in C","date":"2016-07-15T18:31:44.654Z","type":"message"}
{"nick":"creationix","action":"is too punny for his own good","date":"2016-07-15T18:31:51.749Z","type":"action"}
{"nick":"creationix","message":"I also have one implemented in Rust that might use duktape","date":"2016-07-15T18:32:18.335Z","type":"message"}
{"nick":"avih","message":"you're all over the place :)","date":"2016-07-15T18:32:35.485Z","type":"message"}
{"nick":"avih","message":"though in a good way ;)","date":"2016-07-15T18:32:39.605Z","type":"message"}
{"nick":"avih","message":"i liked the idea of nucleus, if i got it right, which sounds like it should build on top of dukluv or equivalent - i.e. plain language+libuv binding","date":"2016-07-15T18:33:42.065Z","type":"message"}
{"nick":"avih","message":"then a minimal framework/os on top of that","date":"2016-07-15T18:34:02.936Z","type":"message"}
{"nick":"avih","message":"then the proper framework (node) on top of that","date":"2016-07-15T18:34:13.576Z","type":"message"}
{"nick":"avih","message":"also, not sure about nucleus, but with dukluv, in your colors etc samples, you use print which goes directly to stdout, and not via libuv tty handle - which translates ansi escapes on windows. so on windows your demos are without colors and literal ansi sequences instead","date":"2016-07-15T18:40:39.732Z","type":"message"}
{"nick":"avih","message":"and also break if stdin/out/err are pipes or redirects etc","date":"2016-07-15T18:41:29.897Z","type":"message"}
{"nick":"avih","message":"which is why i wrote the stream abstraction over pipe/file/tty","date":"2016-07-15T18:41:50.782Z","type":"message"}
{"nick":"avih","message":"file append redirect (>>) is extra nasty since you get the file handle and have to append yourself.","date":"2016-07-15T18:50:20.656Z","type":"message"}
{"nick":"creationix","message":"avih right.  Like I said.  I havn't made it work on windows well yet","date":"2016-07-15T18:52:21.475Z","type":"message"}
{"nick":"creationix","message":"It will of course use libuv tty for stdout on windows eventaully","date":"2016-07-15T18:52:37.280Z","type":"message"}
{"nick":"creationix","message":"though nucleus itself will probably not have any of this, it will be done in userspace js libraries","date":"2016-07-15T18:53:00.364Z","type":"message"}
{"nick":"avih","message":"it's not bad, just needs some refinements :) and it works. statically linked ~600k, and ~250k upx'ed, which is kinda cool :)","date":"2016-07-15T18:53:10.300Z","type":"message"}
{"nick":"creationix","message":"yeah, trying to keep it small","date":"2016-07-15T18:53:20.643Z","type":"message"}
{"nick":"creationix","message":"250k upx, I should use that more often","date":"2016-07-15T18:53:29.146Z","type":"message"}
{"nick":"creationix","message":"does that play nice with the zip appending trick?","date":"2016-07-15T18:53:49.995Z","type":"message"}
{"nick":"avih","message":"not sure which trick is that","date":"2016-07-15T18:54:06.226Z","type":"message"}
{"nick":"saghul","date":"2016-07-15T18:54:22.328Z","type":"join"}
{"nick":"creationix","message":"so a nucleus app will be a nucleus implementation (like seaduk) concatenated with a zip file containing all the JS assets","date":"2016-07-15T18:54:29.424Z","type":"message"}
{"nick":"creationix","message":"it works because exe files ignore the end and zip files ignore the beginning","date":"2016-07-15T18:54:41.547Z","type":"message"}
{"nick":"creationix","message":"as long as upx binaries still ignore the end, it should work","date":"2016-07-15T18:54:53.774Z","type":"message"}
{"nick":"avih","message":"not sure, but upx has quite a few options, one might work","date":"2016-07-15T18:55:12.937Z","type":"message"}
{"nick":"avih","message":"but they definitely have collision potential","date":"2016-07-15T18:55:21.682Z","type":"message"}
{"nick":"avih","message":"also, will you take a PR for this? https://github.com/creationix/dukluv/issues/25","date":"2016-07-15T18:55:35.153Z","type":"message"}
{"nick":"avih","message":"creationix: that's my patch for it http://pastebin.com/WcGF2F4v","date":"2016-07-15T18:57:20.334Z","type":"message"}
{"nick":"creationix","message":"miniz is a mess.  I've had to patch so much","date":"2016-07-15T18:57:59.153Z","type":"message"}
{"nick":"creationix","message":"but it's small and works","date":"2016-07-15T18:58:02.075Z","type":"message"}
{"nick":"creationix","message":"PR should be fine","date":"2016-07-15T18:58:20.784Z","type":"message"}
{"nick":"avih","message":"i dislike the forceinline thingy","date":"2016-07-15T18:58:28.041Z","type":"message"}
{"nick":"creationix","message":"really I should just write my own zip handling code, but it's just hard enough I'd rather use an existing library","date":"2016-07-15T18:59:12.058Z","type":"message"}
{"nick":"creationix","message":"and I have no intentions of re-implementing inflate/deflate","date":"2016-07-15T18:59:24.677Z","type":"message"}
{"nick":"avih","message":"iirc there's libz which should be simpler and cleaner, but not sure if it supports zip.","date":"2016-07-15T19:00:38.744Z","type":"message"}
{"nick":"creationix","message":"right, if it's small and clean I'd be willing to implement zip myself","date":"2016-07-15T19:01:01.187Z","type":"message"}
{"nick":"creationix","message":"zip if pretty simple","date":"2016-07-15T19:01:03.968Z","type":"message"}
{"nick":"avih","message":"you should ask midipix/sortix on #midipix","date":"2016-07-15T19:01:12.836Z","type":"message"}
{"nick":"avih","message":"sortie*","date":"2016-07-15T19:01:54.501Z","type":"message"}
{"nick":"creationix","message":"I wonder how it compares to miniz on size","date":"2016-07-15T19:05:09.451Z","type":"message"}
{"nick":"creationix","message":"certainly looks like a cleaner zlib","date":"2016-07-15T19:05:20.883Z","type":"message"}
{"nick":"saghul","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-07-15T19:09:27.843Z","type":"quit"}
{"nick":"creationix","message":"avih, so you say mujs is pretty complete ES5 and smaller than duktape?","date":"2016-07-15T19:09:50.073Z","type":"message"}
{"nick":"avih","message":"yes for both","date":"2016-07-15T19:10:02.146Z","type":"message"}
{"nick":"avih","message":"it also has few es6 bits, but iirc less than duktape","date":"2016-07-15T19:10:18.510Z","type":"message"}
{"nick":"avih","message":"and it doesn't have .substr because it's only common but non standard :)","date":"2016-07-15T19:11:03.132Z","type":"message"}
{"nick":"avih","message":"i'd imagine it has more bugs though, since it's not used at many places. i reported many bugs which were fixed quickly, and it does get occasional bugfixes, and seems to work well, but.. it's less tested","date":"2016-07-15T19:12:32.301Z","type":"message"}
{"nick":"avih","message":"(it does have .substring of course)","date":"2016-07-15T19:15:24.948Z","type":"message"}
{"nick":"PerilousApricot","date":"2016-07-15T19:22:40.441Z","type":"join"}
{"nick":"PerilousApricot","reason":"Ping timeout: 240 seconds","date":"2016-07-15T19:27:11.404Z","type":"quit"}
{"nick":"Harageth","reason":"Remote host closed the connection","date":"2016-07-15T19:28:16.830Z","type":"quit"}
{"nick":"rmg_","date":"2016-07-15T19:30:51.374Z","type":"join"}
{"nick":"rmg_","reason":"Ping timeout: 276 seconds","date":"2016-07-15T19:35:57.331Z","type":"quit"}
{"nick":"avih","message":"creationix: in \"nucleus.compile(string, path)\" ( https://github.com/nucleus-js/design/blob/master/api/nucleus.md ) you say \"The source is wrapped in function () { ... }\". it's not literally, right? since duktape has compile in a global context, and if you literally wrap it, then the source mapping will be wrong, at the very least the column if you don't use newlines at the wrapper","date":"2016-07-15T19:57:26.167Z","type":"message"}
{"nick":"avih","message":"you probably want to say \"semantically wrapped as a function\"","date":"2016-07-15T19:58:16.815Z","type":"message"}
{"nick":"creationix","message":"I think it's literally wrapped in the implementation","date":"2016-07-15T19:58:37.981Z","type":"message"}
{"nick":"creationix","message":"but I'm open to tweaking things","date":"2016-07-15T19:58:42.206Z","type":"message"}
{"nick":"avih","message":"literally is not good enough, for a perfectionist as yourself ;)","date":"2016-07-15T19:58:59.434Z","type":"message"}
{"nick":"creationix","message":"well I wanted to use duktape's function scope which requires this","date":"2016-07-15T19:59:17.139Z","type":"message"}
{"nick":"avih","message":"let me see what i did with mpv. iirc there's duk_compile or so which does the same thing without your own wrapping","date":"2016-07-15T19:59:33.600Z","type":"message"}
{"nick":"creationix","message":"ideally nucleus will expose all the different targets and not do any automatic wrapping","date":"2016-07-15T19:59:49.383Z","type":"message"}
{"nick":"creationix","message":"right, so I'm using DUK_COMPILE_FUNCTION","date":"2016-07-15T20:00:48.111Z","type":"message"}
{"nick":"avih","message":"wait, maybe i'm interpreting it wrongly. what does it actually do?","date":"2016-07-15T20:01:37.359Z","type":"message"}
{"nick":"avih","message":"i had the impression it compiles string as if it was loaded as the file path. is that correct?","date":"2016-07-15T20:02:11.617Z","type":"message"}
{"nick":"creationix","message":"\"The bytecode generated for global and eval code is currently slower than that generated for functions\"","date":"2016-07-15T20:02:17.821Z","type":"message"}
{"nick":"creationix","message":"(reason I went with FUNCTION mode)","date":"2016-07-15T20:02:29.161Z","type":"message"}
{"nick":"avih","message":"doesn't matter. it's far from a hot code path","date":"2016-07-15T20:02:35.369Z","type":"message"}
{"nick":"avih","message":"it's typically used for require and that's it. it 's not a performance bottleneck","date":"2016-07-15T20:03:06.546Z","type":"message"}
{"nick":"creationix","message":"yeah, should probably use global by default and not wrap","date":"2016-07-15T20:04:12.835Z","type":"message"}
{"nick":"creationix","message":"for some reason I thought it made all code slow, even embedded functions","date":"2016-07-15T20:04:25.817Z","type":"message"}
{"nick":"avih","message":"i think not, but if unsure, consult sami","date":"2016-07-15T20:05:15.745Z","type":"message"}
{"nick":"avih","message":"i find it hard to believe though that perf is affected after compilation","date":"2016-07-15T20:05:38.464Z","type":"message"}
{"nick":"avih","message":"it's not impossible though, but still, literal wrapper is not clean. better have good code, and consider perf issues once you actually have them IMO","date":"2016-07-15T20:06:50.189Z","type":"message"}
{"nick":"avih","message":"(disclaimer, i work with mozilla, at the firefox performance team)","date":"2016-07-15T20:07:17.823Z","type":"message"}
{"nick":"creationix","message":"avih, yeah not disagreeing","date":"2016-07-15T20:07:47.851Z","type":"message"}
{"nick":"creationix","message":"I should change that","date":"2016-07-15T20:07:54.497Z","type":"message"}
{"nick":"creationix","message":"the design for nucleus is still fluid so feel free to suggest anything","date":"2016-07-15T20:08:07.875Z","type":"message"}
{"nick":"avih","message":"i am :)","date":"2016-07-15T20:08:14.802Z","type":"message"}
{"nick":"creationix","message":":)","date":"2016-07-15T20:08:35.881Z","type":"message"}
{"nick":"creationix","action":"re-creates #node.js room on freenode","date":"2016-07-15T20:09:25.357Z","type":"action"}
{"nick":"creationix","message":"* #nucleus.js","date":"2016-07-15T20:09:31.876Z","type":"message"}
{"nick":"avih","message":"lol","date":"2016-07-15T20:09:37.344Z","type":"message"}
{"nick":"creationix","message":"node core said they *might* eventually use nucleus, but it's distant and unknown probility","date":"2016-07-15T20:10:11.395Z","type":"message"}
{"nick":"creationix","message":"personally I don't think there is a chance unless nucleus is a raging success and gets to compariable popularity as node","date":"2016-07-15T20:10:48.832Z","type":"message"}
{"nick":"avih","message":"for now, i think they're being polite ;)","date":"2016-07-15T20:11:06.058Z","type":"message"}
{"nick":"avih","message":"but who knows","date":"2016-07-15T20:11:12.598Z","type":"message"}
{"nick":"creationix","message":"I'm not worried.  I'm building it for a need I have, not to change node","date":"2016-07-15T20:11:31.362Z","type":"message"}
{"nick":"avih","message":"yup","date":"2016-07-15T20:11:41.784Z","type":"message"}
{"nick":"creationix","message":"though eventual compat with the npm ecosystem is a stated goal","date":"2016-07-15T20:11:49.917Z","type":"message"}
{"nick":"creationix","message":"(via some userspace library on top of nucleus)","date":"2016-07-15T20:11:58.654Z","type":"message"}
{"nick":"avih","message":" tried to run highlightjs and prism.js on dukluv with my minimal require+console+std* streams, and it bumped into a duktape issue of unsupported regex - on both","date":"2016-07-15T20:13:31.415Z","type":"message"}
{"nick":"avih","message":"seemingly duktape has an open issue on that - how much non standard but common regex syntax to support","date":"2016-07-15T20:14:06.583Z","type":"message"}
{"nick":"creationix","message":"that's a shame, I thought most of that was implemented already","date":"2016-07-15T20:14:21.864Z","type":"message"}
{"nick":"creationix","message":"I guess they use some esoteric stuff","date":"2016-07-15T20:14:28.690Z","type":"message"}
{"nick":"avih","message":"didn't look deeper for now","date":"2016-07-15T20:14:38.534Z","type":"message"}
{"nick":"creationix","message":"maybe just comment on the duktape issue that those libraries don't run?","date":"2016-07-15T20:14:57.054Z","type":"message"}
{"nick":"avih","message":"i wrote a console syntax highlighter (like gnu source-highlight) for less, and it uses highlight.js and/or prism.js as backend (including parsing their styles css) and it works perfectly in node, so i tried that with dukluv","date":"2016-07-15T20:15:34.179Z","type":"message"}
{"nick":"avih","message":"i might add a comment, once i find out exactly which part of the syntax is rejected","date":"2016-07-15T20:16:36.115Z","type":"message"}
{"nick":"creationix","message":"avih, just for you https://github.com/nucleus-js/design/issues/27","date":"2016-07-15T20:18:09.402Z","type":"message"}
{"nick":"avih","message":":)","date":"2016-07-15T20:18:41.169Z","type":"message"}
{"nick":"avih","message":"creationix: btw, since you were interested in mujs, this is how similar their APIs are https://github.com/avih/mpv/blob/js-duk/player/mud_js.h","date":"2016-07-15T20:19:47.849Z","type":"message"}
{"nick":"creationix","message":"yeah, both seem to follow lua's API","date":"2016-07-15T20:20:18.877Z","type":"message"}
{"nick":"creationix","message":"porting luvit to dukluv was mostly copy-paste + search-replace","date":"2016-07-15T20:20:33.204Z","type":"message"}
{"nick":"creationix","message":"rust with rjs is another story.  I bought tickets to rustconf since I clearly don't have the required skills there","date":"2016-07-15T20:21:09.102Z","type":"message"}
{"nick":"avih","message":"never got near rust TBH","date":"2016-07-15T20:22:24.059Z","type":"message"}
{"nick":"avih","message":"though it does sound promising","date":"2016-07-15T20:22:36.496Z","type":"message"}
{"nick":"creationix","message":"I love the design of the language, but it's learning curve is steep","date":"2016-07-15T20:23:35.483Z","type":"message"}
{"nick":"creationix","message":"I've *never* been willing to pay to learn a language till rust. (it's that exciting and that difficult)","date":"2016-07-15T20:24:08.897Z","type":"message"}
{"nick":"avih","message":":)","date":"2016-07-15T20:25:55.521Z","type":"message"}
{"nick":"creationix","message":"hmm, now I remember the other reason I went with function mode and not global mdoe","date":"2016-07-15T20:27:30.662Z","type":"message"}
{"nick":"creationix","message":"you can \"return\" in global mode to export something","date":"2016-07-15T20:27:39.013Z","type":"message"}
{"nick":"creationix","message":"it's compiled as a function, but there is no return","date":"2016-07-15T20:27:49.272Z","type":"message"}
{"nick":"avih","message":"not sure i follow","date":"2016-07-15T20:29:25.675Z","type":"message"}
{"nick":"avih","message":"you expect the file at 'path' to just return outside of a function?","date":"2016-07-15T20:29:44.578Z","type":"message"}
{"nick":"creationix","message":"https://github.com/nucleus-js/seaduk/blob/master/test-app/deps/theme-256.js#L34","date":"2016-07-15T20:29:53.911Z","type":"message"}
{"nick":"creationix","message":"would be \"module.exports = theme\" in common js","date":"2016-07-15T20:30:23.537Z","type":"message"}
{"nick":"avih","message":"creationix: module.exports = there;","date":"2016-07-15T20:30:28.870Z","type":"message"}
{"nick":"avih","message":"theme*","date":"2016-07-15T20:30:33.407Z","type":"message"}
{"nick":"creationix","message":"right, but that depends on a CJS module system which isn't part of nucleus","date":"2016-07-15T20:30:47.029Z","type":"message"}
{"nick":"creationix","message":"it's fine, I can work with global mode","date":"2016-07-15T20:30:54.016Z","type":"message"}
{"nick":"creationix","message":"the last expression is returned like in eval","date":"2016-07-15T20:31:00.089Z","type":"message"}
{"nick":"avih","message":"maybe it should be? it's really not that complex","date":"2016-07-15T20:31:01.016Z","type":"message"}
{"nick":"creationix","message":"and I can manually wrap when I want to hide things","date":"2016-07-15T20:31:08.014Z","type":"message"}
{"nick":"creationix","message":"a simple CJS isn't complex, but people have opinions","date":"2016-07-15T20:31:31.953Z","type":"message"}
{"nick":"avih","message":"you can also set the global theme to be your theme","date":"2016-07-15T20:31:44.358Z","type":"message"}
{"nick":"creationix","message":"the point of this is to push such bikeshedding to userspace","date":"2016-07-15T20:31:47.611Z","type":"message"}
{"nick":"avih","message":"but dunno, returning when there's no function is not without use cases, but looks weird, and non conformant to known standards","date":"2016-07-15T20:32:21.003Z","type":"message"}
{"nick":"creationix","message":"yeah, I'm changing my code to work in global mode","date":"2016-07-15T20:32:37.824Z","type":"message"}
{"nick":"PerilousApricot","date":"2016-07-15T20:32:45.707Z","type":"join"}
{"nick":"creationix","message":"it's a little more work, but quite workable","date":"2016-07-15T20:32:45.937Z","type":"message"}
{"nick":"creationix","message":"and most people will use some module system","date":"2016-07-15T20:32:50.461Z","type":"message"}
{"nick":"avih","message":"most probably","date":"2016-07-15T20:33:02.755Z","type":"message"}
{"nick":"avih","message":"also, i don't have enough background on this, but i found main.js to be a bit harsh requirement","date":"2016-07-15T20:33:33.927Z","type":"message"}
{"nick":"creationix","message":"I just need to wrap my modules in an IIFE","date":"2016-07-15T20:33:45.025Z","type":"message"}
{"nick":"creationix","message":"what's harsh?","date":"2016-07-15T20:33:58.500Z","type":"message"}
{"nick":"avih","message":"i was thinking more of node_modules/seaduk.bootstrap.js as a starting point","date":"2016-07-15T20:34:01.757Z","type":"message"}
{"nick":"creationix","message":"worried about name conflicts?","date":"2016-07-15T20:34:13.777Z","type":"message"}
{"nick":"avih","message":"no","date":"2016-07-15T20:34:23.615Z","type":"message"}
{"nick":"avih","message":"but, i'm not sure what's the standard here, if there is one, which is the reason i said i'm not sure about it","date":"2016-07-15T20:34:50.400Z","type":"message"}
{"nick":"avih","message":"the hardcoded filename requirement (re what's harsh)","date":"2016-07-15T20:36:26.026Z","type":"message"}
{"nick":"creationix","message":"nucleus is the standard.  We just need something to bootstrap the process","date":"2016-07-15T20:36:59.461Z","type":"message"}
{"nick":"creationix","message":"I guess I could teach it to look for a \"main\" field in a package.json or something","date":"2016-07-15T20:37:22.132Z","type":"message"}
{"nick":"avih","message":"no disagreement there","date":"2016-07-15T20:37:25.568Z","type":"message"}
{"nick":"creationix","message":"also lots of this is porting from luvit where I've done this in production ","date":"2016-07-15T20:37:41.532Z","type":"message"}
{"nick":"creationix","message":"it's main.lua in luvit","date":"2016-07-15T20:37:45.995Z","type":"message"}
{"nick":"avih","message":"yeah, probably more node-like in that, but, i'm not sure what the node standard is","date":"2016-07-15T20:37:53.854Z","type":"message"}
{"nick":"creationix","message":"nobody has ever complained (not that we have that many users)","date":"2016-07-15T20:37:57.114Z","type":"message"}
{"nick":"PerilousApricot","reason":"Ping timeout: 276 seconds","date":"2016-07-15T20:38:21.673Z","type":"quit"}
{"nick":"creationix","message":"but so far I've avoided assuming \"node_modules\" or \"package.json\" have any meaning","date":"2016-07-15T20:38:31.559Z","type":"message"}
{"nick":"creationix","message":"minimal assumptions and conventions is the goal at this layer","date":"2016-07-15T20:38:55.802Z","type":"message"}
{"nick":"avih","message":"that doesn't sound like a good reason to keep ignoring the subject ;) (nor a good reason to blindly accept it ;) )","date":"2016-07-15T20:38:58.889Z","type":"message"}
{"nick":"avih","message":"yeah, i agree there","date":"2016-07-15T20:39:16.035Z","type":"message"}
{"nick":"creationix","message":"I mean, who do C programs start at main()?","date":"2016-07-15T20:39:29.654Z","type":"message"}
{"nick":"creationix","message":"*why","date":"2016-07-15T20:39:32.880Z","type":"message"}
{"nick":"avih","message":"ask Ritchie? :)","date":"2016-07-15T20:39:46.067Z","type":"message"}
{"nick":"creationix","message":"something is needed.  I can do init.js or bootstrap.js if that makes more sense, but I think it needs to be hard-coded","date":"2016-07-15T20:39:57.102Z","type":"message"}
{"nick":"avih","message":"i think so too","date":"2016-07-15T20:40:08.758Z","type":"message"}
{"nick":"creationix","message":"I didn't go with init.lua for luvit since that already has special meaning (akin to index.html in web servers)","date":"2016-07-15T20:40:40.293Z","type":"message"}
{"nick":"avih","message":"my issue was with \"main.js\" being that hardcoded thing. i thought it should be more hidden to allow more \"free\" \"public\" structure","date":"2016-07-15T20:40:45.631Z","type":"message"}
{"nick":"creationix","message":"now I do allow setting a custom main when running via nucleus","date":"2016-07-15T20:41:51.959Z","type":"message"}
{"nick":"avih","message":"if your bootstrap point is more hidden, then the top level structure could be made to fit the specific application","date":"2016-07-15T20:41:57.884Z","type":"message"}
{"nick":"creationix","message":"mostly this is used for a group of unit tests sharing common files, but having different entry points","date":"2016-07-15T20:42:18.529Z","type":"message"}
{"nick":"avih","message":"well. i shouldn't keep this specific discussion going since i don't have enough grounds to stand on. it's just a hunch","date":"2016-07-15T20:43:29.483Z","type":"message"}
{"nick":"creationix","message":"it's interesting","date":"2016-07-15T20:43:43.583Z","type":"message"}
{"nick":"avih","message":"yes, and important in the overal design too, though most probably almost fully orthogonal to most other things","date":"2016-07-15T20:44:28.032Z","type":"message"}
{"nick":"avih","message":"it might as well be a config value or a command line option which is added when creating the compound app","date":"2016-07-15T20:45:09.308Z","type":"message"}
{"nick":"creationix","message":"so something well-known and probably static is given.  I guess the question is about visibility","date":"2016-07-15T20:45:21.381Z","type":"message"}
{"nick":"creationix","message":"maybe a .bootstrap.js","date":"2016-07-15T20:45:32.649Z","type":"message"}
{"nick":"avih","message":"that sounds good to me","date":"2016-07-15T20:45:40.615Z","type":"message"}
{"nick":"creationix","message":"or .nucleus.init.js","date":"2016-07-15T20:45:40.853Z","type":"message"}
{"nick":"avih","message":"better :)","date":"2016-07-15T20:45:46.240Z","type":"message"}
{"nick":"creationix","message":"the fact that the app uses nucleus should not be highly visible","date":"2016-07-15T20:46:11.364Z","type":"message"}
{"nick":"avih","message":"i like the 'nucleus' in it, since it has good semantics","date":"2016-07-15T20:46:17.836Z","type":"message"}
{"nick":"creationix","message":"I just worry about people not seeing the file and getting confused","date":"2016-07-15T20:46:54.473Z","type":"message"}
{"nick":"avih","message":"not highly, but it's still a nucleus only/mostly, right?","date":"2016-07-15T20:46:58.134Z","type":"message"}
{"nick":"creationix","message":"cp oldapp/* newapp/; nucleus newapp","date":"2016-07-15T20:47:07.185Z","type":"message"}
{"nick":"avih","message":":)","date":"2016-07-15T20:47:14.223Z","type":"message"}
{"nick":"Harageth","date":"2016-07-15T20:48:04.167Z","type":"join"}
{"nick":"avih","message":"i don't yet have a full grasp of the relations between nucleus/duktape/libuv, so i don't have a good mental model of what might be more common and what not","date":"2016-07-15T20:48:38.080Z","type":"message"}
{"nick":"avih","message":"but the point is, i think, that this is a nucleus config which defines the bootstrap of the app. and it's a nucleus-only config if i understand correctly","date":"2016-07-15T20:50:32.929Z","type":"message"}
{"nick":"avih","message":"i.e. if the app is also fit to run as non-nucleus, then it might need a different bootstrap code","date":"2016-07-15T20:51:14.225Z","type":"message"}
{"nick":"zju3","reason":"Ping timeout: 276 seconds","date":"2016-07-15T20:52:00.323Z","type":"quit"}
{"nick":"creationix","message":"avih: I see","date":"2016-07-15T20:54:19.154Z","type":"message"}
{"nick":"zju3","date":"2016-07-15T20:54:53.858Z","type":"join"}
{"nick":"avih","message":"creationix: in https://github.com/nucleus-js/seaduk/commit/99da0b7 do you really need the function wrapper? iirc duk_compile (or at least dik_pcompile) already isolates it and compiles it as a function, so unless you tested that your var statements end up on the global object, i think they won't","date":"2016-07-15T20:56:10.281Z","type":"message"}
{"nick":"creationix","message":"the docs clearly state the default is just like script tags","date":"2016-07-15T20:58:03.137Z","type":"message"}
{"nick":"creationix","message":"it would make globals","date":"2016-07-15T20:58:07.740Z","type":"message"}
{"nick":"creationix","message":"\"compiles into a function with zero arguments, which executes like a top level Ecmascript program\"","date":"2016-07-15T20:58:19.059Z","type":"message"}
{"nick":"avih","message":"right, so it's already a function, and a function's vars are not global","date":"2016-07-15T20:58:50.515Z","type":"message"}
{"nick":"avih","message":"basically, just like your wrapper does i think. wrapped in a function with zero args and executed at the global context...","date":"2016-07-15T20:59:20.069Z","type":"message"}
{"nick":"tunniclm_","reason":"Read error: No route to host","date":"2016-07-15T20:59:52.511Z","type":"quit"}
{"nick":"creationix","message":"oh, on the utils","date":"2016-07-15T21:00:07.886Z","type":"message"}
{"nick":"avih","message":"yes","date":"2016-07-15T21:00:13.850Z","type":"message"}
{"nick":"creationix","message":"the function statements in the main library would be globals, but not the vars","date":"2016-07-15T21:00:31.543Z","type":"message"}
{"nick":"creationix","action":"has been doing too much lua where functions and vars have identical scoping rules","date":"2016-07-15T21:00:49.980Z","type":"action"}
{"nick":"avih","message":"right, but it's an anonymous function, so no pollution","date":"2016-07-15T21:00:57.425Z","type":"message"}
{"nick":"tunniclm_","date":"2016-07-15T21:00:59.698Z","type":"join"}
{"nick":"brson","date":"2016-07-15T21:03:31.332Z","type":"join"}
{"nick":"creationix","message":"avih, even simple, a single object literal :) https://github.com/nucleus-js/seaduk/commit/21d69f9e1bababb3f990663800c4ea71bccd4f40","date":"2016-07-15T21:05:58.914Z","type":"message"}
{"nick":"creationix","message":"should perform a lot better for what it's worth (not a bottleneck at all)","date":"2016-07-15T21:06:20.157Z","type":"message"}
{"nick":"avih","message":"nice, though not sure why it would affect/improve perf","date":"2016-07-15T21:07:09.077Z","type":"message"}
{"nick":"creationix","message":"a single literal versus a dozen property sets","date":"2016-07-15T21:07:25.072Z","type":"message"}
{"nick":"avih","message":"probably some, since it's just evaluation of an object literal","date":"2016-07-15T21:07:31.474Z","type":"message"}
{"nick":"creationix","message":"depends on the actual bytecode","date":"2016-07-15T21:07:31.822Z","type":"message"}
{"nick":"creationix","message":"property writes are pretty slow I would think","date":"2016-07-15T21:07:47.843Z","type":"message"}
{"nick":"avih","message":"yes. well.. it would be faster indeed :)","date":"2016-07-15T21:07:50.096Z","type":"message"}
{"nick":"avih","message":"but the higher value is the clean-ness :)","date":"2016-07-15T21:08:21.361Z","type":"message"}
{"nick":"creationix","message":"right, I doubt the performance would ever matter","date":"2016-07-15T21:08:37.369Z","type":"message"}
{"nick":"avih","message":"yep btw, i have a console colors module which is both very direct and with very nice syntax https://0x0.st/mjZ.js","date":"2016-07-15T21:09:52.825Z","type":"message"}
{"nick":"avih","message":"you do sgr(\"bold blue\") + myText + sgr(); supports xterm256 and true colors as web colors syntax (#ff0000 or #f00) and color names etc","date":"2016-07-15T21:10:58.342Z","type":"message"}
{"nick":"avih","message":"as well as true color to 256 colors conversion","date":"2016-07-15T21:11:20.385Z","type":"message"}
{"nick":"avih","message":"it's part of the console syntax highlighter, but i haven't published it yet","date":"2016-07-15T21:11:42.919Z","type":"message"}
{"nick":"creationix","message":"yeah, this is just what I had written for dukluv.  nucleus itself won't ship with any of this","date":"2016-07-15T21:12:42.928Z","type":"message"}
{"nick":"creationix","message":"except for maybe the unit tests","date":"2016-07-15T21:12:52.257Z","type":"message"}
{"nick":"avih","message":"i like things which are both straight forward (i.e. no limiting abstractions) but also with more humane interface, which is why i like dukluv ;) it does what it says on the tin, and that's it","date":"2016-07-15T21:15:34.675Z","type":"message"}
{"nick":"avih","message":"abstractions do have a place of course, but in a separate domain than the straight forward stuff","date":"2016-07-15T21:16:21.068Z","type":"message"}
{"nick":"txdv","message":"dukluv?","date":"2016-07-15T21:32:00.175Z","type":"message"}
{"nick":"rmg_","date":"2016-07-15T21:32:19.339Z","type":"join"}
{"nick":"txdv","message":"creationix at it with the funny names","date":"2016-07-15T21:32:19.524Z","type":"message"}
{"nick":"txdv","message":"javascript on devices with 64kb ","date":"2016-07-15T21:33:00.907Z","type":"message"}
{"nick":"txdv","message":"what could go wrong?","date":"2016-07-15T21:33:03.195Z","type":"message"}
{"nick":"PerilousApricot","date":"2016-07-15T21:33:53.943Z","type":"join"}
{"nick":"avih","message":"duktape happens to work just as well on desktop systems, and is a bit simpler than v8","date":"2016-07-15T21:33:57.023Z","type":"message"}
{"nick":"txdv","message":"what isnt simpler than v8?","date":"2016-07-15T21:34:45.421Z","type":"message"}
{"nick":"txdv","message":"v8 has the potential to become skynet","date":"2016-07-15T21:34:51.046Z","type":"message"}
{"nick":"avih","message":"so if you need an embedded scripting for your app, possibly duktape (or mujs) would be a better choice than using v8","date":"2016-07-15T21:34:51.231Z","type":"message"}
{"nick":"avih","message":"it was an understatement :)","date":"2016-07-15T21:35:01.714Z","type":"message"}
{"nick":"avih","message":"regardless if your app runs on a 64K SOC or a plain desktop app","date":"2016-07-15T21:35:46.703Z","type":"message"}
{"nick":"creationix","message":"txdv if you don't like the bad puns stay away from luvit's docs","date":"2016-07-15T21:36:36.808Z","type":"message"}
{"nick":"creationix","message":"the getting started guide has gems like \"get lit and make luv\"","date":"2016-07-15T21:36:48.581Z","type":"message"}
{"nick":"avih","message":"wait, how's rubi related?!?","date":"2016-07-15T21:37:26.200Z","type":"message"}
{"nick":"rmg_","reason":"Ping timeout: 276 seconds","date":"2016-07-15T21:37:30.365Z","type":"quit"}
{"nick":"PerilousApricot","reason":"Ping timeout: 250 seconds","date":"2016-07-15T21:38:10.887Z","type":"quit"}
{"nick":"avih","message":"creationix: \"nucleus.base - A string containing the base path of the resource bundle. If running from a directory it will be the directory path, if it's a zip, it will be path to the zip.\" <-- i'm guessing path to the zip in a way which could be concatenated with a path inside the zip? such as nucleus.join_paths(nucleus.base, 'main.js') ?","date":"2016-07-15T21:41:12.691Z","type":"message"}
{"nick":"avih","message":"i.e. the app shouldn't care about its bundling, and nucleus.base + \"main.js\" (assuming that's our bootstrap) will always work?","date":"2016-07-15T21:42:35.636Z","type":"message"}
{"nick":"creationix","message":"the bundle fs APIs are apart from system FS APIs","date":"2016-07-15T21:43:05.208Z","type":"message"}
{"nick":"creationix","message":"there is no unified vfs API for both","date":"2016-07-15T21:43:14.804Z","type":"message"}
{"nick":"creationix","message":"in other words, when running in zip mode, you can't read outside the zip","date":"2016-07-15T21:43:24.556Z","type":"message"}
{"nick":"creationix","message":"not using the provided APIs at least.  Userspace could obviously do it with this path","date":"2016-07-15T21:43:39.622Z","type":"message"}
{"nick":"avih","message":"hmm..","date":"2016-07-15T21:43:47.757Z","type":"message"}
{"nick":"creationix","message":"so main.js is always \"/main.js\" or just \"main.js\"","date":"2016-07-15T21:44:04.303Z","type":"message"}
{"nick":"avih","message":"i don't fully follow the logic of where your abstraction ends then","date":"2016-07-15T21:44:11.184Z","type":"message"}
{"nick":"creationix","message":"right the provided path utilities are really only meant for inside the bundle","date":"2016-07-15T21:44:47.073Z","type":"message"}
{"nick":"avih","message":"worth noting at the docs IMO","date":"2016-07-15T21:45:03.461Z","type":"message"}
{"nick":"creationix","message":"(though I did bother to pass all of node's unit tests when I rewrote the path_join function)","date":"2016-07-15T21:45:03.646Z","type":"message"}
{"nick":"avih","message":"nice","date":"2016-07-15T21:45:30.849Z","type":"message"}
{"nick":"avih","message":"so you can't use nucleus.base in nucleus.readfile(path)","date":"2016-07-15T21:46:51.308Z","type":"message"}
{"nick":"creationix","message":"the only reason I provide path utils at all is it makes bootstrapping a module system much easier","date":"2016-07-15T21:47:01.121Z","type":"message"}
{"nick":"creationix","message":"correct","date":"2016-07-15T21:47:07.284Z","type":"message"}
{"nick":"avih","message":"the end of the abstraction is non trivial","date":"2016-07-15T21:47:11.812Z","type":"message"}
{"nick":"creationix","message":"nucleus.readfile is relative to base","date":"2016-07-15T21:47:25.245Z","type":"message"}
{"nick":"avih","message":"i.e. its edge","date":"2016-07-15T21:47:28.048Z","type":"message"}
{"nick":"creationix","message":"it's defined as the minimal primitives required to make something like node in pure JS","date":"2016-07-15T21:48:02.252Z","type":"message"}
{"nick":"creationix","message":"so technically the path utilities are cheating","date":"2016-07-15T21:48:12.743Z","type":"message"}
{"nick":"creationix","message":"but I need them for the mini build system inside nucleus","date":"2016-07-15T21:48:24.936Z","type":"message"}
{"nick":"creationix","message":"bootstrapping concerns are tricky with such a minimal core","date":"2016-07-15T21:48:43.477Z","type":"message"}
{"nick":"avih","message":"yeah, they're needed all right, but the abstraction is misleading","date":"2016-07-15T21:48:44.328Z","type":"message"}
{"nick":"creationix","message":"luvi has similar issues","date":"2016-07-15T21:48:49.037Z","type":"message"}
{"nick":"avih","message":"maybe it needs different namespace or so","date":"2016-07-15T21:48:55.205Z","type":"message"}
{"nick":"creationix","message":"technically you can read outside the bundle using readfile with paths like \"../foo\", but I don't think you should be able to ","date":"2016-07-15T21:50:01.827Z","type":"message"}
{"nick":"creationix","message":"https://github.com/nucleus-js/design/issues/22","date":"2016-07-15T21:50:02.529Z","type":"message"}
{"nick":"creationix","message":"because it breaks when in zip mode","date":"2016-07-15T21:50:12.613Z","type":"message"}
{"nick":"avih","message":"when i thought about bootstrap system for dukluv, i imagined an \"internal\" set of files which are the only files exposed to the dukluv api. these internal files create a minimal system with perfect abstraction, on which the \"app\" files build","date":"2016-07-15T21:50:19.192Z","type":"message"}
{"nick":"creationix","message":"so you know how node.js bundles several JS libraries right?","date":"2016-07-15T21:51:35.440Z","type":"message"}
{"nick":"avih","message":"so these internal files keep a reference to uv, but then delete it from the global objects such that it becomes invisible to the app","date":"2016-07-15T21:51:36.947Z","type":"message"}
{"nick":"avih","message":"no","date":"2016-07-15T21:51:50.627Z","type":"message"}
{"nick":"avih","message":"well.. i think.. somewhat. definitely not fully.","date":"2016-07-15T21:52:08.299Z","type":"message"}
{"nick":"creationix","message":"but yes, that's the idea.  This is why everything is namespaced under nucleus","date":"2016-07-15T21:52:09.960Z","type":"message"}
{"nick":"avih","message":"(how node bundles)","date":"2016-07-15T21:52:13.673Z","type":"message"}
{"nick":"creationix","message":"so the bootstrap system can delete it after getting the references it needs","date":"2016-07-15T21:52:22.389Z","type":"message"}
{"nick":"avih","message":"right","date":"2016-07-15T21:52:44.333Z","type":"message"}
{"nick":"creationix","message":"so technically, it's tricky involving compiling JS somehow and snapshots, but at a high level, the JS (raw or compiled) is embedded in the node binary","date":"2016-07-15T21:53:02.339Z","type":"message"}
{"nick":"avih","message":"the same way i delete Duktape before giving control to the user scripts in mpv","date":"2016-07-15T21:53:04.110Z","type":"message"}
{"nick":"creationix","message":"with a nucleus based node, there would be a zip appended with the js code","date":"2016-07-15T21:53:11.201Z","type":"message"}
{"nick":"creationix","message":"and user apps would still be outside the zip and outside the node binary","date":"2016-07-15T21:53:24.540Z","type":"message"}
{"nick":"creationix","message":"the nucleus.readfile API would only be used to read from this bundled zip","date":"2016-07-15T21:53:37.032Z","type":"message"}
{"nick":"creationix","message":"uv.fs_open and friends would be used to read real files","date":"2016-07-15T21:53:50.633Z","type":"message"}
{"nick":"avih","message":"right, i had the same idea in mind (bundling) - as these internal files would be embedded into the exe, but overridable by files e.g. at mode_modules/dukluv_internal/*","date":"2016-07-15T21:54:22.653Z","type":"message"}
{"nick":"creationix","message":"overridable by files outside the bundle?","date":"2016-07-15T21:54:49.783Z","type":"message"}
{"nick":"avih","message":"only i thought of embedding them at compile time rather than bundling time","date":"2016-07-15T21:54:57.486Z","type":"message"}
{"nick":"creationix","message":"since nucleus can run either out of a folder or zip or appended zip the compile step is optional when developing core modules (this is the main reason for this design actually)","date":"2016-07-15T21:55:36.789Z","type":"message"}
{"nick":"creationix","message":"they are still core modules like node's http module, but the dev workflow is much nicer","date":"2016-07-15T21:55:53.715Z","type":"message"}
{"nick":"avih","message":"well.. i didn't think too far. but my main idea was not a platform like nucleus wants to be, but more a node-like system, where its internal files are embedded so you don't need them, but you can still work on them without recompiling the exe via a hardcoded path","date":"2016-07-15T21:56:07.322Z","type":"message"}
{"nick":"creationix","message":"also if you wanted to, you could make a custom single-file app with your own custom files","date":"2016-07-15T21:56:10.541Z","type":"message"}
{"nick":"avih","message":"well, sounds like it. i still don't have a solid mental model of it","date":"2016-07-15T21:56:55.682Z","type":"message"}
{"nick":"creationix","message":"like I've said.  We've used this model for a year in production on the luvit project so I have some real world experience with it.","date":"2016-07-15T21:57:26.989Z","type":"message"}
{"nick":"avih","message":"yup. definitely valuable","date":"2016-07-15T21:57:42.371Z","type":"message"}
{"nick":"creationix","message":"the luvit package manager allows publishing luvi based apps which users can built using lit","date":"2016-07-15T21:57:42.822Z","type":"message"}
{"nick":"creationix","message":"so `lit make lit://creationix/wscat` and you get a single binary `wscat`","date":"2016-07-15T21:58:00.069Z","type":"message"}
{"nick":"creationix","message":"embedded in it is a luvi binary and a zip file containing wscat and it's dependencies which were all fetched on the fly","date":"2016-07-15T21:58:21.768Z","type":"message"}
{"nick":"creationix","message":"https://luvit.io/lit.html#wscat","date":"2016-07-15T21:58:37.779Z","type":"message"}
{"nick":"avih","message":"yeah.. i still don't get the relations between those three, and seems you really like this triplet semantics, so i'm not really fit to discuss the subject till i actually understand these relations","date":"2016-07-15T21:58:41.167Z","type":"message"}
{"nick":"creationix","message":"it's a branding problem","date":"2016-07-15T21:58:56.959Z","type":"message"}
{"nick":"creationix","message":"luvit 1.0 was a clone on node in lua.  All one big project with lua embedded at compile time","date":"2016-07-15T21:59:11.078Z","type":"message"}
{"nick":"avih","message":"it's a naming problem :)","date":"2016-07-15T21:59:11.263Z","type":"message"}
{"nick":"creationix","message":"luv was an attempt to make the libuv bindings available to the general lua community","date":"2016-07-15T21:59:34.562Z","type":"message"}
{"nick":"creationix","message":"but then I made something in between and called it luvi to be funny","date":"2016-07-15T21:59:48.346Z","type":"message"}
{"nick":"avih","message":"so sounds like luvit should have been based on luv, right?","date":"2016-07-15T21:59:56.933Z","type":"message"}
{"nick":"creationix","message":"luvit 2.0 is","date":"2016-07-15T22:00:02.177Z","type":"message"}
{"nick":"creationix","message":"it's a complete rewrite from the groud up","date":"2016-07-15T22:00:08.749Z","type":"message"}
{"nick":"avih","message":"ok, so what's luvi?","date":"2016-07-15T22:00:20.221Z","type":"message"}
{"nick":"creationix","message":"luvit 1.0 had it's own libuv bindings internally, but libuv changed significantly since then","date":"2016-07-15T22:00:21.466Z","type":"message"}
{"nick":"creationix","message":"luvi is luv + luajit + openssl + miniz + zip asset bundling","date":"2016-07-15T22:00:43.066Z","type":"message"}
{"nick":"creationix","message":"basically the same as nucleus","date":"2016-07-15T22:00:47.032Z","type":"message"}
{"nick":"creationix","message":"and luvit 2.0 is pure lua published as a userspace metapackage","date":"2016-07-15T22:01:01.028Z","type":"message"}
{"nick":"avih","message":"sec. let me digest this","date":"2016-07-15T22:01:20.253Z","type":"message"}
{"nick":"creationix","message":"luvi contains all the C code required to implement luvit","date":"2016-07-15T22:01:40.984Z","type":"message"}
{"nick":"avih","message":"it's like, exactly the same mental block i get when i try to understand the relation between dukluv and nucleus and seaduk","date":"2016-07-15T22:02:13.247Z","type":"message"}
{"nick":"avih","message":"it seems there's some redundancy there","date":"2016-07-15T22:02:35.936Z","type":"message"}
{"nick":"creationix","message":"luvi embeds luv","date":"2016-07-15T22:02:54.837Z","type":"message"}
{"nick":"avih","message":"and so does luvit, yes?","date":"2016-07-15T22:03:06.040Z","type":"message"}
{"nick":"creationix","message":"as well as luajit and everything else written in C","date":"2016-07-15T22:03:08.039Z","type":"message"}
{"nick":"creationix","message":"luvit is a zip file","date":"2016-07-15T22:03:14.084Z","type":"message"}
{"nick":"creationix","message":"with luvit prepended","date":"2016-07-15T22:03:17.526Z","type":"message"}
{"nick":"creationix","message":"*luvi prepended","date":"2016-07-15T22:03:20.821Z","type":"message"}
{"nick":"avih","message":"so luvit is the packaging system?","date":"2016-07-15T22:03:34.246Z","type":"message"}
{"nick":"avih","message":"which defines luvi as its executor?","date":"2016-07-15T22:03:53.506Z","type":"message"}
{"nick":"creationix","message":"luvit is a metapackage that implements the same CLI and set of libraries as luvit 1.0","date":"2016-07-15T22:03:54.005Z","type":"message"}
{"nick":"creationix","message":"but as a luvi app","date":"2016-07-15T22:03:55.992Z","type":"message"}
{"nick":"creationix","message":"https://lit.luvit.io/packages/luvit/luvit/latest","date":"2016-07-15T22:04:00.949Z","type":"message"}
{"nick":"creationix","message":"lit is the closest thing to npm we have.  It downloads dependencies, but also builds luvi based apps","date":"2016-07-15T22:04:48.904Z","type":"message"}
{"nick":"avih","message":"don't you mean luvit based apps?","date":"2016-07-15T22:05:21.453Z","type":"message"}
{"nick":"creationix","message":"correct","date":"2016-07-15T22:05:34.214Z","type":"message"}
{"nick":"avih","message":"(at least i get luv ;) )","date":"2016-07-15T22:05:35.321Z","type":"message"}
{"nick":"creationix","message":"lit, for example is not luvit based","date":"2016-07-15T22:05:42.634Z","type":"message"}
{"nick":"creationix","message":"it uses it's own set of libraries that are coroutine based","date":"2016-07-15T22:05:50.622Z","type":"message"}
{"nick":"creationix","message":"whereas luvit is a node.js clone (event emitters, streams, etc)","date":"2016-07-15T22:06:00.194Z","type":"message"}
{"nick":"creationix","message":"there are a few libs that are shared, but lit does not embed all of luvit","date":"2016-07-15T22:06:15.094Z","type":"message"}
{"nick":"creationix","message":"lit and luvit are peers technically.  Both depend on luvi","date":"2016-07-15T22:06:27.202Z","type":"message"}
{"nick":"creationix","message":"unlike node where npm depends on node directly","date":"2016-07-15T22:06:36.875Z","type":"message"}
{"nick":"avih","message":"ok, so luv is libuv bindings for lua. luvi is a bundling of luvi and a specific set of packages. luvit is a platform which defines packaging of luvi and some user app, and lit is the luvit app which updates luvit packages?","date":"2016-07-15T22:06:40.886Z","type":"message"}
{"nick":"creationix","message":"right, luvit is node for lua","date":"2016-07-15T22:07:04.557Z","type":"message"}
{"nick":"creationix","message":"lit is npm for luvit, but not using luvit","date":"2016-07-15T22:07:13.598Z","type":"message"}
{"nick":"avih","message":"oh","date":"2016-07-15T22:07:25.153Z","type":"message"}
{"nick":"avih","message":"ok, yeah, i only assumed it's a luvit app","date":"2016-07-15T22:07:36.677Z","type":"message"}
{"nick":"creationix","message":"anyway, dinner time.  I'll try to come on later if you have more questions","date":"2016-07-15T22:07:37.082Z","type":"message"}
{"nick":"creationix","message":"or post issues somewhere","date":"2016-07-15T22:07:46.575Z","type":"message"}
{"nick":"avih","message":"i need to let it sink some :) bon apetite","date":"2016-07-15T22:07:52.687Z","type":"message"}
{"nick":"creationix","message":"later","date":"2016-07-15T22:07:59.238Z","type":"message"}
{"nick":"avih","message":"and nice talking to you :)","date":"2016-07-15T22:08:01.901Z","type":"message"}
{"nick":"creationix","message":":)","date":"2016-07-15T22:08:07.238Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 272 seconds","date":"2016-07-15T22:18:38.159Z","type":"quit"}
{"nick":"PerilousApricot","date":"2016-07-15T22:27:53.728Z","type":"join"}
{"nick":"PerilousApricot","reason":"Ping timeout: 260 seconds","date":"2016-07-15T22:32:42.704Z","type":"quit"}
{"nick":"PerilousApricot","date":"2016-07-15T23:01:08.700Z","type":"join"}
{"nick":"PerilousApricot","reason":"Ping timeout: 276 seconds","date":"2016-07-15T23:05:54.673Z","type":"quit"}
{"nick":"PerilousApricot","date":"2016-07-15T23:06:42.109Z","type":"join"}
{"nick":"PerilousApricot","reason":"Ping timeout: 246 seconds","date":"2016-07-15T23:10:51.101Z","type":"quit"}
{"nick":"rgrinberg","reason":"Ping timeout: 276 seconds","date":"2016-07-15T23:31:54.324Z","type":"quit"}
{"nick":"rmg_","date":"2016-07-15T23:33:45.838Z","type":"join"}
{"nick":"rmg_","reason":"Ping timeout: 250 seconds","date":"2016-07-15T23:38:12.845Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-07-15T23:38:30.409Z","type":"join"}
{"nick":"tunniclm_","reason":"Ping timeout: 260 seconds","date":"2016-07-15T23:53:47.726Z","type":"quit"}
