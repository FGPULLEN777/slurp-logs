{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-05-29T00:00:00.480Z","type":"quit"}
{"nick":"ircretary","date":"2013-05-29T00:00:08.229Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-05-29T00:00:54.262Z","type":"nick"}
{"nick":"bnoordhuis","reason":"Ping timeout: 248 seconds","date":"2013-05-29T00:02:09.111Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #76 \u00037UNSTABLE\u000f smartos-ia32 (1/588) osx-ia32 (1/588) smartos-x64 (1/588) osx-x64 (1/588) http://jenkins.nodejs.org/job/libuv-node-integration/76/","date":"2013-05-29T00:03:07.729Z","type":"message"}
{"nick":"mikeal","date":"2013-05-29T00:03:44.768Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-29T00:05:30.611Z","type":"quit"}
{"nick":"pachet","date":"2013-05-29T00:08:24.386Z","type":"join"}
{"nick":"sblom","date":"2013-05-29T00:08:50.090Z","type":"join"}
{"nick":"pachet","reason":"Client Quit","date":"2013-05-29T00:09:43.885Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-05-29T00:09:51.100Z","type":"nick"}
{"nick":"piscisaureus_","date":"2013-05-29T00:14:51.085Z","type":"join"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-05-29T00:16:04.150Z","type":"quit"}
{"nick":"qard","reason":"Quit: Leaving.","date":"2013-05-29T00:16:09.668Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Client Quit","date":"2013-05-29T00:17:35.732Z","type":"quit"}
{"nick":"dominictarr","date":"2013-05-29T00:20:52.321Z","type":"join"}
{"nick":"inolen","date":"2013-05-29T00:25:51.869Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-29T00:28:47.514Z","type":"quit"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-05-29T00:30:37.095Z","type":"quit"}
{"nick":"tjfontaine","message":"trevnorris: so far tracking 3.19 hasn't been a problem, correct?","date":"2013-05-29T00:32:27.395Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-29T00:35:26.766Z","type":"quit"}
{"nick":"qard","date":"2013-05-29T00:39:41.638Z","type":"join"}
{"nick":"dap1","reason":"Quit: Leaving.","date":"2013-05-29T00:48:28.666Z","type":"quit"}
{"nick":"dannycoates","date":"2013-05-29T00:52:16.122Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-05-29T01:08:34.145Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 276 seconds","date":"2013-05-29T01:13:25.125Z","type":"quit"}
{"nick":"timoxley","date":"2013-05-29T01:14:40.352Z","type":"join"}
{"nick":"hz","date":"2013-05-29T01:15:32.981Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-05-29T01:32:38.525Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-05-29T01:45:11.009Z","type":"nick"}
{"nick":"c4milo","date":"2013-05-29T01:46:46.391Z","type":"join"}
{"nick":"sblom","reason":"Ping timeout: 276 seconds","date":"2013-05-29T02:00:13.269Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-05-29T02:09:28.092Z","type":"quit"}
{"nick":"inolen","date":"2013-05-29T02:21:31.330Z","type":"join"}
{"nick":"isaacs","message":"this is my new favorite tumblr: http://nodejsreactions.tumblr.com/","date":"2013-05-29T02:30:47.314Z","type":"message"}
{"nick":"icarot","reason":"Read error: Connection reset by peer","date":"2013-05-29T02:49:05.245Z","type":"quit"}
{"nick":"icarot","date":"2013-05-29T02:49:36.306Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 260 seconds","date":"2013-05-29T02:57:43.849Z","type":"quit"}
{"nick":"mikeal","date":"2013-05-29T03:06:27.871Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-05-29T03:08:27.508Z","type":"quit"}
{"nick":"tjfontaine","message":"huh I think I can reproduce that eaddrnot bug","date":"2013-05-29T03:23:51.187Z","type":"message"}
{"nick":"icarot","reason":"Ping timeout: 256 seconds","date":"2013-05-29T03:39:24.536Z","type":"quit"}
{"nick":"brson","date":"2013-05-29T03:39:37.425Z","type":"join"}
{"nick":"amartens","date":"2013-05-29T03:45:49.647Z","type":"join"}
{"nick":"amartens","reason":"Client Quit","date":"2013-05-29T03:46:05.445Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 240 seconds","date":"2013-05-29T03:55:47.627Z","type":"quit"}
{"nick":"brson","date":"2013-05-29T03:58:05.121Z","type":"join"}
{"nick":"kazupon","date":"2013-05-29T03:59:42.552Z","type":"join"}
{"nick":"janderssen","date":"2013-05-29T04:00:02.940Z","type":"join"}
{"nick":"dsantiago","reason":"Quit: Leaving...","date":"2013-05-29T04:01:37.018Z","type":"quit"}
{"nick":"janderssen","message":"hi, reading the documentation of libuv and the examples, you malloc a uv_tcp_t to pass into uv_read_start, but all the tests and everything seems to not free it (and if I free it, it crashes), so is it fair to say that libuv free's this pointer beneath the scenes ?","date":"2013-05-29T04:02:02.509Z","type":"message"}
{"nick":"tjfontaine","message":"that wouldn't be fair to say, when you say tests you mean in the tests dir?","date":"2013-05-29T04:03:20.622Z","type":"message"}
{"nick":"janderssen","message":"Yep","date":"2013-05-29T04:03:37.336Z","type":"message"}
{"nick":"tjfontaine","message":"most of those don't really malloc, they're stack allocated","date":"2013-05-29T04:03:53.613Z","type":"message"}
{"nick":"janderssen","message":"give me a sec, Ill point to you a test I was looking at","date":"2013-05-29T04:04:20.116Z","type":"message"}
{"nick":"janderssen","message":"so in test-ipc.c, ipc_on_connection_tcp_conn, the \"conn = malloc(sizeof(*conn))\" doesn't get free'd below, is this correct?","date":"2013-05-29T04:05:20.760Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-05-29T04:08:27.906Z","type":"nick"}
{"nick":"janderssen","message":"tjfontaine: also I noticed quite a lot of others do the same in this file, I am probably missing something. ","date":"2013-05-29T04:09:06.221Z","type":"message"}
{"nick":"tjfontaine","message":"janderssen: most of these generally get free'd in their close callback's","date":"2013-05-29T04:11:57.243Z","type":"message"}
{"nick":"janderssen","message":"tjfontaine: than, Ill continue studying further.","date":"2013-05-29T04:12:36.908Z","type":"message"}
{"nick":"normanm","date":"2013-05-29T04:13:37.701Z","type":"join"}
{"nick":"janderssen","message":"tjfontaine: sorry, I meant to say thanks.","date":"2013-05-29T04:13:37.874Z","type":"message"}
{"nick":"tjfontaine","message":"no problem, but in general you are responsible for allocating and freeing the handles and requests","date":"2013-05-29T04:13:58.944Z","type":"message"}
{"nick":"janderssen","message":"ok, that sum's up it up fine, I will have to look at what I am doing wrong in my code. Thanx again.","date":"2013-05-29T04:15:04.746Z","type":"message"}
{"nick":"dsantiago","date":"2013-05-29T04:18:24.992Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: no. hasn't been a problem","date":"2013-05-29T04:39:45.620Z","type":"message"}
{"nick":"tjfontaine","message":"k","date":"2013-05-29T04:39:55.408Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: everything will be going through a deprecation phase, even the removal of Local<>","date":"2013-05-29T04:40:07.928Z","type":"message"}
{"nick":"trevnorris","message":"so we'll have ample time to adjust core.","date":"2013-05-29T04:40:35.498Z","type":"message"}
{"nick":"trevnorris","message":"it's mainly the native module authors that will have a problem upgrading to v0.12","date":"2013-05-29T04:40:57.613Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: I just meant, if you had any inkling that that we may have to rollback off of 3.19","date":"2013-05-29T04:41:02.304Z","type":"message"}
{"nick":"trevnorris","message":"oh no. 3.19 has had a lot of api changes, but so far has been stable.","date":"2013-05-29T04:41:29.928Z","type":"message"}
{"nick":"tjfontaine","message":"mmk","date":"2013-05-29T04:42:49.000Z","type":"message"}
{"nick":"tjfontaine","message":"yang was asking if we needed abort-on-uncaught backported to any other v8 revs","date":"2013-05-29T04:43:18.450Z","type":"message"}
{"nick":"trevnorris","message":"oh, in case we dropped of 3.19. on we'll be good on 3.19.","date":"2013-05-29T04:44:00.914Z","type":"message"}
{"nick":"trevnorris","message":"and actually better we move to the new api for v0.12, so module authors don't need to do a bunch for the v1 release.","date":"2013-05-29T04:44:41.459Z","type":"message"}
{"nick":"tjfontaine","message":"indeed the more churn we can get in before we move to 1.0 the happier everyone will be in the long run","date":"2013-05-29T04:45:12.869Z","type":"message"}
{"nick":"qard","reason":"Quit: Leaving.","date":"2013-05-29T05:26:03.158Z","type":"quit"}
{"nick":"bajtos","date":"2013-05-29T05:33:10.268Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: did you forget the conversations about process.on('beforeExit') today?","date":"2013-05-29T05:34:01.139Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: wasn't listening in.","date":"2013-05-29T05:34:16.457Z","type":"message"}
{"nick":"tjfontaine","message":"ah ok","date":"2013-05-29T05:34:20.491Z","type":"message"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-05-29T05:36:38.541Z","type":"quit"}
{"nick":"Benvie_","reason":"Ping timeout: 276 seconds","date":"2013-05-29T05:37:19.234Z","type":"quit"}
{"nick":"Benvie_","date":"2013-05-29T05:37:59.931Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: I see why this is necessary, but just feel like a possible world of hurt is hidden in there somewhere.","date":"2013-05-29T05:40:33.733Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: I was about to add a comment, I think the test should also include a scenario where someone explicitly calls process.exit()","date":"2013-05-29T05:42:01.796Z","type":"message"}
{"nick":"tjfontaine","message":"or a second test, but anyway","date":"2013-05-29T05:42:13.743Z","type":"message"}
{"nick":"tjfontaine","message":"if process.exit is called, I don't think we should necessarily be allowed to reup the loop, but maybe we should","date":"2013-05-29T05:42:41.824Z","type":"message"}
{"nick":"trevnorris","message":"well, w/ his pr if you call process.exit() then beforeExit is never emitted","date":"2013-05-29T05:44:53.031Z","type":"message"}
{"nick":"tjfontaine","message":"right ya, I was just tracing the code","date":"2013-05-29T05:45:11.669Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-05-29T05:48:14.256Z","type":"nick"}
{"nick":"trevnorris","message":"tjfontaine: this is the type of stupidity that I can see coming though: https://gist.github.com/trevnorris/5668211","date":"2013-05-29T05:48:33.694Z","type":"message"}
{"nick":"tjfontaine","message":"what happens?","date":"2013-05-29T05:50:18.451Z","type":"message"}
{"nick":"trevnorris","message":"never ending loop","date":"2013-05-29T05:50:43.552Z","type":"message"}
{"nick":"tjfontaine","message":"because console.log doesn't flush by the end of keepalive?","date":"2013-05-29T05:51:09.811Z","type":"message"}
{"nick":"tjfontaine","message":"oh because it bounces to the closure","date":"2013-05-29T05:51:47.089Z","type":"message"}
{"nick":"tjfontaine","message":"ya well, we can't fix stupid","date":"2013-05-29T05:51:57.234Z","type":"message"}
{"nick":"tjfontaine","message":"for your test, what happens with process.nextTick that doesn't keep it alive either, does it","date":"2013-05-29T05:52:20.822Z","type":"message"}
{"nick":"trevnorris","message":"yeah. process.nextTick won't keep it alive since it's run in the same event phase of uv_run","date":"2013-05-29T05:52:53.685Z","type":"message"}
{"nick":"tjfontaine","message":"that should probably be documented, it's cute that setImmediate works, but I guess because it re-registers the uv_check at that point","date":"2013-05-29T05:53:48.695Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: I would update the pr with both those examples and ask for clarification at the very least in the docs about it","date":"2013-05-29T05:55:06.869Z","type":"message"}
{"nick":"tjfontaine","message":"see you on the morrow","date":"2013-05-29T05:57:12.632Z","type":"message"}
{"nick":"trevnorris","message":"night","date":"2013-05-29T05:57:22.543Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: wait. process.nextTick does cause beforeExit to fire...","date":"2013-05-29T06:10:31.815Z","type":"message"}
{"nick":"`3rdEden","date":"2013-05-29T06:12:45.192Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: thought nextTick happened at the end of the callback, not on the next round of the event loop.","date":"2013-05-29T06:15:31.911Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: event loop as in the next round of uv_run","date":"2013-05-29T06:15:53.244Z","type":"message"}
{"nick":"rendar","date":"2013-05-29T06:27:56.254Z","type":"join"}
{"nick":"`3rdEden","new_nick":"`3E|BRB","date":"2013-05-29T06:33:12.519Z","type":"nick"}
{"nick":"timoxley","date":"2013-05-29T06:34:54.117Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-05-29T06:37:58.985Z","type":"quit"}
{"nick":"janderssen","reason":"Ping timeout: 252 seconds","date":"2013-05-29T06:59:23.941Z","type":"quit"}
{"nick":"cjd","reason":"Ping timeout: 264 seconds","date":"2013-05-29T07:05:55.345Z","type":"quit"}
{"nick":"kuebk","date":"2013-05-29T07:22:40.074Z","type":"join"}
{"nick":"`3E|BRB","new_nick":"`3E","date":"2013-05-29T07:25:16.443Z","type":"nick"}
{"nick":"csaoh","date":"2013-05-29T07:37:47.603Z","type":"join"}
{"nick":"`3E","reason":"Remote host closed the connection","date":"2013-05-29T07:38:40.099Z","type":"quit"}
{"nick":"dominictarr","date":"2013-05-29T07:48:22.803Z","type":"join"}
{"nick":"`3E","date":"2013-05-29T07:48:32.843Z","type":"join"}
{"nick":"saghul","message":"indutny the osx-select test doesn't compile for me on OSX 10.6 due to the comment synytax","date":"2013-05-29T07:59:43.162Z","type":"message"}
{"nick":"saghul","message":"test/test-osx-select.c: In function ‘run_test_osx_select’:","date":"2013-05-29T07:59:44.825Z","type":"message"}
{"nick":"saghul","message":"test/test-osx-select.c:65: error: expected expression before ‘/’ token","date":"2013-05-29T07:59:45.179Z","type":"message"}
{"nick":"paddybyers","date":"2013-05-29T08:08:00.937Z","type":"join"}
{"nick":"hz","date":"2013-05-29T08:08:40.283Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 252 seconds","date":"2013-05-29T08:19:08.916Z","type":"quit"}
{"nick":"paddybyers","date":"2013-05-29T08:33:21.927Z","type":"join"}
{"nick":"cjd","date":"2013-05-29T08:38:37.288Z","type":"join"}
{"nick":"hij1nx","reason":"Ping timeout: 264 seconds","date":"2013-05-29T08:55:54.200Z","type":"quit"}
{"nick":"hij1nx","date":"2013-05-29T08:56:55.070Z","type":"join"}
{"nick":"dannycoates","reason":"Ping timeout: 276 seconds","date":"2013-05-29T08:58:49.181Z","type":"quit"}
{"nick":"paddybyers","reason":"Ping timeout: 252 seconds","date":"2013-05-29T09:00:23.947Z","type":"quit"}
{"nick":"leonvv","date":"2013-05-29T09:03:27.946Z","type":"join"}
{"nick":"dscape","reason":"Ping timeout: 260 seconds","date":"2013-05-29T09:11:59.884Z","type":"quit"}
{"nick":"`3E","reason":"Remote host closed the connection","date":"2013-05-29T09:14:11.031Z","type":"quit"}
{"nick":"indutny","message":"saghul: ouch","date":"2013-05-29T09:18:10.678Z","type":"message"}
{"nick":"`3rdEden","date":"2013-05-29T09:31:33.021Z","type":"join"}
{"nick":"paddybyers","date":"2013-05-29T09:49:20.981Z","type":"join"}
{"nick":"leonvv","reason":"Remote host closed the connection","date":"2013-05-29T09:54:35.268Z","type":"quit"}
{"nick":"paddybyers","reason":"Ping timeout: 252 seconds","date":"2013-05-29T09:55:56.945Z","type":"quit"}
{"nick":"udp","date":"2013-05-29T09:57:07.949Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-05-29T10:05:23.291Z","type":"quit"}
{"nick":"kazupon_","date":"2013-05-29T10:12:13.826Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-05-29T10:12:31.032Z","type":"quit"}
{"nick":"udp_","date":"2013-05-29T10:15:31.895Z","type":"join"}
{"nick":"udp","reason":"Ping timeout: 252 seconds","date":"2013-05-29T10:18:29.938Z","type":"quit"}
{"nick":"udp_","new_nick":"udp","date":"2013-05-29T10:18:30.180Z","type":"nick"}
{"nick":"kazupon_","reason":"Remote host closed the connection","date":"2013-05-29T10:18:54.755Z","type":"quit"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-05-29T10:23:24.780Z","type":"quit"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-05-29T10:30:46.443Z","type":"quit"}
{"nick":"csaoh","date":"2013-05-29T10:32:33.910Z","type":"join"}
{"nick":"timoxley","date":"2013-05-29T10:43:42.189Z","type":"join"}
{"nick":"udp","reason":"Quit: udp","date":"2013-05-29T11:05:44.790Z","type":"quit"}
{"nick":"dscape","date":"2013-05-29T11:12:23.206Z","type":"join"}
{"nick":"bajtos","date":"2013-05-29T11:26:41.348Z","type":"join"}
{"nick":"kazupon","date":"2013-05-29T11:29:23.972Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 260 seconds","date":"2013-05-29T11:34:47.839Z","type":"quit"}
{"nick":"udp","date":"2013-05-29T11:37:21.134Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-05-29T11:47:07.760Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-05-29T11:48:57.060Z","type":"join"}
{"nick":"udp","reason":"Quit: udp","date":"2013-05-29T12:09:25.075Z","type":"quit"}
{"nick":"paddybyers","date":"2013-05-29T12:12:06.923Z","type":"join"}
{"nick":"Domenic_","reason":"Ping timeout: 260 seconds","date":"2013-05-29T12:23:47.918Z","type":"quit"}
{"nick":"paddybyers","reason":"Ping timeout: 252 seconds","date":"2013-05-29T12:24:27.019Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-05-29T12:31:51.819Z","type":"join"}
{"nick":"AvianFlu","date":"2013-05-29T12:39:19.094Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-05-29T12:39:30.039Z","type":"join"}
{"nick":"AvianFlu","reason":"Client Quit","date":"2013-05-29T12:39:50.709Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-05-29T12:42:39.058Z","type":"join"}
{"nick":"roxlu","date":"2013-05-29T13:12:19.174Z","type":"join"}
{"nick":"roxlu","reason":"Read error: No route to host","date":"2013-05-29T13:15:10.645Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-05-29T13:18:18.841Z","type":"join"}
{"nick":"piscisaureus_","message":"saghul: hey","date":"2013-05-29T13:19:56.556Z","type":"message"}
{"nick":"saghul","message":"piscisaureus_ hi!","date":"2013-05-29T13:20:06.736Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: I saw https://github.com/saghul/libuv/commit/13c108924e6b7e00f0ae73dffc4545c876cafba2 but it scares be a bit","date":"2013-05-29T13:20:13.567Z","type":"message"}
{"nick":"saghul","message":"why is that?","date":"2013-05-29T13:20:39.704Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: so basically you are saying that there should always be atleast one check in between a normal callback and a close callback","date":"2013-05-29T13:21:18.222Z","type":"message"}
{"nick":"piscisaureus_","message":"if you close that handle in the normal callback?","date":"2013-05-29T13:21:25.982Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: well the reason is simple: we're going to do a lot more syscalls now because usually people will close a handle from a callback (I mean, where else you do it?)","date":"2013-05-29T13:22:03.692Z","type":"message"}
{"nick":"saghul","message":"yep, or generally speaking, if any handle was closed before polling, we should do a zero time poll this time","date":"2013-05-29T13:22:12.128Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: well that should already be the case","date":"2013-05-29T13:22:25.834Z","type":"message"}
{"nick":"saghul","message":"without my change the tests stalls for 100 seconds","date":"2013-05-29T13:22:59.412Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: so the effect of this is that we always need to make a poll syscall before we can run a close callback","date":"2013-05-29T13:23:10.311Z","type":"message"}
{"nick":"piscisaureus_","message":"and to make matters worse, shutdown() is also called from the endgame handler","date":"2013-05-29T13:23:25.475Z","type":"message"}
{"nick":"saghul","message":"in a way, yes","date":"2013-05-29T13:23:40.083Z","type":"message"}
{"nick":"piscisaureus_","message":"so in order to send FIN we need to not only call shutdown() but now we need to make another poll syscall","date":"2013-05-29T13:23:43.562Z","type":"message"}
{"nick":"saghul","message":"hum, I didn't know about shutdown()","date":"2013-05-29T13:23:49.873Z","type":"message"}
{"nick":"piscisaureus_","message":"well that's all internal to uv-win","date":"2013-05-29T13:24:08.958Z","type":"message"}
{"nick":"saghul","message":"maybe we can remember that there were engame handles and run them, but not block for io if we ran some?","date":"2013-05-29T13:24:30.921Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: well I thought that was already the case (and if not, it is a bug)","date":"2013-05-29T13:24:48.533Z","type":"message"}
{"nick":"piscisaureus_","message":"let me find the code for you","date":"2013-05-29T13:24:52.026Z","type":"message"}
{"nick":"saghul","message":"doesn't seem to be the case","date":"2013-05-29T13:25:03.468Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: https://github.com/joyent/libuv/blob/master/src/win/core.c#L298","date":"2013-05-29T13:25:52.761Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: so the second argument is whether is should block or not","date":"2013-05-29T13:26:02.262Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: but if engame_handles != NULL then we shouldn't be blocking","date":"2013-05-29T13:26:18.708Z","type":"message"}
{"nick":"saghul","message":"piscisaureus_ yeah, now, in the test case I added, endgames will be null, after running the close callback, right?","date":"2013-05-29T13:26:46.128Z","type":"message"}
{"nick":"saghul","message":"so the poll will be done with timer_handle2 timeout","date":"2013-05-29T13:27:04.146Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: right - so what should be a good reason not to block in this case?","date":"2013-05-29T13:30:23.688Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: you should also consider that this works with timers but not with tcp handles for example","date":"2013-05-29T13:30:38.825Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: because the tcp handle won't be pushed unto the endgame queue until the last write is completed","date":"2013-05-29T13:31:00.586Z","type":"message"}
{"nick":"piscisaureus_","message":"s/unto/onto/","date":"2013-05-29T13:31:09.460Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: so just for clarity - I'm not necessarily against landing your patch (although we should definitely benchmark it - it's not a zero risk change as you and bnoordhuis seem to assume)","date":"2013-05-29T13:32:36.972Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: but I would like to understand what the underlying problem is you are trying to solve...","date":"2013-05-29T13:32:50.295Z","type":"message"}
{"nick":"saghul","message":"piscisaureus_ well, I ran into this because I'm using the event loop as a scheduler, and on unix it worked so I started digging","date":"2013-05-29T13:33:14.240Z","type":"message"}
{"nick":"saghul","message":"piscisaureus_ i queue all callbacks and run them in a check handle, but in windows, the loop will run close callbacks and them it may block so my scheduling thing is stalled","date":"2013-05-29T13:34:22.424Z","type":"message"}
{"nick":"saghul","message":"(kind of hard to synthesize in just a few worlds, sorry)","date":"2013-05-29T13:34:39.063Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: yes so you are apparently abusing the check handle","date":"2013-05-29T13:34:41.279Z","type":"message"}
{"nick":"saghul","message":"*words","date":"2013-05-29T13:34:47.053Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: maybe we should remove that feature :)","date":"2013-05-29T13:34:49.371Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: you really should use an uv_idle_t for this","date":"2013-05-29T13:34:57.210Z","type":"message"}
{"nick":"piscisaureus_","message":"unfortunately uv_idle is broken on unix the last time I checked","date":"2013-05-29T13:35:12.684Z","type":"message"}
{"nick":"saghul","message":"piscisaureus_ well, it also behaves different on windows than on unix","date":"2013-05-29T13:35:13.153Z","type":"message"}
{"nick":"piscisaureus_","message":"yes - the unix implementation is (or atleast used to be) wrong","date":"2013-05-29T13:35:33.129Z","type":"message"}
{"nick":"saghul","message":"I'm using a handle because it's what runs last","date":"2013-05-29T13:35:51.835Z","type":"message"}
{"nick":"saghul","message":"so every other handle queues their callbacks, and I process them in order at the end","date":"2013-05-29T13:36:10.286Z","type":"message"}
{"nick":"saghul","message":"this is what Tulip does and the check handle was my way of emulating that","date":"2013-05-29T13:36:26.501Z","type":"message"}
{"nick":"piscisaureus_","message":"the correct semantics for uv_idle_t are outlined here : http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#code_ev_idle_code_when_you_ve_got_no","date":"2013-05-29T13:37:00.004Z","type":"message"}
{"nick":"piscisaureus_","message":"so the rule is:","date":"2013-05-29T13:37:40.403Z","type":"message"}
{"nick":"piscisaureus_","message":"* uv_idle runs last","date":"2013-05-29T13:37:40.558Z","type":"message"}
{"nick":"piscisaureus_","message":"* if there are active idle watchers then poll won't block","date":"2013-05-29T13:37:40.558Z","type":"message"}
{"nick":"saghul","message":"right now we only seem to obey the second rule","date":"2013-05-29T13:38:35.246Z","type":"message"}
{"nick":"bnoordhuis","message":"that second part works okay, at least :)","date":"2013-05-29T13:38:36.242Z","type":"message"}
{"nick":"saghul","message":":-)","date":"2013-05-29T13:38:43.821Z","type":"message"}
{"nick":"saghul","message":"right now i'm workarounding this by starting an idle handle in the close callback… but i'd rather not do that ","date":"2013-05-29T13:39:20.224Z","type":"message"}
{"nick":"piscisaureus_","message":"which means that you can do something like:","date":"2013-05-29T13:39:20.551Z","type":"message"}
{"nick":"piscisaureus_","message":"on_event(event):","date":"2013-05-29T13:39:20.688Z","type":"message"}
{"nick":"piscisaureus_","message":"  push_event_to_queue(event)","date":"2013-05-29T13:39:20.688Z","type":"message"}
{"nick":"piscisaureus_","message":"  start_idle_watcher()","date":"2013-05-29T13:39:20.688Z","type":"message"}
{"nick":"piscisaureus_","message":"on_idle(handle):","date":"2013-05-29T13:39:20.688Z","type":"message"}
{"nick":"piscisaureus_","message":"  proces_event_queue():","date":"2013-05-29T13:39:20.688Z","type":"message"}
{"nick":"piscisaureus_","message":"  stop_idle_watcher()","date":"2013-05-29T13:39:20.688Z","type":"message"}
{"nick":"piscisaureus_","message":"actually I like the unix semantics a bit better","date":"2013-05-29T13:40:21.452Z","type":"message"}
{"nick":"saghul","message":"I'm keeping the check handle active all the time, and use an idle handle to control when I explicitly want the loop not to block","date":"2013-05-29T13:40:28.024Z","type":"message"}
{"nick":"piscisaureus_","message":"just always run uv_idle on every loop iteration","date":"2013-05-29T13:40:34.702Z","type":"message"}
{"nick":"saghul","message":"great!","date":"2013-05-29T13:40:47.757Z","type":"message"}
{"nick":"saghul","message":"commit that before you change your mind!","date":"2013-05-29T13:40:55.351Z","type":"message"}
{"nick":"saghul","message":":-)","date":"2013-05-29T13:41:00.362Z","type":"message"}
{"nick":"piscisaureus_","message":"yeah haha","date":"2013-05-29T13:41:00.511Z","type":"message"}
{"nick":"piscisaureus_","message":"well what we need to do","date":"2013-05-29T13:41:18.570Z","type":"message"}
{"nick":"piscisaureus_","message":"is figure out whether there are any other users of uv_idle","date":"2013-05-29T13:41:26.902Z","type":"message"}
{"nick":"piscisaureus_","message":":_","date":"2013-05-29T13:41:36.511Z","type":"message"}
{"nick":"piscisaureus_","message":"https://www.google.com/search?q=uv_idle_t&ie=utf-8&oe=utf-8&aq=t&rls=org.mozilla:nl:official&client=firefox-a#safe=off&client=firefox-a&hs=uPN&rls=org.mozilla:nl%3Aofficial&sclient=psy-ab&q=uv_idle_t&oq=uv_idle_t&gs_l=serp.12...0.0.0.34193.0.0.0.0.0.0.0.0..0.0...0.0...1c..14.psy-ab.ghRgNuIjK6I&pbx=1&bav=on.2,or.r_cp.r_qf.&bvm=bv.47008514,d.d2k&fp=183b7b9925a651e5&biw=1920&bih=1081","date":"2013-05-29T13:41:46.308Z","type":"message"}
{"nick":"saghul","message":"I for one, only use it for preventing the loop from blocking, nothing else","date":"2013-05-29T13:42:00.356Z","type":"message"}
{"nick":"bnoordhuis","message":"that seems to be the most common use case","date":"2013-05-29T13:42:41.187Z","type":"message"}
{"nick":"bnoordhuis","message":"node does the same thing","date":"2013-05-29T13:42:52.045Z","type":"message"}
{"nick":"piscisaureus_","message":"yeah so in a way windows is just a bit more \"zealous\" when deciding when a loop is idle","date":"2013-05-29T13:43:51.099Z","type":"message"}
{"nick":"piscisaureus_","message":"because it does another non-blocking poll before deciding the loop is really idle","date":"2013-05-29T13:44:14.857Z","type":"message"}
{"nick":"piscisaureus_","message":"this is actually quite lame come to think of it","date":"2013-05-29T13:44:23.565Z","type":"message"}
{"nick":"piscisaureus_","message":"unfortunately uv_idle_t has too many hits on google","date":"2013-05-29T13:44:40.748Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm the top hit!","date":"2013-05-29T13:46:21.640Z","type":"message"}
{"nick":"piscisaureus_","message":"https://metacpan.org/source/MLEHMANN/EV-4.03/libev/ev.c#L2126","date":"2013-05-29T13:46:27.455Z","type":"message"}
{"nick":"saghul","message":"do you think people are relying on those semantics, given that unix doesn't implement them?","date":"2013-05-29T13:46:37.939Z","type":"message"}
{"nick":"bnoordhuis","message":"people probably depend on the unix semantics","date":"2013-05-29T13:47:04.312Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: for me zocket.sprocket is the top hit","date":"2013-05-29T13:47:07.018Z","type":"message"}
{"nick":"bnoordhuis","message":"aw, search bubbles:(","date":"2013-05-29T13:47:15.024Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-05-29T13:47:16.002Z","type":"quit"}
{"nick":"piscisaureus_","message":"I agree","date":"2013-05-29T13:47:35.046Z","type":"message"}
{"nick":"piscisaureus_","message":"ok let's change this","date":"2013-05-29T13:47:40.876Z","type":"message"}
{"nick":"piscisaureus_","message":"unfortunately \"idle\" is no longer really accurate","date":"2013-05-29T13:48:45.291Z","type":"message"}
{"nick":"saghul","message":"yay!","date":"2013-05-29T13:48:59.228Z","type":"message"}
{"nick":"piscisaureus_","message":"but *shrug* :)","date":"2013-05-29T13:49:00.668Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: you were lucky to find me in the mood for \"polderen\" :)","date":"2013-05-29T13:49:48.776Z","type":"message"}
{"nick":"pachet","date":"2013-05-29T13:51:55.183Z","type":"join"}
{"nick":"AvianFlu","date":"2013-05-29T13:52:10.083Z","type":"join"}
{"nick":"piscisaureus_","message":"saghul: bnoordhuis: so what is the right place to invoke uv_idle?","date":"2013-05-29T13:53:54.411Z","type":"message"}
{"nick":"piscisaureus_","message":"now that we're at it I can move it around and put it where you want","date":"2013-05-29T13:54:06.859Z","type":"message"}
{"nick":"piscisaureus_","message":"it's currently here -> https://github.com/joyent/libuv/blob/c39648674c404324c276831fc0ec5c99f30b2fb5/src/win/core.c#L288","date":"2013-05-29T13:54:22.275Z","type":"message"}
{"nick":"saghul","message":"after check?","date":"2013-05-29T13:54:27.474Z","type":"message"}
{"nick":"piscisaureus_","message":"after timers, before regs","date":"2013-05-29T13:54:38.729Z","type":"message"}
{"nick":"saghul","message":"ok","date":"2013-05-29T13:54:45.192Z","type":"message"}
{"nick":"piscisaureus_","message":"s/regs/reqs","date":"2013-05-29T13:55:00.444Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: well if you put it after check that you are assuming that poll conceptually comes last in the event loop","date":"2013-05-29T13:55:24.809Z","type":"message"}
{"nick":"piscisaureus_","message":"(alright - it is a loop, there's not real beginning and end)","date":"2013-05-29T13:55:37.550Z","type":"message"}
{"nick":"piscisaureus_","message":"so if you want it \"last\" we should do it before prepare maybe?","date":"2013-05-29T13:55:58.271Z","type":"message"}
{"nick":"bnoordhuis","message":"unix puts it after times but before check","date":"2013-05-29T13:57:24.883Z","type":"message"}
{"nick":"bnoordhuis","message":"*timers","date":"2013-05-29T13:57:30.340Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: why do you do run_pending *after* prepare?","date":"2013-05-29T13:57:41.828Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: unix puts it after timers but before prepare?","date":"2013-05-29T13:58:06.953Z","type":"message"}
{"nick":"bnoordhuis","message":"i mean idle handles","date":"2013-05-29T13:58:22.588Z","type":"message"}
{"nick":"bnoordhuis","message":"and yes, after timers, before prepare","date":"2013-05-29T13:58:33.410Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yeah that seems very reasonable to me :)","date":"2013-05-29T13:58:45.744Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: what doesn't is that you run pending after prepare, unless I misinterpret what run_pending does","date":"2013-05-29T13:59:00.050Z","type":"message"}
{"nick":"bnoordhuis","message":"re: run_pending, it's complicated","date":"2013-05-29T13:59:04.989Z","type":"message"}
{"nick":"bnoordhuis","message":"that's for i/o handles that have been primed with uv__io_feed()","date":"2013-05-29T13:59:23.151Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess it should come before prepare","date":"2013-05-29T14:00:39.012Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yessir, maybe even before idle :)","date":"2013-05-29T14:00:59.710Z","type":"message"}
{"nick":"piscisaureus_","message":"but I have no strong opinion on the latter, but I do know that only poll should be between prepare and check","date":"2013-05-29T14:01:43.713Z","type":"message"}
{"nick":"bnoordhuis","message":"the thing is, run_pending is used for i/o handles that have error'd somehow","date":"2013-05-29T14:01:58.011Z","type":"message"}
{"nick":"bnoordhuis","message":"e.g. uv_pipe_connect() that failed to connect","date":"2013-05-29T14:02:07.215Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm thinking out aloud if there's situations where running one before the other would create issues","date":"2013-05-29T14:02:58.082Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: well maybe if you do something that fails in a prepare handle?","date":"2013-05-29T14:03:16.926Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: on windows we deal with this by making poll non-blocking when there's anything in the request queue","date":"2013-05-29T14:03:35.213Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: libev stipulates that prepare and check are special and you shouldn't really do any i/o in them","date":"2013-05-29T14:03:53.942Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, but no one ever reads the docs","date":"2013-05-29T14:04:09.185Z","type":"message"}
{"nick":"bnoordhuis","message":"and besides, that's something of an unreasonable limitation","date":"2013-05-29T14:04:17.368Z","type":"message"}
{"nick":"piscisaureus_","message":"yeah, and i also dislike this restriction","date":"2013-05-29T14:04:21.941Z","type":"message"}
{"nick":"piscisaureus_","message":"indeed","date":"2013-05-29T14:04:23.014Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: so for uv-win I figured that even if legal it would be very rare so I make poll nonblocking when then happens and process these events in the next round","date":"2013-05-29T14:05:01.833Z","type":"message"}
{"nick":"piscisaureus_","message":"s/then/that/","date":"2013-05-29T14:05:12.503Z","type":"message"}
{"nick":"indutny","message":"hello","date":"2013-05-29T14:05:22.596Z","type":"message"}
{"nick":"bnoordhuis","message":"hm, let me think about it","date":"2013-05-29T14:05:25.606Z","type":"message"}
{"nick":"bnoordhuis","message":"i was thinking we should move uv_run() to src/uv-common.c","date":"2013-05-29T14:05:43.750Z","type":"message"}
{"nick":"bnoordhuis","message":"that would force us to make it consistent across platforms","date":"2013-05-29T14:05:53.976Z","type":"message"}
{"nick":"bnoordhuis","message":"hi fedor","date":"2013-05-29T14:05:59.577Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: you want to go home. In half an hour hell will break loose in 020","date":"2013-05-29T14:06:06.820Z","type":"message"}
{"nick":"indutny","message":"hi ben","date":"2013-05-29T14:06:28.533Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I agree with the feeling in a way. However I'm afraid that means you have to give way a lot in your implementation","date":"2013-05-29T14:06:38.570Z","type":"message"}
{"nick":"piscisaureus_","message":"to make room for windows quirks","date":"2013-05-29T14:06:42.044Z","type":"message"}
{"nick":"bnoordhuis","message":"like what?","date":"2013-05-29T14:06:59.946Z","type":"message"}
{"nick":"piscisaureus_","message":"and limitations (such as having to delay close callbacks and such)","date":"2013-05-29T14:07:01.048Z","type":"message"}
{"nick":"bnoordhuis","message":"i'd be okay with that","date":"2013-05-29T14:07:17.756Z","type":"message"}
{"nick":"bnoordhuis","message":"uv-unix kind of needs that to deal with uv_fs_poll_t handles properly","date":"2013-05-29T14:07:28.567Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: also (soon) running an off-the-main-thread polling mechanism not quite unlike the select thread hack on os x","date":"2013-05-29T14:07:34.174Z","type":"message"}
{"nick":"kevinswiber","date":"2013-05-29T14:07:43.197Z","type":"join"}
{"nick":"piscisaureus_","message":"but performance critical (which the select hack isnt really()","date":"2013-05-29T14:07:44.417Z","type":"message"}
{"nick":"paddybyers","date":"2013-05-29T14:07:48.934Z","type":"join"}
{"nick":"bnoordhuis","message":"okay. how would that be an obstacle? worst case, you turn the function call into an empty macro on unices","date":"2013-05-29T14:08:22.169Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: well - my implementation lets the other thread put reqs right into the request queue","date":"2013-05-29T14:09:19.471Z","type":"message"}
{"nick":"saghul","message":"piscisaureus_ i'm safe at home already :-)","date":"2013-05-29T14:09:48.522Z","type":"message"}
{"nick":"piscisaureus_","message":"saghul: hah! good for you","date":"2013-05-29T14:09:54.719Z","type":"message"}
{"nick":"piscisaureus_","message":"me too :)","date":"2013-05-29T14:09:59.919Z","type":"message"}
{"nick":"saghul","message":"gtg now maybe we can discuss the close thing in the ML ?","date":"2013-05-29T14:10:22.922Z","type":"message"}
{"nick":"bnoordhuis","message":"sure","date":"2013-05-29T14:10:28.790Z","type":"message"}
{"nick":"piscisaureus_","message":"ok","date":"2013-05-29T14:10:33.717Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but in general I would say I am for the idea","date":"2013-05-29T14:10:41.434Z","type":"message"}
{"nick":"bnoordhuis","message":"good","date":"2013-05-29T14:10:49.000Z","type":"message"}
{"nick":"saghul","message":"ok, i'll send an email later, thanks guys!","date":"2013-05-29T14:10:49.419Z","type":"message"}
{"nick":"bnoordhuis","message":"there's some other things, like uv_now()","date":"2013-05-29T14:11:45.584Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I can also do something about windows internals (I mean, the fact that the endgame queue is used for things unrelated to close callbacks is really ungodly)","date":"2013-05-29T14:11:45.794Z","type":"message"}
{"nick":"bnoordhuis","message":"it's exactly the same in uv-win and uv-unix","date":"2013-05-29T14:11:55.968Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: which is basically the reason we are having this discussion","date":"2013-05-29T14:12:00.145Z","type":"message"}
{"nick":"bnoordhuis","message":"okay :)","date":"2013-05-29T14:12:10.120Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yeah uv_now could move to in my book","date":"2013-05-29T14:12:28.521Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: so now you've added a whole new problem to your list","date":"2013-05-29T14:13:15.607Z","type":"message"}
{"nick":"piscisaureus_","message":"which is defining the interface between the event loop and the platform backend :)","date":"2013-05-29T14:13:30.174Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u0002e0bdb3d\u0002 : unix, windows: move uv_now() to uv-common.c - http://git.io/JH0jCA","date":"2013-05-29T14:13:57.202Z","type":"message"}
{"nick":"bnoordhuis","message":"^ done","date":"2013-05-29T14:14:00.057Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: yeah, agreed","date":"2013-05-29T14:14:11.619Z","type":"message"}
{"nick":"bnoordhuis","message":"i was thinking we could do what libev does","date":"2013-05-29T14:14:21.239Z","type":"message"}
{"nick":"bnoordhuis","message":"uv-unix currently runs callbacks straight from uv__io_poll()","date":"2013-05-29T14:14:31.527Z","type":"message"}
{"nick":"bnoordhuis","message":"which is okay (actually it's great for throughput)","date":"2013-05-29T14:14:42.039Z","type":"message"}
{"nick":"bnoordhuis","message":"but it makes things a little inconsistent","date":"2013-05-29T14:14:53.126Z","type":"message"}
{"nick":"piscisaureus_","message":"you want to push handles onto a queue and then process a queue?","date":"2013-05-29T14:15:08.216Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah","date":"2013-05-29T14:15:12.936Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: the conceptual issue is also that on unix you get \"handles\" from the OS and generate requests from that","date":"2013-05-29T14:15:36.030Z","type":"message"}
{"nick":"bnoordhuis","message":"that would also let me coalesce read and write events with kqueue","date":"2013-05-29T14:15:37.234Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: i'm not following. requests?","date":"2013-05-29T14:16:01.190Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: on windows we just get requests from the OS and sometimes we marshal those into handle callbacks (like in case of read and accept)","date":"2013-05-29T14:16:04.169Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: epoll gives you FDs right?","date":"2013-05-29T14:16:23.484Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: GetQueuedCompletionStatus gives you uv_req_t's basically","date":"2013-05-29T14:16:35.524Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, right","date":"2013-05-29T14:16:48.136Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, epoll returns fds","date":"2013-05-29T14:16:53.767Z","type":"message"}
{"nick":"piscisaureus_","message":"so this makes defining a common backend quite hairy :)","date":"2013-05-29T14:17:06.806Z","type":"message"}
{"nick":"bnoordhuis","message":"which are then correlated with handles through a hash table","date":"2013-05-29T14:17:12.137Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10\u0002: #82 \u00037UNSTABLE\u000f smartos (2/186) windows (4/187) http://jenkins.nodejs.org/job/libuv-v0.10/82/","date":"2013-05-29T14:17:29.222Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: huh? what?","date":"2013-05-29T14:17:30.026Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: hash table where?","date":"2013-05-29T14:17:36.228Z","type":"message"}
{"nick":"bajtos","date":"2013-05-29T14:17:38.262Z","type":"join"}
{"nick":"bnoordhuis","message":"well, basically it's an array","date":"2013-05-29T14:17:41.819Z","type":"message"}
{"nick":"bnoordhuis","message":"but the fd is used as the index/key","date":"2013-05-29T14:17:48.286Z","type":"message"}
{"nick":"saghul","reason":"Ping timeout: 252 seconds","date":"2013-05-29T14:18:01.488Z","type":"quit"}
{"nick":"bnoordhuis","message":"the array element is a uv__io_t*","date":"2013-05-29T14:18:10.345Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: you don't you use epoll_event.data ?","date":"2013-05-29T14:18:31.399Z","type":"message"}
{"nick":"bnoordhuis","message":"i do but only to store the fd","date":"2013-05-29T14:18:39.741Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't store a pointer because epoll_wait() might generate events for file descriptors we've stopped watching","date":"2013-05-29T14:18:59.045Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: oh haha","date":"2013-05-29T14:19:11.051Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: right - yeah that's the reason windows delays close events","date":"2013-05-29T14:19:24.381Z","type":"message"}
{"nick":"saghul","date":"2013-05-29T14:19:37.118Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: because the req might reference a handle :)","date":"2013-05-29T14:19:39.880Z","type":"message"}
{"nick":"Domenic_","date":"2013-05-29T14:19:54.910Z","type":"join"}
{"nick":"bnoordhuis","message":"right :)","date":"2013-05-29T14:19:59.114Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10-gyp\u0002: #45 \u00037UNSTABLE\u000f windows-x64 (4/187) windows-ia32 (4/187) smartos-x64 (4/186) smartos-ia32 (2/186) http://jenkins.nodejs.org/job/libuv-v0.10-gyp/45/","date":"2013-05-29T14:20:03.253Z","type":"message"}
{"nick":"piscisaureus_","message":"(and also because many internal req's are embedded in a handle so freeing would really screw things up)","date":"2013-05-29T14:20:14.697Z","type":"message"}
{"nick":"bnoordhuis","message":"back to GetQueuedCompletionStatus()","date":"2013-05-29T14:20:15.044Z","type":"message"}
{"nick":"bnoordhuis","message":"so you get requests rather than handles","date":"2013-05-29T14:20:28.682Z","type":"message"}
{"nick":"bnoordhuis","message":"but is that an issue?","date":"2013-05-29T14:20:32.232Z","type":"message"}
{"nick":"bnoordhuis","message":"essentially what backend_poll() would do, is prime handles that are somehow ready","date":"2013-05-29T14:20:45.302Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yeah I get what you mean","date":"2013-05-29T14:21:20.975Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: sounds a bit less efficient but it's worth a try","date":"2013-05-29T14:21:45.638Z","type":"message"}
{"nick":"piscisaureus_","message":"and it's also a near-complete rewrite on my end :(","date":"2013-05-29T14:22:00.895Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, that's maybe the one drawback","date":"2013-05-29T14:22:04.675Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, two drawbacks :)","date":"2013-05-29T14:22:08.921Z","type":"message"}
{"nick":"bnoordhuis","message":"right now, uv-unix calls epoll_wait() several times if there are ARRAY_SIZE(events) evens ready","date":"2013-05-29T14:22:39.436Z","type":"message"}
{"nick":"bnoordhuis","message":"*events","date":"2013-05-29T14:22:42.924Z","type":"message"}
{"nick":"bnoordhuis","message":"which sometimes helps with throughput","date":"2013-05-29T14:22:53.524Z","type":"message"}
{"nick":"bnoordhuis","message":"on the other hand, it's pretty rare to actually hit that limit","date":"2013-05-29T14:23:19.949Z","type":"message"}
{"nick":"bnoordhuis","message":"ARRAY_SIZE(events) == 1024 right now","date":"2013-05-29T14:23:30.244Z","type":"message"}
{"nick":"bnoordhuis","message":"getting back to the overarching topic, i think it's time for libuv2!","date":"2013-05-29T14:24:32.229Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-05-29T14:25:02.893Z","type":"quit"}
{"nick":"paddybyers","reason":"Ping timeout: 252 seconds","date":"2013-05-29T14:25:26.947Z","type":"quit"}
{"nick":"kazupon","date":"2013-05-29T14:27:16.287Z","type":"join"}
{"nick":"saghul","reason":"Read error: Operation timed out","date":"2013-05-29T14:27:55.838Z","type":"quit"}
{"nick":"piscisaureus_","message":"bnoordhuis: yes :)","date":"2013-05-29T14:28:02.645Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I think handle priming would solve a lot of other problems in uv-win though so in that sense I'm not against it","date":"2013-05-29T14:28:32.545Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: as for libuv 2 - I think the core model should be pull-based","date":"2013-05-29T14:28:56.083Z","type":"message"}
{"nick":"piscisaureus_","message":"e.g. you call some function and it gives you a request or handle that has an event pending.","date":"2013-05-29T14:29:35.079Z","type":"message"}
{"nick":"groundwater","date":"2013-05-29T14:29:49.301Z","type":"join"}
{"nick":"piscisaureus_","message":"the bells-and-whistles event loop should be sugar on top","date":"2013-05-29T14:29:53.462Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: now to find some VCs to pay for that...","date":"2013-05-29T14:30:44.287Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: you mean you keep calling uv_handle_t* uv_pull_event() until it exhausts the queue?","date":"2013-05-29T14:30:54.691Z","type":"message"}
{"nick":"bnoordhuis","message":"oh VCs, just tell them we're building a twitter, but for pets","date":"2013-05-29T14:31:28.042Z","type":"message"}
{"nick":"saghul","date":"2013-05-29T14:31:36.884Z","type":"join"}
{"nick":"bajtos","message":"bnoordhuis: I don't have npm account credentials. I only used fact that you can change avatar image as long as you can receive emails on registered address","date":"2013-05-29T14:32:12.224Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yes - something like that","date":"2013-05-29T14:32:43.310Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #77 \u00037UNSTABLE\u000f smartos-ia32 (1/588) osx-ia32 (1/588) smartos-x64 (3/588) osx-x64 (1/588) http://jenkins.nodejs.org/job/libuv-node-integration/77/","date":"2013-05-29T14:32:54.294Z","type":"message"}
{"nick":"AvianFlu","date":"2013-05-29T14:34:52.826Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u00029826b15\u0002 : doc: sending dgram handles only works on unix - http://git.io/-Y29Jg","date":"2013-05-29T14:35:55.322Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: that would make it easy to write chicken scheme bindings. i'm all for it!","date":"2013-05-29T14:37:24.635Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: jsut as a though experiment, we could also do away with handles-that-generate-events completely in the low-level layer","date":"2013-05-29T14:40:53.356Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: basically read and and accept and recv would have to be requests","date":"2013-05-29T14:41:20.780Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: it is something isaacs has asked for and ryah suggested it too when I last met him in person","date":"2013-05-29T14:41:46.414Z","type":"message"}
{"nick":"bnoordhuis","message":"what's the rationale?","date":"2013-05-29T14:42:05.945Z","type":"message"}
{"nick":"c4milo","date":"2013-05-29T14:42:21.194Z","type":"join"}
{"nick":"piscisaureus_","message":"well it's more consistent","date":"2013-05-29T14:42:21.597Z","type":"message"}
{"nick":"bnoordhuis","message":"right, you wouldn't need uv_listen(), uv_read_stop(), etc.","date":"2013-05-29T14:42:39.734Z","type":"message"}
{"nick":"bnoordhuis","message":"at least, not in their current incarnation","date":"2013-05-29T14:42:52.656Z","type":"message"}
{"nick":"piscisaureus_","message":"instead of pausing and resuming read you would just \"enqueue\" a read or accept and when it returns you get data or an fd","date":"2013-05-29T14:42:53.612Z","type":"message"}
{"nick":"piscisaureus_","message":"although we'd have to think carefully about how alloc_cb fits into the mix","date":"2013-05-29T14:43:06.443Z","type":"message"}
{"nick":"piscisaureus_","message":"I think realistically you'd want to create a buffer pool and the embedder is responsible for making sure the buffer pool is never completely depleted","date":"2013-05-29T14:44:00.425Z","type":"message"}
{"nick":"piscisaureus_","message":"and read() and recv() would take buffers from the buffer pool","date":"2013-05-29T14:44:18.876Z","type":"message"}
{"nick":"piscisaureus_","message":"(IMO if any operating system would decide to do the right thing for once they should pick the same model)","date":"2013-05-29T14:44:45.179Z","type":"message"}
{"nick":"bnoordhuis","message":"if only windows wasn't completion-based","date":"2013-05-29T14:46:04.883Z","type":"message"}
{"nick":"bnoordhuis","message":"life would have been so much easier","date":"2013-05-29T14:46:10.641Z","type":"message"}
{"nick":"piscisaureus_","message":"you should read the document bajtos' pointed out","date":"2013-05-29T14:46:39.697Z","type":"message"}
{"nick":"piscisaureus_","message":"http://www.facebook.com/l.php?u=https%3A%2F%2Fdocs.google.com%2Fviewer%3Fa%3Dv%26pid%3Dforums%26srcid%3DMDUxODU4OTA1NTU1MzUxODE5MDQBMTA5MDUzNTI5Mzg2ODk0MjY5NjUBYWM5cnR1MEY4Z1FKATQBAXYy%26authuser%3D0&h=dAQFYX4kv","date":"2013-05-29T14:46:41.056Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, i've seen it :)","date":"2013-05-29T14:46:46.838Z","type":"message"}
{"nick":"piscisaureus_","message":"it basically says - linux gets much faster with a completion model","date":"2013-05-29T14:46:57.494Z","type":"message"}
{"nick":"piscisaureus_","message":"but I'm scared of memory implications in a C10M scenario","date":"2013-05-29T14:47:19.072Z","type":"message"}
{"nick":"bnoordhuis","message":"right, that's the issue with completion-driven i/o","date":"2013-05-29T14:47:33.704Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #218 \u00037UNSTABLE\u000f osx-x64 (1/588) linux-x64 (1/588) smartos-ia32 (1/588) smartos-x64 (2/588) http://jenkins.nodejs.org/job/nodejs-v0.10/218/","date":"2013-05-29T14:47:34.401Z","type":"message"}
{"nick":"bnoordhuis","message":"btw, the flexsc paper that paper links to is quite interesting as well","date":"2013-05-29T14:47:46.647Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: so that's why I would separate queuing read from supplying memory to read into","date":"2013-05-29T14:47:59.646Z","type":"message"}
{"nick":"bnoordhuis","message":"food for thought","date":"2013-05-29T14:49:21.887Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #48 \u00037UNSTABLE\u000f windows-x64 (8/588) windows-ia32 (6/588) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/48/","date":"2013-05-29T14:55:45.412Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-05-29T15:03:42.415Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-05-29T15:13:35.216Z","type":"join"}
{"nick":"hudgfactor","date":"2013-05-29T15:16:01.010Z","type":"join"}
{"nick":"kuebk","reason":"Quit: Leaving.","date":"2013-05-29T15:16:17.921Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-05-29T15:19:29.472Z","type":"quit"}
{"nick":"kazupon","date":"2013-05-29T15:23:18.527Z","type":"join"}
{"nick":"Somebody","date":"2013-05-29T15:23:54.156Z","type":"join"}
{"nick":"Somebody","reason":"Remote host closed the connection","date":"2013-05-29T15:24:33.349Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-05-29T15:26:16.395Z","type":"join"}
{"nick":"hz","reason":"Ping timeout: 264 seconds","date":"2013-05-29T15:27:31.480Z","type":"quit"}
{"nick":"leonvv","date":"2013-05-29T15:27:55.749Z","type":"join"}
{"nick":"saghul","message":"bnoordhuis, piscisaureus_ can either of you guys fix this comment here? https://github.com/joyent/libuv/blob/v0.10/test/test-osx-select.c#L65 creates a compilation problem on OSX 10.6","date":"2013-05-29T15:28:19.044Z","type":"message"}
{"nick":"piscisaureus_","action":"fires up github editor","date":"2013-05-29T15:30:18.527Z","type":"action"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Bert Belder\u000f \u00037v0.10\u000f * \u0002081f701\u0002 : test: use c-style comments - http://git.io/0YlGog","date":"2013-05-29T15:32:28.641Z","type":"message"}
{"nick":"piscisaureus_","message":"yup, that's my github editor","date":"2013-05-29T15:32:36.735Z","type":"message"}
{"nick":"bnoordhuis","message":"aw","date":"2013-05-29T15:33:23.352Z","type":"message"}
{"nick":"bnoordhuis","message":"preempted","date":"2013-05-29T15:33:25.679Z","type":"message"}
{"nick":"bnoordhuis","action":"force-pushes","date":"2013-05-29T15:33:30.402Z","type":"action"}
{"nick":"bnoordhuis","action":"doesn't really","date":"2013-05-29T15:33:37.357Z","type":"action"}
{"nick":"bnoordhuis","message":"it's okay, bert can use the commit","date":"2013-05-29T15:34:19.113Z","type":"message"}
{"nick":"bnoordhuis","message":" git shortlog -ns | head -4","date":"2013-05-29T15:34:27.818Z","type":"message"}
{"nick":"bnoordhuis","message":"   864  Ben Noordhuis","date":"2013-05-29T15:34:27.985Z","type":"message"}
{"nick":"bnoordhuis","message":"   576  Bert Belder","date":"2013-05-29T15:34:27.985Z","type":"message"}
{"nick":"bnoordhuis","message":"   337  Ryan Dahl","date":"2013-05-29T15:34:27.985Z","type":"message"}
{"nick":"bnoordhuis","message":"   136  Igor Zinkovsky","date":"2013-05-29T15:34:27.986Z","type":"message"}
{"nick":"bnoordhuis","message":"still a bit of catching up to do, bertje","date":"2013-05-29T15:34:39.561Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10\u0002: #83 \u00037UNSTABLE\u000f smartos (2/186) windows (5/187) http://jenkins.nodejs.org/job/libuv-v0.10/83/","date":"2013-05-29T15:34:48.637Z","type":"message"}
{"nick":"benoitc","reason":"Changing host","date":"2013-05-29T15:34:55.213Z","type":"quit"}
{"nick":"benoitc","date":"2013-05-29T15:34:55.378Z","type":"join"}
{"nick":"saghul","message":"thanks!","date":"2013-05-29T15:35:08.730Z","type":"message"}
{"nick":"`3rdEden","message":"bnoordhuis: it's not the amount of commits that count but the quality of the commits ;)","date":"2013-05-29T15:35:35.793Z","type":"message"}
{"nick":"`3rdEden","new_nick":"`3E|BRB","date":"2013-05-29T15:36:23.327Z","type":"nick"}
{"nick":"bnoordhuis","message":"i've heard similar comments in other contexts","date":"2013-05-29T15:37:07.294Z","type":"message"}
{"nick":"bnoordhuis","message":"something about size","date":"2013-05-29T15:37:10.248Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10-gyp\u0002: #46 \u00037UNSTABLE\u000f windows-x64 (4/187) linux-ia32 (3/186) linux-x64 (1/186) windows-ia32 (3/187) smartos-x64 (2/186) smartos-ia32 (2/186) http://jenkins.nodejs.org/job/libuv-v0.10-gyp/46/","date":"2013-05-29T15:39:30.651Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-05-29T15:46:42.021Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #78 \u00037UNSTABLE\u000f smartos-ia32 (1/588) osx-ia32 (1/588) smartos-x64 (3/588) osx-x64 (1/588) http://jenkins.nodejs.org/job/libuv-node-integration/78/","date":"2013-05-29T15:50:17.712Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-05-29T15:51:55.714Z","type":"nick"}
{"nick":"AvianFlu","date":"2013-05-29T15:54:10.311Z","type":"join"}
