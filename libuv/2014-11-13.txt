{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-11-13T00:00:00.987Z","type":"quit"}
{"nick":"ircretary","date":"2014-11-13T00:00:10.167Z","type":"join"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-11-13T00:05:12.385Z","type":"quit"}
{"nick":"sblom","reason":"Read error: Connection reset by peer","date":"2014-11-13T00:07:54.341Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-11-13T00:08:08.712Z","type":"quit"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T00:09:39.245Z","type":"quit"}
{"nick":"thlorenz_","date":"2014-11-13T00:13:08.214Z","type":"join"}
{"nick":"chris_99","reason":"Quit: Ex-Chat","date":"2014-11-13T00:16:10.355Z","type":"quit"}
{"nick":"thlorenz_","reason":"Remote host closed the connection","date":"2014-11-13T00:22:28.088Z","type":"quit"}
{"nick":"a_le","date":"2014-11-13T00:23:56.072Z","type":"join"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-11-13T00:33:10.372Z","type":"quit"}
{"nick":"a_le","date":"2014-11-13T00:34:00.367Z","type":"join"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2014-11-13T00:34:03.970Z","type":"quit"}
{"nick":"kriskowal","date":"2014-11-13T00:34:12.358Z","type":"join"}
{"nick":"AlexisMocha","date":"2014-11-13T00:35:38.581Z","type":"join"}
{"nick":"stagas","date":"2014-11-13T00:42:34.301Z","type":"join"}
{"nick":"dap_","date":"2014-11-13T00:48:44.911Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-11-13T00:51:43.485Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T00:55:14.976Z","type":"join"}
{"nick":"Fishrock123","date":"2014-11-13T00:58:03.566Z","type":"join"}
{"nick":"sblom","date":"2014-11-13T01:05:38.357Z","type":"join"}
{"nick":"Fishrock","date":"2014-11-13T01:08:32.325Z","type":"join"}
{"nick":"Fishrock123","reason":"Read error: Connection reset by peer","date":"2014-11-13T01:08:39.036Z","type":"quit"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2014-11-13T01:10:50.694Z","type":"quit"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-11-13T01:20:18.912Z","type":"quit"}
{"nick":"abraxas_","date":"2014-11-13T01:34:05.511Z","type":"join"}
{"nick":"thlorenz","date":"2014-11-13T01:38:12.372Z","type":"join"}
{"nick":"kazupon","date":"2014-11-13T01:38:40.345Z","type":"join"}
{"nick":"abraxas_","reason":"Ping timeout: 265 seconds","date":"2014-11-13T01:39:15.119Z","type":"quit"}
{"nick":"kriskowal","reason":"Quit: kriskowal","date":"2014-11-13T01:45:53.693Z","type":"quit"}
{"nick":"yourname","date":"2014-11-13T01:48:24.070Z","type":"join"}
{"nick":"sblom","reason":"Read error: Connection reset by peer","date":"2014-11-13T01:48:43.146Z","type":"quit"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-11-13T01:52:30.906Z","type":"quit"}
{"nick":"Ralith","reason":"Ping timeout: 265 seconds","date":"2014-11-13T02:07:42.560Z","type":"quit"}
{"nick":"dshaw_","date":"2014-11-13T02:09:24.845Z","type":"join"}
{"nick":"a_le","reason":"Ping timeout: 265 seconds","date":"2014-11-13T02:12:32.629Z","type":"quit"}
{"nick":"yourname","reason":"Quit: leaving","date":"2014-11-13T02:23:00.981Z","type":"quit"}
{"nick":"toothrot","date":"2014-11-13T02:26:01.417Z","type":"join"}
{"nick":"abraxas_","date":"2014-11-13T02:26:57.914Z","type":"join"}
{"nick":"Fishrock","reason":"Quit: Leaving...","date":"2014-11-13T02:30:45.894Z","type":"quit"}
{"nick":"Ralith","date":"2014-11-13T02:31:35.325Z","type":"join"}
{"nick":"AlexisMocha","reason":"Ping timeout: 265 seconds","date":"2014-11-13T02:40:05.620Z","type":"quit"}
{"nick":"a_le","date":"2014-11-13T02:51:09.569Z","type":"join"}
{"nick":"WalrusPony","date":"2014-11-13T02:58:49.330Z","type":"join"}
{"nick":"WalrusPony1","reason":"Ping timeout: 255 seconds","date":"2014-11-13T03:01:06.189Z","type":"quit"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T03:07:14.695Z","type":"quit"}
{"nick":"a_le_","date":"2014-11-13T03:10:22.342Z","type":"join"}
{"nick":"a_le","reason":"Ping timeout: 265 seconds","date":"2014-11-13T03:10:32.564Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-11-13T03:13:49.938Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2014-11-13T03:14:42.380Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2014-11-13T03:16:39.621Z","type":"quit"}
{"nick":"brson","date":"2014-11-13T03:17:20.524Z","type":"join"}
{"nick":"piscisaureus","reason":"Ping timeout: 265 seconds","date":"2014-11-13T03:31:19.616Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-11-13T03:33:49.289Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2014-11-13T03:34:37.320Z","type":"quit"}
{"nick":"dshaw_","date":"2014-11-13T03:56:00.617Z","type":"join"}
{"nick":"yunong","reason":"Read error: Network is unreachable","date":"2014-11-13T04:03:54.769Z","type":"quit"}
{"nick":"yunong","date":"2014-11-13T04:04:29.399Z","type":"join"}
{"nick":"feross","reason":"Ping timeout: 272 seconds","date":"2014-11-13T04:05:55.907Z","type":"quit"}
{"nick":"mikolalysenko_","reason":"Ping timeout: 272 seconds","date":"2014-11-13T04:05:56.026Z","type":"quit"}
{"nick":"rphillips","reason":"Read error: Connection reset by peer","date":"2014-11-13T04:06:09.138Z","type":"quit"}
{"nick":"Raynos","reason":"Write error: Connection reset by peer","date":"2014-11-13T04:06:10.900Z","type":"quit"}
{"nick":"felixge_____","date":"2014-11-13T04:06:29.241Z","type":"join"}
{"nick":"rphillips","date":"2014-11-13T04:06:36.555Z","type":"join"}
{"nick":"feross","date":"2014-11-13T04:06:39.159Z","type":"join"}
{"nick":"mikolalysenko_","date":"2014-11-13T04:07:24.277Z","type":"join"}
{"nick":"groundwater__","date":"2014-11-13T04:07:26.188Z","type":"join"}
{"nick":"benoitc_","date":"2014-11-13T04:09:14.396Z","type":"join"}
{"nick":"isaacs_","date":"2014-11-13T04:09:50.363Z","type":"join"}
{"nick":"isaacs","reason":"Disconnected by services","date":"2014-11-13T04:10:04.740Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-11-13T04:11:02.338Z","type":"quit"}
{"nick":"Raynos","date":"2014-11-13T04:11:39.931Z","type":"join"}
{"nick":"Left_Turn","reason":"Remote host closed the connection","date":"2014-11-13T04:11:50.734Z","type":"quit"}
{"nick":"kkaefer_","date":"2014-11-13T04:12:01.947Z","type":"join"}
{"nick":"pquerna","reason":"Disconnected by services","date":"2014-11-13T04:12:05.146Z","type":"quit"}
{"nick":"pquerna_","date":"2014-11-13T04:12:08.823Z","type":"join"}
{"nick":"groundwater_","reason":"Ping timeout: 272 seconds","date":"2014-11-13T04:12:25.715Z","type":"quit"}
{"nick":"felixge____","reason":"Ping timeout: 272 seconds","date":"2014-11-13T04:12:25.948Z","type":"quit"}
{"nick":"zj99f_","date":"2014-11-13T04:12:26.385Z","type":"join"}
{"nick":"benoitc","reason":"Ping timeout: 272 seconds","date":"2014-11-13T04:12:27.319Z","type":"quit"}
{"nick":"rje","reason":"Ping timeout: 272 seconds","date":"2014-11-13T04:12:27.549Z","type":"quit"}
{"nick":"kkaefer","reason":"Ping timeout: 272 seconds","date":"2014-11-13T04:12:27.655Z","type":"quit"}
{"nick":"Wraithan","reason":"Ping timeout: 272 seconds","date":"2014-11-13T04:12:28.153Z","type":"quit"}
{"nick":"zj99f","reason":"Ping timeout: 272 seconds","date":"2014-11-13T04:12:28.583Z","type":"quit"}
{"nick":"groundwater__","new_nick":"groundwater_","date":"2014-11-13T04:12:48.560Z","type":"nick"}
{"nick":"felixge_____","new_nick":"felixge____","date":"2014-11-13T04:13:21.549Z","type":"nick"}
{"nick":"Wraithan","date":"2014-11-13T04:13:28.468Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-11-13T04:14:22.422Z","type":"quit"}
{"nick":"pquerna_","new_nick":"pquerna","date":"2014-11-13T04:14:31.096Z","type":"nick"}
{"nick":"rje","date":"2014-11-13T04:14:54.402Z","type":"join"}
{"nick":"benoitc_","new_nick":"benoitc","date":"2014-11-13T04:15:46.121Z","type":"nick"}
{"nick":"bradleymeck","date":"2014-11-13T04:21:50.104Z","type":"join"}
{"nick":"avalanche123","date":"2014-11-13T04:22:19.495Z","type":"join"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2014-11-13T04:24:06.210Z","type":"quit"}
{"nick":"avalanche123","reason":"Ping timeout: 244 seconds","date":"2014-11-13T04:26:34.072Z","type":"quit"}
{"nick":"stagas","date":"2014-11-13T04:29:46.821Z","type":"join"}
{"nick":"kazupon","date":"2014-11-13T04:46:22.105Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 258 seconds","date":"2014-11-13T04:49:10.972Z","type":"quit"}
{"nick":"abraxas_","reason":"Remote host closed the connection","date":"2014-11-13T04:49:43.793Z","type":"quit"}
{"nick":"abraxas_","date":"2014-11-13T04:51:27.341Z","type":"join"}
{"nick":"janjongboom","date":"2014-11-13T05:03:34.947Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-11-13T05:10:03.718Z","type":"quit"}
{"nick":"AvianFlu","reason":"Ping timeout: 264 seconds","date":"2014-11-13T05:26:16.045Z","type":"quit"}
{"nick":"bradleymeck","date":"2014-11-13T05:29:08.238Z","type":"join"}
{"nick":"seishun","date":"2014-11-13T05:32:34.738Z","type":"join"}
{"nick":"toothrot","reason":"Ping timeout: 245 seconds","date":"2014-11-13T05:37:44.616Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-11-13T05:49:39.604Z","type":"quit"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-11-13T05:50:17.502Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 240 seconds","date":"2014-11-13T06:21:17.275Z","type":"quit"}
{"nick":"thlorenz","date":"2014-11-13T06:25:10.153Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 258 seconds","date":"2014-11-13T06:29:36.727Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 244 seconds","date":"2014-11-13T06:44:18.516Z","type":"quit"}
{"nick":"janjongboom","date":"2014-11-13T06:44:36.904Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2014-11-13T06:47:11.028Z","type":"quit"}
{"nick":"kazupon_","date":"2014-11-13T06:47:14.710Z","type":"join"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-11-13T06:59:21.236Z","type":"quit"}
{"nick":"janjongboom","date":"2014-11-13T07:11:14.557Z","type":"join"}
{"nick":"a_le_","reason":"Remote host closed the connection","date":"2014-11-13T07:11:37.908Z","type":"quit"}
{"nick":"a_le","date":"2014-11-13T07:12:18.574Z","type":"join"}
{"nick":"janjongboom","reason":"Client Quit","date":"2014-11-13T07:13:21.421Z","type":"quit"}
{"nick":"kazupon_","reason":"Remote host closed the connection","date":"2014-11-13T07:41:52.374Z","type":"quit"}
{"nick":"kazupon","date":"2014-11-13T07:45:59.134Z","type":"join"}
{"nick":"Ldxngx_","date":"2014-11-13T07:48:30.820Z","type":"join"}
{"nick":"Ldxngx_","reason":"Client Quit","date":"2014-11-13T07:48:34.928Z","type":"quit"}
{"nick":"Ldxngx_","date":"2014-11-13T07:48:43.358Z","type":"join"}
{"nick":"Ldxngx_","reason":"Client Quit","date":"2014-11-13T07:48:43.478Z","type":"quit"}
{"nick":"Ldxngx_","date":"2014-11-13T07:49:09.618Z","type":"join"}
{"nick":"Ldxngx_","reason":"Client Quit","date":"2014-11-13T07:49:23.213Z","type":"quit"}
{"nick":"Ldxngx_","date":"2014-11-13T07:49:32.099Z","type":"join"}
{"nick":"Ldxngx_","reason":"Client Quit","date":"2014-11-13T07:49:45.702Z","type":"quit"}
{"nick":"Ldxngx_","date":"2014-11-13T07:49:54.376Z","type":"join"}
{"nick":"bajtos","date":"2014-11-13T07:56:09.140Z","type":"join"}
{"nick":"Ldxngx_","new_nick":"Ldxngx","date":"2014-11-13T07:56:30.295Z","type":"nick"}
{"nick":"Ldxngx","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2014-11-13T08:02:00.158Z","type":"quit"}
{"nick":"Ldxngx","date":"2014-11-13T08:02:11.486Z","type":"join"}
{"nick":"rendar","date":"2014-11-13T08:02:57.406Z","type":"join"}
{"nick":"janjongboom","date":"2014-11-13T08:32:59.803Z","type":"join"}
{"nick":"SergeiRND","date":"2014-11-13T08:37:03.940Z","type":"join"}
{"nick":"SergeiRND1","date":"2014-11-13T08:40:59.917Z","type":"join"}
{"nick":"SergeiRND","reason":"Ping timeout: 264 seconds","date":"2014-11-13T08:44:53.904Z","type":"quit"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-11-13T08:55:37.732Z","type":"quit"}
{"nick":"bradleymeck","date":"2014-11-13T09:23:19.195Z","type":"join"}
{"nick":"janjongboom","date":"2014-11-13T09:23:45.735Z","type":"join"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-11-13T09:31:10.885Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2014-11-13T09:38:23.435Z","type":"quit"}
{"nick":"Left_Turn","date":"2014-11-13T09:49:51.596Z","type":"join"}
{"nick":"stagas","date":"2014-11-13T09:55:44.143Z","type":"join"}
{"nick":"janjongboom","date":"2014-11-13T10:00:19.128Z","type":"join"}
{"nick":"ijroth","date":"2014-11-13T10:05:26.341Z","type":"join"}
{"nick":"janjongboom","reason":"Read error: Connection reset by peer","date":"2014-11-13T10:08:10.872Z","type":"quit"}
{"nick":"janjongboom","date":"2014-11-13T10:08:40.257Z","type":"join"}
{"nick":"janjongboom","reason":"Read error: Connection reset by peer","date":"2014-11-13T10:21:02.028Z","type":"quit"}
{"nick":"bajtos","date":"2014-11-13T10:21:57.895Z","type":"part"}
{"nick":"bajtos","date":"2014-11-13T10:22:26.207Z","type":"join"}
{"nick":"janjongboom","date":"2014-11-13T10:27:09.024Z","type":"join"}
{"nick":"AlexisMocha","date":"2014-11-13T10:32:16.828Z","type":"join"}
{"nick":"janjongboom","reason":"Ping timeout: 240 seconds","date":"2014-11-13T10:38:53.026Z","type":"quit"}
{"nick":"janjongboom","date":"2014-11-13T10:47:07.858Z","type":"join"}
{"nick":"SergeiRND1","reason":"Quit: Leaving.","date":"2014-11-13T10:47:48.916Z","type":"quit"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-11-13T10:56:45.147Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-11-13T11:02:33.621Z","type":"quit"}
{"nick":"janjongboom","date":"2014-11-13T11:04:32.735Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2014-11-13T11:14:44.543Z","type":"quit"}
{"nick":"SergeiRND","date":"2014-11-13T11:20:58.839Z","type":"join"}
{"nick":"chris_99","date":"2014-11-13T11:25:38.496Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-11-13T11:25:39.928Z","type":"quit"}
{"nick":"abraxas_","reason":"Remote host closed the connection","date":"2014-11-13T11:31:37.688Z","type":"quit"}
{"nick":"abraxas_","date":"2014-11-13T11:32:12.689Z","type":"join"}
{"nick":"abraxas_","reason":"Ping timeout: 240 seconds","date":"2014-11-13T11:36:37.326Z","type":"quit"}
{"nick":"bajtos","date":"2014-11-13T11:50:53.051Z","type":"join"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-11-13T11:58:36.249Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T12:21:41.375Z","type":"join"}
{"nick":"janjongboom","date":"2014-11-13T12:34:42.632Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-11-13T12:36:39.727Z","type":"quit"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T12:42:27.744Z","type":"quit"}
{"nick":"piscisaureus","date":"2014-11-13T12:44:25.070Z","type":"join"}
{"nick":"iarna","date":"2014-11-13T12:45:10.573Z","type":"join"}
{"nick":"bradleymeck","date":"2014-11-13T12:45:27.822Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-11-13T12:53:58.980Z","type":"quit"}
{"nick":"dshaw_","date":"2014-11-13T13:09:12.542Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2014-11-13T13:14:10.043Z","type":"quit"}
{"nick":"abraxas_","date":"2014-11-13T13:21:01.852Z","type":"join"}
{"nick":"abraxas_","reason":"Ping timeout: 240 seconds","date":"2014-11-13T13:25:17.208Z","type":"quit"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T13:31:35.862Z","type":"quit"}
{"nick":"AvianFlu","date":"2014-11-13T13:31:38.745Z","type":"join"}
{"nick":"iarna","date":"2014-11-13T13:32:03.591Z","type":"join"}
{"nick":"bajtos","date":"2014-11-13T13:32:40.708Z","type":"join"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T13:37:11.986Z","type":"quit"}
{"nick":"euoia","reason":"Ping timeout: 258 seconds","date":"2014-11-13T13:38:33.815Z","type":"quit"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-11-13T13:43:53.679Z","type":"quit"}
{"nick":"euoia","date":"2014-11-13T13:44:51.791Z","type":"join"}
{"nick":"euoia","reason":"Remote host closed the connection","date":"2014-11-13T13:49:41.155Z","type":"quit"}
{"nick":"euoia","date":"2014-11-13T13:56:52.136Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 272 seconds","date":"2014-11-13T13:59:59.844Z","type":"quit"}
{"nick":"SergeiRND","reason":"Quit: Leaving.","date":"2014-11-13T14:02:15.333Z","type":"quit"}
{"nick":"euoia","reason":"Ping timeout: 265 seconds","date":"2014-11-13T14:15:11.070Z","type":"quit"}
{"nick":"SergeiRND","date":"2014-11-13T14:16:32.911Z","type":"join"}
{"nick":"dsantiago","reason":"Ping timeout: 250 seconds","date":"2014-11-13T14:18:04.296Z","type":"quit"}
{"nick":"SergeiRND","reason":"Client Quit","date":"2014-11-13T14:19:35.749Z","type":"quit"}
{"nick":"SergeiRND","date":"2014-11-13T14:22:21.925Z","type":"join"}
{"nick":"dsantiago","date":"2014-11-13T14:25:57.458Z","type":"join"}
{"nick":"euoia","date":"2014-11-13T14:32:54.862Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-11-13T14:34:20.415Z","type":"quit"}
{"nick":"SergeiRND","reason":"Quit: Leaving.","date":"2014-11-13T14:36:46.180Z","type":"quit"}
{"nick":"Fishrock123","date":"2014-11-13T14:38:38.892Z","type":"join"}
{"nick":"euoia","reason":"Ping timeout: 258 seconds","date":"2014-11-13T14:41:02.894Z","type":"quit"}
{"nick":"dshaw_","date":"2014-11-13T14:41:17.862Z","type":"join"}
{"nick":"kazupon","date":"2014-11-13T14:45:45.186Z","type":"join"}
{"nick":"kellabyte","message":"ok this is strange, I compiled and ran my code like a hundred times and it worked fine, I made no changes and now this assertion fires","date":"2014-11-13T14:52:52.770Z","type":"message"}
{"nick":"kellabyte","message":"lib/libuv/src/unix/stream.c:547: uv_accept: Assertion `server->loop == client->loop' failed.","date":"2014-11-13T14:52:57.693Z","type":"message"}
{"nick":"kellabyte","message":"any thoughts? :P","date":"2014-11-13T14:53:07.173Z","type":"message"}
{"nick":"kellabyte","message":"looks like it's checking that the server and client event loops aren't the same? but odd that this only started failing now not all the time","date":"2014-11-13T14:59:07.856Z","type":"message"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2014-11-13T15:02:36.326Z","type":"nick"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-11-13T15:05:05.697Z","type":"quit"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-11-13T15:06:23.722Z","type":"quit"}
{"nick":"txdv","message":"kellabyte: what did you change?","date":"2014-11-13T15:09:10.747Z","type":"message"}
{"nick":"abraxas_","date":"2014-11-13T15:09:58.415Z","type":"join"}
{"nick":"txdv","message":"2011-08-31 13:41 Ryan Dahl          6fd340b   /* TODO document this */","date":"2014-11-13T15:10:03.995Z","type":"message"}
{"nick":"txdv","message":"2011-08-31 13:41 Ryan Dahl          6fd340b   assert(server->loop == client->loop);","date":"2014-11-13T15:10:04.106Z","type":"message"}
{"nick":"txdv","message":":D","date":"2014-11-13T15:10:10.301Z","type":"message"}
{"nick":"txdv","message":"this shit has propagated for 3 years","date":"2014-11-13T15:10:17.446Z","type":"message"}
{"nick":"txdv","message":"as a todo","date":"2014-11-13T15:10:18.803Z","type":"message"}
{"nick":"kellabyte","message":"nothing lol,  I recompiled my code with some config changes but I did that like 100 times yesterday, I put the changes back to normal and its still doing it","date":"2014-11-13T15:10:24.158Z","type":"message"}
{"nick":"dshaw_","date":"2014-11-13T15:10:30.950Z","type":"join"}
{"nick":"txdv","message":"it is checking exactly the opposite","date":"2014-11-13T15:11:03.108Z","type":"message"}
{"nick":"txdv","message":"the client and server loop have to be the same","date":"2014-11-13T15:11:10.764Z","type":"message"}
{"nick":"kellabyte","message":"ah","date":"2014-11-13T15:11:31.373Z","type":"message"}
{"nick":"txdv","message":"assert(0) will return a runtime error","date":"2014-11-13T15:11:49.856Z","type":"message"}
{"nick":"txdv","message":"throw","date":"2014-11-13T15:11:53.052Z","type":"message"}
{"nick":"txdv","message":"whatever","date":"2014-11-13T15:11:54.028Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2014-11-13T15:12:00.812Z","type":"quit"}
{"nick":"txdv","message":"assert(1) everything is fine!","date":"2014-11-13T15:12:02.206Z","type":"message"}
{"nick":"kellabyte","message":"no idea how this can magically assert all the sudden lol","date":"2014-11-13T15:12:08.086Z","type":"message"}
{"nick":"txdv","message":"do you have multiple threadS?","date":"2014-11-13T15:12:23.472Z","type":"message"}
{"nick":"txdv","message":"Or only one thread with one loop?","date":"2014-11-13T15:12:33.356Z","type":"message"}
{"nick":"abraxas_","reason":"Ping timeout: 265 seconds","date":"2014-11-13T15:14:38.143Z","type":"quit"}
{"nick":"kellabyte","message":"I'm creating multiple event loops and communicating over IPC","date":"2014-11-13T15:21:35.096Z","type":"message"}
{"nick":"txdv","message":"so you are probably acceptign in a different event loop","date":"2014-11-13T15:23:20.650Z","type":"message"}
{"nick":"txdv","message":"instead of accepting in the same one and then sending via IPC","date":"2014-11-13T15:23:27.966Z","type":"message"}
{"nick":"stagas","date":"2014-11-13T15:26:10.142Z","type":"join"}
{"nick":"kellabyte","message":"I guess but how was this working before with no code changes? lol","date":"2014-11-13T15:26:13.617Z","type":"message"}
{"nick":"txdv","message":"it didn't ","date":"2014-11-13T15:26:42.216Z","type":"message"}
{"nick":"txdv","message":"maybe you compiled a release version of libuv","date":"2014-11-13T15:26:53.214Z","type":"message"}
{"nick":"txdv","message":"which ignores asserts?","date":"2014-11-13T15:27:02.225Z","type":"message"}
{"nick":"kellabyte","message":"naa, it was working in debug","date":"2014-11-13T15:28:51.984Z","type":"message"}
{"nick":"txdv","message":"ok","date":"2014-11-13T15:29:14.663Z","type":"message"}
{"nick":"txdv","message":"a miracle","date":"2014-11-13T15:29:27.548Z","type":"message"}
{"nick":"txdv","message":"praise the lord","date":"2014-11-13T15:29:31.506Z","type":"message"}
{"nick":"kellabyte","message":"lol","date":"2014-11-13T15:29:58.466Z","type":"message"}
{"nick":"kellabyte","message":"something is up","date":"2014-11-13T15:30:01.026Z","type":"message"}
{"nick":"thlorenz","date":"2014-11-13T15:35:14.427Z","type":"join"}
{"nick":"txdv","message":"saghul might return from his holidays","date":"2014-11-13T15:35:55.662Z","type":"message"}
{"nick":"txdv","message":"and release the request based read api","date":"2014-11-13T15:36:03.752Z","type":"message"}
{"nick":"kellabyte","message":"what's request based read api?","date":"2014-11-13T15:37:34.833Z","type":"message"}
{"nick":"kellabyte","message":"btw I just did a git clone fresh, and it runs fine","date":"2014-11-13T15:37:42.265Z","type":"message"}
{"nick":"kellabyte","message":"lol something is wacky","date":"2014-11-13T15:37:46.342Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-11-13T15:40:48.012Z","type":"quit"}
{"nick":"janjongboom","date":"2014-11-13T15:49:48.870Z","type":"join"}
{"nick":"kriskowal","date":"2014-11-13T15:53:54.338Z","type":"join"}
{"nick":"chris_99","reason":"Remote host closed the connection","date":"2014-11-13T15:57:33.475Z","type":"quit"}
{"nick":"kellabyte","message":"ok I was able to reproduce the issue","date":"2014-11-13T15:57:37.287Z","type":"message"}
{"nick":"txdv","message":"kellabyte: uv_read_start/stop will change to what write has","date":"2014-11-13T15:57:37.783Z","type":"message"}
{"nick":"kellabyte","message":"wow this is so weird","date":"2014-11-13T15:57:39.400Z","type":"message"}
{"nick":"txdv","message":"so","date":"2014-11-13T15:57:45.725Z","type":"message"}
{"nick":"txdv","message":"you kiss your cat, turn 3 circles around the chair and then the bug appears?","date":"2014-11-13T15:57:58.327Z","type":"message"}
{"nick":"avalanche123","date":"2014-11-13T15:58:16.667Z","type":"join"}
{"nick":"kellabyte","message":"ok lol so if I set haywire to create 8 event loops and communicate over IPC, everything runs fine","date":"2014-11-13T15:59:54.919Z","type":"message"}
{"nick":"kellabyte","message":"if I set it to 256, this assert hits","date":"2014-11-13T16:00:00.412Z","type":"message"}
{"nick":"kellabyte","message":"(recompile required in my code to make this change)","date":"2014-11-13T16:00:09.494Z","type":"message"}
{"nick":"kellabyte","message":"if I then set it back to 8, and recompile, and re-run, the assert still happens","date":"2014-11-13T16:00:25.769Z","type":"message"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-11-13T16:01:06.326Z","type":"quit"}
{"nick":"kellabyte","message":"this is the function I'm passing 8 or 256 to: https://github.com/kellabyte/Haywire/blob/master/src/haywire/http_server.c#L134","date":"2014-11-13T16:01:21.182Z","type":"message"}
{"nick":"kellabyte","message":"and this is the line throwing the assert: https://github.com/kellabyte/Haywire/blob/master/src/haywire/connection_consumer.c#L29","date":"2014-11-13T16:03:19.856Z","type":"message"}
{"nick":"kellabyte","message":"but why only when I set it to 256, and its like once it is broke, its now broke for 8, even though 8 just worked","date":"2014-11-13T16:03:46.293Z","type":"message"}
{"nick":"kellabyte","message":"even though its separate process runs","date":"2014-11-13T16:04:04.331Z","type":"message"}
{"nick":"kellabyte","message":"so confused :P","date":"2014-11-13T16:04:10.462Z","type":"message"}
{"nick":"avalanche123","date":"2014-11-13T16:04:11.422Z","type":"join"}
{"nick":"thlorenz","date":"2014-11-13T16:16:37.425Z","type":"join"}
{"nick":"a_le","date":"2014-11-13T16:25:58.604Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-11-13T16:29:28.360Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-11-13T16:34:53.506Z","type":"quit"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-11-13T16:37:05.081Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T16:38:02.572Z","type":"join"}
{"nick":"inolen","date":"2014-11-13T16:42:22.996Z","type":"join"}
{"nick":"iarna","reason":"Ping timeout: 256 seconds","date":"2014-11-13T16:42:42.603Z","type":"quit"}
{"nick":"seishun","date":"2014-11-13T16:43:42.248Z","type":"join"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2014-11-13T16:47:05.117Z","type":"nick"}
{"nick":"bradleymeck","date":"2014-11-13T16:49:40.457Z","type":"join"}
{"nick":"dshaw_","date":"2014-11-13T16:54:43.898Z","type":"join"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-11-13T16:56:43.792Z","type":"quit"}
{"nick":"abraxas_","date":"2014-11-13T16:58:36.819Z","type":"join"}
{"nick":"janjongboom","date":"2014-11-13T17:00:19.680Z","type":"join"}
{"nick":"abraxas_","reason":"Ping timeout: 272 seconds","date":"2014-11-13T17:03:39.866Z","type":"quit"}
{"nick":"jgi","date":"2014-11-13T17:10:32.352Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: ping","date":"2014-11-13T17:13:41.753Z","type":"message"}
{"nick":"dap_","date":"2014-11-13T17:17:18.069Z","type":"join"}
{"nick":"piscisaureus","reason":"Ping timeout: 244 seconds","date":"2014-11-13T17:21:34.072Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T17:25:17.026Z","type":"join"}
{"nick":"bajtos","date":"2014-11-13T17:26:01.940Z","type":"join"}
{"nick":"trevnorris","message":"jgi: ping","date":"2014-11-13T17:28:10.454Z","type":"message"}
{"nick":"jgi","message":"trevnorris: pong","date":"2014-11-13T17:28:16.400Z","type":"message"}
{"nick":"trevnorris","message":"jgi: not sure if you've seen https://github.com/joyent/node/pull/8110 in the last day, but i'm fixing up the commits.","date":"2014-11-13T17:28:48.318Z","type":"message"}
{"nick":"trevnorris","message":"things are a lot different now.","date":"2014-11-13T17:28:53.009Z","type":"message"}
{"nick":"trevnorris","message":"and still in process of getting everything in place.","date":"2014-11-13T17:29:02.389Z","type":"message"}
{"nick":"jgi","message":"trevnorris: ok, I was planning to continue reviewing/getting a better understanding of it today, so I will let you know if I have any question, thank you very much for the heads up :)","date":"2014-11-13T17:30:24.005Z","type":"message"}
{"nick":"trevnorris","message":"jgi: np. each commit should be pretty well self contained. i.e. a lot easier to understand in context.","date":"2014-11-13T17:31:31.297Z","type":"message"}
{"nick":"Ralith","reason":"Ping timeout: 255 seconds","date":"2014-11-13T17:32:13.317Z","type":"quit"}
{"nick":"isaacs_","new_nick":"isaacs","date":"2014-11-13T17:32:22.280Z","type":"nick"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T17:37:44.452Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T17:38:35.529Z","type":"join"}
{"nick":"avalanche123","date":"2014-11-13T17:41:09.299Z","type":"join"}
{"nick":"brson","date":"2014-11-13T17:45:37.894Z","type":"join"}
{"nick":"kazupon","date":"2014-11-13T17:45:43.991Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2014-11-13T17:47:30.161Z","type":"quit"}
{"nick":"bajtos","date":"2014-11-13T17:49:14.701Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2014-11-13T17:49:53.026Z","type":"quit"}
{"nick":"Ralith","date":"2014-11-13T17:57:46.573Z","type":"join"}
{"nick":"AlexisMocha","reason":"Ping timeout: 272 seconds","date":"2014-11-13T17:58:45.869Z","type":"quit"}
{"nick":"AvianFlu","reason":"Ping timeout: 245 seconds","date":"2014-11-13T17:59:52.680Z","type":"quit"}
{"nick":"iarna","reason":"Ping timeout: 256 seconds","date":"2014-11-13T18:07:08.618Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T18:07:28.457Z","type":"join"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-11-13T18:07:46.822Z","type":"quit"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T18:17:18.895Z","type":"quit"}
{"nick":"kriskowal","reason":"Quit: kriskowal","date":"2014-11-13T18:17:48.117Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T18:18:53.629Z","type":"join"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T18:21:14.459Z","type":"quit"}
{"nick":"AvianFlu","date":"2014-11-13T18:25:45.071Z","type":"join"}
{"nick":"iarna","date":"2014-11-13T18:28:21.391Z","type":"join"}
{"nick":"kriskowal","date":"2014-11-13T18:33:55.340Z","type":"join"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-11-13T18:34:43.960Z","type":"quit"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T18:36:25.131Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T18:40:13.582Z","type":"join"}
{"nick":"AlexisMocha","date":"2014-11-13T18:41:01.534Z","type":"join"}
{"nick":"avalanche123","date":"2014-11-13T18:41:13.381Z","type":"join"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T18:41:41.191Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-11-13T18:43:16.374Z","type":"quit"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2014-11-13T18:45:42.884Z","type":"nick"}
{"nick":"abraxas_","date":"2014-11-13T18:47:36.329Z","type":"join"}
{"nick":"abraxas_","reason":"Ping timeout: 250 seconds","date":"2014-11-13T18:51:56.325Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T18:55:10.664Z","type":"join"}
{"nick":"nathan7","reason":"Remote host closed the connection","date":"2014-11-13T18:55:16.873Z","type":"quit"}
{"nick":"jgi","message":"trevnorris: When do you think you’ll be done getting everything in place? In other words, when would be a good time to run tests on all platforms?","date":"2014-11-13T18:58:58.200Z","type":"message"}
{"nick":"thlorenz_","date":"2014-11-13T18:59:29.909Z","type":"join"}
{"nick":"trevnorris","message":"jgi: honestly? I've given up on giving a time. Thought I'd be done last week, up until I realized Node manually deconstructs the classes attached to JS objects, causing segfaults when trying to access native properties on those objects.","date":"2014-11-13T19:07:06.923Z","type":"message"}
{"nick":"trevnorris","message":"so, basically, i'm implementing a subset of things that work and going to call it good at that. we can work on implementing the rest after the v0.12 release since it's all internal API anway.","date":"2014-11-13T19:08:06.477Z","type":"message"}
{"nick":"jgi","message":"trevnorris: ok","date":"2014-11-13T19:08:16.984Z","type":"message"}
{"nick":"trevnorris","message":"jgi: i'll give you an update by EOD with how far I am.","date":"2014-11-13T19:08:32.768Z","type":"message"}
{"nick":"jgi","message":"trevnorris: cool great!","date":"2014-11-13T19:08:39.130Z","type":"message"}
{"nick":"jgi","message":"trevnorris: also, just for my own curiosity, what do you mean by “Node manually deconstructs the classes attached to JS objects”?","date":"2014-11-13T19:08:54.273Z","type":"message"}
{"nick":"nathan7","date":"2014-11-13T19:09:16.726Z","type":"join"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T19:09:59.450Z","type":"quit"}
{"nick":"trevnorris","message":"jgi: internally we construct an object and attach the pointer to a constructed class. though the class is delete'd manually instead of allowing GC to clean it up.","date":"2014-11-13T19:11:09.352Z","type":"message"}
{"nick":"trevnorris","message":"thus the pointer to the class attached to the JS object is then invalid.","date":"2014-11-13T19:11:19.551Z","type":"message"}
{"nick":"iarna","date":"2014-11-13T19:11:30.629Z","type":"join"}
{"nick":"jgi","message":"trevnorris: where is the class deleted manually?","date":"2014-11-13T19:13:06.695Z","type":"message"}
{"nick":"trevnorris","message":"everywhere. e.g. FSReqWrap in the After callback.","date":"2014-11-13T19:13:49.187Z","type":"message"}
{"nick":"trevnorris","message":"i.e. when the req_wrap has completed it's purpose (req is complete)","date":"2014-11-13T19:14:04.522Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2014-11-13T19:14:27.797Z","type":"quit"}
{"nick":"Fishrock","date":"2014-11-13T19:17:08.829Z","type":"join"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T19:21:03.237Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T19:21:30.601Z","type":"join"}
{"nick":"Fishrock123","reason":"Ping timeout: 272 seconds","date":"2014-11-13T19:21:44.044Z","type":"quit"}
{"nick":"kriskowal","reason":"Quit: kriskowal","date":"2014-11-13T19:22:16.045Z","type":"quit"}
{"nick":"kriskowal","date":"2014-11-13T19:27:21.865Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Steven Loomis\u000f \u00037v0.12\u000f * \u0002855b1c9\u0002 : build: i18n: support little-endian machines - http://git.io/XbkKkA","date":"2014-11-13T19:27:28.749Z","type":"message"}
{"nick":"iarna","reason":"Ping timeout: 264 seconds","date":"2014-11-13T19:28:04.598Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-11-13T19:28:26.999Z","type":"quit"}
{"nick":"octetcloud","date":"2014-11-13T19:28:39.345Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2014-11-13T19:31:54.896Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T19:31:59.546Z","type":"join"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-11-13T19:34:25.493Z","type":"quit"}
{"nick":"jgi","date":"2014-11-13T19:36:31.459Z","type":"join"}
{"nick":"avalanche123","date":"2014-11-13T19:42:35.527Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2014-11-13T19:45:16.052Z","type":"quit"}
{"nick":"a_le","reason":"Ping timeout: 265 seconds","date":"2014-11-13T19:53:27.593Z","type":"quit"}
{"nick":"Ldxngx","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2014-11-13T19:59:15.940Z","type":"quit"}
{"nick":"iarna","reason":"Ping timeout: 256 seconds","date":"2014-11-13T20:04:26.564Z","type":"quit"}
{"nick":"rendar","reason":"Ping timeout: 256 seconds","date":"2014-11-13T20:06:08.580Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T20:06:20.139Z","type":"join"}
{"nick":"kriskowal","reason":"Quit: kriskowal","date":"2014-11-13T20:07:11.618Z","type":"quit"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T20:09:39.122Z","type":"quit"}
{"nick":"rendar","date":"2014-11-13T20:12:01.326Z","type":"join"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-11-13T20:18:33.198Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T20:20:40.668Z","type":"join"}
{"nick":"avalanche123","date":"2014-11-13T20:21:05.186Z","type":"join"}
{"nick":"inolen","date":"2014-11-13T20:22:31.992Z","type":"join"}
{"nick":"thlorenz_","reason":"Remote host closed the connection","date":"2014-11-13T20:31:19.291Z","type":"quit"}
{"nick":"thlorenz","date":"2014-11-13T20:32:07.628Z","type":"join"}
{"nick":"abraxas_","date":"2014-11-13T20:36:17.193Z","type":"join"}
{"nick":"ijroth","date":"2014-11-13T20:36:51.379Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2014-11-13T20:40:01.006Z","type":"quit"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-11-13T20:40:42.679Z","type":"quit"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2014-11-13T20:40:52.507Z","type":"nick"}
{"nick":"abraxas_","reason":"Ping timeout: 264 seconds","date":"2014-11-13T20:41:17.856Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2014-11-13T20:42:13.638Z","type":"quit"}
{"nick":"iarna","reason":"Ping timeout: 256 seconds","date":"2014-11-13T20:44:06.528Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-11-13T20:45:13.649Z","type":"quit"}
{"nick":"dshaw_","date":"2014-11-13T20:48:59.501Z","type":"join"}
{"nick":"avalanch_","date":"2014-11-13T20:50:50.409Z","type":"join"}
{"nick":"avalanch_","reason":"Remote host closed the connection","date":"2014-11-13T20:51:06.505Z","type":"quit"}
{"nick":"avalanch_","date":"2014-11-13T20:51:13.277Z","type":"join"}
{"nick":"kriskowal","date":"2014-11-13T20:51:51.368Z","type":"join"}
{"nick":"chrisdickinson","message":"trevnorris: tjfontaine: dap_: is https://github.com/joyent/node/pull/8666 ready to go into v0.10?","date":"2014-11-13T20:53:02.100Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-11-13T21:02:06.876Z","type":"quit"}
{"nick":"a_le","date":"2014-11-13T21:02:39.140Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-11-13T21:07:06.403Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T21:12:03.697Z","type":"join"}
{"nick":"janjongboom","date":"2014-11-13T21:12:54.950Z","type":"join"}
{"nick":"trevnorris","message":"chrisdickinson: how's this going to affect v0.12? i.e. will we have to float a similar patch?","date":"2014-11-13T21:18:37.287Z","type":"message"}
{"nick":"chrisdickinson","message":"I asked a similar question :)","date":"2014-11-13T21:19:10.547Z","type":"message"}
{"nick":"iarna","reason":"Remote host closed the connection","date":"2014-11-13T21:20:53.144Z","type":"quit"}
{"nick":"trevnorris","message":"chrisdickinson: What would be the difference between SetFatalErrorHandler() and SetUncaughtExceptionHandler() ?","date":"2014-11-13T21:21:40.910Z","type":"message"}
{"nick":"jgi","date":"2014-11-13T21:22:28.943Z","type":"join"}
{"nick":"iarna","date":"2014-11-13T21:22:30.569Z","type":"join"}
{"nick":"chrisdickinson","message":"oh, I wasn't aware of FatalErrorHandler.","date":"2014-11-13T21:22:53.854Z","type":"message"}
{"nick":"trevnorris","message":"yeah. we already use it, but it still doesn't catch errors thrown from a Promise.","date":"2014-11-13T21:23:12.220Z","type":"message"}
{"nick":"trevnorris","message":"so i'd first bring up on the mailing list how to capture uncaught/fatal errors thrown from a Promise on the v8 mailing list.","date":"2014-11-13T21:23:48.283Z","type":"message"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2014-11-13T21:26:40.600Z","type":"nick"}
{"nick":"chrisdickinson","message":"from my understanding of promises, uncaught/fatal errors in promises linger forever without affecting the process","date":"2014-11-13T21:26:55.958Z","type":"message"}
{"nick":"trevnorris","message":"yeah. and I doubt V8 will change that. So there'll be no way to catch an exception from a Promise that's been created within a domain.","date":"2014-11-13T21:27:28.574Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: since Promises don't allow exceptions to propagate, that implies there'll be no way for a tool like domain to catch it, right?","date":"2014-11-13T21:28:17.741Z","type":"message"}
{"nick":"chrisdickinson","message":"forgive my naïvety, but is that an issue? promises don't seem to be able to \"leak\" exceptions out into their surroundings -- and it seems like the expectations are that something like domains wouldn't ever see those exceptions (since they're not being thrown all the way up the stack)","date":"2014-11-13T21:30:40.312Z","type":"message"}
{"nick":"chrisdickinson","message":"to me it seems like promises and domains are in two separate worlds when it comes to error handling (for better or worse)","date":"2014-11-13T21:31:24.062Z","type":"message"}
{"nick":"trevnorris","message":"Domenic will have to verify, but AFAIK Promises were implemented that way on purpose. It's an excellent way to completely ignore exceptions from your code!","date":"2014-11-13T21:32:48.265Z","type":"message"}
{"nick":"a_le","reason":"Ping timeout: 265 seconds","date":"2014-11-13T21:33:05.121Z","type":"quit"}
{"nick":"chrisdickinson","message":"if it's the case that promises swallow exceptions (and domains can do nothing about them), does SetFatalErrorHandler address our needs in v0.12?","date":"2014-11-13T21:33:33.295Z","type":"message"}
{"nick":"chrisdickinson","message":"(& if it does, what are the costs of floating a patch against v8 just for the v0.10 line? are we planning on upgrading v8 in v0.10 in the future?)","date":"2014-11-13T21:34:19.130Z","type":"message"}
{"nick":"a_le","date":"2014-11-13T21:35:11.604Z","type":"join"}
{"nick":"trevnorris","message":"chrisdickinson: V8::SetFatalErrorHandler() exists in v0.10.","date":"2014-11-13T21:36:03.467Z","type":"message"}
{"nick":"chrisdickinson","message":"oh.","date":"2014-11-13T21:36:11.792Z","type":"message"}
{"nick":"trevnorris","message":"it is the reason process._fatalException() gets called.","date":"2014-11-13T21:36:40.720Z","type":"message"}
{"nick":"trevnorris","message":"simply checking a runtime flag and aborting() the moment SetFatalErrorHandle() would be enough.","date":"2014-11-13T21:37:06.322Z","type":"message"}
{"nick":"trevnorris","message":"chrisdickinson: it might also be good if we fprintf(stderr) information about the failure, a lot like what V8 does in a Debug build.","date":"2014-11-13T21:39:11.958Z","type":"message"}
{"nick":"trevnorris","message":"i.e. print out the stack trace, etc.","date":"2014-11-13T21:39:21.063Z","type":"message"}
{"nick":"kriskowal","reason":"Quit: kriskowal","date":"2014-11-13T21:39:56.965Z","type":"quit"}
{"nick":"jgi","message":"trevnorris: do you mean that for v0.10 process_fatalException() is called by the handler passed to SetFatalErrorHandler?","date":"2014-11-13T21:43:43.884Z","type":"message"}
{"nick":"trevnorris","message":"jgi: yes","date":"2014-11-13T21:43:53.146Z","type":"message"}
{"nick":"jgi","message":"trevnorris: that was not my understanding, I thought that the handler passed to SetFatalErrorHandler was just aborting and that process._fatalException was called at different places when a TryCatch had caught.","date":"2014-11-13T21:44:47.053Z","type":"message"}
{"nick":"trevnorris","message":"jgi: well, yeah. it only fires if an exception propagates.","date":"2014-11-13T21:45:37.662Z","type":"message"}
{"nick":"trevnorris","message":"but from the name of the added function \"SetShouldAbortOnUncaughtExceptionHandler\" I assumed that's what was wanted.","date":"2014-11-13T21:46:24.162Z","type":"message"}
{"nick":"trevnorris","message":"that name implies that the exception propagated.","date":"2014-11-13T21:46:46.129Z","type":"message"}
{"nick":"trevnorris","message":"if that's the case then it would be easy enough to simply ReportException(); exit(); here: https://github.com/joyent/node/blob/v0.10/src/node.cc#L1922-L1924","date":"2014-11-13T21:47:32.113Z","type":"message"}
{"nick":"trevnorris","message":"if the flag was set by passing --abort-on-uncaught-exception","date":"2014-11-13T21:47:57.571Z","type":"message"}
{"nick":"trevnorris","message":"(which also implies Node should only abort if the exception was allowed to propagate)","date":"2014-11-13T21:48:23.370Z","type":"message"}
{"nick":"a_le","reason":"Ping timeout: 265 seconds","date":"2014-11-13T21:49:27.724Z","type":"quit"}
{"nick":"a_le","date":"2014-11-13T21:50:11.838Z","type":"join"}
{"nick":"jgi","message":"trevnorris: I’m not sure I understand what you mean, I was just saying that to me, SetFatalErrorHandler is unrelated to process._fatalException, at least in v0.10 (I haven’t checked in v0.12)","date":"2014-11-13T21:55:48.666Z","type":"message"}
{"nick":"jgi","message":"trevnorris: it’s two completely unrelated things","date":"2014-11-13T21:56:02.413Z","type":"message"}
{"nick":"trevnorris","message":"jgi: nope, same thing: https://github.com/joyent/node/blob/v0.10/src/node.cc#L1925-L1945","date":"2014-11-13T21:56:33.150Z","type":"message"}
{"nick":"chrisdickinson","message":"trevnorris: i might be missing how to get from Isolate::DoThrow to node::OnFatalError","date":"2014-11-13T21:57:02.863Z","type":"message"}
{"nick":"jgi","message":"trevnorris: but I thought that the “FatalErrorHandler” set by SetFatalErrorHandler was node::OnFatalError: https://github.com/joyent/node/blob/v0.10/src/node.cc#L2957","date":"2014-11-13T21:58:07.609Z","type":"message"}
{"nick":"jgi","message":"trevnorris: am I missing something?","date":"2014-11-13T21:58:11.849Z","type":"message"}
{"nick":"trevnorris","message":"derp... wrong code block. sec.","date":"2014-11-13T21:58:27.725Z","type":"message"}
{"nick":"iarna","reason":"Read error: Connection reset by peer","date":"2014-11-13T21:59:06.829Z","type":"quit"}
{"nick":"iarna","date":"2014-11-13T21:59:43.077Z","type":"join"}
{"nick":"trevnorris","message":"jgi: the only way _fatalException runs is through node::FatalException().","date":"2014-11-13T21:59:53.021Z","type":"message"}
{"nick":"jgi","message":"trevnorris: yes, I agree with you on that","date":"2014-11-13T22:00:14.385Z","type":"message"}
{"nick":"Fishrock","reason":"Remote host closed the connection","date":"2014-11-13T22:02:05.411Z","type":"quit"}
{"nick":"trevnorris","message":"jgi: ah yes, I was mistaken. We have it setup so FatalException() is manually run in case of an exception. Because SetFatalErrorHandler() doesn't give the callback enough information to be very useful.","date":"2014-11-13T22:02:25.595Z","type":"message"}
{"nick":"iarna","reason":"Read error: Connection reset by peer","date":"2014-11-13T22:02:27.665Z","type":"quit"}
{"nick":"trevnorris","message":"though that should still imply that it's unnecessary to add anything to V8.","date":"2014-11-13T22:02:52.888Z","type":"message"}
{"nick":"iarna","date":"2014-11-13T22:02:56.598Z","type":"join"}
{"nick":"jgi","message":"trevnorris: my understanding was that the fatal error handler was used when v8 can’t continue its execution, which is different than when an error is thrown and the exception is uncaught","date":"2014-11-13T22:04:32.714Z","type":"message"}
{"nick":"trevnorris","message":"jgi: can you give an example?","date":"2014-11-13T22:05:14.164Z","type":"message"}
{"nick":"chrisdickinson","message":"seems like https://github.com/joyent/node/blob/v0.10/deps/v8/src/api.cc#L136-L142 is the only place that can *get* the handler, ","date":"2014-11-13T22:06:08.837Z","type":"message"}
{"nick":"chrisdickinson","message":"and https://github.com/joyent/node/blob/v0.10/deps/v8/src/api.cc#L247, https://github.com/joyent/node/blob/v0.10/deps/v8/src/api.cc#L240, and https://github.com/joyent/node/blob/v0.10/deps/v8/src/api.cc#L152 are the only cases where it's accessed","date":"2014-11-13T22:06:35.579Z","type":"message"}
{"nick":"iarna","reason":"Ping timeout: 256 seconds","date":"2014-11-13T22:07:24.638Z","type":"quit"}
{"nick":"chrisdickinson","message":"(which the most likely one to be used elsewhere seemed to me to be ReportApiFailure, which is used in bootstrapper.cc and handles.cc, in neither case related to uncaught exceptions)","date":"2014-11-13T22:07:55.238Z","type":"message"}
{"nick":"trevnorris","message":"sorry, seems I've managed to diverge the conversation. if I understand correctly, the desire is that --abort-on-uncaught-exception will always abort if an exception is allowed to propagate, correct?","date":"2014-11-13T22:08:02.913Z","type":"message"}
{"nick":"a_le","reason":"Ping timeout: 272 seconds","date":"2014-11-13T22:08:17.846Z","type":"quit"}
{"nick":"chrisdickinson","message":"if it is uncaught and allowed to propagate, yes","date":"2014-11-13T22:08:56.538Z","type":"message"}
{"nick":"jgi","message":"trevnorris: an example could be a node program with a listener on process’ uncaughtException and an error is thrown and not caught, versus v8 is dead: https://github.com/joyent/node/blob/v0.10/deps/v8/src/api.cc#L240-L244","date":"2014-11-13T22:09:49.087Z","type":"message"}
{"nick":"trevnorris","message":"okay, so why isn't it enough to add a runtime flag that's immediately checked in node::FatalException() and if true immediately runs ReportException() and exit's?","date":"2014-11-13T22:10:03.799Z","type":"message"}
{"nick":"jgi","message":"trevnorris: to let domain handle the uncaught exception if there’s an active domain?","date":"2014-11-13T22:10:47.559Z","type":"message"}
{"nick":"trevnorris","message":"and to run uncaughtException events.","date":"2014-11-13T22:11:04.270Z","type":"message"}
{"nick":"trevnorris","message":"s/events/callbacks","date":"2014-11-13T22:11:13.404Z","type":"message"}
{"nick":"jgi","message":"although uncaughtException listeners wouldn’t run if —abort-on-uncaught-exception is passed to node","date":"2014-11-13T22:12:30.698Z","type":"message"}
{"nick":"trevnorris","message":"i'm confused again. isn't that the point?","date":"2014-11-13T22:12:51.875Z","type":"message"}
{"nick":"jgi","message":"so if we didn’t want domains to be able to handle the error, then your suggestion would probably work","date":"2014-11-13T22:12:54.303Z","type":"message"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2014-11-13T22:13:50.234Z","type":"nick"}
{"nick":"trevnorris","message":"add a check in FatalException to see if there's an active domain.","date":"2014-11-13T22:14:05.368Z","type":"message"}
{"nick":"trevnorris","message":"then allow to propagate.","date":"2014-11-13T22:14:10.487Z","type":"message"}
{"nick":"jgi","message":"trevnorris: the point of having another handler for uncaught exception in v8 was to let domains handle uncaught exception, even if —abort-on-uncaught-exception is passed to node","date":"2014-11-13T22:14:12.918Z","type":"message"}
{"nick":"kenperkins","date":"2014-11-13T22:14:19.791Z","type":"join"}
{"nick":"kenperkins","reason":"Remote host closed the connection","date":"2014-11-13T22:14:24.544Z","type":"quit"}
{"nick":"trevnorris","message":"you don't need it.","date":"2014-11-13T22:14:26.532Z","type":"message"}
{"nick":"trevnorris","message":"I don't have the time to hack it together right now, but it is absolutely not necessary to add anything to v8.","date":"2014-11-13T22:15:02.093Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 265 seconds","date":"2014-11-13T22:15:08.223Z","type":"quit"}
{"nick":"chrisdickinson","message":"followup: by aborting at the FatalException point, we've lost stack information (vs. aborting at DoThrow), yes?","date":"2014-11-13T22:15:38.502Z","type":"message"}
{"nick":"trevnorris","message":"have the first check in FatalException be if (<abort on uncaught exception flag> && !<active domain>)","date":"2014-11-13T22:15:40.052Z","type":"message"}
{"nick":"trevnorris","message":"in that case then immediately abort.","date":"2014-11-13T22:15:47.094Z","type":"message"}
{"nick":"kriskowal","date":"2014-11-13T22:15:55.432Z","type":"join"}
{"nick":"trevnorris","message":"you'll also have to make a slight change in https://github.com/joyent/node/blob/v0.10/src/node.js#L264-L267","date":"2014-11-13T22:16:00.344Z","type":"message"}
{"nick":"jgi","message":"chrisdickinson: yes, that’s what I’m trying to make sure of right now :)","date":"2014-11-13T22:16:00.938Z","type":"message"}
{"nick":"kenperkins","date":"2014-11-13T22:16:03.969Z","type":"join"}
{"nick":"trevnorris","message":"to check the flag and return immediately if that's the case. bypassing any uncaughtException event callbacks.","date":"2014-11-13T22:16:33.882Z","type":"message"}
{"nick":"Fishrock123","date":"2014-11-13T22:21:02.853Z","type":"join"}
{"nick":"jgi","message":"trevnorris: also, the reason why we have this handler in v8 is that I didn’t want to hardcode the test for —abort-on-uncaught-exception in node","date":"2014-11-13T22:22:21.694Z","type":"message"}
{"nick":"trevnorris","message":"it's far better to add a runtime check to code we control then to float a patch on a dep we don't control.","date":"2014-11-13T22:22:49.753Z","type":"message"}
{"nick":"jgi","message":"trevnorris: since it’s something specific to v8, that imho should not known by node","date":"2014-11-13T22:22:50.708Z","type":"message"}
{"nick":"trevnorris","message":"it's also a solution we can port to v0.12.","date":"2014-11-13T22:22:56.055Z","type":"message"}
{"nick":"trevnorris","message":"from C++ we're wrapping all JS calls in a TryCatch, which means technically nothing propagates. We have to manually do that ourselves.","date":"2014-11-13T22:23:59.109Z","type":"message"}
{"nick":"trevnorris","message":"and we do this so we have additional information about the exception (i.e. the stack trace)","date":"2014-11-13T22:24:16.019Z","type":"message"}
{"nick":"trevnorris","message":"whereas with SetFatalErrorHandle() we loose all that information.","date":"2014-11-13T22:24:48.875Z","type":"message"}
{"nick":"chrisdickinson","message":"as I understand it, SetFatalErrorHandler doesn't handle uncaught exceptions -- or, at least, I'm not seeing the connection between it and Isolate::DoThrow","date":"2014-11-13T22:30:30.040Z","type":"message"}
{"nick":"jgi","message":"chrisdickinson: right","date":"2014-11-13T22:30:54.815Z","type":"message"}
{"nick":"jgi","message":"trevnorris: by aborting in FatalException, as chrisdickinson said, wouldn’t we loose all the information about the JS frames where the exception was thrown?","date":"2014-11-13T22:31:13.167Z","type":"message"}
{"nick":"trevnorris","message":"jgi: a TryCatch instance is passed to FatalException with all the information about the exception.","date":"2014-11-13T22:31:52.186Z","type":"message"}
{"nick":"chrisdickinson","message":"it looks like DoThrow ignores all C++-level TryCatches, so the original behavior of abort-on-uncaught-exception was to ignore FatalException","date":"2014-11-13T22:31:55.834Z","type":"message"}
{"nick":"trevnorris","message":"hence why we manually call it on on try_catch.HasCaught()","date":"2014-11-13T22:32:15.920Z","type":"message"}
{"nick":"chrisdickinson","message":"trevnorris: but the core dump will not contain the stack frames -- those'll be in an object","date":"2014-11-13T22:32:18.947Z","type":"message"}
{"nick":"jgi","message":"trevnorris: right, but —abort-on-uncaught-exception is useful if we can generate a core and get the full stack trace from where the error was thrown, can we generate such a core with the info passed to FatalException?","date":"2014-11-13T22:32:38.253Z","type":"message"}
{"nick":"trevnorris","message":"you can print the full stack trace from the try_catch, and running abort() will dump the core.","date":"2014-11-13T22:33:04.500Z","type":"message"}
{"nick":"trevnorris","message":"V8 does this in a debug build. it first prints a ton of info about what happened then give you the core file for further analysis.","date":"2014-11-13T22:34:11.599Z","type":"message"}
{"nick":"trevnorris","message":"chrisdickinson: what is this Isolate::DoThrow()?","date":"2014-11-13T22:34:43.259Z","type":"message"}
{"nick":"chrisdickinson","message":"Isolate::DoThrow is what gets called when an exception is thrown in JS, if I understand this correctly","date":"2014-11-13T22:35:25.946Z","type":"message"}
{"nick":"chrisdickinson","message":"https://github.com/joyent/node/blob/v0.10/deps/v8/src/isolate.cc#L1085","date":"2014-11-13T22:35:27.824Z","type":"message"}
{"nick":"chrisdickinson","message":"originally it's where OS::Abort() would get called from if the flag was set","date":"2014-11-13T22:35:49.080Z","type":"message"}
{"nick":"chrisdickinson","message":"https://github.com/joyent/node/blob/v0.10/deps/v8/src/isolate.cc#L1159-L1167","date":"2014-11-13T22:35:53.381Z","type":"message"}
{"nick":"trevnorris","message":"okay, so you're talking V8 internal API.","date":"2014-11-13T22:36:04.482Z","type":"message"}
{"nick":"jgi","message":"trevnorris: so when does v8 does that for debug builds? when there’s an uncaught exception?","date":"2014-11-13T22:36:23.949Z","type":"message"}
{"nick":"chrisdickinson","message":"if the flag was set, it would ignore \"external\" handlers","date":"2014-11-13T22:36:49.714Z","type":"message"}
{"nick":"trevnorris","message":"jgi: no, for more dire circumstances. e.g. improper use of the native API.","date":"2014-11-13T22:36:58.977Z","type":"message"}
{"nick":"chrisdickinson","message":"(I'm basing this on the comment above the linked `if` statement -- \"abort on any exception not caught by JavaScript, even when an external handler is present\")","date":"2014-11-13T22:37:37.744Z","type":"message"}
{"nick":"trevnorris","message":"but doesn't mean we can't print out the same type of information whenever we want.","date":"2014-11-13T22:37:39.290Z","type":"message"}
{"nick":"jgi","message":"trevnorris: is it the default fatal error handler?","date":"2014-11-13T22:38:11.018Z","type":"message"}
{"nick":"trevnorris","message":"for V8?","date":"2014-11-13T22:38:33.342Z","type":"message"}
{"nick":"jgi","message":"trevnorris: yes, the abort + print message behavior for v8 debug builds","date":"2014-11-13T22:38:50.106Z","type":"message"}
{"nick":"avalanch_","reason":"Remote host closed the connection","date":"2014-11-13T22:38:52.732Z","type":"quit"}
{"nick":"trevnorris","message":"let me generate one for you. sec.","date":"2014-11-13T22:39:03.412Z","type":"message"}
{"nick":"jgi","message":"chrisdickinson: yes, that’s exactly what’s happening, and “external” handlers are C++ handlers","date":"2014-11-13T22:40:05.106Z","type":"message"}
{"nick":"chrisdickinson","message":"cool, thanks for the confirmation","date":"2014-11-13T22:40:18.070Z","type":"message"}
{"nick":"jgi","message":"chrisdickinson: so if there’s only “external” handlers, it means there’s no try/catch block to catch the exception, only a TryCatch instance up the stack in the C++ code that calls the JS code","date":"2014-11-13T22:41:43.270Z","type":"message"}
{"nick":"trevnorris","message":"jgi: here's an example output from V8: https://gist.github.com/trevnorris/be1dee9d3fb4bc467b1c","date":"2014-11-13T22:43:26.705Z","type":"message"}
{"nick":"trevnorris","message":"remember though, that's only for bad use of the native API.","date":"2014-11-13T22:43:38.382Z","type":"message"}
{"nick":"trevnorris","message":"but it doesn't mean we can't do the same for any uncaught exception.","date":"2014-11-13T22:43:47.620Z","type":"message"}
{"nick":"trevnorris","message":"iirc ben even wrote code to walk the stack and print both the JS and C++.","date":"2014-11-13T22:44:15.420Z","type":"message"}
{"nick":"jgi","message":"trevnorris: right, but when they generate the core file, the frame where the error happened is still at the top of the stack right? I think that’s something we really want to keep with --abort-on-uncaught-exception","date":"2014-11-13T22:44:26.958Z","type":"message"}
{"nick":"kenperkins_","date":"2014-11-13T22:44:27.348Z","type":"join"}
{"nick":"chrisdickinson","message":"if the JS frames (via ::DoThrow) are included in the core, you can get that information from {ll,m}db, & also print out / inspect function arguments, etc","date":"2014-11-13T22:45:53.526Z","type":"message"}
{"nick":"importantshock","reason":"Remote host closed the connection","date":"2014-11-13T22:46:08.359Z","type":"quit"}
{"nick":"chrisdickinson","message":"jgi: am i understanding correctly that, prior to break-on-uncaught leaving v8, in break-on-uncaught mode fatalexception would never be called and a core would always be dumped?","date":"2014-11-13T22:46:54.908Z","type":"message"}
{"nick":"trevnorris","message":"jgi: the top frame is the failed check. it's not until frame 3 or 4 that you reach the user's code.","date":"2014-11-13T22:47:09.585Z","type":"message"}
{"nick":"trevnorris","message":"chrisdickinson: you can't get js frames from a core file. it has to be while the application is running.","date":"2014-11-13T22:47:48.926Z","type":"message"}
{"nick":"kenperkins","reason":"Ping timeout: 258 seconds","date":"2014-11-13T22:47:52.867Z","type":"quit"}
{"nick":"trevnorris","message":"and node has to be configured with --gdb, and you have to run node with --gdbjit --gdbjit-full","date":"2014-11-13T22:48:16.043Z","type":"message"}
{"nick":"jgi","message":"chrisdickinson: what do you mean by “ break-on-uncaught leaving v8”?","date":"2014-11-13T22:48:33.110Z","type":"message"}
{"nick":"trevnorris","message":"and gdb currently has a bug that causes a corrupt stack trace when it reaches JS","date":"2014-11-13T22:48:34.203Z","type":"message"}
{"nick":"trevnorris","message":"and lldb 3.5+ currently doesn't work on linux.","date":"2014-11-13T22:48:52.644Z","type":"message"}
{"nick":"jgi","message":"chrisdickinson: but yes to “in break-on-uncaught mode fatalexception would never be called and a core would always be dumped” :)","date":"2014-11-13T22:48:56.331Z","type":"message"}
{"nick":"chrisdickinson","message":"err, http://neversaw.us/scratch/yakback/","date":"2014-11-13T22:49:10.331Z","type":"message"}
{"nick":"chrisdickinson","message":"you can get the JS frames from a core that was generated with abort-on-uncaught-exception","date":"2014-11-13T22:49:37.222Z","type":"message"}
{"nick":"trevnorris","message":"not on linux :P","date":"2014-11-13T22:49:45.480Z","type":"message"}
{"nick":"chrisdickinson","message":"on linux, too","date":"2014-11-13T22:49:50.159Z","type":"message"}
{"nick":"chrisdickinson","message":"you have to take the core and put both the core and the executable on a smartos box,","date":"2014-11-13T22:50:09.501Z","type":"message"}
{"nick":"chrisdickinson","message":"but it can be done","date":"2014-11-13T22:50:11.102Z","type":"message"}
{"nick":"chrisdickinson","message":"and there's work done towards getting it working with lldb, as well","date":"2014-11-13T22:50:19.346Z","type":"message"}
{"nick":"xer0x","date":"2014-11-13T22:50:23.675Z","type":"join"}
{"nick":"trevnorris","message":"seriously? when I say on linux, I mean all steps on linux.","date":"2014-11-13T22:50:27.574Z","type":"message"}
{"nick":"trevnorris","message":"it did work on lldb on linux, but there's currently a bug that doesn't correctly recognize 64 bit applications.","date":"2014-11-13T22:50:53.690Z","type":"message"}
{"nick":"chrisdickinson","message":"ah, i'm not sure about that. at the very least, you can generate cores from linux and debug them using mdb on smartos","date":"2014-11-13T22:51:42.937Z","type":"message"}
{"nick":"trevnorris","message":"I have done the entire thing on Linux, but since then lldb introduced a bug. hopefully they'll get it fixed soon.","date":"2014-11-13T22:52:14.288Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-11-13T22:52:28.828Z","type":"quit"}
{"nick":"chrisdickinson","message":"I was checking the lldb version with https://github.com/tjfontaine/lldb-v8","date":"2014-11-13T22:52:31.659Z","type":"message"}
{"nick":"trevnorris","message":"what version does it use?","date":"2014-11-13T22:52:43.033Z","type":"message"}
{"nick":"chrisdickinson","message":"it's been ~1-2 months since I've rechecked using that approach","date":"2014-11-13T22:52:45.187Z","type":"message"}
{"nick":"chrisdickinson","message":"unsure","date":"2014-11-13T22:52:59.052Z","type":"message"}
{"nick":"trevnorris","message":"gdbjit only works w/ lldb on linux on 3.6-pre","date":"2014-11-13T22:53:01.010Z","type":"message"}
{"nick":"chrisdickinson","message":"jgi: err, the \"leaving v8\" bit was a really poorly worded way of saying \"the flag was removed from v8\"","date":"2014-11-13T22:53:35.938Z","type":"message"}
{"nick":"chrisdickinson","message":"jgi: and your proposed patch doesn't exactly restore the status quo so much as it improves it -- only aborting if the final domain throws?","date":"2014-11-13T22:54:17.867Z","type":"message"}
{"nick":"jgi","message":"chrisdickinson: yes, the proposed patch basically allows domains to work if —abort-on-uncaught-exception is passed to node","date":"2014-11-13T22:55:14.292Z","type":"message"}
{"nick":"jgi","message":"chrisdickinson: if the top level domain throws, node will abort and dump core","date":"2014-11-13T22:55:28.174Z","type":"message"}
{"nick":"trevnorris","message":"chrisdickinson: that can be done by returning immediately from https://github.com/joyent/node/blob/v0.10/src/node.js#L264-L268","date":"2014-11-13T22:55:32.900Z","type":"message"}
{"nick":"trevnorris","message":"that will bypass any uncaughtException callbacks","date":"2014-11-13T22:55:45.163Z","type":"message"}
{"nick":"chrisdickinson","message":"i'm not sure if it would be salient at that point, but you'd still be missing js frames in the core (though they'd always be the same frames, if i'm not mistaken)","date":"2014-11-13T22:56:39.264Z","type":"message"}
{"nick":"thlorenz_","date":"2014-11-13T22:56:52.452Z","type":"join"}
{"nick":"trevnorris","message":"what frames would you be missing?","date":"2014-11-13T22:56:59.094Z","type":"message"}
{"nick":"trevnorris","message":"it will have unrolled the frames from the domain call (if there was one)","date":"2014-11-13T22:57:07.460Z","type":"message"}
{"nick":"trevnorris","message":"but other than that it'll have everything about the callsite that threw.","date":"2014-11-13T22:57:21.839Z","type":"message"}
{"nick":"thlorenz_","reason":"Remote host closed the connection","date":"2014-11-13T22:57:41.842Z","type":"quit"}
{"nick":"thlorenz","date":"2014-11-13T22:58:50.144Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-11-13T22:59:26.838Z","type":"quit"}
{"nick":"chrisdickinson","message":"hm,","date":"2014-11-13T23:00:05.603Z","type":"message"}
{"nick":"chrisdickinson","message":"i suppose if you're using domains, getting a useful ::jsstack goes right out the window anyway","date":"2014-11-13T23:00:18.059Z","type":"message"}
{"nick":"trevnorris","message":"yup.","date":"2014-11-13T23:01:00.656Z","type":"message"}
{"nick":"trevnorris","message":"one of the many reasons I hate domains.","date":"2014-11-13T23:01:05.237Z","type":"message"}
{"nick":"trevnorris","message":"hopefully the work on AsyncWrap that i'm wrapping up will greatly help w/ that..","date":"2014-11-13T23:01:15.847Z","type":"message"}
{"nick":"thlorenz_","date":"2014-11-13T23:02:02.168Z","type":"join"}
{"nick":"chrisdickinson","message":"so putting an abort here https://github.com/joyent/node/blob/v0.10/src/node.cc#L1925-L1945 if caught is false and abort-on-uncaught is true handles the domains+abort-on-uncaught case","date":"2014-11-13T23:02:02.248Z","type":"message"}
{"nick":"chrisdickinson","message":"but if you aren't using domains, putting an abort there instead of in DoThrow causes the core to omit valuable JS stack info, yes?","date":"2014-11-13T23:02:35.507Z","type":"message"}
{"nick":"trevnorris","message":"chrisdickinson: before the abort() you'll want to ReportException()","date":"2014-11-13T23:03:20.201Z","type":"message"}
{"nick":"thlorenz_","reason":"Remote host closed the connection","date":"2014-11-13T23:03:32.891Z","type":"quit"}
{"nick":"trevnorris","message":"no, it should work. here, let me hack together a patch.","date":"2014-11-13T23:03:48.423Z","type":"message"}
{"nick":"thlorenz","date":"2014-11-13T23:04:06.925Z","type":"join"}
{"nick":"chrisdickinson","message":"ReportException will output to stderr, yes?","date":"2014-11-13T23:04:15.875Z","type":"message"}
{"nick":"trevnorris","message":"yes. but you have nothing to print.","date":"2014-11-13T23:05:04.147Z","type":"message"}
{"nick":"trevnorris","message":"and unless you are on smartos, there's no way to see the stack trace from the core file.","date":"2014-11-13T23:05:25.288Z","type":"message"}
{"nick":"chrisdickinson","message":"smartos or osx","date":"2014-11-13T23:05:33.602Z","type":"message"}
{"nick":"chrisdickinson","message":"or can get the core to one of those boxes","date":"2014-11-13T23:05:44.757Z","type":"message"}
{"nick":"jgi","message":"if I remember correctly, there’s also this call: https://github.com/joyent/node/blob/v0.10/lib/domain.js#L183 where, within a domain, if something is thrown, then passing —abort-on-uncaught-exception would always make node abort and dump core","date":"2014-11-13T23:05:48.896Z","type":"message"}
{"nick":"jgi","message":"so I guess maybe it could be put within a try/catch block and call _fatalException if it throws","date":"2014-11-13T23:06:19.973Z","type":"message"}
{"nick":"jgi","message":"but I haven’t thought too much about it, so it may be a bad idea","date":"2014-11-13T23:06:30.560Z","type":"message"}
{"nick":"jgi","message":"with the patch I proposed, this is handled correctly (i.e, it doesn’t abort and dump core when —abort-on-uncaught-exception is passed to node) because the ShouldAbortOnUncaughtExceptionHandler determines there’s an active domain, and thus it doesn’t abort","date":"2014-11-13T23:07:32.334Z","type":"message"}
{"nick":"thlorenz","reason":"Ping timeout: 256 seconds","date":"2014-11-13T23:08:36.570Z","type":"quit"}
{"nick":"ijroth","date":"2014-11-13T23:15:08.843Z","type":"join"}
{"nick":"ijroth","reason":"Client Quit","date":"2014-11-13T23:15:31.746Z","type":"quit"}
{"nick":"rendar","date":"2014-11-13T23:16:31.160Z","type":"quit"}
{"nick":"kenperkins","date":"2014-11-13T23:21:07.939Z","type":"join"}
{"nick":"kenperkins_","reason":"Ping timeout: 255 seconds","date":"2014-11-13T23:22:46.323Z","type":"quit"}
{"nick":"robertkowalski","reason":"Ping timeout: 245 seconds","date":"2014-11-13T23:24:52.683Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2014-11-13T23:26:33.694Z","type":"quit"}
{"nick":"robertkowalski","date":"2014-11-13T23:27:00.879Z","type":"join"}
{"nick":"trevnorris","reason":"Quit: quit all you want","date":"2014-11-13T23:32:19.261Z","type":"quit"}
{"nick":"cjihrig","message":"i've seen a number of node issues come through lately related to strict mode. are these likely v8 issues?","date":"2014-11-13T23:33:24.522Z","type":"message"}
{"nick":"trevnorris","date":"2014-11-13T23:33:31.689Z","type":"join"}
{"nick":"kenperkins_","date":"2014-11-13T23:34:16.544Z","type":"join"}
{"nick":"trevnorris","reason":"Client Quit","date":"2014-11-13T23:34:23.176Z","type":"quit"}
{"nick":"robertkowalski","reason":"Ping timeout: 244 seconds","date":"2014-11-13T23:34:23.562Z","type":"quit"}
{"nick":"trevnorris","date":"2014-11-13T23:34:45.814Z","type":"join"}
{"nick":"robertkowalski","date":"2014-11-13T23:36:13.277Z","type":"join"}
{"nick":"kenperkins","reason":"Ping timeout: 264 seconds","date":"2014-11-13T23:37:05.859Z","type":"quit"}
{"nick":"AvianFlu","reason":"Ping timeout: 244 seconds","date":"2014-11-13T23:37:42.077Z","type":"quit"}
{"nick":"avalanche123","date":"2014-11-13T23:39:25.041Z","type":"join"}
{"nick":"chris_99","date":"2014-11-13T23:40:51.011Z","type":"join"}
{"nick":"jgi","message":"trevnorris: When you come up with a better solution, could you please update https://github.com/joyent/node/pull/8666 so that everyone can participate and have up to date info?","date":"2014-11-13T23:42:34.004Z","type":"message"}
{"nick":"avalanche123","reason":"Ping timeout: 240 seconds","date":"2014-11-13T23:43:53.031Z","type":"quit"}
{"nick":"robertko1alski","date":"2014-11-13T23:43:54.871Z","type":"join"}
{"nick":"trevnorris","message":"jgi: sure","date":"2014-11-13T23:44:04.546Z","type":"message"}
{"nick":"robertkowalski","reason":"Remote host closed the connection","date":"2014-11-13T23:44:16.913Z","type":"quit"}
{"nick":"trevnorris","reason":"Quit: quit all you want","date":"2014-11-13T23:47:40.647Z","type":"quit"}
{"nick":"trevnorris","date":"2014-11-13T23:48:00.319Z","type":"join"}
{"nick":"chrisdickinson","message":"where did we end up?","date":"2014-11-13T23:48:29.594Z","type":"message"}
{"nick":"robertko1alski","reason":"Ping timeout: 250 seconds","date":"2014-11-13T23:49:38.351Z","type":"quit"}
{"nick":"robertkowalski","date":"2014-11-13T23:50:30.319Z","type":"join"}
{"nick":"trevnorris","reason":"Client Quit","date":"2014-11-13T23:51:08.632Z","type":"quit"}
{"nick":"trevnorris","date":"2014-11-13T23:51:28.609Z","type":"join"}
{"nick":"trevnorris","message":"chrisdickinson: w/ the abort thing?","date":"2014-11-13T23:52:02.690Z","type":"message"}
{"nick":"chrisdickinson","message":"yeah","date":"2014-11-13T23:52:10.806Z","type":"message"}
{"nick":"trevnorris","message":"it's not necessary to add anything to V8. I'm still 100% focused on the AL patch, but once that's complete then I'll hack together a patch for that.","date":"2014-11-13T23:52:58.542Z","type":"message"}
{"nick":"chrisdickinson","message":"I'm going to update the issue with a summary; this is pretty high priority for us since it affects our ability to debug.","date":"2014-11-13T23:54:18.325Z","type":"message"}
{"nick":"piscisaureus","date":"2014-11-13T23:55:46.596Z","type":"join"}
{"nick":"toothrot","date":"2014-11-13T23:56:37.868Z","type":"join"}
{"nick":"iarna","date":"2014-11-13T23:56:48.126Z","type":"join"}
{"nick":"jgi","message":"chrisdickinson, trevnorris: thanks","date":"2014-11-13T23:57:15.845Z","type":"message"}
