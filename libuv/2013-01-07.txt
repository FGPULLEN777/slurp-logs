{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-01-07T00:00:01.390Z","type":"quit"}
{"nick":"ircretary","date":"2013-01-07T00:00:08.569Z","type":"join"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-01-07T00:03:59.673Z","type":"nick"}
{"nick":"paddybyers","reason":"Ping timeout: 272 seconds","date":"2013-01-07T00:13:44.896Z","type":"quit"}
{"nick":"abraxas_","date":"2013-01-07T00:33:38.415Z","type":"join"}
{"nick":"toothr","new_nick":"toothrot","date":"2013-01-07T00:39:18.913Z","type":"nick"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-01-07T00:41:11.489Z","type":"nick"}
{"nick":"c4milo","date":"2013-01-07T00:43:34.340Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-01-07T00:44:59.470Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-01-07T00:59:43.735Z","type":"quit"}
{"nick":"mikeal","date":"2013-01-07T01:01:15.872Z","type":"join"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-01-07T01:02:39.893Z","type":"nick"}
{"nick":"piscisaureus_","message":"hello goodbye","date":"2013-01-07T01:02:53.464Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-01-07T01:08:54.991Z","type":"quit"}
{"nick":"mmalecki","new_nick":"mmalecki[zzz]","date":"2013-01-07T01:26:25.348Z","type":"nick"}
{"nick":"stagas","reason":"Ping timeout: 240 seconds","date":"2013-01-07T01:49:49.236Z","type":"quit"}
{"nick":"karupanerura","reason":"Excess Flood","date":"2013-01-07T01:57:40.039Z","type":"quit"}
{"nick":"karupanerura","date":"2013-01-07T02:00:52.479Z","type":"join"}
{"nick":"loladiro","date":"2013-01-07T02:14:53.885Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-01-07T02:15:22.866Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-01-07T02:27:28.941Z","type":"quit"}
{"nick":"loladiro","date":"2013-01-07T02:29:39.428Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 265 seconds","date":"2013-01-07T02:37:34.870Z","type":"quit"}
{"nick":"c4milo","date":"2013-01-07T02:46:11.592Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-01-07T02:47:34.483Z","type":"quit"}
{"nick":"c4milo","date":"2013-01-07T02:53:36.908Z","type":"join"}
{"nick":"pooya","date":"2013-01-07T02:53:54.428Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-01-07T03:08:22.837Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002fa3bfc3\u0002 : test: put tty in blocking mode after test  Tests can leave the tty in non (+1 more commits) - http://git.io/HwpLSA","date":"2013-01-07T03:16:51.433Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 248 seconds","date":"2013-01-07T03:21:24.809Z","type":"quit"}
{"nick":"c4milo","date":"2013-01-07T03:32:09.940Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-01-07T03:44:03.996Z","type":"quit"}
{"nick":"c4milo","date":"2013-01-07T03:56:32.969Z","type":"join"}
{"nick":"joshthecoder","reason":"Quit: Leaving...","date":"2013-01-07T03:59:39.547Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-01-07T04:14:03.024Z","type":"quit"}
{"nick":"karupanerura","reason":"Excess Flood","date":"2013-01-07T04:16:58.847Z","type":"quit"}
{"nick":"karupanerura","date":"2013-01-07T04:17:23.287Z","type":"join"}
{"nick":"c4milo","date":"2013-01-07T04:17:45.949Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-01-07T04:19:05.035Z","type":"quit"}
{"nick":"wolfeidau","reason":"Read error: Connection reset by peer","date":"2013-01-07T04:31:36.630Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-01-07T04:32:02.782Z","type":"join"}
{"nick":"pooya","reason":"Quit: pooya","date":"2013-01-07T04:42:29.483Z","type":"quit"}
{"nick":"pooya","date":"2013-01-07T04:45:32.966Z","type":"join"}
{"nick":"c4milo","date":"2013-01-07T04:48:29.516Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-01-07T04:49:53.001Z","type":"quit"}
{"nick":"c4milo","date":"2013-01-07T04:56:55.853Z","type":"join"}
{"nick":"joshthecoder","date":"2013-01-07T05:00:46.051Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-01-07T05:11:09.496Z","type":"quit"}
{"nick":"c4milo","date":"2013-01-07T05:21:49.819Z","type":"join"}
{"nick":"kristate","date":"2013-01-07T05:23:21.881Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-01-07T05:23:51.293Z","type":"quit"}
{"nick":"c4milo","date":"2013-01-07T05:36:05.563Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-01-07T05:36:18.049Z","type":"quit"}
{"nick":"indexzero","date":"2013-01-07T05:49:30.246Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-01-07T05:53:35.321Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-01-07T05:57:07.659Z","type":"quit"}
{"nick":"loladiro","date":"2013-01-07T06:11:54.712Z","type":"join"}
{"nick":"bradleymeck","date":"2013-01-07T06:15:15.955Z","type":"join"}
{"nick":"joshthecoder","reason":"Quit: Leaving...","date":"2013-01-07T06:23:05.295Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-01-07T06:37:30.512Z","type":"quit"}
{"nick":"rendar","date":"2013-01-07T07:29:26.310Z","type":"join"}
{"nick":"`3E|ENOAVAILBLE","date":"2013-01-07T07:36:21.877Z","type":"join"}
{"nick":"`3E|ENOAVAILBLE","new_nick":"`3rdEden","date":"2013-01-07T07:37:25.507Z","type":"nick"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-01-07T07:39:04.829Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-01-07T07:40:57.073Z","type":"quit"}
{"nick":"loladiro","date":"2013-01-07T07:46:19.845Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-01-07T07:52:06.332Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-01-07T08:19:33.074Z","type":"quit"}
{"nick":"mikeal","date":"2013-01-07T08:27:44.773Z","type":"join"}
{"nick":"paddybyers","date":"2013-01-07T08:39:49.802Z","type":"join"}
{"nick":"pooya","reason":"Quit: pooya","date":"2013-01-07T08:41:17.443Z","type":"quit"}
{"nick":"karupanerura","reason":"Excess Flood","date":"2013-01-07T08:42:21.940Z","type":"quit"}
{"nick":"karupanerura","date":"2013-01-07T08:43:52.997Z","type":"join"}
{"nick":"hz","date":"2013-01-07T08:44:48.432Z","type":"join"}
{"nick":"kristate","reason":"Ping timeout: 272 seconds","date":"2013-01-07T08:51:10.760Z","type":"quit"}
{"nick":"paddybyers","reason":"Read error: Connection reset by peer","date":"2013-01-07T09:03:10.340Z","type":"quit"}
{"nick":"paddybyers_","date":"2013-01-07T09:03:15.803Z","type":"join"}
{"nick":"karupanerura","reason":"Excess Flood","date":"2013-01-07T09:05:11.853Z","type":"quit"}
{"nick":"karupanerura","date":"2013-01-07T09:06:22.777Z","type":"join"}
{"nick":"indutny","message":"morning","date":"2013-01-07T09:15:19.638Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-01-07T09:37:14.281Z","type":"quit"}
{"nick":"kristate","date":"2013-01-07T09:46:53.729Z","type":"join"}
{"nick":"mmalecki[zzz]","new_nick":"mmalecki","date":"2013-01-07T09:58:24.261Z","type":"nick"}
{"nick":"kristate","reason":"Ping timeout: 240 seconds","date":"2013-01-07T10:17:48.725Z","type":"quit"}
{"nick":"stagas","date":"2013-01-07T10:21:48.480Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 255 seconds","date":"2013-01-07T10:26:44.464Z","type":"quit"}
{"nick":"kristate","date":"2013-01-07T10:35:21.435Z","type":"join"}
{"nick":"Chip_Zero","reason":"Changing host","date":"2013-01-07T10:37:33.427Z","type":"quit"}
{"nick":"Chip_Zero","date":"2013-01-07T10:37:33.563Z","type":"join"}
{"nick":"kristate","reason":"Ping timeout: 272 seconds","date":"2013-01-07T10:55:56.846Z","type":"quit"}
{"nick":"stagas","date":"2013-01-07T11:00:36.961Z","type":"join"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-01-07T12:06:55.044Z","type":"nick"}
{"nick":"qmx","new_nick":"qmx|coffee","date":"2013-01-07T12:18:52.406Z","type":"nick"}
{"nick":"sgallagh","date":"2013-01-07T12:21:01.974Z","type":"join"}
{"nick":"`3rdEden","reason":"Ping timeout: 248 seconds","date":"2013-01-07T12:35:32.753Z","type":"quit"}
{"nick":"qmx|coffee","new_nick":"qmx","date":"2013-01-07T12:39:29.771Z","type":"nick"}
{"nick":"`3rdEden","date":"2013-01-07T12:43:24.287Z","type":"join"}
{"nick":"bentkus","date":"2013-01-07T12:54:00.805Z","type":"join"}
{"nick":"loladiro","date":"2013-01-07T13:04:19.834Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-01-07T13:07:07.225Z","type":"quit"}
{"nick":"isaacs","message":"indutny: hey","date":"2013-01-07T13:11:41.275Z","type":"message"}
{"nick":"isaacs","message":"indutny: all the magic properties should be on this._readableState or this._writableState","date":"2013-01-07T13:11:59.495Z","type":"message"}
{"nick":"isaacs","message":"indutny: ie, not on the object themselves","date":"2013-01-07T13:12:08.595Z","type":"message"}
{"nick":"einaros","message":"so, silly question time; how do I circumvent the self signed DEPTH_ZERO_SELF_SIGNED_CERT error with https client in newer node versions?","date":"2013-01-07T13:14:39.703Z","type":"message"}
{"nick":"einaros","message":"I am guessing rejectUnauthorized","date":"2013-01-07T13:15:20.275Z","type":"message"}
{"nick":"mmalecki","message":"einaros: yeah","date":"2013-01-07T13:15:59.645Z","type":"message"}
{"nick":"mmalecki","message":"rejectUnauthorized: false","date":"2013-01-07T13:16:05.044Z","type":"message"}
{"nick":"einaros","message":"as is usually the case I found the line in the docs the second after asking :)","date":"2013-01-07T13:16:58.997Z","type":"message"}
{"nick":"mmalecki","message":"yeah, except docs are a bit wrong in here","date":"2013-01-07T13:19:29.367Z","type":"message"}
{"nick":"mmalecki","message":"imma do a PR now","date":"2013-01-07T13:19:32.185Z","type":"message"}
{"nick":"mmalecki","message":"actually, no, master docs are fine","date":"2013-01-07T13:21:40.978Z","type":"message"}
{"nick":"indutny","message":"isaacs: hey","date":"2013-01-07T13:31:41.223Z","type":"message"}
{"nick":"indutny","message":"isaacs: so why are they in instance properties?","date":"2013-01-07T13:31:56.170Z","type":"message"}
{"nick":"indutny","message":"isaacs: this.buffer","date":"2013-01-07T13:32:00.444Z","type":"message"}
{"nick":"indutny","message":"also","date":"2013-01-07T13:32:08.648Z","type":"message"}
{"nick":"indutny","message":"can we somehow make compatibility mode fully identical to previous streams version?","date":"2013-01-07T13:32:26.690Z","type":"message"}
{"nick":"indutny","message":"I've some streams with ._read method","date":"2013-01-07T13:32:37.727Z","type":"message"}
{"nick":"indutny","message":"and some with .read","date":"2013-01-07T13:32:40.663Z","type":"message"}
{"nick":"indutny","message":"however they should work as they're old streams","date":"2013-01-07T13:32:50.812Z","type":"message"}
{"nick":"isaacs","message":"indutny: this.buffer should'nt be a thing","date":"2013-01-07T13:35:05.790Z","type":"message"}
{"nick":"indutny","message":"em","date":"2013-01-07T13:35:15.325Z","type":"message"}
{"nick":"isaacs","message":"indutny: where do you see that getting set?","date":"2013-01-07T13:35:21.100Z","type":"message"}
{"nick":"indutny","message":"isaacs: https://github.com/joyent/node/blob/master/lib/_stream_readable.js#L51","date":"2013-01-07T13:35:34.868Z","type":"message"}
{"nick":"indutny","message":"aaah","date":"2013-01-07T13:35:40.444Z","type":"message"}
{"nick":"indutny","message":"it's state","date":"2013-01-07T13:35:42.568Z","type":"message"}
{"nick":"isaacs","message":"indutny: https://github.com/joyent/node/blob/master/lib/_stream_readable.js#L31","date":"2013-01-07T13:35:50.819Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-01-07T13:35:51.459Z","type":"message"}
{"nick":"indutny","message":"ok, that explains why my code is working :)","date":"2013-01-07T13:35:56.931Z","type":"message"}
{"nick":"isaacs","message":"it's faster to make the state objects a class","date":"2013-01-07T13:35:58.719Z","type":"message"}
{"nick":"isaacs","message":"rather than a {}","date":"2013-01-07T13:36:02.879Z","type":"message"}
{"nick":"indutny","message":"yes, I understand","date":"2013-01-07T13:36:05.049Z","type":"message"}
{"nick":"indutny","message":"singleton vs class","date":"2013-01-07T13:36:08.233Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-01-07T13:36:08.890Z","type":"message"}
{"nick":"indutny","message":"I need to think a little bit about how to make spdy work with streams2","date":"2013-01-07T13:36:21.761Z","type":"message"}
{"nick":"isaacs","message":"as for read/_read... not much to be done there.","date":"2013-01-07T13:36:23.559Z","type":"message"}
{"nick":"isaacs","message":"also, there's a lot of ugliness in the http/net interaction right now","date":"2013-01-07T13:36:36.339Z","type":"message"}
{"nick":"isaacs","message":"i'm not very happy with it","date":"2013-01-07T13:36:41.042Z","type":"message"}
{"nick":"isaacs","message":"basically, we just throw the tcp socket into old mode","date":"2013-01-07T13:37:07.818Z","type":"message"}
{"nick":"isaacs","message":"since the parser is doing stuff with the chunks anyway","date":"2013-01-07T13:37:13.858Z","type":"message"}
{"nick":"isaacs","message":"but that means that interacting with the req.connection is not ideal.","date":"2013-01-07T13:37:24.978Z","type":"message"}
{"nick":"isaacs","message":"you can't do req.connection.read() and have it do what you expect.","date":"2013-01-07T13:37:35.358Z","type":"message"}
{"nick":"isaacs","message":"and there's no way to get OUT of old mode","date":"2013-01-07T13:37:40.388Z","type":"message"}
{"nick":"indutny","message":"yeah, I understand","date":"2013-01-07T13:38:25.820Z","type":"message"}
{"nick":"indutny","message":"I'll try to port spdy to streams2","date":"2013-01-07T13:38:34.868Z","type":"message"}
{"nick":"indutny","message":"and see if I've any ideas","date":"2013-01-07T13:38:37.806Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: hm, removing that stream.resume() triggers a bunch of EventEmitter leak warnings on test-messages","date":"2013-01-07T13:45:55.482Z","type":"message"}
{"nick":"isaacs","message":"test/message/stdin_error.js","date":"2013-01-07T13:46:06.992Z","type":"message"}
{"nick":"isaacs","message":"er, test/message/stdin_messages.js","date":"2013-01-07T13:46:17.292Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-01-07T13:46:23.914Z","type":"join"}
{"nick":"piscisaureus_","reason":"Read error: Connection reset by peer","date":"2013-01-07T13:47:23.364Z","type":"quit"}
{"nick":"stagas_","date":"2013-01-07T13:47:49.953Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 265 seconds","date":"2013-01-07T13:49:53.885Z","type":"quit"}
{"nick":"stagas_","new_nick":"stagas","date":"2013-01-07T13:49:59.398Z","type":"nick"}
{"nick":"sgallagh1","date":"2013-01-07T13:50:51.762Z","type":"join"}
{"nick":"sgallagh","reason":"Ping timeout: 276 seconds","date":"2013-01-07T13:53:15.816Z","type":"quit"}
{"nick":"sgallagh1","new_nick":"sgallagh","date":"2013-01-07T13:54:26.422Z","type":"nick"}
{"nick":"bradleymeck","date":"2013-01-07T14:03:40.886Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-01-07T14:04:57.707Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 276 seconds","date":"2013-01-07T14:05:36.810Z","type":"quit"}
{"nick":"philips_","reason":"Excess Flood","date":"2013-01-07T14:06:52.175Z","type":"quit"}
{"nick":"isaacs","message":"mmalecki: nvm, figured it out","date":"2013-01-07T14:08:36.737Z","type":"message"}
{"nick":"isaacs","message":"we weren't removing drain listeners","date":"2013-01-07T14:08:42.017Z","type":"message"}
{"nick":"philips_","date":"2013-01-07T14:09:37.239Z","type":"join"}
{"nick":"loladiro","date":"2013-01-07T14:29:10.724Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-01-07T14:31:16.330Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002cb3c448\u0002 : unix: fix GNU-ism introduced in edd1007  Don't use features.h, it's only  - http://git.io/KNiUbA","date":"2013-01-07T14:44:15.903Z","type":"message"}
{"nick":"indutny-m","date":"2013-01-07T14:48:12.398Z","type":"join"}
{"nick":"indutny-m","reason":"Remote host closed the connection","date":"2013-01-07T14:48:13.923Z","type":"quit"}
{"nick":"indutny-m","date":"2013-01-07T14:48:31.633Z","type":"join"}
{"nick":"indutny-m","message":"Hoya again","date":"2013-01-07T14:48:43.970Z","type":"message"}
{"nick":"indutny-m","message":"So what's on plan to the 0.10 release?","date":"2013-01-07T14:49:03.832Z","type":"message"}
{"nick":"indutny-m","message":"isaacs: ^","date":"2013-01-07T14:49:43.159Z","type":"message"}
{"nick":"bradleymeck","date":"2013-01-07T14:50:01.665Z","type":"join"}
{"nick":"isaacs","message":"bnoordhuis: oh, you are here","date":"2013-01-07T14:50:07.469Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: i am","date":"2013-01-07T14:50:21.586Z","type":"message"}
{"nick":"isaacs","message":"so, this child proc stdio stream thing...","date":"2013-01-07T14:50:34.319Z","type":"message"}
{"nick":"indutny-m","message":"bnoordhuis: Hi","date":"2013-01-07T14:50:34.778Z","type":"message"}
{"nick":"isaacs","message":"i understand what's going on, but input on the ideal fix would be good.  we have a choice.","date":"2013-01-07T14:50:48.959Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny-m: m stands for mobile?","date":"2013-01-07T14:50:55.054Z","type":"message"}
{"nick":"indutny-m","message":"No","date":"2013-01-07T14:51:01.802Z","type":"message"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-01-07T14:51:08.537Z","type":"quit"}
{"nick":"isaacs","message":"the situation is this: the child proc exits, but we don't emit 'close' until all the streams are closed.  but we dont' know that the stream has closed until we read all its bytes and hit the EOF.","date":"2013-01-07T14:51:21.218Z","type":"message"}
{"nick":"c4milo","date":"2013-01-07T14:51:21.944Z","type":"join"}
{"nick":"indutny-m","message":"\"Here come funny joke about m\"","date":"2013-01-07T14:51:36.806Z","type":"message"}
{"nick":"indutny-m","message":"bnoordhuis: Ok, I admit it -yes","date":"2013-01-07T14:51:59.448Z","type":"message"}
{"nick":"isaacs","message":"choice 1: keep track of which stdio streams are actually read from, and if one of them is not touched, and the exit event happens, then call stream.resume() to dump it out","date":"2013-01-07T14:52:12.528Z","type":"message"}
{"nick":"isaacs","message":"choice 2: some sort of configurable buffering of stdio streams, which may or may not get all the way to EOF.","date":"2013-01-07T14:52:38.728Z","type":"message"}
{"nick":"bnoordhuis","message":"both don't sound very elegant","date":"2013-01-07T14:52:55.702Z","type":"message"}
{"nick":"isaacs","message":"choice 3: leave it as it is, and the user must call read() on the stdio streams to ever get to 'close'","date":"2013-01-07T14:53:05.337Z","type":"message"}
{"nick":"travis-ci","date":"2013-01-07T14:53:16.075Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#1006 (master - cb3c448 : Ben Noordhuis): The build passed.","date":"2013-01-07T14:53:16.203Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/f24335d4984b...cb3c448d8f3e","date":"2013-01-07T14:53:16.203Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/4002263","date":"2013-01-07T14:53:16.203Z","type":"message"}
{"nick":"travis-ci","date":"2013-01-07T14:53:16.203Z","type":"part"}
{"nick":"indutny-m","message":"Can we get notification when process with specific pid dies","date":"2013-01-07T14:53:26.356Z","type":"message"}
{"nick":"isaacs","message":"i think that choice 3 is too confusing","date":"2013-01-07T14:53:30.107Z","type":"message"}
{"nick":"bnoordhuis","message":"and break all applications that pipe() child process output?","date":"2013-01-07T14:53:32.684Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: nono, pipe() is already fixed.","date":"2013-01-07T14:53:42.657Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: ie, the original bug.  mmalecki's patch fixes that.","date":"2013-01-07T14:53:52.337Z","type":"message"}
{"nick":"isaacs","message":"(i also had to clean up Readable.pipe() a bit, but it's minor stuff)","date":"2013-01-07T14:54:11.746Z","type":"message"}
{"nick":"indutny-m","message":"mmalecki: Btw. What about dtrace tests?","date":"2013-01-07T14:54:19.843Z","type":"message"}
{"nick":"indutny-m","message":"mmalecki: Have you got a chance to look into it?","date":"2013-01-07T14:54:36.870Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: the problem is that this will fail: spawn('ls', {cwd:'does not exist'}).on('close', thisNeverHappens)","date":"2013-01-07T14:54:53.826Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: because close won't emit until the stdio's all EOF","date":"2013-01-07T14:55:07.976Z","type":"message"}
{"nick":"isaacs","message":"streams2 imposes the semantic change that data is not ignored by default.","date":"2013-01-07T14:55:59.345Z","type":"message"}
{"nick":"isaacs","message":"i think this is a net win, but this is the kind of edge case that comes along with that","date":"2013-01-07T14:56:11.015Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: how come no EOF is registered? i'm pretty sure libuv picks up that the file descriptors are closed","date":"2013-01-07T14:56:16.041Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: so, another option would be that: don't wait for EOF to emit 'close' on sockets","date":"2013-01-07T14:56:45.675Z","type":"message"}
{"nick":"isaacs","message":"right now, there's no handling of that in js","date":"2013-01-07T14:56:59.925Z","type":"message"}
{"nick":"isaacs","message":"we only emit 'close' when we call destroy()","date":"2013-01-07T14:57:15.844Z","type":"message"}
{"nick":"isaacs","message":"and we only call destroy() when we know we're done with it","date":"2013-01-07T14:57:42.004Z","type":"message"}
{"nick":"bnoordhuis","message":"regarding options, i don't know. i don't understand streams2 that well yet","date":"2013-01-07T14:57:56.726Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: socket._handle.onclose = function() {} would be glorious","date":"2013-01-07T14:58:08.144Z","type":"message"}
{"nick":"isaacs","message":"i think that's the ideal fix","date":"2013-01-07T14:58:28.263Z","type":"message"}
{"nick":"bradleymeck","date":"2013-01-07T15:00:08.830Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002879efb3\u0002 : test: fix simple/test-http-client-timeout-with-data  The test was failing - http://git.io/_f1X3A","date":"2013-01-07T15:05:58.159Z","type":"message"}
{"nick":"indutny-m","reason":"Quit: Colloquy for iPhone - http://colloquy.mobi","date":"2013-01-07T15:07:16.254Z","type":"quit"}
{"nick":"isaacs","message":"bnoordhuis: so, i see a close_cb in libuv, but i don't see where we ever set it","date":"2013-01-07T15:08:34.897Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: in uv_close","date":"2013-01-07T15:08:45.317Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: read_cb and alloc_cb is only set by calling uv_read","date":"2013-01-07T15:08:47.606Z","type":"message"}
{"nick":"isaacs","message":"oic","date":"2013-01-07T15:09:36.086Z","type":"message"}
{"nick":"isaacs","message":"but... right.  so, when *i* close the fd, i can set teh callback for when it's closed.","date":"2013-01-07T15:10:10.306Z","type":"message"}
{"nick":"isaacs","message":"but in this case, i'm not the one closing it","date":"2013-01-07T15:10:18.075Z","type":"message"}
{"nick":"isaacs","message":"if i (the parent) get to the point where i call destroy() on the child's stdio stream, then there's no problem.","date":"2013-01-07T15:10:51.775Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: so, that's why it needs to get to EOF, unless there's a way for the parent to find out that the child's stdio has closed","date":"2013-01-07T15:13:07.004Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-01-07T15:13:38.013Z","type":"join"}
{"nick":"isaacs","message":"but, if we do that before EOF, and user is listening with a 'data' event, then that's not going to work so well.","date":"2013-01-07T15:13:42.883Z","type":"message"}
{"nick":"isaacs","message":"because that changes 'close' to mean really 'exit', and not 'close'","date":"2013-01-07T15:13:52.503Z","type":"message"}
{"nick":"piscisaureus_","message":"bentkus: what is the name of your c# project ?","date":"2013-01-07T15:14:01.248Z","type":"message"}
{"nick":"tjfontaine","message":"libuvsharp","date":"2013-01-07T15:14:20.755Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/txdv/LibuvSharp","date":"2013-01-07T15:14:26.320Z","type":"message"}
{"nick":"stagas","date":"2013-01-07T15:14:56.157Z","type":"join"}
{"nick":"indutny-m","date":"2013-01-07T15:16:22.811Z","type":"join"}
{"nick":"bentkus","message":"piscisaureus_: LibuvSharp","date":"2013-01-07T15:16:27.633Z","type":"message"}
{"nick":"bentkus","message":"why do you ask","date":"2013-01-07T15:16:51.612Z","type":"message"}
{"nick":"piscisaureus_","message":"bentkus: someone was asking for it and I didn't remember","date":"2013-01-07T15:23:27.341Z","type":"message"}
{"nick":"indutny-m_","date":"2013-01-07T15:23:32.107Z","type":"join"}
{"nick":"bentkus","message":"the wiki page on github contains a comprehensive list of bindings for libuv","date":"2013-01-07T15:23:57.323Z","type":"message"}
{"nick":"bentkus","message":"including my project","date":"2013-01-07T15:23:59.847Z","type":"message"}
{"nick":"piscisaureus_","new_nick":"piscisaureus","date":"2013-01-07T15:24:06.314Z","type":"nick"}
{"nick":"piscisaureus","message":"bentkus: I was lazy okay :-)","date":"2013-01-07T15:24:13.748Z","type":"message"}
{"nick":"bentkus","message":"you forgot","date":"2013-01-07T15:24:34.401Z","type":"message"}
{"nick":"piscisaureus","message":"bentkus: forgot == not remembering :-)","date":"2013-01-07T15:25:01.258Z","type":"message"}
{"nick":"indutny-m_","reason":"Client Quit","date":"2013-01-07T15:26:05.857Z","type":"quit"}
{"nick":"bentkus","message":"I always put projects there if I see that they use libuv","date":"2013-01-07T15:26:42.710Z","type":"message"}
{"nick":"bentkus","message":"FOR THE SAKE OF THE COLLECTIVE","date":"2013-01-07T15:26:52.559Z","type":"message"}
{"nick":"bentkus","message":"but you ... you just forget","date":"2013-01-07T15:27:03.359Z","type":"message"}
{"nick":"bentkus","message":"did you also forget the dual stack pr?","date":"2013-01-07T15:27:23.721Z","type":"message"}
{"nick":"indutny-m","reason":"Ping timeout: 276 seconds","date":"2013-01-07T15:27:30.808Z","type":"quit"}
{"nick":"bentkus","message":"why didn't CAPSLOCKBOT react","date":"2013-01-07T15:29:01.784Z","type":"message"}
{"nick":"bentkus","message":"obviously I have written in CAPSLOCK","date":"2013-01-07T15:29:12.556Z","type":"message"}
{"nick":"AvianFlu","date":"2013-01-07T15:31:58.925Z","type":"join"}
{"nick":"warz","date":"2013-01-07T15:32:18.774Z","type":"join"}
{"nick":"warz","reason":"Changing host","date":"2013-01-07T15:32:19.121Z","type":"quit"}
{"nick":"warz","date":"2013-01-07T15:32:19.254Z","type":"join"}
{"nick":"isaacs","message":"bentkus: CAPSLOCKBOT !== loudbot","date":"2013-01-07T15:43:06.783Z","type":"message"}
{"nick":"isaacs","message":"bentkus: not sure why loudbot is gone","date":"2013-01-07T15:43:12.323Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus banned him, i think","date":"2013-01-07T15:51:03.696Z","type":"message"}
{"nick":"piscisaureus","message":"I kicked hi only","date":"2013-01-07T15:51:16.213Z","type":"message"}
{"nick":"bentkus","message":"wtf","date":"2013-01-07T15:52:37.733Z","type":"message"}
{"nick":"bentkus","message":"the third best about this channel","date":"2013-01-07T15:52:42.638Z","type":"message"}
{"nick":"bentkus","message":"and you kicked it","date":"2013-01-07T15:52:46.749Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f created branch child-stdio-flush - http://git.io/hFCD2w","date":"2013-01-07T15:57:34.365Z","type":"message"}
{"nick":"isaacs","message":"mmalecki, bnoordhuis, piscisaureus: review? ^","date":"2013-01-07T15:57:41.740Z","type":"message"}
