{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-08-23T00:00:00.657Z","type":"quit"}
{"nick":"ircretary","date":"2013-08-23T00:00:08.916Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #122 \u00037UNSTABLE\u000f linux-ia32 (2/192) windows-x64 (3/193) smartos-ia32 (2/192) smartos-x64 (4/192) windows-ia32 (4/193) osx-x64 (1/193) linux-x64 (2/192) http://jenkins.nodejs.org/job/libuv-master-gyp/122/","date":"2013-08-23T00:02:26.917Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #467 \u00037UNSTABLE\u000f smartos-x64 (8/636) smartos-ia32 (2/636) http://jenkins.nodejs.org/job/nodejs-master/467/","date":"2013-08-23T00:03:43.958Z","type":"message"}
{"nick":"mordy__","message":"tjfontaine: ahhhh ok.. i discovered SetMethod vs SetPrototypeMethod","date":"2013-08-23T00:08:43.893Z","type":"message"}
{"nick":"mordy__","message":"where presumably the former creates a normal \"function\" and places it inside the module, whereas SetPrototypeMethod adds a new method to some object's prototype","date":"2013-08-23T00:09:08.783Z","type":"message"}
{"nick":"tjfontaine","message":"mordy__: yes, or helpers NODE_SET_METHOD","date":"2013-08-23T00:09:12.998Z","type":"message"}
{"nick":"tjfontaine","message":"mordy__: that's correct.","date":"2013-08-23T00:09:21.422Z","type":"message"}
{"nick":"mordy__","message":"the existing boilerplate uses the prototype variants here... is one particularly faster than the other?","date":"2013-08-23T00:10:34.649Z","type":"message"}
{"nick":"tjfontaine","message":"mordy__: I've not benchmarked them, but they're generally only called only once at module initialization","date":"2013-08-23T00:12:32.903Z","type":"message"}
{"nick":"indexzero","date":"2013-08-23T00:29:06.168Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-08-23T00:32:28.916Z","type":"quit"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-08-23T00:34:37.865Z","type":"quit"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-08-23T00:34:47.348Z","type":"quit"}
{"nick":"kevinswiber","date":"2013-08-23T00:39:24.874Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-23T00:45:35.708Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-08-23T00:52:22.099Z","type":"join"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-08-23T00:56:07.476Z","type":"quit"}
{"nick":"dap","date":"2013-08-23T00:56:28.958Z","type":"join"}
{"nick":"dap","reason":"Client Quit","date":"2013-08-23T00:56:38.219Z","type":"quit"}
{"nick":"dominictarr_","date":"2013-08-23T01:01:28.751Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 268 seconds","date":"2013-08-23T01:04:56.175Z","type":"quit"}
{"nick":"dominictarr_","new_nick":"dominictarr","date":"2013-08-23T01:04:56.395Z","type":"nick"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-08-23T01:05:29.125Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #261 \u00037UNSTABLE\u000f windows-x64 (19/636) windows-ia32 (24/636) http://jenkins.nodejs.org/job/nodejs-master-windows/261/","date":"2013-08-23T01:09:52.315Z","type":"message"}
{"nick":"TooTallNate","reason":"Ping timeout: 240 seconds","date":"2013-08-23T01:10:38.540Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-23T01:13:36.063Z","type":"join"}
{"nick":"indexzero","date":"2013-08-23T01:20:31.170Z","type":"join"}
{"nick":"TooTallNate","date":"2013-08-23T01:20:40.769Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-23T01:27:47.069Z","type":"quit"}
{"nick":"abraxas","date":"2013-08-23T01:28:25.377Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-08-23T01:29:54.143Z","type":"quit"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-23T01:32:46.015Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-23T01:42:14.875Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-23T01:42:30.831Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-23T01:53:17.571Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-23T02:12:56.381Z","type":"join"}
{"nick":"Brett19","date":"2013-08-23T02:28:05.769Z","type":"join"}
{"nick":"indexzero","date":"2013-08-23T02:28:54.825Z","type":"join"}
{"nick":"bradleymeck","date":"2013-08-23T03:05:24.713Z","type":"join"}
{"nick":"TooTallNate","date":"2013-08-23T03:07:03.832Z","type":"join"}
{"nick":"dominictarr_","date":"2013-08-23T03:34:38.835Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 248 seconds","date":"2013-08-23T03:37:41.729Z","type":"quit"}
{"nick":"dominictarr_","new_nick":"dominictarr","date":"2013-08-23T03:37:42.304Z","type":"nick"}
{"nick":"bradleymeck","reason":"Ping timeout: 264 seconds","date":"2013-08-23T04:04:54.273Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-08-23T04:07:56.330Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-08-23T04:08:03.300Z","type":"quit"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-08-23T04:09:54.930Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-23T04:15:25.028Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-23T04:16:16.193Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-23T04:30:50.592Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 256 seconds","date":"2013-08-23T04:39:13.613Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-23T04:39:22.031Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-23T04:54:24.663Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-08-23T05:17:41.334Z","type":"quit"}
{"nick":"KiNgMaR","reason":"Ping timeout: 245 seconds","date":"2013-08-23T05:23:20.210Z","type":"quit"}
{"nick":"KiNgMaR","date":"2013-08-23T05:23:51.287Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-23T06:00:02.883Z","type":"nick"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-23T06:03:03.229Z","type":"nick"}
{"nick":"Brett19","reason":"Read error: Connection reset by peer","date":"2013-08-23T06:17:21.688Z","type":"quit"}
{"nick":"dominictarr_","date":"2013-08-23T06:17:34.437Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 264 seconds","date":"2013-08-23T06:20:38.850Z","type":"quit"}
{"nick":"dominictarr_","new_nick":"dominictarr","date":"2013-08-23T06:20:39.066Z","type":"nick"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-23T06:41:03.642Z","type":"nick"}
{"nick":"indutny","message":"hi","date":"2013-08-23T06:50:26.736Z","type":"message"}
{"nick":"chobie4","reason":"Ping timeout: 246 seconds","date":"2013-08-23T07:04:08.048Z","type":"quit"}
{"nick":"chobie4","date":"2013-08-23T07:04:38.016Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 264 seconds","date":"2013-08-23T07:04:54.359Z","type":"quit"}
{"nick":"rendar","date":"2013-08-23T07:17:05.924Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-23T07:19:02.381Z","type":"quit"}
{"nick":"hz","date":"2013-08-23T07:20:12.706Z","type":"join"}
{"nick":"st_luke","date":"2013-08-23T07:23:28.152Z","type":"join"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-08-23T07:27:33.486Z","type":"quit"}
{"nick":"hz","date":"2013-08-23T07:27:37.724Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-23T07:40:30.780Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-23T07:50:57.200Z","type":"nick"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-23T08:00:59.455Z","type":"nick"}
{"nick":"bnoordhuis","date":"2013-08-23T08:50:49.784Z","type":"join"}
{"nick":"bajtos","date":"2013-08-23T08:53:22.544Z","type":"join"}
{"nick":"indexzero","date":"2013-08-23T09:03:17.807Z","type":"join"}
{"nick":"bnoordhuis","message":"i've never noticed it before, but v8's large object space has the executable bit set","date":"2013-08-23T09:14:59.325Z","type":"message"}
{"nick":"bnoordhuis","message":"probably means it's a mix of data and code","date":"2013-08-23T09:15:31.057Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2013-08-23T09:18:33.996Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: well, actually no","date":"2013-08-23T09:18:43.170Z","type":"message"}
{"nick":"indutny","message":"it shouldn't be so","date":"2013-08-23T09:18:46.445Z","type":"message"}
{"nick":"indutny","message":"they're using separate spaces for it","date":"2013-08-23T09:18:51.231Z","type":"message"}
{"nick":"indutny","message":"I suspect that they're just setting executable bit for all","date":"2013-08-23T09:18:59.239Z","type":"message"}
{"nick":"indutny","message":"which is quite odd, actually","date":"2013-08-23T09:19:06.926Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2013-08-23T09:19:26.484Z","type":"message"}
{"nick":"indutny","message":"they just don't care much about it","date":"2013-08-23T09:19:32.868Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm pretty sure they do :)","date":"2013-08-23T09:19:41.412Z","type":"message"}
{"nick":"indutny","message":"though, its not that important","date":"2013-08-23T09:19:45.463Z","type":"message"}
{"nick":"bnoordhuis","message":"the other spaces don't have +x set","date":"2013-08-23T09:19:48.784Z","type":"message"}
{"nick":"indutny","message":"huh?","date":"2013-08-23T09:19:54.893Z","type":"message"}
{"nick":"bnoordhuis","message":"well, except the code space of course","date":"2013-08-23T09:20:00.055Z","type":"message"}
{"nick":"indutny","message":"em...","date":"2013-08-23T09:20:19.084Z","type":"message"}
{"nick":"indutny","message":"are you sure?","date":"2013-08-23T09:20:21.652Z","type":"message"}
{"nick":"indutny","message":"I see in spaces.cc that they're allocating only executable memory","date":"2013-08-23T09:20:31.975Z","type":"message"}
{"nick":"bnoordhuis","message":"look at heap.cc :)","date":"2013-08-23T09:21:23.268Z","type":"message"}
{"nick":"bnoordhuis","message":"or run `pmap $(pidof node)`","date":"2013-08-23T09:21:42.008Z","type":"message"}
{"nick":"indutny","message":"yeah, I see it now","date":"2013-08-23T09:22:17.160Z","type":"message"}
{"nick":"indutny","message":"gosh","date":"2013-08-23T09:22:18.187Z","type":"message"}
{"nick":"indutny","message":"oh, pmap","date":"2013-08-23T09:22:21.956Z","type":"message"}
{"nick":"indutny","message":"nice :)","date":"2013-08-23T09:22:23.540Z","type":"message"}
{"nick":"indutny","message":"didn't know about it","date":"2013-08-23T09:22:25.287Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-08-23T09:22:30.935Z","type":"message"}
{"nick":"bnoordhuis","message":"now you do","date":"2013-08-23T09:22:31.403Z","type":"message"}
{"nick":"indutny","message":"I don't have one","date":"2013-08-23T09:22:32.883Z","type":"message"}
{"nick":"bnoordhuis","message":"and as gi joe always said, knowing is half the battle","date":"2013-08-23T09:22:39.952Z","type":"message"}
{"nick":"bnoordhuis","message":"GEE! AAI! JOE!","date":"2013-08-23T09:22:53.364Z","type":"message"}
{"nick":"LOUDBOT","message":"NOT EVEN SCIENCE CAN HELP US NOW","date":"2013-08-23T09:22:53.797Z","type":"message"}
{"nick":"bnoordhuis","message":"^ very apropos","date":"2013-08-23T09:23:08.768Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, i don't know if pmap exists on os x","date":"2013-08-23T09:23:19.956Z","type":"message"}
{"nick":"bnoordhuis","message":"linux and solaris have it though","date":"2013-08-23T09:23:26.289Z","type":"message"}
{"nick":"indutny","message":"ok, I've vmmap","date":"2013-08-23T09:23:26.651Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #172 \u00037UNSTABLE\u000f windows-ia32 (8/597) windows-x64 (8/597) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/172/","date":"2013-08-23T09:39:44.405Z","type":"message"}
{"nick":"leonvv","date":"2013-08-23T09:51:18.463Z","type":"join"}
{"nick":"dominictarr","date":"2013-08-23T09:57:10.765Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002bc28acd\u0002 : buffer: fix regression in Buffer(buf) constructor - http://git.io/mOrrLA","date":"2013-08-23T10:02:52.660Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-23T10:11:10.619Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #468 \u00037UNSTABLE\u000f smartos-x64 (8/636) smartos-ia32 (3/636) http://jenkins.nodejs.org/job/nodejs-master/468/","date":"2013-08-23T10:12:13.814Z","type":"message"}
{"nick":"ik","message":"ＧＯＯＤ  ＭＯＲＮＩＮＧ  ＦＲＩＥＮＤＳ","date":"2013-08-23T10:12:38.163Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-23T10:13:52.915Z","type":"quit"}
{"nick":"bnoordhuis","message":"'morning', he says","date":"2013-08-23T10:14:09.682Z","type":"message"}
{"nick":"ik","message":"yea","date":"2013-08-23T10:14:44.944Z","type":"message"}
{"nick":"ik","message":"you wanna fight about it???","date":"2013-08-23T10:15:00.974Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't know","date":"2013-08-23T10:15:18.639Z","type":"message"}
{"nick":"bnoordhuis","message":"how skilled are you at martial arts?","date":"2013-08-23T10:15:24.514Z","type":"message"}
{"nick":"bnoordhuis","message":"also, length and weight info would be appreciated","date":"2013-08-23T10:15:41.019Z","type":"message"}
{"nick":"kazupon","date":"2013-08-23T10:40:27.225Z","type":"join"}
{"nick":"leonvv","reason":"Remote host closed the connection","date":"2013-08-23T10:40:47.024Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-23T10:47:21.355Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #262 \u00037UNSTABLE\u000f windows-x64 (18/636) windows-ia32 (19/636) http://jenkins.nodejs.org/job/nodejs-master-windows/262/","date":"2013-08-23T11:13:19.671Z","type":"message"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-08-23T11:24:20.344Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-23T11:29:08.902Z","type":"quit"}
{"nick":"stagas","date":"2013-08-23T11:30:57.501Z","type":"join"}
{"nick":"hz","reason":"Ping timeout: 276 seconds","date":"2013-08-23T11:41:54.659Z","type":"quit"}
{"nick":"rendar","reason":"Ping timeout: 245 seconds","date":"2013-08-23T11:55:08.164Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00022891790\u0002 : vm: remove unnecessary Persistent<FunctionTemplate> - http://git.io/RKj-Tw","date":"2013-08-23T12:31:49.741Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #469 \u00037UNSTABLE\u000f smartos-x64 (9/636) smartos-ia32 (3/636) linux-ia32 (1/636) http://jenkins.nodejs.org/job/nodejs-master/469/","date":"2013-08-23T12:41:01.901Z","type":"message"}
{"nick":"jmar777","date":"2013-08-23T12:56:56.461Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #263 \u00037UNSTABLE\u000f windows-x64 (17/636) windows-ia32 (17/636) http://jenkins.nodejs.org/job/nodejs-master-windows/263/","date":"2013-08-23T13:04:11.296Z","type":"message"}
{"nick":"pachet","date":"2013-08-23T13:12:53.974Z","type":"join"}
{"nick":"AvianFlu","date":"2013-08-23T13:27:49.851Z","type":"join"}
{"nick":"hz","date":"2013-08-23T13:35:13.059Z","type":"join"}
{"nick":"bajtos","date":"2013-08-23T13:44:21.063Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-23T13:49:34.147Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-23T13:56:59.369Z","type":"join"}
{"nick":"kevinswiber","date":"2013-08-23T14:00:02.039Z","type":"join"}
{"nick":"`3rdEden","new_nick":"`3E|IS|SILENT","date":"2013-08-23T14:03:24.512Z","type":"nick"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u000248976d2\u0002 : vm: fix Persistent<Context> leak - http://git.io/dtOxBA","date":"2013-08-23T14:11:37.506Z","type":"message"}
{"nick":"bnoordhuis","message":"https://github.com/joyent/node/issues/6115 :(","date":"2013-08-23T14:12:34.238Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2013-08-23T14:14:12.652Z","type":"message"}
{"nick":"indutny","message":"sadface","date":"2013-08-23T14:14:14.136Z","type":"message"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-08-23T14:16:56.240Z","type":"quit"}
{"nick":"hz","date":"2013-08-23T14:17:00.830Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #470 \u00037UNSTABLE\u000f smartos-x64 (8/636) smartos-ia32 (1/636) http://jenkins.nodejs.org/job/nodejs-master/470/","date":"2013-08-23T14:20:47.633Z","type":"message"}
{"nick":"`3E|IS|SILENT","new_nick":"`3rdEden","date":"2013-08-23T14:20:50.993Z","type":"nick"}
{"nick":"bnoordhuis","message":"the gc only collects ~10 ContextifyScript instances and zero ContextifyContext instances","date":"2013-08-23T14:24:10.221Z","type":"message"}
{"nick":"bnoordhuis","message":"i think it's fair to say that ain't right","date":"2013-08-23T14:24:19.830Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-23T14:30:34.920Z","type":"quit"}
{"nick":"Domenic_","message":"grr","date":"2013-08-23T14:35:34.264Z","type":"message"}
{"nick":"Domenic_","message":"ContextifyContext was supposed to be GCed when the sandbox was","date":"2013-08-23T14:36:30.219Z","type":"message"}
{"nick":"Domenic_","message":"maybe that didn't get set up right though, the ObjectWrap stuff was kind of confusing.","date":"2013-08-23T14:36:39.891Z","type":"message"}
{"nick":"c4milo","date":"2013-08-23T14:38:24.916Z","type":"join"}
{"nick":"rendar","date":"2013-08-23T14:39:31.385Z","type":"join"}
{"nick":"bradleymeck","date":"2013-08-23T14:42:42.755Z","type":"join"}
{"nick":"bnoordhuis","message":"Domenic_: i think it's making some strategically placed MakeWeak() calls","date":"2013-08-23T14:43:10.813Z","type":"message"}
{"nick":"bnoordhuis","message":"*missing, not making","date":"2013-08-23T14:43:16.316Z","type":"message"}
{"nick":"paulfryzel","date":"2013-08-23T14:44:37.759Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #264 \u00037UNSTABLE\u000f windows-x64 (18/636) windows-ia32 (19/636) http://jenkins.nodejs.org/job/nodejs-master-windows/264/","date":"2013-08-23T14:47:02.044Z","type":"message"}
{"nick":"mordy__","message":"hrm, so stuff is coming together quite nicely now","date":"2013-08-23T14:49:14.836Z","type":"message"}
{"nick":"AvianFlu","date":"2013-08-23T14:51:19.822Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-23T14:51:58.680Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-23T14:52:25.991Z","type":"join"}
{"nick":"kevinswiber","date":"2013-08-23T14:55:39.814Z","type":"join"}
{"nick":"bnoordhuis","message":"okay, apparently MakeWeak() is not the issue","date":"2013-08-23T14:55:50.842Z","type":"message"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-08-23T14:57:13.315Z","type":"quit"}
{"nick":"Domenic_","message":"i thought ObjectWrap was supposed to obviate me of the need to do manual MakeWeak-ing.","date":"2013-08-23T15:01:29.961Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, it does","date":"2013-08-23T15:02:16.323Z","type":"message"}
{"nick":"Domenic_","message":"maybe https://github.com/joyent/node/blob/master/src/node_contextify.cc#L148 should be wrapping sandbox instead of args.This()?","date":"2013-08-23T15:02:44.365Z","type":"message"}
{"nick":"bnoordhuis","message":"ah... sandbox->SetHiddenValue(hidden_name, contextify_context_object);","date":"2013-08-23T15:04:13.112Z","type":"message"}
{"nick":"bnoordhuis","message":"that seems like it would prevent the object from ever getting collected","date":"2013-08-23T15:04:27.739Z","type":"message"}
{"nick":"Domenic_","message":"ah :(","date":"2013-08-23T15:04:31.944Z","type":"message"}
{"nick":"Domenic_","message":"i think I ended up doing the same thing two different ways, one with SetHiddenValue and one with the original ObjectWrap mechanism","date":"2013-08-23T15:05:18.900Z","type":"message"}
{"nick":"Domenic_","message":"(recall that originally ContextifyContext stood on its own, derived from sandbox instead of hidden inside of it.)","date":"2013-08-23T15:05:44.861Z","type":"message"}
{"nick":"bnoordhuis","message":"right","date":"2013-08-23T15:05:47.867Z","type":"message"}
{"nick":"bnoordhuis","message":"when i comment out that call to SetHiddenValue(), i see ContextifyContext instances getting collected all the time","date":"2013-08-23T15:06:21.993Z","type":"message"}
{"nick":"bnoordhuis","message":"so seems that's it","date":"2013-08-23T15:06:28.481Z","type":"message"}
{"nick":"Domenic_","message":"ok cool","date":"2013-08-23T15:06:32.279Z","type":"message"}
{"nick":"bnoordhuis","message":"now how to best fix it","date":"2013-08-23T15:06:41.870Z","type":"message"}
{"nick":"Domenic_","message":"what is the correct pattern for hiding C++ objects on JS objects but doing the GC right?","date":"2013-08-23T15:06:53.059Z","type":"message"}
{"nick":"Domenic_","message":"i imagine by manually combining MakeWeak + SetHiddenValue, and removing ObjectWrap, it should be doable.","date":"2013-08-23T15:07:06.486Z","type":"message"}
{"nick":"Domenic_","message":"But I also imagine that ObjectWrap is meant to do that for me, somehow.","date":"2013-08-23T15:07:17.100Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, or use two internal fields instead of one","date":"2013-08-23T15:07:20.224Z","type":"message"}
{"nick":"Domenic_","message":"OK I think I have an idea what's going on","date":"2013-08-23T15:07:41.758Z","type":"message"}
{"nick":"Domenic_","message":"It's hiding the C++ ContextifyContext on the JS ContextifyContext using ObjectWrap","date":"2013-08-23T15:07:55.241Z","type":"message"}
{"nick":"Domenic_","message":"then hiding the JS ContextifyContext on the sandbox using SetHiddenValue","date":"2013-08-23T15:08:04.847Z","type":"message"}
{"nick":"Domenic_","message":"See e.g. https://github.com/joyent/node/blob/master/src/node_contextify.cc#L178-L179","date":"2013-08-23T15:08:17.311Z","type":"message"}
{"nick":"Domenic_","message":"this seems entirely unnecessary, i should just hide the C++ ContextifyContext on the sandbox.","date":"2013-08-23T15:08:33.799Z","type":"message"}
{"nick":"Domenic_","message":"using ObjectWrap presumably.","date":"2013-08-23T15:08:40.645Z","type":"message"}
{"nick":"pfox__","message":"so ... id like to learn about libuv's treatment of the st_mode field in uv_stat_t and portability..","date":"2013-08-23T15:08:50.860Z","type":"message"}
{"nick":"pfox__","message":"im looking at the windows src right now and i see its not using fstat in the actualy impl","date":"2013-08-23T15:09:10.661Z","type":"message"}
{"nick":"pfox__","message":"where are the _S_* bitmasks defined at that its |= onto st_mode ?","date":"2013-08-23T15:09:46.221Z","type":"message"}
{"nick":"pfox__","message":"having no luck finding","date":"2013-08-23T15:10:06.204Z","type":"message"}
{"nick":"pfox__","message":"(this is because im trying to establish some context for what the masks are on each platform .. )","date":"2013-08-23T15:10:37.626Z","type":"message"}
{"nick":"bnoordhuis","message":"pfox__: those bitmasks from the windows system headers","date":"2013-08-23T15:11:05.552Z","type":"message"}
{"nick":"bnoordhuis","message":"you probably have to include <sys/stat.h> and <io.h>","date":"2013-08-23T15:11:35.749Z","type":"message"}
{"nick":"pfox__","message":"ah, ok. thanks.","date":"2013-08-23T15:12:32.647Z","type":"message"}
{"nick":"bnoordhuis","message":"*are from. god, i need to learn to type","date":"2013-08-23T15:13:27.389Z","type":"message"}
{"nick":"Domenic_","message":"bnoordhuis: I can give such a solution a try tonight","date":"2013-08-23T15:14:15.193Z","type":"message"}
{"nick":"Domenic_","message":"I will comment on the bug in the meantime.","date":"2013-08-23T15:14:22.002Z","type":"message"}
{"nick":"mordy__","message":"ahh windows","date":"2013-08-23T15:14:56.077Z","type":"message"}
{"nick":"mordy__","message":"\"we'll make our constants *look* similar to POSIX, but we'll still break your builds\"","date":"2013-08-23T15:15:16.449Z","type":"message"}
{"nick":"mordy__","message":"oh, but it's \"ISO-Conformant\"","date":"2013-08-23T15:15:38.455Z","type":"message"}
{"nick":"kazupon","date":"2013-08-23T15:15:58.557Z","type":"join"}
{"nick":"mordy__","message":"hrm, on that note: is there any chance to expose the (1) platform-specific socket object; and (2) the platform-specific error code?","date":"2013-08-23T15:17:02.770Z","type":"message"}
{"nick":"mordy__","message":"i know they're both inside the structures, but they don't seem to be there for public consumption","date":"2013-08-23T15:17:20.296Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #471 \u00037UNSTABLE\u000f smartos-x64 (8/636) smartos-ia32 (3/636) http://jenkins.nodejs.org/job/nodejs-master/471/","date":"2013-08-23T15:17:42.708Z","type":"message"}
{"nick":"bnoordhuis","message":"mordy__: unlikely. if you start fooling around with the fd / HANDLE, you'll probably confuse libuv something fierce","date":"2013-08-23T15:19:10.157Z","type":"message"}
{"nick":"mordy__","message":"bnoordhuis: hrm, that's entirely understood. but there might be some useful platform-specific (informative) APIs which aren't available via UV","date":"2013-08-23T15:20:20.140Z","type":"message"}
{"nick":"mordy__","message":"for example, both linux and windows have little getsockopt APIs that return \"extended\" information about the buffer","date":"2013-08-23T15:20:38.610Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-23T15:20:42.380Z","type":"quit"}
{"nick":"mordy__","message":"err.. tcp stater","date":"2013-08-23T15:20:44.310Z","type":"message"}
{"nick":"bnoordhuis","message":"well, maybe - you'd have to convince piscisaureus too though","date":"2013-08-23T15:21:24.328Z","type":"message"}
{"nick":"bnoordhuis","message":"what kind of getsockopt data would you want to retrieve?","date":"2013-08-23T15:21:55.773Z","type":"message"}
{"nick":"bnoordhuis","message":"Domenic_: i confess i don't fully understand why v8 doesn't manage to collect the objects when SetHiddenValue() is used","date":"2013-08-23T15:23:39.982Z","type":"message"}
{"nick":"bnoordhuis","message":"or Set() - it's not SetHiddenValue() specific","date":"2013-08-23T15:24:32.741Z","type":"message"}
{"nick":"kazupon_","date":"2013-08-23T15:25:22.023Z","type":"join"}
{"nick":"mordy__","message":"bnoordhuis: linux has TCP_INFO for example -- but there's also simpler stuff like getsockname. right now we have to have different branches for these informative functions depending on whether we're using \"real\" sockets or \"UV\" sockets","date":"2013-08-23T15:26:08.853Z","type":"message"}
{"nick":"mordy__","message":"(though yes, there's uv_tcp_getsockname)","date":"2013-08-23T15:26:25.205Z","type":"message"}
{"nick":"bnoordhuis","message":"i was about to point that out :)","date":"2013-08-23T15:26:33.437Z","type":"message"}
{"nick":"Domenic_","message":"bnoordhuis: yeah, you'd kind of assume it would be just like in JS.","date":"2013-08-23T15:26:38.050Z","type":"message"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-08-23T15:26:45.409Z","type":"quit"}
{"nick":"mordy__","message":"another usage case would be logging","date":"2013-08-23T15:27:12.358Z","type":"message"}
{"nick":"mordy__","message":"if you were using something like lsof, strace, etc to see what was happening to your sockets it woudl be helpful to print out the socket id as the OS understands it","date":"2013-08-23T15:27:44.153Z","type":"message"}
{"nick":"bnoordhuis","message":"mordy__: well, you could use handle->io_watcher.fd in a pinch","date":"2013-08-23T15:28:00.314Z","type":"message"}
{"nick":"isaacs","message":"hey, this seems like a mistake, no?   statbuf->st_ctime = FILETIME_TO_TIME_T(info.ftCreationTime);","date":"2013-08-23T15:28:12.214Z","type":"message"}
{"nick":"bnoordhuis","message":"not portable or guaranteed stable of course but it's there","date":"2013-08-23T15:28:15.772Z","type":"message"}
{"nick":"isaacs","message":"ctime is not \"creation time\", after all","date":"2013-08-23T15:28:20.664Z","type":"message"}
{"nick":"isaacs","message":"it's \"change time\"","date":"2013-08-23T15:28:25.153Z","type":"message"}
{"nick":"isaacs","message":"and, for bonus fun, on windows, if you delete a file and recreate it within 15 seconds, it doesn't update the creation time","date":"2013-08-23T15:28:52.864Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: probably. i think bert mentioned there's a reason for that but i forgot what","date":"2013-08-23T15:28:58.557Z","type":"message"}
{"nick":"isaacs","message":"it seems like it'd be better to just use atime or mtime instead.","date":"2013-08-23T15:29:28.454Z","type":"message"}
{"nick":"mordy__","message":"bnoordhuis: then there's the notorious SO_LINGER/SO_REUSEADDR :)","date":"2013-08-23T15:29:32.057Z","type":"message"}
{"nick":"kazupon_","reason":"Read error: Connection reset by peer","date":"2013-08-23T15:30:00.878Z","type":"quit"}
{"nick":"bnoordhuis","message":"mordy__: libuv sets SO_REUSEADDR. SO_LINGER is almost always the wrong choice","date":"2013-08-23T15:30:35.453Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-08-23T15:31:23.109Z","type":"quit"}
{"nick":"bnoordhuis","message":"let me reword that as \"i've never seen code where SO_LINGER was used for the right reasons\"","date":"2013-08-23T15:31:25.769Z","type":"message"}
{"nick":"bradleymeck","date":"2013-08-23T15:33:55.500Z","type":"join"}
{"nick":"kazupon","date":"2013-08-23T15:36:25.899Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-08-23T15:38:56.269Z","type":"join"}
{"nick":"piscisaureus_","message":"notes","date":"2013-08-23T15:39:01.461Z","type":"message"}
{"nick":"piscisaureus_","message":"ircretary: notes","date":"2013-08-23T15:39:07.765Z","type":"message"}
{"nick":"bnoordhuis","message":"mi mi mi","date":"2013-08-23T15:39:14.269Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, that kind of notes","date":"2013-08-23T15:39:21.798Z","type":"message"}
{"nick":"mordy__","message":"SO_LINGER is a tricky one","date":"2013-08-23T15:40:10.217Z","type":"message"}
{"nick":"mordy__","message":"but it's normally choosing between \"i don't care if i get stray packets\" and \"oh crap my server has five million open sockets in TIME_WAIT\"","date":"2013-08-23T15:41:34.414Z","type":"message"}
{"nick":"mordy__","message":"especially useful in unstable/slow peers","date":"2013-08-23T15:42:02.888Z","type":"message"}
{"nick":"bnoordhuis","message":"^ that's the wrong reason :)","date":"2013-08-23T15:42:05.677Z","type":"message"}
{"nick":"bnoordhuis","message":"if you had said CLOSE_WAIT2, i might have grudgingly agreed","date":"2013-08-23T15:42:23.133Z","type":"message"}
{"nick":"mordy__","message":"i can't say i've seen things in CLOSE_WAIT2","date":"2013-08-23T15:43:19.287Z","type":"message"}
{"nick":"bnoordhuis","message":"right","date":"2013-08-23T15:43:24.197Z","type":"message"}
{"nick":"bnoordhuis","message":"TIME_WAIT is when the connection has terminated and the operating system keeps the port out of circulation for a while to avoid straggler packets messing up things","date":"2013-08-23T15:44:01.113Z","type":"message"}
{"nick":"mordy__","message":"and close_wait is just code not calling code","date":"2013-08-23T15:44:19.445Z","type":"message"}
{"nick":"mordy__","message":"close","date":"2013-08-23T15:44:21.180Z","type":"message"}
{"nick":"mordy__","message":"when it's supposed to","date":"2013-08-23T15:44:28.440Z","type":"message"}
{"nick":"bnoordhuis","message":"CLOSE_WAIT2 is where the connection has pretty much terminated but the operating system is still waiting on the final FIN","date":"2013-08-23T15:44:30.609Z","type":"message"}
{"nick":"bnoordhuis","message":"exactly","date":"2013-08-23T15:44:35.274Z","type":"message"}
{"nick":"bnoordhuis","message":"on most operating systems, connections can get stuck in CLOSE_WAIT2 indefinitely if you're not careful","date":"2013-08-23T15:44:53.294Z","type":"message"}
{"nick":"bnoordhuis","message":"you could argue it's up to the operating system or the system administrator to take care of that rather than the program","date":"2013-08-23T15:45:18.188Z","type":"message"}
{"nick":"bnoordhuis","message":"but that's a scenario where you might conceivably use SO_LINGER","date":"2013-08-23T15:45:37.068Z","type":"message"}
{"nick":"mordy__","message":"TIME_WAIT might not wait indefinitely, but it's still a good chunk of time","date":"2013-08-23T15:46:47.445Z","type":"message"}
{"nick":"bnoordhuis","message":"two minutes, usually","date":"2013-08-23T15:47:24.104Z","type":"message"}
{"nick":"bnoordhuis","message":"on most platforms it's configurable too","date":"2013-08-23T15:47:41.600Z","type":"message"}
{"nick":"mordy__","message":"yeah, and again you could argue it's an administrative task","date":"2013-08-23T15:47:58.405Z","type":"message"}
{"nick":"bnoordhuis","message":"indeed :)","date":"2013-08-23T15:48:10.936Z","type":"message"}
{"nick":"mordy__","message":"at least from my perspective though, when shipping something as a \"Standalone appliance\" kind of thing, it's best that things be done in code as much as possible.. i had to use this a few years ago where i had this server that crashed every now and then and made and accepted tons and tons of connections","date":"2013-08-23T15:49:52.294Z","type":"message"}
{"nick":"mordy__","message":"this was at a different job.. \"sure, run this server on some aging VM that's also running 500 perl instances\"","date":"2013-08-23T15:50:35.641Z","type":"message"}
{"nick":"bnoordhuis","message":"what would you do instead?","date":"2013-08-23T15:51:54.818Z","type":"message"}
{"nick":"bnoordhuis","message":"disabling or lowering tcp linger can leave you vulnerable to confused deputy style attacks","date":"2013-08-23T15:52:22.961Z","type":"message"}
{"nick":"bnoordhuis","message":"though that's a minor issue, reaaly","date":"2013-08-23T15:52:45.965Z","type":"message"}
{"nick":"bnoordhuis","message":"*really","date":"2013-08-23T15:52:47.972Z","type":"message"}
{"nick":"bnoordhuis","message":"what's more insidious is that you'll get bug reports from users complaining that their connections sometimes suddenly drop for no apparent reason","date":"2013-08-23T15:53:13.200Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-23T15:54:05.145Z","type":"quit"}
{"nick":"mordy__","message":"that was happening 10% of the time anyway :) -- it was a proxy","date":"2013-08-23T15:55:19.492Z","type":"message"}
{"nick":"bnoordhuis","message":"heh :)","date":"2013-08-23T15:55:39.517Z","type":"message"}
{"nick":"mordy__","message":"it was pretty nifty. it also did bi-directional http/1.1 pipelining","date":"2013-08-23T15:56:33.090Z","type":"message"}
