{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-08-14T00:00:00.917Z","type":"quit"}
{"nick":"ircretary","date":"2013-08-14T00:00:08.387Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 256 seconds","date":"2013-08-14T00:03:58.658Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-08-14T00:13:36.279Z","type":"quit"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-08-14T00:23:36.959Z","type":"quit"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-08-14T00:34:39.058Z","type":"quit"}
{"nick":"mordy___","message":"hrm; is there some kind of estimate to determine how much memory it *should* be using?","date":"2013-08-14T00:37:05.029Z","type":"message"}
{"nick":"mordy___","message":"i just want to rule out anything that's causing issues.. recompiling everything so i can use VS' malloc doesn't seem like a nice option","date":"2013-08-14T00:37:33.165Z","type":"message"}
{"nick":"mordy___","message":"there's something called 'drmemory' but node won't run nicely under it","date":"2013-08-14T00:37:44.889Z","type":"message"}
{"nick":"mordy___","message":"now it seems to be jumping from 37M -> 47M; and apparently something is freed when it reaches 47M and goes back to 37","date":"2013-08-14T00:39:15.513Z","type":"message"}
{"nick":"hueniverse1","date":"2013-08-14T00:57:51.727Z","type":"join"}
{"nick":"hueniverse","reason":"Ping timeout: 264 seconds","date":"2013-08-14T00:57:51.937Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-14T01:00:58.486Z","type":"join"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-08-14T01:02:30.554Z","type":"quit"}
{"nick":"indexzero","date":"2013-08-14T01:09:30.113Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-14T01:19:23.359Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-08-14T01:25:45.318Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-14T02:03:41.940Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 245 seconds","date":"2013-08-14T02:11:15.155Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-14T03:04:42.075Z","type":"nick"}
{"nick":"indexzero","date":"2013-08-14T03:08:37.473Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 246 seconds","date":"2013-08-14T03:37:07.927Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-14T03:58:40.469Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-14T04:24:51.161Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-14T04:29:57.033Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-14T04:40:12.242Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-14T04:53:19.656Z","type":"nick"}
{"nick":"kazupon","date":"2013-08-14T04:54:29.285Z","type":"join"}
{"nick":"txdv","reason":"Read error: Operation timed out","date":"2013-08-14T05:11:05.197Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-14T05:14:09.182Z","type":"quit"}
{"nick":"Guest85773","reason":"Ping timeout: 245 seconds","date":"2013-08-14T05:16:15.198Z","type":"quit"}
{"nick":"Damn3d","date":"2013-08-14T05:21:48.875Z","type":"join"}
{"nick":"amartens","date":"2013-08-14T05:52:53.201Z","type":"join"}
{"nick":"AvianFlu","date":"2013-08-14T05:58:35.492Z","type":"join"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-08-14T05:59:09.641Z","type":"quit"}
{"nick":"amartens","date":"2013-08-14T06:05:19.910Z","type":"join"}
{"nick":"amartens","reason":"Client Quit","date":"2013-08-14T06:06:23.488Z","type":"quit"}
{"nick":"amartens","date":"2013-08-14T06:16:25.316Z","type":"join"}
{"nick":"amartens","reason":"Client Quit","date":"2013-08-14T06:16:34.414Z","type":"quit"}
{"nick":"felixge","date":"2013-08-14T06:25:46.343Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2013-08-14T06:25:46.343Z","type":"quit"}
{"nick":"felixge","date":"2013-08-14T06:25:46.343Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-14T06:28:41.386Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-14T06:37:56.304Z","type":"nick"}
{"nick":"spolu","date":"2013-08-14T07:16:43.798Z","type":"join"}
{"nick":"hueniverse1","reason":"Read error: Connection reset by peer","date":"2013-08-14T07:25:54.585Z","type":"quit"}
{"nick":"hueniverse","date":"2013-08-14T07:32:30.289Z","type":"join"}
{"nick":"bajtos","date":"2013-08-14T07:34:00.025Z","type":"join"}
{"nick":"hz","date":"2013-08-14T07:35:22.072Z","type":"join"}
{"nick":"dsantiago","reason":"Ping timeout: 240 seconds","date":"2013-08-14T07:56:23.934Z","type":"quit"}
{"nick":"hz","reason":"Ping timeout: 268 seconds","date":"2013-08-14T08:00:05.074Z","type":"quit"}
{"nick":"rendar","date":"2013-08-14T08:00:13.172Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-14T08:03:36.213Z","type":"nick"}
{"nick":"`3E|Zzz","new_nick":"`3rdEden","date":"2013-08-14T08:23:46.781Z","type":"nick"}
{"nick":"saghul[afk]","new_nick":"saghul","date":"2013-08-14T08:26:20.043Z","type":"nick"}
{"nick":"dsantiago","date":"2013-08-14T08:35:25.899Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-08-14T08:35:28.208Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 246 seconds","date":"2013-08-14T08:43:22.972Z","type":"quit"}
{"nick":"Damn3d","reason":"Ping timeout: 246 seconds","date":"2013-08-14T08:52:28.940Z","type":"quit"}
{"nick":"Damn3d","date":"2013-08-14T08:53:59.161Z","type":"join"}
{"nick":"stagas","date":"2013-08-14T08:56:33.931Z","type":"join"}
{"nick":"perezd","reason":"Quit: perezd","date":"2013-08-14T09:02:24.482Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-14T09:15:19.400Z","type":"nick"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-14T09:23:29.952Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-08-14T09:27:04.250Z","type":"join"}
{"nick":"mraleph","reason":"Read error: Connection reset by peer","date":"2013-08-14T09:30:56.922Z","type":"quit"}
{"nick":"rendar","message":"i'm studying libuv code, and on the linux's epoll dispatch function, i'm stuck on w->cb(loop, w, pe->events); what that 'cb' points to?","date":"2013-08-14T09:31:28.588Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-14T09:32:03.578Z","type":"nick"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-14T09:33:16.943Z","type":"nick"}
{"nick":"dominictarr","date":"2013-08-14T09:39:58.124Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-14T09:47:26.182Z","type":"join"}
{"nick":"rendar","message":"i'm studying libuv code, and on the linux's epoll dispatch function, i'm stuck on w->cb(loop, w, pe->events); what that 'cb' points to? i know that 'w' is a uv__io_t, but where 'cb' points to there?","date":"2013-08-14T09:50:53.702Z","type":"message"}
{"nick":"wolfeidau","date":"2013-08-14T09:51:45.380Z","type":"join"}
{"nick":"bnoordhuis","message":"rendar: an internal libuv callback","date":"2013-08-14T09:57:49.715Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: usually uv__stream_io or uv__server_io","date":"2013-08-14T09:58:04.092Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, thanks, where are those defined? basically i want to understand how libuv can abstract epoll/kqueue/etc to iocp, since their design is completely different...","date":"2013-08-14T09:59:05.335Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: the two i mentioned live in src/unix/stream.c","date":"2013-08-14T09:59:30.651Z","type":"message"}
{"nick":"rendar","message":"thanks","date":"2013-08-14T09:59:44.151Z","type":"message"}
{"nick":"bnoordhuis","message":"there's also uv__udp_something in src/unix/udp.c","date":"2013-08-14T09:59:48.822Z","type":"message"}
{"nick":"bnoordhuis","message":"basically, grep for calls to uv__io_init and you'll find the callbacks","date":"2013-08-14T10:00:06.617Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, cool! what i can't understand is how some facility which tells you that an fd is *ready* to be written or read, can be abstracted with iocp which tells you that the reading/writing are completed, within the buffer pointer and n bytes... i guess you have to save those 2 values somewhere...","date":"2013-08-14T10:01:49.143Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: i'm not sure i understand i question. are you asking how uv-unix simulates completion-based i/o?","date":"2013-08-14T10:03:18.419Z","type":"message"}
{"nick":"rendar","message":"yes exactly","date":"2013-08-14T10:03:42.920Z","type":"message"}
{"nick":"rendar","message":"just some hint to understand the \"big picture\"","date":"2013-08-14T10:04:05.151Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: right. it's easy really","date":"2013-08-14T10:04:29.631Z","type":"message"}
{"nick":"bnoordhuis","message":"i/o on unices is readiness based","date":"2013-08-14T10:04:44.453Z","type":"message"}
{"nick":"rendar","message":"yep","date":"2013-08-14T10:04:56.467Z","type":"message"}
{"nick":"bnoordhuis","message":"libuv just has to execute the reads and writes on your behalf","date":"2013-08-14T10:04:57.368Z","type":"message"}
{"nick":"bnoordhuis","message":"and when it's done reading/writing, ping you","date":"2013-08-14T10:05:07.243Z","type":"message"}
{"nick":"bnoordhuis","message":"et voila, you have completion-based i/o :)","date":"2013-08-14T10:05:13.307Z","type":"message"}
{"nick":"rendar","message":"hmmm, yeah pretty simple :)","date":"2013-08-14T10:05:31.130Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, so when i perform a read, libuv saves that i have performed that read on buffer 'buf' and 'n' bytes. instead of calling *mimmediately* unix's read() it waits until it receives a you-can-read-now notify, then libuv calls unix's read() under the hood, and when its finished, it pings you, calling e.g. on_read(buf, n)","date":"2013-08-14T10:07:17.719Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-14T10:10:43.631Z","type":"quit"}
{"nick":"bnoordhuis","message":"rendar: that's pretty much how it works","date":"2013-08-14T10:14:41.765Z","type":"message"}
{"nick":"bnoordhuis","message":"uv_read_start() tells libuv to start waiting for read readiness","date":"2013-08-14T10:15:00.426Z","type":"message"}
{"nick":"bnoordhuis","message":"once that happens it calls your alloc_cb to get a buffer to read into, then it does the actual read, then it calls your read_cb","date":"2013-08-14T10:15:33.395Z","type":"message"}
{"nick":"bnoordhuis","message":"the order on windows is a little different: you provide the buffer up front (usually) and then wait until data's received","date":"2013-08-14T10:16:01.772Z","type":"message"}
{"nick":"bnoordhuis","message":"uv-unix doesn't emulate that particular windows behavior because it means you'll generally have a higher memory footprint","date":"2013-08-14T10:16:44.923Z","type":"message"}
{"nick":"piscisaureus_","message":"hey bnoordhuis","date":"2013-08-14T10:18:15.870Z","type":"message"}
{"nick":"piscisaureus_","message":"is it true that the slab allocator is now ripped out?","date":"2013-08-14T10:19:13.411Z","type":"message"}
{"nick":"piscisaureus_","message":"ab w/ keepalive got 20% slower (again!) between 0.10 and master","date":"2013-08-14T10:19:53.017Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: yes and that shouldn't be the case","date":"2013-08-14T10:20:24.020Z","type":"message"}
{"nick":"bnoordhuis","message":"did you check what in particular got slower?","date":"2013-08-14T10:21:31.671Z","type":"message"}
{"nick":"bnoordhuis","message":"i.e. ran any profiling?","date":"2013-08-14T10:21:40.055Z","type":"message"}
{"nick":"piscisaureus_","message":"no i just ran into it","date":"2013-08-14T10:22:19.160Z","type":"message"}
{"nick":"piscisaureus_","message":"I will plan doing that but first I have to finish execSync :)","date":"2013-08-14T10:22:31.524Z","type":"message"}
{"nick":"spolu","reason":"Ping timeout: 264 seconds","date":"2013-08-14T10:24:09.788Z","type":"quit"}
{"nick":"rendar","message":"i see","date":"2013-08-14T10:28:46.965Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, so if i got it, in unix on_read will receive the buffer allocated with alloc_cb? and not the buffer passed by the user?","date":"2013-08-14T10:30:50.109Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: read_cb gets the buffer that alloc_cb returned","date":"2013-08-14T10:40:23.431Z","type":"message"}
{"nick":"bnoordhuis","message":"where else would it get the buffer from? :)","date":"2013-08-14T10:40:40.445Z","type":"message"}
{"nick":"rendar","message":"well, if you have e.g. ssize_t uv_read(uv_tcp_t*, uv_buf_t* buf); the user himself can pass a buffer that will be used for reading, right?","date":"2013-08-14T10:41:54.004Z","type":"message"}
{"nick":"kazupon","date":"2013-08-14T10:44:12.826Z","type":"join"}
{"nick":"bnoordhuis","message":"rendar: yes. but there is no uv_read()","date":"2013-08-14T10:44:37.285Z","type":"message"}
{"nick":"hz","date":"2013-08-14T10:45:47.780Z","type":"join"}
{"nick":"rendar","message":"oh","date":"2013-08-14T10:46:19.920Z","type":"message"}
{"nick":"rendar","message":"so there is for example uv_fs_read()","date":"2013-08-14T10:46:24.827Z","type":"message"}
{"nick":"rendar","message":"and so on..","date":"2013-08-14T10:46:27.851Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, but the fs part should be a strong hint as to what it does :)","date":"2013-08-14T10:48:16.363Z","type":"message"}
{"nick":"rendar","message":"yeah","date":"2013-08-14T10:49:30.004Z","type":"message"}
{"nick":"rendar","message":"instead with networking we have read_start_* and read_stop_*, right?","date":"2013-08-14T10:49:48.335Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2013-08-14T10:50:08.661Z","type":"message"}
{"nick":"rendar","message":"read_start_ allocate the buffer with alloc_cb, and read_stop_ will deallocate it","date":"2013-08-14T10:50:12.910Z","type":"message"}
{"nick":"bnoordhuis","message":"no","date":"2013-08-14T10:50:17.696Z","type":"message"}
{"nick":"bnoordhuis","message":"uv_read_start() just tells libuv to start watching for read readiness","date":"2013-08-14T10:50:33.931Z","type":"message"}
{"nick":"bnoordhuis","message":"when the socket is readable, it does the alloc_cb/read_cb dance","date":"2013-08-14T10:50:50.464Z","type":"message"}
{"nick":"rendar","message":"oh","date":"2013-08-14T10:50:59.673Z","type":"message"}
{"nick":"bnoordhuis","message":"it's up to the read_cb to free the buffer again, if necessary","date":"2013-08-14T10:51:02.730Z","type":"message"}
{"nick":"bnoordhuis","message":"uv_read_stop() is just the counterpart of uv_read_start()","date":"2013-08-14T10:51:22.263Z","type":"message"}
{"nick":"rendar","message":"this will be a less memory footprint because the buffer is allocated only when is needed, instead that each open connection has a buffer","date":"2013-08-14T10:51:46.811Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, correct","date":"2013-08-14T10:52:26.812Z","type":"message"}
{"nick":"rendar","message":"but what about a connection does high and frequent reads? in that case you'll have many allocations/deallocations?","date":"2013-08-14T10:53:03.211Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: hoya","date":"2013-08-14T10:53:37.368Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: I'm trying to reproduce this fs.watch issue on mac","date":"2013-08-14T10:53:47.580Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: yes. that's why node uses (or used to use) a slab allocator","date":"2013-08-14T10:53:48.119Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: hi","date":"2013-08-14T10:53:56.469Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, i see now","date":"2013-08-14T10:53:56.683Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: having a bit of trouble with this, though","date":"2013-08-14T10:54:04.924Z","type":"message"}
{"nick":"indutny","message":"https://gist.github.com/indutny/2ccdd6cee4b97ddbefbb","date":"2013-08-14T10:54:19.382Z","type":"message"}
{"nick":"indutny","message":"it seems to be generally working on master","date":"2013-08-14T10:54:29.355Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, i see","date":"2013-08-14T10:54:45.531Z","type":"message"}
{"nick":"indutny","message":"and 0.10.13","date":"2013-08-14T10:54:51.999Z","type":"message"}
{"nick":"bnoordhuis","message":"\"Also bringing up these topics in unrelated conversations is kind of annoying and people should refrain from that. Hello Michaël Rouges, we can all read the topic index ourselves, thanks.\"","date":"2013-08-14T10:55:11.396Z","type":"message"}
{"nick":"bnoordhuis","message":"oh snap!","date":"2013-08-14T10:55:15.403Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, well, doesn't the slab allocator generate some bottleneck since (i guess) it must be export an *interlocked* allocation, in order to work with multiple threads?","date":"2013-08-14T10:55:50.377Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: not an issue for node, it's single-threaded","date":"2013-08-14T10:56:22.078Z","type":"message"}
{"nick":"rendar","message":"oh, ok","date":"2013-08-14T10:56:34.443Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 276 seconds","date":"2013-08-14T10:57:21.919Z","type":"quit"}
{"nick":"indutny","message":"bnoordhuis: is bert anywhere around you?","date":"2013-08-14T10:58:58.903Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-08-14T10:58:59.727Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: no, he's in 020","date":"2013-08-14T10:59:21.334Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, isn't this thing of slab allocator and on-readyness allocated buffers similar to that libevent2's buffered abstraction?","date":"2013-08-14T10:59:21.822Z","type":"message"}
{"nick":"indutny","message":"http://en.wikipedia.org/wiki/020 ?","date":"2013-08-14T10:59:32.936Z","type":"message"}
{"nick":"indutny","message":"london?","date":"2013-08-14T10:59:34.308Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: no, amsterdam :)","date":"2013-08-14T10:59:41.246Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2013-08-14T10:59:46.241Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2013-08-14T10:59:46.710Z","type":"message"}
{"nick":"indutny","message":";)","date":"2013-08-14T10:59:47.682Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: possibly. i don't know libevent2 that well","date":"2013-08-14T10:59:53.544Z","type":"message"}
{"nick":"rendar","message":"ok","date":"2013-08-14T10:59:57.922Z","type":"message"}
{"nick":"bnoordhuis","message":"worked with the original libevent for quite some time","date":"2013-08-14T11:00:06.269Z","type":"message"}
{"nick":"bnoordhuis","message":"and that kind of turned me off","date":"2013-08-14T11:00:15.793Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, eheh i see, why?","date":"2013-08-14T11:00:58.442Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: oh, mostly because everything takes just a little too much effort","date":"2013-08-14T11:01:27.644Z","type":"message"}
{"nick":"bnoordhuis","message":"and libevent sits at just the wrong level of abstraction","date":"2013-08-14T11:01:35.617Z","type":"message"}
{"nick":"rendar","message":"i definitely think so","date":"2013-08-14T11:01:49.137Z","type":"message"}
{"nick":"rendar","message":"i saw some libevent's apis and examples time ago, they where just very difficult to use","date":"2013-08-14T11:02:09.105Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis,  i think libev is far better than libevent, unfortunately it doesn't support win nt","date":"2013-08-14T11:03:48.368Z","type":"message"}
{"nick":"hz","reason":"Remote host closed the connection","date":"2013-08-14T11:04:09.865Z","type":"quit"}
{"nick":"bnoordhuis","message":"rendar: no, and it never will - well, not efficiently anyway","date":"2013-08-14T11:04:34.119Z","type":"message"}
{"nick":"bnoordhuis","message":"it's very much built around the concept of readiness-bases i/o, not completion-based i/o","date":"2013-08-14T11:04:52.138Z","type":"message"}
{"nick":"bnoordhuis","message":"also, and apropos nothing, its author is an annoying german","date":"2013-08-14T11:05:09.689Z","type":"message"}
{"nick":"rendar","message":"mmm yeah","date":"2013-08-14T11:05:10.921Z","type":"message"}
{"nick":"rendar","message":"lol","date":"2013-08-14T11:05:16.433Z","type":"message"}
{"nick":"hz","date":"2013-08-14T11:05:20.283Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-08-14T11:08:17.785Z","type":"quit"}
{"nick":"rendar","message":"bnoordhuis, how much is the memory footprint shrunk by this optimization of that buffer is allocated only when fd are ready to be read/write?","date":"2013-08-14T11:10:21.364Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: ah, that's the kind of question to which there's no exact answer","date":"2013-08-14T11:11:41.861Z","type":"message"}
{"nick":"bnoordhuis","message":"it's somewhere in the range of 'nothing' to 'a lot'","date":"2013-08-14T11:11:54.877Z","type":"message"}
{"nick":"rendar","message":"yeah i guess so","date":"2013-08-14T11:12:13.980Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, consider if we didn't have that..so the user passed its own buffer to uv_start_read()...so the {buf,size} passed by the user should have been saved somewhere, so when epoll_wait() returns, and there is a readyness for read, libuv could have used that {buf,size} to call unix's read() -- right?","date":"2013-08-14T11:13:39.228Z","type":"message"}
{"nick":"saghul","message":"rendar FWIW,in pyuv I use a statically allocated buffer in alloc_cb, so it's up to read_cb to copy it","date":"2013-08-14T11:14:36.989Z","type":"message"}
{"nick":"bnoordhuis","message":"rendar: sorry, have to run - back in ~1 hour","date":"2013-08-14T11:14:49.834Z","type":"message"}
{"nick":"rendar","message":"bnoordhuis, ok","date":"2013-08-14T11:14:56.898Z","type":"message"}
{"nick":"rendar","message":"saghul, hmmm i see","date":"2013-08-14T11:15:00.344Z","type":"message"}
{"nick":"rendar","message":"saghul, but i was wondering if libuv had these static buffer, then its design could have be different","date":"2013-08-14T11:15:45.633Z","type":"message"}
{"nick":"saghul","message":"rendar the way it is, it allows you to choose how to do it, doesn't it?","date":"2013-08-14T11:16:17.569Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-08-14T11:16:48.552Z","type":"join"}
{"nick":"rendar","message":"saghul, not really because you still have to call alloc_cb, and you still have uv_start_read()..instead i was wondering about specifying user's {buf,size} and save them internally","date":"2013-08-14T11:17:23.354Z","type":"message"}
{"nick":"saghul","message":"ah, and reuse the buffer every time?","date":"2013-08-14T11:18:05.958Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 246 seconds","date":"2013-08-14T11:19:07.997Z","type":"quit"}
{"nick":"saghul","message":"rendar I think you can achieve that by returning the same thing in alloc_cb all the time, you have the extra callback function though","date":"2013-08-14T11:19:26.045Z","type":"message"}
{"nick":"rendar","message":"yeah","date":"2013-08-14T11:20:26.373Z","type":"message"}
{"nick":"hz","reason":"Remote host closed the connection","date":"2013-08-14T11:26:50.200Z","type":"quit"}
{"nick":"hz","date":"2013-08-14T11:27:44.680Z","type":"join"}
{"nick":"piscisaureus_","message":"13:37 guys","date":"2013-08-14T11:37:17.267Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: hoya","date":"2013-08-14T11:44:06.737Z","type":"message"}
{"nick":"piscisaureus_","message":"hey fedor","date":"2013-08-14T11:44:19.655Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: I think I know what's causing fs.watch problems that you observe","date":"2013-08-14T11:44:22.325Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: what is it?","date":"2013-08-14T11:44:31.339Z","type":"message"}
{"nick":"indutny","message":"that's my stupid thread-safety assumptions about FSEvents API","date":"2013-08-14T11:44:33.699Z","type":"message"}
{"nick":"piscisaureus_","message":"is it fixable?","date":"2013-08-14T11:44:47.202Z","type":"message"}
{"nick":"indutny","message":"I think the callback invokes after FSEventStreamStop","date":"2013-08-14T11:44:49.091Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: yeah, I'll rewrite that piece of code :P","date":"2013-08-14T11:44:56.728Z","type":"message"}
{"nick":"indutny","message":"to do all the stuff from CF thread","date":"2013-08-14T11:45:05.575Z","type":"message"}
{"nick":"piscisaureus_","message":"I could tell that the arguments passed to the callback were garbage","date":"2013-08-14T11:45:06.491Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: that's quite obvious","date":"2013-08-14T11:45:15.384Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: from disassembly dump you gave me","date":"2013-08-14T11:45:22.216Z","type":"message"}
{"nick":"indutny","message":"it seems that handle->realpath is NULL","date":"2013-08-14T11:45:28.589Z","type":"message"}
{"nick":"indutny","message":"and the only condition when it could happen is after uv_close() of handle","date":"2013-08-14T11:45:49.222Z","type":"message"}
{"nick":"piscisaureus_","message":"right","date":"2013-08-14T11:53:07.166Z","type":"message"}
{"nick":"piscisaureus_","message":"well atleast I asked the right question then :-p","date":"2013-08-14T11:53:15.867Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-08-14T11:54:31.138Z","type":"message"}
{"nick":"piscisaureus_","message":"why does uv_buf_init take a const char* ?","date":"2013-08-14T11:56:45.914Z","type":"message"}
{"nick":"piscisaureus_","message":"oh nevermind it doesn't","date":"2013-08-14T11:57:00.055Z","type":"message"}
{"nick":"piscisaureus_","message":"msvc is just confused","date":"2013-08-14T11:57:05.302Z","type":"message"}
{"nick":"hz","reason":"Ping timeout: 256 seconds","date":"2013-08-14T12:00:15.352Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-14T12:09:42.086Z","type":"quit"}
{"nick":"rendar","reason":"Ping timeout: 276 seconds","date":"2013-08-14T12:32:16.127Z","type":"quit"}
{"nick":"spolu","date":"2013-08-14T12:38:38.293Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 256 seconds","date":"2013-08-14T12:46:42.354Z","type":"quit"}
{"nick":"M28","reason":"Read error: Connection reset by peer","date":"2013-08-14T13:10:41.992Z","type":"quit"}
{"nick":"M28","date":"2013-08-14T13:11:41.762Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-08-14T13:20:11.119Z","type":"join"}
{"nick":"indutny","message":"piscisaureus_: bertje","date":"2013-08-14T13:23:18.081Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: can you please try out a patch from https://github.com/joyent/libuv/pull/880","date":"2013-08-14T13:23:29.577Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: fedorretje :)","date":"2013-08-14T13:37:49.534Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: it was hard for me to reproduce, but the c9 folks could consistently","date":"2013-08-14T13:38:12.034Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: iow, I'm going to delegate that","date":"2013-08-14T13:38:20.463Z","type":"message"}
{"nick":"mcavage_","date":"2013-08-14T13:41:07.343Z","type":"join"}
{"nick":"mcavage","reason":"Read error: Connection reset by peer","date":"2013-08-14T13:41:08.640Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-14T13:43:36.762Z","type":"join"}
{"nick":"piscisaureus_","message":"indutny: but it seems that I have to backport it first","date":"2013-08-14T13:44:52.762Z","type":"message"}
{"nick":"piscisaureus_","message":"which I cant do right now because I'd have to run os x but I have a meeting in 10 minutes","date":"2013-08-14T13:45:36.356Z","type":"message"}
{"nick":"piscisaureus_","message":"sorry","date":"2013-08-14T13:45:39.743Z","type":"message"}
{"nick":"rendar","date":"2013-08-14T13:48:02.981Z","type":"join"}
{"nick":"pachet","date":"2013-08-14T13:58:12.627Z","type":"join"}
{"nick":"bajtos","date":"2013-08-14T14:12:50.742Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-14T14:23:21.351Z","type":"join"}
{"nick":"inolen","reason":"Read error: Connection reset by peer","date":"2013-08-14T14:40:49.483Z","type":"quit"}
{"nick":"inolen","date":"2013-08-14T14:40:58.563Z","type":"join"}
{"nick":"bradleymeck","date":"2013-08-14T14:52:36.848Z","type":"join"}
{"nick":"indutny","message":"piscisaureus_: haha","date":"2013-08-14T14:53:04.884Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: I can backport it for you","date":"2013-08-14T14:53:09.072Z","type":"message"}
{"nick":"pachet","reason":"Quit: leaving","date":"2013-08-14T14:57:37.623Z","type":"quit"}
{"nick":"pachet","date":"2013-08-14T14:57:58.056Z","type":"join"}
{"nick":"kenperkins_","new_nick":"kenperkins","date":"2013-08-14T14:58:00.980Z","type":"nick"}
{"nick":"paulfryzel","date":"2013-08-14T15:04:05.774Z","type":"join"}
{"nick":"piscisaureus_","reason":"Read error: No route to host","date":"2013-08-14T15:05:09.559Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-08-14T15:06:22.043Z","type":"join"}
{"nick":"AvianFlu","date":"2013-08-14T15:08:32.562Z","type":"join"}
{"nick":"piscisaureus_","message":"inolen: yeah, sorry, I removed the issue number since you already mentioned it too","date":"2013-08-14T15:12:17.994Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-08-14T15:12:22.723Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-08-14T15:12:42.401Z","type":"join"}
{"nick":"piscisaureus_","message":"indutny: ^-- sorry, that was for you obviously","date":"2013-08-14T15:12:54.612Z","type":"message"}
{"nick":"piscisaureus_","reason":"Client Quit","date":"2013-08-14T15:12:58.565Z","type":"quit"}
{"nick":"dap","date":"2013-08-14T15:13:38.120Z","type":"join"}
{"nick":"kazupon","date":"2013-08-14T15:13:38.331Z","type":"join"}
{"nick":"`3rdEden","new_nick":"`3E|SHOPPA","date":"2013-08-14T15:15:21.887Z","type":"nick"}
{"nick":"groundwater","date":"2013-08-14T15:27:02.361Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-08-14T15:35:35.652Z","type":"join"}
{"nick":"bnoordhuis","message":"https://github.com/joyent/node/issues/6041#issuecomment-22644347 <- am i missing anything here? streams cannot be that broken in v0.10, can they?","date":"2013-08-14T15:38:33.676Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-14T15:44:20.554Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-14T15:45:45.057Z","type":"join"}
{"nick":"indutny","message":"piscisaureus_: yt?","date":"2013-08-14T15:46:17.349Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: in limited fashion. I'm in a \"background meeting\"","date":"2013-08-14T15:46:33.954Z","type":"message"}
{"nick":"indutny","message":"oh god","date":"2013-08-14T15:46:40.774Z","type":"message"}
{"nick":"indutny","message":"I'm not even going to ask what it is","date":"2013-08-14T15:46:45.167Z","type":"message"}
{"nick":"indutny","message":"whatever","date":"2013-08-14T15:46:46.866Z","type":"message"}
{"nick":"indutny","message":"I'm running tests on backported fix for fsevents","date":"2013-08-14T15:46:54.057Z","type":"message"}
{"nick":"piscisaureus_","message":"I mean, I'm in a meeting but I can & quite easily","date":"2013-08-14T15:46:56.610Z","type":"message"}
{"nick":"piscisaureus_","message":"kewl","date":"2013-08-14T15:47:05.040Z","type":"message"}
{"nick":"indutny","message":"if it'll go fine - I'll send you a gist","date":"2013-08-14T15:47:06.350Z","type":"message"}
{"nick":"piscisaureus_","message":"Naais","date":"2013-08-14T15:47:24.279Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: https://gist.github.com/indutny/6232342","date":"2013-08-14T15:47:55.023Z","type":"message"}
{"nick":"bnoordhuis","message":"ah... that file.pipe(response) thing is even being discussed on the mailing list","date":"2013-08-14T15:54:14.013Z","type":"message"}
{"nick":"bnoordhuis","message":"so, apparently streams really is that broken?","date":"2013-08-14T15:54:25.913Z","type":"message"}
{"nick":"hz","date":"2013-08-14T15:54:55.833Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: does it surprise you?","date":"2013-08-14T15:56:28.871Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033piscisaureus\u000f created branch fsevents-fix - http://git.io/U6kSvg","date":"2013-08-14T15:58:19.332Z","type":"message"}
{"nick":"piscisaureus_","message":"that's why EEs are evil","date":"2013-08-14T15:58:48.044Z","type":"message"}
{"nick":"piscisaureus_","message":":)","date":"2013-08-14T15:58:52.144Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: yes","date":"2013-08-14T15:59:40.311Z","type":"message"}
{"nick":"bnoordhuis","message":"it wasn't broken in v0.8","date":"2013-08-14T15:59:47.496Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-08-14T16:00:00.693Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-08-14T16:00:01.390Z","type":"message"}
{"nick":"rendar","message":"EEs?","date":"2013-08-14T16:00:08.894Z","type":"message"}
{"nick":"indutny","message":"that is old time","date":"2013-08-14T16:00:09.711Z","type":"message"}
{"nick":"indutny","message":"good old time","date":"2013-08-14T16:00:11.660Z","type":"message"}
{"nick":"indutny","message":"but it was a bit inconsistent","date":"2013-08-14T16:00:17.568Z","type":"message"}
{"nick":"bnoordhuis","message":"when things just worked :-/","date":"2013-08-14T16:00:18.108Z","type":"message"}
{"nick":"indutny","message":"and hacky","date":"2013-08-14T16:00:20.482Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm just wondering if this is a bug or a fundamental design flaw","date":"2013-08-14T16:00:39.992Z","type":"message"}
{"nick":"bnoordhuis","message":"if it's the latter, i will cry tiny tears","date":"2013-08-14T16:00:52.650Z","type":"message"}
{"nick":"indexzero","date":"2013-08-14T16:01:20.341Z","type":"join"}
{"nick":"bnoordhuis","message":"rendar: EE = EventEmitter","date":"2013-08-14T16:01:30.425Z","type":"message"}
{"nick":"rendar","message":"i see","date":"2013-08-14T16:01:52.052Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-14T16:07:18.004Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00022669966\u0002 : http: speed up callbacks, use array indices (+1 more commits) - http://git.io/4OKjNg","date":"2013-08-14T16:09:00.621Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-14T16:09:17.341Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 264 seconds","date":"2013-08-14T16:10:04.378Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-14T16:15:10.689Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-08-14T16:16:06.751Z","type":"quit"}
{"nick":"perezd","date":"2013-08-14T16:16:40.346Z","type":"join"}
{"nick":"isaacs","message":"the last 10 tests are always the worst.","date":"2013-08-14T16:22:07.461Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: the waiting is the hardest part?","date":"2013-08-14T16:27:13.730Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: actually, i'm down to 7 now","date":"2013-08-14T16:27:42.787Z","type":"message"}
{"nick":"isaacs","message":"our http test suite is really nice.","date":"2013-08-14T16:27:51.840Z","type":"message"}
{"nick":"isaacs","message":"it *does* test a lot of internal garbage, which is kind of unfortunate.","date":"2013-08-14T16:30:08.088Z","type":"message"}
{"nick":"tjfontaine","message":"indeed","date":"2013-08-14T16:32:09.940Z","type":"message"}
{"nick":"indexzero","date":"2013-08-14T16:34:45.811Z","type":"join"}
{"nick":"indexzero","reason":"Client Quit","date":"2013-08-14T16:36:39.883Z","type":"quit"}
{"nick":"bajtos","date":"2013-08-14T16:37:58.306Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1413 \u00037UNSTABLE\u000f smartos-ia32 (3/594) smartos-x64 (4/594) http://jenkins.nodejs.org/job/nodejs-v0.10/1413/","date":"2013-08-14T16:38:12.274Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #420 \u00037UNSTABLE\u000f linux-x64 (5/622) linux-ia32 (5/622) smartos-ia32 (1/622) osx-ia32 (1/622) osx-x64 (1/622) smartos-x64 (9/622) http://jenkins.nodejs.org/job/nodejs-master/420/","date":"2013-08-14T16:40:38.364Z","type":"message"}
{"nick":"bradleymeck","message":"bnoordhuis: \"never trust a string\" was a quote I heard yesterday","date":"2013-08-14T16:40:40.490Z","type":"message"}
{"nick":"bradleymeck","message":"makes me think of EEs","date":"2013-08-14T16:40:45.763Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: https://github.com/joyent/node/pull/6009","date":"2013-08-14T16:41:08.029Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: please review","date":"2013-08-14T16:41:11.089Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #143 \u00037UNSTABLE\u000f windows-x64 (8/594) windows-ia32 (11/594) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/143/","date":"2013-08-14T16:44:06.454Z","type":"message"}
{"nick":"M28_","date":"2013-08-14T16:49:55.417Z","type":"join"}
{"nick":"M28","reason":"Read error: Connection reset by peer","date":"2013-08-14T16:49:55.680Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #216 \u00037UNSTABLE\u000f windows-x64 (20/622) windows-ia32 (19/622) http://jenkins.nodejs.org/job/nodejs-master-windows/216/","date":"2013-08-14T16:50:44.633Z","type":"message"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-08-14T16:52:22.938Z","type":"quit"}
{"nick":"M28_","reason":"Read error: Connection reset by peer","date":"2013-08-14T16:52:24.049Z","type":"quit"}
{"nick":"hz","date":"2013-08-14T16:52:33.188Z","type":"join"}
{"nick":"M28","date":"2013-08-14T16:52:51.760Z","type":"join"}
{"nick":"mikeal","date":"2013-08-14T16:55:21.015Z","type":"join"}
{"nick":"TooTallNate","date":"2013-08-14T17:07:17.200Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-14T17:07:20.625Z","type":"quit"}
{"nick":"mcavage_","reason":"Remote host closed the connection","date":"2013-08-14T17:07:30.586Z","type":"quit"}
{"nick":"`3E|SHOPPA","new_nick":"`3E","date":"2013-08-14T17:08:39.913Z","type":"nick"}
{"nick":"amartens","date":"2013-08-14T17:08:48.794Z","type":"join"}
{"nick":"bajtos","message":"isaacs: are you around?","date":"2013-08-14T17:10:05.928Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Fedor Indutny\u000f \u00037master\u000f * \u0002c50750e\u0002 : tls: handle errors on socket before releasing it - http://git.io/SOFNAg","date":"2013-08-14T17:10:40.095Z","type":"message"}
{"nick":"brson","date":"2013-08-14T17:15:31.792Z","type":"join"}
{"nick":"isaacs","message":"bajtos: yo","date":"2013-08-14T17:17:28.828Z","type":"message"}
{"nick":"isaacs","message":"[00:25|% 100|+ 134|-   0]: Done <-- http tests on new OutgoingMessage class.","date":"2013-08-14T17:17:39.126Z","type":"message"}
{"nick":"isaacs","action":"\\o/","date":"2013-08-14T17:17:44.488Z","type":"action"}
{"nick":"isaacs","message":"running all the other tests now to see what else I broke :)","date":"2013-08-14T17:17:54.015Z","type":"message"}
{"nick":"bajtos","message":"isaacs: have you had a chance to look at that caching http client I am writing for multi-registry support in npm client?","date":"2013-08-14T17:18:18.125Z","type":"message"}
{"nick":"isaacs","message":"bajtos: no, i hadn't had a chance to see it.  got a link?","date":"2013-08-14T17:18:31.344Z","type":"message"}
{"nick":"bajtos","message":"isaacs: https://github.com/strongloop/strong-caching-http-client/tree/impl","date":"2013-08-14T17:18:31.818Z","type":"message"}
{"nick":"bajtos","message":"isaacs: I have the first version that should allow us to start working on other parts of the solution","date":"2013-08-14T17:19:32.333Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #421 \u00037UNSTABLE\u000f linux-x64 (1/622) linux-ia32 (1/622) smartos-ia32 (3/622) osx-ia32 (2/622) osx-x64 (2/622) smartos-x64 (9/622) http://jenkins.nodejs.org/job/nodejs-master/421/","date":"2013-08-14T17:19:46.296Z","type":"message"}
{"nick":"bajtos","message":"isaacs: I prefer to work vertically, i.e. implement the first round of changes in all modules involved, to make sure we are going in the right direction","date":"2013-08-14T17:20:15.018Z","type":"message"}
{"nick":"isaacs","message":"bajtos: yeah, that's how i usually work, too","date":"2013-08-14T17:20:30.698Z","type":"message"}
{"nick":"bajtos","message":"isaacs: and implement all edge cases, etc. as the second.","date":"2013-08-14T17:20:36.804Z","type":"message"}
{"nick":"isaacs","message":"build the base, then build up in all directions kinda together","date":"2013-08-14T17:20:38.102Z","type":"message"}
{"nick":"isaacs","message":"easier to keep all on the same track that way","date":"2013-08-14T17:20:48.616Z","type":"message"}
{"nick":"bajtos","message":"isaacs: cool, it's good to be aligned on this","date":"2013-08-14T17:20:49.180Z","type":"message"}
{"nick":"isaacs","message":"i'll review this today.","date":"2013-08-14T17:20:55.993Z","type":"message"}
{"nick":"bajtos","message":"excellent, thanks","date":"2013-08-14T17:21:04.488Z","type":"message"}
{"nick":"isaacs","message":"i've been working on the core http stuff for v0.12, so my brain is full of http knowledge right now :)","date":"2013-08-14T17:21:11.505Z","type":"message"}
{"nick":"isaacs","message":"very much in that mode :)","date":"2013-08-14T17:21:23.319Z","type":"message"}
{"nick":"c4milo","date":"2013-08-14T17:21:29.395Z","type":"join"}
{"nick":"bajtos","message":"\u000bisaacs: I see, sorry for interrupting you. I've created a pull request so that it's easier to track the discussion: https://github.com/strongloop/strong-caching-http-client/pull/1","date":"2013-08-14T17:21:52.956Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-08-14T17:24:09.970Z","type":"quit"}
{"nick":"isaacs","message":"bajtos: oh, no worries, this is the perfect time to review this :)","date":"2013-08-14T17:24:33.061Z","type":"message"}
{"nick":"isaacs","message":"bajtos: all the edge cases are fresh in my mind righ tnow","date":"2013-08-14T17:24:48.511Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-14T17:26:23.769Z","type":"nick"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #217 \u00037UNSTABLE\u000f windows-x64 (17/622) windows-ia32 (18/622) http://jenkins.nodejs.org/job/nodejs-master-windows/217/","date":"2013-08-14T17:29:47.513Z","type":"message"}
{"nick":"st_luke","date":"2013-08-14T17:34:30.517Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 264 seconds","date":"2013-08-14T17:43:21.860Z","type":"quit"}
{"nick":"brson","date":"2013-08-14T17:46:08.364Z","type":"join"}
{"nick":"bradleymeck","date":"2013-08-14T17:47:41.025Z","type":"join"}
{"nick":"pachet","reason":"Quit: leaving","date":"2013-08-14T17:52:36.506Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #163 \u00037UNSTABLE\u000f windows (3/193) smartos (9/192) http://jenkins.nodejs.org/job/libuv-master/163/","date":"2013-08-14T17:54:02.942Z","type":"message"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-08-14T17:54:25.697Z","type":"quit"}
{"nick":"brson","date":"2013-08-14T17:54:39.548Z","type":"join"}
{"nick":"isaacs","message":"nice.  so, the one failing test at this point is the simple/test-domain-multi, because OutgoingMessage no longer lets you accidentally write invalid chunks.","date":"2013-08-14T17:57:11.392Z","type":"message"}
{"nick":"dominictarr","date":"2013-08-14T18:01:07.124Z","type":"join"}
{"nick":"mcavage","date":"2013-08-14T18:04:04.580Z","type":"join"}
{"nick":"isaacs","message":"so, the commits are a godawful mess, but if anyone wants to review the code, here it is: https://github.com/isaacs/node/compare/http-outgoing-refactor","date":"2013-08-14T18:06:25.954Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine, bnoordhuis ^","date":"2013-08-14T18:07:10.032Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #145 \u00037UNSTABLE\u000f osx-x64 (1/622) linux-x64 (1/622) linux-ia32 (2/622) smartos-ia32 (3/622) smartos-x64 (9/622) osx-ia32 (1/622) http://jenkins.nodejs.org/job/libuv-node-integration/145/","date":"2013-08-14T18:07:29.197Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-08-14T18:09:30.590Z","type":"quit"}
{"nick":"bnoordhuis","message":"isaacs: maybe tomorrow, it's been a pretty long day for me already","date":"2013-08-14T18:10:06.561Z","type":"message"}
{"nick":"bradleymeck","date":"2013-08-14T18:10:56.391Z","type":"join"}
{"nick":"isaacs","message":"bnoordhuis: sure.  i'll try to clean up the commit history this afternoon.","date":"2013-08-14T18:11:33.745Z","type":"message"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-08-14T18:11:52.747Z","type":"quit"}
{"nick":"isaacs","message":"bnoordhuis: the code is just kind of disorganized and terrible, so it's a bear of a patch no matter how you slice it.","date":"2013-08-14T18:11:56.332Z","type":"message"}
{"nick":"hz","date":"2013-08-14T18:12:05.339Z","type":"join"}
{"nick":"isaacs","message":"(i mean, the code that we have now.  the code that i wrote is only slightly disorganized, and modestly bad.)","date":"2013-08-14T18:12:11.795Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-14T18:14:01.511Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-14T18:14:48.641Z","type":"join"}
{"nick":"hz","reason":"Client Quit","date":"2013-08-14T18:16:00.544Z","type":"quit"}
{"nick":"pachet","date":"2013-08-14T18:23:52.404Z","type":"join"}
{"nick":"pachet","reason":"Changing host","date":"2013-08-14T18:23:59.442Z","type":"quit"}
{"nick":"pachet","date":"2013-08-14T18:23:59.704Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-14T18:26:25.966Z","type":"nick"}
{"nick":"trevnorris","message":"morning","date":"2013-08-14T18:28:26.925Z","type":"message"}
{"nick":"pachet","reason":"Read error: Connection reset by peer","date":"2013-08-14T18:28:29.962Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-14T18:29:01.650Z","type":"quit"}
{"nick":"isaacs","message":"interesting.  so, the benchmark is triggering a bunch of EPIPE errors.  must've missed a bug somewhere.","date":"2013-08-14T18:31:41.546Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-14T18:32:49.873Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-08-14T18:34:04.456Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 240 seconds","date":"2013-08-14T18:34:14.543Z","type":"quit"}
{"nick":"paulfryz_","date":"2013-08-14T18:38:07.068Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-14T18:38:13.557Z","type":"nick"}
{"nick":"isaacs","action":"&","date":"2013-08-14T18:40:54.446Z","type":"action"}
{"nick":"LOUDBOT","message":"ANYHOW I'LL REFRAIN FROM SPEAKING MUCH ON ##TURTLES TODAY, BUT I WILL BE HERE, SILENTLY WATCHING, WAITING FOR THE BEST COMICAL MOMENT TO TALK AND BE KICKED","date":"2013-08-14T18:40:54.783Z","type":"message"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2013-08-14T18:41:02.550Z","type":"quit"}
{"nick":"brson","date":"2013-08-14T18:41:31.122Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-14T18:43:31.867Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-14T18:45:39.099Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 245 seconds","date":"2013-08-14T18:45:50.123Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #218 \u00037UNSTABLE\u000f windows-x64 (18/622) windows-ia32 (19/622) http://jenkins.nodejs.org/job/nodejs-master-windows/218/","date":"2013-08-14T18:46:27.242Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-14T19:00:55.912Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-14T19:01:23.344Z","type":"join"}
{"nick":"AvianFlu","date":"2013-08-14T19:02:01.088Z","type":"join"}
{"nick":"mikeal","date":"2013-08-14T19:06:07.170Z","type":"join"}
{"nick":"pachet","date":"2013-08-14T19:06:29.218Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-14T19:11:24.721Z","type":"quit"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-08-14T19:27:14.657Z","type":"quit"}
{"nick":"sblom","reason":"Ping timeout: 245 seconds","date":"2013-08-14T19:29:35.135Z","type":"quit"}
{"nick":"trevnorris","message":"ircretary: tell bnoordhuis ping me when you get in. have a few changes you might want to incorporate into your multi-context branch","date":"2013-08-14T19:36:09.498Z","type":"message"}
{"nick":"ircretary","message":"trevnorris: I'll be sure to tell bnoordhuis","date":"2013-08-14T19:36:09.763Z","type":"message"}
{"nick":"groundwater","message":"does libuv catch all signals by default? or does one explicitly have to set a handler form the node layer?","date":"2013-08-14T19:41:00.625Z","type":"message"}
{"nick":"groundwater","message":"i am messing around with TTY stuff, and node appears to be ignoring SIGTTIN/SIGTTOU","date":"2013-08-14T19:41:36.926Z","type":"message"}
{"nick":"groundwater","message":"which causes an EIO exception when reading from the TTY","date":"2013-08-14T19:41:56.881Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-14T19:43:58.822Z","type":"quit"}
{"nick":"paulfryz_","reason":"Remote host closed the connection","date":"2013-08-14T19:53:23.403Z","type":"quit"}
{"nick":"dap","date":"2013-08-14T20:04:34.659Z","type":"join"}
{"nick":"spolu","reason":"Ping timeout: 264 seconds","date":"2013-08-14T20:14:30.272Z","type":"quit"}
{"nick":"Raynos","message":"Where's the current issue / branch / work on the new native add on C thing ?","date":"2013-08-14T20:19:21.507Z","type":"message"}
{"nick":"tjfontaine","message":"github.com/tjfontaine/node-addon-layer","date":"2013-08-14T20:20:03.169Z","type":"message"}
{"nick":"tjfontaine","message":"github.com/tjfontaine/node-addon-layer-test as an \"example\" of it at the moment","date":"2013-08-14T20:20:50.456Z","type":"message"}
{"nick":"tjfontaine","message":"Raynos: is that what you were looking for?","date":"2013-08-14T20:24:05.608Z","type":"message"}
{"nick":"Raynos","message":"Oh cool","date":"2013-08-14T20:24:13.437Z","type":"message"}
{"nick":"Raynos","message":"I think so.","date":"2013-08-14T20:25:36.421Z","type":"message"}
{"nick":"tjfontaine","message":"after some discussion with some C++ folk about my entry point that will be changing, but so far things have been going well","date":"2013-08-14T20:26:40.812Z","type":"message"}
{"nick":"brson","date":"2013-08-14T20:28:11.419Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-14T20:28:33.072Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: pong - i'm not really working though","date":"2013-08-14T20:30:50.827Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: that's fine. whenever you have time, there're a few things I'm doing for the new domain public api stuff that require ripping out some old code. just wanted to cross check with you so there was no unnecessary effort","date":"2013-08-14T20:32:15.506Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: okay, shoot","date":"2013-08-14T20:32:25.020Z","type":"message"}
{"nick":"trevnorris","message":"well, MakeDomainCallback and _tickDomainCallback are out","date":"2013-08-14T20:33:11.773Z","type":"message"}
{"nick":"bnoordhuis","message":"what replaces them (if anything)?","date":"2013-08-14T20:33:40.818Z","type":"message"}
{"nick":"trevnorris","message":"nothing. just did a little rework on the old ones to get them working.","date":"2013-08-14T20:34:33.327Z","type":"message"}
{"nick":"trevnorris","message":"but didn't introduce any overhead.","date":"2013-08-14T20:34:42.394Z","type":"message"}
{"nick":"trevnorris","message":"so instead of lazy loading _tickCallback i'm calling a function and passing it in.","date":"2013-08-14T20:34:57.520Z","type":"message"}
{"nick":"tjfontaine","message":"were we exporting MakeDomainCallback?","date":"2013-08-14T20:35:10.399Z","type":"message"}
{"nick":"trevnorris","message":"no","date":"2013-08-14T20:35:19.504Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: calling a function where (and where from, js or c++)?","date":"2013-08-14T20:35:38.269Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: just noticed you had the comment: \"Factor out call to has_tick_callback_function()\"","date":"2013-08-14T20:35:47.690Z","type":"message"}
{"nick":"trevnorris","message":"like how it's done with domains","date":"2013-08-14T20:35:56.962Z","type":"message"}
{"nick":"trevnorris","message":"process._setupDomainUse","date":"2013-08-14T20:36:01.881Z","type":"message"}
{"nick":"trevnorris","message":"there's no need to lazy load tickCallback since we know w/o question it'll always be needed","date":"2013-08-14T20:36:26.206Z","type":"message"}
{"nick":"bnoordhuis","message":"right","date":"2013-08-14T20:36:38.732Z","type":"message"}
{"nick":"trevnorris","message":"it's the best way I could figure to get it from js to c++, but if there's a better way i'm all ears","date":"2013-08-14T20:37:03.245Z","type":"message"}
{"nick":"bnoordhuis","message":"sounds good to me","date":"2013-08-14T20:37:49.828Z","type":"message"}
{"nick":"trevnorris","message":"cool. almost have it working on top of your patch","date":"2013-08-14T20:38:05.020Z","type":"message"}
{"nick":"trevnorris","message":"then the domain module will not require access to any of the core internals to work","date":"2013-08-14T20:38:38.837Z","type":"message"}
{"nick":"pachet","reason":"Quit: leaving","date":"2013-08-14T21:01:37.658Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-08-14T21:08:48.653Z","type":"quit"}
{"nick":"abraxas","date":"2013-08-14T21:09:05.522Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 256 seconds","date":"2013-08-14T21:13:52.359Z","type":"quit"}
{"nick":"bnoordhuis","message":"i am _seriously_ annoyed by the amount of duplication between the old and the new tls implementations","date":"2013-08-14T21:15:59.164Z","type":"message"}
{"nick":"mikeal","date":"2013-08-14T21:17:17.701Z","type":"join"}
{"nick":"isaacs","action":"fg","date":"2013-08-14T21:24:51.136Z","type":"action"}
{"nick":"isaacs","message":"bnoordhuis: i haven't looked into it much.  afaik, indutny just kinda shoved the old one into a corner, and rebuilt it","date":"2013-08-14T21:25:24.988Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: but if you wanna re-factor it so that they share some stuff, then that's fine.  there's probably better ways to spend your time, though","date":"2013-08-14T21:25:46.903Z","type":"message"}
{"nick":"bnoordhuis","message":"i opened an issue and fedor promised to look into it sometime soon","date":"2013-08-14T21:25:57.647Z","type":"message"}
{"nick":"bnoordhuis","message":"refactoring is not optional though. we're talking 1000+ lines of almost verbatim copied code","date":"2013-08-14T21:26:28.132Z","type":"message"}
{"nick":"bnoordhuis","message":"complex crypto code to boot","date":"2013-08-14T21:26:36.124Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-14T21:26:39.084Z","type":"quit"}
{"nick":"isaacs","message":"bnoordhuis: copied from JS to C++, you mean, or duplicates in teh same language?","date":"2013-08-14T21:30:59.328Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: same language","date":"2013-08-14T21:32:16.553Z","type":"message"}
{"nick":"bnoordhuis","message":"i.e. node_crypto.cc and tls_wrap.cc are like 50% identical","date":"2013-08-14T21:32:38.173Z","type":"message"}
{"nick":"bnoordhuis","message":"_tls_legacy.js and _tls_wrap.js share a lot of code as well","date":"2013-08-14T21:32:54.502Z","type":"message"}
{"nick":"bnoordhuis","message":"it's basically one big copy/paste job that was then massaged into something that works better with stream_wraps","date":"2013-08-14T21:33:22.806Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-14T21:34:22.033Z","type":"quit"}
{"nick":"philips","reason":"Ping timeout: 264 seconds","date":"2013-08-14T21:34:26.976Z","type":"quit"}
{"nick":"isaacs","message":"oh, ok","date":"2013-08-14T21:35:35.205Z","type":"message"}
{"nick":"isaacs","message":"yeah, that needs to be factored out, then","date":"2013-08-14T21:35:49.604Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2013-08-14T21:39:05.965Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I must say that it was originally your idea","date":"2013-08-14T21:39:25.476Z","type":"message"}
{"nick":"indutny","message":"though, I admit that deduplication is necessary","date":"2013-08-14T21:39:40.393Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: i can't imagine i suggested to just copy it","date":"2013-08-14T21:44:05.034Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: you doing anything with smartos.nodejs.org?","date":"2013-08-14T21:47:22.304Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: there's a pull request building on it atm","date":"2013-08-14T21:48:26.652Z","type":"message"}
{"nick":"mcavage","reason":"Remote host closed the connection","date":"2013-08-14T21:48:45.315Z","type":"quit"}
{"nick":"isaacs","message":"ok","date":"2013-08-14T21:49:15.985Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: would you like me to kill it? I can also follow up again here in office about making a baremetal reservation in the SF lab","date":"2013-08-14T21:49:59.839Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: you don't have to kill it, butit might go slowly","date":"2013-08-14T21:50:19.646Z","type":"message"}
{"nick":"tjfontaine","message":"that's fine","date":"2013-08-14T21:50:26.630Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: also, yes, a baremetal reservation would be wonderfu.","date":"2013-08-14T21:50:26.887Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: i'm testign http, so it's not so bad.  fs is the real killer.","date":"2013-08-14T21:50:39.030Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-08-14T21:50:43.297Z","type":"message"}
{"nick":"philips","date":"2013-08-14T21:52:18.681Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002dce02a1\u0002 : zlib: replace C cast with static_cast - http://git.io/khAXnw","date":"2013-08-14T21:52:24.407Z","type":"message"}
{"nick":"bnoordhuis","message":"https://github.com/v8/v8/pull/10 <- wow","date":"2013-08-14T21:54:04.938Z","type":"message"}
{"nick":"c4milo","date":"2013-08-14T21:56:54.689Z","type":"join"}
{"nick":"rendar","reason":"Quit: Leaving","date":"2013-08-14T22:03:43.810Z","type":"quit"}
{"nick":"isaacs","message":"ok, need to back this out and try a different path, i think","date":"2013-08-14T22:04:07.638Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #422 \u00037UNSTABLE\u000f linux-x64 (4/622) linux-ia32 (6/622) smartos-ia32 (3/622) osx-ia32 (2/622) osx-x64 (2/622) smartos-x64 (8/622) http://jenkins.nodejs.org/job/nodejs-master/422/","date":"2013-08-14T22:07:00.654Z","type":"message"}
{"nick":"isaacs","message":"my hope was to simplify the organization and logic by making http.OutgoingMessage a fully first-class stream.Writable subclass.","date":"2013-08-14T22:07:05.669Z","type":"message"}
{"nick":"isaacs","message":"rather than justa facade around a net.Socket","date":"2013-08-14T22:07:12.157Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: i'm at a loss figuring out what that massive change set does","date":"2013-08-14T22:07:15.167Z","type":"message"}
{"nick":"tjfontaine","message":"right","date":"2013-08-14T22:07:15.438Z","type":"message"}
{"nick":"isaacs","message":"since, after all, we end up duplicating some of teh functionality and such anyway","date":"2013-08-14T22:07:29.116Z","type":"message"}
{"nick":"isaacs","message":"however, turns out, that's just too much JS object stuff being passed around and intialized andshit","date":"2013-08-14T22:07:44.093Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: port of v8 to http://en.wikipedia.org/wiki/ARM_architecture#Thumb","date":"2013-08-14T22:08:04.233Z","type":"message"}
{"nick":"isaacs","message":"there's no one spot where we're spending all our time.  just more of all the same stuff.","date":"2013-08-14T22:08:22.369Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: hm, do we need to profile it?","date":"2013-08-14T22:08:25.981Z","type":"message"}
{"nick":"tjfontaine","message":"oh","date":"2013-08-14T22:08:32.120Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: i'm profiling it","date":"2013-08-14T22:08:33.560Z","type":"message"}
{"nick":"tjfontaine","message":"k","date":"2013-08-14T22:08:36.077Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok. just the title \"thumb backend\" gave me a strange visual","date":"2013-08-14T22:08:50.799Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: it makes everything better","date":"2013-08-14T22:09:03.846Z","type":"message"}
{"nick":"bnoordhuis","message":"with more unicorn","date":"2013-08-14T22:09:07.445Z","type":"message"}
{"nick":"trevnorris","message":"I LOVE UNICORNS!!!","date":"2013-08-14T22:09:21.317Z","type":"message"}
{"nick":"LOUDBOT","message":"FUCK YOU MOFINO YOU'RE NOT MY BRO ANYMORE","date":"2013-08-14T22:09:21.893Z","type":"message"}
{"nick":"bnoordhuis","message":"also, it moves globals into per-thread or per-context structures","date":"2013-08-14T22:09:39.276Z","type":"message"}
{"nick":"trevnorris","message":"ah, don't be like that LOUDBOT","date":"2013-08-14T22:09:44.310Z","type":"message"}
{"nick":"isaacs","message":"LOUDBOT: you know trevnorris loves you.","date":"2013-08-14T22:09:56.091Z","type":"message"}
{"nick":"LOUDBOT","message":"isaacs: IF I CAN GET HIM TO COME OUT OF THE FUCKING CLOSET","date":"2013-08-14T22:09:56.415Z","type":"message"}
{"nick":"isaacs","message":"LOUDBOT: srsly","date":"2013-08-14T22:10:02.435Z","type":"message"}
{"nick":"LOUDBOT","message":"isaacs: I HAVE ABSORBED ALL OF THE CUTE AND NOW I HUNGER","date":"2013-08-14T22:10:02.973Z","type":"message"}
{"nick":"bnoordhuis","message":"haha","date":"2013-08-14T22:10:04.189Z","type":"message"}
{"nick":"indexzero","date":"2013-08-14T22:11:04.507Z","type":"join"}
{"nick":"felixge","reason":"Quit: felixge","date":"2013-08-14T22:12:08.292Z","type":"quit"}
{"nick":"DrPizza","reason":"Ping timeout: 276 seconds","date":"2013-08-14T22:12:11.428Z","type":"quit"}
{"nick":"DrPizza","date":"2013-08-14T22:12:17.945Z","type":"join"}
{"nick":"isaacs","message":"ok.  i guess making http.OutgoingMessage a less-bad facade around net.Socket will have to do.","date":"2013-08-14T22:12:41.834Z","type":"message"}
{"nick":"isaacs","message":"a first-class Writable, it is not.","date":"2013-08-14T22:12:46.550Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-14T22:14:11.779Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #219 \u00037UNSTABLE\u000f windows-x64 (19/622) windows-ia32 (24/622) http://jenkins.nodejs.org/job/nodejs-master-windows/219/","date":"2013-08-14T22:19:36.883Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: in all seriousness, if you have questions, don't hesitate to ask","date":"2013-08-14T22:20:33.098Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: you mean about the PR? maybe after i've pulled my brain out of this domain api i'll have brain cells to spare :)","date":"2013-08-14T22:21:37.635Z","type":"message"}
{"nick":"stagas_","date":"2013-08-14T22:22:48.603Z","type":"join"}
{"nick":"trevnorris","message":"actually, just realized haven't left my chair in around 6 hours and I really need to pee","date":"2013-08-14T22:22:55.514Z","type":"message"}
{"nick":"stagas","reason":"Ping timeout: 245 seconds","date":"2013-08-14T22:24:35.153Z","type":"quit"}
{"nick":"stagas_","new_nick":"stagas","date":"2013-08-14T22:24:43.087Z","type":"nick"}
{"nick":"stagas","reason":"Ping timeout: 264 seconds","date":"2013-08-14T22:31:40.413Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-14T22:32:05.030Z","type":"quit"}
{"nick":"stagas","date":"2013-08-14T22:33:27.226Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-08-14T22:35:50.596Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-14T22:35:51.815Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 268 seconds","date":"2013-08-14T22:41:18.115Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-14T22:44:23.819Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-14T22:49:15.810Z","type":"quit"}
{"nick":"trevnorris","message":"maybe there should be a mailing list for everyone who uses node, that doesn't want it to look like node.","date":"2013-08-14T23:01:58.633Z","type":"message"}
{"nick":"tjfontaine","message":"that's HN ;)","date":"2013-08-14T23:02:25.557Z","type":"message"}
{"nick":"trevnorris","message":"hah","date":"2013-08-14T23:02:40.315Z","type":"message"}
{"nick":"abraxas","date":"2013-08-14T23:09:23.114Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 268 seconds","date":"2013-08-14T23:13:59.080Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-14T23:16:30.704Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-14T23:17:38.106Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-14T23:20:11.429Z","type":"quit"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-08-14T23:42:59.366Z","type":"quit"}
