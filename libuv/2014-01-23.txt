{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-01-23T00:00:01.181Z","type":"quit"}
{"nick":"ircretary","date":"2014-01-23T00:00:09.266Z","type":"join"}
{"nick":"trevnorris","message":"groundwater: so, all you're saying there is that you want to know when a new event is created?","date":"2014-01-23T00:00:33.023Z","type":"message"}
{"nick":"trevnorris","message":"and know just before a callback is fired?","date":"2014-01-23T00:00:46.597Z","type":"message"}
{"nick":"trevnorris","message":"man. this is so freakishly simple compared to getting AL to automatically continue its context chain.","date":"2014-01-23T00:01:57.163Z","type":"message"}
{"nick":"groundwater","message":"trevnorris basically, also there are after events","date":"2014-01-23T00:02:07.961Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2014-01-23T00:02:22.111Z","type":"quit"}
{"nick":"trevnorris","message":"yeah, and error, right?","date":"2014-01-23T00:02:37.033Z","type":"message"}
{"nick":"groundwater","message":"trevnorris i forget what we were thinking for errors, i'd double check with the notorious tjfontaine ","date":"2014-01-23T00:03:13.994Z","type":"message"}
{"nick":"trevnorris","message":"but anyways. it's possible that, say an event happens before the EVENT_CREATE is turned on. then context._continuation wouldn't exist when EVENT_BEFORE fires","date":"2014-01-23T00:03:25.051Z","type":"message"}
{"nick":"trevnorris","message":"groundwater / tjfontaine: is there a rough document about what the current API is?","date":"2014-01-23T00:04:59.368Z","type":"message"}
{"nick":"tjfontaine","message":"not a document, so much as lib/tracing.js","date":"2014-01-23T00:05:22.398Z","type":"message"}
{"nick":"trevnorris","message":"ok","date":"2014-01-23T00:05:28.775Z","type":"message"}
{"nick":"tjfontaine","message":"so I'm finishing up here, and will be able to catch up and do the fucking releases :/","date":"2014-01-23T00:05:44.645Z","type":"message"}
{"nick":"tjfontaine","message":"after I get the releases out I'll get a PR with lib/tracing.js that includes ben's v8 work","date":"2014-01-23T00:06:02.225Z","type":"message"}
{"nick":"tjfontaine","message":"jsut that work","date":"2014-01-23T00:06:05.570Z","type":"message"}
{"nick":"tjfontaine","message":"and you can rubberstamp that","date":"2014-01-23T00:06:11.871Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: i'm sorry dude. seriously feel like 30% of your time is for coding. the rest is for everything else that I'd hate to touch :P","date":"2014-01-23T00:06:16.577Z","type":"message"}
{"nick":"tjfontaine","message":"and we can get you to move AL to that interface","date":"2014-01-23T00:06:19.785Z","type":"message"}
{"nick":"trevnorris","message":"now that my head is wrapping around this more we need to have more of a discussion","date":"2014-01-23T00:06:44.300Z","type":"message"}
{"nick":"tjfontaine","message":"ok, discussions can be had, do you want to do in virtual or meat space","date":"2014-01-23T00:07:03.829Z","type":"message"}
{"nick":"trevnorris","message":"hm... this might be hard. thursday i'm in meetings all afternoon. friday i get lasik in the morning.","date":"2014-01-23T00:07:40.799Z","type":"message"}
{"nick":"trevnorris","message":"then the following week i'm at netflix.","date":"2014-01-23T00:07:56.198Z","type":"message"}
{"nick":"tjfontaine","message":"will you be able to discuss this weekend?","date":"2014-01-23T00:08:12.515Z","type":"message"}
{"nick":"trevnorris","message":"still won't be able to drive from the lasik","date":"2014-01-23T00:08:28.157Z","type":"message"}
{"nick":"tjfontaine","message":"but we can do a hangout/skype","date":"2014-01-23T00:08:49.693Z","type":"message"}
{"nick":"trevnorris","message":"the gist of it is, i had in my head that these tracing probes would work like AL, where they continue on the async execution chain","date":"2014-01-23T00:09:10.143Z","type":"message"}
{"nick":"trevnorris","message":"but groundwater told me they're mot like a switch that you turn on and off","date":"2014-01-23T00:09:21.123Z","type":"message"}
{"nick":"trevnorris","message":"is that right?","date":"2014-01-23T00:09:25.420Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: in your script I see .onAsync(), but that method doesn't exist in lib/tracing.js","date":"2014-01-23T00:10:56.963Z","type":"message"}
{"nick":"trevnorris","message":"i'm confused, :(","date":"2014-01-23T00:11:02.585Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: so, yeah, are probes things that you just switch on and get alerted by, then switch off and stop getting alerts?","date":"2014-01-23T00:11:44.004Z","type":"message"}
{"nick":"groundwater","message":"trevnorris that script worked against the commit hash i pasted to you","date":"2014-01-23T00:11:48.903Z","type":"message"}
{"nick":"trevnorris","message":"erm probes meaning tracing as a whole","date":"2014-01-23T00:11:55.100Z","type":"message"}
{"nick":"trevnorris","message":"ah ok","date":"2014-01-23T00:11:59.280Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: so not against https://github.com/joyent/node/pull/5940","date":"2014-01-23T00:12:10.531Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/joyent/node/pull/5940/files#diff-d057cd3202b378894d5ae0ba345d537dR234","date":"2014-01-23T00:12:34.410Z","type":"message"}
{"nick":"trevnorris","message":"coolio","date":"2014-01-23T00:12:49.179Z","type":"message"}
{"nick":"trevnorris","message":"oh. wait. ok.","date":"2014-01-23T00:12:57.287Z","type":"message"}
{"nick":"trevnorris","message":"i'm looking at the first of your two commits","date":"2014-01-23T00:13:03.971Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2014-01-23T00:13:04.796Z","type":"message"}
{"nick":"tjfontaine","message":"right","date":"2014-01-23T00:13:11.164Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: anyways. is that how those tracers are going to work?","date":"2014-01-23T00:13:17.563Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 240 seconds","date":"2014-01-23T00:13:26.665Z","type":"quit"}
{"nick":"tjfontaine","message":"so we're in bikeshed area, these two apis are not incompatible fwiw","date":"2014-01-23T00:13:27.424Z","type":"message"}
{"nick":"tjfontaine","message":"they just need to twiddle the same flags for when providers/probes/events fire","date":"2014-01-23T00:13:52.190Z","type":"message"}
{"nick":"trevnorris","message":"yeah. i'm just getting a flurry of pure awesomeness. haven't felt like this in a while.","date":"2014-01-23T00:14:04.826Z","type":"message"}
{"nick":"tjfontaine","message":"I'm glad I guess :)","date":"2014-01-23T00:14:37.675Z","type":"message"}
{"nick":"groundwater","message":"the probes have a very tight scope","date":"2014-01-23T00:14:44.620Z","type":"message"}
{"nick":"trevnorris","message":"so. giving users the ability to say, hey I want to know when X happens starting now, and ending now","date":"2014-01-23T00:14:53.741Z","type":"message"}
{"nick":"trevnorris","message":"it'll be so freakin easy","date":"2014-01-23T00:15:02.072Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: so, i'm going to ask that you create lib/tracing.js with only ben's work included.","date":"2014-01-23T00:17:21.782Z","type":"message"}
{"nick":"tjfontaine","message":"yes I started on that last night","date":"2014-01-23T00:17:36.854Z","type":"message"}
{"nick":"trevnorris","message":"but seriously. this will be so awesome i'm feeling giddy.","date":"2014-01-23T00:17:39.147Z","type":"message"}
{"nick":"trevnorris","message":"ok cool.","date":"2014-01-23T00:17:42.746Z","type":"message"}
{"nick":"trevnorris","message":"there are like dozens of things I want to spew out about what could be done.","date":"2014-01-23T00:18:13.845Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: ok. so... help me understand what's going on inside of node_dtrace, why it matters, how it's used, etc.","date":"2014-01-23T00:19:55.335Z","type":"message"}
{"nick":"brson","date":"2014-01-23T00:20:33.896Z","type":"join"}
{"nick":"tjfontaine","message":"it's basically going ot be compiled for all platforms, but they'll be noops, and it will be trivial to make they never jump to it from js","date":"2014-01-23T00:20:38.769Z","type":"message"}
{"nick":"tjfontaine","message":"we basically need that on platforms where dtrace/etw/systemtap is available so those static probes will fire","date":"2014-01-23T00:21:34.325Z","type":"message"}
{"nick":"tjkrusinski","date":"2014-01-23T00:22:23.837Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: i mean. I see things like DTRACE_NET_STREAM_END, right? so all it's doing is telling c++ when something in js happens. correct?","date":"2014-01-23T00:23:37.500Z","type":"message"}
{"nick":"daviddias","date":"2014-01-23T00:24:28.195Z","type":"join"}
{"nick":"tjfontaine","message":"ok, so these are static probes that we fire in js","date":"2014-01-23T00:25:20.400Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: heck. want to chat right now?","date":"2014-01-23T00:25:32.448Z","type":"message"}
{"nick":"tjfontaine","message":"I can't right this second, hang on other channel","date":"2014-01-23T00:25:47.718Z","type":"message"}
{"nick":"trevnorris","message":"cool","date":"2014-01-23T00:25:54.874Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: this is going to sound absurd, but a noop call to c++ is pretty much free. i mean, sub 10 ns call.","date":"2014-01-23T00:26:53.675Z","type":"message"}
{"nick":"trevnorris","message":"so, in macro terms, it's pretty much free","date":"2014-01-23T00:27:06.882Z","type":"message"}
{"nick":"tjfontaine","message":"good then I won't do anything to remove that? :)","date":"2014-01-23T00:27:09.072Z","type":"message"}
{"nick":"trevnorris","message":"it all depends on how data is communicated.","date":"2014-01-23T00:27:25.507Z","type":"message"}
{"nick":"mikolalysenko","date":"2014-01-23T00:27:57.405Z","type":"join"}
{"nick":"tjfontaine","message":"so the flow is (as refactored) js -> c++ -> if enabled -> js to marshal arguments (where we have more state and easier access) ... return value used for systemtap/etw/dtrace","date":"2014-01-23T00:28:10.601Z","type":"message"}
{"nick":"daviddias","reason":"Ping timeout: 245 seconds","date":"2014-01-23T00:28:53.069Z","type":"quit"}
{"nick":"trevnorris","message":"but that's if the call is from js. in the case of MakeCallback then the path could be different.","date":"2014-01-23T00:29:42.331Z","type":"message"}
{"nick":"tjfontaine","message":"I'm not able to give you my full cycles righ tnow, but I'm confused why makecallback has anything to do with it","date":"2014-01-23T00:30:10.065Z","type":"message"}
{"nick":"tjfontaine","message":"it's using Function::Call directly","date":"2014-01-23T00:30:15.976Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: also, say we want to know when the server connection is closed. do we use the current, and imo incorrect, way of triggering that before it's actually closed, or do we wait for libuv close callback return?","date":"2014-01-23T00:30:23.254Z","type":"message"}
{"nick":"tjfontaine","message":"we should discuss it, I am open to libuv close cb","date":"2014-01-23T00:30:51.806Z","type":"message"}
{"nick":"zz_karupanerura","new_nick":"karupanerura","date":"2014-01-23T00:31:15.482Z","type":"nick"}
{"nick":"tjfontaine","message":"we should not conflate AL and our static probes though in our conversation at the moment","date":"2014-01-23T00:31:17.455Z","type":"message"}
{"nick":"trevnorris","message":"yeah. forget AL","date":"2014-01-23T00:31:27.132Z","type":"message"}
{"nick":"tjfontaine","message":"our static probes are surgical pieces we can sprinkle throughout our code","date":"2014-01-23T00:31:46.983Z","type":"message"}
{"nick":"trevnorris","message":"i'm only thinking about the implementation details that pertain to AL that relate to the same parts","date":"2014-01-23T00:31:48.059Z","type":"message"}
{"nick":"trevnorris","message":"pseudo code here:","date":"2014-01-23T00:32:30.115Z","type":"message"}
{"nick":"trevnorris","message":"require('tracing').on('tcp', 'write', ...); I assume we want to trigger that on the #write() JS function. not when the callback is about to go out.","date":"2014-01-23T00:36:00.586Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: feel free to chime in. :)","date":"2014-01-23T00:36:12.384Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: but see that's my point you're conflating static probes and al","date":"2014-01-23T00:36:40.508Z","type":"message"}
{"nick":"tjfontaine","message":"and why I called it provider_tcpwrap","date":"2014-01-23T00:36:48.991Z","type":"message"}
{"nick":"groundwater","message":"trevnorris: i think while eventually we may merge the AL probes with teh static probes, we should keep them separate for now","date":"2014-01-23T00:36:49.263Z","type":"message"}
{"nick":"tjfontaine","message":"and on_write","date":"2014-01-23T00:36:51.968Z","type":"message"}
{"nick":"groundwater","message":"static probes should just fire wherever they're currently firing, on stack","date":"2014-01-23T00:37:08.658Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: no. i'm not confusing them. the static probe fires when the js function itself occurs. AL only fires when an async object is created, or when the return callback is about to be fires","date":"2014-01-23T00:37:56.486Z","type":"message"}
{"nick":"trevnorris","message":"*fired","date":"2014-01-23T00:37:58.559Z","type":"message"}
{"nick":"trevnorris","message":"AL doesn't give the ability to tell me that a specific method in TCP#* is being called","date":"2014-01-23T00:38:27.162Z","type":"message"}
{"nick":"trevnorris","message":"so I get the two main differences between the two. which are:","date":"2014-01-23T00:39:44.586Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 272 seconds","date":"2014-01-23T00:39:47.934Z","type":"quit"}
{"nick":"trevnorris","message":"1) probes are toggled while AL encapsulates an execution chain","date":"2014-01-23T00:40:05.911Z","type":"message"}
{"nick":"trevnorris","message":"2) probes let me know when some mechanism of what i'm watching is about to fire, while AL only lets me know when it's been created, or when it's done (e.g. when the return callback is about to fire, etc.)","date":"2014-01-23T00:41:00.724Z","type":"message"}
{"nick":"trevnorris","message":"and you can replace probes with tracing","date":"2014-01-23T00:41:15.004Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: take your examples. if you were to, tracing.onAsync('TCP', '*', 'EVENT_CREATE', ...) there are still a bunch of internal mechanisms that have to fire to keep the execution chain alive","date":"2014-01-23T00:42:57.735Z","type":"message"}
{"nick":"groundwater","message":"trevnorris the probes don't have to keep track, i handle that myself","date":"2014-01-23T00:43:35.379Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: while just tracing.on('TCP', '*', ...) doesn't have to do squat internally other than check a few flags, because once it's off, it's off.","date":"2014-01-23T00:43:42.647Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2014-01-23T00:43:45.241Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: wait, how do you mean, you'll handle that yourself?","date":"2014-01-23T00:44:19.502Z","type":"message"}
{"nick":"groundwater","message":"the async probe has no concept of what execution chain it's in, it just fires always or never","date":"2014-01-23T00:45:12.360Z","type":"message"}
{"nick":"trevnorris","message":"do you mean w/ the syntax you currently have in your script?","date":"2014-01-23T00:45:45.444Z","type":"message"}
{"nick":"mikolalysenko","date":"2014-01-23T00:45:56.810Z","type":"join"}
{"nick":"groundwater","message":"well, i mean a specific probe will either always fire, or never fire","date":"2014-01-23T00:46:03.488Z","type":"message"}
{"nick":"groundwater","message":"it does not depend on what execution chain it's in","date":"2014-01-23T00:46:13.663Z","type":"message"}
{"nick":"groundwater","message":"probes are context free","date":"2014-01-23T00:46:19.356Z","type":"message"}
{"nick":"trevnorris","message":"yeah, I got that. :)","date":"2014-01-23T00:46:29.220Z","type":"message"}
{"nick":"groundwater","message":"cool, just treading carefully","date":"2014-01-23T00:46:46.022Z","type":"message"}
{"nick":"groundwater","message":"what's next?","date":"2014-01-23T00:46:51.823Z","type":"message"}
{"nick":"trevnorris","message":"i'm writing up an example script to show what i'm talking about for an AL specific, and how it differs from probes","date":"2014-01-23T00:47:16.081Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: do you have an example using tracing.on() ?","date":"2014-01-23T00:48:25.855Z","type":"message"}
{"nick":"groundwater","message":"trevnorris tracing.on() is just for static probes","date":"2014-01-23T00:48:39.280Z","type":"message"}
{"nick":"groundwater","message":"dtrace stuff","date":"2014-01-23T00:48:44.135Z","type":"message"}
{"nick":"trevnorris","message":"yes, I know. :)","date":"2014-01-23T00:48:48.694Z","type":"message"}
{"nick":"groundwater","message":"okay, no i don't have an example","date":"2014-01-23T00:48:56.387Z","type":"message"}
{"nick":"trevnorris","message":"ok","date":"2014-01-23T00:49:00.426Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: here: https://gist.github.com/trevnorris/8570711","date":"2014-01-23T00:54:15.241Z","type":"message"}
{"nick":"trevnorris","message":"let me know if that doesn't make sense.","date":"2014-01-23T00:54:27.251Z","type":"message"}
{"nick":"groundwater","message":"trevnorris so, the create callback should fire once in that example","date":"2014-01-23T00:56:17.845Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: crap. I forgot to have the server actually listen on a port","date":"2014-01-23T00:56:41.707Z","type":"message"}
{"nick":"groundwater","message":"oh, even if server is listening and picking up connections","date":"2014-01-23T00:56:59.732Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: then say, I receive N connections, the setImmediate inside the connection callback will also fire","date":"2014-01-23T00:57:03.028Z","type":"message"}
{"nick":"groundwater","message":"once the timer is removed, it never fires","date":"2014-01-23T00:57:08.666Z","type":"message"}
{"nick":"groundwater","message":"trevnorris no, it should never fire again after tracing.removeAsync(al)","date":"2014-01-23T00:57:30.475Z","type":"message"}
{"nick":"trevnorris","message":"yes. it should. hence why I used .onAsync() and not just .on()","date":"2014-01-23T00:57:48.129Z","type":"message"}
{"nick":"groundwater","message":"addAsyncListener(...) behaves that way, but the probes don't","date":"2014-01-23T00:58:33.161Z","type":"message"}
{"nick":"groundwater","message":"even the onAsync(...) probes","date":"2014-01-23T00:58:43.780Z","type":"message"}
{"nick":"trevnorris","message":"ok... there's a disconnect. so let's go back and review to make sure we're both on the same page.","date":"2014-01-23T00:59:25.479Z","type":"message"}
{"nick":"trevnorris","message":"man this stuff is confusing and all meta","date":"2014-01-23T00:59:32.130Z","type":"message"}
{"nick":"groundwater","message":"sure","date":"2014-01-23T00:59:46.103Z","type":"message"}
{"nick":"trevnorris","message":"there are \"PROVIDERS\" (e.g. tcp, upd, timers)","date":"2014-01-23T01:00:32.723Z","type":"message"}
{"nick":"trevnorris","message":"there are \"EVENTS\" (e.g. create, before, after)","date":"2014-01-23T01:00:32.858Z","type":"message"}
{"nick":"trevnorris","message":"there are \"PROBES\" (e.g. write, read, shutdown)","date":"2014-01-23T01:00:32.980Z","type":"message"}
{"nick":"mcavage_","date":"2014-01-23T01:01:09.249Z","type":"join"}
{"nick":"trevnorris","message":"what i'm talking about is folding the process.*AsyncListener API into this. it solves a problem that i've been aware of since day 1","date":"2014-01-23T01:01:30.400Z","type":"message"}
{"nick":"mcavage","reason":"Read error: Connection reset by peer","date":"2014-01-23T01:02:08.778Z","type":"quit"}
{"nick":"trevnorris","message":"AsyncListeners are only aware of PROVIDERS and EVENTS. It couldn't care about PROBES.","date":"2014-01-23T01:02:17.309Z","type":"message"}
{"nick":"kazupon","date":"2014-01-23T01:02:28.348Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 272 seconds","date":"2014-01-23T01:02:51.731Z","type":"quit"}
{"nick":"trevnorris","message":"one API that AsyncListeners are missing, and a part that I've always wanted in, is the ability to select which callback is fired for which PROVIDER in an execution chain.","date":"2014-01-23T01:03:01.234Z","type":"message"}
{"nick":"tjfontaine","message":"sure","date":"2014-01-23T01:03:13.406Z","type":"message"}
{"nick":"tjfontaine","message":"certainly","date":"2014-01-23T01:03:17.874Z","type":"message"}
{"nick":"tjfontaine","message":"I'd like to keep AL focused on the C++ / JS transition, and fill in gaps with static probes where those probes don't fit for people writing monitoring agents","date":"2014-01-23T01:04:01.395Z","type":"message"}
{"nick":"tjfontaine","message":"as a pure hypothetical situation","date":"2014-01-23T01:04:06.929Z","type":"message"}
{"nick":"trevnorris","message":"so, in my mind, we can remove the process.*AsyncListener() API completely, and replace it w/ tracing.onAsync(<PROVIDER>, <EVENT>, callback)","date":"2014-01-23T01:04:11.879Z","type":"message"}
{"nick":"tjfontaine","message":"I liek that idea, except you want _CREATE and _ERROR return values to mean something, so it's an interesting part of the bikeshed","date":"2014-01-23T01:04:52.531Z","type":"message"}
{"nick":"tjfontaine","message":"what about the implementaton of .removeAL such taht paths aren't watched, if we go this route you don't have that context?","date":"2014-01-23T01:05:17.877Z","type":"message"}
{"nick":"trevnorris","message":"real quick. does \"bikeshed\" just mean to shoot around different ideas?","date":"2014-01-23T01:05:28.195Z","type":"message"}
{"nick":"trevnorris","message":"or does it mean something more than that?","date":"2014-01-23T01:05:34.583Z","type":"message"}
{"nick":"tjfontaine","message":"it means we all get to argue over the color we want to paint the bikeshed","date":"2014-01-23T01:06:03.115Z","type":"message"}
{"nick":"trevnorris","message":"haha. ok. got it. :)","date":"2014-01-23T01:06:11.266Z","type":"message"}
{"nick":"tjfontaine","message":"some of these questions are more like: \"should we build the bikeshed\"","date":"2014-01-23T01:06:16.653Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: ok. check this gist: https://gist.github.com/trevnorris/8570711","date":"2014-01-23T01:06:32.203Z","type":"message"}
{"nick":"trevnorris","message":"my color of the bikeshed should be that onAsync() still returns an AsyncListener, and even if you remove it then it'll continue to fire withing the wrapped execution chain.","date":"2014-01-23T01:07:18.973Z","type":"message"}
{"nick":"tjfontaine","message":"hrm","date":"2014-01-23T01:07:36.226Z","type":"message"}
{"nick":"trevnorris","message":"then leave the probe stuff to tracing.on()","date":"2014-01-23T01:08:08.451Z","type":"message"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2014-01-23T01:08:26.384Z","type":"quit"}
{"nick":"trevnorris","message":"i mean. technically, \"create\" could still be considered a \"probe\" right?","date":"2014-01-23T01:08:33.673Z","type":"message"}
{"nick":"groundwater","message":"my suggestion is to just add two versions, and figure out which we like better over time","date":"2014-01-23T01:08:37.370Z","type":"message"}
{"nick":"groundwater","message":"but i'm not implementing, nor am i the maintainer","date":"2014-01-23T01:08:44.726Z","type":"message"}
{"nick":"tjfontaine","message":"I'm not opposed to some of this","date":"2014-01-23T01:10:20.338Z","type":"message"}
{"nick":"groundwater","message":"yah i'll totally defer to ya'll here","date":"2014-01-23T01:11:16.145Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-01-23T01:12:08.804Z","type":"quit"}
{"nick":"kazupon","date":"2014-01-23T01:12:15.241Z","type":"join"}
{"nick":"trevnorris","message":"i know othiym23 would hate me, but i'm totally fine removing process.*AsyncListener(). it does sort of feel strange there.","date":"2014-01-23T01:12:33.482Z","type":"message"}
{"nick":"kellabyte","date":"2014-01-23T01:12:47.207Z","type":"join"}
{"nick":"kellabyte","reason":"Changing host","date":"2014-01-23T01:13:03.209Z","type":"quit"}
{"nick":"kellabyte","date":"2014-01-23T01:13:03.331Z","type":"join"}
{"nick":"kellabyte","reason":"Changing host","date":"2014-01-23T01:13:03.331Z","type":"quit"}
{"nick":"kellabyte","date":"2014-01-23T01:13:03.331Z","type":"join"}
{"nick":"othiym23","message":"my assumption was that it was going to move to tracing.*AsyncListener() for 0.12","date":"2014-01-23T01:13:12.052Z","type":"message"}
{"nick":"tjfontaine","message":"there may be some tweaks to what it looks liek is all","date":"2014-01-23T01:13:28.925Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: anyways. i'll do some sort of writeup about it all. there are several points that keep getting confused.","date":"2014-01-23T01:13:39.243Z","type":"message"}
{"nick":"tjfontaine","message":"ok","date":"2014-01-23T01:13:47.408Z","type":"message"}
{"nick":"tjfontaine","message":"you can email team@ I'd prefer that to gist, because I never get notified of that nonsense","date":"2014-01-23T01:14:00.165Z","type":"message"}
{"nick":"tjfontaine","message":"absolutely use gist for code examples though :)","date":"2014-01-23T01:14:10.258Z","type":"message"}
{"nick":"trevnorris","message":"heh, ok :)","date":"2014-01-23T01:14:14.753Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: seems the biggest thing is where the module \"tracing\" draws the line with its \"probes\"","date":"2014-01-23T01:14:49.391Z","type":"message"}
{"nick":"c4milo_","reason":"Remote host closed the connection","date":"2014-01-23T01:15:02.137Z","type":"quit"}
{"nick":"trevnorris","message":"imo it gets complicated because triggering on the js side to some c++ thing can lead to incorrect results.","date":"2014-01-23T01:15:43.704Z","type":"message"}
{"nick":"trevnorris","message":"e.g. closing a fd, where in js we trigger that it's been closed even though libuv hasn't had a chance to finish that operation.","date":"2014-01-23T01:16:17.367Z","type":"message"}
{"nick":"groundwater","message":"tjfontaine trevnorris can you cc jacob/forrest@newrelic.com","date":"2014-01-23T01:16:35.271Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: so, if we just want to alert that some js function is running, then cool. but if we want some sort of accuracy in these then we'll have to bring down the level of abstraction.","date":"2014-01-23T01:17:03.074Z","type":"message"}
{"nick":"Ralith","message":"vigith: pre-existing heap corruption","date":"2014-01-23T01:17:04.488Z","type":"message"}
{"nick":"trevnorris","message":"groundwater: sure","date":"2014-01-23T01:17:10.973Z","type":"message"}
{"nick":"Ralith","message":"oh wow I was way scrolled up","date":"2014-01-23T01:17:12.317Z","type":"message"}
{"nick":"daviddias","date":"2014-01-23T01:19:07.676Z","type":"join"}
{"nick":"c4milo_","date":"2014-01-23T01:19:16.346Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: final, and almost unrelated, thing. I don't like a lot of the de-macro-ification that's happened. e.g. utils.Is*() is useless to me in hot code paths. I hardly ever use it.","date":"2014-01-23T01:21:02.478Z","type":"message"}
{"nick":"trevnorris","message":"imo macro-like things in js are fine and every time I write util.IsUndefiend() I throw-up a little.","date":"2014-01-23T01:22:02.640Z","type":"message"}
{"nick":"groundwater","message":"i've gotta head out! ttyl","date":"2014-01-23T01:22:29.932Z","type":"message"}
{"nick":"trevnorris","message":"see ya, and thanks :)","date":"2014-01-23T01:22:37.891Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: it also prevent me from doing the ToUint32() that I've had in my repo for months because that cost is ridiculous vs just doing x = x >>> 0; inline","date":"2014-01-23T01:23:12.734Z","type":"message"}
{"nick":"daviddias","reason":"Ping timeout: 240 seconds","date":"2014-01-23T01:23:26.557Z","type":"quit"}
{"nick":"trevnorris","message":"anyways. all I have for now. i'll get the rest written up w/ code examples. and i'll be looking for your tracing patch that includes ben's work. will be fun to mess around w/ that stuff.","date":"2014-01-23T01:24:08.533Z","type":"message"}
{"nick":"kazupon_","date":"2014-01-23T01:24:22.372Z","type":"join"}
{"nick":"kazupon__","date":"2014-01-23T01:26:38.281Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2014-01-23T01:27:40.586Z","type":"quit"}
{"nick":"kazupon_","reason":"Ping timeout: 245 seconds","date":"2014-01-23T01:28:45.145Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-01-23T01:29:45.219Z","type":"join"}
{"nick":"dshaw_","date":"2014-01-23T01:32:51.186Z","type":"join"}
{"nick":"abraxas","date":"2014-01-23T01:36:09.304Z","type":"join"}
{"nick":"Benvie","reason":"Ping timeout: 264 seconds","date":"2014-01-23T01:39:14.728Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2014-01-23T01:41:45.805Z","type":"quit"}
{"nick":"c4milo_","reason":"Remote host closed the connection","date":"2014-01-23T01:50:22.566Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-01-23T01:51:34.703Z","type":"quit"}
{"nick":"c4milo","date":"2014-01-23T01:52:21.272Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-01-23T01:59:01.828Z","type":"quit"}
{"nick":"mcavage_","reason":"Remote host closed the connection","date":"2014-01-23T02:01:27.218Z","type":"quit"}
{"nick":"mikeal","date":"2014-01-23T02:05:12.289Z","type":"join"}
{"nick":"Ralith","reason":"Read error: Operation timed out","date":"2014-01-23T02:07:26.134Z","type":"quit"}
{"nick":"rmg","reason":"Read error: Connection reset by peer","date":"2014-01-23T02:07:33.860Z","type":"quit"}
{"nick":"rmg","date":"2014-01-23T02:08:12.079Z","type":"join"}
{"nick":"paulfryzel","date":"2014-01-23T02:09:29.209Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-01-23T02:12:08.208Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 252 seconds","date":"2014-01-23T02:13:45.073Z","type":"quit"}
{"nick":"daviddias","date":"2014-01-23T02:13:53.165Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 245 seconds","date":"2014-01-23T02:15:33.108Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-01-23T02:17:29.064Z","type":"quit"}
{"nick":"daviddias","reason":"Ping timeout: 245 seconds","date":"2014-01-23T02:18:28.047Z","type":"quit"}
{"nick":"dshaw_","date":"2014-01-23T02:30:21.383Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2014-01-23T02:33:57.087Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 272 seconds","date":"2014-01-23T02:35:25.221Z","type":"quit"}
{"nick":"Ralith","date":"2014-01-23T02:37:05.151Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-01-23T02:37:11.668Z","type":"join"}
{"nick":"tjkrusinski","reason":"Ping timeout: 272 seconds","date":"2014-01-23T02:38:29.712Z","type":"quit"}
{"nick":"dshaw_","date":"2014-01-23T02:55:11.335Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-01-23T03:00:18.970Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2014-01-23T03:07:50.547Z","type":"quit"}
{"nick":"kpdecker","reason":"Ping timeout: 252 seconds","date":"2014-01-23T03:08:12.027Z","type":"quit"}
{"nick":"daviddias","date":"2014-01-23T03:08:57.166Z","type":"join"}
{"nick":"kpdecker","date":"2014-01-23T03:09:57.140Z","type":"join"}
{"nick":"kazupon__","reason":"Remote host closed the connection","date":"2014-01-23T03:11:41.104Z","type":"quit"}
{"nick":"daviddias","reason":"Ping timeout: 252 seconds","date":"2014-01-23T03:13:09.046Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-01-23T03:14:30.242Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-01-23T03:18:29.068Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-01-23T03:45:42.279Z","type":"join"}
{"nick":"dshaw_","date":"2014-01-23T03:46:08.318Z","type":"join"}
{"nick":"Benvie","date":"2014-01-23T03:46:59.437Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-01-23T03:49:59.055Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 272 seconds","date":"2014-01-23T03:58:23.248Z","type":"quit"}
{"nick":"tjkrusinski","date":"2014-01-23T03:58:32.229Z","type":"join"}
{"nick":"jmar777","date":"2014-01-23T03:59:29.798Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: funny, macros in js make me rip my eyeballs out :)","date":"2014-01-23T04:00:32.813Z","type":"message"}
{"nick":"tjfontaine","message":"anyway, finally at my desk to do the v0.10.25 release","date":"2014-01-23T04:00:50.708Z","type":"message"}
{"nick":"daviddias","date":"2014-01-23T04:03:37.825Z","type":"join"}
{"nick":"kazupon","date":"2014-01-23T04:04:22.505Z","type":"join"}
{"nick":"AvianFlu","date":"2014-01-23T04:04:28.214Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 272 seconds","date":"2014-01-23T04:08:25.687Z","type":"quit"}
{"nick":"tjkrusinski","reason":"Ping timeout: 245 seconds","date":"2014-01-23T04:09:43.045Z","type":"quit"}
{"nick":"tjkrusinski","date":"2014-01-23T04:11:48.849Z","type":"join"}
{"nick":"tjfontaine","message":"jesus libuv build for v0.10 is broken on osx 10.9","date":"2014-01-23T04:13:08.752Z","type":"message"}
{"nick":"tjkrusinski","reason":"Quit: Lost terminal","date":"2014-01-23T04:18:05.004Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-01-23T04:23:53.051Z","type":"quit"}
{"nick":"kazupon","date":"2014-01-23T04:24:00.730Z","type":"join"}
{"nick":"paulfryzel","date":"2014-01-23T04:46:34.345Z","type":"join"}
{"nick":"Benvie","reason":"Ping timeout: 252 seconds","date":"2014-01-23T04:50:57.031Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-01-23T04:50:59.054Z","type":"quit"}
{"nick":"dshaw_","date":"2014-01-23T04:52:29.320Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 272 seconds","date":"2014-01-23T04:57:17.195Z","type":"quit"}
{"nick":"daviddias","date":"2014-01-23T04:58:08.081Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 245 seconds","date":"2014-01-23T05:02:38.089Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033tjfontaine\u000f created branch v0.10.25-release - http://git.io/6Gv5fw","date":"2014-01-23T05:03:53.501Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037v0.10.25-release\u000f * \u0002b0e5f19\u0002 : src: lint lib/net.js - http://git.io/Q5v4cQ","date":"2014-01-23T05:06:33.536Z","type":"message"}
{"nick":"mcavage","date":"2014-01-23T05:10:00.768Z","type":"join"}
{"nick":"MI6","message":"\u0002node-review-windows\u0002: #8 \u00037UNSTABLE\u000f windows-x64 (7/610) windows-ia32 (7/610) http://jenkins.nodejs.org/job/node-review-windows/8/","date":"2014-01-23T05:13:46.595Z","type":"message"}
{"nick":"mcavage","reason":"Ping timeout: 264 seconds","date":"2014-01-23T05:14:38.646Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 272 seconds","date":"2014-01-23T05:15:55.848Z","type":"quit"}
{"nick":"bradleymeck","date":"2014-01-23T05:17:51.742Z","type":"join"}
{"nick":"MI6","message":"\u0002node-review-unix\u0002: #155 \u00037UNSTABLE\u000f smartos-ia32 (9/610) linux-ia32 (2/610) osx-ia32 (3/610) smartos-x64 (9/610) osx-x64 (6/610) linux-x64 (6/610) http://jenkins.nodejs.org/job/node-review-unix/155/","date":"2014-01-23T05:20:17.663Z","type":"message"}
{"nick":"tjfontaine","message":"sigh","date":"2014-01-23T05:20:20.487Z","type":"message"}
{"nick":"othiym23","message":"I didn't do it!","date":"2014-01-23T05:26:55.072Z","type":"message"}
{"nick":"othiym23","message":"it was on fire when I lay down on it!","date":"2014-01-23T05:27:06.642Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2014-01-23T05:27:39.113Z","type":"message"}
{"nick":"dshaw_","date":"2014-01-23T05:30:29.313Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 272 seconds","date":"2014-01-23T05:35:17.202Z","type":"quit"}
{"nick":"brson","date":"2014-01-23T05:37:21.758Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 272 seconds","date":"2014-01-23T05:48:13.776Z","type":"quit"}
{"nick":"thlorenz","date":"2014-01-23T05:48:16.760Z","type":"join"}
{"nick":"daviddias","date":"2014-01-23T05:52:53.156Z","type":"join"}
{"nick":"brson","date":"2014-01-23T05:54:44.610Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 252 seconds","date":"2014-01-23T05:57:36.063Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2014-01-23T06:00:07.740Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-01-23T06:04:43.601Z","type":"quit"}
{"nick":"othiym23","message":"tjfontaine: somebody on #node.js acting like the Walmart bug might be liked to a DoS they've fond","date":"2014-01-23T06:17:27.662Z","type":"message"}
{"nick":"othiym23","message":"*linked","date":"2014-01-23T06:18:13.120Z","type":"message"}
{"nick":"mikeal","date":"2014-01-23T06:24:09.803Z","type":"join"}
{"nick":"abraxas_","date":"2014-01-23T06:24:34.243Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-01-23T06:25:01.369Z","type":"quit"}
{"nick":"abraxas","reason":"Ping timeout: 260 seconds","date":"2014-01-23T06:26:03.733Z","type":"quit"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2014-01-23T06:34:51.988Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #454 \u00037UNSTABLE\u000f windows-ia32 (8/610) windows-x64 (13/610) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/454/","date":"2014-01-23T06:35:01.340Z","type":"message"}
{"nick":"mikolalysenko","date":"2014-01-23T06:36:31.965Z","type":"join"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2014-01-23T06:37:22.338Z","type":"quit"}
{"nick":"hueniverse","message":"trevnorris: dgram send() clearly shows that the callback gets (err, bytes) so 0.11 breaks that.","date":"2014-01-23T06:41:38.316Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2014-01-23T06:45:24.179Z","type":"nick"}
{"nick":"Benvie","date":"2014-01-23T06:46:16.141Z","type":"join"}
{"nick":"daviddias","date":"2014-01-23T06:47:38.156Z","type":"join"}
{"nick":"indexzero","date":"2014-01-23T06:47:44.746Z","type":"join"}
{"nick":"paulfryzel","date":"2014-01-23T06:48:06.326Z","type":"join"}
{"nick":"Benvie_","date":"2014-01-23T06:48:22.140Z","type":"join"}
{"nick":"m76","date":"2014-01-23T06:50:20.149Z","type":"join"}
{"nick":"Benvie","reason":"Ping timeout: 256 seconds","date":"2014-01-23T06:50:58.810Z","type":"quit"}
{"nick":"daviddias","reason":"Ping timeout: 245 seconds","date":"2014-01-23T06:52:13.129Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-01-23T06:52:29.173Z","type":"quit"}
{"nick":"bajtos","date":"2014-01-23T07:05:47.961Z","type":"join"}
{"nick":"abraxas_","reason":"Remote host closed the connection","date":"2014-01-23T07:07:08.400Z","type":"quit"}
{"nick":"bradleymeck","date":"2014-01-23T07:16:52.115Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2014-01-23T07:20:23.538Z","type":"quit"}
{"nick":"TooTallNate","date":"2014-01-23T07:27:37.735Z","type":"join"}
{"nick":"abraxas","date":"2014-01-23T07:28:27.067Z","type":"join"}
{"nick":"TooTallNate","reason":"Read error: Connection reset by peer","date":"2014-01-23T07:31:21.695Z","type":"quit"}
{"nick":"nrajlich","date":"2014-01-23T07:31:28.736Z","type":"join"}
{"nick":"daviddias","date":"2014-01-23T07:42:23.224Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 245 seconds","date":"2014-01-23T07:46:48.064Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-01-23T07:48:44.280Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-01-23T07:52:59.105Z","type":"quit"}
{"nick":"kazupon","reason":"Read error: Connection timed out","date":"2014-01-23T07:56:28.166Z","type":"quit"}
{"nick":"kazupon","date":"2014-01-23T07:57:00.854Z","type":"join"}
{"nick":"rendar","date":"2014-01-23T07:59:02.842Z","type":"join"}
