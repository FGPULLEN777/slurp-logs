{"nick":"cremes_","date":"2016-11-21T00:16:14.602Z","type":"join"}
{"nick":"cremes","reason":"Ping timeout: 256 seconds","date":"2016-11-21T00:17:02.984Z","type":"quit"}
{"nick":"cremes_","new_nick":"cremes","date":"2016-11-21T00:17:03.039Z","type":"nick"}
{"nick":"Jacob843","reason":"Remote host closed the connection","date":"2016-11-21T00:21:28.052Z","type":"quit"}
{"nick":"Jacob843","date":"2016-11-21T00:21:50.942Z","type":"join"}
{"nick":"cremes_","date":"2016-11-21T00:28:44.763Z","type":"join"}
{"nick":"cremes","reason":"Ping timeout: 244 seconds","date":"2016-11-21T00:29:26.600Z","type":"quit"}
{"nick":"cremes_","new_nick":"cremes","date":"2016-11-21T00:29:27.057Z","type":"nick"}
{"nick":"cremes_","date":"2016-11-21T01:02:49.799Z","type":"join"}
{"nick":"cremes","reason":"Ping timeout: 265 seconds","date":"2016-11-21T01:03:56.775Z","type":"quit"}
{"nick":"cremes_","new_nick":"cremes","date":"2016-11-21T01:03:56.875Z","type":"nick"}
{"nick":"Ruyi","date":"2016-11-21T01:15:57.705Z","type":"join"}
{"nick":"teto","reason":"Ping timeout: 244 seconds","date":"2016-11-21T01:26:16.605Z","type":"quit"}
{"nick":"teto","date":"2016-11-21T01:26:38.171Z","type":"join"}
{"nick":"daurnimator","reason":"Remote host closed the connection","date":"2016-11-21T01:34:37.718Z","type":"quit"}
{"nick":"Ruyi","reason":"Ping timeout: 265 seconds","date":"2016-11-21T01:58:33.727Z","type":"quit"}
{"nick":"Ruyi","date":"2016-11-21T02:01:15.834Z","type":"join"}
{"nick":"daurnimator","date":"2016-11-21T02:12:12.897Z","type":"join"}
{"nick":"rmg","date":"2016-11-21T02:17:06.388Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 260 seconds","date":"2016-11-21T02:21:55.927Z","type":"quit"}
{"nick":"rmg","date":"2016-11-21T02:44:29.850Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 258 seconds","date":"2016-11-21T02:49:04.479Z","type":"quit"}
{"nick":"[spoiler]","reason":"Ping timeout: 268 seconds","date":"2016-11-21T02:57:04.567Z","type":"quit"}
{"nick":"zju3","date":"2016-11-21T02:57:19.589Z","type":"join"}
{"nick":"zju_25","reason":"Ping timeout: 256 seconds","date":"2016-11-21T02:58:05.839Z","type":"quit"}
{"nick":"zju_x1","date":"2016-11-21T02:58:14.224Z","type":"join"}
{"nick":"zju_x","reason":"Ping timeout: 260 seconds","date":"2016-11-21T02:58:41.514Z","type":"quit"}
{"nick":"[spoiler]","date":"2016-11-21T02:58:51.151Z","type":"join"}
{"nick":"lennartcl","reason":"Ping timeout: 244 seconds","date":"2016-11-21T03:13:13.666Z","type":"quit"}
{"nick":"lennartcl","date":"2016-11-21T03:15:38.003Z","type":"join"}
{"nick":"rendar","date":"2016-11-21T06:31:08.949Z","type":"join"}
{"nick":"txdv","message":"hexian!","date":"2016-11-21T06:57:44.045Z","type":"message"}
{"nick":"seishun","date":"2016-11-21T07:29:57.802Z","type":"join"}
{"nick":"indexzero","reason":"Ping timeout: 256 seconds","date":"2016-11-21T08:06:55.896Z","type":"quit"}
{"nick":"indexzero","date":"2016-11-21T08:08:18.532Z","type":"join"}
{"nick":"rmg","date":"2016-11-21T08:09:24.109Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 250 seconds","date":"2016-11-21T08:14:20.958Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 245 seconds","date":"2016-11-21T08:24:38.761Z","type":"quit"}
{"nick":"rmg","date":"2016-11-21T08:36:47.051Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 265 seconds","date":"2016-11-21T08:41:39.657Z","type":"quit"}
{"nick":"nathan7","reason":"Ping timeout: 260 seconds","date":"2016-11-21T08:46:32.918Z","type":"quit"}
{"nick":"nathan7","date":"2016-11-21T08:59:04.026Z","type":"join"}
{"nick":"rmg","date":"2016-11-21T09:03:55.902Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 244 seconds","date":"2016-11-21T09:08:10.599Z","type":"quit"}
{"nick":"sgimeno","date":"2016-11-21T09:20:36.093Z","type":"join"}
{"nick":"rmg","date":"2016-11-21T09:31:00.330Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 260 seconds","date":"2016-11-21T09:35:55.934Z","type":"quit"}
{"nick":"zju","date":"2016-11-21T10:11:25.013Z","type":"join"}
{"nick":"Matthew[m]","date":"2016-11-21T10:42:20.927Z","type":"join"}
{"nick":"thealphanerd","reason":"Quit: farewell for now","date":"2016-11-21T11:25:08.003Z","type":"quit"}
{"nick":"thealphanerd","date":"2016-11-21T11:25:38.587Z","type":"join"}
{"nick":"txdv","message":"HEXIAN!","date":"2016-11-21T14:23:48.556Z","type":"message"}
{"nick":"txdv","message":"hexian, where are you?!","date":"2016-11-21T14:41:51.603Z","type":"message"}
{"nick":"rendar","reason":"Ping timeout: 250 seconds","date":"2016-11-21T15:10:20.926Z","type":"quit"}
{"nick":"Fishrock123","date":"2016-11-21T15:15:43.563Z","type":"join"}
{"nick":"rendar","date":"2016-11-21T15:24:07.931Z","type":"join"}
{"nick":"rmg","date":"2016-11-21T16:13:49.497Z","type":"join"}
{"nick":"seishun","date":"2016-11-21T17:32:22.684Z","type":"join"}
{"nick":"brson","date":"2016-11-21T18:32:36.881Z","type":"join"}
{"nick":"a3f","date":"2016-11-21T18:50:11.526Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2016-11-21T19:17:11.057Z","type":"quit"}
{"nick":"Fishrock123","date":"2016-11-21T19:29:45.451Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2016-11-21T19:45:46.623Z","type":"quit"}
{"nick":"Fishrock123","date":"2016-11-21T20:05:11.227Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 245 seconds","date":"2016-11-21T20:15:53.864Z","type":"quit"}
{"nick":"seishun","date":"2016-11-21T20:19:17.651Z","type":"join"}
{"nick":"frerich","date":"2016-11-21T20:31:24.027Z","type":"join"}
{"nick":"frerich","message":"Hi all! I'm currently toying with libuv (via the Python bindings provided by the 'pyuv' module) and wonder: is it possible to create a named pipe server using libuv to which one can connect using the Windows function 'ConnectNamedPipe'? An initial attempt to do so failed, the 'pending_handle_type()' method on the pipe on which I called listen() returns '0'. :-/","date":"2016-11-21T20:33:18.673Z","type":"message"}
{"nick":"frerich","message":"...or is it that there is some internal protocol expected which means that one also has to use libuv on the caller side to establish the connection?","date":"2016-11-21T20:33:47.758Z","type":"message"}
{"nick":"indutny","message":"frerich: I think yes","date":"2016-11-21T20:36:43.373Z","type":"message"}
{"nick":"indutny","message":"frerich: you are talking about uv_spawn and friend, right?","date":"2016-11-21T20:36:52.623Z","type":"message"}
{"nick":"indutny","message":"frerich: we are using some sort of protocol to send handles over it","date":"2016-11-21T20:37:04.639Z","type":"message"}
{"nick":"indutny","message":"frerich: which means that it should be libuv on both ends","date":"2016-11-21T20:37:18.330Z","type":"message"}
{"nick":"frerich","message":"indutny: Pardon my ignorance, I'm using libuv via a Python binding so I might get the API wrong, but I think the Python code I have is similiar to uv_pipe_init, _bind and then doing _listen and _accept.","date":"2016-11-21T20:38:56.398Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2016-11-21T20:39:17.172Z","type":"message"}
{"nick":"indutny","message":"well, that still may use that internal protocol","date":"2016-11-21T20:39:39.084Z","type":"message"}
{"nick":"indutny","message":"if ipc=1","date":"2016-11-21T20:39:40.262Z","type":"message"}
{"nick":"frerich","message":"indutny: That's on the server side -- on the client side, I use the Windows call 'ConnectNamedPipe'. I can see that a connection is registered, but I can't seem to read any data in the server which the client sends.","date":"2016-11-21T20:39:42.028Z","type":"message"}
{"nick":"frerich","message":"Yes, indeed - I use ipc=1.","date":"2016-11-21T20:39:45.510Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2016-11-21T20:40:09.573Z","type":"message"}
{"nick":"indutny","message":"https://github.com/libuv/libuv/blob/v1.x/src/win/pipe.c#L68-L77","date":"2016-11-21T20:40:29.410Z","type":"message"}
{"nick":"indutny","message":"it uses custom protocol for this on Windows","date":"2016-11-21T20:40:42.657Z","type":"message"}
{"nick":"indutny","message":"I'd recommend using libuv on both ends to manage that pipe","date":"2016-11-21T20:40:50.579Z","type":"message"}
{"nick":"frerich","message":"Hm...","date":"2016-11-21T20:42:28.354Z","type":"message"}
{"nick":"indutny","message":"frerich: otherwise you may try using that custom protocol on other end","date":"2016-11-21T20:44:07.793Z","type":"message"}
{"nick":"indutny","message":"its not too hard but libuv doesn't give a stability guarantee for it","date":"2016-11-21T20:44:22.767Z","type":"message"}
{"nick":"indutny","message":"and it is not used on unixes","date":"2016-11-21T20:44:27.719Z","type":"message"}
{"nick":"indutny","message":"way more risky way, in my opinion","date":"2016-11-21T20:44:43.503Z","type":"message"}
{"nick":"indutny","message":"I wouldn't do it","date":"2016-11-21T20:44:48.517Z","type":"message"}
{"nick":"frerich","message":"It's certainly more risky, indeed... it's still attractive though in that using libuv on the client side is possible, but not totally trivial: one of the clients is written in Python -- there is a standard Python module available for interfacing with the Win32 API, but the module which wraps libuv requires compilation, so the installation of the Python client is a bid harder since on Windows, you don't usually have a compiler installed...","date":"2016-11-21T20:46:06.681Z","type":"message"}
{"nick":"frerich","message":"For what it's worth, I started out with doing everything using raw Win32 API, but managing overlapped IO using completion ports on Windows by hand is a bit painful. I hoped I could get away with just letting libuv do it for me. :-]","date":"2016-11-21T20:46:42.492Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2016-11-21T20:46:54.543Z","type":"message"}
{"nick":"indutny","message":"Windows is quite compatible to itself, though","date":"2016-11-21T20:47:12.007Z","type":"message"}
{"nick":"indutny","message":"perhaps distributing your client with a couple of dlls may work?","date":"2016-11-21T20:47:29.513Z","type":"message"}
{"nick":"indutny","message":"(not sure how it works in python)","date":"2016-11-21T20:47:34.554Z","type":"message"}
{"nick":"frerich","message":"Yes, I've been considering that as I was writing this... it's a bit annoying because I don't actually need to do a lot via named pipes: I just send over a list of newline-separated file paths and then get back a set of file hashes (which may have been cached).","date":"2016-11-21T20:48:09.923Z","type":"message"}
{"nick":"frerich","message":"I.e. I don't do anything terribly fancy, no stateful protocol or the like.","date":"2016-11-21T20:48:22.617Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2016-11-21T20:48:56.984Z","type":"message"}
{"nick":"indutny","message":"frerich: why do you need it to be in ipc mode then?","date":"2016-11-21T20:49:03.836Z","type":"message"}
{"nick":"indutny","message":"ipc mode is needed only if you plan to send sockets over it","date":"2016-11-21T20:49:21.441Z","type":"message"}
{"nick":"indutny","message":"or other handles","date":"2016-11-21T20:49:23.629Z","type":"message"}
{"nick":"frerich","message":"indutny: Quite frankly, I read that ipc means 'inter process communication' and I thought 'indeed, I have two processes talking, so let's enable this' :-]","date":"2016-11-21T20:49:27.242Z","type":"message"}
{"nick":"indutny","message":"heh, that's right","date":"2016-11-21T20:49:36.234Z","type":"message"}
{"nick":"indutny","message":"give it a try without ipc","date":"2016-11-21T20:49:39.663Z","type":"message"}
{"nick":"frerich","message":"Hmm, same symptom... maybe I'll first do a simpler version using libuv-via-Python on both sides to make sure I can get that to work at all, and then I'll change the client side to see whether I can do it without libuv...","date":"2016-11-21T20:53:51.370Z","type":"message"}
{"nick":"txdv","reason":"Ping timeout: 260 seconds","date":"2016-11-21T20:55:52.259Z","type":"quit"}
{"nick":"frerich","message":"indutny: Thanks for your help :-)","date":"2016-11-21T20:56:33.834Z","type":"message"}
{"nick":"indutny","message":"np","date":"2016-11-21T20:56:42.435Z","type":"message"}
{"nick":"indutny","message":"you're welcome","date":"2016-11-21T20:56:43.521Z","type":"message"}
{"nick":"txdv","date":"2016-11-21T20:57:15.594Z","type":"join"}
{"nick":"frerich","message":"indutny: Yay, got it working: after cloning the libuv sources and grepping a bit, I saw that it creates named pipes on Windows using the CreateNamedPipe function and passes a special flag which means that the pipe is in 'bytes' mode (as opposed to 'message' mode). I somehow assumed the latter and thus used 'CallNamedPipe', which is documented to fail for pipes in 'bytes' mode. The good thing is that the alternative to CallNamedPipe is to just open the pipe as a ","date":"2016-11-21T21:30:02.256Z","type":"message"}
{"nick":"frerich","message":":-)","date":"2016-11-21T21:30:04.402Z","type":"message"}
{"nick":"indutny","message":"aha","date":"2016-11-21T21:30:11.291Z","type":"message"}
{"nick":"indutny","message":"lovely","date":"2016-11-21T21:30:13.980Z","type":"message"}
{"nick":"indutny","message":"sorry, I have very little experience in winapi","date":"2016-11-21T21:30:22.867Z","type":"message"}
{"nick":"rendar","reason":"Quit: Leaving","date":"2016-11-21T21:30:56.765Z","type":"quit"}
{"nick":"frerich","message":"indutny: Oddly enough it does not seem to matter whether 'ipc' mode is enabled (this may well be just me not quite grok'ing the Python bindings though).","date":"2016-11-21T21:31:17.427Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 245 seconds","date":"2016-11-21T21:50:53.762Z","type":"quit"}
{"nick":"Cannon","date":"2016-11-21T22:08:56.224Z","type":"join"}
{"nick":"Cannon","reason":"\"I'm Out\"","date":"2016-11-21T22:13:45.866Z","type":"part"}
{"nick":"frerich","reason":"Ping timeout: 260 seconds","date":"2016-11-21T22:55:21.002Z","type":"quit"}
{"nick":"a3f","reason":"Quit: Zzzzz..","date":"2016-11-21T23:36:14.785Z","type":"quit"}
{"nick":"a3f","date":"2016-11-21T23:40:23.138Z","type":"join"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2016-11-21T23:43:02.256Z","type":"quit"}
