{"nick":"AtumT_","reason":"Remote host closed the connection","date":"2017-11-29T01:03:49.485Z","type":"quit"}
{"nick":"edef","new_nick":"EDEF","date":"2017-11-29T02:28:31.135Z","type":"nick"}
{"nick":"EDEF","new_nick":"edef","date":"2017-11-29T02:28:35.934Z","type":"nick"}
{"nick":"rendar","date":"2017-11-29T07:32:32.996Z","type":"join"}
{"nick":"saghul","date":"2017-11-29T08:17:33.168Z","type":"join"}
{"nick":"euoia","date":"2017-11-29T10:18:10.605Z","type":"join"}
{"nick":"euoia","reason":"Ping timeout: 248 seconds","date":"2017-11-29T10:53:53.421Z","type":"quit"}
{"nick":"euoia","date":"2017-11-29T11:08:58.051Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-11-29T11:25:09.525Z","type":"quit"}
{"nick":"mylesborins","date":"2017-11-29T11:25:40.217Z","type":"join"}
{"nick":"AtumT","date":"2017-11-29T13:21:47.727Z","type":"join"}
{"nick":"robertko1alski","new_nick":"robertkowalski","date":"2017-11-29T14:54:33.471Z","type":"nick"}
{"nick":"giorgi","date":"2017-11-29T14:55:11.121Z","type":"join"}
{"nick":"giorgi","reason":"Client Quit","date":"2017-11-29T14:56:31.261Z","type":"quit"}
{"nick":"saghul","reason":"Ping timeout: 276 seconds","date":"2017-11-29T15:52:47.160Z","type":"quit"}
{"nick":"euoia","reason":"Ping timeout: 240 seconds","date":"2017-11-29T15:55:42.100Z","type":"quit"}
{"nick":"euoia","date":"2017-11-29T16:13:25.798Z","type":"join"}
{"nick":"vtjnash","date":"2017-11-29T16:37:36.016Z","type":"join"}
{"nick":"saghul","date":"2017-11-29T16:47:35.596Z","type":"join"}
{"nick":"vtjnash","reason":"Remote host closed the connection","date":"2017-11-29T16:55:01.900Z","type":"quit"}
{"nick":"vtjnash","date":"2017-11-29T16:55:56.775Z","type":"join"}
{"nick":"vtjnash","reason":"Remote host closed the connection","date":"2017-11-29T16:57:39.274Z","type":"quit"}
{"nick":"vtjnash","date":"2017-11-29T16:58:20.132Z","type":"join"}
{"nick":"euoia","reason":"Ping timeout: 268 seconds","date":"2017-11-29T17:19:13.887Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-11-29T17:20:21.764Z","type":"join"}
{"nick":"euoia","date":"2017-11-29T17:34:23.119Z","type":"join"}
{"nick":"vtjnash","reason":"Remote host closed the connection","date":"2017-11-29T17:55:58.281Z","type":"quit"}
{"nick":"vtjnash","date":"2017-11-29T17:56:35.771Z","type":"join"}
{"nick":"saghul","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2017-11-29T18:09:28.105Z","type":"quit"}
{"nick":"euoia","reason":"Ping timeout: 276 seconds","date":"2017-11-29T18:19:02.128Z","type":"quit"}
{"nick":"ugexe","message":"refack: another idea... what if CREATE_NO_WINDOW is only set if no handles are inherited? its not compatible with nodejs as-is, nor is it the default (so not invasive). moarvm/perl6 (all handles inherited by default) would then continue to work like before CREATE_NO_WINDOW.","date":"2017-11-29T18:25:26.118Z","type":"message"}
{"nick":"ugexe","message":"i say not compatible because it dead locks (not because it should neccesarily work)","date":"2017-11-29T18:26:42.848Z","type":"message"}
{"nick":"refack","message":"If we can code that with simple `if`s. ","date":"2017-11-29T18:26:57.715Z","type":"message"}
{"nick":"ugexe","message":"yeah, a single if should be all that is needed from what i remember of the haskell bit that does this","date":"2017-11-29T18:28:51.416Z","type":"message"}
{"nick":"refack","message":"Then that makes most sense","date":"2017-11-29T18:29:33.021Z","type":"message"}
{"nick":"refack","message":"Since outherwise it's an invalid configuration","date":"2017-11-29T18:30:08.088Z","type":"message"}
{"nick":"refack","message":"Maybe even through an assertion error","date":"2017-11-29T18:30:32.168Z","type":"message"}
{"nick":"ugexe","message":"the code for that is in the initial issue comment. somehow its taken me until now to realize that could be all that is needed","date":"2017-11-29T18:30:39.708Z","type":"message"}
{"nick":"euoia","date":"2017-11-29T18:49:31.194Z","type":"join"}
{"nick":"vtjnash","message":"ugexe, that does sound like a good solution. I think you could further refine it to test specifically whether any of the inherited handles are TTY objects by uinsg `GetConsoleMode` (like uv_guess_handle).","date":"2017-11-29T18:52:40.478Z","type":"message"}
{"nick":"vtjnash","message":"I just found https://github.com/rprichard/win32-console-docs#traditional-semantics, which I found is a really nice explanation of what this flag actually means. The key realization (for me) was that the TTY handles are fake (prior to Windows 8), which I think partly explains why they behave so erratically.","date":"2017-11-29T18:55:34.074Z","type":"message"}
{"nick":"refack","message":"Nice","date":"2017-11-29T19:02:07.764Z","type":"message"}
{"nick":"euoia","reason":"Ping timeout: 276 seconds","date":"2017-11-29T19:03:53.164Z","type":"quit"}
{"nick":"euoia","date":"2017-11-29T19:07:19.804Z","type":"join"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2017-11-29T19:14:06.088Z","type":"quit"}
{"nick":"strike__","reason":"Quit: Konversation terminated!","date":"2017-11-29T19:26:18.038Z","type":"quit"}
{"nick":"ugexe","message":"whats the preferred formatting for a triple if with or without &&?","date":"2017-11-29T19:31:50.015Z","type":"message"}
{"nick":"ugexe","message":"triple-if e.g. `if(1) if(2) if(3) return 1`","date":"2017-11-29T19:32:32.407Z","type":"message"}
{"nick":"euoia","reason":"Ping timeout: 240 seconds","date":"2017-11-29T19:32:57.803Z","type":"quit"}
{"nick":"ugexe","message":"ah found an example... && inside a single bracketed if","date":"2017-11-29T19:34:11.324Z","type":"message"}
{"nick":"AtumT_","date":"2017-11-29T20:06:24.450Z","type":"join"}
{"nick":"AtumT","reason":"Read error: Connection reset by peer","date":"2017-11-29T20:07:02.880Z","type":"quit"}
{"nick":"Left_Turn","date":"2017-11-29T21:00:10.000Z","type":"join"}
{"nick":"indutny","message":":D","date":"2017-11-29T21:10:13.111Z","type":"message"}
{"nick":"indutny","message":"it's the first time I see code like this","date":"2017-11-29T21:10:26.895Z","type":"message"}
{"nick":"euoia","date":"2017-11-29T21:16:08.152Z","type":"join"}
{"nick":"ugexe","message":"https://github.com/libuv/libuv/blob/c845245e43d23fbf65490dea94bcab2b51d37e31/src/win/process.c#L1133 is the prior art im referencing ","date":"2017-11-29T21:20:31.015Z","type":"message"}
{"nick":"euoia","reason":"Ping timeout: 248 seconds","date":"2017-11-29T21:21:04.021Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-11-29T21:21:26.356Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-11-29T21:22:03.003Z","type":"join"}
{"nick":"Left_Turn","reason":"Remote host closed the connection","date":"2017-11-29T21:23:56.042Z","type":"quit"}
{"nick":"Fishrock123","reason":"Ping timeout: 240 seconds","date":"2017-11-29T21:26:11.941Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-11-29T21:39:40.825Z","type":"join"}
{"nick":"vtjnash","reason":"Remote host closed the connection","date":"2017-11-29T21:45:01.630Z","type":"quit"}
{"nick":"vtjnash","date":"2017-11-29T21:45:39.093Z","type":"join"}
{"nick":"vtjnash","reason":"Ping timeout: 276 seconds","date":"2017-11-29T21:50:17.139Z","type":"quit"}
{"nick":"strike_","date":"2017-11-29T22:05:23.173Z","type":"join"}
{"nick":"euoia","date":"2017-11-29T22:15:56.434Z","type":"join"}
{"nick":"vtjnash","date":"2017-11-29T22:55:17.189Z","type":"join"}
{"nick":"euoia","reason":"Ping timeout: 248 seconds","date":"2017-11-29T23:15:12.089Z","type":"quit"}
{"nick":"vtjnash","reason":"Quit: Leaving...","date":"2017-11-29T23:51:48.318Z","type":"quit"}
