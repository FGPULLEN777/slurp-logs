{"nick":"ircretary","reason":"Remote host closed the connection","date":"2015-02-28T00:00:00.698Z","type":"quit"}
{"nick":"ircretary","date":"2015-02-28T00:00:09.371Z","type":"join"}
{"nick":"dan336","reason":"Quit: Leaving.","date":"2015-02-28T00:01:05.697Z","type":"quit"}
{"nick":"thlorenz_","date":"2015-02-28T00:01:50.291Z","type":"join"}
{"nick":"reqshark","reason":"Ping timeout: 250 seconds","date":"2015-02-28T00:03:21.383Z","type":"quit"}
{"nick":"thlorenz_","reason":"Ping timeout: 256 seconds","date":"2015-02-28T00:06:15.271Z","type":"quit"}
{"nick":"Domenic","message":"piscisaureus: would be interested in your thoughts on https://github.com/whatwg/streams/issues/290.","date":"2015-02-28T00:07:37.820Z","type":"message"}
{"nick":"Domenic","message":"indutny: could you explain more exactly how/why readInto helps C++ beat JS streams?","date":"2015-02-28T00:11:02.292Z","type":"message"}
{"nick":"indutny","message":"Domenic: allocation turned out to be very expensive when I was optimizing TLS sockets","date":"2015-02-28T00:15:21.074Z","type":"message"}
{"nick":"indutny","message":"and in fact","date":"2015-02-28T00:15:32.298Z","type":"message"}
{"nick":"indutny","message":"TLS has it's own internal buffers","date":"2015-02-28T00:15:35.648Z","type":"message"}
{"nick":"indutny","message":"from which it reads","date":"2015-02-28T00:15:43.714Z","type":"message"}
{"nick":"indutny","message":"and to which it writes","date":"2015-02-28T00:15:46.247Z","type":"message"}
{"nick":"indutny","message":"doing it the JS-way","date":"2015-02-28T00:15:52.691Z","type":"message"}
{"nick":"indutny","message":"means that you should copy data on input and output too","date":"2015-02-28T00:16:03.438Z","type":"message"}
{"nick":"indutny","message":"right now it goes directly to kernel","date":"2015-02-28T00:16:15.346Z","type":"message"}
{"nick":"indutny","message":"and from kernel","date":"2015-02-28T00:16:16.839Z","type":"message"}
{"nick":"Domenic","message":"how does that work?","date":"2015-02-28T00:16:34.862Z","type":"message"}
{"nick":"indutny","message":"we are reading right into OpenSSL buffer","date":"2015-02-28T00:16:50.853Z","type":"message"}
{"nick":"indutny","message":"and writing out of it","date":"2015-02-28T00:16:55.459Z","type":"message"}
{"nick":"indutny","message":"instead of creating buffers","date":"2015-02-28T00:17:00.009Z","type":"message"}
{"nick":"Domenic","message":"there are ... 3 buffers in play? kernel socket buffer, OpenSSL buffer, and then JS Buffer class backing memory?","date":"2015-02-28T00:17:06.069Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2015-02-28T00:17:41.798Z","type":"message"}
{"nick":"indutny","message":"in fact more","date":"2015-02-28T00:17:54.312Z","type":"message"}
{"nick":"indutny","message":"as there are two streams for each TLS socket","date":"2015-02-28T00:18:01.808Z","type":"message"}
{"nick":"indutny","message":"one for encrypted data","date":"2015-02-28T00:18:07.486Z","type":"message"}
{"nick":"Domenic","message":"ok so the readInto magic is that you did something like kernel.readMeInto(openSSLBuffer, appropriateLocationInfo)","date":"2015-02-28T00:18:07.686Z","type":"message"}
{"nick":"indutny","message":"and one for cleartext","date":"2015-02-28T00:18:10.251Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2015-02-28T00:18:15.598Z","type":"message"}
{"nick":"Domenic","message":"very interesting","date":"2015-02-28T00:18:31.265Z","type":"message"}
{"nick":"chris_99","reason":"Remote host closed the connection","date":"2015-02-28T00:18:41.924Z","type":"quit"}
{"nick":"Domenic","message":"do you do a buffer copy to get into the JS Buffer backing or can you have that backed directly by the OpenSSL buffer? Probably not since the OpenSSL buffer is ... scratchwork?","date":"2015-02-28T00:19:02.124Z","type":"message"}
{"nick":"chris_99","date":"2015-02-28T00:19:18.780Z","type":"join"}
{"nick":"Domenic","message":"this seems a bit hard to apply to the question of whether JS streams need readInto though","date":"2015-02-28T00:21:25.618Z","type":"message"}
{"nick":"Domenic","message":"I guess you could imagine a JS library similar to OpenSSL that has some buffers it owns and if you want it to do work on data, you need to put data in those buffers","date":"2015-02-28T00:21:48.038Z","type":"message"}
{"nick":"Domenic","message":"so in that case jsStream.readInto(thatLibrary.buffer, ...) is analogous and important","date":"2015-02-28T00:22:10.057Z","type":"message"}
{"nick":"indutny","message":"sorry","date":"2015-02-28T00:23:17.762Z","type":"message"}
{"nick":"indutny","message":"I'm half afk","date":"2015-02-28T00:23:19.453Z","type":"message"}
{"nick":"Domenic","message":"np, I think I've got it :)","date":"2015-02-28T00:23:24.760Z","type":"message"}
{"nick":"indutny","message":"in few words","date":"2015-02-28T00:23:37.265Z","type":"message"}
{"nick":"indutny","message":"it is really important :)","date":"2015-02-28T00:23:40.393Z","type":"message"}
{"nick":"indutny","message":"I wish we could allocate even less","date":"2015-02-28T00:23:46.889Z","type":"message"}
{"nick":"indutny","message":"and don't copy the data from the OpenSSL buffers on read","date":"2015-02-28T00:23:55.388Z","type":"message"}
{"nick":"indutny","message":"but lifetime is different","date":"2015-02-28T00:24:01.901Z","type":"message"}
{"nick":"indutny","message":"though, it might be interested to do a copy-on-destroy experiment","date":"2015-02-28T00:24:14.249Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2015-02-28T00:26:34.961Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Julien Gilli\u000f \u00037v0.12\u000f * \u0002b233131\u0002 : src: fix builtin modules failing with --use-strict - http://git.io/xYi0","date":"2015-02-28T00:29:51.022Z","type":"message"}
{"nick":"brson","date":"2015-02-28T00:30:53.978Z","type":"join"}
{"nick":"chris_99","reason":"Quit: Ex-Chat","date":"2015-02-28T00:48:34.396Z","type":"quit"}
{"nick":"thlorenz_","date":"2015-02-28T01:02:35.988Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Julien Gilli\u000f \u00037v0.12\u000f * \u0002e82e86b\u0002 : Merge remote-tracking branch 'upstream/v0.10' into v0.12 (+1 more commits) - http://git.io/xYQi","date":"2015-02-28T01:06:10.298Z","type":"message"}
{"nick":"thlorenz_","reason":"Ping timeout: 246 seconds","date":"2015-02-28T01:06:53.951Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2015-02-28T01:13:04.485Z","type":"quit"}
{"nick":"reqshark","date":"2015-02-28T01:31:30.354Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Julien Gilli\u000f \u00037master\u000f * \u00024b69dcb\u0002 : Merge remote-tracking branch 'upstream/v0.12' (+11 more commits) - http://git.io/xYxT","date":"2015-02-28T01:36:03.411Z","type":"message"}
{"nick":"AlexisMocha","reason":"Ping timeout: 256 seconds","date":"2015-02-28T01:40:44.247Z","type":"quit"}
{"nick":"qard","reason":"Quit: leaving","date":"2015-02-28T01:43:57.309Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Julien Gilli\u000f \u00037refs/tags/jenkins-accept-pull-request-temp\u000f * \u00026f939de\u0002 : src: enable strict mode in all builtin modules - http://git.io/xYhp","date":"2015-02-28T01:52:26.989Z","type":"message"}
{"nick":"Ralith","reason":"Ping timeout: 256 seconds","date":"2015-02-28T01:52:47.315Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Julien Gilli\u000f \u00037refs/tags/jenkins-accept-commit-temp\u000f * \u0002d2b8525\u0002 : src: enable strict mode in all builtin modules - http://git.io/xYhj","date":"2015-02-28T01:52:50.045Z","type":"message"}
{"nick":"thlorenz_","date":"2015-02-28T02:03:31.150Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 240 seconds","date":"2015-02-28T02:07:52.925Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-02-28T02:08:51.831Z","type":"quit"}
{"nick":"tarruda","date":"2015-02-28T02:20:21.617Z","type":"join"}
{"nick":"dan336","date":"2015-02-28T02:20:33.303Z","type":"join"}
{"nick":"tarruda","reason":"Client Quit","date":"2015-02-28T02:21:15.628Z","type":"quit"}
{"nick":"AlexisMocha","date":"2015-02-28T02:21:31.512Z","type":"join"}
{"nick":"dan336","reason":"Client Quit","date":"2015-02-28T02:24:42.103Z","type":"quit"}
{"nick":"piscisaureus","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2015-02-28T02:28:35.448Z","type":"quit"}
{"nick":"qard","date":"2015-02-28T02:28:50.348Z","type":"join"}
{"nick":"avalanche123","date":"2015-02-28T02:35:25.125Z","type":"join"}
{"nick":"reqshark_","date":"2015-02-28T02:36:01.137Z","type":"join"}
{"nick":"reqshark","reason":"Read error: Connection reset by peer","date":"2015-02-28T02:36:01.376Z","type":"quit"}
{"nick":"reqshark_","reason":"Remote host closed the connection","date":"2015-02-28T02:36:02.628Z","type":"quit"}
{"nick":"reqshark_","date":"2015-02-28T02:36:09.412Z","type":"join"}
{"nick":"jgi","date":"2015-02-28T02:39:36.201Z","type":"join"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2015-02-28T02:40:27.269Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-02-28T02:52:26.492Z","type":"quit"}
{"nick":"jgi","date":"2015-02-28T02:52:57.917Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-02-28T02:59:15.826Z","type":"quit"}
{"nick":"Ralith","date":"2015-02-28T03:00:01.233Z","type":"join"}
{"nick":"jgi","date":"2015-02-28T03:00:58.634Z","type":"join"}
{"nick":"thlorenz_","date":"2015-02-28T03:04:17.404Z","type":"join"}
{"nick":"Ralith_","date":"2015-02-28T03:05:28.494Z","type":"join"}
{"nick":"Ralith","reason":"Read error: Connection reset by peer","date":"2015-02-28T03:06:20.177Z","type":"quit"}
{"nick":"thlorenz_","reason":"Ping timeout: 244 seconds","date":"2015-02-28T03:08:22.208Z","type":"quit"}
{"nick":"rmg","reason":"Read error: Connection reset by peer","date":"2015-02-28T03:24:00.327Z","type":"quit"}
{"nick":"rmg","date":"2015-02-28T03:24:37.217Z","type":"join"}
{"nick":"stagas","date":"2015-02-28T03:26:36.805Z","type":"join"}
{"nick":"rmg","reason":"Read error: Connection reset by peer","date":"2015-02-28T03:28:52.922Z","type":"quit"}
{"nick":"rmg","date":"2015-02-28T03:29:08.566Z","type":"join"}
{"nick":"benjamingr","reason":"Quit: Connection closed for inactivity","date":"2015-02-28T03:37:14.887Z","type":"quit"}
{"nick":"avalanche123","date":"2015-02-28T03:40:54.539Z","type":"join"}
{"nick":"benjamingr","date":"2015-02-28T03:45:06.208Z","type":"join"}
{"nick":"avalanche123","reason":"Ping timeout: 264 seconds","date":"2015-02-28T03:46:37.414Z","type":"quit"}
{"nick":"Left_Turn","reason":"Remote host closed the connection","date":"2015-02-28T03:49:22.458Z","type":"quit"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2015-02-28T03:51:20.386Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 246 seconds","date":"2015-02-28T03:55:14.951Z","type":"quit"}
{"nick":"thlorenz_","date":"2015-02-28T04:05:03.336Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 244 seconds","date":"2015-02-28T04:09:20.254Z","type":"quit"}
{"nick":"brson","date":"2015-02-28T04:33:12.489Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-02-28T04:40:02.577Z","type":"quit"}
{"nick":"jgi","date":"2015-02-28T04:47:34.277Z","type":"join"}
{"nick":"jgi","reason":"Client Quit","date":"2015-02-28T04:51:59.832Z","type":"quit"}
{"nick":"inolen","date":"2015-02-28T05:00:00.245Z","type":"join"}
{"nick":"thlorenz_","date":"2015-02-28T05:05:53.382Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 250 seconds","date":"2015-02-28T05:10:35.362Z","type":"quit"}
{"nick":"a3f","reason":"Ping timeout: 252 seconds","date":"2015-02-28T05:10:48.815Z","type":"quit"}
{"nick":"jgi","date":"2015-02-28T05:26:47.299Z","type":"join"}
{"nick":"jgi","reason":"Client Quit","date":"2015-02-28T05:27:36.781Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2015-02-28T05:54:30.601Z","type":"quit"}
{"nick":"wolfeidau","date":"2015-02-28T05:55:56.464Z","type":"join"}
{"nick":"wolfeidau","reason":"Ping timeout: 252 seconds","date":"2015-02-28T06:00:18.811Z","type":"quit"}
{"nick":"thlorenz_","date":"2015-02-28T06:06:43.985Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 246 seconds","date":"2015-02-28T06:11:20.943Z","type":"quit"}
{"nick":"brson_","date":"2015-02-28T06:55:01.808Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 255 seconds","date":"2015-02-28T06:58:10.539Z","type":"quit"}
{"nick":"wolfeidau","date":"2015-02-28T06:58:44.301Z","type":"join"}
{"nick":"thlorenz_","date":"2015-02-28T07:07:29.271Z","type":"join"}
{"nick":"brson_","reason":"Quit: leaving","date":"2015-02-28T07:08:42.377Z","type":"quit"}
{"nick":"thlorenz_","reason":"Ping timeout: 256 seconds","date":"2015-02-28T07:12:14.206Z","type":"quit"}
{"nick":"kellabyte","reason":"Quit: Connection closed for inactivity","date":"2015-02-28T07:24:16.586Z","type":"quit"}
{"nick":"Ralith_","new_nick":"Ralith","date":"2015-02-28T07:40:02.195Z","type":"nick"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2015-02-28T07:42:02.436Z","type":"quit"}
{"nick":"orthecreedence","date":"2015-02-28T07:48:56.906Z","type":"join"}
{"nick":"orthecreedence","message":"hello, does uv_write copy data out of the passed uv_bufs when called? i'm running into strange data overlap issues when serving multiple requests, and i'm thinking a possible cause is reusing the output buffer.buffer","date":"2015-02-28T07:51:16.061Z","type":"message"}
{"nick":"thlorenz_","date":"2015-02-28T08:08:17.994Z","type":"join"}
{"nick":"saghul","message":"orthecreedence: it copies the structure, but not the data","date":"2015-02-28T08:08:20.297Z","type":"message"}
{"nick":"orthecreedence","message":"so if i create a uv_buf with a global buffer, send it to uv_write, then call uv_write again with the same global buffer (different contents), then it's possible that the second uv_write call could overwrite the data sent to the first uv_write?","date":"2015-02-28T08:11:08.654Z","type":"message"}
{"nick":"thlorenz_","reason":"Ping timeout: 246 seconds","date":"2015-02-28T08:12:29.929Z","type":"quit"}
{"nick":"SergeiRND","date":"2015-02-28T08:13:12.929Z","type":"join"}
{"nick":"qard","reason":"Quit: leaving","date":"2015-02-28T08:15:08.381Z","type":"quit"}
{"nick":"stagas","date":"2015-02-28T08:29:38.679Z","type":"join"}
{"nick":"orthecreedence","message":"saghul: i guesswhat i'm wondering is at what point is it safe to free the original buffer (that uv_buf wraps) after calling uv_write?","date":"2015-02-28T08:47:56.784Z","type":"message"}
{"nick":"thlorenz_","date":"2015-02-28T09:09:06.038Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 246 seconds","date":"2015-02-28T09:13:41.939Z","type":"quit"}
{"nick":"rmg","date":"2015-02-28T09:30:47.660Z","type":"join"}
{"nick":"seishun","date":"2015-02-28T09:33:45.172Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 272 seconds","date":"2015-02-28T09:35:34.215Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 264 seconds","date":"2015-02-28T09:58:37.438Z","type":"quit"}
{"nick":"thlorenz_","date":"2015-02-28T10:09:55.036Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 246 seconds","date":"2015-02-28T10:14:14.929Z","type":"quit"}
{"nick":"a3f","date":"2015-02-28T10:14:26.567Z","type":"join"}
{"nick":"orthecreedence","reason":"Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/","date":"2015-02-28T10:18:18.756Z","type":"quit"}
{"nick":"chris_99","date":"2015-02-28T10:31:52.972Z","type":"join"}
{"nick":"stagas","date":"2015-02-28T10:47:30.011Z","type":"join"}
{"nick":"zju1","date":"2015-02-28T10:50:45.260Z","type":"join"}
{"nick":"zju4","date":"2015-02-28T10:52:10.352Z","type":"join"}
{"nick":"zju3","reason":"Ping timeout: 246 seconds","date":"2015-02-28T10:52:44.996Z","type":"quit"}
{"nick":"zju2","reason":"Ping timeout: 264 seconds","date":"2015-02-28T10:53:49.397Z","type":"quit"}
{"nick":"Left_Turn","date":"2015-02-28T10:57:41.679Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 246 seconds","date":"2015-02-28T11:02:12.007Z","type":"quit"}
{"nick":"tarruda","date":"2015-02-28T11:03:42.268Z","type":"join"}
{"nick":"tarruda","reason":"Remote host closed the connection","date":"2015-02-28T11:05:42.401Z","type":"quit"}
{"nick":"tarruda","date":"2015-02-28T11:07:18.337Z","type":"join"}
{"nick":"thlorenz_","date":"2015-02-28T11:10:46.668Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 245 seconds","date":"2015-02-28T11:14:52.651Z","type":"quit"}
{"nick":"tarruda","reason":"Remote host closed the connection","date":"2015-02-28T11:15:53.436Z","type":"quit"}
{"nick":"saghul_","date":"2015-02-28T11:20:06.205Z","type":"join"}
{"nick":"imzyxwvu","date":"2015-02-28T11:24:31.663Z","type":"join"}
{"nick":"saghul_","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2015-02-28T11:39:34.595Z","type":"quit"}
{"nick":"txdv","message":"how sweet a little mbp going to sleep","date":"2015-02-28T12:09:16.474Z","type":"message"}
{"nick":"thlorenz_","date":"2015-02-28T12:11:30.804Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 252 seconds","date":"2015-02-28T12:15:46.804Z","type":"quit"}
{"nick":"Left_Turn","reason":"Ping timeout: 245 seconds","date":"2015-02-28T12:27:47.673Z","type":"quit"}
{"nick":"Left_Turn","date":"2015-02-28T12:50:45.269Z","type":"join"}
{"nick":"a3f","reason":"Ping timeout: 252 seconds","date":"2015-02-28T13:08:34.809Z","type":"quit"}
{"nick":"thlorenz_","date":"2015-02-28T13:12:19.803Z","type":"join"}
{"nick":"a3f","date":"2015-02-28T13:14:14.899Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 252 seconds","date":"2015-02-28T13:16:38.805Z","type":"quit"}
{"nick":"SergeiRND","reason":"Quit: Leaving.","date":"2015-02-28T13:23:29.412Z","type":"quit"}
{"nick":"warehouse13","date":"2015-02-28T13:51:09.501Z","type":"join"}
{"nick":"tarruda","date":"2015-02-28T13:51:17.970Z","type":"join"}
{"nick":"imzyxwvu","message":"if i am forking a process that has some uv streams open, need i close them all in the child process?","date":"2015-02-28T13:51:45.064Z","type":"message"}
{"nick":"tarruda","reason":"Client Quit","date":"2015-02-28T13:54:02.202Z","type":"quit"}
{"nick":"Left_Turn","reason":"Ping timeout: 250 seconds","date":"2015-02-28T13:54:03.391Z","type":"quit"}
{"nick":"tarruda","date":"2015-02-28T13:58:15.332Z","type":"join"}
{"nick":"kellabyte","date":"2015-02-28T14:01:39.272Z","type":"join"}
{"nick":"Tux64_","date":"2015-02-28T14:01:44.997Z","type":"join"}
{"nick":"tarruda","reason":"Remote host closed the connection","date":"2015-02-28T14:05:44.023Z","type":"quit"}
{"nick":"thlorenz_","date":"2015-02-28T14:13:11.968Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 246 seconds","date":"2015-02-28T14:17:32.928Z","type":"quit"}
{"nick":"chris_99","reason":"Remote host closed the connection","date":"2015-02-28T14:35:02.646Z","type":"quit"}
{"nick":"chris_99","date":"2015-02-28T15:04:00.221Z","type":"join"}
{"nick":"thlorenz_","date":"2015-02-28T15:13:59.805Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 252 seconds","date":"2015-02-28T15:18:22.804Z","type":"quit"}
{"nick":"dan336","date":"2015-02-28T15:25:19.237Z","type":"join"}
{"nick":"tarruda","date":"2015-02-28T15:52:06.297Z","type":"join"}
{"nick":"tarruda","reason":"Remote host closed the connection","date":"2015-02-28T15:55:25.208Z","type":"quit"}
{"nick":"tarruda","date":"2015-02-28T15:56:48.989Z","type":"join"}
{"nick":"rmg","date":"2015-02-28T15:57:51.416Z","type":"join"}
{"nick":"Fishrock123","date":"2015-02-28T15:59:45.240Z","type":"join"}
