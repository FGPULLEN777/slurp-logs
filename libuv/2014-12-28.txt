{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-12-28T00:00:01.070Z","type":"quit"}
{"nick":"ircretary","date":"2014-12-28T00:00:09.209Z","type":"join"}
{"nick":"rendar","reason":"Quit: Leaving","date":"2014-12-28T00:05:39.375Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 264 seconds","date":"2014-12-28T00:11:59.021Z","type":"quit"}
{"nick":"c4milo_","date":"2014-12-28T00:12:28.252Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 245 seconds","date":"2014-12-28T00:12:44.766Z","type":"quit"}
{"nick":"chris_99","reason":"Quit: Ex-Chat","date":"2014-12-28T00:22:44.767Z","type":"quit"}
{"nick":"quijote","date":"2014-12-28T00:29:34.948Z","type":"join"}
{"nick":"c4milo_","reason":"Remote host closed the connection","date":"2014-12-28T00:31:02.296Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 272 seconds","date":"2014-12-28T00:34:31.912Z","type":"quit"}
{"nick":"dsantiago","reason":"Read error: Connection reset by peer","date":"2014-12-28T00:37:48.810Z","type":"quit"}
{"nick":"dsantiago","date":"2014-12-28T00:39:15.149Z","type":"join"}
{"nick":"toothrot","reason":"Ping timeout: 272 seconds","date":"2014-12-28T00:47:49.923Z","type":"quit"}
{"nick":"wolfeidau","date":"2014-12-28T00:52:00.512Z","type":"join"}
{"nick":"andrehjr","date":"2014-12-28T00:57:29.690Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 256 seconds","date":"2014-12-28T01:05:43.424Z","type":"quit"}
{"nick":"toothrot","date":"2014-12-28T01:16:00.348Z","type":"join"}
{"nick":"quijote","date":"2014-12-28T01:30:19.097Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-12-28T01:34:37.071Z","type":"quit"}
{"nick":"tjkrusinski","date":"2014-12-28T02:03:34.115Z","type":"join"}
{"nick":"c4milo","date":"2014-12-28T02:19:54.152Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 255 seconds","date":"2014-12-28T02:24:34.282Z","type":"quit"}
{"nick":"quijote","date":"2014-12-28T02:31:01.445Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 256 seconds","date":"2014-12-28T02:35:49.314Z","type":"quit"}
{"nick":"quijote","date":"2014-12-28T03:31:57.052Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-12-28T03:36:22.977Z","type":"quit"}
{"nick":"tjkrusinski","reason":"Ping timeout: 240 seconds","date":"2014-12-28T03:46:17.084Z","type":"quit"}
{"nick":"warehouse13","reason":"Quit: Leaving","date":"2014-12-28T03:55:07.980Z","type":"quit"}
{"nick":"tjkrusinski","date":"2014-12-28T03:55:28.476Z","type":"join"}
{"nick":"c4milo","date":"2014-12-28T04:08:52.985Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2014-12-28T04:14:17.921Z","type":"quit"}
{"nick":"andrehjr","reason":"Quit: Computer has gone to sleep.","date":"2014-12-28T04:22:33.994Z","type":"quit"}
{"nick":"quijote","date":"2014-12-28T04:32:33.279Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 255 seconds","date":"2014-12-28T04:37:19.283Z","type":"quit"}
{"nick":"tjkrusinski","reason":"Ping timeout: 264 seconds","date":"2014-12-28T05:00:00.634Z","type":"quit"}
{"nick":"andrehjr","date":"2014-12-28T05:21:26.669Z","type":"join"}
{"nick":"AlsoDirkson","new_nick":"dirkson","date":"2014-12-28T05:28:45.498Z","type":"nick"}
{"nick":"andrehjr","reason":"Quit: Computer has gone to sleep.","date":"2014-12-28T05:29:51.699Z","type":"quit"}
{"nick":"quijote","date":"2014-12-28T05:33:19.305Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 265 seconds","date":"2014-12-28T05:38:02.208Z","type":"quit"}
{"nick":"c4milo","date":"2014-12-28T05:57:44.987Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 245 seconds","date":"2014-12-28T06:02:19.641Z","type":"quit"}
{"nick":"petka_","reason":"Quit: Connection closed for inactivity","date":"2014-12-28T06:14:46.743Z","type":"quit"}
{"nick":"quijote","date":"2014-12-28T06:34:03.724Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 245 seconds","date":"2014-12-28T06:38:34.742Z","type":"quit"}
{"nick":"cb0","date":"2014-12-28T07:29:26.542Z","type":"join"}
{"nick":"quijote","date":"2014-12-28T07:34:52.104Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-12-28T07:39:17.097Z","type":"quit"}
{"nick":"c4milo","date":"2014-12-28T07:46:38.091Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 245 seconds","date":"2014-12-28T07:51:04.646Z","type":"quit"}
{"nick":"rmg","date":"2014-12-28T08:05:15.015Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 245 seconds","date":"2014-12-28T08:09:49.609Z","type":"quit"}
{"nick":"dsantiago","reason":"Quit: Computer has gone to sleep.","date":"2014-12-28T08:10:51.019Z","type":"quit"}
{"nick":"cb0","reason":"Remote host closed the connection","date":"2014-12-28T08:14:24.127Z","type":"quit"}
{"nick":"quijote","date":"2014-12-28T08:35:37.180Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 265 seconds","date":"2014-12-28T08:40:15.121Z","type":"quit"}
{"nick":"stagas","date":"2014-12-28T08:51:02.729Z","type":"join"}
{"nick":"quijote","date":"2014-12-28T09:19:37.026Z","type":"join"}
{"nick":"rendar","date":"2014-12-28T09:22:20.423Z","type":"join"}
{"nick":"c4milo","date":"2014-12-28T09:35:34.109Z","type":"join"}
{"nick":"hij1nx","date":"2014-12-28T09:39:33.722Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 240 seconds","date":"2014-12-28T09:39:57.078Z","type":"quit"}
{"nick":"hij1nx","message":"uv_fs_read, when it doesn't get a callback, should return the number of bytes read into the buffer?","date":"2014-12-28T09:41:34.104Z","type":"message"}
{"nick":"hij1nx","message":"yep","date":"2014-12-28T09:43:19.648Z","type":"message"}
{"nick":"hij1nx","message":"figured it out :)","date":"2014-12-28T09:43:26.148Z","type":"message"}
{"nick":"hij1nx","message":"my goodness i love libuv, i sit down to write code with it and it just works. <3","date":"2014-12-28T09:44:03.857Z","type":"message"}
{"nick":"txdv","message":"how","date":"2014-12-28T10:04:44.298Z","type":"message"}
{"nick":"txdv","message":"a lot of people complain but you dont","date":"2014-12-28T10:04:51.461Z","type":"message"}
{"nick":"txdv","message":"hij1nx: what do you think is so good about libuv\\?","date":"2014-12-28T10:06:07.501Z","type":"message"}
{"nick":"txdv","message":"are you using C or C++?","date":"2014-12-28T10:06:14.296Z","type":"message"}
{"nick":"hij1nx","message":"txdv: im just tinkering -- https://github.com/hij1nx/nodeuv-fs","date":"2014-12-28T10:20:43.307Z","type":"message"}
{"nick":"txdv","message":"callback hell in c++","date":"2014-12-28T10:21:33.870Z","type":"message"}
{"nick":"txdv","message":"why not","date":"2014-12-28T10:21:34.782Z","type":"message"}
{"nick":"txdv","message":"https://github.com/libuv/libuv/wiki/Projects-that-use-libuv","date":"2014-12-28T10:22:49.164Z","type":"message"}
{"nick":"txdv","message":"you might want to check this","date":"2014-12-28T10:22:54.497Z","type":"message"}
{"nick":"txdv","message":"there are already a bunch of c++ bindings","date":"2014-12-28T10:22:59.425Z","type":"message"}
{"nick":"txdv","message":"which have been abandoned","date":"2014-12-28T10:23:06.505Z","type":"message"}
{"nick":"Left_Turn","date":"2014-12-28T10:23:10.742Z","type":"join"}
{"nick":"txdv","message":"i love it how the open source community usually has the attention span and interest rate of a cat","date":"2014-12-28T10:23:20.666Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-12-28T10:24:23.098Z","type":"quit"}
{"nick":"hij1nx","message":"txdv: im not writing bindings","date":"2014-12-28T10:25:28.028Z","type":"message"}
{"nick":"hij1nx","message":"txdv: that's already been done","date":"2014-12-28T10:25:34.325Z","type":"message"}
{"nick":"txdv","message":"A friendly c++1y wrapper for libuv's filesystem operations","date":"2014-12-28T10:25:54.116Z","type":"message"}
{"nick":"txdv","message":"it literally says in the readme that you are doing that","date":"2014-12-28T10:26:00.449Z","type":"message"}
{"nick":"hij1nx","message":"txdv: im just writing some small libs that bring the node user experience to c++","date":"2014-12-28T10:26:03.635Z","type":"message"}
{"nick":"txdv","message":"this is what bindings in other language are all about","date":"2014-12-28T10:26:25.682Z","type":"message"}
{"nick":"hij1nx","message":"\"a wrapper\" isn't exactly \"c++ bindings\"","date":"2014-12-28T10:26:54.136Z","type":"message"}
{"nick":"hij1nx","message":"c++ bindings, i would expect to be a directl 1:1 mapping","date":"2014-12-28T10:27:08.911Z","type":"message"}
{"nick":"txdv","message":"no","date":"2014-12-28T10:27:51.917Z","type":"message"}
{"nick":"txdv","message":"stop","date":"2014-12-28T10:27:52.630Z","type":"message"}
{"nick":"txdv","message":"i dont need to fight with anyone over the difference of c++ wrapper and binding on the internet","date":"2014-12-28T10:28:29.867Z","type":"message"}
{"nick":"hij1nx","message":"who's fighting?","date":"2014-12-28T10:28:51.307Z","type":"message"}
{"nick":"hij1nx","message":"that's not what this room is about.","date":"2014-12-28T10:29:01.118Z","type":"message"}
{"nick":"hij1nx","message":"we are here because we enjoy using libuv.","date":"2014-12-28T10:29:11.286Z","type":"message"}
{"nick":"txdv","message":"why are you writing a wrapper if you enjoy using libuv?","date":"2014-12-28T10:29:30.308Z","type":"message"}
{"nick":"hij1nx","message":"txdv: oh snap, you are right... hmm... not sure what i was thinking ;)","date":"2014-12-28T10:30:19.816Z","type":"message"}
{"nick":"txdv","message":"im just kidding","date":"2014-12-28T10:30:56.469Z","type":"message"}
{"nick":"tkelman","date":"2014-12-28T10:32:52.392Z","type":"join"}
{"nick":"txdv","message":"hij1nx: i think node.native wraps it already in c++11","date":"2014-12-28T10:33:22.929Z","type":"message"}
{"nick":"txdv","message":"hij1nx: whta is c++1y supposed to mean?","date":"2014-12-28T10:33:44.540Z","type":"message"}
{"nick":"rendar","message":"txdv, its the new standard of c++","date":"2014-12-28T10:34:00.120Z","type":"message"}
{"nick":"txdv","message":"are you waiting for 2016 to release a wrapper with specific c++16 features?","date":"2014-12-28T10:34:00.475Z","type":"message"}
{"nick":"txdv","message":"i mean c++14","date":"2014-12-28T10:34:58.709Z","type":"message"}
{"nick":"txdv","message":"still in draft","date":"2014-12-28T10:35:06.253Z","type":"message"}
{"nick":"tarruda","date":"2014-12-28T10:42:28.956Z","type":"join"}
{"nick":"SergeiRND","date":"2014-12-28T10:52:57.918Z","type":"join"}
{"nick":"SergeiRND","reason":"Client Quit","date":"2014-12-28T10:54:19.415Z","type":"quit"}
{"nick":"quijote","date":"2014-12-28T11:01:08.079Z","type":"join"}
{"nick":"quijote","reason":"Read error: Connection reset by peer","date":"2014-12-28T11:03:29.363Z","type":"quit"}
{"nick":"quijote","date":"2014-12-28T11:03:42.360Z","type":"join"}
{"nick":"quijote_","date":"2014-12-28T11:11:03.454Z","type":"join"}
{"nick":"quijote","reason":"Read error: Connection reset by peer","date":"2014-12-28T11:11:04.730Z","type":"quit"}
{"nick":"c4milo","date":"2014-12-28T11:24:30.647Z","type":"join"}
{"nick":"Left_Turn","reason":"Ping timeout: 245 seconds","date":"2014-12-28T11:27:19.677Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 258 seconds","date":"2014-12-28T11:29:10.257Z","type":"quit"}
{"nick":"Left_Turn","date":"2014-12-28T11:38:21.362Z","type":"join"}
{"nick":"quijote_","reason":"Ping timeout: 264 seconds","date":"2014-12-28T11:54:37.960Z","type":"quit"}
{"nick":"am11","date":"2014-12-28T11:57:30.746Z","type":"join"}
{"nick":"quijote","date":"2014-12-28T12:11:35.382Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 256 seconds","date":"2014-12-28T12:16:05.359Z","type":"quit"}
{"nick":"quijote_","date":"2014-12-28T12:16:09.362Z","type":"join"}
{"nick":"quijote_","reason":"Remote host closed the connection","date":"2014-12-28T12:16:16.982Z","type":"quit"}
{"nick":"chris_99","date":"2014-12-28T12:17:21.278Z","type":"join"}
{"nick":"jan____","date":"2014-12-28T12:36:36.904Z","type":"join"}
{"nick":"jan____","reason":"Changing host","date":"2014-12-28T12:37:46.378Z","type":"quit"}
{"nick":"jan____","date":"2014-12-28T12:37:46.434Z","type":"join"}
{"nick":"petka_","date":"2014-12-28T12:48:24.922Z","type":"join"}
{"nick":"[spoiler]","date":"2014-12-28T12:59:37.088Z","type":"join"}
{"nick":"am11","message":"hello, since libuv is single threaded, what is the purpose of uv_loop_new ? Can we instantiate a new loop and uv_run / uv_stop it, while the uv_default_loop is awaiting return somewhere else?","date":"2014-12-28T13:03:32.280Z","type":"message"}
{"nick":"tjkrusinski","date":"2014-12-28T13:05:54.280Z","type":"join"}
{"nick":"c4milo","date":"2014-12-28T13:13:16.499Z","type":"join"}
{"nick":"AvianFlu","date":"2014-12-28T13:14:35.335Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 252 seconds","date":"2014-12-28T13:18:17.233Z","type":"quit"}
{"nick":"txdv","message":"am11 every thread can have its own loop","date":"2014-12-28T13:21:52.675Z","type":"message"}
{"nick":"txdv","message":"nodejs has only one loop","date":"2014-12-28T13:21:59.338Z","type":"message"}
{"nick":"am11","message":"txdv: is it ok to uv_run and then uv_stop the default_loop, while it is already blocked (waiting for return)?","date":"2014-12-28T13:24:25.865Z","type":"message"}
{"nick":"txdv","message":"no","date":"2014-12-28T13:24:39.439Z","type":"message"}
{"nick":"txdv","message":"i don't know why you are using uv_run in your binding","date":"2014-12-28T13:24:56.235Z","type":"message"}
{"nick":"txdv","message":"you really shouldn't","date":"2014-12-28T13:25:01.390Z","type":"message"}
{"nick":"txdv","message":"if you run compile_it or whatever that sass function is","date":"2014-12-28T13:27:04.263Z","type":"message"}
{"nick":"txdv","message":"it is blocking for the hole duration until it returns","date":"2014-12-28T13:27:19.694Z","type":"message"}
{"nick":"txdv","message":"that is the idea of a Sync function ","date":"2014-12-28T13:27:45.225Z","type":"message"}
{"nick":"txdv","message":"if you have Sync function, make the importer return synchronously as well","date":"2014-12-28T13:28:06.752Z","type":"message"}
{"nick":"txdv","message":"if you have an async function, make the importer take a callback","date":"2014-12-28T13:28:17.964Z","type":"message"}
{"nick":"txdv","message":"then you will have no need for for running the loop yourself","date":"2014-12-28T13:29:39.215Z","type":"message"}
{"nick":"txdv","message":"and you have a consitent and clear api","date":"2014-12-28T13:29:47.095Z","type":"message"}
{"nick":"am11","message":"for the renderSync, the default loop is blocked. so uv_async_send is not going anywhere. in render (async), we call compile_it on uv_queue_work, so uv_async_send runs as soon uv_cond_wait is called.","date":"2014-12-28T13:30:58.365Z","type":"message"}
{"nick":"txdv","message":"you don't need uv_async_send for renderSync","date":"2014-12-28T13:32:06.816Z","type":"message"}
{"nick":"txdv","message":"there is literally no need to run anything anywhere but in the main loop","date":"2014-12-28T13:32:31.265Z","type":"message"}
{"nick":"tjkrusinski","reason":"Ping timeout: 255 seconds","date":"2014-12-28T13:34:37.278Z","type":"quit"}
{"nick":"am11","message":"if i move uv_async_send inside the condition (before uv_cond_wait), the renderSync calls freeze. From the the pure C++ funciton (sass_importer() in our case), how else we can pass the call to libuv?","date":"2014-12-28T13:37:16.664Z","type":"message"}
{"nick":"txdv","message":"you run compile_it synchronously","date":"2014-12-28T13:38:42.173Z","type":"message"}
{"nick":"txdv","message":"it calls the function importer synchronously","date":"2014-12-28T13:38:52.115Z","type":"message"}
{"nick":"txdv","message":"and uses the return value immediately, instead of passing an argument that you have to call back","date":"2014-12-28T13:39:18.483Z","type":"message"}
{"nick":"txdv","message":"you don't need to pass anything to it","date":"2014-12-28T13:39:25.236Z","type":"message"}
{"nick":"tjkrusinski","date":"2014-12-28T13:39:35.263Z","type":"join"}
{"nick":"am11","message":"ok then I will add a sync version of dispatched_async_uv_callback(), which just takes ctx_w and retun immediately? Then perhaps NanScope would not be avaiable in it..","date":"2014-12-28T13:43:52.417Z","type":"message"}
{"nick":"chris_99","reason":"Quit: Ex-Chat","date":"2014-12-28T13:46:04.657Z","type":"quit"}
{"nick":"txdv","message":"I don't really think that you understood what i want","date":"2014-12-28T13:46:15.047Z","type":"message"}
{"nick":"txdv","message":"maybe i should just code it for you","date":"2014-12-28T13:46:21.404Z","type":"message"}
{"nick":"am11","message":":)","date":"2014-12-28T13:48:12.625Z","type":"message"}
{"nick":"am11","message":"do you mean we should call the async version the same way (synchronously from sass_importer)? ","date":"2014-12-28T13:48:20.242Z","type":"message"}
{"nick":"txdv","message":"describe to me how you are calling the sync version currently","date":"2014-12-28T13:50:15.596Z","type":"message"}
{"nick":"txdv","message":"and what signature the importer function in the js world has","date":"2014-12-28T13:50:21.961Z","type":"message"}
{"nick":"txdv","message":"everyone is afk","date":"2014-12-28T13:53:07.947Z","type":"message"}
{"nick":"txdv","message":"where is saghuuuuuuuuuuuuul","date":"2014-12-28T13:53:12.826Z","type":"message"}
{"nick":"am11","message":"First, in the NANMETHOD(RenderSync) or NANMETHOD(RenderFileSync), we create a sass_context and sass_wrappper_context (same as their async variants). then we fill the options and call compile_data (or compile_file in RenderFileSync).  While in async variants we call compile_it via uv_queue_work, which selects either compile_file or compile_data (based on the context).","date":"2014-12-28T13:54:35.982Z","type":"message"}
{"nick":"am11","message":"when libsass calls sass_importer, we check if the call was async, use uv_run approach on the default loop (which is already blocked, waiting for response)","date":"2014-12-28T13:55:47.018Z","type":"message"}
{"nick":"am11","message":"js has this signature:   function(url,previous,done) { /*done is optional, you can just return synchronously like this*/ return {file: url};}  ","date":"2014-12-28T13:56:43.321Z","type":"message"}
{"nick":"am11","message":"this is the user side.. ","date":"2014-12-28T13:56:51.410Z","type":"message"}
{"nick":"txdv","message":"why ar eyou calling uv_run on the default loop?","date":"2014-12-28T13:57:16.492Z","type":"message"}
{"nick":"am11","message":"we catch the return and call the binding.ImportedCallback(result_from_user)","date":"2014-12-28T13:57:39.130Z","type":"message"}
{"nick":"am11","message":"because if the uv_run is not used, it doesn't call the dispatcher method (uv_async_send)","date":"2014-12-28T13:58:25.322Z","type":"message"}
{"nick":"am11","message":"in case of async, sine the uv_queue_work has freed the default loop, uv_async_send works there","date":"2014-12-28T13:59:09.000Z","type":"message"}
{"nick":"am11","message":"(but uv_run deosn't work with async, i don't know why..)","date":"2014-12-28T13:59:46.754Z","type":"message"}
{"nick":"am11","message":"so that's why we have two approaches","date":"2014-12-28T14:00:00.058Z","type":"message"}
{"nick":"txdv","message":"why do you need to uv_async_send when you are doing a synchronous operation?","date":"2014-12-28T14:12:48.754Z","type":"message"}
{"nick":"txdv","message":"the only reason why you are doing uv_async_send in the first place is because if you are doing an ASYNC request you are in a different thread","date":"2014-12-28T14:13:52.676Z","type":"message"}
{"nick":"txdv","message":"now you are in the same one","date":"2014-12-28T14:13:58.916Z","type":"message"}
{"nick":"am11","message":"oh that's right. then I will just refactor the code to make render*Sync only accept sync imports.","date":"2014-12-28T14:17:49.796Z","type":"message"}
{"nick":"am11","message":"(and keep the async as is)","date":"2014-12-28T14:17:58.727Z","type":"message"}
{"nick":"txdv","message":"praise the lord","date":"2014-12-28T14:18:58.765Z","type":"message"}
{"nick":"txdv","message":"the importer function of the async passes a done callback which has to be called","date":"2014-12-28T14:19:24.553Z","type":"message"}
{"nick":"txdv","message":"the importer function of the sync variant has to return it immediately","date":"2014-12-28T14:19:37.801Z","type":"message"}
{"nick":"tjkrusinski","reason":"Ping timeout: 258 seconds","date":"2014-12-28T14:20:31.227Z","type":"quit"}
{"nick":"am11","message":"yes this is exactly how it will be :)","date":"2014-12-28T14:20:32.841Z","type":"message"}
{"nick":"am11","message":"renderSync({importer: function(url, prev){return {file:blah}}})","date":"2014-12-28T14:21:06.713Z","type":"message"}
{"nick":"am11","message":"render({importer: function(url, prev, done){done({file:blah})}})","date":"2014-12-28T14:21:21.275Z","type":"message"}
{"nick":"txdv","message":"so you do understand now that there is no need for calling uv_run","date":"2014-12-28T14:24:17.592Z","type":"message"}
{"nick":"am11","message":"yes. in sync case, i will just call a function which will simply call js and return value immediately.","date":"2014-12-28T14:26:13.291Z","type":"message"}
{"nick":"tjkrusinski","date":"2014-12-28T14:36:44.173Z","type":"join"}
{"nick":"andrehjr","date":"2014-12-28T14:48:34.069Z","type":"join"}
{"nick":"tjkrusinski","reason":"Ping timeout: 244 seconds","date":"2014-12-28T14:52:23.253Z","type":"quit"}
{"nick":"andrehjr","reason":"Quit: Computer has gone to sleep.","date":"2014-12-28T15:00:08.954Z","type":"quit"}
{"nick":"seishun","date":"2014-12-28T15:21:09.248Z","type":"join"}
{"nick":"am11","message":"txdv:  tada!  https://github.com/am11/node-sass/commit/018094257cc29e28ff2d58cc564299b52dec7da8  8-)","date":"2014-12-28T15:55:19.649Z","type":"message"}
{"nick":"am11","message":"its fixed! :D","date":"2014-12-28T15:55:31.361Z","type":"message"}
{"nick":"am11","message":"but (yet again).. another segmentation fault when running the tests. this time in \"stats\"","date":"2014-12-28T15:56:12.993Z","type":"message"}
{"nick":"tkelman","reason":"Ping timeout: 246 seconds","date":"2014-12-28T15:57:22.677Z","type":"quit"}
