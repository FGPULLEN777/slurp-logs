{"nick":"Guest2462","date":"2017-10-08T00:26:32.099Z","type":"join"}
{"nick":"Guest2462","message":"Quick question regarding timers, do they execute on the thread pool or the main thread?","date":"2017-10-08T00:28:09.673Z","type":"message"}
{"nick":"refack","message":"AFAIK on the main thread","date":"2017-10-08T00:33:07.675Z","type":"message"}
{"nick":"refack","message":"Everything except FS, getaddrinfo, and queue_work runs in the main thread as per http://docs.libuv.org/en/v1.x/threadpool.html","date":"2017-10-08T00:33:07.713Z","type":"message"}
{"nick":"refack","message":"The \"timers\" themselves are a synthetic construct and are implemented just as a list of timeouts on `epoll` - http://docs.libuv.org/en/v1.x/timer.html","date":"2017-10-08T00:37:18.962Z","type":"message"}
{"nick":"Guest2462","message":"Yeah I get that, I just have a bunch of callbacks running every 40 ms doing 1ms worth of work","date":"2017-10-08T00:40:53.128Z","type":"message"}
{"nick":"Guest2462","message":"Without hacking the lib is there any way to get them to execute on the pool?","date":"2017-10-08T00:41:20.256Z","type":"message"}
{"nick":"refack","message":"queue_work referenced in the first URL above","date":"2017-10-08T00:42:26.893Z","type":"message"}
{"nick":"refack","message":"if the callback just queues a work item","date":"2017-10-08T00:43:01.663Z","type":"message"}
{"nick":"refack","message":"AFAIK there's no way to run the callbacks on the pool by default, but maybe one of the seniors knows better","date":"2017-10-08T00:44:24.399Z","type":"message"}
{"nick":"Guest2462","message":"it looks like it might be possible if I change handle->timer_cb(handle) in uv__run_timers to be uv_queue_work()","date":"2017-10-08T00:59:33.731Z","type":"message"}
{"nick":"Guest2462","message":"though I'm not sure if this would cause any adverse effects","date":"2017-10-08T00:59:47.068Z","type":"message"}
{"nick":"refack","message":"If it doesn't work, you can post a question on GitHub. Some of the other devs are more active there","date":"2017-10-08T01:09:09.471Z","type":"message"}
{"nick":"euoia","date":"2017-10-08T01:16:35.694Z","type":"join"}
{"nick":"Guest2462","reason":"Ping timeout: 260 seconds","date":"2017-10-08T01:20:40.037Z","type":"quit"}
{"nick":"euoia","reason":"Ping timeout: 260 seconds","date":"2017-10-08T02:47:47.632Z","type":"quit"}
{"nick":"rendar","date":"2017-10-08T06:33:29.252Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-10-08T10:25:11.843Z","type":"quit"}
{"nick":"mylesborins","date":"2017-10-08T10:25:42.614Z","type":"join"}
{"nick":"euoia","date":"2017-10-08T11:04:39.408Z","type":"join"}
{"nick":"euoia","reason":"Ping timeout: 264 seconds","date":"2017-10-08T12:20:46.368Z","type":"quit"}
{"nick":"euoia","date":"2017-10-08T12:31:20.379Z","type":"join"}
{"nick":"euoia","reason":"Ping timeout: 248 seconds","date":"2017-10-08T13:17:21.370Z","type":"quit"}
{"nick":"euoia","date":"2017-10-08T14:17:11.716Z","type":"join"}
{"nick":"euoia","reason":"Ping timeout: 258 seconds","date":"2017-10-08T15:24:28.664Z","type":"quit"}
{"nick":"euoia","date":"2017-10-08T15:30:57.339Z","type":"join"}
{"nick":"euoia","reason":"Ping timeout: 248 seconds","date":"2017-10-08T15:50:25.361Z","type":"quit"}
{"nick":"saghul","date":"2017-10-08T17:15:03.244Z","type":"join"}
{"nick":"saghul","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-10-08T17:38:49.139Z","type":"quit"}
{"nick":"saghul","date":"2017-10-08T17:48:09.884Z","type":"join"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2017-10-08T18:16:12.115Z","type":"quit"}
{"nick":"saghul","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-10-08T22:36:29.095Z","type":"quit"}
{"nick":"saghul","date":"2017-10-08T22:49:07.738Z","type":"join"}
{"nick":"saghul","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-10-08T23:03:52.209Z","type":"quit"}
{"nick":"saghul","date":"2017-10-08T23:32:59.700Z","type":"join"}
