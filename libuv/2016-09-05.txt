{"nick":"thealphanerd","reason":"Quit: farewell for now","date":"2016-09-05T10:37:52.959Z","type":"quit"}
{"nick":"thealphanerd","date":"2016-09-05T10:38:23.569Z","type":"join"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2016-09-05T12:45:17.434Z","type":"quit"}
{"nick":"rendar","date":"2016-09-05T13:12:49.101Z","type":"join"}
{"nick":"avalanche123","date":"2016-09-05T13:18:09.495Z","type":"join"}
{"nick":"avalanche123","reason":"Ping timeout: 252 seconds","date":"2016-09-05T13:22:49.456Z","type":"quit"}
{"nick":"etnbrd","date":"2016-09-05T13:53:29.105Z","type":"join"}
{"nick":"saghul","date":"2016-09-05T13:53:41.412Z","type":"join"}
{"nick":"rgrinberg","date":"2016-09-05T14:23:43.754Z","type":"join"}
{"nick":"jhark","date":"2016-09-05T15:17:05.784Z","type":"join"}
{"nick":"jhark","message":"Hi. Am I correct in thinking that the synchronous file system operations are all thread-safe? Looks that way on first inspection of the source. I couldn't find any documentation to this effect, so I assume that even if it's true it's Subject To Change.","date":"2016-09-05T15:35:23.861Z","type":"message"}
{"nick":"rendar","message":"jhark: i guess you must run all fs operations from the same thread","date":"2016-09-05T15:44:46.092Z","type":"message"}
{"nick":"rendar","message":"since libuv is not thread safe ","date":"2016-09-05T15:45:01.550Z","type":"message"}
{"nick":"seishun","date":"2016-09-05T15:45:30.898Z","type":"join"}
{"nick":"joaocgreis_","date":"2016-09-05T15:45:48.745Z","type":"join"}
{"nick":"brycebaril_","date":"2016-09-05T15:45:49.661Z","type":"join"}
{"nick":"jhark","message":"rendar: Sure, but looking at the source it seems that none of the functions touch global state (though I may have missed something), and they just call corresponding OS APIs (generally thread safe).","date":"2016-09-05T15:46:31.940Z","type":"message"}
{"nick":"rendar","message":"jhark: not a global state but a state internal to the uv_stream_t structure for sure","date":"2016-09-05T15:47:15.397Z","type":"message"}
{"nick":"saghul","message":"jhark they are thread safe","date":"2016-09-05T15:47:19.559Z","type":"message"}
{"nick":"mafintosh_","date":"2016-09-05T15:47:20.098Z","type":"join"}
{"nick":"zkat___","date":"2016-09-05T15:47:26.244Z","type":"join"}
{"nick":"rendar","message":"saghul: oh really? but don't they touch internal uv_stream_t stuff?","date":"2016-09-05T15:47:44.059Z","type":"message"}
{"nick":"saghul","message":"rendar not fs operations","date":"2016-09-05T15:47:54.408Z","type":"message"}
{"nick":"creation-","date":"2016-09-05T15:48:02.026Z","type":"join"}
{"nick":"paulfryzel","date":"2016-09-05T15:48:04.545Z","type":"join"}
{"nick":"rendar","message":"saghul: i see, so i can read/write to the same file from multiple threads?","date":"2016-09-05T15:48:15.954Z","type":"message"}
{"nick":"saghul","message":"also that onyl applies to sync fs operations, which is what was asked","date":"2016-09-05T15:48:17.080Z","type":"message"}
{"nick":"jhark","message":"saghul: thanks :)","date":"2016-09-05T15:48:27.045Z","type":"message"}
{"nick":"saghul","message":"rendar using the sync API yes","date":"2016-09-05T15:48:34.539Z","type":"message"}
{"nick":"saghul","message":"jhark pleasure!","date":"2016-09-05T15:48:43.149Z","type":"message"}
{"nick":"rendar","message":"saghul: hmm, libuv has sync API?","date":"2016-09-05T15:48:49.898Z","type":"message"}
{"nick":"parshap","reason":"Ping timeout: 260 seconds","date":"2016-09-05T15:48:55.802Z","type":"quit"}
{"nick":"brycebaril","reason":"Ping timeout: 260 seconds","date":"2016-09-05T15:48:56.019Z","type":"quit"}
{"nick":"zkat__","reason":"Ping timeout: 260 seconds","date":"2016-09-05T15:48:56.230Z","type":"quit"}
{"nick":"jcrugzz","reason":"Ping timeout: 260 seconds","date":"2016-09-05T15:48:56.912Z","type":"quit"}
{"nick":"joaocgreis","reason":"Ping timeout: 260 seconds","date":"2016-09-05T15:48:59.085Z","type":"quit"}
{"nick":"paulfryz-","reason":"Ping timeout: 260 seconds","date":"2016-09-05T15:48:59.583Z","type":"quit"}
{"nick":"mafintosh","reason":"Ping timeout: 260 seconds","date":"2016-09-05T15:48:59.667Z","type":"quit"}
{"nick":"creationix","reason":"Ping timeout: 260 seconds","date":"2016-09-05T15:49:00.556Z","type":"quit"}
{"nick":"erikj","reason":"Ping timeout: 260 seconds","date":"2016-09-05T15:49:00.640Z","type":"quit"}
{"nick":"abruanese","reason":"Ping timeout: 260 seconds","date":"2016-09-05T15:49:01.835Z","type":"quit"}
{"nick":"creation-","new_nick":"creationix","date":"2016-09-05T15:49:04.572Z","type":"nick"}
{"nick":"jhark","message":"saghul: Is that something I can rely on in practise, or should I vet the source when updating :)","date":"2016-09-05T15:49:04.801Z","type":"message"}
{"nick":"saghul","message":"rendar for fs operations, yes. Pass NULL as the callback","date":"2016-09-05T15:49:06.630Z","type":"message"}
{"nick":"abruanese","date":"2016-09-05T15:49:09.172Z","type":"join"}
{"nick":"brycebaril_","new_nick":"brycebaril","date":"2016-09-05T15:49:29.090Z","type":"nick"}
{"nick":"rendar","message":"saghul: got it","date":"2016-09-05T15:49:30.020Z","type":"message"}
{"nick":"saghul","message":"jhark you can rely on that.","date":"2016-09-05T15:49:31.244Z","type":"message"}
{"nick":"jhark","message":"saghul: Oh, cool!","date":"2016-09-05T15:49:37.813Z","type":"message"}
{"nick":"saghul","message":"note that we don't have seek operations exactly because of this. read operations could be run in parallel, that's why you must se the offset","date":"2016-09-05T15:50:03.663Z","type":"message"}
{"nick":"joaocgreis_","new_nick":"joaocgreis","date":"2016-09-05T15:50:08.414Z","type":"nick"}
{"nick":"saghul","message":"write operations have a global lock in OSX because it's not thread safe, but we take care of that","date":"2016-09-05T15:50:29.590Z","type":"message"}
{"nick":"jhark","message":"saghul: Yeah, an API with an offset makes sense","date":"2016-09-05T15:50:33.041Z","type":"message"}
{"nick":"jhark","message":"I noticed that too","date":"2016-09-05T15:50:40.535Z","type":"message"}
{"nick":"jcrugzz","date":"2016-09-05T15:50:45.109Z","type":"join"}
{"nick":"jhark","message":"Seems a bit surprising. Oh the joys of coping with the foibles of each platform.","date":"2016-09-05T15:51:20.241Z","type":"message"}
{"nick":"MLM","reason":"Ping timeout: 258 seconds","date":"2016-09-05T15:51:34.635Z","type":"quit"}
{"nick":"erikj","date":"2016-09-05T15:52:01.229Z","type":"join"}
{"nick":"erikj","reason":"Changing host","date":"2016-09-05T15:52:01.330Z","type":"quit"}
{"nick":"erikj","date":"2016-09-05T15:52:01.414Z","type":"join"}
{"nick":"saghul","message":"that's the libuv spirit, we fix it so users don't have to :-)","date":"2016-09-05T15:52:07.494Z","type":"message"}
{"nick":"jhark","message":"<3","date":"2016-09-05T15:52:14.602Z","type":"message"}
{"nick":"jhark","message":"I have done similar stuff for networking APIs in the past :P","date":"2016-09-05T15:53:03.299Z","type":"message"}
{"nick":"saghul","message":"then you know the pain ;-0","date":"2016-09-05T15:54:26.925Z","type":"message"}
{"nick":"mafintosh_","new_nick":"mafintosh","date":"2016-09-05T15:55:35.552Z","type":"nick"}
{"nick":"jhark","message":"Sure do ;_; hehe. From a cursory glance it also looked like submitting async operations would also be thread-safe if the uv_loop_t queue operations were made thread-safe; is that right? I haven't really scrutinised it so far so I could be completely off-base there..","date":"2016-09-05T15:55:53.749Z","type":"message"}
{"nick":"parshap","date":"2016-09-05T15:57:49.267Z","type":"join"}
{"nick":"rendar","message":"saghul: write(2) is not thread safe in OSX? really?","date":"2016-09-05T16:03:33.815Z","type":"message"}
{"nick":"saghul","message":"rendar in some cases no, it seems","date":"2016-09-05T16:04:05.163Z","type":"message"}
{"nick":"rendar","message":"this is absurd, i think it violates also POSIX rules","date":"2016-09-05T16:04:18.961Z","type":"message"}
{"nick":"MLM","date":"2016-09-05T16:04:30.406Z","type":"join"}
{"nick":"saghul","message":"jhark kind of, none of the loop APIs are thread-safe except uv_async_send","date":"2016-09-05T16:04:43.832Z","type":"message"}
{"nick":"jhark","message":"mmm; I know that they're definitely not safe as-is.","date":"2016-09-05T16:05:17.482Z","type":"message"}
{"nick":"saghul","message":"rendar be that as it may, we have to deal with it :-S","date":"2016-09-05T16:05:35.097Z","type":"message"}
{"nick":"jhark","message":"it was just that it seemed as though it might be relatively easy to make them safe","date":"2016-09-05T16:05:49.807Z","type":"message"}
{"nick":"saghul","message":"jhark I mean, that's by design, we haven't tried to make them thread-safe","date":"2016-09-05T16:05:56.718Z","type":"message"}
{"nick":"jhark","message":"which could be handy (for me at least)","date":"2016-09-05T16:06:01.482Z","type":"message"}
{"nick":"jhark","message":"Yeah","date":"2016-09-05T16:06:07.130Z","type":"message"}
{"nick":"saghul","message":"some operations might be easy-ish, others not so much, so the current approach is not to declare anything thread-safe","date":"2016-09-05T16:06:50.846Z","type":"message"}
{"nick":"jhark","message":"I was considering making local changes to libuv, or adding my own thread safety external to libuv.","date":"2016-09-05T16:06:51.660Z","type":"message"}
{"nick":"jhark","message":"Yeah, definitely fair","date":"2016-09-05T16:07:02.202Z","type":"message"}
{"nick":"saghul","message":"with the exception of uv_async_Send","date":"2016-09-05T16:07:02.942Z","type":"message"}
{"nick":"saghul","message":"jhark TBH I'm not sure you can make it completely thread-safe from the outside, if you keep the loop running, that is","date":"2016-09-05T16:07:35.975Z","type":"message"}
{"nick":"jhark","message":"If the loop is on a dedicated thread, could other threads not just submit requests to it through some sort of queue? The dedicated thread is then the only thing that would call the uv_ API.","date":"2016-09-05T16:09:09.396Z","type":"message"}
{"nick":"rendar","message":"jhark: you must change some libuv internal architecture to make it thread safe","date":"2016-09-05T16:09:26.577Z","type":"message"}
{"nick":"saghul","message":"jhark yep, that would work","date":"2016-09-05T16:09:48.844Z","type":"message"}
{"nick":"jhark","message":"Good good, thought so :)","date":"2016-09-05T16:10:16.368Z","type":"message"}
{"nick":"saghul","message":"but you'll have to also implement the reverse, in order to process the data from the read callback, for example","date":"2016-09-05T16:10:30.444Z","type":"message"}
{"nick":"jhark","message":"Yes, true","date":"2016-09-05T16:10:41.117Z","type":"message"}
{"nick":"jhark","message":"saghul: Thanks for the help btw :)","date":"2016-09-05T16:16:12.870Z","type":"message"}
{"nick":"saghul","message":"jhark No problemo!","date":"2016-09-05T16:16:48.489Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 244 seconds","date":"2016-09-05T16:20:35.706Z","type":"quit"}
{"nick":"seishun","date":"2016-09-05T16:23:52.250Z","type":"join"}
{"nick":"avalanche123","date":"2016-09-05T16:54:37.711Z","type":"join"}
{"nick":"saghul","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-09-05T16:58:33.920Z","type":"quit"}
{"nick":"avalanche123","reason":"Ping timeout: 252 seconds","date":"2016-09-05T16:58:59.005Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 244 seconds","date":"2016-09-05T17:25:41.651Z","type":"quit"}
{"nick":"seishun","date":"2016-09-05T18:02:04.219Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 244 seconds","date":"2016-09-05T19:52:25.661Z","type":"quit"}
{"nick":"Ralith__","date":"2016-09-05T20:05:09.879Z","type":"join"}
{"nick":"rgrinberg","reason":"*.net *.split","date":"2016-09-05T20:10:13.459Z","type":"quit"}
{"nick":"rendar","reason":"*.net *.split","date":"2016-09-05T20:10:13.580Z","type":"quit"}
{"nick":"Ralith_","reason":"*.net *.split","date":"2016-09-05T20:10:13.580Z","type":"quit"}
{"nick":"txdv","reason":"*.net *.split","date":"2016-09-05T20:10:13.664Z","type":"quit"}
{"nick":"bzoz","reason":"*.net *.split","date":"2016-09-05T20:10:13.664Z","type":"quit"}
{"nick":"dagobert________","reason":"*.net *.split","date":"2016-09-05T20:10:13.748Z","type":"quit"}
{"nick":"kellabyte","reason":"*.net *.split","date":"2016-09-05T20:10:13.857Z","type":"quit"}
{"nick":"bzoz","date":"2016-09-05T20:12:05.868Z","type":"join"}
{"nick":"dagobert________","date":"2016-09-05T20:12:05.988Z","type":"join"}
{"nick":"kellabyte","date":"2016-09-05T20:12:05.988Z","type":"join"}
{"nick":"txdv","date":"2016-09-05T20:12:18.413Z","type":"join"}
{"nick":"dagobert________","reason":"Ping timeout: 243 seconds","date":"2016-09-05T20:12:22.837Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-09-05T20:13:24.717Z","type":"join"}
{"nick":"dagobert________","date":"2016-09-05T20:24:53.381Z","type":"join"}
{"nick":"avalanche123","date":"2016-09-05T20:30:55.058Z","type":"join"}
{"nick":"creationix_","reason":"Ping timeout: 240 seconds","date":"2016-09-05T20:33:03.783Z","type":"quit"}
{"nick":"rendar","date":"2016-09-05T20:34:19.205Z","type":"join"}
{"nick":"avalanche123","reason":"Ping timeout: 265 seconds","date":"2016-09-05T20:35:25.331Z","type":"quit"}
{"nick":"tunniclm_","date":"2016-09-05T20:42:46.506Z","type":"join"}
{"nick":"creationix_","date":"2016-09-05T21:43:51.343Z","type":"join"}
{"nick":"avalanche123","date":"2016-09-05T21:52:49.531Z","type":"join"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2016-09-05T21:58:13.866Z","type":"quit"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2016-09-05T22:08:01.542Z","type":"quit"}
{"nick":"avalanche123","date":"2016-09-05T22:08:27.490Z","type":"join"}
{"nick":"avalanche123","reason":"Ping timeout: 255 seconds","date":"2016-09-05T22:13:13.214Z","type":"quit"}
{"nick":"avalanche123","date":"2016-09-05T22:14:04.676Z","type":"join"}
{"nick":"rgrinberg","reason":"Ping timeout: 250 seconds","date":"2016-09-05T22:26:09.025Z","type":"quit"}
{"nick":"daurnimator","reason":"Remote host closed the connection","date":"2016-09-05T22:50:30.831Z","type":"quit"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2016-09-05T23:16:23.429Z","type":"quit"}
{"nick":"brson","date":"2016-09-05T23:32:40.585Z","type":"join"}
{"nick":"Jacob843","reason":"Remote host closed the connection","date":"2016-09-05T23:43:20.858Z","type":"quit"}
{"nick":"Jacob843","date":"2016-09-05T23:46:39.216Z","type":"join"}
