{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-03-27T00:00:01.493Z","type":"quit"}
{"nick":"ircretary","date":"2013-03-27T00:00:08.454Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-27T00:09:33.666Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-27T00:10:00.832Z","type":"join"}
{"nick":"c4milo_","date":"2013-03-27T00:12:37.011Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-27T00:12:39.262Z","type":"quit"}
{"nick":"trevnorris","reason":"Quit: Leaving","date":"2013-03-27T00:13:22.693Z","type":"quit"}
{"nick":"c4milo_","reason":"Remote host closed the connection","date":"2013-03-27T00:24:34.916Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-27T00:25:00.826Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-03-27T00:25:27.834Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-27T00:25:46.136Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 272 seconds","date":"2013-03-27T00:34:36.662Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-27T00:49:21.859Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-27T01:00:35.681Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-03-27T01:00:41.732Z","type":"nick"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-27T01:05:37.329Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-27T01:06:03.731Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 252 seconds","date":"2013-03-27T01:10:57.112Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-27T01:11:05.109Z","type":"join"}
{"nick":"kazupon","date":"2013-03-27T01:23:34.075Z","type":"join"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-03-27T01:24:41.122Z","type":"quit"}
{"nick":"abraxas","date":"2013-03-27T01:37:54.499Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-03-27T01:42:27.552Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 248 seconds","date":"2013-03-27T01:49:57.880Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-27T01:53:39.055Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-27T01:54:06.302Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-27T01:55:51.140Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 252 seconds","date":"2013-03-27T01:58:48.134Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-03-27T02:17:39.037Z","type":"quit"}
{"nick":"dominictarr","date":"2013-03-27T02:22:14.561Z","type":"join"}
{"nick":"erickt","date":"2013-03-27T02:28:24.906Z","type":"join"}
{"nick":"brson","date":"2013-03-27T02:37:01.164Z","type":"join"}
{"nick":"c4milo","date":"2013-03-27T02:39:33.414Z","type":"join"}
{"nick":"kazupon","date":"2013-03-27T02:40:04.734Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-27T02:46:15.609Z","type":"quit"}
{"nick":"brson_","date":"2013-03-27T02:48:30.732Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 252 seconds","date":"2013-03-27T02:49:24.138Z","type":"quit"}
{"nick":"hz","date":"2013-03-27T02:51:19.084Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-27T02:55:20.750Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-27T02:55:46.777Z","type":"join"}
{"nick":"c4milo","reason":"Read error: No route to host","date":"2013-03-27T02:56:39.469Z","type":"quit"}
{"nick":"mikeal","date":"2013-03-27T03:55:39.824Z","type":"join"}
{"nick":"kazupon","date":"2013-03-27T03:57:51.794Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-03-27T03:59:31.420Z","type":"quit"}
{"nick":"alex_r","date":"2013-03-27T04:06:56.673Z","type":"join"}
{"nick":"tjfontaine","message":"isaacs: I do wonder when your patience for #5149 will finally wear off","date":"2013-03-27T04:25:09.524Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Trevor Norris\u000f \u00037v0.10\u000f * \u0002f0b6889\u0002 : domain: fix domain callback from MakeCallback  Since _tickCallback and _t - http://git.io/xvVohA","date":"2013-03-27T04:26:33.687Z","type":"message"}
{"nick":"alex_r","date":"2013-03-27T04:28:59.669Z","type":"part"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-27T04:29:53.439Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-27T04:32:10.086Z","type":"join"}
{"nick":"isaacs","message":"tjfontaine: years of wrestling with web browsers taught me interminable patience.","date":"2013-03-27T04:37:04.245Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-03-27T04:37:23.835Z","type":"message"}
{"nick":"loladiro","date":"2013-03-27T04:38:10.717Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #74 \u00037UNSTABLE\u000f linux-x64 (1/568) windows-x64 (5/568) osx-ia32 (3/568) smartos-ia32 (1/568) windows-ia32 (5/568) http://jenkins.nodejs.org/job/nodejs-v0.10/74/","date":"2013-03-27T04:43:14.639Z","type":"message"}
{"nick":"tjfontaine","message":"hmm","date":"2013-03-27T04:43:27.699Z","type":"message"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-03-27T04:44:05.802Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-27T04:44:16.606Z","type":"join"}
{"nick":"c4milo","date":"2013-03-27T04:47:01.045Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-27T04:50:05.507Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-27T04:53:26.029Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-27T05:10:37.035Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-27T05:10:41.410Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-27T05:20:11.702Z","type":"quit"}
{"nick":"brson_","reason":"Ping timeout: 264 seconds","date":"2013-03-27T05:24:48.629Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-27T05:34:45.613Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-27T05:39:13.488Z","type":"join"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-03-27T05:51:18.757Z","type":"nick"}
{"nick":"bradleymeck","date":"2013-03-27T05:51:49.740Z","type":"join"}
{"nick":"loladiro","date":"2013-03-27T05:52:59.609Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-03-27T05:55:10.165Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-27T06:14:17.479Z","type":"quit"}
{"nick":"trevnorris","date":"2013-03-27T06:16:27.891Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-27T06:35:22.437Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-27T06:40:43.808Z","type":"join"}
{"nick":"mikeal","date":"2013-03-27T06:45:27.559Z","type":"join"}
{"nick":"paddybyers","date":"2013-03-27T06:49:39.620Z","type":"join"}
{"nick":"wolfeidau","date":"2013-03-27T07:01:56.723Z","type":"join"}
{"nick":"rendar","date":"2013-03-27T07:19:48.886Z","type":"join"}
{"nick":"`3rdEden","date":"2013-03-27T07:33:49.511Z","type":"join"}
{"nick":"trevnorris","reason":"Quit: Leaving","date":"2013-03-27T07:41:24.889Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Fedor Indutny\u000f \u00037v0.10\u000f * \u000228c6e42\u0002 : openssl: disable HEARTBEAT TLS extension  Microsoft's IIS doesn't support - http://git.io/pJ8b9Q","date":"2013-03-27T07:41:31.313Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #75 \u00037UNSTABLE\u000f windows-x64 (5/568) osx-ia32 (2/568) smartos-ia32 (1/568) windows-ia32 (4/568) linux-ia32 (1/568) http://jenkins.nodejs.org/job/nodejs-v0.10/75/","date":"2013-03-27T07:57:46.262Z","type":"message"}
{"nick":"paddybyers","reason":"Ping timeout: 264 seconds","date":"2013-03-27T08:03:48.844Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-03-27T08:05:19.959Z","type":"nick"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-27T08:05:34.102Z","type":"quit"}
{"nick":"indutny","message":"morning","date":"2013-03-27T08:20:15.203Z","type":"message"}
{"nick":"indutny","message":"isaacs: yt?","date":"2013-03-27T08:20:19.782Z","type":"message"}
{"nick":"indutny","message":"anyone? :)","date":"2013-03-27T08:20:44.734Z","type":"message"}
{"nick":"indutny","message":"with reviewing powers","date":"2013-03-27T08:20:52.336Z","type":"message"}
{"nick":"paddybyers","date":"2013-03-27T08:28:28.761Z","type":"join"}
{"nick":"trevnorris","date":"2013-03-27T08:30:01.940Z","type":"join"}
{"nick":"csaoh","date":"2013-03-27T08:31:03.631Z","type":"join"}
{"nick":"CoverSlide","reason":"Ping timeout: 264 seconds","date":"2013-03-27T08:41:00.747Z","type":"quit"}
{"nick":"CoverSlide","date":"2013-03-27T08:42:13.194Z","type":"join"}
{"nick":"dominictarr","date":"2013-03-27T09:09:59.863Z","type":"join"}
{"nick":"dominictarr","reason":"Client Quit","date":"2013-03-27T09:10:05.095Z","type":"quit"}
{"nick":"trevnorris","message":"indutny: how's it going?","date":"2013-03-27T09:30:40.456Z","type":"message"}
{"nick":"stagas","reason":"Ping timeout: 256 seconds","date":"2013-03-27T09:41:07.965Z","type":"quit"}
{"nick":"indutny","message":"good","date":"2013-03-27T09:46:02.663Z","type":"message"}
{"nick":"trevnorris","message":"think I figured out that persistent storage thing. doesn't help much through. https://gist.github.com/trevnorris/5252962","date":"2013-03-27T09:47:35.282Z","type":"message"}
{"nick":"trevnorris","message":"basically it clears the Object handle the Persistent points to, but the space allocated to the persistent can be reused.","date":"2013-03-27T09:47:57.472Z","type":"message"}
{"nick":"trevnorris","message":"(the relevant code is in the /* debug */ tags)","date":"2013-03-27T09:48:25.317Z","type":"message"}
{"nick":"dominictarr","date":"2013-03-27T09:58:16.516Z","type":"join"}
{"nick":"trevnorris","message":"indutny: also looks like there's some new unstable functionality in 3.17.x that might come in use later on.","date":"2013-03-27T10:04:37.710Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-27T10:14:41.128Z","type":"quit"}
{"nick":"indutny","message":"what apis?","date":"2013-03-27T10:14:41.775Z","type":"message"}
{"nick":"philips","reason":"Excess Flood","date":"2013-03-27T10:15:24.484Z","type":"quit"}
{"nick":"philips","date":"2013-03-27T10:17:05.566Z","type":"join"}
{"nick":"trevnorris","message":"indutny: freak yeah! you can reuse a persistent: https://gist.github.com/trevnorris/5252962","date":"2013-03-27T10:20:11.973Z","type":"message"}
{"nick":"trevnorris","message":"line 66, i'm just reassigning the pointer to the old one.","date":"2013-03-27T10:20:40.629Z","type":"message"}
{"nick":"trevnorris","message":"ah, crap. hold on.","date":"2013-03-27T10:21:33.745Z","type":"message"}
{"nick":"trevnorris","message":"man, this is what I get for programming until 3:30am...","date":"2013-03-27T10:21:43.142Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-03-27T10:21:55.291Z","type":"message"}
{"nick":"trevnorris","message":"ok. updated it. still works.","date":"2013-03-27T10:23:42.178Z","type":"message"}
{"nick":"trevnorris","message":"so you _can_ reuse old handles.","date":"2013-03-27T10:23:53.513Z","type":"message"}
{"nick":"trevnorris","message":"that is, unless i don't understand why this example actually works (which is entirely possible =)","date":"2013-03-27T10:26:07.539Z","type":"message"}
{"nick":"philips","reason":"Excess Flood","date":"2013-03-27T10:28:26.296Z","type":"quit"}
{"nick":"trevnorris","message":"well. off to bed. glad there's someone here to my late night ramblings.","date":"2013-03-27T10:28:53.990Z","type":"message"}
{"nick":"trevnorris","reason":"Quit: Leaving","date":"2013-03-27T10:28:55.485Z","type":"quit"}
{"nick":"indutny","message":"sleep tight","date":"2013-03-27T10:29:06.767Z","type":"message"}
{"nick":"philips","date":"2013-03-27T10:29:51.333Z","type":"join"}
{"nick":"philips","reason":"Excess Flood","date":"2013-03-27T10:41:14.589Z","type":"quit"}
{"nick":"philips","date":"2013-03-27T10:41:24.031Z","type":"join"}
{"nick":"philips","reason":"Excess Flood","date":"2013-03-27T10:59:28.700Z","type":"quit"}
{"nick":"philips","date":"2013-03-27T11:01:10.567Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-03-27T11:09:24.907Z","type":"join"}
{"nick":"philips","reason":"Excess Flood","date":"2013-03-27T11:09:43.561Z","type":"quit"}
{"nick":"philips","date":"2013-03-27T11:11:26.189Z","type":"join"}
{"nick":"Kakera","date":"2013-03-27T11:15:30.995Z","type":"join"}
{"nick":"philips","reason":"Excess Flood","date":"2013-03-27T11:17:28.700Z","type":"quit"}
{"nick":"sgallagh","date":"2013-03-27T11:18:09.215Z","type":"join"}
{"nick":"philips","date":"2013-03-27T11:19:12.576Z","type":"join"}
{"nick":"kazupon","date":"2013-03-27T11:24:59.113Z","type":"join"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-03-27T11:25:10.813Z","type":"quit"}
{"nick":"philips","reason":"Excess Flood","date":"2013-03-27T11:25:16.917Z","type":"quit"}
{"nick":"bnoordhuis","message":"it pains me that all those tls fixes add more conditionals everywhere","date":"2013-03-27T11:26:13.412Z","type":"message"}
{"nick":"philips","date":"2013-03-27T11:26:59.345Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2013-03-27T11:29:34.890Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: while you're at it: https://github.com/joyent/node/issues/5145","date":"2013-03-27T11:31:04.311Z","type":"message"}
{"nick":"indutny","message":"hey ben","date":"2013-03-27T11:32:52.709Z","type":"message"}
{"nick":"indutny","message":"I seen it","date":"2013-03-27T11:32:59.799Z","type":"message"}
{"nick":"indutny","message":"would you mind pulling this in https://github.com/joyent/node/pull/5152 ?","date":"2013-03-27T11:33:09.341Z","type":"message"}
{"nick":"indutny","message":"v0.8 might be affected, but I doubt so","date":"2013-03-27T11:33:27.215Z","type":"message"}
{"nick":"indutny","message":"no","date":"2013-03-27T11:34:06.904Z","type":"message"}
{"nick":"indutny","message":"it doesn't affected","date":"2013-03-27T11:34:09.752Z","type":"message"}
{"nick":"bnoordhuis","message":"it's not","date":"2013-03-27T11:34:41.147Z","type":"message"}
{"nick":"bnoordhuis","message":"so i wonder why v0.10 is","date":"2013-03-27T11:34:45.691Z","type":"message"}
{"nick":"indutny","message":"because I'm calling internallyPendingBytes","date":"2013-03-27T11:36:32.993Z","type":"message"}
{"nick":"indutny","message":"after clearIn","date":"2013-03-27T11:36:35.779Z","type":"message"}
{"nick":"indutny","message":"without checking ssl.error","date":"2013-03-27T11:36:39.067Z","type":"message"}
{"nick":"bnoordhuis","message":"what does v0.8 do differently?","date":"2013-03-27T11:37:15.759Z","type":"message"}
{"nick":"bnoordhuis","message":"it has internallyPendingBytes checks right?","date":"2013-03-27T11:37:28.161Z","type":"message"}
{"nick":"indutny","message":"yep","date":"2013-03-27T11:37:31.881Z","type":"message"}
{"nick":"indutny","message":"but only in clearOut","date":"2013-03-27T11:37:34.170Z","type":"message"}
{"nick":"indutny","message":"0.8","date":"2013-03-27T11:37:42.392Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Benjamin Ruston\u000f \u00037v0.10\u000f * \u0002372911f\u0002 : doc: addon: fix grammar - http://git.io/CGCt3Q","date":"2013-03-27T11:38:15.597Z","type":"message"}
{"nick":"bnoordhuis","message":"okay. so why does v0.10 do it in clearIn?","date":"2013-03-27T11:38:28.707Z","type":"message"}
{"nick":"bnoordhuis","message":"don't say streams2 or i'll cry","date":"2013-03-27T11:38:40.190Z","type":"message"}
{"nick":"bnoordhuis","message":"^ that patch. fix whitespace errors, reword the commit log and change the author's name","date":"2013-03-27T11:39:40.826Z","type":"message"}
{"nick":"bnoordhuis","message":"all for a single word fix","date":"2013-03-27T11:39:45.942Z","type":"message"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-03-27T11:39:57.058Z","type":"quit"}
{"nick":"indutny","message":":)","date":"2013-03-27T11:40:05.083Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: streams2","date":"2013-03-27T11:40:16.164Z","type":"message"}
{"nick":"indutny","message":"well, its here for performance reasons","date":"2013-03-27T11:40:26.876Z","type":"message"}
{"nick":"indutny","message":"anyway","date":"2013-03-27T11:40:42.791Z","type":"message"}
{"nick":"indutny","message":"LGTY?","date":"2013-03-27T11:40:44.150Z","type":"message"}
{"nick":"bnoordhuis","message":"well... i have a feeling all those tls fixes are bandaid for a deeper problem","date":"2013-03-27T11:42:06.097Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm trying to figure out what it is","date":"2013-03-27T11:42:26.255Z","type":"message"}
{"nick":"hz","date":"2013-03-27T11:45:20.788Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-03-27T11:45:29.048Z","type":"nick"}
{"nick":"c4milo","date":"2013-03-27T11:45:54.144Z","type":"join"}
{"nick":"AvianFlu","date":"2013-03-27T11:46:00.304Z","type":"join"}
{"nick":"indutny","message":"wut?","date":"2013-03-27T11:46:03.691Z","type":"message"}
{"nick":"indutny","message":"I","date":"2013-03-27T11:47:00.809Z","type":"message"}
{"nick":"indutny","message":"I'm sure its not bandaid","date":"2013-03-27T11:47:07.747Z","type":"message"}
{"nick":"indutny","message":"its just my mistake","date":"2013-03-27T11:47:09.953Z","type":"message"}
{"nick":"indutny","message":"but...","date":"2013-03-27T11:47:13.515Z","type":"message"}
{"nick":"indutny","message":"we could probably do it in another way","date":"2013-03-27T11:47:24.387Z","type":"message"}
{"nick":"indutny","message":"by calling .onerror instead of setting `error` property","date":"2013-03-27T11:47:47.710Z","type":"message"}
{"nick":"indutny","message":"but I think it'll complicate a lot of logic","date":"2013-03-27T11:47:54.927Z","type":"message"}
{"nick":"indutny","message":"or just break things","date":"2013-03-27T11:48:02.993Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: so lets just stick with what we've now","date":"2013-03-27T11:48:11.866Z","type":"message"}
{"nick":"indutny","message":"lgty I guess?","date":"2013-03-27T11:48:16.442Z","type":"message"}
{"nick":"bnoordhuis","message":"the thing is, most recent bug fixes to tls.js consist of `if (condition) do_this_one_thing();`","date":"2013-03-27T11:48:22.850Z","type":"message"}
{"nick":"bnoordhuis","message":"and a few lines down there's usually a `if (!condition) do_this_other_thing();`","date":"2013-03-27T11:48:38.929Z","type":"message"}
{"nick":"indutny","message":"erm...","date":"2013-03-27T11:48:45.124Z","type":"message"}
{"nick":"bnoordhuis","message":"fixes like that set off my programmer spider sense","date":"2013-03-27T11:48:51.832Z","type":"message"}
{"nick":"indutny","message":"can you say this about this patch?","date":"2013-03-27T11:48:52.646Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ok, you can recommend anything else?","date":"2013-03-27T11:49:03.199Z","type":"message"}
{"nick":"bnoordhuis","message":"i would start by identifying what changed between v0.8 and v0.10","date":"2013-03-27T11:49:38.681Z","type":"message"}
{"nick":"bnoordhuis","message":"then figuring out why it's breaking things that weren't broken before","date":"2013-03-27T11:49:56.250Z","type":"message"}
{"nick":"csaoh","date":"2013-03-27T11:50:24.855Z","type":"join"}
{"nick":"bnoordhuis","message":"indutny: f.e. 008ab12b7facea8ac4a718894044963e3b4ee901 <- no doubt there is a better solution","date":"2013-03-27T11:50:55.322Z","type":"message"}
{"nick":"indutny","message":"ah this is fucking weird stuff","date":"2013-03-27T11:52:20.634Z","type":"message"}
{"nick":"indutny","message":"and the problem is outside tls scope","date":"2013-03-27T11:52:26.003Z","type":"message"}
{"nick":"indutny","message":"its just net.js hacks and streams2","date":"2013-03-27T11:52:33.041Z","type":"message"}
{"nick":"indutny","message":"isaacs is already aware of it","date":"2013-03-27T11:52:41.011Z","type":"message"}
{"nick":"indutny","message":"and we should fix it in 0.12","date":"2013-03-27T11:52:47.929Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #76 \u00037UNSTABLE\u000f linux-x64 (1/568) windows-x64 (5/568) osx-ia32 (3/568) smartos-x64 (1/568) smartos-ia32 (1/568) windows-ia32 (4/568) http://jenkins.nodejs.org/job/nodejs-v0.10/76/","date":"2013-03-27T11:54:27.516Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-27T11:57:22.746Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-27T11:57:48.487Z","type":"join"}
{"nick":"roxlu","date":"2013-03-27T11:59:02.343Z","type":"join"}
{"nick":"roxlu","message":"hi guys!","date":"2013-03-27T11:59:08.779Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-27T11:59:26.556Z","type":"quit"}
{"nick":"indutny","message":"hi roxlu","date":"2013-03-27T12:00:35.178Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: so lgty?","date":"2013-03-27T12:00:39.471Z","type":"message"}
{"nick":"indutny","message":"idk","date":"2013-03-27T12:00:44.406Z","type":"message"}
{"nick":"indutny","message":"it doesn't look like we should ignore this issue","date":"2013-03-27T12:00:53.182Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: you said \"its just my mistake\". what commit introduced that bug?","date":"2013-03-27T12:20:51.059Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: the commit which ported tls to streams2?","date":"2013-03-27T12:21:14.728Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-03-27T12:21:16.599Z","type":"message"}
{"nick":"stagas","date":"2013-03-27T12:21:55.355Z","type":"join"}
{"nick":"indutny","message":"ok, considering that I haven't heard any objections","date":"2013-03-27T12:25:52.835Z","type":"message"}
{"nick":"indutny","message":"its worth pulling into","date":"2013-03-27T12:25:57.571Z","type":"message"}
{"nick":"bnoordhuis","message":"why did the streams2-ification introduce that bug?","date":"2013-03-27T12:26:26.058Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Fedor Indutny\u000f \u00037v0.10\u000f * \u0002ae86fa8\u0002 : tls: handle errors before calling C++ methods  Calling `this.pair.encrypt - http://git.io/VTHyqA","date":"2013-03-27T12:26:35.455Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ^^","date":"2013-03-27T12:26:41.713Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: because I've moved code around","date":"2013-03-27T12:26:50.001Z","type":"message"}
{"nick":"indutny","message":"and added some micro-optimizations for streams2","date":"2013-03-27T12:26:56.866Z","type":"message"}
{"nick":"indutny","message":"for example that pendingBytes check","date":"2013-03-27T12:27:06.234Z","type":"message"}
{"nick":"indutny","message":"which was put before the error check","date":"2013-03-27T12:27:16.536Z","type":"message"}
{"nick":"bnoordhuis","message":":-/","date":"2013-03-27T12:27:17.743Z","type":"message"}
{"nick":"indutny","message":"basically, my mistake","date":"2013-03-27T12:27:30.497Z","type":"message"}
{"nick":"indutny","message":"That's negative thinking, sir","date":"2013-03-27T12:27:59.411Z","type":"message"}
{"nick":"indutny","message":"new bugs are always introduced","date":"2013-03-27T12:28:03.475Z","type":"message"}
{"nick":"bnoordhuis","message":"well, i'll grant you that the diffstat with v0.8 is <10 lines added","date":"2013-03-27T12:29:02.667Z","type":"message"}
{"nick":"indutny","message":"huh?","date":"2013-03-27T12:31:28.152Z","type":"message"}
{"nick":"indutny","message":"impossible","date":"2013-03-27T12:31:31.056Z","type":"message"}
{"nick":"indutny","message":" lib/tls.js | 666 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-----------------------------------------------------------------------------------------------------------","date":"2013-03-27T12:32:16.593Z","type":"message"}
{"nick":"indutny","message":" 1 file changed, 280 insertions(+), 386 deletions(-)","date":"2013-03-27T12:32:16.805Z","type":"message"}
{"nick":"c4milo","date":"2013-03-27T12:32:20.044Z","type":"join"}
{"nick":"indutny","message":"git show --stat d59beb9f686578a3c34606cba294df0fb7d844a9","date":"2013-03-27T12:32:25.446Z","type":"message"}
{"nick":"indutny","message":"well, I can hardly say this is 10 lines added","date":"2013-03-27T12:32:40.459Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: try git diff --stat origin/v0.8..HEAD -- lib/tls.js","date":"2013-03-27T12:32:42.995Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-03-27T12:33:01.410Z","type":"message"}
{"nick":"indutny","message":"its not the same","date":"2013-03-27T12:33:03.737Z","type":"message"}
{"nick":"indutny","message":"there're a lot of removed lines","date":"2013-03-27T12:33:08.913Z","type":"message"}
{"nick":"indutny","message":"1 file changed, 427 insertions(+), 419 deletions(-)","date":"2013-03-27T12:33:14.028Z","type":"message"}
{"nick":"indutny","message":"its not like insertions - deletions :)","date":"2013-03-27T12:33:22.555Z","type":"message"}
{"nick":"bnoordhuis","message":"it was a firmly tongue in cheek comment","date":"2013-03-27T12:33:48.928Z","type":"message"}
{"nick":"indutny","message":"oh gosh","date":"2013-03-27T12:34:16.414Z","type":"message"}
{"nick":"indutny","message":"didn't get it, sorry","date":"2013-03-27T12:34:21.919Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #77 \u00037UNSTABLE\u000f windows-x64 (5/569) osx-ia32 (2/569) smartos-ia32 (1/569) windows-ia32 (6/569) linux-ia32 (1/569) http://jenkins.nodejs.org/job/nodejs-v0.10/77/","date":"2013-03-27T12:43:29.455Z","type":"message"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-03-27T13:03:32.304Z","type":"nick"}
{"nick":"loladiro","date":"2013-03-27T13:07:25.337Z","type":"join"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2013-03-27T13:13:40.706Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-03-27T13:14:15.339Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-27T13:26:42.608Z","type":"quit"}
{"nick":"Kakera","reason":"Ping timeout: 246 seconds","date":"2013-03-27T13:30:44.149Z","type":"quit"}
{"nick":"erickt","reason":"Quit: erickt","date":"2013-03-27T13:45:56.870Z","type":"quit"}
{"nick":"qmx","new_nick":"qmx|afk","date":"2013-03-27T13:51:59.050Z","type":"nick"}
{"nick":"erickt","date":"2013-03-27T14:03:47.166Z","type":"join"}
{"nick":"Kakera","date":"2013-03-27T14:06:23.928Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-27T14:26:46.202Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-27T14:27:12.381Z","type":"join"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2013-03-27T14:29:00.685Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-03-27T14:29:33.991Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 245 seconds","date":"2013-03-27T14:31:48.167Z","type":"quit"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2013-03-27T14:32:41.924Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-03-27T14:33:18.409Z","type":"join"}
{"nick":"qmx|afk","new_nick":"qmx","date":"2013-03-27T14:33:34.346Z","type":"nick"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-27T14:39:06.714Z","type":"quit"}
{"nick":"erickt","reason":"Quit: erickt","date":"2013-03-27T14:44:18.895Z","type":"quit"}
{"nick":"isaacs","message":"good morning","date":"2013-03-27T14:50:52.134Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis, indutny: yes, that fake _handle thing is utter trash.","date":"2013-03-27T14:51:07.237Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: sometimes you can't jump all the way up the mountain at once.","date":"2013-03-27T14:51:23.745Z","type":"message"}
{"nick":"isaacs","message":"ircretary: tell trevnorris Check this out https://groups.google.com/forum/?hl=en&fromgroups=#!topic/v8-users/6kSAbnUb-rQ","date":"2013-03-27T14:54:22.568Z","type":"message"}
{"nick":"ircretary","message":"isaacs: I'll be sure to tell trevnorris","date":"2013-03-27T14:54:23.233Z","type":"message"}
{"nick":"isaacs","message":"also indutny, bnoordhuis: https://groups.google.com/forum/?hl=en&fromgroups=#!topic/v8-users/6kSAbnUb-rQ","date":"2013-03-27T14:54:33.217Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 248 seconds","date":"2013-03-27T14:55:33.882Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-27T14:56:24.373Z","type":"join"}
{"nick":"nsm","date":"2013-03-27T14:58:35.993Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-03-27T15:12:26.234Z","type":"join"}
{"nick":"isaacs","message":"can one of the admins review this patch? https://github.com/joyent/node/pull/5148","date":"2013-03-27T15:31:16.147Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-03-27T15:34:47.713Z","type":"join"}
{"nick":"bnoordhuis","message":"isaacs: interesting (re: v8-users post)","date":"2013-03-27T15:39:01.555Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess i should subscribe again","date":"2013-03-27T15:39:14.201Z","type":"message"}
{"nick":"isaacs","message":":)","date":"2013-03-27T15:39:31.024Z","type":"message"}
{"nick":"isaacs","message":"i'm subscribed but i dont' ever look in that box.","date":"2013-03-27T15:39:44.546Z","type":"message"}
{"nick":"isaacs","message":"i just pipe it to a gmail tag so that i can search it if i ever need to find something, since google groups' search is worthless.","date":"2013-03-27T15:40:01.894Z","type":"message"}
{"nick":"mikeal","date":"2013-03-27T15:43:37.422Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-03-27T15:47:31.515Z","type":"quit"}
{"nick":"bnoordhuis","message":"i looked at #5148 but it's all greek to me, frankly","date":"2013-03-27T15:48:01.199Z","type":"message"}
{"nick":"mikeal","date":"2013-03-27T16:02:50.025Z","type":"join"}
{"nick":"tjfontaine","message":"good day good sirs","date":"2013-03-27T16:03:42.789Z","type":"message"}
{"nick":"bnoordhuis","message":"sup tj?","date":"2013-03-27T16:10:36.393Z","type":"message"}
{"nick":"tjfontaine","message":"if I only knew","date":"2013-03-27T16:10:56.210Z","type":"message"}
{"nick":"dap","date":"2013-03-27T16:11:24.918Z","type":"join"}
{"nick":"indutny","message":"sup","date":"2013-03-27T16:11:31.110Z","type":"message"}
{"nick":"tjfontaine","message":"just thinking about #3584","date":"2013-03-27T16:12:53.421Z","type":"message"}
{"nick":"kazupon","date":"2013-03-27T16:15:48.260Z","type":"join"}
{"nick":"bnoordhuis","message":"tjfontaine: well, it's documented behavior now","date":"2013-03-27T16:17:03.319Z","type":"message"}
{"nick":"bnoordhuis","message":"and it works the same on unix","date":"2013-03-27T16:17:08.706Z","type":"message"}
{"nick":"tjfontaine","message":"stderr not being flushed on windows?","date":"2013-03-27T16:17:23.561Z","type":"message"}
{"nick":"bnoordhuis","message":"i thought #3584 was about the blocking/non-blocking nature of stdio depending on what kind of object it is?","date":"2013-03-27T16:17:54.535Z","type":"message"}
{"nick":"tjfontaine","message":"perhaps","date":"2013-03-27T16:18:13.481Z","type":"message"}
{"nick":"trevnorris","date":"2013-03-27T16:18:34.228Z","type":"join"}
{"nick":"bnoordhuis","message":"tjfontaine: i'm intrigued now. what do you think it's about?","date":"2013-03-27T16:20:35.820Z","type":"message"}
{"nick":"tjfontaine","message":"making my life hell :)","date":"2013-03-27T16:20:44.205Z","type":"message"}
{"nick":"bnoordhuis","message":"i once did a course in comparative literature so my interest is piqued now","date":"2013-03-27T16:20:51.725Z","type":"message"}
{"nick":"bnoordhuis","message":"also, interpretive dance. but let's not talk about that now","date":"2013-03-27T16:21:34.757Z","type":"message"}
{"nick":"tjfontaine","message":"that one is more interesting ot me","date":"2013-03-27T16:21:43.130Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: that is freakin awesome","date":"2013-03-27T16:22:07.491Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: it is possible to reuse a persistent handle: https://gist.github.com/trevnorris/5252962","date":"2013-03-27T16:22:22.383Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: the v8 thing?  yeah, i thought you'd be psyched about that.","date":"2013-03-27T16:22:53.317Z","type":"message"}
{"nick":"isaacs","message":"or at least, interested :)","date":"2013-03-27T16:22:58.282Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: what line should i look at?","date":"2013-03-27T16:22:58.497Z","type":"message"}
{"nick":"tjfontaine","message":"anyway I was looking yesterday at test-stream2-stderr-sync on windows, and discussed with isaacs briefly about if it's a bug in when close is raised, or the blocking issue, and then most of the night I was thinking about that as well","date":"2013-03-27T16:23:09.035Z","type":"message"}
{"nick":"tjfontaine","message":"the 3584 issue anyway I mean","date":"2013-03-27T16:23:53.828Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: line 64. i'm assigning from a pointer of a previously used persistent.","date":"2013-03-27T16:23:56.199Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: yeah. I want to give that guy a big hug.","date":"2013-03-27T16:24:06.088Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: be careful what you ask for, you just might get it","date":"2013-03-27T16:24:39.109Z","type":"message"}
{"nick":"bnoordhuis","message":"you know he never showers?","date":"2013-03-27T16:24:43.782Z","type":"message"}
{"nick":"trevnorris","message":"lol","date":"2013-03-27T16:24:52.562Z","type":"message"}
{"nick":"isaacs","message":"can we just set fire to os x ia32?","date":"2013-03-27T16:25:25.574Z","type":"message"}
{"nick":"tjfontaine","message":"in which regard?","date":"2013-03-27T16:25:32.188Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: re your question, you're assigning it the address of a stack variable","date":"2013-03-27T16:25:47.359Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: ask me what's wrong with that","date":"2013-03-27T16:25:59.737Z","type":"message"}
{"nick":"trevnorris","message":"what's wrong w/ that?","date":"2013-03-27T16:26:09.246Z","type":"message"}
{"nick":"bnoordhuis","message":"EVERYTHING","date":"2013-03-27T16:26:16.810Z","type":"message"}
{"nick":"bnoordhuis","message":"(cue LOUDBOT)","date":"2013-03-27T16:26:21.818Z","type":"message"}
{"nick":"tjfontaine","message":"LOUDBOT: hello","date":"2013-03-27T16:26:29.304Z","type":"message"}
{"nick":"LOUDBOT","message":"tjfontaine: MY KIDNEYS ARE NOT FOR SALE I'M SORRY THAT THAT UPSET YOU BUT I NEED ALL FIVE OF THEM","date":"2013-03-27T16:26:29.528Z","type":"message"}
{"nick":"bnoordhuis","message":"TWO WORDS?","date":"2013-03-27T16:26:42.897Z","type":"message"}
{"nick":"LOUDBOT","message":"IT'S A TILE YOU HAVE SEX ON. YOU KNOW, A SEXTILE.","date":"2013-03-27T16:26:43.105Z","type":"message"}
{"nick":"bnoordhuis","message":"right","date":"2013-03-27T16:26:49.612Z","type":"message"}
{"nick":"tjfontaine","action":"!","date":"2013-03-27T16:26:51.245Z","type":"action"}
{"nick":"LOUDBOT","message":"YA KNOW THEY MURDERED X AND TRIED TO BLAME IT ON ISLAM","date":"2013-03-27T16:26:51.455Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: once the function returns, the address is no longer valid","date":"2013-03-27T16:27:19.729Z","type":"message"}
{"nick":"bnoordhuis","message":"because the stack frame is effectively blown away","date":"2013-03-27T16:27:27.927Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: well... either that or make the tests pass on it :)","date":"2013-03-27T16:27:59.637Z","type":"message"}
{"nick":"bnoordhuis","message":"it's effectively a dangling pointer from then on","date":"2013-03-27T16:28:06.791Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: which tests?","date":"2013-03-27T16:28:17.250Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: you were talking about using a different compiler so that the writeFloat test doesn't fail?","date":"2013-03-27T16:28:19.866Z","type":"message"}
{"nick":"tjfontaine","message":"both llvm-g++ and clang++ exhibit the same issue, because I think the signalling decision is made in the optzn pass not the codegen","date":"2013-03-27T16:28:51.474Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: then why do you think that code works?","date":"2013-03-27T16:28:56.854Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: writeFloat, writeDouble fail always","date":"2013-03-27T16:29:04.449Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: i don't","date":"2013-03-27T16:29:19.842Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: ok.  then maybe we should just disable those tests on that os/arch","date":"2013-03-27T16:29:28.225Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: i've compiled and tested it. it works.","date":"2013-03-27T16:29:29.628Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: yes, because llvm hasn't had a release with our ( bnoordhuis )fix in it yet","date":"2013-03-27T16:29:38.049Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: yes I agree with that","date":"2013-03-27T16:29:45.633Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: objections?  you tend to be one of the more \"anti-disabling tests\" of the bunch","date":"2013-03-27T16:30:10.285Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: in the wonderful world of c and c++ 'compiled and tested' is not the same thing as 'is correct'","date":"2013-03-27T16:30:27.097Z","type":"message"}
{"nick":"tjfontaine","message":"of course buffers with nans passed among archs won't be necessarily accurate :)","date":"2013-03-27T16:30:38.453Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: what test are we talking about?","date":"2013-03-27T16:30:38.663Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: this stupid error: http://jenkins.nodejs.org/job/node-pullrequest/DESTCPU=ia32,label=osx/104/tapTestReport/test.tap-540/","date":"2013-03-27T16:30:55.887Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, the nan bug","date":"2013-03-27T16:31:00.900Z","type":"message"}
{"nick":"tjfontaine","message":"yes","date":"2013-03-27T16:31:06.809Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: writeFloat/writeDouble failing 100% of the time on ia32 darwin","date":"2013-03-27T16:31:08.049Z","type":"message"}
{"nick":"isaacs","message":"ok","date":"2013-03-27T16:31:11.013Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: well, that's a bitch. =P well, there's something I definitely don't understand there.","date":"2013-03-27T16:31:22.768Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-27T16:31:33.559Z","type":"quit"}
{"nick":"bnoordhuis","message":"tjfontaine, isaacs: we could revert the patch for now. correctness > speed and all that","date":"2013-03-27T16:31:58.023Z","type":"message"}
{"nick":"c4milo","date":"2013-03-27T16:31:59.453Z","type":"join"}
{"nick":"bnoordhuis","message":"we can also work around it on ia32","date":"2013-03-27T16:32:25.299Z","type":"message"}
{"nick":"bnoordhuis","message":"nan patterns aren't that hard to recognize","date":"2013-03-27T16:32:36.569Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: this about the nan thing? we've already discussed it. it fails for every implementation on chrome, firefox, etc.","date":"2013-03-27T16:32:39.028Z","type":"message"}
{"nick":"bnoordhuis","message":"if there is one, we normalize it","date":"2013-03-27T16:32:45.330Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: yeah, it's a clang bug, not a node bug","date":"2013-03-27T16:33:20.932Z","type":"message"}
{"nick":"bnoordhuis","message":"i hate appeasing buggy compilers but if it's a real issue, we can do it","date":"2013-03-27T16:33:35.324Z","type":"message"}
{"nick":"tjfontaine","message":"*llvm, because llvm-g++ exhibits it as well","date":"2013-03-27T16:33:35.533Z","type":"message"}
{"nick":"trevnorris","message":"yeah. so we'd agreed it won't be reverted.","date":"2013-03-27T16:33:36.389Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: correct. my bad.","date":"2013-03-27T16:33:49.586Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, i mean reverting for the next 12 months or so","date":"2013-03-27T16:33:54.009Z","type":"message"}
{"nick":"bnoordhuis","message":"until everyone upgrades to a version of xcode that doesn't have the bug","date":"2013-03-27T16:34:04.952Z","type":"message"}
{"nick":"isaacs","message":"i say we just have the test chek that the NaN pattern is one of the two","date":"2013-03-27T16:34:05.655Z","type":"message"}
{"nick":"isaacs","message":"and accept them both","date":"2013-03-27T16:34:07.856Z","type":"message"}
{"nick":"isaacs","message":"because whatever.","date":"2013-03-27T16:34:10.608Z","type":"message"}
{"nick":"tjfontaine","message":"readFloat/Double will do the right thing either way?","date":"2013-03-27T16:34:33.108Z","type":"message"}
{"nick":"isaacs","message":"well, the behavior won't change.","date":"2013-03-27T16:34:41.678Z","type":"message"}
{"nick":"isaacs","message":"but the test will accept the current darwin ia32 behavir","date":"2013-03-27T16:34:51.088Z","type":"message"}
{"nick":"tjfontaine","message":"I'm not entirely clear on the purpose of a signalling nan anyway","date":"2013-03-27T16:35:02.753Z","type":"message"}
{"nick":"isaacs","message":"and when it upgrades, it'll keep accepting the correct behavior.","date":"2013-03-27T16:35:04.621Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-27T16:35:10.195Z","type":"quit"}
{"nick":"isaacs","message":"it's an edge case very few of our users care about","date":"2013-03-27T16:35:25.867Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-03-27T16:35:30.001Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: it's a nan that when referenced triggers a machine exception","date":"2013-03-27T16:35:31.199Z","type":"message"}
{"nick":"tjfontaine","message":"ah","date":"2013-03-27T16:35:36.429Z","type":"message"}
{"nick":"isaacs","message":"(evidenced by the profound lack of issues posted about it)","date":"2013-03-27T16:35:38.502Z","type":"message"}
{"nick":"tjfontaine","message":"well most osx users are 64bit these days anyway","date":"2013-03-27T16:35:49.231Z","type":"message"}
{"nick":"isaacs","message":"in JS land, NaN is NaN","date":"2013-03-27T16:35:52.721Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: true, that also","date":"2013-03-27T16:35:57.290Z","type":"message"}
{"nick":"tjfontaine","message":"hell 10.8 \"won't\" run on a !64 machine","date":"2013-03-27T16:36:19.045Z","type":"message"}
{"nick":"stagas","reason":"Ping timeout: 252 seconds","date":"2013-03-27T16:37:09.282Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2013-03-27T16:37:16.653Z","type":"quit"}
{"nick":"trevnorris","message":"indutny: re: new apis. the RawOperationDescriptor looked interesting.","date":"2013-03-27T16:37:21.487Z","type":"message"}
{"nick":"tjfontaine","message":"[not that someone couldn't launch 32bit node on purpose, or osx in 32bit mode]","date":"2013-03-27T16:37:24.501Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: so you should only create pointers to heap variables when it's needed out of scope?","date":"2013-03-27T16:39:57.754Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: yes. stack variables are demolished when the function returns","date":"2013-03-27T16:41:51.101Z","type":"message"}
{"nick":"`3rdEden","reason":"Remote host closed the connection","date":"2013-03-27T16:41:58.435Z","type":"quit"}
{"nick":"bnoordhuis","message":"think of it like this","date":"2013-03-27T16:42:59.471Z","type":"message"}
{"nick":"bnoordhuis","message":"when you call a function, it grabs a bit of stack space for local variables","date":"2013-03-27T16:43:09.622Z","type":"message"}
{"nick":"bnoordhuis","message":"when you return, that memory is freed","date":"2013-03-27T16:43:16.144Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: cool. and does my code give away it's a stack variable, or do you just know the v8 internals?","date":"2013-03-27T16:43:21.603Z","type":"message"}
{"nick":"bnoordhuis","message":"now, when you call another function, it also grabs some memory - the same memory","date":"2013-03-27T16:43:35.382Z","type":"message"}
{"nick":"bnoordhuis","message":"but it writes something completely different to it","date":"2013-03-27T16:43:44.039Z","type":"message"}
{"nick":"bnoordhuis","message":"and BAM, dead","date":"2013-03-27T16:43:49.621Z","type":"message"}
{"nick":"trevnorris","message":"ah, interesting.","date":"2013-03-27T16:44:05.462Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: i can see it's a stack variable because it's declared as a local in a function :)","date":"2013-03-27T16:44:11.725Z","type":"message"}
{"nick":"trevnorris","message":"but what about, like, \"new char\". that allocates a heap variable, right?","date":"2013-03-27T16:44:36.175Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2013-03-27T16:44:40.126Z","type":"message"}
{"nick":"bnoordhuis","message":"new and malloc alloc memory on the heap","date":"2013-03-27T16:44:46.434Z","type":"message"}
{"nick":"bnoordhuis","message":"i should say \"on a heap\"","date":"2013-03-27T16:44:54.388Z","type":"message"}
{"nick":"bnoordhuis","message":"they don't necessarily use the same heap","date":"2013-03-27T16:45:05.320Z","type":"message"}
{"nick":"trevnorris","message":"if I read the v8 source correctly, Dispose does a \"free(this)\". does that not imply the Persistent is created on the heap?","date":"2013-03-27T16:45:17.088Z","type":"message"}
{"nick":"isaacs","message":"trevnorris, tjfontaine, bnoordhuis: first to LGTM this gets a cake: https://gist.github.com/isaacs/5255880","date":"2013-03-27T16:45:41.718Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: so here is an interesting thing about v8 Handles and Persistents","date":"2013-03-27T16:45:55.329Z","type":"message"}
{"nick":"bnoordhuis","message":"they're basically raw pointers packaged in a c++ class","date":"2013-03-27T16:46:04.354Z","type":"message"}
{"nick":"tjfontaine","message":"heh lgtm I can test if you'd like :)","date":"2013-03-27T16:46:13.402Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: heh, funny that one little byte has caused so much discussion and pain.","date":"2013-03-27T16:46:39.775Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: the this in free(this) is what the val_ field in the Handle/Persistent points to","date":"2013-03-27T16:46:43.966Z","type":"message"}
{"nick":"bnoordhuis","message":"but... that val_ field itself is allocated on the stack","date":"2013-03-27T16:47:24.994Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u000261935bc\u0002 : test: Accept either kind of NaN  A llvm/clang bug on Darwin ia32 makes th - http://git.io/Xdq5-w","date":"2013-03-27T16:47:52.088Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: HAHA! FOOLED YOU! THE CAKE IS A LIE!","date":"2013-03-27T16:47:54.120Z","type":"message"}
{"nick":"trevnorris","message":"but the \"this\" is allocated on the heap?","date":"2013-03-27T16:48:02.413Z","type":"message"}
{"nick":"bnoordhuis","message":"in this case, yes","date":"2013-03-27T16:48:15.078Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: yeah, for reals.  of course, the difference between \"don't worry about that test, it always fails\" and \"no tests fail ever\" is a huge difference.","date":"2013-03-27T16:48:23.562Z","type":"message"}
{"nick":"isaacs","message":"the last 1% is the ahrdest.","date":"2013-03-27T16:48:33.656Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: oh meme lover that you are","date":"2013-03-27T16:48:47.261Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: then Persistent::New returns val_, not \"this\"?","date":"2013-03-27T16:50:30.228Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: more or less. think of a Persistent as this: struct Persistent { Handle* val_; }","date":"2013-03-27T16:51:50.932Z","type":"message"}
{"nick":"bnoordhuis","message":"the Persistent is a pointer to the actual Handle","date":"2013-03-27T16:52:14.412Z","type":"message"}
{"nick":"bnoordhuis","message":"Persistent::New() returns a struct Persistent","date":"2013-03-27T16:52:27.827Z","type":"message"}
{"nick":"bnoordhuis","message":"when you do pers = Persistent<...>::New(...)","date":"2013-03-27T16:52:38.128Z","type":"message"}
{"nick":"bnoordhuis","message":"you're assigning one Persistent to another","date":"2013-03-27T16:53:00.611Z","type":"message"}
{"nick":"bnoordhuis","message":"essentially you're saying `x = 42; y = x;` but with structs","date":"2013-03-27T16:53:17.079Z","type":"message"}
{"nick":"bnoordhuis","message":"and in case you're wondering, structs have copy semantics","date":"2013-03-27T16:53:38.885Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: meme lover?","date":"2013-03-27T16:53:39.095Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: perhaps the meme is so in me that i don't even notice it?","date":"2013-03-27T16:53:48.026Z","type":"message"}
{"nick":"isaacs","message":"oh, the cake thing.","date":"2013-03-27T16:53:51.482Z","type":"message"}
{"nick":"isaacs","message":"right.","date":"2013-03-27T16:53:52.937Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2013-03-27T16:54:01.322Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: are you with me so far? :)","date":"2013-03-27T16:54:24.649Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: yeah. i completely understand what you're saying. what i'm having a problem with is the code's behavior.","date":"2013-03-27T16:55:03.813Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: if it works now, that's purely by accident","date":"2013-03-27T16:55:31.633Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: for example, in the make weak callback I do \"p_saved->IsObject()\" and the compiler errors with \"error: no member named 'IsObject' in 'v8::Persistent<v8::Object>'\"","date":"2013-03-27T16:55:42.256Z","type":"message"}
{"nick":"trevnorris","message":"so that tells me that the pointer p_saved doesn't point to the handle, but to the Persistent struct.","date":"2013-03-27T16:56:09.119Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2013-03-27T16:56:26.637Z","type":"message"}
{"nick":"bnoordhuis","message":"(*p_saved)->IsObject()","date":"2013-03-27T16:56:34.407Z","type":"message"}
{"nick":"trevnorris","message":"yeah. so then wouldn't the pointer be pointed to a heap variable?","date":"2013-03-27T16:56:51.403Z","type":"message"}
{"nick":"bnoordhuis","message":"no","date":"2013-03-27T16:57:08.615Z","type":"message"}
{"nick":"bnoordhuis","message":"p_saved = p_obj","date":"2013-03-27T16:57:13.818Z","type":"message"}
{"nick":"bnoordhuis","message":"p_obj is a variable that's local to the function","date":"2013-03-27T16:57:30.393Z","type":"message"}
{"nick":"bnoordhuis","message":"once the function returns, poof, it's gone","date":"2013-03-27T16:57:38.330Z","type":"message"}
{"nick":"trevnorris","message":"no. it's p_ptr = &p_obj; p_saved = p_ptr.","date":"2013-03-27T16:57:40.176Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, right, that's what i mean","date":"2013-03-27T16:57:49.566Z","type":"message"}
{"nick":"bnoordhuis","message":"doesn't change the fact that p_obj is a local variable","date":"2013-03-27T16:57:59.066Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Bert Belder\u000f \u00037refs/tags/v0.10.2\u000f * \u000283f40a4\u0002 : 2013.03.25, Version 0.10.2 (Stable)  This is the first officially version - http://git.io/cEjzYg","date":"2013-03-27T17:00:40.820Z","type":"message"}
{"nick":"tjfontaine","message":"DUN DUN DUN","date":"2013-03-27T17:00:57.129Z","type":"message"}
{"nick":"LOUDBOT","message":"SHOULD BE EASY TO SPEAK AT CONFERENCES","date":"2013-03-27T17:00:57.344Z","type":"message"}
{"nick":"tjfontaine","message":"first officially version.","date":"2013-03-27T17:01:15.192Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: hm? once a Persistent is created, it will never die until Dispose is called.","date":"2013-03-27T17:01:16.790Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: you're mixing up the Persistent and the thing it points to","date":"2013-03-27T17:02:08.980Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: just in time!  i was just about to start node 0.10.2","date":"2013-03-27T17:02:18.365Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: that's what I was bashing my head against yesterday. I kept trying to get a pointer to val_. but now I'm getting a pointer to the struct.","date":"2013-03-27T17:02:47.334Z","type":"message"}
{"nick":"qmx","new_nick":"qmx|lunch","date":"2013-03-27T17:04:34.410Z","type":"nick"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #78 \u00037UNSTABLE\u000f windows-x64 (5/569) smartos-ia32 (1/569) windows-ia32 (4/569) http://jenkins.nodejs.org/job/nodejs-v0.10/78/","date":"2013-03-27T17:04:44.048Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: sorry, what you explained does make complete sense. just having trouble reconciling it with the code.","date":"2013-03-27T17:05:01.223Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: okay, let's go over it","date":"2013-03-27T17:05:12.469Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 246 seconds","date":"2013-03-27T17:05:17.163Z","type":"quit"}
{"nick":"bnoordhuis","message":"it's still https://gist.github.com/trevnorris/5252962 right?","date":"2013-03-27T17:05:22.289Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: yeah","date":"2013-03-27T17:05:38.787Z","type":"message"}
{"nick":"bnoordhuis","message":"okay","date":"2013-03-27T17:05:54.494Z","type":"message"}
{"nick":"bnoordhuis","message":"static Persistent<Object>* p_saved <- p_saved is a pointer to a Persistent<Object>","date":"2013-03-27T17:06:05.383Z","type":"message"}
{"nick":"bnoordhuis","message":"it's initially set to NULL (because it's in the .bss section)","date":"2013-03-27T17:06:18.758Z","type":"message"}
{"nick":"bnoordhuis","message":"void Alloc(Handle<Object> obj, uint32_t length) {","date":"2013-03-27T17:06:31.066Z","type":"message"}
{"nick":"bnoordhuis","message":"static Persistent<Object>* p_ptr;","date":"2013-03-27T17:06:31.280Z","type":"message"}
{"nick":"bnoordhuis","message":"static Persistent<Object> p_obj;","date":"2013-03-27T17:06:31.542Z","type":"message"}
{"nick":"bnoordhuis","message":"p_obj is a Persistent that's allocated on the stack","date":"2013-03-27T17:06:44.154Z","type":"message"}
{"nick":"bnoordhuis","message":"more precisely, allocated inside the stack frame that Alloc() allocates when it's called","date":"2013-03-27T17:06:58.484Z","type":"message"}
{"nick":"ryah","message":"yo what do people use for building static blogs?","date":"2013-03-27T17:07:11.971Z","type":"message"}
{"nick":"bnoordhuis","message":"jekyll?","date":"2013-03-27T17:07:24.408Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris:  p_ptr = &p_obj; <- you're taking the address of p_obj","date":"2013-03-27T17:07:39.010Z","type":"message"}
{"nick":"bnoordhuis","message":"i.e. an address on the stack","date":"2013-03-27T17:07:52.005Z","type":"message"}
{"nick":"bnoordhuis","message":" p_saved = p_ptr; <- now you're assigning it to a global variable","date":"2013-03-27T17:08:09.200Z","type":"message"}
{"nick":"bnoordhuis","message":"image Alloc() returns","date":"2013-03-27T17:08:34.729Z","type":"message"}
{"nick":"bnoordhuis","message":"you call some function that looks like this -> void foo() { char bigbuf[1024*1024]; memset(buf, -1, sizeof(buf)); }","date":"2013-03-27T17:09:04.397Z","type":"message"}
{"nick":"bnoordhuis","message":"now when you call Alloc() again, p_saved points to an address on the stack that has been overwritten with -1s","date":"2013-03-27T17:09:31.173Z","type":"message"}
{"nick":"bnoordhuis","message":"when you try to use it, BAM","date":"2013-03-27T17:09:41.805Z","type":"message"}
{"nick":"mikeal","date":"2013-03-27T17:09:47.238Z","type":"join"}
{"nick":"bnoordhuis","message":"some would even say: LOUD BAM","date":"2013-03-27T17:09:52.270Z","type":"message"}
{"nick":"bnoordhuis","message":"c'mon LOUDBOT","date":"2013-03-27T17:09:57.830Z","type":"message"}
{"nick":"tjfontaine","message":"LOUD BAM","date":"2013-03-27T17:10:04.669Z","type":"message"}
{"nick":"LOUDBOT","message":"IS THIS DOMINIKH A EUROFAG","date":"2013-03-27T17:10:04.878Z","type":"message"}
{"nick":"tjfontaine","message":"clearly he ignores you :)","date":"2013-03-27T17:10:11.317Z","type":"message"}
{"nick":"bnoordhuis","message":"ignored by bots even","date":"2013-03-27T17:10:26.569Z","type":"message"}
{"nick":"tjfontaine","message":"this is not your week.","date":"2013-03-27T17:10:42.148Z","type":"message"}
{"nick":"bnoordhuis","message":"this is not how i imagined what the lifestyle of an OSS developer would be like","date":"2013-03-27T17:10:51.578Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: are you still with me?","date":"2013-03-27T17:11:23.186Z","type":"message"}
{"nick":"tjfontaine","message":"ignored by software? that's exactly what I expected","date":"2013-03-27T17:11:25.741Z","type":"message"}
{"nick":"bnoordhuis","message":"LOUDBOT SPEAK TO ME","date":"2013-03-27T17:11:56.931Z","type":"message"}
{"nick":"LOUDBOT","message":"WHEN ARE YOU GOING TO FUCK THE HELEN KELLER WANNABE? SHE CAN'T TELL YOU HOW UGLY YOU ARE, AFTER ALL!","date":"2013-03-27T17:11:57.148Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: refresh the page. I added two asserts in TargetCallback.","date":"2013-03-27T17:12:23.068Z","type":"message"}
{"nick":"ryah","message":"bnoordhuis: a good inscription for your tombstone","date":"2013-03-27T17:12:24.415Z","type":"message"}
{"nick":"ryah","message":"\"this is not how i imagined what the lifestyle of an OSS developer would be like\"","date":"2013-03-27T17:12:37.566Z","type":"message"}
{"nick":"bnoordhuis","message":"ryah: i'm gonna live forever. fact","date":"2013-03-27T17:12:38.863Z","type":"message"}
{"nick":"bnoordhuis","message":"but yes","date":"2013-03-27T17:12:44.370Z","type":"message"}
{"nick":"indutny","message":"compiling v8","date":"2013-03-27T17:13:04.566Z","type":"message"}
{"nick":"indutny","message":"on laptop","date":"2013-03-27T17:13:04.777Z","type":"message"}
{"nick":"indutny","message":"without charger","date":"2013-03-27T17:13:04.778Z","type":"message"}
{"nick":"indutny","message":"I'm in danger?","date":"2013-03-27T17:13:04.987Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: ok, now it's updated =P","date":"2013-03-27T17:13:23.510Z","type":"message"}
{"nick":"trevnorris","message":"github doesn't like my back button.","date":"2013-03-27T17:13:30.776Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: the asserts don't prove anything","date":"2013-03-27T17:13:53.226Z","type":"message"}
{"nick":"bnoordhuis","message":"you're in UB territory, anything can happen","date":"2013-03-27T17:14:01.947Z","type":"message"}
{"nick":"indutny","message":"UB = undefined behaviour, right?","date":"2013-03-27T17:14:28.048Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2013-03-27T17:14:30.707Z","type":"message"}
{"nick":"isaacs","message":"heh: https://gist.github.com/dherman/5251949","date":"2013-03-27T17:15:56.592Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: ok. so is it compiler malfunction that I do what's there, but can't do \"p_ptr = &(Persistent<Object>::New(Object::New()))\"?","date":"2013-03-27T17:16:19.819Z","type":"message"}
{"nick":"isaacs","message":"ryah: i use node, actually","date":"2013-03-27T17:16:20.938Z","type":"message"}
{"nick":"isaacs","message":"ryah: for the static blog i build.","date":"2013-03-27T17:16:34.087Z","type":"message"}
{"nick":"isaacs","message":"ryah: and rsync, and make just for fun","date":"2013-03-27T17:16:46.534Z","type":"message"}
{"nick":"trevnorris","message":"because those are basically the same thing, i think.","date":"2013-03-27T17:16:54.855Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: no, it's a programmer malfunction :)","date":"2013-03-27T17:17:04.194Z","type":"message"}
{"nick":"trevnorris","message":"lol","date":"2013-03-27T17:17:09.053Z","type":"message"}
{"nick":"ryah","message":"isaacs: got a project for that?","date":"2013-03-27T17:17:17.573Z","type":"message"}
{"nick":"isaacs","message":"ryah: no, but i keep meaning to split it out","date":"2013-03-27T17:17:32.885Z","type":"message"}
{"nick":"bnoordhuis","message":"gcc/g++ try to protect you (when you turn on -Wall -Wextra) but there's only so much they can do","date":"2013-03-27T17:17:35.933Z","type":"message"}
{"nick":"indutny","message":"trevnorris: you should really keep in mind, that Peristent<...> p is on-stack variable declaration","date":"2013-03-27T17:17:46.463Z","type":"message"}
{"nick":"isaacs","message":"ryah: i kinda like how the blog engine for blog.nodejs.org works, and it's basically jsut a single script and marked","date":"2013-03-27T17:17:50.601Z","type":"message"}
{"nick":"indutny","message":"and its not the same as Persistent<...>* p","date":"2013-03-27T17:17:55.945Z","type":"message"}
{"nick":"ryah","message":"isaacs: isnt it wordpress?","date":"2013-03-27T17:18:03.294Z","type":"message"}
{"nick":"indutny","message":"which should be explicitely allocated","date":"2013-03-27T17:18:07.996Z","type":"message"}
{"nick":"indutny","message":"ryah: nope","date":"2013-03-27T17:18:11.763Z","type":"message"}
{"nick":"isaacs","message":"ryah: nope.","date":"2013-03-27T17:18:17.769Z","type":"message"}
{"nick":"isaacs","message":"hasn't been for some time, actualy.  i got fed up with them a while back.","date":"2013-03-27T17:18:25.565Z","type":"message"}
{"nick":"ryah","message":"ah, good","date":"2013-03-27T17:18:32.402Z","type":"message"}
{"nick":"indutny","message":"who needs comments, anyway","date":"2013-03-27T17:18:38.443Z","type":"message"}
{"nick":"ryah","message":"hate wordpress too","date":"2013-03-27T17:18:42.505Z","type":"message"}
{"nick":"isaacs","message":"ryah: https://github.com/joyent/node/tree/v0.10/tools/blog","date":"2013-03-27T17:18:44.867Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: and I really want to emphasis, I don't doubt what you'r saying. just working through my own ignorance in understanding my code.","date":"2013-03-27T17:19:16.850Z","type":"message"}
{"nick":"bnoordhuis","message":"though real men use sed, date and a makefile","date":"2013-03-27T17:19:17.065Z","type":"message"}
{"nick":"tjfontaine","message":"if you want comments you can use something like disqus anyway","date":"2013-03-27T17:19:20.386Z","type":"message"}
{"nick":"isaacs","message":"ryah: yeah, i should definitely split this out and port izs.me to it.","date":"2013-03-27T17:19:22.942Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: or you can just fix whatever broken neurosis in yourself it is that makes you think you want comments.","date":"2013-03-27T17:19:53.382Z","type":"message"}
{"nick":"ryah","message":"i guess ill just use jekyll... kind of annoying","date":"2013-03-27T17:19:55.787Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: np. you'll get it eventually. i didn't understand everything all at once either","date":"2013-03-27T17:19:57.330Z","type":"message"}
{"nick":"ryah","message":"but it'll work","date":"2013-03-27T17:20:00.628Z","type":"message"}
{"nick":"isaacs","message":"ryah: yeah, jekyll is kinda annoying.","date":"2013-03-27T17:20:07.690Z","type":"message"}
{"nick":"bnoordhuis","message":"it took me at least two minutes, i'm sure","date":"2013-03-27T17:20:11.711Z","type":"message"}
{"nick":"trevnorris","message":"lol","date":"2013-03-27T17:20:18.630Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: I didn't say I wanted them, I'm just saying there is a way to do it :)","date":"2013-03-27T17:20:19.370Z","type":"message"}
{"nick":"isaacs","message":"ryah: i've gotten close to using it a few times, and it's always just filled me with apathy.  i'm a little bit allergic to ruby","date":"2013-03-27T17:20:32.404Z","type":"message"}
{"nick":"tjfontaine","message":"I have used ikiwiki in the past","date":"2013-03-27T17:21:00.846Z","type":"message"}
{"nick":"isaacs","message":"ryah: actually, i think i wrote this node-blog-gen thing because i got annoyed trying to figure out hwo to do jekyll","date":"2013-03-27T17:21:04.629Z","type":"message"}
{"nick":"isaacs","message":"ryah: i figure if a 200 line node script can do it, maybe i don't need to learn a new tool.","date":"2013-03-27T17:21:24.967Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: what helps is writing some assembly","date":"2013-03-27T17:21:46.259Z","type":"message"}
{"nick":"bnoordhuis","message":"i learned c64 and 8086 asm before i learned c. it helped quite a bit","date":"2013-03-27T17:22:16.474Z","type":"message"}
{"nick":"tjfontaine","message":"c64 asm, what a world","date":"2013-03-27T17:22:42.402Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: same on my side","date":"2013-03-27T17:23:19.464Z","type":"message"}
{"nick":"indutny","message":"I learned assembly before C","date":"2013-03-27T17:23:25.874Z","type":"message"}
{"nick":"indutny","message":"helps a lot","date":"2013-03-27T17:23:30.277Z","type":"message"}
{"nick":"trevnorris","message":"yeah. unfortunately i'm going from js to c++.","date":"2013-03-27T17:23:53.258Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: apt-get install nasm","date":"2013-03-27T17:24:10.262Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: hehe","date":"2013-03-27T17:24:29.123Z","type":"message"}
{"nick":"indutny","message":"I've better advice","date":"2013-03-27T17:24:32.182Z","type":"message"}
{"nick":"bnoordhuis","message":"i admit it's throwing people in the deep end :)","date":"2013-03-27T17:24:54.737Z","type":"message"}
{"nick":"indutny","message":"wget http://download.intel.com/products/processor/manual/325462.pdf","date":"2013-03-27T17:25:07.363Z","type":"message"}
{"nick":"indutny","message":"and read until you'll figure out things","date":"2013-03-27T17:25:18.342Z","type":"message"}
{"nick":"bnoordhuis","message":"i wish i had that back in the day","date":"2013-03-27T17:25:23.901Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2013-03-27T17:25:27.406Z","type":"message"}
{"nick":"indutny","message":"I had one","date":"2013-03-27T17:25:28.754Z","type":"message"}
{"nick":"indutny","message":"in paper","date":"2013-03-27T17:25:30.484Z","type":"message"}
{"nick":"bnoordhuis","message":"i mostly figured it out from snippets i downloaded off BBSs","date":"2013-03-27T17:25:58.433Z","type":"message"}
{"nick":"indutny","message":"not for 64bit processors, though","date":"2013-03-27T17:26:03.613Z","type":"message"}
{"nick":"indutny","message":"my father's friend was obsessed with finding bugs in CPUs","date":"2013-03-27T17:26:03.821Z","type":"message"}
{"nick":"indutny","message":"actually, hi found few","date":"2013-03-27T17:26:04.859Z","type":"message"}
{"nick":"indutny","message":"which was causing reboots (generally)","date":"2013-03-27T17:26:05.072Z","type":"message"}
{"nick":"indutny","message":"oh, I've missed time of BBSs","date":"2013-03-27T17:26:19.768Z","type":"message"}
{"nick":"indutny","message":"sadly","date":"2013-03-27T17:26:30.175Z","type":"message"}
{"nick":"indutny","message":"but I remember times where we was connecting COM-ports to create networks","date":"2013-03-27T17:26:41.197Z","type":"message"}
{"nick":"bnoordhuis","message":"don't worry, it was mostly crappy","date":"2013-03-27T17:26:41.411Z","type":"message"}
{"nick":"indutny","message":"that was fun","date":"2013-03-27T17:26:50.639Z","type":"message"}
{"nick":"trevnorris","message":"heh, after years of working web ux, never thought i'd even consider programming in asm.","date":"2013-03-27T17:27:14.382Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: does your father's friend have one or more errata to his name?","date":"2013-03-27T17:27:31.989Z","type":"message"}
{"nick":"tjfontaine","message":"goodriddance to webui :)","date":"2013-03-27T17:27:33.653Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis, trevnorris: Suggestion from rmustacc that we use libumem for the backing slab allocation stuff, and bundle on platforms that lack it natively","date":"2013-03-27T17:27:40.189Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/gburd/libumem ","date":"2013-03-27T17:27:52.164Z","type":"message"}
{"nick":"isaacs","message":"apparently riak does this.","date":"2013-03-27T17:27:52.370Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: nope :)","date":"2013-03-27T17:27:54.745Z","type":"message"}
{"nick":"indutny","message":"isaacs: I'm doing it from other side","date":"2013-03-27T17:28:07.313Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, too bad. that's something i'd like to accomplish some day","date":"2013-03-27T17:28:12.379Z","type":"message"}
{"nick":"indutny","message":"isaacs: I would like small buffers to be allocated in v8 heap","date":"2013-03-27T17:28:27.004Z","type":"message"}
{"nick":"indutny","message":"and managed by it","date":"2013-03-27T17:28:29.248Z","type":"message"}
{"nick":"indutny","message":"working towards it","date":"2013-03-27T17:28:35.663Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: well... maybe. i benchmarked jemalloc and that other one a while ago and they were quite a bit slower than glibc","date":"2013-03-27T17:28:37.738Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-27T17:28:49.655Z","type":"quit"}
{"nick":"bnoordhuis","message":"if libumem is significantly better, okay. but otherwise, no","date":"2013-03-27T17:28:53.861Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: not sure how that's going to help, since the expensive part is knowning when memory is free, but i'll give it a look.","date":"2013-03-27T17:28:55.260Z","type":"message"}
{"nick":"trevnorris","message":"honestly, compared to the price of paying a Persistent and attaching it to the object, the malloc is a noop.","date":"2013-03-27T17:29:46.089Z","type":"message"}
{"nick":"indutny","message":"obviously","date":"2013-03-27T17:30:48.103Z","type":"message"}
{"nick":"bnoordhuis","message":"i like indutny's idea btw (partly because i researched a similar thing myself, of course)","date":"2013-03-27T17:31:04.174Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: have you ever got any results?","date":"2013-03-27T17:31:13.873Z","type":"message"}
{"nick":"indutny","message":"and actually this is your idea","date":"2013-03-27T17:31:19.899Z","type":"message"}
{"nick":"bnoordhuis","message":"one potential issue is that v8 spaces are limited to 1 GB currently","date":"2013-03-27T17:31:21.979Z","type":"message"}
{"nick":"isaacs","message":"we definitely need more than 1gb of buffer address space.","date":"2013-03-27T17:31:35.615Z","type":"message"}
{"nick":"isaacs","message":"er, buffer allocations","date":"2013-03-27T17:31:41.492Z","type":"message"}
{"nick":"trevnorris","message":"well, allocating large buff's externally is fine.","date":"2013-03-27T17:31:53.761Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: oh, that might explain why it seems like such a great idea :)","date":"2013-03-27T17:31:56.659Z","type":"message"}
{"nick":"trevnorris","message":"it's the many many small allocations that kill us.","date":"2013-03-27T17:32:00.299Z","type":"message"}
{"nick":"trevnorris","message":"the small ones usually turn over quickly, too.","date":"2013-03-27T17:32:24.993Z","type":"message"}
{"nick":"bradleymeck","date":"2013-03-27T17:32:25.210Z","type":"join"}
{"nick":"isaacs","message":"yeah","date":"2013-03-27T17:33:04.509Z","type":"message"}
{"nick":"isaacs","message":"and our slabs leak like crazy in WS case.","date":"2013-03-27T17:33:14.037Z","type":"message"}
{"nick":"trevnorris","message":"honestly i'm hoping that post you gave me works out. that would simply life greatly.","date":"2013-03-27T17:33:39.828Z","type":"message"}
{"nick":"TooTallNate","date":"2013-03-27T17:33:43.249Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: are you engaging on those bugs so your voice is heard?","date":"2013-03-27T17:34:20.762Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: re licenses, IANAL but i think the berne convention covers the case where a file doesn't have license boilerplate","date":"2013-03-27T17:34:39.253Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: are you SURE you're not a lawyer?","date":"2013-03-27T17:34:56.462Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: will in a bit. first still trying to reconcile my code w/ what bnoordhuis explained.","date":"2013-03-27T17:35:00.844Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: you might have forgotten.","date":"2013-03-27T17:35:01.955Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: i still have my immortal soul. i do hang out with lawyers though","date":"2013-03-27T17:35:17.601Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: so you're just a few drinks away from signing it over","date":"2013-03-27T17:35:34.458Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i just get so tired of these conversations where nerds beat their chests and have opinions about things that they have no knowledge of.","date":"2013-03-27T17:35:36.879Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: and.... there was user error. the logic was bad so it was not being made weak. going to fix that, then hopefully it'll crash in flames.","date":"2013-03-27T17:35:38.457Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: at least we're not discussing trademarks.  THAT shit is completely insane.","date":"2013-03-27T17:36:06.810Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: oh, you're absolutely right about that","date":"2013-03-27T17:36:13.714Z","type":"message"}
{"nick":"bnoordhuis","message":"nerds should stick to what they know","date":"2013-03-27T17:36:25.690Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: and like, there's completely different sorts of insanity that the US follows, vs the other former-british imperial countries, vs france and germany, vs the rest of europe, vs asia.","date":"2013-03-27T17:36:48.815Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, common law vs civil law","date":"2013-03-27T17:38:15.645Z","type":"message"}
{"nick":"bnoordhuis","message":"pro tip, if you find yourself among lawyers and need a conversation starter","date":"2013-03-27T17:38:43.327Z","type":"message"}
{"nick":"tjfontaine","message":"if that's the difference, then louisianna must also be different fromt he rest of the US :)","date":"2013-03-27T17:39:02.570Z","type":"message"}
{"nick":"bnoordhuis","message":"well, it doesn't matter what you actually say as long as the words 'common' and 'civil' are in there somewhere","date":"2013-03-27T17:39:02.969Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: louisiana has civil law?","date":"2013-03-27T17:39:37.221Z","type":"message"}
{"nick":"tjfontaine","message":"http://en.wikipedia.org/wiki/Law_of_Louisiana","date":"2013-03-27T17:40:00.123Z","type":"message"}
{"nick":"bnoordhuis","message":"one lives and learns","date":"2013-03-27T17:40:25.674Z","type":"message"}
{"nick":"tjfontaine","message":"indeed","date":"2013-03-27T17:40:28.621Z","type":"message"}
{"nick":"bradleymeck","message":"anyone have an example of multiple uv_pipe_t being combined into a single uv_pipe_t in memory (or some multiplexing lib already existing)?","date":"2013-03-27T17:40:38.365Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-03-27T17:41:06.167Z","type":"join"}
{"nick":"bnoordhuis","message":"bradleymeck: sorry, what?","date":"2013-03-27T17:41:49.726Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: apparently, it's more complicated than even just common-vs-civil","date":"2013-03-27T17:42:02.369Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: in some places, trademark stems from from fraud, and preventing someone from passing themselves off as you.  in others, it's based on completely different principles.","date":"2013-03-27T17:42:42.456Z","type":"message"}
{"nick":"bradleymeck","message":"we are trying to get a tool to aggregate multiple uv_pipe_t (being read only) into a single uv_pipe_t (being consumed by libCURL)","date":"2013-03-27T17:42:44.021Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: makes windows-vs-unix kind of seem trivial by comparison.","date":"2013-03-27T17:42:55.735Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: I have deemed those problems to be batshit insane and give my lawyer a call every time I have a problem","date":"2013-03-27T17:42:59.747Z","type":"message"}
{"nick":"isaacs","message":"yep","date":"2013-03-27T17:43:09.068Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: fair point. emacs vs vi however....","date":"2013-03-27T17:43:16.346Z","type":"message"}
{"nick":"isaacs","action":"recently had a conversation with joyent's general counsel.","date":"2013-03-27T17:43:16.556Z","type":"action"}
{"nick":"isaacs","message":"the good news is that our trademark policy will get less stupid soon.","date":"2013-03-27T17:43:27.566Z","type":"message"}
{"nick":"isaacs","message":"the bad news is that it'll take a while to rewrite all that stuff.","date":"2013-03-27T17:43:40.641Z","type":"message"}
{"nick":"bnoordhuis","message":"bradleymeck: on unices, a uv_pipe_t is just a thinly disguised unix socket","date":"2013-03-27T17:43:45.337Z","type":"message"}
{"nick":"isaacs","message":"so, please don't make any huge noise about it until there's something to actually make noise about.","date":"2013-03-27T17:43:57.650Z","type":"message"}
{"nick":"bnoordhuis","message":"bradleymeck: if you want to combine them, just read from them into a memory buffer","date":"2013-03-27T17:44:01.130Z","type":"message"}
{"nick":"bnoordhuis","message":"bradleymeck: or read from them and write the data to the target socket","date":"2013-03-27T17:44:18.410Z","type":"message"}
{"nick":"bradleymeck","message":"guess ill just write up the multiplexer then","date":"2013-03-27T17:44:39.963Z","type":"message"}
{"nick":"bradleymeck","message":"was hoping i could just copy paste","date":"2013-03-27T17:44:47.070Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm a stickler for pedantry","date":"2013-03-27T17:45:16.038Z","type":"message"}
{"nick":"bnoordhuis","message":"shouldn't it be called 'demultiplexer'?","date":"2013-03-27T17:45:26.651Z","type":"message"}
{"nick":"bradleymeck","message":"bnoordhuis: it is combining?","date":"2013-03-27T17:46:01.913Z","type":"message"}
{"nick":"bradleymeck","message":"demux is separating","date":"2013-03-27T17:46:11.573Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess it depends from what side you're viewing things","date":"2013-03-27T17:46:38.136Z","type":"message"}
{"nick":"bnoordhuis","message":"but you mentioned it comes from n data sources and goes to a single curl destination","date":"2013-03-27T17:47:05.484Z","type":"message"}
{"nick":"bnoordhuis","message":"so i guess multiplexer it is","date":"2013-03-27T17:47:12.558Z","type":"message"}
{"nick":"bradleymeck","message":"demux once multiplex is done is my plan so yea, if i did it the otherway probably would call it something else","date":"2013-03-27T17:47:41.695Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-27T17:54:02.060Z","type":"quit"}
{"nick":"sblom","date":"2013-03-27T17:54:37.814Z","type":"join"}
{"nick":"sblom","message":"indutny: re: IIS+TLS, there's an internal thread about this issue presently. I'll include what you've discovered.","date":"2013-03-27T17:55:43.895Z","type":"message"}
{"nick":"tjfontaine","message":"nice","date":"2013-03-27T17:56:26.573Z","type":"message"}
{"nick":"indutny","message":"sblom: thanks","date":"2013-03-27T17:56:35.722Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: but it's cool if use a pointer like that within the same function?","date":"2013-03-27T17:58:47.953Z","type":"message"}
{"nick":"c4milo","date":"2013-03-27T18:01:56.378Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: yes, provided the pointer and the pointee live in the same scope","date":"2013-03-27T18:04:35.626Z","type":"message"}
{"nick":"trevnorris","message":"yup. awesome, thanks.","date":"2013-03-27T18:04:49.921Z","type":"message"}
{"nick":"brson","date":"2013-03-27T18:09:55.094Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: the libuv tests need to run shorter. They time out all the time on windows","date":"2013-03-27T18:09:59.070Z","type":"message"}
{"nick":"nsm","reason":"Quit: nsm","date":"2013-03-27T18:10:09.769Z","type":"quit"}
{"nick":"tjfontaine","message":"they do?","date":"2013-03-27T18:10:11.573Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: thanks again. that helped me write an important unit test.","date":"2013-03-27T18:10:11.950Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: er, I meant benchmarks","date":"2013-03-27T18:10:34.535Z","type":"message"}
{"nick":"tjfontaine","message":"oh ok","date":"2013-03-27T18:10:43.659Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: maybe the buildbot should also run benchmarks :)","date":"2013-03-27T18:10:44.510Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-03-27T18:10:59.649Z","type":"message"}
{"nick":"tjfontaine","message":"I have to finish how it does the node benchmarks first :)","date":"2013-03-27T18:11:13.778Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: the libuv benchmarks are way easier :)","date":"2013-03-27T18:11:33.864Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: funny enough. the third bullet point on that post, I made the same change last night to my allocator.","date":"2013-03-27T18:12:11.977Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: which one?","date":"2013-03-27T18:12:34.205Z","type":"message"}
{"nick":"trevnorris","message":"returning void and passing the return value as a param.","date":"2013-03-27T18:12:51.557Z","type":"message"}
{"nick":"trevnorris","message":"before if you did Alloc(5) it would return a new object. but instead I did a js wrapper that creates a new object then passes it like Alloc({}, 5)","date":"2013-03-27T18:14:08.787Z","type":"message"}
{"nick":"trevnorris","message":"for some reason that performs much better.","date":"2013-03-27T18:14:15.389Z","type":"message"}
{"nick":"trevnorris","message":"and that way you can use it to create new js data object instances using \"Alloc(this, N)\"","date":"2013-03-27T18:15:02.263Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: interesting.","date":"2013-03-27T18:15:38.369Z","type":"message"}
{"nick":"trevnorris","message":"yeah. so the new Buffer will remove the make fast/slow stuff and just do that.","date":"2013-03-27T18:16:01.069Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-03-27T18:18:35.158Z","type":"quit"}
{"nick":"qmx|lunch","new_nick":"qmx","date":"2013-03-27T18:19:55.771Z","type":"nick"}
{"nick":"dap","date":"2013-03-27T18:21:48.127Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-27T18:22:12.374Z","type":"quit"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-03-27T18:26:36.874Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-27T18:27:38.693Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-03-27T18:29:54.198Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: hm, is that a roundabout way of saying that uv-win should run faster?","date":"2013-03-27T18:35:39.221Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I heard you wanted to do something ground-breaking again? :-)","date":"2013-03-27T18:36:03.202Z","type":"message"}
{"nick":"piscisaureus_","message":"I'd say that is a real challenge you found.","date":"2013-03-27T18:36:12.556Z","type":"message"}
{"nick":"kazupon","date":"2013-03-27T18:39:15.995Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2013-03-27T18:44:55.552Z","type":"quit"}
{"nick":"trevnorris","message":"alright. opinion posted. hopefully didn't sound like too much an idiot.","date":"2013-03-27T18:48:31.641Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: whoa. that'll require a bit of refactoring. remove Local entirely? that's intense.","date":"2013-03-27T18:49:40.803Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-03-27T18:51:01.307Z","type":"message"}
{"nick":"trevnorris","message":"heh, that's funny. and no more need to pass the isolate to any Persistent methods.","date":"2013-03-27T18:51:43.947Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: so what if I did a \"Persistent<Object> p_saved[N]\", then assigned each of those a Persistent. could those be reused?","date":"2013-03-27T18:55:46.423Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: you're only reusing the pointer to Handle","date":"2013-03-27T18:57:37.182Z","type":"message"}
{"nick":"bnoordhuis","message":"iow, no big win","date":"2013-03-27T18:57:48.773Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok.","date":"2013-03-27T18:57:59.320Z","type":"message"}
{"nick":"bnoordhuis","message":"Persistent<Object>::New(...) will still do the GlobalizeReference() dance, etc.","date":"2013-03-27T18:58:08.409Z","type":"message"}
{"nick":"hij1nx","message":"is it possible to hook into the require module?","date":"2013-03-27T18:58:45.345Z","type":"message"}
{"nick":"hij1nx","message":"sorry, that was not the question i wanted to ask","date":"2013-03-27T18:59:13.956Z","type":"message"}
{"nick":"hij1nx","message":"is it possible to hook into these arguments somehow? https://github.com/joyent/node/blob/master/lib/module.js#L455","date":"2013-03-27T19:00:06.587Z","type":"message"}
{"nick":"bnoordhuis","message":"hij1nx: don't think so","date":"2013-03-27T19:00:42.292Z","type":"message"}
{"nick":"hij1nx","message":"bnoordhuis: the root of what im trying to do is gather stats about bytes read/dispatched from underlying tcp socket","date":"2013-03-27T19:01:24.120Z","type":"message"}
{"nick":"hij1nx","message":"bnoordhuis: but i have two requirements, one i cant use something like node_pcap","date":"2013-03-27T19:01:40.584Z","type":"message"}
{"nick":"hij1nx","message":"and second i cant wrap net/http, etc.","date":"2013-03-27T19:02:08.955Z","type":"message"}
{"nick":"tjfontaine","message":"I presume we're ignoring an binary addin as well?","date":"2013-03-27T19:02:23.226Z","type":"message"}
{"nick":"tjfontaine","message":"*any","date":"2013-03-27T19:02:29.217Z","type":"message"}
{"nick":"bnoordhuis","message":"net.Socket#bytesWritten?","date":"2013-03-27T19:02:30.865Z","type":"message"}
{"nick":"hij1nx","message":"bnoordhuis: https://github.com/hij1nx/netpeek","date":"2013-03-27T19:02:36.836Z","type":"message"}
{"nick":"hij1nx","message":"^ did this little hack","date":"2013-03-27T19:02:46.442Z","type":"message"}
{"nick":"hij1nx","message":"which is kind of neat, it does exactly that","date":"2013-03-27T19:03:02.150Z","type":"message"}
{"nick":"hij1nx","message":"however the problem is that i have no context about what module read/dispatched the bytes","date":"2013-03-27T19:03:46.886Z","type":"message"}
{"nick":"hij1nx","message":"`process.binding.TCP.prorotype.readStart` fires every time a read happens on a TCP socket.","date":"2013-03-27T19:04:00.738Z","type":"message"}
{"nick":"bnoordhuis","message":"monkey-patch read() and write() and inspect the stack trace?","date":"2013-03-27T19:04:07.869Z","type":"message"}
{"nick":"bnoordhuis","message":"rather expensive, of course","date":"2013-03-27T19:04:11.952Z","type":"message"}
{"nick":"hij1nx","message":"monkey-patching a module means that if `net` module is included later on by another module, the read() and write() will get missed.","date":"2013-03-27T19:05:53.058Z","type":"message"}
{"nick":"bnoordhuis","message":"no, there's only ever one 'net' instance","date":"2013-03-27T19:06:33.007Z","type":"message"}
{"nick":"bnoordhuis","message":"unless someone clears require.cache, of course","date":"2013-03-27T19:06:40.979Z","type":"message"}
{"nick":"hij1nx","message":"yep","date":"2013-03-27T19:07:04.734Z","type":"message"}
{"nick":"hij1nx","message":"sorry, thats what i meant to say","date":"2013-03-27T19:07:14.802Z","type":"message"}
{"nick":"isaacs","message":"bbiab","date":"2013-03-27T19:07:26.151Z","type":"message"}
{"nick":"isaacs","action":"&","date":"2013-03-27T19:07:30.290Z","type":"action"}
{"nick":"LOUDBOT","message":"NOW WE'RE VULNERABLE TO STORMS AND WALLS INSTEAD OF NETSPLITS","date":"2013-03-27T19:07:30.504Z","type":"message"}
{"nick":"bnoordhuis","message":"that's where you as a module author should say \"tough cookies, not my problem\"","date":"2013-03-27T19:07:31.818Z","type":"message"}
{"nick":"hij1nx","message":":)","date":"2013-03-27T19:07:47.344Z","type":"message"}
{"nick":"hij1nx","message":"ok, maybe i will just patch higher up and say tough cookies. because otherwise its looking quite complicated. thanks!","date":"2013-03-27T19:11:30.019Z","type":"message"}
{"nick":"piscisaureus_","reason":"Read error: Connection reset by peer","date":"2013-03-27T19:11:54.350Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-03-27T19:12:18.922Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-27T19:20:53.472Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 272 seconds","date":"2013-03-27T19:23:50.731Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-03-27T19:28:13.607Z","type":"quit"}
{"nick":"stagas","date":"2013-03-27T19:28:43.436Z","type":"join"}
{"nick":"stephank","reason":"Read error: Operation timed out","date":"2013-03-27T19:42:34.890Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-03-27T19:47:40.719Z","type":"quit"}
{"nick":"stagas","reason":"Quit: ChatZilla 0.9.90-rdmsoft [XULRunner 1.9.0.17/2009122204]","date":"2013-03-27T19:48:41.904Z","type":"quit"}
{"nick":"indutny","message":"hoya","date":"2013-03-27T19:50:34.740Z","type":"message"}
{"nick":"indutny","message":"trevnorris: https://code.google.com/p/v8/issues/detail?id=2590","date":"2013-03-27T19:50:46.211Z","type":"message"}
{"nick":"indutny","message":"isaacs: ^","date":"2013-03-27T19:50:49.407Z","type":"message"}
{"nick":"indutny","message":"ircretary: tell bnoordhuis to star https://code.google.com/p/v8/issues/detail?id=2590","date":"2013-03-27T19:50:56.076Z","type":"message"}
{"nick":"ircretary","message":"indutny: I'll be sure to tell bnoordhuis","date":"2013-03-27T19:50:57.141Z","type":"message"}
{"nick":"indutny","message":"thanks mraleph","date":"2013-03-27T19:51:08.580Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-03-27T19:51:34.187Z","type":"join"}
{"nick":"trevnorris","message":"indutny: i'm still not a fan. to replicate a buffer you'd need to \"new Uint8Array(new ArrayBuffer(n))\". that chews performance.","date":"2013-03-27T19:52:49.520Z","type":"message"}
{"nick":"trevnorris","message":"and the typed array specification requires that it's zero filled.","date":"2013-03-27T19:53:14.168Z","type":"message"}
{"nick":"TooTallNate","date":"2013-03-27T19:53:43.866Z","type":"join"}
{"nick":"trevnorris","message":"that used to be done in node, until it was reverted for poorly affecting instantiation of large buffers.","date":"2013-03-27T19:53:46.078Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-27T19:55:17.683Z","type":"quit"}
{"nick":"trevnorris","message":"indutny: also it requires that \"slice\" copy the data, instead of create pointers to it.","date":"2013-03-27T19:55:26.039Z","type":"message"}
{"nick":"trevnorris","message":"indutny: thoughts?","date":"2013-03-27T19:56:27.703Z","type":"message"}
{"nick":"stephank","date":"2013-03-27T19:57:23.021Z","type":"join"}
{"nick":"loladiro","date":"2013-03-27T19:58:25.007Z","type":"join"}
{"nick":"benoitc","date":"2013-03-27T19:59:51.245Z","type":"join"}
{"nick":"isaacs","message":"indutny: star'ed!!","date":"2013-03-27T20:06:04.151Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-27T20:06:10.885Z","type":"quit"}
{"nick":"Raynos","reason":"Ping timeout: 252 seconds","date":"2013-03-27T20:06:41.630Z","type":"quit"}
{"nick":"sgallagh","reason":"Remote host closed the connection","date":"2013-03-27T20:06:52.632Z","type":"quit"}
{"nick":"jez0990","reason":"Quit: http://quassel-irc.org - Chat comfortably. Anywhere.","date":"2013-03-27T20:08:08.792Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-27T20:09:21.007Z","type":"join"}
{"nick":"indutny","message":"trevnorris: I think we'll figure out something","date":"2013-03-27T20:10:18.859Z","type":"message"}
{"nick":"indutny","message":"isaacs: have you seen latest comment?","date":"2013-03-27T20:11:17.099Z","type":"message"}
{"nick":"hij1nx","message":"ok, maybe i will just patch higher up and say tough cookies. because otherwise its looking quite complicated. thanks!","date":"2013-03-27T20:15:14.518Z","type":"message"}
{"nick":"hij1nx","message":"oops, sorry, hit the 'up' arrow","date":"2013-03-27T20:15:25.936Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-03-27T20:15:33.803Z","type":"message"}
{"nick":"trevnorris","message":"indutny: well, i'll impressed if current buffer performance is improved with this. =)","date":"2013-03-27T20:21:10.791Z","type":"message"}
{"nick":"indutny","message":"yeah, I understand","date":"2013-03-27T20:21:26.363Z","type":"message"}
{"nick":"indutny","message":"let me think about it for a bit","date":"2013-03-27T20:21:33.661Z","type":"message"}
{"nick":"indutny","message":"I've just looked at his solution","date":"2013-03-27T20:21:40.804Z","type":"message"}
{"nick":"trevnorris","message":"i mean. i really like the idea. that removes a lot of code complexity.","date":"2013-03-27T20:21:52.335Z","type":"message"}
{"nick":"trevnorris","message":"and since they can write with all their internal api magic, who knows what could happen.","date":"2013-03-27T20:22:12.260Z","type":"message"}
{"nick":"indutny","message":"basically","date":"2013-03-27T20:24:32.057Z","type":"message"}
{"nick":"indutny","message":"its just mallocs buffers","date":"2013-03-27T20:24:38.924Z","type":"message"}
{"nick":"trevnorris","message":"it also memsets to 0 right afterwards.","date":"2013-03-27T20:24:57.201Z","type":"message"}
{"nick":"trevnorris","message":"erm. sorry. thinking out loud.","date":"2013-03-27T20:25:22.525Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2013-03-27T20:26:06.339Z","type":"message"}
{"nick":"indutny","message":"I see it","date":"2013-03-27T20:26:09.261Z","type":"message"}
{"nick":"indutny","message":"I mean, that's not really what I expected to see","date":"2013-03-27T20:26:19.076Z","type":"message"}
{"nick":"indutny","message":"I need to figure out if it'll be faster","date":"2013-03-27T20:26:30.040Z","type":"message"}
{"nick":"trevnorris","message":"it's part of the typed array spec. unfortunately can't get around that.","date":"2013-03-27T20:26:50.245Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-03-27T20:26:57.908Z","type":"message"}
{"nick":"indutny","message":"I mean","date":"2013-03-27T20:27:00.233Z","type":"message"}
{"nick":"indutny","message":"they're invoking weak callbacks","date":"2013-03-27T20:27:04.318Z","type":"message"}
{"nick":"indutny","message":"and using them","date":"2013-03-27T20:27:08.272Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-03-27T20:27:29.331Z","type":"message"}
{"nick":"indutny","message":"they're using Persistent","date":"2013-03-27T20:27:34.091Z","type":"message"}
{"nick":"indutny","message":"whoa","date":"2013-03-27T20:27:35.446Z","type":"message"}
{"nick":"indutny","message":"fuck it :)","date":"2013-03-27T20:27:38.386Z","type":"message"}
{"nick":"trevnorris","message":"indutny: well, we can still do buffer pooling like we are now.","date":"2013-03-27T20:28:06.131Z","type":"message"}
{"nick":"trevnorris","message":"var b = new ArrayBuffer(1024); var c = new Uint32Array(b, 0, 512); var d = new Uint32Array(b, 512)'","date":"2013-03-27T20:28:45.541Z","type":"message"}
{"nick":"trevnorris","message":"erm that should be Uint8Array","date":"2013-03-27T20:29:01.407Z","type":"message"}
{"nick":"indutny","message":"no","date":"2013-03-27T20:29:13.090Z","type":"message"}
{"nick":"indutny","message":"that's bad","date":"2013-03-27T20:29:14.796Z","type":"message"}
{"nick":"indutny","message":"ok, time to sleep","date":"2013-03-27T20:29:35.554Z","type":"message"}
{"nick":"trevnorris","message":"sleep tight","date":"2013-03-27T20:29:43.271Z","type":"message"}
{"nick":"tjfontaine","message":"ya, using typedarrays as defined by the spec for backing node buffers seems unlikely, however","date":"2013-03-27T20:30:07.372Z","type":"message"}
{"nick":"tjfontaine","message":"it's likely that anyone doing the work will come to the same conclusions that persistent handles are too expensive, and then once that's solved the mallocs will be the expensive part","date":"2013-03-27T20:30:53.032Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: i agree (actually am sure it's impossible) but don't want to rule it out yet.","date":"2013-03-27T20:31:03.031Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: well, don't forget they also are required to memset to 0 after the malloc.","date":"2013-03-27T20:31:14.872Z","type":"message"}
{"nick":"tjfontaine","message":"right, but ignore the spec portion for now, and agree that there is an abstraction that defines a typedarray that really is nearly equivalent to what a node buffer is","date":"2013-03-27T20:31:50.734Z","type":"message"}
{"nick":"tjfontaine","message":"a typedarray is a specialization of a node buffer, more or less","date":"2013-03-27T20:32:15.608Z","type":"message"}
{"nick":"trevnorris","message":"yeah. take a way a few of the spec specifics and they're pretty much the same.","date":"2013-03-27T20:32:27.871Z","type":"message"}
{"nick":"tjfontaine","message":"so aside from the memset and memcpy's that typedarrays want to do, what would make typedarrays fast for v8, woudl make them fast for node buffers","date":"2013-03-27T20:33:04.752Z","type":"message"}
{"nick":"trevnorris","message":"whoa, we need to rip out the d8 implementation of typed arrays. it kicks node's ass.","date":"2013-03-27T20:34:06.878Z","type":"message"}
{"nick":"tjfontaine","message":"from an outside perspective of what you, indutny, and ben have been doing I see two choices","date":"2013-03-27T20:34:07.234Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-03-27T20:35:01.621Z","type":"join"}
{"nick":"tjfontaine","message":"1) figure out how to \"reuse\" a persistent/object-caching after the weak callback has been done, 2) go down a level and implement the right solution in v8 internal semantics","date":"2013-03-27T20:35:15.570Z","type":"message"}
{"nick":"stagas","date":"2013-03-27T20:35:41.330Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: you're equipped to answer the latest comment on that codesite \"What are your issues with persistent handles? What you hope to achieve? Is the allocation speed a problem for you, or retention (dead buffers do not deallocate fast enough)?\"","date":"2013-03-27T20:36:44.677Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: i've posted a link to my response on the forum: https://groups.google.com/forum/?hl=en&fromgroups=#!topic/v8-users/6kSAbnUb-rQ","date":"2013-03-27T20:37:28.675Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-03-27T20:37:37.047Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-03-27T20:39:13.599Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-03-27T20:40:02.275Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-27T20:55:05.961Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-27T20:55:33.552Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 252 seconds","date":"2013-03-27T21:00:03.228Z","type":"quit"}
{"nick":"mikeal","date":"2013-03-27T21:01:32.540Z","type":"join"}
{"nick":"`3rdEden","date":"2013-03-27T21:03:09.350Z","type":"join"}
{"nick":"trevnorris","message":"ugh. where's bnoordhuis when you need him?","date":"2013-03-27T21:03:11.392Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: here. think this is an ugly, but working, way to reuse persistents: https://gist.github.com/trevnorris/5243611","date":"2013-03-27T21:03:29.993Z","type":"message"}
{"nick":"trevnorris","message":"ooh. think I have an idea to remove a bunch of MakeWeak's","date":"2013-03-27T21:04:52.956Z","type":"message"}
{"nick":"wavded__","reason":"Remote host closed the connection","date":"2013-03-27T21:05:13.209Z","type":"quit"}
{"nick":"dscape","reason":"Remote host closed the connection","date":"2013-03-27T21:05:13.419Z","type":"quit"}
{"nick":"tjfontaine","message":"trevnorris: simply not disposing is kosher enough to let it go back into the wild?","date":"2013-03-27T21:06:34.476Z","type":"message"}
{"nick":"trevnorris","message":"yeah. a persist hangs around until Dispose is called.","date":"2013-03-27T21:06:52.939Z","type":"message"}
{"nick":"tjfontaine","message":"but you don't have to markt he object as live again?","date":"2013-03-27T21:07:06.516Z","type":"message"}
{"nick":"trevnorris","message":"you mean make it weak?","date":"2013-03-27T21:07:44.932Z","type":"message"}
{"nick":"trevnorris","message":"(again)","date":"2013-03-27T21:07:51.084Z","type":"message"}
{"nick":"tjfontaine","message":"I mean, it's proper to simply introduce the same object back into the wild after the weak cb has been triggered?","date":"2013-03-27T21:09:26.624Z","type":"message"}
{"nick":"tjfontaine","message":"there aren't any other internal flags set by the gc that indicate it's already tried to free this object?","date":"2013-03-27T21:09:59.599Z","type":"message"}
{"nick":"trevnorris","message":"not that I know of. i'm sure indutny or bnoordhius would have something to say.","date":"2013-03-27T21:10:22.436Z","type":"message"}
{"nick":"trevnorris","message":"funny though. reusing a persistent like this is pretty much a noop compared to the cost of MakeWeak and SetHiddenValue","date":"2013-03-27T21:11:45.349Z","type":"message"}
{"nick":"tjfontaine","message":"yes, that's the point of caching :)","date":"2013-03-27T21:12:05.926Z","type":"message"}
{"nick":"trevnorris","message":"how do you mean? the hidden values are set on the js objects themselves, not on the persistents. and when MakeWeak is triggered it has to be set again.","date":"2013-03-27T21:12:48.087Z","type":"message"}
{"nick":"tjfontaine","message":"oh I thought you were saying your example didn't require makeweak to be set again","date":"2013-03-27T21:13:53.427Z","type":"message"}
{"nick":"trevnorris","message":"yeah. didn't think so. then it fatally crashed in a ball of flames.","date":"2013-03-27T21:14:17.811Z","type":"message"}
{"nick":"tjfontaine","message":"right ok yes","date":"2013-03-27T21:14:30.980Z","type":"message"}
{"nick":"trevnorris","message":"too bad they don't have a MakePersistentlyWeak() =P","date":"2013-03-27T21:14:49.774Z","type":"message"}
{"nick":"trevnorris","message":"though I wonder what kind of control I'd have if I extended the Persistent class with my own.","date":"2013-03-27T21:15:18.985Z","type":"message"}
{"nick":"trevnorris","message":"(heh, at this rate i'll never finish the new buffer implementation)","date":"2013-03-27T21:15:44.399Z","type":"message"}
{"nick":"tjfontaine","message":"I think what you're finding is that this isn't going to be done with the external api, which is great to learn and experience the v8 api, but if it could have been done -- it probably would have been done","date":"2013-03-27T21:16:42.036Z","type":"message"}
{"nick":"trevnorris","message":"yeah.... but hey. you're right. I understand v8 way better now because of this.","date":"2013-03-27T21:17:37.947Z","type":"message"}
{"nick":"tjfontaine","message":"absolutely, and now to understand even better you go down a level and muck with the internals to get what you want :P","date":"2013-03-27T21:18:07.762Z","type":"message"}
{"nick":"trevnorris","message":"heh. that's going to take some time. just looking at the changeset from the mailer I realized how little I know.","date":"2013-03-27T21:18:48.343Z","type":"message"}
{"nick":"bradleymeck","date":"2013-03-27T21:22:29.402Z","type":"join"}
{"nick":"c4milo","date":"2013-03-27T21:25:18.961Z","type":"join"}
{"nick":"trevnorris","message":"well bummer. global-handles.cc. has a flag \"WEAK\" that just needs to be set. if that were exposed i could reset it and not need to call make callback again.","date":"2013-03-27T21:26:17.340Z","type":"message"}
{"nick":"trevnorris","message":"(at least from my limited understanding)","date":"2013-03-27T21:26:23.393Z","type":"message"}
{"nick":"dscape","date":"2013-03-27T21:29:07.176Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: now, you'll be my freaking hero if you can find a faster way to do something like SetHiddenValue(). that thing cuts performance in half.","date":"2013-03-27T21:30:37.656Z","type":"message"}
{"nick":"dominictarr","date":"2013-03-27T21:31:02.868Z","type":"join"}
{"nick":"Raynos_","date":"2013-03-27T21:31:30.978Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: heh, well that will certainly involve some learning","date":"2013-03-27T21:35:55.276Z","type":"message"}
{"nick":"wavded__","date":"2013-03-27T21:36:18.608Z","type":"join"}
{"nick":"trevnorris","message":"lol. seriously. think i've spent 3 days just figuring out how Persistents work.","date":"2013-03-27T21:36:24.376Z","type":"message"}
{"nick":"Raynos_","new_nick":"Raynos","date":"2013-03-27T21:42:07.754Z","type":"nick"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-27T21:48:02.385Z","type":"quit"}
{"nick":"mikeal","date":"2013-03-27T21:49:12.732Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: it's so hard not to continuously optimize. i mean, right now the allocator is running 3314.58 ops/millisecond. i mean. that's ~300 nanoseconds per call.","date":"2013-03-27T21:51:30.476Z","type":"message"}
{"nick":"trevnorris","message":"*...hard for me not to...","date":"2013-03-27T21:51:43.628Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-27T21:52:38.710Z","type":"quit"}
{"nick":"tjfontaine","message":"trevnorris: heh, but if you want to continue to optimize find out why SetHiddenValue is so expensive :P","date":"2013-03-27T21:53:44.053Z","type":"message"}
{"nick":"trevnorris","message":"ugh. damn you!!!","date":"2013-03-27T21:54:03.208Z","type":"message"}
{"nick":"trevnorris","action":"tries to resist the urge to look at v8 source...","date":"2013-03-27T21:54:16.294Z","type":"action"}
{"nick":"tjfontaine","message":"use the source luke","date":"2013-03-27T21:54:36.137Z","type":"message"}
{"nick":"trevnorris","message":"eh?","date":"2013-03-27T21:54:41.628Z","type":"message"}
{"nick":"trevnorris","message":"oh. lol","date":"2013-03-27T21:54:49.229Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2013-03-27T21:54:56.628Z","type":"message"}
{"nick":"trevnorris","message":"that has to be on a shirt or something","date":"2013-03-27T21:55:12.329Z","type":"message"}
{"nick":"tjfontaine","message":"ya, it's an old saying","date":"2013-03-27T21:55:26.060Z","type":"message"}
{"nick":"rendar","date":"2013-03-27T21:57:18.952Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-03-27T22:00:38.774Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-27T22:04:07.701Z","type":"join"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-03-27T22:16:10.069Z","type":"nick"}
{"nick":"othiym23","message":"if I want to get a solid understanding of the Node tick cycle (e.g. what is _tickFromSpinner for?), are there any good resources I can look at?","date":"2013-03-27T22:17:06.730Z","type":"message"}
{"nick":"wolfeidau","date":"2013-03-27T22:17:18.730Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: a user beckons you :)","date":"2013-03-27T22:17:22.341Z","type":"message"}
{"nick":"trevnorris","message":"lol","date":"2013-03-27T22:17:41.985Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: yeah, me.","date":"2013-03-27T22:17:45.781Z","type":"message"}
{"nick":"trevnorris","message":"what can I help you with?","date":"2013-03-27T22:17:49.539Z","type":"message"}
{"nick":"othiym23","message":"trying to actually wrap my head around the implementation of startup.processNextTick and determined to not let it defeat me this time","date":"2013-03-27T22:17:52.557Z","type":"message"}
{"nick":"trevnorris","message":"heh. ok. let me go through the basics.","date":"2013-03-27T22:18:39.281Z","type":"message"}
{"nick":"othiym23","message":"among other things, I'm trying to grok _tickInfoBox, and also trying to figure out how _fatalException works vis a vis the domains uncaughtException hack in 0.8","date":"2013-03-27T22:19:03.152Z","type":"message"}
{"nick":"trevnorris","message":"process.nextTick adds a callback to the nextTickQueue (an array of functions)","date":"2013-03-27T22:19:17.759Z","type":"message"}
{"nick":"trevnorris","message":"ah, yeah. _tickInfoBox was my work.","date":"2013-03-27T22:19:24.259Z","type":"message"}
{"nick":"othiym23","message":"it's a very confusing thing to try to debug ;)","date":"2013-03-27T22:19:46.486Z","type":"message"}
{"nick":"trevnorris","message":"heh, took me a while to get it myself.","date":"2013-03-27T22:20:19.722Z","type":"message"}
{"nick":"trevnorris","message":"so look for MakeCallback in src/node.cc","date":"2013-03-27T22:20:35.800Z","type":"message"}
{"nick":"othiym23","message":"OK, I have all 3 of them in a window","date":"2013-03-27T22:21:25.689Z","type":"message"}
{"nick":"trevnorris","message":"they call up from top to bottom. so you want the top most.","date":"2013-03-27T22:22:03.288Z","type":"message"}
{"nick":"othiym23","message":"also: how much of this is going to change in 0.10.2? I've been following the changes you've been making to the domain / non-domain tick callbacks","date":"2013-03-27T22:22:16.033Z","type":"message"}
{"nick":"othiym23","message":"got it","date":"2013-03-27T22:22:20.159Z","type":"message"}
{"nick":"othiym23","message":"(the version I'm looking at is on the v0.10.1-release branch)","date":"2013-03-27T22:22:48.584Z","type":"message"}
{"nick":"trevnorris","message":"now forget the first \"if()\" that's just lazy loading some necessaries.","date":"2013-03-27T22:23:19.191Z","type":"message"}
{"nick":"othiym23","message":"right","date":"2013-03-27T22:23:40.951Z","type":"message"}
{"nick":"trevnorris","message":"now you see \"Local<Value> ret = callback->Call()\" that calls a js function that was passed in.","date":"2013-03-27T22:24:00.194Z","type":"message"}
{"nick":"othiym23","message":"so it looks like there's two places FatalException can be called: after the first callback, and then again after the nextTick queue has been run","date":"2013-03-27T22:24:09.482Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-03-27T22:25:10.447Z","type":"quit"}
{"nick":"trevnorris","message":"after the callback has run you see: \"if (tick_infobox.length == 0)\"","date":"2013-03-27T22:25:26.949Z","type":"message"}
{"nick":"trevnorris","message":"that checks if any callbacks exist in the nextTickQueue","date":"2013-03-27T22:25:57.856Z","type":"message"}
{"nick":"trevnorris","message":"tick_infobox is a struck defined on L151-155","date":"2013-03-27T22:26:23.817Z","type":"message"}
{"nick":"othiym23","message":"still with you","date":"2013-03-27T22:26:46.289Z","type":"message"}
{"nick":"othiym23","message":"what's the \"spinner\"?","date":"2013-03-27T22:26:51.890Z","type":"message"}
{"nick":"trevnorris","message":"we'll get to that.","date":"2013-03-27T22:27:02.354Z","type":"message"}
{"nick":"trevnorris","message":"then if you look at line 2493 you'll see that I've setup an external data array pointing to the struct.","date":"2013-03-27T22:27:10.540Z","type":"message"}
{"nick":"trevnorris","message":"the reason for this is because it allows js to access raw memory. which is by far the fastest way for c++ to read in values from js.","date":"2013-03-27T22:27:38.146Z","type":"message"}
{"nick":"trevnorris","message":"so it's been exposed as an array to process._tickInfoBox","date":"2013-03-27T22:28:04.900Z","type":"message"}
{"nick":"trevnorris","message":"each array placement is a value in the struct.","date":"2013-03-27T22:28:18.816Z","type":"message"}
{"nick":"othiym23","message":"right","date":"2013-03-27T22:29:08.674Z","type":"message"}
{"nick":"trevnorris","message":"then to make sure users can't screw with it afterwards I make a local reference to it in node.js as infoBox","date":"2013-03-27T22:29:14.037Z","type":"message"}
{"nick":"othiym23","message":"yeah","date":"2013-03-27T22:29:40.470Z","type":"message"}
{"nick":"othiym23","message":"that part's relatively straightforward, and I think I've sort of worked out how it gets decremented, although I gotta say that style of table-driven control flow may be fast, but it's confusing as hell to step through","date":"2013-03-27T22:30:29.275Z","type":"message"}
{"nick":"trevnorris","message":"yeah. i realize that. but this change prevents +10k js calls to _tickCallback every second under high load.","date":"2013-03-27T22:31:18.370Z","type":"message"}
{"nick":"othiym23","message":"yeah, and I appreciate the work you've put into this","date":"2013-03-27T22:31:53.644Z","type":"message"}
{"nick":"trevnorris","message":"and this sort of thing most often wouldn't be allowed in core, except this is extremely hot code.","date":"2013-03-27T22:31:58.084Z","type":"message"}
{"nick":"othiym23","message":"it would be awesome to get this all written up somewhere in the source tree, though","date":"2013-03-27T22:32:14.055Z","type":"message"}
{"nick":"trevnorris","message":"np. performance tuning is my specialty. =)","date":"2013-03-27T22:32:15.677Z","type":"message"}
{"nick":"trevnorris","message":"what do you mean by \"source tree\"? like the code itself","date":"2013-03-27T22:32:53.669Z","type":"message"}
{"nick":"othiym23","message":"I was thinking about the docs folder in the Linux source tree","date":"2013-03-27T22:35:06.996Z","type":"message"}
{"nick":"othiym23","message":"I mean, it would be awesome to have this on the docs site, but I think the number of ordinary Node users who are going to want to know this stuff is probably vanishingly small","date":"2013-03-27T22:35:31.639Z","type":"message"}
{"nick":"othiym23","message":"I'm trying to abuse domains (semi-successfully), so I need more detail, and the source is complex enough (what with the way things bounce between node.js and node.cc / node.h) that a breadcrumb trail through the internals and their architecture would be extremely useful","date":"2013-03-27T22:36:43.381Z","type":"message"}
{"nick":"othiym23","message":"I realize I could probably do something abou this above and beyond complaining about it, but I need to understand it myself first ;)","date":"2013-03-27T22:37:14.272Z","type":"message"}
{"nick":"trevnorris","message":"if you want throw up an issue about better docs (if one doesn't already exist) and cc me.","date":"2013-03-27T22:38:49.084Z","type":"message"}
{"nick":"othiym23","message":"sure, that's a good idea","date":"2013-03-27T22:39:19.901Z","type":"message"}
{"nick":"trevnorris","message":"now _tickFromSpinner gets called off uv_run.","date":"2013-03-27T22:40:19.892Z","type":"message"}
{"nick":"trevnorris","message":"if you look at deps/uv/src/unix/core.c line 296-328","date":"2013-03-27T22:40:40.264Z","type":"message"}
{"nick":"othiym23","message":"so that's the hook into the uv's turning of the event loop?","date":"2013-03-27T22:41:27.254Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-03-27T22:41:35.445Z","type":"message"}
{"nick":"trevnorris","message":"so in src/node.cc L 179-208 you'll see the callback that gets kicked off from uv__run_idle","date":"2013-03-27T22:42:29.625Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: please make sure I don't make an ass of myself. =)","date":"2013-03-27T22:42:40.402Z","type":"message"}
{"nick":"trevnorris","message":"so Spin calls _tickFromSpinner, which also enters into the _tickCallback loop.","date":"2013-03-27T22:43:24.830Z","type":"message"}
{"nick":"othiym23","message":"yeah, so tick_spinner is set to Spin in NeedTickCallback / _needTickCallback, right?","date":"2013-03-27T22:43:39.079Z","type":"message"}
{"nick":"AvianFlu","date":"2013-03-27T22:43:45.899Z","type":"join"}
{"nick":"trevnorris","message":"yeah. when _needTickCallback() fires it lets node know to go check sys IO.","date":"2013-03-27T22:44:23.188Z","type":"message"}
{"nick":"trevnorris","message":"then when the _tickCallback even loop breaks the spinner will return.","date":"2013-03-27T22:44:41.553Z","type":"message"}
{"nick":"trevnorris","message":"breaks as in finishes or errors.","date":"2013-03-27T22:44:53.831Z","type":"message"}
{"nick":"othiym23","message":"OK, so dox request is filed at https://github.com/joyent/node/issues/5156","date":"2013-03-27T22:45:09.440Z","type":"message"}
{"nick":"othiym23","message":"OK, that all makes sense","date":"2013-03-27T22:45:32.463Z","type":"message"}
{"nick":"trevnorris","message":"thx","date":"2013-03-27T22:45:37.859Z","type":"message"}
{"nick":"`3rdEden","reason":"Remote host closed the connection","date":"2013-03-27T22:45:40.035Z","type":"quit"}
{"nick":"trevnorris","message":"now right now there's also a \"maxTickDepth\". it makes sure you don't have an infinite recursive nextTick callback loop.","date":"2013-03-27T22:46:00.190Z","type":"message"}
{"nick":"trevnorris","message":"because that would starve IO, as it would never allow the spinner to return.","date":"2013-03-27T22:46:20.494Z","type":"message"}
{"nick":"trevnorris","message":"but it will be removed in v0.12 since setImmediate should now be used for that scenario.","date":"2013-03-27T22:46:54.671Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: re: maxTickDepth, we'll have to think about how to handle domains that call nextTick from an error if they're going to  be removed.","date":"2013-03-27T22:47:33.238Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-27T22:47:41.394Z","type":"quit"}
{"nick":"trevnorris","message":"almost had the removed, but that kept failing me.","date":"2013-03-27T22:47:42.486Z","type":"message"}
{"nick":"trevnorris","message":"wow, me typing fast == really bad grammer","date":"2013-03-27T22:48:09.512Z","type":"message"}
{"nick":"othiym23","message":"sad to say, I can think of some apps I've worked on that could blow maxTickDepth without recursion","date":"2013-03-27T22:48:54.770Z","type":"message"}
{"nick":"othiym23","message":"but that's fine, maxTickDepth is configurable, and also those apps were horribly designed anyway","date":"2013-03-27T22:49:07.427Z","type":"message"}
{"nick":"trevnorris","message":"now, with domains. there are just two extra things to note.","date":"2013-03-27T22:49:51.173Z","type":"message"}
{"nick":"trevnorris","message":"first you'll want to jump to the latest on v0.10 branch.","date":"2013-03-27T22:51:37.533Z","type":"message"}
{"nick":"trevnorris","message":"(since there was an unknown bug in v0.10.1)","date":"2013-03-27T22:51:51.390Z","type":"message"}
{"nick":"trevnorris","message":"process._usingDomains() is called from lib/domains.js to override all the default functionality with domain specific functionality.","date":"2013-03-27T22:52:42.894Z","type":"message"}
{"nick":"trevnorris","message":"where _usingDomains() is defined in src/node.cc L 902-923","date":"2013-03-27T22:53:25.161Z","type":"message"}
{"nick":"othiym23","message":"yeah, I saw that change go in","date":"2013-03-27T22:55:08.332Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-27T22:55:17.017Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-27T22:55:44.307Z","type":"join"}
{"nick":"trevnorris","message":"the only real different between domains and no domains is the former checks if the callback has a domain attached that needs to be entered.","date":"2013-03-27T22:55:52.497Z","type":"message"}
{"nick":"othiym23","message":"OK","date":"2013-03-27T22:57:32.958Z","type":"message"}
{"nick":"othiym23","message":"thank you","date":"2013-03-27T22:57:46.213Z","type":"message"}
{"nick":"trevnorris","message":"yeah. np.","date":"2013-03-27T22:57:50.561Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: here, reuse of Persistents (only requirement being needing to call MakeWeak, since don't have access to reset the WEAK flag): https://gist.github.com/trevnorris/5243611","date":"2013-03-27T22:58:49.191Z","type":"message"}
{"nick":"c4milo","reason":"Ping timeout: 246 seconds","date":"2013-03-27T23:00:10.954Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-27T23:09:58.714Z","type":"quit"}
{"nick":"paddybyers","reason":"Remote host closed the connection","date":"2013-03-27T23:15:56.819Z","type":"quit"}
{"nick":"paddybyers","date":"2013-03-27T23:16:11.621Z","type":"join"}
{"nick":"`3rdEden","date":"2013-03-27T23:16:12.947Z","type":"join"}
{"nick":"rvagg","reason":"Ping timeout: 256 seconds","date":"2013-03-27T23:20:25.035Z","type":"quit"}
{"nick":"CAPSLOCKBOT","reason":"Ping timeout: 256 seconds","date":"2013-03-27T23:20:25.036Z","type":"quit"}
{"nick":"bnoordhuis","message":"trevnorris:  p_ptr = &p_obj; <- p_obj is still a stack variable","date":"2013-03-27T23:20:54.315Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: but it is only used inside the Alloc function.","date":"2013-03-27T23:21:23.301Z","type":"message"}
{"nick":"kuplatup1u","reason":"Ping timeout: 256 seconds","date":"2013-03-27T23:21:32.985Z","type":"quit"}
{"nick":"bnoordhuis","message":"trevnorris: p_current_alloc = p_ptr; <- nuh-uh","date":"2013-03-27T23:22:02.287Z","type":"message"}
{"nick":"chobie1","reason":"Ping timeout: 256 seconds","date":"2013-03-27T23:22:07.275Z","type":"quit"}
{"nick":"chobie1","date":"2013-03-27T23:22:32.763Z","type":"join"}
{"nick":"trevnorris","message":"=P","date":"2013-03-27T23:23:05.669Z","type":"message"}
{"nick":"kuplatupsu","date":"2013-03-27T23:23:25.388Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: ok. the second use in the \"if (length <= ALLOC_SIZE)\" is crap. but what about the use in the \"if (has_free)\"?","date":"2013-03-27T23:24:14.390Z","type":"message"}
{"nick":"trevnorris","message":"because there i'm just trying to point to the p_array storage cell that definitely contains the instantiated Persistent.","date":"2013-03-27T23:24:50.832Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: that's legal albeit somewhat pointless","date":"2013-03-27T23:25:05.907Z","type":"message"}
{"nick":"`3rdEden","reason":"Ping timeout: 272 seconds","date":"2013-03-27T23:25:08.749Z","type":"quit"}
{"nick":"trevnorris","message":"why's that?","date":"2013-03-27T23:25:15.313Z","type":"message"}
{"nick":"bnoordhuis","message":"well, i explained that a Persistent is really a pointer to a Handle in disguise?","date":"2013-03-27T23:25:30.247Z","type":"message"}
{"nick":"rvagg","date":"2013-03-27T23:25:37.709Z","type":"join"}
{"nick":"trevnorris","message":"in the \"has_free\" path you'll notice that i don't create a Persisten::New again.","date":"2013-03-27T23:26:08.860Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: so what did we have to do for windows to be a \"verified publisher\"?","date":"2013-03-27T23:26:50.976Z","type":"message"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-03-27T23:27:00.143Z","type":"quit"}
{"nick":"TooTallNate","message":"in lamens terms :p","date":"2013-03-27T23:27:02.445Z","type":"message"}
{"nick":"TooTallNate","message":"i've already found http://msdn.microsoft.com/en-us/library/ms537361(v=vs.85).aspx#Obtaining_Certificat","date":"2013-03-27T23:27:08.015Z","type":"message"}
{"nick":"tjfontaine","message":"we aren't?","date":"2013-03-27T23:27:11.493Z","type":"message"}
{"nick":"TooTallNate","message":"tjfontaine: we are… this is for work","date":"2013-03-27T23:27:17.903Z","type":"message"}
{"nick":"loladiro","date":"2013-03-27T23:27:18.456Z","type":"join"}
{"nick":"tjfontaine","message":"oh","date":"2013-03-27T23:27:20.975Z","type":"message"}
{"nick":"tjfontaine","message":"\"pay\" :)","date":"2013-03-27T23:27:26.033Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: oh right, sorry - i thought you were assigning it without really using it. nvm","date":"2013-03-27T23:27:26.793Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: ok, so is there still a problem there or did I finally find a legitimate way to reuse a persistent handle?","date":"2013-03-27T23:28:14.331Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u00027514149\u0002 : darwin: don't select(&exceptfds) in fallback path  The exceptfds set is f (+1 more commits) - http://git.io/tMK7dw","date":"2013-03-27T23:28:24.428Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u0002982877e\u0002 : deps: upgrade libuv to 7514149 - http://git.io/gvSLXQ","date":"2013-03-27T23:28:58.458Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: the if branch seems okay, the else branch is wrong","date":"2013-03-27T23:29:07.483Z","type":"message"}
{"nick":"trevnorris","message":"eh?","date":"2013-03-27T23:29:58.557Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10\u0002: #21 \u00037UNSTABLE\u000f windows (6/187) linux (2/186) osx (2/186) smartos (4/186) http://jenkins.nodejs.org/job/libuv-v0.10/21/","date":"2013-03-27T23:30:41.564Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: because stack var","date":"2013-03-27T23:33:13.595Z","type":"message"}
{"nick":"trevnorris","message":"ah ok. yeah, have a fix for that.","date":"2013-03-27T23:35:43.479Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: though unfortunately it's pretty useless since the WEAK flag is cleared when the callback is called, still incur the overhead of calling MakeWeak again.","date":"2013-03-27T23:36:36.531Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2013-03-27T23:38:22.958Z","type":"message"}
{"nick":"trevnorris","message":"well. at least now I understand how they work. thanks for that. =)","date":"2013-03-27T23:38:50.927Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-27T23:42:25.207Z","type":"quit"}
{"nick":"luxigo","date":"2013-03-27T23:44:44.876Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #79 \u00037UNSTABLE\u000f linux-x64 (1/569) windows-x64 (5/569) smartos-ia32 (1/569) windows-ia32 (5/569) http://jenkins.nodejs.org/job/nodejs-v0.10/79/","date":"2013-03-27T23:45:46.454Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: nice use of the word \"elucidating\"","date":"2013-03-27T23:48:05.604Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-27T23:49:40.899Z","type":"quit"}
{"nick":"loladiro","date":"2013-03-27T23:51:34.928Z","type":"join"}
{"nick":"isaacs","message":"TooTallNate: i don't actually know what Joyent had to do","date":"2013-03-27T23:52:42.206Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: haha, damn, ok","date":"2013-03-27T23:52:52.523Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: but i can put you in touch with claudio or somebody over there.","date":"2013-03-27T23:53:05.730Z","type":"message"}
{"nick":"isaacs","message":"TooTallNate: are you trying to make learnboost a verified kajigger?","date":"2013-03-27T23:53:18.366Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: ya, we're gonna be distributing an .exe soon, so we gotta make sure that's all pretty","date":"2013-03-27T23:55:02.334Z","type":"message"}
{"nick":"Kakera","reason":"Ping timeout: 245 seconds","date":"2013-03-27T23:58:44.961Z","type":"quit"}
{"nick":"brson_","date":"2013-03-27T23:59:02.692Z","type":"join"}
{"nick":"isaacs","message":"i see","date":"2013-03-27T23:59:53.150Z","type":"message"}
