{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-08-06T00:00:01.030Z","type":"quit"}
{"nick":"ircretary","date":"2013-08-06T00:00:08.335Z","type":"join"}
{"nick":"trevnorris","message":"othiym23: my benchmarks are, write my own implementation from scratch using minimal everything and compare to the fully featured version.","date":"2013-08-06T00:00:10.672Z","type":"message"}
{"nick":"mikeal","message":"Python async + threads are the exact thing that pushed me to node in the early days. node was so broken, but less broken than trying to do the same thing in Python.","date":"2013-08-06T00:00:23.007Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: then attempt to close that gap","date":"2013-08-06T00:00:28.002Z","type":"message"}
{"nick":"isaacs","message":"\"performance vs stability\" is a false dichotomy","date":"2013-08-06T00:00:42.539Z","type":"message"}
{"nick":"mikeal","message":"tjfontaine: you gotta put that on twitter","date":"2013-08-06T00:00:51.506Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-08-06T00:01:07.699Z","type":"message"}
{"nick":"isaacs","message":"if you get enough people slamming your server, and not enough eperformance, you lose stability","date":"2013-08-06T00:01:12.621Z","type":"message"}
{"nick":"isaacs","message":"mikeal: see, this is why i should be running @nodejsleaders","date":"2013-08-06T00:01:29.942Z","type":"message"}
{"nick":"isaacs","message":"mikeal: becasue there's some hilarious-ass shit that we say, which is completely fucking bonkers.","date":"2013-08-06T00:01:41.649Z","type":"message"}
{"nick":"mikeal","message":"isaacs: more servers?","date":"2013-08-06T00:01:51.201Z","type":"message"}
{"nick":"isaacs","message":"mikeal: *someone* ought to be making better fun of us.","date":"2013-08-06T00:01:51.509Z","type":"message"}
{"nick":"othiym23","message":"I liked how the npm account was suddenly endorsing \"Yo, Is This Racist?\" last night","date":"2013-08-06T00:01:58.838Z","type":"message"}
{"nick":"isaacs","message":"othiym23: yeah, lol","date":"2013-08-06T00:02:06.367Z","type":"message"}
{"nick":"othiym23","message":"isaacs, your approach to choosing Twitter accounts is whimsical","date":"2013-08-06T00:02:09.812Z","type":"message"}
{"nick":"isaacs","message":"othiym23: only for a second","date":"2013-08-06T00:02:12.238Z","type":"message"}
{"nick":"isaacs","message":"othiym23: and it's not like everyone doesn't already know that @npmjs is my alterego","date":"2013-08-06T00:02:24.469Z","type":"message"}
{"nick":"othiym23","message":"mikeal: that stuff has all gotten a ton better in Python recently, and Guido announced a PEP at this year's PyCon that makes async stuff first-class in Python","date":"2013-08-06T00:03:03.733Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u00026942a95\u0002 : repl: Add 'smalloc' to list of known modules (+1 more commits) - http://git.io/73WNLg","date":"2013-08-06T00:03:19.725Z","type":"message"}
{"nick":"mikeal","message":"Python has issues.","date":"2013-08-06T00:03:23.624Z","type":"message"}
{"nick":"tjfontaine","message":"othiym23: ya, and saghul has a version based on libuv","date":"2013-08-06T00:03:26.977Z","type":"message"}
{"nick":"othiym23","message":"it clearly takes a lot of inspiration from Node and some of the ES6 generator stuff, which I guess is fitting given how much of TC39's generator implementation was stolen from Python in the first place","date":"2013-08-06T00:03:34.213Z","type":"message"}
{"nick":"mikeal","message":"that's all I'm gonna say. bigger issues than can be solved in code.","date":"2013-08-06T00:03:34.444Z","type":"message"}
{"nick":"mikeal","message":"community issues, ecosystem issues.","date":"2013-08-06T00:03:40.872Z","type":"message"}
{"nick":"tjfontaine","message":"GIL issues","date":"2013-08-06T00:03:49.252Z","type":"message"}
{"nick":"othiym23","message":"hahaha I know alll about your issues with Python, dude","date":"2013-08-06T00:03:53.200Z","type":"message"}
{"nick":"othiym23","message":"I know you try to keep them to yourself, but I still know somehow","date":"2013-08-06T00:04:06.247Z","type":"message"}
{"nick":"c4milo","date":"2013-08-06T00:04:10.152Z","type":"join"}
{"nick":"mikeal","message":"they aren't *my* issues because I washed my hands of it years ago","date":"2013-08-06T00:04:10.372Z","type":"message"}
{"nick":"tjfontaine","message":"havin python problems, I feel bad for you son, I've got 99 issues, but a GIL ain't one.","date":"2013-08-06T00:04:33.566Z","type":"message"}
{"nick":"mikeal","message":"pkg_tools/setup_tools is more of a plague on Python than the GIL","date":"2013-08-06T00:04:57.978Z","type":"message"}
{"nick":"tjfontaine","message":"easy_install pip <-- inception?","date":"2013-08-06T00:05:12.349Z","type":"message"}
{"nick":"mikeal","message":"pip is like drug store makeup on a pig","date":"2013-08-06T00:05:26.478Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-08-06T00:05:30.811Z","type":"message"}
{"nick":"othiym23","message":"pip isn't even as nice as gem, and that's saying something","date":"2013-08-06T00:05:49.341Z","type":"message"}
{"nick":"brson","reason":"Ping timeout: 260 seconds","date":"2013-08-06T00:05:51.938Z","type":"quit"}
{"nick":"mikeal","message":"a *decent* installer (still pretty bad) for a poorly hosted ecosystem of packages on a TERRIBLE module system","date":"2013-08-06T00:05:58.804Z","type":"message"}
{"nick":"brson","date":"2013-08-06T00:06:14.163Z","type":"join"}
{"nick":"mikeal","message":"gem is a dream compared to Python's whole packaging/install stack","date":"2013-08-06T00:06:15.700Z","type":"message"}
{"nick":"mikeal","message":"Python is great at adopting things to standard lib at the exact time everyone realizes how terrible they are","date":"2013-08-06T00:06:51.028Z","type":"message"}
{"nick":"isaacs","message":"my problem with \"easy_install\" is that, in my experience, it's never easy, and never installs","date":"2013-08-06T00:08:00.595Z","type":"message"}
{"nick":"isaacs","message":"the name writes a check the program can't cash","date":"2013-08-06T00:08:16.057Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: have a perf improvement want to try, but want to know if you'd accept it. don't think it's quite as ridiculous as the thin buffers, but might be getting close :)","date":"2013-08-06T00:08:56.210Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: awesome, i'm intrigued.","date":"2013-08-06T00:09:12.598Z","type":"message"}
{"nick":"othiym23","message":"all I know about easy_install is that it makes eggs","date":"2013-08-06T00:11:22.312Z","type":"message"}
{"nick":"othiym23","message":"I like eggs","date":"2013-08-06T00:11:24.381Z","type":"message"}
{"nick":"tjfontaine","message":"from your head down to your legs?","date":"2013-08-06T00:12:09.442Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #373 \u00037UNSTABLE\u000f smartos-ia32 (2/619) smartos-x64 (8/619) http://jenkins.nodejs.org/job/nodejs-master/373/","date":"2013-08-06T00:13:03.889Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: setting external array data is 2-3x's faster than setting a js object property, and getting the data out is practically a noop.","date":"2013-08-06T00:14:15.199Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: so on a handle instance set enough memory to contain a void* and length to 0 to prevent accidental screw up, then just assign the c++ class instance memory location to that.","date":"2013-08-06T00:15:44.528Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: ","date":"2013-08-06T00:15:49.368Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: GetIndexedPropertiesExternalArrayData is practically a noop compared to getting a js property out","date":"2013-08-06T00:16:17.348Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: interesting.","date":"2013-08-06T00:16:24.348Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: so, the reference from the socket._handle JS object to the actual uv_handle thingie?","date":"2013-08-06T00:16:50.050Z","type":"message"}
{"nick":"tjfontaine","message":"well it's _handle._handle","date":"2013-08-06T00:17:02.785Z","type":"message"}
{"nick":"trevnorris","message":"isn't it _handle.__handle?","date":"2013-08-06T00:17:15.292Z","type":"message"}
{"nick":"trevnorris","message":":P","date":"2013-08-06T00:17:16.503Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: sounds interesting.","date":"2013-08-06T00:18:15.155Z","type":"message"}
{"nick":"trevnorris","message":"actually it'd point to the *Wrap class instance","date":"2013-08-06T00:18:15.939Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: ok","date":"2013-08-06T00:18:20.776Z","type":"message"}
{"nick":"trevnorris","message":"to get rid of all the Unwrap action","date":"2013-08-06T00:18:31.360Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: so we wouldn't have the Unwrap call?","date":"2013-08-06T00:18:33.795Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-08-06T00:18:35.045Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: just wondering if you'd consider it before I head off to create a patch. :)","date":"2013-08-06T00:18:56.019Z","type":"message"}
{"nick":"isaacs","message":"i'll consider it","date":"2013-08-06T00:19:01.334Z","type":"message"}
{"nick":"trevnorris","message":"whoot!","date":"2013-08-06T00:19:06.049Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine and bnoordhuis are the people to convince on this.","date":"2013-08-06T00:19:10.647Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: if it's faster, and doesn't break other stuff, i'm 100% in favor.","date":"2013-08-06T00:19:19.645Z","type":"message"}
{"nick":"tjfontaine","message":"like I said, I'd be interesting to see the numbers :)","date":"2013-08-06T00:19:24.159Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: add this to your list of, we do it in core but would never recommend to the user. :P","date":"2013-08-06T00:19:31.768Z","type":"message"}
{"nick":"tjfontaine","message":"*interested","date":"2013-08-06T00:19:32.082Z","type":"message"}
{"nick":"trevnorris","message":"coolio. this'll be fun","date":"2013-08-06T00:19:39.180Z","type":"message"}
{"nick":"trevnorris","message":"i'm most interested in crypto performance","date":"2013-08-06T00:19:50.001Z","type":"message"}
{"nick":"trevnorris","message":"it's done everywhere there.","date":"2013-08-06T00:19:57.330Z","type":"message"}
{"nick":"jmar777","date":"2013-08-06T00:21:05.316Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: re: buffer dispose. speaking w/ tjfontaine realized that it'll get a little complicated for stuff like fs.write(). since it's async threaded in the background the user could free the memory as it's being written to disk.","date":"2013-08-06T00:22:35.778Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: about 80% of the stuff you do shouldn't be done in user code, which is fine, because I don't think much of anybody who's not here in this channel right now (execpt piscisaureus and bnoordhuis) understand it","date":"2013-08-06T00:22:47.381Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: so i'd have to be careful to keep a slice of the data around until the operation is complete","date":"2013-08-06T00:22:58.106Z","type":"message"}
{"nick":"stagas_","date":"2013-08-06T00:23:01.126Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: just fyi. but the patch is just about stable enough for initial release. i'll have it wrapped up by the end of the week.","date":"2013-08-06T00:23:43.322Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: haha. i've been wondering what to cover at nodeconf.eu. maybe I should cram all that in :P","date":"2013-08-06T00:24:18.850Z","type":"message"}
{"nick":"stagas","reason":"Ping timeout: 268 seconds","date":"2013-08-06T00:24:25.153Z","type":"quit"}
{"nick":"stagas_","new_nick":"stagas","date":"2013-08-06T00:24:39.973Z","type":"nick"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #170 \u00037UNSTABLE\u000f windows-x64 (22/619) windows-ia32 (19/619) http://jenkins.nodejs.org/job/nodejs-master-windows/170/","date":"2013-08-06T00:25:52.195Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: \"All the things that we do in Node-Core that you should NEVER EVER DO\"","date":"2013-08-06T00:26:06.405Z","type":"message"}
{"nick":"othiym23","message":"*opens src/node.cc and lib/node.js* \"don't do any of this stuff, guys\" *walks off stage* ","date":"2013-08-06T00:27:55.168Z","type":"message"}
{"nick":"tjfontaine","message":"*drops mic*","date":"2013-08-06T00:28:07.827Z","type":"message"}
{"nick":"trevnorris","message":"haha","date":"2013-08-06T00:28:33.272Z","type":"message"}
{"nick":"trevnorris","message":"well, that'd give more time to bert and richard","date":"2013-08-06T00:28:48.103Z","type":"message"}
{"nick":"trevnorris","message":"but seriously, have no idea what to talk about. practically everything i've implemented i'd never recommend.","date":"2013-08-06T00:30:15.723Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-06T00:31:15.787Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-06T00:31:48.472Z","type":"join"}
{"nick":"othiym23","message":"BTW, if anyone really hates the name \"continuation-local storage\", feel free to bikeshed","date":"2013-08-06T00:33:44.657Z","type":"message"}
{"nick":"othiym23","message":"it's gotta say what it does and not instantly confuse everyone who hears it","date":"2013-08-06T00:34:05.291Z","type":"message"}
{"nick":"othiym23","action":"side-eyes domains","date":"2013-08-06T00:34:11.256Z","type":"action"}
{"nick":"tjfontaine","message":"I really hate it, but I'm struggling for a replacement","date":"2013-08-06T00:34:32.956Z","type":"message"}
{"nick":"tjfontaine","message":"but I haven't given up yet :P","date":"2013-08-06T00:34:38.955Z","type":"message"}
{"nick":"othiym23","message":"I do feel that \"continuation-local storage\" is better than \"local contexts\", which is what I had originally","date":"2013-08-06T00:35:37.135Z","type":"message"}
{"nick":"tjfontaine","message":"but I'm not really bothered by naming mismatch, as people often look for tcp and udp, only to find net and dgram","date":"2013-08-06T00:35:40.705Z","type":"message"}
{"nick":"tjfontaine","message":"ya, local contexts is a no-go","date":"2013-08-06T00:35:49.066Z","type":"message"}
{"nick":"c4milo","reason":"Ping timeout: 256 seconds","date":"2013-08-06T00:36:30.298Z","type":"quit"}
{"nick":"trevnorris","message":"all-the-contexts ?","date":"2013-08-06T00:36:48.731Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: yeah, tcp/udp are the correct names.  net/dgram are both stupid","date":"2013-08-06T00:37:02.592Z","type":"message"}
{"nick":"isaacs","message":"it's tcp in all the code","date":"2013-08-06T00:37:07.010Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-08-06T00:38:58.134Z","type":"quit"}
{"nick":"othiym23","message":"dgram made total sense to me from the beginning, which I guess is yet another way to tell that I am a. old b. a nerd c. an old nerd","date":"2013-08-06T00:39:32.393Z","type":"message"}
{"nick":"tjfontaine","message":"I have no problem understanding it, it's just not how we express it these days :)","date":"2013-08-06T00:41:05.034Z","type":"message"}
{"nick":"hz","reason":"Ping timeout: 248 seconds","date":"2013-08-06T00:41:09.789Z","type":"quit"}
{"nick":"othiym23","message":"I will say that it was weird that there was net but not tcp, dgram, and then no unix","date":"2013-08-06T00:43:13.950Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: fixed that for you: http://npm.im/tcp http://npm.im/udp","date":"2013-08-06T00:43:43.858Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs++","date":"2013-08-06T00:44:13.459Z","type":"message"}
{"nick":"isaacs","message":"https://github.com/isaacs/udp/blob/master/udp.js","date":"2013-08-06T00:44:18.415Z","type":"message"}
{"nick":"isaacs","message":"https://github.com/isaacs/tcp/blob/master/tcp.js","date":"2013-08-06T00:44:29.390Z","type":"message"}
{"nick":"tjfontaine","message":"ya I looked :)","date":"2013-08-06T00:44:33.925Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-06T00:50:09.327Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-06T00:52:47.334Z","type":"join"}
{"nick":"trevnorris","message":"haha, that was easy. already have most of it changed over and all tests passing.","date":"2013-08-06T00:53:49.798Z","type":"message"}
{"nick":"trevnorris","message":"almost time for the performance tuning \\m/(^o^)\\m/","date":"2013-08-06T00:55:28.600Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2013-08-06T01:02:05.118Z","type":"quit"}
{"nick":"abraxas","date":"2013-08-06T01:03:44.590Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-06T01:04:37.295Z","type":"quit"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-08-06T01:12:36.513Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-06T01:19:14.175Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: does it change how util.inspect() sees _handle?","date":"2013-08-06T01:26:46.578Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: doesn't look like it.","date":"2013-08-06T01:27:16.843Z","type":"message"}
{"nick":"tjfontaine","message":"mk","date":"2013-08-06T01:27:23.236Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: i'm out, see you in a few","date":"2013-08-06T01:27:44.115Z","type":"message"}
{"nick":"tjfontaine","message":"k","date":"2013-08-06T01:27:54.353Z","type":"message"}
{"nick":"sblom","reason":"Ping timeout: 248 seconds","date":"2013-08-06T01:37:41.999Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-06T01:41:23.428Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-06T01:43:14.055Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-08-06T01:45:05.007Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-06T01:46:26.958Z","type":"quit"}
{"nick":"mordy__","message":"what's the \"API-correct\" way to get the actual SOCKET/fd from a stream?","date":"2013-08-06T02:17:51.811Z","type":"message"}
{"nick":"mordy__","message":"or is that intentionally obscured","date":"2013-08-06T02:18:07.769Z","type":"message"}
{"nick":"trapito_","date":"2013-08-06T02:18:24.233Z","type":"join"}
{"nick":"trapito","reason":"Ping timeout: 240 seconds","date":"2013-08-06T02:20:24.006Z","type":"quit"}
{"nick":"brson","date":"2013-08-06T02:31:12.701Z","type":"join"}
{"nick":"bradleymeck","date":"2013-08-06T02:45:14.815Z","type":"join"}
{"nick":"kazupon","date":"2013-08-06T02:54:55.763Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-08-06T02:59:26.581Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-08-06T03:18:08.340Z","type":"join"}
{"nick":"st_luke","date":"2013-08-06T03:40:02.943Z","type":"join"}
{"nick":"dominictarr","date":"2013-08-06T03:49:45.148Z","type":"join"}
{"nick":"kazupon","date":"2013-08-06T03:57:03.287Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-06T04:07:23.272Z","type":"quit"}
{"nick":"bradleymeck_","date":"2013-08-06T04:16:51.159Z","type":"join"}
{"nick":"bradleymeck_","reason":"Client Quit","date":"2013-08-06T04:17:04.360Z","type":"quit"}
{"nick":"julianduque","reason":"Quit: leaving","date":"2013-08-06T04:17:08.098Z","type":"quit"}
{"nick":"bradleymeck","reason":"Ping timeout: 268 seconds","date":"2013-08-06T04:17:31.075Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-08-06T04:26:57.661Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-06T04:33:42.659Z","type":"quit"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-08-06T05:02:34.067Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-06T05:02:46.153Z","type":"join"}
{"nick":"othiym23","message":"trevnorris: I rewrote the CLS docs, they should make more sense now: https://github.com/othiym23/node/blob/a17fea125c0672ae53eb0b3fb6f15adc59d4b184/doc/api/continuation_local_storage.md","date":"2013-08-06T05:14:31.121Z","type":"message"}
{"nick":"othiym23","message":"er fixed a few typos, so use: https://github.com/othiym23/node/blob/7840d52ae91242c7c10f304e3658b5221f07f7b0/doc/api/continuation_local_storage.md","date":"2013-08-06T05:21:58.950Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-06T05:36:17.034Z","type":"quit"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-08-06T05:42:55.807Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-06T05:45:27.748Z","type":"join"}
{"nick":"mikeal","date":"2013-08-06T05:58:59.973Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-08-06T05:59:18.827Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-06T06:02:51.049Z","type":"nick"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-06T06:07:01.538Z","type":"quit"}
{"nick":"trapito","date":"2013-08-06T06:19:13.951Z","type":"join"}
{"nick":"trapito_","reason":"Ping timeout: 256 seconds","date":"2013-08-06T06:20:19.536Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-06T06:22:01.145Z","type":"nick"}
{"nick":"bajtos","date":"2013-08-06T06:23:29.362Z","type":"join"}
{"nick":"felixge","date":"2013-08-06T06:25:40.104Z","type":"join"}
{"nick":"mikeal","date":"2013-08-06T06:28:00.113Z","type":"join"}
{"nick":"groundwater","date":"2013-08-06T06:28:08.543Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-08-06T06:49:36.189Z","type":"quit"}
{"nick":"rendar","date":"2013-08-06T06:53:19.174Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-08-06T07:09:03.740Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-06T07:19:52.848Z","type":"quit"}
{"nick":"hueniverse","date":"2013-08-06T07:19:56.923Z","type":"join"}
{"nick":"hz","date":"2013-08-06T07:20:23.164Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-06T07:22:56.737Z","type":"nick"}
{"nick":"csaoh","date":"2013-08-06T07:29:41.449Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-06T07:32:25.147Z","type":"nick"}
{"nick":"`3E|Zzz","new_nick":"`3E","date":"2013-08-06T07:32:59.545Z","type":"nick"}
{"nick":"bnoordhuis","date":"2013-08-06T07:40:20.164Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-08-06T07:47:38.164Z","type":"quit"}
{"nick":"leonvv","date":"2013-08-06T07:51:48.493Z","type":"join"}
{"nick":"Dasmyller","date":"2013-08-06T07:52:33.526Z","type":"join"}
{"nick":"dsantiago","reason":"Ping timeout: 276 seconds","date":"2013-08-06T07:53:27.884Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-06T07:59:05.826Z","type":"join"}
{"nick":"wolfeidau","date":"2013-08-06T08:03:05.370Z","type":"join"}
{"nick":"dsantiag_","date":"2013-08-06T08:26:24.044Z","type":"join"}
{"nick":"dsantiag_","new_nick":"dsantiago","date":"2013-08-06T08:29:02.773Z","type":"nick"}
{"nick":"trapito","reason":"Read error: Connection reset by peer","date":"2013-08-06T08:39:23.441Z","type":"quit"}
{"nick":"trapito","date":"2013-08-06T08:40:47.571Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-06T08:43:03.918Z","type":"join"}
{"nick":"dominictarr","date":"2013-08-06T08:51:32.186Z","type":"join"}
{"nick":"tellnes","date":"2013-08-06T08:51:56.721Z","type":"join"}
{"nick":"dominictarr","reason":"Client Quit","date":"2013-08-06T08:52:57.234Z","type":"quit"}
{"nick":"leonvv","reason":"Remote host closed the connection","date":"2013-08-06T08:56:53.072Z","type":"quit"}
{"nick":"dominictarr","date":"2013-08-06T09:14:22.981Z","type":"join"}
{"nick":"dsantiago","reason":"Ping timeout: 256 seconds","date":"2013-08-06T09:23:21.701Z","type":"quit"}
{"nick":"trapito","reason":"Read error: Connection reset by peer","date":"2013-08-06T09:23:49.969Z","type":"quit"}
{"nick":"trapito","date":"2013-08-06T09:26:30.962Z","type":"join"}
{"nick":"dsantiago","date":"2013-08-06T09:40:09.747Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-06T09:52:38.720Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-06T09:58:07.144Z","type":"quit"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-08-06T10:12:05.550Z","type":"quit"}
{"nick":"indutny","message":"hoya","date":"2013-08-06T10:13:54.644Z","type":"message"}
{"nick":"bnoordhuis","message":"sup fedor?","date":"2013-08-06T10:16:01.435Z","type":"message"}
{"nick":"csaoh","date":"2013-08-06T10:17:25.164Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-08-06T10:18:26.324Z","type":"quit"}
{"nick":"twilightfeel","date":"2013-08-06T10:20:12.333Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: good","date":"2013-08-06T10:22:43.858Z","type":"message"}
{"nick":"indutny","message":"how are you?","date":"2013-08-06T10:22:45.618Z","type":"message"}
{"nick":"twilightfeel","message":"indutny: hi :)","date":"2013-08-06T10:23:46.804Z","type":"message"}
{"nick":"indutny","message":"hi","date":"2013-08-06T10:23:50.324Z","type":"message"}
{"nick":"twilightfeel","message":"have you a bit of time todiscuss about custom connection handle? :)","date":"2013-08-06T10:24:24.380Z","type":"message"}
{"nick":"twilightfeel","message":"https://github.com/joyent/node/issues/4435#issuecomment-22016362","date":"2013-08-06T10:24:33.362Z","type":"message"}
{"nick":"twilightfeel","message":"i still need some solution, except «fork all the cluster and do what i want» :)","date":"2013-08-06T10:25:43.138Z","type":"message"}
{"nick":"wolfeidau","date":"2013-08-06T10:26:03.258Z","type":"join"}
{"nick":"bajtos","date":"2013-08-06T10:29:47.967Z","type":"join"}
{"nick":"bajtos","reason":"Client Quit","date":"2013-08-06T10:29:52.986Z","type":"quit"}
{"nick":"indutny","message":"oh, sorry :)","date":"2013-08-06T10:33:31.022Z","type":"message"}
{"nick":"indutny","message":"missed the message","date":"2013-08-06T10:33:34.658Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: have a minute?","date":"2013-08-06T10:33:57.816Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: about twilightfeel's thing - I think, the only solution to this would be refactoring cluster module a bit","date":"2013-08-06T10:35:05.984Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: rewriting a RoundRobinHandle as a callback function instead","date":"2013-08-06T10:35:25.295Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: though, it might require some exploration before heavily insisting on it","date":"2013-08-06T10:35:38.996Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: do you have any thoughts regarding it?","date":"2013-08-06T10:35:47.996Z","type":"message"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-08-06T10:37:30.683Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: just saw the github notification","date":"2013-08-06T10:37:44.467Z","type":"message"}
{"nick":"bnoordhuis","message":"so, it's nice that you can provide a custom constructor","date":"2013-08-06T10:38:07.827Z","type":"message"}
{"nick":"bnoordhuis","message":"but how is it going to tie in with the rest of node?","date":"2013-08-06T10:38:16.785Z","type":"message"}
{"nick":"bnoordhuis","message":"the RoundRobinHandle and SharedHandle classes don't operate in a vacuum","date":"2013-08-06T10:38:36.684Z","type":"message"}
{"nick":"bnoordhuis","message":"twilightfeel: ^","date":"2013-08-06T10:38:44.587Z","type":"message"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-08-06T10:39:03.805Z","type":"quit"}
{"nick":"indutny","message":"bnoordhuis: hm… may be inheritance?","date":"2013-08-06T10:39:33.632Z","type":"message"}
{"nick":"indutny","message":"I'm still quite unfamiliar with that new cluster code that you wrote","date":"2013-08-06T10:39:46.328Z","type":"message"}
{"nick":"twilightfeel","message":"yes, i know, as i wrote in the issue comment, i think supporting these changes for custom handle, if you really needs it, is not so costly as support of the full cluster fork","date":"2013-08-06T10:40:41.486Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: what i mean is that there's a lot of under-the-hood action between the cluster, net and dgram modules","date":"2013-08-06T10:41:11.785Z","type":"message"}
{"nick":"bnoordhuis","message":"the child_process module too, to a lesser extent","date":"2013-08-06T10:41:18.645Z","type":"message"}
{"nick":"twilightfeel","message":"current handle interface looks simple (for me)","date":"2013-08-06T10:41:21.825Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: what about custom `.distribute` method?","date":"2013-08-06T10:41:52.284Z","type":"message"}
{"nick":"indutny","message":"or, at least, customizable callback here","date":"2013-08-06T10:42:05.763Z","type":"message"}
{"nick":"indutny","message":"basically, all that user might need - is a way to choose right worker","date":"2013-08-06T10:42:22.931Z","type":"message"}
{"nick":"indutny","message":"and that's what `.distribute` is basically doing","date":"2013-08-06T10:42:29.996Z","type":"message"}
{"nick":"bnoordhuis","message":"well, maybe","date":"2013-08-06T10:43:00.894Z","type":"message"}
{"nick":"bnoordhuis","message":"another issue is that we'd have to effectively freeze the internal cluster api","date":"2013-08-06T10:43:13.581Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm not ready to do that yet. maybe never","date":"2013-08-06T10:43:29.295Z","type":"message"}
{"nick":"indutny","message":"hehe","date":"2013-08-06T10:43:56.962Z","type":"message"}
{"nick":"indutny","message":"well, its just a callback to select worker","date":"2013-08-06T10:44:09.079Z","type":"message"}
{"nick":"indutny","message":"it has nothing to do with freezing internal api","date":"2013-08-06T10:44:19.231Z","type":"message"}
{"nick":"bnoordhuis","message":"does too","date":"2013-08-06T10:44:39.486Z","type":"message"}
{"nick":"bnoordhuis","message":"that constructor is invoked with certain arguments","date":"2013-08-06T10:44:48.083Z","type":"message"}
{"nick":"indutny","message":"well, you probably got me wrong","date":"2013-08-06T10:44:56.855Z","type":"message"}
{"nick":"indutny","message":"its not about inheritance from RoundRobinHandle","date":"2013-08-06T10:45:07.226Z","type":"message"}
{"nick":"indutny","message":"its about new option passed to it","date":"2013-08-06T10:45:17.004Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, i got that","date":"2013-08-06T10:45:25.070Z","type":"message"}
{"nick":"indutny","message":"or, better to cluster itself","date":"2013-08-06T10:45:33.823Z","type":"message"}
{"nick":"bnoordhuis","message":"your distribute() function needs context though","date":"2013-08-06T10:45:34.369Z","type":"message"}
{"nick":"indutny","message":"its an async callback","date":"2013-08-06T10:45:50.900Z","type":"message"}
{"nick":"bnoordhuis","message":"that's the address/port/type/fd data that gets passed to the constructor now","date":"2013-08-06T10:45:58.817Z","type":"message"}
{"nick":"indutny","message":"and context might be set to `server` object","date":"2013-08-06T10:45:59.762Z","type":"message"}
{"nick":"indutny","message":"hm..","date":"2013-08-06T10:46:01.311Z","type":"message"}
{"nick":"indutny","message":"or to `null`","date":"2013-08-06T10:46:03.045Z","type":"message"}
{"nick":"indutny","message":"i.e. global","date":"2013-08-06T10:46:08.539Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, so","date":"2013-08-06T10:46:22.666Z","type":"message"}
{"nick":"indutny","message":"well, I don't want users to rewrite this function from scratch","date":"2013-08-06T10:46:27.501Z","type":"message"}
{"nick":"bnoordhuis","message":"if you pass that kind of information to user functions","date":"2013-08-06T10:46:32.906Z","type":"message"}
{"nick":"bnoordhuis","message":"it effectively becomes public api","date":"2013-08-06T10:46:39.247Z","type":"message"}
{"nick":"indutny","message":"having an optional callback that might be invoked from it works for me too","date":"2013-08-06T10:46:39.712Z","type":"message"}
{"nick":"indutny","message":"well, we're talking about adding new API feature anyway :)","date":"2013-08-06T10:47:01.009Z","type":"message"}
{"nick":"twilightfeel","message":")","date":"2013-08-06T10:47:13.457Z","type":"message"}
{"nick":"indutny","message":"cluster.setupMaster({ distribute: function(workers) { return ~~(Math.random() * workers.length) } })","date":"2013-08-06T10:47:33.569Z","type":"message"}
{"nick":"indutny","message":";)","date":"2013-08-06T10:47:35.674Z","type":"message"}
{"nick":"indutny","message":"where workers are basically result of `cluster.fork()`","date":"2013-08-06T10:47:47.497Z","type":"message"}
{"nick":"indutny","message":"and all other info user should obtain via messaging","date":"2013-08-06T10:48:05.443Z","type":"message"}
{"nick":"indutny","message":"oh, small correction","date":"2013-08-06T10:48:21.870Z","type":"message"}
{"nick":"indutny","message":"that `distribute` function should be async","date":"2013-08-06T10:48:30.032Z","type":"message"}
{"nick":"bnoordhuis","message":"that doesn't work or is pointless with shared handles","date":"2013-08-06T10:48:42.101Z","type":"message"}
{"nick":"bnoordhuis","message":"there's nothing to distribute because the server handle - and hence the client handle - is already in the worker","date":"2013-08-06T10:49:01.574Z","type":"message"}
{"nick":"indutny","message":"huh","date":"2013-08-06T10:49:45.934Z","type":"message"}
{"nick":"indutny","message":"I believe we're talking just about distributing incoming connections","date":"2013-08-06T10:50:05.553Z","type":"message"}
{"nick":"indutny","message":"not shared handles","date":"2013-08-06T10:50:08.535Z","type":"message"}
{"nick":"twilightfeel","message":"yes","date":"2013-08-06T10:50:13.422Z","type":"message"}
{"nick":"bnoordhuis","message":"oh","date":"2013-08-06T10:50:30.125Z","type":"message"}
{"nick":"bnoordhuis","message":"then there's no need to pass in a custom constructor","date":"2013-08-06T10:50:40.168Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess that's what threw me off","date":"2013-08-06T10:50:50.304Z","type":"message"}
{"nick":"bnoordhuis","message":"if we're only talking about master-distributed handles, then yes, a custom .distribute() function could work","date":"2013-08-06T10:51:23.407Z","type":"message"}
{"nick":"indutny","message":"yikes! :)","date":"2013-08-06T10:51:33.034Z","type":"message"}
{"nick":"indutny","message":"I convinced ben","date":"2013-08-06T10:51:36.955Z","type":"message"}
{"nick":"indutny","message":"hehe","date":"2013-08-06T10:51:45.230Z","type":"message"}
{"nick":"bnoordhuis","message":"well, only partially","date":"2013-08-06T10:51:50.266Z","type":"message"}
{"nick":"indutny","message":"ok ok","date":"2013-08-06T10:51:55.721Z","type":"message"}
{"nick":"bnoordhuis","message":"there's still the issue of how to deal with workers coming offline or going away","date":"2013-08-06T10:52:02.696Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess the user should take care of that himself","date":"2013-08-06T10:52:17.962Z","type":"message"}
{"nick":"indutny","message":"well...","date":"2013-08-06T10:52:18.543Z","type":"message"}
{"nick":"indutny","message":"if you want user to care of it himself","date":"2013-08-06T10:52:33.567Z","type":"message"}
{"nick":"twilightfeel","message":"bnoordhuis: yes, i think so","date":"2013-08-06T10:52:38.767Z","type":"message"}
{"nick":"indutny","message":"custom distribute function should not receive workers list","date":"2013-08-06T10:52:44.741Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-08-06T10:53:11.019Z","type":"message"}
{"nick":"indutny","message":"well","date":"2013-08-06T10:53:11.907Z","type":"message"}
{"nick":"indutny","message":"it might just invoke callback with worker object","date":"2013-08-06T10:53:20.406Z","type":"message"}
{"nick":"indutny","message":"and it'll be passed to .handoff","date":"2013-08-06T10:53:24.385Z","type":"message"}
{"nick":"indutny","message":"ok, that sounds reasonably to me","date":"2013-08-06T10:53:33.580Z","type":"message"}
{"nick":"bnoordhuis","message":"did i just type 'coming offline'. s/offline/online/","date":"2013-08-06T10:53:34.793Z","type":"message"}
{"nick":"indutny","message":"it doesn't matter that much :)","date":"2013-08-06T10:53:49.887Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2013-08-06T10:53:53.175Z","type":"message"}
{"nick":"indutny","message":"I think I see your point","date":"2013-08-06T10:53:56.769Z","type":"message"}
{"nick":"indutny","message":"worker might be not ready to receive the handle?","date":"2013-08-06T10:54:40.734Z","type":"message"}
{"nick":"indutny","message":"is it even possible?","date":"2013-08-06T10:54:43.933Z","type":"message"}
{"nick":"indutny","message":"but whatever it is, users can handle it","date":"2013-08-06T10:54:56.618Z","type":"message"}
{"nick":"bnoordhuis","message":"well, i hope so","date":"2013-08-06T10:55:26.181Z","type":"message"}
{"nick":"bnoordhuis","message":"but yes, the worker might not be ready","date":"2013-08-06T10:55:35.559Z","type":"message"}
{"nick":"bnoordhuis","message":"it happens when shutting down a worker","date":"2013-08-06T10:55:42.155Z","type":"message"}
{"nick":"bnoordhuis","message":"because conn.close() is effectively synchronous","date":"2013-08-06T10:56:05.643Z","type":"message"}
{"nick":"bnoordhuis","message":"there's a comment about it somewhere in cluster.js that explains it","date":"2013-08-06T10:56:32.918Z","type":"message"}
{"nick":"bnoordhuis","message":"there are other edge cases too","date":"2013-08-06T10:56:47.011Z","type":"message"}
{"nick":"bnoordhuis","message":"let it be said that if (and that's a big if) we're adding a distribute api, i will not be the one writing the docs for it","date":"2013-08-06T10:57:42.440Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, i'm off to lunch :) biab","date":"2013-08-06T10:58:37.537Z","type":"message"}
{"nick":"twilightfeel","message":"bnoordhuis: thanks for discussion! :)","date":"2013-08-06T10:59:06.990Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2013-08-06T11:03:52.075Z","type":"quit"}
{"nick":"indutny","message":":)","date":"2013-08-06T11:05:49.355Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2013-08-06T11:05:50.438Z","type":"message"}
{"nick":"bajtos","date":"2013-08-06T11:09:55.940Z","type":"join"}
{"nick":"kazupon","date":"2013-08-06T11:13:08.051Z","type":"join"}
{"nick":"paddybyers","date":"2013-08-06T11:57:53.946Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Fedor Indutny\u000f \u00037master\u000f * \u0002048e0e7\u0002 : tls: asynchronous SNICallback (+1 more commits) - http://git.io/w0O_3A","date":"2013-08-06T12:13:17.444Z","type":"message"}
{"nick":"indutny","message":"yaY!","date":"2013-08-06T12:13:25.179Z","type":"message"}
{"nick":"pachet","date":"2013-08-06T12:23:57.061Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-06T12:29:42.952Z","type":"quit"}
{"nick":"abraxas","date":"2013-08-06T12:37:47.457Z","type":"join"}
{"nick":"saghul","reason":"Ping timeout: 245 seconds","date":"2013-08-06T12:37:55.188Z","type":"quit"}
{"nick":"abraxas","reason":"Read error: Operation timed out","date":"2013-08-06T12:41:26.393Z","type":"quit"}
{"nick":"saghul","date":"2013-08-06T12:41:35.545Z","type":"join"}
{"nick":"rje","reason":"Ping timeout: 264 seconds","date":"2013-08-06T12:47:02.813Z","type":"quit"}
{"nick":"paddybyers","reason":"Ping timeout: 246 seconds","date":"2013-08-06T12:47:26.059Z","type":"quit"}
{"nick":"rje","date":"2013-08-06T12:48:38.255Z","type":"join"}
{"nick":"kazupon","date":"2013-08-06T12:53:01.164Z","type":"join"}
{"nick":"twilightfeel","reason":"Quit: twilightfeel","date":"2013-08-06T12:55:19.755Z","type":"quit"}
{"nick":"saghul","reason":"Ping timeout: 240 seconds","date":"2013-08-06T12:55:26.545Z","type":"quit"}
{"nick":"paddybyers","date":"2013-08-06T12:56:01.073Z","type":"join"}
{"nick":"saghul","date":"2013-08-06T12:58:32.541Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-06T13:06:10.822Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-06T13:08:36.390Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-06T13:11:27.116Z","type":"join"}
{"nick":"kazupon","date":"2013-08-06T13:12:25.965Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 268 seconds","date":"2013-08-06T13:22:02.076Z","type":"quit"}
{"nick":"bnoordhuis","message":"../../src/node_crypto_clienthello.cc:144: warning: comparison between signed and unsigned integer expressions","date":"2013-08-06T13:22:41.403Z","type":"message"}
{"nick":"bnoordhuis","message":"../../src/node_crypto_clienthello.cc:146: warning: comparison between signed and unsigned integer expressions","date":"2013-08-06T13:22:44.471Z","type":"message"}
{"nick":"bnoordhuis","message":"^ indutny","date":"2013-08-06T13:22:47.383Z","type":"message"}
{"nick":"bnoordhuis","message":"ah... i think it's because (server_names_len + 2) gets widened to int","date":"2013-08-06T13:25:28.119Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-06T13:26:52.290Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-08-06T13:29:30.800Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 240 seconds","date":"2013-08-06T13:37:26.542Z","type":"quit"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-08-06T13:38:07.228Z","type":"quit"}
{"nick":"hz","date":"2013-08-06T13:38:11.122Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00025764966\u0002 : crypto: fix signed/unsigned comparison warning - http://git.io/Sv2trg","date":"2013-08-06T13:40:38.889Z","type":"message"}
{"nick":"c4milo","date":"2013-08-06T13:45:47.303Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u000245d056e\u0002 : src: fix WITH_GENERIC_STREAM() type check bug - http://git.io/mOHYjw","date":"2013-08-06T13:50:39.011Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: ^","date":"2013-08-06T13:50:41.800Z","type":"message"}
{"nick":"twilightfeel","date":"2013-08-06T13:55:30.340Z","type":"join"}
{"nick":"kazupon","date":"2013-08-06T14:14:21.141Z","type":"join"}
{"nick":"twilightfeel","reason":"Quit: twilightfeel","date":"2013-08-06T14:24:20.464Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-06T14:27:16.477Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-06T14:29:20.940Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-08-06T14:34:23.624Z","type":"join"}
{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2013-08-06T14:46:17.012Z","type":"quit"}
{"nick":"isaacs","message":"anyone wanna review some http stuff? https://github.com/joyent/node/pulls/isaacs","date":"2013-08-06T14:58:33.063Z","type":"message"}
{"nick":"indexzero","date":"2013-08-06T15:03:55.463Z","type":"join"}
{"nick":"bradleymeck","date":"2013-08-06T15:07:07.212Z","type":"join"}
{"nick":"roxlu","message":"hey guys!","date":"2013-08-06T15:10:43.514Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: before the v0.11 release, we'll have to merge in v0.10.latest","date":"2013-08-06T15:16:59.664Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: i'm landing that streams fix from hueniverse in v0.10. it's a good bugfix.","date":"2013-08-06T15:17:23.236Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: also, newer npm","date":"2013-08-06T15:17:29.237Z","type":"message"}
{"nick":"austo","date":"2013-08-06T15:18:02.950Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Eran Hammer\u000f \u00037v0.10\u000f * \u000223d92ec\u0002 : stream: Fix double pipe error emit - http://git.io/2aGOQQ","date":"2013-08-06T15:18:12.641Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 264 seconds","date":"2013-08-06T15:22:40.413Z","type":"quit"}
{"nick":"roxlu","message":"some of my fellow coders are starting to use libuv too and more are getting these windows errors that happen when you include uv.h after winows.h has been included (or I think that's the reason for these errors).  ","date":"2013-08-06T15:25:16.828Z","type":"message"}
{"nick":"roxlu","message":"But I'm wondering why uv.h doesn't work then? (or give compiler errors)","date":"2013-08-06T15:25:39.701Z","type":"message"}
{"nick":"kazupon","date":"2013-08-06T15:26:52.035Z","type":"join"}
{"nick":"mikeal","date":"2013-08-06T15:27:13.755Z","type":"join"}
{"nick":"bnoordhuis","message":"roxlu: it's because uv.h polyfills a lot of stuff","date":"2013-08-06T15:30:05.370Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: thanks","date":"2013-08-06T15:30:59.852Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: the WITH_GENERIC_STREAM bug? it was pretty harmless in practice","date":"2013-08-06T15:31:23.112Z","type":"message"}
{"nick":"indutny","message":"both","date":"2013-08-06T15:31:30.419Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-08-06T15:31:31.883Z","type":"message"}
{"nick":"bnoordhuis","message":"ah okay :)","date":"2013-08-06T15:31:35.303Z","type":"message"}
{"nick":"indutny","message":"crypto unsigned/signed","date":"2013-08-06T15:31:36.762Z","type":"message"}
{"nick":"indutny","message":"and define","date":"2013-08-06T15:31:38.715Z","type":"message"}
{"nick":"roxlu","message":"bnoordhuis: polyfills? ","date":"2013-08-06T15:31:41.857Z","type":"message"}
{"nick":"roxlu","action":"googling","date":"2013-08-06T15:31:43.513Z","type":"action"}
{"nick":"indutny","message":"bnoordhuis: oh its pretty awful bug :)","date":"2013-08-06T15:31:55.650Z","type":"message"}
{"nick":"indutny","message":"a lot of copy paste happened there","date":"2013-08-06T15:32:02.203Z","type":"message"}
{"nick":"bnoordhuis","message":"roxlu: it sniffs the environment to see what will and won't work","date":"2013-08-06T15:32:09.678Z","type":"message"}
{"nick":"roxlu","message":"probably not this he: http://www.tooled-up.com/Artwork/ProdZoom/PLCQDP330GS.jpg  :)","date":"2013-08-06T15:32:46.850Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-06T15:32:49.672Z","type":"quit"}
{"nick":"bnoordhuis","message":"roxlu: WIN32_LEAN_AND_MEAN being defined/undefined when windows.h is included probably also plays a part","date":"2013-08-06T15:33:12.103Z","type":"message"}
{"nick":"bnoordhuis","message":"and no, not that kind of polyfill :)","date":"2013-08-06T15:33:30.536Z","type":"message"}
{"nick":"roxlu","message":"yeah I'm adding that one indeed","date":"2013-08-06T15:33:30.753Z","type":"message"}
{"nick":"roxlu","message":"haha","date":"2013-08-06T15:33:34.058Z","type":"message"}
{"nick":"roxlu","message":"a friend who started using libuv (and me too btw) get these uv.h related errors ","date":"2013-08-06T15:34:21.524Z","type":"message"}
{"nick":"roxlu","message":"but not all the time, but their are always kinda tricky to solve","date":"2013-08-06T15:34:37.244Z","type":"message"}
{"nick":"roxlu","message":"From what I undestood, can I fix it by including uv.h before any winodws.h right?","date":"2013-08-06T15:35:09.007Z","type":"message"}
{"nick":"bnoordhuis","message":"roxlu: yes, that should do it","date":"2013-08-06T15:36:29.483Z","type":"message"}
{"nick":"roxlu","message":"wouldn't it be possible to make changes in uv.h to fix this? or is this just not going to work because of windows.h ","date":"2013-08-06T15:37:25.136Z","type":"message"}
{"nick":"roxlu","message":"I'm asking because this would make uv.h even nicer :) ","date":"2013-08-06T15:37:46.701Z","type":"message"}
{"nick":"bnoordhuis","message":"hm, i don't know. piscisaureus is the one to ask","date":"2013-08-06T15:38:33.776Z","type":"message"}
{"nick":"roxlu","message":"okido","date":"2013-08-06T15:38:53.400Z","type":"message"}
{"nick":"bnoordhuis","message":"from process_wrap.cc: obj->Get(Number::New(static_cast<double>(i))) -- really?","date":"2013-08-06T15:40:31.528Z","type":"message"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-08-06T15:47:37.547Z","type":"quit"}
{"nick":"indutny","message":"call in 10 minutes?","date":"2013-08-06T15:50:21.386Z","type":"message"}
{"nick":"indutny","message":"isaacs: bnoordhuis: ^","date":"2013-08-06T15:50:27.768Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: ^","date":"2013-08-06T15:50:30.002Z","type":"message"}
{"nick":"indutny","message":"trevnorris: ^","date":"2013-08-06T15:50:38.757Z","type":"message"}
{"nick":"hueniverse","reason":"Quit: Leaving.","date":"2013-08-06T15:50:43.822Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002b8a7eed\u0002 : process_wrap: omit superfluous Number creation - http://git.io/DP3F7Q","date":"2013-08-06T15:52:26.391Z","type":"message"}
{"nick":"austo","message":"bnoordhuis: I know this is a pretty general question, but is there anything specific I should be looking for when my uv_tcp_t seems to stop listening after a uv_write? (IOW after a broadcast to a bunch of clients)?","date":"2013-08-06T15:52:31.149Z","type":"message"}
{"nick":"bnoordhuis","message":"austo: are you calling uv_write() on a tcp handle that's listening? or am i misunderstanding you?","date":"2013-08-06T15:53:04.402Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: i have another call in a few","date":"2013-08-06T15:53:39.239Z","type":"message"}
{"nick":"indutny","message":"so… no call today?","date":"2013-08-06T15:53:49.531Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-08-06T15:53:59.586Z","type":"join"}
{"nick":"tjfontaine","message":"indutny: there should be a call today, afaik","date":"2013-08-06T15:54:33.185Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-06T15:55:37.923Z","type":"quit"}
{"nick":"austo","message":"bnoordhuis: no, that's what's happening","date":"2013-08-06T15:55:45.969Z","type":"message"}
{"nick":"mcavage","date":"2013-08-06T15:57:06.335Z","type":"join"}
{"nick":"sblom","date":"2013-08-06T15:58:25.446Z","type":"join"}
{"nick":"trevnorris","message":"morning","date":"2013-08-06T15:59:03.201Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-08-06T15:59:39.995Z","type":"quit"}
{"nick":"isaacs","message":"good morning","date":"2013-08-06T16:00:15.106Z","type":"message"}
{"nick":"isaacs","message":"call today yes, please","date":"2013-08-06T16:00:18.931Z","type":"message"}
{"nick":"isaacs","message":"opening up now","date":"2013-08-06T16:00:21.953Z","type":"message"}
{"nick":"tjfontaine","action":"goes to meeting room","date":"2013-08-06T16:00:39.619Z","type":"action"}
{"nick":"isaacs","message":"https://plus.google.com/hangouts/_/5b6b53fce8c09512b15a7e7d5c2fbb51d9557288","date":"2013-08-06T16:00:47.464Z","type":"message"}
{"nick":"austo","message":"bnoordhuis: inside a uv_after_work_cb I iterate through a list of clients and call uv_write on their uv_write_t handles. The message gets delivered but the server seems to stop listening after that.","date":"2013-08-06T16:01:09.778Z","type":"message"}
{"nick":"brson","date":"2013-08-06T16:01:13.961Z","type":"join"}
{"nick":"isaacs","message":"bnoordhuis: you and bert should trade meetings","date":"2013-08-06T16:02:44.988Z","type":"message"}
{"nick":"bnoordhuis","message":"austo: right, okay. the short answer is: don't do that :)","date":"2013-08-06T16:02:45.570Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: yeah, maybe i'll join the status call. i pretty much know what's going to be discussed at the strongloop call","date":"2013-08-06T16:03:16.148Z","type":"message"}
{"nick":"austo","message":"bnoordhuis: okay, cool... any suggestions on where to find the long answer?","date":"2013-08-06T16:11:33.434Z","type":"message"}
{"nick":"mikeal","date":"2013-08-06T16:12:57.169Z","type":"join"}
{"nick":"paulfryzel","date":"2013-08-06T16:21:49.077Z","type":"join"}
{"nick":"AvianFlu","date":"2013-08-06T16:24:01.566Z","type":"join"}
{"nick":"hz","reason":"Remote host closed the connection","date":"2013-08-06T16:24:26.206Z","type":"quit"}
{"nick":"mraleph1","date":"2013-08-06T16:24:26.986Z","type":"join"}
{"nick":"dap","date":"2013-08-06T16:24:48.236Z","type":"join"}
{"nick":"mraleph","reason":"Read error: Connection reset by peer","date":"2013-08-06T16:24:51.494Z","type":"quit"}
{"nick":"bnoordhuis","message":"austo: sorry, in a call. biab","date":"2013-08-06T16:25:14.063Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #176 \u00037UNSTABLE\u000f windows-ia32 (18/619) windows-x64 (19/619) http://jenkins.nodejs.org/job/nodejs-master-windows/176/","date":"2013-08-06T16:30:47.084Z","type":"message"}
{"nick":"austo","message":"bnoordhuis: no problem... I'm doing a little digging anyway","date":"2013-08-06T16:31:22.810Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: hoya","date":"2013-08-06T16:32:59.139Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: https://github.com/joyent/node/pull/6002","date":"2013-08-06T16:33:00.424Z","type":"message"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-08-06T16:34:11.982Z","type":"quit"}
{"nick":"hz","date":"2013-08-06T16:38:32.752Z","type":"join"}
{"nick":"bradleymeck","reason":"Remote host closed the connection","date":"2013-08-06T16:41:47.683Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-08-06T16:42:13.779Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-06T16:47:06.152Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: nice work on the multi context support. so is it mostly working?","date":"2013-08-06T16:52:13.658Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-06T16:52:16.399Z","type":"quit"}
{"nick":"bnoordhuis","message":"trevnorris: well, mostly working... let's say it's not completely broken right now","date":"2013-08-06T16:52:37.838Z","type":"message"}
{"nick":"trevnorris","message":"heh, ok","date":"2013-08-06T16:52:52.803Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-06T16:53:06.834Z","type":"quit"}
{"nick":"bnoordhuis","message":"there's still more work that needs to be done, like adding the ability to start several scripts from the command line","date":"2013-08-06T16:53:07.578Z","type":"message"}
{"nick":"trevnorris","message":"ooh, cool.","date":"2013-08-06T16:53:15.535Z","type":"message"}
{"nick":"bnoordhuis","message":"that's not a hard requirement btw, just a nice-to-have","date":"2013-08-06T16:53:16.213Z","type":"message"}
{"nick":"bnoordhuis","message":"but i might as well get it in now, right?","date":"2013-08-06T16:53:26.103Z","type":"message"}
{"nick":"trevnorris","message":"sure why not","date":"2013-08-06T16:53:33.715Z","type":"message"}
{"nick":"bnoordhuis","message":"on that subject, ContextData* context_data or Environment* env? :)","date":"2013-08-06T16:53:56.202Z","type":"message"}
{"nick":"trevnorris","message":"think it's worth benchmarking right now, or more changes coming that'll change those?","date":"2013-08-06T16:54:05.752Z","type":"message"}
{"nick":"bnoordhuis","message":"i've been using context_data so far but it's kind of unwieldy to type","date":"2013-08-06T16:54:15.137Z","type":"message"}
{"nick":"bnoordhuis","message":"don't benchmark it just yet, it's not at that stage yet","date":"2013-08-06T16:54:35.631Z","type":"message"}
{"nick":"trevnorris","message":"coolio, and Environment* env is more friendly to the fingers for sure","date":"2013-08-06T16:54:52.372Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, i think so too. i'll probably change it to that","date":"2013-08-06T16:55:08.817Z","type":"message"}
{"nick":"tjfontaine","message":"contextdata is perhaps too easy to conflate with v8::Context","date":"2013-08-06T16:55:23.679Z","type":"message"}
{"nick":"tjfontaine","message":"but they are related","date":"2013-08-06T16:55:33.574Z","type":"message"}
{"nick":"trevnorris","message":"feels like almost every line in src/ has been touched in v0.11","date":"2013-08-06T16:56:01.451Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, one is a property of the other","date":"2013-08-06T16:56:01.771Z","type":"message"}
{"nick":"bnoordhuis","message":"feels good, doesn't it?","date":"2013-08-06T16:56:10.499Z","type":"message"}
{"nick":"bnoordhuis","message":"a fresh start, a clean break","date":"2013-08-06T16:56:21.130Z","type":"message"}
{"nick":"amartens","date":"2013-08-06T16:56:21.557Z","type":"join"}
{"nick":"bnoordhuis","message":"almost as good as rewriting the whole thing from scratch","date":"2013-08-06T16:56:34.910Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, enough merry banter, time for dinner. biab :)","date":"2013-08-06T16:57:19.801Z","type":"message"}
{"nick":"Benvie","date":"2013-08-06T16:59:26.032Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-08-06T17:01:35.219Z","type":"quit"}
{"nick":"groundwater","date":"2013-08-06T17:04:32.762Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-08-06T17:13:01.085Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-06T17:17:27.377Z","type":"join"}
{"nick":"piscisaureus_","reason":"Read error: No route to host","date":"2013-08-06T17:19:04.902Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-08-06T17:19:51.656Z","type":"join"}
{"nick":"AndreasMadsen","date":"2013-08-06T17:19:58.867Z","type":"join"}
{"nick":"bradleymeck","date":"2013-08-06T17:20:07.146Z","type":"join"}
{"nick":"TooTallNate","date":"2013-08-06T17:23:13.076Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 245 seconds","date":"2013-08-06T17:25:50.118Z","type":"quit"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2013-08-06T17:27:08.912Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-08-06T17:27:48.073Z","type":"join"}
{"nick":"indutny","message":"isaacs: mind reviewing https://github.com/joyent/node/pull/6002 ?","date":"2013-08-06T17:30:38.907Z","type":"message"}
{"nick":"indexzero","date":"2013-08-06T17:40:26.989Z","type":"join"}
{"nick":"c4milo","date":"2013-08-06T17:40:32.070Z","type":"join"}
{"nick":"julianduque","date":"2013-08-06T17:40:47.919Z","type":"join"}
{"nick":"brson","message":"how cheap are idle callbacks? the rust scheduler executes it's main work in an idle callback, but someone is suggesting to me that it will be faster for us to avoid the idle callbacks and instead use run with NO_WAIT. I'm guessing though that calling an callback is cheap compared to the rest of the work that the uv_run loop has to do","date":"2013-08-06T17:41:17.560Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-08-06T17:41:31.773Z","type":"quit"}
{"nick":"brson","message":"*idle callback","date":"2013-08-06T17:41:49.715Z","type":"message"}
{"nick":"inolen","date":"2013-08-06T17:42:41.439Z","type":"join"}
{"nick":"indexzero","reason":"Client Quit","date":"2013-08-06T17:44:50.499Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-06T17:46:39.076Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-06T17:47:46.598Z","type":"quit"}
{"nick":"sblom","reason":"Ping timeout: 264 seconds","date":"2013-08-06T17:56:16.427Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 264 seconds","date":"2013-08-06T17:58:04.378Z","type":"quit"}
{"nick":"indexzero","date":"2013-08-06T17:59:17.385Z","type":"join"}
{"nick":"tjfontaine","message":"I don't think we need to worry about the merge conflict from https://github.com/joyent/node/commit/3398cce1934004e4d60c7d7605fa7548582c362f because we're doing the cork/uncork work now?","date":"2013-08-06T18:00:45.174Z","type":"message"}
{"nick":"indexzero","reason":"Client Quit","date":"2013-08-06T18:03:32.304Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-06T18:03:32.723Z","type":"nick"}
{"nick":"trevnorris","message":"assert(0); abort(); <- will the abort() ever be reached?","date":"2013-08-06T18:07:44.095Z","type":"message"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-08-06T18:07:54.018Z","type":"quit"}
{"nick":"hz","date":"2013-08-06T18:07:57.994Z","type":"join"}
{"nick":"tjfontaine","message":"yes, depending on if asserts were compiled in","date":"2013-08-06T18:08:30.508Z","type":"message"}
{"nick":"trevnorris","message":"ok, so only if asserts were compiled in. cool.","date":"2013-08-06T18:09:03.427Z","type":"message"}
{"nick":"jmar777","reason":"Read error: Connection reset by peer","date":"2013-08-06T18:14:28.270Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-06T18:14:57.949Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-06T18:23:04.906Z","type":"quit"}
{"nick":"julianduque","reason":"Ping timeout: 276 seconds","date":"2013-08-06T18:27:51.888Z","type":"quit"}
{"nick":"jmar777","reason":"Read error: Connection reset by peer","date":"2013-08-06T18:31:55.538Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-06T18:32:19.253Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-06T18:37:48.712Z","type":"quit"}
{"nick":"brson","reason":"Quit: Lost terminal","date":"2013-08-06T18:38:26.453Z","type":"quit"}
{"nick":"indexzero","date":"2013-08-06T18:38:39.551Z","type":"join"}
{"nick":"abraxas","date":"2013-08-06T18:38:42.491Z","type":"join"}
{"nick":"AndreasMadsen","reason":"Remote host closed the connection","date":"2013-08-06T18:38:52.093Z","type":"quit"}
{"nick":"brson","date":"2013-08-06T18:39:04.007Z","type":"join"}
{"nick":"hz","reason":"Ping timeout: 264 seconds","date":"2013-08-06T18:43:07.014Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-06T18:43:39.364Z","type":"quit"}
{"nick":"abraxas","reason":"Ping timeout: 264 seconds","date":"2013-08-06T18:43:40.365Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: so w/ the external array pointer patch we'll be able to place the instance on any js object. imho it could simplify the internals to make the instances themselves attached to the class instead of having everything attached to ._handle or whatever","date":"2013-08-06T18:48:22.110Z","type":"message"}
{"nick":"isaacs","message":"indutny: looking","date":"2013-08-06T18:50:45.347Z","type":"message"}
{"nick":"isaacs","message":"indutny: like the new gravatar.","date":"2013-08-06T18:51:11.267Z","type":"message"}
{"nick":"indutny","message":"thanks","date":"2013-08-06T18:51:20.854Z","type":"message"}
{"nick":"isaacs","message":"indutny: lgtm, but please let tjfontaine finish the v0.10 merge before landing","date":"2013-08-06T18:52:36.159Z","type":"message"}
{"nick":"indutny","message":"sure","date":"2013-08-06T18:52:41.344Z","type":"message"}
{"nick":"isaacs","message":"indutny: is there an issue that this is related to?  or is no one using this feature?  from the fix, it looks like it's pretty obviously wrong right now...","date":"2013-08-06T18:53:19.080Z","type":"message"}
{"nick":"indutny","message":"nope","date":"2013-08-06T18:53:24.555Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: thoughts on using the new method to attach the c++ class instance directly to the js object instead of attaching it to ._handle or whatever?","date":"2013-08-06T18:54:48.565Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: _handle is internal API.  the only thing that i can think that it'd bust is the DTrace and MDB stuff.","date":"2013-08-06T18:55:25.556Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/tjfontaine/node/commit/822552dda6fb740541348492cb540b9ebaac608b","date":"2013-08-06T18:55:32.040Z","type":"message"}
{"nick":"trevnorris","message":"cool.","date":"2013-08-06T18:55:41.822Z","type":"message"}
{"nick":"trevnorris","message":"and hey, who the hell cares about dtrace? never found it that useful really.","date":"2013-08-06T18:59:40.165Z","type":"message"}
{"nick":"AndreasMadsen","date":"2013-08-06T19:00:41.148Z","type":"join"}
{"nick":"isaacs","message":"dap: ^  also, it's lunch o'clock","date":"2013-08-06T19:02:15.343Z","type":"message"}
{"nick":"AvianFlu","date":"2013-08-06T19:12:52.769Z","type":"join"}
{"nick":"kazupon","date":"2013-08-06T19:13:55.758Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-08-06T19:23:02.553Z","type":"quit"}
{"nick":"paulfryz_","date":"2013-08-06T19:26:08.995Z","type":"join"}
{"nick":"paulfry__","date":"2013-08-06T19:26:55.335Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 276 seconds","date":"2013-08-06T19:29:36.872Z","type":"quit"}
{"nick":"paulfryz_","reason":"Ping timeout: 264 seconds","date":"2013-08-06T19:30:45.822Z","type":"quit"}
{"nick":"paulfry__","reason":"Ping timeout: 245 seconds","date":"2013-08-06T19:31:15.246Z","type":"quit"}
{"nick":"indutny","message":"oh gosh","date":"2013-08-06T19:33:00.533Z","type":"message"}
{"nick":"creationix","message":"trevnorris, you said \" I almost feel like there's some better type of hook system that we could build in here somewhere. That like even domains could ride on.\"","date":"2013-08-06T19:49:34.692Z","type":"message"}
{"nick":"creationix","message":"what do you think about my proposed callback hook","date":"2013-08-06T19:49:47.111Z","type":"message"}
{"nick":"creationix","message":"it certainly fits the description of simple and powerful","date":"2013-08-06T19:50:01.840Z","type":"message"}
{"nick":"trevnorris","message":"reading","date":"2013-08-06T19:50:53.314Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-06T19:52:02.218Z","type":"quit"}
{"nick":"trevnorris","message":"ahhh.... holy shit. does the current pr really wrap all nextTick callbacks?","date":"2013-08-06T19:57:01.366Z","type":"message"}
{"nick":"creationix","message":"trevnorris, I think so https://github.com/joyent/node/pull/5990/files#L5L417","date":"2013-08-06T19:58:53.496Z","type":"message"}
{"nick":"creationix","message":"I don't quite understand how nextTick is implemented in node","date":"2013-08-06T19:59:09.859Z","type":"message"}
{"nick":"trevnorris","message":"haha","date":"2013-08-06T19:59:15.120Z","type":"message"}
{"nick":"creationix","message":"I've always envisioned it as I put in my sample library","date":"2013-08-06T19:59:23.742Z","type":"message"}
{"nick":"trevnorris","message":"creationix: maybe 5 people do","date":"2013-08-06T19:59:24.969Z","type":"message"}
{"nick":"creationix","message":"why does it need to be so complicated ","date":"2013-08-06T19:59:35.945Z","type":"message"}
{"nick":"creationix","message":"it's just a queue of callback at the end of every js stack","date":"2013-08-06T19:59:44.980Z","type":"message"}
{"nick":"creationix","message":"while (callbacks) run callback","date":"2013-08-06T19:59:54.646Z","type":"message"}
{"nick":"trevnorris","message":"it's gotten simpler, and the fact that domains exist make things much worse.","date":"2013-08-06T20:00:20.039Z","type":"message"}
{"nick":"trevnorris","message":"but that's the basic idea.","date":"2013-08-06T20:00:25.814Z","type":"message"}
{"nick":"mikeal","message":"creationix: i think it tries to protect against infinite occurrences of that, so new nextTick()'s can't infinitely block","date":"2013-08-06T20:00:38.111Z","type":"message"}
{"nick":"mikeal","message":"or is that setImmediate?","date":"2013-08-06T20:00:47.836Z","type":"message"}
{"nick":"trevnorris","message":"that's setImmedate","date":"2013-08-06T20:00:55.471Z","type":"message"}
{"nick":"mikeal","message":"nextTick got more confusing with setImmediate :)","date":"2013-08-06T20:01:06.046Z","type":"message"}
{"nick":"creationix","message":"yep, unfortunate naming","date":"2013-08-06T20:01:25.544Z","type":"message"}
{"nick":"creationix","message":"nextTick should really be afterTick","date":"2013-08-06T20:01:34.970Z","type":"message"}
{"nick":"hz","date":"2013-08-06T20:01:44.972Z","type":"join"}
{"nick":"creationix","message":"setImmediate should be setSoon","date":"2013-08-06T20:02:01.148Z","type":"message"}
{"nick":"creationix","message":"not that we can change any of that now","date":"2013-08-06T20:02:11.412Z","type":"message"}
{"nick":"trevnorris","message":"it's actually not that complicated anymore. a lot of stuff has been removed from v0.10","date":"2013-08-06T20:02:49.115Z","type":"message"}
{"nick":"trevnorris","message":"domains just make it more difficult","date":"2013-08-06T20:02:55.695Z","type":"message"}
{"nick":"kenperkins","date":"2013-08-06T20:03:21.651Z","type":"join"}
{"nick":"indutny","message":"isaacs: tadam https://github.com/joyent/node/pull/6004","date":"2013-08-06T20:03:36.839Z","type":"message"}
{"nick":"indutny","message":";)","date":"2013-08-06T20:03:43.092Z","type":"message"}
{"nick":"creationix","message":"trevnorris, my point with the comment was that even domains don't have to interfere with nextTIck","date":"2013-08-06T20:03:44.837Z","type":"message"}
{"nick":"indutny","message":"please take a look once you'll have some time","date":"2013-08-06T20:03:49.687Z","type":"message"}
{"nick":"creationix","message":"but maybe we want them too, hmm","date":"2013-08-06T20:03:55.929Z","type":"message"}
{"nick":"creationix","message":"s/too/to","date":"2013-08-06T20:04:00.749Z","type":"message"}
{"nick":"creationix","message":"trevnorris, yeah, I guess it's bad semantics for all nextTicks to run in the top-level domain/context","date":"2013-08-06T20:04:35.176Z","type":"message"}
{"nick":"creationix","message":"which is what my code would do since all stacks have unwound at that point","date":"2013-08-06T20:04:50.199Z","type":"message"}
{"nick":"AndreasMadsen","reason":"Remote host closed the connection","date":"2013-08-06T20:06:14.125Z","type":"quit"}
{"nick":"brson","reason":"Quit: Lost terminal","date":"2013-08-06T20:06:51.459Z","type":"quit"}
{"nick":"trevnorris","message":"to be honest I still don't understand the need for all this, but that's besides the point. pretty sure there's a hook system that'll allow anyone to add a large number of things w/o interfering with my performance.","date":"2013-08-06T20:07:28.357Z","type":"message"}
{"nick":"brson","date":"2013-08-06T20:07:30.976Z","type":"join"}
{"nick":"creationix","message":"trevnorris, a hook system different than the minimal one I've proposed","date":"2013-08-06T20:07:55.438Z","type":"message"}
{"nick":"creationix","message":"I'm not talking about cls","date":"2013-08-06T20:07:59.574Z","type":"message"}
{"nick":"creationix","message":"that can easily live in userspace if there is a hook for it to grab on","date":"2013-08-06T20:08:07.756Z","type":"message"}
{"nick":"creationix","message":"but monkey-patching from the outside is somewhere between impossible and terrible slow and complicated","date":"2013-08-06T20:08:29.839Z","type":"message"}
{"nick":"creationix","message":"(for certain event sources)","date":"2013-08-06T20:08:45.688Z","type":"message"}
{"nick":"creationix","message":"trevnorris, the hook all these use cases have in common is the same","date":"2013-08-06T20:09:15.545Z","type":"message"}
{"nick":"trevnorris","message":"your api was more the end-user api. i'm more concerned w/ the implementation.","date":"2013-08-06T20:09:18.277Z","type":"message"}
{"nick":"creationix","message":"in luvit I did it about where node's makeCallback lives","date":"2013-08-06T20:09:35.779Z","type":"message"}
{"nick":"creationix","message":"luvit has a hook like this","date":"2013-08-06T20:09:41.493Z","type":"message"}
{"nick":"trevnorris","message":"also i'm not sure how all this will be affected w/ ben's upcoming multi-context changes","date":"2013-08-06T20:11:06.220Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-06T20:13:40.062Z","type":"quit"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-08-06T20:13:57.031Z","type":"quit"}
{"nick":"hz","date":"2013-08-06T20:14:18.255Z","type":"join"}
{"nick":"trevnorris","message":"also i'm getting lost in all the words. is it basically, there's information we want to attach to a given callback that we can inspect at any given moment in time?","date":"2013-08-06T20:15:15.719Z","type":"message"}
{"nick":"creationix","message":"multi-context?","date":"2013-08-06T20:15:44.723Z","type":"message"}
{"nick":"trevnorris","message":"creationix: ^","date":"2013-08-06T20:15:44.941Z","type":"message"}
{"nick":"creationix","message":"what kind of context?","date":"2013-08-06T20:15:48.229Z","type":"message"}
{"nick":"creationix","message":"like v8 isolate?","date":"2013-08-06T20:15:53.101Z","type":"message"}
{"nick":"trevnorris","message":"no, v8 context. basically like a proper sandbox.","date":"2013-08-06T20:16:07.172Z","type":"message"}
{"nick":"creationix","message":"oh, so more than an isolate","date":"2013-08-06T20:16:19.007Z","type":"message"}
{"nick":"creationix","message":"context like the set of globals in every browser tab?","date":"2013-08-06T20:16:36.280Z","type":"message"}
{"nick":"tjfontaine","message":"creationix: https://github.com/bnoordhuis/node/compare/joyent:master...multi-context","date":"2013-08-06T20:16:56.243Z","type":"message"}
{"nick":"trevnorris","message":"well, different. a context basically defines another global scope where stuff can run w/o interfering with everything else.","date":"2013-08-06T20:17:16.674Z","type":"message"}
{"nick":"trevnorris","message":"man, my brain is fried.","date":"2013-08-06T20:17:22.043Z","type":"message"}
{"nick":"creationix","message":"right, the global context in js","date":"2013-08-06T20:18:43.433Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-08-06T20:18:53.951Z","type":"join"}
{"nick":"creationix","message":"or [context] as the ecma spec puts it","date":"2013-08-06T20:18:54.391Z","type":"message"}
{"nick":"kazupon","date":"2013-08-06T20:19:15.761Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u0002b26d346\u0002 : Merge remote-tracking branch 'upstream/v0.10' (+11 more commits) - http://git.io/cLgFIg","date":"2013-08-06T20:20:10.211Z","type":"message"}
{"nick":"c4milo","date":"2013-08-06T20:20:16.044Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #177 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/nodejs-master-windows/177/","date":"2013-08-06T20:20:28.197Z","type":"message"}
{"nick":"tjfontaine","message":"aha, it's throwing GC overhead limit exceeded","date":"2013-08-06T20:21:19.126Z","type":"message"}
{"nick":"tjfontaine","message":"fucking","date":"2013-08-06T20:21:22.067Z","type":"message"}
{"nick":"tjfontaine","message":"java","date":"2013-08-06T20:21:22.743Z","type":"message"}
{"nick":"creationix","message":"bnoordhuis, so in multi-context, each context will have a copy of all node variables right?","date":"2013-08-06T20:21:54.519Z","type":"message"}
{"nick":"creationix","message":"it's own require, require cache","date":"2013-08-06T20:21:58.742Z","type":"message"}
{"nick":"creationix","message":"etc","date":"2013-08-06T20:22:00.818Z","type":"message"}
{"nick":"creationix","message":"or are some things shared","date":"2013-08-06T20:22:06.327Z","type":"message"}
{"nick":"creationix","message":"if it's share nothing, then it shouldn't affect the event hook stuff.  You'd just need a unique set of event hooks per context","date":"2013-08-06T20:23:15.212Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-08-06T20:23:26.543Z","type":"quit"}
{"nick":"bnoordhuis","message":"creationix: everything has its own copy","date":"2013-08-06T20:25:33.004Z","type":"message"}
{"nick":"creationix","message":"yeah, then that shouldn't affect this stuff","date":"2013-08-06T20:26:25.088Z","type":"message"}
{"nick":"creationix","message":"bnoordhuis, but people can share stuff among contexts if they want right?","date":"2013-08-06T20:26:50.116Z","type":"message"}
{"nick":"creationix","message":"assuming context creation is a js API","date":"2013-08-06T20:26:57.621Z","type":"message"}
{"nick":"trevnorris","message":"creationix: so back to a previous question. at the most basic level is the point just to attach some data to a listener function and allow that to propagate for the life of the callback?","date":"2013-08-06T20:27:27.516Z","type":"message"}
{"nick":"creationix","message":"trevnorris, sortof","date":"2013-08-06T20:27:38.690Z","type":"message"}
{"nick":"creationix","message":"trevnorris, there are many use cases","date":"2013-08-06T20:27:44.456Z","type":"message"}
{"nick":"creationix","message":"but all of them have a common need","date":"2013-08-06T20:27:49.458Z","type":"message"}
{"nick":"creationix","message":"they need some function called when an event source is created *and* when the event happens","date":"2013-08-06T20:28:03.792Z","type":"message"}
{"nick":"creationix","message":"and usually a way to hook before and after the event","date":"2013-08-06T20:28:15.120Z","type":"message"}
{"nick":"creationix","message":"let's take long-stack traces as an example","date":"2013-08-06T20:28:28.511Z","type":"message"}
{"nick":"creationix","message":"you need to know the parent stack trace","date":"2013-08-06T20:28:33.713Z","type":"message"}
{"nick":"creationix","message":"that's the one that creates the event source","date":"2013-08-06T20:28:38.581Z","type":"message"}
{"nick":"creationix","message":"like the call to setTimeout","date":"2013-08-06T20:28:42.081Z","type":"message"}
{"nick":"creationix","message":"then later the timer fires in libuv and we call back into javascript","date":"2013-08-06T20:28:55.746Z","type":"message"}
{"nick":"creationix","message":"I need to be able to remember the stack I had back when setTimeout was called","date":"2013-08-06T20:29:07.914Z","type":"message"}
{"nick":"creationix","message":"with my proposed API, it's in the closure","date":"2013-08-06T20:29:15.612Z","type":"message"}
{"nick":"creationix","message":"by replacing the root callback with a new one, we can store anything in the closure","date":"2013-08-06T20:29:26.729Z","type":"message"}
{"nick":"creationix","message":"since we wrap the event callback, we can do things like try..catch for error handling (domains) or try..finally to know when a scope exits","date":"2013-08-06T20:30:08.998Z","type":"message"}
{"nick":"creationix","message":"it could be done without closures and arbitrary code, but exposing all the functionality would be a lot of API","date":"2013-08-06T20:30:40.241Z","type":"message"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-08-06T20:31:48.084Z","type":"quit"}
{"nick":"trevnorris","message":"but still, that's all just data. stuff that could be stored in an Object and that needs to propagate with that unique event instance.","date":"2013-08-06T20:32:22.201Z","type":"message"}
{"nick":"creationix","message":"but how do you know what data to store?","date":"2013-08-06T20:32:52.121Z","type":"message"}
{"nick":"creationix","message":"you'd have to encompass all the data people might want to read from the system","date":"2013-08-06T20:33:04.758Z","type":"message"}
{"nick":"creationix","message":"in both my nextTick and cls examples, I read data local to my module's inner closure","date":"2013-08-06T20:33:28.665Z","type":"message"}
{"nick":"creationix","message":"node could never read that data for me","date":"2013-08-06T20:33:32.834Z","type":"message"}
{"nick":"trevnorris","message":"let's forget what data we'd want to store for now. instead I'm concerned about when data should be stored.","date":"2013-08-06T20:35:08.691Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-06T20:35:37.480Z","type":"quit"}
{"nick":"bnoordhuis","message":"creationix: it's TBD if js code can spin up new contexts","date":"2013-08-06T20:37:07.549Z","type":"message"}
{"nick":"creationix","message":"trevnorris, so the data to be stored needs to read during times that create new callbacks","date":"2013-08-06T20:37:48.518Z","type":"message"}
{"nick":"creationix","message":"so that new callbacks can later read it","date":"2013-08-06T20:37:53.082Z","type":"message"}
{"nick":"bnoordhuis","message":"brson: idle handles have close to zero overhead","date":"2013-08-06T20:37:54.358Z","type":"message"}
{"nick":"isaacs","message":"indutny: lgtm, but minor nit on the test.","date":"2013-08-06T20:38:06.754Z","type":"message"}
{"nick":"trevnorris","message":"ok, need a break. creationix give me 5. think I might have an internal solution to solve this and the domain's performance problem. but need a moment to clear my head.","date":"2013-08-06T20:38:18.571Z","type":"message"}
{"nick":"creationix","message":"trevnorris, simple examples are things that are uv_req_t in libuv","date":"2013-08-06T20:38:20.025Z","type":"message"}
{"nick":"creationix","message":"trevnorris, ok","date":"2013-08-06T20:38:27.366Z","type":"message"}
{"nick":"indutny","message":"isaacs: which one?","date":"2013-08-06T20:39:30.680Z","type":"message"}
{"nick":"isaacs","message":"indutny: https://github.com/joyent/node/pull/6004","date":"2013-08-06T20:39:57.299Z","type":"message"}
{"nick":"indutny","message":"ah, I have received no notification","date":"2013-08-06T20:40:14.000Z","type":"message"}
{"nick":"indutny","message":"thank you!","date":"2013-08-06T20:40:15.195Z","type":"message"}
{"nick":"isaacs","message":"indutny: it'd be better to just have a variable to swithc back and forth between the two workers, rather than Math.random","date":"2013-08-06T20:40:19.861Z","type":"message"}
{"nick":"indutny","message":"got it","date":"2013-08-06T20:40:23.838Z","type":"message"}
{"nick":"stagas","date":"2013-08-06T20:40:29.907Z","type":"join"}
{"nick":"mikeal","date":"2013-08-06T20:43:53.595Z","type":"join"}
{"nick":"kellabyte","message":"I remember talk about making it easier to move from one event loop to another, has there been any work on that? I'm maxing out a core so I need to start using more of the CPU :P","date":"2013-08-06T20:44:01.786Z","type":"message"}
{"nick":"tjfontaine","message":"I think the way is to just use a pipe between them and send the handles with uv_write2, bnoordhuis was talking about it yesterday","date":"2013-08-06T20:44:32.690Z","type":"message"}
{"nick":"kellabyte","message":"tjfontaine: what do you mean by a pipe between them?","date":"2013-08-06T20:45:13.317Z","type":"message"}
{"nick":"tjfontaine","message":"uv_pipe_t","date":"2013-08-06T20:45:45.308Z","type":"message"}
{"nick":"tjfontaine","message":"kellabyte: https://github.com/joyent/libuv/blob/master/include/uv.h#L654-L662","date":"2013-08-06T20:46:11.440Z","type":"message"}
{"nick":"kellabyte","message":"ah hmm","date":"2013-08-06T20:47:17.924Z","type":"message"}
{"nick":"mikeal","reason":"Ping timeout: 264 seconds","date":"2013-08-06T20:48:28.385Z","type":"quit"}
{"nick":"kellabyte","message":"tjfontaine: so you create a thread, and that thread listens on a pipe, and the original socket sends what over the pipe?","date":"2013-08-06T20:48:46.793Z","type":"message"}
{"nick":"brson","message":"bnoordhuis: thanks for confirming my beliefs!","date":"2013-08-06T20:50:10.083Z","type":"message"}
{"nick":"trevnorris","message":"creationix: ok, i'm back.","date":"2013-08-06T20:50:22.709Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: correct, with uv_write2()","date":"2013-08-06T20:51:20.045Z","type":"message"}
{"nick":"bnoordhuis","message":"man, i really hate that name","date":"2013-08-06T20:51:26.572Z","type":"message"}
{"nick":"kellabyte","message":"haha","date":"2013-08-06T20:51:30.246Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: what exactly do I send over the pipe? do I have to keep track of the requests and then the worker threads send a signal back to the event loop thread, looks up a hashmap for the request?","date":"2013-08-06T20:52:26.619Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: you want to share handles across multiple threads, right?","date":"2013-08-06T20:53:06.413Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: yeah, can I actually do that?","date":"2013-08-06T20:54:17.578Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2013-08-06T20:54:22.204Z","type":"message"}
{"nick":"bnoordhuis","message":"'share' is not the right word, really. 'hand off' is more appropriate","date":"2013-08-06T20:54:36.188Z","type":"message"}
{"nick":"bnoordhuis","message":"you create a server socket or uv_accept() a listen socket, then send it over the pipe with uv_write2()","date":"2013-08-06T20:55:19.972Z","type":"message"}
{"nick":"creationix","message":"trevnorris, alright, what did you come up with","date":"2013-08-06T20:55:52.208Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: wow hmm!","date":"2013-08-06T20:56:33.857Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: oh, and the other side should listen on the pipe with uv_read_start2() rather than uv_read_start()","date":"2013-08-06T20:56:46.611Z","type":"message"}
{"nick":"brson","message":"is there any way to hand off handles without sending them through a pipe? in the rust scheduler I would like to be able to do I/O on whichever event loop a task happens to find itself on - I can't arrange beforehand to establish a pipe between two event loops?","date":"2013-08-06T20:56:48.139Z","type":"message"}
{"nick":"brson","message":"*no question mark","date":"2013-08-06T20:56:59.381Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Fedor Indutny\u000f \u00037master\u000f * \u0002166c405\u0002 : tls: fix lazy initialization of clienthello parser - http://git.io/dogR5Q","date":"2013-08-06T20:57:46.843Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: so say this thread receives the handle on the pipe, and now needs to send a response, can it do that?","date":"2013-08-06T20:58:35.767Z","type":"message"}
{"nick":"bnoordhuis","message":"brson: not right now. we used to have uv_export() and uv_import() functions for that way back when but we scratched those","date":"2013-08-06T20:59:01.552Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ping","date":"2013-08-06T20:59:13.252Z","type":"message"}
{"nick":"indutny","message":"I need your opinion on implementation of https://github.com/joyent/node/pull/6004/files","date":"2013-08-06T20:59:19.845Z","type":"message"}
{"nick":"bnoordhuis","message":"brson: i guess we could readd them. it's pretty trivial on unix but probably less so on windows","date":"2013-08-06T20:59:22.537Z","type":"message"}
{"nick":"indutny","message":"particularly this one comment https://github.com/joyent/node/pull/6004/files#r5614849","date":"2013-08-06T20:59:31.771Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: i'm going to sit on the fence on that one for a while","date":"2013-08-06T20:59:36.096Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: well, even if we don't use the external data pointer patch thing, at least we can commit the macro-ified cleanup of code.","date":"2013-08-06T20:59:37.110Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ah","date":"2013-08-06T20:59:43.413Z","type":"message"}
{"nick":"indutny","message":"must be unpleasant experience","date":"2013-08-06T20:59:54.547Z","type":"message"}
{"nick":"indutny","message":"sitting on the fence","date":"2013-08-06T20:59:58.223Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: yeah, it's pretty rough","date":"2013-08-06T21:00:03.799Z","type":"message"}
{"nick":"indutny","message":"I empathize to you heavily","date":"2013-08-06T21:00:24.293Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: yeah. your read2_cb gets an extra argument, the handle type","date":"2013-08-06T21:00:26.156Z","type":"message"}
{"nick":"indutny","message":"s/to//","date":"2013-08-06T21:00:32.076Z","type":"message"}
{"nick":"brson","message":"bnoordhuis: are import/export expensive operations?","date":"2013-08-06T21:00:38.540Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2013-08-06T21:00:48.239Z","type":"message"}
{"nick":"brson","message":"bnoordhuis: can i export and reimport between every read/write?","date":"2013-08-06T21:00:59.413Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: you then create a new handle based on the handle type, call uv_accept(&pipe_handle, &new_handle) and done","date":"2013-08-06T21:01:03.423Z","type":"message"}
{"nick":"bnoordhuis","message":"brson: you'll probably take a pretty big performance hit on windows that way","date":"2013-08-06T21:01:31.077Z","type":"message"}
{"nick":"wolfeidau","date":"2013-08-06T21:01:45.099Z","type":"join"}
{"nick":"bnoordhuis","message":"brson: it won't be cheap on unices either because libuv will have to unregister and reregister the fd with epoll/kqueue/etc. all the time","date":"2013-08-06T21:02:09.934Z","type":"message"}
{"nick":"tjfontaine","message":"anything else to go in master before I start the release?","date":"2013-08-06T21:02:13.503Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: btw, you can take a look at test/benchmark-multi-accept.c","date":"2013-08-06T21:03:00.599Z","type":"message"}
{"nick":"mikeal","date":"2013-08-06T21:03:17.978Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-08-06T21:03:20.624Z","type":"quit"}
{"nick":"brson","message":"bnoordhuis: that's true of read_start/read_stop too I assume? We currently always issue read_stop after a successful read","date":"2013-08-06T21:03:21.812Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: great, thanks, I don't think I understood that last step you described, lemme go read :)","date":"2013-08-06T21:03:22.271Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: the test/test-ipc* tests too probably","date":"2013-08-06T21:03:25.436Z","type":"message"}
{"nick":"bnoordhuis","message":"brson: yes, unless you call read_start again before the next event loop tick","date":"2013-08-06T21:04:11.049Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: great, thanks! part of my problem now is if a user issues 1 query that takes awhile, all the other cores are idle and this operation is holding people up","date":"2013-08-06T21:04:22.826Z","type":"message"}
{"nick":"paulfryzel","date":"2013-08-06T21:04:27.118Z","type":"join"}
{"nick":"kellabyte","message":"bnoordhuis: so need to start thinking about using the cores in the machine better :)","date":"2013-08-06T21:04:34.354Z","type":"message"}
{"nick":"brson","message":"bnoordhuis: oh, that's good. so it's cheap if i read_stop/read_start without dropping back to the loop?","date":"2013-08-06T21:04:39.048Z","type":"message"}
{"nick":"brson","message":"that's probably the common case","date":"2013-08-06T21:04:42.477Z","type":"message"}
{"nick":"bnoordhuis","message":"brson: yeah","date":"2013-08-06T21:04:54.253Z","type":"message"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-06T21:05:09.966Z","type":"quit"}
{"nick":"bnoordhuis","message":"kellabyte: oh. what does a query do? maybe something like a thread pool would be more appropriate","date":"2013-08-06T21:05:11.884Z","type":"message"}
{"nick":"pachet","reason":"Quit: leaving","date":"2013-08-06T21:05:14.565Z","type":"quit"}
{"nick":"tjfontaine","message":"ok, starting v0.11.5","date":"2013-08-06T21:05:16.050Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: you should include the diffstat in the announce email :)","date":"2013-08-06T21:05:39.973Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: it goes off to the DB to process the query, get the results, then it needs to send the http response","date":"2013-08-06T21:05:43.286Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033tjfontaine\u000f created branch v0.11.5-release - http://git.io/FmRF0Q","date":"2013-08-06T21:05:49.119Z","type":"message"}
{"nick":"trevnorris","message":"creationix: lowest level api, event-type listener for queued callbacks. it'll call the callbacks synchronously and pass, at the least, the callback and an object that's promised to propagate with the callback.","date":"2013-08-06T21:05:49.722Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: heh","date":"2013-08-06T21:05:52.168Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: is the db query synchronous or asynchronous?","date":"2013-08-06T21:06:01.076Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: DB meaning internal storage, thats running in the same C process","date":"2013-08-06T21:06:03.849Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: synchronous, its just some C calls","date":"2013-08-06T21:06:18.033Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, okay. so it's cpu bound?","date":"2013-08-06T21:06:18.317Z","type":"message"}
{"nick":"bnoordhuis","message":"no file or other i/o involved?","date":"2013-08-06T21:06:34.482Z","type":"message"}
{"nick":"trevnorris","message":"creationix: then the user can store whatever they want. domains could be easily reimplemented on top of that.","date":"2013-08-06T21:06:51.167Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: there's file io but its not using libuv, its a storage engine in C","date":"2013-08-06T21:06:51.965Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: okay. in that case that file i/o could become your bottleneck. that's usually when you start offloading work to a thread pool","date":"2013-08-06T21:07:25.015Z","type":"message"}
{"nick":"bnoordhuis","message":"libuv and node do the same thing for file i/o","date":"2013-08-06T21:07:36.770Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: but the uv_write to send the response needs to be done on the event loop right?","date":"2013-08-06T21:08:01.256Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: yes, that's correct","date":"2013-08-06T21:08:15.180Z","type":"message"}
{"nick":"tjfontaine","message":"jeepers this changelog","date":"2013-08-06T21:08:18.825Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: so how do you get from the thread pool, back to the event loop thread to send the response?","date":"2013-08-06T21:08:37.217Z","type":"message"}
{"nick":"creationix","message":"trevnorris, that sounds a lot like context-local-storage","date":"2013-08-06T21:09:12.960Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: uv_queue_work() handles that for you. you give it a work_cb and a done_cb. the work_cb is invoked in the thread pool, the done_cb on the event loop thread","date":"2013-08-06T21:09:15.727Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: what's the API look like for getting at that object (which I'm going to call the copilot just for funsies)?","date":"2013-08-06T21:09:16.826Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: and I agree with creationix, that sounds a lot like the API we've already sketched out","date":"2013-08-06T21:09:34.872Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: want me to review the cl?","date":"2013-08-06T21:09:39.428Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: one thing to keep in mind is that the thread pool on unix defaults to 4 threads currently. you can scale it with the UV_THREADPOOL_SIZE env var ","date":"2013-08-06T21:09:59.029Z","type":"message"}
{"nick":"trevnorris","message":"creationix: maybe, though much slimmer. and should even remove the current domain performance impact we're hit with.","date":"2013-08-06T21:10:11.400Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: oh! so it automatically calls the done_cb?","date":"2013-08-06T21:10:12.180Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: yes","date":"2013-08-06T21:10:27.395Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: not sure. i'm writing the code in my head as we speak.","date":"2013-08-06T21:10:34.439Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: and by api you've sketched out, you mean your pr?","date":"2013-08-06T21:10:47.832Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: hmm maybe thats what I should do, throw all my requests into the queue","date":"2013-08-06T21:10:49.722Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: the interface as documented, not the current implementation","date":"2013-08-06T21:11:13.466Z","type":"message"}
{"nick":"kenperkins","date":"2013-08-06T21:11:46.526Z","type":"join"}
{"nick":"creationix","message":"trevnorris, the nested scopes is where it gets interesting/useful","date":"2013-08-06T21:12:00.292Z","type":"message"}
{"nick":"creationix","message":"trevnorris, does your idea support that?","date":"2013-08-06T21:12:09.542Z","type":"message"}
{"nick":"trevnorris","message":"creationix: tentatively, i'll say yes.","date":"2013-08-06T21:12:35.331Z","type":"message"}
{"nick":"creationix","message":"of it not nested, at least changeable scopes","date":"2013-08-06T21:12:35.696Z","type":"message"}
{"nick":"creationix","message":"not sure nested is requires","date":"2013-08-06T21:12:41.051Z","type":"message"}
{"nick":"creationix","message":"*required","date":"2013-08-06T21:12:43.252Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: a lot slimmer than that. i'm going to write up a quick PR.","date":"2013-08-06T21:13:04.406Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #379 \u00037UNSTABLE\u000f osx-ia32 (3/621) smartos-ia32 (3/621) osx-x64 (2/621) smartos-x64 (9/621) http://jenkins.nodejs.org/job/nodejs-master/379/","date":"2013-08-06T21:13:44.361Z","type":"message"}
{"nick":"kellabyte","message":"brson: love that rust is using libuv btw :)","date":"2013-08-06T21:13:52.966Z","type":"message"}
{"nick":"othiym23","message":"creationix:, trevnorris: when I was reworking the docs on the PR last night, I realized that the New Relic agent relies on the current nesting semantics to deal with one function calling a bunch of other functions","date":"2013-08-06T21:13:55.205Z","type":"message"}
{"nick":"tjfontaine","message":"oh","date":"2013-08-06T21:14:08.053Z","type":"message"}
{"nick":"creationix","message":"othiym23, yes, you need nesting, but the core implementation may not","date":"2013-08-06T21:14:41.393Z","type":"message"}
{"nick":"trevnorris","message":"othiym23, creationix: and understand i'm simultaneously reworking some of the basic mechanisms for the tick processor. nothing I like to do more than delete code.","date":"2013-08-06T21:14:51.521Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: would you mind doing a libuv release, while I'm doing this changelog pruning?","date":"2013-08-06T21:15:06.034Z","type":"message"}
{"nick":"creationix","message":"yes, delete away","date":"2013-08-06T21:15:06.786Z","type":"message"}
{"nick":"othiym23","message":"I'm curious to see how the API can be slimmer, given that it has like five basic operations -- create a namespace, fetch a namespace, set a value, fetch a value, run a set of operations in a new context","date":"2013-08-06T21:15:40.030Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: thinking of http pipelining, if I chuck requests on the queue, will I be responding to http requests out of order?","date":"2013-08-06T21:15:54.317Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: sure","date":"2013-08-06T21:16:19.197Z","type":"message"}
{"nick":"creationix","message":"othiym23, I don't think your API can be slimmer, but what core provides could be","date":"2013-08-06T21:16:20.598Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: thanks","date":"2013-08-06T21:16:41.501Z","type":"message"}
{"nick":"othiym23","message":"I'll just let trevnorris put together a PR and then take a look","date":"2013-08-06T21:17:25.290Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: understand, the pr won't accomplish anything on it's own. it's a minimal hook system that'll allow you to implement your proposal.","date":"2013-08-06T21:18:24.540Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: i started working on this to remove the hit node gets once domains are used.","date":"2013-08-06T21:18:50.211Z","type":"message"}
{"nick":"creationix","message":"trevnorris, do you know already what the hook API will be","date":"2013-08-06T21:19:42.058Z","type":"message"}
{"nick":"creationix","message":"I'm very curious ","date":"2013-08-06T21:19:45.966Z","type":"message"}
{"nick":"othiym23","message":"that's great!","date":"2013-08-06T21:19:47.567Z","type":"message"}
{"nick":"kazupon","date":"2013-08-06T21:19:51.023Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033bnoordhuis\u000f created tag v0.11.7 - http://git.io/1A7Rww","date":"2013-08-06T21:20:09.427Z","type":"message"}
{"nick":"othiym23","message":"I'm completely happy with something that lets me keep this whole thing in userspace, especially if it improves overall performance","date":"2013-08-06T21:20:12.559Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002d34fad7\u0002 : Now working on v0.11.8 (+1 more commits) - http://git.io/s5zxxA","date":"2013-08-06T21:20:13.427Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: ^","date":"2013-08-06T21:20:29.657Z","type":"message"}
{"nick":"othiym23","message":"I'd be happy with domains being implemented purely in userspace, as far as that's concerned","date":"2013-08-06T21:20:31.795Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: thanks!","date":"2013-08-06T21:20:36.926Z","type":"message"}
{"nick":"creationix","action":"would be happy with http in userspace ","date":"2013-08-06T21:20:45.818Z","type":"action"}
{"nick":"creationix","message":":P","date":"2013-08-06T21:20:48.929Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: yes. there's no guarantee in what order the requests will come back from the thread pool","date":"2013-08-06T21:20:57.035Z","type":"message"}
{"nick":"othiym23","message":"haha","date":"2013-08-06T21:20:57.252Z","type":"message"}
{"nick":"othiym23","message":"a point in favor of replacing the module in core with a hook is that the polyfill version I'm going to need to keep around for old versions of Node could be split up into the glue logic and the gross yucky world-monkeypatcher that the core hook replaces","date":"2013-08-06T21:22:19.064Z","type":"message"}
{"nick":"othiym23","message":"so it would be the same code in both versions, with the only difference being how it gets applied","date":"2013-08-06T21:22:35.575Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: ok thanks, I'll try to make it do non-pipelined requests first to make sure I have the callbacks proper, and see what I can do there","date":"2013-08-06T21:22:59.595Z","type":"message"}
{"nick":"st_luke","date":"2013-08-06T21:23:38.751Z","type":"join"}
{"nick":"jmar777","date":"2013-08-06T21:24:23.330Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-08-06T21:24:45.841Z","type":"quit"}
{"nick":"tjfontaine","message":"https://gist.github.com/tjfontaine/6168821 after first cull","date":"2013-08-06T21:27:08.628Z","type":"message"}
{"nick":"mikeal","message":"Koichi's back!","date":"2013-08-06T21:28:02.148Z","type":"message"}
{"nick":"brson","message":"kellabyte: thanks! the new libuv-based task scheduler is going to land \"any day now\"","date":"2013-08-06T21:28:04.880Z","type":"message"}
{"nick":"mikeal","message":":)","date":"2013-08-06T21:28:06.723Z","type":"message"}
{"nick":"stagas","reason":"Ping timeout: 264 seconds","date":"2013-08-06T21:28:06.973Z","type":"quit"}
{"nick":"brson","message":"any hour now really","date":"2013-08-06T21:28:24.038Z","type":"message"}
{"nick":"brson","message":"completely replaces the old C++ scheduler with libuv + pure Rust","date":"2013-08-06T21:28:39.697Z","type":"message"}
{"nick":"brson","message":"<3","date":"2013-08-06T21:28:42.826Z","type":"message"}
{"nick":"kellabyte","message":"brson: nice :)","date":"2013-08-06T21:28:49.804Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: \"util: removed duplicated isArray check\" and \"benchmark: update misc to new v8 API\" aren't that interesting, right?","date":"2013-08-06T21:30:14.831Z","type":"message"}
{"nick":"bnoordhuis","message":"\"src: Replace macros with util functions\" effectively got reverted (for shame! for shame!)","date":"2013-08-06T21:30:30.745Z","type":"message"}
{"nick":"tjfontaine","message":"ya isaacs is doing a second pass now","date":"2013-08-06T21:30:54.789Z","type":"message"}
{"nick":"bnoordhuis","message":"\"process_wrap: omit superfluous Number creation\" isn't the most interesting change in the world either :)","date":"2013-08-06T21:31:03.521Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #380 \u00037UNSTABLE\u000f smartos-ia32 (7/621) linux-ia32 (1/621) smartos-x64 (7/621) http://jenkins.nodejs.org/job/nodejs-master/380/","date":"2013-08-06T21:31:21.649Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: but it certainly could be to someone doing evil things","date":"2013-08-06T21:31:34.488Z","type":"message"}
{"nick":"tjfontaine","message":"anyway, at least that's the reasoning I took","date":"2013-08-06T21:31:44.782Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: https://gist.github.com/isaacs/6168834","date":"2013-08-06T21:31:53.439Z","type":"message"}
{"nick":"tjfontaine","message":"thanks","date":"2013-08-06T21:32:12.293Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs, tjfontaine: \"cluster: support setting data on shared server\" <- not relevant for non-core people","date":"2013-08-06T21:33:50.510Z","type":"message"}
{"nick":"bnoordhuis","message":"that's an internal api","date":"2013-08-06T21:33:59.822Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: awesome","date":"2013-08-06T21:34:02.107Z","type":"message"}
{"nick":"isaacs","message":"ok, i wasn't sure.  didn't review that.","date":"2013-08-06T21:34:06.925Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: thanks so much for the help, time to go off and learn :)","date":"2013-08-06T21:39:21.735Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-review\u0002: #34 \u00034FAILURE\u000f windows-ia32 (12/192) smartos-x64 (2/191) windows-x64 (5/192) smartos-ia32 (2/191) http://jenkins.nodejs.org/job/libuv-review/34/","date":"2013-08-06T21:39:27.747Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #152 \u00034FAILURE\u000f windows (4/192) http://jenkins.nodejs.org/job/libuv-master/152/","date":"2013-08-06T21:42:18.759Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037v0.11.5-release\u000f * \u00026f92da2\u0002 : 2013.08.06, Version 0.11.5 (Unstable) (+1 more commits) - http://git.io/QTA3lQ","date":"2013-08-06T21:43:59.795Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-08-06T21:44:29.397Z","type":"quit"}
{"nick":"wavded","date":"2013-08-06T21:48:17.102Z","type":"join"}
{"nick":"Somebody","date":"2013-08-06T21:48:23.090Z","type":"join"}
{"nick":"bnoordhuis","message":"kellabyte: no problem :)","date":"2013-08-06T21:49:50.257Z","type":"message"}
{"nick":"tjfontaine","message":"dear windows, hurry up with the building and stuff","date":"2013-08-06T21:50:18.324Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-08-06T21:50:56.268Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #90 \u00034FAILURE\u000f windows-x64 (5/192) windows-ia32 (4/192) http://jenkins.nodejs.org/job/libuv-master-gyp/90/","date":"2013-08-06T21:51:18.905Z","type":"message"}
{"nick":"tjfontaine","message":"there we go","date":"2013-08-06T21:51:22.038Z","type":"message"}
{"nick":"tjfontaine","message":"java.lang.NullPointerException fuck you jenkins/java, fuck you very much","date":"2013-08-06T21:51:44.259Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: maybe back to buildbot? :)","date":"2013-08-06T21:52:48.139Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: ya, I have plans, and already started on some code yesterday, and will be doing more tonight on it, I'm nearly at my wits end, I'm going to keep it for release orchestration, because it does that ok","date":"2013-08-06T21:53:45.572Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-06T22:06:42.086Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #178 \u00037UNSTABLE\u000f windows-x64 (21/621) windows-ia32 (26/621) http://jenkins.nodejs.org/job/nodejs-master-windows/178/","date":"2013-08-06T22:07:17.107Z","type":"message"}
{"nick":"mcavage","reason":"Remote host closed the connection","date":"2013-08-06T22:08:03.276Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-06T22:09:30.411Z","type":"quit"}
{"nick":"jmar777","reason":"Read error: Connection reset by peer","date":"2013-08-06T22:09:34.297Z","type":"quit"}
{"nick":"jmar777_","date":"2013-08-06T22:09:42.985Z","type":"join"}
{"nick":"mikeal","date":"2013-08-06T22:10:11.335Z","type":"join"}
{"nick":"paddybyers","date":"2013-08-06T22:12:07.423Z","type":"join"}
{"nick":"TooTallNate","message":"tjfontaine: so are releases all automated now from jenkins?","date":"2013-08-06T22:12:32.654Z","type":"message"}
{"nick":"tjfontaine","message":"\"all\", mostly","date":"2013-08-06T22:13:28.338Z","type":"message"}
{"nick":"tjfontaine","message":"when jenkins isn't fucking me like it is right now","date":"2013-08-06T22:13:34.450Z","type":"message"}
{"nick":"tjfontaine","message":"ok the windows failure is something else, I'm not even sure what this means","date":"2013-08-06T22:15:19.644Z","type":"message"}
{"nick":"tjfontaine","message":"g:\\VS2010\\VC\\include\\time.inl(133): fatal error C1090: PDB API call failed, error code '23' : '( [g:\\jenkins\\workspace\\nodejs-msi\\1d92f228\\deps\\openssl\\openssl.vcxproj]","date":"2013-08-06T22:15:20.179Z","type":"message"}
{"nick":"ecr","date":"2013-08-06T22:15:23.580Z","type":"join"}
{"nick":"tjfontaine","message":"and/or why we don't hit that on normal builds","date":"2013-08-06T22:15:43.432Z","type":"message"}
{"nick":"wavded","reason":"Quit: Nighty night","date":"2013-08-06T22:16:00.150Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: i know you know this, but wow. I can't believe how much faster args[n].As<Array>()->Get(m); is than args[n].As<Object>()->Get(str);","date":"2013-08-06T22:18:34.861Z","type":"message"}
{"nick":"trevnorris","message":"s/args[n]/obj/g","date":"2013-08-06T22:19:02.103Z","type":"message"}
{"nick":"tjfontaine","message":"http://stackoverflow.com/a/13799195","date":"2013-08-06T22:19:16.414Z","type":"message"}
{"nick":"tjfontaine","message":"hahah","date":"2013-08-06T22:19:17.448Z","type":"message"}
{"nick":"tjfontaine","message":"ha.","date":"2013-08-06T22:19:19.193Z","type":"message"}
{"nick":"tjfontaine","action":"fires off another build where MSI's aren't built in parallel","date":"2013-08-06T22:20:13.749Z","type":"action"}
{"nick":"kazupon","date":"2013-08-06T22:20:26.141Z","type":"join"}
{"nick":"julianduque","date":"2013-08-06T22:20:50.451Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: yeah, that's why i proposed to move everything to lookups by index :)","date":"2013-08-06T22:23:25.887Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: totally for it. it's one of the hacks i'm using to speed up the whole domain thing.","date":"2013-08-06T22:23:52.498Z","type":"message"}
{"nick":"bnoordhuis","message":"it's such an obvious optimization in hindsight, i wonder why i didn't think of that before","date":"2013-08-06T22:24:30.754Z","type":"message"}
{"nick":"trevnorris","message":"I have those all the time.","date":"2013-08-06T22:24:41.990Z","type":"message"}
{"nick":"trevnorris","message":"like when you pointed out checking for in_tick","date":"2013-08-06T22:24:50.597Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2013-08-06T22:24:55.993Z","type":"quit"}
{"nick":"bnoordhuis","message":"ah, right :)","date":"2013-08-06T22:24:56.524Z","type":"message"}
{"nick":"trevnorris","message":"took me 20 mins to fix, but totally didn't see it.","date":"2013-08-06T22:25:03.126Z","type":"message"}
{"nick":"trevnorris","message":"and to complete the hack, it's just as fast to treat this like an array { 0: someValue }","date":"2013-08-06T22:25:41.242Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah","date":"2013-08-06T22:25:50.042Z","type":"message"}
{"nick":"bnoordhuis","message":"v8 doesn't care","date":"2013-08-06T22:26:00.454Z","type":"message"}
{"nick":"bnoordhuis","message":"v8 is like honey badger in that respect","date":"2013-08-06T22:26:16.450Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-08-06T22:26:23.383Z","type":"message"}
{"nick":"AvianFlu_","date":"2013-08-06T22:26:42.669Z","type":"join"}
{"nick":"tjfontaine","message":"can the honeybadger please eat jenkins next?","date":"2013-08-06T22:26:43.562Z","type":"message"}
{"nick":"AvianFlu_","reason":"Remote host closed the connection","date":"2013-08-06T22:27:05.103Z","type":"quit"}
{"nick":"bnoordhuis","message":"hah, i sense a smidgen of frustration","date":"2013-08-06T22:27:05.758Z","type":"message"}
{"nick":"bnoordhuis","message":"so what's your plan, tj?","date":"2013-08-06T22:27:12.435Z","type":"message"}
{"nick":"othiym23","message":"tjfontaine: I sense some frustration in your tone","date":"2013-08-06T22:27:14.755Z","type":"message"}
{"nick":"othiym23","message":"jinx!","date":"2013-08-06T22:27:18.286Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-06T22:27:22.100Z","type":"quit"}
{"nick":"tjfontaine","message":"bnoordhuis: well, jenkins by default doesn't work the way I want (TheRightWay) anyway, in so far as I want to see a build per commit, not a build per \"whatever the fuck has changed since last jenkins could be fucked to try a build\"","date":"2013-08-06T22:27:53.718Z","type":"message"}
{"nick":"tjfontaine","message":"so I have a client that works reasonably well at building and submitting results, I just need the server that keeps track of what outstanding sha's haven't yet been built for a given configuration","date":"2013-08-06T22:28:54.153Z","type":"message"}
{"nick":"pachet","date":"2013-08-06T22:29:41.928Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 240 seconds","date":"2013-08-06T22:29:50.542Z","type":"quit"}
{"nick":"trevnorris","message":"is process.domain considered private api?","date":"2013-08-06T22:30:22.360Z","type":"message"}
{"nick":"tjfontaine","message":"hmm, I wouldn't think so, it's the currently executing domain, so someone could want to know where they actually are","date":"2013-08-06T22:30:54.267Z","type":"message"}
{"nick":"trevnorris","message":"oy. why couldn't that have been wrapped in a function...","date":"2013-08-06T22:31:35.880Z","type":"message"}
{"nick":"trevnorris","message":"guess I could hack it as a getter/setter for backwards compatibility.","date":"2013-08-06T22:34:22.172Z","type":"message"}
{"nick":"paddybyers","reason":"Ping timeout: 264 seconds","date":"2013-08-06T22:38:16.387Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-06T22:39:04.334Z","type":"join"}
{"nick":"wavded","date":"2013-08-06T22:39:45.174Z","type":"join"}
{"nick":"rendar","date":"2013-08-06T22:42:01.398Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-06T22:45:48.597Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: you still around?","date":"2013-08-06T22:49:00.405Z","type":"message"}
{"nick":"mikeal","date":"2013-08-06T22:49:52.331Z","type":"join"}
{"nick":"othiym23","message":"trevnorris: process.domain is super useful if you're writing modules that you want to be domains-aware without relying on them being available","date":"2013-08-06T22:49:56.627Z","type":"message"}
{"nick":"othiym23","message":"in that it allows you to do stuff with the current domain without forcing you to require('domain') and change to the domains control flow path","date":"2013-08-06T22:50:33.579Z","type":"message"}
{"nick":"othiym23","message":"and I've been recommending that as a pattern to people","date":"2013-08-06T22:50:45.293Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: that's fine. but i'd rather have had a process.getDomain() or whatever. in terms of optimization, it's impossible when it's exposed that way.","date":"2013-08-06T22:51:01.379Z","type":"message"}
{"nick":"othiym23","message":"if you define a getter using the V8 API directly, does it have the same performance penalty as using Object.defineProperty?","date":"2013-08-06T22:52:05.406Z","type":"message"}
{"nick":"trevnorris","message":"i dunno. but how often are you getting/setting the domain property in a second?","date":"2013-08-06T22:52:46.847Z","type":"message"}
{"nick":"tjfontaine","message":"it's going to be one of those fucking days.","date":"2013-08-06T22:53:49.221Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: yep","date":"2013-08-06T22:54:32.356Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033trevnorris\u000f created branch domains-ben-reviewme - http://git.io/WJzzqg","date":"2013-08-06T22:54:50.021Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: couldn't really say","date":"2013-08-06T22:54:57.346Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: can't believe I did that.","date":"2013-08-06T22:55:01.467Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: almost have another optimization ready to go as well.","date":"2013-08-06T22:55:19.823Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: lgtm'd","date":"2013-08-06T22:56:44.849Z","type":"message"}
{"nick":"trevnorris","message":"coolio thanks","date":"2013-08-06T22:56:50.045Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Trevor Norris\u000f \u00037master\u000f * \u0002e3c5019\u0002 : domains: properly check if domains are being used - http://git.io/-fsQJg","date":"2013-08-06T22:57:28.100Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: do you care about that going through the CI atm, or can I kill it?","date":"2013-08-06T22:57:52.425Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: kill it","date":"2013-08-06T22:58:05.257Z","type":"message"}
{"nick":"tjfontaine","message":"thanks","date":"2013-08-06T22:58:07.865Z","type":"message"}
{"nick":"trevnorris","message":"heh, just promise me you'll take pleasure while you do","date":"2013-08-06T22:58:24.379Z","type":"message"}
{"nick":"tjfontaine","message":"I take no pleasure right now","date":"2013-08-06T22:58:38.772Z","type":"message"}
{"nick":"tjfontaine","message":"I'm not sure why/where jenkins lost its mind, but the process that has been working for nightlies and the past 4 releases has decided to be a nightmare today","date":"2013-08-06T22:59:06.598Z","type":"message"}
{"nick":"bnoordhuis","message":"we should do a \"this week in node\" newsletter","date":"2013-08-06T22:59:11.448Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess strongloop already does that with the blog posts","date":"2013-08-06T22:59:23.168Z","type":"message"}
{"nick":"bnoordhuis","message":"but it's what i like about the rust mailing list","date":"2013-08-06T22:59:30.541Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #179 \u0002ABORTED\u0002 http://jenkins.nodejs.org/job/nodejs-master-windows/179/","date":"2013-08-06T22:59:31.120Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: you probably can't get in that last tiny commit, could you?","date":"2013-08-06T22:59:36.547Z","type":"message"}
{"nick":"tjfontaine","message":"I'd rather not, no","date":"2013-08-06T22:59:48.690Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: sounds like fun.","date":"2013-08-06T22:59:48.907Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #381 \u0002ABORTED\u0002 http://jenkins.nodejs.org/job/nodejs-master/381/","date":"2013-08-06T22:59:56.123Z","type":"message"}
{"nick":"trevnorris","message":"ah well","date":"2013-08-06T22:59:57.026Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: yeah. i ghost-write them now for the strongloop blog every week","date":"2013-08-06T23:00:12.739Z","type":"message"}
{"nick":"bnoordhuis","message":"but jimmy always takes out my puns :(","date":"2013-08-06T23:00:28.575Z","type":"message"}
{"nick":"trevnorris","message":"hah","date":"2013-08-06T23:00:54.990Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: don't want a full review yet, but when you have a moment mind giving feedback on my use of macros: https://github.com/joyent/node/pull/5998/files","date":"2013-08-06T23:03:49.354Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: was able to centralize all wrap/unwrap's in core. so if we don't want to use the external array thingy then it'll be trivial to shove in the old one","date":"2013-08-06T23:04:21.362Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: if you ping me on the issue, i'll look at it tomorrow. it's 1 am here, i was about to sign off and go to bed","date":"2013-08-06T23:05:08.275Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: sounds good. rest well","date":"2013-08-06T23:05:20.311Z","type":"message"}
{"nick":"bnoordhuis","message":"thanks, you too :)","date":"2013-08-06T23:05:30.878Z","type":"message"}
{"nick":"Somebody","reason":"Remote host closed the connection","date":"2013-08-06T23:15:48.421Z","type":"quit"}
{"nick":"kenperkins","date":"2013-08-06T23:17:17.179Z","type":"join"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2013-08-06T23:19:23.127Z","type":"quit"}
{"nick":"hz","date":"2013-08-06T23:19:33.615Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-06T23:21:00.150Z","type":"join"}
{"nick":"kenperkins","reason":"Client Quit","date":"2013-08-06T23:21:29.450Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-08-06T23:22:52.923Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-08-06T23:23:20.429Z","type":"join"}
{"nick":"Damn3d","reason":"Ping timeout: 264 seconds","date":"2013-08-06T23:23:38.827Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-08-06T23:25:42.981Z","type":"quit"}
{"nick":"felixge","reason":"Quit: felixge","date":"2013-08-06T23:25:44.983Z","type":"quit"}
{"nick":"Damn3d","date":"2013-08-06T23:25:48.858Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 246 seconds","date":"2013-08-06T23:26:10.940Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-06T23:26:16.138Z","type":"join"}
{"nick":"wolfeidau","reason":"Ping timeout: 245 seconds","date":"2013-08-06T23:27:55.209Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-06T23:32:28.756Z","type":"join"}
{"nick":"jmar777_","reason":"Ping timeout: 264 seconds","date":"2013-08-06T23:32:33.792Z","type":"quit"}
{"nick":"austo","reason":"Quit: Leaving","date":"2013-08-06T23:33:28.953Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-06T23:34:26.328Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-06T23:37:02.064Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: hell's yes! I found a use for the smalloc extension!","date":"2013-08-06T23:46:41.182Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: w00T!","date":"2013-08-06T23:46:52.035Z","type":"message"}
{"nick":"tjfontaine","message":"oh boy","date":"2013-08-06T23:46:57.068Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: If you will it, it is no dream, Dude.","date":"2013-08-06T23:46:58.785Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: seriously, right? and in all places, domains. never would have thought.","date":"2013-08-06T23:47:21.388Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: hahah","date":"2013-08-06T23:47:39.953Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: ok, these optimizations are getting intense, even for me. feel like taking a step back and thinking across all core.","date":"2013-08-06T23:51:06.344Z","type":"message"}
{"nick":"isaacs","message":"hahah","date":"2013-08-06T23:53:14.290Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: which ones?","date":"2013-08-06T23:53:18.279Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: also, this sounds like great 1.0 talk.","date":"2013-08-06T23:53:33.386Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: basically we're communicating state as flags via small allocated object per module (like infoBox), but then we can extend that and store N pointers to callback methods in the external data for quick reference.","date":"2013-08-06T23:54:06.319Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: so, for example, i'm patching process.domain to use a getter/setter then storing the actual object in a persistent array shared with the native layer. accessing that is 20x's faster than retrieving an object property.","date":"2013-08-06T23:55:43.288Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: interesting","date":"2013-08-06T23:56:15.045Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: so I should be able to get domain performance close to the margin of error of not using domains","date":"2013-08-06T23:56:16.565Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: right","date":"2013-08-06T23:56:20.862Z","type":"message"}
{"nick":"kazupon","date":"2013-08-06T23:57:46.647Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: also this way it's trivial to check on either side if we're actively in a domain at any given moment.","date":"2013-08-06T23:58:15.640Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: so my thought is to extend this with a simpler hook system that calls a listener whenever a callback is passed, to say nextTick, which then receives the callback and an object promised to exist with that callback.","date":"2013-08-06T23:59:28.036Z","type":"message"}
