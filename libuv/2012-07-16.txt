{"nick":"isaacs_mobile","reason":"Remote host closed the connection","date":"2012-07-16T00:05:30.463Z","type":"quit"}
{"nick":"CIA-108","message":"\u0002node:\u000f \u000303Mike Morearty\u000f \u000307v0.8\u000f * r\u000219aa05f\u000f \u000310\u000f/ doc/api/child_process.markdown \u0002:\u000f doc: fix bug in child_process.spawn() sample code - http://git.io/IvYvsQ","date":"2012-07-16T00:28:24.755Z","type":"message"}
{"nick":"tjfontaine","message":"bah, damn pipes!","date":"2012-07-16T00:34:38.073Z","type":"message"}
{"nick":"bnoordhuis","date":"2012-07-16T00:35:42.109Z","type":"join"}
{"nick":"tjfontaine","message":"bnoordhuis: always have to find holes","date":"2012-07-16T00:35:50.489Z","type":"message"}
{"nick":"bnoordhuis","message":"sorry :)","date":"2012-07-16T00:36:06.765Z","type":"message"}
{"nick":"tjfontaine","message":"comments on the rest of it though?","date":"2012-07-16T00:36:20.591Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: still reading it","date":"2012-07-16T00:37:11.030Z","type":"message"}
{"nick":"tjfontaine","message":"k","date":"2012-07-16T00:37:23.375Z","type":"message"}
{"nick":"tjfontaine","message":"hmm tty_wrap has unref but no ref","date":"2012-07-16T00:37:31.969Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: yeah, that's more or less intentional","date":"2012-07-16T00:37:54.835Z","type":"message"}
{"nick":"bnoordhuis","message":"we may have to revisit that someday but for now i'm fine with leaving it as it is","date":"2012-07-16T00:38:16.329Z","type":"message"}
{"nick":"tjfontaine","message":"ok","date":"2012-07-16T00:38:24.419Z","type":"message"}
{"nick":"tjfontaine","message":"hmm pipe_wrap has unref, should it get ref? I presume pipe unref has to do with child process as well","date":"2012-07-16T00:40:36.866Z","type":"message"}
{"nick":"mmalecki","message":"hey, I'm having problems with compiling my branch of node, log isn't really useful: https://gist.github.com/8ea57a4c3e95c5e2119f my commit is: https://github.com/mmalecki/node/commit/eb4d73ae52e06d95b7785f4d2093ba323606100b","date":"2012-07-16T00:43:25.907Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: it's because stdio can be pipes","date":"2012-07-16T00:45:19.142Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: --without-dtrace?","date":"2012-07-16T00:45:44.559Z","type":"message"}
{"nick":"kohai","message":"mmalecki has 100 shots","date":"2012-07-16T00:45:45.431Z","type":"message"}
{"nick":"bnoordhuis","message":"hah","date":"2012-07-16T00:45:50.539Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: right, ok","date":"2012-07-16T00:45:58.893Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: i think dtrace is broken now anyway","date":"2012-07-16T00:46:07.354Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: hah, no, my changes actually involve dtrace","date":"2012-07-16T00:46:38.687Z","type":"message"}
{"nick":"mmalecki","message":"so I explicitely enable dtrace","date":"2012-07-16T00:46:48.594Z","type":"message"}
{"nick":"mmalecki","message":"please see my commit","date":"2012-07-16T00:46:51.825Z","type":"message"}
{"nick":"tjfontaine","message":"I'm guessing there's more to extending the datastructure there","date":"2012-07-16T00:48:12.576Z","type":"message"}
{"nick":"mmalecki","message":"well, that's likely, but I don't know where is it","date":"2012-07-16T00:51:49.979Z","type":"message"}
{"nick":"joeandaverde","date":"2012-07-16T00:52:46.387Z","type":"join"}
{"nick":"chobi_e_","new_nick":"chobi_e","date":"2012-07-16T00:57:31.022Z","type":"nick"}
{"nick":"tjfontaine","message":"hmm I'm not entirely sure how to test pipe","date":"2012-07-16T01:06:56.282Z","type":"message"}
{"nick":"joeandav_","date":"2012-07-16T01:11:51.952Z","type":"join"}
{"nick":"joeandav_","reason":"Remote host closed the connection","date":"2012-07-16T01:15:27.568Z","type":"quit"}
{"nick":"beachdog","reason":"Quit: beachdog","date":"2012-07-16T01:21:04.934Z","type":"quit"}
{"nick":"bnoordhuis","message":"tjfontaine: net.Server().listen(common.PIPE)?","date":"2012-07-16T01:31:46.122Z","type":"message"}
{"nick":"bnoordhuis","reason":"Read error: Operation timed out","date":"2012-07-16T01:47:02.789Z","type":"quit"}
{"nick":"abraxas","date":"2012-07-16T01:50:14.747Z","type":"join"}
{"nick":"chobi_e","new_nick":"chobi_e_","date":"2012-07-16T01:53:50.585Z","type":"nick"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2012-07-16T01:56:59.062Z","type":"quit"}
{"nick":"abraxas","date":"2012-07-16T01:57:13.042Z","type":"join"}
{"nick":"piscisaureus_","date":"2012-07-16T02:08:08.431Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 252 seconds","date":"2012-07-16T02:18:20.163Z","type":"quit"}
{"nick":"piscisaureus_","date":"2012-07-16T02:24:26.404Z","type":"join"}
{"nick":"piscisaureus_","reason":"Client Quit","date":"2012-07-16T02:24:43.276Z","type":"quit"}
{"nick":"felixge","date":"2012-07-16T02:34:29.827Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2012-07-16T02:34:30.067Z","type":"quit"}
{"nick":"felixge","date":"2012-07-16T02:34:30.067Z","type":"join"}
{"nick":"c4milo","date":"2012-07-16T02:54:27.164Z","type":"join"}
{"nick":"Aria","reason":"Remote host closed the connection","date":"2012-07-16T03:03:18.203Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2012-07-16T03:07:08.880Z","type":"quit"}
{"nick":"dr34dl0ck","date":"2012-07-16T03:28:44.027Z","type":"join"}
{"nick":"philips_","reason":"Excess Flood","date":"2012-07-16T03:31:15.419Z","type":"quit"}
{"nick":"philips_","date":"2012-07-16T03:34:04.024Z","type":"join"}
{"nick":"dr34dl0ck","reason":"Quit: Colloquy for iPad - http://colloquy.mobi","date":"2012-07-16T03:40:34.240Z","type":"quit"}
{"nick":"paddybyers","date":"2012-07-16T04:05:01.469Z","type":"join"}
{"nick":"paddybyers_","date":"2012-07-16T04:20:18.151Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 246 seconds","date":"2012-07-16T04:22:59.495Z","type":"quit"}
{"nick":"paddybyers_","new_nick":"paddybyers","date":"2012-07-16T04:22:59.734Z","type":"nick"}
{"nick":"igorzi","date":"2012-07-16T04:46:45.708Z","type":"join"}
{"nick":"igorzi","date":"2012-07-16T04:49:00.069Z","type":"part"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-07-16T04:50:29.904Z","type":"quit"}
{"nick":"sh1mmer","reason":"Quit: sh1mmer","date":"2012-07-16T05:25:34.185Z","type":"quit"}
{"nick":"loladiro","date":"2012-07-16T05:51:20.193Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2012-07-16T05:51:37.303Z","type":"quit"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-07-16T05:54:09.129Z","type":"quit"}
{"nick":"joeandaverde","reason":"Quit: joeandaverde","date":"2012-07-16T06:01:23.962Z","type":"quit"}
{"nick":"rendar","date":"2012-07-16T06:32:32.519Z","type":"join"}
{"nick":"paddybyers","date":"2012-07-16T06:38:45.524Z","type":"join"}
{"nick":"stephank","reason":"Quit: *Poof!*","date":"2012-07-16T06:54:35.297Z","type":"quit"}
{"nick":"felixge","reason":"Quit: felixge","date":"2012-07-16T08:16:00.526Z","type":"quit"}
{"nick":"hz","date":"2012-07-16T08:41:43.628Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2012-07-16T09:57:10.574Z","type":"quit"}
{"nick":"mmalecki","reason":"Ping timeout: 246 seconds","date":"2012-07-16T10:02:54.203Z","type":"quit"}
{"nick":"perezd","reason":"*.net *.split","date":"2012-07-16T11:43:58.082Z","type":"quit"}
{"nick":"toothrot","reason":"*.net *.split","date":"2012-07-16T11:43:58.321Z","type":"quit"}
{"nick":"voodootikigod","reason":"*.net *.split","date":"2012-07-16T11:43:58.561Z","type":"quit"}
{"nick":"perezd","date":"2012-07-16T11:45:20.643Z","type":"join"}
{"nick":"toothrot","date":"2012-07-16T11:45:20.643Z","type":"join"}
{"nick":"voodootikigod","date":"2012-07-16T11:45:20.643Z","type":"join"}
{"nick":"hz","reason":"Ping timeout: 272 seconds","date":"2012-07-16T12:08:26.575Z","type":"quit"}
{"nick":"hz","date":"2012-07-16T12:13:33.611Z","type":"join"}
{"nick":"hz","reason":"Ping timeout: 272 seconds","date":"2012-07-16T12:19:12.574Z","type":"quit"}
{"nick":"hz","date":"2012-07-16T12:21:11.574Z","type":"join"}
{"nick":"einaros","message":"paddybyers: I'm handling that CloseEvent thing now","date":"2012-07-16T12:42:44.612Z","type":"message"}
{"nick":"paddybyers","message":"einaros: perfect, thanks","date":"2012-07-16T12:42:59.843Z","type":"message"}
{"nick":"einaros","message":"train wifi ftw","date":"2012-07-16T12:43:13.175Z","type":"message"}
{"nick":"einaros","message":"the woman next to me having the world's smelliest feet: massive train failure","date":"2012-07-16T12:45:54.886Z","type":"message"}
{"nick":"beachdog","date":"2012-07-16T12:50:07.431Z","type":"join"}
{"nick":"einaros","message":"paddybyers: pushed","date":"2012-07-16T13:08:57.165Z","type":"message"}
{"nick":"paddybyers","message":"einaros: thanks","date":"2012-07-16T13:09:36.787Z","type":"message"}
{"nick":"beachdog","reason":"Quit: beachdog","date":"2012-07-16T13:10:51.509Z","type":"quit"}
{"nick":"hz","reason":"Ping timeout: 272 seconds","date":"2012-07-16T14:06:14.604Z","type":"quit"}
{"nick":"hz","date":"2012-07-16T14:10:26.605Z","type":"join"}
{"nick":"c4milo","date":"2012-07-16T14:25:57.420Z","type":"join"}
{"nick":"xaq","date":"2012-07-16T14:26:48.931Z","type":"join"}
{"nick":"bnoordhuis","date":"2012-07-16T14:27:07.282Z","type":"join"}
{"nick":"indutny","message":"heya","date":"2012-07-16T14:56:28.167Z","type":"message"}
{"nick":"hz","reason":"Ping timeout: 272 seconds","date":"2012-07-16T14:59:26.568Z","type":"quit"}
{"nick":"chobi_e_","new_nick":"chobi_e","date":"2012-07-16T15:03:06.000Z","type":"nick"}
{"nick":"AvianFlu","date":"2012-07-16T15:08:05.307Z","type":"join"}
{"nick":"dap","date":"2012-07-16T15:27:47.914Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: how are you?","date":"2012-07-16T15:41:43.647Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: splendid. you?","date":"2012-07-16T15:42:53.291Z","type":"message"}
{"nick":"indutny","message":"wasted :D","date":"2012-07-16T15:43:01.194Z","type":"message"}
{"nick":"indutny","message":"two sleepless nights with ICFPC'12 competition","date":"2012-07-16T15:43:15.959Z","type":"message"}
{"nick":"bnoordhuis","message":"icfpc?","date":"2012-07-16T15:43:40.216Z","type":"message"}
{"nick":"indutny","message":"icfpcontest2012.wordpress.com","date":"2012-07-16T15:43:46.108Z","type":"message"}
{"nick":"indutny","message":"allthough it wasn't really interesting we hadn't written really good solution for it","date":"2012-07-16T15:44:22.493Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2012-07-16T15:44:53.792Z","type":"message"}
{"nick":"indutny","message":"s/wasn't/was/g","date":"2012-07-16T15:44:58.071Z","type":"message"}
{"nick":"beachdog","date":"2012-07-16T15:48:46.437Z","type":"join"}
{"nick":"perezd","reason":"Quit: perezd","date":"2012-07-16T15:57:20.510Z","type":"quit"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2012-07-16T15:59:58.227Z","type":"quit"}
{"nick":"beachdog","message":"I'm looking for an event loop lib for my C++ program which will need N event loops ( 1,000 < N < 5,000 ) running in n Threads ( n < N, i.e. one thread will need to service multiple event loops). Would libuv be a good choice, or not?  I thought I'd heard something about not handling multithreading cases….","date":"2012-07-16T16:00:20.075Z","type":"message"}
{"nick":"dap","date":"2012-07-16T16:00:39.301Z","type":"join"}
{"nick":"bnoordhuis","message":"beachdog: you can if you have one event loop per thread","date":"2012-07-16T16:01:13.602Z","type":"message"}
{"nick":"indutny","message":"how would you like to use multiple eventloops in one?","date":"2012-07-16T16:01:27.201Z","type":"message"}
{"nick":"indutny","message":"s/one/one thread","date":"2012-07-16T16:01:31.260Z","type":"message"}
{"nick":"stephank","date":"2012-07-16T16:01:59.561Z","type":"join"}
{"nick":"bnoordhuis","message":"i'm not sure if multiple event loops in one thread will work","date":"2012-07-16T16:02:42.980Z","type":"message"}
{"nick":"bnoordhuis","message":"it's not an issue on unices but the windows event dispatch mechanism works in strange and inexplicable ways","date":"2012-07-16T16:03:02.723Z","type":"message"}
{"nick":"beachdog","message":"Well, I would like to have many (that's my N) independent contexts.  However, I do not want to start that many threads.  I would instead want to have a pool of worker threads to service event loops.  But therefore one worker thread might be assigned some number of event loops to service.  (I'm not saying this is possible using libuv, or any other library for that matter, just how I am picturing it now)","date":"2012-07-16T16:03:09.498Z","type":"message"}
{"nick":"beachdog","message":"also, I don","date":"2012-07-16T16:03:43.348Z","type":"message"}
{"nick":"beachdog","message":"also I don't care about windows that much","date":"2012-07-16T16:03:56.342Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, in that case there's no problem - it'll work","date":"2012-07-16T16:04:09.845Z","type":"message"}
{"nick":"beachdog","message":"I could say that one event loop will only ever get serviced by one thread, if that helps.  Its just that the thread might service multiple loops","date":"2012-07-16T16:04:57.464Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, that's okay","date":"2012-07-16T16:06:00.664Z","type":"message"}
{"nick":"beachdog","message":"thx!  Also, just wondering, if I could ask a follow up, could you give me the short-short answer on why node moved from libev to libuv?  I'm just trying to research the landscape here before I pick a landing spot","date":"2012-07-16T16:07:39.706Z","type":"message"}
{"nick":"indutny","message":"becase cross-platform system programming is hard","date":"2012-07-16T16:08:05.321Z","type":"message"}
{"nick":"bnoordhuis","message":"beachdog: because the libev event model is pretty much incompatible with how windows works","date":"2012-07-16T16:08:17.469Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ++","date":"2012-07-16T16:08:28.480Z","type":"message"}
{"nick":"kohai","message":"bnoordhuis has 20 beers","date":"2012-07-16T16:08:29.362Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: longer, but more informative :)","date":"2012-07-16T16:08:37.109Z","type":"message"}
{"nick":"bnoordhuis","message":"heh","date":"2012-07-16T16:08:42.773Z","type":"message"}
{"nick":"indutny","message":"I wonder what is an integer value of Infinity","date":"2012-07-16T16:09:07.763Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: there is none","date":"2012-07-16T16:09:55.415Z","type":"message"}
{"nick":"bnoordhuis","message":"unless you have unlimited bits","date":"2012-07-16T16:10:01.850Z","type":"message"}
{"nick":"indutny","message":"well, obviously","date":"2012-07-16T16:10:23.925Z","type":"message"}
{"nick":"indutny","message":"I was thinking about what I'll get when doing: (Infinity)->IntegerValue() in v8","date":"2012-07-16T16:10:49.784Z","type":"message"}
{"nick":"bnoordhuis","message":"not sure but i guess it's the same as casting INF to int - undefined","date":"2012-07-16T16:12:27.334Z","type":"message"}
{"nick":"indutny","message":"oh, nice","date":"2012-07-16T16:12:38.475Z","type":"message"}
{"nick":"bnoordhuis","message":"i stress the 'not sure' part though","date":"2012-07-16T16:13:02.998Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-07-16T16:13:12.050Z","type":"message"}
{"nick":"indutny","message":"is process.hrtime() available on all platforms?","date":"2012-07-16T16:13:51.420Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2012-07-16T16:13:55.014Z","type":"message"}
{"nick":"indutny","message":"ah, nvm","date":"2012-07-16T16:13:59.424Z","type":"message"}
{"nick":"bnoordhuis","message":"the granularity may differ though","date":"2012-07-16T16:14:09.081Z","type":"message"}
{"nick":"indutny","message":"I'm actually more interested in 64bit uptime","date":"2012-07-16T16:14:11.685Z","type":"message"}
{"nick":"indutny","message":"I think we should use it in lib/timer.js","date":"2012-07-16T16:14:26.173Z","type":"message"}
{"nick":"indutny","message":"instead of Date.now","date":"2012-07-16T16:14:28.490Z","type":"message"}
{"nick":"perezd","date":"2012-07-16T16:14:49.487Z","type":"join"}
{"nick":"bnoordhuis","message":"well...","date":"2012-07-16T16:14:50.322Z","type":"message"}
{"nick":"indutny","message":"or","date":"2012-07-16T16:14:56.047Z","type":"message"}
{"nick":"indutny","message":"        if (diff + 1 < msecs) {","date":"2012-07-16T16:14:56.933Z","type":"message"}
{"nick":"indutny","message":"          list.start(msecs - diff, 0);","date":"2012-07-16T16:14:57.167Z","type":"message"}
{"nick":"indutny","message":"what's that","date":"2012-07-16T16:14:59.584Z","type":"message"}
{"nick":"indutny","message":"why diff + 1 ?","date":"2012-07-16T16:15:03.232Z","type":"message"}
{"nick":"bnoordhuis","message":"i believe Date.now() calls gettimeofday()","date":"2012-07-16T16:15:07.108Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2012-07-16T16:15:09.662Z","type":"message"}
{"nick":"bnoordhuis","message":"which is nice because that's not an actual syscall on linux","date":"2012-07-16T16:15:16.991Z","type":"message"}
{"nick":"indutny","message":"ah, it's ok","date":"2012-07-16T16:15:17.236Z","type":"message"}
{"nick":"bnoordhuis","message":"whereas clock_gettime() is","date":"2012-07-16T16:15:22.318Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-07-16T16:15:25.491Z","type":"message"}
{"nick":"indutny","message":"good","date":"2012-07-16T16:15:27.613Z","type":"message"}
{"nick":"indutny","message":"still js call is slower, than syscall :)","date":"2012-07-16T16:15:33.679Z","type":"message"}
{"nick":"bnoordhuis","message":"is it?","date":"2012-07-16T16:15:44.271Z","type":"message"}
{"nick":"indutny","message":"so your belief doesn't really changing it :0","date":"2012-07-16T16:15:47.416Z","type":"message"}
{"nick":"indutny","message":"I suppose it is","date":"2012-07-16T16:15:50.912Z","type":"message"}
{"nick":"bnoordhuis","message":"benchmark!","date":"2012-07-16T16:15:55.765Z","type":"message"}
{"nick":"indutny","message":"10million/sec calls","date":"2012-07-16T16:16:38.174Z","type":"message"}
{"nick":"indutny","message":"Date.now()","date":"2012-07-16T16:16:40.237Z","type":"message"}
{"nick":"indutny","message":"Time to benchmark clock_gettime()","date":"2012-07-16T16:16:55.886Z","type":"message"}
{"nick":"tjfontaine","message":"ah man you're trying to muck with timers.js while I'm still trying to get a patch applied :)","date":"2012-07-16T16:17:27.456Z","type":"message"}
{"nick":"indutny","message":"is clock_gettime() linuxish?","date":"2012-07-16T16:17:29.576Z","type":"message"}
{"nick":"indutny","message":"hahah","date":"2012-07-16T16:17:34.603Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: you fixed that?","date":"2012-07-16T16:17:39.423Z","type":"message"}
{"nick":"tjfontaine","message":"nah it's not related to that really","date":"2012-07-16T16:17:48.286Z","type":"message"}
{"nick":"indutny","message":"ah, ok","date":"2012-07-16T16:17:54.793Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: it's posix-ish but it's what we use on linux","date":"2012-07-16T16:17:55.253Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: no such thing on osx","date":"2012-07-16T16:18:22.449Z","type":"message"}
{"nick":"indutny","message":"at least, not in man","date":"2012-07-16T16:18:29.377Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: no, there isn't","date":"2012-07-16T16:18:42.376Z","type":"message"}
{"nick":"bnoordhuis","message":"it's awesome actually because os x is supposed to be certified posix","date":"2012-07-16T16:19:01.071Z","type":"message"}
{"nick":"bnoordhuis","message":"probably just the base profile though :)","date":"2012-07-16T16:19:25.739Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-07-16T16:19:28.948Z","type":"message"}
{"nick":"indutny","message":"I'll try on debian VM","date":"2012-07-16T16:19:37.261Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-07-16T16:19:39.324Z","type":"message"}
{"nick":"indutny","message":"that's not the same","date":"2012-07-16T16:19:42.520Z","type":"message"}
{"nick":"indutny","message":"well, you may try it ;)","date":"2012-07-16T16:19:54.376Z","type":"message"}
{"nick":"bnoordhuis","message":"sure, 1 sec","date":"2012-07-16T16:20:25.682Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: median of 3, Date.now() -> 0m2.008s, process.hrtime() -> 0m2.521s","date":"2012-07-16T16:21:41.015Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-07-16T16:21:50.255Z","type":"message"}
{"nick":"indutny","message":"but that's not the same :)","date":"2012-07-16T16:22:05.300Z","type":"message"}
{"nick":"indutny","message":"as testing in C","date":"2012-07-16T16:22:14.178Z","type":"message"}
{"nick":"indutny","message":"because Date.now is supported on language level","date":"2012-07-16T16:22:27.109Z","type":"message"}
{"nick":"indutny","message":"while process.hrtime() is our extension to runtime","date":"2012-07-16T16:22:36.798Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, sure","date":"2012-07-16T16:22:50.605Z","type":"message"}
{"nick":"bnoordhuis","message":"still, i'll bet you a sixpack that gettimeofday() is faster than clock_gettime()","date":"2012-07-16T16:23:06.713Z","type":"message"}
{"nick":"indutny","message":"hehe","date":"2012-07-16T16:23:22.039Z","type":"message"}
{"nick":"indutny","message":"well, I'm quite sure","date":"2012-07-16T16:23:26.984Z","type":"message"}
{"nick":"indutny","message":"I just think that calling Date.now from js is still slower than doing clock_gettime() ","date":"2012-07-16T16:23:46.497Z","type":"message"}
{"nick":"indutny","message":";)","date":"2012-07-16T16:23:47.455Z","type":"message"}
{"nick":"indutny","message":"and the only reason for it to be fast is because v8 supports it's optimization","date":"2012-07-16T16:24:05.224Z","type":"message"}
{"nick":"indutny","message":"but it should be slower anyway","date":"2012-07-16T16:24:11.671Z","type":"message"}
{"nick":"bnoordhuis","message":"but it isn't so there you go :)","date":"2012-07-16T16:24:23.099Z","type":"message"}
{"nick":"tjfontaine","message":"haha","date":"2012-07-16T16:24:38.455Z","type":"message"}
{"nick":"indutny","message":"hahaha","date":"2012-07-16T16:24:41.200Z","type":"message"}
{"nick":"indutny","message":"post results :)","date":"2012-07-16T16:24:47.513Z","type":"message"}
{"nick":"indutny","message":"so value of infinity is undefined","date":"2012-07-16T16:29:36.736Z","type":"message"}
{"nick":"indutny","message":"really good","date":"2012-07-16T16:29:38.045Z","type":"message"}
{"nick":"indutny","message":"just a random bytes","date":"2012-07-16T16:29:41.979Z","type":"message"}
{"nick":"philips_","reason":"Excess Flood","date":"2012-07-16T16:36:29.499Z","type":"quit"}
{"nick":"philips_","date":"2012-07-16T16:36:37.391Z","type":"join"}
{"nick":"bnoordhuis","message":"indutny: https://github.com/joyent/node/pull/3689 <- is your patch supposed to apply to v0.8?","date":"2012-07-16T16:43:50.700Z","type":"message"}
{"nick":"indutny","message":"that depends on who suppose so","date":"2012-07-16T16:44:11.115Z","type":"message"}
{"nick":"indutny","message":"like, I am","date":"2012-07-16T16:44:14.196Z","type":"message"}
{"nick":"indutny","message":"who else? :)","date":"2012-07-16T16:44:16.249Z","type":"message"}
{"nick":"indutny","message":"isaacs: ?","date":"2012-07-16T16:44:22.716Z","type":"message"}
{"nick":"indutny","message":"actually, it's a bugfix for API and security","date":"2012-07-16T16:44:36.686Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm glad i can pass on all the tough decisions to isaacs :)","date":"2012-07-16T16:45:04.543Z","type":"message"}
{"nick":"isaacs","message":"heh","date":"2012-07-16T16:45:31.583Z","type":"message"}
{"nick":"isaacs","message":"looking","date":"2012-07-16T16:45:36.749Z","type":"message"}
{"nick":"indutny","message":"yeah, I like this too;","date":"2012-07-16T16:46:18.183Z","type":"message"}
{"nick":"isaacs","message":"Changing the Agent API might be problematic.","date":"2012-07-16T16:46:19.613Z","type":"message"}
{"nick":"isaacs","message":"for v0.8","date":"2012-07-16T16:46:23.485Z","type":"message"}
{"nick":"indutny","message":"well, does it change it much?","date":"2012-07-16T16:46:30.524Z","type":"message"}
{"nick":"indutny","message":"this was === global","date":"2012-07-16T16:46:36.234Z","type":"message"}
{"nick":"indutny","message":"and will be equal === request","date":"2012-07-16T16:46:40.199Z","type":"message"}
{"nick":"indutny","message":"and it's internal stuff, actually","date":"2012-07-16T16:46:44.110Z","type":"message"}
{"nick":"indutny","message":"isaacs: that's all that we have documented for agent - http://nodejs.org/api/http.html#http_class_http_agent","date":"2012-07-16T16:47:21.291Z","type":"message"}
{"nick":"indutny","message":"no createConnection!","date":"2012-07-16T16:47:29.808Z","type":"message"}
{"nick":"isaacs","message":"indutny: yes, but people use it.","date":"2012-07-16T16:48:54.594Z","type":"message"}
{"nick":"isaacs","message":"that's why we can't change API in a stable branch, even if it's undocumented.","date":"2012-07-16T16:49:03.324Z","type":"message"}
{"nick":"isaacs","message":"indutny: at least, it has to work if the req arg is omitted","date":"2012-07-16T16:49:14.646Z","type":"message"}
{"nick":"indutny","message":"won't it?","date":"2012-07-16T16:49:22.430Z","type":"message"}
{"nick":"indutny","message":"that's not an argument change","date":"2012-07-16T16:49:36.460Z","type":"message"}
{"nick":"indutny","message":"just change of context which wasn't really defined anywhere","date":"2012-07-16T16:49:47.358Z","type":"message"}
{"nick":"isaacs","message":"ok, so, what happens if you dont' pass a req to Agent.createSocket?","date":"2012-07-16T16:50:02.913Z","type":"message"}
{"nick":"indutny","message":"em...","date":"2012-07-16T16:50:27.282Z","type":"message"}
{"nick":"isaacs","message":"myAgent.createConnection(name, host, port, localAddress)","date":"2012-07-16T16:50:29.207Z","type":"message"}
{"nick":"isaacs","message":"er, createSocket, i mean","date":"2012-07-16T16:50:35.861Z","type":"message"}
{"nick":"indutny","message":"createSocket?","date":"2012-07-16T16:50:51.876Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-07-16T16:51:00.461Z","type":"message"}
{"nick":"indutny","message":"right","date":"2012-07-16T16:51:06.535Z","type":"message"}
{"nick":"indutny","message":"well, nothing will happen","date":"2012-07-16T16:51:14.858Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-16T16:51:21.227Z","type":"quit"}
{"nick":"indutny","message":"createConnection will be called w/o context","date":"2012-07-16T16:51:34.612Z","type":"message"}
{"nick":"indutny","message":"but yeah, this change looks dangerous to me too","date":"2012-07-16T16:51:43.293Z","type":"message"}
{"nick":"indutny","message":"lets pull it into 0.9","date":"2012-07-16T16:51:50.388Z","type":"message"}
{"nick":"isaacs","message":"is there any way to have it just not use the req if it's not passed in?","date":"2012-07-16T16:52:06.588Z","type":"message"}
{"nick":"erickt","date":"2012-07-16T16:55:13.114Z","type":"join"}
{"nick":"isaacs","message":"indutny: ^","date":"2012-07-16T16:55:50.940Z","type":"message"}
{"nick":"isaacs","message":"indutny: it *would* be really nice to get this behavior into v0.8","date":"2012-07-16T16:57:20.403Z","type":"message"}
{"nick":"TooTallNate","date":"2012-07-16T16:58:58.587Z","type":"join"}
{"nick":"isaacs","message":"indutny: wait, doesn't the Agent already know what hostname it's connecting to, from the host argument?","date":"2012-07-16T16:59:50.449Z","type":"message"}
{"nick":"isaacs","message":"indutny: i guess i'm not understanding why the req arg is necessary.","date":"2012-07-16T17:00:00.708Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2012-07-16T17:03:28.381Z","type":"quit"}
{"nick":"dap","date":"2012-07-16T17:03:56.152Z","type":"join"}
{"nick":"arlolra","date":"2012-07-16T17:04:30.875Z","type":"join"}
{"nick":"indutny","message":"sorry","date":"2012-07-16T17:07:19.889Z","type":"message"}
{"nick":"indutny","message":"I was afk","date":"2012-07-16T17:07:28.114Z","type":"message"}
{"nick":"indutny","message":"actually, without internet","date":"2012-07-16T17:07:33.467Z","type":"message"}
{"nick":"indutny","message":"so","date":"2012-07-16T17:07:38.801Z","type":"message"}
{"nick":"indutny","message":"how is it changing API?","date":"2012-07-16T17:07:41.847Z","type":"message"}
{"nick":"indutny","message":"isaacs: ^","date":"2012-07-16T17:07:42.767Z","type":"message"}
{"nick":"isaacs","message":"indutny: it's adding a req argument to Agent.prototype.createSocket","date":"2012-07-16T17:08:04.372Z","type":"message"}
{"nick":"indutny","message":"and?","date":"2012-07-16T17:08:26.929Z","type":"message"}
{"nick":"indutny","message":"not using it","date":"2012-07-16T17:08:29.515Z","type":"message"}
{"nick":"indutny","message":"if it wasn't given :)","date":"2012-07-16T17:08:32.913Z","type":"message"}
{"nick":"indutny","message":"it's just passing it as a context to createConnection","date":"2012-07-16T17:08:48.937Z","type":"message"}
{"nick":"isaacs","message":"indutny: what *does* it use it for?","date":"2012-07-16T17:08:49.972Z","type":"message"}
{"nick":"indutny","message":"and this context is only used in tls.js","date":"2012-07-16T17:09:00.078Z","type":"message"}
{"nick":"indutny","message":"to get options that was passed to https.request()","date":"2012-07-16T17:09:10.289Z","type":"message"}
{"nick":"indutny","message":"otherwise we lose them","date":"2012-07-16T17:09:13.426Z","type":"message"}
{"nick":"indutny","message":"and using agent ones instead","date":"2012-07-16T17:09:19.854Z","type":"message"}
{"nick":"isaacs","message":"indutny: so, you call https.request(options)","date":"2012-07-16T17:10:35.105Z","type":"message"}
{"nick":"isaacs","message":"then that does   return new http.ClientRequest(options, cb);","date":"2012-07-16T17:11:18.809Z","type":"message"}
{"nick":"isaacs","action":"wants to rewrite http.js so badly this is such utter trash, sorry you have to see this","date":"2012-07-16T17:11:58.968Z","type":"action"}
{"nick":"indutny","message":"(offtopic, setTimeout(function() {}, Infinity) - forget about callback or add a timer with maximum int64_t value for timeout?)","date":"2012-07-16T17:12:13.862Z","type":"message"}
{"nick":"indutny","message":"hahaha","date":"2012-07-16T17:12:23.399Z","type":"message"}
{"nick":"indutny","message":"isaacs: ok, changing topic for a bit","date":"2012-07-16T17:13:39.778Z","type":"message"}
{"nick":"indutny","message":"sorry","date":"2012-07-16T17:13:42.545Z","type":"message"}
{"nick":"indutny","message":"isaacs: so about timers, what should we do?","date":"2012-07-16T17:13:48.447Z","type":"message"}
{"nick":"indutny","message":"ignore this call, or add timer to queue?","date":"2012-07-16T17:13:58.161Z","type":"message"}
{"nick":"isaacs","message":"which gets to       var conn = options.createConnection.call(self, options);","date":"2012-07-16T17:14:01.781Z","type":"message"}
{"nick":"indutny","message":"isaacs: yes","date":"2012-07-16T17:14:09.053Z","type":"message"}
{"nick":"indutny","message":"and self contains agent options","date":"2012-07-16T17:14:14.323Z","type":"message"}
{"nick":"indutny","message":"self.options","date":"2012-07-16T17:14:17.425Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2012-07-16T17:14:17.668Z","type":"message"}
{"nick":"isaacs","message":"and options.createConnection is the createConnection from lib/http.js","date":"2012-07-16T17:14:36.008Z","type":"message"}
{"nick":"isaacs","message":"er, https.js","date":"2012-07-16T17:14:43.359Z","type":"message"}
{"nick":"indutny","message":"em...","date":"2012-07-16T17:14:49.614Z","type":"message"}
{"nick":"indutny","message":"from tls","date":"2012-07-16T17:14:55.579Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-07-16T17:15:00.756Z","type":"message"}
{"nick":"indutny","message":"right","date":"2012-07-16T17:15:01.732Z","type":"message"}
{"nick":"indutny","message":"from https.js","date":"2012-07-16T17:15:06.324Z","type":"message"}
{"nick":"isaacs","message":"which does   var options = util._extend({}, this.options);","date":"2012-07-16T17:15:07.730Z","type":"message"}
{"nick":"indutny","message":"and it calls tls.connect","date":"2012-07-16T17:15:09.598Z","type":"message"}
{"nick":"isaacs","message":"thn sets up some other options","date":"2012-07-16T17:15:18.790Z","type":"message"}
{"nick":"isaacs","message":"then does   return tls.connect(options);","date":"2012-07-16T17:15:24.883Z","type":"message"}
{"nick":"isaacs","message":"so... i'm not seeing where the req argument is ever relevant","date":"2012-07-16T17:15:45.470Z","type":"message"}
{"nick":"indutny","message":"well, it's not","date":"2012-07-16T17:16:08.059Z","type":"message"}
{"nick":"indutny","message":"but createConnection was called with different contexts in different places","date":"2012-07-16T17:16:21.997Z","type":"message"}
{"nick":"isaacs","message":"can we just always call it with the Agent object?","date":"2012-07-16T17:16:33.606Z","type":"message"}
{"nick":"isaacs","message":"ie, with self?","date":"2012-07-16T17:16:35.638Z","type":"message"}
{"nick":"isaacs","message":"createConnection.call(this, ...)","date":"2012-07-16T17:16:43.007Z","type":"message"}
{"nick":"isaacs","message":"or self or whatever it is there","date":"2012-07-16T17:16:49.369Z","type":"message"}
{"nick":"indutny","message":"em...","date":"2012-07-16T17:17:35.640Z","type":"message"}
{"nick":"indutny","message":"yes, we can","date":"2012-07-16T17:17:38.487Z","type":"message"}
{"nick":"isaacs","message":"it seems like, for v0.8, it's not necessary, and for v0.9 the right answer is just to rip all this shit out and re-do it better from the start.","date":"2012-07-16T17:17:40.969Z","type":"message"}
{"nick":"indutny","message":"but we'll need to pass Request's options somehow","date":"2012-07-16T17:18:01.147Z","type":"message"}
{"nick":"isaacs","message":"when you say \"request\" that's the options object from https.request(thisThing, cb), right?","date":"2012-07-16T17:18:22.149Z","type":"message"}
{"nick":"isaacs","message":"or a ClientRequest object?","date":"2012-07-16T17:18:36.436Z","type":"message"}
{"nick":"indutny","message":"Request is ClientRequest's instance","date":"2012-07-16T17:19:02.691Z","type":"message"}
{"nick":"indutny","message":"and it has options","date":"2012-07-16T17:19:05.396Z","type":"message"}
{"nick":"indutny","message":"which came from http[s].request(options, cb)","date":"2012-07-16T17:19:15.066Z","type":"message"}
{"nick":"isaacs","message":"var req = http.request(..);  req.options = {...}?","date":"2012-07-16T17:19:16.942Z","type":"message"}
{"nick":"indutny","message":"well, why not","date":"2012-07-16T17:19:24.081Z","type":"message"}
{"nick":"indutny","message":"but I'm not talking about it","date":"2012-07-16T17:19:27.261Z","type":"message"}
{"nick":"isaacs","message":"ok","date":"2012-07-16T17:19:29.877Z","type":"message"}
{"nick":"isaacs","message":"okc","date":"2012-07-16T17:20:04.335Z","type":"message"}
{"nick":"isaacs","message":"in ClientRequest   this.options = util._extend({}, options);","date":"2012-07-16T17:20:11.626Z","type":"message"}
{"nick":"indutny","message":"is it a question, statement, or command? :)","date":"2012-07-16T17:22:17.481Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: isaacs https://github.com/joyent/node/pull/3717","date":"2012-07-16T17:22:38.761Z","type":"message"}
{"nick":"indutny","message":"I'll add test in a bit","date":"2012-07-16T17:22:49.264Z","type":"message"}
{"nick":"isaacs","message":"i see, and we do       self.onSocket(options.createConnection.call(self, self.socketPath));","date":"2012-07-16T17:22:53.654Z","type":"message"}
{"nick":"isaacs","message":"in ClientRequest","date":"2012-07-16T17:23:06.284Z","type":"message"}
{"nick":"isaacs","message":"so that's why the req is the this of the createConnection method","date":"2012-07-16T17:23:14.259Z","type":"message"}
{"nick":"isaacs","message":"indutny: i think we should just accept that \"this\" is not consistent in the options.createConnection function.","date":"2012-07-16T17:24:16.064Z","type":"message"}
{"nick":"isaacs","message":"i think we can remove the req arg from Agent.prototype.createSocket(), and then it's still api-frozen, but corrects the invalid behavior.","date":"2012-07-16T17:27:30.307Z","type":"message"}
{"nick":"bnoordhuis","action":"is off to dinner","date":"2012-07-16T17:27:53.625Z","type":"action"}
{"nick":"mikeal","date":"2012-07-16T17:29:42.199Z","type":"join"}
{"nick":"indutny","message":"isaacs: and how will I pass https.request(thisOptions) to createConnection?","date":"2012-07-16T17:30:47.733Z","type":"message"}
{"nick":"isaacs","message":"indutny: you're talking about this?","date":"2012-07-16T17:32:02.307Z","type":"message"}
{"nick":"isaacs","message":"function createConnection(/* [port, host, options] */) { var options = util._extend({}, this.options);","date":"2012-07-16T17:32:02.948Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-07-16T17:32:10.205Z","type":"message"}
{"nick":"isaacs","message":"in lib/https.js?","date":"2012-07-16T17:32:14.081Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-07-16T17:32:16.983Z","type":"message"}
{"nick":"indutny","message":"the options it gets from arguments are agent's options","date":"2012-07-16T17:32:37.430Z","type":"message"}
{"nick":"indutny","message":"not the https.request(THISOPTIONS)","date":"2012-07-16T17:32:46.783Z","type":"message"}
{"nick":"indutny","message":"oooh","date":"2012-07-16T17:33:43.911Z","type":"message"}
{"nick":"indutny","message":"forgot that timers patch","date":"2012-07-16T17:33:48.575Z","type":"message"}
{"nick":"isaacs","message":"indutny: self.createConnection(util._extend({}, req.options, this.options))","date":"2012-07-16T17:33:51.058Z","type":"message"}
{"nick":"isaacs","message":"indutny: just pass in one thing all merged up","date":"2012-07-16T17:34:05.140Z","type":"message"}
{"nick":"isaacs","message":"oh, wait, that's assuming you have the req in createSocket...","date":"2012-07-16T17:34:29.565Z","type":"message"}
{"nick":"isaacs","message":"wtf, how does this even work now?","date":"2012-07-16T17:34:34.074Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2012-07-16T17:34:39.420Z","type":"message"}
{"nick":"`3rdEden","date":"2012-07-16T17:35:23.527Z","type":"join"}
{"nick":"isaacs","message":"so, if you do https.request(options, cb) today, what options don't get passed thorugh?","date":"2012-07-16T17:35:44.893Z","type":"message"}
{"nick":"indutny","message":"hahah","date":"2012-07-16T17:35:47.224Z","type":"message"}
{"nick":"indutny","message":"options","date":"2012-07-16T17:35:55.617Z","type":"message"}
{"nick":"indutny","message":"in .request(OPTIONS, cb)","date":"2012-07-16T17:36:00.540Z","type":"message"}
{"nick":"isaacs","message":"indutny: right, but i mean, what specific fields don't end up being used","date":"2012-07-16T17:36:08.846Z","type":"message"}
{"nick":"indutny","message":"tls.js doesn't know about them","date":"2012-07-16T17:36:10.119Z","type":"message"}
{"nick":"indutny","message":"like rejectUnauthorized","date":"2012-07-16T17:36:16.562Z","type":"message"}
{"nick":"isaacs","message":"it looks like everything we pass into that function gets slapped onto the Agent anyway","date":"2012-07-16T17:36:23.139Z","type":"message"}
{"nick":"isaacs","message":"ok","date":"2012-07-16T17:36:31.558Z","type":"message"}
{"nick":"isaacs","message":"so https.request({rejectUnauthorized:true,host:..,port:..}, cb)","date":"2012-07-16T17:36:45.639Z","type":"message"}
{"nick":"isaacs","message":"the rejectUnauthorized will get lost","date":"2012-07-16T17:36:51.724Z","type":"message"}
{"nick":"isaacs","message":"and you don't want to put that on the Agent, since you might have OTHER requests to the same host/port that are not so strict.","date":"2012-07-16T17:37:08.070Z","type":"message"}
{"nick":"isaacs","action":"sign.","date":"2012-07-16T17:37:20.288Z","type":"action"}
{"nick":"isaacs","message":"*sigh","date":"2012-07-16T17:37:23.068Z","type":"message"}
{"nick":"isaacs","message":"ok, if you add a test that fails today because it drops those options that are only on the req, then lgtm.","date":"2012-07-16T17:37:57.618Z","type":"message"}
{"nick":"isaacs","message":"i'm convinced.","date":"2012-07-16T17:38:00.732Z","type":"message"}
{"nick":"felixge","date":"2012-07-16T17:38:31.751Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2012-07-16T17:38:31.996Z","type":"quit"}
{"nick":"felixge","date":"2012-07-16T17:38:32.231Z","type":"join"}
{"nick":"chobi_e","new_nick":"chobi_e_","date":"2012-07-16T17:38:37.194Z","type":"nick"}
{"nick":"indutny","message":"hahaha","date":"2012-07-16T17:39:08.542Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-07-16T17:39:12.640Z","type":"message"}
{"nick":"felixge","reason":"Client Quit","date":"2012-07-16T17:39:21.184Z","type":"quit"}
{"nick":"indutny","message":"will do, but once I'll get home","date":"2012-07-16T17:39:22.809Z","type":"message"}
{"nick":"indutny","message":"bbiab","date":"2012-07-16T17:44:00.065Z","type":"message"}
{"nick":"felixge","date":"2012-07-16T17:54:22.662Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2012-07-16T17:54:22.941Z","type":"quit"}
{"nick":"felixge","date":"2012-07-16T17:54:23.182Z","type":"join"}
{"nick":"philips_","reason":"Excess Flood","date":"2012-07-16T17:57:23.793Z","type":"quit"}
{"nick":"philips_","date":"2012-07-16T17:59:37.648Z","type":"join"}
{"nick":"felixge","reason":"Quit: felixge","date":"2012-07-16T18:02:23.550Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-16T18:02:30.620Z","type":"quit"}
{"nick":"beachdog","reason":"Quit: beachdog","date":"2012-07-16T18:03:36.006Z","type":"quit"}
{"nick":"beachdog","date":"2012-07-16T18:04:36.428Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2012-07-16T18:04:44.351Z","type":"quit"}
{"nick":"beachdog","reason":"Client Quit","date":"2012-07-16T18:05:20.375Z","type":"quit"}
{"nick":"felixge","date":"2012-07-16T18:05:45.688Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2012-07-16T18:05:45.928Z","type":"quit"}
{"nick":"felixge","date":"2012-07-16T18:05:45.928Z","type":"join"}
{"nick":"mikeal","date":"2012-07-16T18:06:47.129Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-16T18:32:56.020Z","type":"quit"}
{"nick":"EhevuTov","date":"2012-07-16T18:46:40.323Z","type":"join"}
{"nick":"mjr__","date":"2012-07-16T18:48:02.522Z","type":"join"}
{"nick":"mikeal","date":"2012-07-16T18:50:07.658Z","type":"join"}
{"nick":"indutny","message":"back","date":"2012-07-16T19:03:00.933Z","type":"message"}
{"nick":"`3rdEden","reason":"Quit: Linkinus - http://linkinus.com","date":"2012-07-16T19:21:46.671Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-16T19:29:57.234Z","type":"quit"}
{"nick":"mikeal","date":"2012-07-16T19:30:53.883Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2012-07-16T19:33:17.535Z","type":"quit"}
{"nick":"mikeal","date":"2012-07-16T19:34:36.278Z","type":"join"}
{"nick":"isaacs","message":"hola","date":"2012-07-16T20:12:53.248Z","type":"message"}
{"nick":"isaacs","message":"indutny: wanna review my nextTick changes?","date":"2012-07-16T20:13:00.231Z","type":"message"}
{"nick":"isaacs","message":"indutny: i posted a comment with the conclusion of our IRC discussion","date":"2012-07-16T20:13:11.179Z","type":"message"}
{"nick":"indutny","message":"isaacs: hola","date":"2012-07-16T20:15:03.202Z","type":"message"}
{"nick":"indutny","message":"isaacs: sure","date":"2012-07-16T20:15:05.673Z","type":"message"}
{"nick":"indutny","message":"isaacs: link?","date":"2012-07-16T20:15:24.338Z","type":"message"}
{"nick":"isaacs","message":"https://github.com/joyent/node/pull/3709","date":"2012-07-16T20:16:04.044Z","type":"message"}
{"nick":"benvie","date":"2012-07-16T20:18:15.492Z","type":"join"}
{"nick":"indutny","message":"isaacs: lgtm","date":"2012-07-16T20:27:52.313Z","type":"message"}
{"nick":"mjr__","reason":"Read error: Connection reset by peer","date":"2012-07-16T20:32:17.968Z","type":"quit"}
{"nick":"mjr__","date":"2012-07-16T20:32:36.208Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: yt?","date":"2012-07-16T20:35:54.538Z","type":"message"}
{"nick":"indutny","message":"why gdb sucks on osx?","date":"2012-07-16T20:37:00.438Z","type":"message"}
{"nick":"tjfontaine","message":"because it's ancient, and they're writing their own replacement","date":"2012-07-16T20:37:23.927Z","type":"message"}
{"nick":"tjfontaine","message":"but what inparticular seems to be the issue?","date":"2012-07-16T20:37:41.820Z","type":"message"}
{"nick":"indutny","message":"The program being debugged was signaled while in a function called from GDB.","date":"2012-07-16T20:38:27.156Z","type":"message"}
{"nick":"indutny","message":"very nice","date":"2012-07-16T20:38:34.045Z","type":"message"}
{"nick":"indutny","message":"running C++ code from gdb is working time to time","date":"2012-07-16T20:38:48.545Z","type":"message"}
{"nick":"indutny","message":"mostly broken, though","date":"2012-07-16T20:38:51.307Z","type":"message"}
{"nick":"tjfontaine","message":"can you be more specific about 'broken'?","date":"2012-07-16T20:39:34.162Z","type":"message"}
{"nick":"indutny","message":"well, if something randomly works","date":"2012-07-16T20:39:52.196Z","type":"message"}
{"nick":"indutny","message":"and at every other time doesn't","date":"2012-07-16T20:40:03.861Z","type":"message"}
{"nick":"indutny","message":"it's broken :)","date":"2012-07-16T20:40:08.121Z","type":"message"}
{"nick":"tjfontaine","message":"tahnks for being equally ambiguous","date":"2012-07-16T20:40:14.349Z","type":"message"}
{"nick":"tjfontaine","message":"do you know if you're compiling with clang++ or g++?","date":"2012-07-16T20:40:38.416Z","type":"message"}
{"nick":"indutny","message":"g++ I think","date":"2012-07-16T20:41:18.237Z","type":"message"}
{"nick":"kohai","message":"g has 4 beers","date":"2012-07-16T20:41:19.123Z","type":"message"}
{"nick":"tjfontaine","message":"you might have slightly more predictable results in gdb if you force the compililation to g++","date":"2012-07-16T20:41:23.698Z","type":"message"}
{"nick":"indutny","message":"let me check","date":"2012-07-16T20:41:33.866Z","type":"message"}
{"nick":"beachdog","date":"2012-07-16T20:41:50.688Z","type":"join"}
{"nick":"indutny","message":" /usr/libexec/gcc/i686-apple-darwin10/4.2.1/cc1plus","date":"2012-07-16T20:43:14.878Z","type":"message"}
{"nick":"indutny","message":"lets see","date":"2012-07-16T20:43:17.304Z","type":"message"}
{"nick":"hz","date":"2012-07-16T20:43:42.546Z","type":"join"}
{"nick":"tjfontaine","message":"well if it's node and gyp we're talking about you might also want to check c++ --version","date":"2012-07-16T20:43:43.504Z","type":"message"}
{"nick":"indutny","message":"yay","date":"2012-07-16T20:44:35.249Z","type":"message"}
{"nick":"indutny","message":"it works","date":"2012-07-16T20:44:36.377Z","type":"message"}
{"nick":"indutny","message":"no, it's not node","date":"2012-07-16T20:44:45.151Z","type":"message"}
{"nick":"tjfontaine","message":"ok","date":"2012-07-16T20:44:49.162Z","type":"message"}
{"nick":"tjfontaine","message":"more specifically is it gyp :P","date":"2012-07-16T20:45:00.691Z","type":"message"}
{"nick":"indutny","message":"hahaha","date":"2012-07-16T20:45:09.453Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-07-16T20:45:10.577Z","type":"message"}
{"nick":"indutny","message":"should I specify GCC_VERSION?","date":"2012-07-16T20:45:17.053Z","type":"message"}
{"nick":"indutny","message":"(it's candor, btw)","date":"2012-07-16T20:45:20.132Z","type":"message"}
{"nick":"tjfontaine","message":"nah, but for debugging under these circumstances you might want to set CC and CXX to gcc and g++ ","date":"2012-07-16T20:46:07.601Z","type":"message"}
{"nick":"tjfontaine","message":"or you might try delving into lldb land","date":"2012-07-16T20:46:16.002Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2012-07-16T20:46:20.598Z","type":"message"}
{"nick":"indutny","message":"GCC_VERSION helped too","date":"2012-07-16T20:46:24.760Z","type":"message"}
{"nick":"indutny","message":"odd","date":"2012-07-16T20:46:25.701Z","type":"message"}
{"nick":"indutny","message":"or is it just randomly working now :)","date":"2012-07-16T20:46:31.980Z","type":"message"}
{"nick":"indutny","message":"LINK=g++ too, I suppose?","date":"2012-07-16T20:46:45.695Z","type":"message"}
{"nick":"tjfontaine","message":"there's only one linker out there for now","date":"2012-07-16T20:47:02.976Z","type":"message"}
{"nick":"indutny","message":"well, it fails to link without it","date":"2012-07-16T20:47:35.023Z","type":"message"}
{"nick":"tjfontaine","message":"then I would say you're doing something else wrong :)","date":"2012-07-16T20:47:45.788Z","type":"message"}
{"nick":"indutny","message":"hahahaha","date":"2012-07-16T20:48:41.738Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-07-16T20:48:42.441Z","type":"message"}
{"nick":"hz","reason":"Disconnected by services","date":"2012-07-16T20:54:27.336Z","type":"quit"}
{"nick":"hz","date":"2012-07-16T20:54:37.588Z","type":"join"}
{"nick":"hz","reason":"Ping timeout: 272 seconds","date":"2012-07-16T21:00:26.563Z","type":"quit"}
{"nick":"hz","date":"2012-07-16T21:06:03.600Z","type":"join"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2012-07-16T21:07:45.825Z","type":"quit"}
{"nick":"beachdog","reason":"Quit: beachdog","date":"2012-07-16T21:09:45.079Z","type":"quit"}
{"nick":"davisp","reason":"Quit: I quit!","date":"2012-07-16T21:10:32.939Z","type":"quit"}
{"nick":"dap","date":"2012-07-16T21:10:41.833Z","type":"join"}
{"nick":"hz","reason":"Ping timeout: 272 seconds","date":"2012-07-16T21:11:12.548Z","type":"quit"}
{"nick":"rendar","date":"2012-07-16T21:14:38.013Z","type":"quit"}
{"nick":"isaacs","message":"indutny: oh, no.","date":"2012-07-16T21:16:16.365Z","type":"message"}
{"nick":"indutny","message":"what's sup?","date":"2012-07-16T21:16:23.954Z","type":"message"}
{"nick":"indutny","message":"err","date":"2012-07-16T21:16:30.416Z","type":"message"}
{"nick":"isaacs","message":"indutny: found some oddness.  it behaves *really* weird with process.on('uncaughtException')","date":"2012-07-16T21:16:30.843Z","type":"message"}
{"nick":"isaacs","message":"indutny: this new nextTick thing","date":"2012-07-16T21:16:35.592Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2012-07-16T21:16:39.487Z","type":"message"}
{"nick":"indutny","message":"what do you mean by *weird*?","date":"2012-07-16T21:16:51.551Z","type":"message"}
{"nick":"isaacs","message":"indutny: well, it doesn't update the tickQueue, so if your module sets up a handler, then throws, it'll loop forever","date":"2012-07-16T21:18:17.307Z","type":"message"}
{"nick":"indutny","message":"ooooh","date":"2012-07-16T21:18:25.770Z","type":"message"}
{"nick":"indutny","message":"this thing","date":"2012-07-16T21:18:29.628Z","type":"message"}
{"nick":"isaacs","message":"got a fix","date":"2012-07-16T21:19:31.899Z","type":"message"}
{"nick":"davisp","date":"2012-07-16T21:20:12.380Z","type":"join"}
{"nick":"paddybyers_","date":"2012-07-16T21:29:05.400Z","type":"join"}
{"nick":"EhevuTov","reason":"Remote host closed the connection","date":"2012-07-16T21:30:45.368Z","type":"quit"}
{"nick":"EhevuTov","date":"2012-07-16T21:32:10.926Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 246 seconds","date":"2012-07-16T21:32:41.418Z","type":"quit"}
{"nick":"paddybyers_","new_nick":"paddybyers","date":"2012-07-16T21:32:41.658Z","type":"nick"}
{"nick":"isaacs","message":"indutny: also, something very bad is busted with this and https now.","date":"2012-07-16T21:39:38.279Z","type":"message"}
{"nick":"isaacs","message":"?(","date":"2012-07-16T21:39:40.003Z","type":"message"}
{"nick":"isaacs","message":":(","date":"2012-07-16T21:39:41.489Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2012-07-16T21:40:52.339Z","type":"message"}
{"nick":"indutny","message":"I think some places really expect process.on('idle')","date":"2012-07-16T21:41:36.019Z","type":"message"}
{"nick":"indutny","message":"rather than nextTick","date":"2012-07-16T21:41:40.208Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2012-07-16T21:41:45.129Z","type":"message"}
{"nick":"felixge","reason":"Quit: felixge","date":"2012-07-16T21:58:46.549Z","type":"quit"}
{"nick":"EhevuTov_","date":"2012-07-16T22:00:40.151Z","type":"join"}
{"nick":"EhevuTov","reason":"Ping timeout: 248 seconds","date":"2012-07-16T22:01:51.771Z","type":"quit"}
{"nick":"AlbireoX_","reason":"Read error: Connection reset by peer","date":"2012-07-16T22:04:20.932Z","type":"quit"}
{"nick":"loladiro","date":"2012-07-16T22:11:16.579Z","type":"join"}
{"nick":"indutny","message":"bad","date":"2012-07-16T22:24:41.825Z","type":"message"}
{"nick":"felixge","date":"2012-07-16T22:27:15.682Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2012-07-16T22:27:15.922Z","type":"quit"}
{"nick":"felixge","date":"2012-07-16T22:27:15.922Z","type":"join"}
{"nick":"AlbireoX_","date":"2012-07-16T22:29:17.635Z","type":"join"}
{"nick":"loladiro","reason":"Read error: Connection reset by peer","date":"2012-07-16T22:35:25.703Z","type":"quit"}
{"nick":"loladiro","date":"2012-07-16T22:35:33.858Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-16T22:38:54.527Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: ih","date":"2012-07-16T22:42:00.478Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: yeh","date":"2012-07-16T22:42:07.745Z","type":"message"}
{"nick":"EhevuTov_","reason":"Quit: Leaving","date":"2012-07-16T22:42:22.562Z","type":"quit"}
{"nick":"EhevuTov","date":"2012-07-16T22:50:22.673Z","type":"join"}
{"nick":"felixge","reason":"Quit: felixge","date":"2012-07-16T22:54:07.980Z","type":"quit"}
{"nick":"beachdog","date":"2012-07-16T22:55:25.528Z","type":"join"}
{"nick":"loladiro","reason":"Ping timeout: 244 seconds","date":"2012-07-16T22:57:34.822Z","type":"quit"}
{"nick":"mjr__","reason":"Quit: mjr__","date":"2012-07-16T23:10:56.781Z","type":"quit"}
{"nick":"mikeal","date":"2012-07-16T23:12:16.073Z","type":"join"}
{"nick":"mitsuhiko","message":"marrying hiredis and libuv is harder than expected","date":"2012-07-16T23:12:57.060Z","type":"message"}
{"nick":"mitsuhiko","message":"does anyone by any chance have a ready made adapter for it?","date":"2012-07-16T23:13:07.873Z","type":"message"}
{"nick":"indutny","message":"mitsuhiko: well, if it's opensource - I can look into it","date":"2012-07-16T23:16:01.834Z","type":"message"}
{"nick":"mitsuhiko","message":"indutny: i can show you what i have","date":"2012-07-16T23:16:14.191Z","type":"message"}
{"nick":"bnoordhuis","message":"didn't pieter do a proof of concept a while ago? or was that with redis?","date":"2012-07-16T23:16:40.057Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-16T23:17:31.071Z","type":"quit"}
{"nick":"mitsuhiko","message":"that's basically what i have: https://gist.github.com/3125730","date":"2012-07-16T23:17:46.790Z","type":"message"}
{"nick":"mitsuhiko","message":"but i guess the uv_prepare_ thing is not what i want. they don't seem to do anything","date":"2012-07-16T23:18:07.718Z","type":"message"}
{"nick":"mitsuhiko","message":"(modelled after this: https://github.com/antirez/hiredis/tree/master/adapters)","date":"2012-07-16T23:18:25.684Z","type":"message"}
{"nick":"mitsuhiko","message":"i'm just curious why my prepare callbacks are never invoked","date":"2012-07-16T23:27:16.086Z","type":"message"}
{"nick":"CIA-108","message":"\u0002node:\u000f \u000303isaacs\u000f \u000307master\u000f * r\u0002b8d8615\u000f \u000310\u000f/ test/simple/test-eio-limit.js \u0002:\u000f test-eio-limit: Remove confusing broken incorrect test - http://git.io/u9wJnA","date":"2012-07-16T23:29:34.436Z","type":"message"}
{"nick":"bnoordhuis","message":"mitsuhiko: redis_libuv_events *e = (redis_libuv_events *)handle->data; <- superfluous cast","date":"2012-07-16T23:29:52.112Z","type":"message"}
{"nick":"bnoordhuis","message":"also, real men use container_of","date":"2012-07-16T23:29:56.329Z","type":"message"}
{"nick":"mitsuhiko","message":"bnoordhuis: fair enough","date":"2012-07-16T23:30:20.767Z","type":"message"}
{"nick":"indutny","message":"hahaha","date":"2012-07-16T23:30:35.416Z","type":"message"}
{"nick":"bnoordhuis","message":"mitsuhiko: does redis give you a fd to poll on?","date":"2012-07-16T23:30:40.249Z","type":"message"}
{"nick":"mitsuhiko","message":"bnoordhuis: redis gives you a weird callback based async interface","date":"2012-07-16T23:31:19.112Z","type":"message"}
{"nick":"erickt","reason":"Read error: Operation timed out","date":"2012-07-16T23:31:49.833Z","type":"quit"}
{"nick":"bnoordhuis","message":"mitsuhiko: yeah... i confess i don't quite understand how redis is supposed to know there's i/o pending","date":"2012-07-16T23:32:10.082Z","type":"message"}
{"nick":"bnoordhuis","message":"mitsuhiko: https://github.com/antirez/hiredis/blob/master/adapters/libev.h","date":"2012-07-16T23:33:12.822Z","type":"message"}
{"nick":"bnoordhuis","message":"particularly https://github.com/antirez/hiredis/blob/master/adapters/libev.h#L112","date":"2012-07-16T23:33:21.408Z","type":"message"}
{"nick":"bnoordhuis","message":"you want uv_poll_* for that","date":"2012-07-16T23:33:37.847Z","type":"message"}
{"nick":"mitsuhiko","message":"i see","date":"2012-07-16T23:34:29.309Z","type":"message"}
{"nick":"mitsuhiko","message":"wtf was i doing there anyways","date":"2012-07-16T23:34:37.021Z","type":"message"}
{"nick":"erickt","date":"2012-07-16T23:38:15.952Z","type":"join"}
{"nick":"mitsuhiko","message":"time for me to stop working on that","date":"2012-07-16T23:38:34.179Z","type":"message"}
{"nick":"mitsuhiko","message":"bnoordhuis: thanks, that works","date":"2012-07-16T23:38:38.130Z","type":"message"}
{"nick":"mitsuhiko","message":"question was stupid :-/","date":"2012-07-16T23:38:43.759Z","type":"message"}
{"nick":"bnoordhuis","message":"cool","date":"2012-07-16T23:38:44.272Z","type":"message"}
{"nick":"mitsuhiko","message":"should probably make a patch for hiredis","date":"2012-07-16T23:39:26.827Z","type":"message"}
{"nick":"c4milo","date":"2012-07-16T23:40:40.301Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2012-07-16T23:43:57.389Z","type":"quit"}
{"nick":"mikeal","date":"2012-07-16T23:46:05.389Z","type":"join"}
{"nick":"chobi_e_","new_nick":"chobi_e","date":"2012-07-16T23:48:14.205Z","type":"nick"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-07-16T23:50:25.549Z","type":"quit"}
{"nick":"bnoordhuis","message":"isaacs: is it conceivable that the domains stack holds on to objects longer than it should?","date":"2012-07-16T23:52:30.390Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: if it catches errors, then yes","date":"2012-07-16T23:52:46.086Z","type":"message"}
{"nick":"bnoordhuis","message":"is that something to worry about?","date":"2012-07-16T23:52:57.344Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: without the change (or the early termination) that stack grows to 1000 objects","date":"2012-07-16T23:53:03.987Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: if you've explicitly added a req and res to it, then that's 1000 requests and responses.","date":"2012-07-16T23:53:15.546Z","type":"message"}
{"nick":"bnoordhuis","message":"right - that'd be bad","date":"2012-07-16T23:53:21.837Z","type":"message"}
{"nick":"isaacs","message":"super bad","date":"2012-07-16T23:53:26.192Z","type":"message"}
{"nick":"isaacs","message":"really, it's just an oversight.  didn't realize that .exit() wouldn't actually get called if it'd thrown","date":"2012-07-16T23:53:59.996Z","type":"message"}
{"nick":"isaacs","message":"but, there's no way to test without exposing the stack, unfortunately","date":"2012-07-16T23:54:31.148Z","type":"message"}
{"nick":"beachdog","reason":"Remote host closed the connection","date":"2012-07-16T23:56:48.564Z","type":"quit"}
{"nick":"beachdog","date":"2012-07-16T23:57:00.411Z","type":"join"}
{"nick":"isaacs","message":"bnoordhuis: also, there are some pretty subtle bugs in the \"move makecallback to js\" commit.  i'm basically just re-doing from the start, with this domain stack thing as well","date":"2012-07-16T23:58:45.285Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2012-07-16T23:59:59.212Z","type":"quit"}
