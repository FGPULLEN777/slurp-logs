{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-05-24T00:00:01.317Z","type":"quit"}
{"nick":"ircretary","date":"2013-05-24T00:00:08.674Z","type":"join"}
{"nick":"mordy_","message":"hrm, another question. do i need to uv_close a uv_async_t?","date":"2013-05-24T00:07:24.981Z","type":"message"}
{"nick":"bnoordhuis","message":"mordy_: yes","date":"2013-05-24T00:08:35.104Z","type":"message"}
{"nick":"bnoordhuis","message":"just make sure the other thread isn't using it anymore","date":"2013-05-24T00:08:54.195Z","type":"message"}
{"nick":"mordy_","message":"bnoordhuis: hrm, just making sure. i can use uv_async if i only want to have a function called once the event loop regains control?","date":"2013-05-24T00:10:55.187Z","type":"message"}
{"nick":"mordy_","message":"i see a lot of words abotu threads in the header","date":"2013-05-24T00:11:05.777Z","type":"message"}
{"nick":"bnoordhuis","message":"mordy_: uv_async is for when you have another thread (or maybe a signal handler) that does whatever","date":"2013-05-24T00:11:48.918Z","type":"message"}
{"nick":"bnoordhuis","message":"and you want the thread to be able to wake up the main thread from uv_run","date":"2013-05-24T00:12:25.084Z","type":"message"}
{"nick":"bnoordhuis","message":"common usage looks something like this: uv_async_init(...); pthread_create(...); uv_run(...)","date":"2013-05-24T00:13:09.752Z","type":"message"}
{"nick":"mordy_","message":"ahhh","date":"2013-05-24T00:13:15.152Z","type":"message"}
{"nick":"mordy_","message":"no, i need something more like ev_feed","date":"2013-05-24T00:13:27.615Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-24T00:13:48.958Z","type":"quit"}
{"nick":"bnoordhuis","message":"you want to artificially make a handle 'ready'?","date":"2013-05-24T00:13:51.854Z","type":"message"}
{"nick":"mordy_","message":"yes. more specifically, i have an error handler which needs to be invoked (this is passed into me as a callback), and i want to only invoke the callback when the user doesn't have control of the event loop","date":"2013-05-24T00:15:37.495Z","type":"message"}
{"nick":"mordy_","message":"i guess i can use prepare/check for this, but then it gets complicated","date":"2013-05-24T00:16:34.890Z","type":"message"}
{"nick":"bnoordhuis","message":"hm, not sure i'm following","date":"2013-05-24T00:17:18.283Z","type":"message"}
{"nick":"bnoordhuis","message":"you have a callback but you only want to call (have it called?) when inside uv_run?","date":"2013-05-24T00:17:52.164Z","type":"message"}
{"nick":"mordy_","message":"yes","date":"2013-05-24T00:18:00.981Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-05-24T00:18:19.511Z","type":"quit"}
{"nick":"bnoordhuis","message":"when exactly should it get called? what's stopping you from calling it whenever?","date":"2013-05-24T00:18:33.108Z","type":"message"}
{"nick":"bnoordhuis","message":"(trying to understand the issue)","date":"2013-05-24T00:18:39.553Z","type":"message"}
{"nick":"mordy_","message":"bnoordhuis: the library i'm using has a distinct guarantee that its own callbacks are only invoked when the user does not have control of its event loop (i.e. it has specific wrappers for starting and stopping the event loop)...","date":"2013-05-24T00:20:57.266Z","type":"message"}
{"nick":"mordy_","message":"and basically it can't invoke its callbacks (which the user defines for it) unless the 'start' function has been called","date":"2013-05-24T00:21:22.977Z","type":"message"}
{"nick":"kazupon","date":"2013-05-24T00:21:48.265Z","type":"join"}
{"nick":"mordy_","message":"now if i call that library's callback, it might invoke the user's callback, etc. etc.","date":"2013-05-24T00:21:50.132Z","type":"message"}
{"nick":"mordy_","message":"and then nasty things can happen, for example the library freeing something from within the callback while it is still in scope in the user code","date":"2013-05-24T00:22:31.414Z","type":"message"}
{"nick":"mordy_","message":"i'm dealing with like four layers here, so i can elaborate more if needed","date":"2013-05-24T00:22:49.476Z","type":"message"}
{"nick":"bnoordhuis","message":"i... think i follow :)","date":"2013-05-24T00:23:02.571Z","type":"message"}
{"nick":"bnoordhuis","message":"you basically want to run on a fresh stack each time?","date":"2013-05-24T00:23:21.821Z","type":"message"}
{"nick":"mordy_","message":"exactly","date":"2013-05-24T00:23:26.343Z","type":"message"}
{"nick":"bnoordhuis","message":"you probably want an idle handle","date":"2013-05-24T00:23:35.738Z","type":"message"}
{"nick":"bnoordhuis","message":"that defers the action to the next tick of the event loop","date":"2013-05-24T00:23:48.715Z","type":"message"}
{"nick":"bnoordhuis","message":"with the guarantee that the loop won't block in epoll_wait/kevent/etc.","date":"2013-05-24T00:24:01.565Z","type":"message"}
{"nick":"bnoordhuis","message":"idle handle == uv_idle_t in case there's any confusion","date":"2013-05-24T00:24:57.365Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-05-24T00:26:05.125Z","type":"quit"}
{"nick":"mordy_","message":"ok, let's tryt his","date":"2013-05-24T00:26:19.064Z","type":"message"}
{"nick":"mordy_","message":"this","date":"2013-05-24T00:26:20.214Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: hey, this bug 5504","date":"2013-05-24T00:28:47.669Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: where hte EOF busy-loops","date":"2013-05-24T00:28:52.513Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: were you able to reproduce this on linux?  i can't seem to.","date":"2013-05-24T00:29:00.469Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: using the test case posted in the comments.","date":"2013-05-24T00:29:06.745Z","type":"message"}
{"nick":"st_luke","date":"2013-05-24T00:30:33.262Z","type":"join"}
{"nick":"bnoordhuis","message":"isaacs: no, it never triggers for me","date":"2013-05-24T00:32:00.465Z","type":"message"}
{"nick":"bnoordhuis","message":"but the strace log the guy posted looks legitimate","date":"2013-05-24T00:32:10.980Z","type":"message"}
{"nick":"tjfontaine","message":"do we know which kernel he's on? the default centos version?","date":"2013-05-24T00:33:28.453Z","type":"message"}
{"nick":"bnoordhuis","message":"2.6.18 iirc","date":"2013-05-24T00:33:42.384Z","type":"message"}
{"nick":"bnoordhuis","message":"but let me check that","date":"2013-05-24T00:33:49.492Z","type":"message"}
{"nick":"bnoordhuis","message":"CentOS 6.3, kernel version 2.6.32-279.14.1.el6.x86_64","date":"2013-05-24T00:34:45.047Z","type":"message"}
{"nick":"AvianFlu","date":"2013-05-24T00:34:55.440Z","type":"join"}
{"nick":"bnoordhuis","message":"that's like modern, by centos standards","date":"2013-05-24T00:35:01.992Z","type":"message"}
{"nick":"tjfontaine","message":"right","date":"2013-05-24T00:35:06.717Z","type":"message"}
{"nick":"isaacs","message":"Linux 7527bd77-ab3e-474b-ace7-eed6053931e7 3.1.10joyent-ubuntu-10-opt #1 SMP Fri Jan 20 09:55:31 PST 2012 x86_64 GNU/Linux","date":"2013-05-24T00:35:13.170Z","type":"message"}
{"nick":"bnoordhuis","message":"btw, https://github.com/joyent/node/issues/5108#issuecomment-16960802","date":"2013-05-24T00:36:12.067Z","type":"message"}
{"nick":"bnoordhuis","message":"the fact that he hits the assertion means node doesn't close the handle","date":"2013-05-24T00:36:28.692Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-05-24T00:36:38.709Z","type":"quit"}
{"nick":"timoxley","date":"2013-05-24T00:37:54.178Z","type":"join"}
{"nick":"isaacs","message":"bnoordhuis: if this is in fact a bug in Node's js layer, and not in libuv, then why the OS/kernel specificity?","date":"2013-05-24T00:41:36.100Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: that seems odd to me","date":"2013-05-24T00:41:45.077Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: i don't know, maybe it's just coincidence","date":"2013-05-24T00:42:48.418Z","type":"message"}
{"nick":"bnoordhuis","message":"at least one guy reported the same issue but on debian","date":"2013-05-24T00:43:01.015Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-05-24T00:43:04.857Z","type":"message"}
{"nick":"isaacs","message":"but i can't reproduce it on debian","date":"2013-05-24T00:43:08.768Z","type":"message"}
{"nick":"isaacs","message":"or on smartos, or osx ","date":"2013-05-24T00:43:13.122Z","type":"message"}
{"nick":"tjfontaine","message":"which could just as easily had an ancient kernel","date":"2013-05-24T00:43:14.742Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-05-24T00:43:17.549Z","type":"message"}
{"nick":"isaacs","message":"it sounds like a \"old linux kernel\" bug","date":"2013-05-24T00:43:26.877Z","type":"message"}
{"nick":"isaacs","message":"not necessarily a specific distro or whatever.","date":"2013-05-24T00:43:37.590Z","type":"message"}
{"nick":"bnoordhuis","message":"could be","date":"2013-05-24T00:43:56.425Z","type":"message"}
{"nick":"bnoordhuis","message":"hm, debian 6... that's also 2.6.32 iirc","date":"2013-05-24T00:44:08.725Z","type":"message"}
{"nick":"bnoordhuis","message":"still, could be coincidence - and there's that assertion that got hit","date":"2013-05-24T00:45:29.541Z","type":"message"}
{"nick":"bnoordhuis","message":"even if there is a kernel bug, there's still a bug in node as well :)","date":"2013-05-24T00:45:51.577Z","type":"message"}
{"nick":"tjfontaine","message":"well, it's certainly somethign easier to trip on older kernels","date":"2013-05-24T00:46:10.871Z","type":"message"}
{"nick":"tjfontaine","message":"I'd also be curious to know if they are tripping on bare metal or under virtualization","date":"2013-05-24T00:46:33.084Z","type":"message"}
{"nick":"bnoordhuis","message":"both, according to #5108. there are mentions of both bare metal and openvz","date":"2013-05-24T00:46:59.429Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 276 seconds","date":"2013-05-24T00:47:22.094Z","type":"quit"}
{"nick":"tjfontaine","message":"well, openvz is close enough to bare metal for this case, certainly no xen/kvm/vmware in the mix","date":"2013-05-24T00:47:26.285Z","type":"message"}
{"nick":"bnoordhuis","message":"openvz is not hardware virtualization however","date":"2013-05-24T00:47:29.251Z","type":"message"}
{"nick":"bnoordhuis","message":"it's more like lxc or solaris zones","date":"2013-05-24T00:48:02.550Z","type":"message"}
{"nick":"tjfontaine","message":"right so it's possible that such a rare bug is even harder to hit in [para]virtualization","date":"2013-05-24T00:48:50.333Z","type":"message"}
{"nick":"bnoordhuis","message":"that's quite possible, yes","date":"2013-05-24T00:49:45.366Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-05-24T00:50:14.619Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-05-24T00:51:15.744Z","type":"join"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-05-24T00:58:48.888Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-05-24T00:59:31.875Z","type":"quit"}
{"nick":"st_luke","date":"2013-05-24T01:04:02.240Z","type":"join"}
{"nick":"bnoordhuis","reason":"Read error: Operation timed out","date":"2013-05-24T01:05:36.219Z","type":"quit"}
{"nick":"isaacs","message":"Well, this is pretty weird...","date":"2013-05-24T01:05:45.739Z","type":"message"}
{"nick":"isaacs","message":"if the server writes a really big buffer, then a node client sends it an ECONNRESET","date":"2013-05-24T01:06:04.734Z","type":"message"}
{"nick":"isaacs","message":"even if ou don't destroy from the client","date":"2013-05-24T01:06:12.254Z","type":"message"}
{"nick":"indexzero","date":"2013-05-24T01:13:56.746Z","type":"join"}
{"nick":"isaacs","message":"ircretary: tell bnoordhuis Check this out: https://github.com/joyent/node/issues/5542","date":"2013-05-24T01:15:19.879Z","type":"message"}
{"nick":"ircretary","message":"isaacs: I'll be sure to tell bnoordhuis","date":"2013-05-24T01:15:20.215Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-05-24T01:16:07.944Z","type":"quit"}
{"nick":"skebcio","reason":"Read error: Operation timed out","date":"2013-05-24T01:21:52.593Z","type":"quit"}
{"nick":"kazupon","date":"2013-05-24T01:22:09.333Z","type":"join"}
{"nick":"TooTallNate","reason":"Read error: Connection reset by peer","date":"2013-05-24T01:25:28.661Z","type":"quit"}
{"nick":"dap1","reason":"Quit: Leaving.","date":"2013-05-24T01:25:34.382Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-05-24T01:26:16.098Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-05-24T01:27:06.969Z","type":"quit"}
{"nick":"skebcio","date":"2013-05-24T01:31:11.890Z","type":"join"}
{"nick":"indexzero","date":"2013-05-24T01:32:54.269Z","type":"join"}
{"nick":"stagas","reason":"Remote host closed the connection","date":"2013-05-24T01:39:55.029Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-05-24T01:47:04.362Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-05-24T01:54:00.472Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-05-24T01:59:30.899Z","type":"nick"}
{"nick":"piscisaureus_","reason":"Ping timeout: 264 seconds","date":"2013-05-24T01:59:55.342Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-05-24T02:09:52.889Z","type":"quit"}
{"nick":"skebcio_","date":"2013-05-24T02:12:55.384Z","type":"join"}
{"nick":"skebcio","reason":"Read error: Connection reset by peer","date":"2013-05-24T02:12:59.355Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-05-24T02:13:56.853Z","type":"join"}
{"nick":"indexzero","date":"2013-05-24T02:16:44.683Z","type":"join"}
{"nick":"dannycoates","new_nick":"dannycoates|afk","date":"2013-05-24T02:17:34.530Z","type":"nick"}
{"nick":"skebcio_","reason":"Ping timeout: 240 seconds","date":"2013-05-24T02:18:28.531Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2013-05-24T02:18:47.824Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-05-24T02:20:49.430Z","type":"nick"}
{"nick":"skebcio","date":"2013-05-24T02:21:44.678Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-05-24T02:21:58.964Z","type":"quit"}
{"nick":"indexzero","date":"2013-05-24T02:22:48.541Z","type":"join"}
{"nick":"dannycoates|afk","reason":"Remote host closed the connection","date":"2013-05-24T02:23:16.864Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-05-24T02:25:02.394Z","type":"nick"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-05-24T02:26:01.892Z","type":"quit"}
{"nick":"indexzero","reason":"Client Quit","date":"2013-05-24T02:26:59.095Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-05-24T02:32:41.762Z","type":"quit"}
{"nick":"amartens","date":"2013-05-24T02:33:38.977Z","type":"join"}
{"nick":"TooTallNate","date":"2013-05-24T02:33:55.104Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-05-24T02:35:21.703Z","type":"nick"}
{"nick":"amartens","reason":"Ping timeout: 260 seconds","date":"2013-05-24T02:38:23.818Z","type":"quit"}
{"nick":"inolen","date":"2013-05-24T02:50:07.656Z","type":"join"}
{"nick":"loladiro","date":"2013-05-24T02:52:26.130Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-05-24T02:52:51.426Z","type":"quit"}
{"nick":"kazupon","date":"2013-05-24T02:55:45.639Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-05-24T03:00:55.426Z","type":"quit"}
{"nick":"wmil","date":"2013-05-24T03:14:56.113Z","type":"join"}
{"nick":"loladiro","date":"2013-05-24T03:17:25.365Z","type":"join"}
{"nick":"AvianFlu","date":"2013-05-24T03:27:13.458Z","type":"join"}
{"nick":"st_luke","date":"2013-05-24T03:28:31.248Z","type":"join"}
{"nick":"amartens","date":"2013-05-24T03:33:59.265Z","type":"join"}
{"nick":"amartens","reason":"Ping timeout: 248 seconds","date":"2013-05-24T03:38:09.105Z","type":"quit"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-05-24T03:38:24.865Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-05-24T03:43:21.360Z","type":"quit"}
{"nick":"wmil","reason":"Remote host closed the connection","date":"2013-05-24T03:45:06.313Z","type":"quit"}
{"nick":"brson","date":"2013-05-24T03:47:11.656Z","type":"join"}
{"nick":"kazupon","date":"2013-05-24T03:54:58.278Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-05-24T03:55:17.575Z","type":"quit"}
{"nick":"indexzero","date":"2013-05-24T03:56:06.519Z","type":"join"}
{"nick":"wmil","date":"2013-05-24T04:11:04.283Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-05-24T04:18:55.447Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-05-24T04:20:27.839Z","type":"quit"}
{"nick":"wmil","reason":"Remote host closed the connection","date":"2013-05-24T04:22:15.350Z","type":"quit"}
{"nick":"timoxley","date":"2013-05-24T04:23:06.120Z","type":"join"}
{"nick":"indexzero","date":"2013-05-24T04:24:06.747Z","type":"join"}
{"nick":"timoxley","reason":"Read error: Connection reset by peer","date":"2013-05-24T04:24:58.423Z","type":"quit"}
{"nick":"amartens","date":"2013-05-24T04:29:51.305Z","type":"join"}
{"nick":"normanm","date":"2013-05-24T04:32:47.288Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-05-24T04:34:33.010Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 248 seconds","date":"2013-05-24T04:36:53.620Z","type":"quit"}
{"nick":"timoxley","date":"2013-05-24T04:38:24.107Z","type":"join"}
{"nick":"brson","date":"2013-05-24T04:38:52.104Z","type":"join"}
{"nick":"benoitc","reason":"Ping timeout: 260 seconds","date":"2013-05-24T04:45:19.933Z","type":"quit"}
{"nick":"timoxley","reason":"Read error: Connection reset by peer","date":"2013-05-24T04:49:55.690Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-05-24T04:50:33.434Z","type":"quit"}
{"nick":"timoxley","date":"2013-05-24T04:52:55.284Z","type":"join"}
{"nick":"wmil","date":"2013-05-24T04:58:30.603Z","type":"join"}
{"nick":"wmil","reason":"Remote host closed the connection","date":"2013-05-24T05:00:48.042Z","type":"quit"}
{"nick":"timoxley","reason":"Read error: Connection reset by peer","date":"2013-05-24T05:03:20.069Z","type":"quit"}
{"nick":"timoxley","date":"2013-05-24T05:06:37.123Z","type":"join"}
{"nick":"indexzero","date":"2013-05-24T05:09:20.771Z","type":"join"}
{"nick":"timoxley","reason":"Read error: Connection reset by peer","date":"2013-05-24T05:11:23.047Z","type":"quit"}
{"nick":"indexzero","reason":"Client Quit","date":"2013-05-24T05:12:17.587Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-05-24T05:16:52.578Z","type":"join"}
{"nick":"timoxley","date":"2013-05-24T05:21:17.532Z","type":"join"}
{"nick":"st_luke","date":"2013-05-24T05:27:21.245Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-05-24T05:27:38.586Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-05-24T05:37:27.491Z","type":"join"}
{"nick":"TooTallNate","date":"2013-05-24T05:47:18.467Z","type":"join"}
{"nick":"TooTallNate","reason":"Client Quit","date":"2013-05-24T05:48:35.729Z","type":"quit"}
{"nick":"bajtos","date":"2013-05-24T05:53:28.232Z","type":"join"}
{"nick":"mikeal","date":"2013-05-24T05:57:35.264Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-05-24T05:57:35.714Z","type":"quit"}
{"nick":"mikeal","date":"2013-05-24T06:00:10.743Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-05-24T06:07:10.361Z","type":"quit"}
{"nick":"rendar","date":"2013-05-24T06:34:26.711Z","type":"join"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-05-24T06:59:11.127Z","type":"quit"}
{"nick":"`3rdEden","date":"2013-05-24T06:59:11.272Z","type":"join"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-05-24T07:26:31.243Z","type":"quit"}
{"nick":"juliangruber","reason":"Read error: Operation timed out","date":"2013-05-24T07:26:44.501Z","type":"quit"}
{"nick":"juliangruber","date":"2013-05-24T07:28:28.421Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-05-24T07:37:09.979Z","type":"quit"}
{"nick":"loladiro","date":"2013-05-24T07:39:54.843Z","type":"join"}
{"nick":"paddybyers","date":"2013-05-24T07:40:29.124Z","type":"join"}
{"nick":"txdv","reason":"Ping timeout: 264 seconds","date":"2013-05-24T07:56:19.368Z","type":"quit"}
{"nick":"benoitc","date":"2013-05-24T08:01:38.593Z","type":"join"}
{"nick":"stagas","date":"2013-05-24T08:17:00.764Z","type":"join"}
{"nick":"dominictarr","date":"2013-05-24T08:29:53.097Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-05-24T08:47:05.181Z","type":"join"}
{"nick":"hz","date":"2013-05-24T08:47:20.296Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-24T08:57:36.280Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-05-24T09:04:38.728Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-05-24T09:19:21.075Z","type":"quit"}
{"nick":"kazupon","date":"2013-05-24T09:22:48.740Z","type":"join"}
{"nick":"jez0990_","new_nick":"jez0990","date":"2013-05-24T09:24:58.805Z","type":"nick"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-05-24T09:26:38.698Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-05-24T09:31:29.768Z","type":"join"}
{"nick":"txdv","date":"2013-05-24T09:32:22.146Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-05-24T10:00:13.261Z","type":"quit"}
{"nick":"kazupon","date":"2013-05-24T10:21:39.850Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-05-24T10:29:43.259Z","type":"quit"}
{"nick":"kazupon","date":"2013-05-24T10:40:13.764Z","type":"join"}
{"nick":"dominictarr","date":"2013-05-24T10:41:04.519Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-05-24T10:42:21.563Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-24T10:49:15.990Z","type":"quit"}
{"nick":"dominictarr","date":"2013-05-24T10:49:48.837Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-24T11:21:52.124Z","type":"quit"}
{"nick":"dominictarr","date":"2013-05-24T11:22:06.629Z","type":"join"}
{"nick":"dominictarr","reason":"Client Quit","date":"2013-05-24T11:22:06.768Z","type":"quit"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-05-24T11:31:05.209Z","type":"quit"}
{"nick":"timoxley","date":"2013-05-24T11:40:38.177Z","type":"join"}
{"nick":"bajtos","date":"2013-05-24T12:00:50.313Z","type":"join"}
{"nick":"saghul","message":"hi! I noticed the error handling in case a stream is not bound is a bit inconsistent: on write EBADF is returned, but read_start or shutdown assert, would a PR failing gracefully be ok?","date":"2013-05-24T12:15:07.854Z","type":"message"}
{"nick":"saghul","message":"bnoordhuis piscisaureus_ ^","date":"2013-05-24T12:15:15.895Z","type":"message"}
{"nick":"saghul","message":"(I only checked unix)","date":"2013-05-24T12:15:31.193Z","type":"message"}
{"nick":"bnoordhuis","message":"saghul: not bound? you mean not connected?","date":"2013-05-24T12:20:46.501Z","type":"message"}
{"nick":"saghul","message":"bnoordhuis it doesn't have a fd yet, so not connected, not listening, not anything","date":"2013-05-24T12:21:17.725Z","type":"message"}
{"nick":"bnoordhuis","message":"i lean more towards making uv_write() assert in that case","date":"2013-05-24T12:22:20.974Z","type":"message"}
{"nick":"bnoordhuis","message":"because it's obviously an application bug","date":"2013-05-24T12:22:34.867Z","type":"message"}
{"nick":"saghul","message":"I know, but this means the application need to keep some state in order to give an error to the user, aborting is a bit abrupt","date":"2013-05-24T12:23:56.374Z","type":"message"}
{"nick":"saghul","message":"in pyuv I can convert errors to exceptions, but asserts kind of kill me","date":"2013-05-24T12:24:19.976Z","type":"message"}
{"nick":"bnoordhuis","message":"well, that's the idea :)","date":"2013-05-24T12:24:54.824Z","type":"message"}
{"nick":"saghul","message":"well, and what happens in release mode?","date":"2013-05-24T12:26:33.883Z","type":"message"}
{"nick":"saghul","message":"let me change the question :-) what is the policy regarding asserts in libuv? what errors should assert and which should return -1 and set the error in the loop?","date":"2013-05-24T12:28:20.874Z","type":"message"}
{"nick":"bnoordhuis","message":"saghul: runtime errors should (and do) set an error","date":"2013-05-24T12:28:44.528Z","type":"message"}
{"nick":"bnoordhuis","message":"application bugs should, in general, assert","date":"2013-05-24T12:28:55.844Z","type":"message"}
{"nick":"saghul","message":"I see. In python aborting is not usually nice, but I guess it have to live with that","date":"2013-05-24T12:31:27.441Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-05-24T12:32:45.464Z","type":"quit"}
{"nick":"bnoordhuis","message":"saghul: you can track the state and intercept the call to uv_write() in your bindings","date":"2013-05-24T12:33:03.608Z","type":"message"}
{"nick":"bnoordhuis","message":"but i'm not telling you anything you didn't already know, i bet :)","date":"2013-05-24T12:33:19.878Z","type":"message"}
{"nick":"saghul","message":"bnoordhuis :-)","date":"2013-05-24T12:33:27.906Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I would say in the particular case, ENOTCONN","date":"2013-05-24T12:33:38.705Z","type":"message"}
{"nick":"piscisaureus_","message":"it's a bit of *shrug* though","date":"2013-05-24T12:33:51.542Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: The problem with asserting in these cases is that you can't really offer low-level bindings for libuv if it is that zealous","date":"2013-05-24T12:34:55.953Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: because the bindings","date":"2013-05-24T12:35:15.080Z","type":"message"}
{"nick":"piscisaureus_","message":"er","date":"2013-05-24T12:35:19.012Z","type":"message"}
{"nick":"piscisaureus_","message":"because \"user\" the bindings might do stupid things but the assert error doesn","date":"2013-05-24T12:35:44.481Z","type":"message"}
{"nick":"piscisaureus_","message":"'t make sense to him/her","date":"2013-05-24T12:35:51.194Z","type":"message"}
{"nick":"txdv","message":"https://code.google.com/p/v8/source/browse/branches/3.0/src/api.cc#1294","date":"2013-05-24T12:35:58.570Z","type":"message"}
{"nick":"saghul","message":"reading the Doom 3 code review post eh ;-)","date":"2013-05-24T12:36:40.511Z","type":"message"}
{"nick":"saghul","message":"piscisaureus_ exactly!","date":"2013-05-24T12:36:44.489Z","type":"message"}
{"nick":"txdv","message":"yeah","date":"2013-05-24T12:36:59.539Z","type":"message"}
{"nick":"txdv","message":"he bashed v8 code so I found it funny","date":"2013-05-24T12:37:25.294Z","type":"message"}
{"nick":"hz","reason":"Ping timeout: 264 seconds","date":"2013-05-24T12:43:43.367Z","type":"quit"}
{"nick":"loladiro_","date":"2013-05-24T12:46:51.668Z","type":"join"}
{"nick":"loladiro","reason":"Ping timeout: 256 seconds","date":"2013-05-24T12:48:02.480Z","type":"quit"}
{"nick":"loladiro","date":"2013-05-24T12:50:15.173Z","type":"join"}
{"nick":"loladiro_","reason":"Ping timeout: 248 seconds","date":"2013-05-24T12:51:17.606Z","type":"quit"}
{"nick":"dominictarr","date":"2013-05-24T12:55:14.153Z","type":"join"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-05-24T13:05:20.384Z","type":"quit"}
{"nick":"loladiro","reason":"Read error: Connection reset by peer","date":"2013-05-24T13:08:16.021Z","type":"quit"}
{"nick":"loladiro","date":"2013-05-24T13:09:06.617Z","type":"join"}
{"nick":"hz","date":"2013-05-24T13:09:18.884Z","type":"join"}
{"nick":"hz","reason":"Changing host","date":"2013-05-24T13:09:19.028Z","type":"quit"}
{"nick":"hz","date":"2013-05-24T13:09:19.028Z","type":"join"}
{"nick":"c4milo","date":"2013-05-24T13:11:10.937Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-05-24T13:14:01.634Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-05-24T13:16:09.268Z","type":"join"}
{"nick":"pachet","date":"2013-05-24T13:30:16.753Z","type":"join"}
{"nick":"pachet","reason":"Changing host","date":"2013-05-24T13:30:16.753Z","type":"quit"}
{"nick":"pachet","date":"2013-05-24T13:30:16.753Z","type":"join"}
{"nick":"loladiro_","date":"2013-05-24T13:32:04.855Z","type":"join"}
{"nick":"loladiro","reason":"Ping timeout: 248 seconds","date":"2013-05-24T13:33:25.608Z","type":"quit"}
{"nick":"loladiro_","new_nick":"loladiro","date":"2013-05-24T13:33:25.752Z","type":"nick"}
{"nick":"hz_","date":"2013-05-24T13:40:47.671Z","type":"join"}
{"nick":"hz_","reason":"Changing host","date":"2013-05-24T13:40:47.809Z","type":"quit"}
{"nick":"hz_","date":"2013-05-24T13:40:47.809Z","type":"join"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-05-24T13:40:47.809Z","type":"quit"}
{"nick":"hz_","new_nick":"hz","date":"2013-05-24T13:40:52.609Z","type":"nick"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-24T13:41:01.039Z","type":"quit"}
{"nick":"kazupon","date":"2013-05-24T13:43:12.608Z","type":"join"}
{"nick":"bnoordhuis","message":"txdv: what am i looking at? or rather, what's the context?","date":"2013-05-24T13:45:26.210Z","type":"message"}
{"nick":"txdv","message":"that c++ can make your eyes bleed","date":"2013-05-24T13:45:42.837Z","type":"message"}
{"nick":"txdv","message":"that is what the author of the doom3 review said about this code","date":"2013-05-24T13:45:52.285Z","type":"message"}
{"nick":"bnoordhuis","message":"guess he's never taken a look at just about any boost code","date":"2013-05-24T13:46:30.568Z","type":"message"}
{"nick":"txdv","message":"What is the goal of boost?","date":"2013-05-24T13:47:01.256Z","type":"message"}
{"nick":"txdv","message":"creating an abstraction of everything known to humanity?","date":"2013-05-24T13:47:22.317Z","type":"message"}
{"nick":"bnoordhuis","message":"purportedly it's to make life easier for c++ programmers","date":"2013-05-24T13:48:08.748Z","type":"message"}
{"nick":"pachet","message":"the goal is to boost","date":"2013-05-24T13:48:09.144Z","type":"message"}
{"nick":"pachet","message":"all the things","date":"2013-05-24T13:48:10.658Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-05-24T13:48:49.520Z","type":"quit"}
{"nick":"loladiro_","date":"2013-05-24T13:52:12.166Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-05-24T13:53:12.507Z","type":"quit"}
{"nick":"loladiro","reason":"Ping timeout: 256 seconds","date":"2013-05-24T13:55:28.495Z","type":"quit"}
{"nick":"loladiro_","new_nick":"loladiro","date":"2013-05-24T13:55:28.858Z","type":"nick"}
{"nick":"kevinswiber","date":"2013-05-24T14:02:37.431Z","type":"join"}
{"nick":"saghul","message":"LoL http://www.cdecl.org/?utm_source=buffer&utm_medium=twitter&utm_campaign=Buffer&utm_content=buffera00a8","date":"2013-05-24T14:05:47.313Z","type":"message"}
{"nick":"loladiro_","date":"2013-05-24T14:10:40.532Z","type":"join"}
{"nick":"loladiro","reason":"Ping timeout: 276 seconds","date":"2013-05-24T14:12:04.245Z","type":"quit"}
{"nick":"loladiro_","reason":"Ping timeout: 252 seconds","date":"2013-05-24T14:17:25.521Z","type":"quit"}
{"nick":"txdv","message":"Can I cancel a connection request?","date":"2013-05-24T14:20:46.565Z","type":"message"}
{"nick":"saghul","message":"txdv IIRC no, only getaddrinfo, fs and work request are cancelable atm","date":"2013-05-24T14:29:17.147Z","type":"message"}
{"nick":"saghul","message":"*requests","date":"2013-05-24T14:29:23.398Z","type":"message"}
{"nick":"txdv","message":"so no timeout for connection?","date":"2013-05-24T14:29:50.573Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-05-24T14:31:25.237Z","type":"quit"}
{"nick":"loladiro","date":"2013-05-24T14:32:11.954Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-05-24T14:36:34.525Z","type":"quit"}
{"nick":"loladiro","date":"2013-05-24T14:36:53.409Z","type":"join"}
{"nick":"saghul","message":"txdv since you can't really reuse a handle once you have failed to connect you can uv_close() it on timeout and create a new one","date":"2013-05-24T14:39:11.100Z","type":"message"}
{"nick":"saghul","message":"txdv: https://groups.google.com/d/msg/libuv/MdU5m_xk3qo/xT6D3TFswWkJ","date":"2013-05-24T14:40:00.124Z","type":"message"}
{"nick":"txdv","message":"saghul: i just figured out that I can simulate blocking connect calls and stuff","date":"2013-05-24T14:43:23.156Z","type":"message"}
{"nick":"saghul","message":"by await-ing the connect callback?","date":"2013-05-24T14:44:03.795Z","type":"message"}
{"nick":"txdv","message":"running the event loop with run_once until the callback is called","date":"2013-05-24T14:44:42.998Z","type":"message"}
{"nick":"saghul","message":"aha","date":"2013-05-24T14:45:09.071Z","type":"message"}
{"nick":"loladiro_","date":"2013-05-24T14:45:47.913Z","type":"join"}
{"nick":"txdv","message":"now i am like implementing all blocking C# interfaces","date":"2013-05-24T14:46:12.686Z","type":"message"}
{"nick":"loladiro","reason":"Ping timeout: 276 seconds","date":"2013-05-24T14:46:31.222Z","type":"quit"}
{"nick":"loladiro_","new_nick":"loladiro","date":"2013-05-24T14:46:31.364Z","type":"nick"}
{"nick":"dap","date":"2013-05-24T14:50:45.950Z","type":"join"}
{"nick":"isaacs","message":"good morning","date":"2013-05-24T14:52:07.240Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-05-24T14:56:12.304Z","type":"join"}
{"nick":"saghul","message":"txdv that's what I did here: https://github.com/saghul/evergreen but using coroutines to 'wait' for callbacks","date":"2013-05-24T14:58:45.753Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-05-24T15:02:13.549Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-05-24T15:06:49.751Z","type":"nick"}
{"nick":"groundwater","date":"2013-05-24T15:11:27.635Z","type":"join"}
{"nick":"isaacs","message":"bnoordhuis: ping","date":"2013-05-24T15:14:03.625Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: so, this \"large write reset\" thing is really weird","date":"2013-05-24T15:14:17.360Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: if the other side is going away withotu closing the connection... why?","date":"2013-05-24T15:14:24.632Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i mean, the other side is node.  i didn't call socket.destroy. so... wtf?","date":"2013-05-24T15:14:35.224Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: pong","date":"2013-05-24T15:15:19.107Z","type":"message"}
{"nick":"bnoordhuis","message":"there might be something wrong with the test","date":"2013-05-24T15:15:32.266Z","type":"message"}
{"nick":"bnoordhuis","message":"it sometimes hangs, at other times it fails with that ECONNRESET error","date":"2013-05-24T15:15:45.037Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: hanging is correct behavior.","date":"2013-05-24T15:16:29.839Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: because i've taken out the bits where i was actually doing asserts and such","date":"2013-05-24T15:16:40.548Z","type":"message"}
{"nick":"isaacs","message":"and closing the server","date":"2013-05-24T15:16:43.566Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i get ECONNRESET every time","date":"2013-05-24T15:16:59.392Z","type":"message"}
{"nick":"isaacs","message":"but i'm definitely NOT ever explicitly trying to close the socket from the client side.","date":"2013-05-24T15:17:09.964Z","type":"message"}
{"nick":"bnoordhuis","message":"on what os are you testing it?","date":"2013-05-24T15:17:10.790Z","type":"message"}
{"nick":"isaacs","message":"os x","date":"2013-05-24T15:17:12.994Z","type":"message"}
{"nick":"isaacs","message":"but same behavior on ubuntu","date":"2013-05-24T15:17:17.853Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-24T15:17:28.345Z","type":"quit"}
{"nick":"bnoordhuis","message":"try running it through `strace -f`","date":"2013-05-24T15:17:31.924Z","type":"message"}
{"nick":"bnoordhuis","message":"that makes it hang for me about once every 3, 4 runs","date":"2013-05-24T15:17:46.595Z","type":"message"}
{"nick":"isaacs","message":"huh","date":"2013-05-24T15:18:13.995Z","type":"message"}
{"nick":"bnoordhuis","message":"back in a bit, pizza's ready :)","date":"2013-05-24T15:18:40.354Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: so, question remains... how come the socket is getting closed?","date":"2013-05-24T15:18:43.622Z","type":"message"}
{"nick":"isaacs","message":"ah, enjoy :)","date":"2013-05-24T15:18:46.635Z","type":"message"}
{"nick":"txdv","message":"saghul: yeah, I did it with coroutines too","date":"2013-05-24T15:19:38.736Z","type":"message"}
{"nick":"txdv","message":"but","date":"2013-05-24T15:19:48.553Z","type":"message"}
{"nick":"txdv","message":"i mean you can just keep spinning the event loop while waiting for an event","date":"2013-05-24T15:19:59.260Z","type":"message"}
{"nick":"txdv","message":"it will handle all the other stuff events derived from the event loop","date":"2013-05-24T15:20:11.623Z","type":"message"}
{"nick":"txdv","message":"but will basically block the real thread until it is done","date":"2013-05-24T15:20:23.364Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: same behavior on smartos","date":"2013-05-24T15:21:32.088Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: and strace-f has no change for me.","date":"2013-05-24T15:21:37.390Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: I think this is a bug in the client, dropping the connection when it should not","date":"2013-05-24T15:21:51.156Z","type":"message"}
{"nick":"mordy_","message":"another sanity check here. none of uv's callbacks (i.e. for read, write, etc.) will ever be invoked until after control is returned to uv_run, right?","date":"2013-05-24T15:22:26.092Z","type":"message"}
{"nick":"piscisaureus_","message":"mordy_: yes","date":"2013-05-24T15:22:51.678Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-05-24T15:25:56.854Z","type":"nick"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-05-24T15:28:56.326Z","type":"quit"}
{"nick":"isaacs","message":"this is so bizarre..","date":"2013-05-24T15:31:57.897Z","type":"message"}
{"nick":"timoxley","date":"2013-05-24T15:33:07.857Z","type":"join"}
{"nick":"isaacs","message":"ohhhh.... the client socket isn't keeping the event loop open.","date":"2013-05-24T15:34:28.960Z","type":"message"}
{"nick":"isaacs","message":"well that's strange.","date":"2013-05-24T15:35:08.293Z","type":"message"}
{"nick":"isaacs","message":"BUT! the client *definitely* is in process._getActiveHandles","date":"2013-05-24T15:36:18.909Z","type":"message"}
{"nick":"travis-ci","date":"2013-05-24T15:36:20.118Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] wwwouter/node#6 (master - b09fccc : wwwouter): The build is still failing.","date":"2013-05-24T15:36:20.265Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/wwwouter/node/compare/c1ed72d5d8c1...b09fccc0cdef","date":"2013-05-24T15:36:20.265Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/wwwouter/node/builds/7466024","date":"2013-05-24T15:36:20.265Z","type":"message"}
{"nick":"travis-ci","date":"2013-05-24T15:36:20.265Z","type":"part"}
{"nick":"isaacs","message":"bnoordhuis, piscisaureus_: I don't see how this can not be a bug.","date":"2013-05-24T15:36:29.308Z","type":"message"}
{"nick":"isaacs","message":"i'll write a sipmler test for it.","date":"2013-05-24T15:36:37.477Z","type":"message"}
{"nick":"stagas","date":"2013-05-24T15:37:02.636Z","type":"join"}
{"nick":"kazupon","date":"2013-05-24T15:38:12.626Z","type":"join"}
{"nick":"txdv","reason":"Ping timeout: 252 seconds","date":"2013-05-24T15:48:26.228Z","type":"quit"}
{"nick":"isaacs","message":"https://gist.github.com/isaacs/5644453","date":"2013-05-24T15:49:58.851Z","type":"message"}
{"nick":"mikeal","date":"2013-05-24T15:54:08.421Z","type":"join"}
{"nick":"isaacs","message":"ugh, who's travis-ci is that?","date":"2013-05-24T15:56:35.320Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u00029c7078c\u0002 : Remove .travis.yml file. - http://git.io/Pmzl8g","date":"2013-05-24T15:58:17.089Z","type":"message"}
{"nick":"`3rdEden","reason":"Remote host closed the connection","date":"2013-05-24T15:58:35.011Z","type":"quit"}
{"nick":"isaacs","message":"problem solved!","date":"2013-05-24T16:00:11.526Z","type":"message"}
{"nick":"isaacs","message":"16:00 -ChanServ(ChanServ@services.)- AKICK list for #libuv:","date":"2013-05-24T16:00:11.672Z","type":"message"}
{"nick":"isaacs","message":"16:00 -ChanServ(ChanServ@services.)- 1: travis-ci!*@* (too noisy) [setter: isaacs, modified: 12 seconds]","date":"2013-05-24T16:00:11.673Z","type":"message"}
{"nick":"isaacs","message":"16:00 -ChanServ(ChanServ@services.)- Total of 1 entry in #libuv's AKICK list.","date":"2013-05-24T16:00:13.761Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-05-24T16:00:19.390Z","type":"quit"}
{"nick":"isaacs","message":"<3 travis, but man... there's just no reason for that.","date":"2013-05-24T16:00:24.916Z","type":"message"}
{"nick":"isaacs","message":"node will never ever pass tests on travis","date":"2013-05-24T16:00:31.041Z","type":"message"}
{"nick":"isaacs","message":"and we have MI6 and Jankins already.","date":"2013-05-24T16:00:39.437Z","type":"message"}
{"nick":"leonvv","date":"2013-05-24T16:03:02.252Z","type":"join"}
{"nick":"mordy_","message":"is it safe to call uv_read_stop twice on the same handle?","date":"2013-05-24T16:04:59.879Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-05-24T16:05:35.564Z","type":"nick"}
{"nick":"mordy_","message":"also, i'm assuming uv_poll just uses select() on windows, right?","date":"2013-05-24T16:06:50.647Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #234 \u00037UNSTABLE\u000f smartos-x64 (5/600) smartos-ia32 (2/600) http://jenkins.nodejs.org/job/nodejs-master/234/","date":"2013-05-24T16:08:51.147Z","type":"message"}
{"nick":"dap","date":"2013-05-24T16:09:04.493Z","type":"join"}
{"nick":"TooTallNate","date":"2013-05-24T16:09:18.713Z","type":"join"}
{"nick":"piscisaureus_","message":"mordy_: yes twice is safe","date":"2013-05-24T16:12:04.885Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-05-24T16:12:38.976Z","type":"nick"}
{"nick":"piscisaureus_","message":"mordy_: re select - sometimes, but most of the times it uses something more scalable","date":"2013-05-24T16:12:39.387Z","type":"message"}
{"nick":"qard","date":"2013-05-24T16:13:14.033Z","type":"join"}
{"nick":"isaacs","message":"piscisaureus_: so, just to sanity check... if a socket isn't reading, and isn't writing, but it's connected, it should hold the event loop open, right?","date":"2013-05-24T16:14:43.797Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: no","date":"2013-05-24T16:14:55.823Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: or does there have to be an active read or write?","date":"2013-05-24T16:14:57.807Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well yes. but sockets usually have an active read or write","date":"2013-05-24T16:15:13.974Z","type":"message"}
{"nick":"isaacs","message":"even if it's in _getActiveHandles?","date":"2013-05-24T16:15:17.504Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: well... what if it doesn't :)","date":"2013-05-24T16:15:27.809Z","type":"message"}
{"nick":"isaacs","message":"socket.pause();  setTimeout(function() { socket.resume() }).unref();","date":"2013-05-24T16:16:00.978Z","type":"message"}
{"nick":"isaacs","message":"^ closes node","date":"2013-05-24T16:16:04.159Z","type":"message"}
{"nick":"isaacs","message":"very surprising","date":"2013-05-24T16:16:20.230Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well so the libuv will exit if there is never any callback that could be happening.","date":"2013-05-24T16:16:21.358Z","type":"message"}
{"nick":"leonvv","message":"Does anyone have a libuv tutorial, which is not outdated ?","date":"2013-05-24T16:16:34.949Z","type":"message"}
{"nick":"mordy_","message":"hrm, another question (so many questions) - pending read/write callbacks on a uv_close(stream) will get invoked before the close callback, right?","date":"2013-05-24T16:16:45.488Z","type":"message"}
{"nick":"isaacs","message":"i've gotta run.  i'll be back in a few hours, and then nodeup.","date":"2013-05-24T16:16:45.649Z","type":"message"}
{"nick":"bnoordhuis","message":"leonvv: most of what's i uvbook is still accurate","date":"2013-05-24T16:16:50.914Z","type":"message"}
{"nick":"bnoordhuis","message":"*in","date":"2013-05-24T16:16:53.150Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: this seems strange to me, though","date":"2013-05-24T16:16:57.153Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: ^","date":"2013-05-24T16:16:58.809Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: not surprising. If you pause a socket it will generate no more events.","date":"2013-05-24T16:17:00.440Z","type":"message"}
{"nick":"bnoordhuis","message":"mordy_: yes, with status=-1 and error=UV_CANCELLED","date":"2013-05-24T16:17:19.550Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: only the timer will generate events but you've unref'ed it","date":"2013-05-24T16:17:21.553Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: right, but i might want to pass it to some other thing","date":"2013-05-24T16:17:26.358Z","type":"message"}
{"nick":"piscisaureus_","message":"then why do you unref the timer for god's sake?","date":"2013-05-24T16:17:39.211Z","type":"message"}
{"nick":"bnoordhuis","message":"haha","date":"2013-05-24T16:17:42.546Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: haha","date":"2013-05-24T16:17:46.250Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: it's a minified example of what i was doing","date":"2013-05-24T16:17:59.259Z","type":"message"}
{"nick":"isaacs","message":"i was reading only part of the sent message, and then seeing the abrupt close.","date":"2013-05-24T16:18:10.701Z","type":"message"}
{"nick":"isaacs","message":"and the server gets an ECONNRESET","date":"2013-05-24T16:18:31.321Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well then you found a very tedious way of doing it wrong and reduced it to an easy case :-p","date":"2013-05-24T16:18:35.410Z","type":"message"}
{"nick":"isaacs","action":"late","date":"2013-05-24T16:18:53.163Z","type":"action"}
{"nick":"piscisaureus_","message":"isaacs: full code?","date":"2013-05-24T16:18:59.730Z","type":"message"}
{"nick":"isaacs","message":"we can discuss in a few hours, or another time, i guess.","date":"2013-05-24T16:18:59.913Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: gist me","date":"2013-05-24T16:19:05.666Z","type":"message"}
{"nick":"isaacs","message":"pisc #5542","date":"2013-05-24T16:19:11.784Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: #5542 issue","date":"2013-05-24T16:19:18.298Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs thanks","date":"2013-05-24T16:19:20.552Z","type":"message"}
{"nick":"piscisaureus_","message":"go@","date":"2013-05-24T16:19:21.503Z","type":"message"}
{"nick":"piscisaureus_","message":"run!!","date":"2013-05-24T16:19:23.141Z","type":"message"}
{"nick":"isaacs","action":"&","date":"2013-05-24T16:19:24.746Z","type":"action"}
{"nick":"LOUDBOT","message":"DROPPING THE KIDS OFF AT THE POOL","date":"2013-05-24T16:19:25.219Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-05-24T16:19:32.478Z","type":"nick"}
{"nick":"leonvv","message":"bnoordhuis: thanks !","date":"2013-05-24T16:20:42.399Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-05-24T16:21:14.971Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #43 \u00037UNSTABLE\u000f windows-x64 (15/600) windows-ia32 (16/600) http://jenkins.nodejs.org/job/nodejs-master-windows/43/","date":"2013-05-24T16:25:00.225Z","type":"message"}
{"nick":"mordy_","message":"hrm. the read callback doesn't seem to ever get invoked once uv_close is called","date":"2013-05-24T16:32:16.877Z","type":"message"}
{"nick":"bnoordhuis","message":"mordy_: oh sorry, i may have misread your question","date":"2013-05-24T16:32:51.105Z","type":"message"}
{"nick":"dannycoates|afk","date":"2013-05-24T16:33:11.768Z","type":"join"}
{"nick":"bnoordhuis","message":"mordy_: pending requests have their callbacks invoked, e.g. connect/write/shutdown","date":"2013-05-24T16:33:18.628Z","type":"message"}
{"nick":"bnoordhuis","message":"but reading from a socket is not request based","date":"2013-05-24T16:33:40.351Z","type":"message"}
{"nick":"mordy_","message":"but handle-level requests do not.. ahh","date":"2013-05-24T16:33:44.741Z","type":"message"}
{"nick":"trevnorris","message":"you guys know how to do the equivalant of charCodeAt() in cc?","date":"2013-05-24T16:33:53.359Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: on what?","date":"2013-05-24T16:34:01.843Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: a string. basically right now fill pulls the char code then passes that to slowbuffer fill","date":"2013-05-24T16:36:34.777Z","type":"message"}
{"nick":"trevnorris","message":"so \\u0567 fills the buffer as 0x67","date":"2013-05-24T16:37:12.097Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: c string or Handle<String>?","date":"2013-05-24T16:37:43.071Z","type":"message"}
{"nick":"piscisaureus_","message":"ircretary: tell isaacs It Is Not A Bug","date":"2013-05-24T16:37:46.500Z","type":"message"}
{"nick":"ircretary","message":"piscisaureus_: I'll be sure to tell isaacs","date":"2013-05-24T16:37:46.718Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: but the new implementation on my buffer branch does a","date":"2013-05-24T16:37:53.996Z","type":"message"}
{"nick":"trevnorris","message":"(Handle<String>)","date":"2013-05-24T16:37:57.817Z","type":"message"}
{"nick":"trevnorris","message":"String::AsciiValue at(args[0])","date":"2013-05-24T16:38:07.992Z","type":"message"}
{"nick":"trevnorris","message":"int value = (at*)[0];","date":"2013-05-24T16:38:19.590Z","type":"message"}
{"nick":"trevnorris","message":"which would fill the buffer with 0xd5 instead","date":"2013-05-24T16:38:31.730Z","type":"message"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-05-24T16:38:54.763Z","type":"quit"}
{"nick":"bnoordhuis","message":"that's because you're using AsciiValue","date":"2013-05-24T16:38:58.441Z","type":"message"}
{"nick":"mordy_","message":"is there a simple way to determine if i have a read request active? or do i have to track this in my own code","date":"2013-05-24T16:39:22.863Z","type":"message"}
{"nick":"bnoordhuis","message":"the bytes in the string will all be <=127","date":"2013-05-24T16:39:26.901Z","type":"message"}
{"nick":"bnoordhuis","message":"there's Utf8Value but then you'll need to decode the utf-8 sequence","date":"2013-05-24T16:39:54.461Z","type":"message"}
{"nick":"kazupon","date":"2013-05-24T16:40:04.908Z","type":"join"}
{"nick":"bnoordhuis","message":"mordy_: well, if you call uv_read_start(), you're reading","date":"2013-05-24T16:40:22.706Z","type":"message"}
{"nick":"bnoordhuis","message":"in that respect you need to keep track of it yourself","date":"2013-05-24T16:40:36.563Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: right now fill doesn't check if the value's within 127, so in this case it'll do memset(<data>, 1383, <length>)","date":"2013-05-24T16:41:29.967Z","type":"message"}
{"nick":"leonvv","reason":"Remote host closed the connection","date":"2013-05-24T16:41:48.801Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-24T16:42:07.121Z","type":"quit"}
{"nick":"bnoordhuis","message":"trevnorris: what i mean is that String::AsciiValue(s) converts s to a string that's all ascii","date":"2013-05-24T16:43:10.848Z","type":"message"}
{"nick":"bnoordhuis","message":"i.e. if it contains non-ascii sequences, those will be brutally trimmed","date":"2013-05-24T16:43:26.363Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-05-24T16:43:43.104Z","type":"nick"}
{"nick":"tjfontaine","message":"without remorse","date":"2013-05-24T16:44:32.518Z","type":"message"}
{"nick":"trevnorris","message":"String::Utf8Value(s) returns the same value in this case (0xd5)","date":"2013-05-24T16:44:40.648Z","type":"message"}
{"nick":"trevnorris","message":"hm. ok, right now writing a value over 127 isn't defined in the docs","date":"2013-05-24T16:45:28.446Z","type":"message"}
{"nick":"trevnorris","message":"so is there a bigger solution to this problem?","date":"2013-05-24T16:45:57.412Z","type":"message"}
{"nick":"bnoordhuis","message":"bigger or better?","date":"2013-05-24T16:46:19.589Z","type":"message"}
{"nick":"trevnorris","message":"better","date":"2013-05-24T16:46:41.620Z","type":"message"}
{"nick":"tjfontaine","message":"what about a bigger *and* better solution?","date":"2013-05-24T16:46:52.593Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-05-24T16:47:23.216Z","type":"quit"}
{"nick":"bnoordhuis","message":"bigger isn't that hard, it's always possible to write more code to solve the same problem","date":"2013-05-24T16:47:32.239Z","type":"message"}
{"nick":"bnoordhuis","message":"ask any java enterprise programmer","date":"2013-05-24T16:47:39.844Z","type":"message"}
{"nick":"trevnorris","message":"lol","date":"2013-05-24T16:47:44.612Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, let's recap: you have a Handle<String> and you want the char code of the first character. right?","date":"2013-05-24T16:48:34.474Z","type":"message"}
{"nick":"tjfontaine","message":"FactoryReactorAbstractFinal","date":"2013-05-24T16:48:35.933Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: well, guess that leads me back to if we care. if the user types in buf.fill('է') it can't write in that value anyways.","date":"2013-05-24T16:49:57.945Z","type":"message"}
{"nick":"trevnorris","message":"so should we properly define overflow behavior?","date":"2013-05-24T16:50:09.018Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-05-24T16:50:56.016Z","type":"quit"}
{"nick":"Raynos","reason":"Ping timeout: 246 seconds","date":"2013-05-24T16:51:04.776Z","type":"quit"}
{"nick":"bnoordhuis","message":"trevnorris: just wrap around i guess?","date":"2013-05-24T16:52:18.069Z","type":"message"}
{"nick":"bnoordhuis","message":"> var b = Buffer(4); b.fill('է'); b.toString()","date":"2013-05-24T16:52:37.385Z","type":"message"}
{"nick":"bnoordhuis","message":"'gggg'","date":"2013-05-24T16:52:37.898Z","type":"message"}
{"nick":"bnoordhuis","message":"kind of odd how that works...","date":"2013-05-24T16:52:46.312Z","type":"message"}
{"nick":"trevnorris","message":"it's because they're passing a value larger than 127 to memset","date":"2013-05-24T16:52:59.409Z","type":"message"}
{"nick":"trevnorris","message":"so I guess memset just wraps it around","date":"2013-05-24T16:53:14.674Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, but 1383 & 255 == 103","date":"2013-05-24T16:53:33.695Z","type":"message"}
{"nick":"trevnorris","message":"well. that's right.","date":"2013-05-24T16:54:31.864Z","type":"message"}
{"nick":"trevnorris","message":"'g'.charCodeAt(0) == 103","date":"2013-05-24T16:54:37.906Z","type":"message"}
{"nick":"piscisaureus_","message":"why does it even take a character? :-/","date":"2013-05-24T16:55:17.225Z","type":"message"}
{"nick":"piscisaureus_","message":"what if you pass in 2?","date":"2013-05-24T16:55:26.295Z","type":"message"}
{"nick":"trevnorris","message":"i dunno. all the docs say is \"Fills the buffer with the specified value\"","date":"2013-05-24T16:56:21.709Z","type":"message"}
{"nick":"bnoordhuis","message":"it considers just the first character","date":"2013-05-24T16:56:32.635Z","type":"message"}
{"nick":"trevnorris","message":"that leaves a lot of room for interpretation","date":"2013-05-24T16:56:33.542Z","type":"message"}
{"nick":"bnoordhuis","message":"it calls Int32Value() internally","date":"2013-05-24T16:56:47.808Z","type":"message"}
{"nick":"bnoordhuis","message":"which is weird as well, why Int32Value() rather than Uint32Value()","date":"2013-05-24T16:57:03.503Z","type":"message"}
{"nick":"bnoordhuis","message":"maybe that code predates Uint32Value()","date":"2013-05-24T16:57:11.533Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: i think it's because the memset docs say the second argument is an \"int\"","date":"2013-05-24T16:59:13.239Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: trevnorris:","date":"2013-05-24T17:00:26.116Z","type":"message"}
{"nick":"piscisaureus_","message":"> Buffer.prototype.fill = function(s) { var src = new Buffer('' + s); for (var i = 0; i < this.length; i++) this[i] = src[i % src.length]; }","date":"2013-05-24T17:00:27.602Z","type":"message"}
{"nick":"piscisaureus_","message":"[Function]","date":"2013-05-24T17:00:27.757Z","type":"message"}
{"nick":"piscisaureus_","message":"> var buf = new Buffer(100);","date":"2013-05-24T17:00:27.757Z","type":"message"}
{"nick":"piscisaureus_","message":"undefined","date":"2013-05-24T17:00:27.757Z","type":"message"}
{"nick":"piscisaureus_","message":"> buf.fill('bla')","date":"2013-05-24T17:00:27.757Z","type":"message"}
{"nick":"piscisaureus_","message":"undefined","date":"2013-05-24T17:00:27.757Z","type":"message"}
{"nick":"piscisaureus_","message":"> buf.toString()","date":"2013-05-24T17:00:27.757Z","type":"message"}
{"nick":"piscisaureus_","message":"'blablablablablablablablablablablablablablablablablablablablablablablablablablablablablablablablablab'","date":"2013-05-24T17:00:28.611Z","type":"message"}
{"nick":"piscisaureus_","message":">","date":"2013-05-24T17:00:28.766Z","type":"message"}
{"nick":"piscisaureus_","message":"I think that still matches what the docs say","date":"2013-05-24T17:01:08.283Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus_: you'll have to throw in a case that calls memset if a number is passed, at the least","date":"2013-05-24T17:01:49.388Z","type":"message"}
{"nick":"trevnorris","message":"or filling a large buffer will take too long","date":"2013-05-24T17:01:58.991Z","type":"message"}
{"nick":"amartens","date":"2013-05-24T17:02:10.720Z","type":"join"}
{"nick":"piscisaureus_","message":"haha","date":"2013-05-24T17:02:13.297Z","type":"message"}
{"nick":"piscisaureus_","message":"I was also a bit kidding","date":"2013-05-24T17:02:17.055Z","type":"message"}
{"nick":"trevnorris","message":"ah. heh.","date":"2013-05-24T17:02:22.747Z","type":"message"}
{"nick":"piscisaureus_","message":"but sure","date":"2013-05-24T17:02:25.425Z","type":"message"}
{"nick":"trevnorris","message":"sorry, only got 4 hours of sleep last night.","date":"2013-05-24T17:02:31.119Z","type":"message"}
{"nick":"TooTallNate","date":"2013-05-24T17:03:21.020Z","type":"join"}
{"nick":"trevnorris","message":"ok. so seems there are a couple solutions. since this is way more philosophical than I thought it'd be, just going to leave it alone for now","date":"2013-05-24T17:03:49.231Z","type":"message"}
{"nick":"AvianFlu","date":"2013-05-24T17:18:55.494Z","type":"join"}
{"nick":"trevnorris","message":"piscisaureus_: though I sorta like that idea. is there a way to rapidly duplicate a char* to some other memory?","date":"2013-05-24T17:28:35.402Z","type":"message"}
{"nick":"mikeal","date":"2013-05-24T17:28:54.685Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: memcpy? or am i misunderstanding you?","date":"2013-05-24T17:29:39.300Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: sorta. you'd have to for loop the memcpy to get a char* into another char* multiple times though, right?","date":"2013-05-24T17:30:44.503Z","type":"message"}
{"nick":"bnoordhuis","message":"err... yes. i'm admittedly not sure what you're getting at","date":"2013-05-24T17:32:00.727Z","type":"message"}
{"nick":"trevnorris","message":"how piscisaureus_ did the buf.fill('bla')","date":"2013-05-24T17:32:40.689Z","type":"message"}
{"nick":"trevnorris","message":"buf.toString() = 'blabla...'","date":"2013-05-24T17:32:49.053Z","type":"message"}
{"nick":"trevnorris","message":"couldn't we just take String::Utf8Value and duplicate the memory across the buffer?","date":"2013-05-24T17:33:15.047Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-05-24T17:33:16.789Z","type":"quit"}
{"nick":"bnoordhuis","message":"oh, like that","date":"2013-05-24T17:33:29.117Z","type":"message"}
{"nick":"leonvv","date":"2013-05-24T17:33:32.412Z","type":"join"}
{"nick":"bnoordhuis","message":"yeah, you'd have to memcpy it repeatedly","date":"2013-05-24T17:33:36.854Z","type":"message"}
{"nick":"trevnorris","message":"ok","date":"2013-05-24T17:34:09.382Z","type":"message"}
{"nick":"trevnorris","message":"cool. i'm going to write up a quick something. see how this goes :)","date":"2013-05-24T17:34:23.842Z","type":"message"}
{"nick":"piscisaureus_","message":"trevnorris: I think it's possible to make the js code quite performant though","date":"2013-05-24T17:34:41.933Z","type":"message"}
{"nick":"piscisaureus_","message":"maybe with some small tweaks","date":"2013-05-24T17:34:56.808Z","type":"message"}
{"nick":"trevnorris","message":"for sure.","date":"2013-05-24T17:37:27.536Z","type":"message"}
{"nick":"pachet","reason":"Read error: Operation timed out","date":"2013-05-24T17:40:06.127Z","type":"quit"}
{"nick":"inolen","date":"2013-05-24T17:41:37.893Z","type":"join"}
{"nick":"brson","date":"2013-05-24T17:51:21.983Z","type":"join"}
{"nick":"`3rdEden","date":"2013-05-24T18:01:18.339Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: this is what I was thinking of: https://github.com/trevnorris/node/commit/029f64c","date":"2013-05-24T18:03:43.038Z","type":"message"}
{"nick":"mjr__","date":"2013-05-24T18:08:31.172Z","type":"join"}
{"nick":"leonvv","reason":"Remote host closed the connection","date":"2013-05-24T18:09:46.416Z","type":"quit"}
{"nick":"mjr__","reason":"Client Quit","date":"2013-05-24T18:10:27.387Z","type":"quit"}
{"nick":"mjr__","date":"2013-05-24T18:10:49.532Z","type":"join"}
{"nick":"piscisaureus_","message":"« The solution was: (Node leaving the cleartext socket open on error) »","date":"2013-05-24T18:18:09.687Z","type":"message"}
{"nick":"piscisaureus_","message":"tls.on('clientError', function(e,p) {","date":"2013-05-24T18:18:09.844Z","type":"message"}
{"nick":"piscisaureus_","message":"  p.cleartext.socket.destroy();","date":"2013-05-24T18:18:09.845Z","type":"message"}
{"nick":"piscisaureus_","message":"  p.destroy();","date":"2013-05-24T18:18:09.845Z","type":"message"}
{"nick":"piscisaureus_","message":"});","date":"2013-05-24T18:18:09.845Z","type":"message"}
{"nick":"mjr__","message":"the oft-misunderstood \"clientError\" event.","date":"2013-05-24T18:21:44.058Z","type":"message"}
{"nick":"Raynos","date":"2013-05-24T18:24:07.857Z","type":"join"}
{"nick":"loladiro_","date":"2013-05-24T18:26:32.785Z","type":"join"}
{"nick":"dap","date":"2013-05-24T18:27:29.527Z","type":"join"}
{"nick":"bnoordhuis","message":"how can tar not be installed on this fedora system?!","date":"2013-05-24T18:28:18.893Z","type":"message"}
{"nick":"loladiro","reason":"Ping timeout: 260 seconds","date":"2013-05-24T18:29:27.955Z","type":"quit"}
{"nick":"loladiro_","new_nick":"loladiro","date":"2013-05-24T18:29:28.112Z","type":"nick"}
{"nick":"piscisaureus_","message":"mjr__: you got me there. You have any idea why that is as it is?","date":"2013-05-24T18:31:50.519Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: do you? ^","date":"2013-05-24T18:35:00.484Z","type":"message"}
{"nick":"pachet","date":"2013-05-24T18:38:01.517Z","type":"join"}
{"nick":"mjr__","message":"I don't know why you need it here. I just know that lots of people get confused by the clientError event.","date":"2013-05-24T18:40:27.794Z","type":"message"}
{"nick":"tjfontaine","message":"I would suppose that because the client may choose to renegotiate without closing the connection","date":"2013-05-24T18:41:11.881Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: if ref'ed socket handles don't keep the event loop open, then what's the point of socket.unref()?","date":"2013-05-24T18:47:45.942Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: not keeping the loop alive over a socket that is active/connected (such as the connection to a logging backend. Or a built-in repl that people can telnet)","date":"2013-05-24T18:48:54.231Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: imagine a loop with just one socket.","date":"2013-05-24T18:49:06.681Z","type":"message"}
{"nick":"isaacs","message":"you mean, so that we can shut down the process even if there IS a read happening?","date":"2013-05-24T18:49:21.939Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: what is?","date":"2013-05-24T18:49:22.832Z","type":"message"}
{"nick":"piscisaureus_","message":"the socket is bound. It's not connecting nor listening nor reading not writing nor ending","date":"2013-05-24T18:49:34.275Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-05-24T18:49:53.277Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: what will happen in that loop","date":"2013-05-24T18:49:54.004Z","type":"message"}
{"nick":"isaacs","message":"so in that case, the loop has no work to do","date":"2013-05-24T18:49:58.909Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: btw - so yes that's the use case of unref","date":"2013-05-24T18:50:05.565Z","type":"message"}
{"nick":"isaacs","message":"ok","date":"2013-05-24T18:50:09.245Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: yes, no work to do. Will it ever have work todo - no. It's just a hang","date":"2013-05-24T18:50:21.306Z","type":"message"}
{"nick":"isaacs","message":"hm.  seems like we could have done http keepalive a long time ago, though :)","date":"2013-05-24T18:50:24.719Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: this was the issue we had in 0.6","date":"2013-05-24T18:50:34.105Z","type":"message"}
{"nick":"piscisaureus_","message":"so we did all this hairy ref() / unref() in the binding layer","date":"2013-05-24T18:50:45.113Z","type":"message"}
{"nick":"bnoordhuis","message":"you speak of evil things, isaacs","date":"2013-05-24T18:50:45.834Z","type":"message"}
{"nick":"tjfontaine","message":"we could have keepalive in 0.8, but timers don't have their unref exposed until 0.10","date":"2013-05-24T18:51:16.237Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i am Neutral. I speak of evil as often as good, and regard both as arbitrary distinctions from reality, which is neither.","date":"2013-05-24T18:51:19.126Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: so in 0.8 we had refcount refactor, after which the loop will always exit if there is no more work ongoing and nothing going to happen","date":"2013-05-24T18:51:25.983Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: oic, right, the timer.","date":"2013-05-24T18:51:33.228Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: and unref() just takes some handles out if the equation","date":"2013-05-24T18:51:39.684Z","type":"message"}
{"nick":"isaacs","message":"ok","date":"2013-05-24T18:51:45.061Z","type":"message"}
{"nick":"isaacs","message":"so, this is an edge case that probably no one will hit anyway.  just got excited thinking it might be a clue to #5504","date":"2013-05-24T18:52:15.660Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: so that's why I say - unref'ing a timer is probably a bad idea.","date":"2013-05-24T18:52:23.818Z","type":"message"}
{"nick":"piscisaureus_","message":"because it might exit node. If refcount semantics were as you propose, node would lock up.","date":"2013-05-24T18:52:41.705Z","type":"message"}
{"nick":"normanm","reason":"Quit: Computer has gone to sleep.","date":"2013-05-24T18:52:46.290Z","type":"quit"}
{"nick":"piscisaureus_","message":"neither of them is really worse","date":"2013-05-24T18:52:47.764Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: well, it's important if you want to make sure that something else happens, withotu impacting whether it sticks around ","date":"2013-05-24T18:52:51.202Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: or if you want to firebomb the process if something doesn't happen within a second, withtout staying open for a second, etc.","date":"2013-05-24T18:53:11.792Z","type":"message"}
{"nick":"isaacs","message":"testing for graceful closes, etc.","date":"2013-05-24T18:53:23.793Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: well that's what you got here.","date":"2013-05-24T18:54:12.981Z","type":"message"}
{"nick":"isaacs","message":"yeah, i get it now","date":"2013-05-24T18:54:21.363Z","type":"message"}
{"nick":"isaacs","message":"i agree, this is correct.","date":"2013-05-24T18:54:32.987Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: \u0003\u0003\u000301you paused a socket for half a second without staying open for half a second","date":"2013-05-24T18:54:37.688Z","type":"message"}
{"nick":"isaacs","message":"so... why is it busylooping on Linux when you write something big, and then destroy on the client, rather than raising an ECONNRESET or EPIPE in the server?","date":"2013-05-24T18:55:07.547Z","type":"message"}
{"nick":"isaacs","message":"that's the real question.","date":"2013-05-24T18:55:10.726Z","type":"message"}
{"nick":"isaacs","message":"second: why are sockets not getting properly cleaned up when end() is called","date":"2013-05-24T18:55:30.290Z","type":"message"}
{"nick":"isaacs","message":"both appear to be easily reproduced on every system that i don't have access to  :)","date":"2013-05-24T18:56:12.142Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: isaacs: so could it be that tls.clientError doesn't close the socket under some circumstances","date":"2013-05-24T18:56:16.420Z","type":"message"}
{"nick":"bnoordhuis","message":"that's what it looks like, yes","date":"2013-05-24T18:56:28.288Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: but both issues are reported for non-tls connections.","date":"2013-05-24T18:56:42.894Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: one for http, the other for tcp","date":"2013-05-24T18:56:48.575Z","type":"message"}
{"nick":"piscisaureus_","message":"is that supposed to be the case? I TLS api is a dark mystery to me.","date":"2013-05-24T18:57:10.096Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: if it is, it's a separate thing","date":"2013-05-24T18:57:22.590Z","type":"message"}
{"nick":"bnoordhuis","message":"i had someone add an assert to stream.c that checks if the read_cb stops the handle and it didn't","date":"2013-05-24T18:57:22.758Z","type":"message"}
{"nick":"bnoordhuis","message":"but that was with http, like isaacs said","date":"2013-05-24T18:57:37.357Z","type":"message"}
{"nick":"isaacs","message":"yeah, tls is not a factor here.","date":"2013-05-24T18:57:45.931Z","type":"message"}
{"nick":"isaacs","message":"i'm sure it has its own other bugs.","date":"2013-05-24T18:57:49.680Z","type":"message"}
{"nick":"bnoordhuis","message":"um","date":"2013-05-24T19:02:19.413Z","type":"message"}
{"nick":"bnoordhuis","message":"i just pushed two libuv changes that work fine on linux","date":"2013-05-24T19:02:31.976Z","type":"message"}
{"nick":"bnoordhuis","message":"but they make tons of node tests fail on os x","date":"2013-05-24T19:02:42.586Z","type":"message"}
{"nick":"bnoordhuis","message":"Assertion failed: (!uv__is_active(handle)), function uv__finish_close, file ../../deps/uv/src/unix/core.c, line 165.","date":"2013-05-24T19:02:55.178Z","type":"message"}
{"nick":"tjfontaine","message":"is github failing us?","date":"2013-05-24T19:02:55.453Z","type":"message"}
{"nick":"bnoordhuis","message":"looks like it, MI6 is awfully quiet","date":"2013-05-24T19:03:13.563Z","type":"message"}
{"nick":"tjfontaine","message":"All job queues are currently backed up due to some increased load on our databases.","date":"2013-05-24T19:04:22.595Z","type":"message"}
{"nick":"tjfontaine","message":"WTB GITHUB","date":"2013-05-24T19:04:29.092Z","type":"message"}
{"nick":"LOUDBOT","message":"A BUG IN FUEL SAY IT IS NOT SO","date":"2013-05-24T19:04:29.575Z","type":"message"}
{"nick":"tjfontaine","message":"brb lunch","date":"2013-05-24T19:04:34.990Z","type":"message"}
{"nick":"bnoordhuis","message":"[03:52|% 100|+ 527|-  45]: Done <- ouch","date":"2013-05-24T19:04:39.071Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u00024146805\u0002 : unix: turn off POLLOUT after stream connect (+1 more commits) - http://git.io/zSPlSg","date":"2013-05-24T19:10:23.210Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10\u0002: #72 \u00037UNSTABLE\u000f smartos (2/186) windows (4/187) http://jenkins.nodejs.org/job/libuv-v0.10/72/","date":"2013-05-24T19:12:54.157Z","type":"message"}
{"nick":"paddybyers","reason":"Ping timeout: 252 seconds","date":"2013-05-24T19:13:35.156Z","type":"quit"}
{"nick":"st_luke","date":"2013-05-24T19:16:09.719Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-05-24T19:16:32.889Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: have a date for the next v0.11 release?","date":"2013-05-24T19:17:09.444Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10-gyp\u0002: #36 \u00037UNSTABLE\u000f smartos-x64 (2/186) windows-x64 (4/187) smartos-ia32 (2/186) linux-ia32 (1/186) windows-ia32 (4/187) http://jenkins.nodejs.org/job/libuv-v0.10-gyp/36/","date":"2013-05-24T19:17:36.187Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: monday?","date":"2013-05-24T19:20:38.511Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: were you planning to do a release tonight?","date":"2013-05-24T19:21:16.942Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: coolio. think we could get to the buffer patch by the next?","date":"2013-05-24T19:21:22.024Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yessir","date":"2013-05-24T19:21:24.361Z","type":"message"}
{"nick":"isaacs","message":"0.10.8","date":"2013-05-24T19:21:25.903Z","type":"message"}
{"nick":"isaacs","action":"nodeup-ing","date":"2013-05-24T19:21:31.237Z","type":"action"}
{"nick":"bnoordhuis","message":"then i guess i should revert the second-to-last libuv patch for now","date":"2013-05-24T19:21:37.777Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u0002fe7b154\u0002 : Revert \"unix: fix stream refcounting buglet\" - http://git.io/FMJbnA","date":"2013-05-24T19:28:21.250Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: hey, can you take a look at https://gist.github.com/piscisaureus/88e0415b06332e5f16ff ?","date":"2013-05-24T19:28:22.449Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: i can. i have. it's rather dull black on white","date":"2013-05-24T19:28:53.130Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: heh","date":"2013-05-24T19:29:17.621Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: what am I doing wrong","date":"2013-05-24T19:29:23.234Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: node asserts in its js guts (v0.10.7)","date":"2013-05-24T19:29:34.418Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: looks like a DOS risk to me","date":"2013-05-24T19:30:05.031Z","type":"message"}
{"nick":"stephank","reason":"Write error: Broken pipe","date":"2013-05-24T19:30:40.339Z","type":"quit"}
{"nick":"bnoordhuis","message":"ah, i think i know what that is...","date":"2013-05-24T19:32:01.382Z","type":"message"}
{"nick":"paddybyers","date":"2013-05-24T19:32:22.874Z","type":"join"}
{"nick":"bnoordhuis","message":"uint8_t data_[18432] <- that","date":"2013-05-24T19:32:53.216Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny wrote this ClientHello parser","date":"2013-05-24T19:33:25.519Z","type":"message"}
{"nick":"bnoordhuis","message":"looks like it didn't expect that buffer to ever fill up","date":"2013-05-24T19:33:48.102Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis pm","date":"2013-05-24T19:34:11.123Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10-gyp\u0002: #37 \u00037UNSTABLE\u000f smartos-x64 (2/186) osx-x64 (1/187) windows-x64 (4/187) smartos-ia32 (2/186) windows-ia32 (5/187) http://jenkins.nodejs.org/job/libuv-v0.10-gyp/37/","date":"2013-05-24T19:35:22.421Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10\u0002: #73 \u00037UNSTABLE\u000f smartos (2/186) windows (3/187) linux (1/186) http://jenkins.nodejs.org/job/libuv-v0.10/73/","date":"2013-05-24T19:36:49.431Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #67 \u00037UNSTABLE\u000f linux-ia32 (44/586) smartos-ia32 (45/586) osx-x64 (46/586) osx-ia32 (46/586) linux-x64 (45/586) smartos-x64 (48/586) http://jenkins.nodejs.org/job/libuv-node-integration/67/","date":"2013-05-24T19:37:13.416Z","type":"message"}
{"nick":"loladiro_","date":"2013-05-24T19:37:22.907Z","type":"join"}
{"nick":"loladiro","reason":"Ping timeout: 246 seconds","date":"2013-05-24T19:39:04.785Z","type":"quit"}
{"nick":"loladiro_","new_nick":"loladiro","date":"2013-05-24T19:39:05.474Z","type":"nick"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-05-24T19:46:43.397Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #68 \u00037UNSTABLE\u000f linux-ia32 (1/586) smartos-ia32 (2/586) osx-x64 (2/586) osx-ia32 (2/586) linux-x64 (1/586) smartos-x64 (3/586) http://jenkins.nodejs.org/job/libuv-node-integration/68/","date":"2013-05-24T19:51:19.535Z","type":"message"}
{"nick":"indutny","message":"heya","date":"2013-05-24T19:51:57.462Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: what's up with clienthello parser?","date":"2013-05-24T19:52:20.998Z","type":"message"}
{"nick":"trevnorris","message":"is there anywhere in node where we'll bubble the error from a users callback?","date":"2013-05-24T19:52:48.302Z","type":"message"}
{"nick":"trevnorris","message":"just looking at 5513, and seems there's misunderstanding in the line \"like all other async methods\"","date":"2013-05-24T19:54:29.084Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-05-24T20:00:00.266Z","type":"quit"}
{"nick":"tjfontaine","message":"trevnorris: I'm not sure what you mean","date":"2013-05-24T20:02:24.403Z","type":"message"}
{"nick":"tjfontaine","message":"if you throw in a callback, it would show up on the containers .on('error')?","date":"2013-05-24T20:02:43.976Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: honestly, not completely sure either. check the issue. i'm responding to it now.","date":"2013-05-24T20:03:11.813Z","type":"message"}
{"nick":"loladiro","reason":"Ping timeout: 259 seconds","date":"2013-05-24T20:03:43.907Z","type":"quit"}
{"nick":"tjfontaine","message":"oh I see","date":"2013-05-24T20:05:07.963Z","type":"message"}
{"nick":"kevinswiber","date":"2013-05-24T20:05:43.853Z","type":"join"}
{"nick":"tjfontaine","message":"I'm not sure if that's behavior we can change","date":"2013-05-24T20:06:26.918Z","type":"message"}
{"nick":"tjfontaine","message":"but I understand the desire at leaset","date":"2013-05-24T20:06:46.974Z","type":"message"}
{"nick":"tjfontaine","message":"*least","date":"2013-05-24T20:07:13.679Z","type":"message"}
{"nick":"trevnorris","message":"but that location doesn't make sense. it's the listening callback, that's called once when the server is listening for connections.","date":"2013-05-24T20:09:25.970Z","type":"message"}
{"nick":"trevnorris","message":"not for when connections are actually accepted.","date":"2013-05-24T20:09:39.243Z","type":"message"}
{"nick":"paddybyers","reason":"Ping timeout: 260 seconds","date":"2013-05-24T20:10:16.347Z","type":"quit"}
{"nick":"tjfontaine","message":"the `throw` there is a red herring, the issue is because port 80 requires elevated privileges","date":"2013-05-24T20:10:29.049Z","type":"message"}
{"nick":"trevnorris","message":"how do you mean?","date":"2013-05-24T20:11:29.507Z","type":"message"}
{"nick":"tjfontaine","message":"net.createServer().listen(80, function (err) { //noerr }).on('error', function (err) {//err})","date":"2013-05-24T20:12:41.713Z","type":"message"}
{"nick":"stephank","date":"2013-05-24T20:13:21.656Z","type":"join"}
{"nick":"tjfontaine","message":"so the reason it doesn't go to listen, is we say that will only fire if the listen was successful, and it goes to error because we didn't","date":"2013-05-24T20:15:31.615Z","type":"message"}
{"nick":"tjfontaine","message":"*because it wasn't","date":"2013-05-24T20:15:35.676Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: if you throw an error from the connection callback it doesn't reach the error callback.","date":"2013-05-24T20:15:40.956Z","type":"message"}
{"nick":"trevnorris","message":"ah, wait. i'm completely misunderstanding this","date":"2013-05-24T20:16:02.173Z","type":"message"}
{"nick":"tjfontaine","message":"so there are two things, 1) the listen issue, 2) he wants a wider change","date":"2013-05-24T20:16:23.343Z","type":"message"}
{"nick":"trevnorris","message":"ok. i'm a sleep deprived dork. understand now.","date":"2013-05-24T20:16:23.647Z","type":"message"}
{"nick":"loladiro","date":"2013-05-24T20:16:28.352Z","type":"join"}
{"nick":"tjfontaine","message":"which kinda goes back to the whole where should we handle things","date":"2013-05-24T20:16:45.166Z","type":"message"}
{"nick":"trevnorris","message":"i thought he was asking for all errors thrown from inside the connection callback to be sent to the listener callback.","date":"2013-05-24T20:16:53.671Z","type":"message"}
{"nick":"kazupon","date":"2013-05-24T20:17:08.507Z","type":"join"}
{"nick":"tjfontaine","message":"right, no, he just means that if there is an error for .listen() and he passed that a cb, that's where he expects the error to be sent","date":"2013-05-24T20:17:23.483Z","type":"message"}
{"nick":"trevnorris","message":"that make sense.","date":"2013-05-24T20:17:54.372Z","type":"message"}
{"nick":"tjfontaine","message":"but in general he's concerned by an inconsistency in where errors are delivered, which almost leads us back to the throw/no-throw conversation","date":"2013-05-24T20:18:52.614Z","type":"message"}
{"nick":"trevnorris","message":"well, since it's optional. seems about the same idea as \"var s = net.createServer(); s.on('connection', function() { //on_con });\"","date":"2013-05-24T20:18:58.442Z","type":"message"}
{"nick":"trevnorris","message":"\"s.listen(<port>)\"","date":"2013-05-24T20:19:18.254Z","type":"message"}
{"nick":"tjfontaine","message":"well, .listen(80, .., cb); is equivalent to .once('listening', cb)","date":"2013-05-24T20:19:27.240Z","type":"message"}
{"nick":"tjfontaine","message":"in neither case will that get an Error","date":"2013-05-24T20:19:35.349Z","type":"message"}
{"nick":"trevnorris","message":"well yeah. and more than just equivalent, that's pretty much the code line for line. :)","date":"2013-05-24T20:20:13.028Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2013-05-24T20:20:23.992Z","type":"message"}
{"nick":"tjfontaine","message":"I think it's safe to say in core that if it inherits from EventEmitter it generally will emit('error') and not pass cb(err)","date":"2013-05-24T20:22:13.777Z","type":"message"}
{"nick":"trevnorris","message":"my mind is overly simplistic, but i'm not seeing how this leads back to the throw/no-throw argument.","date":"2013-05-24T20:22:25.326Z","type":"message"}
{"nick":"trevnorris","message":"honestly what he's requesting make sense.","date":"2013-05-24T20:22:32.127Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: it's an expections game really","date":"2013-05-24T20:22:38.418Z","type":"message"}
{"nick":"tjfontaine","message":"*expectations","date":"2013-05-24T20:22:42.130Z","type":"message"}
{"nick":"tjfontaine","message":"man I'm awesome at typing today","date":"2013-05-24T20:22:46.925Z","type":"message"}
{"nick":"trevnorris","message":"hm. ok. i can understand that.","date":"2013-05-24T20:24:17.510Z","type":"message"}
{"nick":"tjfontaine","message":"so, basically that code throw's beceause there's no .on('error')","date":"2013-05-24T20:24:42.420Z","type":"message"}
{"nick":"trevnorris","message":"seems to be difference in internal workings though. i mean, passing the error to the listener callback seems to make sense looking at callbacks like fs.stat()","date":"2013-05-24T20:25:07.799Z","type":"message"}
{"nick":"tjfontaine","message":"and the question is \"why are you writing code that doesn't handle errors\" and his response will be \"Because I epxect the error to be passed to the callback\"","date":"2013-05-24T20:25:13.619Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: right, I think the fundamental differentiator here is if the thing inherits EE","date":"2013-05-24T20:25:32.084Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-05-24T20:25:36.246Z","type":"quit"}
{"nick":"trevnorris","message":"yeah. and that's more difficult to get across. since the syntax for each is similar.","date":"2013-05-24T20:26:02.917Z","type":"message"}
{"nick":"trevnorris","message":"but that does make sense.","date":"2013-05-24T20:26:12.677Z","type":"message"}
{"nick":"tjfontaine","message":"so the question is, if we make the change to deliver to the cb, what about all those people expecting to see it in on('error')","date":"2013-05-24T20:26:43.649Z","type":"message"}
{"nick":"tjfontaine","message":"do we deliver it twice? if so, then the case of 'error' not having a listener will still throw unless we special case","date":"2013-05-24T20:27:17.277Z","type":"message"}
{"nick":"trevnorris","message":"easy. can do both. it's similar for this: \"var s = net.createServer(function() { console.log('cb 1'); }); s.on('connection', function() { console.log('cb 2'); });","date":"2013-05-24T20:27:32.329Z","type":"message"}
{"nick":"tjfontaine","message":"see my caveat","date":"2013-05-24T20:27:46.274Z","type":"message"}
{"nick":"trevnorris","message":"well, i'm still not seeing how stuff like that isn't already possible. for example:","date":"2013-05-24T20:28:53.749Z","type":"message"}
{"nick":"trevnorris","message":"var s = net.createServer(fn() {}); s.on('error', fn() { console.log('error 1'); }); s.on('error', fn() { console.log('error 2'); s.listen(<impossible_port>);\"","date":"2013-05-24T20:29:43.745Z","type":"message"}
{"nick":"trevnorris","message":"both error callbacks will fire.","date":"2013-05-24T20:29:54.731Z","type":"message"}
{"nick":"tjfontaine","message":"right, but he wants the case of *not* having to define an .on('error')","date":"2013-05-24T20:30:24.910Z","type":"message"}
{"nick":"loladiro","reason":"Ping timeout: 264 seconds","date":"2013-05-24T20:31:07.307Z","type":"quit"}
{"nick":"tjfontaine","message":"and we only want the missing error handler to throw in this case if there's not a listen cb, listening event, or error handler","date":"2013-05-24T20:31:33.625Z","type":"message"}
{"nick":"trevnorris","message":"well, wouldn't it be possible to just add like: \"if (callback) this.on('error', callback)\" to .listen()?","date":"2013-05-24T20:31:49.708Z","type":"message"}
{"nick":"tjfontaine","message":"but missing error handler code throws in lib/events.js not in what inherits EE","date":"2013-05-24T20:31:54.577Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: but then that catches all the other errors that happen","date":"2013-05-24T20:32:10.508Z","type":"message"}
{"nick":"tjfontaine","message":"where does econnreset or epipe go","date":"2013-05-24T20:32:24.801Z","type":"message"}
{"nick":"trevnorris","message":"sorry. this is getting confusing for me. i feel like he just wants us to place the syntactic sugar of doing the .on('error',...) for him if he passes the listener callback.","date":"2013-05-24T20:33:15.911Z","type":"message"}
{"nick":"trevnorris","message":"here, i'm much better w/ code. give me a min","date":"2013-05-24T20:33:34.638Z","type":"message"}
{"nick":"tjfontaine","message":"ok","date":"2013-05-24T20:33:42.467Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-05-24T20:35:42.137Z","type":"quit"}
{"nick":"paddybyers","date":"2013-05-24T20:49:28.731Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: https://gist.github.com/trevnorris/5646425","date":"2013-05-24T20:52:54.295Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-05-24T20:53:00.679Z","type":"join"}
{"nick":"trevnorris","message":"all but one test passes (test-net-listen-error)","date":"2013-05-24T20:53:13.053Z","type":"message"}
{"nick":"trevnorris","message":"don't get me wrong, that's horrible code, but it gets done what he's looking for.","date":"2013-05-24T20:53:43.502Z","type":"message"}
{"nick":"tjfontaine","message":"ya, it feels really icky","date":"2013-05-24T20:53:52.119Z","type":"message"}
{"nick":"paddybyers","reason":"Ping timeout: 248 seconds","date":"2013-05-24T20:53:57.621Z","type":"quit"}
{"nick":"tjfontaine","message":"also means we have to implement some kind of similar pattern for any other place","date":"2013-05-24T20:54:53.882Z","type":"message"}
{"nick":"trevnorris","message":"yeah. the can of worms a patch like this would open is not something i'd want to deal with.","date":"2013-05-24T20:55:25.115Z","type":"message"}
{"nick":"tjfontaine","message":"right, so while I'm not necessarily the authority on this, I don't think the pattern of .emit('error') can change at this point","date":"2013-05-24T20:55:57.482Z","type":"message"}
{"nick":"tjfontaine","message":"or if it does, it needs to happen for .12","date":"2013-05-24T20:56:13.931Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: hope you don't do much work from internet cafes: http://www.siliconvalley.com/latest-headlines/ci_23005292/oakley-moves-ban-internet-cafes-permanently","date":"2013-05-24T20:56:33.060Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: well, it's not that the pattern would change. more like extended. but yeah. all this needs to be hammered out before v0.12","date":"2013-05-24T20:57:09.035Z","type":"message"}
{"nick":"trevnorris","message":"also I doubt isaacs would allow this in anyways.","date":"2013-05-24T20:57:23.610Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: I actually think sending the errors twice is a really bad pattern, because you have to make sure you're only handling it once","date":"2013-05-24T20:57:51.814Z","type":"message"}
{"nick":"tjfontaine","message":"\"twice\"","date":"2013-05-24T20:57:56.884Z","type":"message"}
{"nick":"trevnorris","message":"well, that's something we can currently do. so that'll need fixing.","date":"2013-05-24T20:58:08.527Z","type":"message"}
{"nick":"tjfontaine","message":"in general I agree that \"the thing that caused the error should receive the error notification\" that way your .on('error') can be less of a giant switch that tries to figure out which part went wrong","date":"2013-05-24T20:58:55.560Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-05-24T21:00:32.406Z","type":"message"}
{"nick":"tjfontaine","message":"also, oakley appears to be quite a ways away from oakland :)","date":"2013-05-24T21:00:46.313Z","type":"message"}
{"nick":"trevnorris","message":"ah lol","date":"2013-05-24T21:00:55.069Z","type":"message"}
{"nick":"trevnorris","message":"too bad you can't open a private ticket. i'd like to have a discussion about this, but every time something is brought up about error handling","date":"2013-05-24T21:01:07.849Z","type":"message"}
{"nick":"trevnorris","message":"the community goes nuts","date":"2013-05-24T21:01:12.184Z","type":"message"}
{"nick":"trevnorris","message":"well, part of them anyways","date":"2013-05-24T21:01:17.573Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2013-05-24T21:01:22.957Z","type":"message"}
{"nick":"tjfontaine","message":"you can talk to `3rdEden in here :)","date":"2013-05-24T21:01:38.254Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-05-24T21:02:04.907Z","type":"message"}
{"nick":"`3rdEden","message":"What i do","date":"2013-05-24T21:02:11.377Z","type":"message"}
{"nick":"tjfontaine","message":"we were just discussing your 'pass errors to cbs instead of emit(error)' issue","date":"2013-05-24T21:02:42.596Z","type":"message"}
{"nick":"trevnorris","message":"5513","date":"2013-05-24T21:02:54.606Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: wtf?","date":"2013-05-24T21:03:03.403Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: yeah. and at least Ohio has taken care of those horrible things: http://arstechnica.com/tech-policy/2013/05/ohio-bans-those-dangerous-dens-of-iniquity-internet-cafes/","date":"2013-05-24T21:03:28.638Z","type":"message"}
{"nick":"tjfontaine","message":"you should see the glut of internet gambling places in ohio though","date":"2013-05-24T21:03:47.882Z","type":"message"}
{"nick":"tjfontaine","message":"it's really bad.","date":"2013-05-24T21:03:49.887Z","type":"message"}
{"nick":"trevnorris","message":"`3rdEden: there does seem to be problems w/ error handling (e.g. tjfontaine doesn't like how you can attach two callbacks to an error event)","date":"2013-05-24T21:04:26.114Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-05-24T21:04:37.526Z","type":"quit"}
{"nick":"trevnorris","message":"but it's a sensitive topic that seems to bring out the worst in people.","date":"2013-05-24T21:04:52.965Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: oakley != oaklan","date":"2013-05-24T21:05:05.773Z","type":"message"}
{"nick":"isaacs","message":"d","date":"2013-05-24T21:05:06.944Z","type":"message"}
{"nick":"tjfontaine","message":"well it's not that, so much as, to maintain backward compatibility we have to pass and emit, and then do something evil to not throw","date":"2013-05-24T21:05:07.610Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: ya I mentioned that to him :)","date":"2013-05-24T21:05:14.826Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: heh, yeah. missed that at first. :)","date":"2013-05-24T21:05:21.310Z","type":"message"}
{"nick":"isaacs","message":"ah, error handling.","date":"2013-05-24T21:06:01.872Z","type":"message"}
{"nick":"isaacs","message":"crap","date":"2013-05-24T21:06:02.876Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2013-05-24T21:06:07.766Z","type":"message"}
{"nick":"dominictarr","date":"2013-05-24T21:06:09.217Z","type":"join"}
{"nick":"isaacs","message":"`3rdEden: i'd rather not do this.","date":"2013-05-24T21:06:40.543Z","type":"message"}
{"nick":"`3rdEden","message":"Well, yes that sucks","date":"2013-05-24T21:06:42.430Z","type":"message"}
{"nick":"isaacs","message":"`3rdEden: here's why:","date":"2013-05-24T21:06:46.816Z","type":"message"}
{"nick":"isaacs","message":"it's not a bad idea.","date":"2013-05-24T21:06:48.428Z","type":"message"}
{"nick":"isaacs","message":"but how do i know that the error is going to be handled?","date":"2013-05-24T21:06:55.081Z","type":"message"}
{"nick":"isaacs","message":"`3rdEden: most code will *not* handle the error.","date":"2013-05-24T21:07:04.800Z","type":"message"}
{"nick":"isaacs","message":"so do we send it to the cb, and *also* emit error?","date":"2013-05-24T21:07:20.770Z","type":"message"}
{"nick":"tjfontaine","message":"you'd have to for backward compatibility","date":"2013-05-24T21:07:30.343Z","type":"message"}
{"nick":"isaacs","message":"also, the current contract is that the listen() cb means \"You are now successfully listening\"","date":"2013-05-24T21:07:42.697Z","type":"message"}
{"nick":"`3rdEden","message":"Yes that's a good point","date":"2013-05-24T21:07:49.854Z","type":"message"}
{"nick":"isaacs","message":"yes, it's a departure from other cb-taking node methods","date":"2013-05-24T21:07:51.900Z","type":"message"}
{"nick":"isaacs","message":"(ie, write(chuk,encoding,cb)","date":"2013-05-24T21:07:56.585Z","type":"message"}
{"nick":"trevnorris","message":"well, should we allow more than one error callback to be called? seems that could be bad too","date":"2013-05-24T21:07:58.658Z","type":"message"}
{"nick":"isaacs","message":"but... this is what we have now.","date":"2013-05-24T21:08:07.653Z","type":"message"}
{"nick":"isaacs","message":"so, if we pass teh error to listen(cb), then we're a) changing an existing contract, b) still having to emit('error', er) just in case anyway.","date":"2013-05-24T21:08:35.013Z","type":"message"}
{"nick":"`3rdEden","message":"If you have to maintain full backwards compatiblity and have that test fail then this feature would be impossible to implement","date":"2013-05-24T21:08:47.640Z","type":"message"}
{"nick":"`3rdEden","message":"simple as that","date":"2013-05-24T21:08:56.729Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-05-24T21:08:59.245Z","type":"message"}
{"nick":"isaacs","message":"i'm sorry.","date":"2013-05-24T21:09:02.484Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-05-24T21:09:03.477Z","type":"quit"}
{"nick":"indutny","message":"bnoordhuis: please review https://github.com/joyent/node/pull/5552","date":"2013-05-24T21:09:06.484Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: it's ugly, but this gets the job done: https://gist.github.com/trevnorris/5646425","date":"2013-05-24T21:09:10.142Z","type":"message"}
{"nick":"isaacs","message":"`3rdEden: your suggestion is good, but it's too late.","date":"2013-05-24T21:09:17.212Z","type":"message"}
{"nick":"`3rdEden","message":"isaacs: I'll solve it userland somehow ","date":"2013-05-24T21:09:20.478Z","type":"message"}
{"nick":"isaacs","message":"`3rdEden: ok :)","date":"2013-05-24T21:09:26.279Z","type":"message"}
{"nick":"`3rdEden","message":"require('better-node') ;)","date":"2013-05-24T21:09:43.267Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: well, no, that still leaves open the idea of server.listen(80, function() { everything worked! })","date":"2013-05-24T21:10:02.897Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: so now i try to connect, and get ECONNREFUSED","date":"2013-05-24T21:10:14.004Z","type":"message"}
{"nick":"isaacs","message":"so then what?  sniff cb.length?  ugh.  no.","date":"2013-05-24T21:11:00.033Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: so the issue seems to be more for backwards compatibility, since users may not be expecting their error to be handled.","date":"2013-05-24T21:11:03.644Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-05-24T21:11:09.584Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok.","date":"2013-05-24T21:11:12.929Z","type":"message"}
{"nick":"isaacs","message":"it hides the error.","date":"2013-05-24T21:11:15.705Z","type":"message"}
{"nick":"trevnorris","action":"receives enlightenment","date":"2013-05-24T21:11:21.610Z","type":"action"}
{"nick":"isaacs","message":":)","date":"2013-05-24T21:11:24.164Z","type":"message"}
{"nick":"`3rdEden","message":"well cb.length could be sniffed with trevnorris's patch","date":"2013-05-24T21:12:13.980Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-05-24T21:12:21.458Z","type":"message"}
{"nick":"trevnorris","message":"that would make a horrible patch even worse.","date":"2013-05-24T21:12:31.031Z","type":"message"}
{"nick":"`3rdEden","message":"if self._listening_error && self._listening_error.length ;$","date":"2013-05-24T21:12:35.096Z","type":"message"}
{"nick":"trevnorris","message":"lol","date":"2013-05-24T21:12:43.597Z","type":"message"}
{"nick":"`3rdEden","message":"That would make pass the tests and give the desired behavior","date":"2013-05-24T21:13:01.693Z","type":"message"}
{"nick":"isaacs","message":"`3rdEden: every time you read function.length, I kill a kitten.","date":"2013-05-24T21:13:23.994Z","type":"message"}
{"nick":"isaacs","message":"`3rdEden: please don't make me kill again.","date":"2013-05-24T21:13:31.272Z","type":"message"}
{"nick":"`3rdEden","message":"And tbh, i've seen more horrible code in node then that ;)","date":"2013-05-24T21:13:34.079Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-05-24T21:13:52.721Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: thoughts on https://github.com/trevnorris/node/commit/1f93bed","date":"2013-05-24T21:13:58.995Z","type":"message"}
{"nick":"normanm","date":"2013-05-24T21:14:59.859Z","type":"join"}
{"nick":"isaacs","message":"trevnorris: other tests pass?","date":"2013-05-24T21:15:05.197Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-05-24T21:15:09.296Z","type":"message"}
{"nick":"trevnorris","message":"right now it's sitting on my buffer patch, since i couldn't replicate charCodeAt in cc","date":"2013-05-24T21:15:30.107Z","type":"message"}
{"nick":"trevnorris","message":"so I decided to make fill work this way instead :)","date":"2013-05-24T21:15:38.283Z","type":"message"}
{"nick":"trevnorris","message":"(or at least, didn't want to take the time to replicate charCodeAt)","date":"2013-05-24T21:16:16.909Z","type":"message"}
{"nick":"isaacs","message":"seems fine to me","date":"2013-05-24T21:17:34.253Z","type":"message"}
{"nick":"trevnorris","message":"coolio. i'll leave it on the commit stack.","date":"2013-05-24T21:17:45.913Z","type":"message"}
{"nick":"isaacs","action":"sigh","date":"2013-05-24T21:20:57.427Z","type":"action"}
{"nick":"isaacs","message":"#5504 will stay open for now","date":"2013-05-24T21:21:01.891Z","type":"message"}
{"nick":"isaacs","message":"need to get 0.10.8 out","date":"2013-05-24T21:21:06.211Z","type":"message"}
{"nick":"`3rdEden","message":"isaacs: Anyways, see what you want to do with the feature request. It's implementable without breaking backwards compatible ;P","date":"2013-05-24T21:21:07.975Z","type":"message"}
{"nick":"isaacs","message":"`3rdEden: it's not implementable without breaking semantics.","date":"2013-05-24T21:21:45.764Z","type":"message"}
{"nick":"isaacs","message":"`3rdEden: and i'm not going to add a function.length sniff.","date":"2013-05-24T21:21:51.509Z","type":"message"}
{"nick":"isaacs","message":"`3rdEden: that is universally stupid, i'm sorry.","date":"2013-05-24T21:21:59.960Z","type":"message"}
{"nick":"kazupon","date":"2013-05-24T21:22:09.281Z","type":"join"}
{"nick":"`3rdEden","message":"isaacs: okay :p","date":"2013-05-24T21:23:13.685Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: now you are assuming that in the second write it can be completed at once","date":"2013-05-24T21:23:17.275Z","type":"message"}
{"nick":"indutny","message":"yes it can","date":"2013-05-24T21:23:28.753Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-05-24T21:23:32.679Z","type":"message"}
{"nick":"indutny","message":"it can't only in one case","date":"2013-05-24T21:23:40.474Z","type":"message"}
{"nick":"indutny","message":"asynchronous SSL backend, which we ain't using","date":"2013-05-24T21:23:50.253Z","type":"message"}
{"nick":"indutny","message":"ask bnoordhuis ","date":"2013-05-24T21:23:54.363Z","type":"message"}
{"nick":"st_luke","date":"2013-05-24T21:24:06.020Z","type":"join"}
{"nick":"piscisaureus_","message":"what if the second _write fails?","date":"2013-05-24T21:24:34.364Z","type":"message"}
{"nick":"indutny","message":"apocalypse","date":"2013-05-24T21:26:41.129Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-05-24T21:26:42.992Z","type":"quit"}
{"nick":"indutny","message":"that's impossible","date":"2013-05-24T21:26:52.287Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-05-24T21:26:59.217Z","type":"message"}
{"nick":"piscisaureus_","message":"I mean, IOW","date":"2013-05-24T21:27:01.093Z","type":"message"}
{"nick":"piscisaureus_","message":"it's not possible to do","date":"2013-05-24T21:27:04.690Z","type":"message"}
{"nick":"indutny","message":"IOW?","date":"2013-05-24T21:27:05.337Z","type":"message"}
{"nick":"indutny","message":"https://en.wikipedia.org/wiki/Isle_of_Wight","date":"2013-05-24T21:27:15.054Z","type":"message"}
{"nick":"piscisaureus_","message":"while (written < data.length) {","date":"2013-05-24T21:28:10.449Z","type":"message"}
{"nick":"piscisaureus_","message":"   this.pair..ssl.clearIn()","date":"2013-05-24T21:28:10.597Z","type":"message"}
{"nick":"piscisaureus_","message":"   if (failed) { handle() } etc","date":"2013-05-24T21:28:10.598Z","type":"message"}
{"nick":"piscisaureus_","message":"}","date":"2013-05-24T21:28:10.598Z","type":"message"}
{"nick":"piscisaureus_","message":"^-- indutny that pattern is not useful here?","date":"2013-05-24T21:28:27.796Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-05-24T21:28:38.264Z","type":"message"}
{"nick":"tjfontaine","message":"iow -- in other words","date":"2013-05-24T21:28:41.027Z","type":"message"}
{"nick":"indutny","message":"no, not really","date":"2013-05-24T21:28:42.744Z","type":"message"}
{"nick":"indutny","message":"there's only one retry","date":"2013-05-24T21:28:53.602Z","type":"message"}
{"nick":"indutny","message":"and it is here because of ClientHello parser","date":"2013-05-24T21:29:05.712Z","type":"message"}
{"nick":"piscisaureus_","message":"yes but errors from the retru aren't handled :)","date":"2013-05-24T21:29:16.093Z","type":"message"}
{"nick":"indutny","message":"they're","date":"2013-05-24T21:30:00.628Z","type":"message"}
{"nick":"indutny","message":"its just partial write","date":"2013-05-24T21:30:03.393Z","type":"message"}
{"nick":"indutny","message":"that couldn't happen on second retry","date":"2013-05-24T21:30:10.016Z","type":"message"}
{"nick":"indutny","message":"and thus we're just asserting","date":"2013-05-24T21:30:15.477Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: the assert happens because the write fills up the data_ chunk in ClientHelloParser, which is 18k","date":"2013-05-24T21:31:30.857Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2013-05-24T21:31:40.689Z","type":"message"}
{"nick":"indutny","message":"have you seen my patch?","date":"2013-05-24T21:31:44.624Z","type":"message"}
{"nick":"bnoordhuis","message":"no. i don't looking at other people's code","date":"2013-05-24T21:31:54.033Z","type":"message"}
{"nick":"bnoordhuis","message":"my own is bad enough","date":"2013-05-24T21:31:56.864Z","type":"message"}
{"nick":"bnoordhuis","message":"(okay, okay - i'll review it)","date":"2013-05-24T21:32:15.546Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-05-24T21:33:22.160Z","type":"message"}
{"nick":"indutny","message":"thanks","date":"2013-05-24T21:33:25.347Z","type":"message"}
{"nick":"rendar","date":"2013-05-24T21:33:29.471Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: okay, so what's stopping data_ from filling up a second time?","date":"2013-05-24T21:34:17.456Z","type":"message"}
{"nick":"indutny","message":"its turned off","date":"2013-05-24T21:34:25.174Z","type":"message"}
{"nick":"indutny","message":"after first time","date":"2013-05-24T21:34:27.057Z","type":"message"}
{"nick":"indutny","message":"the ClientHello parser","date":"2013-05-24T21:34:31.054Z","type":"message"}
{"nick":"indutny","message":"also","date":"2013-05-24T21:34:43.548Z","type":"message"}
{"nick":"indutny","message":"it works","date":"2013-05-24T21:34:44.431Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Nathan Zadoks\u000f \u00037v0.10\u000f * \u0002a40133d\u0002 : http: remove bodyHead from 'upgrade' events - http://git.io/DbEBig","date":"2013-05-24T21:34:52.169Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: that reminds me, the ClientHelloParser is embedded in Connection","date":"2013-05-24T21:36:49.061Z","type":"message"}
{"nick":"indutny","message":"… yes?","date":"2013-05-24T21:37:00.419Z","type":"message"}
{"nick":"bnoordhuis","message":"which means there's 18k memory sitting unused after the handshake","date":"2013-05-24T21:37:13.177Z","type":"message"}
{"nick":"bnoordhuis","message":"that makes me sad :(","date":"2013-05-24T21:37:17.744Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2013-05-24T21:37:20.781Z","type":"message"}
{"nick":"indutny","message":"yikes","date":"2013-05-24T21:37:24.381Z","type":"message"}
{"nick":"`3rdEden","reason":"Remote host closed the connection","date":"2013-05-24T21:37:25.686Z","type":"quit"}
{"nick":"indutny","message":"that's nothing","date":"2013-05-24T21:37:30.496Z","type":"message"}
{"nick":"indutny","message":"comparing to bio ring","date":"2013-05-24T21:37:33.574Z","type":"message"}
{"nick":"indutny","message":":D","date":"2013-05-24T21:37:35.054Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033isaacs\u000f created tag v0.10.8 - http://git.io/l7VgUg","date":"2013-05-24T21:38:33.192Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u00027d5024e\u0002 : Now working on v0.10.9 (+1 more commits) - http://git.io/Yiwd8g","date":"2013-05-24T21:38:35.185Z","type":"message"}
{"nick":"isaacs","message":"pushing libuv release","date":"2013-05-24T21:38:37.209Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: i guess we should look into that before the next v0.10 release","date":"2013-05-24T21:39:03.526Z","type":"message"}
{"nick":"indutny","message":"surely yes","date":"2013-05-24T21:39:11.236Z","type":"message"}
{"nick":"bnoordhuis","message":"people are complaining tls uses a lot of memory","date":"2013-05-24T21:39:14.029Z","type":"message"}
{"nick":"indutny","message":"when is it?","date":"2013-05-24T21:39:14.990Z","type":"message"}
{"nick":"bnoordhuis","message":"and while it's partially openssl's fault, node can probably do better as well","date":"2013-05-24T21:39:31.361Z","type":"message"}
{"nick":"tjfontaine","message":"0.10.8 is right now, so no earlier than next week I guess","date":"2013-05-24T21:39:47.352Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: well, before the next one after this one :)","date":"2013-05-24T21:39:49.687Z","type":"message"}
{"nick":"bnoordhuis","message":"next release is in two weeks, i think? not counting tonight's that is","date":"2013-05-24T21:39:50.111Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-05-24T21:39:54.843Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: we have no strict schedule","date":"2013-05-24T21:39:59.960Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: i just try to get them out often enough that they're not horrible","date":"2013-05-24T21:40:08.616Z","type":"message"}
{"nick":"pachet","message":"like children","date":"2013-05-24T21:40:21.971Z","type":"message"}
{"nick":"bnoordhuis","message":":)","date":"2013-05-24T21:40:32.880Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-05-24T21:40:57.706Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u0002074e823\u0002 : npm: Upgrade to 1.2.23 (+1 more commits) - http://git.io/1PJUdw","date":"2013-05-24T21:41:56.213Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: are you talking about 5520","date":"2013-05-24T21:42:20.671Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10-gyp\u0002: #38 \u00034FAILURE\u000f smartos-x64 (2/186) http://jenkins.nodejs.org/job/libuv-v0.10-gyp/38/","date":"2013-05-24T21:45:08.226Z","type":"message"}
{"nick":"bnoordhuis","message":"isn't a40133d (\"remove bodyHead\")  an api change?","date":"2013-05-24T21:45:32.335Z","type":"message"}
{"nick":"tjfontaine","message":"fucking jenkins","date":"2013-05-24T21:45:38.106Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f created branch v0.10.8-release - http://git.io/05BvQA","date":"2013-05-24T21:45:39.223Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: the PAI doesn't actually change","date":"2013-05-24T21:45:45.332Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: we pass an empty Buffer to the function","date":"2013-05-24T21:45:53.263Z","type":"message"}
{"nick":"bnoordhuis","message":"ah okay","date":"2013-05-24T21:46:01.550Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #210 \u00037UNSTABLE\u000f osx-x64 (1/586) osx-ia32 (1/586) smartos-x64 (2/586) http://jenkins.nodejs.org/job/nodejs-v0.10/210/","date":"2013-05-24T21:46:07.225Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: so we just pretend that it always happened to line up perfectly :)","date":"2013-05-24T21:46:08.624Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: yeah, #5520 is part of it","date":"2013-05-24T21:46:25.280Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10\u0002: #74 \u00034FAILURE\u000f smartos (2/186) windows (4/187) http://jenkins.nodejs.org/job/libuv-v0.10/74/","date":"2013-05-24T21:46:36.234Z","type":"message"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-05-24T21:48:43.608Z","type":"quit"}
{"nick":"qard","reason":"Quit: Leaving.","date":"2013-05-24T21:49:07.807Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #39 \u00037UNSTABLE\u000f windows-ia32 (8/586) windows-x64 (8/586) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/39/","date":"2013-05-24T21:56:58.291Z","type":"message"}
{"nick":"pachet","reason":"Quit: leaving","date":"2013-05-24T21:58:14.062Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Fedor Indutny\u000f \u00037v0.10\u000f * \u0002f7ff8b4\u0002 : tls: retry writing after hello parse error - http://git.io/ylgFTQ","date":"2013-05-24T22:04:10.309Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2013-05-24T22:04:17.103Z","type":"message"}
{"nick":"indutny","message":"hm","date":"2013-05-24T22:04:17.603Z","type":"message"}
{"nick":"indutny","message":"that wasn't me","date":"2013-05-24T22:04:30.256Z","type":"message"}
{"nick":"isaacs","message":":)","date":"2013-05-24T22:04:35.027Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10.8-release\u000f * \u0002f63612d\u0002 : 2013.05.24, Version 0.10.8 (Stable) - http://git.io/QGAqxA","date":"2013-05-24T22:04:37.313Z","type":"message"}
{"nick":"isaacs","message":"at least, it fixes a DOS","date":"2013-05-24T22:04:42.608Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #211 \u00037UNSTABLE\u000f linux-x64 (1/586) osx-x64 (1/586) osx-ia32 (2/586) smartos-x64 (4/586) smartos-ia32 (5/586) linux-ia32 (1/586) http://jenkins.nodejs.org/job/nodejs-v0.10/211/","date":"2013-05-24T22:05:46.322Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u0002179aa0a\u0002 : doc: Minor fixup in http doc re bodyHead - http://git.io/UJNK9g","date":"2013-05-24T22:06:23.320Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10.8-release\u000f * \u000230d9e9f\u0002 : 2013.05.24, Version 0.10.8 (Stable) - http://git.io/iDrJcw","date":"2013-05-24T22:06:42.328Z","type":"message"}
{"nick":"normanm","reason":"Quit: Computer has gone to sleep.","date":"2013-05-24T22:06:49.507Z","type":"quit"}
{"nick":"`3rdEden","date":"2013-05-24T22:08:28.289Z","type":"join"}
{"nick":"isaacs","message":"bnoordhuis, indutny, piscisaureus_: If you guys want to tweat the TLS fix approach further, that's fine by me.","date":"2013-05-24T22:10:39.927Z","type":"message"}
{"nick":"isaacs","message":"just want to get this build out, and it's a serious failure to have lying around.","date":"2013-05-24T22:10:54.639Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-24T22:13:59.357Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #40 \u00037UNSTABLE\u000f windows-ia32 (8/586) windows-x64 (9/586) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/40/","date":"2013-05-24T22:16:40.382Z","type":"message"}
{"nick":"mjr__","reason":"Quit: mjr__","date":"2013-05-24T22:16:46.059Z","type":"quit"}
{"nick":"`3rdEden","reason":"Ping timeout: 264 seconds","date":"2013-05-24T22:17:19.335Z","type":"quit"}
{"nick":"piscisaureus_","message":"isaacs: kewl","date":"2013-05-24T22:19:26.271Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #212 \u00037UNSTABLE\u000f linux-x64 (1/587) osx-x64 (2/587) osx-ia32 (3/587) smartos-x64 (5/587) smartos-ia32 (3/587) linux-ia32 (3/587) http://jenkins.nodejs.org/job/nodejs-v0.10/212/","date":"2013-05-24T22:21:41.415Z","type":"message"}
{"nick":"tjfontaine","message":"sigh I thought what I was doing would apply to v0.10","date":"2013-05-24T22:21:57.841Z","type":"message"}
{"nick":"kazupon","date":"2013-05-24T22:22:58.907Z","type":"join"}
{"nick":"isaacs","message":"tjfontaine: oh?","date":"2013-05-24T22:24:21.731Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: pull req that i missed?","date":"2013-05-24T22:24:26.265Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: we can have a build next week","date":"2013-05-24T22:24:39.048Z","type":"message"}
{"nick":"tjfontaine","message":"no no","date":"2013-05-24T22:25:29.991Z","type":"message"}
{"nick":"tjfontaine","message":"just what I had been doing on the test fixes I thought would apply relatively cleanly to v0.10","date":"2013-05-24T22:26:15.692Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2013-05-24T22:27:25.757Z","type":"quit"}
{"nick":"isaacs","message":"ahh","date":"2013-05-24T22:28:14.226Z","type":"message"}
{"nick":"dshaw_","date":"2013-05-24T22:30:49.047Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #41 \u00037UNSTABLE\u000f windows-ia32 (9/587) windows-x64 (8/587) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/41/","date":"2013-05-24T22:37:22.485Z","type":"message"}
{"nick":"isaacs","message":"finally, uploading windows binaries","date":"2013-05-24T22:37:40.311Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-05-24T22:38:27.284Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f created tag v0.10.8 - http://git.io/7Ke2RA","date":"2013-05-24T22:43:49.520Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u0002f904d61\u0002 : blog: Post for v0.10.8 (+3 more commits) - http://git.io/hNmsNQ","date":"2013-05-24T22:46:13.525Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #213 \u00037UNSTABLE\u000f linux-x64 (1/587) osx-x64 (2/587) osx-ia32 (3/587) smartos-x64 (4/587) smartos-ia32 (4/587) linux-ia32 (1/587) http://jenkins.nodejs.org/job/nodejs-v0.10/213/","date":"2013-05-24T22:57:36.614Z","type":"message"}
{"nick":"isaacs","action":"gotta run out for a big","date":"2013-05-24T23:04:19.035Z","type":"action"}
{"nick":"isaacs","message":"*bit","date":"2013-05-24T23:04:20.664Z","type":"message"}
{"nick":"isaacs","action":"&","date":"2013-05-24T23:04:22.447Z","type":"action"}
{"nick":"LOUDBOT","message":"WHAT THE NIGGER WHY ISN'T OP WORKING","date":"2013-05-24T23:04:22.866Z","type":"message"}
{"nick":"mikeal","date":"2013-05-24T23:04:54.615Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #42 \u00037UNSTABLE\u000f windows-ia32 (8/587) windows-x64 (8/587) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/42/","date":"2013-05-24T23:05:39.710Z","type":"message"}
{"nick":"tjfontaine","message":"LOUDBOT: shame on you","date":"2013-05-24T23:05:47.705Z","type":"message"}
{"nick":"LOUDBOT","message":"tjfontaine: WHITNEY'S DEAD? DO ALL THE DRUGS!","date":"2013-05-24T23:05:48.131Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-05-24T23:14:19.856Z","type":"quit"}
{"nick":"dshaw_","date":"2013-05-24T23:15:45.421Z","type":"join"}
{"nick":"bnoordhuis","message":"so... i observe that node often closes tcp handles before the shutdown req is finished","date":"2013-05-24T23:17:16.198Z","type":"message"}
{"nick":"bnoordhuis","message":"that's okay but for some reason it only seems to happen on os x, not linux","date":"2013-05-24T23:17:32.089Z","type":"message"}
{"nick":"bnoordhuis","message":"not sure what to make of that","date":"2013-05-24T23:17:45.038Z","type":"message"}
{"nick":"tjfontaine","message":"would that manifest itself at times as a rst to the other side of the connection?","date":"2013-05-24T23:18:05.091Z","type":"message"}
{"nick":"bnoordhuis","message":"hm no, don't think so - the shutdown(2) syscall itself has been issued, it's just that the shutdown req hasn't run to completion yet","date":"2013-05-24T23:19:10.483Z","type":"message"}
{"nick":"bnoordhuis","message":"iow, its cb hasn't been called yet","date":"2013-05-24T23:19:18.287Z","type":"message"}
{"nick":"tjfontaine","message":"right","date":"2013-05-24T23:19:35.070Z","type":"message"}
{"nick":"bnoordhuis","message":"ah... guess it happens on linux as well - but only in debug builds","date":"2013-05-24T23:22:10.349Z","type":"message"}
{"nick":"bnoordhuis","message":"ergo, it's probably some timing issue","date":"2013-05-24T23:22:28.798Z","type":"message"}
{"nick":"bnoordhuis","message":"seeing that os x is slow as molasses, it's probably more visible there","date":"2013-05-24T23:22:54.712Z","type":"message"}
{"nick":"kazupon","date":"2013-05-24T23:23:43.548Z","type":"join"}
{"nick":"tjfontaine","message":"right","date":"2013-05-24T23:23:47.909Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-05-24T23:28:31.514Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037v0.10\u000f * \u0002636a13b\u0002 : unix: fix stream refcounting buglet - http://git.io/n06Yfw","date":"2013-05-24T23:37:58.853Z","type":"message"}
{"nick":"tjfontaine","message":"this is the one before that made node tests unhappy?","date":"2013-05-24T23:39:32.479Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10\u0002: #75 \u00037UNSTABLE\u000f smartos (2/186) windows (4/187) http://jenkins.nodejs.org/job/libuv-v0.10/75/","date":"2013-05-24T23:40:18.865Z","type":"message"}
{"nick":"kazupon","date":"2013-05-24T23:40:32.482Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-v0.10-gyp\u0002: #39 \u00037UNSTABLE\u000f smartos-x64 (2/186) osx-ia32 (1/187) windows-x64 (3/187) smartos-ia32 (2/186) linux-ia32 (3/186) windows-ia32 (3/187) http://jenkins.nodejs.org/job/libuv-v0.10-gyp/39/","date":"2013-05-24T23:44:54.897Z","type":"message"}
{"nick":"hueniverse","reason":"Read error: Connection reset by peer","date":"2013-05-24T23:45:05.866Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-05-24T23:49:55.854Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #69 \u00037UNSTABLE\u000f linux-ia32 (1/587) smartos-ia32 (3/587) osx-x64 (3/587) osx-ia32 (3/587) linux-x64 (2/587) smartos-x64 (4/587) http://jenkins.nodejs.org/job/libuv-node-integration/69/","date":"2013-05-24T23:56:09.972Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: hmm that seems to break test-stdout-close-catch","date":"2013-05-24T23:57:23.890Z","type":"message"}
{"nick":"tjfontaine","message":"# node: ../deps/uv/src/unix/stream.c:731: uv__write: Assertion `stream->write_queue_size == 0' failed.","date":"2013-05-24T23:57:39.057Z","type":"message"}
{"nick":"tjfontaine","message":"# Aborted (core dumped)","date":"2013-05-24T23:57:42.074Z","type":"message"}
