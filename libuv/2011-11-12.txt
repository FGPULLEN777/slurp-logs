{"nick":"ryah","message":"[24:14|% 100|+ 633|-   5]: Done ","date":"2011-11-12T00:00:39.041Z","type":"message"}
{"nick":"ryah","message":"^-- linux. ben, good job.","date":"2011-11-12T00:00:44.429Z","type":"message"}
{"nick":"sh1mmer_","date":"2011-11-12T00:03:18.932Z","type":"join"}
{"nick":"ryah","message":"indutny: you there?","date":"2011-11-12T00:03:29.082Z","type":"message"}
{"nick":"sh1mmer","reason":"Ping timeout: 255 seconds","date":"2011-11-12T00:04:52.239Z","type":"quit"}
{"nick":"sh1mmer_","new_nick":"sh1mmer","date":"2011-11-12T00:04:52.455Z","type":"nick"}
{"nick":"isaacs","message":"igorzi_: you fixed that readdir issue?","date":"2011-11-12T00:07:21.497Z","type":"message"}
{"nick":"isaacs","message":"oh, i see, you commented, nvm","date":"2011-11-12T00:07:33.479Z","type":"message"}
{"nick":"isaacs","message":"just saw https://github.com/joyent/node/issues/2075","date":"2011-11-12T00:07:39.485Z","type":"message"}
{"nick":"igorzi_","message":"isaacs: yep.. lmk if you still see issues with readdir","date":"2011-11-12T00:10:47.435Z","type":"message"}
{"nick":"isaacs","message":"igorzi_: thanks!","date":"2011-11-12T00:10:55.150Z","type":"message"}
{"nick":"dap","message":"hey ryah, have you heard from any of the V8 guys about the postmortem stuff?","date":"2011-11-12T00:31:21.797Z","type":"message"}
{"nick":"ryah","message":"dap, nope im going to write them now","date":"2011-11-12T00:36:39.807Z","type":"message"}
{"nick":"dap","message":"cool","date":"2011-11-12T00:44:30.330Z","type":"message"}
{"nick":"AvianFlu","reason":"Quit: Leaving","date":"2011-11-12T00:52:27.347Z","type":"quit"}
{"nick":"mraleph","date":"2011-11-12T01:02:19.137Z","type":"join"}
{"nick":"ryah","message":"mraleph: the problem with coroutines, if you dont mind me saying","date":"2011-11-12T01:35:55.412Z","type":"message"}
{"nick":"ryah","message":"mraleph: is that state changes arbitrarally across any function call","date":"2011-11-12T01:36:20.751Z","type":"message"}
{"nick":"creationix","reason":"Ping timeout: 258 seconds","date":"2011-11-12T01:37:46.094Z","type":"quit"}
{"nick":"mraleph","message":"well","date":"2011-11-12T01:38:28.633Z","type":"message"}
{"nick":"mraleph","message":"if you have a callback","date":"2011-11-12T01:38:38.935Z","type":"message"}
{"nick":"mraleph","message":"and you call something from your callback state can also change in strange ways.","date":"2011-11-12T01:38:59.986Z","type":"message"}
{"nick":"mraleph","message":"with callbacks it's even more interesting… if you write foo(function () { … }) you don't even know when the function will be invoked… is it going to happen now? it is going to happen later? will try catch catch something, will it not? etc-etc-etc.","date":"2011-11-12T01:40:39.570Z","type":"message"}
{"nick":"mraleph","message":"so I don't really believe that callbacks make anything much easier to reason about. they are not restricted or isolated in any way (and so are coroutines)","date":"2011-11-12T01:41:17.373Z","type":"message"}
{"nick":"rmustacc","message":"How many threads of operation are in each model that you're describing?","date":"2011-11-12T01:42:52.711Z","type":"message"}
{"nick":"mraleph","message":"1","date":"2011-11-12T01:47:46.372Z","type":"message"}
{"nick":"mraleph","message":"well that depends what do you mean by thread.","date":"2011-11-12T01:48:06.491Z","type":"message"}
{"nick":"rmustacc","message":"Let's just say this is Javascript. How many threads would be concurrently executing Javascript?","date":"2011-11-12T01:48:39.038Z","type":"message"}
{"nick":"mraleph","message":"I would say: there is a single thing running simultaneously in both models.","date":"2011-11-12T01:48:39.422Z","type":"message"}
{"nick":"rmustacc","message":"Okay.","date":"2011-11-12T01:48:52.595Z","type":"message"}
{"nick":"ryah","message":"mraleph: callbacks make it clear to the user that state can change arbitrarally","date":"2011-11-12T01:50:02.739Z","type":"message"}
{"nick":"ryah","message":"mraleph: the problem is that coroutines do not make it clear","date":"2011-11-12T01:50:14.398Z","type":"message"}
{"nick":"ryah","message":"the user cannot make mental assumptions","date":"2011-11-12T01:50:21.912Z","type":"message"}
{"nick":"ryah","message":"rmustacc: one os thread, many call stacks","date":"2011-11-12T01:51:15.096Z","type":"message"}
{"nick":"mraleph","message":"I don't get it. what's the difference between code: function foo() { bar(); baz(); } in two models of computation? users has to go and look at what bar() and baz() do to reason about the code in both cases.","date":"2011-11-12T01:51:45.607Z","type":"message"}
{"nick":"ryah","message":"if you allow coroutines any function call can yield - allowing state to change by the time it returns","date":"2011-11-12T01:52:51.355Z","type":"message"}
{"nick":"ryah","message":"that cannot happen in node","date":"2011-11-12T01:52:55.110Z","type":"message"}
{"nick":"ryah","message":"well obviously a fucntion can change the state of a program itself - but with coroutines undetermined state changes happen","date":"2011-11-12T01:53:43.212Z","type":"message"}
{"nick":"ryah","message":"in node if i call somemodule.somefunction()","date":"2011-11-12T01:54:17.902Z","type":"message"}
{"nick":"ryah","message":"i know that only somemodule.somefunction is going to run","date":"2011-11-12T01:54:25.938Z","type":"message"}
{"nick":"ryah","message":"by the time it returns","date":"2011-11-12T01:54:33.487Z","type":"message"}
{"nick":"mraleph","message":"exactly, that's my point: function can chage the state -> so to determine what function changes you have to go and look","date":"2011-11-12T01:54:35.970Z","type":"message"}
{"nick":"mraleph","message":"at that function and everything that it calls.","date":"2011-11-12T01:54:50.152Z","type":"message"}
{"nick":"ryah","message":"yes","date":"2011-11-12T01:54:52.681Z","type":"message"}
{"nick":"ryah","message":"not true in coroutines","date":"2011-11-12T01:55:00.375Z","type":"message"}
{"nick":"ryah","message":"anything can run","date":"2011-11-12T01:55:08.357Z","type":"message"}
{"nick":"mraleph","message":"now when you see yield you just assume that it changes anything.","date":"2011-11-12T01:55:22.003Z","type":"message"}
{"nick":"mraleph","message":"and you are done.","date":"2011-11-12T01:55:30.524Z","type":"message"}
{"nick":"ryah","message":"if you're forced to push the yield all the way out","date":"2011-11-12T01:55:50.745Z","type":"message"}
{"nick":"brson","reason":"Quit: leaving","date":"2011-11-12T01:55:54.975Z","type":"quit"}
{"nick":"ryah","message":"how is it done in lua?","date":"2011-11-12T01:56:18.241Z","type":"message"}
{"nick":"ryah","message":"can i wrap a function which calls yield and call it without using yield?","date":"2011-11-12T01:56:48.165Z","type":"message"}
{"nick":"mraleph","message":"function cbstyle() { bar(); nextTick(function() { baz(); }); } vs function corostyle() { bar(); yield(); baz(); } <- in both cases you have to assume that baz() executes in completely unknown environment… and you can only rely on locals….","date":"2011-11-12T01:57:29.120Z","type":"message"}
{"nick":"mraleph","message":"ryah what do you mean?","date":"2011-11-12T01:57:34.516Z","type":"message"}
{"nick":"ryah","message":"cbstyle(); /* here i know my state */","date":"2011-11-12T01:58:04.154Z","type":"message"}
{"nick":"ryah","message":"corostyle(); /* here i have no idea */","date":"2011-11-12T01:58:18.195Z","type":"message"}
{"nick":"mraleph","message":"yes that is true.","date":"2011-11-12T01:58:54.450Z","type":"message"}
{"nick":"ryah","message":"knowing the state is important...","date":"2011-11-12T01:59:10.778Z","type":"message"}
{"nick":"mraleph","message":"but you know your state only if you go and look inside cbstyle","date":"2011-11-12T01:59:12.243Z","type":"message"}
{"nick":"mraleph","message":"deeeeep inside","date":"2011-11-12T01:59:19.164Z","type":"message"}
{"nick":"ryah","message":"sure","date":"2011-11-12T01:59:22.881Z","type":"message"}
{"nick":"ryah","message":"im calling a function i trust that it does what it says","date":"2011-11-12T01:59:38.809Z","type":"message"}
{"nick":"ryah","message":"that's fine","date":"2011-11-12T01:59:40.191Z","type":"message"}
{"nick":"ryah","message":"We have to fight chaos, and the most effective way of doing that is to prevent its emergence.","date":"2011-11-12T02:02:46.222Z","type":"message"}
{"nick":"ryah","message":"(Edsger Dijkstra)","date":"2011-11-12T02:03:02.395Z","type":"message"}
{"nick":"mraleph","message":"the thing is that in coroutine style programming the place after call to corostyle() would be the same place that in callback style programming sits in callback that is passed into cbstyle()… so there would be no difference in knowledge about state.","date":"2011-11-12T02:03:08.075Z","type":"message"}
{"nick":"mraleph","message":"[well there is no callback passes to cbstyle in my example, but usually there will be one or something].","date":"2011-11-12T02:03:42.180Z","type":"message"}
{"nick":"ryah","message":"mraleph: in the nextTick you do not know your state, that's true","date":"2011-11-12T02:03:45.306Z","type":"message"}
{"nick":"ryah","message":"but hopefully the syntatic difference from a function call makes it clear to the user","date":"2011-11-12T02:04:01.935Z","type":"message"}
{"nick":"mraleph","message":"function cbstyle(next) { bar(); nextTick(function() { baz(next); }); }","date":"2011-11-12T02:04:16.559Z","type":"message"}
{"nick":"ryah","message":"my point is in any arbitrary function call, once you allow coroutines, the user is potentially in the next tick","date":"2011-11-12T02:04:49.097Z","type":"message"}
{"nick":"ryah","message":"it's nice to know when you've shifted time","date":"2011-11-12T02:05:08.886Z","type":"message"}
{"nick":"ryah","message":"this is not something to abstract away","date":"2011-11-12T02:05:29.896Z","type":"message"}
{"nick":"ryah","message":"mraleph: do you think you guys can have a call next week?","date":"2011-11-12T02:08:33.747Z","type":"message"}
{"nick":"mraleph","message":"I see what you mean but I consider assumption that any call is a potential yield to be a worthy tradeoff for a linear representation of the program.","date":"2011-11-12T02:09:56.984Z","type":"message"}
{"nick":"mraleph","message":"call?","date":"2011-11-12T02:10:00.757Z","type":"message"}
{"nick":"dap","message":"ryah: code explicitness++ :)","date":"2011-11-12T02:10:34.723Z","type":"message"}
{"nick":"dap","message":"mraleph: did you see my mail to v8-users?","date":"2011-11-12T02:10:40.775Z","type":"message"}
{"nick":"mraleph","message":"dap: yes :-)","date":"2011-11-12T02:10:53.683Z","type":"message"}
{"nick":"dap","message":"any thoughts?","date":"2011-11-12T02:11:00.901Z","type":"message"}
{"nick":"mraleph","message":"dap:but I don't know what to say :-)","date":"2011-11-12T02:11:05.386Z","type":"message"}
{"nick":"ryah","message":"mraleph: call regarding how to export the various offsets and stuff that dap needs for his dtrace/mdb work","date":"2011-11-12T02:11:28.582Z","type":"message"}
{"nick":"ryah","message":"mraleph: i just sent you and erik an email","date":"2011-11-12T02:11:38.062Z","type":"message"}
{"nick":"mraleph","message":"dap: I understand why it's needed for postmortem stuff but it looks a bit ugly I must admit.","date":"2011-11-12T02:12:05.799Z","type":"message"}
{"nick":"dap","message":"Believe me, I don't disagree.  I'm open to other solutions.  That was the least invasive thing I could come up with.  I was hoping to minimize the maintenance burden.","date":"2011-11-12T02:12:53.158Z","type":"message"}
{"nick":"mraleph","message":"I will try to think about it. ","date":"2011-11-12T02:14:16.743Z","type":"message"}
{"nick":"dap","message":"mraleph: that would be great.  FWIW, today I was able to print out fast object properties:","date":"2011-11-12T02:16:15.422Z","type":"message"}
{"nick":"dap","message":"https://skitch.com/dapsays/gebm2/jsobj-2","date":"2011-11-12T02:16:21.277Z","type":"message"}
{"nick":"mraleph","message":"\\o/","date":"2011-11-12T02:16:38.666Z","type":"message"}
{"nick":"dap","message":"that allowed us to reproduce from this core file a nasty bug we've only seen twice, both times in production, but which has brought down one of our services in production both times.","date":"2011-11-12T02:16:52.358Z","type":"message"}
{"nick":"mraleph","message":"nice","date":"2011-11-12T02:17:41.718Z","type":"message"}
{"nick":"dap","message":"needless to say, we're pretty excited about this :)","date":"2011-11-12T02:18:42.178Z","type":"message"}
{"nick":"indutny","message":"ryah: yep","date":"2011-11-12T02:18:56.236Z","type":"message"}
{"nick":"indutny","message":"just woke up","date":"2011-11-12T02:19:02.766Z","type":"message"}
{"nick":"dap","message":"of course, the mechanism doesn't matter as long as we can solve this problem.","date":"2011-11-12T02:19:15.592Z","type":"message"}
{"nick":"mraleph","message":"indutny: did you try revert?","date":"2011-11-12T02:19:16.650Z","type":"message"}
{"nick":"indutny","message":"mraleph: sorry, not yet","date":"2011-11-12T02:19:30.140Z","type":"message"}
{"nick":"isaacs","message":"mraleph: hey!","date":"2011-11-12T02:19:55.315Z","type":"message"}
{"nick":"isaacs","message":"you'er that guy from twitter!","date":"2011-11-12T02:20:00.598Z","type":"message"}
{"nick":"isaacs","message":":)","date":"2011-11-12T02:20:02.722Z","type":"message"}
{"nick":"indutny","message":"lol :D","date":"2011-11-12T02:20:54.433Z","type":"message"}
{"nick":"indutny","message":"isaacs: same about you","date":"2011-11-12T02:20:59.689Z","type":"message"}
{"nick":"dap","message":"ryah, mraleph: got to run.  looking forward to discussing this next week! :)","date":"2011-11-12T02:21:27.138Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2011-11-12T02:21:31.619Z","type":"quit"}
{"nick":"mraleph","message":"isaacs: :-) but you are not… that guy is 2 letters shorter.","date":"2011-11-12T02:21:36.937Z","type":"message"}
{"nick":"mraleph","message":"3 letters","date":"2011-11-12T02:21:46.048Z","type":"message"}
{"nick":"isaacs","message":"mraleph: @isaacs is a musician in LA","date":"2011-11-12T02:21:47.990Z","type":"message"}
{"nick":"isaacs","message":"mraleph: i've offered him cash for his twitter name and he ignores me.","date":"2011-11-12T02:21:58.417Z","type":"message"}
{"nick":"isaacs","message":"he tweets once every 6 months to keep his account active.","date":"2011-11-12T02:22:05.705Z","type":"message"}
{"nick":"isaacs","message":"total dick.","date":"2011-11-12T02:22:07.249Z","type":"message"}
{"nick":"ryah","message":"indutny: i was wondering if you were interested in reviewing this code: https://github.com/joyent/node/pull/2063","date":"2011-11-12T02:22:33.583Z","type":"message"}
{"nick":"indutny","message":"ryah: wow, interesting","date":"2011-11-12T02:23:11.346Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2011-11-12T02:23:25.496Z","type":"message"}
{"nick":"ryah","message":"it's pretty cool actually","date":"2011-11-12T02:25:02.627Z","type":"message"}
{"nick":"indutny","message":"ryah: yes, but I need some time to review it","date":"2011-11-12T02:31:33.558Z","type":"message"}
{"nick":"indutny","message":"sorry, gtg","date":"2011-11-12T02:31:38.852Z","type":"message"}
{"nick":"indutny","message":"ttyl","date":"2011-11-12T02:31:41.814Z","type":"message"}
{"nick":"erickt","reason":"Quit: erickt","date":"2011-11-12T02:33:04.239Z","type":"quit"}
{"nick":"isaacs","reason":"Quit: isaacs","date":"2011-11-12T02:53:43.145Z","type":"quit"}
{"nick":"mraleph","reason":"Quit: Leaving.","date":"2011-11-12T03:10:47.435Z","type":"quit"}
{"nick":"creationix","date":"2011-11-12T04:07:25.189Z","type":"join"}
{"nick":"creationix","reason":"Ping timeout: 240 seconds","date":"2011-11-12T04:14:06.048Z","type":"quit"}
{"nick":"AvianFlu","date":"2011-11-12T04:21:08.867Z","type":"join"}
{"nick":"erickt","date":"2011-11-12T04:53:25.452Z","type":"join"}
{"nick":"rmustacc","date":"2011-11-12T06:07:53.207Z","type":"part"}
{"nick":"erickt","reason":"Quit: erickt","date":"2011-11-12T07:00:11.784Z","type":"quit"}
{"nick":"sh1mmer","reason":"Quit: sh1mmer","date":"2011-11-12T10:02:46.951Z","type":"quit"}
{"nick":"bnoordhuis","date":"2011-11-12T10:41:36.056Z","type":"join"}
{"nick":"mraleph","date":"2011-11-12T10:42:02.960Z","type":"join"}
{"nick":"mraleph","reason":"Quit: Leaving.","date":"2011-11-12T10:57:00.331Z","type":"quit"}
{"nick":"mraleph","date":"2011-11-12T11:07:40.051Z","type":"join"}
{"nick":"mraleph","reason":"Quit: Leaving.","date":"2011-11-12T12:24:24.331Z","type":"quit"}
{"nick":"mraleph","date":"2011-11-12T12:25:06.053Z","type":"join"}
{"nick":"CIA-95","message":"\u0002node:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u0002098fef6\u000f \u000310\u000f/ (lib/timers.js test/simple/test-timers-zero-timeout.js)\u0002:\u000f ","date":"2011-11-12T12:33:20.396Z","type":"message"}
{"nick":"CIA-95","message":"\u0002node:\u000f timers: remember extra setTimeout() arguments when timeout==0","date":"2011-11-12T12:33:20.611Z","type":"message"}
{"nick":"CIA-95","message":"\u0002node:\u000f Fixes #2079. - http://git.io/q8tcPw","date":"2011-11-12T12:33:20.611Z","type":"message"}
{"nick":"creationix","date":"2011-11-12T13:39:06.570Z","type":"join"}
{"nick":"erickt","date":"2011-11-12T15:12:47.866Z","type":"join"}
{"nick":"creationix","reason":"Ping timeout: 258 seconds","date":"2011-11-12T16:07:33.132Z","type":"quit"}
{"nick":"isaacs","date":"2011-11-12T16:34:57.141Z","type":"join"}
{"nick":"creationix","date":"2011-11-12T16:50:21.157Z","type":"join"}
{"nick":"isaacs","reason":"Quit: isaacs","date":"2011-11-12T17:09:42.907Z","type":"quit"}
{"nick":"erickt","reason":"Quit: erickt","date":"2011-11-12T17:35:02.134Z","type":"quit"}
{"nick":"indutny","message":"ryah: sorry, just got back","date":"2011-11-12T18:26:01.652Z","type":"message"}
{"nick":"mraleph","reason":"Quit: Leaving.","date":"2011-11-12T18:27:38.289Z","type":"quit"}
{"nick":"mraleph","date":"2011-11-12T18:28:05.049Z","type":"join"}
{"nick":"bnoordhuis","message":"indutny: don't worry, it's been a quiet day","date":"2011-11-12T18:53:39.504Z","type":"message"}
{"nick":"indutny","message":":)","date":"2011-11-12T18:55:19.866Z","type":"message"}
{"nick":"indutny","message":"I see it by log","date":"2011-11-12T18:55:22.849Z","type":"message"}
{"nick":"indutny","message":"anyway","date":"2011-11-12T18:55:52.499Z","type":"message"}
{"nick":"indutny","message":"going to sleep","date":"2011-11-12T18:55:54.887Z","type":"message"}
{"nick":"indutny","message":"ttyl","date":"2011-11-12T18:55:57.766Z","type":"message"}
{"nick":"isaacs","date":"2011-11-12T19:09:48.135Z","type":"join"}
{"nick":"sh1mmer","date":"2011-11-12T19:25:08.123Z","type":"join"}
{"nick":"sh1mmer","reason":"Quit: sh1mmer","date":"2011-11-12T19:30:09.464Z","type":"quit"}
{"nick":"CIA-95","message":"\u0002node:\u000f \u000303seebees\u000f \u000307master\u000f * r\u0002b00f5e2\u000f \u000310\u000f/ test/simple/test-repl-tab-complete.js \u0002:\u000f ","date":"2011-11-12T19:36:11.192Z","type":"message"}
{"nick":"CIA-95","message":"\u0002node:\u000f Tab Compete test for node REPL","date":"2011-11-12T19:36:11.414Z","type":"message"}
{"nick":"CIA-95","message":"\u0002node:\u000f Currently the REPL only tab completes for globally scoped variables - http://git.io/t2p8sg","date":"2011-11-12T19:36:11.414Z","type":"message"}
{"nick":"CIA-95","message":"\u0002node:\u000f \u000303seebees\u000f \u000307master\u000f * r\u00023421f43\u000f \u000310\u000f/ (3 files in 2 dirs)\u0002:\u000f (log message trimmed)","date":"2011-11-12T19:36:12.313Z","type":"message"}
{"nick":"CIA-95","message":"\u0002node:\u000f .load, .save and local scope tab completion","date":"2011-11-12T19:36:12.534Z","type":"message"}
{"nick":"CIA-95","message":"\u0002node:\u000f Fixes #2063.","date":"2011-11-12T19:36:12.534Z","type":"message"}
{"nick":"CIA-95","message":"\u0002node:\u000f REPLServer.prototype.resetContext:","date":"2011-11-12T19:36:13.229Z","type":"message"}
{"nick":"CIA-95","message":"\u0002node:\u000f Reset the line cache","date":"2011-11-12T19:36:13.445Z","type":"message"}
{"nick":"CIA-95","message":"\u0002node:\u000f REPLServer.prototype.memory (don't know if I like that name, called from finish)","date":"2011-11-12T19:36:14.259Z","type":"message"}
{"nick":"CIA-95","message":"\u0002node:\u000f pushes what cmd's have been executed against it into this.lines","date":"2011-11-12T19:36:14.473Z","type":"message"}
{"nick":"ryah","message":"indutny: thanks for the review","date":"2011-11-12T19:36:20.496Z","type":"message"}
{"nick":"creationix","reason":"Ping timeout: 256 seconds","date":"2011-11-12T19:58:42.224Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2011-11-12T20:10:54.132Z","type":"quit"}
{"nick":"bnoordhuis","date":"2011-11-12T20:13:00.048Z","type":"join"}
{"nick":"isaacs","reason":"Quit: isaacs","date":"2011-11-12T20:17:20.362Z","type":"quit"}
{"nick":"ryah","message":"bnoordhuis: next week we'll start on isolates","date":"2011-11-12T20:26:16.809Z","type":"message"}
{"nick":"ryah","message":"i guess the openssl mutex stuff was already directed towards that","date":"2011-11-12T20:26:30.988Z","type":"message"}
{"nick":"isaacs","date":"2011-11-12T20:56:07.983Z","type":"join"}
{"nick":"isaacs","reason":"Quit: isaacs","date":"2011-11-12T21:24:47.471Z","type":"quit"}
{"nick":"bnoordhuis","message":"ryah: actually that mutex stuff fixed an existing bug :)","date":"2011-11-12T21:30:51.867Z","type":"message"}
{"nick":"bnoordhuis","message":"do you have something of a plan / approach / idea on how to implement isolates?","date":"2011-11-12T21:31:44.588Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 260 seconds","date":"2011-11-12T21:33:30.886Z","type":"quit"}
{"nick":"ryah","message":"bnoordhuis: we should use clone(2) for uv_spawn if we're spawning ourselves","date":"2011-11-12T21:37:04.413Z","type":"message"}
{"nick":"ryah","message":"bnoordhuis: not really.","date":"2011-11-12T21:37:37.876Z","type":"message"}
{"nick":"ryah","message":"bnoordhuis: we need to make an object which represents a node instance","date":"2011-11-12T21:37:52.069Z","type":"message"}
{"nick":"ryah","message":"then we need to have a NodeIsolate* node::Create();","date":"2011-11-12T21:39:00.198Z","type":"message"}
{"nick":"bnoordhuis","message":"ryah: fork() and pthread_create() use clone() on linux","date":"2011-11-12T21:39:58.741Z","type":"message"}
{"nick":"bnoordhuis","message":"you probably meant to say that we should pass more appropriate flags to clone","date":"2011-11-12T21:40:38.397Z","type":"message"}
{"nick":"bnoordhuis","message":"are we going to stuff everything that's global now in the NodeIsolate?","date":"2011-11-12T21:41:16.190Z","type":"message"}
{"nick":"ryah","message":"yeah","date":"2011-11-12T21:42:43.424Z","type":"message"}
{"nick":"sh1mmer","date":"2011-11-12T21:46:16.203Z","type":"join"}
{"nick":"AvianFlu","date":"2011-11-12T21:47:02.241Z","type":"join"}
{"nick":"erickt","date":"2011-11-12T21:58:05.163Z","type":"join"}
{"nick":"creationix","date":"2011-11-12T22:00:19.433Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2011-11-12T22:21:18.049Z","type":"quit"}
{"nick":"mraleph","message":"isolates, interesting :-)","date":"2011-11-12T22:50:25.927Z","type":"message"}
{"nick":"creationix","reason":"Remote host closed the connection","date":"2011-11-12T22:55:43.501Z","type":"quit"}
{"nick":"piscisaureus","message":"ryah> did you see the isolates patch that someone did for an android port_","date":"2011-11-12T22:56:36.394Z","type":"message"}
{"nick":"piscisaureus","message":"https://github.com/paddybyers/node/issues/16","date":"2011-11-12T23:00:14.825Z","type":"message"}
{"nick":"paddybyers","date":"2011-11-12T23:06:06.495Z","type":"join"}
{"nick":"erickt","reason":"Quit: erickt","date":"2011-11-12T23:11:45.083Z","type":"quit"}
{"nick":"ryah","message":"yes","date":"2011-11-12T23:11:52.158Z","type":"message"}
{"nick":"ryah","message":"i've been waiting until v0.6.1 to start doing this stuff","date":"2011-11-12T23:12:18.417Z","type":"message"}
