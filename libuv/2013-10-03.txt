{"nick":"ircretary","date":"2013-10-03T00:00:09.336Z","type":"join"}
{"nick":"tjfontaine","message":"it does do the right thing and call parent.on first","date":"2013-10-03T00:00:13.575Z","type":"message"}
{"nick":"othiym23","message":"I'm gonna have to step through and see where this.on gets overwritten","date":"2013-10-03T00:01:01.887Z","type":"message"}
{"nick":"tjfontaine","message":"shouldn't it be when the descendent class calls the parent constructor?","date":"2013-10-03T00:02:40.200Z","type":"message"}
{"nick":"wolfeidau","date":"2013-10-03T00:02:41.514Z","type":"join"}
{"nick":"tjfontaine","message":"or rather I guess from the inherits prototype","date":"2013-10-03T00:02:54.740Z","type":"message"}
{"nick":"othiym23","message":"*sigh*","date":"2013-10-03T00:04:47.158Z","type":"message"}
{"nick":"othiym23","message":"no, it's flowing mode","date":"2013-10-03T00:04:50.069Z","type":"message"}
{"nick":"othiym23","message":"sorry, old-style mode","date":"2013-10-03T00:05:54.591Z","type":"message"}
{"nick":"othiym23","message":"tjfontaine: https://github.com/joyent/node/blob/v0.10/lib/_stream_readable.js#L736-L739","date":"2013-10-03T00:06:02.274Z","type":"message"}
{"nick":"othiym23","message":"if only I didn't need to do this particular bit of monkeypunching","date":"2013-10-03T00:06:24.500Z","type":"message"}
{"nick":"tjfontaine","message":"oh oh","date":"2013-10-03T00:06:28.653Z","type":"message"}
{"nick":"tjfontaine","message":"yup now I see it in my `git grep`","date":"2013-10-03T00:06:51.290Z","type":"message"}
{"nick":"st_luke_","date":"2013-10-03T00:07:38.873Z","type":"join"}
{"nick":"tjfontaine","message":"othiym23: if it makes you feel better that doesn't happen in 0.11","date":"2013-10-03T00:07:44.733Z","type":"message"}
{"nick":"st_luke_","reason":"Read error: Connection reset by peer","date":"2013-10-03T00:07:45.215Z","type":"quit"}
{"nick":"st_luke","reason":"Read error: No route to host","date":"2013-10-03T00:08:03.787Z","type":"quit"}
{"nick":"tjfontaine","message":"because there be no more old mode","date":"2013-10-03T00:08:05.542Z","type":"message"}
{"nick":"othiym23","message":"tjfontaine: I see that","date":"2013-10-03T00:08:06.894Z","type":"message"}
{"nick":"othiym23","message":"that will help me at some distant point in the future","date":"2013-10-03T00:08:17.381Z","type":"message"}
{"nick":"tjfontaine","message":"streams2 is dead, long live streams3","date":"2013-10-03T00:08:17.602Z","type":"message"}
{"nick":"othiym23","message":"point of fact: since we reopened the beta yesterday, we've already gotten a couple of emails complaining we don't support 0.6","date":"2013-10-03T00:08:34.149Z","type":"message"}
{"nick":"tjfontaine","message":"><","date":"2013-10-03T00:08:41.954Z","type":"message"}
{"nick":"othiym23","message":"(o_o)-b","date":"2013-10-03T00:08:49.911Z","type":"message"}
{"nick":"othiym23","message":"here's the bug I'm trying to fix: https://github.com/newrelic/node-newrelic/issues/50","date":"2013-10-03T00:09:28.131Z","type":"message"}
{"nick":"othiym23","message":"it would help if I could actually force a repro","date":"2013-10-03T00:09:36.055Z","type":"message"}
{"nick":"tjfontaine","message":"ouch.","date":"2013-10-03T00:09:45.698Z","type":"message"}
{"nick":"trevnorris","message":"oh suck a duck.","date":"2013-10-03T00:11:29.106Z","type":"message"}
{"nick":"othiym23","message":"that sounds unhygienic","date":"2013-10-03T00:12:25.903Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: so know how we had to create that new object in runAsyncQueue because the domain field was changing.","date":"2013-10-03T00:13:03.417Z","type":"message"}
{"nick":"trevnorris","message":"well now that means I can't use the object itself as the key","date":"2013-10-03T00:13:16.814Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: from the C++ side?","date":"2013-10-03T00:14:00.000Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: from either side. process.removeAsyncListener looks for the same object in the current queue, and removes it. but since the queue is created when runAsyncQueue runs","date":"2013-10-03T00:14:44.439Z","type":"message"}
{"nick":"trevnorris","message":"all the objects there will be unique","date":"2013-10-03T00:14:49.030Z","type":"message"}
{"nick":"trevnorris","message":"so process.removeAsyncQueue is busted.","date":"2013-10-03T00:15:02.200Z","type":"message"}
{"nick":"trevnorris","message":"freakin a","date":"2013-10-03T00:15:04.689Z","type":"message"}
{"nick":"trevnorris","message":"guess I'll need to add a uid to each object and check those.","date":"2013-10-03T00:15:34.438Z","type":"message"}
{"nick":"trevnorris","message":"oy, so much sloer.","date":"2013-10-03T00:15:36.937Z","type":"message"}
{"nick":"trevnorris","message":"*slower","date":"2013-10-03T00:17:01.039Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: every object will be guaranteed to have at least a listener property / function, right?","date":"2013-10-03T00:17:25.291Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: yeah","date":"2013-10-03T00:17:41.790Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: but you can reuse the same listener callback for many items. same with the callbacks object.","date":"2013-10-03T00:18:05.728Z","type":"message"}
{"nick":"othiym23","message":"right","date":"2013-10-03T00:18:11.306Z","type":"message"}
{"nick":"othiym23","message":"hm","date":"2013-10-03T00:18:14.142Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: what if you embedded the {listener, callbacks} object inside the individual listener objects?","date":"2013-10-03T00:18:51.663Z","type":"message"}
{"nick":"othiym23","message":"then you could key off those","date":"2013-10-03T00:18:55.990Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: hm. good point. but the question is where do you want the hit? you won't be running removeAsyncListener near as often as runAsyncQueue ","date":"2013-10-03T00:20:03.973Z","type":"message"}
{"nick":"trevnorris","message":"well, have to head. i'll fix these bugs tonight.","date":"2013-10-03T00:20:32.406Z","type":"message"}
{"nick":"othiym23","message":"tjfontaine: do you have any ideas on how to make this saner? https://gist.github.com/othiym23/6802613","date":"2013-10-03T00:20:51.632Z","type":"message"}
{"nick":"othiym23","message":"(if you've got a moment for a code review)","date":"2013-10-03T00:20:58.273Z","type":"message"}
{"nick":"tjfontaine","message":"looking","date":"2013-10-03T00:22:17.795Z","type":"message"}
{"nick":"qard","message":"I'm getting duplicate error events from domains. Is there something weird with my code? https://gist.github.com/Qard/fbdbd7bc239afa2eda04","date":"2013-10-03T00:24:45.138Z","type":"message"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-10-03T00:26:08.025Z","type":"quit"}
{"nick":"othiym23","message":"qard: the fact that you're throwing from the callback you're giving to reportError probably has something to do with that","date":"2013-10-03T00:26:39.695Z","type":"message"}
{"nick":"tjfontaine","message":"othiym23: painful, but nothing at the moment is coming to me as better","date":"2013-10-03T00:26:41.452Z","type":"message"}
{"nick":"othiym23","message":"qard: what are you trying to do?","date":"2013-10-03T00:26:46.471Z","type":"message"}
{"nick":"othiym23","message":"tjfontaine: k, thanks for looking","date":"2013-10-03T00:26:50.679Z","type":"message"}
{"nick":"qard","message":"Trying to delay the process death long enough to send the error to another server.","date":"2013-10-03T00:27:20.920Z","type":"message"}
{"nick":"tjfontaine","message":"I'm so sorry you have to work with it like this :)","date":"2013-10-03T00:27:22.142Z","type":"message"}
{"nick":"qard","message":"So the setTimeout would actually be some http request or something.","date":"2013-10-03T00:27:51.210Z","type":"message"}
{"nick":"qard","message":"Basically, an async call that will rethrow the error when it is done.","date":"2013-10-03T00:28:07.601Z","type":"message"}
{"nick":"qard","message":"So the process still dies as expected.","date":"2013-10-03T00:28:21.578Z","type":"message"}
{"nick":"qard","message":"And no, process.exit() is not a solution here.","date":"2013-10-03T00:28:40.902Z","type":"message"}
{"nick":"tjfontaine","message":"if you're really going for upstream reporting, shouldn't you have a first class callback from the reporter indicating it sent the message successfully?","date":"2013-10-03T00:29:17.206Z","type":"message"}
{"nick":"qard","message":"Trying to come up with a way to intercept errors while being transparent.","date":"2013-10-03T00:29:22.036Z","type":"message"}
{"nick":"qard","message":"So it should behave as if the domain wasn't even there, to the best capacity it can.","date":"2013-10-03T00:29:47.043Z","type":"message"}
{"nick":"tjfontaine","message":"but you're not being transparent of course, you're delaying a tick, from inside a domain, which means more state can mutate","date":"2013-10-03T00:30:18.230Z","type":"message"}
{"nick":"qard","message":"Yes, I'm aware of that.","date":"2013-10-03T00:30:49.766Z","type":"message"}
{"nick":"tjfontaine","message":"sounds like you want a reliable synchronous transport mechanism","date":"2013-10-03T00:30:58.204Z","type":"message"}
{"nick":"qard","message":"Trying to be as transparent as possible though.","date":"2013-10-03T00:30:59.096Z","type":"message"}
{"nick":"othiym23","message":"qard: another problem is using enter and exit like that, you probably just want d.run(function () { setTimeout...","date":"2013-10-03T00:31:08.733Z","type":"message"}
{"nick":"qard","message":"run doesn't work. It has to catch the top level.","date":"2013-10-03T00:31:27.603Z","type":"message"}
{"nick":"qard","message":"basically I need require('my-module') to catch everything running after it.","date":"2013-10-03T00:32:10.744Z","type":"message"}
{"nick":"othiym23","message":"qard: it sounds like what you're looking for is process.on('uncaughtException') ;)","date":"2013-10-03T00:33:04.271Z","type":"message"}
{"nick":"othiym23","message":"qard: if you had an uncaughtException handler that returned true with that setTimeout in it, it would probably be closer to what you want","date":"2013-10-03T00:33:27.578Z","type":"message"}
{"nick":"othiym23","message":"but everything is still going to be up for grabs once the first error handler fires","date":"2013-10-03T00:34:11.887Z","type":"message"}
{"nick":"qard","message":"I don't want to interfere with uncaughtException listeners someone else may have attached though.","date":"2013-10-03T00:34:13.734Z","type":"message"}
{"nick":"othiym23","message":"qard: then have your handler return false","date":"2013-10-03T00:34:33.447Z","type":"message"}
{"nick":"tjfontaine","message":"well, monkey patch the process.on I guess","date":"2013-10-03T00:34:37.456Z","type":"message"}
{"nick":"othiym23","message":"or monkeypatch process._fatalException if you're running 0.10 and feel like living dangerously","date":"2013-10-03T00:35:02.781Z","type":"message"}
{"nick":"tjfontaine","message":"right","date":"2013-10-03T00:35:09.791Z","type":"message"}
{"nick":"othiym23","message":"NOT THAT I KNOW ANYONE WHO DOES THAT *coughing fit*","date":"2013-10-03T00:35:10.958Z","type":"message"}
{"nick":"qard","message":"Basically, I want to catch the errors before they hit uncaughtException, report them, and return control back so they still hit uncaughtException as normally expected.","date":"2013-10-03T00:35:18.086Z","type":"message"}
{"nick":"othiym23","message":"qard: this is what the Airbrake module that was floating around tried to do, and it showed that there are a lot of subtle edge cases to this","date":"2013-10-03T00:36:18.149Z","type":"message"}
{"nick":"qard","message":"Yeah, it's proving to be a pretty awkward problem to solve.","date":"2013-10-03T00:36:53.964Z","type":"message"}
{"nick":"qard","message":"Just wondered if anyone had any ideas I hadn't thought of already.","date":"2013-10-03T00:37:11.242Z","type":"message"}
{"nick":"qard","message":"monkeypatching process._fatalException might be the way to go, as much as I dislike the idea...","date":"2013-10-03T00:37:48.939Z","type":"message"}
{"nick":"qard","message":"Then again, holding a process open while it's in a bad state probably isn't much better...","date":"2013-10-03T00:38:14.653Z","type":"message"}
{"nick":"tjfontaine","message":"ya this is risky business, not that I'm a tom cruise fan","date":"2013-10-03T00:38:42.412Z","type":"message"}
{"nick":"othiym23","message":"qard: I came up with a way to do this for the New Relic module, but it's really hard for me to disentangle the New Relic bits from the generic error-handling","date":"2013-10-03T00:38:45.979Z","type":"message"}
{"nick":"othiym23","message":"you can take a look at https://github.com/newrelic/node-newrelic/ for ideas if you like, though","date":"2013-10-03T00:38:57.404Z","type":"message"}
{"nick":"othiym23","message":"qard: lib/dominion.js and lib/errors.js are where the bulk of it is","date":"2013-10-03T00:39:16.412Z","type":"message"}
{"nick":"tjfontaine","message":"all licenses observed :)","date":"2013-10-03T00:39:28.610Z","type":"message"}
{"nick":"othiym23","message":"it's all known to work with at least 0.8 and 0.10, but it does some unhygienic stuff","date":"2013-10-03T00:39:32.937Z","type":"message"}
{"nick":"othiym23","message":"tjfontaine: the code's New Relic's, but the ideas are freeeeeeeeee","date":"2013-10-03T00:39:53.187Z","type":"message"}
{"nick":"tjfontaine","message":"yes, but it's weird","date":"2013-10-03T00:40:04.039Z","type":"message"}
{"nick":"othiym23","message":"tjfontaine: agreed, but that's the New Relic Way (tm)","date":"2013-10-03T00:40:19.311Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-10-03T00:40:30.446Z","type":"message"}
{"nick":"vptr","reason":"Disconnected by services","date":"2013-10-03T00:47:22.011Z","type":"quit"}
{"nick":"vptr","date":"2013-10-03T00:47:38.116Z","type":"join"}
{"nick":"vptr1","date":"2013-10-03T00:47:39.205Z","type":"join"}
{"nick":"vptr","message":"what is the correct way to build libuv if I want to have statically link it with my app?","date":"2013-10-03T00:49:33.958Z","type":"message"}
{"nick":"tjfontaine","message":"the most supported way is via gyp","date":"2013-10-03T00:50:10.464Z","type":"message"}
{"nick":"tjfontaine","message":"by default when you call gyp_uv it will build a static library version of libuv unless you specify -Dlibrary","date":"2013-10-03T00:51:11.920Z","type":"message"}
{"nick":"c4milo_","date":"2013-10-03T00:54:44.436Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 248 seconds","date":"2013-10-03T00:54:51.916Z","type":"quit"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-03T00:55:03.298Z","type":"quit"}
{"nick":"tjfontaine","message":"vptr: did that answer your question?","date":"2013-10-03T00:59:56.555Z","type":"message"}
{"nick":"vptr","message":"I was testing something","date":"2013-10-03T01:00:05.473Z","type":"message"}
{"nick":"tjfontaine","message":"k","date":"2013-10-03T01:00:08.062Z","type":"message"}
{"nick":"vptr","message":"so, here is the problem","date":"2013-10-03T01:00:08.795Z","type":"message"}
{"nick":"vptr","message":"I think I'm just stupid, but anyway. when I have the .a file I have all these unresolved symbols from the foundation framework on my mac","date":"2013-10-03T01:01:07.212Z","type":"message"}
{"nick":"vptr","message":"If I just build, install and link with -luv","date":"2013-10-03T01:01:42.805Z","type":"message"}
{"nick":"vptr","message":"I have no problems","date":"2013-10-03T01:01:45.661Z","type":"message"}
{"nick":"tjfontaine","message":"vptr: gist?","date":"2013-10-03T01:02:07.896Z","type":"message"}
{"nick":"vptr","message":"do shared objects include all other deps","date":"2013-10-03T01:02:08.689Z","type":"message"}
{"nick":"vptr","message":"http://codepad.org/IqfsYByE","date":"2013-10-03T01:04:07.196Z","type":"message"}
{"nick":"vptr","message":"It probably makes sense, since .a is just archive of .o files","date":"2013-10-03T01:04:36.581Z","type":"message"}
{"nick":"vptr","message":"It's just sucks that you have manually link against all this osx crap","date":"2013-10-03T01:05:21.706Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-10-03T01:06:32.794Z","type":"quit"}
{"nick":"qard","reason":"Quit: Leaving.","date":"2013-10-03T01:11:21.835Z","type":"quit"}
{"nick":"superjoe","reason":"Ping timeout: 246 seconds","date":"2013-10-03T01:13:31.944Z","type":"quit"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-10-03T01:23:45.052Z","type":"quit"}
{"nick":"austo","reason":"Quit: austo","date":"2013-10-03T01:26:59.200Z","type":"quit"}
{"nick":"abraxas","date":"2013-10-03T01:28:21.205Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-10-03T01:49:45.483Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-10-03T01:55:25.884Z","type":"join"}
{"nick":"c4milo_","reason":"Remote host closed the connection","date":"2013-10-03T01:55:37.160Z","type":"quit"}
{"nick":"TooTallNate","reason":"Client Quit","date":"2013-10-03T01:57:09.549Z","type":"quit"}
{"nick":"amartens","date":"2013-10-03T02:14:13.003Z","type":"join"}
{"nick":"amartens","reason":"Client Quit","date":"2013-10-03T02:14:59.232Z","type":"quit"}
{"nick":"mikeal","date":"2013-10-03T02:20:24.985Z","type":"join"}
{"nick":"austo","date":"2013-10-03T02:26:41.835Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 248 seconds","date":"2013-10-03T02:29:15.830Z","type":"quit"}
{"nick":"austo","reason":"Quit: austo","date":"2013-10-03T02:51:06.907Z","type":"quit"}
{"nick":"vptr","reason":"Quit: WeeChat 0.3.5","date":"2013-10-03T02:52:34.870Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-03T03:25:12.831Z","type":"join"}
{"nick":"mikeal","date":"2013-10-03T03:27:00.712Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 240 seconds","date":"2013-10-03T03:31:08.525Z","type":"quit"}
{"nick":"octetcloud","date":"2013-10-03T03:32:09.520Z","type":"join"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-10-03T03:36:18.612Z","type":"quit"}
{"nick":"inolen","date":"2013-10-03T03:36:37.878Z","type":"join"}
{"nick":"inolen1","date":"2013-10-03T03:36:50.724Z","type":"join"}
{"nick":"inolen1","reason":"Read error: Connection reset by peer","date":"2013-10-03T03:40:10.770Z","type":"quit"}
{"nick":"inolen","reason":"Ping timeout: 260 seconds","date":"2013-10-03T03:41:19.892Z","type":"quit"}
{"nick":"othiym23","message":"woo event emitter party, part two","date":"2013-10-03T03:47:46.656Z","type":"message"}
{"nick":"octetcloud","reason":"Ping timeout: 264 seconds","date":"2013-10-03T03:53:30.223Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-03T03:58:24.091Z","type":"join"}
{"nick":"julianduque","reason":"Quit: leaving","date":"2013-10-03T04:01:02.605Z","type":"quit"}
{"nick":"st_luke","date":"2013-10-03T04:03:40.128Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-10-03T04:09:17.953Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-03T04:19:09.593Z","type":"quit"}
{"nick":"mikeal","date":"2013-10-03T04:27:26.891Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 245 seconds","date":"2013-10-03T04:31:41.683Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-03T04:37:09.191Z","type":"nick"}
{"nick":"TooTallNate","date":"2013-10-03T04:44:18.285Z","type":"join"}
{"nick":"octetcloud","date":"2013-10-03T04:44:19.303Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-03T04:45:10.984Z","type":"nick"}
{"nick":"st_luke","date":"2013-10-03T04:49:23.660Z","type":"join"}
{"nick":"st_luke_","date":"2013-10-03T04:52:47.399Z","type":"join"}
{"nick":"st_luke","reason":"Read error: Connection reset by peer","date":"2013-10-03T04:52:58.892Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-03T04:54:02.049Z","type":"nick"}
{"nick":"othiym23","message":"at some point I'm going to corner the market on abusing try/finally","date":"2013-10-03T05:05:05.416Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-03T05:08:23.391Z","type":"nick"}
{"nick":"mikeal","date":"2013-10-03T05:09:00.063Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-10-03T05:09:20.640Z","type":"quit"}
{"nick":"st_luke_","reason":"Remote host closed the connection","date":"2013-10-03T05:10:08.208Z","type":"quit"}
{"nick":"mikeal","date":"2013-10-03T05:14:25.091Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-03T05:17:25.204Z","type":"nick"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-03T05:20:57.526Z","type":"nick"}
{"nick":"octetcloud","reason":"Ping timeout: 256 seconds","date":"2013-10-03T05:30:21.666Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-10-03T05:31:08.235Z","type":"quit"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2013-10-03T05:33:23.587Z","type":"quit"}
{"nick":"paddybyers","date":"2013-10-03T05:35:05.759Z","type":"join"}
{"nick":"c4milo","date":"2013-10-03T06:05:55.463Z","type":"join"}
{"nick":"bajtos","date":"2013-10-03T06:07:52.599Z","type":"join"}
{"nick":"bajtos","reason":"Client Quit","date":"2013-10-03T06:08:30.617Z","type":"quit"}
{"nick":"vptr1","reason":"Ping timeout: 240 seconds","date":"2013-10-03T06:27:08.486Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-10-03T06:40:38.180Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #240 \u00037UNSTABLE\u000f windows-ia32 (10/600) windows-x64 (7/600) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/240/","date":"2013-10-03T06:41:31.188Z","type":"message"}
{"nick":"`3E|ZZZ","new_nick":"`3rdEden","date":"2013-10-03T07:00:42.568Z","type":"nick"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-10-03T07:04:09.244Z","type":"quit"}
{"nick":"rendar","date":"2013-10-03T07:18:09.246Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-10-03T07:36:43.216Z","type":"join"}
{"nick":"hz","date":"2013-10-03T07:38:47.343Z","type":"join"}
{"nick":"kellabyte","reason":"Quit: Quit","date":"2013-10-03T07:54:22.586Z","type":"quit"}
