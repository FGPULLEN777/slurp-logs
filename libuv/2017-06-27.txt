{"nick":"icaas","date":"2017-06-27T02:40:20.059Z","type":"join"}
{"nick":"icaas","reason":"Client Quit","date":"2017-06-27T02:41:24.905Z","type":"quit"}
{"nick":"chrisdickinson_","reason":"Ping timeout: 260 seconds","date":"2017-06-27T05:14:28.593Z","type":"quit"}
{"nick":"chrisdickinson","date":"2017-06-27T05:15:46.613Z","type":"join"}
{"nick":"saghul","date":"2017-06-27T05:25:39.858Z","type":"join"}
{"nick":"saghul","reason":"Client Quit","date":"2017-06-27T05:25:39.972Z","type":"quit"}
{"nick":"dbeveniu-","date":"2017-06-27T05:37:14.182Z","type":"join"}
{"nick":"dbeveniu-","new_nick":"dbevenius_","date":"2017-06-27T05:37:31.240Z","type":"nick"}
{"nick":"dbevenius","reason":"Ping timeout: 260 seconds","date":"2017-06-27T05:39:10.860Z","type":"quit"}
{"nick":"saghul","date":"2017-06-27T05:41:55.143Z","type":"join"}
{"nick":"rendar","date":"2017-06-27T06:39:52.937Z","type":"join"}
{"nick":"isaacs_","reason":"Ping timeout: 276 seconds","date":"2017-06-27T07:39:39.945Z","type":"quit"}
{"nick":"isaacs","date":"2017-06-27T07:40:46.936Z","type":"join"}
{"nick":"mmalecki_","date":"2017-06-27T09:29:37.343Z","type":"join"}
{"nick":"euoia_","date":"2017-06-27T09:30:01.293Z","type":"join"}
{"nick":"tumdedum_","date":"2017-06-27T09:30:08.390Z","type":"join"}
{"nick":"tumdedum","reason":"*.net *.split","date":"2017-06-27T09:34:59.022Z","type":"quit"}
{"nick":"mmalecki","reason":"*.net *.split","date":"2017-06-27T09:34:59.136Z","type":"quit"}
{"nick":"euoia","reason":"*.net *.split","date":"2017-06-27T09:34:59.136Z","type":"quit"}
{"nick":"yawniek","reason":"*.net *.split","date":"2017-06-27T09:34:59.213Z","type":"quit"}
{"nick":"tumdedum_","new_nick":"tumdedum","date":"2017-06-27T09:35:16.614Z","type":"nick"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-06-27T10:25:11.471Z","type":"quit"}
{"nick":"mylesborins","date":"2017-06-27T10:25:41.885Z","type":"join"}
{"nick":"saghul","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-27T10:29:08.937Z","type":"quit"}
{"nick":"saghul","date":"2017-06-27T10:42:32.636Z","type":"join"}
{"nick":"Ovod","date":"2017-06-27T10:50:29.995Z","type":"join"}
{"nick":"Ovod","message":"Hello! Sorry for noob question. Is there a way to determine remote address before accepting connection and creating socket? I'm using tcp connection and cb function \"OnAccept\".","date":"2017-06-27T10:52:32.965Z","type":"message"}
{"nick":"saghul","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-27T10:52:38.657Z","type":"quit"}
{"nick":"Ovod","message":"And how to get remote address at least when connection ha been accepted?","date":"2017-06-27T10:54:49.350Z","type":"message"}
{"nick":"saghul","date":"2017-06-27T11:06:37.837Z","type":"join"}
{"nick":"sgimeno","message":"Ovod, afaik, you can't get the remote address before accepting the connection. You can use iptables to avoid remote connections from certain addresses","date":"2017-06-27T11:10:45.255Z","type":"message"}
{"nick":"sgimeno","message":"wrt the 2nd quesstion: https://github.com/libuv/libuv/blob/v1.x/test/test-getsockname.c#L127-L140","date":"2017-06-27T11:13:20.118Z","type":"message"}
{"nick":"Ovod","message":"thanks","date":"2017-06-27T12:07:51.730Z","type":"message"}
{"nick":"dbevenius_","new_nick":"dbevenius","date":"2017-06-27T12:11:53.178Z","type":"nick"}
{"nick":"Ovod","reason":"Ping timeout: 260 seconds","date":"2017-06-27T12:15:05.080Z","type":"quit"}
{"nick":"mmalecki_","new_nick":"mmalecki","date":"2017-06-27T13:59:12.670Z","type":"nick"}
{"nick":"saghul","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-27T15:56:37.893Z","type":"quit"}
{"nick":"Jacob843","reason":"Read error: Connection reset by peer","date":"2017-06-27T18:36:23.479Z","type":"quit"}
{"nick":"rendar","reason":"Ping timeout: 240 seconds","date":"2017-06-27T18:40:48.488Z","type":"quit"}
{"nick":"Jacob843","date":"2017-06-27T18:44:55.326Z","type":"join"}
{"nick":"rendar","date":"2017-06-27T19:10:21.744Z","type":"join"}
{"nick":"rendar","reason":"Changing host","date":"2017-06-27T19:10:21.744Z","type":"quit"}
{"nick":"rendar","date":"2017-06-27T19:10:21.744Z","type":"join"}
{"nick":"saghul","date":"2017-06-27T19:55:39.683Z","type":"join"}
{"nick":"saghul","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-06-27T20:49:20.745Z","type":"quit"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2017-06-27T21:10:56.019Z","type":"quit"}
{"nick":"joocain2_","date":"2017-06-27T22:35:34.967Z","type":"join"}
{"nick":"joocain2","reason":"Ping timeout: 248 seconds","date":"2017-06-27T22:38:41.752Z","type":"quit"}
{"nick":"joocain2","date":"2017-06-27T23:35:27.903Z","type":"join"}
{"nick":"joocain2_","reason":"Ping timeout: 248 seconds","date":"2017-06-27T23:38:25.838Z","type":"quit"}
