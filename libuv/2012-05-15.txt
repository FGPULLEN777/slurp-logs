{"nick":"isaacs","message":"oh, shit, res.emit('end') is happening more than once.","date":"2012-05-15T00:02:31.906Z","type":"message"}
{"nick":"isaacs","message":"very reliably, too","date":"2012-05-15T00:02:42.172Z","type":"message"}
{"nick":"mmalecki","reason":"Ping timeout: 240 seconds","date":"2012-05-15T00:03:17.238Z","type":"quit"}
{"nick":"mmalecki","date":"2012-05-15T00:05:25.954Z","type":"join"}
{"nick":"AvianFlu","message":"'I AM THE WALRUS' !? you're right, that is a weird test","date":"2012-05-15T00:05:59.276Z","type":"message"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-05-15T00:07:25.312Z","type":"quit"}
{"nick":"erickt","date":"2012-05-15T00:07:51.882Z","type":"join"}
{"nick":"erickt","reason":"Client Quit","date":"2012-05-15T00:07:53.683Z","type":"quit"}
{"nick":"erickt","date":"2012-05-15T00:11:42.860Z","type":"join"}
{"nick":"piscisaureus_","message":"refcount refactor status: timer, p/c/i, process still left","date":"2012-05-15T00:17:31.197Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: what's p/c/i?","date":"2012-05-15T00:19:01.940Z","type":"message"}
{"nick":"piscisaureus_","message":"prepare/check/idle","date":"2012-05-15T00:19:09.148Z","type":"message"}
{"nick":"piscisaureus_","message":"but those are moreorless the same","date":"2012-05-15T00:19:16.316Z","type":"message"}
{"nick":"piscisaureus_","message":"generated by macros","date":"2012-05-15T00:19:20.054Z","type":"message"}
{"nick":"isaacs","message":"k","date":"2012-05-15T00:19:36.308Z","type":"message"}
{"nick":"isaacs","message":"AvianFlu: i think i figured it out.  apparently the socket close event and parser message complete event happen in different orders on linux and mac","date":"2012-05-15T00:20:46.984Z","type":"message"}
{"nick":"piscisaureus_","message":"In the meantime I refactor out a lot of cruft btw","date":"2012-05-15T00:20:51.960Z","type":"message"}
{"nick":"isaacs","message":"AvianFlu: if the socket event happens first, we end up emitting 'end' twice.","date":"2012-05-15T00:21:24.635Z","type":"message"}
{"nick":"CIA-155","message":"\u0002node:\u000f \u000303isaacs\u000f \u000307reviewme\u000f * r\u00022128ad4\u000f \u000310\u000f/ lib/http.js \u0002:\u000f Guard against emitting 'end' twice on http responses - http://git.io/80f3ww","date":"2012-05-15T00:22:37.969Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: review?^","date":"2012-05-15T00:22:43.348Z","type":"message"}
{"nick":"isaacs","message":"ohnoes!  console!","date":"2012-05-15T00:22:56.085Z","type":"message"}
{"nick":"isaacs","message":"one sec","date":"2012-05-15T00:22:57.786Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: what does it have to do with console/","date":"2012-05-15T00:23:26.737Z","type":"message"}
{"nick":"CIA-155","message":"\u0002node:\u000f \u000303isaacs\u000f \u000307reviewme\u000f * r\u000214a5b45\u000f \u000310\u000f/ lib/http.js \u0002:\u000f Guard against emitting 'end' twice on http responses - http://git.io/5pJZ0A","date":"2012-05-15T00:23:31.328Z","type":"message"}
{"nick":"isaacs","message":"ok, this one","date":"2012-05-15T00:23:34.652Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: i left a console.error in there.","date":"2012-05-15T00:23:41.701Z","type":"message"}
{"nick":"piscisaureus_","message":"ah:_)","date":"2012-05-15T00:23:54.112Z","type":"message"}
{"nick":"piscisaureus_","message":"stupid mac keyboard","date":"2012-05-15T00:24:04.429Z","type":"message"}
{"nick":"isaacs","message":"er, even worse, console.trace","date":"2012-05-15T00:24:04.961Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: I cannot possibly disagree","date":"2012-05-15T00:24:24.931Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: but is that like really needed?","date":"2012-05-15T00:24:32.339Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: it is, on linux, in the test-http-response-no-headers","date":"2012-05-15T00:24:47.611Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: or is that just to hide some other error in there?","date":"2012-05-15T00:24:48.986Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: dude, 90% of that file is just hiding errors in the other 10%","date":"2012-05-15T00:25:02.197Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: why do you think i'm so hot to rewrite it?","date":"2012-05-15T00:25:13.589Z","type":"message"}
{"nick":"piscisaureus_","message":"ok","date":"2012-05-15T00:25:20.085Z","type":"message"}
{"nick":"piscisaureus_","message":"lgtm","date":"2012-05-15T00:25:21.446Z","type":"message"}
{"nick":"isaacs","message":"thanks :)","date":"2012-05-15T00:25:24.366Z","type":"message"}
{"nick":"isaacs","message":"srsly, though, yes, this is clearly a case where we're doing something sloppily.","date":"2012-05-15T00:25:37.028Z","type":"message"}
{"nick":"isaacs","message":"but the \"correct\" fix is too costly at the moment.","date":"2012-05-15T00:25:53.664Z","type":"message"}
{"nick":"piscisaureus_","message":"so you know what the correct fix would be","date":"2012-05-15T00:26:03.373Z","type":"message"}
{"nick":"mjr_","reason":"Quit: mjr_","date":"2012-05-15T00:26:09.251Z","type":"quit"}
{"nick":"piscisaureus_","message":"or did you mean \"thrash the whole thing and start over\" ?","date":"2012-05-15T00:26:16.078Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: i mean thrash.","date":"2012-05-15T00:26:24.325Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: but specifically, the parser/socket/request/response connections need to be all cleaned up at once.","date":"2012-05-15T00:26:41.726Z","type":"message"}
{"nick":"piscisaureus_","message":"do you have a sort of high level design in mind that will make it much cleaner btw?","date":"2012-05-15T00:26:46.323Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: i do.","date":"2012-05-15T00:26:54.958Z","type":"message"}
{"nick":"piscisaureus_","message":"that helps :-)","date":"2012-05-15T00:27:01.090Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: it's not going to happen in time for v0.8, of course.","date":"2012-05-15T00:27:05.486Z","type":"message"}
{"nick":"piscisaureus_","message":"sure, I know","date":"2012-05-15T00:27:11.996Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: but we need to design it with keepalives, socket pooling, and proxying in mind.","date":"2012-05-15T00:27:33.060Z","type":"message"}
{"nick":"piscisaureus_","message":"but I am sort of confident that once you know how it should be done and your fingers are itching","date":"2012-05-15T00:27:38.685Z","type":"message"}
{"nick":"piscisaureus_","message":"... you generally understand the problem space and it is actually possible to create something nice","date":"2012-05-15T00:27:59.209Z","type":"message"}
{"nick":"isaacs","message":"i have a drawing of it on my whiteboard at home.","date":"2012-05-15T00:28:02.649Z","type":"message"}
{"nick":"piscisaureus_","message":"nice","date":"2012-05-15T00:28:35.912Z","type":"message"}
{"nick":"isaacs","message":"it's probably mostly fictional, but that's how whiteboard drawings are.  they're just a place to start.","date":"2012-05-15T00:28:53.519Z","type":"message"}
{"nick":"CIA-155","message":"\u0002node:\u000f \u000303isaacs\u000f \u000307v0.6\u000f * r\u000214a5b45\u000f \u000310\u000f/ lib/http.js \u0002:\u000f Guard against emitting 'end' twice on http responses - http://git.io/5pJZ0A","date":"2012-05-15T00:29:20.790Z","type":"message"}
{"nick":"CIA-155","message":"\u0002node:\u000f \u000303isaacs\u000f \u000307v0.6\u000f * r\u00028068f9b\u000f \u000310\u000f/ Makefile \u0002:\u000f Escape leading # signs in 'make email.md' - http://git.io/jMRLpw","date":"2012-05-15T00:30:34.217Z","type":"message"}
{"nick":"CIA-155","message":"\u0002node:\u000f \u000303isaacs\u000f \u000307v0.6.18-release\u000f * r\u00024bc1d39\u000f \u000310\u000f/ (ChangeLog src/node_version.h)\u0002:\u000f 2012.05.15 Version 0.6.18 (stable) - http://git.io/iX_qCA","date":"2012-05-15T00:30:51.265Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: first i wanna see just how bad it'd actually be to have the http parser in js.  we could throw away the FreeList stuff and benefit from V8's magic more.","date":"2012-05-15T00:34:18.838Z","type":"message"}
{"nick":"orlandovftw","reason":"Ping timeout: 272 seconds","date":"2012-05-15T00:34:22.670Z","type":"quit"}
{"nick":"piscisaureus_","message":"isaacs: sure, go ahead","date":"2012-05-15T00:36:21.219Z","type":"message"}
{"nick":"piscisaureus_","message":"isaacs: we can also refactor the c parser to have a nicer interface","date":"2012-05-15T00:36:32.967Z","type":"message"}
{"nick":"piscisaureus_","message":"e.g. one that doesn't use callbacks :-)","date":"2012-05-15T00:36:42.506Z","type":"message"}
{"nick":"isaacs","message":"sure","date":"2012-05-15T00:39:58.948Z","type":"message"}
{"nick":"isaacs","message":"though... i do kinda like that interface.","date":"2012-05-15T00:40:23.946Z","type":"message"}
{"nick":"isaacs","message":"it's sort of like sax-js","date":"2012-05-15T00:40:28.451Z","type":"message"}
{"nick":"isaacs","message":"but getting rid of that FreeList abomination would prevent tons of memory leaks we've had.","date":"2012-05-15T00:40:48.903Z","type":"message"}
{"nick":"isaacs","message":"and, at least in theory, make our object trees less complicated, and easier to GC","date":"2012-05-15T00:41:09.373Z","type":"message"}
{"nick":"isaacs","message":"since we wouldn't be mixing old and new generations so much","date":"2012-05-15T00:41:17.274Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: once you upgrade to node-gyp 0.4.2 there's a --nodedir option","date":"2012-05-15T00:42:05.751Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: which we should use for the gc tests in node","date":"2012-05-15T00:42:17.312Z","type":"message"}
{"nick":"mmalecki","reason":"Quit: leaving","date":"2012-05-15T00:43:51.142Z","type":"quit"}
{"nick":"AvianFlu","message":"isaacs, the test passes now with those changes","date":"2012-05-15T00:43:55.921Z","type":"message"}
{"nick":"isaacs","message":"sweet!","date":"2012-05-15T00:44:04.900Z","type":"message"}
{"nick":"isaacs","message":"still building on my puny linux vm","date":"2012-05-15T00:44:10.111Z","type":"message"}
{"nick":"erickt","reason":"Ping timeout: 248 seconds","date":"2012-05-15T00:54:20.436Z","type":"quit"}
{"nick":"isaacs","message":"passes here, too","date":"2012-05-15T00:55:41.020Z","type":"message"}
{"nick":"pietern","reason":"Quit: pietern","date":"2012-05-15T00:55:57.412Z","type":"quit"}
{"nick":"piscisaureus_","message":"Hmm. there's a not so nice race condition in uv_process_close","date":"2012-05-15T01:02:31.512Z","type":"message"}
{"nick":"piscisaureus_","message":"which is not trivial to fix","date":"2012-05-15T01:02:36.308Z","type":"message"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-05-15T01:07:48.623Z","type":"quit"}
{"nick":"loladiro","date":"2012-05-15T01:11:04.668Z","type":"join"}
{"nick":"perezd","reason":"Quit: perezd","date":"2012-05-15T01:18:44.182Z","type":"quit"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2012-05-15T01:20:53.714Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2012-05-15T01:32:37.941Z","type":"quit"}
{"nick":"piscisaureus_","message":"[% 100|+ 101|-  39]: Done.","date":"2012-05-15T01:46:05.592Z","type":"message"}
{"nick":"elijah-mbp","reason":"Remote host closed the connection","date":"2012-05-15T01:59:00.048Z","type":"quit"}
{"nick":"piscisaureus_","message":"[% 100|+ 112|-  28]: Done.","date":"2012-05-15T02:08:49.407Z","type":"message"}
{"nick":"piscisaureus_","message":"hmm, not quite there yet","date":"2012-05-15T02:08:54.430Z","type":"message"}
{"nick":"abraxas","date":"2012-05-15T02:10:39.275Z","type":"join"}
{"nick":"elijah-mbp","date":"2012-05-15T02:31:55.907Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2012-05-15T02:32:49.014Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-05-15T02:36:58.022Z","type":"quit"}
{"nick":"erickt","date":"2012-05-15T02:45:44.007Z","type":"join"}
{"nick":"piscisaureus_","message":"yay","date":"2012-05-15T02:49:19.281Z","type":"message"}
{"nick":"piscisaureus_","message":"[% 100|+ 134|-   6]","date":"2012-05-15T02:49:21.679Z","type":"message"}
{"nick":"CIA-155","message":"\u0002libuv:\u000f \u000303Bert Belder\u000f \u000307refcount\u000f * r\u00028ff8c5a\u000f \u000310\u000f/ (29 files in 4 dirs)\u0002:\u000f Refcount refactor almost done (+13 more commits...) - http://git.io/Q3Sjkw","date":"2012-05-15T03:02:16.108Z","type":"message"}
{"nick":"travis-ci","date":"2012-05-15T03:02:52.900Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#273 (refcount - 8ff8c5a : Bert Belder): The build failed.","date":"2012-05-15T03:02:53.106Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/b4dcd4a^...8ff8c5a","date":"2012-05-15T03:02:53.106Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1332830","date":"2012-05-15T03:02:53.106Z","type":"message"}
{"nick":"travis-ci","date":"2012-05-15T03:02:53.106Z","type":"part"}
{"nick":"piscisaureus_","message":"ircretary: tell bnoordhuis https://github.com/joyent/libuv/commits/refcount <-- almost done, but 4 difficult failures left","date":"2012-05-15T03:07:42.499Z","type":"message"}
{"nick":"ircretary","message":"piscisaureus_: I'll be sure to tell bnoordhuis","date":"2012-05-15T03:07:42.980Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-05-15T03:08:39.643Z","type":"quit"}
{"nick":"perezd","date":"2012-05-15T03:14:17.800Z","type":"join"}
{"nick":"ira","reason":"Quit: Computer has gone to sleep.","date":"2012-05-15T03:29:38.585Z","type":"quit"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-05-15T03:41:45.637Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Linkinus - http://linkinus.com","date":"2012-05-15T03:51:28.104Z","type":"quit"}
{"nick":"erickt","date":"2012-05-15T04:05:18.907Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 240 seconds","date":"2012-05-15T04:25:47.143Z","type":"quit"}
{"nick":"AvianFlu","date":"2012-05-15T04:38:28.516Z","type":"join"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-05-15T05:07:37.494Z","type":"quit"}
{"nick":"einaros","reason":"Ping timeout: 240 seconds","date":"2012-05-15T05:19:47.123Z","type":"quit"}
{"nick":"einaros","date":"2012-05-15T05:20:17.190Z","type":"join"}
{"nick":"paddybyers","date":"2012-05-15T05:35:47.713Z","type":"join"}
{"nick":"abraxas_","date":"2012-05-15T05:49:43.330Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 252 seconds","date":"2012-05-15T05:51:08.220Z","type":"quit"}
{"nick":"pfox__","reason":"Ping timeout: 260 seconds","date":"2012-05-15T06:31:34.620Z","type":"quit"}
{"nick":"pfox__","date":"2012-05-15T06:32:18.256Z","type":"join"}
{"nick":"abraxas","date":"2012-05-15T06:33:48.860Z","type":"join"}
{"nick":"abraxas_","reason":"Read error: No route to host","date":"2012-05-15T06:35:07.201Z","type":"quit"}
{"nick":"paddybyers_","date":"2012-05-15T06:47:24.681Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 272 seconds","date":"2012-05-15T06:50:34.677Z","type":"quit"}
{"nick":"paddybyers_","new_nick":"paddybyers","date":"2012-05-15T06:50:34.894Z","type":"nick"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2012-05-15T06:59:20.544Z","type":"quit"}
{"nick":"abraxas","date":"2012-05-15T06:59:52.835Z","type":"join"}
{"nick":"rendar","date":"2012-05-15T07:28:48.125Z","type":"join"}
{"nick":"felixge","date":"2012-05-15T07:50:08.293Z","type":"join"}
{"nick":"felixge","reason":"Ping timeout: 245 seconds","date":"2012-05-15T08:04:08.096Z","type":"quit"}
{"nick":"mmalecki","date":"2012-05-15T08:28:10.315Z","type":"join"}
{"nick":"felixge","date":"2012-05-15T08:45:45.879Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2012-05-15T08:45:46.079Z","type":"quit"}
{"nick":"felixge","date":"2012-05-15T08:45:46.079Z","type":"join"}
{"nick":"mmalecki","reason":"Ping timeout: 245 seconds","date":"2012-05-15T09:27:46.650Z","type":"quit"}
{"nick":"mmalecki","date":"2012-05-15T09:29:20.028Z","type":"join"}
{"nick":"mmalecki","reason":"Ping timeout: 272 seconds","date":"2012-05-15T09:46:00.689Z","type":"quit"}
{"nick":"mmalecki","date":"2012-05-15T09:54:32.362Z","type":"join"}
{"nick":"mmalecki_","date":"2012-05-15T10:24:45.433Z","type":"join"}
{"nick":"mmalecki","reason":"Ping timeout: 272 seconds","date":"2012-05-15T10:28:26.660Z","type":"quit"}
{"nick":"mmalecki_","reason":"Quit: Reconnecting","date":"2012-05-15T10:30:14.680Z","type":"quit"}
{"nick":"mmalecki","date":"2012-05-15T10:30:32.391Z","type":"join"}
{"nick":"janjongboom","date":"2012-05-15T10:30:50.654Z","type":"join"}
{"nick":"janjongboom","message":"morning","date":"2012-05-15T10:30:59.465Z","type":"message"}
{"nick":"janjongboom","message":"is there a way to get the global node_modules folder from node? so: '/usr/local/lib/node_modules/' on default OSX systems","date":"2012-05-15T10:31:18.407Z","type":"message"}
{"nick":"mmalecki","message":"janjongboom: this is not a good place for such questions, try #node.js","date":"2012-05-15T10:31:57.261Z","type":"message"}
{"nick":"mmalecki","message":"`process.execPath` might help tho","date":"2012-05-15T10:32:35.266Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-05-15T10:37:58.311Z","type":"join"}
{"nick":"mmalecki","message":"!gh joyent/node@78dc13fbf97e2e3003e6f3baacdd5ff60e8de3f7","date":"2012-05-15T10:41:22.771Z","type":"message"}
{"nick":"mmalecki","message":"kohai, where you at?","date":"2012-05-15T10:41:30.020Z","type":"message"}
{"nick":"mmalecki","message":"anyway, 78dc13fbf97e2e3003e6f3baacdd5ff60e8de3f7 looks weird to me, it actually changes the listeners array","date":"2012-05-15T10:41:48.175Z","type":"message"}
{"nick":"mmalecki","message":"on the other hand, it's actually reasonable.","date":"2012-05-15T10:52:20.143Z","type":"message"}
{"nick":"piscisaureus_","message":"janjongboom: require('module').globalPaths","date":"2012-05-15T11:06:05.497Z","type":"message"}
{"nick":"janjongboom","reason":"Quit: janjongboom","date":"2012-05-15T11:06:39.324Z","type":"quit"}
{"nick":"felixge_","date":"2012-05-15T11:08:31.732Z","type":"join"}
{"nick":"felixge","reason":"Read error: Connection reset by peer","date":"2012-05-15T11:08:31.732Z","type":"quit"}
{"nick":"felixge_","new_nick":"felixge","date":"2012-05-15T11:08:31.932Z","type":"nick"}
{"nick":"felixge","reason":"Changing host","date":"2012-05-15T11:08:31.932Z","type":"quit"}
{"nick":"felixge","date":"2012-05-15T11:08:31.932Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2012-05-15T11:08:51.766Z","type":"quit"}
{"nick":"abraxas","date":"2012-05-15T11:09:37.583Z","type":"join"}
{"nick":"mmalecki_","date":"2012-05-15T11:10:38.195Z","type":"join"}
{"nick":"mmalecki","reason":"Ping timeout: 244 seconds","date":"2012-05-15T11:13:42.771Z","type":"quit"}
{"nick":"abraxas","reason":"Ping timeout: 252 seconds","date":"2012-05-15T11:14:03.177Z","type":"quit"}
{"nick":"bnoordhuis","date":"2012-05-15T11:21:18.260Z","type":"join"}
{"nick":"mmalecki_","reason":"Quit: Reconnecting","date":"2012-05-15T11:23:15.686Z","type":"quit"}
{"nick":"mmalecki","date":"2012-05-15T11:23:31.312Z","type":"join"}
{"nick":"felixge","reason":"Ping timeout: 256 seconds","date":"2012-05-15T11:36:46.339Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 256 seconds","date":"2012-05-15T11:38:28.340Z","type":"quit"}
{"nick":"ira","date":"2012-05-15T11:41:16.867Z","type":"join"}
{"nick":"ira","reason":"Changing host","date":"2012-05-15T11:41:17.126Z","type":"quit"}
{"nick":"ira","date":"2012-05-15T11:41:17.326Z","type":"join"}
{"nick":"ira","reason":"Client Quit","date":"2012-05-15T11:43:46.642Z","type":"quit"}
{"nick":"ira","date":"2012-05-15T11:43:53.400Z","type":"join"}
{"nick":"ira","reason":"Changing host","date":"2012-05-15T11:44:05.584Z","type":"quit"}
{"nick":"ira","date":"2012-05-15T11:44:05.780Z","type":"join"}
{"nick":"felixge","date":"2012-05-15T11:54:47.045Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2012-05-15T11:54:47.045Z","type":"quit"}
{"nick":"felixge","date":"2012-05-15T11:54:47.046Z","type":"join"}
{"nick":"mmalecki","reason":"Ping timeout: 249 seconds","date":"2012-05-15T12:06:48.931Z","type":"quit"}
{"nick":"mmalecki","date":"2012-05-15T12:08:31.583Z","type":"join"}
{"nick":"c4milo","date":"2012-05-15T12:16:58.505Z","type":"join"}
{"nick":"piscisaureus_","date":"2012-05-15T12:19:06.367Z","type":"join"}
{"nick":"avsej","reason":"Excess Flood","date":"2012-05-15T12:20:45.051Z","type":"quit"}
{"nick":"avsej","date":"2012-05-15T12:20:50.702Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: hey can you merge the latest v0.6 into accept-backoff","date":"2012-05-15T12:21:13.092Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: then I will help zef get the thing working","date":"2012-05-15T12:21:22.449Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, alright, I maxed out my mock db finally at ~128K/sec","date":"2012-05-15T12:22:22.422Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, I introduced pipelining into the lua client","date":"2012-05-15T12:22:39.148Z","type":"message"}
{"nick":"piscisaureus_","message":"right","date":"2012-05-15T12:22:48.588Z","type":"message"}
{"nick":"creationix","message":"and skipped JSON parsing","date":"2012-05-15T12:22:58.585Z","type":"message"}
{"nick":"piscisaureus_","message":"so I suppose that's enough?","date":"2012-05-15T12:22:58.921Z","type":"message"}
{"nick":"creationix","message":"my yajl parser is really slow for some reason","date":"2012-05-15T12:23:06.081Z","type":"message"}
{"nick":"creationix","message":"well, I'm trying to make a benchmark tool for measuring things like node.native ","date":"2012-05-15T12:23:31.683Z","type":"message"}
{"nick":"creationix","message":"I want to add threading to the server","date":"2012-05-15T12:23:40.799Z","type":"message"}
{"nick":"creationix","message":"the mock server should never be the bottleneck in this benchmark","date":"2012-05-15T12:23:51.353Z","type":"message"}
{"nick":"creationix","message":"should I just use pthreads and create a loop each?","date":"2012-05-15T12:24:06.775Z","type":"message"}
{"nick":"creationix","message":"this is raw C + libuv","date":"2012-05-15T12:24:11.752Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: ah so you want to start multiple threads to do connections?","date":"2012-05-15T12:25:39.325Z","type":"message"}
{"nick":"creationix","message":"or should I use the write2 trick and spawn n child processes?","date":"2012-05-15T12:25:39.897Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: I would just go for one loop","date":"2012-05-15T12:25:52.307Z","type":"message"}
{"nick":"creationix","message":"no, my tcp server is CPU bound, I want to use more cores","date":"2012-05-15T12:25:53.944Z","type":"message"}
{"nick":"piscisaureus_","message":"per thread","date":"2012-05-15T12:25:54.940Z","type":"message"}
{"nick":"piscisaureus_","message":"makes it easier to aggregate r/s etc","date":"2012-05-15T12:26:14.963Z","type":"message"}
{"nick":"creationix","message":"ok, so I've never done much threading in C.  Should I read up on pthread create or something?","date":"2012-05-15T12:26:48.858Z","type":"message"}
{"nick":"piscisaureus_","message":"using libuv/master","date":"2012-05-15T12:26:58.876Z","type":"message"}
{"nick":"piscisaureus_","message":"there's uv_thread_create etc","date":"2012-05-15T12:27:03.443Z","type":"message"}
{"nick":"piscisaureus_","message":"and mutexes","date":"2012-05-15T12:27:06.084Z","type":"message"}
{"nick":"piscisaureus_","message":":-)","date":"2012-05-15T12:27:08.142Z","type":"message"}
{"nick":"creationix","message":"nice","date":"2012-05-15T12:27:14.587Z","type":"message"}
{"nick":"piscisaureus_","message":"but reading up on pthreads is recommended too","date":"2012-05-15T12:27:16.501Z","type":"message"}
{"nick":"piscisaureus_","message":"threads are not that hard","date":"2012-05-15T12:27:28.195Z","type":"message"}
{"nick":"creationix","message":"I did it 12 years ago when I learned C++ in school ","date":"2012-05-15T12:27:31.959Z","type":"message"}
{"nick":"creationix","message":"never used it since","date":"2012-05-15T12:27:35.409Z","type":"message"}
{"nick":"piscisaureus_","message":"making your program work well with threads is hard :-)","date":"2012-05-15T12:27:41.328Z","type":"message"}
{"nick":"creationix","message":"that I know","date":"2012-05-15T12:27:46.510Z","type":"message"}
{"nick":"creationix","message":"but this should be simple enough","date":"2012-05-15T12:27:52.983Z","type":"message"}
{"nick":"creationix","message":"I'd much rather fight \"callback hell\" than manage threading issues","date":"2012-05-15T12:28:06.193Z","type":"message"}
{"nick":"deoxxa","message":"i just want to say that libuv has made my life infinitely easier in the last week or so","date":"2012-05-15T12:28:15.401Z","type":"message"}
{"nick":"deoxxa","action":"hugs everyone","date":"2012-05-15T12:28:19.258Z","type":"action"}
{"nick":"creationix","message":"piscisaureus_, indeed, libuv almost tempts me to write web servers in C","date":"2012-05-15T12:28:34.801Z","type":"message"}
{"nick":"creationix","message":"except string manip sucks in C","date":"2012-05-15T12:28:42.296Z","type":"message"}
{"nick":"piscisaureus_","message":":-p","date":"2012-05-15T12:28:47.355Z","type":"message"}
{"nick":"creationix","message":"and web dev has lots of that","date":"2012-05-15T12:28:48.864Z","type":"message"}
{"nick":"piscisaureus_","message":"yep","date":"2012-05-15T12:28:49.083Z","type":"message"}
{"nick":"piscisaureus_","message":"I think doing the cluster thing with raw libuv is also not that easy","date":"2012-05-15T12:28:58.371Z","type":"message"}
{"nick":"creationix","message":"ok, I'll pull latest libuv and read uv.h","date":"2012-05-15T12:29:11.280Z","type":"message"}
{"nick":"creationix","message":"thanks :)","date":"2012-05-15T12:29:12.683Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: btw, we're almost done with the refcount refactor","date":"2012-05-15T12:29:27.280Z","type":"message"}
{"nick":"deoxxa","message":"piscisaureus_: what does that affect?","date":"2012-05-15T12:29:43.985Z","type":"message"}
{"nick":"creationix","message":"awesome, I need to tidy up my luv* projects for nodeconf","date":"2012-05-15T12:29:54.672Z","type":"message"}
{"nick":"piscisaureus_","message":"ghe","date":"2012-05-15T12:30:03.206Z","type":"message"}
{"nick":"deoxxa","message":"i.e. should i be holding off on a release of the software i'm writing with libuv until it's done?","date":"2012-05-15T12:30:09.511Z","type":"message"}
{"nick":"creationix","message":"deoxxa, it makes managing the lifespan of uv_handle_t instances easier ","date":"2012-05-15T12:30:40.922Z","type":"message"}
{"nick":"creationix","message":"and makes the logic for holding the event loop open saner","date":"2012-05-15T12:30:48.396Z","type":"message"}
{"nick":"creationix","message":"deoxxa, what kind of software?","date":"2012-05-15T12:31:00.271Z","type":"message"}
{"nick":"deoxxa","message":"some internal software where i work","date":"2012-05-15T12:31:11.277Z","type":"message"}
{"nick":"deoxxa","message":"the kind of thing where once i release a build, i have to wait 2 weeks for it to be tested","date":"2012-05-15T12:31:22.168Z","type":"message"}
{"nick":"creationix","message":"deoxxa, C/C++ or bound to some scripting language?","date":"2012-05-15T12:31:36.911Z","type":"message"}
{"nick":"deoxxa","message":"plain old c","date":"2012-05-15T12:31:43.294Z","type":"message"}
{"nick":"loladiro","date":"2012-05-15T12:31:52.721Z","type":"join"}
{"nick":"deoxxa","message":"it runs on these little arm devices","date":"2012-05-15T12:31:56.517Z","type":"message"}
{"nick":"creationix","message":"I think it's less impactful in that case, piscisaureus_ would know more","date":"2012-05-15T12:32:08.897Z","type":"message"}
{"nick":"creationix","message":"I'm developing three different scripting language bindings to libuv in parallel","date":"2012-05-15T12:32:20.331Z","type":"message"}
{"nick":"deoxxa","message":"ah ok, cool","date":"2012-05-15T12:32:32.624Z","type":"message"}
{"nick":"creationix","message":"syncing lifetime of the structs with vm objects is hard currently","date":"2012-05-15T12:32:33.673Z","type":"message"}
{"nick":"deoxxa","message":"yeah i'm manually creating/destroying things","date":"2012-05-15T12:32:47.347Z","type":"message"}
{"nick":"creationix","message":"libuv on arm devices, that sounds like lots of fun!","date":"2012-05-15T12:32:57.926Z","type":"message"}
{"nick":"deoxxa","message":"yeah it's pretty cool actually :3","date":"2012-05-15T12:33:07.955Z","type":"message"}
{"nick":"creationix","message":"also, if you're into C++, node.native is pretty cool","date":"2012-05-15T12:33:20.486Z","type":"message"}
{"nick":"deoxxa","message":"i have noticed a very small (constant) memory leak of a few hundred bytes that seems to happen somewhere inside pthread","date":"2012-05-15T12:33:24.064Z","type":"message"}
{"nick":"creationix","message":"what does valgrind tell you?","date":"2012-05-15T12:33:36.054Z","type":"message"}
{"nick":"piscisaureus_","message":"deoxxa: the loop will exit when the only other option is to hang forever, instead of hanging forever :-)","date":"2012-05-15T12:33:40.545Z","type":"message"}
{"nick":"deoxxa","message":"exactly that, that there's a few hundred bytes lost somewhere inside pthread","date":"2012-05-15T12:33:59.232Z","type":"message"}
{"nick":"piscisaureus_","message":"deoxxa: also uv_ref and uv_unref will now operate on a handle and be idempotent","date":"2012-05-15T12:34:00.965Z","type":"message"}
{"nick":"deoxxa","message":"i haven't dug too far into it","date":"2012-05-15T12:34:08.517Z","type":"message"}
{"nick":"deoxxa","message":"piscisaureus_: ah ok, cool","date":"2012-05-15T12:34:14.300Z","type":"message"}
{"nick":"creationix","message":"I find libuv pretty stable, but I usually only stress test tcp servers","date":"2012-05-15T12:34:21.335Z","type":"message"}
{"nick":"creationix","message":"stable memory-wise","date":"2012-05-15T12:34:29.913Z","type":"message"}
{"nick":"deoxxa","message":"yeah there's no horrible memory leaks or anything that i've found so far","date":"2012-05-15T12:34:46.745Z","type":"message"}
{"nick":"deoxxa","message":"i'll gather all my findings into some kind of bug report if they're still valid when i'm done","date":"2012-05-15T12:35:08.075Z","type":"message"}
{"nick":"deoxxa","message":"(i'm probably just doing it wrong)","date":"2012-05-15T12:35:12.897Z","type":"message"}
{"nick":"creationix","message":"deoxxa, by \"constant\" you mean it doesn't grow over time?","date":"2012-05-15T12:35:56.450Z","type":"message"}
{"nick":"deoxxa","message":"correct","date":"2012-05-15T12:36:00.896Z","type":"message"}
{"nick":"creationix","message":"in that case, I have seen that occasionally, but usually don't care","date":"2012-05-15T12:36:06.310Z","type":"message"}
{"nick":"deoxxa","message":"yeah, exactly","date":"2012-05-15T12:36:12.174Z","type":"message"}
{"nick":"creationix","message":"the vm itself adds a few megs usually","date":"2012-05-15T12:36:12.903Z","type":"message"}
{"nick":"deoxxa","message":"heh","date":"2012-05-15T12:36:20.061Z","type":"message"}
{"nick":"deoxxa","message":"no vm for me :P","date":"2012-05-15T12:36:20.261Z","type":"message"}
{"nick":"deoxxa","message":"and i'm stuck with about 500kb worth of ram to play with :(","date":"2012-05-15T12:36:31.704Z","type":"message"}
{"nick":"creationix","message":"wow, that is lean","date":"2012-05-15T12:36:43.216Z","type":"message"}
{"nick":"deoxxa","message":"yep","date":"2012-05-15T12:36:49.130Z","type":"message"}
{"nick":"creationix","message":"my pure C tcp server runs around 700Kb","date":"2012-05-15T12:36:51.151Z","type":"message"}
{"nick":"deoxxa","message":"these boxes have 4MB of memory total","date":"2012-05-15T12:36:57.024Z","type":"message"}
{"nick":"deoxxa","message":"wait, no, that's not right","date":"2012-05-15T12:37:16.917Z","type":"message"}
{"nick":"deoxxa","message":"something small, can't remember the number off the top of my head","date":"2012-05-15T12:37:27.129Z","type":"message"}
{"nick":"deoxxa","message":"but it's tricky","date":"2012-05-15T12:37:29.551Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, is there an example of using uv_thread_create anywhere?","date":"2012-05-15T12:40:35.199Z","type":"message"}
{"nick":"creationix","message":"I've use uv_work before, but this looks much lower level","date":"2012-05-15T12:40:49.269Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: nah it's not","date":"2012-05-15T12:41:02.556Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: but there's no example I think","date":"2012-05-15T12:41:12.038Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: it is easy to use tho:","date":"2012-05-15T12:41:24.095Z","type":"message"}
{"nick":"creationix","message":"so I want N threads accepting inbound connections?","date":"2012-05-15T12:41:59.278Z","type":"message"}
{"nick":"creationix","message":"or one thread accepting, then pass client to the worker pool?","date":"2012-05-15T12:42:10.000Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: hmm, I think option (b) is more difficult to implement","date":"2012-05-15T12:42:35.047Z","type":"message"}
{"nick":"creationix","message":"that's fine, I like A better","date":"2012-05-15T12:42:43.555Z","type":"message"}
{"nick":"mattstevens","date":"2012-05-15T12:43:10.369Z","type":"join"}
{"nick":"creationix","message":"so I just call uv_listen N times then?","date":"2012-05-15T12:43:32.528Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: you can create a thread with","date":"2012-05-15T12:43:59.402Z","type":"message"}
{"nick":"piscisaureus_","message":"uv_thread_t tid;","date":"2012-05-15T12:43:59.601Z","type":"message"}
{"nick":"piscisaureus_","message":"uv_thread_create(&tid, callback, some_void_pointer_that_gets_passed_to_the_calback)","date":"2012-05-15T12:43:59.602Z","type":"message"}
{"nick":"piscisaureus_","message":"void callback(void* arg) {","date":"2012-05-15T12:43:59.602Z","type":"message"}
{"nick":"piscisaureus_","message":"  // This runs in the thread;","date":"2012-05-15T12:43:59.602Z","type":"message"}
{"nick":"piscisaureus_","message":"  ...","date":"2012-05-15T12:44:00.212Z","type":"message"}
{"nick":"piscisaureus_","message":"  // To exit the thread, just return;","date":"2012-05-15T12:44:00.383Z","type":"message"}
{"nick":"piscisaureus_","message":"}","date":"2012-05-15T12:44:01.170Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: to wait for a thread to exit you use","date":"2012-05-15T12:44:23.654Z","type":"message"}
{"nick":"piscisaureus_","message":"uv_thread_join(tid)","date":"2012-05-15T12:44:23.852Z","type":"message"}
{"nick":"piscisaureus_","message":"(from another thread)","date":"2012-05-15T12:44:34.494Z","type":"message"}
{"nick":"creationix","message":"ok, so I'll need to create the uv_loop_t inside that function","date":"2012-05-15T12:44:46.052Z","type":"message"}
{"nick":"piscisaureus_","message":"yeah","date":"2012-05-15T12:44:54.955Z","type":"message"}
{"nick":"piscisaureus_","message":"that would be advisable","date":"2012-05-15T12:44:59.467Z","type":"message"}
{"nick":"creationix","message":"but the uv_tcp_bind would be in the main thread before this?","date":"2012-05-15T12:45:10.283Z","type":"message"}
{"nick":"creationix","message":"so I guess I'd pass in the uv_tcp_t* of the server as my void* data?","date":"2012-05-15T12:45:26.632Z","type":"message"}
{"nick":"piscisaureus_","message":"oh hmm you need to share the socket, right","date":"2012-05-15T12:45:30.262Z","type":"message"}
{"nick":"piscisaureus_","message":"that's hairy","date":"2012-05-15T12:45:39.309Z","type":"message"}
{"nick":"piscisaureus_","message":"wait","date":"2012-05-15T12:45:42.584Z","type":"message"}
{"nick":"piscisaureus_","message":"you were writing a client, right?","date":"2012-05-15T12:45:55.030Z","type":"message"}
{"nick":"creationix","message":"no, server","date":"2012-05-15T12:45:58.655Z","type":"message"}
{"nick":"piscisaureus_","message":"hmm","date":"2012-05-15T12:46:02.321Z","type":"message"}
{"nick":"piscisaureus_","message":"argh","date":"2012-05-15T12:46:05.073Z","type":"message"}
{"nick":"creationix","message":"people implementing/using this benchmark will write the client","date":"2012-05-15T12:46:14.527Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: https://github.com/bnoordhuis/node/compare/v0.6...accept-backoff","date":"2012-05-15T12:46:22.171Z","type":"message"}
{"nick":"creationix","message":"I just don't want the server to ever be a bottleneck","date":"2012-05-15T12:46:32.097Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: that's more hairy, the only way we can do it right now is by using write2","date":"2012-05-15T12:47:29.387Z","type":"message"}
{"nick":"piscisaureus_","message":"which is kinda unfortunate for a threaded program","date":"2012-05-15T12:47:36.316Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: I have to run, so we'll talk later","date":"2012-05-15T12:47:45.759Z","type":"message"}
{"nick":"mmalecki","message":"was `process.installPrefix` removed?","date":"2012-05-15T12:47:48.530Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I dropped it here -> https://github.com/ajaxorg/node/commits/balance","date":"2012-05-15T12:48:04.684Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: c9 just needs a binary now for the proxy","date":"2012-05-15T12:48:22.091Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, no problem, thanks","date":"2012-05-15T12:49:27.204Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: both your murmur3 PRs mostly lgtm.","date":"2012-05-15T12:55:08.954Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: #5 -> path can be NULL at some point when it isn't supposed to","date":"2012-05-15T12:55:29.573Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: #3 -> minor \"typo\", %s should be replaces by %ls at one point","date":"2012-05-15T12:56:06.160Z","type":"message"}
{"nick":"piscisaureus_","message":"really gotta run now, bbl","date":"2012-05-15T12:57:12.575Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm not sure about #3, need to do a little more research","date":"2012-05-15T12:57:15.067Z","type":"message"}
{"nick":"bnoordhuis","message":"heh, okay","date":"2012-05-15T12:57:18.262Z","type":"message"}
{"nick":"mmalecki","reason":"Quit: leaving","date":"2012-05-15T13:03:57.809Z","type":"quit"}
{"nick":"felixge","reason":"Ping timeout: 244 seconds","date":"2012-05-15T13:05:11.927Z","type":"quit"}
{"nick":"felixge","date":"2012-05-15T13:12:18.919Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2012-05-15T13:12:19.129Z","type":"quit"}
{"nick":"felixge","date":"2012-05-15T13:12:19.329Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 252 seconds","date":"2012-05-15T13:35:35.167Z","type":"quit"}
{"nick":"Aria","date":"2012-05-15T14:23:49.657Z","type":"join"}
{"nick":"piscisaureus_","date":"2012-05-15T15:01:42.858Z","type":"join"}
{"nick":"bnoordhuis","message":"any objections against merging https://github.com/bnoordhuis/node/compare/joyent:master...issue3180 ?","date":"2012-05-15T15:03:23.025Z","type":"message"}
{"nick":"isaacs","date":"2012-05-15T15:06:50.385Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: no, but...","date":"2012-05-15T15:12:27.477Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: the handle that shows up for timers and setIntervals is not that useful","date":"2012-05-15T15:12:50.324Z","type":"message"}
{"nick":"creationix","message":"Anyone want to submit a node implementation of my benchmark challenge? https://github.com/creationix/bench-suite","date":"2012-05-15T15:12:54.366Z","type":"message"}
{"nick":"creationix","message":"or a pure C libuv version?","date":"2012-05-15T15:13:01.306Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but I guess we should follow the release early, release often schedule","date":"2012-05-15T15:13:09.626Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: yes. :) there's no real solution for timers, i'm afraid","date":"2012-05-15T15:14:08.937Z","type":"message"}
{"nick":"bnoordhuis","message":"well, not without adding a lot of overhead and complexity","date":"2012-05-15T15:14:17.097Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: maybe we should just drop that linked list bs","date":"2012-05-15T15:14:35.782Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I doubt it makes any difference","date":"2012-05-15T15:14:44.044Z","type":"message"}
{"nick":"piscisaureus_","message":"but if it does we could do it in c","date":"2012-05-15T15:14:47.820Z","type":"message"}
{"nick":"piscisaureus_","message":"er, c++","date":"2012-05-15T15:14:50.757Z","type":"message"}
{"nick":"deoxxa","message":"creationix: looks interesting","date":"2012-05-15T15:14:54.086Z","type":"message"}
{"nick":"bnoordhuis","message":"you mean the timer linked list?","date":"2012-05-15T15:14:56.290Z","type":"message"}
{"nick":"piscisaureus_","message":"yeah","date":"2012-05-15T15:14:59.873Z","type":"message"}
{"nick":"bnoordhuis","message":"right. we'll have to benchmark it but i agree, i kind of doubt it makes a noticeable difference","date":"2012-05-15T15:15:27.220Z","type":"message"}
{"nick":"creationix","message":"It showed that luvit is way faster than node at network stuff, but sucks at json parsing","date":"2012-05-15T15:15:28.233Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: if we could stick the setTimeout callback right on the handle object people could actually see which function is getting called","date":"2012-05-15T15:15:49.416Z","type":"message"}
{"nick":"creationix","message":"deoxxa, which was good for me to see, I thought yajl was super fast","date":"2012-05-15T15:15:55.983Z","type":"message"}
{"nick":"deoxxa","message":"very interesting","date":"2012-05-15T15:16:16.991Z","type":"message"}
{"nick":"deoxxa","message":"i've always used picojson myself, i'm not sure how fast it is","date":"2012-05-15T15:16:31.628Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: quite so","date":"2012-05-15T15:16:37.073Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, just stick it on directly for the first listener, then upgrade to something fancier if they add another?","date":"2012-05-15T15:16:39.353Z","type":"message"}
{"nick":"piscisaureus_","message":"that also works","date":"2012-05-15T15:16:52.021Z","type":"message"}
{"nick":"piscisaureus_","message":"doing the linked list in c or in libuv even would also work :-)","date":"2012-05-15T15:17:06.369Z","type":"message"}
{"nick":"creationix","message":"deoxxa, well, I wanted streaming parsing, there is less choice there","date":"2012-05-15T15:17:39.831Z","type":"message"}
{"nick":"creationix","message":"but most people use non-streaming in practice, so I should probably include a fast path for that","date":"2012-05-15T15:17:58.893Z","type":"message"}
{"nick":"bnoordhuis","message":"7524 unread notifications....","date":"2012-05-15T15:18:10.249Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: https://gist.github.com/d730c35e35b309beb1bb <- minor tweak that might be useful, returns the handle's socket etc. if there is one","date":"2012-05-15T15:18:45.781Z","type":"message"}
{"nick":"bnoordhuis","message":"useful yes/no? i believe some people raised concerns about that","date":"2012-05-15T15:19:04.517Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: that was you, wasn't it?","date":"2012-05-15T15:19:15.220Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: ok","date":"2012-05-15T15:19:19.143Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: typically when I have problems with timers then they are not connected to any socket","date":"2012-05-15T15:19:45.040Z","type":"message"}
{"nick":"piscisaureus_","message":"but I guess it's useful for debugging node itself","date":"2012-05-15T15:19:54.802Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: oh, it's not that. without that patch you get a list of handle objects, with said patch a list of socket / tty / etc. objects","date":"2012-05-15T15:20:28.458Z","type":"message"}
{"nick":"bnoordhuis","message":"the exception being timers, of course :)","date":"2012-05-15T15:20:38.461Z","type":"message"}
{"nick":"piscisaureus_","message":"aah","date":"2012-05-15T15:20:43.523Z","type":"message"}
{"nick":"piscisaureus_","message":"ok, that's useful :_)","date":"2012-05-15T15:20:46.750Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: lgtm","date":"2012-05-15T15:21:27.895Z","type":"message"}
{"nick":"bnoordhuis","message":"cool","date":"2012-05-15T15:21:32.001Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: want to chime in? 30 seconds left till merge","date":"2012-05-15T15:21:39.108Z","type":"message"}
{"nick":"deoxxa","message":"does uv_fs_read call cb more than once? i.e. is it like uv_read_start?","date":"2012-05-15T15:22:09.946Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: https://github.com/v8/v8/blob/master/src/json-parser.h <-- I guess you could just port that to lua :-)","date":"2012-05-15T15:22:36.899Z","type":"message"}
{"nick":"creationix","message":"would it be faster though?","date":"2012-05-15T15:23:00.624Z","type":"message"}
{"nick":"creationix","message":"lua's C interface is pretty low overhead","date":"2012-05-15T15:23:09.674Z","type":"message"}
{"nick":"piscisaureus_","message":"well, I suppose","date":"2012-05-15T15:23:16.233Z","type":"message"}
{"nick":"piscisaureus_","message":"in c would also work","date":"2012-05-15T15:23:22.621Z","type":"message"}
{"nick":"piscisaureus_","message":"we should port it to node","date":"2012-05-15T15:23:31.406Z","type":"message"}
{"nick":"piscisaureus_","message":"change it to take buffers and work in streaming mode","date":"2012-05-15T15:23:40.750Z","type":"message"}
{"nick":"creationix","message":"I wrote a streaming JSON parser in JS that's half the speed of V8's JSON.parse","date":"2012-05-15T15:23:55.797Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: stream=speed fail","date":"2012-05-15T15:24:03.288Z","type":"message"}
{"nick":"piscisaureus_","message":"does it take buffers?","date":"2012-05-15T15:24:08.220Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: why?","date":"2012-05-15T15:24:11.844Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, yep","date":"2012-05-15T15:24:15.623Z","type":"message"}
{"nick":"creationix","message":"indutny, piscisaureus_ all the callbacks","date":"2012-05-15T15:24:21.748Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: because you'll need to hop to js and from js","date":"2012-05-15T15:24:22.573Z","type":"message"}
{"nick":"creationix","message":"indutny, well, not if it's written in js","date":"2012-05-15T15:24:37.347Z","type":"message"}
{"nick":"creationix","message":"but still, it's a lot of js function calls from js too","date":"2012-05-15T15:24:45.195Z","type":"message"}
{"nick":"indutny","message":"creationix: indeed, but piscisaureus_ proposed to port","date":"2012-05-15T15:24:56.127Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: sure but now we have to convert the buffers to strings, and then flatten the string","date":"2012-05-15T15:24:56.835Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: that is also a speed fail right?","date":"2012-05-15T15:25:09.198Z","type":"message"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-05-15T15:25:15.616Z","type":"quit"}
{"nick":"creationix","message":"true","date":"2012-05-15T15:25:19.537Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: yeah, it is. I suggest implementing it without streams","date":"2012-05-15T15:25:25.090Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: though if streams won't affect performance of JSON.parse(Buffer)","date":"2012-05-15T15:25:38.146Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: I'm totally ok with it","date":"2012-05-15T15:25:52.631Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: well it could just be stream-agnostic....","date":"2012-05-15T15:25:57.533Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: if you pass in a buffer that holds an entire json string then there would be no overhead","date":"2012-05-15T15:26:18.266Z","type":"message"}
{"nick":"creationix","message":"indutny, I'm not saying a full node stream","date":"2012-05-15T15:26:21.059Z","type":"message"}
{"nick":"piscisaureus_","message":"and otherwise the parser is just interruptible","date":"2012-05-15T15:26:25.588Z","type":"message"}
{"nick":"creationix","message":"indutny, but a sax interface","date":"2012-05-15T15:26:26.172Z","type":"message"}
{"nick":"piscisaureus_","message":"it could just be like crypto","date":"2012-05-15T15:26:38.910Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: may be made it async?","date":"2012-05-15T15:26:43.891Z","type":"message"}
{"nick":"creationix","message":"it's not that expensive is it?  The async thread syncing isn't free either","date":"2012-05-15T15:27:05.921Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: oh, that would also be nice for many people I suppose. But that would mean that we would have to create objects off the main thread","date":"2012-05-15T15:27:06.122Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: I don't think that's going to play well with v8's heap","date":"2012-05-15T15:27:15.352Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: ah... yes","date":"2012-05-15T15:27:21.824Z","type":"message"}
{"nick":"creationix","message":"here is my js version https://gist.github.com/1821419","date":"2012-05-15T15:27:51.330Z","type":"message"}
{"nick":"indutny","message":"creationix: not really yours :P","date":"2012-05-15T15:28:25.191Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-05-15T15:28:29.928Z","type":"message"}
{"nick":"indutny","message":"yours","date":"2012-05-15T15:28:31.044Z","type":"message"}
{"nick":"creationix","message":"oops, wrong link","date":"2012-05-15T15:28:45.020Z","type":"message"}
{"nick":"creationix","message":"but he didn't modify it, so same code","date":"2012-05-15T15:28:57.388Z","type":"message"}
{"nick":"indutny","message":"yep, I see","date":"2012-05-15T15:29:12.683Z","type":"message"}
{"nick":"creationix","message":"direct link: https://gist.github.com/1821394","date":"2012-05-15T15:29:13.789Z","type":"message"}
{"nick":"creationix","message":"though nuno has a nice fast one that's a lot larger","date":"2012-05-15T15:29:37.635Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: how's the stdio work coming along?","date":"2012-05-15T15:31:37.060Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: sorry, but I'm blocked by my day time job","date":"2012-05-15T15:31:55.231Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: haven't worked on it yet","date":"2012-05-15T15:32:00.477Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: hope I'll be able to touch it today","date":"2012-05-15T15:32:05.794Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, coool","date":"2012-05-15T15:32:19.011Z","type":"message"}
{"nick":"bnoordhuis","message":"-o","date":"2012-05-15T15:32:21.761Z","type":"message"}
{"nick":"mmalecki","date":"2012-05-15T15:43:00.054Z","type":"join"}
{"nick":"Aria","reason":"Remote host closed the connection","date":"2012-05-15T15:43:00.916Z","type":"quit"}
{"nick":"isaacs","message":"bnoordhuis: what is this you're merging?","date":"2012-05-15T15:44:58.176Z","type":"message"}
{"nick":"isaacs","message":"anything anyone wants to get into v0.6.18?","date":"2012-05-15T15:49:15.790Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-05-15T15:49:25.312Z","type":"quit"}
{"nick":"elijah-mbp","reason":"Remote host closed the connection","date":"2012-05-15T15:51:46.714Z","type":"quit"}
{"nick":"mmalecki","message":"fork({ silent: true }) would make my day ;)","date":"2012-05-15T15:52:46.515Z","type":"message"}
{"nick":"loladiro","date":"2012-05-15T15:53:34.403Z","type":"join"}
{"nick":"isaacs","message":"mmalecki: that's only on master, i thought","date":"2012-05-15T15:53:54.771Z","type":"message"}
{"nick":"perezd","reason":"Quit: perezd","date":"2012-05-15T15:53:58.265Z","type":"quit"}
{"nick":"brson","date":"2012-05-15T15:54:01.739Z","type":"join"}
{"nick":"mmalecki","message":"isaacs: yeah, exactly ;)","date":"2012-05-15T15:54:14.532Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: we don't add api on stable branches.  be patient, padawan.","date":"2012-05-15T15:54:26.757Z","type":"message"}
{"nick":"indutny","action":"sir_vader","date":"2012-05-15T15:54:45.446Z","type":"action"}
{"nick":"mmalecki","message":"isaacs: well, I HAVE AN OPINION.","date":"2012-05-15T15:54:51.371Z","type":"message"}
{"nick":"indutny","new_nick":"sir_vader","date":"2012-05-15T15:54:57.263Z","type":"nick"}
{"nick":"sir_vader","message":"oops","date":"2012-05-15T15:55:00.669Z","type":"message"}
{"nick":"mmalecki","message":"lol","date":"2012-05-15T15:55:02.158Z","type":"message"}
{"nick":"sir_vader","new_nick":"indutny","date":"2012-05-15T15:56:00.641Z","type":"nick"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-05-15T15:56:48.007Z","type":"quit"}
{"nick":"isaacs","message":"indutny: vader was a Lord.","date":"2012-05-15T15:57:47.507Z","type":"message"}
{"nick":"isaacs","message":"indutny: not a mere sir!","date":"2012-05-15T15:57:51.479Z","type":"message"}
{"nick":"isaacs","new_nick":"LordVader","date":"2012-05-15T15:57:57.339Z","type":"nick"}
{"nick":"LordVader","new_nick":"isaacs","date":"2012-05-15T15:58:06.414Z","type":"nick"}
