{"nick":"ircretary","reason":"Remote host closed the connection","date":"2015-04-08T00:00:00.738Z","type":"quit"}
{"nick":"ircretary","date":"2015-04-08T00:00:09.241Z","type":"join"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2015-04-08T00:07:26.453Z","type":"quit"}
{"nick":"avalanche123","date":"2015-04-08T00:11:32.531Z","type":"join"}
{"nick":"thlorenz","date":"2015-04-08T00:17:17.228Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2015-04-08T00:23:40.842Z","type":"quit"}
{"nick":"Ralith","reason":"Ping timeout: 250 seconds","date":"2015-04-08T00:29:32.985Z","type":"quit"}
{"nick":"thlorenz_","date":"2015-04-08T00:42:30.337Z","type":"join"}
{"nick":"dsantiago","reason":"Ping timeout: 264 seconds","date":"2015-04-08T00:43:16.142Z","type":"quit"}
{"nick":"dsantiago","date":"2015-04-08T00:45:01.391Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 245 seconds","date":"2015-04-08T00:45:23.171Z","type":"quit"}
{"nick":"avalanche123","reason":"Ping timeout: 255 seconds","date":"2015-04-08T00:46:01.550Z","type":"quit"}
{"nick":"dsantiago","reason":"Max SendQ exceeded","date":"2015-04-08T00:46:18.372Z","type":"quit"}
{"nick":"dsantiago","date":"2015-04-08T00:47:12.627Z","type":"join"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2015-04-08T00:54:57.982Z","type":"quit"}
{"nick":"AvianFlu","reason":"Ping timeout: 240 seconds","date":"2015-04-08T00:55:56.283Z","type":"quit"}
{"nick":"Ralith","date":"2015-04-08T01:02:11.641Z","type":"join"}
{"nick":"hayes","date":"2015-04-08T01:09:18.997Z","type":"join"}
{"nick":"AvianFlu","date":"2015-04-08T01:10:41.463Z","type":"join"}
{"nick":"qard","reason":"Ping timeout: 252 seconds","date":"2015-04-08T01:18:19.266Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2015-04-08T01:20:18.062Z","type":"quit"}
{"nick":"dsantiago","reason":"Ping timeout: 252 seconds","date":"2015-04-08T01:21:59.242Z","type":"quit"}
{"nick":"tyleranton","date":"2015-04-08T01:22:46.557Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-04-08T01:22:54.286Z","type":"quit"}
{"nick":"dsantiago","date":"2015-04-08T01:25:20.842Z","type":"join"}
{"nick":"dsantiago","reason":"Max SendQ exceeded","date":"2015-04-08T01:27:21.193Z","type":"quit"}
{"nick":"brson","date":"2015-04-08T01:27:23.136Z","type":"join"}
{"nick":"dsantiago","date":"2015-04-08T01:28:09.136Z","type":"join"}
{"nick":"kazupon","date":"2015-04-08T01:34:31.258Z","type":"join"}
{"nick":"Jacob8432","date":"2015-04-08T01:58:52.245Z","type":"join"}
{"nick":"dsantiago","reason":"Ping timeout: 250 seconds","date":"2015-04-08T01:59:40.971Z","type":"quit"}
{"nick":"iamstef","reason":"Ping timeout: 265 seconds","date":"2015-04-08T02:00:51.159Z","type":"quit"}
{"nick":"parshap","reason":"Ping timeout: 265 seconds","date":"2015-04-08T02:00:51.367Z","type":"quit"}
{"nick":"feross","reason":"Ping timeout: 265 seconds","date":"2015-04-08T02:01:20.201Z","type":"quit"}
{"nick":"eugeneware","reason":"Ping timeout: 265 seconds","date":"2015-04-08T02:01:20.372Z","type":"quit"}
{"nick":"dsantiago","date":"2015-04-08T02:01:41.341Z","type":"join"}
{"nick":"creationix","reason":"Ping timeout: 265 seconds","date":"2015-04-08T02:01:49.398Z","type":"quit"}
{"nick":"jalcine","reason":"Ping timeout: 265 seconds","date":"2015-04-08T02:01:49.569Z","type":"quit"}
{"nick":"Jacob843","reason":"Ping timeout: 265 seconds","date":"2015-04-08T02:02:18.370Z","type":"quit"}
{"nick":"feross","date":"2015-04-08T02:03:52.963Z","type":"join"}
{"nick":"parshap","date":"2015-04-08T02:04:14.425Z","type":"join"}
{"nick":"iamstef","date":"2015-04-08T02:04:35.343Z","type":"join"}
{"nick":"eugeneware","date":"2015-04-08T02:05:23.427Z","type":"join"}
{"nick":"jalcine","date":"2015-04-08T02:07:25.939Z","type":"join"}
{"nick":"creationix","date":"2015-04-08T02:07:30.312Z","type":"join"}
{"nick":"ijroth","date":"2015-04-08T02:12:07.452Z","type":"join"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2015-04-08T02:20:44.666Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2015-04-08T02:28:07.859Z","type":"quit"}
{"nick":"Ralith","message":"I have a uv_loop_close returning UV_EBUSY despite the fact that the uv_run(&loop, UV_RUN_DEFAULT) call exited of its own accord, and uv_walk lists only inactive handles. What's going on here?","date":"2015-04-08T02:30:35.813Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2015-04-08T02:34:38.204Z","type":"quit"}
{"nick":"Jacob8432","reason":"Quit: Leaving","date":"2015-04-08T02:39:23.489Z","type":"quit"}
{"nick":"Jacob843","date":"2015-04-08T02:39:40.281Z","type":"join"}
{"nick":"thlorenz_","reason":"Remote host closed the connection","date":"2015-04-08T02:40:09.237Z","type":"quit"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2015-04-08T02:41:02.881Z","type":"quit"}
{"nick":"akoeplinger","reason":"Ping timeout: 250 seconds","date":"2015-04-08T02:46:29.053Z","type":"quit"}
{"nick":"Ralith","message":"what can \"This function must only be called once the loop has finished its execution\" possibly mean if not that?","date":"2015-04-08T02:47:26.375Z","type":"message"}
{"nick":"thlorenz","date":"2015-04-08T02:48:15.395Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-04-08T02:54:37.096Z","type":"quit"}
{"nick":"ijroth","date":"2015-04-08T03:04:25.934Z","type":"join"}
{"nick":"Ralith","message":"why does uv_loop_close fail if QUEUE_EMPTY(&(loop)->active_reqs) != 0 when that's exactly when uv__has_active_reqs returns false?","date":"2015-04-08T03:17:40.905Z","type":"message"}
{"nick":"Left_Turn","reason":"Remote host closed the connection","date":"2015-04-08T03:20:05.907Z","type":"quit"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2015-04-08T03:21:06.852Z","type":"quit"}
{"nick":"Ralith","message":"ah, close must be called even on inactive handles","date":"2015-04-08T03:21:39.229Z","type":"message"}
{"nick":"Ralith","message":"except I am calling close...","date":"2015-04-08T03:25:40.764Z","type":"message"}
{"nick":"tyleranton","reason":"Quit: tyleranton","date":"2015-04-08T03:28:08.152Z","type":"quit"}
{"nick":"kazupon","date":"2015-04-08T03:35:01.293Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 256 seconds","date":"2015-04-08T03:40:22.263Z","type":"quit"}
{"nick":"thlorenz","date":"2015-04-08T03:55:28.470Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 250 seconds","date":"2015-04-08T04:00:12.530Z","type":"quit"}
{"nick":"toothrot","reason":"Ping timeout: 256 seconds","date":"2015-04-08T04:02:28.345Z","type":"quit"}
{"nick":"kazupon","date":"2015-04-08T04:36:08.099Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 276 seconds","date":"2015-04-08T04:41:39.093Z","type":"quit"}
{"nick":"thlorenz","date":"2015-04-08T04:56:40.416Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 240 seconds","date":"2015-04-08T05:00:56.290Z","type":"quit"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2015-04-08T05:05:08.754Z","type":"quit"}
{"nick":"kazupon","date":"2015-04-08T05:11:00.263Z","type":"join"}
{"nick":"ijroth","date":"2015-04-08T05:12:49.926Z","type":"join"}
{"nick":"seishun","date":"2015-04-08T05:23:56.905Z","type":"join"}
{"nick":"dsantiago","reason":"Ping timeout: 272 seconds","date":"2015-04-08T05:54:44.195Z","type":"quit"}
{"nick":"jgi","date":"2015-04-08T05:57:58.249Z","type":"join"}
{"nick":"dsantiago","date":"2015-04-08T06:00:59.977Z","type":"join"}
{"nick":"MLM","reason":"Quit: Connection closed for inactivity","date":"2015-04-08T06:03:29.332Z","type":"quit"}
{"nick":"dsantiago","reason":"Ping timeout: 246 seconds","date":"2015-04-08T06:24:17.898Z","type":"quit"}
{"nick":"dsantiago","date":"2015-04-08T06:27:22.143Z","type":"join"}
{"nick":"dsantiago","reason":"Max SendQ exceeded","date":"2015-04-08T06:28:53.237Z","type":"quit"}
{"nick":"dsantiago","date":"2015-04-08T06:29:36.429Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2015-04-08T06:31:12.445Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 246 seconds","date":"2015-04-08T06:36:11.894Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2015-04-08T06:48:20.419Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2015-04-08T06:59:55.881Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-04-08T07:05:36.218Z","type":"quit"}
{"nick":"saghul","message":"Ralith: that function closes the loop resources, you need to close the handles yourself","date":"2015-04-08T07:13:05.703Z","type":"message"}
{"nick":"libuv","message":"Ralith: in my implemention of Close for my bindings I iterate through all the open handles and close them","date":"2015-04-08T07:26:41.702Z","type":"message"}
{"nick":"roxlu","date":"2015-04-08T07:28:34.094Z","type":"join"}
{"nick":"petka__","message":"you also need to wait for the close callback to be called","date":"2015-04-08T07:34:45.335Z","type":"message"}
{"nick":"libuv","message":"do you?","date":"2015-04-08T07:35:44.763Z","type":"message"}
{"nick":"petka__","message":"well yea, if you do uv_close(handle) and then right away uv_loop_close, the loop wont close","date":"2015-04-08T07:37:34.378Z","type":"message"}
{"nick":"petka__","message":"it's only really closed after the 2nd callback argument has been called","date":"2015-04-08T07:38:48.875Z","type":"message"}
{"nick":"saghul","message":"yes, you need to wait for them","date":"2015-04-08T07:39:11.981Z","type":"message"}
{"nick":"saghul","message":"easiest is to use uv_walk, call uv_close on everything, uv_run again for the callbacks to be called, and after it returns, uv_loop_close","date":"2015-04-08T07:39:46.097Z","type":"message"}
{"nick":"kazupon","date":"2015-04-08T07:48:45.941Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2015-04-08T07:53:53.895Z","type":"quit"}
{"nick":"brucem","reason":"Excess Flood","date":"2015-04-08T07:56:12.970Z","type":"quit"}
{"nick":"brucem","date":"2015-04-08T07:57:18.408Z","type":"join"}
{"nick":"brucem","reason":"Changing host","date":"2015-04-08T07:58:54.772Z","type":"quit"}
{"nick":"brucem","date":"2015-04-08T07:58:54.943Z","type":"join"}
{"nick":"kazupon","date":"2015-04-08T08:33:35.264Z","type":"join"}
{"nick":"rendar","date":"2015-04-08T08:51:12.547Z","type":"join"}
{"nick":"txdv","message":"o snap","date":"2015-04-08T08:52:23.304Z","type":"message"}
{"nick":"txdv","message":"i forgot to expose trysend in my binding","date":"2015-04-08T08:52:31.046Z","type":"message"}
{"nick":"txdv","message":"udp proves once again to be the ignored ugly little brother","date":"2015-04-08T08:52:47.759Z","type":"message"}
{"nick":"kazupon_","date":"2015-04-08T08:56:10.913Z","type":"join"}
{"nick":"kazupon_","reason":"Read error: Connection reset by peer","date":"2015-04-08T08:57:40.115Z","type":"quit"}
{"nick":"kazupon_","date":"2015-04-08T08:58:29.915Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2015-04-08T08:58:30.419Z","type":"quit"}
{"nick":"kazupon","date":"2015-04-08T08:59:35.915Z","type":"join"}
{"nick":"rendar","message":"a simple fd-copy server, just to understand if i'm using libuv correctly: when i receive an on_read callback, I have the request of the read, which has a buffer, then i simply create a new uv_buf_t structure, put that buffer's data on it, and call uv_write() with the *same* request, that uv_buf_t, but another fd, right?","date":"2015-04-08T09:01:12.712Z","type":"message"}
{"nick":"kazupon_","reason":"Ping timeout: 246 seconds","date":"2015-04-08T09:03:11.896Z","type":"quit"}
{"nick":"SergeiRND","date":"2015-04-08T09:08:36.894Z","type":"join"}
{"nick":"libuv","message":"fd-copy?","date":"2015-04-08T09:08:42.261Z","type":"message"}
{"nick":"libuv","message":"I don't understad your question.","date":"2015-04-08T09:09:23.029Z","type":"message"}
{"nick":"rendar","message":"libuv: copy data from an fd to another one","date":"2015-04-08T09:10:22.565Z","type":"message"}
{"nick":"libuv","message":"on_data -> use try_write, if that succeeds you are done, if not, stop reading, do a write and on_write start reading again","date":"2015-04-08T09:12:36.487Z","type":"message"}
{"nick":"rendar","message":"libuv: ok","date":"2015-04-08T09:17:28.630Z","type":"message"}
{"nick":"rendar","message":"libuv: i can also start a new reading with a new request","date":"2015-04-08T09:17:55.386Z","type":"message"}
{"nick":"libuv","message":"what do you mean with request?","date":"2015-04-08T09:19:03.770Z","type":"message"}
{"nick":"rendar","message":"uv_req_t ?","date":"2015-04-08T09:19:59.722Z","type":"message"}
{"nick":"libuv","message":"reads don't have a request, at least not yet","date":"2015-04-08T09:20:59.731Z","type":"message"}
{"nick":"rendar","message":"hmm, well yes","date":"2015-04-08T09:22:58.759Z","type":"message"}
{"nick":"libuv","message":"Everything depends on how you are managing your memory.","date":"2015-04-08T09:23:02.277Z","type":"message"}
{"nick":"rendar","message":"libuv: with the alloc_cb right?","date":"2015-04-08T09:23:27.891Z","type":"message"}
{"nick":"libuv","message":"You have to take account that if you have a single byte buffer shared between reads and writes, you have to pause the reading until the writing is done.","date":"2015-04-08T09:23:32.479Z","type":"message"}
{"nick":"libuv","message":"This is why try_write is handy, you can immediately try to write, if it succeeds, you just keep on reading.","date":"2015-04-08T09:24:00.060Z","type":"message"}
{"nick":"libuv","message":"rendar: Yes, with the alloc_cb in start_read.","date":"2015-04-08T09:24:27.224Z","type":"message"}
{"nick":"rendar","message":"right","date":"2015-04-08T09:24:44.353Z","type":"message"}
{"nick":"libuv","message":"If you malloc on every alloc_cb, you have only to free the buffer after you are done with writing.","date":"2015-04-08T09:25:46.790Z","type":"message"}
{"nick":"libuv","message":"If you are using a single buffer for performance/memory reasons, you have to delay the reading until the write is done.","date":"2015-04-08T09:26:24.884Z","type":"message"}
{"nick":"rendar","message":"that's right, ok","date":"2015-04-08T09:28:16.147Z","type":"message"}
{"nick":"Left_Turn","date":"2015-04-08T09:38:36.276Z","type":"join"}
{"nick":"akoeplinger","date":"2015-04-08T10:01:31.193Z","type":"join"}
{"nick":"saghul","message":"\" libuv \" please change your name","date":"2015-04-08T10:05:33.347Z","type":"message"}
{"nick":"chris_99","date":"2015-04-08T10:06:55.443Z","type":"join"}
{"nick":"txdv","message":"akoeplinger: greetings","date":"2015-04-08T10:06:58.680Z","type":"message"}
{"nick":"libuv","date":"2015-04-08T10:07:00.949Z","type":"part"}
{"nick":"txdv","message":"saghul: do you dislike that nick?","date":"2015-04-08T10:07:21.841Z","type":"message"}
{"nick":"txdv","message":"akoeplinger: what are you doing in this channel?","date":"2015-04-08T10:07:39.034Z","type":"message"}
{"nick":"akoeplinger","message":"txdv: just lurking :)","date":"2015-04-08T10:08:18.482Z","type":"message"}
{"nick":"txdv","message":"welcome to the channel of the greatest io library in the world","date":"2015-04-08T10:10:48.599Z","type":"message"}
{"nick":"rendar","message":"txdv: that \"ibuv\" guy was you? :)","date":"2015-04-08T10:22:05.119Z","type":"message"}
{"nick":"txdv","message":"yeah","date":"2015-04-08T10:27:38.481Z","type":"message"}
{"nick":"txdv","message":"a whois would have revealed that","date":"2015-04-08T10:27:47.368Z","type":"message"}
{"nick":"txdv","message":"account: txdv","date":"2015-04-08T10:27:49.646Z","type":"message"}
{"nick":"rendar","message":"heh","date":"2015-04-08T10:28:27.712Z","type":"message"}
{"nick":"nathan7","message":"saghul: hey, I need your help","date":"2015-04-08T10:52:43.590Z","type":"message"}
{"nick":"nathan7","message":"saghul: with regards to the history of uv_thread_self","date":"2015-04-08T10:52:58.263Z","type":"message"}
{"nick":"txdv","message":"why does the history of it interest you so much","date":"2015-04-08T10:54:29.721Z","type":"message"}
{"nick":"nathan7","message":"Because I need to have something work for node 0.8.0 through current v0.12 and iojs","date":"2015-04-08T10:55:07.247Z","type":"message"}
{"nick":"nathan7","message":"on Linux, OS X, and Windows","date":"2015-04-08T10:55:25.243Z","type":"message"}
{"nick":"SergeiRND","reason":"Quit: Leaving.","date":"2015-04-08T11:10:12.091Z","type":"quit"}
{"nick":"thlorenz","date":"2015-04-08T11:19:26.388Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 252 seconds","date":"2015-04-08T11:24:03.277Z","type":"quit"}
{"nick":"roxlu","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-04-08T11:32:27.798Z","type":"quit"}
{"nick":"roxlu","date":"2015-04-08T11:38:05.431Z","type":"join"}
{"nick":"dshaw_","date":"2015-04-08T11:38:52.176Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2015-04-08T11:46:19.884Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2015-04-08T11:56:26.333Z","type":"quit"}
{"nick":"kazupon","date":"2015-04-08T11:56:52.364Z","type":"join"}
{"nick":"saghul","message":"nathan7: I don't think is was available in the 0.8 days","date":"2015-04-08T12:00:19.372Z","type":"message"}
{"nick":"SergeiRND","date":"2015-04-08T12:00:52.895Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2015-04-08T12:01:05.240Z","type":"quit"}
{"nick":"saghul","message":"if I were you I'd just copy the implementation","date":"2015-04-08T12:03:46.629Z","type":"message"}
{"nick":"saghul","message":"it's just a few lines","date":"2015-04-08T12:03:50.629Z","type":"message"}
{"nick":"saghul","message":"IIRC","date":"2015-04-08T12:03:55.745Z","type":"message"}
{"nick":"nathan7","message":"saghul: I did.","date":"2015-04-08T12:04:03.415Z","type":"message"}
{"nick":"nathan7","message":"saghul: I'm now exhaustively testing every node version from 0.8.0 to current 0.12","date":"2015-04-08T12:04:20.476Z","type":"message"}
{"nick":"nathan7","message":"saghul: https://github.com/polotek/libxmljs/pull/302#issuecomment-90890465","date":"2015-04-08T12:04:35.278Z","type":"message"}
{"nick":"kazupon","date":"2015-04-08T12:04:48.280Z","type":"join"}
{"nick":"nathan7","message":"saghul: I need a Windows machine, I'm currently preparing testing on OS X","date":"2015-04-08T12:05:06.899Z","type":"message"}
{"nick":"dshaw_","date":"2015-04-08T12:08:18.569Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2015-04-08T12:09:08.196Z","type":"quit"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2015-04-08T12:14:12.077Z","type":"nick"}
{"nick":"thlorenz","date":"2015-04-08T12:20:35.107Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 265 seconds","date":"2015-04-08T12:25:19.061Z","type":"quit"}
{"nick":"kazupon","date":"2015-04-08T12:26:35.457Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2015-04-08T12:27:50.263Z","type":"quit"}
{"nick":"kazupon","date":"2015-04-08T12:28:59.394Z","type":"join"}
{"nick":"chris_99","reason":"Remote host closed the connection","date":"2015-04-08T12:29:08.964Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2015-04-08T12:41:22.470Z","type":"quit"}
{"nick":"kazupon","date":"2015-04-08T12:54:42.129Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 265 seconds","date":"2015-04-08T12:59:38.104Z","type":"quit"}
{"nick":"thlorenz","date":"2015-04-08T13:00:13.328Z","type":"join"}
{"nick":"SergeiRND1","date":"2015-04-08T13:10:50.895Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-04-08T13:11:16.027Z","type":"quit"}
{"nick":"SergeiRND","reason":"Ping timeout: 246 seconds","date":"2015-04-08T13:13:05.897Z","type":"quit"}
{"nick":"thlorenz","date":"2015-04-08T13:13:52.234Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2015-04-08T13:25:51.247Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-04-08T13:26:17.917Z","type":"quit"}
{"nick":"thlorenz","date":"2015-04-08T13:36:56.190Z","type":"join"}
{"nick":"Fishrock123","date":"2015-04-08T13:42:48.285Z","type":"join"}
{"nick":"alexforster","date":"2015-04-08T14:09:08.902Z","type":"join"}
{"nick":"Jacob8432","date":"2015-04-08T14:12:09.912Z","type":"join"}
{"nick":"wolfeidau","date":"2015-04-08T14:12:17.188Z","type":"join"}
{"nick":"Jacob843","reason":"Ping timeout: 245 seconds","date":"2015-04-08T14:13:18.238Z","type":"quit"}
{"nick":"DrPizza","reason":"Quit: alice.","date":"2015-04-08T14:13:46.047Z","type":"quit"}
{"nick":"wolfeidau","reason":"Read error: Connection reset by peer","date":"2015-04-08T14:19:38.625Z","type":"quit"}
{"nick":"wolfeidau_","date":"2015-04-08T14:19:45.771Z","type":"join"}
{"nick":"rmg","date":"2015-04-08T14:26:53.453Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 265 seconds","date":"2015-04-08T14:31:57.060Z","type":"quit"}
{"nick":"wolfeidau_","reason":"Ping timeout: 252 seconds","date":"2015-04-08T14:39:07.337Z","type":"quit"}
{"nick":"kazupon","date":"2015-04-08T14:42:20.955Z","type":"join"}
{"nick":"MLM","date":"2015-04-08T14:43:12.216Z","type":"join"}
{"nick":"wolfeidau","date":"2015-04-08T14:44:23.649Z","type":"join"}
{"nick":"wolfeidau_","date":"2015-04-08T14:47:11.817Z","type":"join"}
{"nick":"wolfeidau","reason":"Read error: Connection reset by peer","date":"2015-04-08T14:47:35.481Z","type":"quit"}
{"nick":"wolfeidau","date":"2015-04-08T14:48:07.318Z","type":"join"}
{"nick":"wolfeidau_","reason":"Read error: Connection reset by peer","date":"2015-04-08T14:50:47.874Z","type":"quit"}
{"nick":"wolfeidau_","date":"2015-04-08T14:51:26.927Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2015-04-08T14:52:00.246Z","type":"quit"}
{"nick":"wolfeidau","reason":"Ping timeout: 255 seconds","date":"2015-04-08T14:54:43.424Z","type":"quit"}
{"nick":"kazupon","date":"2015-04-08T14:55:09.418Z","type":"join"}
{"nick":"SergeiRND1","reason":"Quit: Leaving.","date":"2015-04-08T15:09:03.340Z","type":"quit"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2015-04-08T15:18:12.549Z","type":"quit"}
{"nick":"octetcloud","date":"2015-04-08T15:18:13.874Z","type":"join"}
{"nick":"saghul","message":"nathan7: sorry, I've been afk for a bit","date":"2015-04-08T15:18:39.932Z","type":"message"}
{"nick":"saghul","message":"nathan7: I'm afraid windows might be tricky","date":"2015-04-08T15:19:09.171Z","type":"message"}
{"nick":"rmg","date":"2015-04-08T15:19:29.000Z","type":"join"}
{"nick":"saghul","message":"nathan7: because of this: https://github.com/libuv/libuv/commit/6591d000d13714c9e362942fbeaeca2b29507a25","date":"2015-04-08T15:20:47.338Z","type":"message"}
{"nick":"AvianFlu","date":"2015-04-08T15:20:50.939Z","type":"join"}
{"nick":"reqshark","date":"2015-04-08T15:24:59.316Z","type":"join"}
{"nick":"avalanche123","date":"2015-04-08T15:28:11.595Z","type":"join"}
{"nick":"Ralith","message":"petka__: yeah, that was it, thanks","date":"2015-04-08T15:32:08.564Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2015-04-08T15:38:38.821Z","type":"quit"}
{"nick":"FROGGS[mobile]","date":"2015-04-08T15:54:06.358Z","type":"join"}
{"nick":"nathan7","message":"saghul: I saw that commit, but we're good","date":"2015-04-08T15:54:16.611Z","type":"message"}
{"nick":"nathan7","message":"saghul: We're only comparing the return value of uv_thread_self()","date":"2015-04-08T15:54:28.697Z","type":"message"}
{"nick":"nathan7","message":"saghul: We're not getting thread IDs from anywhere else","date":"2015-04-08T15:54:35.092Z","type":"message"}
{"nick":"nathan7","message":"saghul: So as long as uv_thread_self is self-consistent, that's not a problem","date":"2015-04-08T15:54:48.119Z","type":"message"}
{"nick":"nathan7","message":"saghul: https://github.com/polotek/libxmljs/pull/302#issuecomment-90861194","date":"2015-04-08T15:55:46.382Z","type":"message"}
{"nick":"Ralith","message":"petka__: do you know if it's possible for that to require blocking?","date":"2015-04-08T15:56:46.584Z","type":"message"}
{"nick":"petka__","message":"Ralith for what to require blocking?","date":"2015-04-08T15:57:29.744Z","type":"message"}
{"nick":"Ralith","message":"petka__: the running the loop with nothing pending other than close requests","date":"2015-04-08T15:57:56.123Z","type":"message"}
{"nick":"petka__","message":"after you have requested the closures, just run the loop until the close callbacks have been called","date":"2015-04-08T15:58:40.964Z","type":"message"}
{"nick":"petka__","message":"while (close_callbacks_called != close_callbacks_expected) uv_run(loop, UV_RUN_ONCE);","date":"2015-04-08T15:59:17.894Z","type":"message"}
{"nick":"petka__","message":"after that line you can then close the loop","date":"2015-04-08T15:59:34.662Z","type":"message"}
