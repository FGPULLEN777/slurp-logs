{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-10-27T00:00:00.366Z","type":"quit"}
{"nick":"ircretary","date":"2013-10-27T00:00:08.347Z","type":"join"}
{"nick":"amartens","date":"2013-10-27T00:04:58.207Z","type":"join"}
{"nick":"amartens","reason":"Client Quit","date":"2013-10-27T00:04:58.426Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-27T00:21:31.513Z","type":"nick"}
{"nick":"Kakera","reason":"Ping timeout: 248 seconds","date":"2013-10-27T00:29:15.854Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-10-27T00:31:45.416Z","type":"quit"}
{"nick":"mikeal","date":"2013-10-27T00:32:44.406Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-10-27T00:32:50.601Z","type":"quit"}
{"nick":"Kakera","date":"2013-10-27T00:41:42.000Z","type":"join"}
{"nick":"dshaw_","date":"2013-10-27T00:43:32.712Z","type":"join"}
{"nick":"amartens","date":"2013-10-27T00:47:16.240Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 252 seconds","date":"2013-10-27T00:47:57.132Z","type":"quit"}
{"nick":"Kakera_","date":"2013-10-27T00:59:21.862Z","type":"join"}
{"nick":"`3rdEden_","date":"2013-10-27T01:01:42.541Z","type":"join"}
{"nick":"isaacs","message":"tjfontaine: can we just disable the debugger tests on smartos?  it's such a pita, and who would'nt just use mdb and dtrace to debug anyway?","date":"2013-10-27T01:03:29.733Z","type":"message"}
{"nick":"einaros_","date":"2013-10-27T01:03:59.375Z","type":"join"}
{"nick":"CAPSLOCKBOT_","date":"2013-10-27T01:05:08.126Z","type":"join"}
{"nick":"lucab","date":"2013-10-27T01:07:23.113Z","type":"join"}
{"nick":"jxs_","date":"2013-10-27T01:07:41.973Z","type":"join"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-10-27T01:07:53.260Z","type":"quit"}
{"nick":"Kakera","reason":"*.net *.split","date":"2013-10-27T01:08:44.113Z","type":"quit"}
{"nick":"einaros","reason":"*.net *.split","date":"2013-10-27T01:08:44.744Z","type":"quit"}
{"nick":"jxs","reason":"*.net *.split","date":"2013-10-27T01:08:44.955Z","type":"quit"}
{"nick":"`3rdEden","reason":"*.net *.split","date":"2013-10-27T01:08:44.955Z","type":"quit"}
{"nick":"CAPSLOCKBOT","reason":"*.net *.split","date":"2013-10-27T01:08:45.164Z","type":"quit"}
{"nick":"kaeso","reason":"*.net *.split","date":"2013-10-27T01:08:45.164Z","type":"quit"}
{"nick":"lucab","new_nick":"kaeso","date":"2013-10-27T01:08:45.374Z","type":"nick"}
{"nick":"jxs_","new_nick":"jxs","date":"2013-10-27T01:08:45.375Z","type":"nick"}
{"nick":"`3rdEden_","new_nick":"`3rdEden","date":"2013-10-27T01:09:40.919Z","type":"nick"}
{"nick":"`3rdEden","new_nick":"Guest82487","date":"2013-10-27T01:10:10.284Z","type":"nick"}
{"nick":"dshaw_","date":"2013-10-27T01:12:51.572Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 240 seconds","date":"2013-10-27T01:16:48.401Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-27T01:38:21.213Z","type":"join"}
{"nick":"loladiro","date":"2013-10-27T01:40:35.744Z","type":"join"}
{"nick":"amartens","date":"2013-10-27T01:43:54.126Z","type":"join"}
{"nick":"c4milo","date":"2013-10-27T01:44:24.341Z","type":"join"}
{"nick":"Kakera_","reason":"Ping timeout: 272 seconds","date":"2013-10-27T01:54:55.958Z","type":"quit"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-10-27T01:55:20.554Z","type":"quit"}
{"nick":"wolfeidau","message":"Anyone know where tjfontaine hides his secret x64_v8.so stash?","date":"2013-10-27T02:04:15.307Z","type":"message"}
{"nick":"AvianFlu","date":"2013-10-27T02:08:50.363Z","type":"join"}
{"nick":"dshaw_","date":"2013-10-27T02:13:25.371Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 245 seconds","date":"2013-10-27T02:17:41.245Z","type":"quit"}
{"nick":"saghul","reason":"Ping timeout: 245 seconds","date":"2013-10-27T02:22:30.349Z","type":"quit"}
{"nick":"saghul","date":"2013-10-27T02:23:03.248Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-27T02:38:25.809Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-27T02:38:52.343Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-10-27T02:39:08.166Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2013-10-27T02:43:20.126Z","type":"quit"}
{"nick":"loladiro","date":"2013-10-27T03:03:54.165Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-10-27T03:06:31.174Z","type":"quit"}
{"nick":"dshaw_","date":"2013-10-27T03:14:19.171Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 245 seconds","date":"2013-10-27T03:18:35.878Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-27T03:19:29.042Z","type":"nick"}
{"nick":"kenperkins","date":"2013-10-27T03:24:36.206Z","type":"join"}
{"nick":"zheng","date":"2013-10-27T03:59:02.129Z","type":"join"}
{"nick":"zheng","reason":"Quit: Leaving","date":"2013-10-27T04:05:16.954Z","type":"quit"}
{"nick":"dominictarr","date":"2013-10-27T04:09:51.188Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-27T04:11:08.620Z","type":"nick"}
{"nick":"dominictarr","reason":"Client Quit","date":"2013-10-27T04:11:45.921Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-27T04:11:54.852Z","type":"nick"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-27T04:12:14.042Z","type":"nick"}
{"nick":"dshaw_","date":"2013-10-27T04:14:45.981Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-10-27T04:14:52.222Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-10-27T04:15:23.437Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 240 seconds","date":"2013-10-27T04:19:28.193Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 272 seconds","date":"2013-10-27T04:19:41.731Z","type":"quit"}
{"nick":"trevnorris","message":"hello","date":"2013-10-27T04:28:08.100Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-27T04:36:04.283Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-27T05:11:10.417Z","type":"nick"}
{"nick":"dshaw_","date":"2013-10-27T05:15:43.710Z","type":"join"}
{"nick":"hueniverse","reason":"Read error: Connection reset by peer","date":"2013-10-27T05:18:21.795Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 265 seconds","date":"2013-10-27T05:20:34.863Z","type":"quit"}
{"nick":"hueniverse","date":"2013-10-27T05:22:22.198Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-10-27T05:30:36.914Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-27T05:37:46.613Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 252 seconds","date":"2013-10-27T05:42:45.205Z","type":"quit"}
{"nick":"dshaw_","date":"2013-10-27T06:16:22.980Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 272 seconds","date":"2013-10-27T06:21:33.869Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #288 \u00037UNSTABLE\u000f windows-ia32 (10/603) windows-x64 (10/603) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/288/","date":"2013-10-27T06:41:00.330Z","type":"message"}
{"nick":"indutny","message":"hello","date":"2013-10-27T06:43:04.738Z","type":"message"}
{"nick":"indutny","message":"and bye","date":"2013-10-27T06:43:09.814Z","type":"message"}
{"nick":"indutny","message":"rebooting to windows","date":"2013-10-27T06:43:13.029Z","type":"message"}
{"nick":"mikeal","date":"2013-10-27T06:43:16.911Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-10-27T06:49:21.900Z","type":"quit"}
{"nick":"loladiro","date":"2013-10-27T06:50:23.744Z","type":"join"}
{"nick":"trevnorris","message":"indutny: windows? nnnnnnoooooo!!!!!! ","date":"2013-10-27T06:52:51.921Z","type":"message"}
{"nick":"dshaw_","date":"2013-10-27T07:17:10.999Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-10-27T07:21:19.928Z","type":"quit"}
{"nick":"dshaw_1","date":"2013-10-27T07:21:31.338Z","type":"join"}
{"nick":"dshaw_","reason":"Read error: Connection reset by peer","date":"2013-10-27T07:21:35.650Z","type":"quit"}
{"nick":"loladiro","date":"2013-10-27T07:25:53.861Z","type":"join"}
{"nick":"c4milo","date":"2013-10-27T07:26:01.787Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-10-27T07:29:28.407Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2013-10-27T07:31:19.193Z","type":"quit"}
{"nick":"Chip_Zero","reason":"Quit: bye","date":"2013-10-27T07:56:50.024Z","type":"quit"}
{"nick":"trevnorris","message":"well, i'm pooped. night empty world","date":"2013-10-27T07:57:03.215Z","type":"message"}
{"nick":"trevnorris","action":"&","date":"2013-10-27T07:57:05.936Z","type":"action"}
{"nick":"LOUDBOT","message":"I AM COMPILING NETSCAPE COMMUNICATOR VERSION 4","date":"2013-10-27T07:57:06.545Z","type":"message"}
{"nick":"Chip_Zero","date":"2013-10-27T07:57:20.295Z","type":"join"}
{"nick":"rendar","date":"2013-10-27T08:09:18.130Z","type":"join"}
{"nick":"rendar","reason":"Remote host closed the connection","date":"2013-10-27T08:22:38.529Z","type":"quit"}
{"nick":"rendar","date":"2013-10-27T08:24:27.977Z","type":"join"}
{"nick":"kazupon","date":"2013-10-27T08:56:25.285Z","type":"join"}
{"nick":"dshaw_1","reason":"Quit: Leaving.","date":"2013-10-27T09:03:41.769Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-27T09:07:22.141Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-27T09:07:49.351Z","type":"join"}
{"nick":"paddybyers","date":"2013-10-27T09:08:20.072Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-10-27T09:12:08.694Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-27T09:14:31.528Z","type":"join"}
{"nick":"inolen","date":"2013-10-27T09:16:27.323Z","type":"join"}
{"nick":"inolen","reason":"Client Quit","date":"2013-10-27T09:17:13.067Z","type":"quit"}
{"nick":"roxlu","reason":"Read error: Connection reset by peer","date":"2013-10-27T09:19:13.189Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 265 seconds","date":"2013-10-27T09:19:21.089Z","type":"quit"}
{"nick":"roxlu","date":"2013-10-27T09:19:53.195Z","type":"join"}
{"nick":"inolen","date":"2013-10-27T09:21:38.820Z","type":"join"}
{"nick":"dshaw_","date":"2013-10-27T09:34:35.211Z","type":"join"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-10-27T09:34:50.106Z","type":"quit"}
{"nick":"dshaw_","reason":"Read error: Connection reset by peer","date":"2013-10-27T09:36:07.680Z","type":"quit"}
{"nick":"dshaw_","date":"2013-10-27T09:36:16.291Z","type":"join"}
{"nick":"kazupon","date":"2013-10-27T09:38:20.400Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 268 seconds","date":"2013-10-27T09:41:13.279Z","type":"quit"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2013-10-27T09:55:05.360Z","type":"quit"}
{"nick":"hz","date":"2013-10-27T09:55:31.919Z","type":"join"}
{"nick":"dshaw_","date":"2013-10-27T10:34:42.083Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Keno Fischer\u000f \u00037master\u000f * \u0002fb36c09\u0002 : unix: move uv_shutdown() assertion - http://git.io/ZAJkJw","date":"2013-10-27T10:41:45.595Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-10-27T10:42:13.229Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-27T10:43:47.043Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-27T10:44:16.089Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #307 \u00037UNSTABLE\u000f linux (23/195) windows (3/196) smartos (2/195) http://jenkins.nodejs.org/job/libuv-master/307/","date":"2013-10-27T10:45:51.692Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ryan Graham\u000f \u00037v0.10\u000f * \u00025ac6f4d\u0002 : doc: improve module documentation - http://git.io/DCdvNA","date":"2013-10-27T10:47:57.732Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2013-10-27T10:49:27.912Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #248 \u00037UNSTABLE\u000f smartos-ia32 (4/195) linux-x64 (22/195) windows-x64 (3/196) smartos-x64 (2/195) linux-ia32 (22/195) windows-ia32 (3/196) http://jenkins.nodejs.org/job/libuv-master-gyp/248/","date":"2013-10-27T10:49:39.777Z","type":"message"}
{"nick":"dshaw_","reason":"Ping timeout: 252 seconds","date":"2013-10-27T10:51:18.204Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1563 \u00037UNSTABLE\u000f smartos-x64 (9/603) smartos-ia32 (5/603) osx-ia32 (1/603) http://jenkins.nodejs.org/job/nodejs-v0.10/1563/","date":"2013-10-27T10:52:37.813Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #292 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/libuv-node-integration/292/","date":"2013-10-27T10:57:55.887Z","type":"message"}
{"nick":"c4milo","date":"2013-10-27T11:02:49.612Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #289 \u00037UNSTABLE\u000f windows-ia32 (10/603) windows-x64 (11/603) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/289/","date":"2013-10-27T11:03:26.988Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1564 \u00037UNSTABLE\u000f smartos-x64 (5/603) smartos-ia32 (4/603) http://jenkins.nodejs.org/job/nodejs-v0.10/1564/","date":"2013-10-27T11:04:50.023Z","type":"message"}
{"nick":"c4milo","reason":"Ping timeout: 245 seconds","date":"2013-10-27T11:07:16.159Z","type":"quit"}
{"nick":"Kakera_","date":"2013-10-27T11:37:05.185Z","type":"join"}
{"nick":"dshaw_","date":"2013-10-27T11:47:00.128Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 252 seconds","date":"2013-10-27T11:51:48.206Z","type":"quit"}
{"nick":"paddybyers","date":"2013-10-27T12:08:56.168Z","type":"join"}
{"nick":"paddybyers","reason":"Client Quit","date":"2013-10-27T12:13:18.244Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-10-27T12:17:48.211Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-10-27T12:19:00.496Z","type":"join"}
{"nick":"paddybyers","date":"2013-10-27T12:33:47.200Z","type":"join"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-10-27T12:34:14.996Z","type":"quit"}
{"nick":"hz","date":"2013-10-27T12:34:19.814Z","type":"join"}
{"nick":"dshaw_","date":"2013-10-27T12:47:44.878Z","type":"join"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2013-10-27T12:49:40.781Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-27T12:51:02.346Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 260 seconds","date":"2013-10-27T12:52:19.922Z","type":"quit"}
{"nick":"paddybyers","date":"2013-10-27T12:52:56.185Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2013-10-27T12:55:51.744Z","type":"quit"}
{"nick":"paddybyers","reason":"Client Quit","date":"2013-10-27T12:56:53.788Z","type":"quit"}
{"nick":"paddybyers","date":"2013-10-27T13:15:07.124Z","type":"join"}
{"nick":"paddybyers","reason":"Client Quit","date":"2013-10-27T13:19:57.900Z","type":"quit"}
{"nick":"paddybyers","date":"2013-10-27T13:29:46.200Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 265 seconds","date":"2013-10-27T13:30:41.342Z","type":"quit"}
{"nick":"dshaw_","date":"2013-10-27T13:48:39.097Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 246 seconds","date":"2013-10-27T13:53:04.932Z","type":"quit"}
{"nick":"inolen","date":"2013-10-27T13:53:41.189Z","type":"join"}
{"nick":"kazupon","date":"2013-10-27T13:57:04.343Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-27T14:29:46.849Z","type":"nick"}
{"nick":"kenperkins","date":"2013-10-27T14:34:27.096Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-10-27T14:37:14.572Z","type":"join"}
{"nick":"c4milo","date":"2013-10-27T14:39:19.170Z","type":"join"}
{"nick":"AvianFlu","date":"2013-10-27T14:39:21.959Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-10-27T14:41:28.361Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-10-27T14:43:33.797Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 246 seconds","date":"2013-10-27T14:43:49.877Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-10-27T14:46:40.789Z","type":"quit"}
{"nick":"dshaw_","date":"2013-10-27T14:49:18.486Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 260 seconds","date":"2013-10-27T14:54:08.003Z","type":"quit"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-10-27T14:54:45.917Z","type":"quit"}
{"nick":"loladiro","date":"2013-10-27T14:55:39.168Z","type":"join"}
{"nick":"c4milo","date":"2013-10-27T15:07:06.830Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-27T15:15:53.576Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #643 \u00037UNSTABLE\u000f smartos-ia32 (5/651) smartos-x64 (8/651) http://jenkins.nodejs.org/job/nodejs-master/643/","date":"2013-10-27T15:20:43.385Z","type":"message"}
{"nick":"c4milo","date":"2013-10-27T15:28:50.954Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-27T15:29:44.143Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-10-27T15:29:57.668Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-10-27T15:30:27.434Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 245 seconds","date":"2013-10-27T15:34:46.302Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 272 seconds","date":"2013-10-27T15:36:21.875Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-27T15:37:23.082Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-27T15:37:49.343Z","type":"join"}
{"nick":"c4milo","date":"2013-10-27T15:39:57.960Z","type":"join"}
{"nick":"inolen","date":"2013-10-27T15:41:00.949Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-10-27T15:41:41.888Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2013-10-27T15:42:05.126Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-27T15:45:35.340Z","type":"join"}
{"nick":"dshaw_","date":"2013-10-27T15:50:02.788Z","type":"join"}
{"nick":"dshaw_","reason":"Read error: Connection reset by peer","date":"2013-10-27T15:51:29.097Z","type":"quit"}
{"nick":"dshaw_","date":"2013-10-27T15:51:43.407Z","type":"join"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-10-27T15:56:06.682Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 272 seconds","date":"2013-10-27T15:56:43.190Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 265 seconds","date":"2013-10-27T16:13:34.625Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-10-27T16:18:09.885Z","type":"quit"}
{"nick":"loladiro","date":"2013-10-27T16:22:52.126Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-10-27T16:25:59.360Z","type":"quit"}
{"nick":"loladiro","date":"2013-10-27T16:34:32.743Z","type":"join"}
{"nick":"kenperkins","date":"2013-10-27T16:42:45.042Z","type":"join"}
{"nick":"kenperkins","reason":"Client Quit","date":"2013-10-27T16:45:08.998Z","type":"quit"}
{"nick":"inolen","date":"2013-10-27T16:50:17.072Z","type":"join"}
{"nick":"AvianFlu","date":"2013-10-27T16:51:03.378Z","type":"join"}
{"nick":"dshaw_","date":"2013-10-27T16:52:31.910Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-10-27T16:53:12.606Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 245 seconds","date":"2013-10-27T16:57:06.651Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-10-27T17:14:18.359Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-10-27T17:20:21.736Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 272 seconds","date":"2013-10-27T17:25:01.733Z","type":"quit"}
{"nick":"mikeal","date":"2013-10-27T17:28:31.058Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-10-27T17:35:21.946Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-27T17:36:20.823Z","type":"quit"}
{"nick":"mikeal","date":"2013-10-27T17:38:40.418Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-27T17:43:06.646Z","type":"nick"}
{"nick":"dshaw_","date":"2013-10-27T17:53:21.937Z","type":"join"}
{"nick":"c4milo","date":"2013-10-27T17:53:31.857Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-10-27T17:54:26.678Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: heya","date":"2013-10-27T17:56:57.053Z","type":"message"}
{"nick":"indutny","message":"how is weekend going?","date":"2013-10-27T17:57:01.791Z","type":"message"}
{"nick":"indutny","message":"have you met your in-laws?","date":"2013-10-27T17:57:07.213Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #308 \u00037UNSTABLE\u000f linux (22/195) windows (3/196) smartos (2/195) http://jenkins.nodejs.org/job/libuv-master/308/","date":"2013-10-27T17:57:22.913Z","type":"message"}
{"nick":"dshaw_","reason":"Ping timeout: 245 seconds","date":"2013-10-27T17:57:56.599Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: hey fedor. yeah, they were over yesterday","date":"2013-10-27T18:00:02.637Z","type":"message"}
{"nick":"bnoordhuis","message":"sorry, have to go again. maybe back later tonight","date":"2013-10-27T18:00:24.737Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-27T18:00:42.711Z","type":"quit"}
{"nick":"indutny","message":"bnoordhuis: np","date":"2013-10-27T18:01:01.290Z","type":"message"}
{"nick":"indutny","message":"see ya","date":"2013-10-27T18:01:02.719Z","type":"message"}
{"nick":"kazupon","date":"2013-10-27T18:01:09.389Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 265 seconds","date":"2013-10-27T18:05:13.721Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2013-10-27T18:05:36.173Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #293 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/libuv-node-integration/293/","date":"2013-10-27T18:05:46.115Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #436 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/nodejs-master-windows/436/","date":"2013-10-27T18:36:01.675Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-10-27T18:46:13.591Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-27T18:46:47.434Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-10-27T18:52:28.985Z","type":"join"}
{"nick":"mcavage","reason":"Remote host closed the connection","date":"2013-10-27T18:53:23.997Z","type":"quit"}
{"nick":"mcavage","date":"2013-10-27T18:53:49.908Z","type":"join"}
{"nick":"mcavage_","date":"2013-10-27T18:54:28.473Z","type":"join"}
{"nick":"mcavage","reason":"Read error: Connection reset by peer","date":"2013-10-27T18:54:28.710Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-10-27T19:12:53.963Z","type":"quit"}
{"nick":"SquirrelCZECH","date":"2013-10-27T19:14:14.989Z","type":"join"}
{"nick":"SquirrelCZECH","message":"hi folks","date":"2013-10-27T19:14:17.754Z","type":"message"}
{"nick":"SquirrelCZECH","message":"it should be possible to use \"tty handle\" to connect to usb->serial/uart thingy?","date":"2013-10-27T19:14:44.471Z","type":"message"}
{"nick":"SquirrelCZECH","message":"(linux)","date":"2013-10-27T19:14:54.286Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-27T19:19:04.130Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 253 seconds","date":"2013-10-27T19:20:03.224Z","type":"quit"}
{"nick":"mcavage_","reason":"Remote host closed the connection","date":"2013-10-27T19:26:33.608Z","type":"quit"}
{"nick":"mcavage","date":"2013-10-27T19:27:01.405Z","type":"join"}
{"nick":"mcavage","reason":"Ping timeout: 252 seconds","date":"2013-10-27T19:31:36.170Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-27T19:33:46.522Z","type":"join"}
{"nick":"amartens","date":"2013-10-27T19:43:59.920Z","type":"join"}
{"nick":"bnoordhuis","message":"SquirrelCZECH: maybe, i've never tried. if it's a real tty, i don't see why it shouldn't work","date":"2013-10-27T19:47:35.430Z","type":"message"}
{"nick":"Rabenklaue","date":"2013-10-27T19:49:24.771Z","type":"join"}
{"nick":"SquirrelCZECH","message":"bnoordhuis: I think so :D","date":"2013-10-27T19:53:29.102Z","type":"message"}
{"nick":"SquirrelCZECH","message":"but just askin :-)","date":"2013-10-27T19:53:33.468Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Phillip Alexander\u000f \u00037v0.10\u000f * \u0002977c54a\u0002 : doc: fs: clarify fs.symlink Windows specific args - http://git.io/5PSFuQ","date":"2013-10-27T20:02:39.449Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1565 \u00037UNSTABLE\u000f smartos-x64 (5/603) smartos-ia32 (4/603) http://jenkins.nodejs.org/job/nodejs-v0.10/1565/","date":"2013-10-27T20:13:57.630Z","type":"message"}
{"nick":"kazupon","date":"2013-10-27T20:16:46.434Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #290 \u00037UNSTABLE\u000f windows-ia32 (10/603) windows-x64 (10/603) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/290/","date":"2013-10-27T20:17:58.757Z","type":"message"}
{"nick":"c4milo_","date":"2013-10-27T20:29:49.956Z","type":"join"}
{"nick":"Guest82487","new_nick":"`3rdEden","date":"2013-10-27T20:29:55.933Z","type":"nick"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2013-10-27T20:30:13.952Z","type":"quit"}
{"nick":"indutny","message":"bnoordhuis: ping","date":"2013-10-27T20:33:24.725Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: so, just as a kindly reminder","date":"2013-10-27T20:33:44.254Z","type":"message"}
{"nick":"indutny","message":"https://github.com/joyent/libuv/pull/965","date":"2013-10-27T20:33:44.940Z","type":"message"}
{"nick":"indutny","message":"https://github.com/joyent/libuv/pull/970","date":"2013-10-27T20:33:59.688Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ^^","date":"2013-10-27T20:34:03.691Z","type":"message"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-10-27T20:36:15.318Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: duly noted","date":"2013-10-27T20:37:17.100Z","type":"message"}
{"nick":"mcavage","date":"2013-10-27T20:37:35.400Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: thanks","date":"2013-10-27T20:38:48.768Z","type":"message"}
{"nick":"mcavage","reason":"Read error: Connection reset by peer","date":"2013-10-27T20:40:31.128Z","type":"quit"}
{"nick":"loladiro","date":"2013-10-27T20:45:42.420Z","type":"join"}
{"nick":"dshaw_","date":"2013-10-27T20:48:47.936Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 248 seconds","date":"2013-10-27T20:50:03.871Z","type":"quit"}
{"nick":"trevnorris","message":"hello all","date":"2013-10-27T20:53:49.217Z","type":"message"}
{"nick":"amartens","date":"2013-10-27T21:07:13.152Z","type":"join"}
{"nick":"amartens","reason":"Read error: Connection reset by peer","date":"2013-10-27T21:07:50.221Z","type":"quit"}
{"nick":"amartens","date":"2013-10-27T21:07:58.350Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-10-27T21:12:25.503Z","type":"quit"}
{"nick":"Rabenklaue","reason":"Ping timeout: 248 seconds","date":"2013-10-27T21:12:59.804Z","type":"quit"}
{"nick":"othiym23","message":"howdy trevnorris ","date":"2013-10-27T21:18:24.268Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: hey. i'm making an addition to the asyncListener api :P","date":"2013-10-27T21:18:40.126Z","type":"message"}
{"nick":"trevnorris","message":"though it might not affect your implementation for cls.","date":"2013-10-27T21:19:08.387Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: but I think I figured out a way to implement that \"done\" callback idea at not extra cost.","date":"2013-10-27T21:21:42.280Z","type":"message"}
{"nick":"loladiro","date":"2013-10-27T21:21:43.572Z","type":"join"}
{"nick":"mikeal","date":"2013-10-27T21:22:14.946Z","type":"join"}
{"nick":"trevnorris","message":"or at least, almost none :)","date":"2013-10-27T21:22:18.213Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: though this is taking the entire abstraction to a new level. I could use your feedback on something. have a moment.","date":"2013-10-27T21:23:13.446Z","type":"message"}
{"nick":"trevnorris","message":"groundwater_: your feedback would be appreciated as well :)","date":"2013-10-27T21:24:34.481Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-10-27T21:28:55.600Z","type":"nick"}
{"nick":"trevnorris","message":"bnoordhuis: if you're around, could also use some feedback.","date":"2013-10-27T21:32:09.597Z","type":"message"}
{"nick":"othiym23","message":"my only concern about adding support for done() is how difficult it is to add to the polyfill","date":"2013-10-27T21:36:10.661Z","type":"message"}
{"nick":"othiym23","message":"since I'm doing all my stuff via monkeypatching and so don't have the same level of insight into the request lifecycle that you do","date":"2013-10-27T21:36:35.523Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: I completely understand that, but adding support for done() is a small part of what I'm really prepping to support. and I think you'll really like it. :)","date":"2013-10-27T21:39:25.765Z","type":"message"}
{"nick":"othiym23","message":"cool!","date":"2013-10-27T21:39:36.443Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: quick overview, {add,create}AsyncListener() return an object with a unique id. what I'm adding is that when an async *Wrap class is created it also creates a group_uid.","date":"2013-10-27T21:42:27.733Z","type":"message"}
{"nick":"trevnorris","message":"that can be tracked in c++, and a reference counter can be ++/-- in the constructor/destructor. and that leaves us open to something else...","date":"2013-10-27T21:42:28.009Z","type":"message"}
{"nick":"blissdev","reason":"Ping timeout: 272 seconds","date":"2013-10-27T21:42:47.826Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23: well,  first when a group_uid === 0 at the end of the eloop then there's  no chance something else can be queued up. so we run through all the objects in the asyncQueue and call the \"done\" callbacks.","date":"2013-10-27T21:43:45.505Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: but also, in c++ it technically would allow us to create a linked list of all the instantiated and active classes in a resource pool. so, we could march through everything in that group.","date":"2013-10-27T21:44:42.693Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: this part is for bert. if an error occurs within a group then it'd be possible to march through each class in the linked list and run a cleanup method. defined as a virtual member of the AsyncWrap class and left up to each inherited class to implement.","date":"2013-10-27T21:45:51.408Z","type":"message"}
{"nick":"trevnorris","message":"i'm just going to put the hooks in and let bert do all the work implementing that.","date":"2013-10-27T21:46:06.281Z","type":"message"}
{"nick":"kazupon","date":"2013-10-27T21:46:45.148Z","type":"join"}
{"nick":"trevnorris","message":"or say that a connection freaks out. instead of throwing, it enters into an ERROR state (already have an enum in AsyncWrap to handle flags like that :) and you can run through and clean those up on an existing server.","date":"2013-10-27T21:47:34.718Z","type":"message"}
{"nick":"trevnorris","message":"because each connection is its own ReqWrap, separate from the server's HandleWrap, so should be able to decouple the resources and properly cleanup the connection.","date":"2013-10-27T21:48:18.797Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis has already done a ton of the work implementing Environment, and so self containing each thing _should_ be possible.","date":"2013-10-27T21:48:53.578Z","type":"message"}
{"nick":"trevnorris","message":"anyways, a lot of this might be a pipe dream, but hey. i've pulled it off so far with the current implementation so might as well see how far I can take it :)","date":"2013-10-27T21:50:41.846Z","type":"message"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-10-27T21:52:27.546Z","type":"quit"}
{"nick":"groundwater_","message":"trevnorris: just catching up","date":"2013-10-27T21:53:04.990Z","type":"message"}
{"nick":"groundwater_","message":"what's the \"done\" callback idea?","date":"2013-10-27T21:53:20.230Z","type":"message"}
{"nick":"groundwater_","message":"any issue link?","date":"2013-10-27T21:53:24.792Z","type":"message"}
{"nick":"trevnorris","message":"groundwater_: no. it was in 6011, but determined to be too difficult for the scope. the idea is that it's possible to tell when no more async events can run that have been wrapped in an AsyncListener.","date":"2013-10-27T21:54:37.243Z","type":"message"}
{"nick":"trevnorris","message":"groundwater_: so it'll fire done() telling you that it's impossible any othe asynchronous events will occur within the async listeners scope.","date":"2013-10-27T21:55:19.845Z","type":"message"}
{"nick":"groundwater_","message":"trevnorris: ahh i understand, like a way to tell when all 'data' events have fired from a socket etc?","date":"2013-10-27T21:56:01.402Z","type":"message"}
{"nick":"trevnorris","message":"well. take this example: var key = addAsync(); setTimeout(fn() { setImmediate(fn() { }); }); removeAsync(key);","date":"2013-10-27T21:57:54.854Z","type":"message"}
{"nick":"trevnorris","message":"done() will fire after the callback passed to setImmediate has been run because no other async listeners were triggered during its execution.","date":"2013-10-27T21:57:55.064Z","type":"message"}
{"nick":"hz","date":"2013-10-27T22:01:00.426Z","type":"quit"}
{"nick":"othiym23","message":"I can *probably* add that to the polyfill, but it's going to be a PITA, and probably won't extend to all cases","date":"2013-10-27T22:02:22.317Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-10-27T22:03:01.750Z","type":"quit"}
{"nick":"trevnorris","message":"yeah. sorry. :(","date":"2013-10-27T22:03:15.027Z","type":"message"}
{"nick":"groundwater_","message":"isn't there a case where you don't know for sure when the chain is done?","date":"2013-10-27T22:04:10.712Z","type":"message"}
{"nick":"groundwater_","message":"i feel like i tried making this assumption when building a long-stack tracer, and it didn't hold","date":"2013-10-27T22:04:45.751Z","type":"message"}
{"nick":"trevnorris","message":"groundwater_: possibly. i'm working some of this out as I go along.","date":"2013-10-27T22:05:03.629Z","type":"message"}
{"nick":"trevnorris","message":"the fact that it allows multiple asyncListeners per async event makes it more difficult to predict. but it should be possible to group things somehow.","date":"2013-10-27T22:05:40.132Z","type":"message"}
{"nick":"trevnorris","message":"the alternative is that I extend the c++ api to something like AsyncWrapScope, sort of like the HandleScope","date":"2013-10-27T22:06:02.284Z","type":"message"}
{"nick":"trevnorris","message":"so that you know you're performing two different operations.","date":"2013-10-27T22:06:21.233Z","type":"message"}
{"nick":"groundwater_","message":"i remember concluding that GC was the only true way to be sure a closure was never going to be called again","date":"2013-10-27T22:06:53.055Z","type":"message"}
{"nick":"trevnorris","message":"that's true for arbitrary js objects, but since I'm technically only tracking c++ class instantiations I can check in the destructor. and some of those destructors are triggered by gc","date":"2013-10-27T22:08:06.323Z","type":"message"}
{"nick":"trevnorris","message":"but that last point is technically irrelevant to the implementation.","date":"2013-10-27T22:08:46.018Z","type":"message"}
{"nick":"hz","date":"2013-10-27T22:09:15.506Z","type":"join"}
{"nick":"trevnorris","message":"AsyncListener works off the AsyncWrap class, and the fact that every class in node that can perform an async operation that will call MakeCallback inherits from it.","date":"2013-10-27T22:09:29.397Z","type":"message"}
{"nick":"trevnorris","message":"so if a removeAsyncListener() has been run it's possible to determine when it'd be impossible to instantiate any other classes from that set.","date":"2013-10-27T22:10:29.955Z","type":"message"}
{"nick":"trevnorris","message":"since classes can only be instantiated in the lifetime of AsyncWrap::MakeCallback()","date":"2013-10-27T22:10:52.447Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: you rang?","date":"2013-10-27T22:12:42.853Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: oh, just had some crazy ideas in the shower this morning and wanted your feedback on their plausibility/insanity.","date":"2013-10-27T22:13:25.311Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: basically, implement a sort of AsyncWrapScope, sor of like HandleScope, that creates a wrapper around a set of queued async resources.","date":"2013-10-27T22:14:49.581Z","type":"message"}
{"nick":"trevnorris","message":"they could be incremented/decremented in the class constructor/destructor so you know when the scope is complete.","date":"2013-10-27T22:14:49.821Z","type":"message"}
{"nick":"bnoordhuis","message":"um, okay. /me braces himself","date":"2013-10-27T22:14:50.859Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: and, this part is for bert, create a linked list of all the resources within a scope so if an error occurs all those resources can be cleaned up.","date":"2013-10-27T22:15:34.421Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: to what purpose?","date":"2013-10-27T22:15:35.929Z","type":"message"}
{"nick":"othiym23","message":"I'm assuming this is to support piscisaureus's tasks concept","date":"2013-10-27T22:16:09.514Z","type":"message"}
{"nick":"trevnorris","message":"it's for his, crap what does he call it, his... um... ah yeah. tasks. thanks othiym23 ","date":"2013-10-27T22:16:18.371Z","type":"message"}
{"nick":"bnoordhuis","message":"we need a vi mode in the node repl. i keep trying to block-delete stuff","date":"2013-10-27T22:18:25.436Z","type":"message"}
{"nick":"trevnorris","message":"haha, I like that idea.","date":"2013-10-27T22:18:39.263Z","type":"message"}
{"nick":"c4milo_","reason":"Remote host closed the connection","date":"2013-10-27T22:18:46.316Z","type":"quit"}
{"nick":"bnoordhuis","message":"trevor, why would you implement that async scope thingy in c++?","date":"2013-10-27T22:19:30.411Z","type":"message"}
{"nick":"bnoordhuis","message":"because it sounds like something you (generic you) could deal with in js land","date":"2013-10-27T22:20:01.800Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2013-10-27T22:20:13.989Z","type":"quit"}
{"nick":"trevnorris","message":"AsyncWrap would have a virtual member like AsyncWrap::CleanUpMyCrap() that could be called in the event that the \"task\" fails, and then it marches through the linked list of all living class instances and calls that method","date":"2013-10-27T22:20:25.752Z","type":"message"}
{"nick":"trevnorris","message":"which would cleanup any connections, data, whatever.","date":"2013-10-27T22:20:38.580Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't know, sounds like a massive can of worms","date":"2013-10-27T22:21:20.567Z","type":"message"}
{"nick":"trevnorris","message":"oh yeah. for sure agree there. like I said, just a crazy idea I had.","date":"2013-10-27T22:21:52.555Z","type":"message"}
{"nick":"bnoordhuis","message":"apropos nothing, is let syntax actually described anywhere on the ES wiki?","date":"2013-10-27T22:23:12.385Z","type":"message"}
{"nick":"bnoordhuis","message":"man, that site is so bad","date":"2013-10-27T22:23:19.956Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess it's a collection of notes more than anything else","date":"2013-10-27T22:23:46.947Z","type":"message"}
{"nick":"tjfontaine","message":"ya, don't look at it for a coherent thought :)","date":"2013-10-27T22:24:10.264Z","type":"message"}
{"nick":"dshaw_","date":"2013-10-27T22:25:10.405Z","type":"join"}
{"nick":"othiym23","message":"bnoordhuis: yeah, both let and const are described in the latest draft: https://people.mozilla.org/~jorendorff/es6-draft.html","date":"2013-10-27T22:25:24.674Z","type":"message"}
{"nick":"othiym23","message":"the HTML draft is a ton easier to deal with than the wiki or the PDF draft","date":"2013-10-27T22:25:35.751Z","type":"message"}
{"nick":"othiym23","message":"specifically https://people.mozilla.org/~jorendorff/es6-draft.html#sec-let-and-const-declarations","date":"2013-10-27T22:25:53.777Z","type":"message"}
{"nick":"bnoordhuis","message":"oh nice, thanks othiym23","date":"2013-10-27T22:26:07.001Z","type":"message"}
{"nick":"othiym23","message":"np","date":"2013-10-27T22:26:32.909Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10-gyp\u0002: #86 \u00037UNSTABLE\u000f windows-x64 (7/188) smartos-ia32 (3/187) windows-ia32 (4/188) osx-x64 (1/188) smartos-x64 (2/187) linux-x64 (1/187) http://jenkins.nodejs.org/job/libuv-v0.10-gyp/86/","date":"2013-10-27T22:26:43.125Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: there's one other addition that I was thinking. the second argument passed to the listener be an integer that specifies where the call is coming from (e.g. nextTick, TCPWrap, etc)","date":"2013-10-27T22:27:48.171Z","type":"message"}
{"nick":"groundwater_","message":"trevnorris: say I have an async callback that spawns two other async callbacks both of which do not spawn any further async events. Does the 'done' callback occur after *both* callbacks complete, or after *each* callback completes?","date":"2013-10-27T22:29:52.565Z","type":"message"}
{"nick":"groundwater_","message":"i worded a lot of 'async' there","date":"2013-10-27T22:30:12.859Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-10-27T22:30:49.955Z","type":"nick"}
{"nick":"othiym23","message":"trevnorris: for me, at least, that falls under \"nice to know, but inessential\" information","date":"2013-10-27T22:32:22.435Z","type":"message"}
{"nick":"othiym23","message":"much like the context param for the callbacks (which is what I see this being a replacement for)","date":"2013-10-27T22:32:35.112Z","type":"message"}
{"nick":"trevnorris","message":"groundwater_: all the terminology confusion is mainly my fault. I suck at coming up with names for things :P","date":"2013-10-27T22:33:59.421Z","type":"message"}
{"nick":"trevnorris","message":"nevermind the done callback thing again. until I can track every instantiated class for a given code block wrapped with add/removeAsyncListener it'll be impossible to do.","date":"2013-10-27T22:33:59.877Z","type":"message"}
{"nick":"trevnorris","message":"groundwater_: it _might_ be possible if we had WeakMaps","date":"2013-10-27T22:35:47.844Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: passing the context was more so you could inspect things like the callback that was about to be inspected, what variables are set, etc.","date":"2013-10-27T22:36:34.368Z","type":"message"}
{"nick":"othiym23","message":"we do have WeakMaps, we just need to turn them on O:D","date":"2013-10-27T22:37:09.733Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: problem is that WeakMap doesn't have an iterator, iirc.","date":"2013-10-27T22:38:54.177Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: last question. performance wise, would it be noticeable to keep a linked list of instantiated classes, then append on constructor and remove from the destructor?","date":"2013-10-27T22:41:26.091Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: the WeakMap doesn't have an iterator by design","date":"2013-10-27T22:42:09.576Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-10-27T22:42:47.422Z","type":"quit"}
{"nick":"othiym23","message":"trevnorris: the ephemeron-based GC it uses to release stuff depends on that, and also it can leak information across membranes if code can see what's currently in the map at a given point in time","date":"2013-10-27T22:42:49.100Z","type":"message"}
{"nick":"othiym23","message":"although I may be conflating some of the WeakMap discussion with some of the Symbol discussion there","date":"2013-10-27T22:43:17.042Z","type":"message"}
{"nick":"amartens","date":"2013-10-27T22:45:16.768Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: not really. if you use double linked list, insertion and removal is O(1)","date":"2013-10-27T22:48:16.579Z","type":"message"}
{"nick":"bnoordhuis","message":"*use a","date":"2013-10-27T22:48:20.883Z","type":"message"}
{"nick":"amartens","reason":"Ping timeout: 272 seconds","date":"2013-10-27T22:49:55.781Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: cool, thanks. with the right hook in AsyncWrap I think bert should be able to mostly implement his tasks idea in userland. basically create a linked list of all events executed, then update the linked list based on a task id or the link on the asyncwrap instance.","date":"2013-10-27T22:51:24.160Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-10-27T22:52:51.074Z","type":"quit"}
{"nick":"rendar","reason":"Quit: Leaving","date":"2013-10-27T22:58:17.027Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-27T22:59:58.942Z","type":"join"}
{"nick":"hz","reason":"Ping timeout: 265 seconds","date":"2013-10-27T23:04:54.115Z","type":"quit"}
{"nick":"hz","date":"2013-10-27T23:09:44.896Z","type":"join"}
{"nick":"kazupon","date":"2013-10-27T23:09:57.609Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-10-27T23:12:44.718Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-27T23:13:15.938Z","type":"join"}
{"nick":"FROGGS","reason":"Ping timeout: 272 seconds","date":"2013-10-27T23:13:43.212Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2013-10-27T23:15:47.969Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 272 seconds","date":"2013-10-27T23:16:31.743Z","type":"quit"}
{"nick":"hz","reason":"Ping timeout: 246 seconds","date":"2013-10-27T23:16:55.893Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-10-27T23:17:57.919Z","type":"quit"}
{"nick":"kazupon","date":"2013-10-27T23:18:24.636Z","type":"join"}
{"nick":"hz","date":"2013-10-27T23:19:02.136Z","type":"join"}
{"nick":"c4milo","date":"2013-10-27T23:20:19.368Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-10-27T23:22:48.198Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-27T23:34:03.153Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-10-27T23:39:50.804Z","type":"quit"}
{"nick":"blissdev","date":"2013-10-27T23:42:40.671Z","type":"join"}
{"nick":"luxigo_","date":"2013-10-27T23:44:27.508Z","type":"join"}
{"nick":"amartens","date":"2013-10-27T23:46:17.402Z","type":"join"}
{"nick":"Kakera_","reason":"Ping timeout: 252 seconds","date":"2013-10-27T23:49:00.214Z","type":"quit"}
{"nick":"amartens","reason":"Ping timeout: 240 seconds","date":"2013-10-27T23:50:28.227Z","type":"quit"}
{"nick":"hz","date":"2013-10-27T23:55:53.437Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-27T23:58:15.946Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #249 \u00037UNSTABLE\u000f smartos-ia32 (2/195) windows-x64 (3/196) smartos-x64 (2/195) windows-ia32 (3/196) http://jenkins.nodejs.org/job/libuv-master-gyp/249/","date":"2013-10-27T23:59:24.882Z","type":"message"}
