{"nick":"algun_","reason":"Quit: Lost terminal","date":"2016-12-04T00:31:02.708Z","type":"quit"}
{"nick":"cxreg","reason":"Read error: Connection reset by peer","date":"2016-12-04T01:38:33.304Z","type":"quit"}
{"nick":"Jacob8432","date":"2016-12-04T02:04:27.124Z","type":"join"}
{"nick":"Jacob843","reason":"Ping timeout: 260 seconds","date":"2016-12-04T02:07:13.543Z","type":"quit"}
{"nick":"Jacob8432","reason":"Remote host closed the connection","date":"2016-12-04T03:22:43.437Z","type":"quit"}
{"nick":"Jacob8432","date":"2016-12-04T03:23:13.785Z","type":"join"}
{"nick":"Jacob8432","reason":"Quit: Leaving","date":"2016-12-04T03:32:42.172Z","type":"quit"}
{"nick":"zju_25","date":"2016-12-04T03:40:05.573Z","type":"join"}
{"nick":"zju3","reason":"Remote host closed the connection","date":"2016-12-04T03:42:41.747Z","type":"quit"}
{"nick":"MoZu4k_","date":"2016-12-04T03:45:24.705Z","type":"join"}
{"nick":"Matthew[m]","reason":"Write error: Connection reset by peer","date":"2016-12-04T03:45:53.870Z","type":"quit"}
{"nick":"jessicaquynh","reason":"Remote host closed the connection","date":"2016-12-04T04:06:52.547Z","type":"quit"}
{"nick":"jessicaquynh","date":"2016-12-04T04:11:52.819Z","type":"join"}
{"nick":"jessicaq_","date":"2016-12-04T04:12:49.486Z","type":"join"}
{"nick":"jessicaq_","reason":"Read error: Connection reset by peer","date":"2016-12-04T04:14:21.595Z","type":"quit"}
{"nick":"jessicaquynh","reason":"Ping timeout: 260 seconds","date":"2016-12-04T04:16:12.846Z","type":"quit"}
{"nick":"jessicaquynh","date":"2016-12-04T04:16:21.506Z","type":"join"}
{"nick":"Matthew[m]","date":"2016-12-04T04:17:43.998Z","type":"join"}
{"nick":"jessicaquynh","reason":"Ping timeout: 258 seconds","date":"2016-12-04T04:20:46.551Z","type":"quit"}
{"nick":"Jacob843","date":"2016-12-04T04:38:02.633Z","type":"join"}
{"nick":"jessicaquynh","date":"2016-12-04T04:45:43.806Z","type":"join"}
{"nick":"jessicaquynh","reason":"Remote host closed the connection","date":"2016-12-04T04:47:06.193Z","type":"quit"}
{"nick":"jessicaquynh","date":"2016-12-04T04:47:21.884Z","type":"join"}
{"nick":"jessicaquynh","reason":"Client Quit","date":"2016-12-04T04:47:43.846Z","type":"quit"}
{"nick":"Ruyi","date":"2016-12-04T05:18:18.715Z","type":"join"}
{"nick":"Ruyi","reason":"Read error: Connection reset by peer","date":"2016-12-04T05:19:46.898Z","type":"quit"}
{"nick":"MoZu4k_","reason":"Quit: MoZu4k_","date":"2016-12-04T06:09:50.265Z","type":"quit"}
{"nick":"rmg","date":"2016-12-04T06:11:37.354Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 260 seconds","date":"2016-12-04T06:16:31.946Z","type":"quit"}
{"nick":"Ralith_","reason":"Ping timeout: 246 seconds","date":"2016-12-04T06:30:27.166Z","type":"quit"}
{"nick":"rmg","date":"2016-12-04T06:38:44.443Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 260 seconds","date":"2016-12-04T06:43:35.885Z","type":"quit"}
{"nick":"Ralith_","date":"2016-12-04T06:44:38.659Z","type":"join"}
{"nick":"rmg","date":"2016-12-04T07:05:50.636Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 260 seconds","date":"2016-12-04T07:10:39.847Z","type":"quit"}
{"nick":"rmg","date":"2016-12-04T07:32:56.443Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 260 seconds","date":"2016-12-04T07:37:43.882Z","type":"quit"}
{"nick":"rmg","date":"2016-12-04T07:59:58.519Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 260 seconds","date":"2016-12-04T08:04:47.908Z","type":"quit"}
{"nick":"rmg","date":"2016-12-04T08:27:07.511Z","type":"join"}
{"nick":"txdv","message":"kellabyte: i'd go with _dispatch","date":"2016-12-04T08:31:26.490Z","type":"message"}
{"nick":"rmg","reason":"Ping timeout: 260 seconds","date":"2016-12-04T08:31:52.115Z","type":"quit"}
{"nick":"rmg","date":"2016-12-04T08:54:09.347Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 260 seconds","date":"2016-12-04T08:58:55.859Z","type":"quit"}
{"nick":"rendar","date":"2016-12-04T09:07:32.374Z","type":"join"}
{"nick":"txdv","message":"netdispatch doesnt make it clearer to me","date":"2016-12-04T09:49:02.843Z","type":"message"}
{"nick":"seishun","date":"2016-12-04T09:49:45.120Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 256 seconds","date":"2016-12-04T11:10:48.809Z","type":"quit"}
{"nick":"seishun","date":"2016-12-04T11:14:09.119Z","type":"join"}
{"nick":"thealphanerd","reason":"Quit: farewell for now","date":"2016-12-04T11:25:09.391Z","type":"quit"}
{"nick":"thealphanerd","date":"2016-12-04T11:25:39.890Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 256 seconds","date":"2016-12-04T12:06:20.812Z","type":"quit"}
{"nick":"seishun","date":"2016-12-04T12:22:47.706Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 256 seconds","date":"2016-12-04T13:44:22.820Z","type":"quit"}
{"nick":"seishun","date":"2016-12-04T13:50:48.207Z","type":"join"}
{"nick":"tunniclm_","date":"2016-12-04T14:04:09.880Z","type":"join"}
{"nick":"NoobCoder","date":"2016-12-04T14:29:38.945Z","type":"join"}
{"nick":"seishun","message":"I gave up on trying to fix this https://github.com/nodejs/node/issues/9690#issuecomment-261714872 because I'm not familiar enough with libuv, but it seems no one else is interested in fixing it either, so I might as well give it a shot","date":"2016-12-04T14:29:45.004Z","type":"message"}
{"nick":"seishun","message":"but I can't figure out a way to prevent calling uv_insert_pending_req when it's already been called","date":"2016-12-04T14:30:13.226Z","type":"message"}
{"nick":"NoobCoder","reason":"Client Quit","date":"2016-12-04T14:30:20.440Z","type":"quit"}
{"nick":"seishun","message":"other than looking through the whole linked list","date":"2016-12-04T14:30:29.481Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 256 seconds","date":"2016-12-04T16:15:40.799Z","type":"quit"}
{"nick":"seishun","date":"2016-12-04T16:22:17.293Z","type":"join"}
{"nick":"grantila","date":"2016-12-04T16:48:41.264Z","type":"join"}
{"nick":"grantila","message":"When doing a uv_tcp_connect, I create a connect request (uv_connect_t) and a tcp stream (uv_tcp_t), and I eventually get the callback uv_connect_cb. When this callback has returned from me, back to libuv, the stream seems to be used for a while. How do I know when I can deallocate it?","date":"2016-12-04T16:51:20.734Z","type":"message"}
{"nick":"grantila","message":"Deallocate the stream and connect request, i.e.","date":"2016-12-04T16:51:50.602Z","type":"message"}
{"nick":"cremes","date":"2016-12-04T17:10:59.903Z","type":"join"}
{"nick":"txdv","message":"connect in the callback","date":"2016-12-04T17:13:03.862Z","type":"message"}
{"nick":"txdv","message":"stream when you close the  stream","date":"2016-12-04T17:13:09.523Z","type":"message"}
{"nick":"grantila","message":"uh, libuv performs the connect, right?","date":"2016-12-04T17:17:49.225Z","type":"message"}
{"nick":"grantila","message":"so the uv_connect_cb will be called when the connect was made (successfull or failed)","date":"2016-12-04T17:18:05.355Z","type":"message"}
{"nick":"grantila","message":"but if it fails, I might want to deallocate the stream, which won't work since libuv keeps using the stream object","date":"2016-12-04T17:18:32.757Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 256 seconds","date":"2016-12-04T17:38:58.818Z","type":"quit"}
{"nick":"seishun","date":"2016-12-04T17:55:19.127Z","type":"join"}
{"nick":"txdv","message":"grantila: you have to call uv_close in the callback if it fails","date":"2016-12-04T18:01:59.240Z","type":"message"}
{"nick":"txdv","message":"and then in the close callback you can free stuff","date":"2016-12-04T18:02:07.080Z","type":"message"}
{"nick":"grantila","message":"ugh, alright. sounds fair. it's really hard to find the functions available.","date":"2016-12-04T18:05:52.062Z","type":"message"}
{"nick":"txdv","message":"what functions?","date":"2016-12-04T18:05:59.750Z","type":"message"}
{"nick":"grantila","message":"i'm reading the http://docs.libuv.org/ docs","date":"2016-12-04T18:06:24.667Z","type":"message"}
{"nick":"grantila","message":"and since there are so many pages with functions, it's hard to find one with a suitable function. if I found uv_close, I would've probably used it.","date":"2016-12-04T18:06:52.601Z","type":"message"}
{"nick":"txdv","message":"uv_close is for all handles","date":"2016-12-04T18:07:08.413Z","type":"message"}
{"nick":"grantila","message":"I was looking at these: http://docs.libuv.org/en/v1.x/stream.html and http://docs.libuv.org/en/v1.x/tcp.html","date":"2016-12-04T18:07:14.013Z","type":"message"}
{"nick":"grantila","message":"alright.","date":"2016-12-04T18:07:17.036Z","type":"message"}
{"nick":"txdv","message":"handle.html ","date":"2016-12-04T18:08:05.034Z","type":"message"}
{"nick":"cburnette","date":"2016-12-04T19:41:47.954Z","type":"join"}
{"nick":"cburnette","reason":"Client Quit","date":"2016-12-04T19:42:23.625Z","type":"quit"}
{"nick":"rendar","reason":"Ping timeout: 245 seconds","date":"2016-12-04T19:57:33.791Z","type":"quit"}
{"nick":"daurnimator","reason":"Read error: Connection reset by peer","date":"2016-12-04T20:09:13.036Z","type":"quit"}
{"nick":"italoacasas","date":"2016-12-04T21:15:49.831Z","type":"join"}
{"nick":"grantila1","date":"2016-12-04T22:11:42.872Z","type":"join"}
{"nick":"grantila","reason":"Read error: Connection reset by peer","date":"2016-12-04T22:11:43.275Z","type":"quit"}
{"nick":"grantila","date":"2016-12-04T22:21:07.797Z","type":"join"}
{"nick":"grantila1","reason":"Read error: Connection reset by peer","date":"2016-12-04T22:21:08.000Z","type":"quit"}
{"nick":"grantila1","date":"2016-12-04T22:24:00.253Z","type":"join"}
{"nick":"grantila","reason":"Read error: Connection reset by peer","date":"2016-12-04T22:24:00.457Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 256 seconds","date":"2016-12-04T22:24:00.803Z","type":"quit"}
{"nick":"grantila1","reason":"Ping timeout: 248 seconds","date":"2016-12-04T22:28:21.320Z","type":"quit"}
{"nick":"grantila","date":"2016-12-04T22:31:10.694Z","type":"join"}
{"nick":"daurnimator","date":"2016-12-04T22:49:36.543Z","type":"join"}
