{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2016-02-07T00:15:04.518Z","type":"quit"}
{"nick":"Ruyi-HomePC","date":"2016-02-07T01:12:09.603Z","type":"join"}
{"nick":"ruyi_du_","date":"2016-02-07T01:44:37.354Z","type":"join"}
{"nick":"Ruyi","reason":"Read error: Connection reset by peer","date":"2016-02-07T01:44:37.844Z","type":"quit"}
{"nick":"alexforster","date":"2016-02-07T02:16:08.186Z","type":"join"}
{"nick":"alexforster","reason":"Client Quit","date":"2016-02-07T02:18:11.440Z","type":"quit"}
{"nick":"ruyi_du_","reason":"Ping timeout: 240 seconds","date":"2016-02-07T02:50:26.416Z","type":"quit"}
{"nick":"ruyi_du_","date":"2016-02-07T02:50:54.845Z","type":"join"}
{"nick":"tunniclm_","reason":"Ping timeout: 250 seconds","date":"2016-02-07T03:28:04.704Z","type":"quit"}
{"nick":"metric","reason":"Remote host closed the connection","date":"2016-02-07T03:34:44.816Z","type":"quit"}
{"nick":"metric","date":"2016-02-07T03:35:06.732Z","type":"join"}
{"nick":"rmg","date":"2016-02-07T03:41:48.524Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 245 seconds","date":"2016-02-07T03:46:20.812Z","type":"quit"}
{"nick":"brson","reason":"Quit: leaving","date":"2016-02-07T04:24:38.193Z","type":"quit"}
{"nick":"rmg","date":"2016-02-07T04:42:40.474Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 276 seconds","date":"2016-02-07T04:48:02.024Z","type":"quit"}
{"nick":"MoZu4k__","reason":"Quit: MoZu4k__","date":"2016-02-07T06:55:40.423Z","type":"quit"}
{"nick":"davi","date":"2016-02-07T07:33:21.503Z","type":"join"}
{"nick":"MoZu4k_","date":"2016-02-07T07:51:32.375Z","type":"join"}
{"nick":"MoZu4k_","reason":"Client Quit","date":"2016-02-07T07:54:41.833Z","type":"quit"}
{"nick":"rmg","date":"2016-02-07T08:45:41.997Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 260 seconds","date":"2016-02-07T08:50:35.596Z","type":"quit"}
{"nick":"davi","reason":"Ping timeout: 250 seconds","date":"2016-02-07T09:08:12.463Z","type":"quit"}
{"nick":"davi","date":"2016-02-07T09:13:59.187Z","type":"join"}
{"nick":"davi","reason":"Ping timeout: 264 seconds","date":"2016-02-07T09:31:59.756Z","type":"quit"}
{"nick":"davi","date":"2016-02-07T10:05:38.393Z","type":"join"}
{"nick":"tunniclm_","date":"2016-02-07T10:29:18.575Z","type":"join"}
{"nick":"Ruyi-HomePC","reason":"Read error: Connection reset by peer","date":"2016-02-07T10:50:40.673Z","type":"quit"}
{"nick":"Ruyi-HomePC","date":"2016-02-07T10:53:53.140Z","type":"join"}
{"nick":"seishun","date":"2016-02-07T11:00:20.890Z","type":"join"}
{"nick":"txdv","message":"0 0","date":"2016-02-07T11:45:35.871Z","type":"message"}
{"nick":"txdv","message":"mono: src/unix/async.c:137: uv__async_io: Assertion `n == sizeof(val)' failed.","date":"2016-02-07T11:45:36.097Z","type":"message"}
{"nick":"txdv","message":"fails consistantly 64bit","date":"2016-02-07T11:49:21.641Z","type":"message"}
{"nick":"davi","reason":"Remote host closed the connection","date":"2016-02-07T12:57:21.944Z","type":"quit"}
{"nick":"amurzeau","date":"2016-02-07T13:15:32.778Z","type":"join"}
{"nick":"davi","date":"2016-02-07T13:16:06.901Z","type":"join"}
{"nick":"davi","reason":"Ping timeout: 245 seconds","date":"2016-02-07T13:47:01.924Z","type":"quit"}
{"nick":"Ruyi-HomePC","reason":"Read error: Connection reset by peer","date":"2016-02-07T14:01:59.529Z","type":"quit"}
{"nick":"mafintosh","date":"2016-02-07T14:40:12.263Z","type":"join"}
{"nick":"mafintosh","message":"is there anyway to disable SO_REUSEPORT in libuv 0.10 on udp sockets?","date":"2016-02-07T14:40:29.315Z","type":"message"}
{"nick":"mafintosh","message":"(i have something i want to support in node 0.10 if possible)","date":"2016-02-07T14:40:58.569Z","type":"message"}
{"nick":"rmg","date":"2016-02-07T14:50:17.071Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 245 seconds","date":"2016-02-07T14:54:56.891Z","type":"quit"}
{"nick":"txdv","message":"yeah","date":"2016-02-07T15:16:10.970Z","type":"message"}
{"nick":"txdv","message":"you get the fd with uv_fileno","date":"2016-02-07T15:16:33.557Z","type":"message"}
{"nick":"txdv","message":"and then you can do whatever you want","date":"2016-02-07T15:16:37.568Z","type":"message"}
{"nick":"txdv","message":"i usually wear the fd like a hat","date":"2016-02-07T15:16:49.986Z","type":"message"}
{"nick":"bradleymeck","date":"2016-02-07T15:29:58.669Z","type":"join"}
{"nick":"cremes","reason":"Ping timeout: 250 seconds","date":"2016-02-07T15:42:32.545Z","type":"quit"}
{"nick":"cremes","date":"2016-02-07T15:47:52.724Z","type":"join"}
{"nick":"davi","date":"2016-02-07T15:50:19.819Z","type":"join"}
{"nick":"ruyi_du_","reason":"Read error: Connection timed out","date":"2016-02-07T15:52:07.280Z","type":"quit"}
{"nick":"ruyi_du_","date":"2016-02-07T15:53:03.134Z","type":"join"}
{"nick":"cremes","reason":"Ping timeout: 264 seconds","date":"2016-02-07T15:57:11.769Z","type":"quit"}
{"nick":"cremes","date":"2016-02-07T16:00:01.774Z","type":"join"}
{"nick":"happy-dude","date":"2016-02-07T16:24:14.268Z","type":"join"}
{"nick":"rmg","date":"2016-02-07T16:51:49.022Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 245 seconds","date":"2016-02-07T16:56:20.802Z","type":"quit"}
{"nick":"Damn3d","reason":"Ping timeout: 250 seconds","date":"2016-02-07T16:57:04.609Z","type":"quit"}
{"nick":"Damn3d","date":"2016-02-07T17:01:08.650Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-02-07T17:20:21.162Z","type":"quit"}
{"nick":"evanlucas","reason":"Ping timeout: 245 seconds","date":"2016-02-07T17:33:16.961Z","type":"quit"}
{"nick":"evanlucas","date":"2016-02-07T17:33:30.947Z","type":"join"}
{"nick":"davi","reason":"Remote host closed the connection","date":"2016-02-07T17:55:04.920Z","type":"quit"}
{"nick":"davi","date":"2016-02-07T17:55:42.765Z","type":"join"}
{"nick":"bradleymeck","date":"2016-02-07T18:24:21.657Z","type":"join"}
{"nick":"steveire","date":"2016-02-07T18:33:02.777Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-02-07T18:33:50.919Z","type":"quit"}
{"nick":"davi","reason":"Ping timeout: 260 seconds","date":"2016-02-07T18:36:50.674Z","type":"quit"}
{"nick":"Jacob8432","date":"2016-02-07T19:46:40.502Z","type":"join"}
{"nick":"Jacob843","reason":"Ping timeout: 245 seconds","date":"2016-02-07T19:50:30.926Z","type":"quit"}
{"nick":"Left_Turn","reason":"Ping timeout: 252 seconds","date":"2016-02-07T19:54:02.200Z","type":"quit"}
{"nick":"Jacob8432","reason":"Quit: Leaving","date":"2016-02-07T19:55:04.726Z","type":"quit"}
{"nick":"Jacob843","date":"2016-02-07T19:55:34.656Z","type":"join"}
{"nick":"brson","date":"2016-02-07T20:09:12.754Z","type":"join"}
{"nick":"saghul","message":"mafintosh: not officially in libuv 0.10, but you can dig into the internals, we are not going to change them now :-)","date":"2016-02-07T21:10:44.714Z","type":"message"}
{"nick":"mafintosh","message":"saghul: thanks - i'll do that","date":"2016-02-07T21:11:17.375Z","type":"message"}
{"nick":"saghul","message":"it's usually handle->io_watcher.fd","date":"2016-02-07T21:12:15.517Z","type":"message"}
{"nick":"Left_Turn","date":"2016-02-07T21:16:11.545Z","type":"join"}
{"nick":"saghul","reason":"Remote host closed the connection","date":"2016-02-07T21:27:12.471Z","type":"quit"}
{"nick":"saghul","date":"2016-02-07T21:36:45.714Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 250 seconds","date":"2016-02-07T21:49:10.726Z","type":"quit"}
{"nick":"happy-dude","reason":"Quit: Connection closed for inactivity","date":"2016-02-07T21:59:48.736Z","type":"quit"}
{"nick":"steveire","reason":"Remote host closed the connection","date":"2016-02-07T22:01:16.265Z","type":"quit"}
{"nick":"amurzeau","reason":"Quit: Page closed","date":"2016-02-07T22:03:12.999Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 276 seconds","date":"2016-02-07T22:09:59.040Z","type":"quit"}
{"nick":"brson","date":"2016-02-07T22:33:06.067Z","type":"join"}
{"nick":"iamtakingiteasy","date":"2016-02-07T23:27:27.861Z","type":"join"}
{"nick":"iamtakingiteasy","message":"hello, i am looking at many examples of libuv code and i am confused by multitude of examples of heap-allocated loop uv_loop_t* structure, without single one performed on stack. is there a reason why we should not allocate uv_loop_t on stack?","date":"2016-02-07T23:28:51.612Z","type":"message"}
{"nick":"bwoebi","date":"2016-02-07T23:32:26.496Z","type":"join"}
{"nick":"iamtakingiteasy","message":"mostly, those examples are accompanied by motivation that \"so we can use custom memory allocators\", or with no comment at all, but what could possibly hold them all from using &var syntax of getting memory address pointing to a stack-allocated instance?","date":"2016-02-07T23:33:39.511Z","type":"message"}
{"nick":"iamtakingiteasy","message":"is such preference exists due to some background of node.js infrastructure?","date":"2016-02-07T23:35:14.600Z","type":"message"}
{"nick":"bwoebi","message":"Hey … I've been debugging libuv for hours, but this is just weird … uv__async_init() creates pipe pair on fd 8 and 9. uv__async_send() writes on fd 9, kevent listens on fd 8 … everything is fine the first time uv_fs_open is called (write on fd 9, kevent returns notification about data on fd 8), but second time it is called, uv__async_send is writing one byte on fd 9, but kevent() is blocking and not reporting any ne","date":"2016-02-07T23:39:22.078Z","type":"message"}
{"nick":"bwoebi","message":"w data on fd 8 (I'm also neither seeing any read between the write and the kevent syscall, neither do I see a delete or disable of fd 8 in any kevent syscall) ... All on newest libuv 1.x on OS X 10.11.3","date":"2016-02-07T23:39:22.305Z","type":"message"}
{"nick":"bwoebi","message":"oh well","date":"2016-02-07T23:43:21.195Z","type":"message"}
{"nick":"bwoebi","message":"I see what's going wrong, 5 minutes after I post here <.<","date":"2016-02-07T23:43:34.771Z","type":"message"}
{"nick":"bwoebi","message":"the fd passed to kevent changed …","date":"2016-02-07T23:43:48.726Z","type":"message"}
{"nick":"bwoebi","message":"sorry :-/","date":"2016-02-07T23:43:50.924Z","type":"message"}
{"nick":"fourq","new_nick":"fourq|away","date":"2016-02-07T23:54:24.211Z","type":"nick"}
{"nick":"fourq|away","new_nick":"fourq","date":"2016-02-07T23:59:33.957Z","type":"nick"}
