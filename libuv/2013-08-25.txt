{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-08-25T00:00:00.541Z","type":"quit"}
{"nick":"ircretary","date":"2013-08-25T00:00:08.938Z","type":"join"}
{"nick":"mordy__","message":"what do you know; it works :)","date":"2013-08-25T00:03:38.828Z","type":"message"}
{"nick":"mordy__","message":"well, the casting to a char thing, that is","date":"2013-08-25T00:03:45.018Z","type":"message"}
{"nick":"mordy__","message":"tjfontaine: is this any more helpful?","date":"2013-08-25T00:04:10.464Z","type":"message"}
{"nick":"mordy__","message":"the culprit is the second \"CAS: (H): <hex>\"","date":"2013-08-25T00:04:22.819Z","type":"message"}
{"nick":"tjfontaine","message":"it's not more helpful, without seeing it in context of the code","date":"2013-08-25T00:05:06.394Z","type":"message"}
{"nick":"mordy__","message":"hrm..","date":"2013-08-25T00:05:45.077Z","type":"message"}
{"nick":"tjfontaine","message":"not v8, but your plugin","date":"2013-08-25T00:05:52.534Z","type":"message"}
{"nick":"tjfontaine","message":"*addon","date":"2013-08-25T00:05:56.589Z","type":"message"}
{"nick":"mordy__","message":"alrighty; the actual object i'm trying to print is created here","date":"2013-08-25T00:11:20.697Z","type":"message"}
{"nick":"mordy__","message":"(i'm using the _LP64 variant)","date":"2013-08-25T00:11:34.592Z","type":"message"}
{"nick":"mordy__","message":"so the path for this is normally..:","date":"2013-08-25T00:12:27.784Z","type":"message"}
{"nick":"mordy__","message":"https://github.com/mnunberg/couchnode/blob/master/src/cookie.cc","date":"2013-08-25T00:12:48.921Z","type":"message"}
{"nick":"mordy__","message":"libcouchbase calls into one of the callbacks defined on the bottom of the file. each of those callbacks create a new ResponseInfo object on the stack, populating it with the relevant info","date":"2013-08-25T00:13:53.780Z","type":"message"}
{"nick":"tjfontaine","message":"there's no External in that file","date":"2013-08-25T00:14:19.540Z","type":"message"}
{"nick":"mordy__","message":"oh right","date":"2013-08-25T00:14:34.908Z","type":"message"}
{"nick":"mordy__","message":"i didn't send the link for the External","date":"2013-08-25T00:14:40.839Z","type":"message"}
{"nick":"mordy__","message":"https://github.com/mnunberg/couchnode/blob/master/src/cas.cc","date":"2013-08-25T00:14:54.813Z","type":"message"}
{"nick":"tjfontaine","message":"that dereference is needed there? External::Cast(*obj)","date":"2013-08-25T00:15:52.648Z","type":"message"}
{"nick":"mordy__","message":"tjfontaine: nope. i've changed it to obj.As<External>()->Value()","date":"2013-08-25T00:16:20.489Z","type":"message"}
{"nick":"mordy__","message":"but that's not where it's crashing","date":"2013-08-25T00:16:28.735Z","type":"message"}
{"nick":"tjfontaine","message":"k, I'm just looking through it","date":"2013-08-25T00:16:34.581Z","type":"message"}
{"nick":"mordy__","message":"yeah. it's probably not your simplest node addon","date":"2013-08-25T00:16:45.275Z","type":"message"}
{"nick":"tjfontaine","message":"oh I see, it's a slight abuse","date":"2013-08-25T00:18:03.443Z","type":"message"}
{"nick":"mordy__","message":"actually.. let me check if things magically behave if i -DCOUCHNODE_NO_CASINTPTR","date":"2013-08-25T00:19:09.220Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-08-25T00:19:27.774Z","type":"quit"}
{"nick":"tjfontaine","message":"so you're creating things with out a handlescope because couchbase calls back in?","date":"2013-08-25T00:20:05.265Z","type":"message"}
{"nick":"mordy__","message":"tjfontaine: so this is what i was explaining earlier","date":"2013-08-25T00:20:23.693Z","type":"message"}
{"nick":"mordy__","message":"it has a handlescope","date":"2013-08-25T00:20:28.816Z","type":"message"}
{"nick":"mordy__","message":"the ResponseInfo has a HandleScope member","date":"2013-08-25T00:20:34.987Z","type":"message"}
{"nick":"mordy__","message":"and it's always the first thing created","date":"2013-08-25T00:20:39.833Z","type":"message"}
{"nick":"mordy__","message":"it's a bit \"clever\" unfortunately.. but i hate boilerplate more than cleverness","date":"2013-08-25T00:20:52.787Z","type":"message"}
{"nick":"tjfontaine","message":"until it's impossible to debug","date":"2013-08-25T00:21:05.616Z","type":"message"}
{"nick":"tjfontaine","message":"anyway still reading","date":"2013-08-25T00:21:20.639Z","type":"message"}
{"nick":"tjfontaine","message":"is libcouchbase single threaded?","date":"2013-08-25T00:21:36.857Z","type":"message"}
{"nick":"mordy__","message":"yeah","date":"2013-08-25T00:21:50.482Z","type":"message"}
{"nick":"mordy__","message":"it's not that clever actually","date":"2013-08-25T00:21:57.671Z","type":"message"}
{"nick":"mordy__","message":"all the callback stuff is very simple from the C side","date":"2013-08-25T00:22:04.388Z","type":"message"}
{"nick":"mordy__","message":"the *spooled stuff is broken","date":"2013-08-25T00:22:30.027Z","type":"message"}
{"nick":"mordy__","message":"but that's not the path being followed anyway","date":"2013-08-25T00:22:36.291Z","type":"message"}
{"nick":"tjfontaine","message":"I vote you recompile with --debug","date":"2013-08-25T00:24:21.268Z","type":"message"}
{"nick":"TooTallNate","date":"2013-08-25T00:24:24.369Z","type":"join"}
{"nick":"tjfontaine","message":"because that stack trace is basically useless, at least on that platform","date":"2013-08-25T00:24:37.919Z","type":"message"}
{"nick":"mordy__","message":"hrm, and it works on the 32 bit variant","date":"2013-08-25T00:25:26.206Z","type":"message"}
{"nick":"tjfontaine","message":"the 32bit is doing somethign significantly different, I wonder if it would behave better if you didn't abuse uint64_t as a pointer","date":"2013-08-25T00:26:00.911Z","type":"message"}
{"nick":"mordy__","message":"tjfontaine: afaik nothing is reading from it","date":"2013-08-25T00:26:16.155Z","type":"message"}
{"nick":"mordy__","message":"and the 'cas' value is never handled at the application level","date":"2013-08-25T00:26:40.955Z","type":"message"}
{"nick":"mordy__","message":"it's just an opaque token sent to and from the network","date":"2013-08-25T00:26:49.407Z","type":"message"}
{"nick":"tjfontaine","message":"like, do `uint64_t *v = new uint64_t; *v = cas; External::New(v)`","date":"2013-08-25T00:26:53.716Z","type":"message"}
{"nick":"tjfontaine","message":"mordy__: but v8 may be expecting things to be aligned or whatever","date":"2013-08-25T00:27:06.006Z","type":"message"}
{"nick":"TooTallNate","reason":"Client Quit","date":"2013-08-25T00:27:27.305Z","type":"quit"}
{"nick":"mordy__","message":"even for \"External\" data? hrm.","date":"2013-08-25T00:27:28.944Z","type":"message"}
{"nick":"mordy__","message":"the 32 bit version abuses the cas as an 8 byte character array","date":"2013-08-25T00:27:41.471Z","type":"message"}
{"nick":"mordy__","message":"via 'new'","date":"2013-08-25T00:27:53.865Z","type":"message"}
{"nick":"tjfontaine","message":"yes, I'm not sure why you're using two different paths for this","date":"2013-08-25T00:28:39.227Z","type":"message"}
{"nick":"mordy__","message":"hrm, let's see how it performs here","date":"2013-08-25T00:28:50.783Z","type":"message"}
{"nick":"mordy__","message":"the thing is that the CAS is not really inspected by the application","date":"2013-08-25T00:29:00.326Z","type":"message"}
{"nick":"tjfontaine","message":"also casDtor could just pass the pointer and avoid the GetIndexedProperties...","date":"2013-08-25T00:29:46.602Z","type":"message"}
{"nick":"mordy__","message":"tjfontaine: in my benchmarks the 32 bit version performs a bit slower.. 21k/sec with External; 20k with Object","date":"2013-08-25T00:33:06.259Z","type":"message"}
{"nick":"mordy__","message":"and for whatever reason, ends up using 65M of memory rather than 15M","date":"2013-08-25T00:33:58.993Z","type":"message"}
{"nick":"mordy__","message":"but i can live with it","date":"2013-08-25T00:34:56.477Z","type":"message"}
{"nick":"TooTallNate","date":"2013-08-25T00:54:11.009Z","type":"join"}
{"nick":"amartens","reason":"Quit: Leaving.","date":"2013-08-25T01:17:26.654Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-08-25T02:01:51.846Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-25T02:08:19.753Z","type":"join"}
{"nick":"TooTallNate","date":"2013-08-25T02:09:34.973Z","type":"join"}
{"nick":"julianduque","date":"2013-08-25T02:25:04.207Z","type":"join"}
{"nick":"dominictarr","date":"2013-08-25T03:15:14.569Z","type":"join"}
{"nick":"kazupon","date":"2013-08-25T03:27:09.885Z","type":"join"}
{"nick":"mburns","reason":"Ping timeout: 264 seconds","date":"2013-08-25T03:29:38.854Z","type":"quit"}
{"nick":"brson","date":"2013-08-25T03:47:16.239Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-08-25T03:55:49.919Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-25T04:06:51.197Z","type":"quit"}
{"nick":"ircretary","reason":"Ping timeout: 276 seconds","date":"2013-08-25T04:14:12.780Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-25T04:22:54.606Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-25T04:28:26.466Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-25T04:48:20.315Z","type":"quit"}
{"nick":"mburns","date":"2013-08-25T04:52:16.570Z","type":"join"}
{"nick":"mburns","reason":"Read error: Connection reset by peer","date":"2013-08-25T05:17:10.848Z","type":"quit"}
{"nick":"mburns","date":"2013-08-25T05:18:28.342Z","type":"join"}
{"nick":"MI6","reason":"Remote host closed the connection","date":"2013-08-25T05:23:00.413Z","type":"quit"}
{"nick":"MI6","date":"2013-08-25T05:23:12.605Z","type":"join"}
{"nick":"jmar777","date":"2013-08-25T05:24:21.434Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-25T05:37:18.999Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-25T05:53:28.384Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-25T06:30:35.067Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-25T06:35:58.988Z","type":"join"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-08-25T06:44:52.928Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #175 \u00037UNSTABLE\u000f windows-x64 (7/597) windows-ia32 (7/597) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/175/","date":"2013-08-25T06:47:52.291Z","type":"message"}
{"nick":"jmar777","date":"2013-08-25T06:51:22.013Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-25T06:54:50.787Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-25T07:10:28.202Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-25T07:11:06.176Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 246 seconds","date":"2013-08-25T07:15:07.968Z","type":"quit"}
{"nick":"hz","date":"2013-08-25T07:16:34.592Z","type":"join"}
{"nick":"st_luke","date":"2013-08-25T07:22:03.862Z","type":"join"}
{"nick":"rendar","date":"2013-08-25T07:37:14.357Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-08-25T07:50:04.393Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-25T07:52:21.562Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-25T07:59:33.856Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-25T08:00:12.449Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 264 seconds","date":"2013-08-25T08:04:54.182Z","type":"quit"}
{"nick":"rendar","date":"2013-08-25T08:04:57.802Z","type":"quit"}
{"nick":"rendar","date":"2013-08-25T08:06:36.954Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-25T08:18:07.841Z","type":"quit"}
{"nick":"kazupon_","date":"2013-08-25T08:18:59.802Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-08-25T08:19:24.549Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-25T08:21:36.751Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-25T08:34:33.007Z","type":"quit"}
{"nick":"rendar","reason":"Ping timeout: 260 seconds","date":"2013-08-25T08:39:23.942Z","type":"quit"}
{"nick":"rendar","date":"2013-08-25T08:57:33.629Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-25T09:06:41.266Z","type":"nick"}
{"nick":"dominictarr","date":"2013-08-25T09:08:09.980Z","type":"join"}
{"nick":"roxlu","date":"2013-08-25T09:27:39.226Z","type":"join"}
{"nick":"kazupon_","reason":"Remote host closed the connection","date":"2013-08-25T09:36:11.586Z","type":"quit"}
{"nick":"rendar_","date":"2013-08-25T09:46:42.428Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-25T09:46:43.760Z","type":"join"}
{"nick":"Dasmylle1","date":"2013-08-25T09:47:11.637Z","type":"join"}
{"nick":"rendar","reason":"Ping timeout: 240 seconds","date":"2013-08-25T09:47:50.550Z","type":"quit"}
{"nick":"Dasmyller","reason":"Ping timeout: 260 seconds","date":"2013-08-25T09:48:37.523Z","type":"quit"}
{"nick":"rendar_","reason":"Ping timeout: 245 seconds","date":"2013-08-25T09:53:03.165Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-25T10:41:57.952Z","type":"join"}
{"nick":"indutny","message":"hello","date":"2013-08-25T10:45:04.920Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1447 \u00037UNSTABLE\u000f osx-ia32 (1/597) smartos-x64 (2/597) http://jenkins.nodejs.org/job/nodejs-v0.10/1447/","date":"2013-08-25T10:48:27.006Z","type":"message"}
{"nick":"bnoordhuis","message":"hello fedor","date":"2013-08-25T10:56:37.228Z","type":"message"}
{"nick":"bnoordhuis","message":"api decision time","date":"2013-08-25T10:56:56.328Z","type":"message"}
{"nick":"bnoordhuis","message":"libuv sets SO_REUSEPORT if available on udp sockets","date":"2013-08-25T10:57:09.940Z","type":"message"}
{"nick":"bnoordhuis","message":"the thing is that linux >= 3.9 has that flag but it does something different from the BSDs","date":"2013-08-25T10:57:31.076Z","type":"message"}
{"nick":"bnoordhuis","message":"on the bsds, it's basically SO_REUSEADDR but it also lets you steal the port","date":"2013-08-25T10:57:51.956Z","type":"message"}
{"nick":"bnoordhuis","message":"on linux, it turns on fair load distribution","date":"2013-08-25T10:58:10.917Z","type":"message"}
{"nick":"bnoordhuis","message":"iow, on the bsds, the last process to bind, gets all the traffic","date":"2013-08-25T10:58:29.933Z","type":"message"}
{"nick":"bnoordhuis","message":"while on linux, all the processes get traffic","date":"2013-08-25T10:58:45.665Z","type":"message"}
{"nick":"bnoordhuis","message":"i like the linux behavior but it's fundamentally different","date":"2013-08-25T10:59:52.068Z","type":"message"}
{"nick":"bnoordhuis","message":"so i'm thinking we should stop setting SO_REUSEPORT on linux :-/","date":"2013-08-25T11:00:08.534Z","type":"message"}
{"nick":"bnoordhuis","message":"opinions?","date":"2013-08-25T11:00:11.244Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: ^","date":"2013-08-25T11:00:32.092Z","type":"message"}
{"nick":"indutny","message":"щр","date":"2013-08-25T11:00:51.639Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2013-08-25T11:00:57.099Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2013-08-25T11:01:13.140Z","type":"message"}
{"nick":"indutny","message":"I think we might want to incorporate that in API","date":"2013-08-25T11:01:29.056Z","type":"message"}
{"nick":"indutny","message":"or ship libuv with kernel modules","date":"2013-08-25T11:01:47.167Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-08-25T11:01:48.121Z","type":"message"}
{"nick":"indutny","message":"I mean, that we probably can create an API that would make that differences irrelevant","date":"2013-08-25T11:02:16.561Z","type":"message"}
{"nick":"indutny","message":"and invisible for users","date":"2013-08-25T11:02:23.580Z","type":"message"}
{"nick":"indutny","message":"as we already do for many stuff on windows","date":"2013-08-25T11:02:29.880Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm not sure if my point is getting across :)","date":"2013-08-25T11:13:02.985Z","type":"message"}
{"nick":"bnoordhuis","message":"the thing with SO_REUSEPORT is that your program will behave different on linux 3.8 vs 3.9","date":"2013-08-25T11:14:54.901Z","type":"message"}
{"nick":"bnoordhuis","message":"to say nothing of the BSDs and solaris","date":"2013-08-25T11:15:03.196Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-25T11:15:37.123Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-25T11:19:48.889Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-08-25T11:24:47.692Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-25T11:32:45.404Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 276 seconds","date":"2013-08-25T11:35:33.776Z","type":"quit"}
{"nick":"dominictarr","reason":"Ping timeout: 260 seconds","date":"2013-08-25T11:40:27.979Z","type":"quit"}
{"nick":"dominictarr","date":"2013-08-25T11:47:44.538Z","type":"join"}
{"nick":"hz","reason":"Ping timeout: 256 seconds","date":"2013-08-25T11:58:48.444Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-25T12:01:58.189Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-25T12:23:00.877Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-08-25T12:24:04.178Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-25T12:24:21.166Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-25T12:30:41.932Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-08-25T12:41:03.692Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 276 seconds","date":"2013-08-25T12:46:24.785Z","type":"quit"}
{"nick":"kevinswiber","date":"2013-08-25T12:51:13.037Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-25T13:08:38.773Z","type":"quit"}
{"nick":"pachet_","date":"2013-08-25T13:25:44.098Z","type":"join"}
{"nick":"kevinswiber","date":"2013-08-25T13:27:29.137Z","type":"join"}
{"nick":"DrPizza_","date":"2013-08-25T13:27:31.579Z","type":"join"}
{"nick":"othiym23`","date":"2013-08-25T13:28:20.423Z","type":"join"}
{"nick":"jez0990_","date":"2013-08-25T13:29:09.857Z","type":"join"}
{"nick":"DrPizza","reason":"Write error: Broken pipe","date":"2013-08-25T13:29:24.007Z","type":"quit"}
{"nick":"kuplatupsu","reason":"Write error: Broken pipe","date":"2013-08-25T13:29:26.867Z","type":"quit"}
{"nick":"Dasmylle1","reason":"Read error: Operation timed out","date":"2013-08-25T13:29:26.867Z","type":"quit"}
{"nick":"othiym23","reason":"Ping timeout: 240 seconds","date":"2013-08-25T13:29:27.747Z","type":"quit"}
{"nick":"jez0990","reason":"Read error: Operation timed out","date":"2013-08-25T13:29:28.153Z","type":"quit"}
{"nick":"pachet","reason":"Ping timeout: 240 seconds","date":"2013-08-25T13:29:28.807Z","type":"quit"}
{"nick":"Domenic_","reason":"Ping timeout: 240 seconds","date":"2013-08-25T13:29:28.807Z","type":"quit"}
{"nick":"Dasmyller","date":"2013-08-25T13:29:52.610Z","type":"join"}
{"nick":"kuplatupsu","date":"2013-08-25T13:29:55.685Z","type":"join"}
{"nick":"AvianFlu","date":"2013-08-25T14:05:24.854Z","type":"join"}
{"nick":"kazupon","date":"2013-08-25T14:39:11.162Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-25T14:57:41.971Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-25T15:19:58.583Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #478 \u00037UNSTABLE\u000f linux-ia32 (7/636) smartos-x64 (10/636) osx-ia32 (3/636) smartos-ia32 (3/636) osx-x64 (2/636) linux-x64 (2/636) http://jenkins.nodejs.org/job/nodejs-master/478/","date":"2013-08-25T15:20:48.875Z","type":"message"}
{"nick":"kazupon","date":"2013-08-25T15:26:54.071Z","type":"join"}
{"nick":"rendar","date":"2013-08-25T15:30:27.539Z","type":"join"}
{"nick":"Domenic_","date":"2013-08-25T15:37:53.604Z","type":"join"}
{"nick":"hz","date":"2013-08-25T15:39:12.853Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-08-25T15:42:14.857Z","type":"quit"}
{"nick":"kazupon_","date":"2013-08-25T15:46:27.755Z","type":"join"}
{"nick":"kazupon_","reason":"Read error: Connection reset by peer","date":"2013-08-25T15:47:51.256Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-25T15:48:33.114Z","type":"join"}
{"nick":"kevinswiber","date":"2013-08-25T15:59:45.170Z","type":"join"}
{"nick":"TooTallNate","date":"2013-08-25T16:27:12.361Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-25T16:31:51.806Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-25T16:32:14.754Z","type":"quit"}
{"nick":"tjfontaine","message":"bnoordhuis: if we don't set it by default, maybe we need an extra api for someone who might want to?","date":"2013-08-25T16:41:53.478Z","type":"message"}
{"nick":"kazupon_","date":"2013-08-25T16:43:17.987Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 241 seconds","date":"2013-08-25T16:45:38.019Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Bert Belder\u000f \u00037master\u000f * \u000287405b0\u0002 : process_wrap: don't coerce process exit code to int32_t - http://git.io/aCZ_YA","date":"2013-08-25T16:50:49.721Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-08-25T16:50:58.164Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: https://github.com/andrewlow/node/blob/v0.10.16-release-ppc/deps/uv/src/unix/aix.c <-- you seen that?","date":"2013-08-25T16:53:08.327Z","type":"message"}
{"nick":"tjfontaine","message":"I have a draft email about upstreaming those things","date":"2013-08-25T16:53:40.139Z","type":"message"}
{"nick":"tjfontaine","message":"also about making their v8 branch a real fork from github.com/v8/v8","date":"2013-08-25T16:53:59.816Z","type":"message"}
{"nick":"piscisaureus_","message":"the code looks clean although they didn't do the errno refactor so it seems","date":"2013-08-25T16:54:39.413Z","type":"message"}
{"nick":"tjfontaine","message":"yup","date":"2013-08-25T16:54:46.998Z","type":"message"}
{"nick":"mordy__","message":"hrm, does obj->Get() return Undefined if there isn't a value?","date":"2013-08-25T16:54:56.255Z","type":"message"}
{"nick":"tjfontaine","message":"it's a pretty straight forward port","date":"2013-08-25T16:55:05.763Z","type":"message"}
{"nick":"tjfontaine","message":"v8 aside","date":"2013-08-25T16:55:09.962Z","type":"message"}
{"nick":"piscisaureus_","message":"mordy__: yes","date":"2013-08-25T16:55:14.979Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: yeah, v8 is only a minor nuisance huh :)","date":"2013-08-25T16:55:33.022Z","type":"message"}
{"nick":"mordy__","message":"hrm","date":"2013-08-25T16:55:33.372Z","type":"message"}
{"nick":"tjfontaine","message":"piscisaureus_: I mean that as a compliment to libuv :P (and the work that aprock... already did) :P","date":"2013-08-25T16:56:05.161Z","type":"message"}
{"nick":"tjfontaine","message":"mordy__: you may want to also check IsEmpty()","date":"2013-08-25T16:56:30.199Z","type":"message"}
{"nick":"mordy__","message":"tjfontaine: that's what i was doing before, but i realize now that IsEmpty never actually returns true","date":"2013-08-25T16:57:35.610Z","type":"message"}
{"nick":"tjfontaine","message":"mk","date":"2013-08-25T16:58:14.086Z","type":"message"}
{"nick":"tjfontaine","message":"http://jenkins.nodejs.org/queue/api/json I have scheduled just a few builds","date":"2013-08-25T16:59:24.218Z","type":"message"}
{"nick":"mordy__","message":"http://paste.scsys.co.uk/266529","date":"2013-08-25T16:59:27.760Z","type":"message"}
{"nick":"tjfontaine","message":"those have been running for just over 12 hours :)","date":"2013-08-25T16:59:37.547Z","type":"message"}
{"nick":"mordy__","message":"i guess i can use 'Has' + 'Get'","date":"2013-08-25T16:59:54.871Z","type":"message"}
{"nick":"mordy__","message":"or maybe something more contrived by just iterating over the property names","date":"2013-08-25T17:00:15.278Z","type":"message"}
{"nick":"piscisaureus_","message":"mordy__: what do you want to check?","date":"2013-08-25T17:00:37.036Z","type":"message"}
{"nick":"piscisaureus_","message":"mordy__: truthy-ness? Undefined?","date":"2013-08-25T17:01:11.491Z","type":"message"}
{"nick":"mordy__","message":"piscisaureus_: in this case i have a bunch of \"ParamSlot\" objects, each of which define their own semantics of truthiness or undefinedness etc. etc. (and each of them has an implementation of a \"parseValue\" which applies these semantics","date":"2013-08-25T17:02:48.107Z","type":"message"}
{"nick":"mordy__","message":"but i want the paramSlot to only execute if the item is in fact found within the objectg","date":"2013-08-25T17:03:06.223Z","type":"message"}
{"nick":"piscisaureus_","message":"mordy__: so - you want 'in' or 'hasOwnProperty' semantics","date":"2013-08-25T17:04:02.986Z","type":"message"}
{"nick":"mordy__","message":"ahh yes","date":"2013-08-25T17:04:21.254Z","type":"message"}
{"nick":"piscisaureus_","message":"(besides - redefining truthiness and undefined-ness, man I dunno)","date":"2013-08-25T17:04:21.877Z","type":"message"}
{"nick":"piscisaureus_","message":"mordy__: which one?","date":"2013-08-25T17:04:28.755Z","type":"message"}
{"nick":"piscisaureus_","message":"mordy__: but in the latter case, you can just use obj->HasOwnProperty(String::New(\"myprop\"))","date":"2013-08-25T17:05:09.489Z","type":"message"}
{"nick":"mordy__","message":"piscisaureus_: 'in'. i'm not redfining truthiness","date":"2013-08-25T17:05:21.122Z","type":"message"}
{"nick":"piscisaureus_","message":"mordy__: ah so you were lyning :-p","date":"2013-08-25T17:05:48.155Z","type":"message"}
{"nick":"mordy__","message":"but, some options distinguish between a \"Value\" existing but being \"Undefined\", while some don't care","date":"2013-08-25T17:07:52.387Z","type":"message"}
{"nick":"piscisaureus_","message":"mordy__: well, use IsUndefined() or HasRealNamedProperty()","date":"2013-08-25T17:08:07.915Z","type":"message"}
{"nick":"piscisaureus_","message":"I'd suggest IsUndefined if you want to pretend an \"explicit\" undefined is equal to a property that doesn't exist","date":"2013-08-25T17:08:32.466Z","type":"message"}
{"nick":"mordy__","message":"piscisaureus_: the concern is the impact of doing a ->Has[...]() and then doing a ->Get().. this is kind of a hot path","date":"2013-08-25T17:08:36.552Z","type":"message"}
{"nick":"piscisaureus_","message":"actually, I said something dumb","date":"2013-08-25T17:09:38.018Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #479 \u00037UNSTABLE\u000f linux-ia32 (1/636) smartos-x64 (15/636) osx-ia32 (2/636) smartos-ia32 (9/636) osx-x64 (1/636) linux-x64 (2/636) http://jenkins.nodejs.org/job/nodejs-master/479/","date":"2013-08-25T17:09:54.918Z","type":"message"}
{"nick":"mordy__","message":"what about \"GetRealNamedProperty\" ?","date":"2013-08-25T17:10:02.816Z","type":"message"}
{"nick":"piscisaureus_","message":"just use Get() and define semantics such that the lack of a property, and it being set to undefined, means the same","date":"2013-08-25T17:10:04.703Z","type":"message"}
{"nick":"piscisaureus_","message":"mordy__: in that case you'd do:","date":"2013-08-25T17:11:08.920Z","type":"message"}
{"nick":"piscisaureus_","message":"Local<Value> v = obj->GetRealNamedProperty(...);","date":"2013-08-25T17:11:09.137Z","type":"message"}
{"nick":"piscisaureus_","message":"if (v->IsEmpty()) { not set } else { set }","date":"2013-08-25T17:11:09.138Z","type":"message"}
{"nick":"piscisaureus_","message":"mordy__: IsEmpty() is very fast","date":"2013-08-25T17:11:21.706Z","type":"message"}
{"nick":"mordy__","message":"hrm, GetRealNamedProperty seems nice","date":"2013-08-25T17:12:44.886Z","type":"message"}
{"nick":"mordy__","message":"and it's made my thing faster too","date":"2013-08-25T17:12:52.875Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 248 seconds","date":"2013-08-25T17:13:41.807Z","type":"quit"}
{"nick":"mordy__","message":"yeah i found IsEmpty in the header. it just checks T.val_ == NULL","date":"2013-08-25T17:14:06.306Z","type":"message"}
{"nick":"mordy__","message":"and it's inline blah blah","date":"2013-08-25T17:14:15.701Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-25T17:14:34.352Z","type":"quit"}
{"nick":"mordy__","message":"i've also just discovered ForceSet, which makes things even quicker, too","date":"2013-08-25T17:17:04.499Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #270 \u00037UNSTABLE\u000f windows-x64 (19/636) windows-ia32 (18/636) http://jenkins.nodejs.org/job/nodejs-master-windows/270/","date":"2013-08-25T17:17:36.068Z","type":"message"}
{"nick":"jmar777","date":"2013-08-25T17:17:57.055Z","type":"join"}
{"nick":"mordy__","message":"btw, does v8 have a Number/Integer cache for small values?","date":"2013-08-25T17:17:57.265Z","type":"message"}
{"nick":"mordy__","message":"something like NewSymbol, but for numbers","date":"2013-08-25T17:18:05.426Z","type":"message"}
{"nick":"tjfontaine","message":"well it has SMI","date":"2013-08-25T17:18:27.827Z","type":"message"}
{"nick":"Domenic_","message":"tjfontaine: sorry about @-mentioning you on that commit, I guess GitHub probably emails you every time I force-push huh.","date":"2013-08-25T17:22:52.086Z","type":"message"}
{"nick":"tjfontaine","message":"heh ya, it's alright","date":"2013-08-25T17:23:38.295Z","type":"message"}
{"nick":"piscisaureus_","message":"peepz","date":"2013-08-25T17:23:46.538Z","type":"message"}
{"nick":"mordy__","message":"hrm, i couldn't find clear documentation on SMI but it seems it does some special integer to pointer mapping","date":"2013-08-25T17:24:10.014Z","type":"message"}
{"nick":"tjfontaine","message":"mordy__: if it's small enough for your arch it will encode the immediate representation, otherwise you get a heapobject","date":"2013-08-25T17:24:51.105Z","type":"message"}
{"nick":"piscisaureus_","message":"suppose I would do something like \"execSync('mybinary', [], { stdio: [ { type: 'pipe', input: 'echo hello' }, 'pipe', 'pipe' ] })\"","date":"2013-08-25T17:24:51.322Z","type":"message"}
{"nick":"pachet_","reason":"Quit: [ +++ ]","date":"2013-08-25T17:25:03.127Z","type":"quit"}
{"nick":"piscisaureus_","message":"... but mybinary would fail to to consume the input ('echo hello')","date":"2013-08-25T17:25:16.872Z","type":"message"}
{"nick":"piscisaureus_","message":"so stdin blows up with EPIPE","date":"2013-08-25T17:25:25.134Z","type":"message"}
{"nick":"piscisaureus_","message":"should execSync report success, or failure?","date":"2013-08-25T17:25:36.623Z","type":"message"}
{"nick":"tjfontaine","message":"return a proper errno object?","date":"2013-08-25T17:26:00.481Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: well the result value for execSync would be something like","date":"2013-08-25T17:26:15.394Z","type":"message"}
{"nick":"mordy__","message":"tjfontaine: hrm, you mean Value->val_ will contain the integer value rather than the heap object","date":"2013-08-25T17:26:23.877Z","type":"message"}
{"nick":"mordy__","message":"which might explain why v8 is sensitive about pointers","date":"2013-08-25T17:26:35.954Z","type":"message"}
{"nick":"piscisaureus_","message":"{","date":"2013-08-25T17:26:38.374Z","type":"message"}
{"nick":"piscisaureus_","message":"  exit_code: 0,","date":"2013-08-25T17:26:38.581Z","type":"message"}
{"nick":"piscisaureus_","message":"  term_sig: 0,","date":"2013-08-25T17:26:38.581Z","type":"message"}
{"nick":"piscisaureus_","message":"  stdout: 'foo',","date":"2013-08-25T17:26:38.581Z","type":"message"}
{"nick":"piscisaureus_","message":"  stderr: 'bar' }","date":"2013-08-25T17:26:38.581Z","type":"message"}
{"nick":"mordy__","message":"since it does something more with val_ than treat it as a memory address","date":"2013-08-25T17:26:53.009Z","type":"message"}
{"nick":"tjfontaine","message":"piscisaureus_: right, I think you could just have an error field","date":"2013-08-25T17:27:22.949Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: I don't really want to report a status for every individual pipe ...","date":"2013-08-25T17:27:29.928Z","type":"message"}
{"nick":"tjfontaine","message":"no but the Error could report which pipe?","date":"2013-08-25T17:27:47.680Z","type":"message"}
{"nick":"tjfontaine","message":"exit code will be non zero in this case,r ight?","date":"2013-08-25T17:28:13.678Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: that was my question :)","date":"2013-08-25T17:28:23.685Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: mybinary might not care. It could just succeed","date":"2013-08-25T17:28:38.727Z","type":"message"}
{"nick":"tjfontaine","message":"so the question is if failing to read stdin when supplied is an error?","date":"2013-08-25T17:28:43.567Z","type":"message"}
{"nick":"piscisaureus_","message":"yes","date":"2013-08-25T17:28:50.018Z","type":"message"}
{"nick":"piscisaureus_","message":"e.g. people could spawn bash with","date":"2013-08-25T17:28:58.742Z","type":"message"}
{"nick":"piscisaureus_","message":"\"exit 0\\necho hello\"","date":"2013-08-25T17:29:04.919Z","type":"message"}
{"nick":"tjfontaine","message":"stdin can only ever be a buffer/string and not a readable, right?","date":"2013-08-25T17:29:31.222Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: right now it can only be a buffer, although we can convert from strings in the binding layer.","date":"2013-08-25T17:29:55.765Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-08-25T17:30:02.723Z","type":"message"}
{"nick":"tjfontaine","message":"I don't think it should be an error","date":"2013-08-25T17:30:21.906Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: (it could be a wrap or an fd - that'd be technically a libuv api violation but it'd work)","date":"2013-08-25T17:30:22.453Z","type":"message"}
{"nick":"tjfontaine","message":"will it have a timeout field for execSync?","date":"2013-08-25T17:30:32.185Z","type":"message"}
{"nick":"piscisaureus_","message":"it doesn't have it - yet - but that's very doable","date":"2013-08-25T17:30:44.552Z","type":"message"}
{"nick":"tjfontaine","message":"I'm leaning on the side of ignoring the stdin epipe","date":"2013-08-25T17:31:55.792Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033piscisaureus\u000f created branch execSync-wip - http://git.io/euolTQ","date":"2013-08-25T17:31:56.334Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: I know I said it worked earlier, although I found many bugs later.","date":"2013-08-25T17:32:09.631Z","type":"message"}
{"nick":"tjfontaine","message":"hehe","date":"2013-08-25T17:32:16.427Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: but there is the wip ^^","date":"2013-08-25T17:32:21.555Z","type":"message"}
{"nick":"tjfontaine","message":"piscisaureus_: thanks!","date":"2013-08-25T17:32:33.291Z","type":"message"}
{"nick":"abraxas","date":"2013-08-25T17:32:42.460Z","type":"join"}
{"nick":"tjfontaine","message":"naughty 80 col violater ;) ben will be so disappointed","date":"2013-08-25T17:33:17.699Z","type":"message"}
{"nick":"piscisaureus_","message":"first things first tj","date":"2013-08-25T17:33:30.412Z","type":"message"}
{"nick":"tjfontaine","message":"hehe I'm just yankin your chain","date":"2013-08-25T17:33:50.820Z","type":"message"}
{"nick":"piscisaureus_","message":"it also has printfs","date":"2013-08-25T17:34:14.013Z","type":"message"}
{"nick":"kazupon_","reason":"Ping timeout: 248 seconds","date":"2013-08-25T17:35:01.690Z","type":"quit"}
{"nick":"piscisaureus_","message":"wait","date":"2013-08-25T17:35:47.422Z","type":"message"}
{"nick":"piscisaureus_","message":"this isn't the final patch","date":"2013-08-25T17:35:52.264Z","type":"message"}
{"nick":"piscisaureus_","message":"or ehm","date":"2013-08-25T17:35:59.451Z","type":"message"}
{"nick":"piscisaureus_","message":"not even the one I am working on","date":"2013-08-25T17:36:03.248Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Bert Belder\u000f \u00037execSync-wip\u000f * \u0002980bd6b\u0002 : execSync spawnSync WIP - http://git.io/RWsY_g","date":"2013-08-25T17:36:40.448Z","type":"message"}
{"nick":"piscisaureus_","message":"^-- tjfontaine: meilleur","date":"2013-08-25T17:36:45.119Z","type":"message"}
{"nick":"abraxas","reason":"Ping timeout: 245 seconds","date":"2013-08-25T17:37:06.715Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-25T17:38:06.377Z","type":"join"}
{"nick":"tjfontaine","message":"piscisaureus_: so far everything makes sense","date":"2013-08-25T17:40:03.376Z","type":"message"}
{"nick":"MI6","message":"\u0002node-review\u0002: #70 \u0002ABORTED\u0002 http://jenkins.nodejs.org/job/node-review/70/","date":"2013-08-25T17:40:24.409Z","type":"message"}
{"nick":"piscisaureus_","message":"conceptually it's very simple although it involves a lot of code","date":"2013-08-25T17:40:26.556Z","type":"message"}
{"nick":"tjfontaine","message":"ya, the stdio helper class is nice","date":"2013-08-25T17:40:38.666Z","type":"message"}
{"nick":"piscisaureus_","message":"because all the piping logic needs to be done in c++","date":"2013-08-25T17:40:46.273Z","type":"message"}
{"nick":"tjfontaine","message":"yup","date":"2013-08-25T17:40:50.299Z","type":"message"}
{"nick":"piscisaureus_","message":"there was no other way","date":"2013-08-25T17:40:54.534Z","type":"message"}
{"nick":"piscisaureus_","message":"although actually I couldn't kill the process on stdio error right now","date":"2013-08-25T17:41:06.631Z","type":"message"}
{"nick":"piscisaureus_","message":"because there is no way to look up the process object from the OnRead callback","date":"2013-08-25T17:41:20.646Z","type":"message"}
{"nick":"piscisaureus_","message":"I have to add some sort of spawn_sync_context object for that","date":"2013-08-25T17:41:37.664Z","type":"message"}
{"nick":"tjfontaine","message":"I'm exceedingly happy that we're likely to get this in for 0.12 :)","date":"2013-08-25T17:42:25.562Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: well who knows","date":"2013-08-25T17:43:33.165Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: I also have to come up with an user facing API for it","date":"2013-08-25T17:43:49.924Z","type":"message"}
{"nick":"piscisaureus_","message":"which involves a lot of arbirary choices","date":"2013-08-25T17:43:57.435Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-08-25T17:44:35.305Z","type":"message"}
{"nick":"piscisaureus_","message":"e.g. will execSync throw if the process returns nonzero like .exec ?","date":"2013-08-25T17:44:46.034Z","type":"message"}
{"nick":"tjfontaine","message":"but I'm sure we can all come to a reasonable set of features","date":"2013-08-25T17:44:46.635Z","type":"message"}
{"nick":"tjfontaine","message":"since we have a state object being returned I don't think throwing will be necessary","date":"2013-08-25T17:45:07.438Z","type":"message"}
{"nick":"piscisaureus_","message":"I fear some pain in this area. our current child process apis are kind of wonky in some regards","date":"2013-08-25T17:45:08.267Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: well - that'd break consistency","date":"2013-08-25T17:45:31.539Z","type":"message"}
{"nick":"mikeal","date":"2013-08-25T17:45:44.784Z","type":"join"}
{"nick":"piscisaureus_","message":"you'd expect the synchronous version of a function to throw when the async version drops an error","date":"2013-08-25T17:46:01.302Z","type":"message"}
{"nick":"piscisaureus_","message":"we could also do a low-level spawnSync but spawnSync is a weird name","date":"2013-08-25T17:46:23.377Z","type":"message"}
{"nick":"tjfontaine","message":"but those don't return complex objects generally","date":"2013-08-25T17:46:23.645Z","type":"message"}
{"nick":"piscisaureus_","message":"maybe execSync should just get a string back?","date":"2013-08-25T17:46:49.100Z","type":"message"}
{"nick":"piscisaureus_","message":"that'd be good enough for most cases","date":"2013-08-25T17:46:56.586Z","type":"message"}
{"nick":"piscisaureus_","message":"question is if we'd want to merge stdout and stderr or report separately","date":"2013-08-25T17:48:39.326Z","type":"message"}
{"nick":"piscisaureus_","message":"or maybe even hide stderr except in case of an error, and add it to the error object","date":"2013-08-25T17:48:57.022Z","type":"message"}
{"nick":"piscisaureus_","message":"ok - time out-","date":"2013-08-25T17:49:00.250Z","type":"message"}
{"nick":"tjfontaine","message":"well, spawnSync could return the complex I guess, separated out, and execSync could return stdout and throw on non-zero","date":"2013-08-25T17:49:12.904Z","type":"message"}
{"nick":"kevinswiber","date":"2013-08-25T17:50:59.053Z","type":"join"}
{"nick":"tjfontaine","message":"var e = new Error(whatWentWrong); e.state = spawnSyncResult; seems reasonable, or util._extend(e, spawnSyncResult)","date":"2013-08-25T17:52:58.612Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 260 seconds","date":"2013-08-25T17:53:47.969Z","type":"quit"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-08-25T17:58:51.229Z","type":"quit"}
{"nick":"hz","date":"2013-08-25T18:05:18.214Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-25T18:05:49.551Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-25T18:06:06.137Z","type":"join"}
{"nick":"pachet","date":"2013-08-25T18:10:10.503Z","type":"join"}
{"nick":"MI6","message":"\u0002node-review\u0002: #71 \u00034FAILURE\u000f windows-x64 (21/636) windows-ia32 (22/636) http://jenkins.nodejs.org/job/node-review/71/","date":"2013-08-25T18:10:54.991Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-08-25T18:11:29.976Z","type":"join"}
{"nick":"piscisaureus_","message":"tjfontaine: yeah, that'd work","date":"2013-08-25T18:12:14.468Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: or we could add a simple 'stderr' option which would take 'merge', 'inherit' to override default behaviour","date":"2013-08-25T18:12:54.767Z","type":"message"}
{"nick":"piscisaureus_","message":"ideally whatever we do should be back-applicable to the async version","date":"2013-08-25T18:13:20.234Z","type":"message"}
{"nick":"tjfontaine","message":"indeed","date":"2013-08-25T18:15:53.448Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #193 \u00034FAILURE\u000f windows (3/193) http://jenkins.nodejs.org/job/libuv-master/193/","date":"2013-08-25T18:20:10.168Z","type":"message"}
{"nick":"tjfontaine","message":"er","date":"2013-08-25T18:20:17.946Z","type":"message"}
{"nick":"tjfontaine","message":"oh, just jenkins/java NPE again","date":"2013-08-25T18:20:33.206Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-25T18:21:07.936Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-25T18:22:02.152Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-08-25T18:26:08.385Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-25T18:26:29.220Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-08-25T18:30:36.301Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-25T18:30:50.168Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-25T18:36:28.658Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-25T18:36:41.251Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-25T18:36:58.586Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-25T18:40:05.634Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #271 \u00037UNSTABLE\u000f windows-x64 (20/636) windows-ia32 (18/636) http://jenkins.nodejs.org/job/nodejs-master-windows/271/","date":"2013-08-25T18:48:11.574Z","type":"message"}
{"nick":"leonvv","date":"2013-08-25T19:01:26.667Z","type":"join"}
{"nick":"c4milo","date":"2013-08-25T19:03:07.837Z","type":"join"}
{"nick":"piscisaureus_","message":"in c++, what happens if exceptions are disabled and `operator new` fails because of OOM ?","date":"2013-08-25T19:06:30.193Z","type":"message"}
{"nick":"tjfontaine","message":"aren't you supposed to use nothrow?","date":"2013-08-25T19:07:04.576Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-08-25T19:07:15.199Z","type":"join"}
{"nick":"piscisaureus_","message":"well - we're compiling with exceptions disabled right?","date":"2013-08-25T19:07:53.066Z","type":"message"}
{"nick":"tjfontaine","message":"yes","date":"2013-08-25T19:07:56.003Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-25T19:08:01.329Z","type":"quit"}
{"nick":"tjfontaine","message":"if I took a guess I'd say null pointer","date":"2013-08-25T19:08:11.207Z","type":"message"}
{"nick":"piscisaureus_","message":"so what happens on out of memory","date":"2013-08-25T19:08:11.462Z","type":"message"}
{"nick":"piscisaureus_","message":"e.g.","date":"2013-08-25T19:08:12.612Z","type":"message"}
{"nick":"tjfontaine","message":"but maybe abort()","date":"2013-08-25T19:08:15.968Z","type":"message"}
{"nick":"piscisaureus_","message":"char* bar = new char[230948]","date":"2013-08-25T19:08:27.283Z","type":"message"}
{"nick":"piscisaureus_","message":"will bar be NULL like in c ?","date":"2013-08-25T19:08:37.520Z","type":"message"}
{"nick":"tjfontaine","message":"http://stackoverflow.com/questions/6049563/with-fno-exceptions-what-happens-with-new-t","date":"2013-08-25T19:08:56.788Z","type":"message"}
{"nick":"tjfontaine","message":"so you can still throw, but the unwinding code is different it seems","date":"2013-08-25T19:10:52.059Z","type":"message"}
{"nick":"leonvv","reason":"Remote host closed the connection","date":"2013-08-25T19:11:33.384Z","type":"quit"}
{"nick":"piscisaureus_","message":"so what is a good pattern for dealing with this?","date":"2013-08-25T19:11:59.446Z","type":"message"}
{"nick":"piscisaureus_","message":"Constructor() {","date":"2013-08-25T19:12:17.022Z","type":"message"}
{"nick":"piscisaureus_","message":"  bar_ = new char[1234];","date":"2013-08-25T19:12:17.237Z","type":"message"}
{"nick":"piscisaureus_","message":"  baz_ = new int[12345];","date":"2013-08-25T19:12:17.237Z","type":"message"}
{"nick":"piscisaureus_","message":"}","date":"2013-08-25T19:12:17.237Z","type":"message"}
{"nick":"tjfontaine","message":"I think if you're worried about it you're supposed to use (nothrow)","date":"2013-08-25T19:12:30.010Z","type":"message"}
{"nick":"piscisaureus_","message":"maybe I should take a c++ class","date":"2013-08-25T19:12:31.292Z","type":"message"}
{"nick":"piscisaureus_","message":"what do I include to be able to use that?","date":"2013-08-25T19:12:41.758Z","type":"message"}
{"nick":"tjfontaine","message":"<new>","date":"2013-08-25T19:13:09.588Z","type":"message"}
{"nick":"piscisaureus_","message":"thanks tjfontaine","date":"2013-08-25T19:13:33.718Z","type":"message"}
{"nick":"piscisaureus_","message":"you saved my day","date":"2013-08-25T19:13:36.821Z","type":"message"}
{"nick":"tjfontaine","message":"yw","date":"2013-08-25T19:13:38.581Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: OOM with -fno-exceptions will simply abort","date":"2013-08-25T19:13:46.807Z","type":"message"}
{"nick":"bnoordhuis","message":"\"terminate the runtime\" if you want to be pedantic","date":"2013-08-25T19:14:08.154Z","type":"message"}
{"nick":"bnoordhuis","message":"if you want to handle OOM, use something like v8's Malloced class","date":"2013-08-25T19:14:51.418Z","type":"message"}
{"nick":"piscisaureus_","message":"it's not that I actually care","date":"2013-08-25T19:15:08.866Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00029bf9edd\u0002 : linux: don't turn on SO_REUSEPORT socket option - http://git.io/BABuHw","date":"2013-08-25T19:15:14.000Z","type":"message"}
{"nick":"piscisaureus_","message":"I just want to know how it would be done if I did","date":"2013-08-25T19:15:20.787Z","type":"message"}
{"nick":"bnoordhuis","message":"well, like that :)","date":"2013-08-25T19:15:30.731Z","type":"message"}
{"nick":"bnoordhuis","message":"the way v8 does it is by having classes inherit from a base class that does malloc() + placement new","date":"2013-08-25T19:16:01.461Z","type":"message"}
{"nick":"bnoordhuis","message":"if malloc fails, it returns NULL instead","date":"2013-08-25T19:16:10.802Z","type":"message"}
{"nick":"bnoordhuis","message":"meaning you have to check new Foo() for NULL-ness","date":"2013-08-25T19:16:25.348Z","type":"message"}
{"nick":"piscisaureus_","message":"so that's basically what you'd get from (nothrow) as well right","date":"2013-08-25T19:16:26.857Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: but I'll just move all that to the Initialize() function","date":"2013-08-25T19:17:20.549Z","type":"message"}
{"nick":"piscisaureus_","message":"whateva","date":"2013-08-25T19:17:32.932Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: yes, std::nothrow does pretty much the same thing","date":"2013-08-25T19:18:49.358Z","type":"message"}
{"nick":"bnoordhuis","message":"i've never actually seen that used in real code however :)","date":"2013-08-25T19:19:04.292Z","type":"message"}
{"nick":"tjfontaine","message":"haha","date":"2013-08-25T19:19:22.388Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #132 \u00037UNSTABLE\u000f windows-x64 (3/193) windows-ia32 (4/193) smartos-ia32 (4/192) linux-x64 (1/192) linux-ia32 (2/192) smartos-x64 (3/192) http://jenkins.nodejs.org/job/libuv-master-gyp/132/","date":"2013-08-25T19:23:15.129Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #194 \u00037UNSTABLE\u000f linux (1/192) windows (4/193) smartos (11/192) http://jenkins.nodejs.org/job/libuv-master/194/","date":"2013-08-25T19:25:34.171Z","type":"message"}
{"nick":"piscisaureus_","message":"why are you all working on sunday","date":"2013-08-25T19:27:36.412Z","type":"message"}
{"nick":"piscisaureus_","message":"I am outta here!","date":"2013-08-25T19:28:03.059Z","type":"message"}
{"nick":"piscisaureus_","message":"I have a girlfriend to please.","date":"2013-08-25T19:28:38.800Z","type":"message"}
{"nick":"piscisaureus_","message":"Ben's girlfriend, that is.","date":"2013-08-25T19:28:46.029Z","type":"message"}
{"nick":"piscisaureus_","message":"\\o","date":"2013-08-25T19:28:49.441Z","type":"message"}
{"nick":"tjfontaine","message":"hehe","date":"2013-08-25T19:29:06.479Z","type":"message"}
{"nick":"tjfontaine","message":"later bert","date":"2013-08-25T19:29:09.754Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 248 seconds","date":"2013-08-25T19:33:25.718Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00029d60f1e\u0002 : linux: don't turn on SO_REUSEPORT socket option - http://git.io/RpTZMg","date":"2013-08-25T19:39:17.471Z","type":"message"}
{"nick":"bnoordhuis","message":"(yes, i force-pushed - updated a comment)","date":"2013-08-25T19:39:29.154Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: is there a libuv API for thread local storage? I need to store something on a per thread basis","date":"2013-08-25T19:43:29.998Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: not at the moment. i've thought about adding one","date":"2013-08-25T19:44:01.503Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: yeah. I need to have a cache of something per thread, I don't want to lock a shared resource","date":"2013-08-25T19:45:49.699Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: if you open an issue, we can look into it. will be something of a medium-term project though","date":"2013-08-25T19:47:08.372Z","type":"message"}
{"nick":"bnoordhuis","message":"unless you volunteer to implement it, of course :)","date":"2013-08-25T19:47:16.359Z","type":"message"}
{"nick":"bnoordhuis","message":"shouldn't be that hard, i think","date":"2013-08-25T19:47:33.688Z","type":"message"}
{"nick":"bnoordhuis","message":"on unices, you can wrap the relevant pthread functions","date":"2013-08-25T19:47:49.537Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: ok, I'll take a stab at it but not that great at C yet, super noob still lol","date":"2013-08-25T19:47:53.968Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, don't worry. that's what code reviews are for","date":"2013-08-25T19:48:25.131Z","type":"message"}
{"nick":"kellabyte","message":"ok I'll see what I can come up with, I'll log the issue now first","date":"2013-08-25T19:49:23.464Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #195 \u00037UNSTABLE\u000f linux (2/192) windows (3/193) smartos (10/192) http://jenkins.nodejs.org/job/libuv-master/195/","date":"2013-08-25T19:49:59.557Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #133 \u00037UNSTABLE\u000f windows-x64 (4/193) windows-ia32 (3/193) smartos-ia32 (4/192) linux-x64 (2/192) linux-ia32 (1/192) smartos-x64 (2/192) http://jenkins.nodejs.org/job/libuv-master-gyp/133/","date":"2013-08-25T19:52:23.596Z","type":"message"}
{"nick":"Brett19","reason":"Ping timeout: 245 seconds","date":"2013-08-25T19:54:11.693Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002d3308c2\u0002 : include: update uv_udp_open() / uv_udp_bind() docs - http://git.io/vU3u5A","date":"2013-08-25T20:00:45.664Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #179 \u00034FAILURE\u000f smartos-ia32 (10/636) linux-x64 (4/636) linux-ia32 (4/636) http://jenkins.nodejs.org/job/libuv-node-integration/179/","date":"2013-08-25T20:00:59.732Z","type":"message"}
{"nick":"tjfontaine","message":"oh that's the force push failure","date":"2013-08-25T20:01:46.538Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #134 \u00037UNSTABLE\u000f windows-x64 (3/193) windows-ia32 (3/193) smartos-ia32 (4/192) linux-ia32 (2/192) smartos-x64 (2/192) http://jenkins.nodejs.org/job/libuv-master-gyp/134/","date":"2013-08-25T20:13:42.906Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #196 \u00037UNSTABLE\u000f linux (2/192) windows (3/193) smartos (10/192) http://jenkins.nodejs.org/job/libuv-master/196/","date":"2013-08-25T20:15:05.924Z","type":"message"}
{"nick":"pachet","reason":"Ping timeout: 245 seconds","date":"2013-08-25T20:17:13.161Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-25T20:26:28.187Z","type":"quit"}
{"nick":"ryah","reason":"Quit: Lost terminal","date":"2013-08-25T20:37:23.876Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #180 \u00037UNSTABLE\u000f smartos-x64 (12/636) smartos-ia32 (9/636) linux-x64 (3/636) linux-ia32 (2/636) http://jenkins.nodejs.org/job/libuv-node-integration/180/","date":"2013-08-25T20:44:35.290Z","type":"message"}
{"nick":"Brett19","date":"2013-08-25T20:55:21.326Z","type":"join"}
{"nick":"Brett19","reason":"Ping timeout: 264 seconds","date":"2013-08-25T21:02:19.014Z","type":"quit"}
{"nick":"pachet","date":"2013-08-25T21:02:38.335Z","type":"join"}
{"nick":"Brett19","date":"2013-08-25T21:02:51.634Z","type":"join"}
{"nick":"pachet","new_nick":"Guest42317","date":"2013-08-25T21:03:02.277Z","type":"nick"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-25T21:10:37.876Z","type":"quit"}
{"nick":"bnoordhuis","message":"kellabyte: are you a windows user? if yes, feel like being a guinea pig for https://github.com/joyent/libuv/pull/906 ?","date":"2013-08-25T21:13:27.312Z","type":"message"}
{"nick":"c4milo","date":"2013-08-25T21:13:40.600Z","type":"join"}
{"nick":"brson","date":"2013-08-25T21:22:46.531Z","type":"join"}
{"nick":"kenperkins","date":"2013-08-25T21:23:57.491Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #181 \u00037UNSTABLE\u000f smartos-x64 (11/636) smartos-ia32 (10/636) osx-ia32 (2/636) linux-x64 (4/636) linux-ia32 (4/636) http://jenkins.nodejs.org/job/libuv-node-integration/181/","date":"2013-08-25T21:31:44.032Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-08-25T21:36:11.104Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-25T21:48:34.338Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-25T21:49:34.982Z","type":"quit"}
{"nick":"rendar","reason":"Quit: Leaving","date":"2013-08-25T21:49:38.049Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-25T21:54:23.746Z","type":"join"}
{"nick":"Domenic_","new_nick":"Domenic","date":"2013-08-25T22:01:24.082Z","type":"nick"}
{"nick":"Domenic","new_nick":"Domenic_","date":"2013-08-25T22:01:33.739Z","type":"nick"}
{"nick":"kellabyte","message":"bnoordhuis: jesus! did you just implement that now? lol","date":"2013-08-25T22:15:01.277Z","type":"message"}
{"nick":"kellabyte","message":"buffer 5","date":"2013-08-25T22:21:13.273Z","type":"message"}
{"nick":"bnoordhuis","message":"^ vi user","date":"2013-08-25T22:22:11.513Z","type":"message"}
{"nick":"kellabyte","message":"lol","date":"2013-08-25T22:22:17.673Z","type":"message"}
{"nick":"kellabyte","message":"checking out the checkin for learning","date":"2013-08-25T22:23:04.873Z","type":"message"}
{"nick":"kellabyte","message":"any reason why you set NULL as the destructor argument to pthread_key_create()? I thought you might have to provide a callback or something so people can free memory?","date":"2013-08-25T22:24:55.309Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: the destructor is purely optional on posix platforms and i don't know of a way to emulate it on windows","date":"2013-08-25T22:26:45.790Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: ah gotcha. so how does someone free the memory and avoid a leak?","date":"2013-08-25T22:27:40.896Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: by calling uv_key_delete() :)","date":"2013-08-25T22:28:00.348Z","type":"message"}
{"nick":"bnoordhuis","message":"or if you mean 'how do i do that on a per-thread basis?'","date":"2013-08-25T22:28:30.158Z","type":"message"}
{"nick":"bnoordhuis","message":"by cleaning up manually before the thread exits","date":"2013-08-25T22:28:49.201Z","type":"message"}
{"nick":"kellabyte","message":"yeah, like in pthreads the destructor is called when the thread is going to exit I believe to free all the TLS","date":"2013-08-25T22:28:51.705Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-08-25T22:32:16.870Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-25T22:35:54.591Z","type":"join"}
{"nick":"kellabyte","message":"bnoordhuis: I'll try this out though and let you know! thanks so much :)","date":"2013-08-25T22:35:58.524Z","type":"message"}
{"nick":"bnoordhuis","message":"no problem :)","date":"2013-08-25T22:36:41.936Z","type":"message"}
{"nick":"kellabyte","message":"how long have you been writing C for?","date":"2013-08-25T22:37:53.181Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-25T22:50:08.930Z","type":"quit"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-25T22:50:29.049Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-25T22:50:50.786Z","type":"join"}
{"nick":"jmar777","date":"2013-08-25T22:51:52.339Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-25T22:53:22.685Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-25T22:57:18.116Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-25T23:00:45.408Z","type":"quit"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-25T23:09:25.653Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-08-25T23:21:42.135Z","type":"join"}
{"nick":"c4milo","date":"2013-08-25T23:22:45.345Z","type":"join"}
{"nick":"jmar777","date":"2013-08-25T23:33:43.983Z","type":"join"}
{"nick":"bnoordhuis","message":"kellabyte: over 15 years now, i think?","date":"2013-08-25T23:34:03.509Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, 1.30 am - guess i should be getting to bed","date":"2013-08-25T23:34:24.767Z","type":"message"}
{"nick":"bnoordhuis","message":"have a good night everyone","date":"2013-08-25T23:34:34.999Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-25T23:37:27.627Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-08-25T23:39:06.288Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-25T23:39:19.440Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-25T23:50:58.817Z","type":"join"}
