{"nick":"graydon","reason":"Quit: Leaving.","date":"2011-09-07T00:07:07.198Z","type":"quit"}
{"nick":"dmkbot","message":"\u0002joyent/node:\u0002 Hamms: querystring.stringify can't deal with nested objects - https://github.com/joyent/node/issues/1665","date":"2011-09-07T02:04:31.401Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: do you know how to specify a library search path in gyp?","date":"2011-09-07T02:07:54.197Z","type":"message"}
{"nick":"DrPizza","message":"to do what, add system lib dirs?","date":"2011-09-07T02:08:22.948Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: no to point to php5ts.lib","date":"2011-09-07T02:08:34.259Z","type":"message"}
{"nick":"DrPizza","message":"I'm not sure, no","date":"2011-09-07T02:08:44.410Z","type":"message"}
{"nick":"piscisaureus","message":"which is located outside of my project","date":"2011-09-07T02:08:46.383Z","type":"message"}
{"nick":"brson","reason":"Ping timeout: 252 seconds","date":"2011-09-07T02:10:25.100Z","type":"quit"}
{"nick":"DrPizza","message":"I think the best solution is to delet ephp and everything related to it","date":"2011-09-07T02:25:58.766Z","type":"message"}
{"nick":"piscisaureus","message":"muhahah","date":"2011-09-07T02:27:21.734Z","type":"message"}
{"nick":"piscisaureus","message":"I know, but I'm an idiot","date":"2011-09-07T02:27:31.462Z","type":"message"}
{"nick":"piscisaureus","message":"in fact, I'm going to quit node","date":"2011-09-07T02:27:37.889Z","type":"message"}
{"nick":"piscisaureus","message":"work on php for a while","date":"2011-09-07T02:27:44.837Z","type":"message"}
{"nick":"piscisaureus","message":"them I'm moving to perl","date":"2011-09-07T02:27:48.943Z","type":"message"}
{"nick":"piscisaureus","message":"of cobol","date":"2011-09-07T02:27:51.529Z","type":"message"}
{"nick":"piscisaureus","message":"*or","date":"2011-09-07T02:27:58.630Z","type":"message"}
{"nick":"piscisaureus","message":"Ryan is going to love cobol.","date":"2011-09-07T02:29:13.776Z","type":"message"}
{"nick":"piscisaureus","message":"max line length == 72 character","date":"2011-09-07T02:29:20.531Z","type":"message"}
{"nick":"piscisaureus","message":"s","date":"2011-09-07T02:29:21.314Z","type":"message"}
{"nick":"DrPizza","message":"I'm just trying to think of there's anything possibly even shitter that you could switch to","date":"2011-09-07T02:34:52.424Z","type":"message"}
{"nick":"DrPizza","message":"nothing springs immediately to mind","date":"2011-09-07T02:34:58.470Z","type":"message"}
{"nick":"piscisaureus","message":"hmm no me neither","date":"2011-09-07T02:37:46.536Z","type":"message"}
{"nick":"piscisaureus","message":"brainfuck obviously. but that doesn't count because *nobody* considers that okay","date":"2011-09-07T02:38:05.240Z","type":"message"}
{"nick":"piscisaureus","message":"oh yes","date":"2011-09-07T02:39:19.259Z","type":"message"}
{"nick":"piscisaureus","message":"euphoria","date":"2011-09-07T02:39:21.043Z","type":"message"}
{"nick":"piscisaureus","message":"i used to do that when i was a kid","date":"2011-09-07T02:39:26.150Z","type":"message"}
{"nick":"piscisaureus","message":"http://www.rapideuphoria.com/ <-- hasn't even changed since then :-)","date":"2011-09-07T02:39:47.670Z","type":"message"}
{"nick":"DrPizza","message":"yeah I was just thinking of real languages","date":"2011-09-07T02:42:21.581Z","type":"message"}
{"nick":"DrPizza","message":"brainfuck doesn't really count","date":"2011-09-07T02:42:25.243Z","type":"message"}
{"nick":"DrPizza","message":"piscisaureus: that euphoria thing looks retarded","date":"2011-09-07T03:00:08.400Z","type":"message"}
{"nick":"piscisaureus","message":"I moved there just after quickbasic","date":"2011-09-07T03:00:48.326Z","type":"message"}
{"nick":"piscisaureus","message":"before I got started on c++","date":"2011-09-07T03:00:53.907Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: it was not so bad back then - but not really powerful","date":"2011-09-07T03:01:13.831Z","type":"message"}
{"nick":"piscisaureus","message":"but today they're still targeting 16-bit dos or that's what it looks like","date":"2011-09-07T03:01:28.673Z","type":"message"}
{"nick":"piscisaureus","message":"I'm building my php extension with gyp","date":"2011-09-07T03:03:00.972Z","type":"message"}
{"nick":"piscisaureus","message":"\\o/","date":"2011-09-07T03:03:04.638Z","type":"message"}
{"nick":"piscisaureus","message":"<3 gyp","date":"2011-09-07T03:03:08.780Z","type":"message"}
{"nick":"piscisaureus","message":"I wish php used gyp","date":"2011-09-07T03:03:58.123Z","type":"message"}
{"nick":"piscisaureus","reason":"Ping timeout: 258 seconds","date":"2011-09-07T04:28:17.191Z","type":"quit"}
{"nick":"dmkbot","message":"\u0002joyent/libuv:\u0002 erickt: Fix uv_getaddrinfo to accept custom data. - https://github.com/joyent/libuv/issues/156","date":"2011-09-07T04:34:31.504Z","type":"message"}
{"nick":"indutny","reason":"K-Lined","date":"2011-09-07T05:23:11.824Z","type":"quit"}
{"nick":"indutny","date":"2011-09-07T05:26:12.200Z","type":"join"}
{"nick":"indutny","reason":"Remote host closed the connection","date":"2011-09-07T05:26:21.398Z","type":"quit"}
{"nick":"indutny","date":"2011-09-07T05:28:39.317Z","type":"join"}
{"nick":"dmkbot","message":"\u0002joyent/node:\u0002 ArtS: Weird 'require' behaviour - https://github.com/joyent/node/issues/410","date":"2011-09-07T05:54:31.314Z","type":"message"}
{"nick":"dmkbot","message":"\u0002joyent/node:\u0002 Kos: Misleading console output for arrays with undefined - https://github.com/joyent/node/issues/1651","date":"2011-09-07T05:59:31.391Z","type":"message"}
{"nick":"dmkbot","message":"\u0002joyent/node:\u0002 ArtS: Weird 'require' behaviour - https://github.com/joyent/node/issues/410","date":"2011-09-07T06:09:31.326Z","type":"message"}
{"nick":"mraleph","date":"2011-09-07T06:14:14.065Z","type":"join"}
{"nick":"indutny","reason":"Ping timeout: 276 seconds","date":"2011-09-07T06:40:36.209Z","type":"quit"}
{"nick":"dmkbot","message":"\u0002joyent/node:\u0002 ArtS: Weird 'require' behaviour - https://github.com/joyent/node/issues/410","date":"2011-09-07T06:44:31.207Z","type":"message"}
{"nick":"dmkbot","message":"\u0002joyent/node:\u0002 ArtS: Weird 'require' behaviour - https://github.com/joyent/node/issues/410","date":"2011-09-07T06:49:31.154Z","type":"message"}
{"nick":"mraleph","reason":"Read error: Connection reset by peer","date":"2011-09-07T06:51:21.826Z","type":"quit"}
{"nick":"mraleph","date":"2011-09-07T07:07:11.912Z","type":"join"}
{"nick":"indutny","date":"2011-09-07T07:19:36.911Z","type":"join"}
{"nick":"mraleph","reason":"Quit: Leaving.","date":"2011-09-07T08:27:39.757Z","type":"quit"}
{"nick":"dmkbot","reason":"Ping timeout: 246 seconds","date":"2011-09-07T08:30:25.036Z","type":"quit"}
{"nick":"indutny","message":"ryah: yt?","date":"2011-09-07T10:34:50.107Z","type":"message"}
{"nick":"dmkbot","date":"2011-09-07T12:14:46.433Z","type":"join"}
{"nick":"dmkbot","message":"\u0002joyent/node:\u0002 cryptix: test-fs-utimes - debug assertion fails on win32 - https://github.com/joyent/node/issues/1666","date":"2011-09-07T12:44:43.826Z","type":"message"}
{"nick":"bnoordhuis","date":"2011-09-07T12:48:49.654Z","type":"join"}
{"nick":"dmkbot","reason":"Remote host closed the connection","date":"2011-09-07T12:58:16.508Z","type":"quit"}
{"nick":"dmkbot","date":"2011-09-07T12:58:34.646Z","type":"join"}
{"nick":"pietern","date":"2011-09-07T13:17:47.117Z","type":"join"}
{"nick":"bnoordhuis","message":"zlib?","date":"2011-09-07T13:22:38.257Z","type":"message"}
{"nick":"dmkbot","message":"\u0002joyent/node:\u0002 ArtS: Weird 'require' behaviour - https://github.com/joyent/node/issues/410","date":"2011-09-07T13:23:32.099Z","type":"message"}
{"nick":"pietern","message":"hi guys","date":"2011-09-07T13:27:27.013Z","type":"message"}
{"nick":"pietern","message":"small idea I got working with libuv: ","date":"2011-09-07T13:27:46.552Z","type":"message"}
{"nick":"pietern","message":"why not export things like UV_TCP_FIELDS, UV_PIPE_FIELDS etc","date":"2011-09-07T13:28:16.062Z","type":"message"}
{"nick":"pietern","message":"so extending these primitives outside libuv is also possible","date":"2011-09-07T13:28:40.482Z","type":"message"}
{"nick":"pietern","message":"I find myself using a whole lot of type punning and keeping multi layered ->data references","date":"2011-09-07T13:29:10.738Z","type":"message"}
{"nick":"bnoordhuis","message":"pietern: you mean UV_TCP_PRIVATE_FIELDS and such?","date":"2011-09-07T13:29:52.886Z","type":"message"}
{"nick":"pietern","message":"with the *_FIELDS thing any \"subclass\" can be simply type-casted","date":"2011-09-07T13:29:53.898Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: no, a full UV_TCP_FIELDS, which includes everything from HANDLE_FIELDS, STREAM_FIELDS and PRIVATE_FIELDS","date":"2011-09-07T13:30:21.889Z","type":"message"}
{"nick":"pietern","message":"so you can avoid the indirection or typecast when using such a type as first member of a custom struct","date":"2011-09-07T13:31:14.540Z","type":"message"}
{"nick":"bnoordhuis","message":"pietern: one issue is that the alignment requirements for your struct and the libuv struct may differ","date":"2011-09-07T13:32:08.755Z","type":"message"}
{"nick":"bnoordhuis","message":"(we already ran into that once in a test)","date":"2011-09-07T13:32:17.342Z","type":"message"}
{"nick":"bnoordhuis","message":"why don't you use a container_of macro?","date":"2011-09-07T13:32:29.304Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: hmm, right the alignment problem would only happen when its not used as first member..","date":"2011-09-07T13:33:03.738Z","type":"message"}
{"nick":"pietern","message":"not familiar with that macro,","date":"2011-09-07T13:33:11.047Z","type":"message"}
{"nick":"pietern","message":"looking it up","date":"2011-09-07T13:33:12.694Z","type":"message"}
{"nick":"pietern","message":"oh right, the offset of trick","date":"2011-09-07T13:33:35.232Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2011-09-07T13:33:39.911Z","type":"message"}
{"nick":"bnoordhuis","message":"btw, it also happens when the struct is the first member","date":"2011-09-07T13:33:48.694Z","type":"message"}
{"nick":"bnoordhuis","message":"in that test i mentioned, gcc decided that uv_tcp_t had to be aligned at a greater boundary than uv_pipe_t","date":"2011-09-07T13:34:12.895Z","type":"message"}
{"nick":"bnoordhuis","message":"great fun we had in tracking that one down :/","date":"2011-09-07T13:34:20.309Z","type":"message"}
{"nick":"pietern","message":"so the offsets of their \"superclass\" fields didn't line up?","date":"2011-09-07T13:35:09.587Z","type":"message"}
{"nick":"pietern","message":"sounds like fun… ;)","date":"2011-09-07T13:35:12.574Z","type":"message"}
{"nick":"bnoordhuis","message":"pietern: do you have relatives in or near meppel or enschede?","date":"2011-09-07T13:36:18.830Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: one far-away uncle in meppel, not in enschede ","date":"2011-09-07T13:36:42.410Z","type":"message"}
{"nick":"bnoordhuis","message":"right, i originally hail from meppel :)","date":"2011-09-07T13:36:55.644Z","type":"message"}
{"nick":"pietern","message":"s/far away/distant/","date":"2011-09-07T13:37:02.446Z","type":"message"}
{"nick":"bnoordhuis","message":"what's your uncle's name?","date":"2011-09-07T13:37:23.559Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: our name isn't that common, we're probably distant relatives :)","date":"2011-09-07T13:37:27.625Z","type":"message"}
{"nick":"pietern","message":"anco","date":"2011-09-07T13:37:30.465Z","type":"message"}
{"nick":"pietern","message":"he's a nephew of my father","date":"2011-09-07T13:37:45.146Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, i don't know any anco's","date":"2011-09-07T13:37:51.964Z","type":"message"}
{"nick":"bnoordhuis","message":"but yeah, probably distant relatives :)","date":"2011-09-07T13:37:59.892Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: do you know of any roots in northern groningen?","date":"2011-09-07T13:39:06.123Z","type":"message"}
{"nick":"bnoordhuis","message":"bnoordhuis: yes, but only vaguely - great-grand uncles, nieces of the third degree, that kind of thing","date":"2011-09-07T13:39:54.986Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: btw, the offsetof trick, that would require having two conversion macro's right, or am I overseeing something?","date":"2011-09-07T13:39:57.130Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: right, there's probably something there :) fun to see another noordhuis in programming","date":"2011-09-07T13:40:50.913Z","type":"message"}
{"nick":"bnoordhuis","message":"pietern: http://lxr.free-electrons.com/source/tools/perf/util/include/linux/kernel.h#L26","date":"2011-09-07T13:41:14.117Z","type":"message"}
{"nick":"bnoordhuis","message":"so your struct foo embeds a uv_tcp_t* tcp_req","date":"2011-09-07T13:41:30.920Z","type":"message"}
{"nick":"bnoordhuis","message":"your callback gets passed a tcp_req","date":"2011-09-07T13:41:40.455Z","type":"message"}
{"nick":"bnoordhuis","message":"and you look up your struct foo with -> struct foo *foo = container_of(tcp_req, struct foo *, tcp_req)","date":"2011-09-07T13:42:04.438Z","type":"message"}
{"nick":"bnoordhuis","message":"correction: struct foo *foo = container_of(tcp_req, struct foo, tcp_req)","date":"2011-09-07T13:42:26.064Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: right, that's similar to what I constructed myself, it only leaves way for the other way around","date":"2011-09-07T13:42:47.063Z","type":"message"}
{"nick":"bnoordhuis","message":"other way around?","date":"2011-09-07T13:42:54.919Z","type":"message"}
{"nick":"pietern","message":"e.g. passing foo->tcp_req instead of just foo","date":"2011-09-07T13:43:13.882Z","type":"message"}
{"nick":"bnoordhuis","message":"oh right","date":"2011-09-07T13:43:27.394Z","type":"message"}
{"nick":"bnoordhuis","message":"small trade-off though, isn't it?","date":"2011-09-07T13:43:36.265Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: yes, indeed, ","date":"2011-09-07T13:44:24.345Z","type":"message"}
{"nick":"pietern","message":"and the potential alignment bugs are worse than some cosmetics","date":"2011-09-07T13:44:45.350Z","type":"message"}
{"nick":"pietern","message":"thanks for reminding me how time consuming those can be","date":"2011-09-07T13:44:56.894Z","type":"message"}
{"nick":"bnoordhuis","message":"pietern: you're playing around with libuv in redis?","date":"2011-09-07T13:46:02.918Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: I did some superficial experiments earlier","date":"2011-09-07T13:46:38.526Z","type":"message"}
{"nick":"pietern","message":"no plans to move forward with that, as it has a very thin and proven reactor right now","date":"2011-09-07T13:47:06.046Z","type":"message"}
{"nick":"pietern","message":"using it on another project now","date":"2011-09-07T13:47:19.312Z","type":"message"}
{"nick":"bnoordhuis","message":"do tell!","date":"2011-09-07T13:47:25.146Z","type":"message"}
{"nick":"pietern","message":"it has got to do with high frequency time series collection","date":"2011-09-07T13:47:49.786Z","type":"message"}
{"nick":"pietern","message":"or: balance between high frequency and high quantity","date":"2011-09-07T13:48:10.447Z","type":"message"}
{"nick":"dmkbot","message":"\u0002joyent/node:\u0002 cryptix: test-fs-utimes - debug assertion fails on win32 - https://github.com/joyent/node/issues/1666","date":"2011-09-07T13:48:32.031Z","type":"message"}
{"nick":"pietern","message":"and I'm writing a messagepack wrapper around libuv","date":"2011-09-07T13:48:32.911Z","type":"message"}
{"nick":"pietern","message":"so the unit of currency becomes a msgpack object instead of a char*","date":"2011-09-07T13:48:55.658Z","type":"message"}
{"nick":"pietern","message":"and other stuff like limiting the max nr outstanding messages per stream","date":"2011-09-07T13:49:32.327Z","type":"message"}
{"nick":"bnoordhuis","message":"a message queue kind of thing?","date":"2011-09-07T13:49:45.285Z","type":"message"}
{"nick":"pietern","message":"that also lead me to the uv_write_t cleanup thing I posted earlier as issue","date":"2011-09-07T13:49:56.994Z","type":"message"}
{"nick":"pietern","message":"no, it's more that agents will be streaming sampled data into this thing","date":"2011-09-07T13:50:25.979Z","type":"message"}
{"nick":"pietern","message":"and this thing will be responsible for indexing and storing it","date":"2011-09-07T13:50:36.731Z","type":"message"}
{"nick":"pietern","message":"so basically the simplest possible uv_tcp_t server + eio for uv_work_t","date":"2011-09-07T13:50:57.616Z","type":"message"}
{"nick":"pietern","message":"I'm in love with this stack :)","date":"2011-09-07T13:51:06.576Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, good :)","date":"2011-09-07T13:51:13.531Z","type":"message"}
{"nick":"bnoordhuis","message":"about that issue you posted","date":"2011-09-07T13:51:16.903Z","type":"message"}
{"nick":"bnoordhuis","message":"In addition: the current behavior shows that the write is immediately executed when the write queue is empty. When this fails, uv_write returns a -1 status and the uv_write_t can be cleaned up. Shouldn't the write callback for this request be called in the next reactor tick?","date":"2011-09-07T13:51:33.095Z","type":"message"}
{"nick":"bnoordhuis","message":"is that with tcp on unix?","date":"2011-09-07T13:51:40.774Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: yep","date":"2011-09-07T13:51:47.693Z","type":"message"}
{"nick":"bnoordhuis","message":"immediately executed, that should not / cannot be, i think","date":"2011-09-07T13:52:10.262Z","type":"message"}
{"nick":"bnoordhuis","message":"the request is put on a deferred queue","date":"2011-09-07T13:52:22.572Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis:  https://github.com/joyent/libuv/blob/master/src/unix/stream.c#L658-667","date":"2011-09-07T13:53:02.032Z","type":"message"}
{"nick":"bnoordhuis","message":"ah right","date":"2011-09-07T13:54:56.292Z","type":"message"}
{"nick":"pietern","message":"that struck me as quite odd since uv_close also makes sure to call the callback and delays that to the next tick","date":"2011-09-07T13:55:38.524Z","type":"message"}
{"nick":"pietern","message":"it's not a big problem, but as for consistency I'd expect it to make a deferred call to the callback","date":"2011-09-07T13:56:14.025Z","type":"message"}
{"nick":"dmkbot","reason":"Read error: Operation timed out","date":"2011-09-07T13:56:14.723Z","type":"quit"}
{"nick":"bnoordhuis","message":"well, we should fix it","date":"2011-09-07T13:58:14.125Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: btw, the container_of thing only works when the struct is embedded as a whole, not just a pointer","date":"2011-09-07T13:58:16.486Z","type":"message"}
{"nick":"bnoordhuis","message":"at the very least it's inconsistent with what udp does","date":"2011-09-07T13:58:21.477Z","type":"message"}
{"nick":"bnoordhuis","message":"pietern: yes sorry, that was a typo on my part","date":"2011-09-07T13:58:30.717Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: np thanks","date":"2011-09-07T13:58:40.911Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: what do you think about the write queue cleanup thing?","date":"2011-09-07T13:59:49.714Z","type":"message"}
{"nick":"bnoordhuis","message":"pietern: you can tweak container_of to work with embedded pointers but it's almost always used to embed structures","date":"2011-09-07T13:59:50.577Z","type":"message"}
{"nick":"bnoordhuis","message":"pietern: let me get it straight: say you have 5 pending writes and the first one fails with, say, ECONNRESET","date":"2011-09-07T14:01:09.038Z","type":"message"}
{"nick":"bnoordhuis","message":"what do you think should happen?","date":"2011-09-07T14:01:21.427Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: well, the write watchers will probably not fire again","date":"2011-09-07T14:01:34.345Z","type":"message"}
{"nick":"pietern","message":"although I'm uncertain.. ","date":"2011-09-07T14:01:42.485Z","type":"message"}
{"nick":"bnoordhuis","message":"no, but the callbacks will get invoked when you uv_close the handle","date":"2011-09-07T14:02:07.538Z","type":"message"}
{"nick":"pietern","message":"anyway: when I get a status=-1 on a write callback, I probably want to uv_close the stream asap","date":"2011-09-07T14:02:09.873Z","type":"message"}
{"nick":"bnoordhuis","message":"(at least, they should be - this was a bug that may or may not have been fixed)","date":"2011-09-07T14:02:22.106Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: ok, I couldn't find a trace of that logic being in place","date":"2011-09-07T14:02:40.197Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: so maybe that's pending","date":"2011-09-07T14:02:49.819Z","type":"message"}
{"nick":"bnoordhuis","message":"i can't see it either","date":"2011-09-07T14:03:11.124Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: generally the cleanup code for uv_write_t's will be in their callbacks","date":"2011-09-07T14:03:13.312Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll fix it today","date":"2011-09-07T14:03:16.158Z","type":"message"}
{"nick":"pietern","message":"at least, that makes sense to me","date":"2011-09-07T14:03:21.342Z","type":"message"}
{"nick":"pietern","message":"so I'd expect the callbacks to be fired /before/ the uv_close callback is fired","date":"2011-09-07T14:03:35.256Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, that's what should happen","date":"2011-09-07T14:03:46.887Z","type":"message"}
{"nick":"pietern","message":"since that would be the place where you cleanup other artifats","date":"2011-09-07T14:03:55.246Z","type":"message"}
{"nick":"bnoordhuis","message":"for the record, it should work like this: you uv_close the handle, all pending writes get their callbacks invoked with status=-1, then the close callback is invoked","date":"2011-09-07T14:04:35.859Z","type":"message"}
{"nick":"pietern","message":"at least in a way where subsequent write callbacks are called when flags & UV_CLOSING","date":"2011-09-07T14:04:37.594Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: ok","date":"2011-09-07T14:04:50.929Z","type":"message"}
{"nick":"pietern","message":"great","date":"2011-09-07T14:04:52.641Z","type":"message"}
{"nick":"pietern","message":"it was what I'd expected","date":"2011-09-07T14:05:25.107Z","type":"message"}
{"nick":"bnoordhuis","message":"i suspect we haven't actually implemented it yet so i'll fix that :)","date":"2011-09-07T14:05:32.772Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: btw, are you FT on node/libuv?","date":"2011-09-07T14:05:55.162Z","type":"message"}
{"nick":"bnoordhuis","message":"pietern: ft as in full time?","date":"2011-09-07T14:06:13.698Z","type":"message"}
{"nick":"pietern","message":"yeah","date":"2011-09-07T14:06:17.961Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, i'm employed by joyent","date":"2011-09-07T14:06:25.424Z","type":"message"}
{"nick":"pietern","message":"ok, cool","date":"2011-09-07T14:06:32.026Z","type":"message"}
{"nick":"pietern","message":"just curious, I remember seeing NRC media somewhere","date":"2011-09-07T14:06:48.142Z","type":"message"}
{"nick":"pietern","message":":)","date":"2011-09-07T14:06:52.609Z","type":"message"}
{"nick":"bnoordhuis","message":"oh right, i left there in july","date":"2011-09-07T14:07:00.080Z","type":"message"}
{"nick":"pietern","message":"I see","date":"2011-09-07T14:07:08.770Z","type":"message"}
{"nick":"pietern","message":"still based in NL though?","date":"2011-09-07T14:07:15.096Z","type":"message"}
{"nick":"bnoordhuis","message":"yep, the fair city of gouda","date":"2011-09-07T14:07:21.121Z","type":"message"}
{"nick":"bnoordhuis","message":"you're in groningen, right?","date":"2011-09-07T14:07:36.202Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: yes","date":"2011-09-07T14:10:27.601Z","type":"message"}
{"nick":"bnoordhuis","message":"bert is often in groningen, have him buy you a beer sometime","date":"2011-09-07T14:16:10.907Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: cool, I haven't met him yet","date":"2011-09-07T14:16:53.650Z","type":"message"}
{"nick":"pietern","message":"although I know he's doing tons of windows work","date":"2011-09-07T14:17:00.932Z","type":"message"}
{"nick":"pietern","message":"he's also FT joyent?","date":"2011-09-07T14:17:15.718Z","type":"message"}
{"nick":"bnoordhuis","message":"no, he's a part-timer at rackspace","date":"2011-09-07T14:17:30.981Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: btw, I remember a problem with embedding structs","date":"2011-09-07T14:18:45.093Z","type":"message"}
{"nick":"pietern","message":"uv_stream_t is smaller than uv_tcp_t and uv_pipe_t","date":"2011-09-07T14:19:01.584Z","type":"message"}
{"nick":"pietern","message":"but they should both work","date":"2011-09-07T14:19:05.796Z","type":"message"}
{"nick":"bnoordhuis","message":"pietern: put them in a union?","date":"2011-09-07T14:19:30.173Z","type":"message"}
{"nick":"pietern","message":"so that would require uv_stream_t to include padding \b","date":"2011-09-07T14:19:31.044Z","type":"message"}
{"nick":"bnoordhuis","message":"you should consider uv_stream_t as an abstract base class btw","date":"2011-09-07T14:20:01.235Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: right, I need to get used to anonymous unions and the like: we compile redis for c99 compliance","date":"2011-09-07T14:21:10.117Z","type":"message"}
{"nick":"bnoordhuis","message":"pietern: the union doesn't even have to be anonymous","date":"2011-09-07T14:24:26.866Z","type":"message"}
{"nick":"bnoordhuis","message":"it just guarantees that it'll be large enough for either uv_tcp_t or uv_pipe_t and that it's properly aligned","date":"2011-09-07T14:24:45.452Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: yes, but that results in more deference","date":"2011-09-07T14:25:00.959Z","type":"message"}
{"nick":"pietern","message":"like foo->union.tcp->loop","date":"2011-09-07T14:25:11.807Z","type":"message"}
{"nick":"bnoordhuis","message":"don't worry about that, the compiler optimizes away","date":"2011-09-07T14:25:24.215Z","type":"message"}
{"nick":"bnoordhuis","message":"compiled down to asm, it's just a load","date":"2011-09-07T14:25:37.350Z","type":"message"}
{"nick":"bnoordhuis","message":"(load as in movl or leal)","date":"2011-09-07T14:25:58.380Z","type":"message"}
{"nick":"pietern","message":"I know, but I'm trying to get both idiomatic and aesthetically pleasing code ;)","date":"2011-09-07T14:28:54.529Z","type":"message"}
{"nick":"pietern","message":"nevermind, I'm going with the big dereference and component_of :)","date":"2011-09-07T14:29:11.581Z","type":"message"}
{"nick":"pietern","message":"isn't worth to dabble too much about this kind of thing","date":"2011-09-07T14:29:25.291Z","type":"message"}
{"nick":"bnoordhuis","message":"cool, i promise you you'll like it :)","date":"2011-09-07T14:29:27.163Z","type":"message"}
{"nick":"bnoordhuis","message":"the day i discovered container_of in the kernel headers was a little like a light shineth down from heaven","date":"2011-09-07T14:30:23.521Z","type":"message"}
{"nick":"bnoordhuis","message":"and a 'why didn't i think of that' moment","date":"2011-09-07T14:30:29.466Z","type":"message"}
{"nick":"indutny","message":"hi everyone!","date":"2011-09-07T14:30:41.146Z","type":"message"}
{"nick":"bnoordhuis","message":"hey indutny","date":"2011-09-07T14:30:47.700Z","type":"message"}
{"nick":"indutny","message":"could anyone help me in testing and giving feedback one one essential node.js feature?","date":"2011-09-07T14:31:03.773Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: feedback mostly","date":"2011-09-07T14:31:17.754Z","type":"message"}
{"nick":"bnoordhuis","message":"depends on your definition of essential :)","date":"2011-09-07T14:31:22.941Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2011-09-07T14:31:26.781Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: it's about debugger","date":"2011-09-07T14:32:03.170Z","type":"message"}
{"nick":"indutny","message":"I stubbed out most of the things for new debugger","date":"2011-09-07T14:32:15.232Z","type":"message"}
{"nick":"indutny","message":"but I want to be sure that API is ok","date":"2011-09-07T14:32:24.316Z","type":"message"}
{"nick":"bnoordhuis","action":"listens","date":"2011-09-07T14:32:39.335Z","type":"action"}
{"nick":"indutny","message":"https://github.com/indutny/node/tree/feature-debugger-test","date":"2011-09-07T14:32:39.767Z","type":"message"}
{"nick":"indutny","message":"can you please check this out","date":"2011-09-07T14:32:45.504Z","type":"message"}
{"nick":"indutny","message":"try to build, run node debug script.js","date":"2011-09-07T14:32:54.553Z","type":"message"}
{"nick":"indutny","message":"and give me a feedback on API","date":"2011-09-07T14:33:04.781Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm not a fan of GH's new layout, i think :/","date":"2011-09-07T14:33:07.716Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2011-09-07T14:33:11.975Z","type":"message"}
{"nick":"indutny","message":"`feature-debugger-test` branch so","date":"2011-09-07T14:33:19.220Z","type":"message"}
{"nick":"indutny","message":"on git://github.com/indutny/node","date":"2011-09-07T14:33:27.223Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: can you submit it as a pull request?","date":"2011-09-07T14:33:32.790Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll look at it but i'm busy with other stuff atm","date":"2011-09-07T14:33:58.395Z","type":"message"}
{"nick":"indutny","message":"I'm going to do that, but later (I'll rebase commits)","date":"2011-09-07T14:34:10.104Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: can you checkout my repo w/o pull requests when you'll have enough time","date":"2011-09-07T14:34:26.800Z","type":"message"}
{"nick":"indutny","message":"?","date":"2011-09-07T14:34:28.945Z","type":"message"}
{"nick":"bnoordhuis","message":"i suppose so","date":"2011-09-07T14:34:40.346Z","type":"message"}
{"nick":"bnoordhuis","message":"but what's so bad about pull requests?","date":"2011-09-07T14:34:46.425Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: thank you!","date":"2011-09-07T14:34:46.724Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2011-09-07T14:35:08.028Z","type":"message"}
{"nick":"indutny","message":"I wanted to rebase it to one commit when I'll finish it","date":"2011-09-07T14:35:25.078Z","type":"message"}
{"nick":"bnoordhuis","message":"oh that, don't worry","date":"2011-09-07T14:35:38.142Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2011-09-07T14:35:42.216Z","type":"message"}
{"nick":"indutny","message":"one second","date":"2011-09-07T14:35:46.718Z","type":"message"}
{"nick":"bnoordhuis","message":"or create a new feature branch and squash it","date":"2011-09-07T14:35:58.486Z","type":"message"}
{"nick":"bnoordhuis","message":"but either way it's not a big deal","date":"2011-09-07T14:36:09.137Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2011-09-07T14:36:14.863Z","type":"message"}
{"nick":"indutny","message":"https://github.com/joyent/node/pull/1667","date":"2011-09-07T14:39:12.163Z","type":"message"}
{"nick":"bnoordhuis","message":"thanks, indutny","date":"2011-09-07T14:40:02.453Z","type":"message"}
{"nick":"indutny","message":"np","date":"2011-09-07T14:40:06.384Z","type":"message"}
{"nick":"indutny","message":"I'll push more commits to it","date":"2011-09-07T14:40:20.434Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, cool","date":"2011-09-07T14:42:04.940Z","type":"message"}
{"nick":"indutny","message":"cc ryah: https://github.com/joyent/node/pull/1667","date":"2011-09-07T14:43:18.666Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2011-09-07T14:44:33.314Z","type":"message"}
{"nick":"piscisaureus","date":"2011-09-07T15:07:55.184Z","type":"join"}
{"nick":"piscisaureus","message":"pietern: re uv_write errror handling. If what you say is true, it is a bug. The write callback should be made for every call to uv_write. I am sure the windows implementation does this, not sure about unix tho - but it should.","date":"2011-09-07T15:13:37.003Z","type":"message"}
{"nick":"pietern","message":"piscisaureus: thanks for confirming, I discussed this with bnoordhuis earlier","date":"2011-09-07T15:13:58.984Z","type":"message"}
{"nick":"pietern","message":"and I believe he's fixing","date":"2011-09-07T15:14:02.253Z","type":"message"}
{"nick":"piscisaureus","message":"pietern: ah, nice.","date":"2011-09-07T15:14:11.043Z","type":"message"}
{"nick":"piscisaureus","message":"noordhuis family dinner?","date":"2011-09-07T15:14:18.859Z","type":"message"}
{"nick":"pietern","message":"piscisaureus: all callbacks should also be called from the reactor, right?","date":"2011-09-07T15:14:24.735Z","type":"message"}
{"nick":"pietern","message":"piscisaureus: ;)","date":"2011-09-07T15:14:27.415Z","type":"message"}
{"nick":"pietern","message":"that's a libuv invariant","date":"2011-09-07T15:14:35.329Z","type":"message"}
{"nick":"piscisaureus","message":"pietern: probably most of the errors should. But some errors might not atm, e.g. if your socket is not connected then uv-win reports the error synchronously.","date":"2011-09-07T15:15:53.362Z","type":"message"}
{"nick":"pietern","message":"ok, but the idea is to defer every callback eventually, right?","date":"2011-09-07T15:16:50.258Z","type":"message"}
{"nick":"piscisaureus","message":"pietern: hmm...","date":"2011-09-07T15:17:12.676Z","type":"message"}
{"nick":"piscisaureus","message":"pietern: That may be best, yes","date":"2011-09-07T15:17:26.077Z","type":"message"}
{"nick":"pietern","message":"piscisaureus: similar to the deferred callback for uv_close, ","date":"2011-09-07T15:17:30.862Z","type":"message"}
{"nick":"pietern","message":"that's not necessary on unix, but it is still done","date":"2011-09-07T15:17:44.277Z","type":"message"}
{"nick":"piscisaureus","message":"pietern: sure it will always *defer* the callback","date":"2011-09-07T15:17:51.194Z","type":"message"}
{"nick":"piscisaureus","message":"pietern: but uv_write() could also just return -1","date":"2011-09-07T15:18:07.536Z","type":"message"}
{"nick":"piscisaureus","message":"then there will never be a callback","date":"2011-09-07T15:18:15.872Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: i think we should that fix that","date":"2011-09-07T15:18:25.677Z","type":"message"}
{"nick":"pietern","message":"piscisaureus: right, in error conditions","date":"2011-09-07T15:18:30.413Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: never return an error, always defer the callback","date":"2011-09-07T15:18:47.096Z","type":"message"}
{"nick":"pietern","message":"but then we would have : -1 == error, no action, no callback","date":"2011-09-07T15:18:51.201Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: except for OOM conditions maybe","date":"2011-09-07T15:18:53.524Z","type":"message"}
{"nick":"pietern","message":"and 0 == action + deferred callback","date":"2011-09-07T15:18:58.769Z","type":"message"}
{"nick":"piscisaureus","message":"pietern: yes, exactly","date":"2011-09-07T15:19:11.253Z","type":"message"}
{"nick":"pietern","message":"right, makes 100% sense","date":"2011-09-07T15:19:35.793Z","type":"message"}
{"nick":"piscisaureus","message":"pietern: uv-win always defers the callback, so that's good.","date":"2011-09-07T15:19:48.573Z","type":"message"}
{"nick":"piscisaureus","message":"pietern: we have a test for this (test-callback-stack) but maybe write() slipped through","date":"2011-09-07T15:20:10.612Z","type":"message"}
{"nick":"pietern","message":"yep, there only is uv_write ","date":"2011-09-07T15:20:14.604Z","type":"message"}
{"nick":"pietern","message":"that has: return -1, action, no callback","date":"2011-09-07T15:20:23.382Z","type":"message"}
{"nick":"pietern","message":"piscisaureus: this will only show in case of a write error","date":"2011-09-07T15:21:00.009Z","type":"message"}
{"nick":"piscisaureus","message":"yes","date":"2011-09-07T15:21:14.301Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: https://github.com/joyent/libuv/blob/master/src/win/tcp.c#L638-641","date":"2011-09-07T15:21:21.942Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: we can't really defer that","date":"2011-09-07T15:21:27.084Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: but reporting failure with -1 and make no callback seems fine to me","date":"2011-09-07T15:21:51.112Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: i suppose you're right","date":"2011-09-07T15:22:22.905Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: about our retarded side project: I got $TCP->connect working() :-)","date":"2011-09-07T15:23:10.909Z","type":"message"}
{"nick":"piscisaureus","message":"incl. making the callback into the vm","date":"2011-09-07T15:23:18.676Z","type":"message"}
{"nick":"piscisaureus","message":"on windows","date":"2011-09-07T15:23:23.816Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: heh, cool","date":"2011-09-07T15:23:26.024Z","type":"message"}
{"nick":"bnoordhuis","message":"did you push it?","date":"2011-09-07T15:23:29.714Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: not yet","date":"2011-09-07T15:23:36.347Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I want to rename the project.","date":"2011-09-07T15:23:47.469Z","type":"message"}
{"nick":"piscisaureus","message":"we should call it phode or pode or something","date":"2011-09-07T15:24:01.811Z","type":"message"}
{"nick":"bnoordhuis","message":"phode","date":"2011-09-07T15:24:09.181Z","type":"message"}
{"nick":"piscisaureus","message":"or puv or puh","date":"2011-09-07T15:24:10.546Z","type":"message"}
{"nick":"bnoordhuis","message":"i can live with that","date":"2011-09-07T15:24:12.071Z","type":"message"}
{"nick":"bnoordhuis","message":"we could at sometime in the future split off the uv bindings into a separate project","date":"2011-09-07T15:24:34.500Z","type":"message"}
{"nick":"bnoordhuis","message":"since it'd actually be useful","date":"2011-09-07T15:24:48.162Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: split it off from what?","date":"2011-09-07T15:24:59.201Z","type":"message"}
{"nick":"bnoordhuis","message":"from... er, phode","date":"2011-09-07T15:25:05.565Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: but it *is* uv bindings?","date":"2011-09-07T15:25:21.318Z","type":"message"}
{"nick":"piscisaureus","message":"I mean, what else is there?","date":"2011-09-07T15:25:25.473Z","type":"message"}
{"nick":"piscisaureus","message":"or you mean the node-like interface that we're attempting?","date":"2011-09-07T15:25:37.823Z","type":"message"}
{"nick":"bnoordhuis","message":"node-like sugar yes","date":"2011-09-07T15:25:46.361Z","type":"message"}
{"nick":"bnoordhuis","message":"and stuff like drizzle","date":"2011-09-07T15:25:54.700Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yeah, maybe","date":"2011-09-07T15:25:58.570Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I didn't get drizzle compiling","date":"2011-09-07T15:26:08.288Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: where did it stop?","date":"2011-09-07T15:26:28.583Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I am using gyp to build it on windows, but I didn't feel like creating a gyp file for drizzle","date":"2011-09-07T15:26:29.200Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: <3 gyp","date":"2011-09-07T15:26:41.254Z","type":"message"}
{"nick":"bnoordhuis","message":":)","date":"2011-09-07T15:26:44.694Z","type":"message"}
{"nick":"bnoordhuis","message":"commit the gyp files to","date":"2011-09-07T15:26:48.080Z","type":"message"}
{"nick":"bnoordhuis","message":"*too","date":"2011-09-07T15:26:49.624Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: will do","date":"2011-09-07T15:26:54.931Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: but the php build variant and the paths of the php includes are hard-coded in the gyp file right now","date":"2011-09-07T15:27:11.959Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll be a happy camper if i don't have to write a configure.in","date":"2011-09-07T15:27:12.896Z","type":"message"}
{"nick":"bnoordhuis","message":"oh well, i can live with that for now","date":"2011-09-07T15:27:24.759Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: minus the fact that it's hard-coded for my system :-)","date":"2011-09-07T15:27:52.244Z","type":"message"}
{"nick":"bnoordhuis","message":"move the hard-coded bits into a separate non-versioned file","date":"2011-09-07T15:28:10.411Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: let me just commit everything in a messy commit, okay","date":"2011-09-07T15:28:12.792Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: re the uv_write thing:","date":"2011-09-07T15:28:15.995Z","type":"message"}
{"nick":"piscisaureus","message":"so you have the cargo","date":"2011-09-07T15:28:17.459Z","type":"message"}
{"nick":"bnoordhuis","message":"pietern: yes?","date":"2011-09-07T15:28:26.182Z","type":"message"}
{"nick":"pietern","message":"I'm not so sure all of a sudden","date":"2011-09-07T15:29:40.150Z","type":"message"}
{"nick":"pietern","message":"there is another check in there for stream->fd <= 0","date":"2011-09-07T15:29:48.325Z","type":"message"}
{"nick":"pietern","message":"sorry, < 0","date":"2011-09-07T15:29:54.374Z","type":"message"}
{"nick":"pietern","message":"that also returns -1 with no action","date":"2011-09-07T15:30:05.108Z","type":"message"}
{"nick":"pietern","message":"and the user should clean up his uv_write_t","date":"2011-09-07T15:30:11.888Z","type":"message"}
{"nick":"bnoordhuis","message":"the delayed init stuff","date":"2011-09-07T15:30:16.182Z","type":"message"}
{"nick":"bnoordhuis","message":"or?","date":"2011-09-07T15:30:22.130Z","type":"message"}
{"nick":"bnoordhuis","message":"oh right, i see what you mean","date":"2011-09-07T15:30:41.568Z","type":"message"}
{"nick":"bnoordhuis","message":"raises EBADF","date":"2011-09-07T15:30:44.545Z","type":"message"}
{"nick":"pietern","message":"no, whether or not uv_write should trigger the callback with status=-1 on failure","date":"2011-09-07T15:30:44.903Z","type":"message"}
{"nick":"pietern","message":"in a sense, stream < 0 is no different from a failing write","date":"2011-09-07T15:31:04.371Z","type":"message"}
{"nick":"pietern","message":"since there is no effect in both cases","date":"2011-09-07T15:31:14.636Z","type":"message"}
{"nick":"pietern","message":"so I'm not sure it should run the callback now..","date":"2011-09-07T15:32:22.266Z","type":"message"}
{"nick":"pietern","message":"if error == -1 + no action + no callback","date":"2011-09-07T15:32:37.940Z","type":"message"}
{"nick":"pietern","message":"then uv_write + write < 0 == no action --> no callback","date":"2011-09-07T15:32:55.401Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, let me ponder this for a bit","date":"2011-09-07T15:34:05.437Z","type":"message"}
{"nick":"bnoordhuis","message":"does everyone agree that deferring as much as possible is easiest for the caller?","date":"2011-09-07T15:35:02.567Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: ^","date":"2011-09-07T15:35:05.652Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: also -> https://github.com/Skomski/node/commit/2cb71a42e529003743eec2da173870bf2eb53f57#commitcomment-574520","date":"2011-09-07T15:36:32.556Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: I agree","date":"2011-09-07T15:38:23.032Z","type":"message"}
{"nick":"pietern","message":"although in the case of uv_write, you need some error handling in the return -1 case as well","date":"2011-09-07T15:38:43.729Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: can you link me to the code this is about?","date":"2011-09-07T15:39:04.011Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: that pull request or libuv?","date":"2011-09-07T15:39:23.000Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: libuv","date":"2011-09-07T15:39:27.688Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: https://github.com/joyent/libuv/blob/master/src/unix/stream.c#L662 <- stuff like that","date":"2011-09-07T15:40:56.239Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: depends on what uv__write does obviously :-)","date":"2011-09-07T15:41:53.394Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: okay so to understand this right:","date":"2011-09-07T15:44:04.510Z","type":"message"}
{"nick":"piscisaureus","message":"We all agree that uv_something either returns 0 and guaranteeds the callback to be made,","date":"2011-09-07T15:44:04.669Z","type":"message"}
{"nick":"piscisaureus","message":"*or* -1 is returned the the callback is guaranteed not to be made","date":"2011-09-07T15:44:04.669Z","type":"message"}
{"nick":"piscisaureus","message":"But the discussion is whether uv_write should ever return -1 at all?","date":"2011-09-07T15:44:04.669Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2011-09-07T15:44:19.533Z","type":"message"}
{"nick":"piscisaureus","message":"s/the the/and the/","date":"2011-09-07T15:44:20.964Z","type":"message"}
{"nick":"bnoordhuis","message":"or should return -1 as much as it does","date":"2011-09-07T15:44:27.666Z","type":"message"}
{"nick":"bnoordhuis","message":"the EBADF case is an example of where you could still defer the callback","date":"2011-09-07T15:44:50.051Z","type":"message"}
{"nick":"bnoordhuis","message":"otoh, you can argue that EBADF is a programmer error","date":"2011-09-07T15:45:18.168Z","type":"message"}
{"nick":"bnoordhuis","message":"so it should fail fast","date":"2011-09-07T15:45:26.718Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: if correct use of the api guarantees that it should NOT happen, I'd throw in an assert","date":"2011-09-07T15:45:52.211Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I think I don't want to guarantee that we never return -1","date":"2011-09-07T15:45:52.371Z","type":"message"}
{"nick":"piscisaureus","message":"pietern is right about that","date":"2011-09-07T15:46:07.903Z","type":"message"}
{"nick":"pietern","message":"make uv_write return void, have it defer everything","date":"2011-09-07T15:46:26.743Z","type":"message"}
{"nick":"pietern","message":"and bail when you make a programming error","date":"2011-09-07T15:46:32.888Z","type":"message"}
{"nick":"bnoordhuis","message":"i can live with that","date":"2011-09-07T15:46:56.268Z","type":"message"}
{"nick":"pietern","message":"that leaves a single place to deal with the uv_write_t's you create","date":"2011-09-07T15:46:57.458Z","type":"message"}
{"nick":"pietern","message":"love it","date":"2011-09-07T15:46:59.138Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus?","date":"2011-09-07T15:46:59.293Z","type":"message"}
{"nick":"DrPizza","message":"errors shouldbe returned to the caller","date":"2011-09-07T15:47:07.116Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: not sure","date":"2011-09-07T15:47:11.633Z","type":"message"}
{"nick":"DrPizza","message":"immediately","date":"2011-09-07T15:47:13.294Z","type":"message"}
{"nick":"bnoordhuis","message":"it's a library of course... it should handle invalid input graciously","date":"2011-09-07T15:47:52.648Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: this may be doable for tcp uv_write but I don't think we can actually defer in any case","date":"2011-09-07T15:48:21.300Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm going to ponder this some more","date":"2011-09-07T15:49:40.233Z","type":"message"}
{"nick":"pietern","message":"sorry to confuse you guys with this","date":"2011-09-07T15:49:53.081Z","type":"message"}
{"nick":"pietern","message":";)","date":"2011-09-07T15:49:55.301Z","type":"message"}
{"nick":"pietern","message":"I think that if graciously handling erroneous usage of the library has impact on its design, an assert is ok","date":"2011-09-07T15:50:55.456Z","type":"message"}
{"nick":"piscisaureus","message":"we'll have to discuss with ryah","date":"2011-09-07T15:51:05.463Z","type":"message"}
{"nick":"piscisaureus","message":"if we want this change anyway","date":"2011-09-07T15:51:15.304Z","type":"message"}
{"nick":"piscisaureus","message":"it sounds nice, unfallible calls :-)","date":"2011-09-07T15:51:41.612Z","type":"message"}
{"nick":"bnoordhuis","message":"you'll still have to deal with corner cases like malloc returning NULL","date":"2011-09-07T15:52:49.473Z","type":"message"}
{"nick":"piscisaureus","message":"yes","date":"2011-09-07T15:52:55.664Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: does libev handle that?","date":"2011-09-07T15:53:04.304Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: in the case of uv_listen it's more problematic","date":"2011-09-07T15:54:06.009Z","type":"message"}
{"nick":"bnoordhuis","message":"pietern: no - but libev is not the measure of things","date":"2011-09-07T15:54:28.805Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: since we do not pass errors to the user, so we can't defer the error in that case","date":"2011-09-07T15:54:31.327Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, i'll get back to this in a bit","date":"2011-09-07T15:55:01.157Z","type":"message"}
{"nick":"bnoordhuis","message":"dinner's ready :)","date":"2011-09-07T15:55:03.815Z","type":"message"}
{"nick":"piscisaureus","message":"say hi to the wife :-p","date":"2011-09-07T15:55:12.199Z","type":"message"}
{"nick":"pietern","message":"bnoordhuis: I'm leaving for dinner as well, ","date":"2011-09-07T15:55:16.286Z","type":"message"}
{"nick":"pietern","message":"have a good evening","date":"2011-09-07T15:55:18.356Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, i will :)","date":"2011-09-07T15:55:18.696Z","type":"message"}
{"nick":"bnoordhuis","message":"you too, pietern","date":"2011-09-07T15:55:22.501Z","type":"message"}
{"nick":"pietern","message":"thank for the chat!","date":"2011-09-07T15:55:25.560Z","type":"message"}
{"nick":"pietern","message":"love the work you guys are doing!","date":"2011-09-07T15:55:33.436Z","type":"message"}
{"nick":"pietern","message":"I/O is a pain, and a solid design for taking that away is very welcome :)","date":"2011-09-07T15:55:46.896Z","type":"message"}
{"nick":"pietern","message":"later!","date":"2011-09-07T15:55:59.619Z","type":"message"}
{"nick":"pietern","new_nick":"pietern_away","date":"2011-09-07T15:56:08.292Z","type":"nick"}
{"nick":"pietern_away","reason":"Quit: pietern_away","date":"2011-09-07T16:03:45.481Z","type":"quit"}
{"nick":"dmkbot","date":"2011-09-07T16:14:30.615Z","type":"join"}
{"nick":"graydon","date":"2011-09-07T16:59:40.420Z","type":"join"}
{"nick":"dmkbot","message":"\u0002joyent/node:\u0002 ArtS: Weird 'require' behaviour - https://github.com/joyent/node/issues/410","date":"2011-09-07T17:24:28.658Z","type":"message"}
{"nick":"brson","date":"2011-09-07T17:25:54.326Z","type":"join"}
{"nick":"dmkbot","message":"\u0002joyent/node:\u0002 ArtS: Weird 'require' behaviour - https://github.com/joyent/node/issues/410","date":"2011-09-07T17:29:28.841Z","type":"message"}
{"nick":"pquerna","message":"https://github.com/dustin/labrea","date":"2011-09-07T17:34:05.288Z","type":"message"}
{"nick":"pquerna","message":"https://github.com/dustin/labrea/blob/master/examples/randomerrors.lua","date":"2011-09-07T17:34:41.135Z","type":"message"}
{"nick":"piscisaureus","message":"pquerna: what's that for?","date":"2011-09-07T17:36:19.378Z","type":"message"}
{"nick":"pquerna","message":"mjr has that weird issue with a socket sometimes returning ETIMEOUT","date":"2011-09-07T17:39:38.421Z","type":"message"}
{"nick":"pquerna","message":"with labrea, you can write a lua script to intercept write()","date":"2011-09-07T17:39:49.511Z","type":"message"}
{"nick":"pquerna","message":"and choose when to return ETIMEOUT","date":"2011-09-07T17:39:54.680Z","type":"message"}
{"nick":"pquerna","message":"and then hopefully debug the uncatchable exception problem he has had","date":"2011-09-07T17:40:08.969Z","type":"message"}
{"nick":"piscisaureus","message":"we could also just create a test that monkey patches net.Socket to do the samee","date":"2011-09-07T17:40:34.732Z","type":"message"}
{"nick":"piscisaureus","message":"prolly less work to set up","date":"2011-09-07T17:40:40.660Z","type":"message"}
{"nick":"piscisaureus","message":"pquerna: dunno if Lisa bugged you about my time sheets as well, but I'm doing it now.","date":"2011-09-07T17:51:25.520Z","type":"message"}
{"nick":"piscisaureus","message":"transferring timekeeper data to excel","date":"2011-09-07T17:51:35.697Z","type":"message"}
{"nick":"piscisaureus","message":"so boring","date":"2011-09-07T17:51:37.388Z","type":"message"}
{"nick":"bnoordhuis","message":"no scrum call today either, i suppose?","date":"2011-09-07T17:59:32.355Z","type":"message"}
{"nick":"piscisaureus","message":"I think so","date":"2011-09-07T18:01:43.603Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: https://github.com/piscisaureus/phode","date":"2011-09-07T18:02:53.516Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: KeyError: 'Undefined variable library in deps/libuv/uv.gyp while loading dependencies of phode.gyp while trying to load phode.gyp'","date":"2011-09-07T18:06:43.631Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I tested it only in windows","date":"2011-09-07T18:07:09.787Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I haven't sorted that out","date":"2011-09-07T18:07:23.581Z","type":"message"}
{"nick":"bnoordhuis","message":"okay","date":"2011-09-07T18:07:28.341Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: look at gen.bat for how to call it","date":"2011-09-07T18:07:31.402Z","type":"message"}
{"nick":"piscisaureus","message":"(add --Dlibrary=static_library even though we're building a shared one)","date":"2011-09-07T18:07:58.205Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: it could also be that --depth wants an absolute path on linux","date":"2011-09-07T18:08:44.403Z","type":"message"}
{"nick":"piscisaureus","message":"try with --depth=$(\"pwd\") or however you guys do that","date":"2011-09-07T18:09:06.975Z","type":"message"}
{"nick":"bnoordhuis","message":"--depth=$PWD :)","date":"2011-09-07T18:09:15.612Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: but I can verify that $tcp->write and $tcp->connect works now. Although it's not doing proper error handling, doesn't free memory correctly, and doesn't validate arguments","date":"2011-09-07T18:10:15.710Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: also I think we should use namespaces anyway","date":"2011-09-07T18:20:23.647Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: why?","date":"2011-09-07T18:20:34.823Z","type":"message"}
{"nick":"piscisaureus","message":"you can't have nested classes","date":"2011-09-07T18:20:44.601Z","type":"message"}
{"nick":"piscisaureus","message":"e.g. uv::tcp::createConnect() <-- not possible","date":"2011-09-07T18:21:00.454Z","type":"message"}
{"nick":"piscisaureus","message":"also there is no good support for aliasing","date":"2011-09-07T18:21:14.965Z","type":"message"}
{"nick":"piscisaureus","message":"with namespaces you could just have:","date":"2011-09-07T18:22:07.102Z","type":"message"}
{"nick":"piscisaureus","message":"use uv\\tcp;","date":"2011-09-07T18:22:07.256Z","type":"message"}
{"nick":"piscisaureus","message":"createConnection(\"google.com\", 80, onConnection);","date":"2011-09-07T18:22:07.256Z","type":"message"}
{"nick":"bnoordhuis","message":"okay","date":"2011-09-07T18:23:50.836Z","type":"message"}
{"nick":"bnoordhuis","message":"ugly but hey, that's php","date":"2011-09-07T18:24:00.597Z","type":"message"}
{"nick":"bnoordhuis","message":"../../opt/php5/include/php/main/php.h:298: warning: type defaults to �int� in declaration of �inline�","date":"2011-09-07T18:33:34.225Z","type":"message"}
{"nick":"bnoordhuis","message":"../../opt/php5/include/php/main/php.h:298: error: expected �,� or �;� before �void�","date":"2011-09-07T18:33:34.382Z","type":"message"}
{"nick":"bnoordhuis","message":"fsck","date":"2011-09-07T18:33:37.141Z","type":"message"}
{"nick":"mraleph","date":"2011-09-07T18:50:25.123Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus: do you have an example file?","date":"2011-09-07T18:56:00.076Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: i will be back later, but quicky:","date":"2011-09-07T19:06:53.211Z","type":"message"}
{"nick":"piscisaureus","message":"$t = new TCP();","date":"2011-09-07T19:06:53.367Z","type":"message"}
{"nick":"piscisaureus","message":"$t->connect(\"127.0.0.1\", 5432, function () use ($t) {","date":"2011-09-07T19:06:53.367Z","type":"message"}
{"nick":"piscisaureus","message":"  echo \"connected!\\n\";","date":"2011-09-07T19:06:53.367Z","type":"message"}
{"nick":"piscisaureus","message":"  $t->write(\"gheh!\", function() use ($t) {","date":"2011-09-07T19:06:53.367Z","type":"message"}
{"nick":"piscisaureus","message":"    echo \"written!\\n\";","date":"2011-09-07T19:06:54.106Z","type":"message"}
{"nick":"piscisaureus","message":"  });","date":"2011-09-07T19:06:54.267Z","type":"message"}
{"nick":"piscisaureus","message":"});","date":"2011-09-07T19:06:55.158Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: so did it work?","date":"2011-09-07T19:26:32.762Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: yep","date":"2011-09-07T19:26:44.339Z","type":"message"}
{"nick":"bnoordhuis","message":"needed to add a uv_run() though :)","date":"2011-09-07T19:26:52.283Z","type":"message"}
{"nick":"piscisaureus","message":"yes, sure","date":"2011-09-07T19:27:16.290Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: so where to go from her?","date":"2011-09-07T19:28:02.638Z","type":"message"}
{"nick":"piscisaureus","message":"We need proper cleanup of reqs and handles","date":"2011-09-07T19:28:10.924Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2011-09-07T19:28:36.338Z","type":"message"}
{"nick":"bnoordhuis","message":"let's see if i can get close() to work","date":"2011-09-07T19:28:54.944Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I think we can use the same trick as node: grab a handle to oneself and drop it in the close callback","date":"2011-09-07T19:29:24.633Z","type":"message"}
{"nick":"piscisaureus","message":"in this case it would be just Z_ADDREF_P","date":"2011-09-07T19:29:36.844Z","type":"message"}
{"nick":"bnoordhuis","message":"er?","date":"2011-09-07T19:29:49.751Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: you have to be careful that you don't free a handle's memory before the close callback is made","date":"2011-09-07T19:30:14.498Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2011-09-07T19:30:30.193Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: so just Z_ADDREF after uv_init, and Z_DELREF in close_cb","date":"2011-09-07T19:30:56.084Z","type":"message"}
{"nick":"bnoordhuis","message":"right","date":"2011-09-07T19:31:15.429Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: then actually free the memory when php's gc wants to","date":"2011-09-07T19:31:19.027Z","type":"message"}
{"nick":"bnoordhuis","message":"are strings still byte arrays in php 5.5?","date":"2011-09-07T19:32:25.049Z","type":"message"}
{"nick":"piscisaureus","message":"not sure","date":"2011-09-07T19:32:36.010Z","type":"message"}
{"nick":"piscisaureus","message":"I think they are moving towards multibyte","date":"2011-09-07T19:32:45.473Z","type":"message"}
{"nick":"piscisaureus","message":"but in php dealing with string encoding is up to user, so I think it's safe to just write it as a byte array","date":"2011-09-07T19:33:23.858Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: it's definitely not going to be utf16 or something weird like that","date":"2011-09-07T19:33:47.656Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I'm gonna try to make listen() work","date":"2011-09-07T19:34:57.298Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: quick binging suggests in-core multibyte support is a php6 thing","date":"2011-09-07T19:35:12.897Z","type":"message"}
{"nick":"bnoordhuis","message":"cool, i'll hack on close()","date":"2011-09-07T19:35:19.102Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, and let's use container_of","date":"2011-09-07T19:35:28.428Z","type":"message"}
{"nick":"bnoordhuis","message":"less hassle with pointers","date":"2011-09-07T19:35:32.687Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: php6 is off the map","date":"2011-09-07T19:35:34.120Z","type":"message"}
{"nick":"piscisaureus","message":"there are no actual attempts to do it","date":"2011-09-07T19:35:47.362Z","type":"message"}
{"nick":"bnoordhuis","message":"php6 you mean?","date":"2011-09-07T19:36:05.400Z","type":"message"}
{"nick":"piscisaureus","message":"yes","date":"2011-09-07T19:36:09.111Z","type":"message"}
{"nick":"bnoordhuis","message":"just like perl6!","date":"2011-09-07T19:36:14.248Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: btw, I want to strive for the node api directly","date":"2011-09-07T19:37:31.640Z","type":"message"}
{"nick":"piscisaureus","message":"no \" internal\"  binding layer","date":"2011-09-07T19:37:39.829Z","type":"message"}
{"nick":"bnoordhuis","message":"you mean no php code?","date":"2011-09-07T19:37:56.981Z","type":"message"}
{"nick":"piscisaureus","message":"yes, no php code","date":"2011-09-07T19:38:05.048Z","type":"message"}
{"nick":"piscisaureus","message":"or?","date":"2011-09-07T19:38:05.686Z","type":"message"}
{"nick":"bnoordhuis","message":"fine by me","date":"2011-09-07T19:38:17.128Z","type":"message"}
{"nick":"piscisaureus","message":"I don't know how that is going to work out","date":"2011-09-07T19:38:28.376Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't think you can really, from a native php add-on","date":"2011-09-07T19:38:52.126Z","type":"message"}
{"nick":"bnoordhuis","message":"unless you eval it :)","date":"2011-09-07T19:38:56.022Z","type":"message"}
{"nick":"piscisaureus","message":"that is a fine solution by itself","date":"2011-09-07T19:39:12.584Z","type":"message"}
{"nick":"piscisaureus","message":"we could have a php2c build step :-)","date":"2011-09-07T19:39:26.184Z","type":"message"}
{"nick":"piscisaureus","message":"we'll need some kind of eventemitter :-/","date":"2011-09-07T19:40:09.103Z","type":"message"}
{"nick":"bnoordhuis","message":"that's conceptually easy enough isn't it?","date":"2011-09-07T19:40:53.956Z","type":"message"}
{"nick":"piscisaureus","message":"yes, sure","date":"2011-09-07T19:41:06.775Z","type":"message"}
{"nick":"piscisaureus","message":"but it would be nice to inherit an eventemitter class in c-land","date":"2011-09-07T19:41:21.738Z","type":"message"}
{"nick":"piscisaureus","message":"I don't know how to do that","date":"2011-09-07T19:41:26.957Z","type":"message"}
{"nick":"bnoordhuis","message":"grep for 'overloaded', there are api functions for that","date":"2011-09-07T19:44:41.226Z","type":"message"}
{"nick":"bnoordhuis","message":"INIT_OVERLOADED_CLASS_ENTRY","date":"2011-09-07T19:45:20.102Z","type":"message"}
{"nick":"bnoordhuis","message":"we should pass the handle - $t - as the first argument","date":"2011-09-07T19:46:59.245Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: also, do you know if it is possible to throw from c?","date":"2011-09-07T19:47:16.657Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: yes, zend_throw_exception","date":"2011-09-07T19:47:57.078Z","type":"message"}
{"nick":"piscisaureus","message":"ok, thnx","date":"2011-09-07T19:48:16.522Z","type":"message"}
{"nick":"piscisaureus","message":"you know so much about php","date":"2011-09-07T19:48:21.580Z","type":"message"}
{"nick":"piscisaureus","message":"scary","date":"2011-09-07T19:48:23.652Z","type":"message"}
{"nick":"piscisaureus","message":":-)","date":"2011-09-07T19:48:24.734Z","type":"message"}
{"nick":"bnoordhuis","message":"i wrote some internal pecl modules when i was at ziggo","date":"2011-09-07T19:52:50.566Z","type":"message"}
{"nick":"bnoordhuis","message":"yay, close() works","date":"2011-09-07T19:57:15.281Z","type":"message"}
{"nick":"bnoordhuis","message":"still leaking memory left and right though","date":"2011-09-07T19:57:32.517Z","type":"message"}
{"nick":"bnoordhuis","message":"=== Total 10 memory leaks detected ===","date":"2011-09-07T19:57:33.037Z","type":"message"}
{"nick":"dmkbot","reason":"Remote host closed the connection","date":"2011-09-07T19:57:43.105Z","type":"quit"}
{"nick":"dmkbot","date":"2011-09-07T19:58:01.210Z","type":"join"}
{"nick":"piscisaureus","message":"bnoordhuis: sure, I've made no attempt whatsoever to free memory so far","date":"2011-09-07T19:58:02.603Z","type":"message"}
{"nick":"bnoordhuis","message":"one thing with close() is, the handle's dead but the php object is still alive","date":"2011-09-07T19:58:37.082Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: you need to efree() in tcp_wrap_free","date":"2011-09-07T19:59:05.942Z","type":"message"}
{"nick":"piscisaureus","message":"php doesn't do this","date":"2011-09-07T19:59:11.477Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, that's the case","date":"2011-09-07T19:59:20.739Z","type":"message"}
{"nick":"bnoordhuis","message":"but it works like this now:","date":"2011-09-07T19:59:25.104Z","type":"message"}
{"nick":"bnoordhuis","message":"php code calls $handle->close()","date":"2011-09-07T19:59:35.754Z","type":"message"}
{"nick":"piscisaureus","message":"yes, ok","date":"2011-09-07T19:59:58.971Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: but php's gc calls tcp_wrap_free when the object goes out of scope","date":"2011-09-07T20:00:16.949Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, but that's not the case yet after $handle->close()","date":"2011-09-07T20:00:36.913Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: that's fine right","date":"2011-09-07T20:00:57.686Z","type":"message"}
{"nick":"bnoordhuis","message":"so presumably the php code could call $handle->close() again and bad things would happen","date":"2011-09-07T20:00:58.826Z","type":"message"}
{"nick":"piscisaureus","message":"I mean, in js it's the same","date":"2011-09-07T20:01:03.143Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yeah, we need to prevent that","date":"2011-09-07T20:01:14.589Z","type":"message"}
{"nick":"bnoordhuis","message":"we should add a 'is dead' check","date":"2011-09-07T20:01:18.334Z","type":"message"}
{"nick":"bnoordhuis","message":"simple enough to do","date":"2011-09-07T20:01:23.735Z","type":"message"}
{"nick":"piscisaureus","message":"Make it a macro","date":"2011-09-07T20:01:33.943Z","type":"message"}
{"nick":"piscisaureus","message":"so we can use it everywhere","date":"2011-09-07T20:01:41.421Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2011-09-07T20:02:11.245Z","type":"message"}
{"nick":"brson","reason":"Ping timeout: 260 seconds","date":"2011-09-07T20:06:18.243Z","type":"quit"}
{"nick":"brson","date":"2011-09-07T20:07:08.121Z","type":"join"}
{"nick":"brson","reason":"Read error: Connection reset by peer","date":"2011-09-07T20:10:15.157Z","type":"quit"}
{"nick":"brson","date":"2011-09-07T20:10:48.257Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus: variable naming: tcp_wrap or self?","date":"2011-09-07T20:11:16.425Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: is there a good reference for the php api?","date":"2011-09-07T20:11:25.895Z","type":"message"}
{"nick":"piscisaureus","message":"*shrug*","date":"2011-09-07T20:11:28.840Z","type":"message"}
{"nick":"piscisaureus","message":"both are okay","date":"2011-09-07T20:11:31.244Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I am looking for docs on zend_hash_init","date":"2011-09-07T20:11:42.560Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: read the source, more reliable than any documentation you'll find online","date":"2011-09-07T20:12:11.335Z","type":"message"}
{"nick":"bnoordhuis","message":"you can run doxygen over the source but the php source code is pretty low on useful comments","date":"2011-09-07T20:12:31.352Z","type":"message"}
{"nick":"piscisaureus","message":"yes","date":"2011-09-07T20:12:38.206Z","type":"message"}
{"nick":"piscisaureus","message":"and macro clusterfucks all over the place :-(","date":"2011-09-07T20:12:45.838Z","type":"message"}
{"nick":"bnoordhuis","message":"quite","date":"2011-09-07T20:17:35.475Z","type":"message"}
{"nick":"bnoordhuis","message":"object healthcheck is in place","date":"2011-09-07T20:17:43.732Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll start on the event emitter","date":"2011-09-07T20:19:19.116Z","type":"message"}
{"nick":"piscisaureus","message":"kewl. I was also doing that but getting nowhere/","date":"2011-09-07T20:19:35.552Z","type":"message"}
{"nick":"piscisaureus","message":"so you do it","date":"2011-09-07T20:19:38.109Z","type":"message"}
{"nick":"bnoordhuis","message":"that's why you were asking about zend_hash, i take it? :)","date":"2011-09-07T20:21:28.691Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yes","date":"2011-09-07T20:22:03.083Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: can you commit local.gypi skeletton?","date":"2011-09-07T20:22:14.004Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: sure","date":"2011-09-07T20:22:23.522Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: but the idea is that it's, well, local","date":"2011-09-07T20:23:16.536Z","type":"message"}
{"nick":"bnoordhuis","message":"as in non-versioned","date":"2011-09-07T20:23:22.934Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yes, sure","date":"2011-09-07T20:23:34.211Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: we could rename it to local.gypi.example","date":"2011-09-07T20:23:44.643Z","type":"message"}
{"nick":"piscisaureus","message":"so ppl know what to fill out","date":"2011-09-07T20:23:50.435Z","type":"message"}
{"nick":"bnoordhuis","message":"okay","date":"2011-09-07T20:23:59.210Z","type":"message"}
{"nick":"GitHub27","date":"2011-09-07T20:26:43.810Z","type":"join"}
{"nick":"GitHub27","message":"[phode] none pushed 3 new commits to master: https://github.com/piscisaureus/phode/compare/ec34419...649eb3d","date":"2011-09-07T20:26:43.971Z","type":"message"}
{"nick":"GitHub27","message":"[phode/master] rename module to phode - Ben Noordhuis","date":"2011-09-07T20:26:43.972Z","type":"message"}
{"nick":"GitHub27","message":"[phode/master] implement TCP::close() - Ben Noordhuis","date":"2011-09-07T20:26:43.972Z","type":"message"}
{"nick":"GitHub27","message":"[phode/master] throw exception when method is called on a dead handle - Ben Noordhuis","date":"2011-09-07T20:26:43.972Z","type":"message"}
{"nick":"GitHub27","date":"2011-09-07T20:26:43.972Z","type":"part"}
{"nick":"bnoordhuis","message":"spiffy :)","date":"2011-09-07T20:30:38.298Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: define PHP_INCLUDE_PATH in your local.gypi","date":"2011-09-07T20:32:02.199Z","type":"message"}
{"nick":"piscisaureus","message":"^-- I'd like to use CIA for that but ryah claimed #libuv","date":"2011-09-07T20:32:25.811Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: you left -l../php/Debug_TS/php5ts_debug.lib in phode.gyp","date":"2011-09-07T20:34:26.998Z","type":"message"}
{"nick":"piscisaureus","message":"does that work?","date":"2011-09-07T20:34:29.210Z","type":"message"}
{"nick":"bnoordhuis","message":"it does nothing for me, i don't have to link against anything","date":"2011-09-07T20:34:53.549Z","type":"message"}
{"nick":"piscisaureus","message":"oh hmm nvm","date":"2011-09-07T20:34:54.100Z","type":"message"}
{"nick":"mraleph1","date":"2011-09-07T21:18:52.323Z","type":"join"}
{"nick":"mraleph","reason":"Read error: Connection reset by peer","date":"2011-09-07T21:18:55.893Z","type":"quit"}
{"nick":"phode","date":"2011-09-07T21:23:03.338Z","type":"join"}
{"nick":"phode","message":"[phode] piscisaureus pushed 2 new commits to master: https://github.com/piscisaureus/phode/compare/935f05e...9285c85","date":"2011-09-07T21:23:03.496Z","type":"message"}
{"nick":"phode","message":"[phode/master] Clean up build system files - Bert Belder","date":"2011-09-07T21:23:03.497Z","type":"message"}
{"nick":"phode","message":"[phode/master] Update .gitignore - Bert Belder","date":"2011-09-07T21:23:03.497Z","type":"message"}
{"nick":"phode","date":"2011-09-07T21:23:03.497Z","type":"part"}
{"nick":"phode","date":"2011-09-07T21:24:42.227Z","type":"join"}
{"nick":"phode","message":"[phode] piscisaureus pushed 1 new commit to master: https://github.com/piscisaureus/phode/commit/de821adbe12a74dd993a8cef5c1d49e884292928","date":"2011-09-07T21:24:42.388Z","type":"message"}
{"nick":"phode","message":"[phode/master] Fix NTS build - Bert Belder","date":"2011-09-07T21:24:42.389Z","type":"message"}
{"nick":"phode","date":"2011-09-07T21:24:42.389Z","type":"part"}
{"nick":"bnoordhuis","message":"piscisaureus: NTS or ZTS?","date":"2011-09-07T21:25:07.329Z","type":"message"}
{"nick":"piscisaureus","message":"no NTS == Not thread-safe","date":"2011-09-07T21:25:17.923Z","type":"message"}
{"nick":"piscisaureus","message":"I forgot to define TSRMLS_D_GET when ZTS off","date":"2011-09-07T21:25:39.703Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, so we have to test that too","date":"2011-09-07T21:25:50.340Z","type":"message"}
{"nick":"bnoordhuis","message":"pain!","date":"2011-09-07T21:25:53.071Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: no, let's not test that","date":"2011-09-07T21:26:02.643Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: you broke my build >:(","date":"2011-09-07T21:27:41.816Z","type":"message"}
{"nick":"bnoordhuis","message":"NameError: name 'visibility' is not defined while evaluating condition 'visibility==\"hidden\"' in phode.gyp while trying to load phode.gyp","date":"2011-09-07T21:27:42.483Z","type":"message"}
{"nick":"piscisaureus","message":"gheh","date":"2011-09-07T21:27:48.926Z","type":"message"}
{"nick":"piscisaureus","message":"sorry","date":"2011-09-07T21:27:49.912Z","type":"message"}
{"nick":"piscisaureus","message":"I thought that was needed only for v8","date":"2011-09-07T21:27:54.992Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: restore it in common.gypi","date":"2011-09-07T21:28:19.034Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: x-platform build system setup still painful","date":"2011-09-07T21:28:41.805Z","type":"message"}
{"nick":"phode","date":"2011-09-07T21:29:31.304Z","type":"join"}
{"nick":"phode","message":"[phode] bnoordhuis pushed 1 new commit to master: https://github.com/piscisaureus/phode/commit/9f82424944e5b1a9017182dee8c42ba444d86a7a","date":"2011-09-07T21:29:31.465Z","type":"message"}
{"nick":"phode","message":"[phode/master] build: unbreak build on unix - Ben Noordhuis","date":"2011-09-07T21:29:31.465Z","type":"message"}
{"nick":"phode","date":"2011-09-07T21:29:31.465Z","type":"part"}
{"nick":"bnoordhuis","message":"make that bot post to #node.js :)","date":"2011-09-07T21:29:44.212Z","type":"message"}
{"nick":"piscisaureus","message":"troll bot","date":"2011-09-07T21:29:54.035Z","type":"message"}
{"nick":"piscisaureus","message":"can't do, it'll do only 1 channel","date":"2011-09-07T21:30:03.449Z","type":"message"}
{"nick":"bnoordhuis","message":"aww","date":"2011-09-07T21:30:06.795Z","type":"message"}
{"nick":"piscisaureus","message":"maybe I'm wrong, but I'm not doing it anyway","date":"2011-09-07T21:30:22.856Z","type":"message"}
{"nick":"CIA-52","message":"\u0002node:\u000f \u000303Sean Cunningham\u000f \u000307master\u000f * r\u0002eb99083\u000f \u000310\u000f/ (4 files in 3 dirs)\u0002:\u000f tls: add client-side session resumption support - https://github.com/joyent/node/commit/eb99083d0bbca437e62d0959ca8dd0cb73bb04fa","date":"2011-09-07T21:33:31.525Z","type":"message"}
{"nick":"CIA-52","message":"\u0002node:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u00026387736\u000f \u000310\u000f/ src/node_crypto.cc \u0002:\u000f tls: new[] instead of malloc() in Connection::GetSession() - https://github.com/joyent/node/commit/638773628cf8568025d51fd9582ed11a5866be28","date":"2011-09-07T21:33:31.722Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: should we have a separate class for server and socket?","date":"2011-09-07T21:42:12.567Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: hmm, don't think so","date":"2011-09-07T21:43:56.925Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't see any compelling reason","date":"2011-09-07T21:44:05.618Z","type":"message"}
{"nick":"piscisaureus","message":"ok. time will tell :-)","date":"2011-09-07T21:45:27.929Z","type":"message"}
{"nick":"dmkbot","message":"\u0002joyent/node:\u0002 Kos: Misleading console output for arrays with undefined - https://github.com/joyent/node/issues/1651","date":"2011-09-07T21:52:58.752Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: do you know if Z_STRVAL string are 0-terminated?","date":"2011-09-07T22:03:10.304Z","type":"message"}
{"nick":"mraleph1","reason":"Quit: Leaving.","date":"2011-09-07T22:03:30.841Z","type":"quit"}
{"nick":"bnoordhuis","message":"piscisaureus: they should be","date":"2011-09-07T22:04:08.501Z","type":"message"}
{"nick":"bnoordhuis","message":"but i don't think it's actually illegal","date":"2011-09-07T22:04:30.161Z","type":"message"}
{"nick":"bnoordhuis","message":"(to not be nul terminated, that is)","date":"2011-09-07T22:04:40.472Z","type":"message"}
{"nick":"piscisaureus","message":"hmm","date":"2011-09-07T22:04:44.074Z","type":"message"}
{"nick":"piscisaureus","message":":-(","date":"2011-09-07T22:04:47.743Z","type":"message"}
{"nick":"piscisaureus","message":"I'm gonna assume that they are for the moment","date":"2011-09-07T22:04:57.763Z","type":"message"}
{"nick":"pquerna","message":"bnoordhuis++ // phode","date":"2011-09-07T22:07:21.055Z","type":"message"}
{"nick":"piscisaureus","message":"pquerna: are you serious?","date":"2011-09-07T22:07:32.259Z","type":"message"}
{"nick":"pquerna","message":"yes","date":"2011-09-07T22:07:48.382Z","type":"message"}
{"nick":"pquerna","message":"i was talkig to someone at summercamp about it","date":"2011-09-07T22:08:06.232Z","type":"message"}
{"nick":"pquerna","message":"php is a nice language, baring the massive stdlib, and the zend engine","date":"2011-09-07T22:08:18.528Z","type":"message"}
{"nick":"pquerna","message":"and that OO was BOLTED on the side","date":"2011-09-07T22:08:24.205Z","type":"message"}
{"nick":"pquerna","message":"but otherwise, i like it","date":"2011-09-07T22:08:27.086Z","type":"message"}
{"nick":"piscisaureus","message":"pquerna: hmm.","date":"2011-09-07T22:08:34.608Z","type":"message"}
{"nick":"pquerna","message":"just dislike the massive stdlib :)","date":"2011-09-07T22:08:37.853Z","type":"message"}
{"nick":"piscisaureus","message":"I am not so serious","date":"2011-09-07T22:08:39.613Z","type":"message"}
{"nick":"pquerna","message":"so replace it !","date":"2011-09-07T22:08:40.776Z","type":"message"}
{"nick":"piscisaureus","message":"we just conceived this when we were drunk last thursday","date":"2011-09-07T22:08:57.133Z","type":"message"}
{"nick":"bnoordhuis","message":"^ 'tis true","date":"2011-09-07T22:09:05.774Z","type":"message"}
{"nick":"pquerna","message":"lol","date":"2011-09-07T22:09:07.764Z","type":"message"}
{"nick":"pquerna","message":"well, i might of been drunk when I said it was a good idea too","date":"2011-09-07T22:09:20.258Z","type":"message"}
{"nick":"piscisaureus","message":"hahaha","date":"2011-09-07T22:09:29.979Z","type":"message"}
{"nick":"piscisaureus","message":"pquerna++ :-)","date":"2011-09-07T22:09:32.868Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: Z_STRVALs are nul-terminated, i looked it up","date":"2011-09-07T22:09:59.547Z","type":"message"}
{"nick":"piscisaureus","message":"nice :-)","date":"2011-09-07T22:10:05.200Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I really like libuv actually","date":"2011-09-07T22:10:28.126Z","type":"message"}
{"nick":"piscisaureus","message":"makes this all very easy","date":"2011-09-07T22:10:31.456Z","type":"message"}
{"nick":"piscisaureus","message":"even the alloc_cb is nice - we can just emalloc() our buffers now","date":"2011-09-07T22:10:51.606Z","type":"message"}
{"nick":"piscisaureus","message":"make them a string in the same pass","date":"2011-09-07T22:10:57.046Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: it would be nice if we had a uv_is_listening function","date":"2011-09-07T22:18:59.594Z","type":"message"}
{"nick":"piscisaureus","message":"and a uv_is_connected as well","date":"2011-09-07T22:19:04.519Z","type":"message"}
{"nick":"piscisaureus","message":"uv_is_connection would be better","date":"2011-09-07T22:19:16.613Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: why? client code can track that itself","date":"2011-09-07T22:19:35.534Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yes, but now the client code needs to do it","date":"2011-09-07T22:19:50.298Z","type":"message"}
{"nick":"piscisaureus","message":"and since libuv is tracking it anyway","date":"2011-09-07T22:19:59.718Z","type":"message"}
{"nick":"piscisaureus","message":"we might as well expose that","date":"2011-09-07T22:20:04.021Z","type":"message"}
{"nick":"piscisaureus","message":"I mean we also have uv_is_active for timers and the like - the client could track that too","date":"2011-09-07T22:20:27.824Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: good point","date":"2011-09-07T22:20:41.443Z","type":"message"}
{"nick":"bnoordhuis","action":"removes uv_is_active","date":"2011-09-07T22:20:45.814Z","type":"action"}
{"nick":"bnoordhuis","message":"i suppose you have a point, piscisaureus","date":"2011-09-07T22:21:24.226Z","type":"message"}
{"nick":"bnoordhuis","message":"but we don't need it right now","date":"2011-09-07T22:21:32.288Z","type":"message"}
{"nick":"piscisaureus","message":"s/we/you/ :-)","date":"2011-09-07T22:21:44.762Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: the only reason that I'm not adding it right now is that I don't feel like upgrading libuv","date":"2011-09-07T22:22:59.200Z","type":"message"}
{"nick":"bnoordhuis","message":"the thing is that i like to wait with adding convenience functions until the api has matured","date":"2011-09-07T22:24:52.498Z","type":"message"}
{"nick":"bnoordhuis","message":"and the internals, for that matter","date":"2011-09-07T22:25:02.047Z","type":"message"}
{"nick":"piscisaureus","message":"yeah, makes sense","date":"2011-09-07T22:25:04.362Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: how do I construct a new TCP object from c?","date":"2011-09-07T22:25:43.894Z","type":"message"}
{"nick":"piscisaureus","message":"I mean, tcp_new doesn't return a zval","date":"2011-09-07T22:25:52.586Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: my first guestion is: why would you want to do that? :)","date":"2011-09-07T22:26:05.961Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: accepting connections","date":"2011-09-07T22:26:13.367Z","type":"message"}
{"nick":"piscisaureus","message":"I need to construct a new TCP object from the connection_cb","date":"2011-09-07T22:26:23.638Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: 1 sec, let me look it up - it's something like zend_new_object","date":"2011-09-07T22:27:14.624Z","type":"message"}
{"nick":"dmkbot","message":"\u0002joyent/node:\u0002 nzakas: stdout not flushed upon exit with output redirect - https://github.com/joyent/node/issues/1669","date":"2011-09-07T22:32:58.774Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: sorry, don't know","date":"2011-09-07T22:33:35.771Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: okay, no problem","date":"2011-09-07T22:34:17.279Z","type":"message"}
{"nick":"indutny","reason":"Read error: Connection reset by peer","date":"2011-09-07T22:35:01.806Z","type":"quit"}
{"nick":"bnoordhuis","message":"piscisaureus: oh wait","date":"2011-09-07T22:35:45.540Z","type":"message"}
{"nick":"bnoordhuis","message":"tcp_wrap->obj is a zvalue_value","date":"2011-09-07T22:36:14.149Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, but a zvalue_value is not a complete zval :/","date":"2011-09-07T22:36:41.393Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: i haven't tried it but you should be able to turn tcp_wrap->obj in a zval","date":"2011-09-07T22:39:04.544Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: and for completeness sake, Z_OBJVAL(tcp_wrap->obj) returns the object you can pass to zend_object_std_init()","date":"2011-09-07T22:40:38.063Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: question: why does uv_tcp_write() want a uv_loop_t? it knows what loop the handle belongs to right?","date":"2011-09-07T22:48:36.947Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: uv_tcp_write is internal","date":"2011-09-07T22:48:50.574Z","type":"message"}
{"nick":"bnoordhuis","message":"err, nm :)","date":"2011-09-07T22:49:07.171Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: in uv_win we shuffle the loop arg around on the stack","date":"2011-09-07T22:49:08.246Z","type":"message"}
{"nick":"indutny","date":"2011-09-07T23:05:29.479Z","type":"join"}
{"nick":"piscisaureus","message":"bnoordhuis: can you help me out with c?","date":"2011-09-07T23:24:18.817Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: sure, what's the problem?","date":"2011-09-07T23:24:31.269Z","type":"message"}
{"nick":"piscisaureus","message":"zval* args[1]; args[0] = foo; do_something_with_zval***(&args) <- doesn't work","date":"2011-09-07T23:25:14.228Z","type":"message"}
{"nick":"piscisaureus","message":"\u0003zval** args; args = &foo; do_something_with_zval***(&args) <- works\u0003","date":"2011-09-07T23:25:14.387Z","type":"message"}
{"nick":"piscisaureus","message":"what am I doing wrong?","date":"2011-09-07T23:25:24.676Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: ^","date":"2011-09-07T23:25:59.370Z","type":"message"}
{"nick":"bnoordhuis","message":"do_something_with_zval takes a pointer to ***zval?","date":"2011-09-07T23:26:14.069Z","type":"message"}
{"nick":"piscisaureus","message":"yes","date":"2011-09-07T23:26:19.540Z","type":"message"}
{"nick":"bnoordhuis","message":"it depends on what do_something_with_zval does","date":"2011-09-07T23:27:38.698Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: just pass the pointer to zval** along","date":"2011-09-07T23:27:56.883Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I can get it to compile","date":"2011-09-07T23:28:03.611Z","type":"message"}
{"nick":"bnoordhuis","message":"without warnings?","date":"2011-09-07T23:28:10.568Z","type":"message"}
{"nick":"piscisaureus","message":"but it seems to be semantically different","date":"2011-09-07T23:28:11.772Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2011-09-07T23:28:51.001Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: 2>src\\ext.c(316): warning C4047: 'function' : 'zval ***' differs in levels of indirection from 'zval *(*)[1]'","date":"2011-09-07T23:29:02.185Z","type":"message"}
{"nick":"bnoordhuis","message":"overzealous compiler","date":"2011-09-07T23:29:40.546Z","type":"message"}
{"nick":"bnoordhuis","message":"the array decays into a pointer","date":"2011-09-07T23:29:50.439Z","type":"message"}
{"nick":"bnoordhuis","message":"a pointer to ***zval, that is","date":"2011-09-07T23:30:18.515Z","type":"message"}
{"nick":"bnoordhuis","message":"what kind of function is it anyway?","date":"2011-09-07T23:30:25.437Z","type":"message"}
{"nick":"piscisaureus","message":"call_callback","date":"2011-09-07T23:30:34.341Z","type":"message"}
{"nick":"piscisaureus","message":"it sets function_call_info.params","date":"2011-09-07T23:30:50.922Z","type":"message"}
{"nick":"piscisaureus","message":"which has type zval***","date":"2011-09-07T23:30:57.564Z","type":"message"}
{"nick":"piscisaureus","message":"iow, a pointer to an array of zval pointers","date":"2011-09-07T23:31:14.237Z","type":"message"}
{"nick":"bnoordhuis","message":"right, i see what you mean","date":"2011-09-07T23:33:13.034Z","type":"message"}
{"nick":"bnoordhuis","message":"though i don't quite understand why it has to be zval***","date":"2011-09-07T23:33:36.398Z","type":"message"}
{"nick":"piscisaureus","message":"me neither","date":"2011-09-07T23:34:08.311Z","type":"message"}
{"nick":"bnoordhuis","message":"but zval*[1] == zval**","date":"2011-09-07T23:34:50.071Z","type":"message"}
{"nick":"piscisaureus","message":"yeah, sure","date":"2011-09-07T23:34:58.438Z","type":"message"}
{"nick":"piscisaureus","message":"that's why I am surprised","date":"2011-09-07T23:35:26.296Z","type":"message"}
{"nick":"piscisaureus","message":"it's also in debug mode, it shouldn't do any optimization","date":"2011-09-07T23:35:41.695Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: maybe it creates only a pointer to zval[1] on the stack","date":"2011-09-07T23:36:47.923Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, that's another thing","date":"2011-09-07T23:37:35.711Z","type":"message"}
{"nick":"bnoordhuis","message":"if that function_call_info.params thing lives longer than the call_callback function","date":"2011-09-07T23:38:02.747Z","type":"message"}
{"nick":"piscisaureus","message":"doesn't","date":"2011-09-07T23:38:09.237Z","type":"message"}
{"nick":"piscisaureus","message":"pretty sure","date":"2011-09-07T23:38:14.998Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, no problem there then","date":"2011-09-07T23:38:16.878Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: zval (*args)[1]; <- maybe that","date":"2011-09-07T23:38:47.808Z","type":"message"}
{"nick":"piscisaureus","message":"problem: args[0] = zval_ptr then gives me \"lvalue not modifiable\"","date":"2011-09-07T23:39:09.956Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: https://gist.github.com/2e18f5b0b7b7b7b01f1e <- what does your compiler say about that?","date":"2011-09-07T23:40:47.916Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: nothing, it is happy with that","date":"2011-09-07T23:41:35.664Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: hmm, weird","date":"2011-09-07T23:42:59.765Z","type":"message"}
{"nick":"bnoordhuis","message":"can you send over your code?","date":"2011-09-07T23:43:11.464Z","type":"message"}
{"nick":"bnoordhuis","message":"make a branch or something","date":"2011-09-07T23:43:17.765Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: just a sec","date":"2011-09-07T23:44:01.470Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, i know what your compiler is complaining about","date":"2011-09-07T23:47:25.363Z","type":"message"}
{"nick":"phode","date":"2011-09-07T23:48:15.344Z","type":"join"}
{"nick":"phode","message":"[phode] piscisaureus pushed 1 new commit to master: https://github.com/piscisaureus/phode/commit/843799d12f4eab33bccc456868003eda52cbe26f","date":"2011-09-07T23:48:15.508Z","type":"message"}
{"nick":"phode","message":"[phode/master] work on tcp->listen() - Bert Belder","date":"2011-09-07T23:48:15.508Z","type":"message"}
{"nick":"phode","date":"2011-09-07T23:48:15.508Z","type":"part"}
{"nick":"bnoordhuis","message":"that function wants zval***, a mutable pointer to zval**, but &(zval*[1]) is not that","date":"2011-09-07T23:48:16.487Z","type":"message"}
{"nick":"piscisaureus","message":"ah :-)","date":"2011-09-07T23:48:35.632Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: the offending piece: https://github.com/piscisaureus/phode/blob/843799d12f4eab33bccc456868003eda52cbe26f/src/ext.c#L314-316","date":"2011-09-07T23:49:26.598Z","type":"message"}
{"nick":"ryah","message":"hey","date":"2011-09-07T23:49:38.658Z","type":"message"}
{"nick":"piscisaureus","message":"hey ryah","date":"2011-09-07T23:49:52.519Z","type":"message"}
{"nick":"piscisaureus","message":"how are you?","date":"2011-09-07T23:49:56.158Z","type":"message"}
{"nick":"ryah","message":"good - tired","date":"2011-09-07T23:50:05.899Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: zval* args[1]; args[0] = &foo; zval** argp = &args;  do_something_with_zval(&argp);","date":"2011-09-07T23:50:45.767Z","type":"message"}
{"nick":"bnoordhuis","message":"that's what you want","date":"2011-09-07T23:50:53.304Z","type":"message"}
{"nick":"piscisaureus","message":"ok let me try","date":"2011-09-07T23:51:07.923Z","type":"message"}
{"nick":"ryah","message":"phode?","date":"2011-09-07T23:51:12.470Z","type":"message"}
{"nick":"bnoordhuis","message":"it's all the rage!","date":"2011-09-07T23:51:20.165Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yes, I can curl it now","date":"2011-09-07T23:53:28.931Z","type":"message"}
{"nick":"phode","date":"2011-09-07T23:53:34.578Z","type":"join"}
{"nick":"phode","message":"[phode] piscisaureus pushed 1 new commit to master: https://github.com/piscisaureus/phode/commit/4e4accd21d93981ad068b4cdbf8d7f06db082d58","date":"2011-09-07T23:53:34.734Z","type":"message"}
{"nick":"phode","message":"[phode/master] bnoordhuis' arg fix - Bert Belder","date":"2011-09-07T23:53:34.734Z","type":"message"}
{"nick":"phode","date":"2011-09-07T23:53:34.734Z","type":"part"}
{"nick":"piscisaureus","message":"bnoordhuis: no eventemitter yet tho","date":"2011-09-07T23:53:35.397Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: sorry, got side-tracked by my day job :)","date":"2011-09-07T23:54:15.786Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yes, I bet","date":"2011-09-07T23:54:27.101Z","type":"message"}
{"nick":"piscisaureus","message":"I am quitting this too","date":"2011-09-07T23:54:34.628Z","type":"message"}
{"nick":"piscisaureus","message":"now ryah is back we gtg back to $work","date":"2011-09-07T23:54:43.753Z","type":"message"}
{"nick":"bnoordhuis","message":"play time is over :(","date":"2011-09-07T23:54:58.701Z","type":"message"}
{"nick":"ryah","message":"git hub looks all different","date":"2011-09-07T23:56:23.576Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: huh? what are you talking about?","date":"2011-09-07T23:56:37.866Z","type":"message"}
{"nick":"ryah","message":"so much changed since ive been gone","date":"2011-09-07T23:56:40.625Z","type":"message"}
{"nick":"ryah","message":"https://github.com/joyent/node/commits/master","date":"2011-09-07T23:56:43.371Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: nothing changed","date":"2011-09-07T23:56:44.818Z","type":"message"}
{"nick":"piscisaureus","message":"it must be you!","date":"2011-09-07T23:56:51.016Z","type":"message"}
{"nick":"piscisaureus","message":"omg ryah is ill","date":"2011-09-07T23:56:54.706Z","type":"message"}
{"nick":"bnoordhuis","message":"so...","date":"2011-09-07T23:57:23.477Z","type":"message"}
{"nick":"bnoordhuis","message":"how was nodeconf, ryah?","date":"2011-09-07T23:57:28.277Z","type":"message"}
{"nick":"ryah","message":"it was fun - i met igor","date":"2011-09-07T23:57:37.199Z","type":"message"}
{"nick":"bnoordhuis","message":"how's igor in real life?","date":"2011-09-07T23:57:46.934Z","type":"message"}
{"nick":"ryah","message":"i got wildly drunk, made a fool of myself, etc. the usual.","date":"2011-09-07T23:58:01.357Z","type":"message"}
{"nick":"bnoordhuis","message":"all in a day's work","date":"2011-09-07T23:58:13.127Z","type":"message"}
{"nick":"ryah","message":"igor is very nice and looks exactly like he sounds","date":"2011-09-07T23:58:36.888Z","type":"message"}
{"nick":"piscisaureus","message":"hmm","date":"2011-09-07T23:58:59.125Z","type":"message"}
{"nick":"piscisaureus","message":"No particular picture comes to mind","date":"2011-09-07T23:59:14.175Z","type":"message"}
