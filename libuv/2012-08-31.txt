{"nick":"piscisaureus_","message":"yeah, that's odd","date":"2012-08-31T00:01:24.990Z","type":"message"}
{"nick":"mjr_","message":"I fear this memory thing is a smartos specific issue, but something about crypto seems to trigger it.","date":"2012-08-31T00:01:56.044Z","type":"message"}
{"nick":"piscisaureus_","message":"I wonder when node allocates 100000","date":"2012-08-31T00:02:09.663Z","type":"message"}
{"nick":"piscisaureus_","message":"it looks nonrandom but it's a weird number of bytes to allocate","date":"2012-08-31T00:02:26.148Z","type":"message"}
{"nick":"mjr_","message":"And also a very common pattern.","date":"2012-08-31T00:02:46.285Z","type":"message"}
{"nick":"TheJH","reason":"Ping timeout: 248 seconds","date":"2012-08-31T00:03:25.225Z","type":"quit"}
{"nick":"piscisaureus_","message":"ah wait, this is the allocation of a new slab","date":"2012-08-31T00:03:28.292Z","type":"message"}
{"nick":"mjr_","message":"For the processes doing a lot of crypto, this crash happens as soon as a few minutes after starting.","date":"2012-08-31T00:04:02.189Z","type":"message"}
{"nick":"piscisaureus_","message":"ah right","date":"2012-08-31T00:04:41.122Z","type":"message"}
{"nick":"piscisaureus_","message":"this number is in hex","date":"2012-08-31T00:04:45.741Z","type":"message"}
{"nick":"piscisaureus_","message":"it's 1MB","date":"2012-08-31T00:04:48.297Z","type":"message"}
{"nick":"piscisaureus_","message":"which is the default size for slabs","date":"2012-08-31T00:04:59.810Z","type":"message"}
{"nick":"piscisaureus_","message":"mjr_: I don't see any crypto-related stuff in the stacks","date":"2012-08-31T00:05:55.018Z","type":"message"}
{"nick":"piscisaureus_","message":"mjr_: this looks like an ordinary read from a tcp socket or pipe","date":"2012-08-31T00:06:15.410Z","type":"message"}
{"nick":"mjr_","message":"piscisaureus_: that's actually encouraging, because nobody seems to know how to fix problems with crypto. :)","date":"2012-08-31T00:07:34.132Z","type":"message"}
{"nick":"piscisaureus_","message":"mjr_: actually, it's not unlikely that this is an ordinary OOM situation","date":"2012-08-31T00:08:02.823Z","type":"message"}
{"nick":"piscisaureus_","message":"mjr_: this is an x86 machine. I don't know about smartos, but on many OSes the maximum virtual address space that a process can use is 2gb or 3gb","date":"2012-08-31T00:08:58.902Z","type":"message"}
{"nick":"piscisaureus_","message":"somewhere around that","date":"2012-08-31T00:09:02.465Z","type":"message"}
{"nick":"piscisaureus_","message":"now if the heap is using 115617792 bytes","date":"2012-08-31T00:09:10.262Z","type":"message"}
{"nick":"mjr_","message":"Heap is at 400MB","date":"2012-08-31T00:09:15.978Z","type":"message"}
{"nick":"piscisaureus_","message":"which heap are we talking about?","date":"2012-08-31T00:09:27.460Z","type":"message"}
{"nick":"mjr_","message":"The process heap.","date":"2012-08-31T00:10:00.922Z","type":"message"}
{"nick":"piscisaureus_","message":"mjr_: ok. So how much is the v8 heap using?","date":"2012-08-31T00:10:29.901Z","type":"message"}
{"nick":"mjr_","message":"Not sure.  I don't think very much.","date":"2012-08-31T00:10:44.582Z","type":"message"}
{"nick":"piscisaureus_","message":"right","date":"2012-08-31T00:12:29.011Z","type":"message"}
{"nick":"piscisaureus_","message":"mjr_: hmm, well, then out-of-memory seems to be unlikely","date":"2012-08-31T00:12:43.797Z","type":"message"}
{"nick":"piscisaureus_","message":"mjr_: do you happen to know how much virtual memory was allocated when the process crashed?","date":"2012-08-31T00:13:01.474Z","type":"message"}
{"nick":"piscisaureus_","message":"mjr_: but I can tell you for sure that these stacks don't suggest it has anything to do with crypto","date":"2012-08-31T00:13:20.873Z","type":"message"}
{"nick":"mjr_","message":"I do not.  I think I have a graph of process RSS, and the V8 sizes.  Hang on","date":"2012-08-31T00:13:27.041Z","type":"message"}
{"nick":"piscisaureus_","message":"vm is also not very interesting usually","date":"2012-08-31T00:13:50.507Z","type":"message"}
{"nick":"piscisaureus_","message":"but is is when you are investigating a malloc() failure on x86 :-)","date":"2012-08-31T00:14:04.431Z","type":"message"}
{"nick":"mjr_","message":"heapUsed is 40MB, heapTotal is 57MB","date":"2012-08-31T00:14:48.235Z","type":"message"}
{"nick":"DrPizza","message":"there's also the hairy old fragmentation issue","date":"2012-08-31T00:14:55.055Z","type":"message"}
{"nick":"mjr_","message":"So V8 thinks the heap is small.","date":"2012-08-31T00:15:00.281Z","type":"message"}
{"nick":"DrPizza","message":"how long have these processes been running?","date":"2012-08-31T00:15:00.521Z","type":"message"}
{"nick":"mjr_","message":"10 mins or so","date":"2012-08-31T00:15:06.345Z","type":"message"}
{"nick":"DrPizza","message":"so unlikely to be that","date":"2012-08-31T00:15:14.634Z","type":"message"}
{"nick":"mjr_","message":"DrPizza: I think this is a fragmentation problem, honestly.","date":"2012-08-31T00:15:19.729Z","type":"message"}
{"nick":"piscisaureus_","message":"well","date":"2012-08-31T00:15:26.942Z","type":"message"}
{"nick":"piscisaureus_","message":"it's the only thing I can think of for sure","date":"2012-08-31T00:15:37.961Z","type":"message"}
{"nick":"piscisaureus_","message":"but when you're using, say, 600mb of memory it would be really sad if your heap was fragmented so much","date":"2012-08-31T00:16:07.213Z","type":"message"}
{"nick":"piscisaureus_","message":"unlikely i'd say","date":"2012-08-31T00:16:13.278Z","type":"message"}
{"nick":"piscisaureus_","message":"maybe there's something peculiar about libumem","date":"2012-08-31T00:16:29.970Z","type":"message"}
{"nick":"piscisaureus_","message":"did you try without?","date":"2012-08-31T00:16:41.782Z","type":"message"}
{"nick":"DrPizza","message":"what is libumem?","date":"2012-08-31T00:16:56.165Z","type":"message"}
{"nick":"mjr_","message":"I think the fancy SmartOS libumem stats on that gist indicate that we only really have 100MB in use, but we've claimed 400MB from the OS.","date":"2012-08-31T00:17:02.303Z","type":"message"}
{"nick":"mjr_","message":"DrPizza: libumem is the SmartOS fancy allocator that is \"better\" than the one in libc.","date":"2012-08-31T00:17:23.725Z","type":"message"}
{"nick":"DrPizza","message":"better i.e. less tested?","date":"2012-08-31T00:17:37.234Z","type":"message"}
{"nick":"piscisaureus_","message":"I think it's quite old actually","date":"2012-08-31T00:17:44.959Z","type":"message"}
{"nick":"piscisaureus_","message":"from the solaris 9 daus","date":"2012-08-31T00:17:47.868Z","type":"message"}
{"nick":"piscisaureus_","message":"*days","date":"2012-08-31T00:17:49.562Z","type":"message"}
{"nick":"piscisaureus_","message":"but you want to ask bcantrill to be sure :-)","date":"2012-08-31T00:17:59.345Z","type":"message"}
{"nick":"mjr_","message":"Yeah, still waiting to get a slice of his time to look at this.","date":"2012-08-31T00:19:21.729Z","type":"message"}
{"nick":"mjr_","message":"I can't tell whether this is a SmartOS thing or not.  Certainly the SmartOS tools make it possible to understand problems like this in great detail.","date":"2012-08-31T00:19:42.774Z","type":"message"}
{"nick":"piscisaureus_","message":"well you can try to not use libumem :-)","date":"2012-08-31T00:19:56.741Z","type":"message"}
{"nick":"piscisaureus_","message":"if crashes within the our are common, you should know quickly enough","date":"2012-08-31T00:20:13.629Z","type":"message"}
{"nick":"piscisaureus_","message":"libumem is just something you load with LD_PRELOAD right?","date":"2012-08-31T00:20:28.519Z","type":"message"}
{"nick":"piscisaureus_","message":"s/our/hour/","date":"2012-08-31T00:20:42.588Z","type":"message"}
{"nick":"mjr_","message":"Yeah, but I think the node 0.8 build uses libumem explicitly now.","date":"2012-08-31T00:21:46.545Z","type":"message"}
{"nick":"piscisaureus_","message":"that's easy to fix","date":"2012-08-31T00:23:12.297Z","type":"message"}
{"nick":"piscisaureus_","message":"git revert f70b138","date":"2012-08-31T00:23:15.445Z","type":"message"}
{"nick":"mjr_","message":"That is worth a try","date":"2012-08-31T00:26:01.697Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2012-08-31T00:47:58.724Z","type":"quit"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-08-31T00:48:47.375Z","type":"quit"}
{"nick":"dap","date":"2012-08-31T00:49:11.727Z","type":"join"}
{"nick":"mmalecki[busy]","message":"mjr_: you guys ran into the ENOMEM stuff too?","date":"2012-08-31T00:50:25.361Z","type":"message"}
{"nick":"mmalecki[busy]","new_nick":"mmalecki","date":"2012-08-31T00:50:41.759Z","type":"nick"}
{"nick":"mjr_","message":"mmalecki[busy]: it has a different name on SmartOS, but I think so.","date":"2012-08-31T00:50:51.883Z","type":"message"}
{"nick":"mjr_","message":"What do you guys see?","date":"2012-08-31T00:50:54.490Z","type":"message"}
{"nick":"mmalecki","message":"mjr_: npm throwing ENOMEM/we were unable to spawn a child process because it threw ENOMEM","date":"2012-08-31T00:51:27.520Z","type":"message"}
{"nick":"mmalecki","message":"also, it was SmartOS","date":"2012-08-31T00:51:36.676Z","type":"message"}
{"nick":"mmalecki","message":"we were certain it's our fault somehow.","date":"2012-08-31T00:51:47.399Z","type":"message"}
{"nick":"mjr_","message":"huh","date":"2012-08-31T00:51:59.392Z","type":"message"}
{"nick":"mjr_","message":"Only on 0.8?","date":"2012-08-31T00:52:07.031Z","type":"message"}
{"nick":"mjr_","message":"We don't get this if we revert back to 0.6","date":"2012-08-31T00:52:12.199Z","type":"message"}
{"nick":"mcavage","reason":"Remote host closed the connection","date":"2012-08-31T00:52:13.957Z","type":"quit"}
{"nick":"mmalecki","message":"we only run 0.8 in production as the host environment","date":"2012-08-31T00:52:25.131Z","type":"message"}
{"nick":"mmalecki","message":"we could try reverting to 0.6 on staging tho.","date":"2012-08-31T00:52:50.355Z","type":"message"}
{"nick":"mmalecki","message":"AvianFlu: ^ opinion?","date":"2012-08-31T00:52:55.376Z","type":"message"}
{"nick":"mjr_","message":"How often do you get it?","date":"2012-08-31T00:53:12.891Z","type":"message"}
{"nick":"mmalecki","message":"AvianFlu: also, don't really trust me. I'm in a certain state.","date":"2012-08-31T00:53:18.321Z","type":"message"}
{"nick":"mmalecki","message":"mjr_: pretty rarely, but often in cases when we should have at least few megs of mem left.","date":"2012-08-31T00:53:48.658Z","type":"message"}
{"nick":"mjr_","message":"Hmm","date":"2012-08-31T00:53:54.685Z","type":"message"}
{"nick":"mmalecki","message":"mjr_: in what cases do you get it?","date":"2012-08-31T00:54:03.743Z","type":"message"}
{"nick":"mjr_","message":"In our case, we have thousands of megs legs.","date":"2012-08-31T00:54:05.176Z","type":"message"}
{"nick":"mjr_","message":"left","date":"2012-08-31T00:54:08.111Z","type":"message"}
{"nick":"TooTallNate","reason":"*.net *.split","date":"2012-08-31T00:54:14.435Z","type":"quit"}
{"nick":"chobi_e_","reason":"*.net *.split","date":"2012-08-31T00:54:14.674Z","type":"quit"}
{"nick":"mmalecki","message":"mjr_: yeah, we run 256 MB hosts in production","date":"2012-08-31T00:54:27.426Z","type":"message"}
{"nick":"mjr_","message":"On our processes with lots of HTTPS, we get it after a small number of minutes.","date":"2012-08-31T00:54:29.179Z","type":"message"}
{"nick":"mmalecki","message":"so, that's quite a difference. but yeah, seems kind of similar, actually.","date":"2012-08-31T00:54:56.059Z","type":"message"}
{"nick":"mjr_","message":"If you don't get this when reverting back to 0.6, that would be very useful information","date":"2012-08-31T00:55:20.354Z","type":"message"}
{"nick":"mmalecki","message":"I can give it a try when I'm not in a certain state","date":"2012-08-31T00:55:41.434Z","type":"message"}
{"nick":"mmalecki","message":"actually, fuck it, I'm drunk.","date":"2012-08-31T00:56:17.861Z","type":"message"}
{"nick":"mmalecki","message":"well, not *that* bad, but the night is young.","date":"2012-08-31T00:56:34.367Z","type":"message"}
{"nick":"TooTallNate","date":"2012-08-31T00:58:48.915Z","type":"join"}
{"nick":"mmalecki","message":"dang man, I'm depressed","date":"2012-08-31T01:00:41.345Z","type":"message"}
{"nick":"piscisaureus_","message":"sounds unhealthy mmalecki","date":"2012-08-31T01:01:20.862Z","type":"message"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2012-08-31T01:01:57.815Z","type":"quit"}
{"nick":"mmalecki","message":"it probably does.","date":"2012-08-31T01:02:12.664Z","type":"message"}
{"nick":"mmalecki","message":"well.","date":"2012-08-31T01:03:04.120Z","type":"message"}
{"nick":"mmalecki","message":"whatever, really","date":"2012-08-31T01:03:09.226Z","type":"message"}
{"nick":"mmalecki","message":"shots!","date":"2012-08-31T01:03:11.106Z","type":"message"}
{"nick":"DrPizza","message":"hah","date":"2012-08-31T01:04:01.242Z","type":"message"}
{"nick":"DrPizza","message":"hrm","date":"2012-08-31T01:04:03.585Z","type":"message"}
{"nick":"DrPizza","message":"I need to figure out a reason to go to san francisco","date":"2012-08-31T01:04:10.826Z","type":"message"}
{"nick":"DrPizza","message":"I need to feast on burritos","date":"2012-08-31T01:04:15.247Z","type":"message"}
{"nick":"piscisaureus_","message":"I don't like the amount of ip chatter involved with a hello/100 requests","date":"2012-08-31T01:05:15.635Z","type":"message"}
{"nick":"piscisaureus_","message":"And I also need to find myself an excuse to go to SF","date":"2012-08-31T01:05:28.987Z","type":"message"}
{"nick":"mmalecki","message":"I'll be in SF in December","date":"2012-08-31T01:07:42.154Z","type":"message"}
{"nick":"tomshreds","date":"2012-08-31T01:09:44.574Z","type":"join"}
{"nick":"mmalecki","message":"well, I'm drinking in front of a mirror","date":"2012-08-31T01:10:56.438Z","type":"message"}
{"nick":"mmalecki","reason":"Quit: Reconnecting","date":"2012-08-31T01:12:42.490Z","type":"quit"}
{"nick":"mmalecki","date":"2012-08-31T01:13:00.239Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: hey, yt?","date":"2012-08-31T01:29:25.557Z","type":"message"}
{"nick":"piscisaureus^","date":"2012-08-31T01:35:29.393Z","type":"join"}
{"nick":"joshthecoder","reason":"Quit: Leaving...","date":"2012-08-31T01:43:18.624Z","type":"quit"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2012-08-31T01:46:53.796Z","type":"quit"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-08-31T01:47:36.526Z","type":"quit"}
{"nick":"mmalecki","reason":"Ping timeout: 272 seconds","date":"2012-08-31T01:48:49.231Z","type":"quit"}
{"nick":"piscisaureus^","reason":"Quit: leaving","date":"2012-08-31T01:53:15.008Z","type":"quit"}
{"nick":"abraxas","date":"2012-08-31T01:55:38.097Z","type":"join"}
{"nick":"erickt","date":"2012-08-31T01:56:38.579Z","type":"join"}
{"nick":"erickt","reason":"Client Quit","date":"2012-08-31T01:59:12.204Z","type":"quit"}
{"nick":"tomshreds","reason":"Quit: Linkinus - http://linkinus.com","date":"2012-08-31T02:02:15.087Z","type":"quit"}
{"nick":"bnoordhuis","message":"piscisaureus_: yep","date":"2012-08-31T02:03:01.649Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: ok, just checkin'","date":"2012-08-31T02:03:31.567Z","type":"message"}
{"nick":"pooya","reason":"Quit: pooya","date":"2012-08-31T02:08:40.425Z","type":"quit"}
{"nick":"bnoordhuis","message":"it's a sad fact but it seems level triggered epoll is faster than edge triggered epoll...","date":"2012-08-31T02:10:46.915Z","type":"message"}
{"nick":"bnoordhuis","message":"probably because everyone is using level triggered i/o so it's seen more optimization","date":"2012-08-31T02:11:10.354Z","type":"message"}
{"nick":"bnoordhuis","message":"still, it's sad","date":"2012-08-31T02:11:20.225Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: any reasons beyond these contention issues","date":"2012-08-31T02:11:22.037Z","type":"message"}
{"nick":"piscisaureus_","message":"yes","date":"2012-08-31T02:11:23.408Z","type":"message"}
{"nick":"bnoordhuis","message":"bnoordhuis: it's lock contention","date":"2012-08-31T02:14:24.830Z","type":"message"}
{"nick":"bnoordhuis","message":"i could shave off a few more cycles here and there","date":"2012-08-31T02:14:35.543Z","type":"message"}
{"nick":"bnoordhuis","message":"but that won't save it","date":"2012-08-31T02:14:40.685Z","type":"message"}
{"nick":"bnoordhuis","message":"err, piscisaureus_ ","date":"2012-08-31T02:15:06.068Z","type":"message"}
{"nick":"bnoordhuis","action":"is getting tired","date":"2012-08-31T02:15:10.957Z","type":"action"}
{"nick":"piscisaureus_","message":"ya","date":"2012-08-31T02:15:21.985Z","type":"message"}
{"nick":"piscisaureus_","message":"too bad","date":"2012-08-31T02:15:31.310Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: send some kernel patches :-p","date":"2012-08-31T02:15:42.064Z","type":"message"}
{"nick":"piscisaureus_","message":"(kidding)","date":"2012-08-31T02:15:50.339Z","type":"message"}
{"nick":"piscisisaureus^","date":"2012-08-31T02:17:50.274Z","type":"join"}
{"nick":"bnoordhuis","message":"well... it's something that should be addressed","date":"2012-08-31T02:17:50.517Z","type":"message"}
{"nick":"piscisisaureus^","new_nick":"piscisaureus^","date":"2012-08-31T02:18:03.811Z","type":"nick"}
{"nick":"piscisaureus^","message":"I agree","date":"2012-08-31T02:18:34.586Z","type":"message"}
{"nick":"piscisaureus^","message":"nothing but disappointment these days","date":"2012-08-31T02:18:47.503Z","type":"message"}
{"nick":"piscisaureus^","message":"http.sys rules node","date":"2012-08-31T02:18:55.854Z","type":"message"}
{"nick":"piscisaureus^","message":"level triggered rules edge triggered","date":"2012-08-31T02:19:10.090Z","type":"message"}
{"nick":"piscisaureus^","message":"I sort of like this crappy chromebook btw - it feels like a permanent distraction-free mode","date":"2012-08-31T02:19:55.891Z","type":"message"}
{"nick":"bnoordhuis","message":"how so? no solitaire?","date":"2012-08-31T02:20:30.744Z","type":"message"}
{"nick":"piscisaureus^","message":"bnoordhuis: no mail, no twitter app","date":"2012-08-31T02:20:56.470Z","type":"message"}
{"nick":"piscisaureus^","message":"no work","date":"2012-08-31T02:21:02.427Z","type":"message"}
{"nick":"bnoordhuis","message":"2 out of 3, eh?","date":"2012-08-31T02:21:45.822Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, i'm off to bed","date":"2012-08-31T02:21:48.989Z","type":"message"}
{"nick":"bnoordhuis","message":"sleep tight, bertje","date":"2012-08-31T02:21:52.221Z","type":"message"}
{"nick":"piscisaureus^","message":"sleep tight bnoordhuis ","date":"2012-08-31T02:21:58.146Z","type":"message"}
{"nick":"brson","reason":"Ping timeout: 245 seconds","date":"2012-08-31T02:23:59.507Z","type":"quit"}
{"nick":"ArmyOfBruce","reason":"Excess Flood","date":"2012-08-31T02:25:19.331Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2012-08-31T02:25:22.061Z","type":"quit"}
{"nick":"ArmyOfBruce","date":"2012-08-31T02:25:52.036Z","type":"join"}
{"nick":"TooTallNate","date":"2012-08-31T02:26:01.241Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2012-08-31T02:26:50.300Z","type":"quit"}
{"nick":"TooTallNate","reason":"Client Quit","date":"2012-08-31T02:28:48.598Z","type":"quit"}
{"nick":"pooya","date":"2012-08-31T02:59:35.323Z","type":"join"}
{"nick":"loladiro","date":"2012-08-31T03:00:45.392Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 240 seconds","date":"2012-08-31T03:24:43.110Z","type":"quit"}
{"nick":"chobi_e_","date":"2012-08-31T03:25:30.942Z","type":"join"}
{"nick":"chobi_e_","reason":"Ping timeout: 256 seconds","date":"2012-08-31T03:30:27.638Z","type":"quit"}
{"nick":"erickt","date":"2012-08-31T03:40:35.777Z","type":"join"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-08-31T03:42:01.740Z","type":"quit"}
{"nick":"chobi_e_","date":"2012-08-31T03:50:01.241Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-08-31T04:15:27.937Z","type":"quit"}
{"nick":"piscisaureus^","reason":"Read error: Operation timed out","date":"2012-08-31T04:15:53.595Z","type":"quit"}
{"nick":"loladiro","date":"2012-08-31T04:16:56.230Z","type":"join"}
{"nick":"piscisaureus^","date":"2012-08-31T04:47:33.340Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-08-31T04:49:55.633Z","type":"quit"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-08-31T05:06:14.641Z","type":"quit"}
{"nick":"ibobrik","date":"2012-08-31T05:40:48.272Z","type":"join"}
{"nick":"toothrot","reason":"Ping timeout: 265 seconds","date":"2012-08-31T05:52:56.141Z","type":"quit"}
{"nick":"toothr","date":"2012-08-31T05:56:25.603Z","type":"join"}
{"nick":"`3rdEden","date":"2012-08-31T05:56:28.042Z","type":"join"}
{"nick":"ibobrik","reason":"Quit: ibobrik","date":"2012-08-31T05:57:02.754Z","type":"quit"}
{"nick":"ArmyOfBruce","reason":"Excess Flood","date":"2012-08-31T06:04:06.083Z","type":"quit"}
{"nick":"ArmyOfBruce","date":"2012-08-31T06:04:36.061Z","type":"join"}
{"nick":"pooya","reason":"Quit: pooya","date":"2012-08-31T06:15:47.159Z","type":"quit"}
{"nick":"indutny","message":"pampam","date":"2012-08-31T06:26:34.960Z","type":"message"}
{"nick":"indutny","message":"good morninbg","date":"2012-08-31T06:26:36.472Z","type":"message"}
{"nick":"indutny","message":"mjr_: I just read yesterday's logs, have you figured out anything else?","date":"2012-08-31T06:27:01.533Z","type":"message"}
{"nick":"TheJH","date":"2012-08-31T06:29:16.353Z","type":"join"}
{"nick":"ibobrik","date":"2012-08-31T06:32:36.102Z","type":"join"}
{"nick":"toothr","reason":"Ping timeout: 240 seconds","date":"2012-08-31T06:41:03.592Z","type":"quit"}
{"nick":"toothr","date":"2012-08-31T06:42:25.059Z","type":"join"}
{"nick":"piscisaureus^","reason":"Quit: Lost terminal","date":"2012-08-31T06:46:36.137Z","type":"quit"}
{"nick":"ibobrik_","date":"2012-08-31T07:13:05.517Z","type":"join"}
{"nick":"paddybyers","date":"2012-08-31T07:16:05.996Z","type":"join"}
{"nick":"ibobrik","reason":"Ping timeout: 260 seconds","date":"2012-08-31T07:16:15.912Z","type":"quit"}
{"nick":"ibobrik_","new_nick":"ibobrik","date":"2012-08-31T07:16:16.151Z","type":"nick"}
{"nick":"rendar","date":"2012-08-31T07:46:12.172Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2012-08-31T08:19:22.581Z","type":"quit"}
{"nick":"dshaw_","date":"2012-08-31T08:19:36.267Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2012-08-31T08:37:00.251Z","type":"quit"}
{"nick":"toothr","reason":"Read error: Connection reset by peer","date":"2012-08-31T10:14:23.296Z","type":"quit"}
{"nick":"toothr","date":"2012-08-31T10:14:54.893Z","type":"join"}
{"nick":"mmalecki","date":"2012-08-31T10:29:57.744Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2012-08-31T11:50:23.312Z","type":"quit"}
{"nick":"AvianFlu","date":"2012-08-31T11:53:47.987Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 252 seconds","date":"2012-08-31T11:56:19.703Z","type":"quit"}
{"nick":"CIA-122","reason":"Ping timeout: 265 seconds","date":"2012-08-31T12:19:07.126Z","type":"quit"}
{"nick":"bnoordhuis","date":"2012-08-31T12:21:17.504Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: hey man","date":"2012-08-31T12:38:38.152Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: working on faio, is it still relevant?","date":"2012-08-31T12:38:46.759Z","type":"message"}
{"nick":"CIA-128","date":"2012-08-31T12:44:09.012Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: https://github.com/bnoordhuis/faio/pull/1/files","date":"2012-08-31T12:53:27.451Z","type":"message"}
{"nick":"indutny","message":"unfortunatelly results are not as good as they're with epoll","date":"2012-08-31T12:53:35.871Z","type":"message"}
{"nick":"indutny","message":"only 15000 connections/sec","date":"2012-08-31T12:53:39.423Z","type":"message"}
{"nick":"indutny","message":"with keep-alive 63000 req/sec","date":"2012-08-31T12:54:10.175Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I think we can additionaly report number of bytes that can be read/written","date":"2012-08-31T12:54:39.407Z","type":"message"}
{"nick":"indutny","message":"ok, that wasn't true","date":"2012-08-31T13:00:22.570Z","type":"message"}
{"nick":"indutny","message":"83198 req/sec","date":"2012-08-31T13:00:27.147Z","type":"message"}
{"nick":"`3rdEden","new_nick":"`3E|Shop","date":"2012-08-31T13:04:09.765Z","type":"nick"}
{"nick":"hz","date":"2012-08-31T13:11:10.581Z","type":"quit"}
{"nick":"CIA-128","reason":"Ping timeout: 246 seconds","date":"2012-08-31T13:18:31.013Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: hey nice work","date":"2012-08-31T13:20:18.879Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, faio is relevant. i'm going to use it as a base in libuv","date":"2012-08-31T13:20:52.115Z","type":"message"}
{"nick":"_appu","date":"2012-08-31T13:23:22.824Z","type":"join"}
{"nick":"_appu","reason":"Ping timeout: 245 seconds","date":"2012-08-31T13:29:41.936Z","type":"quit"}
{"nick":"indutny","message":"bnoordhuis: heh","date":"2012-08-31T13:37:51.710Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: fixing issues","date":"2012-08-31T13:38:02.651Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: cool","date":"2012-08-31T13:38:16.906Z","type":"message"}
{"nick":"bnoordhuis","message":"and nice work","date":"2012-08-31T13:38:19.910Z","type":"message"}
{"nick":"bnoordhuis","message":"but i already said that :)","date":"2012-08-31T13:38:23.934Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-08-31T13:38:37.404Z","type":"message"}
{"nick":"user","date":"2012-08-31T13:40:30.258Z","type":"join"}
{"nick":"user","new_nick":"piscisaureus^","date":"2012-08-31T13:40:39.031Z","type":"nick"}
{"nick":"piscisaureus^","message":"is faio the new libev?","date":"2012-08-31T13:40:56.095Z","type":"message"}
{"nick":"piscisaureus^","message":"or the new libuv?","date":"2012-08-31T13:40:59.568Z","type":"message"}
{"nick":"CIA-127","date":"2012-08-31T13:41:55.194Z","type":"join"}
{"nick":"loladiro","date":"2012-08-31T13:42:04.305Z","type":"join"}
{"nick":"indutny","message":"piscisaureus^: new libev, I suppose","date":"2012-08-31T13:42:04.543Z","type":"message"}
{"nick":"`fogus","date":"2012-08-31T13:43:01.450Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: fixed issues","date":"2012-08-31T13:43:05.352Z","type":"message"}
{"nick":"indutny","message":"except mach","date":"2012-08-31T13:43:06.959Z","type":"message"}
{"nick":"piscisaureus^","message":"will it be part of libuv","date":"2012-08-31T13:43:16.482Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus^: yes","date":"2012-08-31T13:43:19.685Z","type":"message"}
{"nick":"bnoordhuis","message":"maybe not in this exact form","date":"2012-08-31T13:43:25.556Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: i want it to be usable on freebsd/openbsd/netbsd/etc.","date":"2012-08-31T13:43:40.826Z","type":"message"}
{"nick":"piscisaureus^","message":"bnoordhuis: to provide \"backends\" ?","date":"2012-08-31T13:43:47.466Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus^: yes","date":"2012-08-31T13:43:51.251Z","type":"message"}
{"nick":"piscisaureus^","message":"aha","date":"2012-08-31T13:43:55.190Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: but i can probably fix that up myself","date":"2012-08-31T13:44:04.473Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus^: like libev but without all the extra cruft, really","date":"2012-08-31T13:44:59.288Z","type":"message"}
{"nick":"piscisaureus^","message":"bnoordhuis: nice","date":"2012-08-31T13:45:05.562Z","type":"message"}
{"nick":"bnoordhuis","message":"and a coding style that doesn't make eyeballs bleed","date":"2012-08-31T13:45:10.346Z","type":"message"}
{"nick":"piscisaureus^","message":"bnoordhuis: so will it still be possible to use signalfd, EVFILT_PROC etc on the platforms that support it?","date":"2012-08-31T13:45:32.927Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus^: yes","date":"2012-08-31T13:45:39.866Z","type":"message"}
{"nick":"piscisaureus^","message":"if all the cargo is hidden behind faio_wait then its' going to be hard","date":"2012-08-31T13:46:04.176Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus^: what cargo?","date":"2012-08-31T13:47:24.906Z","type":"message"}
{"nick":"piscisaureus^","message":"piscisaureus^: well, the actual work that gets done","date":"2012-08-31T13:51:18.512Z","type":"message"}
{"nick":"piscisaureus^","message":"oh I see you are using a callback based implementation","date":"2012-08-31T13:51:33.395Z","type":"message"}
{"nick":"piscisaureus^","message":"Actually if I would do it again I would make people \"ask\" for events","date":"2012-08-31T13:52:19.915Z","type":"message"}
{"nick":"piscisaureus^","message":"where it == libuv","date":"2012-08-31T13:52:28.608Z","type":"message"}
{"nick":"piscisaureus^","message":"but if the goal is to make backends for libuv then I suppose you should do what is easiest/fastest","date":"2012-08-31T13:53:00.231Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ah","date":"2012-08-31T13:53:35.962Z","type":"message"}
{"nick":"erickt","date":"2012-08-31T13:53:45.034Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus^: i considered that, something like a FAIO_FOREACH_EVENT() macro","date":"2012-08-31T13:54:17.959Z","type":"message"}
{"nick":"bnoordhuis","message":"callbacks are easier to deal with from a user perspective though","date":"2012-08-31T13:54:45.580Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: cool","date":"2012-08-31T13:54:49.116Z","type":"message"}
{"nick":"bnoordhuis","message":"but i may yet change my mind :)","date":"2012-08-31T13:54:57.812Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: we need a way to propagate bytes count","date":"2012-08-31T13:55:15.891Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: if that's available in backend","date":"2012-08-31T13:55:22.151Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: what byte count and for what?","date":"2012-08-31T13:55:26.654Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: well, for example, EVFILT_READ happened","date":"2012-08-31T13:55:40.036Z","type":"message"}
{"nick":"indutny","message":"event->data will contain number of bytes that can be read","date":"2012-08-31T13:55:48.274Z","type":"message"}
{"nick":"indutny","message":"same for EVFILT_WRITE","date":"2012-08-31T13:55:54.350Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: why?","date":"2012-08-31T13:55:54.593Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: what why?","date":"2012-08-31T13:56:02.451Z","type":"message"}
{"nick":"bnoordhuis","message":"i mean, why propagate that?","date":"2012-08-31T13:56:02.684Z","type":"message"}
{"nick":"bnoordhuis","message":"other backends don't provide that","date":"2012-08-31T13:56:14.690Z","type":"message"}
{"nick":"indutny","message":"not even any?","date":"2012-08-31T13:56:22.166Z","type":"message"}
{"nick":"bnoordhuis","message":"you'd have to call ioctl(FIONREAD) which is hellishly expensive","date":"2012-08-31T13:56:25.681Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2012-08-31T13:56:31.988Z","type":"message"}
{"nick":"indutny","message":"ok, the","date":"2012-08-31T13:56:35.897Z","type":"message"}
{"nick":"indutny","message":"then*","date":"2012-08-31T13:56:37.683Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: and also we need a select() hack there :D","date":"2012-08-31T13:56:46.095Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll keep it mind as a future optimization hint then","date":"2012-08-31T13:56:47.639Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: we'll handle that in libuv :)","date":"2012-08-31T13:57:05.142Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ah, ok :)","date":"2012-08-31T13:57:09.280Z","type":"message"}
{"nick":"piscisaureus^","message":"we could use that info","date":"2012-08-31T13:58:59.195Z","type":"message"}
{"nick":"piscisaureus^","message":"but with node's slab allocator it's not really useful I think","date":"2012-08-31T13:59:33.065Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus^: not all the world is node","date":"2012-08-31T14:00:03.064Z","type":"message"}
{"nick":"bnoordhuis","message":"only the hipster part","date":"2012-08-31T14:00:06.646Z","type":"message"}
{"nick":"piscisaureus^","message":"ghe","date":"2012-08-31T14:00:09.560Z","type":"message"}
{"nick":"indutny","message":"piscisaureus^: hahah","date":"2012-08-31T14:00:15.787Z","type":"message"}
{"nick":"piscisaureus^","message":"maybe you can just supply the bytes count if you have it and say 0 otherwise","date":"2012-08-31T14:00:36.923Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus^: yes, reasonable","date":"2012-08-31T14:00:51.697Z","type":"message"}
{"nick":"bnoordhuis","message":"but i don't want to add that right now","date":"2012-08-31T14:00:57.132Z","type":"message"}
{"nick":"`fogus","reason":"\"Leaving\"","date":"2012-08-31T14:01:02.867Z","type":"part"}
{"nick":"bnoordhuis","message":"let's get the basics working first","date":"2012-08-31T14:01:03.109Z","type":"message"}
{"nick":"piscisaureus^","message":"oh, many basics work already","date":"2012-08-31T14:01:15.809Z","type":"message"}
{"nick":"piscisaureus^","message":"I remember quickbasic was quite stable for one","date":"2012-08-31T14:01:23.218Z","type":"message"}
{"nick":"bnoordhuis","action":"groans","date":"2012-08-31T14:01:29.694Z","type":"action"}
{"nick":"bnoordhuis","message":"it's a good thing you didn't opt to become a stand-up comedian, bertje","date":"2012-08-31T14:02:10.299Z","type":"message"}
{"nick":"piscisaureus^","message":"I am using the chromebook as a dedicated irssi terminal now","date":"2012-08-31T14:02:22.362Z","type":"message"}
{"nick":"indutny","message":"piscisaureus^: your truth","date":"2012-08-31T14:02:30.419Z","type":"message"}
{"nick":"piscisaureus^","message":"it's quite good for that","date":"2012-08-31T14:02:40.761Z","type":"message"}
{"nick":"indutny","message":"btw, this '^' mark at the end of your nickname confuses me","date":"2012-08-31T14:02:48.174Z","type":"message"}
{"nick":"piscisaureus^","message":"alright","date":"2012-08-31T14:02:59.980Z","type":"message"}
{"nick":"piscisaureus^","new_nick":"piscisaureus","date":"2012-08-31T14:03:07.079Z","type":"nick"}
{"nick":"indutny","message":"oh, thanks a lot!","date":"2012-08-31T14:03:11.399Z","type":"message"}
{"nick":"indutny","message":"I've used irssi for quite a long time","date":"2012-08-31T14:03:29.850Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: in reference to your st module < jtsage> tj - holy shit that little cache is fast.","date":"2012-08-31T14:11:31.638Z","type":"message"}
{"nick":"mmalecki","new_nick":"mmalecki[food]","date":"2012-08-31T14:27:02.332Z","type":"nick"}
{"nick":"rendar","reason":"Ping timeout: 272 seconds","date":"2012-08-31T14:37:03.197Z","type":"quit"}
{"nick":"`3E|Shop","new_nick":"`3rdEden","date":"2012-08-31T14:42:44.151Z","type":"nick"}
{"nick":"indutny","message":"bnoordhuis: so faio_mod is sort of emulate event?","date":"2012-08-31T14:45:34.387Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: no, it changes the event mask","date":"2012-08-31T14:45:50.580Z","type":"message"}
{"nick":"bnoordhuis","message":"but it can defer it","date":"2012-08-31T14:46:01.535Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ok, got it","date":"2012-08-31T14:46:13.726Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: why it isn't calling cb if event has already happened?","date":"2012-08-31T14:46:36.500Z","type":"message"}
{"nick":"indutny","message":"I mean, why queueing when you can just run it immediately","date":"2012-08-31T14:46:54.818Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: in faio_mod, you mean?","date":"2012-08-31T14:47:09.173Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-08-31T14:47:13.322Z","type":"message"}
{"nick":"bnoordhuis","message":"because the caller may not expect that","date":"2012-08-31T14:47:21.425Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: oh, got it","date":"2012-08-31T14:47:51.882Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: but poll may end not quite soon","date":"2012-08-31T14:48:00.949Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: it can actually not happen in any reasonable amount of time","date":"2012-08-31T14:48:18.662Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: okay, let me explain how it's supposed to work","date":"2012-08-31T14:48:31.373Z","type":"message"}
{"nick":"bnoordhuis","message":"callbacks are invoked from inside faio_poll()","date":"2012-08-31T14:48:39.949Z","type":"message"}
{"nick":"indutny","message":"(well, it'll happen in level-triggered engines)","date":"2012-08-31T14:48:44.408Z","type":"message"}
{"nick":"bnoordhuis","message":"if there are callbacks pending those run first","date":"2012-08-31T14:49:04.138Z","type":"message"}
{"nick":"bnoordhuis","message":"and no blocking poll is done","date":"2012-08-31T14:49:24.214Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-08-31T14:50:08.896Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-08-31T14:50:14.240Z","type":"message"}
{"nick":"bnoordhuis","message":"from the perspective of the caller, faio_poll() returns when a) callbacks have been invoked, or b) the timeout expired","date":"2012-08-31T14:50:16.708Z","type":"message"}
{"nick":"indutny","message":"I forgot that faio_poll and faio_mod should be called in one thread","date":"2012-08-31T14:50:31.001Z","type":"message"}
{"nick":"bnoordhuis","message":"or protected by a lock","date":"2012-08-31T14:50:45.756Z","type":"message"}
{"nick":"bnoordhuis","message":"but yes","date":"2012-08-31T14:51:01.813Z","type":"message"}
{"nick":"bnoordhuis","message":"callbacks need to happen on the same thread","date":"2012-08-31T14:51:20.572Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2012-08-31T14:51:42.643Z","type":"message"}
{"nick":"indutny","message":"if faio_mod and faio_poll will be called simulatenously","date":"2012-08-31T14:51:52.720Z","type":"message"}
{"nick":"indutny","message":"i.e. while _poll() is blocking","date":"2012-08-31T14:51:57.511Z","type":"message"}
{"nick":"indutny","message":"it'll never return","date":"2012-08-31T14:52:02.961Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2012-08-31T14:52:18.173Z","type":"message"}
{"nick":"bnoordhuis","message":"so don't do that :)","date":"2012-08-31T14:52:20.945Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-08-31T14:52:41.693Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-08-31T14:52:43.304Z","type":"message"}
{"nick":"CoverSlide","date":"2012-08-31T15:01:21.931Z","type":"join"}
{"nick":"hz","date":"2012-08-31T15:05:22.210Z","type":"join"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-08-31T15:06:16.244Z","type":"quit"}
{"nick":"piscisaureus","message":"I can make a windows backend :-p","date":"2012-08-31T15:09:28.487Z","type":"message"}
{"nick":"piscisaureus","message":"The library size would quadruple","date":"2012-08-31T15:09:44.476Z","type":"message"}
{"nick":"piscisaureus","message":"at least","date":"2012-08-31T15:09:47.462Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-08-31T15:13:32.692Z","type":"quit"}
{"nick":"mcavage","date":"2012-08-31T15:17:36.995Z","type":"join"}
{"nick":"piscisaureus","reason":"Ping timeout: 272 seconds","date":"2012-08-31T15:26:27.167Z","type":"quit"}
{"nick":"indutny","message":"paddybyers: haha","date":"2012-08-31T15:28:14.562Z","type":"message"}
{"nick":"indutny","message":"oops","date":"2012-08-31T15:28:23.091Z","type":"message"}
{"nick":"indutny","message":"bertje left","date":"2012-08-31T15:28:27.066Z","type":"message"}
{"nick":"dap","date":"2012-08-31T15:33:52.038Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: hey","date":"2012-08-31T15:40:50.278Z","type":"message"}
{"nick":"`3rdEden","reason":"Quit: Linkinus - http://linkinus.com","date":"2012-08-31T15:40:51.563Z","type":"quit"}
{"nick":"indutny","message":"can I ask you to look at https://github.com/indutny/vock/issues/3#issuecomment-8195947","date":"2012-08-31T15:40:56.080Z","type":"message"}
{"nick":"indutny","message":"it seems to be some odd compilation issue that I can't fix","date":"2012-08-31T15:41:05.810Z","type":"message"}
{"nick":"indutny","message":"no matter how I try","date":"2012-08-31T15:41:10.095Z","type":"message"}
{"nick":"loladiro","date":"2012-08-31T15:45:02.321Z","type":"join"}
{"nick":"tjfontaine","message":"indutny: worked for me on my ML","date":"2012-08-31T15:45:42.739Z","type":"message"}
{"nick":"ibobrik","reason":"Quit: ibobrik","date":"2012-08-31T15:46:49.902Z","type":"quit"}
{"nick":"indutny","message":"tjfontaine: well, that's it","date":"2012-08-31T15:50:42.956Z","type":"message"}
{"nick":"indutny","message":"it works everywhere","date":"2012-08-31T15:50:44.830Z","type":"message"}
{"nick":"indutny","message":"except this guy's macbook","date":"2012-08-31T15:50:49.228Z","type":"message"}
{"nick":"rendar","date":"2012-08-31T15:51:05.609Z","type":"join"}
{"nick":"CAPSLOCKBOT","date":"2012-08-31T15:51:10.298Z","type":"join"}
{"nick":"tjfontaine","message":"indutny: I'm guessing the guy uses evil things like homebrew or macports, people who do such things deserve their fates","date":"2012-08-31T15:51:28.077Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2012-08-31T15:52:12.329Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-08-31T15:57:30.336Z","type":"quit"}
{"nick":"saghul","message":"tjfontaine homebrew is pretty nice :-)","date":"2012-08-31T15:57:46.267Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: ok, he was using clang","date":"2012-08-31T15:57:58.911Z","type":"message"}
{"nick":"tjfontaine","message":"saghul: beauty and the eye of the beholder, but I'm a strong advocate of using appropriate package management for your platform though, and willynilly libs and search path mucking is a receipe for disaster imesho","date":"2012-08-31T15:58:58.454Z","type":"message"}
{"nick":"saghul","message":"tjfontaine well, what is the appropriate package management for OSX? unfortunately compiling from source :-S","date":"2012-08-31T15:59:48.166Z","type":"message"}
{"nick":"indutny","message":"saghul: I like it","date":"2012-08-31T15:59:58.222Z","type":"message"}
{"nick":"indutny","message":"wget, tar xzvf, make","date":"2012-08-31T16:00:11.559Z","type":"message"}
{"nick":"tjfontaine","message":"saghul: .pkg of course","date":"2012-08-31T16:00:15.164Z","type":"message"}
{"nick":"saghul","message":"indutny well, I don't mind, but as soon as I install OSX I do brew install tux bash vim wget, and doing it manually would be tiresome","date":"2012-08-31T16:00:35.109Z","type":"message"}
{"nick":"tjfontaine","message":"saghul: if you're left to compile on your own, doing anything but mucking with system wide config vars","date":"2012-08-31T16:00:42.461Z","type":"message"}
{"nick":"saghul","message":"tjfontaine THB I hope to see apt on OSX some day","date":"2012-08-31T16:01:00.721Z","type":"message"}
{"nick":"tjfontaine","message":"saghul: well there's fink or whatever","date":"2012-08-31T16:01:11.607Z","type":"message"}
{"nick":"saghul","message":"it's already on iOS","date":"2012-08-31T16:01:12.236Z","type":"message"}
{"nick":"saghul","message":"tjfontaine that didn't work out for me last time I checked","date":"2012-08-31T16:01:29.740Z","type":"message"}
{"nick":"tjfontaine","message":"saghul: ya, well they all suck :)","date":"2012-08-31T16:01:46.808Z","type":"message"}
{"nick":"saghul","message":"so far homebrew does the trick, and being in /usr/local is pretty much like you compiled the stuff yourself ","date":"2012-08-31T16:02:06.591Z","type":"message"}
{"nick":"tjfontaine","message":"the ideal situation woudl of course for these things to appear in app store","date":"2012-08-31T16:02:14.175Z","type":"message"}
{"nick":"saghul","message":"good luck with that :-S","date":"2012-08-31T16:02:23.591Z","type":"message"}
{"nick":"saghul","message":"we just had to remove some nice features from our app because of the stupid sandbox","date":"2012-08-31T16:02:54.606Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2012-08-31T16:03:01.773Z","type":"message"}
{"nick":"erickt","date":"2012-08-31T16:07:45.171Z","type":"join"}
{"nick":"creationix","message":"bnoordhuis: I think I want to wrap a non-callback API on top of libuv","date":"2012-08-31T16:09:37.797Z","type":"message"}
{"nick":"creationix","message":"is there currently an API where I can block waiting for the next event","date":"2012-08-31T16:09:54.489Z","type":"message"}
{"nick":"creationix","message":"(assuming I never called uv_start)","date":"2012-08-31T16:10:09.280Z","type":"message"}
{"nick":"mcavage","reason":"Read error: Connection reset by peer","date":"2012-08-31T16:10:22.096Z","type":"quit"}
{"nick":"mcavage","date":"2012-08-31T16:10:35.215Z","type":"join"}
{"nick":"creationix","message":"I agree that callbacks are easier for user code, but I think a library like libuv shouldn't be callback based","date":"2012-08-31T16:11:58.921Z","type":"message"}
{"nick":"creationix","message":"leave that up to code that layers on top","date":"2012-08-31T16:12:04.846Z","type":"message"}
{"nick":"creationix","message":"especially when binding with some scripting language.  Just write the while loop in the scripting language and dispatch events from there to the various callbacks","date":"2012-08-31T16:12:51.280Z","type":"message"}
{"nick":"indutny","message":"creationix: so you need faio","date":"2012-08-31T16:13:08.601Z","type":"message"}
{"nick":"indutny","message":"creationix: http://github.com/bnoordhuis/faio","date":"2012-08-31T16:13:15.023Z","type":"message"}
{"nick":"indutny","message":"though it's using callbacks too","date":"2012-08-31T16:13:20.343Z","type":"message"}
{"nick":"creationix","message":"right, I don't think I want to move away from libuv","date":"2012-08-31T16:13:34.384Z","type":"message"}
{"nick":"indutny","message":"and as far as I can see you need something with APIs similar to epoll or kqueue","date":"2012-08-31T16:13:35.588Z","type":"message"}
{"nick":"creationix","message":"I think so","date":"2012-08-31T16:13:43.739Z","type":"message"}
{"nick":"saghul","message":"IIRC bnoordhuis said at some point the fd of the loop and timeout would be exposed, so you can do the polling manually","date":"2012-08-31T16:13:48.524Z","type":"message"}
{"nick":"joshthecoder","date":"2012-08-31T16:14:02.029Z","type":"join"}
{"nick":"indutny","message":"saghul: and?","date":"2012-08-31T16:14:10.860Z","type":"message"}
{"nick":"creationix","message":"there is uv_run_once right?","date":"2012-08-31T16:14:14.969Z","type":"message"}
{"nick":"saghul","message":"indutny so you could do something like uv_poll(loop, 1000) in your app loop for example","date":"2012-08-31T16:14:41.750Z","type":"message"}
{"nick":"creationix","message":"oh, nice, run_once does block","date":"2012-08-31T16:14:52.525Z","type":"message"}
{"nick":"saghul","message":"creationix yes, but that can block indefinitely","date":"2012-08-31T16:14:53.591Z","type":"message"}
{"nick":"creationix","message":"saghul: no worse than uv_run right?","date":"2012-08-31T16:15:12.715Z","type":"message"}
{"nick":"saghul","message":"creationix there will be a non-blocking version, just not yet","date":"2012-08-31T16:15:17.583Z","type":"message"}
{"nick":"creationix","message":"I don't want a non-blocking version","date":"2012-08-31T16:15:27.959Z","type":"message"}
{"nick":"creationix","message":"well, not for this project","date":"2012-08-31T16:15:38.116Z","type":"message"}
{"nick":"saghul","message":"creationix this is a rough idea on how it may look like https://github.com/joyent/libuv/pull/535","date":"2012-08-31T16:15:43.435Z","type":"message"}
{"nick":"creationix","message":"I may later on when I need to integrate with the iOS event loop","date":"2012-08-31T16:15:47.332Z","type":"message"}
{"nick":"creationix","message":"saghul: nice, that works","date":"2012-08-31T16:16:12.279Z","type":"message"}
{"nick":"creationix","message":"hmm, what does uv_run_once do when the refcount drops to zero?","date":"2012-08-31T16:16:54.519Z","type":"message"}
{"nick":"indutny","message":"saghul: libuv will still use callback based API","date":"2012-08-31T16:17:07.360Z","type":"message"}
{"nick":"creationix","message":"I guess that's what the return value is for","date":"2012-08-31T16:17:08.334Z","type":"message"}
{"nick":"creationix","message":"so how do I get the event out of run_once?","date":"2012-08-31T16:17:46.131Z","type":"message"}
{"nick":"saghul","message":"indutny sure, but I guess what creationix wants is to tell libuv: wait for events 1 second and dispatch them now","date":"2012-08-31T16:17:54.707Z","type":"message"}
{"nick":"creationix","message":"I don't want libuv dispatching the event","date":"2012-08-31T16:18:09.628Z","type":"message"}
{"nick":"creationix","message":"I don't want any callbacks","date":"2012-08-31T16:18:13.791Z","type":"message"}
{"nick":"creationix","message":"I want to pull the event","date":"2012-08-31T16:18:21.206Z","type":"message"}
{"nick":"saghul","message":"creationix is dispatched asynchronously just like uv_run","date":"2012-08-31T16:18:22.587Z","type":"message"}
{"nick":"saghul","message":"creationix oh","date":"2012-08-31T16:18:29.343Z","type":"message"}
{"nick":"creationix","message":"pseudocode: while (event = getEvent()) { console.log(event) }","date":"2012-08-31T16:19:16.986Z","type":"message"}
{"nick":"saghul","message":"what should event contain?","date":"2012-08-31T16:19:28.410Z","type":"message"}
{"nick":"saghul","message":"I mean, the event could de IO, timer","date":"2012-08-31T16:19:48.406Z","type":"message"}
{"nick":"creationix","message":"probably a reference to the handle or req related to the event along with it's parameters","date":"2012-08-31T16:19:51.714Z","type":"message"}
{"nick":"creationix","message":"basically I don't want to ever use callbacks in C","date":"2012-08-31T16:20:25.048Z","type":"message"}
{"nick":"creationix","message":"but js / lua interface can stay the same though","date":"2012-08-31T16:20:40.190Z","type":"message"}
{"nick":"creationix","message":"I just want to move the dispatching up","date":"2012-08-31T16:20:46.016Z","type":"message"}
{"nick":"saghul","message":"I see","date":"2012-08-31T16:20:56.000Z","type":"message"}
{"nick":"saghul","message":"not an expert myself here, but as it looks I'm not sure you can accomplish that with libuv","date":"2012-08-31T16:21:25.947Z","type":"message"}
{"nick":"creationix","message":"looks like with current libuv, I'll have to intercept all dispatches and route them to my getEvent function","date":"2012-08-31T16:21:35.462Z","type":"message"}
{"nick":"creationix","message":"it will be terribly inneffecient","date":"2012-08-31T16:21:47.551Z","type":"message"}
{"nick":"creationix","message":"actually it won't be that bad.  I already have to convert the C callbacks to lua dispatches","date":"2012-08-31T16:22:32.162Z","type":"message"}
{"nick":"creationix","message":"the only overhead will be the lookup in lua land to dispatch the event again","date":"2012-08-31T16:22:48.258Z","type":"message"}
{"nick":"saghul","message":"I expose callbacks to python land as well","date":"2012-08-31T16:22:52.773Z","type":"message"}
{"nick":"saghul","message":"and use greenlet to give a synchronous looking API","date":"2012-08-31T16:23:07.495Z","type":"message"}
{"nick":"creationix","message":"yeah, I have coroutines","date":"2012-08-31T16:23:22.184Z","type":"message"}
{"nick":"saghul","message":"can't you use them to 'wait' for callbacks to be fired?","date":"2012-08-31T16:23:44.899Z","type":"message"}
{"nick":"creationix","message":"also, if I can make libuv not require callbacks, I can use luajit's awesome ffi instead of C bindings","date":"2012-08-31T16:23:54.193Z","type":"message"}
{"nick":"creationix","message":"saghul: sure, but I want more control https://github.com/luvit/luvit/blob/master/examples/stream/test.lua#L35-43","date":"2012-08-31T16:24:33.695Z","type":"message"}
{"nick":"creationix","message":"and every time I call a C function using C bindings, it kills my jit optimizations","date":"2012-08-31T16:24:52.936Z","type":"message"}
{"nick":"creationix","message":"if I were to use ffi instead, it wouldn't slow things down as much","date":"2012-08-31T16:25:03.155Z","type":"message"}
{"nick":"creationix","message":"but ffi sucks for C callbacks","date":"2012-08-31T16:25:14.867Z","type":"message"}
{"nick":"saghul","message":"yeah, there is quite some overhead","date":"2012-08-31T16:25:20.417Z","type":"message"}
{"nick":"saghul","message":"I do like that API with fibers :-)","date":"2012-08-31T16:25:52.719Z","type":"message"}
{"nick":"indutny","message":"creationix: FFI is not as good as you're advertising it","date":"2012-08-31T16:26:21.814Z","type":"message"}
{"nick":"indutny","message":"though it allows you to play in one field","date":"2012-08-31T16:26:27.676Z","type":"message"}
{"nick":"creationix","message":"indutny: luajit ffi is good right?","date":"2012-08-31T16:26:43.223Z","type":"message"}
{"nick":"creationix","message":"I know most ffi sucks","date":"2012-08-31T16:26:48.785Z","type":"message"}
{"nick":"indutny","message":"well, I'm talking about ffi itself","date":"2012-08-31T16:26:56.951Z","type":"message"}
{"nick":"indutny","message":"call overhead is really big","date":"2012-08-31T16:27:11.111Z","type":"message"}
{"nick":"creationix","message":"but that was the entire point of the luajit 2 rewrite to make ffi calls faster than C calls could possibly do","date":"2012-08-31T16:27:12.776Z","type":"message"}
{"nick":"creationix","message":"sure, normal ffi sucks","date":"2012-08-31T16:27:21.175Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-08-31T16:27:25.406Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-08-31T16:27:26.234Z","type":"message"}
{"nick":"indutny","message":"I didn't know that","date":"2012-08-31T16:27:33.532Z","type":"message"}
{"nick":"creationix","message":"but luajit ffi basically jit generates direct (or indirect) calls and executes them","date":"2012-08-31T16:27:41.895Z","type":"message"}
{"nick":"creationix","message":"and since it knows the signature is can optimize agressivly","date":"2012-08-31T16:27:50.046Z","type":"message"}
{"nick":"creationix","message":"C api calls are black-box","date":"2012-08-31T16:28:03.600Z","type":"message"}
{"nick":"creationix","message":"they could do anything and mess with any vm state","date":"2012-08-31T16:28:17.262Z","type":"message"}
{"nick":"indutny","message":"I wonder when I'll finish my JIT :)","date":"2012-08-31T16:28:54.552Z","type":"message"}
{"nick":"indutny","message":"I've really stuck at register allocation","date":"2012-08-31T16:29:08.094Z","type":"message"}
{"nick":"indutny","message":"lost all inspiration that I had","date":"2012-08-31T16:29:16.301Z","type":"message"}
{"nick":"piscisaureus","date":"2012-08-31T16:31:16.173Z","type":"join"}
{"nick":"creationix","message":"indutny: that's a hard one","date":"2012-08-31T16:31:23.326Z","type":"message"}
{"nick":"creationix","message":"piscisaureus: welcome back","date":"2012-08-31T16:31:41.010Z","type":"message"}
{"nick":"piscisaureus","message":"creationix: the \"pulling events\" ship has really sailed I think","date":"2012-08-31T16:31:51.221Z","type":"message"}
{"nick":"piscisaureus","message":"creationix: unless you want to start over :-)","date":"2012-08-31T16:31:57.672Z","type":"message"}
{"nick":"piscisaureus","message":"thanks creationix ","date":"2012-08-31T16:32:34.958Z","type":"message"}
{"nick":"creationix","message":"piscisaureus: I'll try a shim to see if the new API is even better for me","date":"2012-08-31T16:33:02.193Z","type":"message"}
{"nick":"creationix","message":"if it is, then we'll talk about rewriting or forking libuv","date":"2012-08-31T16:33:15.782Z","type":"message"}
{"nick":"piscisaureus","message":"creationix: well, if you want to fork it then you don't have to talk :-)","date":"2012-08-31T16:33:34.849Z","type":"message"}
{"nick":"piscisaureus","message":"be my guest","date":"2012-08-31T16:33:37.929Z","type":"message"}
{"nick":"creationix","message":"like I have time for that :P","date":"2012-08-31T16:33:46.369Z","type":"message"}
{"nick":"piscisaureus","message":"yes, well, same here","date":"2012-08-31T16:33:57.242Z","type":"message"}
{"nick":"creationix","message":"also if I'm right about luajit's ffi, then it should be faster even with a shim at the C layer","date":"2012-08-31T16:34:15.614Z","type":"message"}
{"nick":"creationix","message":"and that will be good enough till someone has time and motivation to rewrite libuv","date":"2012-08-31T16:34:32.372Z","type":"message"}
{"nick":"piscisaureus","message":"I think that will be a pretty big undertaking","date":"2012-08-31T16:38:05.587Z","type":"message"}
{"nick":"piscisaureus","message":"I don't think it'll even happen","date":"2012-08-31T16:38:14.464Z","type":"message"}
{"nick":"creationix","message":"right, maybe in the unlikely case that luvit becomes more popular than node","date":"2012-08-31T16:39:18.230Z","type":"message"}
{"nick":"creationix","message":"but I don't see that happening for webdev","date":"2012-08-31T16:39:36.637Z","type":"message"}
{"nick":"creationix","message":"js is the language of the web after all","date":"2012-08-31T16:39:40.828Z","type":"message"}
{"nick":"indutny","message":"piscisaureus: have we touched openssl somewhere between 0.8.4 and 0.8.8?","date":"2012-08-31T16:44:00.338Z","type":"message"}
{"nick":"loladiro","date":"2012-08-31T16:51:55.415Z","type":"join"}
{"nick":"piscisaureus","message":"creationix: but even then, would you find people to rewrite libuv?","date":"2012-08-31T16:52:06.847Z","type":"message"}
{"nick":"piscisaureus","message":"indutny: git log v0.8.4..v0.8.8 -- deps/openssl","date":"2012-08-31T16:52:20.534Z","type":"message"}
{"nick":"creationix","message":"piscisaureus: I'm not worried about.  If it's not going to happen, I'l survive","date":"2012-08-31T16:52:40.317Z","type":"message"}
{"nick":"creationix","message":"I'm pretty sure I can beat the socks off node in performance without rewriting libuv :)","date":"2012-08-31T16:53:02.182Z","type":"message"}
{"nick":"dshaw_","date":"2012-08-31T16:53:10.182Z","type":"join"}
{"nick":"piscisaureus","message":"creationix: IT'S ON!!1","date":"2012-08-31T16:53:43.637Z","type":"message"}
{"nick":"creationix","message":"I cheat by changing the http api","date":"2012-08-31T16:54:02.574Z","type":"message"}
{"nick":"creationix","message":"node can't do that :P","date":"2012-08-31T16:54:05.290Z","type":"message"}
{"nick":"piscisaureus","message":"creationix: so what's the change?","date":"2012-08-31T16:54:17.599Z","type":"message"}
{"nick":"piscisaureus","message":"creationix: no http header support","date":"2012-08-31T16:54:26.104Z","type":"message"}
{"nick":"creationix","message":"no, remove the massive response object","date":"2012-08-31T16:54:45.700Z","type":"message"}
{"nick":"creationix","message":"and instead have a respond method that takes code, headers, and body","date":"2012-08-31T16:54:55.242Z","type":"message"}
{"nick":"creationix","message":"(body can be either string or stream)","date":"2012-08-31T16:55:00.913Z","type":"message"}
{"nick":"creationix","message":"it made luvit 20x faster when I tried it","date":"2012-08-31T16:55:22.950Z","type":"message"}
{"nick":"creationix","message":"and I like the API better too","date":"2012-08-31T16:55:33.650Z","type":"message"}
{"nick":"piscisaureus","message":"creationix: 20x hmm. I don't believe that.","date":"2012-08-31T16:56:36.858Z","type":"message"}
{"nick":"creationix","message":"well, it's only twice the speed of node","date":"2012-08-31T16:56:46.684Z","type":"message"}
{"nick":"creationix","message":"luvit has gotten really slow lately for some reason","date":"2012-08-31T16:56:53.304Z","type":"message"}
{"nick":"creationix","message":"haven't tracked down the cause yet","date":"2012-08-31T16:57:01.984Z","type":"message"}
{"nick":"piscisaureus","message":"right, ok. I though you were saying it got 20x as fast as node","date":"2012-08-31T16:57:48.837Z","type":"message"}
{"nick":"creationix","message":"no, that would be impressive indeed","date":"2012-08-31T16:58:13.173Z","type":"message"}
{"nick":"creationix","message":"https://gist.github.com/3517969","date":"2012-08-31T16:58:16.141Z","type":"message"}
{"nick":"mmalecki[food]","new_nick":"mmalecki","date":"2012-08-31T16:58:26.346Z","type":"nick"}
{"nick":"creationix","message":"I did get 6x the speed of node once by cheating heavily","date":"2012-08-31T16:58:29.348Z","type":"message"}
{"nick":"creationix","message":"but it wasn't an equivalent API so it doesn't count","date":"2012-08-31T16:58:45.508Z","type":"message"}
{"nick":"creationix","message":"basically a tcp server supporting http keep alive and pipeline emitting canned http responses","date":"2012-08-31T16:59:18.466Z","type":"message"}
{"nick":"piscisaureus","message":"right, 2000 r/s with keepalive is quite slow indeed","date":"2012-08-31T17:00:01.266Z","type":"message"}
{"nick":"indutny","message":"piscisaureus: thanks","date":"2012-08-31T17:00:25.477Z","type":"message"}
{"nick":"creationix","message":"piscisaureus: that's what happens when I spend months working on a cloud9 release and don't have time to watch luvit","date":"2012-08-31T17:02:00.966Z","type":"message"}
{"nick":"piscisaureus","message":"creationix: haha :-)","date":"2012-08-31T17:02:23.360Z","type":"message"}
{"nick":"creationix","message":"the new web module I wrote in one night while holding a crying baby.  I couldn't sleep anyway, so I coded","date":"2012-08-31T17:02:55.016Z","type":"message"}
{"nick":"TooTallNate","date":"2012-08-31T17:11:18.337Z","type":"join"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-08-31T17:15:34.599Z","type":"quit"}
{"nick":"piscisaureus","reason":"Quit: Lost terminal","date":"2012-08-31T17:20:42.360Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: ho","date":"2012-08-31T17:26:04.375Z","type":"message"}
{"nick":"bnoordhuis","message":"looks like it's using the struct before actually declaring it?","date":"2012-08-31T17:26:16.351Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-08-31T17:26:43.298Z","type":"join"}
{"nick":"CIA-127","reason":"Ping timeout: 244 seconds","date":"2012-08-31T17:26:47.159Z","type":"quit"}
{"nick":"indutny","message":"bnoordhuis: the thing is that the build works for everyone else","date":"2012-08-31T17:27:14.883Z","type":"message"}
{"nick":"ibobrik","date":"2012-08-31T17:28:26.860Z","type":"join"}
{"nick":"erickt","date":"2012-08-31T17:29:23.192Z","type":"join"}
{"nick":"CIA-127","date":"2012-08-31T17:30:45.091Z","type":"join"}
{"nick":"hz","reason":"Read error: Connection reset by peer","date":"2012-08-31T17:32:17.822Z","type":"quit"}
{"nick":"joshthecoder","reason":"Quit: Linkinus - http://linkinus.com","date":"2012-08-31T17:32:22.164Z","type":"quit"}
{"nick":"hz","date":"2012-08-31T17:33:05.176Z","type":"join"}
{"nick":"bnoordhuis","message":"indutny: builds fine for me as well","date":"2012-08-31T17:35:29.690Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: maybe deps/opus/opus/src/opus_decoder.c needs to include modes.h before celt.h","date":"2012-08-31T17:39:09.971Z","type":"message"}
{"nick":"bnoordhuis","message":"just a guess though","date":"2012-08-31T17:39:17.058Z","type":"message"}
{"nick":"bnoordhuis","message":"or alternatively, celt.h needs to include modes.h","date":"2012-08-31T17:39:35.174Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: yeah, probably","date":"2012-08-31T17:40:23.760Z","type":"message"}
{"nick":"CIA-127","reason":"Ping timeout: 265 seconds","date":"2012-08-31T17:40:32.087Z","type":"quit"}
{"nick":"indutny","message":"though it's very odd","date":"2012-08-31T17:40:35.281Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: btw, want trying vock?","date":"2012-08-31T17:42:22.710Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: just messaging would be ok for me","date":"2012-08-31T17:42:30.026Z","type":"message"}
{"nick":"indutny","message":":D","date":"2012-08-31T17:42:30.880Z","type":"message"}
{"nick":"indutny","message":"you can press 'm' to mute yourself","date":"2012-08-31T17:42:37.145Z","type":"message"}
{"nick":"indutny","message":"and 'n' to send message","date":"2012-08-31T17:42:40.572Z","type":"message"}
{"nick":"indutny","message":"I wonder if I can use DHT","date":"2012-08-31T17:45:11.463Z","type":"message"}
{"nick":"creationix","message":"indutny: how do I connect to someone on dock?","date":"2012-08-31T17:45:13.800Z","type":"message"}
{"nick":"creationix","message":"*vock","date":"2012-08-31T17:45:20.063Z","type":"message"}
{"nick":"indutny","message":"you mean vock?","date":"2012-08-31T17:45:21.267Z","type":"message"}
{"nick":"indutny","message":"vock connect ...","date":"2012-08-31T17:45:24.416Z","type":"message"}
{"nick":"indutny","message":"where ... is a room id","date":"2012-08-31T17:45:27.992Z","type":"message"}
{"nick":"hz","date":"2012-08-31T17:45:34.017Z","type":"quit"}
{"nick":"indutny","message":"which is randomly generated when you do : vock create","date":"2012-08-31T17:45:36.350Z","type":"message"}
{"nick":"creationix","message":"so no named rooms then?","date":"2012-08-31T17:45:49.221Z","type":"message"}
{"nick":"creationix","message":"like `vock connect libuv`","date":"2012-08-31T17:46:02.188Z","type":"message"}
{"nick":"`3rdEden","date":"2012-08-31T17:47:43.972Z","type":"join"}
{"nick":"indutny","message":"creationix: not so far","date":"2012-08-31T17:48:25.786Z","type":"message"}
{"nick":"indutny","message":"creationix: though it's a good idea","date":"2012-08-31T17:48:32.570Z","type":"message"}
{"nick":"creationix","message":"is it only one-on-one or does is support chat rooms?","date":"2012-08-31T17:48:48.150Z","type":"message"}
{"nick":"indutny","message":"well, it should support conference calls","date":"2012-08-31T17:48:57.728Z","type":"message"}
{"nick":"lohkey","reason":"Quit: WeeChat 0.3.8","date":"2012-08-31T17:49:08.059Z","type":"quit"}
{"nick":"indutny","message":"though https://github.com/indutny/vock/issues/2","date":"2012-08-31T17:49:16.334Z","type":"message"}
{"nick":"indutny","message":"happens","date":"2012-08-31T17:49:18.208Z","type":"message"}
{"nick":"indutny","message":"some sort of protocol error","date":"2012-08-31T17:49:25.846Z","type":"message"}
{"nick":"indutny","message":"but I haven't seen it","date":"2012-08-31T17:49:30.345Z","type":"message"}
{"nick":"creationix","message":"cool progress","date":"2012-08-31T17:49:55.783Z","type":"message"}
{"nick":"indutny","message":"creationix: ah","date":"2012-08-31T17:50:04.958Z","type":"message"}
{"nick":"lohkey","date":"2012-08-31T17:50:09.719Z","type":"join"}
{"nick":"indutny","message":"btw, named rooms should work fine","date":"2012-08-31T17:50:09.719Z","type":"message"}
{"nick":"indutny","message":"creationix: can you call `vock connect libuv`?","date":"2012-08-31T17:50:26.137Z","type":"message"}
{"nick":"indutny","message":"s/call/run","date":"2012-08-31T17:50:29.228Z","type":"message"}
{"nick":"creationix","message":"that's kinda cool","date":"2012-08-31T17:51:51.262Z","type":"message"}
{"nick":"indutny","message":"creationix: have you closed client?","date":"2012-08-31T17:52:03.597Z","type":"message"}
{"nick":"creationix","message":"yep","date":"2012-08-31T17:52:10.404Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-08-31T17:52:14.982Z","type":"message"}
{"nick":"indutny","message":"because I got error :)","date":"2012-08-31T17:52:18.986Z","type":"message"}
{"nick":"creationix","message":"did you hear me?","date":"2012-08-31T17:52:21.544Z","type":"message"}
{"nick":"indutny","message":"nope","date":"2012-08-31T17:52:24.425Z","type":"message"}
{"nick":"indutny","message":"everything is muted","date":"2012-08-31T17:52:28.742Z","type":"message"}
{"nick":"indutny","message":"well, I muted everything","date":"2012-08-31T17:52:37.463Z","type":"message"}
{"nick":"creationix","message":"oh, mute on your side mutes listening too","date":"2012-08-31T17:52:39.610Z","type":"message"}
{"nick":"indutny","message":"when you press 'm' only mic is muted","date":"2012-08-31T17:52:41.785Z","type":"message"}
{"nick":"indutny","message":"nope","date":"2012-08-31T17:52:44.783Z","type":"message"}
{"nick":"indutny","message":"sorry for confusing you","date":"2012-08-31T17:52:52.280Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-08-31T17:52:53.363Z","type":"message"}
{"nick":"indutny","message":"what I really do like about vock is that all protocol is there: https://github.com/indutny/vock/blob/master/lib/vock/peer.js","date":"2012-08-31T17:53:38.232Z","type":"message"}
{"nick":"indutny","message":"it can easily be patched or new functionality can be added w/o going deep into sound processing and etc","date":"2012-08-31T17:53:51.012Z","type":"message"}
{"nick":"creationix","message":"so it's peer-to-peer once the connection is established","date":"2012-08-31T17:54:09.223Z","type":"message"}
{"nick":"bnoordhuis","message":"`npm update` doesn't work so great with pre-release builds of node...","date":"2012-08-31T17:54:11.687Z","type":"message"}
{"nick":"creationix","message":"or does it proxy through your server","date":"2012-08-31T17:54:15.872Z","type":"message"}
{"nick":"lohkey","reason":"Client Quit","date":"2012-08-31T17:54:24.376Z","type":"quit"}
{"nick":"indutny","message":"creationix: well, there're two modes","date":"2012-08-31T17:54:25.340Z","type":"message"}
{"nick":"bnoordhuis","message":"anything that requires node-gyp dies horribly","date":"2012-08-31T17:54:26.271Z","type":"message"}
{"nick":"indutny","message":"relay and direct","date":"2012-08-31T17:54:27.697Z","type":"message"}
{"nick":"ibobrik","reason":"Read error: Connection reset by peer","date":"2012-08-31T17:54:38.253Z","type":"quit"}
{"nick":"lohkey","date":"2012-08-31T17:54:38.495Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: yeah, that's very annoying","date":"2012-08-31T17:54:43.693Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I'm using multiple tabs for that goal","date":"2012-08-31T17:54:59.137Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: one with stable and one with pre","date":"2012-08-31T17:55:06.248Z","type":"message"}
{"nick":"TooTallNate","message":"you should be able to pass --nodedir to `npm update`","date":"2012-08-31T17:55:08.039Z","type":"message"}
{"nick":"TooTallNate","message":"i think","date":"2012-08-31T17:55:15.502Z","type":"message"}
{"nick":"bnoordhuis","message":"`npm --nodedir <path> update` doesn't work","date":"2012-08-31T17:55:57.173Z","type":"message"}
{"nick":"bnoordhuis","message":"`npm update --nodedir <path>` doesn't seem to do anything","date":"2012-08-31T17:56:06.465Z","type":"message"}
{"nick":"bnoordhuis","message":"is there some kind of env var i can set?","date":"2012-08-31T17:56:44.375Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: npm config ?","date":"2012-08-31T17:58:04.408Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: yes, but what key to set?","date":"2012-08-31T17:59:20.773Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: prefix?","date":"2012-08-31T17:59:52.782Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: look through \"npm config list -l\"","date":"2012-08-31T18:00:08.145Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: nope, doesn't work","date":"2012-08-31T18:00:28.072Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: oh","date":"2012-08-31T18:00:36.480Z","type":"message"}
{"nick":"piscisaureus_","message":"in that case","date":"2012-08-31T18:00:38.152Z","type":"message"}
{"nick":"piscisaureus_","message":"I don't know","date":"2012-08-31T18:00:39.769Z","type":"message"}
{"nick":"piscisaureus_","message":"maybe try NODE_DIR=/foo/bar npm","date":"2012-08-31T18:00:53.853Z","type":"message"}
{"nick":"bnoordhuis","message":"kind of bad that three core devs don't know how to fix that...","date":"2012-08-31T18:00:54.730Z","type":"message"}
{"nick":"piscisaureus_","message":"hahaha","date":"2012-08-31T18:01:02.187Z","type":"message"}
{"nick":"brson","date":"2012-08-31T18:01:26.028Z","type":"join"}
{"nick":"TooTallNate","message":"bnoordhuis: npm_config_nodedir=$dir npm update?","date":"2012-08-31T18:01:28.105Z","type":"message"}
{"nick":"bnoordhuis","message":"hurray, that works!","date":"2012-08-31T18:02:14.549Z","type":"message"}
{"nick":"bnoordhuis","message":"TooTallNate: maybe add that to the --nodedir error message?","date":"2012-08-31T18:02:40.411Z","type":"message"}
{"nick":"bnoordhuis","message":"i mean, it's not very discoverable","date":"2012-08-31T18:02:46.160Z","type":"message"}
{"nick":"TooTallNate","message":"bnoordhuis: it's an npm bug","date":"2012-08-31T18:02:52.004Z","type":"message"}
{"nick":"TooTallNate","message":"it's supposed to set those config vars","date":"2012-08-31T18:02:57.432Z","type":"message"}
{"nick":"piscisaureus_","message":"oh my","date":"2012-08-31T18:02:57.786Z","type":"message"}
{"nick":"piscisaureus_","message":"httpsys is so fast...","date":"2012-08-31T18:03:01.976Z","type":"message"}
{"nick":"TooTallNate","message":"it does for \"npm install\"","date":"2012-08-31T18:03:09.185Z","type":"message"}
{"nick":"bnoordhuis","message":"ah okay","date":"2012-08-31T18:03:12.880Z","type":"message"}
{"nick":"TooTallNate","message":"but not \"npm update\" apparently","date":"2012-08-31T18:03:14.083Z","type":"message"}
{"nick":"TooTallNate","message":"isaacs: ^","date":"2012-08-31T18:03:16.446Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: 165.225.128.181 is the master server?","date":"2012-08-31T18:04:52.490Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: yeah, I think so","date":"2012-08-31T18:05:05.175Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: why are you asking?","date":"2012-08-31T18:05:17.726Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: just curious. i'm stracing what vock does","date":"2012-08-31T18:05:32.734Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-08-31T18:05:38.521Z","type":"message"}
{"nick":"indutny","message":"nice","date":"2012-08-31T18:05:39.602Z","type":"message"}
{"nick":"bnoordhuis","message":"what's with the 'Opponent appeared' message btw? :)","date":"2012-08-31T18:05:42.799Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: what do you mean?","date":"2012-08-31T18:06:02.306Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: server notifies client that new peer is available on the list","date":"2012-08-31T18:06:17.518Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: there're several problems with that","date":"2012-08-31T18:06:23.866Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: that's what it prints when i type `vock connect libuv`","date":"2012-08-31T18:06:31.534Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: i.e. disconnected peers ain't removing from list","date":"2012-08-31T18:06:33.462Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ^^","date":"2012-08-31T18:06:38.603Z","type":"message"}
{"nick":"indutny","message":"list itself will be removed after some timeout","date":"2012-08-31T18:07:08.312Z","type":"message"}
{"nick":"indutny","message":"if noone will try to connect to it","date":"2012-08-31T18:07:13.438Z","type":"message"}
{"nick":"bnoordhuis","message":"so... of how many botnets am i part now?","date":"2012-08-31T18:07:27.313Z","type":"message"}
{"nick":"piscisaureus_","message":"hey core people","date":"2012-08-31T18:08:00.873Z","type":"message"}
{"nick":"piscisaureus_","message":"would it be possible to channel data from libuv straight into the http parser","date":"2012-08-31T18:08:19.917Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: at least one","date":"2012-08-31T18:08:25.295Z","type":"message"}
{"nick":"piscisaureus_","message":"without going through js?","date":"2012-08-31T18:08:25.905Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: sure. but not atm","date":"2012-08-31T18:08:35.172Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: sure, but why?","date":"2012-08-31T18:08:38.197Z","type":"message"}
{"nick":"piscisaureus_","message":"well","date":"2012-08-31T18:08:42.647Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: we'll loose a lot of flexibility","date":"2012-08-31T18:08:47.727Z","type":"message"}
{"nick":"piscisaureus_","message":"so I am benchmarking this httpsys thing","date":"2012-08-31T18:08:49.076Z","type":"message"}
{"nick":"piscisaureus_","message":"and it's much faster","date":"2012-08-31T18:08:57.978Z","type":"message"}
{"nick":"bnoordhuis","message":"well duh","date":"2012-08-31T18:09:01.617Z","type":"message"}
{"nick":"indutny","message":"fuck it","date":"2012-08-31T18:09:16.107Z","type":"message"}
{"nick":"indutny","message":"honestly :D","date":"2012-08-31T18:09:18.475Z","type":"message"}
{"nick":"bnoordhuis","message":"tux is much faster than any user mode http server too","date":"2012-08-31T18:09:23.279Z","type":"message"}
{"nick":"piscisaureus_","message":"it seems mostly related to the fact that the headers just arrive","date":"2012-08-31T18:09:27.575Z","type":"message"}
{"nick":"piscisaureus_","message":"tux?","date":"2012-08-31T18:09:34.172Z","type":"message"}
{"nick":"bnoordhuis","message":"kernel mode http server","date":"2012-08-31T18:09:38.682Z","type":"message"}
{"nick":"piscisaureus_","message":"ah, roght","date":"2012-08-31T18:09:42.300Z","type":"message"}
{"nick":"piscisaureus_","message":"*right","date":"2012-08-31T18:09:44.451Z","type":"message"}
{"nick":"piscisaureus_","message":"but I don't think it has much to do with kernel mode","date":"2012-08-31T18:09:50.874Z","type":"message"}
{"nick":"piscisaureus_","message":"more the fact that there are less roundtrips between js and c","date":"2012-08-31T18:10:05.121Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2012-08-31T18:10:08.922Z","type":"quit"}
{"nick":"bnoordhuis","message":"well...","date":"2012-08-31T18:10:09.463Z","type":"message"}
{"nick":"bnoordhuis","message":"if i understand what httpsys does right","date":"2012-08-31T18:10:15.944Z","type":"message"}
{"nick":"bnoordhuis","message":"it doesn't copy data from and to user space","date":"2012-08-31T18:10:22.894Z","type":"message"}
{"nick":"bnoordhuis","message":"that's a pretty big win","date":"2012-08-31T18:10:27.506Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: roundtrips are bad","date":"2012-08-31T18:10:38.701Z","type":"message"}
{"nick":"piscisaureus_","message":"well of course it has to copy data to userspace","date":"2012-08-31T18:10:47.175Z","type":"message"}
{"nick":"piscisaureus_","message":"or maybe it maps it into the user's address space - that could be","date":"2012-08-31T18:11:04.850Z","type":"message"}
{"nick":"indutny","message":"I think copying 1kb of data is not as slow","date":"2012-08-31T18:11:14.703Z","type":"message"}
{"nick":"piscisaureus_","message":"I don't think so either","date":"2012-08-31T18:11:21.645Z","type":"message"}
{"nick":"piscisaureus_","message":"also, this is also supported with normal sockets on windows","date":"2012-08-31T18:11:29.920Z","type":"message"}
{"nick":"piscisaureus_","message":"but this optimization is disabled because the difference was too small to care about","date":"2012-08-31T18:11:46.658Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2012-08-31T18:12:01.491Z","type":"message"}
{"nick":"indutny","message":"I just thought that I can parasite on torrent's dht network","date":"2012-08-31T18:12:11.633Z","type":"message"}
{"nick":"indutny","message":"ahahhaha","date":"2012-08-31T18:12:16.888Z","type":"message"}
{"nick":"indutny","action":"thinks about evil plan","date":"2012-08-31T18:12:21.691Z","type":"action"}
{"nick":"bnoordhuis","message":"piscisaureus_: just so we're talking about the same thing","date":"2012-08-31T18:12:51.294Z","type":"message"}
{"nick":"bnoordhuis","message":"http.sys is that you tell the kernel \"give me only data for these urls\", right?","date":"2012-08-31T18:13:09.630Z","type":"message"}
{"nick":"piscisaureus_","message":"yes","date":"2012-08-31T18:13:16.491Z","type":"message"}
{"nick":"piscisaureus_","message":"and it also parses the headers for you","date":"2012-08-31T18:13:21.659Z","type":"message"}
{"nick":"bnoordhuis","message":"right, i was just about to type that","date":"2012-08-31T18:13:34.130Z","type":"message"}
{"nick":"mjr_","message":"indutny: no good progress on the crashes, but we did observe that your slab allocator patch seems to make the problem go away.","date":"2012-08-31T18:13:34.663Z","type":"message"}
{"nick":"indutny","message":"mjr_: aha","date":"2012-08-31T18:13:46.872Z","type":"message"}
{"nick":"indutny","message":"ok, I can tell you one thing now","date":"2012-08-31T18:13:54.728Z","type":"message"}
{"nick":"indutny","message":"ok, so this is that 0x10000 allocation","date":"2012-08-31T18:15:03.103Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, 64K - very recognizable","date":"2012-08-31T18:15:30.418Z","type":"message"}
{"nick":"bnoordhuis","message":"must be a stream_wrap or udp_wrap thing, right?","date":"2012-08-31T18:15:46.887Z","type":"message"}
{"nick":"mjr_","message":"I think stream wrap is in the stack, yes","date":"2012-08-31T18:16:01.060Z","type":"message"}
{"nick":"mjr_","message":"https://gist.github.com/3539304","date":"2012-08-31T18:16:07.822Z","type":"message"}
{"nick":"indutny","message":"noope","date":"2012-08-31T18:16:14.032Z","type":"message"}
{"nick":"indutny","message":"this is not related to it","date":"2012-08-31T18:16:20.471Z","type":"message"}
{"nick":"indutny","message":"tls.js is allocating this buffer","date":"2012-08-31T18:16:23.594Z","type":"message"}
{"nick":"indutny","message":"a lot","date":"2012-08-31T18:16:24.734Z","type":"message"}
{"nick":"indutny","message":"tls.js:443","date":"2012-08-31T18:16:38.197Z","type":"message"}
{"nick":"dshaw_","date":"2012-08-31T18:16:48.555Z","type":"join"}
{"nick":"mjr_","message":"line 443, how ominous","date":"2012-08-31T18:16:54.120Z","type":"message"}
{"nick":"bnoordhuis","message":"quite so","date":"2012-08-31T18:17:08.264Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: so it's a plain OOM?","date":"2012-08-31T18:17:21.574Z","type":"message"}
{"nick":"indutny","message":"not sure","date":"2012-08-31T18:17:26.252Z","type":"message"}
{"nick":"indutny","message":"OOM should not happen","date":"2012-08-31T18:17:31.619Z","type":"message"}
{"nick":"bnoordhuis","message":"but why then is it throwing std::bad_alloc?","date":"2012-08-31T18:17:55.467Z","type":"message"}
{"nick":"indutny","message":"it's forgetting buffers that was allocated","date":"2012-08-31T18:17:55.780Z","type":"message"}
{"nick":"indutny","message":"it seems that GC doesn't work well","date":"2012-08-31T18:18:00.583Z","type":"message"}
{"nick":"indutny","message":"or","date":"2012-08-31T18:18:11.317Z","type":"message"}
{"nick":"indutny","message":"callbacks on buffer destruction in C++ isn't called","date":"2012-08-31T18:18:20.855Z","type":"message"}
{"nick":"dshaw_","reason":"Client Quit","date":"2012-08-31T18:18:32.445Z","type":"quit"}
{"nick":"indutny","message":"but I can hardly understand why OOM happens and core dump is so small","date":"2012-08-31T18:18:36.793Z","type":"message"}
{"nick":"tjfontaine","message":"is the slab allocator used for generic Buffers?","date":"2012-08-31T18:18:46.782Z","type":"message"}
{"nick":"mjr_","message":"do std::bad_alloc objects have more ways to inspect them that tell us what the actual problem is?","date":"2012-08-31T18:19:00.295Z","type":"message"}
{"nick":"indutny","message":"mjr_: so with my patch those allocation happens","date":"2012-08-31T18:19:43.990Z","type":"message"}
{"nick":"indutny","message":"but much more rarely","date":"2012-08-31T18:19:47.630Z","type":"message"}
{"nick":"indutny","message":"mjr_: can you create some sort of chart/plot of memory usage","date":"2012-08-31T18:20:05.081Z","type":"message"}
{"nick":"indutny","message":"before crash","date":"2012-08-31T18:20:08.497Z","type":"message"}
{"nick":"bnoordhuis","message":"mjr_: another thing that might be of interest is if V8::AdjustAmountOfExternalAllocatedMemory() is called or not","date":"2012-08-31T18:20:40.121Z","type":"message"}
{"nick":"mjr_","message":"yeah, we do, but it's not high resolution enough to see the pattern.  ","date":"2012-08-31T18:20:40.673Z","type":"message"}
{"nick":"indutny","message":"mjr_: so it's crashes really soon","date":"2012-08-31T18:20:58.978Z","type":"message"}
{"nick":"tjfontaine","message":"does ::jsstack in mdb return anything useful?","date":"2012-08-31T18:21:22.761Z","type":"message"}
{"nick":"mjr_","message":"Well, we sample every 60 seconds, and that might not be fast enough to catch a quick ramp up in memory.","date":"2012-08-31T18:21:23.407Z","type":"message"}
{"nick":"indutny","message":"hah","date":"2012-08-31T18:21:40.437Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: nice idea","date":"2012-08-31T18:21:43.592Z","type":"message"}
{"nick":"bnoordhuis","message":"looking at the backtrace it should hit the code path that adjust v8's idea of external memory","date":"2012-08-31T18:21:52.518Z","type":"message"}
{"nick":"mjr_","message":"tjfontaine: something about our platform isn't the right version, and we can't run v8.o right now.  Waiting on Joyent for a fix for that.","date":"2012-08-31T18:22:01.035Z","type":"message"}
{"nick":"tjfontaine","message":"mjr_: ok","date":"2012-08-31T18:22:09.269Z","type":"message"}
{"nick":"mjr_","message":"bnoordhuis: I don't see it in the stack.","date":"2012-08-31T18:22:10.503Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: it won't happen in many places","date":"2012-08-31T18:22:19.754Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: where free callback is specified, for example","date":"2012-08-31T18:22:27.461Z","type":"message"}
{"nick":"bnoordhuis","message":"mjr_: it gets called after the memory has been allocated","date":"2012-08-31T18:22:50.670Z","type":"message"}
{"nick":"bnoordhuis","message":"mjr_: but if it never gets called at run-time, something's wrong","date":"2012-08-31T18:23:03.091Z","type":"message"}
{"nick":"mjr_","message":"We could rebuild with some extra logging if that would help.","date":"2012-08-31T18:23:56.625Z","type":"message"}
{"nick":"mjr_","message":"But it sure is interesting that with indutny's slab patch that it doesn't seem to crash.  ","date":"2012-08-31T18:24:16.764Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: what patch is that?","date":"2012-08-31T18:24:24.196Z","type":"message"}
{"nick":"mjr_","message":"Perhaps we haven't let it run long enough to see the crash, but it certainly doesn't crash as fast.","date":"2012-08-31T18:24:36.798Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: commit f210530f46e8ddbd9e7cc0d0c37778888c27f526","date":"2012-08-31T18:24:38.754Z","type":"message"}
{"nick":"indutny","message":"mjr_: it's using shared 10mb buffer","date":"2012-08-31T18:24:52.890Z","type":"message"}
{"nick":"indutny","message":"instead of allocating a lot of 0x10000 buffers","date":"2012-08-31T18:25:00.408Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, right","date":"2012-08-31T18:25:08.427Z","type":"message"}
{"nick":"indutny","message":"btw, 10mb is really questionable amount of memory :D","date":"2012-08-31T18:25:20.107Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: why?","date":"2012-08-31T18:26:19.571Z","type":"message"}
{"nick":"mjr_","message":"Oh, we did also confirm that rebuilding node with the libc allocator instead of libumem does not fix the crashing.","date":"2012-08-31T18:26:20.538Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: too much for devices","date":"2012-08-31T18:26:29.449Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: oh, i don't worry about that. mmap magic takes care of that","date":"2012-08-31T18:26:51.679Z","type":"message"}
{"nick":"bnoordhuis","message":"until it's actually used it's only virtual","date":"2012-08-31T18:27:08.939Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: btw, I don't see how external memory can affect this","date":"2012-08-31T18:28:41.974Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: it seems to be a forcing GC in some situations","date":"2012-08-31T18:28:58.932Z","type":"message"}
{"nick":"indutny","message":"and that's all that it can affect","date":"2012-08-31T18:29:03.680Z","type":"message"}
{"nick":"bnoordhuis","message":"comparing the stack trace with the code suggests that it's a regular OOM error","date":"2012-08-31T18:30:21.917Z","type":"message"}
{"nick":"bnoordhuis","message":"so... why does fedor's patch fix the issue?","date":"2012-08-31T18:30:38.794Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-08-31T18:30:51.589Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2012-08-31T18:30:53.429Z","type":"message"}
{"nick":"indutny","message":"need to get some groceries","date":"2012-08-31T18:30:58.631Z","type":"message"}
{"nick":"mjr_","message":"bnoordhuis: I think we are mangling the process heap somehow","date":"2012-08-31T18:31:19.474Z","type":"message"}
{"nick":"mjr_","message":"It's operator new that's failing, and the allocation size looks reasonable.  The heap is 400MB, and there's plenty of free memory on the system.","date":"2012-08-31T18:31:50.960Z","type":"message"}
{"nick":"mjr_","message":"So the indutny slab just makes fewer or differently shaped allocations from the process heap, and that works around the underlying issue.","date":"2012-08-31T18:32:21.756Z","type":"message"}
{"nick":"mjr_","message":"While also making it slightly faster. :)","date":"2012-08-31T18:32:32.555Z","type":"message"}
{"nick":"mjr_","message":"That's my theory anyway.","date":"2012-08-31T18:32:53.536Z","type":"message"}
{"nick":"bnoordhuis","message":"mjr_: do you have the possibility to dtrace on of those processes until it dies?","date":"2012-08-31T18:33:11.859Z","type":"message"}
{"nick":"bnoordhuis","message":"my working theory is that a mmap() or brk() syscall fails","date":"2012-08-31T18:33:26.756Z","type":"message"}
{"nick":"mjr_","message":"Oh sure.","date":"2012-08-31T18:33:31.937Z","type":"message"}
{"nick":"mjr_","message":"What do you want to trace?","date":"2012-08-31T18:33:36.545Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess those two syscalls","date":"2012-08-31T18:34:04.213Z","type":"message"}
{"nick":"bnoordhuis","message":"dap: ping","date":"2012-08-31T18:34:09.975Z","type":"message"}
{"nick":"papertigers","date":"2012-08-31T18:34:18.481Z","type":"join"}
{"nick":"bnoordhuis","message":"maybe dap knows if there's any extra magic going on inside smartos's malloc","date":"2012-08-31T18:34:48.090Z","type":"message"}
{"nick":"mjr_","message":"bnoordhuis: so you want to see if mmap or brk/sbrk fail right before the bad_alloc?","date":"2012-08-31T18:34:48.971Z","type":"message"}
{"nick":"bnoordhuis","message":"mjr_: yes","date":"2012-08-31T18:34:54.324Z","type":"message"}
{"nick":"mjr_","message":"OK, but note that this also fails if we take libumem out of the picture.","date":"2012-08-31T18:35:12.120Z","type":"message"}
{"nick":"bnoordhuis","message":"mjr_: hm, okay","date":"2012-08-31T18:35:19.040Z","type":"message"}
{"nick":"bnoordhuis","message":"my reasoning is this:","date":"2012-08-31T18:35:25.487Z","type":"message"}
{"nick":"mjr_","message":"In which case I guess dtrace on those system calls is a good idea.","date":"2012-08-31T18:35:40.598Z","type":"message"}
{"nick":"bnoordhuis","message":"if large(ish) allocations are mmap'd in but free() somehow forgets to unmap them","date":"2012-08-31T18:35:48.555Z","type":"message"}
{"nick":"dap","message":"Yo.","date":"2012-08-31T18:35:52.036Z","type":"message"}
{"nick":"bnoordhuis","message":"you'd eventually run out of address space","date":"2012-08-31T18:35:55.710Z","type":"message"}
{"nick":"bnoordhuis","message":"in that case VMEM would be large as well though","date":"2012-08-31T18:36:06.950Z","type":"message"}
{"nick":"bnoordhuis","message":"dap: hey","date":"2012-08-31T18:36:08.345Z","type":"message"}
{"nick":"mjr_","message":"Hey dap, we are just trying to decipher our bad_alloc on smartos issue.","date":"2012-08-31T18:36:15.895Z","type":"message"}
{"nick":"mjr_","message":"From here:  https://gist.github.com/3539304","date":"2012-08-31T18:36:22.223Z","type":"message"}
{"nick":"bnoordhuis","message":"do you know what malloc() on smartos uses to allocate large chunks?","date":"2012-08-31T18:36:23.454Z","type":"message"}
{"nick":"bnoordhuis","message":"mmap, brk, something else?","date":"2012-08-31T18:36:32.624Z","type":"message"}
{"nick":"dap","message":"Which implementation? libumem?","date":"2012-08-31T18:36:33.293Z","type":"message"}
{"nick":"bnoordhuis","message":"libumem and libc","date":"2012-08-31T18:36:45.370Z","type":"message"}
{"nick":"dap","message":"Very likely brk, but easy to verify with DTrace.","date":"2012-08-31T18:36:50.656Z","type":"message"}
{"nick":"papertigers","message":"dap: what do you want me to trace? syscall::brk: ?","date":"2012-08-31T18:37:21.095Z","type":"message"}
{"nick":"bnoordhuis","message":"mjr_: okay, let's take the safe route: mmap, munmap, mprotect, brk","date":"2012-08-31T18:37:22.201Z","type":"message"}
{"nick":"dshaw_","date":"2012-08-31T18:37:34.623Z","type":"join"}
{"nick":"mjr_","message":"Breaking news: it turns out that even with the indutny slab patch that we still crash from bad_alloc, but we stayed up 16 hours instead of 10 minutes.","date":"2012-08-31T18:37:48.564Z","type":"message"}
{"nick":"bnoordhuis","message":"well, it's an improvement :)","date":"2012-08-31T18:37:59.197Z","type":"message"}
{"nick":"dap","message":"dtrace -n 'syscall::brk:return/pid == $1/{ trace(arg1); }'","date":"2012-08-31T18:38:18.384Z","type":"message"}
{"nick":"dap","message":"err","date":"2012-08-31T18:38:22.839Z","type":"message"}
{"nick":"dap","message":"dtrace -n 'syscall::brk:return/pid == $1/{ trace(arg1); }' YOURPID","date":"2012-08-31T18:38:29.109Z","type":"message"}
{"nick":"dap","message":"If you see anything non-zero, brk() failed.","date":"2012-08-31T18:38:58.800Z","type":"message"}
{"nick":"dap","message":"If you're getting a ton, of course, aggregate instead of tracing each one.","date":"2012-08-31T18:39:07.032Z","type":"message"}
{"nick":"mjr_","message":"Stack of crash with crypto slab patch applied:","date":"2012-08-31T18:39:32.540Z","type":"message"}
{"nick":"mjr_","message":"https://gist.github.com/3539304#file_crypto_slab_crash.txt","date":"2012-08-31T18:39:33.370Z","type":"message"}
{"nick":"mjr_","message":"Our v8.o is messed up, so we can't get JS function names for those JS stack frames, sorry.","date":"2012-08-31T18:40:02.945Z","type":"message"}
{"nick":"`3rdEden","reason":"Quit: Leaving...","date":"2012-08-31T18:40:23.385Z","type":"quit"}
{"nick":"bnoordhuis","message":"mjr_: ClientHelloParser? you're using fedor's async tls session patch?","date":"2012-08-31T18:41:14.308Z","type":"message"}
{"nick":"mjr_","message":"bnoordhuis: oh yes, we are also using that.","date":"2012-08-31T18:41:30.081Z","type":"message"}
{"nick":"papertigers","message":"dap cool I will run that until the next crash","date":"2012-08-31T18:41:36.912Z","type":"message"}
{"nick":"dap","message":"papertigers: you may want to make sure it's printing something to verify the claim that it's using brk() at all.","date":"2012-08-31T18:42:04.238Z","type":"message"}
{"nick":"bnoordhuis","message":"mjr_: do you also get bad_alloc without that patch?","date":"2012-08-31T18:42:09.584Z","type":"message"}
{"nick":"mjr_","message":"This is part of an experiment to increase our HTTPS capacity, and it curiously also increased our resilience to the main bad_alloc crash.","date":"2012-08-31T18:42:11.102Z","type":"message"}
{"nick":"joshthecoder","date":"2012-08-31T18:42:25.346Z","type":"join"}
{"nick":"papertigers","message":"brk was returning with 0 a bunch, so I @[arg1] = count()","date":"2012-08-31T18:42:30.576Z","type":"message"}
{"nick":"dap","message":"Cool.","date":"2012-08-31T18:42:35.802Z","type":"message"}
{"nick":"mjr_","message":"bnoordhuis: yes, with stock node 0.8, we get the bad_alloc in a small number of minutes.  With Fedor's TLS event patch and slab patch, we got a crash only after 16 hours.","date":"2012-08-31T18:42:58.846Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, good","date":"2012-08-31T18:43:15.967Z","type":"message"}
{"nick":"bnoordhuis","message":"i think tracing syscalls is a good first step","date":"2012-08-31T18:43:41.887Z","type":"message"}
{"nick":"mjr_","message":"In case anybody is wondering, papertigers works at Voxer and is a SmartOS person.","date":"2012-08-31T18:43:50.106Z","type":"message"}
{"nick":"bnoordhuis","message":"hi papertigers","date":"2012-08-31T18:44:00.566Z","type":"message"}
{"nick":"papertigers","message":"bnoordhuis: hey","date":"2012-08-31T18:44:10.184Z","type":"message"}
{"nick":"papertigers","message":"dap: ","date":"2012-08-31T18:45:45.967Z","type":"message"}
{"nick":"papertigers","message":"-1                1","date":"2012-08-31T18:45:48.454Z","type":"message"}
{"nick":"papertigers","message":"                0             3329","date":"2012-08-31T18:45:50.375Z","type":"message"}
{"nick":"papertigers","message":"got one -1","date":"2012-08-31T18:45:54.005Z","type":"message"}
{"nick":"dap","message":"mjr_, papertigers: It would be surprising if malloc() failed without brk returning −1, and if malloc failed and you were NOT out of virtual memory (i.e. you're not at the 4G limit for a 32-bit process), then I'd assume you were out of swap (anonymous memory).","date":"2012-08-31T18:46:03.614Z","type":"message"}
{"nick":"papertigers","message":"dap: do you want me to trace the errno","date":"2012-08-31T18:46:18.341Z","type":"message"}
{"nick":"mjr_","message":"dap: that assumption seems reasonable, except that with node 0.6, we run for days.","date":"2012-08-31T18:46:34.696Z","type":"message"}
{"nick":"papertigers","message":"dap: if you do a vmstat 1 swap and free are not 0","date":"2012-08-31T18:46:42.161Z","type":"message"}
{"nick":"papertigers","message":"or even close","date":"2012-08-31T18:46:53.860Z","type":"message"}
{"nick":"dap","message":"I don't know what vmstat is reporting — if that's system-wide or for your zone","date":"2012-08-31T18:47:42.393Z","type":"message"}
{"nick":"papertigers","message":"that fail was reflected in ::umastat as well showing one failed alloc ","date":"2012-08-31T18:47:48.900Z","type":"message"}
{"nick":"dap","message":"CA shows you anonymous memory available and used (that's swap, in this case)","date":"2012-08-31T18:48:26.776Z","type":"message"}
{"nick":"papertigers","message":"Good point.  But switching off of node 8 makes the crashes go away.  If it were bottlenecked on that wouldnt we still see crashes","date":"2012-08-31T18:48:34.006Z","type":"message"}
{"nick":"dap","message":"I'm looking up the kstat you can look at","date":"2012-08-31T18:48:34.605Z","type":"message"}
{"nick":"dap","message":"kstat memory_cap:::","date":"2012-08-31T18:50:03.950Z","type":"message"}
{"nick":"dap","message":"swap and swapcap are the numbers you want to look at, shortly before it crashes","date":"2012-08-31T18:50:16.516Z","type":"message"}
{"nick":"dap","message":"what's swapcap now? (that's static.)","date":"2012-08-31T18:50:29.085Z","type":"message"}
{"nick":"papertigers","message":"dap: https://gist.github.com/e5732b50c20f45311da2","date":"2012-08-31T18:51:09.169Z","type":"message"}
{"nick":"bradleymeck","date":"2012-08-31T18:51:31.391Z","type":"join"}
{"nick":"mjr_","message":"seems like plenty","date":"2012-08-31T18:52:51.173Z","type":"message"}
{"nick":"jay_","date":"2012-08-31T18:53:06.695Z","type":"join"}
{"nick":"jay_","message":"good day","date":"2012-08-31T18:53:40.222Z","type":"message"}
{"nick":"jay_","message":"I'm trying to figure out how to use ngx_queue to replace stl queue","date":"2012-08-31T18:54:05.319Z","type":"message"}
{"nick":"jay_","message":"Having a bit of trouble following how to attach/detach data to a queue item","date":"2012-08-31T18:54:25.106Z","type":"message"}
{"nick":"jay_","message":"Is there a simple example of this somewhere?","date":"2012-08-31T18:54:43.303Z","type":"message"}
{"nick":"dap","message":"Yeah, I'd guess you'd be seeing anon_alloc_fails if that were the problem, too.","date":"2012-08-31T18:54:45.323Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2012-08-31T18:54:51.166Z","type":"quit"}
{"nick":"papertigers","message":"dap, I am running \"while true; do kstat -p memory_cap:::swap && sleep 2; done\" and I don't really see it dip","date":"2012-08-31T18:54:54.621Z","type":"message"}
{"nick":"jay_","message":"Basically I'm trying to create a queue<uv_work_t>","date":"2012-08-31T18:55:06.455Z","type":"message"}
{"nick":"dap","message":"papertigers: it would go up, not down","date":"2012-08-31T18:55:10.912Z","type":"message"}
{"nick":"dap","message":"Yeah, my next step would probably be to grab errno when brk() fails.","date":"2012-08-31T18:55:34.580Z","type":"message"}
{"nick":"papertigers","message":"dap oops yeah, well it has gone done from 58 to 56","date":"2012-08-31T18:55:35.545Z","type":"message"}
{"nick":"brson","reason":"Quit: leaving","date":"2012-08-31T18:55:48.032Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-08-31T18:56:03.942Z","type":"quit"}
{"nick":"loladiro","date":"2012-08-31T18:58:23.316Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2012-08-31T18:59:49.830Z","type":"quit"}
{"nick":"tjfontaine","message":"jay_: ngx_queue_data(<queue entry>, <containing type>, <name of ngx_queue_t in containing type>)? basically you add ngx_queue_t to your data type, not vice versa","date":"2012-08-31T19:00:14.508Z","type":"message"}
{"nick":"bnoordhuis","message":"jay_: you'd create a struct work_queue { uv_work_t work_req; ngx_queue_t queue; }","date":"2012-08-31T19:01:08.414Z","type":"message"}
{"nick":"jay_","message":"thank you tjfontaine, that makes things a little more clear","date":"2012-08-31T19:01:11.432Z","type":"message"}
{"nick":"jay_","message":"Right so then I would instantiate work_queue and call ngx_queue_insert_tail(&queue, &work_queue_item)","date":"2012-08-31T19:03:10.693Z","type":"message"}
{"nick":"jay_","message":"and later ngx_queue_data(&work_queue_item->queue, work_queue, queue)?","date":"2012-08-31T19:04:17.903Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-08-31T19:04:52.414Z","type":"quit"}
{"nick":"jay_","message":"later being after I dequeue work_queue_item->queue","date":"2012-08-31T19:04:53.217Z","type":"message"}
{"nick":"betta","date":"2012-08-31T19:05:08.124Z","type":"join"}
{"nick":"jay_","message":"that helps a lot in understanding the code I was reading, ty","date":"2012-08-31T19:05:25.806Z","type":"message"}
{"nick":"bnoordhuis","message":"jay_: almost","date":"2012-08-31T19:07:15.339Z","type":"message"}
{"nick":"betta","message":"hi","date":"2012-08-31T19:07:24.003Z","type":"message"}
{"nick":"bnoordhuis","message":"your work_cb gets a uv_work_t* req arg","date":"2012-08-31T19:07:34.149Z","type":"message"}
{"nick":"bnoordhuis","message":"you use that to look up the embedding struct like so: struct work_queue* q = ngx_queue_data(req, struct work_queue, work_req)","date":"2012-08-31T19:08:04.594Z","type":"message"}
{"nick":"bnoordhuis","message":"frankly, all ngx_queue_data does is subtract some bytes of the req pointer and cast it to the proper type","date":"2012-08-31T19:08:38.524Z","type":"message"}
{"nick":"bnoordhuis","message":"*from the req pointer","date":"2012-08-31T19:08:52.642Z","type":"message"}
{"nick":"bnoordhuis","message":"betta: hi","date":"2012-08-31T19:08:56.193Z","type":"message"}
{"nick":"betta","message":"i have also a question if you don't mind :)","date":"2012-08-31T19:09:18.361Z","type":"message"}
{"nick":"bnoordhuis","message":"sure, go ahead","date":"2012-08-31T19:09:23.107Z","type":"message"}
{"nick":"betta","message":"i'm trying to remotely quit a libuv event loop and i tried to do this by using ngx_queue_foreach and uv_unref()","date":"2012-08-31T19:09:27.468Z","type":"message"}
{"nick":"betta","message":"is it safe to do it like this?","date":"2012-08-31T19:09:29.521Z","type":"message"}
{"nick":"bnoordhuis","message":"betta: define 'remotely quit'?","date":"2012-08-31T19:10:42.366Z","type":"message"}
{"nick":"betta","message":"i'm using libuv in a seperate thread together with a GUI which has it's own event loop","date":"2012-08-31T19:11:30.109Z","type":"message"}
{"nick":"betta","message":"if the GUI event loop quits the libuv event loop should do that too","date":"2012-08-31T19:11:52.447Z","type":"message"}
{"nick":"indutny","message":"betta: better use semaphore there","date":"2012-08-31T19:12:10.206Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: no, you need to wake up the event loop","date":"2012-08-31T19:12:22.487Z","type":"message"}
{"nick":"indutny","message":"betta: interacting with libuv's handles from other thread is not safe","date":"2012-08-31T19:12:27.453Z","type":"message"}
{"nick":"bnoordhuis","message":"betta: i'd use a uv_async_t and uv_run_once in a loop","date":"2012-08-31T19:12:33.957Z","type":"message"}
{"nick":"indutny","message":"ah, yeah, that should be even better","date":"2012-08-31T19:12:46.392Z","type":"message"}
{"nick":"bnoordhuis","message":"when the async cb fires, set a flag that exits the loop","date":"2012-08-31T19:12:58.349Z","type":"message"}
{"nick":"bnoordhuis","message":"from the gui thread, call uv_async_send() to make the cb fire","date":"2012-08-31T19:13:22.331Z","type":"message"}
{"nick":"betta","message":"i'm already using uv_async_t for the notification","date":"2012-08-31T19:13:27.204Z","type":"message"}
{"nick":"bnoordhuis","message":"betta: you can use more than one async handle","date":"2012-08-31T19:13:59.953Z","type":"message"}
{"nick":"bnoordhuis","message":"use one for notifications, the other for exiting","date":"2012-08-31T19:14:09.359Z","type":"message"}
{"nick":"bnoordhuis","message":"or combine them, the basic concept remains the same: wake up thread, set flag, exit from loop","date":"2012-08-31T19:14:39.837Z","type":"message"}
{"nick":"tjfontaine","message":"what if in the uv_async_t he uv_walk'd and unref'd?","date":"2012-08-31T19:14:58.854Z","type":"message"}
{"nick":"betta","message":"i'm still a beginner so i still have a few problems, but regarding async notifications i already understood how it's supposed to be (i think)","date":"2012-08-31T19:15:09.886Z","type":"message"}
{"nick":"betta","message":"tjfontaine i'm doing exactly this at the moment","date":"2012-08-31T19:15:58.931Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: it'll work but it takes more work to implement","date":"2012-08-31T19:16:05.914Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2012-08-31T19:16:09.181Z","type":"message"}
{"nick":"betta","message":"and i get a memory leak with windows if i do it with uv_unref :/","date":"2012-08-31T19:16:44.520Z","type":"message"}
{"nick":"papertigers","message":"dap bnoordhuis I added a comment with the ustack from when brk returns -1.  Its not useful though https://gist.github.com/e5732b50c20f45311da2#comments","date":"2012-08-31T19:18:15.194Z","type":"message"}
{"nick":"betta","message":"but i will try using uv_run_once - thanks for the tip :)","date":"2012-08-31T19:18:17.962Z","type":"message"}
{"nick":"papertigers","message":"there are symbols for when it returns 0 however","date":"2012-08-31T19:19:04.615Z","type":"message"}
{"nick":"mjr_","message":"wow, look at those awesome memory addresses","date":"2012-08-31T19:20:25.395Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, so it really is an OOM error","date":"2012-08-31T19:20:52.757Z","type":"message"}
{"nick":"bnoordhuis","message":"the question now becomes why it triggers with v0.8 and not with v0.6","date":"2012-08-31T19:21:03.455Z","type":"message"}
{"nick":"bnoordhuis","message":"papertigers: do you know what VMEM looks like at the time of the bad_alloc?","date":"2012-08-31T19:21:42.449Z","type":"message"}
{"nick":"papertigers","message":"bnoordhuis: how would I grab it","date":"2012-08-31T19:24:53.447Z","type":"message"}
{"nick":"ryah","reason":"Ping timeout: 248 seconds","date":"2012-08-31T19:27:41.201Z","type":"quit"}
{"nick":"russfrank","reason":"Ping timeout: 265 seconds","date":"2012-08-31T19:27:50.101Z","type":"quit"}
{"nick":"bnoordhuis","message":"papertigers: poor man's solution is logging the output of `ps -o rss,vsz -p <pid> | tail -1` every couple of seconds","date":"2012-08-31T19:29:08.015Z","type":"message"}
{"nick":"bnoordhuis","message":"maybe smartos has a nicer facility for that but i don't know it :)","date":"2012-08-31T19:29:35.253Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: logging the same from dtrace","date":"2012-08-31T19:29:45.833Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-08-31T19:29:46.475Z","type":"message"}
{"nick":"indutny","message":"I wonder how much memory is using v8 before the crash","date":"2012-08-31T19:31:51.368Z","type":"message"}
{"nick":"indutny","message":"in percents of total memory","date":"2012-08-31T19:31:55.031Z","type":"message"}
{"nick":"loladiro","date":"2012-08-31T19:32:24.148Z","type":"join"}
{"nick":"betta","message":"ok now i'm certain that either libuv leaks memory or uv_loop_delete doesn't clean up everything...","date":"2012-08-31T19:33:53.945Z","type":"message"}
{"nick":"bnoordhuis","message":"betta: what platform?","date":"2012-08-31T19:34:38.365Z","type":"message"}
{"nick":"betta","message":"windows","date":"2012-08-31T19:34:42.170Z","type":"message"}
{"nick":"bradleymeck","reason":"Ping timeout: 245 seconds","date":"2012-08-31T19:34:43.039Z","type":"quit"}
{"nick":"bnoordhuis","message":"what version of libuv?","date":"2012-08-31T19:35:01.332Z","type":"message"}
{"nick":"betta","message":"current master","date":"2012-08-31T19:35:06.607Z","type":"message"}
{"nick":"bnoordhuis","message":"ah okay","date":"2012-08-31T19:35:15.184Z","type":"message"}
{"nick":"bnoordhuis","message":"what makes you think it leaks memory?","date":"2012-08-31T19:35:20.861Z","type":"message"}
{"nick":"betta","message":"visual studio using crtdbg.h","date":"2012-08-31T19:35:51.898Z","type":"message"}
{"nick":"bnoordhuis","message":"can you open an issue? our windows guy is away tonight","date":"2012-08-31T19:36:28.244Z","type":"message"}
{"nick":"bnoordhuis","message":"please add a test case if you have one","date":"2012-08-31T19:36:39.875Z","type":"message"}
{"nick":"betta","message":"well then let's create a github account :D","date":"2012-08-31T19:37:05.041Z","type":"message"}
{"nick":"bradleymeck","date":"2012-08-31T19:39:25.937Z","type":"join"}
{"nick":"`3rdEden","date":"2012-08-31T19:42:19.676Z","type":"join"}
{"nick":"`3rdEden","reason":"Remote host closed the connection","date":"2012-08-31T19:42:23.063Z","type":"quit"}
{"nick":"bnoordhuis","message":"betta: everyone should have one","date":"2012-08-31T19:43:01.132Z","type":"message"}
{"nick":"betta","message":"i know... i know...  but i never really needed an account","date":"2012-08-31T19:43:41.181Z","type":"message"}
{"nick":"papertigers","message":"bnoordhuis: I am capturing the output by the way...waiting for it to crash","date":"2012-08-31T19:44:00.540Z","type":"message"}
{"nick":"betta","message":"it's for the same reason why i don't have a facebook account :x","date":"2012-08-31T19:44:02.491Z","type":"message"}
{"nick":"bnoordhuis","message":"that's not remotely the same thing :)","date":"2012-08-31T19:45:25.856Z","type":"message"}
{"nick":"mjr_","message":"There is a time in everyone's life where they don't have a github account.","date":"2012-08-31T19:50:12.195Z","type":"message"}
{"nick":"bnoordhuis","message":"but everyone grows up eventually","date":"2012-08-31T19:50:49.000Z","type":"message"}
{"nick":"betta","message":":D","date":"2012-08-31T19:51:03.596Z","type":"message"}
{"nick":"mjr_","message":"Whatever comes after github is going to be amazing","date":"2012-08-31T19:51:13.285Z","type":"message"}
{"nick":"tjfontaine","message":"the space has changed drastically from berlios and sf.net","date":"2012-08-31T19:52:14.856Z","type":"message"}
{"nick":"mjr_","message":"I used to have sf.net on my old Linux machine, back in the day.","date":"2012-08-31T19:52:46.346Z","type":"message"}
{"nick":"mjr_","message":"My friend who owned it, eventually sold it to sourceforge, so they could forge source code with coal and anvils.","date":"2012-08-31T19:53:57.844Z","type":"message"}
{"nick":"brson","date":"2012-08-31T20:01:11.098Z","type":"join"}
{"nick":"betta","message":"stupid github... every username i ever used in my life is already taken :/","date":"2012-08-31T20:01:18.307Z","type":"message"}
{"nick":"piscisaureus","date":"2012-08-31T20:02:23.370Z","type":"join"}
{"nick":"ryah","date":"2012-08-31T20:04:05.255Z","type":"join"}
{"nick":"piscisaureus","message":"betta: it's true that uv_loop_delete leaves some cruft behind","date":"2012-08-31T20:05:45.403Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2012-08-31T20:05:47.937Z","type":"quit"}
{"nick":"piscisaureus","message":"betta: but really what you want is not uv_unref everything, better to uv_close all the things","date":"2012-08-31T20:06:03.786Z","type":"message"}
{"nick":"piscisaureus","message":"because uv_unref makes uv_run return but the handles are still there","date":"2012-08-31T20:06:24.335Z","type":"message"}
{"nick":"betta","message":"but the memory was freed?","date":"2012-08-31T20:06:50.709Z","type":"message"}
{"nick":"CIA-128","date":"2012-08-31T20:07:01.925Z","type":"join"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2012-08-31T20:08:23.981Z","type":"quit"}
{"nick":"betta","message":"well then is this intended behaviour of uv_loop_delete to not delete everything? and if i uv_close everything do i still need to call uv_loop_delete at all?  i'm really confused of this really good, but documentation lacking library^^","date":"2012-08-31T20:09:42.058Z","type":"message"}
{"nick":"dap","date":"2012-08-31T20:13:48.301Z","type":"join"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-08-31T20:15:37.345Z","type":"quit"}
{"nick":"piscisaureus","message":"betta: uv_loop_delete is supposed to delete state associated with the loop itself. It doesn't clean up everything atm - and that's a bug.","date":"2012-08-31T20:20:39.150Z","type":"message"}
{"nick":"piscisaureus","message":"betta: however uv_loop_delete will not free memory that *you* allocated to store your handles in. It will also not close sockets etc. You have to do that yourself by closing the handle.","date":"2012-08-31T20:21:27.234Z","type":"message"}
{"nick":"brson","reason":"Ping timeout: 244 seconds","date":"2012-08-31T20:21:56.110Z","type":"quit"}
{"nick":"betta","message":"oh ok thanks for clarification piscisaureus :)","date":"2012-08-31T20:22:07.551Z","type":"message"}
{"nick":"bradleymeck","date":"2012-08-31T20:23:20.897Z","type":"join"}
{"nick":"betta","message":"piscisaureus if i allocate everything on the heap and use uv_close() with free() and uv_loop_delete() at the end it seems to be that no memory get's leaked anymore...","date":"2012-08-31T20:24:19.876Z","type":"message"}
{"nick":"betta","message":"thanks so far :)","date":"2012-08-31T20:24:29.122Z","type":"message"}
{"nick":"piscisaureus","message":"betta: well, that's how you are supposed to do it :-)","date":"2012-08-31T20:25:13.114Z","type":"message"}
{"nick":"brson","date":"2012-08-31T20:27:01.230Z","type":"join"}
{"nick":"betta","message":"well yes but i didn't know that uv_loop_delete doesn't free up my sockets (although i think i know why)","date":"2012-08-31T20:27:07.329Z","type":"message"}
{"nick":"betta","message":"piscisaureus one last thing: what seemed strange to me was that the only thing which wasn't released was something internal...","date":"2012-08-31T20:27:58.456Z","type":"message"}
{"nick":"betta","message":"to be specific: accept_reqs of the listening socket","date":"2012-08-31T20:29:12.944Z","type":"message"}
{"nick":"brson","reason":"Ping timeout: 264 seconds","date":"2012-08-31T20:33:26.230Z","type":"quit"}
{"nick":"brson","date":"2012-08-31T20:36:54.442Z","type":"join"}
{"nick":"betta","message":"oh shit... i found the mistake and it was my mistake of course... i didn't check for UV__HANDLE_INTERNAL  :x","date":"2012-08-31T20:38:07.140Z","type":"message"}
{"nick":"bradleymeck_","date":"2012-08-31T20:39:09.628Z","type":"join"}
{"nick":"bradleymeck","reason":"Ping timeout: 252 seconds","date":"2012-08-31T20:42:29.647Z","type":"quit"}
{"nick":"bradleymeck_","new_nick":"bradleymeck","date":"2012-08-31T20:42:30.643Z","type":"nick"}
{"nick":"bradleymeck_","date":"2012-08-31T20:44:47.676Z","type":"join"}
{"nick":"piscisaureus","message":"oh","date":"2012-08-31T20:47:30.571Z","type":"message"}
{"nick":"piscisaureus","message":"UV__HANDLE_INTERNAL sounds very risky","date":"2012-08-31T20:47:43.424Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: ^-- do we even want to unumerate those with uv_walk?","date":"2012-08-31T20:47:59.455Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: no, that shouldn't happen","date":"2012-08-31T20:48:13.112Z","type":"message"}
{"nick":"bradleymeck","reason":"Ping timeout: 244 seconds","date":"2012-08-31T20:48:15.324Z","type":"quit"}
{"nick":"bradleymeck_","new_nick":"bradleymeck","date":"2012-08-31T20:48:15.696Z","type":"nick"}
{"nick":"bnoordhuis","message":"betta: how are you walking the handles? uv_walk() skips internal handles","date":"2012-08-31T20:49:05.173Z","type":"message"}
{"nick":"piscisaureus","message":"betta: when you uv_close a listening socket it leaks?","date":"2012-08-31T20:49:09.285Z","type":"message"}
{"nick":"piscisaureus","new_nick":"piscisaureus^","date":"2012-08-31T20:51:19.724Z","type":"nick"}
{"nick":"piscisaureus^","new_nick":"piscisaureus","date":"2012-08-31T20:51:22.027Z","type":"nick"}
{"nick":"loladiro","date":"2012-08-31T20:56:07.782Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2012-08-31T20:56:40.490Z","type":"quit"}
{"nick":"loladiro","reason":"Client Quit","date":"2012-08-31T20:57:31.866Z","type":"quit"}
{"nick":"TooTallNate","reason":"Ping timeout: 245 seconds","date":"2012-08-31T20:58:03.032Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 276 seconds","date":"2012-08-31T20:59:59.452Z","type":"quit"}
{"nick":"TooTallNate","date":"2012-08-31T21:00:00.046Z","type":"join"}
{"nick":"betta","message":"bnoordhuis, piscisaureus: i don't use uv_walk because in the same file i have a function which enumerates through all UV_TCP handles","date":"2012-08-31T21:04:25.712Z","type":"message"}
{"nick":"betta","message":"for this i use a slightly modified uv_walk function","date":"2012-08-31T21:04:57.056Z","type":"message"}
{"nick":"betta","message":"i just copied this modified uv_walk function to my \"quit-function\"","date":"2012-08-31T21:05:50.977Z","type":"message"}
{"nick":"betta","message":"i didn't think about UV__HANDLE_INTERNAL when i copied it","date":"2012-08-31T21:06:45.156Z","type":"message"}
{"nick":"betta","message":"btw the \"quit-function\" looks like this:","date":"2012-08-31T21:10:17.549Z","type":"message"}
{"nick":"betta","message":"ngx_queue_foreach(...) { h = ngx_queue_data(...); uv_close(h, h->flags == UV__HANDLE_INTERNAL ? NULL : on_close); }","date":"2012-08-31T21:10:20.666Z","type":"message"}
{"nick":"betta","message":"plus a uv_loop_delete(loop); at the end","date":"2012-08-31T21:10:39.975Z","type":"message"}
{"nick":"betta","message":"which works just fine :)","date":"2012-08-31T21:11:04.910Z","type":"message"}
{"nick":"loladiro","date":"2012-08-31T21:11:44.302Z","type":"join"}
{"nick":"brson","date":"2012-08-31T21:12:47.633Z","type":"join"}
{"nick":"piscisaureus","reason":"Quit: Lost terminal","date":"2012-08-31T21:22:08.377Z","type":"quit"}
{"nick":"piscisaureus","date":"2012-08-31T21:25:33.590Z","type":"join"}
{"nick":"piscisaureus","message":"sudo gparted","date":"2012-08-31T21:28:45.753Z","type":"message"}
{"nick":"pquerna","message":"indutny: hi","date":"2012-08-31T21:29:36.948Z","type":"message"}
{"nick":"indutny","message":"pquerna: hi","date":"2012-08-31T21:30:50.185Z","type":"message"}
{"nick":"brson","reason":"Ping timeout: 252 seconds","date":"2012-08-31T21:31:15.635Z","type":"quit"}
{"nick":"indutny","message":"pquerna: sup?","date":"2012-08-31T21:32:52.616Z","type":"message"}
{"nick":"jay_","reason":"Quit: Leaving","date":"2012-08-31T21:33:34.467Z","type":"quit"}
{"nick":"pquerna","message":"indutny: i think i figured it out; just trying to use node-spdy with express3","date":"2012-08-31T21:34:13.932Z","type":"message"}
{"nick":"indutny","message":";q","date":"2012-08-31T21:34:20.221Z","type":"message"}
{"nick":"indutny","message":"oops","date":"2012-08-31T21:34:22.469Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-08-31T21:34:26.936Z","type":"message"}
{"nick":"indutny","message":"that reminds me...","date":"2012-08-31T21:34:37.101Z","type":"message"}
{"nick":"pquerna","message":"just the example int he readme doesn't work, express.HTTPSServer went away","date":"2012-08-31T21:34:37.981Z","type":"message"}
{"nick":"jaybeavers","date":"2012-08-31T21:35:36.820Z","type":"join"}
{"nick":"indutny","message":"pquerna: oh","date":"2012-08-31T21:35:37.889Z","type":"message"}
{"nick":"indutny","message":"pquerna: express is becoming better and better","date":"2012-08-31T21:35:44.843Z","type":"message"}
{"nick":"indutny","message":"pquerna: what is the working way to do it now?","date":"2012-08-31T21:36:06.777Z","type":"message"}
{"nick":"jaybeavers","message":"I have another design question","date":"2012-08-31T21:36:16.581Z","type":"message"}
{"nick":"jaybeavers","message":"Gist (https://gist.github.com/3553827)","date":"2012-08-31T21:36:26.674Z","type":"message"}
{"nick":"pquerna","message":"indutny: https://gist.github.com/f29c23a007623a5d08ff","date":"2012-08-31T21:36:41.811Z","type":"message"}
{"nick":"jaybeavers","message":"I have a dedicated background write thread with a write_queue for incoming data","date":"2012-08-31T21:36:45.355Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2012-08-31T21:37:07.166Z","type":"message"}
{"nick":"indutny","message":"cool","date":"2012-08-31T21:37:08.229Z","type":"message"}
{"nick":"jaybeavers","message":"I'm using sleep(1) when the queue is empty, that the right way?","date":"2012-08-31T21:37:17.173Z","type":"message"}
{"nick":"indutny","message":"pquerna: don't you mind if I'll copy-paste parts of it into readme?","date":"2012-08-31T21:37:17.417Z","type":"message"}
{"nick":"pquerna","message":"indutny: go for it/.. :)","date":"2012-08-31T21:38:20.164Z","type":"message"}
{"nick":"indutny","message":"pquerna: btw, I think you do not needs https.Server as a first argument","date":"2012-08-31T21:41:41.756Z","type":"message"}
{"nick":"indutny","message":"because it should be used by default anyway","date":"2012-08-31T21:41:47.225Z","type":"message"}
{"nick":"pquerna","message":"k","date":"2012-08-31T21:41:54.091Z","type":"message"}
{"nick":"brson","date":"2012-08-31T21:42:16.356Z","type":"join"}
{"nick":"pquerna","message":"yup, works","date":"2012-08-31T21:42:17.248Z","type":"message"}
{"nick":"indutny","message":"pquerna: updated https://github.com/indutny/node-spdy","date":"2012-08-31T21:42:43.944Z","type":"message"}
{"nick":"pquerna","message":"https://198.101.158.143/","date":"2012-08-31T21:43:12.805Z","type":"message"}
{"nick":"indutny","message":"pquerna: woot!","date":"2012-08-31T21:43:23.345Z","type":"message"}
{"nick":"pquerna","message":"freebsd9, ipv6, spdy, woo :)","date":"2012-08-31T21:43:29.803Z","type":"message"}
{"nick":"indutny","message":"hahah","date":"2012-08-31T21:43:34.094Z","type":"message"}
{"nick":"indutny","message":"even ipv6","date":"2012-08-31T21:43:38.762Z","type":"message"}
{"nick":"pquerna","message":"yeah... will move dns in a bit","date":"2012-08-31T21:43:46.531Z","type":"message"}
{"nick":"indutny","message":"what's ipv6 address, btw?","date":"2012-08-31T21:43:48.525Z","type":"message"}
{"nick":"pquerna","message":"2001:4801:7817:72:2ce2:56d8:ff10:f60","date":"2012-08-31T21:45:06.878Z","type":"message"}
{"nick":"pquerna","message":"hrm, maybe its not working.","date":"2012-08-31T21:45:58.013Z","type":"message"}
{"nick":"indutny","message":"yep","date":"2012-08-31T21:46:01.836Z","type":"message"}
{"nick":"indutny","message":"I think IP is malformed","date":"2012-08-31T21:46:06.684Z","type":"message"}
{"nick":"indutny","message":"odd","date":"2012-08-31T21:46:12.889Z","type":"message"}
{"nick":"piscisaureus","message":"jaybeavers: why don't you use a semaphore?","date":"2012-08-31T21:46:16.046Z","type":"message"}
{"nick":"indutny","message":"probably I can't open tcp6 connections from my isp","date":"2012-08-31T21:46:36.916Z","type":"message"}
{"nick":"pquerna","message":"hrm? its there... just can't seem to get...","date":"2012-08-31T21:46:40.057Z","type":"message"}
{"nick":"pquerna","message":"it","date":"2012-08-31T21:46:41.371Z","type":"message"}
{"nick":"indutny","message":"pquerna: well, me too","date":"2012-08-31T21:47:10.083Z","type":"message"}
{"nick":"indutny","message":"I've even tried to do that from joyent serevr","date":"2012-08-31T21:47:17.093Z","type":"message"}
{"nick":"indutny","message":"ah, it's using ipv4 too","date":"2012-08-31T21:47:34.880Z","type":"message"}
{"nick":"indutny","message":"well, where can I get tcp6 machine? :D","date":"2012-08-31T21:47:42.312Z","type":"message"}
{"nick":"pquerna","message":"indutny: rackspacecloud is all ipv6 now :P","date":"2012-08-31T21:48:01.730Z","type":"message"}
{"nick":"piscisaureus","message":"are there any linux experts in the audience?","date":"2012-08-31T21:48:05.775Z","type":"message"}
{"nick":"jaybeavers","message":"piscisaureus: new to libuv, only found documentation for mutex :-)","date":"2012-08-31T21:48:16.526Z","type":"message"}
{"nick":"piscisaureus","message":"jaybeavers: look in include/uv.h. Semaphore functions are pretty straightforward.","date":"2012-08-31T21:48:50.239Z","type":"message"}
{"nick":"indutny","message":"jaybeavers: you're waiting in one thread","date":"2012-08-31T21:49:07.601Z","type":"message"}
{"nick":"indutny","message":"jaybeavers: and sending in other","date":"2012-08-31T21:49:13.211Z","type":"message"}
{"nick":"indutny","message":"wait() will block until something will be sent","date":"2012-08-31T21:49:30.616Z","type":"message"}
{"nick":"indutny","message":"to the semaphore","date":"2012-08-31T21:49:34.591Z","type":"message"}
{"nick":"piscisaureus","message":"jaybeavers: so what you would do is call uv_sem_post every time you add something to the write queue","date":"2012-08-31T21:50:43.736Z","type":"message"}
{"nick":"piscisaureus","message":"piscisaureus@here:~$ sudo swapon --all -v","date":"2012-08-31T21:50:56.295Z","type":"message"}
{"nick":"piscisaureus","message":"swapon on /dev/sda3","date":"2012-08-31T21:50:56.536Z","type":"message"}
{"nick":"piscisaureus","message":"swapon: /dev/sda3: found swap signature: version 1, page-size 4, same byte order","date":"2012-08-31T21:50:56.536Z","type":"message"}
{"nick":"piscisaureus","message":"swapon: /dev/sda3: pagesize=4096, swapsize=2147483648, devsize=2147483648","date":"2012-08-31T21:50:56.536Z","type":"message"}
{"nick":"piscisaureus","message":"swapon: /dev/sda3: swapon failed: Function not implemented","date":"2012-08-31T21:50:56.536Z","type":"message"}
{"nick":"jaybeavers","message":"makes sense.  I'll update.","date":"2012-08-31T21:51:02.541Z","type":"message"}
{"nick":"piscisaureus","message":"^-- wtf ?","date":"2012-08-31T21:51:07.234Z","type":"message"}
{"nick":"jaybeavers","message":"thx, much appreciated","date":"2012-08-31T21:51:07.475Z","type":"message"}
{"nick":"lohkey","reason":"Quit: lohkey","date":"2012-08-31T21:52:02.890Z","type":"quit"}
{"nick":"rendar","date":"2012-08-31T21:53:28.146Z","type":"quit"}
{"nick":"indutny","message":"piscisaureus: wtf","date":"2012-08-31T21:54:08.306Z","type":"message"}
{"nick":"indutny","message":"let me google it for you","date":"2012-08-31T21:54:17.040Z","type":"message"}
{"nick":"indutny","message":"where are you doing it?","date":"2012-08-31T21:54:27.008Z","type":"message"}
{"nick":"indutny","message":"piscisaureus: suppose you're trying to use swap on partition that isn't swap","date":"2012-08-31T21:55:17.243Z","type":"message"}
{"nick":"piscisaureus","message":"indutny: no, I'm pretty sure :-)","date":"2012-08-31T21:56:24.159Z","type":"message"}
{"nick":"indutny","message":"ok, so what do you want from it?","date":"2012-08-31T21:56:36.669Z","type":"message"}
{"nick":"piscisaureus","message":"indutny: this is just a normal ubuntu pretty pinuin kernel","date":"2012-08-31T21:56:46.283Z","type":"message"}
{"nick":"indutny","message":"pinuin?","date":"2012-08-31T21:56:55.993Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-08-31T21:57:07.636Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-08-31T21:57:10.093Z","type":"message"}
{"nick":"piscisaureus","message":"oh i meant to say penguin","date":"2012-08-31T21:57:32.174Z","type":"message"}
{"nick":"piscisaureus","message":"heh","date":"2012-08-31T21:57:33.244Z","type":"message"}
{"nick":"piscisaureus","message":"whatever","date":"2012-08-31T21:57:37.702Z","type":"message"}
{"nick":"piscisaureus","message":"12.04 LTS","date":"2012-08-31T21:57:42.167Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-08-31T21:58:41.718Z","type":"message"}
{"nick":"indutny","message":"going to sleep","date":"2012-08-31T21:58:44.331Z","type":"message"}
{"nick":"indutny","message":"hope you'll be good with your swap stuf","date":"2012-08-31T21:58:52.300Z","type":"message"}
{"nick":"indutny","message":"ttyl ;)","date":"2012-08-31T21:58:55.798Z","type":"message"}
{"nick":"piscisaureus","message":"bleh","date":"2012-08-31T21:59:03.262Z","type":"message"}
{"nick":"piscisaureus","message":"indutny: sleep well","date":"2012-08-31T21:59:07.628Z","type":"message"}
{"nick":"indutny","message":"you too","date":"2012-08-31T21:59:11.409Z","type":"message"}
{"nick":"indutny","message":"bye","date":"2012-08-31T21:59:12.214Z","type":"message"}
{"nick":"jaybeavers","message":"ok updated gist to semaphore: https://gist.github.com/3553827","date":"2012-08-31T22:04:58.112Z","type":"message"}
{"nick":"jaybeavers","message":"Works great, code much simplified.","date":"2012-08-31T22:05:07.767Z","type":"message"}
{"nick":"erickt","reason":"Ping timeout: 272 seconds","date":"2012-08-31T22:11:47.123Z","type":"quit"}
{"nick":"piscisaureus","message":"jaybeavers: you have a threadsafety issue in there","date":"2012-08-31T22:12:19.953Z","type":"message"}
{"nick":"piscisaureus","message":"jaybeavers: you probably still need a mutex to protext the ngx_queue","date":"2012-08-31T22:12:38.600Z","type":"message"}
{"nick":"piscisaureus","message":"jaybeavers: also, since you are now using your own worker thread - why not just do the actual work there?","date":"2012-08-31T22:13:02.852Z","type":"message"}
{"nick":"jaybeavers","message":"piscisaureus: fair enough, looking at insert_tail, it's possible it would be updating head","date":"2012-08-31T22:15:02.433Z","type":"message"}
{"nick":"piscisaureus","message":"jaybeavers: oh sorry - I misunderstood your code","date":"2012-08-31T22:15:05.384Z","type":"message"}
{"nick":"piscisaureus","message":"jaybeavers: you *are* doing the work on the thread","date":"2012-08-31T22:15:20.719Z","type":"message"}
{"nick":"piscisaureus","message":"so that's good","date":"2012-08-31T22:15:22.753Z","type":"message"}
{"nick":"piscisaureus","message":"*but*","date":"2012-08-31T22:15:26.410Z","type":"message"}
{"nick":"piscisaureus","message":"you are then calling uv_queue_work to synchronize with the main thread","date":"2012-08-31T22:15:40.281Z","type":"message"}
{"nick":"piscisaureus","message":"which is not very efficient, and also not safe","date":"2012-08-31T22:15:58.521Z","type":"message"}
{"nick":"piscisaureus","message":"since no libuv functions are threadsafe except uv_async_send","date":"2012-08-31T22:16:16.838Z","type":"message"}
{"nick":"jaybeavers","message":"piscisaureus: The current api (node-serialport) takes a callback as a param and calls that from doWorkAfter","date":"2012-08-31T22:16:42.511Z","type":"message"}
{"nick":"piscisaureus","message":"yes, that's okay","date":"2012-08-31T22:17:01.511Z","type":"message"}
{"nick":"piscisaureus","message":"*but* calling uv_queue_work from the worker thread isn't","date":"2012-08-31T22:17:13.178Z","type":"message"}
{"nick":"jaybeavers","message":"So I feel I need to marshal the results of my doWorkAfter back onto uv_default_loop","date":"2012-08-31T22:17:25.658Z","type":"message"}
{"nick":"jaybeavers","message":"So you're saying so a uv_async_send to communicate back and then make the api callback from the async_send handler?","date":"2012-08-31T22:18:05.294Z","type":"message"}
{"nick":"piscisaureus","message":"jaybeavers: I would leave the queue_work part out","date":"2012-08-31T22:19:16.647Z","type":"message"}
{"nick":"jaybeavers","message":"piscisaureus: I think I'm following you.  brb :-)","date":"2012-08-31T22:19:44.386Z","type":"message"}
{"nick":"jaybeavers","message":"(this is a fascinating api :-) )","date":"2012-08-31T22:20:03.611Z","type":"message"}
{"nick":"piscisaureus","message":"threading. threading is hard","date":"2012-08-31T22:20:17.560Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: sudo strace swapon --all -v","date":"2012-08-31T22:20:51.103Z","type":"message"}
{"nick":"jaybeavers","message":"rgr.  I'm used to my c# semantics.  portable c is a bit of a change.","date":"2012-08-31T22:20:51.357Z","type":"message"}
{"nick":"bnoordhuis","message":"you can abbreviate it that to `swapon -av` btw, saves you some typing","date":"2012-08-31T22:21:27.617Z","type":"message"}
{"nick":"bnoordhuis","message":"it, that... pick one","date":"2012-08-31T22:21:36.134Z","type":"message"}
{"nick":"CIA-128","message":"\u0002libuv:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u0002ff0a93a\u000f \u000310\u000f/ (src/unix/async.c src/unix/internal.h)\u0002:\u000f unix: fix clang -Wlanguage-extension-token warnings - http://git.io/G0PWyA","date":"2012-08-31T22:29:32.118Z","type":"message"}
{"nick":"travis-ci","date":"2012-08-31T22:31:16.930Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#639 (master - ff0a93a : Ben Noordhuis): The build passed.","date":"2012-08-31T22:31:17.170Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/5eb1d191cce1...ff0a93a04f21","date":"2012-08-31T22:31:17.171Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/2299126","date":"2012-08-31T22:31:17.171Z","type":"message"}
{"nick":"travis-ci","date":"2012-08-31T22:31:17.171Z","type":"part"}
{"nick":"erickt","date":"2012-08-31T22:32:27.206Z","type":"join"}
{"nick":"piscisaureus","message":"bnoordhuis: https://gist.github.com/f3f7b9167604d8b61406","date":"2012-08-31T22:35:18.343Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: i don't see it failing anywhere","date":"2012-08-31T22:37:14.106Z","type":"message"}
{"nick":"piscisaureus","message":"err","date":"2012-08-31T22:38:01.292Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: then again, i'm also not seeing it make any swapon() syscalls","date":"2012-08-31T22:40:56.706Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: https://gist.github.com/17490bfb846df7da7f67","date":"2012-08-31T22:41:41.166Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: so the swapon syscall is failing with ENOSYS","date":"2012-08-31T22:41:53.261Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: what does `uname -r` say?","date":"2012-08-31T22:43:19.261Z","type":"message"}
{"nick":"bnoordhuis","message":"also, strace is reporting it kind of oddly - swapon() takes two args","date":"2012-08-31T22:45:26.186Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: 3.2.7","date":"2012-08-31T22:46:34.899Z","type":"message"}
{"nick":"jaybeavers","message":"ok, gist updated to use uv_async_send instead of uv_queue_work for the callback","date":"2012-08-31T22:49:53.982Z","type":"message"}
{"nick":"jaybeavers","message":"https://gist.github.com/3553827","date":"2012-08-31T22:49:54.557Z","type":"message"}
{"nick":"jaybeavers","message":"the async handler doesn't seem to get involved","date":"2012-08-31T22:50:15.127Z","type":"message"}
{"nick":"jaybeavers","message":"I used uv_async_init(uv_default_loop(), &async, work_done); and this returns 0","date":"2012-08-31T22:50:38.642Z","type":"message"}
{"nick":"joshthecoder","reason":"Quit: Leaving...","date":"2012-08-31T22:51:08.470Z","type":"quit"}
{"nick":"jaybeavers","message":"Am I using the wrong loop?  Intent is to post doWorkDone back onto the 'main' loop rather than calling it from the background thread","date":"2012-08-31T22:51:08.907Z","type":"message"}
{"nick":"jaybeavers","message":"*handler doesn't seem to get invoked","date":"2012-08-31T22:51:26.401Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: https://gist.github.com/c909c3c998707b3c7409 <- can you try this? run as `strace ./swapon /dev/sda3`","date":"2012-08-31T22:51:42.834Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, my strace reports it as a single arg function as well","date":"2012-08-31T22:52:17.673Z","type":"message"}
{"nick":"bnoordhuis","message":"jaybeavers: why does uv_work_queue.cpp use uv_default_loop()?","date":"2012-08-31T22:54:13.966Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: https://gist.github.com/654ebd64c6dd4e68f7bf","date":"2012-08-31T22:54:20.105Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2012-08-31T22:54:20.341Z","type":"quit"}
{"nick":"piscisaureus","message":"jaybeavers: you need to use a queue for reporting back to the main thread","date":"2012-08-31T22:54:40.216Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: hah, that's awesome. what does `uname -m -p` print for you?","date":"2012-08-31T22:55:06.742Z","type":"message"}
{"nick":"piscisaureus","message":"jaybeavers: it's slightly complicated but uv_async_send may not correspond 1:1 to uv_async callback invocations","date":"2012-08-31T22:55:12.699Z","type":"message"}
{"nick":"jaybeavers","message":"bnoordhuis:  uv_work_queue is a simplification of the current threading model of node-serialport which has out of order issues","date":"2012-08-31T22:55:23.815Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: x86_64 x86_64","date":"2012-08-31T22:55:34.967Z","type":"message"}
{"nick":"jaybeavers","message":"it's not meant to be 'how to work going forward'","date":"2012-08-31T22:55:37.648Z","type":"message"}
{"nick":"piscisaureus","message":"ah shit. maybe....","date":"2012-08-31T22:56:44.331Z","type":"message"}
{"nick":"jaybeavers","message":"I'm trying to replace the logic represented by uv_work_queue.cpp with uv_thread.cpp","date":"2012-08-31T22:56:49.520Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: 32 bits binary?","date":"2012-08-31T22:57:16.379Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: the thing I just compiled?","date":"2012-08-31T22:59:03.599Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: swapon: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.24, BuildID[sha1]=0x440b089968214d3a122375913f82be472c39a7a7, not stripped","date":"2012-08-31T22:59:28.591Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: no it could be that I am accidentally running a chromeos kernel with ubuntu userland","date":"2012-08-31T22:59:57.530Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: that could explain it :)","date":"2012-08-31T23:00:07.023Z","type":"message"}
{"nick":"jaybeavers","message":"piscisaureaus: Using a queue to marshal back onto uv_default_loop() doesn't sound right -- I'd still need to post a message to the loop to notify it of the new queue item?","date":"2012-08-31T23:00:22.079Z","type":"message"}
{"nick":"bnoordhuis","message":"i wonder what google butchered out of the mainline kernel","date":"2012-08-31T23:00:24.839Z","type":"message"}
{"nick":"piscisaureus","message":"it's all pretty stable actually","date":"2012-08-31T23:00:53.728Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: so what does `uname -a` print?","date":"2012-08-31T23:01:11.853Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: nothing interesting:","date":"2012-08-31T23:01:38.390Z","type":"message"}
{"nick":"piscisaureus","message":"Linux ChrUbuntu 3.2.7 #1 SMP Fri Apr 6 09:09:51 PDT 2012 x86_64 x86_64 x86_64 GNU/Linux","date":"2012-08-31T23:01:40.372Z","type":"message"}
{"nick":"TheJH","reason":"Ping timeout: 252 seconds","date":"2012-08-31T23:01:49.674Z","type":"quit"}
{"nick":"bnoordhuis","message":"ChrUbuntu... gotta remember that one","date":"2012-08-31T23:02:00.944Z","type":"message"}
{"nick":"jaybeavers","message":"Let me back up a bit.  Node library to write to the serial port.  serial.write is a long, sync operation.  Current implementation uses uv_queue_work","date":"2012-08-31T23:09:13.255Z","type":"message"}
{"nick":"jaybeavers","message":"This causes occasional out of order delivery of data -- bad.","date":"2012-08-31T23:09:24.241Z","type":"message"}
{"nick":"jaybeavers","message":"Trying to rewrite using a dedicated uv_thread, but need serialPort.write(byte[], callback) for callback to come back on uv_default_loop()","date":"2012-08-31T23:10:26.320Z","type":"message"}
{"nick":"bnoordhuis","message":"jaybeavers: it should be pretty trivial, you manage the queue in the main thread. you fire off a work req, wait for it to come back, then fire off the next one","date":"2012-08-31T23:11:26.494Z","type":"message"}
{"nick":"betta","date":"2012-08-31T23:12:47.627Z","type":"quit"}
{"nick":"joshthecoder","date":"2012-08-31T23:14:02.108Z","type":"join"}
{"nick":"jaybeavers","message":"The callback comes out of the C++ layer with:","date":"2012-08-31T23:15:27.383Z","type":"message"}
{"nick":"jaybeavers","message":"v8::Function::Cast(*data->callback)->Call(v8::Context::GetCurrent()->Global(), 2, argv);","date":"2012-08-31T23:15:28.266Z","type":"message"}
{"nick":"jaybeavers","message":"Does that ensure the nodejs callback is properly threaded, so I can call that from the background uv_thread?","date":"2012-08-31T23:15:57.820Z","type":"message"}
{"nick":"jaybeavers","message":"In that case, I can just call uv_after_work_cb from the background thread, that's simple","date":"2012-08-31T23:17:17.056Z","type":"message"}
{"nick":"jaybeavers","message":"Sorry or being dense, my first multithreaded nodejs c++ code.","date":"2012-08-31T23:17:49.699Z","type":"message"}
{"nick":"bnoordhuis","message":"jaybeavers: let me type up some example code","date":"2012-08-31T23:19:05.440Z","type":"message"}
{"nick":"jaybeavers","message":"bnoordhuis: thx","date":"2012-08-31T23:21:03.476Z","type":"message"}
{"nick":"bnoordhuis","message":"jaybeavers: https://gist.github.com/3560958 <- something like that","date":"2012-08-31T23:25:27.857Z","type":"message"}
{"nick":"bnoordhuis","message":"jaybeavers: you call work_add() from the main thread and it'll take care of the rest","date":"2012-08-31T23:28:10.177Z","type":"message"}
{"nick":"jaybeavers","message":"ok, we're a bit off base.  Current code is simple and uses uv_queue_work like your gist","date":"2012-08-31T23:28:45.618Z","type":"message"}
{"nick":"jaybeavers","message":"Problem is that if you call uv_queue_work rapidly, some work gets performed out of order","date":"2012-08-31T23:29:06.986Z","type":"message"}
{"nick":"jaybeavers","message":"When that work is 'write Buffer to serial port' that results in corrupted data","date":"2012-08-31T23:29:21.916Z","type":"message"}
{"nick":"bnoordhuis","message":"jaybeavers: not with my gist. it doesn't queue a new work req until the old one has finished","date":"2012-08-31T23:29:41.874Z","type":"message"}
{"nick":"bnoordhuis","message":"i.e. it's serialized","date":"2012-08-31T23:29:54.754Z","type":"message"}
{"nick":"bnoordhuis","message":"which is what you want","date":"2012-08-31T23:30:00.319Z","type":"message"}
{"nick":"bnoordhuis","message":"and now you have it :)","date":"2012-08-31T23:30:04.487Z","type":"message"}
{"nick":"jaybeavers","message":":-)","date":"2012-08-31T23:30:17.287Z","type":"message"}
{"nick":"jaybeavers","message":"Fair enough, node-serialport exposes .write to the user, they aren't guaranteed to only call the next write then the previous has completed.","date":"2012-08-31T23:30:43.571Z","type":"message"}
{"nick":"jaybeavers","message":"So trying to make an api that will self-serialize","date":"2012-08-31T23:31:16.056Z","type":"message"}
{"nick":"bnoordhuis","message":"jaybeavers: that's exactly what work_add() does","date":"2012-08-31T23:31:38.075Z","type":"message"}
{"nick":"bnoordhuis","message":"if you call it ten times in a row, it'll fire off the first work req and queue the other nine","date":"2012-08-31T23:31:54.230Z","type":"message"}
{"nick":"jaybeavers","message":"in after_work_cb, why do you reenter uv_queue_work at the end?  Shouldn't the previous call in work_add be sufficient?","date":"2012-08-31T23:38:31.814Z","type":"message"}
{"nick":"bnoordhuis","message":"jaybeavers: to drain the queue","date":"2012-08-31T23:39:13.396Z","type":"message"}
{"nick":"joshthecoder","reason":"Quit: Leaving...","date":"2012-08-31T23:39:45.996Z","type":"quit"}
{"nick":"jaybeavers","message":"and in work_cb, what happens if the threadpool calls the 2nd work_cb first?  Since you're not pulling work from ngx_queue_head, you might get the 2nd work, yes?","date":"2012-08-31T23:40:23.279Z","type":"message"}
{"nick":"bnoordhuis","message":"jaybeavers: that never happens because there is only ever one work req active","date":"2012-08-31T23:40:44.014Z","type":"message"}
{"nick":"mjr_","reason":"Quit: mjr_","date":"2012-08-31T23:40:53.378Z","type":"quit"}
{"nick":"bnoordhuis","message":"jaybeavers: it works like this: work_add() adds work to our local queue, which is not in any way related to libuv's thread pool","date":"2012-08-31T23:41:16.243Z","type":"message"}
{"nick":"bnoordhuis","message":"jaybeavers: when the queue is empty, i.e. work_add() is called for the first time, it hands off a work req to the thread pool","date":"2012-08-31T23:41:52.372Z","type":"message"}
{"nick":"bnoordhuis","message":"then it twiddles its thumbs until that work req comes back, i.e. after_work_cb is called","date":"2012-08-31T23:42:20.134Z","type":"message"}
{"nick":"jaybeavers","message":"bnoordhuis:  Got that.  I'm nervous that if you call work_add 10 times, there will be 10 scheduled callbacks into work_cb, each with their pointer to their original work element","date":"2012-08-31T23:42:23.996Z","type":"message"}
{"nick":"jaybeavers","message":"If work_cb always pulled ngx_queue_head, I could see how you'd always pull work items in order","date":"2012-08-31T23:42:56.303Z","type":"message"}
{"nick":"bnoordhuis","message":"that's exactly what happens","date":"2012-08-31T23:43:06.149Z","type":"message"}
{"nick":"bnoordhuis","message":"copy that code, modify your_data, your_work_cb and your_after_work_cb but nothing else","date":"2012-08-31T23:43:39.449Z","type":"message"}
{"nick":"bnoordhuis","message":"and you should be fine","date":"2012-08-31T23:43:42.579Z","type":"message"}
{"nick":"jaybeavers","message":":-)  sorry, need to understand the code the 'write' too","date":"2012-08-31T23:44:46.398Z","type":"message"}
{"nick":"jaybeavers","message":"So if work_add is called 10x, uv_queue_work is called 10x to schedule 10 invocations of work_cb","date":"2012-08-31T23:45:27.082Z","type":"message"}
{"nick":"jaybeavers","message":"They may be out of order, but they should match cbs to queue elements","date":"2012-08-31T23:45:44.904Z","type":"message"}
{"nick":"jaybeavers","message":"So why is the reentrancy needed in after_work_cb, if it's omitted I should still get the right number of work_cb calls, yes?","date":"2012-08-31T23:46:12.412Z","type":"message"}
{"nick":"bnoordhuis","message":"So if work_add is called 10x, uv_queue_work is called 10x to schedule 10 invocations of work_cb <- no","date":"2012-08-31T23:47:12.649Z","type":"message"}
{"nick":"bnoordhuis","message":"uv_queue_work is called for the first req","date":"2012-08-31T23:47:28.876Z","type":"message"}
{"nick":"jaybeavers","message":"duh, nevermind","date":"2012-08-31T23:47:30.719Z","type":"message"}
{"nick":"jaybeavers","message":"I mentally skipped the if (!empty) return","date":"2012-08-31T23:47:47.341Z","type":"message"}
{"nick":"bnoordhuis","message":"ah :)","date":"2012-08-31T23:47:51.175Z","type":"message"}
{"nick":"bnoordhuis","message":"it's there for a reason :)","date":"2012-08-31T23:47:57.470Z","type":"message"}
{"nick":"jaybeavers","message":"ok, I'm following now.  Thanks for your patience and help","date":"2012-08-31T23:48:55.524Z","type":"message"}
{"nick":"piscisaureus","reason":"Quit: Lost terminal","date":"2012-08-31T23:49:41.872Z","type":"quit"}
{"nick":"bnoordhuis","message":"jaybeavers: my pleasure","date":"2012-08-31T23:50:37.599Z","type":"message"}
{"nick":"erickt","reason":"Ping timeout: 244 seconds","date":"2012-08-31T23:52:44.126Z","type":"quit"}
{"nick":"piscisaureus_","date":"2012-08-31T23:55:09.304Z","type":"join"}
{"nick":"tomshreds","date":"2012-08-31T23:56:50.989Z","type":"join"}
