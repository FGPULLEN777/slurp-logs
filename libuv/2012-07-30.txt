{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-30T00:09:31.268Z","type":"quit"}
{"nick":"mikeal","date":"2012-07-30T00:14:09.374Z","type":"join"}
{"nick":"bnoordhuis","date":"2012-07-30T00:29:05.860Z","type":"join"}
{"nick":"joeandaverde","reason":"Ping timeout: 240 seconds","date":"2012-07-30T00:30:13.654Z","type":"quit"}
{"nick":"txdv","reason":"Read error: Connection reset by peer","date":"2012-07-30T00:36:12.544Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-30T01:04:55.548Z","type":"quit"}
{"nick":"joeandaverde","date":"2012-07-30T01:13:55.504Z","type":"join"}
{"nick":"mikeal","date":"2012-07-30T01:34:25.753Z","type":"join"}
{"nick":"abraxas","date":"2012-07-30T01:39:55.735Z","type":"join"}
{"nick":"bnoordhuis","reason":"Read error: Operation timed out","date":"2012-07-30T01:47:06.536Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-30T01:50:46.244Z","type":"quit"}
{"nick":"beachdog","date":"2012-07-30T01:51:48.614Z","type":"join"}
{"nick":"mikeal","date":"2012-07-30T01:54:11.680Z","type":"join"}
{"nick":"joeandaverde","reason":"Ping timeout: 255 seconds","date":"2012-07-30T02:08:03.692Z","type":"quit"}
{"nick":"blackorzar","date":"2012-07-30T02:08:18.585Z","type":"join"}
{"nick":"tjfontaine","message":"mitsuhiko: and that method is deprecated in mountain lion","date":"2012-07-30T02:08:38.159Z","type":"message"}
{"nick":"dshaw_","date":"2012-07-30T02:18:28.064Z","type":"join"}
{"nick":"AvianFlu","reason":"Quit: Leaving","date":"2012-07-30T02:20:47.479Z","type":"quit"}
{"nick":"mmalecki","new_nick":"mmalecki[zzz]","date":"2012-07-30T02:21:38.725Z","type":"nick"}
{"nick":"erickt","date":"2012-07-30T02:33:16.800Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 255 seconds","date":"2012-07-30T02:42:43.174Z","type":"quit"}
{"nick":"avalanche123","reason":"Read error: Connection reset by peer","date":"2012-07-30T02:54:14.649Z","type":"quit"}
{"nick":"dshaw_1","date":"2012-07-30T02:54:58.723Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 244 seconds","date":"2012-07-30T02:56:41.012Z","type":"quit"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-07-30T02:57:09.624Z","type":"quit"}
{"nick":"avalanche123","date":"2012-07-30T02:59:06.799Z","type":"join"}
{"nick":"avalanche123","reason":"Quit: Computer has gone to sleep.","date":"2012-07-30T03:20:22.770Z","type":"quit"}
{"nick":"avalanche123","date":"2012-07-30T03:21:31.956Z","type":"join"}
{"nick":"blackorzar","reason":"Ping timeout: 240 seconds","date":"2012-07-30T03:21:33.419Z","type":"quit"}
{"nick":"blackorzar","date":"2012-07-30T03:41:31.504Z","type":"join"}
{"nick":"joeandaverde","date":"2012-07-30T04:04:27.770Z","type":"join"}
{"nick":"avalanche123","reason":"Quit: Computer has gone to sleep.","date":"2012-07-30T04:06:08.456Z","type":"quit"}
{"nick":"erickt","date":"2012-07-30T04:14:29.274Z","type":"join"}
{"nick":"joeandaverde","reason":"\"Leaving\"","date":"2012-07-30T04:23:19.197Z","type":"part"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-30T04:29:42.356Z","type":"quit"}
{"nick":"AvianFlu","date":"2012-07-30T05:33:46.542Z","type":"join"}
{"nick":"mikeal","date":"2012-07-30T05:56:53.793Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2012-07-30T06:00:46.840Z","type":"quit"}
{"nick":"dshaw_1","reason":"Ping timeout: 255 seconds","date":"2012-07-30T06:01:41.904Z","type":"quit"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-07-30T06:02:50.779Z","type":"quit"}
{"nick":"mikeal","date":"2012-07-30T06:32:54.952Z","type":"join"}
{"nick":"paddybyers","date":"2012-07-30T06:38:10.723Z","type":"join"}
{"nick":"`3rdEden","date":"2012-07-30T07:10:58.166Z","type":"join"}
{"nick":"txdv","date":"2012-07-30T07:13:43.340Z","type":"join"}
{"nick":"rendar","date":"2012-07-30T07:19:09.474Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-30T07:28:54.161Z","type":"quit"}
{"nick":"`3rdEden","reason":"Quit: Leaving...","date":"2012-07-30T07:34:22.496Z","type":"quit"}
{"nick":"`3rdEden","date":"2012-07-30T07:34:47.195Z","type":"join"}
{"nick":"isaacs","topic":"Liber. Uni. Veloci.  http://piscisaureus.no.de/libuv/latest","date":"2012-07-30T07:49:10.665Z","type":"topic"}
{"nick":"mmalecki[zzz]","new_nick":"mmalecki","date":"2012-07-30T07:52:24.351Z","type":"nick"}
{"nick":"mikeal","date":"2012-07-30T08:22:19.017Z","type":"join"}
{"nick":"blackorzar","reason":"Ping timeout: 240 seconds","date":"2012-07-30T08:24:13.083Z","type":"quit"}
{"nick":"dshaw_","date":"2012-07-30T08:41:49.938Z","type":"join"}
{"nick":"piscisaureus_","date":"2012-07-30T08:53:37.520Z","type":"join"}
{"nick":"piscisaureus_","message":"hello","date":"2012-07-30T08:54:06.467Z","type":"message"}
{"nick":"mmalecki","message":"hi","date":"2012-07-30T08:54:38.055Z","type":"message"}
{"nick":"mitsuhiko","message":"tjfontaine: our yearly depreaction warning give us apple","date":"2012-07-30T08:57:00.231Z","type":"message"}
{"nick":"mitsuhiko","message":"tjfontaine: do we have to do objective c now?","date":"2012-07-30T08:57:20.325Z","type":"message"}
{"nick":"piscisaureus_","message":"git clone http://git.chromium.org/external/gyp.git","date":"2012-07-30T08:58:50.157Z","type":"message"}
{"nick":"piscisaureus_","message":"google is maintaining proper git mirrors now","date":"2012-07-30T08:58:57.220Z","type":"message"}
{"nick":"piscisaureus_","message":"I think chromium is switching to git \\o/","date":"2012-07-30T08:59:04.518Z","type":"message"}
{"nick":"CIA-108","message":"\u0002libuv:\u000f \u000303Bert Belder\u000f \u000307v0.8\u000f * r\u00021d5eb91\u000f \u000310\u000f/ test/test-tcp-unexpected-read.c \u0002:\u000f Avoid compiler warning - http://git.io/ZX5coA","date":"2012-07-30T09:01:42.526Z","type":"message"}
{"nick":"travis-ci","date":"2012-07-30T09:03:34.999Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#504 (v0.8 - 1d5eb91 : Bert Belder): The build is still failing.","date":"2012-07-30T09:03:35.246Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/4fe1916926f9...1d5eb9147429","date":"2012-07-30T09:03:35.246Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1988974","date":"2012-07-30T09:03:35.246Z","type":"message"}
{"nick":"travis-ci","date":"2012-07-30T09:03:35.246Z","type":"part"}
{"nick":"ryah","message":"piscisaureus_: really?","date":"2012-07-30T09:11:09.566Z","type":"message"}
{"nick":"ryah","message":"nice","date":"2012-07-30T09:11:10.608Z","type":"message"}
{"nick":"piscisaureus_","message":"ryah: I'm not sure, but in some issue they were mentioning setting their svn to read only","date":"2012-07-30T09:13:58.355Z","type":"message"}
{"nick":"piscisaureus_","message":"(and they are doing crazy shit with git filter branch... srsly, why not just start a new repo if your old one gets too bit)","date":"2012-07-30T09:14:22.756Z","type":"message"}
{"nick":"piscisaureus_","message":"*big","date":"2012-07-30T09:14:24.404Z","type":"message"}
{"nick":"mmalecki","message":"hey guys, what do you think about this API? https://github.com/joyent/node/issues/3795","date":"2012-07-30T09:18:18.291Z","type":"message"}
{"nick":"piscisaureus_","message":"mmalecki: I don't think you can do a pr for libuv... execSync is blocked on multi-loop signal handling support that bnoordhuis is now working on","date":"2012-07-30T09:20:14.305Z","type":"message"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-07-30T09:20:36.407Z","type":"quit"}
{"nick":"mmalecki","message":"piscisaureus_: actually, why not just waitpid?","date":"2012-07-30T09:20:39.151Z","type":"message"}
{"nick":"piscisaureus_","message":"mmalecki: wrt the api... I see the point but it makes it very inconsistent...","date":"2012-07-30T09:20:43.452Z","type":"message"}
{"nick":"piscisaureus_","message":"mmalecki: node needs to consume the processes output, so waitpid won't help","date":"2012-07-30T09:21:30.232Z","type":"message"}
{"nick":"piscisaureus_","message":"mmalecki: if node doesn't read from the pipe and the child tries to write, it'll deadlock","date":"2012-07-30T09:21:50.004Z","type":"message"}
{"nick":"mmalecki","message":"piscisaureus_: ah, I see. so waitpid is no go. what's inconsitent in the API?","date":"2012-07-30T09:22:32.899Z","type":"message"}
{"nick":"piscisaureus_","message":"mmalecki: wait() is","date":"2012-07-30T09:22:42.089Z","type":"message"}
{"nick":"piscisaureus_","message":"maybe you can convince isaacs, api consistency doesn't seem to bother him so much","date":"2012-07-30T09:23:13.017Z","type":"message"}
{"nick":"mmalecki","message":"okay, thanks for the input","date":"2012-07-30T09:23:36.149Z","type":"message"}
{"nick":"piscisaureus_","message":"mmalecki: we could also do:","date":"2012-07-30T09:24:06.867Z","type":"message"}
{"nick":"piscisaureus_","message":"var x = socket.write(\"bla\");","date":"2012-07-30T09:24:07.114Z","type":"message"}
{"nick":"piscisaureus_","message":"x.wait();","date":"2012-07-30T09:24:07.115Z","type":"message"}
{"nick":"piscisaureus_","message":"but we don't :-)","date":"2012-07-30T09:24:07.115Z","type":"message"}
{"nick":"mmalecki","message":"piscisaureus_: ah, so you want to make it consistent with stream APIs?","date":"2012-07-30T09:24:35.051Z","type":"message"}
{"nick":"piscisaureus_","message":"mmalecki: that's why I like execSync() better","date":"2012-07-30T09:24:46.994Z","type":"message"}
{"nick":"mmalecki","message":"right, that's fair enough","date":"2012-07-30T09:25:06.846Z","type":"message"}
{"nick":"dominictarr","date":"2012-07-30T09:42:30.658Z","type":"join"}
{"nick":"paddybyers","date":"2012-07-30T09:43:18.263Z","type":"join"}
{"nick":"piscisaureus_","message":"ouch","date":"2012-07-30T10:01:58.146Z","type":"message"}
{"nick":"piscisaureus_","message":"src/win/fs.c is full of leaks","date":"2012-07-30T10:02:06.624Z","type":"message"}
{"nick":"V1","date":"2012-07-30T10:22:39.778Z","type":"join"}
{"nick":"V1","reason":"Client Quit","date":"2012-07-30T10:22:46.347Z","type":"quit"}
{"nick":"hz","date":"2012-07-30T10:37:27.686Z","type":"join"}
{"nick":"piscisaureus_","message":"is anyone using the uv_fs_t.path field ?","date":"2012-07-30T10:40:31.737Z","type":"message"}
{"nick":"piscisaureus_","message":"I want to make that private","date":"2012-07-30T10:40:35.823Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: ^ ?","date":"2012-07-30T10:40:40.746Z","type":"message"}
{"nick":"saghul","message":"piscisaureus_ i think I'm exposing that","date":"2012-07-30T10:44:19.402Z","type":"message"}
{"nick":"saghul","message":"let me check","date":"2012-07-30T10:44:22.071Z","type":"message"}
{"nick":"saghul","message":"yes, I'm exposing it in the operation callbacks, though I don't mind if you remove it","date":"2012-07-30T10:46:01.730Z","type":"message"}
{"nick":"piscisaureus_","message":"Yeah... I suppose I'll have to keep it around in 0.8 anyway, since we can't break binary compatibility","date":"2012-07-30T10:46:28.248Z","type":"message"}
{"nick":"piscisaureus_","message":"it's also not that bad to capture it","date":"2012-07-30T10:46:33.174Z","type":"message"}
{"nick":"piscisaureus_","message":"but what I typically do is convert it to utf16 immediately, so libuv itself has no need to keep the original path","date":"2012-07-30T10:47:00.918Z","type":"message"}
{"nick":"saghul","message":"i see","date":"2012-07-30T10:47:26.423Z","type":"message"}
{"nick":"piscisaureus_","message":"And I have to plug many leaks, better do it properly this time :_)","date":"2012-07-30T10:48:10.001Z","type":"message"}
{"nick":"beachdog","reason":"Remote host closed the connection","date":"2012-07-30T10:55:42.645Z","type":"quit"}
{"nick":"theCole","date":"2012-07-30T11:27:16.778Z","type":"join"}
{"nick":"mitsuhiko","message":"piscisaureus_: +1 on getting rid of that","date":"2012-07-30T11:28:10.895Z","type":"message"}
{"nick":"hz","reason":"Ping timeout: 272 seconds","date":"2012-07-30T11:35:09.685Z","type":"quit"}
{"nick":"bnoordhuis","date":"2012-07-30T11:52:27.095Z","type":"join"}
{"nick":"charlies_","date":"2012-07-30T11:55:21.465Z","type":"join"}
{"nick":"charlies_","new_nick":"charliesome_","date":"2012-07-30T11:56:45.728Z","type":"nick"}
{"nick":"pfox__","reason":"Quit: leaving","date":"2012-07-30T12:10:47.629Z","type":"quit"}
{"nick":"pfox__","date":"2012-07-30T12:11:54.310Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: can 5342bac4 be moved into uv-win.h?","date":"2012-07-30T12:22:39.945Z","type":"message"}
{"nick":"bnoordhuis","message":"that's the ssize_t define in uv.h","date":"2012-07-30T12:22:59.041Z","type":"message"}
{"nick":"piscisaureus_","message":"!GH 5342bac4\u0003","date":"2012-07-30T12:23:08.791Z","type":"message"}
{"nick":"piscisaureus_","message":"hmm how did that work again...","date":"2012-07-30T12:23:16.057Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: probably not","date":"2012-07-30T12:23:37.623Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: typedef void (*uv_read_cb)(uv_stream_t* stream, ssize_t nread, uv_buf_t buf);","date":"2012-07-30T12:24:04.833Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: that needs ssize_t before we include uv.h","date":"2012-07-30T12:24:13.525Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: but that's way after uv-win.h is included","date":"2012-07-30T12:24:47.349Z","type":"message"}
{"nick":"piscisaureus_","message":"true","date":"2012-07-30T12:25:21.168Z","type":"message"}
{"nick":"piscisaureus_","message":"Yeah, it seems that that'd be fine","date":"2012-07-30T12:25:31.488Z","type":"message"}
{"nick":"piscisaureus_","message":"I wonder why we put it in uv.h in the first place then","date":"2012-07-30T12:25:39.094Z","type":"message"}
{"nick":"bnoordhuis","message":"s/we/you/ :)","date":"2012-07-30T12:25:47.795Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: we = me + ryah","date":"2012-07-30T12:25:58.673Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll move it and let you review it","date":"2012-07-30T12:25:59.008Z","type":"message"}
{"nick":"mmalecki","message":"piscisaureus_: !gh joyent/libuv@5342bac4","date":"2012-07-30T12:26:45.639Z","type":"message"}
{"nick":"mmalecki","message":"!gh joyent/libuv@5342bac4","date":"2012-07-30T12:26:50.704Z","type":"message"}
{"nick":"kohai","message":"mmalecki, https://github.com/joyent/libuv/commit/5342bac4","date":"2012-07-30T12:26:50.993Z","type":"message"}
{"nick":"bnoordhuis","message":"!gh bnoordhuis/libuv@4eccb2e","date":"2012-07-30T12:28:22.939Z","type":"message"}
{"nick":"bnoordhuis","message":"c'mon kohai","date":"2012-07-30T12:28:34.429Z","type":"message"}
{"nick":"mmalecki","message":"now that's interesting...","date":"2012-07-30T12:28:47.613Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: https://github.com/bnoordhuis/libuv/commit/4eccb2e","date":"2012-07-30T12:28:55.090Z","type":"message"}
{"nick":"mmalecki","message":"kohai: stupid bot?","date":"2012-07-30T12:29:00.271Z","type":"message"}
{"nick":"kohai","message":"'Bot' is a derogatory term, and I'm offended.","date":"2012-07-30T12:29:00.845Z","type":"message"}
{"nick":"piscisaureus_","message":"kohai: stupid african american","date":"2012-07-30T12:29:29.816Z","type":"message"}
{"nick":"kohai","message":"I am Kohai, semi-useful communications-facilitating pseudointelligence!","date":"2012-07-30T12:29:30.417Z","type":"message"}
{"nick":"piscisaureus_","message":"african american is not a derogatory term, apparently","date":"2012-07-30T12:29:54.980Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: well review after I plug these leaks","date":"2012-07-30T12:30:05.616Z","type":"message"}
{"nick":"mmalecki","message":"there goes the foolproofness of multiprocess architecture...","date":"2012-07-30T12:30:13.544Z","type":"message"}
{"nick":"piscisaureus_","message":"kohai: stfu!","date":"2012-07-30T12:30:31.667Z","type":"message"}
{"nick":"kohai","message":"I am Kohai, semi-useful communications-facilitating pseudointelligence!","date":"2012-07-30T12:30:37.102Z","type":"message"}
{"nick":"mmalecki","message":"!gh joyent/node#1","date":"2012-07-30T12:30:45.286Z","type":"message"}
{"nick":"kohai","message":"mmalecki, https://github.com/joyent/node/issues/1","date":"2012-07-30T12:30:45.862Z","type":"message"}
{"nick":"mmalecki","message":"actually, bnoordhuis, you might be not-authed","date":"2012-07-30T12:30:54.886Z","type":"message"}
{"nick":"piscisaureus_","message":"\u000301!gh joyent/node#0\u0003\u000301","date":"2012-07-30T12:31:06.830Z","type":"message"}
{"nick":"piscisaureus_","message":"\u000301do it, kohai!","date":"2012-07-30T12:31:15.357Z","type":"message"}
{"nick":"mmalecki","message":"(and yeah, kohai needs a total refactor)","date":"2012-07-30T12:31:18.661Z","type":"message"}
{"nick":"mmalecki","message":"why are you speaking in color, sir?","date":"2012-07-30T12:31:24.890Z","type":"message"}
{"nick":"piscisaureus_","message":"it's not even working\u000301","date":"2012-07-30T12:31:25.887Z","type":"message"}
{"nick":"piscisaureus_","message":"I like grey","date":"2012-07-30T12:31:33.699Z","type":"message"}
{"nick":"mmalecki","message":"lol ok","date":"2012-07-30T12:31:37.977Z","type":"message"}
{"nick":"piscisaureus_","message":",01aaaaa","date":"2012-07-30T12:31:58.089Z","type":"message"}
{"nick":"piscisaureus_","message":",01aaaa","date":"2012-07-30T12:32:01.171Z","type":"message"}
{"nick":"piscisaureus_","message":"\u00031,01trillian is really buggy","date":"2012-07-30T12:32:14.061Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-07-30T12:32:35.055Z","type":"quit"}
{"nick":"piscisaureus_","date":"2012-07-30T12:33:11.730Z","type":"join"}
{"nick":"piscisaureus_","message":"maybe it's sane again now","date":"2012-07-30T12:33:20.724Z","type":"message"}
{"nick":"piscisaureus_","message":"!gh joyent/node#1","date":"2012-07-30T12:33:59.139Z","type":"message"}
{"nick":"kohai","message":"piscisaureus_, https://github.com/joyent/node/issues/1","date":"2012-07-30T12:33:59.806Z","type":"message"}
{"nick":"piscisaureus_","message":"!gh joyent/node#0","date":"2012-07-30T12:34:02.998Z","type":"message"}
{"nick":"kohai","message":"piscisaureus_, https://github.com/joyent/node/issues/0","date":"2012-07-30T12:34:03.527Z","type":"message"}
{"nick":"piscisaureus_","message":"!gh joyent/node@xyzabc","date":"2012-07-30T12:34:24.058Z","type":"message"}
{"nick":"kohai","message":"piscisaureus_, https://github.com/joyent/node","date":"2012-07-30T12:34:24.782Z","type":"message"}
{"nick":"piscisaureus_","message":"!gh x","date":"2012-07-30T12:34:33.194Z","type":"message"}
{"nick":"kohai","message":"piscisaureus_, https://github.com/x","date":"2012-07-30T12:34:33.732Z","type":"message"}
{"nick":"piscisaureus_","message":"!gh \\x1f","date":"2012-07-30T12:34:45.218Z","type":"message"}
{"nick":"kohai","message":"piscisaureus_, https://github.com/x1f","date":"2012-07-30T12:34:45.776Z","type":"message"}
{"nick":"piscisaureus_","message":"I don't think kohai needs a refactor","date":"2012-07-30T12:35:12.602Z","type":"message"}
{"nick":"piscisaureus_","message":"it's like 3 regexes","date":"2012-07-30T12:35:17.980Z","type":"message"}
{"nick":"mmalecki","message":"piscisaureus_: architectural refactor. with hook.io it sometimes gets up to 600 MB of memory usage. I find it pretty sad.","date":"2012-07-30T12:35:46.534Z","type":"message"}
{"nick":"piscisaureus_","message":"wut?","date":"2012-07-30T12:36:00.008Z","type":"message"}
{"nick":"mmalecki","message":"yeah, lol. it's an older version of hook.io tho, I think newer ones are not affected","date":"2012-07-30T12:36:47.064Z","type":"message"}
{"nick":"piscisaureus_","message":"mmalecki: but c'mon, this bot does nothing","date":"2012-07-30T12:37:14.369Z","type":"message"}
{"nick":"piscisaureus_","message":"it replaces, '!gh ' by http://github.com","date":"2012-07-30T12:37:42.177Z","type":"message"}
{"nick":"mmalecki","message":"piscisaureus_: well, it also gives beers to people!","date":"2012-07-30T12:37:52.909Z","type":"message"}
{"nick":"piscisaureus_","message":"and @ becomes /commit/ and # becomes /issues/","date":"2012-07-30T12:37:56.686Z","type":"message"}
{"nick":"piscisaureus_","message":"wow","date":"2012-07-30T12:38:14.018Z","type":"message"}
{"nick":"mmalecki","message":"!insult kohai","date":"2012-07-30T12:38:26.348Z","type":"message"}
{"nick":"kohai","message":"kohai is like one of those callbacks that just won't fire.","date":"2012-07-30T12:38:26.834Z","type":"message"}
{"nick":"mmalecki","message":"does that too","date":"2012-07-30T12:38:32.432Z","type":"message"}
{"nick":"piscisaureus_","message":"var m = /(\\w+)\\+\\+/.exec(s)","date":"2012-07-30T12:39:36.334Z","type":"message"}
{"nick":"piscisaureus_","message":"if (m) {","date":"2012-07-30T12:39:36.579Z","type":"message"}
{"nick":"piscisaureus_","message":"  beers[m[1]] = 1 + (\u0003beers[m[1]]\u0003 || 0)","date":"2012-07-30T12:39:36.579Z","type":"message"}
{"nick":"piscisaureus_","message":"  irc.say(chan, m[1] + ' has ' + \u0003beers[m[1]]\u0003 + ' beers!');","date":"2012-07-30T12:39:36.579Z","type":"message"}
{"nick":"piscisaureus_","message":"}","date":"2012-07-30T12:39:36.579Z","type":"message"}
{"nick":"piscisaureus_","message":"mmalecki: wow, yoy need 5 lines to maintain beers :-p","date":"2012-07-30T12:39:53.111Z","type":"message"}
{"nick":"mmalecki","message":"lol","date":"2012-07-30T12:39:57.811Z","type":"message"}
{"nick":"`3rdEden","message":"but it's webscale","date":"2012-07-30T12:40:12.365Z","type":"message"}
{"nick":"beachdog","date":"2012-07-30T12:42:41.774Z","type":"join"}
{"nick":"piscisaureus_","message":"your mum's butt is webscale","date":"2012-07-30T12:42:51.153Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, what?","date":"2012-07-30T12:43:05.168Z","type":"message"}
{"nick":"piscisaureus_","action":"practicing his troll skills","date":"2012-07-30T12:43:13.814Z","type":"action"}
{"nick":"bnoordhuis","message":"you're away for a couple of minutes and the discussion degrades immediately","date":"2012-07-30T12:43:20.993Z","type":"message"}
{"nick":"mmalecki","message":"piscisaureus_: actually, I want kohai to do some devops tasks too","date":"2012-07-30T12:44:13.222Z","type":"message"}
{"nick":"mmalecki","message":"I used to build microbots for that, 100 lines at max","date":"2012-07-30T12:44:32.328Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: ha! I remember this too well -> http://piscisaureus.no.de/libuv/2012-02-03#23:08:49.296","date":"2012-07-30T12:45:15.842Z","type":"message"}
{"nick":"bnoordhuis","message":"heh, okay - touche","date":"2012-07-30T12:45:41.359Z","type":"message"}
{"nick":"piscisaureus_","message":"mmalecki: I want it to get the newspaper from the post box. Can you do that?","date":"2012-07-30T12:45:55.542Z","type":"message"}
{"nick":"piscisaureus_","message":"er, mailbox :-)","date":"2012-07-30T12:46:08.746Z","type":"message"}
{"nick":"`3rdEden","message":"tsss","date":"2012-07-30T12:46:29.143Z","type":"message"}
{"nick":"mmalecki","message":"piscisaureus_: dunno, do you still read paper newspapers?","date":"2012-07-30T12:47:14.292Z","type":"message"}
{"nick":"piscisaureus_","message":"mmalecki: no I need them to light up the fireplace","date":"2012-07-30T12:47:34.065Z","type":"message"}
{"nick":"piscisaureus_","message":"mmalecki: although I'm slowly moving over to bank notes","date":"2012-07-30T12:47:46.102Z","type":"message"}
{"nick":"mmalecki","message":"piscisaureus_: yeah, they light up pretty quickly. I have nothing to do with them anyway","date":"2012-07-30T12:48:16.374Z","type":"message"}
{"nick":"mmalecki","new_nick":"mmalecki[food]","date":"2012-07-30T13:14:22.327Z","type":"nick"}
{"nick":"piscisaureus_","message":"bnoordhuis: are people supposed to call uv_fs_cleanup after calling a sync uv_fs function?","date":"2012-07-30T13:46:59.917Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: i guess the answer is yes","date":"2012-07-30T13:47:43.580Z","type":"message"}
{"nick":"piscisaureus_","message":"ok, cool","date":"2012-07-30T13:47:48.151Z","type":"message"}
{"nick":"erickt","date":"2012-07-30T13:52:28.288Z","type":"join"}
{"nick":"erickt","reason":"Quit: erickt","date":"2012-07-30T14:05:02.906Z","type":"quit"}
{"nick":"charliesome_","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2012-07-30T14:07:06.024Z","type":"quit"}
{"nick":"bnoordhuis","message":"hrm","date":"2012-07-30T14:08:15.998Z","type":"message"}
{"nick":"bnoordhuis","message":"it's getting pretty hard these days to build a slimmed down kernel that actually boots up a distro","date":"2012-07-30T14:08:42.910Z","type":"message"}
{"nick":"AvianFlu","reason":"Quit: This computer has gone to sleep","date":"2012-07-30T14:12:06.189Z","type":"quit"}
{"nick":"piscisaureus_","message":"bnoordhuis: huh, what do you want?","date":"2012-07-30T14:13:20.066Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: maybe you can try to compile with -fno-empty-for-loops","date":"2012-07-30T14:14:02.766Z","type":"message"}
{"nick":"piscisaureus_","message":"This would be good for april first","date":"2012-07-30T14:15:14.184Z","type":"message"}
{"nick":"piscisaureus_","message":"-fhide-gpl-violations: obfuscate generated code to hide the fact that we're using gnu code","date":"2012-07-30T14:15:38.044Z","type":"message"}
{"nick":"piscisaureus_","message":"-fvegetarian: fill unallocated memory with 0xDEADl34F instead of 0xDEADBEEF","date":"2012-07-30T14:17:18.751Z","type":"message"}
{"nick":"c4milo","date":"2012-07-30T14:19:36.776Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2012-07-30T14:21:18.208Z","type":"quit"}
{"nick":"blackorzar","date":"2012-07-30T14:25:44.018Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: hey","date":"2012-07-30T14:47:50.696Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: ho","date":"2012-07-30T14:48:09.151Z","type":"message"}
{"nick":"bnoordhuis","message":"have you lgtm'd https://github.com/bnoordhuis/libuv/commit/4eccb2e already?","date":"2012-07-30T14:48:14.030Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: on unix, if a node process has no (valid) fd 0, 1, or 2, will uv_spawn succeed ?","date":"2012-07-30T14:48:39.347Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: when inherit is specified that is","date":"2012-07-30T14:48:53.153Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: https://github.com/joyent/node/issues/3779 <-- that happens because the parent proces has no valid stdio :-(","date":"2012-07-30T14:49:50.184Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: dunno. valid 0-2 fds is not required for execve() to succeed","date":"2012-07-30T14:50:13.243Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I mean, in libuv","date":"2012-07-30T14:50:21.980Z","type":"message"}
{"nick":"bnoordhuis","message":"i'd have to check that","date":"2012-07-30T14:50:29.363Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I am considering to just ignore these errors and make spawn succeed","date":"2012-07-30T14:51:05.861Z","type":"message"}
{"nick":"piscisaureus_","message":"maybe only for fd 0-2","date":"2012-07-30T14:51:18.721Z","type":"message"}
{"nick":"piscisaureus_","message":"so if you'd specify to inherit fd 55 and it doesn't exist, it would fail anyway","date":"2012-07-30T14:51:41.638Z","type":"message"}
{"nick":"piscisaureus_","message":"or we could make node set up some dummy stdin when it is started without stdin","date":"2012-07-30T14:52:30.759Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: checked, it's going to fail","date":"2012-07-30T14:52:47.041Z","type":"message"}
{"nick":"bnoordhuis","message":"when UV_INHERIT_FD is set, that is","date":"2012-07-30T14:53:05.533Z","type":"message"}
{"nick":"piscisaureus_","message":"yeah, I see","date":"2012-07-30T14:53:11.389Z","type":"message"}
{"nick":"piscisaureus_","message":"Delegating to redmond: https://github.com/joyent/node/issues/3779#issuecomment-7370643","date":"2012-07-30T14:56:58.478Z","type":"message"}
{"nick":"mmalecki[food]","new_nick":"mmalecki","date":"2012-07-30T14:59:36.383Z","type":"nick"}
{"nick":"bnoordhuis","message":"hah","date":"2012-07-30T15:01:38.245Z","type":"message"}
{"nick":"isaacs","message":"g'morning","date":"2012-07-30T15:02:48.536Z","type":"message"}
{"nick":"bnoordhuis","message":"g'afternoon","date":"2012-07-30T15:03:05.120Z","type":"message"}
{"nick":"pietern","date":"2012-07-30T15:06:03.301Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2012-07-30T15:09:43.341Z","type":"quit"}
{"nick":"dap","date":"2012-07-30T15:10:27.223Z","type":"join"}
{"nick":"AvianFlu","date":"2012-07-30T15:12:40.208Z","type":"join"}
{"nick":"blackorzar_","date":"2012-07-30T15:14:27.776Z","type":"join"}
{"nick":"blackorzar","reason":"Ping timeout: 244 seconds","date":"2012-07-30T15:17:03.890Z","type":"quit"}
{"nick":"ku","date":"2012-07-30T15:17:45.435Z","type":"join"}
{"nick":"chobi_e_","new_nick":"chobi_e","date":"2012-07-30T15:23:07.319Z","type":"nick"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2012-07-30T15:23:57.883Z","type":"quit"}
{"nick":"CIA-108","message":"\u0002node:\u000f \u000303isaacs\u000f \u000307v0.8\u000f * r\u0002b3cf3f3\u000f \u000310\u000f/ (6 files in 3 dirs)\u0002:\u000f Report errors properly from --eval and stdin - http://git.io/JFvDtw","date":"2012-07-30T15:31:29.466Z","type":"message"}
{"nick":"creationix","message":"for my car? http://www.myplates.com/Images/Plates/PLPC207?plateText=NODEJS","date":"2012-07-30T15:39:09.501Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_, bnoordhuis: How would you feel about exposing either a) the fd, or b) some arbitrary unique int on uv streams?","date":"2012-07-30T15:40:33.671Z","type":"message"}
{"nick":"`3rdEden","reason":"Quit: meh","date":"2012-07-30T15:40:34.133Z","type":"quit"}
{"nick":"bnoordhuis","message":"isaacs: i know why you ask but i see no compelling reason to","date":"2012-07-30T15:41:57.965Z","type":"message"}
{"nick":"bnoordhuis","message":"besides, there's no such thing as the fd on windows","date":"2012-07-30T15:42:08.630Z","type":"message"}
{"nick":"dominictarr","message":"creationix, do it","date":"2012-07-30T15:43:30.050Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: well, why i ask is for dtrace scripts to grab ahold of something.","date":"2012-07-30T15:44:09.692Z","type":"message"}
{"nick":"isaacs","message":"they can use remoteHost:remotePort, but that's a string, and a little less awesome to compare against.","date":"2012-07-30T15:44:42.077Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: yes, dap asked about that. he should use a monotonic counter","date":"2012-07-30T15:44:50.439Z","type":"message"}
{"nick":"creationix","message":"dominictarr, ooh, or the green recycle themed one.  software is all about reusing bits after all.","date":"2012-07-30T15:45:34.295Z","type":"message"}
{"nick":"isaacs","message":"so just slap his own numeric thing on each request?  why can't node/libuv do that?","date":"2012-07-30T15:45:36.265Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: why should node/libuv do that?","date":"2012-07-30T15:46:29.688Z","type":"message"}
{"nick":"bnoordhuis","message":"it's useless except for this very specific use case","date":"2012-07-30T15:46:47.817Z","type":"message"}
{"nick":"isaacs","message":"\"it's useless except for this use case\"","date":"2012-07-30T15:47:09.214Z","type":"message"}
{"nick":"isaacs","message":";P","date":"2012-07-30T15:47:11.498Z","type":"message"}
{"nick":"tjfontaine","message":"a use case that only applies to smartos :)","date":"2012-07-30T15:47:19.000Z","type":"message"}
{"nick":"bnoordhuis","message":"exactly. i stress the 'very specific' bit","date":"2012-07-30T15:47:47.492Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: well, it applies to all illumos variants, but yes. it could also apply to os x, if people were using that.","date":"2012-07-30T15:48:01.407Z","type":"message"}
{"nick":"isaacs","message":"ie, it's not dependent on the ustack helper bits","date":"2012-07-30T15:48:27.173Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: I'm definitely +1 on that, I had a hard time tracking those in my dtrace scripts","date":"2012-07-30T15:48:43.085Z","type":"message"}
{"nick":"isaacs","message":"iow, it's not just for joyent cloud analytics, it's for anyone writing dtrace scripts who wants to track latency of the http request/response cycle","date":"2012-07-30T15:49:20.053Z","type":"message"}
{"nick":"piscisaureus_","message":"I don't really see the merit of it","date":"2012-07-30T15:49:57.088Z","type":"message"}
{"nick":"piscisaureus_","message":"can't use use the _handle pointer?","date":"2012-07-30T15:50:06.923Z","type":"message"}
{"nick":"bnoordhuis","message":"or monkey-patch lib/net.js","date":"2012-07-30T15:51:43.624Z","type":"message"}
{"nick":"bnoordhuis","message":"there's enough cruft in there already that at some time was considered a good idea","date":"2012-07-30T15:52:21.800Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't particularly want to pile on more","date":"2012-07-30T15:52:42.537Z","type":"message"}
{"nick":"stephank","date":"2012-07-30T15:53:21.423Z","type":"join"}
{"nick":"isaacs","message":"k, thanks for the feedback.  dap's offline atm.  i'll suggest that.","date":"2012-07-30T15:53:35.565Z","type":"message"}
{"nick":"mmalecki","message":"monkey-punching lib/net.js doesn't sound like a long-term solution","date":"2012-07-30T15:54:16.197Z","type":"message"}
{"nick":"isaacs","message":"yeah, the _handle pointer sounds like it should be just as unique and avoids the string comparison","date":"2012-07-30T15:54:39.681Z","type":"message"}
{"nick":"dominictarr","message":"I don't know, the texas one you linked is pretty bad ass. ","date":"2012-07-30T15:55:05.635Z","type":"message"}
{"nick":"mmalecki","message":"yeah, at least as unique as fd","date":"2012-07-30T15:55:12.240Z","type":"message"}
{"nick":"dominictarr","message":"creationix, the recycling one would be more appealing if you where from a less ass kicking state.","date":"2012-07-30T15:55:39.058Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: https://docs.google.com/a/c9.io/document/d/1QbEyALWdI0YPagdlg50rHh_rl6_bZr5wZK3yjrkHKco/edit <-- what do we pick?","date":"2012-07-30T15:57:05.125Z","type":"message"}
{"nick":"bnoordhuis","message":"god, google accounts is so annoying (when you have more than one account)","date":"2012-07-30T16:00:19.209Z","type":"message"}
{"nick":"piscisaureus_","message":"you can merge them tho","date":"2012-07-30T16:01:43.632Z","type":"message"}
{"nick":"bnoordhuis","message":"hmm, historic figures... team goebbels has a certain ring to it, not sure if fabian will appreciate that though","date":"2012-07-30T16:03:19.813Z","type":"message"}
{"nick":"bnoordhuis","message":"you know how touchy germans are about the war","date":"2012-07-30T16:03:26.334Z","type":"message"}
{"nick":"isaacs","message":"what's this for?","date":"2012-07-30T16:03:41.332Z","type":"message"}
{"nick":"bnoordhuis","message":"c9 team names","date":"2012-07-30T16:03:56.211Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: were you the one that proposed famous delft university figures?","date":"2012-07-30T16:04:15.931Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: sure","date":"2012-07-30T16:04:36.655Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: just trolling lennart en zef","date":"2012-07-30T16:04:42.666Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: Famous Belgian politicians from the early 60s. <- ho ho","date":"2012-07-30T16:06:15.710Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I like the uuids better","date":"2012-07-30T16:06:38.643Z","type":"message"}
{"nick":"CIA-108","message":"\u0002libuv:\u000f \u000303Ben Noordhuis\u000f \u000307master\u000f * r\u00024eccb2e\u000f \u000310\u000f/ (include/uv-private/uv-win.h include/uv.h)\u0002:\u000f include: move ssize_t workaround to uv-win.h - http://git.io/UlU5Vg","date":"2012-07-30T16:18:46.837Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: did you test it?","date":"2012-07-30T16:18:55.690Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: yes, insofar that mingw doesn't choke on that particular bit","date":"2012-07-30T16:19:34.962Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: so, the answer is no :-)","date":"2012-07-30T16:19:57.379Z","type":"message"}
{"nick":"piscisaureus_","message":"where does it choke btw","date":"2012-07-30T16:20:01.555Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: lots of things, want a gist or an issue?","date":"2012-07-30T16:20:30.407Z","type":"message"}
{"nick":"travis-ci","date":"2012-07-30T16:20:40.228Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#505 (master - 4eccb2e : Ben Noordhuis): The build is still failing.","date":"2012-07-30T16:20:40.478Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/be1032431d50...4eccb2ee525d","date":"2012-07-30T16:20:40.479Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1992167","date":"2012-07-30T16:20:40.479Z","type":"message"}
{"nick":"travis-ci","date":"2012-07-30T16:20:40.479Z","type":"part"}
{"nick":"piscisaureus_","message":"bnoordhuis: a gist","date":"2012-07-30T16:20:42.400Z","type":"message"}
{"nick":"bnoordhuis","message":"src/win/error.c: In function �uv_translate_sys_error�:","date":"2012-07-30T16:21:07.408Z","type":"message"}
{"nick":"bnoordhuis","message":"src/win/error.c:115:10: error: �ERROR_SYMLINK_NOT_SUPPORTED� undeclared (first use in this function)","date":"2012-07-30T16:21:07.662Z","type":"message"}
{"nick":"bnoordhuis","message":"src/win/error.c:115:10: note: each undeclared identifier is reported only once for each function it appears in","date":"2012-07-30T16:21:07.663Z","type":"message"}
{"nick":"bnoordhuis","message":"^ the main one","date":"2012-07-30T16:21:09.881Z","type":"message"}
{"nick":"piscisaureus_","message":"ah","date":"2012-07-30T16:21:53.731Z","type":"message"}
{"nick":"piscisaureus_","message":"will fix","date":"2012-07-30T16:21:56.522Z","type":"message"}
{"nick":"bnoordhuis","message":"however","date":"2012-07-30T16:22:01.924Z","type":"message"}
{"nick":"bnoordhuis","action":"creates gist","date":"2012-07-30T16:22:05.515Z","type":"action"}
{"nick":"bnoordhuis","message":"piscisaureus_: https://gist.github.com/2697ffe2de1b913b954b","date":"2012-07-30T16:22:25.058Z","type":"message"}
{"nick":"piscisaureus_","message":"#ifndef ERROR_SYMLINK_NOT_SUPPORTED\u0003","date":"2012-07-30T16:22:31.068Z","type":"message"}
{"nick":"piscisaureus_","message":"#define ERROR_SYMLINK_NOT_SUPPORTED      1464L","date":"2012-07-30T16:22:31.325Z","type":"message"}
{"nick":"piscisaureus_","message":"#endif","date":"2012-07-30T16:22:31.325Z","type":"message"}
{"nick":"piscisaureus_","message":"^-- add to winapi.h","date":"2012-07-30T16:22:31.325Z","type":"message"}
{"nick":"piscisaureus_","message":"ah","date":"2012-07-30T16:22:45.163Z","type":"message"}
{"nick":"piscisaureus_","message":"only that :-)","date":"2012-07-30T16:22:50.745Z","type":"message"}
{"nick":"piscisaureus_","message":"good","date":"2012-07-30T16:22:51.616Z","type":"message"}
{"nick":"bnoordhuis","message":"out for a walk, biab","date":"2012-07-30T16:23:45.854Z","type":"message"}
{"nick":"piscisaureus_","message":"ERROR_SXS_CANT_GEN_ACTCTX","date":"2012-07-30T16:23:49.159Z","type":"message"}
{"nick":"creationix","message":"isaacs, ok, two questions about readable-stream?","date":"2012-07-30T16:35:44.701Z","type":"message"}
{"nick":"creationix","message":"so I see you have (n) bytes in read","date":"2012-07-30T16:35:54.571Z","type":"message"}
{"nick":"creationix","message":"does it wait for n bytes or return partial responses?","date":"2012-07-30T16:36:06.385Z","type":"message"}
{"nick":"creationix","message":"also, I see that you require end to be on another tick from the read call (after read returns)","date":"2012-07-30T16:37:24.080Z","type":"message"}
{"nick":"creationix","message":"I see why, but then all streams are forces to use multiple ticks","date":"2012-07-30T16:37:34.364Z","type":"message"}
{"nick":"creationix","message":"*forced","date":"2012-07-30T16:37:38.944Z","type":"message"}
{"nick":"creationix","message":"I guess now that nextTick is faster, that's ok","date":"2012-07-30T16:38:45.044Z","type":"message"}
{"nick":"creationix","message":"isaacs, I'm going to assume that the (n) in read(n) is an optional maxBytes like we discussed before. (if left out, returns all bytes available, if specefied, will slice the bytes if they are bigger than the requested size).","date":"2012-07-30T16:43:51.559Z","type":"message"}
{"nick":"creationix","message":"so only question left is what happens where there is more data (two chunks and no n) or (one large chunk larger than n)","date":"2012-07-30T16:44:27.346Z","type":"message"}
{"nick":"creationix","message":"will it emit \"readable\" on nextTick and expect you to call read again?","date":"2012-07-30T16:44:43.321Z","type":"message"}
{"nick":"creationix","message":"or assume you'll call read in a loop and never emit \"readable\"?","date":"2012-07-30T16:45:25.217Z","type":"message"}
{"nick":"stagas","date":"2012-07-30T16:46:41.397Z","type":"join"}
{"nick":"mmalecki","new_nick":"mmalecki[away]","date":"2012-07-30T16:48:44.881Z","type":"nick"}
{"nick":"EhevuTov","date":"2012-07-30T16:51:30.750Z","type":"join"}
{"nick":"EhevuTov_","date":"2012-07-30T16:56:08.219Z","type":"join"}
{"nick":"EhevuTov","reason":"Ping timeout: 240 seconds","date":"2012-07-30T16:59:12.447Z","type":"quit"}
{"nick":"erickt","date":"2012-07-30T17:03:40.763Z","type":"join"}
{"nick":"isaacs","message":"creationix: it returns whatever it has if it doesn't have n bytes","date":"2012-07-30T17:05:54.157Z","type":"message"}
{"nick":"isaacs","message":"creationix: nextTick is immediate, yes.","date":"2012-07-30T17:06:06.159Z","type":"message"}
{"nick":"dshaw_","date":"2012-07-30T17:06:28.006Z","type":"join"}
{"nick":"isaacs","message":"creationix: it only emits 'readable' when it *becomes* readable.","date":"2012-07-30T17:06:31.841Z","type":"message"}
{"nick":"isaacs","message":"(that's a SHOULD, not a MUST, imo)","date":"2012-07-30T17:06:37.997Z","type":"message"}
{"nick":"isaacs","message":"creationix: so, if you don't consume all the bytes, it won't ever emit 'readable'","date":"2012-07-30T17:06:48.747Z","type":"message"}
{"nick":"isaacs","message":"just like, if write() never returns false, it'll never emit 'drain'","date":"2012-07-30T17:06:56.074Z","type":"message"}
{"nick":"isaacs","message":"otherwise you'd be emitting 'drain' with every write() call","date":"2012-07-30T17:07:06.013Z","type":"message"}
{"nick":"isaacs","message":"which is silly","date":"2012-07-30T17:07:09.662Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-30T17:07:25.604Z","type":"quit"}
{"nick":"isaacs","message":"creationix: also, it's somewhat tbd what read(undefined) returns - ie, should it return the full buffer always? or maybe just this.buffer[0]?","date":"2012-07-30T17:08:16.544Z","type":"message"}
{"nick":"isaacs","message":"i'm tempted to say that it's up to the implementation.","date":"2012-07-30T17:08:28.858Z","type":"message"}
{"nick":"isaacs","message":"ie, it MAY return up to n bytes, or any number of bytes > 0 if n is not specified.","date":"2012-07-30T17:08:50.907Z","type":"message"}
{"nick":"isaacs","message":"if it returns null, then it MUST emit'readable' when more bytes are available.","date":"2012-07-30T17:08:59.996Z","type":"message"}
{"nick":"isaacs","message":"but beyond that, whatever.","date":"2012-07-30T17:09:05.876Z","type":"message"}
{"nick":"creationix","message":"right, but the important thing is how does a consumer safely read the data","date":"2012-07-30T17:09:27.365Z","type":"message"}
{"nick":"creationix","message":"while (data = stream.read()) { /* handle data */ }","date":"2012-07-30T17:09:45.731Z","type":"message"}
{"nick":"creationix","message":"is that while loop required?","date":"2012-07-30T17:09:49.443Z","type":"message"}
{"nick":"isaacs","message":"yes.","date":"2012-07-30T17:10:01.799Z","type":"message"}
{"nick":"creationix","message":"and supposing I'm writing a  protocol parser, I really want read(n, callback(err, bytes) since I can't do anything till I have n bytes","date":"2012-07-30T17:10:33.771Z","type":"message"}
{"nick":"creationix","message":"but that can be layered on top easy enough","date":"2012-07-30T17:10:42.555Z","type":"message"}
{"nick":"isaacs","message":"eeew","date":"2012-07-30T17:10:53.829Z","type":"message"}
{"nick":"TooTallNate","date":"2012-07-30T17:10:54.532Z","type":"join"}
{"nick":"isaacs","message":"what happens if that many bytes never come in?  you call the cb on end as well?","date":"2012-07-30T17:11:06.203Z","type":"message"}
{"nick":"isaacs","message":"call read() multiple times until it fills up?","date":"2012-07-30T17:11:12.188Z","type":"message"}
{"nick":"creationix","message":"well, if an end happens while waiting for bytes, then emit an error","date":"2012-07-30T17:11:33.610Z","type":"message"}
{"nick":"creationix","message":"or if the connection just died, then it will be a timeout error of some sort","date":"2012-07-30T17:11:49.150Z","type":"message"}
{"nick":"isaacs","message":"or just emit what you've got maybe.","date":"2012-07-30T17:11:55.982Z","type":"message"}
{"nick":"creationix","message":"either way, there will eventually be n bytes or error","date":"2012-07-30T17:11:56.839Z","type":"message"}
{"nick":"isaacs","message":"or zero-fill","date":"2012-07-30T17:11:58.258Z","type":"message"}
{"nick":"isaacs","message":"i mean, i do thi now with block-stream, primarily for parsing tarballs","date":"2012-07-30T17:12:10.318Z","type":"message"}
{"nick":"creationix","message":"for protocol parsing, I only want valid data","date":"2012-07-30T17:12:12.325Z","type":"message"}
{"nick":"creationix","message":"i guess in some cases I would want the partial data for error reporting or recovery","date":"2012-07-30T17:12:32.074Z","type":"message"}
{"nick":"isaacs","message":"so that i only ever get 512-byte data chunks","date":"2012-07-30T17:12:33.183Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2012-07-30T17:13:15.317Z","type":"quit"}
{"nick":"creationix","message":"either way, this doesn't belong in the spec or core","date":"2012-07-30T17:13:42.617Z","type":"message"}
{"nick":"creationix","message":"it's easy enough to wrap this on top of your  interface","date":"2012-07-30T17:13:51.471Z","type":"message"}
{"nick":"creationix","message":"the (n) arg makes it a lot easier","date":"2012-07-30T17:14:03.606Z","type":"message"}
{"nick":"CIA-108","message":"\u0002node:\u000f \u000303Shigeki Ohtsu\u000f \u000307v0.8\u000f * r\u00025b37da2\u000f \u000310\u000f/ doc/api/domain.markdown \u0002:\u000f doc: fix domains example - http://git.io/lHWeLQ","date":"2012-07-30T17:16:57.260Z","type":"message"}
{"nick":"isaacs","message":"creationix: agreed","date":"2012-07-30T17:19:05.746Z","type":"message"}
{"nick":"creationix","message":"isaacs, i think the new api is ok, and it looks like it has an easy upgrade path","date":"2012-07-30T17:19:27.595Z","type":"message"}
{"nick":"creationix","message":"only experience will tell for sure","date":"2012-07-30T17:19:39.425Z","type":"message"}
{"nick":"isaacs","message":"yep","date":"2012-07-30T17:19:44.253Z","type":"message"}
{"nick":"piscisaureus_","message":"hmm","date":"2012-07-30T17:19:49.920Z","type":"message"}
{"nick":"isaacs","message":"i've been playing with it in a few little stream programs i have.","date":"2012-07-30T17:19:51.028Z","type":"message"}
{"nick":"creationix","message":"I'll have to change how I do proxy streams in vfs","date":"2012-07-30T17:19:58.098Z","type":"message"}
{"nick":"piscisaureus_","message":"can we not publish a module first and tell people to use that?","date":"2012-07-30T17:20:01.894Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: it is published ;)  npm install readable-stream","date":"2012-07-30T17:20:21.375Z","type":"message"}
{"nick":"txdv","message":"the signature of uv_unref changed from uv_loop to uv_handle","date":"2012-07-30T17:20:23.684Z","type":"message"}
{"nick":"piscisaureus_","message":"yes","date":"2012-07-30T17:20:30.294Z","type":"message"}
{"nick":"creationix","message":"isaacs, so the vfs case is I want to call vfs.readfile(path, options, callback), and callback has a readable stream (it's like vfs-createReadStream)","date":"2012-07-30T17:21:07.574Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus_: but i'm also going to experiment on a branch with making our stream impls use this, just to see how it is.","date":"2012-07-30T17:21:09.544Z","type":"message"}
{"nick":"creationix","message":"but the stream source can be on a remote machine","date":"2012-07-30T17:21:15.373Z","type":"message"}
{"nick":"creationix","message":"can't make sync calls like .read since it's over async rpc","date":"2012-07-30T17:21:42.699Z","type":"message"}
{"nick":"isaacs","message":"creationix: you can override _read(n, cb) and let it handle buffering for you","date":"2012-07-30T17:22:05.255Z","type":"message"}
{"nick":"isaacs","message":"creationix: ie, the same code that's going to be used for fs read streams, and libuv tcp streams, will be available for you to us","date":"2012-07-30T17:22:21.326Z","type":"message"}
{"nick":"isaacs","message":"e","date":"2012-07-30T17:22:24.339Z","type":"message"}
{"nick":"creationix","message":"of course, I can make it work.  I'd just rather not have to wrap streams explicitly","date":"2012-07-30T17:22:39.239Z","type":"message"}
{"nick":"mikeal","date":"2012-07-30T17:22:43.433Z","type":"join"}
{"nick":"creationix","message":".read([maxBytes], callback(err, data){}) would work without modifications since my rpc supports one-shot callbacks","date":"2012-07-30T17:23:05.468Z","type":"message"}
{"nick":"isaacs","message":"creationix: well, vfs.ReadStream can inherit from Readable, and override the _read() method","date":"2012-07-30T17:23:06.370Z","type":"message"}
{"nick":"isaacs","message":"creationix: just spell it _read instead of read, and you get the Readable API for free.","date":"2012-07-30T17:23:27.973Z","type":"message"}
{"nick":"creationix","message":"I only control the transport, the api and the caller are both users of my code","date":"2012-07-30T17:23:42.091Z","type":"message"}
{"nick":"creationix","message":"so I need to wrap stock streams and present them as stock streams","date":"2012-07-30T17:23:56.158Z","type":"message"}
{"nick":"isaacs","message":"creationix: what do they do now, .on('data')?","date":"2012-07-30T17:24:00.076Z","type":"message"}
{"nick":"isaacs","message":"creationix: or .pipe(dest)?","date":"2012-07-30T17:24:15.099Z","type":"message"}
{"nick":"isaacs","message":"some mix of the two?","date":"2012-07-30T17:24:18.090Z","type":"message"}
{"nick":"creationix","message":"isaacs, https://github.com/c9/vfs/blob/master/socket/consumer.js#L99-156","date":"2012-07-30T17:24:30.334Z","type":"message"}
{"nick":"creationix","message":"the rpc only supports one-shot callbacks (to prevent memory leaks)","date":"2012-07-30T17:24:43.653Z","type":"message"}
{"nick":"creationix","message":"dnode \"fixed\" the memory leak by using harmony proxies","date":"2012-07-30T17:24:52.238Z","type":"message"}
{"nick":"creationix","message":"I'm not willing to require harmony","date":"2012-07-30T17:24:56.919Z","type":"message"}
{"nick":"creationix","message":"err, not proxies, webkmaps","date":"2012-07-30T17:25:04.136Z","type":"message"}
{"nick":"creationix","message":"*weakmaps","date":"2012-07-30T17:25:07.984Z","type":"message"}
{"nick":"isaacs","message":"arggg.  right.  we DO have to set those stupid @!#$! boolean flags.","date":"2012-07-30T17:25:22.119Z","type":"message"}
{"nick":"isaacs","message":"oh well.","date":"2012-07-30T17:25:24.272Z","type":"message"}
{"nick":"isaacs","message":"creationix: i think this will still work just fine","date":"2012-07-30T17:26:04.296Z","type":"message"}
{"nick":"creationix","message":"but basically I add .write(streamId, chunk), end(streamId), onData(streamId, chunk), etc to both sides of the rpc channel","date":"2012-07-30T17:26:15.718Z","type":"message"}
{"nick":"isaacs","message":"creationix: if you add a 'data' listener, it switches into old-stream auto-reading mode.","date":"2012-07-30T17:26:17.429Z","type":"message"}
{"nick":"creationix","message":"and proxy everything manually","date":"2012-07-30T17:26:19.209Z","type":"message"}
{"nick":"isaacs","message":"k","date":"2012-07-30T17:26:26.827Z","type":"message"}
{"nick":"creationix","message":"yeah, it should work fine with the old interface","date":"2012-07-30T17:26:32.352Z","type":"message"}
{"nick":"creationix","message":"I was just hoping to not need the layer on top of rpc to support streams","date":"2012-07-30T17:26:51.478Z","type":"message"}
{"nick":"isaacs","message":"but, you can also refactor your own code to use the new interface, or expose a read(n) method or a _read(n, cb) method","date":"2012-07-30T17:26:55.665Z","type":"message"}
{"nick":"creationix","message":"but that would require .read(bytes, callback) to be the main interface","date":"2012-07-30T17:27:07.022Z","type":"message"}
{"nick":"isaacs","action":"doesn't grok your vfs problem enough to speak to that","date":"2012-07-30T17:27:17.080Z","type":"action"}
{"nick":"creationix","message":"plus it would be slow, since the read request would take time to get from one end to the other","date":"2012-07-30T17:27:23.573Z","type":"message"}
{"nick":"isaacs","message":"creationix: the problem is that read(bytes, callback) is really clunky to use for a lot of use cases.","date":"2012-07-30T17:27:38.569Z","type":"message"}
{"nick":"isaacs","message":"creationix: but if you set a low water mark, and have _read(n, cb) filling up the buffer for you, who cares?","date":"2012-07-30T17:27:56.769Z","type":"message"}
{"nick":"creationix","message":"isaacs, more clunks than on(\"readable\", function () { stream.read()})","date":"2012-07-30T17:28:06.013Z","type":"message"}
{"nick":"isaacs","message":"creationix: yes.","date":"2012-07-30T17:28:16.008Z","type":"message"}
{"nick":"creationix","message":"isaacs, it's more traffic on the wire","date":"2012-07-30T17:28:19.561Z","type":"message"}
{"nick":"isaacs","message":"creationix: why is it more traffic on the wire?  it's exactly the same!","date":"2012-07-30T17:28:29.576Z","type":"message"}
{"nick":"isaacs","message":"in fact, depending on how you set the low water mark and the buffer size, and the cost of framing, it might be less.","date":"2012-07-30T17:28:51.191Z","type":"message"}
{"nick":"creationix","message":"currently, using the old stream api, caller sends readfile(path, callbackid) and then the provider send callbackId, streamID, followed by streamID, data","date":"2012-07-30T17:29:04.482Z","type":"message"}
{"nick":"creationix","message":"all pipelined","date":"2012-07-30T17:29:06.577Z","type":"message"}
{"nick":"creationix","message":"if I had to call read for each chunk, then the caller would send more than just the initial readfile","date":"2012-07-30T17:29:32.995Z","type":"message"}
{"nick":"isaacs","action":"not getting why this is any different","date":"2012-07-30T17:29:59.836Z","type":"action"}
{"nick":"creationix","message":"sorry for being confusing","date":"2012-07-30T17:30:15.213Z","type":"message"}
{"nick":"isaacs","message":":)","date":"2012-07-30T17:30:21.725Z","type":"message"}
{"nick":"creationix","message":"basically the callback api I want doesn't work for my vfs use case","date":"2012-07-30T17:30:29.904Z","type":"message"}
{"nick":"creationix","message":"it causes extra overhead","date":"2012-07-30T17:30:43.464Z","type":"message"}
{"nick":"creationix","message":"but makes it less code for me to write","date":"2012-07-30T17:31:04.221Z","type":"message"}
{"nick":"creationix","message":"so we plan to deprecate the old interface?","date":"2012-07-30T17:31:13.719Z","type":"message"}
{"nick":"isaacs","message":"not any time terribly soon.","date":"2012-07-30T17:31:20.868Z","type":"message"}
{"nick":"isaacs","message":"i mean, deprecate, but not remove","date":"2012-07-30T17:31:24.693Z","type":"message"}
{"nick":"creationix","message":"if not, then I'm fine, the old way works fine for vfs","date":"2012-07-30T17:31:25.579Z","type":"message"}
{"nick":"creationix","message":"I just have to buffer events manually in a few cases","date":"2012-07-30T17:31:34.914Z","type":"message"}
{"nick":"isaacs","message":"there's way too much code to even consider removing on('data') any time this year.","date":"2012-07-30T17:31:46.028Z","type":"message"}
{"nick":"isaacs","message":"creationix: ie, you can probably just leave everything as-is, and i'tll keep Just Working","date":"2012-07-30T17:32:05.898Z","type":"message"}
{"nick":"isaacs","message":"creationix: since you've made it work with .on(data)","date":"2012-07-30T17:32:19.408Z","type":"message"}
{"nick":"creationix","message":"even if I was forces to use .read() and \"readable\" I'd just wrap it","date":"2012-07-30T17:32:24.713Z","type":"message"}
{"nick":"brson","date":"2012-07-30T17:32:38.756Z","type":"join"}
{"nick":"creationix","message":"I had to hack things up to get backpressure working correctly","date":"2012-07-30T17:32:47.416Z","type":"message"}
{"nick":"creationix","message":"it's the rpc's own transport that really matters","date":"2012-07-30T17:32:54.849Z","type":"message"}
{"nick":"creationix","message":"not the stream itself","date":"2012-07-30T17:33:01.011Z","type":"message"}
{"nick":"creationix","message":"if the source can't write data to the tcp or websocket I'm using for rpc, then it doesn't matter what state the disk on the remote side is in","date":"2012-07-30T17:33:28.527Z","type":"message"}
{"nick":"creationix","message":"I have to exert backpressure using the rpc transport","date":"2012-07-30T17:33:47.991Z","type":"message"}
{"nick":"dap","date":"2012-07-30T17:34:38.339Z","type":"join"}
{"nick":"isaacs","message":"creationix: wait, but doesn't the backpressure all just work by default, since you're going to be trying to write to a backed-up TCP stream if the consumer hasn't called read() yet?","date":"2012-07-30T17:35:37.154Z","type":"message"}
{"nick":"isaacs","message":"ie, the write() returns false, and then you wait for 'drain', just like you do now","date":"2012-07-30T17:35:52.777Z","type":"message"}
{"nick":"isaacs","message":"just as if it was paused","date":"2012-07-30T17:35:56.182Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-30T17:36:21.986Z","type":"quit"}
{"nick":"creationix","message":"I don't send drain events across the wire","date":"2012-07-30T17:36:30.373Z","type":"message"}
{"nick":"creationix","message":"in effect I'm inserting a link inside the stream","date":"2012-07-30T17:36:41.301Z","type":"message"}
{"nick":"isaacs","message":"no, you don't have to, but you stop calling write() when it returns false, right?","date":"2012-07-30T17:36:50.605Z","type":"message"}
{"nick":"isaacs","message":"on the client","date":"2012-07-30T17:36:51.905Z","type":"message"}
{"nick":"creationix","message":"so stream from A -> B becomes A -> RPC -> B","date":"2012-07-30T17:36:55.444Z","type":"message"}
{"nick":"isaacs","message":"and RPC is some kind of TCP thing, yes?","date":"2012-07-30T17:37:04.919Z","type":"message"}
{"nick":"creationix","message":"RPC is over some sort of socket","date":"2012-07-30T17:37:13.513Z","type":"message"}
{"nick":"creationix","message":"usually tcp","date":"2012-07-30T17:37:15.800Z","type":"message"}
{"nick":"isaacs","message":"so it's a.pipe(rpc) and on the other end, it's rpc.pipe(b)","date":"2012-07-30T17:37:22.839Z","type":"message"}
{"nick":"creationix","message":"can be pipe ","date":"2012-07-30T17:37:23.366Z","type":"message"}
{"nick":"isaacs","message":"k, same difference","date":"2012-07-30T17:37:32.794Z","type":"message"}
{"nick":"lohkey","date":"2012-07-30T17:37:36.115Z","type":"join"}
{"nick":"isaacs","message":"so, a.pipe(rpc)~{{{internet}}}~rpc.pipe(b)","date":"2012-07-30T17:37:56.844Z","type":"message"}
{"nick":"creationix","message":"except A and B are userspace inside the rpc worls","date":"2012-07-30T17:38:01.252Z","type":"message"}
{"nick":"creationix","message":"*world","date":"2012-07-30T17:38:03.403Z","type":"message"}
{"nick":"creationix","message":"they can't see the rpc","date":"2012-07-30T17:38:06.359Z","type":"message"}
{"nick":"isaacs","message":"sure","date":"2012-07-30T17:38:08.901Z","type":"message"}
{"nick":"isaacs","message":"the API you present is that you give me a writable stream, and i pipe (for example) an fs.readstream into it","date":"2012-07-30T17:38:26.803Z","type":"message"}
{"nick":"isaacs","message":"a = fs.createReadStream(path);  a.pipe(meta.stream)","date":"2012-07-30T17:38:39.290Z","type":"message"}
{"nick":"isaacs","message":"meta.stream is an abstract writable stream that takes each chunk and sends it along the RPC wire","date":"2012-07-30T17:38:59.414Z","type":"message"}
{"nick":"isaacs","message":"yes?","date":"2012-07-30T17:39:02.831Z","type":"message"}
{"nick":"creationix","message":"vfs.mkfile(path, {stream: fs.createReadStream}, callback)","date":"2012-07-30T17:39:04.124Z","type":"message"}
{"nick":"creationix","message":"for uploading a file","date":"2012-07-30T17:39:09.015Z","type":"message"}
{"nick":"isaacs","message":"oh.. so the callback doesn't get a writable stream corresponding to the made file?","date":"2012-07-30T17:39:25.151Z","type":"message"}
{"nick":"creationix","message":"or vfs.readfile(path, {}, function (err, meta) { meta.stream.pipe(foo) })","date":"2012-07-30T17:39:28.001Z","type":"message"}
{"nick":"creationix","message":"isaacs, it used to, but I changed it","date":"2012-07-30T17:39:40.145Z","type":"message"}
{"nick":"creationix","message":"make the API a lot harder to use","date":"2012-07-30T17:39:48.459Z","type":"message"}
{"nick":"creationix","message":"*made","date":"2012-07-30T17:39:51.496Z","type":"message"}
{"nick":"isaacs","message":"does vfs.mkfile(path,{},function(er,meta){foo.pipe(meta.stream)}) still work?","date":"2012-07-30T17:40:14.059Z","type":"message"}
{"nick":"isaacs","message":"the docs seem to imply that it does..","date":"2012-07-30T17:40:21.268Z","type":"message"}
{"nick":"creationix","message":"heh, need to update the docs","date":"2012-07-30T17:40:35.783Z","type":"message"}
{"nick":"creationix","message":"it's a recent change","date":"2012-07-30T17:40:38.256Z","type":"message"}
{"nick":"creationix","message":"not even sure c9.io is using the new api yet","date":"2012-07-30T17:40:47.844Z","type":"message"}
{"nick":"arlolra","date":"2012-07-30T17:40:50.282Z","type":"join"}
{"nick":"isaacs","message":"well, vfs.mkfile(path, {stream:foo}, cb) then?","date":"2012-07-30T17:40:52.220Z","type":"message"}
{"nick":"creationix","message":"yep","date":"2012-07-30T17:40:57.614Z","type":"message"}
{"nick":"isaacs","message":"and you do foo.pipe(RPCThingie)?","date":"2012-07-30T17:41:00.950Z","type":"message"}
{"nick":"isaacs","message":"once you've sent the header yadda yadda?","date":"2012-07-30T17:41:16.411Z","type":"message"}
{"nick":"creationix","message":"the docs are up-to-date https://github.com/c9/vfs/blob/master/example/test-child-streams.js","date":"2012-07-30T17:41:19.692Z","type":"message"}
{"nick":"creationix","message":"no, I can't pipe to the rpc's transport","date":"2012-07-30T17:41:32.848Z","type":"message"}
{"nick":"creationix","message":"it has to be encoded specially to multiplex with all the other data","date":"2012-07-30T17:41:48.885Z","type":"message"}
{"nick":"isaacs","message":"how do you get the bytes from foo into the rpc socket?","date":"2012-07-30T17:41:55.486Z","type":"message"}
{"nick":"isaacs","message":"vfs.mkfile(path, options, callback)","date":"2012-07-30T17:42:03.136Z","type":"message"}
{"nick":"isaacs","message":"Saves a file stream to the vfs. Always first creates a tmp file and then renames for atomic writes.","date":"2012-07-30T17:42:03.385Z","type":"message"}
{"nick":"isaacs","message":"There are no options for this function.","date":"2012-07-30T17:42:06.153Z","type":"message"}
{"nick":"isaacs","message":"meta in the response can include:","date":"2012-07-30T17:42:08.657Z","type":"message"}
{"nick":"isaacs","message":"meta.stream - a writable stream to the filesystem.","date":"2012-07-30T17:42:11.207Z","type":"message"}
{"nick":"creationix","message":"vfs-socket does all the encoding and decoding","date":"2012-07-30T17:42:11.612Z","type":"message"}
{"nick":"isaacs","message":"meta.tmpPath - the actual filepath of the tmpfile","date":"2012-07-30T17:42:13.745Z","type":"message"}
{"nick":"creationix","message":"it's transparent","date":"2012-07-30T17:42:15.212Z","type":"message"}
{"nick":"isaacs","message":"so why can't vfs-socket just give you a writable stream, if it's transparent?","date":"2012-07-30T17:42:29.927Z","type":"message"}
{"nick":"creationix","message":"it can, and it used to","date":"2012-07-30T17:42:39.743Z","type":"message"}
{"nick":"creationix","message":"but then the caller would have to buffer their input stream till I called their callback","date":"2012-07-30T17:42:55.120Z","type":"message"}
{"nick":"creationix","message":"now I buffer internally and then call pipe internally","date":"2012-07-30T17:43:03.133Z","type":"message"}
{"nick":"creationix","message":"and I don't call the callback till the file is fully saved and renamed","date":"2012-07-30T17:43:14.056Z","type":"message"}
{"nick":"creationix","message":"it's much easier to use now","date":"2012-07-30T17:43:19.835Z","type":"message"}
{"nick":"isaacs","message":"sure, it's an onComplete instead of a onStart","date":"2012-07-30T17:43:32.196Z","type":"message"}
{"nick":"isaacs","message":"that's probably better.","date":"2012-07-30T17:43:37.878Z","type":"message"}
{"nick":"creationix","message":"makes error handling a lot easier","date":"2012-07-30T17:43:45.001Z","type":"message"}
{"nick":"isaacs","message":"but somewhere, you're calling .pipe(someKindOfStream)?","date":"2012-07-30T17:43:49.808Z","type":"message"}
{"nick":"creationix","message":"all errors go to the same callback","date":"2012-07-30T17:43:50.636Z","type":"message"}
{"nick":"creationix","message":"yes","date":"2012-07-30T17:43:53.125Z","type":"message"}
{"nick":"isaacs","message":"or do you actually buffer all the data?","date":"2012-07-30T17:43:53.845Z","type":"message"}
{"nick":"creationix","message":"https://github.com/c9/vfs/blob/master/local/localfs.js#L885","date":"2012-07-30T17:44:27.416Z","type":"message"}
{"nick":"creationix","message":"everything is streaming in vfs","date":"2012-07-30T17:44:35.891Z","type":"message"}
{"nick":"creationix","message":"even readdir","date":"2012-07-30T17:44:37.656Z","type":"message"}
{"nick":"isaacs","message":"ok","date":"2012-07-30T17:44:40.754Z","type":"message"}
{"nick":"isaacs","message":"(that's good, it's silly otherwise ;)","date":"2012-07-30T17:44:50.365Z","type":"message"}
{"nick":"creationix","message":"since I multiplex all data over a single connection, large data chunks cause problems","date":"2012-07-30T17:44:56.289Z","type":"message"}
{"nick":"isaacs","message":"creationix: ok, so, then this is actually better for you","date":"2012-07-30T17:45:19.526Z","type":"message"}
{"nick":"isaacs","message":"creationix: assuming that the readable is a new-fangled read() style core read stream, you an do readable.bufferSize = 1024; readable.lowWaterMark=0; readable.pipe(stream)","date":"2012-07-30T17:45:59.885Z","type":"message"}
{"nick":"isaacs","message":"creationix: and you'll never get a chunk bigger than 1024, or anything buffered unnecessarily","date":"2012-07-30T17:46:11.604Z","type":"message"}
{"nick":"creationix","message":"right","date":"2012-07-30T17:46:46.649Z","type":"message"}
{"nick":"isaacs","message":"and if the write() takes a while, then the readable will just not load any more bytes until you're ready for it","date":"2012-07-30T17:46:48.603Z","type":"message"}
{"nick":"creationix","message":"64k chunks are kinda a problem","date":"2012-07-30T17:46:52.838Z","type":"message"}
{"nick":"isaacs","message":"sure","date":"2012-07-30T17:46:56.882Z","type":"message"}
{"nick":"isaacs","message":"1024 is probably excessively smal.","date":"2012-07-30T17:47:03.133Z","type":"message"}
{"nick":"isaacs","message":"but you get the idea.","date":"2012-07-30T17:47:07.220Z","type":"message"}
{"nick":"creationix","message":"yeah, the framing and rpc overhead is ~ 12bytes / chunk","date":"2012-07-30T17:47:21.600Z","type":"message"}
{"nick":"isaacs","message":"smaller than blocksize is silly","date":"2012-07-30T17:47:24.480Z","type":"message"}
{"nick":"creationix","message":"ideally I'll be just under the max tcp chunk size","date":"2012-07-30T17:48:07.306Z","type":"message"}
{"nick":"creationix","message":"but that changes","date":"2012-07-30T17:48:25.044Z","type":"message"}
{"nick":"`3rdEden","date":"2012-07-30T17:51:25.763Z","type":"join"}
{"nick":"isaacs","message":"sure","date":"2012-07-30T17:55:17.521Z","type":"message"}
{"nick":"isaacs","message":"you can gradually increase it until write() starts returning false, even, then back off or do some other clever stuff","date":"2012-07-30T17:55:30.762Z","type":"message"}
{"nick":"isaacs","message":"the point is, it's actually better this way :)","date":"2012-07-30T17:55:41.037Z","type":"message"}
{"nick":"isaacs","message":"if there's a use case where it's *not* better for some reason, then we need to take a close look at that.","date":"2012-07-30T17:56:06.645Z","type":"message"}
{"nick":"xaq","date":"2012-07-30T17:56:13.104Z","type":"join"}
{"nick":"isaacs","message":"so far, piping to multiple dests is the only real pain point","date":"2012-07-30T17:56:19.437Z","type":"message"}
{"nick":"mikeal","date":"2012-07-30T17:58:56.884Z","type":"join"}
{"nick":"CIA-108","message":"\u0002node:\u000f \u000303isaacs\u000f \u000307v0.8\u000f * r\u0002f8dab6a\u000f \u000310\u000f/ doc/api/child_process.markdown \u0002:\u000f doc: Remove timeout arg in child_process.fork - http://git.io/bS1U1Q","date":"2012-07-30T18:02:57.493Z","type":"message"}
{"nick":"creationix","message":"well, in real physical plumbing, you don't pipe to one thing, and then add another","date":"2012-07-30T18:11:38.564Z","type":"message"}
{"nick":"creationix","message":"you connect to a multi-join adapter and connect each of it's endpoints","date":"2012-07-30T18:11:51.246Z","type":"message"}
{"nick":"creationix","message":"and you never re-pipe a live pipe (once the water is flowing)","date":"2012-07-30T18:12:05.223Z","type":"message"}
{"nick":"dshaw_","date":"2012-07-30T18:15:10.767Z","type":"join"}
{"nick":"mmalecki[away]","new_nick":"mmalecki","date":"2012-07-30T18:24:02.825Z","type":"nick"}
{"nick":"TheJH","date":"2012-07-30T18:26:07.439Z","type":"join"}
{"nick":"theCole","reason":"Quit: theCole","date":"2012-07-30T18:26:20.140Z","type":"quit"}
{"nick":"dominictarr","message":"creationix, granted, if where a plumber with a magical samuari sword that could cut off a pipe, and melt the cut together then you probably would.","date":"2012-07-30T18:28:38.228Z","type":"message"}
{"nick":"dominictarr","message":"but I'm coming to agree about the tee adapter","date":"2012-07-30T18:29:10.432Z","type":"message"}
{"nick":"creationix","message":"a tee tool isn't hard to write, just don't burden the core interface with supporting it","date":"2012-07-30T18:29:45.488Z","type":"message"}
{"nick":"dominictarr","message":"no, isaacs has demonstrated that it's possible, and that is enough.","date":"2012-07-30T18:30:16.523Z","type":"message"}
{"nick":"dominictarr","message":"or should that be yes, ...","date":"2012-07-30T18:30:46.646Z","type":"message"}
{"nick":"dominictarr","message":"we agree","date":"2012-07-30T18:31:01.016Z","type":"message"}
{"nick":"dominictarr","message":"oh, I get what you mean. ","date":"2012-07-30T18:31:08.013Z","type":"message"}
{"nick":"dominictarr","message":"with a tee pipe, you'd connect each fork at the same time.","date":"2012-07-30T18:31:36.851Z","type":"message"}
{"nick":"dominictarr","message":"not \"re-pipe a live pipe\"... although, you could disconnect a branch, if you had a tap in the right place.","date":"2012-07-30T18:33:23.583Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-07-30T18:37:17.188Z","type":"quit"}
{"nick":"CIA-108","message":"\u0002libuv:\u000f \u000303Bert Belder\u000f \u000307winfs\u000f * r\u000233bdd1b\u000f \u000310\u000f/ (include/uv-private/uv-win.h include/uv.h src/win/fs.c)\u0002:\u000f Windows: fix memory leaks in fs - http://git.io/Z8HLaw","date":"2012-07-30T18:37:55.840Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-07-30T18:38:01.727Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: ^-- review ?","date":"2012-07-30T18:38:21.799Z","type":"message"}
{"nick":"piscisaureus_","reason":"Client Quit","date":"2012-07-30T18:38:39.978Z","type":"quit"}
{"nick":"travis-ci","date":"2012-07-30T18:40:11.297Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#506 (winfs - 33bdd1b : Bert Belder): The build failed.","date":"2012-07-30T18:40:11.647Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/commit/33bdd1ba0c5a","date":"2012-07-30T18:40:11.647Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1993171","date":"2012-07-30T18:40:11.647Z","type":"message"}
{"nick":"travis-ci","date":"2012-07-30T18:40:11.648Z","type":"part"}
{"nick":"EhevuTov_","reason":"Ping timeout: 250 seconds","date":"2012-07-30T18:53:19.037Z","type":"quit"}
{"nick":"stagas_","date":"2012-07-30T18:56:40.077Z","type":"join"}
{"nick":"EhevuTov_","date":"2012-07-30T18:58:20.965Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 250 seconds","date":"2012-07-30T18:59:22.938Z","type":"quit"}
{"nick":"stagas_","new_nick":"stagas","date":"2012-07-30T18:59:33.826Z","type":"nick"}
{"nick":"theCole","date":"2012-07-30T19:03:10.293Z","type":"join"}
{"nick":"theCole","reason":"Client Quit","date":"2012-07-30T19:03:36.533Z","type":"quit"}
{"nick":"stagas_","date":"2012-07-30T19:03:46.310Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 255 seconds","date":"2012-07-30T19:05:26.014Z","type":"quit"}
{"nick":"stagas","date":"2012-07-30T19:05:55.243Z","type":"join"}
{"nick":"stagas_","reason":"Ping timeout: 240 seconds","date":"2012-07-30T19:08:12.274Z","type":"quit"}
{"nick":"EhevuTov_","reason":"Quit: Leaving","date":"2012-07-30T19:11:16.326Z","type":"quit"}
{"nick":"piscisaureus_","date":"2012-07-30T19:18:44.639Z","type":"join"}
{"nick":"`3rdEden","reason":"Quit: Leaving...","date":"2012-07-30T19:19:56.341Z","type":"quit"}
{"nick":"piscisaureus_","message":"aand baack","date":"2012-07-30T19:25:58.181Z","type":"message"}
{"nick":"brson","reason":"Read error: Operation timed out","date":"2012-07-30T19:27:19.649Z","type":"quit"}
{"nick":"chobi_e","new_nick":"chobi_e_","date":"2012-07-30T19:28:23.632Z","type":"nick"}
{"nick":"indexzero","date":"2012-07-30T19:34:31.720Z","type":"join"}
{"nick":"`3rdEden","date":"2012-07-30T19:39:10.389Z","type":"join"}
{"nick":"arlolra","reason":"Quit: Linkinus - http://linkinus.com","date":"2012-07-30T19:39:32.461Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2012-07-30T19:47:09.078Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-07-30T19:57:30.859Z","type":"quit"}
{"nick":"avalanche123","date":"2012-07-30T20:07:16.244Z","type":"join"}
{"nick":"indexzero","date":"2012-07-30T20:08:10.498Z","type":"join"}
{"nick":"theCole","date":"2012-07-30T20:17:14.219Z","type":"join"}
{"nick":"theCole","reason":"Client Quit","date":"2012-07-30T20:21:34.537Z","type":"quit"}
{"nick":"theCole","date":"2012-07-30T20:30:11.754Z","type":"join"}
{"nick":"theCole","reason":"Client Quit","date":"2012-07-30T20:32:57.450Z","type":"quit"}
{"nick":"`3rdEden","reason":"Quit: Zzzz gnite <3","date":"2012-07-30T20:35:03.572Z","type":"quit"}
{"nick":"ku","reason":"Quit: leaving","date":"2012-07-30T20:45:12.199Z","type":"quit"}
{"nick":"theCole","date":"2012-07-30T20:49:14.234Z","type":"join"}
{"nick":"pietern","reason":"Quit: pietern","date":"2012-07-30T20:52:04.268Z","type":"quit"}
{"nick":"theCole","reason":"Client Quit","date":"2012-07-30T20:53:28.397Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2012-07-30T20:59:40.297Z","type":"quit"}
{"nick":"loladiro","date":"2012-07-30T20:59:51.197Z","type":"join"}
{"nick":"pietern","date":"2012-07-30T21:00:58.888Z","type":"join"}
{"nick":"loladiro","date":"2012-07-30T21:04:29.857Z","type":"part"}
{"nick":"loladiro","date":"2012-07-30T21:05:02.336Z","type":"join"}
{"nick":"xaq","reason":"Remote host closed the connection","date":"2012-07-30T21:08:40.975Z","type":"quit"}
{"nick":"xaq","date":"2012-07-30T21:09:07.781Z","type":"join"}
{"nick":"avalanche123","reason":"Quit: Computer has gone to sleep.","date":"2012-07-30T21:10:25.048Z","type":"quit"}
{"nick":"AlbireoX","reason":"Ping timeout: 240 seconds","date":"2012-07-30T21:11:00.276Z","type":"quit"}
{"nick":"xaq_","date":"2012-07-30T21:11:03.762Z","type":"join"}
{"nick":"AlbireoX","date":"2012-07-30T21:11:14.801Z","type":"join"}
{"nick":"hz","date":"2012-07-30T21:13:02.704Z","type":"join"}
{"nick":"xaq","reason":"Ping timeout: 250 seconds","date":"2012-07-30T21:14:08.227Z","type":"quit"}
{"nick":"xaq_","reason":"Read error: Connection reset by peer","date":"2012-07-30T21:21:50.569Z","type":"quit"}
{"nick":"xaq","date":"2012-07-30T21:22:23.369Z","type":"join"}
{"nick":"theCole","date":"2012-07-30T21:39:50.266Z","type":"join"}
{"nick":"hz","date":"2012-07-30T21:40:24.097Z","type":"quit"}
{"nick":"piscisaureus_","date":"2012-07-30T21:44:22.646Z","type":"join"}
{"nick":"piscisaureus_","message":"bnoordhuis: sure","date":"2012-07-30T21:44:59.409Z","type":"message"}
{"nick":"piscisaureus_","message":"?","date":"2012-07-30T21:45:01.538Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: enum is practically always an int right?","date":"2012-07-30T21:48:38.878Z","type":"message"}
{"nick":"piscisaureus_","message":"or is there anything I should know","date":"2012-07-30T21:48:48.130Z","type":"message"}
{"nick":"tjfontaine","message":"I thought it was practically always uint","date":"2012-07-30T21:49:47.356Z","type":"message"}
{"nick":"tjfontaine","message":"unless it hit a negative case","date":"2012-07-30T21:49:56.762Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: Leaving","date":"2012-07-30T21:51:33.262Z","type":"quit"}
{"nick":"piscisaureus_","message":"right, ok","date":"2012-07-30T21:52:15.240Z","type":"message"}
{"nick":"piscisaureus_","message":"that doesn't matter here","date":"2012-07-30T21:52:19.102Z","type":"message"}
{"nick":"piscisaureus_","message":"I was just curious if chaning an int for an enum was going to break teh ABI","date":"2012-07-30T21:52:30.674Z","type":"message"}
{"nick":"piscisaureus_","message":"but I suppose that won't happen","date":"2012-07-30T21:52:34.246Z","type":"message"}
{"nick":"dominictarr","date":"2012-07-30T21:53:47.618Z","type":"join"}
{"nick":"CIA-108","message":"\u0002libuv:\u000f \u000303Bert Belder\u000f \u000307v0.8\u000f * r\u000273096da\u000f \u000310\u000f/ (include/uv-private/uv-win.h include/uv.h src/win/fs.c)\u0002:\u000f windows: fix memory leaks in fs - http://git.io/rxTndA","date":"2012-07-30T21:53:54.859Z","type":"message"}
{"nick":"travis-ci","date":"2012-07-30T21:55:57.197Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#507 (v0.8 - 73096da : Bert Belder): The build is still failing.","date":"2012-07-30T21:55:57.441Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/1d5eb9147429...73096da21b5c","date":"2012-07-30T21:55:57.442Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1994840","date":"2012-07-30T21:55:57.442Z","type":"message"}
{"nick":"travis-ci","date":"2012-07-30T21:55:57.442Z","type":"part"}
{"nick":"brson","date":"2012-07-30T21:59:41.258Z","type":"join"}
{"nick":"CIA-108","message":"\u0002libuv:\u000f \u000303Ben Noordhuis\u000f \u000307v0.8\u000f * r\u0002c803c65\u000f \u000310\u000f/ (include/uv-private/uv-win.h include/uv.h)\u0002:\u000f include: move ssize_t workaround to uv-win.h - http://git.io/3g4wqQ","date":"2012-07-30T22:04:06.186Z","type":"message"}
{"nick":"CIA-108","message":"\u0002libuv:\u000f \u000303Bert Belder\u000f \u000307v0.8\u000f * r\u00027e6b335\u000f \u000310\u000f/ src/win/fs.c \u0002:\u000f windwos: remove unreachable code from fs.c - http://git.io/VvVgwA","date":"2012-07-30T22:04:06.432Z","type":"message"}
{"nick":"CIA-108","message":"\u0002libuv:\u000f \u000303Bert Belder\u000f \u000307v0.8\u000f * r\u000281a9826\u000f \u000310\u000f/ include/uv.h \u0002:\u000f common: uv_fs_t.path should be constant - http://git.io/SNldnw","date":"2012-07-30T22:04:06.777Z","type":"message"}
{"nick":"travis-ci","date":"2012-07-30T22:05:58.833Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#508 (v0.8 - 81a9826 : Bert Belder): The build is still failing.","date":"2012-07-30T22:05:59.075Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/73096da21b5c...81a9826d79e0","date":"2012-07-30T22:05:59.075Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1994909","date":"2012-07-30T22:05:59.075Z","type":"message"}
{"nick":"travis-ci","date":"2012-07-30T22:05:59.075Z","type":"part"}
{"nick":"piscisaureus_","message":"crap","date":"2012-07-30T22:06:11.213Z","type":"message"}
{"nick":"piscisaureus_","message":"typos","date":"2012-07-30T22:06:13.319Z","type":"message"}
{"nick":"CIA-108","message":"\u0002libuv:\u000f \u000303Bert Belder\u000f \u000307v0.8\u000f * r\u0002514265e\u000f \u000310\u000f/ (include/uv-private/uv-win.h include/uv.h src/win/fs.c)\u0002:\u000f windows: fix memory leaks in fs - http://git.io/bZFFKQ","date":"2012-07-30T22:06:15.690Z","type":"message"}
{"nick":"CIA-108","message":"\u0002libuv:\u000f \u000303Ben Noordhuis\u000f \u000307v0.8\u000f * r\u00024168855\u000f \u000310\u000f/ (include/uv-private/uv-win.h include/uv.h)\u0002:\u000f include: move ssize_t workaround to uv-win.h - http://git.io/it7ipQ","date":"2012-07-30T22:06:15.935Z","type":"message"}
{"nick":"travis-ci","date":"2012-07-30T22:08:04.745Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#509 (v0.8 - 4168855 : Ben Noordhuis): The build is still failing.","date":"2012-07-30T22:08:04.988Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/81a9826d79e0...4168855da57f","date":"2012-07-30T22:08:04.989Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1994922","date":"2012-07-30T22:08:04.989Z","type":"message"}
{"nick":"travis-ci","date":"2012-07-30T22:08:04.989Z","type":"part"}
{"nick":"piscisaureus_","message":"ok really time to head out now","date":"2012-07-30T22:09:20.200Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-07-30T22:09:26.015Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2012-07-30T22:12:58.887Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-30T22:16:14.470Z","type":"quit"}
{"nick":"paddybyers","reason":"Quit: paddybyers","date":"2012-07-30T22:17:10.686Z","type":"quit"}
{"nick":"mikeal","date":"2012-07-30T22:19:54.262Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2012-07-30T22:24:17.429Z","type":"quit"}
{"nick":"brson","date":"2012-07-30T22:24:35.355Z","type":"join"}
{"nick":"loladiro","date":"2012-07-30T22:32:51.316Z","type":"part"}
{"nick":"EhevuTov","date":"2012-07-30T22:32:59.741Z","type":"join"}
{"nick":"piscisaureus_","date":"2012-07-30T22:45:50.379Z","type":"join"}
{"nick":"xaq","reason":"Remote host closed the connection","date":"2012-07-30T22:59:53.628Z","type":"quit"}
{"nick":"xaq","date":"2012-07-30T23:00:20.361Z","type":"join"}
{"nick":"pietern","reason":"Quit: pietern","date":"2012-07-30T23:04:13.530Z","type":"quit"}
{"nick":"stagas","reason":"Quit: ChatZilla 0.9.88-rdmsoft [XULRunner 1.9.0.17/2009122204]","date":"2012-07-30T23:11:54.148Z","type":"quit"}
{"nick":"dshaw_1","date":"2012-07-30T23:12:43.774Z","type":"join"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-07-30T23:13:31.885Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 250 seconds","date":"2012-07-30T23:14:09.809Z","type":"quit"}
{"nick":"pietern","date":"2012-07-30T23:14:52.064Z","type":"join"}
{"nick":"avalanche123","date":"2012-07-30T23:18:58.418Z","type":"join"}
{"nick":"xaq","reason":"Ping timeout: 260 seconds","date":"2012-07-30T23:21:47.350Z","type":"quit"}
{"nick":"theCole","reason":"Quit: theCole","date":"2012-07-30T23:25:47.971Z","type":"quit"}
{"nick":"theCole","date":"2012-07-30T23:28:21.974Z","type":"join"}
{"nick":"CIA-108","message":"\u0002libuv:\u000f \u000303Alan Gutierrez\u000f \u000307master\u000f * r\u00028f66bfc\u000f \u000310\u000f/ README.md \u0002:\u000f doc: add 'Intro to libuv' link to README - http://git.io/5QSKvw","date":"2012-07-30T23:33:25.817Z","type":"message"}
{"nick":"travis-ci","date":"2012-07-30T23:35:21.725Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] joyent/libuv#510 (master - 8f66bfc : Alan Gutierrez): The build is still failing.","date":"2012-07-30T23:35:21.976Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/joyent/libuv/compare/4eccb2ee525d...8f66bfcee05f","date":"2012-07-30T23:35:21.976Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/joyent/libuv/builds/1995353","date":"2012-07-30T23:35:21.976Z","type":"message"}
{"nick":"travis-ci","date":"2012-07-30T23:35:21.976Z","type":"part"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-30T23:40:05.217Z","type":"quit"}
{"nick":"scizo","date":"2012-07-30T23:51:27.173Z","type":"join"}
{"nick":"scizo","message":"Does the build system support building a dynamic library?","date":"2012-07-30T23:51:49.556Z","type":"message"}
{"nick":"scizo","message":"I looked around the Makefile and it looks like it only supports making a libuv.a. I wanted to ask and make sure though.","date":"2012-07-30T23:53:55.480Z","type":"message"}
{"nick":"scizo","message":"Thanks in advance for any help.","date":"2012-07-30T23:54:14.578Z","type":"message"}
{"nick":"rendar","date":"2012-07-30T23:56:07.813Z","type":"quit"}
