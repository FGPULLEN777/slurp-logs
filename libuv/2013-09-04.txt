{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-09-04T00:00:01.125Z","type":"quit"}
{"nick":"ircretary","date":"2013-09-04T00:00:08.335Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #157 \u00037UNSTABLE\u000f windows-x64 (3/194) smartos-ia32 (2/193) windows-ia32 (4/194) smartos-x64 (2/193) http://jenkins.nodejs.org/job/libuv-master-gyp/157/","date":"2013-09-04T00:00:08.733Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-09-04T00:03:06.195Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23, creationix: one more edge case for you. when you create a Buffer from C++ you can pass a callback that'll be called when the weak persistent is cleaned up. that callback doesn't have to reach JS, but it could potentially error. thus loosing you're entire stack trace","date":"2013-09-04T00:07:55.218Z","type":"message"}
{"nick":"trevnorris","message":"is that something you'd want to capture?","date":"2013-09-04T00:08:02.661Z","type":"message"}
{"nick":"trevnorris","message":"i mean, are you looking to capture what's wrong w/ node, what's wrong with user's code?","date":"2013-09-04T00:08:18.282Z","type":"message"}
{"nick":"creationix","message":"user's code I think","date":"2013-09-04T00:08:35.267Z","type":"message"}
{"nick":"othiym23","message":"more the latter than the former, but remember that New Relic is trying to help people improve their code, which means knowing when Node itself is doing them wrong","date":"2013-09-04T00:08:44.285Z","type":"message"}
{"nick":"trevnorris","message":"well, node doesn't do that. but a user could. and tracing that back would be near impossible.","date":"2013-09-04T00:09:12.870Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-09-04T00:09:35.338Z","type":"quit"}
{"nick":"trevnorris","message":"it's also common for users to call a JS callback, after an asynchronous operation, directly. skipping the entire MakeCallback/domain route","date":"2013-09-04T00:09:56.973Z","type":"message"}
{"nick":"trevnorris","message":"which means you'd loose absolutely everything","date":"2013-09-04T00:10:14.514Z","type":"message"}
{"nick":"othiym23","message":"yeah, may the good lord have mercy on their souls","date":"2013-09-04T00:10:22.066Z","type":"message"}
{"nick":"trevnorris","message":"hah, ok","date":"2013-09-04T00:10:26.748Z","type":"message"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-09-04T00:10:47.755Z","type":"quit"}
{"nick":"othiym23","message":"people reaching directly into chest cavities and pumping the system's heart are going to need to be aware that they're operating outside established parameters","date":"2013-09-04T00:10:50.014Z","type":"message"}
{"nick":"trevnorris","message":"haha ok.","date":"2013-09-04T00:11:09.956Z","type":"message"}
{"nick":"trevnorris","message":"my thought was by attaching the data directly to the request object, if they did do something that stupid and it failed, at least you'd be able to print the attached object.","date":"2013-09-04T00:11:17.592Z","type":"message"}
{"nick":"trevnorris","message":"then you could point to the offending code quickly and say FIX THAT!","date":"2013-09-04T00:11:31.133Z","type":"message"}
{"nick":"othiym23","message":"yeah, that would be nice to have","date":"2013-09-04T00:13:48.610Z","type":"message"}
{"nick":"othiym23","message":"it seems pretty peripheral to addAsyncListener, though","date":"2013-09-04T00:14:00.097Z","type":"message"}
{"nick":"trevnorris","message":"except that Node creates a new Object for every asynchronous request, and I can capture that and pass it to the listener, at which time you can attach anything you want.","date":"2013-09-04T00:15:07.514Z","type":"message"}
{"nick":"trevnorris","message":"that's the way it's currently working.","date":"2013-09-04T00:15:26.240Z","type":"message"}
{"nick":"othiym23","message":"yeah, and that's appealing, although I'd have to play with it to see how to make it useful","date":"2013-09-04T00:16:35.842Z","type":"message"}
{"nick":"trevnorris","message":"every async requests needs an object that contains the callback properties of the event. i'm working on capturing all of those and sending them to the async listener.","date":"2013-09-04T00:16:42.419Z","type":"message"}
{"nick":"othiym23","message":"also need to modify the polyfill to do as much of that as it can","date":"2013-09-04T00:16:46.252Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-04T00:22:22.603Z","type":"quit"}
{"nick":"trevnorris","action":"&","date":"2013-09-04T00:22:27.845Z","type":"action"}
{"nick":"LOUDBOT","message":"NO MOM DONT GO TO WORK TODAY YOULL DIE","date":"2013-09-04T00:22:28.477Z","type":"message"}
{"nick":"Raynos","message":"trevnorris: so fake async apis that just do function set(key, value, cb) { cache[key] = value; cb(null) } are a problem ?","date":"2013-09-04T00:27:43.942Z","type":"message"}
{"nick":"othiym23","action":"shoots Raynos","date":"2013-09-04T00:28:12.374Z","type":"action"}
{"nick":"othiym23","message":"let it die, man!","date":"2013-09-04T00:28:24.580Z","type":"message"}
{"nick":"Raynos","message":"that should be caught by domains right ?","date":"2013-09-04T00:28:30.417Z","type":"message"}
{"nick":"Raynos","message":"especially if you set the cache in a request handler or in a real callback","date":"2013-09-04T00:28:40.253Z","type":"message"}
{"nick":"Raynos","message":"other then the \"you are evil because you call a cb() synchronously\" problem which is an aside","date":"2013-09-04T00:28:58.519Z","type":"message"}
{"nick":"othiym23","message":"domains will catch that just fine, if they're active","date":"2013-09-04T00:29:15.666Z","type":"message"}
{"nick":"othiym23","message":"we're talking about somebody manually calling the oncomplete function on a Socket, for example","date":"2013-09-04T00:29:28.522Z","type":"message"}
{"nick":"Raynos","message":"mother of god ._.","date":"2013-09-04T00:29:53.914Z","type":"message"}
{"nick":"othiym23","message":"yeah, see?","date":"2013-09-04T00:30:56.706Z","type":"message"}
{"nick":"othiym23","message":"there's no helping those people","date":"2013-09-04T00:31:08.745Z","type":"message"}
{"nick":"creationix","message":"aww, ben went offline already","date":"2013-09-04T00:31:56.342Z","type":"message"}
{"nick":"creationix","message":"well it *is* 2:30am there","date":"2013-09-04T00:32:25.785Z","type":"message"}
{"nick":"creationix","message":"I started a libuv shim to make it not use callbacks https://github.com/creationix/blanket/blob/master/main.c","date":"2013-09-04T00:32:42.118Z","type":"message"}
{"nick":"creationix","message":"wrapping all the event sources","date":"2013-09-04T00:32:57.047Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-04T00:36:30.018Z","type":"nick"}
{"nick":"Raynos","message":"othiym23: `process.domain.exit() && server._connections[0]._handle.onread(-10)` that kind of thing ?","date":"2013-09-04T00:38:21.956Z","type":"message"}
{"nick":"dshaw_","date":"2013-09-04T00:44:11.450Z","type":"join"}
{"nick":"othiym23","message":"Raynos: owwww yeah that kind of thing","date":"2013-09-04T00:47:27.173Z","type":"message"}
{"nick":"othiym23","message":"is that actual code from something?","date":"2013-09-04T00:47:35.449Z","type":"message"}
{"nick":"othiym23","message":"please tell me you made that up","date":"2013-09-04T00:47:39.043Z","type":"message"}
{"nick":"Raynos","message":"othiym23: I made that up","date":"2013-09-04T00:47:57.579Z","type":"message"}
{"nick":"othiym23","message":"whew","date":"2013-09-04T00:48:02.761Z","type":"message"}
{"nick":"tjfontaine","message":" maybe he's lying to you now","date":"2013-09-04T00:52:17.803Z","type":"message"}
{"nick":"tjfontaine","message":"WE WILL NEVER KNOW","date":"2013-09-04T00:52:21.190Z","type":"message"}
{"nick":"LOUDBOT","message":"WHY YES THAT IS EXACTLY WHAT I MEANT","date":"2013-09-04T00:52:21.621Z","type":"message"}
{"nick":"ecr","reason":"Quit: ecr","date":"2013-09-04T00:53:17.144Z","type":"quit"}
{"nick":"kazupon","date":"2013-09-04T01:02:36.993Z","type":"join"}
{"nick":"TooTallNate","message":"AHHH","date":"2013-09-04T01:07:16.852Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-09-04T01:07:25.996Z","type":"quit"}
{"nick":"austo","reason":"Quit: Leaving","date":"2013-09-04T01:07:41.068Z","type":"quit"}
{"nick":"kellabyte","message":"WHY ARE WE YELLING?","date":"2013-09-04T01:09:18.208Z","type":"message"}
{"nick":"LOUDBOT","message":"DO WORK, TAKE CALLS, PICK ONE","date":"2013-09-04T01:09:18.642Z","type":"message"}
{"nick":"mikeal","date":"2013-09-04T01:10:06.451Z","type":"join"}
{"nick":"othiym23","message":"oh LOUDBOT, you're so quaint","date":"2013-09-04T01:10:54.698Z","type":"message"}
{"nick":"othiym23","message":"what's a \"call\", and who \"takes\" on in 2013?","date":"2013-09-04T01:11:10.076Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-09-04T01:15:16.138Z","type":"quit"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-09-04T01:15:59.267Z","type":"quit"}
{"nick":"brucem","message":"othiym23: people who deal with actual money.","date":"2013-09-04T01:19:23.891Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-09-04T01:20:13.775Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-04T01:21:54.743Z","type":"nick"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-09-04T01:22:09.811Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-04T01:22:13.812Z","type":"quit"}
{"nick":"othiym23","message":"what's \"money\"","date":"2013-09-04T01:23:01.139Z","type":"message"}
{"nick":"othiym23","message":"is that like Bitcoins?","date":"2013-09-04T01:23:04.611Z","type":"message"}
{"nick":"kellabyte","message":"haha","date":"2013-09-04T01:24:03.811Z","type":"message"}
{"nick":"kazupon","date":"2013-09-04T01:25:01.815Z","type":"join"}
{"nick":"kevinswiber","date":"2013-09-04T01:39:30.490Z","type":"join"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-09-04T01:44:18.891Z","type":"quit"}
{"nick":"dshaw_","date":"2013-09-04T01:51:14.946Z","type":"join"}
{"nick":"abraxas","date":"2013-09-04T01:58:07.683Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-09-04T02:06:19.988Z","type":"quit"}
{"nick":"sblom","date":"2013-09-04T02:14:04.725Z","type":"join"}
{"nick":"st_luke","date":"2013-09-04T02:17:40.338Z","type":"join"}
{"nick":"sblom","reason":"Ping timeout: 248 seconds","date":"2013-09-04T02:18:13.716Z","type":"quit"}
{"nick":"inolen","date":"2013-09-04T02:18:51.627Z","type":"join"}
{"nick":"julianduque","reason":"Remote host closed the connection","date":"2013-09-04T02:24:43.770Z","type":"quit"}
{"nick":"julianduque","date":"2013-09-04T02:25:41.347Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-09-04T02:35:12.476Z","type":"quit"}
{"nick":"dap","date":"2013-09-04T02:50:36.996Z","type":"join"}
{"nick":"dap","reason":"Read error: Connection reset by peer","date":"2013-09-04T02:51:40.130Z","type":"quit"}
{"nick":"dap1","date":"2013-09-04T02:51:40.556Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-04T02:57:00.561Z","type":"quit"}
{"nick":"c4milo_","date":"2013-09-04T03:04:55.561Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-09-04T03:05:49.082Z","type":"quit"}
{"nick":"CoverSlide","reason":"Ping timeout: 256 seconds","date":"2013-09-04T03:07:44.245Z","type":"quit"}
{"nick":"dshaw_","date":"2013-09-04T03:18:32.707Z","type":"join"}
{"nick":"c4milo_","reason":"Remote host closed the connection","date":"2013-09-04T03:25:10.138Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-09-04T03:28:52.582Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-04T03:29:48.847Z","type":"quit"}
{"nick":"brson_","date":"2013-09-04T03:49:02.330Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 260 seconds","date":"2013-09-04T03:52:48.001Z","type":"quit"}
{"nick":"kazupon","date":"2013-09-04T03:59:13.902Z","type":"join"}
{"nick":"rje","reason":"Excess Flood","date":"2013-09-04T03:59:42.773Z","type":"quit"}
{"nick":"roxlu","reason":"Ping timeout: 264 seconds","date":"2013-09-04T03:59:43.613Z","type":"quit"}
{"nick":"roxlu_","date":"2013-09-04T03:59:49.358Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-09-04T04:00:08.242Z","type":"quit"}
{"nick":"kazupon_","date":"2013-09-04T04:00:11.743Z","type":"join"}
{"nick":"rje_","date":"2013-09-04T04:00:48.435Z","type":"join"}
{"nick":"kazupon_","reason":"Remote host closed the connection","date":"2013-09-04T04:12:16.616Z","type":"quit"}
{"nick":"c4milo","date":"2013-09-04T04:32:52.161Z","type":"join"}
{"nick":"st_luke","date":"2013-09-04T04:35:37.730Z","type":"join"}
{"nick":"dshaw_","date":"2013-09-04T04:38:54.339Z","type":"join"}
{"nick":"othiym23","message":"is there something magical about the process global that prevents one from using Object.defineProperty on it?","date":"2013-09-04T04:42:02.424Z","type":"message"}
{"nick":"othiym23","message":"...he says right before opening up src/node.js and checking for himself","date":"2013-09-04T04:42:16.306Z","type":"message"}
{"nick":"kazupon","date":"2013-09-04T04:42:38.688Z","type":"join"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-09-04T04:43:39.657Z","type":"quit"}
{"nick":"tjfontaine","message":"othiym23: seemed to work for me","date":"2013-09-04T04:44:14.156Z","type":"message"}
{"nick":"othiym23","message":"short answer: probably?","date":"2013-09-04T04:44:28.696Z","type":"message"}
{"nick":"othiym23","message":"tjfontaine: Object.defineProperty(process, 'hamchunx', {get : function () { return 'verblox'; }}) does not do what I would expect it to","date":"2013-09-04T04:45:18.469Z","type":"message"}
{"nick":"tjfontaine","message":"I did: Object.defineProperty(process, 'b', { get: function() { return 10; } })","date":"2013-09-04T04:45:36.656Z","type":"message"}
{"nick":"tjfontaine","message":"> process.b","date":"2013-09-04T04:45:48.573Z","type":"message"}
{"nick":"tjfontaine","message":"10","date":"2013-09-04T04:45:48.787Z","type":"message"}
{"nick":"tjfontaine","message":"> process.version","date":"2013-09-04T04:45:48.787Z","type":"message"}
{"nick":"tjfontaine","message":"'v0.11.7-pre'","date":"2013-09-04T04:45:48.787Z","type":"message"}
{"nick":"othiym23","message":"in any case, process is constructed on the C++ side and then injected into startup","date":"2013-09-04T04:45:51.504Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-09-04T04:46:09.764Z","type":"quit"}
{"nick":"kazupon","date":"2013-09-04T04:46:16.337Z","type":"join"}
{"nick":"othiym23","message":"la la la never mind I'm a huge idiot","date":"2013-09-04T04:47:00.536Z","type":"message"}
{"nick":"tjfontaine","message":"<3 othiym23 ","date":"2013-09-04T04:47:06.196Z","type":"message"}
{"nick":"othiym23","message":"in other news, totally looking forward to Proxies","date":"2013-09-04T04:47:56.012Z","type":"message"}
{"nick":"othiym23","message":"and WeakMaps","date":"2013-09-04T04:48:05.960Z","type":"message"}
{"nick":"julianduque","reason":"Ping timeout: 245 seconds","date":"2013-09-04T04:48:45.187Z","type":"quit"}
{"nick":"othiym23","message":"thx tjfontaine ","date":"2013-09-04T04:48:49.056Z","type":"message"}
{"nick":"tjfontaine","message":"no no, thank *you*","date":"2013-09-04T04:48:58.068Z","type":"message"}
{"nick":"julianduque","date":"2013-09-04T04:56:45.483Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-09-04T05:05:51.512Z","type":"quit"}
{"nick":"julianduque","reason":"Quit: leaving","date":"2013-09-04T05:06:06.519Z","type":"quit"}
{"nick":"hueniverse","message":"tjfontaine: where's my new build :-)","date":"2013-09-04T05:15:40.652Z","type":"message"}
{"nick":"tjfontaine","message":"hueniverse: scheduled for tomorrow, as well as a new v0.10 :)","date":"2013-09-04T05:16:42.056Z","type":"message"}
{"nick":"hueniverse","message":"ooh, what's in 0.10?","date":"2013-09-04T05:17:02.231Z","type":"message"}
{"nick":"tjfontaine","message":"not a lot really","date":"2013-09-04T05:18:01.948Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/joyent/node/commit/a3da3e73121d68615c5408814284d333f38db692 and https://github.com/joyent/node/commit/fbb963b5d520a70d9c3f2f9ec116d79a0c676f80","date":"2013-09-04T05:18:30.486Z","type":"message"}
{"nick":"tjfontaine","message":"are the points of note","date":"2013-09-04T05:18:41.956Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-09-04T05:19:35.597Z","type":"quit"}
{"nick":"mikeal","date":"2013-09-04T05:24:11.404Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-09-04T05:24:30.872Z","type":"quit"}
{"nick":"dap1","reason":"Quit: Leaving.","date":"2013-09-04T05:25:40.230Z","type":"quit"}
{"nick":"mikeal","date":"2013-09-04T05:27:27.333Z","type":"join"}
{"nick":"tjfontaine","message":"hmm, I think I found a memory leak in child_process","date":"2013-09-04T05:46:59.860Z","type":"message"}
{"nick":"brson_","reason":"Quit: leaving","date":"2013-09-04T06:08:26.745Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-09-04T06:13:56.467Z","type":"join"}
{"nick":"TooTallNate","reason":"Client Quit","date":"2013-09-04T06:13:56.467Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #190 \u00037UNSTABLE\u000f windows-ia32 (7/598) windows-x64 (8/598) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/190/","date":"2013-09-04T06:48:32.392Z","type":"message"}
{"nick":"txdv_","date":"2013-09-04T06:56:39.365Z","type":"join"}
{"nick":"txdv","reason":"Quit: No Ping reply in 180 seconds.","date":"2013-09-04T06:57:54.262Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-04T06:59:41.452Z","type":"nick"}
{"nick":"bajtos","date":"2013-09-04T07:00:58.602Z","type":"join"}
{"nick":"rendar","date":"2013-09-04T07:06:18.187Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-09-04T07:06:33.448Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-04T07:16:59.136Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-04T07:20:40.148Z","type":"nick"}
{"nick":"dominictarr","date":"2013-09-04T07:22:20.043Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-04T07:28:25.005Z","type":"nick"}
{"nick":"tooxie","date":"2013-09-04T07:34:38.431Z","type":"join"}
{"nick":"ecr","date":"2013-09-04T07:35:22.719Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-09-04T07:37:21.827Z","type":"join"}
{"nick":"csaoh","date":"2013-09-04T07:43:18.090Z","type":"join"}
{"nick":"tooxie","reason":"Ping timeout: 276 seconds","date":"2013-09-04T07:54:00.573Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002358c290\u0002 : build: remove unused Carbon dependency - http://git.io/aMDWbw","date":"2013-09-04T08:00:27.723Z","type":"message"}
{"nick":"bnoordhuis","message":"$ otool -L out/Release/node","date":"2013-09-04T08:00:55.402Z","type":"message"}
{"nick":"bnoordhuis","message":"out/Release/node: /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 169.3.0) /usr/lib/libstdc++.6.dylib (compatibility version 7.0.0, current version 56.0.0) /usr/lib/libgcc_s.1.dylib (compatibility version 1.0.0, current version 1669.0.0)","date":"2013-09-04T08:00:56.642Z","type":"message"}
{"nick":"bnoordhuis","message":"ryan can be happy now","date":"2013-09-04T08:01:05.518Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #524 \u00037UNSTABLE\u000f osx-ia32 (1/643) linux-x64 (2/643) smartos-x64 (7/643) linux-ia32 (1/643) http://jenkins.nodejs.org/job/nodejs-master/524/","date":"2013-09-04T08:09:36.911Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-09-04T08:19:49.943Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #317 \u00037UNSTABLE\u000f windows-x64 (19/643) windows-ia32 (18/643) http://jenkins.nodejs.org/job/nodejs-master-windows/317/","date":"2013-09-04T08:23:26.214Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Kyle Robinson Young\u000f \u00037v0.10\u000f * \u00029579464\u0002 : doc: fix writable.write link - http://git.io/9kRi4Q","date":"2013-09-04T08:26:09.405Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1462 \u00037UNSTABLE\u000f linux-ia32 (1/598) smartos-x64 (2/598) osx-ia32 (1/598) http://jenkins.nodejs.org/job/nodejs-v0.10/1462/","date":"2013-09-04T08:33:31.483Z","type":"message"}
{"nick":"st_luke","date":"2013-09-04T08:35:09.328Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #191 \u00037UNSTABLE\u000f windows-ia32 (7/598) windows-x64 (7/598) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/191/","date":"2013-09-04T08:42:31.485Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-04T08:44:53.028Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Brent Cook\u000f \u00037master\u000f * \u0002c363cd0\u0002 : build: include internal headers in source list (+1 more commits) - http://git.io/duQSbw","date":"2013-09-04T08:52:12.826Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #219 \u00037UNSTABLE\u000f windows (3/194) smartos (10/193) http://jenkins.nodejs.org/job/libuv-master/219/","date":"2013-09-04T08:58:18.990Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #158 \u00037UNSTABLE\u000f windows-x64 (3/194) smartos-ia32 (2/193) windows-ia32 (4/194) smartos-x64 (3/193) http://jenkins.nodejs.org/job/libuv-master-gyp/158/","date":"2013-09-04T08:58:33.766Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-04T08:59:58.198Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-09-04T09:00:55.339Z","type":"quit"}
{"nick":"saghul","message":"https://github.com/bnoordhuis/libuv/tree/merge-ipv46 <- sweet!","date":"2013-09-04T09:11:01.956Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #201 \u00037UNSTABLE\u000f smartos-x64 (7/643) http://jenkins.nodejs.org/job/libuv-node-integration/201/","date":"2013-09-04T09:11:42.063Z","type":"message"}
{"nick":"tuxie_","date":"2013-09-04T09:12:16.292Z","type":"join"}
{"nick":"bnoordhuis","message":"saghul: are you stalking me?","date":"2013-09-04T09:28:05.987Z","type":"message"}
{"nick":"bnoordhuis","message":"that's okay, i've always wanted a stalker of my own","date":"2013-09-04T09:28:25.425Z","type":"message"}
{"nick":"saghul","message":"your libuv fork always contains interesting stuff ;-)","date":"2013-09-04T09:28:49.992Z","type":"message"}
{"nick":"dshaw_","date":"2013-09-04T09:30:38.684Z","type":"join"}
{"nick":"tuxie_","reason":"Quit: Kolba","date":"2013-09-04T09:32:06.110Z","type":"quit"}
{"nick":"tuxie_","date":"2013-09-04T09:32:26.585Z","type":"join"}
{"nick":"dominictarr","date":"2013-09-04T09:36:34.481Z","type":"join"}
{"nick":"hz","date":"2013-09-04T09:37:34.441Z","type":"join"}
{"nick":"Domenic_","reason":"Ping timeout: 245 seconds","date":"2013-09-04T09:40:51.618Z","type":"quit"}
{"nick":"`3rdEden","reason":"Ping timeout: 264 seconds","date":"2013-09-04T09:41:52.411Z","type":"quit"}
{"nick":"tuxie_","reason":"Ping timeout: 276 seconds","date":"2013-09-04T09:41:54.645Z","type":"quit"}
{"nick":"ecr","reason":"Ping timeout: 276 seconds","date":"2013-09-04T09:45:09.625Z","type":"quit"}
{"nick":"tuxie_","date":"2013-09-04T09:56:59.555Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-09-04T09:57:54.528Z","type":"quit"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-09-04T10:17:22.543Z","type":"quit"}
{"nick":"stagas","date":"2013-09-04T10:24:20.594Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: https://github.com/joyent/libuv/pull/917 <- want to review it or ?","date":"2013-09-04T10:26:14.754Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 248 seconds","date":"2013-09-04T10:31:01.754Z","type":"quit"}
{"nick":"bnoordhuis","message":"i'll take that as a no :)","date":"2013-09-04T10:31:14.131Z","type":"message"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-09-04T10:38:29.593Z","type":"quit"}
{"nick":"Domenic_","date":"2013-09-04T10:42:27.158Z","type":"join"}
{"nick":"`3rdEden","date":"2013-09-04T10:44:30.576Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1463 \u00037UNSTABLE\u000f linux-ia32 (1/598) smartos-x64 (1/598) http://jenkins.nodejs.org/job/nodejs-v0.10/1463/","date":"2013-09-04T10:45:39.592Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-09-04T10:48:52.561Z","type":"quit"}
{"nick":"stagas","reason":"Quit: Bye","date":"2013-09-04T10:59:54.630Z","type":"quit"}
{"nick":"csaoh","date":"2013-09-04T11:07:10.733Z","type":"join"}
{"nick":"hz","date":"2013-09-04T11:10:32.192Z","type":"quit"}
{"nick":"tuxie_","reason":"Ping timeout: 264 seconds","date":"2013-09-04T11:18:42.271Z","type":"quit"}
{"nick":"skebcio","reason":"Read error: Operation timed out","date":"2013-09-04T11:24:44.944Z","type":"quit"}
{"nick":"skebcio","date":"2013-09-04T11:26:49.124Z","type":"join"}
{"nick":"tooxie","date":"2013-09-04T12:02:35.184Z","type":"join"}
{"nick":"st_luke","date":"2013-09-04T12:27:29.662Z","type":"join"}
{"nick":"hz","date":"2013-09-04T12:28:30.697Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 264 seconds","date":"2013-09-04T12:32:16.428Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-09-04T12:35:51.707Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u000208c6dde\u0002 : include: merge uv_udp_send and uv_udp_send6 (+3 more commits) - http://git.io/tfhv0g","date":"2013-09-04T12:39:59.409Z","type":"message"}
{"nick":"c4milo","date":"2013-09-04T12:42:25.408Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #220 \u00037UNSTABLE\u000f windows (3/194) smartos (9/193) http://jenkins.nodejs.org/job/libuv-master/220/","date":"2013-09-04T12:45:26.433Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033bnoordhuis\u000f created tag v0.11.13 - http://git.io/oLuKAg","date":"2013-09-04T12:45:45.446Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00025dad195\u0002 : Now working on v0.11.14 (+1 more commits) - http://git.io/1qeckA","date":"2013-09-04T12:45:47.474Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #159 \u00037UNSTABLE\u000f windows-x64 (3/194) smartos-ia32 (2/193) windows-ia32 (3/194) smartos-x64 (2/193) http://jenkins.nodejs.org/job/libuv-master-gyp/159/","date":"2013-09-04T12:46:16.484Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #221 \u00037UNSTABLE\u000f windows (4/194) osx (1/194) smartos (11/193) linux (2/193) http://jenkins.nodejs.org/job/libuv-master/221/","date":"2013-09-04T12:51:23.574Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #202 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/libuv-node-integration/202/","date":"2013-09-04T12:52:46.605Z","type":"message"}
{"nick":"jmar777","date":"2013-09-04T12:53:46.803Z","type":"join"}
{"nick":"bnoordhuis","message":"libuv-node-integration failure is expected, another api change","date":"2013-09-04T12:54:58.320Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-review\u0002: #60 \u00037UNSTABLE\u000f linux-x64 (1/193) smartos-ia32 (4/193) osx-ia32 (1/194) smartos-x64 (4/193) windows-ia32 (3/194) linux-ia32 (1/193) windows-x64 (3/194) http://jenkins.nodejs.org/job/libuv-review/60/","date":"2013-09-04T12:58:26.697Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 248 seconds","date":"2013-09-04T12:59:17.823Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #203 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/libuv-node-integration/203/","date":"2013-09-04T12:59:49.652Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #160 \u00037UNSTABLE\u000f windows-x64 (3/194) smartos-ia32 (2/193) windows-ia32 (3/194) smartos-x64 (2/193) http://jenkins.nodejs.org/job/libuv-master-gyp/160/","date":"2013-09-04T13:01:16.668Z","type":"message"}
{"nick":"rendar","reason":"Ping timeout: 245 seconds","date":"2013-09-04T13:15:25.166Z","type":"quit"}
{"nick":"hz","date":"2013-09-04T13:16:35.759Z","type":"quit"}
{"nick":"roxlu_","message":"hi guys, I need to swap endianness from BE->LE; I can use a macro or just reverse the bytes .. does someone knows what would be best (performance wise) ","date":"2013-09-04T13:24:14.690Z","type":"message"}
{"nick":"kevinswiber","date":"2013-09-04T13:39:48.284Z","type":"join"}
{"nick":"stagas","date":"2013-09-04T14:02:22.176Z","type":"join"}
{"nick":"bajtos","date":"2013-09-04T14:03:17.148Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-09-04T14:06:11.141Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-09-04T14:10:50.182Z","type":"quit"}
{"nick":"rendar","date":"2013-09-04T14:22:11.461Z","type":"join"}
{"nick":"austo","date":"2013-09-04T14:22:45.066Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-09-04T14:26:17.682Z","type":"quit"}
{"nick":"kevinswiber","date":"2013-09-04T14:36:34.745Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-09-04T14:39:10.008Z","type":"join"}
{"nick":"hz","date":"2013-09-04T14:47:39.958Z","type":"join"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-09-04T14:50:05.131Z","type":"quit"}
{"nick":"hz","date":"2013-09-04T14:50:09.920Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-09-04T15:05:35.285Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-09-04T15:15:02.501Z","type":"join"}
{"nick":"mikeal","date":"2013-09-04T15:16:18.514Z","type":"join"}
{"nick":"groundwater","date":"2013-09-04T15:17:14.291Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #525 \u00037UNSTABLE\u000f linux-x64 (1/643) smartos-x64 (7/643) linux-ia32 (1/643) http://jenkins.nodejs.org/job/nodejs-master/525/","date":"2013-09-04T15:17:29.863Z","type":"message"}
{"nick":"bradleymeck","date":"2013-09-04T15:19:05.250Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-04T15:25:49.874Z","type":"quit"}
{"nick":"pfox__","message":"bnoordhuis: hey, are you willing to entertain some questions about the old uv stat API? mostly to help me think-out-loud through an issue im encountering w/ rust bindings..","date":"2013-09-04T15:26:43.450Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-09-04T15:27:16.795Z","type":"quit"}
{"nick":"c4milo","date":"2013-09-04T15:28:55.507Z","type":"join"}
{"nick":"rendar","reason":"Ping timeout: 246 seconds","date":"2013-09-04T15:36:43.970Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-04T15:41:07.924Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-04T15:42:09.779Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-04T15:42:35.945Z","type":"nick"}
{"nick":"AvianFlu","date":"2013-09-04T15:43:24.333Z","type":"join"}
{"nick":"bnoordhuis","message":"pfox__: sure. shoot","date":"2013-09-04T15:45:43.316Z","type":"message"}
{"nick":"rendar","date":"2013-09-04T15:47:00.442Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-09-04T15:47:23.430Z","type":"quit"}
{"nick":"rendar","reason":"Read error: Operation timed out","date":"2013-09-04T15:59:43.916Z","type":"quit"}
{"nick":"bajtos","date":"2013-09-04T15:59:53.225Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-09-04T16:04:13.994Z","type":"quit"}
{"nick":"dap","date":"2013-09-04T16:06:51.428Z","type":"join"}
{"nick":"kevinswi_","date":"2013-09-04T16:09:02.534Z","type":"join"}
{"nick":"mcavage","date":"2013-09-04T16:10:17.344Z","type":"join"}
{"nick":"mcavage","reason":"Remote host closed the connection","date":"2013-09-04T16:10:22.847Z","type":"quit"}
{"nick":"mcavage","date":"2013-09-04T16:10:29.474Z","type":"join"}
{"nick":"c4milo","date":"2013-09-04T16:11:37.753Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-09-04T16:20:25.307Z","type":"quit"}
{"nick":"pfox__","message":"bnoordhuis: it seems, by all accounts, that im getting back gibberish for the st_mode field in uv_statbuf_t ..","date":"2013-09-04T16:25:27.945Z","type":"message"}
{"nick":"pfox__","message":"i should be casting req->ptr to uv_statbuf_t*, correct?","date":"2013-09-04T16:25:44.833Z","type":"message"}
{"nick":"pfox__","message":"in the \"old\" api, that is..","date":"2013-09-04T16:25:54.753Z","type":"message"}
{"nick":"pfox__","message":"this is in 64bit ubuntu..","date":"2013-09-04T16:26:06.026Z","type":"message"}
{"nick":"pfox__","message":"or am i supposed to cast directly to the platform-specific stat type.. ?","date":"2013-09-04T16:26:18.123Z","type":"message"}
{"nick":"indutny","message":"shit","date":"2013-09-04T16:27:04.414Z","type":"message"}
{"nick":"indutny","message":"what's up with openssl 1.0.1","date":"2013-09-04T16:27:15.350Z","type":"message"}
{"nick":"pfox__","message":"looks like the tests are representing it as a stat","date":"2013-09-04T16:28:44.104Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00027494c84\u0002 : uv: upgrade to v0.11.13 - http://git.io/Tg0z2g","date":"2013-09-04T16:29:55.132Z","type":"message"}
{"nick":"bnoordhuis","message":"pfox__: correct. make sure both libuv and rust are compiled with _FILE_OFFSET_BITS=64 and _LARGEFILE_SOURCE","date":"2013-09-04T16:31:16.692Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, and 'correct' applies to casting to the native struct stat","date":"2013-09-04T16:31:57.344Z","type":"message"}
{"nick":"bnoordhuis","message":"newer versions of libuv have a uv_stat_t type that is identical across platforms but that probably doesn't apply to you","date":"2013-09-04T16:32:59.158Z","type":"message"}
{"nick":"pfox__","message":"yeah.","date":"2013-09-04T16:33:04.856Z","type":"message"}
{"nick":"pfox__","message":"huh. im not sure about the build flags.","date":"2013-09-04T16:33:44.371Z","type":"message"}
{"nick":"bnoordhuis","message":"pfox__: easy to test. add a printf(\"%d\\n\", sizeof(struct stat)) somewhere in rust and in libuv","date":"2013-09-04T16:34:04.556Z","type":"message"}
{"nick":"bnoordhuis","message":"if they print different values, you're not using the same build flags","date":"2013-09-04T16:34:18.967Z","type":"message"}
{"nick":"pfox__","message":"should it be that neither of them have the build flag set, or both of them must have it set?","date":"2013-09-04T16:34:42.247Z","type":"message"}
{"nick":"pfox__","message":"how owuld i know if one or the other doesn't have it set, if the latter?","date":"2013-09-04T16:34:49.160Z","type":"message"}
{"nick":"bnoordhuis","message":"if, say, rust is compiled with _FILE_OFFSET_BITS=64 and libuv without, the value reported by rust will be > libuv's","date":"2013-09-04T16:35:19.288Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, and i guess technically speaking you should be using \"%zu\\n\" :)","date":"2013-09-04T16:35:34.518Z","type":"message"}
{"nick":"bnoordhuis","message":"ideally, both rust and libuv should be compiled with both flags set. you almost never want the old 32 bits struct stat","date":"2013-09-04T16:36:31.725Z","type":"message"}
{"nick":"bnoordhuis","message":"it's purely for legacy code, really","date":"2013-09-04T16:36:48.144Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #526 \u00037UNSTABLE\u000f smartos-x64 (8/643) http://jenkins.nodejs.org/job/nodejs-master/526/","date":"2013-09-04T16:39:04.257Z","type":"message"}
{"nick":"kevinswi_","reason":"Remote host closed the connection","date":"2013-09-04T16:43:03.963Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: what's with openssl?","date":"2013-09-04T16:45:05.812Z","type":"message"}
{"nick":"indutny","message":"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","date":"2013-09-04T16:45:11.316Z","type":"message"}
{"nick":"indutny","message":"just figured it out :)","date":"2013-09-04T16:45:14.253Z","type":"message"}
{"nick":"indutny","message":"reason why my test is failing with newer openssl","date":"2013-09-04T16:45:26.651Z","type":"message"}
{"nick":"bnoordhuis","message":"you're upgrading openssl in node?","date":"2013-09-04T16:45:39.515Z","type":"message"}
{"nick":"indutny","message":"got to fully debug handshake process in gdb","date":"2013-09-04T16:45:40.319Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: no","date":"2013-09-04T16:45:42.735Z","type":"message"}
{"nick":"bnoordhuis","message":"aw","date":"2013-09-04T16:45:45.405Z","type":"message"}
{"nick":"indutny","message":"0.9.8e is the one installed on mac","date":"2013-09-04T16:45:50.022Z","type":"message"}
{"nick":"indutny","message":"1.0.1 is on ubuntu","date":"2013-09-04T16:45:53.579Z","type":"message"}
{"nick":"indutny","message":"and server-verify test is using `openssl s_client`","date":"2013-09-04T16:46:05.613Z","type":"message"}
{"nick":"bnoordhuis","message":"we should upgrade openssl in node before v0.12","date":"2013-09-04T16:46:13.112Z","type":"message"}
{"nick":"indutny","message":"you think so?","date":"2013-09-04T16:46:19.400Z","type":"message"}
{"nick":"bnoordhuis","message":"i was hoping someone would volunteer *hint* *hint*","date":"2013-09-04T16:46:22.184Z","type":"message"}
{"nick":"indutny","message":"why?","date":"2013-09-04T16:46:22.401Z","type":"message"}
{"nick":"bnoordhuis","message":"we haven't really been keeping up with patches, for one","date":"2013-09-04T16:46:38.669Z","type":"message"}
{"nick":"indutny","message":"btw","date":"2013-09-04T16:48:08.926Z","type":"message"}
{"nick":"indutny","message":"I think its an openssl bug","date":"2013-09-04T16:48:09.146Z","type":"message"}
{"nick":"tjfontaine","message":"do we want that for today?","date":"2013-09-04T16:48:14.852Z","type":"message"}
{"nick":"indutny","message":"interesting","date":"2013-09-04T16:48:15.284Z","type":"message"}
{"nick":"indutny","message":"tjfontaine: no, go ahead","date":"2013-09-04T16:48:22.933Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2013-09-04T16:48:24.484Z","type":"message"}
{"nick":"indutny","message":"wait","date":"2013-09-04T16:48:24.962Z","type":"message"}
{"nick":"indutny","message":"probably we can incorporate .renegotiate in today's release?","date":"2013-09-04T16:48:33.789Z","type":"message"}
{"nick":"indutny","message":"of 0.11","date":"2013-09-04T16:48:34.584Z","type":"message"}
{"nick":"tjfontaine","message":"I'm planning on doing 0.10 first, so there's time for things to shake out on 0.11","date":"2013-09-04T16:48:55.501Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #318 \u00037UNSTABLE\u000f windows-x64 (19/643) windows-ia32 (19/643) http://jenkins.nodejs.org/job/nodejs-master-windows/318/","date":"2013-09-04T16:49:22.463Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: please review https://github.com/joyent/node/pull/6114","date":"2013-09-04T16:49:36.571Z","type":"message"}
{"nick":"indutny","message":"tls-server-verify should be fixed now","date":"2013-09-04T16:49:52.531Z","type":"message"}
{"nick":"indutny","message":"but I'll run tests just to be sure","date":"2013-09-04T16:49:56.488Z","type":"message"}
{"nick":"bnoordhuis","message":"sorry, i have emails to answer :-/","date":"2013-09-04T16:54:56.020Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: mmaaaaan","date":"2013-09-04T16:55:40.332Z","type":"message"}
{"nick":"indutny","message":"you're the only chance for it :)","date":"2013-09-04T16:55:47.526Z","type":"message"}
{"nick":"indutny","message":"to happen","date":"2013-09-04T16:55:49.471Z","type":"message"}
{"nick":"pfox__","message":"bnoordhuis: my solution is to upgrade libuv :)","date":"2013-09-04T16:55:51.331Z","type":"message"}
{"nick":"rendar","date":"2013-09-04T16:56:56.077Z","type":"join"}
{"nick":"indutny","message":"bnoordhuis: yt?","date":"2013-09-04T17:01:27.726Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-04T17:10:42.784Z","type":"quit"}
{"nick":"mikeal","date":"2013-09-04T17:12:00.932Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-04T17:13:22.877Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-04T17:16:46.611Z","type":"quit"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-09-04T17:17:18.205Z","type":"quit"}
{"nick":"TooTallNate","date":"2013-09-04T17:19:06.429Z","type":"join"}
{"nick":"tjfontaine","message":"I'm starting the v0.10 release, anythiing anyone needs to get in?","date":"2013-09-04T17:20:41.748Z","type":"message"}
{"nick":"c4milo","date":"2013-09-04T17:23:43.760Z","type":"join"}
{"nick":"st_luke","date":"2013-09-04T17:23:51.379Z","type":"join"}
{"nick":"indutny","message":"nope","date":"2013-09-04T17:24:10.109Z","type":"message"}
{"nick":"indutny","message":"anyone knows how to make GYP archive all static dependencies?","date":"2013-09-04T17:24:21.447Z","type":"message"}
{"nick":"tjfontaine","message":"what do you mean, archive?","date":"2013-09-04T17:26:17.027Z","type":"message"}
{"nick":"indutny","message":"$(AR)","date":"2013-09-04T17:26:41.633Z","type":"message"}
{"nick":"indutny","message":"lets say I've target \"a\"","date":"2013-09-04T17:26:51.972Z","type":"message"}
{"nick":"indutny","message":"which is itself a \"static_library\"","date":"2013-09-04T17:26:58.586Z","type":"message"}
{"nick":"indutny","message":"and has a dependency \"b\"","date":"2013-09-04T17:27:05.048Z","type":"message"}
{"nick":"indutny","message":"which is a \"static_library\" too","date":"2013-09-04T17:27:09.546Z","type":"message"}
{"nick":"indutny","message":"right now, GYP will generate liba.a and libb.a","date":"2013-09-04T17:27:18.976Z","type":"message"}
{"nick":"indutny","message":"without archiving them together","date":"2013-09-04T17:27:26.552Z","type":"message"}
{"nick":"tjfontaine","message":"well they're generally thin archives, but ok","date":"2013-09-04T17:27:48.287Z","type":"message"}
{"nick":"indutny","message":"oooh","date":"2013-09-04T17:28:48.877Z","type":"message"}
{"nick":"indutny","message":"standalone_static_library","date":"2013-09-04T17:28:53.968Z","type":"message"}
{"nick":"indutny","message":"hm..","date":"2013-09-04T17:30:38.199Z","type":"message"}
{"nick":"indutny","message":"doesn't seem to be working","date":"2013-09-04T17:30:40.758Z","type":"message"}
{"nick":"indutny","message":"on mac","date":"2013-09-04T17:31:56.887Z","type":"message"}
{"nick":"indutny","message":"shit","date":"2013-09-04T17:31:57.969Z","type":"message"}
{"nick":"indutny","message":")","date":"2013-09-04T17:31:58.848Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-09-04T17:31:59.857Z","type":"message"}
{"nick":"dominictarr","date":"2013-09-04T17:37:37.289Z","type":"join"}
{"nick":"tjfontaine","message":"isaacs: better wording for your streams fixes? https://gist.github.com/tjfontaine/6440235","date":"2013-09-04T17:39:49.832Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-04T17:42:40.783Z","type":"quit"}
{"nick":"hz","date":"2013-09-04T17:47:21.866Z","type":"quit"}
{"nick":"isaacs","message":"looking","date":"2013-09-04T17:48:07.364Z","type":"message"}
{"nick":"c4milo","date":"2013-09-04T17:48:39.300Z","type":"join"}
{"nick":"trevnorris","message":"morning","date":"2013-09-04T17:49:35.566Z","type":"message"}
{"nick":"tjfontaine","message":"g'day","date":"2013-09-04T17:49:41.134Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: https://gist.github.com/isaacs/6440327","date":"2013-09-04T17:49:45.414Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: the aussie is rubbing off on you","date":"2013-09-04T17:49:54.553Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-09-04T17:49:58.895Z","type":"message"}
{"nick":"tjfontaine","message":"ok, and with that I will now start the builds","date":"2013-09-04T17:51:11.276Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-09-04T17:51:17.042Z","type":"quit"}
{"nick":"trevnorris","message":"othiym23, creationix: double ping","date":"2013-09-04T17:52:00.459Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033tjfontaine\u000f created branch v0.10.18-release - http://git.io/mf3X_A","date":"2013-09-04T17:52:08.610Z","type":"message"}
{"nick":"creationix","message":"trevnorris, sup","date":"2013-09-04T17:52:14.197Z","type":"message"}
{"nick":"MI6","message":"\u0002node-review\u0002: #83 \u0002ABORTED\u0002 http://jenkins.nodejs.org/job/node-review/83/","date":"2013-09-04T17:52:47.563Z","type":"message"}
{"nick":"trevnorris","message":"creationix: recap/clarify - the asyncListener callback was going to be called whenever something was queued that would break the callstack.","date":"2013-09-04T17:53:10.921Z","type":"message"}
{"nick":"trevnorris","message":"that includes more than just the uv *_cb locations","date":"2013-09-04T17:53:22.910Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #222 \u00037UNSTABLE\u000f windows (3/194) smartos (9/193) http://jenkins.nodejs.org/job/libuv-master/222/","date":"2013-09-04T17:53:51.716Z","type":"message"}
{"nick":"creationix","message":"right, it also needs stuff like zlib streams and some crypto stuff","date":"2013-09-04T17:54:10.314Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: ping","date":"2013-09-04T17:54:10.523Z","type":"message"}
{"nick":"creationix","message":"var cnx = navigator.mozMobileConnection;","date":"2013-09-04T17:54:11.178Z","type":"message"}
{"nick":"creationix","message":"cnx.addEventHandler('ussdreceived', function (evt) {","date":"2013-09-04T17:54:11.388Z","type":"message"}
{"nick":"creationix","message":"  console.log('Network message: ' + evt.data.message);","date":"2013-09-04T17:54:11.388Z","type":"message"}
{"nick":"creationix","message":"});","date":"2013-09-04T17:54:11.388Z","type":"message"}
{"nick":"creationix","message":"var MMIRequest = cnx.sendMMI(prompt('Provide a valid MMI'));","date":"2013-09-04T17:54:11.388Z","type":"message"}
{"nick":"creationix","message":"MMIRequest.onerror = function() {","date":"2013-09-04T17:54:13.171Z","type":"message"}
{"nick":"creationix","message":"  console.log(\"Mmmh... Something goes wrong.\");","date":"2013-09-04T17:54:15.136Z","type":"message"}
{"nick":"creationix","message":"}","date":"2013-09-04T17:54:17.228Z","type":"message"}
{"nick":"creationix","message":"that was supposed to be a gist link, not an inline paste!","date":"2013-09-04T17:54:33.586Z","type":"message"}
{"nick":"trevnorris","message":"hah","date":"2013-09-04T17:54:39.217Z","type":"message"}
{"nick":"creationix","message":"https://github.com/othiym23/async-listener/blob/master/index.js#L143-L159","date":"2013-09-04T17:54:41.995Z","type":"message"}
{"nick":"trevnorris","message":"event emitters are emitted synchronously, so the don't break the call stack (even though they are \"callbacks\").","date":"2013-09-04T17:56:17.908Z","type":"message"}
{"nick":"trevnorris","message":"so on the js side the only thing that can break the callstack are callbacks to process.nextTick","date":"2013-09-04T17:56:34.825Z","type":"message"}
{"nick":"st_luke","date":"2013-09-04T17:57:11.280Z","type":"join"}
{"nick":"trevnorris","message":"well, I guess we could include timers there too","date":"2013-09-04T17:57:12.284Z","type":"message"}
{"nick":"jmar777","date":"2013-09-04T17:58:39.756Z","type":"join"}
{"nick":"isaacs","message":"trevnorris: yes.  MakeCallback, nextTick, and timers","date":"2013-09-04T17:58:40.368Z","type":"message"}
{"nick":"dshaw_","date":"2013-09-04T17:59:29.336Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: MakeCallback, _tickCallback and Timers (processImmediate, listOnTimeout) are the call sites for before/after and where the error handling should be queued.","date":"2013-09-04T18:00:31.304Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: I don't really understand this multi-context stuff, at least when you present it from the perspective of the vm module","date":"2013-09-04T18:01:02.547Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: but async listener is called on ReqWrap/HandleWrap/EventEmitter instantiation.","date":"2013-09-04T18:01:10.769Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: so, what multi-context would provide is a way to do vm.createContext({stuffffff}, {nodeEnvironment:true})(","date":"2013-09-04T18:01:38.624Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: so you'd have a separate context that has process, require, etc.","date":"2013-09-04T18:01:50.805Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: OK, so there are two issues: the security token stuff seems nonsensical, and what does nodeEnvironment: true do, exactly","date":"2013-09-04T18:02:05.100Z","type":"message"}
{"nick":"isaacs","message":"(or actually, i'm not sure about require())","date":"2013-09-04T18:02:06.365Z","type":"message"}
{"nick":"trevnorris","message":"actually, scratch EE. itself can't break the call stack. but it's inhereted from wrappers that will","date":"2013-09-04T18:02:23.129Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: well, we ought to expose the V8 security token stuff.","date":"2013-09-04T18:02:25.498Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: and doing that in JS is a little bit tricky","date":"2013-09-04T18:02:37.316Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: let's do nodeEnvironment first, I don't understand either, so one at a time","date":"2013-09-04T18:02:39.966Z","type":"message"}
{"nick":"Domenic_","message":"is the idea that if someone in a nodeEnvironment context mutates their process global, it doesn't affect the original process global?","date":"2013-09-04T18:02:58.078Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: bnoordhuis has refactored the node code so that you can have two separate contexts runinng full-on node programs.","date":"2013-09-04T18:03:05.784Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: yes.","date":"2013-09-04T18:03:13.224Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: imagine it like a safe vm.createContext({process:process})","date":"2013-09-04T18:03:26.134Z","type":"message"}
{"nick":"tjfontaine","message":"so many different uses of Context in 0.11 :)","date":"2013-09-04T18:03:26.379Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: yeah","date":"2013-09-04T18:03:36.523Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: ok. so they get their own copies of all the built-in modules etc.","date":"2013-09-04T18:03:37.608Z","type":"message"}
{"nick":"isaacs","message":"\"context\" in this context is V8::Context","date":"2013-09-04T18:03:42.883Z","type":"message"}
{"nick":"isaacs","message":"yes.","date":"2013-09-04T18:03:47.554Z","type":"message"}
{"nick":"isaacs","message":"their own copies of argv, of env, etc.","date":"2013-09-04T18:03:57.413Z","type":"message"}
{"nick":"isaacs","message":"well, env is weird","date":"2013-09-04T18:04:02.337Z","type":"message"}
{"nick":"isaacs","message":"since chnaging it will actually do a setenv and reading it actually does a getenv","date":"2013-09-04T18:04:12.703Z","type":"message"}
{"nick":"isaacs","message":"and it's all in teh same process","date":"2013-09-04T18:04:17.327Z","type":"message"}
{"nick":"tjfontaine","message":"and lets wave our hands over what that means for binary addons","date":"2013-09-04T18:04:20.417Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-09-04T18:04:29.773Z","type":"message"}
{"nick":"isaacs","message":"binary addons will have to do NODE_MODULE_CONTEXT_AWARE() insted of NODE_MODULE","date":"2013-09-04T18:04:39.446Z","type":"message"}
{"nick":"isaacs","action":"wavey wavey","date":"2013-09-04T18:05:05.144Z","type":"action"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-09-04T18:05:10.693Z","type":"quit"}
{"nick":"Domenic_","message":"ok. nodeEnvironment, got it.","date":"2013-09-04T18:05:22.497Z","type":"message"}
{"nick":"Domenic_","message":"so, security token","date":"2013-09-04T18:05:28.078Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: this is strictly a V8-ism","date":"2013-09-04T18:05:39.522Z","type":"message"}
{"nick":"Domenic_","message":"the idea is you can run code with different globals but kind of the same global if they share a security token?","date":"2013-09-04T18:05:43.020Z","type":"message"}
{"nick":"isaacs","message":"which we don't currently expose","date":"2013-09-04T18:05:43.773Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: you know how you have the same-origin policy in a browser?","date":"2013-09-04T18:05:58.173Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: sure","date":"2013-09-04T18:06:05.029Z","type":"message"}
{"nick":"Domenic_","message":"but that's around like what URLs you can fetch","date":"2013-09-04T18:06:18.557Z","type":"message"}
{"nick":"isaacs","message":"so, you can access document.frames[1].contextIforgetwhatthisisactually.window.someGlobal ","date":"2013-09-04T18:06:23.002Z","type":"message"}
{"nick":"Domenic_","message":"hmm","date":"2013-09-04T18:06:27.732Z","type":"message"}
{"nick":"isaacs","message":"but only if that frame and your frame are in the same domain","date":"2013-09-04T18:06:32.862Z","type":"message"}
{"nick":"isaacs","message":"if they're not in teh same domain, then you can only access certain things: location, postMessage, history.go, and a few others.","date":"2013-09-04T18:07:13.581Z","type":"message"}
{"nick":"Domenic_","message":"i think i see","date":"2013-09-04T18:07:28.900Z","type":"message"}
{"nick":"isaacs","message":"chrome implements this by using the domain as the security token","date":"2013-09-04T18:07:35.171Z","type":"message"}
{"nick":"Domenic_","message":"so you don't intrinsically get access to the other context's security tokens","date":"2013-09-04T18:07:42.727Z","type":"message"}
{"nick":"isaacs","message":"(or some hash of it or whatever, i don't know actually how it's implemented)","date":"2013-09-04T18:07:43.991Z","type":"message"}
{"nick":"Domenic_","message":"err, misspoke","date":"2013-09-04T18:07:50.621Z","type":"message"}
{"nick":"isaacs","message":"but it uses the V8::Context setSecurityCallback","date":"2013-09-04T18:07:54.131Z","type":"message"}
{"nick":"isaacs","message":"nono, every context has a security token","date":"2013-09-04T18:08:03.483Z","type":"message"}
{"nick":"Domenic_","message":"access to the globals of the other contexts which have your security token","date":"2013-09-04T18:08:07.132Z","type":"message"}
{"nick":"isaacs","message":"and if they match, you get access to one another","date":"2013-09-04T18:08:13.670Z","type":"message"}
{"nick":"isaacs","message":"but no, you still need a reference.","date":"2013-09-04T18:08:21.340Z","type":"message"}
{"nick":"Domenic_","message":"but if someone gives you another context's global, you can only access it iff you have the same security token","date":"2013-09-04T18:08:29.223Z","type":"message"}
{"nick":"isaacs","message":"the question is whether or not you can actually access that reference.","date":"2013-09-04T18:08:30.351Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-09-04T18:08:34.090Z","type":"message"}
{"nick":"isaacs","message":"since a token actually doesn't satisfy the granularity of use cases that are needed, it also has setSecurityCallback","date":"2013-09-04T18:09:01.521Z","type":"message"}
{"nick":"Domenic_","message":"i guess this seems pretty useless when we have an ocap model already?","date":"2013-09-04T18:09:07.694Z","type":"message"}
{"nick":"Domenic_","message":"i.e. just don't give them the global if you don't want them to access the global","date":"2013-09-04T18:09:31.704Z","type":"message"}
{"nick":"isaacs","message":"this lets you provide a function which is called when you try to do some stuff","date":"2013-09-04T18:10:04.250Z","type":"message"}
{"nick":"Domenic_","message":"ok, so effectively it allows you to give them proxy globals","date":"2013-09-04T18:10:16.502Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: well, i might want you to have access to call a certain function, but not this other function","date":"2013-09-04T18:10:16.712Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: or, i ight let you access something once, but not more than once.","date":"2013-09-04T18:10:26.989Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: or, calling a fucntion might disable access to anything else until some future tim","date":"2013-09-04T18:10:36.851Z","type":"message"}
{"nick":"isaacs","message":"e","date":"2013-09-04T18:10:39.879Z","type":"message"}
{"nick":"Domenic_","message":"yeah, so this is basically a workaround for not having proxies","date":"2013-09-04T18:10:40.432Z","type":"message"}
{"nick":"isaacs","message":"kinda","date":"2013-09-04T18:10:44.799Z","type":"message"}
{"nick":"isaacs","message":"whats \"ocap model\"?","date":"2013-09-04T18:10:57.180Z","type":"message"}
{"nick":"Domenic_","message":"object capability model","date":"2013-09-04T18:11:05.469Z","type":"message"}
{"nick":"isaacs","message":"oh, yeah","date":"2013-09-04T18:11:09.229Z","type":"message"}
{"nick":"isaacs","message":"it's a finer-grained ocap","date":"2013-09-04T18:11:20.619Z","type":"message"}
{"nick":"isaacs","message":"\"check every time\"","date":"2013-09-04T18:11:31.289Z","type":"message"}
{"nick":"stagas_","date":"2013-09-04T18:11:38.302Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 264 seconds","date":"2013-09-04T18:11:55.252Z","type":"quit"}
{"nick":"stagas_","new_nick":"stagas","date":"2013-09-04T18:11:55.660Z","type":"nick"}
{"nick":"Domenic_","message":"right.","date":"2013-09-04T18:12:00.400Z","type":"message"}
{"nick":"tjfontaine","message":"so probably going to start 0.11 at 1PM Pacific, if you want things in it speak now :)","date":"2013-09-04T18:12:02.239Z","type":"message"}
{"nick":"Domenic_","message":"but i really think this is inferior at proxies","date":"2013-09-04T18:12:08.319Z","type":"message"}
{"nick":"Domenic_","message":"i wonder what the interception API looks like","date":"2013-09-04T18:12:15.032Z","type":"message"}
{"nick":"Domenic_","message":"i am betting like a crippled version of proxies","date":"2013-09-04T18:12:20.829Z","type":"message"}
{"nick":"Domenic_","message":"(in fact I am pretty sure mozilla implements all this cross-domain stuff with proxies)","date":"2013-09-04T18:12:30.642Z","type":"message"}
{"nick":"Domenic_","message":"especially direct proxies","date":"2013-09-04T18:13:06.338Z","type":"message"}
{"nick":"Domenic_","message":"which are just wrappers around existing objects","date":"2013-09-04T18:13:10.509Z","type":"message"}
{"nick":"kevinswiber","date":"2013-09-04T18:13:16.281Z","type":"join"}
{"nick":"Domenic_","message":"so even more suitable for this use case","date":"2013-09-04T18:13:17.058Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: aboutto land a few things","date":"2013-09-04T18:13:21.148Z","type":"message"}
{"nick":"brson","date":"2013-09-04T18:13:43.752Z","type":"join"}
{"nick":"tjfontaine","message":"isaacs: mk","date":"2013-09-04T18:13:52.861Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u00029ef9a9d\u0002 : repl: Simplify paren wrap, continuation-detection (+2 more commits) - http://git.io/09VIXw","date":"2013-09-04T18:14:37.084Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: so, securityCallbaks are probably too tricky","date":"2013-09-04T18:14:57.177Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: it's also a weird dip into JS from C++ to access a JS object..","date":"2013-09-04T18:15:07.767Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: doing securityCallbacks in C++ is less crazy","date":"2013-09-04T18:15:21.416Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u0002689e5c9\u0002 : stream: return this from pause()/resume() (+1 more commits) - http://git.io/5ioVxw","date":"2013-09-04T18:18:11.156Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: pong","date":"2013-09-04T18:20:05.145Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u000215a5a4a\u0002 : http: Only send connection:keep-alive if necessary - http://git.io/B9Sh_Q","date":"2013-09-04T18:20:06.264Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: full speed ahead!","date":"2013-09-04T18:20:39.719Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: ok. so the security contexts thing doesn't seem to be solving any problems.","date":"2013-09-04T18:20:39.719Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2013-09-04T18:20:47.690Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: well, defense in depth","date":"2013-09-04T18:20:52.813Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: that's kind of silly. why are you giving them the object if you are just going to defend against them using it? instead, don't give it to them","date":"2013-09-04T18:21:29.140Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: i'm allowing users to call a callback when something is queued that'll cause a break in the call stack. first I just thought ReqWrap on the C++ side, but then realized there's HandleWrap and some TLS stuff","date":"2013-09-04T18:21:30.127Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: but i think maybe the takeaway here is to do security contexts and node-environment-contexts as separate things.","date":"2013-09-04T18:21:30.342Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: there maybe cases where you have a bunch of objects, all with different contexts, and it's easier to manage the tokens than manage the objects.","date":"2013-09-04T18:21:54.432Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-04T18:21:54.911Z","type":"nick"}
{"nick":"Domenic_","message":"isaacs: sounds like it'd be a good library to build ;)","date":"2013-09-04T18:22:21.513Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: em, okay. is that a question or a statement?","date":"2013-09-04T18:22:25.563Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: so was playing w/ the idea of trying a super simplistic AsyncWrap class that they inherit from as a single point of work. thoughts, or alternatives?","date":"2013-09-04T18:22:28.363Z","type":"message"}
{"nick":"bnoordhuis","message":"ah","date":"2013-09-04T18:22:35.232Z","type":"message"}
{"nick":"trevnorris","message":"my hands are cold. makes for slow typing","date":"2013-09-04T18:22:54.710Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: how would you feel about vm.crateContext({global stuffff}, {nodeEnvironment:true})","date":"2013-09-04T18:23:02.747Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: and then we can do security token stuff separately?","date":"2013-09-04T18:23:10.210Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: do you have any insight into whether this will satisfy github's use case?","date":"2013-09-04T18:23:26.031Z","type":"message"}
{"nick":"Domenic_","message":"in general, same origin protocol is seen as a poor design by many in the ES/DOM space. Not something I'd want to emulate in node unless there's some fundamentally new capability it gives you.","date":"2013-09-04T18:23:27.514Z","type":"message"}
{"nick":"rje_","new_nick":"rje","date":"2013-09-04T18:23:58.047Z","type":"nick"}
{"nick":"bnoordhuis","message":"isaacs: i don't think github really cares about the js api, they're working with node on the c++ level only","date":"2013-09-04T18:24:02.277Z","type":"message"}
{"nick":"tjfontaine","message":"ok, lets see how much my post-build script can break things","date":"2013-09-04T18:24:04.193Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: oh, ok","date":"2013-09-04T18:24:16.180Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: that actually makes things remarkably simple, then","date":"2013-09-04T18:24:27.620Z","type":"message"}
{"nick":"isaacs","message":"we can basically do whtever sorta fits with how Node users might use it.","date":"2013-09-04T18:24:38.090Z","type":"message"}
{"nick":"bnoordhuis","message":"indeed :)","date":"2013-09-04T18:24:45.026Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033tjfontaine\u000f created tag v0.10.18 - http://git.io/U0KNaw","date":"2013-09-04T18:24:50.566Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: re AsyncWrap, i'm not sure i follow the use case","date":"2013-09-04T18:25:03.240Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: then, in your opinion as a node user, how do you personally feel about it?","date":"2013-09-04T18:25:04.240Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037v0.10\u000f * \u00029c19c1e\u0002 : blog: Post for v0.10.18 (+3 more commits) - http://git.io/8nqWcw","date":"2013-09-04T18:25:24.480Z","type":"message"}
{"nick":"isaacs","message":"\\o/","date":"2013-09-04T18:25:29.810Z","type":"message"}
{"nick":"tjfontaine","message":"that's pretty painless","date":"2013-09-04T18:25:31.365Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: seems okay to me. maybe mark it experimental for now so we can roll it back in case it doesn't work out","date":"2013-09-04T18:25:51.164Z","type":"message"}
{"nick":"othiym23","message":"trevnorris, creationix: seems like you guys are on it, but I'm here now","date":"2013-09-04T18:25:55.782Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yeah, totally","date":"2013-09-04T18:25:56.600Z","type":"message"}
{"nick":"bnoordhuis","message":"or roll back, change","date":"2013-09-04T18:25:57.764Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: also, i'ts a bit odd, i think, if it doesn't have require/etc.","date":"2013-09-04T18:26:15.349Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: but that means bootstrapping the module system, and runinng the source as if it's stdin or soething?","date":"2013-09-04T18:26:36.411Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, something like that","date":"2013-09-04T18:26:56.065Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: creating an abstracted hook-like api so users can long call stack/domain error handle the crap out of their code w/o affecting basic core performance.","date":"2013-09-04T18:27:01.792Z","type":"message"}
{"nick":"isaacs","message":"hm.  yeah, definitely requires a bit more exploration.","date":"2013-09-04T18:27:19.982Z","type":"message"}
{"nick":"othiym23","message":"does anybody know how to make GitHub show a comparison view for two arbitrary branches of repos which may themselves be separate forks of the same ancestor?","date":"2013-09-04T18:27:29.298Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: which means that whenever something occurs that could break the call stack, i'm allowing a callback to be run that'll allow them to capture what's going on.","date":"2013-09-04T18:27:35.717Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #204 \u00037UNSTABLE\u000f smartos-ia32 (1/643) linux-ia32 (2/643) osx-ia32 (2/643) smartos-x64 (18/643) http://jenkins.nodejs.org/job/libuv-node-integration/204/","date":"2013-09-04T18:27:47.536Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: if you want to go ahead and land the bulk of the multicontext refactoring, and leave out the cli stuff, then i think that's probably worthwhile, if only to unblcok trevnorris ","date":"2013-09-04T18:27:49.930Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: look at req_wrap here: https://github.com/trevnorris/node/commit/0f1c345","date":"2013-09-04T18:27:54.854Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: yeah, good idea","date":"2013-09-04T18:28:01.684Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: apart from the API surface, it's very non-controversial.","date":"2013-09-04T18:28:06.936Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: oh, and i'm still getting the two debugger test failures","date":"2013-09-04T18:28:13.697Z","type":"message"}
{"nick":"tjfontaine","message":"twitterified","date":"2013-09-04T18:28:13.906Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: btw, i'm pretty much fine with whatever js api you come up with","date":"2013-09-04T18:28:16.548Z","type":"message"}
{"nick":"isaacs","message":"kewl","date":"2013-09-04T18:28:20.187Z","type":"message"}
{"nick":"bnoordhuis","message":"the important thing for me was to clean up the c++ code base / prep the way for isolates","date":"2013-09-04T18:28:31.141Z","type":"message"}
{"nick":"isaacs","message":"i think we're getting closer to something that is as un-weird as possible, but it's not quite there yet","date":"2013-09-04T18:28:35.548Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yeah, totally.  it's a vast improvement, i'm really eager to get that in.","date":"2013-09-04T18:28:55.207Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: i fixed the debugger tests yesterday","date":"2013-09-04T18:29:24.753Z","type":"message"}
{"nick":"bnoordhuis","message":"maybe you need to rebase?","date":"2013-09-04T18:29:39.333Z","type":"message"}
{"nick":"isaacs","message":"ok, off to yoga practice.  will be back after lunch","date":"2013-09-04T18:29:46.557Z","type":"message"}
{"nick":"isaacs","action":"&","date":"2013-09-04T18:29:49.587Z","type":"action"}
{"nick":"LOUDBOT","message":"I USE J2EE BOOKS TO WIPE MY ASS","date":"2013-09-04T18:29:50.309Z","type":"message"}
{"nick":"trevnorris","message":"just rebased your branch on latest master","date":"2013-09-04T18:29:55.971Z","type":"message"}
{"nick":"tjfontaine","message":"LOUDBOT++","date":"2013-09-04T18:29:57.899Z","type":"message"}
{"nick":"othiym23","message":"haHA, I am smarter than a non-sentient website: https://github.com/trevnorris/node/compare/bnoordhuis:multi-context...trevnorris:flippin-tick-thing","date":"2013-09-04T18:30:11.412Z","type":"message"}
{"nick":"trevnorris","message":"(there's another tiny collision on tcp_wrap btw)","date":"2013-09-04T18:30:24.441Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: what's the schedule on baby-ben-part-2","date":"2013-09-04T18:31:06.686Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: now i'm getting \"AssertionError: test timed out\"","date":"2013-09-04T18:31:14.644Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: today is the due day actually","date":"2013-09-04T18:31:22.196Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: what branch are you basing your changes on? it doesn't seem to be bnoordhuis:multi-context","date":"2013-09-04T18:31:24.272Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: I know, that's why I'm curious :)","date":"2013-09-04T18:31:30.453Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #527 \u00037UNSTABLE\u000f osx-x64 (1/644) smartos-ia32 (2/644) osx-ia32 (1/644) smartos-x64 (7/644) http://jenkins.nodejs.org/job/nodejs-master/527/","date":"2013-09-04T18:31:34.636Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: yeah, nothing happening so far. the previous one was two weeks overdue so...","date":"2013-09-04T18:31:58.128Z","type":"message"}
{"nick":"tjfontaine","message":"heh, not in any rush are they :)","date":"2013-09-04T18:32:17.862Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: it is, but I rebased it on latest master for the libuv upgrade","date":"2013-09-04T18:32:28.031Z","type":"message"}
{"nick":"bnoordhuis","message":"indeed :)","date":"2013-09-04T18:32:29.652Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: let me rebase and push","date":"2013-09-04T18:33:59.838Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: done","date":"2013-09-04T18:34:32.558Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #319 \u00037UNSTABLE\u000f windows-x64 (19/644) windows-ia32 (19/644) http://jenkins.nodejs.org/job/nodejs-master-windows/319/","date":"2013-09-04T18:34:46.835Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: hah, so it's two _other_ debug tests that are failing w/ the debug fix :P","date":"2013-09-04T18:35:06.565Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, i get a timeout too now","date":"2013-09-04T18:35:07.958Z","type":"message"}
{"nick":"trevnorris","message":"those tests are so borked.","date":"2013-09-04T18:35:23.584Z","type":"message"}
{"nick":"bnoordhuis","message":"hrm, weird though. they were passing yesterday","date":"2013-09-04T18:35:38.389Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-09-04T18:35:52.040Z","type":"quit"}
{"nick":"tjfontaine","message":"a timeout isn't expected, a message mismatch is","date":"2013-09-04T18:35:54.928Z","type":"message"}
{"nick":"trevnorris","message":"if you remove your debug fix, they'll probably pass.","date":"2013-09-04T18:36:02.478Z","type":"message"}
{"nick":"trevnorris","message":"at least they do on mine","date":"2013-09-04T18:36:12.237Z","type":"message"}
{"nick":"kevinswiber","date":"2013-09-04T18:38:29.764Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: still failing for me","date":"2013-09-04T18:39:30.921Z","type":"message"}
{"nick":"trevnorris","message":"oh, strange.","date":"2013-09-04T18:39:36.778Z","type":"message"}
{"nick":"bnoordhuis","message":"tres weird, it worked yesterday","date":"2013-09-04T18:39:39.995Z","type":"message"}
{"nick":"trevnorris","message":"have any background node processes?","date":"2013-09-04T18:39:52.681Z","type":"message"}
{"nick":"bnoordhuis","message":"that's what all programmers say, of course","date":"2013-09-04T18:39:53.407Z","type":"message"}
{"nick":"bnoordhuis","message":"but this time it's true","date":"2013-09-04T18:39:57.610Z","type":"message"}
{"nick":"bnoordhuis","message":"no, none","date":"2013-09-04T18:39:59.448Z","type":"message"}
{"nick":"othiym23","message":"trevnorris, bnoordhuis: thanks for the rebase, it's really nice being able to see just the asyncListener changes in one diff","date":"2013-09-04T18:40:34.221Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm admittedly not entirely clear on the purpose of that asynclistener thing","date":"2013-09-04T18:40:56.776Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-09-04T18:41:26.725Z","type":"message"}
{"nick":"othiym23","message":"bnoordhuis: to be awesome","date":"2013-09-04T18:42:03.136Z","type":"message"}
{"nick":"othiym23","message":"bnoordhuis: to crush code","date":"2013-09-04T18:42:06.760Z","type":"message"}
{"nick":"othiym23","message":"bnoordhuis: to make my life better","date":"2013-09-04T18:42:24.443Z","type":"message"}
{"nick":"othiym23","message":"pick one","date":"2013-09-04T18:42:29.940Z","type":"message"}
{"nick":"creationix","message":"bnoordhuis, long-stack-traces, context-local-storage, domain-style error handline, next-tick, etc...","date":"2013-09-04T18:43:41.557Z","type":"message"}
{"nick":"creationix","message":"all these things could be easily implemented on top of the asyncListener","date":"2013-09-04T18:43:49.942Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: is it still your intention to rework domains to use addAsyncListener?","date":"2013-09-04T18:43:58.056Z","type":"message"}
{"nick":"trevnorris","message":"advantage imo is that they can do all that stuff, but i'm able to implement it in a way that makes it have near-zero impact if not used.","date":"2013-09-04T18:44:20.876Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: yes. when this is done domains could live in user-land","date":"2013-09-04T18:44:31.759Z","type":"message"}
{"nick":"othiym23","message":"bnoordhuis: less flippantly, it's a fairly simple way of making it possible to efficiently add to Node core's asynchronous behaviors in pure JS","date":"2013-09-04T18:44:52.334Z","type":"message"}
{"nick":"creationix","message":"othiym23, I liked your first answer better ;)","date":"2013-09-04T18:45:11.876Z","type":"message"}
{"nick":"othiym23","message":"creationix: \\o/","date":"2013-09-04T18:45:22.232Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: for me it's important because we can remove the domain specific code, have less performance hit and not hear another ticket about needing this functionality :)","date":"2013-09-04T18:45:49.603Z","type":"message"}
{"nick":"tjfontaine","message":"there will always be more tickets","date":"2013-09-04T18:46:09.459Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: please, let me live in ignorant bliss just for a moment","date":"2013-09-04T18:46:26.074Z","type":"message"}
{"nick":"tjfontaine","message":"hehe","date":"2013-09-04T18:46:46.676Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: time to wake up, you'll be late for school","date":"2013-09-04T18:46:56.276Z","type":"message"}
{"nick":"othiym23","message":"now that I've figured out trevnorris's tragic Achilles heel, I'm going to be filing tickts all day erryday","date":"2013-09-04T18:46:57.480Z","type":"message"}
{"nick":"trevnorris","message":"AAAAAHHHHHHHHHHH!!!!!!!!!!!!!!!","date":"2013-09-04T18:47:09.471Z","type":"message"}
{"nick":"tjfontaine","message":"ERRRRYDAY","date":"2013-09-04T18:47:10.796Z","type":"message"}
{"nick":"bnoordhuis","message":"othiym23: what are 'asynchronous behaviors'?","date":"2013-09-04T18:47:17.778Z","type":"message"}
{"nick":"othiym23","message":"\"HAY GUYS I WANNA DO THIS AWESOME THING AND IT'LL ONLY SLOW CORE DOWN 20-35%, TOPS\"","date":"2013-09-04T18:47:20.460Z","type":"message"}
{"nick":"LOUDBOT","message":"WHAT MAKES ME A GOOD DEMOMAN?!","date":"2013-09-04T18:47:20.909Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1464 \u00037UNSTABLE\u000f linux-x64 (2/598) smartos-ia32 (7/598) smartos-x64 (1/598) http://jenkins.nodejs.org/job/nodejs-v0.10/1464/","date":"2013-09-04T18:47:35.052Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: remember the comment in MakeCallback about long stack traces 'n stuff?","date":"2013-09-04T18:47:51.456Z","type":"message"}
{"nick":"bnoordhuis","message":"is it just a way to run a bunch of observer callbacks before making the actual callback?","date":"2013-09-04T18:48:05.118Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: i do","date":"2013-09-04T18:48:19.512Z","type":"message"}
{"nick":"othiym23","message":"bnoordhuis: sorta!","date":"2013-09-04T18:48:23.483Z","type":"message"}
{"nick":"tjfontaine","message":"asynchronous decorator pattern","date":"2013-09-04T18:48:27.659Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #528 \u00037UNSTABLE\u000f smartos-ia32 (1/644) smartos-x64 (6/644) http://jenkins.nodejs.org/job/nodejs-master/528/","date":"2013-09-04T18:48:57.003Z","type":"message"}
{"nick":"othiym23","message":"bnoordhuis: but I think of it as being more like AOP or a substrate for a poor dev's applicative functor","date":"2013-09-04T18:49:05.424Z","type":"message"}
{"nick":"othiym23","message":"gotta get my monadic fix somehow","date":"2013-09-04T18:49:13.976Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, okay. it's starting to make sense","date":"2013-09-04T18:49:50.083Z","type":"message"}
{"nick":"MI6","message":"\u0002node-review\u0002: #84 \u00037UNSTABLE\u000f windows-ia32 (7/598) osx-ia32 (1/598) centos-x64 (1/598) centos-ia32 (3/598) smartos-ia32 (5/598) windows-x64 (8/598) osx-x64 (1/598) smartos-x64 (5/598) http://jenkins.nodejs.org/job/node-review/84/","date":"2013-09-04T18:50:56.098Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: can i land stuff in master now?","date":"2013-09-04T18:51:26.087Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: erm, that you want landed for the release today?","date":"2013-09-04T18:52:17.905Z","type":"message"}
{"nick":"bnoordhuis","message":"ah nvm, it's a trivial thing - i'll save it for later tonight","date":"2013-09-04T18:52:24.731Z","type":"message"}
{"nick":"tjfontaine","message":"I can branch off now it's no biggie","date":"2013-09-04T18:52:31.208Z","type":"message"}
{"nick":"tjfontaine","message":"I was just waiting to see if there was anything anyone else needed","date":"2013-09-04T18:52:38.907Z","type":"message"}
{"nick":"bnoordhuis","message":"just moving some tests around, nothing important","date":"2013-09-04T18:52:41.977Z","type":"message"}
{"nick":"Domenic_","message":"yeah i love that long stack trace comment!!","date":"2013-09-04T18:52:57.792Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll go back to answering emails","date":"2013-09-04T18:53:10.086Z","type":"message"}
{"nick":"trevnorris","message":"oy....","date":"2013-09-04T18:53:11.232Z","type":"message"}
{"nick":"EhevuTov","date":"2013-09-04T18:55:59.648Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-04T19:00:44.336Z","type":"quit"}
{"nick":"ryah","date":"2013-09-04T19:02:41.708Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: re: AsyncWrap class, i'm adding an int async_flags_ and int async_flags() to HandleWrap/ReqWrap so I can set if any listeners are attached to the object, and passing those to MakeCallback. this way there's near zero cost knowing the state of the callback object. so the idea was instead of adding those fields instead create a super tiny class that those inherit from","date":"2013-09-04T19:04:16.805Z","type":"message"}
{"nick":"trevnorris","message":"(also, other flags will be included there)","date":"2013-09-04T19:04:34.194Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #192 \u00037UNSTABLE\u000f windows-ia32 (7/598) windows-x64 (7/598) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/192/","date":"2013-09-04T19:05:13.272Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: fwiw, I like the sounds of that idea, although I'm not sure I totally have my head wrapped around how it would be used","date":"2013-09-04T19:06:22.038Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: is the idea that something substitutes AsyncWrap instances for ReqWrap instances when there are async listeners active, and polymorphism takes care of the differences in behavior?","date":"2013-09-04T19:07:13.188Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: no no. this is just a performance tuning trick. AsyncWrap just has an extra field for flags. These flags are used to determine the \"state\" of the object.","date":"2013-09-04T19:08:41.926Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: it could be done by doing a bunch of ->Has() ->Get() ->Is*","date":"2013-09-04T19:08:56.627Z","type":"message"}
{"nick":"trevnorris","message":"but those are super slow","date":"2013-09-04T19:08:59.556Z","type":"message"}
{"nick":"trevnorris","message":"this way I can integrate it directly into core w/o any performance loss if they're not being used, and have minimal overhead if they are","date":"2013-09-04T19:09:27.380Z","type":"message"}
{"nick":"EhevuTov","reason":"Quit: This computer has gone to sleep","date":"2013-09-04T19:10:09.452Z","type":"quit"}
{"nick":"othiym23","message":"hmm... I'm not sure how what you're saying and what I'm saying are in conflict?","date":"2013-09-04T19:10:32.991Z","type":"message"}
{"nick":"trevnorris","message":"there's no substitution or polymorphism","date":"2013-09-04T19:10:55.784Z","type":"message"}
{"nick":"othiym23","message":"what switches Node between using a ReqWrap and an AsyncWrap?","date":"2013-09-04T19:11:07.366Z","type":"message"}
{"nick":"bnoordhuis","message":"ryah: have you checked `otool -L path/to/node` recently?","date":"2013-09-04T19:11:08.164Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: nothing. ReqWrap inherits from AsyncWrap","date":"2013-09-04T19:11:24.825Z","type":"message"}
{"nick":"ryah","message":"bnoordhuis: i haven't","date":"2013-09-04T19:11:26.774Z","type":"message"}
{"nick":"ryah","message":"bnoordhuis: v10 or master/","date":"2013-09-04T19:11:39.458Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: as does HandleWrap/TLSWrap and any other *Wrap that will perform a uv *_cb","date":"2013-09-04T19:11:42.188Z","type":"message"}
{"nick":"bnoordhuis","message":"ryah: master. i did it all for you","date":"2013-09-04T19:11:50.234Z","type":"message"}
{"nick":"trevnorris","message":"or in tls's case whatever it uses","date":"2013-09-04T19:12:03.586Z","type":"message"}
{"nick":"trevnorris","message":"(tls scares me)","date":"2013-09-04T19:12:06.682Z","type":"message"}
{"nick":"ryah","message":"ryan@yyy-4:~% node -v","date":"2013-09-04T19:12:13.023Z","type":"message"}
{"nick":"ryah","message":"v0.10.14-pre","date":"2013-09-04T19:12:13.263Z","type":"message"}
{"nick":"ryah","message":"ryan@yyy-4:~% otool -L `which node`","date":"2013-09-04T19:12:13.263Z","type":"message"}
{"nick":"ryah","message":"/Users/ryan/local/node/bin/node: /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon (compatibility version 2.0.0, current version 155.0.0) /usr/lib/libSystem.B.dylib (compa","date":"2013-09-04T19:12:13.514Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: ahhhhhhhhh got it -- or at least, now I'm back to wondering why you're not slapping those properties directly on the side of ReqWrap","date":"2013-09-04T19:12:16.404Z","type":"message"}
{"nick":"othiym23","message":"oh!","date":"2013-09-04T19:12:27.918Z","type":"message"}
{"nick":"bnoordhuis","message":"ryah: git pull --rebase && ./configure && make","date":"2013-09-04T19:12:29.550Z","type":"message"}
{"nick":"othiym23","message":"OK","date":"2013-09-04T19:12:29.982Z","type":"message"}
{"nick":"othiym23","message":"now I'm with you, trevnorris","date":"2013-09-04T19:12:34.548Z","type":"message"}
{"nick":"trevnorris","message":":)","date":"2013-09-04T19:12:37.379Z","type":"message"}
{"nick":"bnoordhuis","message":"(i dropped the carbon dep this morning)","date":"2013-09-04T19:12:51.594Z","type":"message"}
{"nick":"ryah","message":"oh nice","date":"2013-09-04T19:12:59.969Z","type":"message"}
{"nick":"bnoordhuis","message":"but note how coreservices, applicationservices and corefoundation are gone","date":"2013-09-04T19:13:02.095Z","type":"message"}
{"nick":"ryah","message":"does process.title still work?","date":"2013-09-04T19:13:06.984Z","type":"message"}
{"nick":"bnoordhuis","message":"yep","date":"2013-09-04T19:13:09.712Z","type":"message"}
{"nick":"ryah","message":"siiiick","date":"2013-09-04T19:13:13.535Z","type":"message"}
{"nick":"EhevuTov","date":"2013-09-04T19:13:14.516Z","type":"join"}
{"nick":"ryah","message":"compiling...","date":"2013-09-04T19:13:20.155Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-09-04T19:16:54.910Z","type":"quit"}
{"nick":"ryah","message":"https://gist.github.com/ry/0be07d371c27b41ddbd5","date":"2013-09-04T19:19:46.768Z","type":"message"}
{"nick":"ryah","message":"wow","date":"2013-09-04T19:19:48.456Z","type":"message"}
{"nick":"ryah","message":"nice bnoordhuis ","date":"2013-09-04T19:19:50.990Z","type":"message"}
{"nick":"bnoordhuis","message":"thanks :)","date":"2013-09-04T19:21:14.416Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #320 \u00037UNSTABLE\u000f windows-x64 (19/644) windows-ia32 (20/644) http://jenkins.nodejs.org/job/nodejs-master-windows/320/","date":"2013-09-04T19:22:58.688Z","type":"message"}
{"nick":"hz","date":"2013-09-04T19:23:05.258Z","type":"join"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-09-04T19:28:38.213Z","type":"quit"}
{"nick":"ryah","message":"when is v12 coming out?","date":"2013-09-04T19:29:23.859Z","type":"message"}
{"nick":"mikeal","date":"2013-09-04T19:30:27.494Z","type":"join"}
{"nick":"trevnorris","message":"I think we're shooting for beginning of 2014","date":"2013-09-04T19:30:54.328Z","type":"message"}
{"nick":"trevnorris","message":"ah man, everyone else's at lunch.","date":"2013-09-04T19:31:34.566Z","type":"message"}
{"nick":"othiym23","message":"according to isaacs, end of August, tops","date":"2013-09-04T19:31:37.138Z","type":"message"}
{"nick":"othiym23","message":"so everybody better get on it","date":"2013-09-04T19:31:52.284Z","type":"message"}
{"nick":"ryah","message":"beginning of 2014??","date":"2013-09-04T19:33:40.757Z","type":"message"}
{"nick":"ryah","message":"people....","date":"2013-09-04T19:33:46.552Z","type":"message"}
{"nick":"trevnorris","message":";P","date":"2013-09-04T19:33:48.990Z","type":"message"}
{"nick":"bnoordhuis","message":"i think that was a joke","date":"2013-09-04T19:33:55.359Z","type":"message"}
{"nick":"bnoordhuis","message":"probably sometime this month? i think we're pretty close by now","date":"2013-09-04T19:34:09.397Z","type":"message"}
{"nick":"ryah","message":"oh cool","date":"2013-09-04T19:34:22.524Z","type":"message"}
{"nick":"defunctzombie_zz","reason":"Ping timeout: 259 seconds","date":"2013-09-04T19:37:48.717Z","type":"quit"}
{"nick":"blissdev","reason":"Ping timeout: 268 seconds","date":"2013-09-04T19:38:52.342Z","type":"quit"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-09-04T19:40:24.601Z","type":"quit"}
{"nick":"defunctzombie_zz","date":"2013-09-04T19:41:17.251Z","type":"join"}
{"nick":"blissdev","date":"2013-09-04T19:41:27.864Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #321 \u00037UNSTABLE\u000f windows-x64 (18/644) windows-ia32 (19/644) http://jenkins.nodejs.org/job/nodejs-master-windows/321/","date":"2013-09-04T19:41:57.110Z","type":"message"}
{"nick":"mmalecki","message":"hey, I've been browsing node issues looking for something to do and found 2 issues which could be closed, if anyone wants to close, here they are","date":"2013-09-04T19:44:56.516Z","type":"message"}
{"nick":"mmalecki","message":"https://github.com/joyent/node/issues/5833","date":"2013-09-04T19:44:59.595Z","type":"message"}
{"nick":"mmalecki","message":"https://github.com/joyent/node/issues/5534","date":"2013-09-04T19:45:02.140Z","type":"message"}
{"nick":"mikeal","message":"that's gonna break some people's code","date":"2013-09-04T19:47:33.757Z","type":"message"}
{"nick":"bnoordhuis","message":"is #5833 fixed? i remember a commit but...","date":"2013-09-04T19:48:06.492Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: ^","date":"2013-09-04T19:48:28.435Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: oh, great. didn't realize that got merged. coolio","date":"2013-09-04T19:49:34.406Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: well, i asked because i'm not sure :)","date":"2013-09-04T19:50:57.666Z","type":"message"}
{"nick":"trevnorris","message":"thanks. just closed it","date":"2013-09-04T19:51:14.617Z","type":"message"}
{"nick":"ecr","date":"2013-09-04T19:51:27.447Z","type":"join"}
{"nick":"bnoordhuis","message":"ah, right - saw the email","date":"2013-09-04T19:51:41.732Z","type":"message"}
{"nick":"brson","reason":"Ping timeout: 264 seconds","date":"2013-09-04T19:51:50.785Z","type":"quit"}
{"nick":"trevnorris","message":"oy, I hate c++ class inheritance. maybe just one time i'll get it right w/o having to spend an hour on google :P","date":"2013-09-04T19:51:55.238Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: what are you trying to do?","date":"2013-09-04T19:53:24.426Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: in stead of hunting down all the locations I'll need to add the async_flags stuff. i'm just trying to make an AsyncWrap class that has them on it.","date":"2013-09-04T19:54:24.928Z","type":"message"}
{"nick":"trevnorris","message":"and make ReqWrap and HandleWrap inherit from it","date":"2013-09-04T19:54:39.212Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-09-04T19:55:53.570Z","type":"quit"}
{"nick":"bnoordhuis","message":"trevnorris: class ReqWrap : public AsyncWrap { // ?","date":"2013-09-04T19:56:27.852Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-04T19:57:10.244Z","type":"quit"}
{"nick":"trevnorris","message":"yeah. think i'm trying to do some stupid stuff by passing arguments to the AsyncWrap constructor","date":"2013-09-04T19:57:46.060Z","type":"message"}
{"nick":"ryah","reason":"Quit: Lost terminal","date":"2013-09-04T19:57:59.758Z","type":"quit"}
{"nick":"trevnorris","message":"but just realized I can't do it there anyways because the object passed might not be set.","date":"2013-09-04T19:58:06.640Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: ReqWrap and HandleWrap both have constructors that take a Handle<Object>","date":"2013-09-04T19:58:42.296Z","type":"message"}
{"nick":"dshaw_","date":"2013-09-04T19:59:05.466Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: yeah, that's what I was trying to pass. but ReqWrap has an if (object.IsEmpty()) object = Object::New()","date":"2013-09-04T19:59:11.520Z","type":"message"}
{"nick":"bnoordhuis","message":"i.e. it's possible to pass the object to AsyncWrap, you just need to call its constructor from the ReqWrap and HandleWrap constructor","date":"2013-09-04T19:59:15.900Z","type":"message"}
{"nick":"brson","date":"2013-09-04T19:59:18.643Z","type":"join"}
{"nick":"trevnorris","message":"which leads me to believe I can't depend on the object being set","date":"2013-09-04T19:59:24.927Z","type":"message"}
{"nick":"bnoordhuis","message":"hrm, i'm not sure if that's still used. let me check","date":"2013-09-04T19:59:49.819Z","type":"message"}
{"nick":"julianduque","date":"2013-09-04T19:59:55.307Z","type":"join"}
{"nick":"ecr","reason":"Ping timeout: 240 seconds","date":"2013-09-04T20:00:38.537Z","type":"quit"}
{"nick":"ecr","date":"2013-09-04T20:00:53.576Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: only by node_file.cc and that's pretty trivial to fix","date":"2013-09-04T20:02:04.723Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: mind taking a quick peek and telling me how i'm being stupid (it's all over the place in this): https://github.com/trevnorris/node/commit/4ea5487","date":"2013-09-04T20:04:27.072Z","type":"message"}
{"nick":"trevnorris","message":"here, removed some stuff don't think I needed: https://github.com/trevnorris/node/commit/799ddaa","date":"2013-09-04T20:06:28.954Z","type":"message"}
{"nick":"AvianFlu","date":"2013-09-04T20:06:56.254Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: wait. nm. I got it.","date":"2013-09-04T20:09:27.930Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-09-04T20:09:43.499Z","type":"quit"}
{"nick":"trevnorris","message":"oy. sorry for wasting a few moments of your time :P","date":"2013-09-04T20:09:49.262Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: commented anyway :)","date":"2013-09-04T20:11:03.781Z","type":"message"}
{"nick":"tjfontaine","message":"ok","date":"2013-09-04T20:11:09.407Z","type":"message"}
{"nick":"trevnorris","message":"thanks :)","date":"2013-09-04T20:11:11.033Z","type":"message"}
{"nick":"tjfontaine","message":"last call for 0.11 pushes","date":"2013-09-04T20:11:15.670Z","type":"message"}
{"nick":"bnoordhuis","message":"nothing from me","date":"2013-09-04T20:11:28.456Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: anything you have you want in 0.11?","date":"2013-09-04T20:11:57.460Z","type":"message"}
{"nick":"trevnorris","message":"for this release, not today.","date":"2013-09-04T20:12:07.895Z","type":"message"}
{"nick":"tjfontaine","message":"ok, changelog time","date":"2013-09-04T20:12:20.671Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: awesome, thanks for the tips. :)","date":"2013-09-04T20:12:32.852Z","type":"message"}
{"nick":"bnoordhuis","message":"np","date":"2013-09-04T20:13:32.999Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: hey you :)","date":"2013-09-04T20:13:56.648Z","type":"message"}
{"nick":"bnoordhuis","message":"hey me","date":"2013-09-04T20:14:00.001Z","type":"message"}
{"nick":"indutny","message":"https://github.com/joyent/node/pull/6114","date":"2013-09-04T20:14:02.711Z","type":"message"}
{"nick":"indutny","message":"tests are passing","date":"2013-09-04T20:14:08.808Z","type":"message"}
{"nick":"indutny","message":"mostly","date":"2013-09-04T20:14:11.477Z","type":"message"}
{"nick":"bnoordhuis","message":"...","date":"2013-09-04T20:14:14.749Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: not sure if you remember my uv_async issue from friday but I fixed it but not sure why the fix works :P I was missing calling this after the uv_async_init() https://github.com/joyent/libuv/blob/master/test/benchmark-multi-accept.c#L258 what is that for and why is that required?","date":"2013-09-04T20:14:19.603Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: I mean","date":"2013-09-04T20:14:48.385Z","type":"message"}
{"nick":"indutny","message":"please review","date":"2013-09-04T20:14:50.115Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: it unrefs the handle. when you call uv_run, that handle won't keep the event loop alive","date":"2013-09-04T20:15:20.082Z","type":"message"}
{"nick":"bnoordhuis","message":"why that fixes things... *shrugs*","date":"2013-09-04T20:15:34.200Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: why does that code piece do it?","date":"2013-09-04T20:15:46.126Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: i'll take a peek","date":"2013-09-04T20:15:53.163Z","type":"message"}
{"nick":"indutny","message":"thanks","date":"2013-09-04T20:15:57.349Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: i think i was being lazy","date":"2013-09-04T20:16:26.559Z","type":"message"}
{"nick":"bnoordhuis","message":"didn't feel like having to close the async handle explicitly","date":"2013-09-04T20:16:50.744Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-09-04T20:17:08.360Z","type":"quit"}
{"nick":"kellabyte","message":"bnoordhuis: can you explain what you mean by \"won't keep the event loop alive\"? I'm not sure what that means and what closing an async handle means","date":"2013-09-04T20:17:22.205Z","type":"message"}
{"nick":"inolen","date":"2013-09-04T20:17:23.278Z","type":"join"}
{"nick":"dap","date":"2013-09-04T20:17:29.360Z","type":"join"}
{"nick":"bnoordhuis","message":"kellabyte: okay, the event loop has this concept of a reference count","date":"2013-09-04T20:17:38.508Z","type":"message"}
{"nick":"bnoordhuis","message":"when you create a new handle, the reference count is incremented","date":"2013-09-04T20:17:48.986Z","type":"message"}
{"nick":"bnoordhuis","message":"when you close a handle, it gets decremented","date":"2013-09-04T20:17:59.766Z","type":"message"}
{"nick":"TooTallNate","date":"2013-09-04T20:18:08.350Z","type":"join"}
{"nick":"bnoordhuis","message":"when you call uv_run(loop, UV_RUN_DEFAULT), it won't return until the refcount is zero","date":"2013-09-04T20:18:14.820Z","type":"message"}
{"nick":"bnoordhuis","message":"that's normally what you want but sometimes you want a handle not to keep the event loop alive","date":"2013-09-04T20:18:36.367Z","type":"message"}
{"nick":"bnoordhuis","message":"e.g. in node we have a uv_signal_t handle for catching signals","date":"2013-09-04T20:18:51.733Z","type":"message"}
{"nick":"bnoordhuis","message":"we always want it active but we don't want it to keep node alive if it's the last handle left","date":"2013-09-04T20:19:04.811Z","type":"message"}
{"nick":"kellabyte","message":"ah","date":"2013-09-04T20:19:14.624Z","type":"message"}
{"nick":"kellabyte","message":"ok so that part makes sense, but it doesn't make sense to me why the multi-accept example would want to do that","date":"2013-09-04T20:20:10.497Z","type":"message"}
{"nick":"bnoordhuis","message":"well, i probably did it so i don't have to uv_close() the async handle","date":"2013-09-04T20:21:01.315Z","type":"message"}
{"nick":"bnoordhuis","message":"iow, i was being lazy because cleaning up after yourself is the right thing to do, of course","date":"2013-09-04T20:21:21.525Z","type":"message"}
{"nick":"dap","reason":"Ping timeout: 245 seconds","date":"2013-09-04T20:21:40.119Z","type":"quit"}
{"nick":"kellabyte","message":"because if I recall last night get_listen_handle() calls uv_run() but doesn't block","date":"2013-09-04T20:21:48.594Z","type":"message"}
{"nick":"bnoordhuis","message":"apropos nothing, go to google.com and type 'do a '","date":"2013-09-04T20:22:33.342Z","type":"message"}
{"nick":"kellabyte","message":"so if it exits the event loop, I'm confused how anything still works and connections get accepted","date":"2013-09-04T20:23:11.277Z","type":"message"}
{"nick":"bnoordhuis","message":"kellabyte: multi-accept has multiple event loops","date":"2013-09-04T20:23:37.822Z","type":"message"}
{"nick":"bnoordhuis","message":"i realize you may not be talking about the multi-accept benchmark anymore :)","date":"2013-09-04T20:24:08.991Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: I'm using it as an example because thats what I used","date":"2013-09-04T20:24:25.530Z","type":"message"}
{"nick":"kellabyte","message":"and still trying to reason how this works :P","date":"2013-09-04T20:24:30.589Z","type":"message"}
{"nick":"kellabyte","message":"I think I'm not fully understanding how libuv works under the hood yet which causes a lot of the abstraction confusion","date":"2013-09-04T20:24:57.124Z","type":"message"}
{"nick":"bnoordhuis","message":"how do you think it works?","date":"2013-09-04T20:25:18.959Z","type":"message"}
{"nick":"bnoordhuis","message":"'pixies and magic dust' is only half-right btw","date":"2013-09-04T20:25:46.341Z","type":"message"}
{"nick":"kellabyte","message":"well, I figure threads like IOCP threads are pushing events into the event loop which get run on the single thread pulling from it","date":"2013-09-04T20:25:47.110Z","type":"message"}
{"nick":"kellabyte","message":"haha","date":"2013-09-04T20:25:51.757Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-04T20:25:57.686Z","type":"quit"}
{"nick":"bnoordhuis","message":"what you say is mostly correct on windows, mostly incorrect on unices","date":"2013-09-04T20:26:36.434Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-09-04T20:27:08.073Z","type":"quit"}
{"nick":"bnoordhuis","message":"when you say 'single thread', do you mean 'per event loop' or 'per process'?","date":"2013-09-04T20:28:17.695Z","type":"message"}
{"nick":"kellabyte","message":"per event loop","date":"2013-09-04T20:28:33.572Z","type":"message"}
{"nick":"kellabyte","message":"is that wrong?","date":"2013-09-04T20:28:36.108Z","type":"message"}
{"nick":"kellabyte","message":"pretty sure when I added 3 event loops I saw 3 new threads at debug time","date":"2013-09-04T20:29:12.779Z","type":"message"}
{"nick":"bnoordhuis","message":"no, that's correct. you need to create the threads yourself though, libuv doesn't do it for you","date":"2013-09-04T20:29:56.300Z","type":"message"}
{"nick":"bnoordhuis","message":"but i'm pretty sure you're doing that, i remember seeing calls to uv_thread_create in your code","date":"2013-09-04T20:30:27.906Z","type":"message"}
{"nick":"kellabyte","message":"yup","date":"2013-09-04T20:30:59.900Z","type":"message"}
{"nick":"kellabyte","message":"which is your code :P","date":"2013-09-04T20:31:08.217Z","type":"message"}
{"nick":"kellabyte","message":"you know your code well sir! lol","date":"2013-09-04T20:31:16.386Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, okay","date":"2013-09-04T20:31:23.770Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-04T20:31:50.512Z","type":"quit"}
{"nick":"bnoordhuis","message":"okay, so far, so good. one event loop per thread. from there on, you create handles, call uv_run() and wait for the action to happen","date":"2013-09-04T20:32:06.439Z","type":"message"}
{"nick":"kellabyte","message":"right, and ref count decides if that thread stops pulling off the event loop when its empty?","date":"2013-09-04T20:32:38.613Z","type":"message"}
{"nick":"c4milo","date":"2013-09-04T20:32:53.996Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-09-04T20:33:43.517Z","type":"quit"}
{"nick":"bnoordhuis","message":"there is no 'pulling off' as such","date":"2013-09-04T20:33:48.138Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: how would _you_ fix the FSReqWrap not passing object issue?","date":"2013-09-04T20:33:57.618Z","type":"message"}
{"nick":"bradleymeck","date":"2013-09-04T20:34:12.375Z","type":"join"}
{"nick":"bnoordhuis","message":"you call uv_run(), libuv starts waiting for events, once the refcount drops to zero, it returns","date":"2013-09-04T20:34:13.983Z","type":"message"}
{"nick":"bnoordhuis","message":"the refcount is purely handle based and only when the handle is actually doing something (reading, writing)","date":"2013-09-04T20:35:02.124Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: change FSReqWrap so it calls ReqWrap<uv_fs_t>(Object::New())?","date":"2013-09-04T20:35:28.133Z","type":"message"}
{"nick":"tjfontaine","message":"https://gist.github.com/tjfontaine/6442527 verify please and thank you","date":"2013-09-04T20:37:03.368Z","type":"message"}
{"nick":"tjfontaine","message":"lemme know if you think I dropped something","date":"2013-09-04T20:37:10.121Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: heh, ok. for some reason thought that solution was too easy. :)","date":"2013-09-04T20:37:13.735Z","type":"message"}
{"nick":"tjfontaine","message":"erm the upgrades dont' really come with user names, but anyway","date":"2013-09-04T20:37:52.498Z","type":"message"}
{"nick":"kevinswiber","reason":"Read error: Connection reset by peer","date":"2013-09-04T20:38:20.095Z","type":"quit"}
{"nick":"tjfontaine","message":"git log --first-parent --graph --pretty=format:'%h%d %s (%an)' v$(head -n1 ChangeLog | awk '{ print $3 }')^..HEAD | sort -k 3","date":"2013-09-04T20:38:27.711Z","type":"message"}
{"nick":"tjfontaine","message":"is the basic list I work from","date":"2013-09-04T20:38:32.077Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: maybe mention that unknown command line options are no longer silently ignored","date":"2013-09-04T20:38:46.460Z","type":"message"}
{"nick":"kevinswiber","date":"2013-09-04T20:38:49.163Z","type":"join"}
{"nick":"trevnorris","message":"strange. I might be stepping on someone else's memory. I'm getting flag like 53772037","date":"2013-09-04T20:38:53.736Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: ok","date":"2013-09-04T20:38:57.923Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: and that --max-stack-size got removed","date":"2013-09-04T20:39:19.065Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: they throw an error?","date":"2013-09-04T20:39:23.447Z","type":"message"}
{"nick":"bnoordhuis","message":"though few people care probably","date":"2013-09-04T20:39:27.352Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, it prints an error and exits","date":"2013-09-04T20:39:36.528Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: you probably didn't initialize it","date":"2013-09-04T20:39:49.254Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: in the constructor first line I have async_flags_ = 0;","date":"2013-09-04T20:40:24.440Z","type":"message"}
{"nick":"tjfontaine","message":"updated","date":"2013-09-04T20:40:35.291Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: it's a good habit to initialize with : async_flags_(0)","date":"2013-09-04T20:41:24.846Z","type":"message"}
{"nick":"trevnorris","message":"cool thanks","date":"2013-09-04T20:41:35.498Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: lgtm","date":"2013-09-04T20:42:11.502Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: mk","date":"2013-09-04T20:42:26.755Z","type":"message"}
{"nick":"tjfontaine","message":"s/rewriten/rewritten/ heh","date":"2013-09-04T20:43:27.659Z","type":"message"}
{"nick":"tjfontaine","message":"I'm not sure if there's more information that should be included about the vm rewrite","date":"2013-09-04T20:43:39.079Z","type":"message"}
{"nick":"tjfontaine","message":"Domenic_: do you have a good 50~ish character description of the vm rewrite?","date":"2013-09-04T20:44:22.090Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: sorry, mind taking another quick look? you'll probably catch what I'm doing wrong in a second: https://github.com/trevnorris/node/commit/f60729a","date":"2013-09-04T20:45:38.281Z","type":"message"}
{"nick":"trevnorris","message":"and sorry, didn't completely understand how you'd use AsyncWrap::has_async_listeners()","date":"2013-09-04T20:46:21.943Z","type":"message"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-09-04T20:46:31.635Z","type":"quit"}
{"nick":"isaacs","message":"aww... a ryah appeared and I missed it :)","date":"2013-09-04T20:46:42.892Z","type":"message"}
{"nick":"isaacs","message":"ircretary: where's ryah","date":"2013-09-04T20:46:51.272Z","type":"message"}
{"nick":"ircretary","message":"isaacs: I'm not sure what to do with that command.  Ask for help in PM.","date":"2013-09-04T20:46:51.490Z","type":"message"}
{"nick":"isaacs","message":"ircretary: where is ryah","date":"2013-09-04T20:46:54.949Z","type":"message"}
{"nick":"ircretary","message":"isaacs: ryah was last seen at 2013-09-04T19:57:59.732Z, quit: Quit: Lost terminal #libuv","date":"2013-09-04T20:46:55.160Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: rather than exposing the flags field directly, make it accessible only through accessors that get/set a specific flag","date":"2013-09-04T20:47:27.665Z","type":"message"}
{"nick":"bnoordhuis","message":"iow, data encapsulation","date":"2013-09-04T20:47:36.024Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: changelog review please and thank you","date":"2013-09-04T20:47:43.412Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: ah, coolio.","date":"2013-09-04T20:47:52.461Z","type":"message"}
{"nick":"dap","date":"2013-09-04T20:48:14.512Z","type":"join"}
{"nick":"isaacs","message":"tjfontaine: link?","date":"2013-09-04T20:48:22.119Z","type":"message"}
{"nick":"isaacs","message":"ah, found https://gist.github.com/tjfontaine/6442527","date":"2013-09-04T20:48:33.280Z","type":"message"}
{"nick":"tjfontaine","message":"aye","date":"2013-09-04T20:48:38.911Z","type":"message"}
{"nick":"isaacs","message":"hmm... just noticed something odd","date":"2013-09-04T20:50:05.716Z","type":"message"}
{"nick":"isaacs","message":"if you have a file called --foo.js, node can't run it","date":"2013-09-04T20:50:14.220Z","type":"message"}
{"nick":"isaacs","message":"because * cli: unknown command line options are errors (Ben Noordhuis)","date":"2013-09-04T20:50:15.572Z","type":"message"}
{"nick":"isaacs","message":"guess that never worked, thogh","date":"2013-09-04T20:50:49.495Z","type":"message"}
{"nick":"tjfontaine","message":"because it would pass it along to v8?","date":"2013-09-04T20:51:01.657Z","type":"message"}
{"nick":"isaacs","message":"v0.10:","date":"2013-09-04T20:51:20.688Z","type":"message"}
{"nick":"isaacs","message":"$ ./node --asdf.js","date":"2013-09-04T20:51:20.688Z","type":"message"}
{"nick":"isaacs","message":"Error: unrecognized flag --asdf.js","date":"2013-09-04T20:51:20.688Z","type":"message"}
{"nick":"isaacs","message":"Try --help for options","date":"2013-09-04T20:51:20.688Z","type":"message"}
{"nick":"isaacs","message":">","date":"2013-09-04T20:51:20.849Z","type":"message"}
{"nick":"isaacs","message":"master:","date":"2013-09-04T20:51:32.364Z","type":"message"}
{"nick":"isaacs","message":"$ ./node --asdf.js","date":"2013-09-04T20:51:33.045Z","type":"message"}
{"nick":"isaacs","message":"./node: bad option: --asdf.js","date":"2013-09-04T20:51:33.258Z","type":"message"}
{"nick":"isaacs","message":"i guess master's behavior is strictly better.","date":"2013-09-04T20:51:41.555Z","type":"message"}
{"nick":"isaacs","message":"but it'd be nice if -- worked like it does with other unix tools","date":"2013-09-04T20:51:53.408Z","type":"message"}
{"nick":"tjfontaine","message":"as in passed the following as arguments onto the next thing?","date":"2013-09-04T20:52:29.008Z","type":"message"}
{"nick":"bnoordhuis","message":"that's reasonably straightforward to implement now, actually","date":"2013-09-04T20:53:10.634Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: as in, -- means \"no more args coming, everything from here on out are positionals\"","date":"2013-09-04T20:53:38.355Z","type":"message"}
{"nick":"isaacs","message":"no more flags","date":"2013-09-04T20:53:41.374Z","type":"message"}
{"nick":"isaacs","message":"so ./node -- --asdf.js would run --asdf.js","date":"2013-09-04T20:53:47.414Z","type":"message"}
{"nick":"isaacs","message":"to create the file, i had to vim -- --asdf.js, so it's reasonable to use the same syntax, i think","date":"2013-09-04T20:54:06.690Z","type":"message"}
{"nick":"isaacs","message":"anyway, no rush","date":"2013-09-04T20:54:39.414Z","type":"message"}
{"nick":"isaacs","message":"it's been weird like that forever :)","date":"2013-09-04T20:54:46.033Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-09-04T20:54:51.475Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: only minor changes: https://gist.github.com/isaacs/6442715","date":"2013-09-04T20:55:00.504Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: expanded two abbreviations.  otherwise lgtm","date":"2013-09-04T20:55:09.029Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: oh shit. I didn't clean up an old declaration of the method in HandleWrap. :P","date":"2013-09-04T20:55:16.561Z","type":"message"}
{"nick":"rendar","reason":"Ping timeout: 268 seconds","date":"2013-09-04T20:55:20.113Z","type":"quit"}
{"nick":"tjfontaine","message":"isaacs: okey dokey","date":"2013-09-04T20:55:29.877Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: left some comments","date":"2013-09-04T20:57:13.270Z","type":"message"}
{"nick":"isaacs","message":"right now, -- stops parsing args *altogether*","date":"2013-09-04T20:57:38.063Z","type":"message"}
{"nick":"trevnorris","message":"ha ha! this is working out even better  than I thought it would.","date":"2013-09-04T20:57:46.612Z","type":"message"}
{"nick":"isaacs","message":"so `./node -- --asdf.js` drops you into a repl","date":"2013-09-04T20:57:50.862Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: thanks a lot dude. this is going to rock.","date":"2013-09-04T20:57:56.855Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: so when I hit a duplicate author with different emails do I prefer the original?","date":"2013-09-04T20:58:15.221Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: yeah, i'd just leave them in the AUTHORS file with the email we already have","date":"2013-09-04T20:59:27.666Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: if they want ti chagned, they can send us a patch","date":"2013-09-04T20:59:27.667Z","type":"message"}
{"nick":"tjfontaine","message":"ok","date":"2013-09-04T20:59:27.667Z","type":"message"}
{"nick":"trevnorris","message":"do we know it's not two different contributors w/ the same name :P","date":"2013-09-04T20:59:27.667Z","type":"message"}
{"nick":"dshaw_","date":"2013-09-04T20:59:27.667Z","type":"join"}
{"nick":"tjfontaine","message":"la la la","date":"2013-09-04T20:59:48.708Z","type":"message"}
{"nick":"tjfontaine","message":"we could probably figure that out based on github id I guess","date":"2013-09-04T20:59:57.136Z","type":"message"}
{"nick":"tjfontaine","message":"anyway I'm continuing on :)","date":"2013-09-04T21:00:04.037Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: it'd be nice if we just listed github accounts in the AUTHORS file and changelog.","date":"2013-09-04T21:01:09.960Z","type":"message"}
{"nick":"isaacs","message":"but node started before github was nearly as popular as it is now","date":"2013-09-04T21:01:22.161Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033tjfontaine\u000f created branch v0.11.7-release - http://git.io/fdhNzA","date":"2013-09-04T21:01:39.780Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: indeed","date":"2013-09-04T21:01:47.250Z","type":"message"}
{"nick":"Domenic_","message":"tjfontaine: vm: rewritten to make changes to globals work, even for async code? maybe?","date":"2013-09-04T21:01:49.536Z","type":"message"}
{"nick":"tjfontaine","message":"oh man.","date":"2013-09-04T21:01:55.340Z","type":"message"}
{"nick":"tjfontaine","message":"Domenic_: hm I think I'm going to use that in the email/blog","date":"2013-09-04T21:03:29.331Z","type":"message"}
{"nick":"MI6","message":"\u0002node-review\u0002: #85 \u0002ABORTED\u0002 http://jenkins.nodejs.org/job/node-review/85/","date":"2013-09-04T21:04:20.888Z","type":"message"}
{"nick":"Domenic_","message":"tjfontaine: isaacs may have better ideas. unfortunately gtg right now","date":"2013-09-04T21:04:24.734Z","type":"message"}
{"nick":"tjfontaine","message":"mk","date":"2013-09-04T21:04:28.861Z","type":"message"}
{"nick":"hz","reason":"Ping timeout: 264 seconds","date":"2013-09-04T21:06:06.240Z","type":"quit"}
{"nick":"trevnorris","message":"indutny: ah, that's why you added HandleWrap::Self(), because you needed the object, which is a protected member.","date":"2013-09-04T21:09:57.094Z","type":"message"}
{"nick":"tooxie","reason":"Ping timeout: 245 seconds","date":"2013-09-04T21:10:25.124Z","type":"quit"}
{"nick":"isaacs","message":"tjfontaine: vm: rewritten to work like you all thought it did","date":"2013-09-04T21:12:18.274Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: it's not just async code, but nested globals, as well","date":"2013-09-04T21:12:34.238Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: var o = {foo:{bar:'boo'}}; vm.runInNewContext('foo.bar = \"baz\", o); assert(o.foo.bar === 'baz');","date":"2013-09-04T21:13:13.003Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: that would have failed before","date":"2013-09-04T21:13:17.302Z","type":"message"}
{"nick":"isaacs","message":"oh, no, it wouldn't... different thing","date":"2013-09-04T21:14:07.662Z","type":"message"}
{"nick":"isaacs","message":"this would fail, though: o = {assert:assert}; o.o = o; vm.runInNewContext('assert(o === this)', o)","date":"2013-09-04T21:16:35.190Z","type":"message"}
{"nick":"trevnorris","message":"othiym23, creationix: now you can peer into the guts of node: https://github.com/trevnorris/node/commit/86aaa30","date":"2013-09-04T21:16:59.242Z","type":"message"}
{"nick":"trevnorris","message":"ok, the tls stuff is being a little tricky","date":"2013-09-04T21:20:18.550Z","type":"message"}
{"nick":"kellabyte","message":"bnoordhuis: sorry got interrupted at my desk, will read up in a bit :P sorry!","date":"2013-09-04T21:24:56.503Z","type":"message"}
{"nick":"mmalecki","message":"found something interesting about node v0.10 crypto, I think that Sly mentioned it before. in some cases CleartextStream would emit an error which isn't handled by SecurePair","date":"2013-09-04T21:26:25.021Z","type":"message"}
{"nick":"mmalecki","message":"error looks like: cleartext [Error: 140735274828160:error:0906D06C:PEM routines:PEM_read_bio:no start line:../deps/openssl/openssl/crypto/pem/pem_lib.c:703:Expecting: CERTIFICATE","date":"2013-09-04T21:26:45.730Z","type":"message"}
{"nick":"mmalecki","message":"it appears to come from SlabBuffer.use and the fn passed to it","date":"2013-09-04T21:27:37.973Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-04T21:28:11.868Z","type":"nick"}
{"nick":"trevnorris","message":"tjfontaine: you're familiar w/ setImmediate, have a sec?","date":"2013-09-04T21:31:26.391Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #322 \u00037UNSTABLE\u000f windows-x64 (21/644) windows-ia32 (22/644) http://jenkins.nodejs.org/job/nodejs-master-windows/322/","date":"2013-09-04T21:33:05.333Z","type":"message"}
{"nick":"mmalecki","message":"https://gist.github.com/mmalecki/f1ede09f3e5ffc97f969 - here's a stacktrace of a crashing process","date":"2013-09-04T21:34:38.575Z","type":"message"}
{"nick":"brson","reason":"Ping timeout: 264 seconds","date":"2013-09-04T21:35:55.046Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-09-04T21:37:03.275Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-09-04T21:41:36.949Z","type":"quit"}
{"nick":"trevnorris","message":"wtf: assert(0 && \"wtf?\");","date":"2013-09-04T21:48:24.971Z","type":"message"}
{"nick":"saghul","reason":"Read error: No route to host","date":"2013-09-04T21:50:36.782Z","type":"quit"}
{"nick":"mmalecki","message":"I created an issue about it: https://github.com/joyent/node/issues/6179","date":"2013-09-04T21:51:30.971Z","type":"message"}
{"nick":"Damn3d","reason":"Ping timeout: 245 seconds","date":"2013-09-04T21:51:40.159Z","type":"quit"}
{"nick":"trevnorris","message":"mmalecki: i'll assume that's v0.10?","date":"2013-09-04T21:52:09.041Z","type":"message"}
{"nick":"mmalecki","message":"trevnorris: yessir","date":"2013-09-04T21:52:16.905Z","type":"message"}
{"nick":"trevnorris","message":"thanks","date":"2013-09-04T21:52:32.253Z","type":"message"}
{"nick":"mmalecki","message":"trevnorris: I have yet to test on v0.11","date":"2013-09-04T21:52:33.812Z","type":"message"}
{"nick":"trevnorris","message":"i dunno. just wanted to know so I could set the milestone","date":"2013-09-04T21:52:56.990Z","type":"message"}
{"nick":"trevnorris","message":"and i dunno why I said i dunno","date":"2013-09-04T21:53:12.783Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-09-04T21:55:24.405Z","type":"quit"}
{"nick":"tjfontaine","message":"trevnorris: sorry I was away for a bit, am back now to finish up the 0.11 release, what up","date":"2013-09-04T21:58:41.390Z","type":"message"}
{"nick":"tjfontaine","message":"oh windows is still building","date":"2013-09-04T21:58:51.390Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: eh, nm. for another day.","date":"2013-09-04T21:59:04.648Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: hehe ok, preview of the question?","date":"2013-09-04T21:59:15.656Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: wanted to see if I could handle the asyncListener check from C++ so it could be handled from MakeCallback","date":"2013-09-04T22:00:15.491Z","type":"message"}
{"nick":"trevnorris","message":"but then I realized that it has it's own processing loop","date":"2013-09-04T22:00:27.814Z","type":"message"}
{"nick":"trevnorris","message":"so the code has to be injected into the JS side anyways","date":"2013-09-04T22:00:40.906Z","type":"message"}
{"nick":"trevnorris","message":"now, is there a way to tell C++ to run constructors w/ class inheritance in a specific order?","date":"2013-09-04T22:01:12.848Z","type":"message"}
{"nick":"tjfontaine","message":"right that's an implementation detail, it could potentially be done from C++","date":"2013-09-04T22:01:14.197Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: yup","date":"2013-09-04T22:01:21.252Z","type":"message"}
{"nick":"trevnorris","message":"eh, it's faster from js","date":"2013-09-04T22:01:26.978Z","type":"message"}
{"nick":"trevnorris","message":"oh yey, I need the object created by ObjectWrap to be passed to another constructor.","date":"2013-09-04T22:02:01.772Z","type":"message"}
{"nick":"trevnorris","message":"if that's possible life will be so awesome.","date":"2013-09-04T22:02:13.544Z","type":"message"}
{"nick":"tjfontaine","message":"show me what you mean","date":"2013-09-04T22:03:41.598Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: that's gotta be mine :)","date":"2013-09-04T22:03:46.168Z","type":"message"}
{"nick":"isaacs","message":"yep","date":"2013-09-04T22:04:11.369Z","type":"message"}
{"nick":"isaacs","message":"5b8e1dab (Isaac Z. Schlueter 2011-09-06 16:13:05 -0700 234)         assert(0 && \"wtf?\");","date":"2013-09-04T22:04:12.421Z","type":"message"}
{"nick":"isaacs","message":"also:","date":"2013-09-04T22:04:20.048Z","type":"message"}
{"nick":"isaacs","message":"5b8e1dab (Isaac Z. Schlueter 2011-09-06 16:13:05 -0700 431)         assert(0 && \"wtf?\");","date":"2013-09-04T22:04:20.497Z","type":"message"}
{"nick":"saghul","date":"2013-09-04T22:04:37.282Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: https://github.com/trevnorris/node/commit/d370260","date":"2013-09-04T22:05:19.650Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: http://stackoverflow.com/a/4037283","date":"2013-09-04T22:05:26.039Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: so ObjectWrap creates an object, I need that object passed to AsyncWrap","date":"2013-09-04T22:05:38.544Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: thanks. got it working","date":"2013-09-04T22:06:56.482Z","type":"message"}
{"nick":"trevnorris","message":"just had the wrong order","date":"2013-09-04T22:07:08.852Z","type":"message"}
{"nick":"tjfontaine","message":"mk :)","date":"2013-09-04T22:07:51.155Z","type":"message"}
{"nick":"trevnorris","message":"ok, cares_wrap is something strange.","date":"2013-09-04T22:09:02.911Z","type":"message"}
{"nick":"philips","reason":"Ping timeout: 260 seconds","date":"2013-09-04T22:12:07.414Z","type":"quit"}
{"nick":"c4milo","date":"2013-09-04T22:16:30.435Z","type":"join"}
{"nick":"tjfontaine","message":"here we go, let's try another run at the post-build script this time for unstable","date":"2013-09-04T22:17:18.885Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033tjfontaine\u000f created tag v0.11.7 - http://git.io/Qw22_g","date":"2013-09-04T22:18:11.243Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u00025b1a0e6\u0002 : Now working on 0.11.8 (+2 more commits) - http://git.io/3I8fDQ","date":"2013-09-04T22:18:25.319Z","type":"message"}
{"nick":"tjfontaine","message":"hmm","date":"2013-09-04T22:19:05.871Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: ok, so now it seems I have a race condition, that the Object created by ObjectWrap sometimes isn't actually created until after the instantiation of the ZCtx class.","date":"2013-09-04T22:21:10.421Z","type":"message"}
{"nick":"trevnorris","message":"so my assertion in AsyncWrap sporadically fails","date":"2013-09-04T22:21:29.296Z","type":"message"}
{"nick":"trevnorris","message":"oh wait. nm.","date":"2013-09-04T22:23:44.370Z","type":"message"}
{"nick":"TooTallNate","date":"2013-09-04T22:23:51.423Z","type":"join"}
{"nick":"trevnorris","message":"the entire logic chain is busted.","date":"2013-09-04T22:23:52.493Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-09-04T22:24:00.728Z","type":"quit"}
{"nick":"trevnorris","message":"i'm not even sure how it passed in the first place","date":"2013-09-04T22:24:07.444Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037v0.10\u000f * \u00028b05206\u0002 : blog: Post for v0.11.7 - http://git.io/3Jveyg","date":"2013-09-04T22:27:35.459Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u00028ee50ce\u0002 : Merge remote-tracking branch 'upstream/v0.10' (+6 more commits) - http://git.io/83io0w","date":"2013-09-04T22:35:35.623Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #529 \u00037UNSTABLE\u000f osx-x64 (1/644) osx-ia32 (1/644) linux-x64 (1/644) smartos-x64 (7/644) linux-ia32 (1/644) http://jenkins.nodejs.org/job/nodejs-master/529/","date":"2013-09-04T22:36:41.611Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-09-04T22:36:51.003Z","type":"quit"}
{"nick":"brson","date":"2013-09-04T22:41:24.288Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1465 \u00037UNSTABLE\u000f smartos-x64 (3/598) osx-x64 (1/598) http://jenkins.nodejs.org/job/nodejs-v0.10/1465/","date":"2013-09-04T22:46:11.701Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #530 \u00037UNSTABLE\u000f smartos-x64 (6/644) http://jenkins.nodejs.org/job/nodejs-master/530/","date":"2013-09-04T22:47:16.788Z","type":"message"}
{"nick":"MI6","message":"\u0002node-review\u0002: #86 \u00037UNSTABLE\u000f windows-ia32 (21/644) centos-x64 (1/644) centos-ia32 (6/644) windows-x64 (20/644) osx-x64 (1/644) smartos-x64 (6/644) http://jenkins.nodejs.org/job/node-review/86/","date":"2013-09-04T22:47:22.798Z","type":"message"}
{"nick":"dshaw_","date":"2013-09-04T22:48:05.774Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-04T22:48:46.761Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-04T22:50:58.047Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: ping","date":"2013-09-04T22:54:05.886Z","type":"message"}
{"nick":"isaacs","message":"pong","date":"2013-09-04T22:54:16.917Z","type":"message"}
{"nick":"trevnorris","message":"trying out the counters w/ benchmarks:","date":"2013-09-04T22:54:30.901Z","type":"message"}
{"nick":"trevnorris","message":"fs/readfile.js dur=5 len=1024 concurrent=10: 34288","date":"2013-09-04T22:54:38.650Z","type":"message"}
{"nick":"trevnorris","message":"COUNTER: 685902","date":"2013-09-04T22:54:42.777Z","type":"message"}
{"nick":"LOUDBOT","message":"THIS IS SHAREWARE GUYISE","date":"2013-09-04T22:54:43.327Z","type":"message"}
{"nick":"trevnorris","message":"that is a lot of async events in 5 seconds :)","date":"2013-09-04T22:55:04.980Z","type":"message"}
{"nick":"tjfontaine","message":"see, and you think our throughput is low","date":"2013-09-04T22:55:17.307Z","type":"message"}
{"nick":"tjfontaine","message":":P","date":"2013-09-04T22:55:18.211Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-09-04T22:55:23.267Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: my thought is, though, that is a lot of request objects we're instantiating.","date":"2013-09-04T22:57:36.397Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: and I just wonder if there's something we could do to reuse those after a request","date":"2013-09-04T22:59:15.145Z","type":"message"}
{"nick":"philips","date":"2013-09-04T22:59:16.018Z","type":"join"}
{"nick":"tjfontaine","message":"you want a freelist?","date":"2013-09-04T22:59:18.447Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: it's certainly somethign that could be done for 1.0","date":"2013-09-04T22:59:42.620Z","type":"message"}
{"nick":"trevnorris","message":"cool.","date":"2013-09-04T22:59:53.784Z","type":"message"}
{"nick":"tjfontaine","message":"it'd be interesting to see at what number of cached objects you actually start to see benefit","date":"2013-09-04T23:00:36.273Z","type":"message"}
{"nick":"tjfontaine","message":"can also do the unref timers for eventual drain so that they're not always munching memory","date":"2013-09-04T23:01:44.603Z","type":"message"}
{"nick":"trevnorris","message":"wtf. net/dgram.js len=1 num=100 type=send dur=5","date":"2013-09-04T23:02:21.072Z","type":"message"}
{"nick":"trevnorris","message":"nextTick: 1596203","date":"2013-09-04T23:02:29.960Z","type":"message"}
{"nick":"tjfontaine","message":"async dns lookup probably","date":"2013-09-04T23:02:39.804Z","type":"message"}
{"nick":"trevnorris","message":"but still. 1.5 million in 5 sec.","date":"2013-09-04T23:02:55.147Z","type":"message"}
{"nick":"tjfontaine","message":"every send requires a lookup if it's using localhost","date":"2013-09-04T23:02:59.442Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok","date":"2013-09-04T23:03:05.328Z","type":"message"}
{"nick":"tjfontaine","message":"well, every send requires at least one tick for deferral, either a real dns request will happen, or a nextTick because we know the answer (or it's already an ip)","date":"2013-09-04T23:03:35.427Z","type":"message"}
{"nick":"trevnorris","message":"this is fun","date":"2013-09-04T23:04:51.071Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: that's some rad info.","date":"2013-09-04T23:07:51.328Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #323 \u00037UNSTABLE\u000f windows-x64 (22/644) windows-ia32 (22/644) http://jenkins.nodejs.org/job/nodejs-master-windows/323/","date":"2013-09-04T23:07:59.159Z","type":"message"}
{"nick":"trevnorris","message":":)","date":"2013-09-04T23:08:00.206Z","type":"message"}
{"nick":"trevnorris","message":"honestly i'm surprised how little performance impact it's having","date":"2013-09-04T23:08:10.343Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: well, nextTick would be worse if it was a real timer","date":"2013-09-04T23:08:24.507Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: 1.5MM is not that much for a while(true) loop","date":"2013-09-04T23:08:39.927Z","type":"message"}
{"nick":"trevnorris","message":"hah, ok. true enough","date":"2013-09-04T23:08:47.532Z","type":"message"}
{"nick":"isaacs","message":"but yeah, still, it's not free.","date":"2013-09-04T23:08:57.265Z","type":"message"}
{"nick":"isaacs","message":"if you could cut that down, it'd probably go faster.","date":"2013-09-04T23:09:04.736Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: so have any thoughts on https://github.com/trevnorris/node/blob/d9e573d","date":"2013-09-04T23:10:09.524Z","type":"message"}
{"nick":"trevnorris","message":"basically anything c++ that will create an asynchronous request will inherit from this.","date":"2013-09-04T23:10:35.539Z","type":"message"}
{"nick":"trevnorris","message":"and by simply setting flag state we know going into MakeCallback whether we have object properties to check","date":"2013-09-04T23:11:00.627Z","type":"message"}
{"nick":"trevnorris","message":"so i'm going to do the same thing with before/after, and then we can remove all the domain specific code at essentially zero cost","date":"2013-09-04T23:11:58.629Z","type":"message"}
{"nick":"trevnorris","message":"and checking if there are async listeners active is also practically zero since it simply sets a bit in external memory (like the tick info box stuff)","date":"2013-09-04T23:12:58.210Z","type":"message"}
{"nick":"trevnorris","message":"but add to that we pre-send the array that contains the listeners, and persist it so the only cost there is the actual call to js","date":"2013-09-04T23:13:38.823Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-09-04T23:13:45.704Z","type":"message"}
{"nick":"isaacs","message":"seems like a reasonable thing to try","date":"2013-09-04T23:14:04.773Z","type":"message"}
{"nick":"isaacs","message":"go for it :)","date":"2013-09-04T23:14:07.552Z","type":"message"}
{"nick":"trevnorris","message":":)","date":"2013-09-04T23:14:10.948Z","type":"message"}
{"nick":"trevnorris","message":"HOOAH for _rawDebug!","date":"2013-09-04T23:17:06.860Z","type":"message"}
{"nick":"tjfontaine","message":"hueniverse: btw, in case you missed it, you have your v0.11 release with your much awaited timer fix","date":"2013-09-04T23:18:36.207Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: yeah, good call omitting that from the ChangeLog ;)","date":"2013-09-04T23:19:09.540Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: (rawDebug, i mean)","date":"2013-09-04T23:19:15.299Z","type":"message"}
{"nick":"amartens","date":"2013-09-04T23:20:20.295Z","type":"join"}
{"nick":"tjfontaine","message":"isaacs: hehe, noone needs to know :P","date":"2013-09-04T23:22:15.503Z","type":"message"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-09-04T23:26:46.949Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #193 \u00037UNSTABLE\u000f windows-ia32 (8/598) windows-x64 (6/598) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/193/","date":"2013-09-04T23:28:35.548Z","type":"message"}
{"nick":"othiym23","message":"is _rawDebug non-enumerable?","date":"2013-09-04T23:30:30.618Z","type":"message"}
{"nick":"julianduque","reason":"Remote host closed the connection","date":"2013-09-04T23:41:24.755Z","type":"quit"}
{"nick":"julianduque","date":"2013-09-04T23:42:07.276Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #324 \u00037UNSTABLE\u000f windows-x64 (21/644) windows-ia32 (19/644) http://jenkins.nodejs.org/job/nodejs-master-windows/324/","date":"2013-09-04T23:54:54.898Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-09-04T23:56:44.028Z","type":"quit"}
{"nick":"mikeal","date":"2013-09-04T23:59:02.191Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #161 \u00037UNSTABLE\u000f windows-x64 (3/194) smartos-ia32 (2/193) windows-ia32 (3/194) linux-ia32 (1/193) smartos-x64 (2/193) http://jenkins.nodejs.org/job/libuv-master-gyp/161/","date":"2013-09-04T23:59:51.100Z","type":"message"}
