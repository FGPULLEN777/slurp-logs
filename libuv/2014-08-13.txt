{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-08-13T00:00:01.056Z","type":"quit"}
{"nick":"ircretary","date":"2014-08-13T00:00:10.103Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 264 seconds","date":"2014-08-13T00:01:10.861Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 240 seconds","date":"2014-08-13T00:05:03.681Z","type":"quit"}
{"nick":"sh1mmer","reason":"Ping timeout: 240 seconds","date":"2014-08-13T00:05:56.941Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 250 seconds","date":"2014-08-13T00:07:22.280Z","type":"quit"}
{"nick":"sh1mmer","date":"2014-08-13T00:10:13.945Z","type":"join"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-08-13T00:13:55.015Z","type":"quit"}
{"nick":"avalanche123","date":"2014-08-13T00:14:21.420Z","type":"join"}
{"nick":"TooTallNate","date":"2014-08-13T00:14:24.228Z","type":"join"}
{"nick":"avalanche123","reason":"Ping timeout: 260 seconds","date":"2014-08-13T00:19:08.140Z","type":"quit"}
{"nick":"zz_karupa","new_nick":"karupa","date":"2014-08-13T00:29:14.911Z","type":"nick"}
{"nick":"bradleymeck","date":"2014-08-13T00:29:20.071Z","type":"join"}
{"nick":"sh1mmer","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2014-08-13T00:33:28.267Z","type":"quit"}
{"nick":"rossk","reason":"Remote host closed the connection","date":"2014-08-13T00:39:26.995Z","type":"quit"}
{"nick":"rossk","date":"2014-08-13T00:41:08.572Z","type":"join"}
{"nick":"rossk","reason":"Client Quit","date":"2014-08-13T00:45:09.343Z","type":"quit"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-08-13T00:45:30.739Z","type":"quit"}
{"nick":"a_le","date":"2014-08-13T00:46:07.619Z","type":"join"}
{"nick":"a_le","reason":"Ping timeout: 272 seconds","date":"2014-08-13T00:50:38.703Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2014-08-13T00:54:32.232Z","type":"quit"}
{"nick":"sh1mmer","date":"2014-08-13T00:56:58.281Z","type":"join"}
{"nick":"quijote","date":"2014-08-13T00:57:15.079Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2014-08-13T00:57:26.973Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 255 seconds","date":"2014-08-13T01:01:38.909Z","type":"quit"}
{"nick":"kellabyte","date":"2014-08-13T01:06:29.305Z","type":"join"}
{"nick":"kellabyte","message":"trevnorris: what exactly are you working on from that tweet? :)","date":"2014-08-13T01:07:06.093Z","type":"message"}
{"nick":"bradleymeck","message":"is bnoordhuis around irc anymore? havent seen him in forever, unsure best way to get in touch w/ him about debugger agent","date":"2014-08-13T01:14:10.250Z","type":"message"}
{"nick":"kazupon","date":"2014-08-13T01:19:43.334Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-08-13T01:27:34.821Z","type":"quit"}
{"nick":"dshaw_","date":"2014-08-13T01:30:30.956Z","type":"join"}
{"nick":"kazupon_","date":"2014-08-13T01:40:00.950Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 255 seconds","date":"2014-08-13T01:43:10.249Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2014-08-13T01:43:26.712Z","type":"quit"}
{"nick":"sh1mmer","reason":"Ping timeout: 255 seconds","date":"2014-08-13T01:46:19.114Z","type":"quit"}
{"nick":"kazupon_","reason":"Remote host closed the connection","date":"2014-08-13T01:50:55.399Z","type":"quit"}
{"nick":"quijote","date":"2014-08-13T01:57:51.703Z","type":"join"}
{"nick":"kazupon","date":"2014-08-13T02:01:55.003Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-08-13T02:02:02.874Z","type":"quit"}
{"nick":"kazupon","date":"2014-08-13T02:02:28.932Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 272 seconds","date":"2014-08-13T02:03:01.703Z","type":"quit"}
{"nick":"Orborde","reason":"Ping timeout: 250 seconds","date":"2014-08-13T02:37:44.285Z","type":"quit"}
{"nick":"daviddias","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2014-08-13T02:38:26.588Z","type":"quit"}
{"nick":"Orborde","date":"2014-08-13T02:41:40.625Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2014-08-13T02:42:16.022Z","type":"quit"}
{"nick":"c4milo","date":"2014-08-13T02:43:59.593Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 255 seconds","date":"2014-08-13T02:48:44.941Z","type":"quit"}
{"nick":"avalanche123","date":"2014-08-13T02:55:36.078Z","type":"join"}
{"nick":"sh1mmer","date":"2014-08-13T02:56:35.284Z","type":"join"}
{"nick":"quijote","date":"2014-08-13T02:58:35.847Z","type":"join"}
{"nick":"avalanche123","reason":"Ping timeout: 250 seconds","date":"2014-08-13T02:59:50.306Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-08-13T03:03:08.816Z","type":"quit"}
{"nick":"Left_Turn","reason":"Remote host closed the connection","date":"2014-08-13T03:19:07.934Z","type":"quit"}
{"nick":"wavded","date":"2014-08-13T03:20:42.206Z","type":"join"}
{"nick":"wavded","reason":"Client Quit","date":"2014-08-13T03:25:24.586Z","type":"quit"}
{"nick":"wavded","date":"2014-08-13T03:25:36.603Z","type":"join"}
{"nick":"wavded","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2014-08-13T03:37:47.339Z","type":"quit"}
{"nick":"wavded","date":"2014-08-13T03:38:21.771Z","type":"join"}
{"nick":"Orborde","reason":"Ping timeout: 272 seconds","date":"2014-08-13T03:39:44.629Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ezequiel Rabinovich\u000f \u00037v0.12\u000f * \u0002678ead2\u0002 : querystring: remove prepended ? from query field - http://git.io/tNz7jA","date":"2014-08-13T03:40:15.389Z","type":"message"}
{"nick":"bradleymeck","date":"2014-08-13T03:45:38.085Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-08-13T03:47:53.873Z","type":"quit"}
{"nick":"avalanche123","date":"2014-08-13T03:49:50.178Z","type":"join"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2014-08-13T03:50:06.413Z","type":"quit"}
{"nick":"wavded","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2014-08-13T03:52:39.610Z","type":"quit"}
{"nick":"cjihrig","reason":"Quit: Leaving.","date":"2014-08-13T03:54:00.709Z","type":"quit"}
{"nick":"quijote","date":"2014-08-13T03:59:29.847Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-08-13T04:03:52.830Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Kyle Robinson Young\u000f \u00037v0.12\u000f * \u00020000416\u0002 : doc: typo fixes on stream, tls and http - http://git.io/ToyZVw","date":"2014-08-13T04:05:18.502Z","type":"message"}
{"nick":"inolen","date":"2014-08-13T04:07:00.537Z","type":"join"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-08-13T04:09:02.311Z","type":"quit"}
{"nick":"avalanche123","date":"2014-08-13T04:09:28.713Z","type":"join"}
{"nick":"avalanch_","date":"2014-08-13T04:10:09.344Z","type":"join"}
{"nick":"avalanche123","reason":"Read error: Connection reset by peer","date":"2014-08-13T04:10:09.563Z","type":"quit"}
{"nick":"kazupon","date":"2014-08-13T04:19:44.059Z","type":"join"}
{"nick":"sh1mmer","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2014-08-13T04:19:54.227Z","type":"quit"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2014-08-13T04:22:17.417Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 244 seconds","date":"2014-08-13T04:24:29.935Z","type":"quit"}
{"nick":"inolen","date":"2014-08-13T04:43:37.813Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Trevor Norris\u000f \u00037v0.12\u000f * \u0002807acf7\u0002 : src: require EventEmitter via NativeModule (+1 more commits) - http://git.io/Vf-t5g","date":"2014-08-13T04:53:29.023Z","type":"message"}
{"nick":"kazupon","date":"2014-08-13T04:54:58.374Z","type":"join"}
{"nick":"quijote","date":"2014-08-13T05:00:08.184Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 255 seconds","date":"2014-08-13T05:04:46.115Z","type":"quit"}
{"nick":"mikeal","date":"2014-08-13T05:13:45.980Z","type":"join"}
{"nick":"avalanch_","reason":"Remote host closed the connection","date":"2014-08-13T05:16:15.340Z","type":"quit"}
{"nick":"avalanche123","date":"2014-08-13T05:16:42.279Z","type":"join"}
{"nick":"avalanche123","reason":"Ping timeout: 255 seconds","date":"2014-08-13T05:21:17.967Z","type":"quit"}
{"nick":"dignifiedquire","date":"2014-08-13T05:45:42.959Z","type":"join"}
{"nick":"a_le","date":"2014-08-13T05:57:44.011Z","type":"join"}
{"nick":"quijote","date":"2014-08-13T06:00:52.381Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 245 seconds","date":"2014-08-13T06:05:12.370Z","type":"quit"}
{"nick":"indexzero","date":"2014-08-13T06:13:32.757Z","type":"join"}
{"nick":"dignifiedquire","reason":"Quit: dignifiedquire","date":"2014-08-13T06:16:53.994Z","type":"quit"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-08-13T06:20:36.471Z","type":"quit"}
{"nick":"avalanche123","date":"2014-08-13T06:38:55.155Z","type":"join"}
{"nick":"quijote","date":"2014-08-13T06:51:36.701Z","type":"join"}
{"nick":"TooTallNate","date":"2014-08-13T07:02:29.704Z","type":"join"}
{"nick":"txdv","reason":"Ping timeout: 245 seconds","date":"2014-08-13T07:11:32.589Z","type":"quit"}
{"nick":"avalanche123","reason":"Remote host closed the connection","date":"2014-08-13T07:14:47.921Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2014-08-13T07:16:10.972Z","type":"quit"}
{"nick":"rmg","date":"2014-08-13T07:17:20.231Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2014-08-13T07:17:37.104Z","type":"quit"}
{"nick":"rmg","reason":"Ping timeout: 244 seconds","date":"2014-08-13T07:21:42.976Z","type":"quit"}
{"nick":"Soarez|afk","new_nick":"Soarez","date":"2014-08-13T07:23:36.511Z","type":"nick"}
{"nick":"txdv","date":"2014-08-13T07:29:22.878Z","type":"join"}
{"nick":"janjongboom","date":"2014-08-13T07:31:05.244Z","type":"join"}
{"nick":"janjongboom","reason":"Client Quit","date":"2014-08-13T07:31:17.300Z","type":"quit"}
{"nick":"felixge","reason":"Ping timeout: 246 seconds","date":"2014-08-13T07:31:48.970Z","type":"quit"}
{"nick":"felixge","date":"2014-08-13T07:32:19.990Z","type":"join"}
{"nick":"Left_Turn","date":"2014-08-13T07:40:45.379Z","type":"join"}
{"nick":"janjongboom","date":"2014-08-13T08:01:34.936Z","type":"join"}
{"nick":"janjongboom","reason":"Client Quit","date":"2014-08-13T08:01:46.123Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-08-13T08:01:51.235Z","type":"quit"}
{"nick":"yorkieneil","date":"2014-08-13T08:04:41.930Z","type":"join"}
{"nick":"yorkieneil","message":"Hi, guys, do you know howto detect real networks idle in libuv/nodejs, i'm not mean the detect run_idle function :(","date":"2014-08-13T08:05:41.259Z","type":"message"}
{"nick":"janjongboom","date":"2014-08-13T08:09:47.829Z","type":"join"}
{"nick":"Soarez","new_nick":"Soarez|afk","date":"2014-08-13T08:11:55.146Z","type":"nick"}
{"nick":"txdv","message":"what do you mean by real networks idle?","date":"2014-08-13T08:15:15.409Z","type":"message"}
{"nick":"yorkieneil_","date":"2014-08-13T08:17:21.905Z","type":"join"}
{"nick":"a_le","date":"2014-08-13T08:21:13.699Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-08-13T08:21:33.704Z","type":"quit"}
{"nick":"yorkieneil","reason":"Ping timeout: 264 seconds","date":"2014-08-13T08:21:34.922Z","type":"quit"}
{"nick":"yorkieneil_","reason":"Quit: Computer has gone to sleep.","date":"2014-08-13T08:22:20.625Z","type":"quit"}
{"nick":"yorkieneil_","date":"2014-08-13T08:22:54.878Z","type":"join"}
{"nick":"a_le","reason":"Ping timeout: 240 seconds","date":"2014-08-13T08:26:03.702Z","type":"quit"}
{"nick":"yorkieneil_","reason":"Ping timeout: 264 seconds","date":"2014-08-13T08:27:34.798Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2014-08-13T08:27:55.981Z","type":"quit"}
{"nick":"kellabyte","reason":"Quit: Connection closed for inactivity","date":"2014-08-13T08:36:22.603Z","type":"quit"}
{"nick":"quijote","date":"2014-08-13T08:43:54.555Z","type":"join"}
{"nick":"dignifiedquire","date":"2014-08-13T08:52:17.941Z","type":"join"}
{"nick":"Ralith","reason":"Ping timeout: 245 seconds","date":"2014-08-13T09:00:37.471Z","type":"quit"}
{"nick":"yorkieneil_","date":"2014-08-13T09:08:48.829Z","type":"join"}
{"nick":"txdv","reason":"Ping timeout: 240 seconds","date":"2014-08-13T09:09:22.851Z","type":"quit"}
{"nick":"yorkieneil_","reason":"Ping timeout: 240 seconds","date":"2014-08-13T09:12:52.870Z","type":"quit"}
{"nick":"Soarez|afk","new_nick":"Soarez","date":"2014-08-13T09:14:22.249Z","type":"nick"}
{"nick":"SquirrelCZECH","date":"2014-08-13T09:19:28.985Z","type":"join"}
{"nick":"kazupon_","date":"2014-08-13T09:27:08.285Z","type":"join"}
{"nick":"janjongboom","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2014-08-13T09:27:54.460Z","type":"quit"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2014-08-13T09:31:02.422Z","type":"quit"}
{"nick":"yorkieneil_","date":"2014-08-13T09:40:46.373Z","type":"join"}
{"nick":"janjongboom","date":"2014-08-13T09:40:50.133Z","type":"join"}
{"nick":"txdv","date":"2014-08-13T09:43:02.704Z","type":"join"}
{"nick":"txdv","new_nick":"7F1AAZJG1","date":"2014-08-13T09:43:38.402Z","type":"nick"}
{"nick":"txdv","date":"2014-08-13T09:43:40.207Z","type":"join"}
{"nick":"karupa","new_nick":"zz_karupa","date":"2014-08-13T09:47:35.588Z","type":"nick"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2014-08-13T09:49:14.875Z","type":"quit"}
{"nick":"yorkieneil_","reason":"Quit: Computer has gone to sleep.","date":"2014-08-13T09:54:05.798Z","type":"quit"}
{"nick":"rendar","date":"2014-08-13T09:57:04.322Z","type":"join"}
{"nick":"txdv","reason":"*.net *.split","date":"2014-08-13T10:00:04.590Z","type":"quit"}
{"nick":"dap_","reason":"*.net *.split","date":"2014-08-13T10:00:04.710Z","type":"quit"}
{"nick":"txdv","date":"2014-08-13T10:07:16.346Z","type":"join"}
{"nick":"dap_","date":"2014-08-13T10:07:16.346Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Cheng Zhao\u000f \u00037v0.12\u000f * \u000244743ea\u0002 : src: change kIsolateSlot to 3 - http://git.io/duFHKQ","date":"2014-08-13T10:08:13.821Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 245 seconds","date":"2014-08-13T10:10:17.542Z","type":"quit"}
{"nick":"indutny","message":"saghul: but first I'll play Diablo a bit","date":"2014-08-13T10:11:45.453Z","type":"message"}
{"nick":"saghul","message":"indutny: heh, sounds good!","date":"2014-08-13T10:19:00.069Z","type":"message"}
{"nick":"rmg","date":"2014-08-13T10:19:51.283Z","type":"join"}
{"nick":"txdv","reason":"*.net *.split","date":"2014-08-13T10:23:55.560Z","type":"quit"}
{"nick":"dap_","reason":"*.net *.split","date":"2014-08-13T10:23:55.680Z","type":"quit"}
{"nick":"rmg","reason":"Ping timeout: 244 seconds","date":"2014-08-13T10:24:36.952Z","type":"quit"}
{"nick":"dap_","date":"2014-08-13T10:30:37.836Z","type":"join"}
{"nick":"quijote","date":"2014-08-13T10:38:11.386Z","type":"join"}
{"nick":"quijote_","date":"2014-08-13T10:39:58.205Z","type":"join"}
{"nick":"quijote","reason":"Read error: Connection reset by peer","date":"2014-08-13T10:39:59.932Z","type":"quit"}
{"nick":"seishun","date":"2014-08-13T10:41:53.154Z","type":"join"}
{"nick":"quijote_","reason":"Ping timeout: 255 seconds","date":"2014-08-13T10:44:31.263Z","type":"quit"}
{"nick":"7F1AAZJG1","message":"a","date":"2014-08-13T10:45:53.032Z","type":"message"}
{"nick":"7F1AAZJG1","new_nick":"txdv","date":"2014-08-13T10:45:55.936Z","type":"nick"}
{"nick":"yorkieneil__","date":"2014-08-13T10:54:57.589Z","type":"join"}
{"nick":"Soarez","new_nick":"Soarez|afk","date":"2014-08-13T10:57:08.230Z","type":"nick"}
{"nick":"dignifiedquire","reason":"Quit: dignifiedquire","date":"2014-08-13T10:58:12.064Z","type":"quit"}
{"nick":"wolfeidau","date":"2014-08-13T10:58:30.657Z","type":"join"}
{"nick":"yorkieneil__","reason":"Ping timeout: 272 seconds","date":"2014-08-13T10:59:54.710Z","type":"quit"}
{"nick":"roxlu","message":"someone around who knows a cross platform embeddable http server? (no mingw preferably)","date":"2014-08-13T11:12:20.764Z","type":"message"}
{"nick":"txdv","message":"for libuv?","date":"2014-08-13T11:24:39.547Z","type":"message"}
{"nick":"daviddias","date":"2014-08-13T11:40:18.944Z","type":"join"}
{"nick":"quijote","date":"2014-08-13T11:40:44.558Z","type":"join"}
{"nick":"daviddias","reason":"Client Quit","date":"2014-08-13T11:42:35.867Z","type":"quit"}
{"nick":"daviddias","date":"2014-08-13T11:42:58.363Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 245 seconds","date":"2014-08-13T11:45:17.541Z","type":"quit"}
{"nick":"Soarez|afk","new_nick":"Soarez","date":"2014-08-13T11:46:39.355Z","type":"nick"}
{"nick":"indutny","message":"saghul: yt?","date":"2014-08-13T11:47:35.061Z","type":"message"}
{"nick":"indutny","message":"let's discuss readdir_next","date":"2014-08-13T11:47:36.062Z","type":"message"}
{"nick":"indutny","message":"saghul: I wonder if it should be async","date":"2014-08-13T11:47:38.482Z","type":"message"}
{"nick":"indutny","message":"UV_EXTERN int uv_fs_readdir_next(void* baton, uv_fs_readdir_next_cb cb);","date":"2014-08-13T11:48:48.859Z","type":"message"}
{"nick":"janjongboom","reason":"Ping timeout: 260 seconds","date":"2014-08-13T11:48:52.171Z","type":"quit"}
{"nick":"indutny","message":"typedef void (*uv_fs_readdir_next_cb)(uv_dirent_t* ent,","date":"2014-08-13T11:48:54.435Z","type":"message"}
{"nick":"indutny","message":"                                      int status,","date":"2014-08-13T11:48:54.548Z","type":"message"}
{"nick":"indutny","message":"                                      void* baton);","date":"2014-08-13T11:48:54.548Z","type":"message"}
{"nick":"indutny","message":"where baton is a req->ptr from uv_fs_readdir","date":"2014-08-13T11:49:02.556Z","type":"message"}
{"nick":"indutny","message":"saghul: what do you think?","date":"2014-08-13T11:49:10.147Z","type":"message"}
{"nick":"janjongboom","date":"2014-08-13T11:50:52.250Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2014-08-13T11:51:51.489Z","type":"quit"}
{"nick":"txdv","message":"https://github.com/joyent/libuv/issues/931 streaming readdir?","date":"2014-08-13T11:52:44.961Z","type":"message"}
{"nick":"txdv","message":"indutny: are you going to tackle readdir?","date":"2014-08-13T11:53:32.378Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2014-08-13T11:54:02.491Z","type":"message"}
{"nick":"txdv","message":"currently it returns a long string containing the filenames","date":"2014-08-13T11:54:22.502Z","type":"message"}
{"nick":"txdv","message":"for types youd have to add a struct i guess","date":"2014-08-13T11:54:35.875Z","type":"message"}
{"nick":"yorkieneil__","date":"2014-08-13T11:55:42.159Z","type":"join"}
{"nick":"txdv","message":"do you want a _next call for every file or for a bunch of files?","date":"2014-08-13T11:56:31.297Z","type":"message"}
{"nick":"txdv","message":"currently the linux implementation uses scanddir which just returns the entire bunch","date":"2014-08-13T11:58:09.636Z","type":"message"}
{"nick":"txdv","message":"the windows does use FindNextW, but I guess it creates internally already a big structure with FindFirst","date":"2014-08-13T11:58:35.360Z","type":"message"}
{"nick":"txdv","message":"i wonder if FindNext is blocking or not","date":"2014-08-13T11:58:50.460Z","type":"message"}
{"nick":"yorkieneil__","reason":"Ping timeout: 255 seconds","date":"2014-08-13T12:00:07.117Z","type":"quit"}
{"nick":"indutny","message":"I know","date":"2014-08-13T12:00:16.033Z","type":"message"}
{"nick":"indutny","message":"for every file","date":"2014-08-13T12:00:20.621Z","type":"message"}
{"nick":"saghul","message":"pong","date":"2014-08-13T12:01:28.797Z","type":"message"}
{"nick":"saghul","action":"is reading the backlog","date":"2014-08-13T12:01:34.390Z","type":"action"}
{"nick":"txdv","message":"indutny: it seems to me that FindNextFile is not blocking","date":"2014-08-13T12:02:18.194Z","type":"message"}
{"nick":"txdv","message":"because in the documentation it states that the information of the files might be old","date":"2014-08-13T12:02:28.470Z","type":"message"}
{"nick":"saghul","message":"indutny: I think this should be enough: typedef void (*uv_fs_readdir_next_cb)(uv_fs_t* req, uv_dirent_t* ent)","date":"2014-08-13T12:02:51.627Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2014-08-13T12:03:09.313Z","type":"message"}
{"nick":"saghul","message":"ent can be allocated on stack, we just put the d_name and d_type from the next one","date":"2014-08-13T12:03:15.105Z","type":"message"}
{"nick":"indutny","message":"what about status?","date":"2014-08-13T12:03:16.097Z","type":"message"}
{"nick":"saghul","message":"when we are done we pass a NULL ent","date":"2014-08-13T12:03:22.928Z","type":"message"}
{"nick":"indutny","message":"saghul: it'll be allocated on stack","date":"2014-08-13T12:03:24.546Z","type":"message"}
{"nick":"saghul","message":"status is passed to the readdir_cb, not the readdir_next_cb","date":"2014-08-13T12:03:43.482Z","type":"message"}
{"nick":"saghul","message":"my idea is that the user calls the next function inside the readdir_cb","date":"2014-08-13T12:03:59.450Z","type":"message"}
{"nick":"saghul","message":"so, once we know it actually worked","date":"2014-08-13T12:04:10.145Z","type":"message"}
{"nick":"saghul","message":"it the request failed, we can call the callback with NULL","date":"2014-08-13T12:04:23.678Z","type":"message"}
{"nick":"saghul","message":"same as if the directory was empty","date":"2014-08-13T12:04:42.857Z","type":"message"}
{"nick":"saghul","message":"but the user needs to check status in the readdir callback","date":"2014-08-13T12:04:55.049Z","type":"message"}
{"nick":"saghul","message":"or we could even assert","date":"2014-08-13T12:05:07.693Z","type":"message"}
{"nick":"saghul","message":"since it's a programing error","date":"2014-08-13T12:05:44.284Z","type":"message"}
{"nick":"saghul","message":"indutny: ^","date":"2014-08-13T12:05:49.798Z","type":"message"}
{"nick":"indutny","message":"waaaait","date":"2014-08-13T12:07:35.256Z","type":"message"}
{"nick":"indutny","message":"readdir cb is executed once uv_fs_t* req is filled","date":"2014-08-13T12:07:43.849Z","type":"message"}
{"nick":"indutny","message":"then uv_readdir_next should be called on req","date":"2014-08-13T12:07:50.633Z","type":"message"}
{"nick":"indutny","message":"and if readdir_next fails?","date":"2014-08-13T12:07:55.632Z","type":"message"}
{"nick":"indutny","message":"just NULL as a ent?","date":"2014-08-13T12:07:58.800Z","type":"message"}
{"nick":"indutny","message":"I don't really like it","date":"2014-08-13T12:08:01.169Z","type":"message"}
{"nick":"indutny","message":"better pass a status","date":"2014-08-13T12:08:04.757Z","type":"message"}
{"nick":"saghul","message":"how can _next fail?","date":"2014-08-13T12:08:06.614Z","type":"message"}
{"nick":"saghul","message":"are we doing anything that can fail?","date":"2014-08-13T12:08:21.918Z","type":"message"}
{"nick":"saghul","message":"we already got the structs, it's just copying some pointers","date":"2014-08-13T12:08:42.815Z","type":"message"}
{"nick":"saghul","message":"can the windows side fail?","date":"2014-08-13T12:08:53.839Z","type":"message"}
{"nick":"indutny","message":"let me check it","date":"2014-08-13T12:10:09.627Z","type":"message"}
{"nick":"c4milo","date":"2014-08-13T12:10:13.263Z","type":"join"}
{"nick":"indutny","message":"hm...","date":"2014-08-13T12:10:27.401Z","type":"message"}
{"nick":"indutny","message":"I guess no","date":"2014-08-13T12:10:28.585Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2014-08-13T12:10:29.057Z","type":"message"}
{"nick":"indutny","message":"looks fine then","date":"2014-08-13T12:10:31.395Z","type":"message"}
{"nick":"saghul","message":"indutny: kewl","date":"2014-08-13T12:12:31.213Z","type":"message"}
{"nick":"indutny","message":"so what I'm afraid of here :)","date":"2014-08-13T12:16:34.891Z","type":"message"}
{"nick":"indutny","message":"ah, I have an idea","date":"2014-08-13T12:16:40.440Z","type":"message"}
{"nick":"indutny","message":"nvm","date":"2014-08-13T12:16:41.232Z","type":"message"}
{"nick":"indutny","message":"I'll use uv_idle_t","date":"2014-08-13T12:16:56.569Z","type":"message"}
{"nick":"saghul","message":"indutny: what for?","date":"2014-08-13T12:19:42.620Z","type":"message"}
{"nick":"dignifiedquire","date":"2014-08-13T12:19:57.056Z","type":"join"}
{"nick":"indutny","message":"saghul: for readdir_next","date":"2014-08-13T12:20:14.586Z","type":"message"}
{"nick":"indutny","message":"I don't want to use worker threads for this","date":"2014-08-13T12:20:21.093Z","type":"message"}
{"nick":"indutny","message":"basically we don't do any blocking stuff in it","date":"2014-08-13T12:20:27.231Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2014-08-13T12:20:31.975Z","type":"message"}
{"nick":"indutny","message":"may be it should just accept uv_dirent_t* ent as an argument","date":"2014-08-13T12:20:44.830Z","type":"message"}
{"nick":"indutny","message":"without cbs","date":"2014-08-13T12:20:48.891Z","type":"message"}
{"nick":"indutny","message":"UV_EXTERN int uv_fs_readdir_next(uv_fs_t* req, uv_dirent_t* ent);","date":"2014-08-13T12:21:04.605Z","type":"message"}
{"nick":"indutny","message":"but the question is","date":"2014-08-13T12:21:17.795Z","type":"message"}
{"nick":"indutny","message":"what will this give us :)","date":"2014-08-13T12:21:22.686Z","type":"message"}
{"nick":"indutny","message":"lower memory usage?","date":"2014-08-13T12:21:25.775Z","type":"message"}
{"nick":"indutny","message":"technically there is no way to really *stream* this data","date":"2014-08-13T12:21:44.158Z","type":"message"}
{"nick":"saghul","message":"scandir already gave you the whole list of dirents","date":"2014-08-13T12:22:42.787Z","type":"message"}
{"nick":"saghul","message":"all we want is to process them one by one","date":"2014-08-13T12:22:55.387Z","type":"message"}
{"nick":"saghul","message":"the \"streaming\" would be done in node, by calling uv_fs_readdir_next on setImmediate or something","date":"2014-08-13T12:26:35.272Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2014-08-13T12:27:42.170Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2014-08-13T12:27:42.814Z","type":"message"}
{"nick":"indutny","message":"so I'll do a sync C API then","date":"2014-08-13T12:27:50.837Z","type":"message"}
{"nick":"saghul","message":"I mean, at our level the thing is sync, there is no way around that, but giving you the ability to ask for one item at a time, uper layers can emulate a async model","date":"2014-08-13T12:30:14.257Z","type":"message"}
{"nick":"indutny","message":"yep","date":"2014-08-13T12:30:23.214Z","type":"message"}
{"nick":"indutny","message":"kewl","date":"2014-08-13T12:30:28.149Z","type":"message"}
{"nick":"saghul","message":"also, we don't need to allocate memory for all dirents now","date":"2014-08-13T12:30:29.909Z","type":"message"}
{"nick":"saghul","message":"\\o/","date":"2014-08-13T12:30:33.656Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2014-08-13T12:30:46.215Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2014-08-13T12:30:51.509Z","type":"message"}
{"nick":"cjihrig","date":"2014-08-13T12:32:01.130Z","type":"join"}
{"nick":"txdv","message":"scanddir is sync","date":"2014-08-13T12:32:29.764Z","type":"message"}
{"nick":"txdv","message":"FindFirstFile is sync","date":"2014-08-13T12:32:34.483Z","type":"message"}
{"nick":"txdv","message":"is FindNextFile sync?","date":"2014-08-13T12:32:38.427Z","type":"message"}
{"nick":"cjihrig","reason":"Ping timeout: 260 seconds","date":"2014-08-13T12:40:12.142Z","type":"quit"}
{"nick":"quijote","date":"2014-08-13T12:41:23.348Z","type":"join"}
{"nick":"txdv","message":"i love these discussions, its always /ignore txdv and we dont care about your input","date":"2014-08-13T12:44:29.614Z","type":"message"}
{"nick":"saghul","message":"it is sync","date":"2014-08-13T12:45:08.988Z","type":"message"}
{"nick":"saghul","message":"txdv: did I miss anything you said? (sorry, multitasking)","date":"2014-08-13T12:45:41.010Z","type":"message"}
{"nick":"saghul","message":"or rather: do you see a problem with what I mentioned?","date":"2014-08-13T12:45:54.003Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 246 seconds","date":"2014-08-13T12:45:57.299Z","type":"quit"}
{"nick":"txdv","message":"im currently looking up it in the win src code if it is really sync","date":"2014-08-13T12:48:04.775Z","type":"message"}
{"nick":"saghul","message":"oh","date":"2014-08-13T12:48:20.911Z","type":"message"}
{"nick":"saghul","message":"txdv: by \"sync\" do you really mean if it blocks?","date":"2014-08-13T12:50:58.955Z","type":"message"}
{"nick":"saghul","message":"(that would be bad)","date":"2014-08-13T12:51:07.352Z","type":"message"}
{"nick":"txdv","message":"by async i mean it does only cpu and memory interaction","date":"2014-08-13T12:52:54.053Z","type":"message"}
{"nick":"txdv","message":"by sync i mean it does more IO","date":"2014-08-13T12:53:03.082Z","type":"message"}
{"nick":"saghul","message":"txdv: right, well, if it's sync it's bad because this function is supposed to be called on the event loop thread","date":"2014-08-13T12:54:42.424Z","type":"message"}
{"nick":"wolfeidau","date":"2014-08-13T12:55:06.072Z","type":"join"}
{"nick":"saghul","message":"so we'd need to change the design","date":"2014-08-13T12:55:13.829Z","type":"message"}
{"nick":"yorkieneil__","date":"2014-08-13T12:56:27.160Z","type":"join"}
{"nick":"txdv","message":"looks sync to me","date":"2014-08-13T12:56:53.449Z","type":"message"}
{"nick":"txdv","message":"Queue the packet, call the driver, and synchronize appopriately with I/O completion.","date":"2014-08-13T12:57:23.627Z","type":"message"}
{"nick":"saghul","message":"so, if my samba share goes away while I'm iterating the list of files i'm fucked","date":"2014-08-13T12:58:56.089Z","type":"message"}
{"nick":"txdv","message":"in windows 2000 it does it like that","date":"2014-08-13T13:00:08.962Z","type":"message"}
{"nick":"yorkieneil__","reason":"Ping timeout: 250 seconds","date":"2014-08-13T13:00:58.169Z","type":"quit"}
{"nick":"saghul","message":"hum","date":"2014-08-13T13:01:05.829Z","type":"message"}
{"nick":"saghul","message":"we need to think about a different approach then","date":"2014-08-13T13:02:13.983Z","type":"message"}
{"nick":"txdv","message":"funny though","date":"2014-08-13T13:03:57.282Z","type":"message"}
{"nick":"txdv","message":"they have an async request and then do a sync call which awaits it","date":"2014-08-13T13:04:13.453Z","type":"message"}
{"nick":"txdv","message":"would be possible to implement if we could use the windows internals","date":"2014-08-13T13:04:24.558Z","type":"message"}
{"nick":"saghul","message":"txdv: but is the data actually stores somewhere?","date":"2014-08-13T13:05:46.050Z","type":"message"}
{"nick":"saghul","message":"on Unix scandir already got it, so our function just copies some pointers","date":"2014-08-13T13:06:00.736Z","type":"message"}
{"nick":"saghul","message":"if the data is not there on Windows, we need to run that on the threadpool","date":"2014-08-13T13:06:15.575Z","type":"message"}
{"nick":"cjihrig","date":"2014-08-13T13:06:25.345Z","type":"join"}
{"nick":"txdv","message":"no","date":"2014-08-13T13:06:34.232Z","type":"message"}
{"nick":"txdv","message":"I hoped it would load all data immediately after FindFirstFile","date":"2014-08-13T13:06:45.067Z","type":"message"}
{"nick":"txdv","message":"but they are doing a 'NtQueryDirectoryFile' for every findnextfile","date":"2014-08-13T13:07:02.443Z","type":"message"}
{"nick":"txdv","message":"but it is better to test it then trust win2k leaked code","date":"2014-08-13T13:07:33.295Z","type":"message"}
{"nick":"guybrush","reason":"Excess Flood","date":"2014-08-13T13:08:23.403Z","type":"quit"}
{"nick":"saghul","message":"heh fair enough!","date":"2014-08-13T13:08:27.682Z","type":"message"}
{"nick":"guybrush","date":"2014-08-13T13:09:02.320Z","type":"join"}
{"nick":"kazupon_","reason":"Remote host closed the connection","date":"2014-08-13T13:09:53.019Z","type":"quit"}
{"nick":"cjihrig","reason":"Ping timeout: 245 seconds","date":"2014-08-13T13:10:37.346Z","type":"quit"}
{"nick":"saghul","message":"indutny: ^","date":"2014-08-13T13:12:57.435Z","type":"message"}
{"nick":"piscisaureus","date":"2014-08-13T13:13:53.446Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 260 seconds","date":"2014-08-13T13:17:18.657Z","type":"quit"}
{"nick":"txdv","message":"if we want true async with NT, we'll have to use internal functions and reimplement it on our own","date":"2014-08-13T13:19:49.478Z","type":"message"}
{"nick":"txdv","message":"i might play around with it a little bit because im curious if it is possible","date":"2014-08-13T13:20:00.815Z","type":"message"}
{"nick":"txdv","message":"but i dont think libuv would accept code like this","date":"2014-08-13T13:20:12.255Z","type":"message"}
{"nick":"indutny","message":"hey hey","date":"2014-08-13T13:20:27.767Z","type":"message"}
{"nick":"indutny","message":"saghul: tldr?","date":"2014-08-13T13:20:39.366Z","type":"message"}
{"nick":"rmg","date":"2014-08-13T13:22:12.690Z","type":"join"}
{"nick":"txdv","message":"FindNextFile blocks","date":"2014-08-13T13:22:28.974Z","type":"message"}
{"nick":"txdv","message":"cant call it in the same loop thread","date":"2014-08-13T13:23:06.142Z","type":"message"}
{"nick":"indutny","message":"aaah","date":"2014-08-13T13:23:40.324Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2014-08-13T13:23:44.129Z","type":"message"}
{"nick":"indutny","message":"this is quite shitty","date":"2014-08-13T13:23:49.016Z","type":"message"}
{"nick":"txdv","message":"i looked it up in win2k code","date":"2014-08-13T13:23:50.590Z","type":"message"}
{"nick":"indutny","message":"saghul: I wonder if we could just add new params","date":"2014-08-13T13:23:58.805Z","type":"message"}
{"nick":"indutny","message":"without this iterator changes","date":"2014-08-13T13:24:03.312Z","type":"message"}
{"nick":"indutny","message":"going back and forth from/to worker threads will become very expensive","date":"2014-08-13T13:24:21.628Z","type":"message"}
{"nick":"indutny","message":"if we'll do it","date":"2014-08-13T13:24:23.875Z","type":"message"}
{"nick":"txdv","message":"imo just call FindNextFile in a seperate thread and build a dirent** object like scandir does","date":"2014-08-13T13:24:47.886Z","type":"message"}
{"nick":"txdv","message":"and then return that","date":"2014-08-13T13:24:51.286Z","type":"message"}
{"nick":"indutny","message":"this is what we already do","date":"2014-08-13T13:25:03.407Z","type":"message"}
{"nick":"txdv","message":"not really","date":"2014-08-13T13:25:13.033Z","type":"message"}
{"nick":"indutny","message":"so you want it to send messages to main thread","date":"2014-08-13T13:25:20.753Z","type":"message"}
{"nick":"indutny","message":"while reading","date":"2014-08-13T13:25:22.706Z","type":"message"}
{"nick":"indutny","message":"right?","date":"2014-08-13T13:25:24.233Z","type":"message"}
{"nick":"txdv","message":"you want to stream every single entry?","date":"2014-08-13T13:25:50.181Z","type":"message"}
{"nick":"indutny","message":"erhm","date":"2014-08-13T13:25:58.008Z","type":"message"}
{"nick":"indutny","message":"either this","date":"2014-08-13T13:26:01.072Z","type":"message"}
{"nick":"indutny","message":"or give everything at once","date":"2014-08-13T13:26:05.310Z","type":"message"}
{"nick":"txdv","message":"currently it returns a big string with the filenames only","date":"2014-08-13T13:26:20.837Z","type":"message"}
{"nick":"txdv","message":"what we want as a first step is to return a struct with types also included","date":"2014-08-13T13:26:33.878Z","type":"message"}
{"nick":"rmg","reason":"Ping timeout: 255 seconds","date":"2014-08-13T13:26:50.922Z","type":"quit"}
{"nick":"indutny","message":"yes, that's what I am talking about","date":"2014-08-13T13:26:52.055Z","type":"message"}
{"nick":"indutny","message":"but saghul was talking about iterator interface","date":"2014-08-13T13:26:58.983Z","type":"message"}
{"nick":"txdv","message":"i mean, scanddir blocks anyway until everything is read out","date":"2014-08-13T13:27:50.790Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2014-08-13T13:28:00.210Z","type":"message"}
{"nick":"indutny","message":"indeed","date":"2014-08-13T13:28:02.109Z","type":"message"}
{"nick":"piscisaureus_","date":"2014-08-13T13:32:19.982Z","type":"join"}
{"nick":"piscisaureus","reason":"Ping timeout: 246 seconds","date":"2014-08-13T13:34:36.241Z","type":"quit"}
{"nick":"saghul","message":"txdv: i like that approach","date":"2014-08-13T13:35:39.400Z","type":"message"}
{"nick":"saghul","message":"(build the list of dirents on windows)","date":"2014-08-13T13:35:47.230Z","type":"message"}
{"nick":"indutny","message":"saghul: I think we should do it without iterators for now","date":"2014-08-13T13:36:40.514Z","type":"message"}
{"nick":"indutny","message":"also","date":"2014-08-13T13:36:43.867Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2014-08-13T13:36:52.681Z","type":"message"}
{"nick":"cjihrig","date":"2014-08-13T13:37:09.113Z","type":"join"}
{"nick":"saghul","message":"indutny: why? if we are going to spend time on it we might as well do it nicely","date":"2014-08-13T13:38:07.559Z","type":"message"}
{"nick":"saghul","message":"the iterator thing is simple","date":"2014-08-13T13:38:16.035Z","type":"message"}
{"nick":"indutny","message":"wait","date":"2014-08-13T13:38:22.429Z","type":"message"}
{"nick":"indutny","message":"I don't see how it could be useful","date":"2014-08-13T13:38:31.088Z","type":"message"}
{"nick":"indutny","message":"what are we going to accomplish with this?","date":"2014-08-13T13:38:38.571Z","type":"message"}
{"nick":"saghul","message":"the complication was windows, but if we build the dirents list upfront (ala unix) then the iterator just gives you the next one without blocking","date":"2014-08-13T13:38:51.247Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2014-08-13T13:39:47.320Z","type":"quit"}
{"nick":"indutny","message":"saghul: let's do it in two steps :)","date":"2014-08-13T13:40:04.243Z","type":"message"}
{"nick":"saghul","message":"indutny: you don't need to build a huge array of entries","date":"2014-08-13T13:40:41.247Z","type":"message"}
{"nick":"saghul","message":"in Node, for example","date":"2014-08-13T13:41:07.317Z","type":"message"}
{"nick":"indutny","message":"yeah, this is the only pros","date":"2014-08-13T13:41:11.380Z","type":"message"}
{"nick":"indutny","message":"lower memory usage","date":"2014-08-13T13:41:16.930Z","type":"message"}
{"nick":"indutny","message":"but on windows it'll be the same anyway","date":"2014-08-13T13:41:30.036Z","type":"message"}
{"nick":"saghul","message":"sounds like a good enough reason to me :-)","date":"2014-08-13T13:41:31.389Z","type":"message"}
{"nick":"indutny","message":"yep","date":"2014-08-13T13:41:38.121Z","type":"message"}
{"nick":"indutny","message":"still we could do it in 2 stesps","date":"2014-08-13T13:41:44.237Z","type":"message"}
{"nick":"indutny","message":"steps","date":"2014-08-13T13:41:45.502Z","type":"message"}
{"nick":"cjihrig","reason":"Ping timeout: 255 seconds","date":"2014-08-13T13:41:49.222Z","type":"quit"}
{"nick":"saghul","message":"what is step one then?","date":"2014-08-13T13:42:06.580Z","type":"message"}
{"nick":"quijote","date":"2014-08-13T13:42:26.605Z","type":"join"}
{"nick":"indutny","message":"expose types","date":"2014-08-13T13:42:56.814Z","type":"message"}
{"nick":"indutny","message":"and alloc dirents on windows","date":"2014-08-13T13:43:06.495Z","type":"message"}
{"nick":"indutny","message":"then we could reshuffle code","date":"2014-08-13T13:43:20.748Z","type":"message"}
{"nick":"saghul","message":"the you need to malloc space for the array of uv_dirent_t + each and every path","date":"2014-08-13T13:43:21.603Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2014-08-13T13:43:46.925Z","type":"message"}
{"nick":"indutny","message":"I already did it :)","date":"2014-08-13T13:43:49.579Z","type":"message"}
{"nick":"indutny","message":"writing windows side of it","date":"2014-08-13T13:43:57.804Z","type":"message"}
{"nick":"saghul","message":"then when do you want to do phase 2?","date":"2014-08-13T13:44:19.874Z","type":"message"}
{"nick":"saghul","message":"hint: \"later\" is not a valid answer ;-)","date":"2014-08-13T13:44:35.228Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2014-08-13T13:45:30.839Z","type":"message"}
{"nick":"txdv","message":"soon","date":"2014-08-13T13:45:33.753Z","type":"message"}
{"nick":"txdv","message":"soon Valve Time(TM)","date":"2014-08-13T13:45:41.378Z","type":"message"}
{"nick":"indutny","message":"ooook","date":"2014-08-13T13:46:00.134Z","type":"message"}
{"nick":"indutny","message":"you got me","date":"2014-08-13T13:46:01.433Z","type":"message"}
{"nick":"indutny","message":"I'll implement it","date":"2014-08-13T13:46:03.747Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 245 seconds","date":"2014-08-13T13:46:32.541Z","type":"quit"}
{"nick":"euoia_","date":"2014-08-13T13:47:49.810Z","type":"join"}
{"nick":"saghul","message":"kewl! :-)","date":"2014-08-13T13:48:32.643Z","type":"message"}
{"nick":"saghul","message":"thanks guys!","date":"2014-08-13T13:49:39.421Z","type":"message"}
{"nick":"yorkieneil__","date":"2014-08-13T13:50:40.193Z","type":"join"}
{"nick":"yorkieneil___","date":"2014-08-13T13:51:46.936Z","type":"join"}
{"nick":"yorkieneil___","reason":"Remote host closed the connection","date":"2014-08-13T13:52:08.504Z","type":"quit"}
{"nick":"yorkieneil___","date":"2014-08-13T13:52:35.702Z","type":"join"}
{"nick":"yorkieneil__","reason":"Read error: Connection reset by peer","date":"2014-08-13T13:53:22.130Z","type":"quit"}
{"nick":"c4milo","date":"2014-08-13T13:53:52.336Z","type":"join"}
{"nick":"SquirrelCZECH","reason":"Ping timeout: 244 seconds","date":"2014-08-13T13:54:53.959Z","type":"quit"}
{"nick":"SquirrelCZECH","date":"2014-08-13T13:58:19.152Z","type":"join"}
{"nick":"yorkieneil___","message":"network idle what i expect is all connections(UDP/TCP) are inactivity","date":"2014-08-13T13:59:02.252Z","type":"message"}
{"nick":"saghul","message":"yorkieneil___: there is no mechanism for that in libuv","date":"2014-08-13T14:00:37.205Z","type":"message"}
{"nick":"yorkieneil___","message":"something like a app server, i wanna get a trigger after app created connection pool to mongodb/redis/mysql and other tcp/udp initialization","date":"2014-08-13T14:00:50.331Z","type":"message"}
{"nick":"yorkieneil___","message":"@saghui, thanks, got it :)","date":"2014-08-13T14:01:16.241Z","type":"message"}
{"nick":"seishun","date":"2014-08-13T14:01:44.688Z","type":"join"}
{"nick":"yorkieneil___","message":"have a question, are you plain to support a trigger to do that, i really think it maybe useful","date":"2014-08-13T14:02:27.972Z","type":"message"}
{"nick":"txdv","message":"so basically a timer which gets reset everytime there is a send or recv happening","date":"2014-08-13T14:03:33.539Z","type":"message"}
{"nick":"txdv","message":"and you think this is should be core libuv?","date":"2014-08-13T14:03:45.245Z","type":"message"}
{"nick":"quijote","date":"2014-08-13T14:04:13.697Z","type":"join"}
{"nick":"SquirrelCZECH","reason":"Ping timeout: 260 seconds","date":"2014-08-13T14:04:40.144Z","type":"quit"}
{"nick":"saghul","message":"I don't think it belongs to core. Applications can keep track of sent and received data easily and implement whatever policy on top of it","date":"2014-08-13T14:05:49.638Z","type":"message"}
{"nick":"yorkieneil___","message":"I just think libuv should(maybe) expose a api that can get send/recv :(","date":"2014-08-13T14:06:05.887Z","type":"message"}
{"nick":"SquirrelCZECH","date":"2014-08-13T14:06:31.150Z","type":"join"}
{"nick":"yorkieneil___","message":"that's too hard implemetation for big app","date":"2014-08-13T14:06:51.102Z","type":"message"}
{"nick":"yorkieneil___","message":"i'm unsure that, maybe you're right","date":"2014-08-13T14:07:30.978Z","type":"message"}
{"nick":"cjihrig","date":"2014-08-13T14:07:56.129Z","type":"join"}
{"nick":"cjihrig","reason":"Ping timeout: 255 seconds","date":"2014-08-13T14:12:25.113Z","type":"quit"}
{"nick":"dignifiedquire","reason":"Quit: dignifiedquire","date":"2014-08-13T14:13:21.213Z","type":"quit"}
{"nick":"piscisaureus__","date":"2014-08-13T14:13:26.392Z","type":"join"}
{"nick":"txdv","message":"yorkieneil___: it really shouldn't","date":"2014-08-13T14:13:38.886Z","type":"message"}
{"nick":"txdv","message":"you can do it yourself in the app","date":"2014-08-13T14:13:45.078Z","type":"message"}
{"nick":"txdv","message":"its not something os dependent","date":"2014-08-13T14:13:59.335Z","type":"message"}
{"nick":"yorkieneil___","message":"because the app is too big, and use too many netowrking modules, if i do that, it has a very big refactor, but anyway, thanks a lot :)","date":"2014-08-13T14:15:07.051Z","type":"message"}
{"nick":"txdv","message":"there is nothing stopping you from using a own patched libuv","date":"2014-08-13T14:16:00.405Z","type":"message"}
{"nick":"Ralith","date":"2014-08-13T14:16:40.190Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 264 seconds","date":"2014-08-13T14:16:46.889Z","type":"quit"}
{"nick":"yorkieneil___","message":"it makes a different branch, i don't like that :(","date":"2014-08-13T14:17:17.745Z","type":"message"}
{"nick":"txdv","message":"yeah you all like us to code for you","date":"2014-08-13T14:18:09.432Z","type":"message"}
{"nick":"quijote","reason":"Read error: Connection reset by peer","date":"2014-08-13T14:18:47.825Z","type":"quit"}
{"nick":"quijote","date":"2014-08-13T14:19:19.010Z","type":"join"}
{"nick":"txdv","message":"saghul: winrt has async support for everything","date":"2014-08-13T14:19:57.685Z","type":"message"}
{"nick":"txdv","message":":>","date":"2014-08-13T14:20:02.628Z","type":"message"}
{"nick":"saghul","message":"txdv: winrt== the ting on the cheap tablets?","date":"2014-08-13T14:23:02.171Z","type":"message"}
{"nick":"saghul","message":"*thing","date":"2014-08-13T14:23:17.030Z","type":"message"}
{"nick":"txdv","message":"windows 8 has a new api","date":"2014-08-13T14:26:20.350Z","type":"message"}
{"nick":"txdv","message":"its called winrt","date":"2014-08-13T14:26:22.062Z","type":"message"}
{"nick":"txdv","message":"in order to create maximum confusion since the codename for windows 8 on tables was winrt as well","date":"2014-08-13T14:26:36.285Z","type":"message"}
{"nick":"txdv","message":"either way, everything that blocks there has an asynchronous api by default","date":"2014-08-13T14:26:47.245Z","type":"message"}
{"nick":"txdv","message":"readdir for example","date":"2014-08-13T14:26:53.542Z","type":"message"}
{"nick":"txdv","message":"code looks like this __x_Windows_CUI_CXaml_CControls_CITextBlock_put_Text(tb, hs)","date":"2014-08-13T14:28:24.986Z","type":"message"}
{"nick":"txdv","message":"since it has namespaces","date":"2014-08-13T14:28:28.686Z","type":"message"}
{"nick":"txdv","message":"so they prefix every call with the entire name","date":"2014-08-13T14:28:38.945Z","type":"message"}
{"nick":"saghul","message":"O_O","date":"2014-08-13T14:34:20.219Z","type":"message"}
{"nick":"dignifiedquire","date":"2014-08-13T14:34:55.776Z","type":"join"}
{"nick":"saghul","new_nick":"saghul|afk","date":"2014-08-13T14:38:28.113Z","type":"nick"}
{"nick":"cjihrig","date":"2014-08-13T14:38:40.926Z","type":"join"}
{"nick":"yorkieneil___","reason":"Quit: Computer has gone to sleep.","date":"2014-08-13T14:39:49.446Z","type":"quit"}
{"nick":"yorkieneil___","date":"2014-08-13T14:40:19.835Z","type":"join"}
{"nick":"cjihrig","reason":"Ping timeout: 255 seconds","date":"2014-08-13T14:42:53.926Z","type":"quit"}
{"nick":"yorkieneil___","reason":"Ping timeout: 240 seconds","date":"2014-08-13T14:44:22.836Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 246 seconds","date":"2014-08-13T14:53:00.303Z","type":"quit"}
{"nick":"kazupon","date":"2014-08-13T14:54:27.941Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-08-13T14:56:43.541Z","type":"quit"}
{"nick":"mikeal","date":"2014-08-13T14:57:24.039Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2014-08-13T14:58:53.131Z","type":"quit"}
{"nick":"piscisaureus___","date":"2014-08-13T15:00:54.796Z","type":"join"}
{"nick":"piscisaureus___","new_nick":"piscisaureus","date":"2014-08-13T15:02:11.897Z","type":"nick"}
{"nick":"piscisaureus__","reason":"Ping timeout: 246 seconds","date":"2014-08-13T15:03:30.282Z","type":"quit"}
{"nick":"janjongboom","reason":"Ping timeout: 260 seconds","date":"2014-08-13T15:04:57.258Z","type":"quit"}
{"nick":"janjongboom","date":"2014-08-13T15:06:26.133Z","type":"join"}
{"nick":"piscisaureus","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2014-08-13T15:09:58.706Z","type":"quit"}
{"nick":"yorkieneil___","date":"2014-08-13T15:10:46.288Z","type":"join"}
{"nick":"bradleymeck","date":"2014-08-13T15:13:25.957Z","type":"join"}
{"nick":"euoia_","reason":"Ping timeout: 260 seconds","date":"2014-08-13T15:16:18.677Z","type":"quit"}
{"nick":"yorkieneil___","reason":"Ping timeout: 260 seconds","date":"2014-08-13T15:17:05.243Z","type":"quit"}
{"nick":"Ralith","reason":"Ping timeout: 260 seconds","date":"2014-08-13T15:17:28.145Z","type":"quit"}
{"nick":"piscisaureus","date":"2014-08-13T15:19:45.422Z","type":"join"}
{"nick":"Ralith","date":"2014-08-13T15:21:23.212Z","type":"join"}
{"nick":"rmg","date":"2014-08-13T15:23:46.769Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 250 seconds","date":"2014-08-13T15:28:12.286Z","type":"quit"}
{"nick":"c4milo","date":"2014-08-13T15:31:19.295Z","type":"join"}
{"nick":"euoia_","date":"2014-08-13T15:33:35.234Z","type":"join"}
{"nick":"janjongboom","reason":"Ping timeout: 260 seconds","date":"2014-08-13T15:36:36.142Z","type":"quit"}
{"nick":"janjongboom","date":"2014-08-13T15:37:29.207Z","type":"join"}
{"nick":"cjihrig","date":"2014-08-13T15:39:00.170Z","type":"join"}
{"nick":"yorkieneil___","date":"2014-08-13T15:40:20.707Z","type":"join"}
{"nick":"cjihrig","reason":"Ping timeout: 250 seconds","date":"2014-08-13T15:43:28.180Z","type":"quit"}
{"nick":"kellabyte","date":"2014-08-13T15:44:24.902Z","type":"join"}
{"nick":"euoia_","reason":"Ping timeout: 260 seconds","date":"2014-08-13T15:47:06.680Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 255 seconds","date":"2014-08-13T15:47:42.030Z","type":"quit"}
{"nick":"TooTallNate","date":"2014-08-13T15:53:45.655Z","type":"join"}
{"nick":"rmg","date":"2014-08-13T15:53:53.509Z","type":"join"}
{"nick":"euoia_","date":"2014-08-13T15:54:55.058Z","type":"join"}
{"nick":"yorkieneil___","reason":"Quit: Computer has gone to sleep.","date":"2014-08-13T15:58:40.918Z","type":"quit"}
{"nick":"SquirrelCZECH","reason":"Ping timeout: 260 seconds","date":"2014-08-13T15:59:56.183Z","type":"quit"}
