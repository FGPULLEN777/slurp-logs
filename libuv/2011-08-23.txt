{"nick":"ryah","message":"i've never used it","date":"2011-08-23T00:01:31.762Z","type":"message"}
{"nick":"ryah","message":"looking forward to trying it out","date":"2011-08-23T00:01:37.446Z","type":"message"}
{"nick":"ryah","message":"the guy who wrote it is a long time friend","date":"2011-08-23T00:01:51.164Z","type":"message"}
{"nick":"ryah","message":"and a very very good programmer","date":"2011-08-23T00:01:59.360Z","type":"message"}
{"nick":"ryah","message":"so i expect it to be awesome","date":"2011-08-23T00:02:10.310Z","type":"message"}
{"nick":"bnoordhuis","message":"well, color me curious","date":"2011-08-23T00:02:32.055Z","type":"message"}
{"nick":"ryah","message":"it's so awesome that GYP is very high-level and can support really good platform specific stuff ","date":"2011-08-23T00:04:06.812Z","type":"message"}
{"nick":"ryah","message":"liek this: http://code.google.com/p/gyp/source/detail?r=1002","date":"2011-08-23T00:04:10.377Z","type":"message"}
{"nick":"ryah","message":"i have no idea what the hell that is","date":"2011-08-23T00:04:19.254Z","type":"message"}
{"nick":"ryah","message":"but i'm glad node can somehow use it","date":"2011-08-23T00:04:27.838Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u0002c2ae39b\u000f \u000310\u000f/ node.gyp \u0002:\u000f gyp: -ldl on linux - http://git.io/DZKRcg","date":"2011-08-23T00:07:22.809Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u000280dd818\u000f \u000310\u000f/ (10 files in 3 dirs)\u0002:\u000f Upgrade GYP to r1010 - http://git.io/A55c3w","date":"2011-08-23T00:10:41.507Z","type":"message"}
{"nick":"ryah","message":"bnoordhuis: ./tools/gyp_node -f ninja","date":"2011-08-23T00:11:13.359Z","type":"message"}
{"nick":"bnoordhuis","message":"ryah: NotImplementedError: --generator_output not implemented for ninja :(","date":"2011-08-23T00:13:45.770Z","type":"message"}
{"nick":"ryah","message":"bnoordhuis: yeah..","date":"2011-08-23T00:14:07.280Z","type":"message"}
{"nick":"bnoordhuis","message":"work in progress probably","date":"2011-08-23T00:14:25.860Z","type":"message"}
{"nick":"ryah","message":"just a sec..","date":"2011-08-23T00:15:41.397Z","type":"message"}
{"nick":"ryah","message":"yeah - i can't get it to work either","date":"2011-08-23T00:18:55.209Z","type":"message"}
{"nick":"ryah","message":"oh well","date":"2011-08-23T00:18:56.012Z","type":"message"}
{"nick":"ryah","message":"i guess we'll have to wait another week","date":"2011-08-23T00:19:02.679Z","type":"message"}
{"nick":"ryah","message":"or so","date":"2011-08-23T00:19:05.426Z","type":"message"}
{"nick":"brson_","date":"2011-08-23T00:20:14.337Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 276 seconds","date":"2011-08-23T00:22:30.687Z","type":"quit"}
{"nick":"graydon","reason":"Quit: Leaving.","date":"2011-08-23T00:32:26.210Z","type":"quit"}
{"nick":"bnoordhuis","message":"piscisaureus: still around homie?","date":"2011-08-23T00:53:33.938Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yes but not too long","date":"2011-08-23T00:55:05.617Z","type":"message"}
{"nick":"piscisaureus","message":"what's up?","date":"2011-08-23T00:55:09.650Z","type":"message"}
{"nick":"bnoordhuis","message":"this","date":"2011-08-23T00:55:17.639Z","type":"message"}
{"nick":"bnoordhuis","message":"you mentioned that calling the recv_cb with nread==0 is an implementation detail?","date":"2011-08-23T00:55:34.248Z","type":"message"}
{"nick":"bnoordhuis","message":"is that still true after tonight's conference call?","date":"2011-08-23T00:55:49.248Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: that per se is not an implementation detail but","date":"2011-08-23T00:55:55.980Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: the moment when that happens is","date":"2011-08-23T00:56:07.779Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: right - what do you propose?","date":"2011-08-23T00:56:23.392Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: applications should be ready to handle that case at any time, and not rely on it happening ever","date":"2011-08-23T00:56:51.034Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: what do I need to propose?","date":"2011-08-23T00:57:19.547Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: that doesn't sound acceptable, that's saying \"i'm okay with memory leaks\"","date":"2011-08-23T00:57:36.319Z","type":"message"}
{"nick":"piscisaureus","message":"eh?","date":"2011-08-23T00:57:47.677Z","type":"message"}
{"nick":"bnoordhuis","message":"'not rely on it happening ever'","date":"2011-08-23T00:57:55.919Z","type":"message"}
{"nick":"bnoordhuis","message":"only hippies and commies are okay with memory leaks >:(","date":"2011-08-23T00:58:18.418Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: you are misrepresenting what I said :-(","date":"2011-08-23T00:58:38.479Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: no, i'm interpreting your words literally","date":"2011-08-23T00:58:58.866Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: applications should handle that case - by freeing the buffer","date":"2011-08-23T00:59:16.646Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: yeah, but they can't if libuv hasn't signalled that the buffer's released again","date":"2011-08-23T00:59:50.501Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: eh? did you drink too much?","date":"2011-08-23T01:00:12.633Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I said, they should handle it by freeing the buffer","date":"2011-08-23T01:00:25.091Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: i suspect you didn't mean to add 'not rely on it happening ever' part","date":"2011-08-23T01:00:34.262Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yes I am serious about that","date":"2011-08-23T01:00:47.541Z","type":"message"}
{"nick":"ryah","message":"im getting a really crazy error","date":"2011-08-23T01:00:48.482Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: that's what i mean by mem leak - if libuv doesn't tell you that the buffer is cleared again, you can't free it","date":"2011-08-23T01:01:23.282Z","type":"message"}
{"nick":"bnoordhuis","message":"ryah: what is it?","date":"2011-08-23T01:01:34.671Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: libuv will always give you back the buffer one way or another","date":"2011-08-23T01:01:47.594Z","type":"message"}
{"nick":"ryah","message":"well some test is failing - but basiclly i can't im pretty sure im making a syscall - but i cant see it in dtrace","date":"2011-08-23T01:02:05.232Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: hence i figured you didn't really mean the 'not rely on it happening ever' part :)","date":"2011-08-23T01:02:19.774Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: the nread==0 case is the escape hatch for libuv, when it has requested a buffer that it doesn't need after all","date":"2011-08-23T01:02:34.471Z","type":"message"}
{"nick":"bnoordhuis","message":"ryah: maybe it's not getting past the libc wrapper?","date":"2011-08-23T01:02:39.419Z","type":"message"}
{"nick":"ryah","message":"bnoordhuis: that's what i was wondering - does apple have the libc open sourced?","date":"2011-08-23T01:03:30.856Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: so nread > 0 means 'here is the dgram, btw the buffer is yours again too kthxbye'?","date":"2011-08-23T01:04:01.869Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: about \"not rely on it\" - your udp tests (at least the send_and_recv test) only works if the makes the recv callback with nread==0 at some point. But there is no guarantee that libuv will ever do that, nread==0 is only an escape hatch, it has no further meaning. So your test should not rely on that ever happeing.","date":"2011-08-23T01:04:05.604Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yes","date":"2011-08-23T01:04:15.532Z","type":"message"}
{"nick":"bnoordhuis","message":"ryah: i think they have, i was digging through the dlopen parts recently","date":"2011-08-23T01:04:19.865Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: if libuv returns a buffer to you it's yours again","date":"2011-08-23T01:04:28.904Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: i should fix that in uv-unix then :)","date":"2011-08-23T01:04:47.549Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: sorry my bad","date":"2011-08-23T01:04:59.498Z","type":"message"}
{"nick":"ryah","message":"http://www.opensource.apple.com/source/Libc/ <-- looks good","date":"2011-08-23T01:05:02.811Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: :-)","date":"2011-08-23T01:05:14.057Z","type":"message"}
{"nick":"ryah","message":"if only i could grep it..","date":"2011-08-23T01:05:21.257Z","type":"message"}
{"nick":"ryah","action":"found the download..","date":"2011-08-23T01:07:27.304Z","type":"action"}
{"nick":"DrPizza","message":"ryah: did you see my question the other day, do you know where one might find NPN and other patches for openssl 1.0?","date":"2011-08-23T01:08:09.107Z","type":"message"}
{"nick":"DrPizza","message":"if tehy do not exist then sticking with 0.9.8 may be better","date":"2011-08-23T01:08:20.313Z","type":"message"}
{"nick":"ryah","message":"DrPizza: indutny is going to apply the patches","date":"2011-08-23T01:08:34.100Z","type":"message"}
{"nick":"ryah","message":"i think he's asleep right now","date":"2011-08-23T01:08:52.108Z","type":"message"}
{"nick":"ryah","message":"but he was in the middle of it","date":"2011-08-23T01:08:59.444Z","type":"message"}
{"nick":"DrPizza","message":"oh he has suitable patches for 1.0?","date":"2011-08-23T01:09:02.420Z","type":"message"}
{"nick":"DrPizza","message":"I looked briefly but did not see anything immediately obvious","date":"2011-08-23T01:09:18.508Z","type":"message"}
{"nick":"ryah","message":"nos ure","date":"2011-08-23T01:09:21.353Z","type":"message"}
{"nick":"DrPizza","message":"perhaps the 0.9.8 patches will apply","date":"2011-08-23T01:09:23.808Z","type":"message"}
{"nick":"ryah","message":"not sure..","date":"2011-08-23T01:09:26.216Z","type":"message"}
{"nick":"DrPizza","message":"but applying and working are two different things","date":"2011-08-23T01:09:41.711Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: makes me wonder if it'd be worthwhile to peek with ioctl(FIONREAD)","date":"2011-08-23T01:11:51.176Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: having the libuv consumer do a potentially expensive malloc when there's nothing to read possibly outweighs the cost of a second syscall...","date":"2011-08-23T01:12:22.519Z","type":"message"}
{"nick":"bnoordhuis","message":"'benchmark it' you'll say and you'd be right of course","date":"2011-08-23T01:12:41.469Z","type":"message"}
{"nick":"DrPizza","message":"malloc feasibly has to syscall anyway","date":"2011-08-23T01:13:09.498Z","type":"message"}
{"nick":"bnoordhuis","message":"the dlmalloc implementation in glibc is pretty smart","date":"2011-08-23T01:13:28.956Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: about nread==0 again -- the \"\u0003here is the dgram, btw the buffer is yours \u000301again too kthxbye\u0003\u000301\" is what we had in mind, it seemed the most efficient thing we could do. But occiasonally (rarely!) we would ask for a buffer and not use it. That's why the nread==0 case was added (which is unfortunate because commonly nread==0 means EOF)","date":"2011-08-23T01:13:35.826Z","type":"message"}
{"nick":"bnoordhuis","message":"small allocs come out of a special areane","date":"2011-08-23T01:13:37.677Z","type":"message"}
{"nick":"bnoordhuis","message":"*arena","date":"2011-08-23T01:13:40.041Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: you could try that","date":"2011-08-23T01:13:55.833Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: but node's slab allocator is optimized for this","date":"2011-08-23T01:14:22.397Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: that's what happens now with every fd that becomes readable","date":"2011-08-23T01:14:41.266Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: that's wrong. It should not happen on windows","date":"2011-08-23T01:15:07.167Z","type":"message"}
{"nick":"piscisaureus","message":"s/should/does/","date":"2011-08-23T01:15:18.080Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: let me link you to the recvmsg loop","date":"2011-08-23T01:15:38.860Z","type":"message"}
{"nick":"ryah","message":"so the read is a pure syscall","date":"2011-08-23T01:15:44.084Z","type":"message"}
{"nick":"ryah","message":"wtf","date":"2011-08-23T01:15:50.212Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: https://github.com/bnoordhuis/libuv/compare/udp#L3R500 <- this","date":"2011-08-23T01:16:15.438Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yes, recvmsg is a special case. I though that you were referring to tcp.","date":"2011-08-23T01:16:25.300Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: what's tcp?","date":"2011-08-23T01:16:33.405Z","type":"message"}
{"nick":"bnoordhuis","message":"of course i was talking about udp >:(","date":"2011-08-23T01:16:47.162Z","type":"message"}
{"nick":"piscisaureus","message":"\"that's what happens now with every fd that becomes readable\u0003\"","date":"2011-08-23T01:17:03.557Z","type":"message"}
{"nick":"piscisaureus","message":"\"every\"","date":"2011-08-23T01:17:16.737Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: oh sorry, right - every udp fd that becomes readable","date":"2011-08-23T01:17:20.800Z","type":"message"}
{"nick":"bnoordhuis","message":"*udp","date":"2011-08-23T01:17:23.968Z","type":"message"}
{"nick":"bnoordhuis","message":"damnit, it's getting late","date":"2011-08-23T01:17:28.182Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yeah ok","date":"2011-08-23T01:17:31.873Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I understand that recvmsg is a problem","date":"2011-08-23T01:17:47.011Z","type":"message"}
{"nick":"piscisaureus","message":"Using fionread would be justifiable I think","date":"2011-08-23T01:18:11.159Z","type":"message"}
{"nick":"bnoordhuis","message":"it does, doesn't it?","date":"2011-08-23T01:18:25.418Z","type":"message"}
{"nick":"bnoordhuis","message":"needs a good benchmark though...","date":"2011-08-23T01:18:33.933Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: https://github.com/piscisaureus/libuv/blob/udp/src/win/udp.c#L491-526 :-)","date":"2011-08-23T01:19:13.456Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: haha","date":"2011-08-23T01:19:32.934Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: maybe this is going away btw since 0-reads don't work currently (MSG_PARTIAL support seems to be completely broken on my windows)","date":"2011-08-23T01:20:00.772Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: okay, think with me - what's a good approach to measuring the impact of FIONREAD?","date":"2011-08-23T01:23:01.532Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: hmm. do it a lot?","date":"2011-08-23T01:23:22.276Z","type":"message"}
{"nick":"piscisaureus","message":"or run the packet storm benchmark","date":"2011-08-23T01:23:39.352Z","type":"message"}
{"nick":"bnoordhuis","message":"with a matching recvmsg yes","date":"2011-08-23T01:23:51.049Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, let's see what udp_packet_storm says","date":"2011-08-23T01:24:11.267Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I bet fionread itself is pretty cheap, and it's cost is dominated by syscall overhead","date":"2011-08-23T01:26:57.770Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: if you can know number of syscalls that linux can do per second then you should be able to get an idea","date":"2011-08-23T01:27:52.672Z","type":"message"}
{"nick":"piscisaureus","message":"damn, getting late yeah","date":"2011-08-23T01:28:03.448Z","type":"message"}
{"nick":"piscisaureus","message":"s/can know/know the/","date":"2011-08-23T01:28:22.824Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: the fastest syscalll on my system takes about 0.75us","date":"2011-08-23T01:28:33.698Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: but a lot depends on the code path in the kernel and the amount of kernel-side locking involved","date":"2011-08-23T01:29:07.536Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: does FIONREAD return the size of the entire buffer or just the next message","date":"2011-08-23T01:31:35.965Z","type":"message"}
{"nick":"piscisaureus","message":"(on windows it does either, depending on whether you call ioctlsocket or WSAIoclt :-/)","date":"2011-08-23T01:31:56.692Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: er... entire buffer i think","date":"2011-08-23T01:32:25.396Z","type":"message"}
{"nick":"bnoordhuis","message":"i'd have to check though","date":"2011-08-23T01:32:29.806Z","type":"message"}
{"nick":"bnoordhuis","message":"at a glance, the size of everything that's still in the queue","date":"2011-08-23T01:34:31.832Z","type":"message"}
{"nick":"piscisaureus","message":"so you can just call FIONREAD once and then drain the kernel buffer","date":"2011-08-23T01:36:57.612Z","type":"message"}
{"nick":"piscisaureus","message":"sounds like something you could do without hurting performance","date":"2011-08-23T01:37:08.863Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm wrong!","date":"2011-08-23T01:38:10.705Z","type":"message"}
{"nick":"bnoordhuis","message":"FIONREAD is an alias for SIOCINQ","date":"2011-08-23T01:38:25.176Z","type":"message"}
{"nick":"piscisaureus","message":"yes","date":"2011-08-23T01:38:34.092Z","type":"message"}
{"nick":"piscisaureus","message":"FIONREAD (SIOCINQ)","date":"2011-08-23T01:38:34.730Z","type":"message"}
{"nick":"piscisaureus","message":"              Gets a pointer to an integer as argument.  Returns the size of the next","date":"2011-08-23T01:38:34.878Z","type":"message"}
{"nick":"piscisaureus","message":"              pending datagram in the integer in bytes, or 0 when no datagram is","date":"2011-08-23T01:38:34.878Z","type":"message"}
{"nick":"piscisaureus","message":"              pending.  Warning: Using FIONREAD, it is impossible to distinguish the","date":"2011-08-23T01:38:34.878Z","type":"message"}
{"nick":"piscisaureus","message":"              case where no datagram is pending from the case where the next pending","date":"2011-08-23T01:38:34.878Z","type":"message"}
{"nick":"piscisaureus","message":"              datagram contains zero bytes of data.  It is safer to use select(2),","date":"2011-08-23T01:38:35.242Z","type":"message"}
{"nick":"piscisaureus","message":"              poll(2), or epoll(7) to distinguish these cases.","date":"2011-08-23T01:38:35.388Z","type":"message"}
{"nick":"bnoordhuis","message":"and that returns the size of the first packet","date":"2011-08-23T01:38:36.877Z","type":"message"}
{"nick":"bnoordhuis","message":"pretty confusing, it works completely different for file i/o :/","date":"2011-08-23T01:39:04.929Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: the other option you have is just read one dgram at a time","date":"2011-08-23T01:41:07.746Z","type":"message"}
{"nick":"piscisaureus","message":"or is epoll overhead very big?","date":"2011-08-23T01:41:29.613Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: epoll overhead?","date":"2011-08-23T01:42:03.305Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yes","date":"2011-08-23T01:42:15.732Z","type":"message"}
{"nick":"bnoordhuis","message":"you mean do a quick epoll check after every dgram to see if there's more in the queue?","date":"2011-08-23T01:42:28.561Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: no","date":"2011-08-23T01:42:33.459Z","type":"message"}
{"nick":"bnoordhuis","message":"^ because that'd be insanely expensive","date":"2011-08-23T01:42:51.570Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I mean - if you read only one dgram then what libuv is going to do before the next read is epoll right?","date":"2011-08-23T01:43:15.539Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: no","date":"2011-08-23T01:43:34.819Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: it loops until recvmsg returns EAGAIN","date":"2011-08-23T01:43:46.245Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: and it should become there might be more than one packet pending","date":"2011-08-23T01:43:57.970Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yes - but EAGAIN is what you are trying to avoid right?","date":"2011-08-23T01:44:20.104Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: yes","date":"2011-08-23T01:44:25.429Z","type":"message"}
{"nick":"piscisaureus","message":"so - what happens if you read only once?","date":"2011-08-23T01:44:40.063Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: things will go bad","date":"2011-08-23T01:44:59.357Z","type":"message"}
{"nick":"piscisaureus","message":"because?","date":"2011-08-23T01:45:14.412Z","type":"message"}
{"nick":"bnoordhuis","message":"you really need to consume all data before you put a socket back in the epoll queue","date":"2011-08-23T01:45:28.850Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: that sounds like nonsense to me","date":"2011-08-23T01:45:45.574Z","type":"message"}
{"nick":"bnoordhuis","message":"funny things happen if you don't, on older kernels anyway","date":"2011-08-23T01:45:56.191Z","type":"message"}
{"nick":"bnoordhuis","message":"it depends on if your epoll is edge or level triggered","date":"2011-08-23T01:46:11.086Z","type":"message"}
{"nick":"piscisaureus","message":"I bet libev uses EPOLLT","date":"2011-08-23T01:46:36.223Z","type":"message"}
{"nick":"bnoordhuis","message":"you mean EPOLLET? i won't bet against you","date":"2011-08-23T01:46:58.300Z","type":"message"}
{"nick":"piscisaureus","message":"since that is closest to what the poll and select backend also provide","date":"2011-08-23T01:46:59.596Z","type":"message"}
{"nick":"piscisaureus","message":"no EPOLLET == edge triggered","date":"2011-08-23T01:47:22.893Z","type":"message"}
{"nick":"piscisaureus","message":"I bet it uses level-triggered","date":"2011-08-23T01:47:32.826Z","type":"message"}
{"nick":"bnoordhuis","message":"wait, here's the relevant part","date":"2011-08-23T01:47:43.770Z","type":"message"}
{"nick":"bnoordhuis","message":"An application that employs the EPOLLET flag should use non-blocking file descriptors to avoid having a blocking read or write starve a task that is handling multiple file descriptors. The suggested way to use epoll as an edge-triggered (EPOLLET) interface is as follows:","date":"2011-08-23T01:47:44.750Z","type":"message"}
{"nick":"bnoordhuis","message":"              i   with non-blocking file descriptors; and","date":"2011-08-23T01:47:44.940Z","type":"message"}
{"nick":"bnoordhuis","message":"              ii  by waiting for an event only after read(2) or write(2) return EAGAIN.","date":"2011-08-23T01:47:45.089Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: that's for edge-triggered?","date":"2011-08-23T01:48:01.655Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2011-08-23T01:48:04.551Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: that's not what libev uses?","date":"2011-08-23T01:48:13.578Z","type":"message"}
{"nick":"piscisaureus","message":"er. \u0003\u000301bnoordhuis: that's not what libev uses!\u0003\u000301","date":"2011-08-23T01:48:25.502Z","type":"message"}
{"nick":"bnoordhuis","message":"it *is* what libev uses","date":"2011-08-23T01:48:36.945Z","type":"message"}
{"nick":"bnoordhuis","message":"anyway, it's sound advice","date":"2011-08-23T01:49:17.631Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: grep EPOLLET -r *","date":"2011-08-23T01:49:24.350Z","type":"message"}
{"nick":"piscisaureus","message":"(awkward silence)","date":"2011-08-23T01:49:33.859Z","type":"message"}
{"nick":"bnoordhuis","message":"it may have been fixed but one issue with EPOLLET was that fds would never become readable again","date":"2011-08-23T01:49:38.748Z","type":"message"}
{"nick":"bnoordhuis","message":"(if you didn't consume all data)","date":"2011-08-23T01:49:53.540Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: that makes sense. that's what edge-triggered means","date":"2011-08-23T01:50:05.316Z","type":"message"}
{"nick":"bnoordhuis","message":"and even if libev doesn't use it now, i'm still going to take the defensive programmer approach here","date":"2011-08-23T01:50:20.733Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: libev uses level-triggered epoll","date":"2011-08-23T01:50:20.918Z","type":"message"}
{"nick":"DrPizza","message":"flemish is dutch right?","date":"2011-08-23T01:53:20.851Z","type":"message"}
{"nick":"DrPizza","message":"(+/-)","date":"2011-08-23T01:53:24.434Z","type":"message"}
{"nick":"piscisaureus","message":"flemish is not a language","date":"2011-08-23T01:53:36.535Z","type":"message"}
{"nick":"piscisaureus","message":"it's a condition","date":"2011-08-23T01:53:43.520Z","type":"message"}
{"nick":"DrPizza","message":"lol","date":"2011-08-23T01:53:46.083Z","type":"message"}
{"nick":"DrPizza","message":"what does \"door de buffalo's\" mean ","date":"2011-08-23T01:53:59.566Z","type":"message"}
{"nick":"DrPizza","message":"I know that buffalo's refers to the football team","date":"2011-08-23T01:54:04.711Z","type":"message"}
{"nick":"piscisaureus","message":"it means \"by the buffalos\"","date":"2011-08-23T01:54:12.081Z","type":"message"}
{"nick":"DrPizza","message":"ah ","date":"2011-08-23T01:54:17.734Z","type":"message"}
{"nick":"DrPizza","message":"oh shit yes","date":"2011-08-23T01:54:29.138Z","type":"message"}
{"nick":"DrPizza","message":"now ryan paris","date":"2011-08-23T01:54:35.327Z","type":"message"}
{"nick":"DrPizza","message":"ok this mix just got a lot better","date":"2011-08-23T01:54:38.686Z","type":"message"}
{"nick":"piscisaureus","action":"confused","date":"2011-08-23T01:55:23.632Z","type":"action"}
{"nick":"DrPizza","message":"radio soulwax/2manydj's","date":"2011-08-23T01:55:34.857Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: https://gist.github.com/8a133efad25706da2495 <- numbers","date":"2011-08-23T01:55:43.350Z","type":"message"}
{"nick":"bnoordhuis","message":"so FIONREAD does have overhead :(","date":"2011-08-23T01:56:40.450Z","type":"message"}
{"nick":"DrPizza","message":"over how many runs","date":"2011-08-23T01:57:31.335Z","type":"message"}
{"nick":"bnoordhuis","message":"DrPizza: median of three","date":"2011-08-23T01:57:54.793Z","type":"message"}
{"nick":"bnoordhuis","message":"the numbers were really close btw","date":"2011-08-23T01:58:15.921Z","type":"message"}
{"nick":"bnoordhuis","message":"so it's pretty stable apparently","date":"2011-08-23T01:58:26.697Z","type":"message"}
{"nick":"DrPizza","message":"hmm","date":"2011-08-23T01:58:47.615Z","type":"message"}
{"nick":"piscisaureus","message":"not the kind of overhead I worry about btw","date":"2011-08-23T01:59:09.337Z","type":"message"}
{"nick":"bnoordhuis","message":"i can gist or push the diffs if you want to check for yourself","date":"2011-08-23T01:59:24.099Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: well... >5% diff","date":"2011-08-23T01:59:44.620Z","type":"message"}
{"nick":"piscisaureus","message":"more like 2.5%","date":"2011-08-23T01:59:59.815Z","type":"message"}
{"nick":"piscisaureus","message":"with an exceptional outlier","date":"2011-08-23T02:00:13.450Z","type":"message"}
{"nick":"bnoordhuis","message":"the difference gets smaller when senders x receivers gets larger","date":"2011-08-23T02:00:47.411Z","type":"message"}
{"nick":"bnoordhuis","message":"still, death by a thousand cuts, right?","date":"2011-08-23T02:00:57.130Z","type":"message"}
{"nick":"bnoordhuis","message":"don't want that","date":"2011-08-23T02:01:04.739Z","type":"message"}
{"nick":"ryah","message":"it's so hard to test network software and get all the corner cases.","date":"2011-08-23T02:04:20.315Z","type":"message"}
{"nick":"bnoordhuis","message":"and create a benchmark that represents a realistic workload","date":"2011-08-23T02:05:36.429Z","type":"message"}
{"nick":"bnoordhuis","message":"https://gist.github.com/13e681faf7feca9ab402 <- the patches","date":"2011-08-23T02:05:45.779Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u0002c4454d2\u000f \u000310\u000f/ (Makefile lib/net_uv.js)\u0002:\u000f ","date":"2011-08-23T02:12:01.909Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f net_uv: Don't error on ECONNRESET","date":"2011-08-23T02:12:02.056Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f Fixes #1571. - http://git.io/0Kw-nw","date":"2011-08-23T02:12:02.056Z","type":"message"}
{"nick":"piscisaureus","message":"http://code.google.com/p/memslab/","date":"2011-08-23T02:17:13.359Z","type":"message"}
{"nick":"piscisaureus","message":"although what node needs is a really efficient realloc() (efficient when shrinking, that is)","date":"2011-08-23T02:17:48.135Z","type":"message"}
{"nick":"bnoordhuis","message":"void* realloc(void* p, size_t new_size) { return p; } // <- like that?","date":"2011-08-23T02:18:52.445Z","type":"message"}
{"nick":"piscisaureus","message":"sigh","date":"2011-08-23T02:19:14.053Z","type":"message"}
{"nick":"DrPizza","message":"piscisaureus: any benchmarks for that?","date":"2011-08-23T02:25:54.770Z","type":"message"}
{"nick":"piscisaureus","message":"like, when used in libuv? no","date":"2011-08-23T02:26:23.534Z","type":"message"}
{"nick":"piscisaureus","message":"but there's http://code.google.com/p/memslab/source/browse/trunk/testbench.c","date":"2011-08-23T02:26:32.835Z","type":"message"}
{"nick":"DrPizza","message":"no just in general","date":"2011-08-23T02:26:34.192Z","type":"message"}
{"nick":"DrPizza","message":"compared to other mallocs","date":"2011-08-23T02:26:37.482Z","type":"message"}
{"nick":"piscisaureus","message":"^-- benchmark comparing to normal malloc","date":"2011-08-23T02:26:57.854Z","type":"message"}
{"nick":"igorzi","message":"node http_simple + non-zero reads will be a good benchmark on windows","date":"2011-08-23T02:27:23.113Z","type":"message"}
{"nick":"DrPizza","message":"O_O","date":"2011-08-23T02:27:24.390Z","type":"message"}
{"nick":"DrPizza","message":"factor 10 difference?","date":"2011-08-23T02:27:28.657Z","type":"message"}
{"nick":"CIA-75","message":"\u0002libuv:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u0002bdd880e\u000f \u000310\u000f/ src/uv-unix.c \u0002:\u000f unix: add a few asserts, cosmetic touch ups - http://git.io/FGgR5g","date":"2011-08-23T02:29:35.468Z","type":"message"}
{"nick":"CIA-75","message":"\u0002libuv:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u0002ce9171d\u000f \u000310\u000f/ src/uv-unix.c \u0002:\u000f unix: uv_read_start should fail if UV_CLOSING set - http://git.io/n78S7g","date":"2011-08-23T02:29:35.801Z","type":"message"}
{"nick":"piscisaureus","message":"that memslab may not be what we want","date":"2011-08-23T02:31:31.977Z","type":"message"}
{"nick":"piscisaureus","message":"it's similar to using a freelist","date":"2011-08-23T02:31:37.165Z","type":"message"}
{"nick":"piscisaureus","message":"what we need is efficient realloc","date":"2011-08-23T02:31:41.635Z","type":"message"}
{"nick":"piscisaureus","message":"I will dream about this","date":"2011-08-23T02:31:48.450Z","type":"message"}
{"nick":"piscisaureus","message":"goodbye all","date":"2011-08-23T02:31:50.057Z","type":"message"}
{"nick":"piscisaureus","reason":"Ping timeout: 258 seconds","date":"2011-08-23T02:38:12.606Z","type":"quit"}
{"nick":"bnoordhuis","message":"yeah, i should be off to bed as well","date":"2011-08-23T02:40:10.325Z","type":"message"}
{"nick":"bnoordhuis","message":"not going to dream about malloc impls though","date":"2011-08-23T02:40:19.461Z","type":"message"}
{"nick":"bnoordhuis","message":"night, guys","date":"2011-08-23T02:40:39.939Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2011-08-23T02:46:05.666Z","type":"quit"}
{"nick":"brson_","reason":"Ping timeout: 264 seconds","date":"2011-08-23T02:47:35.335Z","type":"quit"}
{"nick":"rmustacc","date":"2011-08-23T02:53:46.835Z","type":"join"}
{"nick":"rmustacc","date":"2011-08-23T04:51:35.525Z","type":"part"}
{"nick":"isaacs","reason":"Quit: isaacs","date":"2011-08-23T06:24:59.201Z","type":"quit"}
{"nick":"ryah","message":"damn it. npm does some annoying things during startup","date":"2011-08-23T06:41:37.614Z","type":"message"}
{"nick":"ryah","message":"namely \"new require('net').Socket(2)\"","date":"2011-08-23T06:41:50.757Z","type":"message"}
{"nick":"ryah","message":"DrPizza: you awake?","date":"2011-08-23T06:46:40.651Z","type":"message"}
{"nick":"ryah","message":"igorzi: ?","date":"2011-08-23T06:46:45.976Z","type":"message"}
{"nick":"ryah","message":"er.. igorzi: are you?","date":"2011-08-23T06:46:57.483Z","type":"message"}
{"nick":"igorzi","message":"ryah: hey","date":"2011-08-23T07:04:00.756Z","type":"message"}
{"nick":"mraleph","date":"2011-08-23T07:06:06.048Z","type":"join"}
{"nick":"igorzi","message":"ryah: that breaks on unix too? (with --use-uv)?","date":"2011-08-23T07:07:11.323Z","type":"message"}
{"nick":"ryah","message":"yeah","date":"2011-08-23T07:10:27.194Z","type":"message"}
{"nick":"ryah","message":"sorry i was going to ask you something - but now im trying to figure out something else.","date":"2011-08-23T07:10:47.352Z","type":"message"}
{"nick":"ryah","message":"there are some really strange things happening with npm.","date":"2011-08-23T07:11:02.206Z","type":"message"}
{"nick":"ryah","message":"i might actually be hitting a V8 bug","date":"2011-08-23T07:11:52.981Z","type":"message"}
{"nick":"ryah","message":"mraleph: is it possible to ever hit a throw new Error(\"blah\") but have the debugger step through it?","date":"2011-08-23T07:12:29.336Z","type":"message"}
{"nick":"ryah","message":"mraleph: this *seems* to be happening to me in V8 3.5.6","date":"2011-08-23T07:13:02.952Z","type":"message"}
{"nick":"ryah","message":"mraleph: (my test is a large code base right now - might take some time to extract)","date":"2011-08-23T07:13:31.032Z","type":"message"}
{"nick":"mraleph","message":"ryah: you mean step through Error constructor?","date":"2011-08-23T07:21:01.547Z","type":"message"}
{"nick":"ryah","message":"mraleph: step through the throw - but i think now that my debugger is throwing it into a special case","date":"2011-08-23T07:22:50.537Z","type":"message"}
{"nick":"mraleph","message":"hmm. I am not sure stepping through throw is supported.","date":"2011-08-23T07:25:53.442Z","type":"message"}
{"nick":"mraleph","message":"ryah: hmm. it seems it is actually supported. If I step over throw in DevTools i get into catch clause even if it is in the other function.","date":"2011-08-23T07:29:11.039Z","type":"message"}
{"nick":"mraleph","message":"finally is also supported","date":"2011-08-23T07:30:20.340Z","type":"message"}
{"nick":"mraleph","message":"ryah: oh I think I was misunerstanding you. did you mean that when in debugger throw-statement just does not throw?","date":"2011-08-23T07:32:30.610Z","type":"message"}
{"nick":"ryah","message":"mraleph: yeah","date":"2011-08-23T07:38:55.084Z","type":"message"}
{"nick":"ryah","message":"mraleph: but the more i look at it the more i think there's something else going on","date":"2011-08-23T07:39:25.178Z","type":"message"}
{"nick":"ryah","message":"something deep inside npm - and npm seems to like doing tricky things","date":"2011-08-23T07:39:42.702Z","type":"message"}
{"nick":"ryah","message":"mraleph: how fast is context spawning?","date":"2011-08-23T07:43:16.399Z","type":"message"}
{"nick":"ryah","message":"mraleph: s/spawning/creation/","date":"2011-08-23T07:43:27.215Z","type":"message"}
{"nick":"mraleph","message":"context as in Context?","date":"2011-08-23T07:43:29.420Z","type":"message"}
{"nick":"ryah","message":"yes","date":"2011-08-23T07:43:33.258Z","type":"message"}
{"nick":"ryah","message":"v8::Context","date":"2011-08-23T07:43:38.812Z","type":"message"}
{"nick":"mraleph","message":"1.5 ms ","date":"2011-08-23T07:43:39.226Z","type":"message"}
{"nick":"mraleph","message":"with snapshots on good hardware","date":"2011-08-23T07:43:54.219Z","type":"message"}
{"nick":"ryah","message":"is that ever going to be faster?","date":"2011-08-23T07:43:59.650Z","type":"message"}
{"nick":"mraleph","message":"I doubt. Contexts can be made to share things that have no state — but it requires a lot of work","date":"2011-08-23T07:44:50.208Z","type":"message"}
{"nick":"mraleph","message":"1.5 ms per iframe/tab is more than enough in the browser I think","date":"2011-08-23T07:45:13.728Z","type":"message"}
{"nick":"ryah","message":"i want to start a context for each connection","date":"2011-08-23T07:47:22.181Z","type":"message"}
{"nick":"ryah","message":"erlang style","date":"2011-08-23T07:47:46.880Z","type":"message"}
{"nick":"mraleph","message":"oh","date":"2011-08-23T07:48:01.242Z","type":"message"}
{"nick":"ryah","message":"i would need to do some work associating ev watchers and buffers to their owning contexts","date":"2011-08-23T07:48:29.940Z","type":"message"}
{"nick":"mraleph","message":"erlang can do it because their \"contexts\" (= threads) are lightweight. v8 Context is the whole mutable JS world glued together — hardly lightweight. ","date":"2011-08-23T07:49:59.243Z","type":"message"}
{"nick":"ryah","message":":(","date":"2011-08-23T07:50:23.493Z","type":"message"}
{"nick":"ryah","message":"i wonder if i could do some tricks","date":"2011-08-23T07:51:40.567Z","type":"message"}
{"nick":"ryah","message":"with a zygote","date":"2011-08-23T07:51:44.694Z","type":"message"}
{"nick":"mraleph","message":"why do you want a separate context?","date":"2011-08-23T07:52:50.892Z","type":"message"}
{"nick":"ryah","message":"so i can 'kill' them","date":"2011-08-23T07:53:12.396Z","type":"message"}
{"nick":"ryah","message":"https://github.com/isaacs/npm/blob/c7824f412f0cb59d6f55cf0bc220253c39e6029f/lib/utils/output.js#L109-111","date":"2011-08-23T08:01:52.253Z","type":"message"}
{"nick":"ryah","message":"^-- this just cost me an hour of debugging","date":"2011-08-23T08:02:02.109Z","type":"message"}
{"nick":"mraleph","message":"omg","date":"2011-08-23T08:02:20.235Z","type":"message"}
{"nick":"mraleph","message":"this is nasty formatting style","date":"2011-08-23T08:02:34.616Z","type":"message"}
{"nick":"mraleph","message":"regarding Contexts: how are u going to deal with the state handlers create and leave in other contexts? e.g. modules they are loaded by require in the main context so all internal state will state in that context - even if you discard some context you will still have that state around.","date":"2011-08-23T08:05:00.581Z","type":"message"}
{"nick":"mraleph","message":"*state will stay","date":"2011-08-23T08:05:16.656Z","type":"message"}
{"nick":"ryah","message":"mraleph: i'm okay with them sharing those","date":"2011-08-23T08:06:19.880Z","type":"message"}
{"nick":"ryah","message":"mraleph: i am of course scheduling these contexts in my single thread - that shouldn't be a problem","date":"2011-08-23T08:07:01.514Z","type":"message"}
{"nick":"mraleph","reason":"Quit: Leaving.","date":"2011-08-23T08:11:34.501Z","type":"quit"}
{"nick":"piscisaureus","date":"2011-08-23T08:55:31.022Z","type":"join"}
{"nick":"ryah","message":"piscisaureus: we need a way to open net.Stream with fd","date":"2011-08-23T09:32:15.861Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u0002e3413f0\u000f \u000310\u000f/ lib/net_uv.js \u0002:\u000f ","date":"2011-08-23T09:33:11.784Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f net_uv: throw when people construct net.Socket(fd)","date":"2011-08-23T09:33:11.930Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f Easier to catch compatibility errors. - http://git.io/BoAnRw","date":"2011-08-23T09:33:11.930Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: why?","date":"2011-08-23T09:33:49.076Z","type":"message"}
{"nick":"piscisaureus","message":"what's the use case?","date":"2011-08-23T09:33:53.224Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: in principle I am not agains this.","date":"2011-08-23T09:34:26.750Z","type":"message"}
{"nick":"piscisaureus","message":"if we can find the right cross-platform abstraction, that is","date":"2011-08-23T09:34:41.886Z","type":"message"}
{"nick":"ryah","message":"piscisaureus: https://github.com/isaacs/npm/blob/c7824f412f0cb59d6f55cf0bc220253c39e6029f/lib/utils/output.js#L110","date":"2011-08-23T09:43:02.647Z","type":"message"}
{"nick":"piscisaureus","message":"hmm","date":"2011-08-23T09:43:55.335Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: what does it getStream for?","date":"2011-08-23T09:44:01.445Z","type":"message"}
{"nick":"ryah","message":"stderr","date":"2011-08-23T09:44:21.468Z","type":"message"}
{"nick":"piscisaureus","message":"hmm","date":"2011-08-23T09:44:31.691Z","type":"message"}
{"nick":"piscisaureus","message":"net.Stream(2) won't work in windows","date":"2011-08-23T09:44:52.510Z","type":"message"}
{"nick":"piscisaureus","message":"because you can't use the net stuff on a console handle","date":"2011-08-23T09:45:05.820Z","type":"message"}
{"nick":"ryah","message":"can we guess the type of the fd?","date":"2011-08-23T09:45:38.693Z","type":"message"}
{"nick":"ryah","message":"isatty?","date":"2011-08-23T09:45:43.092Z","type":"message"}
{"nick":"piscisaureus","message":"libuv can","date":"2011-08-23T09:45:50.548Z","type":"message"}
{"nick":"ryah","message":"okay - so that'd be okay","date":"2011-08-23T09:46:05.939Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: it would have to be more generic","date":"2011-08-23T09:46:16.931Z","type":"message"}
{"nick":"ryah","message":"piscisaureus: void uv_stream_init(uv_stream_t*, int fd); ?","date":"2011-08-23T09:46:22.547Z","type":"message"}
{"nick":"ryah","message":"make uv_stream_t non-abstract","date":"2011-08-23T09:46:47.916Z","type":"message"}
{"nick":"piscisaureus","message":"maybe we should have uv_any_stream_t that is a union of all possible stream types","date":"2011-08-23T09:47:12.424Z","type":"message"}
{"nick":"ryah","message":"hm","date":"2011-08-23T09:47:28.468Z","type":"message"}
{"nick":"ryah","message":"i see your problem...","date":"2011-08-23T09:47:38.607Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: but fd==2 is possibly the only valid use case for this","date":"2011-08-23T09:48:04.164Z","type":"message"}
{"nick":"ryah","message":"let's rename the current uv_stream_t to uv_abstract_stream_t","date":"2011-08-23T09:48:35.744Z","type":"message"}
{"nick":"ryah","message":"and make uv_stream_t the union of all streams","date":"2011-08-23T09:48:55.631Z","type":"message"}
{"nick":"piscisaureus","message":"uv_stream_base_t","date":"2011-08-23T09:48:59.237Z","type":"message"}
{"nick":"piscisaureus","message":"maybe","date":"2011-08-23T09:49:01.591Z","type":"message"}
{"nick":"ryah","message":"that will make it better for users","date":"2011-08-23T09:49:09.899Z","type":"message"}
{"nick":"piscisaureus","message":"yes","date":"2011-08-23T09:49:13.747Z","type":"message"}
{"nick":"ryah","message":"in fact uv_abstract_stream_t isn't so necessary","date":"2011-08-23T09:49:40.998Z","type":"message"}
{"nick":"piscisaureus","message":"it's just an internal gimmick","date":"2011-08-23T09:50:04.041Z","type":"message"}
{"nick":"ryah","message":"since we have those macros","date":"2011-08-23T09:50:04.512Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: it could be a bit risky though","date":"2011-08-23T09:51:00.680Z","type":"message"}
{"nick":"ryah","message":"how so?","date":"2011-08-23T09:51:09.153Z","type":"message"}
{"nick":"ryah","message":"encourage fd use?","date":"2011-08-23T09:51:15.190Z","type":"message"}
{"nick":"piscisaureus","message":"oh hmm nvm","date":"2011-08-23T09:51:48.804Z","type":"message"}
{"nick":"piscisaureus","message":"i was afraid that people could do","date":"2011-08-23T09:52:38.480Z","type":"message"}
{"nick":"piscisaureus","message":"void close_cb(uv_stream_t* s) {","date":"2011-08-23T09:52:38.642Z","type":"message"}
{"nick":"piscisaureus","message":" // Yay! our socket is close. Now let's make it a pipe","date":"2011-08-23T09:52:38.642Z","type":"message"}
{"nick":"piscisaureus","message":" uv_pipe_init(s);","date":"2011-08-23T09:52:38.642Z","type":"message"}
{"nick":"piscisaureus","message":"}","date":"2011-08-23T09:52:38.642Z","type":"message"}
{"nick":"piscisaureus","message":"but close_cb takes a handle","date":"2011-08-23T09:52:44.533Z","type":"message"}
{"nick":"ryah","message":"piscisaureus: off topic - i want to land multiplicity soon after the next release","date":"2011-08-23T09:55:14.667Z","type":"message"}
{"nick":"piscisaureus","message":"yes, me too","date":"2011-08-23T09:55:27.205Z","type":"message"}
{"nick":"piscisaureus","message":"let's make it a priority","date":"2011-08-23T09:55:41.180Z","type":"message"}
{"nick":"ryah","message":"void uv_stream_init(uv_stream_t*, int fd, int readable, int writable);","date":"2011-08-23T10:10:35.920Z","type":"message"}
{"nick":"ryah","message":"^-- determines if its readable or writable","date":"2011-08-23T10:10:46.894Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: you think libuv can't/shouldn't figure that out?","date":"2011-08-23T10:11:14.280Z","type":"message"}
{"nick":"ryah","message":"not sure","date":"2011-08-23T10:11:38.472Z","type":"message"}
{"nick":"ryah","message":"i have this function uv__stream_open() which is pretty much what we want","date":"2011-08-23T10:11:53.994Z","type":"message"}
{"nick":"ryah","message":"except i need to specify readable and writable for some reason","date":"2011-08-23T10:12:19.919Z","type":"message"}
{"nick":"piscisaureus","message":"hmm yeah","date":"2011-08-23T10:13:10.874Z","type":"message"}
{"nick":"piscisaureus","message":"right uv-win doesn't support read-only / write-only at all","date":"2011-08-23T10:13:27.057Z","type":"message"}
{"nick":"piscisaureus","message":"we'll need it for half-duplex pipes though","date":"2011-08-23T10:13:38.229Z","type":"message"}
{"nick":"ryah","message":"supposedly uv_write on a process.stdout should fail","date":"2011-08-23T10:14:10.793Z","type":"message"}
{"nick":"piscisaureus","message":"h,,","date":"2011-08-23T10:14:22.162Z","type":"message"}
{"nick":"piscisaureus","message":"why?","date":"2011-08-23T10:14:25.047Z","type":"message"}
{"nick":"ryah","message":"er - process->stdout uv_process_t","date":"2011-08-23T10:14:28.928Z","type":"message"}
{"nick":"ryah","message":"process->stdout_stream with uv_write","date":"2011-08-23T10:14:36.764Z","type":"message"}
{"nick":"piscisaureus","message":"oh ok","date":"2011-08-23T10:14:46.058Z","type":"message"}
{"nick":"piscisaureus","message":"yeah","date":"2011-08-23T10:14:47.893Z","type":"message"}
{"nick":"ryah","message":"because its only one directly","date":"2011-08-23T10:14:48.221Z","type":"message"}
{"nick":"ryah","message":"direction","date":"2011-08-23T10:14:50.193Z","type":"message"}
{"nick":"ryah","message":"i say we add the readable/writable initially","date":"2011-08-23T10:15:26.628Z","type":"message"}
{"nick":"ryah","message":"and maybe we can remove it later?","date":"2011-08-23T10:15:30.627Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: I might just ingore it though","date":"2011-08-23T10:15:47.210Z","type":"message"}
{"nick":"ryah","message":"piscisaureus: okay nevermind then","date":"2011-08-23T10:16:13.935Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: but seriously  - what are the other uses cases besides uv_stream_init(s, 2)?","date":"2011-08-23T10:16:14.788Z","type":"message"}
{"nick":"ryah","message":"simple first - i'll leave it out","date":"2011-08-23T10:16:28.139Z","type":"message"}
{"nick":"ryah","message":"then we'll add it if needed :)","date":"2011-08-23T10:16:33.491Z","type":"message"}
{"nick":"piscisaureus","message":":-)","date":"2011-08-23T10:16:38.263Z","type":"message"}
{"nick":"piscisaureus","message":"I wonder if on windows it should take an fd or a HANDLE","date":"2011-08-23T10:17:10.382Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: I can only think of using it for stdio. But we're going to have a separate api for that.","date":"2011-08-23T10:18:13.997Z","type":"message"}
{"nick":"ryah","message":"im going to sleep. night","date":"2011-08-23T10:20:54.192Z","type":"message"}
{"nick":"piscisaureus","message":"ok. sleep tight","date":"2011-08-23T10:21:01.941Z","type":"message"}
{"nick":"bnoordhuis","date":"2011-08-23T10:25:26.088Z","type":"join"}
{"nick":"piscisaureus","message":"https://github.com/joyent/node/commit/fcf9cfa1374bbbc0e77dd77908b55d45d7735450#comments <--let's troll some more","date":"2011-08-23T12:56:35.775Z","type":"message"}
{"nick":"DrPizza","message":"piscisaureus: should it even be \"uv_stream_init(..)\"? I would think it would be better (less deceptive) to have some kind of uv_get_std_stream(STDOUT)","date":"2011-08-23T13:09:32.774Z","type":"message"}
{"nick":"DrPizza","message":"i.e. don't even pretend that you can wrap arbitrary fds (which have no meaning on Windows anyway)","date":"2011-08-23T13:09:46.452Z","type":"message"}
{"nick":"piscisaureus","message":"I think I agree","date":"2011-08-23T13:10:20.245Z","type":"message"}
{"nick":"piscisaureus","message":"I was trying to tell ryah this","date":"2011-08-23T13:10:30.445Z","type":"message"}
{"nick":"piscisaureus","message":"or, at least figure out what the use cases for stream_init would be other than opening stderr","date":"2011-08-23T13:11:17.487Z","type":"message"}
{"nick":"DrPizza","message":"stdout and stdin, I guess","date":"2011-08-23T13:12:13.047Z","type":"message"}
{"nick":"DrPizza","message":"but beyond that","date":"2011-08-23T13:21:27.141Z","type":"message"}
{"nick":"DrPizza","message":"piscisaureus: how is the stdio stuff coming along?","date":"2011-08-23T13:26:50.971Z","type":"message"}
{"nick":"piscisaureus","message":"not doing it","date":"2011-08-23T13:27:08.293Z","type":"message"}
{"nick":"DrPizza","message":"oh how come?","date":"2011-08-23T13:27:17.007Z","type":"message"}
{"nick":"piscisaureus","message":"got a little complicated","date":"2011-08-23T13:27:25.368Z","type":"message"}
{"nick":"DrPizza","message":"heh","date":"2011-08-23T13:27:28.636Z","type":"message"}
{"nick":"piscisaureus","message":"so I'm doing udp first","date":"2011-08-23T13:27:29.132Z","type":"message"}
{"nick":"DrPizza","message":"ah","date":"2011-08-23T13:27:32.762Z","type":"message"}
{"nick":"piscisaureus","message":"and ryah is taking a stab at stdio on linux when he has time","date":"2011-08-23T13:27:42.454Z","type":"message"}
{"nick":"DrPizza","message":"where was your gist with the plan of things to do on stdio","date":"2011-08-23T13:28:04.385Z","type":"message"}
{"nick":"piscisaureus","message":"https://gist.github.com/1149564","date":"2011-08-23T13:29:00.538Z","type":"message"}
{"nick":"DrPizza","message":"man I wish we could ignore 2003","date":"2011-08-23T13:29:52.339Z","type":"message"}
{"nick":"DrPizza","message":"then you could get rid of ","date":"2011-08-23T13:30:06.876Z","type":"message"}
{"nick":"DrPizza","message":"     + (blocking) named pipe -> ReadFile / WriteFile in a thread.","date":"2011-08-23T13:30:07.820Z","type":"message"}
{"nick":"DrPizza","message":"     + (blocking) file handle -> ReadFile / WriteFile in a thread.","date":"2011-08-23T13:30:08.025Z","type":"message"}
{"nick":"DrPizza","message":"since we could just reopen in overlapped mode","date":"2011-08-23T13:30:21.947Z","type":"message"}
{"nick":"piscisaureus","message":"I am not sure that that would work well anyway","date":"2011-08-23T13:31:07.625Z","type":"message"}
{"nick":"DrPizza","message":"no?","date":"2011-08-23T13:31:18.608Z","type":"message"}
{"nick":"DrPizza","message":"I would defer the file handle stuff until we have a file API anyway","date":"2011-08-23T13:32:56.860Z","type":"message"}
{"nick":"DrPizza","message":"since file handles are different anyway","date":"2011-08-23T13:33:03.631Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: fair enough","date":"2011-08-23T13:50:25.465Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: but since \"blocking pipes\" are common to have as stdin we need to have thread-pool WriteFile / ReadFile anyway","date":"2011-08-23T13:50:50.878Z","type":"message"}
{"nick":"DrPizza","message":"unless we can find some way of reopening the pipes that works on 2003","date":"2011-08-23T13:55:34.092Z","type":"message"}
{"nick":"DrPizza","message":"oh shit","date":"2011-08-23T14:00:59.564Z","type":"message"}
{"nick":"DrPizza","message":"lol!","date":"2011-08-23T14:01:01.352Z","type":"message"}
{"nick":"DrPizza","message":"it works in 2003 anyway","date":"2011-08-23T14:01:04.726Z","type":"message"}
{"nick":"DrPizza","message":"I saw that it needed Vista on the client","date":"2011-08-23T14:01:14.540Z","type":"message"}
{"nick":"piscisaureus","message":"and xp?","date":"2011-08-23T14:01:19.486Z","type":"message"}
{"nick":"DrPizza","message":"so I just assumed it was 2008 on the server","date":"2011-08-23T14:01:19.668Z","type":"message"}
{"nick":"DrPizza","message":"but the docs say 2003 server also works","date":"2011-08-23T14:01:24.705Z","type":"message"}
{"nick":"DrPizza","message":"no, no XP","date":"2011-08-23T14:01:32.061Z","type":"message"}
{"nick":"DrPizza","message":"but I thought 2003 was the minimum we cared about?","date":"2011-08-23T14:01:37.529Z","type":"message"}
{"nick":"piscisaureus","message":"yeah well","date":"2011-08-23T14:01:46.148Z","type":"message"}
{"nick":"piscisaureus","message":"I care about xp a bit","date":"2011-08-23T14:01:52.388Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: but does it actually work on a pipe?","date":"2011-08-23T14:02:02.317Z","type":"message"}
{"nick":"DrPizza","message":"well that's the next question","date":"2011-08-23T14:02:08.461Z","type":"message"}
{"nick":"DrPizza","message":"it may not","date":"2011-08-23T14:02:10.171Z","type":"message"}
{"nick":"DrPizza","message":"but it's supposed to","date":"2011-08-23T14:02:20.822Z","type":"message"}
{"nick":"DrPizza","message":"it even has specific notes about pipes","date":"2011-08-23T14:02:28.792Z","type":"message"}
{"nick":"DrPizza","message":"and impersonation and other pipe stuff","date":"2011-08-23T14:02:33.292Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: this may provide a good solution for pipes","date":"2011-08-23T14:08:58.479Z","type":"message"}
{"nick":"DrPizza","message":"yes","date":"2011-08-23T14:09:04.497Z","type":"message"}
{"nick":"DrPizza","message":"real consoles still need thread pools","date":"2011-08-23T14:09:09.830Z","type":"message"}
{"nick":"DrPizza","message":"since they can't do overlapped I/O anyway (ugh)","date":"2011-08-23T14:09:15.469Z","type":"message"}
{"nick":"piscisaureus","message":"And so do files","date":"2011-08-23T14:09:32.566Z","type":"message"}
{"nick":"DrPizza","message":"but I think pipes and files will be able to leverage the general pipe and file features","date":"2011-08-23T14:09:37.201Z","type":"message"}
{"nick":"DrPizza","message":"files can overlap","date":"2011-08-23T14:09:41.932Z","type":"message"}
{"nick":"piscisaureus","message":"files don't work well overlapped","date":"2011-08-23T14:09:53.430Z","type":"message"}
{"nick":"DrPizza","message":"they work","date":"2011-08-23T14:10:03.220Z","type":"message"}
{"nick":"piscisaureus","message":"we're going to have a tp implementation fist","date":"2011-08-23T14:10:07.108Z","type":"message"}
{"nick":"DrPizza","message":"why?","date":"2011-08-23T14:10:20.303Z","type":"message"}
{"nick":"DrPizza","message":"I know there is still apparenlty the compressed file thing","date":"2011-08-23T14:10:27.403Z","type":"message"}
{"nick":"piscisaureus","message":"if possible we're going to make a conservative guess about whether overlapped operations will work","date":"2011-08-23T14:11:12.503Z","type":"message"}
{"nick":"piscisaureus","message":"and use it when we're sure it's safe","date":"2011-08-23T14:11:23.808Z","type":"message"}
{"nick":"piscisaureus","message":"I think","date":"2011-08-23T14:11:51.361Z","type":"message"}
{"nick":"igorzi","reason":"Ping timeout: 252 seconds","date":"2011-08-23T14:11:58.602Z","type":"quit"}
{"nick":"piscisaureus","message":"DrPizza: but so","date":"2011-08-23T14:12:04.167Z","type":"message"}
{"nick":"DrPizza","message":"that seems kind of odd to me","date":"2011-08-23T14:12:14.113Z","type":"message"}
{"nick":"piscisaureus","message":"why?","date":"2011-08-23T14:12:21.070Z","type":"message"}
{"nick":"DrPizza","message":"well, we can always force the file into overlapped mode","date":"2011-08-23T14:12:35.174Z","type":"message"}
{"nick":"piscisaureus","message":"yes","date":"2011-08-23T14:12:45.530Z","type":"message"}
{"nick":"piscisaureus","message":"but there is no guarantee that ReadFile(handle, ..., &overlapped) will not block","date":"2011-08-23T14:13:05.431Z","type":"message"}
{"nick":"piscisaureus","message":"if there is the risk that is blocks we should use the thread pool","date":"2011-08-23T14:13:16.529Z","type":"message"}
{"nick":"DrPizza","message":"is the KB article still accurate for modern windows?","date":"2011-08-23T14:13:38.271Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: not entirely","date":"2011-08-23T14:13:44.978Z","type":"message"}
{"nick":"DrPizza","message":"do compressed files still perform only blocking I/O?","date":"2011-08-23T14:13:54.288Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: but I did some tests and found that ReadFile on win7 would sometimes block even when none of the criteria in that kb article was met","date":"2011-08-23T14:14:31.115Z","type":"message"}
{"nick":"DrPizza","message":"hmmm","date":"2011-08-23T14:14:43.656Z","type":"message"}
{"nick":"piscisaureus","message":"The only way to make it work reliably is by setting FILE_FLAG_NO_BUFFERING","date":"2011-08-23T14:15:01.315Z","type":"message"}
{"nick":"DrPizza","message":"well we don't want that","date":"2011-08-23T14:15:24.483Z","type":"message"}
{"nick":"piscisaureus","message":"indeed","date":"2011-08-23T14:15:31.070Z","type":"message"}
{"nick":"DrPizza","message":"I'm sure there was some APIthat would tell you what type a HANDLE actually was, but I'm damned if I can find it now","date":"2011-08-23T14:17:12.142Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: you can figure it out","date":"2011-08-23T14:17:25.271Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: what exactly do you need to know","date":"2011-08-23T14:17:32.929Z","type":"message"}
{"nick":"piscisaureus","message":"?","date":"2011-08-23T14:17:39.935Z","type":"message"}
{"nick":"DrPizza","message":"file versus named pipe versus console","date":"2011-08-23T14:17:55.828Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: call GetConsoleMode with the handle, if it fails it's not a console","date":"2011-08-23T14:19:02.006Z","type":"message"}
{"nick":"DrPizza","message":"hmm","date":"2011-08-23T14:19:09.940Z","type":"message"}
{"nick":"piscisaureus","message":"then call GetPipeInformationm, if it fails it's not a pipe :-)","date":"2011-08-23T14:19:23.543Z","type":"message"}
{"nick":"DrPizza","message":"and then pipe versus file?","date":"2011-08-23T14:19:24.107Z","type":"message"}
{"nick":"DrPizza","message":"haha","date":"2011-08-23T14:19:27.016Z","type":"message"}
{"nick":"DrPizza","message":"how awful!","date":"2011-08-23T14:19:30.957Z","type":"message"}
{"nick":"piscisaureus","message":"maybe there's another way","date":"2011-08-23T14:20:57.898Z","type":"message"}
{"nick":"piscisaureus","action":"checking _isatty source","date":"2011-08-23T14:21:05.486Z","type":"action"}
{"nick":"DrPizza","message":"yes I'm just looking through some old code of mine","date":"2011-08-23T14:21:08.899Z","type":"message"}
{"nick":"piscisaureus","message":"GetFileType?","date":"2011-08-23T14:21:43.502Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: ^-- that does it","date":"2011-08-23T14:22:03.887Z","type":"message"}
{"nick":"DrPizza","message":"doh yes of course","date":"2011-08-23T14:22:07.417Z","type":"message"}
{"nick":"DrPizza","message":"I was looking for gethandletype","date":"2011-08-23T14:22:10.787Z","type":"message"}
{"nick":"DrPizza","message":"NtQueryObject also, I think","date":"2011-08-23T14:25:14.231Z","type":"message"}
{"nick":"piscisaureus","message":"hmm","date":"2011-08-23T14:25:21.197Z","type":"message"}
{"nick":"DrPizza","message":"with ObjectTypeInformation","date":"2011-08-23T14:25:47.586Z","type":"message"}
{"nick":"DrPizza","message":"I wonder if that's any more accurate","date":"2011-08-23T14:25:56.066Z","type":"message"}
{"nick":"DrPizza","message":"since GetFileType doesn't distinguish between pipes and sockets","date":"2011-08-23T14:26:03.827Z","type":"message"}
{"nick":"DrPizza","message":"maybe that doesn't matter","date":"2011-08-23T14:26:08.444Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: i think GetFileType returns UNKNOWN for sockets","date":"2011-08-23T14:26:26.451Z","type":"message"}
{"nick":"piscisaureus","message":"hmm","date":"2011-08-23T14:26:44.081Z","type":"message"}
{"nick":"piscisaureus","message":"allright the documentation says otherwise","date":"2011-08-23T14:26:51.280Z","type":"message"}
{"nick":"DrPizza","message":"FILE_TYPE_PIPE","date":"2011-08-23T14:26:55.451Z","type":"message"}
{"nick":"DrPizza","message":"0x0003","date":"2011-08-23T14:26:55.626Z","type":"message"}
{"nick":"DrPizza","message":"\t","date":"2011-08-23T14:26:55.774Z","type":"message"}
{"nick":"DrPizza","message":"The specified file is a socket, a named pipe, or an anonymous pipe.","date":"2011-08-23T14:26:55.774Z","type":"message"}
{"nick":"DrPizza","message":"yes","date":"2011-08-23T14:26:57.795Z","type":"message"}
{"nick":"DrPizza","message":"ugghghhghghg","date":"2011-08-23T14:29:11.182Z","type":"message"}
{"nick":"DrPizza","message":"we'll have to call getfiletype from a thread","date":"2011-08-23T14:29:18.949Z","type":"message"}
{"nick":"DrPizza","message":"\"This is a well-known bug in NPFS. If the pipe has a pending read request which is not satisfied yet - GetFileType hangs waiting for read to be satisfied. \"","date":"2011-08-23T14:29:29.798Z","type":"message"}
{"nick":"DrPizza","message":"so you need to call it in a thread","date":"2011-08-23T14:29:33.821Z","type":"message"}
{"nick":"DrPizza","message":"and then terminate the thread after a few seconds","date":"2011-08-23T14:29:40.758Z","type":"message"}
{"nick":"piscisaureus","message":"I bet there are ways around that","date":"2011-08-23T14:29:52.894Z","type":"message"}
{"nick":"piscisaureus","message":"maybe just call GetPipeInformation then?","date":"2011-08-23T14:30:01.760Z","type":"message"}
{"nick":"DrPizza","message":"apparently NtQueryObject has the same issue","date":"2011-08-23T14:30:03.930Z","type":"message"}
{"nick":"DrPizza","message":"yes maybe GetPipeInformation followed by GetFileType","date":"2011-08-23T14:30:19.842Z","type":"message"}
{"nick":"DrPizza","message":"but who knows, that might hang to!","date":"2011-08-23T14:30:26.840Z","type":"message"}
{"nick":"DrPizza","message":"too*","date":"2011-08-23T14:30:28.636Z","type":"message"}
{"nick":"piscisaureus","message":"I bet PeekNamedPipe won't block :-)","date":"2011-08-23T14:30:42.375Z","type":"message"}
{"nick":"piscisaureus","message":"DrPizza: the risky bit is that we'll probably have to call NtQueryInformationFile too to figure out whether the pipe is open in overlapped mode or not","date":"2011-08-23T14:32:07.974Z","type":"message"}
{"nick":"DrPizza","message":"yes","date":"2011-08-23T14:32:18.481Z","type":"message"}
{"nick":"DrPizza","message":"http://support.microsoft.com/kb/2009703","date":"2011-08-23T14:32:34.874Z","type":"message"}
{"nick":"DrPizza","message":"\"There were in-depth design changes for the GetFileType implemenation in Vista, so this kind of hang will not be seen in newer Operating Systems.\"","date":"2011-08-23T14:32:47.460Z","type":"message"}
{"nick":"DrPizza","message":"so maybe getfiletype is now safe","date":"2011-08-23T14:39:23.370Z","type":"message"}
{"nick":"DrPizza","message":"who can say","date":"2011-08-23T14:39:25.205Z","type":"message"}
{"nick":"piscisaureus","message":"in other works","date":"2011-08-23T14:40:04.531Z","type":"message"}
{"nick":"piscisaureus","message":"*words","date":"2011-08-23T14:40:07.182Z","type":"message"}
{"nick":"piscisaureus","message":"GetFileType is not safe on xp and 3k","date":"2011-08-23T14:40:14.435Z","type":"message"}
{"nick":"piscisaureus","message":"eh 2k3","date":"2011-08-23T14:40:20.475Z","type":"message"}
{"nick":"piscisaureus","message":"that can be worked around","date":"2011-08-23T14:40:36.383Z","type":"message"}
{"nick":"DrPizza","message":"so if you do a pipe call followed by getfiletype","date":"2011-08-23T14:40:47.612Z","type":"message"}
{"nick":"DrPizza","message":"it should be safe anyway","date":"2011-08-23T14:40:53.104Z","type":"message"}
{"nick":"DrPizza","message":"a non-blocking pipe call, I guess","date":"2011-08-23T14:41:01.576Z","type":"message"}
{"nick":"DrPizza","message":"hmm","date":"2011-08-23T14:41:02.828Z","type":"message"}
{"nick":"isaacs","date":"2011-08-23T15:04:14.140Z","type":"join"}
{"nick":"piscisaureus","message":"igorzi: hey","date":"2011-08-23T16:06:22.331Z","type":"message"}
{"nick":"piscisaureus","message":"oh hmm msft is not open yet?","date":"2011-08-23T16:07:20.858Z","type":"message"}
{"nick":"DrPizza","message":"lol","date":"2011-08-23T16:23:58.108Z","type":"message"}
{"nick":"DrPizza_","date":"2011-08-23T16:52:15.901Z","type":"join"}
{"nick":"ryah","message":"DrPizza_, piscisaureus: uv_stream_init() would be used on file fds too","date":"2011-08-23T16:53:32.901Z","type":"message"}
{"nick":"ryah","message":"presumably","date":"2011-08-23T16:53:39.595Z","type":"message"}
{"nick":"ryah","message":"we should ask isaac though","date":"2011-08-23T16:53:45.799Z","type":"message"}
{"nick":"isaacs","message":"hello","date":"2011-08-23T16:54:00.530Z","type":"message"}
{"nick":"isaacs","action":"is summoned","date":"2011-08-23T16:54:04.195Z","type":"action"}
{"nick":"piscisaureus","message":"ryah: when?","date":"2011-08-23T16:54:23.824Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: in windows open files mostly won't have an fd","date":"2011-08-23T16:54:38.038Z","type":"message"}
{"nick":"ryah","message":"isaacs: what's the purpose of npm.config.get(\"outfd\") ?","date":"2011-08-23T16:55:23.365Z","type":"message"}
{"nick":"isaacs","message":"ryah: mostly so that it can be set programmatically to write somewhere else.","date":"2011-08-23T16:55:46.015Z","type":"message"}
{"nick":"isaacs","message":"ryah: i'm ok with pulling that out, though, or just saying that you have to set it to a writable stream if you want to do it programmatically, and you set it up yourself.","date":"2011-08-23T16:56:06.594Z","type":"message"}
{"nick":"isaacs","message":"i mean, you can already pipe stuff on the cli pretty easily","date":"2011-08-23T16:56:29.262Z","type":"message"}
{"nick":"DrPizza","reason":"Ping timeout: 240 seconds","date":"2011-08-23T16:56:38.703Z","type":"quit"}
{"nick":"ryah","message":"we don't want you to change stuff - we have to support existing API.","date":"2011-08-23T16:57:23.880Z","type":"message"}
{"nick":"isaacs","message":"ryah: haha, too late.","date":"2011-08-23T16:57:32.749Z","type":"message"}
{"nick":"ryah","message":"piscisaureus: im refing to https://github.com/isaacs/npm/blob/c7824f412f0cb59d6f55cf0bc220253c39e6029f/lib/utils/output.js#L34","date":"2011-08-23T16:57:35.238Z","type":"message"}
{"nick":"isaacs","message":"ryah: i don't like any sort of completely silent failure in npm.","date":"2011-08-23T16:57:48.276Z","type":"message"}
{"nick":"isaacs","message":"silent success is ok","date":"2011-08-23T16:57:55.416Z","type":"message"}
{"nick":"ryah","message":"isaacs: i just mean that you changing it doesn't solve any problems - we still have to support the old npm","date":"2011-08-23T16:57:58.248Z","type":"message"}
{"nick":"ryah","message":":)","date":"2011-08-23T16:58:01.714Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2011-08-23T16:58:02.587Z","type":"message"}
{"nick":"isaacs","message":"it's safe to say that --outfd will be a net stream, even if it's the shell faking one that gets piped to a file","date":"2011-08-23T16:58:34.327Z","type":"message"}
{"nick":"isaacs","message":"--outfd 3 3>out.txt","date":"2011-08-23T16:58:46.146Z","type":"message"}
{"nick":"piscisaureus","message":"hmm","date":"2011-08-23T16:58:55.474Z","type":"message"}
{"nick":"ryah","message":":/","date":"2011-08-23T16:59:04.127Z","type":"message"}
{"nick":"piscisaureus","message":"that's not typically something that works on windows","date":"2011-08-23T16:59:04.192Z","type":"message"}
{"nick":"isaacs","message":"piscisaureus: that's why i'm ok removing it","date":"2011-08-23T16:59:12.437Z","type":"message"}
{"nick":"isaacs","message":"there's no reason why you can't just do 1>out.txt","date":"2011-08-23T16:59:29.011Z","type":"message"}
{"nick":"ryah","message":"piscisaureus: so basically uv_stream_init should support any type of stream","date":"2011-08-23T16:59:29.740Z","type":"message"}
{"nick":"isaacs","message":"and leave outfd as the default","date":"2011-08-23T16:59:34.916Z","type":"message"}
{"nick":"ryah","message":"most likely tty or file","date":"2011-08-23T16:59:38.638Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: do we want to use HANDLEs or real fds on windows?","date":"2011-08-23T17:00:09.602Z","type":"message"}
{"nick":"ryah","message":"piscisaureus: for these situations where people are using fds - i think we need to support fds","date":"2011-08-23T17:01:05.797Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: we can support fds for files that are managed by the crts","date":"2011-08-23T17:01:29.652Z","type":"message"}
{"nick":"piscisaureus","message":"but the crt is so painful","date":"2011-08-23T17:01:35.905Z","type":"message"}
{"nick":"piscisaureus","message":"libuv is not using that at all","date":"2011-08-23T17:01:41.710Z","type":"message"}
{"nick":"ryah","message":"piscisaureus: is there a way to get a handle from fd?","date":"2011-08-23T17:01:48.852Z","type":"message"}
{"nick":"piscisaureus","message":"yes","date":"2011-08-23T17:01:53.331Z","type":"message"}
{"nick":"piscisaureus","message":"_get_osfhandle","date":"2011-08-23T17:01:57.047Z","type":"message"}
{"nick":"ryah","message":"what's the call?","date":"2011-08-23T17:01:59.143Z","type":"message"}
{"nick":"ryah","message":"thanks","date":"2011-08-23T17:02:00.877Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: it can also be done the other way around","date":"2011-08-23T17:02:11.177Z","type":"message"}
{"nick":"piscisaureus","message":"_open_osfhandle","date":"2011-08-23T17:02:16.121Z","type":"message"}
{"nick":"ryah","message":"so somehow we're going to figure out the type of the fd","date":"2011-08-23T17:02:32.342Z","type":"message"}
{"nick":"ryah","message":"then if it's a file _get_osfhandle - then turn it into a uv_file_t","date":"2011-08-23T17:02:57.603Z","type":"message"}
{"nick":"ryah","message":"(once that exists)","date":"2011-08-23T17:03:04.585Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: or - yeah whatever","date":"2011-08-23T17:03:08.828Z","type":"message"}
{"nick":"piscisaureus","message":"a fd can be a console as well","date":"2011-08-23T17:03:12.718Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: supporting the fs api is a bit more painful","date":"2011-08-23T17:03:33.638Z","type":"message"}
{"nick":"piscisaureus","message":"e.g. do you want to give the fd to the fs.open callback?","date":"2011-08-23T17:03:58.007Z","type":"message"}
{"nick":"piscisaureus","message":"or something else","date":"2011-08-23T17:04:09.424Z","type":"message"}
{"nick":"piscisaureus","message":"one of the annoying thins is that the windows crt has a hard limit of 2000-something fds","date":"2011-08-23T17:05:06.617Z","type":"message"}
{"nick":"piscisaureus","action":"needs igorzi","date":"2011-08-23T17:06:25.291Z","type":"action"}
{"nick":"ryah","message":"yes","date":"2011-08-23T17:07:05.092Z","type":"message"}
{"nick":"ryah","message":"but this will just be used in one-off situations","date":"2011-08-23T17:07:14.364Z","type":"message"}
{"nick":"ryah","message":"like isaacs has","date":"2011-08-23T17:07:18.182Z","type":"message"}
{"nick":"ryah","message":"not for server connections","date":"2011-08-23T17:07:29.144Z","type":"message"}
{"nick":"isaacs","message":"yeah, typically if you already have a file descriptor, and want to set up a stream around it, you're not going to have zillions of them","date":"2011-08-23T17:08:18.968Z","type":"message"}
{"nick":"piscisaureus","message":"yes - ok we can do this","date":"2011-08-23T17:08:33.575Z","type":"message"}
{"nick":"piscisaureus","message":"my main concern is whether we want FDs to come out of libuv","date":"2011-08-23T17:08:57.484Z","type":"message"}
{"nick":"piscisaureus","message":"sure we can put fds in there","date":"2011-08-23T17:09:06.857Z","type":"message"}
{"nick":"ryah","message":"as long as we're not using them for servers - i think it's fine","date":"2011-08-23T17:09:41.019Z","type":"message"}
{"nick":"ryah","message":"fds are x-platform after all","date":"2011-08-23T17:09:48.667Z","type":"message"}
{"nick":"ryah","message":"we're already depending heavily on CRT","date":"2011-08-23T17:09:54.626Z","type":"message"}
{"nick":"piscisaureus","message":"not in windows","date":"2011-08-23T17:10:41.242Z","type":"message"}
{"nick":"ryah","message":"i should say - we will be once igor finishes uv_async stuff","date":"2011-08-23T17:10:58.965Z","type":"message"}
{"nick":"ryah","message":"er uv_tp_","date":"2011-08-23T17:11:04.664Z","type":"message"}
{"nick":"ryah","message":"or whatever he's calling it","date":"2011-08-23T17:11:08.374Z","type":"message"}
{"nick":"ryah","message":"or is he using native calls? :/","date":"2011-08-23T17:11:22.461Z","type":"message"}
{"nick":"ryah","message":"piscisaureus: when we add this call i will add docs that say the user should beware of using it","date":"2011-08-23T17:17:13.723Z","type":"message"}
{"nick":"igorzi","date":"2011-08-23T17:17:31.664Z","type":"join"}
{"nick":"ryah","message":"piscisaureus: that it should only be used for \"compatibility\" code","date":"2011-08-23T17:17:33.930Z","type":"message"}
{"nick":"piscisaureus","message":"yeah","date":"2011-08-23T17:17:38.892Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: I was thinking also","date":"2011-08-23T17:17:53.392Z","type":"message"}
{"nick":"piscisaureus","message":"maybe we should replace the \"fd\" that is used by the fs module by something opaque","date":"2011-08-23T17:18:46.462Z","type":"message"}
{"nick":"piscisaureus","message":"a wrap or something","date":"2011-08-23T17:18:50.838Z","type":"message"}
{"nick":"DrPizza_","message":"windows doesn't use fds, and I am not convinced that mixing fds and HANDLEs should even be mixed","date":"2011-08-23T17:23:24.775Z","type":"message"}
{"nick":"DrPizza_","message":"I'm not sure how the buffering would work","date":"2011-08-23T17:23:28.805Z","type":"message"}
{"nick":"DrPizza_","message":"the CRT has its own buffers","date":"2011-08-23T17:23:31.812Z","type":"message"}
{"nick":"DrPizza_","message":"though I suppose you can turn it off","date":"2011-08-23T17:23:42.278Z","type":"message"}
{"nick":"DrPizza_","message":"but still","date":"2011-08-23T17:23:43.270Z","type":"message"}
{"nick":"DrPizza_","message":"nobody uses fds","date":"2011-08-23T17:23:45.555Z","type":"message"}
{"nick":"DrPizza_","message":"except stdin, stdout, stderr","date":"2011-08-23T17:23:50.102Z","type":"message"}
{"nick":"DrPizza_","message":"fds really aren't cross-platform in any useful sense","date":"2011-08-23T17:24:19.756Z","type":"message"}
{"nick":"johnm1234","reason":"Ping timeout: 240 seconds","date":"2011-08-23T17:27:02.456Z","type":"quit"}
{"nick":"DrPizza_","message":"unix uses them, windows doesn't.","date":"2011-08-23T17:27:46.203Z","type":"message"}
{"nick":"brson","date":"2011-08-23T17:28:50.397Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus: ping","date":"2011-08-23T17:29:40.659Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: https://gist.github.com/b0dfb564bb7c9d8af42f <- can you make that patch work on windows?","date":"2011-08-23T17:35:02.488Z","type":"message"}
{"nick":"johnm1234_","date":"2011-08-23T17:35:17.016Z","type":"join"}
{"nick":"ryah","message":"well - we could probably support new net.Socket(1), net.Socket(2), net.Socket(0)","date":"2011-08-23T17:43:21.544Z","type":"message"}
{"nick":"ryah","message":"and fail on everything else","date":"2011-08-23T17:43:26.141Z","type":"message"}
{"nick":"ryah","message":"i bet that would solve 99% of the sisues","date":"2011-08-23T17:43:39.516Z","type":"message"}
{"nick":"ryah","message":"issues","date":"2011-08-23T17:43:40.942Z","type":"message"}
{"nick":"piscisaureus","message":"yes","date":"2011-08-23T17:43:42.905Z","type":"message"}
{"nick":"piscisaureus","message":"although","date":"2011-08-23T17:43:46.419Z","type":"message"}
{"nick":"DrPizza_","message":"I'm not really clear what that would even do, are they ever actually sockets?","date":"2011-08-23T17:43:50.168Z","type":"message"}
{"nick":"DrPizza_","message":"can you do that on windows?","date":"2011-08-23T17:43:53.361Z","type":"message"}
{"nick":"piscisaureus","message":"new net.Socket(1) should not actually create a socket","date":"2011-08-23T17:44:02.474Z","type":"message"}
{"nick":"piscisaureus","message":"because that won't work","date":"2011-08-23T17:44:06.040Z","type":"message"}
{"nick":"ryah","message":"DrPizza_: no - they're ttys or files","date":"2011-08-23T17:44:13.727Z","type":"message"}
{"nick":"ryah","message":"right it should create a uv_tty_t wrap","date":"2011-08-23T17:44:39.292Z","type":"message"}
{"nick":"ryah","message":"TTYWrap","date":"2011-08-23T17:44:42.587Z","type":"message"}
{"nick":"ryah","message":"ConsoleWrap ?","date":"2011-08-23T17:44:47.447Z","type":"message"}
{"nick":"piscisaureus","message":"either, whatever","date":"2011-08-23T17:44:59.148Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I can make that work, but ping me later","date":"2011-08-23T17:45:10.401Z","type":"message"}
{"nick":"piscisaureus","message":"It's a big mess in my repo right now","date":"2011-08-23T17:45:18.489Z","type":"message"}
{"nick":"ryah","message":"DrPizza_: in node net.Socket is basically the fundemental stream class","date":"2011-08-23T17:45:19.351Z","type":"message"}
{"nick":"ryah","message":"DrPizza_: because all types of fds are handled in the same way","date":"2011-08-23T17:45:28.382Z","type":"message"}
{"nick":"DrPizza_","message":"hm","date":"2011-08-23T17:45:38.563Z","type":"message"}
{"nick":"DrPizza_","message":"that seems rather unfortunate","date":"2011-08-23T17:45:47.575Z","type":"message"}
{"nick":"ryah","message":"well - that's not totally true","date":"2011-08-23T17:45:50.486Z","type":"message"}
{"nick":"ryah","message":"TTYs and sockets are handled by net.Stream. files are different","date":"2011-08-23T17:46:08.513Z","type":"message"}
{"nick":"DrPizza_","message":"do files have their own random access thing?","date":"2011-08-23T17:46:18.736Z","type":"message"}
{"nick":"ryah","message":"npm is actually broken in the case of using a file","date":"2011-08-23T17:46:25.396Z","type":"message"}
{"nick":"DrPizza_","message":"ah","date":"2011-08-23T17:46:47.736Z","type":"message"}
{"nick":"DrPizza_","message":"hm","date":"2011-08-23T17:46:49.151Z","type":"message"}
{"nick":"ryah","message":"DrPizza_: we handle file streams and seekable files differntly","date":"2011-08-23T17:47:10.917Z","type":"message"}
{"nick":"DrPizza_","message":"so you can't have one file object and treat it both ways?","date":"2011-08-23T17:47:27.460Z","type":"message"}
{"nick":"DrPizza_","message":"(unlike e.g. c++ fstream)","date":"2011-08-23T17:47:43.177Z","type":"message"}
{"nick":"ryah","message":"fs.ReadStream and fs.WriteStream are half-duplex streams - with the same interface as a socket has","date":"2011-08-23T17:47:43.525Z","type":"message"}
{"nick":"ryah","message":"to seek around you have to use fs.read and fs.write","date":"2011-08-23T17:47:54.556Z","type":"message"}
{"nick":"DrPizza_","message":"so really net.Socket should be named not-actually-net.Stream and net.Socket should be some kind of a subclass that (I assume) knows stuff like the names of its endpoints, and not-actually-net.Console would be a subclass that didn't know that kind of thing","date":"2011-08-23T17:51:12.017Z","type":"message"}
{"nick":"DrPizza_","message":"hm","date":"2011-08-23T17:56:03.661Z","type":"message"}
{"nick":"igorzi","message":"piscisaureus: ryah: new net.Socket(2) could also be a pipe, or it could even be a tcp socket (though that's probably rare)","date":"2011-08-23T17:56:29.859Z","type":"message"}
{"nick":"ryah","message":"pipe, tty, or file","date":"2011-08-23T17:58:00.525Z","type":"message"}
{"nick":"ryah","message":"but files should actually be constructed differently","date":"2011-08-23T17:58:12.373Z","type":"message"}
{"nick":"DrPizza_","message":"files have a totally different response to I/O, since you can pull what you need, rather than just having some random person pushing whenever they feel like","date":"2011-08-23T17:58:40.008Z","type":"message"}
{"nick":"bnoordhuis","message":"call time?","date":"2011-08-23T18:00:10.660Z","type":"message"}
{"nick":"piscisaureus","message":"im in","date":"2011-08-23T18:00:49.112Z","type":"message"}
{"nick":"piscisaureus","message":"but not the leader","date":"2011-08-23T18:01:00.580Z","type":"message"}
{"nick":"bnoordhuis","message":"as am i","date":"2011-08-23T18:02:03.843Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303koichik\u000f \u000307master\u000f * r\u0002485d5b5\u000f \u000310\u000f/ (4 files in 3 dirs)\u0002:\u000f ","date":"2011-08-23T18:03:35.391Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f dns: Force the DNS module to invoke callbacks asynchronously.","date":"2011-08-23T18:03:35.540Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f Fixes #1164. - http://git.io/d9ajFw","date":"2011-08-23T18:03:35.540Z","type":"message"}
{"nick":"CIA-75","message":"\u0002libuv:\u000f \u000303Bert Belder\u000f \u000307winreqerr\u000f * r\u00021edba40\u000f \u000310\u000f/ (6 files in 2 dirs)\u0002:\u000f win: use uv_req_t.overlapped.Internal field to propagate request errors (+5 more commits...) - http://git.io/7sxBnA","date":"2011-08-23T18:42:15.909Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: can you take a look at https://github.com/joyent/libuv/compare/master...winreqerr","date":"2011-08-23T18:44:01.093Z","type":"message"}
{"nick":"igorzi","message":"piscisaureus: yep, looking","date":"2011-08-23T18:44:14.408Z","type":"message"}
{"nick":"piscisaureus","message":"especially https://github.com/joyent/libuv/commit/1edba4006c5aca3ec583dfea7b0e059d83f1dab0","date":"2011-08-23T18:44:15.460Z","type":"message"}
{"nick":"ryah","message":"igorzi, piscisaureus: anything against building the release this week with msvs?","date":"2011-08-23T18:46:01.732Z","type":"message"}
{"nick":"piscisaureus","message":"i don't think so","date":"2011-08-23T18:46:15.036Z","type":"message"}
{"nick":"piscisaureus","message":"if openssl works","date":"2011-08-23T18:46:33.997Z","type":"message"}
{"nick":"ryah","message":"it seems to","date":"2011-08-23T18:46:38.922Z","type":"message"}
{"nick":"igorzi","message":"i don't see any issues.. just need to make sure that CRT is statically linked, which I think DrPizza took care of","date":"2011-08-23T18:47:07.965Z","type":"message"}
{"nick":"DrPizza_","message":"ryah: the only question is, do we want to add in zlib as well, so openssl can use it?","date":"2011-08-23T18:47:48.817Z","type":"message"}
{"nick":"DrPizza_","message":"I would assume that unix distributions would include it","date":"2011-08-23T18:48:00.479Z","type":"message"}
{"nick":"DrPizza_","message":"it should be easy enough to add","date":"2011-08-23T18:48:06.578Z","type":"message"}
{"nick":"ryah","message":"DrPizza_: https://github.com/joyent/node/blob/e3413f08fdcd0476cd9e0c2f934a6f7c6816c322/src/node_crypto.cc#L3887-3898","date":"2011-08-23T18:48:28.892Z","type":"message"}
{"nick":"DrPizza_","new_nick":"DrPizza","date":"2011-08-23T18:48:38.243Z","type":"nick"}
{"nick":"ryah","message":"we notices good memory footprint improvements when disabling compression","date":"2011-08-23T18:48:58.055Z","type":"message"}
{"nick":"DrPizza","message":"oh really","date":"2011-08-23T18:49:08.519Z","type":"message"}
{"nick":"DrPizza","message":"huh","date":"2011-08-23T18:49:10.612Z","type":"message"}
{"nick":"ryah","message":"openssl does not do compression well","date":"2011-08-23T18:49:38.010Z","type":"message"}
{"nick":"ryah","message":"or at least not with high-concurrency servers in mind","date":"2011-08-23T18:49:51.310Z","type":"message"}
{"nick":"ryah","message":"there's probably some tunables there - but we havent looked into it","date":"2011-08-23T18:50:07.889Z","type":"message"}
{"nick":"DrPizza","message":"so they'd have to do it in a module or something?","date":"2011-08-23T18:50:16.724Z","type":"message"}
{"nick":"ryah","message":"we want to have a core zlib module eventually","date":"2011-08-23T18:50:27.191Z","type":"message"}
{"nick":"ryah","message":"which implements the stream interface","date":"2011-08-23T18:50:37.656Z","type":"message"}
{"nick":"DrPizza","message":"can that integrate into the right places?","date":"2011-08-23T18:50:51.660Z","type":"message"}
{"nick":"DrPizza","message":"I don't know how zlib with openssl works","date":"2011-08-23T18:50:56.669Z","type":"message"}
{"nick":"DrPizza","message":"it doesn't need to set up zlib in the handshake or anything?","date":"2011-08-23T18:51:02.633Z","type":"message"}
{"nick":"ryah","message":"we were thinking we'd do it in js","date":"2011-08-23T18:51:38.338Z","type":"message"}
{"nick":"ryah","message":"socket.pipe(zlibInstace)","date":"2011-08-23T18:51:46.400Z","type":"message"}
{"nick":"DrPizza","message":"hm","date":"2011-08-23T18:52:38.148Z","type":"message"}
{"nick":"DrPizza","message":"is that the same thing though?","date":"2011-08-23T18:53:21.609Z","type":"message"}
{"nick":"DrPizza","message":"like if I turn on compression on my ssh connection, both ends know abou tit","date":"2011-08-23T18:53:43.062Z","type":"message"}
{"nick":"DrPizza","message":"it's not the same as just sending gzipped data through","date":"2011-08-23T18:54:01.519Z","type":"message"}
{"nick":"DrPizza","message":"I don' tknow enough about how ssl works though","date":"2011-08-23T18:54:08.881Z","type":"message"}
{"nick":"DrPizza","message":"so maybe it's the same","date":"2011-08-23T18:54:12.932Z","type":"message"}
{"nick":"ryah","message":"no not the same- the compression is at a higher layer","date":"2011-08-23T18:54:34.480Z","type":"message"}
{"nick":"DrPizza","message":"right, that's what Ia ssumed, I just wasn't sure if maybe openssl allows you to plug compression in or something","date":"2011-08-23T18:55:15.931Z","type":"message"}
{"nick":"DrPizza","message":"ryah: would it not be the kind of thing perhaps better as a runtime/command-line tunable, so if it's not suitable for your application you can disable it, but if you'd rather have it, it's an option? because I have always assumed it's a fairly standard thing ","date":"2011-08-23T18:59:59.957Z","type":"message"}
{"nick":"DrPizza","message":"but maybe moreso for things like ssh/scp than https","date":"2011-08-23T19:00:18.246Z","type":"message"}
{"nick":"DrPizza","message":"since with https you can always compress the bodies and it's just the headers that are not compressed","date":"2011-08-23T19:00:50.001Z","type":"message"}
{"nick":"igorzi","message":"piscisaureus: looks good.. just this - https://github.com/joyent/libuv/commit/1edba4006c5aca3ec583dfea7b0e059d83f1dab0#L3R526","date":"2011-08-23T19:01:03.514Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: rethinking, I don't like that SET_REQ_ERROR takes an error code but GET_REQ_ERROR returns uv_err_t","date":"2011-08-23T19:02:22.718Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: should I rename GET_REQ_ERROR to GET_REQ_UV_ERROR?","date":"2011-08-23T19:02:41.785Z","type":"message"}
{"nick":"ryah","message":"DrPizza: yeah probably","date":"2011-08-23T19:02:56.194Z","type":"message"}
{"nick":"igorzi","message":"piscisaureus: yeah, that would make it cleaner","date":"2011-08-23T19:03:13.385Z","type":"message"}
{"nick":"ryah","message":"DrPizza: we saw such a huge win with it disabled that we did it immediately","date":"2011-08-23T19:03:17.771Z","type":"message"}
{"nick":"ryah","message":"DrPizza: and never looked back :)","date":"2011-08-23T19:03:22.312Z","type":"message"}
{"nick":"DrPizza","message":"heh","date":"2011-08-23T19:03:26.660Z","type":"message"}
{"nick":"ryah","message":"i forget exactly how much - but it might have been 10x","date":"2011-08-23T19:04:01.722Z","type":"message"}
{"nick":"ryah","message":"pquerna: do you remember?","date":"2011-08-23T19:04:14.097Z","type":"message"}
{"nick":"DrPizza","message":"that seems like a big difference","date":"2011-08-23T19:04:14.460Z","type":"message"}
{"nick":"DrPizza","message":"like, alarmingly big","date":"2011-08-23T19:04:22.455Z","type":"message"}
{"nick":"ryah","message":"DrPizza: pquerna did the change on his twisted system and also saw the same","date":"2011-08-23T19:04:38.087Z","type":"message"}
{"nick":"DrPizza","message":"how strange","date":"2011-08-23T19:04:46.792Z","type":"message"}
{"nick":"piscisaureus","message":"http://journal.paul.querna.org/ ?","date":"2011-08-23T19:04:52.707Z","type":"message"}
{"nick":"piscisaureus","message":"^-- drpizza ryah","date":"2011-08-23T19:05:31.244Z","type":"message"}
{"nick":"DrPizza","message":"interesting","date":"2011-08-23T19:07:10.311Z","type":"message"}
{"nick":"DrPizza","message":"pquerna: did SSL_MODE_RELEASE_BUFFERS make zlib memory load tolerable again?","date":"2011-08-23T19:07:31.844Z","type":"message"}
{"nick":"DrPizza","message":"or was it still high?","date":"2011-08-23T19:07:33.912Z","type":"message"}
{"nick":"DrPizza","message":"ryah: how hard work is it to plumb in a command-line option, and would you accept a patch that did so?","date":"2011-08-23T19:07:57.226Z","type":"message"}
{"nick":"DrPizza","message":"ryah: i.e. zero out the zlib stuff by default, but allow people to leave it enabeld","date":"2011-08-23T19:08:17.812Z","type":"message"}
{"nick":"ryah","message":"DrPizza: relatively easy - yes i'd be donw with that","date":"2011-08-23T19:15:16.525Z","type":"message"}
{"nick":"DrPizza","message":"ok I'll take a look","date":"2011-08-23T19:15:29.497Z","type":"message"}
{"nick":"ryah","message":"just set a global node::use_ssl_compression variable","date":"2011-08-23T19:15:35.938Z","type":"message"}
{"nick":"ryah","message":"src/node.cc is the command-line parsing","date":"2011-08-23T19:15:46.552Z","type":"message"}
{"nick":"DrPizza","message":"ok","date":"2011-08-23T19:15:48.847Z","type":"message"}
{"nick":"mraleph","date":"2011-08-23T19:25:01.145Z","type":"join"}
{"nick":"CIA-75","message":"\u0002libuv:\u000f \u000303Bert Belder\u000f \u000307master\u000f * r\u00025cae6e4\u000f \u000310\u000f/ (6 files in 2 dirs)\u0002:\u000f win: use uv_req_t.overlapped.Internal field to propagate request errors (+5 more commits...) - http://git.io/wSZ6Pg","date":"2011-08-23T19:25:06.605Z","type":"message"}
{"nick":"mraleph","message":"ryah: so I was think about this whole Context thingy we talked about in the morning. I can't quite get what Context give you that you can't get without them (because you say that it's not isolation and you are fine with sharing state)","date":"2011-08-23T19:28:20.837Z","type":"message"}
{"nick":"mraleph","message":"*I was thinking","date":"2011-08-23T19:28:28.046Z","type":"message"}
{"nick":"ryah","message":"mraleph: hm - good point","date":"2011-08-23T19:30:04.260Z","type":"message"}
{"nick":"ryah","message":"let me think about that...","date":"2011-08-23T19:30:16.077Z","type":"message"}
{"nick":"piscisaureus","message":"udp_packet_storm_1v1: 118170/s received, 120190/s sent","date":"2011-08-23T19:47:25.838Z","type":"message"}
{"nick":"piscisaureus","message":"udp_packet_storm_10v1: 119180/s received, 121200/s sent","date":"2011-08-23T19:47:25.988Z","type":"message"}
{"nick":"piscisaureus","message":"udp_packet_storm_100v1: 118170/s received, 120190/s sent","date":"2011-08-23T19:47:25.988Z","type":"message"}
{"nick":"piscisaureus","message":"udp_packet_storm_1000v1: 117160/s received, 119180/s sent","date":"2011-08-23T19:47:25.988Z","type":"message"}
{"nick":"piscisaureus","message":"udp_packet_storm_10v10: 123222/s received, 125240/s sent","date":"2011-08-23T19:47:25.988Z","type":"message"}
{"nick":"piscisaureus","message":"udp_packet_storm_100v10: 123222/s received, 125240/s sent","date":"2011-08-23T19:47:26.127Z","type":"message"}
{"nick":"piscisaureus","message":"udp_packet_storm_1000v10: 122212/s received, 124230/s sent","date":"2011-08-23T19:47:26.127Z","type":"message"}
{"nick":"piscisaureus","message":"udp_packet_storm_100v100: 107861/s received, 110319/s sent","date":"2011-08-23T19:47:27.027Z","type":"message"}
{"nick":"piscisaureus","message":"udp_packet_storm_1000v100: 113921/s received, 116379/s sent","date":"2011-08-23T19:47:27.167Z","type":"message"}
{"nick":"piscisaureus","message":"udp_packet_storm_1000v1000: 71261/s received, 84478/s sent","date":"2011-08-23T19:47:28.020Z","type":"message"}
{"nick":"piscisaureus","message":"^-- not bad again","date":"2011-08-23T19:47:28.167Z","type":"message"}
{"nick":"ryah","message":"mraleph: i was kind of thinking that only \"core\" modules would be shared","date":"2011-08-23T19:48:09.177Z","type":"message"}
{"nick":"ryah","message":"mraleph: but perhaps we can do some trickery with require to make that the case","date":"2011-08-23T19:48:29.525Z","type":"message"}
{"nick":"mraleph","reason":"Quit: Leaving.","date":"2011-08-23T19:49:07.517Z","type":"quit"}
{"nick":"mraleph","date":"2011-08-23T19:52:45.006Z","type":"join"}
{"nick":"mraleph","message":"ryah: so you mean every module required by the \"request handler\" has to be reloaded for every request?","date":"2011-08-23T19:53:39.270Z","type":"message"}
{"nick":"mraleph","message":"(sorry I accidentally closed laptop)","date":"2011-08-23T19:53:58.081Z","type":"message"}
{"nick":"mraleph","message":"(so I did not get anything after \"but perhaps we can do some trickery…\" line","date":"2011-08-23T19:54:24.212Z","type":"message"}
{"nick":"ryah","message":"mraleph: each request would re-execute its modules","date":"2011-08-23T19:54:57.625Z","type":"message"}
{"nick":"ryah","message":"mraleph: there was nothing else said after that line","date":"2011-08-23T19:55:25.011Z","type":"message"}
{"nick":"mraleph","message":"sounds pretty heavy.","date":"2011-08-23T19:55:39.728Z","type":"message"}
{"nick":"mraleph","message":"if I understand you correctly you want to be able for a given connection be able to discard all activities that \"grew\" from that request","date":"2011-08-23T19:57:06.836Z","type":"message"}
{"nick":"ryah","message":"yeah","date":"2011-08-23T19:57:20.916Z","type":"message"}
{"nick":"pquerna","message":"DrPizza: no, mode_release_buffers is unrelated to zlib","date":"2011-08-23T19:58:52.720Z","type":"message"}
{"nick":"mraleph","message":"hmm. that's pretty difficult especially because you have things like global \"setInterval\", global \"nextTick\" (or whatever it is called). ","date":"2011-08-23T19:59:01.867Z","type":"message"}
{"nick":"DrPizza","message":"pquerna: oh, too bad then.","date":"2011-08-23T19:59:03.457Z","type":"message"}
{"nick":"pquerna","message":"DrPizza: zlib still keeps its own internal buffers at 512kb or whatnot","date":"2011-08-23T19:59:05.665Z","type":"message"}
{"nick":"DrPizza","message":"is that not tunable at all?","date":"2011-08-23T19:59:13.180Z","type":"message"}
{"nick":"DrPizza","message":"or is it not tunable when openssl is calling zlib","date":"2011-08-23T19:59:20.483Z","type":"message"}
{"nick":"mraleph","message":"I think instead of going heavy style with Contexts you should just redesign the API","date":"2011-08-23T19:59:28.425Z","type":"message"}
{"nick":"pquerna","message":"not tunable when openssl is calling zlib","date":"2011-08-23T19:59:30.945Z","type":"message"}
{"nick":"mraleph","message":"ryah: just kill all the global ways to schedule ","date":"2011-08-23T19:59:45.616Z","type":"message"}
{"nick":"mraleph","message":"ryah: and give the connection/request/whatever some token/handle/gateway that allows to schedule things. then all activities will be \"associated\" with the connection explicitly","date":"2011-08-23T20:00:47.710Z","type":"message"}
{"nick":"mraleph","message":"I am just throwing some ideas.","date":"2011-08-23T20:01:15.831Z","type":"message"}
{"nick":"ryah","message":"mraleph: yeah","date":"2011-08-23T20:03:26.043Z","type":"message"}
{"nick":"ryah","message":"good ideas","date":"2011-08-23T20:03:29.511Z","type":"message"}
{"nick":"ryah","message":"we can actually do that implicitly","date":"2011-08-23T20:03:35.457Z","type":"message"}
{"nick":"ryah","message":"since we always know who started the current \"event\"","date":"2011-08-23T20:03:50.447Z","type":"message"}
{"nick":"mraleph","message":"oh, yeah that is also true.","date":"2011-08-23T20:04:21.179Z","type":"message"}
{"nick":"mraleph","message":"in a sense there a two ways (Dark Side and Light SIde). Dark Side imposes limitations. Light Side gives opprotunities.","date":"2011-08-23T20:05:40.811Z","type":"message"}
{"nick":"mraleph","message":"fuuuu ","date":"2011-08-23T20:05:49.121Z","type":"message"}
{"nick":"mraleph","message":"there are","date":"2011-08-23T20:05:51.244Z","type":"message"}
{"nick":"mraleph","message":"not \"there a\"","date":"2011-08-23T20:05:57.801Z","type":"message"}
{"nick":"mraleph","message":"this kills me","date":"2011-08-23T20:06:03.242Z","type":"message"}
{"nick":"DrPizza","message":"pquerna: heh http://el-tramo.be/blog/more-squishy-data","date":"2011-08-23T20:08:15.759Z","type":"message"}
{"nick":"pquerna","message":"wow, weird.","date":"2011-08-23T20:09:32.559Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303Evan Martin\u000f \u000307master\u000f * r\u0002a916d88\u000f \u000310\u000f/ common.gypi \u0002:\u000f ","date":"2011-08-23T20:19:53.467Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f common.gypi: don't nest \"target_defaults\" within \"target_defaults\"","date":"2011-08-23T20:19:53.611Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f The \"conditions\" block is already within a \"target_defaults\", so its","date":"2011-08-23T20:19:53.612Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f children amend target default settings already. - http://git.io/Yiq0HA","date":"2011-08-23T20:19:53.612Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303Evan Martin\u000f \u000307master\u000f * r\u00028a29e5e\u000f \u000310\u000f/ (common.gypi deps/openssl/openssl.gyp)\u0002:\u000f gyp: Don't pass C++ flags to C compiler, and don't pass -ansi in OpenSSL builds. - http://git.io/ms8QTQ","date":"2011-08-23T20:19:53.751Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u000285f7b78\u000f \u000310\u000f/ common.gypi \u0002:\u000f gyp: Further fixes to target_defaults for mac - http://git.io/-GZuxA","date":"2011-08-23T20:19:53.970Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: hey","date":"2011-08-23T20:23:46.208Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: test-udp-ipv6-only is broken","date":"2011-08-23T20:46:18.227Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: a ipv4 server gets bound to localhost first, then the ipv6 server","date":"2011-08-23T20:47:02.888Z","type":"message"}
{"nick":"piscisaureus","message":"even if UDP_IPV6ONLY is a no-op then still the test would not fail","date":"2011-08-23T20:47:20.871Z","type":"message"}
{"nick":"piscisaureus","message":"because the ipv6 socket can't listen on localhost since the ipv4 socket has already taken it","date":"2011-08-23T20:47:47.153Z","type":"message"}
{"nick":"graydon","date":"2011-08-23T20:53:08.351Z","type":"join"}
{"nick":"ryah","message":"using GYP for addons might be nice","date":"2011-08-23T21:00:34.215Z","type":"message"}
{"nick":"DrPizza","message":"certainly it would make it easier to ensure that things like the C library etc. are specified correctly","date":"2011-08-23T21:01:45.662Z","type":"message"}
{"nick":"ryah","message":"it would be nice if GYP understood real JSON","date":"2011-08-23T21:04:43.268Z","type":"message"}
{"nick":"ryah","message":"and not python JSON","date":"2011-08-23T21:04:46.578Z","type":"message"}
{"nick":"ryah","message":"but whatever","date":"2011-08-23T21:05:13.313Z","type":"message"}
{"nick":"DrPizza","message":"I thought it did, just with the rule that you had to quote everything","date":"2011-08-23T21:05:25.493Z","type":"message"}
{"nick":"ryah","message":"it uses # comments","date":"2011-08-23T21:05:37.536Z","type":"message"}
{"nick":"DrPizza","message":"oh duh","date":"2011-08-23T21:05:41.553Z","type":"message"}
{"nick":"DrPizza","message":"yes","date":"2011-08-23T21:05:42.006Z","type":"message"}
{"nick":"DrPizza","message":"does it support // comments?","date":"2011-08-23T21:05:49.525Z","type":"message"}
{"nick":"ryah","message":"not that i've seen ...","date":"2011-08-23T21:06:02.777Z","type":"message"}
{"nick":"piscisaureus","message":"JSON also doesn't support // comments","date":"2011-08-23T21:06:11.206Z","type":"message"}
{"nick":"ryah","message":"piscisaureus: true","date":"2011-08-23T21:06:20.240Z","type":"message"}
{"nick":"DrPizza","message":"piscisaureus: no, but at least it'd be something that javascript could eval()","date":"2011-08-23T21:06:30.553Z","type":"message"}
{"nick":"DrPizza","message":"at least I assume you can eval comments","date":"2011-08-23T21:06:51.373Z","type":"message"}
{"nick":"piscisaureus","message":"sure","date":"2011-08-23T21:06:58.082Z","type":"message"}
{"nick":"ryah","message":"i'm changing waf to build into out/Release/node and out/Debug/node_g","date":"2011-08-23T21:07:20.467Z","type":"message"}
{"nick":"ryah","message":"which will allow us to unify the test runner at elast","date":"2011-08-23T21:07:33.220Z","type":"message"}
{"nick":"DrPizza","message":"what does _g stand for?","date":"2011-08-23T21:07:35.005Z","type":"message"}
{"nick":"ryah","message":"debug","date":"2011-08-23T21:07:40.008Z","type":"message"}
{"nick":"DrPizza","message":"yeah but I mean","date":"2011-08-23T21:07:45.605Z","type":"message"}
{"nick":"DrPizza","message":"why _g?","date":"2011-08-23T21:07:46.984Z","type":"message"}
{"nick":"ryah","message":"that's what v8 does","date":"2011-08-23T21:07:53.375Z","type":"message"}
{"nick":"DrPizza","message":"heh","date":"2011-08-23T21:08:07.024Z","type":"message"}
{"nick":"ryah","message":"so i'll remove that too next :)","date":"2011-08-23T21:08:09.548Z","type":"message"}
{"nick":"ryah","message":"since gyp doesn't add that","date":"2011-08-23T21:08:14.846Z","type":"message"}
{"nick":"DrPizza","message":"how strange","date":"2011-08-23T21:08:46.879Z","type":"message"}
{"nick":"DrPizza","message":"_g","date":"2011-08-23T21:08:53.420Z","type":"message"}
{"nick":"DrPizza","message":"is it a gcc option or anything?","date":"2011-08-23T21:08:58.518Z","type":"message"}
{"nick":"DrPizza","message":"-g?","date":"2011-08-23T21:08:59.642Z","type":"message"}
{"nick":"ryah","message":"DrPizza: i think it comes from the gcc option - yah","date":"2011-08-23T21:11:13.051Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u0002879eb16\u000f \u000310\u000f/ (7 files in 5 dirs)\u0002:\u000f Have WAF variants match GYP configuration names - http://git.io/iekkIQ","date":"2011-08-23T21:12:41.143Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u0002a7300c8\u000f \u000310\u000f/ (5 files in 3 dirs)\u0002:\u000f WAF builds in out/ instead of build/ - http://git.io/Vyhv0A","date":"2011-08-23T21:12:41.539Z","type":"message"}
{"nick":"ryah","message":"now if we could just get --generated-output in MSVS tow ork","date":"2011-08-23T21:13:04.893Z","type":"message"}
{"nick":"piscisaureus","message":"\u000301--generated-output \u0003\u000301","date":"2011-08-23T21:13:17.285Z","type":"message"}
{"nick":"piscisaureus","message":"??","date":"2011-08-23T21:13:20.041Z","type":"message"}
{"nick":"ryah","message":"https://github.com/joyent/node/blob/a7300c8297693e26d2504da4a2e5813453306cd9/tools/gyp_node#L50","date":"2011-08-23T21:13:46.795Z","type":"message"}
{"nick":"DrPizza","message":"hm, they have made some fixes","date":"2011-08-23T21:13:57.747Z","type":"message"}
{"nick":"DrPizza","message":"so it's possible that it does now","date":"2011-08-23T21:14:01.029Z","type":"message"}
{"nick":"DrPizza","message":"although I fear it may lead to projects with lots of ../../../ nonsense","date":"2011-08-23T21:14:11.137Z","type":"message"}
{"nick":"piscisaureus","message":"yes these ../../ directories in the vs project suck","date":"2011-08-23T21:14:56.405Z","type":"message"}
{"nick":"ryah","message":"http://code.google.com/p/gyp/issues/detail?id=40&q=output_dir","date":"2011-08-23T21:15:07.710Z","type":"message"}
{"nick":"piscisaureus","message":"is this true? http://code.google.com/p/gyp/issues/detail?id=7","date":"2011-08-23T21:17:50.962Z","type":"message"}
{"nick":"ryah","message":"yes","date":"2011-08-23T21:18:09.524Z","type":"message"}
{"nick":"piscisaureus","message":"does gyp only work with cyg *cough* win installed?","date":"2011-08-23T21:18:12.210Z","type":"message"}
{"nick":"DrPizza","message":"no","date":"2011-08-23T21:18:16.651Z","type":"message"}
{"nick":"ryah","message":"we worked around it somehow","date":"2011-08-23T21:18:22.229Z","type":"message"}
{"nick":"DrPizza","message":"I would have rewritten gyp if necessary","date":"2011-08-23T21:18:52.257Z","type":"message"}
{"nick":"DrPizza","message":"not installing that shit on my PC","date":"2011-08-23T21:18:56.579Z","type":"message"}
{"nick":"piscisaureus","message":"cygwin is a wonderful piece of engineering","date":"2011-08-23T21:20:02.639Z","type":"message"}
{"nick":"ryah","message":"gyp is going to have a great future","date":"2011-08-23T21:20:27.738Z","type":"message"}
{"nick":"ryah","message":"the cross compiling stuff is going to be great","date":"2011-08-23T21:20:37.165Z","type":"message"}
{"nick":"ryah","message":"i think","date":"2011-08-23T21:20:38.027Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u0002ea15635\u000f \u000310\u000f/ lib/net_legacy.js \u0002:\u000f ","date":"2011-08-23T21:29:14.384Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f net_legacy: Fix throw typo","date":"2011-08-23T21:29:14.532Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f Thanks Tobi - http://git.io/JihLzw","date":"2011-08-23T21:29:14.532Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307v0.4\u000f * r\u0002827b9c5\u000f \u000310\u000f/ lib/net.js \u0002:\u000f ","date":"2011-08-23T21:30:46.686Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f net: fix throw error","date":"2011-08-23T21:30:46.825Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f Thanks Tobi - http://git.io/MFIcHQ","date":"2011-08-23T21:30:46.825Z","type":"message"}
{"nick":"igorzi","message":"ryah: piscisaureus: here's the eio API in libuv - https://gist.github.com/1157497","date":"2011-08-23T21:31:10.635Z","type":"message"}
{"nick":"igorzi","message":"i'm trying to see how to make this API simple for sync operations.. maybe use the same functions, but run synchronously if cb is not specified?","date":"2011-08-23T21:31:54.680Z","type":"message"}
{"nick":"igorzi","message":")","date":"2011-08-23T21:32:19.689Z","type":"message"}
{"nick":"igorzi","message":"(and read results out of uv_tp_req_t?","date":"2011-08-23T21:32:20.366Z","type":"message"}
{"nick":"ryah","message":"igorzi: that would work for me","date":"2011-08-23T21:33:57.319Z","type":"message"}
{"nick":"ryah","message":"NULL callback = sync","date":"2011-08-23T21:34:01.953Z","type":"message"}
{"nick":"piscisaureus","message":"yes +1","date":"2011-08-23T21:34:07.279Z","type":"message"}
{"nick":"igorzi","message":"ok, let's go with that","date":"2011-08-23T21:35:02.853Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: what are you going to do with fd's","date":"2011-08-23T21:35:05.018Z","type":"message"}
{"nick":"piscisaureus","message":"?","date":"2011-08-23T21:35:06.322Z","type":"message"}
{"nick":"piscisaureus","message":"are you using _open_osfhandle ?","date":"2011-08-23T21:35:22.867Z","type":"message"}
{"nick":"piscisaureus","message":"btw - if the functions can also be sync you should drop the tp_ suffix","date":"2011-08-23T21:35:50.999Z","type":"message"}
{"nick":"DrPizza","message":"death to fds","date":"2011-08-23T21:36:13.495Z","type":"message"}
{"nick":"DrPizza","message":"you shoul dhave a uv_native_file_type","date":"2011-08-23T21:36:19.778Z","type":"message"}
{"nick":"ryah","message":"piscisaureus: what about uv_tp_write ?","date":"2011-08-23T21:36:25.061Z","type":"message"}
{"nick":"DrPizza","message":"typedef.","date":"2011-08-23T21:36:26.135Z","type":"message"}
{"nick":"DrPizza","message":"int on unix","date":"2011-08-23T21:36:28.571Z","type":"message"}
{"nick":"DrPizza","message":"HANDLE on windows","date":"2011-08-23T21:36:31.169Z","type":"message"}
{"nick":"igorzi","message":"hmm, yeah maybe we can can just drop _open_osfhandle, and do handles?","date":"2011-08-23T21:37:10.688Z","type":"message"}
{"nick":"piscisaureus","message":"yes +1","date":"2011-08-23T21:37:17.694Z","type":"message"}
{"nick":"ryah","message":"it's okay with me","date":"2011-08-23T21:37:20.864Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: also uv_type_symlink should take a flags or a type argument","date":"2011-08-23T21:37:35.619Z","type":"message"}
{"nick":"igorzi","message":"ok, now we need to agree on naming","date":"2011-08-23T21:38:24.344Z","type":"message"}
{"nick":"igorzi","message":"(since it's no longer just thread-pool)","date":"2011-08-23T21:38:33.759Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: on windows you need to distinguish between dir, file symlinks and junctions","date":"2011-08-23T21:39:15.475Z","type":"message"}
{"nick":"ryah","message":"uv_fs_ ?","date":"2011-08-23T21:40:08.615Z","type":"message"}
{"nick":"igorzi","message":"that would be fine with me.. and i guess we can leave uv_tp_custom as is","date":"2011-08-23T21:41:54.845Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: uv_object_t -- base class for uv_req_t and uv_handle_t?","date":"2011-08-23T21:42:17.038Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: re ipv6_only test: that's the point, ipv4 localhost != ipv6 localhost","date":"2011-08-23T21:42:22.943Z","type":"message"}
{"nick":"bnoordhuis","message":"though i might have mistyped ::0 again :/","date":"2011-08-23T21:42:34.611Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: not exactly","date":"2011-08-23T21:42:54.122Z","type":"message"}
{"nick":"ryah","message":"igorzi: sounds good","date":"2011-08-23T21:43:03.008Z","type":"message"}
{"nick":"ryah","message":"piscisaureus: uv_base_t ?","date":"2011-08-23T21:43:30.262Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: yeah but uv_object_t sounds better","date":"2011-08-23T21:43:51.063Z","type":"message"}
{"nick":"piscisaureus","message":"but base_t is also fine by me","date":"2011-08-23T21:43:58.504Z","type":"message"}
{"nick":"ryah","message":"it's so long","date":"2011-08-23T21:43:59.697Z","type":"message"}
{"nick":"piscisaureus","message":"you don;t use it a lot","date":"2011-08-23T21:44:07.492Z","type":"message"}
{"nick":"ryah","message":"true..","date":"2011-08-23T21:44:14.576Z","type":"message"}
{"nick":"ryah","message":"well whatver you want","date":"2011-08-23T21:44:29.566Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: hmm, looking at the test again...","date":"2011-08-23T21:45:27.125Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis:","date":"2011-08-23T21:45:41.789Z","type":"message"}
{"nick":"piscisaureus","message":"r = uv_udp_bind(&server1, $loopback:1234, 0);","date":"2011-08-23T21:45:41.930Z","type":"message"}
{"nick":"piscisaureus","message":"r2 = uv_udp_bind6(&server2, $loopback:1234, 0); <-- IPV6ONLY implied because 127.0.0.1:1234 is already taken","date":"2011-08-23T21:45:41.930Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: so this test always passes even if IPV6ONLY does not work","date":"2011-08-23T21:46:03.035Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I can't get it to fail on windows","date":"2011-08-23T21:46:37.643Z","type":"message"}
{"nick":"piscisaureus","message":"unless I disable the ipv4 server","date":"2011-08-23T21:46:43.584Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: also I'd like a test for the opposite, e.g. test that when IPV6ONLY *not* set dualstack sockets work","date":"2011-08-23T21:47:13.144Z","type":"message"}
{"nick":"igorzi","message":"latest benchmarks that i get with node http_simple (booting same 2-proc machine into linux and windows): https://gist.github.com/1166690","date":"2011-08-23T21:55:00.360Z","type":"message"}
{"nick":"ryah","message":"nice!","date":"2011-08-23T21:55:26.839Z","type":"message"}
{"nick":"igorzi","message":"ryah: piscisaureus: bnoordhuis: --^","date":"2011-08-23T21:55:27.781Z","type":"message"}
{"nick":"ryah","message":"igorzi: may i share this?","date":"2011-08-23T21:55:40.402Z","type":"message"}
{"nick":"bnoordhuis","message":"windows faster? i consider this a personal challenge, igorzi!","date":"2011-08-23T21:56:43.988Z","type":"message"}
{"nick":"bnoordhuis","message":"good work :)","date":"2011-08-23T21:56:54.733Z","type":"message"}
{"nick":"igorzi","message":"ryah: sure","date":"2011-08-23T21:57:04.133Z","type":"message"}
{"nick":"piscisaureus","message":"still a regression on linux of about 5%","date":"2011-08-23T21:57:10.513Z","type":"message"}
{"nick":"piscisaureus","message":"that is obviously not acceptable :-)","date":"2011-08-23T21:57:17.437Z","type":"message"}
{"nick":"igorzi","message":"and we still have that 0-read patch in the queue :)","date":"2011-08-23T21:57:23.102Z","type":"message"}
{"nick":"piscisaureus","action":"awaits ryah's tweet","date":"2011-08-23T21:58:02.556Z","type":"action"}
{"nick":"igorzi","message":"do we know why uv is slower than legacy?  is it libuv?  or node bindings?","date":"2011-08-23T21:58:40.973Z","type":"message"}
{"nick":"ryah","message":"igorzi: we need to figure that out","date":"2011-08-23T21:59:23.372Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: so this is because of the SetFileHandleNotificationMode patch?","date":"2011-08-23T22:00:23.600Z","type":"message"}
{"nick":"igorzi","message":"piscisaureus: this is combination of: GetQueuedCompletionStatusEx + shortcut (skip IOCP for sync) + many accepts","date":"2011-08-23T22:01:32.989Z","type":"message"}
{"nick":"igorzi","message":"many accepts was the most significant one","date":"2011-08-23T22:01:41.684Z","type":"message"}
{"nick":"piscisaureus","message":"ah of course","date":"2011-08-23T22:01:47.029Z","type":"message"}
{"nick":"bentkus","message":"nice, libuv on windows shines now","date":"2011-08-23T22:06:08.960Z","type":"message"}
{"nick":"bentkus","message":"gj","date":"2011-08-23T22:06:20.262Z","type":"message"}
{"nick":"bentkus","message":"keep that comming!","date":"2011-08-23T22:06:30.174Z","type":"message"}
{"nick":"mraleph","message":" so can I actually build node with MS cl now?","date":"2011-08-23T22:09:34.648Z","type":"message"}
{"nick":"ryah","message":"mraleph: MS cl?","date":"2011-08-23T22:10:50.229Z","type":"message"}
{"nick":"ryah","message":"mraleph: you can build with msvs use the generate-projects.bat","date":"2011-08-23T22:11:19.853Z","type":"message"}
{"nick":"mraleph","message":"msvc whatevar","date":"2011-08-23T22:11:21.771Z","type":"message"}
{"nick":"ryah","message":"mraleph: via GYP :)","date":"2011-08-23T22:11:32.229Z","type":"message"}
{"nick":"mraleph","message":"cl.exe is the name of the compiler","date":"2011-08-23T22:11:45.305Z","type":"message"}
{"nick":"ryah","message":"oh","date":"2011-08-23T22:11:50.015Z","type":"message"}
{"nick":"mraleph","message":"cool","date":"2011-08-23T22:11:51.318Z","type":"message"}
{"nick":"mraleph","message":"I should try that","date":"2011-08-23T22:12:06.626Z","type":"message"}
{"nick":"ryah","message":"it sure makes things easy when we compile ssl in the tree","date":"2011-08-23T22:25:45.563Z","type":"message"}
{"nick":"ryah","message":"like - dont have to worry if we build ia32 instead of x64","date":"2011-08-23T22:26:09.692Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u000242529dd\u000f \u000310\u000f/ (Makefile wscript)\u0002:\u000f ","date":"2011-08-23T22:27:47.063Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f waf: Don't build out/Debug/node_g - just out/Debug/node","date":"2011-08-23T22:27:47.208Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f This is to match how GYP does it. - http://git.io/5sg4FA","date":"2011-08-23T22:27:47.208Z","type":"message"}
{"nick":"CIA-75","message":"\u0002node:\u000f \u000303Ryan Dahl\u000f \u000307master\u000f * r\u0002b15ab5d\u000f \u000310\u000f/ (35 files in 13 dirs)\u0002:\u000f Upgrade V8 to 3.5.7 - http://git.io/vuPzAQ","date":"2011-08-23T22:27:47.413Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: sunos and linux have a system-wide ipv6 only setting - if it's enabled, the dual stack test would fail","date":"2011-08-23T22:37:38.178Z","type":"message"}
{"nick":"bnoordhuis","message":"but no one ever does so...","date":"2011-08-23T22:37:44.755Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: yeah for windows too","date":"2011-08-23T22:38:10.558Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: there are issues - windows has ipv6only on by default","date":"2011-08-23T22:39:07.478Z","type":"message"}
{"nick":"piscisaureus","message":"so to use dualstack you have to explicitly turn it off","date":"2011-08-23T22:39:18.234Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: seriously? gah","date":"2011-08-23T22:39:22.633Z","type":"message"}
{"nick":"piscisaureus","message":".... which I am doing if the user does not specify UV_IPV6ONLY","date":"2011-08-23T22:39:37.327Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, i was toying with the idea of doing that on the unices","date":"2011-08-23T22:39:58.465Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: but this will fail on 3k and xp (no dualstack support) and on machines that have no ip4 stack","date":"2011-08-23T22:39:59.808Z","type":"message"}
{"nick":"bnoordhuis","message":"windows 3000?","date":"2011-08-23T22:40:16.175Z","type":"message"}
{"nick":"piscisaureus","message":"yeah","date":"2011-08-23T22:40:19.836Z","type":"message"}
{"nick":"bnoordhuis","message":"rad!","date":"2011-08-23T22:40:22.895Z","type":"message"}
{"nick":"piscisaureus","message":"it's nice","date":"2011-08-23T22:40:38.392Z","type":"message"}
{"nick":"piscisaureus","message":"they have 9.394.093 new syscalls","date":"2011-08-23T22:40:49.484Z","type":"message"}
{"nick":"piscisaureus","message":"compared to windows 7","date":"2011-08-23T22:40:52.443Z","type":"message"}
{"nick":"igorzi","message":"ryah: piscisaureus: is the long-term goal to keep using these eio apis (that we're moving to libuv) for fs?  or are we going to have uv_file_t at some point (which is uv_stream_t), and implement it through IOCP?","date":"2011-08-23T22:41:10.114Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: I don't know how to deal with it if turning IPV6ONLY off fails","date":"2011-08-23T22:41:30.882Z","type":"message"}
{"nick":"piscisaureus","message":"right now I am just failing silently","date":"2011-08-23T22:41:39.180Z","type":"message"}
{"nick":"DrPizza","message":"igorzi: the latter I hope!","date":"2011-08-23T22:41:44.674Z","type":"message"}
{"nick":"piscisaureus","message":"ryah -> https://gist.github.com/1166783","date":"2011-08-23T22:41:59.972Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: can it plausibly fail? or are you talking about 2k3 and xp?","date":"2011-08-23T22:42:08.728Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: it always fails on 2k3 and xp, it also fails if the system has no ipv4 driver","date":"2011-08-23T22:42:44.815Z","type":"message"}
{"nick":"piscisaureus","message":"which is not very plausible","date":"2011-08-23T22:42:54.799Z","type":"message"}
{"nick":"piscisaureus","message":"(but removing ipv4 is possible - easy even)","date":"2011-08-23T22:43:07.457Z","type":"message"}
{"nick":"igorzi","message":"i'm asking because if this eio work is really just temporary then do we really need to implement these APIs using win32?  it'll be a lot faster to implement on top of crt","date":"2011-08-23T22:43:35.801Z","type":"message"}
{"nick":"igorzi","message":"ryah: piscisaureus: DrPizza: ---^","date":"2011-08-23T22:43:50.530Z","type":"message"}
{"nick":"DrPizza","message":"it will?","date":"2011-08-23T22:44:08.271Z","type":"message"}
{"nick":"DrPizza","message":"crt sux","date":"2011-08-23T22:44:12.827Z","type":"message"}
{"nick":"igorzi","message":"i know.. but if it's throw-away work anyway..","date":"2011-08-23T22:44:28.856Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: read/write/open might be obsoleten (though I don't expect that)","date":"2011-08-23T22:44:33.262Z","type":"message"}
{"nick":"ryah","message":"igorzi: i think we want both - the thread pool operations for manipulating the file system , and a file stream object","date":"2011-08-23T22:44:33.914Z","type":"message"}
{"nick":"DrPizza","message":"well we don't know how throwaway it really is","date":"2011-08-23T22:44:41.553Z","type":"message"}
{"nick":"ryah","message":"igorzi: i.e. not temporary","date":"2011-08-23T22:44:55.014Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: but all the other stuff, mkdir stat etc are definitely there to stay","date":"2011-08-23T22:45:05.856Z","type":"message"}
{"nick":"DrPizza","message":"and plenty o fthings can't use overlapped I/O anyway","date":"2011-08-23T22:45:06.010Z","type":"message"}
{"nick":"igorzi","message":"ok, got it.. that's what i wanted to clear up","date":"2011-08-23T22:45:20.574Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: if it's too much work stub it out with crt calls for now","date":"2011-08-23T22:45:47.849Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: I can imagine that you don't want to spend a day implementing stat at this point","date":"2011-08-23T22:46:19.222Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: actually I would be happy if you could get to a state that works as well/bad as libeio real soon","date":"2011-08-23T22:47:13.294Z","type":"message"}
{"nick":"igorzi","message":"piscisaureus: ok.. let me do that first (so that we could get to the same state as eio, but without pthreads)","date":"2011-08-23T22:49:17.773Z","type":"message"}
{"nick":"igorzi","message":"otherwise this has the potential to take very long time","date":"2011-08-23T22:49:29.874Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: there's also a lot of platform-dependent nitty details that you would need to solve. I'd rather do that after we get the boilerplate in place","date":"2011-08-23T22:50:28.942Z","type":"message"}
{"nick":"piscisaureus","message":"s/we/you/ :-)","date":"2011-08-23T22:51:22.142Z","type":"message"}
{"nick":"igorzi","message":"piscisaureus: yep, agreed :)","date":"2011-08-23T22:51:31.447Z","type":"message"}
{"nick":"ryah","message":"yes, fast > correct","date":"2011-08-23T22:52:07.090Z","type":"message"}
{"nick":"ryah","message":"we need to get pthread-win32 out of there quickly","date":"2011-08-23T22:52:32.334Z","type":"message"}
{"nick":"igorzi","message":"ok, for now I will get the infrastructure done, with using crt to implement eio functions. we can decide how to enhance that later.","date":"2011-08-23T22:53:02.074Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: \u0003\u000301https://gist.github.com/1166783\u0003\u000301 -- ok?","date":"2011-08-23T22:56:28.838Z","type":"message"}
{"nick":"ryah","message":"piscisaureus: sure - but do the work you intend to do before landing that","date":"2011-08-23T22:58:09.849Z","type":"message"}
{"nick":"piscisaureus","message":"ryah: ok","date":"2011-08-23T22:58:42.842Z","type":"message"}
{"nick":"piscisaureus","message":"bnoorhuis++","date":"2011-08-23T23:12:43.225Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis++","date":"2011-08-23T23:12:46.861Z","type":"message"}
{"nick":"piscisaureus","message":"bnoordhuis: this udp-ipv6 test is good!","date":"2011-08-23T23:12:58.363Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus: cool :)","date":"2011-08-23T23:13:05.763Z","type":"message"}
{"nick":"bnoordhuis","message":"thanks for testing","date":"2011-08-23T23:13:20.850Z","type":"message"}
{"nick":"igorzi","message":"piscisaureus: https://github.com/joyent/libuv/commit/1edba4006c5aca3ec583dfea7b0e059d83f1dab0#L2L145.. we no longer need to zero out overlapped?","date":"2011-08-23T23:17:35.334Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: no, why would we","date":"2011-08-23T23:17:59.601Z","type":"message"}
{"nick":"igorzi","message":"piscisaureus: nm.. because we now set Internal explicitely","date":"2011-08-23T23:18:06.235Z","type":"message"}
{"nick":"piscisaureus","message":"igorzi: yes. and we only look at the Internal field if it has a meaning to uv_process_something_req, instead of always in uv_poll","date":"2011-08-23T23:18:51.578Z","type":"message"}
{"nick":"ryah","message":"bnoordhuis: next week i want you to do perf work on the libuv backend - we need to get it up to legacy speeds...","date":"2011-08-23T23:54:33.547Z","type":"message"}
{"nick":"ryah","message":"im not sure exactly what we should look at though :-/","date":"2011-08-23T23:55:03.394Z","type":"message"}
{"nick":"ryah","message":"no low hanging fruit","date":"2011-08-23T23:55:07.888Z","type":"message"}
{"nick":"bnoordhuis","message":"ryah: sounds like a plan","date":"2011-08-23T23:55:25.755Z","type":"message"}
{"nick":"ryah","message":"https://twitter.com/#!/ronkorving/status/106147453719412736","date":"2011-08-23T23:55:34.743Z","type":"message"}
{"nick":"bnoordhuis","message":":/","date":"2011-08-23T23:55:49.179Z","type":"message"}
{"nick":"ryah","message":"maybe we can convince brenden to take a look too","date":"2011-08-23T23:57:01.472Z","type":"message"}
