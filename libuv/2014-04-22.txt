{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-04-22T00:00:01.640Z","type":"quit"}
{"nick":"ircretary","date":"2014-04-22T00:00:09.434Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 252 seconds","date":"2014-04-22T00:02:20.049Z","type":"quit"}
{"nick":"trevnorris","message":"ping indutny or any other libuv folks","date":"2014-04-22T00:02:52.230Z","type":"message"}
{"nick":"thlorenz","date":"2014-04-22T00:06:25.231Z","type":"join"}
{"nick":"emery","date":"2014-04-22T00:07:35.465Z","type":"join"}
{"nick":"mcavage","date":"2014-04-22T00:09:54.056Z","type":"join"}
{"nick":"seldo","reason":"Remote host closed the connection","date":"2014-04-22T00:17:43.468Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-04-22T00:19:34.860Z","type":"join"}
{"nick":"seldo","date":"2014-04-22T00:21:40.269Z","type":"join"}
{"nick":"rossk","date":"2014-04-22T00:25:52.902Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-04-22T00:26:20.551Z","type":"quit"}
{"nick":"thlorenz","date":"2014-04-22T00:27:56.843Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-04-22T00:29:25.514Z","type":"quit"}
{"nick":"thlorenz","date":"2014-04-22T00:29:40.351Z","type":"join"}
{"nick":"mcavage","reason":"Remote host closed the connection","date":"2014-04-22T00:31:48.466Z","type":"quit"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2014-04-22T00:37:36.670Z","type":"quit"}
{"nick":"Qard","reason":"Quit: Leaving.","date":"2014-04-22T00:46:44.006Z","type":"quit"}
{"nick":"zz_karupa","new_nick":"karupa","date":"2014-04-22T00:46:54.356Z","type":"nick"}
{"nick":"kazupon","date":"2014-04-22T00:59:12.495Z","type":"join"}
{"nick":"dap_","reason":"Quit: Leaving.","date":"2014-04-22T01:00:12.201Z","type":"quit"}
{"nick":"benvie","date":"2014-04-22T01:07:33.576Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 264 seconds","date":"2014-04-22T01:09:17.236Z","type":"quit"}
{"nick":"seldo","reason":"Remote host closed the connection","date":"2014-04-22T01:19:37.786Z","type":"quit"}
{"nick":"Qard","date":"2014-04-22T01:21:03.694Z","type":"join"}
{"nick":"seldo","date":"2014-04-22T01:22:03.057Z","type":"join"}
{"nick":"seldo","reason":"Remote host closed the connection","date":"2014-04-22T01:26:27.409Z","type":"quit"}
{"nick":"seldo","date":"2014-04-22T01:26:48.444Z","type":"join"}
{"nick":"rmg","date":"2014-04-22T01:38:10.614Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 252 seconds","date":"2014-04-22T01:42:35.912Z","type":"quit"}
{"nick":"julianduque","reason":"Ping timeout: 265 seconds","date":"2014-04-22T02:00:16.746Z","type":"quit"}
{"nick":"Ralith","reason":"Ping timeout: 240 seconds","date":"2014-04-22T02:11:38.431Z","type":"quit"}
{"nick":"EM3RY","date":"2014-04-22T02:13:45.973Z","type":"join"}
{"nick":"Ralith","date":"2014-04-22T02:33:45.218Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-04-22T02:36:06.951Z","type":"quit"}
{"nick":"thlorenz","date":"2014-04-22T02:36:39.901Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 240 seconds","date":"2014-04-22T02:40:50.646Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2014-04-22T02:40:50.859Z","type":"quit"}
{"nick":"octetcloud","date":"2014-04-22T02:40:55.418Z","type":"join"}
{"nick":"emery","reason":"Ping timeout: 252 seconds","date":"2014-04-22T02:42:11.989Z","type":"quit"}
{"nick":"seldo","reason":"Remote host closed the connection","date":"2014-04-22T02:42:37.340Z","type":"quit"}
{"nick":"EM3RY","reason":"Quit: ZNC - http://znc.in","date":"2014-04-22T02:44:24.451Z","type":"quit"}
{"nick":"emery","date":"2014-04-22T02:45:24.810Z","type":"join"}
{"nick":"Orborde","date":"2014-04-22T02:51:22.695Z","type":"join"}
{"nick":"Orborde","message":"Is there a way to write coroutines in libuv?","date":"2014-04-22T02:51:43.394Z","type":"message"}
{"nick":"Orborde","message":"Writing state machines to manage my TCP connections is a real drag.","date":"2014-04-22T02:51:59.430Z","type":"message"}
{"nick":"emery_","date":"2014-04-22T02:58:15.698Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2014-04-22T03:04:30.014Z","type":"quit"}
{"nick":"c4milo","date":"2014-04-22T03:04:47.260Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2014-04-22T03:05:08.278Z","type":"quit"}
{"nick":"c4milo","date":"2014-04-22T03:05:41.669Z","type":"join"}
{"nick":"bradleymeck_","date":"2014-04-22T03:10:24.056Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 276 seconds","date":"2014-04-22T03:10:38.989Z","type":"quit"}
{"nick":"bradleymeck_","message":"any objections/concerns to the debugger JSON API spawning itâ€™s own isolate?","date":"2014-04-22T03:15:03.895Z","type":"message"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2014-04-22T03:15:13.961Z","type":"quit"}
{"nick":"julianduque","date":"2014-04-22T03:15:40.495Z","type":"join"}
{"nick":"seldo","date":"2014-04-22T03:19:01.560Z","type":"join"}
{"nick":"c4milo","date":"2014-04-22T03:22:13.937Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-04-22T03:22:53.010Z","type":"join"}
{"nick":"seldo","reason":"Ping timeout: 240 seconds","date":"2014-04-22T03:23:38.380Z","type":"quit"}
{"nick":"emery_","reason":"Quit: Leaving","date":"2014-04-22T03:29:15.960Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-04-22T03:30:06.425Z","type":"quit"}
{"nick":"julianduque","reason":"Read error: Connection reset by peer","date":"2014-04-22T03:38:06.270Z","type":"quit"}
{"nick":"julianduque","date":"2014-04-22T03:40:07.236Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 252 seconds","date":"2014-04-22T03:54:35.875Z","type":"quit"}
{"nick":"rmg","date":"2014-04-22T04:01:03.688Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2014-04-22T04:02:17.178Z","type":"quit"}
{"nick":"c4milo","date":"2014-04-22T04:02:50.517Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 265 seconds","date":"2014-04-22T04:05:56.778Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 252 seconds","date":"2014-04-22T04:07:14.790Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 264 seconds","date":"2014-04-22T04:08:05.241Z","type":"quit"}
{"nick":"kazupon","date":"2014-04-22T04:27:31.618Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-04-22T04:34:37.521Z","type":"quit"}
{"nick":"mikeal","date":"2014-04-22T04:35:22.073Z","type":"join"}
{"nick":"groundwater","message":"is this anything node can use http://www.html5rocks.com/en/tutorials/developertools/async-call-stack/","date":"2014-04-22T04:45:57.990Z","type":"message"}
{"nick":"paulfryzel","date":"2014-04-22T04:47:16.095Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection timed out","date":"2014-04-22T04:50:06.931Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 265 seconds","date":"2014-04-22T04:51:51.724Z","type":"quit"}
{"nick":"kazupon","date":"2014-04-22T04:52:11.580Z","type":"join"}
{"nick":"bradleymeck_","message":"groundwater: working on it w/ new debugger but idk if we can always turn it on","date":"2014-04-22T04:54:17.588Z","type":"message"}
{"nick":"groundwater","message":"bradleymeck_: how does it work?","date":"2014-04-22T04:54:57.339Z","type":"message"}
{"nick":"bradleymeck_","message":"well the call stacks are just a fancy breakpoint handler","date":"2014-04-22T04:55:23.013Z","type":"message"}
{"nick":"groundwater","message":"it looks highly relevant to async-listener ","date":"2014-04-22T04:55:28.857Z","type":"message"}
{"nick":"bradleymeck_","message":"the evaluating old scopes im not quite sure","date":"2014-04-22T04:55:31.865Z","type":"message"}
{"nick":"groundwater","message":"bradleymeck_: oh wow, they can lookup values in old scopes too?","date":"2014-04-22T04:55:53.409Z","type":"message"}
{"nick":"bradleymeck_","message":"but i am not done reading things in v8 source","date":"2014-04-22T04:55:55.588Z","type":"message"}
{"nick":"groundwater","message":"can you tell i only skimmed the article :p","date":"2014-04-22T04:56:06.461Z","type":"message"}
{"nick":"bradleymeck_","message":"groundwater: yes errors keep old closures intact but I am not sure how to access them","date":"2014-04-22T04:56:20.978Z","type":"message"}
{"nick":"groundwater","message":"bradleymeck_: damn, awesome","date":"2014-04-22T04:57:14.378Z","type":"message"}
{"nick":"groundwater","message":"wait, how would you know to keep the old stack around if the error came much later?","date":"2014-04-22T04:57:30.820Z","type":"message"}
{"nick":"bradleymeck_","message":"groundwater: it happens at time of error creation?","date":"2014-04-22T04:57:58.683Z","type":"message"}
{"nick":"bradleymeck_","message":"not sure I understand","date":"2014-04-22T04:58:19.452Z","type":"message"}
{"nick":"groundwater","message":"bradleymeck_: maybe i'm confusing things","date":"2014-04-22T04:59:00.565Z","type":"message"}
{"nick":"groundwater","message":"but this looks cool, because it's what async-listener has been trying to do","date":"2014-04-22T04:59:26.845Z","type":"message"}
{"nick":"bradleymeck_","message":"groundwater: kind of","date":"2014-04-22T05:00:32.727Z","type":"message"}
{"nick":"groundwater","message":"are these \"async call stacks\" in v8 only available when debugging?","date":"2014-04-22T05:00:40.021Z","type":"message"}
{"nick":"bradleymeck_","message":"it cannot be turned on by default, too much of a perf hit, when a debugger is up it is ok","date":"2014-04-22T05:00:48.829Z","type":"message"}
{"nick":"bradleymeck_","message":"groundwater: unsure in the case of errors, the chained ones are. the old scopes appear to be retained in memory still though even w/o debugger","date":"2014-04-22T05:01:23.318Z","type":"message"}
{"nick":"bradleymeck_","message":"so chained errors == debugger only, old scopes == maybe?","date":"2014-04-22T05:01:54.777Z","type":"message"}
{"nick":"groundwater","message":"bradleymeck_: i guess async-listener will live another day","date":"2014-04-22T05:02:20.353Z","type":"message"}
{"nick":"bradleymeck_","message":"I also need to find a good way to break on error creation rather than throw","date":"2014-04-22T05:02:50.549Z","type":"message"}
{"nick":"groundwater","message":"bradleymeck_: so any time a new error object is created?","date":"2014-04-22T05:03:34.022Z","type":"message"}
{"nick":"bradleymeck_","message":"yes in C++ or JS land","date":"2014-04-22T05:03:45.017Z","type":"message"}
{"nick":"groundwater","message":"i vaguely recall this being possible","date":"2014-04-22T05:04:00.225Z","type":"message"}
{"nick":"bradleymeck_","message":"would be nice to have more time XD","date":"2014-04-22T05:04:06.717Z","type":"message"}
{"nick":"groundwater","message":"when's your deadline?","date":"2014-04-22T05:04:15.781Z","type":"message"}
{"nick":"bradleymeck_","message":"groundwater: oh? the internal/c++ calls are my problem when trying to setup a breakpoint","date":"2014-04-22T05:04:36.523Z","type":"message"}
{"nick":"bradleymeck_","message":"groundwater: no deadline, just not too much time to work on it","date":"2014-04-22T05:04:47.454Z","type":"message"}
{"nick":"groundwater","message":"bradleymeck_: are there a lot of c++ errors genrated normally?","date":"2014-04-22T05:06:22.243Z","type":"message"}
{"nick":"groundwater","message":"i guess TypeErrors","date":"2014-04-22T05:06:30.209Z","type":"message"}
{"nick":"bradleymeck_","message":"all the internal ones basically","date":"2014-04-22T05:06:43.599Z","type":"message"}
{"nick":"groundwater","message":"damn...","date":"2014-04-22T05:06:58.019Z","type":"message"}
{"nick":"bradleymeck_","message":"catching them during throw is pretty easy, and I can set breakpoints on Error as a function","date":"2014-04-22T05:07:25.562Z","type":"message"}
{"nick":"bradleymeck_","message":"but it doesnâ€™t seem to work","date":"2014-04-22T05:07:36.763Z","type":"message"}
{"nick":"bradleymeck_","message":"there might be something during the stack trace API init but havent looked","date":"2014-04-22T05:07:57.195Z","type":"message"}
{"nick":"groundwater","message":"you're past my limit of paged0in knowledge","date":"2014-04-22T05:08:14.999Z","type":"message"}
{"nick":"groundwater","message":"paged-in*","date":"2014-04-22T05:08:15.209Z","type":"message"}
{"nick":"bradleymeck_","message":"im past my knowledge and am still learning the internals XD","date":"2014-04-22T05:08:44.101Z","type":"message"}
{"nick":"groundwater","message":"bradleymeck_: that's awesome, do you have a repo I can look at?","date":"2014-04-22T05:09:00.583Z","type":"message"}
{"nick":"groundwater","message":"i would love to level up here","date":"2014-04-22T05:09:04.651Z","type":"message"}
{"nick":"bradleymeck_","message":"no, still learning writing one off scripts until then","date":"2014-04-22T05:09:31.247Z","type":"message"}
{"nick":"groundwater","message":"bradleymeck_: this is a fucking cool area","date":"2014-04-22T05:10:13.456Z","type":"message"}
{"nick":"groundwater","message":"anything you got, i think people would love to see it","date":"2014-04-22T05:10:27.914Z","type":"message"}
{"nick":"bradleymeck_","message":"ummm â€¦ debug-debugger.js is a big help if you read it and want to learn more about the JSON debugger api, v8-profiler.h is also a good one but most of it is me running around trying to figure out where things","date":"2014-04-22T05:10:36.672Z","type":"message"}
{"nick":"bradleymeck_","message":"groundwater: I will have a new debugger built up in the next month or two","date":"2014-04-22T05:10:51.750Z","type":"message"}
{"nick":"bradleymeck_","message":"https://github.com/joyent/node/issues/7473","date":"2014-04-22T05:11:08.762Z","type":"message"}
{"nick":"groundwater","message":"bradleymeck_: that's equally awesome and ambitious ","date":"2014-04-22T05:11:59.556Z","type":"message"}
{"nick":"bradleymeck_","message":"its not as ambitious as people think, but it is a lot of work / time","date":"2014-04-22T05:12:15.164Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2014-04-22T05:13:48.494Z","type":"quit"}
{"nick":"groundwater","message":"bradleymeck_: it looks cool from the outside","date":"2014-04-22T05:14:18.524Z","type":"message"}
{"nick":"c4milo","date":"2014-04-22T05:14:31.494Z","type":"join"}
{"nick":"bradleymeck_","message":"groundwater: right now it is a wishlist, they all seem doable, just going to be rather massive in scale","date":"2014-04-22T05:16:08.694Z","type":"message"}
{"nick":"bradleymeck_","message":"made a terrible proof of concept for the debugger client https://gist.github.com/bmeck/7f5bf6b0672e9d9aa1a4","date":"2014-04-22T05:16:29.651Z","type":"message"}
{"nick":"groundwater","message":"bradleymeck_: cool, i shall check out ","date":"2014-04-22T05:17:34.495Z","type":"message"}
{"nick":"groundwater","message":"thanks!","date":"2014-04-22T05:17:44.955Z","type":"message"}
{"nick":"bradleymeck_","message":"works enough to play around and keep extending","date":"2014-04-22T05:17:56.483Z","type":"message"}
{"nick":"c4milo","reason":"Ping timeout: 252 seconds","date":"2014-04-22T05:19:17.790Z","type":"quit"}
{"nick":"kazupon","reason":"Read error: Connection timed out","date":"2014-04-22T05:23:14.258Z","type":"quit"}
{"nick":"kazupon","date":"2014-04-22T05:27:43.467Z","type":"join"}
{"nick":"julianduque","reason":"Remote host closed the connection","date":"2014-04-22T05:27:50.581Z","type":"quit"}
{"nick":"hueniverse","reason":"Ping timeout: 276 seconds","date":"2014-04-22T05:36:15.129Z","type":"quit"}
{"nick":"hueniverse","date":"2014-04-22T05:39:52.777Z","type":"join"}
{"nick":"einaros_","new_nick":"einaros","date":"2014-04-22T05:44:42.141Z","type":"nick"}
{"nick":"paulfryzel","date":"2014-04-22T05:47:59.053Z","type":"join"}
{"nick":"Qard","reason":"Quit: Leaving.","date":"2014-04-22T05:48:25.140Z","type":"quit"}
{"nick":"Kakera","date":"2014-04-22T05:51:10.394Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 265 seconds","date":"2014-04-22T05:52:45.838Z","type":"quit"}
{"nick":"rvagg","reason":"Ping timeout: 240 seconds","date":"2014-04-22T05:54:26.652Z","type":"quit"}
{"nick":"rvagg","date":"2014-04-22T05:59:46.654Z","type":"join"}
{"nick":"julianduque","date":"2014-04-22T06:02:41.561Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection timed out","date":"2014-04-22T06:02:43.946Z","type":"quit"}
{"nick":"WalrusPony","reason":"Read error: Connection reset by peer","date":"2014-04-22T06:04:06.472Z","type":"quit"}
{"nick":"WalrusPony","date":"2014-04-22T06:04:47.603Z","type":"join"}
{"nick":"kazupon","date":"2014-04-22T06:11:58.334Z","type":"join"}
{"nick":"roxlu","reason":"Ping timeout: 250 seconds","date":"2014-04-22T06:19:34.018Z","type":"quit"}
{"nick":"roxlu","date":"2014-04-22T06:20:22.481Z","type":"join"}
{"nick":"mogill","reason":"Quit: mogill","date":"2014-04-22T06:36:44.199Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-22T06:48:44.089Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 265 seconds","date":"2014-04-22T06:53:39.935Z","type":"quit"}
{"nick":"m76","date":"2014-04-22T06:54:41.254Z","type":"join"}
{"nick":"Kakera","reason":"Ping timeout: 240 seconds","date":"2014-04-22T07:00:58.386Z","type":"quit"}
{"nick":"c4milo","date":"2014-04-22T07:02:53.534Z","type":"join"}
{"nick":"bradleymeck_","reason":"Quit: bradleymeck_","date":"2014-04-22T07:05:34.845Z","type":"quit"}
{"nick":"prettyrobots","date":"2014-04-22T07:07:19.989Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 264 seconds","date":"2014-04-22T07:07:29.242Z","type":"quit"}
{"nick":"stephank","reason":"Ping timeout: 240 seconds","date":"2014-04-22T07:15:38.550Z","type":"quit"}
{"nick":"petka_","date":"2014-04-22T07:19:27.785Z","type":"join"}
{"nick":"rendar","date":"2014-04-22T07:30:16.656Z","type":"join"}
{"nick":"saghul","date":"2014-04-22T07:41:10.558Z","type":"join"}
{"nick":"saghul_","date":"2014-04-22T07:41:11.548Z","type":"join"}
{"nick":"saghul_","reason":"Client Quit","date":"2014-04-22T07:41:21.802Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-22T07:49:32.092Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 265 seconds","date":"2014-04-22T07:54:04.779Z","type":"quit"}
{"nick":"hz","date":"2014-04-22T08:14:57.083Z","type":"join"}
{"nick":"paulfryzel","date":"2014-04-22T08:50:19.007Z","type":"join"}
{"nick":"c4milo","date":"2014-04-22T08:51:04.288Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 265 seconds","date":"2014-04-22T08:54:58.756Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 252 seconds","date":"2014-04-22T08:55:50.095Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033SaÃºl Ibarra CorretgÃ©\u000f \u00037master\u000f * \u0002d86d866\u0002 : doc: clarify uv_try_write return values - http://git.io/yaWIIQ","date":"2014-04-22T09:00:07.791Z","type":"message"}
{"nick":"stephank","date":"2014-04-22T09:01:29.549Z","type":"join"}
{"nick":"indutny","message":"heya","date":"2014-04-22T09:02:35.116Z","type":"message"}
{"nick":"hz","date":"2014-04-22T09:03:02.720Z","type":"quit"}
{"nick":"stephank","reason":"Ping timeout: 252 seconds","date":"2014-04-22T09:06:46.939Z","type":"quit"}
{"nick":"stephank","date":"2014-04-22T09:08:12.302Z","type":"join"}
{"nick":"hz","date":"2014-04-22T09:16:32.090Z","type":"join"}
{"nick":"seldo","date":"2014-04-22T09:25:45.021Z","type":"join"}
{"nick":"jnugent","date":"2014-04-22T09:27:53.826Z","type":"join"}
{"nick":"seldo","reason":"Ping timeout: 252 seconds","date":"2014-04-22T09:30:05.743Z","type":"quit"}
{"nick":"txdv_","date":"2014-04-22T09:32:07.247Z","type":"join"}
{"nick":"txdv_","message":"is there a way to increase the ref counter in the uv loop in node","date":"2014-04-22T09:32:17.064Z","type":"message"}
{"nick":"txdv_","message":"so it wont stop doing stuff until i say so","date":"2014-04-22T09:32:26.097Z","type":"message"}
{"nick":"txdv_","message":"timer has a ref function","date":"2014-04-22T09:34:54.946Z","type":"message"}
{"nick":"saghul","message":"txdv_: the refcount is no longer a counter in the loop, you need a ref'd handle","date":"2014-04-22T09:35:02.723Z","type":"message"}
{"nick":"saghul","message":"a ref'd timer, async, anything, will keep the loop alive","date":"2014-04-22T09:35:25.581Z","type":"message"}
{"nick":"txdv_","message":"o yeah","date":"2014-04-22T09:46:14.712Z","type":"message"}
{"nick":"txdv_","message":"i remmber now that they moved it","date":"2014-04-22T09:46:19.639Z","type":"message"}
{"nick":"txdv_","message":"node doesnt expose async","date":"2014-04-22T09:46:52.068Z","type":"message"}
{"nick":"janjongboom","date":"2014-04-22T09:47:06.335Z","type":"join"}
{"nick":"txdv_","message":"so setTimeout with super high number is the only way to go?","date":"2014-04-22T09:49:24.576Z","type":"message"}
{"nick":"txdv_","message":":D","date":"2014-04-22T09:49:25.429Z","type":"message"}
{"nick":"paulfryzel","date":"2014-04-22T09:50:59.022Z","type":"join"}
{"nick":"dqminh","date":"2014-04-22T09:52:03.407Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 265 seconds","date":"2014-04-22T09:55:52.754Z","type":"quit"}
{"nick":"inolen","date":"2014-04-22T10:07:44.985Z","type":"join"}
{"nick":"rendar","reason":"Read error: Connection reset by peer","date":"2014-04-22T10:08:20.041Z","type":"quit"}
{"nick":"inolen1","reason":"Read error: Connection reset by peer","date":"2014-04-22T10:08:36.384Z","type":"quit"}
{"nick":"janjongboom","reason":"Ping timeout: 240 seconds","date":"2014-04-22T10:23:58.419Z","type":"quit"}
{"nick":"janjongboom","date":"2014-04-22T10:25:10.662Z","type":"join"}
{"nick":"karupa","new_nick":"zz_karupa","date":"2014-04-22T10:31:47.874Z","type":"nick"}
{"nick":"rendar","date":"2014-04-22T10:37:38.047Z","type":"join"}
{"nick":"c4milo","date":"2014-04-22T10:39:25.936Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 240 seconds","date":"2014-04-22T10:43:38.369Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-22T10:51:47.957Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 265 seconds","date":"2014-04-22T10:56:17.751Z","type":"quit"}
{"nick":"rmg","date":"2014-04-22T11:08:33.815Z","type":"join"}
{"nick":"jnugent","reason":"Quit: Computer has gone to sleep.","date":"2014-04-22T11:11:37.495Z","type":"quit"}
{"nick":"jnugent","date":"2014-04-22T11:12:35.635Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 252 seconds","date":"2014-04-22T11:13:20.007Z","type":"quit"}
{"nick":"jnugent","reason":"Client Quit","date":"2014-04-22T11:13:30.603Z","type":"quit"}
{"nick":"jnugent","date":"2014-04-22T11:14:37.831Z","type":"join"}
{"nick":"jnugent","reason":"Client Quit","date":"2014-04-22T11:16:00.942Z","type":"quit"}
{"nick":"jnugent","date":"2014-04-22T11:16:54.754Z","type":"join"}
{"nick":"jnugent","reason":"Client Quit","date":"2014-04-22T11:17:52.931Z","type":"quit"}
{"nick":"jnugent","date":"2014-04-22T11:18:52.068Z","type":"join"}
{"nick":"jnugent","reason":"Client Quit","date":"2014-04-22T11:19:15.458Z","type":"quit"}
{"nick":"jnugent","date":"2014-04-22T11:20:08.801Z","type":"join"}
{"nick":"jnugent","reason":"Client Quit","date":"2014-04-22T11:21:25.091Z","type":"quit"}
{"nick":"jnugent","date":"2014-04-22T11:22:20.509Z","type":"join"}
{"nick":"jnugent","reason":"Client Quit","date":"2014-04-22T11:23:18.116Z","type":"quit"}
{"nick":"jnugent","date":"2014-04-22T11:24:15.628Z","type":"join"}
{"nick":"jnugent","reason":"Client Quit","date":"2014-04-22T11:25:24.091Z","type":"quit"}
{"nick":"jnugent","date":"2014-04-22T11:26:21.842Z","type":"join"}
{"nick":"jnugent","reason":"Client Quit","date":"2014-04-22T11:29:52.566Z","type":"quit"}
{"nick":"mraleph","date":"2014-04-22T11:35:52.407Z","type":"join"}
{"nick":"mraleph1","reason":"Ping timeout: 240 seconds","date":"2014-04-22T11:38:02.536Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-22T11:52:33.047Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 265 seconds","date":"2014-04-22T11:57:11.891Z","type":"quit"}
{"nick":"thlorenz","date":"2014-04-22T12:07:12.372Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-04-22T12:12:43.285Z","type":"quit"}
{"nick":"kkaefer","message":"I'm integrating a libuv event loop in another event loop. how can I tell libuv about my function that it needs to call to wake up my other event loop?","date":"2014-04-22T12:14:54.978Z","type":"message"}
{"nick":"kkaefer","message":"i.e. libuv calls that function instead of waking up its own event loop (which is run step by step by the other event loop)","date":"2014-04-22T12:15:22.574Z","type":"message"}
{"nick":"saghul","message":"kkaefer: not sure I follow, can you elaborate? if it's a normal function you can use an idle or prepare handle to call a function on each iteration fo the loop","date":"2014-04-22T12:21:06.966Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Fedor Indutny\u000f \u00037master\u000f * \u00020f3b724\u0002 : crypto: work around OpenSSL oddness - http://git.io/eXKTag","date":"2014-04-22T12:21:14.632Z","type":"message"}
{"nick":"kkaefer","message":"saghul: I'm trying to integrate GLFW's glfwWaitEvents()","date":"2014-04-22T12:21:51.494Z","type":"message"}
{"nick":"kkaefer","message":"this function waits until there is any UI interaction","date":"2014-04-22T12:22:01.359Z","type":"message"}
{"nick":"kkaefer","message":"and returns as soon as there is","date":"2014-04-22T12:22:10.647Z","type":"message"}
{"nick":"kkaefer","message":"so I have two options:","date":"2014-04-22T12:22:19.757Z","type":"message"}
{"nick":"kkaefer","message":"call glfw's event processing functions from libuv's loop","date":"2014-04-22T12:22:37.006Z","type":"message"}
{"nick":"kkaefer","message":"or call libuv's event processing function (uv_run(..., UV_RUN_NOWAIT)) from glfw's event loop","date":"2014-04-22T12:23:00.569Z","type":"message"}
{"nick":"kkaefer","message":"in the first case, libuv's loop doesn't wake up even if glfw's event loop queue received an event","date":"2014-04-22T12:23:23.746Z","type":"message"}
{"nick":"kkaefer","message":"(like the mouse pointer moved)","date":"2014-04-22T12:23:30.446Z","type":"message"}
{"nick":"kkaefer","message":"in the second case, glfw's event loop doesn't wake up if libuv signals an event to the event loop that I run occasionally with uv_run()","date":"2014-04-22T12:24:02.872Z","type":"message"}
{"nick":"kkaefer","message":"since glfw doesn't know anything about libuv events naturally","date":"2014-04-22T12:24:15.527Z","type":"message"}
{"nick":"kkaefer","message":"so I'm thinking that I could somehow tell libuv that if it wants to wake up a certain loop, \"here's this call back function to call in order to have this loop woken up\"","date":"2014-04-22T12:25:27.917Z","type":"message"}
{"nick":"kkaefer","message":"I'm looking at libuv's uv_async_send implementation as an example, and it calls uv__async_send","date":"2014-04-22T12:27:02.515Z","type":"message"}
{"nick":"kkaefer","message":"which only outputs to virtual file descriptors","date":"2014-04-22T12:27:14.391Z","type":"message"}
{"nick":"kkaefer","message":"but doesn't seem to call any user-supplied callbacks","date":"2014-04-22T12:27:24.102Z","type":"message"}
{"nick":"saghul","message":"you can use a uv_prepare_t handle","date":"2014-04-22T12:27:46.326Z","type":"message"}
{"nick":"saghul","message":"if will call the supplied function every loop ietartion, if it's started (the handle)","date":"2014-04-22T12:28:19.917Z","type":"message"}
{"nick":"kkaefer","message":"well, my issue is that the libuv loop isn't even woken up, so there's no loop iteration","date":"2014-04-22T12:28:47.258Z","type":"message"}
{"nick":"kkaefer","message":"my issue is that I have two functions that block when there are no events","date":"2014-04-22T12:29:13.311Z","type":"message"}
{"nick":"sinclair|work_","date":"2014-04-22T12:29:21.762Z","type":"join"}
{"nick":"kkaefer","message":"but I can only call one of them of course","date":"2014-04-22T12:29:22.799Z","type":"message"}
{"nick":"saghul","message":"hum","date":"2014-04-22T12:29:23.747Z","type":"message"}
{"nick":"sinclair|work","reason":"Read error: Connection reset by peer","date":"2014-04-22T12:29:32.297Z","type":"quit"}
{"nick":"sinclair|work_","new_nick":"sinclair|work","date":"2014-04-22T12:29:40.286Z","type":"nick"}
{"nick":"kkaefer","message":"and I don't want to use uv_idle or wake up 100x per second, because that would be an ugly hack","date":"2014-04-22T12:30:00.353Z","type":"message"}
{"nick":"kkaefer","message":"and waste power","date":"2014-04-22T12:30:07.011Z","type":"message"}
{"nick":"sinclair|work","reason":"Read error: Connection reset by peer","date":"2014-04-22T12:30:39.978Z","type":"quit"}
{"nick":"sinclair|work","date":"2014-04-22T12:31:13.630Z","type":"join"}
{"nick":"saghul","message":"if you call uv_run with NOWAIT every time you poll for events, callbacks will be fired immediately (if there is anything pending)","date":"2014-04-22T12:32:15.765Z","type":"message"}
{"nick":"saghul","message":"if you call uv_run with NOWAIT every time you poll for events, callbacks will be fired immediately (if there is anything pending)","date":"2014-04-22T12:32:29.313Z","type":"message"}
{"nick":"kkaefer","message":"saghul: I know that, but the call to glfwWaitEvents() is blocking (it behaves like uv_run(..., UV_RUN_ONCE)","date":"2014-04-22T12:33:58.471Z","type":"message"}
{"nick":"kkaefer","message":"so I don't have any point where I can call uv_run with nowait","date":"2014-04-22T12:34:18.922Z","type":"message"}
{"nick":"kkaefer","message":"because my other event loop dispatch function is blocking","date":"2014-04-22T12:34:30.710Z","type":"message"}
{"nick":"kkaefer","message":"so I either have to wake up my libuv loop when the GLFW LOOP receives events","date":"2014-04-22T12:35:40.296Z","type":"message"}
{"nick":"kkaefer","message":"or wake up my GLFW loop if the LIBUV LOOP receives events","date":"2014-04-22T12:35:49.540Z","type":"message"}
{"nick":"thlorenz","date":"2014-04-22T12:35:53.451Z","type":"join"}
{"nick":"kkaefer","message":"I'm currently not seeing a way to do either","date":"2014-04-22T12:36:00.433Z","type":"message"}
{"nick":"saghul","message":"kkaefer: AFAIS, you can't run them both at the same time, unless you do it in different threads, that is","date":"2014-04-22T12:36:36.102Z","type":"message"}
{"nick":"saghul","reason":"\"Once you know what it is you want to be true, instinct is a very useful device for enabling you to know that it is\"","date":"2014-04-22T12:37:00.685Z","type":"part"}
{"nick":"saghul","date":"2014-04-22T12:37:05.849Z","type":"join"}
{"nick":"kkaefer","message":"sure, so I'm exploringways to wake up other event loops","date":"2014-04-22T12:46:26.209Z","type":"message"}
{"nick":"kkaefer","message":"GLFW has glfwPostEmptyEvent() that can be called from any thread to wake up the blocking glfwWaitEvents() call","date":"2014-04-22T12:46:55.228Z","type":"message"}
{"nick":"saghul","message":"kaeso: libuv has uv_async_send, which will do the equivalent","date":"2014-04-22T12:47:28.161Z","type":"message"}
{"nick":"kkaefer","message":"so if libuv e.g. provides a callback to wake up an event loop, I could use that","date":"2014-04-22T12:47:33.981Z","type":"message"}
{"nick":"kkaefer","message":"saghul: I know about uv_async_send(), but that only works if the libuv event loop is actually running/blocking","date":"2014-04-22T12:48:16.636Z","type":"message"}
{"nick":"saghul","message":"sorry, I'm lost :-/ if the loop is not running what do you need to be woken up?","date":"2014-04-22T12:49:00.877Z","type":"message"}
{"nick":"kkaefer","message":"well, I'm only running it with uv_run(..., UV_RUN_NOWAIT)","date":"2014-04-22T12:49:27.101Z","type":"message"}
{"nick":"kkaefer","message":"so the loop is never putting the thread to sloop","date":"2014-04-22T12:49:42.239Z","type":"message"}
{"nick":"kkaefer","message":"and thus can't be woken up","date":"2014-04-22T12:49:47.020Z","type":"message"}
{"nick":"kkaefer","message":"the actual loop that is running/sleeping is glfw's loop","date":"2014-04-22T12:49:57.334Z","type":"message"}
{"nick":"saghul","message":"ok, lets see: you have 1 thread, in which the glfw loop is running / sleeping","date":"2014-04-22T12:51:11.985Z","type":"message"}
{"nick":"saghul","message":"is libuv running on that thread too? or a different one?","date":"2014-04-22T12:51:23.558Z","type":"message"}
{"nick":"kkaefer","message":"the libuv loop is running in that same thread too","date":"2014-04-22T12:51:39.920Z","type":"message"}
{"nick":"kkaefer","message":"(libuv of course has other threads, e.g. for the work pool)","date":"2014-04-22T12:51:48.230Z","type":"message"}
{"nick":"saghul","message":"ok, then both cannot run at the same time, of course, so what do you need libuv to call?","date":"2014-04-22T12:52:18.086Z","type":"message"}
{"nick":"kkaefer","message":"I'm running uv_queue_work, to perform work in the thread pool","date":"2014-04-22T12:52:43.945Z","type":"message"}
{"nick":"kkaefer","message":"which works fine","date":"2014-04-22T12:52:45.968Z","type":"message"}
{"nick":"kkaefer","message":"but they only \"return\"/get their after callback called once I move the mouse","date":"2014-04-22T12:53:00.665Z","type":"message"}
{"nick":"kkaefer","message":"since glfw is blocking for UI events in the main thread","date":"2014-04-22T12:53:08.399Z","type":"message"}
{"nick":"kkaefer","message":"which is where I started the uv work request from","date":"2014-04-22T12:53:17.398Z","type":"message"}
{"nick":"paulfryzel","date":"2014-04-22T12:53:22.000Z","type":"join"}
{"nick":"saghul","message":"aha!","date":"2014-04-22T12:53:35.729Z","type":"message"}
{"nick":"saghul","message":"when the work is complete you'll get the after_work callbacks called, but the loop needs to be running","date":"2014-04-22T12:54:12.366Z","type":"message"}
{"nick":"kkaefer","message":"yeah, I know that","date":"2014-04-22T12:54:34.252Z","type":"message"}
{"nick":"kkaefer","message":"I know /why/ it's not working right now","date":"2014-04-22T12:54:41.017Z","type":"message"}
{"nick":"kkaefer","message":"but I'm looking for ways to make it work :)","date":"2014-04-22T12:54:47.404Z","type":"message"}
{"nick":"kkaefer","message":"sadly, https://nikhilm.github.io/uvbook/eventloops.html#embedding-libuv-s-event-loop-in-other-libraries seems pretty empty","date":"2014-04-22T12:55:07.263Z","type":"message"}
{"nick":"mikolalysenko","date":"2014-04-22T12:55:34.039Z","type":"join"}
{"nick":"saghul","message":"you could run the loop until the work is done but that would froze your UI","date":"2014-04-22T12:56:24.048Z","type":"message"}
{"nick":"kkaefer","message":"yes","date":"2014-04-22T12:56:49.288Z","type":"message"}
{"nick":"kkaefer","message":"(also, there is almost always some work being done)","date":"2014-04-22T12:57:09.967Z","type":"message"}
{"nick":"saghul","message":"the thing is, without having the libuv loop running, there is no way for libuv to tell you that the work completed, so it's kind og a chicken-and-egg problem","date":"2014-04-22T12:57:31.281Z","type":"message"}
{"nick":"kkaefer","message":"I'm calling glfwPostEmptyEvent(), which wakes up GLFW's event loop as the last thing in the work callback","date":"2014-04-22T12:57:40.901Z","type":"message"}
{"nick":"kkaefer","message":"but of course there are race conditions","date":"2014-04-22T12:57:48.674Z","type":"message"}
{"nick":"kkaefer","message":"so it only works in 70-80% of all cases","date":"2014-04-22T12:57:59.416Z","type":"message"}
{"nick":"saghul","message":"(by work I mean the function you passed to uv_queue_work)","date":"2014-04-22T12:58:05.065Z","type":"message"}
{"nick":"paulfryzel","reason":"Ping timeout: 265 seconds","date":"2014-04-22T12:58:05.843Z","type":"quit"}
{"nick":"kkaefer","message":"yeah","date":"2014-04-22T12:58:10.154Z","type":"message"}
{"nick":"saghul","message":"but your after_work_cb won't be called unless libuv is running. Have you tried calling that PortEmptyEvent as the last thing in the work function itself?","date":"2014-04-22T13:00:20.389Z","type":"message"}
{"nick":"kkaefer","message":"yes, but as I said there are race conditions and it only works in 70-80% of all cases","date":"2014-04-22T13:00:43.774Z","type":"message"}
{"nick":"saghul","message":"(ie, not in the after_work callback)","date":"2014-04-22T13:00:44.733Z","type":"message"}
{"nick":"saghul","message":"doh","date":"2014-04-22T13:00:49.194Z","type":"message"}
{"nick":"saghul","message":"isn't that function thread-safe?","date":"2014-04-22T13:00:59.489Z","type":"message"}
{"nick":"kkaefer","message":"it is","date":"2014-04-22T13:01:03.551Z","type":"message"}
{"nick":"kkaefer","message":"but there are cases where the glfw loop is woken up, calls the libuv loop","date":"2014-04-22T13:01:17.483Z","type":"message"}
{"nick":"kkaefer","message":"but the uv_work_queue has not quite returned yet and scheduled the after callback for execution","date":"2014-04-22T13:01:32.117Z","type":"message"}
{"nick":"kkaefer","message":"(i.e. a race condition)","date":"2014-04-22T13:01:38.806Z","type":"message"}
{"nick":"saghul","message":"I see","date":"2014-04-22T13:01:40.129Z","type":"message"}
{"nick":"kkaefer","message":"but that is expected behavior and not a bug","date":"2014-04-22T13:01:45.993Z","type":"message"}
{"nick":"saghul","message":"yep","date":"2014-04-22T13:01:50.807Z","type":"message"}
{"nick":"saghul","message":"can you post a specific type of event?","date":"2014-04-22T13:02:10.742Z","type":"message"}
{"nick":"kkaefer","message":"no","date":"2014-04-22T13:02:35.009Z","type":"message"}
{"nick":"kkaefer","message":"in glfw, the event wake up is platform specific","date":"2014-04-22T13:06:04.320Z","type":"message"}
{"nick":"kkaefer","message":"e.g. on os x, it wakes up the nsrunloop that it uses internally by posting an empty mouse cursor move event","date":"2014-04-22T13:06:23.957Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 276 seconds","date":"2014-04-22T13:06:41.899Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-04-22T13:19:03.779Z","type":"join"}
{"nick":"saghul","message":"hum, I can't really think of a way to do this in a race free way without using some lock which you use to set some flag in the work request","date":"2014-04-22T13:20:30.240Z","type":"message"}
{"nick":"AlexisMocha_","date":"2014-04-22T13:22:58.620Z","type":"join"}
{"nick":"AlexisMocha","reason":"Ping timeout: 264 seconds","date":"2014-04-22T13:24:17.253Z","type":"quit"}
{"nick":"nifoc","reason":"Remote host closed the connection","date":"2014-04-22T13:27:18.803Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-04-22T13:31:59.505Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 255 seconds","date":"2014-04-22T13:41:59.588Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-04-22T13:47:06.059Z","type":"join"}
{"nick":"paulfryzel","date":"2014-04-22T13:54:03.022Z","type":"join"}
{"nick":"sinclair|work","reason":"Quit: ChatZilla 0.9.90.1 [Firefox 28.0/20140314220517]","date":"2014-04-22T13:57:55.481Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 265 seconds","date":"2014-04-22T13:58:59.847Z","type":"quit"}
{"nick":"bradleymeck_","date":"2014-04-22T14:01:15.219Z","type":"join"}
{"nick":"daviddias","date":"2014-04-22T14:05:20.490Z","type":"join"}
{"nick":"nifoc","date":"2014-04-22T14:05:44.967Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-04-22T14:07:50.699Z","type":"quit"}
{"nick":"kazupon","date":"2014-04-22T14:08:53.473Z","type":"join"}
{"nick":"thlorenz","date":"2014-04-22T14:10:17.083Z","type":"join"}
{"nick":"dqminh","reason":"\"Textual IRC Client: www.textualapp.com\"","date":"2014-04-22T14:11:08.647Z","type":"part"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2014-04-22T14:13:29.294Z","type":"quit"}
{"nick":"seldo","date":"2014-04-22T14:14:10.631Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 276 seconds","date":"2014-04-22T14:17:32.822Z","type":"quit"}
{"nick":"seldo","reason":"Ping timeout: 240 seconds","date":"2014-04-22T14:18:50.487Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-04-22T14:26:21.829Z","type":"join"}
{"nick":"kkaefer","message":"saghul: I solved the problem by looking at https://github.com/joyent/libuv/blob/master/test/test-embed.c","date":"2014-04-22T14:37:07.911Z","type":"message"}
{"nick":"kkaefer","message":"basically, the idea is that you listen to the file descriptor of the main loop in another thread","date":"2014-04-22T14:37:25.796Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-04-22T14:37:46.265Z","type":"quit"}
{"nick":"kkaefer","message":"when there are events in the queue, you send an event to the other event loop (here using glfwPostEmptyEvent())","date":"2014-04-22T14:37:51.205Z","type":"message"}
{"nick":"saghul","message":"yep, that's one way of doing it, not very portable, but if you don't care about that you are fine :-)","date":"2014-04-22T14:37:59.748Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-04-22T14:38:04.080Z","type":"quit"}
{"nick":"kkaefer","message":"which wakes up the other event loop, you process the event","date":"2014-04-22T14:38:11.619Z","type":"message"}
{"nick":"kkaefer","message":"yeah, it works on linux, os x","date":"2014-04-22T14:38:26.521Z","type":"message"}
{"nick":"kkaefer","message":"but probably not windows","date":"2014-04-22T14:38:30.061Z","type":"message"}
{"nick":"kkaefer","message":"maybe this could be a good API to have in libuv core","date":"2014-04-22T14:39:02.550Z","type":"message"}
{"nick":"kkaefer","message":"specifically this part: https://github.com/joyent/libuv/blob/master/test/test-embed.c#L71-L86","date":"2014-04-22T14:39:06.016Z","type":"message"}
{"nick":"kkaefer","message":"which listens for events on a certain event loop, but /does not execute/ them","date":"2014-04-22T14:39:29.999Z","type":"message"}
{"nick":"kkaefer","message":"then, https://github.com/joyent/libuv/blob/master/test/test-embed.c#L87 wakes up the other event loop (which in this case is an libuv event loop as well; I'm using glfwPostEmptyEvent() in that case)","date":"2014-04-22T14:40:14.644Z","type":"message"}
{"nick":"kkaefer","message":"and fire the semaphores so that we don't interfere","date":"2014-04-22T14:40:45.171Z","type":"message"}
{"nick":"saghul","message":"yep","date":"2014-04-22T14:40:55.930Z","type":"message"}
{"nick":"saghul","message":"right now it only works on Linux and OSX","date":"2014-04-22T14:41:12.179Z","type":"message"}
{"nick":"kkaefer","message":"(i.e. the embed_thread_runner thread pauses until https://github.com/joyent/libuv/blob/master/test/test-embed.c#L96 is called in the main thread, executing the event loop","date":"2014-04-22T14:41:15.905Z","type":"message"}
{"nick":"saghul","message":"I was thinking about this a few days ago (some uv_backend_poll) function","date":"2014-04-22T14:41:30.171Z","type":"message"}
{"nick":"kkaefer","message":"saghul, thanks for your help","date":"2014-04-22T14:41:34.693Z","type":"message"}
{"nick":"kkaefer","message":"I'll create a ticket for it","date":"2014-04-22T14:41:39.282Z","type":"message"}
{"nick":"saghul","message":"kkaefer: no problem :-)","date":"2014-04-22T14:41:43.196Z","type":"message"}
{"nick":"nsm","reason":"Quit: ZNC - http://znc.in","date":"2014-04-22T14:42:53.819Z","type":"quit"}
{"nick":"m76","reason":"Read error: Connection reset by peer","date":"2014-04-22T14:46:06.045Z","type":"quit"}
{"nick":"nsm","date":"2014-04-22T14:47:02.159Z","type":"join"}
{"nick":"nsm","reason":"Client Quit","date":"2014-04-22T14:48:17.061Z","type":"quit"}
{"nick":"nsm","date":"2014-04-22T14:48:53.554Z","type":"join"}
{"nick":"thlorenz","date":"2014-04-22T14:49:19.693Z","type":"join"}
{"nick":"nsm","reason":"Client Quit","date":"2014-04-22T14:49:26.344Z","type":"quit"}
{"nick":"nsm","date":"2014-04-22T14:49:58.384Z","type":"join"}
{"nick":"kkaefer","message":"saghul: https://github.com/joyent/libuv/issues/1246","date":"2014-04-22T14:53:24.453Z","type":"message"}
{"nick":"paulfryzel","date":"2014-04-22T14:54:53.111Z","type":"join"}
{"nick":"saghul","message":"kkaefer: thanks for opening the issue, I'll take a look","date":"2014-04-22T14:57:31.395Z","type":"message"}
{"nick":"kkaefer","message":"if you like, I can create a small exampe program that integrates libuv and the glfw wait events callback","date":"2014-04-22T14:57:58.409Z","type":"message"}
{"nick":"kkaefer","message":"API-wise, it's very similar in behavior to uv_run","date":"2014-04-22T14:59:13.226Z","type":"message"}
{"nick":"saghul","message":"kkaefer: if you already wrote it, gist it and link it to the issue, having a practical example would help","date":"2014-04-22T14:59:16.655Z","type":"message"}
{"nick":"paulfryz_","date":"2014-04-22T14:59:19.886Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 265 seconds","date":"2014-04-22T14:59:24.677Z","type":"quit"}
{"nick":"kkaefer","message":"I don't have one atm","date":"2014-04-22T14:59:29.558Z","type":"message"}
{"nick":"saghul","message":"so far, what I had in mind was uv_backend_poll(timeout) + un_run(NOWAIT)","date":"2014-04-22T14:59:54.116Z","type":"message"}
{"nick":"saghul","message":"but I haven't put a lot of thought to it","date":"2014-04-22T15:00:06.741Z","type":"message"}
{"nick":"saghul","message":"yet :-)","date":"2014-04-22T15:00:10.509Z","type":"message"}
{"nick":"nsm","reason":"Quit: ZNC - http://znc.in","date":"2014-04-22T15:00:13.195Z","type":"quit"}
{"nick":"kkaefer","message":"well, what https://github.com/joyent/libuv/blob/master/test/test-embed.c#L71-L86 does is like UV_RUN_ONCE","date":"2014-04-22T15:00:35.659Z","type":"message"}
{"nick":"kkaefer","message":"except without firing the callbacks","date":"2014-04-22T15:00:41.729Z","type":"message"}
{"nick":"kkaefer","message":"i.e. \"return as soon as there are any events\"","date":"2014-04-22T15:00:55.306Z","type":"message"}
{"nick":"saghul","message":"my idea is to provide a platform independent way of doing that epoll_wait / kevent","date":"2014-04-22T15:01:48.471Z","type":"message"}
{"nick":"saghul","message":"then you still run the loop with nowait","date":"2014-04-22T15:01:55.766Z","type":"message"}
{"nick":"saghul","message":"or run_once","date":"2014-04-22T15:02:22.591Z","type":"message"}
{"nick":"kkaefer","message":"yeah, that's what I'm suggesting","date":"2014-04-22T15:02:25.809Z","type":"message"}
{"nick":"kkaefer","message":"replace https://github.com/joyent/libuv/blob/master/test/test-embed.c#L71-L86 with one function call","date":"2014-04-22T15:02:41.887Z","type":"message"}
{"nick":"kkaefer","message":"the rest remains the same in that test-embed.c example","date":"2014-04-22T15:02:50.358Z","type":"message"}
{"nick":"daviddia_","date":"2014-04-22T15:03:00.734Z","type":"join"}
{"nick":"saghul","message":"ideally that could be uv_backend_poll(uv_default_loop(), uv_backend_timeout(uv_default_loop()))","date":"2014-04-22T15:03:26.546Z","type":"message"}
{"nick":"daviddias","reason":"Ping timeout: 240 seconds","date":"2014-04-22T15:04:26.403Z","type":"quit"}
{"nick":"paulfryz_","new_nick":"paulfryzel","date":"2014-04-22T15:09:09.500Z","type":"nick"}
{"nick":"janjongboom","reason":"Ping timeout: 265 seconds","date":"2014-04-22T15:10:31.734Z","type":"quit"}
{"nick":"janjongboom","date":"2014-04-22T15:11:10.414Z","type":"join"}
{"nick":"mcavage","date":"2014-04-22T15:12:48.106Z","type":"join"}
{"nick":"mikeal","date":"2014-04-22T15:16:02.936Z","type":"join"}
{"nick":"daviddia_","reason":"Remote host closed the connection","date":"2014-04-22T15:17:25.711Z","type":"quit"}
{"nick":"daviddias","date":"2014-04-22T15:17:59.419Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 240 seconds","date":"2014-04-22T15:22:02.440Z","type":"quit"}
{"nick":"janjongboom","reason":"Ping timeout: 240 seconds","date":"2014-04-22T15:40:58.334Z","type":"quit"}
{"nick":"janjongboom","date":"2014-04-22T15:42:09.807Z","type":"join"}
{"nick":"paulfryzel","reason":"Read error: Connection reset by peer","date":"2014-04-22T15:44:00.487Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-04-22T15:44:32.993Z","type":"join"}
{"nick":"Qard","date":"2014-04-22T15:48:47.633Z","type":"join"}
{"nick":"mcavage","reason":"Ping timeout: 252 seconds","date":"2014-04-22T15:50:06.277Z","type":"quit"}
{"nick":"rmg","date":"2014-04-22T15:55:39.805Z","type":"join"}
