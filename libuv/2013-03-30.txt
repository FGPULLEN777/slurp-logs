{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-03-30T00:00:00.585Z","type":"quit"}
{"nick":"ircretary","date":"2013-03-30T00:00:08.622Z","type":"join"}
{"nick":"tjfontaine","message":"ya, being able to jstack() on osx would be hot","date":"2013-03-30T00:00:12.483Z","type":"message"}
{"nick":"isaacs","message":"omgomgomg i would <3 jsstack on osx so much","date":"2013-03-30T00:00:32.513Z","type":"message"}
{"nick":"bnoordhuis","message":"i've looked at xnu, on how to fix that","date":"2013-03-30T00:00:37.385Z","type":"message"}
{"nick":"bnoordhuis","message":"i think the main change is that dtrace-on-osx should be able to page in memory","date":"2013-03-30T00:00:57.296Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: didn't you have some jsstack kind of thing in C++ that sort of worked?","date":"2013-03-30T00:01:00.096Z","type":"message"}
{"nick":"tjfontaine","message":"anyway, #5163 I'm reasonably convinced should land in master and v0.10 asap, 5166 though needs more help","date":"2013-03-30T00:01:02.093Z","type":"message"}
{"nick":"bnoordhuis","message":"at least, i think that's what smartos does that os x doesn't","date":"2013-03-30T00:01:12.481Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: we should put that in node as console.megaTrace() or something","date":"2013-03-30T00:01:15.305Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: oh right, i guess i can land that sometime","date":"2013-03-30T00:01:31.776Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll run gnu indent over it first :)","date":"2013-03-30T00:01:49.189Z","type":"message"}
{"nick":"isaacs","message":"right, get rid of your weird hipster c style","date":"2013-03-30T00:02:12.985Z","type":"message"}
{"nick":"bnoordhuis","message":"hipster! well, i never!","date":"2013-03-30T00:02:24.063Z","type":"message"}
{"nick":"bnoordhuis","message":"if anything, it's crusty. from way back when, when we still had to walk to the library, through the snow, uphill both ways","date":"2013-03-30T00:03:06.839Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: library? what's that?","date":"2013-03-30T00:07:15.712Z","type":"message"}
{"nick":"bnoordhuis","message":"that's where poor people go to get internets","date":"2013-03-30T00:07:56.099Z","type":"message"}
{"nick":"tjfontaine","message":"or pedos to avoid detection","date":"2013-03-30T00:09:11.780Z","type":"message"}
{"nick":"bnoordhuis","message":"right, forgot about those","date":"2013-03-30T00:09:22.499Z","type":"message"}
{"nick":"bnoordhuis","message":"silly question, how do you list user probes?","date":"2013-03-30T00:09:28.763Z","type":"message"}
{"nick":"tjfontaine","message":"dtrace -p <pid> -l -m <provider>","date":"2013-03-30T00:09:53.500Z","type":"message"}
{"nick":"tjfontaine","message":"if I understand your question","date":"2013-03-30T00:10:07.083Z","type":"message"}
{"nick":"rendar_","date":"2013-03-30T00:10:13.641Z","type":"quit"}
{"nick":"bnoordhuis","message":"ah, well","date":"2013-03-30T00:10:19.259Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #129 \u00037UNSTABLE\u000f osx-x64 (1/573) linux-ia32 (1/573) windows-ia32 (5/573) windows-x64 (6/573) smartos-ia32 (2/573) smartos-x64 (5/573) http://jenkins.nodejs.org/job/nodejs-master/129/","date":"2013-03-30T00:10:34.943Z","type":"message"}
{"nick":"bnoordhuis","message":"systemtap lets you do `stap -l 'process(\"node\")' path/to/node`","date":"2013-03-30T00:10:55.840Z","type":"message"}
{"nick":"dap","message":"tjfontaine: did you learn about -m from Brendan?","date":"2013-03-30T00:10:57.239Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: https://gist.github.com/tjfontaine/422be586122130ceb6ec","date":"2013-03-30T00:11:02.215Z","type":"message"}
{"nick":"tjfontaine","message":"dap: no, the man page of course :)","date":"2013-03-30T00:11:07.226Z","type":"message"}
{"nick":"tjfontaine","message":"dap: at least on osx -l happens after -c","date":"2013-03-30T00:11:24.172Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, you've got to actually run the process then?","date":"2013-03-30T00:11:32.451Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: this is a pid provider, so ya the process needs to be in the air","date":"2013-03-30T00:11:47.517Z","type":"message"}
{"nick":"tjfontaine","message":"dap: stop me if I use the wrong vernacular :)","date":"2013-03-30T00:12:09.759Z","type":"message"}
{"nick":"dap","message":"bnoordhuis: dtrace -c /usr/node/bin/node -ln 'node$target:::' < /dev/null","date":"2013-03-30T00:12:31.099Z","type":"message"}
{"nick":"dap","message":"the probes can be created dynamically (though the node probes aren't), so there's no way to do it without running the process.  (we could support that for the node ones.)","date":"2013-03-30T00:13:15.367Z","type":"message"}
{"nick":"dap","message":"tjfontaine: there's a hypothesis that Brendan's the only one that uses \"-P foo\" instead of \"-n foo:::\" and so on :)","date":"2013-03-30T00:13:54.142Z","type":"message"}
{"nick":"tjfontaine","message":"dap: well I'm sure there's lots he does that most don't do","date":"2013-03-30T00:14:46.500Z","type":"message"}
{"nick":"bnoordhuis","message":"dap: very nice, thanks","date":"2013-03-30T00:14:49.935Z","type":"message"}
{"nick":"tjfontaine","message":"this time the man page was my source","date":"2013-03-30T00:14:58.995Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: https://gist.github.com/tjfontaine/5273607 I'm not sure if any of this is of interest for you","date":"2013-03-30T00:15:13.487Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: quite probably. easier way to get performance data == better","date":"2013-03-30T00:16:00.207Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: those are buffer allocs while running the http benchmark","date":"2013-03-30T00:16:01.975Z","type":"message"}
{"nick":"bnoordhuis","message":"i usually instrument the code with fprintf(log_file) statements now. very ghetto","date":"2013-03-30T00:16:38.618Z","type":"message"}
{"nick":"tjfontaine","message":"I don't know where having these buffer probes make the most sense to have","date":"2013-03-30T00:17:22.392Z","type":"message"}
{"nick":"tjfontaine","message":"::MakeFastBuffer should be the sizes that js are most interested in","date":"2013-03-30T00:17:55.837Z","type":"message"}
{"nick":"bnoordhuis","message":"3   7545 _ZN4node27DTRACE_HTTP_SERVER_RESPONSEERKN2v89ArgumentsE:http-server-response <- aw","date":"2013-03-30T00:18:52.759Z","type":"message"}
{"nick":"tjfontaine","message":"node$target:::http-server-response","date":"2013-03-30T00:19:09.360Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: have you used dap's nhttpsnoop?","date":"2013-03-30T00:19:29.507Z","type":"message"}
{"nick":"bnoordhuis","message":"no. should i?","date":"2013-03-30T00:19:44.000Z","type":"message"}
{"nick":"tjfontaine","message":"yes, you should https://github.com/davepacheco/nhttpsnoop :)","date":"2013-03-30T00:19:48.811Z","type":"message"}
{"nick":"tjfontaine","message":"it makes testing this quite pretty","date":"2013-03-30T00:20:00.680Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: I think that we should seriously consider passing TypeErrors to callbacks for async functions.","date":"2013-03-30T00:21:22.444Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: this debate is wearing me down.","date":"2013-03-30T00:21:32.719Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: and my heart is not in it.","date":"2013-03-30T00:21:38.492Z","type":"message"}
{"nick":"bnoordhuis","message":"don't give up the good fight, isaac","date":"2013-03-30T00:21:46.768Z","type":"message"}
{"nick":"bnoordhuis","message":"and don't worry, i'm just warming up","date":"2013-03-30T00:21:58.346Z","type":"message"}
{"nick":"isaacs","message":"here's the thing...","date":"2013-03-30T00:22:06.029Z","type":"message"}
{"nick":"isaacs","message":"people are going to use a callback to handle errors from async functions.","date":"2013-03-30T00:22:14.327Z","type":"message"}
{"nick":"isaacs","message":"we may as well just go with that flow.","date":"2013-03-30T00:22:21.736Z","type":"message"}
{"nick":"isaacs","message":"maybe have some kind of env or strict mode or flag or something that throws all fo them.","date":"2013-03-30T00:22:36.912Z","type":"message"}
{"nick":"isaacs","message":"or something.","date":"2013-03-30T00:22:42.791Z","type":"message"}
{"nick":"dap","message":"under what conditions would one \"handle\" a TypeError?","date":"2013-03-30T00:22:59.533Z","type":"message"}
{"nick":"isaacs","message":"but like... it's a mess.  there are very few people in the node userbase that actually prefer it this way.","date":"2013-03-30T00:23:00.624Z","type":"message"}
{"nick":"dap","message":"and what would one do?","date":"2013-03-30T00:23:02.957Z","type":"message"}
{"nick":"isaacs","message":"dap: well, yo'ud probably return an error to whoever called you.","date":"2013-03-30T00:23:12.210Z","type":"message"}
{"nick":"isaacs","message":"dap: like, let's say, i have a web service where you post a number, and i give you taht many random bytes.","date":"2013-03-30T00:23:24.138Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: this is a bad idea, considering how people actually handle errors in their apps","date":"2013-03-30T00:23:24.451Z","type":"message"}
{"nick":"tjfontaine","message":"how people *don't actually handle errors","date":"2013-03-30T00:23:39.899Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: actually, throwing is leading them to do even worse things.","date":"2013-03-30T00:23:41.975Z","type":"message"}
{"nick":"isaacs","message":"process.on('uncaughtException', console.log)","date":"2013-03-30T00:23:50.881Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: passing a TypeError (which is programmer's mistake) back to a user is, well, sketchy at least","date":"2013-03-30T00:23:54.033Z","type":"message"}
{"nick":"isaacs","message":"(no, really)","date":"2013-03-30T00:23:55.729Z","type":"message"}
{"nick":"isaacs","message":"dap: anyway...","date":"2013-03-30T00:24:03.980Z","type":"message"}
{"nick":"isaacs","message":"dap: let's say, i do something like this:  crypto.randomBytes(+userInput, function(er, bytes) { if (er) send400Error(er); else res.end(bytes) })","date":"2013-03-30T00:24:35.835Z","type":"message"}
{"nick":"isaacs","message":"dap: maybe i check for NaN first","date":"2013-03-30T00:24:52.626Z","type":"message"}
{"nick":"dap","message":"I see.  Would you do this for ReferenceError as well?","date":"2013-03-30T00:25:08.742Z","type":"message"}
{"nick":"isaacs","message":"var bytes = +userInput;  if (!bytes || bytes < 0) return send400Error('not a valid number of bytes');","date":"2013-03-30T00:25:12.179Z","type":"message"}
{"nick":"isaacs","message":"i guess what i'm suggesting is, \"don't put 'throw' in functions that take a callback\"","date":"2013-03-30T00:25:37.427Z","type":"message"}
{"nick":"isaacs","message":"pass whatever you would throw to the cb","date":"2013-03-30T00:25:43.711Z","type":"message"}
{"nick":"mmalecki","message":"dap has a great point here","date":"2013-03-30T00:25:48.338Z","type":"message"}
{"nick":"isaacs","message":"dap: you mean, function(obj,cb) { doSomething(obj.foo.bar, cb) }","date":"2013-03-30T00:26:06.647Z","type":"message"}
{"nick":"isaacs","message":"should i trap the obj.foo == null and pass to the cb?","date":"2013-03-30T00:26:15.395Z","type":"message"}
{"nick":"dap","message":"for example, yes","date":"2013-03-30T00:26:23.851Z","type":"message"}
{"nick":"isaacs","message":"i think that's more defensible.","date":"2013-03-30T00:26:25.501Z","type":"message"}
{"nick":"dap","message":"That's funny — I thought mmalecki had a great point there :)","date":"2013-03-30T00:26:27.451Z","type":"message"}
{"nick":"isaacs","message":"because we're not explicitly choosing to throw","date":"2013-03-30T00:26:37.371Z","type":"message"}
{"nick":"isaacs","message":"like, we can't see that one coming.","date":"2013-03-30T00:26:44.572Z","type":"message"}
{"nick":"mmalecki","message":"no, I mean, our point are kind of the same, dap ","date":"2013-03-30T00:26:44.780Z","type":"message"}
{"nick":"dap","message":"mmalecki: indeed :)","date":"2013-03-30T00:26:52.087Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: i think that's his point :)","date":"2013-03-30T00:26:53.274Z","type":"message"}
{"nick":"isaacs","message":"there's back-handed compliments, and then there's loopback compliments.","date":"2013-03-30T00:27:08.687Z","type":"message"}
{"nick":"bnoordhuis","message":"dtrace -c 'out/Release/node benchmark/http_simple' -n 'node$target:::gc-start { self->ts = timestamp } node$target:::gc-done { @ = quantize(timestamp - self->ts) } tick-2s { printa(@); trunc(@); }' <- works, sweet","date":"2013-03-30T00:27:34.579Z","type":"message"}
{"nick":"bnoordhuis","message":"nice job, tj","date":"2013-03-30T00:27:38.573Z","type":"message"}
{"nick":"tjfontaine","message":"was really just cleaning up what dap had done :)","date":"2013-03-30T00:28:00.481Z","type":"message"}
{"nick":"isaacs","message":"nice :)","date":"2013-03-30T00:28:01.685Z","type":"message"}
{"nick":"isaacs","message":"dap++ tjfontaine++","date":"2013-03-30T00:28:09.849Z","type":"message"}
{"nick":"isaacs","action":"needs to write some karma features into ircretary ","date":"2013-03-30T00:28:19.593Z","type":"action"}
{"nick":"tjfontaine","message":"5166 makes everyone at joyent very happy, once it gets prettier","date":"2013-03-30T00:28:28.005Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: i can't get it to land on top of #5163 though","date":"2013-03-30T00:29:03.808Z","type":"message"}
{"nick":"tjfontaine","message":"hrm I wonder what I did wrong","date":"2013-03-30T00:29:32.048Z","type":"message"}
{"nick":"bnoordhuis","message":"i probably only have to cherry-pick the last commit","date":"2013-03-30T00:29:56.794Z","type":"message"}
{"nick":"bnoordhuis","message":"let me try that","date":"2013-03-30T00:29:58.726Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/tjfontaine/node/commit/6a7754c16edbbc97670378303b4905145bda8383","date":"2013-03-30T00:30:04.852Z","type":"message"}
{"nick":"tjfontaine","message":"ya that's what I was going to suggest","date":"2013-03-30T00:30:09.983Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u0002aa5da48\u0002 : dtrace: actually use the _handle.fd value  When using the DTrace/systemta (+2 more commits) - http://git.io/IguX7Q","date":"2013-03-30T00:30:58.145Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: my new thing for C option parsing: https://github.com/mmalecki/saneopt","date":"2013-03-30T00:31:41.577Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: I'm not sure that macro change was ready to land, but ok","date":"2013-03-30T00:32:17.643Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: oh? should i revert it?","date":"2013-03-30T00:32:46.439Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: saneopt_t* saneopt = malloc(sizeof(*saneopt)); > saneopt_t* saneopt = malloc(sizeof(saneopt_t));","date":"2013-03-30T00:33:01.031Z","type":"message"}
{"nick":"dap","message":"isaacs: IMO, it seems better to do the right thing by a carefully written program than to do something passable for a sloppily written one (assuming you agree that process.on('uncaughtException', console.log) is sloppy, and that blowing up fast when a variable is misspelled is the right thing for a carefully written program).  In the first case, you're handling actual sloppiness for someone, while in the other you're covering up an honest mistake.","date":"2013-03-30T00:33:35.419Z","type":"message"}
{"nick":"dap","message":"But I don't have the rest of the context on this discussion.  Sorry to swoop in with an opinion — you probably have enough of that.","date":"2013-03-30T00:33:50.826Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: hah, good catch. thanks","date":"2013-03-30T00:33:52.770Z","type":"message"}
{"nick":"isaacs","message":"dap: so, \"misspelled variable\" would be the reference error case, i suppose.","date":"2013-03-30T00:34:15.832Z","type":"message"}
{"nick":"isaacs","message":"dap: and i'm vehemently opposed to wrapping things in try{} blocks","date":"2013-03-30T00:34:35.106Z","type":"message"}
{"nick":"isaacs","message":"dap: i think the node-core team is unanimous on that one.","date":"2013-03-30T00:34:46.681Z","type":"message"}
{"nick":"kazupon","date":"2013-03-30T00:35:10.087Z","type":"join"}
{"nick":"dap","message":"Right.  I view TypeError and ReferenceError like SyntaxError — egregious programmer mistakes that should bring the program down as fast and hard as possible.","date":"2013-03-30T00:35:17.180Z","type":"message"}
{"nick":"dap","message":"I wouldn't catch it either.","date":"2013-03-30T00:35:18.317Z","type":"message"}
{"nick":"isaacs","message":"dap: no worries about swooping in wiht a contextless opinion.  yes, i do have a lot of that, but in this case, it's appreciated, and thanks for the concern :)","date":"2013-03-30T00:35:18.526Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: how's \"mispelled variable\" different from wrong variable type?","date":"2013-03-30T00:35:21.827Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: I don't think it's worth a revert, but https://github.com/joyent/node/commit/aa5da48594c1634de9f439bcf223acff3fb1fcd8#L0R94 certainly runs the risk of two SLURP_CONNECTION()'s getting mixed symbols? and it probably needs to check if handle is null/undefined","date":"2013-03-30T00:35:31.546Z","type":"message"}
{"nick":"dap","message":"\"egregious\" not being a judgment, of course — it happens — but the program should not try to continue on","date":"2013-03-30T00:35:43.349Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: javascript is not traditionally a statically typed language.","date":"2013-03-30T00:35:50.606Z","type":"message"}
{"nick":"isaacs","message":"mmalecki: that's the difference.","date":"2013-03-30T00:35:54.515Z","type":"message"}
{"nick":"isaacs","message":"dap: also, in the proposed change, it *would* raise the error.","date":"2013-03-30T00:36:14.336Z","type":"message"}
{"nick":"isaacs","message":"dap: the question is \"how\"","date":"2013-03-30T00:36:19.094Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: mixed symbols? i'm not following, i think","date":"2013-03-30T00:36:38.101Z","type":"message"}
{"nick":"isaacs","message":"dap: the root problem is that throwing has a much higher probability of collateral damage.","date":"2013-03-30T00:36:57.268Z","type":"message"}
{"nick":"dap","message":"Especially with the recent v8 change to dump core in the context where the exception is thrown, I'd definitely like to have the whole stack and arguments available.","date":"2013-03-30T00:37:01.513Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: if I did SLURP_CONNECTION() twice (though I suppose this woul dbe a compiler error) wouldn't I be saying Local<Object> _handle; twice?","date":"2013-03-30T00:37:21.947Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: oh, you mean accidentally defining two _handle locals","date":"2013-03-30T00:37:25.151Z","type":"message"}
{"nick":"bnoordhuis","message":"right, that :)","date":"2013-03-30T00:37:28.828Z","type":"message"}
{"nick":"isaacs","message":"dap: right, but you're not going to use that in aweb server that has more than one end-user connected at a time.","date":"2013-03-30T00:37:43.256Z","type":"message"}
{"nick":"bnoordhuis","message":"easy to fix by wrapping the macros in do { } while (0) blocks","date":"2013-03-30T00:37:44.397Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: I think what should really be changed is to check that Get(_handle) actually returned something useful","date":"2013-03-30T00:38:27.959Z","type":"message"}
{"nick":"isaacs","message":"dap: i mean, realistically, we're talking about cases where you have to shut down gracefully.","date":"2013-03-30T00:38:28.175Z","type":"message"}
{"nick":"dap","message":"isaacs: I certainly would — because if it's anything like these kinds of bugs have been in my experience, it will be a 1-in-several-thousand case, and my only prayer of figuring out why it happened is having the core file with full program state.","date":"2013-03-30T00:38:29.836Z","type":"message"}
{"nick":"dap","message":"either that or it will be an every-single-time bug (which is actually more common), which I'll catch in development it just wastes my time to not have the real stack printed out.","date":"2013-03-30T00:39:07.688Z","type":"message"}
{"nick":"isaacs","message":"dap: please swoop in more.","date":"2013-03-30T00:39:09.463Z","type":"message"}
{"nick":"isaacs","message":"dap: i mean, not to debate me, but to debate the people that are making the arguments i'm making here to you.","date":"2013-03-30T00:39:22.848Z","type":"message"}
{"nick":"dap","message":":)","date":"2013-03-30T00:39:29.549Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2013-03-30T00:39:34.870Z","type":"quit"}
{"nick":"bnoordhuis","message":"*valp = obj->Get(String::New(#member))->ToInteger()->Value(); <- i assume that code predates IntegerValue()","date":"2013-03-30T00:39:55.711Z","type":"message"}
{"nick":"tjfontaine","message":"ya, that's my understanding","date":"2013-03-30T00:40:08.935Z","type":"message"}
{"nick":"isaacs","message":"what's happenign right now is that there are a few people who are complaining loudly about how node crashes so easily, and it's brittle, and the node core team (especially isaacs) doesn't want to do anything to fix the situation, and domains don't even work, because you still have to crash.","date":"2013-03-30T00:40:15.427Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: fwiw, the commit looks okay to me as is","date":"2013-03-30T00:40:40.570Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: worst case, you'll get fd=0 when _handle is unset","date":"2013-03-30T00:41:01.012Z","type":"message"}
{"nick":"isaacs","message":"dap: if it was at least more clear that there are node end-users who actually *prefer* it this way (or even, would prefer to just always crash on any throw, and never catch anything) then that's fine.","date":"2013-03-30T00:41:03.475Z","type":"message"}
{"nick":"isaacs","message":"dap: ie, it'd make it more clear that it's not so clear-cut.","date":"2013-03-30T00:41:25.975Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: really? hmm depressing, I was seeing unitialized data in my testing, but I may have tested wrong","date":"2013-03-30T00:41:28.853Z","type":"message"}
{"nick":"dap","message":"isaacs: that's certainly my view.  the only time I use try/catch is for things like JSON.parse.","date":"2013-03-30T00:42:19.371Z","type":"message"}
{"nick":"dap","message":"Sounds like mmalecki and bnoordhuis agree too (based on ben's \"fight the good fight\" comment)?","date":"2013-03-30T00:43:03.291Z","type":"message"}
{"nick":"dap","message":"and if I could, I'd have had JSON.parse return an error instead of throwing :)","date":"2013-03-30T00:44:00.427Z","type":"message"}
{"nick":"isaacs","message":"dap: yeah, the throw in JSON.parse is excessive.","date":"2013-03-30T00:44:17.232Z","type":"message"}
{"nick":"isaacs","message":"but then, is it?","date":"2013-03-30T00:44:20.987Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #130 \u00034FAILURE\u000f linux-x64 (1/573) smartos-ia32 (3/573) smartos-x64 (2/573) http://jenkins.nodejs.org/job/nodejs-master/130/","date":"2013-03-30T00:44:22.882Z","type":"message"}
{"nick":"isaacs","message":"i mean, you think it's json, right?","date":"2013-03-30T00:44:24.086Z","type":"message"}
{"nick":"bnoordhuis","message":"dap: yes","date":"2013-03-30T00:44:27.863Z","type":"message"}
{"nick":"isaacs","message":"and you'er tryhing to parse it?","date":"2013-03-30T00:44:28.073Z","type":"message"}
{"nick":"isaacs","message":"shouldn't you crash hard as fast as possible?","date":"2013-03-30T00:44:32.984Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: oh, i guess it could fail if _handle=null","date":"2013-03-30T00:44:47.974Z","type":"message"}
{"nick":"dap","message":"isaacs: if it's user input, it's not at all a fatal error if it's not valid.","date":"2013-03-30T00:44:49.370Z","type":"message"}
{"nick":"isaacs","message":"dap: that's exactly the point.","date":"2013-03-30T00:44:56.863Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: for instance (and this may be abuse here \"[  1.395787]          - GET    /uter                 48954 client undefined            0 /uter?limit=5&offset=5 -> 1112396529664\"","date":"2013-03-30T00:44:57.743Z","type":"message"}
{"nick":"isaacs","message":"what if the user input is a number >0x3fffffff","date":"2013-03-30T00:45:07.079Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: but undefined and 0, mean there wasn'ta  remote site anyway","date":"2013-03-30T00:45:14.972Z","type":"message"}
{"nick":"isaacs","message":"dap: should you throw when you pass that to crypto.randomBytes?","date":"2013-03-30T00:45:16.943Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: i can add a check, no problem","date":"2013-03-30T00:45:26.314Z","type":"message"}
{"nick":"tjfontaine","message":"k","date":"2013-03-30T00:45:31.172Z","type":"message"}
{"nick":"isaacs","message":"dap: basically, the difference that i can see is that it's a lot easier to check a number range thna to check if a string is valid json.","date":"2013-03-30T00:45:41.583Z","type":"message"}
{"nick":"isaacs","message":"dap: since JSON is pretty complicated.","date":"2013-03-30T00:45:47.607Z","type":"message"}
{"nick":"isaacs","message":"dap: but the fact is that you have to know you have to check it","date":"2013-03-30T00:45:56.352Z","type":"message"}
{"nick":"dap","message":"isaacs: the difference is that there's no JSON.validate.  If there were, it would be more reasonable for JSON.parse to throw.  Except that model would also be more expensive in the common case (basically parsing it twice).","date":"2013-03-30T00:45:57.231Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-03-30T00:46:00.907Z","type":"message"}
{"nick":"isaacs","message":"the \"more expensive in the common case\" is also applicable to the crypto.randomBytes case.","date":"2013-03-30T00:46:45.661Z","type":"message"}
{"nick":"isaacs","message":"dap: you have to know you have to validate it, and what is valid, and then do exactly the same validation that is done *again* in the function.","date":"2013-03-30T00:47:05.327Z","type":"message"}
{"nick":"dap","message":"IMO, if you're handling user input, you should explicitly validate it, not rely on the language, especially when the error produced by the language for that case is otherwise indistinguishable from a syntaxerror-level programmer error.","date":"2013-03-30T00:47:06.519Z","type":"message"}
{"nick":"isaacs","message":"dap: in practice, people do the same thing for crypto.randomBytes that you do for JSON.parse","date":"2013-03-30T00:47:49.492Z","type":"message"}
{"nick":"isaacs","message":"dap: or they don't, and it's hella surprising","date":"2013-03-30T00:48:03.595Z","type":"message"}
{"nick":"isaacs","message":"and they get mad.","date":"2013-03-30T00:48:08.929Z","type":"message"}
{"nick":"dap","message":"Is the proposal to make crypto.randomBytes return an error instead of throw, or to declare that node library routines in general will do that?","date":"2013-03-30T00:49:34.431Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: do you honestly think that node should follow wrong patterns which some inexperienced programmers introduce?","date":"2013-03-30T00:49:38.046Z","type":"message"}
{"nick":"bradleymeck","date":"2013-03-30T00:49:57.391Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-03-30T00:50:04.132Z","type":"quit"}
{"nick":"dap","message":"Is there anything I can do to help make it clear that some Node programmers prefer it the way it is?  Is the current behavior the problem, or just the perception of people who expect it to work differently?","date":"2013-03-30T00:50:09.404Z","type":"message"}
{"nick":"isaacs","message":"dap: there are various different proposals.","date":"2013-03-30T00:50:11.032Z","type":"message"}
{"nick":"mmalecki","message":"with all due respect, but if you don't validate user input, you are unexperienced","date":"2013-03-30T00:50:17.327Z","type":"message"}
{"nick":"tjfontaine","message":"oh man I broke etw and the windows build","date":"2013-03-30T00:50:22.379Z","type":"message"}
{"nick":"dap","message":"I mean, most other environments aren't async, and just throw all the time, right?  How can one have expectations that this environment would be different here?","date":"2013-03-30T00:50:29.611Z","type":"message"}
{"nick":"isaacs","message":"dap: the issue is that we broadcast a specific way to handle errors.","date":"2013-03-30T00:50:34.440Z","type":"message"}
{"nick":"isaacs","message":"dap: those environments aren't doing async io","date":"2013-03-30T00:50:42.621Z","type":"message"}
{"nick":"isaacs","message":"dap: but yes, it IS a problem in browser JS","date":"2013-03-30T00:51:06.488Z","type":"message"}
{"nick":"isaacs","message":"especially since \"Crash fast and hard\" isn't really an option.","date":"2013-03-30T00:51:33.151Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033bnoordhuis\u000f created branch tjfontaine-review-this - http://git.io/b2vJBQ","date":"2013-03-30T00:52:17.355Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: ^","date":"2013-03-30T00:52:21.248Z","type":"message"}
{"nick":"isaacs","message":"dap: but if we say \"Handle errors like this: thing.on('error'), callback(er), domain.on('error')\"","date":"2013-03-30T00:52:41.007Z","type":"message"}
{"nick":"isaacs","message":"dap: and then we `throw new TypeError('7 is not the right number')`","date":"2013-03-30T00:53:28.078Z","type":"message"}
{"nick":"isaacs","message":"dap: then we're kinda dicks","date":"2013-03-30T00:53:34.776Z","type":"message"}
{"nick":"isaacs","message":"dap: and saying, \"Well... don't pass a 7 to that function\" it doesn't really make anyone think we're less dickish","date":"2013-03-30T00:54:11.098Z","type":"message"}
{"nick":"isaacs","message":"saying, \"Yor'e not experienced\" is not really a satisfying response.","date":"2013-03-30T00:54:21.779Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-03-30T00:54:58.317Z","type":"quit"}
{"nick":"tjfontaine","message":"bnoordhuis: looking good","date":"2013-03-30T00:55:22.489Z","type":"message"}
{"nick":"mmalecki","message":"isaacs: that's kinda comparable to breaking the law","date":"2013-03-30T00:55:35.071Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: it is rather unfortunate that I broke the windows build :/","date":"2013-03-30T00:55:47.675Z","type":"message"}
{"nick":"mmalecki","message":"do you throw people into jail or call them back to say \"hey, don't do that\" when they do bad things?","date":"2013-03-30T00:56:04.635Z","type":"message"}
{"nick":"dap","message":"The way I'd phrase this is: invalid input errors are typically checked synchronously, while runtime errors are not.  There's a gray area (e.g., the path argument to mod_fs.readFile), and when calling any function, one must know which is which.  But the fact that some errors can only be detected late does not mean it's not useful to detect the ones that can be detected early.","date":"2013-03-30T00:56:28.700Z","type":"message"}
{"nick":"dap","message":"I've got to run shortly.","date":"2013-03-30T00:56:32.748Z","type":"message"}
{"nick":"tjfontaine","message":"I'll submit a pr tonight to fix that I guess","date":"2013-03-30T00:57:22.096Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: i'm sure all 3 etw users will be pleased :)","date":"2013-03-30T00:58:01.371Z","type":"message"}
{"nick":"isaacs","message":"dap: thanks for the input.","date":"2013-03-30T00:58:17.491Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: well the build is broken broken on windows atm :)","date":"2013-03-30T00:58:24.346Z","type":"message"}
{"nick":"isaacs","message":"dap: if you're bored later: https://github.com/joyent/node/issues/5149","date":"2013-03-30T00:58:28.576Z","type":"message"}
{"nick":"isaacs","message":":)","date":"2013-03-30T00:58:30.902Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00029b8dd39\u0002 : dtrace: check if _handle property is set  Check that _handle is an object - http://git.io/mZ9S6w","date":"2013-03-30T00:58:31.712Z","type":"message"}
{"nick":"dap","message":"I understand the annoyance — I hit this once with child_process.exec throwing a synchronous error that I was surprised by.  Perhaps I haven't articulated in my head why it feels so wrong to make \"obviously invalid input\" errors asynchronous, but my gut tells me that the appeal of handling *all* errors asynchronously is a trap.","date":"2013-03-30T00:58:31.958Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: ah right. well, pull requests welcome :)","date":"2013-03-30T00:58:57.234Z","type":"message"}
{"nick":"tjfontaine","message":"hehe","date":"2013-03-30T00:59:03.095Z","type":"message"}
{"nick":"bnoordhuis","message":"do you have your commit bit yet?","date":"2013-03-30T00:59:03.694Z","type":"message"}
{"nick":"tjfontaine","message":"I \"have\" it, but I'm acting like I don't","date":"2013-03-30T00:59:17.197Z","type":"message"}
{"nick":"bnoordhuis","message":"ah okay :)","date":"2013-03-30T00:59:23.834Z","type":"message"}
{"nick":"dap","message":"isaacs: thanks for hearing it.  good luck!","date":"2013-03-30T00:59:33.128Z","type":"message"}
{"nick":"tjfontaine","message":"alright bbiab","date":"2013-03-30T00:59:54.047Z","type":"message"}
{"nick":"mikeal","date":"2013-03-30T01:01:14.117Z","type":"join"}
{"nick":"dap","message":"isaacs: Maybe this is it: one man's bad-user-input TypeError is another man's bonehead-programmer-error mistake, and making it easy to deal with the former at the expense of the latter puts the wrong value first, IMO.  I'll try to formulate that and add it to the ticket.","date":"2013-03-30T01:02:24.665Z","type":"message"}
{"nick":"dap","message":"On that note, I've really gotta run!","date":"2013-03-30T01:02:30.645Z","type":"message"}
{"nick":"isaacs","message":"dap: thanks!","date":"2013-03-30T01:02:47.555Z","type":"message"}
{"nick":"isaacs","message":"indutny: i figured out that error.  however, fixing it breaks the test you just added: test/simple/test-tls-client-abort3.js","date":"2013-03-30T01:03:57.507Z","type":"message"}
{"nick":"isaacs","message":"indutny: because you get an extra error about the socket being closed","date":"2013-03-30T01:04:11.859Z","type":"message"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-03-30T01:04:24.570Z","type":"quit"}
{"nick":"isaacs","message":"ah, figured it out","date":"2013-03-30T01:09:33.005Z","type":"message"}
{"nick":"isaacs","message":"indutny: nevermind","date":"2013-03-30T01:10:16.414Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #131 \u00034FAILURE\u000f smartos-ia32 (3/573) smartos-x64 (3/573) http://jenkins.nodejs.org/job/nodejs-master/131/","date":"2013-03-30T01:11:35.495Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-30T01:18:36.409Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-03-30T01:18:58.420Z","type":"join"}
{"nick":"benoitc","date":"2013-03-30T01:24:19.990Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-30T01:24:47.691Z","type":"quit"}
{"nick":"inolen","date":"2013-03-30T01:30:26.776Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-30T01:32:59.869Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-30T01:35:47.408Z","type":"join"}
{"nick":"mmalecki","new_nick":"mmalecki[zzz]","date":"2013-03-30T01:39:26.426Z","type":"nick"}
{"nick":"abraxas","date":"2013-03-30T01:40:19.112Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-03-30T01:40:21.178Z","type":"quit"}
{"nick":"abraxas","reason":"Ping timeout: 256 seconds","date":"2013-03-30T01:45:10.750Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-03-30T01:54:01.435Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-03-30T02:07:13.658Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-30T02:16:34.186Z","type":"join"}
{"nick":"tjfontaine","message":"isaacs got spanked by the pullreq bot, that's kinda amusing","date":"2013-03-30T02:17:15.521Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-30T02:23:28.961Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-30T02:32:21.642Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-03-30T02:33:08.893Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-30T02:36:23.272Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 256 seconds","date":"2013-03-30T02:43:00.405Z","type":"quit"}
{"nick":"hz","date":"2013-03-30T02:45:58.098Z","type":"quit"}
{"nick":"bnoordhu1s","date":"2013-03-30T02:46:37.195Z","type":"join"}
{"nick":"wolfeida_","date":"2013-03-30T02:48:18.707Z","type":"join"}
{"nick":"stagas","date":"2013-03-30T02:49:28.627Z","type":"join"}
{"nick":"stephank_","date":"2013-03-30T02:51:06.140Z","type":"join"}
{"nick":"bnoordhuis","reason":"*.net *.split","date":"2013-03-30T02:55:58.394Z","type":"quit"}
{"nick":"wolfeidau","reason":"*.net *.split","date":"2013-03-30T02:56:00.705Z","type":"quit"}
{"nick":"stephank","reason":"*.net *.split","date":"2013-03-30T02:56:01.334Z","type":"quit"}
{"nick":"stephank_","new_nick":"stephank","date":"2013-03-30T02:56:01.965Z","type":"nick"}
{"nick":"tjfontaine","message":"I'd really like to consolidate this #if HAVE_SYSTEMTAP nonesense in node_dtrace","date":"2013-03-30T03:25:18.743Z","type":"message"}
{"nick":"bnoordhu1s","reason":"Ping timeout: 245 seconds","date":"2013-03-30T03:27:38.167Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-30T03:36:35.740Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-30T03:39:29.358Z","type":"join"}
{"nick":"txdv_","new_nick":"txdv","date":"2013-03-30T03:40:26.924Z","type":"nick"}
{"nick":"benoitc","date":"2013-03-30T03:40:51.055Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-03-30T03:44:06.218Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-03-30T04:24:27.281Z","type":"join"}
{"nick":"bradleymeck","reason":"Remote host closed the connection","date":"2013-03-30T04:24:41.689Z","type":"quit"}
{"nick":"brson","date":"2013-03-30T04:31:23.570Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-03-30T04:34:22.833Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-30T04:37:13.377Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2013-03-30T04:39:15.856Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-30T04:40:04.745Z","type":"join"}
{"nick":"benoitc","date":"2013-03-30T04:41:22.736Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-03-30T04:44:55.487Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-03-30T04:47:14.268Z","type":"nick"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-30T05:37:37.388Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-30T05:39:24.913Z","type":"join"}
{"nick":"kazupon","date":"2013-03-30T05:40:37.383Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2013-03-30T05:45:08.166Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-30T05:55:45.742Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-30T06:04:55.662Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-03-30T06:08:47.690Z","type":"nick"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-03-30T06:16:00.698Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-30T06:30:35.385Z","type":"join"}
{"nick":"kazupon","reason":"Read error: Connection reset by peer","date":"2013-03-30T06:30:53.870Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-30T06:31:17.828Z","type":"join"}
{"nick":"dominictarr","date":"2013-03-30T06:45:24.079Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-30T06:58:47.495Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-30T07:02:28.140Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-30T07:11:34.782Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-30T07:19:28.931Z","type":"join"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-03-30T07:21:34.682Z","type":"nick"}
{"nick":"mikeal","date":"2013-03-30T07:21:52.821Z","type":"join"}
{"nick":"indutny","message":"isaacs: hey","date":"2013-03-30T07:27:30.503Z","type":"message"}
{"nick":"indutny","message":"isaacs: this patch works for sure","date":"2013-03-30T07:28:23.763Z","type":"message"}
{"nick":"indutny","message":"https://github.com/joyent/node/pull/5170/files","date":"2013-03-30T07:28:27.503Z","type":"message"}
{"nick":"indutny","message":"but...","date":"2013-03-30T07:28:32.480Z","type":"message"}
{"nick":"indutny","message":"what about net.js? :)","date":"2013-03-30T07:28:37.934Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-30T08:03:27.684Z","type":"quit"}
{"nick":"paddybyers","date":"2013-03-30T08:28:14.407Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-30T08:33:15.406Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-30T08:33:43.109Z","type":"join"}
{"nick":"rendar","date":"2013-03-30T08:35:15.088Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 260 seconds","date":"2013-03-30T08:38:11.881Z","type":"quit"}
{"nick":"dominictarr","date":"2013-03-30T09:38:19.276Z","type":"join"}
{"nick":"kazupon","date":"2013-03-30T09:44:11.844Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 255 seconds","date":"2013-03-30T09:44:26.352Z","type":"quit"}
{"nick":"skebcio","reason":"Read error: Connection reset by peer","date":"2013-03-30T09:47:47.477Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-30T09:48:05.446Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-03-30T09:48:33.577Z","type":"quit"}
{"nick":"dominictarr","date":"2013-03-30T09:54:31.589Z","type":"join"}
{"nick":"indexzero","date":"2013-03-30T09:58:23.378Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-30T10:15:16.717Z","type":"quit"}
{"nick":"skebcio","date":"2013-03-30T10:33:09.506Z","type":"join"}
{"nick":"mmalecki[zzz]","new_nick":"mmalecki","date":"2013-03-30T10:49:20.485Z","type":"nick"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-03-30T10:49:49.195Z","type":"quit"}
{"nick":"hz","date":"2013-03-30T11:42:35.702Z","type":"join"}
{"nick":"felixge","date":"2013-03-30T11:55:36.974Z","type":"join"}
{"nick":"felixge","reason":"Changing host","date":"2013-03-30T11:55:36.974Z","type":"quit"}
{"nick":"felixge","date":"2013-03-30T11:55:36.974Z","type":"join"}
{"nick":"benoitc","reason":"Ping timeout: 246 seconds","date":"2013-03-30T12:53:20.124Z","type":"quit"}
{"nick":"dominictarr","date":"2013-03-30T12:53:39.053Z","type":"join"}
{"nick":"dominictarr","reason":"Client Quit","date":"2013-03-30T12:55:17.201Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-30T12:58:02.002Z","type":"join"}
{"nick":"`3rdEden","date":"2013-03-30T13:29:57.321Z","type":"join"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-03-30T13:32:22.391Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-30T13:52:35.381Z","type":"join"}
{"nick":"piscisaureus_","date":"2013-03-30T14:00:39.630Z","type":"join"}
{"nick":"felixge","reason":"Quit: http://www.debuggable.com/","date":"2013-03-30T14:05:36.507Z","type":"quit"}
{"nick":"piscisaureus_","message":"hello","date":"2013-03-30T14:10:59.530Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-03-30T14:15:25.168Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-03-30T14:15:43.048Z","type":"nick"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-03-30T14:19:34.858Z","type":"nick"}
{"nick":"mmalecki","message":"hi","date":"2013-03-30T14:32:26.682Z","type":"message"}
{"nick":"bnoordhuis","message":"ho","date":"2013-03-30T14:58:04.846Z","type":"message"}
{"nick":"tjfontaine","message":"what did you call me?","date":"2013-03-30T14:58:11.657Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: how would you feel if I unified the probes between dtrace and systemtap, having that ifdef in there is kinda frustrating","date":"2013-03-30T14:58:51.764Z","type":"message"}
{"nick":"bnoordhuis","message":"okay by me if you can get it to work","date":"2013-03-30T14:59:09.372Z","type":"message"}
{"nick":"bnoordhuis","message":"there was a reason it had to be like that but i forgot what it was","date":"2013-03-30T14:59:20.764Z","type":"message"}
{"nick":"tjfontaine","message":"I'm sure it's similar to the osx reason","date":"2013-03-30T14:59:29.706Z","type":"message"}
{"nick":"tjfontaine","message":"structs can't be dereferenced in systemtap","date":"2013-03-30T14:59:37.316Z","type":"message"}
{"nick":"bnoordhuis","message":"right, probably that","date":"2013-03-30T15:00:00.691Z","type":"message"}
{"nick":"tjfontaine","message":"but there are easier ways to manage that, we should be able to pass null in for that scenario","date":"2013-03-30T15:00:01.782Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, i've got to go, it seems","date":"2013-03-30T15:00:08.319Z","type":"message"}
{"nick":"bnoordhuis","message":"back in an hour or so","date":"2013-03-30T15:00:14.437Z","type":"message"}
{"nick":"tjfontaine","message":"enjoy","date":"2013-03-30T15:00:16.751Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm going to the beer store so yes, i will :)","date":"2013-03-30T15:00:26.406Z","type":"message"}
{"nick":"tjfontaine","message":":)","date":"2013-03-30T15:00:32.297Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-03-30T15:04:43.171Z","type":"quit"}
{"nick":"c4milo_","date":"2013-03-30T15:10:10.518Z","type":"join"}
{"nick":"tjfontaine","message":"piscisaureus_: btw https://github.com/joyent/node/pull/5173","date":"2013-03-30T15:18:40.677Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: \"BTW I've incentivized you by making the build fail on windows without a change\" ??","date":"2013-03-30T15:19:32.658Z","type":"message"}
{"nick":"piscisaureus_","message":"I thought our incentivization was w/ booz","date":"2013-03-30T15:19:44.631Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: but yeah it looks harmless to me","date":"2013-03-30T15:19:53.022Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-03-30T15:20:04.500Z","type":"message"}
{"nick":"tjfontaine","message":"how can I test that etw is working properly?","date":"2013-03-30T15:20:30.977Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: interesting question. You have to build the installer and install node :)","date":"2013-03-30T15:21:06.143Z","type":"message"}
{"nick":"piscisaureus_","message":"so the ETW manifest gets registered w/ the OS","date":"2013-03-30T15:21:12.686Z","type":"message"}
{"nick":"piscisaureus_","message":"it wouldbe good to have some sort of test for this","date":"2013-03-30T15:21:40.398Z","type":"message"}
{"nick":"tjfontaine","message":"oh well good news is that the msi builds aren't fucked","date":"2013-03-30T15:21:53.571Z","type":"message"}
{"nick":"piscisaureus_","message":"which ones are?","date":"2013-03-30T15:22:05.410Z","type":"message"}
{"nick":"tjfontaine","message":"previously I couldn't convince WiX to run inside the JRE I was using","date":"2013-03-30T15:22:26.165Z","type":"message"}
{"nick":"`3rdEden","reason":"Remote host closed the connection","date":"2013-03-30T15:22:44.177Z","type":"quit"}
{"nick":"tjfontaine","message":"but now that I let the system choose the jre for the build slave we have nightly msi's","date":"2013-03-30T15:22:47.050Z","type":"message"}
{"nick":"tjfontaine","message":"jenkins.nodejs.org/nightlies","date":"2013-03-30T15:22:54.228Z","type":"message"}
{"nick":"piscisaureus_","message":"woo","date":"2013-03-30T15:22:57.231Z","type":"message"}
{"nick":"piscisaureus_","message":"The name of the etw source is too long","date":"2013-03-30T15:23:48.533Z","type":"message"}
{"nick":"piscisaureus_","message":"Should be Just Node and not NodeJS-ETW-Provider","date":"2013-03-30T15:24:02.749Z","type":"message"}
{"nick":"tjfontaine","message":"indeed","date":"2013-03-30T15:24:41.684Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: which platforms can't handle structs btw?","date":"2013-03-30T15:27:32.849Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: that's so weird","date":"2013-03-30T15:27:35.876Z","type":"message"}
{"nick":"tjfontaine","message":"all of systemtap, and dtrace on osx, linux, and probably freebsd","date":"2013-03-30T15:28:37.673Z","type":"message"}
{"nick":"piscisaureus_","message":"tjfontaine: patch looks harmless","date":"2013-03-30T15:31:23.054Z","type":"message"}
{"nick":"piscisaureus_","message":"I've never liked how ad-hoc ETW, dtrace and systemtap support was fumbled in there","date":"2013-03-30T15:31:45.259Z","type":"message"}
{"nick":"piscisaureus_","message":"but *shrug*","date":"2013-03-30T15:31:48.224Z","type":"message"}
{"nick":"tjfontaine","message":"yes I'm actually looking to unify that this weekend","date":"2013-03-30T15:33:34.575Z","type":"message"}
{"nick":"tjfontaine","message":"well at least the systemtap/dtrace stuff","date":"2013-03-30T15:33:45.112Z","type":"message"}
{"nick":"tjfontaine","message":"etw seems pretty resilient to changes so long as I remember to update the signatures","date":"2013-03-30T15:34:16.518Z","type":"message"}
{"nick":"tjfontaine","message":"all the damn #ifdef's for systemtap bother the crap out of me though","date":"2013-03-30T15:34:32.108Z","type":"message"}
{"nick":"abraxas","date":"2013-03-30T15:42:30.460Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 260 seconds","date":"2013-03-30T15:47:03.954Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-03-30T15:48:17.001Z","type":"nick"}
