{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-08-05T00:00:01.182Z","type":"quit"}
{"nick":"ircretary","date":"2013-08-05T00:00:08.339Z","type":"join"}
{"nick":"bnoordhuis","message":"i did a good deed today. i fixed the v8 build on openbsd","date":"2013-08-05T00:19:42.769Z","type":"message"}
{"nick":"bnoordhuis","message":"all three openbsd users rejoice","date":"2013-08-05T00:19:53.355Z","type":"message"}
{"nick":"st_luke","date":"2013-08-05T00:28:39.759Z","type":"join"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2013-08-05T00:32:32.088Z","type":"quit"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-05T00:38:32.519Z","type":"quit"}
{"nick":"st_luke_","date":"2013-08-05T00:38:48.756Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 240 seconds","date":"2013-08-05T00:41:50.569Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u000235ea88c\u0002 : build: disable parallel automake tests (+4 more commits) - http://git.io/8bMRUA","date":"2013-08-05T00:47:31.625Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002222e523\u0002 : v8: fix openbsd build - http://git.io/C_hG4g","date":"2013-08-05T00:53:54.776Z","type":"message"}
{"nick":"bnoordhuis","message":"fyi, compiling on openbsd involves installing gcc and g++ 4.7, then running `./configure && gmake CC=egcc CXX=eg++ LINK=g++`","date":"2013-08-05T00:55:07.208Z","type":"message"}
{"nick":"bnoordhuis","message":"simple, right?","date":"2013-08-05T00:55:11.195Z","type":"message"}
{"nick":"tjfontaine","message":"ya I saw the v8 mailing list :)","date":"2013-08-05T00:55:29.023Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-05T01:00:19.812Z","type":"nick"}
{"nick":"kazupon","date":"2013-08-05T01:02:15.038Z","type":"join"}
{"nick":"stagas","date":"2013-08-05T01:13:55.583Z","type":"join"}
{"nick":"paulfryzel","date":"2013-08-05T01:15:42.123Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 256 seconds","date":"2013-08-05T01:31:24.014Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-05T01:32:49.823Z","type":"quit"}
{"nick":"abraxas","date":"2013-08-05T01:38:01.425Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #165 \u00034FAILURE\u000f windows-x64 (19/618) windows-ia32 (20/618) http://jenkins.nodejs.org/job/nodejs-master-windows/165/","date":"2013-08-05T01:41:27.373Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-08-05T01:45:10.342Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-05T01:51:46.990Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-05T01:53:27.702Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-05T01:56:05.759Z","type":"join"}
{"nick":"`3rdEden","date":"2013-08-05T01:56:55.170Z","type":"join"}
{"nick":"Raynos","date":"2013-08-05T01:57:35.572Z","type":"join"}
{"nick":"st_luke","date":"2013-08-05T02:02:35.756Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-05T02:02:41.389Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-05T02:08:33.495Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-05T02:09:02.124Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 245 seconds","date":"2013-08-05T02:48:53.170Z","type":"quit"}
{"nick":"brson","date":"2013-08-05T02:50:56.700Z","type":"join"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #86 \u00034FAILURE\u000f smartos-x64 (2/191) smartos-ia32 (2/191) http://jenkins.nodejs.org/job/libuv-master-gyp/86/","date":"2013-08-05T02:52:45.518Z","type":"message"}
{"nick":"tjfontaine","message":"ircretary: tell bnoordhuis test-ip6-addr.obj : error LNK2001: unresolved external symbol _snprintf [g:\\jenkins\\workspace\\libuv-master-gyp\\eec653f3\\run-tests.vcxproj]","date":"2013-08-05T02:53:42.296Z","type":"message"}
{"nick":"ircretary","message":"tjfontaine: I'll be sure to tell bnoordhuis","date":"2013-08-05T02:53:42.510Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-05T03:22:48.743Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-05T03:50:59.527Z","type":"join"}
{"nick":"niska","reason":"Ping timeout: 240 seconds","date":"2013-08-05T04:15:28.945Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-05T04:22:24.301Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-05T04:22:57.116Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 276 seconds","date":"2013-08-05T04:27:39.914Z","type":"quit"}
{"nick":"dshaw_","date":"2013-08-05T04:38:42.761Z","type":"join"}
{"nick":"niska","date":"2013-08-05T04:39:01.191Z","type":"join"}
{"nick":"brson_","date":"2013-08-05T05:00:24.799Z","type":"join"}
{"nick":"brson","reason":"Ping timeout: 248 seconds","date":"2013-08-05T05:02:29.814Z","type":"quit"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2013-08-05T05:25:19.170Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-05T05:35:48.151Z","type":"join"}
{"nick":"paddybyers","date":"2013-08-05T05:38:54.181Z","type":"join"}
{"nick":"paulfryzel","date":"2013-08-05T05:55:49.184Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 264 seconds","date":"2013-08-05T06:04:43.052Z","type":"quit"}
{"nick":"emilsedgh","reason":"Ping timeout: 264 seconds","date":"2013-08-05T06:06:45.800Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-05T06:26:13.125Z","type":"nick"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-08-05T06:31:17.884Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-05T06:36:51.955Z","type":"nick"}
{"nick":"Benvie_","reason":"Ping timeout: 264 seconds","date":"2013-08-05T06:39:28.382Z","type":"quit"}
{"nick":"hz","date":"2013-08-05T06:51:08.029Z","type":"join"}
{"nick":"paulfryzel","date":"2013-08-05T07:00:59.771Z","type":"join"}
{"nick":"rendar","date":"2013-08-05T07:01:35.320Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 256 seconds","date":"2013-08-05T07:09:42.292Z","type":"quit"}
{"nick":"brson_","reason":"Quit: leaving","date":"2013-08-05T07:15:00.087Z","type":"quit"}
{"nick":"hz","date":"2013-08-05T07:15:36.631Z","type":"quit"}
{"nick":"paddybyers","reason":"Ping timeout: 264 seconds","date":"2013-08-05T07:17:55.108Z","type":"quit"}
{"nick":"csaoh","date":"2013-08-05T07:31:05.960Z","type":"join"}
{"nick":"indutny","message":"hohoho","date":"2013-08-05T07:32:48.226Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-05T07:41:17.757Z","type":"nick"}
{"nick":"st_luke_","reason":"Remote host closed the connection","date":"2013-08-05T07:49:14.611Z","type":"quit"}
{"nick":"roxlu","date":"2013-08-05T07:57:01.255Z","type":"part"}
{"nick":"paddybyers","date":"2013-08-05T08:04:18.979Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 264 seconds","date":"2013-08-05T08:11:19.034Z","type":"quit"}
{"nick":"felixge","date":"2013-08-05T08:39:28.006Z","type":"join"}
{"nick":"mraleph1","reason":"Read error: Connection reset by peer","date":"2013-08-05T09:04:23.500Z","type":"quit"}
{"nick":"mraleph","date":"2013-08-05T09:04:24.118Z","type":"join"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-08-05T09:06:08.353Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-08-05T09:06:21.377Z","type":"join"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-05T09:08:18.471Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-08-05T09:10:33.164Z","type":"quit"}
{"nick":"hz","date":"2013-08-05T09:12:54.793Z","type":"join"}
{"nick":"csaoh","date":"2013-08-05T09:15:22.081Z","type":"join"}
{"nick":"emilsedgh","date":"2013-08-05T09:18:26.872Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-08-05T09:27:19.328Z","type":"quit"}
{"nick":"dshaw_","date":"2013-08-05T09:38:42.093Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-05T09:39:30.809Z","type":"join"}
{"nick":"dshaw_1","date":"2013-08-05T09:40:12.182Z","type":"join"}
{"nick":"dshaw_","reason":"Read error: Connection reset by peer","date":"2013-08-05T09:40:26.018Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-05T09:46:03.446Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-05T09:48:05.989Z","type":"join"}
{"nick":"emilsedgh","reason":"Changing host","date":"2013-08-05T09:50:04.513Z","type":"quit"}
{"nick":"emilsedgh","date":"2013-08-05T09:50:04.729Z","type":"join"}
{"nick":"dshaw_1","reason":"Ping timeout: 264 seconds","date":"2013-08-05T09:50:54.979Z","type":"quit"}
{"nick":"hz","date":"2013-08-05T09:56:06.040Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-05T10:02:02.391Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-08-05T10:07:00.100Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 276 seconds","date":"2013-08-05T10:11:30.892Z","type":"quit"}
{"nick":"stagas","date":"2013-08-05T10:19:15.373Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Sam Roberts\u000f \u00037v0.10\u000f * \u00026a7be99\u0002 : doc: fs.open, fix flag/mode confusion, etc. - http://git.io/xlq3ww","date":"2013-08-05T10:26:48.496Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1402 \u00037UNSTABLE\u000f osx-ia32 (1/593) linux-x64 (4/593) smartos-x64 (2/593) http://jenkins.nodejs.org/job/nodejs-v0.10/1402/","date":"2013-08-05T10:35:13.531Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-05T10:40:16.581Z","type":"quit"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #132 \u00037UNSTABLE\u000f windows-ia32 (9/593) windows-x64 (9/593) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/132/","date":"2013-08-05T10:42:59.674Z","type":"message"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-08-05T10:43:49.393Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-08-05T10:45:05.222Z","type":"join"}
{"nick":"dshaw_","date":"2013-08-05T10:47:41.381Z","type":"join"}
{"nick":"csaoh","date":"2013-08-05T10:51:00.171Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 245 seconds","date":"2013-08-05T10:51:48.164Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-08-05T11:07:30.374Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-08-05T11:11:48.164Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Forrest L Norvell\u000f \u00037v0.10\u000f * \u0002231092d\u0002 : doc: document domain.enter() and domain.exit() - http://git.io/Nt75Zw","date":"2013-08-05T11:11:56.022Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1403 \u00037UNSTABLE\u000f smartos-x64 (1/593) linux-ia32 (10/593) http://jenkins.nodejs.org/job/nodejs-v0.10/1403/","date":"2013-08-05T11:19:44.158Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #133 \u00037UNSTABLE\u000f windows-ia32 (9/593) windows-x64 (10/593) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/133/","date":"2013-08-05T11:27:06.179Z","type":"message"}
{"nick":"dominictarr","date":"2013-08-05T11:31:07.004Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002553f8ef\u0002 : test: add windows-only snprintf() function - http://git.io/Zcjowg","date":"2013-08-05T11:31:54.244Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: ^","date":"2013-08-05T11:31:56.927Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.8\u0002: #24 \u00037UNSTABLE\u000f smartos (3/158) linux (3/158) osx (2/158) http://jenkins.nodejs.org/job/libuv-v0.8/24/","date":"2013-08-05T11:34:12.287Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10-gyp\u0002: #68 \u00034FAILURE\u000f windows-x64 (3/188) smartos-ia32 (2/187) windows-ia32 (3/188) smartos-x64 (2/187) http://jenkins.nodejs.org/job/libuv-v0.10-gyp/68/","date":"2013-08-05T11:39:20.438Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #149 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/libuv-master/149/","date":"2013-08-05T11:40:05.465Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #87 \u00034FAILURE\u000f smartos-ia32 (3/191) smartos-x64 (2/191) http://jenkins.nodejs.org/job/libuv-master-gyp/87/","date":"2013-08-05T11:43:29.526Z","type":"message"}
{"nick":"paulfryzel","date":"2013-08-05T12:08:09.204Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-05T12:09:24.074Z","type":"quit"}
{"nick":"bnoordhuis","message":"don't tell me i broke it again...","date":"2013-08-05T12:11:11.179Z","type":"message"}
{"nick":"paulfryzel","reason":"Ping timeout: 256 seconds","date":"2013-08-05T12:12:52.554Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002fd08290\u0002 : test: add windows-only snprintf() function - http://git.io/Nw3UvQ","date":"2013-08-05T12:14:23.854Z","type":"message"}
{"nick":"bnoordhuis","message":"hm, seems part jenkins fail, part msvc fail","date":"2013-08-05T12:14:49.930Z","type":"message"}
{"nick":"stagas","reason":"Ping timeout: 245 seconds","date":"2013-08-05T12:18:28.166Z","type":"quit"}
{"nick":"pachet","date":"2013-08-05T12:21:29.639Z","type":"join"}
{"nick":"hz","date":"2013-08-05T12:24:41.170Z","type":"join"}
{"nick":"hz","reason":"Client Quit","date":"2013-08-05T12:25:21.183Z","type":"quit"}
{"nick":"hz","date":"2013-08-05T12:25:38.146Z","type":"join"}
{"nick":"Ralt","reason":"Ping timeout: 246 seconds","date":"2013-08-05T12:28:59.186Z","type":"quit"}
{"nick":"dominictarr","date":"2013-08-05T12:29:16.961Z","type":"join"}
{"nick":"Ralt","date":"2013-08-05T12:30:01.668Z","type":"join"}
{"nick":"dominictarr","reason":"Client Quit","date":"2013-08-05T12:31:16.996Z","type":"quit"}
{"nick":"dshaw_","date":"2013-08-05T12:48:28.250Z","type":"join"}
{"nick":"dshaw_","reason":"Ping timeout: 264 seconds","date":"2013-08-05T12:53:19.002Z","type":"quit"}
{"nick":"saghul","date":"2013-08-05T12:57:04.183Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-08-05T12:59:33.782Z","type":"quit"}
{"nick":"dominictarr","date":"2013-08-05T13:02:58.937Z","type":"join"}
{"nick":"dominictarr","reason":"Client Quit","date":"2013-08-05T13:04:08.767Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-08-05T13:08:38.335Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-08-05T13:12:55.123Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-05T13:22:47.758Z","type":"join"}
{"nick":"jmar777","date":"2013-08-05T13:26:05.867Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-05T13:27:03.906Z","type":"quit"}
{"nick":"bajtos","date":"2013-08-05T13:38:28.346Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-05T13:51:06.647Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-05T14:03:45.114Z","type":"join"}
{"nick":"paulfryzel","date":"2013-08-05T14:13:59.464Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-05T14:27:47.927Z","type":"quit"}
{"nick":"roxlu","date":"2013-08-05T14:37:57.702Z","type":"join"}
{"nick":"roxlu","message":"hey ","date":"2013-08-05T14:37:59.701Z","type":"message"}
{"nick":"roxlu","message":"someone familiar with this uv.h erorr: https://gist.github.com/roxlu/969b04e9e996778fad44 ?","date":"2013-08-05T14:38:19.350Z","type":"message"}
{"nick":"AvianFlu","date":"2013-08-05T14:38:58.291Z","type":"join"}
{"nick":"st_luke","date":"2013-08-05T14:46:48.761Z","type":"join"}
{"nick":"jmar777","reason":"Read error: Connection reset by peer","date":"2013-08-05T14:48:02.860Z","type":"quit"}
{"nick":"jmar777","date":"2013-08-05T14:48:33.508Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 240 seconds","date":"2013-08-05T14:51:02.543Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-05T14:51:25.756Z","type":"join"}
{"nick":"stagas","date":"2013-08-05T14:51:46.056Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 240 seconds","date":"2013-08-05T14:55:26.543Z","type":"quit"}
{"nick":"kazupon","date":"2013-08-05T14:58:34.974Z","type":"join"}
{"nick":"st_luke","date":"2013-08-05T15:04:01.192Z","type":"join"}
{"nick":"st_luke","reason":"Read error: Connection reset by peer","date":"2013-08-05T15:04:21.745Z","type":"quit"}
{"nick":"julianduque","date":"2013-08-05T15:07:21.332Z","type":"join"}
{"nick":"indutny","message":"hoya","date":"2013-08-05T15:15:27.510Z","type":"message"}
{"nick":"bradleymeck","date":"2013-08-05T15:16:17.637Z","type":"join"}
{"nick":"tjfontaine","message":"wtg java! https://gist.github.com/tjfontaine/6156737","date":"2013-08-05T15:19:23.041Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #150 \u00034FAILURE\u000f windows (4/192) http://jenkins.nodejs.org/job/libuv-master/150/","date":"2013-08-05T15:20:37.988Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-node-integration\u0002: #138 \u00034FAILURE\u000f http://jenkins.nodejs.org/job/libuv-node-integration/138/","date":"2013-08-05T15:20:50.075Z","type":"message"}
{"nick":"roxlu","message":"hey indutny ! ","date":"2013-08-05T15:20:56.747Z","type":"message"}
{"nick":"indutny","message":"hoya","date":"2013-08-05T15:21:00.079Z","type":"message"}
{"nick":"roxlu","message":"hehe","date":"2013-08-05T15:21:02.539Z","type":"message"}
{"nick":"roxlu","message":"indutny: do you have an idea what this might cause: https://gist.github.com/roxlu/969b04e9e996778fad44 ","date":"2013-08-05T15:21:39.637Z","type":"message"}
{"nick":"roxlu","message":"it's a msvc2012 error I get ","date":"2013-08-05T15:21:51.151Z","type":"message"}
{"nick":"indutny","message":"struct {} <- without semicolon?","date":"2013-08-05T15:22:00.032Z","type":"message"}
{"nick":"indutny","message":"or probably class","date":"2013-08-05T15:22:01.978Z","type":"message"}
{"nick":"indutny","message":"ah wait","date":"2013-08-05T15:22:04.250Z","type":"message"}
{"nick":"roxlu","message":"it's in uv.h somewhere","date":"2013-08-05T15:22:20.536Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #88 \u00037UNSTABLE\u000f smartos-ia32 (2/191) windows-ia32 (3/192) smartos-x64 (2/191) windows-x64 (3/192) linux-ia32 (1/191) http://jenkins.nodejs.org/job/libuv-master-gyp/88/","date":"2013-08-05T15:22:30.043Z","type":"message"}
{"nick":"roxlu","message":"it looks like an #include uv.h, w/o extern \"C\" ","date":"2013-08-05T15:22:36.340Z","type":"message"}
{"nick":"st_luke","date":"2013-08-05T15:23:57.755Z","type":"join"}
{"nick":"indutny","message":"roxlu: what are you doing?","date":"2013-08-05T15:24:21.413Z","type":"message"}
{"nick":"indutny","message":"are you linking it yourself?","date":"2013-08-05T15:24:29.180Z","type":"message"}
{"nick":"roxlu","message":"I've compiled libuv as a static lib and linking against that one","date":"2013-08-05T15:24:53.878Z","type":"message"}
{"nick":"roxlu","message":"I've got a MSVC2012 project file in which I set the libuv.lib as input lib","date":"2013-08-05T15:25:07.742Z","type":"message"}
{"nick":"groundwater","date":"2013-08-05T15:25:40.944Z","type":"join"}
{"nick":"st_luke_","date":"2013-08-05T15:26:47.164Z","type":"join"}
{"nick":"st_luke_","reason":"Read error: Connection reset by peer","date":"2013-08-05T15:27:38.977Z","type":"quit"}
{"nick":"st_luke","reason":"Ping timeout: 240 seconds","date":"2013-08-05T15:28:14.542Z","type":"quit"}
{"nick":"roxlu","message":"hmm I fixed it by make #include <uv.h> the very first line in my main.cpp","date":"2013-08-05T15:29:47.459Z","type":"message"}
{"nick":"st_luke","date":"2013-08-05T15:29:56.753Z","type":"join"}
{"nick":"st_luke_","date":"2013-08-05T15:34:12.751Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 240 seconds","date":"2013-08-05T15:34:14.543Z","type":"quit"}
{"nick":"roxlu","message":"indutny: it would be nice to have some checks in uv.h when some other defines have been set already and give an error","date":"2013-08-05T15:36:58.005Z","type":"message"}
{"nick":"roxlu","message":"as this is typical win problem","date":"2013-08-05T15:37:03.720Z","type":"message"}
{"nick":"st_luke","date":"2013-08-05T15:38:16.758Z","type":"join"}
{"nick":"st_luke_","reason":"Ping timeout: 240 seconds","date":"2013-08-05T15:38:38.542Z","type":"quit"}
{"nick":"st_luke_","date":"2013-08-05T15:39:17.758Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-08-05T15:42:06.744Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 240 seconds","date":"2013-08-05T15:42:14.548Z","type":"quit"}
{"nick":"st_luke_","reason":"Ping timeout: 240 seconds","date":"2013-08-05T15:43:26.545Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-05T15:45:15.536Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 256 seconds","date":"2013-08-05T15:50:04.310Z","type":"quit"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-05T15:50:15.074Z","type":"quit"}
{"nick":"indutny","message":"roxlu: heh","date":"2013-08-05T15:51:48.203Z","type":"message"}
{"nick":"indutny","message":"yes, its tipical on windows","date":"2013-08-05T15:51:53.633Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: hey man","date":"2013-08-05T15:52:11.600Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-v0.10\u0002: #104 \u00034FAILURE\u000f windows (4/188) linux (1/187) http://jenkins.nodejs.org/job/libuv-v0.10/104/","date":"2013-08-05T15:57:11.552Z","type":"message"}
{"nick":"dap","date":"2013-08-05T15:57:16.751Z","type":"join"}
{"nick":"dominictarr","date":"2013-08-05T15:59:23.776Z","type":"join"}
{"nick":"wavded","date":"2013-08-05T16:01:26.160Z","type":"join"}
{"nick":"isaacs","message":"good morning","date":"2013-08-05T16:04:46.291Z","type":"message"}
{"nick":"Domenic_","message":"good morning","date":"2013-08-05T16:05:01.208Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-05T16:05:10.559Z","type":"quit"}
{"nick":"Domenic_","message":"isaacs: quick question about vm2. should we maintain backward compatibility and keep conflating contexts and global objects? or should we do like contextify and say a context has a global object?","date":"2013-08-05T16:06:06.112Z","type":"message"}
{"nick":"indutny","message":"morning","date":"2013-08-05T16:06:34.018Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: backwards compatibility would be best.","date":"2013-08-05T16:06:34.228Z","type":"message"}
{"nick":"c4milo","date":"2013-08-05T16:06:50.339Z","type":"join"}
{"nick":"Domenic_","message":"isaacs: ok. shouldn't be too hard. will store hidden reference to context on the global object, then whenever people pass in the global object to the C++ we just retrieve the context from the global via this hidden property and use it like normal.","date":"2013-08-05T16:07:13.405Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: i think the best way would be to work like a reference to a window object.","date":"2013-08-05T16:07:36.117Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: ie, if the other realm makes a change to it, there it is","date":"2013-08-05T16:07:54.741Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: it should be like shared access to the global obj","date":"2013-08-05T16:08:08.618Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: sure that already works though, it's just whether you get back the context or the global from vm.createContext","date":"2013-08-05T16:08:15.750Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: if we MUST break bw compatibility, then let's create a whole new API for it, and deprecate the janky one we have now.","date":"2013-08-05T16:08:30.387Z","type":"message"}
{"nick":"Domenic_","message":"there's definitely no MUST here.","date":"2013-08-05T16:08:48.142Z","type":"message"}
{"nick":"isaacs","message":"oic, it could give you the global, but when you do script.runInContext(tehGlobal) it looks up the hidden context obj, and uses that?","date":"2013-08-05T16:09:05.145Z","type":"message"}
{"nick":"Domenic_","message":"yeah","date":"2013-08-05T16:09:12.413Z","type":"message"}
{"nick":"Domenic_","message":"so when you do var context = vm.createContext(global), context === global","date":"2013-08-05T16:09:40.262Z","type":"message"}
{"nick":"Domenic_","message":"in contextify it's context.getGlobal() === global","date":"2013-08-05T16:10:06.118Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: sup fedor?","date":"2013-08-05T16:10:10.595Z","type":"message"}
{"nick":"Domenic_","message":"there's also context.run()","date":"2013-08-05T16:10:12.653Z","type":"message"}
{"nick":"indutny","message":"lets review my thing! :)","date":"2013-08-05T16:10:17.188Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: which one?","date":"2013-08-05T16:10:56.048Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: yeah.  and those leak IN the context itself.","date":"2013-08-05T16:11:00.150Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: at least, last i checked","date":"2013-08-05T16:11:05.196Z","type":"message"}
{"nick":"indutny","message":"https://github.com/joyent/node/pull/5987#issuecomment-22104054","date":"2013-08-05T16:11:11.095Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ^","date":"2013-08-05T16:11:13.294Z","type":"message"}
{"nick":"dominictarr","date":"2013-08-05T16:11:50.549Z","type":"join"}
{"nick":"Domenic_","message":"isaacs: that was actually not an inherent feature of contextify, just part of it's JS API. See https://github.com/brianmcd/contextify/blob/master/lib/contextify.js","date":"2013-08-05T16:11:55.267Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: ok","date":"2013-08-05T16:12:31.414Z","type":"message"}
{"nick":"Domenic_","message":"i think this hidden reference thing will work pretty well though.","date":"2013-08-05T16:13:00.574Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: istr it did stuff like var obj = contextify.createContext({assert:assert}); obj.run('assert(typeof run === \"undefined\")') would fail","date":"2013-08-05T16:13:10.498Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: I think that was true for contextify({ assert: assert }) but this contextify.createContext thing is new and does not have that problem.","date":"2013-08-05T16:13:46.209Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: ahhh","date":"2013-08-05T16:14:00.476Z","type":"message"}
{"nick":"isaacs","message":"ok","date":"2013-08-05T16:14:01.222Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: so, basically, in that isue (\"vm module is incorrect\"), I wrote a bunch of assertions that i think it has to pass.","date":"2013-08-05T16:14:38.776Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: i won't say taht passing those means it's guaranteed i'm going to lgtm it, but i definitely won't lgtm it *unless* it passes those :)","date":"2013-08-05T16:15:07.653Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: ah ok, i guess i hadn't reviewed those in too long. \"A context should be indistinguishable from the object it's based on.\" is #1, hehe","date":"2013-08-05T16:15:26.675Z","type":"message"}
{"nick":"Domenic_","message":"It's conceptually annoying that the global and context are conflated, but oh well.","date":"2013-08-05T16:15:41.773Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: thanks. will check in a sec. sorry if that rhymes","date":"2013-08-05T16:15:50.664Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: its ok, I like that you're doing it this way","date":"2013-08-05T16:16:08.230Z","type":"message"}
{"nick":"bnoordhuis","message":"well played, sir :)","date":"2013-08-05T16:16:19.179Z","type":"message"}
{"nick":"indutny","message":"no matter how rhyme, I still enjoy your style","date":"2013-08-05T16:16:26.185Z","type":"message"}
{"nick":"indutny","message":"s/how/how you/","date":"2013-08-05T16:16:30.304Z","type":"message"}
{"nick":"indutny","message":";)","date":"2013-08-05T16:16:33.541Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: yeah, but keeping them separated is confusing if you don't have a rather deep understanding of the language.","date":"2013-08-05T16:16:56.635Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: most people jsut wanna say \"run with this sandbox of references available\"","date":"2013-08-05T16:17:12.936Z","type":"message"}
{"nick":"bajtos","date":"2013-08-05T16:17:24.415Z","type":"join"}
{"nick":"isaacs","message":"Domenic_: though... it really sucks that you can climb up the prototype out of the box.","date":"2013-08-05T16:17:25.943Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: we should eventually implement the V8 security token whatever thingies, if those still exist","date":"2013-08-05T16:17:47.419Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033mstarzinger@chromium.org\u000f \u00037v0.10\u000f * \u00026b92a71\u0002 : v8: back-port fix for CVE-2013-2882 - http://git.io/mEmPqw","date":"2013-08-05T16:18:26.042Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-05T16:20:16.481Z","type":"quit"}
{"nick":"Domenic_","message":"isaacs: honestly I'd rather have vm.createContext not return anything, so it's clear it's a mutator that does something magic to the sandbox. but this is all in the realm of \"if we could start over\" land, anyway.","date":"2013-08-05T16:22:16.252Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: so... if you want to create a completely new API from whole cloth, then that's not out of hte question.","date":"2013-08-05T16:22:53.831Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: but don't get too excited.","date":"2013-08-05T16:22:59.029Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: that's also a lot more work, and it'll have to be MUCH better to justify","date":"2013-08-05T16:23:11.316Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: and the old API will have ot live in the corner forever.","date":"2013-08-05T16:23:25.049Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: meh, yeah, not really worth it. there's no real new capabilities it would introduce to justify that, just better API design.","date":"2013-08-05T16:23:49.391Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: what i kind of always imagined was that you'd create a Script object, and then that'd be the house for all the stuff.","date":"2013-08-05T16:23:52.630Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: so you could compile a script, assign a global, etc.","date":"2013-08-05T16:24:06.076Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: or even like, model the V8 api for doing this","date":"2013-08-05T16:24:14.812Z","type":"message"}
{"nick":"jmar777","date":"2013-08-05T16:24:25.161Z","type":"join"}
{"nick":"isaacs","message":"Domenic_: so basically, i'td be like a V8 binding to V8 :)","date":"2013-08-05T16:24:27.097Z","type":"message"}
{"nick":"ircretary","message":"Yo, Dawg.","date":"2013-08-05T16:24:39.896Z","type":"message"}
{"nick":"isaacs","message":"ircretary: Exactly.","date":"2013-08-05T16:24:48.675Z","type":"message"}
{"nick":"ircretary","message":"isaacs: I'm not sure what to do with that command.  Ask for help in PM.","date":"2013-08-05T16:24:49.613Z","type":"message"}
{"nick":"isaacs","message":"var v8 = require('v8');  var ctx = v8.createContext(); var glb = ctx.getGlobal(); etc.","date":"2013-08-05T16:26:38.464Z","type":"message"}
{"nick":"isaacs","message":"the vm module is *almost* there, but frustratingly full of impedance mismatches.","date":"2013-08-05T16:27:13.776Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: i don't konw, i'm babbling, don't listen to me.","date":"2013-08-05T16:27:20.495Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: haha, i mean, could be fun. just a bit far from where the conversation is now i guess, so not sure what's going on.","date":"2013-08-05T16:27:58.966Z","type":"message"}
{"nick":"isaacs","message":"eah","date":"2013-08-05T16:28:13.110Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: fuckit, do what you'er doing.  you're on a good path, it seems like.","date":"2013-08-05T16:28:26.061Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: my main beef with the VM module is that it's not close enough to V8 to say \"Learn V8! It works like that!\" and it's not close enough to the browser to behave that way","date":"2013-08-05T16:28:58.949Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1404 \u00037UNSTABLE\u000f osx-ia32 (1/593) linux-x64 (2/593) http://jenkins.nodejs.org/job/nodejs-v0.10/1404/","date":"2013-08-05T16:29:00.248Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: and you kinda need to know a lot about how the language works to use it, but also then learn how it's actually completely different form how the language works","date":"2013-08-05T16:29:21.486Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: and then this oddball \"copy back to the context object global thing after running\"?  ew.","date":"2013-08-05T16:29:37.913Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: well, that last will be gone, hooray","date":"2013-08-05T16:29:48.963Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: vm.runInContext('a.b=1', {a:{b:0}}); assert.equal(a.b, 1) // fail","date":"2013-08-05T16:30:04.461Z","type":"message"}
{"nick":"isaacs","message":"gotta run.","date":"2013-08-05T16:30:20.848Z","type":"message"}
{"nick":"Domenic_","message":"i think the problem with it after my current work will just be that it has a large surface area full of API that you mostly don't care about.","date":"2013-08-05T16:30:27.539Z","type":"message"}
{"nick":"isaacs","message":"i'll be back in a few hours, for my bug triage day","date":"2013-08-05T16:30:31.348Z","type":"message"}
{"nick":"bnoordhuis","message":"https://github.com/v8/v8/commit/0141953 <- \"introduce eternal handles\"","date":"2013-08-05T16:32:51.939Z","type":"message"}
{"nick":"bnoordhuis","message":"sounds exotic and mysterious, doesn't it?","date":"2013-08-05T16:33:04.711Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: eternal handles are the new $ENTITY I'm going to pray to","date":"2013-08-05T16:35:56.651Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-05T16:40:24.301Z","type":"quit"}
{"nick":"isaacs","message":"i would guess that eternal handles never get gc'ed?","date":"2013-08-05T16:40:43.998Z","type":"message"}
{"nick":"isaacs","message":"that could be good for some of our current Persistents","date":"2013-08-05T16:40:53.865Z","type":"message"}
{"nick":"isaacs","message":"especially symbols and the like","date":"2013-08-05T16:41:07.626Z","type":"message"}
{"nick":"isaacs","action":"&","date":"2013-08-05T16:41:30.987Z","type":"action"}
{"nick":"LOUDBOT","message":"DIRK GENTLY AND THE HOLISTIC OFFSHORE PROGRAMMING SWEATSHOP","date":"2013-08-05T16:41:31.200Z","type":"message"}
{"nick":"mmalecki","message":"how do I build node with v8's define declared?","date":"2013-08-05T16:41:39.385Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 248 seconds","date":"2013-08-05T16:43:17.835Z","type":"quit"}
{"nick":"piscisaureus_","date":"2013-08-05T16:47:38.063Z","type":"join"}
{"nick":"mmalecki","message":"ah, there's a ./configure option for that, nvm","date":"2013-08-05T16:47:55.874Z","type":"message"}
{"nick":"sblom","date":"2013-08-05T16:49:44.058Z","type":"join"}
{"nick":"julianduque","reason":"Ping timeout: 245 seconds","date":"2013-08-05T16:51:40.150Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-05T16:54:07.508Z","type":"quit"}
{"nick":"csaoh","reason":"Quit: csaoh","date":"2013-08-05T16:55:40.277Z","type":"quit"}
{"nick":"dshaw_","date":"2013-08-05T16:56:59.041Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #134 \u00037UNSTABLE\u000f windows-ia32 (10/593) windows-x64 (9/593) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/134/","date":"2013-08-05T16:59:11.715Z","type":"message"}
{"nick":"mikeal","date":"2013-08-05T17:04:23.498Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-05T17:06:37.975Z","type":"nick"}
{"nick":"TooTallNate","date":"2013-08-05T17:07:13.217Z","type":"join"}
{"nick":"hz","date":"2013-08-05T17:12:13.669Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2013-08-05T17:18:43.882Z","type":"quit"}
{"nick":"austo","date":"2013-08-05T17:21:43.728Z","type":"join"}
{"nick":"pfox__","message":"is there any discussion/documentation about transitioning handles to different loops in the same process? i gather that it's not really possible, ootb. currently if there's anyone doing anything like it, though.","date":"2013-08-05T17:26:34.688Z","type":"message"}
{"nick":"pfox__","message":"s/currently/curious/","date":"2013-08-05T17:26:52.760Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-08-05T17:32:51.081Z","type":"quit"}
{"nick":"indutny","message":"ben","date":"2013-08-05T17:35:40.088Z","type":"message"}
{"nick":"indutny","message":"where are thou?","date":"2013-08-05T17:35:44.761Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-08-05T17:41:02.504Z","type":"quit"}
{"nick":"felixge","reason":"Quit: felixge","date":"2013-08-05T17:41:36.950Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-05T17:45:10.026Z","type":"quit"}
{"nick":"pachet","reason":"Quit: leaving","date":"2013-08-05T17:46:45.150Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-08-05T17:49:34.166Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-08-05T17:53:53.166Z","type":"quit"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-05T17:57:47.647Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-05T18:05:07.377Z","type":"join"}
{"nick":"AvianFlu","date":"2013-08-05T18:07:10.536Z","type":"join"}
{"nick":"dominictarr","date":"2013-08-05T18:11:55.330Z","type":"join"}
{"nick":"c4milo","date":"2013-08-05T18:20:57.352Z","type":"join"}
{"nick":"brson","date":"2013-08-05T18:21:14.540Z","type":"join"}
{"nick":"c4milo_","date":"2013-08-05T18:21:33.021Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 248 seconds","date":"2013-08-05T18:25:09.763Z","type":"quit"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-08-05T18:28:58.373Z","type":"quit"}
{"nick":"dshaw_","date":"2013-08-05T18:30:21.339Z","type":"join"}
{"nick":"defunctzombie","reason":"Ping timeout: 264 seconds","date":"2013-08-05T18:30:47.472Z","type":"quit"}
{"nick":"dshaw_","reason":"Ping timeout: 245 seconds","date":"2013-08-05T18:34:35.123Z","type":"quit"}
{"nick":"defunctzombie_zz","date":"2013-08-05T18:36:31.077Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-08-05T18:36:55.545Z","type":"nick"}
{"nick":"defunctzombie","reason":"Changing host","date":"2013-08-05T18:37:13.804Z","type":"quit"}
{"nick":"defunctzombie","date":"2013-08-05T18:37:14.017Z","type":"join"}
{"nick":"dshaw_","date":"2013-08-05T18:42:12.295Z","type":"join"}
{"nick":"indutny","message":"ben ben","date":"2013-08-05T18:44:34.619Z","type":"message"}
{"nick":"indutny","message":"isaacs: hi","date":"2013-08-05T18:44:45.108Z","type":"message"}
{"nick":"indutny","message":"have I resolved this issue with npm publish?","date":"2013-08-05T18:44:51.439Z","type":"message"}
{"nick":"indutny","message":"segfault in bio.cc","date":"2013-08-05T18:44:55.505Z","type":"message"}
{"nick":"dshaw_1","date":"2013-08-05T18:46:01.653Z","type":"join"}
{"nick":"dshaw_","reason":"Read error: Connection reset by peer","date":"2013-08-05T18:46:32.685Z","type":"quit"}
{"nick":"stagas_","date":"2013-08-05T18:47:48.548Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 248 seconds","date":"2013-08-05T18:48:37.732Z","type":"quit"}
{"nick":"stagas_","new_nick":"stagas","date":"2013-08-05T18:48:44.322Z","type":"nick"}
{"nick":"kazupon","date":"2013-08-05T18:51:29.162Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-05T18:52:58.996Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-05T18:54:13.101Z","type":"join"}
{"nick":"pachet","date":"2013-08-05T18:54:38.150Z","type":"join"}
{"nick":"bajtos","date":"2013-08-05T18:56:28.954Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2013-08-05T18:56:46.890Z","type":"quit"}
{"nick":"bajtos","reason":"Client Quit","date":"2013-08-05T18:58:02.353Z","type":"quit"}
{"nick":"isaacs","message":"indutny: checking now","date":"2013-08-05T19:03:00.603Z","type":"message"}
{"nick":"indutny","message":"thanks","date":"2013-08-05T19:06:52.187Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-08-05T19:06:52.720Z","type":"message"}
{"nick":"c4milo_","reason":"Remote host closed the connection","date":"2013-08-05T19:12:05.526Z","type":"quit"}
{"nick":"c4milo","date":"2013-08-05T19:12:39.373Z","type":"join"}
{"nick":"isaacs","message":"indutny: seems to work now :)","date":"2013-08-05T19:12:43.293Z","type":"message"}
{"nick":"isaacs","message":"indutny: thanks!","date":"2013-08-05T19:12:45.420Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-08-05T19:13:06.239Z","type":"join"}
{"nick":"indutny","message":"you're welcome :)","date":"2013-08-05T19:13:28.489Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: ben, ben, ben","date":"2013-08-05T19:13:50.914Z","type":"message"}
{"nick":"indutny","message":"where are you?","date":"2013-08-05T19:13:54.105Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-05T19:15:46.143Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 268 seconds","date":"2013-08-05T19:17:19.104Z","type":"quit"}
{"nick":"bnoordhuis","message":"indutny: i'm here and yes, i will look at your pr","date":"2013-08-05T19:20:14.719Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-05T19:21:18.893Z","type":"quit"}
{"nick":"bnoordhuis","message":"also, it seems i broke the libuv build with older automake versions...","date":"2013-08-05T19:21:39.258Z","type":"message"}
{"nick":"bnoordhuis","message":"fix something so it works with a newer version and you break something else with an older version. you just can't win","date":"2013-08-05T19:22:05.900Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-08-05T19:26:28.979Z","type":"message"}
{"nick":"sblom","reason":"Ping timeout: 264 seconds","date":"2013-08-05T19:28:43.003Z","type":"quit"}
{"nick":"DrPizza","reason":"Quit: alice.","date":"2013-08-05T19:33:44.054Z","type":"quit"}
{"nick":"isaacs","message":"bnoordhuis: trivial fix: https://gist.github.com/isaacs/6158784","date":"2013-08-05T19:33:44.266Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: lgty?","date":"2013-08-05T19:33:49.680Z","type":"message"}
{"nick":"DrPizza","date":"2013-08-05T19:33:55.316Z","type":"join"}
{"nick":"DrPizza","reason":"Client Quit","date":"2013-08-05T19:37:42.520Z","type":"quit"}
{"nick":"DrPizza","date":"2013-08-05T19:37:59.765Z","type":"join"}
{"nick":"bnoordhuis","message":"isaacs: yep, lgtm","date":"2013-08-05T19:39:34.022Z","type":"message"}
{"nick":"isaacs","message":"kk","date":"2013-08-05T19:39:42.669Z","type":"message"}
{"nick":"isaacs","message":"i'm fixing up koichik's test so that it doens't require internet, as well","date":"2013-08-05T19:39:51.698Z","type":"message"}
{"nick":"TooTallNate","reason":"Quit: Computer has gone to sleep.","date":"2013-08-05T19:42:38.742Z","type":"quit"}
{"nick":"isaacs","message":"bnoordhuis: there is actually a very interesting bug that i've discovered with koichik's patch.  https requests aren't using the https.globalAgent!","date":"2013-08-05T19:46:56.861Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: oh, nevermind.  i was reading the test wrong :)","date":"2013-08-05T19:49:17.593Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Koichi Kobayashi\u000f \u00037master\u000f * \u000272ad2c9\u0002 : https: fix default port (+1 more commits) - http://git.io/mRR8iQ","date":"2013-08-05T19:53:45.977Z","type":"message"}
{"nick":"mikeal","date":"2013-08-05T19:54:01.381Z","type":"join"}
{"nick":"c4milo","date":"2013-08-05T19:55:38.338Z","type":"join"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037master\u000f * \u0002f4b1e00\u0002 : test: Move test-http-default-port from disabled to simple - http://git.io/_FRIVg","date":"2013-08-05T19:55:40.003Z","type":"message"}
{"nick":"indexzero","date":"2013-08-05T20:01:48.096Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #369 \u00037UNSTABLE\u000f smartos-ia32 (2/618) smartos-x64 (9/618) osx-x64 (1/618) linux-x64 (1/618) http://jenkins.nodejs.org/job/nodejs-master/369/","date":"2013-08-05T20:03:20.096Z","type":"message"}
{"nick":"mikeal1","date":"2013-08-05T20:03:47.125Z","type":"join"}
{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2013-08-05T20:03:50.085Z","type":"quit"}
{"nick":"wavded","reason":"Ping timeout: 260 seconds","date":"2013-08-05T20:06:28.025Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-05T20:07:14.543Z","type":"quit"}
{"nick":"wavded","date":"2013-08-05T20:08:35.983Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #370 \u00037UNSTABLE\u000f smartos-ia32 (2/619) smartos-x64 (9/619) osx-x64 (1/619) http://jenkins.nodejs.org/job/nodejs-master/370/","date":"2013-08-05T20:12:44.401Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: reviewed","date":"2013-08-05T20:15:15.419Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: thank you!","date":"2013-08-05T20:15:20.704Z","type":"message"}
{"nick":"indutny","message":"I'll fix everything and update PR tomorrow","date":"2013-08-05T20:15:27.728Z","type":"message"}
{"nick":"indutny","message":"fighting with pretty obscure spdy bug right now","date":"2013-08-05T20:15:40.327Z","type":"message"}
{"nick":"bnoordhuis","message":"btw, did you get around to investigating https://github.com/joyent/node/issues/4917 ?","date":"2013-08-05T20:15:57.815Z","type":"message"}
{"nick":"bnoordhuis","message":"if not, i'll try to look at it tomorro","date":"2013-08-05T20:16:05.129Z","type":"message"}
{"nick":"bnoordhuis","message":"*tomorrow. fscking mac keyboard","date":"2013-08-05T20:16:11.853Z","type":"message"}
{"nick":"indutny","message":"ah, not really","date":"2013-08-05T20:16:17.298Z","type":"message"}
{"nick":"indutny","message":"sorry","date":"2013-08-05T20:16:17.978Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, no problem","date":"2013-08-05T20:16:23.622Z","type":"message"}
{"nick":"TooTallNate","date":"2013-08-05T20:18:35.530Z","type":"join"}
{"nick":"julianduque","date":"2013-08-05T20:19:11.978Z","type":"join"}
{"nick":"bnoordhuis","message":"isaacs: btw, about making things more approachable to potential contributors","date":"2013-08-05T20:19:55.814Z","type":"message"}
{"nick":"bnoordhuis","message":"the rust project has this: https://github.com/mozilla/rust/issues?labels=E-easy&page=1&state=open","date":"2013-08-05T20:20:03.302Z","type":"message"}
{"nick":"bnoordhuis","message":"an issue tag for, well, easy issues. maybe we can steal that","date":"2013-08-05T20:20:20.797Z","type":"message"}
{"nick":"bnoordhuis","message":"of course, someone needs to go through all the issues and tag them","date":"2013-08-05T20:20:42.573Z","type":"message"}
{"nick":"dshaw_1","reason":"Quit: Leaving.","date":"2013-08-05T20:22:08.529Z","type":"quit"}
{"nick":"tjfontaine","message":"https://github.com/joyent/node/issues?labels=http%2Ceasy&page=1&state=closed","date":"2013-08-05T20:22:40.977Z","type":"message"}
{"nick":"tjfontaine","message":"heh we had it once upon a time :)","date":"2013-08-05T20:22:47.225Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #166 \u00037UNSTABLE\u000f windows-x64 (21/618) windows-ia32 (21/618) http://jenkins.nodejs.org/job/nodejs-master-windows/166/","date":"2013-08-05T20:24:03.599Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: yeah, we've tried that.","date":"2013-08-05T20:27:44.043Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: the problem is, by the time you know it's easy, you usaully know the fix.","date":"2013-08-05T20:27:51.695Z","type":"message"}
{"nick":"mikeal1","reason":"Quit: Leaving.","date":"2013-08-05T20:29:10.510Z","type":"quit"}
{"nick":"isaacs","message":"trevnorris: don't forget to come to SF tonight","date":"2013-08-05T20:33:20.930Z","type":"message"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-08-05T20:37:11.981Z","type":"quit"}
{"nick":"sblom","date":"2013-08-05T20:37:32.959Z","type":"join"}
{"nick":"jmar777","date":"2013-08-05T20:37:50.102Z","type":"join"}
{"nick":"mikeal","date":"2013-08-05T20:39:27.354Z","type":"join"}
{"nick":"jmar777","reason":"Ping timeout: 240 seconds","date":"2013-08-05T20:41:53.915Z","type":"quit"}
{"nick":"dshaw_","date":"2013-08-05T20:42:17.333Z","type":"join"}
{"nick":"pfox__","message":"i asked this earlier, didn't get a response: i was curious what documentation/discussion there is on being able to transition handles (or their underlying state) to different loops in the same process? i gather it isn't supported OOTB.. jsut curious if its something anyone is dealing with..","date":"2013-08-05T20:46:35.363Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #167 \u00037UNSTABLE\u000f windows-x64 (19/619) windows-ia32 (22/619) http://jenkins.nodejs.org/job/nodejs-master-windows/167/","date":"2013-08-05T20:47:45.159Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: CDDL is MIT-compatible","date":"2013-08-05T20:48:48.876Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: but we have to disclose it, include copyright statement, not use the trademark, and not try to sue the creators for patent infringemnet.","date":"2013-08-05T20:49:15.022Z","type":"message"}
{"nick":"brson","reason":"Ping timeout: 240 seconds","date":"2013-08-05T20:49:50.551Z","type":"quit"}
{"nick":"bnoordhuis","message":"pfox__: the only support currently is sending handles over a pipe","date":"2013-08-05T20:51:34.809Z","type":"message"}
{"nick":"brson","date":"2013-08-05T20:51:49.120Z","type":"join"}
{"nick":"bnoordhuis","message":"pfox__: it's not great but the upside is you get cross-process support for free","date":"2013-08-05T20:51:49.758Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-05T20:53:05.703Z","type":"quit"}
{"nick":"dshaw_","date":"2013-08-05T20:54:14.779Z","type":"join"}
{"nick":"pfox__","message":"bnoordhuis: are there specific api calls for this particular case?","date":"2013-08-05T20:56:37.284Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u0002366baed\u0002 : doc: Update LICENSE for npm's Artistic 2.0 - http://git.io/DGc5Uw","date":"2013-08-05T20:56:52.348Z","type":"message"}
{"nick":"bnoordhuis","message":"pfox__: no, just uv_write2()","date":"2013-08-05T20:58:44.757Z","type":"message"}
{"nick":"bnoordhuis","message":"i hate that name btw","date":"2013-08-05T20:58:52.284Z","type":"message"}
{"nick":"tjfontaine","message":"uv_write_maybe_has_pipes() :)","date":"2013-08-05T20:59:30.016Z","type":"message"}
{"nick":"pfox__","message":"bnoordhuis: no worries. thanks for taking the time to humor me. ok.. so im looking at uv.h .. so uv_pipe_init has the int ipc argument to indicate if handles will be sent across it..","date":"2013-08-05T21:00:38.217Z","type":"message"}
{"nick":"pfox__","message":"does that only work cross-process, though?","date":"2013-08-05T21:00:46.723Z","type":"message"}
{"nick":"pfox__","message":"im just wanting to do some discovery for rust, where we have this limitation where IO is chained to a given thread/scheduler it was created on, because that's where the loop is","date":"2013-08-05T21:01:29.439Z","type":"message"}
{"nick":"pfox__","message":"just wanting to wrap my brain around what the libuv-side of the problem would be to allow transitioning IO primitives to other schedulers/loops within a process","date":"2013-08-05T21:01:59.578Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #1405 \u00037UNSTABLE\u000f smartos-x64 (1/593) http://jenkins.nodejs.org/job/nodejs-v0.10/1405/","date":"2013-08-05T21:04:19.423Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: go ahead and land with the standard boilerplate.","date":"2013-08-05T21:07:11.591Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: nod","date":"2013-08-05T21:07:23.792Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: v0.11 tomorrow as well?","date":"2013-08-05T21:07:34.386Z","type":"message"}
{"nick":"isaacs","message":"yes, good call","date":"2013-08-05T21:07:46.073Z","type":"message"}
{"nick":"tjfontaine","message":"thank god the bart strike didn't happen.","date":"2013-08-05T21:07:58.274Z","type":"message"}
{"nick":"tjfontaine","message":"or jerry brown anyway","date":"2013-08-05T21:08:07.948Z","type":"message"}
{"nick":"tjfontaine","message":"LOUDBOT: CAN'T WE ALL JUST GET ALONG?","date":"2013-08-05T21:08:34.877Z","type":"message"}
{"nick":"LOUDBOT","message":"tjfontaine: YOU KNOW I LIKE IT FAST AND HARD","date":"2013-08-05T21:08:35.197Z","type":"message"}
{"nick":"bnoordhuis","message":"pfox__: it works cross-process and in-process. it basically does sendmsg/recvmsg with a SCM_RIGHTS message (on unix)","date":"2013-08-05T21:13:43.335Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-v0.10-windows\u0002: #135 \u00037UNSTABLE\u000f windows-ia32 (9/593) windows-x64 (9/593) http://jenkins.nodejs.org/job/nodejs-v0.10-windows/135/","date":"2013-08-05T21:14:11.615Z","type":"message"}
{"nick":"dshaw_","reason":"Quit: Leaving.","date":"2013-08-05T21:20:12.802Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u0002e851fef\u0002 : build: embed the mdb_v8.so into the binary - http://git.io/7Ou1tg","date":"2013-08-05T21:20:28.671Z","type":"message"}
{"nick":"dshaw_","date":"2013-08-05T21:20:47.521Z","type":"join"}
{"nick":"c4milo","date":"2013-08-05T21:23:33.380Z","type":"join"}
{"nick":"othiym23","message":"tjfontaine: does node-jenkins need a swift kick or something?","date":"2013-08-05T21:27:46.753Z","type":"message"}
{"nick":"othiym23","message":"it's still trying to decide if my PR is mergeable","date":"2013-08-05T21:27:58.758Z","type":"message"}
{"nick":"tjfontaine","message":"othiym23: which pr?","date":"2013-08-05T21:28:18.943Z","type":"message"}
{"nick":"othiym23","message":"tjfontaine: https://github.com/joyent/node/pull/5990","date":"2013-08-05T21:29:11.653Z","type":"message"}
{"nick":"tjfontaine","message":"rebuilding now","date":"2013-08-05T21:29:34.384Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #371 \u00034FAILURE\u000f smartos-x64 (10/619) http://jenkins.nodejs.org/job/nodejs-master/371/","date":"2013-08-05T21:29:41.855Z","type":"message"}
{"nick":"othiym23","message":"don't worry, it's not going to land anytime soon, but it's been pending for about a day now ;)","date":"2013-08-05T21:29:53.956Z","type":"message"}
{"nick":"tjfontaine","message":"jenkins was unhappy over the weekend","date":"2013-08-05T21:30:20.934Z","type":"message"}
{"nick":"tjfontaine","message":"I. hate. jenkins. and. java.","date":"2013-08-05T21:30:27.158Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033bnoordhuis\u000f created branch fix-autotools-build - http://git.io/Ww01xQ","date":"2013-08-05T21:31:26.846Z","type":"message"}
{"nick":"bnoordhuis","message":"man, autotools...","date":"2013-08-05T21:32:24.774Z","type":"message"}
{"nick":"hz","date":"2013-08-05T21:33:09.764Z","type":"join"}
{"nick":"tjfontaine","message":"bnoordhuis: there's no winning the buildsystem game","date":"2013-08-05T21:33:26.898Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: what would happen when i opened a pull request that adds a test that sets up, say, a telnet server on a public address?","date":"2013-08-05T21:34:00.458Z","type":"message"}
{"nick":"bnoordhuis","message":"and yes, the build tools game reminds me of that old movie, wargames","date":"2013-08-05T21:34:46.454Z","type":"message"}
{"nick":"bnoordhuis","message":"the only way to win is not to play","date":"2013-08-05T21:34:53.933Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: only PRs submitted by people in a whitelist are generally built by default, unless someone previously triggered a build of that PR which case all subsequent pushes should retrigger, but if someone does something bad in the PR and we let it go through the buildsystem -- potentially game over","date":"2013-08-05T21:36:13.104Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, okay","date":"2013-08-05T21:36:27.325Z","type":"message"}
{"nick":"tjfontaine","message":"up and until we have nicer image based slave deployment","date":"2013-08-05T21:37:00.776Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Timothy J Fontaine\u000f \u00037master\u000f * \u0002032373d\u0002 : build: fix ia32 sunos, elfwrap only needs -64 - http://git.io/2lnRrQ","date":"2013-08-05T21:38:50.961Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-review\u0002: #32 \u00034FAILURE\u000f smartos-ia32 (3/191) windows-x64 (3/192) linux-x64 (1/191) smartos-x64 (2/191) osx-x64 (1/192) freebsd-x64 (4/191) windows-ia32 (4/192) http://jenkins.nodejs.org/job/libuv-review/32/","date":"2013-08-05T21:39:02.983Z","type":"message"}
{"nick":"tjfontaine","message":"wtf jenkins, wtf really.","date":"2013-08-05T21:39:32.842Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-05T21:39:37.640Z","type":"quit"}
{"nick":"tjfontaine","message":"the frontend just completely locks up for no good reason","date":"2013-08-05T21:40:04.050Z","type":"message"}
{"nick":"bnoordhuis","message":"/usr/include/machine/segments.h:96: error: width of 'sd_hibase' exceeds its type","date":"2013-08-05T21:40:14.657Z","type":"message"}
{"nick":"bnoordhuis","message":"/usr/include/machine/segments.h:114: error: width of 'gd_hioffset' exceeds its type","date":"2013-08-05T21:40:14.874Z","type":"message"}
{"nick":"bnoordhuis","message":"/usr/include/machine/segments.h:184: error: width of 'rd_base' exceeds its type","date":"2013-08-05T21:40:17.687Z","type":"message"}
{"nick":"bnoordhuis","message":"that's the 32/64 bits header mismatch, iirc?","date":"2013-08-05T21:40:27.288Z","type":"message"}
{"nick":"tjfontaine","message":"yup","date":"2013-08-05T21:40:34.549Z","type":"message"}
{"nick":"tjfontaine","message":"I can disable fbsd","date":"2013-08-05T21:40:41.297Z","type":"message"}
{"nick":"bnoordhuis","message":"it doesn't bother me. would be nice to fix though","date":"2013-08-05T21:41:12.037Z","type":"message"}
{"nick":"tjfontaine","message":"what would the proper fix be for that?","date":"2013-08-05T21:41:27.841Z","type":"message"}
{"nick":"bnoordhuis","message":"at least fbsd amd64 works","date":"2013-08-05T21:41:28.612Z","type":"message"}
{"nick":"bnoordhuis","message":"ehm... /me thinks","date":"2013-08-05T21:41:35.505Z","type":"message"}
{"nick":"bnoordhuis","message":"can i log into that machine?","date":"2013-08-05T21:41:50.838Z","type":"message"}
{"nick":"tjfontaine","message":"yes, 72.2.115.5","date":"2013-08-05T21:42:02.484Z","type":"message"}
{"nick":"tjfontaine","message":"root@","date":"2013-08-05T21:42:05.936Z","type":"message"}
{"nick":"Damn3d","reason":"Ping timeout: 264 seconds","date":"2013-08-05T21:42:11.512Z","type":"quit"}
{"nick":"bnoordhuis","message":"okay, let me check me a few things","date":"2013-08-05T21:42:13.799Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, u_int64_t sd_hibase:40 __packed;","date":"2013-08-05T21:43:53.089Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #168 \u00037UNSTABLE\u000f windows-x64 (16/619) windows-ia32 (23/619) http://jenkins.nodejs.org/job/nodejs-master-windows/168/","date":"2013-08-05T21:44:08.121Z","type":"message"}
{"nick":"bnoordhuis","message":"they're using bit fields and the total width > 64 bits","date":"2013-08-05T21:44:09.782Z","type":"message"}
{"nick":"bnoordhuis","message":"maybe not a 32/64 bits then","date":"2013-08-05T21:44:33.940Z","type":"message"}
{"nick":"Damn3d","date":"2013-08-05T21:44:48.792Z","type":"join"}
{"nick":"austo","reason":"Remote host closed the connection","date":"2013-08-05T21:46:35.860Z","type":"quit"}
{"nick":"`3rdEden","new_nick":"`3E|Zzz","date":"2013-08-05T21:47:46.278Z","type":"nick"}
{"nick":"wavded","reason":"Quit: Hasta la pasta","date":"2013-08-05T21:49:08.994Z","type":"quit"}
{"nick":"tjfontaine","message":"hrm","date":"2013-08-05T21:49:14.905Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #372 \u00037UNSTABLE\u000f smartos-ia32 (2/619) smartos-x64 (8/619) osx-ia32 (1/619) http://jenkins.nodejs.org/job/nodejs-master/372/","date":"2013-08-05T21:49:22.177Z","type":"message"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-08-05T21:52:20.980Z","type":"quit"}
{"nick":"felixge","date":"2013-08-05T21:52:21.198Z","type":"join"}
{"nick":"trevnorris","message":"hello hello","date":"2013-08-05T21:59:05.540Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: no worries. i'm in the moz sf office now","date":"2013-08-05T21:59:22.631Z","type":"message"}
{"nick":"brson","date":"2013-08-05T22:00:24.003Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: don't know why, but just noticed that the bufer.write* methods throw if the value to write is too large, instead of just wrapping around. that seems sort of broken to me. thoughts?","date":"2013-08-05T22:01:26.561Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: found it. it's a gcc 4.2 bug. nothing we can do about that","date":"2013-08-05T22:01:59.659Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: shall I change that system to clang?","date":"2013-08-05T22:02:10.665Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: worth a try","date":"2013-08-05T22:02:22.345Z","type":"message"}
{"nick":"tjfontaine","message":"ok, I'll queue that for tomorrow","date":"2013-08-05T22:02:28.943Z","type":"message"}
{"nick":"Somebody_","date":"2013-08-05T22:02:32.534Z","type":"join"}
{"nick":"tjfontaine","message":"something to do during meetings","date":"2013-08-05T22:02:36.605Z","type":"message"}
{"nick":"bnoordhuis","message":"let me try a quick compile with clang","date":"2013-08-05T22:02:45.566Z","type":"message"}
{"nick":"dominictarr","date":"2013-08-05T22:03:45.163Z","type":"join"}
{"nick":"bnoordhuis","message":"/usr/include/machine/segments.h:96:12: error: size of bit-field 'sd_hibase' (40 bits) exceeds size of its type (32 bits) u_int64_t sd_hibase:40 __packed;/* segment base address  (msb) */","date":"2013-08-05T22:04:13.481Z","type":"message"}
{"nick":"bnoordhuis","message":"at least clang gives a prettier message. it even does colors","date":"2013-08-05T22:04:24.094Z","type":"message"}
{"nick":"tjfontaine","message":"I prefer clang in just about every scenario","date":"2013-08-05T22:04:41.569Z","type":"message"}
{"nick":"bnoordhuis","message":"well, gcc still tends to produce tighter code","date":"2013-08-05T22:05:03.375Z","type":"message"}
{"nick":"bnoordhuis","message":"and gcc 4.8 prints purdy error messages too now","date":"2013-08-05T22:05:26.675Z","type":"message"}
{"nick":"MI6","message":"\u0002nodejs-master-windows\u0002: #169 \u00037UNSTABLE\u000f windows-x64 (20/619) windows-ia32 (19/619) http://jenkins.nodejs.org/job/nodejs-master-windows/169/","date":"2013-08-05T22:05:35.628Z","type":"message"}
{"nick":"tjfontaine","message":"ya, it's nice to actually have someone motivating gcc to work on useful things :)","date":"2013-08-05T22:05:43.951Z","type":"message"}
{"nick":"bnoordhuis","message":"it's curious that both clang and gcc error out","date":"2013-08-05T22:08:54.813Z","type":"message"}
{"nick":"bnoordhuis","message":"i wrote a trivial test case that creates a uint64_t x:48 __attribute((packed)) bitfield","date":"2013-08-05T22:09:28.091Z","type":"message"}
{"nick":"bnoordhuis","message":"with -m32 it compiles on other systems but not that fbsd system","date":"2013-08-05T22:09:44.892Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: you going tonight?","date":"2013-08-05T22:11:26.126Z","type":"message"}
{"nick":"tjfontaine","message":"yup","date":"2013-08-05T22:11:49.951Z","type":"message"}
{"nick":"trevnorris","message":"public transit or vehicular transport?","date":"2013-08-05T22:12:13.200Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: feets of strength, it's only a couple blocks from work I think","date":"2013-08-05T22:12:35.339Z","type":"message"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2013-08-05T22:13:10.916Z","type":"quit"}
{"nick":"tjfontaine","message":"I wish I could figure out with new google maps how to do map-linking","date":"2013-08-05T22:13:23.371Z","type":"message"}
{"nick":"rendar","date":"2013-08-05T22:13:49.477Z","type":"quit"}
{"nick":"bnoordhuis","message":"\"A bit-field shall have a type that is a qualified or unqualified version of _Bool, signed int, unsigned int, or some other implementation-defined type.\"","date":"2013-08-05T22:14:19.802Z","type":"message"}
{"nick":"bnoordhuis","message":"meh, guess fbsd gcc and clang are borderline correct here","date":"2013-08-05T22:14:32.890Z","type":"message"}
{"nick":"trevnorris","message":"i hate the new maps. i could drop by on the way there, but there's a js error that won't bring up the distance :-/","date":"2013-08-05T22:14:53.125Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: guess the easiest way to fix it is to spin up a 32 bits fbsd instance","date":"2013-08-05T22:15:28.726Z","type":"message"}
{"nick":"c4milo","date":"2013-08-05T22:15:54.460Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: http://goo.gl/xUA34g","date":"2013-08-05T22:16:51.720Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: and compile on that?","date":"2013-08-05T22:17:00.467Z","type":"message"}
{"nick":"pachet","reason":"Quit: leaving","date":"2013-08-05T22:18:00.959Z","type":"quit"}
{"nick":"bnoordhuis","message":"tjfontaine: yep","date":"2013-08-05T22:18:31.739Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: ok","date":"2013-08-05T22:18:42.809Z","type":"message"}
{"nick":"tjfontaine","message":"for now it's been removed from the -review, since jenkins doesn't have a good way to split builds for a matrix config","date":"2013-08-05T22:19:28.308Z","type":"message"}
{"nick":"tjfontaine","message":"well it does, but it is easy for me to fuck up right now :)","date":"2013-08-05T22:19:39.987Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: when you leaving? i'll meet you on the corner of pine and front","date":"2013-08-05T22:20:03.506Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002a97685e\u0002 : build: add automake serial-tests version check - http://git.io/Zqrlwg","date":"2013-08-05T22:20:45.955Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: probably 6:45","date":"2013-08-05T22:21:01.142Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: coolio. if you're going the route you linked I'll meet you en route.","date":"2013-08-05T22:21:25.823Z","type":"message"}
{"nick":"tjfontaine","message":"sure, I'll pm you my number in case you need it","date":"2013-08-05T22:21:47.121Z","type":"message"}
{"nick":"bnoordhuis","message":"have fun tonight, guys. see you tomorrow","date":"2013-08-05T22:22:04.707Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: enjoy","date":"2013-08-05T22:22:14.328Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-08-05T22:23:01.618Z","type":"quit"}
{"nick":"MI6","message":"\u0002libuv-master-gyp\u0002: #89 \u00037UNSTABLE\u000f smartos-x64 (2/191) smartos-ia32 (2/191) windows-ia32 (3/192) windows-x64 (3/192) http://jenkins.nodejs.org/job/libuv-master-gyp/89/","date":"2013-08-05T22:26:02.998Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #151 \u00034FAILURE\u000f windows (3/192) http://jenkins.nodejs.org/job/libuv-master/151/","date":"2013-08-05T22:26:25.021Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-08-05T22:26:44.316Z","type":"quit"}
{"nick":"tjfontaine","message":"heh, he broke smartos than ran away :P","date":"2013-08-05T22:27:11.020Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-05T22:30:00.359Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: api question. so ArrayBuffer::Neuter immediately zeros out all children, where the Buffer#dispose i'm working on waits until all children are already disposed. which you think is the mejor api?","date":"2013-08-05T22:36:47.056Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: heh, my ideal world is actually neither :P what I'd like is for the children to be a weakmap, and when it's finally empty then you get to actually do the dispose","date":"2013-08-05T22:39:15.311Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: hm, the first one requires us to keep actual track of the children, whereas your ref count version allows us to keep count","date":"2013-08-05T22:41:02.057Z","type":"message"}
{"nick":"AvianFlu","date":"2013-08-05T22:41:26.802Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: is my assumption there correct?","date":"2013-08-05T22:41:34.396Z","type":"message"}
{"nick":"bradleymeck","date":"2013-08-05T22:43:06.651Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-05T22:43:55.083Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: yeah. and ah crap. the ref count thing won't work because if the child is cleaned up by gc then the ref count won't decrement :P","date":"2013-08-05T22:44:07.395Z","type":"message"}
{"nick":"tjfontaine","message":"it's not that it won't work, it just won't get disposed before the C++ weakcb fires","date":"2013-08-05T22:44:30.755Z","type":"message"}
{"nick":"trevnorris","message":"yeah, basically.","date":"2013-08-05T22:44:46.818Z","type":"message"}
{"nick":"tjfontaine","message":"so the gain you're hoping for is thwarted by one person .slice()'ing and not letting it go","date":"2013-08-05T22:44:56.299Z","type":"message"}
{"nick":"trevnorris","message":"yup","date":"2013-08-05T22:45:03.568Z","type":"message"}
{"nick":"tjfontaine","message":"[which is basically what happens anyway]","date":"2013-08-05T22:45:04.253Z","type":"message"}
{"nick":"tjfontaine","message":"personally I think it's impolite for someone else to free that memory if someone thinks (wrongly or not) that they may want to use it later","date":"2013-08-05T22:45:35.142Z","type":"message"}
{"nick":"trevnorris","message":"the main use case is for when data comes in from say a tcp request, and we just need to write it to disk or pipe is somewhere.","date":"2013-08-05T22:45:40.580Z","type":"message"}
{"nick":"trevnorris","message":"that way we can immediately clean it up.","date":"2013-08-05T22:45:50.236Z","type":"message"}
{"nick":"tjfontaine","message":"ya, so long as you have a well behaved application you can release pressure from the gc","date":"2013-08-05T22:46:00.001Z","type":"message"}
{"nick":"trevnorris","message":"initial perf tests show a 20% in throughput","date":"2013-08-05T22:46:03.543Z","type":"message"}
{"nick":"trevnorris","message":"exactly","date":"2013-08-05T22:46:07.563Z","type":"message"}
{"nick":"tjfontaine","message":"I GetIt(tm)","date":"2013-08-05T22:46:14.276Z","type":"message"}
{"nick":"tjfontaine","message":"but, all it takes is one stream pass through to hold on longer than you want it to","date":"2013-08-05T22:46:32.331Z","type":"message"}
{"nick":"trevnorris","message":"it's for the more high performance needs, like walmart (if I understand walmart's needs...)","date":"2013-08-05T22:46:34.722Z","type":"message"}
{"nick":"trevnorris","message":"how do you mean?","date":"2013-08-05T22:46:53.770Z","type":"message"}
{"nick":"tjfontaine","message":"assume you use a module for protocol parsing, or progress bar, and it does something \"wrong\" with the buffer as its passing through (waiting for a _flush or whatever)","date":"2013-08-05T22:47:37.737Z","type":"message"}
{"nick":"tjfontaine","message":"[well a slice]","date":"2013-08-05T22:47:46.557Z","type":"message"}
{"nick":"dshaw_","reason":"Read error: Connection reset by peer","date":"2013-08-05T22:47:47.129Z","type":"quit"}
{"nick":"tjfontaine","message":"and you signal your intent later to .dispose() that passthrough you're .pipe'ing through has fucked you :)","date":"2013-08-05T22:48:11.867Z","type":"message"}
{"nick":"AvianFlu_","date":"2013-08-05T22:48:59.379Z","type":"join"}
{"nick":"c4milo","date":"2013-08-05T22:49:15.379Z","type":"join"}
{"nick":"trevnorris","message":"the first case would have prematurely released your data, the later would just have left it to gc","date":"2013-08-05T22:49:19.919Z","type":"message"}
{"nick":"tjfontaine","message":"yes","date":"2013-08-05T22:49:32.765Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-08-05T22:49:54.431Z","type":"quit"}
{"nick":"AvianFlu_","reason":"Remote host closed the connection","date":"2013-08-05T22:50:00.349Z","type":"quit"}
{"nick":"trevnorris","message":"oy, then it starts to get complicated with things like an \"i'm active\" flag that'll be toggled when it's passed though a stream or what not.","date":"2013-08-05T22:50:30.488Z","type":"message"}
{"nick":"tjfontaine","message":"right, so, for well behaved stacks, this works out really good for them","date":"2013-08-05T22:50:53.860Z","type":"message"}
{"nick":"tjfontaine","message":"presuming they own the whole stack and/or know exactly how each module uses any buffers they pass to/thru","date":"2013-08-05T22:51:29.777Z","type":"message"}
{"nick":"tjfontaine","message":"in the worst case, it behaves exactly as it does today","date":"2013-08-05T22:51:48.369Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-08-05T22:52:14.290Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 240 seconds","date":"2013-08-05T22:52:38.546Z","type":"quit"}
{"nick":"tjfontaine","message":"but it only takes 1 slice that isn't also .dispose()'d for you to lose","date":"2013-08-05T22:52:43.006Z","type":"message"}
{"nick":"trevnorris","message":"well, loose as in be back where you were.","date":"2013-08-05T22:53:03.592Z","type":"message"}
{"nick":"tjfontaine","message":"lose any benefit from the api","date":"2013-08-05T22:53:14.451Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-08-05T22:53:20.561Z","type":"message"}
{"nick":"tjfontaine","message":"anyway, I'm much happier with the way it works now considering it won't dispose if there are \"active\" slices","date":"2013-08-05T22:53:43.933Z","type":"message"}
{"nick":"trevnorris","message":"cool.","date":"2013-08-05T22:53:55.242Z","type":"message"}
{"nick":"tjfontaine","message":"is ArrayBuffer.neuter a first class js method?","date":"2013-08-05T22:54:08.756Z","type":"message"}
{"nick":"trevnorris","message":"nope","date":"2013-08-05T22:54:13.581Z","type":"message"}
{"nick":"tjfontaine","message":"k","date":"2013-08-05T22:54:22.047Z","type":"message"}
{"nick":"trevnorris","message":"that'd be nice though","date":"2013-08-05T22:54:29.864Z","type":"message"}
{"nick":"trevnorris","message":"on the side, a module of TooTallNate gave me an idea. it's costly to constantly get the c++ instance of whatever (e.g. TCPWrap) from the js object.","date":"2013-08-05T22:55:29.832Z","type":"message"}
{"nick":"tjfontaine","message":"to get _handle?","date":"2013-08-05T22:55:48.849Z","type":"message"}
{"nick":"trevnorris","message":"no, the Unwrap<T>","date":"2013-08-05T22:56:02.463Z","type":"message"}
{"nick":"tjfontaine","message":"oh ok","date":"2013-08-05T22:56:07.528Z","type":"message"}
{"nick":"trevnorris","message":"_handle is the Persistent<T> of the js object","date":"2013-08-05T22:56:14.036Z","type":"message"}
{"nick":"trevnorris","message":"other way around","date":"2013-08-05T22:56:16.669Z","type":"message"}
{"nick":"tjfontaine","message":"I wasn't sure where we were talking","date":"2013-08-05T22:56:29.913Z","type":"message"}
{"nick":"trevnorris","message":"so the crazy idea is what if we just wrote the memory address of the class instance to the object","date":"2013-08-05T22:56:52.786Z","type":"message"}
{"nick":"trevnorris","message":"it's a lot faster to attach external memory","date":"2013-08-05T22:57:02.987Z","type":"message"}
{"nick":"trevnorris","message":"and reading out that is practically a noop compared to reading out a js object's properties","date":"2013-08-05T22:57:17.932Z","type":"message"}
{"nick":"tjfontaine","message":"you mean an External?","date":"2013-08-05T22:57:29.835Z","type":"message"}
{"nick":"trevnorris","message":"TooTallNate: what's your module that will return the memory address of a c++ class?","date":"2013-08-05T22:57:57.632Z","type":"message"}
{"nick":"tjfontaine","message":"ref","date":"2013-08-05T22:58:02.918Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok.","date":"2013-08-05T22:58:07.220Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: ref does it","date":"2013-08-05T22:58:13.239Z","type":"message"}
{"nick":"TooTallNate","message":"adds Buffer#address()","date":"2013-08-05T22:58:20.336Z","type":"message"}
{"nick":"TooTallNate","message":"damnit tj :p","date":"2013-08-05T22:58:28.925Z","type":"message"}
{"nick":"tjfontaine","message":":P","date":"2013-08-05T22:58:31.574Z","type":"message"}
{"nick":"TooTallNate","message":"always beating me","date":"2013-08-05T22:58:36.365Z","type":"message"}
{"nick":"trevnorris","message":"so, you could ->SetIndexedPropertiesToExternalArrayData(size_t, ..., 0);","date":"2013-08-05T22:58:51.960Z","type":"message"}
{"nick":"trevnorris","message":"so it'd be safe and untouchable from js","date":"2013-08-05T22:59:01.568Z","type":"message"}
{"nick":"tjfontaine","message":"isn't that basically what an External is?","date":"2013-08-05T22:59:12.874Z","type":"message"}
{"nick":"trevnorris","message":"but then you could get the actual memory address via GetIndexedPropertiesExternalArrayData","date":"2013-08-05T22:59:15.038Z","type":"message"}
{"nick":"trevnorris","message":"but you have to attach an external like a normal js object property","date":"2013-08-05T22:59:32.757Z","type":"message"}
{"nick":"trevnorris","message":"which is what's most expensive","date":"2013-08-05T22:59:37.210Z","type":"message"}
{"nick":"tjfontaine","message":"well you can just pull it off in js, and pass it down","date":"2013-08-05T22:59:58.859Z","type":"message"}
{"nick":"trevnorris","message":"problem is the transversal after an async request (e.g. ConnectWrap in tcp_wrap)","date":"2013-08-05T23:00:57.229Z","type":"message"}
{"nick":"trevnorris","message":"coming from c++ you'd have to go out to js to get it back.","date":"2013-08-05T23:01:10.464Z","type":"message"}
{"nick":"trevnorris","message":"wait... going backwards here.","date":"2013-08-05T23:01:31.006Z","type":"message"}
{"nick":"othiym23","message":"point of fact: I don't have a CS degree","date":"2013-08-05T23:03:21.241Z","type":"message"}
{"nick":"tjfontaine","message":"thanks for lagging out freenode.","date":"2013-08-05T23:03:31.753Z","type":"message"}
{"nick":"othiym23","message":"something my dad likes to remind me of on a frequent basis, as he footed the bill for the five years I spent in school without a degre","date":"2013-08-05T23:03:45.933Z","type":"message"}
{"nick":"othiym23","message":"e","date":"2013-08-05T23:03:47.921Z","type":"message"}
{"nick":"tjfontaine","message":"othiym23++","date":"2013-08-05T23:03:54.624Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: I'd be interested to see the numbers","date":"2013-08-05T23:04:06.720Z","type":"message"}
{"nick":"MI6","reason":"Ping timeout: 245 seconds","date":"2013-08-05T23:04:10.583Z","type":"quit"}
{"nick":"MI6","date":"2013-08-05T23:04:20.119Z","type":"join"}
{"nick":"trevnorris","message":"othiym23: haha, well we can start a club. though  I only made it 2 years","date":"2013-08-05T23:04:41.801Z","type":"message"}
{"nick":"sblom","reason":"Ping timeout: 240 seconds","date":"2013-08-05T23:05:24.003Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-08-05T23:05:26.103Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: think it'd make the most difference in crypto. other than that it's mainly used with OnConnection.","date":"2013-08-05T23:05:37.036Z","type":"message"}
{"nick":"trevnorris","message":"and i'm pretty sure that's not the bottleneck with http incoming requests.","date":"2013-08-05T23:05:52.598Z","type":"message"}
{"nick":"TooTallNate","message":"trevnorris: othiym23 and me only 1 year!","date":"2013-08-05T23:05:58.845Z","type":"message"}
{"nick":"trevnorris","message":"hah","date":"2013-08-05T23:06:11.371Z","type":"message"}
{"nick":"Somebody_","reason":"Remote host closed the connection","date":"2013-08-05T23:08:36.622Z","type":"quit"}
{"nick":"st_luke","date":"2013-08-05T23:12:39.200Z","type":"join"}
{"nick":"trevnorris","message":"othiym23: think I understand what you're getting at. if I can in one sentence, you want to keep track of the call stack call stack through all async requests. that about sum it up?","date":"2013-08-05T23:13:57.056Z","type":"message"}
{"nick":"paulfryzel","date":"2013-08-05T23:23:47.686Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-08-05T23:25:23.818Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 256 seconds","date":"2013-08-05T23:28:21.304Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-08-05T23:29:06.657Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: there're things that'll run async in the background w/o you knowing them, and that don't have a callback when they're done writing. like writing to a file stream.","date":"2013-08-05T23:29:58.779Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: problem w/ that is if they dispose in the middle of the threaded operation they're screwed.","date":"2013-08-05T23:30:21.573Z","type":"message"}
{"nick":"tjfontaine","message":"i feel like I fell into an out of context conversation","date":"2013-08-05T23:30:43.487Z","type":"message"}
{"nick":"tjfontaine","message":"so","date":"2013-08-05T23:30:57.417Z","type":"message"}
{"nick":"tjfontaine","message":"fs.write(foo); foo.dispose();","date":"2013-08-05T23:31:06.947Z","type":"message"}
{"nick":"tjfontaine","message":"where that writereq hasn't yet finished?","date":"2013-08-05T23:31:15.971Z","type":"message"}
{"nick":"trevnorris","message":"and say foo is like 1GB so it's going to take a while.","date":"2013-08-05T23:31:22.251Z","type":"message"}
{"nick":"sblom","date":"2013-08-05T23:31:28.723Z","type":"join"}
{"nick":"trevnorris","message":"it's being written in a separate thread, while at the same time you run .dispose() it's going to free the memory in the middle of writing","date":"2013-08-05T23:31:49.483Z","type":"message"}
{"nick":"tjfontaine","message":"ya, since we don't copy across calls there it could be a race, we could do an implicit splice/dispose along those paths","date":"2013-08-05T23:32:08.452Z","type":"message"}
{"nick":"trevnorris","message":"ah, nice possible solution.","date":"2013-08-05T23:32:50.247Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: something like that, but more I want the context that comes with it so I can attach data to it and fetch it later","date":"2013-08-05T23:40:16.571Z","type":"message"}
{"nick":"othiym23","message":"I want request-specific data that isn't tied to an object","date":"2013-08-05T23:40:50.001Z","type":"message"}
{"nick":"othiym23","message":"what I *really* want are Reader, Writer and State monads, but Node isnt' going to magically turn into Haskell","date":"2013-08-05T23:41:28.611Z","type":"message"}
{"nick":"tjfontaine","message":"*magic*","date":"2013-08-05T23:41:51.365Z","type":"message"}
{"nick":"trevnorris","message":"simple enough in concept I guess, but can't imagine how that'd be done w/o adding a crap ton of internal work that'll make things slow. not saying it can't be done, just not easily apparent.","date":"2013-08-05T23:44:55.404Z","type":"message"}
{"nick":"trevnorris","message":"i mean, there's all ready too much going on with async requests. have to instantiate a c++ class, create a persistent instance of the object, set some object properties, then dereference it all on the return","date":"2013-08-05T23:46:43.010Z","type":"message"}
{"nick":"felixge","reason":"Quit: felixge","date":"2013-08-05T23:47:17.940Z","type":"quit"}
{"nick":"othiym23","message":"really all my current proposal is is a generalized version of domains","date":"2013-08-05T23:47:28.967Z","type":"message"}
{"nick":"othiym23","message":"and the only way it's more costly than domains is in the need to capture a set of contexts at asynchronous boundaries rather than one","date":"2013-08-05T23:47:53.306Z","type":"message"}
{"nick":"othiym23","message":"I'm going to try to get the MakeCallback changes in over the next few days, and then it may take me a little longer to rework domains to run atop this","date":"2013-08-05T23:48:21.436Z","type":"message"}
{"nick":"othiym23","message":"but it's always been important to me that this take advantage of all the performance-tuning work you put into domains in 0.10","date":"2013-08-05T23:48:45.777Z","type":"message"}
{"nick":"mikeal","message":"wasn't that where we started?","date":"2013-08-05T23:48:47.537Z","type":"message"}
{"nick":"mikeal","message":"when isaacs took over the domains stuff i think he was trying to get it in MakeCallback","date":"2013-08-05T23:49:09.349Z","type":"message"}
{"nick":"othiym23","message":"and to not change the API or properties used by domains","date":"2013-08-05T23:49:11.095Z","type":"message"}
{"nick":"othiym23","message":"mikeal: domains is, this new thing isn't","date":"2013-08-05T23:49:18.445Z","type":"message"}
{"nick":"mikeal","message":"and said something along the lines of \"touching that in any way destroys performance\"","date":"2013-08-05T23:49:20.966Z","type":"message"}
{"nick":"othiym23","message":"domains are?","date":"2013-08-05T23:49:24.373Z","type":"message"}
{"nick":"trevnorris","message":"mikeal: it was moved back to c++. the js implementation was too slow. then I spent 2 weeks performance tuning the whole thing.","date":"2013-08-05T23:51:17.229Z","type":"message"}
{"nick":"mikeal","message":"wow, didn't know that","date":"2013-08-05T23:51:42.980Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: this is that thing I was talking to you about at the Mozilla meetup ;)","date":"2013-08-05T23:51:56.295Z","type":"message"}
{"nick":"othiym23","message":"it clearly hasn't gotten any easier to explain","date":"2013-08-05T23:52:03.293Z","type":"message"}
{"nick":"trevnorris","message":"hah, no it hasn't.","date":"2013-08-05T23:52:11.452Z","type":"message"}
{"nick":"trevnorris","message":"othiym23: and it's not going to get any easier. you read my post about people complaining about the perf hit after loading the domain module, but it's like they don't realize that's how it was before :P","date":"2013-08-05T23:53:03.211Z","type":"message"}
{"nick":"othiym23","message":"yeah, well, to me that's just a challenge to make domains (or the mechanism they're based on) faster","date":"2013-08-05T23:53:31.579Z","type":"message"}
{"nick":"mikeal","message":"forrest likes challenges :)","date":"2013-08-05T23:53:52.893Z","type":"message"}
{"nick":"othiym23","message":"because I *want* people using domains in performance-critical code, because error-handling in Node without it is kind of a disaster","date":"2013-08-05T23:53:58.800Z","type":"message"}
{"nick":"othiym23","message":"mikeal: I'm really lazy once you get to know me","date":"2013-08-05T23:54:28.001Z","type":"message"}
{"nick":"mikeal","message":"i challenge you to make my talk for NodeConf.eu for me. and… go!","date":"2013-08-05T23:54:30.678Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-08-05T23:54:46.298Z","type":"nick"}
{"nick":"mikeal","message":"laziness is a virtue, it keeps you from spending time on cleverness","date":"2013-08-05T23:55:03.855Z","type":"message"}
{"nick":"othiym23","message":"I expend most of my cleverness trying to find new ways to be lazy","date":"2013-08-05T23:55:23.243Z","type":"message"}
{"nick":"othiym23","message":"maaan, I am sooo bummed I can't do nodeconf.eu","date":"2013-08-05T23:55:38.639Z","type":"message"}
{"nick":"othiym23","message":"missing JSConf and NodeConf.eu are going to be my two big regrets for the year for sure","date":"2013-08-05T23:55:54.032Z","type":"message"}
{"nick":"trevnorris","message":"hehe, you're a funny one. domains in performance-critical code. if you manage all the features you want and have it perform within the margin of error i'll bow down to you ;)","date":"2013-08-05T23:56:04.279Z","type":"message"}
{"nick":"othiym23","message":"but I gotta ship this thing before my bosses shove me in a cannon and fire me out of it in the direction of Oakland","date":"2013-08-05T23:56:22.026Z","type":"message"}
{"nick":"tjfontaine","message":"how do you guys do this on python and ruby?","date":"2013-08-05T23:57:41.457Z","type":"message"}
{"nick":"isaacs","message":"othiym23, trevnorris: I am also in the \"5 years, no degree\" club","date":"2013-08-05T23:57:45.349Z","type":"message"}
{"nick":"isaacs","message":"othiym23: but i split the bill with the state of Connecticut","date":"2013-08-05T23:57:54.345Z","type":"message"}
{"nick":"othiym23","message":"tjfontaine: simple, we don't handle asynchronous execution in them","date":"2013-08-05T23:58:08.595Z","type":"message"}
{"nick":"tjfontaine","message":"othiym23: right, ok","date":"2013-08-05T23:58:20.840Z","type":"message"}
{"nick":"mikeal","message":"i have yet to be in a scenario where performance is more critical than stability ","date":"2013-08-05T23:58:27.577Z","type":"message"}
{"nick":"othiym23","message":"tjfontaine: and when we do (e.g. for Twisted and Tornado), we cheat and wrap the futures they use so we have control over the context","date":"2013-08-05T23:58:33.540Z","type":"message"}
{"nick":"othiym23","message":"trevnorris: depends on your definition of performance-critical, I guess -- I've never even benchmarked the beta build of the agent, and while there's use cases where it's not appropriate (e.g. Voxer), I've never had a beta tester complain about the overhead it imposes","date":"2013-08-05T23:59:09.642Z","type":"message"}
{"nick":"mikeal","message":"yeah, but then all kinds of aweful things happen when people use threads in libraries you call out to that you didn't know about","date":"2013-08-05T23:59:12.272Z","type":"message"}
{"nick":"tjfontaine","message":"there's Performance, and then \"performance\"","date":"2013-08-05T23:59:37.889Z","type":"message"}
