{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-03-29T00:00:00.639Z","type":"quit"}
{"nick":"ircretary","date":"2013-03-29T00:00:08.603Z","type":"join"}
{"nick":"kazupon","date":"2013-03-29T00:12:06.069Z","type":"join"}
{"nick":"trevnorris","reason":"Quit: Leaving","date":"2013-03-29T00:14:07.394Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 248 seconds","date":"2013-03-29T00:17:09.779Z","type":"quit"}
{"nick":"dap","reason":"Quit: Leaving.","date":"2013-03-29T00:21:50.317Z","type":"quit"}
{"nick":"bnoordhuis","message":"https://gist.github.com/bnoordhuis/8fa3986ac3b596439178 <- check this out. Debug.setBreakPoint() works but only if you add a small delay","date":"2013-03-29T00:24:49.855Z","type":"message"}
{"nick":"bnoordhuis","action":"sighs","date":"2013-03-29T00:24:59.766Z","type":"action"}
{"nick":"tjfontaine","message":"this sounds like why debugger-client hates us right now","date":"2013-03-29T00:25:08.138Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: isn't this related to a debugger running in separate thread?","date":"2013-03-29T00:28:16.043Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: possibly (or maybe likely) but i'm not 100% sure it's that","date":"2013-03-29T00:30:03.920Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll let you know what i find","date":"2013-03-29T00:30:12.836Z","type":"message"}
{"nick":"mmalecki","message":"sure :)","date":"2013-03-29T00:31:01.170Z","type":"message"}
{"nick":"mmalecki","message":"how are you, Ben?","date":"2013-03-29T00:31:11.714Z","type":"message"}
{"nick":"bnoordhuis","message":"lamenting my career cboice but otherwise fine. you?","date":"2013-03-29T00:32:28.597Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: same here, diving deep into C code :)","date":"2013-03-29T00:46:41.242Z","type":"message"}
{"nick":"bnoordhuis","message":"oh? what code and what for?","date":"2013-03-29T00:48:26.839Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: monitoring, process spawning. just making nodejitsu kick more asses, you know :)","date":"2013-03-29T00:49:23.108Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: I wrote this yesterday, btw https://github.com/mmalecki/env","date":"2013-03-29T00:49:33.483Z","type":"message"}
{"nick":"bnoordhuis","message":"mmalecki: const correctness!","date":"2013-03-29T00:50:36.309Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: I know dude. it was 5 AM and I didn't care much. gotta fix that soon tho :)","date":"2013-03-29T00:51:33.561Z","type":"message"}
{"nick":"mmalecki","message":"what do you think of this API tho? test is here: https://github.com/mmalecki/env/blob/master/test/test-env.c","date":"2013-03-29T00:52:01.574Z","type":"message"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-03-29T00:53:17.435Z","type":"nick"}
{"nick":"bnoordhuis","message":"mmalecki: is it for working with general key/value pairs or manipulating the actual environ?","date":"2013-03-29T00:53:44.082Z","type":"message"}
{"nick":"mraleph","date":"2013-03-29T00:54:26.779Z","type":"join"}
{"nick":"mmalecki","message":"bnoordhuis: general key/value. we need this for stripping things from child's environment","date":"2013-03-29T00:54:46.472Z","type":"message"}
{"nick":"mmalecki","message":"you can use it to create a whole new environment and such :)","date":"2013-03-29T00:55:06.155Z","type":"message"}
{"nick":"bnoordhuis","message":"so why c?","date":"2013-03-29T00:55:33.946Z","type":"message"}
{"nick":"bnoordhuis","message":"seems the debug thing is indeed caused by a threading issue","date":"2013-03-29T00:56:37.862Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: node is 10 MB RAM at least. C can stay under 1 MB with no problems. this is important when your servers are 256 MB","date":"2013-03-29T00:56:39.744Z","type":"message"}
{"nick":"bnoordhuis","message":"right","date":"2013-03-29T00:56:58.997Z","type":"message"}
{"nick":"kazupon","date":"2013-03-29T00:59:11.990Z","type":"join"}
{"nick":"mmalecki","message":"bnoordhuis: we're not dropping node completely, obviously :)","date":"2013-03-29T00:59:39.503Z","type":"message"}
{"nick":"mmalecki","message":"although cjitsu would be kinda badass","date":"2013-03-29T01:00:50.231Z","type":"message"}
{"nick":"bnoordhuis","message":"hah","date":"2013-03-29T01:01:34.571Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-03-29T01:02:22.013Z","type":"quit"}
{"nick":"sblom","reason":"Ping timeout: 264 seconds","date":"2013-03-29T01:04:43.631Z","type":"quit"}
{"nick":"bradleymeck","date":"2013-03-29T01:10:37.986Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-03-29T01:14:01.306Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-29T01:15:06.927Z","type":"quit"}
{"nick":"TooTallNate","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-03-29T01:17:21.509Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-29T01:19:22.883Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-03-29T01:29:37.551Z","type":"nick"}
{"nick":"stagas","reason":"Quit: ChatZilla 0.9.90-rdmsoft [XULRunner 1.9.0.17/2009122204]","date":"2013-03-29T01:34:27.724Z","type":"quit"}
{"nick":"cjd","date":"2013-03-29T01:36:28.044Z","type":"part"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-29T01:40:13.323Z","type":"quit"}
{"nick":"inolen","date":"2013-03-29T01:40:14.944Z","type":"join"}
{"nick":"abraxas","date":"2013-03-29T01:42:21.463Z","type":"join"}
{"nick":"inolen","reason":"Ping timeout: 264 seconds","date":"2013-03-29T01:44:36.737Z","type":"quit"}
{"nick":"inolen","date":"2013-03-29T01:44:59.902Z","type":"join"}
{"nick":"qmx","new_nick":"qmx|away","date":"2013-03-29T02:05:48.437Z","type":"nick"}
{"nick":"bradleymeck","date":"2013-03-29T02:10:16.563Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2013-03-29T02:13:43.699Z","type":"quit"}
{"nick":"hz","date":"2013-03-29T02:33:57.601Z","type":"quit"}
{"nick":"mmalecki","new_nick":"mmalecki[zzz]","date":"2013-03-29T02:36:28.651Z","type":"nick"}
{"nick":"kazupon","date":"2013-03-29T02:40:25.951Z","type":"join"}
{"nick":"brson_","reason":"Quit: leaving","date":"2013-03-29T02:52:55.891Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-29T03:02:55.189Z","type":"quit"}
{"nick":"saghul","reason":"Quit: [\"Textual IRC Client: www.textualapp.com\"]","date":"2013-03-29T03:05:39.827Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-29T03:36:51.129Z","type":"join"}
{"nick":"brson","date":"2013-03-29T03:49:45.368Z","type":"join"}
{"nick":"mikeal","date":"2013-03-29T03:52:25.803Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-29T03:53:37.523Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-29T03:59:43.664Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-29T04:16:25.487Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-29T04:25:00.203Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-29T04:30:09.331Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-03-29T04:46:56.126Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-29T04:53:59.789Z","type":"join"}
{"nick":"nsm","date":"2013-03-29T04:54:49.762Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-03-29T04:58:13.585Z","type":"quit"}
{"nick":"trevnorris","date":"2013-03-29T05:10:49.163Z","type":"join"}
{"nick":"trevnorris","message":"indutny: you around? line 176 of lib/crypto.js \"return new Hash(algorithm)\", shouldn't that be \"return new Hash(algorithm, options);\"?","date":"2013-03-29T05:11:42.249Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: you looming around?","date":"2013-03-29T05:19:10.519Z","type":"message"}
{"nick":"trevnorris","message":"anyone around that can tell me if I missed when \"crypto\" could be accessed w/o needing the \"require()\"?","date":"2013-03-29T05:23:31.020Z","type":"message"}
{"nick":"trevnorris","message":"or is that just automatically included in REPL? strange.","date":"2013-03-29T05:25:06.779Z","type":"message"}
{"nick":"bradleymeck","date":"2013-03-29T05:42:20.740Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2013-03-29T05:42:25.473Z","type":"quit"}
{"nick":"davisp","reason":"Ping timeout: 264 seconds","date":"2013-03-29T05:44:30.462Z","type":"quit"}
{"nick":"mikeal","date":"2013-03-29T05:51:06.727Z","type":"join"}
{"nick":"kazupon","date":"2013-03-29T05:54:22.796Z","type":"join"}
{"nick":"loladiro","date":"2013-03-29T06:19:03.788Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-29T06:19:35.741Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-03-29T06:35:52.479Z","type":"nick"}
{"nick":"nsm","reason":"Quit: nsm","date":"2013-03-29T06:38:05.547Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-29T07:04:16.569Z","type":"join"}
{"nick":"brson","reason":"Quit: leaving","date":"2013-03-29T07:17:26.985Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-29T07:36:26.869Z","type":"quit"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-29T07:57:42.536Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-29T07:59:42.786Z","type":"join"}
{"nick":"`3rdEden","date":"2013-03-29T08:00:08.334Z","type":"join"}
{"nick":"rendar","date":"2013-03-29T08:06:07.458Z","type":"join"}
{"nick":"kazupon","date":"2013-03-29T08:36:49.106Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 260 seconds","date":"2013-03-29T08:41:47.859Z","type":"quit"}
{"nick":"paddybyers","date":"2013-03-29T08:45:21.527Z","type":"join"}
{"nick":"trevnorris","reason":"Quit: Leaving","date":"2013-03-29T08:46:08.203Z","type":"quit"}
{"nick":"Ralt_","date":"2013-03-29T08:52:58.721Z","type":"join"}
{"nick":"Ralt_","reason":"Client Quit","date":"2013-03-29T08:53:00.918Z","type":"quit"}
{"nick":"Ralt_","date":"2013-03-29T08:53:48.683Z","type":"join"}
{"nick":"trevnorris","date":"2013-03-29T08:57:34.168Z","type":"join"}
{"nick":"trevnorris","reason":"Client Quit","date":"2013-03-29T08:57:45.837Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-29T09:00:40.145Z","type":"quit"}
{"nick":"loladiro","date":"2013-03-29T09:05:37.617Z","type":"join"}
{"nick":"Ralt_","reason":"Quit: WeeChat 0.3.9","date":"2013-03-29T09:06:34.715Z","type":"quit"}
{"nick":"`3rdEden","reason":"Remote host closed the connection","date":"2013-03-29T09:08:25.490Z","type":"quit"}
{"nick":"`3rdEden","date":"2013-03-29T09:08:58.334Z","type":"join"}
{"nick":"Ralt","reason":"Remote host closed the connection","date":"2013-03-29T09:11:20.303Z","type":"quit"}
{"nick":"Ralt","date":"2013-03-29T09:11:52.830Z","type":"join"}
{"nick":"`3rdEden_","date":"2013-03-29T09:18:20.732Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2013-03-29T09:32:16.216Z","type":"quit"}
{"nick":"indutny","message":"morning","date":"2013-03-29T09:36:27.032Z","type":"message"}
{"nick":"indutny","message":"isaacs: yt?","date":"2013-03-29T09:36:28.635Z","type":"message"}
{"nick":"kazupon","date":"2013-03-29T09:37:26.745Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-03-29T09:42:31.546Z","type":"quit"}
{"nick":"roxlu","message":"hi guys! ","date":"2013-03-29T09:48:25.188Z","type":"message"}
{"nick":"roxlu","message":"When I have a uv_queue_work(), how can I join the work thread? ","date":"2013-03-29T09:48:45.240Z","type":"message"}
{"nick":"roxlu","message":"indutny: do you know?","date":"2013-03-29T10:12:28.041Z","type":"message"}
{"nick":"indutny","message":"what?","date":"2013-03-29T10:13:00.326Z","type":"message"}
{"nick":"roxlu","message":"I'm using a uv_queue_work() but when my application is closed I want to finish/stop the work first","date":"2013-03-29T10:13:32.345Z","type":"message"}
{"nick":"indutny","message":"cancel?","date":"2013-03-29T10:15:13.570Z","type":"message"}
{"nick":"indutny","message":"well, there're no way of doing it","date":"2013-03-29T10:15:29.466Z","type":"message"}
{"nick":"indutny","message":"and that's because this operation isn't generally safe","date":"2013-03-29T10:15:41.488Z","type":"message"}
{"nick":"indutny","message":"at least, across different platforms","date":"2013-03-29T10:15:49.150Z","type":"message"}
{"nick":"roxlu","message":"what do you mean with not safe?","date":"2013-03-29T10:15:58.613Z","type":"message"}
{"nick":"indutny","message":"cancelling running threads","date":"2013-03-29T10:19:12.516Z","type":"message"}
{"nick":"indutny","message":"is not safe","date":"2013-03-29T10:19:14.515Z","type":"message"}
{"nick":"roxlu","message":"depends on how I implement it, right?","date":"2013-03-29T10:19:26.059Z","type":"message"}
{"nick":"roxlu","message":"with a basic uv_thread_t I've control over how to stop it and that works great, but for a work queuue I guess I need to manage it a bit myself ","date":"2013-03-29T10:20:19.520Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2013-03-29T10:23:36.602Z","type":"message"}
{"nick":"rendar","message":"roxlu: to kill a thread, the thread just have to return 0; or to stop it, it just have to wait on some condition variable or something","date":"2013-03-29T10:23:43.500Z","type":"message"}
{"nick":"`3rdEden","reason":"Disconnected by services","date":"2013-03-29T10:23:47.065Z","type":"quit"}
{"nick":"rendar","message":"all other methods, are not safe","date":"2013-03-29T10:23:49.679Z","type":"message"}
{"nick":"`3rdEden_","new_nick":"`3rdEden","date":"2013-03-29T10:23:49.894Z","type":"nick"}
{"nick":"roxlu","message":"rendar: sure that's not really the problem ","date":"2013-03-29T10:24:00.579Z","type":"message"}
{"nick":"rendar","message":"oh, ok :)","date":"2013-03-29T10:24:07.261Z","type":"message"}
{"nick":"V1","date":"2013-03-29T10:24:21.527Z","type":"join"}
{"nick":"roxlu","message":"rendar: I'm start a couple of threads using the uv_queue_work() function","date":"2013-03-29T10:24:23.337Z","type":"message"}
{"nick":"rendar","message":"yeah","date":"2013-03-29T10:24:29.992Z","type":"message"}
{"nick":"roxlu","message":"which does the thread management for me ","date":"2013-03-29T10:24:34.680Z","type":"message"}
{"nick":"V1","reason":"Disconnected by services","date":"2013-03-29T10:24:54.649Z","type":"quit"}
{"nick":"roxlu","message":"I think I'm looking for something like: uv_queue_join_threads() or something","date":"2013-03-29T10:25:01.066Z","type":"message"}
{"nick":"roxlu","message":"but I'll write a workaround using a custom 'counter' ","date":"2013-03-29T10:25:20.224Z","type":"message"}
{"nick":"rendar","message":"hmm","date":"2013-03-29T10:25:51.019Z","type":"message"}
{"nick":"rendar","message":"roxlu: well, you need a loop which traverse the handle of all running threads and wait on that handle","date":"2013-03-29T10:26:12.992Z","type":"message"}
{"nick":"roxlu","message":"I'm using UV_RUN_NOWAIT","date":"2013-03-29T10:26:29.598Z","type":"message"}
{"nick":"rendar","message":"well, iirc threads in uv_queue_work are always non-detached (in the pthread meaning of 'detached') right?","date":"2013-03-29T10:29:11.994Z","type":"message"}
{"nick":"roxlu","action":"don't know how the queue works internally","date":"2013-03-29T10:33:38.376Z","type":"action"}
{"nick":"roxlu","action":"s/don't/doesn't","date":"2013-03-29T10:33:52.425Z","type":"action"}
{"nick":"kazupon","date":"2013-03-29T10:38:05.894Z","type":"join"}
{"nick":"Kakera","date":"2013-03-29T10:39:10.901Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-03-29T10:42:48.733Z","type":"quit"}
{"nick":"rendar_","date":"2013-03-29T10:46:49.340Z","type":"join"}
{"nick":"rendar","reason":"Read error: Connection reset by peer","date":"2013-03-29T10:47:27.470Z","type":"quit"}
{"nick":"loladiro","reason":"Read error: Connection reset by peer","date":"2013-03-29T10:54:11.265Z","type":"quit"}
{"nick":"loladiro","date":"2013-03-29T10:54:30.423Z","type":"join"}
{"nick":"einaros_","new_nick":"einaros","date":"2013-03-29T10:57:43.108Z","type":"nick"}
{"nick":"kazupon","date":"2013-03-29T11:03:36.864Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-29T11:06:11.361Z","type":"quit"}
{"nick":"stagas","date":"2013-03-29T11:06:41.643Z","type":"join"}
{"nick":"hz","date":"2013-03-29T11:08:16.705Z","type":"join"}
{"nick":"kazupon","date":"2013-03-29T11:08:39.563Z","type":"join"}
{"nick":"AvianFlu","date":"2013-03-29T11:15:50.620Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-03-29T11:38:07.840Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-29T12:09:44.163Z","type":"quit"}
{"nick":"mmalecki[zzz]","new_nick":"mmalecki","date":"2013-03-29T12:29:31.835Z","type":"nick"}
{"nick":"piscisaureus_","date":"2013-03-29T12:29:41.223Z","type":"join"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-29T12:40:37.960Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-29T12:41:13.350Z","type":"join"}
{"nick":"hz","date":"2013-03-29T12:41:16.683Z","type":"quit"}
{"nick":"`3rdEden","new_nick":"`3E|AFK","date":"2013-03-29T12:55:12.466Z","type":"nick"}
{"nick":"bnoordhuis","date":"2013-03-29T12:59:17.110Z","type":"join"}
{"nick":"hz","date":"2013-03-29T13:03:50.845Z","type":"join"}
{"nick":"kazupon","date":"2013-03-29T13:10:07.220Z","type":"join"}
{"nick":"paddybyers","reason":"Ping timeout: 258 seconds","date":"2013-03-29T13:11:31.805Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 260 seconds","date":"2013-03-29T13:14:47.949Z","type":"quit"}
{"nick":"paddybyers","date":"2013-03-29T13:29:35.054Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-03-29T13:33:39.603Z","type":"nick"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-29T13:38:40.631Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-29T13:57:45.231Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-29T13:59:17.777Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-29T13:59:43.870Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-03-29T14:00:14.952Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-29T14:00:33.889Z","type":"join"}
{"nick":"kazupon","date":"2013-03-29T14:10:47.815Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 258 seconds","date":"2013-03-29T14:16:18.669Z","type":"quit"}
{"nick":"bnoordhuis","message":"autoconf is so fucking awful","date":"2013-03-29T14:20:37.672Z","type":"message"}
{"nick":"bnoordhuis","message":"i mean intrinsically awful","date":"2013-03-29T14:21:02.376Z","type":"message"}
{"nick":"bnoordhuis","message":"and then people take it and try to beat it into submission","date":"2013-03-29T14:21:17.546Z","type":"message"}
{"nick":"bnoordhuis","message":"making it awful^2","date":"2013-03-29T14:21:24.400Z","type":"message"}
{"nick":"kazupon","date":"2013-03-29T14:23:57.361Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-03-29T14:24:17.585Z","type":"quit"}
{"nick":"bnoordhuis","message":"and the perpetual regenerating of everything!","date":"2013-03-29T14:25:26.734Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-29T14:25:29.478Z","type":"quit"}
{"nick":"bnoordhuis","message":"GNU has got a lot to answer for >:-(","date":"2013-03-29T14:25:34.839Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: you need some pot?","date":"2013-03-29T14:28:18.344Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: i'm opting for beer today","date":"2013-03-29T14:28:29.917Z","type":"message"}
{"nick":"bnoordhuis","message":"ibtool: compile: unable to infer tagged configuration","date":"2013-03-29T14:29:29.488Z","type":"message"}
{"nick":"bnoordhuis","message":"libtool: compile: specify a tag with `--tag'","date":"2013-03-29T14:29:29.993Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: we should do TLS in all c","date":"2013-03-29T14:29:31.425Z","type":"message"}
{"nick":"bnoordhuis","message":"son of a...","date":"2013-03-29T14:29:32.795Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: i think i agree. i just don't expect miracles","date":"2013-03-29T14:29:53.957Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I expect miracles. Sunday we're all going to celebrate that someone beat death.","date":"2013-03-29T14:31:08.068Z","type":"message"}
{"nick":"piscisaureus_","message":"And you're telling me you can't even make tls faster?","date":"2013-03-29T14:31:18.647Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: I'll give you the monday, too.","date":"2013-03-29T14:31:56.601Z","type":"message"}
{"nick":"bnoordhuis","message":"you're too generous, bertje","date":"2013-03-29T14:35:34.469Z","type":"message"}
{"nick":"kazupon","date":"2013-03-29T14:46:37.842Z","type":"join"}
{"nick":"bnoordhuis","message":"piscisaureus_: call in 5","date":"2013-03-29T14:55:06.875Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: word","date":"2013-03-29T14:55:14.103Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs broke the build :)","date":"2013-03-29T14:55:44.921Z","type":"message"}
{"nick":"bnoordhuis","message":"Undefined symbols for architecture x86_64:","date":"2013-03-29T14:55:45.522Z","type":"message"}
{"nick":"bnoordhuis","message":"  \"_uv_version_string\", referenced from:","date":"2013-03-29T14:55:45.739Z","type":"message"}
{"nick":"bnoordhuis","message":"      node::SetupProcessObject(int, char**)in node.node.o","date":"2013-03-29T14:55:45.739Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: boo! you did","date":"2013-03-29T14:56:31.821Z","type":"message"}
{"nick":"bnoordhuis","message":"nuh-uh. he merged it into master!","date":"2013-03-29T14:56:44.520Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: Should I land the versioning stuff on libuv-master?","date":"2013-03-29T14:56:45.913Z","type":"message"}
{"nick":"bnoordhuis","message":"i'll merge libuv v0.10 in master","date":"2013-03-29T14:56:56.711Z","type":"message"}
{"nick":"bnoordhuis","message":"(was already doing that)","date":"2013-03-29T14:57:04.976Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: ok. Also bump the versions in include/uv.h and src/version.c then","date":"2013-03-29T14:57:20.864Z","type":"message"}
{"nick":"bnoordhuis","message":"hrm, why are UV_VERSION_MAJOR and UV_VERSION_MINOR defined in two places?","date":"2013-03-29T14:58:20.437Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: we used to have them in uv.h, but IMO that's wrong","date":"2013-03-29T14:58:50.542Z","type":"message"}
{"nick":"piscisaureus_","message":"but I couldn't just remove those defines","date":"2013-03-29T14:58:57.342Z","type":"message"}
{"nick":"bnoordhuis","message":"well, we can remove them in master","date":"2013-03-29T14:59:22.862Z","type":"message"}
{"nick":"bnoordhuis","message":"now is a good a time as any","date":"2013-03-29T14:59:26.939Z","type":"message"}
{"nick":"bnoordhuis","message":"would this be 0.11.1?","date":"2013-03-29T14:59:50.819Z","type":"message"}
{"nick":"piscisaureus_","message":"that's okay","date":"2013-03-29T14:59:52.103Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: yeah, let's go for 0.11.1 or or 0.11.0","date":"2013-03-29T15:00:04.246Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: i don't care much actually :)","date":"2013-03-29T15:00:10.011Z","type":"message"}
{"nick":"bnoordhuis","message":"we already did a node 0.11.0 release","date":"2013-03-29T15:00:25.108Z","type":"message"}
{"nick":"piscisaureus_","message":"yeah","date":"2013-03-29T15:00:28.639Z","type":"message"}
{"nick":"bnoordhuis","message":"so i guess 0.11.1 it is","date":"2013-03-29T15:00:36.488Z","type":"message"}
{"nick":"piscisaureus_","message":"ok","date":"2013-03-29T15:00:40.798Z","type":"message"}
{"nick":"piscisaureus_","message":"go for it","date":"2013-03-29T15:00:43.678Z","type":"message"}
{"nick":"bnoordhuis","action":"goes for it","date":"2013-03-29T15:00:52.674Z","type":"action"}
{"nick":"Kakera","reason":"Read error: Connection reset by peer","date":"2013-03-29T15:01:28.027Z","type":"quit"}
{"nick":"piscisaureus_","message":"bnoordhuis: meeting","date":"2013-03-29T15:01:34.419Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/libuv:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u0002c43e851\u0002 : src: bump version to 0.11.1-pre (+7 more commits) - http://git.io/8WoSeQ","date":"2013-03-29T15:02:15.319Z","type":"message"}
{"nick":"piscisaureus_","message":"bnoordhuis: meeeeeeeting!!","date":"2013-03-29T15:02:26.614Z","type":"message"}
{"nick":"bnoordhuis","message":"piscisaureus_: where?","date":"2013-03-29T15:02:29.599Z","type":"message"}
{"nick":"bnoordhuis","message":"skype?","date":"2013-03-29T15:02:30.911Z","type":"message"}
{"nick":"bnoordhuis","message":"there's no hangout","date":"2013-03-29T15:02:41.667Z","type":"message"}
{"nick":"MI6","message":"\u0002libuv-master\u0002: #62 \u00037UNSTABLE\u000f windows (7/188) osx (2/187) smartos (6/187) linux (2/187) http://jenkins.nodejs.org/job/libuv-master/62/","date":"2013-03-29T15:04:46.469Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Ben Noordhuis\u000f \u00037master\u000f * \u00023f091c7\u0002 : src: fix Persistent<> deprecation warning  Pass the Isolate to Persistent (+2 more commits) - http://git.io/Gyahig","date":"2013-03-29T15:16:41.219Z","type":"message"}
{"nick":"trevnorris","date":"2013-03-29T15:25:59.138Z","type":"join"}
{"nick":"AvianFlu","date":"2013-03-29T15:30:40.966Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #127 \u00034FAILURE\u000f osx-x64 (1/573) windows-ia32 (8/572) windows-x64 (7/573) smartos-ia32 (2/573) smartos-x64 (3/573) http://jenkins.nodejs.org/job/nodejs-master/127/","date":"2013-03-29T15:31:16.106Z","type":"message"}
{"nick":"Guest__","date":"2013-03-29T15:32:09.955Z","type":"join"}
{"nick":"Guest__","reason":"Max SendQ exceeded","date":"2013-03-29T15:32:10.733Z","type":"quit"}
{"nick":"Guest__","date":"2013-03-29T15:33:16.625Z","type":"join"}
{"nick":"Guest__","reason":"Max SendQ exceeded","date":"2013-03-29T15:33:18.369Z","type":"quit"}
{"nick":"omgnodes","date":"2013-03-29T15:34:04.605Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-03-29T15:38:29.415Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-03-29T15:42:58.862Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-29T15:43:44.643Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-29T15:44:23.701Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis, indutny: thanks you guys for putting up with all my questions recently. think I solved the allocation problem, thanks to your help.","date":"2013-03-29T15:50:19.537Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: hey","date":"2013-03-29T16:07:25.708Z","type":"message"}
{"nick":"indutny","message":"its not necessary to off-load tls jobs to multiple threads","date":"2013-03-29T16:07:37.507Z","type":"message"}
{"nick":"indutny","message":"its just generally not a good idea to do this in event loop","date":"2013-03-29T16:07:45.470Z","type":"message"}
{"nick":"indutny","message":"(to my mind)","date":"2013-03-29T16:07:49.047Z","type":"message"}
{"nick":"isaacs","message":"indutny: what do you propose?  have a thread dedicated to TLS jobs?","date":"2013-03-29T16:10:21.436Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2013-03-29T16:10:28.127Z","type":"message"}
{"nick":"indutny","message":"sort of tlsnappy, but with one thread","date":"2013-03-29T16:10:40.317Z","type":"message"}
{"nick":"indutny","message":"there's negative effects of context switching","date":"2013-03-29T16:10:52.597Z","type":"message"}
{"nick":"indutny","message":"but generally app should be still responsive even under high load","date":"2013-03-29T16:11:02.151Z","type":"message"}
{"nick":"indutny","message":"of tls requests","date":"2013-03-29T16:11:04.110Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: oh, whoops, i merged deps/uv/ as well.  usually i do `git checkout deps/uv/ -- master` before committing the merge.","date":"2013-03-29T16:11:18.811Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: think I found a way to allocate external memory faster than Buffers currently do, and don't leak memory. though I definitely need a sanity check.","date":"2013-03-29T16:11:21.428Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: exciting!","date":"2013-03-29T16:11:31.714Z","type":"message"}
{"nick":"kazupon","date":"2013-03-29T16:12:24.901Z","type":"join"}
{"nick":"isaacs","message":"05:15 < trevnorris> indutny: you around? line 176 of lib/crypto.js \"return new Hash(algorithm)\", shouldn't that be \"return new Hash(algorithm, options);\"?","date":"2013-03-29T16:12:36.293Z","type":"message"}
{"nick":"isaacs","message":"^ yes.","date":"2013-03-29T16:12:39.318Z","type":"message"}
{"nick":"isaacs","message":"it should","date":"2013-03-29T16:12:40.894Z","type":"message"}
{"nick":"trevnorris","message":"cool. tls is a scary place for me, so didn't know if there was some magic sauce I didn't see.","date":"2013-03-29T16:13:36.056Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: patch coming shortly","date":"2013-03-29T16:14:10.933Z","type":"message"}
{"nick":"isaacs","message":"there's like 6 places where we do this wrong in crypto.js","date":"2013-03-29T16:14:23.132Z","type":"message"}
{"nick":"isaacs","message":"just making tests first","date":"2013-03-29T16:14:27.667Z","type":"message"}
{"nick":"mikeal","date":"2013-03-29T16:14:48.880Z","type":"join"}
{"nick":"indutny","message":"isaacs: ah","date":"2013-03-29T16:15:25.617Z","type":"message"}
{"nick":"indutny","message":"speaking about net.js","date":"2013-03-29T16:15:29.347Z","type":"message"}
{"nick":"indutny","message":"I think there's a bug","date":"2013-03-29T16:15:33.587Z","type":"message"}
{"nick":"indutny","message":"related to https://github.com/joyent/node/issues/5145","date":"2013-03-29T16:15:46.287Z","type":"message"}
{"nick":"indutny","message":"https://gist.github.com/indutny/8e4037222315a8abe5bd","date":"2013-03-29T16:16:23.267Z","type":"message"}
{"nick":"indutny","message":"fixes it ^","date":"2013-03-29T16:16:28.370Z","type":"message"}
{"nick":"indutny","message":"but introduces test failures","date":"2013-03-29T16:16:35.588Z","type":"message"}
{"nick":"indutny","message":"and probably some user-land failures as well","date":"2013-03-29T16:16:41.528Z","type":"message"}
{"nick":"indutny","message":"so, basically","date":"2013-03-29T16:17:13.091Z","type":"message"}
{"nick":"indutny","message":"we should not keep socket open if one of the sides was ended or finished","date":"2013-03-29T16:17:30.807Z","type":"message"}
{"nick":"indutny","message":"and we do it now","date":"2013-03-29T16:17:34.427Z","type":"message"}
{"nick":"indutny","message":"if it was finished","date":"2013-03-29T16:17:38.181Z","type":"message"}
{"nick":"dap","date":"2013-03-29T16:20:25.701Z","type":"join"}
{"nick":"bnoordhuis","message":"indutny: re tls, i was discussing that with bert just now","date":"2013-03-29T16:22:42.887Z","type":"message"}
{"nick":"indutny","message":"oh, can you forward this to me?","date":"2013-03-29T16:22:53.518Z","type":"message"}
{"nick":"bnoordhuis","message":"well, it's not like i recorded it","date":"2013-03-29T16:23:03.137Z","type":"message"}
{"nick":"bnoordhuis","message":"i have eidetic memory but i'm rather attached to it, you can't have it","date":"2013-03-29T16:23:23.097Z","type":"message"}
{"nick":"indutny","message":"anyway","date":"2013-03-29T16:24:05.984Z","type":"message"}
{"nick":"bnoordhuis","message":"anyway, a) seems like the best option + c) fixing cluster to work with shared session storage","date":"2013-03-29T16:24:06.850Z","type":"message"}
{"nick":"indutny","message":"a ?","date":"2013-03-29T16:24:18.307Z","type":"message"}
{"nick":"indutny","message":"move everything to C?","date":"2013-03-29T16:24:24.437Z","type":"message"}
{"nick":"bnoordhuis","message":"move everything to c++ land","date":"2013-03-29T16:24:28.781Z","type":"message"}
{"nick":"indutny","message":"ok, while we're here","date":"2013-03-29T16:24:36.517Z","type":"message"}
{"nick":"bnoordhuis","message":"in c++ land?","date":"2013-03-29T16:24:41.403Z","type":"message"}
{"nick":"indutny","message":"lets talk about how it'll work :)","date":"2013-03-29T16:24:42.487Z","type":"message"}
{"nick":"indutny","message":"because I did clone in tlsnappy","date":"2013-03-29T16:24:57.028Z","type":"message"}
{"nick":"bnoordhuis","message":"clone what?","date":"2013-03-29T16:25:07.146Z","type":"message"}
{"nick":"indutny","message":"and it was still visiting js-land *alot*","date":"2013-03-29T16:25:07.657Z","type":"message"}
{"nick":"indutny","message":"lib/tls.js","date":"2013-03-29T16:25:12.299Z","type":"message"}
{"nick":"bnoordhuis","message":"ah","date":"2013-03-29T16:25:18.620Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: do you have any particular idea?","date":"2013-03-29T16:25:23.357Z","type":"message"}
{"nick":"bnoordhuis","message":"essentially you'd do everything in c++ land and only emit cleartext strings/buffers to js land","date":"2013-03-29T16:25:37.994Z","type":"message"}
{"nick":"indutny","message":"meh","date":"2013-03-29T16:25:42.708Z","type":"message"}
{"nick":"indutny","message":"that doesn't work","date":"2013-03-29T16:25:45.437Z","type":"message"}
{"nick":"indutny","message":"next?","date":"2013-03-29T16:25:47.077Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-03-29T16:25:58.917Z","type":"message"}
{"nick":"bnoordhuis","message":"\"that doesn't work\" <- great argument","date":"2013-03-29T16:26:11.506Z","type":"message"}
{"nick":"indutny","message":"well, you need more control","date":"2013-03-29T16:26:19.037Z","type":"message"}
{"nick":"bnoordhuis","message":"who is 'you' here?","date":"2013-03-29T16:26:29.311Z","type":"message"}
{"nick":"indutny","message":"and 95% of things are manageable only from js","date":"2013-03-29T16:26:29.526Z","type":"message"}
{"nick":"indutny","message":"you/we :)","date":"2013-03-29T16:26:36.172Z","type":"message"}
{"nick":"bnoordhuis","message":"if it's in c++, i (as in me, bnoordhuis) have all the control i need","date":"2013-03-29T16:26:51.781Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: just to be sure, that I got you correctly","date":"2013-03-29T16:27:08.167Z","type":"message"}
{"nick":"omgnodes","reason":"Quit: Computer has gone to sleep.","date":"2013-03-29T16:27:14.381Z","type":"quit"}
{"nick":"indutny","message":"you want to create \"black box\" in C++ that will consume incoming data","date":"2013-03-29T16:27:19.927Z","type":"message"}
{"nick":"indutny","message":"from two directions","date":"2013-03-29T16:27:27.777Z","type":"message"}
{"nick":"indutny","message":"and emit outcoming data to two directions","date":"2013-03-29T16:27:33.517Z","type":"message"}
{"nick":"indutny","message":"is it correct?","date":"2013-03-29T16:27:36.017Z","type":"message"}
{"nick":"bnoordhuis","message":"not even consume","date":"2013-03-29T16:27:37.212Z","type":"message"}
{"nick":"indutny","message":"right","date":"2013-03-29T16:27:46.667Z","type":"message"}
{"nick":"indutny","message":"consume => receive","date":"2013-03-29T16:27:49.148Z","type":"message"}
{"nick":"indutny","message":"passive","date":"2013-03-29T16:27:52.737Z","type":"message"}
{"nick":"bnoordhuis","message":"you call tls2.start(port, host), it deals with libuv directly and the only thing it does is emit cleartext data to js land","date":"2013-03-29T16:28:00.940Z","type":"message"}
{"nick":"indutny","message":"ok?","date":"2013-03-29T16:28:01.528Z","type":"message"}
{"nick":"indutny","message":"aaaaah","date":"2013-03-29T16:28:06.019Z","type":"message"}
{"nick":"indutny","message":"this stuff","date":"2013-03-29T16:28:10.328Z","type":"message"}
{"nick":"indutny","message":"what about starttls","date":"2013-03-29T16:28:21.497Z","type":"message"}
{"nick":"bnoordhuis","message":"too bad","date":"2013-03-29T16:28:31.014Z","type":"message"}
{"nick":"indutny","message":"and many other applications","date":"2013-03-29T16:28:33.457Z","type":"message"}
{"nick":"bnoordhuis","message":"i'm optimizing for the common use case here","date":"2013-03-29T16:28:49.800Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2013-03-29T16:28:57.867Z","type":"message"}
{"nick":"indutny","message":"I don't like this idea, actually...","date":"2013-03-29T16:29:37.717Z","type":"message"}
{"nick":"isaacs","message":"indutny: i'll dig into that issue.  it takes a while for me to page-in all the data about how TCP works for stuff like this :)","date":"2013-03-29T16:29:41.158Z","type":"message"}
{"nick":"indutny","message":"we could do http the same way","date":"2013-03-29T16:29:43.557Z","type":"message"}
{"nick":"isaacs","message":"indutny: (re eof/fin/etc.)","date":"2013-03-29T16:29:46.230Z","type":"message"}
{"nick":"indutny","message":"isaacs: kewl!","date":"2013-03-29T16:29:54.887Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: http or https? (i like the idea in both cases :)","date":"2013-03-29T16:30:13.222Z","type":"message"}
{"nick":"indutny","message":"isaacs: would be good if you'll write something in that issue","date":"2013-03-29T16:30:14.188Z","type":"message"}
{"nick":"indutny","message":"isaacs: this guy is sort of expecting some answer","date":"2013-03-29T16:30:22.777Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-03-29T16:30:24.717Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: hehe","date":"2013-03-29T16:30:38.228Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: this sound a bit enterprisey","date":"2013-03-29T16:31:02.018Z","type":"message"}
{"nick":"indutny","message":"sl is having an effect on you?","date":"2013-03-29T16:31:16.716Z","type":"message"}
{"nick":"bnoordhuis","message":"i like enterprisey, enterprisey is where the money is","date":"2013-03-29T16:31:24.363Z","type":"message"}
{"nick":"indutny","message":"oh gosh","date":"2013-03-29T16:31:32.788Z","type":"message"}
{"nick":"bnoordhuis","message":"but no, it's not strongloop","date":"2013-03-29T16:31:41.020Z","type":"message"}
{"nick":"bnoordhuis","message":"the way i see it, if we want fast tls, something's got to give","date":"2013-03-29T16:31:58.886Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2013-03-29T16:32:17.477Z","type":"message"}
{"nick":"indutny","message":"I just not sure if it'd be a good thing to have this in core","date":"2013-03-29T16:32:27.168Z","type":"message"}
{"nick":"indutny","message":"s/I/I'm/","date":"2013-03-29T16:32:33.546Z","type":"message"}
{"nick":"bnoordhuis","message":"well, then we're stuck with the current implementation","date":"2013-03-29T16:32:43.308Z","type":"message"}
{"nick":"indutny","message":"its a little bit outstanding","date":"2013-03-29T16:32:44.257Z","type":"message"}
{"nick":"indutny","message":"and would complicate \"hacking\" a lot","date":"2013-03-29T16:33:04.210Z","type":"message"}
{"nick":"bnoordhuis","message":"for whom?","date":"2013-03-29T16:33:13.234Z","type":"message"}
{"nick":"indutny","message":"for developers/module developers","date":"2013-03-29T16:33:25.908Z","type":"message"}
{"nick":"bnoordhuis","message":"right, tough cookies","date":"2013-03-29T16:33:35.795Z","type":"message"}
{"nick":"indutny","message":"but I think","date":"2013-03-29T16:33:38.956Z","type":"message"}
{"nick":"bnoordhuis","message":"they can stick with tls1","date":"2013-03-29T16:33:39.533Z","type":"message"}
{"nick":"indutny","message":"it might be a good idea","date":"2013-03-29T16:33:42.669Z","type":"message"}
{"nick":"indutny","message":"well, we're discussing imaginary module right now","date":"2013-03-29T16:33:52.449Z","type":"message"}
{"nick":"indutny","message":"how can I be sure what it'll look like","date":"2013-03-29T16:34:03.818Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: what's that about http/s?","date":"2013-03-29T16:34:04.651Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: reading this conv, feel like i missed a step there.","date":"2013-03-29T16:34:18.830Z","type":"message"}
{"nick":"bnoordhuis","message":"isaacs: we're discussing tls","date":"2013-03-29T16:34:23.321Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-29T16:34:27.660Z","type":"quit"}
{"nick":"isaacs","message":"oh, i did miss a step: 16:33 <@indutny> we could do http the same way","date":"2013-03-29T16:34:36.815Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2013-03-29T16:34:44.541Z","type":"message"}
{"nick":"indutny","message":"it just looks logical for me","date":"2013-03-29T16:34:53.947Z","type":"message"}
{"nick":"isaacs","message":"i actually think that http belongs more in js than in C++","date":"2013-03-29T16:35:08.704Z","type":"message"}
{"nick":"bnoordhuis","message":"i'd be in favor splitting http in a high and a low level module actually","date":"2013-03-29T16:35:15.180Z","type":"message"}
{"nick":"isaacs","message":"but we can't ditch the http_parser.c yet","date":"2013-03-29T16:35:17.238Z","type":"message"}
{"nick":"bnoordhuis","message":"but that's a different discussion","date":"2013-03-29T16:35:19.838Z","type":"message"}
{"nick":"isaacs","message":"yeah, very different.","date":"2013-03-29T16:35:24.937Z","type":"message"}
{"nick":"indutny","message":"welll","date":"2013-03-29T16:35:27.862Z","type":"message"}
{"nick":"indutny","message":"its about consistency","date":"2013-03-29T16:35:36.278Z","type":"message"}
{"nick":"indutny","message":"and applies to this discussion","date":"2013-03-29T16:35:41.957Z","type":"message"}
{"nick":"isaacs","message":"first we need to just get our current http to be less shitty.  but go back to tls, please, don't let me distract you.  just bumped into my Pet Issue, that's all ;)","date":"2013-03-29T16:35:45.215Z","type":"message"}
{"nick":"bnoordhuis","message":"indutny: there's people waiting for me","date":"2013-03-29T16:36:09.091Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: k","date":"2013-03-29T16:36:16.174Z","type":"message"}
{"nick":"indutny","message":"lets talk about it later","date":"2013-03-29T16:36:21.662Z","type":"message"}
{"nick":"bnoordhuis","message":"yep, give you time to think about it","date":"2013-03-29T16:36:32.661Z","type":"message"}
{"nick":"bnoordhuis","message":"and realize i'm right :)","date":"2013-03-29T16:36:36.492Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2013-03-29T16:36:39.703Z","type":"message"}
{"nick":"indutny","message":"lets see","date":"2013-03-29T16:36:42.693Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, later","date":"2013-03-29T16:36:53.241Z","type":"message"}
{"nick":"indutny","message":"later","date":"2013-03-29T16:36:58.593Z","type":"message"}
{"nick":"isaacs","message":"indutny: We can make TLS a bit less transparent/hackable if it makes it better/faster/stronger.  but we DO need to make that trade-off clear, and explore exactly what it means.","date":"2013-03-29T16:37:39.425Z","type":"message"}
{"nick":"isaacs","message":"indutny: i think most node users don't give two shits about hacking tls","date":"2013-03-29T16:37:48.651Z","type":"message"}
{"nick":"indutny","message":"that \"bit\" is a bit too big","date":"2013-03-29T16:37:55.714Z","type":"message"}
{"nick":"indutny","message":"separate network stack","date":"2013-03-29T16:38:08.933Z","type":"message"}
{"nick":"indutny","message":"every networking operation in C++","date":"2013-03-29T16:38:19.726Z","type":"message"}
{"nick":"isaacs","message":"sure","date":"2013-03-29T16:38:24.415Z","type":"message"}
{"nick":"loladiro","date":"2013-03-29T16:38:31.649Z","type":"join"}
{"nick":"indutny","message":"why not write it in java then?","date":"2013-03-29T16:38:52.884Z","type":"message"}
{"nick":"isaacs","message":"it might end up taking us back to the Bad Old Days of node 0.1 when https and http were completely different mostly-overlapping implementations.","date":"2013-03-29T16:38:54.677Z","type":"message"}
{"nick":"isaacs","message":"so we'd have to find the right trade-off there.","date":"2013-03-29T16:39:04.596Z","type":"message"}
{"nick":"isaacs","message":"no one wants that.","date":"2013-03-29T16:39:06.639Z","type":"message"}
{"nick":"isaacs","message":"indutny: https://gist.github.com/5271988 <-- review?","date":"2013-03-29T16:40:02.704Z","type":"message"}
{"nick":"isaacs","message":"tests pass","date":"2013-03-29T16:40:06.347Z","type":"message"}
{"nick":"isaacs","message":"just look for typos :)","date":"2013-03-29T16:40:19.866Z","type":"message"}
{"nick":"indutny","message":"LGTM","date":"2013-03-29T16:40:34.615Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 246 seconds","date":"2013-03-29T16:41:16.968Z","type":"quit"}
{"nick":"isaacs","message":"k","date":"2013-03-29T16:41:36.879Z","type":"message"}
{"nick":"isaacs","message":"thanks","date":"2013-03-29T16:41:37.891Z","type":"message"}
{"nick":"indutny","message":"it might that I'm not in a good mood today :)","date":"2013-03-29T16:41:41.662Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: if there's a cc api that's only meant to be accessed directly via the js api, is it fine to remove the argument type checks in cc?","date":"2013-03-29T16:41:43.662Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033isaacs\u000f \u00037v0.10\u000f * \u00027af075e\u0002 : crypto: Pass options to ctor calls - http://git.io/MLEymg","date":"2013-03-29T16:41:46.252Z","type":"message"}
{"nick":"indutny","message":"so please ignore me if I'm a bit rude","date":"2013-03-29T16:41:48.105Z","type":"message"}
{"nick":"isaacs","message":"indutny: everything ok?","date":"2013-03-29T16:42:14.112Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2013-03-29T16:42:17.976Z","type":"message"}
{"nick":"indutny","message":"just mood issues","date":"2013-03-29T16:42:23.343Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: asserts are good for that.","date":"2013-03-29T16:42:35.555Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: it's a good idea to have defense in depth.  they've come in handy a lot of times.","date":"2013-03-29T16:42:45.527Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: and C asserts are cheap","date":"2013-03-29T16:42:50.946Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 258 seconds","date":"2013-03-29T16:43:07.209Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: it's mainly all the arg[n]->IsObject/IsUint32/Is... that is costly.","date":"2013-03-29T16:43:29.864Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: hm.","date":"2013-03-29T16:43:38.486Z","type":"message"}
{"nick":"indutny","message":"trevnorris: benchmark","date":"2013-03-29T16:43:48.343Z","type":"message"}
{"nick":"indutny","message":"and decide","date":"2013-03-29T16:43:49.878Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: yes, benchmark","date":"2013-03-29T16:43:55.011Z","type":"message"}
{"nick":"indutny","message":"usually cost is not that high","date":"2013-03-29T16:43:57.335Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: but if we can replace that with something that is equally blow-uppy then sure.","date":"2013-03-29T16:44:10.109Z","type":"message"}
{"nick":"isaacs","message":"or move to the JS layer","date":"2013-03-29T16:44:21.556Z","type":"message"}
{"nick":"inolen","reason":"Quit: Leaving.","date":"2013-03-29T16:45:06.181Z","type":"quit"}
{"nick":"tjfontaine","message":"lul \"has simply not provided any evidence to support his view or refute a single point of mine on the matter\"","date":"2013-03-29T16:46:37.779Z","type":"message"}
{"nick":"trevnorris","message":"how often are buffers < 256 bytes needed?","date":"2013-03-29T16:46:43.631Z","type":"message"}
{"nick":"trevnorris","message":"because that's the only case where the perf difference is noticable (by around 10%)","date":"2013-03-29T16:47:01.530Z","type":"message"}
{"nick":"tjfontaine","message":"possible to generate them on the dns side","date":"2013-03-29T16:47:08.491Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-29T16:49:01.107Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-29T16:51:15.120Z","type":"join"}
{"nick":"isaacs","message":"tjfontaine: error handling still happening?","date":"2013-03-29T16:53:48.967Z","type":"message"}
{"nick":"mmalecki","message":"trevnorris: happens fairly often with websockets","date":"2013-03-29T16:54:06.527Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: yes that thread","date":"2013-03-29T16:54:11.437Z","type":"message"}
{"nick":"isaacs","message":"oh, jeez.","date":"2013-03-29T16:54:21.445Z","type":"message"}
{"nick":"isaacs","action":"sigh","date":"2013-03-29T16:54:23.910Z","type":"action"}
{"nick":"tjfontaine","message":"the emphasis was his, not mine :)","date":"2013-03-29T16:54:32.072Z","type":"message"}
{"nick":"trevnorris","message":"mmalecki: thanks","date":"2013-03-29T16:54:33.554Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2013-03-29T16:54:50.025Z","type":"message"}
{"nick":"TooTallNate","date":"2013-03-29T16:58:33.368Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-v0.10\u0002: #93 \u00037UNSTABLE\u000f windows-x64 (5/570) smartos-ia32 (1/570) windows-ia32 (5/570) http://jenkins.nodejs.org/job/nodejs-v0.10/93/","date":"2013-03-29T16:58:55.264Z","type":"message"}
{"nick":"trevnorris","message":"is there a way to attach to module.exports from cc, or will it have to go through js?","date":"2013-03-29T16:59:31.865Z","type":"message"}
{"nick":"tjfontaine","message":"hmm there was an issue about this, I think it may have been added","date":"2013-03-29T17:00:13.535Z","type":"message"}
{"nick":"tjfontaine","message":"(we really should document this :P)","date":"2013-03-29T17:00:19.217Z","type":"message"}
{"nick":"trevnorris","message":"i'll make that my next project after finishing the memory allocation stuff.","date":"2013-03-29T17:00:45.623Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/joyent/node/pull/4634","date":"2013-03-29T17:01:07.145Z","type":"message"}
{"nick":"tjfontaine","message":"https://github.com/joyent/node/commit/15508589a163b0c9f09ac608281f9ebb015d4deb being the commit that landed","date":"2013-03-29T17:01:27.171Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: awesome. thanks =)","date":"2013-03-29T17:02:12.360Z","type":"message"}
{"nick":"mikeal","date":"2013-03-29T17:03:29.806Z","type":"join"}
{"nick":"isaacs","message":"yes, in 0.10 there is this","date":"2013-03-29T17:04:46.863Z","type":"message"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-03-29T17:05:33.308Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-29T17:08:00.553Z","type":"join"}
{"nick":"trevnorris","message":"cool. I just moved all the check logic to cc and bypassed the need for js. ended up being faster.","date":"2013-03-29T17:09:44.286Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-29T17:12:33.480Z","type":"quit"}
{"nick":"mmalecki","message":"trevnorris: let me know when you have a patch. I'll give it a try on our LBs","date":"2013-03-29T17:13:07.233Z","type":"message"}
{"nick":"mmalecki","message":"(the buffer allocation thing, I mean)","date":"2013-03-29T17:13:29.780Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2013-03-29T17:15:35.873Z","type":"quit"}
{"nick":"trevnorris","message":"mmalecki: right now I only have the allocator (the part that will handle all external memory allocation).","date":"2013-03-29T17:16:35.352Z","type":"message"}
{"nick":"trevnorris","message":"it's going to take me a while to hammer it into the current Buffers","date":"2013-03-29T17:16:53.707Z","type":"message"}
{"nick":"mmalecki","message":"yeah, no worries","date":"2013-03-29T17:17:16.066Z","type":"message"}
{"nick":"mmalecki","message":"just let me know when can we test it out","date":"2013-03-29T17:17:23.251Z","type":"message"}
{"nick":"trevnorris","message":"will do. throw a reminder on PR 4964 or i'll probably forget. =)","date":"2013-03-29T17:18:00.288Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-03-29T17:18:15.371Z","type":"join"}
{"nick":"MI6","message":"\u0002nodejs-master\u0002: #128 \u00037UNSTABLE\u000f windows-ia32 (6/573) osx-ia32 (1/573) windows-x64 (5/573) smartos-ia32 (3/573) smartos-x64 (2/573) http://jenkins.nodejs.org/job/nodejs-master/128/","date":"2013-03-29T17:21:28.595Z","type":"message"}
{"nick":"trevnorris","message":"there's a test i need to include to make sure the allocator doesn't seg fault. i'll assume there's not an assert for that?","date":"2013-03-29T17:22:33.250Z","type":"message"}
{"nick":"trevnorris","message":";-)","date":"2013-03-29T17:22:44.229Z","type":"message"}
{"nick":"tjfontaine","message":"well","date":"2013-03-29T17:22:54.717Z","type":"message"}
{"nick":"tjfontaine","message":"best thing would be spawn a child and check its exit code :)","date":"2013-03-29T17:23:15.592Z","type":"message"}
{"nick":"trevnorris","message":"good idea. i'll break this test into it's own file","date":"2013-03-29T17:23:42.646Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: you'll also want to throw --expose-gc in with it and forcibly run the gc to try and make it fail","date":"2013-03-29T17:24:24.260Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: i was wondering how i'd get the gc exposed for testing. child process, duh...","date":"2013-03-29T17:25:09.632Z","type":"message"}
{"nick":"inolen","date":"2013-03-29T17:34:48.719Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: ah, it is documented. it just doesn't stand out very well.","date":"2013-03-29T17:35:49.648Z","type":"message"}
{"nick":"tjfontaine","message":"which the module thing?","date":"2013-03-29T17:36:09.262Z","type":"message"}
{"nick":"c4milo","date":"2013-03-29T17:37:11.805Z","type":"join"}
{"nick":"trevnorris","message":"how to attach directly to module.exports from cc","date":"2013-03-29T17:37:55.528Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-03-29T17:39:10.348Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-29T17:39:37.044Z","type":"quit"}
{"nick":"trevnorris","message":"oh, but doesn't seem to work from core. just from node modules.","date":"2013-03-29T17:39:43.120Z","type":"message"}
{"nick":"trevnorris","message":"at least, that's what it look like","date":"2013-03-29T17:40:00.421Z","type":"message"}
{"nick":"trevnorris","message":"ToObject is sort of useless. I just attached an external data array to a regex.","date":"2013-03-29T17:45:12.981Z","type":"message"}
{"nick":"tjfontaine","message":"that's cute","date":"2013-03-29T17:45:32.336Z","type":"message"}
{"nick":"tjfontaine","message":"maybe we can use that to use pcre for regex :P","date":"2013-03-29T17:45:48.505Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-03-29T17:46:35.332Z","type":"message"}
{"nick":"trevnorris","message":"ugh. ok. if I a user passes an array then the program will fatally error. guess that means I need to add yet another check.","date":"2013-03-29T17:51:52.897Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: well this Alloc isn't going to be \"public\" right? so let them be responsible for that, too many checks and I presume it will start to hurt your perf","date":"2013-03-29T17:53:24.094Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: yeah. i'm torn. it's freakishly efficient at just allocating external memory to an object w/o all the frills of a buffer.","date":"2013-03-29T17:54:24.577Z","type":"message"}
{"nick":"trevnorris","message":"and there have been times i'd have like that.","date":"2013-03-29T17:54:34.259Z","type":"message"}
{"nick":"tjfontaine","message":"but that's why it would be tucked away in _internal_alloc","date":"2013-03-29T17:55:06.578Z","type":"message"}
{"nick":"tjfontaine","message":"if someone wnats it they can be responsible for the consequences","date":"2013-03-29T17:55:17.023Z","type":"message"}
{"nick":"trevnorris","message":"ah. a sort of, hey it's here. but make sure you know what the crap you're doing, type of thing?","date":"2013-03-29T17:55:40.259Z","type":"message"}
{"nick":"tjfontaine","message":"ya","date":"2013-03-29T17:55:55.767Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: you are a saint. anyone else would have ripped his face off.","date":"2013-03-29T17:57:46.412Z","type":"message"}
{"nick":"tjfontaine","message":"well, I suspect he's approaching /dev/null land anyway","date":"2013-03-29T17:58:17.624Z","type":"message"}
{"nick":"trevnorris","message":"lol","date":"2013-03-29T17:58:32.505Z","type":"message"}
{"nick":"isaacs","message":"he's a good person.","date":"2013-03-29T17:58:34.213Z","type":"message"}
{"nick":"isaacs","message":"he works for linkedin, and believes that he's doing right by the node community, and his employer","date":"2013-03-29T17:58:53.328Z","type":"message"}
{"nick":"trevnorris","message":"that's cool","date":"2013-03-29T17:59:06.049Z","type":"message"}
{"nick":"isaacs","message":"it's more frustrating for him than for me, i suspect.","date":"2013-03-29T17:59:12.230Z","type":"message"}
{"nick":"tjfontaine","message":"sure, but his tactic recently hasn't been ideal for the community, at least as far as attitude is concerned","date":"2013-03-29T17:59:33.404Z","type":"message"}
{"nick":"isaacs","message":"yep.  i agree.  that's why i'm trying to guide in a different direction.","date":"2013-03-29T17:59:51.926Z","type":"message"}
{"nick":"isaacs","message":"it's tough, and i'm not very good at this, but that's life, i guess.","date":"2013-03-29T18:00:04.467Z","type":"message"}
{"nick":"trevnorris","message":"guess i'd just disagree with two ideas (that I think you've pointed out already)","date":"2013-03-29T18:00:16.818Z","type":"message"}
{"nick":"trevnorris","message":"returning an Error instead of throwing isn't js. that would really throw off the community.","date":"2013-03-29T18:00:43.928Z","type":"message"}
{"nick":"tjfontaine","message":"isaacs: pivoting back to addressing a specific concern was the right thing to do there--no doubt","date":"2013-03-29T18:00:46.429Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-29T18:01:37.357Z","type":"quit"}
{"nick":"isaacs","message":"i did have a long pointless unhelpful stupid frustration vent-fest that i wrote in vim and threw away.","date":"2013-03-29T18:01:53.927Z","type":"message"}
{"nick":"isaacs","message":":)","date":"2013-03-29T18:02:01.435Z","type":"message"}
{"nick":"tjfontaine","message":"haha, that usually makes you feel better","date":"2013-03-29T18:02:14.384Z","type":"message"}
{"nick":"loladiro","date":"2013-03-29T18:02:21.897Z","type":"join"}
{"nick":"tjfontaine","message":"also https://github.com/joyent/node/issues/3871#issuecomment-15652630 that seems interesting, is that valid isaacs?","date":"2013-03-29T18:02:24.992Z","type":"message"}
{"nick":"isaacs","message":"but when someone keeps coming back, i mean, i want to harness that enthusiasm if i can.","date":"2013-03-29T18:02:26.780Z","type":"message"}
{"nick":"bradleymeck","date":"2013-03-29T18:03:02.355Z","type":"join"}
{"nick":"isaacs","message":"tjfontaine: it's not a guaranteed-correct fix, no.","date":"2013-03-29T18:03:23.779Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: it's a \"works by accident\" fix.","date":"2013-03-29T18:03:29.573Z","type":"message"}
{"nick":"tjfontaine","message":"right ok, that's what it felt like","date":"2013-03-29T18:03:48.197Z","type":"message"}
{"nick":"isaacs","message":"tjfontaine: what we need is synchronous stdio in windows.","date":"2013-03-29T18:03:48.476Z","type":"message"}
{"nick":"c4milo","date":"2013-03-29T18:03:57.384Z","type":"join"}
{"nick":"isaacs","message":"if you did an abort() or something, for example, you'd lose output","date":"2013-03-29T18:03:58.524Z","type":"message"}
{"nick":"isaacs","message":"we need the process to block while doing stdio","date":"2013-03-29T18:04:05.715Z","type":"message"}
{"nick":"tjfontaine","message":"nod","date":"2013-03-29T18:04:31.981Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: your 2 cents. the new allocator could be made community ready with minimal perf hit. want that, or keep it internal?","date":"2013-03-29T18:05:09.949Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: i almost always recommend innovations be done in userland first.","date":"2013-03-29T18:05:33.745Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: if that's your question.","date":"2013-03-29T18:05:38.541Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: if you can play around with a npm module that provides some fast-buffer-allocation stuff, and let people play around with it, i mean, that's awesome.","date":"2013-03-29T18:05:58.250Z","type":"message"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-03-29T18:06:35.494Z","type":"quit"}
{"nick":"brson","date":"2013-03-29T18:08:05.143Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: how did you do that w/ streams2? i'm not sure how to do that while testing if it'd working doing things like replacing the SlabAllocator.","date":"2013-03-29T18:11:47.904Z","type":"message"}
{"nick":"trevnorris","message":"(i swear. you'd never know english is my language by the way I type)","date":"2013-03-29T18:12:21.132Z","type":"message"}
{"nick":"tjfontaine","message":"heh","date":"2013-03-29T18:12:35.585Z","type":"message"}
{"nick":"loladiro","date":"2013-03-29T18:13:53.918Z","type":"join"}
{"nick":"mikeal","date":"2013-03-29T18:15:19.670Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 258 seconds","date":"2013-03-29T18:15:52.931Z","type":"quit"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-03-29T18:16:01.337Z","type":"quit"}
{"nick":"isaacs","message":"trevnorris: hah, well, yeah, it's tricky, especially for something core like this.","date":"2013-03-29T18:21:48.040Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: in practice, i had the readable-stream module, but also a streams2 branch where i was doing the real work.","date":"2013-03-29T18:22:04.575Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: that makes sense. think i'll keep doing it that way as well.","date":"2013-03-29T18:22:35.346Z","type":"message"}
{"nick":"tjfontaine","message":"will monkeypatch'ing over [Slow]Buffer be enough to see the difference in the benchmarks?","date":"2013-03-29T18:23:15.137Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2013-03-29T18:25:10.206Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: by monkeypatch'ing do you mean a dirty/quick implementation?","date":"2013-03-29T18:25:24.209Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: I'm just trying to think of how far you can get from a user module implementation","date":"2013-03-29T18:25:54.278Z","type":"message"}
{"nick":"trevnorris","message":"i'd have to overwrite the entire Buffer class w/ my own implementation.","date":"2013-03-29T18:26:19.621Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: of course, right, it's hard to do in this case without making deep global changes.","date":"2013-03-29T18:26:44.615Z","type":"message"}
{"nick":"trevnorris","message":"like, it'd be trivial to create a module w/ the allocator. but you couldn't see any effect in node core.","date":"2013-03-29T18:26:58.655Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: streams are higher level, so you cna just use the code, withotu touching the guts too much","date":"2013-03-29T18:27:05.493Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: maybe it could return a Buffer function, and you can do global.Buffer = require('trevors-super-buffer') if you really want","date":"2013-03-29T18:27:39.748Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: had that idea, and just might still for user-land, but still wouldn't show any improvements on net/tls/etc.","date":"2013-03-29T18:28:21.065Z","type":"message"}
{"nick":"trevnorris","message":"the only thing below Buffer is ObjectWrap. everything else is built on top of those.","date":"2013-03-29T18:28:54.423Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-03-29T18:31:05.367Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: what's sort of sad is that took me just short of 3 weeks to figure it out. and boiled down to around 55 lines of code.","date":"2013-03-29T18:35:40.370Z","type":"message"}
{"nick":"tjfontaine","message":"that's good :)","date":"2013-03-29T18:36:47.725Z","type":"message"}
{"nick":"tjfontaine","message":"consider how much more you know about node, v8, and c++ -- and when less code results in wins everyone wins :)","date":"2013-03-29T18:37:35.340Z","type":"message"}
{"nick":"isaacs","message":"off to practice.  going to dig into this IIS FIN/EOF issue after.","date":"2013-03-29T18:39:55.746Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: here's what it all boiled down to: http://git.io/oELKiw","date":"2013-03-29T18:42:11.064Z","type":"message"}
{"nick":"trevnorris","message":"what I finall figured out (last night around 3am) was that persisting an object is cheap, if the object existed beforehand and no other properties need to be set.","date":"2013-03-29T18:43:01.660Z","type":"message"}
{"nick":"trevnorris","message":"so i'm actually creating a persistent for every allocation, and what's funny is it's faster than the current Buffer.","date":"2013-03-29T18:43:32.154Z","type":"message"}
{"nick":"trevnorris","message":"also this will remove the SlabAllocator memory leak","date":"2013-03-29T18:43:50.469Z","type":"message"}
{"nick":"tjfontaine","message":"that doesn't necessarily remove the .parent leak though","date":"2013-03-29T18:44:52.100Z","type":"message"}
{"nick":"trevnorris","message":"there is no more .parent","date":"2013-03-29T18:45:00.403Z","type":"message"}
{"nick":"tjfontaine","message":"what do you get when you slice?","date":"2013-03-29T18:45:09.008Z","type":"message"}
{"nick":"tjfontaine","message":"oh right","date":"2013-03-29T18:45:16.719Z","type":"message"}
{"nick":"tjfontaine","message":"ok","date":"2013-03-29T18:45:17.355Z","type":"message"}
{"nick":"loladiro","date":"2013-03-29T18:45:20.001Z","type":"join"}
{"nick":"trevnorris","message":"yeah. you only can have that problem if the user slices an already allocated buffer.","date":"2013-03-29T18:45:36.036Z","type":"message"}
{"nick":"trevnorris","message":"but if we're creating pointers to memory, then not much we can do about that.","date":"2013-03-29T18:45:47.432Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: this is faster for thousands buffer creations than the slab backed version?","date":"2013-03-29T18:45:56.839Z","type":"message"}
{"nick":"tjfontaine","message":"*tiny","date":"2013-03-29T18:46:02.096Z","type":"message"}
{"nick":"trevnorris","message":"interestingly, yes.","date":"2013-03-29T18:46:10.915Z","type":"message"}
{"nick":"tjfontaine","message":"hmm","date":"2013-03-29T18:46:18.053Z","type":"message"}
{"nick":"trevnorris","message":"it's only a little slower for very small buffers (e.g. < 256 bytes), but at most ~10%","date":"2013-03-29T18:48:33.288Z","type":"message"}
{"nick":"tjfontaine","message":"ya, that's what I was expecting to hear","date":"2013-03-29T18:48:55.598Z","type":"message"}
{"nick":"trevnorris","message":"but it's 4x's faster for buffer allocations over 1024 * 4 bytes.","date":"2013-03-29T18:49:24.116Z","type":"message"}
{"nick":"tjfontaine","message":"are 4k buffers a common allocation?","date":"2013-03-29T18:49:41.864Z","type":"message"}
{"nick":"trevnorris","message":"no idea. was just collecting data from a spectrum of ranges.","date":"2013-03-29T18:50:11.571Z","type":"message"}
{"nick":"tjfontaine","message":"it would be interesting to run a dtrace histogram for buffer allocs to see what the common allocs are","date":"2013-03-29T18:50:23.652Z","type":"message"}
{"nick":"trevnorris","message":"but one place this will help is in tls. since those only allocate from cc, which are always SlowBuffers","date":"2013-03-29T18:50:36.474Z","type":"message"}
{"nick":"tjfontaine","message":"I can probably gather that information","date":"2013-03-29T18:50:47.098Z","type":"message"}
{"nick":"trevnorris","message":"that would be awesome.","date":"2013-03-29T18:50:53.533Z","type":"message"}
{"nick":"trevnorris","message":"i've never used dtrace before.","date":"2013-03-29T18:50:57.669Z","type":"message"}
{"nick":"tjfontaine","message":"it's awesome.","date":"2013-03-29T18:51:03.426Z","type":"message"}
{"nick":"tjfontaine","message":"I mean, I guess those sizes should be known from the benchmarks, perhaps it would only be interesting data gathered from a production environment","date":"2013-03-29T18:52:44.783Z","type":"message"}
{"nick":"tjfontaine","message":"anyway I'll do it anyway just for my own edification","date":"2013-03-29T18:53:05.217Z","type":"message"}
{"nick":"indutny","message":"I'm back","date":"2013-03-29T18:54:39.902Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-03-29T18:55:58.414Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-29T19:13:47.950Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-29T19:18:31.467Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 252 seconds","date":"2013-03-29T19:19:45.248Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-29T19:25:48.815Z","type":"join"}
{"nick":"mikeal","message":"do any bad things happen if i do","date":"2013-03-29T19:30:42.761Z","type":"message"}
{"nick":"mikeal","message":"var x = net.connect(port, host)","date":"2013-03-29T19:30:51.344Z","type":"message"}
{"nick":"mikeal","message":"x.write(chunk)","date":"2013-03-29T19:30:54.703Z","type":"message"}
{"nick":"mikeal","message":"before waiting on the \"connect\" event?","date":"2013-03-29T19:31:00.654Z","type":"message"}
{"nick":"mikeal","message":"in 0.10","date":"2013-03-29T19:31:08.950Z","type":"message"}
{"nick":"indutny","message":"mikeal: I presume no","date":"2013-03-29T19:32:11.051Z","type":"message"}
{"nick":"mikeal","message":"k","date":"2013-03-29T19:32:24.233Z","type":"message"}
{"nick":"indutny","message":"it'll buffer them","date":"2013-03-29T19:32:35.063Z","type":"message"}
{"nick":"mikeal","message":"i'm writing an 0.10 http proxy ","date":"2013-03-29T19:32:41.098Z","type":"message"}
{"nick":"mikeal","message":"that doesn't decode http","date":"2013-03-29T19:32:44.751Z","type":"message"}
{"nick":"indutny","message":"kewl :)","date":"2013-03-29T19:32:46.665Z","type":"message"}
{"nick":"indutny","message":"oh, interesting","date":"2013-03-29T19:32:51.295Z","type":"message"}
{"nick":"mikeal","message":"like at all, it just matches caseless 'Host: '","date":"2013-03-29T19:32:56.610Z","type":"message"}
{"nick":"mikeal","message":"with a limit on how much it'll buffer in order to do so","date":"2013-03-29T19:33:07.182Z","type":"message"}
{"nick":"paddybyers","reason":"Ping timeout: 246 seconds","date":"2013-03-29T19:33:29.028Z","type":"quit"}
{"nick":"mikeal","message":"and then you provide a function that tells me what to forward it to ","date":"2013-03-29T19:33:32.150Z","type":"message"}
{"nick":"mikeal","message":"so it's pure tcp","date":"2013-03-29T19:33:35.447Z","type":"message"}
{"nick":"mikeal","message":"should be plenty fast","date":"2013-03-29T19:33:48.639Z","type":"message"}
{"nick":"indutny","message":"nice!","date":"2013-03-29T19:33:52.437Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 240 seconds","date":"2013-03-29T19:33:53.598Z","type":"quit"}
{"nick":"mikeal","message":"i'm not even optimizing the buffering and matching","date":"2013-03-29T19:34:12.258Z","type":"message"}
{"nick":"mikeal","message":"i can do that later","date":"2013-03-29T19:34:16.164Z","type":"message"}
{"nick":"mikeal","message":"not parsing anything is a big enough performance gain","date":"2013-03-29T19:34:28.739Z","type":"message"}
{"nick":"indutny","message":"looking forward to see it","date":"2013-03-29T19:35:16.021Z","type":"message"}
{"nick":"glipson","date":"2013-03-29T19:36:02.452Z","type":"join"}
{"nick":"glipson","reason":"Client Quit","date":"2013-03-29T19:37:03.705Z","type":"quit"}
{"nick":"CoverSlide","message":"kind of like bouncy?","date":"2013-03-29T19:47:31.254Z","type":"message"}
{"nick":"CoverSlide","message":"well i guess bouncy does parse some","date":"2013-03-29T19:47:46.533Z","type":"message"}
{"nick":"nsm_","date":"2013-03-29T20:09:39.528Z","type":"join"}
{"nick":"paddybyers","date":"2013-03-29T20:17:37.168Z","type":"join"}
{"nick":"AvianFlu","date":"2013-03-29T20:20:05.084Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: so will dtrace tell you what's called Buffer, an the size of the allocations?","date":"2013-03-29T20:26:51.500Z","type":"message"}
{"nick":"txdv_","message":"Hey guys, do you want to read an article where an idiot \"proves\" that .net is faster than node.js?","date":"2013-03-29T20:27:28.021Z","type":"message"}
{"nick":"indutny","message":"trevnorris: yes, it can","date":"2013-03-29T20:27:35.975Z","type":"message"}
{"nick":"indutny","message":"txdv_: I already read it","date":"2013-03-29T20:27:42.773Z","type":"message"}
{"nick":"trevnorris","message":"that's sick.","date":"2013-03-29T20:27:57.524Z","type":"message"}
{"nick":"indutny","message":"hardly believe sorting big amounts of numbers is what web server should usually do","date":"2013-03-29T20:28:06.168Z","type":"message"}
{"nick":"txdv_","message":"the reddit comments are so good - http://www.reddit.com/r/programming/comments/1b8lds/net_and_nodejs_performance_comparison/","date":"2013-03-29T20:28:15.094Z","type":"message"}
{"nick":"kazupon","date":"2013-03-29T20:30:47.320Z","type":"join"}
{"nick":"trevnorris","message":"i love those \"well mine is bigger than yours\" articles.","date":"2013-03-29T20:31:00.935Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: yes it can, if I put the probes in the right place","date":"2013-03-29T20:31:35.365Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 246 seconds","date":"2013-03-29T20:35:04.993Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-03-29T20:37:20.223Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 252 seconds","date":"2013-03-29T20:41:42.101Z","type":"quit"}
{"nick":"txdv_","message":"THEY ARE ALL WRONG","date":"2013-03-29T20:45:57.343Z","type":"message"}
{"nick":"LOUDBOT","message":"ALSO THEY GAVE ME A FREE TRUFFLE","date":"2013-03-29T20:45:57.734Z","type":"message"}
{"nick":"txdv_","message":"I NEED TO CONVINCE THEM THAT THEY ARE WRONG","date":"2013-03-29T20:46:03.136Z","type":"message"}
{"nick":"LOUDBOT","message":"WHAT THE FUCK DID YOU DO SIMON COPTER","date":"2013-03-29T20:46:03.478Z","type":"message"}
{"nick":"howdynihao","date":"2013-03-29T20:48:12.383Z","type":"join"}
{"nick":"howdynihao","message":"eventemitter is 'api frozen' 4, if i submit a PR that doesn't break anything thats ok yea?","date":"2013-03-29T20:49:09.926Z","type":"message"}
{"nick":"trevnorris","message":"howdynihao: nope. this has a matter of debate, but nope.","date":"2013-03-29T20:49:31.574Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-03-29T20:49:41.458Z","type":"quit"}
{"nick":"tjfontaine","message":"howdynihao: you want to add a method, or fix something?","date":"2013-03-29T20:49:54.646Z","type":"message"}
{"nick":"tjfontaine","message":"or add some other feature?","date":"2013-03-29T20:50:04.235Z","type":"message"}
{"nick":"`3E|AFK","reason":"Remote host closed the connection","date":"2013-03-29T20:50:11.842Z","type":"quit"}
{"nick":"howdynihao","message":"well 2 pr's one is to just refactor, optimize 'emit'","date":"2013-03-29T20:50:23.854Z","type":"message"}
{"nick":"howdynihao","message":"and another is a catch all event (yes i know its been discussed before) but the implementation would be so simple if the first PR went through","date":"2013-03-29T20:50:50.779Z","type":"message"}
{"nick":"tjfontaine","message":"that better come with excellent bechmarks and solid pre/post data, and not change behavior :)","date":"2013-03-29T20:50:50.992Z","type":"message"}
{"nick":"tjfontaine","message":"that one seems unlikely to go through","date":"2013-03-29T20:51:15.570Z","type":"message"}
{"nick":"trevnorris","message":"howdynihao: you already have the pr's up?","date":"2013-03-29T20:51:40.505Z","type":"message"}
{"nick":"howdynihao","message":"no, i wanted to get some feedback before committing the time","date":"2013-03-29T20:51:55.886Z","type":"message"}
{"nick":"tjfontaine","message":"making emit faster is always a good idea, so long as you can prove it doesn't adversely affect anyone","date":"2013-03-29T20:52:29.296Z","type":"message"}
{"nick":"howdynihao","message":"it doesnt appear to be any benchmarks setup for EE so i guess i'll have to get that done for the first PR to go through?","date":"2013-03-29T20:53:13.535Z","type":"message"}
{"nick":"tjfontaine","message":"howdynihao: if you search the issues there are people who have tried similar things, and those issues have the relevant data","date":"2013-03-29T20:53:48.857Z","type":"message"}
{"nick":"trevnorris","message":"howdynihao: because event emitter is really hot code, the performance impact will show up in almost all tests that require streams.","date":"2013-03-29T20:54:10.706Z","type":"message"}
{"nick":"trevnorris","message":"howdynihao: also \"git show 75305f3..d1b4dcd\"","date":"2013-03-29T20:55:25.335Z","type":"message"}
{"nick":"trevnorris","message":"i spent almost 2 weeks doing the same.","date":"2013-03-29T20:55:37.178Z","type":"message"}
{"nick":"qmx|away","new_nick":"qmx","date":"2013-03-29T20:55:39.254Z","type":"nick"}
{"nick":"trevnorris","message":"howdynihao: don't let me discourage you from trying. at the least you'll get to know node internals much better.","date":"2013-03-29T20:57:16.834Z","type":"message"}
{"nick":"tjfontaine","message":"yes, and there's always the chance that your idea is a good one","date":"2013-03-29T20:57:34.533Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: i swear. as soon as v1 is released i'm going back and ripping out every last line of legacy crap.","date":"2013-03-29T20:58:22.695Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: https://gist.github.com/tjfontaine/5273607 most of those numbers are expected considering what I was using to generate the histogram","date":"2013-03-29T20:58:37.172Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: that's with the probe right before makeFastBuffer, so not entirely a full view of things","date":"2013-03-29T20:59:04.723Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: and yes well you mean in the v2 branch not necessarily in 1.1 :)","date":"2013-03-29T20:59:26.040Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: allow me to give you a big virtual hug. =)","date":"2013-03-29T20:59:45.568Z","type":"message"}
{"nick":"trevnorris","message":"those histograms are awesome.","date":"2013-03-29T20:59:50.101Z","type":"message"}
{"nick":"tjfontaine","message":"sudo dtrace -n \"node*::buffer-alloc { @allocs = quantize(arg0); }\" -c \"./node benchmark/common net\"","date":"2013-03-29T21:00:07.312Z","type":"message"}
{"nick":"trevnorris","message":"but what the crap is allocating so many 1 byte buffers?","date":"2013-03-29T21:00:11.473Z","type":"message"}
{"nick":"tjfontaine","message":"net/dgram.js len=1 num=100 type=send dur=5: 0.00069884","date":"2013-03-29T21:00:30.934Z","type":"message"}
{"nick":"tjfontaine","message":"net/dgram.js len=1 num=100 type=recv dur=5: 0.00022959","date":"2013-03-29T21:00:31.431Z","type":"message"}
{"nick":"tjfontaine","message":"probably","date":"2013-03-29T21:00:33.159Z","type":"message"}
{"nick":"trevnorris","message":"ah. ok","date":"2013-03-29T21:00:41.557Z","type":"message"}
{"nick":"trevnorris","message":"yeah. those really suck.","date":"2013-03-29T21:00:49.631Z","type":"message"}
{"nick":"tjfontaine","message":"so which Buffer::New is interesting, or is it more interesting to grab from Buffer::Replace","date":"2013-03-29T21:01:57.590Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: everything goes through Buffer::Replace, including slices.","date":"2013-03-29T21:02:20.839Z","type":"message"}
{"nick":"trevnorris","message":"took me half a day to figure out how that thing worked.","date":"2013-03-29T21:02:42.208Z","type":"message"}
{"nick":"trevnorris","message":"just benchmarked the 65536 byte case. smalloc is 2.6 times faster.","date":"2013-03-29T21:03:25.214Z","type":"message"}
{"nick":"tjfontaine","message":"ya I'm just trying to decide if I can easily add anything that does a new buffer from c++ without duplicating a call from js land","date":"2013-03-29T21:03:26.464Z","type":"message"}
{"nick":"trevnorris","message":"like add any new probes, or add new code for testing?","date":"2013-03-29T21:04:27.706Z","type":"message"}
{"nick":"trevnorris","message":"yeah. and I meant for the v2 branch. =P","date":"2013-03-29T21:05:09.160Z","type":"message"}
{"nick":"tjfontaine","message":"well I was wondering if it's only interesting to see the buffers from js, or if there was something interesting to be seen from C++","date":"2013-03-29T21:05:10.038Z","type":"message"}
{"nick":"trevnorris","message":"all buffer calls go through MakeFastBuffer","date":"2013-03-29T21:05:24.839Z","type":"message"}
{"nick":"trevnorris","message":"so if you track there then you'll see all allocations.","date":"2013-03-29T21:05:35.267Z","type":"message"}
{"nick":"howdynihao","reason":"Remote host closed the connection","date":"2013-03-29T21:05:50.874Z","type":"quit"}
{"nick":"trevnorris","message":"(unless it's calling a SlowBuffer, in which case performance is really going to suck anyways)","date":"2013-03-29T21:06:05.885Z","type":"message"}
{"nick":"tjfontaine","message":"well that's kinda what I want to know :)","date":"2013-03-29T21:06:20.116Z","type":"message"}
{"nick":"tjfontaine","message":"though I suppose none of the benchmarks should do that","date":"2013-03-29T21:06:42.542Z","type":"message"}
{"nick":"trevnorris","message":"well. hash digests do.","date":"2013-03-29T21:06:55.474Z","type":"message"}
{"nick":"trevnorris","message":"anything that calls Encode from node.cc will","date":"2013-03-29T21:07:12.130Z","type":"message"}
{"nick":"trevnorris","message":"but that's only crypto stuff.","date":"2013-03-29T21:07:36.224Z","type":"message"}
{"nick":"tjfontaine","message":"so is there a single place in the node::Buffer that will track both js and c++ activity?","date":"2013-03-29T21:07:42.699Z","type":"message"}
{"nick":"tjfontaine","message":"replace certainly isn't called on a slice, right?","date":"2013-03-29T21:07:58.172Z","type":"message"}
{"nick":"tjfontaine","message":"not that slice matters","date":"2013-03-29T21:08:08.325Z","type":"message"}
{"nick":"trevnorris","message":"well. the problem is that it'll track slab allocations.","date":"2013-03-29T21:08:24.987Z","type":"message"}
{"nick":"trevnorris","message":"i mean. pools that buffers use.","date":"2013-03-29T21:08:36.171Z","type":"message"}
{"nick":"trevnorris","message":"that's why it's better to track from MakeFastBuffer, since that will show how much memory js actually wants to use.","date":"2013-03-29T21:08:56.249Z","type":"message"}
{"nick":"tjfontaine","message":"what's interesting at the moment is (regardless of what's backing them) what buffer sizes we're using","date":"2013-03-29T21:09:01.398Z","type":"message"}
{"nick":"tjfontaine","message":"ok fair point","date":"2013-03-29T21:09:14.694Z","type":"message"}
{"nick":"trevnorris","message":"can you track from a specific point within a function (e.g. an if statement)?","date":"2013-03-29T21:09:46.299Z","type":"message"}
{"nick":"tjfontaine","message":"yes","date":"2013-03-29T21:10:00.023Z","type":"message"}
{"nick":"trevnorris","message":"sweetness!!!","date":"2013-03-29T21:10:06.416Z","type":"message"}
{"nick":"tjfontaine","message":"well, all about where I want to put my probe","date":"2013-03-29T21:10:15.336Z","type":"message"}
{"nick":"tjfontaine","message":"or make more probes or whatever","date":"2013-03-29T21:10:28.244Z","type":"message"}
{"nick":"trevnorris","message":"ok. so track MakeFastBuffer, then also track where memory is being allocated in Buffer::Replace","date":"2013-03-29T21:10:31.674Z","type":"message"}
{"nick":"trevnorris","message":"then we can compare how much memory is actually being allocated, and how much memory js really wanted to use.","date":"2013-03-29T21:10:56.434Z","type":"message"}
{"nick":"trevnorris","message":"also, you'll want to track SlabAllocator::Allocate","date":"2013-03-29T21:11:20.032Z","type":"message"}
{"nick":"tjfontaine","message":"you want the replace to be accounted separately from the js allocs?","date":"2013-03-29T21:11:35.078Z","type":"message"}
{"nick":"trevnorris","message":"since that's used as a backing for a lot of network operations.","date":"2013-03-29T21:11:37.373Z","type":"message"}
{"nick":"trevnorris","message":"yeah. if we have two tests. one showing how much memory was actually used, and another showing how much memory js was asking for, we can see the play with current slab allocations, etc.","date":"2013-03-29T21:12:32.172Z","type":"message"}
{"nick":"tjfontaine","message":"I think I can probe slab allocations now without any new probes","date":"2013-03-29T21:12:38.729Z","type":"message"}
{"nick":"trevnorris","message":"dude. this is freaking awesome. dtrace only works on sunos right?","date":"2013-03-29T21:13:04.896Z","type":"message"}
{"nick":"tjfontaine","message":"no, it works on osx, freebsd, and an incomplete linux one as well","date":"2013-03-29T21:13:47.098Z","type":"message"}
{"nick":"trevnorris","message":"heh. not often I hear of a development/debugging tool that I wish worked better on linux.","date":"2013-03-29T21:14:27.583Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: then you need to spend sometime looking at the sunos debugging features, and you'll ask why you bothered with linux :)","date":"2013-03-29T21:15:14.223Z","type":"message"}
{"nick":"trevnorris","message":"heh","date":"2013-03-29T21:15:23.812Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-29T21:19:35.123Z","type":"quit"}
{"nick":"tjfontaine","message":"ah this is kinda interesting data","date":"2013-03-29T21:20:44.746Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: https://gist.github.com/tjfontaine/5273607 updated","date":"2013-03-29T21:21:37.810Z","type":"message"}
{"nick":"trevnorris","message":"interesting.","date":"2013-03-29T21:23:01.674Z","type":"message"}
{"nick":"trevnorris","message":"Yeah. I think the latter shows all the SlabAllocator segments.","date":"2013-03-29T21:23:20.097Z","type":"message"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-03-29T21:23:23.782Z","type":"quit"}
{"nick":"tjfontaine","message":"well, everything too big to go into the pool, and including the 52 pools that were made","date":"2013-03-29T21:23:53.191Z","type":"message"}
{"nick":"trevnorris","message":"what do you mean?","date":"2013-03-29T21:24:18.938Z","type":"message"}
{"nick":"tjfontaine","message":"8192, that's the buffer pools right?","date":"2013-03-29T21:24:31.054Z","type":"message"}
{"nick":"trevnorris","message":"yeah.","date":"2013-03-29T21:24:37.297Z","type":"message"}
{"nick":"benoitc","date":"2013-03-29T21:24:47.308Z","type":"join"}
{"nick":"tjfontaine","message":"and things larger than that get allocated on their own?","date":"2013-03-29T21:24:52.807Z","type":"message"}
{"nick":"trevnorris","message":"but after that memory is allocated at the exact size it's needed.","date":"2013-03-29T21:25:01.846Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2013-03-29T21:25:03.045Z","type":"message"}
{"nick":"trevnorris","message":"check out src/slab_allocator.h","date":"2013-03-29T21:25:21.797Z","type":"message"}
{"nick":"tjfontaine","message":"right","date":"2013-03-29T21:25:24.997Z","type":"message"}
{"nick":"trevnorris","message":"node streamwrap doesn't use buffers directly. it uses the slab allocator.","date":"2013-03-29T21:25:49.064Z","type":"message"}
{"nick":"tjfontaine","message":"which is why you'll only see 6 65536","date":"2013-03-29T21:26:55.707Z","type":"message"}
{"nick":"trevnorris","message":"yeah. that's the the Buffer pool replenishing after depletion.","date":"2013-03-29T21:27:22.049Z","type":"message"}
{"nick":"trevnorris","message":"but those are only used for misc things.","date":"2013-03-29T21:27:29.410Z","type":"message"}
{"nick":"tjfontaine","message":"having the consolidation will let us reuse more, though you may not notice as much since v8 is most of our overhead in making things weak","date":"2013-03-29T21:28:32.638Z","type":"message"}
{"nick":"tjfontaine","message":"anyway","date":"2013-03-29T21:28:38.951Z","type":"message"}
{"nick":"tjfontaine","message":"this data is mostly pointless","date":"2013-03-29T21:28:42.443Z","type":"message"}
{"nick":"tjfontaine","message":"because it was observing the benchmarks","date":"2013-03-29T21:28:50.087Z","type":"message"}
{"nick":"trevnorris","message":"there's a strange thing though. if you persist and make weak an existing object (not on a new one) and don't set any properties, it becomes fast.","date":"2013-03-29T21:29:42.530Z","type":"message"}
{"nick":"trevnorris","message":"check out how I did it here: http://git.io/99vRwg","date":"2013-03-29T21:30:36.727Z","type":"message"}
{"nick":"trevnorris","message":"this method out performs buffer pools for all allocations larger than 256 bytes.","date":"2013-03-29T21:31:11.070Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-29T21:31:21.160Z","type":"quit"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-03-29T21:31:22.744Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-29T21:31:24.756Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: and where in the perf is it slower for 256? presuming at that point you're finally hitting malloc overhead?","date":"2013-03-29T21:31:56.907Z","type":"message"}
{"nick":"trevnorris","message":"that's just necessary evils. for example:","date":"2013-03-29T21:32:44.065Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: some mallocs are necessary, but this is also what a slab allocator is about solving","date":"2013-03-29T21:33:22.862Z","type":"message"}
{"nick":"trevnorris","message":"the biggest difference you'll see is a 1 byte allocation. Buffers can do it in about 266 ns. where Alloc does it in 290 ns","date":"2013-03-29T21:33:43.995Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: but see, once you have to hit the SlowBuffer performance goes to total crap.","date":"2013-03-29T21:34:27.913Z","type":"message"}
{"nick":"tjfontaine","message":"is the difference there the malloc, can't be the js-c boundary since makeFastBuffer calls into it","date":"2013-03-29T21:34:32.198Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: I'm not talking about slowbuffer performance","date":"2013-03-29T21:34:49.115Z","type":"message"}
{"nick":"trevnorris","message":"but you have to take that into account since every time a slab is used up it needs to re allocate another slab.","date":"2013-03-29T21:35:12.377Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: well block/heap arena style keep a free list of what's available, you rarely need to allocate a whole new heap unless it's completely used","date":"2013-03-29T21:36:10.757Z","type":"message"}
{"nick":"piscisaureus_","date":"2013-03-29T21:36:17.203Z","type":"join"}
{"nick":"trevnorris","message":"tjfontaine: your test shows that 149917 new slabs needed to be allocated.","date":"2013-03-29T21:36:40.229Z","type":"message"}
{"nick":"benoitc","date":"2013-03-29T21:37:17.348Z","type":"join"}
{"nick":"trevnorris","message":"see. here's the different. with pools you have to attach the persistent to the object so it knows it's alive.","date":"2013-03-29T21:37:29.202Z","type":"message"}
{"nick":"piscisaureus_","reason":"Client Quit","date":"2013-03-29T21:37:32.804Z","type":"quit"}
{"nick":"trevnorris","message":"which kills you in gc","date":"2013-03-29T21:37:33.223Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: the type of caching I'm talking about is something like _freelist.js","date":"2013-03-29T21:37:37.147Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-03-29T21:37:43.551Z","type":"quit"}
{"nick":"tjfontaine","message":"er where is it","date":"2013-03-29T21:37:53.211Z","type":"message"}
{"nick":"tjfontaine","message":"oh just freelist.js","date":"2013-03-29T21:38:02.900Z","type":"message"}
{"nick":"trevnorris","message":"the reason buffer pooling works is because the persistent is passed back to the Buffer as .parent.","date":"2013-03-29T21:38:46.055Z","type":"message"}
{"nick":"trevnorris","message":"but that causes a lot of gc overhead while it figures out if it's still being used.","date":"2013-03-29T21:38:58.769Z","type":"message"}
{"nick":"trevnorris","message":"when there are no attachments then it knows immediately when it's ready for cleanup.","date":"2013-03-29T21:39:16.098Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: what I'm trying to explain is that you've eliminated that model in your new way, but if < 256 is slow it's like malloc overhead, and the way to solve that is by caching those allocs","date":"2013-03-29T21:39:29.799Z","type":"message"}
{"nick":"trevnorris","message":"for how much v8 has to do, the malloc is pretty much a noop.","date":"2013-03-29T21:40:09.661Z","type":"message"}
{"nick":"tjfontaine","message":"which is why I asked if you checked the perf to see what the difference was for < 256","date":"2013-03-29T21:40:34.439Z","type":"message"}
{"nick":"tjfontaine","message":"and if it was malloc there was a solution for that","date":"2013-03-29T21:40:50.369Z","type":"message"}
{"nick":"trevnorris","message":"yeah. instead of typing it out. let me just post it. one sec.","date":"2013-03-29T21:41:02.172Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: here's the output for 1 byte allocations: https://gist.github.com/trevnorris/5273872","date":"2013-03-29T21:43:06.857Z","type":"message"}
{"nick":"trevnorris","message":"everything over 1% is listed","date":"2013-03-29T21:43:11.877Z","type":"message"}
{"nick":"tjfontaine","message":"so who's responsible for the malloc's showing there, mostly you or generic v8 allocs?","date":"2013-03-29T21:46:52.475Z","type":"message"}
{"nick":"trevnorris","message":"those are mine.","date":"2013-03-29T21:47:34.984Z","type":"message"}
{"nick":"tjfontaine","message":"so for 1byte allocs, it seems like malloc is more than a noop?","date":"2013-03-29T21:47:56.423Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-29T21:48:53.789Z","type":"quit"}
{"nick":"trevnorris","message":"unless _int_malloc is also a malloc, then malloc's only count for 5% of the time, right?","date":"2013-03-29T21:49:30.677Z","type":"message"}
{"nick":"c4milo","date":"2013-03-29T21:50:59.270Z","type":"join"}
{"nick":"tjfontaine","message":"it's difficult without seeing callstacks that go along with it, but it would seem like _int_malloc is called from malloc","date":"2013-03-29T21:51:09.783Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: also, those results are with all the API checks in place.","date":"2013-03-29T21:51:49.700Z","type":"message"}
{"nick":"trevnorris","message":"if I remove all those checks then Alloc is 10% faster at 1 byte allocs.","date":"2013-03-29T21:52:07.051Z","type":"message"}
{"nick":"trevnorris","message":"so for a basis. it takes ~54 ns just to enter and return from cc.","date":"2013-03-29T21:54:37.861Z","type":"message"}
{"nick":"tjfontaine","message":"right","date":"2013-03-29T21:55:14.105Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: you think you could get counts from SlabAllocator::Shrink?","date":"2013-03-29T22:02:50.794Z","type":"message"}
{"nick":"trevnorris","message":"and can you run that against the http benchmark?","date":"2013-03-29T22:03:17.859Z","type":"message"}
{"nick":"benoitc","reason":"Excess Flood","date":"2013-03-29T22:03:49.111Z","type":"quit"}
{"nick":"benoitc","date":"2013-03-29T22:07:17.430Z","type":"join"}
{"nick":"nsm_","new_nick":"nsm","date":"2013-03-29T22:22:26.588Z","type":"nick"}
{"nick":"kazupon","date":"2013-03-29T22:33:59.363Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: sure","date":"2013-03-29T22:34:35.726Z","type":"message"}
{"nick":"trevnorris","message":"awesome. thanks.","date":"2013-03-29T22:34:45.761Z","type":"message"}
{"nick":"trevnorris","message":"does anyone in here know what \"Buffer::New(Handle<String> string)\" is for?","date":"2013-03-29T22:36:31.082Z","type":"message"}
{"nick":"trevnorris","message":"it's not used in core anywhere, but has the comment \"C++ API for constructing fast buffer\"","date":"2013-03-29T22:36:51.778Z","type":"message"}
{"nick":"kazupon","reason":"Ping timeout: 256 seconds","date":"2013-03-29T22:38:41.534Z","type":"quit"}
{"nick":"nsm","message":"trevnorris: its creating a Buffer and setting the contents to the string","date":"2013-03-29T22:38:44.567Z","type":"message"}
{"nick":"trevnorris","message":"nsm: get that from the code. what i'm wondering is why it's there","date":"2013-03-29T22:39:06.626Z","type":"message"}
{"nick":"trevnorris","message":"it's doing it in the most horrible way possible.","date":"2013-03-29T22:39:28.957Z","type":"message"}
{"nick":"trevnorris","message":"it's getting the Buffer function from js, not caching it in a Persistent mind you, then calling it and passing the string.","date":"2013-03-29T22:40:12.863Z","type":"message"}
{"nick":"trevnorris","message":"which then calls .write(), and jumps back into cc to write the string","date":"2013-03-29T22:40:30.063Z","type":"message"}
{"nick":"trevnorris","message":"and it has nothing to do with the comment of \"for constructing a fast buffer\". that's why MakeFastBuffer exists.","date":"2013-03-29T22:41:14.956Z","type":"message"}
{"nick":"nsm","message":"haha, yea i don't know","date":"2013-03-29T22:41:23.618Z","type":"message"}
{"nick":"tjfontaine","message":"I bet this was used at one point in crypto when it was string based","date":"2013-03-29T22:42:36.758Z","type":"message"}
{"nick":"trevnorris","message":"that makes sense. well, it's not documented, unused. i say it goes!","date":"2013-03-29T22:44:00.052Z","type":"message"}
{"nick":"toothr","new_nick":"toothrot","date":"2013-03-29T22:44:17.057Z","type":"nick"}
{"nick":"bnoordhuis","date":"2013-03-29T22:44:42.610Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris: https://gist.github.com/tjfontaine/5273607","date":"2013-03-29T22:46:35.620Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: thanks. that very interesting.","date":"2013-03-29T22:47:25.488Z","type":"message"}
{"nick":"trevnorris","message":"i can't figure out why Buffer::Replace is working over so many 65536","date":"2013-03-29T22:47:53.762Z","type":"message"}
{"nick":"trevnorris","message":"that's SlowBuffer territory.","date":"2013-03-29T22:48:23.043Z","type":"message"}
{"nick":"trevnorris","message":"hm. that must be from the benchmark size, huh?","date":"2013-03-29T22:48:47.126Z","type":"message"}
{"nick":"tjfontaine","message":"I could move over to smartos and find out the jstack","date":"2013-03-29T22:48:47.337Z","type":"message"}
{"nick":"tjfontaine","message":"ya its' benchmark though","date":"2013-03-29T22:48:54.784Z","type":"message"}
{"nick":"trevnorris","message":"and I wonder what all the 32 bit Shrinks are from.","date":"2013-03-29T22:49:48.958Z","type":"message"}
{"nick":"trevnorris","message":"that isn't something I expected.","date":"2013-03-29T22:49:57.078Z","type":"message"}
{"nick":"trevnorris","message":"will jstack tell me how we're arriving at Shrink?","date":"2013-03-29T22:50:42.133Z","type":"message"}
{"nick":"tjfontaine","message":"yup","date":"2013-03-29T22:50:56.609Z","type":"message"}
{"nick":"tjfontaine","message":"both C and JS stack","date":"2013-03-29T22:51:02.759Z","type":"message"}
{"nick":"trevnorris","message":"that is freakin sweet","date":"2013-03-29T22:51:40.291Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-03-29T23:08:19.703Z","type":"nick"}
{"nick":"trevnorris","message":"tjfontaine: thanks for all the benchmark info. will be super helpful. have to jam, but if you have anything else just throw it up and I'll see it on the logs.","date":"2013-03-29T23:11:45.609Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-03-29T23:11:45.818Z","type":"quit"}
{"nick":"trevnorris","reason":"Quit: Leaving","date":"2013-03-29T23:11:47.773Z","type":"quit"}
{"nick":"c4milo","date":"2013-03-29T23:12:11.558Z","type":"join"}
{"nick":"tjfontaine","message":"trevnorris, we will convince you to not rely on the logs instead lurk here :)","date":"2013-03-29T23:13:24.943Z","type":"message"}
{"nick":"c4milo","reason":"Ping timeout: 252 seconds","date":"2013-03-29T23:16:48.121Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2013-03-29T23:26:09.416Z","type":"quit"}
{"nick":"kazupon","date":"2013-03-29T23:34:35.470Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 252 seconds","date":"2013-03-29T23:39:21.098Z","type":"quit"}
{"nick":"paddybyers","reason":"Ping timeout: 245 seconds","date":"2013-03-29T23:47:38.171Z","type":"quit"}
{"nick":"bnoordhuis","message":"i find it pleasing that most bugs in the tracker are either windows or streams2 related","date":"2013-03-29T23:48:14.147Z","type":"message"}
{"nick":"isaacs","message":"ahhh","date":"2013-03-29T23:48:25.496Z","type":"message"}
{"nick":"isaacs","message":"nice.","date":"2013-03-29T23:48:29.013Z","type":"message"}
{"nick":"isaacs","message":"figured out this TLS IIS bug.","date":"2013-03-29T23:48:38.142Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-29T23:48:51.072Z","type":"quit"}
{"nick":"isaacs","message":"it's because we used to do src.on('close', function() {dest.destroy()}) in stream.pipe()","date":"2013-03-29T23:48:52.513Z","type":"message"}
{"nick":"isaacs","message":"and now we don't.","date":"2013-03-29T23:48:55.494Z","type":"message"}
{"nick":"bnoordhuis","message":"do i hear 'streams2 bug'?","date":"2013-03-29T23:49:08.840Z","type":"message"}
{"nick":"mmalecki","message":"not that uncommon :)","date":"2013-03-29T23:50:09.692Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: well, no, you hear 'streams2 feature' ;P","date":"2013-03-29T23:50:33.799Z","type":"message"}
{"nick":"bnoordhuis","message":"hah :)","date":"2013-03-29T23:50:39.783Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: no, for real, many people complained a lot about this.","date":"2013-03-29T23:50:49.995Z","type":"message"}
{"nick":"isaacs","message":"bnoordhuis: but i suppose \"We did what you asked, and broke someone else's program\" is kind of how \"streams2 bug\" works","date":"2013-03-29T23:51:11.792Z","type":"message"}
{"nick":"isaacs","message":"most bugs, for that matter.","date":"2013-03-29T23:51:19.875Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah","date":"2013-03-29T23:51:25.264Z","type":"message"}
{"nick":"bnoordhuis","message":"it wasn't a criticism btw","date":"2013-03-29T23:51:29.443Z","type":"message"}
{"nick":"bnoordhuis","message":"it means that node is pretty stable by now","date":"2013-03-29T23:51:38.219Z","type":"message"}
{"nick":"isaacs","message":"true that.","date":"2013-03-29T23:51:44.132Z","type":"message"}
{"nick":"isaacs","message":"and, honestly, i'm shocked at how FEW bugs streams2 has caused.","date":"2013-03-29T23:51:53.029Z","type":"message"}
{"nick":"isaacs","message":"that leads me to believe people still aren't upgrading to 0.10","date":"2013-03-29T23:51:59.783Z","type":"message"}
{"nick":"bnoordhuis","message":"hah, probably :)","date":"2013-03-29T23:52:09.096Z","type":"message"}
{"nick":"isaacs","message":"the only refactors i've ever seen in node that were this massive were moving to uv in 0.6, and ripping out promises in 0.1","date":"2013-03-29T23:53:01.260Z","type":"message"}
{"nick":"isaacs","message":"and both basically broke everything","date":"2013-03-29T23:53:05.176Z","type":"message"}
{"nick":"isaacs","message":"uv was less breaking, obviously","date":"2013-03-29T23:53:19.195Z","type":"message"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Trevor Norris\u000f \u00037master\u000f * \u00022093e7d\u0002 : lint: add isolate, remove semicolon - http://git.io/wUswyg","date":"2013-03-29T23:54:25.122Z","type":"message"}
{"nick":"isaacs","message":"this IIS thing is kind of a weird case.","date":"2013-03-29T23:57:24.131Z","type":"message"}
{"nick":"isaacs","message":"i mean, you really *can't* reusing a TLS socket, can you?","date":"2013-03-29T23:57:31.855Z","type":"message"}
{"nick":"isaacs","message":"s/ing/e/","date":"2013-03-29T23:57:37.559Z","type":"message"}
{"nick":"bnoordhuis","message":"tjfontaine: you got dtrace to work reliably on os x?","date":"2013-03-29T23:57:46.152Z","type":"message"}
{"nick":"isaacs","action":"forgoting englishes","date":"2013-03-29T23:57:46.981Z","type":"action"}
{"nick":"bnoordhuis","message":"i'm looking at #5166 in case you're wondering","date":"2013-03-29T23:58:12.445Z","type":"message"}
{"nick":"tjfontaine","message":"oh that's the fd one right?","date":"2013-03-29T23:58:30.914Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, OS!=\"mac\"","date":"2013-03-29T23:58:34.363Z","type":"message"}
{"nick":"bnoordhuis","message":":sad panda:","date":"2013-03-29T23:58:37.123Z","type":"message"}
{"nick":"bnoordhuis","message":"yes","date":"2013-03-29T23:58:41.367Z","type":"message"}
{"nick":"tjfontaine","message":"5163","date":"2013-03-29T23:58:41.734Z","type":"message"}
{"nick":"tjfontaine","message":"is the real magic","date":"2013-03-29T23:58:54.303Z","type":"message"}
{"nick":"tjfontaine","message":"it does work on osx","date":"2013-03-29T23:58:57.550Z","type":"message"}
{"nick":"tjfontaine","message":"but you can't resolve structs","date":"2013-03-29T23:59:02.365Z","type":"message"}
{"nick":"tjfontaine","message":"so you have to pass them as arguments","date":"2013-03-29T23:59:09.553Z","type":"message"}
{"nick":"tjfontaine","message":"ustack helpers don't work on osx still, that's beyond my power","date":"2013-03-29T23:59:29.215Z","type":"message"}
{"nick":"bnoordhuis","message":"right. too bad","date":"2013-03-29T23:59:48.337Z","type":"message"}
