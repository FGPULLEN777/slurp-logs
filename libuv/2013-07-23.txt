{"nick":"tjfontaine","message":"done","date":"2013-07-23T17:33:04.256Z","type":"message"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-07-23T17:33:20.313Z","type":"quit"}
{"nick":"trevnorris","message":"thanks","date":"2013-07-23T17:34:39.738Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: anything interesting in the meeting?","date":"2013-07-23T17:34:52.902Z","type":"message"}
{"nick":"tjfontaine","message":"we didn't have one :)","date":"2013-07-23T17:36:22.067Z","type":"message"}
{"nick":"tjfontaine","message":"not really anyway","date":"2013-07-23T17:36:25.690Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 256 seconds","date":"2013-07-23T17:36:46.301Z","type":"quit"}
{"nick":"trevnorris","message":"heh ok","date":"2013-07-23T17:37:23.574Z","type":"message"}
{"nick":"tjfontaine","message":"just watched bert drink beer :)","date":"2013-07-23T17:37:41.102Z","type":"message"}
{"nick":"trevnorris","message":"haha","date":"2013-07-23T17:37:48.370Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-07-23T17:38:31.288Z","type":"quit"}
{"nick":"c4milo","date":"2013-07-23T17:46:59.342Z","type":"join"}
{"nick":"loladiro","date":"2013-07-23T17:53:43.284Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 245 seconds","date":"2013-07-23T17:53:53.258Z","type":"quit"}
{"nick":"hz","date":"2013-07-23T17:58:25.062Z","type":"quit"}
{"nick":"tjfontaine","message":"it's slightly amusing that NODE_MODULE_VERSION is in node.h and not node_version.h","date":"2013-07-23T18:03:02.022Z","type":"message"}
{"nick":"pachet","reason":"Ping timeout: 248 seconds","date":"2013-07-23T18:03:17.786Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 276 seconds","date":"2013-07-23T18:04:04.147Z","type":"quit"}
{"nick":"trevnorris","message":"anyone opposed to this? https://github.com/trevnorris/node/compare/panic-and-buffer-logic","date":"2013-07-23T18:06:06.233Z","type":"message"}
{"nick":"tjfontaine","message":"interesting, I wonder what the jit does when it knows you're ignoring the rval of native methods","date":"2013-07-23T18:07:44.376Z","type":"message"}
{"nick":"qmx","reason":"Ping timeout: 264 seconds","date":"2013-07-23T18:08:30.261Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: have a specific case?","date":"2013-07-23T18:09:17.120Z","type":"message"}
{"nick":"qmx","date":"2013-07-23T18:09:44.936Z","type":"join"}
{"nick":"tjfontaine","message":"well it's more academic, I'm fine with this change, in pure js the jit can do interesting things when it knows you're ignoring the return value, but doesn't have the same latitude for native","date":"2013-07-23T18:10:45.714Z","type":"message"}
{"nick":"trevnorris","message":"ok. i'm not returning from native anywhere.","date":"2013-07-23T18:11:37.622Z","type":"message"}
{"nick":"brson","date":"2013-07-23T18:12:21.130Z","type":"join"}
{"nick":"tjfontaine","message":"ya, it was just something that crossed my mind while reviewing :)","date":"2013-07-23T18:12:31.202Z","type":"message"}
{"nick":"qmx","reason":"Changing host","date":"2013-07-23T18:13:03.321Z","type":"quit"}
{"nick":"qmx","date":"2013-07-23T18:13:03.533Z","type":"join"}
{"nick":"qmx","reason":"Remote host closed the connection","date":"2013-07-23T18:13:20.180Z","type":"quit"}
{"nick":"trevnorris","message":"oh, cool. interesting thought. might create an IRHydra graph of two methods doing the same, but one returning from js and the other from native.","date":"2013-07-23T18:13:25.372Z","type":"message"}
{"nick":"trevnorris","message":"that would be interesting output to examine. never thought about it before.","date":"2013-07-23T18:13:34.328Z","type":"message"}
{"nick":"qmx","date":"2013-07-23T18:14:27.536Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-07-23T18:24:22.263Z","type":"quit"}
{"nick":"hueniverse","reason":"Quit: Leaving.","date":"2013-07-23T18:27:39.497Z","type":"quit"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-07-23T18:33:42.745Z","type":"quit"}
{"nick":"jmar777","date":"2013-07-23T18:34:15.945Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: thoughts on https://github.com/trevnorris/node/compare/panic-and-buffer-logic","date":"2013-07-23T18:34:50.129Z","type":"message"}
{"nick":"indutny","message":"hoya","date":"2013-07-23T18:34:59.424Z","type":"message"}
{"nick":"indutny","message":"isaacs: wanna land those guys https://github.com/joyent/node/pull/5883 and https://github.com/joyent/node/pull/5882 ?","date":"2013-07-23T18:35:26.569Z","type":"message"}
{"nick":"tjfontaine","message":"line 2: 49708 Segmentation fault: 11  (core dumped) node \"`dirname \"$0\"`/../../node_modules/node-gyp/bin/node-gyp.js\" \"$@\"","date":"2013-07-23T18:36:00.583Z","type":"message"}
{"nick":"tjfontaine","message":":/","date":"2013-07-23T18:36:08.508Z","type":"message"}
{"nick":"indutny","message":"erm","date":"2013-07-23T18:36:56.117Z","type":"message"}
{"nick":"indutny","message":"no good","date":"2013-07-23T18:36:58.536Z","type":"message"}
{"nick":"indutny","message":":)","date":"2013-07-23T18:36:59.596Z","type":"message"}
{"nick":"tjfontaine","message":"https://gist.github.com/tjfontaine/6064949","date":"2013-07-23T18:37:11.487Z","type":"message"}
{"nick":"tjfontaine","message":"it's v0.8 HEAD","date":"2013-07-23T18:37:19.485Z","type":"message"}
{"nick":"tjfontaine","message":"it's done, why does it have to die on cleaning up :)","date":"2013-07-23T18:37:39.540Z","type":"message"}
{"nick":"jmar777","reason":"Ping timeout: 248 seconds","date":"2013-07-23T18:38:29.719Z","type":"quit"}
{"nick":"trevnorris","message":"what I want to know is wtf do they need <Value> after the long-ass FunctionCallbackInfo? that's the only thing you can pass.","date":"2013-07-23T18:38:30.856Z","type":"message"}
{"nick":"mikolalysenko","date":"2013-07-23T18:39:45.124Z","type":"join"}
{"nick":"kazupon","date":"2013-07-23T18:40:02.984Z","type":"join"}
{"nick":"trevnorris","message":"indutny: i'm not sure how expensive doing IsObject checks are, but you're doing 4 of them in SetTicketKeys","date":"2013-07-23T18:40:09.600Z","type":"message"}
{"nick":"indutny","message":"not expensive at all","date":"2013-07-23T18:40:32.150Z","type":"message"}
{"nick":"indutny","message":"its done only once","date":"2013-07-23T18:40:43.037Z","type":"message"}
{"nick":"trevnorris","message":"coolio","date":"2013-07-23T18:40:43.243Z","type":"message"}
{"nick":"trevnorris","message":"how do you mean?","date":"2013-07-23T18:40:55.357Z","type":"message"}
{"nick":"indutny","message":"ticket keys","date":"2013-07-23T18:41:02.227Z","type":"message"}
{"nick":"indutny","message":"is like a ssl cert","date":"2013-07-23T18:41:06.378Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok.","date":"2013-07-23T18:41:11.830Z","type":"message"}
{"nick":"indutny","message":"set only at server initialization","date":"2013-07-23T18:41:12.767Z","type":"message"}
{"nick":"loladiro","reason":"Quit: loladiro","date":"2013-07-23T18:41:34.129Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-07-23T18:42:56.985Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-07-23T18:44:33.800Z","type":"quit"}
{"nick":"loladiro","date":"2013-07-23T18:44:39.546Z","type":"join"}
{"nick":"loladiro","reason":"Client Quit","date":"2013-07-23T18:44:43.363Z","type":"quit"}
{"nick":"stagas","date":"2013-07-23T18:55:25.449Z","type":"join"}
{"nick":"loladiro","date":"2013-07-23T19:01:06.165Z","type":"join"}
{"nick":"pachet","date":"2013-07-23T19:01:34.976Z","type":"join"}
{"nick":"pachet","reason":"Changing host","date":"2013-07-23T19:01:35.186Z","type":"quit"}
{"nick":"pachet","date":"2013-07-23T19:01:35.186Z","type":"join"}
{"nick":"bajtos","date":"2013-07-23T19:01:49.497Z","type":"join"}
{"nick":"jmar777","date":"2013-07-23T19:06:10.334Z","type":"join"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2013-07-23T19:13:06.640Z","type":"quit"}
{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2013-07-23T19:21:34.353Z","type":"quit"}
{"nick":"mikeal","date":"2013-07-23T19:21:41.989Z","type":"join"}
{"nick":"skebcio","reason":"Remote host closed the connection","date":"2013-07-23T19:28:01.278Z","type":"quit"}
{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2013-07-23T19:28:39.216Z","type":"quit"}
{"nick":"mikeal1","date":"2013-07-23T19:28:43.896Z","type":"join"}
{"nick":"mikeal1","reason":"Read error: Connection reset by peer","date":"2013-07-23T19:30:03.892Z","type":"quit"}
{"nick":"mikeal1","date":"2013-07-23T19:31:15.785Z","type":"join"}
{"nick":"skebcio","date":"2013-07-23T19:31:48.260Z","type":"join"}
{"nick":"mikeal1","reason":"Read error: Connection reset by peer","date":"2013-07-23T19:35:13.484Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-07-23T19:35:21.560Z","type":"nick"}
{"nick":"hz","date":"2013-07-23T19:35:31.728Z","type":"join"}
{"nick":"loladiro","reason":"Ping timeout: 245 seconds","date":"2013-07-23T19:37:13.163Z","type":"quit"}
{"nick":"brson","reason":"Ping timeout: 276 seconds","date":"2013-07-23T19:37:40.130Z","type":"quit"}
{"nick":"loladiro","date":"2013-07-23T19:40:57.017Z","type":"join"}
{"nick":"mikeal","date":"2013-07-23T19:45:25.340Z","type":"join"}
{"nick":"kazupon","date":"2013-07-23T19:50:39.498Z","type":"join"}
{"nick":"qard","reason":"Quit: Leaving.","date":"2013-07-23T19:53:29.696Z","type":"quit"}
{"nick":"kazupon","reason":"Ping timeout: 264 seconds","date":"2013-07-23T19:56:30.234Z","type":"quit"}
{"nick":"trevnorris","message":"indutny: you know, it'd help if v8 would predictably deopt :P","date":"2013-07-23T20:00:56.414Z","type":"message"}
{"nick":"trevnorris","message":"I can't seem to get it to deopt right when the variable overflows smi range.","date":"2013-07-23T20:01:07.120Z","type":"message"}
{"nick":"trevnorris","message":"or, at least it's telling me a value is smi that I didn't think was: \"2147409811 ; r11 (smi)\"","date":"2013-07-23T20:02:23.188Z","type":"message"}
{"nick":"trevnorris","message":"I thought the max size of smi was 2^30 - 1","date":"2013-07-23T20:02:35.456Z","type":"message"}
{"nick":"AvianFlu_","date":"2013-07-23T20:10:14.502Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-07-23T20:10:47.321Z","type":"quit"}
{"nick":"AvianFlu_","reason":"Remote host closed the connection","date":"2013-07-23T20:10:47.531Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-07-23T20:12:41.660Z","type":"join"}
{"nick":"qard","date":"2013-07-23T20:17:32.368Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-07-23T20:23:46.820Z","type":"quit"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-07-23T20:30:57.992Z","type":"quit"}
{"nick":"jmar777","date":"2013-07-23T20:31:31.994Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: ping","date":"2013-07-23T20:34:53.208Z","type":"message"}
{"nick":"jmar777","reason":"Ping timeout: 248 seconds","date":"2013-07-23T20:35:49.698Z","type":"quit"}
{"nick":"mraleph","message":"trevnorris: smi on x64 are full 32bit","date":"2013-07-23T20:37:01.200Z","type":"message"}
{"nick":"jmar777","date":"2013-07-23T20:37:41.501Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-07-23T20:38:46.167Z","type":"quit"}
{"nick":"trevnorris","message":"mraleph: ah, thank you. that's what it meant by: \"For long smis it has the following format: [32 bit signed int] ...\"","date":"2013-07-23T20:38:48.604Z","type":"message"}
{"nick":"trevnorris","message":"I didn't get what the comment meant by \"long smi\"","date":"2013-07-23T20:38:59.708Z","type":"message"}
{"nick":"jmar777","date":"2013-07-23T20:39:20.911Z","type":"join"}
{"nick":"jmar777","reason":"Ping timeout: 248 seconds","date":"2013-07-23T20:43:49.697Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-07-23T20:48:53.081Z","type":"quit"}
{"nick":"mikeal","date":"2013-07-23T20:50:36.497Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-07-23T21:01:27.123Z","type":"quit"}
{"nick":"Domenic_","message":"isaacs: so streams3 will fix the thing where i have to tell knox users to .resume() client responses even if they don't care about them?","date":"2013-07-23T21:22:09.358Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: no","date":"2013-07-23T21:22:48.502Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: but it WILL change the fact that you can't pause() to go back to where you were before hitting resume()","date":"2013-07-23T21:23:08.722Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: argh, ok. i guess it's our fault for trying to bridge the EE + stream APIs into a callback one that just hands you the response, but I have to re-learn why it fails every time someone reports that \"bug\" :( ","date":"2013-07-23T21:24:09.599Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: well, either you lose data, or you don't.","date":"2013-07-23T21:24:31.637Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: we changed the default to \"don't\"","date":"2013-07-23T21:24:41.869Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: but, with streams3, you could conceivably resume() right before handing it to them","date":"2013-07-23T21:25:14.253Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: maybe we're not talking about the same issue. i'm talking about the \"if you call .on('response', ...), you *must* call resume(), otherwise bad things happen\" paragraph in the docs.","date":"2013-07-23T21:25:16.323Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: and if they complain about that, then they can call pause()","date":"2013-07-23T21:25:22.550Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: yeah","date":"2013-07-23T21:25:28.118Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: if you get the response, you're responsible for consumign it","date":"2013-07-23T21:25:36.821Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: that doesn't seem like it should be true, in an ideal world at least. but yeah.","date":"2013-07-23T21:26:17.688Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: in an ideal world, we would have dodged the EventEmitter bullet in the first place.","date":"2013-07-23T21:26:46.478Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: interesting, tell me more.","date":"2013-07-23T21:26:55.347Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: well... EventEmitters kind of suck","date":"2013-07-23T21:27:07.722Z","type":"message"}
{"nick":"AvianFlu","date":"2013-07-23T21:27:17.503Z","type":"join"}
{"nick":"isaacs","message":"Domenic_: it'd be better to do server.accept(function(sock) { ... }) rather than server.on('connection', function(socket) { .. })","date":"2013-07-23T21:27:34.607Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: and then stream.read(function(chunkOrNullForEOForSomething) { ... })","date":"2013-07-23T21:28:00.309Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: functional-style rather than on-style","date":"2013-07-23T21:28:13.935Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: then you dont' have that weird impedance mismatch with Promises, either","date":"2013-07-23T21:28:49.968Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 246 seconds","date":"2013-07-23T21:28:55.961Z","type":"quit"}
{"nick":"Domenic_","message":"isaacs: what does that buy, seems like less-uniform syntax for saying the same thing","date":"2013-07-23T21:29:12.587Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: what it buys is much sipmler logic around when to emit different events, especially eof which i'm struggling with atm","date":"2013-07-23T21:29:44.063Z","type":"message"}
{"nick":"isaacs","message":"but, backwards compatibility.","date":"2013-07-23T21:29:55.949Z","type":"message"}
{"nick":"isaacs","message":"i'm going to make a new platform any second now.","date":"2013-07-23T21:30:01.681Z","type":"message"}
{"nick":"Domenic_","message":"heh","date":"2013-07-23T21:30:05.250Z","type":"message"}
{"nick":"isaacs","message":"because fuck this backwrds compatibility bullshit","date":"2013-07-23T21:30:08.611Z","type":"message"}
{"nick":"isaacs","message":"srsly.","date":"2013-07-23T21:30:11.083Z","type":"message"}
{"nick":"Domenic_","message":"how does it lead to simpler logic?","date":"2013-07-23T21:30:23.748Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: you cool with https://github.com/trevnorris/node/compare/panic-and-buffer-logic","date":"2013-07-23T21:31:21.331Z","type":"message"}
{"nick":"mikeal","date":"2013-07-23T21:31:49.372Z","type":"join"}
{"nick":"mikolalysenko","date":"2013-07-23T21:32:43.282Z","type":"join"}
{"nick":"isaacs","message":"trevnorris: a lot of that seems unnecessary","date":"2013-07-23T21:33:35.436Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: because right now, we have buffering, and a 'readable' event to alert when there's a thing to do, and an 'end' event when you've read it all","date":"2013-07-23T21:34:05.571Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: and when a stream never has any data, we can't emit the 'end' event when you'd lose it, but also can't NOT emit it if you expect it.","date":"2013-07-23T21:34:22.387Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: we'd be able to skip all that noise","date":"2013-07-23T21:34:33.884Z","type":"message"}
{"nick":"isaacs","message":"Domenic_: read(fn) would just be the only API","date":"2013-07-23T21:34:54.974Z","type":"message"}
{"nick":"isaacs","message":"no readable event, no end event","date":"2013-07-23T21:35:17.919Z","type":"message"}
{"nick":"isaacs","message":"no \"events\"","date":"2013-07-23T21:35:20.229Z","type":"message"}
{"nick":"isaacs","message":"of course, you know... \"Evented I/O for V8\"","date":"2013-07-23T21:35:48.537Z","type":"message"}
{"nick":"Domenic_","message":"isaacs: ah OK, makes sense for streams. not sure how it applies to every EE situation, but I guess I can see where it might generalize.","date":"2013-07-23T21:35:58.286Z","type":"message"}
{"nick":"Domenic_","message":"lol","date":"2013-07-23T21:36:01.581Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: the parent assignation should have never gone in. had some tunnel vision in the bug fix and missed the final check in the if.","date":"2013-07-23T21:36:06.057Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: the RangeError check is unnecessary and the return offset thing had already lead to a bug, so wanted to play it safe.","date":"2013-07-23T21:36:06.961Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: i mean, not \"unnecessary\" exactly, but like it doesnt' actually do anythign","date":"2013-07-23T21:36:08.942Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: like, new TypeError vs just TypeError","date":"2013-07-23T21:36:22.209Z","type":"message"}
{"nick":"trevnorris","message":"yeah. that and the undefined checks are just for consistency. i'd drop those no problem.","date":"2013-07-23T21:36:48.258Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: nah, i mean, lgtm i guess","date":"2013-07-23T21:37:11.511Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: https://github.com/trevnorris/node/compare/panic-and-buffer-logic#L0R586 seems like the only thing that makes a difference, really","date":"2013-07-23T21:37:38.337Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: except the parent assignment","date":"2013-07-23T21:37:43.208Z","type":"message"}
{"nick":"trevnorris","message":"isaacs: yeah. I'll drop the others and squash the commits.","date":"2013-07-23T21:38:23.990Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: nah, they're fine","date":"2013-07-23T21:40:29.080Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: consistency is good ones :)","date":"2013-07-23T21:40:34.062Z","type":"message"}
{"nick":"mikeal","reason":"Ping timeout: 268 seconds","date":"2013-07-23T21:41:28.069Z","type":"quit"}
{"nick":"trevnorris","message":"isaacs: heh, cool. also you like function style events more than on style? that type of impl would be infinitely easier in node.c.","date":"2013-07-23T21:41:34.318Z","type":"message"}
{"nick":"trevnorris","message":"creating an on type event listener in c has been painful.","date":"2013-07-23T21:41:46.110Z","type":"message"}
{"nick":"rendar","date":"2013-07-23T21:42:15.821Z","type":"quit"}
{"nick":"MI6","message":"\u0002joyent/node:\u0002 \u00033Trevor Norris\u000f \u00037master\u000f * \u00028ce02cf\u0002 : buffer: misc logic simplification (+1 more commits) - http://git.io/vbaSPw","date":"2013-07-23T21:42:53.687Z","type":"message"}
{"nick":"mikeal","date":"2013-07-23T21:43:27.428Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: using that and attaching the instance  to the event instead of using call/apply the event system would be sooo freaky fast. :)","date":"2013-07-23T21:43:49.512Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: yeah","date":"2013-07-23T21:48:58.106Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: it's a more consistent model","date":"2013-07-23T21:49:02.172Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: and then it's more clear that you just *can't* have passive data listeners without them being passthrough-streams","date":"2013-07-23T21:49:27.550Z","type":"message"}
{"nick":"isaacs","message":"but, whatever.","date":"2013-07-23T21:49:30.570Z","type":"message"}
{"nick":"isaacs","message":"that's easy to do.","date":"2013-07-23T21:49:33.362Z","type":"message"}
{"nick":"isaacs","message":"listener = { read: function(cb) { src.read(function(chunk) { updateStatusBarOrWhatever(chunk); cb(chunk); }); } }","date":"2013-07-23T21:50:08.217Z","type":"message"}
{"nick":"trevnorris","message":"but that's only for streams, i'll assume. I can't imagine every event would be function based.","date":"2013-07-23T21:50:32.829Z","type":"message"}
{"nick":"hz","reason":"Read error: No route to host","date":"2013-07-23T21:52:35.137Z","type":"quit"}
{"nick":"isaacs","message":"trevnorris: why not?","date":"2013-07-23T21:53:21.483Z","type":"message"}
{"nick":"isaacs","message":"trevnorris: what else do you really need events for, other than I/O?","date":"2013-07-23T21:53:33.522Z","type":"message"}
{"nick":"hz","date":"2013-07-23T21:53:36.751Z","type":"join"}
{"nick":"trevnorris","message":"isaacs: things like process.on('SIGINT'","date":"2013-07-23T21:53:43.581Z","type":"message"}
{"nick":"isaacs","message":"process.SIGINT(function() { got a sigint })","date":"2013-07-23T21:54:06.374Z","type":"message"}
{"nick":"isaacs","message":"this is all academic and wonderland wishful stuff, of course.","date":"2013-07-23T21:54:42.436Z","type":"message"}
{"nick":"tjfontaine","message":"the EE model is nice when you don't know the event names in advance","date":"2013-07-23T21:54:44.733Z","type":"message"}
{"nick":"trevnorris","message":"well, it's a hack, but on an object can still be done: eventer[callName](arguments);","date":"2013-07-23T21:55:13.081Z","type":"message"}
{"nick":"trevnorris","message":"but it's way ugly.","date":"2013-07-23T21:55:17.836Z","type":"message"}
{"nick":"isaacs","message":"trevnorris, tjfontaine: it'd encourage creating well-defined APIs","date":"2013-07-23T21:58:14.001Z","type":"message"}
{"nick":"isaacs","message":"instead of the situation we have now, where you really can't introspect the possible events that might emitted, UNLESS you know about them in advance","date":"2013-07-23T21:58:39.890Z","type":"message"}
{"nick":"sblom","date":"2013-07-23T21:59:01.131Z","type":"join"}
{"nick":"trevnorris","message":"well, let's also put this into Node v2.0 :)","date":"2013-07-23T21:59:04.971Z","type":"message"}
{"nick":"tjfontaine","message":"aye, it favors the explicit, just sometimes it's fun to be evil :P","date":"2013-07-23T21:59:21.585Z","type":"message"}
{"nick":"isaacs","message":"actually, I think signal handling is probably one of the only valid use-cases for an EventEmitter pattern, but even there, we don't use the builtin EE code for it","date":"2013-07-23T21:59:35.612Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-07-23T21:59:46.549Z","type":"quit"}
{"nick":"c4milo","date":"2013-07-23T22:00:12.782Z","type":"join"}
{"nick":"trevnorris","message":"hm. there might be a cool compromise.","date":"2013-07-23T22:01:17.907Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-07-23T22:01:42.061Z","type":"join"}
{"nick":"trevnorris","message":"how about defining a superset of all possible events, then passing in specifics in the callback.","date":"2013-07-23T22:02:10.646Z","type":"message"}
{"nick":"trevnorris","message":"like: stream.request(callback) and stream.error(status, callback) or process.signal(signal, callback)","date":"2013-07-23T22:02:48.589Z","type":"message"}
{"nick":"trevnorris","message":"but I guess that could get costly calling the callback for every one instead of on a specific case.","date":"2013-07-23T22:03:06.032Z","type":"message"}
{"nick":"c4milo","reason":"Ping timeout: 246 seconds","date":"2013-07-23T22:04:37.893Z","type":"quit"}
{"nick":"pachet","reason":"Quit: leaving","date":"2013-07-23T22:04:52.610Z","type":"quit"}
{"nick":"hz","reason":"Disconnected by services","date":"2013-07-23T22:25:45.984Z","type":"quit"}
{"nick":"hz","date":"2013-07-23T22:25:50.160Z","type":"join"}
{"nick":"hz","reason":"Client Quit","date":"2013-07-23T22:26:37.397Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: tomorrow mind giving this a quick review https://github.com/joyent/node/pull/5747","date":"2013-07-23T22:28:20.971Z","type":"message"}
{"nick":"sblom","reason":"Ping timeout: 276 seconds","date":"2013-07-23T22:32:31.124Z","type":"quit"}
{"nick":"icarot","date":"2013-07-23T22:44:07.498Z","type":"join"}
{"nick":"c4milo","date":"2013-07-23T22:48:36.286Z","type":"join"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-07-23T23:09:38.542Z","type":"quit"}
{"nick":"loladiro","reason":"Ping timeout: 264 seconds","date":"2013-07-23T23:22:21.802Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: thanks :)","date":"2013-07-23T23:26:45.674Z","type":"message"}
{"nick":"paddybyers","reason":"Ping timeout: 246 seconds","date":"2013-07-23T23:27:56.022Z","type":"quit"}
{"nick":"bnoordhuis","message":"np","date":"2013-07-23T23:32:13.829Z","type":"message"}
{"nick":"tjfontaine","message":"so here's an interesting question","date":"2013-07-23T23:40:47.100Z","type":"message"}
{"nick":"tjfontaine","message":"bnoordhuis: presuming a Local<External> is used in node, but External::New isn't, the linker will remove the symbol for External::New","date":"2013-07-23T23:41:48.364Z","type":"message"}
{"nick":"tjfontaine","message":"that's more of a question, I think that's what I'm seeing happening here","date":"2013-07-23T23:42:48.600Z","type":"message"}
{"nick":"mcavage","reason":"Remote host closed the connection","date":"2013-07-23T23:46:29.548Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: coolio. added commit w/changes and commented on your notes: https://github.com/joyent/node/pull/5747","date":"2013-07-23T23:49:09.944Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: where you seeing that?","date":"2013-07-23T23:49:14.634Z","type":"message"}
{"nick":"tjfontaine","message":"linux","date":"2013-07-23T23:50:24.364Z","type":"message"}
{"nick":"tjfontaine","message":"g++ 4.4","date":"2013-07-23T23:50:28.517Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: oh wtf. that's a bug. give me 5 i'll throw up a patch.","date":"2013-07-23T23:50:57.196Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: is it a change from the v8 upgrade?","date":"2013-07-23T23:51:33.297Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: no, I totally missed setting the external to the object passed to Alloc() in ead8e26b","date":"2013-07-23T23:52:38.067Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: is there a way to run the addon unit tests? this should really be covered since it's not actually used in core.","date":"2013-07-23T23:53:41.032Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: well I'm not entirely sure this is related, it's a more generic ld/v8 question","date":"2013-07-23T23:53:46.506Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: there still isnt' a way yet to run the existing addons, I will cook up an example tonight","date":"2013-07-23T23:54:20.728Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: fwiw External::New should be used, so like it or not you found a bug :)","date":"2013-07-23T23:54:25.157Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: thanks.","date":"2013-07-23T23:54:28.517Z","type":"message"}
{"nick":"groundwater","reason":"Quit: groundwater","date":"2013-07-23T23:54:44.697Z","type":"quit"}
{"nick":"tjfontaine","message":"trevnorris: ya, but I'm worried that I'm binding to things in my addon-layer that won't work when node is compiled with gcc-ld and win-link.exe ","date":"2013-07-23T23:55:25.152Z","type":"message"}
{"nick":"tjfontaine","message":"trevnorris: the same way people complain about missing openssl symbols","date":"2013-07-23T23:55:39.246Z","type":"message"}
{"nick":"trevnorris","message":"tjfontaine: here's the fix: https://github.com/trevnorris/node/compare/smalloc-fix-cb-extern","date":"2013-07-23T23:57:47.657Z","type":"message"}
{"nick":"trevnorris","message":"not sure how that got left out, but man I feel like an ass for it.","date":"2013-07-23T23:58:05.192Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-07-23T23:58:52.965Z","type":"quit"}
{"nick":"tjfontaine","message":"trevnorris: any reason why that shouldn't be a hidden property?","date":"2013-07-23T23:59:06.997Z","type":"message"}
{"nick":"AvianFlu_","date":"2013-07-23T23:59:12.699Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-07-23T23:59:35.794Z","type":"quit"}
{"nick":"AvianFlu_","reason":"Remote host closed the connection","date":"2013-07-23T23:59:36.009Z","type":"quit"}
{"nick":"trevnorris","message":"tjfontaine: i'm not sure what you're talking about. it is. ;)","date":"2013-07-23T23:59:57.648Z","type":"message"}
