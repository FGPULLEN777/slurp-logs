{"nick":"TheJH","reason":"Ping timeout: 248 seconds","date":"2012-08-31T00:03:25.226Z","type":"quit"}
{"nick":"jbueza","date":"2012-08-31T00:03:44.646Z","type":"join"}
{"nick":"creationix","message":"rphillips: what does your systems binding do?","date":"2012-08-31T00:14:19.799Z","type":"message"}
{"nick":"creationix","message":"*systemd","date":"2012-08-31T00:14:27.318Z","type":"message"}
{"nick":"mmalecki[busy]","new_nick":"mmalecki","date":"2012-08-31T00:50:41.759Z","type":"nick"}
{"nick":"jelliott","reason":"*.net *.split","date":"2012-08-31T00:54:14.674Z","type":"quit"}
{"nick":"levi","reason":"*.net *.split","date":"2012-08-31T00:54:14.914Z","type":"quit"}
{"nick":"jelliott","date":"2012-08-31T00:58:20.309Z","type":"join"}
{"nick":"levi","date":"2012-08-31T00:58:20.549Z","type":"join"}
{"nick":"rphillips","message":"creationix: systemd binding?","date":"2012-08-31T01:02:02.945Z","type":"message"}
{"nick":"xming","reason":"Ping timeout: 272 seconds","date":"2012-08-31T01:05:45.203Z","type":"quit"}
{"nick":"mmalecki","reason":"Quit: Reconnecting","date":"2012-08-31T01:12:42.491Z","type":"quit"}
{"nick":"mmalecki","date":"2012-08-31T01:13:00.239Z","type":"join"}
{"nick":"CIA-22","message":"Ryan Phillips\u000f master\u000f * r2808f7f\u000f \u000f/ (2 files):\u000f disable the multicast test for now - http://git.io/MK-HGQ","date":"2012-08-31T01:26:26.741Z","type":"message"}
{"nick":"creationix","message":"hmm must have of been philips_","date":"2012-08-31T01:26:54.201Z","type":"message"}
{"nick":"creationix","message":"oops","date":"2012-08-31T01:26:59.545Z","type":"message"}
{"nick":"rphillips","message":"ah","date":"2012-08-31T01:27:03.761Z","type":"message"}
{"nick":"rphillips","message":"he wrote an init script iirc","date":"2012-08-31T01:27:09.444Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/racker/virgo/commit/36147a6b3267cb495b5792fdabc5dfb7e5ca5b8b","date":"2012-08-31T01:27:52.094Z","type":"message"}
{"nick":"rphillips","message":"yeah","date":"2012-08-31T01:27:53.508Z","type":"message"}
{"nick":"travis-ci","date":"2012-08-31T01:28:49.300Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] luvit/luvit#436 (master - 2808f7f : Ryan Phillips): The build passed.","date":"2012-08-31T01:28:49.541Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/luvit/luvit/compare/255e8885668d...2808f7f73d45","date":"2012-08-31T01:28:49.541Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/luvit/luvit/builds/2290579","date":"2012-08-31T01:28:49.541Z","type":"message"}
{"nick":"travis-ci","date":"2012-08-31T01:28:49.541Z","type":"part"}
{"nick":"joshthecoder","reason":"Quit: Leaving...","date":"2012-08-31T01:43:18.624Z","type":"quit"}
{"nick":"mmalecki","reason":"Ping timeout: 272 seconds","date":"2012-08-31T01:48:49.232Z","type":"quit"}
{"nick":"creationix","message":"rphillips: I'm playing with continuable style async functions","date":"2012-08-31T02:07:01.999Z","type":"message"}
{"nick":"creationix","message":"It's like lightweight promises","date":"2012-08-31T02:07:18.375Z","type":"message"}
{"nick":"creationix","message":"halfway between simple callbacks and promises","date":"2012-08-31T02:07:33.633Z","type":"message"}
{"nick":"Spion","message":"wrap makes a coroutine?","date":"2012-08-31T02:23:02.755Z","type":"message"}
{"nick":"creationix","message":"Spion: which wrap?","date":"2012-08-31T02:32:44.559Z","type":"message"}
{"nick":"creationix","message":"continuable syntax works nicely in coffescript https://gist.github.com/1b47cba9f3a066147966","date":"2012-08-31T02:33:20.620Z","type":"message"}
{"nick":"creationix","message":"I wonder how moon script will handle it","date":"2012-08-31T02:33:29.374Z","type":"message"}
{"nick":"Spion","message":"the wrap provided by fiber","date":"2012-08-31T02:34:34.634Z","type":"message"}
{"nick":"Spion","message":"in the api design question gist :)","date":"2012-08-31T02:35:17.706Z","type":"message"}
{"nick":"Spion","message":"the simplest API I've seen so far (node/coffeescript/otherwise) is streamline's - if something similar to that can be replicated without a preprocessor I'd love to use it :)","date":"2012-08-31T02:36:32.203Z","type":"message"}
{"nick":"Spion","message":"omit the callback and you get a promise function that \"yields\" when called with _; use a _ instead of the callback to yield immediately; use a normal callback for normal behaviour","date":"2012-08-31T02:38:10.281Z","type":"message"}
{"nick":"Spion","message":"something like omitting the callback and getting a promise function, when called with a parameter its considered a callback (continuable syntax), when called without it yields. best of all worlds?","date":"2012-08-31T02:45:41.048Z","type":"message"}
{"nick":"creationix","message":"Spion, yes, with continuable syntax, you can get streamline-like syntax without a preprocessor","date":"2012-08-31T02:45:47.548Z","type":"message"}
{"nick":"creationix","message":"that's what I'm working on right now","date":"2012-08-31T02:45:52.593Z","type":"message"}
{"nick":"Spion","message":"most awesome","date":"2012-08-31T02:45:57.922Z","type":"message"}
{"nick":"Spion","message":":D","date":"2012-08-31T02:45:58.564Z","type":"message"}
{"nick":"creationix","message":"wrap isn't going to work since it requires wrapping every function before using in every coroutine","date":"2012-08-31T02:46:11.040Z","type":"message"}
{"nick":"Spion","message":"yeah :|","date":"2012-08-31T02:46:17.704Z","type":"message"}
{"nick":"creationix","message":"the new fiber module will have a wait function","date":"2012-08-31T02:46:20.465Z","type":"message"}
{"nick":"creationix","message":"so assuming that fs is in continuable style","date":"2012-08-31T02:46:32.273Z","type":"message"}
{"nick":"Spion","message":"<3","date":"2012-08-31T02:47:03.293Z","type":"message"}
{"nick":"creationix","message":"fs.readFile(path)(function (err, contents) end) will become contents = wait(fd.readFile(path))","date":"2012-08-31T02:47:25.570Z","type":"message"}
{"nick":"Spion","message":"exactly what I was thinking","date":"2012-08-31T02:47:37.954Z","type":"message"}
{"nick":"creationix","message":"no need to modify or wrap readFile","date":"2012-08-31T02:47:40.799Z","type":"message"}
{"nick":"Spion","message":"just the call","date":"2012-08-31T02:48:06.840Z","type":"message"}
{"nick":"creationix","message":"also, if moon script works like coffee script, using continuables without coroutines will be pretty too","date":"2012-08-31T02:48:26.174Z","type":"message"}
{"nick":"creationix","message":"though it's not tool bad in vanilla lua","date":"2012-08-31T02:48:36.988Z","type":"message"}
{"nick":"creationix","message":"Spion: https://gist.github.com/1b47cba9f3a066147966","date":"2012-08-31T02:48:48.214Z","type":"message"}
{"nick":"creationix","message":"I think this coroutine syntax is awesome enough to make it work converting luvit to continuable syntax","date":"2012-08-31T02:51:10.670Z","type":"message"}
{"nick":"creationix","message":"it will break all code though","date":"2012-08-31T02:51:17.652Z","type":"message"}
{"nick":"creationix","message":"s/work/worth/","date":"2012-08-31T02:51:27.228Z","type":"message"}
{"nick":"creationix","message":"rphillips: what do you think, would that kind of API change kill you guys?","date":"2012-08-31T02:51:41.753Z","type":"message"}
{"nick":"creationix","message":"mostly it's replacing \", callback\" with \")(callback\" in your calls","date":"2012-08-31T02:52:08.308Z","type":"message"}
{"nick":"Spion","message":"isn't it possible to have it both ways?","date":"2012-08-31T02:52:25.324Z","type":"message"}
{"nick":"Spion","message":":D","date":"2012-08-31T02:52:30.298Z","type":"message"}
{"nick":"creationix","message":"which \"both\"","date":"2012-08-31T02:52:38.929Z","type":"message"}
{"nick":"creationix","message":"I'm not supporting two versions of all functions","date":"2012-08-31T02:52:46.661Z","type":"message"}
{"nick":"creationix","message":"rphillips: and in function definitions replacing \", callback) {\" with \") { return function (callback) {\"","date":"2012-08-31T02:53:54.456Z","type":"message"}
{"nick":"Spion","message":"well, its easy to convert them to old style anyway","date":"2012-08-31T02:54:23.781Z","type":"message"}
{"nick":"creationix","message":"sure, anyone can wrap","date":"2012-08-31T02:54:35.284Z","type":"message"}
{"nick":"creationix","message":"but I don't want most people wrapping","date":"2012-08-31T02:54:48.415Z","type":"message"}
{"nick":"Spion","message":"no, I mean, to make functions that work both ways after wrapping them.","date":"2012-08-31T02:54:57.028Z","type":"message"}
{"nick":"Spion","message":"omit the callback and you get a function","date":"2012-08-31T02:55:05.897Z","type":"message"}
{"nick":"Spion","message":"put the callback in and you get old behaviour","date":"2012-08-31T02:55:12.849Z","type":"message"}
{"nick":"creationix","message":"that requires too much boilerplate","date":"2012-08-31T02:55:24.865Z","type":"message"}
{"nick":"creationix","message":"the double function is bad enough","date":"2012-08-31T02:55:32.347Z","type":"message"}
{"nick":"rphillips","message":"hmm","date":"2012-08-31T02:57:00.448Z","type":"message"}
{"nick":"rphillips","message":"this would change a lot of stuff for us","date":"2012-08-31T02:57:18.583Z","type":"message"}
{"nick":"creationix","message":"mostly superficial though","date":"2012-08-31T02:57:30.277Z","type":"message"}
{"nick":"creationix","message":"and you could delete all your arguments surgery code when you want optional arguments before the callback","date":"2012-08-31T02:57:52.928Z","type":"message"}
{"nick":"creationix","message":"I tried to push this style on node back when we were removing promises years ago","date":"2012-08-31T02:58:07.210Z","type":"message"}
{"nick":"creationix","message":"I wish I had just put it in luvit from the start","date":"2012-08-31T02:58:15.132Z","type":"message"}
{"nick":"rphillips","message":"we are under the gun for the product we are working on.","date":"2012-08-31T02:58:50.148Z","type":"message"}
{"nick":"creationix","message":"rphillips: if it's a deal-breaker let me know.  If you just need help manually changing stuff I can help with that","date":"2012-08-31T02:58:57.286Z","type":"message"}
{"nick":"rphillips","message":"creationix: can you send an email to the luvit list?","date":"2012-08-31T02:59:18.265Z","type":"message"}
{"nick":"creationix","message":"sure","date":"2012-08-31T02:59:24.457Z","type":"message"}
{"nick":"rphillips","message":"and i'll get pquerna and philips_ to chime in","date":"2012-08-31T02:59:31.960Z","type":"message"}
{"nick":"xming","date":"2012-08-31T03:01:17.737Z","type":"join"}
{"nick":"creationix","message":"https://groups.google.com/d/topic/luvit/GkakgfcaNDQ/discussion","date":"2012-08-31T03:13:23.087Z","type":"message"}
{"nick":"creationix","message":"This change and the other two proposed changes will make writing web apps in luvit worlds easier!","date":"2012-08-31T03:13:51.335Z","type":"message"}
{"nick":"creationix","message":"Imagine creating a coroutine per http request and doing all your app logic using sync-style code","date":"2012-08-31T03:14:33.248Z","type":"message"}
{"nick":"creationix","message":"it will be as easy as php, but faster than node (I think)","date":"2012-08-31T03:15:13.374Z","type":"message"}
{"nick":"creationix","message":"also parallel work would be easy too.  wait could accept multiple continuables and wait till they all return","date":"2012-08-31T03:19:47.617Z","type":"message"}
{"nick":"creationix","message":"file1, file2, file3 = wait(fs.readFile(\"file1\"), fs.readFile(\"file2\", fs.readFile(\"file3\"))","date":"2012-08-31T03:20:15.902Z","type":"message"}
{"nick":"Spion","message":"https://gist.github.com/3548825","date":"2012-08-31T03:43:00.684Z","type":"message"}
{"nick":"Spion","message":"its pretty ugly but its backward-compatible","date":"2012-08-31T03:43:07.717Z","type":"message"}
{"nick":"Spion","message":"its also probably not really good code, I was just trying to illustrate it","date":"2012-08-31T03:43:53.383Z","type":"message"}
{"nick":"Spion","message":"also, i bet the performance would suck","date":"2012-08-31T03:46:08.593Z","type":"message"}
{"nick":"Spion","message":"also it would fail when the callback isn't the last parameter and the parameter after it is also a function","date":"2012-08-31T03:48:13.474Z","type":"message"}
{"nick":"Spion","message":"infact I bet that the reverse wrapper is easier","date":"2012-08-31T03:48:29.448Z","type":"message"}
{"nick":"Spion","message":"just throwing stuff on the table :D","date":"2012-08-31T03:50:35.013Z","type":"message"}
{"nick":"Spion","message":"no pun intended","date":"2012-08-31T03:51:05.092Z","type":"message"}
{"nick":"Spion","message":"of course everyone would need to wrap() their functions, that will drive people insane","date":"2012-08-31T03:55:28.409Z","type":"message"}
{"nick":"Spion","action":"hides","date":"2012-08-31T03:55:34.868Z","type":"action"}
{"nick":"creationix","message":"yeah, I'm not wrapping","date":"2012-08-31T03:56:23.909Z","type":"message"}
{"nick":"Spion","message":"not function callers, but function writers, yeah","date":"2012-08-31T03:56:48.507Z","type":"message"}
{"nick":"creationix","message":"yep, users of luvit write and call async functions all the time","date":"2012-08-31T03:57:55.044Z","type":"message"}
{"nick":"creationix","message":"I want both to be painless","date":"2012-08-31T03:57:59.881Z","type":"message"}
{"nick":"creationix","message":"the double function boilerplate is somewhat annoying, but I think it's acceptable","date":"2012-08-31T03:58:20.549Z","type":"message"}
{"nick":"creationix","message":"Spion: alright, here is now the new fiber module is used https://gist.github.com/4af628ad6a8d02ad0f65","date":"2012-08-31T04:22:51.091Z","type":"message"}
{"nick":"creationix","message":"\"wait\" returns all the arguments passed to the callback, \"await\" is short for \"auto wait\" it strips off the first arg and throws it as an error if it's truthy","date":"2012-08-31T04:23:42.190Z","type":"message"}
{"nick":"creationix","message":"as soon as I fix a bug where the fiber module blows up when the callback is called synchronously, I'll publish this working example as a luvit example","date":"2012-08-31T04:24:51.522Z","type":"message"}
{"nick":"kristate","date":"2012-08-31T04:51:29.222Z","type":"join"}
{"nick":"CIA-22","message":"Tim Caswell\u000f master\u000f * rb52c6fc\u000f \u000f/ (4 files in 2 dirs):\u000f Add new stream, new fiber, and new continuable examples - http://git.io/qNxFeQ","date":"2012-08-31T04:58:37.974Z","type":"message"}
{"nick":"creationix","message":"it works!","date":"2012-08-31T04:59:22.709Z","type":"message"}
{"nick":"creationix","message":"https://github.com/luvit/luvit/blob/b52c6fc1f47c20cb1b209739c7809af6fce75561/examples/stream/test.lua#L34-42","date":"2012-08-31T04:59:24.678Z","type":"message"}
{"nick":"creationix","message":"22 lines for callback based  vs 7 lines for await based","date":"2012-08-31T05:00:14.200Z","type":"message"}
{"nick":"travis-ci","date":"2012-08-31T05:01:01.497Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] luvit/luvit#437 (master - b52c6fc : Tim Caswell): The build passed.","date":"2012-08-31T05:01:01.738Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/luvit/luvit/compare/2808f7f73d45...b52c6fc1f47c","date":"2012-08-31T05:01:01.739Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/luvit/luvit/builds/2291516","date":"2012-08-31T05:01:01.739Z","type":"message"}
{"nick":"travis-ci","date":"2012-08-31T05:01:01.739Z","type":"part"}
{"nick":"CIA-22","message":"Tim Caswell\u000f master\u000f * r950c457\u000f \u000f/ (examples/stream/modules/file.lua examples/stream/test.lua):\u000f Tidy up new stream example - http://git.io/S7bCfA","date":"2012-08-31T05:08:39.598Z","type":"message"}
{"nick":"travis-ci","date":"2012-08-31T05:11:25.211Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] luvit/luvit#438 (master - 950c457 : Tim Caswell): The build passed.","date":"2012-08-31T05:11:25.452Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/luvit/luvit/compare/b52c6fc1f47c...950c457b0e25","date":"2012-08-31T05:11:25.452Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/luvit/luvit/builds/2291552","date":"2012-08-31T05:11:25.452Z","type":"message"}
{"nick":"travis-ci","date":"2012-08-31T05:11:25.452Z","type":"part"}
{"nick":"dvv1","date":"2012-08-31T05:19:47.546Z","type":"join"}
{"nick":"creationix","message":"I think the repl should run in a fiber","date":"2012-08-31T05:22:36.715Z","type":"message"}
{"nick":"creationix","message":"with wait and await available","date":"2012-08-31T05:22:41.543Z","type":"message"}
{"nick":"creationix","message":"then I'd never need to use *Sync functions again","date":"2012-08-31T05:22:55.903Z","type":"message"}
{"nick":"`3rdEden","date":"2012-08-31T05:56:26.067Z","type":"join"}
{"nick":"aliem","date":"2012-08-31T06:02:41.261Z","type":"join"}
{"nick":"TheJH","date":"2012-08-31T06:29:08.328Z","type":"join"}
