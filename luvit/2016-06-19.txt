{"nick":"rgrinberg","date":"2016-06-19T00:59:06.410Z","type":"join"}
{"nick":"SinisterRectus","message":"daurnimator: remember when you helped me with my class constructor? i came up with a new trick to store properties sequentially: http://pastebin.com/Gx8JdQVW","date":"2016-06-19T02:41:50.249Z","type":"message"}
{"nick":"SinisterRectus","message":"ignore that class.properties = properties. that was for debugging.","date":"2016-06-19T03:29:28.518Z","type":"message"}
{"nick":"rgrinberg","reason":"Ping timeout: 260 seconds","date":"2016-06-19T03:40:50.447Z","type":"quit"}
{"nick":"daurnimator","message":"SinisterRectus: sure. I still don't think creating a class system solves anything :P","date":"2016-06-19T07:48:11.673Z","type":"message"}
{"nick":"daurnimator","message":"SinisterRectus: in 99% of circumstances you can get away with just: local methods = {}; local mt = {__index=methods}; local function new(...) --[[code here]] return setmetatable({}, mt) end; function methods:foo() end; return { new = new };","date":"2016-06-19T07:49:17.980Z","type":"message"}
{"nick":"rendar","date":"2016-06-19T07:51:53.577Z","type":"join"}
{"nick":"rgrinberg","date":"2016-06-19T14:53:45.174Z","type":"join"}
{"nick":"daurnimator","reason":"*.net *.split","date":"2016-06-19T18:50:10.027Z","type":"quit"}
{"nick":"daurnimator","date":"2016-06-19T18:57:22.635Z","type":"join"}
{"nick":"DarkGod","date":"2016-06-19T19:12:12.239Z","type":"join"}
{"nick":"rendar","reason":"Ping timeout: 244 seconds","date":"2016-06-19T19:41:11.084Z","type":"quit"}
{"nick":"rendar","date":"2016-06-19T20:11:29.390Z","type":"join"}
{"nick":"SinisterRectus","message":"it's nice to have a constructor when you have a lot of class definitions","date":"2016-06-19T20:49:10.647Z","type":"message"}
{"nick":"SinisterRectus","message":"you can make the same argument about any function","date":"2016-06-19T20:49:26.280Z","type":"message"}
{"nick":"SinisterRectus","message":"why write a function when you can just copy and paste the code everywhere","date":"2016-06-19T20:49:38.557Z","type":"message"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2016-06-19T22:26:50.004Z","type":"quit"}
