{"nick":"rgrinberg","date":"2016-06-19T00:59:06.410Z","type":"join"}
{"nick":"SinisterRectus","message":"daurnimator: remember when you helped me with my class constructor? i came up with a new trick to store properties sequentially: http://pastebin.com/Gx8JdQVW","date":"2016-06-19T02:41:50.249Z","type":"message"}
{"nick":"SinisterRectus","message":"ignore that class.properties = properties. that was for debugging.","date":"2016-06-19T03:29:28.518Z","type":"message"}
{"nick":"rgrinberg","reason":"Ping timeout: 260 seconds","date":"2016-06-19T03:40:50.447Z","type":"quit"}
{"nick":"daurnimator","message":"SinisterRectus: sure. I still don't think creating a class system solves anything :P","date":"2016-06-19T07:48:11.673Z","type":"message"}
{"nick":"daurnimator","message":"SinisterRectus: in 99% of circumstances you can get away with just: local methods = {}; local mt = {__index=methods}; local function new(...) --[[code here]] return setmetatable({}, mt) end; function methods:foo() end; return { new = new };","date":"2016-06-19T07:49:17.980Z","type":"message"}
{"nick":"rendar","date":"2016-06-19T07:51:53.577Z","type":"join"}
{"nick":"rgrinberg","date":"2016-06-19T14:53:45.174Z","type":"join"}
