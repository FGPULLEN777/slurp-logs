{"nick":"dan336","reason":"Quit: Leaving.","date":"2014-11-14T00:02:28.571Z","type":"quit"}
{"nick":"cledev","date":"2014-11-14T01:11:05.348Z","type":"join"}
{"nick":"kazupon","date":"2014-11-14T01:51:25.579Z","type":"join"}
{"nick":"cledev","reason":"Ping timeout: 240 seconds","date":"2014-11-14T02:03:52.997Z","type":"quit"}
{"nick":"travis-ci","date":"2014-11-14T03:05:35.719Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1157 (luvi-up - 2c30ee3 : Ryan Phillips): The build has errored.","date":"2014-11-14T03:05:35.945Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/fffd678d23b9...2c30ee31b755","date":"2014-11-14T03:05:35.946Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/40959305","date":"2014-11-14T03:05:35.946Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T03:05:35.946Z","type":"part"}
{"nick":"rphillips","message":"creationix: https://gist.github.com/rphillips/e0a3258e8e37f6357acf","date":"2014-11-14T03:08:28.337Z","type":"message"}
{"nick":"rphillips","message":"this would be slick to have in luvi, but it will need zip creation support","date":"2014-11-14T03:09:04.245Z","type":"message"}
{"nick":"creationix","message":"rphillips: zip creation isn’t too bad, I can write it tomorrow if you wish","date":"2014-11-14T03:09:23.181Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T03:09:36.944Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1157 (luvi-up - 2c30ee3 : Ryan Phillips): The build passed.","date":"2014-11-14T03:09:37.133Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/fffd678d23b9...2c30ee31b755","date":"2014-11-14T03:09:37.133Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/40959305","date":"2014-11-14T03:09:37.133Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T03:09:37.133Z","type":"part"}
{"nick":"rphillips","message":"creationix: that would rock","date":"2014-11-14T03:10:03.236Z","type":"message"}
{"nick":"creationix","message":"it’s something I’ve been wanting to add","date":"2014-11-14T03:10:14.583Z","type":"message"}
{"nick":"rphillips","message":"i would like a brain dump about the coroutine stuff","date":"2014-11-14T03:11:41.129Z","type":"message"}
{"nick":"creationix","message":"brain dump?","date":"2014-11-14T03:15:37.207Z","type":"message"}
{"nick":"creationix","message":"do you have questions?","date":"2014-11-14T03:15:47.620Z","type":"message"}
{"nick":"rphillips","message":"yeah, I don't get the chain logic yet","date":"2014-11-14T03:16:05.190Z","type":"message"}
{"nick":"creationix","message":"ahh, the protocol parsers","date":"2014-11-14T03:16:14.467Z","type":"message"}
{"nick":"creationix","message":"yeah, that took me a couple days to wrap my head around","date":"2014-11-14T03:16:22.820Z","type":"message"}
{"nick":"creationix","message":"I’d love some feedback on the chain syntax too.  I’m not settled on how it works","date":"2014-11-14T03:17:06.019Z","type":"message"}
{"nick":"creationix","message":"but the basic idea is that each segment in a chain runs as an independent coroutine","date":"2014-11-14T03:17:20.022Z","type":"message"}
{"nick":"creationix","message":"it can read from it’s source and write to it’s destination","date":"2014-11-14T03:17:29.398Z","type":"message"}
{"nick":"creationix","message":"both read and write are blocking","date":"2014-11-14T03:17:34.606Z","type":"message"}
{"nick":"creationix","message":"since lua is single threaded, only one of the coroutines will run at a time, most will be blocked on reading or writing most of the time","date":"2014-11-14T03:18:14.914Z","type":"message"}
{"nick":"creationix","message":"chain basically takes a list of workers and moves data between them","date":"2014-11-14T03:18:38.189Z","type":"message"}
{"nick":"creationix","message":"suppose I have workers 1, 2, and 3.  1’s read is the real external read, say from a tcp socket, 3’s write is also to the tcp socket","date":"2014-11-14T03:19:08.541Z","type":"message"}
{"nick":"creationix","message":"when 1 writes, it will check if 2 is waiting for the data, if it is, it will resume 2 passing the data along.  Then 1 will be blocked till 2 yields","date":"2014-11-14T03:19:49.453Z","type":"message"}
{"nick":"creationix","message":"if 1 writes and 2 isn’t waiting to read yet, then 1 will yield and wait for a reader","date":"2014-11-14T03:20:04.714Z","type":"message"}
{"nick":"creationix","message":"when 2 reads, if there is no data waiting in 1, it will yield","date":"2014-11-14T03:20:24.543Z","type":"message"}
{"nick":"rphillips","message":"it could potentially deadlock, right?","date":"2014-11-14T03:21:36.439Z","type":"message"}
{"nick":"creationix","message":"if there is data, 2 will take the data from the box, resume 1 (and wait for 1 to yield again) and then return","date":"2014-11-14T03:21:41.921Z","type":"message"}
{"nick":"creationix","message":"deadlock isn’t too likely here","date":"2014-11-14T03:22:15.486Z","type":"message"}
{"nick":"creationix","message":"that last case was https://github.com/luvit/luvit/blob/luvi-up/app/modules/codec.lua#L100-L105","date":"2014-11-14T03:22:21.919Z","type":"message"}
{"nick":"creationix","message":"I had to look it up","date":"2014-11-14T03:22:26.338Z","type":"message"}
{"nick":"creationix","message":"resume is always a non-blocking operation","date":"2014-11-14T03:22:48.096Z","type":"message"}
{"nick":"creationix","message":"so when 2 resumes 1 after taking the data from 1’s box, it will return soon","date":"2014-11-14T03:23:05.033Z","type":"message"}
{"nick":"creationix","message":"most of the time, 1 will loop around and read from it’s source causing it to yield","date":"2014-11-14T03:23:21.893Z","type":"message"}
{"nick":"creationix","message":"since each segment is it’s own coroutine and only one can run at a time, blocking in one coroutine is what enables the others to continue","date":"2014-11-14T03:24:55.532Z","type":"message"}
{"nick":"creationix","message":"typically all the segments are waiting on read (except in the base of backpressure)","date":"2014-11-14T03:26:19.443Z","type":"message"}
{"nick":"creationix","message":"so 1 gets data, writes to 2 who is waiting, who writes to 3 who is waiting, who writes to the socket, the kernel buffer has room, 3 then blocks on read, returns to 2 who loops back and blocks on read, returns and 1 loops back to blocking on read from the tcp socket","date":"2014-11-14T03:27:14.781Z","type":"message"}
{"nick":"creationix","message":"if there is backpressure, they tend to all get blocked on writing","date":"2014-11-14T03:27:42.189Z","type":"message"}
{"nick":"creationix","message":"I use nil to signal end of stream","date":"2014-11-14T03:28:12.465Z","type":"message"}
{"nick":"rphillips","message":"so a chain from 1,2,3, will potentially run in the same tick","date":"2014-11-14T03:28:13.376Z","type":"message"}
{"nick":"creationix","message":"right, if the codecs are purely CPU transforms (like http and tls)","date":"2014-11-14T03:28:30.377Z","type":"message"}
{"nick":"rphillips","message":"but if one is waiting then it pauses","date":"2014-11-14T03:28:30.789Z","type":"message"}
{"nick":"creationix","message":"so most codec loops look like `for item in read() do write(item) end ; write()`","date":"2014-11-14T03:29:14.685Z","type":"message"}
{"nick":"creationix","message":"with some extra logic in the middle","date":"2014-11-14T03:29:21.191Z","type":"message"}
{"nick":"creationix","message":"for..in will exit when read returns nil, and the final write will forward the nil","date":"2014-11-14T03:29:39.403Z","type":"message"}
{"nick":"rphillips","message":"that helps a lot","date":"2014-11-14T03:31:48.794Z","type":"message"}
{"nick":"creationix","message":"I was worried about performance, that’s why a benchmark was the first thing I did","date":"2014-11-14T03:32:35.260Z","type":"message"}
{"nick":"creationix","message":"but I get around 100k/sec with 3 workers + the wrapped tcp socket","date":"2014-11-14T03:32:51.630Z","type":"message"}
{"nick":"rphillips","message":"http?","date":"2014-11-14T03:33:05.427Z","type":"message"}
{"nick":"creationix","message":"the 3 workers are httpServerDecode, app, and httpServerEncode","date":"2014-11-14T03:33:09.084Z","type":"message"}
{"nick":"creationix","message":"with tls it’s 5","date":"2014-11-14T03:33:14.579Z","type":"message"}
{"nick":"creationix","message":"tls-decode, http-decode, app, http-encode, tls-encode","date":"2014-11-14T03:33:28.574Z","type":"message"}
{"nick":"creationix","message":"the tls encode and decode pair need to be made together sinde handshake bypasses the inner layers","date":"2014-11-14T03:33:54.363Z","type":"message"}
{"nick":"creationix","message":"that why it returned a function instead of just exporting encode/decode","date":"2014-11-14T03:34:08.293Z","type":"message"}
{"nick":"creationix","message":"the tls code came out really elegant with handshake being one loop https://github.com/luvit/luvit/blob/tls-codec/app/modules/codecs/tls.lua#L40-L53","date":"2014-11-14T03:34:57.486Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-11-14T03:35:00.739Z","type":"quit"}
{"nick":"creationix","message":"and then two simple workers to feed the data through the ssl context","date":"2014-11-14T03:35:17.162Z","type":"message"}
{"nick":"creationix","message":"I don’t assume which of tls.encoder or tls.decoder get called first, so I just yield the first, and then handshake in the second","date":"2014-11-14T03:36:23.777Z","type":"message"}
{"nick":"creationix","message":"in this case it’s encoder that gets started first since that’s the order in chain","date":"2014-11-14T03:36:44.396Z","type":"message"}
{"nick":"creationix","message":"*decoder","date":"2014-11-14T03:36:48.614Z","type":"message"}
{"nick":"creationix","message":"https://github.com/luvit/luvit/blob/tls-codec/tests/test-tls-codec.lua#L52","date":"2014-11-14T03:37:09.699Z","type":"message"}
{"nick":"rphillips","message":"that is slick","date":"2014-11-14T03:48:32.638Z","type":"message"}
{"nick":"rphillips","message":"chain(resolver.decode, app, resolver.encode)","date":"2014-11-14T03:51:48.265Z","type":"message"}
{"nick":"rphillips","message":"is that correct?","date":"2014-11-14T03:52:03.910Z","type":"message"}
{"nick":"creationix","message":"chain returns a function that takes read and write","date":"2014-11-14T03:52:53.410Z","type":"message"}
{"nick":"creationix","message":"wrapStream creates a blocking read,write pair from a uv_stream_t","date":"2014-11-14T03:53:06.438Z","type":"message"}
{"nick":"creationix","message":"this is the part I’m considering changing, chain is kinda strange","date":"2014-11-14T03:53:25.037Z","type":"message"}
{"nick":"creationix","message":"we could make a chaining API","date":"2014-11-14T03:54:41.436Z","type":"message"}
{"nick":"creationix","message":"wrap(socket):add(tls):add(http):run(app)","date":"2014-11-14T03:55:08.546Z","type":"message"}
{"nick":"creationix","message":"and add would assume the thing to the left was upstream and .decode from it and .encode on the way out","date":"2014-11-14T03:55:25.267Z","type":"message"}
{"nick":"creationix","message":"conceptually though, chain is much simpler","date":"2014-11-14T03:56:14.486Z","type":"message"}
{"nick":"creationix","message":"it takes several (read,write) workers and creates a new composite worker","date":"2014-11-14T03:56:29.846Z","type":"message"}
{"nick":"creationix","message":"worker concatenation","date":"2014-11-14T03:56:43.804Z","type":"message"}
{"nick":"creationix","message":"and with chain, I suppose you could work wither direction","date":"2014-11-14T03:57:48.134Z","type":"message"}
{"nick":"creationix","message":"we would just need a version of wrapStream that accepted read,write instead of producing it","date":"2014-11-14T03:58:31.913Z","type":"message"}
{"nick":"creationix","message":"and the app would need to produce those instead of accepting them","date":"2014-11-14T03:58:51.310Z","type":"message"}
{"nick":"creationix","message":"hmm, that seems backwards, probably not a good idea","date":"2014-11-14T03:59:00.354Z","type":"message"}
{"nick":"creationix","message":"chain(http.encode, wrapSocket(socket), http.decode)(app())","date":"2014-11-14T04:01:02.069Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T04:03:56.267Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1158 (luvi-up - 5bb5137 : Tim Caswell): The build passed.","date":"2014-11-14T04:03:56.493Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/2c30ee31b755...5bb5137f029a","date":"2014-11-14T04:03:56.493Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/40962281","date":"2014-11-14T04:03:56.493Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T04:03:56.494Z","type":"part"}
{"nick":"kazupon","date":"2014-11-14T04:25:45.357Z","type":"join"}
{"nick":"ra_","date":"2014-11-14T04:48:16.205Z","type":"join"}
{"nick":"ra^^","reason":"Ping timeout: 240 seconds","date":"2014-11-14T04:50:17.252Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-11-14T06:46:37.496Z","type":"quit"}
{"nick":"kazupon","date":"2014-11-14T07:01:27.324Z","type":"join"}
{"nick":"torpor","date":"2014-11-14T08:12:09.699Z","type":"join"}
{"nick":"torpor","reason":"Read error: Connection reset by peer","date":"2014-11-14T08:19:12.727Z","type":"quit"}
{"nick":"torpor","date":"2014-11-14T08:28:55.698Z","type":"join"}
{"nick":"torpor","reason":"Read error: Connection reset by peer","date":"2014-11-14T08:29:55.778Z","type":"quit"}
{"nick":"torpor","date":"2014-11-14T08:31:55.709Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-11-14T08:44:31.488Z","type":"quit"}
{"nick":"kazupon","date":"2014-11-14T08:45:52.642Z","type":"join"}
{"nick":"ra__","date":"2014-11-14T09:19:10.328Z","type":"join"}
{"nick":"ra_","reason":"Ping timeout: 240 seconds","date":"2014-11-14T09:22:17.254Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-11-14T09:38:47.780Z","type":"quit"}
{"nick":"kazupon","date":"2014-11-14T09:43:47.297Z","type":"join"}
{"nick":"torpor1","date":"2014-11-14T10:03:00.712Z","type":"join"}
{"nick":"torpor","reason":"Read error: Connection reset by peer","date":"2014-11-14T10:03:01.190Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-11-14T10:11:43.664Z","type":"quit"}
{"nick":"kazupon","date":"2014-11-14T10:12:24.367Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-11-14T10:44:59.210Z","type":"quit"}
{"nick":"kazupon","date":"2014-11-14T10:45:44.382Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-11-14T10:45:55.651Z","type":"quit"}
{"nick":"kazupon","date":"2014-11-14T10:46:03.572Z","type":"join"}
{"nick":"torpor1","new_nick":"torpor","date":"2014-11-14T11:00:29.369Z","type":"nick"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-11-14T11:05:10.162Z","type":"quit"}
{"nick":"kazupon","date":"2014-11-14T12:16:02.888Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 272 seconds","date":"2014-11-14T12:20:45.829Z","type":"quit"}
{"nick":"kazupon","date":"2014-11-14T13:27:15.605Z","type":"join"}
{"nick":"torpor","reason":"Quit: Leaving.","date":"2014-11-14T13:40:22.532Z","type":"quit"}
{"nick":"kazupon","date":"2014-11-14T14:02:52.753Z","type":"quit"}
{"nick":"kazupon","date":"2014-11-14T14:04:11.846Z","type":"join"}
{"nick":"torpor","date":"2014-11-14T14:16:58.699Z","type":"join"}
{"nick":"torpor","reason":"Quit: Leaving.","date":"2014-11-14T14:23:24.528Z","type":"quit"}
{"nick":"rphillips","message":"we need to get the ca certs into the new luvit","date":"2014-11-14T14:33:35.960Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-11-14T14:41:01.684Z","type":"quit"}
{"nick":"kazupon","date":"2014-11-14T14:42:23.894Z","type":"join"}
{"nick":"torpor","date":"2014-11-14T14:43:48.719Z","type":"join"}
{"nick":"torpor","reason":"Client Quit","date":"2014-11-14T14:46:39.144Z","type":"quit"}
{"nick":"torpor","date":"2014-11-14T14:51:36.700Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-11-14T14:56:25.864Z","type":"quit"}
{"nick":"creationix","message":"rphillips: mornin'","date":"2014-11-14T15:11:43.891Z","type":"message"}
{"nick":"rphillips","message":"morning","date":"2014-11-14T15:11:49.793Z","type":"message"}
{"nick":"creationix","message":"shall I dig into zip writing in luvi or did you still need help understanding the codec stuff?","date":"2014-11-14T15:12:12.070Z","type":"message"}
{"nick":"rphillips","message":"zip writing in luvi would be sweet","date":"2014-11-14T15:16:11.122Z","type":"message"}
{"nick":"rphillips","message":"i've got a good handle on the codec stuff now","date":"2014-11-14T15:16:24.640Z","type":"message"}
{"nick":"tjcravey","date":"2014-11-14T15:23:37.463Z","type":"join"}
{"nick":"torpor1","date":"2014-11-14T15:24:09.712Z","type":"join"}
{"nick":"torpor","reason":"Read error: No route to host","date":"2014-11-14T15:24:26.596Z","type":"quit"}
{"nick":"dan336","date":"2014-11-14T15:26:15.848Z","type":"join"}
{"nick":"rphillips","message":"3 seconds for unit tests... luvit","date":"2014-11-14T15:40:13.027Z","type":"message"}
{"nick":"tjcravey","message":"the link on luvit.io for prebuilt binaries links to a page that only has the source tarball","date":"2014-11-14T15:42:02.000Z","type":"message"}
{"nick":"creationix","message":"tjcravey: yep, looks like we never made binaries for that version.  It’s a manual process","date":"2014-11-14T15:53:10.213Z","type":"message"}
{"nick":"creationix","message":"but the good news is the new luvi version of luvit in progress is much easier to build","date":"2014-11-14T15:53:22.071Z","type":"message"}
{"nick":"tjcravey","message":"Okay, cool.  Thanks!","date":"2014-11-14T15:54:31.163Z","type":"message"}
{"nick":"creationix","message":"tjcravey: btw, are you just starting with luvit?","date":"2014-11-14T15:55:33.869Z","type":"message"}
{"nick":"creationix","message":"the new luvi version is super cool if you want to test it out for me","date":"2014-11-14T15:55:43.829Z","type":"message"}
{"nick":"tjcravey","message":"Yeah, brand new, only heard of it yesterday","date":"2014-11-14T15:55:57.027Z","type":"message"}
{"nick":"creationix","message":"you don’t need a C compiler to build the new version","date":"2014-11-14T15:56:04.261Z","type":"message"}
{"nick":"creationix","message":"what platform are you on?","date":"2014-11-14T15:56:08.821Z","type":"message"}
{"nick":"tjcravey","message":"OS X Yosemite","date":"2014-11-14T15:56:14.545Z","type":"message"}
{"nick":"creationix","message":"git clone git@github.com:luvit/luvit.git --recursive --branch luvi-up","date":"2014-11-14T15:57:15.526Z","type":"message"}
{"nick":"creationix","message":"that command will grab the new luvit branch which has the binaries in a submodule","date":"2014-11-14T15:57:33.295Z","type":"message"}
{"nick":"creationix","message":"make will zip the luvit source with the luvi binary to create a new binary","date":"2014-11-14T15:57:45.583Z","type":"message"}
{"nick":"creationix","message":"assuming you have zip on your machine","date":"2014-11-14T15:57:54.850Z","type":"message"}
{"nick":"creationix","message":"if not, I’m adding zip nativly to luvit today","date":"2014-11-14T15:58:08.075Z","type":"message"}
{"nick":"tjcravey","message":"Yeah, looks like I do have zip, so that should be good","date":"2014-11-14T15:59:22.379Z","type":"message"}
{"nick":"creationix","message":"the legacy luvit required a c compiler and python 2, which is a pain on many systems","date":"2014-11-14T16:00:31.394Z","type":"message"}
{"nick":"creationix","message":"many linuxes have python 3 and windows C compilers are hard to setup","date":"2014-11-14T16:00:42.889Z","type":"message"}
{"nick":"creationix","message":"tjcravey: though the new version of luvit isn’t quite done yet, so the examples on luvit.io probably won’t work","date":"2014-11-14T16:03:13.894Z","type":"message"}
{"nick":"creationix","message":"but I can help you if you want","date":"2014-11-14T16:03:20.168Z","type":"message"}
{"nick":"tjcravey","message":"awesome, sounds good","date":"2014-11-14T16:03:48.170Z","type":"message"}
{"nick":"tjcravey","message":"that seems to have worked perfectly","date":"2014-11-14T16:18:44.633Z","type":"message"}
{"nick":"creationix","message":":)","date":"2014-11-14T16:19:19.678Z","type":"message"}
{"nick":"tjcravey","message":"git clone, cd in to the luvit directory, ran make, and then ./luvit, and now I'm looking at Welcome to the Luvit repl!","date":"2014-11-14T16:19:21.202Z","type":"message"}
{"nick":"creationix","message":"and if you `make test` outside the repl, it should run the unit tests","date":"2014-11-14T16:20:01.407Z","type":"message"}
{"nick":"creationix","message":"takes a couple seconds.  I expect them work, I test on yoesmite daily","date":"2014-11-14T16:20:11.238Z","type":"message"}
{"nick":"tjcravey","message":"# All tests passed","date":"2014-11-14T16:20:25.258Z","type":"message"}
{"nick":"tjcravey","message":":)","date":"2014-11-14T16:20:27.205Z","type":"message"}
{"nick":"creationix","message":"All the primitives are complete, but in the “uv” module","date":"2014-11-14T16:20:49.403Z","type":"message"}
{"nick":"creationix","message":"with the libuv API","date":"2014-11-14T16:20:52.519Z","type":"message"}
{"nick":"creationix","message":"the node.js style APIs are still in progress","date":"2014-11-14T16:21:02.383Z","type":"message"}
{"nick":"creationix","message":"the “bench” folder and the “tests” folder are up-to-date","date":"2014-11-14T16:21:32.276Z","type":"message"}
{"nick":"creationix","message":"the “examples” folder is for legacy luvit and most of them probably don’t work","date":"2014-11-14T16:21:47.187Z","type":"message"}
{"nick":"creationix","message":"yet","date":"2014-11-14T16:21:55.618Z","type":"message"}
{"nick":"tjcravey","message":"that's cool, this gives me something to play with","date":"2014-11-14T16:23:22.153Z","type":"message"}
{"nick":"tjcravey","message":"Just trying to get a feel for the language at this point","date":"2014-11-14T16:23:54.926Z","type":"message"}
{"nick":"creationix","message":"also most the examples in https://github.com/luvit/luv/tree/master/examples should work","date":"2014-11-14T16:24:01.321Z","type":"message"}
{"nick":"creationix","message":"just use “uv” instead of “luv” to require the libuv api","date":"2014-11-14T16:24:10.111Z","type":"message"}
{"nick":"creationix","message":"luvit has a more node.js style require system while luv examples are raw lua requires","date":"2014-11-14T16:24:27.108Z","type":"message"}
{"nick":"tjcravey","message":"cool, thanks for your help!","date":"2014-11-14T16:27:37.381Z","type":"message"}
{"nick":"creationix","message":"enjoy","date":"2014-11-14T16:28:24.751Z","type":"message"}
{"nick":"creationix","message":"Adding deflate to luvi seems to add about 100k to the binary since I’m switching to full miniz instead of just tinfl","date":"2014-11-14T16:47:34.894Z","type":"message"}
{"nick":"aliem","date":"2014-11-14T16:48:06.944Z","type":"join"}
{"nick":"aliem","date":"2014-11-14T16:48:17.643Z","type":"part"}
{"nick":"rphillips","message":"https://github.com/luvit/luvit/pull/532","date":"2014-11-14T16:49:20.519Z","type":"message"}
{"nick":"creationix","message":"I think if I prefix all of miniz’s public functions with static it will shrink the binary a bit","date":"2014-11-14T16:50:48.055Z","type":"message"}
{"nick":"creationix","message":"I include it in luvit’s bindings by including the C file","date":"2014-11-14T16:50:57.321Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T16:53:49.534Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1159 (fixes/fix-fs-example - c07fe18 : Ryan Phillips): The build passed.","date":"2014-11-14T16:53:49.724Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/commit/c07fe189a8a6","date":"2014-11-14T16:53:49.724Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/41017559","date":"2014-11-14T16:53:49.724Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T16:53:49.724Z","type":"part"}
{"nick":"rphillips","message":"fixed that pr up","date":"2014-11-14T16:57:33.011Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T16:59:26.908Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1161 (fixes/fix-fs-example - db67fe4 : Ryan Phillips): The build passed.","date":"2014-11-14T16:59:27.097Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/c07fe189a8a6...db67fe449145","date":"2014-11-14T16:59:27.098Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/41018325","date":"2014-11-14T16:59:27.098Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T16:59:27.099Z","type":"part"}
{"nick":"travis-ci","date":"2014-11-14T17:08:33.336Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1165 (exit-code - 3e2b93e : Ryan Phillips): The build passed.","date":"2014-11-14T17:08:33.525Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/commit/3e2b93e19162","date":"2014-11-14T17:08:33.525Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/41019235","date":"2014-11-14T17:08:33.525Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T17:08:33.525Z","type":"part"}
{"nick":"rphillips","message":"I have a good feeling luvit2 is going to cause the agent to go down in memory usage","date":"2014-11-14T17:08:55.579Z","type":"message"}
{"nick":"rphillips","message":"we might be < 4 MB","date":"2014-11-14T17:09:16.211Z","type":"message"}
{"nick":"creationix","message":"if there a way to tell gcc to treat all functions as static?","date":"2014-11-14T17:09:59.725Z","type":"message"}
{"nick":"creationix","message":"I don’t want to try and find all functions in the 5000 lines of minix and prefix them with static","date":"2014-11-14T17:10:19.838Z","type":"message"}
{"nick":"creationix","message":"but the unused functions are causing ~150kb bloat","date":"2014-11-14T17:10:39.749Z","type":"message"}
{"nick":"rphillips","message":"-finline-functions perhaps","date":"2014-11-14T17:10:51.283Z","type":"message"}
{"nick":"rphillips","message":"https://gcc.gnu.org/onlinedocs/gcc-3.4.6/gcc/Optimize-Options.html","date":"2014-11-14T17:11:11.791Z","type":"message"}
{"nick":"rphillips","message":"-fkeep-inline-functions","date":"2014-11-14T17:11:19.740Z","type":"message"}
{"nick":"creationix","message":"doesn’t seem to make much difference","date":"2014-11-14T17:14:26.063Z","type":"message"}
{"nick":"creationix","message":"-fvisibility=hidden didn’t help either","date":"2014-11-14T17:14:37.171Z","type":"message"}
{"nick":"creationix","message":"I guess it’s OK for now, but some time, we should try to optimize the build","date":"2014-11-14T17:15:48.076Z","type":"message"}
{"nick":"creationix","message":"rphillips: so you think fs.write should keep the old API that matches node?","date":"2014-11-14T17:16:34.987Z","type":"message"}
{"nick":"creationix","message":"I hate it that node and libuv have different orders here, but there isn’t much we can do about it","date":"2014-11-14T17:16:53.659Z","type":"message"}
{"nick":"rphillips","message":"well... i dont have hard feelings about","date":"2014-11-14T17:16:55.531Z","type":"message"}
{"nick":"rphillips","message":"it","date":"2014-11-14T17:16:56.670Z","type":"message"}
{"nick":"rphillips","message":"i was thinking about legacy code","date":"2014-11-14T17:17:07.219Z","type":"message"}
{"nick":"creationix","message":"right, we want migration to be easier","date":"2014-11-14T17:17:34.975Z","type":"message"}
{"nick":"creationix","message":"some people told me they like it when luvit matches node","date":"2014-11-14T17:17:52.160Z","type":"message"}
{"nick":"creationix","message":"since they are porting node code over","date":"2014-11-14T17:18:00.489Z","type":"message"}
{"nick":"creationix","message":"so it’s not just virgo that likes the node style","date":"2014-11-14T17:18:15.175Z","type":"message"}
{"nick":"creationix","message":"I hope luvit can run on boxed this small http://www.amazon.com/TP-LINK-TL-WR702N-Wireless-Repeater-150Mpbs/dp/B007PTCFFW/ref=sr_1_1","date":"2014-11-14T17:30:36.716Z","type":"message"}
{"nick":"creationix","message":"they are about $10 each in china","date":"2014-11-14T17:30:56.206Z","type":"message"}
{"nick":"creationix","message":"commonly used for robot brains by hacker groups","date":"2014-11-14T17:31:10.576Z","type":"message"}
{"nick":"rphillips","message":"slick","date":"2014-11-14T17:31:59.775Z","type":"message"}
{"nick":"creationix","message":"they have between 2 and 16mb of ram depending on the version","date":"2014-11-14T17:32:55.387Z","type":"message"}
{"nick":"creationix","message":"they can run busybox linux and normal lua I know","date":"2014-11-14T17:33:10.707Z","type":"message"}
{"nick":"ra__","reason":"Ping timeout: 240 seconds","date":"2014-11-14T17:42:37.365Z","type":"quit"}
{"nick":"creationix","message":"I’m so tempted to port js-git to luvit","date":"2014-11-14T18:07:56.388Z","type":"message"}
{"nick":"creationix","message":"especially now that inflate and deflate are in luvi","date":"2014-11-14T18:08:06.346Z","type":"message"}
{"nick":"ra^^","date":"2014-11-14T18:13:50.346Z","type":"join"}
{"nick":"rch","message":"i find myself wishing tedit/js-git were completely feature complete so i could use it / hack on it for stuff","date":"2014-11-14T18:14:36.926Z","type":"message"}
{"nick":"rch","message":"pretty often these days","date":"2014-11-14T18:14:40.141Z","type":"message"}
{"nick":"creationix","message":"I need to finish brozula so lua code can run in tedit","date":"2014-11-14T18:16:19.484Z","type":"message"}
{"nick":"creationix","message":"that or implement some sort of proxy to allow it to shell out","date":"2014-11-14T18:16:30.673Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T19:04:37.566Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1167 (luvi-up - 2ec94af : Ryan Phillips): The build passed.","date":"2014-11-14T19:04:37.755Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/5bb5137f029a...2ec94af34073","date":"2014-11-14T19:04:37.755Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/41030039","date":"2014-11-14T19:04:37.755Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T19:04:37.755Z","type":"part"}
{"nick":"rphillips","message":"nginx in luvi... yes please","date":"2014-11-14T19:09:45.397Z","type":"message"}
{"nick":"creationix","message":"nginx in luvi?","date":"2014-11-14T19:13:33.287Z","type":"message"}
{"nick":"rphillips","message":"it would be neat to have an entire replacement in luvi","date":"2014-11-14T19:15:43.542Z","type":"message"}
{"nick":"creationix","message":"you know, if we’re writing the zip and unzip code for luvi, there is no reason to use actual zip format","date":"2014-11-14T19:38:17.836Z","type":"message"}
{"nick":"creationix","message":"rphillips: what do you think about using a simpler format that’s not compat with zip?","date":"2014-11-14T19:39:13.478Z","type":"message"}
{"nick":"rphillips","message":"creationix: wdyt of this? https://github.com/luvit/luvit/compare/add-luvit-module","date":"2014-11-14T19:39:18.768Z","type":"message"}
{"nick":"rphillips","message":"creationix: zip format is nice","date":"2014-11-14T19:39:34.171Z","type":"message"}
{"nick":"rphillips","message":"we could get the zip file from the binary as well.","date":"2014-11-14T19:39:57.204Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T19:40:05.339Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1170 (add-luvit-module - c7ec843 : Ryan Phillips): The build failed.","date":"2014-11-14T19:40:05.531Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/commit/c7ec8434cbef","date":"2014-11-14T19:40:05.531Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/41033500","date":"2014-11-14T19:40:05.531Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T19:40:05.531Z","type":"part"}
{"nick":"creationix","message":"so the “luvit” module creates the luvit style globals?","date":"2014-11-14T19:40:55.627Z","type":"message"}
{"nick":"rphillips","message":"right","date":"2014-11-14T19:41:01.353Z","type":"message"}
{"nick":"rphillips","message":"so we don't have to copy and paste into virgo or other projects","date":"2014-11-14T19:41:17.887Z","type":"message"}
{"nick":"creationix","message":"shouldn’t the _G.require part go there to?","date":"2014-11-14T19:42:15.755Z","type":"message"}
{"nick":"creationix","message":"though I guess that then creates a bit of a bootstrap problem","date":"2014-11-14T19:42:43.575Z","type":"message"}
{"nick":"creationix","message":"you can’t just require ”luvit”","date":"2014-11-14T19:42:51.430Z","type":"message"}
{"nick":"creationix","message":"it would be bundle:/modules/luvit.lua or something","date":"2014-11-14T19:43:03.779Z","type":"message"}
{"nick":"creationix","message":"no that wouldn’t work either","date":"2014-11-14T19:43:18.814Z","type":"message"}
{"nick":"creationix","message":"you’d need to register it using bundle.register","date":"2014-11-14T19:43:35.555Z","type":"message"}
{"nick":"creationix","message":"I like it, +1","date":"2014-11-14T19:44:42.193Z","type":"message"}
{"nick":"creationix","message":"and we could maybe add some of the command-line parsing and/or repl code there too and just call it from main","date":"2014-11-14T19:45:37.375Z","type":"message"}
{"nick":"creationix","message":"though we can just move things over on an as-needed basis","date":"2014-11-14T19:46:06.757Z","type":"message"}
{"nick":"creationix","message":"this bit could go into luvit as a argument parser library https://github.com/luvit/luvit/blob/c7ec8434cbefb6df9ec015880859669c8a2562c5/app/main.lua#L71-L91","date":"2014-11-14T19:47:24.795Z","type":"message"}
{"nick":"cledev","date":"2014-11-14T19:47:34.370Z","type":"join"}
{"nick":"creationix","message":"I mean this part https://github.com/luvit/luvit/blob/c7ec8434cbefb6df9ec015880859669c8a2562c5/app/main.lua#L93-L113","date":"2014-11-14T19:47:41.242Z","type":"message"}
{"nick":"rphillips","message":"creationix: +1 ? https://github.com/luvit/luvit/pull/533","date":"2014-11-14T20:05:09.588Z","type":"message"}
{"nick":"creationix","message":"yep","date":"2014-11-14T20:05:32.569Z","type":"message"}
{"nick":"rphillips","message":"i pull this, and the init PR should work","date":"2014-11-14T20:05:47.335Z","type":"message"}
{"nick":"creationix","message":"cool","date":"2014-11-14T20:06:11.486Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T20:07:26.865Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1172 (luvi-up - 52a5159 : Ryan Phillips): The build passed.","date":"2014-11-14T20:07:27.055Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/2ec94af34073...52a51590a6ff","date":"2014-11-14T20:07:27.055Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/41036081","date":"2014-11-14T20:07:27.055Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T20:07:27.055Z","type":"part"}
{"nick":"travis-ci","date":"2014-11-14T20:09:45.863Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1173 (add-luvit-module - 697cea2 : Ryan Phillips): The build was fixed.","date":"2014-11-14T20:09:46.053Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/c7ec8434cbef...697cea2caad9","date":"2014-11-14T20:09:46.053Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/41036161","date":"2014-11-14T20:09:46.053Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T20:09:46.054Z","type":"part"}
{"nick":"travis-ci","date":"2014-11-14T20:13:11.756Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#98 (zip - 728c7c3 : Tim Caswell): The build has errored.","date":"2014-11-14T20:13:11.987Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/16a78b173101^...728c7c3af800","date":"2014-11-14T20:13:11.988Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/41036364","date":"2014-11-14T20:13:11.988Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T20:13:11.988Z","type":"part"}
{"nick":"travis-ci","date":"2014-11-14T20:16:21.299Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#99 (zip - 395326c : Tim Caswell): The build passed.","date":"2014-11-14T20:16:21.489Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/728c7c3af800...395326c6c1f3","date":"2014-11-14T20:16:21.489Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/41036520","date":"2014-11-14T20:16:21.489Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T20:16:21.489Z","type":"part"}
{"nick":"torpor1","date":"2014-11-14T20:18:08.801Z","type":"part"}
{"nick":"creationix","message":"rphillips: so for luvi zipping, it’s enough to just pass in a list of files and contents and return the zip as a string?","date":"2014-11-14T20:18:40.903Z","type":"message"}
{"nick":"rphillips","message":"hmm. we should support directories, and individual files","date":"2014-11-14T20:19:26.689Z","type":"message"}
{"nick":"creationix","message":"I could also do it as an emitting stream where as you feed it files, it emits data","date":"2014-11-14T20:19:28.107Z","type":"message"}
{"nick":"rphillips","message":"contrib/zip.py ${LUVI_ZIP} deps/luvit-up/app app","date":"2014-11-14T20:20:53.796Z","type":"message"}
{"nick":"typedlambda","date":"2014-11-14T20:20:53.987Z","type":"join"}
{"nick":"rphillips","message":"this is what I started to do in virgo-base","date":"2014-11-14T20:20:59.920Z","type":"message"}
{"nick":"rphillips","message":"in virgo currently we have a bundle.list","date":"2014-11-14T20:21:34.528Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/virgo-agent-toolkit/rackspace-monitoring-agent/blob/master/bundle.list","date":"2014-11-14T20:21:51.138Z","type":"message"}
{"nick":"creationix","message":"that’s handy","date":"2014-11-14T20:22:15.465Z","type":"message"}
{"nick":"creationix","message":"my quesion is, do we need a streaming interface at the low level or just a buffering interface that accepts a completed list of files/folders and returns a string?","date":"2014-11-14T20:22:55.288Z","type":"message"}
{"nick":"rphillips","message":"with luvit... we will need the luvit modules as well in the right spot","date":"2014-11-14T20:22:59.743Z","type":"message"}
{"nick":"rphillips","message":"we might want to support a --prefix and perhaps --trim option to the internal zip location","date":"2014-11-14T20:23:36.637Z","type":"message"}
{"nick":"rphillips","message":"+1? https://github.com/luvit/luvit/pull/534","date":"2014-11-14T20:26:15.033Z","type":"message"}
{"nick":"creationix","message":"where does it call luvit.run()","date":"2014-11-14T20:28:18.365Z","type":"message"}
{"nick":"creationix","message":"the unit tests have their own uv.run and wouldn’t notice if it was missing","date":"2014-11-14T20:29:11.932Z","type":"message"}
{"nick":"rch","message":"instead of bundle list i would love to have something that traverses the dependency tree and bundles like browserify","date":"2014-11-14T20:46:48.035Z","type":"message"}
{"nick":"rch","message":"so we don't need to maintain manually, so we don't include unneeded files, and we don't miss needed ones","date":"2014-11-14T20:47:01.164Z","type":"message"}
{"nick":"rch","message":"i tried to make it but needed a lua parser in lua x.x","date":"2014-11-14T20:47:14.640Z","type":"message"}
{"nick":"rphillips","message":"rch: https://gist.github.com/rphillips/e0a3258e8e37f6357acf","date":"2014-11-14T20:59:41.386Z","type":"message"}
{"nick":"rphillips","message":"this is the idea i had yesterday","date":"2014-11-14T20:59:46.313Z","type":"message"}
{"nick":"rphillips","message":"just use lua to parse","date":"2014-11-14T20:59:53.864Z","type":"message"}
{"nick":"rch","message":"hrm don't think i understand","date":"2014-11-14T21:00:17.712Z","type":"message"}
{"nick":"rphillips","message":"i didn't quite understand the lua parser comment...","date":"2014-11-14T21:01:25.375Z","type":"message"}
{"nick":"rphillips","message":"that was my idea yesterday on packaging the scripts","date":"2014-11-14T21:01:46.226Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T21:02:26.552Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1175 (add-luvit-module - 1d2e571 : Ryan Phillips): The build passed.","date":"2014-11-14T21:02:26.781Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/697cea2caad9...1d2e57106482","date":"2014-11-14T21:02:26.782Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/41041332","date":"2014-11-14T21:02:26.782Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T21:02:26.782Z","type":"part"}
{"nick":"creationix","message":"you don’t need a full lua parser","date":"2014-11-14T21:03:03.768Z","type":"message"}
{"nick":"rch","message":"heh","date":"2014-11-14T21:03:04.109Z","type":"message"}
{"nick":"creationix","message":"in js, I just wrote a simple state machine to scan for requires","date":"2014-11-14T21:03:12.828Z","type":"message"}
{"nick":"creationix","message":"https://github.com/creationix/mine","date":"2014-11-14T21:03:41.810Z","type":"message"}
{"nick":"rch","message":"https://github.com/robert-chiniquy/node-luvit-deps/blob/master/index.js#L49","date":"2014-11-14T21:03:49.540Z","type":"message"}
{"nick":"rch","message":"oh nice","date":"2014-11-14T21:03:51.679Z","type":"message"}
{"nick":"rch","message":"creationix: ^ right so we'd want that but in lua","date":"2014-11-14T21:04:06.268Z","type":"message"}
{"nick":"rch","message":"your state machine is very short","date":"2014-11-14T21:04:09.477Z","type":"message"}
{"nick":"creationix","message":"just implement enough state machine to ignore strings and comments and it’s pretty easy to find require calls","date":"2014-11-14T21:04:24.141Z","type":"message"}
{"nick":"rch","message":"rphillips: ^ yeah so that's basically what i was thinking","date":"2014-11-14T21:05:00.680Z","type":"message"}
{"nick":"rch","message":"generate a transitory bundle list every build based on the modules required from the entry point","date":"2014-11-14T21:05:24.374Z","type":"message"}
{"nick":"creationix","message":"Instead of generating a static list, I’d write a module who’s sole job is to find the list dynamically","date":"2014-11-14T21:06:08.770Z","type":"message"}
{"nick":"creationix","message":"then just eval that file to get the list","date":"2014-11-14T21:06:13.297Z","type":"message"}
{"nick":"rch","message":"cool","date":"2014-11-14T21:06:20.931Z","type":"message"}
{"nick":"creationix","message":"I guess that’s what you meant by transitory","date":"2014-11-14T21:06:34.556Z","type":"message"}
{"nick":"rch","message":"yup","date":"2014-11-14T21:07:36.593Z","type":"message"}
{"nick":"rch","message":"i was going to use https://github.com/virgo-agent-toolkit/luvit-resolve","date":"2014-11-14T21:08:58.278Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T21:55:05.895Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luv#161 (fixes/project - e697e81 : Ryan Phillips): The build failed.","date":"2014-11-14T21:55:06.086Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luv/commit/e697e8197936","date":"2014-11-14T21:55:06.087Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luv/builds/41046301","date":"2014-11-14T21:55:06.087Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T21:55:06.087Z","type":"part"}
{"nick":"travis-ci","date":"2014-11-14T21:56:42.091Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luv#163 (master - a80bd12 : Ryan Phillips): The build was broken.","date":"2014-11-14T21:56:42.281Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luv/compare/46390a04c030...a80bd127fd7f","date":"2014-11-14T21:56:42.281Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luv/builds/41046414","date":"2014-11-14T21:56:42.281Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T21:56:42.281Z","type":"part"}
{"nick":"travis-ci","date":"2014-11-14T21:57:14.828Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#100 (master - 09aca94 : Ryan Phillips): The build passed.","date":"2014-11-14T21:57:15.018Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/16d7a246a44a...09aca94dff84","date":"2014-11-14T21:57:15.018Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/41046400","date":"2014-11-14T21:57:15.018Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T21:57:15.018Z","type":"part"}
{"nick":"rphillips","message":"reverted...","date":"2014-11-14T21:57:51.625Z","type":"message"}
{"nick":"rphillips","message":"something there is the issue","date":"2014-11-14T21:57:55.021Z","type":"message"}
{"nick":"rphillips","message":"with the project() declarations","date":"2014-11-14T21:58:01.112Z","type":"message"}
{"nick":"rphillips","message":"worked perfect on windows.","date":"2014-11-14T21:58:18.763Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/luvit/luvi/pull/25","date":"2014-11-14T21:59:35.304Z","type":"message"}
{"nick":"rphillips","message":"testing","date":"2014-11-14T21:59:36.203Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T22:00:51.600Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#101 (master - 3f5b83a : Ryan Phillips): The build passed.","date":"2014-11-14T22:00:51.829Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/09aca94dff84...3f5b83a945fb","date":"2014-11-14T22:00:51.829Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/41046995","date":"2014-11-14T22:00:51.829Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T22:00:51.829Z","type":"part"}
{"nick":"rphillips","message":"yep. the top level project needs project() and is used first","date":"2014-11-14T22:03:48.691Z","type":"message"}
{"nick":"rphillips","message":"http://www.cmake.org/cmake/help/v3.0/command/project.html","date":"2014-11-14T22:03:53.850Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T22:05:14.820Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#102 (fixes/project - 63ac770 : Ryan Phillips): The build passed.","date":"2014-11-14T22:05:15.009Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/commit/63ac7708878a","date":"2014-11-14T22:05:15.010Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/41047218","date":"2014-11-14T22:05:15.010Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T22:05:15.010Z","type":"part"}
{"nick":"travis-ci","date":"2014-11-14T22:11:11.843Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#104 (master - 94370d6 : Ryan Phillips): The build passed.","date":"2014-11-14T22:11:12.032Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/3f5b83a945fb...94370d6fd079","date":"2014-11-14T22:11:12.032Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/41047854","date":"2014-11-14T22:11:12.032Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T22:11:12.032Z","type":"part"}
{"nick":"travis-ci","date":"2014-11-14T22:20:48.534Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#105 (master - 5e7df22 : Ryan Phillips): The build passed.","date":"2014-11-14T22:20:48.724Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/94370d6fd079...5e7df223faf3","date":"2014-11-14T22:20:48.724Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/41048584","date":"2014-11-14T22:20:48.724Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T22:20:48.724Z","type":"part"}
{"nick":"mattlgy","date":"2014-11-14T22:42:10.335Z","type":"join"}
{"nick":"mattlgy","message":"Noob question: For `http.request`, what will be in `data` in `res:on(\"data\", function (data)`? Will that be a Node-y style stream or can I rely on that being the full http response's body?","date":"2014-11-14T22:46:37.329Z","type":"message"}
{"nick":"creationix","message":"probably node style packets","date":"2014-11-14T22:53:28.625Z","type":"message"}
{"nick":"creationix","message":"rphillips: dinner time.  I pushed what I’ve got for zip encoding","date":"2014-11-14T22:53:41.585Z","type":"message"}
{"nick":"creationix","message":"it almost works","date":"2014-11-14T22:53:44.106Z","type":"message"}
{"nick":"creationix","message":"though miniz does have zip code inside it, we could perhaps just bind to that instead of implementing it in lua","date":"2014-11-14T22:54:00.688Z","type":"message"}
{"nick":"creationix","message":"my main issue is it uses it’s own file I/O","date":"2014-11-14T22:54:08.565Z","type":"message"}
{"nick":"creationix","message":"I’d rather virtualize that","date":"2014-11-14T22:54:24.716Z","type":"message"}
{"nick":"rphillips","message":"gotcha","date":"2014-11-14T22:54:54.733Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/luvit/luvi/pull/26","date":"2014-11-14T22:55:50.487Z","type":"message"}
{"nick":"rphillips","message":"hmm. didn't quite work","date":"2014-11-14T22:56:36.064Z","type":"message"}
{"nick":"7F1ABV4OM","date":"2014-11-14T22:58:06.828Z","type":"join"}
{"nick":"7F1ABV4OM","message":"luvit/luvi#106 (zip - d528fff : Tim Caswell): The build passed.","date":"2014-11-14T22:58:07.017Z","type":"message"}
{"nick":"7F1ABV4OM","message":"Change view : https://github.com/luvit/luvi/compare/395326c6c1f3...d528fffe5edd","date":"2014-11-14T22:58:07.017Z","type":"message"}
{"nick":"7F1ABV4OM","message":"Build details : http://travis-ci.org/luvit/luvi/builds/41051741","date":"2014-11-14T22:58:07.018Z","type":"message"}
{"nick":"7F1ABV4OM","date":"2014-11-14T22:58:07.018Z","type":"part"}
{"nick":"tjcravey","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2014-11-14T22:58:30.080Z","type":"quit"}
{"nick":"travis-ci","date":"2014-11-14T22:58:43.577Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#107 (fixes/parallel_build - 6dea3aa : Ryan Phillips): The build failed.","date":"2014-11-14T22:58:43.766Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/commit/6dea3aaf94d0","date":"2014-11-14T22:58:43.767Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/41051882","date":"2014-11-14T22:58:43.767Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T22:58:43.767Z","type":"part"}
{"nick":"travis-ci","date":"2014-11-14T23:01:40.460Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#109 (fixes/parallel_build - 392c988 : Ryan Phillips): The build passed.","date":"2014-11-14T23:01:40.649Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/6dea3aaf94d0...392c9887b70e","date":"2014-11-14T23:01:40.649Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/41052194","date":"2014-11-14T23:01:40.649Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T23:01:40.650Z","type":"part"}
{"nick":"rphillips","message":"travis build machines have 32 virtual processes... man","date":"2014-11-14T23:02:28.002Z","type":"message"}
{"nick":"rphillips","message":"precessors*","date":"2014-11-14T23:02:33.402Z","type":"message"}
{"nick":"rphillips","message":"the 'large' build (with openssl) went from 2 minute 40 seconds to 1 minute 14 seconds","date":"2014-11-14T23:03:58.208Z","type":"message"}
{"nick":"rphillips","message":"looks like it depends though","date":"2014-11-14T23:04:38.311Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T23:08:30.518Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#109 (fixes/parallel_build - 392c988 : Ryan Phillips): The build passed.","date":"2014-11-14T23:08:30.707Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/6dea3aaf94d0...392c9887b70e","date":"2014-11-14T23:08:30.708Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/41052194","date":"2014-11-14T23:08:30.708Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T23:08:30.708Z","type":"part"}
{"nick":"rphillips","message":"ninja is supported by cmake","date":"2014-11-14T23:10:40.456Z","type":"message"}
{"nick":"rphillips","message":"-Gninja to the cmake options","date":"2014-11-14T23:10:47.265Z","type":"message"}
{"nick":"rphillips","message":"then ninja from the commandline","date":"2014-11-14T23:10:53.008Z","type":"message"}
{"nick":"rphillips","message":"luvi builds w/ openssl in 24 seconds","date":"2014-11-14T23:10:59.947Z","type":"message"}
{"nick":"mattlgy","reason":"Remote host closed the connection","date":"2014-11-14T23:16:17.451Z","type":"quit"}
{"nick":"travis-ci","date":"2014-11-14T23:17:53.913Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#111 (master - f505bae : Ryan Phillips): The build passed.","date":"2014-11-14T23:17:54.103Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/5e7df223faf3...f505bae597ef","date":"2014-11-14T23:17:54.103Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/41053447","date":"2014-11-14T23:17:54.103Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T23:17:54.103Z","type":"part"}
{"nick":"travis-ci","date":"2014-11-14T23:29:05.576Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#112 (fixes/add_generator_support - fa0f070 : Ryan Phillips): The build passed.","date":"2014-11-14T23:29:05.765Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/commit/fa0f070b7c86","date":"2014-11-14T23:29:05.766Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/41054326","date":"2014-11-14T23:29:05.766Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-14T23:29:05.766Z","type":"part"}
{"nick":"rphillips","message":"https://github.com/luvit/luvi/pull/27","date":"2014-11-14T23:30:41.356Z","type":"message"}
{"nick":"rphillips","message":"dinner","date":"2014-11-14T23:30:44.401Z","type":"message"}
