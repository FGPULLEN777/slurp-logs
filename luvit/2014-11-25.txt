{"nick":"dan336","message":"oh I used the binary.","date":"2014-11-25T00:01:51.255Z","type":"message"}
{"nick":"dan336","message":"I haven't used the new luvi/luvit mix, just because there were a few issues with it a while back on osx that I just didn't have time to look into. but it probably works now.","date":"2014-11-25T00:03:26.103Z","type":"message"}
{"nick":"dan336","message":"but I'll starting looking into it soon :)","date":"2014-11-25T00:03:35.781Z","type":"message"}
{"nick":"dan336","message":"luvit really is awesome just FYI.","date":"2014-11-25T00:03:51.374Z","type":"message"}
{"nick":"dan336","message":"the coroutine based parser was really cool though. I had to write an async parser for a redis save file once, that was horrible. and having a stateful coroutine based parser would have really made it 1000x easier.","date":"2014-11-25T00:05:42.117Z","type":"message"}
{"nick":"dan336","reason":"Quit: Leaving.","date":"2014-11-25T00:06:32.760Z","type":"quit"}
{"nick":"travis-ci","date":"2014-11-25T00:25:43.548Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1255 (process - c17b373 : Ryan Phillips): The build passed.","date":"2014-11-25T00:25:43.647Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/c6edd210c13a...c17b373241c1","date":"2014-11-25T00:25:43.702Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/42027448","date":"2014-11-25T00:25:43.703Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-25T00:25:43.703Z","type":"part"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-11-25T00:28:35.371Z","type":"quit"}
{"nick":"a_le","date":"2014-11-25T00:29:11.401Z","type":"join"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-11-25T00:33:10.034Z","type":"quit"}
{"nick":"a_le","date":"2014-11-25T00:33:47.578Z","type":"join"}
{"nick":"rphillips","message":"hmm. the spawn on exit handler doesn't seem to be consistently called on windows","date":"2014-11-25T00:33:49.933Z","type":"message"}
{"nick":"rphillips","message":"might be the stdin issue, let's see","date":"2014-11-25T00:35:36.292Z","type":"message"}
{"nick":"cledev","reason":"Ping timeout: 264 seconds","date":"2014-11-25T01:01:41.950Z","type":"quit"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-11-25T01:17:12.233Z","type":"quit"}
{"nick":"UniOn","reason":"Remote host closed the connection","date":"2014-11-25T01:20:35.474Z","type":"quit"}
{"nick":"dan336","date":"2014-11-25T01:22:01.428Z","type":"join"}
{"nick":"cledev","date":"2014-11-25T01:35:43.091Z","type":"join"}
{"nick":"a_le","date":"2014-11-25T01:37:28.285Z","type":"join"}
{"nick":"cledev","reason":"Ping timeout: 255 seconds","date":"2014-11-25T01:59:27.094Z","type":"quit"}
{"nick":"dan336","reason":"Quit: Leaving.","date":"2014-11-25T02:02:30.172Z","type":"quit"}
{"nick":"rphillips","message":"i'm going to pull in luvit-streams I think","date":"2014-11-25T02:30:21.898Z","type":"message"}
{"nick":"rphillips","message":"any objections?","date":"2014-11-25T02:30:43.580Z","type":"message"}
{"nick":"jirwin","message":"hdms: gladd to see you made it here","date":"2014-11-25T02:47:28.209Z","type":"message"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-11-25T02:54:07.887Z","type":"quit"}
{"nick":"cledev","date":"2014-11-25T02:55:05.489Z","type":"join"}
{"nick":"rphillips","message":"hdms: welcome!","date":"2014-11-25T03:27:02.374Z","type":"message"}
{"nick":"cledev","reason":"Ping timeout: 264 seconds","date":"2014-11-25T03:36:40.495Z","type":"quit"}
{"nick":"travis-ci","date":"2014-11-25T04:05:03.419Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#172 (master - 4d4f375 : Ryan Phillips): The build passed.","date":"2014-11-25T04:05:03.512Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/177f066e4a5e...4d4f37503787","date":"2014-11-25T04:05:03.512Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/42039990","date":"2014-11-25T04:05:03.512Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-25T04:05:03.512Z","type":"part"}
{"nick":"phore","date":"2014-11-25T04:27:38.056Z","type":"join"}
{"nick":"phore","reason":"Client Quit","date":"2014-11-25T04:29:59.647Z","type":"quit"}
{"nick":"hdms","reason":"Quit: hdms","date":"2014-11-25T04:45:19.552Z","type":"quit"}
{"nick":"rch","message":"rphillips: awesome","date":"2014-11-25T05:39:14.066Z","type":"message"}
{"nick":"rch","message":"songgao: ^","date":"2014-11-25T05:39:16.711Z","type":"message"}
{"nick":"a_le","date":"2014-11-25T06:52:11.554Z","type":"join"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-11-25T08:06:04.736Z","type":"quit"}
{"nick":"DarkGod","date":"2014-11-25T08:23:34.679Z","type":"join"}
{"nick":"cledev","date":"2014-11-25T08:39:04.089Z","type":"join"}
{"nick":"torpor","reason":"Quit: Leaving.","date":"2014-11-25T10:19:04.531Z","type":"quit"}
{"nick":"cledev","reason":"Ping timeout: 244 seconds","date":"2014-11-25T11:05:21.091Z","type":"quit"}
{"nick":"cledev","date":"2014-11-25T11:32:06.460Z","type":"join"}
{"nick":"hdms","date":"2014-11-25T13:04:44.866Z","type":"join"}
{"nick":"hdms","message":"jirwin: rphillips thank you","date":"2014-11-25T13:33:53.743Z","type":"message"}
{"nick":"torpor","date":"2014-11-25T14:50:28.245Z","type":"join"}
{"nick":"dan336","date":"2014-11-25T15:37:13.178Z","type":"join"}
{"nick":"UniOn","date":"2014-11-25T15:41:53.916Z","type":"join"}
{"nick":"a_le","date":"2014-11-25T15:43:07.283Z","type":"join"}
{"nick":"songgao","message":"rch rphillips I'm all in for pulling in luvit-stream :D","date":"2014-11-25T16:09:36.495Z","type":"message"}
{"nick":"creationix","message":"luvit-stream is fine","date":"2014-11-25T16:12:12.564Z","type":"message"}
{"nick":"cledev","reason":"Ping timeout: 250 seconds","date":"2014-11-25T17:05:48.375Z","type":"quit"}
{"nick":"cledev","date":"2014-11-25T17:07:17.160Z","type":"join"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-11-25T17:20:22.009Z","type":"quit"}
{"nick":"a_le","date":"2014-11-25T17:30:57.270Z","type":"join"}
{"nick":"torpor1","date":"2014-11-25T17:37:36.766Z","type":"join"}
{"nick":"torpor","reason":"Ping timeout: 256 seconds","date":"2014-11-25T17:38:32.685Z","type":"quit"}
{"nick":"mattlgy","date":"2014-11-25T17:51:01.556Z","type":"join"}
{"nick":"hdms","reason":"Quit: hdms","date":"2014-11-25T17:56:05.681Z","type":"quit"}
{"nick":"a_le","reason":"Read error: Connection reset by peer","date":"2014-11-25T18:06:02.501Z","type":"quit"}
{"nick":"DarkGod","reason":"Ping timeout: 264 seconds","date":"2014-11-25T18:14:29.229Z","type":"quit"}
{"nick":"travis-ci","date":"2014-11-25T18:21:18.606Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#174 (master - ea5883a : Tim Caswell): The build passed.","date":"2014-11-25T18:21:18.662Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/4d4f37503787...ea5883ac1a2f","date":"2014-11-25T18:21:18.662Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/42110314","date":"2014-11-25T18:21:18.663Z","type":"message"}
{"nick":"travis-ci","date":"2014-11-25T18:21:18.663Z","type":"part"}
{"nick":"cledev","reason":"Ping timeout: 255 seconds","date":"2014-11-25T18:21:48.081Z","type":"quit"}
{"nick":"phore","date":"2014-11-25T18:22:28.843Z","type":"join"}
{"nick":"cledev","date":"2014-11-25T18:24:51.132Z","type":"join"}
{"nick":"creationix","message":"dan336: Yeah, being able to suspend coroutines makes parser logic a lot simpler","date":"2014-11-25T19:38:33.376Z","type":"message"}
{"nick":"creationix","message":"though I’m really liking the new decoder style from imzyxwvu","date":"2014-11-25T19:39:07.341Z","type":"message"}
{"nick":"creationix","message":"https://groups.google.com/forum/#!topic/luvit/y6ZB7dyAwzo","date":"2014-11-25T19:39:48.886Z","type":"message"}
{"nick":"creationix","message":"here is my decoder for a binary protocol I designed over the weekend https://github.com/luvit/lit/blob/d8034de01b90cf6805e85324955045c9c1f4590a/server.lua#L19-L86","date":"2014-11-25T19:40:09.515Z","type":"message"}
{"nick":"dan336","message":"cool, that looks nice. very simple","date":"2014-11-25T19:45:21.300Z","type":"message"}
{"nick":"dan336","message":"creationx: so lit is going to be the pkg repo for luvit then?","date":"2014-11-25T19:46:04.092Z","type":"message"}
{"nick":"creationix","message":"perhaps","date":"2014-11-25T19:46:09.976Z","type":"message"}
{"nick":"creationix","message":"I’ve got a pretty good design for blob storage and syncing, still figuring out the high-level semantics","date":"2014-11-25T19:46:29.776Z","type":"message"}
{"nick":"creationix","message":"also feel free to think of a new name","date":"2014-11-25T19:46:48.897Z","type":"message"}
{"nick":"dan336","message":":) alright","date":"2014-11-25T19:47:02.306Z","type":"message"}
{"nick":"dan336","message":"creationx: how complete is the git-fs implementation? I just am noticing that you included those files in the repo","date":"2014-11-25T19:49:17.923Z","type":"message"}
{"nick":"creationix","message":"git core is pretty simple, what were you wanting to use it for","date":"2014-11-25T19:50:31.660Z","type":"message"}
{"nick":"creationix","message":"this implementation doesn’t read or write packed refs or objects","date":"2014-11-25T19:50:42.909Z","type":"message"}
{"nick":"creationix","message":"(the older JS version does though, it’s not too hard to port over)","date":"2014-11-25T19:51:06.031Z","type":"message"}
{"nick":"creationix","message":"so the basic idea of lit currently is I have two services:","date":"2014-11-25T19:51:43.242Z","type":"message"}
{"nick":"creationix","message":"one is the selective replicating database.  It’s very granualar and content addressable so that repeated files are only stored and synced once.  (Updating to a newer version of a package you already have will only sync down the changed files)","date":"2014-11-25T19:52:51.182Z","type":"message"}
{"nick":"creationix","message":"the actual sync protocol is very simple and should be very fast","date":"2014-11-25T19:53:02.680Z","type":"message"}
{"nick":"creationix","message":"publishing to the central database will require an one-time access token from the other service to prevent people from using it as arbitrary storage and to provide some level of assurance of package contents.","date":"2014-11-25T19:53:44.235Z","type":"message"}
{"nick":"creationix","message":"the high-level service will handle user accounts, package names and versions and token creation for publishing to the data store","date":"2014-11-25T19:54:04.737Z","type":"message"}
{"nick":"creationix","message":"currently, the idea is to authenticate the web site using github oauth and the cli tool using your ssh private keys that you’ve registered via githib","date":"2014-11-25T19:54:33.544Z","type":"message"}
{"nick":"dan336","message":"thats a good idea.","date":"2014-11-25T19:54:45.378Z","type":"message"}
{"nick":"dan336","message":"the ssh keys i mean","date":"2014-11-25T19:55:26.943Z","type":"message"}
{"nick":"creationix","message":"publishing a package will import the files into your local git db, create a signed tag using your private key and send the tag to the high-level server to get the token.  Once you actually syncup the files the server doesn’t have yet, it will become available in the general registry","date":"2014-11-25T19:55:34.437Z","type":"message"}
{"nick":"creationix","message":"the db is git-like.  It uses compatable hashes for tags, trees and blobs, but isn’t based on refs and commits like git","date":"2014-11-25T19:56:03.585Z","type":"message"}
{"nick":"creationix","message":"so if we decide later to mirror the central repository on github, it should be pretty trivial to convert it to an actual git repo using namespaced refs for the tags","date":"2014-11-25T19:56:44.979Z","type":"message"}
{"nick":"creationix","message":"refs/tags/foo/v0.1.2 for example","date":"2014-11-25T19:56:56.388Z","type":"message"}
{"nick":"dan336","message":"so will all packages be signed using the publishing users priv key?","date":"2014-11-25T19:57:10.055Z","type":"message"}
{"nick":"creationix","message":"that’s the idea currently","date":"2014-11-25T19:57:20.982Z","type":"message"}
{"nick":"creationix","message":"and I’ll also use that signature to authenticate publishes to the central repository","date":"2014-11-25T19:57:33.761Z","type":"message"}
{"nick":"creationix","message":"the cli client will handle the importing, tagging and signing","date":"2014-11-25T19:58:04.262Z","type":"message"}
{"nick":"DarkGod","date":"2014-11-25T19:58:13.577Z","type":"join"}
{"nick":"dan336","message":"thats good.","date":"2014-11-25T19:58:16.861Z","type":"message"}
{"nick":"creationix","message":"for now it will just assume $HOME/.ssh/id_rsa","date":"2014-11-25T19:58:34.433Z","type":"message"}
{"nick":"creationix","message":"which will be the 95% case I think","date":"2014-11-25T19:58:40.968Z","type":"message"}
{"nick":"dan336","message":"good security without forcing bothersome authentication is always very nice.","date":"2014-11-25T19:58:54.588Z","type":"message"}
{"nick":"dan336","message":"yeah it will.","date":"2014-11-25T19:59:01.457Z","type":"message"}
{"nick":"creationix","message":"gpg is too much, we’ll have terrible adoption","date":"2014-11-25T19:59:04.949Z","type":"message"}
{"nick":"creationix","message":"but I do want to add it as an option later on","date":"2014-11-25T19:59:13.709Z","type":"message"}
{"nick":"creationix","message":"it’s got a much better web of trust than just using github keys","date":"2014-11-25T19:59:28.032Z","type":"message"}
{"nick":"dan336","message":"I was just going to ask :)","date":"2014-11-25T19:59:40.909Z","type":"message"}
{"nick":"creationix","message":"I have ideas around integrating with projects git repos using submodules or something, but for now I think I’ll just keep the git compatable db as an implementation detail","date":"2014-11-25T20:00:35.768Z","type":"message"}
{"nick":"creationix","message":"the user doesn’t even need git installed to use this tool","date":"2014-11-25T20:00:45.986Z","type":"message"}
{"nick":"dan336","message":"thats cool.","date":"2014-11-25T20:01:19.946Z","type":"message"}
{"nick":"creationix","message":"`lit install foo` will fetch the latest tag hash from the high-level server, sync down the missing objects into the local db and export the tree to the disk at modules/foo","date":"2014-11-25T20:01:36.714Z","type":"message"}
{"nick":"creationix","message":"and if you don’t have internet, but have a cached result locally, it can work offline","date":"2014-11-25T20:02:27.800Z","type":"message"}
{"nick":"dan336","message":"thats makes sense.","date":"2014-11-25T20:02:41.410Z","type":"message"}
{"nick":"dan336","message":"so it really is similar to get-server then, but without the nasty protocol.","date":"2014-11-25T20:02:59.972Z","type":"message"}
{"nick":"dan336","message":"and some other things thrown in.","date":"2014-11-25T20:03:08.108Z","type":"message"}
{"nick":"creationix","message":"yeah, much simpler and more granular protocol","date":"2014-11-25T20:03:14.787Z","type":"message"}
{"nick":"creationix","message":"probably not quite as effecient on the wire, but much lighter load on the server","date":"2014-11-25T20:03:25.973Z","type":"message"}
{"nick":"creationix","message":"pack-protocol is killer on the server","date":"2014-11-25T20:03:34.263Z","type":"message"}
{"nick":"creationix","message":"and much easier to implement or debug","date":"2014-11-25T20:03:50.230Z","type":"message"}
{"nick":"rch","message":"not using package.lua or anything to track which packages should be installed? i.e. the install model is still check in packages to the project repo","date":"2014-11-25T20:03:53.172Z","type":"message"}
{"nick":"creationix","message":"still thinking that part","date":"2014-11-25T20:04:16.056Z","type":"message"}
{"nick":"dan336","message":"personally I think its a little to early to think about efficiency on the wire :) you will hit other things much sooner.","date":"2014-11-25T20:04:25.870Z","type":"message"}
{"nick":"rch","message":"for me it's about correctness, a package manifest lets me use semver or something to make sure i have the right version of everything","date":"2014-11-25T20:04:51.575Z","type":"message"}
{"nick":"dan336","message":"like the pack-protocol :)","date":"2014-11-25T20:04:53.548Z","type":"message"}
{"nick":"rch","message":"oh heh","date":"2014-11-25T20:05:20.943Z","type":"message"}
{"nick":"dan336","message":"how are the objects stored in the db? is there a 1:1 relation between the git objects and the objects stored in the db?","date":"2014-11-25T20:06:18.337Z","type":"message"}
{"nick":"dan336","message":"aka, the hashes are the same?","date":"2014-11-25T20:06:25.654Z","type":"message"}
{"nick":"creationix","message":"yes, the hashes are git compatable","date":"2014-11-25T20:13:42.921Z","type":"message"}
{"nick":"creationix","message":"rch: so yes, I’ll be supporting semver, and a npm shrinkwrap style thing by default for top-level apps","date":"2014-11-25T20:14:14.618Z","type":"message"}
{"nick":"creationix","message":"libraries will declare what semver range they support and the top app will grab the the newest versions of everything that fits and then lock it all to git hashes","date":"2014-11-25T20:14:44.945Z","type":"message"}
{"nick":"creationix","message":"(this is why I was considering git submodules since that’s how they natively work)","date":"2014-11-25T20:15:02.384Z","type":"message"}
{"nick":"creationix","message":"and when the user runs `lit update` or something it will unlock the versions, grab the latest versions of app deps recursivly and then re-lock.  The programmer will re-test everything before commiting the new locked versions","date":"2014-11-25T20:15:43.638Z","type":"message"}
{"nick":"creationix","message":"but that way library authors don’t have to bump their version just to get patch versions of deps","date":"2014-11-25T20:16:15.726Z","type":"message"}
{"nick":"creationix","message":"should be the best of both worlds","date":"2014-11-25T20:16:25.358Z","type":"message"}
{"nick":"creationix","message":"safe and convenient","date":"2014-11-25T20:16:30.321Z","type":"message"}
{"nick":"rch","message":"creationix: cool","date":"2014-11-25T20:16:35.577Z","type":"message"}
{"nick":"creationix","message":"what I’m still figuring out is how exactly to store the ranges in a package.json style file and the locked down deps in a shrinkwrap style file","date":"2014-11-25T20:17:03.212Z","type":"message"}
{"nick":"creationix","message":"or maybe same file for both, but I’d rather separate hand-written files from auto-generated stuff","date":"2014-11-25T20:17:24.953Z","type":"message"}
{"nick":"creationix","message":"but then again, I really like how `npm —save` adds the dep for you in package.json","date":"2014-11-25T20:17:44.337Z","type":"message"}
{"nick":"rch","message":"me too","date":"2014-11-25T20:17:48.476Z","type":"message"}
{"nick":"creationix","message":"one thing different from npm is I’ll install deps flat by default","date":"2014-11-25T20:18:08.626Z","type":"message"}
{"nick":"rch","message":"weird","date":"2014-11-25T20:18:14.091Z","type":"message"}
{"nick":"rch","message":"so only branch if versions conflict?","date":"2014-11-25T20:18:22.727Z","type":"message"}
{"nick":"rch","message":"not sure if you saw https://github.com/virgo-agent-toolkit/luvit-pkg/pull/1/files btw, we worked on this a bit","date":"2014-11-25T20:18:41.301Z","type":"message"}
{"nick":"creationix","message":"right, if there are conflicts ask the user if it should install both as nested deps or override the version of the older one","date":"2014-11-25T20:19:21.165Z","type":"message"}
{"nick":"creationix","message":"flat is much better whenever possible for many reasons.  It shouldn’t default to nested just to cover some edge case","date":"2014-11-25T20:20:17.539Z","type":"message"}
{"nick":"rch","message":"interesting","date":"2014-11-25T20:20:30.502Z","type":"message"}
{"nick":"dan336","message":"yeah you gotta be careful about that, I have a had few projects that I had to fork a deps just so that everything lined up correctly with the dpes versions. kindof annoying. but asking should be enough.","date":"2014-11-25T20:20:40.784Z","type":"message"}
{"nick":"creationix","message":"also I plan on making pulling in deps from arbitrary git repos easy too","date":"2014-11-25T20:21:07.149Z","type":"message"}
{"nick":"creationix","message":"so if you have some deps not in the central repository, they should meld well","date":"2014-11-25T20:21:19.935Z","type":"message"}
{"nick":"dan336","message":"cool, even local remotes?","date":"2014-11-25T20:21:27.756Z","type":"message"}
{"nick":"dan336","message":"like a file path \"file:://repo?","date":"2014-11-25T20:21:37.720Z","type":"message"}
{"nick":"creationix","message":"sure, why not","date":"2014-11-25T20:21:40.101Z","type":"message"}
{"nick":"creationix","message":"js-git can already read local repos perfectly, it wouldn’t take much to add it here","date":"2014-11-25T20:21:55.546Z","type":"message"}
{"nick":"creationix","message":"the hardest part is figuring out the mismatch between tags pointing to trees and commits pointing to trees","date":"2014-11-25T20:22:15.969Z","type":"message"}
{"nick":"creationix","message":"nevermind, that’s not hard","date":"2014-11-25T20:22:29.724Z","type":"message"}
{"nick":"rch","message":"heh","date":"2014-11-25T20:22:35.684Z","type":"message"}
{"nick":"creationix","message":"(at one point I had allowed tags pointing to files, but if it’s always trees, then it’s the same as commits)","date":"2014-11-25T20:22:58.764Z","type":"message"}
{"nick":"creationix","message":"annotated tags can point to anything","date":"2014-11-25T20:23:16.817Z","type":"message"}
{"nick":"hdms","date":"2014-11-25T20:23:37.658Z","type":"join"}
{"nick":"creationix","message":"commits, other annotated tags, trees, or blobs","date":"2014-11-25T20:23:38.876Z","type":"message"}
{"nick":"creationix","message":"dan336: and since the central db server is super simple to setup, running a custom repository should be more common","date":"2014-11-25T20:24:30.919Z","type":"message"}
{"nick":"creationix","message":"or a local one","date":"2014-11-25T20:24:35.913Z","type":"message"}
{"nick":"creationix","message":"(on disk)","date":"2014-11-25T20:24:42.687Z","type":"message"}
{"nick":"cledev","reason":"Ping timeout: 264 seconds","date":"2014-11-25T20:25:17.313Z","type":"quit"}
{"nick":"dan336","message":"yeah, i remember when we tried setting up our own npm db.","date":"2014-11-25T20:25:37.209Z","type":"message"}
{"nick":"dan336","message":"that was fun.","date":"2014-11-25T20:25:39.817Z","type":"message"}
{"nick":"dan336","message":"so how will the central server work? is it going to be a single node or will it be a multi node system with a replication layer?","date":"2014-11-25T20:26:18.144Z","type":"message"}
{"nick":"dan336","message":"and are you going to develop it your self?","date":"2014-11-25T20:26:32.261Z","type":"message"}
{"nick":"dan336","message":"or is it still being planed?","date":"2014-11-25T20:26:55.491Z","type":"message"}
{"nick":"creationix","message":"yeah, I’m working on it now.  I’m not too worried about scaling it, the object store will easily shard since it’s just hashes","date":"2014-11-25T20:27:05.770Z","type":"message"}
{"nick":"creationix","message":"the high-level front-end is a fairly traditional web app style thing","date":"2014-11-25T20:27:18.172Z","type":"message"}
{"nick":"creationix","message":"the first version will probably just be direct hashes and skip the high-level server","date":"2014-11-25T20:27:56.628Z","type":"message"}
{"nick":"creationix","message":"should have that this week","date":"2014-11-25T20:28:01.374Z","type":"message"}
{"nick":"dan336","message":"sounds good.","date":"2014-11-25T20:28:13.011Z","type":"message"}
{"nick":"dan336","message":"so then each shard will have a backup?","date":"2014-11-25T20:28:24.292Z","type":"message"}
{"nick":"creationix","message":"yeah, replicating is simply a matter of walking the hashes and downloading anything you don’t have yet","date":"2014-11-25T20:28:50.253Z","type":"message"}
{"nick":"creationix","message":"I’m using files for now, but plan on moving to leveldb later","date":"2014-11-25T20:29:07.150Z","type":"message"}
{"nick":"creationix","message":"hmm, might need a more effecient replication algo once it gets bigger","date":"2014-11-25T20:29:54.052Z","type":"message"}
{"nick":"creationix","message":"or just shard to keep individual databases small","date":"2014-11-25T20:30:09.523Z","type":"message"}
{"nick":"creationix","message":"could also do like the distributed protocols and write to both when new data is written and read from both when files are read (and detecting missing files and syncing them)","date":"2014-11-25T20:30:55.498Z","type":"message"}
{"nick":"dan336","message":"what about locating the data you want, if you connect to shard1 and the data is on shard2… do you connect to a proxy?","date":"2014-11-25T20:31:06.914Z","type":"message"}
{"nick":"dan336","message":"or will requests be forwarded?","date":"2014-11-25T20:31:21.368Z","type":"message"}
{"nick":"creationix","message":"the data would be sharded by hash so you should always know where it goes","date":"2014-11-25T20:31:25.492Z","type":"message"}
{"nick":"creationix","message":"but I guess during transitions we could add something like that","date":"2014-11-25T20:31:47.217Z","type":"message"}
{"nick":"creationix","message":"especially if data moves between machines instead of just a simple split","date":"2014-11-25T20:31:58.350Z","type":"message"}
{"nick":"dan336","message":"well what I mean is if you connect up to the back end db, and ask for a,b,c and a is on node1 and b,c is on node2, does the db I connect to proxy the requests to the storage nodes where the data is located, or does the client have to connect to node1,node2,nodex… ?","date":"2014-11-25T20:33:10.837Z","type":"message"}
{"nick":"creationix","message":"oh right, I would prefer a proxy as long as it’s not a bottleneck","date":"2014-11-25T20:33:40.625Z","type":"message"}
{"nick":"creationix","message":"shouldn’t be hard to cluster the proxies since they are stateless","date":"2014-11-25T20:33:48.993Z","type":"message"}
{"nick":"dan336","message":"yeah that makes sense.","date":"2014-11-25T20:34:24.756Z","type":"message"}
{"nick":"creationix","message":"I obviously haven’t figured out all the scaling and reliability issues, but I’m fairly confident it won’t be super hard","date":"2014-11-25T20:34:54.170Z","type":"message"}
{"nick":"creationix","message":"having the data in an immutable acyclic graph is ncie","date":"2014-11-25T20:35:07.625Z","type":"message"}
{"nick":"creationix","message":"*nice","date":"2014-11-25T20:35:09.336Z","type":"message"}
{"nick":"dan336","message":"of course, I was just curious as to what the plans were :)","date":"2014-11-25T20:35:28.029Z","type":"message"}
{"nick":"creationix","message":"yeah, current plans are to get a prototype out as soon as possible so *I* can start using it","date":"2014-11-25T20:35:49.484Z","type":"message"}
{"nick":"creationix","message":"I want a package manager.  I feel it’s slowing us down and causing luvi and luvit to bloat.","date":"2014-11-25T20:36:00.586Z","type":"message"}
{"nick":"creationix","message":"also I’ve been designing this git-style object database for years and am excited to actually implement the core of it","date":"2014-11-25T20:36:38.771Z","type":"message"}
{"nick":"creationix","message":"it fits really well to the problem of a package repository","date":"2014-11-25T20:36:57.876Z","type":"message"}
{"nick":"dan336","message":"I bet :) I thought about designing one for the company I work for, but we don't have a need yet.","date":"2014-11-25T20:37:13.356Z","type":"message"}
{"nick":"dan336","message":"our current solution works just fine.","date":"2014-11-25T20:38:28.116Z","type":"message"}
{"nick":"dan336","message":"well I stop bothering you so you can get something done today :)","date":"2014-11-25T20:39:25.559Z","type":"message"}
{"nick":"dan336","message":"keep up the good work on luvit, I have really been enjoying writing a few useful utilities with it.","date":"2014-11-25T20:40:00.109Z","type":"message"}
{"nick":"creationix","message":"thanks for helping me think through stuff","date":"2014-11-25T20:47:17.550Z","type":"message"}
{"nick":"dan336","message":"no problem","date":"2014-11-25T20:57:57.100Z","type":"message"}
{"nick":"a_le","date":"2014-11-25T21:39:06.102Z","type":"join"}
{"nick":"cledev","date":"2014-11-25T21:40:50.402Z","type":"join"}
{"nick":"dan336","message":"creationx: I don't know if you are interested in this, but this could be a decent alternative to leveldb -> http://symas.com/mdb/","date":"2014-11-25T22:04:06.729Z","type":"message"}
{"nick":"creationix","message":"dan336: that could be useful.  I think our workload will be ready heavy","date":"2014-11-25T22:10:19.502Z","type":"message"}
{"nick":"creationix","message":"I imagine npm has a lot more reads than writes","date":"2014-11-25T22:10:26.754Z","type":"message"}
{"nick":"dan336","message":"thats what I was thinking too, it would be heavy on the reads.","date":"2014-11-25T22:12:12.763Z","type":"message"}
{"nick":"creationix","message":"I’m trying to remember if level db optimized for writes or reads","date":"2014-11-25T22:12:55.032Z","type":"message"}
{"nick":"creationix","message":"I know it optimizes for random access (not sequential)","date":"2014-11-25T22:13:04.845Z","type":"message"}
{"nick":"^v","date":"2014-11-25T22:13:28.411Z","type":"join"}
{"nick":"creationix","message":"the Multi-process concurrency is nice for scaling","date":"2014-11-25T22:13:37.439Z","type":"message"}
{"nick":"creationix","message":"(assuming cpu was the bottleneck and not disk I/O","date":"2014-11-25T22:13:48.921Z","type":"message"}
{"nick":"dan336","message":"i think its optimized for sequential reads.","date":"2014-11-25T22:15:30.052Z","type":"message"}
{"nick":"creationix","message":"mdb, yeah","date":"2014-11-25T22:16:25.436Z","type":"message"}
{"nick":"creationix","message":"my workload will be quite random, but mdb does well for random reads too","date":"2014-11-25T22:16:39.368Z","type":"message"}
{"nick":"creationix","message":"I think leveldb was optimized for random writes, that’s where it seems faster than most others","date":"2014-11-25T22:16:55.789Z","type":"message"}
{"nick":"creationix","message":"http://symas.com/mdb/microbench/","date":"2014-11-25T22:16:59.281Z","type":"message"}
{"nick":"dan336","message":"yeah thats where I'm looking too","date":"2014-11-25T22:17:24.597Z","type":"message"}
{"nick":"dan336","message":"did you see the section on 'performance using large values'?","date":"2014-11-25T22:18:40.409Z","type":"message"}
{"nick":"creationix","message":"yep, though my values shouldn’t be too large.  It’s a single entry per file or folder","date":"2014-11-25T22:19:13.661Z","type":"message"}
{"nick":"dan336","message":"i guess thats true, git objects tend to not be in the 100k range.","date":"2014-11-25T22:19:47.157Z","type":"message"}
{"nick":"creationix","message":"I expect most to be around 2-10k","date":"2014-11-25T22:20:20.867Z","type":"message"}
{"nick":"rphillips","message":"not including the c++ abi would improve memory usage","date":"2014-11-25T22:22:41.091Z","type":"message"}
{"nick":"creationix","message":"good point.  I wasn’t keen on level being c++","date":"2014-11-25T22:25:51.385Z","type":"message"}
{"nick":"creationix","message":"plus lmdb is super tiny to begin with","date":"2014-11-25T22:26:04.008Z","type":"message"}
{"nick":"mattlgy","reason":"Remote host closed the connection","date":"2014-11-25T22:29:27.988Z","type":"quit"}
{"nick":"creationix","message":"I kinda wish mem-mapping was available to scripting languages.  It seems to useful","date":"2014-11-25T22:30:09.269Z","type":"message"}
{"nick":"creationix","message":"I wonder why libuv didn’t include that","date":"2014-11-25T22:30:15.302Z","type":"message"}
{"nick":"dan336","message":"so here is a question, I am starting to test out the new luvi based luvit, and I can't manage to grab the hrtime function","date":"2014-11-25T22:36:01.431Z","type":"message"}
{"nick":"creationix","message":"heh, if you strip the luvit binary it strips the zip file off the end","date":"2014-11-25T22:36:02.335Z","type":"message"}
{"nick":"creationix","message":"that’s one way to get the luvi binary inside it","date":"2014-11-25T22:36:07.988Z","type":"message"}
{"nick":"dan336","message":" i was doing this: `require('uv').Process.hrtime` before","date":"2014-11-25T22:36:14.987Z","type":"message"}
{"nick":"dan336","message":"but now that doesn't work...","date":"2014-11-25T22:36:18.913Z","type":"message"}
{"nick":"dan336","message":"it throws this error: 'attempt to index field 'Process' (a nil value)'","date":"2014-11-25T22:36:45.001Z","type":"message"}
{"nick":"creationix","message":"dan336: right, the uv module is probably completely different since it’s luv and not luvit’s old C bindings","date":"2014-11-25T22:36:58.778Z","type":"message"}
{"nick":"dan336","message":"alright, so I need to look in luv to see what it is then?","date":"2014-11-25T22:37:23.517Z","type":"message"}
{"nick":"creationix","message":"the new API is a flat list of C bindings to libuv functions https://github.com/luvit/luv/blob/8c10a1338917d7234adbac609c48a78fc360f396/src/luv.c#L48-L234","date":"2014-11-25T22:37:35.751Z","type":"message"}
{"nick":"creationix","message":"so it’s just `require(‘uv’).hrtime()`","date":"2014-11-25T22:37:50.669Z","type":"message"}
{"nick":"dan336","message":"you are right, I just found it","date":"2014-11-25T22:37:53.300Z","type":"message"}
{"nick":"dan336","message":"thanks","date":"2014-11-25T22:38:04.174Z","type":"message"}
{"nick":"dan336","reason":"Ping timeout: 258 seconds","date":"2014-11-25T22:55:26.367Z","type":"quit"}
{"nick":"dan336","date":"2014-11-25T22:55:34.367Z","type":"join"}
{"nick":"DarkGod","reason":"Remote host closed the connection","date":"2014-11-25T22:57:16.417Z","type":"quit"}
{"nick":"piernov","reason":"Ping timeout: 265 seconds","date":"2014-11-25T23:05:57.651Z","type":"quit"}
{"nick":"piernov","date":"2014-11-25T23:06:56.888Z","type":"join"}
{"nick":"cledev","reason":"Ping timeout: 264 seconds","date":"2014-11-25T23:18:41.449Z","type":"quit"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-11-25T23:54:55.979Z","type":"quit"}
