{"nick":"Harageth","date":"2016-05-22T00:04:31.744Z","type":"join"}
{"nick":"Harageth","reason":"Remote host closed the connection","date":"2016-05-22T00:23:15.519Z","type":"quit"}
{"nick":"SinisterRectus","reason":"Read error: Connection reset by peer","date":"2016-05-22T00:25:30.575Z","type":"quit"}
{"nick":"SinisterRectus","date":"2016-05-22T00:31:09.731Z","type":"join"}
{"nick":"SinisterRectus","reason":"Client Quit","date":"2016-05-22T00:32:11.424Z","type":"quit"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2016-05-22T00:42:35.627Z","type":"quit"}
{"nick":"rgrinberg","reason":"Ping timeout: 252 seconds","date":"2016-05-22T01:21:55.437Z","type":"quit"}
{"nick":"Harageth","date":"2016-05-22T02:24:04.915Z","type":"join"}
{"nick":"Harageth","reason":"Ping timeout: 240 seconds","date":"2016-05-22T02:28:34.030Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-05-22T03:09:45.718Z","type":"join"}
{"nick":"rgrinberg","reason":"Ping timeout: 260 seconds","date":"2016-05-22T04:05:20.460Z","type":"quit"}
{"nick":"Harageth","date":"2016-05-22T04:15:48.903Z","type":"join"}
{"nick":"Harageth","reason":"Ping timeout: 276 seconds","date":"2016-05-22T04:22:05.904Z","type":"quit"}
{"nick":"rphillips","message":"/quit","date":"2016-05-22T04:43:41.611Z","type":"message"}
{"nick":"rphillips","reason":"Quit: ZNC - http://znc.in","date":"2016-05-22T04:46:37.026Z","type":"quit"}
{"nick":"rphillips","date":"2016-05-22T04:49:00.040Z","type":"join"}
{"nick":"Harageth","date":"2016-05-22T08:18:36.022Z","type":"join"}
{"nick":"Harageth","reason":"Ping timeout: 250 seconds","date":"2016-05-22T08:23:23.017Z","type":"quit"}
{"nick":"rendar","date":"2016-05-22T09:43:13.738Z","type":"join"}
{"nick":"bjorn","reason":"Ping timeout: 260 seconds","date":"2016-05-22T10:32:34.528Z","type":"quit"}
{"nick":"bjorn","date":"2016-05-22T10:33:12.927Z","type":"join"}
{"nick":"bjorn","reason":"Changing host","date":"2016-05-22T10:33:13.133Z","type":"quit"}
{"nick":"bjorn","date":"2016-05-22T10:33:13.133Z","type":"join"}
{"nick":"Harageth","date":"2016-05-22T11:20:34.605Z","type":"join"}
{"nick":"Harageth","reason":"Ping timeout: 252 seconds","date":"2016-05-22T11:25:16.424Z","type":"quit"}
{"nick":"SkyRocknRoll_","date":"2016-05-22T12:02:09.714Z","type":"join"}
{"nick":"mmicko_","date":"2016-05-22T12:09:46.668Z","type":"join"}
{"nick":"Harageth","date":"2016-05-22T13:21:27.466Z","type":"join"}
{"nick":"Harageth","reason":"Ping timeout: 252 seconds","date":"2016-05-22T13:25:43.410Z","type":"quit"}
{"nick":"daurnimator","message":"creationix: well if you're okay with it","date":"2016-05-22T13:39:45.101Z","type":"message"}
{"nick":"daurnimator","message":"konobi: well they're people working in the area so I should listen to their opinion","date":"2016-05-22T13:40:04.572Z","type":"message"}
{"nick":"daurnimator","message":"konobi: what TZ are you?","date":"2016-05-22T13:40:08.333Z","type":"message"}
{"nick":"rgrinberg","date":"2016-05-22T13:46:17.199Z","type":"join"}
{"nick":"cptG","date":"2016-05-22T14:43:29.093Z","type":"join"}
{"nick":"cptG","message":"Hello! I'm thinking about embedding luvi into an application of mine - but the libuv loop would not run on the main thread but rather in its own thread, possibly there will be more than one at a time or at several loops running in sequence. Should I expect any trouble? Does luv depend on any global state?","date":"2016-05-22T15:06:22.292Z","type":"message"}
{"nick":"cptG","message":"...my rationale for this: I have already embedded luajit into my application with my own ways of embedding lua bytecode into the executable, my own loaders and whatnot. I'd like for luvi to use MY lua state instead of the other way around.","date":"2016-05-22T15:08:20.710Z","type":"message"}
{"nick":"SkyRocknRoll_","reason":"Remote host closed the connection","date":"2016-05-22T15:13:53.261Z","type":"quit"}
{"nick":"daurnimator","message":"cptG: using the one lua state from multiple threads will end in tears.","date":"2016-05-22T15:22:18.395Z","type":"message"}
{"nick":"daurnimator","message":"cptG: integrate luv into your existing mainloop (or vice-versa)","date":"2016-05-22T15:22:49.561Z","type":"message"}
{"nick":"Harageth","date":"2016-05-22T15:22:56.612Z","type":"join"}
{"nick":"cptG","message":"daurnimator: nope, not one lua state for multiple threads. multiple thread with its own lua state each and also (optionally) its own libuv loop, managed via luv","date":"2016-05-22T15:24:33.584Z","type":"message"}
{"nick":"cptG","message":"the idea is to have a UI loop in the main loop and a luv loop in non-GUI thread(s)","date":"2016-05-22T15:24:52.510Z","type":"message"}
{"nick":"daurnimator","message":"cptG: why use threads?","date":"2016-05-22T15:25:53.026Z","type":"message"}
{"nick":"daurnimator","message":"cptG: (why not just do it all in the one/main thread)","date":"2016-05-22T15:26:06.629Z","type":"message"}
{"nick":"Harageth","reason":"Ping timeout: 252 seconds","date":"2016-05-22T15:27:49.411Z","type":"quit"}
{"nick":"cptG","message":"there are long-running tasks that should not block the main thread. These are also not doable with async IO but still need to happen in the lua thread. In other applications, (depending on the config & use case) there are high frequency tasks that should not be blocked by the UI loop (a window resize is enough to screw with that)","date":"2016-05-22T15:29:43.677Z","type":"message"}
{"nick":"rgrinberg","reason":"Ping timeout: 276 seconds","date":"2016-05-22T15:52:24.083Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-05-22T15:58:39.248Z","type":"join"}
