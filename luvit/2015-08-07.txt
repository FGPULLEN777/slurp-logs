{"nick":"rphillips","message":"kostco: https://github.com/virgo-agent-toolkit/rackspace-monitoring-agent/blob/refactor/hostinfo2/hostinfo/iptables.lua","date":"2015-08-07T00:43:14.099Z","type":"message"}
{"nick":"rphillips","message":"so I made the HostInfo object sublcass from a Transform Stream","date":"2015-08-07T00:43:36.071Z","type":"message"}
{"nick":"rphillips","message":"it's on the refactor/hostinfo2 branch","date":"2015-08-07T00:44:27.377Z","type":"message"}
{"nick":"rphillips","message":"you should be able to take the autoupgrades module and use an inline _transform now","date":"2015-08-07T00:44:48.197Z","type":"message"}
{"nick":"kostco","message":"+1 for inline transform","date":"2015-08-07T01:00:26.308Z","type":"message"}
{"nick":"kostco","message":"rphillips: ill let you hammer out on the refactor branch for now, since im really just slowing you down atm.","date":"2015-08-07T01:02:11.382Z","type":"message"}
{"nick":"kostco","message":"take a look at passwd.lua, the asyncspawn func in misc imo is a waste since its not used in a lot of places so im curious how youll do that","date":"2015-08-07T01:02:11.421Z","type":"message"}
{"nick":"kostco","message":"another thing is that its be awesome if a any of the checks could, even the ones not relying on hostinfosubproc could declare a Info:restrictedplatforms","date":"2015-08-07T01:02:51.707Z","type":"message"}
{"nick":"rphillips","message":"hahaha. you wanted the _transform function within the class... now you get to try it out","date":"2015-08-07T01:03:01.016Z","type":"message"}
{"nick":"kostco","message":"and not worry about the whole los.type() ~= linux","date":"2015-08-07T01:03:09.250Z","type":"message"}
{"nick":"kostco","message":"man i love it! i need to type less code!","date":"2015-08-07T01:03:16.937Z","type":"message"}
{"nick":"kostco","message":"so what i did here https://gist.github.com/kaustavha/7ff3f649ed5a90968b2b#file-base-lua-L49-L58","date":"2015-08-07T01:03:47.674Z","type":"message"}
{"nick":"kostco","message":"i think thats a good idea","date":"2015-08-07T01:03:52.476Z","type":"message"}
{"nick":"kostco","message":"but im unsure how to make that work everywhere","date":"2015-08-07T01:04:03.593Z","type":"message"}
{"nick":"rphillips","message":"getPlatform() is the new function","date":"2015-08-07T01:04:20.694Z","type":"message"}
{"nick":"rphillips","message":"and it's a whitelist","date":"2015-08-07T01:04:25.379Z","type":"message"}
{"nick":"rphillips","message":"'linux', 'darwin', 'freebsd', win32'","date":"2015-08-07T01:04:35.079Z","type":"message"}
{"nick":"kostco","message":"goddamit man did you rebase","date":"2015-08-07T01:05:13.839Z","type":"message"}
{"nick":"kostco","message":"why would you rebase","date":"2015-08-07T01:05:17.039Z","type":"message"}
{"nick":"rphillips","message":"yep","date":"2015-08-07T01:05:20.003Z","type":"message"}
{"nick":"rphillips","message":"to squash all the commits","date":"2015-08-07T01:05:27.861Z","type":"message"}
{"nick":"kostco","message":"sigh alright ill go through 18 files not seperated by commits","date":"2015-08-07T01:05:34.326Z","type":"message"}
{"nick":"kostco","message":"rphillips: have you tried refactoring any of the fs using checks yet?","date":"2015-08-07T01:06:29.323Z","type":"message"}
{"nick":"rphillips","message":"fs using checks?","date":"2015-08-07T01:06:40.422Z","type":"message"}
{"nick":"kostco","message":"have you seen my gist? i was using it to figure out what to work on","date":"2015-08-07T01:07:36.007Z","type":"message"}
{"nick":"kostco","message":"https://gist.github.com/kaustavha/f8a43d219377d78a19c6","date":"2015-08-07T01:07:49.705Z","type":"message"}
{"nick":"rphillips","message":"i havne't seen that gist in a while, but I don't understand the 'have you tried refactoring any of the fs using checks yet'","date":"2015-08-07T01:09:29.515Z","type":"message"}
{"nick":"kostco","message":"what i mean is the checks that rely on fs, i think its group three in that girst","date":"2015-08-07T01:09:53.586Z","type":"message"}
{"nick":"kostco","message":"rphillips: convert passwd.lua that uses fs and requires a whole bunch of spawned proccess running \"passwd -S <uname>' after running fs.read","date":"2015-08-07T01:10:10.899Z","type":"message"}
{"nick":"kostco","message":"and fileperms","date":"2015-08-07T01:10:37.081Z","type":"message"}
{"nick":"kostco","message":"im curious how itll look after","date":"2015-08-07T01:10:43.516Z","type":"message"}
{"nick":"kostco","message":"itll be easier for me to work off your example than trying to figure out how to make it look like what youd make it look like","date":"2015-08-07T01:11:05.719Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/virgo-agent-toolkit/rackspace-monitoring-agent/blob/refactor/hostinfo2/hostinfo/pam.lua","date":"2015-08-07T01:11:08.503Z","type":"message"}
{"nick":"kostco","message":"anyhoo im gonna get back to ipa day here at rssf, pam looks good although having to declare readstreams is a small nit, theres a few other checks that require fs utils so need to figure out how to abstract that and id definitely replace the los.type check thingy with the self:isRestrictedPlatform from my gist or whatever name makes sense tomorrow with your","date":"2015-08-07T01:21:08.791Z","type":"message"}
{"nick":"kostco","message":"self:getPlatform()","date":"2015-08-07T01:21:08.792Z","type":"message"}
{"nick":"rphillips","reason":"Quit: ZNC - http://znc.in","date":"2015-08-07T02:36:26.018Z","type":"quit"}
{"nick":"rphillips","date":"2015-08-07T02:40:51.423Z","type":"join"}
{"nick":"hdms_","date":"2015-08-07T02:56:12.504Z","type":"join"}
{"nick":"hdms","reason":"Ping timeout: 260 seconds","date":"2015-08-07T02:57:51.979Z","type":"quit"}
{"nick":"hdms_","new_nick":"hdms","date":"2015-08-07T02:57:52.314Z","type":"nick"}
{"nick":"rphillips","reason":"Quit: ZNC - http://znc.in","date":"2015-08-07T03:10:23.808Z","type":"quit"}
{"nick":"rphillips","date":"2015-08-07T03:10:37.466Z","type":"join"}
{"nick":"hdms","reason":"Quit: hdms","date":"2015-08-07T03:25:15.900Z","type":"quit"}
{"nick":"dan336","date":"2015-08-07T03:27:28.383Z","type":"join"}
{"nick":"hdms","date":"2015-08-07T03:50:56.358Z","type":"join"}
{"nick":"rphillips","reason":"Quit: ZNC - http://znc.in","date":"2015-08-07T04:14:47.274Z","type":"quit"}
{"nick":"rphillips","date":"2015-08-07T04:15:06.060Z","type":"join"}
{"nick":"dan336","reason":"Quit: Leaving.","date":"2015-08-07T04:16:01.477Z","type":"quit"}
{"nick":"SkyRocknRoll","date":"2015-08-07T05:08:02.374Z","type":"join"}
{"nick":"hdms","reason":"Quit: hdms","date":"2015-08-07T06:50:34.003Z","type":"quit"}
{"nick":"yperez","date":"2015-08-07T08:41:18.168Z","type":"join"}
{"nick":"yperez","new_nick":"yagop","date":"2015-08-07T08:41:34.166Z","type":"nick"}
{"nick":"yagop","message":"Hi, I recently discovered Luvit and fucking love it. Thanks a lot for the work!","date":"2015-08-07T08:44:01.288Z","type":"message"}
{"nick":"jreek","date":"2015-08-07T09:00:32.731Z","type":"join"}
{"nick":"jreek","message":"Hello. Luvit behaviour differs from Lua: http://pastebin.com/1wbU0bH1","date":"2015-08-07T09:04:19.929Z","type":"message"}
{"nick":"jreek","message":"Is it a bug? How can I create global variable using Luvit?","date":"2015-08-07T09:04:46.911Z","type":"message"}
{"nick":"SkyRocknRoll","reason":"Ping timeout: 244 seconds","date":"2015-08-07T09:13:35.350Z","type":"quit"}
{"nick":"yagop","reason":"Remote host closed the connection","date":"2015-08-07T09:13:36.469Z","type":"quit"}
{"nick":"jreek","reason":"Ping timeout: 246 seconds","date":"2015-08-07T09:21:43.656Z","type":"quit"}
{"nick":"SkyRocknRoll","date":"2015-08-07T10:35:19.297Z","type":"join"}
{"nick":"torque","reason":"*.net *.split","date":"2015-08-07T10:45:04.686Z","type":"quit"}
{"nick":"torque","date":"2015-08-07T10:49:09.450Z","type":"join"}
{"nick":"SkyRocknRoll","reason":"Ping timeout: 246 seconds","date":"2015-08-07T11:12:02.246Z","type":"quit"}
{"nick":"jreek","date":"2015-08-07T11:17:03.672Z","type":"join"}
{"nick":"jreek","reason":"Quit: Page closed","date":"2015-08-07T11:24:02.580Z","type":"quit"}
{"nick":"hdms","date":"2015-08-07T12:02:16.470Z","type":"join"}
{"nick":"rphillips","message":"good morning","date":"2015-08-07T14:12:23.363Z","type":"message"}
{"nick":"dan336","date":"2015-08-07T14:26:29.398Z","type":"join"}
{"nick":"creationix","message":"rphillips: did you see jreek’s question?  I didn’t realize we block global leakage","date":"2015-08-07T14:26:49.046Z","type":"message"}
{"nick":"creationix","message":"I guess that’s a side effect of using setfenv in the require system","date":"2015-08-07T14:27:02.414Z","type":"message"}
{"nick":"rphillips","message":"saw that","date":"2015-08-07T14:27:03.504Z","type":"message"}
{"nick":"rphillips","message":" I think _G works though","date":"2015-08-07T14:27:12.577Z","type":"message"}
{"nick":"creationix","message":"yep,","date":"2015-08-07T14:27:20.771Z","type":"message"}
{"nick":"coderkevin","message":"creationix: Thanks for the info. I heard before that Luvit can work on the normal Lua interpreter without LuaJIT. Is that true?","date":"2015-08-07T14:59:08.348Z","type":"message"}
{"nick":"creationix","message":"coderkevin: at some level","date":"2015-08-07T14:59:27.164Z","type":"message"}
{"nick":"creationix","message":"the low-level luv binding is fully supported with normal lua","date":"2015-08-07T14:59:38.918Z","type":"message"}
{"nick":"creationix","message":"luvi still has some work left to make portable and luvit depends on luvi","date":"2015-08-07T14:59:51.447Z","type":"message"}
{"nick":"coderkevin","message":"creationix: I was wondering if it might be easier to bootstrap without LuaJIT first, then implement LuaJIT after it's up and running.","date":"2015-08-07T15:00:00.447Z","type":"message"}
{"nick":"creationix","message":"coderkevin: for a new hardware platform right?","date":"2015-08-07T15:00:20.169Z","type":"message"}
{"nick":"coderkevin","message":"creationix: It's for an ARM-based QNX platform.","date":"2015-08-07T15:00:28.890Z","type":"message"}
{"nick":"creationix","message":"right https://github.com/luvit/luvi/issues/109","date":"2015-08-07T15:00:48.861Z","type":"message"}
{"nick":"coderkevin","message":"We've already got Lua 5.2 running on this platform, I'm just trying to figure out the quickest way to get Luvit up and running to get our other devs going on top of it.","date":"2015-08-07T15:01:59.651Z","type":"message"}
{"nick":"coderkevin","message":"LuaJIT is based on 5.2 still, right?","date":"2015-08-07T15:02:44.104Z","type":"message"}
{"nick":"creationix","message":"coderkevin: 5.2ish","date":"2015-08-07T15:02:51.897Z","type":"message"}
{"nick":"creationix","message":"it’s 5.1 with backwards compatible 5.2 features","date":"2015-08-07T15:03:01.622Z","type":"message"}
{"nick":"coderkevin","message":"I see. I'll have to check what 5.2 features we're using, but it sounds like a move to LuaJIT for our existing code could be easier than a move to 5.3 even.","date":"2015-08-07T15:03:47.627Z","type":"message"}
{"nick":"creationix","message":"coderkevin: so by “luvit” you mean the whole system including lit, luvi based apps with bundled zips and the luvit standard library?","date":"2015-08-07T15:03:53.602Z","type":"message"}
{"nick":"coderkevin","message":"Well, I'm not 100% sure I need lit.  This is an embedded system, so I'm not sure that I really need a package manager.","date":"2015-08-07T15:04:24.397Z","type":"message"}
{"nick":"creationix","message":"if you don’t care about the luvit ecosystem, using luv directly is very easy","date":"2015-08-07T15:04:29.923Z","type":"message"}
{"nick":"creationix","message":"and most luvit libraries can be ported to work directly on luv easily","date":"2015-08-07T15:04:48.705Z","type":"message"}
{"nick":"coderkevin","message":"Right. I figured on libuv/luv first.  I've looked into libuv enough to become familiar with what will have to be done there.","date":"2015-08-07T15:04:58.001Z","type":"message"}
{"nick":"creationix","message":"does you system have libuv working yet?","date":"2015-08-07T15:05:07.548Z","type":"message"}
{"nick":"coderkevin","message":"That's not on QNX yet.  So I'll have to port it first, I figure.","date":"2015-08-07T15:05:24.195Z","type":"message"}
{"nick":"coderkevin","message":"Should be fairly straightforward from Linux, except QNX doesn't have epoll or eventfds.","date":"2015-08-07T15:05:43.123Z","type":"message"}
{"nick":"creationix","message":"I see","date":"2015-08-07T15:05:56.704Z","type":"message"}
{"nick":"coderkevin","message":"But that part I'm comfortable with.","date":"2015-08-07T15:06:11.761Z","type":"message"}
{"nick":"creationix","message":"so lua + libuv (via luv) is a pretty nice and very simple platform","date":"2015-08-07T15:06:16.960Z","type":"message"}
{"nick":"creationix","message":"it’s not “luvit” per se, but has the core primitives","date":"2015-08-07T15:06:30.776Z","type":"message"}
{"nick":"coderkevin","message":"Hmm, I wonder if maybe that's the way I should go instead of full-blown Luvit.","date":"2015-08-07T15:06:33.244Z","type":"message"}
{"nick":"coderkevin","message":"Primarily what we need is the lua-based libuv event loop.","date":"2015-08-07T15:06:45.769Z","type":"message"}
{"nick":"creationix","message":"and like I said, most the luvit libraries can be ported fairly easily","date":"2015-08-07T15:06:51.521Z","type":"message"}
{"nick":"coderkevin","message":"We want to be single-threaded on the event loop with the ability to put in async events from other threads.","date":"2015-08-07T15:07:06.016Z","type":"message"}
{"nick":"creationix","message":"luvi adds bundles (zip or folder) for asset bundling","date":"2015-08-07T15:07:14.184Z","type":"message"}
{"nick":"coderkevin","message":"Secondary to that is D-Bus and http support.","date":"2015-08-07T15:07:14.901Z","type":"message"}
{"nick":"creationix","message":"and lit adds package management","date":"2015-08-07T15:07:19.483Z","type":"message"}
{"nick":"coderkevin","message":"We're already using l2dbus for other things, what would you recommend for http in a luv setup?","date":"2015-08-07T15:07:39.785Z","type":"message"}
{"nick":"creationix","message":"my http-codec library in luvit will work almost out of the box on plain lua = luv","date":"2015-08-07T15:08:00.627Z","type":"message"}
{"nick":"coderkevin","message":"Does it to TLS too?","date":"2015-08-07T15:08:14.955Z","type":"message"}
{"nick":"creationix","message":"no, we use openssl for that","date":"2015-08-07T15:08:25.363Z","type":"message"}
{"nick":"coderkevin","message":"We may want to use TLS at some point for our http requests.","date":"2015-08-07T15:08:39.106Z","type":"message"}
{"nick":"creationix","message":"do you prefer coroutine or callback style code?","date":"2015-08-07T15:08:48.816Z","type":"message"}
{"nick":"coderkevin","message":"I think we're trying to stay on the main event loop as much as possible, so async/callback would probably be best.","date":"2015-08-07T15:09:25.689Z","type":"message"}
{"nick":"coderkevin","message":"But coroutines for situations where that's not feasible would be fine, I think.","date":"2015-08-07T15:09:53.665Z","type":"message"}
{"nick":"coderkevin","message":"Communicating back to the main thread from a coroutine would be done through a uv_async event, right?","date":"2015-08-07T15:11:37.530Z","type":"message"}
{"nick":"coderkevin","message":"Or would you do it some other way?","date":"2015-08-07T15:11:49.938Z","type":"message"}
{"nick":"coderkevin","message":"Sorry, I haven't done much with coroutines in Lua, so my understanding isn't very clear.","date":"2015-08-07T15:12:30.082Z","type":"message"}
{"nick":"creationix","message":"coroutines are on main thread","date":"2015-08-07T15:12:42.752Z","type":"message"}
{"nick":"creationix","message":"they are green threads","date":"2015-08-07T15:12:43.537Z","type":"message"}
{"nick":"creationix","message":"but they let you do blocking I/O without actually blocking the thread","date":"2015-08-07T15:12:47.630Z","type":"message"}
{"nick":"creationix","message":"result = someAction(arg1, arg2) vs someAction(arg1, arg2, function (err, result) end )","date":"2015-08-07T15:13:13.169Z","type":"message"}
{"nick":"creationix","message":"libuv is always callbacks, but using lua coroutines I’ve made it look blocking","date":"2015-08-07T15:13:35.697Z","type":"message"}
{"nick":"coderkevin","message":"I see.","date":"2015-08-07T15:14:02.684Z","type":"message"}
{"nick":"coderkevin","message":"How do you communicate between the threads?","date":"2015-08-07T15:14:13.191Z","type":"message"}
{"nick":"creationix","message":"I don’t have threads","date":"2015-08-07T15:14:20.503Z","type":"message"}
{"nick":"coderkevin","message":"Or well, between coroutines.","date":"2015-08-07T15:14:29.338Z","type":"message"}
{"nick":"creationix","message":"they all share the same context","date":"2015-08-07T15:14:34.555Z","type":"message"}
{"nick":"creationix","message":"so via closures the same as callbacks","date":"2015-08-07T15:14:41.269Z","type":"message"}
{"nick":"coderkevin","message":"passing values through yield?","date":"2015-08-07T15:15:09.921Z","type":"message"}
{"nick":"creationix","message":"I can write up an example and port a few of my libraries if you’d like","date":"2015-08-07T15:15:10.009Z","type":"message"}
{"nick":"creationix","message":"the yield is hidden in the wrapper code that adapts between callbacks and coroutines","date":"2015-08-07T15:15:29.977Z","type":"message"}
{"nick":"creationix","message":"user code looks like `result = someAction()`","date":"2015-08-07T15:15:42.006Z","type":"message"}
{"nick":"coderkevin","message":"It sounds interesting, I'd like to take a look.","date":"2015-08-07T15:15:42.469Z","type":"message"}
{"nick":"coderkevin","message":"Functionally though, it's basically the same, right?","date":"2015-08-07T15:15:51.260Z","type":"message"}
{"nick":"creationix","message":"more or less","date":"2015-08-07T15:15:55.614Z","type":"message"}
{"nick":"coderkevin","message":"Since it's all on the same main thread, no locking is required, right?","date":"2015-08-07T15:16:10.268Z","type":"message"}
{"nick":"creationix","message":"right","date":"2015-08-07T15:16:15.688Z","type":"message"}
{"nick":"coderkevin","message":"As long as you don't yield in a critical section.","date":"2015-08-07T15:16:27.863Z","type":"message"}
{"nick":"creationix","message":"true","date":"2015-08-07T15:16:39.149Z","type":"message"}
{"nick":"creationix","message":"so the hazard with my coroutine style is any function call can potentially cause you to yield","date":"2015-08-07T15:16:52.425Z","type":"message"}
{"nick":"coderkevin","message":"Cool, yeah I'd like to take a look.","date":"2015-08-07T15:17:04.225Z","type":"message"}
{"nick":"creationix","message":"but it’s not as bad as true threading since it’s not every statement that can pre-empt you","date":"2015-08-07T15:17:09.953Z","type":"message"}
{"nick":"coderkevin","message":"That's true.","date":"2015-08-07T15:17:19.345Z","type":"message"}
{"nick":"coderkevin","message":"One thing we care a lot about on this project is speed, so no thread-locking.","date":"2015-08-07T15:17:35.657Z","type":"message"}
{"nick":"creationix","message":"so I’ll see if I can port coro-http and dependencies to plain luv","date":"2015-08-07T15:17:41.579Z","type":"message"}
{"nick":"creationix","message":"that gives you a nice coroutine based http client and server","date":"2015-08-07T15:17:55.894Z","type":"message"}
{"nick":"creationix","message":"and then you could port the weblit framework if you want a higher-level http framework","date":"2015-08-07T15:18:16.622Z","type":"message"}
{"nick":"coderkevin","message":"We'll be running straight C code on the libuv event loop outside of Lua for higher performance code, but we want it interleaved with Lua-based events as well.","date":"2015-08-07T15:18:21.843Z","type":"message"}
{"nick":"coderkevin","message":"Okay, that sounds great.","date":"2015-08-07T15:18:29.003Z","type":"message"}
{"nick":"creationix","message":"but if you want https client, you’ll need to provide some sort of tls","date":"2015-08-07T15:18:45.452Z","type":"message"}
{"nick":"creationix","message":"if you’re able to build openssl and lua-openssl (the bindings luvi uses) it will make porting much easier","date":"2015-08-07T15:19:00.871Z","type":"message"}
{"nick":"coderkevin","message":"So just to be clear, you recommend that I run luv directly for this project since I don't really need package management so much, right?","date":"2015-08-07T15:19:08.425Z","type":"message"}
{"nick":"creationix","message":"yea, it’s faster, simpler and doesn’t require porting luvi to lua","date":"2015-08-07T15:19:26.746Z","type":"message"}
{"nick":"coderkevin","message":"That's great advice, thanks!","date":"2015-08-07T15:19:40.664Z","type":"message"}
{"nick":"creationix","message":"and if you already use and know the libuv API it will feel natural","date":"2015-08-07T15:19:40.941Z","type":"message"}
{"nick":"coderkevin","message":"We won't need an http client straight away, maybe later down the line, though.","date":"2015-08-07T15:20:13.047Z","type":"message"}
{"nick":"coderkevin","message":"Well thanks for the help. If you get that coroutine code up, I'd like to see it. Thanks again!","date":"2015-08-07T15:21:26.460Z","type":"message"}
{"nick":"creationix","message":"coderkevin: will you be on here or shall I email you?","date":"2015-08-07T15:22:30.600Z","type":"message"}
{"nick":"coderkevin","message":"I'll be here.","date":"2015-08-07T15:22:44.333Z","type":"message"}
{"nick":"creationix","message":"so a basic http server serving up static files and maybe some REST endpoints would be a good example?","date":"2015-08-07T15:23:11.332Z","type":"message"}
{"nick":"coderkevin","message":"But my email is kevin.killingsworth@garmin.com in case something happens.","date":"2015-08-07T15:23:12.720Z","type":"message"}
{"nick":"coderkevin","message":"Yeah, that would be cool.","date":"2015-08-07T15:23:34.117Z","type":"message"}
{"nick":"creationix","message":"will you be needing websockets?","date":"2015-08-07T15:23:42.379Z","type":"message"}
{"nick":"coderkevin","message":"Eventually, but not right away.","date":"2015-08-07T15:23:50.091Z","type":"message"}
{"nick":"coderkevin","message":"We're just getting http up first, then we'll worry about server push later.","date":"2015-08-07T15:24:12.295Z","type":"message"}
{"nick":"creationix","message":"I’ve been meaning to make such an example for a while anyway.  People often ask how to use luv without luvit","date":"2015-08-07T15:24:18.179Z","type":"message"}
{"nick":"coderkevin","message":"It sounds like for a controlled embedded system, it's a really good fit.","date":"2015-08-07T15:24:34.479Z","type":"message"}
{"nick":"creationix","message":"right, and you can use git submodules for dependency management anyway","date":"2015-08-07T15:25:03.211Z","type":"message"}
{"nick":"creationix","message":"that’s how we did it with luvit before I wrote lit","date":"2015-08-07T15:25:26.504Z","type":"message"}
{"nick":"creationix","message":"coderkevin: I’ll push it here https://github.com/creationix/luvweb","date":"2015-08-07T15:26:36.699Z","type":"message"}
{"nick":"coderkevin","message":"watched and starred.  :)","date":"2015-08-07T15:27:14.604Z","type":"message"}
