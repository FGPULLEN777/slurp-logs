{"nick":"ryan_ford","date":"2017-06-16T00:14:33.356Z","type":"join"}
{"nick":"creationix","date":"2017-06-16T00:38:26.590Z","type":"join"}
{"nick":"SkyRocknRoll","reason":"Ping timeout: 260 seconds","date":"2017-06-16T02:15:12.452Z","type":"quit"}
{"nick":"DarkGod","reason":"Ping timeout: 240 seconds","date":"2017-06-16T02:45:37.127Z","type":"quit"}
{"nick":"ryan_ford","reason":"Quit: WeeChat 1.5","date":"2017-06-16T05:15:16.802Z","type":"quit"}
{"nick":"DarkGod","date":"2017-06-16T08:21:29.445Z","type":"join"}
{"nick":"ryan_ford","date":"2017-06-16T08:33:05.051Z","type":"join"}
{"nick":"rendar","date":"2017-06-16T09:40:46.314Z","type":"join"}
{"nick":"rendar","reason":"Changing host","date":"2017-06-16T09:41:00.083Z","type":"quit"}
{"nick":"rendar","date":"2017-06-16T09:41:00.148Z","type":"join"}
{"nick":"CapsAdmin","reason":"Ping timeout: 240 seconds","date":"2017-06-16T09:53:50.479Z","type":"quit"}
{"nick":"creationix","reason":"Remote host closed the connection","date":"2017-06-16T10:12:07.610Z","type":"quit"}
{"nick":"ryan_ford","reason":"Ping timeout: 240 seconds","date":"2017-06-16T14:00:05.530Z","type":"quit"}
{"nick":"creationix","date":"2017-06-16T15:09:31.611Z","type":"join"}
{"nick":"SkyRocknRoll","date":"2017-06-16T16:09:20.430Z","type":"join"}
{"nick":"Soni","reason":"Ping timeout: 260 seconds","date":"2017-06-16T16:49:16.611Z","type":"quit"}
{"nick":"creationix","message":"rphillips, how's it going","date":"2017-06-16T16:50:22.590Z","type":"message"}
{"nick":"creationix","message":"I see a lot of github activity on luvit.  Need help with anything?","date":"2017-06-16T16:50:35.436Z","type":"message"}
{"nick":"creationix","message":"SinisterRectus, ^","date":"2017-06-16T16:50:39.747Z","type":"message"}
{"nick":"SinisterRectus","message":"i just took an interest in the ssl fix because it was affecting some of my users, and then it took off from there. nothing more to do at the moment. just a lit bump and release i guess.","date":"2017-06-16T16:51:31.204Z","type":"message"}
{"nick":"rphillips","message":"creationix: just released the tweaks","date":"2017-06-16T16:51:45.365Z","type":"message"}
{"nick":"rphillips","message":"yeah, lit needs a bump i think","date":"2017-06-16T16:51:59.633Z","type":"message"}
{"nick":"creationix","message":"I think there might be some divergence in the modules that luvit and lit share, I'll see if I can check","date":"2017-06-16T16:52:34.076Z","type":"message"}
{"nick":"creationix","message":"http-codec, secure-socket, etc...","date":"2017-06-16T16:52:42.893Z","type":"message"}
{"nick":"rphillips","message":"thanks","date":"2017-06-16T16:52:50.074Z","type":"message"}
{"nick":"SinisterRectus","message":"pretty-print","date":"2017-06-16T16:53:16.208Z","type":"message"}
{"nick":"creationix","message":"btw, several of the new luvit versions havn't been published to lit","date":"2017-06-16T16:53:25.210Z","type":"message"}
{"nick":"creationix","message":"*luvit/deps versions","date":"2017-06-16T16:53:31.660Z","type":"message"}
{"nick":"SinisterRectus","message":"is there a reason why lit has its own copies instead of directly depending on the luvit versions","date":"2017-06-16T16:53:41.071Z","type":"message"}
{"nick":"creationix","message":"path, pretty-print, tls, and url","date":"2017-06-16T16:53:49.492Z","type":"message"}
{"nick":"rphillips","message":"creationix: lit publish deps/* . right?","date":"2017-06-16T16:53:49.778Z","type":"message"}
{"nick":"creationix","message":"SinisterRectus, just bootstrap problems in the build","date":"2017-06-16T16:54:02.108Z","type":"message"}
{"nick":"creationix","message":"rphillips, yep","date":"2017-06-16T16:54:06.411Z","type":"message"}
{"nick":"SinisterRectus","message":"oh","date":"2017-06-16T16:54:07.744Z","type":"message"}
{"nick":"creationix","message":"SinisterRectus, lit is the package builder, so it can't build itself if it's missing dependencies","date":"2017-06-16T16:54:24.518Z","type":"message"}
{"nick":"SinisterRectus","message":"good point","date":"2017-06-16T16:54:32.965Z","type":"message"}
{"nick":"creationix","message":"though as this point, we have enough older version of lit that we could probably build with an older version (that's what gcc does)","date":"2017-06-16T16:54:48.246Z","type":"message"}
{"nick":"creationix","message":"rphillips, and when you're done, luvit itself probably needs a version bump and published to lit","date":"2017-06-16T16:55:45.670Z","type":"message"}
{"nick":"rphillips","message":"i published to lit yesterday for luvit","date":"2017-06-16T16:55:58.761Z","type":"message"}
{"nick":"rphillips","message":"exactly that command line... didn't seem to 100% work","date":"2017-06-16T16:56:10.927Z","type":"message"}
{"nick":"creationix","message":"I see, it's the new commits since then that are makingit complain","date":"2017-06-16T16:56:23.952Z","type":"message"}
{"nick":"creationix","message":"you can test with `lit add`","date":"2017-06-16T16:56:42.024Z","type":"message"}
{"nick":"creationix","message":"it will do the same thing as `lit publis` but not actually publish","date":"2017-06-16T16:56:51.377Z","type":"message"}
{"nick":"creationix","message":"and then you can nuke your local ~/.litdb.git to undo it","date":"2017-06-16T16:57:02.506Z","type":"message"}
{"nick":"creationix","message":"they weren't diverged, mainly lit didn't yet have the new pretty-printer changes","date":"2017-06-16T17:00:59.761Z","type":"message"}
{"nick":"creationix","message":"one way I like to test is `rm -rf deps && lit instakk && git diff`","date":"2017-06-16T17:01:27.109Z","type":"message"}
{"nick":"creationix","message":"it checks to see if what's published to lit matches what's locally in deps","date":"2017-06-16T17:01:39.502Z","type":"message"}
{"nick":"creationix","message":"*install","date":"2017-06-16T17:01:46.443Z","type":"message"}
{"nick":"Soni","date":"2017-06-16T17:04:20.663Z","type":"join"}
{"nick":"creationix","message":"ok, everything in luvit and lit appears to be synced up and up to date","date":"2017-06-16T17:05:41.364Z","type":"message"}
{"nick":"creationix","message":"I updated the version used on luvit.io for the websites and restarted the services","date":"2017-06-16T17:06:03.721Z","type":"message"}
{"nick":"creationix","message":"hopefully some of these bug fixes will improve the crap stability we've had lately","date":"2017-06-16T17:06:18.608Z","type":"message"}
{"nick":"SinisterRectus","message":"nice","date":"2017-06-16T17:07:23.117Z","type":"message"}
{"nick":"creationix","message":"thanks everyone for helping when I'm busy","date":"2017-06-16T17:07:56.461Z","type":"message"}
{"nick":"travis-ci","date":"2017-06-16T17:20:54.442Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#2988 (master - 3bda341 : Tim Caswell): The build passed.","date":"2017-06-16T17:20:55.378Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/bf781aaf2f07...3bda341d5897","date":"2017-06-16T17:20:55.443Z","type":"message"}
{"nick":"travis-ci","message":"Build details : https://travis-ci.org/luvit/luvit/builds/243745980","date":"2017-06-16T17:20:55.444Z","type":"message"}
{"nick":"travis-ci","date":"2017-06-16T17:20:55.444Z","type":"part"}
{"nick":"rendar","reason":"Ping timeout: 258 seconds","date":"2017-06-16T18:36:56.205Z","type":"quit"}
{"nick":"rendar","date":"2017-06-16T19:06:48.421Z","type":"join"}
{"nick":"Soni","message":"creationix: I've always wondered, why does every runtime ever created (including LuaJIT) insist on keeping everything loaded in RAM at all times?","date":"2017-06-16T19:27:03.912Z","type":"message"}
{"nick":"Soni","message":"even \"dead code\" caused by read-only properties initialized at runtime","date":"2017-06-16T19:27:32.275Z","type":"message"}
{"nick":"Soni","message":"e.g. local flag = os.getenv(\"something\") function thisGetsCalledInATightLoop() if flag then <some code that never gets called> else <some code that always gets called> end end","date":"2017-06-16T19:28:26.416Z","type":"message"}
{"nick":"Soni","message":"LuaJIT keeps the bytecode always loaded and never gets rid of it","date":"2017-06-16T19:28:38.624Z","type":"message"}
{"nick":"Soni","message":"even tho there's a whole section of code that's never gonna be used","date":"2017-06-16T19:29:08.363Z","type":"message"}
{"nick":"Soni","message":"I guess this is what loadstring is for...","date":"2017-06-16T19:32:09.642Z","type":"message"}
{"nick":"Soni","message":"thisGetsCalledInATightLoop = require \"thisGetsCalledInATightLoop\" .. (flag and \"_flagged\" or \"\")","date":"2017-06-16T19:33:18.595Z","type":"message"}
{"nick":"Soni","message":"hmm","date":"2017-06-16T19:33:20.968Z","type":"message"}
{"nick":"Soni","message":"maybe the solution is to add more lazy evaluation everywhere","date":"2017-06-16T19:33:31.033Z","type":"message"}
{"nick":"Soni","message":"...","date":"2017-06-16T19:36:33.604Z","type":"message"}
{"nick":"Soni","message":"GCC *could* be lazy evaluated","date":"2017-06-16T19:36:39.943Z","type":"message"}
{"nick":"Soni","message":"but every call would have to be an indirect call","date":"2017-06-16T19:36:46.994Z","type":"message"}
{"nick":"Soni","message":"but that's fine IMO","date":"2017-06-16T19:36:50.860Z","type":"message"}
{"nick":"Soni","message":"but then again most native code runs straight from disk","date":"2017-06-16T19:37:05.199Z","type":"message"}
{"nick":"Soni","message":"so it doesn't matter for GCC","date":"2017-06-16T19:37:10.293Z","type":"message"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2017-06-16T20:26:14.757Z","type":"quit"}
{"nick":"SinisterRectus","message":"the halting problem?","date":"2017-06-16T20:32:43.952Z","type":"message"}
{"nick":"SinisterRectus","message":"there's no way to know that the code is never needed again","date":"2017-06-16T20:32:55.126Z","type":"message"}
{"nick":"Soni","message":"SinisterRectus: it's not a halting problem issue","date":"2017-06-16T20:47:31.168Z","type":"message"}
{"nick":"SinisterRectus","message":"what code do you want it to release","date":"2017-06-16T20:48:13.387Z","type":"message"}
{"nick":"Soni","message":"there are many ways to know 1. the code is never referenced 2. it's a constant 3. etc 4. even the JIT eliminates it","date":"2017-06-16T20:48:25.229Z","type":"message"}
{"nick":"Soni","message":"if the JIT eliminates it from the JITted code why not eliminate it from the \"source\" bytecode?","date":"2017-06-16T20:48:45.200Z","type":"message"}
{"nick":"SinisterRectus","message":"that i don't know, but i wouldn't expect it to either","date":"2017-06-16T20:50:30.277Z","type":"message"}
