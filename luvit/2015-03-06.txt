{"nick":"creationix!~creationi@2001","topic":"Lua + libUV + jiT = pure awesome-sauce | http://luvit.io | https://github.com/luvit/luvit | https://github.com/luvit/luv","date":"2015-03-06T13:51:37.066Z","type":"topic"}
{"nick":"torpor","reason":"Quit: Leaving.","date":"2015-03-06T14:05:35.052Z","type":"quit"}
{"nick":"james2doyle","date":"2015-03-06T14:22:39.667Z","type":"join"}
{"nick":"piernov","reason":"Ping timeout: 252 seconds","date":"2015-03-06T14:48:27.031Z","type":"quit"}
{"nick":"piernov","date":"2015-03-06T14:50:22.309Z","type":"join"}
{"nick":"piernov","reason":"Ping timeout: 272 seconds","date":"2015-03-06T14:55:20.263Z","type":"quit"}
{"nick":"piernov","date":"2015-03-06T14:55:49.301Z","type":"join"}
{"nick":"piernov","reason":"Ping timeout: 272 seconds","date":"2015-03-06T15:01:02.217Z","type":"quit"}
{"nick":"piernov","date":"2015-03-06T15:01:11.262Z","type":"join"}
{"nick":"creationix","message":"rje: rphillips: so funny think, when using ffi.load, the dll name and exe name don’t seem to matter","date":"2015-03-06T15:10:47.041Z","type":"message"}
{"nick":"SouL_","date":"2015-03-06T15:10:52.264Z","type":"join"}
{"nick":"torpor","date":"2015-03-06T15:11:09.376Z","type":"join"}
{"nick":"creationix","message":"ahh, it must be because since my .dll isn’t a lua binding, it doesn’t need any code from the lua binary","date":"2015-03-06T15:11:30.011Z","type":"message"}
{"nick":"creationix","message":"so that is one idea, to use ffi for everything and just wrap C apis in C wrappers that expose a ffi friendly interface.  i don’t want to redo libuv and openssl right now (way too much work), but it might be feasable for sigar","date":"2015-03-06T15:12:34.848Z","type":"message"}
{"nick":"creationix","message":"for glfw, ffi can use it directly mostly, the C callbacks just cause trouble.  But I tried writing a pull-based wrapper last night, it almost worked","date":"2015-03-06T15:13:17.431Z","type":"message"}
{"nick":"rphillips","message":"neat","date":"2015-03-06T15:15:43.185Z","type":"message"}
{"nick":"creationix","message":"I made a wrapper that supplied the callbacks in C land. The calbacks simply put the event data into an event queue that you could read from using ffi","date":"2015-03-06T15:16:18.970Z","type":"message"}
{"nick":"creationix","message":"only problem is, the event poll or wait command blocks for a long time","date":"2015-03-06T15:16:35.470Z","type":"message"}
{"nick":"creationix","message":"for example, if you are resizing a window, it’s blocked as long as the mouse is pressed, even if you’ve paused resizing","date":"2015-03-06T15:17:00.953Z","type":"message"}
{"nick":"creationix","message":"so you won’t get any of the resize events till after the mouse lets up, then you’ll get a ton","date":"2015-03-06T15:17:13.976Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/kkaefer/gluv","date":"2015-03-06T15:18:31.340Z","type":"message"}
{"nick":"rphillips","message":"interesting solution","date":"2015-03-06T15:18:36.107Z","type":"message"}
{"nick":"creationix","message":"yep, that’s probably the best way to do it currently, not perfect","date":"2015-03-06T15:19:25.454Z","type":"message"}
{"nick":"creationix","message":"but even with that, https://github.com/kkaefer/gluv/blob/master/src/main.c#L122 won’t unblock the entire time you’re resizing a window","date":"2015-03-06T15:20:59.563Z","type":"message"}
{"nick":"creationix","message":"(even with the other thread telling it to unblock by sending empty events)","date":"2015-03-06T15:21:13.775Z","type":"message"}
{"nick":"creationix","message":"but that’s a issue with glfw’s API, not sure how to get around it","date":"2015-03-06T15:24:41.072Z","type":"message"}
{"nick":"rphillips","message":"going to work ont he process.{stdout, stdin, stderr} support","date":"2015-03-06T15:28:41.611Z","type":"message"}
{"nick":"creationix","message":"cool","date":"2015-03-06T15:28:45.589Z","type":"message"}
{"nick":"creationix","message":"so I found an issue with my platform filter code in lit","date":"2015-03-06T15:29:03.393Z","type":"message"}
{"nick":"creationix","message":"the filters currently apply when importing from filesystem to lit db","date":"2015-03-06T15:29:21.116Z","type":"message"}
{"nick":"creationix","message":"but when publishing a module, you want to publish all platforms, and when installing, you want only the files for your platform","date":"2015-03-06T15:29:33.249Z","type":"message"}
{"nick":"creationix","message":"so that complicates things.  I need to run the filters when importing from local db to local exe, and make the filter more permissive when importing from fs to db for publishing, but not more permissive when importing from fs to exe","date":"2015-03-06T15:30:36.549Z","type":"message"}
{"nick":"travis-ci","date":"2015-03-06T15:39:53.380Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1790 (luvi-up - 9ebeb52 : Ryan Phillips): The build passed.","date":"2015-03-06T15:39:54.290Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/b3870cdcd6e1...9ebeb5212d83","date":"2015-03-06T15:39:54.448Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/53354925","date":"2015-03-06T15:39:54.448Z","type":"message"}
{"nick":"travis-ci","date":"2015-03-06T15:39:54.448Z","type":"part"}
{"nick":"dan336","date":"2015-03-06T15:45:42.523Z","type":"join"}
{"nick":"torpor","date":"2015-03-06T15:55:13.254Z","type":"part"}
{"nick":"hdms","reason":"Ping timeout: 245 seconds","date":"2015-03-06T15:55:39.693Z","type":"quit"}
