{"nick":"UniOn","reason":"Remote host closed the connection","date":"2014-10-31T00:05:31.607Z","type":"quit"}
{"nick":"creationix","message":"rphillips: does luvi with openssl build on osx?","date":"2014-10-31T00:27:19.580Z","type":"message"}
{"nick":"creationix","message":"I’m missing #include <openssl/cms.h>","date":"2014-10-31T00:27:56.965Z","type":"message"}
{"nick":"creationix","message":"staticbuild works :)","date":"2014-10-31T00:33:46.758Z","type":"message"}
{"nick":"creationix","message":"hmm, I didn’t mean to push that partially done code to master","date":"2014-10-31T00:36:20.322Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T00:46:32.141Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#968 (luvi-up - b2fd52e : Tim Caswell): The build was fixed.","date":"2014-10-31T00:46:32.236Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/d05357145651...b2fd52eacf76","date":"2014-10-31T00:46:32.236Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/39555665","date":"2014-10-31T00:46:32.236Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T00:46:32.237Z","type":"part"}
{"nick":"rphillips","message":"creationix: the version on OSX is too old","date":"2014-10-31T00:56:02.076Z","type":"message"}
{"nick":"rphillips","message":"static build is the way to go","date":"2014-10-31T00:56:07.243Z","type":"message"}
{"nick":"creationix","message":"fair enough","date":"2014-10-31T00:56:25.957Z","type":"message"}
{"nick":"rphillips","message":"you can install openssl via homebrew and override the OPENSSL_* variables","date":"2014-10-31T00:56:47.670Z","type":"message"}
{"nick":"rphillips","message":"OPENSSL_ROOT_DIR is one of them","date":"2014-10-31T00:56:58.677Z","type":"message"}
{"nick":"rphillips","message":"heh, i have it in my history","date":"2014-10-31T00:57:24.975Z","type":"message"}
{"nick":"rphillips","message":"cmake -DWithSharedOpenSSL=OFF -DWithOpenSSL=ON -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DOPENSSL_INCLUDE_DIR=/usr/local/opt/openssl/include  -DOPENSSL_LIBRARIES=/usr/local/opt/openssl/lib ..","date":"2014-10-31T00:57:25.312Z","type":"message"}
{"nick":"DarkGod","reason":"Ping timeout: 245 seconds","date":"2014-10-31T00:59:49.665Z","type":"quit"}
{"nick":"creationix","message":"I almost have my tls wrapper working.  I just need to figure out the proper way to use lua_openssl again","date":"2014-10-31T01:01:31.264Z","type":"message"}
{"nick":"creationix","message":"it seems to change behavior after handshake completes","date":"2014-10-31T01:01:49.458Z","type":"message"}
{"nick":"rphillips","message":"https://gist.github.com/rphillips/b20ae3ef6819f410dcf5#file-ssl-lua-L110","date":"2014-10-31T01:10:05.718Z","type":"message"}
{"nick":"rphillips","message":"this ondata gets attached","date":"2014-10-31T01:10:14.001Z","type":"message"}
{"nick":"rphillips","message":"after the connection succeeds","date":"2014-10-31T01:10:20.773Z","type":"message"}
{"nick":"kazupon","date":"2014-10-31T01:12:33.011Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T01:22:22.827Z","type":"quit"}
{"nick":"creationix","message":"rphillips: where do you read the plaintext?","date":"2014-10-31T01:22:41.035Z","type":"message"}
{"nick":"creationix","message":"I see data coming out of input, but it’s certainly not plaintext","date":"2014-10-31T01:23:13.981Z","type":"message"}
{"nick":"creationix","message":"ahh, that’s where I use ssl:read","date":"2014-10-31T01:25:52.340Z","type":"message"}
{"nick":"creationix","message":"it works!","date":"2014-10-31T01:26:32.892Z","type":"message"}
{"nick":"rphillips","message":"awesome","date":"2014-10-31T01:29:32.810Z","type":"message"}
{"nick":"creationix","message":"you can merge your luvi PR now :)","date":"2014-10-31T01:36:00.265Z","type":"message"}
{"nick":"creationix","message":"rphillips: usage in my new channel wrapper https://github.com/luvit/luvit/blob/luvi-up/test-tls.lua#L279-L297","date":"2014-10-31T01:36:46.614Z","type":"message"}
{"nick":"creationix","message":"hmm, I should test the coroutine interface","date":"2014-10-31T01:38:09.354Z","type":"message"}
{"nick":"kazupon","date":"2014-10-31T01:40:42.743Z","type":"join"}
{"nick":"creationix","message":"I think lua_openssl has memory bugs.  I get segfaults when I put it under and load","date":"2014-10-31T02:02:45.933Z","type":"message"}
{"nick":"creationix","message":"just excessive logging is enough memory pressure to trigger the segfaults","date":"2014-10-31T02:02:59.437Z","type":"message"}
{"nick":"creationix","message":"rphillips: blocking style too! https://github.com/luvit/luvit/blob/luvi-up/test-tls.lua#L276-L299","date":"2014-10-31T02:09:28.893Z","type":"message"}
{"nick":"creationix","message":"there are still a couple bugs and it needs better proper shutdown and EOS handling, but it’s mostly there.","date":"2014-10-31T02:09:53.983Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T02:10:33.660Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#970 (luvi-up - c8706c3 : Tim Caswell): The build passed.","date":"2014-10-31T02:10:33.716Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/d78b3c08b124...c8706c38e21f","date":"2014-10-31T02:10:33.716Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/39559923","date":"2014-10-31T02:10:33.716Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T02:10:33.717Z","type":"part"}
{"nick":"travis-ci","date":"2014-10-31T02:15:43.066Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#971 (luvi-up - 19d64ae : Tim Caswell): The build passed.","date":"2014-10-31T02:15:43.122Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/c8706c38e21f...19d64ae7940e","date":"2014-10-31T02:15:43.122Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/39560161","date":"2014-10-31T02:15:43.122Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T02:15:43.122Z","type":"part"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-10-31T02:25:02.918Z","type":"quit"}
{"nick":"rphillips","message":"\\","date":"2014-10-31T02:25:57.476Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/luvit/luvit/blob/luvi-up/test-tls.lua#L112","date":"2014-10-31T02:25:59.219Z","type":"message"}
{"nick":"rphillips","message":"creationix: all the local functions need local in front of them... or they get leaked to the global space","date":"2014-10-31T02:26:16.071Z","type":"message"}
{"nick":"creationix","message":"there are no leaks, I declare them at top","date":"2014-10-31T02:26:29.004Z","type":"message"}
{"nick":"creationix","message":"that way they can see eachother","date":"2014-10-31T02:26:34.274Z","type":"message"}
{"nick":"creationix","message":"my editor has luacheck running as a live lint that is great for this","date":"2014-10-31T02:26:45.221Z","type":"message"}
{"nick":"rphillips","message":"ah gotcha","date":"2014-10-31T02:26:45.600Z","type":"message"}
{"nick":"rphillips","message":"cool","date":"2014-10-31T02:26:46.235Z","type":"message"}
{"nick":"creationix","message":"it’s stricter than jshint","date":"2014-10-31T02:26:50.421Z","type":"message"}
{"nick":"rphillips","message":"this is very nice...","date":"2014-10-31T02:27:09.276Z","type":"message"}
{"nick":"creationix","message":"it will even complain if I declare a variable, set a value to it and then never use it","date":"2014-10-31T02:27:15.307Z","type":"message"}
{"nick":"creationix","message":"I sent an email to the list asking what they think about adding coroutine support to everything","date":"2014-10-31T02:27:55.356Z","type":"message"}
{"nick":"rphillips","message":"luv_fs_read has a 48 byte leak","date":"2014-10-31T02:33:50.704Z","type":"message"}
{"nick":"rphillips","message":"looks like the uv_buf_t has the malloc pointer","date":"2014-10-31T02:41:04.218Z","type":"message"}
{"nick":"rphillips","message":"for data","date":"2014-10-31T02:41:09.284Z","type":"message"}
{"nick":"rphillips","message":"48-60 bytes","date":"2014-10-31T02:58:15.456Z","type":"message"}
{"nick":"rphillips","message":"in different cases","date":"2014-10-31T02:58:18.567Z","type":"message"}
{"nick":"creationix","message":"rphillips: which one?  luvit or luv?","date":"2014-10-31T03:29:58.166Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T03:37:06.867Z","type":"quit"}
{"nick":"rch","message":"creationix: your editor… not tedit right","date":"2014-10-31T03:37:14.362Z","type":"message"}
{"nick":"creationix","message":"not lately.  tedit is better for browser JS work, not C and lua","date":"2014-10-31T03:37:32.201Z","type":"message"}
{"nick":"creationix","message":"I mostly use sublime 3 lately","date":"2014-10-31T03:37:40.282Z","type":"message"}
{"nick":"rch","message":"ah cool","date":"2014-10-31T03:38:04.411Z","type":"message"}
{"nick":"creationix","message":"if you ever do much lua stuff, I highly recommend setting up luacheck","date":"2014-10-31T03:38:29.468Z","type":"message"}
{"nick":"rch","action":"notes","date":"2014-10-31T03:40:36.972Z","type":"action"}
{"nick":"a_le","date":"2014-10-31T04:02:09.863Z","type":"join"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-10-31T04:29:12.141Z","type":"quit"}
{"nick":"a_le","date":"2014-10-31T04:29:47.974Z","type":"join"}
{"nick":"kazupon","date":"2014-10-31T04:37:38.645Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2014-10-31T04:42:19.690Z","type":"quit"}
{"nick":"kazupon","date":"2014-10-31T04:43:30.190Z","type":"join"}
{"nick":"travis-ci","date":"2014-10-31T05:09:04.784Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#973 (luvi-up - 5d7a012 : Tim Caswell): The build passed.","date":"2014-10-31T05:09:04.876Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/c83252fcf2b0...5d7a0128fd01","date":"2014-10-31T05:09:04.876Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/39563812","date":"2014-10-31T05:09:04.876Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T05:09:04.876Z","type":"part"}
{"nick":"a_le_","date":"2014-10-31T05:28:16.058Z","type":"join"}
{"nick":"a_le","reason":"Ping timeout: 264 seconds","date":"2014-10-31T05:30:29.969Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T07:05:28.103Z","type":"quit"}
{"nick":"kazupon","date":"2014-10-31T07:06:26.658Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T07:58:45.866Z","type":"quit"}
{"nick":"kazupon","date":"2014-10-31T11:33:49.096Z","type":"join"}
{"nick":"rphillips","message":"its in luvi with our OpenSSL changes","date":"2014-10-31T12:03:16.672Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T12:06:04.407Z","type":"quit"}
{"nick":"kazupon","date":"2014-10-31T12:50:42.213Z","type":"join"}
{"nick":"rphillips","message":"https://sourceforge.net/projects/axtls/","date":"2014-10-31T13:18:44.696Z","type":"message"}
{"nick":"dan336","date":"2014-10-31T14:22:12.767Z","type":"join"}
{"nick":"creationix","message":"rphillips: axtls looks nice","date":"2014-10-31T14:25:37.987Z","type":"message"}
{"nick":"creationix","message":"rphillips: any reason we can’t use axtls instead of openssl.  I love the smaller footprint and simpler API","date":"2014-10-31T14:34:00.675Z","type":"message"}
{"nick":"rphillips","message":"looking at it...","date":"2014-10-31T14:34:22.311Z","type":"message"}
{"nick":"rphillips","message":"my concern is that everyone uses openssl","date":"2014-10-31T14:36:15.290Z","type":"message"}
{"nick":"rphillips","message":"defacto standard almost","date":"2014-10-31T14:36:24.363Z","type":"message"}
{"nick":"creationix","message":"right, more eyes","date":"2014-10-31T14:37:04.406Z","type":"message"}
{"nick":"creationix","message":"for dukluv, I’ll probably use axtls.  I care even more about footprint there","date":"2014-10-31T14:37:24.226Z","type":"message"}
{"nick":"creationix","message":"I know static linking openssl blows up the binary size, but does it use a lot more ram too or is dynamic linking just as bad on ram?","date":"2014-10-31T14:38:05.967Z","type":"message"}
{"nick":"rphillips","message":"supposedly the system shares the shared library between processes","date":"2014-10-31T14:42:01.590Z","type":"message"}
{"nick":"creationix","message":"true, so openssl isn’t too bad on linux","date":"2014-10-31T14:42:14.276Z","type":"message"}
{"nick":"creationix","message":"I just hate to triple the memory requirements for luvit just to have https clients","date":"2014-10-31T14:42:34.285Z","type":"message"}
{"nick":"a_le_","reason":"Remote host closed the connection","date":"2014-10-31T14:47:27.080Z","type":"quit"}
{"nick":"a_le","date":"2014-10-31T14:48:03.127Z","type":"join"}
{"nick":"a_le","reason":"Ping timeout: 256 seconds","date":"2014-10-31T14:52:44.086Z","type":"quit"}
{"nick":"rphillips","message":"nice thing about openssl is if someone has an accelerator then it will get used","date":"2014-10-31T14:53:14.987Z","type":"message"}
{"nick":"a_le","date":"2014-10-31T14:57:02.095Z","type":"join"}
{"nick":"rphillips","message":"has lua bindings","date":"2014-10-31T14:58:36.540Z","type":"message"}
{"nick":"rphillips","message":"it would be slick to support both","date":"2014-10-31T14:58:47.703Z","type":"message"}
{"nick":"rphillips","message":"but i think it's a nice to have","date":"2014-10-31T14:59:00.866Z","type":"message"}
{"nick":"rphillips","message":"creationix: https://github.com/luvit/luv/blob/master/src/fs.c#L263","date":"2014-10-31T15:00:46.930Z","type":"message"}
{"nick":"rphillips","message":"where is this data buffer freed?","date":"2014-10-31T15:00:53.326Z","type":"message"}
{"nick":"creationix","message":"rphillips: looks like I forgot.  It should be freed at https://github.com/luvit/luv/blob/master/src/fs.c#L166","date":"2014-10-31T15:09:23.003Z","type":"message"}
{"nick":"creationix","message":"also it’s a shame I can’t use req->ptr.  I tried, but libuv was writing over my pointer.","date":"2014-10-31T15:09:51.981Z","type":"message"}
{"nick":"creationix","message":"fs read is the *only* thing that data field on luv_req_t is used for","date":"2014-10-31T15:10:29.679Z","type":"message"}
{"nick":"rphillips","message":"oh, that makes it easier then","date":"2014-10-31T15:10:49.790Z","type":"message"}
{"nick":"creationix","message":"should probably wait to malloc it till after checking arguments too","date":"2014-10-31T15:12:34.689Z","type":"message"}
{"nick":"creationix","message":"it’s not needed till https://github.com/luvit/luv/blob/master/src/fs.c#L270","date":"2014-10-31T15:12:43.753Z","type":"message"}
{"nick":"creationix","message":"rphillips: shall I fix it?  I want to cleanup that function a little anyway.","date":"2014-10-31T15:13:37.618Z","type":"message"}
{"nick":"rphillips","message":"sure","date":"2014-10-31T15:13:45.159Z","type":"message"}
{"nick":"creationix","message":"and we can add fs_read to the memory leak tests too","date":"2014-10-31T15:13:49.055Z","type":"message"}
{"nick":"rphillips","message":"thanks... i'm not too sure where to shoehorn it in","date":"2014-10-31T15:14:04.405Z","type":"message"}
{"nick":"creationix","message":"I’m trying to convince libuv to make the API easier to use","date":"2014-10-31T15:20:28.156Z","type":"message"}
{"nick":"creationix","message":"they already have the buffer inside buf.base","date":"2014-10-31T15:20:42.212Z","type":"message"}
{"nick":"creationix","message":"if it was simply exposed in req->ptr in the result I wouldn’t need to store a copy of the pointer in my custom data struct","date":"2014-10-31T15:21:02.562Z","type":"message"}
{"nick":"creationix","message":"rphillips: btw, for dukluv, I made a quick little type checking library that really cleaned up my code there. https://github.com/creationix/dukluv/blob/master/src/stream.c#L37-L42","date":"2014-10-31T15:21:56.149Z","type":"message"}
{"nick":"creationix","message":"I declare all my variables first, then check all my arguments, then I start to allocate memory and do things that require cleanup.","date":"2014-10-31T15:22:17.587Z","type":"message"}
{"nick":"creationix","message":"should I port this to luv?  I think it would fix many memory leaks around invalid inputs.  Not to mention cleanup the code a bit and document the argument names and types.","date":"2014-10-31T15:22:59.312Z","type":"message"}
{"nick":"rphillips","message":"yeah that would be slick","date":"2014-10-31T15:25:34.183Z","type":"message"}
{"nick":"creationix","message":"it should give really useful error messages combined with luaL_argcheck.","date":"2014-10-31T15:27:21.912Z","type":"message"}
{"nick":"creationix","message":"rphillips: does it cost more to inline the static array in the function or is it better to declare it outside the function?","date":"2014-10-31T15:28:07.928Z","type":"message"}
{"nick":"creationix","message":"I prefer the syntax of being inside, but I’ll move it out if it costs a lot more.  My thinking is the C compiler will see it’s static and waste memory on every call.","date":"2014-10-31T15:28:48.174Z","type":"message"}
{"nick":"rphillips","message":"that doesn't sound thread safe","date":"2014-10-31T15:28:48.647Z","type":"message"}
{"nick":"rphillips","message":"if it's a static string... outside the function would be better","date":"2014-10-31T15:29:06.985Z","type":"message"}
{"nick":"creationix","message":"but it’s immutable, why do threads matter?","date":"2014-10-31T15:29:16.703Z","type":"message"}
{"nick":"rphillips","message":"if it's immutable, then it's fine","date":"2014-10-31T15:29:28.184Z","type":"message"}
{"nick":"creationix","message":"I’m talking about the const duv_schema_entry[] btw","date":"2014-10-31T15:29:35.415Z","type":"message"}
{"nick":"creationix","message":"a const and static array containing const and static char* and function pointers","date":"2014-10-31T15:30:01.539Z","type":"message"}
{"nick":"rphillips","message":"outside the function is where I usually see them","date":"2014-10-31T15:30:12.533Z","type":"message"}
{"nick":"creationix","message":"cool, thanks","date":"2014-10-31T15:30:31.709Z","type":"message"}
{"nick":"dan336","message":"just FYI i opened an issue where received udp packets are never freed. (memory leak)","date":"2014-10-31T15:51:51.082Z","type":"message"}
{"nick":"creationix","message":"dan336: awesome, thanks","date":"2014-10-31T15:53:14.648Z","type":"message"}
{"nick":"creationix","message":"I think I’ll spend today cleaning up leaks in luv and adding the schema framework to cleanup code.","date":"2014-10-31T15:53:30.829Z","type":"message"}
{"nick":"dan336","message":"cool.","date":"2014-10-31T15:54:26.800Z","type":"message"}
{"nick":"creationix","message":"dan336: though I don’t see your issue.  Your leak is again the C code in luvit master?","date":"2014-10-31T15:54:55.485Z","type":"message"}
{"nick":"creationix","message":"*against","date":"2014-10-31T15:55:00.726Z","type":"message"}
{"nick":"dan336","message":"yeah it is","date":"2014-10-31T15:55:07.269Z","type":"message"}
{"nick":"creationix","message":"I’m working on the code in luvit/luv that’s replacing all the C code in luvit","date":"2014-10-31T15:55:11.095Z","type":"message"}
{"nick":"creationix","message":"the luvi-up branch of luvit will become luvit 2.0 with luv at the core","date":"2014-10-31T15:55:35.148Z","type":"message"}
{"nick":"dan336","message":"ok, should I be testing against that branch then?","date":"2014-10-31T15:55:51.749Z","type":"message"}
{"nick":"creationix","message":"well, luvi-up is still quite alpha","date":"2014-10-31T15:56:03.773Z","type":"message"}
{"nick":"creationix","message":"most the luvit features are still missing","date":"2014-10-31T15:56:09.884Z","type":"message"}
{"nick":"dan336","message":"alright, I'll wait then.","date":"2014-10-31T15:56:13.517Z","type":"message"}
{"nick":"dan336","message":"I'm using udp heavily right now for a new project and every packet leaks :)","date":"2014-10-31T15:56:35.187Z","type":"message"}
{"nick":"dan336","message":"so I'll just be patient","date":"2014-10-31T15:56:38.931Z","type":"message"}
