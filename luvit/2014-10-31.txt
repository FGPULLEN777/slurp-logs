{"nick":"UniOn","reason":"Remote host closed the connection","date":"2014-10-31T00:05:31.607Z","type":"quit"}
{"nick":"creationix","message":"rphillips: does luvi with openssl build on osx?","date":"2014-10-31T00:27:19.580Z","type":"message"}
{"nick":"creationix","message":"I’m missing #include <openssl/cms.h>","date":"2014-10-31T00:27:56.965Z","type":"message"}
{"nick":"creationix","message":"staticbuild works :)","date":"2014-10-31T00:33:46.758Z","type":"message"}
{"nick":"creationix","message":"hmm, I didn’t mean to push that partially done code to master","date":"2014-10-31T00:36:20.322Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T00:46:32.141Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#968 (luvi-up - b2fd52e : Tim Caswell): The build was fixed.","date":"2014-10-31T00:46:32.236Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/d05357145651...b2fd52eacf76","date":"2014-10-31T00:46:32.236Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/39555665","date":"2014-10-31T00:46:32.236Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T00:46:32.237Z","type":"part"}
{"nick":"rphillips","message":"creationix: the version on OSX is too old","date":"2014-10-31T00:56:02.076Z","type":"message"}
{"nick":"rphillips","message":"static build is the way to go","date":"2014-10-31T00:56:07.243Z","type":"message"}
{"nick":"creationix","message":"fair enough","date":"2014-10-31T00:56:25.957Z","type":"message"}
{"nick":"rphillips","message":"you can install openssl via homebrew and override the OPENSSL_* variables","date":"2014-10-31T00:56:47.670Z","type":"message"}
{"nick":"rphillips","message":"OPENSSL_ROOT_DIR is one of them","date":"2014-10-31T00:56:58.677Z","type":"message"}
{"nick":"rphillips","message":"heh, i have it in my history","date":"2014-10-31T00:57:24.975Z","type":"message"}
{"nick":"rphillips","message":"cmake -DWithSharedOpenSSL=OFF -DWithOpenSSL=ON -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DOPENSSL_INCLUDE_DIR=/usr/local/opt/openssl/include  -DOPENSSL_LIBRARIES=/usr/local/opt/openssl/lib ..","date":"2014-10-31T00:57:25.312Z","type":"message"}
{"nick":"DarkGod","reason":"Ping timeout: 245 seconds","date":"2014-10-31T00:59:49.665Z","type":"quit"}
{"nick":"creationix","message":"I almost have my tls wrapper working.  I just need to figure out the proper way to use lua_openssl again","date":"2014-10-31T01:01:31.264Z","type":"message"}
{"nick":"creationix","message":"it seems to change behavior after handshake completes","date":"2014-10-31T01:01:49.458Z","type":"message"}
{"nick":"rphillips","message":"https://gist.github.com/rphillips/b20ae3ef6819f410dcf5#file-ssl-lua-L110","date":"2014-10-31T01:10:05.718Z","type":"message"}
{"nick":"rphillips","message":"this ondata gets attached","date":"2014-10-31T01:10:14.001Z","type":"message"}
{"nick":"rphillips","message":"after the connection succeeds","date":"2014-10-31T01:10:20.773Z","type":"message"}
{"nick":"kazupon","date":"2014-10-31T01:12:33.011Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T01:22:22.827Z","type":"quit"}
{"nick":"creationix","message":"rphillips: where do you read the plaintext?","date":"2014-10-31T01:22:41.035Z","type":"message"}
{"nick":"creationix","message":"I see data coming out of input, but it’s certainly not plaintext","date":"2014-10-31T01:23:13.981Z","type":"message"}
{"nick":"creationix","message":"ahh, that’s where I use ssl:read","date":"2014-10-31T01:25:52.340Z","type":"message"}
{"nick":"creationix","message":"it works!","date":"2014-10-31T01:26:32.892Z","type":"message"}
{"nick":"rphillips","message":"awesome","date":"2014-10-31T01:29:32.810Z","type":"message"}
{"nick":"creationix","message":"you can merge your luvi PR now :)","date":"2014-10-31T01:36:00.265Z","type":"message"}
{"nick":"creationix","message":"rphillips: usage in my new channel wrapper https://github.com/luvit/luvit/blob/luvi-up/test-tls.lua#L279-L297","date":"2014-10-31T01:36:46.614Z","type":"message"}
{"nick":"creationix","message":"hmm, I should test the coroutine interface","date":"2014-10-31T01:38:09.354Z","type":"message"}
{"nick":"kazupon","date":"2014-10-31T01:40:42.743Z","type":"join"}
{"nick":"creationix","message":"I think lua_openssl has memory bugs.  I get segfaults when I put it under and load","date":"2014-10-31T02:02:45.933Z","type":"message"}
{"nick":"creationix","message":"just excessive logging is enough memory pressure to trigger the segfaults","date":"2014-10-31T02:02:59.437Z","type":"message"}
{"nick":"creationix","message":"rphillips: blocking style too! https://github.com/luvit/luvit/blob/luvi-up/test-tls.lua#L276-L299","date":"2014-10-31T02:09:28.893Z","type":"message"}
{"nick":"creationix","message":"there are still a couple bugs and it needs better proper shutdown and EOS handling, but it’s mostly there.","date":"2014-10-31T02:09:53.983Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T02:10:33.660Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#970 (luvi-up - c8706c3 : Tim Caswell): The build passed.","date":"2014-10-31T02:10:33.716Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/d78b3c08b124...c8706c38e21f","date":"2014-10-31T02:10:33.716Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/39559923","date":"2014-10-31T02:10:33.716Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T02:10:33.717Z","type":"part"}
{"nick":"travis-ci","date":"2014-10-31T02:15:43.066Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#971 (luvi-up - 19d64ae : Tim Caswell): The build passed.","date":"2014-10-31T02:15:43.122Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/c8706c38e21f...19d64ae7940e","date":"2014-10-31T02:15:43.122Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/39560161","date":"2014-10-31T02:15:43.122Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T02:15:43.122Z","type":"part"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-10-31T02:25:02.918Z","type":"quit"}
{"nick":"rphillips","message":"\\","date":"2014-10-31T02:25:57.476Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/luvit/luvit/blob/luvi-up/test-tls.lua#L112","date":"2014-10-31T02:25:59.219Z","type":"message"}
{"nick":"rphillips","message":"creationix: all the local functions need local in front of them... or they get leaked to the global space","date":"2014-10-31T02:26:16.071Z","type":"message"}
{"nick":"creationix","message":"there are no leaks, I declare them at top","date":"2014-10-31T02:26:29.004Z","type":"message"}
{"nick":"creationix","message":"that way they can see eachother","date":"2014-10-31T02:26:34.274Z","type":"message"}
{"nick":"creationix","message":"my editor has luacheck running as a live lint that is great for this","date":"2014-10-31T02:26:45.221Z","type":"message"}
{"nick":"rphillips","message":"ah gotcha","date":"2014-10-31T02:26:45.600Z","type":"message"}
{"nick":"rphillips","message":"cool","date":"2014-10-31T02:26:46.235Z","type":"message"}
{"nick":"creationix","message":"it’s stricter than jshint","date":"2014-10-31T02:26:50.421Z","type":"message"}
{"nick":"rphillips","message":"this is very nice...","date":"2014-10-31T02:27:09.276Z","type":"message"}
{"nick":"creationix","message":"it will even complain if I declare a variable, set a value to it and then never use it","date":"2014-10-31T02:27:15.307Z","type":"message"}
{"nick":"creationix","message":"I sent an email to the list asking what they think about adding coroutine support to everything","date":"2014-10-31T02:27:55.356Z","type":"message"}
{"nick":"rphillips","message":"luv_fs_read has a 48 byte leak","date":"2014-10-31T02:33:50.704Z","type":"message"}
{"nick":"rphillips","message":"looks like the uv_buf_t has the malloc pointer","date":"2014-10-31T02:41:04.218Z","type":"message"}
{"nick":"rphillips","message":"for data","date":"2014-10-31T02:41:09.284Z","type":"message"}
{"nick":"rphillips","message":"48-60 bytes","date":"2014-10-31T02:58:15.456Z","type":"message"}
{"nick":"rphillips","message":"in different cases","date":"2014-10-31T02:58:18.567Z","type":"message"}
{"nick":"creationix","message":"rphillips: which one?  luvit or luv?","date":"2014-10-31T03:29:58.166Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T03:37:06.867Z","type":"quit"}
{"nick":"rch","message":"creationix: your editor… not tedit right","date":"2014-10-31T03:37:14.362Z","type":"message"}
{"nick":"creationix","message":"not lately.  tedit is better for browser JS work, not C and lua","date":"2014-10-31T03:37:32.201Z","type":"message"}
{"nick":"creationix","message":"I mostly use sublime 3 lately","date":"2014-10-31T03:37:40.282Z","type":"message"}
{"nick":"rch","message":"ah cool","date":"2014-10-31T03:38:04.411Z","type":"message"}
{"nick":"creationix","message":"if you ever do much lua stuff, I highly recommend setting up luacheck","date":"2014-10-31T03:38:29.468Z","type":"message"}
{"nick":"rch","action":"notes","date":"2014-10-31T03:40:36.972Z","type":"action"}
{"nick":"a_le","date":"2014-10-31T04:02:09.863Z","type":"join"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-10-31T04:29:12.141Z","type":"quit"}
{"nick":"a_le","date":"2014-10-31T04:29:47.974Z","type":"join"}
{"nick":"kazupon","date":"2014-10-31T04:37:38.645Z","type":"join"}
{"nick":"kazupon","reason":"Ping timeout: 245 seconds","date":"2014-10-31T04:42:19.690Z","type":"quit"}
{"nick":"kazupon","date":"2014-10-31T04:43:30.190Z","type":"join"}
{"nick":"travis-ci","date":"2014-10-31T05:09:04.784Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#973 (luvi-up - 5d7a012 : Tim Caswell): The build passed.","date":"2014-10-31T05:09:04.876Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/c83252fcf2b0...5d7a0128fd01","date":"2014-10-31T05:09:04.876Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/39563812","date":"2014-10-31T05:09:04.876Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T05:09:04.876Z","type":"part"}
{"nick":"a_le_","date":"2014-10-31T05:28:16.058Z","type":"join"}
{"nick":"a_le","reason":"Ping timeout: 264 seconds","date":"2014-10-31T05:30:29.969Z","type":"quit"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T07:05:28.103Z","type":"quit"}
{"nick":"kazupon","date":"2014-10-31T07:06:26.658Z","type":"join"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T07:58:45.866Z","type":"quit"}
{"nick":"kazupon","date":"2014-10-31T11:33:49.096Z","type":"join"}
{"nick":"rphillips","message":"its in luvi with our OpenSSL changes","date":"2014-10-31T12:03:16.672Z","type":"message"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T12:06:04.407Z","type":"quit"}
{"nick":"kazupon","date":"2014-10-31T12:50:42.213Z","type":"join"}
{"nick":"rphillips","message":"https://sourceforge.net/projects/axtls/","date":"2014-10-31T13:18:44.696Z","type":"message"}
{"nick":"dan336","date":"2014-10-31T14:22:12.767Z","type":"join"}
{"nick":"creationix","message":"rphillips: axtls looks nice","date":"2014-10-31T14:25:37.987Z","type":"message"}
{"nick":"creationix","message":"rphillips: any reason we can’t use axtls instead of openssl.  I love the smaller footprint and simpler API","date":"2014-10-31T14:34:00.675Z","type":"message"}
{"nick":"rphillips","message":"looking at it...","date":"2014-10-31T14:34:22.311Z","type":"message"}
{"nick":"rphillips","message":"my concern is that everyone uses openssl","date":"2014-10-31T14:36:15.290Z","type":"message"}
{"nick":"rphillips","message":"defacto standard almost","date":"2014-10-31T14:36:24.363Z","type":"message"}
{"nick":"creationix","message":"right, more eyes","date":"2014-10-31T14:37:04.406Z","type":"message"}
{"nick":"creationix","message":"for dukluv, I’ll probably use axtls.  I care even more about footprint there","date":"2014-10-31T14:37:24.226Z","type":"message"}
{"nick":"creationix","message":"I know static linking openssl blows up the binary size, but does it use a lot more ram too or is dynamic linking just as bad on ram?","date":"2014-10-31T14:38:05.967Z","type":"message"}
{"nick":"rphillips","message":"supposedly the system shares the shared library between processes","date":"2014-10-31T14:42:01.590Z","type":"message"}
{"nick":"creationix","message":"true, so openssl isn’t too bad on linux","date":"2014-10-31T14:42:14.276Z","type":"message"}
{"nick":"creationix","message":"I just hate to triple the memory requirements for luvit just to have https clients","date":"2014-10-31T14:42:34.285Z","type":"message"}
{"nick":"a_le_","reason":"Remote host closed the connection","date":"2014-10-31T14:47:27.080Z","type":"quit"}
{"nick":"a_le","date":"2014-10-31T14:48:03.127Z","type":"join"}
{"nick":"a_le","reason":"Ping timeout: 256 seconds","date":"2014-10-31T14:52:44.086Z","type":"quit"}
{"nick":"rphillips","message":"nice thing about openssl is if someone has an accelerator then it will get used","date":"2014-10-31T14:53:14.987Z","type":"message"}
{"nick":"a_le","date":"2014-10-31T14:57:02.095Z","type":"join"}
{"nick":"rphillips","message":"has lua bindings","date":"2014-10-31T14:58:36.540Z","type":"message"}
{"nick":"rphillips","message":"it would be slick to support both","date":"2014-10-31T14:58:47.703Z","type":"message"}
{"nick":"rphillips","message":"but i think it's a nice to have","date":"2014-10-31T14:59:00.866Z","type":"message"}
{"nick":"rphillips","message":"creationix: https://github.com/luvit/luv/blob/master/src/fs.c#L263","date":"2014-10-31T15:00:46.930Z","type":"message"}
{"nick":"rphillips","message":"where is this data buffer freed?","date":"2014-10-31T15:00:53.326Z","type":"message"}
{"nick":"creationix","message":"rphillips: looks like I forgot.  It should be freed at https://github.com/luvit/luv/blob/master/src/fs.c#L166","date":"2014-10-31T15:09:23.003Z","type":"message"}
{"nick":"creationix","message":"also it’s a shame I can’t use req->ptr.  I tried, but libuv was writing over my pointer.","date":"2014-10-31T15:09:51.981Z","type":"message"}
{"nick":"creationix","message":"fs read is the *only* thing that data field on luv_req_t is used for","date":"2014-10-31T15:10:29.679Z","type":"message"}
{"nick":"rphillips","message":"oh, that makes it easier then","date":"2014-10-31T15:10:49.790Z","type":"message"}
{"nick":"creationix","message":"should probably wait to malloc it till after checking arguments too","date":"2014-10-31T15:12:34.689Z","type":"message"}
{"nick":"creationix","message":"it’s not needed till https://github.com/luvit/luv/blob/master/src/fs.c#L270","date":"2014-10-31T15:12:43.753Z","type":"message"}
{"nick":"creationix","message":"rphillips: shall I fix it?  I want to cleanup that function a little anyway.","date":"2014-10-31T15:13:37.618Z","type":"message"}
{"nick":"rphillips","message":"sure","date":"2014-10-31T15:13:45.159Z","type":"message"}
{"nick":"creationix","message":"and we can add fs_read to the memory leak tests too","date":"2014-10-31T15:13:49.055Z","type":"message"}
{"nick":"rphillips","message":"thanks... i'm not too sure where to shoehorn it in","date":"2014-10-31T15:14:04.405Z","type":"message"}
{"nick":"creationix","message":"I’m trying to convince libuv to make the API easier to use","date":"2014-10-31T15:20:28.156Z","type":"message"}
{"nick":"creationix","message":"they already have the buffer inside buf.base","date":"2014-10-31T15:20:42.212Z","type":"message"}
{"nick":"creationix","message":"if it was simply exposed in req->ptr in the result I wouldn’t need to store a copy of the pointer in my custom data struct","date":"2014-10-31T15:21:02.562Z","type":"message"}
{"nick":"creationix","message":"rphillips: btw, for dukluv, I made a quick little type checking library that really cleaned up my code there. https://github.com/creationix/dukluv/blob/master/src/stream.c#L37-L42","date":"2014-10-31T15:21:56.149Z","type":"message"}
{"nick":"creationix","message":"I declare all my variables first, then check all my arguments, then I start to allocate memory and do things that require cleanup.","date":"2014-10-31T15:22:17.587Z","type":"message"}
{"nick":"creationix","message":"should I port this to luv?  I think it would fix many memory leaks around invalid inputs.  Not to mention cleanup the code a bit and document the argument names and types.","date":"2014-10-31T15:22:59.312Z","type":"message"}
{"nick":"rphillips","message":"yeah that would be slick","date":"2014-10-31T15:25:34.183Z","type":"message"}
{"nick":"creationix","message":"it should give really useful error messages combined with luaL_argcheck.","date":"2014-10-31T15:27:21.912Z","type":"message"}
{"nick":"creationix","message":"rphillips: does it cost more to inline the static array in the function or is it better to declare it outside the function?","date":"2014-10-31T15:28:07.928Z","type":"message"}
{"nick":"creationix","message":"I prefer the syntax of being inside, but I’ll move it out if it costs a lot more.  My thinking is the C compiler will see it’s static and waste memory on every call.","date":"2014-10-31T15:28:48.174Z","type":"message"}
{"nick":"rphillips","message":"that doesn't sound thread safe","date":"2014-10-31T15:28:48.647Z","type":"message"}
{"nick":"rphillips","message":"if it's a static string... outside the function would be better","date":"2014-10-31T15:29:06.985Z","type":"message"}
{"nick":"creationix","message":"but it’s immutable, why do threads matter?","date":"2014-10-31T15:29:16.703Z","type":"message"}
{"nick":"rphillips","message":"if it's immutable, then it's fine","date":"2014-10-31T15:29:28.184Z","type":"message"}
{"nick":"creationix","message":"I’m talking about the const duv_schema_entry[] btw","date":"2014-10-31T15:29:35.415Z","type":"message"}
{"nick":"creationix","message":"a const and static array containing const and static char* and function pointers","date":"2014-10-31T15:30:01.539Z","type":"message"}
{"nick":"rphillips","message":"outside the function is where I usually see them","date":"2014-10-31T15:30:12.533Z","type":"message"}
{"nick":"creationix","message":"cool, thanks","date":"2014-10-31T15:30:31.709Z","type":"message"}
{"nick":"dan336","message":"just FYI i opened an issue where received udp packets are never freed. (memory leak)","date":"2014-10-31T15:51:51.082Z","type":"message"}
{"nick":"creationix","message":"dan336: awesome, thanks","date":"2014-10-31T15:53:14.648Z","type":"message"}
{"nick":"creationix","message":"I think I’ll spend today cleaning up leaks in luv and adding the schema framework to cleanup code.","date":"2014-10-31T15:53:30.829Z","type":"message"}
{"nick":"dan336","message":"cool.","date":"2014-10-31T15:54:26.800Z","type":"message"}
{"nick":"creationix","message":"dan336: though I don’t see your issue.  Your leak is again the C code in luvit master?","date":"2014-10-31T15:54:55.485Z","type":"message"}
{"nick":"creationix","message":"*against","date":"2014-10-31T15:55:00.726Z","type":"message"}
{"nick":"dan336","message":"yeah it is","date":"2014-10-31T15:55:07.269Z","type":"message"}
{"nick":"creationix","message":"I’m working on the code in luvit/luv that’s replacing all the C code in luvit","date":"2014-10-31T15:55:11.095Z","type":"message"}
{"nick":"creationix","message":"the luvi-up branch of luvit will become luvit 2.0 with luv at the core","date":"2014-10-31T15:55:35.148Z","type":"message"}
{"nick":"dan336","message":"ok, should I be testing against that branch then?","date":"2014-10-31T15:55:51.749Z","type":"message"}
{"nick":"creationix","message":"well, luvi-up is still quite alpha","date":"2014-10-31T15:56:03.773Z","type":"message"}
{"nick":"creationix","message":"most the luvit features are still missing","date":"2014-10-31T15:56:09.884Z","type":"message"}
{"nick":"dan336","message":"alright, I'll wait then.","date":"2014-10-31T15:56:13.517Z","type":"message"}
{"nick":"dan336","message":"I'm using udp heavily right now for a new project and every packet leaks :)","date":"2014-10-31T15:56:35.187Z","type":"message"}
{"nick":"dan336","message":"so I'll just be patient","date":"2014-10-31T15:56:38.931Z","type":"message"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-10-31T16:02:23.429Z","type":"quit"}
{"nick":"a_le","date":"2014-10-31T16:03:00.938Z","type":"join"}
{"nick":"a_le","reason":"Read error: Connection reset by peer","date":"2014-10-31T16:03:29.037Z","type":"quit"}
{"nick":"creationix","message":"dan336: it should be a quick fix, I’ll see if I can patch in in the old luvit while you wait for luvit 2.0","date":"2014-10-31T16:05:41.977Z","type":"message"}
{"nick":"creationix","message":"rphillips: you were recently fixing memory leaks in the luvit C code, do you have time to look into it?","date":"2014-10-31T16:06:13.108Z","type":"message"}
{"nick":"rphillips","message":"yeah, let me see","date":"2014-10-31T16:10:11.228Z","type":"message"}
{"nick":"creationix","message":"dan336: and thanks for exercising the udp code.  It never saw a lot of use","date":"2014-10-31T16:10:47.822Z","type":"message"}
{"nick":"creationix","message":"I barely understood udp and C back when I wrote those bindings years ago","date":"2014-10-31T16:11:01.392Z","type":"message"}
{"nick":"creationix","message":"dan336: also depending on how much code you have, you can consider porting directly to luv","date":"2014-10-31T16:11:35.715Z","type":"message"}
{"nick":"rphillips","message":"dan336: which function is the leak in?","date":"2014-10-31T16:11:38.304Z","type":"message"}
{"nick":"creationix","message":"luv is pretty stable at this point that contains all the primitives you’d need I think","date":"2014-10-31T16:11:54.810Z","type":"message"}
{"nick":"creationix","message":"rphillips: you saw his test case right? https://github.com/luvit/luvit/issues/513","date":"2014-10-31T16:12:25.780Z","type":"message"}
{"nick":"rphillips","message":"i did not. thanks","date":"2014-10-31T16:12:37.391Z","type":"message"}
{"nick":"rphillips","message":"dan336: creationix : https://github.com/luvit/luvit/pull/514","date":"2014-10-31T16:26:59.388Z","type":"message"}
{"nick":"rphillips","message":"instruments shows better performance","date":"2014-10-31T16:27:11.567Z","type":"message"}
{"nick":"creationix","message":"I’ll bet.  Wasting GB of ram destroy CPU cache","date":"2014-10-31T16:28:24.730Z","type":"message"}
{"nick":"dan336","message":"oh sorry, I wasn't watching. The memory is actually allocated inside of libuv. in the uv__udp_recvmsg","date":"2014-10-31T16:29:32.226Z","type":"message"}
{"nick":"dan336","message":"the stack is https://gist.github.com/DBarney/5faba2c363caaeae87dd","date":"2014-10-31T16:30:09.402Z","type":"message"}
{"nick":"dan336","message":"but really if its going to be fixed with the new branch, I don't need it fixed.","date":"2014-10-31T16:30:40.554Z","type":"message"}
{"nick":"dan336","message":"my project isn't currently being used in production or anything.","date":"2014-10-31T16:31:01.297Z","type":"message"}
{"nick":"rphillips","message":"dan336: can you try that PR?","date":"2014-10-31T16:31:14.547Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/luvit/luvit/pull/514","date":"2014-10-31T16:31:18.651Z","type":"message"}
{"nick":"dan336","message":"sure just give me one second","date":"2014-10-31T16:31:38.142Z","type":"message"}
{"nick":"creationix","message":"the new C bindings use latest libuv (1.0.0-rc3 currently)  Lots of new code upstream and on our side","date":"2014-10-31T16:31:41.395Z","type":"message"}
{"nick":"UniOn","date":"2014-10-31T16:32:29.420Z","type":"join"}
{"nick":"a_le","date":"2014-10-31T16:32:46.664Z","type":"join"}
{"nick":"dan336","message":"well, memory did grow at all.","date":"2014-10-31T16:33:09.278Z","type":"message"}
{"nick":"dan336","message":"but","date":"2014-10-31T16:33:10.834Z","type":"message"}
{"nick":"dan336","message":"luvit(93487,0x7fff77b63300) malloc: *** error for object 0x7fb01841adb0: pointer being freed was not allocated","date":"2014-10-31T16:33:11.523Z","type":"message"}
{"nick":"creationix","message":"hmm, too much free","date":"2014-10-31T16:33:30.046Z","type":"message"}
{"nick":"rphillips","message":"dan336: is that with your test case?","date":"2014-10-31T16:33:44.699Z","type":"message"}
{"nick":"rphillips","message":"gdb backtrace would be helpful","date":"2014-10-31T16:33:53.367Z","type":"message"}
{"nick":"dan336","message":"yeah that was with my test case.","date":"2014-10-31T16:34:19.254Z","type":"message"}
{"nick":"dan336","message":"i'll see if i can get a stack dump","date":"2014-10-31T16:34:27.986Z","type":"message"}
{"nick":"dan336","message":"ok here is a stack dump: https://gist.github.com/DBarney/bc9eafa09a7397a38583","date":"2014-10-31T16:38:08.640Z","type":"message"}
{"nick":"dan336","message":"it crashed on sending a packet.","date":"2014-10-31T16:38:16.997Z","type":"message"}
{"nick":"rphillips","message":"k","date":"2014-10-31T16:38:28.394Z","type":"message"}
{"nick":"rphillips","message":"hmm. yeah, that isn't a correct patch","date":"2014-10-31T16:41:27.835Z","type":"message"}
{"nick":"imzyxwvu","date":"2014-10-31T16:59:36.195Z","type":"join"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-10-31T17:09:46.885Z","type":"quit"}
{"nick":"a_le","date":"2014-10-31T17:10:22.603Z","type":"join"}
{"nick":"dan336","message":"so I'm confused, shouldn't this free the buffer after then event has been fired? https://github.com/luvit/luvit/blob/master/src/luv_udp.c#L90","date":"2014-10-31T17:12:14.102Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T17:13:41.275Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luv#122 (master - 42a17b8 : Tim Caswell): The build was broken.","date":"2014-10-31T17:13:41.330Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luv/compare/3e955aac7dc4...42a17b8f54c1","date":"2014-10-31T17:13:41.331Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luv/builds/39619835","date":"2014-10-31T17:13:41.331Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T17:13:41.331Z","type":"part"}
{"nick":"rphillips","message":"dan336: yes, it's something else","date":"2014-10-31T17:14:09.599Z","type":"message"}
{"nick":"rphillips","message":"not sure what yet","date":"2014-10-31T17:14:13.580Z","type":"message"}
{"nick":"dan336","message":"ah fixed it.","date":"2014-10-31T17:14:15.377Z","type":"message"}
{"nick":"dan336","message":"just a sec i'll send a pull request","date":"2014-10-31T17:14:25.171Z","type":"message"}
{"nick":"rphillips","message":"cool","date":"2014-10-31T17:17:04.518Z","type":"message"}
{"nick":"rphillips","message":"dan336: https://github.com/luvit/luvit/compare/fixes/cache_lookup","date":"2014-10-31T17:18:06.256Z","type":"message"}
{"nick":"rphillips","message":"this might be beneficial as well","date":"2014-10-31T17:18:13.506Z","type":"message"}
{"nick":"dan336","message":"https://github.com/luvit/luvit/pull/515","date":"2014-10-31T17:19:02.248Z","type":"message"}
{"nick":"dan336","message":"yeah that looks good.","date":"2014-10-31T17:19:09.678Z","type":"message"}
{"nick":"rphillips","message":"nice!","date":"2014-10-31T17:19:41.757Z","type":"message"}
{"nick":"rphillips","message":"merged","date":"2014-10-31T17:22:01.297Z","type":"message"}
{"nick":"dan336","message":"sweet thanks!","date":"2014-10-31T17:22:23.185Z","type":"message"}
{"nick":"creationix","message":"thanks dan336","date":"2014-10-31T17:23:15.374Z","type":"message"}
{"nick":"rphillips","message":"dan336: your test case still exits for me after awhile","date":"2014-10-31T17:23:53.182Z","type":"message"}
{"nick":"rphillips","message":"https://gist.github.com/rphillips/f45422c4a6b061cded1c","date":"2014-10-31T17:24:57.782Z","type":"message"}
{"nick":"dan336","message":"thats weird","date":"2014-10-31T17:25:32.581Z","type":"message"}
{"nick":"a_le","reason":"Read error: Connection reset by peer","date":"2014-10-31T17:25:52.341Z","type":"quit"}
{"nick":"creationix","message":"is the cached data growing the stack with sync callbacks?","date":"2014-10-31T17:26:03.235Z","type":"message"}
{"nick":"dan336","message":"yeah it looks like it is","date":"2014-10-31T17:26:11.816Z","type":"message"}
{"nick":"creationix","message":"another issue coroutines would solve :)","date":"2014-10-31T17:26:11.872Z","type":"message"}
{"nick":"a_le","date":"2014-10-31T17:26:18.521Z","type":"join"}
{"nick":"creationix","message":"zalgo callbacks (may or may not be called sync before returning from non-blocking function) often require trampolines externally to prevent stack overflows","date":"2014-10-31T17:27:10.556Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T17:28:58.599Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#979 (master - ca69dfa : Ryan Phillips): The build passed.","date":"2014-10-31T17:28:58.692Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/20e226a57f05...ca69dfab5638","date":"2014-10-31T17:28:58.692Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/39621097","date":"2014-10-31T17:28:58.692Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T17:28:58.692Z","type":"part"}
{"nick":"rphillips","message":"dan336: creationix: yeah, putting the :send into a process.nextTick clears it up","date":"2014-10-31T17:30:42.092Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T17:30:51.039Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#977 (fixes/cache_lookup - a50a088 : Ryan Phillips): The build passed.","date":"2014-10-31T17:30:51.096Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/commit/a50a0881c2f4","date":"2014-10-31T17:30:51.096Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/39620754","date":"2014-10-31T17:30:51.096Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T17:30:51.096Z","type":"part"}
{"nick":"kazupon","reason":"Remote host closed the connection","date":"2014-10-31T17:31:43.825Z","type":"quit"}
{"nick":"creationix","message":"rphillips: fixed the fs_read leak.  Sorry for pushing directly to master https://github.com/luvit/luv/commit/f19c3d9469d9cb9d860a91b064163508888d92d6","date":"2014-10-31T17:39:50.249Z","type":"message"}
{"nick":"creationix","message":"the ->data member was added after I wrote the setup and cleanup helpers.  I forgot to add it there.","date":"2014-10-31T17:40:18.594Z","type":"message"}
{"nick":"rphillips","message":"sweet!","date":"2014-10-31T17:40:21.118Z","type":"message"}
{"nick":"creationix","message":"I also filed https://github.com/joyent/libuv/issues/1557 so that we could remove the ->data->data member entirely","date":"2014-10-31T17:41:37.588Z","type":"message"}
{"nick":"creationix","message":"Saving a pointer on all REQs would be nice","date":"2014-10-31T17:41:58.301Z","type":"message"}
{"nick":"a_le","reason":"Read error: Connection reset by peer","date":"2014-10-31T17:44:49.419Z","type":"quit"}
{"nick":"a_le","date":"2014-10-31T17:45:08.566Z","type":"join"}
{"nick":"travis-ci","date":"2014-10-31T17:46:03.276Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luv#123 (master - f19c3d9 : Tim Caswell): The build was fixed.","date":"2014-10-31T17:46:03.332Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luv/compare/42a17b8f54c1...f19c3d9469d9","date":"2014-10-31T17:46:03.333Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luv/builds/39623006","date":"2014-10-31T17:46:03.333Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T17:46:03.333Z","type":"part"}
{"nick":"rphillips","message":"creationix: nice... luvi-up branch memory usage looks good with the tls test","date":"2014-10-31T17:46:34.098Z","type":"message"}
{"nick":"creationix","message":"great","date":"2014-10-31T17:46:47.719Z","type":"message"}
{"nick":"rphillips","message":"1.9 MB","date":"2014-10-31T17:47:08.431Z","type":"message"}
{"nick":"creationix","message":"rphillips: quick question about C","date":"2014-10-31T17:58:26.644Z","type":"message"}
{"nick":"rphillips","message":"shoot","date":"2014-10-31T17:58:41.850Z","type":"message"}
{"nick":"creationix","message":"If I have a function argument like (struct foo name[]), will it pass a copy of the array?","date":"2014-10-31T17:58:48.820Z","type":"message"}
{"nick":"creationix","message":"I’m not clear on what [] syntax does","date":"2014-10-31T17:59:02.151Z","type":"message"}
{"nick":"rphillips","message":"makes it a pointer","date":"2014-10-31T18:01:26.178Z","type":"message"}
{"nick":"rphillips","message":"basically","date":"2014-10-31T18:01:32.527Z","type":"message"}
{"nick":"rphillips","message":"usually there is a size passed as an argument","date":"2014-10-31T18:03:52.471Z","type":"message"}
{"nick":"creationix","message":"I’m using null-terminated arrays so I don’t need size","date":"2014-10-31T18:04:16.141Z","type":"message"}
{"nick":"creationix","message":"I was just worried it copied the array on every call","date":"2014-10-31T18:04:24.980Z","type":"message"}
{"nick":"creationix","message":"rphillips: so what’s the difference between foo* name and foo name[]?","date":"2014-10-31T18:06:19.393Z","type":"message"}
{"nick":"creationix","message":"other than how you use them internally","date":"2014-10-31T18:06:28.380Z","type":"message"}
{"nick":"creationix","message":"I know that name[i] is the same as *(name + i) when using them.  I guess [] is just sugar","date":"2014-10-31T18:08:52.277Z","type":"message"}
{"nick":"rphillips","message":"yeah, both are looked at by the compiler as a pointer","date":"2014-10-31T18:09:15.095Z","type":"message"}
{"nick":"creationix","message":"ok, I had read somewhere the [] syntax causes it to copy the array.  I guess that was wrong","date":"2014-10-31T18:11:25.894Z","type":"message"}
{"nick":"creationix","message":"some other places say name[] is identical to *name","date":"2014-10-31T18:11:47.902Z","type":"message"}
{"nick":"creationix","message":"and if we really wanted to be consistent, it should be char name[] instead of char* name since it’s an array of chars","date":"2014-10-31T18:12:24.864Z","type":"message"}
{"nick":"creationix","message":"thanks!","date":"2014-10-31T18:12:28.724Z","type":"message"}
{"nick":"DarkGod","date":"2014-10-31T18:29:06.896Z","type":"join"}
{"nick":"rphillips","message":"personally, I like *name, since it's more readable","date":"2014-10-31T18:33:43.115Z","type":"message"}
{"nick":"creationix","message":"rphillips: ok, I converted one function to the new schema style, what do you think? https://github.com/luvit/luv/blob/8de86bc53a49dcb6f9535f7e3cf1cb4f0bc74e7e/src/fs.c#L256-L284","date":"2014-10-31T19:04:32.216Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/luvit/luv/blob/8de86bc53a49dcb6f9535f7e3cf1cb4f0bc74e7e/src/fs.c#L262","date":"2014-10-31T19:06:01.079Z","type":"message"}
{"nick":"rphillips","message":"i think this struct should be declared outside the function","date":"2014-10-31T19:06:08.502Z","type":"message"}
{"nick":"rphillips","message":"where is the free for buf.base?","date":"2014-10-31T19:06:32.659Z","type":"message"}
{"nick":"rphillips","message":"we should make sure len is not < 0","date":"2014-10-31T19:06:56.567Z","type":"message"}
{"nick":"creationix","message":"https://github.com/luvit/luv/blob/8de86bc53a49dcb6f9535f7e3cf1cb4f0bc74e7e/src/fs.c#L282 stores buf.base in req->data->data which is cleaned up with the rest of the req","date":"2014-10-31T19:07:33.491Z","type":"message"}
{"nick":"creationix","message":"so with the schema system, we can write new validators.  I’ll make a new one that ensures the value is a positive integer","date":"2014-10-31T19:08:11.478Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T19:08:13.047Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luv#124 (schema - 8de86bc : Tim Caswell): The build failed.","date":"2014-10-31T19:08:13.104Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luv/compare/eff35edb2f1d^...8de86bc53a49","date":"2014-10-31T19:08:13.104Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luv/builds/39631644","date":"2014-10-31T19:08:13.104Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T19:08:13.104Z","type":"part"}
{"nick":"rphillips","message":"missing header","date":"2014-10-31T19:08:42.306Z","type":"message"}
{"nick":"creationix","message":"yep, forgot to git add","date":"2014-10-31T19:08:52.508Z","type":"message"}
{"nick":"creationix","message":"I ran the tests locally with a clean build so it should work","date":"2014-10-31T19:09:08.620Z","type":"message"}
{"nick":"creationix","message":"and there is a leak detector test for that malloc now too","date":"2014-10-31T19:09:35.283Z","type":"message"}
{"nick":"creationix","message":"I like to add regression tests whenever possible","date":"2014-10-31T19:09:40.895Z","type":"message"}
{"nick":"creationix","message":"hmm, we still have a leak","date":"2014-10-31T19:10:27.616Z","type":"message"}
{"nick":"creationix","message":"*potential leak","date":"2014-10-31T19:10:40.984Z","type":"message"}
{"nick":"creationix","message":"though it’s very rare.  The first malloc on https://github.com/luvit/luv/blob/8de86bc53a49dcb6f9535f7e3cf1cb4f0bc74e7e/src/fs.c#L274 would have to succeed and then this one fail https://github.com/luvit/luv/blob/8de86bc53a49dcb6f9535f7e3cf1cb4f0bc74e7e/src/lreq.c#L23","date":"2014-10-31T19:11:22.760Z","type":"message"}
{"nick":"creationix","message":"the first one would never get freed","date":"2014-10-31T19:11:27.336Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T19:12:54.707Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luv#125 (schema - d6929fd : Tim Caswell): The build was fixed.","date":"2014-10-31T19:12:54.763Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luv/compare/8de86bc53a49...d6929fd172e6","date":"2014-10-31T19:12:54.763Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luv/builds/39632044","date":"2014-10-31T19:12:54.763Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T19:12:54.764Z","type":"part"}
{"nick":"rphillips","message":"https://github.com/luvit/luv/blob/8de86bc53a49dcb6f9535f7e3cf1cb4f0bc74e7e/src/lreq.c#L40","date":"2014-10-31T19:13:10.051Z","type":"message"}
{"nick":"rphillips","message":"shouldn't there be a free there?","date":"2014-10-31T19:13:15.076Z","type":"message"}
{"nick":"creationix","message":"no, that’s just initializing the struct","date":"2014-10-31T19:13:39.139Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/luvit/luv/blob/8de86bc53a49dcb6f9535f7e3cf1cb4f0bc74e7e/src/lreq.c#L23","date":"2014-10-31T19:15:34.235Z","type":"message"}
{"nick":"rphillips","message":"this could be a calloc instead then","date":"2014-10-31T19:15:39.594Z","type":"message"}
{"nick":"rphillips","message":"data = calloc(1, sizeof(*data));","date":"2014-10-31T19:16:52.026Z","type":"message"}
{"nick":"creationix","message":"true, but this is faster right?","date":"2014-10-31T19:17:33.229Z","type":"message"}
{"nick":"creationix","message":"I need to set non-zero values to the other 16 bytes in the struct anyway","date":"2014-10-31T19:17:49.611Z","type":"message"}
{"nick":"rphillips","message":"probably marginally faster...","date":"2014-10-31T19:21:45.290Z","type":"message"}
{"nick":"creationix","message":"I’ve always seen code use malloc + memset to initialize.  I wonder why calloc isn’t used more","date":"2014-10-31T19:22:07.350Z","type":"message"}
{"nick":"rphillips","message":"calloc is usually optimized","date":"2014-10-31T19:22:33.506Z","type":"message"}
{"nick":"rphillips","message":"http://stackoverflow.com/a/1585987","date":"2014-10-31T19:23:42.647Z","type":"message"}
{"nick":"rphillips","message":"on a copy-on-write system, it's slower as well with calloc since the OS needs to find suitable memory","date":"2014-10-31T19:24:04.071Z","type":"message"}
{"nick":"rphillips","message":"makes sense","date":"2014-10-31T19:24:08.786Z","type":"message"}
{"nick":"creationix","message":"interesting","date":"2014-10-31T19:25:58.859Z","type":"message"}
{"nick":"creationix","message":"rphillips: the confusing NULL is gone :) https://github.com/luvit/luv/commit/ca224a251f3d996cc95bc5525e54a6471b1cb209","date":"2014-10-31T19:30:50.926Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T19:31:42.587Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luv#127 (schema - ca224a2 : Tim Caswell): The build passed.","date":"2014-10-31T19:31:42.644Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luv/compare/0798f561b9d0...ca224a251f3d","date":"2014-10-31T19:31:42.644Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luv/builds/39633642","date":"2014-10-31T19:31:42.644Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T19:31:42.644Z","type":"part"}
{"nick":"rphillips","message":"this is all exciting stuff","date":"2014-10-31T19:43:11.746Z","type":"message"}
{"nick":"creationix","message":"rphillips: ok, the first function is now complete I think.  Care to check again https://github.com/luvit/luv/pull/82","date":"2014-10-31T19:47:37.417Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T19:51:00.943Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luv#129 (schema - dbd0036 : Tim Caswell): The build passed.","date":"2014-10-31T19:51:00.999Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luv/compare/ca224a251f3d...dbd00363eeab","date":"2014-10-31T19:51:01.000Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luv/builds/39635265","date":"2014-10-31T19:51:01.000Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T19:51:01.000Z","type":"part"}
{"nick":"rphillips","message":"commented","date":"2014-10-31T20:05:02.152Z","type":"message"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-10-31T20:10:00.085Z","type":"quit"}
{"nick":"a_le","date":"2014-10-31T20:10:38.654Z","type":"join"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-10-31T20:10:46.487Z","type":"quit"}
{"nick":"a_le","date":"2014-10-31T20:11:28.169Z","type":"join"}
{"nick":"creationix","message":"rphillips: I read up on as much as I could about the cost of inline array literals.  I couldn’t find much.  So I decided to benchmark it.  Moving the arrray literal out of the function body made a slight (10%) speedup.","date":"2014-10-31T20:17:16.365Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T20:17:59.879Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luv#130 (schema - 641e8da : Tim Caswell): The build passed.","date":"2014-10-31T20:17:59.936Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luv/compare/dbd00363eeab...641e8dad6625","date":"2014-10-31T20:17:59.936Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luv/builds/39638136","date":"2014-10-31T20:17:59.936Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T20:17:59.936Z","type":"part"}
{"nick":"creationix","message":"the cost of the check inline was about 59 units while calling check with an external array was about 47 units (units being whatever uv.hrtime uses)","date":"2014-10-31T20:19:32.138Z","type":"message"}
{"nick":"creationix","message":"I calculated these numbers running 0x100000 loops and subtracting the baseline cost of no schema check at all","date":"2014-10-31T20:19:59.582Z","type":"message"}
{"nick":"creationix","message":"so I guess that’s a 20% speedup then","date":"2014-10-31T20:20:35.220Z","type":"message"}
{"nick":"creationix","message":"ok, unit is nanoseconds","date":"2014-10-31T20:25:42.685Z","type":"message"}
{"nick":"creationix","message":"looks like overall the schema check (the faster version) causes a 3% slowdown in fs_read.  Since that’s running in a tight loop and I’m reading a tiny (10 byte) chunk the FS interaction is highly cached.","date":"2014-10-31T20:34:20.089Z","type":"message"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-10-31T20:34:42.506Z","type":"quit"}
{"nick":"creationix","message":"the overhead was around 23 ns per call in my tests","date":"2014-10-31T20:35:14.890Z","type":"message"}
{"nick":"a_le","date":"2014-10-31T20:37:03.178Z","type":"join"}
{"nick":"rphillips","message":"doesn't seem that bad at all","date":"2014-10-31T20:38:10.737Z","type":"message"}
{"nick":"not^v","date":"2014-10-31T20:40:11.930Z","type":"join"}
{"nick":"rphillips","message":"creationix: time to merge the openssl branch?","date":"2014-10-31T20:41:17.328Z","type":"message"}
{"nick":"creationix","message":"I think so","date":"2014-10-31T20:41:26.468Z","type":"message"}
{"nick":"creationix","message":"yeah, I guess that’s around 50 cpu instructions to check all my lua arguments and call several custom C callbacks right?","date":"2014-10-31T20:44:29.838Z","type":"message"}
{"nick":"creationix","message":"1ns ~ 2 cycles of a 2 ghz machine?","date":"2014-10-31T20:44:50.240Z","type":"message"}
{"nick":"not^v","reason":"Read error: Connection reset by peer","date":"2014-10-31T20:48:07.024Z","type":"quit"}
{"nick":"travis-ci","date":"2014-10-31T20:54:50.739Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luv#132 (schema - 3a4664b : Tim Caswell): The build passed.","date":"2014-10-31T20:54:50.795Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luv/compare/641e8dad6625...3a4664b4eee6","date":"2014-10-31T20:54:50.796Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luv/builds/39642616","date":"2014-10-31T20:54:50.796Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T20:54:50.796Z","type":"part"}
{"nick":"rphillips","message":"https://github.com/luvit/luvi/pull/22","date":"2014-10-31T21:00:59.157Z","type":"message"}
{"nick":"rphillips","message":"+1?","date":"2014-10-31T21:01:00.201Z","type":"message"}
{"nick":"creationix","message":"yep, merge it","date":"2014-10-31T21:05:05.698Z","type":"message"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-10-31T21:16:48.488Z","type":"quit"}
{"nick":"dan3361","date":"2014-10-31T21:23:56.881Z","type":"join"}
{"nick":"dan336","reason":"Read error: Connection reset by peer","date":"2014-10-31T21:23:56.986Z","type":"quit"}
{"nick":"not^v","date":"2014-10-31T21:38:32.190Z","type":"join"}
{"nick":"rphillips","message":"tweaked luvi's readme to include the new openssl options","date":"2014-10-31T21:39:28.050Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/luvit/luvi#cmake-flags","date":"2014-10-31T21:39:36.497Z","type":"message"}
{"nick":"a_le","date":"2014-10-31T21:40:40.570Z","type":"join"}
{"nick":"creationix","message":"+1","date":"2014-10-31T21:40:42.256Z","type":"message"}
{"nick":"creationix","message":"I’m updating the binaries in luvi-binaries so luvit’s CI servers can start testing the ssl stuff","date":"2014-10-31T21:40:55.729Z","type":"message"}
{"nick":"rphillips","message":"early dinner","date":"2014-10-31T21:41:29.900Z","type":"message"}
{"nick":"rphillips","message":"bbiab","date":"2014-10-31T21:41:30.713Z","type":"message"}
{"nick":"rch","message":"luvi is so neat","date":"2014-10-31T21:42:33.629Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T21:43:01.953Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#73 (master - 0c8e8e9 : Ryan Phillips): The build passed.","date":"2014-10-31T21:43:02.048Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/67516c9f2f4e...0c8e8e9f7d34","date":"2014-10-31T21:43:02.048Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/39647225","date":"2014-10-31T21:43:02.049Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T21:43:02.049Z","type":"part"}
{"nick":"travis-ci","date":"2014-10-31T21:43:48.333Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#75 (master - c423930 : Ryan Phillips): The build passed.","date":"2014-10-31T21:43:48.389Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/d3e0fa0a1c74...c42393054460","date":"2014-10-31T21:43:48.389Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/39647416","date":"2014-10-31T21:43:48.389Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T21:43:48.389Z","type":"part"}
{"nick":"creationix","message":"cmake makes my life so much easier","date":"2014-10-31T21:54:08.404Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T21:55:46.700Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#76 (master - 203e419 : Tim Caswell): The build passed.","date":"2014-10-31T21:55:46.757Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/c42393054460...203e41969ef2","date":"2014-10-31T21:55:46.757Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/39648407","date":"2014-10-31T21:55:46.757Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T21:55:46.757Z","type":"part"}
{"nick":"travis-ci","date":"2014-10-31T22:02:07.491Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#980 (luvi-up - 193b176 : Tim Caswell): The build passed.","date":"2014-10-31T22:02:07.568Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/cfc39ef6811c...193b17698d31","date":"2014-10-31T22:02:07.624Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/39649078","date":"2014-10-31T22:02:07.624Z","type":"message"}
{"nick":"travis-ci","date":"2014-10-31T22:02:07.624Z","type":"part"}
{"nick":"not^v","reason":"Quit: http://i.imgur.com/Akc6r.gif","date":"2014-10-31T22:19:34.546Z","type":"quit"}
{"nick":"dan3361","reason":"Quit: Leaving.","date":"2014-10-31T22:45:12.978Z","type":"quit"}
{"nick":"DarkGod","reason":"Ping timeout: 264 seconds","date":"2014-10-31T22:53:17.885Z","type":"quit"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2014-10-31T23:00:17.755Z","type":"quit"}
{"nick":"a_le","date":"2014-10-31T23:52:55.098Z","type":"join"}
{"nick":"dan336","date":"2014-10-31T23:56:18.713Z","type":"join"}
