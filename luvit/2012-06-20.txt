{"nick":"indexzero","reason":"Quit: indexzero","date":"2012-06-20T00:10:48.749Z","type":"quit"}
{"nick":"pancake","reason":"Quit: zz","date":"2012-06-20T00:41:29.146Z","type":"quit"}
{"nick":"xming","reason":"Read error: Connection reset by peer","date":"2012-06-20T01:01:54.682Z","type":"quit"}
{"nick":"xming","date":"2012-06-20T03:00:55.479Z","type":"join"}
{"nick":"dvv","reason":"Read error: Operation timed out","date":"2012-06-20T04:06:22.511Z","type":"quit"}
{"nick":"dvv","date":"2012-06-20T04:35:26.985Z","type":"join"}
{"nick":"dvv","reason":"Ping timeout: 246 seconds","date":"2012-06-20T04:50:00.988Z","type":"quit"}
{"nick":"indexzero","date":"2012-06-20T05:04:36.372Z","type":"join"}
{"nick":"indexzero","reason":"Client Quit","date":"2012-06-20T05:05:00.686Z","type":"quit"}
{"nick":"dvv","date":"2012-06-20T05:17:13.020Z","type":"join"}
{"nick":"xming","reason":"Changing host","date":"2012-06-20T06:23:27.244Z","type":"quit"}
{"nick":"xming","date":"2012-06-20T06:23:27.439Z","type":"join"}
{"nick":"tim_smart","reason":"Quit: leaving","date":"2012-06-20T07:00:41.178Z","type":"quit"}
{"nick":"tim_smart","date":"2012-06-20T07:02:16.711Z","type":"join"}
{"nick":"tim_smart","new_nick":"tim_smart|away","date":"2012-06-20T07:22:46.158Z","type":"nick"}
{"nick":"mmalecki","date":"2012-06-20T09:39:55.265Z","type":"join"}
{"nick":"mmalecki","reason":"Ping timeout: 260 seconds","date":"2012-06-20T11:38:31.461Z","type":"quit"}
{"nick":"mmalecki","date":"2012-06-20T11:43:23.282Z","type":"join"}
{"nick":"mmalecki","reason":"Ping timeout: 246 seconds","date":"2012-06-20T12:33:19.855Z","type":"quit"}
{"nick":"dvv","reason":"Ping timeout: 246 seconds","date":"2012-06-20T12:53:21.985Z","type":"quit"}
{"nick":"mmalecki","date":"2012-06-20T12:59:58.126Z","type":"join"}
{"nick":"dvv","date":"2012-06-20T13:50:01.589Z","type":"join"}
{"nick":"mmalecki","reason":"Ping timeout: 246 seconds","date":"2012-06-20T14:08:31.157Z","type":"quit"}
{"nick":"mmalecki","date":"2012-06-20T14:14:07.176Z","type":"join"}
{"nick":"creationix","message":"morning everyone","date":"2012-06-20T14:23:44.250Z","type":"message"}
{"nick":"TheJH","date":"2012-06-20T14:32:56.995Z","type":"join"}
{"nick":"xming","message":"heya","date":"2012-06-20T14:41:41.246Z","type":"message"}
{"nick":"xming","message":"made some progress here, yajl and http_parser build against system libs or linked statically to the downloaded src","date":"2012-06-20T14:43:04.408Z","type":"message"}
{"nick":"creationix","message":"cool","date":"2012-06-20T14:43:35.691Z","type":"message"}
{"nick":"creationix","message":"I talked to the libuv guys, we'll have to maintain a cmake version of libuv","date":"2012-06-20T14:43:54.636Z","type":"message"}
{"nick":"creationix","message":"though it shouldn't be hard","date":"2012-06-20T14:43:59.099Z","type":"message"}
{"nick":"xming","message":"maybe we dont' have to :D","date":"2012-06-20T14:45:53.400Z","type":"message"}
{"nick":"creationix","message":"xming, are you still using cmake for everything?","date":"2012-06-20T14:46:15.063Z","type":"message"}
{"nick":"creationix","message":"or do you mean non-bundled libuv","date":"2012-06-20T14:46:25.833Z","type":"message"}
{"nick":"xming","message":"someone already forked libuv and maintains cmake build :D https://github.com/okuoku/libuv","date":"2012-06-20T14:47:03.868Z","type":"message"}
{"nick":"xming","message":"so I saied \"maybe\"","date":"2012-06-20T14:47:20.756Z","type":"message"}
{"nick":"xming","message":"everything is going to be cmake","date":"2012-06-20T14:47:34.108Z","type":"message"}
{"nick":"xming","message":"creationix: also auto detect modules in src/modules is working","date":"2012-06-20T14:47:56.059Z","type":"message"}
{"nick":"creationix","message":":)","date":"2012-06-20T14:48:07.553Z","type":"message"}
{"nick":"xming","message":"we are going to have a big problem iwth cross compiling","date":"2012-06-20T14:48:18.632Z","type":"message"}
{"nick":"creationix","message":"how hard is cmake to get on a machine?","date":"2012-06-20T14:48:18.832Z","type":"message"}
{"nick":"creationix","message":"xming, luajit bytecode compiling?","date":"2012-06-20T14:48:34.214Z","type":"message"}
{"nick":"xming","message":"how hard? Most distros have that","date":"2012-06-20T14:48:38.926Z","type":"message"}
{"nick":"xming","message":"idd, lujia only generate \"native\" ELF\\","date":"2012-06-20T14:48:58.045Z","type":"message"}
{"nick":"xming","message":"/slujia/luajit","date":"2012-06-20T14:49:16.157Z","type":"message"}
{"nick":"xming","message":"blah can't type today sorry","date":"2012-06-20T14:49:23.405Z","type":"message"}
{"nick":"creationix","message":"I was thinking we could teach the \"luvit\" binary to do bytecode compiling","date":"2012-06-20T14:49:31.921Z","type":"message"}
{"nick":"creationix","message":"so cross-compile a non-bundled luvit","date":"2012-06-20T14:49:44.131Z","type":"message"}
{"nick":"creationix","message":"then have luvit bundle itself using arm","date":"2012-06-20T14:49:56.866Z","type":"message"}
{"nick":"creationix","message":"(or whatever target)","date":"2012-06-20T14:50:01.025Z","type":"message"}
{"nick":"creationix","message":"or just add a --bundle=/path/to/newbinary fkag","date":"2012-06-20T14:50:51.405Z","type":"message"}
{"nick":"creationix","message":"I guess it depends on how hard that is","date":"2012-06-20T14:51:12.762Z","type":"message"}
{"nick":"creationix","message":"it would need to not depend on the system linker or compiler","date":"2012-06-20T14:51:31.328Z","type":"message"}
{"nick":"xming","message":"currently for the download dpendencies I use tarballs","date":"2012-06-20T14:52:38.323Z","type":"message"}
{"nick":"creationix","message":"xming, do your method is to configure everything at build-time and do it in one step","date":"2012-06-20T14:52:40.551Z","type":"message"}
{"nick":"xming","message":"IMHO tarballs are better","date":"2012-06-20T14:52:44.953Z","type":"message"}
{"nick":"creationix","message":"tarballs instead of git submodules?","date":"2012-06-20T14:52:57.583Z","type":"message"}
{"nick":"xming","message":"creationix: you can if you know all the defines","date":"2012-06-20T14:53:05.549Z","type":"message"}
{"nick":"xming","message":"like this","date":"2012-06-20T14:53:08.984Z","type":"message"}
{"nick":"xming","message":"cmake ../ -DUSE_HTTP -DUSE_SYSTEM_HTTP ....","date":"2012-06-20T14:53:27.504Z","type":"message"}
{"nick":"xming","message":"creationix: I can add git submodules, but I will do that later, known tarballs (versions) is better to avoid brakage for users","date":"2012-06-20T14:54:01.893Z","type":"message"}
{"nick":"xming","message":"git is needed for devs","date":"2012-06-20T14:54:09.326Z","type":"message"}
{"nick":"creationix","message":"currently I use submodules for development","date":"2012-06-20T14:55:07.840Z","type":"message"}
{"nick":"creationix","message":"and the `make tarball` target creates a single tarball with all deps included","date":"2012-06-20T14:55:23.102Z","type":"message"}
{"nick":"xming","message":"creationix: if you want to get a feel of cmake for luvit you can download the tarball and try https://github.com/downloads/xming/luvit/luvit.cmake-test.tgz","date":"2012-06-20T14:55:41.459Z","type":"message"}
{"nick":"creationix","message":"xming, so install cmake from system?","date":"2012-06-20T14:56:39.901Z","type":"message"}
{"nick":"xming","message":"yeah, what do you use?","date":"2012-06-20T14:56:51.538Z","type":"message"}
{"nick":"creationix","message":"ubuntu","date":"2012-06-20T14:57:20.887Z","type":"message"}
{"nick":"xming","message":"that tarbalss is made a few days ago, you need all system libs","date":"2012-06-20T14:57:27.565Z","type":"message"}
{"nick":"xming","message":"apt-get cmake?","date":"2012-06-20T14:57:37.499Z","type":"message"}
{"nick":"creationix","message":"right","date":"2012-06-20T14:57:52.747Z","type":"message"}
{"nick":"creationix","message":"wow, us.archive.ubuntu.com is really slow right now","date":"2012-06-20T14:57:56.826Z","type":"message"}
{"nick":"creationix","message":"500 bytes/second","date":"2012-06-20T14:58:02.688Z","type":"message"}
{"nick":"xming","message":"ubuntu is slow :D","date":"2012-06-20T14:58:05.442Z","type":"message"}
{"nick":"creationix","message":"faster than windows","date":"2012-06-20T14:58:12.422Z","type":"message"}
{"nick":"creationix","message":"and most the drivers work out of the box","date":"2012-06-20T14:58:20.015Z","type":"message"}
{"nick":"xming","message":"I haven't had any windows systems in like 10 years","date":"2012-06-20T14:58:31.585Z","type":"message"}
{"nick":"creationix","message":" I run archlinux on my raspberry pi","date":"2012-06-20T14:58:32.536Z","type":"message"}
{"nick":"creationix","message":"my last windows box was windows 98","date":"2012-06-20T14:58:46.519Z","type":"message"}
{"nick":"xming","message":"last windows version I know pretty well is win2k","date":"2012-06-20T14:58:53.792Z","type":"message"}
{"nick":"xming","message":"I have been using Linux since 1991 dual booting","date":"2012-06-20T14:59:19.941Z","type":"message"}
{"nick":"creationix","message":"I do run OSX on my macs though.  I never could get used to gnome with a mac keyboard","date":"2012-06-20T14:59:33.201Z","type":"message"}
{"nick":"xming","message":"I got my wife a MBP, my kid has a hackintosh","date":"2012-06-20T14:59:58.329Z","type":"message"}
{"nick":"xming","message":"me all the way Linux, but I am really considering migrating to *BSD","date":"2012-06-20T15:01:15.385Z","type":"message"}
{"nick":"creationix","message":"so cmake was only 5,257Kb to download (including deps I didn't have)","date":"2012-06-20T15:01:57.245Z","type":"message"}
{"nick":"creationix","message":"that's not too bad","date":"2012-06-20T15:02:00.883Z","type":"message"}
{"nick":"xming","message":"it's really nifty, except for the syntax :D","date":"2012-06-20T15:02:22.820Z","type":"message"}
{"nick":"creationix","message":"ok, so error","date":"2012-06-20T15:02:35.573Z","type":"message"}
{"nick":"creationix","message":"complained about LUAJIT_INCLUDE_DIR","date":"2012-06-20T15:02:38.586Z","type":"message"}
{"nick":"creationix","message":"do I need to install luajit-dev or something?","date":"2012-06-20T15:02:46.150Z","type":"message"}
{"nick":"xming","message":"it can d/l, untar, do git, file operations, ....","date":"2012-06-20T15:02:46.352Z","type":"message"}
{"nick":"xming","message":"no need for external tools","date":"2012-06-20T15:03:01.537Z","type":"message"}
{"nick":"xming","message":"yeah for that version you need too system libs and includes","date":"2012-06-20T15:03:39.959Z","type":"message"}
{"nick":"xming","message":"s/too/all","date":"2012-06-20T15:03:51.830Z","type":"message"}
{"nick":"xming","message":"doing this cmake thing is really not difficult, but keeping all permutations in-check is the hardest part","date":"2012-06-20T15:04:47.949Z","type":"message"}
{"nick":"creationix","message":"there is libluajit-5.1-dev, not sure what version that is","date":"2012-06-20T15:06:12.633Z","type":"message"}
{"nick":"creationix","message":"I use some fairly recent stuff in luvit","date":"2012-06-20T15:06:21.001Z","type":"message"}
{"nick":"xming","message":"creationix: http://pastebin.com/eFRZRCUM","date":"2012-06-20T15:06:42.463Z","type":"message"}
{"nick":"xming","message":"that is a cmake file for making your own modules will look like","date":"2012-06-20T15:07:04.181Z","type":"message"}
{"nick":"xming","message":"that is more complex than simple module","date":"2012-06-20T15:07:21.516Z","type":"message"}
{"nick":"creationix","message":"wow, that's verbose","date":"2012-06-20T15:07:23.869Z","type":"message"}
{"nick":"xming","message":"it can fetch tarball, unpack, configure, compile, ..... or use system lib","date":"2012-06-20T15:08:03.138Z","type":"message"}
{"nick":"xming","message":"then it bundles (still one line to add for that)","date":"2012-06-20T15:08:14.953Z","type":"message"}
{"nick":"xming","message":"I still want to make simpler","date":"2012-06-20T15:09:12.663Z","type":"message"}
{"nick":"xming","message":"trying to see what I can group together and put into macro() function()","date":"2012-06-20T15:09:35.542Z","type":"message"}
{"nick":"xming","message":"creationix: it still can't find LUAJIT_INCLUDE_DIR?","date":"2012-06-20T15:17:39.859Z","type":"message"}
{"nick":"creationix","message":"-- Could NOT find LUAJIT (missing:  LUAJIT_LIBRARIES)","date":"2012-06-20T15:19:06.294Z","type":"message"}
{"nick":"creationix","message":"I tried both using ubuntu's package and running `make install` from luajit source","date":"2012-06-20T15:19:20.387Z","type":"message"}
{"nick":"xming","message":"it looks for luajit.h in /usr/include/luajit-2.0 or /usr/include/luajit","date":"2012-06-20T15:21:57.655Z","type":"message"}
{"nick":"xming","message":"where is your luajit.h","date":"2012-06-20T15:22:15.846Z","type":"message"}
{"nick":"xming","message":"oops libs","date":"2012-06-20T15:22:49.283Z","type":"message"}
{"nick":"xming","message":"what is your libluajit called?","date":"2012-06-20T15:23:21.146Z","type":"message"}
{"nick":"spionW","date":"2012-06-20T15:27:09.686Z","type":"join"}
{"nick":"creationix","message":"sorry, was in meeting","date":"2012-06-20T16:10:36.911Z","type":"message"}
{"nick":"creationix","message":"I installed luajit into the /usr/local PREFIX","date":"2012-06-20T16:10:46.550Z","type":"message"}
{"nick":"creationix","message":"/usr/local/bin/luajit-2.0.0-beta10 and /usr/local/include/luajit-2.0/lua.h","date":"2012-06-20T16:11:34.228Z","type":"message"}
{"nick":"creationix","message":"standard `make install` target","date":"2012-06-20T16:11:45.167Z","type":"message"}
{"nick":"xming","message":"there is also /usr/local/include/luajit-2.0/luajit.h isn't there?","date":"2012-06-20T16:12:28.912Z","type":"message"}
{"nick":"spionW","reason":"Ping timeout: 246 seconds","date":"2012-06-20T16:26:09.981Z","type":"quit"}
{"nick":"CIA-113","message":"Ryan Phillips\u000f features/https\u000f * r05f2b24\u000f \u000f/ (5 files in 3 dirs):\u000f https: Initial HTTPS Client Support - http://git.io/aWEYfA","date":"2012-06-20T16:37:12.764Z","type":"message"}
{"nick":"CIA-113","message":"Ryan Phillips\u000f features/https\u000f * r5971f97\u000f \u000f/ lib/luvit/https.lua :\u000f https: add license header - http://git.io/0WLKqw","date":"2012-06-20T16:38:04.722Z","type":"message"}
{"nick":"creationix","message":"xming, yep","date":"2012-06-20T16:38:47.969Z","type":"message"}
{"nick":"AvianFlu","date":"2012-06-20T17:29:31.790Z","type":"join"}
{"nick":"neomantra","date":"2012-06-20T17:56:12.651Z","type":"join"}
{"nick":"`3rdEden","date":"2012-06-20T17:56:55.963Z","type":"join"}
{"nick":"mkandrashoff","date":"2012-06-20T18:15:41.817Z","type":"join"}
{"nick":"tim_smart","date":"2012-06-20T19:05:03.310Z","type":"join"}
{"nick":"tim_smart","reason":"Client Quit","date":"2012-06-20T19:05:03.310Z","type":"quit"}
{"nick":"tim_smart|away","new_nick":"tim_smart","date":"2012-06-20T19:06:09.754Z","type":"nick"}
{"nick":"levi","message":"creationix: I've actually built luvit and played with it a bit now. It's shaping up nicely!","date":"2012-06-20T19:08:35.572Z","type":"message"}
{"nick":"levi","message":"It is a bit closer to node.js than would be my preference, but I understand that's your explicit design goal.","date":"2012-06-20T19:09:31.439Z","type":"message"}
{"nick":"creationix","message":"levi, are you lua person by background?","date":"2012-06-20T19:31:47.951Z","type":"message"}
{"nick":"kevwil","date":"2012-06-20T19:36:15.427Z","type":"join"}
{"nick":"kevwil","date":"2012-06-20T19:38:17.819Z","type":"part"}
{"nick":"levi","message":"Nope.","date":"2012-06-20T19:38:33.387Z","type":"message"}
{"nick":"dvv","message":"Hi! creationix: what could be arguments against luarocks as building supersystem (which can relay to make/cmake) nowdays? i believe we can have pure luajit + luvit package","date":"2012-06-20T19:42:57.714Z","type":"message"}
{"nick":"creationix","message":"dvv, same objections as always","date":"2012-06-20T19:43:34.000Z","type":"message"}
{"nick":"creationix","message":"if you're going to be compatable with something, you have to do it properly","date":"2012-06-20T19:43:50.387Z","type":"message"}
{"nick":"creationix","message":"I'd rather just be incompatable","date":"2012-06-20T19:43:55.994Z","type":"message"}
{"nick":"creationix","message":"it could be done, sure, but that's not my goal","date":"2012-06-20T19:44:47.343Z","type":"message"}
{"nick":"creationix","message":"luvit is a platform that uses lua, not a lua library","date":"2012-06-20T19:45:05.856Z","type":"message"}
{"nick":"dvv","message":"i'm not about require()ing existing sync-style modules","date":"2012-06-20T19:45:09.795Z","type":"message"}
{"nick":"dvv","message":"but about building system","date":"2012-06-20T19:45:28.584Z","type":"message"}
{"nick":"dvv","message":"which is proven","date":"2012-06-20T19:45:44.661Z","type":"message"}
{"nick":"creationix","message":"oh, I see","date":"2012-06-20T19:45:46.968Z","type":"message"}
{"nick":"xming","message":"https://github.com/LuaDist/Repository","date":"2012-06-20T19:45:50.245Z","type":"message"}
{"nick":"creationix","message":"sure would be strange to use luarocks to build luvit, but then not use it in luvit","date":"2012-06-20T19:46:00.267Z","type":"message"}
{"nick":"dvv","message":"i'm investigating the way one can install luarocks so the the latter mimicks luvit's way of looking up modules","date":"2012-06-20T19:48:25.476Z","type":"message"}
{"nick":"dvv","message":"they allow to install it \"locally\" and even have module versioning, afaics","date":"2012-06-20T19:50:26.262Z","type":"message"}
{"nick":"levi","message":"creationix: My background is fairly polyglot; mostly I work in C and play in various languages like Scheme, Python, Haskell, etc.","date":"2012-06-20T20:01:14.475Z","type":"message"}
{"nick":"creationix","message":"levi, what would you change?","date":"2012-06-20T20:03:00.428Z","type":"message"}
{"nick":"creationix","message":"what parts of node do you not like?","date":"2012-06-20T20:03:05.007Z","type":"message"}
{"nick":"levi","message":"I really am not crazy about the ubiquity of asynchronous callbacks. I mean, they work fine and have their advantages, but they really do a number on the 'flow' of code.","date":"2012-06-20T20:05:08.986Z","type":"message"}
{"nick":"creationix","message":"levi, true, but what's the alternative?","date":"2012-06-20T20:07:00.879Z","type":"message"}
{"nick":"creationix","message":"non-blocking I/O requires some sort of continuation","date":"2012-06-20T20:07:09.683Z","type":"message"}
{"nick":"creationix","message":"callbacks are very simple","date":"2012-06-20T20:07:15.263Z","type":"message"}
{"nick":"creationix","message":"(in languages with closures at least)","date":"2012-06-20T20:07:26.292Z","type":"message"}
{"nick":"levi","message":"Well, there's also cooperative threading. I've used several languages with synchronous I/O APIs that do not block the runtime for I/O.","date":"2012-06-20T20:08:45.245Z","type":"message"}
{"nick":"dvv","message":"creationix: so luvit can itself be a rock, and luvit modules can be as well. that way we don't have to provide ugly --cflags et. al options, care of headers, arch, os etc.","date":"2012-06-20T20:10:08.737Z","type":"message"}
{"nick":"dvv","message":"gone can be numerous weak attempts to normalize moduling and spawn a robust package manager etc.","date":"2012-06-20T20:11:17.595Z","type":"message"}
{"nick":"levi","message":"I'm not suggesting you ought to rearchitect luvit, and indeed I think the way you've set it up would allow experimenting with alternatives \"off to the side\" so to speak.","date":"2012-06-20T20:13:33.767Z","type":"message"}
{"nick":"creationix","message":"levi, yeah, using libuv is a hard requirement","date":"2012-06-20T20:16:02.370Z","type":"message"}
{"nick":"creationix","message":"it wouldn't be luvit without it","date":"2012-06-20T20:16:07.275Z","type":"message"}
{"nick":"creationix","message":"libuv is non-blocking and callback based","date":"2012-06-20T20:16:13.694Z","type":"message"}
{"nick":"levi","message":"Sure, you've got to have it that way in the core.","date":"2012-06-20T20:16:42.483Z","type":"message"}
{"nick":"creationix","message":"dvv, if you have time, you could make a fork of luvit that's packaged as a standard luarock","date":"2012-06-20T20:17:10.345Z","type":"message"}
{"nick":"creationix","message":"to see what people think","date":"2012-06-20T20:17:17.431Z","type":"message"}
{"nick":"creationix","message":"my use case is building single-binary apps","date":"2012-06-20T20:17:42.805Z","type":"message"}
{"nick":"creationix","message":"I want a folder people can download, customize, and then bundle into a single app","date":"2012-06-20T20:18:01.880Z","type":"message"}
{"nick":"creationix","message":"levi, I did talk to Mike Pall about this, his idea was to rewrite libuv to be iterator based (select style)","date":"2012-06-20T20:18:38.701Z","type":"message"}
{"nick":"creationix","message":"and then call the callbacks or coroutines or whatever at the lua level","date":"2012-06-20T20:18:49.980Z","type":"message"}
{"nick":"creationix","message":"then ffi could be used instead of C bindings","date":"2012-06-20T20:18:57.289Z","type":"message"}
{"nick":"creationix","message":"and it would be super fast","date":"2012-06-20T20:19:00.439Z","type":"message"}
{"nick":"levi","message":"Interesting.","date":"2012-06-20T20:19:07.994Z","type":"message"}
{"nick":"creationix","message":"I like the idea, but that would be a rewrite of libuv","date":"2012-06-20T20:19:20.115Z","type":"message"}
{"nick":"levi","message":"I think a lua-only layer could still be written.","date":"2012-06-20T20:19:43.096Z","type":"message"}
{"nick":"creationix","message":"If I had time, I would write a select-style layer on top of libuv in C and ffi into that","date":"2012-06-20T20:19:45.238Z","type":"message"}
{"nick":"creationix","message":"libuv as it is today isn't ffi able","date":"2012-06-20T20:19:54.060Z","type":"message"}
{"nick":"creationix","message":"not purely at least","date":"2012-06-20T20:19:56.774Z","type":"message"}
{"nick":"creationix","message":"not to mention that ffi callbacks are really slow","date":"2012-06-20T20:20:07.417Z","type":"message"}
{"nick":"levi","message":"The lua-only layer wouldn't provide ffi, but it would provide an alternative user API without replacing the old one.","date":"2012-06-20T20:20:23.084Z","type":"message"}
{"nick":"creationix","message":"levi, that can be done too, but not blocking","date":"2012-06-20T20:20:48.794Z","type":"message"}
{"nick":"creationix","message":"a blocking select function can be turned into non-blocking callbacks","date":"2012-06-20T20:21:03.671Z","type":"message"}
{"nick":"creationix","message":"but not the other way","date":"2012-06-20T20:21:06.643Z","type":"message"}
{"nick":"levi","message":"That's not quite what I was thinking of.","date":"2012-06-20T20:21:40.015Z","type":"message"}
{"nick":"creationix","message":"so if libuv instead was a single API to get events uv_get_event(uv_event* event)","date":"2012-06-20T20:21:51.529Z","type":"message"}
{"nick":"creationix","message":"levi, you can layer coroutines on top of luvit's callbacks","date":"2012-06-20T20:22:03.650Z","type":"message"}
{"nick":"creationix","message":"and that looks blocking","date":"2012-06-20T20:22:09.125Z","type":"message"}
{"nick":"levi","message":"That is what I meant.","date":"2012-06-20T20:22:11.788Z","type":"message"}
{"nick":"creationix","message":"I made an example in the examples folder","date":"2012-06-20T20:22:17.621Z","type":"message"}
{"nick":"creationix","message":"that works quite well","date":"2012-06-20T20:22:21.433Z","type":"message"}
{"nick":"pquerna","message":"m? you could use lua coroutines as they exist today with the exisitng callback api","date":"2012-06-20T20:22:38.719Z","type":"message"}
{"nick":"pquerna","message":"using lua_resume","date":"2012-06-20T20:22:47.556Z","type":"message"}
{"nick":"creationix","message":"https://github.com/luvit/luvit/blob/master/examples/fs-coroutines.lua#L14-15","date":"2012-06-20T20:23:21.553Z","type":"message"}
{"nick":"dvv-android","date":"2012-06-20T20:23:30.959Z","type":"join"}
{"nick":"creationix","message":"https://github.com/luvit/luvit/blob/master/lib/luvit/fiber.lua#L22-25","date":"2012-06-20T20:23:47.764Z","type":"message"}
{"nick":"dvv-android","reason":"Remote host closed the connection","date":"2012-06-20T20:23:55.894Z","type":"quit"}
{"nick":"creationix","message":"pquerna, use coroutines at the C layer?","date":"2012-06-20T20:24:08.482Z","type":"message"}
{"nick":"creationix","message":"that could work","date":"2012-06-20T20:24:26.827Z","type":"message"}
{"nick":"creationix","message":"then each \"thread\" would appear blocking and the system would act as if it was multithreaded","date":"2012-06-20T20:24:44.254Z","type":"message"}
{"nick":"creationix","message":"mostly","date":"2012-06-20T20:24:48.195Z","type":"message"}
{"nick":"dvv-android","date":"2012-06-20T20:24:50.953Z","type":"join"}
{"nick":"creationix","message":"I still like Mike's idea","date":"2012-06-20T20:25:26.884Z","type":"message"}
{"nick":"creationix","message":"but the libuv guys weren't interested","date":"2012-06-20T20:25:35.738Z","type":"message"}
{"nick":"creationix","message":"isaac called it a \"boil the oceans\" idea","date":"2012-06-20T20:25:48.242Z","type":"message"}
{"nick":"levi","message":"creationix: Yeah, I saw those and I was thinking along those lines, but more developed. Clearly luvit-the-runtime supports it, but luvit-the-system doesn't really provide much and assumes you're going to do everything via callbacks.","date":"2012-06-20T20:26:06.394Z","type":"message"}
{"nick":"creationix","message":"levi, right, callbacks are the lungua franca","date":"2012-06-20T20:26:30.436Z","type":"message"}
{"nick":"creationix","message":"and to be fair, it's really hard to do arbitrart parallel work using coroutines","date":"2012-06-20T20:26:47.252Z","type":"message"}
{"nick":"creationix","message":"callbacks are actually simpler for that kind of work","date":"2012-06-20T20:26:55.195Z","type":"message"}
{"nick":"creationix","message":"same for event handlers","date":"2012-06-20T20:27:00.226Z","type":"message"}
{"nick":"levi","message":"Well, using raw coroutines, I agree.","date":"2012-06-20T20:27:07.651Z","type":"message"}
{"nick":"creationix","message":" even using full blocking syntax","date":"2012-06-20T20:27:23.739Z","type":"message"}
{"nick":"creationix","message":"in a blocking system, you can only do one thing at a time","date":"2012-06-20T20:27:31.347Z","type":"message"}
{"nick":"creationix","message":"there is no way to describe parallel work","date":"2012-06-20T20:27:37.285Z","type":"message"}
{"nick":"levi","message":"Sure there is, you just spawn additional tasks/threads/fibers/whatever you want to call them.","date":"2012-06-20T20:28:10.974Z","type":"message"}
{"nick":"creationix","message":"ok, so \"fiber\" or whatever would be an async function and run in parallel","date":"2012-06-20T20:28:48.958Z","type":"message"}
{"nick":"creationix","message":"that could work","date":"2012-06-20T20:28:50.926Z","type":"message"}
{"nick":"creationix","message":"though I worry about the performance overhead of using coroutines everywhere","date":"2012-06-20T20:29:20.561Z","type":"message"}
{"nick":"creationix","message":"but preserving the stack sure makes debugging and error handling easier.","date":"2012-06-20T20:29:41.717Z","type":"message"}
{"nick":"creationix","message":"levi, but other than the fs module, there aren't many async functions","date":"2012-06-20T20:30:07.402Z","type":"message"}
{"nick":"levi","message":"It wouldn't remove the asynchronous callback layer beneath, so you could always optimize stuff that's going too slow.","date":"2012-06-20T20:30:10.847Z","type":"message"}
{"nick":"creationix","message":"just event handlers","date":"2012-06-20T20:30:11.868Z","type":"message"}
{"nick":"creationix","message":"yeah, so select-style C layer with pure coroutine-style lua layer","date":"2012-06-20T20:30:33.502Z","type":"message"}
{"nick":"creationix","message":"that could be nice","date":"2012-06-20T20:30:35.556Z","type":"message"}
{"nick":"creationix","message":"pquerna, would luvit still be attractive to you guys if it had a coroutine based API instead of a node-style callback API?","date":"2012-06-20T20:31:27.089Z","type":"message"}
{"nick":"creationix","message":"just curious","date":"2012-06-20T20:31:29.283Z","type":"message"}
{"nick":"creationix","message":"I know part of the reason you joined luvit was because it was like node, but uses less ram","date":"2012-06-20T20:31:41.702Z","type":"message"}
{"nick":"levi","message":"There's no reason the two can't coexist, either.","date":"2012-06-20T20:31:44.514Z","type":"message"}
{"nick":"creationix","message":"sure","date":"2012-06-20T20:31:55.382Z","type":"message"}
{"nick":"creationix","message":"I'm just trying to gauge how important similair APIs is","date":"2012-06-20T20:32:06.346Z","type":"message"}
{"nick":"levi","message":"Although callback APIs tend to be infectious.","date":"2012-06-20T20:32:14.691Z","type":"message"}
{"nick":"creationix","message":"coroutines wrap them fairly well","date":"2012-06-20T20:32:33.638Z","type":"message"}
{"nick":"creationix","message":"and if the C layer was blocking, it would be easier to build both types on top","date":"2012-06-20T20:32:47.394Z","type":"message"}
{"nick":"creationix","message":"hmm, how well could async functions be wrapped?","date":"2012-06-20T20:34:10.960Z","type":"message"}
{"nick":"creationix","message":"my \"fiber\" module isn't enough sugar","date":"2012-06-20T20:34:18.840Z","type":"message"}
{"nick":"creationix","message":"it's still obviously a callback","date":"2012-06-20T20:34:25.865Z","type":"message"}
{"nick":"creationix","message":"(which was on purpose)","date":"2012-06-20T20:34:33.208Z","type":"message"}
{"nick":"mmalecki","reason":"Ping timeout: 265 seconds","date":"2012-06-20T20:35:02.105Z","type":"quit"}
{"nick":"levi","message":"I don't think it would be a problem, it would just be a matter of keeping track of which coroutines belong to which callbacks.","date":"2012-06-20T20:35:41.281Z","type":"message"}
{"nick":"creationix","message":"so in streamline.js, you can do things like `if (foo(a, _) || bar(b, _)) { ... }` where foo and bar are actually async functions","date":"2012-06-20T20:37:59.442Z","type":"message"}
{"nick":"creationix","message":"I think we could do that with coroutines without writing a code transformer","date":"2012-06-20T20:38:25.130Z","type":"message"}
{"nick":"creationix","message":"if wait(foo, a) or wait(bar, b) then ... end","date":"2012-06-20T20:38:48.630Z","type":"message"}
{"nick":"creationix","message":"fiber(function (wait) ... end)","date":"2012-06-20T20:39:43.778Z","type":"message"}
{"nick":"levi","message":"Where wait would spawn a coroutine-thread and block the current thread on its result?","date":"2012-06-20T20:39:47.390Z","type":"message"}
{"nick":"creationix","message":"fiber would spawn the coroutine","date":"2012-06-20T20:39:54.145Z","type":"message"}
{"nick":"creationix","message":"so you can't suspend the main thread","date":"2012-06-20T20:40:08.768Z","type":"message"}
{"nick":"creationix","message":"but you can suspend within any fiber","date":"2012-06-20T20:40:14.816Z","type":"message"}
{"nick":"creationix","message":"this would be trivially easy today","date":"2012-06-20T20:40:22.559Z","type":"message"}
{"nick":"creationix","message":"we could even give fiber a callback since it's non-blocking","date":"2012-06-20T20:41:15.985Z","type":"message"}
{"nick":"creationix","message":"so we know when the coroutine is done","date":"2012-06-20T20:41:21.546Z","type":"message"}
{"nick":"creationix","message":"and then a higher-level api could \"block\" on our fiber based function","date":"2012-06-20T20:41:40.218Z","type":"message"}
{"nick":"levi","message":"In the model I'm thinking of, every 'server' you would want to run would have its own coroutine, and it would spawn a new coroutine for every socket, etc.","date":"2012-06-20T20:41:42.538Z","type":"message"}
{"nick":"creationix","message":"http.createServer(function (req, res, wait) ... end)","date":"2012-06-20T20:42:21.608Z","type":"message"}
{"nick":"creationix","message":"so you could use wait within the http request handler","date":"2012-06-20T20:42:33.953Z","type":"message"}
{"nick":"creationix","message":"actually, I kinda like the wait syntax","date":"2012-06-20T20:43:25.070Z","type":"message"}
{"nick":"levi","message":"I was also envisioning a global task switcher and a single set of blocking/task switching functions to manage them instead of passing 'wait' functions around.","date":"2012-06-20T20:43:39.004Z","type":"message"}
{"nick":"creationix","message":"thanks to lua's multiple return values we can get the error from async functions","date":"2012-06-20T20:43:41.768Z","type":"message"}
{"nick":"creationix","message":"we'll just need to swap the order to make it assert friendly","date":"2012-06-20T20:43:51.562Z","type":"message"}
{"nick":"creationix","message":"levi, so even more implicit","date":"2012-06-20T20:44:02.861Z","type":"message"}
{"nick":"creationix","message":"hmm..","date":"2012-06-20T20:44:12.173Z","type":"message"}
{"nick":"levi","message":"I think it might be worth mocking up some fake code to see what these different ideas would look like implementing various common things.","date":"2012-06-20T20:45:08.323Z","type":"message"}
{"nick":"creationix","message":"I worry about making it too implicit","date":"2012-06-20T20:45:28.931Z","type":"message"}
{"nick":"creationix","message":"with wait, it's obvious what's going on","date":"2012-06-20T20:45:36.259Z","type":"message"}
{"nick":"creationix","message":"since state can change out from under you while you're suspended","date":"2012-06-20T20:46:13.058Z","type":"message"}
{"nick":"creationix","message":"explicit suspension is a good thing","date":"2012-06-20T20:46:18.689Z","type":"message"}
{"nick":"levi","message":"I was thinking that you could use naming conventions to indicate things that might suspend.","date":"2012-06-20T20:46:26.113Z","type":"message"}
{"nick":"creationix","message":"just if only we could make it explicit but not painful","date":"2012-06-20T20:46:34.711Z","type":"message"}
{"nick":"pquerna","message":"rphillips: anything i can help with on --setup / https client?","date":"2012-06-20T20:47:18.402Z","type":"message"}
{"nick":"levi","message":"I think that the other side to this coin would be some better state management things as well.","date":"2012-06-20T20:47:29.938Z","type":"message"}
{"nick":"levi","message":"It would be nice if programs written in idiomatic style would work both in cooperative and preemptive threading models.","date":"2012-06-20T20:48:25.922Z","type":"message"}
{"nick":"rphillips","message":"pquerna: definetly. the luvit http code monkeypatches the stream, and it's messing up the cleartext TLS stream","date":"2012-06-20T20:48:46.967Z","type":"message"}
{"nick":"levi","message":"I don't have any concrete suggestions in that direction, though.","date":"2012-06-20T20:48:51.774Z","type":"message"}
{"nick":"rphillips","message":"pquerna: I can't post to the auth server","date":"2012-06-20T20:48:58.797Z","type":"message"}
{"nick":"rphillips","message":"pquerna: https://github.com/racker/virgo/pull/115","date":"2012-06-20T20:49:23.430Z","type":"message"}
{"nick":"rphillips","message":"and https://github.com/luvit/luvit/pull/254","date":"2012-06-20T20:49:49.719Z","type":"message"}
{"nick":"dvv-android","reason":"Ping timeout: 246 seconds","date":"2012-06-20T20:50:03.968Z","type":"quit"}
{"nick":"creationix","message":"levi, yeah, not sure I understand that concretely","date":"2012-06-20T20:50:11.041Z","type":"message"}
{"nick":"rphillips","message":"the Ele API client works... I ran raxmon and got a token and plopped it in","date":"2012-06-20T20:50:12.577Z","type":"message"}
{"nick":"pquerna","message":"rphillips: ah","date":"2012-06-20T20:51:11.225Z","type":"message"}
{"nick":"rphillips","message":"pquerna: some help on the post + http layer would be helpful","date":"2012-06-20T20:51:51.258Z","type":"message"}
{"nick":"levi","message":"creationix: Well, mostly a coroutine thread should be the only one touching its own data, and data that needs to be shared should be managed by some abstraction that ensures consistency.","date":"2012-06-20T20:52:23.588Z","type":"message"}
{"nick":"creationix","message":"it's no different than callback based code","date":"2012-06-20T20:56:38.663Z","type":"message"}
{"nick":"creationix","message":"just need to be aware","date":"2012-06-20T20:56:42.158Z","type":"message"}
{"nick":"pancake","date":"2012-06-20T20:56:46.945Z","type":"join"}
{"nick":"pancake","message":"hi","date":"2012-06-20T20:57:17.774Z","type":"message"}
{"nick":"pquerna","message":"rphillips: kk, taking a look","date":"2012-06-20T20:57:19.747Z","type":"message"}
{"nick":"creationix","message":"pancake, hello","date":"2012-06-20T20:58:03.651Z","type":"message"}
{"nick":"creationix","message":"levi, actually, I think I'll try my fiber wait idea","date":"2012-06-20T20:58:23.832Z","type":"message"}
{"nick":"pancake","message":"https://twitter.com/compay/status/215532846637527041","date":"2012-06-20T20:58:32.830Z","type":"message"}
{"nick":"creationix","message":"it's better than the current fiber module","date":"2012-06-20T20:58:35.701Z","type":"message"}
{"nick":"pancake","message":"https://twitter.com/compay/status/215544073732370432","date":"2012-06-20T20:58:40.572Z","type":"message"}
{"nick":"pancake","message":"https://twitter.com/compay/status/215532307547815936","date":"2012-06-20T20:58:59.325Z","type":"message"}
{"nick":"creationix","message":"pancake, interesting","date":"2012-06-20T21:00:54.213Z","type":"message"}
{"nick":"creationix","message":"so we need LON","date":"2012-06-20T21:01:33.531Z","type":"message"}
{"nick":"creationix","message":"JSON:JS::LON:Lua","date":"2012-06-20T21:01:44.427Z","type":"message"}
{"nick":"pancake","message":":D","date":"2012-06-20T21:01:52.728Z","type":"message"}
{"nick":"levi","message":"creationix: I think it's a great idea, especially for node-trained folks.","date":"2012-06-20T21:01:56.505Z","type":"message"}
{"nick":"pancake","message":"in fact luvit's json parser is quite slow compared to nodejs one","date":"2012-06-20T21:02:07.107Z","type":"message"}
{"nick":"creationix","message":"I mean, JSON is a subset of JS","date":"2012-06-20T21:02:10.887Z","type":"message"}
{"nick":"creationix","message":"why not do the same thing for lua","date":"2012-06-20T21:02:15.493Z","type":"message"}
{"nick":"creationix","message":"it would be close","date":"2012-06-20T21:02:18.117Z","type":"message"}
{"nick":"creationix","message":"pancake, yeah, that's unfortunate","date":"2012-06-20T21:02:44.334Z","type":"message"}
{"nick":"creationix","message":"I thought yajl would be faster","date":"2012-06-20T21:02:49.003Z","type":"message"}
{"nick":"creationix","message":"does anyone use the current fiber module?","date":"2012-06-20T21:03:05.360Z","type":"message"}
{"nick":"creationix","message":"I'd like to just replace it with a wait based one","date":"2012-06-20T21:03:12.994Z","type":"message"}
{"nick":"levi","message":"creationix: I view the state management thing as orthogonal to the flow-management thing.  Either way, it could use some help. :)","date":"2012-06-20T21:03:21.994Z","type":"message"}
{"nick":"creationix","message":"fiber(block, callback)","date":"2012-06-20T21:03:27.560Z","type":"message"}
{"nick":"creationix","message":"levi, agreed","date":"2012-06-20T21:03:29.899Z","type":"message"}
{"nick":"creationix","message":"block(wait)","date":"2012-06-20T21:03:38.708Z","type":"message"}
{"nick":"pancake","message":"creationix: didnt tried to benchmark yaml vs json","date":"2012-06-20T21:03:40.610Z","type":"message"}
{"nick":"creationix","message":"pancake, which json?","date":"2012-06-20T21:03:55.674Z","type":"message"}
{"nick":"creationix","message":"luvit's json is based on yaml","date":"2012-06-20T21:04:00.839Z","type":"message"}
{"nick":"pancake","message":"the node's one, as far as it's the reference","date":"2012-06-20T21:04:09.367Z","type":"message"}
{"nick":"levi","message":"Doesn't lua already have 'lon' in everything but name?","date":"2012-06-20T21:04:33.277Z","type":"message"}
{"nick":"creationix","message":"the same that js had json","date":"2012-06-20T21:04:43.876Z","type":"message"}
{"nick":"levi","message":"Yeah.","date":"2012-06-20T21:04:48.963Z","type":"message"}
{"nick":"creationix","message":"but a parser that only accepts proper \"lon\" fixes the security concerns","date":"2012-06-20T21:04:56.645Z","type":"message"}
{"nick":"creationix","message":"solved the same problem json solved","date":"2012-06-20T21:05:02.843Z","type":"message"}
{"nick":"creationix","message":"*solves the same problem json solved","date":"2012-06-20T21:05:08.575Z","type":"message"}
{"nick":"creationix","message":"JSON should be easier to parse than full js","date":"2012-06-20T21:05:52.535Z","type":"message"}
{"nick":"pancake","message":"creationix: the code for parsing \"lon\" is in one of the tweets above","date":"2012-06-20T21:06:24.606Z","type":"message"}
{"nick":"creationix","message":"pancake, right, using eval","date":"2012-06-20T21:06:35.988Z","type":"message"}
{"nick":"pancake","message":"we could expose that function in the core api of luvit","date":"2012-06-20T21:06:37.640Z","type":"message"}
{"nick":"creationix","message":"or was there another","date":"2012-06-20T21:06:48.813Z","type":"message"}
{"nick":"creationix","message":"I guess it's not lon, but LTN","date":"2012-06-20T21:06:58.478Z","type":"message"}
{"nick":"pancake","message":"https://gist.github.com/2962063","date":"2012-06-20T21:06:59.953Z","type":"message"}
{"nick":"creationix","message":"Lua Table Notation","date":"2012-06-20T21:07:03.675Z","type":"message"}
{"nick":"creationix","message":"Java Script Object Notation","date":"2012-06-20T21:07:11.568Z","type":"message"}
{"nick":"pancake","message":"ltn takes sense","date":"2012-06-20T21:07:23.705Z","type":"message"}
{"nick":"creationix","message":"actually since lua strings don't care about unicode, a LTN parser would be very easy","date":"2012-06-20T21:07:44.047Z","type":"message"}
{"nick":"levi","message":"Actually, if you look at the code there, you'll notice that he's setting the environment, effectively sandboxing it.","date":"2012-06-20T21:08:52.306Z","type":"message"}
{"nick":"creationix","message":"levi, good point","date":"2012-06-20T21:09:07.721Z","type":"message"}
{"nick":"creationix","message":"lua is easier to sandbox","date":"2012-06-20T21:09:12.323Z","type":"message"}
{"nick":"levi","message":"I really like that about lua.","date":"2012-06-20T21:09:19.736Z","type":"message"}
{"nick":"creationix","message":"though they can still do while true do; end","date":"2012-06-20T21:09:25.684Z","type":"message"}
{"nick":"creationix","message":"or eat all the ram","date":"2012-06-20T21:09:46.566Z","type":"message"}
{"nick":"levi","message":"Hmm, yeah.","date":"2012-06-20T21:10:13.156Z","type":"message"}
{"nick":"creationix","message":"besides, a proper subset would mean parsers could be written for other languages","date":"2012-06-20T21:10:25.346Z","type":"message"}
{"nick":"creationix","message":"though I'm not sure what it would have over JSON","date":"2012-06-20T21:10:40.981Z","type":"message"}
{"nick":"creationix","message":"except for allowing arbitrary binary data in strings","date":"2012-06-20T21:10:47.985Z","type":"message"}
{"nick":"levi","message":"Yes, I agree, defining an interop subset would be good.","date":"2012-06-20T21:10:58.355Z","type":"message"}
{"nick":"pancake","message":"the good thing about standards is that there are many","date":"2012-06-20T21:11:04.677Z","type":"message"}
{"nick":"creationix","message":"and order or keys wouldn't be allowed to matter","date":"2012-06-20T21:11:08.748Z","type":"message"}
{"nick":"creationix","message":"and nil can't be a key","date":"2012-06-20T21:11:32.414Z","type":"message"}
{"nick":"creationix","message":"I mean value","date":"2012-06-20T21:11:50.448Z","type":"message"}
{"nick":"creationix","message":"or key, I guess it's not allowed there","date":"2012-06-20T21:12:18.250Z","type":"message"}
{"nick":"creationix","message":"LTN would know the difference between {[\"5\"]=true} and {[5]=true}","date":"2012-06-20T21:12:42.492Z","type":"message"}
{"nick":"creationix","message":"and could have tables as keys","date":"2012-06-20T21:12:56.340Z","type":"message"}
{"nick":"creationix","message":"so I guess it's different enough from json","date":"2012-06-20T21:13:04.908Z","type":"message"}
{"nick":"creationix","message":"what number formats should it accept","date":"2012-06-20T21:13:48.596Z","type":"message"}
{"nick":"creationix","message":"I see lua ignore zeros at the start","date":"2012-06-20T21:13:58.177Z","type":"message"}
{"nick":"creationix","message":"so no octal format","date":"2012-06-20T21:14:02.304Z","type":"message"}
{"nick":"creationix","message":"hex format would be nice","date":"2012-06-20T21:14:33.354Z","type":"message"}
{"nick":"creationix","message":"it's a shame JSON doesn't allow that","date":"2012-06-20T21:14:37.940Z","type":"message"}
{"nick":"creationix","message":"but it does allow scientific notation","date":"2012-06-20T21:14:43.948Z","type":"message"}
{"nick":"levi","message":"You could call it LTIN for \"Lua Table Interop Notation\", which would make it easier to pronounce.","date":"2012-06-20T21:14:57.676Z","type":"message"}
{"nick":"levi","action":"paints the bikeshed. ;)","date":"2012-06-20T21:15:24.850Z","type":"action"}
{"nick":"pancake","message":"and will also support [[ ]]","date":"2012-06-20T21:15:42.245Z","type":"message"}
{"nick":"creationix","message":"pancake, what's [[ ]]?","date":"2012-06-20T21:17:54.890Z","type":"message"}
{"nick":"creationix","message":"LTIN :)","date":"2012-06-20T21:18:06.127Z","type":"message"}
{"nick":"creationix","message":"pronounced el-tin?","date":"2012-06-20T21:18:26.929Z","type":"message"}
{"nick":"levi","message":"Yup, that's what it sounded like in my head anyway.","date":"2012-06-20T21:18:48.964Z","type":"message"}
{"nick":"creationix","message":"I should write up a LTIN spec in the luvit wiki","date":"2012-06-20T21:19:16.158Z","type":"message"}
{"nick":"pancake","message":"multiline","date":"2012-06-20T21:19:21.252Z","type":"message"}
{"nick":"creationix","message":"and add it to the luvit standard library","date":"2012-06-20T21:19:22.498Z","type":"message"}
{"nick":"pancake","message":"text","date":"2012-06-20T21:19:23.054Z","type":"message"}
{"nick":"creationix","message":"pancake, oh, right","date":"2012-06-20T21:19:30.609Z","type":"message"}
{"nick":"creationix","action":"hasn't used lua lately","date":"2012-06-20T21:19:36.568Z","type":"action"}
{"nick":"creationix","message":"comments?","date":"2012-06-20T21:19:44.400Z","type":"message"}
{"nick":"creationix","message":"should that be part of the spec?","date":"2012-06-20T21:19:48.916Z","type":"message"}
{"nick":"creationix","message":"people miss it from json","date":"2012-06-20T21:19:57.210Z","type":"message"}
{"nick":"creationix","message":"but it's not data, it's comments on the data","date":"2012-06-20T21:20:06.008Z","type":"message"}
{"nick":"creationix","message":"my take is if we allow arbitrary whitespace, we should allow comments too","date":"2012-06-20T21:20:19.125Z","type":"message"}
{"nick":"creationix","message":"both are for ease of writing and reading by humans","date":"2012-06-20T21:20:26.004Z","type":"message"}
{"nick":"levi","message":"Sure, I would agree with including comments.","date":"2012-06-20T21:20:43.259Z","type":"message"}
{"nick":"creationix","message":"both -- and --[[ ]] style","date":"2012-06-20T21:20:56.826Z","type":"message"}
{"nick":"creationix","message":"so you can comment out blocks of a config file","date":"2012-06-20T21:21:14.593Z","type":"message"}
{"nick":"creationix","message":"ok, I'm going to rewrite fiber.lua and document the LTIN format :)","date":"2012-06-20T21:22:28.996Z","type":"message"}
{"nick":"creationix","message":"no time to write a LTIN parser today though","date":"2012-06-20T21:22:38.168Z","type":"message"}
{"nick":"levi","message":"One of the nifty things about Lua as a data definition language is that a function of one parameter doesn't need parens, so you can do: Foo { bar = \"baz\", frob = \"blot\" }","date":"2012-06-20T21:22:39.122Z","type":"message"}
{"nick":"creationix","message":"yeah, that's neat","date":"2012-06-20T21:23:19.243Z","type":"message"}
{"nick":"creationix","message":"when I get into writing more lua than js I do that more","date":"2012-06-20T21:23:26.600Z","type":"message"}
{"nick":"creationix","message":"been doing a lot of js for work lately","date":"2012-06-20T21:23:33.663Z","type":"message"}
{"nick":"creationix","message":"thousands of lines of node code","date":"2012-06-20T21:23:43.304Z","type":"message"}
{"nick":"levi","message":"You can also nest those, but that wouldn't work with LTIN.","date":"2012-06-20T21:23:56.347Z","type":"message"}
{"nick":"creationix","message":"my next project involves lua and opengl","date":"2012-06-20T21:23:58.535Z","type":"message"}
{"nick":"creationix","message":":)","date":"2012-06-20T21:23:59.431Z","type":"message"}
{"nick":"levi","message":"Nice!","date":"2012-06-20T21:24:03.134Z","type":"message"}
{"nick":"creationix","message":"I'm trying to see if I can use luvit","date":"2012-06-20T21:24:11.268Z","type":"message"}
{"nick":"pancake","message":"creationix: i think supporting objc should be more prioritary than ltn :P","date":"2012-06-20T21:24:18.688Z","type":"message"}
{"nick":"creationix","message":"pancake, I need iOS for work","date":"2012-06-20T21:24:43.201Z","type":"message"}
{"nick":"creationix","message":"my two iPads arrived this week","date":"2012-06-20T21:24:53.407Z","type":"message"}
{"nick":"pancake","message":":)","date":"2012-06-20T21:24:56.911Z","type":"message"}
{"nick":"creationix","message":"but LTIN is simple and quick","date":"2012-06-20T21:25:05.705Z","type":"message"}
{"nick":"creationix","message":"I like it","date":"2012-06-20T21:25:08.429Z","type":"message"}
{"nick":"pancake","message":"heheh :)","date":"2012-06-20T21:25:11.315Z","type":"message"}
{"nick":"creationix","message":"the keys won't port to other languages","date":"2012-06-20T21:25:30.657Z","type":"message"}
{"nick":"creationix","message":"but the rest is fairly portable","date":"2012-06-20T21:25:35.420Z","type":"message"}
{"nick":"creationix","message":"what other languages support arbitrary values as keys?","date":"2012-06-20T21:25:47.777Z","type":"message"}
{"nick":"pancake","message":"are you going to add objc support for work?","date":"2012-06-20T21:25:50.177Z","type":"message"}
{"nick":"pancake","message":"perl?","date":"2012-06-20T21:26:05.509Z","type":"message"}
{"nick":"creationix","message":"pancake, my work project is to write an iOS appstore app using lua and opengl","date":"2012-06-20T21:26:09.352Z","type":"message"}
{"nick":"creationix","message":"I guess js does now through maps","date":"2012-06-20T21:26:22.127Z","type":"message"}
{"nick":"creationix","message":"so a LTIN parser can generate maps instead of objects","date":"2012-06-20T21:26:31.524Z","type":"message"}
{"nick":"levi","message":"creationix: You can make appstore apps with Codea now, apparently.","date":"2012-06-20T21:26:34.244Z","type":"message"}
{"nick":"creationix","message":"levi, btw, that block game rocks!","date":"2012-06-20T21:26:45.818Z","type":"message"}
{"nick":"levi","message":"Yeah, it's fun!","date":"2012-06-20T21:26:51.688Z","type":"message"}
{"nick":"creationix","message":"I've almost got all 3-stars on medium","date":"2012-06-20T21:26:55.288Z","type":"message"}
{"nick":"creationix","message":"the others are super hard","date":"2012-06-20T21:26:59.441Z","type":"message"}
{"nick":"creationix","message":"codea is way too high-level for my work project","date":"2012-06-20T21:27:35.626Z","type":"message"}
{"nick":"creationix","message":"I basically need webgl + node, but in lua","date":"2012-06-20T21:27:49.793Z","type":"message"}
{"nick":"creationix","message":"luvit + ffi sounds like a good fit for that","date":"2012-06-20T21:27:56.948Z","type":"message"}
{"nick":"pquerna","message":"rphillips: do you know whats happening to the request body?","date":"2012-06-20T21:27:57.156Z","type":"message"}
{"nick":"levi","message":"Nice.","date":"2012-06-20T21:28:04.341Z","type":"message"}
{"nick":"pquerna","message":"rphillips: i don't see why its not being sent","date":"2012-06-20T21:28:06.894Z","type":"message"}
{"nick":"pancake","message":"http://twolivesleft.com/Codea/","date":"2012-06-20T21:28:36.271Z","type":"message"}
{"nick":"creationix","action":"goes off to write up the ltin spec before 5pm hits and his family demands his attention","date":"2012-06-20T21:28:51.979Z","type":"action"}
{"nick":"creationix","message":"http://ltin.io/ is open, but I'm not paying $100 for it","date":"2012-06-20T21:29:34.481Z","type":"message"}
{"nick":"creationix","message":"ltin.org is taken","date":"2012-06-20T21:29:38.794Z","type":"message"}
{"nick":"creationix","message":"we could do ltin.luvit.io","date":"2012-06-20T21:29:47.314Z","type":"message"}
{"nick":"creationix","message":";)","date":"2012-06-20T21:29:49.999Z","type":"message"}
{"nick":"pancake","message":"+1 subdomain :P","date":"2012-06-20T21:31:03.103Z","type":"message"}
{"nick":"levi","message":"There you go. :)","date":"2012-06-20T21:33:20.631Z","type":"message"}
{"nick":"pquerna","message":"rphillips: like i don't think the POST bodies are getting sent at all","date":"2012-06-20T21:35:10.662Z","type":"message"}
{"nick":"levi","message":"It might be interesting to extend LTIN with a mechanism for referring to previous data in the stream to be able to capture references between tables and cyclic structurs.","date":"2012-06-20T21:35:42.168Z","type":"message"}
{"nick":"rphillips","message":"pquerna: i put some prints in the tls write functions and saw the payload","date":"2012-06-20T21:36:54.871Z","type":"message"}
{"nick":"mmalecki","date":"2012-06-20T21:37:02.706Z","type":"join"}
{"nick":"pquerna","message":"rphillips: hrm, yeah","date":"2012-06-20T21:37:07.451Z","type":"message"}
{"nick":"`3rdEden","reason":"Quit: Leaving...","date":"2012-06-20T21:40:18.241Z","type":"quit"}
{"nick":"pquerna","message":"rphillips: looks like its always getting chunked","date":"2012-06-20T21:42:05.544Z","type":"message"}
{"nick":"pquerna","message":"rphillips: even if its a content-length body","date":"2012-06-20T21:42:13.481Z","type":"message"}
{"nick":"pquerna","message":"i think this will happen with non-https too","date":"2012-06-20T21:42:20.489Z","type":"message"}
{"nick":"pquerna","message":"hrm","date":"2012-06-20T21:42:21.220Z","type":"message"}
{"nick":"pquerna","message":"rphillips: bleh","date":"2012-06-20T21:46:42.380Z","type":"message"}
{"nick":"creationix","message":"well,  it's not a fully formed spec, but it has the general idea https://github.com/luvit/luvit/wiki/LTIN---Lua-Table-Interop-Notation","date":"2012-06-20T21:52:03.749Z","type":"message"}
{"nick":"creationix","message":"feel free to tidy up","date":"2012-06-20T21:52:07.293Z","type":"message"}
{"nick":"creationix","message":"I'd love parser diagrams like on json.org","date":"2012-06-20T21:52:15.637Z","type":"message"}
{"nick":"creationix","message":"moved to https://github.com/luvit/luvit/wiki/Lua-Table-Interop-Notation","date":"2012-06-20T21:54:28.688Z","type":"message"}
{"nick":"levi","message":"Isn't the order of integer keys in a table defined to be numeric order?","date":"2012-06-20T21:56:14.792Z","type":"message"}
{"nick":"pquerna","message":"timer.setTimeout(0","date":"2012-06-20T21:56:41.777Z","type":"message"}
{"nick":"pquerna","message":"rhrmnaadf","date":"2012-06-20T21:56:44.475Z","type":"message"}
{"nick":"creationix","message":"nope","date":"2012-06-20T22:00:04.060Z","type":"message"}
{"nick":"creationix","message":"that's why you should use ipairs","date":"2012-06-20T22:00:10.436Z","type":"message"}
{"nick":"creationix","message":"though I think most implementations give the integer keys in order","date":"2012-06-20T22:00:27.924Z","type":"message"}
{"nick":"creationix","message":"due to how the hash algorithm works","date":"2012-06-20T22:00:35.365Z","type":"message"}
{"nick":"creationix","message":"(I could be wrong though)","date":"2012-06-20T22:00:40.180Z","type":"message"}
{"nick":"CIA-113","message":"Paul Querna\u000f master\u000f * r43e6d4d\u000f \u000f/ tests/runner.lua :\u000f Only run files that start with test, not just contain test. - http://git.io/VNixMA","date":"2012-06-20T22:09:51.606Z","type":"message"}
{"nick":"TheJH","reason":"Ping timeout: 272 seconds","date":"2012-06-20T22:17:30.135Z","type":"quit"}
{"nick":"mmalecki","reason":"Ping timeout: 272 seconds","date":"2012-06-20T22:23:50.106Z","type":"quit"}
{"nick":"levi","message":"creationix: You're right, not even integer keys are ordered.","date":"2012-06-20T22:24:40.116Z","type":"message"}
{"nick":"creationix","message":"levi, coro idea https://gist.github.com/2962615","date":"2012-06-20T22:29:06.682Z","type":"message"}
{"nick":"creationix","message":"anyway, got to go","date":"2012-06-20T22:29:11.006Z","type":"message"}
{"nick":"levi","message":"Seeya!","date":"2012-06-20T22:31:03.670Z","type":"message"}
{"nick":"pancake","reason":"Read error: Operation timed out","date":"2012-06-20T23:31:05.265Z","type":"quit"}
{"nick":"pquerna","message":"hrm","date":"2012-06-20T23:54:25.008Z","type":"message"}
{"nick":"pquerna","message":"rphillips:   print(\"buffer is broken on win32, need to not ffi into malloc\")","date":"2012-06-20T23:54:26.641Z","type":"message"}
{"nick":"rphillips","message":"pquerna: it may work now.","date":"2012-06-20T23:55:51.718Z","type":"message"}
{"nick":"rphillips","message":"Not sure","date":"2012-06-20T23:56:01.454Z","type":"message"}
{"nick":"pquerna","message":"nmmm, looks likes its still FFI'ing into malloc","date":"2012-06-20T23:56:04.496Z","type":"message"}
{"nick":"rphillips","message":"The ssl code doesn't use the buffer","date":"2012-06-20T23:56:20.106Z","type":"message"}
{"nick":"pquerna","message":"i know","date":"2012-06-20T23:58:18.267Z","type":"message"}
{"nick":"pquerna","message":"sorry just was looking at making horrible test cases","date":"2012-06-20T23:58:27.409Z","type":"message"}
{"nick":"rphillips","message":"I'll look into it more in the morning","date":"2012-06-20T23:58:31.563Z","type":"message"}
{"nick":"rphillips","message":"Maybe tonight","date":"2012-06-20T23:58:57.248Z","type":"message"}
{"nick":"rphillips","message":"Will be awesome to have a luvit client","date":"2012-06-20T23:59:17.497Z","type":"message"}
{"nick":"rphillips","message":"Luvit Maas client *","date":"2012-06-20T23:59:31.855Z","type":"message"}
{"nick":"pquerna","message":":)","date":"2012-06-20T23:59:43.532Z","type":"message"}
