{"nick":"dan336","reason":"Quit: Leaving.","date":"2015-01-22T00:03:53.563Z","type":"quit"}
{"nick":"UniOn","reason":"Quit: Leaving","date":"2015-01-22T00:04:52.821Z","type":"quit"}
{"nick":"a_le","date":"2015-01-22T00:16:05.272Z","type":"join"}
{"nick":"a_le","reason":"Read error: Connection reset by peer","date":"2015-01-22T00:16:30.964Z","type":"quit"}
{"nick":"a_le","date":"2015-01-22T00:17:12.241Z","type":"join"}
{"nick":"a_le","reason":"Read error: Connection reset by peer","date":"2015-01-22T00:22:50.582Z","type":"quit"}
{"nick":"a_le","date":"2015-01-22T00:23:18.374Z","type":"join"}
{"nick":"a_le","reason":"Read error: Connection reset by peer","date":"2015-01-22T00:24:30.634Z","type":"quit"}
{"nick":"a_le","date":"2015-01-22T00:24:43.036Z","type":"join"}
{"nick":"DarkGod","reason":"Ping timeout: 264 seconds","date":"2015-01-22T01:18:03.960Z","type":"quit"}
{"nick":"rphillips","message":"i'm going to want to pull in virgo-base into rackspace-monitoring","date":"2015-01-22T02:54:05.375Z","type":"message"}
{"nick":"rphillips","message":"via lit","date":"2015-01-22T02:54:14.892Z","type":"message"}
{"nick":"rphillips","message":"i wonder if we could have a list of github IDs in package.lua that are allowed to push to lit","date":"2015-01-22T02:55:11.416Z","type":"message"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2015-01-22T03:11:03.871Z","type":"quit"}
{"nick":"a_le","date":"2015-01-22T03:11:40.250Z","type":"join"}
{"nick":"a_le","reason":"Ping timeout: 256 seconds","date":"2015-01-22T03:16:23.253Z","type":"quit"}
{"nick":"DarkGod","date":"2015-01-22T08:17:21.370Z","type":"join"}
{"nick":"travis-ci","date":"2015-01-22T08:45:33.570Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#258 (winsvc - 545a566 : Rob Emanuele): The build passed.","date":"2015-01-22T08:45:33.712Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/2bd9ca2900a1...545a566f370e","date":"2015-01-22T08:45:33.713Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/47890210","date":"2015-01-22T08:45:33.713Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-22T08:45:33.713Z","type":"part"}
{"nick":"endou______","reason":"Ping timeout: 276 seconds","date":"2015-01-22T08:52:03.094Z","type":"quit"}
{"nick":"travis-ci","date":"2015-01-22T08:53:36.196Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#260 (winsvc - 4b6d309 : Rob Emanuele): The build has errored.","date":"2015-01-22T08:53:36.339Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/545a566f370e...4b6d309d0889","date":"2015-01-22T08:53:36.339Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/47890836","date":"2015-01-22T08:53:36.339Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-22T08:53:36.339Z","type":"part"}
{"nick":"endou______","date":"2015-01-22T09:05:13.027Z","type":"join"}
{"nick":"travis-ci","date":"2015-01-22T11:28:13.896Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#263 (winsvc - 7af1028 : Rob Emanuele): The build passed.","date":"2015-01-22T11:28:14.040Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/3e6472dc8dbf...7af102899c53","date":"2015-01-22T11:28:14.040Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/47903525","date":"2015-01-22T11:28:14.040Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-22T11:28:14.041Z","type":"part"}
{"nick":"travis-ci","date":"2015-01-22T11:54:43.247Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#265 (winsvc - 5dd2fa4 : Rob Emanuele): The build passed.","date":"2015-01-22T11:54:43.391Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/7af102899c53...5dd2fa4e5c54","date":"2015-01-22T11:54:43.392Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/47905899","date":"2015-01-22T11:54:43.392Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-22T11:54:43.392Z","type":"part"}
{"nick":"travis-ci","date":"2015-01-22T12:03:32.272Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#267 (winsvc - 3861ccc : Rob Emanuele): The build passed.","date":"2015-01-22T12:03:32.416Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/5dd2fa4e5c54...3861ccc589a7","date":"2015-01-22T12:03:32.416Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/47906635","date":"2015-01-22T12:03:32.417Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-22T12:03:32.417Z","type":"part"}
{"nick":"a_le","date":"2015-01-22T15:29:31.283Z","type":"join"}
{"nick":"dan336","date":"2015-01-22T15:31:55.267Z","type":"join"}
{"nick":"avidal","date":"2015-01-22T15:34:19.360Z","type":"join"}
{"nick":"avidal","message":"glad to see luvit is still going strong, and congrats on the job creationix :)","date":"2015-01-22T15:34:39.149Z","type":"message"}
{"nick":"avidal","message":"what's the difference between the standard, static, and tiny prebuilt luvi binaries for linux x86_64?","date":"2015-01-22T15:36:12.337Z","type":"message"}
{"nick":"avidal","message":"ah, tiny is the default","date":"2015-01-22T15:36:50.482Z","type":"message"}
{"nick":"avidal","message":"so tiny doesn't have openssl or zlib, large has openssl and zlib, but as shared libraries, and static has openssl and zlib statically compiled?","date":"2015-01-22T15:37:49.285Z","type":"message"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2015-01-22T15:47:57.125Z","type":"quit"}
{"nick":"a_le","date":"2015-01-22T15:48:31.249Z","type":"join"}
{"nick":"a_le","reason":"Ping timeout: 244 seconds","date":"2015-01-22T15:52:49.356Z","type":"quit"}
{"nick":"a_le","date":"2015-01-22T15:57:00.964Z","type":"join"}
{"nick":"tjcravey","date":"2015-01-22T16:03:31.407Z","type":"join"}
{"nick":"rphillips","message":"avidal: righto :)","date":"2015-01-22T16:09:43.213Z","type":"message"}
{"nick":"rphillips","message":"we have arm binaries as well for raspberry pi","date":"2015-01-22T16:09:57.257Z","type":"message"}
{"nick":"avidal","message":"roger","date":"2015-01-22T16:27:43.568Z","type":"message"}
{"nick":"UniOn","date":"2015-01-22T16:32:13.439Z","type":"join"}
{"nick":"songgao","message":"rch rphillips creationix Hi","date":"2015-01-22T16:40:58.859Z","type":"message"}
{"nick":"songgao","message":"so luvit-stream was almost a transpiling from node's stream","date":"2015-01-22T16:41:20.212Z","type":"message"}
{"nick":"rphillips","message":"songgao: hey :)","date":"2015-01-22T16:41:33.790Z","type":"message"}
{"nick":"songgao","message":"yeah end was replaced by either _end or finish","date":"2015-01-22T16:42:01.531Z","type":"message"}
{"nick":"avidal","message":"Hmm. Can library code clear (or remove something from) the require cache?","date":"2015-01-22T16:50:40.862Z","type":"message"}
{"nick":"avidal","message":"I'm working on a small tcp proxy with plugin support and I'd like to be able to reload plugins without restarting the entire proxy","date":"2015-01-22T16:51:16.177Z","type":"message"}
{"nick":"avidal","message":"Figure I can run my proxy with luvit and load plugins via `require`, but i need to be able to remove a module from the require cache after i've told it to teardown","date":"2015-01-22T16:51:59.533Z","type":"message"}
{"nick":"avidal","message":"but it (seems) that require gives you just the generator function and everything else is hidden from scope","date":"2015-01-22T16:53:30.380Z","type":"message"}
{"nick":"rphillips","message":"avidal: a PR would be great... sounds like a useful feature","date":"2015-01-22T16:58:02.652Z","type":"message"}
{"nick":"avidal","message":"also, i must be missing something because in the luvit repl require(module) doesn't actually return anything i can locally bind; best I can do is, for instance: `require('http').createServer`","date":"2015-01-22T16:59:34.472Z","type":"message"}
{"nick":"avidal","message":"because: `local http = require('http'); http == nil`","date":"2015-01-22T17:00:08.452Z","type":"message"}
{"nick":"avidal","message":"hmm, but the example works","date":"2015-01-22T17:01:15.260Z","type":"message"}
{"nick":"avidal","message":"oh","date":"2015-01-22T17:01:58.159Z","type":"message"}
{"nick":"avidal","message":"can't use locals at the top level of the repl?","date":"2015-01-22T17:02:02.754Z","type":"message"}
{"nick":"rphillips","message":"right","date":"2015-01-22T17:02:24.557Z","type":"message"}
{"nick":"avidal","message":"ok","date":"2015-01-22T17:03:21.320Z","type":"message"}
{"nick":"avidal","message":"so maybe i can rewrite the require module in luvit to expose a bit more of the innards","date":"2015-01-22T17:03:38.976Z","type":"message"}
{"nick":"avidal","message":"not quite sure how yet, but i'll think about it","date":"2015-01-22T17:10:15.140Z","type":"message"}
{"nick":"rphillips","message":"i'm not sure if it needs a rewrite... there is a global table with the cache in it","date":"2015-01-22T17:12:49.149Z","type":"message"}
{"nick":"rphillips","message":"it needs some accessor functions to wipe the cache, or wipe a particular entry","date":"2015-01-22T17:13:20.079Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/luvit/luvit/blob/luvi-up/app/modules/require.lua#L44","date":"2015-01-22T17:14:32.088Z","type":"message"}
{"nick":"avidal","message":"yeah i'm looking at it","date":"2015-01-22T17:16:47.067Z","type":"message"}
{"nick":"avidal","message":"i guess i was thinking about exposing the cache table directly, but i suppose there's no good reason","date":"2015-01-22T17:17:02.871Z","type":"message"}
{"nick":"avidal","message":"so the setmetatable makes it so calling the module itself as a function calls requireSystem which returns the generator function, which returns the inner function","date":"2015-01-22T17:18:58.097Z","type":"message"}
{"nick":"avidal","message":"loving it","date":"2015-01-22T17:19:07.533Z","type":"message"}
{"nick":"avidal","message":"i'll poke around, need to more closely understand it","date":"2015-01-22T17:19:58.092Z","type":"message"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2015-01-22T17:21:56.570Z","type":"quit"}
{"nick":"a_le","date":"2015-01-22T17:22:34.854Z","type":"join"}
{"nick":"a_le","reason":"Read error: Connection reset by peer","date":"2015-01-22T17:22:40.428Z","type":"quit"}
{"nick":"rphillips","message":"sweet :)","date":"2015-01-22T17:26:35.931Z","type":"message"}
{"nick":"a_le","date":"2015-01-22T17:27:41.776Z","type":"join"}
{"nick":"avidal","message":"Having a hard time registering just how luvit main.lua upgrades the require function. I mean, I can see that it happens locally since it aliases `require` locally using the result of luvit-require, but I don't see how that causes the rest of luvit to use the same module loader.","date":"2015-01-22T17:29:17.349Z","type":"message"}
{"nick":"avidal","message":"ohhhhhh","date":"2015-01-22T17:29:42.323Z","type":"message"}
{"nick":"avidal","message":"the lua formatter in require.lua","date":"2015-01-22T17:30:02.963Z","type":"message"}
{"nick":"a_le","reason":"Read error: Connection reset by peer","date":"2015-01-22T17:30:19.913Z","type":"quit"}
{"nick":"avidal","message":"injects the require function into the module before returning it","date":"2015-01-22T17:30:28.072Z","type":"message"}
{"nick":"a_le","date":"2015-01-22T17:30:42.353Z","type":"join"}
{"nick":"avidal","message":"er, injects the require function before calling the module function","date":"2015-01-22T17:31:28.095Z","type":"message"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2015-01-22T17:32:53.411Z","type":"quit"}
{"nick":"avidal","message":"well, injects a new instance of the require system (by calling the generator again)","date":"2015-01-22T17:33:28.107Z","type":"message"}
{"nick":"avidal","message":"well, a new generator function scoped to the path of the module itself","date":"2015-01-22T17:33:58.065Z","type":"message"}
{"nick":"a_le","date":"2015-01-22T17:33:58.409Z","type":"join"}
{"nick":"rje","message":"rphillips: service code works","date":"2015-01-22T17:41:42.636Z","type":"message"}
{"nick":"rphillips","message":"sweet!","date":"2015-01-22T17:41:56.651Z","type":"message"}
{"nick":"rphillips","message":"PR ready? or still WIP?","date":"2015-01-22T17:42:04.841Z","type":"message"}
{"nick":"rje","message":"ready","date":"2015-01-22T17:42:20.836Z","type":"message"}
{"nick":"rje","message":"i'm going to ask hounsou to read it too","date":"2015-01-22T17:42:37.555Z","type":"message"}
{"nick":"rphillips","message":"nice","date":"2015-01-22T17:43:12.764Z","type":"message"}
{"nick":"rphillips","message":"rje: the license header should be at the top of the files","date":"2015-01-22T17:45:07.275Z","type":"message"}
{"nick":"rje","message":"rphillips: will do","date":"2015-01-22T17:47:43.977Z","type":"message"}
{"nick":"creationix","message":"avidal: one idea is to use _G.require directly (lua’s native require)","date":"2015-01-22T17:53:20.966Z","type":"message"}
{"nick":"creationix","message":"it exposes it’s require cache","date":"2015-01-22T17:53:27.419Z","type":"message"}
{"nick":"creationix","message":"but then you have to use lua path semantics for require which I find very frustrating","date":"2015-01-22T17:53:41.777Z","type":"message"}
{"nick":"creationix","message":"luvit’s custom require adds the very useful idea of relative requires (relative to the calling file) which is why it needs a custom version for each module","date":"2015-01-22T17:54:25.478Z","type":"message"}
{"nick":"creationix","message":"so in it’s cache, the paths will be absolute, which might be tricky for you","date":"2015-01-22T17:55:01.945Z","type":"message"}
{"nick":"creationix","message":"rphillips: I’m at the doctor with my toddler at the moment (ear infection), but when I get back to my desk, I plan on working on http(s) client.  Do we have tcp and tls clients already? (“net” and “tls” modules)","date":"2015-01-22T17:56:58.142Z","type":"message"}
{"nick":"a_le","reason":"Read error: Connection reset by peer","date":"2015-01-22T17:57:10.479Z","type":"quit"}
{"nick":"creationix","message":"I think I saw net.createConnection when I was working on http server","date":"2015-01-22T17:57:16.883Z","type":"message"}
{"nick":"a_le","date":"2015-01-22T17:57:30.258Z","type":"join"}
{"nick":"rphillips","message":"creationix: we do","date":"2015-01-22T17:57:31.070Z","type":"message"}
{"nick":"rphillips","message":"tls.connect exists","date":"2015-01-22T17:58:06.483Z","type":"message"}
{"nick":"a_le","reason":"Read error: Connection reset by peer","date":"2015-01-22T17:58:20.986Z","type":"quit"}
{"nick":"rphillips","message":"btw, I made the default suite TLS_V1","date":"2015-01-22T17:58:31.379Z","type":"message"}
{"nick":"creationix","message":"cool","date":"2015-01-22T17:58:49.473Z","type":"message"}
{"nick":"a_le","date":"2015-01-22T17:59:02.076Z","type":"join"}
{"nick":"avidal","message":"creationix: I'm thinking about maybe having a require.unload that takes a module path, resolves it, then drops it from the cache. Do you know off-hand if the cache is shared? It seems to be so. The only thing unique per module seems to be the closure around the module.path to locate the module being required","date":"2015-01-22T17:59:34.601Z","type":"message"}
{"nick":"avidal","message":"or maybe require.resolve(path) and then callers can explicitly get access to require.cache, similar to node in that regard","date":"2015-01-22T18:00:15.699Z","type":"message"}
{"nick":"avidal","message":"not sure if having an `unload` function as part of the stdlib is the right thing to do","date":"2015-01-22T18:00:32.456Z","type":"message"}
{"nick":"avidal","message":"but i also don't really want to fork luvit just because the require system doesn't expose what i would need to manipulate the cache","date":"2015-01-22T18:01:05.868Z","type":"message"}
{"nick":"rphillips","message":"rje: went through a first pass","date":"2015-01-22T18:07:19.055Z","type":"message"}
{"nick":"rje","message":"rphillips: almost done with the fixes","date":"2015-01-22T18:09:21.943Z","type":"message"}
{"nick":"rphillips","message":"looks awesome","date":"2015-01-22T18:09:35.093Z","type":"message"}
{"nick":"rje","message":"https://github.com/luvit/luv/pull/107","date":"2015-01-22T18:14:07.521Z","type":"message"}
{"nick":"rje","message":"rfr ^","date":"2015-01-22T18:14:15.506Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-22T18:24:52.388Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#269 (winsvc - 9db03c7 : Rob Emanuele): The build passed.","date":"2015-01-22T18:24:52.539Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/3861ccc589a7...9db03c743d52","date":"2015-01-22T18:24:52.539Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/47947751","date":"2015-01-22T18:24:52.539Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-22T18:24:52.539Z","type":"part"}
{"nick":"travis-ci","date":"2015-01-22T18:48:32.867Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1472 (luvi-up - b9dad57 : Ryan Phillips): The build passed.","date":"2015-01-22T18:48:33.014Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/a5c9c5e6093f...b9dad57aca1f","date":"2015-01-22T18:48:33.014Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/47949239","date":"2015-01-22T18:48:33.014Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-22T18:48:33.015Z","type":"part"}
{"nick":"rje","message":"if anyone else with a bend toward windows wants to give thoughts on the windows service api exposed in luvi please do, https://github.com/luvit/luvi/pull/43","date":"2015-01-22T18:49:06.384Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-22T18:51:22.014Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luv#222 (expose_loop_state - 8f0e07d : Rob Emanuele): The build passed.","date":"2015-01-22T18:51:22.161Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luv/commit/8f0e07d10788","date":"2015-01-22T18:51:22.161Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luv/builds/47949260","date":"2015-01-22T18:51:22.161Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-22T18:51:22.161Z","type":"part"}
{"nick":"avidal","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-01-22T19:09:40.404Z","type":"quit"}
{"nick":"avidal","date":"2015-01-22T19:10:02.436Z","type":"join"}
{"nick":"travis-ci","date":"2015-01-22T19:11:11.656Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luv#224 (master - 1ad9f43 : Rob Emanuele): The build passed.","date":"2015-01-22T19:11:11.803Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luv/compare/03521fc08e10...1ad9f43bd7a4","date":"2015-01-22T19:11:11.803Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luv/builds/47953458","date":"2015-01-22T19:11:11.803Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-22T19:11:11.803Z","type":"part"}
{"nick":"avidal","message":"Ok, I think I'm getting the hang of this. Looks like I need to make a new step in the process that resolves a callerPath, modulePath into a 'module key', which is used in the cache. I'll have to refactor some of the functions to make room for the resolver, since there's no discrete resolution step currently, it's just a side-effect of attempting to find a module","date":"2015-01-22T19:16:12.140Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-22T19:17:56.927Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#273 (winsvc - db29b12 : Rob Emanuele): The build passed.","date":"2015-01-22T19:17:57.074Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/d538a5d73ff4...db29b1246d32","date":"2015-01-22T19:17:57.074Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/47953717","date":"2015-01-22T19:17:57.075Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-22T19:17:57.075Z","type":"part"}
{"nick":"rphillips","message":"avidal: that sounds reasonable","date":"2015-01-22T19:19:37.111Z","type":"message"}
{"nick":"avidal","message":"Yeah, I think so too.","date":"2015-01-22T19:19:45.489Z","type":"message"}
{"nick":"avidal","message":"Part of the problem is that while `finder` resolves the prefix and formatter, it's not actually the entire story since `loader` might change the path (to account for init.lua, or adding .lua)","date":"2015-01-22T19:25:32.056Z","type":"message"}
{"nick":"avidal","message":"(don't mind me, i'm just brain dumping)","date":"2015-01-22T19:28:15.939Z","type":"message"}
{"nick":"creationix","message":"avidal: yes, a standalone resolver would be useful indeed.  I've loved that node has that","date":"2015-01-22T19:43:23.125Z","type":"message"}
{"nick":"avidal","message":"yeah","date":"2015-01-22T19:45:35.787Z","type":"message"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2015-01-22T19:50:37.332Z","type":"quit"}
{"nick":"a_le","date":"2015-01-22T19:52:31.380Z","type":"join"}
{"nick":"avidal","message":"creationix rphillips: is lib/luvit no longer used in the luvi-up branch?","date":"2015-01-22T20:06:42.641Z","type":"message"}
{"nick":"avidal","message":"just want to make sure there's nothing in there that i need to reference","date":"2015-01-22T20:06:57.747Z","type":"message"}
{"nick":"creationix","message":"Correct, it's just there for easy access","date":"2015-01-22T20:07:00.431Z","type":"message"}
{"nick":"avidal","message":"thought so","date":"2015-01-22T20:07:04.455Z","type":"message"}
{"nick":"creationix","message":"currently it's all dead code","date":"2015-01-22T20:07:05.889Z","type":"message"}
{"nick":"avidal","message":"so that means the luvi-up branch no longer supports npm installs then, correct?","date":"2015-01-22T20:07:27.435Z","type":"message"}
{"nick":"avidal","message":"since the node_modules stuff was in lib/luvit/module.lua","date":"2015-01-22T20:07:42.686Z","type":"message"}
{"nick":"creationix","message":"it can, but not the same way","date":"2015-01-22T20:07:49.052Z","type":"message"}
{"nick":"a_le","reason":"Read error: Connection reset by peer","date":"2015-01-22T20:07:53.128Z","type":"quit"}
{"nick":"creationix","message":"when configuring the require generator, you can change \"modules\" to \"node_modules\"","date":"2015-01-22T20:08:02.122Z","type":"message"}
{"nick":"avidal","message":"yeah, options.modulesPath","date":"2015-01-22T20:08:13.811Z","type":"message"}
{"nick":"a_le","date":"2015-01-22T20:08:22.061Z","type":"join"}
{"nick":"avidal","message":"er, modulesName","date":"2015-01-22T20:08:27.199Z","type":"message"}
{"nick":"creationix","message":"https://github.com/luvit/luvit/blob/b9dad57aca1f3eca2662a33e8af8002c4900b5c5/tests/test-require.lua#L133-L143","date":"2015-01-22T20:08:31.640Z","type":"message"}
{"nick":"creationix","message":"I'm open to the idea of allowing a list of modules names if it's needed.  I just didn't want to add it till there was a concrete use case","date":"2015-01-22T20:09:00.873Z","type":"message"}
{"nick":"avidal","message":"So if someone wanted to build an app with luvit that uses, for instance, node_modules for the bundled modules, they would need to use a custom luvit \"build\" that merely updates main.lua to change the modulesName when bootstrapping the module loader","date":"2015-01-22T20:10:45.700Z","type":"message"}
{"nick":"creationix","message":"avidal: yeah, that should work","date":"2015-01-22T20:13:40.829Z","type":"message"}
{"nick":"creationix","message":"also did you see how I packaged my \"lit\" app","date":"2015-01-22T20:13:46.683Z","type":"message"}
{"nick":"creationix","message":"it doesn't inherit from luvit at all","date":"2015-01-22T20:13:52.247Z","type":"message"}
{"nick":"avidal","message":"did not","date":"2015-01-22T20:13:53.837Z","type":"message"}
{"nick":"creationix","message":"I just cherry picked the modules I wanted","date":"2015-01-22T20:14:02.527Z","type":"message"}
{"nick":"avidal","message":"checking now","date":"2015-01-22T20:14:03.899Z","type":"message"}
{"nick":"creationix","message":"I didn't want any of the node.js style APIs and wanted to use coroutines instead of callbacks.","date":"2015-01-22T20:14:35.487Z","type":"message"}
{"nick":"avidal","message":"alias.sh and update.sh use luvit (or at least call it); or are those outdated?","date":"2015-01-22T20:17:46.784Z","type":"message"}
{"nick":"rphillips","message":"creationix: lit is working well","date":"2015-01-22T20:19:41.690Z","type":"message"}
{"nick":"rphillips","message":"the collaboration piece with other people making tweaks is the tricky part","date":"2015-01-22T20:19:58.926Z","type":"message"}
{"nick":"creationix","message":"did you have any ideas on how to do this?","date":"2015-01-22T20:20:17.421Z","type":"message"}
{"nick":"rphillips","message":"not really... but it's a sticking point","date":"2015-01-22T20:20:42.157Z","type":"message"}
{"nick":"creationix","message":"would manually adding collaborators like npm does be enough?","date":"2015-01-22T20:20:58.343Z","type":"message"}
{"nick":"creationix","message":"I think I could store this in the tag itself so it moves with the data and is digitally signed","date":"2015-01-22T20:21:29.803Z","type":"message"}
{"nick":"creationix","message":"The first release would need to be the owner, but they could add other authorized people via comments in the tag message","date":"2015-01-22T20:22:13.632Z","type":"message"}
{"nick":"creationix","message":"and the client would automatically keep these and repeat them in each release","date":"2015-01-22T20:22:28.973Z","type":"message"}
{"nick":"creationix","message":"still, it would be nice to have group owned top-levels like \"luvit/require\"","date":"2015-01-22T20:23:44.670Z","type":"message"}
{"nick":"creationix","message":"I could do this manually since I have access to the server, but I don't like using special priviledges","date":"2015-01-22T20:24:11.165Z","type":"message"}
{"nick":"avidal","message":"Hmm, lit auth doesn't work for me, I'm guessing the openssl bindings are missing","date":"2015-01-22T20:25:39.060Z","type":"message"}
{"nick":"creationix","message":"avidal: it requires the large or static version of luvi","date":"2015-01-22T20:26:02.836Z","type":"message"}
{"nick":"creationix","message":"because of heavy openssl usage","date":"2015-01-22T20:26:09.155Z","type":"message"}
{"nick":"avidal","message":"yeah i'm using the large darwin build","date":"2015-01-22T20:26:33.711Z","type":"message"}
{"nick":"creationix","message":"that should work.  It does make some assumptions though","date":"2015-01-22T20:26:49.167Z","type":"message"}
{"nick":"avidal","message":"well, the regular `luvi` binary on luvi-binaries/Darwin_x86_64","date":"2015-01-22T20:26:49.838Z","type":"message"}
{"nick":"avidal","message":"assuming that's the large build","date":"2015-01-22T20:26:53.892Z","type":"message"}
{"nick":"creationix","message":"static, but yeah","date":"2015-01-22T20:27:01.895Z","type":"message"}
{"nick":"avidal","message":"since it's not the -tiny, and there is no -static","date":"2015-01-22T20:27:02.489Z","type":"message"}
{"nick":"creationix","message":"openssl on darwin is crap, too old to dynamic link","date":"2015-01-22T20:27:20.320Z","type":"message"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2015-01-22T20:27:32.290Z","type":"quit"}
{"nick":"creationix","message":"avidal: lit assumes that $HOME/.ssh/id_rsa had github access under your github username","date":"2015-01-22T20:28:29.603Z","type":"message"}
{"nick":"avidal","message":"Yeah, it does","date":"2015-01-22T20:28:51.766Z","type":"message"}
{"nick":"avidal","message":"(that is, id_rsa.pub is what I've pushed to github)","date":"2015-01-22T20:29:01.314Z","type":"message"}
{"nick":"creationix","message":"it verifies this by downloading your public keys from github and generating fingerprints for each comparing to the fingerprint of the local private key","date":"2015-01-22T20:29:06.049Z","type":"message"}
{"nick":"creationix","message":"what's the error?","date":"2015-01-22T20:29:12.738Z","type":"message"}
{"nick":"creationix","message":"I'm pretty sure rphillips published from darwin.  I work on linux most the time","date":"2015-01-22T20:29:32.907Z","type":"message"}
{"nick":"avidal","message":"ssh-rsa.lua:99: attempt to index local 'key' (a nil value)","date":"2015-01-22T20:30:16.657Z","type":"message"}
{"nick":"avidal","message":"i pretty printed openssl.pkey and i get a clean report from there, i'll debug further","date":"2015-01-22T20:30:35.213Z","type":"message"}
{"nick":"a_le","date":"2015-01-22T20:30:52.297Z","type":"join"}
{"nick":"avidal","message":"(and key comes from a call to pkey.read)","date":"2015-01-22T20:31:08.832Z","type":"message"}
{"nick":"creationix","message":"interesting, openssl can't read your private key","date":"2015-01-22T20:31:36.380Z","type":"message"}
{"nick":"creationix","message":"if you run `head ~/.ssh/id_rsa -n1`, it outputs \"-----BEGIN RSA PRIVATE KEY-----\" right?","date":"2015-01-22T20:32:12.134Z","type":"message"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2015-01-22T20:32:34.071Z","type":"quit"}
{"nick":"avidal","message":"yeah, and doing `p(\"Loading private key with data\", data)` at the top of exports.loadPrivate dumps my private key to stdout","date":"2015-01-22T20:32:46.810Z","type":"message"}
{"nick":"a_le","date":"2015-01-22T20:33:11.096Z","type":"join"}
{"nick":"creationix","message":"try wrapping pkey.read with an assert maybe?","date":"2015-01-22T20:33:11.650Z","type":"message"}
{"nick":"creationix","message":"nil as first arg will often have reason as second arg, assert will throw that","date":"2015-01-22T20:33:28.390Z","type":"message"}
{"nick":"avidal","message":"just: assert(pkey.read(data, true)) ?","date":"2015-01-22T20:34:16.488Z","type":"message"}
{"nick":"avidal","message":"nothing useful, just a traceback showing the loadPrivate call, walking up through auth:42 and then into the module loader","date":"2015-01-22T20:35:27.177Z","type":"message"}
{"nick":"avidal","message":"but no descriptive message","date":"2015-01-22T20:35:33.136Z","type":"message"}
{"nick":"a_le","reason":"Ping timeout: 265 seconds","date":"2015-01-22T20:37:38.106Z","type":"quit"}
{"nick":"creationix","message":"yep, I see it just returns nil, hmm https://github.com/zhaozg/lua-openssl/blob/master/src/pkey.c#L89-L131","date":"2015-01-22T20:37:42.433Z","type":"message"}
{"nick":"creationix","message":"I guess he expects you to call some generic function to fetch the error","date":"2015-01-22T20:38:14.498Z","type":"message"}
{"nick":"creationix","message":"personally I like to to that for the caller in my bindings and return it after nil","date":"2015-01-22T20:38:28.599Z","type":"message"}
{"nick":"avidal","message":"I guess it's lua-openssl pkey.read that's actually prompting me for my passphrase since i don't see that in the lit sources","date":"2015-01-22T20:39:13.158Z","type":"message"}
{"nick":"creationix","message":"yep","date":"2015-01-22T20:40:44.514Z","type":"message"}
{"nick":"creationix","message":"ok, it seems this is the function to call to get the error message https://github.com/zhaozg/lua-openssl/blob/10489be021db287c9127841ab06f066d71d0df5b/src/openssl.c#L112-L133","date":"2015-01-22T20:40:58.094Z","type":"message"}
{"nick":"creationix","message":"looks like it's exposed to lua at require('openssl').error()","date":"2015-01-22T20:41:21.133Z","type":"message"}
{"nick":"avidal","message":"will check","date":"2015-01-22T20:41:28.202Z","type":"message"}
{"nick":"creationix","message":"https://github.com/zhaozg/lua-openssl/blob/10489be021db287c9127841ab06f066d71d0df5b/src/openssl.c#L253","date":"2015-01-22T20:41:36.163Z","type":"message"}
{"nick":"avidal","message":"218529960       'error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag'","date":"2015-01-22T20:42:30.069Z","type":"message"}
{"nick":"avidal","message":"barf","date":"2015-01-22T20:42:31.427Z","type":"message"}
{"nick":"creationix","message":"ouch","date":"2015-01-22T20:43:28.474Z","type":"message"}
{"nick":"avidal","message":"yeah..","date":"2015-01-22T20:43:33.971Z","type":"message"}
{"nick":"avidal","message":"but the key works fine, i use it all the time","date":"2015-01-22T20:43:38.889Z","type":"message"}
{"nick":"creationix","message":"how much do you know about rsa, asn.1 and friends?","date":"2015-01-22T20:43:43.095Z","type":"message"}
{"nick":"creationix","message":"you can decode your private key manually using https://www.openssl.org/docs/apps/asn1parse.html","date":"2015-01-22T20:43:51.612Z","type":"message"}
{"nick":"avidal","message":"so i'm wondering if something in fs.readFile","date":"2015-01-22T20:43:55.878Z","type":"message"}
{"nick":"creationix","message":"doubt it, it's just ASCII","date":"2015-01-22T20:44:08.654Z","type":"message"}
{"nick":"creationix","message":"you printed the text, it was all there right?","date":"2015-01-22T20:44:17.943Z","type":"message"}
{"nick":"avidal","message":"Yeah, it all looks fine","date":"2015-01-22T20:44:55.169Z","type":"message"}
{"nick":"creationix","message":"PEM format is base64 encoded DER encoded asn.1 of your key struct","date":"2015-01-22T20:45:14.511Z","type":"message"}
{"nick":"creationix","message":"it's strange that openssl can't read your private key","date":"2015-01-22T20:45:33.267Z","type":"message"}
{"nick":"creationix","message":"though it was created with openssh, not openssl I assume","date":"2015-01-22T20:45:50.966Z","type":"message"}
{"nick":"creationix","message":"`ssh-keygen`?","date":"2015-01-22T20:45:56.592Z","type":"message"}
{"nick":"avidal","message":"yeah","date":"2015-01-22T20:45:59.143Z","type":"message"}
{"nick":"creationix","message":"you can parse it with openssl asn1parse -in ~/.ssh/id_rsa, but don't paste me the result.","date":"2015-01-22T20:46:56.590Z","type":"message"}
{"nick":"avidal","message":"don't plan on it :)","date":"2015-01-22T20:47:20.989Z","type":"message"}
{"nick":"creationix","message":"here is mine with the sensitive numbers redacted https://gist.github.com/creationix/aa85a1755e801639b524","date":"2015-01-22T20:49:56.700Z","type":"message"}
{"nick":"avidal","message":"Yeah I get another error. I'll get to the bottom of this","date":"2015-01-22T20:50:39.551Z","type":"message"}
{"nick":"creationix","message":"good luck.  I have no idea why openssl can't read your key","date":"2015-01-22T20:51:12.018Z","type":"message"}
{"nick":"avidal","message":"yeah..","date":"2015-01-22T20:51:15.138Z","type":"message"}
{"nick":"avidal","message":"especially because ssh works just fine","date":"2015-01-22T20:51:21.180Z","type":"message"}
{"nick":"avidal","message":"although openssh !== openssl","date":"2015-01-22T20:51:28.673Z","type":"message"}
{"nick":"creationix","message":"right, Their private key formats are suppossedly the same","date":"2015-01-22T20:52:05.623Z","type":"message"}
{"nick":"creationix","message":"the public key formats were very different which is why I had to implement reading and writing in lua","date":"2015-01-22T20:52:21.441Z","type":"message"}
{"nick":"avidal","message":"31237:error:0D07207B:asn1 encoding routines:ASN1_get_object:header too long","date":"2015-01-22T20:52:38.771Z","type":"message"}
{"nick":"avidal","message":"gah","date":"2015-01-22T20:52:39.897Z","type":"message"}
{"nick":"creationix","message":"as a workaround, you can create a new key, authorize it on github, and manually set ~/.litconfig to point to it","date":"2015-01-22T20:53:03.922Z","type":"message"}
{"nick":"creationix","message":"all I can think of is you created the key a long time ago when openssh generated incompatible keys","date":"2015-01-22T20:54:43.942Z","type":"message"}
{"nick":"avidal","message":"probably","date":"2015-01-22T20:54:52.874Z","type":"message"}
{"nick":"avidal","message":"well","date":"2015-01-22T20:54:55.827Z","type":"message"}
{"nick":"avidal","message":"i've only had this laptop for a hair over a year now","date":"2015-01-22T20:55:02.347Z","type":"message"}
{"nick":"avidal","message":"yeah, old openssh it seems","date":"2015-01-22T20:56:22.723Z","type":"message"}
{"nick":"avidal","message":"generates incompatible keys","date":"2015-01-22T20:56:27.544Z","type":"message"}
{"nick":"avidal","message":"installing openssh and openssl via homebrew","date":"2015-01-22T21:00:38.787Z","type":"message"}
{"nick":"creationix","message":"fwiw, I'm doing something really strange using ssh keys to do rsa signatures with openssl","date":"2015-01-22T21:01:31.417Z","type":"message"}
{"nick":"creationix","message":"as far as I know, this is not very well tested waters","date":"2015-01-22T21:01:42.703Z","type":"message"}
{"nick":"creationix","message":"I just figured people were more likely to have ssh keys on their machine than pgp keys","date":"2015-01-22T21:02:21.226Z","type":"message"}
{"nick":"creationix","message":"also I can verify any keys using public github APIs","date":"2015-01-22T21:02:27.730Z","type":"message"}
{"nick":"avidal","message":"i happen to have both","date":"2015-01-22T21:02:29.584Z","type":"message"}
{"nick":"creationix","message":"I plan to support gpg as well, just haven't had time to code it yet.  Finishing luvit 2.0 is higher priority","date":"2015-01-22T21:02:52.541Z","type":"message"}
{"nick":"avidal","message":"guess i still need to regenerate my keypair though","date":"2015-01-22T21:03:17.646Z","type":"message"}
{"nick":"avidal","message":"hmm, and i generated my gpg key for keybase.io based on my ssh key","date":"2015-01-22T21:06:13.200Z","type":"message"}
{"nick":"creationix","message":"avidal: how old is your darwin version btw?  I haven't had any issues using the stock openssh on my laptops.  But I've only tested on pretty new machines running the latest version","date":"2015-01-22T21:06:13.371Z","type":"message"}
{"nick":"avidal","message":"so i wonder if i can just upgrade my existing key","date":"2015-01-22T21:06:21.753Z","type":"message"}
{"nick":"creationix","message":"you should be able to reformat it.  Just back up the original","date":"2015-01-22T21:06:48.742Z","type":"message"}
{"nick":"creationix","message":"ssh-keygen accepts various inputs","date":"2015-01-22T21:06:58.441Z","type":"message"}
{"nick":"avidal","message":"i suppose i can just push a new public key to keybase","date":"2015-01-22T21:09:19.139Z","type":"message"}
{"nick":"creationix","message":"I believe `ssh-keygen -p` will allow you to change the passphrase (thus reformatting the key)","date":"2015-01-22T21:12:41.738Z","type":"message"}
{"nick":"avidal","message":"oh. my. god.","date":"2015-01-22T21:14:23.001Z","type":"message"}
{"nick":"avidal","message":"(it was the wrong password)","date":"2015-01-22T21:14:28.399Z","type":"message"}
{"nick":"avidal","message":"the error when running openssl asn1parse led me to believe openssl couldn't read my key","date":"2015-01-22T21:15:19.239Z","type":"message"}
{"nick":"avidal","message":"instead of telling me that my passphrase is wrong","date":"2015-01-22T21:15:26.806Z","type":"message"}
{"nick":"avidal","message":"put in the correct passphrase and lit auth works just fine","date":"2015-01-22T21:15:42.964Z","type":"message"}
{"nick":"avidal","message":"So lit doesn't use luvit at all, just a handful of modules cherry-picked from luvit","date":"2015-01-22T21:17:58.740Z","type":"message"}
{"nick":"avidal","message":"But it looks like your intention is to move a lot of those modules to possibly be external from luvit itself anyway (considering the \"deps\" config for lit and the fact that the modules are in modules/creationix)","date":"2015-01-22T21:18:40.162Z","type":"message"}
{"nick":"avidal","message":"But then what's going to be left of luvit? :)","date":"2015-01-22T21:19:04.528Z","type":"message"}
{"nick":"creationix","message":"luvit is like a distribution of luvi","date":"2015-01-22T21:19:20.617Z","type":"message"}
{"nick":"nachiket","date":"2015-01-22T21:19:20.764Z","type":"join"}
{"nick":"creationix","message":"with a node.js flavor","date":"2015-01-22T21:19:23.362Z","type":"message"}
{"nick":"creationix","message":"the long-term goal is to get all the luvit modules into the lit repository  where they can be consumed independently","date":"2015-01-22T21:19:44.892Z","type":"message"}
{"nick":"avidal","message":"Right on","date":"2015-01-22T21:19:50.515Z","type":"message"}
{"nick":"creationix","message":"I have them in the lit tree for bootstrap reasons","date":"2015-01-22T21:19:53.454Z","type":"message"}
{"nick":"creationix","message":"but I often run `lit install` in the lit/app folder and then git diff to see if anything is out of date","date":"2015-01-22T21:20:09.694Z","type":"message"}
{"nick":"avidal","message":"And luvit itself will pull in all of those modules (and then possibly have some bundled that aren't really consumable by themselves) and provide a reasonable main.lua that can execute your script?","date":"2015-01-22T21:20:21.123Z","type":"message"}
{"nick":"creationix","message":"it will appear as reverse diffs when lit reverts my unpublished changes","date":"2015-01-22T21:20:21.918Z","type":"message"}
{"nick":"creationix","message":"yep, luvit will continue to be what it was","date":"2015-01-22T21:20:47.434Z","type":"message"}
{"nick":"avidal","message":"But all of its pieces will be (mostly) decomposed","date":"2015-01-22T21:20:59.658Z","type":"message"}
{"nick":"creationix","message":"just packaged a little differently internally.  The main goal with luvit 2.0 is to make it trivial to customize it","date":"2015-01-22T21:21:07.565Z","type":"message"}
{"nick":"avidal","message":"I see","date":"2015-01-22T21:21:15.591Z","type":"message"}
{"nick":"creationix","message":"some people prefer the batteries included style distribution, others want a pile of parts they can play with","date":"2015-01-22T21:21:41.856Z","type":"message"}
{"nick":"creationix","message":"before I made lit, luvi already had the ability to layer apps","date":"2015-01-22T21:22:03.513Z","type":"message"}
{"nick":"avidal","message":"right on","date":"2015-01-22T21:22:11.094Z","type":"message"}
{"nick":"creationix","message":"you could make your app inherit from luvit and selectivly replace files (like main.lua)","date":"2015-01-22T21:22:18.078Z","type":"message"}
{"nick":"creationix","message":"but the lit style is even more granular in that you only use what you explicitly include","date":"2015-01-22T21:22:47.417Z","type":"message"}
{"nick":"avidal","message":"yeah i think i'm tracking this now","date":"2015-01-22T21:24:27.012Z","type":"message"}
{"nick":"avidal","message":"(mostly)","date":"2015-01-22T21:25:04.202Z","type":"message"}
{"nick":"creationix","message":"I think the best workflow moving forward will be to distribute lit binaries (which include the luvi framework internally)","date":"2015-01-22T21:25:07.950Z","type":"message"}
{"nick":"creationix","message":"and then people can build their own custom executables with just a package.lua + whatever modules aren't in a lit repo","date":"2015-01-22T21:25:39.778Z","type":"message"}
{"nick":"avidal","message":"Making lit kind of like lein","date":"2015-01-22T21:25:43.480Z","type":"message"}
{"nick":"creationix","message":"this lein? https://github.com/technomancy/leiningen/","date":"2015-01-22T21:26:51.046Z","type":"message"}
{"nick":"creationix","message":"never used it, but looks neat","date":"2015-01-22T21:26:56.687Z","type":"message"}
{"nick":"avidal","message":"Yeah, it's kind of a bootstrapper for clojure projects. You get a project.clj that defines your dependencies, lein deals with bootstrapping clojure, updating your deps, interfacing with a local maven repository, pulling from clojars, and so on","date":"2015-01-22T21:27:54.478Z","type":"message"}
{"nick":"creationix","message":"I've also considered rebranding a little.  Make lit be the new luvit.  and rename luvit to node.lua or something","date":"2015-01-22T21:28:06.786Z","type":"message"}
{"nick":"creationix","message":"the nice thing about luvi is you don't need a compiler once you have the luvi binary","date":"2015-01-22T21:28:35.822Z","type":"message"}
{"nick":"creationix","message":"(assuming your app doesn't use any native addons)","date":"2015-01-22T21:28:45.415Z","type":"message"}
{"nick":"creationix","message":"but even if it does have native addons, luvi supports embedding .dll/.so files in the zip","date":"2015-01-22T21:28:59.328Z","type":"message"}
{"nick":"creationix","message":"so if I ever found a sane way to publish binaries for C addons, lit could pull those in too","date":"2015-01-22T21:29:34.588Z","type":"message"}
{"nick":"creationix","message":"also lit repos are trivial to host","date":"2015-01-22T21:31:09.582Z","type":"message"}
{"nick":"avidal","message":"So there's still value in having a resolver for luvit-require, except you can eventually import luvit-require in your non-luvit project","date":"2015-01-22T21:31:32.703Z","type":"message"}
{"nick":"creationix","message":"so if you have private modules for internal company use, you can publish them to a local lit server that also acts as a caching proxy to the public lit server","date":"2015-01-22T21:31:33.350Z","type":"message"}
{"nick":"creationix","message":"and by trivial I mean `lit up && lit serve` on some lan machine","date":"2015-01-22T21:31:54.041Z","type":"message"}
{"nick":"avidal","message":"yeah","date":"2015-01-22T21:31:57.170Z","type":"message"}
{"nick":"creationix","message":"right, I use luvit's require in lit","date":"2015-01-22T21:32:23.859Z","type":"message"}
{"nick":"rch","message":"heh \"lit up\"","date":"2015-01-22T21:32:34.134Z","type":"message"}
{"nick":"creationix","message":"and lit is certainly not a luvit project, it's an entirely different async model","date":"2015-01-22T21:32:37.085Z","type":"message"}
{"nick":"avidal","message":"although i guess luvit-require changes the semantics of require significantly enough that it's either luvit compatible or it isn't","date":"2015-01-22T21:32:41.826Z","type":"message"}
{"nick":"creationix","message":"right, luvit require is very different from lua require","date":"2015-01-22T21:33:04.603Z","type":"message"}
{"nick":"avidal","message":"are you concerned that people might create 'lit packages' without having a standard require implementation?","date":"2015-01-22T21:33:17.675Z","type":"message"}
{"nick":"creationix","message":"but that's why the new version doesn't replace lua's require.  It just shadows it with a local variable","date":"2015-01-22T21:33:29.738Z","type":"message"}
{"nick":"avidal","message":"well i guess luvit-require will fall back to luaRequire","date":"2015-01-22T21:33:32.691Z","type":"message"}
{"nick":"avidal","message":"And only if something is located and loaded with luvit-require will it receive luvit-require as it's require implementation","date":"2015-01-22T21:34:01.583Z","type":"message"}
{"nick":"creationix","message":"good point, lit does assume luvit require","date":"2015-01-22T21:34:11.512Z","type":"message"}
{"nick":"creationix","message":"if you do `lit install creationix/git` it will create `modules/creationix/git.lua` to be required with \"creationix/git\"","date":"2015-01-22T21:34:44.478Z","type":"message"}
{"nick":"creationix","message":"and yes, only modules loaded via luvit require can see luvit require","date":"2015-01-22T21:35:17.370Z","type":"message"}
{"nick":"creationix","message":"so luvit *should* be able to load luarocks modules now","date":"2015-01-22T21:35:30.664Z","type":"message"}
{"nick":"avidal","message":"Ah, right right. Because even if you luvit-require(module), and module expects the regular lua-require semantics when *it* requires something, then luvit-require will fallback to lua-require, and then the rest of the modules loaded in the tree will continue to use lua-require","date":"2015-01-22T21:36:49.819Z","type":"message"}
{"nick":"creationix","message":"exactly.  And you can always go direct to _G.require to skip luvit-require alltogether","date":"2015-01-22T21:37:28.084Z","type":"message"}
{"nick":"creationix","message":"perhaps naming it \"require\" was a bad idea","date":"2015-01-22T21:38:10.215Z","type":"message"}
{"nick":"creationix","message":"we just wanted to port node's APIs as closely as possible when creating luvit","date":"2015-01-22T21:38:26.729Z","type":"message"}
{"nick":"avidal","message":"Yeah..","date":"2015-01-22T21:38:57.206Z","type":"message"}
{"nick":"avidal","message":"I get that","date":"2015-01-22T21:39:00.799Z","type":"message"}
{"nick":"creationix","message":"the other option was \"require\" is lua-require and \"load\" is luvit-require","date":"2015-01-22T21:39:03.428Z","type":"message"}
{"nick":"creationix","message":"or maybe not \"load\", but something","date":"2015-01-22T21:39:12.210Z","type":"message"}
{"nick":"creationix","message":"(since load is also a lua builtin)","date":"2015-01-22T21:39:24.367Z","type":"message"}
{"nick":"avidal","message":"yeah","date":"2015-01-22T21:39:28.380Z","type":"message"}
{"nick":"a_le","date":"2015-01-22T21:40:27.101Z","type":"join"}
{"nick":"rje","message":"is there an simple file write example?  i'm trying to do a simple logger file appender https://gist.github.com/rjemanuele/cbf365c8d8f1a742dbb1","date":"2015-01-22T21:44:36.983Z","type":"message"}
{"nick":"a_le","reason":"Ping timeout: 265 seconds","date":"2015-01-22T21:45:18.056Z","type":"quit"}
{"nick":"avidal","message":"And the issues with lua require is just that its very implicit, you can't explicitly say load module relative to here; it's always loaded relative to the current directory first (unless you change package.path)","date":"2015-01-22T21:45:19.969Z","type":"message"}
{"nick":"creationix","message":"rje: why \"w+\"?  Don't you mean \"a\"? https://github.com/luvit/luv/blob/1ad9f43bd7a48f6c252ce87938bacd47d37d39f1/src/fs.c#L124","date":"2015-01-22T21:46:23.163Z","type":"message"}
{"nick":"avidal","message":"and it also doesn't support loading from within the luvi bundle","date":"2015-01-22T21:46:42.704Z","type":"message"}
{"nick":"creationix","message":"avidal: right, it depends too much on global system state","date":"2015-01-22T21:46:44.170Z","type":"message"}
{"nick":"creationix","message":"I prefer my intra-package requires to be system independent","date":"2015-01-22T21:46:59.946Z","type":"message"}
{"nick":"avidal","message":"yep","date":"2015-01-22T21:47:08.688Z","type":"message"}
{"nick":"creationix","message":"well, luvit's require is extensible.  I think I could add on a loader to read from the luvi bundle","date":"2015-01-22T21:48:43.697Z","type":"message"}
{"nick":"creationix","message":"the main reason to rewrite was to get relative requires","date":"2015-01-22T21:48:51.563Z","type":"message"}
{"nick":"creationix","message":"it's impossible with lua's system since path resolve isn't as configurable and doesn't have caller path as one of the inputs","date":"2015-01-22T21:49:17.979Z","type":"message"}
{"nick":"avidal","message":"So the issue arises when you require a regular lua module which requires another module that lives next to it, but the other module's name clashes with a 'builtin'.","date":"2015-01-22T21:50:30.481Z","type":"message"}
{"nick":"avidal","message":"easy example would be a lua module that contains `require('stream')` to mean stream.lua which sits next to the main module file","date":"2015-01-22T21:51:12.355Z","type":"message"}
{"nick":"avidal","message":"yeah that sucks :)","date":"2015-01-22T21:52:04.753Z","type":"message"}
{"nick":"avidal","message":"and yeah it's clearly impossible to support both 'systems', universally","date":"2015-01-22T21:53:15.050Z","type":"message"}
{"nick":"avidal","message":"although maybe luvi/lit modules should require regular lua modules using a specific prefix? and those would immediately fallback to native require?","date":"2015-01-22T21:54:20.150Z","type":"message"}
{"nick":"avidal","message":"i mean the problem (seems) to exist solely at the boundary where modules intended to be consumed by luvit-require also include things from luarocks or regular lua scripts","date":"2015-01-22T21:55:12.740Z","type":"message"}
{"nick":"avidal","message":"Oh, yeah, I guess those modules can just be told to use _G.require","date":"2015-01-22T21:55:23.280Z","type":"message"}
{"nick":"a_le","date":"2015-01-22T21:57:03.315Z","type":"join"}
{"nick":"avidal","message":"and i guess native require also uses dot syntax for paths","date":"2015-01-22T21:59:50.650Z","type":"message"}
{"nick":"avidal","message":"Oh, my mistake. It's never relative and always absolute.","date":"2015-01-22T22:02:18.418Z","type":"message"}
{"nick":"avidal","message":"So how the hell are regular modules distributed (sans luarocks)? How can they possibly know what the absolute path to their own location is?","date":"2015-01-22T22:05:10.040Z","type":"message"}
{"nick":"rphillips","message":"creationix: yes, manually adding collaborators would be a win i think","date":"2015-01-22T22:06:28.742Z","type":"message"}
{"nick":"rphillips","message":"sorry, I had to get to this appointment for my son","date":"2015-01-22T22:06:41.167Z","type":"message"}
{"nick":"creationix","message":"avidal: exactly","date":"2015-01-22T22:07:45.454Z","type":"message"}
{"nick":"avidal","message":"Damn. I knew lua modules were fucked, but I guess I didn't realize how bad","date":"2015-01-22T22:08:02.847Z","type":"message"}
{"nick":"avidal","message":"Solution to loading a module that exists next to the current module file:","date":"2015-01-22T22:08:40.715Z","type":"message"}
{"nick":"avidal","message":"package.path = debug.getinfo(1,\"S\").source:match[[^@?(.*[\\/])[^\\/]-$]] ..\"?.lua;\".. package.path","date":"2015-01-22T22:08:41.566Z","type":"message"}
{"nick":"avidal","message":"require(\"foo.bar\")","date":"2015-01-22T22:08:42.666Z","type":"message"}
{"nick":"avidal","message":"don't get me wrong, I think lua is fantastic, but this is horseshit :)","date":"2015-01-22T22:09:08.672Z","type":"message"}
{"nick":"creationix","message":"now you see why I reimplemented a node-style require resolve","date":"2015-01-22T22:09:45.381Z","type":"message"}
{"nick":"avidal","message":"yeah...","date":"2015-01-22T22:09:51.053Z","type":"message"}
{"nick":"rje","message":"creationix: oops, i did want 'a' but i'm getting an assert at Assertion failed: 0, file c:\\users\\rje\\documents\\rackspace\\luvi\\deps\\luv\\libuv\\src\\win\\handle-inl.h, line 159","date":"2015-01-22T22:10:04.229Z","type":"message"}
{"nick":"creationix","message":"and finally found a way to fallback to normal require for existing lua code","date":"2015-01-22T22:10:12.305Z","type":"message"}
{"nick":"avidal","message":"yeah","date":"2015-01-22T22:10:25.997Z","type":"message"}
{"nick":"avidal","message":"So it just needs to be very very clear to users that if they are going to include normal lua/luarocks packages they should probably just use _G.require in the first place","date":"2015-01-22T22:10:58.442Z","type":"message"}
{"nick":"creationix","message":"probably a good idea","date":"2015-01-22T22:14:18.336Z","type":"message"}
{"nick":"creationix","message":"name conflicts could easily happen","date":"2015-01-22T22:14:27.240Z","type":"message"}
{"nick":"avidal","message":"yeah","date":"2015-01-22T22:14:38.709Z","type":"message"}
{"nick":"creationix","message":"rje: strange","date":"2015-01-22T22:15:06.122Z","type":"message"}
{"nick":"avidal","message":"Maybe luvit-require can support rock: as a prefix and use the luarocks loader, if available","date":"2015-01-22T22:15:27.090Z","type":"message"}
{"nick":"rje","message":"creationix: its got something to do with the write","date":"2015-01-22T22:15:53.050Z","type":"message"}
{"nick":"rphillips","message":"avidal: i like that idea","date":"2015-01-22T22:19:19.995Z","type":"message"}
{"nick":"creationix","message":"rje: hmm, where is your offset for write","date":"2015-01-22T22:20:02.736Z","type":"message"}
{"nick":"avidal","message":"And then maybe it's every man for himself if you want to load lua modules that aren't available via lit or luarocks","date":"2015-01-22T22:20:08.622Z","type":"message"}
{"nick":"avidal","message":"(ie, use _G.require)","date":"2015-01-22T22:20:15.326Z","type":"message"}
{"nick":"creationix","message":"rje: pass -1 for implicit offset.  I just forward the integer through to libuv https://github.com/luvit/luv/blob/master/src/fs.c#L348","date":"2015-01-22T22:20:56.607Z","type":"message"}
{"nick":"creationix","message":"I think that's the proper way to append","date":"2015-01-22T22:21:02.354Z","type":"message"}
{"nick":"avidal","message":"i mean in those cases you'd likely just drop them into your source tree anyway and then you can freely change the require usage","date":"2015-01-22T22:21:18.719Z","type":"message"}
{"nick":"creationix","message":"hmm, I need to add vector support to uv.fs_write like I did for uv.write (vector being a table of strings)","date":"2015-01-22T22:23:22.462Z","type":"message"}
{"nick":"rje","message":"creationix: oh, i see","date":"2015-01-22T22:24:16.479Z","type":"message"}
{"nick":"rje","message":"creationix: thanks","date":"2015-01-22T22:24:27.445Z","type":"message"}
{"nick":"rphillips","message":"rje: https://github.com/rphillips/virgo-logging","date":"2015-01-22T22:31:16.786Z","type":"message"}
{"nick":"rphillips","message":"would be sweet to get your file logger into this","date":"2015-01-22T22:31:36.058Z","type":"message"}
{"nick":"not^v","date":"2015-01-22T22:31:49.058Z","type":"join"}
{"nick":"rje","message":"rphillips: i'm also looking at writing a windows logger","date":"2015-01-22T22:34:54.124Z","type":"message"}
{"nick":"rphillips","message":"sweet","date":"2015-01-22T22:35:12.683Z","type":"message"}
{"nick":"avidal","message":"maybe this endeavor is pointless and lit should adopt luvit-require as the only hard dep, with lit users republishing rocks (and other vanilla lua modules) after making them luvit-require compatible","date":"2015-01-22T22:37:01.926Z","type":"message"}
{"nick":"avidal","message":"because it's a Hard Problem","date":"2015-01-22T22:37:08.706Z","type":"message"}
{"nick":"avidal","message":"so i'll instead just focus on adding require.resolve and require.cache to luvit-require","date":"2015-01-22T22:38:08.507Z","type":"message"}
{"nick":"avidal","message":"because those are attainable :)","date":"2015-01-22T22:38:13.742Z","type":"message"}
{"nick":"creationix","message":"I'm happy with the current situation.  _G.require is available and is the fallback.  That's good enough for me","date":"2015-01-22T22:38:18.299Z","type":"message"}
{"nick":"creationix","message":"yep","date":"2015-01-22T22:38:26.602Z","type":"message"}
{"nick":"avidal","message":"Sounds good","date":"2015-01-22T22:38:28.092Z","type":"message"}
{"nick":"avidal","message":"Modest me, thinking I could solve the single biggest \"problem\" with luvit since it launched :)","date":"2015-01-22T22:38:54.695Z","type":"message"}
{"nick":"avidal","message":"anyway, time for me to head home. I'll try hacking on require.resolve a bit more and get a PR in","date":"2015-01-22T22:39:56.958Z","type":"message"}
{"nick":"avidal","reason":"Ping timeout: 252 seconds","date":"2015-01-22T22:44:29.385Z","type":"quit"}
{"nick":"avidal","date":"2015-01-22T22:47:18.988Z","type":"join"}
{"nick":"avidal","message":"our transit system shouldn't be legally allowed to say this train has wifi","date":"2015-01-22T22:47:49.941Z","type":"message"}
{"nick":"avidal","message":"because it's shit","date":"2015-01-22T22:47:57.057Z","type":"message"}
{"nick":"rphillips","message":"rje: i was thinking of for the log feature of the svc manager stuff, to set a noop function called log() and just let it be setable by the user","date":"2015-01-22T22:55:52.210Z","type":"message"}
{"nick":"rphillips","message":"exports.setLogFunction(p)","date":"2015-01-22T22:56:11.812Z","type":"message"}
{"nick":"rphillips","message":"log('some message')","date":"2015-01-22T22:57:13.630Z","type":"message"}
{"nick":"avidal__","date":"2015-01-22T23:25:29.412Z","type":"join"}
{"nick":"avidal","reason":"Ping timeout: 240 seconds","date":"2015-01-22T23:25:53.023Z","type":"quit"}
{"nick":"avidal__","reason":"Read error: Connection reset by peer","date":"2015-01-22T23:35:53.037Z","type":"quit"}
{"nick":"avidal","date":"2015-01-22T23:39:29.924Z","type":"join"}
{"nick":"avidal","reason":"Client Quit","date":"2015-01-22T23:39:44.273Z","type":"quit"}
{"nick":"not^v","reason":"Ping timeout: 265 seconds","date":"2015-01-22T23:48:04.059Z","type":"quit"}
{"nick":"DarkGod","reason":"Ping timeout: 264 seconds","date":"2015-01-22T23:56:56.039Z","type":"quit"}
{"nick":"dan336","reason":"Quit: Leaving.","date":"2015-01-22T23:57:45.871Z","type":"quit"}
