{"nick":"Something12","date":"2016-01-06T00:18:31.839Z","type":"join"}
{"nick":"DarkGod","reason":"Quit: Leaving","date":"2016-01-06T02:00:45.180Z","type":"quit"}
{"nick":"SkyRocknRoll_","reason":"Ping timeout: 264 seconds","date":"2016-01-06T04:30:12.008Z","type":"quit"}
{"nick":"SkyRocknRoll","date":"2016-01-06T05:07:31.099Z","type":"join"}
{"nick":"squeek","reason":"Ping timeout: 264 seconds","date":"2016-01-06T06:58:23.944Z","type":"quit"}
{"nick":"squeek","date":"2016-01-06T07:02:01.069Z","type":"join"}
{"nick":"SkyRocknRoll","reason":"Ping timeout: 245 seconds","date":"2016-01-06T07:50:34.937Z","type":"quit"}
{"nick":"SkyRocknRoll","date":"2016-01-06T08:07:35.842Z","type":"join"}
{"nick":"DarkGod","date":"2016-01-06T09:06:18.466Z","type":"join"}
{"nick":"sousoux","reason":"Ping timeout: 240 seconds","date":"2016-01-06T11:04:46.434Z","type":"quit"}
{"nick":"creationix","message":"daurnimator, trying to port luvit's require to a lua loader","date":"2016-01-06T12:56:22.624Z","type":"message"}
{"nick":"creationix","message":"I found a somewhat hacky workaround","date":"2016-01-06T12:56:29.539Z","type":"message"}
{"nick":"creationix","message":"if I insert my loader at the very front, it gets called before lua looks in the package.loaded cache.  This allows me to use my cache (with fully resolved path names).","date":"2016-01-06T12:57:04.342Z","type":"message"}
{"nick":"creationix","message":"Lua will still store a copy of the module in package.loaded at the short name (possibly overwriting a conflicting name).  But as long as my loader always comes first, I don't think that's a problem.","date":"2016-01-06T12:57:49.881Z","type":"message"}
{"nick":"daurnimator","message":"creationix: yeah... lua isn't very friendly to relative loading","date":"2016-01-06T12:59:38.667Z","type":"message"}
{"nick":"daurnimator","message":"for e.g. it means you can now no longer create useful helpers around your require","date":"2016-01-06T13:00:08.768Z","type":"message"}
{"nick":"daurnimator","message":"because it would be relative to the helper","date":"2016-01-06T13:00:24.163Z","type":"message"}
{"nick":"creationix","message":"I think my hacked up loader will work.  It's working for lit at least.","date":"2016-01-06T13:00:47.735Z","type":"message"}
{"nick":"creationix","message":"still need to run it through the more involved luvit unit tests","date":"2016-01-06T13:01:02.625Z","type":"message"}
{"nick":"daurnimator","message":"yep","date":"2016-01-06T13:01:06.102Z","type":"message"}
{"nick":"daurnimator","message":"no less hacky than what you had before","date":"2016-01-06T13:01:11.913Z","type":"message"}
{"nick":"creationix","message":"a different kind of hacky","date":"2016-01-06T13:01:22.468Z","type":"message"}
{"nick":"daurnimator","message":"one day you'll realise you don't need relative require ;)","date":"2016-01-06T13:01:22.660Z","type":"message"}
{"nick":"creationix","message":"or switch to a language with a require system that supports it :P","date":"2016-01-06T13:01:46.482Z","type":"message"}
{"nick":"daurnimator","message":"in other news, I finally fixed the broken lua-http test","date":"2016-01-06T13:02:32.012Z","type":"message"}
{"nick":"daurnimator","message":"(it was failing on travis; but not locally; which made it a pain in the ass)","date":"2016-01-06T13:02:49.139Z","type":"message"}
{"nick":"creationix","message":"yep, been there","date":"2016-01-06T13:02:54.650Z","type":"message"}
{"nick":"creationix","message":"btw, I'm still considering moving luvit over to luaossl.  I just need to convince myself that coupling luv with an openssl context is a good idea","date":"2016-01-06T13:03:26.578Z","type":"message"}
{"nick":"daurnimator","message":"I ended up making a different branch and just kept amending the commit on it until it passed","date":"2016-01-06T13:03:31.311Z","type":"message"}
{"nick":"creationix","message":"it should help performance at least","date":"2016-01-06T13:03:37.134Z","type":"message"}
{"nick":"creationix","message":"good idea, that keeps your history clean","date":"2016-01-06T13:03:55.554Z","type":"message"}
{"nick":"daurnimator","message":"creationix: FWIW, you could write a small C module that took an openssl SSL_CTX* and gave output as a lua string directly","date":"2016-01-06T13:04:20.198Z","type":"message"}
{"nick":"creationix","message":"My plan was to add a couple methods to the uv_stream_t \"class\" so that any libuv stream can add tls","date":"2016-01-06T13:05:01.030Z","type":"message"}
{"nick":"daurnimator","message":"creationix: I think that's a good idea. but I assume you have other libuv developers there to fight with? :P","date":"2016-01-06T13:05:26.098Z","type":"message"}
{"nick":"creationix","message":"but yes, another idea is just write a standanlone C module that adds the missing functionality to luaossl so we can keep our current behavior","date":"2016-01-06T13:05:34.655Z","type":"message"}
{"nick":"creationix","message":"it doesn't need to go into libuv, just my lua bindings","date":"2016-01-06T13:05:49.910Z","type":"message"}
{"nick":"daurnimator","message":"luaossl might even take such a patch","date":"2016-01-06T13:05:59.762Z","type":"message"}
{"nick":"creationix","message":"The one thing I like about our current decoupled approach is any stream can have tls added, even if it's not a real libuv stream.  It's just a question of if anyone actually does that or has reason to do that.","date":"2016-01-06T13:12:38.837Z","type":"message"}
{"nick":"creationix","message":"daurnimator, how do you handle tls in your libuv version of cqueues?","date":"2016-01-06T13:13:28.947Z","type":"message"}
{"nick":"creationix","message":"are you using luvit with it's openssl bindings?","date":"2016-01-06T13:13:37.614Z","type":"message"}
{"nick":"creationix","message":"I imagine it would integrate a lot cleaner if luv would accept a context from luaossl directly.","date":"2016-01-06T13:14:05.432Z","type":"message"}
{"nick":"daurnimator","message":"creationix: libuv version of cqueues??","date":"2016-01-06T13:15:43.371Z","type":"message"}
{"nick":"creationix","message":"I mean when you integrate with libuv","date":"2016-01-06T13:15:58.099Z","type":"message"}
{"nick":"creationix","message":"like the examples you put in the luvit repo","date":"2016-01-06T13:16:16.312Z","type":"message"}
{"nick":"daurnimator","message":"creationix: it hooks up a cqueue with uv_loop_t or vice-versa. nothing at the socket/stream level.","date":"2016-01-06T13:16:47.280Z","type":"message"}
{"nick":"creationix","message":"so can I use your http library to make a https call using libuv for the system calls?","date":"2016-01-06T13:17:22.702Z","type":"message"}
{"nick":"daurnimator","message":"no. you'd use my http library; which uses the cqueues socket library; which uses the cqueues scheduler => which you hook up to a uv_loop_t (which is a singleton in luv)","date":"2016-01-06T13:18:03.885Z","type":"message"}
{"nick":"creationix","message":"ok, that makes more sense","date":"2016-01-06T13:18:23.206Z","type":"message"}
{"nick":"creationix","message":"but if I wanted to use libuv instead of the cqueues socket library for lua-http, how hard would that be?","date":"2016-01-06T13:18:40.115Z","type":"message"}
{"nick":"daurnimator","message":"I use a \"target state\" mechanism which cqueues caters well for. I doubt that's easy in libuv","date":"2016-01-06T13:19:35.192Z","type":"message"}
{"nick":"daurnimator","message":"e.g. in the cqueues socket module, you can construct a socket object which returns instantly; then call :write (before it's connected at the syscall level), and it makes sure it does everything in order","date":"2016-01-06T13:20:40.592Z","type":"message"}
{"nick":"creationix","message":"I've been very careful with luvit to keep protocol logic decoupled from the socket code.  The idea is you can reuse my http-codec with any stream","date":"2016-01-06T13:22:07.052Z","type":"message"}
{"nick":"creationix","message":"same with tls-codec (but with the aforementioned performance issues)","date":"2016-01-06T13:22:23.506Z","type":"message"}
{"nick":"creationix","message":"I don't see why targetting your interface would be hard.  Just need to keep some state in a layer above libuv.","date":"2016-01-06T13:22:59.452Z","type":"message"}
{"nick":"creationix","message":"I already do this for my coro-* interfaces","date":"2016-01-06T13:23:04.194Z","type":"message"}
{"nick":"daurnimator","message":"creationix: IMO that style is a bit futile; it really limits what you can do => I realised having a flexible scheduler that can be embedded anywhere was the solution to being able write easy to read code","date":"2016-01-06T13:23:20.622Z","type":"message"}
{"nick":"daurnimator","message":"creationix: yeah. but at that point you're basically emulating cqueues's socket module on top of libuv.....","date":"2016-01-06T13:23:53.981Z","type":"message"}
{"nick":"creationix","message":"right, which makes it slower and more complicated :)","date":"2016-01-06T13:24:14.216Z","type":"message"}
{"nick":"creationix","message":"but cqueues doesn't support IOCP in windows right?","date":"2016-01-06T13:24:26.289Z","type":"message"}
{"nick":"daurnimator","message":"creationix: no. I'm working on windows solutions... and I'm aiming lower level than IOCP now :)","date":"2016-01-06T13:24:42.901Z","type":"message"}
{"nick":"daurnimator","message":"i.e. undocumented NT interfaces","date":"2016-01-06T13:25:05.028Z","type":"message"}
{"nick":"daurnimator","message":"which are suprisingly stable","date":"2016-01-06T13:25:11.263Z","type":"message"}
{"nick":"daurnimator","message":"or not so suprising; when you realise all the people that understand this level left microsoft 20 years ago","date":"2016-01-06T13:25:29.437Z","type":"message"}
{"nick":"creationix","message":"good luck","date":"2016-01-06T13:27:44.448Z","type":"message"}
{"nick":"daurnimator","message":"creationix: libuv actually uses similar stuff in one area","date":"2016-01-06T13:42:03.530Z","type":"message"}
{"nick":"daurnimator","message":"creationix: anyway, in my http2 code I actually use cqueues schedulers","date":"2016-01-06T13:46:01.931Z","type":"message"}
{"nick":"daurnimator","message":"each http2 connection has it's own scheduler","date":"2016-01-06T13:46:15.326Z","type":"message"}
{"nick":"daurnimator","message":"(that would be like each http2 connection having it's own uv_loop_t)","date":"2016-01-06T13:46:32.076Z","type":"message"}
{"nick":"daurnimator","message":"hrm","date":"2016-01-06T14:11:49.702Z","type":"message"}
{"nick":"SkyRocknRoll","reason":"Ping timeout: 250 seconds","date":"2016-01-06T14:11:50.998Z","type":"quit"}
{"nick":"daurnimator","message":"which I actually am stuck thinking about at the moment","date":"2016-01-06T14:12:00.327Z","type":"message"}
{"nick":"daurnimator","message":"e.g. you call myhttp2stream:write_chunk(big_string)","date":"2016-01-06T14:12:15.683Z","type":"message"}
{"nick":"daurnimator","message":"now, the first part of big_string gets sent","date":"2016-01-06T14:12:30.182Z","type":"message"}
{"nick":"daurnimator","message":"but you run out of peer credits","date":"2016-01-06T14:12:33.707Z","type":"message"}
{"nick":"daurnimator","message":"so it reads ahead until it gets more","date":"2016-01-06T14:12:59.824Z","type":"message"}
{"nick":"daurnimator","message":"but what if during the read-ahead, there's an error?","date":"2016-01-06T14:13:14.212Z","type":"message"}
{"nick":"daurnimator","message":"considering my convention is to return `nil, err, errno`","date":"2016-01-06T14:13:50.373Z","type":"message"}
{"nick":"daurnimator","message":"it seems weird to return the errors for such an unrelated thing (from the read-ahead) from :write_chunk","date":"2016-01-06T14:14:22.054Z","type":"message"}
{"nick":"creationix","message":"yep, this kind of stuff gets tricky","date":"2016-01-06T14:46:32.577Z","type":"message"}
{"nick":"creationix","message":"also, http2 has peer credits?","date":"2016-01-06T14:47:26.211Z","type":"message"}
{"nick":"daurnimator","message":"creationix: yep","date":"2016-01-06T14:48:32.544Z","type":"message"}
{"nick":"daurnimator","message":"creationix: you can only send as much data as credits you have","date":"2016-01-06T14:48:49.116Z","type":"message"}
{"nick":"daurnimator","message":"then you have to wait for more credits before you send the rest of the data","date":"2016-01-06T14:49:14.003Z","type":"message"}
{"nick":"creationix","message":"but http2 isn't a p2p protocol, how does that work?","date":"2016-01-06T14:50:02.584Z","type":"message"}
{"nick":"creationix","message":"or do I not understand it?","date":"2016-01-06T14:50:06.156Z","type":"message"}
{"nick":"rphillips","message":"good morning","date":"2016-01-06T14:50:38.991Z","type":"message"}
{"nick":"creationix","message":"rphillips, morning","date":"2016-01-06T14:50:51.556Z","type":"message"}
{"nick":"creationix","message":"I've seen the \"peer-to-peer\" extension to http2 that acts sort of like websocket, but I don't see anything about credits in it","date":"2016-01-06T14:53:11.819Z","type":"message"}
{"nick":"daurnimator","message":"creationix: the peer is the server (or client)","date":"2016-01-06T14:53:27.368Z","type":"message"}
{"nick":"daurnimator","message":"creationix: https://http2.github.io/http2-spec/#fc-principles","date":"2016-01-06T14:53:59.185Z","type":"message"}
{"nick":"creationix","message":"I see, interesting","date":"2016-01-06T14:54:53.293Z","type":"message"}
{"nick":"SkyRocknRoll","date":"2016-01-06T15:10:11.563Z","type":"join"}
{"nick":"SkyRocknRoll_","date":"2016-01-06T15:11:23.137Z","type":"join"}
{"nick":"creationix","message":"rje, you mentioned luvit garbage collection.  Did you need help with something?","date":"2016-01-06T19:17:55.284Z","type":"message"}
{"nick":"rje","message":"creationix, yes, uick vidyo?","date":"2016-01-06T19:18:16.565Z","type":"message"}
{"nick":"creationix","message":"sure, your room?","date":"2016-01-06T19:18:44.433Z","type":"message"}
{"nick":"SkyRocknRoll_","reason":"Ping timeout: 245 seconds","date":"2016-01-06T19:47:39.932Z","type":"quit"}
{"nick":"SkyRocknRoll","reason":"Remote host closed the connection","date":"2016-01-06T19:47:56.942Z","type":"quit"}
{"nick":"rphillips","message":"creationix: https://github.com/rphillips/virgo-logging/blob/master/init.lua#L101","date":"2016-01-06T19:49:10.787Z","type":"message"}
{"nick":"creationix","message":"rphillips, the luajit code for os.date looks pretty straightforward https://github.com/LuaJIT/LuaJIT/blob/1393b2f681df3a71cb381b958e8e3221d2dd427d/src/lib_os.c#L213-L216","date":"2016-01-06T20:14:04.269Z","type":"message"}
{"nick":"creationix","message":"the only GC related action is to push the final string into lua","date":"2016-01-06T20:14:18.738Z","type":"message"}
{"nick":"rphillips","message":"it might be the FileLogger/fs.WriteStream","date":"2016-01-06T20:15:41.835Z","type":"message"}
{"nick":"rphillips","message":"https://github.com/rphillips/virgo-logging/blob/master/init.lua#L121","date":"2016-01-06T20:15:43.513Z","type":"message"}
{"nick":"creationix","message":"maybe it's not date related.  it's just that date is the first thing in a log entry?","date":"2016-01-06T20:16:29.802Z","type":"message"}
{"nick":"rphillips","message":"yeah","date":"2016-01-06T20:16:36.635Z","type":"message"}
{"nick":"creationix","message":"maybe something gets corrupted at the end of the previous line","date":"2016-01-06T20:16:46.060Z","type":"message"}
{"nick":"creationix","message":"which we were seeing with the config file issue we thought was locale related","date":"2016-01-06T20:17:12.756Z","type":"message"}
{"nick":"creationix","message":"maybe fs.WriteStream is buggy on some systems?","date":"2016-01-06T20:17:43.982Z","type":"message"}
{"nick":"creationix","message":"that would be used by both config file writer and this logger right?","date":"2016-01-06T20:18:08.650Z","type":"message"}
{"nick":"rphillips","message":"correct","date":"2016-01-06T20:18:26.892Z","type":"message"}
{"nick":"rphillips","message":"the config file used fs.writeFile","date":"2016-01-06T20:18:50.502Z","type":"message"}
{"nick":"creationix","message":"hmm, maybe not then, that's different code, unless writeFile uses writeStream internally","date":"2016-01-06T20:19:18.855Z","type":"message"}
{"nick":"creationix","message":"I need to run a quick errand, will be back in a bit","date":"2016-01-06T20:21:35.056Z","type":"message"}
{"nick":"creationix","message":"...maybe not (bike has flat tires and pump is missing)","date":"2016-01-06T20:43:49.729Z","type":"message"}
{"nick":"kostco","reason":"Ping timeout: 240 seconds","date":"2016-01-06T22:04:38.441Z","type":"quit"}
{"nick":"kostco","date":"2016-01-06T22:04:49.011Z","type":"join"}
{"nick":"creationix","message":"hmm, dropping luvit/require means we can't use module:load anymore","date":"2016-01-06T22:43:04.640Z","type":"message"}
{"nick":"creationix","message":"(that was a way to load relative resources from either luvi bundles or filesystem)","date":"2016-01-06T22:43:46.698Z","type":"message"}
{"nick":"creationix","message":"I'll add a utils.load that does the same thing","date":"2016-01-06T22:46:00.724Z","type":"message"}
{"nick":"travis-ci","date":"2016-01-06T22:59:05.027Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#2669 (luvly - 2d134b0 : Tim Caswell): The build has errored.","date":"2016-01-06T22:59:06.079Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/1714c7217ac1...2d134b05c1db","date":"2016-01-06T22:59:06.291Z","type":"message"}
{"nick":"travis-ci","message":"Build details : https://travis-ci.org/luvit/luvit/builds/100705238","date":"2016-01-06T22:59:06.291Z","type":"message"}
{"nick":"travis-ci","date":"2016-01-06T22:59:06.291Z","type":"part"}
{"nick":"travis-ci","date":"2016-01-06T23:02:02.877Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#2671 (luvly - 77f3d6d : Tim Caswell): The build has errored.","date":"2016-01-06T23:02:03.716Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/2d134b05c1db...77f3d6db0000","date":"2016-01-06T23:02:03.947Z","type":"message"}
{"nick":"travis-ci","message":"Build details : https://travis-ci.org/luvit/luvit/builds/100705896","date":"2016-01-06T23:02:03.947Z","type":"message"}
{"nick":"travis-ci","date":"2016-01-06T23:02:03.947Z","type":"part"}
{"nick":"creationix","message":"made good progress on moving luvit to luvit-loader","date":"2016-01-06T23:22:03.974Z","type":"message"}
{"nick":"rphillips","message":"nice!","date":"2016-01-06T23:22:21.608Z","type":"message"}
{"nick":"creationix","message":"most the unit tests are passing now, but for some reason, the test runner doesn't output anything till it fails","date":"2016-01-06T23:22:24.019Z","type":"message"}
{"nick":"creationix","message":"I'm going to miss the module: api","date":"2016-01-06T23:22:37.540Z","type":"message"}
{"nick":"creationix","message":"but it conflicts greatly with lua (where `module` is a global deprecated function)","date":"2016-01-06T23:22:54.723Z","type":"message"}
{"nick":"creationix","message":"I suppose we could write a library in deps that has the old `module` interface","date":"2016-01-06T23:23:14.033Z","type":"message"}
{"nick":"travis-ci","date":"2016-01-06T23:23:22.464Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#2673 (luvly - 29a1ca5 : Tim Caswell): The build has errored.","date":"2016-01-06T23:23:23.464Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/77f3d6db0000...29a1ca5467d3","date":"2016-01-06T23:23:23.657Z","type":"message"}
{"nick":"travis-ci","message":"Build details : https://travis-ci.org/luvit/luvit/builds/100710054","date":"2016-01-06T23:23:23.657Z","type":"message"}
{"nick":"travis-ci","date":"2016-01-06T23:23:23.657Z","type":"part"}
{"nick":"creationix","message":"probably better than what I'm doing with tacking stuff on utils","date":"2016-01-06T23:23:24.360Z","type":"message"}
{"nick":"creationix","message":"hmm, except we don't want to conflict with the lua global, so maybe utils is the right place?","date":"2016-01-06T23:23:47.264Z","type":"message"}
{"nick":"creationix","message":"anyway, dinner time https://github.com/luvit/luvit/pull/861/files?w=1","date":"2016-01-06T23:24:26.480Z","type":"message"}
{"nick":"creationix","message":"I think a new \"resource\" module can replace the old `module` global","date":"2016-01-06T23:26:19.677Z","type":"message"}
{"nick":"creationix","message":"resource.load, resource.dir, resource.filename, resource.resolve, etc..","date":"2016-01-06T23:26:36.137Z","type":"message"}
{"nick":"creationix","message":"all relative utilities","date":"2016-01-06T23:26:42.120Z","type":"message"}
{"nick":"creationix","message":"that work in bundle or fs mode automatically","date":"2016-01-06T23:26:57.539Z","type":"message"}
{"nick":"daurnimator","message":"creationix: if its a module of relative things. call it 'relative'? or 'relativity'","date":"2016-01-06T23:57:37.264Z","type":"message"}
{"nick":"daurnimator","message":"there's gotta be some moon-related pun in there too around the theory of relativity","date":"2016-01-06T23:57:56.072Z","type":"message"}
