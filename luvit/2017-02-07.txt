{"nick":"konobi_","new_nick":"konobi","date":"2017-02-07T00:25:53.153Z","type":"nick"}
{"nick":"DarkGod","reason":"Ping timeout: 240 seconds","date":"2017-02-07T01:29:34.673Z","type":"quit"}
{"nick":"inex","reason":"Quit: oh","date":"2017-02-07T01:48:15.209Z","type":"quit"}
{"nick":"inex","date":"2017-02-07T01:54:52.285Z","type":"join"}
{"nick":"SkyRocknRoll","date":"2017-02-07T04:16:43.294Z","type":"join"}
{"nick":"rendar","date":"2017-02-07T07:46:08.038Z","type":"join"}
{"nick":"SkyRocknRoll","reason":"Ping timeout: 264 seconds","date":"2017-02-07T10:57:23.295Z","type":"quit"}
{"nick":"^v","reason":"Ping timeout: 245 seconds","date":"2017-02-07T12:52:00.073Z","type":"quit"}
{"nick":"^v","date":"2017-02-07T12:57:35.069Z","type":"join"}
{"nick":"^v","reason":"Ping timeout: 245 seconds","date":"2017-02-07T14:52:25.136Z","type":"quit"}
{"nick":"^v","date":"2017-02-07T14:53:44.151Z","type":"join"}
{"nick":"^v","reason":"Ping timeout: 258 seconds","date":"2017-02-07T16:57:22.115Z","type":"quit"}
{"nick":"rendar","reason":"Ping timeout: 255 seconds","date":"2017-02-07T19:45:32.959Z","type":"quit"}
{"nick":"Soni","message":"creationix, does either luvi or luvit have a VFS API?","date":"2017-02-07T19:49:03.072Z","type":"message"}
{"nick":"creationix","message":"not really","date":"2017-02-07T19:49:19.184Z","type":"message"}
{"nick":"creationix","message":"the bundle API in luvi is like a vfs","date":"2017-02-07T19:49:26.624Z","type":"message"}
{"nick":"creationix","message":"is works on either a zip file or a folder","date":"2017-02-07T19:49:32.533Z","type":"message"}
{"nick":"creationix","message":"but nothing overrides the fs module if that is what you mean","date":"2017-02-07T19:49:47.836Z","type":"message"}
{"nick":"Soni","message":"I wanna make a modular bot that uses a VFS instead of using the FS directly","date":"2017-02-07T19:50:16.873Z","type":"message"}
{"nick":"Soni","message":"can I do that?","date":"2017-02-07T19:51:17.987Z","type":"message"}
{"nick":"creationix","message":"just design a fs API and then implement backends for it","date":"2017-02-07T19:52:48.499Z","type":"message"}
{"nick":"creationix","message":"the coro-fs interface would be a nice one","date":"2017-02-07T19:53:04.822Z","type":"message"}
{"nick":"creationix","message":"then you get one backend for free and libraries written against coro-fs can drop-in replace with your vfs","date":"2017-02-07T19:53:35.443Z","type":"message"}
{"nick":"Soni","message":"I want it to be pluggable","date":"2017-02-07T19:53:37.586Z","type":"message"}
{"nick":"creationix","message":"the problem is it's fairly low-level and deals with things like file descriptors","date":"2017-02-07T19:53:48.270Z","type":"message"}
{"nick":"creationix","message":"so you'll have to simulate those for every backend","date":"2017-02-07T19:53:55.583Z","type":"message"}
{"nick":"Soni","message":"I want modules being able to use vfs to provide and use things, similarly to /proc","date":"2017-02-07T19:55:23.190Z","type":"message"}
{"nick":"creationix","message":"so you want a mount system like unix filesystems","date":"2017-02-07T19:56:33.172Z","type":"message"}
{"nick":"creationix","message":"that's fairly easy, just keep a list of your mountpoints and use that when traversing paths to make sure each path segment goes to the right filesystem plugin","date":"2017-02-07T19:57:09.395Z","type":"message"}
{"nick":"Soni","message":"yeah","date":"2017-02-07T19:57:09.568Z","type":"message"}
{"nick":"creationix","message":"though fuse bindings might be funner","date":"2017-02-07T19:57:31.970Z","type":"message"}
{"nick":"creationix","message":"then you can make real unix mountpoints with arbitrary backends","date":"2017-02-07T19:57:47.885Z","type":"message"}
{"nick":"Soni","message":"but I don't want to mess with the real FS","date":"2017-02-07T19:59:07.375Z","type":"message"}
{"nick":"creationix","message":"ok, then no fuse","date":"2017-02-07T19:59:21.941Z","type":"message"}
{"nick":"Soni","message":"what if I wanna use a block device for the VFS?","date":"2017-02-07T19:59:24.444Z","type":"message"}
{"nick":"creationix","message":"what do you mean?","date":"2017-02-07T19:59:33.052Z","type":"message"}
{"nick":"Soni","message":"sudo bot.lua raw /dev/sdc1","date":"2017-02-07T19:59:37.610Z","type":"message"}
{"nick":"creationix","message":"so implement your own filesystem?","date":"2017-02-07T19:59:56.364Z","type":"message"}
{"nick":"Soni","message":"where `raw` is the VFS driver","date":"2017-02-07T19:59:56.707Z","type":"message"}
{"nick":"Soni","message":"so I need to make my own API?","date":"2017-02-07T20:00:31.856Z","type":"message"}
{"nick":"creationix","message":"design your own or reuse an existing one","date":"2017-02-07T20:01:47.688Z","type":"message"}
{"nick":"Soni","message":"ok","date":"2017-02-07T20:02:08.829Z","type":"message"}
{"nick":"Soni","message":"hmm...","date":"2017-02-07T20:02:24.929Z","type":"message"}
{"nick":"Soni","message":"creationix, does luvit come with built-in chroot?","date":"2017-02-07T20:02:33.776Z","type":"message"}
{"nick":"creationix","message":"the coro-fs api  has a chroot of sorts","date":"2017-02-07T20:02:47.084Z","type":"message"}
{"nick":"creationix","message":"just returns a new set of functions that insert a path prefix","date":"2017-02-07T20:02:57.772Z","type":"message"}
{"nick":"Soni","message":"hmm","date":"2017-02-07T20:03:20.434Z","type":"message"}
{"nick":"Soni","message":"should I even have the thing as part of the bot...","date":"2017-02-07T20:03:27.501Z","type":"message"}
{"nick":"Soni","message":"`luvit vfs.lua luvit bot.lua`...","date":"2017-02-07T20:04:09.885Z","type":"message"}
{"nick":"Soni","message":"idk","date":"2017-02-07T20:04:25.890Z","type":"message"}
{"nick":"creationix","message":"up to you","date":"2017-02-07T20:04:50.308Z","type":"message"}
{"nick":"rendar","date":"2017-02-07T20:15:45.046Z","type":"join"}
{"nick":"rendar","reason":"Changing host","date":"2017-02-07T20:15:45.219Z","type":"quit"}
{"nick":"rendar","date":"2017-02-07T20:15:45.219Z","type":"join"}
{"nick":"DarkGod","date":"2017-02-07T21:44:41.201Z","type":"join"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2017-02-07T22:01:37.353Z","type":"quit"}
{"nick":"^v","date":"2017-02-07T22:38:17.160Z","type":"join"}
