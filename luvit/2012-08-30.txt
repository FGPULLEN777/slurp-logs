{"nick":"elguapo99","reason":"Ping timeout: 245 seconds","date":"2012-08-30T00:10:14.595Z","type":"quit"}
{"nick":"mmalecki","reason":"Ping timeout: 265 seconds","date":"2012-08-30T00:21:02.242Z","type":"quit"}
{"nick":"elguapo99","date":"2012-08-30T00:39:03.824Z","type":"join"}
{"nick":"xming","reason":"Read error: Connection reset by peer","date":"2012-08-30T01:01:25.068Z","type":"quit"}
{"nick":"elguapo99","reason":"Ping timeout: 244 seconds","date":"2012-08-30T01:10:18.517Z","type":"quit"}
{"nick":"elguapo99","date":"2012-08-30T01:38:54.033Z","type":"join"}
{"nick":"take_cheeze","reason":"Ping timeout: 252 seconds","date":"2012-08-30T01:48:29.845Z","type":"quit"}
{"nick":"take_cheeze","date":"2012-08-30T02:07:24.561Z","type":"join"}
{"nick":"elguapo99","reason":"Ping timeout: 264 seconds","date":"2012-08-30T02:10:38.389Z","type":"quit"}
{"nick":"CIA-22","message":"caoshiwei\u000f master\u000f * r93ab775\u000f \u000f/ (src/utils.c src/utils.h tests/test-fiber-bug319.lua):\u000f fixed #319 - http://git.io/WggsrA","date":"2012-08-30T02:40:32.472Z","type":"message"}
{"nick":"CIA-22","message":"caoshiwei\u000f master\u000f * rf36c77e\u000f \u000f/ (src/utils.c src/utils.h tests/test-fiber-bug319.lua):\u000f remove gettop() and assert, add a test case that create a socket handle in fiber. - http://git.io/hbAeLg","date":"2012-08-30T02:40:32.780Z","type":"message"}
{"nick":"CIA-22","message":"andi\u000f master\u000f * rd016e25\u000f \u000f/ src/utils.h :\u000f replace tabs with spaces to maintain a cindent style. - http://git.io/jGhnWQ","date":"2012-08-30T02:40:33.144Z","type":"message"}
{"nick":"CIA-22","message":"Ryan Phillips\u000f master\u000f * r1f9c272\u000f \u000f/ (src/utils.c src/utils.h tests/test-fiber-bug319.lua):\u000f Merge pull request #335 from AndrewTsao/master - http://git.io/n_YSqw","date":"2012-08-30T02:40:33.599Z","type":"message"}
{"nick":"travis-ci","date":"2012-08-30T02:42:46.953Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] luvit/luvit#434 (master - 1f9c272 : Ryan Phillips): The build passed.","date":"2012-08-30T02:42:47.192Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/luvit/luvit/compare/f6fccfcabd18...1f9c272561ec","date":"2012-08-30T02:42:47.192Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/luvit/luvit/builds/2279221","date":"2012-08-30T02:42:47.192Z","type":"message"}
{"nick":"travis-ci","date":"2012-08-30T02:42:47.192Z","type":"part"}
{"nick":"xming","date":"2012-08-30T03:00:22.334Z","type":"join"}
{"nick":"indexzero","date":"2012-08-30T03:38:58.629Z","type":"join"}
{"nick":"CIA-22","message":"Tim Caswell\u000f master\u000f * r255e888\u000f \u000f/ examples/web-app/modules/cleanup.lua :\u000f Fix typo in web-app example - http://git.io/6VXmyg","date":"2012-08-30T03:48:57.810Z","type":"message"}
{"nick":"travis-ci","date":"2012-08-30T03:51:45.080Z","type":"join"}
{"nick":"travis-ci","message":"[travis-ci] luvit/luvit#435 (master - 255e888 : Tim Caswell): The build passed.","date":"2012-08-30T03:51:45.325Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Change view : https://github.com/luvit/luvit/compare/1f9c272561ec...255e8885668d","date":"2012-08-30T03:51:45.325Z","type":"message"}
{"nick":"travis-ci","message":"[travis-ci] Build details : http://travis-ci.org/luvit/luvit/builds/2279458","date":"2012-08-30T03:51:45.325Z","type":"message"}
{"nick":"travis-ci","date":"2012-08-30T03:51:45.325Z","type":"part"}
{"nick":"creationix","message":"has anyone had a chance or interest to compare the web module with the http  module?","date":"2012-08-30T03:52:32.880Z","type":"message"}
{"nick":"creationix","message":"taking luvit.io down for a quick update...","date":"2012-08-30T03:52:57.662Z","type":"message"}
{"nick":"creationix","message":"(upgrade ubuntu version)","date":"2012-08-30T03:53:07.763Z","type":"message"}
{"nick":"creationix","message":"I think luvit.io is back and functional","date":"2012-08-30T04:19:17.042Z","type":"message"}
{"nick":"kristate","date":"2012-08-30T05:01:07.378Z","type":"join"}
{"nick":"dvv","date":"2012-08-30T05:03:07.830Z","type":"join"}
{"nick":"take_cheeze","reason":"Read error: Connection reset by peer","date":"2012-08-30T05:04:24.008Z","type":"quit"}
{"nick":"take_cheeze","date":"2012-08-30T05:06:35.377Z","type":"join"}
{"nick":"dvv","date":"2012-08-30T05:40:42.268Z","type":"part"}
{"nick":"aliem","date":"2012-08-30T06:02:44.972Z","type":"join"}
{"nick":"kristate","reason":"Ping timeout: 264 seconds","date":"2012-08-30T06:22:02.376Z","type":"quit"}
{"nick":"TheJH","date":"2012-08-30T06:23:01.001Z","type":"join"}
{"nick":"`3rdEden","date":"2012-08-30T07:28:58.368Z","type":"join"}
{"nick":"joshthecoder","reason":"Quit: Linkinus - http://linkinus.com","date":"2012-08-30T07:54:36.566Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2012-08-30T07:57:31.902Z","type":"quit"}
{"nick":"arek_deepinit","date":"2012-08-30T08:17:01.506Z","type":"join"}
{"nick":"`3rdEden","reason":"Quit: Leaving...","date":"2012-08-30T08:32:23.631Z","type":"quit"}
{"nick":"`3rdEden","date":"2012-08-30T08:32:48.305Z","type":"join"}
{"nick":"creationix","reason":"Read error: Operation timed out","date":"2012-08-30T08:50:09.809Z","type":"quit"}
{"nick":"mmalecki","date":"2012-08-30T08:58:12.980Z","type":"join"}
{"nick":"aliem_","date":"2012-08-30T09:07:39.343Z","type":"join"}
{"nick":"aliem","reason":"Ping timeout: 240 seconds","date":"2012-08-30T09:10:47.037Z","type":"quit"}
{"nick":"kristate","date":"2012-08-30T09:35:04.360Z","type":"join"}
{"nick":"creationix","date":"2012-08-30T09:44:51.683Z","type":"join"}
{"nick":"mmalecki","new_nick":"mmalecki[meeting","date":"2012-08-30T09:59:19.869Z","type":"nick"}
{"nick":"TheJH","reason":"Ping timeout: 244 seconds","date":"2012-08-30T10:09:42.598Z","type":"quit"}
{"nick":"mmalecki[meeting","new_nick":"mmalecki","date":"2012-08-30T10:48:28.250Z","type":"nick"}
{"nick":"TheJH","date":"2012-08-30T11:22:43.926Z","type":"join"}
{"nick":"xming","reason":"Changing host","date":"2012-08-30T11:23:09.633Z","type":"quit"}
{"nick":"xming","date":"2012-08-30T11:23:09.875Z","type":"join"}
{"nick":"kristate","reason":"Quit: kristate","date":"2012-08-30T11:24:48.963Z","type":"quit"}
{"nick":"kristate","date":"2012-08-30T11:24:59.507Z","type":"join"}
{"nick":"`3rdEden","reason":"Quit: Leaving...","date":"2012-08-30T11:38:26.458Z","type":"quit"}
{"nick":"arek_deepinit","reason":"Quit: Konversation terminated!","date":"2012-08-30T11:39:37.333Z","type":"quit"}
{"nick":"`3rdEden","date":"2012-08-30T11:48:38.591Z","type":"join"}
{"nick":"mmalecki","new_nick":"mmalecki[busy]","date":"2012-08-30T12:38:47.403Z","type":"nick"}
{"nick":"elguapo99","date":"2012-08-30T14:06:00.647Z","type":"join"}
{"nick":"`3rdEden","reason":"Read error: Connection reset by peer","date":"2012-08-30T14:16:34.904Z","type":"quit"}
{"nick":"`3rdEden","date":"2012-08-30T14:18:04.343Z","type":"join"}
{"nick":"`3rdEden","reason":"Read error: Connection reset by peer","date":"2012-08-30T14:24:50.873Z","type":"quit"}
{"nick":"`3rdEden","date":"2012-08-30T14:25:21.639Z","type":"join"}
{"nick":"aliem_","reason":"Remote host closed the connection","date":"2012-08-30T14:46:57.251Z","type":"quit"}
{"nick":"indexzero","date":"2012-08-30T14:54:17.662Z","type":"join"}
{"nick":"creationix","message":"Morning Luvit friends!","date":"2012-08-30T15:18:58.744Z","type":"message"}
{"nick":"creationix","message":"I want to discuss a new readable stream API","date":"2012-08-30T15:20:14.485Z","type":"message"}
{"nick":"creationix","message":"The one we inherited from node is hard to use and even node wants to change it","date":"2012-08-30T15:20:35.502Z","type":"message"}
{"nick":"creationix","message":"also the current api breaks middleware systems (possibly the ugliest part of connect is buffering input streams between layers)","date":"2012-08-30T15:21:31.639Z","type":"message"}
{"nick":"`3rdEden","new_nick":"`3E|Cooking","date":"2012-08-30T15:26:22.261Z","type":"nick"}
{"nick":"`3rdEden","date":"2012-08-30T15:30:40.339Z","type":"join"}
{"nick":"CIA-22","reason":"*.net *.split","date":"2012-08-30T15:37:40.510Z","type":"quit"}
{"nick":"CIA-22","date":"2012-08-30T15:41:25.165Z","type":"join"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2012-08-30T15:49:57.342Z","type":"quit"}
{"nick":"creationix","message":"posted to mailing list","date":"2012-08-30T15:50:20.411Z","type":"message"}
{"nick":"creationix","message":"https://groups.google.com/d/msg/luvit/wFsudgNyFH8/sO38fpU6RZUJ","date":"2012-08-30T15:51:44.547Z","type":"message"}
{"nick":"luastoned","date":"2012-08-30T15:57:26.352Z","type":"join"}
{"nick":"creationix","message":"I have some other proposals, but let's focus on these two first","date":"2012-08-30T16:00:14.262Z","type":"message"}
{"nick":"creationix","message":"the others I have pending are a new module system for binary addins (make require be lua only), and some long-standing issues like a good package manager, good API docs, breaking up luvit into modules, etc..","date":"2012-08-30T16:01:27.089Z","type":"message"}
{"nick":"philips_","reason":"Excess Flood","date":"2012-08-30T16:19:07.945Z","type":"quit"}
{"nick":"philips_","date":"2012-08-30T16:22:21.431Z","type":"join"}
{"nick":"`3E|Cooking","reason":"Quit: Leaving...","date":"2012-08-30T16:33:06.974Z","type":"quit"}
{"nick":"etandel","date":"2012-08-30T17:08:08.971Z","type":"join"}
{"nick":"kristate","message":"Hi Tim, are you online at the moment?","date":"2012-08-30T17:09:59.833Z","type":"message"}
{"nick":"creationix","message":"I am","date":"2012-08-30T17:15:42.961Z","type":"message"}
{"nick":"creationix","message":"just documented the proposed readable stream interface https://github.com/luvit/luvit/wiki/Interfaces","date":"2012-08-30T17:15:52.630Z","type":"message"}
{"nick":"kristate","message":"Hi Tim -- I read your proposal","date":"2012-08-30T17:15:55.565Z","type":"message"}
{"nick":"kristate","message":"nakamura-san and I are currently implementing something similar via a fork that we call \"lev\"","date":"2012-08-30T17:16:29.968Z","type":"message"}
{"nick":"kristate","message":"you can check it out here https://github.com/connectFree/lev","date":"2012-08-30T17:16:42.803Z","type":"message"}
{"nick":"kristate","message":"the key to lev is that all streamed data is in the form of cBuffers","date":"2012-08-30T17:17:20.405Z","type":"message"}
{"nick":"kristate","message":"it's backed by a fast slab allocator that I wrote yesterday","date":"2012-08-30T17:17:36.558Z","type":"message"}
{"nick":"creationix","message":"neat","date":"2012-08-30T17:17:43.218Z","type":"message"}
{"nick":"creationix","message":"I'm still undecided on cBuffer vs cdata for mutable buffers","date":"2012-08-30T17:18:16.405Z","type":"message"}
{"nick":"kristate","message":"we should be able to get :slice working by tomorrow","date":"2012-08-30T17:18:22.612Z","type":"message"}
{"nick":"kristate","message":"slice will simply slice from the slab, so it should be pretty smooth","date":"2012-08-30T17:18:46.731Z","type":"message"}
{"nick":"creationix","message":"yep","date":"2012-08-30T17:18:53.305Z","type":"message"}
{"nick":"creationix","message":"have you started tackling http apps yet?","date":"2012-08-30T17:19:10.541Z","type":"message"}
{"nick":"kristate","message":"not yet -- cBuffers now talks slabs","date":"2012-08-30T17:19:26.022Z","type":"message"}
{"nick":"creationix","message":"is that faster than lua string for immutable data?","date":"2012-08-30T17:19:40.753Z","type":"message"}
{"nick":"kristate","message":"the system's read() call directly interfaces with out slab","date":"2012-08-30T17:20:01.635Z","type":"message"}
{"nick":"kristate","message":"our slab*","date":"2012-08-30T17:20:09.407Z","type":"message"}
{"nick":"kristate","message":"so we're not really hitting lua at all","date":"2012-08-30T17:20:23.653Z","type":"message"}
{"nick":"creationix","message":"yeah, that should be fast","date":"2012-08-30T17:20:26.200Z","type":"message"}
{"nick":"creationix","message":"I wish I could use libuv from luajit","date":"2012-08-30T17:20:43.703Z","type":"message"}
{"nick":"kristate","message":"setting flags and the like should be doable from the lua world","date":"2012-08-30T17:21:04.057Z","type":"message"}
{"nick":"kristate","message":"but not all of uv should be exposed","date":"2012-08-30T17:21:12.235Z","type":"message"}
{"nick":"creationix","message":"I wonder if I could layer a select-style interface on top of libuv","date":"2012-08-30T17:21:47.287Z","type":"message"}
{"nick":"creationix","message":"luajit ffi sucks for callbacks in C","date":"2012-08-30T17:21:53.500Z","type":"message"}
{"nick":"kristate","message":"I think it is pretty important to drop ffi if possible","date":"2012-08-30T17:22:09.121Z","type":"message"}
{"nick":"creationix","message":"why is that?","date":"2012-08-30T17:22:17.973Z","type":"message"}
{"nick":"kristate","message":"ffi is great for storing structs of data -- say image processing and the like","date":"2012-08-30T17:22:27.177Z","type":"message"}
{"nick":"kristate","message":"but not so great for interacting with cfunctions","date":"2012-08-30T17:22:37.325Z","type":"message"}
{"nick":"creationix","message":"I thought luajit was different in that regard","date":"2012-08-30T17:22:52.868Z","type":"message"}
{"nick":"creationix","message":"where ffi is actually faster than the C api","date":"2012-08-30T17:23:01.487Z","type":"message"}
{"nick":"creationix","message":"because it's tightly integrated into the jit","date":"2012-08-30T17:23:13.806Z","type":"message"}
{"nick":"kristate","message":"ffi works directly with luajit","date":"2012-08-30T17:23:17.039Z","type":"message"}
{"nick":"kristate","message":"so it's good for structs","date":"2012-08-30T17:23:23.968Z","type":"message"}
{"nick":"creationix","message":"for sure, it's a great ctype system","date":"2012-08-30T17:23:48.812Z","type":"message"}
{"nick":"creationix","message":"anything where you have arrays of structs, it's going to be super fast","date":"2012-08-30T17:24:08.172Z","type":"message"}
{"nick":"kristate","message":"either way, we would like to get some sort of shared API under way","date":"2012-08-30T17:24:39.851Z","type":"message"}
{"nick":"creationix","message":"I'm trying to make my http layer agnostic about the streams under it","date":"2012-08-30T17:25:01.119Z","type":"message"}
{"nick":"kristate","message":"I assume that luvit is going to keep its buffers implemented in ffi?","date":"2012-08-30T17:25:06.104Z","type":"message"}
{"nick":"creationix","message":"I didn't specify how the streams worked or what their binary data type was","date":"2012-08-30T17:25:15.573Z","type":"message"}
{"nick":"creationix","message":"kristate: not sure.  The current ffi based buffer was just a hack, not something I intended to keep","date":"2012-08-30T17:25:41.034Z","type":"message"}
{"nick":"kristate","message":"streams API> I think that is the most important part. if at any point the buffer gets melded into a string we lose speed","date":"2012-08-30T17:26:13.365Z","type":"message"}
{"nick":"creationix","message":"personally I've only ever used strings in my luvit apps","date":"2012-08-30T17:26:14.878Z","type":"message"}
{"nick":"creationix","message":"so in the stream interface I just documented, the suggested data type is string, but it's not required","date":"2012-08-30T17:26:51.386Z","type":"message"}
{"nick":"creationix","message":"it can be cBuffer slices","date":"2012-08-30T17:27:00.959Z","type":"message"}
{"nick":"kristate","message":"it should be cBuffer slices","date":"2012-08-30T17:27:08.481Z","type":"message"}
{"nick":"creationix","message":"or ffi cdata or tables, or whatever","date":"2012-08-30T17:27:09.501Z","type":"message"}
{"nick":"creationix","message":"if we adopt cBuffers then it can be that","date":"2012-08-30T17:27:34.717Z","type":"message"}
{"nick":"creationix","message":"and then only use strings for text","date":"2012-08-30T17:27:39.369Z","type":"message"}
{"nick":"creationix","message":"I'm not opposed to it, I just haven't had time to explore that area properly","date":"2012-08-30T17:28:14.850Z","type":"message"}
{"nick":"kristate","message":"okay -- we are making leaping progress over at lev","date":"2012-08-30T17:28:40.605Z","type":"message"}
{"nick":"creationix","message":"did you see how fast my new \"web\" module was?","date":"2012-08-30T17:28:54.322Z","type":"message"}
{"nick":"kristate","message":"I think you mentioned 10x ?","date":"2012-08-30T17:29:04.411Z","type":"message"}
{"nick":"creationix","message":"using strings and naive memory management, I was getting ~50K/second","date":"2012-08-30T17:29:13.311Z","type":"message"}
{"nick":"`3rdEden","reason":"Ping timeout: 264 seconds","date":"2012-08-30T17:29:14.334Z","type":"quit"}
{"nick":"creationix","message":"more like 20x","date":"2012-08-30T17:29:15.033Z","type":"message"}
{"nick":"creationix","message":"50,000 reqs/second","date":"2012-08-30T17:29:34.015Z","type":"message"}
{"nick":"kristate","message":"was this hello world, or another application?","date":"2012-08-30T17:29:50.289Z","type":"message"}
{"nick":"creationix","message":"hello world","date":"2012-08-30T17:29:57.242Z","type":"message"}
{"nick":"kristate","message":"it's not just speed -- memory management is also important.","date":"2012-08-30T17:30:06.875Z","type":"message"}
{"nick":"creationix","message":"stock luvit was only getting around 3K","date":"2012-08-30T17:30:11.441Z","type":"message"}
{"nick":"`3rdEden","date":"2012-08-30T17:30:21.265Z","type":"join"}
{"nick":"creationix","message":"true, but luvit is already world ahead of node.js in memory management","date":"2012-08-30T17:30:30.648Z","type":"message"}
{"nick":"kristate","message":"as well as GC issues -- the more objects used, the more GC has to work","date":"2012-08-30T17:30:34.660Z","type":"message"}
{"nick":"kristate","message":"I think so -- luajit is a huge advantage","date":"2012-08-30T17:30:49.071Z","type":"message"}
{"nick":"creationix","message":"luvit apps are generally 20x less ram than nodes apps","date":"2012-08-30T17:31:08.092Z","type":"message"}
{"nick":"creationix","message":"but currently they are a lot slower","date":"2012-08-30T17:31:16.191Z","type":"message"}
{"nick":"kristate","message":"I think that we can get things sped up here :)","date":"2012-08-30T17:31:30.353Z","type":"message"}
{"nick":"creationix","message":"so I'm working on fixing the api and improving the speed","date":"2012-08-30T17:31:39.172Z","type":"message"}
{"nick":"kristate","message":"yes -- I like your thinking re: API","date":"2012-08-30T17:31:47.536Z","type":"message"}
{"nick":"creationix","message":"we can do smart memory management as well, it doesn't conflict at all with my efforts","date":"2012-08-30T17:31:58.933Z","type":"message"}
{"nick":"kristate","message":"let me take care of some of the core APIs regarding streams","date":"2012-08-30T17:32:02.638Z","type":"message"}
{"nick":"creationix","message":"combined it should be blazing fast","date":"2012-08-30T17:32:05.764Z","type":"message"}
{"nick":"creationix","message":"do you understand what changed between old node style readable streams and the proposed readable streams?","date":"2012-08-30T17:32:44.783Z","type":"message"}
{"nick":"creationix","message":"libuv's api is still like the old API for sockets","date":"2012-08-30T17:33:03.588Z","type":"message"}
{"nick":"creationix","message":"but it should be a natural fit for file streams","date":"2012-08-30T17:33:11.046Z","type":"message"}
{"nick":"creationix","message":"since file streams are just built around reading chunks out of an fd anyway","date":"2012-08-30T17:33:24.484Z","type":"message"}
{"nick":"kristate","message":"I see that you are making another call to stream.read(onRead) inside of the read?","date":"2012-08-30T17:34:10.736Z","type":"message"}
{"nick":"creationix","message":"right, that's the recursive loop","date":"2012-08-30T17:34:22.453Z","type":"message"}
{"nick":"kristate","message":"that might not be a good idea if you have many events waiting for IO","date":"2012-08-30T17:34:32.502Z","type":"message"}
{"nick":"creationix","message":"but it won't blow the stack because the callback is on a fresh stack","date":"2012-08-30T17:34:33.243Z","type":"message"}
{"nick":"kristate","message":"it could lead to starvation","date":"2012-08-30T17:34:47.106Z","type":"message"}
{"nick":"creationix","message":"and using coroutines it can be a simple while loop","date":"2012-08-30T17:34:49.981Z","type":"message"}
{"nick":"creationix","message":"it shouldn't lead to starvation, I expect the callback to be called later","date":"2012-08-30T17:35:12.637Z","type":"message"}
{"nick":"kristate","message":"it will be called later, but later is better when you have many clients waiting to connect","date":"2012-08-30T17:35:34.147Z","type":"message"}
{"nick":"creationix","message":"read just queues a listener for the next data event (and unpauses the stream if it was paused)","date":"2012-08-30T17:35:40.587Z","type":"message"}
{"nick":"creationix","message":"libuv handles that level","date":"2012-08-30T17:36:03.203Z","type":"message"}
{"nick":"creationix","message":"all I can do is read_start and register a data handler","date":"2012-08-30T17:36:16.145Z","type":"message"}
{"nick":"kristate","message":"right, but it does that anyways?","date":"2012-08-30T17:36:18.983Z","type":"message"}
{"nick":"kristate","message":"there is no need to call read again","date":"2012-08-30T17:36:26.157Z","type":"message"}
{"nick":"kristate","message":"this is why buffering is important","date":"2012-08-30T17:36:35.595Z","type":"message"}
{"nick":"creationix","message":"the reason you call read again is because the callback is one-shot","date":"2012-08-30T17:36:49.289Z","type":"message"}
{"nick":"creationix","message":"it won't be called again","date":"2012-08-30T17:36:54.740Z","type":"message"}
{"nick":"creationix","message":"each call to read triggers one onRead callback event","date":"2012-08-30T17:37:12.656Z","type":"message"}
{"nick":"creationix","message":"by not calling read recursively, you implicitly pause the stream","date":"2012-08-30T17:37:29.418Z","type":"message"}
{"nick":"kristate","message":"in what event is this preferred?","date":"2012-08-30T17:39:14.421Z","type":"message"}
{"nick":"creationix","message":"when using coroutines it allows me to read from a file using a while loop","date":"2012-08-30T17:39:54.131Z","type":"message"}
{"nick":"creationix","message":"also the implicit pausing is essential to layered middleware modules in http requests","date":"2012-08-30T17:40:13.183Z","type":"message"}
{"nick":"creationix","message":"currently the consumer of the stream has to explicitly call .pause and .resume to handle back-pressure","date":"2012-08-30T17:40:46.993Z","type":"message"}
{"nick":"kristate","message":"I don't know if pausing a stream is a good idea -- does the data get buffered and replayed later?","date":"2012-08-30T17:40:55.564Z","type":"message"}
{"nick":"kristate","message":"or would it tell a client to stop talking?","date":"2012-08-30T17:41:20.143Z","type":"message"}
{"nick":"creationix","message":"yes buffered and replayed later, but also the input source is paused","date":"2012-08-30T17:41:22.472Z","type":"message"}
{"nick":"kristate","message":"or does it buffer at the system?","date":"2012-08-30T17:41:27.561Z","type":"message"}
{"nick":"creationix","message":"both","date":"2012-08-30T17:41:32.168Z","type":"message"}
{"nick":"kristate","message":"where is it buffered?","date":"2012-08-30T17:41:35.308Z","type":"message"}
{"nick":"creationix","message":"it buffers only as much as needed","date":"2012-08-30T17:41:40.675Z","type":"message"}
{"nick":"creationix","message":"depends on what stream it is","date":"2012-08-30T17:41:44.742Z","type":"message"}
{"nick":"creationix","message":"anyway, I need to take my wife to the doctor, I'll be back later","date":"2012-08-30T17:41:59.390Z","type":"message"}
{"nick":"kristate","message":"in your http scenario","date":"2012-08-30T17:42:02.770Z","type":"message"}
{"nick":"kristate","message":"okay, be safe.","date":"2012-08-30T17:42:07.796Z","type":"message"}
{"nick":"creationix","message":"respond to the email if you want","date":"2012-08-30T17:42:23.825Z","type":"message"}
{"nick":"kristate","message":"thanks","date":"2012-08-30T17:42:33.134Z","type":"message"}
{"nick":"etandel","reason":"Quit: Changing server","date":"2012-08-30T17:43:41.631Z","type":"quit"}
{"nick":"etandel","date":"2012-08-30T18:10:26.427Z","type":"join"}
{"nick":"joshthecoder","date":"2012-08-30T18:15:48.278Z","type":"join"}
{"nick":"indexzero","date":"2012-08-30T18:28:11.992Z","type":"join"}
{"nick":"luastoned1","date":"2012-08-30T18:33:12.793Z","type":"join"}
{"nick":"luastoned","reason":"Ping timeout: 264 seconds","date":"2012-08-30T18:35:50.330Z","type":"quit"}
{"nick":"dvv","date":"2012-08-30T18:39:02.548Z","type":"join"}
{"nick":"ddd_","date":"2012-08-30T18:40:29.069Z","type":"join"}
{"nick":"indexzero_","date":"2012-08-30T18:44:18.494Z","type":"join"}
{"nick":"indexzero","reason":"Ping timeout: 252 seconds","date":"2012-08-30T18:46:21.769Z","type":"quit"}
{"nick":"indexzero_","new_nick":"indexzero","date":"2012-08-30T18:46:22.006Z","type":"nick"}
{"nick":"ddd_","reason":"Quit: Page closed","date":"2012-08-30T18:46:59.113Z","type":"quit"}
{"nick":"indexzero","reason":"Quit: indexzero","date":"2012-08-30T19:38:03.384Z","type":"quit"}
{"nick":"`3rdEden","reason":"Quit: Leaving...","date":"2012-08-30T19:50:49.374Z","type":"quit"}
{"nick":"mmalecki[busy]","reason":"Ping timeout: 245 seconds","date":"2012-08-30T20:00:58.179Z","type":"quit"}
{"nick":"FireFly","reason":"Ping timeout: 245 seconds","date":"2012-08-30T20:18:03.171Z","type":"quit"}
{"nick":"FireFly","date":"2012-08-30T20:27:36.716Z","type":"join"}
{"nick":"etandel","reason":"Ping timeout: 245 seconds","date":"2012-08-30T20:47:13.121Z","type":"quit"}
{"nick":"etandel","date":"2012-08-30T20:49:03.547Z","type":"join"}
{"nick":"luastoned1","reason":"Quit: Leaving.","date":"2012-08-30T20:51:18.142Z","type":"quit"}
{"nick":"FireFly","reason":"Changing host","date":"2012-08-30T21:02:16.351Z","type":"quit"}
{"nick":"FireFly","date":"2012-08-30T21:02:16.590Z","type":"join"}
{"nick":"kristate","reason":"Ping timeout: 245 seconds","date":"2012-08-30T21:03:09.638Z","type":"quit"}
{"nick":"mmalecki[busy]","date":"2012-08-30T21:07:43.667Z","type":"join"}
{"nick":"creationix","message":"back","date":"2012-08-30T21:10:40.354Z","type":"message"}
{"nick":"mmalecki[busy]","reason":"Ping timeout: 260 seconds","date":"2012-08-30T21:13:13.322Z","type":"quit"}
{"nick":"creationix","message":"API design question","date":"2012-08-30T21:25:14.879Z","type":"message"}
{"nick":"creationix","message":"should streams be Emitters or not require that","date":"2012-08-30T21:25:27.868Z","type":"message"}
{"nick":"creationix","message":"with the new readable and writable APIs, I only use the emitter to emit \"error\" events","date":"2012-08-30T21:25:46.740Z","type":"message"}
{"nick":"creationix","message":"I could instead just move the error reporting to the callbacks","date":"2012-08-30T21:25:57.321Z","type":"message"}
{"nick":"creationix","message":"https://gist.github.com/2dbc9a7510dd21cd2c1c","date":"2012-08-30T21:27:37.790Z","type":"message"}
{"nick":"creationix","message":"hmm, playing with fibers, it's still painful https://gist.github.com/2dbc9a7510dd21cd2c1c#file_test.lua","date":"2012-08-30T21:52:44.874Z","type":"message"}
{"nick":"creationix","message":"more lines setting up the wrappings than using them","date":"2012-08-30T21:52:56.275Z","type":"message"}
{"nick":"creationix","message":"though, if we switched to continuable style, it would be much more elegant","date":"2012-08-30T21:53:08.130Z","type":"message"}
{"nick":"creationix","message":"and not require wrapping","date":"2012-08-30T21:53:11.855Z","type":"message"}
{"nick":"creationix","message":"local fs = wait(fs.open(\"file.log\", \"r\", \"0666\"))","date":"2012-08-30T21:53:44.548Z","type":"message"}
{"nick":"creationix","message":"or without coroutined","date":"2012-08-30T21:53:52.979Z","type":"message"}
{"nick":"creationix","message":"fs.open(\"file.log\", \"r\", \"0666\")(function (err, fd) end )","date":"2012-08-30T21:54:10.286Z","type":"message"}
{"nick":"etandel","reason":"Ping timeout: 244 seconds","date":"2012-08-30T23:11:25.413Z","type":"quit"}
{"nick":"mmalecki[busy]","date":"2012-08-30T23:24:26.923Z","type":"join"}
{"nick":"jbueza","reason":"Quit: jbueza","date":"2012-08-30T23:42:17.311Z","type":"quit"}
