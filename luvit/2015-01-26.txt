{"nick":"dan336","date":"2015-01-26T00:52:20.275Z","type":"join"}
{"nick":"UniOn","reason":"Remote host closed the connection","date":"2015-01-26T01:23:39.128Z","type":"quit"}
{"nick":"a_le","reason":"Remote host closed the connection","date":"2015-01-26T01:40:09.157Z","type":"quit"}
{"nick":"blessYahu","date":"2015-01-26T01:48:08.404Z","type":"join"}
{"nick":"DarkGod","reason":"Ping timeout: 256 seconds","date":"2015-01-26T01:54:23.244Z","type":"quit"}
{"nick":"dan336","reason":"Quit: Leaving.","date":"2015-01-26T02:14:39.855Z","type":"quit"}
{"nick":"a___","reason":"Remote host closed the connection","date":"2015-01-26T02:41:47.894Z","type":"quit"}
{"nick":"a__","date":"2015-01-26T02:43:09.352Z","type":"join"}
{"nick":"a_le","date":"2015-01-26T03:40:44.618Z","type":"join"}
{"nick":"blessYahu","reason":"Ping timeout: 244 seconds","date":"2015-01-26T05:21:15.258Z","type":"quit"}
{"nick":"DarkGod","date":"2015-01-26T08:11:44.499Z","type":"join"}
{"nick":"torpor","date":"2015-01-26T11:21:12.878Z","type":"join"}
{"nick":"UniOn","date":"2015-01-26T11:47:21.563Z","type":"join"}
{"nick":"torpor","reason":"Quit: Leaving.","date":"2015-01-26T12:37:50.678Z","type":"quit"}
{"nick":"avidal","message":"For example, each ternary expression (?:) generates 4 function calls and a closure - too lazy to implement anything more clever :)","date":"2015-01-26T14:38:26.655Z","type":"message"}
{"nick":"avidal","message":"nice :)","date":"2015-01-26T14:38:29.225Z","type":"message"}
{"nick":"creationix","message":"good morning all","date":"2015-01-26T14:59:59.680Z","type":"message"}
{"nick":"creationix","message":"I hope everyone had a great weekend.  I got to spend lots of time taking care of a sick toddler while my wife took care of the new baby","date":"2015-01-26T15:00:28.941Z","type":"message"}
{"nick":"avidal","message":"Don't get me wrong, I love my son, but one is enough for me :)","date":"2015-01-26T15:05:15.407Z","type":"message"}
{"nick":"creationix","message":"I love my kids, not complaining at all.  Just keeps me busy","date":"2015-01-26T15:08:30.684Z","type":"message"}
{"nick":"rphillips_","message":"good morning","date":"2015-01-26T15:13:08.530Z","type":"message"}
{"nick":"rphillips_","new_nick":"rphillips","date":"2015-01-26T15:19:18.224Z","type":"nick"}
{"nick":"dan336","date":"2015-01-26T15:27:09.288Z","type":"join"}
{"nick":"rphillips","reason":"Changing host","date":"2015-01-26T15:27:16.762Z","type":"quit"}
{"nick":"rphillips","date":"2015-01-26T15:27:16.912Z","type":"join"}
{"nick":"endou______","date":"2015-01-26T15:42:03.963Z","type":"quit"}
{"nick":"endou______","date":"2015-01-26T15:42:22.311Z","type":"join"}
{"nick":"rphillips","message":"creationix: i have virgo-base layed out like this https://github.com/virgo-agent-toolkit/virgo-base-agent/tree/luvi-up","date":"2015-01-26T16:04:08.109Z","type":"message"}
{"nick":"rphillips","message":"i want to add this project to lit","date":"2015-01-26T16:04:19.399Z","type":"message"}
{"nick":"rphillips","message":"looks like lit add in the main project wants the project.lua in the root of the tree","date":"2015-01-26T16:04:51.304Z","type":"message"}
{"nick":"creationix","message":"which files need to be in the package?","date":"2015-01-26T16:04:51.577Z","type":"message"}
{"nick":"rphillips","message":"perhaps I should refactor the packaging scripts into a different lit project","date":"2015-01-26T16:05:23.149Z","type":"message"}
{"nick":"rphillips","message":"virgo-packaging","date":"2015-01-26T16:05:37.525Z","type":"message"}
{"nick":"creationix","message":"currently lit is optimized towards tiny packages with the minimal files published","date":"2015-01-26T16:06:37.406Z","type":"message"}
{"nick":"creationix","message":"if I were to publish lit or luvit, I would `lit publish app`","date":"2015-01-26T16:07:12.797Z","type":"message"}
{"nick":"rphillips","message":"k","date":"2015-01-26T16:07:25.023Z","type":"message"}
{"nick":"creationix","message":"maybe we should define a webpage property to point to the github repo for the full set of files and README","date":"2015-01-26T16:07:45.429Z","type":"message"}
{"nick":"creationix","message":"when we get around to making a lit http frontend that will make showing docs easier","date":"2015-01-26T16:08:06.295Z","type":"message"}
{"nick":"rphillips","message":"yeah, that would be nice","date":"2015-01-26T16:08:20.268Z","type":"message"}
{"nick":"creationix","message":"npm has some defacto properties right?  like “repo” and “homepage” I think","date":"2015-01-26T16:08:40.505Z","type":"message"}
{"nick":"rphillips","message":"looks like it's repository","date":"2015-01-26T16:11:41.596Z","type":"message"}
{"nick":"rphillips","message":"homepage exists","date":"2015-01-26T16:11:41.746Z","type":"message"}
{"nick":"creationix","message":"I see, npm assumes github for “repository” like “strongloop/express”.","date":"2015-01-26T16:14:30.311Z","type":"message"}
{"nick":"creationix","message":"https://github.com/strongloop/express/blob/master/package.json","date":"2015-01-26T16:14:33.887Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-26T16:14:53.012Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1485 (luvi-up - 1de79f0 : Ryan Phillips): The build passed.","date":"2015-01-26T16:14:53.161Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/50ea52c2d674...1de79f0297e6","date":"2015-01-26T16:14:53.161Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/48360155","date":"2015-01-26T16:14:53.161Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-26T16:14:53.162Z","type":"part"}
{"nick":"DarkGod","reason":"Quit: Leaving","date":"2015-01-26T16:15:46.389Z","type":"quit"}
{"nick":"rphillips","message":"creationix: are all these deps on github? https://github.com/luvit/lit/blob/master/app/package.lua","date":"2015-01-26T16:18:48.857Z","type":"message"}
{"nick":"creationix","message":"yes, but not in their own repos","date":"2015-01-26T16:19:04.577Z","type":"message"}
{"nick":"creationix","message":"the lit repo *is* their source tree","date":"2015-01-26T16:19:12.048Z","type":"message"}
{"nick":"rphillips","message":"ah hah","date":"2015-01-26T16:19:25.009Z","type":"message"}
{"nick":"imzyxwvu","date":"2015-01-26T16:22:01.240Z","type":"join"}
{"nick":"imzyxwvu","message":"i see luv directly pass the string buffer inside Lua VM to the uv_buf_t for uv_write. https://github.com/luvit/luv/blob/master/src/stream.c#L165","date":"2015-01-26T16:22:53.188Z","type":"message"}
{"nick":"imzyxwvu","message":"i talked with libuv contributors and they said the buffer for uv_write can only be freed after the callback is called.","date":"2015-01-26T16:23:02.605Z","type":"message"}
{"nick":"imzyxwvu","message":"so does it matter if Lua GC recycles the string before the the callback is called?","date":"2015-01-26T16:23:30.185Z","type":"message"}
{"nick":"rphillips","message":"afaik, we ref the data buffer","date":"2015-01-26T16:23:36.392Z","type":"message"}
{"nick":"rphillips","message":"creationix: ?","date":"2015-01-26T16:23:40.734Z","type":"message"}
{"nick":"rphillips","message":"imzyxwvu: https://github.com/luvit/luv/blob/master/src/stream.c#L176","date":"2015-01-26T16:26:05.935Z","type":"message"}
{"nick":"creationix","message":"yeah, it should be good.  The luv unit tests gc like crazy to work out that kind of bugs","date":"2015-01-26T16:26:39.591Z","type":"message"}
{"nick":"creationix","message":"the only open question I still have is if doing longjmp inside uv_run is safe","date":"2015-01-26T16:26:59.808Z","type":"message"}
{"nick":"creationix","message":"I never got an answer from #libuv and looking at the code, it *seems* safe.  Plus I’ve never had any issues with it","date":"2015-01-26T16:27:21.965Z","type":"message"}
{"nick":"avidal","message":"if i wanted to help with luvit 2.0 (which i guess comprises luv, luvi, luvit, and lit?) where should I start? (note, i'm not very good with C)","date":"2015-01-26T16:27:52.327Z","type":"message"}
{"nick":"imzyxwvu","message":"longjmp seems not often used","date":"2015-01-26T16:27:52.658Z","type":"message"}
{"nick":"imzyxwvu","message":"but lua used it everywhere as a solution for the expection system. libuv documents didn't say anything about longjmp. (this is what i could expect because it is hardly used)","date":"2015-01-26T16:29:58.514Z","type":"message"}
{"nick":"creationix","message":"imzyxwvu: I wouldn’t think it’s much different than nesting uv_run calls which I also do a lot without issue","date":"2015-01-26T16:31:02.757Z","type":"message"}
{"nick":"creationix","message":"the inner call blocks the outer loop and mutates the same global state","date":"2015-01-26T16:31:23.932Z","type":"message"}
{"nick":"creationix","message":"(assuming there is any state in uv_run other than program counter)","date":"2015-01-26T16:31:43.917Z","type":"message"}
{"nick":"imzyxwvu","message":"but libuv documents didn't say uv_run is longjmp-safe, so I think using pcall to call callbacks is safer.","date":"2015-01-26T16:32:36.533Z","type":"message"}
{"nick":"imzyxwvu","message":"I readed libuv uv_run code too and didn't find anything that seems to be unsafe for longjmps, but if libuv changed later, it might become unsafe","date":"2015-01-26T16:33:41.381Z","type":"message"}
{"nick":"creationix","message":"right, it *seems* safe for now.  More important to me is the error handling semantics of luv","date":"2015-01-26T16:34:19.891Z","type":"message"}
{"nick":"creationix","message":"I sometimes see cases where lua exceptions silently go away","date":"2015-01-26T16:34:34.814Z","type":"message"}
{"nick":"imzyxwvu","message":"for example, if it allocated some memory before a callback and free them after a callback, and the callback long jumped, there would be a memory leak bug.","date":"2015-01-26T16:34:51.149Z","type":"message"}
{"nick":"creationix","message":"imzyxwvu: yes, but libuv will later call your callback in another uv_run","date":"2015-01-26T16:35:33.938Z","type":"message"}
{"nick":"imzyxwvu","message":"what did you mean? what does that another uv_run refer to?","date":"2015-01-26T16:37:49.032Z","type":"message"}
{"nick":"imzyxwvu","message":"i said lua_pcall would add some difficulties when debugging because it didn't collect stack traceback. later i found i was wrong. it just didn't do that but it can do that.","date":"2015-01-26T16:38:15.017Z","type":"message"}
{"nick":"creationix","message":"if lua does a longjmp inside uv_run, then either the process will exit or some code will catch the lua “exception”","date":"2015-01-26T16:39:40.829Z","type":"message"}
{"nick":"creationix","message":"in all cases in luvit, when I catch the lua exception, I call uv_run again to resume the event loop","date":"2015-01-26T16:40:02.551Z","type":"message"}
{"nick":"creationix","message":"(or I had uv_run nested inside another which has the same effect)","date":"2015-01-26T16:40:17.861Z","type":"message"}
{"nick":"creationix","message":"one idea I had is to add an error handling callback to uv.run()","date":"2015-01-26T16:40:52.798Z","type":"message"}
{"nick":"creationix","message":"but then, what if there is an error in that callback?","date":"2015-01-26T16:41:12.178Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-26T16:41:16.868Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvit#1487 (luvi-up - 02aaff5 : Tim Caswell): The build passed.","date":"2015-01-26T16:41:17.012Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvit/compare/1de79f0297e6...02aaff56ca03","date":"2015-01-26T16:41:17.013Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvit/builds/48363527","date":"2015-01-26T16:41:17.013Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-26T16:41:17.014Z","type":"part"}
{"nick":"creationix","message":"any lua code *can* crash","date":"2015-01-26T16:41:20.961Z","type":"message"}
{"nick":"imzyxwvu","message":"just like process.on('error') ?","date":"2015-01-26T16:41:28.069Z","type":"message"}
{"nick":"creationix","message":"more or less","date":"2015-01-26T16:41:38.870Z","type":"message"}
{"nick":"creationix","message":"except uv.run is explicit in luv and implicit in node","date":"2015-01-26T16:41:49.276Z","type":"message"}
{"nick":"imzyxwvu","message":"i have a solution: if there is an lua error in the error handler, also catch it and stop the libuv uv_run with an api. then rethrow it after uv_run returns.","date":"2015-01-26T16:42:52.653Z","type":"message"}
{"nick":"imzyxwvu","message":"but it is ugly... i think.","date":"2015-01-26T16:43:20.055Z","type":"message"}
{"nick":"creationix","message":"not to mention tricky to implement","date":"2015-01-26T16:43:29.539Z","type":"message"}
{"nick":"imzyxwvu","message":"so could we ask the libuv people to keep uv_run longjmp-safe?","date":"2015-01-26T16:44:47.717Z","type":"message"}
{"nick":"creationix","message":"that should be fine.  It’s not my main concern","date":"2015-01-26T16:45:24.428Z","type":"message"}
{"nick":"imzyxwvu","message":"so what's the main concern?","date":"2015-01-26T16:46:09.092Z","type":"message"}
{"nick":"creationix","message":"I want sane error handling at the lua level.  I’m not concerned about libuv getting into some invalid internal state","date":"2015-01-26T16:47:01.185Z","type":"message"}
{"nick":"creationix","message":"I’m 95% sure uv_run is longjmp safe and will stay that way.  if you want to get them to support that, that’s fine","date":"2015-01-26T16:48:35.343Z","type":"message"}
{"nick":"imzyxwvu","message":"i would talk with them later about this.","date":"2015-01-26T16:49:50.009Z","type":"message"}
{"nick":"imzyxwvu","message":"actually not just longjmps... C++ expections might also jump out of uv_run.","date":"2015-01-26T16:51:01.333Z","type":"message"}
{"nick":"creationix","message":"true, all the more reason for them to support it","date":"2015-01-26T16:51:29.667Z","type":"message"}
{"nick":"imzyxwvu","message":"i will go to #libuv to ask them about this.","date":"2015-01-26T16:51:55.785Z","type":"message"}
{"nick":"imzyxwvu","date":"2015-01-26T17:26:52.228Z","type":"part"}
{"nick":"rphillips","message":"creationix: specifying the luvi/luvit version would be interesting...","date":"2015-01-26T17:33:48.636Z","type":"message"}
{"nick":"rphillips","message":"in the monitoring agent i'll need to package the luvit files as a layer","date":"2015-01-26T17:34:06.911Z","type":"message"}
{"nick":"creationix","message":"good idea","date":"2015-01-26T17:34:12.004Z","type":"message"}
{"nick":"creationix","message":"luvi is semver more-or-less","date":"2015-01-26T17:34:30.999Z","type":"message"}
{"nick":"rphillips","message":"so I have virgo-base checked into lit","date":"2015-01-26T17:34:49.781Z","type":"message"}
{"nick":"creationix","message":"nice","date":"2015-01-26T17:34:58.148Z","type":"message"}
{"nick":"creationix","message":"what did you think of my idea to distribute lit binaries instead of luvit binaries","date":"2015-01-26T17:35:12.283Z","type":"message"}
{"nick":"avidal","message":"please make a luvit.io/get-lit.sh :)","date":"2015-01-26T17:35:21.259Z","type":"message"}
{"nick":"rphillips","message":"the project has a deps/ folder with the pin for luvit","date":"2015-01-26T17:35:29.576Z","type":"message"}
{"nick":"creationix","message":"and add a lit command to read a package.lua and build a binary?","date":"2015-01-26T17:35:45.208Z","type":"message"}
{"nick":"rphillips","message":"+1000","date":"2015-01-26T17:35:49.968Z","type":"message"}
{"nick":"rphillips","message":"package_type: \"luvit\" or \"luvi\"","date":"2015-01-26T17:36:25.882Z","type":"message"}
{"nick":"creationix","message":"like lib vs app?","date":"2015-01-26T17:36:47.324Z","type":"message"}
{"nick":"rphillips","message":"right... but it'll need to be smart enough to grab the luvit layer as well","date":"2015-01-26T17:37:05.431Z","type":"message"}
{"nick":"creationix","message":"well my plan was to put all of luvit in lit and not use the layering system","date":"2015-01-26T17:37:23.031Z","type":"message"}
{"nick":"rphillips","message":"that works","date":"2015-01-26T17:37:34.138Z","type":"message"}
{"nick":"creationix","message":"it’s a different style for sure, but I prefer it personally","date":"2015-01-26T17:37:54.684Z","type":"message"}
{"nick":"rphillips","message":"should work well","date":"2015-01-26T17:38:04.205Z","type":"message"}
{"nick":"creationix","message":"then luvit could be a meta-package of node.js apis for lit","date":"2015-01-26T17:38:13.286Z","type":"message"}
{"nick":"creationix","message":"possibly renamed to node.lua (or io.lua)","date":"2015-01-26T17:38:30.117Z","type":"message"}
{"nick":"rphillips","message":"yeah","date":"2015-01-26T17:38:41.452Z","type":"message"}
{"nick":"avidal","message":"So luv has no deps (other than libuv and lua); luvi has only a dep on luv; lit is used to manage packages and build binaries (does it use luvi to make the binaries, or is that part of luvi moved to lit?) and comes with the require system","date":"2015-01-26T17:39:17.877Z","type":"message"}
{"nick":"creationix","message":"luvi has some C deps, depending on the flavor","date":"2015-01-26T17:39:39.131Z","type":"message"}
{"nick":"creationix","message":"miniz is bundled always, zlib, openssl, etc are optinoal","date":"2015-01-26T17:39:48.443Z","type":"message"}
{"nick":"creationix","message":"though lit requires openssl","date":"2015-01-26T17:40:05.052Z","type":"message"}
{"nick":"avidal","message":"miniz is used to make the archive that's sideloaded into the generated binary right?","date":"2015-01-26T17:40:10.414Z","type":"message"}
{"nick":"creationix","message":"so anything lit based will have the fat version of luvi","date":"2015-01-26T17:40:16.369Z","type":"message"}
{"nick":"creationix","message":"right, miniz was there before zlib","date":"2015-01-26T17:40:37.301Z","type":"message"}
{"nick":"creationix","message":"if miniz wasn’t so tiny, I’d be motivated to deduplicate functionality when zlib is enabled","date":"2015-01-26T17:41:06.699Z","type":"message"}
{"nick":"rphillips","message":"looks like the lua-openssl guy things the multi ssl:read() may be a bug on his side","date":"2015-01-26T17:41:06.843Z","type":"message"}
{"nick":"avidal","message":"And I'm guessing the expectation is that lit could be used to manage and resolve modules for standard lua/luajit projects?","date":"2015-01-26T17:41:12.308Z","type":"message"}
{"nick":"creationix","message":"avidal: only if they use lit’s require system (aka luvit’s require system)","date":"2015-01-26T17:41:43.514Z","type":"message"}
{"nick":"creationix","message":"but that’s something that could be done.  I could make the require library use lua’s internal I/O instead of libuv","date":"2015-01-26T17:42:23.038Z","type":"message"}
{"nick":"creationix","message":"it’s blocking I/O already anyway","date":"2015-01-26T17:42:31.633Z","type":"message"}
{"nick":"avidal","message":"When you use lit to install deps they just get dropped into ./modules after reading from the local litdb?","date":"2015-01-26T17:42:33.116Z","type":"message"}
{"nick":"creationix","message":"avidal: right, but it’s two-layer","date":"2015-01-26T17:42:46.088Z","type":"message"}
{"nick":"creationix","message":"so `lit install creationix/git` drops modules/creationix/git.lua (since git is a single-file module)","date":"2015-01-26T17:43:04.389Z","type":"message"}
{"nick":"creationix","message":"technically, you could put any language module in there as long as your require system knows to look in modules/*/*","date":"2015-01-26T17:43:52.838Z","type":"message"}
{"nick":"avidal","message":"Right, but as long as I have the lit loader installed before requiring creationix/git..yeah","date":"2015-01-26T17:43:59.729Z","type":"message"}
{"nick":"creationix","message":"just like people use npm for non node modules","date":"2015-01-26T17:44:03.724Z","type":"message"}
{"nick":"avidal","message":"So you could `lit install creationix/git` and then just use lua5.1 if you first register the lit-loader","date":"2015-01-26T17:44:20.834Z","type":"message"}
{"nick":"creationix","message":"“modules” is more portable than “node_modules\"","date":"2015-01-26T17:44:23.129Z","type":"message"}
{"nick":"creationix","message":";)","date":"2015-01-26T17:44:24.584Z","type":"message"}
{"nick":"creationix","message":"well, since creationix/git doesn’t have any recursive dependencies, you don’t even need a custom require","date":"2015-01-26T17:44:46.038Z","type":"message"}
{"nick":"creationix","message":"just need to add modules/creationix to your lua path and require(“git”)","date":"2015-01-26T17:45:00.112Z","type":"message"}
{"nick":"avidal","message":"local git = require('modules.creationix.git'), yeah","date":"2015-01-26T17:45:00.416Z","type":"message"}
{"nick":"creationix","message":"or that","date":"2015-01-26T17:45:04.316Z","type":"message"}
{"nick":"avidal","message":"or what","date":"2015-01-26T17:45:05.481Z","type":"message"}
{"nick":"avidal","message":"shit","date":"2015-01-26T17:45:07.522Z","type":"message"}
{"nick":"avidal","message":"or that i meant","date":"2015-01-26T17:45:08.865Z","type":"message"}
{"nick":"creationix","message":"probably just add modules","date":"2015-01-26T17:45:27.123Z","type":"message"}
{"nick":"creationix","message":"then the require will match what lit expects mostly","date":"2015-01-26T17:45:33.620Z","type":"message"}
{"nick":"creationix","message":"and since lit will be a self-contained binary, it will be easy to distributed","date":"2015-01-26T17:45:51.216Z","type":"message"}
{"nick":"creationix","message":"*distribute","date":"2015-01-26T17:45:53.880Z","type":"message"}
{"nick":"avidal","message":"so ultimately what i'm getting at, is that should package.lua have an engine(s) property that dictates if it requires running inside luvi? I suppose modules should be completely oblivious to the runtime, in general","date":"2015-01-26T17:45:56.150Z","type":"message"}
{"nick":"creationix","message":"right, I’m fine if a module specifies a semver range for luvi.","date":"2015-01-26T17:46:24.602Z","type":"message"}
{"nick":"avidal","message":"So lit itself might be packaged via luvi into a binary, but using lit to manage packages for non-luvi projects is as simple as registering the lit-loader","date":"2015-01-26T17:46:47.785Z","type":"message"}
{"nick":"creationix","message":"but lit has no idea how you will use the files written to disk, so it can’t check that","date":"2015-01-26T17:46:48.852Z","type":"message"}
{"nick":"creationix","message":"avidal: yep, that would work too","date":"2015-01-26T17:47:11.316Z","type":"message"}
{"nick":"creationix","message":"what I don’t want to do is only allow installing packages who’s engine matches the luvi embedded in lit","date":"2015-01-26T17:47:35.024Z","type":"message"}
{"nick":"avidal","message":"It helps me to identify the boundaries between the four projects","date":"2015-01-26T17:47:38.577Z","type":"message"}
{"nick":"avidal","message":"right","date":"2015-01-26T17:47:42.779Z","type":"message"}
{"nick":"creationix","message":"the luvi version in lit doesn’t matter, it could be written in go for all I care","date":"2015-01-26T17:47:51.258Z","type":"message"}
{"nick":"avidal","message":"right","date":"2015-01-26T17:47:55.157Z","type":"message"}
{"nick":"creationix","message":"it only matters for making new luvi apps since the binary part of the payload is in lit","date":"2015-01-26T17:48:14.597Z","type":"message"}
{"nick":"avidal","message":"but the lit loader could scan engines when you require a package","date":"2015-01-26T17:48:25.016Z","type":"message"}
{"nick":"creationix","message":"loader, yes","date":"2015-01-26T17:48:36.996Z","type":"message"}
{"nick":"creationix","message":"so lit has two coupled, but separate halves","date":"2015-01-26T17:49:15.468Z","type":"message"}
{"nick":"avidal","message":"yeah","date":"2015-01-26T17:49:21.221Z","type":"message"}
{"nick":"creationix","message":"one if the CLI binary, the other is the require library","date":"2015-01-26T17:49:23.648Z","type":"message"}
{"nick":"avidal","message":"Could use a write up :)","date":"2015-01-26T17:49:38.921Z","type":"message"}
{"nick":"avidal","message":"Although I *might* know enough about it now to make a first pass","date":"2015-01-26T17:49:49.035Z","type":"message"}
{"nick":"creationix","message":"avidal: feel free to create a wiki page on luvit/lit.  I think it’s open access","date":"2015-01-26T17:50:05.579Z","type":"message"}
{"nick":"creationix","message":"and/or file issues for features you want me to implement","date":"2015-01-26T17:50:19.895Z","type":"message"}
{"nick":"avidal","message":"probably gist it at first to make sure I understand the intention but yeah, i'd love to","date":"2015-01-26T17:50:37.702Z","type":"message"}
{"nick":"avidal","message":"Because all of this collectively leads to luvit 2.0, no?","date":"2015-01-26T17:50:55.318Z","type":"message"}
{"nick":"creationix","message":"right","date":"2015-01-26T17:55:27.169Z","type":"message"}
{"nick":"avidal","message":"k","date":"2015-01-26T17:55:39.435Z","type":"message"}
{"nick":"avidal","message":"I might draft something up and ask itc for a review","date":"2015-01-26T17:55:45.820Z","type":"message"}
{"nick":"creationix","message":"my two goals with luvit 2.0 are:","date":"2015-01-26T17:56:24.969Z","type":"message"}
{"nick":"creationix","message":"1. update deps (luajit, libuv, etc..) and node APIs","date":"2015-01-26T17:56:25.613Z","type":"message"}
{"nick":"creationix","message":"2. make custom versions and cherry-picking trivial and encouraged","date":"2015-01-26T17:56:26.460Z","type":"message"}
{"nick":"creationix","message":"luv and luvi solve the first part of #1","date":"2015-01-26T17:56:38.226Z","type":"message"}
{"nick":"creationix","message":"the new lua code we’re writing now solve the second half of #1","date":"2015-01-26T17:56:51.226Z","type":"message"}
{"nick":"creationix","message":"#2 is why lit exists and why the luvi system is so unique","date":"2015-01-26T17:57:15.057Z","type":"message"}
{"nick":"creationix","message":"so it sounds like “luvit” will eventually be a pure metapackage of lua abstraction on top of luvi","date":"2015-01-26T17:57:48.789Z","type":"message"}
{"nick":"avidal","message":"Right, use luvi to generate a binary that includes the node.js API style lua modules that rely on luv. The end result is a binary that can then execute your own scripts that can require the bundled lua modules contained in luvit, bundled by luvi","date":"2015-01-26T17:59:07.867Z","type":"message"}
{"nick":"creationix","message":"yep, the luvit binary will work much like before","date":"2015-01-26T18:00:34.520Z","type":"message"}
{"nick":"creationix","message":"but it will be much easier to build and customize","date":"2015-01-26T18:00:42.157Z","type":"message"}
{"nick":"avidal","message":"So luvit becomes an engine, like lua5.x and luajit. Some modules in lit are luvit compatible, some aren't (although lua compatible implies luajit compatible which implies luvit compatible)","date":"2015-01-26T18:00:52.442Z","type":"message"}
{"nick":"creationix","message":"I think more platform than engine","date":"2015-01-26T18:01:36.186Z","type":"message"}
{"nick":"avidal","message":"right on","date":"2015-01-26T18:01:43.384Z","type":"message"}
{"nick":"creationix","message":"v8 is an engine, the web is a platform","date":"2015-01-26T18:01:45.626Z","type":"message"}
{"nick":"avidal","message":"i was thinking of it describing a base layer of stdlib modules you can reasonably expect","date":"2015-01-26T18:03:03.944Z","type":"message"}
{"nick":"creationix","message":"right.  When writing browser libraries in JS, you assume very different deps than node libraries","date":"2015-01-26T18:03:39.240Z","type":"message"}
{"nick":"creationix","message":"luvit libraries will assume streams and event emitters and other concepts","date":"2015-01-26T18:04:05.574Z","type":"message"}
{"nick":"avidal","message":"will installing things via lit that have their own deps install them in a dep-local modules folder as well?","date":"2015-01-26T18:05:47.964Z","type":"message"}
{"nick":"creationix","message":"no, lit keeps it flat","date":"2015-01-26T18:06:02.170Z","type":"message"}
{"nick":"avidal","message":"k","date":"2015-01-26T18:06:11.713Z","type":"message"}
{"nick":"creationix","message":"though the lit loader supports nested","date":"2015-01-26T18:06:14.323Z","type":"message"}
{"nick":"creationix","message":"lit will warn if you have conflicting deep dependencies and install the newer verison","date":"2015-01-26T18:06:36.197Z","type":"message"}
{"nick":"creationix","message":"if you *really* want and need incomptable versions, you can manually install them using nesting since the loader supports it","date":"2015-01-26T18:07:09.357Z","type":"message"}
{"nick":"avidal","message":"Is the loader you've pulled into lit the same as the one currently in luvit@luvi-up?","date":"2015-01-26T18:08:08.702Z","type":"message"}
{"nick":"avidal","message":"I know it was to start with","date":"2015-01-26T18:08:16.004Z","type":"message"}
{"nick":"creationix","message":"should be","date":"2015-01-26T18:08:18.341Z","type":"message"}
{"nick":"avidal","message":"but i'm curious if it's mutated","date":"2015-01-26T18:08:19.093Z","type":"message"}
{"nick":"creationix","message":"I try to keep the modules in both projects in sync","date":"2015-01-26T18:08:30.333Z","type":"message"}
{"nick":"creationix","message":"http-codec, for example changed a lot recently and I had to update both","date":"2015-01-26T18:08:41.775Z","type":"message"}
{"nick":"avidal","message":"yeah i see that","date":"2015-01-26T18:09:00.578Z","type":"message"}
{"nick":"creationix","message":"once luvit has been lit-ized I can stop duplicating it","date":"2015-01-26T18:09:07.966Z","type":"message"}
{"nick":"avidal","message":"alright","date":"2015-01-26T18:09:33.478Z","type":"message"}
{"nick":"Michalik_","date":"2015-01-26T18:44:51.264Z","type":"quit"}
{"nick":"Michalik_","date":"2015-01-26T18:45:07.179Z","type":"join"}
{"nick":"hdms","date":"2015-01-26T18:45:38.674Z","type":"join"}
{"nick":"avidal","message":"This is what I understand of the overarching goals of luvit 2.0 (incl luv, luvi, and lit)","date":"2015-01-26T19:19:58.649Z","type":"message"}
{"nick":"avidal","message":"https://gist.github.com/avidal/1dd5ed35d51f5f976a91","date":"2015-01-26T19:19:59.507Z","type":"message"}
{"nick":"rch","message":"neat","date":"2015-01-26T19:20:39.353Z","type":"message"}
{"nick":"creationix","message":"avidal: require is not bundled by luvi, but will be inside lit and available in the lit public repository","date":"2015-01-26T19:41:51.976Z","type":"message"}
{"nick":"avidal","message":"What I mean is that using luvi to generate a bundle, will (should) luvi stick the loader within the bundle as well?","date":"2015-01-26T19:42:26.815Z","type":"message"}
{"nick":"creationix","message":"not automatically","date":"2015-01-26T19:43:33.529Z","type":"message"}
{"nick":"avidal","message":"Although I guess a luvi user could lit install lit-loader and then manually require lit-loader in main.lua to bootstrap","date":"2015-01-26T19:43:34.166Z","type":"message"}
{"nick":"creationix","message":"it’s a dependency just like any other","date":"2015-01-26T19:43:40.337Z","type":"message"}
{"nick":"creationix","message":"since luvi apps have to manually bootstrap in their main.lua there isn’t much luvi can do when bundling","date":"2015-01-26T19:44:22.321Z","type":"message"}
{"nick":"avidal","message":"Right","date":"2015-01-26T19:45:23.482Z","type":"message"}
{"nick":"avidal","message":"I suppose luvit@luvi-up does that in main.lua anyway, requiring the loader as a dep","date":"2015-01-26T19:45:39.570Z","type":"message"}
{"nick":"creationix","message":"commented https://gist.github.com/avidal/1dd5ed35d51f5f976a91#comment-1380584","date":"2015-01-26T19:46:20.629Z","type":"message"}
{"nick":"avidal","message":"yeah, roger","date":"2015-01-26T19:46:38.941Z","type":"message"}
{"nick":"creationix","message":"it’s all fairly minimal and explicit, but I think that’s better at this layer","date":"2015-01-26T19:47:05.118Z","type":"message"}
{"nick":"creationix","message":"you can add as much opinion and convention as you please in your custom luvi/lit app","date":"2015-01-26T19:47:16.545Z","type":"message"}
{"nick":"avidal","message":"right, right","date":"2015-01-26T19:47:22.002Z","type":"message"}
{"nick":"avidal","message":"updated","date":"2015-01-26T19:53:31.645Z","type":"message"}
{"nick":"dan336","reason":"Quit: Leaving.","date":"2015-01-26T19:53:47.484Z","type":"quit"}
{"nick":"dan336","date":"2015-01-26T20:03:31.219Z","type":"join"}
{"nick":"dan336","reason":"Client Quit","date":"2015-01-26T20:03:34.919Z","type":"quit"}
{"nick":"dan336","date":"2015-01-26T20:39:45.321Z","type":"join"}
{"nick":"avidal","message":"hmm, i guess i should expand and say that lit loader requires luv","date":"2015-01-26T21:10:09.117Z","type":"message"}
{"nick":"creationix","message":"avidal: well, I’m pretty sure that can be changed","date":"2015-01-26T21:11:48.029Z","type":"message"}
{"nick":"creationix","message":"but yes, it currently requires luv","date":"2015-01-26T21:11:53.174Z","type":"message"}
{"nick":"creationix","message":"actually, currently lit-loader requires luvi’s bundle and luv","date":"2015-01-26T21:12:19.261Z","type":"message"}
{"nick":"creationix","message":"the bundle dep is required to support loading from bundles","date":"2015-01-26T21:12:28.056Z","type":"message"}
{"nick":"avidal","message":"yeah, but the luvi bundle can be extracted out and passed in as an additional `reader` in options","date":"2015-01-26T21:12:39.629Z","type":"message"}
{"nick":"creationix","message":"a non-bundle version could be written for vanilla lua if desired","date":"2015-01-26T21:12:41.524Z","type":"message"}
{"nick":"indexzero","reason":"Remote host closed the connection","date":"2015-01-26T21:12:53.727Z","type":"quit"}
{"nick":"creationix","message":"yep, the loader could be made configurable","date":"2015-01-26T21:13:11.489Z","type":"message"}
{"nick":"creationix","message":"with different plugins as separate lit plugins to be configured in bootstrap","date":"2015-01-26T21:13:21.047Z","type":"message"}
{"nick":"avidal","message":"right","date":"2015-01-26T21:13:29.982Z","type":"message"}
{"nick":"avidal","message":"and it seems that (mostly) the luv usage can be replaced with the standard lua io module","date":"2015-01-26T21:13:43.479Z","type":"message"}
{"nick":"hdms","message":"Hello Rob","date":"2015-01-26T21:19:25.366Z","type":"message"}
{"nick":"rje","message":"uh hi hdms?","date":"2015-01-26T21:21:19.201Z","type":"message"}
{"nick":"indexzero","date":"2015-01-26T21:24:22.959Z","type":"join"}
{"nick":"dan3361","date":"2015-01-26T21:40:49.257Z","type":"join"}
{"nick":"dan336","reason":"Ping timeout: 245 seconds","date":"2015-01-26T21:42:53.277Z","type":"quit"}
{"nick":"bjorn","reason":"Read error: Connection reset by peer","date":"2015-01-26T22:23:16.189Z","type":"quit"}
{"nick":"bjorn","date":"2015-01-26T22:23:44.124Z","type":"join"}
{"nick":"bjorn","reason":"Changing host","date":"2015-01-26T22:23:51.821Z","type":"quit"}
{"nick":"bjorn","date":"2015-01-26T22:23:51.972Z","type":"join"}
{"nick":"travis-ci","date":"2015-01-26T22:59:35.544Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#285 (master - 420f3cd : Rob Emanuele): The build passed.","date":"2015-01-26T22:59:35.695Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/726887c0a75f...420f3cde5691","date":"2015-01-26T22:59:35.695Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/48412672","date":"2015-01-26T22:59:35.696Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-26T22:59:35.696Z","type":"part"}
{"nick":"travis-ci","date":"2015-01-26T23:01:42.672Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#286 (master - 2d2ca70 : Rob Emanuele): The build passed.","date":"2015-01-26T23:01:42.823Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/420f3cde5691...2d2ca703682f","date":"2015-01-26T23:01:42.823Z","type":"message"}
{"nick":"travis-ci","message":"Build details : http://travis-ci.org/luvit/luvi/builds/48412760","date":"2015-01-26T23:01:42.823Z","type":"message"}
{"nick":"travis-ci","date":"2015-01-26T23:01:42.823Z","type":"part"}
{"nick":"^v","date":"2015-01-26T23:19:30.505Z","type":"join"}
