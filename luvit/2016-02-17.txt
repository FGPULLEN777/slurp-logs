{"nick":"Harageth","reason":"Remote host closed the connection","date":"2016-02-17T00:21:15.069Z","type":"quit"}
{"nick":"dobson","reason":"Quit: Leaving","date":"2016-02-17T00:43:36.945Z","type":"quit"}
{"nick":"Something12","date":"2016-02-17T00:49:23.284Z","type":"join"}
{"nick":"dobson","date":"2016-02-17T00:54:21.838Z","type":"join"}
{"nick":"sclark39","date":"2016-02-17T00:56:23.411Z","type":"join"}
{"nick":"sclark39","message":"Can luvit do clustering like node.js?","date":"2016-02-17T00:56:49.893Z","type":"message"}
{"nick":"therebelrobot","reason":"Ping timeout: 265 seconds","date":"2016-02-17T00:57:18.814Z","type":"quit"}
{"nick":"sclark39","message":"https://github.com/luvit/luv/blob/master/examples/tcp-cluster.lua","date":"2016-02-17T00:58:05.665Z","type":"message"}
{"nick":"sclark39","message":"i imagine is it","date":"2016-02-17T00:58:07.322Z","type":"message"}
{"nick":"daurnimator","message":"sclark39: doesn't sound like clustering; but I don't know how node.js likes to redefine terms...","date":"2016-02-17T01:16:06.775Z","type":"message"}
{"nick":"sclark39","message":"daurnimator one of the things node.js advertises (or people like it for) is because you can easily convert a node.js program to be able to be run on a cluster","date":"2016-02-17T01:17:33.707Z","type":"message"}
{"nick":"daurnimator","message":"sclark39: it sounds like they have a very different definition of \"cluster\" to the rest of the world. do you have an example?","date":"2016-02-17T01:18:15.341Z","type":"message"}
{"nick":"sclark39","message":"https://nodejs.org/api/cluster.html","date":"2016-02-17T01:19:00.055Z","type":"message"}
{"nick":"sclark39","message":"http://www.sitepoint.com/how-to-create-a-node-js-cluster-for-speeding-up-your-apps/","date":"2016-02-17T01:19:00.920Z","type":"message"}
{"nick":"sclark39","message":"sounds like it's just making it able to be multi-threaded... but I believed the instances could be run across multiple servers (but I am not very experienced with nodejs)","date":"2016-02-17T01:19:46.726Z","type":"message"}
{"nick":"daurnimator","message":"okay yeah. they use the word \"cluster\" entirely incorrectly.","date":"2016-02-17T01:19:53.589Z","type":"message"}
{"nick":"daurnimator","message":"they infact just mean workers","date":"2016-02-17T01:20:01.568Z","type":"message"}
{"nick":"sclark39","message":"yeah","date":"2016-02-17T01:20:15.555Z","type":"message"}
{"nick":"rch","message":"Yeah it's a weird name, it's always bugged me","date":"2016-02-17T01:20:20.480Z","type":"message"}
{"nick":"daurnimator","message":"so yeah, luvit can do workers no problem. it's usually pretty simple to do.","date":"2016-02-17T01:20:25.552Z","type":"message"}
{"nick":"daurnimator","message":"(in any language)","date":"2016-02-17T01:20:31.304Z","type":"message"}
{"nick":"sclark39","message":"does node.js support actual clusters? or did they just rename workers to cluster and then say they supported it?","date":"2016-02-17T01:20:42.731Z","type":"message"}
{"nick":"daurnimator","message":"sclark39: just renamed by the look of it","date":"2016-02-17T01:21:03.912Z","type":"message"}
{"nick":"sclark39","message":"Yeah, this is another spot where it seems luvit and nodejs are tied :P","date":"2016-02-17T01:22:27.311Z","type":"message"}
{"nick":"sclark39","message":"(which means luvi/luvit is still winning for me)","date":"2016-02-17T01:22:37.874Z","type":"message"}
{"nick":"sclark39","message":"The one problem I've had with luv is that I don't know how to get good tracebacks from the coroutines","date":"2016-02-17T01:23:20.826Z","type":"message"}
{"nick":"daurnimator","message":"sclark39: lua has debug.traceback(mycoroutine)","date":"2016-02-17T01:23:40.184Z","type":"message"}
{"nick":"sclark39","message":"Right, but I need to catch it when it errors","date":"2016-02-17T01:23:51.833Z","type":"message"}
{"nick":"sclark39","message":"the traceback it prints with the coroutine by default is not helpful","date":"2016-02-17T01:24:11.230Z","type":"message"}
{"nick":"daurnimator","message":"sclark39: I can have a quick look. do you know where that gets thrown from?","date":"2016-02-17T01:24:28.814Z","type":"message"}
{"nick":"sclark39","message":"Nah, let me see if I can make a demo app","date":"2016-02-17T01:24:43.091Z","type":"message"}
{"nick":"daurnimator","message":"sclark39: no I meant which line in the luv source","date":"2016-02-17T01:25:01.800Z","type":"message"}
{"nick":"sclark39","message":"ah, no, haven't dug down that far yet.","date":"2016-02-17T01:25:14.916Z","type":"message"}
{"nick":"daurnimator","message":"wait, where *is* the coroutine resuming happening?","date":"2016-02-17T01:29:23.609Z","type":"message"}
{"nick":"Harageth","date":"2016-02-17T01:45:30.466Z","type":"join"}
{"nick":"sclark39","message":"uv.run handles the resuming daurnimator","date":"2016-02-17T01:47:58.835Z","type":"message"}
{"nick":"daurnimator","message":"sclark39: there's not a single lua_resume call in luv...","date":"2016-02-17T01:48:56.408Z","type":"message"}
{"nick":"a__","reason":"Ping timeout: 240 seconds","date":"2016-02-17T02:10:55.939Z","type":"quit"}
{"nick":"daurnimator","message":"creationix: ^^","date":"2016-02-17T02:12:57.636Z","type":"message"}
{"nick":"creationix","message":"where are the coroutines being used?","date":"2016-02-17T02:14:38.435Z","type":"message"}
{"nick":"creationix","message":"luvit's core APIs are callback based","date":"2016-02-17T02:14:45.683Z","type":"message"}
{"nick":"creationix","message":"and correct, luv doesn't touch them, it's all callback","date":"2016-02-17T02:14:53.158Z","type":"message"}
{"nick":"creationix","message":"I have a common pattern in my coro-* libraries where lua code wraps callback code and yields and resumes the calling thread","date":"2016-02-17T02:15:16.880Z","type":"message"}
{"nick":"daurnimator","message":"ah okay, so sclark39 is using that?","date":"2016-02-17T02:15:36.508Z","type":"message"}
{"nick":"sclark39","message":"Yeah, that's what I'd be using","date":"2016-02-17T02:16:05.248Z","type":"message"}
{"nick":"sclark39","message":"Sorry :P","date":"2016-02-17T02:16:18.882Z","type":"message"}
{"nick":"sclark39","message":"How can I get good tracebacks on error from that, creationix ?","date":"2016-02-17T02:16:40.216Z","type":"message"}
{"nick":"creationix","message":"for example, here is how I would wrap a callback based setTimeout to be a coroutine based sleep https://gist.github.com/creationix/19b9d8cefe55d946807c","date":"2016-02-17T02:17:05.767Z","type":"message"}
{"nick":"creationix","message":"error handling is tricky","date":"2016-02-17T02:17:15.044Z","type":"message"}
{"nick":"creationix","message":"I don't like how lua coroutines do errors","date":"2016-02-17T02:17:43.110Z","type":"message"}
{"nick":"daurnimator","message":"o.o that's half the reason I use coroutines","date":"2016-02-17T02:17:58.046Z","type":"message"}
{"nick":"daurnimator","message":"errors are actually readable!","date":"2016-02-17T02:18:03.512Z","type":"message"}
{"nick":"creationix","message":"if there is an error raised, whoever called coroutine resume gets it","date":"2016-02-17T02:18:08.422Z","type":"message"}
{"nick":"daurnimator","message":"creationix: well yeah....","date":"2016-02-17T02:18:20.624Z","type":"message"}
{"nick":"creationix","message":"daurnimator: yes, the stack traces are much better, that's true","date":"2016-02-17T02:18:21.809Z","type":"message"}
{"nick":"creationix","message":"but in my case 99% of the time, it's a luv callback into lua that eventually calls coroutine.resume","date":"2016-02-17T02:18:48.594Z","type":"message"}
{"nick":"sclark39","message":"yup, that's what I keep seeing too","date":"2016-02-17T02:18:57.878Z","type":"message"}
{"nick":"creationix","message":"which is deep in some library code and has no idea how to handle your error","date":"2016-02-17T02:19:03.801Z","type":"message"}
{"nick":"sclark39","message":"which makes it very hard to actually figure out what went wrong","date":"2016-02-17T02:19:04.646Z","type":"message"}
{"nick":"daurnimator","message":"creationix: I guess I don't really have that problem, as with cqueues it's all resumed from the scheduler.","date":"2016-02-17T02:19:17.307Z","type":"message"}
{"nick":"creationix","message":"sclark39: so the way to handle it is to put an xpcall inside your coroutine, then it never escapes into whoever resumes the thread","date":"2016-02-17T02:19:43.774Z","type":"message"}
{"nick":"daurnimator","message":"creationix: well where *do* you want it to be reported/escape to?","date":"2016-02-17T02:20:30.350Z","type":"message"}
{"nick":"sclark39","message":"hmm","date":"2016-02-17T02:20:36.901Z","type":"message"}
{"nick":"sclark39","message":"I'll give that a try","date":"2016-02-17T02:20:49.342Z","type":"message"}
{"nick":"creationix","message":"https://gist.github.com/creationix/19b9d8cefe55d946807c#file-error-handling-lua","date":"2016-02-17T02:21:12.727Z","type":"message"}
{"nick":"creationix","message":"sclark39: ^","date":"2016-02-17T02:21:14.354Z","type":"message"}
{"nick":"daurnimator","message":"creationix: you could write a little helper than does the resume, and if it fails, store it for some 'run' function to yell about","date":"2016-02-17T02:21:27.974Z","type":"message"}
{"nick":"creationix","message":"daurnimator: yes, but then all my libraries that wrap callbacks would need to depend on this library","date":"2016-02-17T02:22:34.300Z","type":"message"}
{"nick":"sclark39","message":"creationix how would you combien those two? if the sleep is within the commented section along with some other code will it error?","date":"2016-02-17T02:22:40.662Z","type":"message"}
{"nick":"daurnimator","message":"creationix: yeah. that's reasonable IMO.","date":"2016-02-17T02:22:49.798Z","type":"message"}
{"nick":"creationix","message":"instead a library that does the coroutine.create and xpcall wrapping for you would be more flexible","date":"2016-02-17T02:23:01.056Z","type":"message"}
{"nick":"creationix","message":"and not require anything to be done in all the coro-* libraries","date":"2016-02-17T02:23:11.240Z","type":"message"}
{"nick":"DarkGod","reason":"Quit: Leaving","date":"2016-02-17T02:25:26.540Z","type":"quit"}
{"nick":"Harageth","reason":"Remote host closed the connection","date":"2016-02-17T02:27:02.750Z","type":"quit"}
{"nick":"creationix","message":"sclark39: something like this might help https://gist.github.com/creationix/19b9d8cefe55d946807c#file-helper-lua","date":"2016-02-17T02:30:45.836Z","type":"message"}
{"nick":"sclark39","message":"neat","date":"2016-02-17T02:31:20.277Z","type":"message"}
{"nick":"creationix","message":"so yeah, daurnimator's system is nice if you don't have callback based stuff to wrap, but I interop with callback based code all the time","date":"2016-02-17T02:32:41.236Z","type":"message"}
{"nick":"daurnimator","message":"creationix: I meant something quite different","date":"2016-02-17T02:32:42.160Z","type":"message"}
{"nick":"creationix","message":"daurnimator: so my initial idea was to put something like your idea into luv itself","date":"2016-02-17T02:33:22.916Z","type":"message"}
{"nick":"creationix","message":"have a place where people could register global error handlers for callbacks","date":"2016-02-17T02:33:37.310Z","type":"message"}
{"nick":"daurnimator","message":"creationix: hold up. writing exxample.","date":"2016-02-17T02:34:15.599Z","type":"message"}
{"nick":"creationix","message":"the full idea was a way to wrap all callbacks into lua so that you could do things before, after, or wrap the call in xpcall","date":"2016-02-17T02:34:19.155Z","type":"message"}
{"nick":"creationix","message":"the problem with a global wrapper is the lack of context and locality","date":"2016-02-17T02:36:27.877Z","type":"message"}
{"nick":"creationix","message":"different pieces of code want to handle errors differently and only their errirs","date":"2016-02-17T02:36:41.450Z","type":"message"}
{"nick":"creationix","message":"*errors","date":"2016-02-17T02:36:43.072Z","type":"message"}
{"nick":"creationix","message":"though I guess what I didn't consider is lua maps can use the thread as a key","date":"2016-02-17T02:37:06.272Z","type":"message"}
{"nick":"creationix","message":"that might work well","date":"2016-02-17T02:37:15.238Z","type":"message"}
{"nick":"creationix","message":"I just need a way to know what thread started an action since callbacks in luv all happen on the main thread","date":"2016-02-17T02:38:24.396Z","type":"message"}
{"nick":"daurnimator","message":"creationix: https://gist.github.com/daurnimator/a0288074b747a4c26d16","date":"2016-02-17T02:38:49.668Z","type":"message"}
{"nick":"creationix","message":"this isn't clear with things like connection pooling or emitters in libuv","date":"2016-02-17T02:38:58.659Z","type":"message"}
{"nick":"creationix","message":"daurnimator: remind me what \"kv\" mode does","date":"2016-02-17T02:40:05.702Z","type":"message"}
{"nick":"creationix","message":"double weak table?","date":"2016-02-17T02:40:14.045Z","type":"message"}
{"nick":"daurnimator","message":"creationix: weak keys and weak values.","date":"2016-02-17T02:40:15.834Z","type":"message"}
{"nick":"creationix","message":"got it.  Sometimes I forget how powerful lua is","date":"2016-02-17T02:40:26.173Z","type":"message"}
{"nick":"creationix","message":"features I've wished for for years in JS and will never get it seems","date":"2016-02-17T02:40:38.276Z","type":"message"}
{"nick":"daurnimator","message":"creationix: coming to JS real soon now :)","date":"2016-02-17T02:40:40.226Z","type":"message"}
{"nick":"creationix","message":"weak maps right, but never coroutines","date":"2016-02-17T02:40:58.759Z","type":"message"}
{"nick":"creationix","message":"just generators","date":"2016-02-17T02:41:06.414Z","type":"message"}
{"nick":"daurnimator","message":"creationix: https://twitter.com/DeanTribble/status/698326538589044736","date":"2016-02-17T02:41:26.063Z","type":"message"}
{"nick":"daurnimator","message":"^^ weakrefs","date":"2016-02-17T02:41:31.889Z","type":"message"}
{"nick":"daurnimator","message":"once we have that lua.vm.js will actually be usable!","date":"2016-02-17T02:41:44.267Z","type":"message"}
{"nick":"creationix","message":"yeah, that will help a lot","date":"2016-02-17T02:42:01.345Z","type":"message"}
{"nick":"creationix","message":"Map helped a bit implement tables","date":"2016-02-17T02:42:08.276Z","type":"message"}
{"nick":"creationix","message":"and Proxy helps with the other metamethods I think","date":"2016-02-17T02:42:23.685Z","type":"message"}
{"nick":"daurnimator","message":"yep","date":"2016-02-17T02:42:28.317Z","type":"message"}
{"nick":"creationix","message":"I guess if you just yield* everything in JS then you can simulate coroutines, I just worry about the performance of that","date":"2016-02-17T02:43:16.816Z","type":"message"}
{"nick":"creationix","message":"what's it do now, just transform the code and generate a state machine?","date":"2016-02-17T02:43:46.633Z","type":"message"}
{"nick":"daurnimator","message":"creationix: I'd still run a lua vm actually.","date":"2016-02-17T02:43:58.135Z","type":"message"}
{"nick":"daurnimator","message":"I'm trying to make sure it's ready with wasm","date":"2016-02-17T02:44:15.964Z","type":"message"}
{"nick":"daurnimator","message":"and enter it as a full alternative for js on the web","date":"2016-02-17T02:44:35.636Z","type":"message"}
{"nick":"creationix","message":"I have high hopes for wasm","date":"2016-02-17T02:44:49.658Z","type":"message"}
{"nick":"daurnimator","message":"the js weakref is just needed to bridge to the DOM","date":"2016-02-17T02:44:53.220Z","type":"message"}
{"nick":"creationix","message":"I want a future where eventually any language is on equal standing technically with js","date":"2016-02-17T02:45:05.288Z","type":"message"}
{"nick":"creationix","message":"just a matter of implementation work then","date":"2016-02-17T02:45:11.879Z","type":"message"}
{"nick":"daurnimator","message":"creationix: honestly the weakref is the last thing left...","date":"2016-02-17T02:45:22.990Z","type":"message"}
{"nick":"creationix","message":"I can see how that helps integrate with the dom","date":"2016-02-17T02:45:42.817Z","type":"message"}
{"nick":"daurnimator","message":"everything else we can already do *today*","date":"2016-02-17T02:45:44.432Z","type":"message"}
{"nick":"creationix","message":"webasm should be incrementally faster and smaller than asm.js","date":"2016-02-17T02:46:10.758Z","type":"message"}
{"nick":"creationix","message":"service workers are pretty amazing too","date":"2016-02-17T02:46:19.774Z","type":"message"}
{"nick":"daurnimator","message":"webasm I don't actually need.","date":"2016-02-17T02:46:21.351Z","type":"message"}
{"nick":"daurnimator","message":"performance isnt really on my mind","date":"2016-02-17T02:46:26.194Z","type":"message"}
{"nick":"creationix","message":"I don't want megabytes of vm just to run my script in an alternative language, that's a non-starter for most people","date":"2016-02-17T02:46:56.079Z","type":"message"}
{"nick":"daurnimator","message":"creationix: caching it isn't enough?","date":"2016-02-17T02:47:20.317Z","type":"message"}
{"nick":"creationix","message":"I wish browsers had some sort of cross-domain content-addressable cache","date":"2016-02-17T02:47:28.698Z","type":"message"}
{"nick":"daurnimator","message":"they... do?","date":"2016-02-17T02:47:40.552Z","type":"message"}
{"nick":"daurnimator","message":"cross domain <script> src should be cached","date":"2016-02-17T02:48:09.520Z","type":"message"}
{"nick":"creationix","message":"I mean, I could reference a resource by it's sha256 hash and if there is a matching resource in the cache (no matter what it's original url was) use it","date":"2016-02-17T02:48:28.346Z","type":"message"}
{"nick":"creationix","message":"cross-domain script tags still need to make conditional requests or have long-lifetime cache expiration","date":"2016-02-17T02:49:53.306Z","type":"message"}
{"nick":"creationix","message":"and even then, there is no single global path for the latest jquery, people have their own urls and copies","date":"2016-02-17T02:50:09.528Z","type":"message"}
{"nick":"creationix","message":"with content-addressable hashes, anything with the same content is the same key","date":"2016-02-17T02:50:21.160Z","type":"message"}
{"nick":"creationix","message":"and it's guranteed to not change (apart from hash collisions, which with sha256 would be crazy rare)","date":"2016-02-17T02:50:44.383Z","type":"message"}
{"nick":"daurnimator","message":"The thing about releasing something like a new language on the Web is you can mandate a few things","date":"2016-02-17T02:51:03.183Z","type":"message"}
{"nick":"creationix","message":"you can, but it will slow adoption","date":"2016-02-17T02:51:28.346Z","type":"message"}
{"nick":"creationix","message":"people won't trust your server and will want mirrors","date":"2016-02-17T02:51:41.828Z","type":"message"}
{"nick":"daurnimator","message":"I didn't expect anything else :p","date":"2016-02-17T02:51:45.165Z","type":"message"}
{"nick":"creationix","message":"with content-addressable, there can be all the mirrors in the world, but once the content is cached, it doesn't matter","date":"2016-02-17T02:52:10.248Z","type":"message"}
{"nick":"creationix","message":"but they will never add it because of fear of hash collisions and evil actors","date":"2016-02-17T02:52:38.673Z","type":"message"}
{"nick":"daurnimator","message":"In any case, the compiled lua vm is still smaller than e.g. react","date":"2016-02-17T02:53:11.666Z","type":"message"}
{"nick":"creationix","message":"this is true, gotta keep things in perspective","date":"2016-02-17T02:53:22.586Z","type":"message"}
{"nick":"creationix","message":"modern frameworks are ridiculous","date":"2016-02-17T02:53:28.786Z","type":"message"}
{"nick":"creationix","message":"I'm using elm for an app and that's about as big as I'll go","date":"2016-02-17T02:53:48.964Z","type":"message"}
{"nick":"creationix","message":"it's require an offline compiler written i haskell, but I love the type system","date":"2016-02-17T02:54:26.880Z","type":"message"}
{"nick":"creationix","message":"daurnimator: have you considered compiling lua to js offline, or do you really want the live compiler in the web page?","date":"2016-02-17T02:55:05.532Z","type":"message"}
{"nick":"daurnimator","message":"I was lua to fit in just like js","date":"2016-02-17T02:57:08.034Z","type":"message"}
{"nick":"daurnimator","message":"So, runtime is required IMO","date":"2016-02-17T02:57:23.547Z","type":"message"}
{"nick":"daurnimator","message":"Nevermind that I've used coroutines extensively in my experiments. Which is difficult to transpire to js, as you noted above","date":"2016-02-17T02:58:30.183Z","type":"message"}
{"nick":"creationix","message":"yeah, implementing a vm is the route for my languages too","date":"2016-02-17T03:00:19.786Z","type":"message"}
{"nick":"daurnimator","message":"Getting off topic ;)","date":"2016-02-17T03:01:23.832Z","type":"message"}
{"nick":"daurnimator","message":"So, my paste before make sense?","date":"2016-02-17T03:01:34.492Z","type":"message"}
{"nick":"creationix","message":"yeah, but I'm not sure what it gains over my helper","date":"2016-02-17T03:02:25.264Z","type":"message"}
{"nick":"creationix","message":"you still need to wrap the coroutine, but you *also* need to make all resumers aware of it","date":"2016-02-17T03:02:44.305Z","type":"message"}
{"nick":"creationix","message":"I guess more control","date":"2016-02-17T03:03:11.594Z","type":"message"}
{"nick":"creationix","message":"since the callback gets the raw err and a reference to the co","date":"2016-02-17T03:03:23.588Z","type":"message"}
{"nick":"creationix","message":"daurnimator: another problem is your resumer just passes the results of the callback directly to the yielder","date":"2016-02-17T03:04:48.819Z","type":"message"}
{"nick":"creationix","message":"in my case I'm wrapping various APIs with different callback signatures and I want to normalize them to a common format","date":"2016-02-17T03:05:09.204Z","type":"message"}
{"nick":"creationix","message":"but I guess that could be done after the fact","date":"2016-02-17T03:05:19.946Z","type":"message"}
{"nick":"daurnimator","message":"Creationix: then transform the result of coroutine.yield","date":"2016-02-17T03:05:40.151Z","type":"message"}
{"nick":"creationix","message":"right, that's what I mean by \"after the fact\"","date":"2016-02-17T03:05:51.676Z","type":"message"}
{"nick":"creationix","message":"but the idea of using a weakmap is key here","date":"2016-02-17T03:06:05.425Z","type":"message"}
{"nick":"daurnimator","message":"creationix: that way tracebacks in transformation code will make sense","date":"2016-02-17T03:06:11.210Z","type":"message"}
{"nick":"creationix","message":"and I like you don't need xpcall","date":"2016-02-17T03:06:12.544Z","type":"message"}
{"nick":"creationix","message":"true","date":"2016-02-17T03:06:22.614Z","type":"message"}
{"nick":"daurnimator","message":"And the transformations themselves can call other async functions","date":"2016-02-17T03:06:27.416Z","type":"message"}
{"nick":"creationix","message":"how about this:  Add an API to luv where you can associate an error handler with any thread","date":"2016-02-17T03:06:54.176Z","type":"message"}
{"nick":"creationix","message":"hmm, nevermind, I still need to know what thread started the async action","date":"2016-02-17T03:08:10.970Z","type":"message"}
{"nick":"creationix","message":"currently luv just fatal exits if lua_pcall finds an error in a callback","date":"2016-02-17T03:08:42.918Z","type":"message"}
{"nick":"creationix","message":"it used to let the error bubble up to uv.run(), but that has some undefined semantics","date":"2016-02-17T03:09:02.763Z","type":"message"}
{"nick":"sclark39","date":"2016-02-17T03:12:34.454Z","type":"quit"}
{"nick":"creationix","message":"daurnimator: how about this?  change luv to accept threads as well as functions in the callback slot","date":"2016-02-17T03:13:10.131Z","type":"message"}
{"nick":"creationix","message":"if you give it a thread, luv will do the resume in C, the `coros` table can be part of luv so people can register resumers","date":"2016-02-17T03:14:02.570Z","type":"message"}
{"nick":"daurnimator","message":"creationix: does that solve the problem of \"where does the error propagate to?\"","date":"2016-02-17T03:14:17.625Z","type":"message"}
{"nick":"daurnimator","message":"creationix: yeah I was sort of suggesting that 'coros' table would be a uservalue on the uv_loop_t","date":"2016-02-17T03:14:41.981Z","type":"message"}
{"nick":"creationix","message":"so many luvit APIs already accept a thread instead of a function","date":"2016-02-17T03:14:47.360Z","type":"message"}
{"nick":"daurnimator","message":"they do?","date":"2016-02-17T03:14:55.114Z","type":"message"}
{"nick":"creationix","message":"but it's not very elegant","date":"2016-02-17T03:14:58.241Z","type":"message"}
{"nick":"daurnimator","message":"creationix: btw, in a real version I'd make a 'yielder' a special function too. that way you can use things like https://github.com/saucisson/lua-coronest","date":"2016-02-17T03:17:23.996Z","type":"message"}
{"nick":"daurnimator","message":"creationix: re: luvit apis taking a thread instead of a function. by default have them assume the current thread. that way they \"just work\" as blocking apis :)","date":"2016-02-17T03:18:17.949Z","type":"message"}
{"nick":"creationix","message":"https://asciinema.org/a/3s3xe4waw32dqwcwib7j8eiem","date":"2016-02-17T03:18:32.779Z","type":"message"}
{"nick":"creationix","message":"daurnimator: I would do that, but it's a breaking change","date":"2016-02-17T03:18:41.592Z","type":"message"}
{"nick":"creationix","message":"currently if you omit the callback, it still runs non-blocking, it just doesn't notify you when done","date":"2016-02-17T03:18:54.996Z","type":"message"}
{"nick":"creationix","message":"if I instead make it block and return the value, some programs will break/deadlock","date":"2016-02-17T03:19:06.313Z","type":"message"}
{"nick":"creationix","message":"all my new APIs do just that","date":"2016-02-17T03:19:18.094Z","type":"message"}
{"nick":"daurnimator","message":"what do the old ones do instead?","date":"2016-02-17T03:19:28.582Z","type":"message"}
{"nick":"daurnimator","message":"return EAGAIN?","date":"2016-02-17T03:19:30.997Z","type":"message"}
{"nick":"creationix","message":"they don't usually return anything","date":"2016-02-17T03:19:46.250Z","type":"message"}
{"nick":"creationix","message":"just register the event with libuv and return","date":"2016-02-17T03:19:58.689Z","type":"message"}
{"nick":"daurnimator","message":"ah","date":"2016-02-17T03:21:01.932Z","type":"message"}
{"nick":"daurnimator","message":"so they don't care if it succeeds or fails?","date":"2016-02-17T03:21:27.121Z","type":"message"}
{"nick":"creationix","message":"well, all that information is in the callback","date":"2016-02-17T03:22:12.379Z","type":"message"}
{"nick":"creationix","message":"and if you omit the callback, it just runs and then drops the results","date":"2016-02-17T03:22:21.113Z","type":"message"}
{"nick":"creationix","message":"node.js behavior","date":"2016-02-17T03:22:26.739Z","type":"message"}
{"nick":"daurnimator","message":"ah","date":"2016-02-17T03:23:58.966Z","type":"message"}
{"nick":"creationix","message":"daurnimator: did you like how lift wraps luv with coroutines? http://lua-users.org/lists/lua-l/2016-02/msg00131.html","date":"2016-02-17T03:25:50.103Z","type":"message"}
{"nick":"creationix","message":"I would love for the node.js clone APIs to eventually be just a set of optional userspace libraries and have luvit be something more neutral","date":"2016-02-17T03:26:55.484Z","type":"message"}
{"nick":"creationix","message":"maybe just a set of libraries you can use with luarocks or lit and run with luvi based apps or normal lua","date":"2016-02-17T03:27:21.404Z","type":"message"}
{"nick":"creationix","message":"I'm getting close technically, it's mostly a question of how to rebrand stuff","date":"2016-02-17T03:27:39.328Z","type":"message"}
{"nick":"daurnimator","message":"creationix: honestly I think it should be the other way round","date":"2016-02-17T03:27:44.885Z","type":"message"}
{"nick":"creationix","message":"other way?","date":"2016-02-17T03:27:59.184Z","type":"message"}
{"nick":"daurnimator","message":"i.e. you should have all these nice 'blocking' coroutine yielding apis","date":"2016-02-17T03:28:06.537Z","type":"message"}
{"nick":"daurnimator","message":"then wrap them to provide node.js style callback ones","date":"2016-02-17T03:28:13.878Z","type":"message"}
{"nick":"daurnimator","message":"going the other direction is.... silly","date":"2016-02-17T03:28:24.884Z","type":"message"}
{"nick":"creationix","message":"yes, but that's libuv","date":"2016-02-17T03:28:32.820Z","type":"message"}
{"nick":"daurnimator","message":"not to mention making for hard to read code (IMO)","date":"2016-02-17T03:28:46.784Z","type":"message"}
{"nick":"creationix","message":"I need windows support, libuv is the best cross-platform library for this stuff","date":"2016-02-17T03:28:47.355Z","type":"message"}
{"nick":"daurnimator","message":"creationix: yeah I know..... hopefully I have an answer to that in the next month or so","date":"2016-02-17T03:29:09.605Z","type":"message"}
{"nick":"creationix","message":"it's inefficient to wrap callbacks in coroutines just to wrap back in callbacks.","date":"2016-02-17T03:29:14.208Z","type":"message"}
{"nick":"creationix","message":"now if I had a coroutine-based core, I'd happily do as you suggest","date":"2016-02-17T03:29:31.020Z","type":"message"}
{"nick":"creationix","message":"would simplify a lot of code","date":"2016-02-17T03:29:35.417Z","type":"message"}
{"nick":"daurnimator","message":"^^","date":"2016-02-17T03:29:42.413Z","type":"message"}
{"nick":"daurnimator","action":"is working on it","date":"2016-02-17T03:29:49.863Z","type":"action"}
{"nick":"daurnimator","message":"not with libuv though","date":"2016-02-17T03:29:55.849Z","type":"message"}
{"nick":"creationix","message":"of course","date":"2016-02-17T03:30:01.355Z","type":"message"}
{"nick":"creationix","message":"I went down that route wrapping libuv at the C level","date":"2016-02-17T03:30:10.909Z","type":"message"}
{"nick":"creationix","message":"then using nothing more than luajit's FFI to bind it (and not using ffi callbacks)","date":"2016-02-17T03:30:32.998Z","type":"message"}
{"nick":"creationix","message":"(meaning the wrapping was not using lua APIs, but just translating the callback API to poll style)","date":"2016-02-17T03:30:57.736Z","type":"message"}
{"nick":"daurnimator","message":"creationix: off topic: did you try out lua-http yet? :)","date":"2016-02-17T03:31:17.270Z","type":"message"}
{"nick":"creationix","message":"no, been pretty busy","date":"2016-02-17T03:31:27.046Z","type":"message"}
{"nick":"creationix","message":"4 kids + full-time job + making my own language","date":"2016-02-17T03:31:41.776Z","type":"message"}
{"nick":"creationix","message":"if luvit wasn't related to my day job, I wouldn't be maintaining it much","date":"2016-02-17T03:32:02.937Z","type":"message"}
{"nick":"daurnimator","message":"how does rackspace use luvit btw?","date":"2016-02-17T03:32:46.376Z","type":"message"}
{"nick":"creationix","message":"currently for the monitoring agent","date":"2016-02-17T03:32:56.062Z","type":"message"}
{"nick":"creationix","message":"it's a single binary using luvi that sits inside customer machines","date":"2016-02-17T03:33:06.339Z","type":"message"}
{"nick":"creationix","message":"it connects out to our servers and reports on health","date":"2016-02-17T03:33:14.750Z","type":"message"}
{"nick":"creationix","message":"the team was node.js based, but they needed something not so heavy.  They needed node in lua","date":"2016-02-17T03:33:31.779Z","type":"message"}
{"nick":"creationix","message":"hence why luvit was originally a node.js clone in lua","date":"2016-02-17T03:33:40.283Z","type":"message"}
{"nick":"creationix","message":"the original team is long gone and rphillips and I pretty much own the technical direction now.  I'm working on a new agent that's coroutine based at the core","date":"2016-02-17T03:34:27.005Z","type":"message"}
{"nick":"creationix","message":"still luv based because that's what I have","date":"2016-02-17T03:34:39.162Z","type":"message"}
{"nick":"creationix","message":"(when I made luvit I wasn't at rackspace, I made it for webos for dbus services, but same store.  Like node.js but less heavy)","date":"2016-02-17T03:35:27.177Z","type":"message"}
{"nick":"creationix","message":"*same story","date":"2016-02-17T03:35:34.027Z","type":"message"}
{"nick":"creationix","message":"webos used node.js for backend services which was crazy expensive.  Each process was 20+mb of ram and over 1000ms of startup time","date":"2016-02-17T03:36:02.212Z","type":"message"}
{"nick":"creationix","message":"luvit was a tiny fraction of both","date":"2016-02-17T03:36:17.620Z","type":"message"}
{"nick":"creationix","message":"but then HP shut down webos","date":"2016-02-17T03:36:28.294Z","type":"message"}
{"nick":"daurnimator","message":"creationix: and e.g. duk luv didn't do that for you? or did that come after?","date":"2016-02-17T03:41:54.803Z","type":"message"}
{"nick":"creationix","message":"dukluv is much newer","date":"2016-02-17T03:42:06.290Z","type":"message"}
{"nick":"creationix","message":"it's really neat, but not fast like luajit","date":"2016-02-17T03:42:21.965Z","type":"message"}
{"nick":"daurnimator","message":"creationix: would be cool to work on https://github.com/PaulBernier/castl","date":"2016-02-17T03:42:40.630Z","type":"message"}
{"nick":"daurnimator","message":"js => lua compiler","date":"2016-02-17T03:42:50.629Z","type":"message"}
{"nick":"daurnimator","message":"I know exactly how to work on it too","date":"2016-02-17T03:42:56.756Z","type":"message"}
{"nick":"creationix","message":"ohh, another","date":"2016-02-17T03:42:57.207Z","type":"message"}
{"nick":"daurnimator","message":"just don't have the time","date":"2016-02-17T03:43:04.336Z","type":"message"}
{"nick":"creationix","message":"the tessel people made one of those and gave up","date":"2016-02-17T03:43:10.966Z","type":"message"}
{"nick":"creationix","message":"https://github.com/tessel/colony-compiler","date":"2016-02-17T03:43:25.835Z","type":"message"}
{"nick":"daurnimator","message":"yeah I know","date":"2016-02-17T03:43:29.566Z","type":"message"}
{"nick":"daurnimator","message":"CASTL works quite well. just needs someone that knows lua a bit better","date":"2016-02-17T03:43:46.899Z","type":"message"}
{"nick":"creationix","message":"My new language is targetting esp8266 chips, but could be able to run in browsers and servers too","date":"2016-02-17T03:44:00.000Z","type":"message"}
{"nick":"daurnimator","message":"interesting","date":"2016-02-17T03:44:24.980Z","type":"message"}
{"nick":"daurnimator","message":"I sort of gave up on esp8266","date":"2016-02-17T03:44:32.950Z","type":"message"}
{"nick":"creationix","message":"they are really cheap","date":"2016-02-17T03:44:39.955Z","type":"message"}
{"nick":"daurnimator","message":"it just doesn't have the guts to have more than 2 TLS sessions","date":"2016-02-17T03:44:43.502Z","type":"message"}
{"nick":"creationix","message":"nodemcu is a mess","date":"2016-02-17T03:44:43.676Z","type":"message"}
{"nick":"daurnimator","message":"which makes it all very insecure","date":"2016-02-17T03:44:49.371Z","type":"message"}
{"nick":"creationix","message":"yeah, not the most stable thing","date":"2016-02-17T03:44:51.848Z","type":"message"}
{"nick":"daurnimator","message":"creationix: https://github.com/superhouse/esp-open-rtos seen this?","date":"2016-02-17T03:45:04.875Z","type":"message"}
{"nick":"creationix","message":"but my language should work great on arm32 microcontrollers too","date":"2016-02-17T03:45:15.916Z","type":"message"}
{"nick":"creationix","message":"it's just C99 at the moment","date":"2016-02-17T03:45:21.354Z","type":"message"}
{"nick":"creationix","message":"I think the JS port for esp8266 uses that","date":"2016-02-17T03:45:46.488Z","type":"message"}
{"nick":"creationix","message":"http://www.espruino.com/ESP8266","date":"2016-02-17T03:46:12.130Z","type":"message"}
{"nick":"creationix","message":"I mean http://www.espruino.com/EspruinoESP8266","date":"2016-02-17T03:46:19.084Z","type":"message"}
{"nick":"creationix","message":"daurnimator: what chips do you prefer, the stm32 family?","date":"2016-02-17T03:46:49.596Z","type":"message"}
{"nick":"daurnimator","message":"creationix: at the moment I have my hopes up for the CHIP","date":"2016-02-17T03:47:59.005Z","type":"message"}
{"nick":"daurnimator","message":"i.e. fuck embedded. for $9 I can have a real OS.","date":"2016-02-17T03:48:14.560Z","type":"message"}
{"nick":"creationix","message":"yeah, next time I go to dallas, I'm grabbing a few Pi zeros for $5 each","date":"2016-02-17T03:48:33.544Z","type":"message"}
{"nick":"daurnimator","message":"na, need wifi for most things","date":"2016-02-17T03:48:54.004Z","type":"message"}
{"nick":"daurnimator","message":"pi zero doesn't have the right things IMO","date":"2016-02-17T03:49:00.192Z","type":"message"}
{"nick":"creationix","message":"chip is nice though","date":"2016-02-17T03:49:22.324Z","type":"message"}
{"nick":"creationix","message":"oh wow, chip is crazy powerful compared to esp8266","date":"2016-02-17T03:51:14.905Z","type":"message"}
{"nick":"creationix","message":"I wonder how batter life compares","date":"2016-02-17T03:51:19.958Z","type":"message"}
{"nick":"daurnimator","message":"pi zero + usb wifi has already blown out both $ budget and power budget.","date":"2016-02-17T03:51:22.272Z","type":"message"}
{"nick":"creationix","message":"wifi is the main drain right?","date":"2016-02-17T03:51:30.351Z","type":"message"}
{"nick":"creationix","message":"(so much not different)","date":"2016-02-17T03:51:36.328Z","type":"message"}
{"nick":"daurnimator","message":"creationix: power draw of chip is around 2* more than esp8266 AFAIK","date":"2016-02-17T03:51:38.725Z","type":"message"}
{"nick":"creationix","message":"not bad for 100x power","date":"2016-02-17T03:51:47.780Z","type":"message"}
{"nick":"daurnimator","message":"yep","date":"2016-02-17T03:51:57.079Z","type":"message"}
{"nick":"creationix","message":"ohh and storage built-in","date":"2016-02-17T03:52:17.296Z","type":"message"}
{"nick":"creationix","message":"much cheaper than pi zero if you need wifi","date":"2016-02-17T03:52:26.877Z","type":"message"}
{"nick":"daurnimator","message":"^^","date":"2016-02-17T03:52:34.654Z","type":"message"}
{"nick":"creationix","message":"and bluetooth!","date":"2016-02-17T03:52:41.004Z","type":"message"}
{"nick":"daurnimator","message":"or storage, or lots of other things","date":"2016-02-17T03:52:41.864Z","type":"message"}
{"nick":"creationix","message":"does it have BTLE that mobile devices can use?","date":"2016-02-17T03:52:57.355Z","type":"message"}
{"nick":"creationix","message":"looks like it's the version before that","date":"2016-02-17T03:53:13.480Z","type":"message"}
{"nick":"creationix","message":"hmm, so hdmi isn't built-in, that was a turn-off when I last looked at them","date":"2016-02-17T03:53:44.343Z","type":"message"}
{"nick":"creationix","message":"but for a microcontroller replacement, I don't care about hdmi","date":"2016-02-17T03:53:54.194Z","type":"message"}
{"nick":"daurnimator","message":"creationix: \"CHIP supports the Bluetooth 4.0 LE standard using the built-in Bluetooth.\"","date":"2016-02-17T03:54:04.753Z","type":"message"}
{"nick":"creationix","message":"I may have to preorder some if I didn't already","date":"2016-02-17T03:54:27.950Z","type":"message"}
{"nick":"creationix","message":"I'll bet these run luvit no problem too","date":"2016-02-17T03:54:34.622Z","type":"message"}
{"nick":"daurnimator","message":"creationix: it does have HDMI, but only on headers, you need an adapter from headers to female hdmi (which they sell)","date":"2016-02-17T03:54:46.019Z","type":"message"}
{"nick":"creationix","message":"oh, that's not bad","date":"2016-02-17T03:55:00.684Z","type":"message"}
{"nick":"creationix","message":"so pocket chip just uses the headers directly I'll bet","date":"2016-02-17T03:55:14.818Z","type":"message"}
{"nick":"daurnimator","message":"yep","date":"2016-02-17T03:55:23.758Z","type":"message"}
{"nick":"daurnimator","message":"it also has composite video out","date":"2016-02-17T03:56:13.732Z","type":"message"}
{"nick":"daurnimator","message":"creationix: anyway, it's my remaining hope for embedded projects to be sane.","date":"2016-02-17T04:00:20.199Z","type":"message"}
{"nick":"creationix","message":"I think I'll take a closer look at chip, this will make a lot of things much easier for me.","date":"2016-02-17T04:05:42.738Z","type":"message"}
{"nick":"creationix","action":"just preordered 4 chips","date":"2016-02-17T04:10:38.744Z","type":"action"}
{"nick":"daurnimator","message":"hehe","date":"2016-02-17T04:11:22.583Z","type":"message"}
{"nick":"daurnimator","message":"I tried to preorder several, but shopify refuse my credit card.","date":"2016-02-17T04:11:57.787Z","type":"message"}
{"nick":"daurnimator","message":"and shopify tell me the merchant has to file the bug with them, they can't talk to me directly","date":"2016-02-17T04:12:19.934Z","type":"message"}
{"nick":"daurnimator","message":"even though there's obviously a shopify bug","date":"2016-02-17T04:12:30.637Z","type":"message"}
{"nick":"creationix","message":"alright, my vm is up to 42kb of static linux binary with rich garbage collected data types","date":"2016-02-17T04:53:10.938Z","type":"message"}
{"nick":"daurnimator","message":"creationix: almost about to get bigger than lua ;)","date":"2016-02-17T04:54:00.438Z","type":"message"}
{"nick":"creationix","message":"boolean, integer (up to int64_t), rational (up to int64_t/int64_t), unicode character, unicode string, byte array, uint32_t array (for pixels), cons pair, list, set, map, and immutable symbol (interned string)","date":"2016-02-17T04:54:58.863Z","type":"message"}
{"nick":"creationix","message":"daurnimator: which lua?","date":"2016-02-17T04:55:18.045Z","type":"message"}
{"nick":"daurnimator","message":"creationix: if you strip the stdlib + the lexer out of lua you can get the whole thing under 64K","date":"2016-02-17T04:55:51.778Z","type":"message"}
{"nick":"creationix","message":"nice","date":"2016-02-17T04:56:00.804Z","type":"message"}
{"nick":"creationix","message":"daurnimator: how do I build lua 5.3 as a static lib using musl-gcc and without standard lib?","date":"2016-02-17T04:56:55.049Z","type":"message"}
{"nick":"daurnimator","message":"creationix: it's not a built in build option. takes some surgery","date":"2016-02-17T04:57:24.102Z","type":"message"}
{"nick":"daurnimator","message":"I last did it.... 7 years ago?","date":"2016-02-17T04:57:40.119Z","type":"message"}
{"nick":"daurnimator","message":"don't have the time to take you through it right now.","date":"2016-02-17T04:57:59.302Z","type":"message"}
{"nick":"creationix","message":"yeah, full lua is 307k for lua and 193K for luac","date":"2016-02-17T05:11:30.827Z","type":"message"}
{"nick":"creationix","action":"has to remember how to compile a static lua using musl","date":"2016-02-17T05:11:49.485Z","type":"action"}
{"nick":"daurnimator","message":"creationix: okay... I got absorbed","date":"2016-02-17T05:13:24.412Z","type":"message"}
{"nick":"daurnimator","message":"creationix: doing things really lazily, I got it down to 86K","date":"2016-02-17T05:13:36.723Z","type":"message"}
{"nick":"creationix","message":"just tweaked main to not include the libs?","date":"2016-02-17T05:13:51.829Z","type":"message"}
{"nick":"creationix","message":"so one of the things I love about microcontrollers is the lack of an OS getting in the way","date":"2016-02-17T05:14:30.328Z","type":"message"}
{"nick":"creationix","message":"but I guess booting the kernel and then my app as init is close","date":"2016-02-17T05:14:46.826Z","type":"message"}
{"nick":"creationix","message":"my app would be all the userspace there is","date":"2016-02-17T05:15:09.731Z","type":"message"}
{"nick":"creationix","message":"might make wifi hard though, hmm","date":"2016-02-17T05:15:24.993Z","type":"message"}
{"nick":"creationix","message":"I'll have to read up on what exactly the chip kernel will provide","date":"2016-02-17T05:16:31.847Z","type":"message"}
{"nick":"daurnimator","message":"creationix: standard linux kernel","date":"2016-02-17T05:32:09.633Z","type":"message"}
{"nick":"daurnimator","message":"they're trying to keep it mainline","date":"2016-02-17T05:32:16.234Z","type":"message"}
{"nick":"creationix","message":"that's good.  So I'll be reading up on what the kernel provides directly. It's probably more than what the esp chips provide","date":"2016-02-17T05:32:44.012Z","type":"message"}
{"nick":"creationix","message":"and better documented","date":"2016-02-17T05:32:47.345Z","type":"message"}
{"nick":"daurnimator","message":"yup","date":"2016-02-17T05:32:51.753Z","type":"message"}
{"nick":"creationix","message":"I don't think people realize how much of a full system is in the linux kernal alone","date":"2016-02-17T05:33:11.843Z","type":"message"}
{"nick":"daurnimator","message":"got it","date":"2016-02-17T05:36:12.723Z","type":"message"}
{"nick":"daurnimator","message":"lua 5.3 down to 60K","date":"2016-02-17T05:36:19.817Z","type":"message"}
{"nick":"daurnimator","message":"http://sprunge.us/BcEd","date":"2016-02-17T05:36:53.172Z","type":"message"}
{"nick":"daurnimator","message":"cd src && make all MYCFLAGS=\"-flto -Os\" SYSLDFLAGS=\"-flto -Os\"","date":"2016-02-17T05:37:06.216Z","type":"message"}
{"nick":"daurnimator","message":"File: ‘lua’  Size: 71040     \tBlocks: 144        IO Block: 4096   regular file","date":"2016-02-17T05:37:39.064Z","type":"message"}
{"nick":"daurnimator","message":"$ strip lua","date":"2016-02-17T05:37:46.822Z","type":"message"}
{"nick":"daurnimator","message":"File: ‘lua’  Size: 60288     \tBlocks: 120        IO Block: 4096   regular file","date":"2016-02-17T05:37:54.158Z","type":"message"}
{"nick":"daurnimator","message":"so I made luaY_parser and luaL_openlibs unreachable. then did link time optimisation (which will strip all the dead code). then stripped debug symbols :)","date":"2016-02-17T05:39:02.529Z","type":"message"}
{"nick":"SkyRocknRoll","date":"2016-02-17T05:39:30.163Z","type":"join"}
{"nick":"daurnimator","message":"with musl-gcc it's down to 57280 bytes","date":"2016-02-17T05:43:28.745Z","type":"message"}
{"nick":"daurnimator","message":"creationix: make all CC=musl-gcc CFLAGS=\"-flto -Os\" LDFLAGS=\"-static -flto -Os -s\"","date":"2016-02-17T06:00:15.783Z","type":"message"}
{"nick":"creationix","message":"nice","date":"2016-02-17T06:01:02.294Z","type":"message"}
{"nick":"daurnimator","message":"after that improvements are quite minor","date":"2016-02-17T06:03:48.033Z","type":"message"}
{"nick":"daurnimator","message":"currently at 87688","date":"2016-02-17T06:03:51.983Z","type":"message"}
{"nick":"daurnimator","message":"i'm sure you can get much smaller once you don't actually need it to behave like a repl on a linux terminal :p","date":"2016-02-17T06:05:56.825Z","type":"message"}
{"nick":"creationix","message":"using the same flags, my vm is 27Kb","date":"2016-02-17T06:53:30.971Z","type":"message"}
{"nick":"daurnimator","message":"creationix: btw, some approximate library sizes: https://gist.github.com/daurnimator/527d7c4b9d13c2effd8e","date":"2016-02-17T06:54:33.838Z","type":"message"}
