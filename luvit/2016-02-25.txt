{"nick":"DarkGod","reason":"Ping timeout: 252 seconds","date":"2016-02-25T01:02:34.553Z","type":"quit"}
{"nick":"SkyRocknRoll","date":"2016-02-25T06:36:35.360Z","type":"join"}
{"nick":"SkyRocknRoll_","date":"2016-02-25T08:39:45.510Z","type":"join"}
{"nick":"SkyRocknRoll","reason":"Ping timeout: 276 seconds","date":"2016-02-25T08:41:33.386Z","type":"quit"}
{"nick":"DarkGod","date":"2016-02-25T09:41:18.991Z","type":"join"}
{"nick":"DarkGod","reason":"Ping timeout: 244 seconds","date":"2016-02-25T10:08:27.035Z","type":"quit"}
{"nick":"SkyRocknRoll_","reason":"Ping timeout: 252 seconds","date":"2016-02-25T12:01:28.467Z","type":"quit"}
{"nick":"DarkGod","date":"2016-02-25T13:30:07.668Z","type":"join"}
{"nick":"rphillips","message":"good morning","date":"2016-02-25T15:12:11.944Z","type":"message"}
{"nick":"creationix","message":"mornin","date":"2016-02-25T15:18:15.212Z","type":"message"}
{"nick":"creationix","message":"rphillips: are you around today or still trying to rest?","date":"2016-02-25T15:19:16.737Z","type":"message"}
{"nick":"erlbot--_","date":"2016-02-25T15:25:06.625Z","type":"join"}
{"nick":"erlbot--","reason":"Ping timeout: 240 seconds","date":"2016-02-25T15:26:59.355Z","type":"quit"}
{"nick":"travis-ci","date":"2016-02-25T15:42:08.988Z","type":"join"}
{"nick":"travis-ci","message":"luvit/luvi#863 (master - a3ec57f : Tim Caswell): The build passed.","date":"2016-02-25T15:42:10.015Z","type":"message"}
{"nick":"travis-ci","message":"Change view : https://github.com/luvit/luvi/compare/fa8185289619...a3ec57fe2e89","date":"2016-02-25T15:42:10.226Z","type":"message"}
{"nick":"travis-ci","message":"Build details : https://travis-ci.org/luvit/luvi/builds/111776438","date":"2016-02-25T15:42:10.227Z","type":"message"}
{"nick":"travis-ci","date":"2016-02-25T15:42:10.227Z","type":"part"}
{"nick":"creationix","message":"interesting conversation about binary modules and luvi https://github.com/luvit/luvi/issues/140#issuecomment-188573479","date":"2016-02-25T15:44:57.084Z","type":"message"}
{"nick":"visionik","reason":"Read error: Connection reset by peer","date":"2016-02-25T15:48:09.995Z","type":"quit"}
{"nick":"ksheedlo","reason":"Ping timeout: 250 seconds","date":"2016-02-25T15:48:43.148Z","type":"quit"}
{"nick":"visionik","date":"2016-02-25T15:49:09.782Z","type":"join"}
{"nick":"ksheedlo-rax","date":"2016-02-25T15:49:59.693Z","type":"join"}
{"nick":"rphillips","message":"creationix: around today","date":"2016-02-25T15:51:34.790Z","type":"message"}
{"nick":"rphillips","message":"feeling much better","date":"2016-02-25T15:51:37.210Z","type":"message"}
{"nick":"creationix","message":"I'm glad","date":"2016-02-25T15:52:02.667Z","type":"message"}
{"nick":"creationix","message":"So I'm finally cleaning up the ssl stuff in coro-*","date":"2016-02-25T15:52:14.742Z","type":"message"}
{"nick":"creationix","message":"The long-term plan is to modify luv to accept an ssl context for uv_stream_t, but I found a way in the mid-term to simulate that in lua","date":"2016-02-25T15:52:57.419Z","type":"message"}
{"nick":"rphillips","message":"nice","date":"2016-02-25T15:53:08.052Z","type":"message"}
{"nick":"creationix","message":"https://github.com/luvit/lit/pull/174","date":"2016-02-25T15:53:27.908Z","type":"message"}
{"nick":"creationix","message":"basically, there is a new module \"secure-socket\" that takes an ssl config table and a uv_stream_t and returns a fake uv_stream_t where reading and writing goes through the crypto","date":"2016-02-25T15:53:59.304Z","type":"message"}
{"nick":"creationix","message":"the main interface will wait for handshake to complete and either return (coroutine style) or pass (callback style) the fake stream back","date":"2016-02-25T15:54:25.634Z","type":"message"}
{"nick":"creationix","message":"this means it can be shared between luvit and coro-* so we don't need two different wrappers around openssl","date":"2016-02-25T15:54:46.380Z","type":"message"}
{"nick":"creationix","message":"and when it eventually moves to the C side to avoid all the wasteful interning of cipher-text into lua, the libraries will need minimal changes","date":"2016-02-25T15:55:28.999Z","type":"message"}
{"nick":"creationix","message":"Also it really cleans up the coro-* ecosystem.  Now you can simple pass a tls options table to coro-net and the resulting read/write functions will go through ssl","date":"2016-02-25T15:56:46.363Z","type":"message"}
{"nick":"creationix","message":"no need for tls-wrapper at all","date":"2016-02-25T15:56:52.975Z","type":"message"}
{"nick":"creationix","message":"and the newish way of passing encoder/decoders to coro-net now works with tls (you don't have to choose between new way and supporting tls which we had to do before)","date":"2016-02-25T15:57:38.106Z","type":"message"}
{"nick":"rphillips","message":"very cool","date":"2016-02-25T15:58:36.634Z","type":"message"}
{"nick":"rphillips","message":"that shold be a nice improvement","date":"2016-02-25T15:58:41.864Z","type":"message"}
{"nick":"rphillips","message":"should*","date":"2016-02-25T15:58:46.350Z","type":"message"}
{"nick":"creationix","message":"it also means that nothing needs a dependency on openssl just because it might use tls","date":"2016-02-25T15:59:14.442Z","type":"message"}
{"nick":"creationix","message":"they can just depend on coro-net.  And only *if* they try to use tls, will it notice if openssl is installed or not","date":"2016-02-25T15:59:47.319Z","type":"message"}
{"nick":"creationix","message":"optional dependency","date":"2016-02-25T15:59:53.292Z","type":"message"}
