{"nick":"rgrinberg","reason":"Ping timeout: 240 seconds","date":"2016-08-19T01:54:12.484Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-08-19T03:11:00.858Z","type":"join"}
{"nick":"rgrinberg","reason":"Ping timeout: 276 seconds","date":"2016-08-19T04:15:54.664Z","type":"quit"}
{"nick":"SkyRocknRoll","date":"2016-08-19T04:43:35.665Z","type":"join"}
{"nick":"rendar","date":"2016-08-19T06:18:40.279Z","type":"join"}
{"nick":"SkyRocknRoll","reason":"Remote host closed the connection","date":"2016-08-19T09:36:19.466Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-08-19T12:15:48.185Z","type":"join"}
{"nick":"urzds","message":"creationix: Yes, it is a package that I want to publish to lit. I assumed lit packages need an init.lua file, which lit would use as the deps/my-package.lua file when installed into other projects. But it appears to be able to publish the contents of all of libs/, too.","date":"2016-08-19T14:03:16.462Z","type":"message"}
{"nick":"creationix","message":"urzds, so lit has either single-file packages or folder packages","date":"2016-08-19T15:31:31.104Z","type":"message"}
{"nick":"creationix","message":"with single-file, you just embed the metadata in a comment at the top.  Most the luvit and lit internal packages are like this","date":"2016-08-19T15:31:50.156Z","type":"message"}
{"nick":"creationix","message":"with multi-file, you need package.lua (though it might try to also pull metadata from init.lua)","date":"2016-08-19T15:32:08.243Z","type":"message"}
{"nick":"urzds","message":"But in the single-file case I cannot run tests, because I have no way of loading the module from my own tree, is that correct?","date":"2016-08-19T15:32:20.841Z","type":"message"}
{"nick":"creationix","message":"I have no way of running your tests (me being the lit server)","date":"2016-08-19T15:32:42.080Z","type":"message"}
{"nick":"creationix","message":"but you can","date":"2016-08-19T15:32:44.414Z","type":"message"}
{"nick":"urzds","message":"How?","date":"2016-08-19T15:32:56.153Z","type":"message"}
{"nick":"creationix","message":"just put the file in `libs/foo.lua` or `deps/foo.lua` and then in `tests/mytest.lua` just `require 'foo'`","date":"2016-08-19T15:33:08.740Z","type":"message"}
{"nick":"creationix","message":"and when you publish, just `lit publish libs/foo.lua` directly","date":"2016-08-19T15:33:24.182Z","type":"message"}
{"nick":"creationix","message":"or as I do, `lit publish deps/*` since I put all my public packages in deps and all my private ones in libs","date":"2016-08-19T15:33:43.544Z","type":"message"}
{"nick":"urzds","message":"I thought deps/ is reserved for lit - that'd be where it installs all the dependencies into?","date":"2016-08-19T15:34:16.414Z","type":"message"}
{"nick":"creationix","message":"it's used by lit, yes","date":"2016-08-19T15:34:29.398Z","type":"message"}
{"nick":"creationix","message":"but it does try hard to not overwrite anything you put there manually","date":"2016-08-19T15:34:40.161Z","type":"message"}
{"nick":"creationix","message":"but libs works just as well","date":"2016-08-19T15:34:51.045Z","type":"message"}
{"nick":"urzds","message":"But you suggested to rm -fr deps/ to update...","date":"2016-08-19T15:34:53.378Z","type":"message"}
{"nick":"creationix","message":"yes and that's what I do in my workflow","date":"2016-08-19T15:35:11.766Z","type":"message"}
{"nick":"creationix","message":"everything in deps is published to lit","date":"2016-08-19T15:35:20.780Z","type":"message"}
{"nick":"creationix","message":"so when I delete it and re install, they come back","date":"2016-08-19T15:35:29.778Z","type":"message"}
{"nick":"creationix","message":"if the new file is older than what I had before (since I do commit deps to git in this workflow), I can see it","date":"2016-08-19T15:35:50.154Z","type":"message"}
{"nick":"creationix","message":"that means I forgot to publish an update for that package","date":"2016-08-19T15:35:59.746Z","type":"message"}
{"nick":"urzds","message":"But the package itself cannot be put into deps/ then, because if you wanted to update its dependencies, you'd also delete your own source code...","date":"2016-08-19T15:36:00.818Z","type":"message"}
{"nick":"creationix","message":"maybe we're not talking about the same thing","date":"2016-08-19T15:36:37.216Z","type":"message"}
{"nick":"urzds","message":"And if you did not commit to git, you'd be screwed...","date":"2016-08-19T15:36:38.688Z","type":"message"}
{"nick":"urzds","message":"Since all the changes that you made are gone.","date":"2016-08-19T15:36:58.569Z","type":"message"}
{"nick":"creationix","message":"true, I commit before nuking","date":"2016-08-19T15:37:20.859Z","type":"message"}
{"nick":"creationix","message":"but let's step back, what are you trying to do?","date":"2016-08-19T15:37:28.341Z","type":"message"}
{"nick":"urzds","message":"I have a very tiny lit package that is just one file big, which I want to test.","date":"2016-08-19T15:37:52.605Z","type":"message"}
{"nick":"creationix","message":"the suggested workflow is as you assume, put deps in gitignore and only use it for third-party lit published dependencies","date":"2016-08-19T15:38:15.165Z","type":"message"}
{"nick":"creationix","message":"right, so in that case, I just put it on the root of my repo","date":"2016-08-19T15:38:28.410Z","type":"message"}
{"nick":"creationix","message":"and require it as `../foo` or `./foo` depending on where the tests are","date":"2016-08-19T15:38:41.017Z","type":"message"}
{"nick":"creationix","message":"but don't name it init, name it the name of the package","date":"2016-08-19T15:38:51.143Z","type":"message"}
{"nick":"urzds","message":"As I understood, I'd put the one file into libs/ and instead of running \"lit publish\" I'd run \"lit publish libs/*\"?","date":"2016-08-19T15:39:00.700Z","type":"message"}
{"nick":"creationix","message":"putting it libs just puts it in the global search path, it's not required","date":"2016-08-19T15:39:21.194Z","type":"message"}
{"nick":"urzds","message":"Ok, that's another way.","date":"2016-08-19T15:39:26.436Z","type":"message"}
{"nick":"creationix","message":"so `/foo.lua` is your package, that folder will also have `/README.md` and `/test-foo.lua` if you have just one test file","date":"2016-08-19T15:40:01.007Z","type":"message"}
{"nick":"creationix","message":"or `test/*.lua` for multiple tests","date":"2016-08-19T15:40:08.973Z","type":"message"}
{"nick":"creationix","message":"or something","date":"2016-08-19T15:40:12.349Z","type":"message"}
{"nick":"urzds","message":"k","date":"2016-08-19T15:40:25.143Z","type":"message"}
{"nick":"creationix","message":"(the README would be just for github as it won't publish to lit","date":"2016-08-19T15:40:25.766Z","type":"message"}
{"nick":"urzds","message":"But lit will publish according to the metadata in the file itself, not based on the filename?","date":"2016-08-19T15:40:48.456Z","type":"message"}
{"nick":"urzds","message":"In that case I can also get rid of package.lua...","date":"2016-08-19T15:41:00.712Z","type":"message"}
{"nick":"creationix","message":"right","date":"2016-08-19T15:41:03.405Z","type":"message"}
{"nick":"creationix","message":"the filename should match the last part of the metadata name","date":"2016-08-19T15:41:14.965Z","type":"message"}
{"nick":"creationix","message":"because your tests will need to use the path to the filename and people using your library will use the metadata name","date":"2016-08-19T15:41:31.090Z","type":"message"}
{"nick":"urzds","message":"Irks: tests/run.lua:25: bad argument #1 to 'fs_scandir_next' (uv_req expected, got nil)","date":"2016-08-19T15:45:11.489Z","type":"message"}
{"nick":"urzds","message":"I am using the example run.lua file.","date":"2016-08-19T15:45:34.784Z","type":"message"}
{"nick":"urzds","message":"It does not expect that req might be nil if the tests/ directory does not exist.","date":"2016-08-19T15:46:10.319Z","type":"message"}
{"nick":"creationix","message":"that's using the bundle API right?","date":"2016-08-19T15:47:33.149Z","type":"message"}
{"nick":"creationix","message":"if so sounds like a bug","date":"2016-08-19T15:47:55.828Z","type":"message"}
{"nick":"urzds","message":"creationix: I don't even have to modify test-date.lua - I can still require(\"date\") after moving the latter out of libs into the root of the repository. Is that just by chance, or can I rely on this behaviour?","date":"2016-08-19T15:48:02.026Z","type":"message"}
{"nick":"creationix","message":"the root is not in the search path","date":"2016-08-19T15:48:31.634Z","type":"message"}
{"nick":"creationix","message":"something is up","date":"2016-08-19T15:48:36.008Z","type":"message"}
{"nick":"urzds","message":"creationix: No, it's this file: https://github.com/luvit/luvit/blob/master/tests/run.lua","date":"2016-08-19T15:48:45.609Z","type":"message"}
{"nick":"creationix","message":"(though come to think of it, why didn't I add the roots into the path?)","date":"2016-08-19T15:48:50.861Z","type":"message"}
{"nick":"urzds","message":"creationix: Could this be an interaction with LUA_PATH that was set by luarocks?","date":"2016-08-19T15:49:12.153Z","type":"message"}
{"nick":"creationix","message":"perhaps, it is supposed to fallback to native require","date":"2016-08-19T15:49:36.155Z","type":"message"}
{"nick":"urzds","message":"No, can't be.","date":"2016-08-19T15:49:38.569Z","type":"message"}
{"nick":"rgrinberg","reason":"Ping timeout: 240 seconds","date":"2016-08-19T15:50:03.973Z","type":"quit"}
{"nick":"urzds","message":"./ or ../ or similar are not in LUA_PATH.","date":"2016-08-19T15:50:06.662Z","type":"message"}
{"nick":"creationix","message":"the default package.path has `./?.lua` as the first path","date":"2016-08-19T15:50:50.808Z","type":"message"}
{"nick":"creationix","message":"but not ..","date":"2016-08-19T15:50:59.448Z","type":"message"}
{"nick":"urzds","message":"It seems to work for any number of \"./\" or \"../\" that I put before \"data\" in the call to require...","date":"2016-08-19T15:51:34.947Z","type":"message"}
{"nick":"urzds","message":"require(\"../../date\") == require(\"../date\") == require(\"./date\")","date":"2016-08-19T15:51:55.511Z","type":"message"}
{"nick":"urzds","message":"... put before \"date\"","date":"2016-08-19T15:52:36.098Z","type":"message"}
{"nick":"urzds","message":"It even works if I require \"..../date\".","date":"2016-08-19T15:56:04.137Z","type":"message"}
{"nick":"urzds","message":"Literally. Four dots.","date":"2016-08-19T15:56:15.272Z","type":"message"}
{"nick":"urzds","message":"creationix: Is that somehow expected, or did I mess something up?","date":"2016-08-19T16:00:13.129Z","type":"message"}
{"nick":"creationix","message":"that's strange","date":"2016-08-19T16:02:07.504Z","type":"message"}
{"nick":"creationix","message":"which require are you using?","date":"2016-08-19T16:02:11.940Z","type":"message"}
{"nick":"urzds","message":"The default require that I get in luvit...","date":"2016-08-19T16:02:21.978Z","type":"message"}
{"nick":"creationix","message":"weird","date":"2016-08-19T16:02:26.502Z","type":"message"}
{"nick":"urzds","message":"This is the code: https://github.com/urzds/luvit-date","date":"2016-08-19T16:02:44.140Z","type":"message"}
{"nick":"urzds","message":"# mv libs/date.lua .","date":"2016-08-19T16:03:25.076Z","type":"message"}
{"nick":"creationix","message":"looks like a bug in require","date":"2016-08-19T16:03:30.928Z","type":"message"}
{"nick":"urzds","message":"And put the contents of package.lua into date.lua, and then you have the exact same state as I have.","date":"2016-08-19T16:03:47.137Z","type":"message"}
{"nick":"creationix","message":"or lua's require is doing something funly","date":"2016-08-19T16:04:17.358Z","type":"message"}
{"nick":"urzds","message":"LUA_PATH=\"${HOME}/.luarocks/share/lua/5.1/?.lua;${HOME}/.luarocks/share/lua/5.1/?/init.lua;${HOME}/.local/share/lua/5.1/?.lua;${HOME}/.local/share/lua/5.1/?/init.lua;./?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;/usr/local/lib/lua/5.1/?.lua;/usr/local/lib/lua/5.1/?/init.lua;/usr/share/lua/5.1/?.lua;/usr/share/lua/5.1/?/init.lua\"","date":"2016-08-19T16:04:42.238Z","type":"message"}
{"nick":"creationix","message":"change date to something wrong and look at the stack trace","date":"2016-08-19T16:04:45.378Z","type":"message"}
{"nick":"creationix","message":"require('..../date2'), for example","date":"2016-08-19T16:04:57.319Z","type":"message"}
{"nick":"urzds","message":"Then it starts to look into this location, e.g. $HOME/.luarocks/share/lua/5.1////////////datex.lua","date":"2016-08-19T16:05:28.210Z","type":"message"}
{"nick":"creationix","message":"yep, it's stripping the leading dots","date":"2016-08-19T16:05:48.322Z","type":"message"}
{"nick":"creationix","message":"that's why 4 works","date":"2016-08-19T16:05:52.074Z","type":"message"}
{"nick":"creationix","message":"those \"no file\" lines in the stack trace are from native require","date":"2016-08-19T16:06:06.988Z","type":"message"}
{"nick":"urzds","message":"It replaces dots by /","date":"2016-08-19T16:06:08.373Z","type":"message"}
{"nick":"creationix","message":"and luvit currently doesn't use it, but only as a fallback if it can't find the module","date":"2016-08-19T16:06:19.598Z","type":"message"}
{"nick":"urzds","message":"Ah, I get it.","date":"2016-08-19T16:06:35.844Z","type":"message"}
{"nick":"creationix","message":"I've switched everything else over to the lit-loader require system that just adds a new loader to native require, but it would be a breaking change to do it for luvit","date":"2016-08-19T16:06:47.437Z","type":"message"}
{"nick":"creationix","message":"the semantics are slightly different","date":"2016-08-19T16:06:53.427Z","type":"message"}
{"nick":"urzds","message":"So I can require\"foo.bar\" and get foo/bar.lua","date":"2016-08-19T16:06:53.866Z","type":"message"}
{"nick":"urzds","message":"What is \"everything else\"?","date":"2016-08-19T16:07:14.707Z","type":"message"}
{"nick":"creationix","message":"right, just be aware of the limitations of luvit's native require.  Those paths are relative to cwd, not the file calling require","date":"2016-08-19T16:07:19.613Z","type":"message"}
{"nick":"creationix","message":"lit itself and all the projects I make with luvit","date":"2016-08-19T16:07:28.835Z","type":"message"}
{"nick":"creationix","message":"^ (those are everything else)","date":"2016-08-19T16:07:41.010Z","type":"message"}
{"nick":"creationix","message":"here is the require system for lit https://github.com/luvit/lit/blob/master/luvit-loader.lua","date":"2016-08-19T16:08:04.803Z","type":"message"}
{"nick":"urzds","message":"So can I make my lib use that lit-loader and it will be more sane?","date":"2016-08-19T16:08:08.649Z","type":"message"}
{"nick":"creationix","message":"it's just a plugin into native lua require","date":"2016-08-19T16:08:09.850Z","type":"message"}
{"nick":"creationix","message":"yes, but if you're still using `luvit` the CLI tool to run your program, then luvit's require will still get injected","date":"2016-08-19T16:08:38.659Z","type":"message"}
{"nick":"creationix","message":"though someone has made a version of the luvit cli tool that removes all the opinoins","date":"2016-08-19T16:08:53.612Z","type":"message"}
{"nick":"creationix","message":"it's really nice and clean","date":"2016-08-19T16:08:57.451Z","type":"message"}
{"nick":"creationix","message":"https://github.com/squeek502/luver","date":"2016-08-19T16:09:49.130Z","type":"message"}
{"nick":"creationix","message":"the `luvit` cli tool is legacy, it's the node.js clone","date":"2016-08-19T16:09:59.227Z","type":"message"}
{"nick":"creationix","message":"I'm just not sure how to rename things since the project itself is called \"luvit\"","date":"2016-08-19T16:10:12.142Z","type":"message"}
{"nick":"creationix","message":"notice that he uses luvit-loader instead of the node-clone require in luvit https://github.com/squeek502/luver/blob/master/deps/luvit-loader.lua","date":"2016-08-19T16:10:43.798Z","type":"message"}
{"nick":"creationix","message":"he's not done with it yet and so it's not published to lit, but you can build it directly from github","date":"2016-08-19T16:12:54.660Z","type":"message"}
{"nick":"creationix","message":"lit make github://squeek502/luver","date":"2016-08-19T16:12:55.448Z","type":"message"}
{"nick":"creationix","message":"then `./luver yourapp/entry.lua`","date":"2016-08-19T16:13:12.602Z","type":"message"}
{"nick":"urzds","message":"luvit is legacy? I thought the whole point of luvit was to have a node.js clone?","date":"2016-08-19T16:13:41.123Z","type":"message"}
{"nick":"creationix","message":"it was","date":"2016-08-19T16:15:40.866Z","type":"message"}
{"nick":"creationix","message":"but after 5 years there was virtually no interest in a node clone in lua","date":"2016-08-19T16:16:02.187Z","type":"message"}
{"nick":"creationix","message":"but there is a lot more interest in something node-like, but adapter for lua's strengths","date":"2016-08-19T16:16:17.745Z","type":"message"}
{"nick":"creationix","message":"*adapted","date":"2016-08-19T16:16:23.661Z","type":"message"}
{"nick":"urzds","message":"Ah, ok.","date":"2016-08-19T16:16:30.672Z","type":"message"}
{"nick":"urzds","message":"As long as it is well documented...","date":"2016-08-19T16:16:38.995Z","type":"message"}
{"nick":"urzds","message":"That was nice about luvit initially - it would (almost) work, if you followed the node.js docs.","date":"2016-08-19T16:17:00.521Z","type":"message"}
{"nick":"creationix","message":"right, that's why the legacy luvit interface is still maintained","date":"2016-08-19T16:17:16.803Z","type":"message"}
{"nick":"creationix","message":"it's even installed by default when you do `lit update`","date":"2016-08-19T16:17:27.291Z","type":"message"}
{"nick":"creationix","message":"and rackspace still uses it heavily internally","date":"2016-08-19T16:17:36.790Z","type":"message"}
{"nick":"creationix","message":"but almost all new development is in the lit and luvi based stuff","date":"2016-08-19T16:17:48.706Z","type":"message"}
{"nick":"urzds","message":"In lit publish, with --[[lit-meta, how do you get all the values? Do you simply grab them from _G?","date":"2016-08-19T16:19:07.228Z","type":"message"}
{"nick":"rgrinberg","date":"2016-08-19T16:19:38.282Z","type":"join"}
{"nick":"urzds","message":"I tried to copy my stuff from package.lua, stripping the surrounding table, but got bitten by the trailing ,","date":"2016-08-19T16:19:46.173Z","type":"message"}
{"nick":"creationix","message":"https://github.com/luvit/lit/blob/d80d38407a9234988f2d70d49275b6eead120f9b/libs/pkg.lua#L36-L83","date":"2016-08-19T16:22:02.027Z","type":"message"}
{"nick":"creationix","message":"yeah, it evals the string and then returns the resulting global table","date":"2016-08-19T16:22:47.090Z","type":"message"}
{"nick":"creationix","message":"(evals in a new environment with empty global)","date":"2016-08-19T16:22:56.017Z","type":"message"}
{"nick":"urzds","message":"Is the exports field in any way special?","date":"2016-08-19T16:25:25.810Z","type":"message"}
{"nick":"urzds","message":"What's nice about naming it init.lua is that I can do lit publish, without knowing the filename.","date":"2016-08-19T16:26:53.789Z","type":"message"}
{"nick":"jpleau","message":"creationix: what versions of Lua did you use when running tests on arm64? luajit?","date":"2016-08-19T16:35:42.662Z","type":"message"}
{"nick":"creationix","message":"jpleau yep","date":"2016-08-19T16:38:27.533Z","type":"message"}
{"nick":"creationix","message":"didn't try anything other than the official luvi binary","date":"2016-08-19T16:38:41.347Z","type":"message"}
{"nick":"creationix","message":"this was all I needed to add to our luajit cmake file https://github.com/luvit/luv/commit/e4f2a80b7f7a3ffcddbbaed8fa002a3989c9a9f6","date":"2016-08-19T16:39:13.593Z","type":"message"}
{"nick":"jpleau","message":"okay. I'm still waiting access to arm64 machines on debian architectures, we have tests failing /hanging on arm64 with lua5.2 (probably happens with other versions, it's just the first one that gets built)","date":"2016-08-19T16:39:27.545Z","type":"message"}
{"nick":"jpleau","message":"I'll be able to debug it in a few days","date":"2016-08-19T16:39:42.620Z","type":"message"}
{"nick":"creationix","message":"I was using an odroid C2 running ubuntu 16.04 for my tests, you can get one fairly cheap","date":"2016-08-19T16:42:39.968Z","type":"message"}
{"nick":"creationix","message":"http://ameridroid.com/products/odroid-c2","date":"2016-08-19T16:43:32.880Z","type":"message"}
{"nick":"creationix","message":"it's the same CPI as the PI3, but clocked faster I think","date":"2016-08-19T16:43:49.145Z","type":"message"}
{"nick":"creationix","message":"*CPU","date":"2016-08-19T16:43:52.275Z","type":"message"}
{"nick":"jpleau","message":"I'm not certain I'm willing to buy, I already have a rpi2 that I bought the day it came out, it's still unboxed :P","date":"2016-08-19T16:44:40.257Z","type":"message"}
{"nick":"urzds","message":"creationix: Do you have a nice way to automatically publish from CI? Is it possible to pass Lit a GH personal access token via an env var?","date":"2016-08-19T17:28:00.298Z","type":"message"}
{"nick":"creationix","message":"lit publishes by signing using your ssh private key as an rsa key","date":"2016-08-19T17:28:36.277Z","type":"message"}
{"nick":"creationix","message":"so you just need to give the CI server an SSH key that you've authorized with your github account","date":"2016-08-19T17:28:49.474Z","type":"message"}
{"nick":"creationix","message":"there are environment variables for custom paths to a lit config file which can then have a custom path to the key","date":"2016-08-19T17:29:21.955Z","type":"message"}
{"nick":"urzds","message":"Hm... Has anyone done that with Travis before?","date":"2016-08-19T17:29:23.205Z","type":"message"}
{"nick":"creationix","message":"but I could add a feature to pull the key directly from env (assuming it's not too large)","date":"2016-08-19T17:29:46.092Z","type":"message"}
{"nick":"creationix","message":"not that I know of","date":"2016-08-19T17:29:51.363Z","type":"message"}
{"nick":"urzds","message":"But in any case: The purpose of a signature is probably that not anyone can sign my packages - so I'd have to trust the CI system...","date":"2016-08-19T17:30:10.282Z","type":"message"}
{"nick":"creationix","message":"obviously","date":"2016-08-19T17:30:20.464Z","type":"message"}
{"nick":"urzds","message":"Thus I shouldn't actually push my Docker container images with Travis, either...","date":"2016-08-19T17:32:00.781Z","type":"message"}
{"nick":"urzds","message":"I'll think about that... Thanks for the advice.","date":"2016-08-19T17:32:26.830Z","type":"message"}
{"nick":"creationix","message":"trust-less systems are very hard.  I've designed a few and in the end, you always have to have someone or something you trust","date":"2016-08-19T17:32:39.729Z","type":"message"}
{"nick":"creationix","message":"I wonder if I could add another way to authenticate people on publish.  SSH keys have full access","date":"2016-08-19T17:33:20.947Z","type":"message"}
{"nick":"creationix","message":"while github tokens could be more limited","date":"2016-08-19T17:33:28.206Z","type":"message"}
{"nick":"APNG","message":"hi creationix","date":"2016-08-19T17:33:40.962Z","type":"message"}
{"nick":"creationix","message":"APNG hi","date":"2016-08-19T17:33:45.156Z","type":"message"}
{"nick":"APNG","message":"uh can you help me with a thing? it's js tho...","date":"2016-08-19T17:34:20.450Z","type":"message"}
{"nick":"APNG","message":"creationix, any idea about this? http://stackoverflow.com/questions/25456794/does-javascript-have-a-standard-equivalence-method-you-can-define-on-your-own-ob","date":"2016-08-19T17:36:15.357Z","type":"message"}
{"nick":"creationix","message":"APNG if JS does have that, it will be part of the Proxy interface","date":"2016-08-19T17:36:43.714Z","type":"message"}
{"nick":"creationix","message":"doesn't look like there is a trap for equivalence https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy","date":"2016-08-19T17:37:22.087Z","type":"message"}
{"nick":"rendar","reason":"Ping timeout: 276 seconds","date":"2016-08-19T18:13:45.649Z","type":"quit"}
{"nick":"rendar","date":"2016-08-19T18:42:50.008Z","type":"join"}
{"nick":"rgrinberg","reason":"Ping timeout: 244 seconds","date":"2016-08-19T18:59:23.226Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-08-19T19:09:58.278Z","type":"join"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2016-08-19T22:46:15.946Z","type":"quit"}
