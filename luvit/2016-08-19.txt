{"nick":"rgrinberg","reason":"Ping timeout: 240 seconds","date":"2016-08-19T01:54:12.484Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-08-19T03:11:00.858Z","type":"join"}
{"nick":"rgrinberg","reason":"Ping timeout: 276 seconds","date":"2016-08-19T04:15:54.664Z","type":"quit"}
{"nick":"SkyRocknRoll","date":"2016-08-19T04:43:35.665Z","type":"join"}
{"nick":"rendar","date":"2016-08-19T06:18:40.279Z","type":"join"}
{"nick":"SkyRocknRoll","reason":"Remote host closed the connection","date":"2016-08-19T09:36:19.466Z","type":"quit"}
{"nick":"rgrinberg","date":"2016-08-19T12:15:48.185Z","type":"join"}
{"nick":"urzds","message":"creationix: Yes, it is a package that I want to publish to lit. I assumed lit packages need an init.lua file, which lit would use as the deps/my-package.lua file when installed into other projects. But it appears to be able to publish the contents of all of libs/, too.","date":"2016-08-19T14:03:16.462Z","type":"message"}
{"nick":"creationix","message":"urzds, so lit has either single-file packages or folder packages","date":"2016-08-19T15:31:31.104Z","type":"message"}
{"nick":"creationix","message":"with single-file, you just embed the metadata in a comment at the top.  Most the luvit and lit internal packages are like this","date":"2016-08-19T15:31:50.156Z","type":"message"}
{"nick":"creationix","message":"with multi-file, you need package.lua (though it might try to also pull metadata from init.lua)","date":"2016-08-19T15:32:08.243Z","type":"message"}
{"nick":"urzds","message":"But in the single-file case I cannot run tests, because I have no way of loading the module from my own tree, is that correct?","date":"2016-08-19T15:32:20.841Z","type":"message"}
{"nick":"creationix","message":"I have no way of running your tests (me being the lit server)","date":"2016-08-19T15:32:42.080Z","type":"message"}
{"nick":"creationix","message":"but you can","date":"2016-08-19T15:32:44.414Z","type":"message"}
{"nick":"urzds","message":"How?","date":"2016-08-19T15:32:56.153Z","type":"message"}
{"nick":"creationix","message":"just put the file in `libs/foo.lua` or `deps/foo.lua` and then in `tests/mytest.lua` just `require 'foo'`","date":"2016-08-19T15:33:08.740Z","type":"message"}
{"nick":"creationix","message":"and when you publish, just `lit publish libs/foo.lua` directly","date":"2016-08-19T15:33:24.182Z","type":"message"}
{"nick":"creationix","message":"or as I do, `lit publish deps/*` since I put all my public packages in deps and all my private ones in libs","date":"2016-08-19T15:33:43.544Z","type":"message"}
{"nick":"urzds","message":"I thought deps/ is reserved for lit - that'd be where it installs all the dependencies into?","date":"2016-08-19T15:34:16.414Z","type":"message"}
{"nick":"creationix","message":"it's used by lit, yes","date":"2016-08-19T15:34:29.398Z","type":"message"}
{"nick":"creationix","message":"but it does try hard to not overwrite anything you put there manually","date":"2016-08-19T15:34:40.161Z","type":"message"}
{"nick":"creationix","message":"but libs works just as well","date":"2016-08-19T15:34:51.045Z","type":"message"}
{"nick":"urzds","message":"But you suggested to rm -fr deps/ to update...","date":"2016-08-19T15:34:53.378Z","type":"message"}
{"nick":"creationix","message":"yes and that's what I do in my workflow","date":"2016-08-19T15:35:11.766Z","type":"message"}
{"nick":"creationix","message":"everything in deps is published to lit","date":"2016-08-19T15:35:20.780Z","type":"message"}
{"nick":"creationix","message":"so when I delete it and re install, they come back","date":"2016-08-19T15:35:29.778Z","type":"message"}
{"nick":"creationix","message":"if the new file is older than what I had before (since I do commit deps to git in this workflow), I can see it","date":"2016-08-19T15:35:50.154Z","type":"message"}
{"nick":"creationix","message":"that means I forgot to publish an update for that package","date":"2016-08-19T15:35:59.746Z","type":"message"}
{"nick":"urzds","message":"But the package itself cannot be put into deps/ then, because if you wanted to update its dependencies, you'd also delete your own source code...","date":"2016-08-19T15:36:00.818Z","type":"message"}
{"nick":"creationix","message":"maybe we're not talking about the same thing","date":"2016-08-19T15:36:37.216Z","type":"message"}
{"nick":"urzds","message":"And if you did not commit to git, you'd be screwed...","date":"2016-08-19T15:36:38.688Z","type":"message"}
{"nick":"urzds","message":"Since all the changes that you made are gone.","date":"2016-08-19T15:36:58.569Z","type":"message"}
{"nick":"creationix","message":"true, I commit before nuking","date":"2016-08-19T15:37:20.859Z","type":"message"}
{"nick":"creationix","message":"but let's step back, what are you trying to do?","date":"2016-08-19T15:37:28.341Z","type":"message"}
{"nick":"urzds","message":"I have a very tiny lit package that is just one file big, which I want to test.","date":"2016-08-19T15:37:52.605Z","type":"message"}
{"nick":"creationix","message":"the suggested workflow is as you assume, put deps in gitignore and only use it for third-party lit published dependencies","date":"2016-08-19T15:38:15.165Z","type":"message"}
{"nick":"creationix","message":"right, so in that case, I just put it on the root of my repo","date":"2016-08-19T15:38:28.410Z","type":"message"}
{"nick":"creationix","message":"and require it as `../foo` or `./foo` depending on where the tests are","date":"2016-08-19T15:38:41.017Z","type":"message"}
{"nick":"creationix","message":"but don't name it init, name it the name of the package","date":"2016-08-19T15:38:51.143Z","type":"message"}
{"nick":"urzds","message":"As I understood, I'd put the one file into libs/ and instead of running \"lit publish\" I'd run \"lit publish libs/*\"?","date":"2016-08-19T15:39:00.700Z","type":"message"}
{"nick":"creationix","message":"putting it libs just puts it in the global search path, it's not required","date":"2016-08-19T15:39:21.194Z","type":"message"}
{"nick":"urzds","message":"Ok, that's another way.","date":"2016-08-19T15:39:26.436Z","type":"message"}
{"nick":"creationix","message":"so `/foo.lua` is your package, that folder will also have `/README.md` and `/test-foo.lua` if you have just one test file","date":"2016-08-19T15:40:01.007Z","type":"message"}
{"nick":"creationix","message":"or `test/*.lua` for multiple tests","date":"2016-08-19T15:40:08.973Z","type":"message"}
{"nick":"creationix","message":"or something","date":"2016-08-19T15:40:12.349Z","type":"message"}
{"nick":"urzds","message":"k","date":"2016-08-19T15:40:25.143Z","type":"message"}
{"nick":"creationix","message":"(the README would be just for github as it won't publish to lit","date":"2016-08-19T15:40:25.766Z","type":"message"}
{"nick":"urzds","message":"But lit will publish according to the metadata in the file itself, not based on the filename?","date":"2016-08-19T15:40:48.456Z","type":"message"}
{"nick":"urzds","message":"In that case I can also get rid of package.lua...","date":"2016-08-19T15:41:00.712Z","type":"message"}
{"nick":"creationix","message":"right","date":"2016-08-19T15:41:03.405Z","type":"message"}
{"nick":"creationix","message":"the filename should match the last part of the metadata name","date":"2016-08-19T15:41:14.965Z","type":"message"}
{"nick":"creationix","message":"because your tests will need to use the path to the filename and people using your library will use the metadata name","date":"2016-08-19T15:41:31.090Z","type":"message"}
{"nick":"urzds","message":"Irks: tests/run.lua:25: bad argument #1 to 'fs_scandir_next' (uv_req expected, got nil)","date":"2016-08-19T15:45:11.489Z","type":"message"}
{"nick":"urzds","message":"I am using the example run.lua file.","date":"2016-08-19T15:45:34.784Z","type":"message"}
{"nick":"urzds","message":"It does not expect that req might be nil if the tests/ directory does not exist.","date":"2016-08-19T15:46:10.319Z","type":"message"}
{"nick":"creationix","message":"that's using the bundle API right?","date":"2016-08-19T15:47:33.149Z","type":"message"}
{"nick":"creationix","message":"if so sounds like a bug","date":"2016-08-19T15:47:55.828Z","type":"message"}
{"nick":"urzds","message":"creationix: I don't even have to modify test-date.lua - I can still require(\"date\") after moving the latter out of libs into the root of the repository. Is that just by chance, or can I rely on this behaviour?","date":"2016-08-19T15:48:02.026Z","type":"message"}
{"nick":"creationix","message":"the root is not in the search path","date":"2016-08-19T15:48:31.634Z","type":"message"}
{"nick":"creationix","message":"something is up","date":"2016-08-19T15:48:36.008Z","type":"message"}
{"nick":"urzds","message":"creationix: No, it's this file: https://github.com/luvit/luvit/blob/master/tests/run.lua","date":"2016-08-19T15:48:45.609Z","type":"message"}
{"nick":"creationix","message":"(though come to think of it, why didn't I add the roots into the path?)","date":"2016-08-19T15:48:50.861Z","type":"message"}
{"nick":"urzds","message":"creationix: Could this be an interaction with LUA_PATH that was set by luarocks?","date":"2016-08-19T15:49:12.153Z","type":"message"}
{"nick":"creationix","message":"perhaps, it is supposed to fallback to native require","date":"2016-08-19T15:49:36.155Z","type":"message"}
{"nick":"urzds","message":"No, can't be.","date":"2016-08-19T15:49:38.569Z","type":"message"}
{"nick":"rgrinberg","reason":"Ping timeout: 240 seconds","date":"2016-08-19T15:50:03.973Z","type":"quit"}
{"nick":"urzds","message":"./ or ../ or similar are not in LUA_PATH.","date":"2016-08-19T15:50:06.662Z","type":"message"}
{"nick":"creationix","message":"the default package.path has `./?.lua` as the first path","date":"2016-08-19T15:50:50.808Z","type":"message"}
{"nick":"creationix","message":"but not ..","date":"2016-08-19T15:50:59.448Z","type":"message"}
{"nick":"urzds","message":"It seems to work for any number of \"./\" or \"../\" that I put before \"data\" in the call to require...","date":"2016-08-19T15:51:34.947Z","type":"message"}
{"nick":"urzds","message":"require(\"../../date\") == require(\"../date\") == require(\"./date\")","date":"2016-08-19T15:51:55.511Z","type":"message"}
{"nick":"urzds","message":"... put before \"date\"","date":"2016-08-19T15:52:36.098Z","type":"message"}
{"nick":"urzds","message":"It even works if I require \"..../date\".","date":"2016-08-19T15:56:04.137Z","type":"message"}
{"nick":"urzds","message":"Literally. Four dots.","date":"2016-08-19T15:56:15.272Z","type":"message"}
