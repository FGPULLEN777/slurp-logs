{"nick":"ircretary","reason":"Remote host closed the connection","date":"2015-10-05T00:00:01.598Z","type":"quit"}
{"nick":"ircretary","date":"2015-10-05T00:00:09.747Z","type":"join"}
{"nick":"phated","date":"2015-10-05T01:04:42.267Z","type":"join"}
{"nick":"phated","reason":"Ping timeout: 246 seconds","date":"2015-10-05T01:09:08.925Z","type":"quit"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2015-10-05T01:23:01.868Z","type":"quit"}
{"nick":"phated","date":"2015-10-05T01:37:22.270Z","type":"join"}
{"nick":"mrgodfrey","date":"2015-10-05T01:46:41.930Z","type":"join"}
{"nick":"pfraze","date":"2015-10-05T01:50:43.517Z","type":"join"}
{"nick":"mikolalysenko","message":"ogd: I don't think you can do it in less than O(n) bits","date":"2015-10-05T02:13:06.583Z","type":"message"}
{"nick":"mikolalysenko","message":"ogd: because if you could solve this problem, you could solve the disjointness problem","date":"2015-10-05T02:13:30.662Z","type":"message"}
{"nick":"mikolalysenko","message":"and disjointness requires Omega(n) bits","date":"2015-10-05T02:13:41.488Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: hm what do you mean by 'bit' there?","date":"2015-10-05T02:16:34.162Z","type":"message"}
{"nick":"mikolalysenko","message":"1 yes/no value","date":"2015-10-05T02:17:24.742Z","type":"message"}
{"nick":"mikolalysenko","message":"or 1/8 of a byte","date":"2015-10-05T02:17:28.475Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: ah ok","date":"2015-10-05T02:18:04.490Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: and n is the number of nodes total?","date":"2015-10-05T02:18:23.115Z","type":"message"}
{"nick":"mikolalysenko","message":"yes","date":"2015-10-05T02:18:29.260Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: so i guess our problem is actually indexing (or maybe we should be using the word decomposing?) the graph in an incremental way, such that we can efficiently query the index to establish which parts of the graph are in sync","date":"2015-10-05T02:21:44.492Z","type":"message"}
{"nick":"mikolalysenko","message":"I would approach it as small set disjointness","date":"2015-10-05T02:24:11.761Z","type":"message"}
{"nick":"mikolalysenko","message":"given you have some new nodes, find out what is missing","date":"2015-10-05T02:24:23.440Z","type":"message"}
{"nick":"mrgodfrey","reason":"Quit: Lost terminal","date":"2015-10-05T03:15:09.322Z","type":"quit"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2015-10-05T03:41:04.155Z","type":"quit"}
{"nick":"phated","date":"2015-10-05T03:41:36.427Z","type":"join"}
{"nick":"phated","reason":"Ping timeout: 265 seconds","date":"2015-10-05T03:46:21.605Z","type":"quit"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2015-10-05T04:35:48.251Z","type":"quit"}
{"nick":"ahdinosaur","reason":"Ping timeout: 268 seconds","date":"2015-10-05T04:38:48.691Z","type":"quit"}
{"nick":"phated","date":"2015-10-05T04:43:55.593Z","type":"join"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2015-10-05T04:51:09.677Z","type":"quit"}
{"nick":"phated","date":"2015-10-05T05:36:00.277Z","type":"join"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2015-10-05T05:36:28.698Z","type":"quit"}
{"nick":"phated","date":"2015-10-05T05:59:58.305Z","type":"join"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2015-10-05T06:00:09.228Z","type":"quit"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2015-10-05T06:35:21.294Z","type":"quit"}
{"nick":"stagas","date":"2015-10-05T07:30:27.459Z","type":"join"}
{"nick":"jjjohnny_","message":"https://github.com/mattdesl/svg-mesh-3d","date":"2015-10-05T07:48:37.666Z","type":"message"}
{"nick":"phated","date":"2015-10-05T08:00:38.237Z","type":"join"}
{"nick":"phated","reason":"Ping timeout: 250 seconds","date":"2015-10-05T08:05:17.377Z","type":"quit"}
{"nick":"AndreasMadsen","date":"2015-10-05T08:25:31.612Z","type":"join"}
{"nick":"djcoin","date":"2015-10-05T09:14:22.447Z","type":"join"}
{"nick":"AndreasMadsen","date":"2015-10-05T09:17:54.133Z","type":"quit"}
{"nick":"contrahax","date":"2015-10-05T09:44:38.731Z","type":"join"}
{"nick":"phated","date":"2015-10-05T10:00:44.067Z","type":"join"}
{"nick":"phated","reason":"Ping timeout: 265 seconds","date":"2015-10-05T10:05:46.440Z","type":"quit"}
{"nick":"peutetre","date":"2015-10-05T10:28:00.422Z","type":"join"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2015-10-05T11:13:08.316Z","type":"quit"}
{"nick":"djcoin","reason":"Quit: WeeChat 1.0.1","date":"2015-10-05T11:31:52.504Z","type":"quit"}
{"nick":"AndreasMadsen","date":"2015-10-05T12:09:11.595Z","type":"join"}
{"nick":"peutetre","reason":"Quit: ...","date":"2015-10-05T12:30:23.274Z","type":"quit"}
{"nick":"peutetre","date":"2015-10-05T12:58:01.877Z","type":"join"}
{"nick":"peutetre","reason":"Client Quit","date":"2015-10-05T13:01:02.819Z","type":"quit"}
{"nick":"peutetre","date":"2015-10-05T13:01:58.879Z","type":"join"}
{"nick":"pose","date":"2015-10-05T13:03:41.932Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 250 seconds","date":"2015-10-05T13:42:51.421Z","type":"quit"}
{"nick":"stagas","date":"2015-10-05T13:56:29.626Z","type":"join"}
{"nick":"pfraze","date":"2015-10-05T14:31:12.126Z","type":"join"}
{"nick":"AndreasMadsen","date":"2015-10-05T14:50:57.007Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 240 seconds","date":"2015-10-05T14:53:11.620Z","type":"quit"}
{"nick":"stagas","date":"2015-10-05T14:53:52.888Z","type":"join"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2015-10-05T14:58:24.575Z","type":"quit"}
{"nick":"stagas","reason":"Remote host closed the connection","date":"2015-10-05T14:58:58.619Z","type":"quit"}
{"nick":"fotoverite","date":"2015-10-05T15:00:37.124Z","type":"join"}
{"nick":"stagas","date":"2015-10-05T15:05:07.576Z","type":"join"}
{"nick":"pose","reason":"Remote host closed the connection","date":"2015-10-05T15:16:33.829Z","type":"quit"}
{"nick":"pose","date":"2015-10-05T15:17:07.987Z","type":"join"}
{"nick":"pose","reason":"Ping timeout: 260 seconds","date":"2015-10-05T15:21:39.938Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 255 seconds","date":"2015-10-05T15:29:22.418Z","type":"quit"}
{"nick":"peutetre","reason":"Quit: ...","date":"2015-10-05T15:55:51.743Z","type":"quit"}
{"nick":"pose","date":"2015-10-05T16:01:00.015Z","type":"join"}
{"nick":"pfraze","date":"2015-10-05T16:04:52.097Z","type":"join"}
{"nick":"pose","reason":"Remote host closed the connection","date":"2015-10-05T16:17:56.126Z","type":"quit"}
{"nick":"shama","date":"2015-10-05T17:21:15.309Z","type":"join"}
{"nick":"mikolalysenko","message":"mafintosh: ogd what if you approach this problem at a slightly lower level","date":"2015-10-05T17:26:02.127Z","type":"message"}
{"nick":"mikolalysenko","message":"say you forget about the dag, but instead you just want to synchronize the set of blobs on two machines","date":"2015-10-05T17:26:19.946Z","type":"message"}
{"nick":"mikolalysenko","message":"do you think that you could do this in O((log n)* |size of diff|) round trips?","date":"2015-10-05T17:26:56.448Z","type":"message"}
{"nick":"mikolalysenko","message":"maybe there is a way to do this using a trie","date":"2015-10-05T17:36:22.016Z","type":"message"}
{"nick":"mikolalysenko","message":"suppose that you stick every blob into a trie, keyed by the hash of that blob","date":"2015-10-05T17:44:08.543Z","type":"message"}
{"nick":"mikolalysenko","message":"then you can just diff these tries in rounds","date":"2015-10-05T17:44:27.816Z","type":"message"}
{"nick":"mikolalysenko","message":"so you can check if any two subtries are equal in O(1) by comparing hashes","date":"2015-10-05T17:44:45.340Z","type":"message"}
{"nick":"mikolalysenko","message":"and then use a divide and conquer/recursive strategy to find the parts of the tries where they differ","date":"2015-10-05T17:45:06.000Z","type":"message"}
{"nick":"mikolalysenko","message":"hell, you could even make all this immutable too","date":"2015-10-05T17:45:23.572Z","type":"message"}
{"nick":"AndreasMadsen","date":"2015-10-05T17:51:35.528Z","type":"join"}
{"nick":"mafintosh","message":"mikolalysenko: could you give me a pratical example of the trie idea?","date":"2015-10-05T17:54:23.428Z","type":"message"}
{"nick":"mikolalysenko","message":"I could write up a proof of concept tonight, but have to finish up some work right now","date":"2015-10-05T17:54:49.164Z","type":"message"}
{"nick":"mikolalysenko","message":"but idea is similar to the following:  https://en.wikipedia.org/wiki/Radix_tree","date":"2015-10-05T17:55:23.677Z","type":"message"}
{"nick":"mikolalysenko","message":"where the strings you are inserting are hashes of blobs","date":"2015-10-05T17:55:37.736Z","type":"message"}
{"nick":"mikolalysenko","message":"or look up trie merging in a book","date":"2015-10-05T17:56:18.396Z","type":"message"}
{"nick":"mikolalysenko","message":"https://en.wikipedia.org/wiki/Trie","date":"2015-10-05T17:56:32.584Z","type":"message"}
{"nick":"mikolalysenko","message":"basically implement blob store using trie, then implement the dag on top of the blob store","date":"2015-10-05T17:57:23.894Z","type":"message"}
{"nick":"ogd","message":"oh yea i was actually thinking about prefix trees yesterday","date":"2015-10-05T17:57:37.921Z","type":"message"}
{"nick":"contrahax","date":"2015-10-05T18:00:10.872Z","type":"join"}
{"nick":"sethvincent","date":"2015-10-05T18:00:22.764Z","type":"join"}
{"nick":"mafintosh","message":"mikolalysenko: so a trie node would have at max 256 children?","date":"2015-10-05T18:03:49.280Z","type":"message"}
{"nick":"mikolalysenko","message":"sure, if you like","date":"2015-10-05T18:03:56.829Z","type":"message"}
{"nick":"mikolalysenko","message":"it can be any number","date":"2015-10-05T18:04:00.685Z","type":"message"}
{"nick":"mikolalysenko","message":"if you use 2 they are called crit-bit-trees for example","date":"2015-10-05T18:04:14.761Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: i mean in the case where you insert hashes","date":"2015-10-05T18:04:26.492Z","type":"message"}
{"nick":"pfraze","message":"ogd: hey what makes chromium take so long to compile?","date":"2015-10-05T18:22:51.446Z","type":"message"}
{"nick":"ogd","message":"pfraze: its a gigantic c++ project","date":"2015-10-05T18:23:03.748Z","type":"message"}
{"nick":"pfraze","message":"ogd: but something like ubuntu isnt crazy like that, is it?","date":"2015-10-05T18:23:25.271Z","type":"message"}
{"nick":"ogd","message":"pfraze: well ubuntu is a bunch of small to medium c/c++ projects i think","date":"2015-10-05T18:23:47.059Z","type":"message"}
{"nick":"pfraze","message":"ogd: hm. just curious if that's due to project kludge, or if it's inevitable for a project like that","date":"2015-10-05T18:25:30.094Z","type":"message"}
{"nick":"ogd","message":"pfraze: oh i think its totally googles fault","date":"2015-10-05T18:25:42.297Z","type":"message"}
{"nick":"ogd","message":"pfraze: they have a crazy distributed build tool that google engineers can use internally so its not a problem for them","date":"2015-10-05T18:25:57.675Z","type":"message"}
{"nick":"pfraze","message":"ogd: right, so they let it get ugly","date":"2015-10-05T18:26:11.850Z","type":"message"}
{"nick":"ogd","message":"pfraze: they could do it differently so its easier for normal humans to work on it but they dont","date":"2015-10-05T18:26:14.221Z","type":"message"}
{"nick":"mikolalysenko","message":"mafintosh: when you insert a hash into a tree, you just update nodes along the root->leaf path","date":"2015-10-05T18:26:23.608Z","type":"message"}
{"nick":"mikolalysenko","message":"so there are at most log_B(n) of those","date":"2015-10-05T18:26:35.322Z","type":"message"}
{"nick":"mikolalysenko","message":"where B is proportional to the size of a chunk","date":"2015-10-05T18:26:52.567Z","type":"message"}
{"nick":"mikolalysenko","message":"so might be 256 or so","date":"2015-10-05T18:27:03.293Z","type":"message"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2015-10-05T18:38:16.715Z","type":"quit"}
{"nick":"phated","date":"2015-10-05T18:43:17.501Z","type":"join"}
{"nick":"sethvincent","reason":"Ping timeout: 260 seconds","date":"2015-10-05T18:43:43.954Z","type":"quit"}
{"nick":"paul_irish_","new_nick":"paul_irish","date":"2015-10-05T18:49:13.730Z","type":"nick"}
{"nick":"contrahax","date":"2015-10-05T18:59:15.313Z","type":"join"}
{"nick":"sethvincent","date":"2015-10-05T19:52:57.509Z","type":"join"}
{"nick":"knownasilya","date":"2015-10-05T20:20:33.529Z","type":"join"}
{"nick":"eyeforeigneye","date":"2015-10-05T21:48:21.405Z","type":"join"}
{"nick":"eyeforeigneye","reason":"Client Quit","date":"2015-10-05T21:48:36.780Z","type":"quit"}
{"nick":"AndreasMadsen","date":"2015-10-05T22:07:54.491Z","type":"quit"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2015-10-05T23:12:38.640Z","type":"quit"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2015-10-05T23:35:39.009Z","type":"quit"}
{"nick":"shama","reason":"Quit: (╯°□°）╯︵ɐɯɐɥs","date":"2015-10-05T23:54:18.276Z","type":"quit"}
