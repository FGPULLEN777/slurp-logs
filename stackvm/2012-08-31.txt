{"nick":"stlsaint","date":"2012-08-31T00:01:10.143Z","type":"join"}
{"nick":"stlsaint","reason":"Changing host","date":"2012-08-31T00:01:10.732Z","type":"quit"}
{"nick":"stlsaint","date":"2012-08-31T00:01:10.972Z","type":"join"}
{"nick":"idletom","reason":"Ping timeout: 244 seconds","date":"2012-08-31T00:08:15.460Z","type":"quit"}
{"nick":"Raynos","message":"whats a good watch files re-run node process program","date":"2012-08-31T00:26:16.153Z","type":"message"}
{"nick":"dominictarr","message":"node-supervisor","date":"2012-08-31T00:27:41.089Z","type":"message"}
{"nick":"substack","message":"back in oak towne","date":"2012-08-31T00:40:23.666Z","type":"message"}
{"nick":"joshwnj","date":"2012-08-31T00:41:46.867Z","type":"join"}
{"nick":"Raynos","message":"yeah using supervisor","date":"2012-08-31T00:49:28.210Z","type":"message"}
{"nick":"Raynos","message":"its good","date":"2012-08-31T00:49:30.870Z","type":"message"}
{"nick":"stlsaint","reason":"*.net *.split","date":"2012-08-31T00:54:14.435Z","type":"quit"}
{"nick":"substack","message":"https://twitter.com/sintaxi/status/241223604807815169","date":"2012-08-31T00:57:38.886Z","type":"message"}
{"nick":"stlsaint","date":"2012-08-31T00:58:13.854Z","type":"join"}
{"nick":"idletom","date":"2012-08-31T01:00:16.050Z","type":"join"}
{"nick":"substack","message":"more japanese writeups http://53log.com/wp/blog/%E3%81%82%E3%81%AA%E3%81%9F%E3%81%AE%E3%83%96%E3%83%AD%E3%82%B0%E3%81%AF%E5%A4%A7%E4%B8%88%E5%A4%AB%EF%BC%9F%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%94%E3%81%A8%E3%81%AB%E8%87%AA%E5%88%86%E3%81%AE/","date":"2012-08-31T01:02:11.170Z","type":"message"}
{"nick":"substack","message":"haha","date":"2012-08-31T01:02:15.138Z","type":"message"}
{"nick":"dools","message":"testring","date":"2012-08-31T01:10:46.887Z","type":"message"}
{"nick":"wiwillia","reason":"Ping timeout: 245 seconds","date":"2012-08-31T01:11:23.116Z","type":"quit"}
{"nick":"stlsaint","reason":"Quit: leaving","date":"2012-08-31T01:31:35.881Z","type":"quit"}
{"nick":"substack","message":"Raynos, dominictarr: any good ideas for how form parsing could work with streaming \"middleware\" via https://github.com/substack/response-stream ?","date":"2012-08-31T01:49:47.947Z","type":"message"}
{"nick":"substack","message":"I could probably use the same approach as oppressor I'm thinking","date":"2012-08-31T01:50:02.329Z","type":"message"}
{"nick":"substack","message":"oh actually it's quite different because the parameters need to feed downstream not upstream","date":"2012-08-31T01:50:21.283Z","type":"message"}
{"nick":"substack","message":"but I don't want to duplicate parsing if multiple pipes downstream pull have an upstream form parsing requirement","date":"2012-08-31T01:50:42.768Z","type":"message"}
{"nick":"substack","message":"actually fuck it parsing post data is crazy fast anyhow","date":"2012-08-31T01:54:27.091Z","type":"message"}
{"nick":"substack","message":"that can just be an explicit step on the user's part","date":"2012-08-31T01:54:41.013Z","type":"message"}
{"nick":"substack","message":"idea: since streams are just event-emitters I can pass the parameters as events","date":"2012-08-31T01:55:35.680Z","type":"message"}
{"nick":"substack","message":"formStream(req).pipe(s0).pipe(s1).pipe(oppressor(req)).pipe(res)","date":"2012-08-31T01:56:04.421Z","type":"message"}
{"nick":"substack","message":"then I'll modify response-stream to forward events to the next pipe in the chain","date":"2012-08-31T01:56:36.251Z","type":"message"}
{"nick":"substack","message":"so s0 can do rs.on('post', fn) or whatever","date":"2012-08-31T01:57:41.374Z","type":"message"}
{"nick":"substack","action":"off to berkeley &","date":"2012-08-31T01:58:28.200Z","type":"action"}
{"nick":"substack","action":"fg","date":"2012-08-31T02:41:40.740Z","type":"action"}
{"nick":"Raynos","message":"substack: ?","date":"2012-08-31T03:12:37.101Z","type":"message"}
{"nick":"Raynos","message":"substack: reemit downstream for all the meta data","date":"2012-08-31T03:13:23.870Z","type":"message"}
{"nick":"Raynos","message":"that solves most of the problems","date":"2012-08-31T03:13:28.492Z","type":"message"}
{"nick":"Raynos","message":"and buffer the meta data until next tick","date":"2012-08-31T03:13:34.851Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 240 seconds","date":"2012-08-31T03:24:43.111Z","type":"quit"}
{"nick":"substack","message":"yes but streams pass all the data through","date":"2012-08-31T03:25:32.692Z","type":"message"}
{"nick":"substack","message":"I think I've got it though","date":"2012-08-31T03:25:35.458Z","type":"message"}
{"nick":"substack","message":"the chains in the pipe should just parse the data each themselves since they have it","date":"2012-08-31T03:26:03.098Z","type":"message"}
{"nick":"Raynos","message":"yeah they should","date":"2012-08-31T03:27:12.778Z","type":"message"}
{"nick":"Raynos","message":"for real data event","date":"2012-08-31T03:27:14.994Z","type":"message"}
{"nick":"Raynos","message":"the notion","date":"2012-08-31T03:27:18.966Z","type":"message"}
{"nick":"Raynos","message":"of parsing it onces at the start","date":"2012-08-31T03:27:23.281Z","type":"message"}
{"nick":"Raynos","message":"and passing pre-parsed data along is silly","date":"2012-08-31T03:27:29.158Z","type":"message"}
{"nick":"Raynos","message":"thats what express does with req.body","date":"2012-08-31T03:27:39.823Z","type":"message"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-08-31T05:00:38.521Z","type":"nick"}
{"nick":"idletom","reason":"Ping timeout: 246 seconds","date":"2012-08-31T05:12:22.042Z","type":"quit"}
{"nick":"timoxley","date":"2012-08-31T05:19:01.092Z","type":"join"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2012-08-31T05:29:35.250Z","type":"quit"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-08-31T05:47:22.450Z","type":"nick"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-08-31T06:04:15.361Z","type":"nick"}
{"nick":"substack","message":"Raynos: yes it's pretty silly","date":"2012-08-31T06:14:05.407Z","type":"message"}
{"nick":"substack","message":"should probably just pass the req","date":"2012-08-31T06:14:09.572Z","type":"message"}
{"nick":"substack","message":"or pass an emitter that takes the req","date":"2012-08-31T06:14:17.916Z","type":"message"}
{"nick":"substack","message":"var params = formParams(req); someThing(params).pipe(s1).pipe(anotherThing(params)).pipe(res)","date":"2012-08-31T06:15:08.337Z","type":"message"}
{"nick":"substack","message":"formidable might already work this way","date":"2012-08-31T06:15:29.590Z","type":"message"}
{"nick":"substack","message":"or probably something else on npm does if not","date":"2012-08-31T06:15:37.671Z","type":"message"}
{"nick":"Raynos","message":"substack: that works but is kind of ugly","date":"2012-08-31T06:28:27.523Z","type":"message"}
{"nick":"Raynos","message":"what is params?","date":"2012-08-31T06:28:30.651Z","type":"message"}
{"nick":"substack","message":"some event thing","date":"2012-08-31T06:30:53.278Z","type":"message"}
{"nick":"timoxley","date":"2012-08-31T06:33:40.123Z","type":"join"}
{"nick":"Raynos","message":"weird","date":"2012-08-31T06:36:35.724Z","type":"message"}
{"nick":"Raynos","message":"i dont even know","date":"2012-08-31T06:37:01.055Z","type":"message"}
{"nick":"Raynos","message":"whats going on","date":"2012-08-31T06:37:03.006Z","type":"message"}
{"nick":"Raynos","message":"you can always just do this\\","date":"2012-08-31T06:37:36.164Z","type":"message"}
{"nick":"Raynos","message":"httpline(req, ..., res)","date":"2012-08-31T06:37:53.746Z","type":"message"}
{"nick":"Raynos","message":"and ... are some streams","date":"2012-08-31T06:37:57.954Z","type":"message"}
{"nick":"Raynos","message":"and httpline does stream.emit(\"req\", req)","date":"2012-08-31T06:38:05.840Z","type":"message"}
{"nick":"Raynos","message":"then pipes them together","date":"2012-08-31T06:38:13.124Z","type":"message"}
{"nick":"Raynos","message":"that seems cleaner","date":"2012-08-31T06:38:15.646Z","type":"message"}
{"nick":"timoxley","reason":"Ping timeout: 264 seconds","date":"2012-08-31T06:39:26.284Z","type":"quit"}
{"nick":"substack","message":"lumping all the elements into a single function call doesn't seem very modular though","date":"2012-08-31T06:55:42.823Z","type":"message"}
{"nick":"substack","message":"it forces you to have all the streams in one place","date":"2012-08-31T06:56:00.088Z","type":"message"}
{"nick":"timoxley","date":"2012-08-31T06:57:08.865Z","type":"join"}
{"nick":"Raynos","message":"substack: but you do have them all in one place","date":"2012-08-31T06:57:22.035Z","type":"message"}
{"nick":"Raynos","message":"there is one place where you have both req & res","date":"2012-08-31T06:57:28.004Z","type":"message"}
{"nick":"Raynos","message":"for a pipeline of streams to work you need to start with req, have all the streams and end with res","date":"2012-08-31T06:57:41.020Z","type":"message"}
{"nick":"Raynos","message":"I guess you could do","date":"2012-08-31T06:57:56.867Z","type":"message"}
{"nick":"Raynos","message":"httpline(req, ...) httpline(...) httpline(..., res)","date":"2012-08-31T06:58:09.361Z","type":"message"}
{"nick":"substack","message":"I want to encapsulate pipes so they are self-similar","date":"2012-08-31T07:02:39.512Z","type":"message"}
{"nick":"substack","message":"so I can treat chains of pipes as a single pipe","date":"2012-08-31T07:02:46.785Z","type":"message"}
{"nick":"substack","message":"in other files especially","date":"2012-08-31T07:03:06.483Z","type":"message"}
{"nick":"substack","message":"or perhaps other processes","date":"2012-08-31T07:03:14.227Z","type":"message"}
{"nick":"Raynos","message":"oh","date":"2012-08-31T07:03:35.517Z","type":"message"}
{"nick":"Raynos","message":"you want this to work cross process","date":"2012-08-31T07:03:43.363Z","type":"message"}
{"nick":"substack","message":"maybe not yet","date":"2012-08-31T07:04:11.251Z","type":"message"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2012-08-31T07:21:15.303Z","type":"quit"}
{"nick":"timoxley","date":"2012-08-31T07:26:56.455Z","type":"join"}
{"nick":"timoxley","reason":"Read error: Connection reset by peer","date":"2012-08-31T07:29:49.302Z","type":"quit"}
{"nick":"joshwnj","reason":"Quit: ERC Version 5.3 (IRC client for Emacs)","date":"2012-08-31T07:50:04.035Z","type":"quit"}
{"nick":"idletom","date":"2012-08-31T08:01:28.405Z","type":"join"}
{"nick":"idletom","reason":"Ping timeout: 260 seconds","date":"2012-08-31T08:08:25.312Z","type":"quit"}
{"nick":"dominictarr","message":"substack, mikeal tweeted something about adding a (the first) dep to request, for handling form data with a streaming parser felix wrote","date":"2012-08-31T08:25:49.819Z","type":"message"}
{"nick":"dominictarr","message":"as a user, I think id want the metadata attached to the stream object, like in http.","date":"2012-08-31T08:26:43.578Z","type":"message"}
{"nick":"Altreus","reason":"Changing host","date":"2012-08-31T09:11:08.751Z","type":"quit"}
{"nick":"Altreus","date":"2012-08-31T09:11:08.997Z","type":"join"}
{"nick":"AvianFlu","date":"2012-08-31T11:53:47.987Z","type":"join"}
{"nick":"dominictarr","message":"substack, event-stream.pipeline turns multiple streams into a single stream.","date":"2012-08-31T12:05:05.276Z","type":"message"}
{"nick":"dominictarr","message":"Raynos, crdt@3.0.0 now depends on scuttlebutt.","date":"2012-08-31T12:11:08.580Z","type":"message"}
{"nick":"dominictarr","message":"also, I've added createReadStream and createWriteStream to scuttlebutt,","date":"2012-08-31T12:11:39.506Z","type":"message"}
{"nick":"dominictarr","message":"so now scuttlebutts can be persisted.","date":"2012-08-31T12:11:50.235Z","type":"message"}
{"nick":"dominictarr","message":"yes! peers works WAY better with the new scuttlebutt based crdt","date":"2012-08-31T12:28:55.438Z","type":"message"}
{"nick":"ITpro","date":"2012-08-31T12:42:15.563Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 264 seconds","date":"2012-08-31T12:55:02.261Z","type":"quit"}
{"nick":"dominictarr","date":"2012-08-31T12:56:12.102Z","type":"join"}
{"nick":"wiwillia","date":"2012-08-31T13:44:54.836Z","type":"join"}
{"nick":"stlsaint","date":"2012-08-31T14:20:24.618Z","type":"join"}
{"nick":"wiwillia","reason":"Ping timeout: 252 seconds","date":"2012-08-31T14:31:10.755Z","type":"quit"}
{"nick":"idletom","date":"2012-08-31T14:34:11.708Z","type":"join"}
{"nick":"wiwillia","date":"2012-08-31T14:39:10.444Z","type":"join"}
{"nick":"_sorensen","date":"2012-08-31T15:04:42.465Z","type":"join"}
{"nick":"wiwillia","reason":"Ping timeout: 244 seconds","date":"2012-08-31T15:37:13.356Z","type":"quit"}
{"nick":"wiwillia","date":"2012-08-31T15:40:24.697Z","type":"join"}
{"nick":"dominictarr","message":"substack, Raynos check this out http://en.wikipedia.org/wiki/QML","date":"2012-08-31T15:53:20.196Z","type":"message"}
{"nick":"dominictarr","message":"looks really good, if only it was a generic js api, not a parsed DSL.","date":"2012-08-31T15:53:42.757Z","type":"message"}
{"nick":"dominictarr","message":"I'm thinking something that just works win a generic Observable/Model","date":"2012-08-31T15:54:12.345Z","type":"message"}
{"nick":"idletom","reason":"Ping timeout: 252 seconds","date":"2012-08-31T15:59:54.743Z","type":"quit"}
