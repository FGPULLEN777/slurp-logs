{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-05-15T00:00:00.866Z","type":"quit"}
{"nick":"ircretary","date":"2014-05-15T00:00:09.379Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 23]","date":"2014-05-15T00:07:44.483Z","type":"message"}
{"nick":"ednapiranha","reason":"Quit: Leaving...","date":"2014-05-15T00:07:59.278Z","type":"quit"}
{"nick":"thlorenz","date":"2014-05-15T00:12:27.514Z","type":"join"}
{"nick":"mikolalysenko","message":"Raynos: how does virtual-dom do O(1) diffing?  does it just track a version or something?","date":"2014-05-15T00:14:55.802Z","type":"message"}
{"nick":"naneau","date":"2014-05-15T00:19:15.395Z","type":"join"}
{"nick":"jxson","reason":"Ping timeout: 258 seconds","date":"2014-05-15T00:21:00.274Z","type":"quit"}
{"nick":"quijote","date":"2014-05-15T00:23:23.572Z","type":"join"}
{"nick":"Raynos","message":"mikolalysenko: it doesn't do O(1) diffing, I lied","date":"2014-05-15T00:24:30.125Z","type":"message"}
{"nick":"mikolalysenko","message":"Raynos: ah, I was confused about how that would be possible","date":"2014-05-15T00:25:40.066Z","type":"message"}
{"nick":"Raynos","message":"mikolalysenko: http://elm-lang.org/blog/announce/0.12.1.elm#arrays","date":"2014-05-15T00:26:09.585Z","type":"message"}
{"nick":"mikolalysenko","message":"I know of a way to do O(1) persistence, which I suppose you could use for diffing","date":"2014-05-15T00:26:17.552Z","type":"message"}
{"nick":"mikolalysenko","message":"I have seen this construction before","date":"2014-05-15T00:26:46.265Z","type":"message"}
{"nick":"mikolalysenko","message":"Raynos: have you seen this?  http://www.cs.cmu.edu/~sleator/papers/another-persistence.pdf","date":"2014-05-15T00:27:30.355Z","type":"message"}
{"nick":"Raynos","message":"mikolalysenko: I was implying that if only one node in a vtree has changed and you use thunk caching strategy and your tree is balanced","date":"2014-05-15T00:27:32.574Z","type":"message"}
{"nick":"Raynos","message":"then diff time is O(log n) where n is how many nested dom elements you have","date":"2014-05-15T00:27:55.233Z","type":"message"}
{"nick":"Raynos","message":"i claim that for any non retarded dom tree its sensibly upper bounded by 20","date":"2014-05-15T00:28:05.013Z","type":"message"}
{"nick":"Raynos","message":"and clearly O(log 20) ~== O(1) :D","date":"2014-05-15T00:28:38.724Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 276 seconds","date":"2014-05-15T00:28:45.410Z","type":"quit"}
{"nick":"mikolalysenko","message":"I wonder if you could do it better though","date":"2014-05-15T00:28:48.212Z","type":"message"}
{"nick":"Raynos","message":"maybe.","date":"2014-05-15T00:28:57.176Z","type":"message"}
{"nick":"mikolalysenko","message":"maybe using some kind of ladder decomposition trick combined with hashing","date":"2014-05-15T00:28:59.060Z","type":"message"}
{"nick":"Raynos","message":"right now we do O(1) diff + caching to skip any unchanged subtrees","date":"2014-05-15T00:29:07.492Z","type":"message"}
{"nick":"Raynos","message":"which means if a single node changes you have to diff the node & all its recursive parents","date":"2014-05-15T00:29:17.554Z","type":"message"}
{"nick":"Raynos","message":"mikolalysenko: if your interested we would love collaboration on https://github.com/Matt-Esch/virtual-dom/ :)","date":"2014-05-15T00:29:38.006Z","type":"message"}
{"nick":"mikolalysenko","message":"don't you still have to scan the tree to check for changes?","date":"2014-05-15T00:29:38.117Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm..  I got a lot of stuff on my plate already","date":"2014-05-15T00:29:54.076Z","type":"message"}
{"nick":"Raynos","message":"oh sure :)","date":"2014-05-15T00:30:00.571Z","type":"message"}
{"nick":"Raynos","message":"mikolalysenko: we have a notion of a Thunk which is a tuple of (data, tree)","date":"2014-05-15T00:30:21.748Z","type":"message"}
{"nick":"mikolalysenko","message":"it is maybe a long shot, but you could take a look at this:","date":"2014-05-15T00:30:26.310Z","type":"message"}
{"nick":"mikolalysenko","message":"https://github.com/mikolalysenko/level-ancestor","date":"2014-05-15T00:30:27.157Z","type":"message"}
{"nick":"Raynos","message":"i.e. the model data that generated the vtree and the vtree","date":"2014-05-15T00:30:35.136Z","type":"message"}
{"nick":"mikolalysenko","message":"the idea there I think should work for diffing trees too","date":"2014-05-15T00:30:38.467Z","type":"message"}
{"nick":"Raynos","message":"we then do O(1) === check on data to skip evaluating children","date":"2014-05-15T00:30:44.928Z","type":"message"}
{"nick":"mikolalysenko","message":"and it would be in O(1), for real","date":"2014-05-15T00:30:45.365Z","type":"message"}
{"nick":"Raynos","message":"this is only posisble because the model and the vtree are both immutable","date":"2014-05-15T00:30:55.599Z","type":"message"}
{"nick":"calvinfo1","reason":"Quit: Leaving.","date":"2014-05-15T00:31:02.583Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-05-15T00:31:23.753Z","type":"quit"}
{"nick":"thlorenz","date":"2014-05-15T00:31:57.258Z","type":"join"}
{"nick":"mikolalysenko","message":"also this gizmo:  https://github.com/mikolalysenko/least-common-ancestor","date":"2014-05-15T00:32:46.713Z","type":"message"}
{"nick":"mikolalysenko","message":"you can technically save a log factor in space on both of them, but it is really complicated","date":"2014-05-15T00:33:03.421Z","type":"message"}
{"nick":"Raynos","message":"hmm","date":"2014-05-15T00:35:25.150Z","type":"message"}
{"nick":"Raynos","message":"I would love to outgun react with some insane algorithms :)","date":"2014-05-15T00:36:05.653Z","type":"message"}
{"nick":"Raynos","message":"we already out perform them by a factor of 2/3","date":"2014-05-15T00:36:13.900Z","type":"message"}
{"nick":"thlorenz","reason":"Ping timeout: 240 seconds","date":"2014-05-15T00:36:18.304Z","type":"quit"}
{"nick":"mikolalysenko","message":"well, I think I still would need to understand your problem a bit more thoroughly first","date":"2014-05-15T00:36:44.666Z","type":"message"}
{"nick":"Raynos","message":"we need to document things better :)","date":"2014-05-15T00:37:00.892Z","type":"message"}
{"nick":"mikolalysenko","message":"strictly speaking, what are your inputs, and what do you mean by diff here?","date":"2014-05-15T00:37:13.105Z","type":"message"}
{"nick":"Raynos","message":"two virtual trees A & B, diff produces a list of patch operations to that you could aply to A to produce B","date":"2014-05-15T00:37:51.001Z","type":"message"}
{"nick":"mikolalysenko","message":"well, in general don't you have to traverse a and b to get that diff?","date":"2014-05-15T00:38:45.471Z","type":"message"}
{"nick":"mikolalysenko","message":"or can you do something like hashing for quick identity testing of subtrees?","date":"2014-05-15T00:39:04.251Z","type":"message"}
{"nick":"mikolalysenko","message":"ie a and b could be linked lists of up to n nodes","date":"2014-05-15T00:39:36.607Z","type":"message"}
{"nick":"mikolalysenko","message":"that is you have something where the hash code of a tree is detemined as an aggregate hash function of all its children","date":"2014-05-15T00:42:00.952Z","type":"message"}
{"nick":"maksimlin","reason":"Ping timeout: 245 seconds","date":"2014-05-15T00:42:03.127Z","type":"quit"}
{"nick":"mikolalysenko","message":"so tree a = tree b iff hash(a) = hash(b)","date":"2014-05-15T00:42:11.677Z","type":"message"}
{"nick":"mikolalysenko","message":"where hash(a) =  f(a, hash(children(a)[0]), hash(children(a)[1]), ... )","date":"2014-05-15T00:42:42.930Z","type":"message"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-05-15T00:42:52.554Z","type":"quit"}
{"nick":"mikolalysenko","message":"the trick though is calculating/maintaining that hash under updates","date":"2014-05-15T00:43:01.643Z","type":"message"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2014-05-15T00:44:48.827Z","type":"quit"}
{"nick":"kenperkins_","reason":"Remote host closed the connection","date":"2014-05-15T00:45:12.938Z","type":"quit"}
{"nick":"mikolalysenko","message":"or maybe you are asking about minimizing the number of dom updates?","date":"2014-05-15T00:45:37.651Z","type":"message"}
{"nick":"kenperkins","date":"2014-05-15T00:46:05.199Z","type":"join"}
{"nick":"kenperkins_","date":"2014-05-15T00:50:49.643Z","type":"join"}
{"nick":"Raynos","message":"mikolalysenko: we have something like hashing for quick identity testing of subtrees","date":"2014-05-15T00:52:15.875Z","type":"message"}
{"nick":"Raynos","message":"mikolalysenko: tbh i dont know what im asking :D","date":"2014-05-15T00:52:43.282Z","type":"message"}
{"nick":"kenperkins","reason":"Ping timeout: 245 seconds","date":"2014-05-15T00:54:08.159Z","type":"quit"}
{"nick":"cpup_","reason":"Ping timeout: 240 seconds","date":"2014-05-15T00:55:06.291Z","type":"quit"}
{"nick":"brianloveswords","date":"2014-05-15T00:55:18.159Z","type":"join"}
{"nick":"calvinfo","date":"2014-05-15T00:56:53.630Z","type":"join"}
{"nick":"maksimlin","date":"2014-05-15T00:56:57.396Z","type":"join"}
{"nick":"ednapiranha","date":"2014-05-15T01:00:18.226Z","type":"join"}
{"nick":"ednapiranha","reason":"Remote host closed the connection","date":"2014-05-15T01:00:28.901Z","type":"quit"}
{"nick":"maksimlin","message":"mikolalysenko: you don't need to with git's trees, since in a tree if the chrildren trees are unchanged, you dont need to traverse the children trees - this sound like what you are describing you do Raynos ?","date":"2014-05-15T01:04:17.542Z","type":"message"}
{"nick":"Raynos","message":"something like that","date":"2014-05-15T01:04:58.946Z","type":"message"}
{"nick":"maksimlin","message":"the more I work on git, the more I'm impressed with its platonic ideal impl of objs/trees/hashes","date":"2014-05-15T01:07:19.850Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 14]","date":"2014-05-15T01:07:44.578Z","type":"message"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-05-15T01:10:55.539Z","type":"quit"}
{"nick":"mikolalysenko","message":"maksimlin: that's the same as hash based identity checking","date":"2014-05-15T01:13:34.795Z","type":"message"}
{"nick":"cpup_","date":"2014-05-15T01:14:03.721Z","type":"join"}
{"nick":"mikolalysenko","message":"but in git computing a diff is still O(n)","date":"2014-05-15T01:14:13.112Z","type":"message"}
{"nick":"maksimlin","message":"mikolalysenko: where n is num of total nodes or num of nodes that have changed?","date":"2014-05-15T01:17:52.898Z","type":"message"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T01:18:04.375Z","type":"quit"}
{"nick":"maksimlin","message":"I guess the worst case is the changed nodes are the leaves at the very \"bottom\" of all the trees","date":"2014-05-15T01:18:43.857Z","type":"message"}
{"nick":"pfraze_","date":"2014-05-15T01:20:23.045Z","type":"join"}
{"nick":"mikolalysenko","message":"n=total number of nodes","date":"2014-05-15T01:22:12.996Z","type":"message"}
{"nick":"mikolalysenko","message":"all git operations are basically O(n), but they do some stuff to optimize around this","date":"2014-05-15T01:22:45.565Z","type":"message"}
{"nick":"rowbit","message":"substack, pkrumins: Encoders down: 162.242.164.84 (dev-ie11-1)","date":"2014-05-15T01:23:26.007Z","type":"message"}
{"nick":"pfraze","reason":"Ping timeout: 240 seconds","date":"2014-05-15T01:23:34.713Z","type":"quit"}
{"nick":"mikolalysenko","message":"though generally number of nodes is not a bottleneck for git, since the slow operations are things like diffing a pair of files, which git generally avoids doing","date":"2014-05-15T01:23:48.388Z","type":"message"}
{"nick":"thealphanerd","date":"2014-05-15T01:24:03.168Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T01:24:03.828Z","type":"join"}
{"nick":"maksimlin","message":"mikolalysenko: how do you mean? diff'f files is probably one of the most common git ops ?","date":"2014-05-15T01:24:43.367Z","type":"message"}
{"nick":"pfraze_","reason":"Ping timeout: 245 seconds","date":"2014-05-15T01:24:58.083Z","type":"quit"}
{"nick":"maksimlin","message":"git show <commit> needs to do diff's for example","date":"2014-05-15T01:25:16.797Z","type":"message"}
{"nick":"mikolalysenko","message":"once you diff a file, git just stores the patch data","date":"2014-05-15T01:25:40.632Z","type":"message"}
{"nick":"mikolalysenko","message":"so it doesn't recalculate it I think","date":"2014-05-15T01:25:50.115Z","type":"message"}
{"nick":"maksimlin","message":"what??","date":"2014-05-15T01:25:52.795Z","type":"message"}
{"nick":"maksimlin","message":"no I dont think so","date":"2014-05-15T01:26:00.857Z","type":"message"}
{"nick":"mikolalysenko","message":"I am probably not as familiar with git internals as you, so maybe I am wrong","date":"2014-05-15T01:26:43.512Z","type":"message"}
{"nick":"mikolalysenko","message":"but I was under the impression that commits just store patches to the previous commit","date":"2014-05-15T01:27:02.574Z","type":"message"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2014-05-15T01:27:10.844Z","type":"quit"}
{"nick":"mikolalysenko","message":"instead of a separate copy of the whole repo","date":"2014-05-15T01:27:14.021Z","type":"message"}
{"nick":"thealphanerd","message":"hey substack I was lloking at your project wreq… did you end up ditching that to implement browserify?","date":"2014-05-15T01:27:33.955Z","type":"message"}
{"nick":"maksimlin","message":"mikolalysenko: hey thats fair enough - I;ve been working on js git impl lib for months now so getting maybe too familiar with git internals :-)","date":"2014-05-15T01:27:34.984Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-15T01:28:14.648Z","type":"quit"}
{"nick":"maksimlin","message":"mikolalysenko: yes most ppl seem to think that but it doesnt, evey commit is a snapshot of the whole repo","date":"2014-05-15T01:28:16.006Z","type":"message"}
{"nick":"maksimlin","message":"of course it does optimise the storage \"behind the scenes\" by  doing binary deltas, but thats not part of the git \"DOM\" as it were","date":"2014-05-15T01:29:29.003Z","type":"message"}
{"nick":"substack","message":"thealphanerd: wreq was a proof of concept to show that you can implement commonjs requires asynchronously","date":"2014-05-15T01:29:39.728Z","type":"message"}
{"nick":"thealphanerd","message":"substack: we are trying at famo.us to best figure out or async dependency loading","date":"2014-05-15T01:30:05.717Z","type":"message"}
{"nick":"thealphanerd","message":"and require is proving to be “less than elegant\"","date":"2014-05-15T01:30:17.799Z","type":"message"}
{"nick":"substack","message":"why does it need to be async?","date":"2014-05-15T01:30:34.711Z","type":"message"}
{"nick":"thealphanerd","message":"perhaps it doesn't","date":"2014-05-15T01:30:47.131Z","type":"message"}
{"nick":"substack","message":"wouldn't async loading be really horrible for mobile where latency is the biggest issue?","date":"2014-05-15T01:30:49.239Z","type":"message"}
{"nick":"thealphanerd","message":"well for production we have been rolling an almond","date":"2014-05-15T01:31:03.102Z","type":"message"}
{"nick":"thealphanerd","message":"so no lazy loading","date":"2014-05-15T01:31:10.901Z","type":"message"}
{"nick":"Raynos","message":"why does it need to be async ?","date":"2014-05-15T01:31:13.743Z","type":"message"}
{"nick":"thealphanerd","message":"I guess it doesn't","date":"2014-05-15T01:31:21.887Z","type":"message"}
{"nick":"Raynos","message":"thats not the correct answer :P","date":"2014-05-15T01:31:31.238Z","type":"message"}
{"nick":"Raynos","message":"what use case are you trying to address with async require  / async loading","date":"2014-05-15T01:31:40.043Z","type":"message"}
{"nick":"thealphanerd","message":"Raynos: I’m unfortuantely not as intimate with the frame work as I should be","date":"2014-05-15T01:31:57.403Z","type":"message"}
{"nick":"Raynos","message":"if its \"no built step\" I recommend a \"static file server\" that just does the browserify operation on js files","date":"2014-05-15T01:31:59.837Z","type":"message"}
{"nick":"substack","message":"thealphanerd: you can use browserify to build a umd build that will be consumable by both commonjs and AMD consumers","date":"2014-05-15T01:32:25.426Z","type":"message"}
{"nick":"substack","message":"using --standalone","date":"2014-05-15T01:32:28.818Z","type":"message"}
{"nick":"thealphanerd","message":"The big issue we are having right now, is how to make it easy for all users to work, and not impose a particular module loading paradigm","date":"2014-05-15T01:32:29.147Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: you cant","date":"2014-05-15T01:32:48.596Z","type":"message"}
{"nick":"substack","message":"--standalone also exports to a window global if it can't find amd or commonjs","date":"2014-05-15T01:32:50.574Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: you can create an N KB bundle that is all the code that works for all module systems","date":"2014-05-15T01:33:02.844Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: and then expose clean integration for the blessed module system","date":"2014-05-15T01:33:13.856Z","type":"message"}
{"nick":"Raynos","message":"my mercury has a dist for all module systems ( https://github.com/Raynos/mercury/tree/master/dist ) and has clean / blessed integration for commonJS","date":"2014-05-15T01:34:03.852Z","type":"message"}
{"nick":"mikolalysenko","message":"thealphanerd: how would dependencies work if you didn't pick a module system?","date":"2014-05-15T01:34:20.069Z","type":"message"}
{"nick":"thealphanerd","message":"can you elaborate on the term ‘blessed’?","date":"2014-05-15T01:34:24.402Z","type":"message"}
{"nick":"feross_","reason":"Quit: feross_","date":"2014-05-15T01:35:06.395Z","type":"quit"}
{"nick":"jhiesey","reason":"Quit: jhiesey","date":"2014-05-15T01:35:14.657Z","type":"quit"}
{"nick":"Raynos","message":"thealphanerd: If you want to `require('vtree/is-vnode')` and only depend on that you need commonJS. If you want it with AMD / globals its \"depend on all of vtree\" and use `vtree.isVnode`","date":"2014-05-15T01:35:18.745Z","type":"message"}
{"nick":"mikolalysenko","message":"I think the best you can do without picking a module system is something like bower","date":"2014-05-15T01:35:59.059Z","type":"message"}
{"nick":"Raynos","message":"whatever your choice of blessed is btw, whether that's AMD / ES6 / commonJS. You can load the entire framework in all module sytems but you can only load a subset of the framework in the blessed module system","date":"2014-05-15T01:36:12.650Z","type":"message"}
{"nick":"thealphanerd","message":"mikolalysenko: I think that we do need to pick a module loading system for examples… but we want to figure out how to make the framework itself agnostic","date":"2014-05-15T01:36:12.981Z","type":"message"}
{"nick":"mikolalysenko","message":"which is to say you only do 1 level deep of dependencies in a project","date":"2014-05-15T01:36:14.121Z","type":"message"}
{"nick":"mikolalysenko","message":"thealphanerd: then what Raynos/substack said is the right way to do it","date":"2014-05-15T01:36:37.080Z","type":"message"}
{"nick":"thealphanerd","message":"it sounds likea good appraoch","date":"2014-05-15T01:36:45.671Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: if the framework itself is internally commonJS then you can use `browserify --standalone` quite effectively. For example ( https://github.com/Raynos/mercury/blob/master/package.json#L69 )","date":"2014-05-15T01:36:56.104Z","type":"message"}
{"nick":"mikolalysenko","message":"anyway, I actually have to go right now","date":"2014-05-15T01:36:58.488Z","type":"message"}
{"nick":"thealphanerd","message":"I am going to send this scroll back to the cto and use it as a starting point","date":"2014-05-15T01:37:02.511Z","type":"message"}
{"nick":"substack","message":"thealphanerd: if you want agnostic, window globals are the common denominator","date":"2014-05-15T01:37:04.375Z","type":"message"}
{"nick":"substack","message":"but that's just for showing the examples","date":"2014-05-15T01:37:43.082Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: btw if you have some tool like https://github.com/umdjs/umd to generate a single file that supports all module systems then your baseline is support everything","date":"2014-05-15T01:37:45.923Z","type":"message"}
{"nick":"thealphanerd","message":"thank you substack / Raynos  / mikolalysenko for the advice","date":"2014-05-15T01:37:51.409Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: there is another option btw","date":"2014-05-15T01:38:20.179Z","type":"message"}
{"nick":"thealphanerd","message":"oh reary","date":"2014-05-15T01:38:26.116Z","type":"message"}
{"nick":"Raynos","message":"you can use ES6 for everything","date":"2014-05-15T01:38:29.442Z","type":"message"}
{"nick":"tilgovi","date":"2014-05-15T01:38:34.084Z","type":"join"}
{"nick":"Raynos","message":"and tell your users to use their \"ES6 -> X\" compiler of choice, where X is AMD or commonJS or bla","date":"2014-05-15T01:38:44.162Z","type":"message"}
{"nick":"thealphanerd","message":"going es6 is not the worst idea at all","date":"2014-05-15T01:38:59.333Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: but your going to pay the transpiler burden","date":"2014-05-15T01:39:13.179Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: really i recommend picking a module system for famo.us itself, that is useful internally and just blessing that. Bless the tool that makes the framework authors life sane.","date":"2014-05-15T01:39:45.393Z","type":"message"}
{"nick":"thealphanerd","message":"ahhhhh… because harmony generators are transpiled at run time?","date":"2014-05-15T01:39:59.889Z","type":"message"}
{"nick":"thealphanerd","action":"is not super familliar with es6","date":"2014-05-15T01:40:00.006Z","type":"action"}
{"nick":"Raynos","message":"I'm personally biased where I think sane === browserify+npm","date":"2014-05-15T01:40:12.215Z","type":"message"}
{"nick":"thealphanerd","message":"so our CTO has three major requiremnts","date":"2014-05-15T01:40:56.803Z","type":"message"}
{"nick":"thealphanerd","message":"1.) Boilerplate needs to be minimal","date":"2014-05-15T01:41:01.985Z","type":"message"}
{"nick":"thealphanerd","message":"2.) Scripts should be testable without any build step or source maps","date":"2014-05-15T01:41:02.105Z","type":"message"}
{"nick":"thealphanerd","message":"3.) Should be relatively namespaced","date":"2014-05-15T01:41:02.935Z","type":"message"}
{"nick":"thlorenz","date":"2014-05-15T01:41:12.262Z","type":"join"}
{"nick":"calvinfo","date":"2014-05-15T01:43:27.586Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 252 seconds","date":"2014-05-15T01:43:41.295Z","type":"quit"}
{"nick":"thealphanerd","message":"our current pattern can be converted from AMD to common painlessly, just a matter of killing the anonymous define wrapper and making all the references relative… although that makes things a bit nasty for testing modules individually","date":"2014-05-15T01:45:28.732Z","type":"message"}
{"nick":"thealphanerd","message":"although browserify + testling looks like a great way to run tests","date":"2014-05-15T01:46:24.550Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: what do you mean by relatively namespaced ?","date":"2014-05-15T01:47:12.152Z","type":"message"}
{"nick":"Raynos","message":"you mean `require('./local-file')` ?","date":"2014-05-15T01:47:19.068Z","type":"message"}
{"nick":"thealphanerd","message":"modules reference each other via require(‘famous/module/something')","date":"2014-05-15T01:47:53.786Z","type":"message"}
{"nick":"substack","message":"why is #2 a requirement?","date":"2014-05-15T01:48:01.135Z","type":"message"}
{"nick":"thealphanerd","message":"substack: I have not had a chance to have an extended discussion about that","date":"2014-05-15T01:48:23.737Z","type":"message"}
{"nick":"thealphanerd","message":"my assumption is to make it easy for users to work with the framework without requiring the installation of a toolchain","date":"2014-05-15T01:49:02.646Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: so npm allows `require('famous/foo/bla')` or `require('famous-foo/bla')`","date":"2014-05-15T01:49:14.060Z","type":"message"}
{"nick":"substack","message":"thealphanerd: that is different from what #2 says","date":"2014-05-15T01:49:21.688Z","type":"message"}
{"nick":"thealphanerd","message":"we have found a number of developers having trouble getting the node stack up and running","date":"2014-05-15T01:49:23.864Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: what do you mean by scripts are testable without a build step ?","date":"2014-05-15T01:49:28.721Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: examples or famous unit tests ?","date":"2014-05-15T01:49:41.744Z","type":"message"}
{"nick":"thealphanerd","message":"I’m not sure if he meant “testing” as in unit tests… or testing as in viewing results","date":"2014-05-15T01:49:45.191Z","type":"message"}
{"nick":"thealphanerd","message":"I am assuming the latter, as we currently don’t have unit tests :S","date":"2014-05-15T01:49:54.297Z","type":"message"}
{"nick":"Raynos","message":"like no build step for people working on the famous framework internals","date":"2014-05-15T01:50:04.055Z","type":"message"}
{"nick":"thealphanerd","message":"which I am trying to get off the ground right now","date":"2014-05-15T01:50:08.683Z","type":"message"}
{"nick":"Raynos","message":"or no build step for people using the famous framework","date":"2014-05-15T01:50:10.457Z","type":"message"}
{"nick":"thealphanerd","message":"no build step for people building apps with famous","date":"2014-05-15T01:50:18.340Z","type":"message"}
{"nick":"Raynos","message":"thats easily possible","date":"2014-05-15T01:50:25.523Z","type":"message"}
{"nick":"Raynos","message":"the module system you use for source code & tests","date":"2014-05-15T01:50:34.467Z","type":"message"}
{"nick":"Raynos","message":"is not the same module system needed for examples","date":"2014-05-15T01:50:39.289Z","type":"message"}
{"nick":"Raynos","message":"examples can just `<script src='./dist/famous.js' /><script> %globalcodesoup% </script>","date":"2014-05-15T01:51:03.613Z","type":"message"}
{"nick":"thealphanerd","message":"that is what we are slowly working towards right now","date":"2014-05-15T01:51:32.386Z","type":"message"}
{"nick":"thealphanerd","message":"but it is still needing the inclusion of require","date":"2014-05-15T01:51:44.042Z","type":"message"}
{"nick":"thealphanerd","message":"which is nasty… and not a good way to teach new developers who have never programmed before","date":"2014-05-15T01:51:55.699Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: there are also things like requirebin.com","date":"2014-05-15T01:51:57.793Z","type":"message"}
{"nick":"thealphanerd","message":"I was looking at ogd’s great requirebin the other day","date":"2014-05-15T01:53:26.188Z","type":"message"}
{"nick":"thealphanerd","message":"using the npm request animation frame","date":"2014-05-15T01:53:34.427Z","type":"message"}
{"nick":"Raynos","message":"jjjohnny: sup","date":"2014-05-15T01:53:35.371Z","type":"message"}
{"nick":"thealphanerd","message":"Caltrain is almost at my stop btw","date":"2014-05-15T01:54:11.502Z","type":"message"}
{"nick":"thealphanerd","message":"so I may vanish suddenly","date":"2014-05-15T01:54:16.074Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: so I think if you can create a single js file that exports a global then the no build step should go away","date":"2014-05-15T01:54:21.449Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: its a seperate question whether your examples should show zero module system usage or should demonstrate how to use famous with a module system","date":"2014-05-15T01:54:39.752Z","type":"message"}
{"nick":"kumavis_","date":"2014-05-15T01:54:52.216Z","type":"join"}
{"nick":"thealphanerd","message":"or potentially both","date":"2014-05-15T01:54:53.480Z","type":"message"}
{"nick":"thealphanerd","message":"examples of no module / common / require","date":"2014-05-15T01:55:00.264Z","type":"message"}
{"nick":"thealphanerd","message":"It would be really nice if users could just up and run and develop however they felt like","date":"2014-05-15T01:55:24.467Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: then you need to support both common, globals & amd which is hard","date":"2014-05-15T01:55:34.722Z","type":"message"}
{"nick":"Raynos","message":"well not hard, but","date":"2014-05-15T01:55:45.331Z","type":"message"}
{"nick":"thealphanerd","message":"not as simple as supporting a single pattern","date":"2014-05-15T01:55:58.824Z","type":"message"}
{"nick":"thealphanerd","message":"multiple sources of truth","date":"2014-05-15T01:56:09.315Z","type":"message"}
{"nick":"Raynos","message":"define([\"famous\"], function () {}) and require(\"famous\") are trivial to support","date":"2014-05-15T01:56:27.292Z","type":"message"}
{"nick":"Raynos","message":"supporting both define([\"famous/physics/bla\"], function () {}) and require(\"famous/physics/bla\") is a bit harder but do-able","date":"2014-05-15T01:56:48.352Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: although remember that one will be a source of truth and the other will be a compiled artifact","date":"2014-05-15T01:58:17.873Z","type":"message"}
{"nick":"thealphanerd","message":"that is true","date":"2014-05-15T01:58:34.205Z","type":"message"}
{"nick":"thealphanerd","message":"as we will only develop in a single module loading pattern","date":"2014-05-15T01:58:45.558Z","type":"message"}
{"nick":"thealphanerd","message":"Raynos: time to run","date":"2014-05-15T01:59:26.588Z","type":"message"}
{"nick":"thealphanerd","message":"thanks for the time","date":"2014-05-15T01:59:26.702Z","type":"message"}
{"nick":"thealphanerd","message":"Raynos / substack / others: we are having our weekly demo night tomorrow if any of you would like to come back the office","date":"2014-05-15T01:59:39.843Z","type":"message"}
{"nick":"thealphanerd","message":"beer and food :D","date":"2014-05-15T01:59:43.593Z","type":"message"}
{"nick":"thealphanerd","message":"email me myles@famo.us if you are interested in coming","date":"2014-05-15T01:59:51.623Z","type":"message"}
{"nick":"naneau","reason":"Quit: Quit.","date":"2014-05-15T02:00:03.537Z","type":"quit"}
{"nick":"thealphanerd","message":"/s/back/by","date":"2014-05-15T02:00:15.682Z","type":"message"}
{"nick":"thealphanerd","message":"cheers","date":"2014-05-15T02:00:37.671Z","type":"message"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-05-15T02:00:37.791Z","type":"quit"}
{"nick":"phated","date":"2014-05-15T02:04:01.153Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T02:07:24.742Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 15]","date":"2014-05-15T02:07:44.798Z","type":"message"}
{"nick":"substack","message":"thlorenz: I'm in europe for a while longer","date":"2014-05-15T02:21:28.121Z","type":"message"}
{"nick":"thlorenz","message":"substack: where at? on that note should we start preparing some stuff for nodeconf?","date":"2014-05-15T02:22:37.089Z","type":"message"}
{"nick":"rowbit","message":"substack, pkrumins: Encoders down: 166.78.114.172 (dev-ie11-2)","date":"2014-05-15T02:22:56.034Z","type":"message"}
{"nick":"substack","message":"thlorenz: budapest","date":"2014-05-15T02:23:13.592Z","type":"message"}
{"nick":"substack","message":"then up to oslo","date":"2014-05-15T02:23:18.751Z","type":"message"}
{"nick":"substack","message":"thlorenz: stream-adventure was written just a few days before nodeconf :p","date":"2014-05-15T02:24:19.473Z","type":"message"}
{"nick":"substack","message":"although if you want to start on it early, go ahead!","date":"2014-05-15T02:24:43.766Z","type":"message"}
{"nick":"quijote","date":"2014-05-15T02:24:47.824Z","type":"join"}
{"nick":"thlorenz","message":"ah cool, sounds fun, yeah we can do some last minute hacking - pretty busy myself ATM","date":"2014-05-15T02:25:05.753Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-15T02:29:14.741Z","type":"quit"}
{"nick":"jcrugzz","reason":"Read error: Connection reset by peer","date":"2014-05-15T02:36:18.911Z","type":"quit"}
{"nick":"jcrugzz","date":"2014-05-15T02:38:38.003Z","type":"join"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2014-05-15T02:39:31.555Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-05-15T02:40:11.643Z","type":"join"}
{"nick":"kumavis_","reason":"Quit: Computer has gone to sleep.","date":"2014-05-15T02:44:25.468Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2014-05-15T02:44:34.646Z","type":"quit"}
{"nick":"jherms","date":"2014-05-15T02:49:34.118Z","type":"join"}
{"nick":"daleharvey","reason":"Ping timeout: 245 seconds","date":"2014-05-15T02:52:28.264Z","type":"quit"}
{"nick":"addisonj","reason":"Ping timeout: 245 seconds","date":"2014-05-15T02:53:18.055Z","type":"quit"}
{"nick":"owenb__","reason":"Ping timeout: 252 seconds","date":"2014-05-15T02:53:27.927Z","type":"quit"}
{"nick":"addisonj","date":"2014-05-15T02:54:04.884Z","type":"join"}
{"nick":"daleharvey","date":"2014-05-15T02:55:01.496Z","type":"join"}
{"nick":"owenb__","date":"2014-05-15T02:59:03.765Z","type":"join"}
{"nick":"jherms_","date":"2014-05-15T03:02:22.488Z","type":"join"}
{"nick":"jherms__","date":"2014-05-15T03:05:22.795Z","type":"join"}
{"nick":"jherms","reason":"Ping timeout: 252 seconds","date":"2014-05-15T03:06:11.296Z","type":"quit"}
{"nick":"cpup_","new_nick":"cpup","date":"2014-05-15T03:06:36.561Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 16]","date":"2014-05-15T03:07:44.404Z","type":"message"}
{"nick":"calvinfo","date":"2014-05-15T03:07:59.662Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:08:17.077Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-15T03:08:19.295Z","type":"join"}
{"nick":"jherms_","reason":"Ping timeout: 265 seconds","date":"2014-05-15T03:08:50.377Z","type":"quit"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:09:02.922Z","type":"quit"}
{"nick":"fent_","reason":"Ping timeout: 245 seconds","date":"2014-05-15T03:09:08.263Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:09:17.238Z","type":"join"}
{"nick":"tanepiper_","reason":"Ping timeout: 245 seconds","date":"2014-05-15T03:09:33.146Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-05-15T03:09:41.547Z","type":"quit"}
{"nick":"owenb__","reason":"Ping timeout: 245 seconds","date":"2014-05-15T03:09:58.120Z","type":"quit"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:09:58.312Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:10:07.188Z","type":"join"}
{"nick":"fent_","date":"2014-05-15T03:11:03.048Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:11:03.281Z","type":"quit"}
{"nick":"owenb__","date":"2014-05-15T03:11:04.244Z","type":"join"}
{"nick":"calvinfo1","date":"2014-05-15T03:11:06.610Z","type":"join"}
{"nick":"tanepiper_","date":"2014-05-15T03:11:08.251Z","type":"join"}
{"nick":"calvinfo","date":"2014-05-15T03:11:56.295Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:11:56.587Z","type":"quit"}
{"nick":"thlorenz","date":"2014-05-15T03:13:51.056Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-05-15T03:14:38.993Z","type":"quit"}
{"nick":"calvinfo","reason":"Ping timeout: 252 seconds","date":"2014-05-15T03:16:27.295Z","type":"quit"}
{"nick":"quijote","date":"2014-05-15T03:25:44.501Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 276 seconds","date":"2014-05-15T03:30:45.384Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:38:11.413Z","type":"join"}
{"nick":"calvinfo1","date":"2014-05-15T03:39:04.411Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:39:04.614Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:39:54.144Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-05-15T03:40:22.214Z","type":"join"}
{"nick":"calvinfo2","date":"2014-05-15T03:40:52.695Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:40:52.930Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:41:44.625Z","type":"join"}
{"nick":"calvinfo2","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:41:44.885Z","type":"quit"}
{"nick":"calvinfo2","date":"2014-05-15T03:42:37.204Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:42:37.439Z","type":"quit"}
{"nick":"feross","reason":"Quit: Connection closed for inactivity","date":"2014-05-15T03:42:41.749Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:43:34.225Z","type":"join"}
{"nick":"calvinfo2","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:43:34.513Z","type":"quit"}
{"nick":"calvinfo1","reason":"Ping timeout: 276 seconds","date":"2014-05-15T03:43:45.347Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-15T03:44:26.295Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:44:26.527Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2014-05-15T03:44:58.217Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:45:19.647Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:45:19.887Z","type":"quit"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:46:01.539Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:46:17.363Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:46:55.418Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:47:09.365Z","type":"join"}
{"nick":"calvinfo1","date":"2014-05-15T03:48:01.194Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:48:01.454Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:48:58.708Z","type":"join"}
{"nick":"calvinfo2","date":"2014-05-15T03:49:51.376Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:49:51.642Z","type":"quit"}
{"nick":"calvinfo1","reason":"Ping timeout: 240 seconds","date":"2014-05-15T03:52:18.175Z","type":"quit"}
{"nick":"calvinfo2","reason":"Ping timeout: 265 seconds","date":"2014-05-15T03:54:45.348Z","type":"quit"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2014-05-15T03:57:59.217Z","type":"quit"}
{"nick":"shama_","date":"2014-05-15T04:05:10.393Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-05-15T04:07:28.180Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 15]","date":"2014-05-15T04:07:44.570Z","type":"message"}
{"nick":"shama","reason":"Ping timeout: 240 seconds","date":"2014-05-15T04:07:54.236Z","type":"quit"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2014-05-15T04:10:00.094Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 258 seconds","date":"2014-05-15T04:13:41.147Z","type":"quit"}
{"nick":"natemic","new_nick":"natemi","date":"2014-05-15T04:20:00.461Z","type":"nick"}
{"nick":"ryan_ramage","date":"2014-05-15T04:23:57.469Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T04:26:18.328Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-15T04:30:38.187Z","type":"quit"}
{"nick":"jherms","date":"2014-05-15T04:36:15.921Z","type":"join"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-05-15T04:37:00.837Z","type":"quit"}
{"nick":"jherms__","reason":"Ping timeout: 255 seconds","date":"2014-05-15T04:39:05.596Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T04:43:43.117Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2014-05-15T04:46:21.083Z","type":"nick"}
{"nick":"calvinfo","reason":"Ping timeout: 245 seconds","date":"2014-05-15T04:48:18.034Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-05-15T04:55:28.154Z","type":"join"}
{"nick":"shama_","date":"2014-05-15T04:57:02.275Z","type":"quit"}
{"nick":"quijote","date":"2014-05-15T04:58:07.415Z","type":"join"}
{"nick":"ryan_ramage","reason":"Quit: ryan_ramage","date":"2014-05-15T04:59:21.552Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T05:07:29.184Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 22]","date":"2014-05-15T05:07:44.670Z","type":"message"}
{"nick":"phated","date":"2014-05-15T05:20:49.073Z","type":"join"}
{"nick":"phated","reason":"Ping timeout: 245 seconds","date":"2014-05-15T05:25:23.041Z","type":"quit"}
{"nick":"DTrejo","date":"2014-05-15T05:32:48.299Z","type":"join"}
{"nick":"kumavis_","date":"2014-05-15T05:33:37.204Z","type":"join"}
{"nick":"kumavis","reason":"Ping timeout: 240 seconds","date":"2014-05-15T05:35:54.724Z","type":"quit"}
{"nick":"kumavis_","new_nick":"kumavis","date":"2014-05-15T05:35:55.076Z","type":"nick"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T05:36:40.355Z","type":"quit"}
{"nick":"jxson","date":"2014-05-15T05:41:01.571Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 252 seconds","date":"2014-05-15T05:44:35.295Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T05:45:14.608Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T05:57:24.192Z","type":"join"}
{"nick":"john3213","date":"2014-05-15T06:05:23.165Z","type":"join"}
{"nick":"DTrejo","date":"2014-05-15T06:06:56.569Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 2, free: 38]","date":"2014-05-15T06:07:44.719Z","type":"message"}
{"nick":"py1hon","reason":"Ping timeout: 245 seconds","date":"2014-05-15T06:07:53.197Z","type":"quit"}
{"nick":"jjjohnny","reason":"Ping timeout: 245 seconds","date":"2014-05-15T06:07:53.314Z","type":"quit"}
{"nick":"jjjohnny","date":"2014-05-15T06:08:00.675Z","type":"join"}
{"nick":"py1hon","date":"2014-05-15T06:08:01.638Z","type":"join"}
{"nick":"calvinmetcalf","reason":"Quit: Connection closed for inactivity","date":"2014-05-15T06:08:14.931Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T06:08:39.218Z","type":"quit"}
{"nick":"john3213","date":"2014-05-15T06:10:25.026Z","type":"part"}
{"nick":"natemi","reason":"Ping timeout: 240 seconds","date":"2014-05-15T06:13:38.220Z","type":"quit"}
{"nick":"jherms","reason":"Quit: Leaving","date":"2014-05-15T06:14:05.504Z","type":"quit"}
{"nick":"maksimlin","reason":"Ping timeout: 276 seconds","date":"2014-05-15T06:14:33.537Z","type":"quit"}
{"nick":"dlmanning","reason":"Ping timeout: 240 seconds","date":"2014-05-15T06:14:43.080Z","type":"quit"}
{"nick":"natemic","date":"2014-05-15T06:15:52.769Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 245 seconds","date":"2014-05-15T06:16:38.042Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2014-05-15T06:28:18.133Z","type":"quit"}
{"nick":"dlmanning","date":"2014-05-15T06:28:29.193Z","type":"join"}
{"nick":"kriskowal","reason":"Quit: kriskowal","date":"2014-05-15T06:32:19.761Z","type":"quit"}
{"nick":"kriskowal","date":"2014-05-15T06:32:47.303Z","type":"join"}
{"nick":"calvinfo","date":"2014-05-15T06:40:18.663Z","type":"join"}
{"nick":"domanic","date":"2014-05-15T06:41:34.310Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T06:43:00.559Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 265 seconds","date":"2014-05-15T06:47:47.406Z","type":"quit"}
{"nick":"thealphanerd","date":"2014-05-15T06:48:19.505Z","type":"join"}
{"nick":"feross","date":"2014-05-15T06:57:19.409Z","type":"join"}
{"nick":"djcoin","date":"2014-05-15T06:59:27.609Z","type":"join"}
{"nick":"sveisvei","date":"2014-05-15T07:02:13.297Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T07:04:46.251Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 39]","date":"2014-05-15T07:07:44.469Z","type":"message"}
{"nick":"calvinfo","date":"2014-05-15T07:09:10.302Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T07:18:00.110Z","type":"quit"}
{"nick":"rowbit","message":"substack, pkrumins: These encoders are STILL down: 162.242.164.84(dev-ie11-1)","date":"2014-05-15T07:18:26.757Z","type":"message"}
{"nick":"quijote","date":"2014-05-15T07:20:59.752Z","type":"join"}
{"nick":"feross","reason":"Quit: feross","date":"2014-05-15T07:22:21.060Z","type":"quit"}
{"nick":"Maciek416","reason":"Remote host closed the connection","date":"2014-05-15T07:27:16.490Z","type":"quit"}
{"nick":"feross","date":"2014-05-15T07:32:22.434Z","type":"join"}
{"nick":"kumavis","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2014-05-15T07:33:32.600Z","type":"quit"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2014-05-15T07:35:19.382Z","type":"quit"}
{"nick":"fotoverite","date":"2014-05-15T07:37:32.666Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 240 seconds","date":"2014-05-15T07:41:54.640Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 45]","date":"2014-05-15T08:07:44.505Z","type":"message"}
{"nick":"fotoverite","date":"2014-05-15T08:08:30.296Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 252 seconds","date":"2014-05-15T08:12:43.296Z","type":"quit"}
{"nick":"rowbit","message":"substack, pkrumins: These encoders are STILL down: 166.78.114.172(dev-ie11-2)","date":"2014-05-15T08:17:56.952Z","type":"message"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2014-05-15T08:24:02.356Z","type":"quit"}
{"nick":"feross","date":"2014-05-15T08:24:37.685Z","type":"part"}
{"nick":"fotoverite","date":"2014-05-15T08:38:36.240Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 276 seconds","date":"2014-05-15T08:44:03.278Z","type":"quit"}
{"nick":"domanic","message":"https://twitter.com/dch__/status/466861857199104000","date":"2014-05-15T09:01:57.342Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 58]","date":"2014-05-15T09:07:44.487Z","type":"message"}
{"nick":"contrahax","date":"2014-05-15T09:09:07.443Z","type":"join"}
{"nick":"domanic","reason":"Remote host closed the connection","date":"2014-05-15T09:15:48.957Z","type":"quit"}
{"nick":"Maciek416","date":"2014-05-15T09:15:53.646Z","type":"join"}
{"nick":"Maciek416","reason":"Ping timeout: 240 seconds","date":"2014-05-15T09:20:14.780Z","type":"quit"}
{"nick":"domanic","date":"2014-05-15T09:20:46.305Z","type":"join"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-05-15T09:22:48.318Z","type":"quit"}
{"nick":"contrahax","reason":"Ping timeout: 265 seconds","date":"2014-05-15T09:28:15.336Z","type":"quit"}
{"nick":"maksimlin","date":"2014-05-15T09:37:14.186Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 252 seconds","date":"2014-05-15T09:37:41.651Z","type":"quit"}
{"nick":"fotoverite","date":"2014-05-15T09:39:44.173Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 258 seconds","date":"2014-05-15T09:44:07.201Z","type":"quit"}
{"nick":"domanic","reason":"Ping timeout: 252 seconds","date":"2014-05-15T09:56:07.297Z","type":"quit"}
{"nick":"maksimlin","reason":"Quit: ChatZilla 0.9.90.1 [Firefox 29.0/20140428193838]","date":"2014-05-15T09:56:50.084Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 52]","date":"2014-05-15T10:07:44.590Z","type":"message"}
{"nick":"domanic","date":"2014-05-15T10:18:56.497Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T10:35:51.171Z","type":"join"}
{"nick":"insertcoffee","date":"2014-05-15T10:38:05.273Z","type":"join"}
{"nick":"fotoverite","date":"2014-05-15T10:40:15.610Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-15T10:40:18.042Z","type":"quit"}
{"nick":"fotoverite","reason":"Ping timeout: 252 seconds","date":"2014-05-15T10:44:47.610Z","type":"quit"}
{"nick":"Maciek416","date":"2014-05-15T11:04:44.054Z","type":"join"}
{"nick":"yorick","date":"2014-05-15T11:06:40.304Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 2, free: 58]","date":"2014-05-15T11:07:44.617Z","type":"message"}
{"nick":"ins0mnia","reason":"Remote host closed the connection","date":"2014-05-15T11:08:31.189Z","type":"quit"}
{"nick":"fotoverite","date":"2014-05-15T11:09:02.296Z","type":"join"}
{"nick":"Maciek416","reason":"Ping timeout: 245 seconds","date":"2014-05-15T11:09:08.176Z","type":"quit"}
{"nick":"fotoverite","reason":"Ping timeout: 252 seconds","date":"2014-05-15T11:13:51.297Z","type":"quit"}
{"nick":"ins0mnia","date":"2014-05-15T11:18:23.159Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T11:22:46.326Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 276 seconds","date":"2014-05-15T11:27:51.232Z","type":"quit"}
{"nick":"quijote","date":"2014-05-15T11:46:14.409Z","type":"join"}
{"nick":"calvinmetcalf","date":"2014-05-15T11:54:28.222Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 4, free: 49]","date":"2014-05-15T12:07:44.492Z","type":"message"}
{"nick":"fotoverite","date":"2014-05-15T12:09:53.138Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 252 seconds","date":"2014-05-15T12:14:26.611Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 252 seconds","date":"2014-05-15T12:23:53.296Z","type":"quit"}
{"nick":"Maciek416","date":"2014-05-15T12:53:40.941Z","type":"join"}
{"nick":"Maciek416","reason":"Ping timeout: 240 seconds","date":"2014-05-15T12:58:18.893Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 66]","date":"2014-05-15T13:07:44.700Z","type":"message"}
{"nick":"fotoverite","date":"2014-05-15T13:10:36.640Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 240 seconds","date":"2014-05-15T13:15:14.639Z","type":"quit"}
{"nick":"rowbit","message":"substack, pkrumins: These encoders are STILL down: 162.242.164.84(dev-ie11-1)","date":"2014-05-15T13:18:27.607Z","type":"message"}
{"nick":"quijote","date":"2014-05-15T13:19:54.801Z","type":"join"}
{"nick":"contrahax","date":"2014-05-15T13:29:22.094Z","type":"join"}
{"nick":"contraha_","date":"2014-05-15T13:33:19.301Z","type":"join"}
{"nick":"contrahax","reason":"Ping timeout: 240 seconds","date":"2014-05-15T13:36:41.985Z","type":"quit"}
{"nick":"thlorenz","date":"2014-05-15T13:40:21.562Z","type":"join"}
{"nick":"toddself","date":"2014-05-15T13:47:03.671Z","type":"join"}
{"nick":"dguttman","date":"2014-05-15T13:47:29.841Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-15T13:50:14.679Z","type":"quit"}
{"nick":"ryan_ramage","date":"2014-05-15T13:59:40.283Z","type":"join"}
{"nick":"ryan_ramage","reason":"Client Quit","date":"2014-05-15T13:59:41.698Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 53]","date":"2014-05-15T14:07:44.491Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2014-05-15T14:08:41.282Z","type":"nick"}
{"nick":"fotoverite","date":"2014-05-15T14:11:36.058Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T14:13:00.413Z","type":"join"}
{"nick":"brianloveswords","date":"2014-05-15T14:14:14.242Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 245 seconds","date":"2014-05-15T14:16:13.068Z","type":"quit"}
{"nick":"rowbit","message":"substack, pkrumins: These encoders are STILL down: 166.78.114.172(dev-ie11-2)","date":"2014-05-15T14:17:57.696Z","type":"message"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2014-05-15T14:18:09.799Z","type":"quit"}
{"nick":"dguttman","date":"2014-05-15T14:23:00.566Z","type":"join"}
{"nick":"Maciek416","date":"2014-05-15T14:42:30.673Z","type":"join"}
{"nick":"pfraze","date":"2014-05-15T14:44:26.517Z","type":"join"}
{"nick":"Maciek416","reason":"Ping timeout: 240 seconds","date":"2014-05-15T14:46:54.684Z","type":"quit"}
{"nick":"kenperkins_","reason":"Remote host closed the connection","date":"2014-05-15T14:47:12.859Z","type":"quit"}
{"nick":"pfraze_","date":"2014-05-15T14:47:52.224Z","type":"join"}
{"nick":"kenperkins","date":"2014-05-15T14:48:00.867Z","type":"join"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-05-15T14:48:26.281Z","type":"quit"}
{"nick":"brianloveswords","date":"2014-05-15T14:49:20.477Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 252 seconds","date":"2014-05-15T14:50:55.297Z","type":"quit"}
{"nick":"pfraze","reason":"Ping timeout: 255 seconds","date":"2014-05-15T14:51:32.541Z","type":"quit"}
{"nick":"ednapiranha","date":"2014-05-15T15:00:27.751Z","type":"join"}
{"nick":"fotoverite","date":"2014-05-15T15:00:34.115Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 57]","date":"2014-05-15T15:07:45.011Z","type":"message"}
{"nick":"mikolalysenko","date":"2014-05-15T15:10:10.043Z","type":"join"}
{"nick":"djcoin","reason":"Quit: WeeChat 0.4.2","date":"2014-05-15T15:17:37.141Z","type":"quit"}
{"nick":"naneau","date":"2014-05-15T15:25:43.490Z","type":"join"}
{"nick":"toddself","reason":"Remote host closed the connection","date":"2014-05-15T15:26:20.833Z","type":"quit"}
{"nick":"thealphanerd","date":"2014-05-15T15:26:32.839Z","type":"join"}
{"nick":"thealphanerd","reason":"Client Quit","date":"2014-05-15T15:26:46.325Z","type":"quit"}
{"nick":"toddself","date":"2014-05-15T15:26:57.040Z","type":"join"}
{"nick":"rowbit","message":"substack, pkrumins: Encoders down: 50.57.174.105 (dev-ie8-2)","date":"2014-05-15T15:26:57.858Z","type":"message"}
{"nick":"domanic","reason":"Ping timeout: 255 seconds","date":"2014-05-15T15:30:14.697Z","type":"quit"}
{"nick":"toddself","reason":"Ping timeout: 245 seconds","date":"2014-05-15T15:31:13.068Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T15:33:47.157Z","type":"join"}
{"nick":"rowbit","message":"substack, pkrumins: Encoders down: 184.106.106.46 (dev-ie8-1)","date":"2014-05-15T15:40:58.045Z","type":"message"}
{"nick":"domanic","date":"2014-05-15T15:43:59.060Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 245 seconds","date":"2014-05-15T15:44:58.090Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-05-15T15:45:58.300Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T15:48:41.826Z","type":"join"}
{"nick":"Maciek416","date":"2014-05-15T15:49:13.676Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T15:49:45.016Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-15T15:52:54.649Z","type":"quit"}
{"nick":"toddself","date":"2014-05-15T15:57:33.612Z","type":"join"}
{"nick":"juliangruber","message":"the new chromebook2 looks cool, even with 13\" http://www.samsung.com/us/business/computing/chrome-devices/XE503C32-K01US","date":"2014-05-15T15:58:23.213Z","type":"message"}
{"nick":"toddself","reason":"Ping timeout: 252 seconds","date":"2014-05-15T16:02:08.622Z","type":"quit"}
{"nick":"substack","message":"too bad they are so annoying to run linux on","date":"2014-05-15T16:07:40.322Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 5, free: 54]","date":"2014-05-15T16:07:44.537Z","type":"message"}
{"nick":"substack","message":"why are computers so terrible >_<","date":"2014-05-15T16:09:03.537Z","type":"message"}
{"nick":"substack","message":"still much better than phones","date":"2014-05-15T16:09:13.984Z","type":"message"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2014-05-15T16:10:35.205Z","type":"quit"}
{"nick":"dguttman","date":"2014-05-15T16:11:34.610Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T16:12:37.330Z","type":"join"}
{"nick":"ryan_ramage","date":"2014-05-15T16:15:55.317Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2014-05-15T16:18:37.752Z","type":"nick"}
{"nick":"calvinfo","date":"2014-05-15T16:26:25.244Z","type":"join"}
{"nick":"thealphanerd","date":"2014-05-15T16:28:01.728Z","type":"join"}
{"nick":"jxson","date":"2014-05-15T16:30:56.546Z","type":"join"}
{"nick":"juliangruber","message":"substack: dat flying doge taco","date":"2014-05-15T16:33:16.506Z","type":"message"}
{"nick":"juliangruber","message":"wow","date":"2014-05-15T16:33:17.221Z","type":"message"}
{"nick":"thealphanerd","message":"juliangruber: link?","date":"2014-05-15T16:38:58.855Z","type":"message"}
{"nick":"toddself","date":"2014-05-15T16:46:01.269Z","type":"join"}
{"nick":"toddself","reason":"Remote host closed the connection","date":"2014-05-15T16:47:05.834Z","type":"quit"}
{"nick":"toddself","date":"2014-05-15T16:47:22.671Z","type":"join"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-05-15T16:49:05.293Z","type":"quit"}
{"nick":"quijote","reason":"Read error: Connection reset by peer","date":"2014-05-15T16:49:10.654Z","type":"quit"}
{"nick":"quijote","date":"2014-05-15T16:49:42.398Z","type":"join"}
{"nick":"brianloveswords","date":"2014-05-15T16:55:24.164Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T16:57:41.077Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T16:57:59.952Z","type":"join"}
{"nick":"dybskiy","date":"2014-05-15T16:59:02.183Z","type":"join"}
{"nick":"dybskiy","reason":"Client Quit","date":"2014-05-15T16:59:39.111Z","type":"quit"}
{"nick":"dybskiy","date":"2014-05-15T16:59:52.414Z","type":"join"}
{"nick":"thealphanerd","reason":"Ping timeout: 255 seconds","date":"2014-05-15T17:06:32.643Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 60]","date":"2014-05-15T17:07:44.522Z","type":"message"}
{"nick":"juliangruber","message":"https://github.com/substack/open-source-at-scale/blob/master/images/follow_your_dreams.png","date":"2014-05-15T17:07:52.623Z","type":"message"}
{"nick":"mmalecki","message":"oh god","date":"2014-05-15T17:08:47.549Z","type":"message"}
{"nick":"dybskiy","reason":"Remote host closed the connection","date":"2014-05-15T17:08:52.189Z","type":"quit"}
{"nick":"mmalecki","message":"this is perfect","date":"2014-05-15T17:08:59.347Z","type":"message"}
{"nick":"domanic","message":"pfraze_, https://en.wikipedia.org/wiki/E_(programming_language)","date":"2014-05-15T17:14:09.748Z","type":"message"}
{"nick":"domanic","message":"object oriented language with built in capability security model!","date":"2014-05-15T17:14:31.112Z","type":"message"}
{"nick":"phated","date":"2014-05-15T17:16:47.287Z","type":"join"}
{"nick":"insertcoffee","reason":"Read error: No route to host","date":"2014-05-15T17:17:20.721Z","type":"quit"}
{"nick":"domanic","message":"substack, http://www.instructables.com/member/zackfreedman/","date":"2014-05-15T17:20:41.411Z","type":"message"}
{"nick":"domanic","message":"also: http://www.instructables.com/id/The-NovaA-DIY-Oculus-Rift/","date":"2014-05-15T17:23:55.170Z","type":"message"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-05-15T17:28:25.331Z","type":"quit"}
{"nick":"sveisvei","reason":"Quit: Connection closed for inactivity","date":"2014-05-15T17:29:23.361Z","type":"quit"}
{"nick":"kumavis","date":"2014-05-15T17:36:03.354Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 276 seconds","date":"2014-05-15T17:36:24.085Z","type":"quit"}
{"nick":"cpup","reason":"Ping timeout: 240 seconds","date":"2014-05-15T17:37:15.652Z","type":"quit"}
{"nick":"cpup","date":"2014-05-15T17:39:47.297Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T17:44:03.030Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-05-15T17:47:35.761Z","type":"quit"}
{"nick":"thlorenz","date":"2014-05-15T17:48:07.611Z","type":"join"}
{"nick":"jhiesey","date":"2014-05-15T17:49:51.150Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 252 seconds","date":"2014-05-15T17:52:41.611Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-15T18:00:17.906Z","type":"quit"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T18:04:37.774Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T18:04:56.119Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 35]","date":"2014-05-15T18:07:44.840Z","type":"message"}
{"nick":"thealphanerd","date":"2014-05-15T18:14:03.737Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2014-05-15T18:14:20.007Z","type":"nick"}
{"nick":"defunctzombie","message":"substack: but is open source web scale?","date":"2014-05-15T18:14:29.334Z","type":"message"}
{"nick":"pfraze_","message":"domanic: interesting. I like the \"to\" syntax for methods. Interesting claim about no deadlocks","date":"2014-05-15T18:15:07.479Z","type":"message"}
{"nick":"thlorenz","date":"2014-05-15T18:15:56.653Z","type":"join"}
{"nick":"pfraze_","message":"I'm unsure how promises guarantee that safety, unless the programs are able to guard against deadlock with them (eg with timeouts)","date":"2014-05-15T18:16:47.655Z","type":"message"}
{"nick":"domanic","message":"pfraze_, yeah I think that is an entirely different problem.","date":"2014-05-15T18:18:47.128Z","type":"message"}
{"nick":"pfraze_","message":"object-caps systems are interesting - seem almost mandatory for permissions in a system that doesn't have a top-down design (and thus could determine the full range of possible permissions)","date":"2014-05-15T18:19:26.027Z","type":"message"}
{"nick":"mikolalysenko","message":"p","date":"2014-05-15T18:19:38.265Z","type":"message"}
{"nick":"mikolalysenko","message":"err, pfraze_ : I think this is why they don't have deadlocks:  http://www.erights.org/elang/kernel/SendExpr.html","date":"2014-05-15T18:20:00.587Z","type":"message"}
{"nick":"pfraze_","message":"huh, xml and java versions","date":"2014-05-15T18:21:09.167Z","type":"message"}
{"nick":"mikolalysenko","message":"in particular the section on partially ordered fail-stop delivery","date":"2014-05-15T18:21:11.079Z","type":"message"}
{"nick":"mikolalysenko","message":"don't know that I fully understand it myself though","date":"2014-05-15T18:21:40.172Z","type":"message"}
{"nick":"mikolalysenko","message":"but there is a simple method to prevent all deadlocks: don't allow for any cycles in waiting","date":"2014-05-15T18:22:10.475Z","type":"message"}
{"nick":"mikolalysenko","message":"this is easy if you enforce a partial order on all locks/barriers/channels/whatever","date":"2014-05-15T18:23:01.299Z","type":"message"}
{"nick":"rowbit","message":"substack, pkrumins: Encoders down: 50.57.171.229 (dev-ie6-2)","date":"2014-05-15T18:23:58.309Z","type":"message"}
{"nick":"pfraze_","message":"ok, these ideas are tricky to navigate so bear with me:","date":"2014-05-15T18:24:17.263Z","type":"message"}
{"nick":"cpup","reason":"Read error: Connection reset by peer","date":"2014-05-15T18:24:42.652Z","type":"quit"}
{"nick":"pfraze_","message":"it seems like the claim here is that deadlock is the result of message-delivery failures: dropped or out of order","date":"2014-05-15T18:24:46.343Z","type":"message"}
{"nick":"pfraze_","message":"do I understand that correctly?","date":"2014-05-15T18:25:06.802Z","type":"message"}
{"nick":"mikolalysenko","message":"pfraze_: I don't think so","date":"2014-05-15T18:25:25.419Z","type":"message"}
{"nick":"mikolalysenko","message":"deadlock happens when you have a cycle with waiting/synchronization primitives","date":"2014-05-15T18:25:40.092Z","type":"message"}
{"nick":"mikolalysenko","message":"ie a waits on b, b waits on a","date":"2014-05-15T18:25:46.340Z","type":"message"}
{"nick":"pfraze_","message":"mhmm","date":"2014-05-15T18:25:50.541Z","type":"message"}
{"nick":"defunctzombie","message":"ogd: have you seen foursquare's swam app?","date":"2014-05-15T18:26:17.843Z","type":"message"}
{"nick":"cpup","date":"2014-05-15T18:27:30.518Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T18:27:59.517Z","type":"join"}
{"nick":"pfraze_","message":"even if message order and delivery are guaranteed, deadlocks can occur in concurrency, right?","date":"2014-05-15T18:28:03.620Z","type":"message"}
{"nick":"mikolalysenko","message":"pfraze_: yes","date":"2014-05-15T18:29:16.328Z","type":"message"}
{"nick":"mikolalysenko","message":"pfraze_: you can have deadlocks even with things like threads","date":"2014-05-15T18:29:25.969Z","type":"message"}
{"nick":"mikolalysenko","message":"a simple example is with mutexes, imagine you have two critical sections a,b and two threads 1,2","date":"2014-05-15T18:30:05.840Z","type":"message"}
{"nick":"mikolalysenko","message":"thread 1 does:  lock(a); lock(b); ... release(b); release(a);","date":"2014-05-15T18:30:25.831Z","type":"message"}
{"nick":"mikolalysenko","message":"thread 2 does:  lock(b); lock(a); ... release(a); release(b);","date":"2014-05-15T18:30:39.063Z","type":"message"}
{"nick":"mikolalysenko","message":"in this case it is possible to get a deadlock pretty easily","date":"2014-05-15T18:30:53.469Z","type":"message"}
{"nick":"mikolalysenko","message":"thread 1 locks a, thread 2 locks b, and bam you are stuck","date":"2014-05-15T18:31:10.419Z","type":"message"}
{"nick":"domanic","message":"if you could lock everything at once, atomically. that would work.","date":"2014-05-15T18:31:16.150Z","type":"message"}
{"nick":"pfraze_","message":"yeah","date":"2014-05-15T18:31:16.317Z","type":"message"}
{"nick":"mikolalysenko","message":"or you could just enforce an ordering on all locks","date":"2014-05-15T18:31:31.230Z","type":"message"}
{"nick":"mikolalysenko","message":"if thread 2 instead did:  lock(a); lock(b); ... release(b); release(a);","date":"2014-05-15T18:31:53.347Z","type":"message"}
{"nick":"mikolalysenko","message":"then no dead lock would be possible","date":"2014-05-15T18:31:59.060Z","type":"message"}
{"nick":"domanic","message":"but does that mean that I can go lock(b); it returns, and then the system is like, sorry we revoked your lock?","date":"2014-05-15T18:32:23.058Z","type":"message"}
{"nick":"mikolalysenko","message":"all you have to do to prove you have no deadlocks is show that there is no possible cycle in the order in which locks are acquired","date":"2014-05-15T18:32:27.291Z","type":"message"}
{"nick":"mikolalysenko","message":"the way lock works in a mutex is you either: 1.  get the lock or 2. wait until whoever is using the mutex releases it, then wake up and proceed","date":"2014-05-15T18:33:16.823Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 265 seconds","date":"2014-05-15T18:33:27.364Z","type":"quit"}
{"nick":"mikolalysenko","message":"deadlock happens when you are waiting for some other guy to relese the lock, but he happens to be waiting for some lock that you (or one of the other threads waiting on you) releases their lock","date":"2014-05-15T18:34:08.780Z","type":"message"}
{"nick":"mikolalysenko","message":"you can have more complicated cycles like a waits on b, b waits on c, c waits on d, ... , z waits on a","date":"2014-05-15T18:34:32.353Z","type":"message"}
{"nick":"mikolalysenko","message":"if you have a situation like that, your system gets stuck and you can't proceed","date":"2014-05-15T18:34:58.759Z","type":"message"}
{"nick":"mikolalysenko","message":"hence you are \"deadlocked\"","date":"2014-05-15T18:35:07.239Z","type":"message"}
{"nick":"mikolalysenko","message":"it is similar to gridlock in cities, where you get traffic that is stuck in an intersection","date":"2014-05-15T18:35:28.959Z","type":"message"}
{"nick":"pfraze_","message":"with you so far","date":"2014-05-15T18:37:37.898Z","type":"message"}
{"nick":"quijote","date":"2014-05-15T18:37:49.520Z","type":"join"}
{"nick":"mikolalysenko","message":"so one way to prevent cycles is to ensure that your dependencies form a directed acyclic graph","date":"2014-05-15T18:38:11.620Z","type":"message"}
{"nick":"mikolalysenko","message":"where by \"dependencies\" I mean the \"waits for\" relation","date":"2014-05-15T18:38:26.209Z","type":"message"}
{"nick":"mikolalysenko","message":"that is it should be a partial order","date":"2014-05-15T18:38:35.944Z","type":"message"}
{"nick":"mikolalysenko","message":"and this is an if and only if type of theorem","date":"2014-05-15T18:38:49.875Z","type":"message"}
{"nick":"mikolalysenko","message":"if and only if the waits for relation has a cycle will you get a deadlock","date":"2014-05-15T18:39:08.889Z","type":"message"}
{"nick":"mikolalysenko","message":"and this must be true for all possible executions of the system","date":"2014-05-15T18:39:20.353Z","type":"message"}
{"nick":"mikolalysenko","message":"that's it","date":"2014-05-15T18:39:29.360Z","type":"message"}
{"nick":"mikolalysenko","message":"now in the case of E, I don't understand precisely how they model communication/synchronization (I think it is some kind of channel/promise/future thing)","date":"2014-05-15T18:40:03.138Z","type":"message"}
{"nick":"mikolalysenko","message":"BUT if it prevents you from writing cycles, then it can't deadlock","date":"2014-05-15T18:40:28.872Z","type":"message"}
{"nick":"pfraze_","message":"I assume it has to do with the reference forking","date":"2014-05-15T18:41:09.202Z","type":"message"}
{"nick":"pfraze_","message":"since that seems to carry guarantees about previously-sent messages","date":"2014-05-15T18:41:36.772Z","type":"message"}
{"nick":"warbrett","date":"2014-05-15T18:41:46.736Z","type":"join"}
{"nick":"pfraze_","message":"so perhaps the system is tracking messages sent and can detect the cycles that way?","date":"2014-05-15T18:42:10.291Z","type":"message"}
{"nick":"mikolalysenko","message":"not sure.  I think it is actually enforced by the structure of the language, like you can't even write a cycle in the first place","date":"2014-05-15T18:43:48.581Z","type":"message"}
{"nick":"mikolalysenko","message":"as opposed to something that is statically checked after the fact","date":"2014-05-15T18:44:01.412Z","type":"message"}
{"nick":"brianloveswords","date":"2014-05-15T18:44:04.166Z","type":"join"}
{"nick":"pfraze_","message":"what makes you think that?","date":"2014-05-15T18:44:06.500Z","type":"message"}
{"nick":"mikolalysenko","message":"they say that it can't deadlock, so I guess what they mean is that their abstraction does not permit you to write cycles","date":"2014-05-15T18:44:26.154Z","type":"message"}
{"nick":"mikolalysenko","message":"this is possible, for example in a kind of fork-join model","date":"2014-05-15T18:44:59.745Z","type":"message"}
{"nick":"mikolalysenko","message":"where parent threads can wait on their children, but not the other way around","date":"2014-05-15T18:45:13.568Z","type":"message"}
{"nick":"mikolalysenko","message":"but it is also limited in terms of expressiveness","date":"2014-05-15T18:45:21.919Z","type":"message"}
{"nick":"mikolalysenko","message":"and not as efficient as locks/threads (though maybe easier to write?)","date":"2014-05-15T18:45:33.000Z","type":"message"}
{"nick":"pfraze_","message":"this is interesting; I'll take it home with me and read a bit more","date":"2014-05-15T18:48:34.740Z","type":"message"}
{"nick":"calvinfo1","date":"2014-05-15T18:57:45.892Z","type":"join"}
{"nick":"jhiesey","reason":"Quit: jhiesey","date":"2014-05-15T18:58:58.056Z","type":"quit"}
{"nick":"calvinfo","reason":"Ping timeout: 276 seconds","date":"2014-05-15T18:59:36.046Z","type":"quit"}
{"nick":"kenperkins_","date":"2014-05-15T18:59:57.323Z","type":"join"}
{"nick":"kenperkins","reason":"Ping timeout: 276 seconds","date":"2014-05-15T19:03:30.112Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 43]","date":"2014-05-15T19:07:44.620Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) tserafim@... successfully signed up for developer browserling plan ($20). Cash money! /!\\","date":"2014-05-15T19:07:56.751Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) paid account successfully upgraded /!\\","date":"2014-05-15T19:07:56.868Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 252 seconds","date":"2014-05-15T19:08:41.297Z","type":"quit"}
{"nick":"jhiesey","date":"2014-05-15T19:16:16.200Z","type":"join"}
{"nick":"rowbit","message":"substack, pkrumins: These encoders are STILL down: 162.242.164.84(dev-ie11-1)","date":"2014-05-15T19:18:28.576Z","type":"message"}
{"nick":"brianloveswords","reason":"Ping timeout: 245 seconds","date":"2014-05-15T19:19:33.073Z","type":"quit"}
{"nick":"contrahax","date":"2014-05-15T19:19:59.459Z","type":"join"}
{"nick":"contraha_","reason":"Read error: Connection reset by peer","date":"2014-05-15T19:20:05.918Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 265 seconds","date":"2014-05-15T19:23:43.373Z","type":"quit"}
{"nick":"brianloveswords","date":"2014-05-15T19:30:42.152Z","type":"join"}
{"nick":"brianloveswords","reason":"Client Quit","date":"2014-05-15T19:31:47.871Z","type":"quit"}
{"nick":"calvinfo2","date":"2014-05-15T19:36:39.224Z","type":"join"}
{"nick":"calvinfo1","reason":"Ping timeout: 240 seconds","date":"2014-05-15T19:37:53.909Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2014-05-15T19:38:06.823Z","type":"nick"}
{"nick":"contrahax","reason":"Read error: Connection reset by peer","date":"2014-05-15T19:39:02.366Z","type":"quit"}
{"nick":"contraha_","date":"2014-05-15T19:39:04.496Z","type":"join"}
{"nick":"warbrett","reason":"Remote host closed the connection","date":"2014-05-15T19:53:29.199Z","type":"quit"}
{"nick":"warbrett","date":"2014-05-15T19:54:05.416Z","type":"join"}
{"nick":"ednapiranha","reason":"Quit: Leaving...","date":"2014-05-15T19:55:16.915Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-05-15T19:55:28.234Z","type":"join"}
{"nick":"ogd","message":"defunctzombie_zz: yea total gather ripoff!","date":"2014-05-15T19:55:35.869Z","type":"message"}
{"nick":"ogd","message":"domanic: haha you are writing dat!","date":"2014-05-15T19:58:12.260Z","type":"message"}
{"nick":"warbrett","reason":"Ping timeout: 252 seconds","date":"2014-05-15T19:58:33.296Z","type":"quit"}
{"nick":"brianloveswords","date":"2014-05-15T20:00:44.121Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 11, free: 33]","date":"2014-05-15T20:07:44.495Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2014-05-15T20:09:50.221Z","type":"nick"}
{"nick":"calvinfo2","reason":"Quit: Leaving.","date":"2014-05-15T20:10:07.313Z","type":"quit"}
{"nick":"tmcw","date":"2014-05-15T20:12:17.651Z","type":"join"}
{"nick":"niftylettuce_","date":"2014-05-15T20:18:05.664Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T20:19:38.167Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2014-05-15T20:20:58.224Z","type":"quit"}
{"nick":"rowbit","message":"substack, pkrumins: seaport services down: web.testling","date":"2014-05-15T20:22:28.326Z","type":"message"}
{"nick":"calvinfo","date":"2014-05-15T20:22:39.064Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 245 seconds","date":"2014-05-15T20:24:08.046Z","type":"quit"}
{"nick":"jxson_","date":"2014-05-15T20:32:45.630Z","type":"join"}
{"nick":"dybskiy","date":"2014-05-15T20:33:02.337Z","type":"join"}
{"nick":"warbrett","date":"2014-05-15T20:34:02.777Z","type":"join"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-05-15T20:35:12.852Z","type":"quit"}
{"nick":"jxson_","reason":"Read error: Connection reset by peer","date":"2014-05-15T20:35:15.701Z","type":"quit"}
{"nick":"jxson_","date":"2014-05-15T20:35:28.309Z","type":"join"}
{"nick":"jxson","reason":"Ping timeout: 255 seconds","date":"2014-05-15T20:36:14.674Z","type":"quit"}
{"nick":"feross","date":"2014-05-15T20:40:13.742Z","type":"join"}
{"nick":"feross_","date":"2014-05-15T20:48:06.166Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2014-05-15T20:48:57.569Z","type":"nick"}
{"nick":"jxson_","reason":"Remote host closed the connection","date":"2014-05-15T20:49:35.120Z","type":"quit"}
{"nick":"jxson_","date":"2014-05-15T20:53:07.999Z","type":"join"}
{"nick":"fent_","reason":"Ping timeout: 245 seconds","date":"2014-05-15T20:55:48.091Z","type":"quit"}
{"nick":"cpup","reason":"Ping timeout: 252 seconds","date":"2014-05-15T20:58:02.622Z","type":"quit"}
{"nick":"fent_","date":"2014-05-15T20:58:05.884Z","type":"join"}
{"nick":"jxson_","reason":"Remote host closed the connection","date":"2014-05-15T20:58:08.251Z","type":"quit"}
{"nick":"cpup","date":"2014-05-15T21:00:05.888Z","type":"join"}
{"nick":"ednapiranha","date":"2014-05-15T21:01:02.711Z","type":"join"}
{"nick":"jxson","date":"2014-05-15T21:02:27.994Z","type":"join"}
{"nick":"dybskiy","reason":"Remote host closed the connection","date":"2014-05-15T21:02:46.932Z","type":"quit"}
{"nick":"dybskiy","date":"2014-05-15T21:04:06.174Z","type":"join"}
{"nick":"rowbit","message":"Daily usage stats: [developer: 31, free: 938]","date":"2014-05-15T21:07:44.590Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 36]","date":"2014-05-15T21:07:44.702Z","type":"message"}
{"nick":"dybskiy_","date":"2014-05-15T21:08:27.828Z","type":"join"}
{"nick":"dybskiy","reason":"Ping timeout: 258 seconds","date":"2014-05-15T21:08:45.610Z","type":"quit"}
{"nick":"dybskiy","date":"2014-05-15T21:10:52.296Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T21:11:49.268Z","type":"quit"}
{"nick":"sorribas","reason":"Ping timeout: 252 seconds","date":"2014-05-15T21:11:53.305Z","type":"quit"}
{"nick":"taterbase","reason":"Ping timeout: 252 seconds","date":"2014-05-15T21:11:53.419Z","type":"quit"}
{"nick":"Raynos","reason":"Ping timeout: 252 seconds","date":"2014-05-15T21:11:53.420Z","type":"quit"}
{"nick":"fent_","reason":"Ping timeout: 240 seconds","date":"2014-05-15T21:11:54.949Z","type":"quit"}
{"nick":"ogd","reason":"Ping timeout: 240 seconds","date":"2014-05-15T21:11:55.189Z","type":"quit"}
{"nick":"dubroy______","reason":"Ping timeout: 240 seconds","date":"2014-05-15T21:11:55.309Z","type":"quit"}
{"nick":"Domenic","reason":"Ping timeout: 240 seconds","date":"2014-05-15T21:11:55.310Z","type":"quit"}
{"nick":"contraha_","reason":"Quit: Sleeping","date":"2014-05-15T21:11:56.917Z","type":"quit"}
{"nick":"machty","reason":"Ping timeout: 240 seconds","date":"2014-05-15T21:12:19.230Z","type":"quit"}
{"nick":"tanepiper_","reason":"Ping timeout: 245 seconds","date":"2014-05-15T21:12:28.319Z","type":"quit"}
{"nick":"sindresorhus","reason":"Ping timeout: 265 seconds","date":"2014-05-15T21:12:28.919Z","type":"quit"}
{"nick":"ednapiranha","reason":"Quit: Leaving...","date":"2014-05-15T21:12:35.262Z","type":"quit"}
{"nick":"hughsk","reason":"Ping timeout: 252 seconds","date":"2014-05-15T21:12:37.430Z","type":"quit"}
{"nick":"hackygolucky","reason":"Ping timeout: 252 seconds","date":"2014-05-15T21:12:37.430Z","type":"quit"}
{"nick":"parshap_","reason":"Ping timeout: 245 seconds","date":"2014-05-15T21:12:53.181Z","type":"quit"}
{"nick":"niftylettuce_","reason":"Ping timeout: 265 seconds","date":"2014-05-15T21:12:57.522Z","type":"quit"}
{"nick":"addisonj","reason":"Ping timeout: 265 seconds","date":"2014-05-15T21:12:57.758Z","type":"quit"}
{"nick":"dybskiy_","reason":"Ping timeout: 252 seconds","date":"2014-05-15T21:12:59.296Z","type":"quit"}
{"nick":"daleharvey","reason":"Ping timeout: 252 seconds","date":"2014-05-15T21:12:59.409Z","type":"quit"}
{"nick":"owenb__","reason":"Ping timeout: 240 seconds","date":"2014-05-15T21:13:07.139Z","type":"quit"}
{"nick":"jcrugzz","reason":"Ping timeout: 240 seconds","date":"2014-05-15T21:13:07.139Z","type":"quit"}
{"nick":"ehd","reason":"Ping timeout: 240 seconds","date":"2014-05-15T21:13:07.381Z","type":"quit"}
{"nick":"ELLIOTTCABLE","reason":"Ping timeout: 245 seconds","date":"2014-05-15T21:13:18.388Z","type":"quit"}
{"nick":"kcherkashin__","reason":"Ping timeout: 252 seconds","date":"2014-05-15T21:13:21.418Z","type":"quit"}
{"nick":"tobie","reason":"Ping timeout: 265 seconds","date":"2014-05-15T21:13:26.618Z","type":"quit"}
{"nick":"mafintosh","reason":"Ping timeout: 265 seconds","date":"2014-05-15T21:13:26.738Z","type":"quit"}
{"nick":"calvinmetcalf","reason":"Ping timeout: 240 seconds","date":"2014-05-15T21:13:31.087Z","type":"quit"}
{"nick":"andreypopp","reason":"Ping timeout: 240 seconds","date":"2014-05-15T21:13:31.318Z","type":"quit"}
{"nick":"gozala","reason":"Ping timeout: 252 seconds","date":"2014-05-15T21:13:43.418Z","type":"quit"}
{"nick":"mrb_bk","reason":"Ping timeout: 265 seconds","date":"2014-05-15T21:14:24.788Z","type":"quit"}
{"nick":"tmcw","reason":"Remote host closed the connection","date":"2014-05-15T21:15:26.813Z","type":"quit"}
{"nick":"tmcw","date":"2014-05-15T21:16:01.246Z","type":"join"}
{"nick":"tmcw","reason":"Ping timeout: 258 seconds","date":"2014-05-15T21:20:15.264Z","type":"quit"}
{"nick":"quijote","date":"2014-05-15T21:20:26.733Z","type":"join"}
{"nick":"tmcw","date":"2014-05-15T21:21:56.653Z","type":"join"}
{"nick":"fent_","date":"2014-05-15T21:22:39.018Z","type":"join"}
{"nick":"ogd","date":"2014-05-15T21:22:41.732Z","type":"join"}
{"nick":"dybskiy","reason":"Remote host closed the connection","date":"2014-05-15T21:22:53.451Z","type":"quit"}
{"nick":"hughsk","date":"2014-05-15T21:23:08.681Z","type":"join"}
{"nick":"taterbase","date":"2014-05-15T21:23:28.630Z","type":"join"}
{"nick":"daleharvey","date":"2014-05-15T21:24:21.344Z","type":"join"}
{"nick":"Domenic","date":"2014-05-15T21:24:59.160Z","type":"join"}
{"nick":"dubroy______","date":"2014-05-15T21:24:59.280Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 255 seconds","date":"2014-05-15T21:25:17.528Z","type":"quit"}
{"nick":"addisonj","date":"2014-05-15T21:25:49.820Z","type":"join"}
{"nick":"brianloveswords","date":"2014-05-15T21:26:39.728Z","type":"join"}
{"nick":"hackygolucky","date":"2014-05-15T21:27:29.748Z","type":"join"}
{"nick":"tobie","date":"2014-05-15T21:27:32.179Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2014-05-15T21:28:17.347Z","type":"nick"}
{"nick":"tanepiper_","date":"2014-05-15T21:28:19.378Z","type":"join"}
{"nick":"feross_","reason":"Quit: feross_","date":"2014-05-15T21:28:35.694Z","type":"quit"}
{"nick":"Domenic_","date":"2014-05-15T21:28:40.250Z","type":"join"}
{"nick":"sorribas","date":"2014-05-15T21:28:43.620Z","type":"join"}
{"nick":"owenb__","date":"2014-05-15T21:28:46.469Z","type":"join"}
{"nick":"ehd","date":"2014-05-15T21:28:51.472Z","type":"join"}
{"nick":"jcrugzz","date":"2014-05-15T21:29:02.967Z","type":"join"}
{"nick":"sindresorhus","date":"2014-05-15T21:29:31.091Z","type":"join"}
{"nick":"parshap_","date":"2014-05-15T21:29:39.217Z","type":"join"}
{"nick":"gozala","date":"2014-05-15T21:29:47.297Z","type":"join"}
{"nick":"kcherkashin__","date":"2014-05-15T21:29:47.417Z","type":"join"}
{"nick":"mafintosh","date":"2014-05-15T21:30:18.396Z","type":"join"}
{"nick":"CaptainEC","date":"2014-05-15T21:30:27.306Z","type":"join"}
{"nick":"mrb_bk","date":"2014-05-15T21:30:37.241Z","type":"join"}
{"nick":"andreypopp","date":"2014-05-15T21:30:58.551Z","type":"join"}
{"nick":"machty","date":"2014-05-15T21:31:01.466Z","type":"join"}
{"nick":"calvinmetcalf","date":"2014-05-15T21:31:06.306Z","type":"join"}
{"nick":"niftylettuce_","date":"2014-05-15T21:31:19.094Z","type":"join"}
{"nick":"Domenic_","new_nick":"Raynos","date":"2014-05-15T21:35:18.776Z","type":"nick"}
{"nick":"rowbit","message":"substack, pkrumins: seaport services down: web.testling","date":"2014-05-15T21:36:28.441Z","type":"message"}
{"nick":"domanic","message":"here is trouble! \"Domenic_ is now known as Raynos\"","date":"2014-05-15T21:36:55.121Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2014-05-15T21:37:12.618Z","type":"nick"}
{"nick":"domanic","message":"at least we'll get continuables instead of promises","date":"2014-05-15T21:37:23.361Z","type":"message"}
{"nick":"naneau","reason":"Ping timeout: 265 seconds","date":"2014-05-15T21:38:05.404Z","type":"quit"}
{"nick":"rch","message":"heh","date":"2014-05-15T21:39:13.301Z","type":"message"}
{"nick":"mikolalysenko","date":"2014-05-15T21:40:14.441Z","type":"join"}
{"nick":"Raynos","message":"domanic: I dont know why my irc tool logs me in as Domenic_ :/","date":"2014-05-15T21:40:33.735Z","type":"message"}
{"nick":"Raynos","message":"i changed my nick to Domenic_ to troll him once and my irc client has \"cached\" this troll","date":"2014-05-15T21:40:46.271Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2014-05-15T21:41:02.369Z","type":"nick"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-05-15T21:42:54.897Z","type":"quit"}
{"nick":"domanic","message":"sounds like the sort of thing Raynos would say.","date":"2014-05-15T21:43:10.329Z","type":"message"}
{"nick":"Raynos","message":"I am Raynos.","date":"2014-05-15T21:43:28.138Z","type":"message"}
{"nick":"domanic","message":"to veryify, I'll need to ask you a security question.","date":"2014-05-15T21:44:02.586Z","type":"message"}
{"nick":"Raynos","message":"ask me about my mothers maiden name","date":"2014-05-15T21:44:16.572Z","type":"message"}
{"nick":"Raynos","message":"thats easily googlable","date":"2014-05-15T21:44:19.310Z","type":"message"}
{"nick":"domanic","message":"I've got a better one - how do reducers handle back pressure?","date":"2014-05-15T21:45:06.034Z","type":"message"}
{"nick":"naneau","date":"2014-05-15T21:46:26.145Z","type":"join"}
{"nick":"jesusabdullah","message":"yo, anyone going to jsconf and need a roommate?","date":"2014-05-15T21:46:33.026Z","type":"message"}
{"nick":"jesusabdullah","message":"cause I need one","date":"2014-05-15T21:46:36.524Z","type":"message"}
{"nick":"jesusabdullah","message":"I thought jsconf was later in the summer for some reason","date":"2014-05-15T21:46:49.622Z","type":"message"}
{"nick":"kumavis","reason":"Ping timeout: 240 seconds","date":"2014-05-15T21:47:38.245Z","type":"quit"}
{"nick":"ednapiranha","date":"2014-05-15T21:47:53.994Z","type":"join"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2014-05-15T21:50:16.928Z","type":"quit"}
{"nick":"domanic","message":"Raynos, ^","date":"2014-05-15T21:50:24.538Z","type":"message"}
{"nick":"jxson","date":"2014-05-15T21:50:50.428Z","type":"join"}
{"nick":"jxson_","date":"2014-05-15T21:52:25.438Z","type":"join"}
{"nick":"jxson_","reason":"Remote host closed the connection","date":"2014-05-15T21:52:43.186Z","type":"quit"}
{"nick":"jxson_","date":"2014-05-15T21:53:21.222Z","type":"join"}
{"nick":"jxson_","reason":"Remote host closed the connection","date":"2014-05-15T21:53:35.735Z","type":"quit"}
{"nick":"jxson_","date":"2014-05-15T21:54:08.662Z","type":"join"}
{"nick":"jxson","reason":"Ping timeout: 240 seconds","date":"2014-05-15T21:55:06.914Z","type":"quit"}
{"nick":"jxson_","reason":"Read error: Connection reset by peer","date":"2014-05-15T21:55:59.100Z","type":"quit"}
{"nick":"jxson","date":"2014-05-15T21:56:55.085Z","type":"join"}
{"nick":"Raynos","message":"domanic: by communicating between source & output directly using return values","date":"2014-05-15T21:58:07.681Z","type":"message"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2014-05-15T21:58:59.466Z","type":"quit"}
{"nick":"Raynos","message":"btw i did a little \"modular\" demo of mercury stuff ( http://jsfiddle.net/4RUxn/1/ ). wonder whether this kind of \"seperation\" of \"components\" is readable","date":"2014-05-15T21:59:03.099Z","type":"message"}
{"nick":"calvinfo","date":"2014-05-15T22:00:05.034Z","type":"join"}
{"nick":"dybskiy","date":"2014-05-15T22:00:59.557Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2014-05-15T22:01:17.381Z","type":"nick"}
{"nick":"brianloveswords","date":"2014-05-15T22:02:59.773Z","type":"join"}
{"nick":"domanic","message":"Raynos, is there any reason that render is a property of numberInput?","date":"2014-05-15T22:05:04.745Z","type":"message"}
{"nick":"jesusabdullah","message":"aww, nobody/","date":"2014-05-15T22:05:33.060Z","type":"message"}
{"nick":"jesusabdullah","message":"?","date":"2014-05-15T22:05:33.929Z","type":"message"}
{"nick":"jesusabdullah","message":"Nobody going to jsconf?","date":"2014-05-15T22:05:37.440Z","type":"message"}
{"nick":"jesusabdullah","message":";_; I'm gonna have to sleep on benches","date":"2014-05-15T22:05:46.592Z","type":"message"}
{"nick":"domanic","message":"jesusabdullah, it's in florida though right?","date":"2014-05-15T22:06:16.104Z","type":"message"}
{"nick":"Raynos","message":"domanic: the idea is that in `state.js` you `require('number-input-component')` and in `render.js` you `require('number-input-component').Render`","date":"2014-05-15T22:06:43.100Z","type":"message"}
{"nick":"Raynos","message":"jesusabdullah: I am speaking at jsconf","date":"2014-05-15T22:06:55.481Z","type":"message"}
{"nick":"jesusabdullah","message":"domanic: yeah","date":"2014-05-15T22:07:06.731Z","type":"message"}
{"nick":"jesusabdullah","message":"Raynos: need a roommate?","date":"2014-05-15T22:07:10.344Z","type":"message"}
{"nick":"Raynos","message":"jesusabdullah: when in last straw sleep on my room floor","date":"2014-05-15T22:07:11.593Z","type":"message"}
{"nick":"jesusabdullah","message":"ah, a'ight I see","date":"2014-05-15T22:07:20.891Z","type":"message"}
{"nick":"jesusabdullah","message":"Yeah, good to know","date":"2014-05-15T22:07:26.918Z","type":"message"}
{"nick":"Raynos","message":"domanic: although those two functions could be seperate files if wanted","date":"2014-05-15T22:07:29.219Z","type":"message"}
{"nick":"domanic","message":"Raynos, okay I guess that makes sense. I think this example is kinda verbose for just a counter","date":"2014-05-15T22:08:10.098Z","type":"message"}
{"nick":"domanic","message":"surely there is something a little more interesting you could build...","date":"2014-05-15T22:08:34.109Z","type":"message"}
{"nick":"Raynos","message":"domanic: it's purposely over engineered to see how it could \"scale\"","date":"2014-05-15T22:08:36.308Z","type":"message"}
{"nick":"domanic","message":"\"scale\"????","date":"2014-05-15T22:08:46.933Z","type":"message"}
{"nick":"Raynos","message":"somebody asked me how to do this very example","date":"2014-05-15T22:08:48.661Z","type":"message"}
{"nick":"Raynos","message":"domanic: people want to know how you \"scale\" file seperation and \"modularity\"","date":"2014-05-15T22:09:01.802Z","type":"message"}
{"nick":"Raynos","message":"domanic: this example would be way cooler if it had a color picker and kept the rgb in sync with the color picker","date":"2014-05-15T22:09:40.274Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-05-15T22:10:31.161Z","type":"quit"}
{"nick":"domanic","message":"oh right... this is only one file, but you have //file.js to show where the files go.","date":"2014-05-15T22:10:38.174Z","type":"message"}
{"nick":"domanic","message":"Raynos, you should make a jsfiddle with mercury, that is a good simple real world example.","date":"2014-05-15T22:11:35.574Z","type":"message"}
{"nick":"maksimlin","date":"2014-05-15T22:12:47.561Z","type":"join"}
{"nick":"Raynos","message":"blargh. I need a hex -> rgb parser to add a color picker + color picker synchronization","date":"2014-05-15T22:15:34.905Z","type":"message"}
{"nick":"Raynos","message":"domanic: I have been wanting to write a better requirebin for a while","date":"2014-05-15T22:15:42.743Z","type":"message"}
{"nick":"Raynos","message":"I also need to do some work on value-event & form-data-set because they are not generic enough as modules","date":"2014-05-15T22:16:45.853Z","type":"message"}
{"nick":"Raynos","message":"one of the things i really like about mercury is how `{ 'data-click': mercury.event(data.events.foo) }` is just sugar for `{ 'data-click': function (ev) { data.events.foo() } }`. very hackable :)","date":"2014-05-15T22:17:42.972Z","type":"message"}
{"nick":"Raynos","message":"mercury has this strong OCD about \"dom is evil\" and not referencing dom event or dom element objects directly in app code and putting all dom logic in node_modules/*","date":"2014-05-15T22:18:11.448Z","type":"message"}
{"nick":"domanic","message":"Raynos, why is it data-{event} not on-{event}?","date":"2014-05-15T22:19:52.387Z","type":"message"}
{"nick":"quijote","date":"2014-05-15T22:21:05.209Z","type":"join"}
{"nick":"Raynos","message":"domanic: https://github.com/Raynos/mercury/issues/21 we have an open bikeshed about what to name it","date":"2014-05-15T22:21:49.408Z","type":"message"}
{"nick":"Raynos","message":"domanic: I think i want to name it ev-* but on-* is cool too","date":"2014-05-15T22:21:56.919Z","type":"message"}
{"nick":"dybskiy_","date":"2014-05-15T22:22:01.297Z","type":"join"}
{"nick":"Raynos","message":"i guess i should get this back compat breaking shed in quickly :D","date":"2014-05-15T22:22:13.310Z","type":"message"}
{"nick":"Raynos","message":"domanic: on-click might imply i actually set elem.onclick which i dont","date":"2014-05-15T22:22:29.326Z","type":"message"}
{"nick":"dybskiy_","reason":"Client Quit","date":"2014-05-15T22:22:30.372Z","type":"quit"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-05-15T22:22:30.905Z","type":"quit"}
{"nick":"rowbit","message":"substack, pkrumins: Encoders down: 184.106.106.66 (dev-ie7-1)","date":"2014-05-15T22:23:28.511Z","type":"message"}
{"nick":"domanic","message":"I think the \"-\" suggests it's not exactly the same as a dom event","date":"2014-05-15T22:23:49.817Z","type":"message"}
{"nick":"domanic","message":"but it might be analogous to one.","date":"2014-05-15T22:24:07.036Z","type":"message"}
{"nick":"niftylettuce_","reason":"Quit: Connection closed for inactivity","date":"2014-05-15T22:24:17.121Z","type":"quit"}
{"nick":"domanic","message":"data is really not like an event","date":"2014-05-15T22:24:26.441Z","type":"message"}
{"nick":"domanic","message":"ev would be better","date":"2014-05-15T22:24:32.588Z","type":"message"}
{"nick":"domanic","message":"but when you say \"on\" it's like \"when a click happens\"","date":"2014-05-15T22:24:52.584Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2014-05-15T22:25:01.989Z","type":"nick"}
{"nick":"dybskiy","reason":"Ping timeout: 240 seconds","date":"2014-05-15T22:25:05.815Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 245 seconds","date":"2014-05-15T22:25:23.047Z","type":"quit"}
{"nick":"Raynos","message":"domanic: data- is just legacy shit atm, i want either ev- or on- just havnt painted the shed the new color yet","date":"2014-05-15T22:30:26.833Z","type":"message"}
{"nick":"Raynos","message":"also ev & on are both two less characters ! #win","date":"2014-05-15T22:30:40.849Z","type":"message"}
{"nick":"defunctzombie","message":"Raynos: domanic if you don't make HTML look like HTML then a designer will have an impossible time updating the UI","date":"2014-05-15T22:30:52.206Z","type":"message"}
{"nick":"pfraze_","reason":"Ping timeout: 258 seconds","date":"2014-05-15T22:31:10.162Z","type":"quit"}
{"nick":"Raynos","message":"defunctzombie: designers are intelligent people who we can teach things too. orthogonal problem","date":"2014-05-15T22:31:24.919Z","type":"message"}
{"nick":"defunctzombie","message":"you make it harder for no reason IMO","date":"2014-05-15T22:31:39.809Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: also having something like jsx if you want","date":"2014-05-15T22:31:57.086Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: it's a tradeoff, the advantage is the ability to use higher order functions in your templates and to use all the javascript module system technology for templates","date":"2014-05-15T22:32:22.775Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: the disadvantage is \"designer go fuck yourself\"","date":"2014-05-15T22:32:35.844Z","type":"message"}
{"nick":"jxson","date":"2014-05-15T22:33:07.027Z","type":"join"}
{"nick":"Raynos","message":"defunctzombie: there is a third middle ground. have designers do static html + css and have a tool that converts static html to h() stuff. this allows designers to use the tools they want","date":"2014-05-15T22:33:30.630Z","type":"message"}
{"nick":"naneau__","date":"2014-05-15T22:33:35.750Z","type":"join"}
{"nick":"defunctzombie","message":"Raynos: I don't understand \"javascript module system technology for templates\"","date":"2014-05-15T22:33:39.850Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: we can even set up a complex bidirectional compiler form static html + css <-> mercury templates","date":"2014-05-15T22:33:47.618Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: I want require semantics for templates, just like we added require semantics to css & less","date":"2014-05-15T22:34:07.608Z","type":"message"}
{"nick":"defunctzombie","message":"what is \"require semantics\" ?","date":"2014-05-15T22:35:07.284Z","type":"message"}
{"nick":"domanic","message":"defunctzombie, not all problems are the same 90% of things are just websites, you hire a designer to make them look good.","date":"2014-05-15T22:35:16.148Z","type":"message"}
{"nick":"domanic","message":"mercury isn't for websites. it's for apps. you need to put way more work into it because a small improvement in feel may make you one better than your competitors.","date":"2014-05-15T22:35:58.209Z","type":"message"}
{"nick":"naneau","reason":"Ping timeout: 276 seconds","date":"2014-05-15T22:36:03.006Z","type":"quit"}
{"nick":"domanic","message":"defunctzombie, anyway, the way it's set out, it's just another syntax for html","date":"2014-05-15T22:36:35.640Z","type":"message"}
{"nick":"domanic","message":"not so many new concepts","date":"2014-05-15T22:36:44.874Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: as in i can share templates between multiple applications using node_modules and i can put templates for a non trivial \"ui component\" in node_modules","date":"2014-05-15T22:36:50.296Z","type":"message"}
{"nick":"Raynos","message":"tbh I see h() as a jade without semantic whitespace","date":"2014-05-15T22:37:13.678Z","type":"message"}
{"nick":"defunctzombie","message":"I build apps and would not like using what I see so far :)","date":"2014-05-15T22:37:14.554Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: your choice of template dsl is bikesheddable btw","date":"2014-05-15T22:37:37.858Z","type":"message"}
{"nick":"defunctzombie","message":"yes","date":"2014-05-15T22:37:45.376Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: i think there is a compiler for handlebars that can compile into function (obj) { return h(...) }","date":"2014-05-15T22:37:51.969Z","type":"message"}
{"nick":"Raynos","message":"with a bit of fork + hack hack hack","date":"2014-05-15T22:37:57.560Z","type":"message"}
{"nick":"defunctzombie","message":"but that doesn't mean it doesn't influence how I build","date":"2014-05-15T22:37:58.064Z","type":"message"}
{"nick":"calvinmetcalf","reason":"Quit: Connection closed for inactivity","date":"2014-05-15T22:38:15.050Z","type":"quit"}
{"nick":"Raynos","message":"I meant mercury will work if you write a handlebars -> function (obj) { return h(...) } compiler","date":"2014-05-15T22:38:16.986Z","type":"message"}
{"nick":"Raynos","message":"however mercury doesn't allow `<div data-bind='text: foo' />` style templates, only `<div>{{foo}}</div>` style templates","date":"2014-05-15T22:39:18.736Z","type":"message"}
{"nick":"Raynos","message":"i.e. mercury templates are not DOM based, they are things you compile into functions or functions you write by hand","date":"2014-05-15T22:39:34.538Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: I actually really like the idea of writing a handlebars -> h() compiler. it makes this bikeshed go away.","date":"2014-05-15T22:40:09.244Z","type":"message"}
{"nick":"defunctzombie","message":"sure","date":"2014-05-15T22:40:36.852Z","type":"message"}
{"nick":"Raynos","message":"obvouisly the handlebars language is not turing complete so its not as expressive as writing functions be hand, this is either a feature or a bug depending on your school of thought","date":"2014-05-15T22:40:38.155Z","type":"message"}
{"nick":"defunctzombie","message":"feature","date":"2014-05-15T22:42:27.801Z","type":"message"}
{"nick":"Raynos","message":"mercury has no opinion about this other then the examples default to my personal opinion until i write a little \"opinion toggler\" on the examples viewer","date":"2014-05-15T22:45:07.201Z","type":"message"}
{"nick":"domanic","message":"writing it in js is way more obvious, and you can just read the js and understand how it works. a compiler (and parser) is way more indirect.","date":"2014-05-15T22:52:44.911Z","type":"message"}
{"nick":"defunctzombie","message":"I cannot read the JS and have a good idea of what the output will be in html","date":"2014-05-15T22:53:32.048Z","type":"message"}
{"nick":"defunctzombie","message":"it is more obfuscated imo","date":"2014-05-15T22:53:52.469Z","type":"message"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T22:54:09.468Z","type":"quit"}
{"nick":"tmcw","reason":"Remote host closed the connection","date":"2014-05-15T22:55:36.543Z","type":"quit"}
{"nick":"tmcw","date":"2014-05-15T22:56:11.376Z","type":"join"}
{"nick":"naneau__","reason":"Quit: Quit.","date":"2014-05-15T22:56:14.208Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2014-05-15T22:57:43.165Z","type":"nick"}
{"nick":"isaacs","new_nick":"DomenicDecinola","date":"2014-05-15T22:58:58.356Z","type":"nick"}
{"nick":"ryan_ramage","reason":"Quit: ryan_ramage","date":"2014-05-15T22:59:02.522Z","type":"quit"}
{"nick":"Raynos","message":"i dont care, both are valid.","date":"2014-05-15T23:00:19.460Z","type":"message"}
{"nick":"Raynos","message":"btw I created #virtualdom as a mercury + virtual-dom conversation room on freenode","date":"2014-05-15T23:00:32.528Z","type":"message"}
{"nick":"tmcw","reason":"Ping timeout: 265 seconds","date":"2014-05-15T23:00:44.370Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 35]","date":"2014-05-15T23:02:06.589Z","type":"message"}
{"nick":"DomenicDecinola","new_nick":"DemonicDenicola","date":"2014-05-15T23:03:42.376Z","type":"nick"}
{"nick":"pfraze","date":"2014-05-15T23:08:10.295Z","type":"join"}
{"nick":"ednapiranha","reason":"Quit: Leaving...","date":"2014-05-15T23:10:52.379Z","type":"quit"}
{"nick":"Raynos","message":"defunctzombie_zz: https://github.com/petehunt/reactbars","date":"2014-05-15T23:11:11.356Z","type":"message"}
{"nick":"Raynos","message":"so there already is a thing that compiles to React.DOM, compiling to mercury should be a trivial fix","date":"2014-05-15T23:11:29.807Z","type":"message"}
{"nick":"DemonicDenicola","new_nick":"isaacs","date":"2014-05-15T23:11:31.981Z","type":"nick"}
{"nick":"mesch","date":"2014-05-15T23:14:02.384Z","type":"join"}
{"nick":"rxgx","date":"2014-05-15T23:17:57.397Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T23:22:06.134Z","type":"join"}
{"nick":"quijote_","date":"2014-05-15T23:23:46.793Z","type":"join"}
{"nick":"calvinfo","date":"2014-05-15T23:24:41.485Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 276 seconds","date":"2014-05-15T23:26:45.036Z","type":"quit"}
{"nick":"quijote_","reason":"Ping timeout: 240 seconds","date":"2014-05-15T23:27:54.643Z","type":"quit"}
{"nick":"calvinfo","reason":"Ping timeout: 258 seconds","date":"2014-05-15T23:29:03.224Z","type":"quit"}
{"nick":"kumavis","date":"2014-05-15T23:29:04.639Z","type":"join"}
{"nick":"kumavis","reason":"Ping timeout: 240 seconds","date":"2014-05-15T23:33:29.809Z","type":"quit"}
{"nick":"Domenic","message":"haha that repo is great","date":"2014-05-15T23:35:23.276Z","type":"message"}
{"nick":"Domenic","message":"i could have guessed that reducers thing","date":"2014-05-15T23:38:25.631Z","type":"message"}
{"nick":"Raynos","message":"Domenic: what's the difference between closed & finished in streams2 :D","date":"2014-05-15T23:44:35.015Z","type":"message"}
{"nick":"Raynos","message":"actually your probably a member of the { 5 people that understand streams }","date":"2014-05-15T23:44:48.765Z","type":"message"}
{"nick":"domanic","reason":"Ping timeout: 240 seconds","date":"2014-05-15T23:45:29.807Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T23:45:49.205Z","type":"join"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2014-05-15T23:48:05.169Z","type":"quit"}
{"nick":"warbrett","reason":"Remote host closed the connection","date":"2014-05-15T23:48:11.289Z","type":"quit"}
{"nick":"warbrett","date":"2014-05-15T23:48:45.214Z","type":"join"}
{"nick":"kriskowal","message":"Raynos: assuming that’s not retrorical, and assuming my instincts are well-honed, closed would mean no longer streaming, finished means closed because the source was exhausted. (Domenic plz check)","date":"2014-05-15T23:49:23.445Z","type":"message"}
{"nick":"Raynos","message":"kriskowal: A writable stream is finished once it has flushed its buffer to the destination","date":"2014-05-15T23:52:06.861Z","type":"message"}
{"nick":"Raynos","message":"A writable stream is closed once it has deallocated any resources (like fd's) for said destination","date":"2014-05-15T23:52:20.564Z","type":"message"}
{"nick":"warbrett","reason":"Ping timeout: 245 seconds","date":"2014-05-15T23:52:53.066Z","type":"quit"}
{"nick":"thlorenz","date":"2014-05-15T23:59:50.728Z","type":"join"}
