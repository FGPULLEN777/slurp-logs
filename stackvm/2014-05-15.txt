{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-05-15T00:00:00.866Z","type":"quit"}
{"nick":"ircretary","date":"2014-05-15T00:00:09.379Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 23]","date":"2014-05-15T00:07:44.483Z","type":"message"}
{"nick":"ednapiranha","reason":"Quit: Leaving...","date":"2014-05-15T00:07:59.278Z","type":"quit"}
{"nick":"thlorenz","date":"2014-05-15T00:12:27.514Z","type":"join"}
{"nick":"mikolalysenko","message":"Raynos: how does virtual-dom do O(1) diffing?  does it just track a version or something?","date":"2014-05-15T00:14:55.802Z","type":"message"}
{"nick":"naneau","date":"2014-05-15T00:19:15.395Z","type":"join"}
{"nick":"jxson","reason":"Ping timeout: 258 seconds","date":"2014-05-15T00:21:00.274Z","type":"quit"}
{"nick":"quijote","date":"2014-05-15T00:23:23.572Z","type":"join"}
{"nick":"Raynos","message":"mikolalysenko: it doesn't do O(1) diffing, I lied","date":"2014-05-15T00:24:30.125Z","type":"message"}
{"nick":"mikolalysenko","message":"Raynos: ah, I was confused about how that would be possible","date":"2014-05-15T00:25:40.066Z","type":"message"}
{"nick":"Raynos","message":"mikolalysenko: http://elm-lang.org/blog/announce/0.12.1.elm#arrays","date":"2014-05-15T00:26:09.585Z","type":"message"}
{"nick":"mikolalysenko","message":"I know of a way to do O(1) persistence, which I suppose you could use for diffing","date":"2014-05-15T00:26:17.552Z","type":"message"}
{"nick":"mikolalysenko","message":"I have seen this construction before","date":"2014-05-15T00:26:46.265Z","type":"message"}
{"nick":"mikolalysenko","message":"Raynos: have you seen this?  http://www.cs.cmu.edu/~sleator/papers/another-persistence.pdf","date":"2014-05-15T00:27:30.355Z","type":"message"}
{"nick":"Raynos","message":"mikolalysenko: I was implying that if only one node in a vtree has changed and you use thunk caching strategy and your tree is balanced","date":"2014-05-15T00:27:32.574Z","type":"message"}
{"nick":"Raynos","message":"then diff time is O(log n) where n is how many nested dom elements you have","date":"2014-05-15T00:27:55.233Z","type":"message"}
{"nick":"Raynos","message":"i claim that for any non retarded dom tree its sensibly upper bounded by 20","date":"2014-05-15T00:28:05.013Z","type":"message"}
{"nick":"Raynos","message":"and clearly O(log 20) ~== O(1) :D","date":"2014-05-15T00:28:38.724Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 276 seconds","date":"2014-05-15T00:28:45.410Z","type":"quit"}
{"nick":"mikolalysenko","message":"I wonder if you could do it better though","date":"2014-05-15T00:28:48.212Z","type":"message"}
{"nick":"Raynos","message":"maybe.","date":"2014-05-15T00:28:57.176Z","type":"message"}
{"nick":"mikolalysenko","message":"maybe using some kind of ladder decomposition trick combined with hashing","date":"2014-05-15T00:28:59.060Z","type":"message"}
{"nick":"Raynos","message":"right now we do O(1) diff + caching to skip any unchanged subtrees","date":"2014-05-15T00:29:07.492Z","type":"message"}
{"nick":"Raynos","message":"which means if a single node changes you have to diff the node & all its recursive parents","date":"2014-05-15T00:29:17.554Z","type":"message"}
{"nick":"Raynos","message":"mikolalysenko: if your interested we would love collaboration on https://github.com/Matt-Esch/virtual-dom/ :)","date":"2014-05-15T00:29:38.006Z","type":"message"}
{"nick":"mikolalysenko","message":"don't you still have to scan the tree to check for changes?","date":"2014-05-15T00:29:38.117Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm..  I got a lot of stuff on my plate already","date":"2014-05-15T00:29:54.076Z","type":"message"}
{"nick":"Raynos","message":"oh sure :)","date":"2014-05-15T00:30:00.571Z","type":"message"}
{"nick":"Raynos","message":"mikolalysenko: we have a notion of a Thunk which is a tuple of (data, tree)","date":"2014-05-15T00:30:21.748Z","type":"message"}
{"nick":"mikolalysenko","message":"it is maybe a long shot, but you could take a look at this:","date":"2014-05-15T00:30:26.310Z","type":"message"}
{"nick":"mikolalysenko","message":"https://github.com/mikolalysenko/level-ancestor","date":"2014-05-15T00:30:27.157Z","type":"message"}
{"nick":"Raynos","message":"i.e. the model data that generated the vtree and the vtree","date":"2014-05-15T00:30:35.136Z","type":"message"}
{"nick":"mikolalysenko","message":"the idea there I think should work for diffing trees too","date":"2014-05-15T00:30:38.467Z","type":"message"}
{"nick":"Raynos","message":"we then do O(1) === check on data to skip evaluating children","date":"2014-05-15T00:30:44.928Z","type":"message"}
{"nick":"mikolalysenko","message":"and it would be in O(1), for real","date":"2014-05-15T00:30:45.365Z","type":"message"}
{"nick":"Raynos","message":"this is only posisble because the model and the vtree are both immutable","date":"2014-05-15T00:30:55.599Z","type":"message"}
{"nick":"calvinfo1","reason":"Quit: Leaving.","date":"2014-05-15T00:31:02.583Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-05-15T00:31:23.753Z","type":"quit"}
{"nick":"thlorenz","date":"2014-05-15T00:31:57.258Z","type":"join"}
{"nick":"mikolalysenko","message":"also this gizmo:  https://github.com/mikolalysenko/least-common-ancestor","date":"2014-05-15T00:32:46.713Z","type":"message"}
{"nick":"mikolalysenko","message":"you can technically save a log factor in space on both of them, but it is really complicated","date":"2014-05-15T00:33:03.421Z","type":"message"}
{"nick":"Raynos","message":"hmm","date":"2014-05-15T00:35:25.150Z","type":"message"}
{"nick":"Raynos","message":"I would love to outgun react with some insane algorithms :)","date":"2014-05-15T00:36:05.653Z","type":"message"}
{"nick":"Raynos","message":"we already out perform them by a factor of 2/3","date":"2014-05-15T00:36:13.900Z","type":"message"}
{"nick":"thlorenz","reason":"Ping timeout: 240 seconds","date":"2014-05-15T00:36:18.304Z","type":"quit"}
{"nick":"mikolalysenko","message":"well, I think I still would need to understand your problem a bit more thoroughly first","date":"2014-05-15T00:36:44.666Z","type":"message"}
{"nick":"Raynos","message":"we need to document things better :)","date":"2014-05-15T00:37:00.892Z","type":"message"}
{"nick":"mikolalysenko","message":"strictly speaking, what are your inputs, and what do you mean by diff here?","date":"2014-05-15T00:37:13.105Z","type":"message"}
{"nick":"Raynos","message":"two virtual trees A & B, diff produces a list of patch operations to that you could aply to A to produce B","date":"2014-05-15T00:37:51.001Z","type":"message"}
{"nick":"mikolalysenko","message":"well, in general don't you have to traverse a and b to get that diff?","date":"2014-05-15T00:38:45.471Z","type":"message"}
{"nick":"mikolalysenko","message":"or can you do something like hashing for quick identity testing of subtrees?","date":"2014-05-15T00:39:04.251Z","type":"message"}
{"nick":"mikolalysenko","message":"ie a and b could be linked lists of up to n nodes","date":"2014-05-15T00:39:36.607Z","type":"message"}
{"nick":"mikolalysenko","message":"that is you have something where the hash code of a tree is detemined as an aggregate hash function of all its children","date":"2014-05-15T00:42:00.952Z","type":"message"}
{"nick":"maksimlin","reason":"Ping timeout: 245 seconds","date":"2014-05-15T00:42:03.127Z","type":"quit"}
{"nick":"mikolalysenko","message":"so tree a = tree b iff hash(a) = hash(b)","date":"2014-05-15T00:42:11.677Z","type":"message"}
{"nick":"mikolalysenko","message":"where hash(a) =  f(a, hash(children(a)[0]), hash(children(a)[1]), ... )","date":"2014-05-15T00:42:42.930Z","type":"message"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-05-15T00:42:52.554Z","type":"quit"}
{"nick":"mikolalysenko","message":"the trick though is calculating/maintaining that hash under updates","date":"2014-05-15T00:43:01.643Z","type":"message"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2014-05-15T00:44:48.827Z","type":"quit"}
{"nick":"kenperkins_","reason":"Remote host closed the connection","date":"2014-05-15T00:45:12.938Z","type":"quit"}
{"nick":"mikolalysenko","message":"or maybe you are asking about minimizing the number of dom updates?","date":"2014-05-15T00:45:37.651Z","type":"message"}
{"nick":"kenperkins","date":"2014-05-15T00:46:05.199Z","type":"join"}
{"nick":"kenperkins_","date":"2014-05-15T00:50:49.643Z","type":"join"}
{"nick":"Raynos","message":"mikolalysenko: we have something like hashing for quick identity testing of subtrees","date":"2014-05-15T00:52:15.875Z","type":"message"}
{"nick":"Raynos","message":"mikolalysenko: tbh i dont know what im asking :D","date":"2014-05-15T00:52:43.282Z","type":"message"}
{"nick":"kenperkins","reason":"Ping timeout: 245 seconds","date":"2014-05-15T00:54:08.159Z","type":"quit"}
{"nick":"cpup_","reason":"Ping timeout: 240 seconds","date":"2014-05-15T00:55:06.291Z","type":"quit"}
{"nick":"brianloveswords","date":"2014-05-15T00:55:18.159Z","type":"join"}
{"nick":"calvinfo","date":"2014-05-15T00:56:53.630Z","type":"join"}
{"nick":"maksimlin","date":"2014-05-15T00:56:57.396Z","type":"join"}
{"nick":"ednapiranha","date":"2014-05-15T01:00:18.226Z","type":"join"}
{"nick":"ednapiranha","reason":"Remote host closed the connection","date":"2014-05-15T01:00:28.901Z","type":"quit"}
{"nick":"maksimlin","message":"mikolalysenko: you don't need to with git's trees, since in a tree if the chrildren trees are unchanged, you dont need to traverse the children trees - this sound like what you are describing you do Raynos ?","date":"2014-05-15T01:04:17.542Z","type":"message"}
{"nick":"Raynos","message":"something like that","date":"2014-05-15T01:04:58.946Z","type":"message"}
{"nick":"maksimlin","message":"the more I work on git, the more I'm impressed with its platonic ideal impl of objs/trees/hashes","date":"2014-05-15T01:07:19.850Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 14]","date":"2014-05-15T01:07:44.578Z","type":"message"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-05-15T01:10:55.539Z","type":"quit"}
{"nick":"mikolalysenko","message":"maksimlin: that's the same as hash based identity checking","date":"2014-05-15T01:13:34.795Z","type":"message"}
{"nick":"cpup_","date":"2014-05-15T01:14:03.721Z","type":"join"}
{"nick":"mikolalysenko","message":"but in git computing a diff is still O(n)","date":"2014-05-15T01:14:13.112Z","type":"message"}
{"nick":"maksimlin","message":"mikolalysenko: where n is num of total nodes or num of nodes that have changed?","date":"2014-05-15T01:17:52.898Z","type":"message"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T01:18:04.375Z","type":"quit"}
{"nick":"maksimlin","message":"I guess the worst case is the changed nodes are the leaves at the very \"bottom\" of all the trees","date":"2014-05-15T01:18:43.857Z","type":"message"}
{"nick":"pfraze_","date":"2014-05-15T01:20:23.045Z","type":"join"}
{"nick":"mikolalysenko","message":"n=total number of nodes","date":"2014-05-15T01:22:12.996Z","type":"message"}
{"nick":"mikolalysenko","message":"all git operations are basically O(n), but they do some stuff to optimize around this","date":"2014-05-15T01:22:45.565Z","type":"message"}
{"nick":"rowbit","message":"substack, pkrumins: Encoders down: 162.242.164.84 (dev-ie11-1)","date":"2014-05-15T01:23:26.007Z","type":"message"}
{"nick":"pfraze","reason":"Ping timeout: 240 seconds","date":"2014-05-15T01:23:34.713Z","type":"quit"}
{"nick":"mikolalysenko","message":"though generally number of nodes is not a bottleneck for git, since the slow operations are things like diffing a pair of files, which git generally avoids doing","date":"2014-05-15T01:23:48.388Z","type":"message"}
{"nick":"thealphanerd","date":"2014-05-15T01:24:03.168Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T01:24:03.828Z","type":"join"}
{"nick":"maksimlin","message":"mikolalysenko: how do you mean? diff'f files is probably one of the most common git ops ?","date":"2014-05-15T01:24:43.367Z","type":"message"}
{"nick":"pfraze_","reason":"Ping timeout: 245 seconds","date":"2014-05-15T01:24:58.083Z","type":"quit"}
{"nick":"maksimlin","message":"git show <commit> needs to do diff's for example","date":"2014-05-15T01:25:16.797Z","type":"message"}
{"nick":"mikolalysenko","message":"once you diff a file, git just stores the patch data","date":"2014-05-15T01:25:40.632Z","type":"message"}
{"nick":"mikolalysenko","message":"so it doesn't recalculate it I think","date":"2014-05-15T01:25:50.115Z","type":"message"}
{"nick":"maksimlin","message":"what??","date":"2014-05-15T01:25:52.795Z","type":"message"}
{"nick":"maksimlin","message":"no I dont think so","date":"2014-05-15T01:26:00.857Z","type":"message"}
{"nick":"mikolalysenko","message":"I am probably not as familiar with git internals as you, so maybe I am wrong","date":"2014-05-15T01:26:43.512Z","type":"message"}
{"nick":"mikolalysenko","message":"but I was under the impression that commits just store patches to the previous commit","date":"2014-05-15T01:27:02.574Z","type":"message"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2014-05-15T01:27:10.844Z","type":"quit"}
{"nick":"mikolalysenko","message":"instead of a separate copy of the whole repo","date":"2014-05-15T01:27:14.021Z","type":"message"}
{"nick":"thealphanerd","message":"hey substack I was lloking at your project wreq… did you end up ditching that to implement browserify?","date":"2014-05-15T01:27:33.955Z","type":"message"}
{"nick":"maksimlin","message":"mikolalysenko: hey thats fair enough - I;ve been working on js git impl lib for months now so getting maybe too familiar with git internals :-)","date":"2014-05-15T01:27:34.984Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-15T01:28:14.648Z","type":"quit"}
{"nick":"maksimlin","message":"mikolalysenko: yes most ppl seem to think that but it doesnt, evey commit is a snapshot of the whole repo","date":"2014-05-15T01:28:16.006Z","type":"message"}
{"nick":"maksimlin","message":"of course it does optimise the storage \"behind the scenes\" by  doing binary deltas, but thats not part of the git \"DOM\" as it were","date":"2014-05-15T01:29:29.003Z","type":"message"}
{"nick":"substack","message":"thealphanerd: wreq was a proof of concept to show that you can implement commonjs requires asynchronously","date":"2014-05-15T01:29:39.728Z","type":"message"}
{"nick":"thealphanerd","message":"substack: we are trying at famo.us to best figure out or async dependency loading","date":"2014-05-15T01:30:05.717Z","type":"message"}
{"nick":"thealphanerd","message":"and require is proving to be “less than elegant\"","date":"2014-05-15T01:30:17.799Z","type":"message"}
{"nick":"substack","message":"why does it need to be async?","date":"2014-05-15T01:30:34.711Z","type":"message"}
{"nick":"thealphanerd","message":"perhaps it doesn't","date":"2014-05-15T01:30:47.131Z","type":"message"}
{"nick":"substack","message":"wouldn't async loading be really horrible for mobile where latency is the biggest issue?","date":"2014-05-15T01:30:49.239Z","type":"message"}
{"nick":"thealphanerd","message":"well for production we have been rolling an almond","date":"2014-05-15T01:31:03.102Z","type":"message"}
{"nick":"thealphanerd","message":"so no lazy loading","date":"2014-05-15T01:31:10.901Z","type":"message"}
{"nick":"Raynos","message":"why does it need to be async ?","date":"2014-05-15T01:31:13.743Z","type":"message"}
{"nick":"thealphanerd","message":"I guess it doesn't","date":"2014-05-15T01:31:21.887Z","type":"message"}
{"nick":"Raynos","message":"thats not the correct answer :P","date":"2014-05-15T01:31:31.238Z","type":"message"}
{"nick":"Raynos","message":"what use case are you trying to address with async require  / async loading","date":"2014-05-15T01:31:40.043Z","type":"message"}
{"nick":"thealphanerd","message":"Raynos: I’m unfortuantely not as intimate with the frame work as I should be","date":"2014-05-15T01:31:57.403Z","type":"message"}
{"nick":"Raynos","message":"if its \"no built step\" I recommend a \"static file server\" that just does the browserify operation on js files","date":"2014-05-15T01:31:59.837Z","type":"message"}
{"nick":"substack","message":"thealphanerd: you can use browserify to build a umd build that will be consumable by both commonjs and AMD consumers","date":"2014-05-15T01:32:25.426Z","type":"message"}
{"nick":"substack","message":"using --standalone","date":"2014-05-15T01:32:28.818Z","type":"message"}
{"nick":"thealphanerd","message":"The big issue we are having right now, is how to make it easy for all users to work, and not impose a particular module loading paradigm","date":"2014-05-15T01:32:29.147Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: you cant","date":"2014-05-15T01:32:48.596Z","type":"message"}
{"nick":"substack","message":"--standalone also exports to a window global if it can't find amd or commonjs","date":"2014-05-15T01:32:50.574Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: you can create an N KB bundle that is all the code that works for all module systems","date":"2014-05-15T01:33:02.844Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: and then expose clean integration for the blessed module system","date":"2014-05-15T01:33:13.856Z","type":"message"}
{"nick":"Raynos","message":"my mercury has a dist for all module systems ( https://github.com/Raynos/mercury/tree/master/dist ) and has clean / blessed integration for commonJS","date":"2014-05-15T01:34:03.852Z","type":"message"}
{"nick":"mikolalysenko","message":"thealphanerd: how would dependencies work if you didn't pick a module system?","date":"2014-05-15T01:34:20.069Z","type":"message"}
{"nick":"thealphanerd","message":"can you elaborate on the term ‘blessed’?","date":"2014-05-15T01:34:24.402Z","type":"message"}
{"nick":"feross_","reason":"Quit: feross_","date":"2014-05-15T01:35:06.395Z","type":"quit"}
{"nick":"jhiesey","reason":"Quit: jhiesey","date":"2014-05-15T01:35:14.657Z","type":"quit"}
{"nick":"Raynos","message":"thealphanerd: If you want to `require('vtree/is-vnode')` and only depend on that you need commonJS. If you want it with AMD / globals its \"depend on all of vtree\" and use `vtree.isVnode`","date":"2014-05-15T01:35:18.745Z","type":"message"}
{"nick":"mikolalysenko","message":"I think the best you can do without picking a module system is something like bower","date":"2014-05-15T01:35:59.059Z","type":"message"}
{"nick":"Raynos","message":"whatever your choice of blessed is btw, whether that's AMD / ES6 / commonJS. You can load the entire framework in all module sytems but you can only load a subset of the framework in the blessed module system","date":"2014-05-15T01:36:12.650Z","type":"message"}
{"nick":"thealphanerd","message":"mikolalysenko: I think that we do need to pick a module loading system for examples… but we want to figure out how to make the framework itself agnostic","date":"2014-05-15T01:36:12.981Z","type":"message"}
{"nick":"mikolalysenko","message":"which is to say you only do 1 level deep of dependencies in a project","date":"2014-05-15T01:36:14.121Z","type":"message"}
{"nick":"mikolalysenko","message":"thealphanerd: then what Raynos/substack said is the right way to do it","date":"2014-05-15T01:36:37.080Z","type":"message"}
{"nick":"thealphanerd","message":"it sounds likea good appraoch","date":"2014-05-15T01:36:45.671Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: if the framework itself is internally commonJS then you can use `browserify --standalone` quite effectively. For example ( https://github.com/Raynos/mercury/blob/master/package.json#L69 )","date":"2014-05-15T01:36:56.104Z","type":"message"}
{"nick":"mikolalysenko","message":"anyway, I actually have to go right now","date":"2014-05-15T01:36:58.488Z","type":"message"}
{"nick":"thealphanerd","message":"I am going to send this scroll back to the cto and use it as a starting point","date":"2014-05-15T01:37:02.511Z","type":"message"}
{"nick":"substack","message":"thealphanerd: if you want agnostic, window globals are the common denominator","date":"2014-05-15T01:37:04.375Z","type":"message"}
{"nick":"substack","message":"but that's just for showing the examples","date":"2014-05-15T01:37:43.082Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: btw if you have some tool like https://github.com/umdjs/umd to generate a single file that supports all module systems then your baseline is support everything","date":"2014-05-15T01:37:45.923Z","type":"message"}
{"nick":"thealphanerd","message":"thank you substack / Raynos  / mikolalysenko for the advice","date":"2014-05-15T01:37:51.409Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: there is another option btw","date":"2014-05-15T01:38:20.179Z","type":"message"}
{"nick":"thealphanerd","message":"oh reary","date":"2014-05-15T01:38:26.116Z","type":"message"}
{"nick":"Raynos","message":"you can use ES6 for everything","date":"2014-05-15T01:38:29.442Z","type":"message"}
{"nick":"tilgovi","date":"2014-05-15T01:38:34.084Z","type":"join"}
{"nick":"Raynos","message":"and tell your users to use their \"ES6 -> X\" compiler of choice, where X is AMD or commonJS or bla","date":"2014-05-15T01:38:44.162Z","type":"message"}
{"nick":"thealphanerd","message":"going es6 is not the worst idea at all","date":"2014-05-15T01:38:59.333Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: but your going to pay the transpiler burden","date":"2014-05-15T01:39:13.179Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: really i recommend picking a module system for famo.us itself, that is useful internally and just blessing that. Bless the tool that makes the framework authors life sane.","date":"2014-05-15T01:39:45.393Z","type":"message"}
{"nick":"thealphanerd","message":"ahhhhh… because harmony generators are transpiled at run time?","date":"2014-05-15T01:39:59.889Z","type":"message"}
{"nick":"thealphanerd","action":"is not super familliar with es6","date":"2014-05-15T01:40:00.006Z","type":"action"}
{"nick":"Raynos","message":"I'm personally biased where I think sane === browserify+npm","date":"2014-05-15T01:40:12.215Z","type":"message"}
{"nick":"thealphanerd","message":"so our CTO has three major requiremnts","date":"2014-05-15T01:40:56.803Z","type":"message"}
{"nick":"thealphanerd","message":"1.) Boilerplate needs to be minimal","date":"2014-05-15T01:41:01.985Z","type":"message"}
{"nick":"thealphanerd","message":"2.) Scripts should be testable without any build step or source maps","date":"2014-05-15T01:41:02.105Z","type":"message"}
{"nick":"thealphanerd","message":"3.) Should be relatively namespaced","date":"2014-05-15T01:41:02.935Z","type":"message"}
{"nick":"thlorenz","date":"2014-05-15T01:41:12.262Z","type":"join"}
{"nick":"calvinfo","date":"2014-05-15T01:43:27.586Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 252 seconds","date":"2014-05-15T01:43:41.295Z","type":"quit"}
{"nick":"thealphanerd","message":"our current pattern can be converted from AMD to common painlessly, just a matter of killing the anonymous define wrapper and making all the references relative… although that makes things a bit nasty for testing modules individually","date":"2014-05-15T01:45:28.732Z","type":"message"}
{"nick":"thealphanerd","message":"although browserify + testling looks like a great way to run tests","date":"2014-05-15T01:46:24.550Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: what do you mean by relatively namespaced ?","date":"2014-05-15T01:47:12.152Z","type":"message"}
{"nick":"Raynos","message":"you mean `require('./local-file')` ?","date":"2014-05-15T01:47:19.068Z","type":"message"}
{"nick":"thealphanerd","message":"modules reference each other via require(‘famous/module/something')","date":"2014-05-15T01:47:53.786Z","type":"message"}
{"nick":"substack","message":"why is #2 a requirement?","date":"2014-05-15T01:48:01.135Z","type":"message"}
{"nick":"thealphanerd","message":"substack: I have not had a chance to have an extended discussion about that","date":"2014-05-15T01:48:23.737Z","type":"message"}
{"nick":"thealphanerd","message":"my assumption is to make it easy for users to work with the framework without requiring the installation of a toolchain","date":"2014-05-15T01:49:02.646Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: so npm allows `require('famous/foo/bla')` or `require('famous-foo/bla')`","date":"2014-05-15T01:49:14.060Z","type":"message"}
{"nick":"substack","message":"thealphanerd: that is different from what #2 says","date":"2014-05-15T01:49:21.688Z","type":"message"}
{"nick":"thealphanerd","message":"we have found a number of developers having trouble getting the node stack up and running","date":"2014-05-15T01:49:23.864Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: what do you mean by scripts are testable without a build step ?","date":"2014-05-15T01:49:28.721Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: examples or famous unit tests ?","date":"2014-05-15T01:49:41.744Z","type":"message"}
{"nick":"thealphanerd","message":"I’m not sure if he meant “testing” as in unit tests… or testing as in viewing results","date":"2014-05-15T01:49:45.191Z","type":"message"}
{"nick":"thealphanerd","message":"I am assuming the latter, as we currently don’t have unit tests :S","date":"2014-05-15T01:49:54.297Z","type":"message"}
{"nick":"Raynos","message":"like no build step for people working on the famous framework internals","date":"2014-05-15T01:50:04.055Z","type":"message"}
{"nick":"thealphanerd","message":"which I am trying to get off the ground right now","date":"2014-05-15T01:50:08.683Z","type":"message"}
{"nick":"Raynos","message":"or no build step for people using the famous framework","date":"2014-05-15T01:50:10.457Z","type":"message"}
{"nick":"thealphanerd","message":"no build step for people building apps with famous","date":"2014-05-15T01:50:18.340Z","type":"message"}
{"nick":"Raynos","message":"thats easily possible","date":"2014-05-15T01:50:25.523Z","type":"message"}
{"nick":"Raynos","message":"the module system you use for source code & tests","date":"2014-05-15T01:50:34.467Z","type":"message"}
{"nick":"Raynos","message":"is not the same module system needed for examples","date":"2014-05-15T01:50:39.289Z","type":"message"}
{"nick":"Raynos","message":"examples can just `<script src='./dist/famous.js' /><script> %globalcodesoup% </script>","date":"2014-05-15T01:51:03.613Z","type":"message"}
{"nick":"thealphanerd","message":"that is what we are slowly working towards right now","date":"2014-05-15T01:51:32.386Z","type":"message"}
{"nick":"thealphanerd","message":"but it is still needing the inclusion of require","date":"2014-05-15T01:51:44.042Z","type":"message"}
{"nick":"thealphanerd","message":"which is nasty… and not a good way to teach new developers who have never programmed before","date":"2014-05-15T01:51:55.699Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: there are also things like requirebin.com","date":"2014-05-15T01:51:57.793Z","type":"message"}
{"nick":"thealphanerd","message":"I was looking at ogd’s great requirebin the other day","date":"2014-05-15T01:53:26.188Z","type":"message"}
{"nick":"thealphanerd","message":"using the npm request animation frame","date":"2014-05-15T01:53:34.427Z","type":"message"}
{"nick":"Raynos","message":"jjjohnny: sup","date":"2014-05-15T01:53:35.371Z","type":"message"}
{"nick":"thealphanerd","message":"Caltrain is almost at my stop btw","date":"2014-05-15T01:54:11.502Z","type":"message"}
{"nick":"thealphanerd","message":"so I may vanish suddenly","date":"2014-05-15T01:54:16.074Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: so I think if you can create a single js file that exports a global then the no build step should go away","date":"2014-05-15T01:54:21.449Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: its a seperate question whether your examples should show zero module system usage or should demonstrate how to use famous with a module system","date":"2014-05-15T01:54:39.752Z","type":"message"}
{"nick":"kumavis_","date":"2014-05-15T01:54:52.216Z","type":"join"}
{"nick":"thealphanerd","message":"or potentially both","date":"2014-05-15T01:54:53.480Z","type":"message"}
{"nick":"thealphanerd","message":"examples of no module / common / require","date":"2014-05-15T01:55:00.264Z","type":"message"}
{"nick":"thealphanerd","message":"It would be really nice if users could just up and run and develop however they felt like","date":"2014-05-15T01:55:24.467Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: then you need to support both common, globals & amd which is hard","date":"2014-05-15T01:55:34.722Z","type":"message"}
{"nick":"Raynos","message":"well not hard, but","date":"2014-05-15T01:55:45.331Z","type":"message"}
{"nick":"thealphanerd","message":"not as simple as supporting a single pattern","date":"2014-05-15T01:55:58.824Z","type":"message"}
{"nick":"thealphanerd","message":"multiple sources of truth","date":"2014-05-15T01:56:09.315Z","type":"message"}
{"nick":"Raynos","message":"define([\"famous\"], function () {}) and require(\"famous\") are trivial to support","date":"2014-05-15T01:56:27.292Z","type":"message"}
{"nick":"Raynos","message":"supporting both define([\"famous/physics/bla\"], function () {}) and require(\"famous/physics/bla\") is a bit harder but do-able","date":"2014-05-15T01:56:48.352Z","type":"message"}
{"nick":"Raynos","message":"thealphanerd: although remember that one will be a source of truth and the other will be a compiled artifact","date":"2014-05-15T01:58:17.873Z","type":"message"}
{"nick":"thealphanerd","message":"that is true","date":"2014-05-15T01:58:34.205Z","type":"message"}
{"nick":"thealphanerd","message":"as we will only develop in a single module loading pattern","date":"2014-05-15T01:58:45.558Z","type":"message"}
{"nick":"thealphanerd","message":"Raynos: time to run","date":"2014-05-15T01:59:26.588Z","type":"message"}
{"nick":"thealphanerd","message":"thanks for the time","date":"2014-05-15T01:59:26.702Z","type":"message"}
{"nick":"thealphanerd","message":"Raynos / substack / others: we are having our weekly demo night tomorrow if any of you would like to come back the office","date":"2014-05-15T01:59:39.843Z","type":"message"}
{"nick":"thealphanerd","message":"beer and food :D","date":"2014-05-15T01:59:43.593Z","type":"message"}
{"nick":"thealphanerd","message":"email me myles@famo.us if you are interested in coming","date":"2014-05-15T01:59:51.623Z","type":"message"}
{"nick":"naneau","reason":"Quit: Quit.","date":"2014-05-15T02:00:03.537Z","type":"quit"}
{"nick":"thealphanerd","message":"/s/back/by","date":"2014-05-15T02:00:15.682Z","type":"message"}
{"nick":"thealphanerd","message":"cheers","date":"2014-05-15T02:00:37.671Z","type":"message"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-05-15T02:00:37.791Z","type":"quit"}
{"nick":"phated","date":"2014-05-15T02:04:01.153Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T02:07:24.742Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 15]","date":"2014-05-15T02:07:44.798Z","type":"message"}
{"nick":"substack","message":"thlorenz: I'm in europe for a while longer","date":"2014-05-15T02:21:28.121Z","type":"message"}
{"nick":"thlorenz","message":"substack: where at? on that note should we start preparing some stuff for nodeconf?","date":"2014-05-15T02:22:37.089Z","type":"message"}
{"nick":"rowbit","message":"substack, pkrumins: Encoders down: 166.78.114.172 (dev-ie11-2)","date":"2014-05-15T02:22:56.034Z","type":"message"}
{"nick":"substack","message":"thlorenz: budapest","date":"2014-05-15T02:23:13.592Z","type":"message"}
{"nick":"substack","message":"then up to oslo","date":"2014-05-15T02:23:18.751Z","type":"message"}
{"nick":"substack","message":"thlorenz: stream-adventure was written just a few days before nodeconf :p","date":"2014-05-15T02:24:19.473Z","type":"message"}
{"nick":"substack","message":"although if you want to start on it early, go ahead!","date":"2014-05-15T02:24:43.766Z","type":"message"}
{"nick":"quijote","date":"2014-05-15T02:24:47.824Z","type":"join"}
{"nick":"thlorenz","message":"ah cool, sounds fun, yeah we can do some last minute hacking - pretty busy myself ATM","date":"2014-05-15T02:25:05.753Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-15T02:29:14.741Z","type":"quit"}
{"nick":"jcrugzz","reason":"Read error: Connection reset by peer","date":"2014-05-15T02:36:18.911Z","type":"quit"}
{"nick":"jcrugzz","date":"2014-05-15T02:38:38.003Z","type":"join"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2014-05-15T02:39:31.555Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-05-15T02:40:11.643Z","type":"join"}
{"nick":"kumavis_","reason":"Quit: Computer has gone to sleep.","date":"2014-05-15T02:44:25.468Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2014-05-15T02:44:34.646Z","type":"quit"}
{"nick":"jherms","date":"2014-05-15T02:49:34.118Z","type":"join"}
{"nick":"daleharvey","reason":"Ping timeout: 245 seconds","date":"2014-05-15T02:52:28.264Z","type":"quit"}
{"nick":"addisonj","reason":"Ping timeout: 245 seconds","date":"2014-05-15T02:53:18.055Z","type":"quit"}
{"nick":"owenb__","reason":"Ping timeout: 252 seconds","date":"2014-05-15T02:53:27.927Z","type":"quit"}
{"nick":"addisonj","date":"2014-05-15T02:54:04.884Z","type":"join"}
{"nick":"daleharvey","date":"2014-05-15T02:55:01.496Z","type":"join"}
{"nick":"owenb__","date":"2014-05-15T02:59:03.765Z","type":"join"}
{"nick":"jherms_","date":"2014-05-15T03:02:22.488Z","type":"join"}
{"nick":"jherms__","date":"2014-05-15T03:05:22.795Z","type":"join"}
{"nick":"jherms","reason":"Ping timeout: 252 seconds","date":"2014-05-15T03:06:11.296Z","type":"quit"}
{"nick":"cpup_","new_nick":"cpup","date":"2014-05-15T03:06:36.561Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 16]","date":"2014-05-15T03:07:44.404Z","type":"message"}
{"nick":"calvinfo","date":"2014-05-15T03:07:59.662Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:08:17.077Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-15T03:08:19.295Z","type":"join"}
{"nick":"jherms_","reason":"Ping timeout: 265 seconds","date":"2014-05-15T03:08:50.377Z","type":"quit"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:09:02.922Z","type":"quit"}
{"nick":"fent_","reason":"Ping timeout: 245 seconds","date":"2014-05-15T03:09:08.263Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:09:17.238Z","type":"join"}
{"nick":"tanepiper_","reason":"Ping timeout: 245 seconds","date":"2014-05-15T03:09:33.146Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-05-15T03:09:41.547Z","type":"quit"}
{"nick":"owenb__","reason":"Ping timeout: 245 seconds","date":"2014-05-15T03:09:58.120Z","type":"quit"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:09:58.312Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:10:07.188Z","type":"join"}
{"nick":"fent_","date":"2014-05-15T03:11:03.048Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:11:03.281Z","type":"quit"}
{"nick":"owenb__","date":"2014-05-15T03:11:04.244Z","type":"join"}
{"nick":"calvinfo1","date":"2014-05-15T03:11:06.610Z","type":"join"}
{"nick":"tanepiper_","date":"2014-05-15T03:11:08.251Z","type":"join"}
{"nick":"calvinfo","date":"2014-05-15T03:11:56.295Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:11:56.587Z","type":"quit"}
{"nick":"thlorenz","date":"2014-05-15T03:13:51.056Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-05-15T03:14:38.993Z","type":"quit"}
{"nick":"calvinfo","reason":"Ping timeout: 252 seconds","date":"2014-05-15T03:16:27.295Z","type":"quit"}
{"nick":"quijote","date":"2014-05-15T03:25:44.501Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 276 seconds","date":"2014-05-15T03:30:45.384Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:38:11.413Z","type":"join"}
{"nick":"calvinfo1","date":"2014-05-15T03:39:04.411Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:39:04.614Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:39:54.144Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-05-15T03:40:22.214Z","type":"join"}
{"nick":"calvinfo2","date":"2014-05-15T03:40:52.695Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:40:52.930Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:41:44.625Z","type":"join"}
{"nick":"calvinfo2","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:41:44.885Z","type":"quit"}
{"nick":"calvinfo2","date":"2014-05-15T03:42:37.204Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:42:37.439Z","type":"quit"}
{"nick":"feross","reason":"Quit: Connection closed for inactivity","date":"2014-05-15T03:42:41.749Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:43:34.225Z","type":"join"}
{"nick":"calvinfo2","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:43:34.513Z","type":"quit"}
{"nick":"calvinfo1","reason":"Ping timeout: 276 seconds","date":"2014-05-15T03:43:45.347Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-15T03:44:26.295Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:44:26.527Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2014-05-15T03:44:58.217Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:45:19.647Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:45:19.887Z","type":"quit"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:46:01.539Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:46:17.363Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:46:55.418Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:47:09.365Z","type":"join"}
{"nick":"calvinfo1","date":"2014-05-15T03:48:01.194Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:48:01.454Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T03:48:58.708Z","type":"join"}
{"nick":"calvinfo2","date":"2014-05-15T03:49:51.376Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-15T03:49:51.642Z","type":"quit"}
{"nick":"calvinfo1","reason":"Ping timeout: 240 seconds","date":"2014-05-15T03:52:18.175Z","type":"quit"}
{"nick":"calvinfo2","reason":"Ping timeout: 265 seconds","date":"2014-05-15T03:54:45.348Z","type":"quit"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2014-05-15T03:57:59.217Z","type":"quit"}
{"nick":"shama_","date":"2014-05-15T04:05:10.393Z","type":"join"}
{"nick":"mikolalysenko","date":"2014-05-15T04:07:28.180Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 15]","date":"2014-05-15T04:07:44.570Z","type":"message"}
{"nick":"shama","reason":"Ping timeout: 240 seconds","date":"2014-05-15T04:07:54.236Z","type":"quit"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2014-05-15T04:10:00.094Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 258 seconds","date":"2014-05-15T04:13:41.147Z","type":"quit"}
{"nick":"natemic","new_nick":"natemi","date":"2014-05-15T04:20:00.461Z","type":"nick"}
{"nick":"ryan_ramage","date":"2014-05-15T04:23:57.469Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T04:26:18.328Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-15T04:30:38.187Z","type":"quit"}
{"nick":"jherms","date":"2014-05-15T04:36:15.921Z","type":"join"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-05-15T04:37:00.837Z","type":"quit"}
{"nick":"jherms__","reason":"Ping timeout: 255 seconds","date":"2014-05-15T04:39:05.596Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T04:43:43.117Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2014-05-15T04:46:21.083Z","type":"nick"}
{"nick":"calvinfo","reason":"Ping timeout: 245 seconds","date":"2014-05-15T04:48:18.034Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-05-15T04:55:28.154Z","type":"join"}
{"nick":"shama_","date":"2014-05-15T04:57:02.275Z","type":"quit"}
{"nick":"quijote","date":"2014-05-15T04:58:07.415Z","type":"join"}
{"nick":"ryan_ramage","reason":"Quit: ryan_ramage","date":"2014-05-15T04:59:21.552Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T05:07:29.184Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 22]","date":"2014-05-15T05:07:44.670Z","type":"message"}
{"nick":"phated","date":"2014-05-15T05:20:49.073Z","type":"join"}
{"nick":"phated","reason":"Ping timeout: 245 seconds","date":"2014-05-15T05:25:23.041Z","type":"quit"}
{"nick":"DTrejo","date":"2014-05-15T05:32:48.299Z","type":"join"}
{"nick":"kumavis_","date":"2014-05-15T05:33:37.204Z","type":"join"}
{"nick":"kumavis","reason":"Ping timeout: 240 seconds","date":"2014-05-15T05:35:54.724Z","type":"quit"}
{"nick":"kumavis_","new_nick":"kumavis","date":"2014-05-15T05:35:55.076Z","type":"nick"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T05:36:40.355Z","type":"quit"}
{"nick":"jxson","date":"2014-05-15T05:41:01.571Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 252 seconds","date":"2014-05-15T05:44:35.295Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T05:45:14.608Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T05:57:24.192Z","type":"join"}
{"nick":"john3213","date":"2014-05-15T06:05:23.165Z","type":"join"}
{"nick":"DTrejo","date":"2014-05-15T06:06:56.569Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 2, free: 38]","date":"2014-05-15T06:07:44.719Z","type":"message"}
{"nick":"py1hon","reason":"Ping timeout: 245 seconds","date":"2014-05-15T06:07:53.197Z","type":"quit"}
{"nick":"jjjohnny","reason":"Ping timeout: 245 seconds","date":"2014-05-15T06:07:53.314Z","type":"quit"}
{"nick":"jjjohnny","date":"2014-05-15T06:08:00.675Z","type":"join"}
{"nick":"py1hon","date":"2014-05-15T06:08:01.638Z","type":"join"}
{"nick":"calvinmetcalf","reason":"Quit: Connection closed for inactivity","date":"2014-05-15T06:08:14.931Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T06:08:39.218Z","type":"quit"}
{"nick":"john3213","date":"2014-05-15T06:10:25.026Z","type":"part"}
{"nick":"natemi","reason":"Ping timeout: 240 seconds","date":"2014-05-15T06:13:38.220Z","type":"quit"}
{"nick":"jherms","reason":"Quit: Leaving","date":"2014-05-15T06:14:05.504Z","type":"quit"}
{"nick":"maksimlin","reason":"Ping timeout: 276 seconds","date":"2014-05-15T06:14:33.537Z","type":"quit"}
{"nick":"dlmanning","reason":"Ping timeout: 240 seconds","date":"2014-05-15T06:14:43.080Z","type":"quit"}
{"nick":"natemic","date":"2014-05-15T06:15:52.769Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 245 seconds","date":"2014-05-15T06:16:38.042Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2014-05-15T06:28:18.133Z","type":"quit"}
{"nick":"dlmanning","date":"2014-05-15T06:28:29.193Z","type":"join"}
{"nick":"kriskowal","reason":"Quit: kriskowal","date":"2014-05-15T06:32:19.761Z","type":"quit"}
{"nick":"kriskowal","date":"2014-05-15T06:32:47.303Z","type":"join"}
{"nick":"calvinfo","date":"2014-05-15T06:40:18.663Z","type":"join"}
{"nick":"domanic","date":"2014-05-15T06:41:34.310Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T06:43:00.559Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 265 seconds","date":"2014-05-15T06:47:47.406Z","type":"quit"}
{"nick":"thealphanerd","date":"2014-05-15T06:48:19.505Z","type":"join"}
{"nick":"feross","date":"2014-05-15T06:57:19.409Z","type":"join"}
{"nick":"djcoin","date":"2014-05-15T06:59:27.609Z","type":"join"}
{"nick":"sveisvei","date":"2014-05-15T07:02:13.297Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T07:04:46.251Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 39]","date":"2014-05-15T07:07:44.469Z","type":"message"}
{"nick":"calvinfo","date":"2014-05-15T07:09:10.302Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T07:18:00.110Z","type":"quit"}
{"nick":"rowbit","message":"substack, pkrumins: These encoders are STILL down: 162.242.164.84(dev-ie11-1)","date":"2014-05-15T07:18:26.757Z","type":"message"}
{"nick":"quijote","date":"2014-05-15T07:20:59.752Z","type":"join"}
{"nick":"feross","reason":"Quit: feross","date":"2014-05-15T07:22:21.060Z","type":"quit"}
{"nick":"Maciek416","reason":"Remote host closed the connection","date":"2014-05-15T07:27:16.490Z","type":"quit"}
{"nick":"feross","date":"2014-05-15T07:32:22.434Z","type":"join"}
{"nick":"kumavis","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2014-05-15T07:33:32.600Z","type":"quit"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2014-05-15T07:35:19.382Z","type":"quit"}
{"nick":"fotoverite","date":"2014-05-15T07:37:32.666Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 240 seconds","date":"2014-05-15T07:41:54.640Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 45]","date":"2014-05-15T08:07:44.505Z","type":"message"}
{"nick":"fotoverite","date":"2014-05-15T08:08:30.296Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 252 seconds","date":"2014-05-15T08:12:43.296Z","type":"quit"}
{"nick":"rowbit","message":"substack, pkrumins: These encoders are STILL down: 166.78.114.172(dev-ie11-2)","date":"2014-05-15T08:17:56.952Z","type":"message"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2014-05-15T08:24:02.356Z","type":"quit"}
{"nick":"feross","date":"2014-05-15T08:24:37.685Z","type":"part"}
{"nick":"fotoverite","date":"2014-05-15T08:38:36.240Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 276 seconds","date":"2014-05-15T08:44:03.278Z","type":"quit"}
{"nick":"domanic","message":"https://twitter.com/dch__/status/466861857199104000","date":"2014-05-15T09:01:57.342Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 58]","date":"2014-05-15T09:07:44.487Z","type":"message"}
{"nick":"contrahax","date":"2014-05-15T09:09:07.443Z","type":"join"}
{"nick":"domanic","reason":"Remote host closed the connection","date":"2014-05-15T09:15:48.957Z","type":"quit"}
{"nick":"Maciek416","date":"2014-05-15T09:15:53.646Z","type":"join"}
{"nick":"Maciek416","reason":"Ping timeout: 240 seconds","date":"2014-05-15T09:20:14.780Z","type":"quit"}
{"nick":"domanic","date":"2014-05-15T09:20:46.305Z","type":"join"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-05-15T09:22:48.318Z","type":"quit"}
{"nick":"contrahax","reason":"Ping timeout: 265 seconds","date":"2014-05-15T09:28:15.336Z","type":"quit"}
{"nick":"maksimlin","date":"2014-05-15T09:37:14.186Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 252 seconds","date":"2014-05-15T09:37:41.651Z","type":"quit"}
{"nick":"fotoverite","date":"2014-05-15T09:39:44.173Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 258 seconds","date":"2014-05-15T09:44:07.201Z","type":"quit"}
{"nick":"domanic","reason":"Ping timeout: 252 seconds","date":"2014-05-15T09:56:07.297Z","type":"quit"}
{"nick":"maksimlin","reason":"Quit: ChatZilla 0.9.90.1 [Firefox 29.0/20140428193838]","date":"2014-05-15T09:56:50.084Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 52]","date":"2014-05-15T10:07:44.590Z","type":"message"}
{"nick":"domanic","date":"2014-05-15T10:18:56.497Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T10:35:51.171Z","type":"join"}
{"nick":"insertcoffee","date":"2014-05-15T10:38:05.273Z","type":"join"}
{"nick":"fotoverite","date":"2014-05-15T10:40:15.610Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-15T10:40:18.042Z","type":"quit"}
{"nick":"fotoverite","reason":"Ping timeout: 252 seconds","date":"2014-05-15T10:44:47.610Z","type":"quit"}
{"nick":"Maciek416","date":"2014-05-15T11:04:44.054Z","type":"join"}
{"nick":"yorick","date":"2014-05-15T11:06:40.304Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 2, free: 58]","date":"2014-05-15T11:07:44.617Z","type":"message"}
{"nick":"ins0mnia","reason":"Remote host closed the connection","date":"2014-05-15T11:08:31.189Z","type":"quit"}
{"nick":"fotoverite","date":"2014-05-15T11:09:02.296Z","type":"join"}
{"nick":"Maciek416","reason":"Ping timeout: 245 seconds","date":"2014-05-15T11:09:08.176Z","type":"quit"}
{"nick":"fotoverite","reason":"Ping timeout: 252 seconds","date":"2014-05-15T11:13:51.297Z","type":"quit"}
{"nick":"ins0mnia","date":"2014-05-15T11:18:23.159Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T11:22:46.326Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 276 seconds","date":"2014-05-15T11:27:51.232Z","type":"quit"}
{"nick":"quijote","date":"2014-05-15T11:46:14.409Z","type":"join"}
{"nick":"calvinmetcalf","date":"2014-05-15T11:54:28.222Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 4, free: 49]","date":"2014-05-15T12:07:44.492Z","type":"message"}
{"nick":"fotoverite","date":"2014-05-15T12:09:53.138Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 252 seconds","date":"2014-05-15T12:14:26.611Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 252 seconds","date":"2014-05-15T12:23:53.296Z","type":"quit"}
{"nick":"Maciek416","date":"2014-05-15T12:53:40.941Z","type":"join"}
{"nick":"Maciek416","reason":"Ping timeout: 240 seconds","date":"2014-05-15T12:58:18.893Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 66]","date":"2014-05-15T13:07:44.700Z","type":"message"}
{"nick":"fotoverite","date":"2014-05-15T13:10:36.640Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 240 seconds","date":"2014-05-15T13:15:14.639Z","type":"quit"}
{"nick":"rowbit","message":"substack, pkrumins: These encoders are STILL down: 162.242.164.84(dev-ie11-1)","date":"2014-05-15T13:18:27.607Z","type":"message"}
{"nick":"quijote","date":"2014-05-15T13:19:54.801Z","type":"join"}
{"nick":"contrahax","date":"2014-05-15T13:29:22.094Z","type":"join"}
{"nick":"contraha_","date":"2014-05-15T13:33:19.301Z","type":"join"}
{"nick":"contrahax","reason":"Ping timeout: 240 seconds","date":"2014-05-15T13:36:41.985Z","type":"quit"}
{"nick":"thlorenz","date":"2014-05-15T13:40:21.562Z","type":"join"}
{"nick":"toddself","date":"2014-05-15T13:47:03.671Z","type":"join"}
{"nick":"dguttman","date":"2014-05-15T13:47:29.841Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-15T13:50:14.679Z","type":"quit"}
{"nick":"ryan_ramage","date":"2014-05-15T13:59:40.283Z","type":"join"}
{"nick":"ryan_ramage","reason":"Client Quit","date":"2014-05-15T13:59:41.698Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 53]","date":"2014-05-15T14:07:44.491Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2014-05-15T14:08:41.282Z","type":"nick"}
{"nick":"fotoverite","date":"2014-05-15T14:11:36.058Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T14:13:00.413Z","type":"join"}
{"nick":"brianloveswords","date":"2014-05-15T14:14:14.242Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 245 seconds","date":"2014-05-15T14:16:13.068Z","type":"quit"}
{"nick":"rowbit","message":"substack, pkrumins: These encoders are STILL down: 166.78.114.172(dev-ie11-2)","date":"2014-05-15T14:17:57.696Z","type":"message"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2014-05-15T14:18:09.799Z","type":"quit"}
{"nick":"dguttman","date":"2014-05-15T14:23:00.566Z","type":"join"}
{"nick":"Maciek416","date":"2014-05-15T14:42:30.673Z","type":"join"}
{"nick":"pfraze","date":"2014-05-15T14:44:26.517Z","type":"join"}
{"nick":"Maciek416","reason":"Ping timeout: 240 seconds","date":"2014-05-15T14:46:54.684Z","type":"quit"}
{"nick":"kenperkins_","reason":"Remote host closed the connection","date":"2014-05-15T14:47:12.859Z","type":"quit"}
{"nick":"pfraze_","date":"2014-05-15T14:47:52.224Z","type":"join"}
{"nick":"kenperkins","date":"2014-05-15T14:48:00.867Z","type":"join"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-05-15T14:48:26.281Z","type":"quit"}
{"nick":"brianloveswords","date":"2014-05-15T14:49:20.477Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 252 seconds","date":"2014-05-15T14:50:55.297Z","type":"quit"}
{"nick":"pfraze","reason":"Ping timeout: 255 seconds","date":"2014-05-15T14:51:32.541Z","type":"quit"}
{"nick":"ednapiranha","date":"2014-05-15T15:00:27.751Z","type":"join"}
{"nick":"fotoverite","date":"2014-05-15T15:00:34.115Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 57]","date":"2014-05-15T15:07:45.011Z","type":"message"}
{"nick":"mikolalysenko","date":"2014-05-15T15:10:10.043Z","type":"join"}
{"nick":"djcoin","reason":"Quit: WeeChat 0.4.2","date":"2014-05-15T15:17:37.141Z","type":"quit"}
{"nick":"naneau","date":"2014-05-15T15:25:43.490Z","type":"join"}
{"nick":"toddself","reason":"Remote host closed the connection","date":"2014-05-15T15:26:20.833Z","type":"quit"}
{"nick":"thealphanerd","date":"2014-05-15T15:26:32.839Z","type":"join"}
{"nick":"thealphanerd","reason":"Client Quit","date":"2014-05-15T15:26:46.325Z","type":"quit"}
{"nick":"toddself","date":"2014-05-15T15:26:57.040Z","type":"join"}
{"nick":"rowbit","message":"substack, pkrumins: Encoders down: 50.57.174.105 (dev-ie8-2)","date":"2014-05-15T15:26:57.858Z","type":"message"}
{"nick":"domanic","reason":"Ping timeout: 255 seconds","date":"2014-05-15T15:30:14.697Z","type":"quit"}
{"nick":"toddself","reason":"Ping timeout: 245 seconds","date":"2014-05-15T15:31:13.068Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-15T15:33:47.157Z","type":"join"}
{"nick":"rowbit","message":"substack, pkrumins: Encoders down: 184.106.106.46 (dev-ie8-1)","date":"2014-05-15T15:40:58.045Z","type":"message"}
{"nick":"domanic","date":"2014-05-15T15:43:59.060Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 245 seconds","date":"2014-05-15T15:44:58.090Z","type":"quit"}
{"nick":"mikolalysenko","date":"2014-05-15T15:45:58.300Z","type":"join"}
{"nick":"quijote","date":"2014-05-15T15:48:41.826Z","type":"join"}
{"nick":"Maciek416","date":"2014-05-15T15:49:13.676Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-15T15:49:45.016Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-15T15:52:54.649Z","type":"quit"}
{"nick":"toddself","date":"2014-05-15T15:57:33.612Z","type":"join"}
{"nick":"juliangruber","message":"the new chromebook2 looks cool, even with 13\" http://www.samsung.com/us/business/computing/chrome-devices/XE503C32-K01US","date":"2014-05-15T15:58:23.213Z","type":"message"}
