{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-02-16T00:00:00.505Z","type":"quit"}
{"nick":"ircretary","date":"2013-02-16T00:00:08.686Z","type":"join"}
{"nick":"lyaunzbe_","reason":"Remote host closed the connection","date":"2013-02-16T00:00:58.134Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Ping timeout: 252 seconds","date":"2013-02-16T00:05:20.810Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-02-16T00:07:29.889Z","type":"join"}
{"nick":"mikolalysenko","message":"chrisdickinson: awesome!","date":"2013-02-16T00:08:02.429Z","type":"message"}
{"nick":"chrisdickinson","message":"there are, of course, bugs; but at least there's a test page for it and an easy path for reporting the bugs","date":"2013-02-16T00:08:24.550Z","type":"message"}
{"nick":"chrisdickinson","message":"the idea is to catch and catalog 'em all.","date":"2013-02-16T00:08:34.128Z","type":"message"}
{"nick":"mikolalysenko","message":"fantastic, I'll try to help where I can though it looks like since I am on a macbook you already got mine","date":"2013-02-16T00:10:10.571Z","type":"message"}
{"nick":"evbogue","date":"2013-02-16T00:11:42.027Z","type":"join"}
{"nick":"mikolalysenko","message":"suggestion: maybe make it capture mouse events too?","date":"2013-02-16T00:11:59.533Z","type":"message"}
{"nick":"mikolalysenko","message":"since those are actually kind of tricky, especially with the weirdness of left/right/middle","date":"2013-02-16T00:12:21.204Z","type":"message"}
{"nick":"st_luke","date":"2013-02-16T00:12:40.989Z","type":"join"}
{"nick":"lyaunzbe","date":"2013-02-16T00:14:14.028Z","type":"join"}
{"nick":"mikolalysenko","message":"chrisdickinson: also, have you seen this?  http://codeflow.org/entries/2013/jan/30/keyboard-events-in-javascript-are-broken/","date":"2013-02-16T00:14:35.815Z","type":"message"}
{"nick":"mikolalysenko","message":"apparently the situation is especially weird for swiss/german/swedish users","date":"2013-02-16T00:14:52.823Z","type":"message"}
{"nick":"chrisdickinson","message":"yes","date":"2013-02-16T00:15:18.724Z","type":"message"}
{"nick":"ryan_stevens","date":"2013-02-16T00:15:19.581Z","type":"join"}
{"nick":"chrisdickinson","message":"mikolalysenko: kb-controls actually does catch mouse events","date":"2013-02-16T00:15:32.784Z","type":"message"}
{"nick":"chrisdickinson","message":"vkey doesn't though","date":"2013-02-16T00:15:37.170Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2013-02-16T00:15:50.055Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-02-16T00:27:43.876Z","type":"quit"}
{"nick":"devaholic","reason":"Remote host closed the connection","date":"2013-02-16T00:33:00.125Z","type":"quit"}
{"nick":"ryan_stevens1","date":"2013-02-16T00:36:45.837Z","type":"join"}
{"nick":"ryan_stevens","reason":"Ping timeout: 260 seconds","date":"2013-02-16T00:40:19.514Z","type":"quit"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2013-02-16T00:51:18.315Z","type":"quit"}
{"nick":"evbogue","reason":"Remote host closed the connection","date":"2013-02-16T00:57:45.542Z","type":"quit"}
{"nick":"CryptoQuick_","date":"2013-02-16T00:59:46.970Z","type":"join"}
{"nick":"CryptoQuick","reason":"Ping timeout: 244 seconds","date":"2013-02-16T01:02:58.087Z","type":"quit"}
{"nick":"CryptoQuick_","new_nick":"CryptoQuick","date":"2013-02-16T01:02:58.249Z","type":"nick"}
{"nick":"CryptoQuick","reason":"Quit: CryptoQuick","date":"2013-02-16T01:07:38.003Z","type":"quit"}
{"nick":"jden_","date":"2013-02-16T01:08:20.809Z","type":"join"}
{"nick":"jden_","new_nick":"Guest70663","date":"2013-02-16T01:08:44.268Z","type":"nick"}
{"nick":"ryan_stevens","date":"2013-02-16T01:11:33.106Z","type":"join"}
{"nick":"ryan_stevens1","reason":"Ping timeout: 252 seconds","date":"2013-02-16T01:13:54.364Z","type":"quit"}
{"nick":"Raynos","message":"chrisdickinson: OH HI","date":"2013-02-16T01:23:36.959Z","type":"message"}
{"nick":"Raynos","message":"miko: there's a keyboard module. https://github.com/benvie/keyboard","date":"2013-02-16T01:24:02.699Z","type":"message"}
{"nick":"Raynos","message":"I just use https://github.com/gozala/dom-reduce","date":"2013-02-16T01:24:11.710Z","type":"message"}
{"nick":"Raynos","message":"events(window, \"keyup\")","date":"2013-02-16T01:24:17.230Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2013-02-16T01:26:21.361Z","type":"quit"}
{"nick":"ins0mnia","reason":"Ping timeout: 252 seconds","date":"2013-02-16T01:43:26.129Z","type":"quit"}
{"nick":"lyaunzbe","reason":"Remote host closed the connection","date":"2013-02-16T01:43:58.338Z","type":"quit"}
{"nick":"Guest70663","reason":"Ping timeout: 276 seconds","date":"2013-02-16T01:49:33.811Z","type":"quit"}
{"nick":"ryan_stevens","date":"2013-02-16T01:56:03.092Z","type":"join"}
{"nick":"jden_","date":"2013-02-16T01:58:50.070Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-16T01:59:07.426Z","type":"quit"}
{"nick":"jden_","new_nick":"Guest83359","date":"2013-02-16T01:59:14.187Z","type":"nick"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2013-02-16T02:30:09.192Z","type":"quit"}
{"nick":"ralphtheninja","reason":"Ping timeout: 252 seconds","date":"2013-02-16T02:34:06.521Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-16T02:48:36.886Z","type":"join"}
{"nick":"ryan_stevens","date":"2013-02-16T03:00:35.521Z","type":"join"}
{"nick":"lyaunzbe","date":"2013-02-16T03:03:13.080Z","type":"join"}
{"nick":"ryan_stevens","reason":"Read error: Connection reset by peer","date":"2013-02-16T03:10:06.943Z","type":"quit"}
{"nick":"ryan_stevens1","date":"2013-02-16T03:10:08.096Z","type":"join"}
{"nick":"ryan_stevens1","reason":"Client Quit","date":"2013-02-16T03:11:48.140Z","type":"quit"}
{"nick":"tphummel","reason":"Quit: tphummel","date":"2013-02-16T03:13:07.170Z","type":"quit"}
{"nick":"st_luke","date":"2013-02-16T03:15:12.193Z","type":"join"}
{"nick":"ryan_stevens","date":"2013-02-16T03:21:58.973Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 276 seconds","date":"2013-02-16T03:22:30.904Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Client Quit","date":"2013-02-16T03:23:40.167Z","type":"quit"}
{"nick":"ryan_stevens","date":"2013-02-16T03:25:06.502Z","type":"join"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2013-02-16T03:30:33.700Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-02-16T03:30:52.493Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-02-16T03:32:25.858Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-02-16T03:43:49.816Z","type":"quit"}
{"nick":"Guest83359","reason":"Ping timeout: 245 seconds","date":"2013-02-16T03:48:46.136Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-02-16T04:04:23.035Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-02-16T04:04:51.111Z","type":"quit"}
{"nick":"dguttman","date":"2013-02-16T04:12:41.265Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-02-16T04:22:06.009Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-02-16T05:00:29.648Z","type":"nick"}
{"nick":"defunctzombie","message":"isaacs: nice, that is a reason I can stand behind :)","date":"2013-02-16T05:01:22.195Z","type":"message"}
{"nick":"jjjjohnnny","message":"isaacs: is 'a require b require a' not an anti-pattern?","date":"2013-02-16T05:04:47.490Z","type":"message"}
{"nick":"jjjjohnnny","message":"seems kind of silly, but who am I to say","date":"2013-02-16T05:06:34.749Z","type":"message"}
{"nick":"defunctzombie","message":"it is an anti pattern, but if you use returns they would never return","date":"2013-02-16T05:06:43.710Z","type":"message"}
{"nick":"defunctzombie","message":"jjjjohnnny: I was asking in the context of why we didn't just 'return foo'; if we wanted to export foo from a module","date":"2013-02-16T05:07:18.282Z","type":"message"}
{"nick":"jjjjohnnny","message":"my brain is really off","date":"2013-02-16T05:07:52.432Z","type":"message"}
{"nick":"ryan_stevens","date":"2013-02-16T05:22:27.262Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-02-16T05:27:39.571Z","type":"nick"}
{"nick":"jden_","date":"2013-02-16T05:45:41.114Z","type":"join"}
{"nick":"jden_","new_nick":"Guest27189","date":"2013-02-16T05:46:05.334Z","type":"nick"}
{"nick":"CryptoQuick","date":"2013-02-16T05:54:23.867Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-02-16T06:29:33.279Z","type":"quit"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-02-16T06:35:31.977Z","type":"quit"}
{"nick":"substack","message":"defunctzombie_zz: can you add a \"browserify\" field to the process module?","date":"2013-02-16T07:07:55.004Z","type":"message"}
{"nick":"substack","message":"to mirror \"browser\"","date":"2013-02-16T07:08:00.823Z","type":"message"}
{"nick":"substack","message":"otherwise it leaves a gap in the migration path from browserify v1 to v2","date":"2013-02-16T07:08:17.418Z","type":"message"}
{"nick":"substack","message":"merging the browser field patch into v1 now but people on a slightly older version will run into issues with process.nextTick() from v2 modules","date":"2013-02-16T07:09:46.503Z","type":"message"}
{"nick":"substack","message":"I'm thinking I shouldmake using process without requiring it should generate a warning and inline the process code","date":"2013-02-16T07:10:42.071Z","type":"message"}
{"nick":"substack","message":"if I do that you can just ignore my thing about the process module","date":"2013-02-16T07:12:54.818Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2013-02-16T07:30:27.204Z","type":"quit"}
{"nick":"jesusabdullah","message":"substack: according to this recruiter I am \"highly ranked in javascript\" what does this mean >_<","date":"2013-02-16T08:55:36.573Z","type":"message"}
{"nick":"jesusabdullah","message":"substack: hahaha you got cc'd on this fucker","date":"2013-02-16T08:56:20.543Z","type":"message"}
{"nick":"jesusabdullah","message":"substack: plz2b confirm","date":"2013-02-16T08:56:33.993Z","type":"message"}
{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2013-02-16T09:03:14.546Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-16T09:08:26.657Z","type":"join"}
{"nick":"niftylettuce","message":"FIRST THEY IGNORE YOU, THEN LAUGH AT YOU, THEN FIGHT YOU, THEN YOU WIN.","date":"2013-02-16T09:13:44.936Z","type":"message"}
{"nick":"LOUDBOT","message":"YOU COMPLETE MY WAKEFUL NIGHTMARE","date":"2013-02-16T09:13:45.337Z","type":"message"}
{"nick":"jesusabdullah","message":"maan did the stizz really fall asleep on me? XD","date":"2013-02-16T09:16:15.873Z","type":"message"}
{"nick":"dguttman","date":"2013-02-16T09:38:41.453Z","type":"join"}
{"nick":"ralphtheninja","date":"2013-02-16T09:42:08.455Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-02-16T10:08:20.620Z","type":"quit"}
{"nick":"jesusabdullah","message":"isaacs: soz bro my internet died like right before you asked me about publishing","date":"2013-02-16T10:31:55.323Z","type":"message"}
{"nick":"substack","message":"jesusabdullah: yes confirmed @ cc'd","date":"2013-02-16T10:42:41.737Z","type":"message"}
{"nick":"substack","message":"however that even happened","date":"2013-02-16T10:42:53.332Z","type":"message"}
{"nick":"jesusabdullah","message":"lulz","date":"2013-02-16T10:50:23.081Z","type":"message"}
{"nick":"jesusabdullah","message":"\"I see you are HIGHLY RANKED in JAVASCRIPT\"","date":"2013-02-16T10:50:35.336Z","type":"message"}
{"nick":"jesusabdullah","message":"must've thought it'd somehow lend some \"credibility\" to the email?","date":"2013-02-16T10:50:57.390Z","type":"message"}
{"nick":"jesusabdullah","message":"though obviously you give about as many shits as I do, if even that","date":"2013-02-16T10:51:28.561Z","type":"message"}
{"nick":"jesusabdullah","message":"so, like","date":"2013-02-16T10:51:31.650Z","type":"message"}
{"nick":"jesusabdullah","message":"yeah","date":"2013-02-16T10:52:08.864Z","type":"message"}
{"nick":"jesusabdullah","message":"I really want to know what kind of leaderboard these people are looking at","date":"2013-02-16T10:52:19.704Z","type":"message"}
{"nick":"jesusabdullah","message":"like, where ARE these things?","date":"2013-02-16T10:52:32.810Z","type":"message"}
{"nick":"Guest27189","reason":"Ping timeout: 264 seconds","date":"2013-02-16T11:04:18.110Z","type":"quit"}
{"nick":"yorick","date":"2013-02-16T11:28:36.080Z","type":"join"}
{"nick":"jden_","date":"2013-02-16T11:31:01.061Z","type":"join"}
{"nick":"jden_","new_nick":"Guest7620","date":"2013-02-16T11:31:25.326Z","type":"nick"}
{"nick":"Guest7620","reason":"Ping timeout: 245 seconds","date":"2013-02-16T11:43:21.068Z","type":"quit"}
{"nick":"jden__","date":"2013-02-16T12:10:07.359Z","type":"join"}
{"nick":"ins0mnia","date":"2013-02-16T12:12:12.943Z","type":"join"}
{"nick":"jden__","reason":"Ping timeout: 252 seconds","date":"2013-02-16T12:24:49.942Z","type":"quit"}
{"nick":"fotoverite","message":"jesusabdullah: coderwall. :P","date":"2013-02-16T12:25:24.320Z","type":"message"}
{"nick":"jden_","date":"2013-02-16T12:51:06.000Z","type":"join"}
{"nick":"jden_","new_nick":"Guest88373","date":"2013-02-16T12:51:29.104Z","type":"nick"}
{"nick":"CryptoQuick","reason":"Quit: CryptoQuick","date":"2013-02-16T12:55:18.161Z","type":"quit"}
{"nick":"Guest88373","reason":"Ping timeout: 256 seconds","date":"2013-02-16T13:06:50.000Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-02-16T13:16:24.032Z","type":"join"}
{"nick":"jesusabdullah","message":"fotoverite: may be? Is there an actual lederbord on there per-language?","date":"2013-02-16T13:19:13.723Z","type":"message"}
{"nick":"fotoverite","message":"yes","date":"2013-02-16T13:19:25.594Z","type":"message"}
{"nick":"jesusabdullah","message":"fotoverite: link? :)","date":"2013-02-16T13:22:12.352Z","type":"message"}
{"nick":"fotoverite","message":"Umm https://coderwall.com/n/javascript","date":"2013-02-16T13:23:12.695Z","type":"message"}
{"nick":"jesusabdullah","message":"let's see how HIGHLY i RANK","date":"2013-02-16T13:24:31.207Z","type":"message"}
{"nick":"jesusabdullah","message":"what the fuck are these protips","date":"2013-02-16T13:24:49.504Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-02-16T13:26:06.033Z","type":"quit"}
{"nick":"jesusabdullah","message":"seriously, no aggregate stats on badges anymore? protips are retarded","date":"2013-02-16T13:31:29.806Z","type":"message"}
{"nick":"fotoverite","message":"well the whole thing became retarded","date":"2013-02-16T13:31:49.410Z","type":"message"}
{"nick":"fotoverite","message":"but still better then geeklist","date":"2013-02-16T13:31:53.823Z","type":"message"}
{"nick":"jesusabdullah","message":"yeah well I mean","date":"2013-02-16T13:32:56.094Z","type":"message"}
{"nick":"jden_","date":"2013-02-16T13:32:58.887Z","type":"join"}
{"nick":"jesusabdullah","message":"I haven't looked at greeklist in ages","date":"2013-02-16T13:33:00.998Z","type":"message"}
{"nick":"jden_","new_nick":"Guest74854","date":"2013-02-16T13:33:21.741Z","type":"nick"}
{"nick":"mikolalysenko","date":"2013-02-16T13:46:44.560Z","type":"join"}
{"nick":"Guest74854","reason":"Ping timeout: 256 seconds","date":"2013-02-16T13:49:36.421Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-02-16T13:51:31.573Z","type":"nick"}
{"nick":"defunctzombie","message":"substack: Raynos: https://github.com/shtylman/node-process/commit/8b6f96cd48390b3a9932049a959d5f724a64a127","date":"2013-02-16T13:54:30.674Z","type":"message"}
{"nick":"defunctzombie","message":"published as version 0.5.1","date":"2013-02-16T13:54:35.446Z","type":"message"}
{"nick":"defunctzombie","message":"Raynos: sorry, should have done it earlier, was being stubborn :P","date":"2013-02-16T13:54:54.289Z","type":"message"}
{"nick":"substack","message":"oh sweet","date":"2013-02-16T13:56:37.062Z","type":"message"}
{"nick":"defunctzombie","message":"well, it would be published if npm was not being stupid","date":"2013-02-16T13:56:52.042Z","type":"message"}
{"nick":"jibay","date":"2013-02-16T13:57:20.335Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-02-16T13:58:24.824Z","type":"nick"}
{"nick":"mikolalysenko","message":"what is the best way to support workers in browserify?","date":"2013-02-16T13:58:33.762Z","type":"message"}
{"nick":"mikolalysenko","message":"in other words, I want some API that lets me spin up workers in my modules that works transparently across both node and browserify","date":"2013-02-16T13:59:06.666Z","type":"message"}
{"nick":"mikolalysenko","message":"I can think of a way to do this, but it would require modifying browserify somewhat","date":"2013-02-16T13:59:22.159Z","type":"message"}
{"nick":"jesusabdullah","message":"proccor","date":"2013-02-16T13:59:40.861Z","type":"message"}
{"nick":"mikolalysenko","message":"do you have a link?","date":"2013-02-16T14:00:39.746Z","type":"message"}
{"nick":"jesusabdullah","message":"my internet sucks that had zero context mikolalysenko","date":"2013-02-16T14:03:48.188Z","type":"message"}
{"nick":"jesusabdullah","message":"idk what you want to do mikolalysenko but maybe https://github.com/substack/dnode will help?","date":"2013-02-16T14:04:24.451Z","type":"message"}
{"nick":"mikolalysenko","message":"no, not dnode","date":"2013-02-16T14:05:29.037Z","type":"message"}
{"nick":"mikolalysenko","message":"what I want to do is be able to use webworkers in my modules","date":"2013-02-16T14:05:38.678Z","type":"message"}
{"nick":"mikolalysenko","message":"but also have them work in browserify/node","date":"2013-02-16T14:05:46.922Z","type":"message"}
{"nick":"mikolalysenko","message":"now on node, I could use child_process.execFile","date":"2013-02-16T14:05:57.333Z","type":"message"}
{"nick":"mikolalysenko","message":"but it is a bit clumsy","date":"2013-02-16T14:06:01.500Z","type":"message"}
{"nick":"mikolalysenko","message":"and in the browser I can use a worker","date":"2013-02-16T14:06:11.890Z","type":"message"}
{"nick":"mikolalysenko","message":"but the problem is that it is a bit opaque","date":"2013-02-16T14:06:18.312Z","type":"message"}
{"nick":"mikolalysenko","message":"but obviously not impossible","date":"2013-02-16T14:06:44.380Z","type":"message"}
{"nick":"mikolalysenko","message":"for example, I could just browserify each of my worker scripts and then spin up the workers as usual","date":"2013-02-16T14:07:00.658Z","type":"message"}
{"nick":"mikolalysenko","message":"the problem comes when I want to start writing things modularly","date":"2013-02-16T14:07:12.020Z","type":"message"}
{"nick":"mikolalysenko","message":"if I make a module that uses a worker internally, then anyone who includes my script via browserify needs to know that there is a worker in that script","date":"2013-02-16T14:07:34.473Z","type":"message"}
{"nick":"mikolalysenko","message":"and thus they have to host that script on their server/browserify it separately","date":"2013-02-16T14:07:48.747Z","type":"message"}
{"nick":"mikolalysenko","message":"which is a crazy proposition","date":"2013-02-16T14:07:54.018Z","type":"message"}
{"nick":"mikolalysenko","message":"does this make sense so far?","date":"2013-02-16T14:08:03.492Z","type":"message"}
{"nick":"mikolalysenko","message":"so, what I was thinking is that you could do it with one browserify script by doing a hack","date":"2013-02-16T14:09:08.123Z","type":"message"}
{"nick":"mikolalysenko","message":"what you would need to do is keep track of all the different worker scripts, and then generate one bundle","date":"2013-02-16T14:09:23.959Z","type":"message"}
{"nick":"mikolalysenko","message":"then when you start a worker you could basically spin up the main entry script, wait until you get a message and then switch to the appropriate bundle","date":"2013-02-16T14:10:07.139Z","type":"message"}
{"nick":"mikolalysenko","message":"specifying the worker entry points could probably be done using package.json","date":"2013-02-16T14:10:20.373Z","type":"message"}
{"nick":"mikolalysenko","message":"but you would need to add some special loader code to the start of your entry in browserify","date":"2013-02-16T14:11:01.474Z","type":"message"}
{"nick":"mikolalysenko","message":"so it still isn't very seamless","date":"2013-02-16T14:11:09.105Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: you can dynamically create webworkers without having to host a file","date":"2013-02-16T14:13:42.790Z","type":"message"}
{"nick":"jden__","date":"2013-02-16T14:15:26.115Z","type":"join"}
{"nick":"mikolalysenko","message":"chrisdickinson:  yeah, but what if I want to require something in my workers?","date":"2013-02-16T14:15:40.496Z","type":"message"}
{"nick":"chrisdickinson","message":"worker = new Worker(URL.getObjectURL(new Blob(['('+function(){ global.isWorker = true; importScripts('bundle.js'); }+')()'], {type: 'text/javascript'}))","date":"2013-02-16T14:16:20.378Z","type":"message"}
{"nick":"chrisdickinson","message":"well, in this case `global.isWorker` would be `this.isWorker`","date":"2013-02-16T14:16:45.015Z","type":"message"}
{"nick":"chrisdickinson","message":"and then in your entry point you can check to see if the current context is a worker or not","date":"2013-02-16T14:17:00.719Z","type":"message"}
{"nick":"mikolalysenko","message":"chrisdickinson: right, I know it should work","date":"2013-02-16T14:18:08.164Z","type":"message"}
{"nick":"mikolalysenko","message":"but the problem is if I write a module that uses a worker, there is no standard protocol for my users to follow","date":"2013-02-16T14:18:25.968Z","type":"message"}
{"nick":"mikolalysenko","message":"for example, say I want to write a module to asynchronously process large chunks of volumetric data","date":"2013-02-16T14:18:45.085Z","type":"message"}
{"nick":"mikolalysenko","message":"I'd prefer to spin up a worker to do the computations rather than block the main thread","date":"2013-02-16T14:19:04.148Z","type":"message"}
{"nick":"mikolalysenko","message":"and I'd also like people to be able to use my library doing the simple npm install/require syntax","date":"2013-02-16T14:19:40.312Z","type":"message"}
{"nick":"mikolalysenko","message":"if I have to make a custom entry, then that means that anyone who uses my module will need to check for workers and dispatch the appropriate worker entry point which kind of sucks","date":"2013-02-16T14:20:13.326Z","type":"message"}
{"nick":"chrisdickinson","message":"ah, i see","date":"2013-02-16T14:20:48.066Z","type":"message"}
{"nick":"chrisdickinson","message":"if two people use this strategy in a given bundle it gets hairy, is what you're saying?","date":"2013-02-16T14:21:07.837Z","type":"message"}
{"nick":"mikolalysenko","message":"yes","date":"2013-02-16T14:21:11.568Z","type":"message"}
{"nick":"mikolalysenko","message":"and if I use a library, that is using this sort of strategy, how do I know to implement it properly?","date":"2013-02-16T14:21:30.970Z","type":"message"}
{"nick":"chrisdickinson","message":"this seems like it'd be easy to roll up into a module","date":"2013-02-16T14:21:38.089Z","type":"message"}
{"nick":"mikolalysenko","message":"maybe","date":"2013-02-16T14:21:51.841Z","type":"message"}
{"nick":"mikolalysenko","message":"though what would be best is if there was a way to override the entry script in browserify","date":"2013-02-16T14:22:05.067Z","type":"message"}
{"nick":"mikolalysenko","message":"like before it loads, you could specify global.entry = \"myworker.js\" and then do that instead of running the main script","date":"2013-02-16T14:22:25.666Z","type":"message"}
{"nick":"chrisdickinson","message":"var bfyworker = require('bfyworker'); if(!global.isWorker && !global.workerContext === 'bloo') { var worker = bfyworker('bloo') }","date":"2013-02-16T14:22:32.629Z","type":"message"}
{"nick":"chrisdickinson","message":"yeah, the fact that it works like `fork` is a little weird","date":"2013-02-16T14:23:01.576Z","type":"message"}
{"nick":"mikolalysenko","message":"I think you could pretty easily emulate workers node-side using child_process.execFile","date":"2013-02-16T14:24:36.017Z","type":"message"}
{"nick":"mikolalysenko","message":"but coming up with an API that is acceptable on both sides could be tough","date":"2013-02-16T14:25:11.683Z","type":"message"}
{"nick":"mikolalysenko","message":"it might enough in browserify if it was possible to dynamically change the entry point of the bundle","date":"2013-02-16T14:26:05.242Z","type":"message"}
{"nick":"mikolalysenko","message":"also is there a good way to get the path to the current script?","date":"2013-02-16T14:26:17.049Z","type":"message"}
{"nick":"chrisdickinson","message":"so, you can get the source of the current bundle from the root of a module","date":"2013-02-16T14:26:24.997Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, in node it is possible","date":"2013-02-16T14:27:00.303Z","type":"message"}
{"nick":"mikolalysenko","message":"but thinking ahead in the browser, what you want to do is call imporScripts('bundle.js') in the worker","date":"2013-02-16T14:27:18.207Z","type":"message"}
{"nick":"chrisdickinson","message":"no, i mean from inside the module in the browser","date":"2013-02-16T14:27:23.779Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2013-02-16T14:27:34.927Z","type":"message"}
{"nick":"chrisdickinson","message":"and you can get the arguments that require.define was called with","date":"2013-02-16T14:27:43.700Z","type":"message"}
{"nick":"chrisdickinson","message":"well.","date":"2013-02-16T14:27:52.531Z","type":"message"}
{"nick":"chrisdickinson","message":"sort of.","date":"2013-02-16T14:27:53.961Z","type":"message"}
{"nick":"chrisdickinson","message":"forgot about \"use strict\", raining on my parade.","date":"2013-02-16T14:28:01.703Z","type":"message"}
{"nick":"chrisdickinson","message":"arguments.callee.caller.caller","date":"2013-02-16T14:28:09.524Z","type":"message"}
{"nick":"chrisdickinson","message":"the caller with a caller property of null will contain the entire source of the bundle","date":"2013-02-16T14:29:15.191Z","type":"message"}
{"nick":"mikolalysenko","message":"is there a way in browserify to toggle executing the entry depending on a flag?","date":"2013-02-16T14:29:25.253Z","type":"message"}
{"nick":"mikolalysenko","message":"for example, could I do:  global.noEntry = true;  importScripts('bundle.js');","date":"2013-02-16T14:29:45.016Z","type":"message"}
{"nick":"chrisdickinson","message":"i don't think so","date":"2013-02-16T14:29:45.674Z","type":"message"}
{"nick":"mikolalysenko","message":"then once I get a message, I could just load up the appropriate module","date":"2013-02-16T14:29:58.528Z","type":"message"}
{"nick":"mikolalysenko","message":"the other thing you would need though is that you'd have to specify a list of all the worker entry points to bundle, but that should be doable with package.json","date":"2013-02-16T14:30:57.663Z","type":"message"}
{"nick":"AvianFlu","date":"2013-02-16T14:31:12.232Z","type":"join"}
{"nick":"jden__","reason":"Ping timeout: 264 seconds","date":"2013-02-16T14:31:18.130Z","type":"quit"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-02-16T14:31:45.260Z","type":"message"}
{"nick":"mikolalysenko","message":"I think making these changes could be a minimally invasive solution to the worker problem","date":"2013-02-16T14:32:11.716Z","type":"message"}
{"nick":"mikolalysenko","message":"also using only one bundle should save on page load times, since modules can be reused between the worker/main thread","date":"2013-02-16T14:32:29.298Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: so if you could safely disregard \"use strict\" (which might be prohibitive), you could simply get the bundle sources using the arguments.callee.caller trick, remove the last instance of /;,*;}/, and replace it with \"this.require = require\"","date":"2013-02-16T14:32:34.299Z","type":"message"}
{"nick":"mikolalysenko","message":"chrisdickinson:  ah!  that's pretty clever","date":"2013-02-16T14:33:04.351Z","type":"message"}
{"nick":"mikolalysenko","message":"have you considered making a module to do that?","date":"2013-02-16T14:33:47.343Z","type":"message"}
{"nick":"chrisdickinson","message":"thinking about it now :)","date":"2013-02-16T14:33:57.227Z","type":"message"}
{"nick":"chrisdickinson","message":"it falls down if any module calling you uses \"use strict\", because arguments.callee goes away in strict mode","date":"2013-02-16T14:34:13.455Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-02-16T14:34:19.254Z","type":"message"}
{"nick":"mikolalysenko","message":"good point","date":"2013-02-16T14:34:29.494Z","type":"message"}
{"nick":"chrisdickinson","message":"browserify could remove all \"use strict\" commands :)","date":"2013-02-16T14:34:51.014Z","type":"message"}
{"nick":"mikolalysenko","message":"no, that would be bad","date":"2013-02-16T14:34:57.844Z","type":"message"}
{"nick":"chrisdickinson","message":"yeahhh, i know","date":"2013-02-16T14:35:03.630Z","type":"message"}
{"nick":"chrisdickinson","message":"i just dislike \"use strict\" ):","date":"2013-02-16T14:35:08.520Z","type":"message"}
{"nick":"mikolalysenko","message":"maybe you could add a way for browserify to call the script on start up?","date":"2013-02-16T14:35:21.926Z","type":"message"}
{"nick":"mikolalysenko","message":"sort of like a pre-emptive require","date":"2013-02-16T14:35:29.912Z","type":"message"}
{"nick":"mikolalysenko","message":"that way you could grab the source of the main module when it first loads","date":"2013-02-16T14:35:46.209Z","type":"message"}
{"nick":"mikolalysenko","message":"before any \"use strict\";s get called","date":"2013-02-16T14:36:02.258Z","type":"message"}
{"nick":"chrisdickinson","message":"oh, or even better: `require.source = arguments.callee+''`","date":"2013-02-16T14:36:22.897Z","type":"message"}
{"nick":"mikolalysenko","message":"ah!  that would work","date":"2013-02-16T14:36:33.844Z","type":"message"}
{"nick":"chrisdickinson","message":"which would work because browserify's preamble isn't \"use strict\"","date":"2013-02-16T14:36:36.469Z","type":"message"}
{"nick":"mikolalysenko","message":"very clever","date":"2013-02-16T14:37:09.053Z","type":"message"}
{"nick":"mikolalysenko","message":"is there a standard way to add stuff to the preamble?","date":"2013-02-16T14:37:27.130Z","type":"message"}
{"nick":"mikolalysenko","message":"what happens if I use two modules that are using this trick?","date":"2013-02-16T14:37:35.737Z","type":"message"}
{"nick":"chrisdickinson","message":"wouldn't matter, browserify only ever has the concept of a single entry point","date":"2013-02-16T14:37:52.565Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-02-16T14:37:59.089Z","type":"message"}
{"nick":"chrisdickinson","message":"both modules could grab the source code and use it however they like","date":"2013-02-16T14:38:02.052Z","type":"message"}
{"nick":"mikolalysenko","message":"but that means that users need to know about this trick if they include a module with workers","date":"2013-02-16T14:38:17.215Z","type":"message"}
{"nick":"mikolalysenko","message":"which is not so great","date":"2013-02-16T14:38:23.737Z","type":"message"}
{"nick":"mikolalysenko","message":"since they would have to add a require.source = arguments.callee","date":"2013-02-16T14:38:43.089Z","type":"message"}
{"nick":"mikolalysenko","message":"err +''","date":"2013-02-16T14:38:52.673Z","type":"message"}
{"nick":"chrisdickinson","message":"that's why i'm forking browserify and adding it to the preamble","date":"2013-02-16T14:38:55.075Z","type":"message"}
{"nick":"chrisdickinson","message":"so that users won't have to know","date":"2013-02-16T14:39:06.943Z","type":"message"}
{"nick":"mikolalysenko","message":"great","date":"2013-02-16T14:39:19.159Z","type":"message"}
{"nick":"chrisdickinson","message":"and they can just use whatever neat little web worker modules fall out of this :)","date":"2013-02-16T14:39:19.974Z","type":"message"}
{"nick":"mikolalysenko","message":"alright, I am excited","date":"2013-02-16T14:39:30.593Z","type":"message"}
{"nick":"mikolalysenko","message":"also:  double check, it is possible to add extra modules/requires to browserify via package.json?","date":"2013-02-16T14:43:44.788Z","type":"message"}
{"nick":"chrisdickinson","message":"i think so?","date":"2013-02-16T14:43:58.764Z","type":"message"}
{"nick":"chrisdickinson","message":"not sure.","date":"2013-02-16T14:44:00.576Z","type":"message"}
{"nick":"mikolalysenko","message":"wait, I got a screwy idea","date":"2013-02-16T14:49:27.875Z","type":"message"}
{"nick":"mikolalysenko","message":"oh never mind it won't work","date":"2013-02-16T14:49:56.539Z","type":"message"}
{"nick":"chrisdickinson","message":"i got one too","date":"2013-02-16T14:54:17.862Z","type":"message"}
{"nick":"chrisdickinson","message":"oo","date":"2013-02-16T14:55:16.187Z","type":"message"}
{"nick":"chrisdickinson","message":"and this one might work","date":"2013-02-16T14:55:18.733Z","type":"message"}
{"nick":"jden_","date":"2013-02-16T14:57:35.052Z","type":"join"}
{"nick":"jden_","new_nick":"Guest60195","date":"2013-02-16T14:57:58.382Z","type":"nick"}
{"nick":"mikolalysenko","message":"suggestion:  maybe put it in process?","date":"2013-02-16T15:00:35.324Z","type":"message"}
{"nick":"mikolalysenko","message":"perhaps it should be process.source = arguments.callee + '';","date":"2013-02-16T15:00:46.794Z","type":"message"}
{"nick":"mikolalysenko","message":"instead of require","date":"2013-02-16T15:00:51.368Z","type":"message"}
{"nick":"mikolalysenko","message":"that way you can just modify the module instead of digging around in the guts of browserify","date":"2013-02-16T15:01:23.389Z","type":"message"}
{"nick":"mikolalysenko","message":"I think it is in builtins/__browserify_process.js","date":"2013-02-16T15:02:03.699Z","type":"message"}
{"nick":"mikolalysenko","message":"chrisdickinsin: ^^^","date":"2013-02-16T15:02:10.501Z","type":"message"}
{"nick":"mikolalysenko","message":"*chrisdickinson","date":"2013-02-16T15:02:49.056Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: i think we may not have to fork after all","date":"2013-02-16T15:13:47.293Z","type":"message"}
{"nick":"Guest60195","reason":"Ping timeout: 244 seconds","date":"2013-02-16T15:13:55.101Z","type":"quit"}
{"nick":"chrisdickinson","message":"will update in a second!","date":"2013-02-16T15:14:05.043Z","type":"message"}
{"nick":"mikolalysenko","message":"ok!","date":"2013-02-16T15:21:00.942Z","type":"message"}
{"nick":"chrisdickinson","message":"hmmm","date":"2013-02-16T15:33:03.739Z","type":"message"}
{"nick":"chrisdickinson","message":"was hoping to use require.modules","date":"2013-02-16T15:33:07.720Z","type":"message"}
{"nick":"chrisdickinson","message":"stymied though","date":"2013-02-16T15:33:13.132Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-02-16T15:35:19.968Z","type":"message"}
{"nick":"mikolalysenko","message":"what do you think of my suggestion above?","date":"2013-02-16T15:35:43.545Z","type":"message"}
{"nick":"mikolalysenko","message":"of adding the source to __browserify_process","date":"2013-02-16T15:35:52.488Z","type":"message"}
{"nick":"mikolalysenko","message":"that gets loaded before any modules, and doesn't use strict","date":"2013-02-16T15:36:09.544Z","type":"message"}
{"nick":"xaq","date":"2013-02-16T15:36:16.612Z","type":"join"}
{"nick":"mikolalysenko","message":"and it requires minimal modification of the run time","date":"2013-02-16T15:36:19.558Z","type":"message"}
{"nick":"mikolalysenko","message":"also another problem occurred to me...","date":"2013-02-16T15:36:40.719Z","type":"message"}
{"nick":"mikolalysenko","message":"what happens if the source gets minified?  can we still just patch the bundle like you are suggesting?","date":"2013-02-16T15:37:02.371Z","type":"message"}
{"nick":"mikolalysenko","message":"it may be more robust to add a global flag to toggle on/off the default entry","date":"2013-02-16T15:37:30.591Z","type":"message"}
{"nick":"mikolalysenko","message":"and for another thing:  workers are a little complicated","date":"2013-02-16T15:37:59.068Z","type":"message"}
{"nick":"mikolalysenko","message":"they can't do console.log like in a browser","date":"2013-02-16T15:38:10.587Z","type":"message"}
{"nick":"mikolalysenko","message":"but those issues can probably be patched within whatever module implements them","date":"2013-02-16T15:38:26.162Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: what i'm thinking is that if we add a pointer to the original module function in require.modules['name'], we can easily reassemble the bundle for a worker","date":"2013-02-16T15:39:33.771Z","type":"message"}
{"nick":"chrisdickinson","message":"https://github.com/chrisdickinson/node-browserify","date":"2013-02-16T15:39:36.668Z","type":"message"}
{"nick":"jden_","date":"2013-02-16T15:40:16.205Z","type":"join"}
{"nick":"chrisdickinson","message":"ah damn, my dns isn't resolving correctly ):","date":"2013-02-16T15:40:30.164Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-02-16T15:40:36.793Z","type":"message"}
{"nick":"jden_","new_nick":"Guest75510","date":"2013-02-16T15:40:38.675Z","type":"nick"}
{"nick":"mikolalysenko","message":"what I am concerned about is what happens if the bundle gets uglify'd or something?","date":"2013-02-16T15:40:49.994Z","type":"message"}
{"nick":"mikolalysenko","message":"can we still reassemble it?","date":"2013-02-16T15:40:58.926Z","type":"message"}
{"nick":"chrisdickinson","message":"shouldn't matter if we go this route","date":"2013-02-16T15:40:59.520Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2013-02-16T15:41:06.815Z","type":"message"}
{"nick":"chrisdickinson","message":"https://github.com/chrisdickinson/node-browserify/commit/865b92682c238c72b562d83215687a11bfeb61fc","date":"2013-02-16T15:41:21.548Z","type":"message"}
{"nick":"mikolalysenko","message":"will that work?","date":"2013-02-16T15:42:03.605Z","type":"message"}
{"nick":"chrisdickinson","message":"trying it","date":"2013-02-16T15:42:20.855Z","type":"message"}
{"nick":"chrisdickinson","message":"woot","date":"2013-02-16T15:55:12.295Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: this is the sort of base api it would enable: https://gist.github.com/chrisdickinson/53041c1e8efa064b543c","date":"2013-02-16T15:55:46.172Z","type":"message"}
{"nick":"Guest75510","reason":"Ping timeout: 244 seconds","date":"2013-02-16T15:55:46.312Z","type":"quit"}
{"nick":"chrisdickinson","message":"(and it works with my fork)","date":"2013-02-16T15:55:58.360Z","type":"message"}
{"nick":"chrisdickinson","message":"was going to go a bit further and make workers \"pause\" streams","date":"2013-02-16T15:56:28.255Z","type":"message"}
{"nick":"chrisdickinson","message":"but that'd be better as a higher level module anyway","date":"2013-02-16T15:56:36.154Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-02-16T16:00:40.252Z","type":"message"}
{"nick":"mikolalysenko","message":"if I use the module, can I \"use strict\"?","date":"2013-02-16T16:00:49.674Z","type":"message"}
{"nick":"mikolalysenko","message":"though I like the syntax","date":"2013-02-16T16:01:40.521Z","type":"message"}
{"nick":"mikolalysenko","message":"but it might be a bit misleading to create workers via a closure, since there is no way to capture variables and pass them to the worker","date":"2013-02-16T16:02:01.882Z","type":"message"}
{"nick":"mikolalysenko","message":"I was thinking it might be simpler to stick to the WebWorker/child_process.execFile model and make each worker a separate script","date":"2013-02-16T16:02:27.857Z","type":"message"}
{"nick":"mikolalysenko","message":"but this might just be me thinking to fixedly","date":"2013-02-16T16:02:37.357Z","type":"message"}
{"nick":"chrisdickinson","message":"you can use strict","date":"2013-02-16T16:03:51.348Z","type":"message"}
{"nick":"chrisdickinson","message":"you can also use a string","date":"2013-02-16T16:03:59.053Z","type":"message"}
{"nick":"chrisdickinson","message":"but the other nice thing about using functions is that browserify will pick up on requires within them","date":"2013-02-16T16:04:22.200Z","type":"message"}
{"nick":"mikolalysenko","message":"that's a good point","date":"2013-02-16T16:05:39.301Z","type":"message"}
{"nick":"mikolalysenko","message":"I am thinking though about how to emulate it on the node side","date":"2013-02-16T16:05:56.256Z","type":"message"}
{"nick":"mikolalysenko","message":"since you would ideally want an api that works the same in both situations","date":"2013-02-16T16:06:14.676Z","type":"message"}
{"nick":"dguttman","date":"2013-02-16T16:09:02.756Z","type":"join"}
{"nick":"jden__","date":"2013-02-16T16:22:35.941Z","type":"join"}
{"nick":"chrisdickinson","message":"combined with a streaming api, it could be pretty neat","date":"2013-02-16T16:24:03.911Z","type":"message"}
{"nick":"chrisdickinson","message":"someSetOfRequests.pipe(throughWorker(function(data) { /* crunch data */; this.emit('data', data) }).pipe(somethingElse)","date":"2013-02-16T16:24:59.859Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, I think so too","date":"2013-02-16T16:25:38.479Z","type":"message"}
{"nick":"mikolalysenko","message":"though it would probably be better to make the basic worker api just do simple event emitter stuff","date":"2013-02-16T16:26:02.106Z","type":"message"}
{"nick":"mikolalysenko","message":"making it as close to the browser as possible","date":"2013-02-16T16:26:10.419Z","type":"message"}
{"nick":"mikolalysenko","message":"though I could definitely see building a higher level stream api on top of that being very cool and useful","date":"2013-02-16T16:26:37.167Z","type":"message"}
{"nick":"mikolalysenko","message":"for example, a zlib worker in your browser","date":"2013-02-16T16:26:58.606Z","type":"message"}
{"nick":"mikolalysenko","message":"but you may also want to create other workers too","date":"2013-02-16T16:27:31.060Z","type":"message"}
{"nick":"mikolalysenko","message":"in voxel.js, for example, it would make sense to do all the mesh generation in a worker","date":"2013-02-16T16:27:44.856Z","type":"message"}
{"nick":"mikolalysenko","message":"and for that I don't know that streaming makes the most sense","date":"2013-02-16T16:28:13.510Z","type":"message"}
{"nick":"chrisdickinson","message":"in that the stream could pause whenever a request is sent and unpause when a response is received, it might make sense","date":"2013-02-16T16:29:01.961Z","type":"message"}
{"nick":"chrisdickinson","message":"plus, it caches url + fn -> object url, so you can create a bunch of identical workers","date":"2013-02-16T16:29:36.318Z","type":"message"}
{"nick":"chrisdickinson","message":"i mean, path + fn","date":"2013-02-16T16:29:58.619Z","type":"message"}
{"nick":"chrisdickinson","message":"to object url","date":"2013-02-16T16:30:01.898Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-02-16T16:30:07.158Z","type":"message"}
{"nick":"mikolalysenko","message":"ok, but I am still confused about the use strict problem in node","date":"2013-02-16T16:30:21.576Z","type":"message"}
{"nick":"chrisdickinson","message":"(no need to regenerate the source and the blob and the object url)","date":"2013-02-16T16:30:23.411Z","type":"message"}
{"nick":"chrisdickinson","message":"there shouldn't be one","date":"2013-02-16T16:30:28.435Z","type":"message"}
{"nick":"chrisdickinson","message":"with this","date":"2013-02-16T16:30:32.083Z","type":"message"}
{"nick":"mikolalysenko","message":"ok, how does it work?","date":"2013-02-16T16:30:38.430Z","type":"message"}
{"nick":"mikolalysenko","message":"I call worker(function() { my code })","date":"2013-02-16T16:30:47.960Z","type":"message"}
{"nick":"mikolalysenko","message":"then how does it create the child process to do the work?","date":"2013-02-16T16:30:57.490Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: https://gist.github.com/chrisdickinson/5f637d50610e4e070fdc","date":"2013-02-16T16:31:27.377Z","type":"message"}
{"nick":"chrisdickinson","message":"it'll be worker(function() {}, working_directory)","date":"2013-02-16T16:31:52.044Z","type":"message"}
{"nick":"mikolalysenko","message":"ah, I see!","date":"2013-02-16T16:32:01.995Z","type":"message"}
{"nick":"chrisdickinson","message":"it just rebuilds the bundle :)","date":"2013-02-16T16:32:11.570Z","type":"message"}
{"nick":"mikolalysenko","message":"I didn't realize fn + '' gives you the source code","date":"2013-02-16T16:32:12.056Z","type":"message"}
{"nick":"chrisdickinson","message":"yep!","date":"2013-02-16T16:32:20.372Z","type":"message"}
{"nick":"mikolalysenko","message":"cool!","date":"2013-02-16T16:32:29.423Z","type":"message"}
{"nick":"chrisdickinson","message":"Function#toString returns the original source of the function","date":"2013-02-16T16:32:33.007Z","type":"message"}
{"nick":"mikolalysenko","message":"alright, I think this will definitely work","date":"2013-02-16T16:32:39.075Z","type":"message"}
{"nick":"chrisdickinson","message":"it's handy for scope rewriting","date":"2013-02-16T16:32:40.054Z","type":"message"}
{"nick":"chrisdickinson","message":"new_fn = Function('some', 'new', 'args', 'return '+fn)","date":"2013-02-16T16:33:02.690Z","type":"message"}
{"nick":"chrisdickinson","message":"assuming substack is okay with merging in the change","date":"2013-02-16T16:33:36.727Z","type":"message"}
{"nick":"mikolalysenko","message":"it is pretty minor, so I don't see why not","date":"2013-02-16T16:33:52.469Z","type":"message"}
{"nick":"chrisdickinson","message":"https://github.com/substack/node-browserify/pull/284","date":"2013-02-16T16:34:01.336Z","type":"message"}
{"nick":"mikolalysenko","message":"ok, I like where this is going","date":"2013-02-16T16:35:12.607Z","type":"message"}
{"nick":"jden__","reason":"Ping timeout: 256 seconds","date":"2013-02-16T16:38:28.489Z","type":"quit"}
{"nick":"shuaib","date":"2013-02-16T16:43:14.544Z","type":"join"}
{"nick":"chrisdickinson","message":"mikolalysenko: https://github.com/chrisdickinson/bfy-worker","date":"2013-02-16T16:43:25.578Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 255 seconds","date":"2013-02-16T16:45:59.587Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-02-16T16:53:16.024Z","type":"join"}
{"nick":"jden_","date":"2013-02-16T17:04:15.115Z","type":"join"}
{"nick":"jden_","new_nick":"Guest41095","date":"2013-02-16T17:04:39.595Z","type":"nick"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-02-16T17:19:48.184Z","type":"quit"}
{"nick":"Guest41095","reason":"Ping timeout: 264 seconds","date":"2013-02-16T17:19:54.116Z","type":"quit"}
{"nick":"dguttman","date":"2013-02-16T17:21:29.880Z","type":"join"}
{"nick":"dguttman","reason":"Client Quit","date":"2013-02-16T17:24:27.763Z","type":"quit"}
{"nick":"mikolalysenko","message":"chrisdickinson: for bfy-worker, have you started making a server-side version yet?","date":"2013-02-16T17:30:35.459Z","type":"message"}
{"nick":"chrisdickinson","message":"nope","date":"2013-02-16T17:30:41.694Z","type":"message"}
{"nick":"chrisdickinson","message":"server side is a little more complicated i think","date":"2013-02-16T17:30:49.917Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah","date":"2013-02-16T17:31:10.961Z","type":"message"}
{"nick":"mikolalysenko","message":"might be good to try to meet in the middle","date":"2013-02-16T17:31:17.582Z","type":"message"}
{"nick":"mikolalysenko","message":"maybe wrap process.on in the WebWorker version to handle the onmessage?","date":"2013-02-16T17:31:39.777Z","type":"message"}
{"nick":"chrisdickinson","message":"is there any equivalent for postMessage?","date":"2013-02-16T17:32:41.146Z","type":"message"}
{"nick":"chrisdickinson","message":"(from a worker?)","date":"2013-02-16T17:32:46.354Z","type":"message"}
{"nick":"mikolalysenko","message":"process.emit?","date":"2013-02-16T17:32:48.567Z","type":"message"}
{"nick":"mikolalysenko","message":"I don't really know the best solution tbh","date":"2013-02-16T17:33:07.486Z","type":"message"}
{"nick":"mikolalysenko","message":"but I think whatever happens it will need to meet in the middle somehow","date":"2013-02-16T17:33:21.814Z","type":"message"}
{"nick":"mikolalysenko","message":"since neither node's child_process or WebWorkers are completely ideal","date":"2013-02-16T17:33:50.692Z","type":"message"}
{"nick":"chrisdickinson","message":"yeah","date":"2013-02-16T17:34:17.293Z","type":"message"}
{"nick":"spion","date":"2013-02-16T17:34:29.474Z","type":"join"}
{"nick":"chrisdickinson","message":"it's probably best to do the process.on/emit thing in web workers","date":"2013-02-16T17:34:30.104Z","type":"message"}
{"nick":"mikolalysenko","message":"and I think you could make a similar thing work in node's child_process.execFile","date":"2013-02-16T17:35:00.697Z","type":"message"}
{"nick":"mikolalysenko","message":"also important is that at least on the browser you should be able to take advantage of sharing typed arrays","date":"2013-02-16T17:35:57.250Z","type":"message"}
{"nick":"mikolalysenko","message":"and though it isn't possible yet in node, we wouldn't want to rule it out as a future extension","date":"2013-02-16T17:36:15.832Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: basically in node we'd have to be somewhat opinionated about how the processes talk to one another","date":"2013-02-16T17:36:42.942Z","type":"message"}
{"nick":"hij1nx","message":"defunctzombie_zz: ping","date":"2013-02-16T17:36:50.180Z","type":"message"}
{"nick":"mikolalysenko","message":"chrisdickinson: agreed","date":"2013-02-16T17:37:18.193Z","type":"message"}
{"nick":"mikolalysenko","message":"maybe you could do something like extend the process object for the child","date":"2013-02-16T17:37:30.185Z","type":"message"}
{"nick":"mikolalysenko","message":"like add an extra method called \"send\"","date":"2013-02-16T17:37:45.659Z","type":"message"}
{"nick":"mikolalysenko","message":"since emit might have undesirable consequences...","date":"2013-02-16T17:37:53.352Z","type":"message"}
{"nick":"chrisdickinson","message":"ah, we want child_process.fork -- it does what we want","date":"2013-02-16T17:38:14.691Z","type":"message"}
{"nick":"chrisdickinson","message":".send / .on","date":"2013-02-16T17:38:18.771Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2013-02-16T17:38:20.367Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, that works","date":"2013-02-16T17:38:42.678Z","type":"message"}
{"nick":"chrisdickinson","message":"yeah, this package will be one of the ones with a \"browserify\": field in the package.json so it'll just work wherever you require it","date":"2013-02-16T17:38:48.506Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2013-02-16T17:39:03.306Z","type":"message"}
{"nick":"chrisdickinson","message":"although, hmm","date":"2013-02-16T17:39:11.310Z","type":"message"}
{"nick":"chrisdickinson","message":"it has to be a file","date":"2013-02-16T17:39:14.114Z","type":"message"}
{"nick":"chrisdickinson","message":"blergh","date":"2013-02-16T17:39:15.735Z","type":"message"}
{"nick":"chrisdickinson","message":"i can get around that i think","date":"2013-02-16T17:39:31.302Z","type":"message"}
{"nick":"chrisdickinson","message":"actually","date":"2013-02-16T17:39:32.451Z","type":"message"}
{"nick":"chrisdickinson","message":"haha","date":"2013-02-16T17:39:34.535Z","type":"message"}
{"nick":"mikolalysenko","message":"make a temp file and cat the function into it?","date":"2013-02-16T17:40:09.258Z","type":"message"}
{"nick":"chrisdickinson","message":"nah","date":"2013-02-16T17:42:11.067Z","type":"message"}
{"nick":"chrisdickinson","message":"add a file to the module that has `process.once('data', function(data) { execute(data) })`","date":"2013-02-16T17:42:40.976Z","type":"message"}
{"nick":"chrisdickinson","message":"essentially","date":"2013-02-16T17:42:45.211Z","type":"message"}
{"nick":"mikolalysenko","message":"ok, that works","date":"2013-02-16T17:43:01.511Z","type":"message"}
{"nick":"mikolalysenko","message":"also:  how can we expose this functionality in webworkers:  https://developer.mozilla.org/en-US/docs/DOM/Using_web_workers#Passing_data_by_transferring_.C2.A0ownership_(transferable_objects)","date":"2013-02-16T17:43:21.851Z","type":"message"}
{"nick":"mikolalysenko","message":"since not having transferrable objects really sucks","date":"2013-02-16T17:43:31.169Z","type":"message"}
{"nick":"mikolalysenko","message":"without it, you spend most of your time in JSON.parse/JSON.stringify","date":"2013-02-16T17:43:50.460Z","type":"message"}
{"nick":"mikolalysenko","message":"we could maybe do something a little opaque","date":"2013-02-16T17:44:38.641Z","type":"message"}
{"nick":"mikolalysenko","message":"like transfer everything as a stream","date":"2013-02-16T17:44:44.746Z","type":"message"}
{"nick":"mikolalysenko","message":"then you could take advantage of this behavior by default","date":"2013-02-16T17:45:00.722Z","type":"message"}
{"nick":"mikolalysenko","message":"and if you want to send JSON stuff, you would be responsible for implementing your own protocol","date":"2013-02-16T17:45:21.254Z","type":"message"}
{"nick":"mikolalysenko","message":"here is a more readable article:  http://updates.html5rocks.com/2011/12/Transferable-Objects-Lightning-Fast","date":"2013-02-16T17:45:38.047Z","type":"message"}
{"nick":"chrisdickinson","action":"reads","date":"2013-02-16T17:45:44.176Z","type":"action"}
{"nick":"jden_","date":"2013-02-16T17:46:31.862Z","type":"join"}
{"nick":"mikolalysenko","message":"the performance difference of transferrable objects vs. serialized JSON is so huge you can't really ignore it","date":"2013-02-16T17:46:47.979Z","type":"message"}
{"nick":"jden_","new_nick":"Guest10458","date":"2013-02-16T17:46:55.362Z","type":"nick"}
{"nick":"chrisdickinson","message":"mikolalysenko: the other interesting bit: http://developers.whatwg.org/the-canvas-element.html#dom-canvas-transfercontroltoproxy","date":"2013-02-16T17:47:05.180Z","type":"message"}
{"nick":"chrisdickinson","message":"you can actually transfer the control of a canvas to a worker","date":"2013-02-16T17:47:26.256Z","type":"message"}
{"nick":"chrisdickinson","message":"not sure how we'd model that one :)","date":"2013-02-16T17:47:29.851Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah...","date":"2013-02-16T17:47:35.969Z","type":"message"}
{"nick":"mikolalysenko","message":"well, in node we don't have canvases but I am working on a webgl port","date":"2013-02-16T17:47:49.261Z","type":"message"}
{"nick":"mikolalysenko","message":"https://github.com/mikolalysenko/headless-gl","date":"2013-02-16T17:48:07.743Z","type":"message"}
{"nick":"chrisdickinson","message":"cool!","date":"2013-02-16T17:48:31.075Z","type":"message"}
{"nick":"mikolalysenko","message":"so being able to transfer a webgl context would be pretty awesome","date":"2013-02-16T17:48:56.871Z","type":"message"}
{"nick":"mikolalysenko","message":"also, I think that with the trasferrable canvas feature you could create gpu accelerated workers","date":"2013-02-16T17:49:12.783Z","type":"message"}
{"nick":"mikolalysenko","message":"which is too awesome to ignore","date":"2013-02-16T17:49:16.957Z","type":"message"}
{"nick":"chrisdickinson","message":"+1","date":"2013-02-16T17:49:36.922Z","type":"message"}
{"nick":"mikolalysenko","message":"maybe we could do something like give each worker their own canvas once they get started?","date":"2013-02-16T17:49:49.742Z","type":"message"}
{"nick":"mikolalysenko","message":"and then you could just move the canvases around in the dom in the main thread","date":"2013-02-16T17:50:10.009Z","type":"message"}
{"nick":"chrisdickinson","message":"i wouldn't want to make that assumption by default","date":"2013-02-16T17:50:33.972Z","type":"message"}
{"nick":"mikolalysenko","message":"it might be wasteful though if you don't need it","date":"2013-02-16T17:50:38.655Z","type":"message"}
{"nick":"mikolalysenko","message":"true","date":"2013-02-16T17:50:40.305Z","type":"message"}
{"nick":"chrisdickinson","message":"but yeah, maybe a similar library could do something like that","date":"2013-02-16T17:50:46.813Z","type":"message"}
{"nick":"mikolalysenko","message":"another possibility is we could have a protocol for a worker to request a canvas?","date":"2013-02-16T17:50:52.626Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, that could be in a separate library","date":"2013-02-16T17:51:00.685Z","type":"message"}
{"nick":"mikolalysenko","message":"I guess as long as you can get around in the guts of the workers it should be possible to hack something in","date":"2013-02-16T17:51:17.675Z","type":"message"}
{"nick":"hij1nx","message":"defunctzombie_zz: i dont get it; what do you think is wrong with `npm install`?","date":"2013-02-16T17:54:59.136Z","type":"message"}
{"nick":"ryan_stevens","date":"2013-02-16T17:56:51.703Z","type":"join"}
{"nick":"Guest10458","reason":"Ping timeout: 276 seconds","date":"2013-02-16T18:01:18.810Z","type":"quit"}
{"nick":"mikolalysenko","message":"chrisdickinson: hmm...  bad news, I couldn't get the canvas context transfer to work in chrome","date":"2013-02-16T18:06:00.263Z","type":"message"}
{"nick":"chrisdickinson","message":"yeah, not sure where (if anywhere) it's supported","date":"2013-02-16T18:06:14.783Z","type":"message"}
{"nick":"chrisdickinson","message":"it's just on the whatwg html5 page :|","date":"2013-02-16T18:06:21.988Z","type":"message"}
{"nick":"chrisdickinson","message":"probably works in opera","date":"2013-02-16T18:06:31.739Z","type":"message"}
{"nick":"chrisdickinson","message":"):","date":"2013-02-16T18:06:32.876Z","type":"message"}
{"nick":"mikolalysenko","message":"it is a cool feature","date":"2013-02-16T18:06:41.186Z","type":"message"}
{"nick":"mikolalysenko","message":"where do you go to submit bugs to chrome?","date":"2013-02-16T18:06:51.427Z","type":"message"}
{"nick":"mikolalysenko","message":"also, it would be neat if they had the same thing for webgl too","date":"2013-02-16T18:07:19.476Z","type":"message"}
{"nick":"chrisdickinson","message":"i'm not sure, actually","date":"2013-02-16T18:07:19.698Z","type":"message"}
{"nick":"chrisdickinson","message":"http://code.google.com/p/chromium/issues/list ?","date":"2013-02-16T18:07:20.869Z","type":"message"}
{"nick":"chrisdickinson","message":"i think it would be applicable to webgl","date":"2013-02-16T18:07:30.309Z","type":"message"}
{"nick":"mikolalysenko","message":"well, I don't think so","date":"2013-02-16T18:07:44.732Z","type":"message"}
{"nick":"mikolalysenko","message":"since it creates a CanvasRenderingContext2D","date":"2013-02-16T18:07:54.717Z","type":"message"}
{"nick":"mikolalysenko","message":"not a WebGLRenderingContext","date":"2013-02-16T18:07:59.970Z","type":"message"}
{"nick":"mikolalysenko","message":"the first is what you get from canvas.getContext(\"2d\")","date":"2013-02-16T18:08:10.306Z","type":"message"}
{"nick":"mikolalysenko","message":"while the other is from canvas.getContext(\"experimental-webgl\")","date":"2013-02-16T18:08:23.040Z","type":"message"}
{"nick":"mikolalysenko","message":"I guess they have a mailing list?","date":"2013-02-16T18:09:50.782Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2013-02-16T18:11:11.232Z","type":"quit"}
{"nick":"chrisdickinson","message":"thinking of separating transfer-control from send","date":"2013-02-16T18:11:13.793Z","type":"message"}
{"nick":"chrisdickinson","message":"events would get emitted as `transfer`","date":"2013-02-16T18:11:23.752Z","type":"message"}
{"nick":"chrisdickinson","message":"or receive, i guess","date":"2013-02-16T18:11:35.068Z","type":"message"}
{"nick":"chrisdickinson","message":"hm","date":"2013-02-16T18:11:42.703Z","type":"message"}
{"nick":"chrisdickinson","message":"dunno","date":"2013-02-16T18:11:44.148Z","type":"message"}
{"nick":"mikolalysenko","message":"maybe have a 'transfer' event","date":"2013-02-16T18:13:26.580Z","type":"message"}
{"nick":"mikolalysenko","message":"or 'canvas'","date":"2013-02-16T18:13:36.441Z","type":"message"}
{"nick":"mikolalysenko","message":"and use ArrayBuffers for the rest of the stuff","date":"2013-02-16T18:13:55.348Z","type":"message"}
{"nick":"jden__","date":"2013-02-16T18:27:55.854Z","type":"join"}
{"nick":"mikolalysenko","message":"chrisdickinson: looks like it is being discussed right now:  http://wiki.whatwg.org/wiki/CanvasInWorkers","date":"2013-02-16T18:28:38.310Z","type":"message"}
{"nick":"mikolalysenko","message":"not in the context of browserify, but in the bigger world of canvas/gpgpu/web workers","date":"2013-02-16T18:30:34.555Z","type":"message"}
{"nick":"chrisdickinson","message":"okay, so \"transfer\" is a sender semantic now","date":"2013-02-16T18:30:40.365Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, though it looks like support for canvas transfer is pretty limited now; but still it is good to have it available","date":"2013-02-16T18:33:05.319Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-16T18:39:25.290Z","type":"quit"}
{"nick":"jden__","reason":"Ping timeout: 248 seconds","date":"2013-02-16T18:43:15.875Z","type":"quit"}
{"nick":"ehd","message":"what was the name of the browserify-ing server again?","date":"2013-02-16T18:56:13.230Z","type":"message"}
{"nick":"mikolalysenko","message":"I have one called serverify","date":"2013-02-16T18:58:02.616Z","type":"message"}
{"nick":"mikolalysenko","message":"there are many others though","date":"2013-02-16T18:58:08.827Z","type":"message"}
{"nick":"mikolalysenko","message":"https://github.com/mikolalysenko/Serverify","date":"2013-02-16T18:58:19.697Z","type":"message"}
{"nick":"ehd","message":"cool thanks, i'll try that one","date":"2013-02-16T18:59:55.201Z","type":"message"}
{"nick":"mikeal","date":"2013-02-16T19:03:08.565Z","type":"join"}
{"nick":"ehd","message":"setting the port via --port [n] doesn't work though?","date":"2013-02-16T19:03:09.095Z","type":"message"}
{"nick":"chrisdickinson","message":"ehd: also browservefy","date":"2013-02-16T19:03:32.289Z","type":"message"}
{"nick":"chrisdickinson","message":"https://github.com/chrisdickinson/browservefy","date":"2013-02-16T19:03:38.215Z","type":"message"}
{"nick":"mikolalysenko","message":"also raynos has his own:  https://github.com/Raynos/browserify-server","date":"2013-02-16T19:06:52.941Z","type":"message"}
{"nick":"mikolalysenko","message":"and there are probably many others...","date":"2013-02-16T19:07:02.267Z","type":"message"}
{"nick":"jden_","date":"2013-02-16T19:09:31.454Z","type":"join"}
{"nick":"jden_","new_nick":"Guest58678","date":"2013-02-16T19:09:55.809Z","type":"nick"}
{"nick":"mikolalysenko","message":"ehd: crap, just realized I was reading the commandline arguments wrong","date":"2013-02-16T19:16:52.261Z","type":"message"}
{"nick":"mikolalysenko","message":"but I can't push the update until npm is back online","date":"2013-02-16T19:17:03.474Z","type":"message"}
{"nick":"Guest58678","reason":"Ping timeout: 260 seconds","date":"2013-02-16T19:23:07.446Z","type":"quit"}
{"nick":"chrisdickinson","message":"i think this worker thing'll be neat","date":"2013-02-16T19:29:36.026Z","type":"message"}
{"nick":"calvinfo_","reason":"Quit: Leaving","date":"2013-02-16T19:31:29.468Z","type":"quit"}
{"nick":"chrisdickinson","message":"sweet, console.log works","date":"2013-02-16T19:33:46.638Z","type":"message"}
{"nick":"mikolalysenko","message":"awesome!","date":"2013-02-16T19:34:42.111Z","type":"message"}
{"nick":"mikolalysenko","message":"if you get it working reliably, I will probably use it in half my projects","date":"2013-02-16T19:35:10.831Z","type":"message"}
{"nick":"chrisdickinson","message":":D","date":"2013-02-16T19:35:16.707Z","type":"message"}
{"nick":"chrisdickinson","message":"so it implements a streaming interface too","date":"2013-02-16T19:35:21.931Z","type":"message"}
{"nick":"mikolalysenko","message":"great!","date":"2013-02-16T19:35:27.037Z","type":"message"}
{"nick":"mikolalysenko","message":"with backpressure?","date":"2013-02-16T19:35:30.770Z","type":"message"}
{"nick":"chrisdickinson","message":"yep","date":"2013-02-16T19:35:34.433Z","type":"message"}
{"nick":"mikolalysenko","message":":D","date":"2013-02-16T19:35:37.868Z","type":"message"}
{"nick":"chrisdickinson","message":"it's a little backpressure happy at the moment","date":"2013-02-16T19:35:50.189Z","type":"message"}
{"nick":"chrisdickinson","message":"it works by setting paused to true every time you write data, and draining every time there's a heartbeat","date":"2013-02-16T19:36:04.240Z","type":"message"}
{"nick":"chrisdickinson","message":"i'm open to suggestions on that one","date":"2013-02-16T19:36:11.473Z","type":"message"}
{"nick":"mikolalysenko","message":"hmmm","date":"2013-02-16T19:36:21.279Z","type":"message"}
{"nick":"mikolalysenko","message":"maybe give it a counter?","date":"2013-02-16T19:36:32.042Z","type":"message"}
{"nick":"chrisdickinson","message":"sidenote: you can process.exit() inside of a worker now","date":"2013-02-16T19:36:34.515Z","type":"message"}
{"nick":"chrisdickinson","message":"with a return code","date":"2013-02-16T19:36:42.061Z","type":"message"}
{"nick":"mikolalysenko","message":"so it has like a backpressure buffer size","date":"2013-02-16T19:36:43.040Z","type":"message"}
{"nick":"mikolalysenko","message":"cool!","date":"2013-02-16T19:36:48.930Z","type":"message"}
{"nick":"mikolalysenko","message":"also, I had a crazy idea!  worker based stream filters","date":"2013-02-16T19:36:59.778Z","type":"message"}
{"nick":"chrisdickinson","message":"yes this","date":"2013-02-16T19:37:05.916Z","type":"message"}
{"nick":"chrisdickinson","message":"also, it'll try to use transfer instead of send by default on arraybuffers","date":"2013-02-16T19:37:24.754Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, that is a good idea","date":"2013-02-16T19:37:42.152Z","type":"message"}
{"nick":"jden_","date":"2013-02-16T19:49:42.852Z","type":"join"}
{"nick":"jden_","new_nick":"Guest44264","date":"2013-02-16T19:50:06.454Z","type":"nick"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2013-02-16T19:53:41.840Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-16T19:58:54.218Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-16T20:00:10.917Z","type":"join"}
{"nick":"Guest44264","reason":"Ping timeout: 248 seconds","date":"2013-02-16T20:03:15.909Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-02-16T20:06:21.654Z","type":"join"}
{"nick":"xaq","reason":"Remote host closed the connection","date":"2013-02-16T20:20:20.039Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-16T20:29:15.389Z","type":"quit"}
{"nick":"jden__","date":"2013-02-16T20:29:15.886Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-02-16T20:42:59.663Z","type":"quit"}
{"nick":"jden__","reason":"Ping timeout: 276 seconds","date":"2013-02-16T20:43:09.826Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-16T20:59:28.638Z","type":"join"}
{"nick":"ryan_stevens","date":"2013-02-16T21:07:50.782Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 255 seconds","date":"2013-02-16T21:08:26.406Z","type":"quit"}
{"nick":"jden_","date":"2013-02-16T21:08:41.113Z","type":"join"}
{"nick":"jden_","new_nick":"Guest24301","date":"2013-02-16T21:09:05.227Z","type":"nick"}
{"nick":"dguttman","date":"2013-02-16T21:10:57.912Z","type":"join"}
{"nick":"mikeal","date":"2013-02-16T21:15:18.299Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-02-16T21:16:06.254Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-02-16T21:18:05.278Z","type":"join"}
{"nick":"Guest24301","reason":"Ping timeout: 264 seconds","date":"2013-02-16T21:21:42.131Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2013-02-16T21:26:40.278Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-02-16T21:30:56.538Z","type":"quit"}
{"nick":"ryan_stevens","date":"2013-02-16T21:32:28.012Z","type":"join"}
{"nick":"mikeal","date":"2013-02-16T21:33:19.990Z","type":"join"}
{"nick":"devaholic","date":"2013-02-16T21:36:30.179Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-02-16T21:40:06.408Z","type":"nick"}
{"nick":"defunctzombie","message":"is the npm registry having problems?","date":"2013-02-16T21:42:52.215Z","type":"message"}
{"nick":"ralphtheninja","message":"defunctzombie: aye","date":"2013-02-16T21:43:38.166Z","type":"message"}
{"nick":"defunctzombie","message":"sadness","date":"2013-02-16T21:47:13.897Z","type":"message"}
{"nick":"defunctzombie","message":"hij1nx: ping","date":"2013-02-16T21:47:18.716Z","type":"message"}
{"nick":"jden_","date":"2013-02-16T21:47:27.112Z","type":"join"}
{"nick":"jden_","new_nick":"Guest18187","date":"2013-02-16T21:47:51.168Z","type":"nick"}
{"nick":"evbogue","date":"2013-02-16T21:50:22.123Z","type":"join"}
{"nick":"defunctzombie","message":"so we can't npm publish?","date":"2013-02-16T21:52:47.645Z","type":"message"}
{"nick":"ralphtheninja","message":"guess so","date":"2013-02-16T21:53:08.053Z","type":"message"}
{"nick":"ralphtheninja","message":"we need a p2p version of npm :)","date":"2013-02-16T21:53:34.278Z","type":"message"}
{"nick":"defunctzombie","message":"heh","date":"2013-02-16T21:54:04.896Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2013-02-16T21:54:05.748Z","type":"quit"}
{"nick":"evbogue","message":"p2p npm = actually a very good idea.","date":"2013-02-16T21:59:31.539Z","type":"message"}
{"nick":"ralphtheninja","message":"yes it is :)","date":"2013-02-16T21:59:39.847Z","type":"message"}
{"nick":"evbogue","message":"npm remote origin http://npm.yourserver.com/","date":"2013-02-16T22:00:21.337Z","type":"message"}
{"nick":"evbogue","message":"scuttlebutt syncs across servers","date":"2013-02-16T22:00:29.092Z","type":"message"}
{"nick":"evbogue","message":"or appropriote database","date":"2013-02-16T22:00:41.114Z","type":"message"}
{"nick":"ralphtheninja","message":"just ask the network for a certain module or a version of a module, or publish your stuff from your 'node'","date":"2013-02-16T22:00:48.853Z","type":"message"}
{"nick":"ralphtheninja","message":"don't even have to have eventual consistency, if the module is in the network you'll find it","date":"2013-02-16T22:01:41.556Z","type":"message"}
{"nick":"evbogue","message":"nice","date":"2013-02-16T22:01:48.747Z","type":"message"}
{"nick":"evbogue","message":"how do we build this?","date":"2013-02-16T22:06:39.399Z","type":"message"}
{"nick":"evbogue","message":"I vote we use node.","date":"2013-02-16T22:06:44.906Z","type":"message"}
{"nick":"ralphtheninja","message":"I vote node as well","date":"2013-02-16T22:07:09.312Z","type":"message"}
{"nick":"Raynos","message":"ehd: miko, I use browservefy for examples / demos now","date":"2013-02-16T22:12:20.536Z","type":"message"}
{"nick":"AvianFlu","date":"2013-02-16T22:20:15.668Z","type":"join"}
{"nick":"CryptoQuick","date":"2013-02-16T22:48:40.337Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-16T22:48:54.463Z","type":"quit"}
{"nick":"mikolalysenko","message":"Raynos:  ok, maybe I will switch to browservefy too","date":"2013-02-16T22:50:01.829Z","type":"message"}
{"nick":"mikeal","date":"2013-02-16T23:03:55.697Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-02-16T23:04:12.922Z","type":"quit"}
{"nick":"defunctzombie","message":"mikolalysenko: wtf.. why were you not already using it?!","date":"2013-02-16T23:12:49.298Z","type":"message"}
{"nick":"defunctzombie","message":"makes life so much simpler to just do it :)","date":"2013-02-16T23:12:57.647Z","type":"message"}
{"nick":"mikolalysenko","message":"I had serverify!","date":"2013-02-16T23:13:42.297Z","type":"message"}
{"nick":"mikolalysenko","message":"it is basically the exact same thing, except I was using it before I found out about browservefy","date":"2013-02-16T23:14:04.828Z","type":"message"}
{"nick":"defunctzombie","message":":)","date":"2013-02-16T23:14:09.507Z","type":"message"}
{"nick":"mikolalysenko","message":"and I've been too lazy to switch my projects over","date":"2013-02-16T23:14:15.357Z","type":"message"}
{"nick":"mikolalysenko","message":"https://github.com/mikolalysenko/Serverify","date":"2013-02-16T23:15:05.120Z","type":"message"}
{"nick":"mikolalysenko","message":"as soon as npm gets back online it is going to get hammered by everyone publishing a shit load of stuff all at once","date":"2013-02-16T23:15:24.984Z","type":"message"}
{"nick":"Raynos","message":"oh wait","date":"2013-02-16T23:16:29.764Z","type":"message"}
{"nick":"Raynos","message":"is npm down?","date":"2013-02-16T23:16:31.635Z","type":"message"}
{"nick":"Raynos","message":"wtf","date":"2013-02-16T23:16:33.194Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah","date":"2013-02-16T23:16:37.725Z","type":"message"}
{"nick":"mikolalysenko","message":"has been all day","date":"2013-02-16T23:16:39.887Z","type":"message"}
{"nick":"mikolalysenko","message":"can't publish :(","date":"2013-02-16T23:16:45.993Z","type":"message"}
{"nick":"mikolalysenko","message":"there is an open issue and a pull request with a fix, but isaacs is nowhere to be seen","date":"2013-02-16T23:17:02.898Z","type":"message"}
{"nick":"Raynos","message":"where is teh PR?","date":"2013-02-16T23:18:02.332Z","type":"message"}
{"nick":"mikolalysenko","message":"https://github.com/isaacs/npmjs.org/issues/94","date":"2013-02-16T23:18:26.513Z","type":"message"}
{"nick":"mikolalysenko","message":"https://github.com/isaacs/npmjs.org/pull/95","date":"2013-02-16T23:18:33.839Z","type":"message"}
{"nick":"ehd","message":"tsk must be hoarders' fault","date":"2013-02-16T23:18:41.331Z","type":"message"}
{"nick":"mikolalysenko","message":"haha, or maybe isaacs' fat fingers","date":"2013-02-16T23:19:01.516Z","type":"message"}
{"nick":"mikolalysenko","message":"\"verions\"","date":"2013-02-16T23:19:20.536Z","type":"message"}
{"nick":"mikolalysenko","message":"instead of \"versions\"","date":"2013-02-16T23:19:26.192Z","type":"message"}
{"nick":"ehd","message":"i love me some jshint for avoiding those","date":"2013-02-16T23:19:51.903Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, it happens","date":"2013-02-16T23:20:02.033Z","type":"message"}
{"nick":"dguttman","reason":"Ping timeout: 260 seconds","date":"2013-02-16T23:21:35.490Z","type":"quit"}
{"nick":"evbogue","reason":"Ping timeout: 252 seconds","date":"2013-02-16T23:24:11.126Z","type":"quit"}
{"nick":"defunctzombie","message":"sigh","date":"2013-02-16T23:27:58.754Z","type":"message"}
{"nick":"defunctzombie","message":"we cannot have a bus number of 1 on this stuff","date":"2013-02-16T23:28:23.986Z","type":"message"}
{"nick":"defunctzombie","message":"this is pretty bad","date":"2013-02-16T23:28:27.488Z","type":"message"}
{"nick":"isaacs","message":"substack: fixed the publish malfeasance","date":"2013-02-16T23:35:08.391Z","type":"message"}
{"nick":"defunctzombie","message":"\\o/","date":"2013-02-16T23:35:20.477Z","type":"message"}
{"nick":"mikeal","date":"2013-02-16T23:37:32.342Z","type":"join"}
{"nick":"mikolalysenko","message":"yes!","date":"2013-02-16T23:41:19.107Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-02-16T23:43:43.514Z","type":"message"}
{"nick":"mikolalysenko","message":"I am still having issues pushing","date":"2013-02-16T23:43:49.134Z","type":"message"}
{"nick":"mikolalysenko","message":"*publishing","date":"2013-02-16T23:44:48.160Z","type":"message"}
{"nick":"Raynos","message":"PUBLISH ALL DAY","date":"2013-02-16T23:59:52.591Z","type":"message"}
{"nick":"LOUDBOT","message":"LIMES ARE REALLY JUST UNRIPENED LEMONS","date":"2013-02-16T23:59:53.003Z","type":"message"}
