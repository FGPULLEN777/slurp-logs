{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-02-16T00:00:00.505Z","type":"quit"}
{"nick":"ircretary","date":"2013-02-16T00:00:08.686Z","type":"join"}
{"nick":"lyaunzbe_","reason":"Remote host closed the connection","date":"2013-02-16T00:00:58.134Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Ping timeout: 252 seconds","date":"2013-02-16T00:05:20.810Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-02-16T00:07:29.889Z","type":"join"}
{"nick":"mikolalysenko","message":"chrisdickinson: awesome!","date":"2013-02-16T00:08:02.429Z","type":"message"}
{"nick":"chrisdickinson","message":"there are, of course, bugs; but at least there's a test page for it and an easy path for reporting the bugs","date":"2013-02-16T00:08:24.550Z","type":"message"}
{"nick":"chrisdickinson","message":"the idea is to catch and catalog 'em all.","date":"2013-02-16T00:08:34.128Z","type":"message"}
{"nick":"mikolalysenko","message":"fantastic, I'll try to help where I can though it looks like since I am on a macbook you already got mine","date":"2013-02-16T00:10:10.571Z","type":"message"}
{"nick":"evbogue","date":"2013-02-16T00:11:42.027Z","type":"join"}
{"nick":"mikolalysenko","message":"suggestion: maybe make it capture mouse events too?","date":"2013-02-16T00:11:59.533Z","type":"message"}
{"nick":"mikolalysenko","message":"since those are actually kind of tricky, especially with the weirdness of left/right/middle","date":"2013-02-16T00:12:21.204Z","type":"message"}
{"nick":"st_luke","date":"2013-02-16T00:12:40.989Z","type":"join"}
{"nick":"lyaunzbe","date":"2013-02-16T00:14:14.028Z","type":"join"}
{"nick":"mikolalysenko","message":"chrisdickinson: also, have you seen this?  http://codeflow.org/entries/2013/jan/30/keyboard-events-in-javascript-are-broken/","date":"2013-02-16T00:14:35.815Z","type":"message"}
{"nick":"mikolalysenko","message":"apparently the situation is especially weird for swiss/german/swedish users","date":"2013-02-16T00:14:52.823Z","type":"message"}
{"nick":"chrisdickinson","message":"yes","date":"2013-02-16T00:15:18.724Z","type":"message"}
{"nick":"ryan_stevens","date":"2013-02-16T00:15:19.581Z","type":"join"}
{"nick":"chrisdickinson","message":"mikolalysenko: kb-controls actually does catch mouse events","date":"2013-02-16T00:15:32.784Z","type":"message"}
{"nick":"chrisdickinson","message":"vkey doesn't though","date":"2013-02-16T00:15:37.170Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2013-02-16T00:15:50.055Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-02-16T00:27:43.876Z","type":"quit"}
{"nick":"devaholic","reason":"Remote host closed the connection","date":"2013-02-16T00:33:00.125Z","type":"quit"}
{"nick":"ryan_stevens1","date":"2013-02-16T00:36:45.837Z","type":"join"}
{"nick":"ryan_stevens","reason":"Ping timeout: 260 seconds","date":"2013-02-16T00:40:19.514Z","type":"quit"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2013-02-16T00:51:18.315Z","type":"quit"}
{"nick":"evbogue","reason":"Remote host closed the connection","date":"2013-02-16T00:57:45.542Z","type":"quit"}
{"nick":"CryptoQuick_","date":"2013-02-16T00:59:46.970Z","type":"join"}
{"nick":"CryptoQuick","reason":"Ping timeout: 244 seconds","date":"2013-02-16T01:02:58.087Z","type":"quit"}
{"nick":"CryptoQuick_","new_nick":"CryptoQuick","date":"2013-02-16T01:02:58.249Z","type":"nick"}
{"nick":"CryptoQuick","reason":"Quit: CryptoQuick","date":"2013-02-16T01:07:38.003Z","type":"quit"}
{"nick":"jden_","date":"2013-02-16T01:08:20.809Z","type":"join"}
{"nick":"jden_","new_nick":"Guest70663","date":"2013-02-16T01:08:44.268Z","type":"nick"}
{"nick":"ryan_stevens","date":"2013-02-16T01:11:33.106Z","type":"join"}
{"nick":"ryan_stevens1","reason":"Ping timeout: 252 seconds","date":"2013-02-16T01:13:54.364Z","type":"quit"}
{"nick":"Raynos","message":"chrisdickinson: OH HI","date":"2013-02-16T01:23:36.959Z","type":"message"}
{"nick":"Raynos","message":"miko: there's a keyboard module. https://github.com/benvie/keyboard","date":"2013-02-16T01:24:02.699Z","type":"message"}
{"nick":"Raynos","message":"I just use https://github.com/gozala/dom-reduce","date":"2013-02-16T01:24:11.710Z","type":"message"}
{"nick":"Raynos","message":"events(window, \"keyup\")","date":"2013-02-16T01:24:17.230Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2013-02-16T01:26:21.361Z","type":"quit"}
{"nick":"ins0mnia","reason":"Ping timeout: 252 seconds","date":"2013-02-16T01:43:26.129Z","type":"quit"}
{"nick":"lyaunzbe","reason":"Remote host closed the connection","date":"2013-02-16T01:43:58.338Z","type":"quit"}
{"nick":"Guest70663","reason":"Ping timeout: 276 seconds","date":"2013-02-16T01:49:33.811Z","type":"quit"}
{"nick":"ryan_stevens","date":"2013-02-16T01:56:03.092Z","type":"join"}
{"nick":"jden_","date":"2013-02-16T01:58:50.070Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-16T01:59:07.426Z","type":"quit"}
{"nick":"jden_","new_nick":"Guest83359","date":"2013-02-16T01:59:14.187Z","type":"nick"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2013-02-16T02:30:09.192Z","type":"quit"}
{"nick":"ralphtheninja","reason":"Ping timeout: 252 seconds","date":"2013-02-16T02:34:06.521Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-16T02:48:36.886Z","type":"join"}
{"nick":"ryan_stevens","date":"2013-02-16T03:00:35.521Z","type":"join"}
{"nick":"lyaunzbe","date":"2013-02-16T03:03:13.080Z","type":"join"}
{"nick":"ryan_stevens","reason":"Read error: Connection reset by peer","date":"2013-02-16T03:10:06.943Z","type":"quit"}
{"nick":"ryan_stevens1","date":"2013-02-16T03:10:08.096Z","type":"join"}
{"nick":"ryan_stevens1","reason":"Client Quit","date":"2013-02-16T03:11:48.140Z","type":"quit"}
{"nick":"tphummel","reason":"Quit: tphummel","date":"2013-02-16T03:13:07.170Z","type":"quit"}
{"nick":"st_luke","date":"2013-02-16T03:15:12.193Z","type":"join"}
{"nick":"ryan_stevens","date":"2013-02-16T03:21:58.973Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 276 seconds","date":"2013-02-16T03:22:30.904Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Client Quit","date":"2013-02-16T03:23:40.167Z","type":"quit"}
{"nick":"ryan_stevens","date":"2013-02-16T03:25:06.502Z","type":"join"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2013-02-16T03:30:33.700Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-02-16T03:30:52.493Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-02-16T03:32:25.858Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-02-16T03:43:49.816Z","type":"quit"}
{"nick":"Guest83359","reason":"Ping timeout: 245 seconds","date":"2013-02-16T03:48:46.136Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-02-16T04:04:23.035Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-02-16T04:04:51.111Z","type":"quit"}
{"nick":"dguttman","date":"2013-02-16T04:12:41.265Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-02-16T04:22:06.009Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-02-16T05:00:29.648Z","type":"nick"}
{"nick":"defunctzombie","message":"isaacs: nice, that is a reason I can stand behind :)","date":"2013-02-16T05:01:22.195Z","type":"message"}
{"nick":"jjjjohnnny","message":"isaacs: is 'a require b require a' not an anti-pattern?","date":"2013-02-16T05:04:47.490Z","type":"message"}
{"nick":"jjjjohnnny","message":"seems kind of silly, but who am I to say","date":"2013-02-16T05:06:34.749Z","type":"message"}
{"nick":"defunctzombie","message":"it is an anti pattern, but if you use returns they would never return","date":"2013-02-16T05:06:43.710Z","type":"message"}
{"nick":"defunctzombie","message":"jjjjohnnny: I was asking in the context of why we didn't just 'return foo'; if we wanted to export foo from a module","date":"2013-02-16T05:07:18.282Z","type":"message"}
{"nick":"jjjjohnnny","message":"my brain is really off","date":"2013-02-16T05:07:52.432Z","type":"message"}
{"nick":"ryan_stevens","date":"2013-02-16T05:22:27.262Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-02-16T05:27:39.571Z","type":"nick"}
{"nick":"jden_","date":"2013-02-16T05:45:41.114Z","type":"join"}
{"nick":"jden_","new_nick":"Guest27189","date":"2013-02-16T05:46:05.334Z","type":"nick"}
{"nick":"CryptoQuick","date":"2013-02-16T05:54:23.867Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-02-16T06:29:33.279Z","type":"quit"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-02-16T06:35:31.977Z","type":"quit"}
{"nick":"substack","message":"defunctzombie_zz: can you add a \"browserify\" field to the process module?","date":"2013-02-16T07:07:55.004Z","type":"message"}
{"nick":"substack","message":"to mirror \"browser\"","date":"2013-02-16T07:08:00.823Z","type":"message"}
{"nick":"substack","message":"otherwise it leaves a gap in the migration path from browserify v1 to v2","date":"2013-02-16T07:08:17.418Z","type":"message"}
{"nick":"substack","message":"merging the browser field patch into v1 now but people on a slightly older version will run into issues with process.nextTick() from v2 modules","date":"2013-02-16T07:09:46.503Z","type":"message"}
{"nick":"substack","message":"I'm thinking I shouldmake using process without requiring it should generate a warning and inline the process code","date":"2013-02-16T07:10:42.071Z","type":"message"}
{"nick":"substack","message":"if I do that you can just ignore my thing about the process module","date":"2013-02-16T07:12:54.818Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2013-02-16T07:30:27.204Z","type":"quit"}
{"nick":"jesusabdullah","message":"substack: according to this recruiter I am \"highly ranked in javascript\" what does this mean >_<","date":"2013-02-16T08:55:36.573Z","type":"message"}
{"nick":"jesusabdullah","message":"substack: hahaha you got cc'd on this fucker","date":"2013-02-16T08:56:20.543Z","type":"message"}
{"nick":"jesusabdullah","message":"substack: plz2b confirm","date":"2013-02-16T08:56:33.993Z","type":"message"}
{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2013-02-16T09:03:14.546Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-16T09:08:26.657Z","type":"join"}
{"nick":"niftylettuce","message":"FIRST THEY IGNORE YOU, THEN LAUGH AT YOU, THEN FIGHT YOU, THEN YOU WIN.","date":"2013-02-16T09:13:44.936Z","type":"message"}
{"nick":"LOUDBOT","message":"YOU COMPLETE MY WAKEFUL NIGHTMARE","date":"2013-02-16T09:13:45.337Z","type":"message"}
{"nick":"jesusabdullah","message":"maan did the stizz really fall asleep on me? XD","date":"2013-02-16T09:16:15.873Z","type":"message"}
{"nick":"dguttman","date":"2013-02-16T09:38:41.453Z","type":"join"}
{"nick":"ralphtheninja","date":"2013-02-16T09:42:08.455Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-02-16T10:08:20.620Z","type":"quit"}
{"nick":"jesusabdullah","message":"isaacs: soz bro my internet died like right before you asked me about publishing","date":"2013-02-16T10:31:55.323Z","type":"message"}
{"nick":"substack","message":"jesusabdullah: yes confirmed @ cc'd","date":"2013-02-16T10:42:41.737Z","type":"message"}
{"nick":"substack","message":"however that even happened","date":"2013-02-16T10:42:53.332Z","type":"message"}
{"nick":"jesusabdullah","message":"lulz","date":"2013-02-16T10:50:23.081Z","type":"message"}
{"nick":"jesusabdullah","message":"\"I see you are HIGHLY RANKED in JAVASCRIPT\"","date":"2013-02-16T10:50:35.336Z","type":"message"}
{"nick":"jesusabdullah","message":"must've thought it'd somehow lend some \"credibility\" to the email?","date":"2013-02-16T10:50:57.390Z","type":"message"}
{"nick":"jesusabdullah","message":"though obviously you give about as many shits as I do, if even that","date":"2013-02-16T10:51:28.561Z","type":"message"}
{"nick":"jesusabdullah","message":"so, like","date":"2013-02-16T10:51:31.650Z","type":"message"}
{"nick":"jesusabdullah","message":"yeah","date":"2013-02-16T10:52:08.864Z","type":"message"}
{"nick":"jesusabdullah","message":"I really want to know what kind of leaderboard these people are looking at","date":"2013-02-16T10:52:19.704Z","type":"message"}
{"nick":"jesusabdullah","message":"like, where ARE these things?","date":"2013-02-16T10:52:32.810Z","type":"message"}
{"nick":"Guest27189","reason":"Ping timeout: 264 seconds","date":"2013-02-16T11:04:18.110Z","type":"quit"}
{"nick":"yorick","date":"2013-02-16T11:28:36.080Z","type":"join"}
{"nick":"jden_","date":"2013-02-16T11:31:01.061Z","type":"join"}
{"nick":"jden_","new_nick":"Guest7620","date":"2013-02-16T11:31:25.326Z","type":"nick"}
{"nick":"Guest7620","reason":"Ping timeout: 245 seconds","date":"2013-02-16T11:43:21.068Z","type":"quit"}
{"nick":"jden__","date":"2013-02-16T12:10:07.359Z","type":"join"}
{"nick":"ins0mnia","date":"2013-02-16T12:12:12.943Z","type":"join"}
{"nick":"jden__","reason":"Ping timeout: 252 seconds","date":"2013-02-16T12:24:49.942Z","type":"quit"}
{"nick":"fotoverite","message":"jesusabdullah: coderwall. :P","date":"2013-02-16T12:25:24.320Z","type":"message"}
{"nick":"jden_","date":"2013-02-16T12:51:06.000Z","type":"join"}
{"nick":"jden_","new_nick":"Guest88373","date":"2013-02-16T12:51:29.104Z","type":"nick"}
{"nick":"CryptoQuick","reason":"Quit: CryptoQuick","date":"2013-02-16T12:55:18.161Z","type":"quit"}
{"nick":"Guest88373","reason":"Ping timeout: 256 seconds","date":"2013-02-16T13:06:50.000Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-02-16T13:16:24.032Z","type":"join"}
{"nick":"jesusabdullah","message":"fotoverite: may be? Is there an actual lederbord on there per-language?","date":"2013-02-16T13:19:13.723Z","type":"message"}
{"nick":"fotoverite","message":"yes","date":"2013-02-16T13:19:25.594Z","type":"message"}
{"nick":"jesusabdullah","message":"fotoverite: link? :)","date":"2013-02-16T13:22:12.352Z","type":"message"}
{"nick":"fotoverite","message":"Umm https://coderwall.com/n/javascript","date":"2013-02-16T13:23:12.695Z","type":"message"}
{"nick":"jesusabdullah","message":"let's see how HIGHLY i RANK","date":"2013-02-16T13:24:31.207Z","type":"message"}
{"nick":"jesusabdullah","message":"what the fuck are these protips","date":"2013-02-16T13:24:49.504Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-02-16T13:26:06.033Z","type":"quit"}
{"nick":"jesusabdullah","message":"seriously, no aggregate stats on badges anymore? protips are retarded","date":"2013-02-16T13:31:29.806Z","type":"message"}
{"nick":"fotoverite","message":"well the whole thing became retarded","date":"2013-02-16T13:31:49.410Z","type":"message"}
{"nick":"fotoverite","message":"but still better then geeklist","date":"2013-02-16T13:31:53.823Z","type":"message"}
{"nick":"jesusabdullah","message":"yeah well I mean","date":"2013-02-16T13:32:56.094Z","type":"message"}
{"nick":"jden_","date":"2013-02-16T13:32:58.887Z","type":"join"}
{"nick":"jesusabdullah","message":"I haven't looked at greeklist in ages","date":"2013-02-16T13:33:00.998Z","type":"message"}
{"nick":"jden_","new_nick":"Guest74854","date":"2013-02-16T13:33:21.741Z","type":"nick"}
{"nick":"mikolalysenko","date":"2013-02-16T13:46:44.560Z","type":"join"}
{"nick":"Guest74854","reason":"Ping timeout: 256 seconds","date":"2013-02-16T13:49:36.421Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-02-16T13:51:31.573Z","type":"nick"}
{"nick":"defunctzombie","message":"substack: Raynos: https://github.com/shtylman/node-process/commit/8b6f96cd48390b3a9932049a959d5f724a64a127","date":"2013-02-16T13:54:30.674Z","type":"message"}
{"nick":"defunctzombie","message":"published as version 0.5.1","date":"2013-02-16T13:54:35.446Z","type":"message"}
{"nick":"defunctzombie","message":"Raynos: sorry, should have done it earlier, was being stubborn :P","date":"2013-02-16T13:54:54.289Z","type":"message"}
{"nick":"substack","message":"oh sweet","date":"2013-02-16T13:56:37.062Z","type":"message"}
{"nick":"defunctzombie","message":"well, it would be published if npm was not being stupid","date":"2013-02-16T13:56:52.042Z","type":"message"}
{"nick":"jibay","date":"2013-02-16T13:57:20.335Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-02-16T13:58:24.824Z","type":"nick"}
{"nick":"mikolalysenko","message":"what is the best way to support workers in browserify?","date":"2013-02-16T13:58:33.762Z","type":"message"}
{"nick":"mikolalysenko","message":"in other words, I want some API that lets me spin up workers in my modules that works transparently across both node and browserify","date":"2013-02-16T13:59:06.666Z","type":"message"}
{"nick":"mikolalysenko","message":"I can think of a way to do this, but it would require modifying browserify somewhat","date":"2013-02-16T13:59:22.159Z","type":"message"}
{"nick":"jesusabdullah","message":"proccor","date":"2013-02-16T13:59:40.861Z","type":"message"}
{"nick":"mikolalysenko","message":"do you have a link?","date":"2013-02-16T14:00:39.746Z","type":"message"}
{"nick":"jesusabdullah","message":"my internet sucks that had zero context mikolalysenko","date":"2013-02-16T14:03:48.188Z","type":"message"}
{"nick":"jesusabdullah","message":"idk what you want to do mikolalysenko but maybe https://github.com/substack/dnode will help?","date":"2013-02-16T14:04:24.451Z","type":"message"}
{"nick":"mikolalysenko","message":"no, not dnode","date":"2013-02-16T14:05:29.037Z","type":"message"}
{"nick":"mikolalysenko","message":"what I want to do is be able to use webworkers in my modules","date":"2013-02-16T14:05:38.678Z","type":"message"}
{"nick":"mikolalysenko","message":"but also have them work in browserify/node","date":"2013-02-16T14:05:46.922Z","type":"message"}
{"nick":"mikolalysenko","message":"now on node, I could use child_process.execFile","date":"2013-02-16T14:05:57.333Z","type":"message"}
{"nick":"mikolalysenko","message":"but it is a bit clumsy","date":"2013-02-16T14:06:01.500Z","type":"message"}
{"nick":"mikolalysenko","message":"and in the browser I can use a worker","date":"2013-02-16T14:06:11.890Z","type":"message"}
{"nick":"mikolalysenko","message":"but the problem is that it is a bit opaque","date":"2013-02-16T14:06:18.312Z","type":"message"}
{"nick":"mikolalysenko","message":"but obviously not impossible","date":"2013-02-16T14:06:44.380Z","type":"message"}
{"nick":"mikolalysenko","message":"for example, I could just browserify each of my worker scripts and then spin up the workers as usual","date":"2013-02-16T14:07:00.658Z","type":"message"}
{"nick":"mikolalysenko","message":"the problem comes when I want to start writing things modularly","date":"2013-02-16T14:07:12.020Z","type":"message"}
{"nick":"mikolalysenko","message":"if I make a module that uses a worker internally, then anyone who includes my script via browserify needs to know that there is a worker in that script","date":"2013-02-16T14:07:34.473Z","type":"message"}
{"nick":"mikolalysenko","message":"and thus they have to host that script on their server/browserify it separately","date":"2013-02-16T14:07:48.747Z","type":"message"}
{"nick":"mikolalysenko","message":"which is a crazy proposition","date":"2013-02-16T14:07:54.018Z","type":"message"}
{"nick":"mikolalysenko","message":"does this make sense so far?","date":"2013-02-16T14:08:03.492Z","type":"message"}
{"nick":"mikolalysenko","message":"so, what I was thinking is that you could do it with one browserify script by doing a hack","date":"2013-02-16T14:09:08.123Z","type":"message"}
{"nick":"mikolalysenko","message":"what you would need to do is keep track of all the different worker scripts, and then generate one bundle","date":"2013-02-16T14:09:23.959Z","type":"message"}
{"nick":"mikolalysenko","message":"then when you start a worker you could basically spin up the main entry script, wait until you get a message and then switch to the appropriate bundle","date":"2013-02-16T14:10:07.139Z","type":"message"}
{"nick":"mikolalysenko","message":"specifying the worker entry points could probably be done using package.json","date":"2013-02-16T14:10:20.373Z","type":"message"}
{"nick":"mikolalysenko","message":"but you would need to add some special loader code to the start of your entry in browserify","date":"2013-02-16T14:11:01.474Z","type":"message"}
{"nick":"mikolalysenko","message":"so it still isn't very seamless","date":"2013-02-16T14:11:09.105Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: you can dynamically create webworkers without having to host a file","date":"2013-02-16T14:13:42.790Z","type":"message"}
{"nick":"jden__","date":"2013-02-16T14:15:26.115Z","type":"join"}
{"nick":"mikolalysenko","message":"chrisdickinson:  yeah, but what if I want to require something in my workers?","date":"2013-02-16T14:15:40.496Z","type":"message"}
{"nick":"chrisdickinson","message":"worker = new Worker(URL.getObjectURL(new Blob(['('+function(){ global.isWorker = true; importScripts('bundle.js'); }+')()'], {type: 'text/javascript'}))","date":"2013-02-16T14:16:20.378Z","type":"message"}
{"nick":"chrisdickinson","message":"well, in this case `global.isWorker` would be `this.isWorker`","date":"2013-02-16T14:16:45.015Z","type":"message"}
{"nick":"chrisdickinson","message":"and then in your entry point you can check to see if the current context is a worker or not","date":"2013-02-16T14:17:00.719Z","type":"message"}
{"nick":"mikolalysenko","message":"chrisdickinson: right, I know it should work","date":"2013-02-16T14:18:08.164Z","type":"message"}
{"nick":"mikolalysenko","message":"but the problem is if I write a module that uses a worker, there is no standard protocol for my users to follow","date":"2013-02-16T14:18:25.968Z","type":"message"}
{"nick":"mikolalysenko","message":"for example, say I want to write a module to asynchronously process large chunks of volumetric data","date":"2013-02-16T14:18:45.085Z","type":"message"}
{"nick":"mikolalysenko","message":"I'd prefer to spin up a worker to do the computations rather than block the main thread","date":"2013-02-16T14:19:04.148Z","type":"message"}
{"nick":"mikolalysenko","message":"and I'd also like people to be able to use my library doing the simple npm install/require syntax","date":"2013-02-16T14:19:40.312Z","type":"message"}
{"nick":"mikolalysenko","message":"if I have to make a custom entry, then that means that anyone who uses my module will need to check for workers and dispatch the appropriate worker entry point which kind of sucks","date":"2013-02-16T14:20:13.326Z","type":"message"}
{"nick":"chrisdickinson","message":"ah, i see","date":"2013-02-16T14:20:48.066Z","type":"message"}
{"nick":"chrisdickinson","message":"if two people use this strategy in a given bundle it gets hairy, is what you're saying?","date":"2013-02-16T14:21:07.837Z","type":"message"}
{"nick":"mikolalysenko","message":"yes","date":"2013-02-16T14:21:11.568Z","type":"message"}
{"nick":"mikolalysenko","message":"and if I use a library, that is using this sort of strategy, how do I know to implement it properly?","date":"2013-02-16T14:21:30.970Z","type":"message"}
{"nick":"chrisdickinson","message":"this seems like it'd be easy to roll up into a module","date":"2013-02-16T14:21:38.089Z","type":"message"}
{"nick":"mikolalysenko","message":"maybe","date":"2013-02-16T14:21:51.841Z","type":"message"}
{"nick":"mikolalysenko","message":"though what would be best is if there was a way to override the entry script in browserify","date":"2013-02-16T14:22:05.067Z","type":"message"}
{"nick":"mikolalysenko","message":"like before it loads, you could specify global.entry = \"myworker.js\" and then do that instead of running the main script","date":"2013-02-16T14:22:25.666Z","type":"message"}
{"nick":"chrisdickinson","message":"var bfyworker = require('bfyworker'); if(!global.isWorker && !global.workerContext === 'bloo') { var worker = bfyworker('bloo') }","date":"2013-02-16T14:22:32.629Z","type":"message"}
{"nick":"chrisdickinson","message":"yeah, the fact that it works like `fork` is a little weird","date":"2013-02-16T14:23:01.576Z","type":"message"}
{"nick":"mikolalysenko","message":"I think you could pretty easily emulate workers node-side using child_process.execFile","date":"2013-02-16T14:24:36.017Z","type":"message"}
{"nick":"mikolalysenko","message":"but coming up with an API that is acceptable on both sides could be tough","date":"2013-02-16T14:25:11.683Z","type":"message"}
{"nick":"mikolalysenko","message":"it might enough in browserify if it was possible to dynamically change the entry point of the bundle","date":"2013-02-16T14:26:05.242Z","type":"message"}
{"nick":"mikolalysenko","message":"also is there a good way to get the path to the current script?","date":"2013-02-16T14:26:17.049Z","type":"message"}
{"nick":"chrisdickinson","message":"so, you can get the source of the current bundle from the root of a module","date":"2013-02-16T14:26:24.997Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, in node it is possible","date":"2013-02-16T14:27:00.303Z","type":"message"}
{"nick":"mikolalysenko","message":"but thinking ahead in the browser, what you want to do is call imporScripts('bundle.js') in the worker","date":"2013-02-16T14:27:18.207Z","type":"message"}
{"nick":"chrisdickinson","message":"no, i mean from inside the module in the browser","date":"2013-02-16T14:27:23.779Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2013-02-16T14:27:34.927Z","type":"message"}
{"nick":"chrisdickinson","message":"and you can get the arguments that require.define was called with","date":"2013-02-16T14:27:43.700Z","type":"message"}
{"nick":"chrisdickinson","message":"well.","date":"2013-02-16T14:27:52.531Z","type":"message"}
{"nick":"chrisdickinson","message":"sort of.","date":"2013-02-16T14:27:53.961Z","type":"message"}
{"nick":"chrisdickinson","message":"forgot about \"use strict\", raining on my parade.","date":"2013-02-16T14:28:01.703Z","type":"message"}
{"nick":"chrisdickinson","message":"arguments.callee.caller.caller","date":"2013-02-16T14:28:09.524Z","type":"message"}
{"nick":"chrisdickinson","message":"the caller with a caller property of null will contain the entire source of the bundle","date":"2013-02-16T14:29:15.191Z","type":"message"}
{"nick":"mikolalysenko","message":"is there a way in browserify to toggle executing the entry depending on a flag?","date":"2013-02-16T14:29:25.253Z","type":"message"}
{"nick":"mikolalysenko","message":"for example, could I do:  global.noEntry = true;  importScripts('bundle.js');","date":"2013-02-16T14:29:45.016Z","type":"message"}
{"nick":"chrisdickinson","message":"i don't think so","date":"2013-02-16T14:29:45.674Z","type":"message"}
{"nick":"mikolalysenko","message":"then once I get a message, I could just load up the appropriate module","date":"2013-02-16T14:29:58.528Z","type":"message"}
{"nick":"mikolalysenko","message":"the other thing you would need though is that you'd have to specify a list of all the worker entry points to bundle, but that should be doable with package.json","date":"2013-02-16T14:30:57.663Z","type":"message"}
{"nick":"AvianFlu","date":"2013-02-16T14:31:12.232Z","type":"join"}
{"nick":"jden__","reason":"Ping timeout: 264 seconds","date":"2013-02-16T14:31:18.130Z","type":"quit"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-02-16T14:31:45.260Z","type":"message"}
{"nick":"mikolalysenko","message":"I think making these changes could be a minimally invasive solution to the worker problem","date":"2013-02-16T14:32:11.716Z","type":"message"}
{"nick":"mikolalysenko","message":"also using only one bundle should save on page load times, since modules can be reused between the worker/main thread","date":"2013-02-16T14:32:29.298Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: so if you could safely disregard \"use strict\" (which might be prohibitive), you could simply get the bundle sources using the arguments.callee.caller trick, remove the last instance of /;,*;}/, and replace it with \"this.require = require\"","date":"2013-02-16T14:32:34.299Z","type":"message"}
{"nick":"mikolalysenko","message":"chrisdickinson:  ah!  that's pretty clever","date":"2013-02-16T14:33:04.351Z","type":"message"}
{"nick":"mikolalysenko","message":"have you considered making a module to do that?","date":"2013-02-16T14:33:47.343Z","type":"message"}
{"nick":"chrisdickinson","message":"thinking about it now :)","date":"2013-02-16T14:33:57.227Z","type":"message"}
{"nick":"chrisdickinson","message":"it falls down if any module calling you uses \"use strict\", because arguments.callee goes away in strict mode","date":"2013-02-16T14:34:13.455Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-02-16T14:34:19.254Z","type":"message"}
{"nick":"mikolalysenko","message":"good point","date":"2013-02-16T14:34:29.494Z","type":"message"}
{"nick":"chrisdickinson","message":"browserify could remove all \"use strict\" commands :)","date":"2013-02-16T14:34:51.014Z","type":"message"}
{"nick":"mikolalysenko","message":"no, that would be bad","date":"2013-02-16T14:34:57.844Z","type":"message"}
{"nick":"chrisdickinson","message":"yeahhh, i know","date":"2013-02-16T14:35:03.630Z","type":"message"}
{"nick":"chrisdickinson","message":"i just dislike \"use strict\" ):","date":"2013-02-16T14:35:08.520Z","type":"message"}
{"nick":"mikolalysenko","message":"maybe you could add a way for browserify to call the script on start up?","date":"2013-02-16T14:35:21.926Z","type":"message"}
{"nick":"mikolalysenko","message":"sort of like a pre-emptive require","date":"2013-02-16T14:35:29.912Z","type":"message"}
{"nick":"mikolalysenko","message":"that way you could grab the source of the main module when it first loads","date":"2013-02-16T14:35:46.209Z","type":"message"}
{"nick":"mikolalysenko","message":"before any \"use strict\";s get called","date":"2013-02-16T14:36:02.258Z","type":"message"}
{"nick":"chrisdickinson","message":"oh, or even better: `require.source = arguments.callee+''`","date":"2013-02-16T14:36:22.897Z","type":"message"}
{"nick":"mikolalysenko","message":"ah!  that would work","date":"2013-02-16T14:36:33.844Z","type":"message"}
{"nick":"chrisdickinson","message":"which would work because browserify's preamble isn't \"use strict\"","date":"2013-02-16T14:36:36.469Z","type":"message"}
{"nick":"mikolalysenko","message":"very clever","date":"2013-02-16T14:37:09.053Z","type":"message"}
{"nick":"mikolalysenko","message":"is there a standard way to add stuff to the preamble?","date":"2013-02-16T14:37:27.130Z","type":"message"}
{"nick":"mikolalysenko","message":"what happens if I use two modules that are using this trick?","date":"2013-02-16T14:37:35.737Z","type":"message"}
{"nick":"chrisdickinson","message":"wouldn't matter, browserify only ever has the concept of a single entry point","date":"2013-02-16T14:37:52.565Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-02-16T14:37:59.089Z","type":"message"}
{"nick":"chrisdickinson","message":"both modules could grab the source code and use it however they like","date":"2013-02-16T14:38:02.052Z","type":"message"}
{"nick":"mikolalysenko","message":"but that means that users need to know about this trick if they include a module with workers","date":"2013-02-16T14:38:17.215Z","type":"message"}
{"nick":"mikolalysenko","message":"which is not so great","date":"2013-02-16T14:38:23.737Z","type":"message"}
{"nick":"mikolalysenko","message":"since they would have to add a require.source = arguments.callee","date":"2013-02-16T14:38:43.089Z","type":"message"}
{"nick":"mikolalysenko","message":"err +''","date":"2013-02-16T14:38:52.673Z","type":"message"}
{"nick":"chrisdickinson","message":"that's why i'm forking browserify and adding it to the preamble","date":"2013-02-16T14:38:55.075Z","type":"message"}
{"nick":"chrisdickinson","message":"so that users won't have to know","date":"2013-02-16T14:39:06.943Z","type":"message"}
{"nick":"mikolalysenko","message":"great","date":"2013-02-16T14:39:19.159Z","type":"message"}
{"nick":"chrisdickinson","message":"and they can just use whatever neat little web worker modules fall out of this :)","date":"2013-02-16T14:39:19.974Z","type":"message"}
{"nick":"mikolalysenko","message":"alright, I am excited","date":"2013-02-16T14:39:30.593Z","type":"message"}
{"nick":"mikolalysenko","message":"also:  double check, it is possible to add extra modules/requires to browserify via package.json?","date":"2013-02-16T14:43:44.788Z","type":"message"}
{"nick":"chrisdickinson","message":"i think so?","date":"2013-02-16T14:43:58.764Z","type":"message"}
{"nick":"chrisdickinson","message":"not sure.","date":"2013-02-16T14:44:00.576Z","type":"message"}
{"nick":"mikolalysenko","message":"wait, I got a screwy idea","date":"2013-02-16T14:49:27.875Z","type":"message"}
{"nick":"mikolalysenko","message":"oh never mind it won't work","date":"2013-02-16T14:49:56.539Z","type":"message"}
{"nick":"chrisdickinson","message":"i got one too","date":"2013-02-16T14:54:17.862Z","type":"message"}
{"nick":"chrisdickinson","message":"oo","date":"2013-02-16T14:55:16.187Z","type":"message"}
{"nick":"chrisdickinson","message":"and this one might work","date":"2013-02-16T14:55:18.733Z","type":"message"}
{"nick":"jden_","date":"2013-02-16T14:57:35.052Z","type":"join"}
{"nick":"jden_","new_nick":"Guest60195","date":"2013-02-16T14:57:58.382Z","type":"nick"}
{"nick":"mikolalysenko","message":"suggestion:  maybe put it in process?","date":"2013-02-16T15:00:35.324Z","type":"message"}
{"nick":"mikolalysenko","message":"perhaps it should be process.source = arguments.callee + '';","date":"2013-02-16T15:00:46.794Z","type":"message"}
{"nick":"mikolalysenko","message":"instead of require","date":"2013-02-16T15:00:51.368Z","type":"message"}
{"nick":"mikolalysenko","message":"that way you can just modify the module instead of digging around in the guts of browserify","date":"2013-02-16T15:01:23.389Z","type":"message"}
{"nick":"mikolalysenko","message":"I think it is in builtins/__browserify_process.js","date":"2013-02-16T15:02:03.699Z","type":"message"}
{"nick":"mikolalysenko","message":"chrisdickinsin: ^^^","date":"2013-02-16T15:02:10.501Z","type":"message"}
{"nick":"mikolalysenko","message":"*chrisdickinson","date":"2013-02-16T15:02:49.056Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: i think we may not have to fork after all","date":"2013-02-16T15:13:47.293Z","type":"message"}
{"nick":"Guest60195","reason":"Ping timeout: 244 seconds","date":"2013-02-16T15:13:55.101Z","type":"quit"}
{"nick":"chrisdickinson","message":"will update in a second!","date":"2013-02-16T15:14:05.043Z","type":"message"}
{"nick":"mikolalysenko","message":"ok!","date":"2013-02-16T15:21:00.942Z","type":"message"}
{"nick":"chrisdickinson","message":"hmmm","date":"2013-02-16T15:33:03.739Z","type":"message"}
{"nick":"chrisdickinson","message":"was hoping to use require.modules","date":"2013-02-16T15:33:07.720Z","type":"message"}
{"nick":"chrisdickinson","message":"stymied though","date":"2013-02-16T15:33:13.132Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-02-16T15:35:19.968Z","type":"message"}
{"nick":"mikolalysenko","message":"what do you think of my suggestion above?","date":"2013-02-16T15:35:43.545Z","type":"message"}
{"nick":"mikolalysenko","message":"of adding the source to __browserify_process","date":"2013-02-16T15:35:52.488Z","type":"message"}
{"nick":"mikolalysenko","message":"that gets loaded before any modules, and doesn't use strict","date":"2013-02-16T15:36:09.544Z","type":"message"}
{"nick":"xaq","date":"2013-02-16T15:36:16.612Z","type":"join"}
{"nick":"mikolalysenko","message":"and it requires minimal modification of the run time","date":"2013-02-16T15:36:19.558Z","type":"message"}
{"nick":"mikolalysenko","message":"also another problem occurred to me...","date":"2013-02-16T15:36:40.719Z","type":"message"}
{"nick":"mikolalysenko","message":"what happens if the source gets minified?  can we still just patch the bundle like you are suggesting?","date":"2013-02-16T15:37:02.371Z","type":"message"}
{"nick":"mikolalysenko","message":"it may be more robust to add a global flag to toggle on/off the default entry","date":"2013-02-16T15:37:30.591Z","type":"message"}
{"nick":"mikolalysenko","message":"and for another thing:  workers are a little complicated","date":"2013-02-16T15:37:59.068Z","type":"message"}
{"nick":"mikolalysenko","message":"they can't do console.log like in a browser","date":"2013-02-16T15:38:10.587Z","type":"message"}
{"nick":"mikolalysenko","message":"but those issues can probably be patched within whatever module implements them","date":"2013-02-16T15:38:26.162Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: what i'm thinking is that if we add a pointer to the original module function in require.modules['name'], we can easily reassemble the bundle for a worker","date":"2013-02-16T15:39:33.771Z","type":"message"}
{"nick":"chrisdickinson","message":"https://github.com/chrisdickinson/node-browserify","date":"2013-02-16T15:39:36.668Z","type":"message"}
{"nick":"jden_","date":"2013-02-16T15:40:16.205Z","type":"join"}
{"nick":"chrisdickinson","message":"ah damn, my dns isn't resolving correctly ):","date":"2013-02-16T15:40:30.164Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-02-16T15:40:36.793Z","type":"message"}
{"nick":"jden_","new_nick":"Guest75510","date":"2013-02-16T15:40:38.675Z","type":"nick"}
{"nick":"mikolalysenko","message":"what I am concerned about is what happens if the bundle gets uglify'd or something?","date":"2013-02-16T15:40:49.994Z","type":"message"}
{"nick":"mikolalysenko","message":"can we still reassemble it?","date":"2013-02-16T15:40:58.926Z","type":"message"}
{"nick":"chrisdickinson","message":"shouldn't matter if we go this route","date":"2013-02-16T15:40:59.520Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2013-02-16T15:41:06.815Z","type":"message"}
{"nick":"chrisdickinson","message":"https://github.com/chrisdickinson/node-browserify/commit/865b92682c238c72b562d83215687a11bfeb61fc","date":"2013-02-16T15:41:21.548Z","type":"message"}
{"nick":"mikolalysenko","message":"will that work?","date":"2013-02-16T15:42:03.605Z","type":"message"}
{"nick":"chrisdickinson","message":"trying it","date":"2013-02-16T15:42:20.855Z","type":"message"}
{"nick":"chrisdickinson","message":"woot","date":"2013-02-16T15:55:12.295Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: this is the sort of base api it would enable: https://gist.github.com/chrisdickinson/53041c1e8efa064b543c","date":"2013-02-16T15:55:46.172Z","type":"message"}
{"nick":"Guest75510","reason":"Ping timeout: 244 seconds","date":"2013-02-16T15:55:46.312Z","type":"quit"}
{"nick":"chrisdickinson","message":"(and it works with my fork)","date":"2013-02-16T15:55:58.360Z","type":"message"}
{"nick":"chrisdickinson","message":"was going to go a bit further and make workers \"pause\" streams","date":"2013-02-16T15:56:28.255Z","type":"message"}
{"nick":"chrisdickinson","message":"but that'd be better as a higher level module anyway","date":"2013-02-16T15:56:36.154Z","type":"message"}
