{"nick":"ircretary","reason":"Remote host closed the connection","date":"2015-05-06T00:00:01.176Z","type":"quit"}
{"nick":"ircretary","date":"2015-05-06T00:00:10.113Z","type":"join"}
{"nick":"yoshuawuyts","reason":"Ping timeout: 264 seconds","date":"2015-05-06T00:04:58.163Z","type":"quit"}
{"nick":"thlorenz","date":"2015-05-06T00:28:13.558Z","type":"join"}
{"nick":"mafintosh","message":"mikolalysenko: assuming i have two sorted lists. the first N elements of these lists are equal (N can be 0). whats the best algorithm for finding N?","date":"2015-05-06T00:44:54.457Z","type":"message"}
{"nick":"mikolalysenko","message":"mafintosh: binary search","date":"2015-05-06T00:45:23.930Z","type":"message"}
{"nick":"mikolalysenko","message":"though maybe I am misunderstanding here","date":"2015-05-06T00:46:11.576Z","type":"message"}
{"nick":"mikolalysenko","message":"is it that all of the first n elements are equal to the same thing?","date":"2015-05-06T00:46:26.955Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: yes","date":"2015-05-06T00:46:33.435Z","type":"message"}
{"nick":"mikolalysenko","message":"or that they are two sorted lists and you want to find the longest common prefix?","date":"2015-05-06T00:46:38.741Z","type":"message"}
{"nick":"mikolalysenko","message":"in the first case I am thinking it is like you have xxxxxxxy  and xxxxz","date":"2015-05-06T00:46:54.250Z","type":"message"}
{"nick":"mikolalysenko","message":"and you want to count how many x's you have","date":"2015-05-06T00:47:01.387Z","type":"message"}
{"nick":"mikolalysenko","message":"while in the other one it would be you have:  abcdpq  and abcdxyz","date":"2015-05-06T00:47:20.787Z","type":"message"}
{"nick":"mikolalysenko","message":"and you want to find the abcd","date":"2015-05-06T00:47:27.659Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: i want to find abcd","date":"2015-05-06T00:47:35.521Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: or actually just d","date":"2015-05-06T00:47:41.363Z","type":"message"}
{"nick":"mikolalysenko","message":"ok, so it is the prefix problem","date":"2015-05-06T00:47:41.743Z","type":"message"}
{"nick":"mikolalysenko","message":"so if they were stored in suffix arrays this would be easy","date":"2015-05-06T00:48:16.721Z","type":"message"}
{"nick":"domanic","message":"if you just start binary searching from min(a.length, b.length)","date":"2015-05-06T00:48:21.266Z","type":"message"}
{"nick":"mikolalysenko","message":"mafintosh: I think best you can do then is linear scan","date":"2015-05-06T00:49:10.124Z","type":"message"}
{"nick":"substack","message":"mafintosh: you could start at 1 and increase by powers of 2 until you get a miss","date":"2015-05-06T00:49:11.519Z","type":"message"}
{"nick":"mikolalysenko","message":"by an adversary argument","date":"2015-05-06T00:49:14.432Z","type":"message"}
{"nick":"mikolalysenko","message":"since suppose the two strings are = execpt for 1 character","date":"2015-05-06T00:49:29.794Z","type":"message"}
{"nick":"substack","message":"then binary search between the miss and the last match","date":"2015-05-06T00:49:34.246Z","type":"message"}
{"nick":"mikolalysenko","message":"pick any algorithm which reads less than every character","date":"2015-05-06T00:50:05.627Z","type":"message"}
{"nick":"substack","message":"ah right, forgot about that","date":"2015-05-06T00:50:09.835Z","type":"message"}
{"nick":"mikolalysenko","message":"whatever character you haven't read make that the different character","date":"2015-05-06T00:50:15.319Z","type":"message"}
{"nick":"mikolalysenko","message":"so until you process each character you can't know","date":"2015-05-06T00:50:25.755Z","type":"message"}
{"nick":"mikolalysenko","message":"sorry :(","date":"2015-05-06T00:50:28.379Z","type":"message"}
{"nick":"mikolalysenko","message":"but if it was that first problem then you could binary search","date":"2015-05-06T00:50:36.967Z","type":"message"}
{"nick":"mikolalysenko","message":"OR if you can preprocess it you can do way better","date":"2015-05-06T00:50:44.209Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: i can preprocess assuming the space complexify is linear","date":"2015-05-06T00:51:17.623Z","type":"message"}
{"nick":"mikolalysenko","message":"OK!","date":"2015-05-06T00:51:23.033Z","type":"message"}
{"nick":"mikolalysenko","message":"we are in business again then","date":"2015-05-06T00:51:26.862Z","type":"message"}
{"nick":"mikolalysenko","message":"you can use suffix arrays","date":"2015-05-06T00:51:30.462Z","type":"message"}
{"nick":"mikolalysenko","message":"http://en.wikipedia.org/wiki/LCP_array","date":"2015-05-06T00:51:35.451Z","type":"message"}
{"nick":"mikolalysenko","message":"http://en.wikipedia.org/wiki/Suffix_array","date":"2015-05-06T00:52:33.135Z","type":"message"}
{"nick":"mikolalysenko","message":"or that","date":"2015-05-06T00:52:35.679Z","type":"message"}
{"nick":"mikolalysenko","message":"either works","date":"2015-05-06T00:52:37.351Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: all the elements in my list are also sorted","date":"2015-05-06T00:52:51.253Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2015-05-06T00:52:59.743Z","type":"message"}
{"nick":"mikolalysenko","message":"that might make it a lot simpler","date":"2015-05-06T00:53:08.997Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: what if i used substacks approach but started from the end of the list instead of from the beginning?","date":"2015-05-06T00:53:37.915Z","type":"message"}
{"nick":"mikolalysenko","message":"it might not detect a miss though","date":"2015-05-06T00:54:03.996Z","type":"message"}
{"nick":"mikolalysenko","message":"aaaabzzzz","date":"2015-05-06T00:54:18.169Z","type":"message"}
{"nick":"mikolalysenko","message":"vs","date":"2015-05-06T00:54:20.055Z","type":"message"}
{"nick":"mikolalysenko","message":"aaaaczzzz","date":"2015-05-06T00:54:25.304Z","type":"message"}
{"nick":"mikolalysenko","message":"if you don't check the c you might miss it all","date":"2015-05-06T00:54:44.719Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: if i don't have duplicates does it work then?","date":"2015-05-06T00:55:05.066Z","type":"message"}
{"nick":"mikolalysenko","message":"no","date":"2015-05-06T00:55:12.572Z","type":"message"}
{"nick":"mikolalysenko","message":"replace aaaa/zzzz with abcd and wxyz","date":"2015-05-06T00:55:25.992Z","type":"message"}
{"nick":"mikolalysenko","message":"but I got a solution with O(n) space","date":"2015-05-06T00:55:33.863Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: interesting :)","date":"2015-05-06T00:55:40.759Z","type":"message"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2015-05-06T00:55:42.958Z","type":"quit"}
{"nick":"mikolalysenko","message":"it involves precomputation though","date":"2015-05-06T00:55:43.811Z","type":"message"}
{"nick":"mikolalysenko","message":"compute a prefix sum of all previous strings","date":"2015-05-06T00:55:58.103Z","type":"message"}
{"nick":"mikolalysenko","message":"via a running checksum/hash","date":"2015-05-06T00:56:01.712Z","type":"message"}
{"nick":"mikolalysenko","message":"and store that in a table","date":"2015-05-06T00:56:15.391Z","type":"message"}
{"nick":"mikolalysenko","message":"and use that to test equality of prefixes","date":"2015-05-06T00:56:29.992Z","type":"message"}
{"nick":"mikolalysenko","message":"you can get the largest prefix in O(log n) time by binary searching on that to find the first element where the two arrays differ","date":"2015-05-06T00:57:00.418Z","type":"message"}
{"nick":"mikolalysenko","message":"that is you have an array, call it prefixHash where prefixHash[i] = hash(array[0...i])","date":"2015-05-06T00:57:45.286Z","type":"message"}
{"nick":"mikolalysenko","message":"and you just binary search on that to find first point where they differ","date":"2015-05-06T00:57:56.060Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: i binary search on the hash values?","date":"2015-05-06T01:00:04.254Z","type":"message"}
{"nick":"mikolalysenko","message":"you binary search until you find the first pair which are not equal","date":"2015-05-06T01:00:21.629Z","type":"message"}
{"nick":"mikolalysenko","message":"that is the predicate (prefixHashA[i] === prefixHashB[i])","date":"2015-05-06T01:00:43.620Z","type":"message"}
{"nick":"mikolalysenko","message":"which is monotone","date":"2015-05-06T01:00:47.471Z","type":"message"}
{"nick":"mikolalysenko","message":"I bet there is a way to do this a bit faster though and maybe save some space","date":"2015-05-06T01:01:11.099Z","type":"message"}
{"nick":"mikolalysenko","message":"but log(n) is probably good enough in practice","date":"2015-05-06T01:01:22.495Z","type":"message"}
{"nick":"mikolalysenko","message":"you could save a log factor of space by indirection","date":"2015-05-06T01:02:12.825Z","type":"message"}
{"nick":"mikolalysenko","message":"by storing only every log(n) hash","date":"2015-05-06T01:02:23.678Z","type":"message"}
{"nick":"mikolalysenko","message":"and then for the last log(n) just brute force scan it","date":"2015-05-06T01:02:33.423Z","type":"message"}
{"nick":"mikolalysenko","message":"so search is still O(log(n)) but storage is O(n/log(n))","date":"2015-05-06T01:02:47.888Z","type":"message"}
{"nick":"domanic","message":"mafintosh, guessing this is for a replication algorithm","date":"2015-05-06T01:02:55.783Z","type":"message"}
{"nick":"domanic","message":"right?","date":"2015-05-06T01:03:02.888Z","type":"message"}
{"nick":"mafintosh","message":"domanic: yea","date":"2015-05-06T01:03:13.999Z","type":"message"}
{"nick":"mikolalysenko","message":"gut feeling is there is a way to speed up the log(n) factor here using some fast selection algorithm, but those get tricky","date":"2015-05-06T01:04:08.715Z","type":"message"}
{"nick":"domanic","message":"mafintosh, so this list is some sort of hash dag","date":"2015-05-06T01:04:36.468Z","type":"message"}
{"nick":"mafintosh","message":"domanic: its a path in a hash dag","date":"2015-05-06T01:05:22.500Z","type":"message"}
{"nick":"domanic","message":"so I'm guessing there is a cryptographically secure partial order + a total order based on timestamps or somethnig","date":"2015-05-06T01:05:40.010Z","type":"message"}
{"nick":"mikolalysenko","message":"mafintosh: are you trying to compute least common ancestor of two nodes?","date":"2015-05-06T01:06:01.880Z","type":"message"}
{"nick":"mikolalysenko","message":"in these dags","date":"2015-05-06T01:06:07.068Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: yes - distributed","date":"2015-05-06T01:06:20.726Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2015-05-06T01:06:27.166Z","type":"message"}
{"nick":"mikolalysenko","message":"can you precompute some data for these dags?","date":"2015-05-06T01:06:45.491Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: yes","date":"2015-05-06T01:06:53.845Z","type":"message"}
{"nick":"mikolalysenko","message":"if you are allowed to preprocess them you can do it in O(1) for O(n/log(n)) space","date":"2015-05-06T01:06:59.199Z","type":"message"}
{"nick":"mikolalysenko","message":"the trick is to reduce the lca query to a range minimum query","date":"2015-05-06T01:07:19.458Z","type":"message"}
{"nick":"mikolalysenko","message":"actually a question:","date":"2015-05-06T01:08:04.119Z","type":"message"}
{"nick":"mikolalysenko","message":"is there just one big dag, or are there multiple dags?","date":"2015-05-06T01:08:19.172Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: currently its one big dag","date":"2015-05-06T01:08:39.471Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2015-05-06T01:08:43.220Z","type":"message"}
{"nick":"mikolalysenko","message":"and you can walk the whole dag and preprocess it","date":"2015-05-06T01:08:52.575Z","type":"message"}
{"nick":"mikolalysenko","message":"and there is a root in the dag","date":"2015-05-06T01:09:13.247Z","type":"message"}
{"nick":"mikolalysenko","message":"is it a dag or a tree?","date":"2015-05-06T01:09:27.708Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: there is a root. its a dag. i can preprocess when i insert a new node","date":"2015-05-06T01:09:48.055Z","type":"message"}
{"nick":"mikolalysenko","message":"is O(n) preprocessing ok?","date":"2015-05-06T01:10:04.712Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: lets assume it is","date":"2015-05-06T01:10:51.813Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2015-05-06T01:10:57.125Z","type":"message"}
{"nick":"mikolalysenko","message":"now for the query:  are we given a path as input or an item in the dag?","date":"2015-05-06T01:11:24.384Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: item","date":"2015-05-06T01:11:41.807Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2015-05-06T01:11:49.032Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: oh i misunderstood you","date":"2015-05-06T01:12:04.523Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: a path","date":"2015-05-06T01:12:07.827Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2015-05-06T01:12:13.151Z","type":"message"}
{"nick":"domanic","message":"mafintosh, how is the dag sorted?","date":"2015-05-06T01:13:03.096Z","type":"message"}
{"nick":"domanic","message":"how do you know the prefix is shared (to some N?)","date":"2015-05-06T01:13:19.052Z","type":"message"}
{"nick":"mikolalysenko","message":"so there is this module I wrote a while ago:  https://github.com/mikolalysenko/least-common-ancestor/blob/master/lca.js","date":"2015-05-06T01:13:34.375Z","type":"message"}
{"nick":"mikolalysenko","message":"but it is for trees, not dags","date":"2015-05-06T01:13:39.448Z","type":"message"}
{"nick":"domanic","message":"is it possible to insert something to the prefix? or is that just unlikely?","date":"2015-05-06T01:13:46.142Z","type":"message"}
{"nick":"mafintosh","message":"domanic: you create paths from the root to the heads until you've covered the entire dag","date":"2015-05-06T01:13:52.049Z","type":"message"}
{"nick":"mikolalysenko","message":"you could also speed it up a bit using 1 layer of indirection","date":"2015-05-06T01:13:52.399Z","type":"message"}
{"nick":"mafintosh","message":"domanic: each of these paths are ordered based on height in the graph","date":"2015-05-06T01:14:14.725Z","type":"message"}
{"nick":"domanic","message":"mafintosh, how do you break the tie between two parallel paths?","date":"2015-05-06T01:14:36.730Z","type":"message"}
{"nick":"domanic","message":"(so, basically I walk the graph links in reverse?)","date":"2015-05-06T01:15:01.391Z","type":"message"}
{"nick":"mafintosh","message":"domanic: something like that (not fully baked yet)","date":"2015-05-06T01:15:29.728Z","type":"message"}
{"nick":"mafintosh","message":"domanic: the two peers don't need to have the same paths","date":"2015-05-06T01:15:52.621Z","type":"message"}
{"nick":"mafintosh","message":"domanic: so lets say i have a path (a, b, c, d) where a etc are all nodes in the dag","date":"2015-05-06T01:16:25.527Z","type":"message"}
{"nick":"domanic","message":"mafintosh, do you remember the binomial idea we discussed back in copenhagen?","date":"2015-05-06T01:16:35.376Z","type":"message"}
{"nick":"mafintosh","message":"domanic: its related to that :)","date":"2015-05-06T01:16:50.679Z","type":"message"}
{"nick":"mikolalysenko","message":"mafintosh: maybe this is what you want?  https://algo2.iti.kit.edu/download/fischer10new.pdf","date":"2015-05-06T01:16:57.571Z","type":"message"}
{"nick":"domanic","message":"cool, yes just with a different ordering mechanism","date":"2015-05-06T01:17:08.603Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: thanks - looks very much like what i'm looking for","date":"2015-05-06T01:17:26.965Z","type":"message"}
{"nick":"mafintosh","message":"domanic: so if you have a path (a, b, c, d) and a < b < c < d based on the height ordering and they are all nodes","date":"2015-05-06T01:18:05.565Z","type":"message"}
{"nick":"mikolalysenko","message":"it gives a o(n) succinct structure for O(1) LSCA queries on dags","date":"2015-05-06T01:18:15.551Z","type":"message"}
{"nick":"mikolalysenko","message":"err it is just O(n)","date":"2015-05-06T01:18:54.065Z","type":"message"}
{"nick":"mikolalysenko","message":"but still not bad","date":"2015-05-06T01:18:56.190Z","type":"message"}
{"nick":"mafintosh","message":"domanic: i send you a binomial digest, (d, b) in this case and you tell me if you have d or b","date":"2015-05-06T01:19:15.085Z","type":"message"}
{"nick":"domanic","message":"mafintosh, idea: every object has a sequence number max(links->sequence number) + 1","date":"2015-05-06T01:19:27.308Z","type":"message"}
{"nick":"mafintosh","message":"domanic: my height algorithm is max(links->height) + 1","date":"2015-05-06T01:20:09.942Z","type":"message"}
{"nick":"mafintosh","message":"domanic: so my height is your sequence number?","date":"2015-05-06T01:20:32.920Z","type":"message"}
{"nick":"domanic","message":"yeah - are you writing the height into the document though (of course, you reject documents that have invalid heights)","date":"2015-05-06T01:21:14.552Z","type":"message"}
{"nick":"mafintosh","message":"i'm writing it into the document","date":"2015-05-06T01:21:35.560Z","type":"message"}
{"nick":"domanic","message":"okay yeah that is the same","date":"2015-05-06T01:21:42.112Z","type":"message"}
{"nick":"mafintosh","message":"domanic: so the number of paths are gonna be the same as the \"widest\" fork","date":"2015-05-06T01:22:58.671Z","type":"message"}
{"nick":"mafintosh","message":"and you do this for every fork","date":"2015-05-06T01:23:36.035Z","type":"message"}
{"nick":"mafintosh","message":"path not fork","date":"2015-05-06T01:23:43.237Z","type":"message"}
{"nick":"domanic","message":"relocating, food","date":"2015-05-06T01:23:58.920Z","type":"message"}
{"nick":"anvaka","date":"2015-05-06T01:24:31.271Z","type":"join"}
{"nick":"mafintosh","message":"mikolalysenko: so i actually already have the prefix hashes stored so no extra space complexity there","date":"2015-05-06T01:26:00.145Z","type":"message"}
{"nick":"mafintosh","message":"in regards to the first algorithm","date":"2015-05-06T01:26:20.751Z","type":"message"}
{"nick":"mikolalysenko","message":"ok, that simplifies things a lot then","date":"2015-05-06T01:26:27.875Z","type":"message"}
{"nick":"mikolalysenko","message":"also that lsca thing may or may not be what you want","date":"2015-05-06T01:27:01.652Z","type":"message"}
{"nick":"mikolalysenko","message":"it is different than lca, which I think is kind of open for general dags","date":"2015-05-06T01:27:18.151Z","type":"message"}
{"nick":"mikolalysenko","message":"for trees it is solved","date":"2015-05-06T01:27:22.119Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: wouldn't galloping search from the end be better than binary search is there is a good change that the prefix is long?","date":"2015-05-06T01:27:26.073Z","type":"message"}
{"nick":"mikolalysenko","message":"maybe","date":"2015-05-06T01:27:47.407Z","type":"message"}
{"nick":"mikolalysenko","message":"asymptotically, would be no difference","date":"2015-05-06T01:27:53.919Z","type":"message"}
{"nick":"mikolalysenko","message":"but you could use your judgement here, you know the data","date":"2015-05-06T01:28:02.323Z","type":"message"}
{"nick":"domanic","reason":"Read error: Connection reset by peer","date":"2015-05-06T01:28:42.421Z","type":"quit"}
{"nick":"anvaka","reason":"Ping timeout: 272 seconds","date":"2015-05-06T01:29:16.237Z","type":"quit"}
{"nick":"mafintosh","message":"mikolalysenko: i'll run some experiments","date":"2015-05-06T01:29:44.854Z","type":"message"}
{"nick":"mikolalysenko","message":"there are lots of options for binary search variants","date":"2015-05-06T01:29:54.723Z","type":"message"}
{"nick":"mikolalysenko","message":"http://en.wikipedia.org/wiki/Fibonacci_search_technique","date":"2015-05-06T01:29:55.742Z","type":"message"}
{"nick":"mikolalysenko","message":"that has some nice theoretical properties","date":"2015-05-06T01:30:01.423Z","type":"message"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2015-05-06T01:30:11.972Z","type":"quit"}
{"nick":"mikolalysenko","message":"but all of them get O(log(n)) at the end of the day","date":"2015-05-06T01:30:20.107Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: since this is distributed its all about minimizing round trips","date":"2015-05-06T01:30:20.634Z","type":"message"}
{"nick":"mikolalysenko","message":"ah, got it","date":"2015-05-06T01:30:30.113Z","type":"message"}
{"nick":"mikolalysenko","message":"there might be a way to do this in O(1)","date":"2015-05-06T01:30:50.377Z","type":"message"}
{"nick":"mafintosh","message":"whoa","date":"2015-05-06T01:30:58.783Z","type":"message"}
{"nick":"mikolalysenko","message":"need to think about it more though","date":"2015-05-06T01:31:10.507Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: do you mean solve the common prefix in O(1)?","date":"2015-05-06T01:31:58.767Z","type":"message"}
{"nick":"mikolalysenko","message":"with preprocessing","date":"2015-05-06T01:32:07.743Z","type":"message"}
{"nick":"mikolalysenko","message":"so here is another question:  is this a situation where the client is communicating to some server?","date":"2015-05-06T01:33:25.716Z","type":"message"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T01:33:42.297Z","type":"quit"}
{"nick":"mikolalysenko","message":"and so you query the hash of the path at different locations","date":"2015-05-06T01:33:42.639Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: yea","date":"2015-05-06T01:34:29.782Z","type":"message"}
{"nick":"mikolalysenko","message":"so maybe you could send multiple hashes at once to speed up the search","date":"2015-05-06T01:34:48.415Z","type":"message"}
{"nick":"mikolalysenko","message":"say maybe O(log(n)) even?","date":"2015-05-06T01:35:00.479Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: the idea is i have a path of merkle dag nodes, (a, b, c, d, e, ...) a < b ... based on the \"height\" in the graph","date":"2015-05-06T01:35:02.100Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: if you tell me you have c i know you have a b as well","date":"2015-05-06T01:35:43.779Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: so in as few roundtrips as possible i need to know which nodes we share in the dag","date":"2015-05-06T01:36:47.619Z","type":"message"}
{"nick":"mafintosh","message":"*path","date":"2015-05-06T01:36:52.280Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2015-05-06T01:36:58.549Z","type":"message"}
{"nick":"mafintosh","message":"sending multiple hashes is a good idea","date":"2015-05-06T01:37:20.628Z","type":"message"}
{"nick":"mikolalysenko","message":"and is it reasonable to send up to say log(n) hashes in one round trip?","date":"2015-05-06T01:37:22.269Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: yea i think so","date":"2015-05-06T01:37:35.465Z","type":"message"}
{"nick":"mikolalysenko","message":"obviously sending o(n) would work, but it is cheating","date":"2015-05-06T01:37:40.789Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: my initial idea was to send the last node, the last node - 2, the last node - 4 ... -8 etc in one round trip","date":"2015-05-06T01:39:15.227Z","type":"message"}
{"nick":"mikolalysenko","message":"seems reasonable, but you might still need more rounds to locate prefix","date":"2015-05-06T01:39:44.469Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: thats why i asked you :) i'm wondering if you could optimize this","date":"2015-05-06T01:40:24.199Z","type":"message"}
{"nick":"mafintosh","message":"what i have might already be good enough","date":"2015-05-06T01:40:32.118Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: i guess a simple distributed binary search would work as well with log(n) round trips","date":"2015-05-06T01:41:18.555Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, though biasing toward the end might be better in practice given the distribution of data","date":"2015-05-06T01:41:46.895Z","type":"message"}
{"nick":"mikolalysenko","message":"trying to think if there is a way to beat the O(log(n)) bound...","date":"2015-05-06T01:42:02.459Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: re biasing at the end, thats why i was thinking of galloping search","date":"2015-05-06T01:44:11.021Z","type":"message"}
{"nick":"guybrush","message":"wooah for a moment i thought this is the end of the world.. https://dl.dropboxusercontent.com/u/8314617/storm.jpg","date":"2015-05-06T01:44:49.924Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, it makes sense","date":"2015-05-06T01:44:53.147Z","type":"message"}
{"nick":"yoshuawuyts","date":"2015-05-06T01:49:04.415Z","type":"join"}
{"nick":"mikolalysenko","message":"I think I have an idea that might work","date":"2015-05-06T01:50:07.003Z","type":"message"}
{"nick":"mikolalysenko","message":"it is a bit complicated to explain, but I believe you can do it in 1 rtt","date":"2015-05-06T01:50:23.362Z","type":"message"}
{"nick":"mikolalysenko","message":"with O(log(n)) messages","date":"2015-05-06T01:50:30.295Z","type":"message"}
{"nick":"mikolalysenko","message":"err a message of length O(log(n))","date":"2015-05-06T01:50:38.543Z","type":"message"}
{"nick":"mikolalysenko","message":"it might be easier to do an implementation than explain it though","date":"2015-05-06T01:51:06.856Z","type":"message"}
{"nick":"mikolalysenko","message":"but the idea is to use a butterfly technique","date":"2015-05-06T01:51:17.739Z","type":"message"}
{"nick":"mikolalysenko","message":"http://en.wikipedia.org/wiki/Butterfly_diagram","date":"2015-05-06T01:51:38.319Z","type":"message"}
{"nick":"mikolalysenko","message":"what you do is you transmit the following numbers:","date":"2015-05-06T01:51:58.359Z","type":"message"}
{"nick":"mikolalysenko","message":"1.  the xor of all hashes","date":"2015-05-06T01:52:03.788Z","type":"message"}
{"nick":"mikolalysenko","message":"2. the xor of every other hash","date":"2015-05-06T01:52:08.042Z","type":"message"}
{"nick":"mikolalysenko","message":"3.  the xor of every 4th hash","date":"2015-05-06T01:52:13.111Z","type":"message"}
{"nick":"mikolalysenko","message":"etc.","date":"2015-05-06T01:52:16.283Z","type":"message"}
{"nick":"mikolalysenko","message":"n.  the xor of every 2^{n-1} hash","date":"2015-05-06T01:52:33.901Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2015-05-06T01:52:39.782Z","type":"message"}
{"nick":"mikolalysenko","message":"so you get that data on the server and you want to find where it differs in your path","date":"2015-05-06T01:52:51.379Z","type":"message"}
{"nick":"mikolalysenko","message":"so you compute those sums for your path too","date":"2015-05-06T01:53:00.791Z","type":"message"}
{"nick":"mikolalysenko","message":"err","date":"2015-05-06T01:53:14.420Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2015-05-06T01:53:15.059Z","type":"message"}
{"nick":"mikolalysenko","message":"this won't work never mind","date":"2015-05-06T01:53:18.849Z","type":"message"}
{"nick":"yoshuawuyts","reason":"Ping timeout: 244 seconds","date":"2015-05-06T01:53:23.245Z","type":"quit"}
{"nick":"mikolalysenko","message":"might be salvageable, gonna work this out on paper too hard to explain on irc","date":"2015-05-06T01:54:44.034Z","type":"message"}
{"nick":"mafintosh","message":"mikolalysenko: keep me in the loop :) i'm excited about this","date":"2015-05-06T01:58:17.981Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-05-06T02:08:32.513Z","type":"quit"}
{"nick":"jxson_","date":"2015-05-06T02:15:32.579Z","type":"join"}
{"nick":"domanic","date":"2015-05-06T02:16:44.295Z","type":"join"}
{"nick":"jxson","reason":"Ping timeout: 256 seconds","date":"2015-05-06T02:19:22.276Z","type":"quit"}
{"nick":"jxson_","reason":"Ping timeout: 256 seconds","date":"2015-05-06T02:19:56.262Z","type":"quit"}
{"nick":"reqshark","reason":"Quit: Be back later ...","date":"2015-05-06T02:55:37.378Z","type":"quit"}
{"nick":"thlorenz","date":"2015-05-06T03:09:11.324Z","type":"join"}
{"nick":"jxson","date":"2015-05-06T03:09:33.254Z","type":"join"}
{"nick":"anvaka","date":"2015-05-06T03:12:47.725Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 256 seconds","date":"2015-05-06T03:13:55.285Z","type":"quit"}
{"nick":"anvaka","reason":"Ping timeout: 240 seconds","date":"2015-05-06T03:16:57.752Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T03:22:34.335Z","type":"join"}
{"nick":"kessler","reason":"Ping timeout: 272 seconds","date":"2015-05-06T03:27:42.241Z","type":"quit"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2015-05-06T03:29:50.094Z","type":"quit"}
{"nick":"anvaka","date":"2015-05-06T03:32:40.339Z","type":"join"}
{"nick":"reqshark","date":"2015-05-06T03:42:15.451Z","type":"join"}
{"nick":"thlorenz","date":"2015-05-06T04:10:11.100Z","type":"join"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2015-05-06T04:11:19.711Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 276 seconds","date":"2015-05-06T04:15:48.099Z","type":"quit"}
{"nick":"anvaka","reason":"Remote host closed the connection","date":"2015-05-06T04:16:52.541Z","type":"quit"}
{"nick":"anvaka","date":"2015-05-06T04:17:26.242Z","type":"join"}
{"nick":"anvaka","reason":"Ping timeout: 256 seconds","date":"2015-05-06T04:21:46.230Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T04:23:17.171Z","type":"join"}
{"nick":"tilgovi","reason":"Ping timeout: 240 seconds","date":"2015-05-06T04:25:56.555Z","type":"quit"}
{"nick":"dguttman","date":"2015-05-06T04:27:02.876Z","type":"join"}
{"nick":"anvaka","date":"2015-05-06T04:27:43.337Z","type":"join"}
{"nick":"kessler","reason":"Ping timeout: 246 seconds","date":"2015-05-06T04:27:44.943Z","type":"quit"}
{"nick":"tilgovi","date":"2015-05-06T04:29:17.951Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2015-05-06T04:49:15.779Z","type":"quit"}
{"nick":"anvaka","reason":"Remote host closed the connection","date":"2015-05-06T04:55:33.074Z","type":"quit"}
{"nick":"anvaka","date":"2015-05-06T04:56:08.261Z","type":"join"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2015-05-06T04:58:34.867Z","type":"quit"}
{"nick":"anvaka_","date":"2015-05-06T04:59:15.619Z","type":"join"}
{"nick":"anvaka","reason":"Ping timeout: 245 seconds","date":"2015-05-06T05:00:39.598Z","type":"quit"}
{"nick":"jxson","date":"2015-05-06T05:09:30.430Z","type":"join"}
{"nick":"thlorenz","date":"2015-05-06T05:11:16.447Z","type":"join"}
{"nick":"knownasilya","reason":"Quit: Connection closed for inactivity","date":"2015-05-06T05:13:08.938Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 240 seconds","date":"2015-05-06T05:15:36.333Z","type":"quit"}
{"nick":"yoshuawuyts","date":"2015-05-06T05:31:42.129Z","type":"join"}
{"nick":"kanzure","reason":"Read error: No route to host","date":"2015-05-06T05:35:00.638Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T05:39:02.732Z","type":"join"}
{"nick":"kessler","reason":"Ping timeout: 272 seconds","date":"2015-05-06T05:43:52.240Z","type":"quit"}
{"nick":"harrow","reason":"Ping timeout: 256 seconds","date":"2015-05-06T05:49:36.292Z","type":"quit"}
{"nick":"harrow","date":"2015-05-06T06:01:03.646Z","type":"join"}
{"nick":"domanic","reason":"Ping timeout: 244 seconds","date":"2015-05-06T06:08:37.356Z","type":"quit"}
{"nick":"tixz","message":"I have a local barebones http server running and try to ping it with `curl -X OPTIONS http://localhost:8080` but am just left with \"Empty reply from server\". I'm OS X and all other HTTP methods seem to work fine. Has anyone experienced this before?","date":"2015-05-06T06:15:55.286Z","type":"message"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2015-05-06T06:25:49.590Z","type":"quit"}
{"nick":"kanzure","date":"2015-05-06T06:29:04.401Z","type":"join"}
{"nick":"yoshuawuyts","reason":"Ping timeout: 246 seconds","date":"2015-05-06T06:30:35.939Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T06:54:51.363Z","type":"join"}
{"nick":"yoshuawuyts","date":"2015-05-06T06:57:47.150Z","type":"join"}
{"nick":"kessler","reason":"Ping timeout: 256 seconds","date":"2015-05-06T06:59:18.266Z","type":"quit"}
{"nick":"machty","reason":"Ping timeout: 256 seconds","date":"2015-05-06T07:38:58.331Z","type":"quit"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2015-05-06T07:40:46.849Z","type":"quit"}
{"nick":"machty","date":"2015-05-06T07:43:05.531Z","type":"join"}
{"nick":"yoshuawuyts","reason":"Quit: WeeChat 1.1.1","date":"2015-05-06T08:14:48.933Z","type":"quit"}
{"nick":"yoshuawuyts","date":"2015-05-06T08:14:58.058Z","type":"join"}
{"nick":"erikg","date":"2015-05-06T08:18:01.942Z","type":"join"}
{"nick":"insertcoffee","reason":"Ping timeout: 256 seconds","date":"2015-05-06T08:18:38.348Z","type":"quit"}
{"nick":"insertcoffee","date":"2015-05-06T08:20:18.444Z","type":"join"}
{"nick":"farnsworth","reason":"Ping timeout: 245 seconds","date":"2015-05-06T08:26:29.676Z","type":"quit"}
{"nick":"farnsworth","date":"2015-05-06T08:27:41.392Z","type":"join"}
{"nick":"kessler","date":"2015-05-06T08:30:39.718Z","type":"join"}
{"nick":"rannmann","reason":"Ping timeout: 265 seconds","date":"2015-05-06T08:41:41.109Z","type":"quit"}
{"nick":"rannmann","date":"2015-05-06T08:45:47.532Z","type":"join"}
{"nick":"kanzure","reason":"*.net *.split","date":"2015-05-06T08:58:04.939Z","type":"quit"}
{"nick":"ircretary","reason":"*.net *.split","date":"2015-05-06T08:58:05.144Z","type":"quit"}
{"nick":"sz0","reason":"*.net *.split","date":"2015-05-06T08:58:05.348Z","type":"quit"}
{"nick":"mk30","reason":"*.net *.split","date":"2015-05-06T08:58:05.578Z","type":"quit"}
{"nick":"marcello4d","reason":"*.net *.split","date":"2015-05-06T08:58:05.986Z","type":"quit"}
{"nick":"cubert","reason":"*.net *.split","date":"2015-05-06T08:58:06.189Z","type":"quit"}
{"nick":"kanzure","date":"2015-05-06T09:00:19.651Z","type":"join"}
{"nick":"ircretary","date":"2015-05-06T09:00:19.855Z","type":"join"}
{"nick":"sz0","date":"2015-05-06T09:00:19.856Z","type":"join"}
{"nick":"mk30","date":"2015-05-06T09:00:19.856Z","type":"join"}
{"nick":"marcello4d","date":"2015-05-06T09:00:19.856Z","type":"join"}
{"nick":"cubert","date":"2015-05-06T09:00:19.856Z","type":"join"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T09:10:51.986Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T09:40:20.215Z","type":"join"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T09:51:30.958Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T10:08:50.313Z","type":"join"}
{"nick":"kessler","reason":"Read error: Connection reset by peer","date":"2015-05-06T10:09:16.677Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T10:09:46.808Z","type":"join"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T10:10:41.262Z","type":"quit"}
{"nick":"domanic","date":"2015-05-06T10:43:31.342Z","type":"join"}
{"nick":"kessler","date":"2015-05-06T10:58:13.913Z","type":"join"}
{"nick":"domanic","reason":"Ping timeout: 250 seconds","date":"2015-05-06T11:01:31.342Z","type":"quit"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T11:20:08.467Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T11:30:26.826Z","type":"join"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T11:31:08.055Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T11:37:36.278Z","type":"join"}
{"nick":"freeall","date":"2015-05-06T11:37:53.419Z","type":"join"}
{"nick":"xiplias","reason":"Quit: Connection closed for inactivity","date":"2015-05-06T11:54:24.436Z","type":"quit"}
{"nick":"yoshuawuyts","reason":"Ping timeout: 252 seconds","date":"2015-05-06T12:09:04.925Z","type":"quit"}
{"nick":"thlorenz","date":"2015-05-06T12:12:08.416Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 264 seconds","date":"2015-05-06T12:16:37.449Z","type":"quit"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T12:22:55.444Z","type":"quit"}
{"nick":"thlorenz","date":"2015-05-06T12:33:44.281Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 244 seconds","date":"2015-05-06T12:38:11.310Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T12:40:23.001Z","type":"join"}
{"nick":"kessler","reason":"Ping timeout: 265 seconds","date":"2015-05-06T12:45:17.085Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T12:49:20.339Z","type":"join"}
{"nick":"thlorenz","date":"2015-05-06T12:50:34.894Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 264 seconds","date":"2015-05-06T12:55:22.872Z","type":"quit"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T12:58:33.302Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T13:05:56.408Z","type":"join"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T13:09:05.242Z","type":"quit"}
{"nick":"pfraze","date":"2015-05-06T13:12:24.117Z","type":"join"}
{"nick":"fotoverite","date":"2015-05-06T13:14:53.932Z","type":"join"}
{"nick":"thlorenz","date":"2015-05-06T13:16:51.261Z","type":"join"}
{"nick":"dguttman","date":"2015-05-06T13:22:25.540Z","type":"join"}
{"nick":"yoshuawuyts1","date":"2015-05-06T13:33:28.932Z","type":"join"}
{"nick":"kessler","date":"2015-05-06T13:43:24.251Z","type":"join"}
{"nick":"dguttman","reason":"Ping timeout: 272 seconds","date":"2015-05-06T13:48:30.961Z","type":"quit"}
{"nick":"dguttman","date":"2015-05-06T13:53:07.614Z","type":"join"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T13:56:08.077Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T13:59:16.793Z","type":"join"}
{"nick":"kessler","reason":"Ping timeout: 245 seconds","date":"2015-05-06T14:03:34.597Z","type":"quit"}
{"nick":"peutetre","date":"2015-05-06T14:04:40.332Z","type":"join"}
{"nick":"kessler","date":"2015-05-06T14:04:56.306Z","type":"join"}
{"nick":"peutetre","reason":"Quit: ...","date":"2015-05-06T14:07:06.905Z","type":"quit"}
{"nick":"yoshuawuyts1","new_nick":"yoshuawuyts","date":"2015-05-06T14:12:19.748Z","type":"nick"}
{"nick":"peutetre","date":"2015-05-06T14:17:09.001Z","type":"join"}
{"nick":"yoshuawuyts","reason":"Ping timeout: 264 seconds","date":"2015-05-06T14:19:01.410Z","type":"quit"}
{"nick":"yoshuawuyts","date":"2015-05-06T14:21:06.127Z","type":"join"}
{"nick":"dawuud","reason":"Ping timeout: 264 seconds","date":"2015-05-06T14:23:49.422Z","type":"quit"}
{"nick":"dawuud","date":"2015-05-06T14:23:57.153Z","type":"join"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T14:29:13.877Z","type":"quit"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2015-05-06T14:37:47.961Z","type":"quit"}
{"nick":"pfraze","date":"2015-05-06T14:41:45.310Z","type":"join"}
{"nick":"freeall","reason":"Remote host closed the connection","date":"2015-05-06T14:51:47.973Z","type":"quit"}
{"nick":"freeall","date":"2015-05-06T14:53:13.714Z","type":"join"}
{"nick":"peutetre","reason":"Quit: ...","date":"2015-05-06T14:54:23.319Z","type":"quit"}
{"nick":"reqshark","reason":"Quit: Be back later ...","date":"2015-05-06T14:54:42.564Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T14:55:25.085Z","type":"join"}
{"nick":"freeall","reason":"Ping timeout: 250 seconds","date":"2015-05-06T14:57:41.338Z","type":"quit"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2015-05-06T14:59:12.528Z","type":"quit"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T14:59:33.415Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T15:00:59.456Z","type":"join"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T15:05:49.956Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T15:06:58.158Z","type":"join"}
{"nick":"anvaka_","reason":"Remote host closed the connection","date":"2015-05-06T15:08:35.247Z","type":"quit"}
{"nick":"anvaka","date":"2015-05-06T15:09:09.348Z","type":"join"}
{"nick":"tilgovi","date":"2015-05-06T15:09:44.920Z","type":"join"}
{"nick":"anvaka","reason":"Ping timeout: 244 seconds","date":"2015-05-06T15:13:11.289Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-05-06T15:15:37.080Z","type":"quit"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T15:17:00.621Z","type":"quit"}
{"nick":"anvaka","date":"2015-05-06T15:24:47.452Z","type":"join"}
{"nick":"pfraze","date":"2015-05-06T15:35:19.396Z","type":"join"}
{"nick":"yoshuawuyts","reason":"Ping timeout: 256 seconds","date":"2015-05-06T15:43:28.253Z","type":"quit"}
{"nick":"reqshark","date":"2015-05-06T15:49:08.147Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2015-05-06T16:00:12.755Z","type":"quit"}
{"nick":"anvaka","reason":"Remote host closed the connection","date":"2015-05-06T16:09:07.056Z","type":"quit"}
{"nick":"anvaka","date":"2015-05-06T16:09:40.463Z","type":"join"}
{"nick":"anvaka","reason":"Ping timeout: 240 seconds","date":"2015-05-06T16:13:56.363Z","type":"quit"}
{"nick":"thlorenz","date":"2015-05-06T16:16:25.467Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 264 seconds","date":"2015-05-06T16:21:25.452Z","type":"quit"}
{"nick":"knownasilya","date":"2015-05-06T16:21:46.488Z","type":"join"}
{"nick":"thlorenz","date":"2015-05-06T16:25:31.914Z","type":"join"}
{"nick":"kessler","date":"2015-05-06T16:27:18.044Z","type":"join"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2015-05-06T16:29:20.800Z","type":"quit"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T16:34:35.356Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T16:35:09.825Z","type":"join"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T16:35:53.050Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T16:57:28.801Z","type":"join"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T17:08:04.699Z","type":"quit"}
{"nick":"kessler","date":"2015-05-06T17:08:39.343Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-05-06T17:10:25.676Z","type":"quit"}
{"nick":"thlorenz","date":"2015-05-06T17:10:56.030Z","type":"join"}
{"nick":"jxson","date":"2015-05-06T17:12:15.454Z","type":"join"}
{"nick":"anvaka","date":"2015-05-06T17:17:32.947Z","type":"join"}
{"nick":"anvaka","reason":"Ping timeout: 272 seconds","date":"2015-05-06T17:22:34.930Z","type":"quit"}
{"nick":"pfraze_","date":"2015-05-06T17:27:49.430Z","type":"join"}
{"nick":"pfraze","reason":"Ping timeout: 264 seconds","date":"2015-05-06T17:28:01.435Z","type":"quit"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T17:32:50.374Z","type":"quit"}
{"nick":"phated","date":"2015-05-06T17:36:49.563Z","type":"join"}
{"nick":"kessler","date":"2015-05-06T17:38:19.648Z","type":"join"}
{"nick":"dguttman","date":"2015-05-06T17:44:03.337Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-05-06T18:08:39.622Z","type":"quit"}
{"nick":"thlorenz","date":"2015-05-06T18:09:01.371Z","type":"join"}
{"nick":"peutetre","date":"2015-05-06T18:22:22.277Z","type":"join"}
{"nick":"sethvincent","date":"2015-05-06T18:29:44.507Z","type":"join"}
{"nick":"noffle","message":"tixz: can't repro here. is the server req,res callback being hit? do a console.dir on the request and poke around.","date":"2015-05-06T18:31:13.034Z","type":"message"}
{"nick":"thlorenz_","date":"2015-05-06T18:31:39.287Z","type":"join"}
{"nick":"tixz","message":"noffle: sorry should have done an update. Turned out to be some crappy Cisco VPN software eating all OPTIONS requests. Super strange...","date":"2015-05-06T18:32:37.507Z","type":"message"}
{"nick":"thlorenz","reason":"Ping timeout: 256 seconds","date":"2015-05-06T18:35:19.356Z","type":"quit"}
{"nick":"thlorenz","date":"2015-05-06T18:35:54.632Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 256 seconds","date":"2015-05-06T18:39:08.243Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 245 seconds","date":"2015-05-06T18:47:44.595Z","type":"quit"}
{"nick":"kanzure","reason":"*.net *.split","date":"2015-05-06T18:47:57.808Z","type":"quit"}
{"nick":"ircretary","reason":"*.net *.split","date":"2015-05-06T18:47:58.011Z","type":"quit"}
{"nick":"sz0","reason":"*.net *.split","date":"2015-05-06T18:47:58.215Z","type":"quit"}
{"nick":"mk30","reason":"*.net *.split","date":"2015-05-06T18:47:58.419Z","type":"quit"}
{"nick":"marcello4d","reason":"*.net *.split","date":"2015-05-06T18:47:59.155Z","type":"quit"}
{"nick":"cubert","reason":"*.net *.split","date":"2015-05-06T18:47:59.155Z","type":"quit"}
{"nick":"pfraze_","reason":"*.net *.split","date":"2015-05-06T18:47:59.459Z","type":"quit"}
{"nick":"hij1nx","reason":"*.net *.split","date":"2015-05-06T18:48:01.321Z","type":"quit"}
{"nick":"harrow","reason":"*.net *.split","date":"2015-05-06T18:48:01.525Z","type":"quit"}
{"nick":"peutetre","reason":"Quit: ...","date":"2015-05-06T18:48:14.429Z","type":"quit"}
{"nick":"thlorenz","date":"2015-05-06T18:48:31.345Z","type":"join"}
{"nick":"pfraze_","date":"2015-05-06T18:49:24.817Z","type":"join"}
{"nick":"hij1nx","date":"2015-05-06T18:49:24.817Z","type":"join"}
{"nick":"kanzure","date":"2015-05-06T18:49:38.656Z","type":"join"}
{"nick":"ircretary","date":"2015-05-06T18:49:38.656Z","type":"join"}
{"nick":"sz0","date":"2015-05-06T18:49:38.656Z","type":"join"}
{"nick":"mk30","date":"2015-05-06T18:49:38.656Z","type":"join"}
{"nick":"marcello4d","date":"2015-05-06T18:49:38.656Z","type":"join"}
{"nick":"cubert","date":"2015-05-06T18:49:38.656Z","type":"join"}
{"nick":"kanzure","reason":"Max SendQ exceeded","date":"2015-05-06T18:49:58.636Z","type":"quit"}
{"nick":"harrow","date":"2015-05-06T18:50:05.452Z","type":"join"}
{"nick":"kanzure","date":"2015-05-06T18:50:13.231Z","type":"join"}
{"nick":"pfraze","date":"2015-05-06T18:50:51.928Z","type":"join"}
{"nick":"pfraze_","reason":"Ping timeout: 259 seconds","date":"2015-05-06T18:52:16.440Z","type":"quit"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2015-05-06T18:59:43.011Z","type":"quit"}
{"nick":"anvaka","date":"2015-05-06T19:05:45.341Z","type":"join"}
{"nick":"pfraze","date":"2015-05-06T19:08:14.282Z","type":"join"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2015-05-06T19:09:21.130Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-05-06T19:09:43.507Z","type":"quit"}
{"nick":"thlorenz","date":"2015-05-06T19:10:15.950Z","type":"join"}
{"nick":"anvaka","reason":"Ping timeout: 250 seconds","date":"2015-05-06T19:10:19.340Z","type":"quit"}
{"nick":"hij1nx","reason":"*.net *.split","date":"2015-05-06T19:18:50.685Z","type":"quit"}
{"nick":"hij1nx","date":"2015-05-06T19:19:18.640Z","type":"join"}
{"nick":"sethvincent","reason":"Ping timeout: 256 seconds","date":"2015-05-06T19:21:47.358Z","type":"quit"}
{"nick":"htdfjt","date":"2015-05-06T19:26:34.507Z","type":"join"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2015-05-06T19:27:43.961Z","type":"quit"}
{"nick":"htdfjt","date":"2015-05-06T19:35:29.032Z","type":"part"}
{"nick":"shama","date":"2015-05-06T19:39:31.104Z","type":"join"}
{"nick":"yoshuawuyts","date":"2015-05-06T19:42:11.619Z","type":"join"}
{"nick":"thlorenz_","date":"2015-05-06T19:56:21.627Z","type":"join"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T19:58:19.102Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 246 seconds","date":"2015-05-06T19:59:26.950Z","type":"quit"}
{"nick":"jxson_","date":"2015-05-06T20:08:43.911Z","type":"join"}
{"nick":"jxson_","reason":"Read error: Connection reset by peer","date":"2015-05-06T20:08:55.736Z","type":"quit"}
{"nick":"jxson_","date":"2015-05-06T20:09:23.285Z","type":"join"}
{"nick":"jxson","reason":"Ping timeout: 272 seconds","date":"2015-05-06T20:12:10.262Z","type":"quit"}
{"nick":"jxson_","reason":"Remote host closed the connection","date":"2015-05-06T20:13:38.353Z","type":"quit"}
{"nick":"jxson","date":"2015-05-06T20:14:54.381Z","type":"join"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2015-05-06T20:14:57.885Z","type":"quit"}
{"nick":"jxson","date":"2015-05-06T20:15:29.529Z","type":"join"}
{"nick":"rook2pawn","message":"silly question but why would this work only once on a request http://curlpaste.us/id/jc775k ?","date":"2015-05-06T20:35:10.017Z","type":"message"}
{"nick":"rook2pawn","message":"where the above codde mirrors what is typed to the caller","date":"2015-05-06T20:36:02.085Z","type":"message"}
{"nick":"pfraze","date":"2015-05-06T20:39:32.657Z","type":"join"}
{"nick":"pfraze","reason":"Read error: Connection reset by peer","date":"2015-05-06T20:47:44.619Z","type":"quit"}
{"nick":"pfraze","date":"2015-05-06T20:48:19.362Z","type":"join"}
{"nick":"pfraze_","date":"2015-05-06T20:53:37.297Z","type":"join"}
{"nick":"anvaka","date":"2015-05-06T20:54:03.423Z","type":"join"}
{"nick":"pfraze","reason":"Ping timeout: 240 seconds","date":"2015-05-06T20:54:56.344Z","type":"quit"}
{"nick":"anvaka","reason":"Ping timeout: 264 seconds","date":"2015-05-06T20:58:37.385Z","type":"quit"}
{"nick":"pfraze_","reason":"Ping timeout: 264 seconds","date":"2015-05-06T21:02:35.315Z","type":"quit"}
{"nick":"thlorenz","date":"2015-05-06T21:09:34.265Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 245 seconds","date":"2015-05-06T21:12:44.606Z","type":"quit"}
{"nick":"pfraze","date":"2015-05-06T21:22:52.311Z","type":"join"}
{"nick":"tilgovi","date":"2015-05-06T21:25:56.958Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-05-06T21:40:15.553Z","type":"quit"}
{"nick":"thlorenz","date":"2015-05-06T21:47:05.627Z","type":"join"}
{"nick":"jjjohnny","message":"substack: the DHT k/v store looks like a bust","date":"2015-05-06T21:50:25.438Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-05-06T21:50:29.760Z","type":"quit"}
{"nick":"thlorenz","date":"2015-05-06T21:51:06.123Z","type":"join"}
{"nick":"jjjohnny","message":"and the DHT would bomes like the bitcoin bockchain, a massive download","date":"2015-05-06T21:51:47.197Z","type":"message"}
{"nick":"jjjohnny","message":"/s/bomes/becomes","date":"2015-05-06T21:52:03.109Z","type":"message"}
{"nick":"jjjohnny","message":"/s/\\s/\\/bomes\\/becomes/\\s/\\bomes\\/become","date":"2015-05-06T21:52:41.317Z","type":"message"}
{"nick":"jjjohnny","message":"song it with  me now","date":"2015-05-06T21:53:10.771Z","type":"message"}
{"nick":"substack","message":"jjjohnny: it's not permanent, nodes need to reannounce every 2 hours for content they want to stay alive","date":"2015-05-06T21:54:16.595Z","type":"message"}
{"nick":"jjjohnny","message":"substack: a fast moving metadatabase on a worldwide p2p fungible DHT sounds like asking for trouble","date":"2015-05-06T21:55:14.222Z","type":"message"}
{"nick":"jjjohnny","message":"one node takes something down, another puts it up","date":"2015-05-06T21:55:41.489Z","type":"message"}
{"nick":"jjjohnny","message":"but i am naive of the implementation deets","date":"2015-05-06T21:56:24.350Z","type":"message"}
{"nick":"jjjohnny","message":"and it is easily attackable","date":"2015-05-06T21:58:17.797Z","type":"message"}
{"nick":"substack","message":"there are some other DHTs that might not have these problems, but I need to research them more","date":"2015-05-06T21:59:15.110Z","type":"message"}
{"nick":"substack","message":"and I don't know much about how you can use gossip protocols to do the same kinds of tasks","date":"2015-05-06T21:59:46.480Z","type":"message"}
{"nick":"substack","message":"how the routing works in particular","date":"2015-05-06T21:59:57.866Z","type":"message"}
{"nick":"jjjohnny","message":"afaik it is about having some percentage of peers replicate.  domanic probably has stats on tuning.  they replicate with a max 20 peers with \"friends\", altho i'm not certain of those details either","date":"2015-05-06T22:02:35.901Z","type":"message"}
{"nick":"jjjohnny","message":"some magic number of relays gets you everything gauranteed","date":"2015-05-06T22:03:43.286Z","type":"message"}
{"nick":"jjjohnny","message":"if we are mostly gettings our links from friends, tho","date":"2015-05-06T22:04:07.312Z","type":"message"}
{"nick":"jjjohnny","message":"and sharing metadata with friends","date":"2015-05-06T22:04:12.911Z","type":"message"}
{"nick":"jjjohnny","message":"ina p2p net, your cyber identy is more associated with your peers than your browsing habits","date":"2015-05-06T22:04:59.711Z","type":"message"}
{"nick":"jjjohnny","message":"i'm not making the connecton jjjohnny","date":"2015-05-06T22:05:27.376Z","type":"message"}
{"nick":"jjjohnny","message":"me neither","date":"2015-05-06T22:05:38.807Z","type":"message"}
{"nick":"yoshuawuyts1","date":"2015-05-06T22:05:55.395Z","type":"join"}
{"nick":"jjjohnny","message":"seems safe to use gossips, secure and coinciedentally efficient","date":"2015-05-06T22:07:00.228Z","type":"message"}
{"nick":"yoshuawuyts","reason":"Read error: Connection reset by peer","date":"2015-05-06T22:07:35.916Z","type":"quit"}
{"nick":"jjjohnny","message":"NOW WHO WANTS TO BE MY FRIEND?","date":"2015-05-06T22:07:40.888Z","type":"message"}
{"nick":"jjjohnny","message":"hackistan has rooms open again BTW FYI","date":"2015-05-06T22:08:02.259Z","type":"message"}
{"nick":"kessler","date":"2015-05-06T22:13:39.334Z","type":"join"}
{"nick":"freeall","date":"2015-05-06T22:30:32.469Z","type":"join"}
{"nick":"anvaka","date":"2015-05-06T22:42:14.861Z","type":"join"}
{"nick":"anvaka","reason":"Ping timeout: 256 seconds","date":"2015-05-06T22:46:55.818Z","type":"quit"}
{"nick":"kessler","reason":"Remote host closed the connection","date":"2015-05-06T22:50:05.479Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2015-05-06T23:02:17.088Z","type":"quit"}
{"nick":"sethvincent","date":"2015-05-06T23:06:43.636Z","type":"join"}
{"nick":"knownasilya","reason":"Quit: Connection closed for inactivity","date":"2015-05-06T23:13:09.339Z","type":"quit"}
