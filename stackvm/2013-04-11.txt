{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-04-11T00:00:01.361Z","type":"quit"}
{"nick":"ircretary","date":"2013-04-11T00:00:08.718Z","type":"join"}
{"nick":"Domenic__","date":"2013-04-11T00:05:35.117Z","type":"join"}
{"nick":"Raynos","message":"substack: what's a good way to tell the dart core team \"your streams without backpressure is a disaster waiting to happen\"","date":"2013-04-11T00:05:39.576Z","type":"message"}
{"nick":"Raynos","message":"isaacs: ^, actually is \"stream without backpressure\" really a disaster?","date":"2013-04-11T00:05:58.535Z","type":"message"}
{"nick":"substack","message":"aren't they pull-streams?","date":"2013-04-11T00:06:47.562Z","type":"message"}
{"nick":"isaacs","message":"Raynos: they do backpressure, i thought.","date":"2013-04-11T00:07:11.887Z","type":"message"}
{"nick":"Raynos","message":"they are push streams","date":"2013-04-11T00:07:24.835Z","type":"message"}
{"nick":"isaacs","message":"Raynos: the ones that don't do backpressure are buffered seekable streams","date":"2013-04-11T00:07:28.511Z","type":"message"}
{"nick":"isaacs","message":"but i mean, whatver, that's buffering all your shit up anyway","date":"2013-04-11T00:07:54.497Z","type":"message"}
{"nick":"isaacs","message":"at least, that's how i thought it worked","date":"2013-04-11T00:07:59.641Z","type":"message"}
{"nick":"substack","message":"I have a use-case to mess with the new streams stuff finally now","date":"2013-04-11T00:08:41.639Z","type":"message"}
{"nick":"substack","message":"first I'm going to publish it as classic streams","date":"2013-04-11T00:08:48.687Z","type":"message"}
{"nick":"substack","message":"but using streams2 will prevent unnecessary buffering","date":"2013-04-11T00:09:07.072Z","type":"message"}
{"nick":"Raynos","message":"oh ok they do pause","date":"2013-04-11T00:09:12.163Z","type":"message"}
{"nick":"Raynos","message":"false alarm.","date":"2013-04-11T00:09:14.666Z","type":"message"}
{"nick":"Raynos","message":"its just hard to find in their docs -.-","date":"2013-04-11T00:09:30.771Z","type":"message"}
{"nick":"Domenic__","reason":"Ping timeout: 264 seconds","date":"2013-04-11T00:10:18.156Z","type":"quit"}
{"nick":"Raynos","message":"isaacs: idea, make all streams support `.close()`","date":"2013-04-11T00:12:24.463Z","type":"message"}
{"nick":"isaacs","message":"Raynos: what's close() do if it isn't a thing that closes?","date":"2013-04-11T00:13:31.299Z","type":"message"}
{"nick":"Raynos","message":"isaacs: are there any Readable streams where it would not make sense for them to have a close()","date":"2013-04-11T00:13:35.255Z","type":"message"}
{"nick":"Raynos","message":"Oh wait duplex transforms >_<","date":"2013-04-11T00:13:48.613Z","type":"message"}
{"nick":"isaacs","message":"Raynos: :)","date":"2013-04-11T00:13:58.448Z","type":"message"}
{"nick":"Raynos","message":"yeah I live in lazy land >_<","date":"2013-04-11T00:14:10.783Z","type":"message"}
{"nick":"isaacs","message":"Raynos: zlib streams have a .close() method","date":"2013-04-11T00:14:20.211Z","type":"message"}
{"nick":"Raynos","message":"where there is just Readable.pipe(Writable) and no duplexes","date":"2013-04-11T00:14:23.837Z","type":"message"}
{"nick":"isaacs","message":"Raynos: but it should only be called when both sides are done.","date":"2013-04-11T00:14:30.873Z","type":"message"}
{"nick":"Raynos","message":"Ok what about this","date":"2013-04-11T00:14:55.626Z","type":"message"}
{"nick":"Raynos","message":"Duplex.close() means","date":"2013-04-11T00:14:58.516Z","type":"message"}
{"nick":"isaacs","message":"fs streams have a destroy(), which closes the fd","date":"2013-04-11T00:15:01.867Z","type":"message"}
{"nick":"isaacs","message":"same for sockets","date":"2013-04-11T00:15:04.254Z","type":"message"}
{"nick":"Raynos","message":"if there is any data left in the buffer just kill it","date":"2013-04-11T00:15:06.140Z","type":"message"}
{"nick":"isaacs","message":"that's destroy()","date":"2013-04-11T00:15:12.321Z","type":"message"}
{"nick":"isaacs","message":"what you probably want is destroySoon()","date":"2013-04-11T00:15:19.337Z","type":"message"}
{"nick":"Raynos","message":"does fs.createReadStream().close() clean up the fd ?","date":"2013-04-11T00:15:22.443Z","type":"message"}
{"nick":"isaacs","message":"s/close/destroy/ yeah","date":"2013-04-11T00:15:29.216Z","type":"message"}
{"nick":"Raynos","message":"I just want an ABORT thing","date":"2013-04-11T00:15:33.384Z","type":"message"}
{"nick":"Raynos","message":"which is like pause","date":"2013-04-11T00:15:36.275Z","type":"message"}
{"nick":"isaacs","message":"naming things is hard.","date":"2013-04-11T00:15:37.116Z","type":"message"}
{"nick":"Raynos","message":"but it actually means deallocate all resources and die","date":"2013-04-11T00:15:45.302Z","type":"message"}
{"nick":"isaacs","message":"you want destroy()","date":"2013-04-11T00:15:48.677Z","type":"message"}
{"nick":"Raynos","message":"so whats the difference between close() and destroy()","date":"2013-04-11T00:16:02.142Z","type":"message"}
{"nick":"Raynos","message":"other then \"oops naming is hard and back compat\"","date":"2013-04-11T00:16:07.810Z","type":"message"}
{"nick":"isaacs","message":"so, you have destroy() and destroySoon()","date":"2013-04-11T00:17:43.036Z","type":"message"}
{"nick":"isaacs","message":"destroySoon() should really be renamed to close()","date":"2013-04-11T00:17:50.608Z","type":"message"}
{"nick":"isaacs","message":"what it means is, write the remainder of what you have, and then destroy() once it's flushed out","date":"2013-04-11T00:18:07.676Z","type":"message"}
{"nick":"rvagg","message":"so destroy() should just cancel anything in process? discard buffers etc.?","date":"2013-04-11T00:19:04.755Z","type":"message"}
{"nick":"Raynos","message":"isaacs: I'm talking about Readable's","date":"2013-04-11T00:20:19.528Z","type":"message"}
{"nick":"isaacs","message":"sure, but you can't have method called \"close\" on readables, that does a different thing on writables, because duplexes.","date":"2013-04-11T00:21:03.647Z","type":"message"}
{"nick":"sorensen","message":"random question","date":"2013-04-11T00:21:24.603Z","type":"message"}
{"nick":"sorensen","message":"wtf is the order of npm installs","date":"2013-04-11T00:21:28.480Z","type":"message"}
{"nick":"sorensen","message":"seems ranom","date":"2013-04-11T00:21:39.516Z","type":"message"}
{"nick":"sorensen","message":"random*","date":"2013-04-11T00:21:41.144Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 4, free: 21]","date":"2013-04-11T00:21:42.303Z","type":"message"}
{"nick":"Raynos","message":"isaacs: oh ok","date":"2013-04-11T00:21:56.513Z","type":"message"}
{"nick":"isaacs","message":"sorensen: it's kinda random","date":"2013-04-11T00:22:08.446Z","type":"message"}
{"nick":"Raynos","message":"so there is no close, thats just a bad name, there is only destroy & destroySoon","date":"2013-04-11T00:22:10.683Z","type":"message"}
{"nick":"Raynos","message":"and they work on Readable's ?","date":"2013-04-11T00:22:13.607Z","type":"message"}
{"nick":"sorensen","message":"so glad lol","date":"2013-04-11T00:22:15.696Z","type":"message"}
{"nick":"isaacs","message":"sorensen: more approrpiately, it's parallel","date":"2013-04-11T00:22:16.986Z","type":"message"}
{"nick":"sorensen","message":"im not crazy","date":"2013-04-11T00:22:18.564Z","type":"message"}
{"nick":"sorensen","message":"ah","date":"2013-04-11T00:22:21.892Z","type":"message"}
{"nick":"sorensen","message":"explains it","date":"2013-04-11T00:22:25.227Z","type":"message"}
{"nick":"isaacs","message":"sorensen: so, depends on the vagaries of disks and https","date":"2013-04-11T00:22:28.816Z","type":"message"}
{"nick":"Raynos","message":"for a Readable if you call destroySoon do you have to deplete the internal buffer by calling read() until it returns null before it closes sockets & fds ?","date":"2013-04-11T00:22:36.606Z","type":"message"}
{"nick":"sorensen","message":"parallel is all i needed ;) thanks","date":"2013-04-11T00:22:44.931Z","type":"message"}
{"nick":"isaacs","message":"there is no concept of destroySoon for a Readable, relaly","date":"2013-04-11T00:22:52.598Z","type":"message"}
{"nick":"isaacs","message":"\"soon\", what?","date":"2013-04-11T00:22:56.048Z","type":"message"}
{"nick":"isaacs","message":"what is \"soon\"?","date":"2013-04-11T00:23:00.325Z","type":"message"}
{"nick":"sorensen","message":"hot dam i'm excited for nodeconf","date":"2013-04-11T00:23:16.905Z","type":"message"}
{"nick":"isaacs","message":"Raynos: most of the time, we just close when we get the EOF chunk","date":"2013-04-11T00:23:21.485Z","type":"message"}
{"nick":"isaacs","message":"sorensen: :D","date":"2013-04-11T00:23:26.660Z","type":"message"}
{"nick":"chrisdickinson","action":"will be there too!","date":"2013-04-11T00:23:34.290Z","type":"action"}
{"nick":"sorensen","message":"first time goin, couldnt make it last year","date":"2013-04-11T00:23:38.775Z","type":"message"}
{"nick":"Raynos","message":"isaacs: what if I want to readFiveLines(fd) ?","date":"2013-04-11T00:23:40.366Z","type":"message"}
{"nick":"sorensen","message":"woo! beer is on isaac!","date":"2013-04-11T00:23:55.801Z","type":"message"}
{"nick":"sorensen","message":":D","date":"2013-04-11T00:23:57.270Z","type":"message"}
{"nick":"Raynos","message":"because thats the header of the file and dependending on the header I either read the content or abort","date":"2013-04-11T00:24:00.562Z","type":"message"}
{"nick":"isaacs","message":"please don't get beer on me...","date":"2013-04-11T00:24:07.104Z","type":"message"}
{"nick":"sorensen","message":"oh its happening","date":"2013-04-11T00:24:15.938Z","type":"message"}
{"nick":"sorensen","message":"\"yes sir, tab under the name isaac\"","date":"2013-04-11T00:24:25.295Z","type":"message"}
{"nick":"sorensen","message":"\"shots for everyone, yes i'm sure","date":"2013-04-11T00:24:35.061Z","type":"message"}
{"nick":"isaacs","message":"sorensen: nodeconf won't have \"tabs\" exactly.","date":"2013-04-11T00:24:37.950Z","type":"message"}
{"nick":"sorensen","message":";)","date":"2013-04-11T00:24:38.662Z","type":"message"}
{"nick":"isaacs","message":"sorensen: have you ever been to summer camp?","date":"2013-04-11T00:24:45.455Z","type":"message"}
{"nick":"sorensen","message":"no","date":"2013-04-11T00:24:49.799Z","type":"message"}
{"nick":"sorensen","message":"just messing around","date":"2013-04-11T00:24:53.626Z","type":"message"}
{"nick":"sorensen","message":"but no","date":"2013-04-11T00:24:57.380Z","type":"message"}
{"nick":"isaacs","message":"it'll be more like coolers with bottles that you just open","date":"2013-04-11T00:24:58.775Z","type":"message"}
{"nick":"isaacs","message":"in the woods, around a campfire","date":"2013-04-11T00:25:05.094Z","type":"message"}
{"nick":"sorensen","message":"aww","date":"2013-04-11T00:25:05.218Z","type":"message"}
{"nick":"isaacs","message":"for realsies","date":"2013-04-11T00:25:09.676Z","type":"message"}
{"nick":"sorensen","message":"i do know about that","date":"2013-04-11T00:25:11.320Z","type":"message"}
{"nick":"isaacs","message":"coyotes and shit","date":"2013-04-11T00:25:15.283Z","type":"message"}
{"nick":"sorensen","message":"grew up in nebraska after all","date":"2013-04-11T00:25:17.225Z","type":"message"}
{"nick":"isaacs","message":"deer","date":"2013-04-11T00:25:18.973Z","type":"message"}
{"nick":"isaacs","message":"see, you know the deal :)","date":"2013-04-11T00:25:26.563Z","type":"message"}
{"nick":"sorensen","message":"it'll be like home","date":"2013-04-11T00:25:27.267Z","type":"message"}
{"nick":"isaacs","message":"but with trees and hills, so not so much like nebraska","date":"2013-04-11T00:25:37.539Z","type":"message"}
{"nick":"isaacs","message":"but yeah","date":"2013-04-11T00:25:38.423Z","type":"message"}
{"nick":"sorensen","message":"well, very much like nebraska ;)","date":"2013-04-11T00:25:46.063Z","type":"message"}
{"nick":"isaacs","message":"where does nebraska have hills?","date":"2013-04-11T00:26:05.473Z","type":"message"}
{"nick":"sorensen","message":"eas","date":"2013-04-11T00:26:10.076Z","type":"message"}
{"nick":"sorensen","message":"east*","date":"2013-04-11T00:26:11.452Z","type":"message"}
{"nick":"isaacs","message":"ohhhh...","date":"2013-04-11T00:26:15.032Z","type":"message"}
{"nick":"chrisdickinson","message":"sort of like east kansas / missouri, huh?","date":"2013-04-11T00:26:20.842Z","type":"message"}
{"nick":"sorensen","message":"like... omaha","date":"2013-04-11T00:26:20.998Z","type":"message"}
{"nick":"isaacs","message":"i had relatives in lincoln a while ago","date":"2013-04-11T00:26:22.073Z","type":"message"}
{"nick":"sorensen","message":"yeap","date":"2013-04-11T00:26:24.583Z","type":"message"}
{"nick":"sorensen","message":"lincoln a bit flat","date":"2013-04-11T00:26:28.437Z","type":"message"}
{"nick":"isaacs","message":"was pretty flat.","date":"2013-04-11T00:26:30.554Z","type":"message"}
{"nick":"chrisdickinson","action":"is from east kansas","date":"2013-04-11T00:26:33.725Z","type":"action"}
{"nick":"sorensen","message":"eastern nebraska gets towards the bluffs of iowa","date":"2013-04-11T00:26:41.028Z","type":"message"}
{"nick":"chrisdickinson","message":"i think i've accidentally wound up in nebraska before","date":"2013-04-11T00:26:44.787Z","type":"message"}
{"nick":"sorensen","message":"chrisdickinson: midwest!","date":"2013-04-11T00:26:47.863Z","type":"message"}
{"nick":"chrisdickinson","message":"yeah, lawrence ks :D","date":"2013-04-11T00:26:58.795Z","type":"message"}
{"nick":"isaacs","message":"it was just slightly flatter than 2d euclidian space","date":"2013-04-11T00:26:59.873Z","type":"message"}
{"nick":"sorensen","message":"lol","date":"2013-04-11T00:27:06.175Z","type":"message"}
{"nick":"sorensen","message":"it all varies","date":"2013-04-11T00:27:15.513Z","type":"message"}
{"nick":"isaacs","message":"and not really trees.","date":"2013-04-11T00:27:23.266Z","type":"message"}
{"nick":"sorensen","message":"for whatever reason i remember omaha being on a list of hilliest cities","date":"2013-04-11T00:27:27.253Z","type":"message"}
{"nick":"sorensen","message":"lincoln... *sigh*","date":"2013-04-11T00:27:39.095Z","type":"message"}
{"nick":"isaacs","action":"lives in Oakland, near SF","date":"2013-04-11T00:27:43.022Z","type":"action"}
{"nick":"chrisdickinson","message":"isaacs: the only thing of note i saw in west kansas on the drive to oregon was a single ditch, full of broken down 1950's pickup trucks.","date":"2013-04-11T00:27:44.931Z","type":"message"}
{"nick":"sorensen","message":"i like oakland","date":"2013-04-11T00:27:53.140Z","type":"message"}
{"nick":"isaacs","message":"y'all ain't got nothin on hills.","date":"2013-04-11T00:27:56.047Z","type":"message"}
{"nick":"isaacs","message":":)","date":"2013-04-11T00:28:00.251Z","type":"message"}
{"nick":"sorensen","message":"shiiiiit","date":"2013-04-11T00:28:02.284Z","type":"message"}
{"nick":"sorensen","message":"could drive a stick in SF due to my omaha training","date":"2013-04-11T00:28:17.766Z","type":"message"}
{"nick":"sorensen","message":"in the dam snow","date":"2013-04-11T00:28:19.802Z","type":"message"}
{"nick":"sorensen","message":"yall dont know bout hills","date":"2013-04-11T00:28:26.149Z","type":"message"}
{"nick":"sorensen","message":":P","date":"2013-04-11T00:28:36.556Z","type":"message"}
{"nick":"Raynos","message":"isaacs: http://nodejs.org/api/fs.html#fs_class_fs_readstream readstream does not have a close / destroy or destroySoon documented","date":"2013-04-11T00:28:44.144Z","type":"message"}
{"nick":"sorensen","message":"what i love most about oakland is that the city of oakland is nicer than the city of SF","date":"2013-04-11T00:29:04.101Z","type":"message"}
{"nick":"isaacs","message":"Raynos: yeah, it has a destroy, but not a destroySoon","date":"2013-04-11T00:29:08.261Z","type":"message"}
{"nick":"sorensen","message":"crazy nice building","date":"2013-04-11T00:29:12.778Z","type":"message"}
{"nick":"isaacs","message":"Raynos: not sure if it's documented","date":"2013-04-11T00:29:13.771Z","type":"message"}
{"nick":"Raynos","message":"isaacs: so to clarify again in your mind does \"destroySoon\" and \"close\" mean the same thing?","date":"2013-04-11T00:29:29.357Z","type":"message"}
{"nick":"isaacs","message":"Raynos: it's in the javascript low-level API docs.","date":"2013-04-11T00:29:30.050Z","type":"message"}
{"nick":"isaacs","message":"Raynos: yeah, i guess so","date":"2013-04-11T00:29:39.880Z","type":"message"}
{"nick":"isaacs","message":"Raynos: but both are app-specific","date":"2013-04-11T00:29:45.606Z","type":"message"}
{"nick":"Raynos","message":"where is the low-level API docs?","date":"2013-04-11T00:29:47.550Z","type":"message"}
{"nick":"isaacs","message":"Raynos: https://github.com/joyent/node/tree/master/lib/","date":"2013-04-11T00:30:07.201Z","type":"message"}
{"nick":"Raynos","message":"oh.","date":"2013-04-11T00:30:16.198Z","type":"message"}
{"nick":"isaacs","message":"Raynos: the docs that we write in javascript","date":"2013-04-11T00:30:17.196Z","type":"message"}
{"nick":"Raynos","message":"so its in the code :P","date":"2013-04-11T00:30:19.494Z","type":"message"}
{"nick":"isaacs","message":";P","date":"2013-04-11T00:30:19.780Z","type":"message"}
{"nick":"mbalho","message":"the sf hobart building is like the crappier version of the oakland cathedral building","date":"2013-04-11T00:30:22.654Z","type":"message"}
{"nick":"isaacs","message":"sf has more stuff","date":"2013-04-11T00:30:32.290Z","type":"message"}
{"nick":"isaacs","message":"like a crazy cat person, their carpets reeking of urine, and old photographs and rotten garbage from last month.","date":"2013-04-11T00:30:55.397Z","type":"message"}
{"nick":"sorensen","message":"i do love sf","date":"2013-04-11T00:31:31.934Z","type":"message"}
{"nick":"sorensen","message":"probably since i grew up in the midwest","date":"2013-04-11T00:31:40.518Z","type":"message"}
{"nick":"Raynos","message":"oh interesting","date":"2013-04-11T00:31:43.431Z","type":"message"}
{"nick":"Raynos","message":"you can't close() a stream, that's for servers","date":"2013-04-11T00:31:49.249Z","type":"message"}
{"nick":"sorensen","message":"have an uncle that does city planning in SF","date":"2013-04-11T00:31:50.259Z","type":"message"}
{"nick":"jez0990","message":"nodeconf","date":"2013-04-11T00:49:07.411Z","type":"message"}
{"nick":"jez0990","message":"hmm","date":"2013-04-11T00:49:23.363Z","type":"message"}
{"nick":"mbalho","message":"go!","date":"2013-04-11T00:50:00.965Z","type":"message"}
{"nick":"Raynos","message":"always go","date":"2013-04-11T00:53:14.896Z","type":"message"}
{"nick":"Raynos","message":"nodeconf is a must","date":"2013-04-11T00:53:26.253Z","type":"message"}
{"nick":"isaacs","message":"Raynos: right, servers have close()","date":"2013-04-11T00:57:49.812Z","type":"message"}
{"nick":"Guest55310","date":"2013-04-11T01:05:56.860Z","type":"quit"}
{"nick":"fallsemo1","reason":"Quit: Leaving.","date":"2013-04-11T01:09:03.935Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 42]","date":"2013-04-11T01:21:42.206Z","type":"message"}
{"nick":"jxson","reason":"Ping timeout: 256 seconds","date":"2013-04-11T01:22:32.476Z","type":"quit"}
{"nick":"ralphtheninja","reason":"Ping timeout: 260 seconds","date":"2013-04-11T01:24:52.002Z","type":"quit"}
{"nick":"devaholic","date":"2013-04-11T01:34:16.461Z","type":"join"}
{"nick":"thl0","date":"2013-04-11T01:42:42.969Z","type":"join"}
{"nick":"Domenic__","date":"2013-04-11T01:46:25.970Z","type":"join"}
{"nick":"ins0mnia","date":"2013-04-11T02:05:26.400Z","type":"join"}
{"nick":"thl0","message":"so substack, could we use deep-is in difflet since in that case seems to make more sense?","date":"2013-04-11T02:06:36.947Z","type":"message"}
{"nick":"thl0","message":"i.e. you wouldn't want to see a diff indicator when you do 'diff(NaN, NaN)'","date":"2013-04-11T02:07:05.694Z","type":"message"}
{"nick":"Domenic__","message":"thl0 enable issues on deep-is","date":"2013-04-11T02:08:21.003Z","type":"message"}
{"nick":"Domenic__","message":"also make it work so that deepIs(-0, +0) === false","date":"2013-04-11T02:08:36.402Z","type":"message"}
{"nick":"mikolalysenko","message":"why are all the red black tree libraries in npm useless?","date":"2013-04-11T02:09:28.121Z","type":"message"}
{"nick":"mikolalysenko","message":"they all give you find, but none of them has a working lower_bound","date":"2013-04-11T02:09:42.027Z","type":"message"}
{"nick":"mikolalysenko","message":"which is the whole point of using a tree in the first place?","date":"2013-04-11T02:09:50.598Z","type":"message"}
{"nick":"thl0","message":"Domenic__: done","date":"2013-04-11T02:09:56.662Z","type":"message"}
{"nick":"thl0","message":"Domenic__: why?","date":"2013-04-11T02:10:05.899Z","type":"message"}
{"nick":"mikolalysenko","message":"if I didn't care about successor/predecessor queries I'd use a hash (end rant)","date":"2013-04-11T02:10:10.429Z","type":"message"}
{"nick":"thl0","message":"is that bc Objec.is works that way?","date":"2013-04-11T02:10:16.851Z","type":"message"}
{"nick":"ins0mnia","reason":"Remote host closed the connection","date":"2013-04-11T02:12:08.083Z","type":"quit"}
{"nick":"timoxley","date":"2013-04-11T02:16:54.744Z","type":"join"}
{"nick":"stlsaint","reason":"Quit: leaving","date":"2013-04-11T02:18:39.150Z","type":"quit"}
{"nick":"rowbit","message":"Daily usage stats: [developer: 33, free: 1307]","date":"2013-04-11T02:21:42.301Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 27]","date":"2013-04-11T02:21:43.145Z","type":"message"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-04-11T02:42:12.028Z","type":"quit"}
{"nick":"niftylettuce","message":"isaacs: can you help with this? https://github.com/nodejitsu/node-http-proxy/issues/399","date":"2013-04-11T02:42:44.969Z","type":"message"}
{"nick":"niftylettuce","message":"isaacs: i noticed that crypto/tls now requires a \".pfx\" file apparently in 0.10.x","date":"2013-04-11T02:42:58.241Z","type":"message"}
{"nick":"niftylettuce","message":"isaacs: so all my my existing ssl setup is flawed without this pfx stuff, not certain how to create","date":"2013-04-11T02:43:16.695Z","type":"message"}
{"nick":"thl0","date":"2013-04-11T02:43:54.381Z","type":"join"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-04-11T02:44:46.838Z","type":"quit"}
{"nick":"Benvie","reason":"Ping timeout: 264 seconds","date":"2013-04-11T02:46:24.433Z","type":"quit"}
{"nick":"Benvie","date":"2013-04-11T02:54:06.467Z","type":"join"}
{"nick":"mmckegg","date":"2013-04-11T02:57:10.585Z","type":"part"}
{"nick":"Raynos","message":"miko: write a good one!","date":"2013-04-11T02:59:28.205Z","type":"message"}
{"nick":"Raynos","message":"also how do you \"know\" that red black trees are good at lower bounds","date":"2013-04-11T02:59:51.714Z","type":"message"}
{"nick":"Raynos","message":"I dont even know what lower bound means wrt trees","date":"2013-04-11T02:59:59.156Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 24]","date":"2013-04-11T03:21:42.237Z","type":"message"}
{"nick":"mikolalysenko","message":"Raynos: basically balanced binary trees are a way to store dynamic ordered sequences","date":"2013-04-11T03:25:52.786Z","type":"message"}
{"nick":"mikolalysenko","message":"and the main thing you get with an oredered sequence is that you can binary search it in O(log n) to find lower bounds","date":"2013-04-11T03:26:19.000Z","type":"message"}
{"nick":"mikolalysenko","message":"so if you want the items that come before and immediately after some query, you can figure that out","date":"2013-04-11T03:26:49.321Z","type":"message"}
{"nick":"mikolalysenko","message":"it is slower and more expensive than a hash table, but you can answer stronger queries","date":"2013-04-11T03:27:03.982Z","type":"message"}
{"nick":"mikolalysenko","message":"however, when I look in npm none of the balanced binary search tree libraries implement bounds queries!","date":"2013-04-11T03:27:37.012Z","type":"message"}
{"nick":"mikolalysenko","message":"which means that all they end up being is just a crappy version of a hash table","date":"2013-04-11T03:27:46.629Z","type":"message"}
{"nick":"mikolalysenko","message":"if all you can do is insert/delete/find, then you are strictly better off using a hash:  why would you ever bother with a tree?","date":"2013-04-11T03:28:11.591Z","type":"message"}
{"nick":"Domenic__","message":"thl0: yes, and of course the deeper reason for that is because that's how the ES spec works.","date":"2013-04-11T03:30:54.938Z","type":"message"}
{"nick":"mikolalysenko","message":"actually, I just found one that looks good but it had a weird name:  https://npmjs.org/package/leafy","date":"2013-04-11T03:33:16.555Z","type":"message"}
{"nick":"mikolalysenko","message":"wait, never mind.  It is still terrible","date":"2013-04-11T03:34:36.524Z","type":"message"}
{"nick":"mikolalysenko","message":"the findLessThan/findGreaterThan methods return arrays of elements","date":"2013-04-11T03:34:50.809Z","type":"message"}
{"nick":"mikolalysenko","message":"which means if you use them in a loop, you will do O(n^2) work","date":"2013-04-11T03:35:00.872Z","type":"message"}
{"nick":"mikolalysenko","message":"retarded...","date":"2013-04-11T03:35:04.330Z","type":"message"}
{"nick":"Raynos","message":"write one ;)","date":"2013-04-11T03:53:21.970Z","type":"message"}
{"nick":"dominictarr","date":"2013-04-11T03:58:44.098Z","type":"join"}
{"nick":"dominictarr","reason":"Client Quit","date":"2013-04-11T03:59:49.924Z","type":"quit"}
{"nick":"niftylettuce","message":"isaacs: https://github.com/nodejitsu/node-http-proxy/issues/399#issuecomment-16216048 it looks like there are some recent changes to the crypto module that might have caused the break","date":"2013-04-11T04:13:18.826Z","type":"message"}
{"nick":"niftylettuce","message":"not sure which one though https://github.com/joyent/node/commits/v0.10.2-release/lib/crypto.js","date":"2013-04-11T04:15:00.907Z","type":"message"}
{"nick":"niftylettuce","message":"im on 0.10.2","date":"2013-04-11T04:15:08.546Z","type":"message"}
{"nick":"jxson","date":"2013-04-11T04:15:27.907Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-04-11T04:18:17.457Z","type":"quit"}
{"nick":"kenperkins","date":"2013-04-11T04:19:11.851Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 26]","date":"2013-04-11T04:21:42.296Z","type":"message"}
{"nick":"shama","reason":"Remote host closed the connection","date":"2013-04-11T04:32:09.395Z","type":"quit"}
{"nick":"jcrugzz","reason":"Ping timeout: 245 seconds","date":"2013-04-11T04:33:19.960Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-04-11T04:35:13.374Z","type":"quit"}
{"nick":"fallsemo","date":"2013-04-11T04:45:49.906Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-04-11T04:57:08.343Z","type":"quit"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-04-11T05:05:11.608Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 13, free: 31]","date":"2013-04-11T05:21:42.185Z","type":"message"}
{"nick":"jcrugzz","date":"2013-04-11T05:38:47.340Z","type":"join"}
{"nick":"thatguydan","date":"2013-04-11T05:49:33.626Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-04-11T05:58:12.948Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 246 seconds","date":"2013-04-11T06:02:16.773Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-04-11T06:05:27.987Z","type":"nick"}
{"nick":"jcrugzz","reason":"Ping timeout: 256 seconds","date":"2013-04-11T06:08:40.558Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 22]","date":"2013-04-11T06:21:42.258Z","type":"message"}
{"nick":"fallsemo","reason":"Quit: Leaving.","date":"2013-04-11T06:39:53.511Z","type":"quit"}
{"nick":"timoxley","date":"2013-04-11T07:06:07.767Z","type":"join"}
{"nick":"mikolalysenko","date":"2013-04-11T07:08:57.085Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 245 seconds","date":"2013-04-11T07:13:20.007Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 10, free: 28]","date":"2013-04-11T07:21:42.160Z","type":"message"}
{"nick":"jxson","reason":"Ping timeout: 240 seconds","date":"2013-04-11T07:41:33.725Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-04-11T08:01:07.703Z","type":"nick"}
{"nick":"substack","message":"pow https://github.com/substack/slice-file","date":"2013-04-11T08:08:04.446Z","type":"message"}
{"nick":"substack","message":"now implementing .follow()","date":"2013-04-11T08:08:18.077Z","type":"message"}
{"nick":"substack","message":"like tail -f","date":"2013-04-11T08:08:19.670Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 60]","date":"2013-04-11T08:21:42.302Z","type":"message"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-04-11T08:22:09.407Z","type":"quit"}
{"nick":"timoxley","date":"2013-04-11T08:23:17.105Z","type":"join"}
{"nick":"jxson","date":"2013-04-11T08:37:01.147Z","type":"join"}
{"nick":"ralphtheninja","date":"2013-04-11T08:46:30.979Z","type":"join"}
{"nick":"dominictarr","date":"2013-04-11T08:49:08.897Z","type":"join"}
{"nick":"no9","date":"2013-04-11T08:49:25.642Z","type":"join"}
{"nick":"devaholic","reason":"Remote host closed the connection","date":"2013-04-11T09:08:10.303Z","type":"quit"}
{"nick":"ralphtheninja","reason":"Quit: leaving","date":"2013-04-11T09:10:02.749Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 28]","date":"2013-04-11T09:21:42.135Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-04-11T09:22:52.182Z","type":"quit"}
{"nick":"dominictarr","date":"2013-04-11T09:33:00.597Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-04-11T10:08:07.320Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 59]","date":"2013-04-11T10:21:42.311Z","type":"message"}
{"nick":"no9","reason":"Ping timeout: 240 seconds","date":"2013-04-11T10:36:33.679Z","type":"quit"}
{"nick":"stagas","date":"2013-04-11T10:37:49.341Z","type":"join"}
{"nick":"stagas","message":"if anyone can help get the facts straight in this I would be eternally grateful :) https://github.com/stagas/browserify-vs-component/wiki/Browserify-vs-Component","date":"2013-04-11T10:40:31.106Z","type":"message"}
{"nick":"thl0","date":"2013-04-11T11:07:15.098Z","type":"join"}
{"nick":"jibay","date":"2013-04-11T11:08:52.554Z","type":"join"}
{"nick":"defunctzombie","message":"substack: I can has cool drawing?","date":"2013-04-11T11:13:48.484Z","type":"message"}
{"nick":"substack","message":"oh right","date":"2013-04-11T11:18:22.722Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 57]","date":"2013-04-11T11:21:42.152Z","type":"message"}
{"nick":"no9","date":"2013-04-11T11:21:42.596Z","type":"join"}
{"nick":"no9","reason":"Ping timeout: 248 seconds","date":"2013-04-11T11:38:13.598Z","type":"quit"}
{"nick":"saijanai_","reason":"Quit: saijanai_","date":"2013-04-11T11:42:22.898Z","type":"quit"}
{"nick":"spion","date":"2013-04-11T11:43:24.408Z","type":"join"}
{"nick":"mikeal","date":"2013-04-11T11:47:11.081Z","type":"join"}
{"nick":"thatguydan","reason":"Ping timeout: 252 seconds","date":"2013-04-11T12:08:20.419Z","type":"quit"}
{"nick":"thatguydan","date":"2013-04-11T12:09:33.543Z","type":"join"}
{"nick":"Guest55310","date":"2013-04-11T12:15:07.896Z","type":"join"}
{"nick":"Guest55310","new_nick":"ITpro","date":"2013-04-11T12:15:08.021Z","type":"nick"}
{"nick":"ITpro","new_nick":"Guest33047","date":"2013-04-11T12:15:37.397Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 42]","date":"2013-04-11T12:21:42.328Z","type":"message"}
{"nick":"st_luke","date":"2013-04-11T12:22:40.497Z","type":"join"}
{"nick":"yorick","date":"2013-04-11T12:34:36.506Z","type":"join"}
{"nick":"AvianFlu","date":"2013-04-11T12:49:12.880Z","type":"join"}
{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2013-04-11T12:52:27.117Z","type":"quit"}
{"nick":"mikeal1","date":"2013-04-11T12:52:36.338Z","type":"join"}
{"nick":"mikeal1","reason":"Client Quit","date":"2013-04-11T12:53:52.196Z","type":"quit"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-04-11T12:59:08.746Z","type":"quit"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-04-11T13:01:30.566Z","type":"quit"}
{"nick":"st_luke","date":"2013-04-11T13:06:50.725Z","type":"join"}
{"nick":"jibay","reason":"Quit: Leaving","date":"2013-04-11T13:09:25.350Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 32]","date":"2013-04-11T13:21:42.195Z","type":"message"}
{"nick":"thl0","date":"2013-04-11T13:36:42.536Z","type":"join"}
{"nick":"fallsemo","date":"2013-04-11T13:40:46.149Z","type":"join"}
{"nick":"mikolalysenko","date":"2013-04-11T13:46:15.270Z","type":"join"}
{"nick":"tmcw","date":"2013-04-11T13:49:02.523Z","type":"join"}
{"nick":"fallsemo","reason":"Quit: Leaving.","date":"2013-04-11T14:00:27.711Z","type":"quit"}
{"nick":"Domeni___","date":"2013-04-11T14:02:11.288Z","type":"join"}
{"nick":"gozala","reason":"Ping timeout: 240 seconds","date":"2013-04-11T14:06:53.711Z","type":"quit"}
{"nick":"gozala","date":"2013-04-11T14:07:10.872Z","type":"join"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-04-11T14:14:18.047Z","type":"quit"}
{"nick":"Domeni___","reason":"*.net *.split","date":"2013-04-11T14:17:01.399Z","type":"quit"}
{"nick":"wolfeidau","reason":"*.net *.split","date":"2013-04-11T14:17:01.659Z","type":"quit"}
{"nick":"rook2pawn","reason":"*.net *.split","date":"2013-04-11T14:17:02.059Z","type":"quit"}
{"nick":"jesusabdullah","reason":"*.net *.split","date":"2013-04-11T14:17:02.059Z","type":"quit"}
{"nick":"Domeni___","date":"2013-04-11T14:19:00.453Z","type":"join"}
{"nick":"wolfeidau","date":"2013-04-11T14:19:00.577Z","type":"join"}
{"nick":"rook2pawn","date":"2013-04-11T14:19:00.578Z","type":"join"}
{"nick":"jesusabdullah","date":"2013-04-11T14:19:00.578Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 76]","date":"2013-04-11T14:21:42.365Z","type":"message"}
{"nick":"kenperkins","date":"2013-04-11T14:26:27.017Z","type":"join"}
{"nick":"fallsemo","date":"2013-04-11T14:36:46.321Z","type":"join"}
{"nick":"ralphtheninja","date":"2013-04-11T14:38:55.527Z","type":"join"}
{"nick":"Benvie","reason":"Quit: Benvie","date":"2013-04-11T14:46:28.963Z","type":"quit"}
{"nick":"Benvie","date":"2013-04-11T14:46:43.548Z","type":"join"}
{"nick":"Benvie","reason":"Ping timeout: 255 seconds","date":"2013-04-11T14:55:23.518Z","type":"quit"}
{"nick":"Benvie","date":"2013-04-11T14:59:41.853Z","type":"join"}
{"nick":"Benvie","reason":"Client Quit","date":"2013-04-11T15:01:16.953Z","type":"quit"}
{"nick":"Benvie","date":"2013-04-11T15:04:11.751Z","type":"join"}
{"nick":"jiang_plus","date":"2013-04-11T15:11:58.338Z","type":"join"}
{"nick":"dguttman","date":"2013-04-11T15:13:47.028Z","type":"join"}
{"nick":"jiang_plus","message":"is there any good website/tool for cooperation?","date":"2013-04-11T15:18:12.330Z","type":"message"}
{"nick":"tmcw","message":"github.com","date":"2013-04-11T15:18:46.959Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 52]","date":"2013-04-11T15:21:42.190Z","type":"message"}
{"nick":"jibay","date":"2013-04-11T15:28:10.563Z","type":"join"}
{"nick":"st_luke","message":"defunctzombie: are you still running that bouncer","date":"2013-04-11T15:32:17.699Z","type":"message"}
{"nick":"tmcw","reason":"Remote host closed the connection","date":"2013-04-11T15:37:42.456Z","type":"quit"}
{"nick":"jiang_plus","reason":"Ping timeout: 248 seconds","date":"2013-04-11T15:40:53.599Z","type":"quit"}
{"nick":"jiang_plus","date":"2013-04-11T15:41:29.968Z","type":"join"}
{"nick":"jibay","reason":"Remote host closed the connection","date":"2013-04-11T15:42:50.011Z","type":"quit"}
{"nick":"dominictarr","date":"2013-04-11T15:46:23.907Z","type":"join"}
{"nick":"defunctzombie","message":"st_luke: yea","date":"2013-04-11T15:48:15.352Z","type":"message"}
{"nick":"jcrugzz","date":"2013-04-11T15:50:03.465Z","type":"join"}
{"nick":"st_luke","message":"where do I sign up? :)","date":"2013-04-11T15:51:44.124Z","type":"message"}
{"nick":"Guest33047","reason":"Ping timeout: 260 seconds","date":"2013-04-11T15:59:23.980Z","type":"quit"}
{"nick":"Domeni___","reason":"Remote host closed the connection","date":"2013-04-11T16:02:16.768Z","type":"quit"}
{"nick":"Domeni___","date":"2013-04-11T16:04:04.456Z","type":"join"}
{"nick":"Guest33047","date":"2013-04-11T16:05:04.710Z","type":"join"}
{"nick":"Guest33047","new_nick":"ITpro","date":"2013-04-11T16:05:04.840Z","type":"nick"}
{"nick":"ITpro","new_nick":"Guest95467","date":"2013-04-11T16:05:34.351Z","type":"nick"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-04-11T16:07:31.741Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 4, free: 36]","date":"2013-04-11T16:21:42.214Z","type":"message"}
{"nick":"stagas","date":"2013-04-11T16:36:12.735Z","type":"join"}
{"nick":"pkrumins","message":"50 repositories out of 270 on testling-ci have a badge on github: https://github.com/pkrumins/testling-ci-badge-checker/blob/master/readme.txt#L7","date":"2013-04-11T16:37:02.450Z","type":"message"}
{"nick":"Domeni___","message":"pkrumins: i think putting the badges on GitHub will be a lot more popular now that there are not spurious failures making you look bad","date":"2013-04-11T16:38:28.649Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-04-11T16:38:52.460Z","type":"quit"}
{"nick":"chapel","message":"pkrumins: is testling-ci free for open source repos?","date":"2013-04-11T16:39:09.561Z","type":"message"}
{"nick":"pkrumins","message":"yes it's free","date":"2013-04-11T16:39:15.807Z","type":"message"}
{"nick":"fotoverite","date":"2013-04-11T16:39:27.548Z","type":"join"}
{"nick":"chapel","message":"okay, will have to check it out finally","date":"2013-04-11T16:39:32.248Z","type":"message"}
{"nick":"pkrumins","message":"chapel: here http://www.catonmat.net/blog/howto-write-testling-ci-tests/","date":"2013-04-11T16:39:43.197Z","type":"message"}
{"nick":"pkrumins","message":"Domeni___: exactly!","date":"2013-04-11T16:39:52.613Z","type":"message"}
{"nick":"chapel","message":"thanks pkrumins","date":"2013-04-11T16:42:10.895Z","type":"message"}
{"nick":"pkrumins","message":"you're welcome :)","date":"2013-04-11T16:42:19.380Z","type":"message"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-04-11T16:45:50.741Z","type":"quit"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-04-11T16:54:13.256Z","type":"quit"}
{"nick":"dominictarr","date":"2013-04-11T16:55:57.598Z","type":"join"}
{"nick":"crank","reason":"Ping timeout: 256 seconds","date":"2013-04-11T16:56:16.702Z","type":"quit"}
{"nick":"crank","date":"2013-04-11T16:58:04.160Z","type":"join"}
{"nick":"Guest95467","reason":"Remote host closed the connection","date":"2013-04-11T16:58:37.892Z","type":"quit"}
{"nick":"Guest95467","date":"2013-04-11T16:59:00.834Z","type":"join"}
{"nick":"pkrumins","message":"I just wrote a new blog post called \"I published another 10 of my projects to GitHub\": http://www.catonmat.net/blog/i-published-another-10-of-my-projects-to-github/","date":"2013-04-11T17:01:27.578Z","type":"message"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2013-04-11T17:03:47.494Z","type":"quit"}
{"nick":"fotoverite","date":"2013-04-11T17:04:50.433Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-04-11T17:05:28.420Z","type":"quit"}
{"nick":"fotoverite","reason":"Client Quit","date":"2013-04-11T17:08:50.717Z","type":"quit"}
{"nick":"shama","date":"2013-04-11T17:20:42.574Z","type":"join"}
{"nick":"tmcw","date":"2013-04-11T17:21:24.372Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 40]","date":"2013-04-11T17:21:42.304Z","type":"message"}
{"nick":"jcrugzz_","date":"2013-04-11T17:23:04.693Z","type":"join"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2013-04-11T17:23:26.872Z","type":"quit"}
{"nick":"tmcw","reason":"Remote host closed the connection","date":"2013-04-11T17:23:49.395Z","type":"quit"}
{"nick":"jxson","date":"2013-04-11T17:24:06.303Z","type":"join"}
{"nick":"thl0","date":"2013-04-11T17:24:36.958Z","type":"join"}
{"nick":"tmcw","date":"2013-04-11T17:24:41.424Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 258 seconds","date":"2013-04-11T17:26:00.052Z","type":"quit"}
{"nick":"thl0","reason":"Ping timeout: 245 seconds","date":"2013-04-11T17:32:55.052Z","type":"quit"}
{"nick":"jcrugzz_","new_nick":"jcrugzz","date":"2013-04-11T17:33:12.636Z","type":"nick"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2013-04-11T17:35:58.478Z","type":"quit"}
{"nick":"dguttman","date":"2013-04-11T17:36:44.309Z","type":"join"}
{"nick":"thl0","date":"2013-04-11T17:38:34.761Z","type":"join"}
{"nick":"spion","reason":"Ping timeout: 246 seconds","date":"2013-04-11T17:47:52.783Z","type":"quit"}
{"nick":"jiang_plus","reason":"Ping timeout: 256 seconds","date":"2013-04-11T18:05:15.909Z","type":"quit"}
{"nick":"fallsemo","reason":"Quit: Leaving.","date":"2013-04-11T18:05:23.689Z","type":"quit"}
{"nick":"fallsemo","date":"2013-04-11T18:05:58.507Z","type":"join"}
{"nick":"isaacs","message":"anyone in here use Readable.unshift() ever?","date":"2013-04-11T18:13:30.553Z","type":"message"}
{"nick":"isaacs","message":"Raynos, dominictarr, etc? ^","date":"2013-04-11T18:13:43.057Z","type":"message"}
{"nick":"dominictarr","message":"isaacs: that would be useful for writing a parser -- actually I'm working on one like that now -- but it's my opinion that that is not readable stream job","date":"2013-04-11T18:15:03.723Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: the reason i agreed to put it there was to use it for a better websockets API","date":"2013-04-11T18:19:47.934Z","type":"message"}
{"nick":"isaacs","message":"so the \"bodyPart\" bullshit can go away.","date":"2013-04-11T18:19:57.669Z","type":"message"}
{"nick":"isaacs","message":"just like, stuff it back up in there :)","date":"2013-04-11T18:20:02.145Z","type":"message"}
{"nick":"dominictarr","message":"oh, right - I'm totally for that then","date":"2013-04-11T18:20:23.915Z","type":"message"}
{"nick":"isaacs","message":"ok... so.. here's the weird thing..","date":"2013-04-11T18:20:40.912Z","type":"message"}
{"nick":"isaacs","message":"three parties in a streams interaction: The Stream class (S) (ie, node)","date":"2013-04-11T18:21:07.484Z","type":"message"}
{"nick":"isaacs","message":"the Author/implementor (ie, dominic) (A)","date":"2013-04-11T18:21:19.916Z","type":"message"}
{"nick":"isaacs","message":"and the Consumer/user of the stream (ie, someone installing your module) (C)","date":"2013-04-11T18:21:30.623Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 8, free: 45]","date":"2013-04-11T18:21:42.668Z","type":"message"}
{"nick":"dominictarr","message":"aha","date":"2013-04-11T18:21:53.659Z","type":"message"}
{"nick":"isaacs","message":"C calls read(), which kicks off som emachinery in S and triggers A's _read() method","date":"2013-04-11T18:21:56.532Z","type":"message"}
{"nick":"dominictarr","message":"yes","date":"2013-04-11T18:22:06.371Z","type":"message"}
{"nick":"isaacs","message":"in A's _read(), A calls 'this.push(chunk)' at some point","date":"2013-04-11T18:22:08.554Z","type":"message"}
{"nick":"isaacs","message":"so S says, \"Great, i can unset that `reading` flag, and have you start getting some more!\"","date":"2013-04-11T18:22:28.362Z","type":"message"}
{"nick":"isaacs","message":"however, `unshift(chunk)` *also* sets reading=false","date":"2013-04-11T18:22:46.316Z","type":"message"}
{"nick":"st_luke","date":"2013-04-11T18:22:59.420Z","type":"join"}
{"nick":"isaacs","message":"so when C calls stream.unshift(bitThatDidntGetParsedYet)","date":"2013-04-11T18:23:15.215Z","type":"message"}
{"nick":"isaacs","message":"A might be in the middle of a _read()","date":"2013-04-11T18:23:22.453Z","type":"message"}
{"nick":"isaacs","message":"but S says, \"Great!  I see you're done reading, DO ANOTHER _READ!\"","date":"2013-04-11T18:23:34.862Z","type":"message"}
{"nick":"isaacs","message":"which A doesn't guard against, because S promised it would never ever do that!","date":"2013-04-11T18:23:46.854Z","type":"message"}
{"nick":"dominictarr","message":"oh, right - hmm, well the consumer should use pipe","date":"2013-04-11T18:23:50.728Z","type":"message"}
{"nick":"dominictarr","message":"and consume by passing to a writable stream","date":"2013-04-11T18:24:10.972Z","type":"message"}
{"nick":"isaacs","message":"sure, pipe() to a transform stream which does this.push(output)","date":"2013-04-11T18:24:23.851Z","type":"message"}
{"nick":"dominictarr","message":"yeah","date":"2013-04-11T18:24:35.923Z","type":"message"}
{"nick":"isaacs","message":"if it's a parser for instance.","date":"2013-04-11T18:24:37.317Z","type":"message"}
{"nick":"isaacs","message":"i hate our ws api","date":"2013-04-11T18:25:17.619Z","type":"message"}
{"nick":"isaacs","message":"it's such garbage.","date":"2013-04-11T18:25:19.536Z","type":"message"}
{"nick":"isaacs","message":"why couldn't we just make it keep using req/res.","date":"2013-04-11T18:25:33.042Z","type":"message"}
{"nick":"dominictarr","message":"so, maybe there is a better way to remove bodyPart from ws","date":"2013-04-11T18:25:34.654Z","type":"message"}
{"nick":"isaacs","message":"and you can then write to res and read from req, just like you do now","date":"2013-04-11T18:25:43.788Z","type":"message"}
{"nick":"dominictarr","message":"I don't like a parser stream using unshift, because that is roping a different object into doing your job","date":"2013-04-11T18:27:36.648Z","type":"message"}
{"nick":"dominictarr","message":"the parser should have it's own buffer","date":"2013-04-11T18:27:43.654Z","type":"message"}
{"nick":"dominictarr","message":"unshift should be private, and you should only call your own unshift","date":"2013-04-11T18:28:16.203Z","type":"message"}
{"nick":"isaacs","message":"hm.","date":"2013-04-11T18:30:22.991Z","type":"message"}
{"nick":"isaacs","message":"as it is now, it's public, and the border between C and A are pretty flimsy","date":"2013-04-11T18:30:40.771Z","type":"message"}
{"nick":"dominictarr","message":"with streams, I recommend people to treat write, end, on('data'…) as private and only use pipe.","date":"2013-04-11T18:32:34.764Z","type":"message"}
{"nick":"dominictarr","message":"('end', 'close', 'error' are okay)","date":"2013-04-11T18:32:51.418Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-04-11T18:35:56.911Z","type":"quit"}
{"nick":"isaacs","message":"hm","date":"2013-04-11T18:36:26.234Z","type":"message"}
{"nick":"isaacs","message":"ok, well... that's not how everyone does it :)","date":"2013-04-11T18:36:34.595Z","type":"message"}
{"nick":"spion","date":"2013-04-11T18:36:51.844Z","type":"join"}
{"nick":"isaacs","message":"people are using unshift() with fs streams and breaking them","date":"2013-04-11T18:36:52.560Z","type":"message"}
{"nick":"isaacs","message":"and then getting upset.","date":"2013-04-11T18:36:55.720Z","type":"message"}
{"nick":"Raynos","message":"isaacs: nope","date":"2013-04-11T18:37:06.204Z","type":"message"}
{"nick":"dominictarr","message":"it shouldn't matter what type of stream it is","date":"2013-04-11T18:38:58.001Z","type":"message"}
{"nick":"isaacs","message":"well... it does.  because some streams are tolerant of being interrupted during a _read()","date":"2013-04-11T18:39:26.076Z","type":"message"}
{"nick":"isaacs","message":"others are not","date":"2013-04-11T18:39:29.085Z","type":"message"}
{"nick":"isaacs","message":"fs streams are, for a bit","date":"2013-04-11T18:39:33.684Z","type":"message"}
{"nick":"Raynos","message":"isaacs: wait what, why would C do unshift ?","date":"2013-04-11T18:39:34.942Z","type":"message"}
{"nick":"isaacs","message":"then they suddenly aren't :)","date":"2013-04-11T18:39:38.463Z","type":"message"}
{"nick":"dominictarr","message":"Raynos: it's trying to be a parser","date":"2013-04-11T18:39:52.835Z","type":"message"}
{"nick":"isaacs","message":"Raynos: because C is pulling data off a socket, and then realizing it got too much, and putting some back","date":"2013-04-11T18:40:00.947Z","type":"message"}
{"nick":"dominictarr","message":"but using the source's buffer as a work bench","date":"2013-04-11T18:40:13.178Z","type":"message"}
{"nick":"Raynos","message":"why cant it just put the chunk in an array","date":"2013-04-11T18:40:15.764Z","type":"message"}
{"nick":"Raynos","message":"nistead of callign unshift ?","date":"2013-04-11T18:40:20.195Z","type":"message"}
{"nick":"dominictarr","message":"exactly","date":"2013-04-11T18:40:22.896Z","type":"message"}
{"nick":"isaacs","message":"Raynos: becuase then it passes that same socket off to someone else.","date":"2013-04-11T18:40:25.882Z","type":"message"}
{"nick":"Raynos","message":"isaacs: complex :(","date":"2013-04-11T18:40:39.811Z","type":"message"}
{"nick":"isaacs","message":"it says, \"Good news!  It's a websocket!  here's the req and res, and ALSO the socket!\"","date":"2013-04-11T18:40:45.341Z","type":"message"}
{"nick":"isaacs","message":"you know what...","date":"2013-04-11T18:41:22.229Z","type":"message"}
{"nick":"isaacs","message":"i SHOULD just deprecate unshift()","date":"2013-04-11T18:41:31.769Z","type":"message"}
{"nick":"dominictarr","message":"isaacs: +1","date":"2013-04-11T18:41:41.089Z","type":"message"}
{"nick":"isaacs","message":"and we figure out a better way to do this.","date":"2013-04-11T18:41:41.677Z","type":"message"}
{"nick":"isaacs","message":"but, without rewriting the http parser, i don't see how to do that","date":"2013-04-11T18:42:05.979Z","type":"message"}
{"nick":"isaacs","message":"you won't know how much to pull off of the socket to get to the body of a req that's upgraded.","date":"2013-04-11T18:42:31.654Z","type":"message"}
{"nick":"dominictarr","message":"what about you create a stream and initialize the buffer with some initial data?","date":"2013-04-11T18:42:45.554Z","type":"message"}
{"nick":"chrisdickinson","message":"i've been just keeping a pool around","date":"2013-04-11T18:43:12.497Z","type":"message"}
{"nick":"Raynos","message":"isaacs: cant the parser be a transform stream?","date":"2013-04-11T18:43:12.864Z","type":"message"}
{"nick":"chrisdickinson","message":"but i'm also still in classic streams world on top of through","date":"2013-04-11T18:43:22.720Z","type":"message"}
{"nick":"isaacs","message":"Raynos: moving http_parser.c to a transform stream is a great idea.  but it's also a 6 month project.","date":"2013-04-11T18:43:46.069Z","type":"message"}
{"nick":"dominictarr","message":"worth it","date":"2013-04-11T18:43:56.837Z","type":"message"}
{"nick":"chrisdickinson","message":"this problem came up quite a bit while doing git-list-pack","date":"2013-04-11T18:43:57.972Z","type":"message"}
{"nick":"isaacs","message":"and any effect can only be negative, so it'd be very difficult to do properly","date":"2013-04-11T18:44:01.128Z","type":"message"}
{"nick":"Raynos","message":"sounds more like a one weekend userland module :D","date":"2013-04-11T18:44:09.038Z","type":"message"}
{"nick":"isaacs","message":"Raynos: a slow one.","date":"2013-04-11T18:44:14.258Z","type":"message"}
{"nick":"Raynos","message":"oh :(","date":"2013-04-11T18:44:21.209Z","type":"message"}
{"nick":"isaacs","message":"Raynos: good luck with that :)","date":"2013-04-11T18:44:26.966Z","type":"message"}
{"nick":"isaacs","message":"http is hard to get right.","date":"2013-04-11T18:44:30.375Z","type":"message"}
{"nick":"chrisdickinson","message":"since i have to pool bytes while inflating because node's zlib doesn't give an indication of where the deflated data ends and the next object header begins","date":"2013-04-11T18:44:31.968Z","type":"message"}
{"nick":"isaacs","message":"surprisingly so.","date":"2013-04-11T18:44:32.399Z","type":"message"}
{"nick":"Raynos","message":"is it specced well?","date":"2013-04-11T18:44:41.623Z","type":"message"}
{"nick":"isaacs","message":"Raynos: not really, no.","date":"2013-04-11T18:44:49.584Z","type":"message"}
{"nick":"isaacs","message":"it's completely fucking bonkers.","date":"2013-04-11T18:44:54.681Z","type":"message"}
{"nick":"isaacs","message":"if you think you can do it in a week, it's because you don't understand it that well.  dig in deep.  the rabbit hole goes all teh way down.","date":"2013-04-11T18:45:10.391Z","type":"message"}
{"nick":"isaacs","message":"what i could do is create a Passthrough, push() the first chunk into it, and hten pipe() the socket into it","date":"2013-04-11T18:45:57.404Z","type":"message"}
{"nick":"isaacs","message":"but now you don't have the \"real\" socket, you have this fakey thing","date":"2013-04-11T18:46:06.179Z","type":"message"}
{"nick":"dominictarr","message":"whats flakey about that?","date":"2013-04-11T18:46:46.700Z","type":"message"}
{"nick":"dominictarr","message":"just reemit error and close on it","date":"2013-04-11T18:47:45.163Z","type":"message"}
{"nick":"isaacs","message":"well, the handle object isn't there, you can't setKeepAlive() on it, etc.","date":"2013-04-11T18:49:01.778Z","type":"message"}
{"nick":"isaacs","message":"no, you need the real socket.","date":"2013-04-11T18:49:41.739Z","type":"message"}
{"nick":"dominictarr","message":"in userland we all do stuff like this occasionally","date":"2013-04-11T18:49:54.871Z","type":"message"}
{"nick":"isaacs","message":"yeah, but this is core :)","date":"2013-04-11T18:50:01.429Z","type":"message"}
{"nick":"isaacs","message":"it's different","date":"2013-04-11T18:50:02.887Z","type":"message"}
{"nick":"dominictarr","message":"so, just rename unshift to _unshift ?","date":"2013-04-11T18:50:55.927Z","type":"message"}
{"nick":"isaacs","message":"the problem is that C *should* be the one to unshift!","date":"2013-04-11T18:51:17.084Z","type":"message"}
{"nick":"isaacs","message":"and A *shouldn't*","date":"2013-04-11T18:51:20.456Z","type":"message"}
{"nick":"Guest95467","new_nick":"ITpro","date":"2013-04-11T18:51:32.017Z","type":"nick"}
{"nick":"isaacs","message":"so, i'm thinking, maybe unshift() shouldn't unset the reading flat","date":"2013-04-11T18:51:33.057Z","type":"message"}
{"nick":"dominictarr","message":"not if it's it's already reading","date":"2013-04-11T18:52:14.425Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-04-11T18:52:43.297Z","type":"message"}
{"nick":"isaacs","message":"push() unsets the \"i am currently reading\" flag","date":"2013-04-11T18:52:49.815Z","type":"message"}
{"nick":"isaacs","message":"so _read can be called again","date":"2013-04-11T18:52:54.464Z","type":"message"}
{"nick":"st_luke","date":"2013-04-11T18:57:08.656Z","type":"join"}
{"nick":"Raynos","message":"isaacs: why is this so hard?","date":"2013-04-11T19:19:13.062Z","type":"message"}
{"nick":"Raynos","message":"isaacs: would `peek()` solve this better then `unshift()` ?","date":"2013-04-11T19:19:29.357Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-04-11T19:19:45.289Z","type":"quit"}
{"nick":"isaacs","message":"Raynos: not really","date":"2013-04-11T19:20:17.174Z","type":"message"}
{"nick":"isaacs","message":"i mean, a little","date":"2013-04-11T19:20:21.577Z","type":"message"}
{"nick":"isaacs","message":"but you want to be able to be kind of optimistic in what you pull off the wire","date":"2013-04-11T19:20:40.614Z","type":"message"}
{"nick":"isaacs","message":"read() first, ask questions later, that kind of thing","date":"2013-04-11T19:20:49.260Z","type":"message"}
{"nick":"isaacs","message":"since most of the time, that'll be faster.","date":"2013-04-11T19:20:53.285Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 4, free: 38]","date":"2013-04-11T19:21:42.257Z","type":"message"}
{"nick":"spion","reason":"Ping timeout: 246 seconds","date":"2013-04-11T19:25:52.825Z","type":"quit"}
{"nick":"stagas","reason":"Read error: Connection reset by peer","date":"2013-04-11T19:28:13.553Z","type":"quit"}
{"nick":"st_luke","date":"2013-04-11T19:38:55.654Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 252 seconds","date":"2013-04-11T19:44:17.442Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-04-11T19:49:11.534Z","type":"join"}
{"nick":"defunctzombie","message":"st_luke: find me once things have settled down with the bitcoin shits and I can hook you up","date":"2013-04-11T19:58:05.756Z","type":"message"}
{"nick":"jcrugzz_","date":"2013-04-11T19:58:18.692Z","type":"join"}
{"nick":"st_luke","message":"defunctzombie: oh i gotta fund my bitfloor account also","date":"2013-04-11T19:58:33.861Z","type":"message"}
{"nick":"defunctzombie","message":"right now it is very chaotic","date":"2013-04-11T19:58:54.958Z","type":"message"}
{"nick":"jcrugzz","reason":"Ping timeout: 264 seconds","date":"2013-04-11T20:02:00.422Z","type":"quit"}
{"nick":"jcrugzz_","new_nick":"jcrugzz","date":"2013-04-11T20:03:34.551Z","type":"nick"}
{"nick":"Domeni___","message":"isaacs: why does npm init insert \"gitHead\" into package.json?","date":"2013-04-11T20:05:16.061Z","type":"message"}
{"nick":"isaacs","message":"Domeni___: probably just because readPackageJson does that","date":"2013-04-11T20:05:33.131Z","type":"message"}
{"nick":"isaacs","message":"Domeni___: and init doesn't un-do it.","date":"2013-04-11T20:05:43.540Z","type":"message"}
{"nick":"isaacs","message":"Domeni___: gitHead is important for other reasons.","date":"2013-04-11T20:05:52.125Z","type":"message"}
{"nick":"Domeni___","message":"hmm","date":"2013-04-11T20:06:22.650Z","type":"message"}
{"nick":"isaacs","message":"but init should probably remove it.","date":"2013-04-11T20:06:42.458Z","type":"message"}
{"nick":"Raynos","message":"Domeni___: you need an irc bot thing","date":"2013-04-11T20:07:29.265Z","type":"message"}
{"nick":"ITpro","date":"2013-04-11T20:07:43.128Z","type":"quit"}
{"nick":"Domeni___","message":"Raynos: to fix my name problems?","date":"2013-04-11T20:07:45.849Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2013-04-11T20:07:51.759Z","type":"message"}
{"nick":"ITpro","date":"2013-04-11T20:08:18.172Z","type":"join"}
{"nick":"Domeni___","message":"yeah","date":"2013-04-11T20:09:23.579Z","type":"message"}
{"nick":"Raynos","message":"isaacs: should the new http parser be written in JS ?","date":"2013-04-11T20:13:38.851Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-04-11T20:17:54.816Z","type":"quit"}
{"nick":"Raynos","message":"Domeni___: Is it bad to have a `then` property of a javascript object when its not a promise","date":"2013-04-11T20:20:40.865Z","type":"message"}
{"nick":"Raynos","message":"has the JavaScript promise community come far enough to be able to say \"fuck you. the word then belongs to us. your being a dick\"","date":"2013-04-11T20:21:00.202Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 4, free: 40]","date":"2013-04-11T20:21:42.391Z","type":"message"}
{"nick":"Domeni___","message":"Raynos: only if you want to use that object as the return value inside a promise callback.","date":"2013-04-11T20:22:57.946Z","type":"message"}
{"nick":"Raynos","message":"blargh this is a similar problem","date":"2013-04-11T20:23:20.632Z","type":"message"}
{"nick":"Domeni___","message":"if your system does not have promises, or does not use the other thenables inside a promise context, you're fine","date":"2013-04-11T20:23:22.188Z","type":"message"}
{"nick":"Raynos","message":"that streams2 has","date":"2013-04-11T20:23:23.452Z","type":"message"}
{"nick":"Raynos","message":"\"your json stream cant contain null & undefined. Those are special symboles meaning END OF STREAM\"","date":"2013-04-11T20:23:36.541Z","type":"message"}
{"nick":"Domeni___","message":"isn't that only applicable to binary streams?","date":"2013-04-11T20:25:29.263Z","type":"message"}
{"nick":"Domeni___","message":"i.e. object streams can contain them?","date":"2013-04-11T20:25:34.324Z","type":"message"}
{"nick":"Raynos","message":"no","date":"2013-04-11T20:25:42.869Z","type":"message"}
{"nick":"Raynos","message":"you cant put null & undefined in object streams","date":"2013-04-11T20:25:49.351Z","type":"message"}
{"nick":"Domeni___","message":"oh, wow","date":"2013-04-11T20:25:50.719Z","type":"message"}
{"nick":"Domeni___","message":"that's amazingly horrible","date":"2013-04-11T20:26:02.070Z","type":"message"}
{"nick":"Raynos","message":"just like","date":"2013-04-11T20:26:08.290Z","type":"message"}
{"nick":"Raynos","message":"not having an object with a then property","date":"2013-04-11T20:26:12.962Z","type":"message"}
{"nick":"Raynos","message":"in a promise","date":"2013-04-11T20:26:14.377Z","type":"message"}
{"nick":"Domeni___","message":"but then again object streams are a strange hack anyway","date":"2013-04-11T20:26:15.196Z","type":"message"}
{"nick":"Raynos","message":"is amazingly horrible","date":"2013-04-11T20:26:17.723Z","type":"message"}
{"nick":"Raynos","message":"its a trade off","date":"2013-04-11T20:26:33.015Z","type":"message"}
{"nick":"Raynos","message":"for streams its \"why would you want null as a chunk in a stream. push(null) is convenient\"","date":"2013-04-11T20:26:46.621Z","type":"message"}
{"nick":"Raynos","message":"for promises its \"Having a thenable being unpacked properly is useful for chaining. Why would you want a value with a then property\"","date":"2013-04-11T20:27:11.488Z","type":"message"}
{"nick":"ins0mnia","date":"2013-04-11T20:27:27.935Z","type":"join"}
{"nick":"Domeni___","message":"in both cases, the answer is you need a wrapper if you want arbitrary data.","date":"2013-04-11T20:27:41.492Z","type":"message"}
{"nick":"Raynos","message":"correct","date":"2013-04-11T20:28:00.199Z","type":"message"}
{"nick":"isaacs","message":"Raynos, Domeni___: how would one signal the end, then?","date":"2013-04-11T20:28:12.056Z","type":"message"}
{"nick":"Raynos","message":"however I actually think when building new abstractions this problem should die","date":"2013-04-11T20:28:17.212Z","type":"message"}
{"nick":"Domeni___","message":"isaacs: .signalEnd() doesn't work?","date":"2013-04-11T20:28:39.421Z","type":"message"}
{"nick":"Raynos","message":"isaacs: `read(function (err, value) { })`","date":"2013-04-11T20:28:42.883Z","type":"message"}
{"nick":"isaacs","message":"Raynos: that doesn't work for the many reasons i've discussed with you in the past.","date":"2013-04-11T20:28:53.156Z","type":"message"}
{"nick":"Raynos","message":"if (err === true) { /* END */ } else if (err) { /* OOPS */ } else { /* CHUNK VALUE */ }","date":"2013-04-11T20:29:02.463Z","type":"message"}
{"nick":"isaacs","message":"Raynos: that works only for files, and some synthetic stream.s","date":"2013-04-11T20:29:14.937Z","type":"message"}
{"nick":"isaacs","message":"Raynos: it doens't work for crypto, tcp, tls, tty, zlib, or basically any other stream ever.","date":"2013-04-11T20:29:29.600Z","type":"message"}
{"nick":"Raynos","message":"why not","date":"2013-04-11T20:29:47.987Z","type":"message"}
{"nick":"Raynos","message":"just do cb(null, \"\")","date":"2013-04-11T20:29:53.790Z","type":"message"}
{"nick":"isaacs","message":"because you're not guaranteed to have a single piece of data from a single attempted read.","date":"2013-04-11T20:30:03.976Z","type":"message"}
{"nick":"Raynos","message":"https://gist.github.com/Raynos/6b3b2b99aa0972e58b71#file-stream-thing-js","date":"2013-04-11T20:30:04.458Z","type":"message"}
{"nick":"isaacs","message":"Raynos: what happens when you get chunks at arbitrary times, sometimes 2 from a single _read() call?","date":"2013-04-11T20:30:35.243Z","type":"message"}
{"nick":"isaacs","message":"now it's on the implementor to juggle a callback, and make sure they call it exactly once.","date":"2013-04-11T20:30:46.794Z","type":"message"}
{"nick":"Raynos","message":"buffer them","date":"2013-04-11T20:30:46.976Z","type":"message"}
{"nick":"isaacs","message":"yeah, no.","date":"2013-04-11T20:30:51.447Z","type":"message"}
{"nick":"isaacs","message":"that's why streams1 doesn't work.","date":"2013-04-11T20:31:01.712Z","type":"message"}
{"nick":"Raynos","message":"anyway this is a completely disjoint problem","date":"2013-04-11T20:31:15.783Z","type":"message"}
{"nick":"isaacs","message":"saying \"buffer them\" = saying \"they're your bugs\"","date":"2013-04-11T20:31:18.805Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-04-11T20:31:20.349Z","type":"message"}
{"nick":"Raynos","message":"the answer to how do you signal end without null","date":"2013-04-11T20:31:24.607Z","type":"message"}
{"nick":"isaacs","message":"read(cb) = not gonna happen, sorry.","date":"2013-04-11T20:31:25.539Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2013-04-11T20:31:28.854Z","type":"message"}
{"nick":"Raynos","message":"is read returns a tuple [token, chunk]","date":"2013-04-11T20:31:30.957Z","type":"message"}
{"nick":"isaacs","message":"we could add a setEndSigil(blerg)","date":"2013-04-11T20:31:43.572Z","type":"message"}
{"nick":"Domeni___","message":"that's actually how ES6 iterators work now","date":"2013-04-11T20:31:44.156Z","type":"message"}
{"nick":"Raynos","message":"thats the only way to do arbitary chunks in a stream","date":"2013-04-11T20:31:44.992Z","type":"message"}
{"nick":"Domeni___","message":"no more StopIteration","date":"2013-04-11T20:31:46.461Z","type":"message"}
{"nick":"isaacs","message":"Domeni___: oh, really?  throw SI is dead?","date":"2013-04-11T20:31:59.371Z","type":"message"}
{"nick":"isaacs","message":"Domeni___: that's GREAT news.","date":"2013-04-11T20:32:04.503Z","type":"message"}
{"nick":"Domeni___","message":"isaacs: yeah :)","date":"2013-04-11T20:32:07.441Z","type":"message"}
{"nick":"Raynos","message":"isaacs: no, saying buffer them is everyone uses buffer(stream) -> Stream function","date":"2013-04-11T20:32:19.543Z","type":"message"}
{"nick":"isaacs","message":"every time i heard someone talk about how it's not a big deal it sounded like, \"Look, guns are only a problem if you point them at people. we need to turn off lights from across the room, so you use the LightSwitchGun, and point it directly at the switch, and shoot very gently, and it Just Works.  I don't see what the problem is.\"","date":"2013-04-11T20:33:01.603Z","type":"message"}
{"nick":"Raynos","message":"anyway","date":"2013-04-11T20:33:28.624Z","type":"message"}
{"nick":"Domeni___","message":"i <3 analogies ^_^","date":"2013-04-11T20:33:37.385Z","type":"message"}
{"nick":"Raynos","message":"I like the idea mine & dominictarr's pull-streams","date":"2013-04-11T20:33:39.419Z","type":"message"}
{"nick":"isaacs","message":"ok, Raynos, yes, of course, you can hack around any interface in userland, because it's software.","date":"2013-04-11T20:33:54.542Z","type":"message"}
{"nick":"Raynos","message":"the only thing left to do is rewrite node core to use them and proof there are no problems","date":"2013-04-11T20:33:56.407Z","type":"message"}
{"nick":"Raynos","message":"then the only remaining problem is back compat","date":"2013-04-11T20:34:09.271Z","type":"message"}
{"nick":"isaacs","message":"pretend for a moment that the node core stream interface has to be the lowest common denominator, and also back compat, and also efficient and fast, and also work for all the streams in node-core.","date":"2013-04-11T20:34:25.931Z","type":"message"}
{"nick":"isaacs","message":"because that's the constraints here.","date":"2013-04-11T20:34:33.940Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2013-04-11T20:34:41.993Z","type":"message"}
{"nick":"isaacs","message":"read(cb) = no, sorry.","date":"2013-04-11T20:34:49.170Z","type":"message"}
{"nick":"isaacs","message":"not a realistic solution.","date":"2013-04-11T20:34:53.051Z","type":"message"}
{"nick":"Raynos","message":"ignoring back compat I want to believe read(cb) can do it","date":"2013-04-11T20:34:58.992Z","type":"message"}
{"nick":"isaacs","message":"again, what happens when you have a stream with assymmetric data?","date":"2013-04-11T20:35:23.008Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) thelevybreaks@... successfully signed up for developer browserling plan ($20). Cash money! /!\\","date":"2013-04-11T20:35:33.759Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) paid account successfully upgraded /!\\","date":"2013-04-11T20:35:33.927Z","type":"message"}
{"nick":"Raynos","message":"what happens with read() right now ?","date":"2013-04-11T20:35:35.471Z","type":"message"}
{"nick":"Domeni___","message":"i kind of remember reading somewhere, but why does .read() even exist? it seems the only sensible way to consume a readable stream is to build a writable stream.","date":"2013-04-11T20:35:43.521Z","type":"message"}
{"nick":"isaacs","message":"Domeni___: it's perfectly sensible to use 'data' events, or call read() directly.","date":"2013-04-11T20:35:58.189Z","type":"message"}
{"nick":"isaacs","message":"Domeni___: i do that all the time.  it's fine.","date":"2013-04-11T20:36:03.238Z","type":"message"}
{"nick":"Domeni___","message":"isaacs: but calling .read() gives you an unpredictable amount of data. when is that useful?","date":"2013-04-11T20:36:17.230Z","type":"message"}
{"nick":"isaacs","message":"Domeni___: read(10) gives you 10 bytes, or the last <=10 bytes.","date":"2013-04-11T20:36:32.052Z","type":"message"}
{"nick":"isaacs","message":"it's not that unpredictable.","date":"2013-04-11T20:36:36.136Z","type":"message"}
{"nick":"Raynos","message":"consider https://gist.github.com/Raynos/3c8812c0262b5ee0493b","date":"2013-04-11T20:36:42.266Z","type":"message"}
{"nick":"Domeni___","message":"that's pretty unpredictable. anywhere from 0-10 bytes? what kind of app logic can use that? i'm genuinely curious.","date":"2013-04-11T20:37:08.643Z","type":"message"}
{"nick":"isaacs","message":"Raynos: ee leak","date":"2013-04-11T20:37:10.647Z","type":"message"}
{"nick":"CoverSlide","message":"read(Infinity)","date":"2013-04-11T20:37:12.596Z","type":"message"}
{"nick":"Raynos","message":"isaacs: fixed.","date":"2013-04-11T20:37:22.958Z","type":"message"}
{"nick":"isaacs","message":"Raynos: s.onCE('readable', read)","date":"2013-04-11T20:37:24.917Z","type":"message"}
{"nick":"isaacs","message":"yep","date":"2013-04-11T20:37:25.729Z","type":"message"}
{"nick":"Raynos","message":"i actually want to understand the problem with that function","date":"2013-04-11T20:37:40.249Z","type":"message"}
{"nick":"Raynos","message":"other then performance & back compat","date":"2013-04-11T20:37:44.687Z","type":"message"}
{"nick":"Raynos","message":"performance penalty is a few extra function calls","date":"2013-04-11T20:37:59.615Z","type":"message"}
{"nick":"isaacs","message":"Raynos: other than ${the two things i care most about}","date":"2013-04-11T20:38:00.516Z","type":"message"}
{"nick":"isaacs","message":"Raynos: the perf penalty is EE.once()","date":"2013-04-11T20:38:09.607Z","type":"message"}
{"nick":"isaacs","message":"Raynos: that's why we juggle so many flags in streams2","date":"2013-04-11T20:38:22.040Z","type":"message"}
{"nick":"isaacs","message":"because once is prohibitive for main-flow code.","date":"2013-04-11T20:38:31.276Z","type":"message"}
{"nick":"Raynos","message":"isaacs: the claim is \"we can remove read() & \"readable\" event in favor of read(cb) and increase performance\"","date":"2013-04-11T20:38:43.481Z","type":"message"}
{"nick":"Raynos","message":"but that's an empty claim.","date":"2013-04-11T20:38:55.018Z","type":"message"}
{"nick":"isaacs","message":"it is","date":"2013-04-11T20:39:07.248Z","type":"message"}
{"nick":"isaacs","message":"Raynos: also, how do you read not-all-of-it","date":"2013-04-11T20:39:20.107Z","type":"message"}
{"nick":"Raynos","message":"what I'm really asking is a callback based pull stream a bad abstraction for crypto, tls & zllib ?","date":"2013-04-11T20:39:24.521Z","type":"message"}
{"nick":"isaacs","message":"Raynos: var ninteenBytes = read(19)","date":"2013-04-11T20:39:33.195Z","type":"message"}
{"nick":"Raynos","message":"isaacs: out of scope","date":"2013-04-11T20:39:43.795Z","type":"message"}
{"nick":"Raynos","message":"the parser use case is way too small imho","date":"2013-04-11T20:39:51.488Z","type":"message"}
{"nick":"isaacs","message":"Raynos: haha, ok","date":"2013-04-11T20:39:51.740Z","type":"message"}
{"nick":"Domeni___","message":"parsers can't use .read(19) can they?","date":"2013-04-11T20:40:04.468Z","type":"message"}
{"nick":"Domeni___","message":"because that's 0-19 bytes","date":"2013-04-11T20:40:08.572Z","type":"message"}
{"nick":"Raynos","message":"var parser = ParseReader(stream); parser.read(19)","date":"2013-04-11T20:40:12.170Z","type":"message"}
{"nick":"Domeni___","message":"i'm still confused about this","date":"2013-04-11T20:40:12.387Z","type":"message"}
{"nick":"CoverSlide","message":"have your parser check the length afterwards","date":"2013-04-11T20:40:20.172Z","type":"message"}
{"nick":"Domeni___","message":"sure then what?","date":"2013-04-11T20:40:27.957Z","type":"message"}
{"nick":"Raynos","message":"Domeni___: Its 19 bytes unless its n bytes followed by EOS","date":"2013-04-11T20:40:32.418Z","type":"message"}
{"nick":"CoverSlide","message":"do nothing until the next chunk comes in","date":"2013-04-11T20:40:40.580Z","type":"message"}
{"nick":"isaacs","message":"Domeni___: if the stream is ended, you get whatever's left.","date":"2013-04-11T20:40:44.405Z","type":"message"}
{"nick":"isaacs","message":"it's the same as how read(2) works if you give it a length requremnet","date":"2013-04-11T20:40:57.754Z","type":"message"}
{"nick":"Domeni___","message":"Raynos: isaacs: oh. i thought it was like 5 bytes if only 5 bytes have arrived on the client so far.","date":"2013-04-11T20:41:00.857Z","type":"message"}
{"nick":"Domeni___","message":"(e.g. for an incoming http response stream)","date":"2013-04-11T20:41:14.206Z","type":"message"}
{"nick":"isaacs","message":"Raynos: so, with this read(cb) model, we just wait around for there to be more data, before calling the callback","date":"2013-04-11T20:41:36.432Z","type":"message"}
{"nick":"pkrumins","message":"guys, what's the difference between 'close' and 'exit' for require('child_process').spawn'ed processes? (talking about node 0.8 as that's what we use in production). I'm seeing problems that sometimes 'exit' wont fire and 'close' will, but sometimes it's the other way around, 'exit' will fire, but 'close' won't. has anyone seen anything like this?","date":"2013-04-11T20:41:44.799Z","type":"message"}
{"nick":"pkrumins","message":"so what i'm trying right now is: ps.on('exit', f); ps.on('close', f); var psFired = 0; function f () { if  (!psFired) { ...; psFired = 1 } }","date":"2013-04-11T20:42:03.974Z","type":"message"}
{"nick":"isaacs","message":"pkrumins: 'exit' = we have an exit code. 'close' = we have an exit code, and the stdio fd's are closed.","date":"2013-04-11T20:42:07.645Z","type":"message"}
{"nick":"isaacs","message":"pkrumins: if you only listen on 'exit', you might miss some stdout data","date":"2013-04-11T20:42:27.350Z","type":"message"}
{"nick":"pkrumins","message":"isaacs: does that mean 'exit' should always happen?","date":"2013-04-11T20:42:28.468Z","type":"message"}
{"nick":"isaacs","message":"pkrumins: yes.","date":"2013-04-11T20:42:32.262Z","type":"message"}
{"nick":"Raynos","message":"isaacs: yes. so read(cb) should be trivial to implement for pull sources like file descriptors","date":"2013-04-11T20:42:37.310Z","type":"message"}
{"nick":"pkrumins","message":"so weird because i'm not seeing 'exit'! but i'm seeing 'close'","date":"2013-04-11T20:42:44.845Z","type":"message"}
{"nick":"pkrumins","message":"(or the other way around)","date":"2013-04-11T20:42:48.004Z","type":"message"}
{"nick":"isaacs","message":"'close' will generally follow it closely, *unless* the stdio is shared.","date":"2013-04-11T20:42:53.066Z","type":"message"}
{"nick":"CoverSlide","message":"bug report!","date":"2013-04-11T20:42:54.177Z","type":"message"}
{"nick":"Raynos","message":"its harder to implement for push sources like sockets but that's already hard given that streams2 is pull","date":"2013-04-11T20:42:54.355Z","type":"message"}
{"nick":"isaacs","message":"Raynos: it's actualy really easy to use the current interfaces for sockets.","date":"2013-04-11T20:43:08.571Z","type":"message"}
{"nick":"isaacs","message":"and other pushy things","date":"2013-04-11T20:43:14.723Z","type":"message"}
{"nick":"isaacs","message":"though, rather than \"pushy\", i should say, \"assymmetric\"","date":"2013-04-11T20:43:24.036Z","type":"message"}
{"nick":"pkrumins","message":"isaacs: do you think the workaround that i'm trying is reasonable?","date":"2013-04-11T20:43:32.457Z","type":"message"}
{"nick":"isaacs","message":"ie, the availability of data is not strictly tied to the calls to _read()","date":"2013-04-11T20:43:39.254Z","type":"message"}
{"nick":"pkrumins","message":"until i figure out why i never see 'exit'","date":"2013-04-11T20:43:39.382Z","type":"message"}
{"nick":"isaacs","message":"pkrumins: i dunno, seems fine, i guess.","date":"2013-04-11T20:43:48.153Z","type":"message"}
{"nick":"Raynos","message":"isaacs: thats because you have a 700 line abstraction that makes the problem dissappear","date":"2013-04-11T20:43:50.105Z","type":"message"}
{"nick":"pkrumins","message":"isaacs: yes, thanks. trying that. :)","date":"2013-04-11T20:44:03.617Z","type":"message"}
{"nick":"Raynos","message":"isaacs: can you explain more with what you mean with assymmetric","date":"2013-04-11T20:44:11.171Z","type":"message"}
{"nick":"isaacs","message":"pkrumins: you can also do var f = once(fucntion() { do stuff }); ps.on('close', f).on('end', f)","date":"2013-04-11T20:44:35.252Z","type":"message"}
{"nick":"isaacs","message":"pkrumins: npm install once","date":"2013-04-11T20:44:44.492Z","type":"message"}
{"nick":"isaacs","message":"Raynos: i mean, data may come at arbitrary times.","date":"2013-04-11T20:44:53.932Z","type":"message"}
{"nick":"pkrumins","message":"isaacs: oh cool!","date":"2013-04-11T20:45:11.715Z","type":"message"}
{"nick":"isaacs","message":"Raynos: so, i end up needing the same exact machinery as i have now, with push() that returns a boolean, and a _read() function to open teh gates again.","date":"2013-04-11T20:45:19.562Z","type":"message"}
{"nick":"isaacs","message":"Raynos: so, basically, read(cb) is strictly an increase in complexity","date":"2013-04-11T20:45:56.547Z","type":"message"}
{"nick":"isaacs","message":"Raynos: also, i still have to make sure i don't have parallel _read()s happening, because threads and files.","date":"2013-04-11T20:46:19.561Z","type":"message"}
{"nick":"isaacs","message":"Raynos: and, i still dont' see what this has to do with passing null as the EOF chunk.","date":"2013-04-11T20:46:47.302Z","type":"message"}
{"nick":"Raynos","message":"well","date":"2013-04-11T20:46:59.642Z","type":"message"}
{"nick":"Raynos","message":"either read(function (token, chunk) { })","date":"2013-04-11T20:47:06.751Z","type":"message"}
{"nick":"Raynos","message":"or [token, chunk] = read()","date":"2013-04-11T20:47:10.857Z","type":"message"}
{"nick":"Raynos","message":"solves the EOF chunk problem","date":"2013-04-11T20:47:15.008Z","type":"message"}
{"nick":"isaacs","message":"Raynos: the simpler thing is to add an eofSigil:<value> option to the ReadableState, and have it default to null, and push(thatThing) is EOF","date":"2013-04-11T20:47:17.167Z","type":"message"}
{"nick":"isaacs","message":"Raynos: then you can set it to your own object or whatever.","date":"2013-04-11T20:47:24.076Z","type":"message"}
{"nick":"Raynos","message":"that solves the problem too :P","date":"2013-04-11T20:47:32.279Z","type":"message"}
{"nick":"isaacs","message":"and tha'ts WAY simpler.","date":"2013-04-11T20:47:38.561Z","type":"message"}
{"nick":"isaacs","message":"than rad(cb)","date":"2013-04-11T20:47:40.661Z","type":"message"}
{"nick":"dominictarr","message":"or have another function this.pushEnd()","date":"2013-04-11T20:47:44.054Z","type":"message"}
{"nick":"isaacs","message":"or read() that returns not-data","date":"2013-04-11T20:47:45.028Z","type":"message"}
{"nick":"dominictarr","message":"isaacs: Raynos use NaN for end!","date":"2013-04-11T20:48:04.788Z","type":"message"}
{"nick":"Raynos","message":":D","date":"2013-04-11T20:48:09.842Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: that's kind of a dick move ;)","date":"2013-04-11T20:48:18.342Z","type":"message"}
{"nick":"Raynos","message":"if (chunk === NaN) { /* end */ }","date":"2013-04-11T20:48:20.922Z","type":"message"}
{"nick":"isaacs","message":"Raynos: SURPRISE!","date":"2013-04-11T20:48:26.972Z","type":"message"}
{"nick":"Raynos","message":":D","date":"2013-04-11T20:48:29.842Z","type":"message"}
{"nick":"isaacs","message":".. NaN === NaN","date":"2013-04-11T20:48:36.215Z","type":"message"}
{"nick":"isaacs","message":"purr: ?","date":"2013-04-11T20:48:39.990Z","type":"message"}
{"nick":"Raynos","message":"issue: \"WHY MY STREAM NEVER END\" ?!?!?!","date":"2013-04-11T20:48:44.405Z","type":"message"}
{"nick":"dominictarr","message":"trololololol","date":"2013-04-11T20:48:47.310Z","type":"message"}
{"nick":"dominictarr","message":"Schrodingers Stream","date":"2013-04-11T20:49:06.641Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: we contemplated a stream.eof() that would basically push(null)","date":"2013-04-11T20:49:42.469Z","type":"message"}
{"nick":"isaacs","message":"maybe that's a better way to do it, but at least for non-objectMode streams, push(null) must be kept forever.","date":"2013-04-11T20:49:54.836Z","type":"message"}
{"nick":"jesusabdullah","message":"tanepiper: Tell me about 15 stone babbies","date":"2013-04-11T20:50:27.391Z","type":"message"}
{"nick":"thl0","message":"funny had that issue yesterday","date":"2013-04-11T20:50:29.419Z","type":"message"}
{"nick":"thl0","message":"NaN","date":"2013-04-11T20:50:31.691Z","type":"message"}
{"nick":"jesusabdullah","message":"tanepiper: a stone is like 15, 20 lbs no?","date":"2013-04-11T20:50:36.225Z","type":"message"}
{"nick":"dominictarr","message":"isaacs: 0.10 has only just come out, is it really a legacy problem?","date":"2013-04-11T20:50:45.511Z","type":"message"}
{"nick":"dominictarr","message":"Raynos: just box your nulls","date":"2013-04-11T20:51:07.965Z","type":"message"}
{"nick":"dominictarr","message":"push(new Null())","date":"2013-04-11T20:51:17.225Z","type":"message"}
{"nick":"jesusabdullah","message":"I'm gonna make my OWN stream api! With blackjack!","date":"2013-04-11T20:51:17.350Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: yeah, i mean, you can easily abstract around it.","date":"2013-04-11T20:51:26.788Z","type":"message"}
{"nick":"jesusabdullah","message":"and then bitch that nobody will use my stream api","date":"2013-04-11T20:51:28.276Z","type":"message"}
{"nick":"dominictarr","message":"juliangruber: welcome to the club!","date":"2013-04-11T20:51:37.472Z","type":"message"}
{"nick":"Raynos","message":"this isnt a problem i actualy have :D","date":"2013-04-11T20:51:59.134Z","type":"message"}
{"nick":"isaacs","message":"ok, coffee is wearing off.  food tiems.","date":"2013-04-11T20:52:11.583Z","type":"message"}
{"nick":"Raynos","message":"isaacs: is there a good documentation somewhere for a \"raw pushy stream\" API ?","date":"2013-04-11T20:52:28.809Z","type":"message"}
{"nick":"isaacs","message":"Raynos: I think the docs for Readable.push() has an example or something","date":"2013-04-11T20:52:54.217Z","type":"message"}
{"nick":"dominictarr","message":"pushy? like classic-streams?","date":"2013-04-11T20:52:58.337Z","type":"message"}
{"nick":"Raynos","message":"like if I wanted to make read(cb) work with an assymettric stream what would such a thing look like","date":"2013-04-11T20:52:58.469Z","type":"message"}
{"nick":"Raynos","message":"i mean more what's the raw socket look like","date":"2013-04-11T20:53:11.403Z","type":"message"}
{"nick":"Raynos","message":"readStart() and .onValue or something","date":"2013-04-11T20:53:19.031Z","type":"message"}
{"nick":"Raynos","message":"i guess the source will do","date":"2013-04-11T20:53:44.970Z","type":"message"}
{"nick":"isaacs","message":"yeah, read the JS docs.","date":"2013-04-11T20:53:53.787Z","type":"message"}
{"nick":"isaacs","message":"they're written in JavaScript, the universal language of JavaScript","date":"2013-04-11T20:54:06.510Z","type":"message"}
{"nick":"jesusabdullah","message":"lol","date":"2013-04-11T20:55:26.091Z","type":"message"}
{"nick":"Raynos","message":":D","date":"2013-04-11T20:57:42.352Z","type":"message"}
{"nick":"ins0mnia","reason":"Remote host closed the connection","date":"2013-04-11T20:57:53.591Z","type":"quit"}
{"nick":"jesusabdullah","message":"I wonder if the ghettomart has AA batteries.....","date":"2013-04-11T20:58:11.735Z","type":"message"}
{"nick":"AvianFlu","message":"YOU'RE a AA battery!","date":"2013-04-11T21:00:18.849Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: how do pull streams deal with errors. Buffering errors feels wrong","date":"2013-04-11T21:03:25.838Z","type":"message"}
{"nick":"dominictarr","message":"you get the error on the next read","date":"2013-04-11T21:04:07.566Z","type":"message"}
{"nick":"dominictarr","message":"but… a sink would call read(err) immediately","date":"2013-04-11T21:04:29.585Z","type":"message"}
{"nick":"Raynos","message":"that makes me sad :(","date":"2013-04-11T21:04:32.744Z","type":"message"}
{"nick":"Raynos","message":"what about take(5)","date":"2013-04-11T21:04:49.871Z","type":"message"}
{"nick":"dominictarr","message":"what about it?","date":"2013-04-11T21:05:02.048Z","type":"message"}
{"nick":"Raynos","message":"i take 5 items and then theres a buffered error sitting around","date":"2013-04-11T21:05:04.571Z","type":"message"}
{"nick":"Raynos","message":"because the error happened between item 5 & 6","date":"2013-04-11T21:05:14.007Z","type":"message"}
{"nick":"dominictarr","message":"you are talking in abstract. errors are concrete.","date":"2013-04-11T21:05:51.453Z","type":"message"}
{"nick":"Raynos","message":"i have a tcp socket","date":"2013-04-11T21:06:09.789Z","type":"message"}
{"nick":"dominictarr","message":"platonic streams never error","date":"2013-04-11T21:06:11.843Z","type":"message"}
{"nick":"Raynos","message":"and wrap it in a pull stream abstraction","date":"2013-04-11T21:06:14.992Z","type":"message"}
{"nick":"Raynos","message":"now im a slow and lazy reading","date":"2013-04-11T21:06:24.836Z","type":"message"}
{"nick":"Raynos","message":"so i just pull a chunk out once per second","date":"2013-04-11T21:06:29.860Z","type":"message"}
{"nick":"Raynos","message":"or maybe","date":"2013-04-11T21:06:32.385Z","type":"message"}
{"nick":"Raynos","message":"once per whenever I feel like it","date":"2013-04-11T21:06:37.045Z","type":"message"}
{"nick":"Raynos","message":"the push stream emits an error like it would when im not reading from it","date":"2013-04-11T21:06:59.775Z","type":"message"}
{"nick":"Raynos","message":"The basic problem is","date":"2013-04-11T21:07:06.804Z","type":"message"}
{"nick":"dominictarr","message":"if you get an error, respond with that in the next read…","date":"2013-04-11T21:07:12.516Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: but the next read can happy in an arbitrary time in the future","date":"2013-04-11T21:07:29.512Z","type":"message"}
{"nick":"dominictarr","message":"you won't have much in the buffer anyway, because you will only pull it in when someone calls read","date":"2013-04-11T21:07:38.501Z","type":"message"}
{"nick":"Raynos","message":"the problem is I dont like a pull mechanism of reading errors","date":"2013-04-11T21:07:56.474Z","type":"message"}
{"nick":"Raynos","message":"because it can lead to boxed errors that are never read or looked at","date":"2013-04-11T21:08:05.626Z","type":"message"}
{"nick":"dominictarr","message":"well… give your stream a special onError handler","date":"2013-04-11T21:08:24.117Z","type":"message"}
{"nick":"dominictarr","message":"net.connect(port, host, onError) -> PullSourceStream","date":"2013-04-11T21:08:54.918Z","type":"message"}
{"nick":"dominictarr","message":"anything else is horribly complex, or extends the api in an ugly way","date":"2013-04-11T21:09:42.660Z","type":"message"}
{"nick":"Raynos","message":"basically waht I want","date":"2013-04-11T21:10:39.778Z","type":"message"}
{"nick":"Raynos","message":"is for paused things to never error","date":"2013-04-11T21:10:43.498Z","type":"message"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-04-11T21:11:58.075Z","type":"quit"}
{"nick":"st_luke","date":"2013-04-11T21:11:59.407Z","type":"join"}
{"nick":"dguttman","date":"2013-04-11T21:13:25.092Z","type":"join"}
{"nick":"dominictarr","message":"what? but that is the opposite of what you just said","date":"2013-04-11T21:14:15.975Z","type":"message"}
{"nick":"dominictarr","message":"getting the error in the next read is the same as paused things to not error","date":"2013-04-11T21:14:51.092Z","type":"message"}
{"nick":"Raynos","message":"ok","date":"2013-04-11T21:16:15.174Z","type":"message"}
{"nick":"Raynos","message":"what I want is to be able to pause a thing","date":"2013-04-11T21:16:20.613Z","type":"message"}
{"nick":"Raynos","message":"and never resume it","date":"2013-04-11T21:16:23.437Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-04-11T21:16:26.054Z","type":"quit"}
{"nick":"Raynos","message":"and not miss an error","date":"2013-04-11T21:16:26.181Z","type":"message"}
{"nick":"nicholasf","date":"2013-04-11T21:16:52.021Z","type":"join"}
{"nick":"dominictarr","message":"so, pass in an extra error handler to the thing that errors","date":"2013-04-11T21:21:33.805Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 5, free: 15]","date":"2013-04-11T21:21:42.164Z","type":"message"}
{"nick":"defunctzombie","message":"well, now I know what it is like to get DDoS'd","date":"2013-04-11T21:22:28.659Z","type":"message"}
{"nick":"dominictarr","message":"how did node handle it?","date":"2013-04-11T21:32:41.035Z","type":"message"}
{"nick":"ITpro","reason":"Read error: Connection reset by peer","date":"2013-04-11T22:02:15.188Z","type":"quit"}
{"nick":"ITpro","date":"2013-04-11T22:03:04.955Z","type":"join"}
{"nick":"ralphthe1inja","date":"2013-04-11T22:05:18.420Z","type":"join"}
{"nick":"ralphthe1inja","reason":"Client Quit","date":"2013-04-11T22:05:33.683Z","type":"quit"}
{"nick":"ralphthe1inja","date":"2013-04-11T22:05:45.605Z","type":"join"}
{"nick":"ralphthe1inja","reason":"Client Quit","date":"2013-04-11T22:06:23.250Z","type":"quit"}
{"nick":"ralphthe1inja","date":"2013-04-11T22:06:31.880Z","type":"join"}
{"nick":"ralphtheninja","reason":"Ping timeout: 245 seconds","date":"2013-04-11T22:06:41.472Z","type":"quit"}
{"nick":"ralphthe1inja","new_nick":"ralphtheninja","date":"2013-04-11T22:07:12.414Z","type":"nick"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-04-11T22:19:15.025Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 31]","date":"2013-04-11T22:21:42.316Z","type":"message"}
{"nick":"isaacs","message":"defunctzombie: orly?","date":"2013-04-11T22:24:32.167Z","type":"message"}
{"nick":"isaacs","message":"how'd your app handle it?","date":"2013-04-11T22:24:37.286Z","type":"message"}
{"nick":"Domeni___","message":"hmm streams piped to each other don't propagate errors, interesting","date":"2013-04-11T22:27:30.583Z","type":"message"}
{"nick":"isaacs","message":"Domeni___: correct.","date":"2013-04-11T22:27:40.816Z","type":"message"}
{"nick":"isaacs","message":"stream.pipe(stream)","date":"2013-04-11T22:27:45.438Z","type":"message"}
{"nick":"isaacs","message":"^ where to propagate?","date":"2013-04-11T22:27:58.224Z","type":"message"}
{"nick":"Domeni___","message":"heh","date":"2013-04-11T22:28:04.643Z","type":"message"}
{"nick":"Domeni___","message":"i mean it doesn't need to propagate anywhere then, stream just emits the error","date":"2013-04-11T22:28:19.847Z","type":"message"}
{"nick":"Domeni___","message":"i was thinking... tentatively... more like:","date":"2013-04-11T22:28:25.099Z","type":"message"}
{"nick":"Domeni___","message":"readable.pipe(writable): if readable emits 'error' then writable probably should too?","date":"2013-04-11T22:28:43.520Z","type":"message"}
{"nick":"isaacs","message":"if you say, \"only propagate to a stream that it's not already been to\" then that means that you still need a handler on all streams in a cycle, but now the one that catches the error ISNT the one that raised it!","date":"2013-04-11T22:28:44.515Z","type":"message"}
{"nick":"isaacs","message":"Domeni___: but there are streams in this world that are readable and also writable nad pipe to themselves","date":"2013-04-11T22:29:05.073Z","type":"message"}
{"nick":"Domeni___","message":"yeah piping to yourself, or cycles generally, confuses me.","date":"2013-04-11T22:29:22.608Z","type":"message"}
{"nick":"isaacs","message":"Domeni___: pipe != then ;)","date":"2013-04-11T22:29:22.784Z","type":"message"}
{"nick":"isaacs","message":"Domeni___: how else would you write an echo server?","date":"2013-04-11T22:29:34.523Z","type":"message"}
{"nick":"isaacs","message":"or a \"gzip as a service\" server?","date":"2013-04-11T22:29:42.993Z","type":"message"}
{"nick":"Domeni___","message":"fair","date":"2013-04-11T22:29:46.291Z","type":"message"}
{"nick":"isaacs","message":"not propagating errors is kind of annoying.  but *sometimes* propagating errors is like a hundred times worse, and propagating errors in infinite loops is a million times worse.","date":"2013-04-11T22:30:26.714Z","type":"message"}
{"nick":"isaacs","message":"we do stop the pipe if either one has an error, thpugh","date":"2013-04-11T22:30:44.416Z","type":"message"}
{"nick":"Domeni___","message":"right yeah, saw that","date":"2013-04-11T22:30:52.495Z","type":"message"}
{"nick":"thatguydan","date":"2013-04-11T22:32:17.474Z","type":"join"}
{"nick":"defunctzombie","message":"isaacs: not well","date":"2013-04-11T22:32:17.835Z","type":"message"}
{"nick":"defunctzombie","message":"isaacs: too much network traffic","date":"2013-04-11T22:32:34.465Z","type":"message"}
{"nick":"isaacs","message":"ah, i see","date":"2013-04-11T22:32:39.175Z","type":"message"}
{"nick":"isaacs","message":"dominictarr, Raynos: regarding our conversation earlier about unshift(): https://github.com/joyent/node/pull/5280","date":"2013-04-11T22:34:45.363Z","type":"message"}
{"nick":"nicholasf","reason":"Remote host closed the connection","date":"2013-04-11T22:36:01.828Z","type":"quit"}
{"nick":"nicholasf","date":"2013-04-11T22:36:35.512Z","type":"join"}
{"nick":"dominictarr","message":"Domeni___: in my pull-stream experiment error is propagated the same way that close is","date":"2013-04-11T22:37:52.674Z","type":"message"}
{"nick":"dominictarr","message":"(and stream.pipe(stream) is forbidden)","date":"2013-04-11T22:38:08.435Z","type":"message"}
{"nick":"Domeni___","message":"dominictarr: interesting....","date":"2013-04-11T22:38:14.014Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: what about stream.pipe(transformer).pipe(stream)?","date":"2013-04-11T22:38:28.934Z","type":"message"}
{"nick":"dominictarr","message":"also, close \"abort\" is propagated back to the source","date":"2013-04-11T22:38:37.410Z","type":"message"}
{"nick":"dominictarr","message":"isaacs: that is handled differently","date":"2013-04-11T22:38:47.957Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: orly?  but errors get propagated you said...","date":"2013-04-11T22:38:59.159Z","type":"message"}
{"nick":"dominictarr","message":"a duplex stream like that is handled as a source and a sink","date":"2013-04-11T22:39:09.441Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: so, you do s.pipe(t).pipe(s)","date":"2013-04-11T22:39:25.647Z","type":"message"}
{"nick":"Dr_K","reason":"Quit: Leaving.","date":"2013-04-11T22:39:26.223Z","type":"quit"}
{"nick":"isaacs","message":"s.emit('error')","date":"2013-04-11T22:39:36.149Z","type":"message"}
{"nick":"isaacs","message":"propagated to t?","date":"2013-04-11T22:39:38.550Z","type":"message"}
{"nick":"dominictarr","message":"like: stdin.pipe(transform).pipe(stdout)","date":"2013-04-11T22:39:43.738Z","type":"message"}
{"nick":"isaacs","message":"no, that's different, because stdin !== stdout","date":"2013-04-11T22:39:52.508Z","type":"message"}
{"nick":"isaacs","message":"(usually ;)","date":"2013-04-11T22:40:01.717Z","type":"message"}
{"nick":"dominictarr","message":"well, what about req, and res?","date":"2013-04-11T22:40:09.865Z","type":"message"}
{"nick":"isaacs","message":"what about sock and sock?","date":"2013-04-11T22:40:16.537Z","type":"message"}
{"nick":"isaacs","message":"net.createServer(function(sock) { sock.pipe(gzip.Gzip()).pipe(sock) })","date":"2013-04-11T22:40:35.826Z","type":"message"}
{"nick":"isaacs","message":"now sock.emit('error')","date":"2013-04-11T22:40:45.449Z","type":"message"}
{"nick":"dominictarr","message":"okay, so - it's impossible to do s.pipe(s) because s is not an event emitter","date":"2013-04-11T22:41:10.330Z","type":"message"}
{"nick":"nicholasf","reason":"Ping timeout: 276 seconds","date":"2013-04-11T22:41:15.363Z","type":"quit"}
{"nick":"isaacs","message":"?","date":"2013-04-11T22:41:22.771Z","type":"message"}
{"nick":"isaacs","message":"can you pipe anything into s?","date":"2013-04-11T22:41:27.648Z","type":"message"}
{"nick":"dominictarr","message":"instead pull-streams are functions that take a read function and return a read function","date":"2013-04-11T22:41:31.223Z","type":"message"}
{"nick":"isaacs","message":"i'm so confused about what youer' doing.","date":"2013-04-11T22:41:34.373Z","type":"message"}
{"nick":"isaacs","message":"so they're like foreachables?","date":"2013-04-11T22:41:55.060Z","type":"message"}
{"nick":"dominictarr","message":"function (read) { return function (abort, cb) { read(abort, cb) }} // that is the most basic transform pull-stream","date":"2013-04-11T22:42:14.126Z","type":"message"}
{"nick":"isaacs","message":"and abort and cb are both functions?","date":"2013-04-11T22:43:17.462Z","type":"message"}
{"nick":"dominictarr","message":"you have a reader function, which calls a read function repeatedly, until it calls back(true) or (err)","date":"2013-04-11T22:43:24.977Z","type":"message"}
{"nick":"dominictarr","message":"abort is just a value","date":"2013-04-11T22:43:31.094Z","type":"message"}
{"nick":"isaacs","message":"oh, what do you do with abort?","date":"2013-04-11T22:43:41.349Z","type":"message"}
{"nick":"dominictarr","message":"if (!!abort) then the source drops everything and cleans up","date":"2013-04-11T22:44:07.379Z","type":"message"}
{"nick":"dominictarr","message":"and callbacks(abort || err)","date":"2013-04-11T22:44:47.205Z","type":"message"}
{"nick":"isaacs","message":"oh, ok","date":"2013-04-11T22:44:49.364Z","type":"message"}
{"nick":"isaacs","message":"it's an argument","date":"2013-04-11T22:45:00.644Z","type":"message"}
{"nick":"dominictarr","message":"yes","date":"2013-04-11T22:45:04.329Z","type":"message"}
{"nick":"isaacs","message":"\"i am teling you to abort now\" not \"use this to tell me when you have aborted\"","date":"2013-04-11T22:45:17.464Z","type":"message"}
{"nick":"isaacs","message":"got it","date":"2013-04-11T22:45:18.201Z","type":"message"}
{"nick":"dominictarr","message":"yes","date":"2013-04-11T22:45:26.581Z","type":"message"}
{"nick":"isaacs","message":"tht's great for streams that can be stateless.","date":"2013-04-11T22:45:43.561Z","type":"message"}
{"nick":"isaacs","message":"you're still going to have an object in that closure a lot of the time, though","date":"2013-04-11T22:45:59.005Z","type":"message"}
{"nick":"dominictarr","message":"yeah, this is for object streams","date":"2013-04-11T22:46:13.809Z","type":"message"}
{"nick":"dominictarr","message":"you think it would be more performant with a prototype?","date":"2013-04-11T22:46:51.755Z","type":"message"}
{"nick":"Raynos","message":"everything is more performant with a prototype","date":"2013-04-11T22:47:07.969Z","type":"message"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2013-04-11T22:47:08.739Z","type":"quit"}
{"nick":"Domeni___","message":"^ sad but true","date":"2013-04-11T22:47:22.641Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: JS shines when you don't make it something other than JS","date":"2013-04-11T22:47:26.213Z","type":"message"}
{"nick":"isaacs","message":"use new.  use prototypes.  use constructors.  pretend it's java","date":"2013-04-11T22:47:39.603Z","type":"message"}
{"nick":"dominictarr","message":"isaacs: how much difference does it make?","date":"2013-04-11T22:47:59.743Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: depends how much of your program's time is spent in JS","date":"2013-04-11T22:48:12.352Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: but like, up to 80% of whatever that amount of time is :)","date":"2013-04-11T22:48:23.059Z","type":"message"}
{"nick":"dominictarr","message":"vs v8?","date":"2013-04-11T22:48:30.991Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: vs waiting on IO","date":"2013-04-11T22:48:41.113Z","type":"message"}
{"nick":"dominictarr","message":"oh, right","date":"2013-04-11T22:48:49.216Z","type":"message"}
{"nick":"isaacs","message":"it's a significant difference.","date":"2013-04-11T22:48:59.031Z","type":"message"}
{"nick":"isaacs","message":"making the streams code more optimization friendly bought back a lot of perf losses in streams2","date":"2013-04-11T22:49:21.212Z","type":"message"}
{"nick":"isaacs","message":"trevnorris's changes to the nextTick and makecallback stuff was even more beneficial","date":"2013-04-11T22:49:38.922Z","type":"message"}
{"nick":"niftylettuce","message":"https://getprove.com","date":"2013-04-11T22:52:54.621Z","type":"message"}
{"nick":"niftylettuce","message":"and if you guys want special promo https://getprove.com/hn","date":"2013-04-11T22:53:01.323Z","type":"message"}
{"nick":"niftylettuce","message":"going on HN tomorrow","date":"2013-04-11T22:53:04.665Z","type":"message"}
{"nick":"niftylettuce","message":" /cc Nexxy jesusabdullah","date":"2013-04-11T22:54:38.630Z","type":"message"}
{"nick":"nicholasf","date":"2013-04-11T22:55:29.566Z","type":"join"}
{"nick":"Nexxy","message":"niftylettuce, sweet deal","date":"2013-04-11T22:55:45.438Z","type":"message"}
{"nick":"Nexxy","message":"niftylettuce, twilio?","date":"2013-04-11T22:55:50.581Z","type":"message"}
{"nick":"isaacs","message":"niftylettuce: i just signed up for this thing!  i don't know what it is!","date":"2013-04-11T22:56:34.877Z","type":"message"}
{"nick":"niftylettuce","message":"isaacs: it's awesome sauce","date":"2013-04-11T22:56:43.847Z","type":"message"}
{"nick":"isaacs","message":"ooh... neat.","date":"2013-04-11T22:56:53.837Z","type":"message"}
{"nick":"dominictarr","message":"surely, a scope could be optimized the same way as objects","date":"2013-04-11T22:56:58.410Z","type":"message"}
{"nick":"niftylettuce","message":"isaacs: try a call out, a friendly computer lady wants to give you a pin code","date":"2013-04-11T22:57:00.830Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: functions can be inlined in many cases, which is sort of what you're suggesting.","date":"2013-04-11T22:57:19.067Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: but it's not \"the same way\", in any relevant sense.","date":"2013-04-11T22:57:28.707Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: functions that nest a bunch of closures and other fancy crap generally are harder to optimize.","date":"2013-04-11T22:57:45.877Z","type":"message"}
{"nick":"dominictarr","message":"no, I mean that a scope stack seems very similar to a prototype chain","date":"2013-04-11T22:57:48.410Z","type":"message"}
{"nick":"dominictarr","message":"why couldn't you have a hidden class for a scope, too?","date":"2013-04-11T22:58:07.491Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: take it up with V8","date":"2013-04-11T22:58:46.826Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: i'm just telling you what i've learned from banging my head against this wall a lot with node core :)","date":"2013-04-11T22:59:07.342Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: \"could\" is academic, i'm talking about what it actually does.","date":"2013-04-11T22:59:20.096Z","type":"message"}
{"nick":"dominictarr","message":"true","date":"2013-04-11T22:59:29.988Z","type":"message"}
{"nick":"dominictarr","message":"I'll try some benchmarks","date":"2013-04-11T22:59:36.780Z","type":"message"}
{"nick":"niftylettuce","message":"isaacs: phone verifiction api btw is what it is","date":"2013-04-11T22:59:41.900Z","type":"message"}
{"nick":"isaacs","message":"niftylettuce: ah, neato cheato","date":"2013-04-11T22:59:48.845Z","type":"message"}
{"nick":"dominictarr","message":"I don't want to be a compiler guy","date":"2013-04-11T22:59:51.593Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: me neither :)","date":"2013-04-11T23:01:07.354Z","type":"message"}
{"nick":"isaacs","message":"niftylettuce: this way you can make sure that your users all have cell phones ;P","date":"2013-04-11T23:01:22.014Z","type":"message"}
{"nick":"niftylettuce","message":"isaacs: yea","date":"2013-04-11T23:01:29.363Z","type":"message"}
{"nick":"niftylettuce","message":"isaacs: it was a fun 24 hour hack","date":"2013-04-11T23:01:48.710Z","type":"message"}
{"nick":"isaacs","message":"seems like it :)","date":"2013-04-11T23:02:01.165Z","type":"message"}
{"nick":"niftylettuce","message":"isaacs: here's node module https://github.com/getprove/prove-node#prove-node-001","date":"2013-04-11T23:03:25.204Z","type":"message"}
{"nick":"niftylettuce","message":"2 api calls and your done","date":"2013-04-11T23:03:32.515Z","type":"message"}
{"nick":"isaacs","message":"that's nice","date":"2013-04-11T23:03:41.112Z","type":"message"}
{"nick":"nicholasf","reason":"Read error: Connection reset by peer","date":"2013-04-11T23:08:06.220Z","type":"quit"}
{"nick":"nicholasf","date":"2013-04-11T23:08:30.092Z","type":"join"}
{"nick":"nicholasf","reason":"Read error: Connection reset by peer","date":"2013-04-11T23:08:46.512Z","type":"quit"}
{"nick":"nicholasf","date":"2013-04-11T23:09:09.082Z","type":"join"}
{"nick":"thatguydan","date":"2013-04-11T23:18:06.118Z","type":"join"}
{"nick":"nicholasf","reason":"Read error: Connection reset by peer","date":"2013-04-11T23:19:52.097Z","type":"quit"}
{"nick":"nicholasf","date":"2013-04-11T23:20:18.458Z","type":"join"}
{"nick":"jez0990","message":"mikolalysenko: did you decide to start on that Red Black tree module? would AA trees work for your use case?","date":"2013-04-11T23:20:48.442Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 23]","date":"2013-04-11T23:21:42.305Z","type":"message"}
{"nick":"Domeni___","reason":"Remote host closed the connection","date":"2013-04-11T23:23:19.109Z","type":"quit"}
{"nick":"sveisvei","reason":"Ping timeout: 246 seconds","date":"2013-04-11T23:24:13.986Z","type":"quit"}
{"nick":"ehd","reason":"Ping timeout: 246 seconds","date":"2013-04-11T23:24:13.987Z","type":"quit"}
{"nick":"Domenic_","reason":"Ping timeout: 246 seconds","date":"2013-04-11T23:24:34.905Z","type":"quit"}
{"nick":"ryanseddon","reason":"Ping timeout: 246 seconds","date":"2013-04-11T23:24:35.036Z","type":"quit"}
{"nick":"stlsaint","date":"2013-04-11T23:26:17.693Z","type":"join"}
{"nick":"ITpro","reason":"Ping timeout: 245 seconds","date":"2013-04-11T23:29:34.925Z","type":"quit"}
{"nick":"thl0","date":"2013-04-11T23:29:41.600Z","type":"join"}
{"nick":"ITpro","date":"2013-04-11T23:30:16.515Z","type":"join"}
{"nick":"mikolalysenko","message":"jez0990: I am working toward it","date":"2013-04-11T23:30:37.040Z","type":"message"}
{"nick":"mikolalysenko","message":"but pretty much any balanced binary search tree would work, doesn't have to be red-black","date":"2013-04-11T23:30:57.492Z","type":"message"}
{"nick":"mikolalysenko","message":"I am thinking about implementing weight balanced trees since they are a bit simpler","date":"2013-04-11T23:31:08.260Z","type":"message"}
{"nick":"thl0","reason":"Ping timeout: 248 seconds","date":"2013-04-11T23:33:57.599Z","type":"quit"}
{"nick":"yorick","reason":"Remote host closed the connection","date":"2013-04-11T23:35:22.680Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-04-11T23:52:13.413Z","type":"quit"}
{"nick":"tmcw","reason":"Remote host closed the connection","date":"2013-04-11T23:53:04.010Z","type":"quit"}
{"nick":"Domenic__","reason":"Ping timeout: 240 seconds","date":"2013-04-11T23:56:53.659Z","type":"quit"}
