{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-04-08T00:00:01.377Z","type":"quit"}
{"nick":"ircretary","date":"2013-04-08T00:00:08.635Z","type":"join"}
{"nick":"thl0","date":"2013-04-08T00:01:54.135Z","type":"join"}
{"nick":"kenperkins","date":"2013-04-08T00:03:15.570Z","type":"join"}
{"nick":"mikolalysenko","date":"2013-04-08T00:03:33.053Z","type":"join"}
{"nick":"no9","date":"2013-04-08T00:04:26.564Z","type":"join"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-04-08T00:06:36.662Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-04-08T00:16:20.028Z","type":"quit"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-04-08T00:20:51.182Z","type":"quit"}
{"nick":"no9","reason":"Ping timeout: 245 seconds","date":"2013-04-08T00:22:56.397Z","type":"quit"}
{"nick":"kenperkins","date":"2013-04-08T00:25:52.153Z","type":"join"}
{"nick":"no9","date":"2013-04-08T00:36:01.024Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-04-08T00:40:27.463Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-04-08T00:44:07.220Z","type":"join"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2013-04-08T00:48:46.605Z","type":"quit"}
{"nick":"no9","reason":"Remote host closed the connection","date":"2013-04-08T00:48:52.231Z","type":"quit"}
{"nick":"Domenic__","reason":"Read error: Connection reset by peer","date":"2013-04-08T00:57:25.339Z","type":"quit"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2013-04-08T01:03:19.687Z","type":"quit"}
{"nick":"thatguydan","date":"2013-04-08T01:05:23.502Z","type":"join"}
{"nick":"shuaib","reason":"Quit: Computer has gone to sleep.","date":"2013-04-08T01:07:48.389Z","type":"quit"}
{"nick":"ITpro","reason":"Read error: Connection reset by peer","date":"2013-04-08T01:12:56.958Z","type":"quit"}
{"nick":"thl0","date":"2013-04-08T01:32:33.794Z","type":"join"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-04-08T01:45:10.913Z","type":"quit"}
{"nick":"mikolalysenko","message":"So I am thinking about making a fork of cross filter that lets you define custom move operations","date":"2013-04-08T01:49:35.029Z","type":"message"}
{"nick":"chrisdickinson","message":"mbalho: i think the issue is that browserify's buffers don't support indexing","date":"2013-04-08T01:49:42.170Z","type":"message"}
{"nick":"chrisdickinson","message":"ah whoops substack already mentioned that","date":"2013-04-08T01:49:42.382Z","type":"message"}
{"nick":"mikolalysenko","message":"so you can do sorting on groups of typed arrays","date":"2013-04-08T01:49:52.836Z","type":"message"}
{"nick":"chrisdickinson","message":"substack: that \"fix\" is going to cause a lot of problems i think.","date":"2013-04-08T01:50:04.002Z","type":"message"}
{"nick":"mikolalysenko","message":"are we still talking about buffers?","date":"2013-04-08T01:50:28.770Z","type":"message"}
{"nick":"chrisdickinson","message":"in that it's going to change the underlying behavior from \"don't copy on slice\" to \"copy on slice\"","date":"2013-04-08T01:50:29.085Z","type":"message"}
{"nick":"mikolalysenko","message":"ah, that","date":"2013-04-08T01:50:38.618Z","type":"message"}
{"nick":"thl0","date":"2013-04-08T01:50:46.357Z","type":"join"}
{"nick":"mikolalysenko","message":"the more I use buffers, the more I think they need to be replaced by typed arrays","date":"2013-04-08T01:51:32.199Z","type":"message"}
{"nick":"chrisdickinson","message":"yeah :|","date":"2013-04-08T01:51:53.173Z","type":"message"}
{"nick":"chrisdickinson","message":"well","date":"2013-04-08T01:52:05.785Z","type":"message"}
{"nick":"mikolalysenko","message":"it is probably too late to deprecate them though...","date":"2013-04-08T01:52:08.426Z","type":"message"}
{"nick":"chrisdickinson","message":"what i really want is for them to be api-compatible","date":"2013-04-08T01:52:24.553Z","type":"message"}
{"nick":"mikolalysenko","message":"true","date":"2013-04-08T01:52:31.123Z","type":"message"}
{"nick":"chrisdickinson","message":"because typedarray.subarray === buffer.slice","date":"2013-04-08T01:52:32.978Z","type":"message"}
{"nick":"chrisdickinson","message":"and the various \"read/write(type)(size)(be|le)\" functions are really useful from buffer, as are the various toString options","date":"2013-04-08T01:53:04.500Z","type":"message"}
{"nick":"chrisdickinson","message":"but copy on slice is going to absolutely murder performance in a lot of ways","date":"2013-04-08T01:53:21.862Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, those those features could be trivially implemented using views","date":"2013-04-08T01:53:30.364Z","type":"message"}
{"nick":"mikolalysenko","message":"and toString could just be a function","date":"2013-04-08T01:53:35.607Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: true, but it might make more sense to augment Uint8Array with those features","date":"2013-04-08T01:53:54.897Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah","date":"2013-04-08T01:54:00.106Z","type":"message"}
{"nick":"mikolalysenko","message":"at least as a browser polyfill, augmentation seems like the best immediate solution","date":"2013-04-08T01:54:13.490Z","type":"message"}
{"nick":"chrisdickinson","message":"use browserify-vm to grab a \"clean\" Uint8Array and then augment its prototype","date":"2013-04-08T01:54:25.121Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, I can't really think of how else to do it...","date":"2013-04-08T01:54:40.314Z","type":"message"}
{"nick":"mikolalysenko","message":"since augmenting array wouldn't work for sure","date":"2013-04-08T01:54:53.519Z","type":"message"}
{"nick":"chrisdickinson","message":"i've actually written most of my apis to use readUInt8","date":"2013-04-08T01:55:20.198Z","type":"message"}
{"nick":"chrisdickinson","message":"so they work without the indexing","date":"2013-04-08T01:55:25.356Z","type":"message"}
{"nick":"mikolalysenko","message":"probably a good step forward","date":"2013-04-08T01:55:38.858Z","type":"message"}
{"nick":"chrisdickinson","message":"but i make a lot of use of slice which i really can't do anymore","date":"2013-04-08T01:55:40.883Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-04-08T01:55:57.138Z","type":"message"}
{"nick":"mikolalysenko","message":"well, for typed arrays you get subarray() which works like you want","date":"2013-04-08T01:56:08.064Z","type":"message"}
{"nick":"chrisdickinson","message":"Buffer.concat is actually killing my perf -- which is due to the copying that's happening (plus the added load on GC)","date":"2013-04-08T01:56:34.511Z","type":"message"}
{"nick":"chrisdickinson","message":"yeah","date":"2013-04-08T01:56:40.181Z","type":"message"}
{"nick":"chrisdickinson","message":"i'm leaning towards wrapping those up in a module","date":"2013-04-08T01:56:48.033Z","type":"message"}
{"nick":"chrisdickinson","message":"so it can transition easily from Buffer -> Uint8Array at the thresholds","date":"2013-04-08T01:57:19.583Z","type":"message"}
{"nick":"mikolalysenko","message":"I think buffers would be ok if they removed the special array indexing semantics from them","date":"2013-04-08T01:58:02.084Z","type":"message"}
{"nick":"mikolalysenko","message":"that way we wouldn't be tempted to think of them as array-like things","date":"2013-04-08T01:58:12.653Z","type":"message"}
{"nick":"spion","reason":"Ping timeout: 246 seconds","date":"2013-04-08T01:58:16.823Z","type":"quit"}
{"nick":"chrisdickinson","message":"yeah","date":"2013-04-08T01:58:19.121Z","type":"message"}
{"nick":"chrisdickinson","message":"yeaaaah.","date":"2013-04-08T01:58:26.024Z","type":"message"}
{"nick":"mikolalysenko","message":"but as they are, it makes it very difficult to remove polyfill across the browser","date":"2013-04-08T01:58:37.269Z","type":"message"}
{"nick":"chrisdickinson","message":"plus all of the dom apis expect typed arrays while all the node apis (or shims) expect buffers","date":"2013-04-08T01:58:49.947Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah","date":"2013-04-08T01:58:57.695Z","type":"message"}
{"nick":"chrisdickinson","message":"and typed arrays are the only sane way to transmit or persist binary data","date":"2013-04-08T01:59:16.226Z","type":"message"}
{"nick":"mikolalysenko","message":"if you just made buffer not use indices, then it would be easy to wrap buffers as a typed array or whatever on a browser","date":"2013-04-08T01:59:16.511Z","type":"message"}
{"nick":"chrisdickinson","message":"base64 just doesn't cut it","date":"2013-04-08T01:59:20.746Z","type":"message"}
{"nick":"mikolalysenko","message":"I agree typed arrays are way better","date":"2013-04-08T01:59:36.398Z","type":"message"}
{"nick":"chrisdickinson","message":"yeah, i think that was the original strategy of buffer-browserify","date":"2013-04-08T01:59:46.719Z","type":"message"}
{"nick":"chrisdickinson","message":"which makes sense because DataViews are kind of slow to instantiate","date":"2013-04-08T02:00:14.646Z","type":"message"}
{"nick":"mikolalysenko","message":"you could also do something insane and kill all your performance","date":"2013-04-08T02:00:25.845Z","type":"message"}
{"nick":"mikolalysenko","message":"like use defineProperty(0, ...) , defineProperty(1, ...) etc.","date":"2013-04-08T02:00:39.361Z","type":"message"}
{"nick":"chrisdickinson","message":"though i suppose you could make three dataviews at the outset of a buffer and just read at offsets","date":"2013-04-08T02:00:46.298Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: yeah, or rely on harmony proxies, which is also sort of bleh.","date":"2013-04-08T02:01:06.601Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah...","date":"2013-04-08T02:01:12.347Z","type":"message"}
{"nick":"mikolalysenko","message":"but multiple views makes some sense","date":"2013-04-08T02:01:22.616Z","type":"message"}
{"nick":"chrisdickinson","message":"still i bet either of those situations are still better than doing a copy-on-slice of megabytes of data","date":"2013-04-08T02:01:28.338Z","type":"message"}
{"nick":"mikolalysenko","message":"definitely","date":"2013-04-08T02:01:37.676Z","type":"message"}
{"nick":"chrisdickinson","message":"oh yeah, i'm saying that for a buffer shim you could just make 3 data views at instantiation","date":"2013-04-08T02:01:45.463Z","type":"message"}
{"nick":"chrisdickinson","message":"instead of making one every time you read an offset","date":"2013-04-08T02:01:56.914Z","type":"message"}
{"nick":"mikolalysenko","message":"yep, that seems reasonable to me","date":"2013-04-08T02:01:57.062Z","type":"message"}
{"nick":"chrisdickinson","message":"and then you could read anything at any offset, theoretically","date":"2013-04-08T02:02:06.632Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah","date":"2013-04-08T02:02:17.229Z","type":"message"}
{"nick":"mikolalysenko","message":"though it would die in a fire on older versions of ie...","date":"2013-04-08T02:02:26.333Z","type":"message"}
{"nick":"chrisdickinson","message":"yeah, in old ie you'd just have to fall back to the array approach","date":"2013-04-08T02:02:46.431Z","type":"message"}
{"nick":"mikolalysenko","message":"and shit would break","date":"2013-04-08T02:02:54.696Z","type":"message"}
{"nick":"chrisdickinson","message":"nah, you'd do the copy-on-slice version in ie","date":"2013-04-08T02:03:04.569Z","type":"message"}
{"nick":"mikolalysenko","message":"well","date":"2013-04-08T02:03:10.832Z","type":"message"}
{"nick":"chrisdickinson","message":"which really would just make ie even worse to use","date":"2013-04-08T02:03:12.664Z","type":"message"}
{"nick":"chrisdickinson","message":"slow js engine + way slow version of buffers","date":"2013-04-08T02:03:20.344Z","type":"message"}
{"nick":"mikolalysenko","message":"unless you are counting on the view really being a view...","date":"2013-04-08T02:03:20.675Z","type":"message"}
{"nick":"mikolalysenko","message":"since the view will actually write through to the underlying copy, and so it is semantically inconsistent","date":"2013-04-08T02:03:37.847Z","type":"message"}
{"nick":"mikolalysenko","message":"but as long as you only read from the view it would work","date":"2013-04-08T02:03:45.250Z","type":"message"}
{"nick":"chrisdickinson","message":"well, i mean, you would abandon data views entirely","date":"2013-04-08T02:04:18.444Z","type":"message"}
{"nick":"chrisdickinson","message":"we'd aim to polyfill buffer's api still","date":"2013-04-08T02:04:24.652Z","type":"message"}
{"nick":"mikolalysenko","message":"I think probably the most \"ideal\" solution here would be to just kill the array indexing in node.js","date":"2013-04-08T02:04:24.847Z","type":"message"}
{"nick":"chrisdickinson","message":"(which i still think is better than typed array's)","date":"2013-04-08T02:04:31.724Z","type":"message"}
{"nick":"mikolalysenko","message":"but that would probably cause a lot of painful breakage","date":"2013-04-08T02:04:32.888Z","type":"message"}
{"nick":"chrisdickinson","message":"so, we'd support indexing in old ie by doing copy on slice etc (i.e., the horrible slow way)","date":"2013-04-08T02:04:53.576Z","type":"message"}
{"nick":"chrisdickinson","message":"but support it on newer browsers using typed arrays + dataviews","date":"2013-04-08T02:05:04.705Z","type":"message"}
{"nick":"chrisdickinson","message":"substack: ^^ thoughts on the above?","date":"2013-04-08T02:06:01.301Z","type":"message"}
{"nick":"chrisdickinson","message":"it makes things more complex but would enable the sorts of things we'd want to be able to do with buffers in the browser, i think","date":"2013-04-08T02:06:19.571Z","type":"message"}
{"nick":"mikolalysenko","message":"I think typed array polyfills on newer browsers could work","date":"2013-04-08T02:07:10.674Z","type":"message"}
{"nick":"mikolalysenko","message":"though there is a strawman in the typed array proposal to kill the semantics for buffers/views/etc if you screw with the guts of a typed array","date":"2013-04-08T02:07:45.528Z","type":"message"}
{"nick":"mikolalysenko","message":"so basically if you do something like:","date":"2013-04-08T02:07:56.753Z","type":"message"}
{"nick":"chrisdickinson","message":"oh?","date":"2013-04-08T02:07:57.554Z","type":"message"}
{"nick":"mikolalysenko","message":"var x = new Float32Array(10)","date":"2013-04-08T02:08:02.094Z","type":"message"}
{"nick":"mikolalysenko","message":"x[\"splice\"] = function() { ... }","date":"2013-04-08T02:08:13.084Z","type":"message"}
{"nick":"mikolalysenko","message":"then x.buffer, x.byteOffset, ... etc. go bye-bye","date":"2013-04-08T02:08:26.056Z","type":"message"}
{"nick":"mikolalysenko","message":"the idea is to let interpreters just optimize the typed array directly as a block of memory","date":"2013-04-08T02:08:46.715Z","type":"message"}
{"nick":"mikolalysenko","message":"so indexing can be reduced to ~1 instruction","date":"2013-04-08T02:09:02.749Z","type":"message"}
{"nick":"mikolalysenko","message":"but if that gets added, then it would kill this solution","date":"2013-04-08T02:09:18.439Z","type":"message"}
{"nick":"chrisdickinson","message":"ah man","date":"2013-04-08T02:09:27.525Z","type":"message"}
{"nick":"chrisdickinson","message":"what about augmenting the prototype instead of the instance?","date":"2013-04-08T02:09:34.322Z","type":"message"}
{"nick":"chrisdickinson","message":"i.e.","date":"2013-04-08T02:09:42.284Z","type":"message"}
{"nick":"mikolalysenko","message":"...ew","date":"2013-04-08T02:09:42.730Z","type":"message"}
{"nick":"chrisdickinson","message":"Uint8Array.prototype.slice = function() { .. }","date":"2013-04-08T02:09:50.815Z","type":"message"}
{"nick":"mikolalysenko","message":":(","date":"2013-04-08T02:10:03.396Z","type":"message"}
{"nick":"chrisdickinson","message":"mikolalysenko: that's why i'm saying hoist Uint8Array out of browserify-vm (which creates a new context)","date":"2013-04-08T02:10:06.440Z","type":"message"}
{"nick":"chrisdickinson","message":"so it wouldn't change the current frame's representation of uint8array at all","date":"2013-04-08T02:10:15.117Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-04-08T02:10:29.881Z","type":"message"}
{"nick":"mikolalysenko","message":"I still feel like the best solution would be to remove the index operator from buffer","date":"2013-04-08T02:11:08.693Z","type":"message"}
{"nick":"mikolalysenko","message":"since if you made that one small change, then everything would work in the browser automatically","date":"2013-04-08T02:11:31.000Z","type":"message"}
{"nick":"mikolalysenko","message":"even in IE","date":"2013-04-08T02:11:35.079Z","type":"message"}
{"nick":"chrisdickinson","message":"from buffer?","date":"2013-04-08T02:11:44.193Z","type":"message"}
{"nick":"mikolalysenko","message":"yea","date":"2013-04-08T02:11:46.726Z","type":"message"}
{"nick":"chrisdickinson","message":"yeah","date":"2013-04-08T02:11:49.508Z","type":"message"}
{"nick":"chrisdickinson","message":"i mean, the slowbuffer backing store supports the indexing","date":"2013-04-08T02:12:04.147Z","type":"message"}
{"nick":"mikolalysenko","message":"just remove it from node's buffer.  the read/write operations already replace the need for it anyway","date":"2013-04-08T02:12:05.392Z","type":"message"}
{"nick":"chrisdickinson","message":"yeah","date":"2013-04-08T02:12:24.253Z","type":"message"}
{"nick":"mikolalysenko","message":"then on the browser you could implement Buffer using either a typed array (if possible) or else fall back to a native array","date":"2013-04-08T02:12:55.590Z","type":"message"}
{"nick":"mikolalysenko","message":"though I wonder how many modules it would break...","date":"2013-04-08T02:13:24.730Z","type":"message"}
{"nick":"chrisdickinson","message":"shades of charAt :|","date":"2013-04-08T02:13:38.630Z","type":"message"}
{"nick":"mikolalysenko","message":"well, it is the price you pay for working in a language that does not allow operator overloading :P","date":"2013-04-08T02:14:13.327Z","type":"message"}
{"nick":"mikolalysenko","message":"but the implementation of buffer in node is syntactically magical","date":"2013-04-08T02:14:42.258Z","type":"message"}
{"nick":"mikolalysenko","message":"I wonder if you could maybe do some static analysis to rewrite buffer indexing using esprima","date":"2013-04-08T02:15:42.572Z","type":"message"}
{"nick":"mikolalysenko","message":"like detect if a variable is a buffer, and replace any of the x[i] with x.readUint8(i) or something","date":"2013-04-08T02:16:16.686Z","type":"message"}
{"nick":"mikolalysenko","message":"but these are crazy ideas","date":"2013-04-08T02:16:49.133Z","type":"message"}
{"nick":"mikolalysenko","message":"I think though for browserify, what you are suggesting is most practical","date":"2013-04-08T02:17:03.692Z","type":"message"}
{"nick":"mikolalysenko","message":"chrisdickinson: I agree that the minimally invasive solution is to use typed arrays to emulate buffer on new browsers, and then fall back to native arrays on older browsers (though stuff will obviously break)","date":"2013-04-08T02:17:44.350Z","type":"message"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-04-08T02:20:47.407Z","type":"quit"}
{"nick":"mikolalysenko","message":"so, the other thing I was thinking about was how to make an efficient quick sort for structs packed in typed arrays...","date":"2013-04-08T02:23:58.612Z","type":"message"}
{"nick":"mikolalysenko","message":"or for groups of typed arrays","date":"2013-04-08T02:24:18.990Z","type":"message"}
{"nick":"mikolalysenko","message":"and I was thinking about making the module using crossfilter's existing sorting routines, but I am wondering if the fact that it is apache licensed would create problems...","date":"2013-04-08T02:26:04.807Z","type":"message"}
{"nick":"jcrugzz_","date":"2013-04-08T02:43:05.175Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 256 seconds","date":"2013-04-08T02:44:12.660Z","type":"quit"}
{"nick":"jcrugzz_","new_nick":"jcrugzz","date":"2013-04-08T02:47:41.238Z","type":"nick"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2013-04-08T02:54:57.526Z","type":"quit"}
{"nick":"thatguydan","date":"2013-04-08T02:56:29.480Z","type":"join"}
{"nick":"mmckegg","reason":"Quit: mmckegg","date":"2013-04-08T03:04:24.287Z","type":"quit"}
{"nick":"mbalho","message":"chrisdickinson: i dont think its possible in js to define a custom object that has [] accessors, right?","date":"2013-04-08T03:10:01.307Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 252 seconds","date":"2013-04-08T03:11:01.918Z","type":"quit"}
{"nick":"substack","message":"mbalho: well buffers are nice because they have a static size","date":"2013-04-08T03:14:13.156Z","type":"message"}
{"nick":"substack","message":"so you can use any object and assign the values into numeric keys","date":"2013-04-08T03:14:51.372Z","type":"message"}
{"nick":"mbalho","message":"substack: that would be way slower than using a typed array i think, mikola has some benchmarks","date":"2013-04-08T03:17:56.867Z","type":"message"}
{"nick":"substack","message":"probably yes","date":"2013-04-08T03:19:33.434Z","type":"message"}
{"nick":"chrisdickinson","message":"substack: the problem with the linked fix is that slice becomes a copy operation","date":"2013-04-08T03:24:54.244Z","type":"message"}
{"nick":"chrisdickinson","message":"and i'm operating on large buffers","date":"2013-04-08T03:25:01.522Z","type":"message"}
{"nick":"chrisdickinson","message":"and that'll be incredibly slow, like, unusably slow.","date":"2013-04-08T03:25:10.202Z","type":"message"}
{"nick":"chrisdickinson","message":"whereas if you just use readUInt8, things work as expected","date":"2013-04-08T03:25:27.802Z","type":"message"}
{"nick":"chrisdickinson","message":"which sucks for interop, but makes it possible to build things on top of Buffer","date":"2013-04-08T03:25:40.114Z","type":"message"}
{"nick":"chrisdickinson","message":"mbalho: yeah, it's not really possible until es6 i think (you might be able to inherit from Array and get its behavior.)","date":"2013-04-08T03:26:11.687Z","type":"message"}
{"nick":"chrisdickinson","message":"or using typed arrays.","date":"2013-04-08T03:26:22.161Z","type":"message"}
{"nick":"chrisdickinson","message":"hence my worry. the slowest thing about git-in-browser is that i'm using copy operations for some things (specifically Buffer.concat)","date":"2013-04-08T03:28:08.609Z","type":"message"}
{"nick":"chrisdickinson","message":"if slice becomes a copy operation it'll slow to a crawl. it already has a hard time with larger repos.","date":"2013-04-08T03:28:22.058Z","type":"message"}
{"nick":"ryan_stevens","date":"2013-04-08T03:28:42.254Z","type":"join"}
{"nick":"ryan_stevens","reason":"Remote host closed the connection","date":"2013-04-08T03:37:13.001Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-04-08T03:39:03.767Z","type":"join"}
{"nick":"jesusabdullah","message":"niftylettuce: what is your thing and should I shoot you an email y/n","date":"2013-04-08T03:40:59.754Z","type":"message"}
{"nick":"niftylettuce","message":"jesusabdullah: ITS AMAZING","date":"2013-04-08T03:45:13.300Z","type":"message"}
{"nick":"niftylettuce","message":"ITS SOOOOO AMAZING","date":"2013-04-08T03:45:16.394Z","type":"message"}
{"nick":"LOUDBOT","message":"THERE IS A SINKHOLE.","date":"2013-04-08T03:45:16.767Z","type":"message"}
{"nick":"niftylettuce","message":"EVERYONE SHOULD GET PRIVATE INVITE WHILE THEY CAN","date":"2013-04-08T03:45:22.244Z","type":"message"}
{"nick":"LOUDBOT","message":"WHAT I'M TRYING TO SAY HERE IS YOUR SUICIDE WASN'T NOVEL ENOUGH","date":"2013-04-08T03:45:22.574Z","type":"message"}
{"nick":"niftylettuce","message":"IM ONLY GIVING AWAY 500","date":"2013-04-08T03:45:26.412Z","type":"message"}
{"nick":"LOUDBOT","message":"LOOK WHAT YOU'VE DONE JEREMY ASHKENAS YOU'VE RUINED EVERYTHING","date":"2013-04-08T03:45:26.757Z","type":"message"}
{"nick":"niftylettuce","message":"https://twitter.com/niftylettuce/status/321097223150653440","date":"2013-04-08T03:45:38.719Z","type":"message"}
{"nick":"niftylettuce","message":"THERE U GO","date":"2013-04-08T03:45:40.469Z","type":"message"}
{"nick":"LOUDBOT","message":"WHEN IS THE PART WHERE WE SHOOT NAZIS","date":"2013-04-08T03:45:40.840Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-04-08T03:50:32.266Z","type":"quit"}
{"nick":"jesusabdullah","message":"oh man, long night of work for me","date":"2013-04-08T03:51:41.934Z","type":"message"}
{"nick":"jesusabdullah","message":"I hope I can stay in the zone","date":"2013-04-08T03:51:47.549Z","type":"message"}
{"nick":"jesusabdullah","message":"I tire too easily","date":"2013-04-08T03:51:50.920Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-04-08T04:14:07.721Z","type":"nick"}
{"nick":"mikolalysenko","date":"2013-04-08T04:19:18.093Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 252 seconds","date":"2013-04-08T04:30:35.398Z","type":"quit"}
{"nick":"mmckegg","date":"2013-04-08T04:32:55.424Z","type":"join"}
{"nick":"py1hon","date":"2013-04-08T04:33:33.887Z","type":"join"}
{"nick":"mikolalysenko","date":"2013-04-08T04:59:24.775Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-04-08T05:12:08.338Z","type":"quit"}
{"nick":"jcrugzz","reason":"Quit: leaving","date":"2013-04-08T05:15:07.589Z","type":"quit"}
{"nick":"niftylettuce","message":"HACKITY HACK MOTHER FUCKERS","date":"2013-04-08T05:29:50.841Z","type":"message"}
{"nick":"LOUDBOT","message":"YOU TEACH YOUR USERS THINGS? DAMN, THAT'S AWESOME. WHERE CAN I GET SOME USERS LIKE THAT?","date":"2013-04-08T05:29:51.245Z","type":"message"}
{"nick":"mikolalysenko","date":"2013-04-08T05:40:04.010Z","type":"join"}
{"nick":"fallsemo","reason":"Quit: Leaving.","date":"2013-04-08T05:44:19.788Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 245 seconds","date":"2013-04-08T05:52:29.915Z","type":"quit"}
{"nick":"mmckegg","reason":"Quit: mmckegg","date":"2013-04-08T06:20:07.943Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-04-08T06:20:39.602Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-04-08T06:33:10.380Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-04-08T07:02:22.440Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-04-08T07:12:27.582Z","type":"nick"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-04-08T07:14:01.393Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-04-08T07:42:13.078Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 264 seconds","date":"2013-04-08T07:55:54.080Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-04-08T07:57:29.474Z","type":"join"}
{"nick":"thatguydan","reason":"Ping timeout: 256 seconds","date":"2013-04-08T07:58:14.233Z","type":"quit"}
{"nick":"cianomaidin","date":"2013-04-08T08:02:59.231Z","type":"join"}
{"nick":"substack","message":"oh wow, mbrevoort sent a pull req fixing those crdt/seaport rm issues, NICE","date":"2013-04-08T08:20:04.010Z","type":"message"}
{"nick":"mikolalysenko","date":"2013-04-08T08:23:25.350Z","type":"join"}
{"nick":"cianomaidin","reason":"Quit: cianomaidin","date":"2013-04-08T08:34:33.330Z","type":"quit"}
{"nick":"fotoverite","date":"2013-04-08T08:35:23.503Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 276 seconds","date":"2013-04-08T08:37:39.459Z","type":"quit"}
{"nick":"substack!~substack@ec2-50-17-202-46.compute-1.amazonaws.com","topic":"Unofficial browserling/testling mad science channel. For official help /join #browserling","date":"2013-04-08T08:42:55.163Z","type":"topic"}
{"nick":"substack","message":"dominictarr: did you see https://github.com/dominictarr/crdt/pull/21 ?","date":"2013-04-08T08:45:05.134Z","type":"message"}
{"nick":"substack","message":"was pretty fast","date":"2013-04-08T08:45:19.088Z","type":"message"}
{"nick":"dominictarr","message":"sweet. I just woke up, will merge it after I've had coffee!","date":"2013-04-08T08:46:36.548Z","type":"message"}
{"nick":"substack","message":"nice","date":"2013-04-08T08:46:41.562Z","type":"message"}
{"nick":"substack","message":"mbrevoort is running a gigantic cluster of 140 nodes at pearson","date":"2013-04-08T08:46:58.707Z","type":"message"}
{"nick":"substack","message":"so this is a really great real-world use case for scuttlebutt/crdt/seaport","date":"2013-04-08T08:47:18.258Z","type":"message"}
{"nick":"cianomaidin","date":"2013-04-08T08:51:23.450Z","type":"join"}
{"nick":"cianomaidin","reason":"Client Quit","date":"2013-04-08T08:54:01.060Z","type":"quit"}
{"nick":"wolfeidau","reason":"Ping timeout: 246 seconds","date":"2013-04-08T08:59:40.803Z","type":"quit"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2013-04-08T09:05:15.002Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-04-08T09:06:29.426Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 264 seconds","date":"2013-04-08T09:19:24.450Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-04-08T09:21:51.929Z","type":"quit"}
{"nick":"cianomaidin","date":"2013-04-08T09:30:18.776Z","type":"join"}
{"nick":"cianomaidin","reason":"Client Quit","date":"2013-04-08T09:33:45.193Z","type":"quit"}
{"nick":"cianomaidin","date":"2013-04-08T09:36:10.586Z","type":"join"}
{"nick":"shuaib","date":"2013-04-08T09:42:02.233Z","type":"join"}
{"nick":"mikolalysenko","date":"2013-04-08T09:46:50.117Z","type":"join"}
{"nick":"wolfeidau","date":"2013-04-08T09:51:53.668Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-04-08T10:00:40.371Z","type":"quit"}
{"nick":"dominictarr","date":"2013-04-08T10:02:01.078Z","type":"join"}
{"nick":"cianomaidin","reason":"Quit: cianomaidin","date":"2013-04-08T10:12:46.886Z","type":"quit"}
{"nick":"thl0","date":"2013-04-08T10:22:57.396Z","type":"join"}
{"nick":"juliangruber","message":"dominictarr: what datastructures/libs would you use for a distributed todo list application?","date":"2013-04-08T10:25:40.543Z","type":"message"}
{"nick":"juliangruber","message":"I'm using crdt and level-scuttlebutt right now...","date":"2013-04-08T10:25:55.585Z","type":"message"}
{"nick":"spion","date":"2013-04-08T10:28:21.154Z","type":"join"}
{"nick":"cianomaidin","date":"2013-04-08T10:28:32.375Z","type":"join"}
{"nick":"dominictarr","message":"juliangruber: yeah, that is what I'd use.","date":"2013-04-08T10:28:54.108Z","type":"message"}
{"nick":"mikolalysenko","date":"2013-04-08T10:29:07.624Z","type":"join"}
{"nick":"dominictarr","message":"substack: wow, 140 nodes!","date":"2013-04-08T10:29:19.212Z","type":"message"}
{"nick":"shuaib","reason":"Ping timeout: 252 seconds","date":"2013-04-08T10:30:15.293Z","type":"quit"}
{"nick":"substack","message":"dominictarr: http://vimeo.com/59748495","date":"2013-04-08T10:30:37.894Z","type":"message"}
{"nick":"dominictarr","message":"watching","date":"2013-04-08T10:31:31.740Z","type":"message"}
{"nick":"shuaib","date":"2013-04-08T10:31:35.508Z","type":"join"}
{"nick":"heathjs","date":"2013-04-08T10:32:19.264Z","type":"join"}
{"nick":"juliangruber_","date":"2013-04-08T10:32:44.284Z","type":"join"}
{"nick":"dominictarr","message":"it's so weird to discover that someone is using something I've written at a large scale, or at any scale, in production.","date":"2013-04-08T10:33:26.419Z","type":"message"}
{"nick":"dominictarr","message":"github issues are always about problems, or discussions mostly in abstract","date":"2013-04-08T10:33:47.131Z","type":"message"}
{"nick":"perlbot_","date":"2013-04-08T10:33:54.520Z","type":"join"}
{"nick":"juliangruber_","message":"through must be used a lot in production","date":"2013-04-08T10:33:56.911Z","type":"message"}
{"nick":"dominictarr","message":"through has ~180 deps on npm","date":"2013-04-08T10:34:10.792Z","type":"message"}
{"nick":"substack","message":"one of the most depended-upon modules","date":"2013-04-08T10:34:17.264Z","type":"message"}
{"nick":"pkrumins_","date":"2013-04-08T10:34:22.709Z","type":"join"}
{"nick":"pkrumins_","reason":"Changing host","date":"2013-04-08T10:34:22.863Z","type":"quit"}
{"nick":"pkrumins_","date":"2013-04-08T10:34:22.863Z","type":"join"}
{"nick":"jden_","date":"2013-04-08T10:34:33.152Z","type":"join"}
{"nick":"substack","message":"and considering how popular some of the libraries that depend on through are themselves the impact is even greater","date":"2013-04-08T10:34:45.850Z","type":"message"}
{"nick":"Benvie1","date":"2013-04-08T10:34:53.363Z","type":"join"}
{"nick":"jden_","new_nick":"Guest94624","date":"2013-04-08T10:34:58.278Z","type":"nick"}
{"nick":"paul_irish_","date":"2013-04-08T10:35:59.715Z","type":"join"}
{"nick":"sorensen_","date":"2013-04-08T10:38:17.640Z","type":"join"}
{"nick":"dominictarr","message":"there is a strong pattern, the most simple, generic modules have many dependents, the specialized ones have less","date":"2013-04-08T10:38:21.939Z","type":"message"}
{"nick":"lepahc","date":"2013-04-08T10:38:37.762Z","type":"join"}
{"nick":"brianloveswords_","date":"2013-04-08T10:39:04.301Z","type":"join"}
{"nick":"pkrumins","reason":"*.net *.split","date":"2013-04-08T10:39:11.041Z","type":"quit"}
{"nick":"Benvie","reason":"*.net *.split","date":"2013-04-08T10:39:11.042Z","type":"quit"}
{"nick":"chapel","reason":"*.net *.split","date":"2013-04-08T10:39:11.191Z","type":"quit"}
{"nick":"brianloveswords","reason":"*.net *.split","date":"2013-04-08T10:39:11.342Z","type":"quit"}
{"nick":"paul_irish","reason":"*.net *.split","date":"2013-04-08T10:39:11.342Z","type":"quit"}
{"nick":"gozala","reason":"*.net *.split","date":"2013-04-08T10:39:11.491Z","type":"quit"}
{"nick":"heath","reason":"*.net *.split","date":"2013-04-08T10:39:11.641Z","type":"quit"}
{"nick":"juliangruber","reason":"*.net *.split","date":"2013-04-08T10:39:11.791Z","type":"quit"}
{"nick":"perlbot","reason":"*.net *.split","date":"2013-04-08T10:39:11.792Z","type":"quit"}
{"nick":"jden","reason":"*.net *.split","date":"2013-04-08T10:39:11.941Z","type":"quit"}
{"nick":"sorensen","reason":"*.net *.split","date":"2013-04-08T10:39:11.941Z","type":"quit"}
{"nick":"sorensen_","new_nick":"sorensen","date":"2013-04-08T10:39:12.092Z","type":"nick"}
{"nick":"perlbot_","new_nick":"perlbot","date":"2013-04-08T10:39:12.092Z","type":"nick"}
{"nick":"brianloveswords_","new_nick":"brianloveswords","date":"2013-04-08T10:39:12.092Z","type":"nick"}
{"nick":"lepahc","new_nick":"chapel","date":"2013-04-08T10:39:12.830Z","type":"nick"}
{"nick":"shuaib","reason":"Ping timeout: 245 seconds","date":"2013-04-08T10:40:01.558Z","type":"quit"}
{"nick":"shuaib","date":"2013-04-08T10:41:05.678Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 248 seconds","date":"2013-04-08T10:42:45.635Z","type":"quit"}
{"nick":"cianomaidin","reason":"Quit: cianomaidin","date":"2013-04-08T10:42:46.446Z","type":"quit"}
{"nick":"dominictarr","message":"so… strange idea: async evented systems, streams etc, and parsers … are the same thing","date":"2013-04-08T10:44:21.529Z","type":"message"}
{"nick":"substack","message":"very few parsers are streaming unfortunately","date":"2013-04-08T10:44:58.377Z","type":"message"}
{"nick":"substack","message":"it's not something that people usually consider when writing a parser","date":"2013-04-08T10:45:09.088Z","type":"message"}
{"nick":"dominictarr","message":"I mean just in the way that they change state based on incoming events (data)","date":"2013-04-08T10:46:23.200Z","type":"message"}
{"nick":"dominictarr","message":"and produce an output that has certain properties, and","date":"2013-04-08T10:47:07.789Z","type":"message"}
{"nick":"dominictarr","message":"like if it's a JSON paser,","date":"2013-04-08T10:47:18.724Z","type":"message"}
{"nick":"dominictarr","message":"and there is a '{' and it's not in the 'STRING' state, then the parser must eventually emit a matching object, or a SyntaxError","date":"2013-04-08T10:48:05.489Z","type":"message"}
{"nick":"dominictarr","message":"but the interesting thing with parsers, is that they are usually contructed with a formal model, and tested with valid and invalid inputs","date":"2013-04-08T10:48:59.608Z","type":"message"}
{"nick":"shuaib","reason":"Ping timeout: 252 seconds","date":"2013-04-08T10:50:03.014Z","type":"quit"}
{"nick":"dominictarr","message":"we need to do that with async systems","date":"2013-04-08T10:52:29.712Z","type":"message"}
{"nick":"shuaib","date":"2013-04-08T10:53:00.237Z","type":"join"}
{"nick":"dominictarr","message":"like, a classic stream should always eventually emit a drain following a pause (returning false)","date":"2013-04-08T10:53:02.301Z","type":"message"}
{"nick":"juliangruber_","message":"treat them like a state machine?","date":"2013-04-08T10:53:12.746Z","type":"message"}
{"nick":"dominictarr","message":"PAUSE DRAIN PAUSE DRAIN PAUSE DRAIN is valid","date":"2013-04-08T10:53:23.677Z","type":"message"}
{"nick":"dominictarr","message":"but PAUSE DRAIN DRAIN is not","date":"2013-04-08T10:53:32.152Z","type":"message"}
{"nick":"dominictarr","message":"PAUSE PAUSE PAUSE DRAIN is okay though","date":"2013-04-08T10:53:57.261Z","type":"message"}
{"nick":"dominictarr","message":"juliangruber_: absolutely, because then you can model all possible state transitions","date":"2013-04-08T10:54:33.733Z","type":"message"}
{"nick":"dominictarr","message":"which you need for quality testing","date":"2013-04-08T10:55:06.658Z","type":"message"}
{"nick":"dominictarr","message":"and evaluating the quality of the tests","date":"2013-04-08T10:55:45.011Z","type":"message"}
{"nick":"dominictarr","message":"code coverage isn't good enough","date":"2013-04-08T10:55:53.261Z","type":"message"}
{"nick":"dominictarr","message":"because you need to test each code _path_, and code coverage tools don't know if you have covered code paths","date":"2013-04-08T10:56:36.953Z","type":"message"}
{"nick":"juliangruber_","message":"we need a tool where you input your state machine and it gives you useful paths to test","date":"2013-04-08T10:57:31.655Z","type":"message"}
{"nick":"juliangruber_","message":"like, test PAUSE DRAIN PAUSE DRAIN, but not PAUSE DRAIN PAUSE DRAIN PAUSE DRAIN","date":"2013-04-08T10:57:59.982Z","type":"message"}
{"nick":"juliangruber_","message":"or a tool that randomly triggers valid and invalid code paths based on a formal state machine","date":"2013-04-08T11:04:32.676Z","type":"message"}
{"nick":"juliangruber_","message":"I heared, a lot of browser bucks are caught by randomly making it do thing","date":"2013-04-08T11:04:49.254Z","type":"message"}
{"nick":"spion","reason":"Ping timeout: 246 seconds","date":"2013-04-08T11:05:40.801Z","type":"quit"}
{"nick":"dominictarr","message":"\"browser bucks\" ?","date":"2013-04-08T11:06:30.743Z","type":"message"}
{"nick":"juliangruber_","message":"bugs :D","date":"2013-04-08T11:06:38.041Z","type":"message"}
{"nick":"dominictarr","message":"aha","date":"2013-04-08T11:06:45.040Z","type":"message"}
{"nick":"dominictarr","message":"so, I tried this a while ago with https://npmjs.org/package/macgyver","date":"2013-04-08T11:07:07.422Z","type":"message"}
{"nick":"dominictarr","message":"but making it more like TAP would be bettor","date":"2013-04-08T11:07:16.726Z","type":"message"}
{"nick":"yorick","date":"2013-04-08T11:07:34.089Z","type":"join"}
{"nick":"dominictarr","message":"then, you just have your machine output EVENT STATE {DATA}","date":"2013-04-08T11:07:40.615Z","type":"message"}
{"nick":"dominictarr","message":"etc","date":"2013-04-08T11:07:42.805Z","type":"message"}
{"nick":"dominictarr","message":"and then have a model that checks that","date":"2013-04-08T11:07:56.594Z","type":"message"}
{"nick":"mikolalysenko","date":"2013-04-08T11:08:57.030Z","type":"join"}
{"nick":"dominictarr","message":"which you could specify with temoral logic, kinda like a regexp","date":"2013-04-08T11:09:28.772Z","type":"message"}
{"nick":"juliangruber_","message":"temporal?","date":"2013-04-08T11:09:47.592Z","type":"message"}
{"nick":"dominictarr","message":"oops, yes","date":"2013-04-08T11:09:58.868Z","type":"message"}
{"nick":"juliangruber_","message":"ok","date":"2013-04-08T11:10:02.831Z","type":"message"}
{"nick":"juliangruber_","message":"so","date":"2013-04-08T11:10:03.518Z","type":"message"}
{"nick":"juliangruber_","message":"how would the syntax look like?","date":"2013-04-08T11:10:09.454Z","type":"message"}
{"nick":"dominictarr","message":"like /DATA*(END|ERROR)?CLOSE$/","date":"2013-04-08T11:10:34.195Z","type":"message"}
{"nick":"nicholas_","date":"2013-04-08T11:10:37.604Z","type":"join"}
{"nick":"nicholas_","reason":"Read error: Connection reset by peer","date":"2013-04-08T11:10:38.020Z","type":"quit"}
{"nick":"juliangruber_","message":"aaaah","date":"2013-04-08T11:10:40.799Z","type":"message"}
{"nick":"dominictarr","message":"like a regexp","date":"2013-04-08T11:10:42.780Z","type":"message"}
{"nick":"juliangruber_","message":"nice","date":"2013-04-08T11:10:43.499Z","type":"message"}
{"nick":"dominictarr","message":"you could put pause state in that too","date":"2013-04-08T11:11:10.482Z","type":"message"}
{"nick":"juliangruber_","message":"is regexp mighty enough?","date":"2013-04-08T11:11:35.386Z","type":"message"}
{"nick":"dominictarr","message":"with pause /^(DATA|(PAUSE+DRAIN))*(END|ERROR)?CLOSE$/","date":"2013-04-08T11:12:00.425Z","type":"message"}
{"nick":"dominictarr","message":"for some things","date":"2013-04-08T11:12:10.007Z","type":"message"}
{"nick":"dominictarr","message":"most importantly, it's familiar","date":"2013-04-08T11:12:20.331Z","type":"message"}
{"nick":"dominictarr","message":"you can't do nested state, so you can't do recursive things, like json, or html","date":"2013-04-08T11:13:18.941Z","type":"message"}
{"nick":"juliangruber_","message":"http://www.catonmat.net/blog/recursive-regular-expressions/","date":"2013-04-08T11:14:22.421Z","type":"message"}
{"nick":"dominictarr","message":"* reading","date":"2013-04-08T11:16:40.240Z","type":"message"}
{"nick":"cianomaidin","date":"2013-04-08T11:21:00.080Z","type":"join"}
{"nick":"dominictarr","message":"juliangruber_: you could use this model to check all your callbacks too, it's really simple /^(ASYNC)(RETURN)(ERROR|RESULT)$/","date":"2013-04-08T11:21:11.793Z","type":"message"}
{"nick":"dominictarr","message":"for a callback that is always async","date":"2013-04-08T11:21:23.220Z","type":"message"}
{"nick":"dominictarr","message":"if it can callback sync, it would look like this:","date":"2013-04-08T11:21:35.444Z","type":"message"}
{"nick":"dominictarr","message":"sync or async: /^(ASYNC)(((ERROR|CB)RETURN)|(RETURN(ERROR|CB)$/","date":"2013-04-08T11:22:50.387Z","type":"message"}
{"nick":"dominictarr","message":"here, I am using () to seperate event names","date":"2013-04-08T11:23:04.146Z","type":"message"}
{"nick":"dominictarr","message":"could also just use single letters","date":"2013-04-08T11:23:10.954Z","type":"message"}
{"nick":"dominictarr","message":"or spaces, but this way it's a valid regexp","date":"2013-04-08T11:23:28.948Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-04-08T11:24:26.664Z","type":"quit"}
{"nick":"dominictarr","message":"ASYNC is calling the async function, so the first one means that the function must return before the callback","date":"2013-04-08T11:24:32.944Z","type":"message"}
{"nick":"juliangruber_","message":"aaah","date":"2013-04-08T11:24:48.712Z","type":"message"}
{"nick":"dominictarr","message":"and if you have an output that calls back twice… then that is an error","date":"2013-04-08T11:25:17.083Z","type":"message"}
{"nick":"dominictarr","message":"this could all go into a TAP like thing, and then have a checker","date":"2013-04-08T11:27:12.922Z","type":"message"}
{"nick":"dominictarr","message":"and you could also check what paths arn't tested","date":"2013-04-08T11:27:53.352Z","type":"message"}
{"nick":"nicholas_","date":"2013-04-08T11:29:34.957Z","type":"join"}
{"nick":"paul_irish_","reason":"Ping timeout: 255 seconds","date":"2013-04-08T11:29:35.257Z","type":"quit"}
{"nick":"paul_irish","date":"2013-04-08T11:29:35.777Z","type":"join"}
{"nick":"juliangruber_","message":"I get the first one","date":"2013-04-08T11:29:35.932Z","type":"message"}
{"nick":"juliangruber_","message":"in the second on, eh","date":"2013-04-08T11:29:36.077Z","type":"message"}
{"nick":"juliangruber_","message":"*one, what does (ERROR|CB) mean?","date":"2013-04-08T11:29:36.077Z","type":"message"}
{"nick":"juliangruber_","message":"should it throw immediately or call CB when done with async operations?","date":"2013-04-08T11:29:36.227Z","type":"message"}
{"nick":"spion","date":"2013-04-08T11:29:46.553Z","type":"join"}
{"nick":"dominictarr","message":"like, you'd know whether you have SYNCASYNCs that always callback ASYNC, and never SYNC, so you'd know you'd need to test the path where it calls back sync","date":"2013-04-08T11:30:02.446Z","type":"message"}
{"nick":"wolfeidau","reason":"Ping timeout: 260 seconds","date":"2013-04-08T11:30:12.067Z","type":"quit"}
{"nick":"dominictarr","message":"oh, maybe that should be (ERR|RESULT)","date":"2013-04-08T11:30:13.230Z","type":"message"}
{"nick":"dominictarr","message":"I mean, it can callback an error or a valid result","date":"2013-04-08T11:30:31.189Z","type":"message"}
{"nick":"juliangruber_","message":"ok","date":"2013-04-08T11:30:36.649Z","type":"message"}
{"nick":"dominictarr","message":"of course, there is an important distinction between valid (handleable errors) and invalid errors","date":"2013-04-08T11:31:31.888Z","type":"message"}
{"nick":"dominictarr","message":"you should test the error paths too.","date":"2013-04-08T11:31:43.615Z","type":"message"}
{"nick":"juliangruber_","message":"yes","date":"2013-04-08T11:35:06.151Z","type":"message"}
{"nick":"spion","reason":"Ping timeout: 246 seconds","date":"2013-04-08T11:35:25.802Z","type":"quit"}
{"nick":"juliangruber_","message":"what's wrong here https://gist.github.com/juliangruber/5336165","date":"2013-04-08T11:35:50.172Z","type":"message"}
{"nick":"st_luke","date":"2013-04-08T11:36:13.165Z","type":"join"}
{"nick":"juliangruber_","message":"oh, the udid thing was wrong","date":"2013-04-08T11:38:05.119Z","type":"message"}
{"nick":"cianomaidin","reason":"Quit: cianomaidin","date":"2013-04-08T11:44:02.486Z","type":"quit"}
{"nick":"cianomaidin","date":"2013-04-08T11:47:07.411Z","type":"join"}
{"nick":"dominictarr","message":"we just need a streaming regular parser","date":"2013-04-08T11:47:33.201Z","type":"message"}
{"nick":"spion","date":"2013-04-08T11:47:47.572Z","type":"join"}
{"nick":"mikolalysenko","date":"2013-04-08T11:52:15.426Z","type":"join"}
{"nick":"spion","reason":"Ping timeout: 246 seconds","date":"2013-04-08T11:52:55.862Z","type":"quit"}
{"nick":"spion","date":"2013-04-08T11:53:48.628Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 264 seconds","date":"2013-04-08T12:07:24.554Z","type":"quit"}
{"nick":"dominictarr","message":"juliangruber_: hmm, but if you have a stream that accepts data, but doesn't emit data until it's unpaused, and always emits the same number of data items… that is hard to specify","date":"2013-04-08T12:09:51.761Z","type":"message"}
{"nick":"dominictarr","message":"that is not a simple regular language anymore","date":"2013-04-08T12:10:02.343Z","type":"message"}
{"nick":"dominictarr","message":"it's like a^nb^n (any number of a's then same number of b's), which regexp can't express","date":"2013-04-08T12:10:53.329Z","type":"message"}
{"nick":"juliangruber_","message":"sounds like we need a dsl","date":"2013-04-08T12:13:19.956Z","type":"message"}
{"nick":"fotoverite","date":"2013-04-08T12:19:52.326Z","type":"join"}
{"nick":"dominictarr","message":"yes, a streaming parser generator","date":"2013-04-08T12:28:08.026Z","type":"message"}
{"nick":"dominictarr","message":"we could still specify a lot with regular expressions","date":"2013-04-08T12:28:38.248Z","type":"message"}
{"nick":"juliangruber_","message":"there are some modules for this, but none as flexible as necessary","date":"2013-04-08T12:28:49.373Z","type":"message"}
{"nick":"juliangruber_","message":"yes","date":"2013-04-08T12:28:52.710Z","type":"message"}
{"nick":"dominictarr","message":"but more advanced parsers would give us tighter specs","date":"2013-04-08T12:29:10.954Z","type":"message"}
{"nick":"gozala","date":"2013-04-08T12:29:16.835Z","type":"join"}
{"nick":"dominictarr","message":"no one would be able to say js isn't a systems language, with that stuff!","date":"2013-04-08T12:30:00.938Z","type":"message"}
{"nick":"st_luke","message":"they will still say it","date":"2013-04-08T12:32:57.692Z","type":"message"}
{"nick":"mikolalysenko","date":"2013-04-08T12:34:22.654Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-04-08T12:51:55.038Z","type":"quit"}
{"nick":"pkrumins_","new_nick":"pkrumins","date":"2013-04-08T12:57:37.319Z","type":"nick"}
{"nick":"brianloveswords","reason":"Ping timeout: 264 seconds","date":"2013-04-08T13:01:54.088Z","type":"quit"}
{"nick":"juliangruber_","message":"dominictarr: level-scuttlebutt doesn't load my previously stored data","date":"2013-04-08T13:02:01.109Z","type":"message"}
{"nick":"cianomaidin","reason":"Quit: cianomaidin","date":"2013-04-08T13:02:25.421Z","type":"quit"}
{"nick":"cianomaidin","date":"2013-04-08T13:02:59.880Z","type":"join"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-04-08T13:03:51.178Z","type":"quit"}
{"nick":"dominictarr","message":"juliangruber_: what sort of data?","date":"2013-04-08T13:06:32.203Z","type":"message"}
{"nick":"brianloveswords","date":"2013-04-08T13:07:04.792Z","type":"join"}
{"nick":"juliangruber_","message":"dominictarr: crdt. here's a gist: https://gist.github.com/juliangruber/5336653","date":"2013-04-08T13:09:00.293Z","type":"message"}
{"nick":"juliangruber_","message":"node t.js write inserts data","date":"2013-04-08T13:09:17.629Z","type":"message"}
{"nick":"juliangruber_","message":"node t.js read reads everything","date":"2013-04-08T13:09:24.348Z","type":"message"}
{"nick":"juliangruber_","message":"when I inspect the leveldb with lev everything is duplicated","date":"2013-04-08T13:11:01.564Z","type":"message"}
{"nick":"dominictarr","message":"I'll have a look","date":"2013-04-08T13:14:48.160Z","type":"message"}
{"nick":"juliangruber_","message":"thanks :)","date":"2013-04-08T13:15:02.951Z","type":"message"}
{"nick":"cianomaidin","reason":"Quit: cianomaidin","date":"2013-04-08T13:15:43.684Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-04-08T13:16:47.516Z","type":"join"}
{"nick":"juliangruber_","message":"oh, so level-scuttlebutt adds persistence, but all the data is still stored in memory?","date":"2013-04-08T13:23:32.038Z","type":"message"}
{"nick":"juliangruber_","message":"*too?","date":"2013-04-08T13:23:35.223Z","type":"message"}
{"nick":"pkrumins","message":"hey guys, there is this latvian company that just raised money and they're looking for someone to write them a node module for their search engine","date":"2013-04-08T13:25:54.263Z","type":"message"}
{"nick":"pkrumins","message":"if anyone wants to do this, i can introduce you to them","date":"2013-04-08T13:26:10.047Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 260 seconds","date":"2013-04-08T13:31:31.953Z","type":"quit"}
{"nick":"fallsemo","date":"2013-04-08T13:34:30.441Z","type":"join"}
{"nick":"juliangruber_","message":"how much work aprox?","date":"2013-04-08T13:36:24.009Z","type":"message"}
{"nick":"juliangruber_","message":"pkrumins: ^","date":"2013-04-08T13:36:27.620Z","type":"message"}
{"nick":"pkrumins","message":"so what they told me they've the modules in python and php, but now they also want node.js library","date":"2013-04-08T13:38:52.334Z","type":"message"}
{"nick":"pkrumins","message":"so you'd use python and php as examples","date":"2013-04-08T13:39:04.259Z","type":"message"}
{"nick":"thl0","date":"2013-04-08T13:39:09.469Z","type":"join"}
{"nick":"pkrumins","message":"i havent looked at it myself at all so i dont really know how big their libraries are","date":"2013-04-08T13:39:21.213Z","type":"message"}
{"nick":"pkrumins","message":"if you're interested, i can intro you right now","date":"2013-04-08T13:39:32.559Z","type":"message"}
{"nick":"pkrumins","message":"and you can discuss this further","date":"2013-04-08T13:39:36.462Z","type":"message"}
{"nick":"pkrumins","message":"their product is a massive scale search engine","date":"2013-04-08T13:39:54.846Z","type":"message"}
{"nick":"pkrumins","message":"just add more clusters and it scales automatically","date":"2013-04-08T13:40:03.093Z","type":"message"}
{"nick":"juliangruber_","message":"when should it start? I'm busy right now but I could do it starting from the 22th","date":"2013-04-08T13:40:22.478Z","type":"message"}
{"nick":"pkrumins","message":"that's cool they've been emailing me since last year","date":"2013-04-08T13:40:43.100Z","type":"message"}
{"nick":"pkrumins","message":"so it doesnt look like there's a hurry","date":"2013-04-08T13:40:49.745Z","type":"message"}
{"nick":"pkrumins","message":"juliangruber_: ok i'm introing you then","date":"2013-04-08T13:41:08.198Z","type":"message"}
{"nick":"pkrumins","message":"oh but i dont know your email","date":"2013-04-08T13:41:47.839Z","type":"message"}
{"nick":"pkrumins","message":":)","date":"2013-04-08T13:41:49.195Z","type":"message"}
{"nick":"juliangruber_","message":"julian@juliangruber.com","date":"2013-04-08T13:41:58.477Z","type":"message"}
{"nick":"pkrumins","message":"thanks","date":"2013-04-08T13:42:04.248Z","type":"message"}
{"nick":"thl0","reason":"Ping timeout: 264 seconds","date":"2013-04-08T13:44:36.464Z","type":"quit"}
{"nick":"thl0","date":"2013-04-08T13:44:46.501Z","type":"join"}
{"nick":"pkrumins","message":"juliangruber_: introed","date":"2013-04-08T13:48:52.933Z","type":"message"}
{"nick":"juliangruber_","message":"pkrumins: thanks :)","date":"2013-04-08T13:49:07.741Z","type":"message"}
{"nick":"pkrumins","message":"juliangruber_: the guy i introed you to is the ceo of the company","date":"2013-04-08T13:49:16.362Z","type":"message"}
{"nick":"pkrumins","message":"that's about all i know about him or his company. they raised 1m euros recently.","date":"2013-04-08T13:49:32.239Z","type":"message"}
{"nick":"pkrumins","message":"you're welcome","date":"2013-04-08T13:49:47.217Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-04-08T13:55:42.510Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-04-08T13:58:44.474Z","type":"join"}
{"nick":"kenperkins","date":"2013-04-08T14:05:25.839Z","type":"join"}
{"nick":"fallsemo","reason":"Quit: Leaving.","date":"2013-04-08T14:05:55.149Z","type":"quit"}
{"nick":"fallsemo","date":"2013-04-08T14:07:00.399Z","type":"join"}
{"nick":"tmcw","date":"2013-04-08T14:07:38.510Z","type":"join"}
{"nick":"cianomaidin","date":"2013-04-08T14:08:23.662Z","type":"join"}
{"nick":"fallsemo","reason":"Ping timeout: 252 seconds","date":"2013-04-08T14:11:17.509Z","type":"quit"}
{"nick":"dominictarr","message":"juliangruber_: I one problem is that it's not setting the id on the scuttlebutts, each time i do a write they have a different id","date":"2013-04-08T14:14:25.976Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 264 seconds","date":"2013-04-08T14:14:36.443Z","type":"quit"}
{"nick":"thatguydan","date":"2013-04-08T14:15:11.700Z","type":"join"}
{"nick":"dominictarr","message":"juliangruber_: btw it's very helpful to put a package.json in examples/test scripts","date":"2013-04-08T14:15:29.603Z","type":"message"}
{"nick":"mikolalysenko","date":"2013-04-08T14:18:11.380Z","type":"join"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-04-08T14:18:14.148Z","type":"quit"}
{"nick":"cianomaidin","reason":"Quit: cianomaidin","date":"2013-04-08T14:20:49.815Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-04-08T14:22:03.056Z","type":"nick"}
{"nick":"cianomaidin","date":"2013-04-08T14:23:46.025Z","type":"join"}
{"nick":"Domenic__","date":"2013-04-08T14:27:01.313Z","type":"join"}
{"nick":"kenperkins","date":"2013-04-08T14:30:39.072Z","type":"join"}
{"nick":"fallsemo","date":"2013-04-08T14:35:25.430Z","type":"join"}
{"nick":"cianomaidin","reason":"Quit: cianomaidin","date":"2013-04-08T14:38:16.314Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-04-08T14:41:51.072Z","type":"join"}
{"nick":"cianomaidin","date":"2013-04-08T14:46:36.976Z","type":"join"}
{"nick":"dominictarr","message":"juliangruber_: yeah, that was the first problem - because all my tests used the object as schema approach","date":"2013-04-08T14:50:05.260Z","type":"message"}
{"nick":"dominictarr","message":"and the schema set the scuttlebutt.id to the udid but that is not the right place for that","date":"2013-04-08T14:50:58.098Z","type":"message"}
{"nick":"notalexgordon_","new_nick":"ec","date":"2013-04-08T14:54:16.980Z","type":"nick"}
{"nick":"timoxley","date":"2013-04-08T14:58:43.106Z","type":"join"}
{"nick":"dominictarr","message":"I'm adding a test to level-scuttlebutt for it","date":"2013-04-08T14:58:57.253Z","type":"message"}
{"nick":"dguttman","date":"2013-04-08T15:02:00.194Z","type":"join"}
{"nick":"ITpro","date":"2013-04-08T15:05:59.006Z","type":"join"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) keith@... successfully signed up for developer browserling plan ($20). Cash money! /!\\","date":"2013-04-08T15:06:02.072Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) paid account successfully upgraded /!\\","date":"2013-04-08T15:06:02.242Z","type":"message"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-04-08T15:25:40.768Z","type":"quit"}
{"nick":"jan____","date":"2013-04-08T15:27:41.181Z","type":"join"}
{"nick":"kenperkins","date":"2013-04-08T15:28:38.679Z","type":"join"}
{"nick":"shuaib","reason":"Ping timeout: 252 seconds","date":"2013-04-08T15:31:03.044Z","type":"quit"}
{"nick":"shuaib","date":"2013-04-08T15:32:02.805Z","type":"join"}
{"nick":"wolfeidau","date":"2013-04-08T15:36:12.621Z","type":"join"}
{"nick":"CryptoQuick","date":"2013-04-08T15:37:51.452Z","type":"join"}
{"nick":"mikolalysenko","message":"is there any library in npm that can draw orthographic tilemaps?","date":"2013-04-08T15:53:57.556Z","type":"message"}
{"nick":"mikolalysenko","message":"for scrolling maps/games/etc","date":"2013-04-08T15:54:14.953Z","type":"message"}
{"nick":"tmcw","message":"mikolalysenko: https://github.com/substack/tilemap","date":"2013-04-08T15:56:43.325Z","type":"message"}
{"nick":"mikolalysenko","message":"tmcw: that only works for isometric tiles","date":"2013-04-08T15:57:09.906Z","type":"message"}
{"nick":"tmcw","message":"in that case no","date":"2013-04-08T15:57:32.813Z","type":"message"}
{"nick":"mikolalysenko","message":"hmm","date":"2013-04-08T15:57:36.805Z","type":"message"}
{"nick":"mikolalysenko","message":"looking around, I found this project:  https://github.com/zynga/scroller","date":"2013-04-08T15:58:10.599Z","type":"message"}
{"nick":"mikolalysenko","message":"but it isn't npm-ified","date":"2013-04-08T15:58:20.583Z","type":"message"}
