{"nick":"st_luke","reason":"Remote host closed the connection","date":"2012-12-01T00:02:30.836Z","type":"quit"}
{"nick":"defunctzombie_","date":"2012-12-01T00:12:58.527Z","type":"join"}
{"nick":"defunctzombie","date":"2012-12-01T00:13:35.348Z","type":"quit"}
{"nick":"defunctzombie_","new_nick":"defunctzombie","date":"2012-12-01T00:13:35.567Z","type":"nick"}
{"nick":"ralphtheninja","reason":"Read error: Operation timed out","date":"2012-12-01T00:16:17.222Z","type":"quit"}
{"nick":"ralphtheninja","date":"2012-12-01T00:19:01.680Z","type":"join"}
{"nick":"substack","message":"mbalho: oh sweet, webappery!","date":"2012-12-01T00:19:43.269Z","type":"message"}
{"nick":"substack","message":"for gather.at","date":"2012-12-01T00:19:46.601Z","type":"message"}
{"nick":"yorick","reason":"Remote host closed the connection","date":"2012-12-01T00:23:12.555Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 2, free: 11]","date":"2012-12-01T00:23:13.912Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_id","date":"2012-12-01T00:23:16.538Z","type":"nick"}
{"nick":"defunctzombie_id","new_nick":"defunctzombie","date":"2012-12-01T00:23:25.158Z","type":"nick"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2012-12-01T00:24:45.360Z","type":"nick"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2012-12-01T00:28:16.222Z","type":"nick"}
{"nick":"CoverSlide","message":"mbalho: did you go full native for iphone/ios or did you use some html framework?","date":"2012-12-01T00:32:30.796Z","type":"message"}
{"nick":"CoverSlide","message":"i mean android/ios","date":"2012-12-01T00:33:13.771Z","type":"message"}
{"nick":"defunctzombie","reason":"Changing host","date":"2012-12-01T00:36:57.617Z","type":"quit"}
{"nick":"defunctzombie","date":"2012-12-01T00:36:57.835Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2012-12-01T00:38:05.265Z","type":"nick"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2012-12-01T00:39:59.909Z","type":"nick"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2012-12-01T00:40:33.352Z","type":"nick"}
{"nick":"chapel","reason":"Ping timeout: 246 seconds","date":"2012-12-01T00:57:43.806Z","type":"quit"}
{"nick":"sorensen","reason":"Ping timeout: 246 seconds","date":"2012-12-01T00:58:25.961Z","type":"quit"}
{"nick":"jibay","reason":"Quit: Leaving","date":"2012-12-01T01:04:55.735Z","type":"quit"}
{"nick":"_sorensen","date":"2012-12-01T01:06:14.883Z","type":"join"}
{"nick":"sorensen","date":"2012-12-01T01:09:11.939Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-12-01T01:10:33.334Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2012-12-01T01:10:43.833Z","type":"nick"}
{"nick":"mikeal","date":"2012-12-01T01:10:52.881Z","type":"join"}
{"nick":"chapel","date":"2012-12-01T01:12:41.741Z","type":"join"}
{"nick":"jden|zzz","new_nick":"jden","date":"2012-12-01T01:14:10.263Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 18]","date":"2012-12-01T01:23:13.804Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2012-12-01T01:24:10.405Z","type":"nick"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-12-01T01:37:44.532Z","type":"nick"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-12-01T01:39:04.050Z","type":"nick"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-12-01T02:01:03.344Z","type":"nick"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2012-12-01T02:01:41.321Z","type":"nick"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2012-12-01T02:10:14.620Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-12-01T02:12:20.748Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 14]","date":"2012-12-01T02:23:13.841Z","type":"message"}
{"nick":"saijanai_","reason":"Quit: saijanai_","date":"2012-12-01T02:36:20.748Z","type":"quit"}
{"nick":"ryan_stevens","date":"2012-12-01T02:42:49.123Z","type":"join"}
{"nick":"_sorensen","reason":"Quit: _sorensen","date":"2012-12-01T02:50:38.497Z","type":"quit"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-12-01T02:57:32.631Z","type":"nick"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-12-01T03:13:11.626Z","type":"quit"}
{"nick":"ryan_stevens","date":"2012-12-01T03:19:30.991Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 10]","date":"2012-12-01T03:23:14.268Z","type":"message"}
{"nick":"tphummel","reason":"Quit: tphummel","date":"2012-12-01T03:56:22.682Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-12-01T03:59:49.417Z","type":"quit"}
{"nick":"ryan_stevens","date":"2012-12-01T04:05:01.568Z","type":"join"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-12-01T04:13:46.821Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 34]","date":"2012-12-01T04:23:13.627Z","type":"message"}
{"nick":"ryan_stevens","date":"2012-12-01T04:37:32.000Z","type":"join"}
{"nick":"ryan_stevens","reason":"Client Quit","date":"2012-12-01T04:39:01.860Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2012-12-01T04:58:22.647Z","type":"quit"}
{"nick":"AvianFlu","date":"2012-12-01T05:14:41.231Z","type":"join"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-12-01T05:16:37.097Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 18]","date":"2012-12-01T05:23:13.762Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2012-12-01T05:35:53.816Z","type":"quit"}
{"nick":"ryan_stevens","date":"2012-12-01T05:58:43.826Z","type":"join"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-12-01T06:07:53.492Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 10]","date":"2012-12-01T06:23:13.748Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-12-01T06:43:17.717Z","type":"quit"}
{"nick":"rvagg","message":"hij1nx: \"Oqulr\" has to be something to do with vision/eyes... any other clues?","date":"2012-12-01T06:44:31.960Z","type":"message"}
{"nick":"substack","message":"isaacs: why is the 1..N always towards the bottom in tap tests?","date":"2012-12-01T07:00:12.216Z","type":"message"}
{"nick":"substack","message":"http://search.cpan.org/~petdance/Test-Harness-2.64/lib/Test/Harness/TAP.pod shows it at the top","date":"2012-12-01T07:00:39.033Z","type":"message"}
{"nick":"substack","message":"if the plan had to be on the first tick, tap could just buffer writes until after the first tick in order to put the 1..N at the top","date":"2012-12-01T07:03:39.286Z","type":"message"}
{"nick":"isaacs","message":"substack: you can emit the plan either at the start or at the end.","date":"2012-12-01T07:08:41.161Z","type":"message"}
{"nick":"isaacs","message":"substack: i typically do it at the end, because i don't know how many tests i will have run until i run them","date":"2012-12-01T07:08:52.094Z","type":"message"}
{"nick":"substack","message":"it seems like where possible it would be best to put it at the start","date":"2012-12-01T07:09:15.766Z","type":"message"}
{"nick":"isaacs","message":"substack: disagree.  i enjoy having a list of similarly-shaped test cases in an array, and then iterate over it, and then call t.end().  then adding new tests for new bugs is easy.","date":"2012-12-01T07:09:41.383Z","type":"message"}
{"nick":"isaacs","message":"substack: actually, the whole \"plan\" thing is kind of weird and stupid, i think","date":"2012-12-01T07:10:08.987Z","type":"message"}
{"nick":"substack","message":"isaacs: I mean that the library could output the 1..N part first","date":"2012-12-01T07:10:24.933Z","type":"message"}
{"nick":"substack","message":"if possible","date":"2012-12-01T07:10:28.941Z","type":"message"}
{"nick":"isaacs","message":"substack: but it's not possible first.","date":"2012-12-01T07:10:36.843Z","type":"message"}
{"nick":"substack","message":"it would be if writes were buffered and plans came in on the first tick","date":"2012-12-01T07:10:50.950Z","type":"message"}
{"nick":"isaacs","message":"substack: how do i know how many tests you will run until you run them, if you don't call t.plan() and tell me?","date":"2012-12-01T07:10:51.646Z","type":"message"}
{"nick":"isaacs","message":"substack: oic, so IF you call t.plan() on first tick, it could put 1..N first?","date":"2012-12-01T07:11:25.236Z","type":"message"}
{"nick":"substack","message":"yes","date":"2012-12-01T07:11:28.448Z","type":"message"}
{"nick":"isaacs","action":"never calls t.plan()","date":"2012-12-01T07:11:31.896Z","type":"action"}
{"nick":"substack","message":"it seems like this is possible","date":"2012-12-01T07:11:33.665Z","type":"message"}
{"nick":"isaacs","action":"hates t.plan()","date":"2012-12-01T07:11:35.815Z","type":"action"}
{"nick":"substack","action":"likes t.plan()","date":"2012-12-01T07:11:40.624Z","type":"action"}
{"nick":"isaacs","message":"substack: sure, go for it","date":"2012-12-01T07:11:42.831Z","type":"message"}
{"nick":"substack","message":"ok I will implement this in tape first to test the feasibility","date":"2012-12-01T07:11:53.548Z","type":"message"}
{"nick":"isaacs","message":"for me, i like just calling t.end() when i'm done","date":"2012-12-01T07:11:54.651Z","type":"message"}
{"nick":"isaacs","message":"but really, it makes no differences","date":"2012-12-01T07:12:05.619Z","type":"message"}
{"nick":"substack","message":"it's easier to tap to get away with not doing t.plan()","date":"2012-12-01T07:12:06.656Z","type":"message"}
{"nick":"substack","message":"since it's node so you can hook into the process exit codes","date":"2012-12-01T07:12:16.662Z","type":"message"}
{"nick":"substack","message":"but browsers don't have exit codes :(","date":"2012-12-01T07:12:23.866Z","type":"message"}
{"nick":"isaacs","message":"substack: well, only the global handler can do that,or the test runner","date":"2012-12-01T07:12:37.544Z","type":"message"}
{"nick":"isaacs","message":"substack: but that's not where plan() goes anyway","date":"2012-12-01T07:12:42.987Z","type":"message"}
{"nick":"isaacs","message":"substack: consider this:  test(function(t){t.ok(true);t.end()}); test(function(t){t.pass('ok');t.end()});","date":"2012-12-01T07:13:22.800Z","type":"message"}
{"nick":"isaacs","message":"substack: in this case, you have 2 tests in the overall set.","date":"2012-12-01T07:13:35.626Z","type":"message"}
{"nick":"substack","message":"yep","date":"2012-12-01T07:13:39.655Z","type":"message"}
{"nick":"isaacs","message":"substack: but you don't know that unti lyou run those functions","date":"2012-12-01T07:13:43.036Z","type":"message"}
{"nick":"substack","message":"but both on the first tick","date":"2012-12-01T07:13:46.877Z","type":"message"}
{"nick":"isaacs","message":"substack: if one of them does a setTimeout() though, and didn't set a plan, then you don't know","date":"2012-12-01T07:14:00.078Z","type":"message"}
{"nick":"substack","message":"yes","date":"2012-12-01T07:14:05.610Z","type":"message"}
{"nick":"substack","message":"but then the plan would be at the end","date":"2012-12-01T07:14:11.017Z","type":"message"}
{"nick":"isaacs","message":"substack: so you have to buffer *all* output, and count tests, and check if all tests ended on the first tick, and for what?  just so that 1..N is at the start rather than at the end?","date":"2012-12-01T07:14:37.113Z","type":"message"}
{"nick":"isaacs","message":"seems silly.","date":"2012-12-01T07:14:41.220Z","type":"message"}
{"nick":"isaacs","message":"substack: you can just call tap.plan(2) if you knwo there will be 2 tests.","date":"2012-12-01T07:14:49.398Z","type":"message"}
{"nick":"isaacs","message":"and then it'll be at the top","date":"2012-12-01T07:14:52.150Z","type":"message"}
{"nick":"isaacs","message":"but who cares?","date":"2012-12-01T07:14:53.971Z","type":"message"}
{"nick":"isaacs","message":"it's the same semantics","date":"2012-12-01T07:14:57.259Z","type":"message"}
{"nick":"substack","message":"not in browsers","date":"2012-12-01T07:15:03.131Z","type":"message"}
{"nick":"substack","message":"which could crash in a strange way or get stuck and stop responding and the output could *look* correct but be incorrect","date":"2012-12-01T07:15:24.212Z","type":"message"}
{"nick":"substack","message":"since you've not got error codes to fall back on for secondary confirmation","date":"2012-12-01T07:16:06.054Z","type":"message"}
{"nick":"isaacs","message":"if you don't get a 1..N at the end, then it is incorrect","date":"2012-12-01T07:16:39.029Z","type":"message"}
{"nick":"isaacs","message":"if you get a 1..N and then (count of tests) !== N, then it is incorrect","date":"2012-12-01T07:16:52.154Z","type":"message"}
{"nick":"substack","message":"ah","date":"2012-12-01T07:16:55.670Z","type":"message"}
{"nick":"substack","message":"ok that is a bit different then","date":"2012-12-01T07:17:01.253Z","type":"message"}
{"nick":"isaacs","message":"in the tap output, there MUST be a plan","date":"2012-12-01T07:17:03.860Z","type":"message"}
{"nick":"isaacs","message":"but you might not *know* the plan ahead of time","date":"2012-12-01T07:17:13.377Z","type":"message"}
{"nick":"substack","message":"do all tap parsers work that way?","date":"2012-12-01T07:17:14.468Z","type":"message"}
{"nick":"isaacs","message":"correct ones do :)","date":"2012-12-01T07:17:20.411Z","type":"message"}
{"nick":"substack","message":"if so then nevermind!","date":"2012-12-01T07:17:24.897Z","type":"message"}
{"nick":"substack","message":"this is good","date":"2012-12-01T07:17:26.298Z","type":"message"}
{"nick":"isaacs","message":":D","date":"2012-12-01T07:18:07.068Z","type":"message"}
{"nick":"mbalho","message":"haha","date":"2012-12-01T07:18:28.754Z","type":"message"}
{"nick":"substack","message":"tap is pretty great","date":"2012-12-01T07:18:42.315Z","type":"message"}
{"nick":"fotoverite","message":"tape is also pretty great","date":"2012-12-01T07:18:52.409Z","type":"message"}
{"nick":"substack","message":"also I learned that perl has been doing TAP output since 1987","date":"2012-12-01T07:18:57.955Z","type":"message"}
{"nick":"substack","message":"the perl test suite just did it a simple text way and then modules built up around it","date":"2012-12-01T07:19:24.502Z","type":"message"}
{"nick":"mbalho","message":"guys i have node controlling a robot claw","date":"2012-12-01T07:19:33.260Z","type":"message"}
{"nick":"substack","message":"\\o/","date":"2012-12-01T07:19:37.775Z","type":"message"}
{"nick":"mbalho","message":"and in the morning im gonna mount it on a helicopter MUAHAHAH","date":"2012-12-01T07:19:50.159Z","type":"message"}
{"nick":"mbalho","message":"substack: are you gonna be at groupon at 10?","date":"2012-12-01T07:19:56.765Z","type":"message"}
{"nick":"substack","message":"yep","date":"2012-12-01T07:20:00.745Z","type":"message"}
{"nick":"mbalho","message":"sweet","date":"2012-12-01T07:20:04.777Z","type":"message"}
{"nick":"substack","message":"I'll write my demo on-site","date":"2012-12-01T07:20:15.167Z","type":"message"}
{"nick":"mbalho","message":"lol","date":"2012-12-01T07:20:21.170Z","type":"message"}
{"nick":"substack","message":"and if it doesn't work I have fallbacks I can show","date":"2012-12-01T07:20:21.844Z","type":"message"}
{"nick":"substack","message":"my demo sort of needs other helicopters to test","date":"2012-12-01T07:20:33.455Z","type":"message"}
{"nick":"substack","message":"it's just iwconfig + iwlist parsing mostly","date":"2012-12-01T07:21:07.284Z","type":"message"}
{"nick":"substack","message":"isaacs: I had another idea prompted by dominictarr asking a question about tape returning the `t` object in test()","date":"2012-12-01T07:22:17.097Z","type":"message"}
{"nick":"substack","message":"if you don't pass test() a callback it could switch into parallel mode but then reconstructing the output could be tricky","date":"2012-12-01T07:22:59.431Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 31]","date":"2012-12-01T07:23:13.599Z","type":"message"}
{"nick":"substack","message":"unless you've just got a single test object","date":"2012-12-01T07:23:14.710Z","type":"message"}
{"nick":"substack","message":"var t = test('blarg')","date":"2012-12-01T07:23:43.606Z","type":"message"}
{"nick":"isaacs","message":"substack: that sucks if you have more than one test in the file","date":"2012-12-01T07:25:27.391Z","type":"message"}
{"nick":"isaacs","message":"substack: the point of having a callback is that each test() call might not finish synchronously","date":"2012-12-01T07:25:43.955Z","type":"message"}
{"nick":"mbalho","message":"why are require('repl') commands formatted as (command\\n)","date":"2012-12-01T07:38:46.617Z","type":"message"}
{"nick":"mbalho","message":"like require('repl').start({eval: function(cmd){ console.log(cmd) }}) logs out whatever you type in wrapped in (\\n)","date":"2012-12-01T07:41:31.534Z","type":"message"}
{"nick":"mbalho","message":"its weird","date":"2012-12-01T07:41:34.981Z","type":"message"}
{"nick":"isaacs","message":"mbalho: {foo: 'bar' }","date":"2012-12-01T07:42:20.907Z","type":"message"}
{"nick":"isaacs","message":".. { foo: 'bar' }","date":"2012-12-01T07:42:30.751Z","type":"message"}
{"nick":"isaacs","message":">> { foo:'bar }","date":"2012-12-01T07:42:37.764Z","type":"message"}
{"nick":"purr","message":"isaacs: SyntaxError: Unexpected token ILLEGAL","date":"2012-12-01T07:42:37.982Z","type":"message"}
{"nick":"isaacs","message":">> { foo:'bar' }","date":"2012-12-01T07:42:41.473Z","type":"message"}
{"nick":"purr","message":"isaacs: (string) 'bar'","date":"2012-12-01T07:42:41.693Z","type":"message"}
{"nick":"isaacs","message":"mbalho: because that's weird^","date":"2012-12-01T07:42:47.618Z","type":"message"}
{"nick":"isaacs","message":">> ({ foo:'bar' })","date":"2012-12-01T07:42:57.381Z","type":"message"}
{"nick":"purr","message":"isaacs: (object) {foo: 'bar'}","date":"2012-12-01T07:42:57.625Z","type":"message"}
{"nick":"isaacs","message":"mbalho: that's what you expect {foo:'bar'} to be","date":"2012-12-01T07:43:05.297Z","type":"message"}
{"nick":"isaacs","message":"mbalho: not a code block with a labelled expression statement","date":"2012-12-01T07:43:15.676Z","type":"message"}
{"nick":"mbalho","message":"wait why does the computer need to print out the object type in parens?","date":"2012-12-01T07:43:51.055Z","type":"message"}
{"nick":"isaacs","message":"mbalho: MEDITATE ON THIS AND GROK THE TRUE DEPTH OF JAVASCRIPT WTFERY!","date":"2012-12-01T07:44:11.549Z","type":"message"}
{"nick":"mbalho","message":"lol","date":"2012-12-01T07:44:22.268Z","type":"message"}
{"nick":"isaacs","message":"mbalho: oh, the object type in parense like (string) 'bar'?","date":"2012-12-01T07:44:34.371Z","type":"message"}
{"nick":"isaacs","message":"mbalho: i duno, that's just a purr thing i guess.  ask elliottcable","date":"2012-12-01T07:44:42.443Z","type":"message"}
{"nick":"isaacs","message":"mbalho: but the point is, { foo: 'bar' }","date":"2012-12-01T07:44:52.825Z","type":"message"}
{"nick":"isaacs","message":"is not an object unless you coerce it into an expression","date":"2012-12-01T07:45:00.686Z","type":"message"}
{"nick":"isaacs","message":"if that's the whole program, then it's a code block, with a line labeled 'foo', which contains a string expression","date":"2012-12-01T07:45:27.188Z","type":"message"}
{"nick":"mbalho","message":"isaacs: http://bit.ly/Swpbr4","date":"2012-12-01T07:45:42.726Z","type":"message"}
{"nick":"substack","action":"is sleepy at a normal hour despite drinking a lot of coffee","date":"2012-12-01T07:46:21.666Z","type":"action"}
{"nick":"isaacs","message":"mbalho: it's similar to how 'function(){'nope'}()' is a syntax error","date":"2012-12-01T07:46:35.307Z","type":"message"}
{"nick":"isaacs","message":"mbalho: but '!function(){return yup}()' is fine","date":"2012-12-01T07:46:46.762Z","type":"message"}
{"nick":"isaacs","message":"because the ! forces it to be an expression","date":"2012-12-01T07:46:56.224Z","type":"message"}
{"nick":"isaacs","message":"and you can't call function statements","date":"2012-12-01T07:47:06.295Z","type":"message"}
{"nick":"fotoverite","message":"I'm trying to follow foo: 'bar'","date":"2012-12-01T07:48:37.234Z","type":"message"}
{"nick":"isaacs","message":"fotoverite: js has code blocks","date":"2012-12-01T07:49:35.220Z","type":"message"}
{"nick":"fotoverite","message":"I mean I know it's wrong are you trying to explain why it's wrong more fully.","date":"2012-12-01T07:49:40.228Z","type":"message"}
{"nick":"isaacs","message":"fotoverite: even though they do nothing","date":"2012-12-01T07:49:40.448Z","type":"message"}
{"nick":"fotoverite","message":"Ah","date":"2012-12-01T07:49:44.526Z","type":"message"}
{"nick":"isaacs","message":"so:  {} is a code block","date":"2012-12-01T07:49:52.685Z","type":"message"}
{"nick":"isaacs","message":"{ console.log(\"ok\") }  <-- totall valid js program","date":"2012-12-01T07:50:08.772Z","type":"message"}
{"nick":"isaacs","message":"foo: console.log(\"ok\") <-- labeled line","date":"2012-12-01T07:50:26.518Z","type":"message"}
{"nick":"isaacs","message":"\"bar\" <-- valid expression statement","date":"2012-12-01T07:50:35.451Z","type":"message"}
{"nick":"isaacs","message":"foo: \"bar\" <-- labeled expression statement","date":"2012-12-01T07:50:45.692Z","type":"message"}
{"nick":"isaacs","message":"{ foo: \"bar\" } <-- labeled expression statement in a block","date":"2012-12-01T07:50:54.682Z","type":"message"}
{"nick":"isaacs","message":"({foo: \"bar\"}) <-- object literal!!","date":"2012-12-01T07:51:09.288Z","type":"message"}
{"nick":"fotoverite","message":"why do we like js again. :D","date":"2012-12-01T07:52:41.813Z","type":"message"}
{"nick":"defunctzombie","message":"because all of those make sense?","date":"2012-12-01T07:54:25.601Z","type":"message"}
{"nick":"fotoverite","message":"code blocks that do nothing make sense?","date":"2012-12-01T07:55:10.113Z","type":"message"}
{"nick":"fotoverite","message":":P","date":"2012-12-01T07:55:26.643Z","type":"message"}
{"nick":"defunctzombie","message":"sure, why not?","date":"2012-12-01T07:55:34.258Z","type":"message"}
{"nick":"Raynos","message":"isaacs: is read() -> null, read() -> \"\" and read() -> empty buffer all the same?","date":"2012-12-01T07:55:52.692Z","type":"message"}
{"nick":"defunctzombie","message":"if you wrote it differently you might not think anything of it","date":"2012-12-01T07:56:16.186Z","type":"message"}
{"nick":"defunctzombie","message":"this is why semicolons help clear up intent :/","date":"2012-12-01T07:56:56.268Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2012-12-01T07:58:56.416Z","type":"nick"}
