{"nick":"ircretary","reason":"Remote host closed the connection","date":"2015-09-18T00:00:01.734Z","type":"quit"}
{"nick":"ircretary","date":"2015-09-18T00:00:09.816Z","type":"join"}
{"nick":"shama","reason":"Remote host closed the connection","date":"2015-09-18T00:31:38.604Z","type":"quit"}
{"nick":"shama","date":"2015-09-18T00:36:34.452Z","type":"join"}
{"nick":"pfraze","date":"2015-09-18T00:42:36.892Z","type":"join"}
{"nick":"jjjohnny","message":"SIMD seems useful","date":"2015-09-18T00:52:46.137Z","type":"message"}
{"nick":"mikolalysenko","message":"BigNums would be good too, but they need to be carefully considered","date":"2015-09-18T01:13:53.089Z","type":"message"}
{"nick":"knownasilya","reason":"Quit: Connection closed for inactivity","date":"2015-09-18T01:15:32.014Z","type":"quit"}
{"nick":"domanic","reason":"Ping timeout: 240 seconds","date":"2015-09-18T01:20:31.642Z","type":"quit"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2015-09-18T01:24:15.228Z","type":"quit"}
{"nick":"ec\\","reason":"Ping timeout: 240 seconds","date":"2015-09-18T01:30:31.668Z","type":"quit"}
{"nick":"ec\\","date":"2015-09-18T01:31:00.559Z","type":"join"}
{"nick":"jjjohnny","message":"wish you could mine bitcoin in GLSL","date":"2015-09-18T01:32:19.902Z","type":"message"}
{"nick":"jjjohnny","message":"am i the only who wished your could opt for types and enjoy the bennies?","date":"2015-09-18T01:33:12.570Z","type":"message"}
{"nick":"jjjohnny","message":"why isnt that on the list","date":"2015-09-18T01:33:30.229Z","type":"message"}
{"nick":"jjjohnny","message":"signed typed","date":"2015-09-18T01:33:32.483Z","type":"message"}
{"nick":"jjjohnny","message":"just do it","date":"2015-09-18T01:33:34.333Z","type":"message"}
{"nick":"jjjohnny","message":"unsigned typos (not verified)","date":"2015-09-18T01:33:48.691Z","type":"message"}
{"nick":"jjjohnny","message":"no","date":"2015-09-18T01:34:30.500Z","type":"message"}
{"nick":"jjjohnny","message":"typed variables","date":"2015-09-18T01:34:38.621Z","type":"message"}
{"nick":"jjjohnny","message":"thats what i mean","date":"2015-09-18T01:34:42.133Z","type":"message"}
{"nick":"jjjohnny","message":"communicating is difficult","date":"2015-09-18T01:35:00.997Z","type":"message"}
{"nick":"jjjohnny","message":"typediness","date":"2015-09-18T01:35:42.480Z","type":"message"}
{"nick":"jjjohnny","message":"just doit","date":"2015-09-18T01:35:49.100Z","type":"message"}
{"nick":"jjjohnny","message":"i wrote a test to see if using  typed arrays instead of var would be a win","date":"2015-09-18T01:36:24.425Z","type":"message"}
{"nick":"jjjohnny","message":"it was a loss","date":"2015-09-18T01:36:26.632Z","type":"message"}
{"nick":"jjjohnny","message":"on large data it was probably a different story","date":"2015-09-18T01:37:16.325Z","type":"message"}
{"nick":"jjjohnny","message":"const is stupid","date":"2015-09-18T01:38:34.226Z","type":"message"}
{"nick":"jjjohnny","message":"stop using const","date":"2015-09-18T01:38:37.358Z","type":"message"}
{"nick":"jjjohnny","message":"im talking to you yoshuawuyts","date":"2015-09-18T01:38:51.197Z","type":"message"}
{"nick":"mrgodfrey","reason":"Ping timeout: 264 seconds","date":"2015-09-18T01:40:01.413Z","type":"quit"}
{"nick":"mrgodfre2","reason":"Ping timeout: 246 seconds","date":"2015-09-18T01:40:24.893Z","type":"quit"}
{"nick":"jjjohnny","message":"only use const if your immutable is being referenced at greater than 41 kHz","date":"2015-09-18T01:41:09.386Z","type":"message"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2015-09-18T01:55:24.630Z","type":"quit"}
{"nick":"mrgodfrey","date":"2015-09-18T02:16:03.343Z","type":"join"}
{"nick":"mrgodfre1","date":"2015-09-18T02:16:49.118Z","type":"join"}
{"nick":"mrgodfre1","date":"2015-09-18T02:17:13.573Z","type":"part"}
{"nick":"mrgodfre3","date":"2015-09-18T02:19:44.457Z","type":"join"}
{"nick":"mrgodfre3","date":"2015-09-18T02:20:06.726Z","type":"part"}
{"nick":"mrgodfrey","message":":quit","date":"2015-09-18T02:20:28.836Z","type":"message"}
{"nick":"mrgodfrey","message":":quit","date":"2015-09-18T02:20:31.476Z","type":"message"}
{"nick":"mrgodfrey","message":":quit","date":"2015-09-18T02:20:38.464Z","type":"message"}
{"nick":"mrgodfrey","reason":"Client Quit","date":"2015-09-18T02:20:44.574Z","type":"quit"}
{"nick":"mrgodfrey","date":"2015-09-18T02:21:06.619Z","type":"join"}
{"nick":"phated","date":"2015-09-18T02:44:08.609Z","type":"join"}
{"nick":"owen1_","new_nick":"owen1","date":"2015-09-18T03:26:37.521Z","type":"nick"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2015-09-18T03:58:23.425Z","type":"quit"}
{"nick":"sethvincent","reason":"Ping timeout: 240 seconds","date":"2015-09-18T04:04:51.597Z","type":"quit"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2015-09-18T04:26:54.323Z","type":"quit"}
{"nick":"domanic","date":"2015-09-18T04:51:36.354Z","type":"join"}
{"nick":"pfraze","date":"2015-09-18T04:56:18.296Z","type":"join"}
{"nick":"pfraze","reason":"Ping timeout: 256 seconds","date":"2015-09-18T05:00:40.299Z","type":"quit"}
{"nick":"shama","reason":"Quit: (╯°□°）╯︵ɐɯɐɥs","date":"2015-09-18T05:06:53.553Z","type":"quit"}
{"nick":"ogd","message":"substack: where is the bittorrent dht put demo code you showed me?","date":"2015-09-18T05:15:56.063Z","type":"message"}
{"nick":"domanic","reason":"Ping timeout: 260 seconds","date":"2015-09-18T05:28:35.956Z","type":"quit"}
{"nick":"domanic","date":"2015-09-18T05:41:08.988Z","type":"join"}
{"nick":"substack","message":"ogd: it's in the test suite of bittorrent-dht","date":"2015-09-18T05:42:41.358Z","type":"message"}
{"nick":"substack","message":"and https://github.com/substack/bittorrent-dht-store-keypair","date":"2015-09-18T05:43:09.721Z","type":"message"}
{"nick":"domanic","reason":"Ping timeout: 260 seconds","date":"2015-09-18T05:55:11.952Z","type":"quit"}
{"nick":"farnsworth","date":"2015-09-18T06:20:13.374Z","type":"join"}
{"nick":"cubert","date":"2015-09-18T06:20:13.572Z","type":"join"}
{"nick":"cubert","reason":"Remote host closed the connection","date":"2015-09-18T06:20:49.389Z","type":"quit"}
{"nick":"farnsworth","reason":"Remote host closed the connection","date":"2015-09-18T06:20:49.626Z","type":"quit"}
{"nick":"farnsworth","date":"2015-09-18T06:21:26.346Z","type":"join"}
{"nick":"cubert","date":"2015-09-18T06:21:26.544Z","type":"join"}
{"nick":"stagas","date":"2015-09-18T07:35:02.957Z","type":"join"}
{"nick":"peutetre","date":"2015-09-18T07:35:28.600Z","type":"join"}
{"nick":"mrgodfrey","reason":"Ping timeout: 240 seconds","date":"2015-09-18T07:37:31.612Z","type":"quit"}
{"nick":"dlmanning","reason":"Ping timeout: 244 seconds","date":"2015-09-18T07:37:58.304Z","type":"quit"}
{"nick":"domanic","date":"2015-09-18T07:39:30.968Z","type":"join"}
{"nick":"dlmanning","date":"2015-09-18T07:40:55.190Z","type":"join"}
{"nick":"peutetre","reason":"Quit: ...","date":"2015-09-18T07:47:38.418Z","type":"quit"}
{"nick":"domanic","message":"ahdinosaur, hey","date":"2015-09-18T07:59:50.978Z","type":"message"}
{"nick":"peutetre","date":"2015-09-18T08:02:25.148Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 246 seconds","date":"2015-09-18T08:17:29.992Z","type":"quit"}
{"nick":"stagas","date":"2015-09-18T08:21:54.239Z","type":"join"}
{"nick":"contraha_","reason":"Quit: Sleeping","date":"2015-09-18T08:26:47.155Z","type":"quit"}
{"nick":"mrgodfrey","date":"2015-09-18T08:30:36.935Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 240 seconds","date":"2015-09-18T08:45:20.097Z","type":"quit"}
{"nick":"stagas","date":"2015-09-18T09:04:34.278Z","type":"join"}
{"nick":"mrgodfrey","reason":"Ping timeout: 246 seconds","date":"2015-09-18T09:23:38.917Z","type":"quit"}
{"nick":"stagas","reason":"Read error: No route to host","date":"2015-09-18T09:48:09.499Z","type":"quit"}
{"nick":"stagas","date":"2015-09-18T09:48:20.547Z","type":"join"}
{"nick":"mrgodfrey","date":"2015-09-18T10:12:34.989Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 265 seconds","date":"2015-09-18T10:13:09.444Z","type":"quit"}
{"nick":"domanic","reason":"Ping timeout: 246 seconds","date":"2015-09-18T10:13:09.832Z","type":"quit"}
{"nick":"peutetre","reason":"Quit: ...","date":"2015-09-18T10:23:40.667Z","type":"quit"}
{"nick":"stagas","date":"2015-09-18T10:37:56.374Z","type":"join"}
{"nick":"peutetre","date":"2015-09-18T10:45:40.543Z","type":"join"}
{"nick":"mrgodfrey","reason":"Ping timeout: 260 seconds","date":"2015-09-18T10:49:39.969Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 250 seconds","date":"2015-09-18T11:04:30.305Z","type":"quit"}
{"nick":"peutetre","reason":"Quit: ...","date":"2015-09-18T11:08:50.657Z","type":"quit"}
{"nick":"tixz","message":"Does anyone know of an algorithm to divide a set of N geometric points (x, y), into groups of varying size? Preferably the groups should be geometrically as close together as possible?","date":"2015-09-18T11:22:36.609Z","type":"message"}
{"nick":"peutetre","date":"2015-09-18T11:23:39.418Z","type":"join"}
{"nick":"peutetre","reason":"Quit: ...","date":"2015-09-18T11:50:36.615Z","type":"quit"}
{"nick":"peutetre","date":"2015-09-18T11:54:06.285Z","type":"join"}
{"nick":"contrahax","date":"2015-09-18T12:36:42.619Z","type":"join"}
{"nick":"trodrigues","date":"2015-09-18T12:43:54.638Z","type":"part"}
{"nick":"peutetre","reason":"Quit: ...","date":"2015-09-18T12:58:54.559Z","type":"quit"}
{"nick":"fotoverite","date":"2015-09-18T12:59:59.449Z","type":"join"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2015-09-18T13:16:43.570Z","type":"quit"}
{"nick":"mafintosh","message":"tixz: i'm sure mikolalysenko know","date":"2015-09-18T13:37:17.309Z","type":"message"}
{"nick":"mikolalysenko","message":"tixz: lots of ways to do that, look up clustering","date":"2015-09-18T13:37:44.224Z","type":"message"}
{"nick":"mikolalysenko","message":"kmeans is the most common solution","date":"2015-09-18T13:37:51.236Z","type":"message"}
{"nick":"mikolalysenko","message":"https://en.wikipedia.org/wiki/K-means_clustering","date":"2015-09-18T13:38:00.912Z","type":"message"}
{"nick":"tixz","message":"I'm currently trying to do it with a voronoi tesselation","date":"2015-09-18T13:38:07.156Z","type":"message"}
{"nick":"mikolalysenko","message":"hold on, brb need to take dog out","date":"2015-09-18T13:38:33.986Z","type":"message"}
{"nick":"tixz","message":"My issue with k-means is that I have no control over how many points go in each cluster, unless I do a custom implementation","date":"2015-09-18T13:38:34.529Z","type":"message"}
{"nick":"tixz","message":"mikolalysenko:  I was thinking it is pretty similar to knn, however I have to remove points that have already been assigned to a group, and I'm not sure of the consequences when I do that","date":"2015-09-18T13:39:40.955Z","type":"message"}
{"nick":"tixz","message":"Like, will I get some groups where points will be really far apart because they just didn't get chosen for one of the initial groups","date":"2015-09-18T13:40:13.118Z","type":"message"}
{"nick":"simcop2387","reason":"Ping timeout: 240 seconds","date":"2015-09-18T13:46:31.629Z","type":"quit"}
{"nick":"simcop2387","date":"2015-09-18T13:52:20.688Z","type":"join"}
{"nick":"mikolalysenko","message":"tixz: ok, back","date":"2015-09-18T13:55:24.776Z","type":"message"}
{"nick":"mikolalysenko","message":"ok, so you want k-means, but with the number of points per cluster bounded?","date":"2015-09-18T13:55:47.633Z","type":"message"}
{"nick":"tixz","message":"mikolalysenko: Yeah pretty much","date":"2015-09-18T13:56:34.770Z","type":"message"}
{"nick":"tixz","message":"I want the clusters to look nice","date":"2015-09-18T13:56:50.911Z","type":"message"}
{"nick":"tixz","message":"I can show you what it's for:","date":"2015-09-18T13:56:56.866Z","type":"message"}
{"nick":"tixz","message":"http://bl.ocks.org/emilbayes/82b321dd788bc09d254b","date":"2015-09-18T13:57:12.792Z","type":"message"}
{"nick":"tixz","message":"I generate the points using poisson disc sampling, but all the dots represent refugees. I want to colour the points in distinct colours, but in groups so it perceptually looks \"nice\"","date":"2015-09-18T13:58:24.815Z","type":"message"}
{"nick":"tixz","message":"Any pointers as to what to do?","date":"2015-09-18T13:59:17.070Z","type":"message"}
{"nick":"mikolalysenko","message":"what if you just cut it into a grid?","date":"2015-09-18T13:59:26.982Z","type":"message"}
{"nick":"mikolalysenko","message":"or do something like this:","date":"2015-09-18T13:59:34.613Z","type":"message"}
{"nick":"mikolalysenko","message":"first split into slabs along x, with at most say sqrt(n/k) points per slab","date":"2015-09-18T14:00:06.769Z","type":"message"}
{"nick":"mikolalysenko","message":"then within each slab, split along y doing the same thing so you have n/k points per bucket","date":"2015-09-18T14:00:23.866Z","type":"message"}
{"nick":"tixz","message":"Yeah okay, show throw it into something like a quad tree or range tree and progressively make the ranges smaller until I get groups of the sizes I want?","date":"2015-09-18T14:01:30.502Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, or you could just do it in one shot","date":"2015-09-18T14:01:44.785Z","type":"message"}
{"nick":"mikolalysenko","message":"but a quadtree might be ok too","date":"2015-09-18T14:01:49.779Z","type":"message"}
{"nick":"tixz","message":"Only \"issue\" is that I visually will get very \"square\" colourings","date":"2015-09-18T14:01:56.577Z","type":"message"}
{"nick":"tixz","message":"would be nice with something more bloby, if possible","date":"2015-09-18T14:02:07.695Z","type":"message"}
{"nick":"mikolalysenko","message":"well, instead of a quadtree, you could use a kdtree","date":"2015-09-18T14:02:08.211Z","type":"message"}
{"nick":"tixz","message":"Know I'm streching it a bit here :po","date":"2015-09-18T14:02:20.905Z","type":"message"}
{"nick":"mikolalysenko","message":"or maybe a fair-split tree","date":"2015-09-18T14:02:24.058Z","type":"message"}
{"nick":"mikolalysenko","message":"but here is the general idea","date":"2015-09-18T14:02:28.288Z","type":"message"}
{"nick":"tixz","message":"Yeah, was thinking of kdtree","date":"2015-09-18T14:02:32.893Z","type":"message"}
{"nick":"mikolalysenko","message":"stick all the points into some tree, quadtree or fair split tree are probably good candidates","date":"2015-09-18T14:02:42.271Z","type":"message"}
{"nick":"mikolalysenko","message":"then for each subtree with at most n/k points, make that a cluster","date":"2015-09-18T14:02:58.473Z","type":"message"}
{"nick":"mikolalysenko","message":"fair split tree might be a good option I think","date":"2015-09-18T14:03:25.112Z","type":"message"}
{"nick":"mikolalysenko","message":"or you could modify it a bit","date":"2015-09-18T14:03:32.439Z","type":"message"}
{"nick":"tixz","message":"Yeah, do you know of any implementations that will thll me the size of the subtree? Was looking at your static-kdtree :p","date":"2015-09-18T14:03:38.577Z","type":"message"}
{"nick":"tixz","message":"Otherwise I'll just have to go at it myself","date":"2015-09-18T14:03:51.859Z","type":"message"}
{"nick":"mikolalysenko","message":"size of the subtree is easy to compute in linear time","date":"2015-09-18T14:03:53.424Z","type":"message"}
{"nick":"mikolalysenko","message":"you just do that as a preprocessing step","date":"2015-09-18T14:04:02.043Z","type":"message"}
{"nick":"mikolalysenko","message":"working bottom up, you can store the size for each node","date":"2015-09-18T14:04:26.004Z","type":"message"}
{"nick":"tixz","message":"Preprocessing was considered, but the user will be able to decide the sizes of clusters dynamically","date":"2015-09-18T14:04:40.814Z","type":"message"}
{"nick":"tixz","message":"arr okay","date":"2015-09-18T14:04:42.920Z","type":"message"}
{"nick":"tixz","message":"yeah, was thinking that too, just being heaps lazy here","date":"2015-09-18T14:04:53.722Z","type":"message"}
{"nick":"mikolalysenko","message":"it is a linear time step","date":"2015-09-18T14:05:01.045Z","type":"message"}
{"nick":"mikolalysenko","message":"so preprocessing wise it is no worse than just drawing all the points anyway","date":"2015-09-18T14:05:11.717Z","type":"message"}
{"nick":"mikolalysenko","message":"and if you are visualizing this, that cost should be no big deal","date":"2015-09-18T14:05:23.498Z","type":"message"}
{"nick":"tixz","message":"Alright, I'll try building this. But as far as I know, won't something like a kdtree get very unbalanced when I insert points at random?","date":"2015-09-18T14:06:21.466Z","type":"message"}
{"nick":"mikolalysenko","message":"don't build it like that","date":"2015-09-18T14:06:33.597Z","type":"message"}
{"nick":"mikolalysenko","message":"build it the normal way by sorting","date":"2015-09-18T14:06:43.482Z","type":"message"}
{"nick":"tixz","message":"Okay, so generate all the points, insert them by order into an array and then add them to a tree of some sort?","date":"2015-09-18T14:07:20.030Z","type":"message"}
{"nick":"mikolalysenko","message":"skip the insert step and just build the tree from the points","date":"2015-09-18T14:07:57.634Z","type":"message"}
{"nick":"mikolalysenko","message":"think of the tree construction as a divide and conquer algorithm","date":"2015-09-18T14:08:07.537Z","type":"message"}
{"nick":"mikolalysenko","message":"like merge sort","date":"2015-09-18T14:08:09.450Z","type":"message"}
{"nick":"mikolalysenko","message":"1. generate points, 2. build tree, 3. extract clusters from tree","date":"2015-09-18T14:08:31.159Z","type":"message"}
{"nick":"tixz","message":"Hmm okay, maybe i'm lacking imagination, but the points are generated by a disc sampler that will choose the \"best\" available spot, so they might be all over the place","date":"2015-09-18T14:09:06.089Z","type":"message"}
{"nick":"mikolalysenko","message":"sure","date":"2015-09-18T14:09:14.027Z","type":"message"}
{"nick":"tixz","message":"Maybe I should just try it out and see what happens","date":"2015-09-18T14:09:34.589Z","type":"message"}
{"nick":"tixz","message":"thanks for the advice!","date":"2015-09-18T14:09:39.516Z","type":"message"}
{"nick":"mikolalysenko","message":"so your tree construction looks something like this: 1. partition points into 2 groups which are separated by some halfspace, 2. for each group recursively build a tree","date":"2015-09-18T14:09:53.592Z","type":"message"}
{"nick":"mikolalysenko","message":"so maybe we can make this more interesting","date":"2015-09-18T14:10:26.453Z","type":"message"}
{"nick":"mikolalysenko","message":"what if instead of just splitting the points into k equally sized groups, we want those groups to form voronoi clusters","date":"2015-09-18T14:10:49.220Z","type":"message"}
{"nick":"mikolalysenko","message":"one way to do that is to ensure that each of these partitions is a circle","date":"2015-09-18T14:11:21.579Z","type":"message"}
{"nick":"mikolalysenko","message":"and then for each tree, you could take the center point of its bounding circle as the voronoi site generating its cluster","date":"2015-09-18T14:12:40.394Z","type":"message"}
{"nick":"tixz","message":"I think I'm a bit lost now, I'll just have to take a minute to read all this through again","date":"2015-09-18T14:13:34.243Z","type":"message"}
{"nick":"mikolalysenko","message":"I guess part of the problem here is that this is a bit underconstrained","date":"2015-09-18T14:19:35.867Z","type":"message"}
{"nick":"mikolalysenko","message":"generating k equal sized partitions is trivial by itself:  just sort and then split by quantiles","date":"2015-09-18T14:19:52.613Z","type":"message"}
{"nick":"mikolalysenko","message":"but that gives you a bunch of slabs which is maybe not what you want","date":"2015-09-18T14:20:05.681Z","type":"message"}
{"nick":"mikolalysenko","message":"so the question then is what properties should a \"nicer\" partition have?","date":"2015-09-18T14:20:24.106Z","type":"message"}
{"nick":"tixz","message":"I guess a nicer partitioning is each group having a central point and members of the group being as close to this as possible, while the groups partition the available data completely","date":"2015-09-18T14:21:40.148Z","type":"message"}
{"nick":"tixz","message":"mikolalysenko: Does what I want even make sense?","date":"2015-09-18T14:23:28.492Z","type":"message"}
{"nick":"tixz","message":"That's why I started working in the knn direction, but then it hit me that I might end up with clusters that were just comprise of \"leftover\" points","date":"2015-09-18T14:24:10.389Z","type":"message"}
{"nick":"mikolalysenko","message":"tixz: ok, so here is maybe another way to do this","date":"2015-09-18T14:31:04.445Z","type":"message"}
{"nick":"mikolalysenko","message":"tixz: your input points are from a poisson distribution and so they are packed pretty densely and uniformly","date":"2015-09-18T14:31:24.611Z","type":"message"}
{"nick":"tixz","message":"mikolalysenko: Yep","date":"2015-09-18T14:31:39.522Z","type":"message"}
{"nick":"mikolalysenko","message":"so what you could do is just overlay a triangle grid and then within each cell of that grid select a random point","date":"2015-09-18T14:31:40.270Z","type":"message"}
{"nick":"mikolalysenko","message":"from those, you then build a voronoi diagram","date":"2015-09-18T14:31:52.005Z","type":"message"}
{"nick":"mikolalysenko","message":"and those are your clusters","date":"2015-09-18T14:31:55.965Z","type":"message"}
{"nick":"mikolalysenko","message":"it isn't exactly going to be equal, but it should be pretty close","date":"2015-09-18T14:32:06.088Z","type":"message"}
{"nick":"tixz","message":"Arr yeah","date":"2015-09-18T14:32:06.364Z","type":"message"}
{"nick":"tixz","message":"close is good enough","date":"2015-09-18T14:32:20.442Z","type":"message"}
{"nick":"mikolalysenko","message":"that is really cheap and easy","date":"2015-09-18T14:32:27.312Z","type":"message"}
{"nick":"tixz","message":"Thank you, I'll try it out :)","date":"2015-09-18T14:33:01.498Z","type":"message"}
{"nick":"mikolalysenko","message":"you can use barycentric coordinates to get those triangle indices too","date":"2015-09-18T14:33:29.794Z","type":"message"}
{"nick":"mikolalysenko","message":"basically you can just round each point to the closest point on the triangle lattice","date":"2015-09-18T14:34:03.631Z","type":"message"}
{"nick":"mikolalysenko","message":"or: (x,y) ->  (Math.round(x), Math.round(x*1/2 + y*Math.sqrt(3)/2)","date":"2015-09-18T14:34:59.757Z","type":"message"}
{"nick":"mikolalysenko","message":"so use that second tuple as the key for each bucket","date":"2015-09-18T14:35:08.939Z","type":"message"}
{"nick":"mikolalysenko","message":"then in each bucket draw a random point","date":"2015-09-18T14:35:13.914Z","type":"message"}
{"nick":"mikolalysenko","message":"use those for generating voronoi sites","date":"2015-09-18T14:35:22.414Z","type":"message"}
{"nick":"tixz","message":"Arr yeah","date":"2015-09-18T14:35:30.062Z","type":"message"}
{"nick":"mikolalysenko","message":"rescale x and y before hashing to adjust the fineness of the triangulation","date":"2015-09-18T14:36:42.258Z","type":"message"}
{"nick":"pfraze","date":"2015-09-18T15:20:09.966Z","type":"join"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2015-09-18T15:39:26.199Z","type":"quit"}
{"nick":"peutetre","date":"2015-09-18T15:39:38.599Z","type":"join"}
{"nick":"peutetre","reason":"Quit: ...","date":"2015-09-18T15:50:36.247Z","type":"quit"}
{"nick":"peutetre","date":"2015-09-18T15:52:26.769Z","type":"join"}
{"nick":"shama","date":"2015-09-18T16:25:20.139Z","type":"join"}
{"nick":"ogd","message":"mikolalysenko: im at an event with basically all the ndarray implementers in python, julia and R and was curious if you have any specific links you want me to share on your behalf (i have a lightning talk tomorrow but can do a shout out at the beginning)","date":"2015-09-18T16:34:57.463Z","type":"message"}
{"nick":"mikolalysenko","message":"what sort of stuff do you want?","date":"2015-09-18T16:50:13.336Z","type":"message"}
{"nick":"mikolalysenko","message":"ogd: I could give you some links from some blog posts I wrote long ago","date":"2015-09-18T16:50:26.259Z","type":"message"}
{"nick":"mikolalysenko","message":"this might help: http://scijs.net/packages/","date":"2015-09-18T16:51:00.587Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: i think most people here arent aware of the ndarray js ecosystem so i was just wondering the best links to share with a room full of implementers","date":"2015-09-18T16:51:17.895Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: ah yea its part of scijs now, cool","date":"2015-09-18T16:51:23.858Z","type":"message"}
{"nick":"mikolalysenko","message":"this might help: http://0fps.net/2013/05/28/cache-oblivious-array-operations/","date":"2015-09-18T16:51:26.826Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, trying to roll it all into scijs","date":"2015-09-18T16:51:31.496Z","type":"message"}
{"nick":"mikolalysenko","message":"but have been stretched thin lately so haven't gotten as much done on that as I would like","date":"2015-09-18T16:51:47.964Z","type":"message"}
{"nick":"mikolalysenko","message":"I want to try getting some visualization tools done","date":"2015-09-18T16:52:01.755Z","type":"message"}
{"nick":"mikolalysenko","message":"since that is sort of blocking for getting demos, etc. working on scijs","date":"2015-09-18T16:52:12.917Z","type":"message"}
{"nick":"mikolalysenko","message":"here is a prototype for the 2d datavis stuff: http://gl-vis.github.io/gl-plot2d/scatter-demo.html","date":"2015-09-18T16:52:34.044Z","type":"message"}
{"nick":"ogd","message":"oh yea hehe i saw that one, pretty awesome","date":"2015-09-18T16:53:05.893Z","type":"message"}
{"nick":"mikolalysenko","message":"my current thinking is that in order for all this stuff to really make sense in js, you need to have some good visualization tools for it to output too","date":"2015-09-18T16:53:10.866Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: ah yea since thats what everyone uses js for from other languages","date":"2015-09-18T16:53:38.545Z","type":"message"}
{"nick":"mikolalysenko","message":"some general themes for scijs:  1. radical modularity, 2. embrace runtime code generation, 3. open contributorship","date":"2015-09-18T16:53:41.633Z","type":"message"}
{"nick":"ogd","message":"cool","date":"2015-09-18T16:53:51.502Z","type":"message"}
{"nick":"mikolalysenko","message":"modularity means you get reproducibility for free","date":"2015-09-18T16:54:12.833Z","type":"message"}
{"nick":"mikolalysenko","message":"since that is a consequence of having a good package management solution","date":"2015-09-18T16:54:25.299Z","type":"message"}
{"nick":"mikolalysenko","message":"there are also other approaches out there too","date":"2015-09-18T16:54:39.222Z","type":"message"}
{"nick":"mikolalysenko","message":"krgyte's stuff is worth taking a look at","date":"2015-09-18T16:54:49.270Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: got a link to o/ ?","date":"2015-09-18T16:55:08.298Z","type":"message"}
{"nick":"mikolalysenko","message":"https://github.com/compute-io/compute.io","date":"2015-09-18T16:55:19.685Z","type":"message"}
{"nick":"mikolalysenko","message":"I'm not as huge a fan of this super-pack type approach, but he is doing a lot of stuff","date":"2015-09-18T16:55:40.870Z","type":"message"}
{"nick":"mikolalysenko","message":"my sort of dream though is to not have a single library or even org that has all the scientific computing stuff","date":"2015-09-18T16:57:26.107Z","type":"message"}
{"nick":"ogd","message":"wow yea megarepo","date":"2015-09-18T16:57:28.298Z","type":"message"}
{"nick":"mikolalysenko","message":"but rather to just have all the modules live on npm as separate things","date":"2015-09-18T16:57:40.505Z","type":"message"}
{"nick":"mikolalysenko","message":"still there is some boot strapping though that has to happen","date":"2015-09-18T16:57:52.670Z","type":"message"}
{"nick":"mikolalysenko","message":"and some of this becomes organizational, there are lots of foundational things that take time to write","date":"2015-09-18T16:58:09.170Z","type":"message"}
{"nick":"ogd","message":"kgryte has a lot of .io github organizations lol","date":"2015-09-18T16:58:21.343Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: right... its an ecosystem, not a top-down organization","date":"2015-09-18T16:58:39.361Z","type":"message"}
{"nick":"mikolalysenko","message":"he also has is own ndarray-compatible thing, let me see if I can find a link...","date":"2015-09-18T16:59:45.932Z","type":"message"}
{"nick":"mikolalysenko","message":"https://github.com/dstructs/ndarray","date":"2015-09-18T17:00:01.856Z","type":"message"}
{"nick":"mikolalysenko","message":"at a high level though, I think that if you can do something without using ndarrays it is usually better","date":"2015-09-18T17:01:08.100Z","type":"message"}
{"nick":"mikolalysenko","message":"it is almost always a good idea to avoid using custom data types if possible","date":"2015-09-18T17:01:19.174Z","type":"message"}
{"nick":"mikolalysenko","message":"still there are places where ndarrays make sense and you should use them","date":"2015-09-18T17:01:30.370Z","type":"message"}
{"nick":"mikolalysenko","message":"in the pursuit of modularity, the worst thing to do is create complex frameworks","date":"2015-09-18T17:02:12.729Z","type":"message"}
{"nick":"mikolalysenko","message":"a slightly less bad option is to create objects with methods","date":"2015-09-18T17:02:27.070Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: is that from a perf standpoint? what about from a maintenance/compatibility standpoint e.g. you dont want to rewrite your analysis code when you hit perf issues","date":"2015-09-18T17:02:28.139Z","type":"message"}
{"nick":"mikolalysenko","message":"no","date":"2015-09-18T17:02:40.495Z","type":"message"}
{"nick":"mikolalysenko","message":"the issue is really interoperability","date":"2015-09-18T17:02:50.024Z","type":"message"}
{"nick":"mikolalysenko","message":"you would want everything to live as independent modules","date":"2015-09-18T17:02:59.382Z","type":"message"}
{"nick":"mikolalysenko","message":"so things like objects and interfaces are problematic","date":"2015-09-18T17:03:06.488Z","type":"message"}
{"nick":"ogd","message":"ah yea, so the event im at now is actually about ndarray interop lol","date":"2015-09-18T17:03:21.480Z","type":"message"}
{"nick":"mikolalysenko","message":"the best thing is to just have procedures","date":"2015-09-18T17:03:23.692Z","type":"message"}
{"nick":"mikolalysenko","message":"ok","date":"2015-09-18T17:03:28.444Z","type":"message"}
{"nick":"mikolalysenko","message":"so here is my thesis about ndarrays","date":"2015-09-18T17:03:32.986Z","type":"message"}
{"nick":"ogd","message":"someone is talking about trying to duck type ndarrays in python","date":"2015-09-18T17:03:38.360Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah, it makes sense","date":"2015-09-18T17:03:45.871Z","type":"message"}
{"nick":"mikolalysenko","message":"you just need shape, stride, offset and a 1d data store","date":"2015-09-18T17:03:56.296Z","type":"message"}
{"nick":"mikolalysenko","message":"for classic ndarrays","date":"2015-09-18T17:04:02.436Z","type":"message"}
{"nick":"mikolalysenko","message":"a perspective that makes a lot of sense is that they are just affine maps from nd grids onto 1d arrays","date":"2015-09-18T17:04:27.542Z","type":"message"}
{"nick":"mikolalysenko","message":"that is sufficient to cover pretty much all uses you see in numerical computing","date":"2015-09-18T17:04:39.812Z","type":"message"}
{"nick":"mikolalysenko","message":"it also works for sparse data too:","date":"2015-09-18T17:04:44.936Z","type":"message"}
{"nick":"mikolalysenko","message":"a csr matrix is just a run length encoded array","date":"2015-09-18T17:04:55.863Z","type":"message"}
{"nick":"mikolalysenko","message":"same for csc and all other commonly used sparse formats","date":"2015-09-18T17:05:05.019Z","type":"message"}
{"nick":"mikolalysenko","message":"basically sparsity can be handled by replacing your 1d data store with something fancier","date":"2015-09-18T17:05:27.774Z","type":"message"}
{"nick":"mikolalysenko","message":"for example a hash map, or an rle array","date":"2015-09-18T17:05:52.537Z","type":"message"}
{"nick":"mikolalysenko","message":"though one thing I have been thinking about more and more lately is maybe moving away from ndarrays altogether and using lower level interfaces","date":"2015-09-18T17:12:35.577Z","type":"message"}
{"nick":"mikolalysenko","message":"since it is easier to implement, and generally not a big deal to wrap it up later on in something high level","date":"2015-09-18T17:12:57.180Z","type":"message"}
{"nick":"mikolalysenko","message":"for example, I think for some operations like matrix-vector multiplication it might be better to just take raw typedarrays as input","date":"2015-09-18T17:13:24.075Z","type":"message"}
{"nick":"mikolalysenko","message":"also, the coming of simd to js will change how things work substantially","date":"2015-09-18T17:14:06.929Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: did you see this http://lars-t-hansen.github.io/ecmascript_sharedmem/shmem.html","date":"2015-09-18T17:14:17.480Z","type":"message"}
{"nick":"mikolalysenko","message":"yeah","date":"2015-09-18T17:14:21.811Z","type":"message"}
{"nick":"mikolalysenko","message":"the new changes will require some old practices to be reevaluated","date":"2015-09-18T17:14:33.114Z","type":"message"}
{"nick":"mikolalysenko","message":"and a lot of new opportunities will open up","date":"2015-09-18T17:14:40.754Z","type":"message"}
{"nick":"mikolalysenko","message":"taking advantage of shared memory, simd and value types would require some really different architectural approaches","date":"2015-09-18T17:15:32.491Z","type":"message"}
{"nick":"mikolalysenko","message":"but it doesn't make sense to do it yet, at least until things get more solid","date":"2015-09-18T17:16:24.056Z","type":"message"}
{"nick":"mikolalysenko","message":"and the stuff that is already there right now is somewhat useful","date":"2015-09-18T17:16:33.026Z","type":"message"}
{"nick":"mikolalysenko","message":"also, the biggest problem right now with doing all this stuff in js is the heap size limit","date":"2015-09-18T17:16:49.395Z","type":"message"}
{"nick":"mikolalysenko","message":"you don't get enough address space in js to do some of the really big problems","date":"2015-09-18T17:17:01.098Z","type":"message"}
{"nick":"ogd","message":"ah yea","date":"2015-09-18T17:17:26.446Z","type":"message"}
{"nick":"ogd","message":"https://github.com/libdynd presentation is on now","date":"2015-09-18T17:19:22.672Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: also i was curious if there were perf benefits of value types as it relates to things like numeric computing or if they were just a convenience thing","date":"2015-09-18T17:21:33.692Z","type":"message"}
{"nick":"mikolalysenko","message":"allocating ndarrays is a big cost in js","date":"2015-09-18T17:21:49.005Z","type":"message"}
{"nick":"mikolalysenko","message":"it is sort of a dumb thing that this is even a problem","date":"2015-09-18T17:21:57.256Z","type":"message"}
{"nick":"mikolalysenko","message":"but you pay a higher overhead for accessing random parts of an ndarray in js than you would in c++","date":"2015-09-18T17:22:10.808Z","type":"message"}
{"nick":"mikolalysenko","message":"because you have to dereference the object pointer -> dereference stride pointer -> do look up in typedarray etc.","date":"2015-09-18T17:22:33.737Z","type":"message"}
{"nick":"mikolalysenko","message":"so there are multiple levels of indirection to just get the index of an element in an array, and multiple type/bounds checks","date":"2015-09-18T17:22:55.371Z","type":"message"}
{"nick":"mikolalysenko","message":"this is all dumb, a smart enough programming language could optimize it away","date":"2015-09-18T17:23:06.274Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: ah so maybe if it was builtin to the language it would fix that?","date":"2015-09-18T17:23:07.337Z","type":"message"}
{"nick":"mikolalysenko","message":"sure","date":"2015-09-18T17:23:11.195Z","type":"message"}
{"nick":"mikolalysenko","message":"or if we had value types we could implement it in the language","date":"2015-09-18T17:23:19.021Z","type":"message"}
{"nick":"mikolalysenko","message":"in c++ for example, it would be no problem","date":"2015-09-18T17:23:24.406Z","type":"message"}
{"nick":"mikolalysenko","message":"in c++ you could flatten all the ndarray data into a struct which you can pass around in the register file","date":"2015-09-18T17:24:09.072Z","type":"message"}
{"nick":"Kraln","date":"2015-09-18T17:24:14.362Z","type":"join"}
{"nick":"mikolalysenko","message":"so your array look up is fast and cheap","date":"2015-09-18T17:24:18.865Z","type":"message"}
{"nick":"mikolalysenko","message":"in js though you have all these other checks and layers of indirection going on","date":"2015-09-18T17:24:32.104Z","type":"message"}
{"nick":"mikolalysenko","message":"so doing things like ndarray.set/.get is much slower than it should be","date":"2015-09-18T17:24:44.502Z","type":"message"}
{"nick":"mikolalysenko","message":"you can avoid this overhead using cwise, but it only works for bulk operations","date":"2015-09-18T17:25:00.317Z","type":"message"}
{"nick":"mikolalysenko","message":"and for small things cwise is not great perfwise since there is overhead in the dispatch","date":"2015-09-18T17:25:23.246Z","type":"message"}
{"nick":"ogd","message":"ahh i see","date":"2015-09-18T17:25:31.528Z","type":"message"}
{"nick":"mikolalysenko","message":"with value types, you could get pretty much optimal performance","date":"2015-09-18T17:26:05.362Z","type":"message"}
{"nick":"mikolalysenko","message":"also it isn't even possible for the interpreter to optimize this stuff","date":"2015-09-18T17:26:33.361Z","type":"message"}
{"nick":"mikolalysenko","message":"since there is nothing in js that stops you from swapping out the stride array reference for example","date":"2015-09-18T17:26:48.800Z","type":"message"}
{"nick":"ogd","message":"hah","date":"2015-09-18T17:27:15.940Z","type":"message"}
{"nick":"mikolalysenko","message":"and if you do things like chaining array operations, for example, .hi.lo, etc., then you have to allocate ndarrays at each intermediate step","date":"2015-09-18T17:27:27.850Z","type":"message"}
{"nick":"mikolalysenko","message":"which creates gc pressure and kills performance","date":"2015-09-18T17:27:46.234Z","type":"message"}
{"nick":"kumavis","message":"go-go-gadget webasm?","date":"2015-09-18T17:28:07.617Z","type":"message"}
{"nick":"mikolalysenko","message":"sure, if you like writing in c++","date":"2015-09-18T17:28:18.274Z","type":"message"}
{"nick":"mikolalysenko","message":"the real solution is value types","date":"2015-09-18T17:28:27.911Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: so the benefit of value types is they avoid allocating extra js objects?","date":"2015-09-18T17:29:07.635Z","type":"message"}
{"nick":"mikolalysenko","message":"yes","date":"2015-09-18T17:29:11.288Z","type":"message"}
{"nick":"mikolalysenko","message":"and layers of indirection/validation","date":"2015-09-18T17:29:16.013Z","type":"message"}
{"nick":"ogd","message":"gotcha","date":"2015-09-18T17:29:20.914Z","type":"message"}
{"nick":"mikolalysenko","message":"also they can be allocated contiguously","date":"2015-09-18T17:29:26.478Z","type":"message"}
{"nick":"mikolalysenko","message":"so for compound objects, arrays of value types would be much much faster","date":"2015-09-18T17:29:35.586Z","type":"message"}
{"nick":"ogd","message":"ah really","date":"2015-09-18T17:29:40.720Z","type":"message"}
{"nick":"mikolalysenko","message":"scanning array of values is way way waaaay faster than scanning an array of objects","date":"2015-09-18T17:29:50.360Z","type":"message"}
{"nick":"mikolalysenko","message":"since the values are packed contiguously","date":"2015-09-18T17:30:00.281Z","type":"message"}
{"nick":"mikolalysenko","message":"if you read out a cache line of values, you can basically prefetch ahead","date":"2015-09-18T17:30:16.055Z","type":"message"}
{"nick":"mikolalysenko","message":"so say your block size for a cache line is B","date":"2015-09-18T17:30:26.494Z","type":"message"}
{"nick":"mikolalysenko","message":"if you scan an array of contiguous values, you do O(n/B) fetches","date":"2015-09-18T17:30:42.443Z","type":"message"}
{"nick":"mikolalysenko","message":"(in practice, might even be better with prefetching)","date":"2015-09-18T17:30:54.511Z","type":"message"}
{"nick":"ogd","message":"yea","date":"2015-09-18T17:30:58.154Z","type":"message"}
{"nick":"mikolalysenko","message":"if you have an array of objects, for each array entry you have to do an indirect look up on the object's pointer to get its data","date":"2015-09-18T17:31:12.012Z","type":"message"}
{"nick":"mikolalysenko","message":"so you do at least O(n) operations to read it","date":"2015-09-18T17:31:20.349Z","type":"message"}
{"nick":"mikolalysenko","message":"and you block the cpu when you are waiting for that fetch to complete","date":"2015-09-18T17:31:29.462Z","type":"message"}
{"nick":"mikolalysenko","message":"moreover, that factor of B is pretty huge on modern processors especially once you go out L3 cache","date":"2015-09-18T17:31:49.146Z","type":"message"}
{"nick":"mikolalysenko","message":"in fact it is so big that it completely dwarfs speedups due to parallelism","date":"2015-09-18T17:32:05.589Z","type":"message"}
{"nick":"mikolalysenko","message":"say you have an 8 core machine","date":"2015-09-18T17:32:10.029Z","type":"message"}
{"nick":"mikolalysenko","message":"then the best speed up you get is a factor of 8","date":"2015-09-18T17:32:16.629Z","type":"message"}
{"nick":"mikolalysenko","message":"but B is usually on the order of 1000","date":"2015-09-18T17:32:26.422Z","type":"message"}
{"nick":"ogd","message":"ah wow","date":"2015-09-18T17:32:36.489Z","type":"message"}
{"nick":"mikolalysenko","message":"if you optimize cache performance, it is like the speedup you would get of running on a 1000 core machine","date":"2015-09-18T17:32:43.653Z","type":"message"}
{"nick":"mikolalysenko","message":"the economics of memory heirarchy are such that it is always the first and most important priority when optimizing","date":"2015-09-18T17:33:04.030Z","type":"message"}
{"nick":"mikolalysenko","message":"in fact, one perspective on threads is that they are really just a trick to optimize prefetching","date":"2015-09-18T17:33:21.954Z","type":"message"}
{"nick":"mikolalysenko","message":"even in numerical computing, very few tasks are compute limited","date":"2015-09-18T17:33:35.433Z","type":"message"}
{"nick":"mikolalysenko","message":"it is all memory bandwidth","date":"2015-09-18T17:33:38.750Z","type":"message"}
{"nick":"mikolalysenko","message":"so bringing it back to js: lack of value types is a real problem here","date":"2015-09-18T17:34:02.001Z","type":"message"}
{"nick":"mikolalysenko","message":"because we can't easily control the order of data in memory, we can't take advantage of these economies","date":"2015-09-18T17:34:18.825Z","type":"message"}
{"nick":"mikolalysenko","message":"now that said, it isn't totally true","date":"2015-09-18T17:34:31.818Z","type":"message"}
{"nick":"mikolalysenko","message":"you can kind of get these advantages by manually packing things into typedarrays and doing indexing yourself","date":"2015-09-18T17:34:46.886Z","type":"message"}
{"nick":"mikolalysenko","message":"but that is really tedious and error prone","date":"2015-09-18T17:34:53.796Z","type":"message"}
{"nick":"mikolalysenko","message":"if we had value types, you could do this stuff way more easily and create sane interfaces","date":"2015-09-18T17:35:16.347Z","type":"message"}
{"nick":"sethvincent","date":"2015-09-18T17:35:20.434Z","type":"join"}
{"nick":"mikolalysenko","message":"basically value types would be great for avoiding lots of small temporary allocations","date":"2015-09-18T17:37:35.997Z","type":"message"}
{"nick":"mikolalysenko","message":"so places where people would want to return multiple values, group tiny amounts of data, etc.","date":"2015-09-18T17:37:55.162Z","type":"message"}
{"nick":"ogd","message":"mikolalysenko: they made a gitter chat for it https://gitter.im/BIDS/ds4ds","date":"2015-09-18T17:58:39.950Z","type":"message"}
{"nick":"contrahax","date":"2015-09-18T18:00:02.951Z","type":"join"}
{"nick":"akenn","date":"2015-09-18T18:40:17.114Z","type":"join"}
{"nick":"phated","date":"2015-09-18T19:27:30.052Z","type":"join"}
{"nick":"peutetre","reason":"Quit: ...","date":"2015-09-18T19:34:22.408Z","type":"quit"}
{"nick":"reqshark","date":"2015-09-18T19:48:51.624Z","type":"join"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2015-09-18T19:55:01.524Z","type":"quit"}
{"nick":"domanic","date":"2015-09-18T20:06:36.619Z","type":"join"}
{"nick":"peutetre","date":"2015-09-18T20:31:49.893Z","type":"join"}
{"nick":"peutetre","reason":"Quit: ...","date":"2015-09-18T20:40:22.488Z","type":"quit"}
{"nick":"mrgodfrey","date":"2015-09-18T21:19:02.391Z","type":"join"}
{"nick":"contrahax","date":"2015-09-18T21:46:43.292Z","type":"join"}
{"nick":"pfraze","message":"(https://github.com/ssbc/docs#setup-up-a-pub)","date":"2015-09-18T21:59:37.059Z","type":"message"}
{"nick":"pfraze","message":"ag","date":"2015-09-18T21:59:40.408Z","type":"message"}
{"nick":"pfraze","message":"https://medium.com/@iefserge/runtime-js-javascript-library-os-823ada1cc3c","date":"2015-09-18T21:59:42.732Z","type":"message"}
{"nick":"pfraze","message":"\"We’ve got a very small and standalone web server OS image we can run locally or push somewhere into the cloud. It’s also immutable and does not require any installation nor configuration. The resulting server does not use disk and is completely stateless between reboots. And it boots in much less than a second under the KVM!\"","date":"2015-09-18T22:01:44.958Z","type":"message"}
{"nick":"akenn","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2015-09-18T22:03:40.599Z","type":"quit"}
{"nick":"pfraze","message":"domanic: ^","date":"2015-09-18T22:03:51.462Z","type":"message"}
{"nick":"akenn","date":"2015-09-18T22:03:53.967Z","type":"join"}
{"nick":"rhiaro","new_nick":"rhiaro__","date":"2015-09-18T22:07:06.914Z","type":"nick"}
{"nick":"domanic","message":"pfraze, yes this is awesome","date":"2015-09-18T22:08:24.067Z","type":"message"}
{"nick":"contrahax","reason":"Read error: Connection reset by peer","date":"2015-09-18T22:31:03.417Z","type":"quit"}
{"nick":"contrahax","date":"2015-09-18T22:31:26.942Z","type":"join"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2015-09-18T23:34:33.162Z","type":"quit"}
{"nick":"fotoverite","date":"2015-09-18T23:44:42.069Z","type":"join"}
