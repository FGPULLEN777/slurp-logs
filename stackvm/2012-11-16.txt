{"nick":"rowbit","message":"Hourly usage stats: [free: 50]","date":"2012-11-16T00:19:06.910Z","type":"message"}
{"nick":"dools","message":" /win 2","date":"2012-11-16T00:20:47.313Z","type":"message"}
{"nick":"dools","message":"urr","date":"2012-11-16T00:20:49.370Z","type":"message"}
{"nick":"dools","message":"BUSTED","date":"2012-11-16T00:20:53.146Z","type":"message"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-11-16T00:29:40.669Z","type":"nick"}
{"nick":"Raynos","message":"substack: \"Raynos: the emitter.on(id + ':offer', cb) stuff is a bit weird\" Any better suggestions","date":"2012-11-16T00:31:52.156Z","type":"message"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-11-16T00:35:19.452Z","type":"nick"}
{"nick":"_sorensen","reason":"Ping timeout: 245 seconds","date":"2012-11-16T00:57:30.172Z","type":"quit"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-11-16T00:57:35.203Z","type":"nick"}
{"nick":"ITpro","date":"2012-11-16T01:03:05.129Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2012-11-16T01:17:47.018Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 36]","date":"2012-11-16T01:19:06.745Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 2, free: 34]","date":"2012-11-16T02:19:06.765Z","type":"message"}
{"nick":"Raynos","message":"WHos in portland","date":"2012-11-16T02:23:06.618Z","type":"message"}
{"nick":"Raynos","message":"im probably going to be there for a bit","date":"2012-11-16T02:23:47.578Z","type":"message"}
{"nick":"chrisdickinson","action":"waves","date":"2012-11-16T02:26:22.698Z","type":"action"}
{"nick":"chrisdickinson","message":"Raynos: from when to when?","date":"2012-11-16T02:26:31.277Z","type":"message"}
{"nick":"Raynos","message":"3 hours","date":"2012-11-16T02:26:41.093Z","type":"message"}
{"nick":"Raynos","message":"at the airport","date":"2012-11-16T02:26:43.443Z","type":"message"}
{"nick":"Raynos","message":"once in the morning","date":"2012-11-16T02:26:46.556Z","type":"message"}
{"nick":"Raynos","message":"once in the afternoon","date":"2012-11-16T02:26:49.749Z","type":"message"}
{"nick":"Raynos","message":"2 hours in the morning, 3 in the afternoon","date":"2012-11-16T02:26:56.633Z","type":"message"}
{"nick":"chrisdickinson","message":"ah","date":"2012-11-16T02:26:59.804Z","type":"message"}
{"nick":"Raynos","message":":D","date":"2012-11-16T02:27:04.092Z","type":"message"}
{"nick":"Raynos","message":"when I say a bit I mean a bit","date":"2012-11-16T02:27:14.807Z","type":"message"}
{"nick":"chrisdickinson","message":"haha","date":"2012-11-16T02:27:17.864Z","type":"message"}
{"nick":"Raynos","message":"prob the 24th","date":"2012-11-16T02:27:34.287Z","type":"message"}
{"nick":"Raynos","message":"hacking at the airport fun times.","date":"2012-11-16T02:27:44.724Z","type":"message"}
{"nick":"chrisdickinson","message":"well, when you're in the air wave at the ant that looks like he's programming javascript, that's probably me","date":"2012-11-16T02:27:50.979Z","type":"message"}
{"nick":"Raynos","message":":D","date":"2012-11-16T02:28:04.144Z","type":"message"}
{"nick":"Raynos","message":"btw","date":"2012-11-16T02:28:14.124Z","type":"message"}
{"nick":"Raynos","message":"we should collab on some modules","date":"2012-11-16T02:28:19.166Z","type":"message"}
{"nick":"chrisdickinson","message":"yes","date":"2012-11-16T02:28:27.694Z","type":"message"}
{"nick":"chrisdickinson","message":"agreed.","date":"2012-11-16T02:28:58.586Z","type":"message"}
{"nick":"Raynos","message":"we should","date":"2012-11-16T02:28:59.622Z","type":"message"}
{"nick":"Raynos","message":"build the best MVC framework ever","date":"2012-11-16T02:29:04.142Z","type":"message"}
{"nick":"chrisdickinson","message":"haha, comprised of a million modules.","date":"2012-11-16T02:29:26.085Z","type":"message"}
{"nick":"Raynos","message":"no","date":"2012-11-16T02:29:33.593Z","type":"message"}
{"nick":"Raynos","message":"one big fat one","date":"2012-11-16T02:29:35.469Z","type":"message"}
{"nick":"Raynos","message":"with everything","date":"2012-11-16T02:29:37.360Z","type":"message"}
{"nick":"Raynos","message":"build it on top of hoarders","date":"2012-11-16T02:29:41.369Z","type":"message"}
{"nick":"chrisdickinson","message":"\"to get started, download all of npm\"","date":"2012-11-16T02:29:55.758Z","type":"message"}
{"nick":"chrisdickinson","message":"\"then run java\"","date":"2012-11-16T02:29:58.473Z","type":"message"}
{"nick":"Raynos","message":"jesusabdullah: hoarders MVC. It needs to be build","date":"2012-11-16T02:30:08.206Z","type":"message"}
{"nick":"Raynos","message":"chrisdickinson: use a JS -> Java compiler","date":"2012-11-16T02:30:16.505Z","type":"message"}
{"nick":"chrisdickinson","message":"or,","date":"2012-11-16T02:30:32.024Z","type":"message"}
{"nick":"chrisdickinson","message":"write a web framework that's served out of g++ while it compiles C++","date":"2012-11-16T02:30:48.189Z","type":"message"}
{"nick":"Raynos","message":"?","date":"2012-11-16T02:30:58.592Z","type":"message"}
{"nick":"Raynos","message":"srsly though","date":"2012-11-16T02:31:13.976Z","type":"message"}
{"nick":"chrisdickinson","message":"C++ templates are turing complete iirc","date":"2012-11-16T02:31:15.221Z","type":"message"}
{"nick":"Raynos","message":"something should be build","date":"2012-11-16T02:31:16.677Z","type":"message"}
{"nick":"chrisdickinson","message":"+1","date":"2012-11-16T02:31:58.448Z","type":"message"}
{"nick":"Raynos","message":"well first I need to finish my webrtc emulation and a js database","date":"2012-11-16T02:34:01.764Z","type":"message"}
{"nick":"chrisdickinson","action":"nods","date":"2012-11-16T02:34:29.111Z","type":"action"}
{"nick":"Raynos","message":"then I can go back to UI based stuff","date":"2012-11-16T02:34:58.660Z","type":"message"}
{"nick":"Raynos","message":"UI stuff is hard when there is no place to put data","date":"2012-11-16T02:35:14.825Z","type":"message"}
{"nick":"chrisdickinson","message":"i'm kind of hoping the webaudio createMediaStreamDestination stuff lands so i can build a modem on top of it","date":"2012-11-16T02:35:33.124Z","type":"message"}
{"nick":"chrisdickinson","message":"just for the delicious irony","date":"2012-11-16T02:36:03.679Z","type":"message"}
{"nick":"Raynos","message":"why do you need that?","date":"2012-11-16T02:37:32.711Z","type":"message"}
{"nick":"chrisdickinson","message":"for no reason, really.","date":"2012-11-16T02:37:54.804Z","type":"message"}
{"nick":"chrisdickinson","message":"i'm excited for the ability to do p2p streams between browsers though, whether through datachannel or the audio api.","date":"2012-11-16T02:38:11.356Z","type":"message"}
{"nick":"chrisdickinson","message":"it's just bonus points if i can make it sound like an old time-y modem while that happens.","date":"2012-11-16T02:39:18.885Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2012-11-16T02:42:57.706Z","type":"message"}
{"nick":"Raynos","message":"BONUS POINTS","date":"2012-11-16T02:43:01.007Z","type":"message"}
{"nick":"LOUDBOT","message":"NO. I HATE THEM THEN. THAT IS JUST THEM BEING STUPID IDIOTS SCREWING UP AND THEY DESERVE IT.","date":"2012-11-16T02:43:01.836Z","type":"message"}
{"nick":"Raynos","message":"does createMediaStreamDestination require PeerConnection","date":"2012-11-16T02:43:15.904Z","type":"message"}
{"nick":"chrisdickinson","message":"no, i think it's all the webaudio context api","date":"2012-11-16T02:44:32.254Z","type":"message"}
{"nick":"chrisdickinson","message":"but basically it lets you modify the bits on the way out -- so if you combine it with webrtc, you can encode data as audio, send it, and (if i'm not mistaken) decode it at the other end","date":"2012-11-16T02:45:24.921Z","type":"message"}
{"nick":"chrisdickinson","message":"which would be an okay-ish shim until datachannel lands in earnest","date":"2012-11-16T02:45:49.906Z","type":"message"}
{"nick":"chrisdickinson","message":"is there a way that i could require a plain text file in browserify?","date":"2012-11-16T02:51:06.037Z","type":"message"}
{"nick":"chrisdickinson","message":"or otherwise make it part of the bundle?","date":"2012-11-16T02:51:18.792Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2012-11-16T02:52:30.871Z","type":"message"}
{"nick":"Raynos","message":"browserify-server --bundle","date":"2012-11-16T02:52:34.298Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/Raynos/browserify-server/blob/master/index.js#L22","date":"2012-11-16T02:52:44.780Z","type":"message"}
{"nick":"chrisdickinson","message":"well, to publish it as a reusable module -- though this might've come up here previously","date":"2012-11-16T02:57:05.047Z","type":"message"}
{"nick":"Raynos","message":"it has :P","date":"2012-11-16T03:00:24.347Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/substack/exportify","date":"2012-11-16T03:00:34.469Z","type":"message"}
{"nick":"chrisdickinson","message":"aaah","date":"2012-11-16T03:03:33.094Z","type":"message"}
{"nick":"chrisdickinson","message":"thanks!","date":"2012-11-16T03:03:34.269Z","type":"message"}
{"nick":"tilgovi","date":"2012-11-16T03:07:29.209Z","type":"join"}
{"nick":"tphummel","reason":"Quit: tphummel","date":"2012-11-16T03:12:23.367Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 43]","date":"2012-11-16T03:19:06.859Z","type":"message"}
{"nick":"owen1","reason":"Ping timeout: 248 seconds","date":"2012-11-16T03:25:08.756Z","type":"quit"}
{"nick":"owen1","date":"2012-11-16T03:39:52.382Z","type":"join"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2012-11-16T03:41:00.360Z","type":"quit"}
{"nick":"fotoverite","date":"2012-11-16T04:16:04.620Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 12]","date":"2012-11-16T04:19:06.824Z","type":"message"}
{"nick":"Raynos","message":"Call all streamheads","date":"2012-11-16T04:27:07.420Z","type":"message"}
{"nick":"Raynos","message":"why does through.write return !this.paused","date":"2012-11-16T04:27:14.756Z","type":"message"}
{"nick":"ik","message":"that would nominally be 'whether on not that thing got wrote'","date":"2012-11-16T04:28:01.065Z","type":"message"}
{"nick":"mbalho","message":"brianloveswords: do you know where i can find more info on that mozilla japan cocktail robot from mozfest?","date":"2012-11-16T04:34:46.933Z","type":"message"}
{"nick":"mbalho","message":"brianloveswords: specifically the parts list","date":"2012-11-16T04:35:10.191Z","type":"message"}
{"nick":"fotoverite","message":"Back in NYC","date":"2012-11-16T04:35:53.247Z","type":"message"}
{"nick":"fotoverite_","date":"2012-11-16T04:59:50.858Z","type":"join"}
{"nick":"fotoverite","reason":"Read error: Connection reset by peer","date":"2012-11-16T04:59:50.986Z","type":"quit"}
{"nick":"fotoverite_","new_nick":"fotoverite","date":"2012-11-16T04:59:51.986Z","type":"nick"}
{"nick":"st_luke_","date":"2012-11-16T05:06:28.761Z","type":"join"}
{"nick":"st_luke_","message":"w00t upstate NY","date":"2012-11-16T05:08:41.806Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 12]","date":"2012-11-16T05:19:06.748Z","type":"message"}
{"nick":"thatguydan","date":"2012-11-16T05:24:21.184Z","type":"join"}
{"nick":"st_luke_","reason":"Ping timeout: 248 seconds","date":"2012-11-16T05:24:36.732Z","type":"quit"}
{"nick":"st_luke_","date":"2012-11-16T05:32:27.733Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 246 seconds","date":"2012-11-16T05:35:55.783Z","type":"quit"}
{"nick":"fotoverite","date":"2012-11-16T05:36:10.464Z","type":"join"}
{"nick":"fotoverite","message":"Why you upstate luke?","date":"2012-11-16T05:36:39.779Z","type":"message"}
{"nick":"st_luke_","reason":"Ping timeout: 248 seconds","date":"2012-11-16T05:45:24.739Z","type":"quit"}
{"nick":"fotoverite","reason":"Ping timeout: 255 seconds","date":"2012-11-16T05:58:59.507Z","type":"quit"}
{"nick":"fotoverite","date":"2012-11-16T06:02:17.491Z","type":"join"}
{"nick":"mike-d","reason":"Quit: mike-d","date":"2012-11-16T06:06:55.248Z","type":"quit"}
{"nick":"Raynos","message":"substack: https://github.com/substack/shoe/pull/10","date":"2012-11-16T06:16:27.871Z","type":"message"}
{"nick":"Raynos","message":"I've moved your complexity into npm","date":"2012-11-16T06:16:41.824Z","type":"message"}
{"nick":"defunctzombie","reason":"Remote host closed the connection","date":"2012-11-16T06:16:54.591Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 24]","date":"2012-11-16T06:19:06.870Z","type":"message"}
{"nick":"LOUDBOT","reason":"Remote host closed the connection","date":"2012-11-16T06:20:55.823Z","type":"quit"}
{"nick":"LOUDBOT","date":"2012-11-16T06:21:06.484Z","type":"join"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-11-16T06:33:34.387Z","type":"nick"}
{"nick":"defunctzombie","date":"2012-11-16T06:47:25.726Z","type":"join"}
{"nick":"defunctzombie","reason":"Ping timeout: 252 seconds","date":"2012-11-16T06:55:40.389Z","type":"quit"}
{"nick":"Raynos","message":"https://github.com/Raynos/streams2#example","date":"2012-11-16T07:11:12.718Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 17]","date":"2012-11-16T07:19:06.901Z","type":"message"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2012-11-16T07:32:53.590Z","type":"quit"}
{"nick":"defunctzombie","date":"2012-11-16T07:52:05.345Z","type":"join"}
{"nick":"defunctzombie","reason":"Ping timeout: 255 seconds","date":"2012-11-16T07:56:33.903Z","type":"quit"}
{"nick":"wiwillia","date":"2012-11-16T08:01:05.054Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 32]","date":"2012-11-16T08:19:06.838Z","type":"message"}
{"nick":"wiwillia","reason":"Ping timeout: 268 seconds","date":"2012-11-16T08:20:51.055Z","type":"quit"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-11-16T08:24:25.703Z","type":"nick"}
{"nick":"Raynos","message":"hells yes!","date":"2012-11-16T08:35:19.054Z","type":"message"}
{"nick":"Raynos","message":"Working peer connection emulation demo","date":"2012-11-16T08:35:28.104Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/Raynos/peer-connection-shim#example","date":"2012-11-16T08:41:42.274Z","type":"message"}
{"nick":"juliangruber","message":"Raynos: https://gist.github.com/d0cdfd9160a21b78a4ee https://gist.github.com/dba5bc1113c5f6bc23ae","date":"2012-11-16T08:46:04.989Z","type":"message"}
{"nick":"Raynos","message":"juliangruber: implemented or API ideas?","date":"2012-11-16T08:46:28.256Z","type":"message"}
{"nick":"juliangruber","message":"api ideas^^","date":"2012-11-16T08:46:41.396Z","type":"message"}
{"nick":"Raynos","message":"I think join / leave is not the most optimum api","date":"2012-11-16T08:47:18.079Z","type":"message"}
{"nick":"Raynos","message":"well maybe it is to be honest","date":"2012-11-16T08:47:25.192Z","type":"message"}
{"nick":"Raynos","message":"I do like the documented open connections","date":"2012-11-16T08:47:35.859Z","type":"message"}
{"nick":"Raynos","message":"it will probably need an API to say \"I am connected to X\"","date":"2012-11-16T08:47:50.162Z","type":"message"}
{"nick":"Raynos","message":"it will probably also need an API to say \"my id is Y\"","date":"2012-11-16T08:47:58.643Z","type":"message"}
{"nick":"Raynos","message":"it also needs the ability to set meta data","date":"2012-11-16T08:48:04.124Z","type":"message"}
{"nick":"Raynos","message":"like header-stream","date":"2012-11-16T08:48:06.525Z","type":"message"}
{"nick":"Raynos","message":"id: n, connections: [ids....], meta: { ... }","date":"2012-11-16T08:48:23.534Z","type":"message"}
{"nick":"Raynos","message":"as for vector clock I dont know","date":"2012-11-16T08:48:34.706Z","type":"message"}
{"nick":"Raynos","message":"juliangruber: https://github.com/nko3/foojs/tree/master/vectorclock","date":"2012-11-16T08:48:46.779Z","type":"message"}
{"nick":"juliangruber","message":"Raynos: the vector clock lib looks like one implemented in Go I've found. The question is if you need that kind of information of if what I provide is enough","date":"2012-11-16T08:49:52.212Z","type":"message"}
{"nick":"Raynos","message":"i dont really care","date":"2012-11-16T08:50:13.458Z","type":"message"}
{"nick":"Raynos","message":"all I care about is comparing","date":"2012-11-16T08:50:16.810Z","type":"message"}
{"nick":"Raynos","message":"one to another","date":"2012-11-16T08:50:18.768Z","type":"message"}
{"nick":"Raynos","message":"and knowing that they are incrementing","date":"2012-11-16T08:50:24.551Z","type":"message"}
{"nick":"Raynos","message":"I just want a monotonic-timestamp that is reliable in a distributed system","date":"2012-11-16T08:50:44.899Z","type":"message"}
{"nick":"juliangruber","message":"wouldn't .on('update', cb) do that for you?","date":"2012-11-16T08:50:59.036Z","type":"message"}
{"nick":"Raynos","message":"ideally the vectorclock has a custom .valueOf() that returns a number or string","date":"2012-11-16T08:51:03.346Z","type":"message"}
{"nick":"Raynos","message":"for local comparison","date":"2012-11-16T08:51:05.781Z","type":"message"}
{"nick":"Raynos","message":"so I can do","date":"2012-11-16T08:51:21.672Z","type":"message"}
{"nick":"Raynos","message":"ts1 < ts2","date":"2012-11-16T08:51:24.121Z","type":"message"}
{"nick":"Raynos","message":"and shit works","date":"2012-11-16T08:51:25.341Z","type":"message"}
{"nick":"Raynos","message":"http://raynos.github.com/peer-connection-shim/example/simple/static/left.html","date":"2012-11-16T08:55:42.207Z","type":"message"}
{"nick":"juliangruber","message":"Raynos: https://gist.github.com/dba5bc1113c5f6bc23ae added meta stuff","date":"2012-11-16T08:58:56.510Z","type":"message"}
{"nick":"Raynos","message":"juliangruber: seems reasonable","date":"2012-11-16T09:00:15.962Z","type":"message"}
{"nick":"juliangruber","message":"Raynos: not sure I get yet what you want with the vector clocks. can you post a minimal example showing just that?","date":"2012-11-16T09:03:19.543Z","type":"message"}
{"nick":"Raynos","message":"juliangruber: I know what I want to consume as an end user","date":"2012-11-16T09:06:01.795Z","type":"message"}
{"nick":"Raynos","message":"not sure how to implement the vector clocks","date":"2012-11-16T09:06:06.966Z","type":"message"}
{"nick":"Raynos","message":"there are two apis","date":"2012-11-16T09:06:10.286Z","type":"message"}
{"nick":"Raynos","message":"one that scuttlebutt will use to make the vector clock work","date":"2012-11-16T09:06:20.012Z","type":"message"}
{"nick":"juliangruber","message":"wouldn't my api with clockA.compare(clockB) work?","date":"2012-11-16T09:06:30.271Z","type":"message"}
{"nick":"Raynos","message":"and one that users of scuttlebutt will use to interact with vector clock timestamps","date":"2012-11-16T09:06:31.309Z","type":"message"}
{"nick":"Raynos","message":"the latter should be dead simple","date":"2012-11-16T09:06:34.994Z","type":"message"}
{"nick":"Raynos","message":"clockA < clockB is nicer","date":"2012-11-16T09:06:42.907Z","type":"message"}
{"nick":"juliangruber","message":"can't overload","date":"2012-11-16T09:06:51.870Z","type":"message"}
{"nick":"Raynos","message":"you can implement < & > for arbitary objects by implementing .valueOf()","date":"2012-11-16T09:06:56.755Z","type":"message"}
{"nick":"juliangruber","message":"so how?","date":"2012-11-16T09:06:56.895Z","type":"message"}
{"nick":"Raynos","message":"sec","date":"2012-11-16T09:07:01.575Z","type":"message"}
{"nick":"Raynos","message":"juliangruber: http://jsfiddle.net/XhKE2/1/","date":"2012-11-16T09:08:09.637Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 50]","date":"2012-11-16T09:19:06.963Z","type":"message"}
{"nick":"owen1","reason":"*.net *.split","date":"2012-11-16T09:29:50.050Z","type":"quit"}
{"nick":"brianloveswords","reason":"*.net *.split","date":"2012-11-16T09:29:50.315Z","type":"quit"}
{"nick":"owenb","reason":"*.net *.split","date":"2012-11-16T09:29:50.316Z","type":"quit"}
{"nick":"brianloveswords_","date":"2012-11-16T09:29:51.354Z","type":"join"}
{"nick":"juliangruber","message":"Raynos: cool, didn't know that","date":"2012-11-16T09:38:25.990Z","type":"message"}
{"nick":"juliangruber","message":"is it cross browser?","date":"2012-11-16T09:38:31.093Z","type":"message"}
{"nick":"owen1","date":"2012-11-16T09:40:23.802Z","type":"join"}
{"nick":"owenb","date":"2012-11-16T09:40:56.264Z","type":"join"}
{"nick":"Raynos","message":"juliangruber: yes","date":"2012-11-16T09:47:54.256Z","type":"message"}
{"nick":"Raynos","message":"valueOf is a thing in the es5 spec","date":"2012-11-16T09:48:03.827Z","type":"message"}
{"nick":"Raynos","message":"what your looking at is a hack","date":"2012-11-16T09:48:08.432Z","type":"message"}
{"nick":"Raynos","message":"because es5 spec says when < then call .valueOf on both operands and compare that","date":"2012-11-16T09:48:21.058Z","type":"message"}
{"nick":"owenb","reason":"*.net *.split","date":"2012-11-16T09:59:32.579Z","type":"quit"}
{"nick":"owenb","date":"2012-11-16T10:10:05.257Z","type":"join"}
{"nick":"juliangruber","message":"nice","date":"2012-11-16T10:11:04.260Z","type":"message"}
{"nick":"juliangruber","message":"Raynos: when you distribute clocks how would you access clocks?","date":"2012-11-16T10:11:57.645Z","type":"message"}
{"nick":"Raynos","message":"each scuttlebutt or stream has a clock","date":"2012-11-16T10:12:17.644Z","type":"message"}
{"nick":"Raynos","message":"each time that stream applies a new update the clock gets updated locally","date":"2012-11-16T10:12:29.991Z","type":"message"}
{"nick":"Raynos","message":"when new changes come down the stream from other scuttlebutts they will contain changed clocks","date":"2012-11-16T10:12:45.792Z","type":"message"}
{"nick":"Raynos","message":"which will be merged into my local clock","date":"2012-11-16T10:12:51.017Z","type":"message"}
{"nick":"juliangruber","message":"clock.on('update', cb) does that automatically","date":"2012-11-16T10:13:08.501Z","type":"message"}
{"nick":"juliangruber","message":"and in clock.on('conflict', cb) you can resolve conflicts","date":"2012-11-16T10:13:25.789Z","type":"message"}
{"nick":"Raynos","message":"but from my point of view a vector clock is something scuttlebutt would use at the implementation level","date":"2012-11-16T10:13:31.433Z","type":"message"}
{"nick":"Raynos","message":"I would use scuttlebutt and expect that ts1 < ts2 works","date":"2012-11-16T10:13:40.778Z","type":"message"}
{"nick":"Raynos","message":"and if needed","date":"2012-11-16T10:13:45.462Z","type":"message"}
{"nick":"Raynos","message":"I can do ts1.compare(ts2) or ts1.clockMethod(...)","date":"2012-11-16T10:13:56.157Z","type":"message"}
{"nick":"juliangruber","message":"dominictarr, we're kind of stuck... https://gist.github.com/d0cdfd9160a21b78a4ee how would the clock api need to look like?","date":"2012-11-16T10:15:01.870Z","type":"message"}
{"nick":"Raynos","message":"well all I really need from clock","date":"2012-11-16T10:15:50.678Z","type":"message"}
{"nick":"Raynos","message":"is a way to say","date":"2012-11-16T10:15:55.843Z","type":"message"}
{"nick":"Raynos","message":"clock.merge(otherClock)","date":"2012-11-16T10:16:00.730Z","type":"message"}
{"nick":"Raynos","message":"and clock.increment()","date":"2012-11-16T10:16:05.106Z","type":"message"}
{"nick":"Raynos","message":"also a clock.toJSON()","date":"2012-11-16T10:16:10.909Z","type":"message"}
{"nick":"juliangruber","message":"how would you get otherClock","date":"2012-11-16T10:16:16.446Z","type":"message"}
{"nick":"Raynos","message":"and the comparison should work","date":"2012-11-16T10:16:18.417Z","type":"message"}
{"nick":"Raynos","message":"over the network","date":"2012-11-16T10:16:27.031Z","type":"message"}
{"nick":"Raynos","message":"as json","date":"2012-11-16T10:16:31.434Z","type":"message"}
{"nick":"Raynos","message":"stream.on(\"data\", function (update) { clock.merge(update[2]) })","date":"2012-11-16T10:16:50.829Z","type":"message"}
{"nick":"Raynos","message":"where update is [key, value, clock, source]","date":"2012-11-16T10:17:03.108Z","type":"message"}
{"nick":"Raynos","message":"the only issue is","date":"2012-11-16T10:17:29.952Z","type":"message"}
{"nick":"Raynos","message":"is { uid: 2, uid2: 1 } < { uid: 1, uid2: 2 }","date":"2012-11-16T10:17:49.843Z","type":"message"}
{"nick":"Raynos","message":"probably break ties determinstically based on key order","date":"2012-11-16T10:18:16.743Z","type":"message"}
{"nick":"Raynos","message":"in that case uid2 would win","date":"2012-11-16T10:18:22.911Z","type":"message"}
{"nick":"Raynos","message":"because uid2 > uid","date":"2012-11-16T10:18:31.209Z","type":"message"}
{"nick":"juliangruber","message":"Raynos: ah yeah makes sense to implement a basic vectorclock first before thinking about distribution","date":"2012-11-16T10:18:41.598Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 83]","date":"2012-11-16T10:19:06.728Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/nko3/foojs/blob/master/vectorclock/vector_clock.js#L4","date":"2012-11-16T10:19:09.366Z","type":"message"}
{"nick":"Raynos","message":"thats increment","date":"2012-11-16T10:19:11.176Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/nko3/foojs/blob/master/vectorclock/vector_clock.js#L31","date":"2012-11-16T10:19:31.277Z","type":"message"}
{"nick":"Raynos","message":"comparison","date":"2012-11-16T10:19:32.936Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/nko3/foojs/blob/master/vectorclock/vector_clock.js#L58","date":"2012-11-16T10:19:48.164Z","type":"message"}
{"nick":"Raynos","message":"isConcurrant is kind of cool","date":"2012-11-16T10:19:53.453Z","type":"message"}
{"nick":"juliangruber","message":"Raynos: why don't you use that lib then?","date":"2012-11-16T10:20:15.066Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/nko3/foojs/blob/master/vectorclock/vector_clock.js#L80","date":"2012-11-16T10:20:17.046Z","type":"message"}
{"nick":"Raynos","message":"and that is merge","date":"2012-11-16T10:20:19.244Z","type":"message"}
{"nick":"Raynos","message":"well having actually read his code","date":"2012-11-16T10:20:26.684Z","type":"message"}
{"nick":"Raynos","message":"I think I should :P","date":"2012-11-16T10:20:29.407Z","type":"message"}
{"nick":"juliangruber","message":"yeah","date":"2012-11-16T10:20:39.095Z","type":"message"}
{"nick":"juliangruber","message":"and I could use that to do the synchronized clock","date":"2012-11-16T10:20:51.991Z","type":"message"}
{"nick":"owenb_","date":"2012-11-16T10:28:38.319Z","type":"join"}
{"nick":"owenb","reason":"*.net *.split","date":"2012-11-16T10:35:28.189Z","type":"quit"}
{"nick":"owenb_","new_nick":"owenb","date":"2012-11-16T10:35:28.319Z","type":"nick"}
{"nick":"shuaib","reason":"Quit: Textual IRC Client: http://www.textualapp.com/","date":"2012-11-16T11:00:32.505Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 26]","date":"2012-11-16T11:19:06.857Z","type":"message"}
{"nick":"rowbit","message":"Daily usage stats: [developer: 5, free: 474]","date":"2012-11-16T12:19:06.726Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 32]","date":"2012-11-16T12:19:07.658Z","type":"message"}
{"nick":"thatguydan","date":"2012-11-16T12:57:57.862Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 32]","date":"2012-11-16T13:19:06.829Z","type":"message"}
{"nick":"defunctzombie","date":"2012-11-16T14:17:59.287Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 65]","date":"2012-11-16T14:19:06.784Z","type":"message"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2012-11-16T14:23:55.805Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 84]","date":"2012-11-16T15:19:06.786Z","type":"message"}
{"nick":"jibay","date":"2012-11-16T15:23:32.937Z","type":"join"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-11-16T15:31:30.690Z","type":"nick"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-11-16T15:36:34.629Z","type":"nick"}
{"nick":"substack","action":"in japan","date":"2012-11-16T15:58:34.742Z","type":"action"}
