{"nick":"xaq","reason":"Remote host closed the connection","date":"2012-07-25T00:12:31.524Z","type":"quit"}
{"nick":"Dr_K","reason":"Quit: Leaving.","date":"2012-07-25T00:35:35.676Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T00:58:52.017Z","type":"message"}
{"nick":"mikeal","date":"2012-07-25T01:20:14.907Z","type":"join"}
{"nick":"tilgovi","date":"2012-07-25T01:31:51.697Z","type":"join"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T01:48:56.055Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T01:58:51.877Z","type":"message"}
{"nick":"AvianFlu","reason":"Quit: Leaving","date":"2012-07-25T02:09:27.792Z","type":"quit"}
{"nick":"maxogden","message":"tanepiper: hahaha whoa","date":"2012-07-25T02:13:16.051Z","type":"message"}
{"nick":"AvianFlu","date":"2012-07-25T02:18:20.506Z","type":"join"}
{"nick":"Nexxy","message":"tanepiper, there is a PORTLAND FUCKING OREGON t-shirt","date":"2012-07-25T02:35:15.519Z","type":"message"}
{"nick":"Nexxy","message":"http://www.flickr.com/photos/willwm/3255854937/lightbox/","date":"2012-07-25T02:35:41.301Z","type":"message"}
{"nick":"xaq","date":"2012-07-25T02:36:58.547Z","type":"join"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-07-25T02:48:45.878Z","type":"quit"}
{"nick":"Raynos","message":"SubStack: http://hackforchange12.hackathon.io/teams/create","date":"2012-07-25T02:51:51.920Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T02:58:51.907Z","type":"message"}
{"nick":"ryan_stevens","date":"2012-07-25T03:11:20.438Z","type":"join"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2012-07-25T03:17:23.809Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-07-25T03:20:55.054Z","type":"quit"}
{"nick":"xaq","reason":"Remote host closed the connection","date":"2012-07-25T03:23:20.632Z","type":"quit"}
{"nick":"xaq","date":"2012-07-25T03:24:33.111Z","type":"join"}
{"nick":"xaq","reason":"Ping timeout: 246 seconds","date":"2012-07-25T03:35:54.907Z","type":"quit"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.226.209(free4)","date":"2012-07-25T03:36:55.961Z","type":"message"}
{"nick":"xaq","date":"2012-07-25T03:39:04.881Z","type":"join"}
{"nick":"ryan_stevens","date":"2012-07-25T03:51:16.664Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T03:58:51.744Z","type":"message"}
{"nick":"xaq","reason":"Remote host closed the connection","date":"2012-07-25T04:00:45.160Z","type":"quit"}
{"nick":"rowbit","message":"SubStack, pkrumins: Developers waiting in the queue for ie9 (Queue length: 1 on 1 servers. Total servers: 5)","date":"2012-07-25T04:07:27.502Z","type":"message"}
{"nick":"AvianFlu","reason":"Quit: Leaving","date":"2012-07-25T04:12:35.959Z","type":"quit"}
{"nick":"Raynos","message":"jesusabdullah: installed two of your modules today. o/","date":"2012-07-25T04:28:41.552Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T04:29:55.967Z","type":"message"}
{"nick":"jesusabdullah","message":"Word","date":"2012-07-25T04:33:22.921Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T04:35:00.637Z","type":"message"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-07-25T04:36:37.238Z","type":"nick"}
{"nick":"Raynos","message":"jesusabdullah: https://gist.github.com/868407d2bd926e6d61f3","date":"2012-07-25T04:37:08.276Z","type":"message"}
{"nick":"Raynos","message":"removed a one line function","date":"2012-07-25T04:37:23.417Z","type":"message"}
{"nick":"Raynos","message":"totally worth it","date":"2012-07-25T04:37:25.786Z","type":"message"}
{"nick":"jesusabdullah","message":"hah","date":"2012-07-25T04:40:51.079Z","type":"message"}
{"nick":"jesusabdullah","message":"word","date":"2012-07-25T04:40:53.328Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-07-25T04:42:52.858Z","type":"quit"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3), 184.106.106.46(dev-ie8-1)","date":"2012-07-25T04:50:56.103Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T04:58:51.851Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T05:58:51.749Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Developers waiting in the queue for ie8 (Queue length: 1 on 1 servers. Total servers: 3)","date":"2012-07-25T06:30:30.323Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T06:40:55.996Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T06:58:52.049Z","type":"message"}
{"nick":"dominictarr","date":"2012-07-25T07:11:27.448Z","type":"join"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.226.209(free4)","date":"2012-07-25T07:12:28.892Z","type":"message"}
{"nick":"dominictarr","message":"mikeal, hey you there?","date":"2012-07-25T07:16:34.788Z","type":"message"}
{"nick":"mikeal","message":"yes","date":"2012-07-25T07:17:45.534Z","type":"message"}
{"nick":"dominictarr","message":"mikeal, cool, I want to talk to you about the stream refactor for 0.9","date":"2012-07-25T07:21:53.222Z","type":"message"}
{"nick":"mikeal","message":"cant talk about that now","date":"2012-07-25T07:25:54.406Z","type":"message"}
{"nick":"mikeal","message":"too tired","date":"2012-07-25T07:25:55.847Z","type":"message"}
{"nick":"mikeal","message":"also, need to talk with isaac more about it","date":"2012-07-25T07:26:03.714Z","type":"message"}
{"nick":"mikeal","message":"he has crazy ideas","date":"2012-07-25T07:26:13.542Z","type":"message"}
{"nick":"dominictarr","message":"I wrote up a gist of my thoughts,","date":"2012-07-25T07:26:25.215Z","type":"message"}
{"nick":"dominictarr","message":"https://gist.github.com/3117184","date":"2012-07-25T07:26:42.662Z","type":"message"}
{"nick":"dominictarr","message":"my ideas are mostly about tightening up what we've currently got.","date":"2012-07-25T07:30:11.535Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T07:58:51.865Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T08:00:31.029Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T08:08:57.381Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T08:58:51.760Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T09:10:26.104Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T09:12:58.484Z","type":"message"}
{"nick":"tm604","reason":"Quit: Leaving.","date":"2012-07-25T09:19:41.058Z","type":"quit"}
{"nick":"tm604","date":"2012-07-25T09:20:20.102Z","type":"join"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-07-25T09:26:02.180Z","type":"nick"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3), 184.106.106.46(dev-ie8-1)","date":"2012-07-25T09:28:29.021Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T09:30:26.043Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T09:32:56.112Z","type":"message"}
{"nick":"dominictarr","reason":"Remote host closed the connection","date":"2012-07-25T09:52:10.230Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T09:58:51.871Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T09:59:56.025Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T10:03:26.064Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T10:04:55.957Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T10:09:26.033Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T10:13:56.079Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T10:17:26.120Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.56.32.168(dev4), 50.57.174.109(free2), 173.203.67.76(free3), 50.57.226.209(free4), 50.57.223.161(dev5), 50.57.174.114(dev), 50.57.174.117(dev2), 173.203.68.112(dev3), 50.56.27.70(dev-ie6-1), 184.106.106.66(dev-ie7-1), 184.106.106.46(dev-ie8-1), 50.57.171.229(dev-ie6-2), 50.57.174.101(dev-ie7-2), 50.57.174.105(dev-ie8-2), 184.106.99.27(dev-ie7-3), 50.56.64.186(dev-ie8-3)","date":"2012-07-25T10:24:57.274Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T10:34:56.373Z","type":"message"}
{"nick":"saijanai_","reason":"Ping timeout: 245 seconds","date":"2012-07-25T10:57:09.964Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T10:58:51.821Z","type":"message"}
{"nick":"saijanai_","date":"2012-07-25T11:01:43.442Z","type":"join"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T11:01:55.986Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T11:03:26.151Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T11:05:56.029Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T11:07:26.097Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T11:08:26.241Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T11:11:56.051Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T11:29:26.109Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T11:30:25.951Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T11:32:26.289Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T11:58:51.954Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) adm@....uk successfully signed up for developer browserling plan ($20). Cash money! /!\\","date":"2012-07-25T12:00:34.173Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) paid account successfully upgraded /!\\","date":"2012-07-25T12:00:34.409Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.226.209(free4)","date":"2012-07-25T12:49:59.961Z","type":"message"}
{"nick":"wiwillia","date":"2012-07-25T12:51:00.593Z","type":"join"}
{"nick":"AvianFlu","date":"2012-07-25T12:57:40.767Z","type":"join"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.226.209(free4)","date":"2012-07-25T12:58:26.060Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T12:58:51.878Z","type":"message"}
{"nick":"SubStack!~substack@ec2-50-17-202-46.compute-1.amazonaws.com","topic":"http://browserling.com | http://testling.com | We put a browser in your browser!","date":"2012-07-25T13:19:18.586Z","type":"topic"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.226.209(free4)","date":"2012-07-25T13:23:25.873Z","type":"message"}
{"nick":"dominictarr","date":"2012-07-25T13:25:18.301Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T13:58:51.652Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.226.209(free4)","date":"2012-07-25T14:02:26.065Z","type":"message"}
{"nick":"xaq","date":"2012-07-25T14:03:11.993Z","type":"join"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.226.209(free4)","date":"2012-07-25T14:03:26.269Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Developers waiting in the queue for ie9 (Queue length: 1 on 1 servers. Total servers: 5)","date":"2012-07-25T14:10:29.753Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Developers waiting in the queue for ie9 (Queue length: 1 on 1 servers. Total servers: 5)","date":"2012-07-25T14:15:30.180Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Developers waiting in the queue for ie9 (Queue length: 1 on 1 servers. Total servers: 5)","date":"2012-07-25T14:20:59.938Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Developers waiting in the queue for ie9 (Queue length: 1 on 1 servers. Total servers: 5)","date":"2012-07-25T14:26:00.575Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Developers waiting in the queue for ie9 (Queue length: 1 on 1 servers. Total servers: 5)","date":"2012-07-25T14:31:26.065Z","type":"message"}
{"nick":"wiwillia","date":"2012-07-25T14:31:26.663Z","type":"quit"}
{"nick":"rowbit","message":"SubStack, pkrumins: Developers waiting in the queue for ie9 (Queue length: 1 on 1 servers. Total servers: 5)","date":"2012-07-25T14:36:27.468Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Developers waiting in the queue for ie9 (Queue length: 1 on 1 servers. Total servers: 5)","date":"2012-07-25T14:41:56.003Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.226.209(free4)","date":"2012-07-25T14:46:57.289Z","type":"message"}
{"nick":"yhuang","date":"2012-07-25T14:48:01.709Z","type":"join"}
{"nick":"yhuang","message":"Hey guys, i can't run my tests. It just hangs again","date":"2012-07-25T14:48:32.569Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T14:58:51.912Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-25T15:27:30.704Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T15:58:51.989Z","type":"message"}
{"nick":"mikeal","date":"2012-07-25T16:04:13.499Z","type":"join"}
{"nick":"pkrumins","message":"yhuang: can you try now? i just restarted testling","date":"2012-07-25T16:12:14.937Z","type":"message"}
{"nick":"pkrumins","message":"we'll have these issues solved soon","date":"2012-07-25T16:12:35.656Z","type":"message"}
{"nick":"yhuang","message":"do you know which browsers currently work? I tried Chrome 17 and it didn't work","date":"2012-07-25T16:14:11.960Z","type":"message"}
{"nick":"pkrumins","message":"chrome 17 should work again","date":"2012-07-25T16:17:02.550Z","type":"message"}
{"nick":"ryan_stevens","date":"2012-07-25T16:20:15.322Z","type":"join"}
{"nick":"pkrumins","message":"looks like it hung again","date":"2012-07-25T16:20:31.194Z","type":"message"}
{"nick":"ryan_stevens","reason":"Client Quit","date":"2012-07-25T16:21:42.716Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-25T16:45:25.096Z","type":"quit"}
{"nick":"mikeal","date":"2012-07-25T16:46:10.925Z","type":"join"}
{"nick":"ryan_stevens","date":"2012-07-25T16:49:49.640Z","type":"join"}
{"nick":"sorensen","reason":"Ping timeout: 255 seconds","date":"2012-07-25T16:53:07.718Z","type":"quit"}
{"nick":"sorensen","date":"2012-07-25T16:54:43.467Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T16:58:51.665Z","type":"message"}
{"nick":"tblobaum_","date":"2012-07-25T17:03:05.301Z","type":"join"}
{"nick":"_ritch","date":"2012-07-25T17:09:28.376Z","type":"join"}
{"nick":"rowbit","message":"SubStack, pkrumins: Developers waiting in the queue for ie9 (Queue length: 1 on 1 servers. Total servers: 5)","date":"2012-07-25T17:14:26.031Z","type":"message"}
{"nick":"dominictarr","message":"so maxogden, boat building then?","date":"2012-07-25T17:54:22.553Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T17:58:51.660Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 184.106.106.46(dev-ie8-1)","date":"2012-07-25T18:32:26.142Z","type":"message"}
{"nick":"Raynos","message":"jesusabdullah: https://github.com/jesusabdullah/node-zippy/pull/1","date":"2012-07-25T18:37:23.850Z","type":"message"}
{"nick":"wiwillia","date":"2012-07-25T18:39:50.480Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T18:58:51.769Z","type":"message"}
{"nick":"wiwillia","date":"2012-07-25T19:14:36.418Z","type":"quit"}
{"nick":"_ritch","date":"2012-07-25T19:16:53.359Z","type":"part"}
{"nick":"tilgovi","date":"2012-07-25T19:18:15.623Z","type":"join"}
{"nick":"yhuang","reason":"Remote host closed the connection","date":"2012-07-25T19:27:52.196Z","type":"quit"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2012-07-25T19:46:21.135Z","type":"quit"}
{"nick":"rannmann","reason":"Ping timeout: 240 seconds","date":"2012-07-25T19:57:45.578Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T19:58:51.710Z","type":"message"}
{"nick":"rowbit","message":"Daily usage stats: []","date":"2012-07-25T19:58:51.906Z","type":"message"}
{"nick":"wiwillia","date":"2012-07-25T19:58:56.697Z","type":"join"}
{"nick":"rannmann","date":"2012-07-25T19:59:01.533Z","type":"join"}
{"nick":"rannmann","reason":"Changing host","date":"2012-07-25T19:59:01.726Z","type":"quit"}
{"nick":"rannmann","date":"2012-07-25T19:59:01.726Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-25T20:01:22.219Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T20:58:51.636Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) nickcherryjiggz@... successfully signed up for developer browserling plan ($20). Cash money! /!\\","date":"2012-07-25T21:06:22.695Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) paid account successfully upgraded /!\\","date":"2012-07-25T21:06:22.898Z","type":"message"}
{"nick":"mikeal","date":"2012-07-25T21:13:44.968Z","type":"join"}
{"nick":"rowbit","message":"SubStack, pkrumins: Developers waiting in the queue for ie8 (Queue length: 1 on 1 servers. Total servers: 3)","date":"2012-07-25T21:14:25.876Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.174.114(dev)","date":"2012-07-25T21:44:25.966Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-25T21:46:55.862Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T21:58:51.663Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) devs@... successfully signed up for developer browserling plan ($20). Cash money! /!\\","date":"2012-07-25T22:30:08.816Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) paid account successfully upgraded /!\\","date":"2012-07-25T22:30:09.011Z","type":"message"}
{"nick":"SubStack","message":"woot!","date":"2012-07-25T22:35:52.472Z","type":"message"}
{"nick":"wiwillia","reason":"Ping timeout: 250 seconds","date":"2012-07-25T22:36:47.135Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T22:58:51.716Z","type":"message"}
{"nick":"dominictarr","message":"mikeal, hey whats up?","date":"2012-07-25T23:32:14.261Z","type":"message"}
{"nick":"mikeal","message":"hey","date":"2012-07-25T23:32:20.706Z","type":"message"}
{"nick":"dominictarr","message":"so, tired today?","date":"2012-07-25T23:32:42.873Z","type":"message"}
{"nick":"mikeal","message":"haha","date":"2012-07-25T23:32:55.873Z","type":"message"}
{"nick":"mikeal","message":"i'm not going to bed","date":"2012-07-25T23:32:58.355Z","type":"message"}
{"nick":"dominictarr","message":"according to my calculations, it's about 4pm, where you are.","date":"2012-07-25T23:33:22.291Z","type":"message"}
{"nick":"mikeal","message":"yup","date":"2012-07-25T23:33:31.698Z","type":"message"}
{"nick":"mikeal","message":":)","date":"2012-07-25T23:33:33.632Z","type":"message"}
{"nick":"dominictarr","message":"cool, I want to talk to you about possible future Stream refactors.","date":"2012-07-25T23:34:03.538Z","type":"message"}
{"nick":"mikeal","message":"yes","date":"2012-07-25T23:34:19.421Z","type":"message"}
{"nick":"mikeal","message":"1.) pause() will buffer","date":"2012-07-25T23:34:30.522Z","type":"message"}
{"nick":"mikeal","message":"2.) stream.Stream will be a passthrough stream with a write() method","date":"2012-07-25T23:35:26.192Z","type":"message"}
{"nick":"dominictarr","message":"my main concern is that the stream always gets to a consistent terminal state.","date":"2012-07-25T23:35:56.844Z","type":"message"}
{"nick":"mikeal","message":"we talked about that a long while back","date":"2012-07-25T23:36:26.030Z","type":"message"}
{"nick":"mikeal","message":"readable stream MUST emit either \"end\" or \"error\"","date":"2012-07-25T23:36:43.479Z","type":"message"}
{"nick":"dominictarr","message":"so, 'error' should trigger destroy(), the same way that close dose.","date":"2012-07-25T23:36:49.256Z","type":"message"}
{"nick":"dominictarr","message":"yeah, something like that.","date":"2012-07-25T23:36:55.263Z","type":"message"}
{"nick":"dominictarr","message":"'close' also works.","date":"2012-07-25T23:37:05.739Z","type":"message"}
{"nick":"mikeal","message":"we need to unify destroy() destroySoon() and close()","date":"2012-07-25T23:37:12.482Z","type":"message"}
{"nick":"mikeal","message":"it's fuckin retarded as is","date":"2012-07-25T23:37:21.298Z","type":"message"}
{"nick":"dominictarr","message":"I'm basically working from the point of view of U-L streams,","date":"2012-07-25T23:38:20.403Z","type":"message"}
{"nick":"dominictarr","message":"and what I've found to work successfully with what I've been donig.","date":"2012-07-25T23:38:38.671Z","type":"message"}
{"nick":"dominictarr","message":"I just use destroy()","date":"2012-07-25T23:39:04.550Z","type":"message"}
{"nick":"dominictarr","message":"close(), destroySoon()","date":"2012-07-25T23:39:23.179Z","type":"message"}
{"nick":"dominictarr","message":"all have the same meaning as destroy(), more or less.","date":"2012-07-25T23:39:42.443Z","type":"message"}
{"nick":"dominictarr","message":"but, I think we do need something to indicate that the stream has terminated prematurely.","date":"2012-07-25T23:40:36.618Z","type":"message"}
{"nick":"mikeal","message":"what does \"premature\" mean?","date":"2012-07-25T23:40:55.029Z","type":"message"}
{"nick":"dominictarr","message":"well, \"end()\" means that the source intended the end of the stream.","date":"2012-07-25T23:41:23.997Z","type":"message"}
{"nick":"dominictarr","message":"`destroy()` means it was in someway unexpected.","date":"2012-07-25T23:41:49.256Z","type":"message"}
{"nick":"dominictarr","message":"something went wrong.","date":"2012-07-25T23:41:57.366Z","type":"message"}
{"nick":"mikeal","message":"so, let's talk seperately about the method and the event","date":"2012-07-25T23:42:07.279Z","type":"message"}
{"nick":"dominictarr","message":"I like the way that events on one side are propagated to methods on the other.","date":"2012-07-25T23:43:11.785Z","type":"message"}
{"nick":"dominictarr","message":"I think that is quite a good principle.","date":"2012-07-25T23:43:23.637Z","type":"message"}
{"nick":"mikeal","message":"it doesn't always apply tho","date":"2012-07-25T23:43:36.077Z","type":"message"}
{"nick":"mikeal","message":"like, destroy()","date":"2012-07-25T23:43:40.167Z","type":"message"}
{"nick":"mikeal","message":"it's a method no readable or writable","date":"2012-07-25T23:43:44.303Z","type":"message"}
{"nick":"dominictarr","message":"well, destroy() --> \"close\"","date":"2012-07-25T23:43:58.081Z","type":"message"}
{"nick":"mikeal","message":"maybe","date":"2012-07-25T23:44:06.674Z","type":"message"}
{"nick":"dominictarr","message":"that is how i've interpereted it, after studying the source.","date":"2012-07-25T23:44:19.896Z","type":"message"}
{"nick":"dominictarr","message":"thoughout core.","date":"2012-07-25T23:44:26.451Z","type":"message"}
{"nick":"mikeal","message":"the close event is poorly designed","date":"2012-07-25T23:44:46.215Z","type":"message"}
{"nick":"mikeal","message":"and documented","date":"2012-07-25T23:44:55.570Z","type":"message"}
{"nick":"mikeal","message":"readable emits either \"error\" or \"end\"","date":"2012-07-25T23:45:11.910Z","type":"message"}
{"nick":"mikeal","message":"that is insured","date":"2012-07-25T23:45:16.179Z","type":"message"}
{"nick":"dominictarr","message":"well, it doesn't really matter to the other streams in the pipeline whether a particular stream has disposed of it's resources","date":"2012-07-25T23:46:10.594Z","type":"message"}
{"nick":"isaacs","message":"close() -> release and clean up the underlying resource","date":"2012-07-25T23:46:15.601Z","type":"message"}
{"nick":"isaacs","message":"\"close\" event -> the underlying resource has been cleaned up and released","date":"2012-07-25T23:46:28.787Z","type":"message"}
{"nick":"mikeal","message":"that's what \"end\" means","date":"2012-07-25T23:46:44.838Z","type":"message"}
{"nick":"isaacs","message":"ie, you called fs.close(fd) or socket.close() or whatever","date":"2012-07-25T23:46:45.067Z","type":"message"}
{"nick":"isaacs","message":"mikeal: no, \"end\" means \"no more bytes will be emitted\"","date":"2012-07-25T23:46:53.007Z","type":"message"}
{"nick":"mikeal","message":"end()","date":"2012-07-25T23:47:00.234Z","type":"message"}
{"nick":"dominictarr","message":"what the other streams need to know, is this stream over, for sure.","date":"2012-07-25T23:47:04.836Z","type":"message"}
{"nick":"isaacs","message":".end() means \"i will not be writing any more bytes\"","date":"2012-07-25T23:47:09.540Z","type":"message"}
{"nick":"isaacs","message":"end() method -> writable stream.  \"end\" event -> readable stream.","date":"2012-07-25T23:47:24.327Z","type":"message"}
{"nick":"mikeal","message":"right","date":"2012-07-25T23:47:25.197Z","type":"message"}
{"nick":"mikeal","message":"right","date":"2012-07-25T23:47:35.287Z","type":"message"}
{"nick":"isaacs","message":"but virtually *no* streams in real life are passthroughs","date":"2012-07-25T23:47:37.346Z","type":"message"}
{"nick":"dominictarr","message":"because like,","date":"2012-07-25T23:47:40.467Z","type":"message"}
{"nick":"isaacs","message":"except like a very small handful of exceptions.","date":"2012-07-25T23:47:44.500Z","type":"message"}
{"nick":"dominictarr","message":"for a duplex stream","date":"2012-07-25T23:47:44.925Z","type":"message"}
{"nick":"mikeal","message":"all userland ones are","date":"2012-07-25T23:47:45.890Z","type":"message"}
{"nick":"isaacs","message":"no, almost no userland ones are.","date":"2012-07-25T23:47:51.646Z","type":"message"}
{"nick":"isaacs","message":"all of them do *something* with the bytes.","date":"2012-07-25T23:47:56.088Z","type":"message"}
{"nick":"dominictarr","message":"end(), and emit ('end'+","date":"2012-07-25T23:47:58.371Z","type":"message"}
{"nick":"mikeal","message":"oh, i see what you mean","date":"2012-07-25T23:48:03.743Z","type":"message"}
{"nick":"mikeal","message":"yes","date":"2012-07-25T23:48:04.557Z","type":"message"}
{"nick":"dominictarr","message":"may occur in either order","date":"2012-07-25T23:48:06.804Z","type":"message"}
{"nick":"isaacs","message":"most of them do something async with the bytes.","date":"2012-07-25T23:48:18.906Z","type":"message"}
{"nick":"isaacs","message":"or gather up bytes into different chunks, etc.","date":"2012-07-25T23:48:27.946Z","type":"message"}
{"nick":"isaacs","message":"almost none have any kind of 1:1 correllation between stream.write(foo) and stream.emit('data', foo)","date":"2012-07-25T23:48:47.410Z","type":"message"}
{"nick":"dominictarr","message":"I'm writing heaps of streams that actually communicate via js objects,","date":"2012-07-25T23:48:52.999Z","type":"message"}
{"nick":"mikeal","message":"i think that, semantics around \"close\" or \"destroy\" should not be considered for higher level streams, we should scope their behavior more specifically to file descriptors","date":"2012-07-25T23:48:58.487Z","type":"message"}
{"nick":"isaacs","message":"yes","date":"2012-07-25T23:49:06.687Z","type":"message"}
{"nick":"dominictarr","message":"and then piping them to a stream that parses/stringifies","date":"2012-07-25T23:49:14.696Z","type":"message"}
{"nick":"isaacs","message":"close/destroy are optional things that we add when necessary and relevant.","date":"2012-07-25T23:49:30.124Z","type":"message"}
{"nick":"isaacs","message":"they're essential to tcp","date":"2012-07-25T23:49:35.173Z","type":"message"}
{"nick":"mikeal","message":"for streams that don't directly represent a file descriptor all we need is \"end\" and \"error\" as signals for ending.","date":"2012-07-25T23:49:50.661Z","type":"message"}
{"nick":"isaacs","message":"yep[","date":"2012-07-25T23:49:56.105Z","type":"message"}
{"nick":"dominictarr","message":"utlimately, Stream is an abstraction of IO","date":"2012-07-25T23:49:58.802Z","type":"message"}
{"nick":"mikeal","message":"now, abort() i think we do need to define","date":"2012-07-25T23:50:05.108Z","type":"message"}
{"nick":"dominictarr","message":"so TCP is kinda the default.","date":"2012-07-25T23:50:12.796Z","type":"message"}
{"nick":"isaacs","message":"abort() is destroy()","date":"2012-07-25T23:50:13.047Z","type":"message"}
{"nick":"mikeal","message":"is it?","date":"2012-07-25T23:50:17.322Z","type":"message"}
{"nick":"isaacs","message":"yes.","date":"2012-07-25T23:50:19.164Z","type":"message"}
{"nick":"dominictarr","message":"ubp is too low level","date":"2012-07-25T23:50:28.089Z","type":"message"}
{"nick":"isaacs","message":"\"Whatever you were doing, shut the fuck up and get the fuck out the way.\"","date":"2012-07-25T23:50:29.437Z","type":"message"}
{"nick":"dominictarr","message":"not useful.","date":"2012-07-25T23:50:32.819Z","type":"message"}
{"nick":"isaacs","message":".destroy() is kill -9","date":"2012-07-25T23:50:48.384Z","type":"message"}
{"nick":"dominictarr","message":"everything else is a reliable stream.","date":"2012-07-25T23:51:01.848Z","type":"message"}
{"nick":"isaacs","message":".close() is kill -HUP","date":"2012-07-25T23:51:06.093Z","type":"message"}
{"nick":"mikeal","message":"here's the problem i seem to run in to","date":"2012-07-25T23:51:21.935Z","type":"message"}
{"nick":"dominictarr","message":"aka, Transmission Control Protocol.","date":"2012-07-25T23:51:24.098Z","type":"message"}
{"nick":"mikeal","message":"you want to cleanly kill a readable stream and supress any errors that might involve","date":"2012-07-25T23:51:46.510Z","type":"message"}
{"nick":"mikeal","message":"1.) how do you propogate a message up the readable pipes to close it out cleanly","date":"2012-07-25T23:52:14.366Z","type":"message"}
{"nick":"mikeal","message":"2.) how do you supress errors, because closing a socket in the middle of HTTP will generate an error","date":"2012-07-25T23:52:34.386Z","type":"message"}
{"nick":"isaacs","message":"that's a nice problem.","date":"2012-07-25T23:52:48.482Z","type":"message"}
{"nick":"isaacs","message":"here's another one:","date":"2012-07-25T23:52:55.402Z","type":"message"}
{"nick":"mikeal","message":"someone should take notes :)","date":"2012-07-25T23:53:11.898Z","type":"message"}
{"nick":"dominictarr","message":"aha, propagate a message by calling a method on the other stream","date":"2012-07-25T23:53:13.541Z","type":"message"}
{"nick":"isaacs","message":"i need to read 10 bytes from this stream, and then depending on what those 10 bytes are, pipe it to either writableA, or writableB","date":"2012-07-25T23:53:22.003Z","type":"message"}
{"nick":"isaacs","message":"this is a huge pita","date":"2012-07-25T23:53:26.092Z","type":"message"}
{"nick":"dominictarr","message":"so that that stream may decide what to do.","date":"2012-07-25T23:53:26.895Z","type":"message"}
{"nick":"isaacs","message":"because you'll get a 'data' event with 15 bytes","date":"2012-07-25T23:53:32.512Z","type":"message"}
{"nick":"isaacs","message":"and have to re-emit the other 5","date":"2012-07-25T23:53:37.172Z","type":"message"}
{"nick":"dominictarr","message":"that's what write() does...","date":"2012-07-25T23:53:42.628Z","type":"message"}
{"nick":"mikeal","message":"isaacs: so, once pause() buffers","date":"2012-07-25T23:54:11.703Z","type":"message"}
{"nick":"isaacs","message":"but mikeal even if pause() buffers, it's too late.","date":"2012-07-25T23:54:25.941Z","type":"message"}
{"nick":"isaacs","message":"those 5 bytes have escaped.","date":"2012-07-25T23:54:29.811Z","type":"message"}
{"nick":"mikeal","message":"you can pause() it and write() the leftover bytes","date":"2012-07-25T23:54:32.736Z","type":"message"}
{"nick":"mikeal","message":"yeah, write to yourself again","date":"2012-07-25T23:54:43.328Z","type":"message"}
{"nick":"isaacs","message":"or i can just writableA.write(5Bytes) ; readable.pipe(writableA)","date":"2012-07-25T23:54:53.353Z","type":"message"}
{"nick":"mikeal","message":"in the same tick you pause in","date":"2012-07-25T23:54:54.177Z","type":"message"}
{"nick":"dominictarr","message":"isaacs, I like your suggestion for a read() method.","date":"2012-07-25T23:55:01.984Z","type":"message"}
{"nick":"mikeal","message":"i'm really confused as to how this read() method will work","date":"2012-07-25T23:55:17.733Z","type":"message"}
{"nick":"isaacs","message":"mikeal: or we can move away from 'data' events, and instead of a 'readable' event and a .read() method","date":"2012-07-25T23:55:20.141Z","type":"message"}
{"nick":"mikeal","message":"are we just polling these constantly?","date":"2012-07-25T23:55:25.272Z","type":"message"}
{"nick":"isaacs","message":"mikeal: no, we're not polling at all.","date":"2012-07-25T23:55:36.117Z","type":"message"}
{"nick":"isaacs","message":"mikeal: we'd just expose the underlying 'Hey, this FD is readable!' event we get from epoll or kqueue or whatever","date":"2012-07-25T23:55:50.530Z","type":"message"}
{"nick":"mikeal","message":"ok","date":"2012-07-25T23:55:51.029Z","type":"message"}
{"nick":"dominictarr","message":"I was thinging we could have a isBuffered(true)","date":"2012-07-25T23:55:54.411Z","type":"message"}
{"nick":"isaacs","message":"then you do readable.read(10) to consume the first 10 bytes.","date":"2012-07-25T23:56:06.924Z","type":"message"}
{"nick":"dominictarr","message":"method, which created the read() method","date":"2012-07-25T23:56:11.392Z","type":"message"}
{"nick":"isaacs","message":"then readable.pipe(writableA)","date":"2012-07-25T23:56:19.617Z","type":"message"}
{"nick":"dominictarr","message":"so you go createReadStream().isBuffered(true)","date":"2012-07-25T23:56:28.238Z","type":"message"}
{"nick":"isaacs","message":".pipe() would call .read() until it returns null, then sit and wait for the next readable event","date":"2012-07-25T23:56:35.181Z","type":"message"}
{"nick":"isaacs","message":"so you never actually have to pause() a thing","date":"2012-07-25T23:56:42.036Z","type":"message"}
{"nick":"isaacs","message":"you just stop reading it","date":"2012-07-25T23:56:43.977Z","type":"message"}
{"nick":"dominictarr","message":"that creates the read method, which pipe checks for,","date":"2012-07-25T23:56:52.800Z","type":"message"}
{"nick":"isaacs","message":"and that lets the TCP buffer fill up","date":"2012-07-25T23:56:53.340Z","type":"message"}
{"nick":"isaacs","message":"the other nice thing about this for userland is that you only have to create the .read() method for your readable userland streams","date":"2012-07-25T23:57:33.960Z","type":"message"}
{"nick":"dominictarr","message":"I'd like to make read() optional though, so that it is still possible to pipe to multiple destinations.","date":"2012-07-25T23:57:36.055Z","type":"message"}
{"nick":"isaacs","message":"and emit the \"readable\" events","date":"2012-07-25T23:57:42.002Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: if we move to read method streams, then it's not optional, but we'll just shim to the old style.","date":"2012-07-25T23:58:21.139Z","type":"message"}
{"nick":"isaacs","message":"old style = what we have now","date":"2012-07-25T23:58:26.652Z","type":"message"}
{"nick":"mikeal","message":"you still need a \"paused\" state so that a stream is in a state that it *can* read but it's intentionally not","date":"2012-07-25T23:58:28.726Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-25T23:58:51.581Z","type":"message"}
{"nick":"isaacs","message":"mikeal: you don't really, though.  because if you just .read() on it, it'll give you those bytes, and thats all","date":"2012-07-25T23:59:03.901Z","type":"message"}
{"nick":"mikeal","message":"this will be slower if each stream has to have a proxied read method","date":"2012-07-25T23:59:13.669Z","type":"message"}
{"nick":"isaacs","message":"the way to test for readableness is to call stream.read() and see if it gives you bytes or null","date":"2012-07-25T23:59:23.588Z","type":"message"}
{"nick":"mikeal","message":"we'd have to create a reference on pipe()","date":"2012-07-25T23:59:29.022Z","type":"message"}
{"nick":"dominictarr","message":"the tricky thing, that I've only just realized recently is that the writable and the readable sides both have their own PASUE state.","date":"2012-07-25T23:59:30.476Z","type":"message"}
{"nick":"mikeal","message":"also, we're breaking, forever, the idea of multipe readable streams to one writable","date":"2012-07-25T23:59:54.376Z","type":"message"}
