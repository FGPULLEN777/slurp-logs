{"nick":"Raynos","message":"https://gist.github.com/3484582","date":"2012-08-27T00:15:31.960Z","type":"message"}
{"nick":"Raynos","message":"What do you think of those events for a list object","date":"2012-08-27T00:15:40.194Z","type":"message"}
{"nick":"wiwillia","reason":"Ping timeout: 244 seconds","date":"2012-08-27T00:16:13.011Z","type":"quit"}
{"nick":"thatguydan","date":"2012-08-27T00:16:15.841Z","type":"join"}
{"nick":"substack","message":"Raynos: splice is a superset of all of those though","date":"2012-08-27T00:27:37.508Z","type":"message"}
{"nick":"substack","message":"perhaps if splice were always emitted","date":"2012-08-27T00:28:00.005Z","type":"message"}
{"nick":"substack","message":"and the others were emitted for convenience","date":"2012-08-27T00:28:11.525Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2012-08-27T00:28:43.773Z","type":"message"}
{"nick":"substack","message":"that would rock since to mirror the state you could just call .splice() on an array with the args provided","date":"2012-08-27T00:28:44.513Z","type":"message"}
{"nick":"Raynos","message":"thats the point","date":"2012-08-27T00:28:45.583Z","type":"message"}
{"nick":"substack","message":"makes sense then","date":"2012-08-27T00:28:51.883Z","type":"message"}
{"nick":"Raynos","message":"splice is for real men","date":"2012-08-27T00:28:56.795Z","type":"message"}
{"nick":"Raynos","message":"the rest are for convenience","date":"2012-08-27T00:29:00.579Z","type":"message"}
{"nick":"substack","message":"got it","date":"2012-08-27T00:29:05.226Z","type":"message"}
{"nick":"Raynos","message":"ill implement the add / remove / move events later","date":"2012-08-27T00:29:11.044Z","type":"message"}
{"nick":"Raynos","message":"splice and syncing first","date":"2012-08-27T00:29:15.370Z","type":"message"}
{"nick":"Raynos","message":"well binding*","date":"2012-08-27T00:29:21.489Z","type":"message"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2012-08-27T00:37:49.734Z","type":"quit"}
{"nick":"thatguydan","date":"2012-08-27T00:38:58.252Z","type":"join"}
{"nick":"Raynos","message":"Man I want Object.observe","date":"2012-08-27T00:39:18.659Z","type":"message"}
{"nick":"Raynos","message":"with Object.observe you can create deltastreams and splice streams from real objects & arrays (respectively)","date":"2012-08-27T00:39:31.692Z","type":"message"}
{"nick":"Raynos","message":"None of this Delta or List abstraction","date":"2012-08-27T00:39:46.012Z","type":"message"}
{"nick":"substack","message":"couldn't that be polyfilled with node-proxy?","date":"2012-08-27T00:50:05.768Z","type":"message"}
{"nick":"Raynos","message":"substack: https://github.com/Raynos/splice-stream#example","date":"2012-08-27T00:50:06.221Z","type":"message"}
{"nick":"Raynos","message":"Still need to implement the sugar add / remove / move events","date":"2012-08-27T00:50:22.774Z","type":"message"}
{"nick":"Raynos","message":"substack: yes it can be polyfilled with ES6 proxies but we don't have those in browsers","date":"2012-08-27T00:50:36.758Z","type":"message"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2012-08-27T00:53:48.804Z","type":"quit"}
{"nick":"thatguydan","date":"2012-08-27T00:54:43.548Z","type":"join"}
{"nick":"Raynos","message":"hmm there is no notion of move, there is just remove followed by insert","date":"2012-08-27T00:55:38.638Z","type":"message"}
{"nick":"Raynos","message":"substack: https://github.com/Raynos/splice-stream#example now with add & remove events","date":"2012-08-27T01:04:18.791Z","type":"message"}
{"nick":"Raynos","message":"substack: If you don't implement element list I will","date":"2012-08-27T01:06:07.693Z","type":"message"}
{"nick":"substack","message":"hooray!","date":"2012-08-27T01:14:10.120Z","type":"message"}
{"nick":"substack","message":"planning on abstracting sorta into element list","date":"2012-08-27T01:14:19.775Z","type":"message"}
{"nick":"substack","message":"move could be handy for doing list element animations","date":"2012-08-27T01:15:30.953Z","type":"message"}
{"nick":"substack","message":"but it's not completely necessary","date":"2012-08-27T01:15:43.379Z","type":"message"}
{"nick":"maxogden","message":"substack: wanna boat hack a) tonight b) tomorrow","date":"2012-08-27T01:25:21.304Z","type":"message"}
{"nick":"substack","message":"plywood materials are available?","date":"2012-08-27T01:26:16.112Z","type":"message"}
{"nick":"maxogden","message":"substack: we gotta get em from johnnys but yea. also im not sure if that powder adhesive stuff i got is correct for what we need","date":"2012-08-27T01:27:35.317Z","type":"message"}
{"nick":"substack","message":"ok","date":"2012-08-27T01:28:21.246Z","type":"message"}
{"nick":"substack","message":"what time should I stop by?","date":"2012-08-27T01:28:26.108Z","type":"message"}
{"nick":"maxogden","message":"im goin to johnnys at 745","date":"2012-08-27T01:28:55.237Z","type":"message"}
{"nick":"substack","message":"what's the street name?","date":"2012-08-27T01:30:02.879Z","type":"message"}
{"nick":"substack","message":"I remember the basic route along embarcadero","date":"2012-08-27T01:30:15.683Z","type":"message"}
{"nick":"maxogden","message":"6th ave","date":"2012-08-27T01:30:34.985Z","type":"message"}
{"nick":"substack","message":"ok sweet, I can meet you down there","date":"2012-08-27T01:30:45.416Z","type":"message"}
{"nick":"maxogden","message":"cool","date":"2012-08-27T01:30:56.235Z","type":"message"}
{"nick":"substack","message":"Raynos: the splice-stream api looks rad","date":"2012-08-27T01:33:34.396Z","type":"message"}
{"nick":"substack","message":"isaacs: npm-www should tell you how to reset your ~/.npmrc password when you use the webapp","date":"2012-08-27T01:37:29.099Z","type":"message"}
{"nick":"substack","message":"...to reset your password","date":"2012-08-27T01:37:36.864Z","type":"message"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2012-08-27T01:39:14.007Z","type":"quit"}
{"nick":"substack","message":"       To reset your password, go to http://admin.npmjs.org/","date":"2012-08-27T01:39:44.016Z","type":"message"}
{"nick":"substack","message":"except for how do I update my .npmrc now","date":"2012-08-27T01:39:53.286Z","type":"message"}
{"nick":"substack","message":"because now they are out of sync","date":"2012-08-27T01:40:01.435Z","type":"message"}
{"nick":"substack","message":"ok deleted some lines from .npmrc did the trick","date":"2012-08-27T01:42:17.647Z","type":"message"}
{"nick":"thatguydan","date":"2012-08-27T01:53:06.342Z","type":"join"}
{"nick":"ryan_stevens","date":"2012-08-27T01:56:52.014Z","type":"join"}
{"nick":"Raynos","message":"mikeal: routes vs mapleTree","date":"2012-08-27T02:07:22.867Z","type":"message"}
{"nick":"Raynos","message":"Why favour one over the other?","date":"2012-08-27T02:07:26.978Z","type":"message"}
{"nick":"mikeal","message":"mapleTree is faster","date":"2012-08-27T02:07:59.217Z","type":"message"}
{"nick":"mikeal","message":"and its built as a tree","date":"2012-08-27T02:08:05.529Z","type":"message"}
{"nick":"mikeal","message":"and i don't think routes is maintained","date":"2012-08-27T02:08:22.346Z","type":"message"}
{"nick":"Raynos","message":"routes isn't maintained","date":"2012-08-27T02:08:43.068Z","type":"message"}
{"nick":"Raynos","message":"I should switch over to mapleTree","date":"2012-08-27T02:09:02.439Z","type":"message"}
{"nick":"Raynos","message":"substack: The name widget is taken on npm. What's a better name?","date":"2012-08-27T02:12:36.952Z","type":"message"}
{"nick":"substack","message":"what's the lib do?","date":"2012-08-27T02:14:46.696Z","type":"message"}
{"nick":"Raynos","message":"substack: https://gist.github.com/3485064","date":"2012-08-27T02:18:29.482Z","type":"message"}
{"nick":"Raynos","message":"substack: https://gist.github.com/3485064#file_0readme.md see updated demo","date":"2012-08-27T02:21:19.561Z","type":"message"}
{"nick":"substack","message":"I see what the pieces are, but what's the problem scope?","date":"2012-08-27T02:23:03.884Z","type":"message"}
{"nick":"Raynos","message":"updated again","date":"2012-08-27T02:23:26.351Z","type":"message"}
{"nick":"Raynos","message":"The problem scope is having a documented Widget interface","date":"2012-08-27T02:23:35.662Z","type":"message"}
{"nick":"Raynos","message":"so that we can say \"the sorta createWidget callback function should return a [Widget][link to widget module] thing\"","date":"2012-08-27T02:24:00.272Z","type":"message"}
{"nick":"Raynos","message":"that way if we need more control over widgets then just appendTo","date":"2012-08-27T02:24:14.546Z","type":"message"}
{"nick":"Raynos","message":"we can add that into the widget module","date":"2012-08-27T02:24:19.300Z","type":"message"}
{"nick":"Raynos","message":"and we dont force users of sorta to implement all that dom stuff","date":"2012-08-27T02:24:27.570Z","type":"message"}
{"nick":"Raynos","message":"they just use Widget","date":"2012-08-27T02:24:31.942Z","type":"message"}
{"nick":"Raynos","message":"also writing that appendTo function over and over is annoying me :P","date":"2012-08-27T02:24:41.128Z","type":"message"}
{"nick":"Raynos","message":"We basically need a standard dom widget interface so we can compose third party view style libraries / modules","date":"2012-08-27T02:25:02.712Z","type":"message"}
{"nick":"substack","message":"I don't like that","date":"2012-08-27T02:25:39.028Z","type":"message"}
{"nick":"substack","message":"just use dom elements","date":"2012-08-27T02:25:47.064Z","type":"message"}
{"nick":"substack","message":"we don't need a lib for it because we already have dom nodes that do everything you would want to do","date":"2012-08-27T02:26:09.619Z","type":"message"}
{"nick":"Raynos","message":"true","date":"2012-08-27T02:26:18.793Z","type":"message"}
{"nick":"substack","message":"if there is a widget thing it will just grow until it reaches feature parity with the dom api","date":"2012-08-27T02:26:23.232Z","type":"message"}
{"nick":"Raynos","message":"in that case sorta should accept a dom element in the callback return value","date":"2012-08-27T02:26:32.467Z","type":"message"}
{"nick":"Raynos","message":"and if I want widget purity I can create my own wrapper div then and there","date":"2012-08-27T02:26:42.884Z","type":"message"}
{"nick":"substack","message":"that seems better","date":"2012-08-27T02:26:58.564Z","type":"message"}
{"nick":"Raynos","message":"in that case sorta doesn't need inner property anymore","date":"2012-08-27T02:27:00.079Z","type":"message"}
{"nick":"Raynos","message":"it just needs wrapper which defaults to div (outer)","date":"2012-08-27T02:27:07.973Z","type":"message"}
{"nick":"substack","message":"sorta already accepts a dom element in the callback :p","date":"2012-08-27T02:27:34.823Z","type":"message"}
{"nick":"substack","message":"sorta(function (row) { return element })","date":"2012-08-27T02:27:44.124Z","type":"message"}
{"nick":"Raynos","message":"i know. I wanted to force it to be a widget :P","date":"2012-08-27T02:27:48.274Z","type":"message"}
{"nick":"Raynos","message":"I still want this widget module because appendTo is annoying me. I just need to think of a better name","date":"2012-08-27T02:28:11.357Z","type":"message"}
{"nick":"substack","message":"sorta(function (row, element) {}) could also work","date":"2012-08-27T02:28:16.318Z","type":"message"}
{"nick":"substack","message":"and you append your junk into element yo self","date":"2012-08-27T02:28:28.456Z","type":"message"}
{"nick":"Raynos","message":"yeah","date":"2012-08-27T02:28:36.354Z","type":"message"}
{"nick":"Raynos","message":"that's probably cleaner","date":"2012-08-27T02:28:40.947Z","type":"message"}
{"nick":"Raynos","message":"because then there is no return value","date":"2012-08-27T02:28:45.302Z","type":"message"}
{"nick":"substack","message":"agreed","date":"2012-08-27T02:28:46.793Z","type":"message"}
{"nick":"Raynos","message":"which means it can be crazy async","date":"2012-08-27T02:28:51.658Z","type":"message"}
{"nick":"substack","message":"yeps","date":"2012-08-27T02:28:54.211Z","type":"message"}
{"nick":"Raynos","message":"cool","date":"2012-08-27T02:29:11.364Z","type":"message"}
{"nick":"substack","message":"sorta({ list : l, item : i }, function (row, element) {}) as the long-form","date":"2012-08-27T02:29:45.828Z","type":"message"}
{"nick":"substack","message":"seems legit","date":"2012-08-27T02:29:48.723Z","type":"message"}
{"nick":"Raynos","message":"https://gist.github.com/3485064#L32","date":"2012-08-27T02:30:43.498Z","type":"message"}
{"nick":"substack","message":"the stream could also be a row","date":"2012-08-27T02:33:10.103Z","type":"message"}
{"nick":"substack","message":"that has a .value and emits events on state changes","date":"2012-08-27T02:33:31.678Z","type":"message"}
{"nick":"Raynos","message":"I think it should be","date":"2012-08-27T02:33:54.155Z","type":"message"}
{"nick":"Raynos","message":"whatever you add to the list","date":"2012-08-27T02:33:58.732Z","type":"message"}
{"nick":"Raynos","message":"in this case the delta stream I added to the list","date":"2012-08-27T02:34:05.273Z","type":"message"}
{"nick":"Raynos","message":"write a row module if you want and add that to the lists","date":"2012-08-27T02:34:26.351Z","type":"message"}
{"nick":"substack","message":"but how do I get at the current value","date":"2012-08-27T02:34:30.459Z","type":"message"}
{"nick":"Raynos","message":"stream.createDelta().toJSON()","date":"2012-08-27T02:34:53.540Z","type":"message"}
{"nick":"substack","message":":/","date":"2012-08-27T02:35:00.067Z","type":"message"}
{"nick":"Raynos","message":":D","date":"2012-08-27T02:35:02.639Z","type":"message"}
{"nick":"substack","message":"too indirect","date":"2012-08-27T02:35:06.775Z","type":"message"}
{"nick":"Raynos","message":"if you want to pass something in","date":"2012-08-27T02:35:12.849Z","type":"message"}
{"nick":"substack","message":"why can't it just update an object in-place?","date":"2012-08-27T02:35:14.191Z","type":"message"}
{"nick":"Raynos","message":"then pass in anything you want","date":"2012-08-27T02:35:16.665Z","type":"message"}
{"nick":"substack","message":"that ref should exist someplace anyhow","date":"2012-08-27T02:35:23.480Z","type":"message"}
{"nick":"ryan_stevens","reason":"*.net *.split","date":"2012-08-27T02:35:39.053Z","type":"quit"}
{"nick":"substack","message":"anyways boat hacking &","date":"2012-08-27T02:35:51.174Z","type":"message"}
{"nick":"Raynos","message":"sorta.write([[0, 0, RowObject()], Date.now()])","date":"2012-08-27T02:35:56.521Z","type":"message"}
{"nick":"Raynos","message":"just add anything you want into sorta. It should forward any object you add to it directly to the callback","date":"2012-08-27T02:36:19.862Z","type":"message"}
{"nick":"substack","message":"and then straight back home and waking up early","date":"2012-08-27T02:36:21.203Z","type":"message"}
{"nick":"Raynos","message":"good luck!","date":"2012-08-27T02:36:26.978Z","type":"message"}
{"nick":"Raynos","message":"I'll have written a element list by the morning :P","date":"2012-08-27T02:36:35.618Z","type":"message"}
{"nick":"substack","message":"go for it","date":"2012-08-27T02:36:42.876Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-08-27T02:38:34.053Z","type":"quit"}
{"nick":"joshwnj","date":"2012-08-27T02:47:39.081Z","type":"join"}
{"nick":"mikeal","date":"2012-08-27T03:24:14.716Z","type":"join"}
{"nick":"ryan_stevens","date":"2012-08-27T03:38:08.490Z","type":"join"}
{"nick":"st_luke_","date":"2012-08-27T03:41:47.549Z","type":"join"}
{"nick":"st_luke","reason":"Disconnected by services","date":"2012-08-27T03:42:41.358Z","type":"quit"}
{"nick":"st_luke_","new_nick":"st_lue","date":"2012-08-27T03:42:44.632Z","type":"nick"}
{"nick":"st_lue","new_nick":"st_luke","date":"2012-08-27T03:42:47.017Z","type":"nick"}
{"nick":"st_luke_","date":"2012-08-27T03:43:15.841Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2012-08-27T03:59:03.490Z","type":"quit"}
{"nick":"st_luke","date":"2012-08-27T04:02:43.238Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2012-08-27T04:32:27.788Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-08-27T04:37:06.114Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-08-27T04:55:29.294Z","type":"quit"}
{"nick":"timoxley","date":"2012-08-27T05:30:58.087Z","type":"join"}
{"nick":"Raynos","message":"substack: https://github.com/Raynos/element-list","date":"2012-08-27T05:35:24.203Z","type":"message"}
{"nick":"simcop2387","reason":"Excess Flood","date":"2012-08-27T06:08:17.204Z","type":"quit"}
{"nick":"simcop2387","date":"2012-08-27T06:09:21.847Z","type":"join"}
{"nick":"mikeal","date":"2012-08-27T06:10:28.861Z","type":"join"}
{"nick":"sveisvei","reason":"Quit: Connection closed for inactivity","date":"2012-08-27T06:15:00.275Z","type":"quit"}
{"nick":"substack","message":"Raynos: I don't like the function signature","date":"2012-08-27T06:29:29.654Z","type":"message"}
{"nick":"substack","message":"(item, element, remove)","date":"2012-08-27T06:29:31.377Z","type":"message"}
{"nick":"substack","message":"item is just element.parentNode","date":"2012-08-27T06:29:38.558Z","type":"message"}
{"nick":"Raynos","message":"substak: item is the thing you pass in","date":"2012-08-27T06:29:49.535Z","type":"message"}
{"nick":"Raynos","message":"its your row","date":"2012-08-27T06:29:56.937Z","type":"message"}
{"nick":"Raynos","message":"list.push(item) -> (item, element, remove)","date":"2012-08-27T06:30:15.666Z","type":"message"}
{"nick":"substack","message":"oh then element and remove are","date":"2012-08-27T06:30:26.877Z","type":"message"}
{"nick":"substack","message":"shouldn't remove come from the splice stream?","date":"2012-08-27T06:30:36.922Z","type":"message"}
{"nick":"Raynos","message":"yes it should","date":"2012-08-27T06:30:52.216Z","type":"message"}
{"nick":"substack","message":"I guess I can just always ignore the other 2 parameters","date":"2012-08-27T06:31:06.925Z","type":"message"}
{"nick":"Raynos","message":"but I have no idea how to get the remove back up","date":"2012-08-27T06:31:09.024Z","type":"message"}
{"nick":"Raynos","message":"element is LI","date":"2012-08-27T06:31:19.095Z","type":"message"}
{"nick":"Raynos","message":"remove is a temporary hack","date":"2012-08-27T06:31:30.642Z","type":"message"}
{"nick":"Raynos","message":"as I dont know how I can cleanly mutate the list from within that callback","date":"2012-08-27T06:31:39.272Z","type":"message"}
{"nick":"substack","message":"list.remove() instead?","date":"2012-08-27T06:32:17.593Z","type":"message"}
{"nick":"Raynos","message":"but the signature is sorta({ list : l, item : i }, function (row, element, extraRemoveFunction) {})","date":"2012-08-27T06:32:20.582Z","type":"message"}
{"nick":"Raynos","message":"yeah list.remove() would make sense","date":"2012-08-27T06:33:01.198Z","type":"message"}
{"nick":"Raynos","message":"but passing in the list object to that callback feels dirty","date":"2012-08-27T06:33:12.185Z","type":"message"}
{"nick":"substack","message":"handle it in splice-stream","date":"2012-08-27T06:33:15.061Z","type":"message"}
{"nick":"substack","message":"no don't pass it at all","date":"2012-08-27T06:33:21.952Z","type":"message"}
{"nick":"substack","message":"why does the callback need to even know about the list","date":"2012-08-27T06:33:28.273Z","type":"message"}
{"nick":"Raynos","message":"it doesnt","date":"2012-08-27T06:33:37.878Z","type":"message"}
{"nick":"Raynos","message":"substack: https://github.com/Raynos/element-list/blob/master/example/widget.js#L17","date":"2012-08-27T06:33:55.057Z","type":"message"}
{"nick":"substack","message":"also how do I listen for updates to values","date":"2012-08-27T06:34:07.813Z","type":"message"}
{"nick":"Raynos","message":"list.push(thingThatemitsUpdateEvents)","date":"2012-08-27T06:34:28.588Z","type":"message"}
{"nick":"substack","message":"like in sorta I would do row.on('update', function () { elem.querySelector('.foo').textContent = row.value.foo })","date":"2012-08-27T06:34:34.865Z","type":"message"}
{"nick":"Raynos","message":"I do list.push(deltaStream)","date":"2012-08-27T06:34:44.528Z","type":"message"}
{"nick":"substack","message":"but what if I don't want to push!","date":"2012-08-27T06:34:56.378Z","type":"message"}
{"nick":"substack","message":"what if I want to update elements in-place?","date":"2012-08-27T06:35:02.765Z","type":"message"}
{"nick":"Raynos","message":"then update them in plae","date":"2012-08-27T06:35:13.673Z","type":"message"}
{"nick":"Raynos","message":"substack: https://github.com/Raynos/element-list/blob/master/example/widget.js#L15","date":"2012-08-27T06:35:20.453Z","type":"message"}
{"nick":"Raynos","message":"I'm updating the element in place there.","date":"2012-08-27T06:35:25.852Z","type":"message"}
{"nick":"Raynos","message":"the only thing I havn't done yet is moving dom nodes in place","date":"2012-08-27T06:36:31.707Z","type":"message"}
{"nick":"Raynos","message":"I destroy and create dom nodes which is inefficient","date":"2012-08-27T06:36:44.830Z","type":"message"}
{"nick":"substack","message":"yes don't do that","date":"2012-08-27T06:36:58.905Z","type":"message"}
{"nick":"substack","message":"so updating things in place is basically the thing that I would expect a library like this to do","date":"2012-08-27T06:37:20.018Z","type":"message"}
{"nick":"substack","message":"but this library doesn't do that >_<","date":"2012-08-27T06:37:28.312Z","type":"message"}
{"nick":"Raynos","message":">_<","date":"2012-08-27T06:37:32.102Z","type":"message"}
{"nick":"Raynos","message":"it updates the content of the li in plae","date":"2012-08-27T06:37:46.144Z","type":"message"}
{"nick":"substack","message":"and updating things in place will greatly influence how the api works","date":"2012-08-27T06:37:46.338Z","type":"message"}
{"nick":"Raynos","message":"it just doesnt move the li in place","date":"2012-08-27T06:37:50.201Z","type":"message"}
{"nick":"substack","message":"because what you have now will destroy and create nodes","date":"2012-08-27T06:37:54.541Z","type":"message"}
{"nick":"Raynos","message":"if you splice an item of the list","date":"2012-08-27T06:38:05.545Z","type":"message"}
{"nick":"substack","message":"instead of emitting update events that I can hook onto to update the elements","date":"2012-08-27T06:38:07.417Z","type":"message"}
{"nick":"Raynos","message":"and then splice it back on","date":"2012-08-27T06:38:08.955Z","type":"message"}
{"nick":"Raynos","message":"it calls the callback again","date":"2012-08-27T06:38:11.978Z","type":"message"}
{"nick":"Raynos","message":"The problem is","date":"2012-08-27T06:39:00.767Z","type":"message"}
{"nick":"sveisvei","date":"2012-08-27T06:39:12.314Z","type":"join"}
{"nick":"Raynos","message":"how do i distinquish someone removing an item through the splice-stream and putting a new item in","date":"2012-08-27T06:39:15.057Z","type":"message"}
{"nick":"Raynos","message":"or someone moving an item","date":"2012-08-27T06:39:18.464Z","type":"message"}
{"nick":"Raynos","message":"I guess I dont","date":"2012-08-27T06:39:24.155Z","type":"message"}
{"nick":"substack","message":"I thought crdt handled all that?","date":"2012-08-27T06:39:43.229Z","type":"message"}
{"nick":"Raynos","message":"it does but splice-stream isnt integrated with crdt yet","date":"2012-08-27T06:40:32.499Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/Raynos/element-list/blob/master/index.js#L17 currently it creates a new LI for every item","date":"2012-08-27T06:40:57.415Z","type":"message"}
{"nick":"Raynos","message":"It needs some work to see how to handle the move event as it doesnt exist yet","date":"2012-08-27T06:41:09.871Z","type":"message"}
{"nick":"substack","message":"ah","date":"2012-08-27T06:41:34.304Z","type":"message"}
{"nick":"Raynos","message":"because you can't move an item from one pos in the array to another in a single splice","date":"2012-08-27T06:41:41.148Z","type":"message"}
{"nick":"Raynos","message":"so you need to maintain state across multiple splices","date":"2012-08-27T06:41:48.184Z","type":"message"}
{"nick":"Raynos","message":"and then its a pain in the ass to distinquish between a real move and a real remove + add","date":"2012-08-27T06:42:01.570Z","type":"message"}
{"nick":"substack","message":"real remove + add == move","date":"2012-08-27T06:42:22.548Z","type":"message"}
{"nick":"Raynos","message":"that simplifies things","date":"2012-08-27T06:42:52.975Z","type":"message"}
{"nick":"substack","message":"if the refs are the same and it happened on the same tick","date":"2012-08-27T06:42:58.010Z","type":"message"}
{"nick":"Raynos","message":"oh same tick","date":"2012-08-27T06:43:09.310Z","type":"message"}
{"nick":"Raynos","message":"interesting","date":"2012-08-27T06:43:10.901Z","type":"message"}
{"nick":"Raynos","message":"meh the same tickc thing feels like a hack","date":"2012-08-27T06:43:31.767Z","type":"message"}
{"nick":"Raynos","message":"if the ref is the same then the ref is the same","date":"2012-08-27T06:43:37.079Z","type":"message"}
{"nick":"Raynos","message":"if you want a real remove + add, make a new reference","date":"2012-08-27T06:43:45.307Z","type":"message"}
{"nick":"substack","message":"yes","date":"2012-08-27T06:44:28.504Z","type":"message"}
{"nick":"substack","message":"I can't think of any case where using the same ref to remove + add and getting a move would not be what you actually want","date":"2012-08-27T06:45:16.570Z","type":"message"}
{"nick":"Raynos","message":"substack: btw the update in place of LI content is done my FormStream and TextNode stream ( https://github.com/Raynos/element-list/blob/master/example/widget.js#L15 ). FormStream emits deltas from <input> field which are piped into the textnode stream which reads deltas and writes to text nodes in the DOM","date":"2012-08-27T06:45:31.123Z","type":"message"}
{"nick":"substack","message":"same tick is not a hack, that's a standard trick for batching up a bunch of ops","date":"2012-08-27T06:45:44.292Z","type":"message"}
{"nick":"substack","message":"especially if you're going to sent them out via io anyways","date":"2012-08-27T06:45:54.741Z","type":"message"}
{"nick":"Raynos","message":"I meant","date":"2012-08-27T06:45:55.442Z","type":"message"}
{"nick":"Raynos","message":"iff the add / remove comes in a different tick, consider it a real add + remove","date":"2012-08-27T06:46:06.559Z","type":"message"}
{"nick":"Raynos","message":"that feels like a hack","date":"2012-08-27T06:46:10.357Z","type":"message"}
{"nick":"sveisvei","reason":"Changing host","date":"2012-08-27T06:46:12.843Z","type":"quit"}
{"nick":"sveisvei","date":"2012-08-27T06:46:13.039Z","type":"join"}
{"nick":"substack","message":"why?","date":"2012-08-27T06:46:35.881Z","type":"message"}
{"nick":"substack","message":"sounds legit to me","date":"2012-08-27T06:46:40.304Z","type":"message"}
{"nick":"substack","message":"then you can deref things when you remove them on the remote side","date":"2012-08-27T06:47:10.078Z","type":"message"}
{"nick":"substack","message":"and not need to worry about keeping elements you might need later in memory","date":"2012-08-27T06:47:23.501Z","type":"message"}
{"nick":"Raynos","message":"Im confused, I wont worry about the tick thing","date":"2012-08-27T06:47:38.659Z","type":"message"}
{"nick":"Raynos","message":"list.remove(item). list.splice(index, 0, item) // doesn't create a new dom node. Just moves it around","date":"2012-08-27T06:48:55.155Z","type":"message"}
{"nick":"substack","message":"oh item is *value*","date":"2012-08-27T06:49:12.176Z","type":"message"}
{"nick":"Raynos","message":"list.remove(item). process.nextTick(function () { list.splice(index, 0, item) // creates a new dom node })","date":"2012-08-27T06:49:15.159Z","type":"message"}
{"nick":"Raynos","message":"Yes item is the value","date":"2012-08-27T06:49:20.053Z","type":"message"}
{"nick":"Raynos","message":"I should add a list.remove method","date":"2012-08-27T06:49:32.013Z","type":"message"}
{"nick":"substack","message":"you should just have item.value, item.element, and item should emit events when its state changes","date":"2012-08-27T06:50:24.824Z","type":"message"}
{"nick":"substack","message":"and yes a list.remove()","date":"2012-08-27T06:51:01.400Z","type":"message"}
{"nick":"substack","message":"could be written in terms of splice()","date":"2012-08-27T06:51:08.069Z","type":"message"}
{"nick":"substack","message":"actually just use splice","date":"2012-08-27T06:51:17.044Z","type":"message"}
{"nick":"Raynos","message":"well remove(item) is easy","date":"2012-08-27T06:51:27.254Z","type":"message"}
{"nick":"substack","message":"keep the api the same as Array","date":"2012-08-27T06:51:29.868Z","type":"message"}
{"nick":"Raynos","message":"because otherwise you need splice(list.indexOf(item), 1)","date":"2012-08-27T06:51:48.915Z","type":"message"}
{"nick":"substack","message":"just like for regular arrays","date":"2012-08-27T06:52:03.159Z","type":"message"}
{"nick":"substack","message":"or","date":"2012-08-27T06:52:14.275Z","type":"message"}
{"nick":"Raynos","message":"well but thats annoying when we have a list","date":"2012-08-27T06:52:29.989Z","type":"message"}
{"nick":"substack","message":"item.value is the value, item.element is the dom node, item.index is the index","date":"2012-08-27T06:52:32.436Z","type":"message"}
{"nick":"substack","message":"then you can just list.splice(item.index, 1)","date":"2012-08-27T06:52:41.379Z","type":"message"}
{"nick":"Raynos","message":"that will break","date":"2012-08-27T06:52:48.154Z","type":"message"}
{"nick":"Raynos","message":"if the node is moved around on your behalf","date":"2012-08-27T06:52:53.463Z","type":"message"}
{"nick":"Raynos","message":"and item is the value","date":"2012-08-27T06:53:14.166Z","type":"message"}
{"nick":"substack","message":"then don't let people move things around at all","date":"2012-08-27T06:53:21.595Z","type":"message"}
{"nick":"substack","message":"make it go through the stream from the server","date":"2012-08-27T06:53:27.635Z","type":"message"}
{"nick":"Raynos","message":"but it will still break","date":"2012-08-27T06:53:41.068Z","type":"message"}
{"nick":"Raynos","message":"because the function doesnt get called with the new index","date":"2012-08-27T06:53:47.188Z","type":"message"}
{"nick":"dominictarr","date":"2012-08-27T06:53:55.394Z","type":"join"}
{"nick":"Raynos","message":"you need to do list.indexOf to get the correct index","date":"2012-08-27T06:53:58.662Z","type":"message"}
{"nick":"joshwnj","reason":"Ping timeout: 260 seconds","date":"2012-08-27T06:54:09.631Z","type":"quit"}
{"nick":"substack","message":"that's why you emit events on item!","date":"2012-08-27T06:55:36.773Z","type":"message"}
{"nick":"substack","message":"item.on('update', function () { /* called when there's a new index or value */ })","date":"2012-08-27T06:55:53.216Z","type":"message"}
{"nick":"substack","message":"and you can have listeners in the same scope as you create the inner span","date":"2012-08-27T06:56:12.484Z","type":"message"}
{"nick":"substack","message":"in your example","date":"2012-08-27T06:56:16.555Z","type":"message"}
{"nick":"substack","message":"and you can update the elements all in the same place","date":"2012-08-27T06:56:27.519Z","type":"message"}
{"nick":"substack","message":"otherwise you'd have to expose span to the outside scope or query it through the container element","date":"2012-08-27T06:58:06.053Z","type":"message"}
{"nick":"Raynos","message":"...","date":"2012-08-27T06:59:02.864Z","type":"message"}
{"nick":"Raynos","message":"Oh interesting","date":"2012-08-27T06:59:19.024Z","type":"message"}
{"nick":"Raynos","message":"you actually want to get an event when there is a new index","date":"2012-08-27T06:59:26.724Z","type":"message"}
{"nick":"Raynos","message":"you can trivially get events when the value changes","date":"2012-08-27T06:59:34.164Z","type":"message"}
{"nick":"substack","message":"yes you get a new event when the index changes in sorta","date":"2012-08-27T06:59:47.799Z","type":"message"}
{"nick":"substack","message":"it's useful if you want to show the rank in the element","date":"2012-08-27T07:00:01.640Z","type":"message"}
{"nick":"substack","message":"which is really common for lists of things","date":"2012-08-27T07:00:07.027Z","type":"message"}
{"nick":"Raynos","message":"agreed","date":"2012-08-27T07:00:09.606Z","type":"message"}
{"nick":"Raynos","message":"(value, element, index)","date":"2012-08-27T07:00:33.171Z","type":"message"}
{"nick":"Raynos","message":"and if the value is an event emitter the element-list will emit index events when the index changes","date":"2012-08-27T07:00:48.931Z","type":"message"}
{"nick":"Raynos","message":"or wait","date":"2012-08-27T07:01:11.909Z","type":"message"}
{"nick":"Raynos","message":"maybe the list widget should do this","date":"2012-08-27T07:01:18.962Z","type":"message"}
{"nick":"Raynos","message":"Ugh","date":"2012-08-27T07:01:27.329Z","type":"message"}
{"nick":"Raynos","message":"I need to think about it more","date":"2012-08-27T07:01:31.191Z","type":"message"}
{"nick":"substack","message":"or item.value, item.element, item.index","date":"2012-08-27T07:01:43.028Z","type":"message"}
{"nick":"Raynos","message":"meh uncessary object :P","date":"2012-08-27T07:01:54.939Z","type":"message"}
{"nick":"substack","message":"then you can just emit item in the list elements too and inspect the pieces","date":"2012-08-27T07:01:56.828Z","type":"message"}
{"nick":"substack","message":"anyhow working on ci a little here before getting some sleep","date":"2012-08-27T07:03:21.900Z","type":"message"}
{"nick":"dools","message":"i emit timely items \"i\" times","date":"2012-08-27T07:05:44.680Z","type":"message"}
{"nick":"Raynos","message":"ill work on it some more tomorrow night","date":"2012-08-27T07:07:05.128Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: Feedback on splice-stream & delta-stream appreciated, I want to find a way to make those compatible with crdt","date":"2012-08-27T07:07:45.099Z","type":"message"}
{"nick":"dominictarr","message":"Raynos, just writing a reply now","date":"2012-08-27T07:08:02.416Z","type":"message"}
{"nick":"Raynos","message":"o/","date":"2012-08-27T07:08:35.937Z","type":"message"}
{"nick":"substack","message":"basically need browser badges on all of npm","date":"2012-08-27T07:09:01.234Z","type":"message"}
{"nick":"Raynos","message":"yes we do :P","date":"2012-08-27T07:09:17.992Z","type":"message"}
{"nick":"substack","action":"builds that","date":"2012-08-27T07:09:25.198Z","type":"action"}
{"nick":"Raynos","message":"especially node-tap","date":"2012-08-27T07:09:25.718Z","type":"message"}
{"nick":"substack","message":"and an `npm star` bot that stars and de-stars based on browser compat","date":"2012-08-27T07:10:32.130Z","type":"message"}
{"nick":"dominictarr","message":"Raynos, check your inbox!","date":"2012-08-27T07:11:21.886Z","type":"message"}
{"nick":"Raynos","message":"this presentations file explains","date":"2012-08-27T07:15:11.310Z","type":"message"}
{"nick":"Raynos","message":"why my crdt doesnt work like I expected it to","date":"2012-08-27T07:15:19.772Z","type":"message"}
{"nick":"Raynos","message":"I cant change prop A on row X in node Y and prop B on row X in node Z","date":"2012-08-27T07:15:37.601Z","type":"message"}
{"nick":"Raynos","message":"and then merge those two changes","date":"2012-08-27T07:15:43.319Z","type":"message"}
{"nick":"Raynos","message":"because crdt docs update entire rows at once","date":"2012-08-27T07:16:01.749Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: how should I do partial updates to a row like that?","date":"2012-08-27T07:16:30.249Z","type":"message"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2012-08-27T07:17:02.212Z","type":"quit"}
{"nick":"substack","message":"if you have a single data source it isn't a problem","date":"2012-08-27T07:17:55.655Z","type":"message"}
{"nick":"substack","message":"and you're not merging","date":"2012-08-27T07:17:58.906Z","type":"message"}
{"nick":"substack","message":"like if splice stream data only ever flows one way, from the server to clients","date":"2012-08-27T07:18:22.528Z","type":"message"}
{"nick":"Raynos","message":"nope this is meant for peer to peer","date":"2012-08-27T07:19:05.184Z","type":"message"}
{"nick":"Raynos","message":"where any peer can flow changes to any other peer","date":"2012-08-27T07:19:12.504Z","type":"message"}
{"nick":"Raynos","message":"in arbitary orders","date":"2012-08-27T07:19:17.088Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: https://github.com/dominictarr/presentations/blob/master/crdt.md this is super awesome, thanks.","date":"2012-08-27T07:26:25.409Z","type":"message"}
{"nick":"dominictarr","message":"Raynos, It's A talk I gave the other day is Krakow","date":"2012-08-27T07:41:09.393Z","type":"message"}
{"nick":"dominictarr","message":"s/is/in","date":"2012-08-27T07:41:20.049Z","type":"message"}
{"nick":"dominictarr","message":"Raynos, you should be able to \"update prop A on row X in node Y and prop B on row X in node Z\"","date":"2012-08-27T07:42:08.802Z","type":"message"}
{"nick":"dominictarr","message":"because Y will have {A: 1} and Z will have {B: 2} and that merges fine.","date":"2012-08-27T07:42:41.858Z","type":"message"}
{"nick":"dominictarr","message":"you'll just have to wait for the messages to arrive. what are you seeing?","date":"2012-08-27T07:43:13.066Z","type":"message"}
{"nick":"Raynos","message":"The talk implies that the [key, value] updates are whole value updates","date":"2012-08-27T07:45:28.271Z","type":"message"}
{"nick":"Raynos","message":"I think im just mis interpreting things","date":"2012-08-27T07:45:38.518Z","type":"message"}
{"nick":"Raynos","message":"I'll try to reproduce it","date":"2012-08-27T07:45:48.575Z","type":"message"}
{"nick":"dominictarr","message":"I think that is a bug.","date":"2012-08-27T07:47:48.506Z","type":"message"}
{"nick":"dominictarr","message":"I explained in the issue","date":"2012-08-27T07:48:17.930Z","type":"message"}
{"nick":"Raynos","message":"Oh interesting","date":"2012-08-27T07:49:58.621Z","type":"message"}
{"nick":"Raynos","message":"sources get their own timers","date":"2012-08-27T07:50:04.194Z","type":"message"}
{"nick":"dominictarr","message":"yeah, so that should work","date":"2012-08-27T07:50:58.085Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: should I make a PR for turning a set into a splice-stream or should I re-implement the splice stream interface to work cleanly with non-local changes?","date":"2012-08-27T08:01:58.694Z","type":"message"}
{"nick":"dominictarr","message":"Raynos, I don't want to add any extra streaming interfaces to crdt.","date":"2012-08-27T08:05:58.797Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: Then I'll push it into splice stream","date":"2012-08-27T08:06:21.885Z","type":"message"}
{"nick":"dominictarr","message":"if you want to do that, make something that takes a set as an argument.","date":"2012-08-27T08:06:23.481Z","type":"message"}
{"nick":"dominictarr","message":"yeah.","date":"2012-08-27T08:06:27.814Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: What do you use to synchronize crdt Rows / Sets with UI components? Manual event glueing?","date":"2012-08-27T08:07:02.538Z","type":"message"}
{"nick":"thatguydan","reason":"Ping timeout: 256 seconds","date":"2012-08-27T08:07:18.950Z","type":"quit"}
{"nick":"dominictarr","message":"yeah, so far. it's pretty easy.","date":"2012-08-27T08:07:25.334Z","type":"message"}
{"nick":"dominictarr","message":"I use http://vanilla-js.com/","date":"2012-08-27T08:07:44.929Z","type":"message"}
{"nick":"dominictarr","message":"Vanilla JS","date":"2012-08-27T08:07:53.887Z","type":"message"}
{"nick":"Raynos","message":"pretty easy :P","date":"2012-08-27T08:08:26.321Z","type":"message"}
{"nick":"Raynos","message":"you use all kinds of jquery UI wizardry","date":"2012-08-27T08:08:34.287Z","type":"message"}
{"nick":"Raynos","message":"I've seen you","date":"2012-08-27T08:08:36.325Z","type":"message"}
{"nick":"Raynos","message":"I think the streaming approach is a lot cleaner","date":"2012-08-27T08:09:01.117Z","type":"message"}
{"nick":"dominictarr","message":"yeah, I was looking for something that let me drag and drop to reorder the list.","date":"2012-08-27T08:15:57.217Z","type":"message"}
{"nick":"dominictarr","message":"jquery came out pretty ugly, I was even too embarrased to make it a seperate module.","date":"2012-08-27T08:16:32.670Z","type":"message"}
{"nick":"Raynos","message":"Ill going to write that tomorrow","date":"2012-08-27T08:16:34.258Z","type":"message"}
{"nick":"Raynos","message":"depends on how diffficult it is","date":"2012-08-27T08:16:40.109Z","type":"message"}
{"nick":"dominictarr","message":"would prefer a vanilla js thing.","date":"2012-08-27T08:16:52.415Z","type":"message"}
{"nick":"Raynos","message":"._.","date":"2012-08-27T08:17:03.720Z","type":"message"}
{"nick":"Raynos","message":"Who wouldn't","date":"2012-08-27T08:17:10.687Z","type":"message"}
{"nick":"dominictarr","message":"the jquery UI draggable is like 1.5k lines","date":"2012-08-27T08:17:19.946Z","type":"message"}
{"nick":"dominictarr","message":"so I figured it's pretty hard","date":"2012-08-27T08:17:27.429Z","type":"message"}
{"nick":"dominictarr","message":"or maybe it's 3000 can't remember.","date":"2012-08-27T08:17:39.604Z","type":"message"}
{"nick":"dominictarr","message":"keyboard controls would be cool too.","date":"2012-08-27T08:17:54.575Z","type":"message"}
{"nick":"dominictarr","message":"I have some stuff here: https://github.com/dominictarr/vu","date":"2012-08-27T08:18:24.488Z","type":"message"}
{"nick":"dominictarr","message":"that I was experimenting with back in the summer.","date":"2012-08-27T08:18:36.455Z","type":"message"}
{"nick":"dominictarr","message":"it has reordering, but only keys, not mouse.","date":"2012-08-27T08:18:50.484Z","type":"message"}
{"nick":"Raynos","message":"I doubt its hard","date":"2012-08-27T08:19:30.663Z","type":"message"}
{"nick":"Raynos","message":"its just using the html5 drag & drop API","date":"2012-08-27T08:19:46.765Z","type":"message"}
{"nick":"Raynos","message":"First I need to fix splice-stream & element-list to be less stupid","date":"2012-08-27T08:20:37.901Z","type":"message"}
{"nick":"dominictarr","message":"doesn't work in chrome, when I tested.","date":"2012-08-27T08:20:38.604Z","type":"message"}
{"nick":"dominictarr","message":"false alarm. it does work","date":"2012-08-27T08:22:39.055Z","type":"message"}
{"nick":"dominictarr","message":"yeah, that approach should be way easier.","date":"2012-08-27T08:23:03.881Z","type":"message"}
{"nick":"Raynos","message":"yeah I write a lot of modern browsers only code","date":"2012-08-27T08:23:43.699Z","type":"message"}
{"nick":"Raynos","message":"its a lot easier","date":"2012-08-27T08:23:46.145Z","type":"message"}
{"nick":"Raynos","message":"I can always go back and make demos work in other browsers later","date":"2012-08-27T08:23:56.632Z","type":"message"}
{"nick":"dominictarr","message":"no body cool uses those old browsers anyway","date":"2012-08-27T08:25:48.395Z","type":"message"}
{"nick":"dominictarr","message":"who wants to code for uncool people?","date":"2012-08-27T08:26:07.500Z","type":"message"}
{"nick":"Raynos","message":"thats my philosophy","date":"2012-08-27T08:26:23.982Z","type":"message"}
{"nick":"Raynos","message":"There are enough cool people that I can make good money just coding for them","date":"2012-08-27T08:26:42.459Z","type":"message"}
{"nick":"Raynos","message":"other people can code for the uncool people","date":"2012-08-27T08:26:51.589Z","type":"message"}
{"nick":"Raynos","message":"Btw, SVG is awesome","date":"2012-08-27T08:28:20.629Z","type":"message"}
{"nick":"Raynos","message":"Why do people use so much HTML and so little SVG","date":"2012-08-27T08:28:29.048Z","type":"message"}
{"nick":"dominictarr","message":"who do you work for?","date":"2012-08-27T08:31:47.185Z","type":"message"}
{"nick":"dominictarr","message":"you do consulting?","date":"2012-08-27T08:31:52.616Z","type":"message"}
{"nick":"dominictarr","message":"or contracting?","date":"2012-08-27T08:32:07.589Z","type":"message"}
{"nick":"Raynos","message":"I work for a startup in San fran","date":"2012-08-27T08:34:39.475Z","type":"message"}
{"nick":"Raynos","message":"We build english learning web apps","date":"2012-08-27T08:34:56.182Z","type":"message"}
{"nick":"Raynos","message":"backend is entirely node of course.","date":"2012-08-27T08:35:02.801Z","type":"message"}
{"nick":"dominictarr","message":"oh, interesting. I've been thinking about english learning webapps, from travelling in Cambodia","date":"2012-08-27T08:37:48.279Z","type":"message"}
{"nick":"dominictarr","message":"substack, maxogden check this out https://www.airbnb.com/rooms/542031","date":"2012-08-27T08:38:04.646Z","type":"message"}
{"nick":"Raynos","message":"thats crazy","date":"2012-08-27T08:38:40.774Z","type":"message"}
{"nick":"substack","message":"saw it!","date":"2012-08-27T08:38:42.940Z","type":"message"}
{"nick":"dominictarr","message":"^ is pretty cool, but I can think of one significant improvement: what if it was also a boat","date":"2012-08-27T08:38:43.939Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: your going to be at summer camp right?","date":"2012-08-27T08:38:49.521Z","type":"message"}
{"nick":"dominictarr","message":"no, I'm in Europe. don't have the budget for trip to US at the moment.","date":"2012-08-27T08:39:28.684Z","type":"message"}
{"nick":"substack","message":"every city should have hundreds of those things","date":"2012-08-27T08:40:04.512Z","type":"message"}
{"nick":"thatguydan","date":"2012-08-27T08:40:15.873Z","type":"join"}
{"nick":"Raynos","message":"oh :(","date":"2012-08-27T08:41:15.586Z","type":"message"}
{"nick":"dominictarr","message":"come to nodedublin!","date":"2012-08-27T08:41:33.628Z","type":"message"}
{"nick":"Raynos","message":"Maybe I should","date":"2012-08-27T08:41:42.705Z","type":"message"}
{"nick":"Raynos","message":"If I can convince one of these conferences to let me speak do they pay my ticket?","date":"2012-08-27T08:41:57.937Z","type":"message"}
{"nick":"dominictarr","message":"to the conference? of course.","date":"2012-08-27T08:43:11.337Z","type":"message"}
{"nick":"dominictarr","message":"or do you mean air ticket?","date":"2012-08-27T08:43:52.255Z","type":"message"}
{"nick":"Raynos","message":"I meant the conference ticket","date":"2012-08-27T08:44:41.503Z","type":"message"}
{"nick":"Raynos","message":"I can do the air ticket myself","date":"2012-08-27T08:44:48.405Z","type":"message"}
{"nick":"Raynos","message":"I need to speak at a conference","date":"2012-08-27T08:44:55.537Z","type":"message"}
{"nick":"Raynos","message":"Preferably a front end JS thing and speak about how streams everywhere is the best idea ever","date":"2012-08-27T08:45:22.211Z","type":"message"}
{"nick":"substack","message":"trying to remember how I fell into speaking at conferences","date":"2012-08-27T08:46:27.293Z","type":"message"}
{"nick":"substack","message":"hundreds of modules plus blogging, but lots of folks have a crazy amount of modules now","date":"2012-08-27T08:46:53.516Z","type":"message"}
{"nick":"Raynos","message":"well yeah","date":"2012-08-27T08:47:03.595Z","type":"message"}
{"nick":"Raynos","message":"I have managed to rise high enough on npmtop","date":"2012-08-27T08:47:12.242Z","type":"message"}
{"nick":"Raynos","message":"I just need more blogging","date":"2012-08-27T08:47:15.547Z","type":"message"}
{"nick":"Raynos","message":"I dont talk about anything i write","date":"2012-08-27T08:47:19.853Z","type":"message"}
{"nick":"substack","message":"I haven't even built anything especially impressive","date":"2012-08-27T08:47:21.277Z","type":"message"}
{"nick":"Raynos","message":"too much code to still write","date":"2012-08-27T08:47:23.856Z","type":"message"}
{"nick":"substack","message":"I've just built a lot of things","date":"2012-08-27T08:47:25.567Z","type":"message"}
{"nick":"Raynos","message":"Meh browserify is non trivial","date":"2012-08-27T08:47:37.150Z","type":"message"}
{"nick":"dominictarr","message":"Raynos, start speaking at meetups.","date":"2012-08-27T08:47:47.660Z","type":"message"}
{"nick":"substack","message":"browserify is also crazy hackneyed crap >_<","date":"2012-08-27T08:47:52.663Z","type":"message"}
{"nick":"Raynos","message":"I should do that more","date":"2012-08-27T08:47:54.295Z","type":"message"}
{"nick":"substack","message":"I mean it's hackneyed crap that works really well","date":"2012-08-27T08:48:01.930Z","type":"message"}
{"nick":"substack","message":"and has crazy test coverage","date":"2012-08-27T08:48:05.628Z","type":"message"}
{"nick":"substack","message":"but still","date":"2012-08-27T08:48:07.259Z","type":"message"}
{"nick":"dominictarr","message":"substack, it's a messy problem.","date":"2012-08-27T08:48:33.151Z","type":"message"}
{"nick":"substack","message":"there are no messy problems, only messy solutions","date":"2012-08-27T08:49:17.640Z","type":"message"}
{"nick":"substack","message":"and it's often far easier at first to write a messy solution than a clean one","date":"2012-08-27T08:49:32.788Z","type":"message"}
{"nick":"dominictarr","message":"there _are_ messy problems. well, it depends on where you mark out the bounds of the problem.","date":"2012-08-27T08:50:26.574Z","type":"message"}
{"nick":"substack","message":"most of browserify's mess is that it has a lot of legacy api","date":"2012-08-27T08:52:07.849Z","type":"message"}
{"nick":"substack","message":"because the implementation emphasis completely shifted 3 times","date":"2012-08-27T08:52:43.877Z","type":"message"}
{"nick":"dominictarr","message":"I gotta go catch a train - talk to you guys when I'm in Berlin!","date":"2012-08-27T08:52:58.893Z","type":"message"}
{"nick":"substack","message":"see you there!","date":"2012-08-27T08:53:10.108Z","type":"message"}
{"nick":"substack","message":"blarg I'm thinking that testling should just let the test harnesses write to process.stdout","date":"2012-08-27T08:56:19.897Z","type":"message"}
{"nick":"substack","message":"then I can just browserify them and submit minor changes","date":"2012-08-27T08:56:31.289Z","type":"message"}
{"nick":"substack","message":"and stop having to mess around with every little thing","date":"2012-08-27T08:56:45.404Z","type":"message"}
{"nick":"dominictarr","reason":"Ping timeout: 246 seconds","date":"2012-08-27T08:57:49.353Z","type":"quit"}
{"nick":"substack","message":"and then everything will just work","date":"2012-08-27T08:58:41.504Z","type":"message"}
{"nick":"substack","message":"because browserify will MAKE IT WORK","date":"2012-08-27T08:58:49.763Z","type":"message"}
{"nick":"Raynos","message":"testling should let the test harness output TAP to stdout","date":"2012-08-27T09:01:30.729Z","type":"message"}
{"nick":"Raynos","message":"or down some channel that goes out of the browser and in happy land","date":"2012-08-27T09:01:41.765Z","type":"message"}
{"nick":"substack","message":"yes","date":"2012-08-27T09:03:29.921Z","type":"message"}
{"nick":"substack","message":"I can just process.stdout = shoe('/stdout')","date":"2012-08-27T09:03:43.244Z","type":"message"}
{"nick":"substack","message":"process.stderr = shoe('/stderr')","date":"2012-08-27T09:03:51.631Z","type":"message"}
{"nick":"Raynos","message":"Better yet","date":"2012-08-27T09:04:59.256Z","type":"message"}
{"nick":"Raynos","message":"do it cross domain","date":"2012-08-27T09:05:02.823Z","type":"message"}
{"nick":"substack","message":"sockjs is already cross-domain","date":"2012-08-27T09:05:15.433Z","type":"message"}
{"nick":"Raynos","message":"yeah exactly","date":"2012-08-27T09:05:20.717Z","type":"message"}
{"nick":"Raynos","message":"shoe(\"http://testling.com/stdout\")","date":"2012-08-27T09:05:28.247Z","type":"message"}
{"nick":"substack","message":"hah","date":"2012-08-27T09:05:35.638Z","type":"message"}
{"nick":"substack","message":"yes","date":"2012-08-27T09:05:38.084Z","type":"message"}
{"nick":"Raynos","message":"that way you dont need that damned proxy server","date":"2012-08-27T09:05:39.244Z","type":"message"}
{"nick":"Raynos","message":"in testling","date":"2012-08-27T09:05:40.548Z","type":"message"}
{"nick":"substack","message":"still do","date":"2012-08-27T09:06:07.027Z","type":"message"}
{"nick":"Raynos","message":"oh for schoolbus >_<","date":"2012-08-27T09:06:13.633Z","type":"message"}
{"nick":"Raynos","message":"schoolbus is such a hack :D","date":"2012-08-27T09:06:18.488Z","type":"message"}
{"nick":"Raynos","message":"I tried using it","date":"2012-08-27T09:06:31.938Z","type":"message"}
{"nick":"Raynos","message":"at some point it tried sending the window object to the iframe over the dnode protocol","date":"2012-08-27T09:06:43.629Z","type":"message"}
{"nick":"Raynos","message":"man that blows up hard when dnode tries to serialize window","date":"2012-08-27T09:06:52.729Z","type":"message"}
{"nick":"Raynos","message":"something should have a  if (thing === window) { bail early }","date":"2012-08-27T09:07:12.275Z","type":"message"}
{"nick":"substack","message":"because the dom has infinite non-circular recursion via getters","date":"2012-08-27T09:07:18.263Z","type":"message"}
{"nick":"substack","message":"all dom nodes have this property, not just window","date":"2012-08-27T09:07:28.710Z","type":"message"}
{"nick":"substack","message":"needs to just have a depth limit","date":"2012-08-27T09:07:40.778Z","type":"message"}
{"nick":"substack","message":"writing seemily unrelated libraries opens up crazy shit like process.stdout = shoe('/stdout')","date":"2012-08-27T09:09:55.916Z","type":"message"}
{"nick":"substack","message":"pretty excellent","date":"2012-08-27T09:10:02.610Z","type":"message"}
{"nick":"substack","message":"I'll just have the /stdout and /stderr go to the ci server to start","date":"2012-08-27T09:11:54.755Z","type":"message"}
{"nick":"substack","message":"ok I'm not running vanilla tap tests in browsers","date":"2012-08-27T09:44:28.009Z","type":"message"}
{"nick":"substack","message":"with 15 lines of boiler plate at the top","date":"2012-08-27T09:44:41.248Z","type":"message"}
{"nick":"substack","message":"just sets up shoe and a few others","date":"2012-08-27T09:44:50.619Z","type":"message"}
{"nick":"sorensen","reason":"Quit: ZNC - http://znc.sourceforge.net","date":"2012-08-27T09:50:24.483Z","type":"quit"}
{"nick":"sorensen","date":"2012-08-27T09:52:16.756Z","type":"join"}
{"nick":"substack","message":"Raynos: so the other issue with browsers and ci is that you'll probably want to run tests against a specific version of an app","date":"2012-08-27T09:55:21.571Z","type":"message"}
{"nick":"Raynos","message":"well I want to run unit tests","date":"2012-08-27T09:55:41.722Z","type":"message"}
{"nick":"Raynos","message":"againts my code","date":"2012-08-27T09:55:44.331Z","type":"message"}
{"nick":"substack","message":"yes it's probably good to focus this on unit tests first","date":"2012-08-27T09:55:55.184Z","type":"message"}
{"nick":"Raynos","message":"integration tests are a pain","date":"2012-08-27T09:56:04.540Z","type":"message"}
{"nick":"Raynos","message":"as schoolbus is unstable","date":"2012-08-27T09:56:09.316Z","type":"message"}
{"nick":"substack","message":"but later spin up real apps in sandboxes","date":"2012-08-27T09:56:18.644Z","type":"message"}
{"nick":"Raynos","message":"doing integration testing in selenium is easy","date":"2012-08-27T09:56:24.820Z","type":"message"}
{"nick":"Raynos","message":"doing unit tests in selenium is epic pain in the ass","date":"2012-08-27T09:56:31.789Z","type":"message"}
{"nick":"substack","message":"nodejitsu already figured all the sandboxing, can probably just work with them","date":"2012-08-27T09:56:32.725Z","type":"message"}
{"nick":"substack","message":"ah true","date":"2012-08-27T09:56:43.436Z","type":"message"}
{"nick":"Raynos","message":"so focus on the unit tests","date":"2012-08-27T09:56:48.413Z","type":"message"}
{"nick":"Raynos","message":"the way I run unit tests","date":"2012-08-27T09:57:01.451Z","type":"message"}
{"nick":"substack","message":"step 1 getting a ton of testling badges on github for unit tests","date":"2012-08-27T09:57:03.348Z","type":"message"}
{"nick":"Raynos","message":"is I have a list of files to browserify and then be included in a browser","date":"2012-08-27T09:57:15.140Z","type":"message"}
{"nick":"Raynos","message":"so all you really need to do is accept a bundle.js from me and somehow return the TAP output back to me","date":"2012-08-27T09:57:34.733Z","type":"message"}
{"nick":"substack","message":"yep that's what this thing does right now","date":"2012-08-27T09:57:59.504Z","type":"message"}
{"nick":"substack","message":"exactly what you say","date":"2012-08-27T09:58:13.438Z","type":"message"}
{"nick":"Raynos","message":"yeah thats what I want","date":"2012-08-27T09:58:37.220Z","type":"message"}
{"nick":"Raynos","message":"because i have a super sweet test runner","date":"2012-08-27T09:58:43.403Z","type":"message"}
{"nick":"Raynos","message":"that takes TAP on stdin","date":"2012-08-27T09:58:47.068Z","type":"message"}
{"nick":"Raynos","message":"and does custom reporting","date":"2012-08-27T09:58:50.250Z","type":"message"}
{"nick":"Raynos","message":"id be nice it if works with just node-tap","date":"2012-08-27T10:04:30.856Z","type":"message"}
{"nick":"substack","message":"it does","date":"2012-08-27T10:04:35.325Z","type":"message"}
{"nick":"Raynos","message":"and not with the testling wrapper","date":"2012-08-27T10:04:35.527Z","type":"message"}
{"nick":"substack","message":"that's the plan","date":"2012-08-27T10:04:37.136Z","type":"message"}
{"nick":"Raynos","message":":D","date":"2012-08-27T10:04:41.004Z","type":"message"}
{"nick":"substack","message":"here I'll show you my test thing","date":"2012-08-27T10:04:48.938Z","type":"message"}
{"nick":"substack","message":"https://gist.github.com/3487083","date":"2012-08-27T10:05:39.035Z","type":"message"}
{"nick":"substack","message":"I'll make browserify have an empty global Buffer and global=window","date":"2012-08-27T10:06:28.188Z","type":"message"}
{"nick":"substack","message":"but just module scoped, not real globals","date":"2012-08-27T10:06:46.025Z","type":"message"}
{"nick":"substack","message":"that will fix the issues with tap","date":"2012-08-27T10:06:58.703Z","type":"message"}
{"nick":"substack","message":"and also the process.on() thing","date":"2012-08-27T10:07:03.791Z","type":"message"}
{"nick":"Raynos","message":"fantastic","date":"2012-08-27T10:07:20.551Z","type":"message"}
{"nick":"Raynos","message":"now I just need a way to parse out TAP output from console.log","date":"2012-08-27T10:07:30.561Z","type":"message"}
{"nick":"substack","message":"then it will all just work™","date":"2012-08-27T10:07:31.334Z","type":"message"}
{"nick":"Raynos","message":"The only other thing is reducing latency","date":"2012-08-27T10:07:36.522Z","type":"message"}
{"nick":"substack","message":"oh and I had a shim for child_process that will land","date":"2012-08-27T10:07:39.180Z","type":"message"}
{"nick":"Raynos","message":"so I get my test results back in <1s","date":"2012-08-27T10:07:45.541Z","type":"message"}
{"nick":"substack","message":"this is more like travis","date":"2012-08-27T10:08:03.655Z","type":"message"}
{"nick":"substack","message":"for github badges","date":"2012-08-27T10:08:12.448Z","type":"message"}
{"nick":"Raynos","message":"I see","date":"2012-08-27T10:08:38.025Z","type":"message"}
{"nick":"Raynos","message":"that works too tbh","date":"2012-08-27T10:08:42.211Z","type":"message"}
{"nick":"substack","action":"zzz &","date":"2012-08-27T10:12:20.821Z","type":"action"}
{"nick":"wiwillia","date":"2012-08-27T11:37:55.858Z","type":"join"}
{"nick":"AvianFlu","reason":"Quit: AvianFlu","date":"2012-08-27T12:09:23.882Z","type":"quit"}
{"nick":"wiwillia","reason":"Read error: Connection reset by peer","date":"2012-08-27T12:59:49.653Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-08-27T13:18:16.570Z","type":"quit"}
{"nick":"st_luke_","new_nick":"st_luke","date":"2012-08-27T14:53:59.894Z","type":"nick"}
{"nick":"AvianFlu","date":"2012-08-27T15:08:50.467Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 248 seconds","date":"2012-08-27T15:18:05.265Z","type":"quit"}
