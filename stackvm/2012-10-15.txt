{"nick":"substack","message":"ls","date":"2012-10-15T00:20:45.256Z","type":"message"}
{"nick":"substack","message":"hah","date":"2012-10-15T00:20:46.999Z","type":"message"}
{"nick":"chapel","reason":"Quit: ZNC - http://znc.sourceforge.net","date":"2012-10-15T00:23:21.823Z","type":"quit"}
{"nick":"chapel","date":"2012-10-15T00:23:49.202Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 38]","date":"2012-10-15T00:35:14.750Z","type":"message"}
{"nick":"fotoverite","message":"So much talk about promises today","date":"2012-10-15T00:45:04.238Z","type":"message"}
{"nick":"pkrumins","message":"wat","date":"2012-10-15T00:45:35.039Z","type":"message"}
{"nick":"fotoverite","message":"On the twitter","date":"2012-10-15T00:45:43.948Z","type":"message"}
{"nick":"pkrumins","message":"ah","date":"2012-10-15T00:46:17.705Z","type":"message"}
{"nick":"pkrumins","message":"twitter is a public toilet","date":"2012-10-15T00:46:24.949Z","type":"message"}
{"nick":"fotoverite","message":"It has it uses","date":"2012-10-15T00:46:34.938Z","type":"message"}
{"nick":"pkrumins","message":"agreed but not for chatting","date":"2012-10-15T00:46:56.350Z","type":"message"}
{"nick":"pkrumins","message":"people use it for chatting makes it public toilet","date":"2012-10-15T00:47:12.283Z","type":"message"}
{"nick":"xaq","date":"2012-10-15T00:48:24.756Z","type":"join"}
{"nick":"jibay","reason":"Quit: Leaving","date":"2012-10-15T01:24:24.275Z","type":"quit"}
{"nick":"fotoverite","message":"Oh god issacs: I rather had not seen that post.","date":"2012-10-15T01:35:01.250Z","type":"message"}
{"nick":"fotoverite","message":"Dumb dumb dumb dumb.","date":"2012-10-15T01:35:11.321Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 40]","date":"2012-10-15T01:35:14.628Z","type":"message"}
{"nick":"shuaib","reason":"Ping timeout: 246 seconds","date":"2012-10-15T01:37:25.061Z","type":"quit"}
{"nick":"shuaib","date":"2012-10-15T01:40:02.544Z","type":"join"}
{"nick":"jiang-plus","date":"2012-10-15T01:44:36.018Z","type":"join"}
{"nick":"mike-d","reason":"Quit: mike-d","date":"2012-10-15T01:52:32.162Z","type":"quit"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.174.109 (free2)","date":"2012-10-15T02:01:38.078Z","type":"message"}
{"nick":"pkrumins","message":"fixing","date":"2012-10-15T02:02:06.520Z","type":"message"}
{"nick":"pkrumins","message":"windows rebooted","date":"2012-10-15T02:02:26.344Z","type":"message"}
{"nick":"pkrumins","message":"fixed.","date":"2012-10-15T02:03:21.330Z","type":"message"}
{"nick":"chapel","message":"isaacs: good blog post btw","date":"2012-10-15T02:04:24.740Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2012-10-15T02:04:25.542Z","type":"quit"}
{"nick":"chapel","message":"isaacs: enjoy your metered approach to things, and sensible reasoning","date":"2012-10-15T02:04:39.323Z","type":"message"}
{"nick":"shuaib","reason":"Ping timeout: 265 seconds","date":"2012-10-15T02:06:29.073Z","type":"quit"}
{"nick":"shuaib","date":"2012-10-15T02:08:01.178Z","type":"join"}
{"nick":"Raynos","message":"isaacs: https://gist.github.com/3791742#file_types.md","date":"2012-10-15T02:20:52.944Z","type":"message"}
{"nick":"Raynos","message":"we need some proper documentation of those two types of streams and make it clear that the new base classes fail when operating on non-buffers","date":"2012-10-15T02:21:12.824Z","type":"message"}
{"nick":"thatguydan","date":"2012-10-15T02:27:50.510Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 11]","date":"2012-10-15T02:35:14.624Z","type":"message"}
{"nick":"xaq","reason":"Remote host closed the connection","date":"2012-10-15T02:57:36.527Z","type":"quit"}
{"nick":"AvianFlu","date":"2012-10-15T03:03:10.968Z","type":"join"}
{"nick":"xaq","date":"2012-10-15T03:20:27.951Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 19]","date":"2012-10-15T03:35:14.476Z","type":"message"}
{"nick":"isaacs","message":"Raynos: well, the base classes will work with any random object.","date":"2012-10-15T03:57:19.395Z","type":"message"}
{"nick":"isaacs","message":"Raynos: write(obj, encoding) wont' work unless the object is a buffer, of course.","date":"2012-10-15T03:57:30.814Z","type":"message"}
{"nick":"isaacs","message":"but that's kind of obvious.","date":"2012-10-15T03:57:34.684Z","type":"message"}
{"nick":"Raynos","message":"isaacs: doesn't fromList assume a length property","date":"2012-10-15T03:57:34.881Z","type":"message"}
{"nick":"isaacs","message":"Raynos: yeah, but you'd just overwrite the read() method instead of the _read() method","date":"2012-10-15T03:58:12.914Z","type":"message"}
{"nick":"Raynos","message":"isaacs: that's what I meant","date":"2012-10-15T03:58:23.376Z","type":"message"}
{"nick":"Raynos","message":"isaacs: you wouldnt use _read or _write with non buffer streams","date":"2012-10-15T03:58:35.445Z","type":"message"}
{"nick":"isaacs","message":"_write you could still use","date":"2012-10-15T03:58:44.983Z","type":"message"}
{"nick":"isaacs","message":"but you would not want to do write({foo:\"bar\"}, \"utf8\")","date":"2012-10-15T03:58:55.297Z","type":"message"}
{"nick":"isaacs","message":"clearly","date":"2012-10-15T03:58:58.122Z","type":"message"}
{"nick":"isaacs","message":"but there's more to the base classes than just .read() and .write()","date":"2012-10-15T03:59:27.843Z","type":"message"}
{"nick":"Raynos","message":"I know","date":"2012-10-15T03:59:37.615Z","type":"message"}
{"nick":"Raynos","message":"I use the Readable base class for .pipe","date":"2012-10-15T03:59:41.562Z","type":"message"}
{"nick":"isaacs","message":"a lot of userland streams *are* dealing with buffers in their read() (well, their on('data')) methods, and their write() methods","date":"2012-10-15T04:00:15.403Z","type":"message"}
{"nick":"isaacs","message":"and strings","date":"2012-10-15T04:00:18.431Z","type":"message"}
{"nick":"Raynos","message":"isaacs : https://github.com/isaacs/readable-stream/blob/master/writable.js#L81","date":"2012-10-15T04:00:29.501Z","type":"message"}
{"nick":"Raynos","message":"that set's state.length to NaN","date":"2012-10-15T04:00:36.650Z","type":"message"}
{"nick":"Raynos","message":"if it's an object without a length property","date":"2012-10-15T04:00:48.275Z","type":"message"}
{"nick":"isaacs","message":"Raynos: right, so, yeah, you'd have to overwrite the write() method i guess","date":"2012-10-15T04:01:06.902Z","type":"message"}
{"nick":"Raynos","message":"isaacs: That's why I recommend using the base classes when you have Buffers or strings","date":"2012-10-15T04:01:09.326Z","type":"message"}
{"nick":"Raynos","message":"and use a custom base class that inherits from Readable that overwrite read & write","date":"2012-10-15T04:01:24.069Z","type":"message"}
{"nick":"isaacs","message":"Raynos: well, yo uhave to override *somethingn* when you use the base clases.","date":"2012-10-15T04:01:48.402Z","type":"message"}
{"nick":"Raynos","message":"true","date":"2012-10-15T04:01:58.178Z","type":"message"}
{"nick":"Raynos","message":"when i say use the base classes I mean overwrite the _ properties","date":"2012-10-15T04:02:10.487Z","type":"message"}
{"nick":"isaacs","message":"https://github.com/isaacs/readable-stream/blob/master/writable.js#L132-134","date":"2012-10-15T04:02:11.617Z","type":"message"}
{"nick":"isaacs","message":"oh, ok","date":"2012-10-15T04:02:15.870Z","type":"message"}
{"nick":"isaacs","message":"use their buffering","date":"2012-10-15T04:02:19.392Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2012-10-15T04:02:25.486Z","type":"message"}
{"nick":"Raynos","message":"use their low & high water marks","date":"2012-10-15T04:02:28.800Z","type":"message"}
{"nick":"isaacs","message":"i'd be fine with putting some guards in place so it worked with objects, but a lot of the buffering concepts don't make any sense then","date":"2012-10-15T04:02:40.171Z","type":"message"}
{"nick":"Raynos","message":"isaacs: what do you think of having `Stream.prototype.pipe === Readable.prototype.pipe`","date":"2012-10-15T04:02:44.512Z","type":"message"}
{"nick":"isaacs","message":"no.","date":"2012-10-15T04:02:57.970Z","type":"message"}
{"nick":"Raynos","message":"isaacs: I don't think you need to. I don't see a good use-case for using _read and _write with non strings/buffers","date":"2012-10-15T04:03:12.128Z","type":"message"}
{"nick":"isaacs","message":"Raynos: right","date":"2012-10-15T04:03:23.330Z","type":"message"}
{"nick":"isaacs","message":"Stream#pipe !== Readable#pipe","date":"2012-10-15T04:03:34.350Z","type":"message"}
{"nick":"isaacs","message":"they're different concepts","date":"2012-10-15T04:03:38.359Z","type":"message"}
{"nick":"Raynos","message":"if your writing a clean new writable stream would you just create an event emitter and add write & end ?","date":"2012-10-15T04:03:47.912Z","type":"message"}
{"nick":"isaacs","message":"i'd remove Stream#pipe if it was possible","date":"2012-10-15T04:03:54.859Z","type":"message"}
{"nick":"Raynos","message":"isaacs: can we just have Stream#pipe be accessed through the backwards compat layer and not expose it","date":"2012-10-15T04:04:18.444Z","type":"message"}
{"nick":"Raynos","message":"What's the use case for people being able to create streams with Stream#pipe in 0.10","date":"2012-10-15T04:04:38.545Z","type":"message"}
{"nick":"Raynos","message":"In theory new Readable() behaves the same as new Stream()","date":"2012-10-15T04:04:58.987Z","type":"message"}
{"nick":"isaacs","message":"Raynos: current programs that extend the Stream class","date":"2012-10-15T04:05:00.169Z","type":"message"}
{"nick":"isaacs","message":"Raynos: we can't break those.","date":"2012-10-15T04:05:05.309Z","type":"message"}
{"nick":"isaacs","message":"Raynos: maybe in 2.0","date":"2012-10-15T04:05:09.919Z","type":"message"}
{"nick":"Raynos","message":"why cant they extend the stream class","date":"2012-10-15T04:05:14.779Z","type":"message"}
{"nick":"isaacs","message":"till then, no way","date":"2012-10-15T04:05:15.288Z","type":"message"}
{"nick":"Raynos","message":"and have the new pipe semantics","date":"2012-10-15T04:05:18.231Z","type":"message"}
{"nick":"isaacs","message":"Raynos: ?? because they are built with emit('data'), not read()","date":"2012-10-15T04:05:32.211Z","type":"message"}
{"nick":"Raynos","message":"why does a program that extends Stream break when you make Stream = Readable","date":"2012-10-15T04:05:35.699Z","type":"message"}
{"nick":"isaacs","message":"Raynos: because it doesn't have a read() method","date":"2012-10-15T04:05:44.137Z","type":"message"}
{"nick":"Raynos","message":"isn't that a bug in the back compat layer?","date":"2012-10-15T04:05:46.003Z","type":"message"}
{"nick":"isaacs","message":"Raynos: i'm saying, I wite a module that inherits from Stream, today","date":"2012-10-15T04:06:09.738Z","type":"message"}
{"nick":"isaacs","message":"in 0.8","date":"2012-10-15T04:06:10.870Z","type":"message"}
{"nick":"Raynos","message":"if we can't replace all references to Stream with Readable that suggests Readable is not backwards compatible","date":"2012-10-15T04:06:21.421Z","type":"message"}
{"nick":"isaacs","message":"you can't just change the .pipe() method to something that calls read(), and expect it to work","date":"2012-10-15T04:06:24.649Z","type":"message"}
{"nick":"isaacs","message":"Raynos: you can, but people *haven't* done that","date":"2012-10-15T04:06:32.262Z","type":"message"}
{"nick":"Raynos","message":"oh. Of course","date":"2012-10-15T04:06:43.902Z","type":"message"}
{"nick":"isaacs","message":"Raynos: well, also, you can't really","date":"2012-10-15T04:06:49.967Z","type":"message"}
{"nick":"isaacs","message":":)","date":"2012-10-15T04:06:51.327Z","type":"message"}
{"nick":"Raynos","message":"you have no way of knowing whether pipe should be called as old or new","date":"2012-10-15T04:06:54.267Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2012-10-15T04:06:57.856Z","type":"message"}
{"nick":"Raynos","message":"what if the new pipe","date":"2012-10-15T04:06:58.541Z","type":"message"}
{"nick":"Raynos","message":"checks for the read method","date":"2012-10-15T04:07:02.030Z","type":"message"}
{"nick":"isaacs","message":"i don't know if your module is going to emit('data') or call read()","date":"2012-10-15T04:07:04.457Z","type":"message"}
{"nick":"Raynos","message":"and if it doesnt exist changes into old mode","date":"2012-10-15T04:07:06.628Z","type":"message"}
{"nick":"isaacs","message":"what if you have a completely different thing called \"read()\"?","date":"2012-10-15T04:07:14.257Z","type":"message"}
{"nick":"isaacs","message":"that isn't Readable.read?","date":"2012-10-15T04:07:18.126Z","type":"message"}
{"nick":"Raynos","message":">:(","date":"2012-10-15T04:07:21.722Z","type":"message"}
{"nick":"isaacs","message":"or even conceptually similar?","date":"2012-10-15T04:07:22.957Z","type":"message"}
{"nick":"isaacs","message":"yeah.","date":"2012-10-15T04:07:24.877Z","type":"message"}
{"nick":"isaacs","message":"welcome to the \"Backwards Compatibility is a Brutal Fucking Master\" party","date":"2012-10-15T04:07:41.397Z","type":"message"}
{"nick":"Raynos","message":"why would they do that :(","date":"2012-10-15T04:07:42.298Z","type":"message"}
{"nick":"Raynos","message":"is there any way to know at all?","date":"2012-10-15T04:07:54.057Z","type":"message"}
{"nick":"isaacs","message":"it's less of a party.  more like getting whipped repeatedly, and no way to escape.","date":"2012-10-15T04:07:59.797Z","type":"message"}
{"nick":"isaacs","message":"Raynos: nope.","date":"2012-10-15T04:08:04.786Z","type":"message"}
{"nick":"isaacs","message":"Raynos: i've found it's best to assume that if you can imagine a way to break it, someone has already done it, and they'll be pissed if you ignore it.","date":"2012-10-15T04:08:24.517Z","type":"message"}
{"nick":"isaacs","message":"with stuff in core, anyway","date":"2012-10-15T04:08:37.146Z","type":"message"}
{"nick":"Raynos","message":"ugh I see your point","date":"2012-10-15T04:08:47.295Z","type":"message"}
{"nick":"Raynos","message":"We do need some guidance","date":"2012-10-15T04:08:56.585Z","type":"message"}
{"nick":"Raynos","message":"to stop developers from extending Stream by accident in 0.10","date":"2012-10-15T04:09:04.215Z","type":"message"}
{"nick":"Raynos","message":"I guess that's where docs come in","date":"2012-10-15T04:09:11.139Z","type":"message"}
{"nick":"isaacs","message":"wel, they can extend Stream in 0.10","date":"2012-10-15T04:09:25.227Z","type":"message"}
{"nick":"thatguydan","reason":"Read error: Connection reset by peer","date":"2012-10-15T04:09:25.686Z","type":"quit"}
{"nick":"isaacs","message":"that's fine.","date":"2012-10-15T04:09:28.426Z","type":"message"}
{"nick":"isaacs","message":"just not ideal.","date":"2012-10-15T04:09:31.165Z","type":"message"}
{"nick":"isaacs","message":"oh, or, do you mean, in new modules that they write?","date":"2012-10-15T04:09:40.695Z","type":"message"}
{"nick":"thatguydan","date":"2012-10-15T04:09:42.188Z","type":"join"}
{"nick":"Raynos","message":"yes","date":"2012-10-15T04:10:36.146Z","type":"message"}
{"nick":"Raynos","message":"we need a good way to stop people from using Stream by accident because they didnt know better","date":"2012-10-15T04:10:49.636Z","type":"message"}
{"nick":"Raynos","message":"as in we need a massive community shift and evangelism","date":"2012-10-15T04:11:03.330Z","type":"message"}
{"nick":"Raynos","message":"I may just make a pull request on every stream module to use Readable","date":"2012-10-15T04:11:18.876Z","type":"message"}
{"nick":"Raynos","message":"or maybe just on all of dominictarr's and substack's stream module","date":"2012-10-15T04:11:34.440Z","type":"message"}
{"nick":"thatguydan","reason":"Client Quit","date":"2012-10-15T04:11:59.084Z","type":"quit"}
{"nick":"Raynos","message":"isaacs: the takeWhile case needs to terminate even if the source is non-ending","date":"2012-10-15T04:17:43.411Z","type":"message"}
{"nick":"Raynos","message":"isaacs: https://github.com/benvie/weakmap","date":"2012-10-15T04:20:05.150Z","type":"message"}
{"nick":"Raynos","message":"I started using that weakmap shim.","date":"2012-10-15T04:20:11.075Z","type":"message"}
{"nick":"Raynos","message":"It's nice :)","date":"2012-10-15T04:20:30.787Z","type":"message"}
{"nick":"isaacs","message":"Raynos: oh, then just club write()","date":"2012-10-15T04:20:43.517Z","type":"message"}
{"nick":"isaacs","message":"Raynos: this.write = function(){}; this.end()","date":"2012-10-15T04:21:04.278Z","type":"message"}
{"nick":"Raynos","message":"that could actually work","date":"2012-10-15T04:21:17.870Z","type":"message"}
{"nick":"isaacs","message":"Raynos: but that's silly.  what are you piping into takewhile that never ends?","date":"2012-10-15T04:21:29.097Z","type":"message"}
{"nick":"Raynos","message":"TCP socket?","date":"2012-10-15T04:21:42.019Z","type":"message"}
{"nick":"Raynos","message":"take the first 10 packets of a TCP stream","date":"2012-10-15T04:21:50.359Z","type":"message"}
{"nick":"Raynos","message":"assume they contain some header data","date":"2012-10-15T04:21:54.411Z","type":"message"}
{"nick":"Raynos","message":"then when the writable stream emits finish you know that your done reading the header","date":"2012-10-15T04:22:08.443Z","type":"message"}
{"nick":"isaacs","message":"k","date":"2012-10-15T04:22:59.285Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2012-10-15T04:25:23.600Z","type":"quit"}
{"nick":"Raynos","message":"isaacs: thanks btw :)","date":"2012-10-15T04:29:47.163Z","type":"message"}
{"nick":"isaacs","message":"np","date":"2012-10-15T04:29:54.640Z","type":"message"}
{"nick":"Nexxy","message":"wow when did I start showing up in this channel?","date":"2012-10-15T04:30:01.055Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 15]","date":"2012-10-15T04:35:14.660Z","type":"message"}
{"nick":"xaq_","date":"2012-10-15T04:35:35.233Z","type":"join"}
{"nick":"xaq","reason":"Read error: Connection reset by peer","date":"2012-10-15T04:36:03.069Z","type":"quit"}
{"nick":"xaq_","reason":"Remote host closed the connection","date":"2012-10-15T04:37:47.570Z","type":"quit"}
{"nick":"Raynos","message":"Oh hi.","date":"2012-10-15T04:39:33.672Z","type":"message"}
{"nick":"Raynos","message":"isaacs: ping me when you change the docs in streams2 branch. I want to help summarize all these edge cases","date":"2012-10-15T04:40:24.125Z","type":"message"}
{"nick":"AvianFlu","date":"2012-10-15T05:05:17.354Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 28]","date":"2012-10-15T05:35:14.500Z","type":"message"}
{"nick":"tomshreds","reason":"Quit: Leaving...","date":"2012-10-15T05:48:29.390Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 28]","date":"2012-10-15T06:35:14.538Z","type":"message"}
{"nick":"jiang-plus","reason":"Quit: Lost terminal","date":"2012-10-15T07:14:37.838Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 30]","date":"2012-10-15T07:35:14.717Z","type":"message"}
{"nick":"shuaib","reason":"Quit: Textual IRC Client: http://www.textualapp.com/","date":"2012-10-15T07:54:19.194Z","type":"quit"}
