{"nick":"mikeal","date":"2012-04-16T00:11:15.865Z","type":"join"}
{"nick":"devaholic","message":"SubStack: a fan of init scripts?","date":"2012-04-16T00:12:19.340Z","type":"message"}
{"nick":"devaholic","message":"i service-ized fleet drone and hub, so i can get emails when the drone goes down, also i noticed i dont actually need more than one drone per machine so it works out well -- https://gist.github.com/8717fb0d65ced13db772","date":"2012-04-16T00:13:00.188Z","type":"message"}
{"nick":"mikeal","reason":"Client Quit","date":"2012-04-16T00:13:11.497Z","type":"quit"}
{"nick":"devaholic","message":"or if anyone else wants to use it feel free, the repos land in /opt/fleet-*","date":"2012-04-16T00:18:09.735Z","type":"message"}
{"nick":"mikeal","date":"2012-04-16T00:18:15.444Z","type":"join"}
{"nick":"SubStack","message":"devaholic: sounds useful but I haven't messed with those at all","date":"2012-04-16T00:37:57.370Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-04-16T00:55:22.487Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 4]","date":"2012-04-16T00:58:32.972Z","type":"message"}
{"nick":"wiwillia","reason":"Ping timeout: 260 seconds","date":"2012-04-16T01:01:37.397Z","type":"quit"}
{"nick":"mikeal","date":"2012-04-16T01:08:56.743Z","type":"join"}
{"nick":"wiwillia","date":"2012-04-16T01:16:26.260Z","type":"join"}
{"nick":"niftylettuce","reason":"Quit: Connection closed for inactivity","date":"2012-04-16T01:56:28.253Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 5]","date":"2012-04-16T01:58:33.204Z","type":"message"}
{"nick":"SubStack","message":"new thing https://github.com/substack/node-marx","date":"2012-04-16T02:35:42.560Z","type":"message"}
{"nick":"AvianFlu","message":"SubStack, hahahahahhahahahahha awesome name","date":"2012-04-16T02:40:40.771Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 1]","date":"2012-04-16T02:58:33.146Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-04-16T03:22:00.266Z","type":"quit"}
{"nick":"hij1nx","reason":"Quit: hij1nx","date":"2012-04-16T03:27:56.364Z","type":"quit"}
{"nick":"mikeal","date":"2012-04-16T03:32:44.954Z","type":"join"}
{"nick":"st_luke","date":"2012-04-16T03:53:43.234Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 6]","date":"2012-04-16T03:58:33.278Z","type":"message"}
{"nick":"isaacs","message":"SubStack: you know what the true dictatorship of teh proletariat is here, right","date":"2012-04-16T04:14:11.631Z","type":"message"}
{"nick":"isaacs","message":"?","date":"2012-04-16T04:14:12.707Z","type":"message"}
{"nick":"isaacs","message":"SubStack: Get rid of the SeaPort Bourgoisie!","date":"2012-04-16T04:14:22.311Z","type":"message"}
{"nick":"isaacs","message":"SubStack: store state in the network","date":"2012-04-16T04:14:31.002Z","type":"message"}
{"nick":"saijanai_","reason":"Quit: saijanai_","date":"2012-04-16T04:48:11.662Z","type":"quit"}
{"nick":"wiwillia","reason":"Ping timeout: 265 seconds","date":"2012-04-16T04:55:31.232Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 12]","date":"2012-04-16T04:58:33.285Z","type":"message"}
{"nick":"hij1nx","date":"2012-04-16T04:59:05.008Z","type":"join"}
{"nick":"hij1nx","reason":"Remote host closed the connection","date":"2012-04-16T04:59:12.314Z","type":"quit"}
{"nick":"SubStack","message":"isaacs: occupy seaport","date":"2012-04-16T05:01:25.480Z","type":"message"}
{"nick":"isaacs","message":"for reals","date":"2012-04-16T05:01:39.498Z","type":"message"}
{"nick":"isaacs","message":"SubStack: it'd be nice to run your cluster of services like an efficient factory","date":"2012-04-16T05:02:15.755Z","type":"message"}
{"nick":"isaacs","message":"set a capacity level for each type of job, max/min workers, and then automatically just spin up new workers or shut them down as needed.","date":"2012-04-16T05:02:41.502Z","type":"message"}
{"nick":"isaacs","message":"like, if the \"generate xyz pages\" isn't getting done fast enough, spin up a new xyz-page-generator bot","date":"2012-04-16T05:03:21.181Z","type":"message"}
{"nick":"isaacs","message":"each role has a job queue, and a set of workers","date":"2012-04-16T05:03:36.596Z","type":"message"}
{"nick":"isaacs","message":"each local manager gossips to other managers about its capacity and queue","date":"2012-04-16T05:03:53.303Z","type":"message"}
{"nick":"isaacs","message":"you can have 10 machines, each with a manager and a bunch of workers","date":"2012-04-16T05:04:04.735Z","type":"message"}
{"nick":"isaacs","message":"the managers know about each other - there is no central registry","date":"2012-04-16T05:04:16.090Z","type":"message"}
{"nick":"isaacs","message":"they are all the registry","date":"2012-04-16T05:04:18.807Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2012-04-16T05:04:33.816Z","type":"quit"}
{"nick":"SubStack","message":"isaacs: that part is coming already","date":"2012-04-16T05:04:58.524Z","type":"message"}
{"nick":"isaacs","message":"if there aren't enough plants to meet capacity, then it emails the human","date":"2012-04-16T05:05:07.366Z","type":"message"}
{"nick":"SubStack","message":"it just requires several separatre modules","date":"2012-04-16T05:05:12.281Z","type":"message"}
{"nick":"isaacs","message":"yes, i know","date":"2012-04-16T05:05:16.628Z","type":"message"}
{"nick":"isaacs","message":"i'm describing my desires so that you know which modules to go make ;)","date":"2012-04-16T05:05:28.413Z","type":"message"}
{"nick":"maxogden","message":"earlier subbrubb was like 'so say you have your regime all set up and then you release the new Master Plan...'","date":"2012-04-16T05:05:39.443Z","type":"message"}
{"nick":"maxogden","message":"shit got weird","date":"2012-04-16T05:05:42.444Z","type":"message"}
{"nick":"isaacs","message":"yeah, exactly","date":"2012-04-16T05:05:57.100Z","type":"message"}
{"nick":"isaacs","message":"so, the next obvious step is, i want to start establishing new plants on machines that other people own, without their knowledge.","date":"2012-04-16T05:06:14.124Z","type":"message"}
{"nick":"isaacs","message":"from each machine according to its ability!","date":"2012-04-16T05:06:45.000Z","type":"message"}
{"nick":"isaacs","message":"and, for that matter, without my knowledge.","date":"2012-04-16T05:06:58.287Z","type":"message"}
{"nick":"isaacs","message":"all websites and apps shoudl be served by viruses","date":"2012-04-16T05:07:05.394Z","type":"message"}
{"nick":"maxogden","message":"if you have a readable stream whats the diff between mystream.write('woo') and mystream.emit('woo')","date":"2012-04-16T05:07:12.592Z","type":"message"}
{"nick":"isaacs","message":"maxogden: you don't write to readable streams","date":"2012-04-16T05:07:24.501Z","type":"message"}
{"nick":"guybrush","message":"curl http://npmjs.org/install.sh | sudo sh","date":"2012-04-16T05:07:30.095Z","type":"message"}
{"nick":"isaacs","message":"guybrush: yes, we've already established that everyone trusts me with root access to their machines.","date":"2012-04-16T05:07:44.509Z","type":"message"}
{"nick":"isaacs","message":"step 1 accomplished.","date":"2012-04-16T05:07:48.216Z","type":"message"}
{"nick":"guybrush","message":"haha","date":"2012-04-16T05:07:50.442Z","type":"message"}
{"nick":"isaacs","action":"really hopes he's joking.","date":"2012-04-16T05:08:10.377Z","type":"action"}
{"nick":"maxogden","message":"isaacs: oops sorry i meant writable","date":"2012-04-16T05:08:30.349Z","type":"message"}
{"nick":"guybrush","message":"now i know why you guys wanted to make windows 1st class citizen","date":"2012-04-16T05:08:33.537Z","type":"message"}
{"nick":"maxogden","action":"mixes his streams even though you should never cross streams","date":"2012-04-16T05:08:42.235Z","type":"action"}
{"nick":"isaacs","message":"maxogden: writable streams don't emit data events","date":"2012-04-16T05:09:43.890Z","type":"message"}
{"nick":"isaacs","message":"maxogden: who knows where the writes go?","date":"2012-04-16T05:09:49.756Z","type":"message"}
{"nick":"isaacs","message":"maxogden: if you write to an http request, it doens't emit it, it writes it to the underlying socket","date":"2012-04-16T05:10:03.436Z","type":"message"}
{"nick":"isaacs","message":"maxogden: er, http response","date":"2012-04-16T05:10:16.702Z","type":"message"}
{"nick":"isaacs","message":"maxogden: like, with write(2)","date":"2012-04-16T05:10:20.352Z","type":"message"}
{"nick":"dominictarr","date":"2012-04-16T05:27:09.957Z","type":"join"}
{"nick":"dominictarr","message":"hey guys","date":"2012-04-16T05:27:19.320Z","type":"message"}
{"nick":"maxogden","message":"dominictarr: wassup","date":"2012-04-16T05:27:41.452Z","type":"message"}
{"nick":"SubStack","message":"yar","date":"2012-04-16T05:28:03.836Z","type":"message"}
{"nick":"dominictarr","message":"maxogden: hey, do you know if there is a lib that wraps Socket.io in a Stream interface supporting pipe?","date":"2012-04-16T05:28:28.944Z","type":"message"}
{"nick":"maxogden","message":"dominictarr: havent checked, was gonna write one if there wasnt","date":"2012-04-16T05:28:47.219Z","type":"message"}
{"nick":"dominictarr","message":"ah, good. I was gonna write one too.","date":"2012-04-16T05:29:21.927Z","type":"message"}
{"nick":"dominictarr","message":"but not if you beat me to it.","date":"2012-04-16T05:29:31.237Z","type":"message"}
{"nick":"maxogden","message":"dominictarr: the things i wanna write for dominode are: pouchdb/indexeddb pipe, webworker pipe, filereader pipe, xhr pipe, websocket pipe","date":"2012-04-16T05:29:47.795Z","type":"message"}
{"nick":"SubStack","message":"collaboration \\o/","date":"2012-04-16T05:29:51.778Z","type":"message"}
{"nick":"maxogden","message":"if i do x = new Stream(); x.write('woo') i get Object #<Stream> has no method 'write'","date":"2012-04-16T05:30:21.378Z","type":"message"}
{"nick":"dominictarr","message":"how can that be?","date":"2012-04-16T05:30:56.644Z","type":"message"}
{"nick":"devaholic","message":"x.writable = true?","date":"2012-04-16T05:31:16.812Z","type":"message"}
{"nick":"dominictarr","message":"is this in the browser?","date":"2012-04-16T05:31:40.304Z","type":"message"}
{"nick":"maxogden","message":"nope in the node repl","date":"2012-04-16T05:31:44.278Z","type":"message"}
{"nick":"SubStack","message":"because you've got to define your own write function","date":"2012-04-16T05:31:58.588Z","type":"message"}
{"nick":"maxogden","message":"o rite","date":"2012-04-16T05:32:12.389Z","type":"message"}
{"nick":"SubStack","message":"end function too","date":"2012-04-16T05:32:17.819Z","type":"message"}
{"nick":"dominictarr","message":"that is because the Stream is meant to be a abstract class.","date":"2012-04-16T05:33:00.698Z","type":"message"}
{"nick":"dominictarr","message":"inheritors should implement that.","date":"2012-04-16T05:33:08.471Z","type":"message"}
{"nick":"dominictarr","message":"Stream only implements pipe","date":"2012-04-16T05:33:15.001Z","type":"message"}
{"nick":"maxogden","message":"cool","date":"2012-04-16T05:33:32.843Z","type":"message"}
{"nick":"maxogden","message":"so this is accurate for demonstration purposes right https://github.com/maxogden/dominode/blob/master/example.html#L13","date":"2012-04-16T05:34:12.593Z","type":"message"}
{"nick":"dominictarr","message":"well, that will run.","date":"2012-04-16T05:35:05.386Z","type":"message"}
{"nick":"dominictarr","message":"yeah, I think that is right for a readible stream","date":"2012-04-16T05:36:23.343Z","type":"message"}
{"nick":"maxogden","message":"its expected that readable streams are gonna emit data and end","date":"2012-04-16T05:36:43.805Z","type":"message"}
{"nick":"maxogden","message":"normally does .emit('data') happen in .write for read/writable streams?","date":"2012-04-16T05:37:44.640Z","type":"message"}
{"nick":"dominictarr","message":"there are more flavors of read/write streams than that.","date":"2012-04-16T05:38:34.062Z","type":"message"}
{"nick":"dominictarr","message":"it could be async.","date":"2012-04-16T05:38:39.418Z","type":"message"}
{"nick":"dominictarr","message":"or it could be a duplex stream, that pipes through another process but looks like a single stream. mikeal's request for example.","date":"2012-04-16T05:40:11.892Z","type":"message"}
{"nick":"maxogden","message":"im just tryin to understand your pull req","date":"2012-04-16T05:40:36.783Z","type":"message"}
{"nick":"SubStack","message":"maxogden: you should also look at https://github.com/dominictarr/event-stream","date":"2012-04-16T05:45:04.131Z","type":"message"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-04-16T05:52:08.214Z","type":"quit"}
{"nick":"tilgovi","date":"2012-04-16T05:57:19.724Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 9]","date":"2012-04-16T05:58:33.098Z","type":"message"}
{"nick":"dominictarr","message":"oh, oops. I didn't read your thing properly.","date":"2012-04-16T06:02:54.025Z","type":"message"}
{"nick":"dominictarr","message":"readStream.emit({...})","date":"2012-04-16T06:03:05.328Z","type":"message"}
{"nick":"dominictarr","message":"is misleading, readStream.emit('data', {....}) will work,","date":"2012-04-16T06:03:26.194Z","type":"message"}
{"nick":"dominictarr","message":"i'll fix it.","date":"2012-04-16T06:04:43.630Z","type":"message"}
{"nick":"maxogden","message":"oh oops","date":"2012-04-16T06:04:54.256Z","type":"message"}
{"nick":"saijanai_","date":"2012-04-16T06:11:22.635Z","type":"join"}
{"nick":"dominictarr","message":"maxogden: added some commits to make it run.","date":"2012-04-16T06:12:55.349Z","type":"message"}
{"nick":"isaacs","date":"2012-04-16T06:13:02.914Z","type":"join"}
{"nick":"isaacs","message":"maxogden: many duplex streams do not emit('data') corresponding to every write()","date":"2012-04-16T06:16:49.749Z","type":"message"}
{"nick":"isaacs","message":"maxogden: consider a zlib compressor","date":"2012-04-16T06:16:56.695Z","type":"message"}
{"nick":"isaacs","message":"you might write 5 times, then get a single data event","date":"2012-04-16T06:17:02.278Z","type":"message"}
{"nick":"isaacs","message":"maxogden: or a tcp connection.  you write write write, it might emit, it might not","date":"2012-04-16T06:17:17.076Z","type":"message"}
{"nick":"isaacs","message":"the emits are based on the *other* side writing","date":"2012-04-16T06:17:25.068Z","type":"message"}
{"nick":"maxogden","message":"mmk","date":"2012-04-16T06:18:55.177Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 244 seconds","date":"2012-04-16T06:20:58.462Z","type":"quit"}
{"nick":"AvianFlu","date":"2012-04-16T06:22:33.755Z","type":"join"}
{"nick":"dominictarr","message":"hey isaacs: whats happened with pause events on Stream now, thats gonna, I gotta implement my own pause and return false on the next write()?","date":"2012-04-16T06:23:33.728Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-04-16T06:43:25.891Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 15]","date":"2012-04-16T06:58:33.119Z","type":"message"}
{"nick":"dominictarr","message":"maxogden: are you writing the websocket stream, now perchance? otherwise I will.","date":"2012-04-16T07:00:13.039Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: yes, you have to emit your own pause/resume","date":"2012-04-16T07:07:12.502Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: if a write() buffers, it should return false.","date":"2012-04-16T07:07:22.950Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: the best streams don't ever emit chunks while pauased.","date":"2012-04-16T07:07:47.416Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: but some (tcp/fs) occasionally might, if a read() was already in progress","date":"2012-04-16T07:08:25.509Z","type":"message"}
{"nick":"dominictarr","message":"can i tell the upstream to pause before the next call to write?","date":"2012-04-16T07:09:59.849Z","type":"message"}
{"nick":"dominictarr","message":"isaacs: it sounds like the upshot of this is that all streams must be prepared to buffer a few chunks.","date":"2012-04-16T07:10:32.356Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: yes, streams need to buffer a bit, ideally","date":"2012-04-16T07:11:02.264Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: whihc is unfortunate","date":"2012-04-16T07:11:09.009Z","type":"message"}
{"nick":"isaacs","message":"ideally, you can tell the upstream source to pause, as well, eg by returning false, not making another call to the underlying system interface, etc.","date":"2012-04-16T07:11:58.797Z","type":"message"}
{"nick":"isaacs","message":"but yeah, planning on buffering a little bit is a good idea","date":"2012-04-16T07:12:30.931Z","type":"message"}
{"nick":"dominictarr","message":"right, yeah that is what I thought.","date":"2012-04-16T07:12:37.487Z","type":"message"}
{"nick":"dominictarr","message":"there is probably a bit of room for a easier to extend UserStream class that does this stuff, but not in core.","date":"2012-04-16T07:13:46.800Z","type":"message"}
{"nick":"isaacs","message":"we plan to move a lot of this sort of stuff into core in v0.9","date":"2012-04-16T07:21:32.989Z","type":"message"}
{"nick":"isaacs","message":"a buffering pause(), etc.","date":"2012-04-16T07:21:39.241Z","type":"message"}
{"nick":"dominictarr","message":"ah, interesting.","date":"2012-04-16T07:35:55.237Z","type":"message"}
{"nick":"dominictarr","message":"maxogden: this is the API I'm thinking https://github.com/dominictarr/browser-stream","date":"2012-04-16T07:37:58.638Z","type":"message"}
{"nick":"isaacs","reason":"Remote host closed the connection","date":"2012-04-16T07:48:33.998Z","type":"quit"}
{"nick":"isaacs","date":"2012-04-16T07:49:13.454Z","type":"join"}
{"nick":"isaacs","reason":"Ping timeout: 272 seconds","date":"2012-04-16T07:54:59.217Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 40]","date":"2012-04-16T07:58:33.047Z","type":"message"}
{"nick":"mikeal","date":"2012-04-16T08:14:20.008Z","type":"join"}
{"nick":"dominictarr","message":"substack: you awake?","date":"2012-04-16T08:38:21.568Z","type":"message"}
{"nick":"SubStack","message":"yep","date":"2012-04-16T08:38:32.452Z","type":"message"}
{"nick":"dominictarr","message":"I have a question about browserify","date":"2012-04-16T08:38:44.518Z","type":"message"}
{"nick":"dominictarr","message":"what js does it bundle? only the tree of deps that are required?","date":"2012-04-16T08:39:12.375Z","type":"message"}
{"nick":"dominictarr","message":"or every thing in the node_modules dir","date":"2012-04-16T08:39:20.452Z","type":"message"}
{"nick":"SubStack","message":"only the things that are require()d","date":"2012-04-16T08:40:10.106Z","type":"message"}
{"nick":"SubStack","message":"it uses this module http://github.com/substack/node-detective","date":"2012-04-16T08:41:04.105Z","type":"message"}
{"nick":"dominictarr","message":"so if I only use core libs, it shoulb bundle pretty fast, correct?","date":"2012-04-16T08:41:17.400Z","type":"message"}
{"nick":"SubStack","message":"the speed of bundling is mostly determined by the size of the js files that it needs to walk over the AST for","date":"2012-04-16T08:42:29.593Z","type":"message"}
{"nick":"SubStack","message":"and the number of files","date":"2012-04-16T08:42:35.185Z","type":"message"}
{"nick":"SubStack","message":"and it's much faster than it used to be","date":"2012-04-16T08:42:42.257Z","type":"message"}
{"nick":"dominictarr","message":"oh, there was a dep i forgot.","date":"2012-04-16T08:42:49.520Z","type":"message"}
{"nick":"dominictarr","message":"it was dominode breaking stuff.","date":"2012-04-16T08:47:42.538Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 31]","date":"2012-04-16T08:58:32.954Z","type":"message"}
{"nick":"dominictarr","message":"maxogden: how do I bundle dominode? i'm getting: Cannot find module \"node-htmlparser/lib/node-htmlparser\"","date":"2012-04-16T09:04:54.662Z","type":"message"}
{"nick":"dominictarr","message":"ill post an issue","date":"2012-04-16T09:06:31.989Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 37]","date":"2012-04-16T09:58:33.592Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 38]","date":"2012-04-16T10:58:33.012Z","type":"message"}
{"nick":"tilgovi","reason":"Ping timeout: 272 seconds","date":"2012-04-16T11:08:47.415Z","type":"quit"}
{"nick":"zu","reason":"Ping timeout: 246 seconds","date":"2012-04-16T11:24:37.638Z","type":"quit"}
{"nick":"zu","date":"2012-04-16T11:39:20.424Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 35]","date":"2012-04-16T11:58:33.029Z","type":"message"}
{"nick":"TheJH","date":"2012-04-16T12:01:52.806Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 19]","date":"2012-04-16T12:58:32.929Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: Page closed","date":"2012-04-16T13:25:05.749Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 17]","date":"2012-04-16T13:58:33.571Z","type":"message"}
{"nick":"wiwillia","date":"2012-04-16T14:10:03.284Z","type":"join"}
{"nick":"simcop2387","reason":"Excess Flood","date":"2012-04-16T14:53:44.579Z","type":"quit"}
{"nick":"simcop2387","date":"2012-04-16T14:54:36.799Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 30]","date":"2012-04-16T14:58:33.158Z","type":"message"}
{"nick":"wiwillia2","date":"2012-04-16T15:08:52.556Z","type":"join"}
{"nick":"anoemi","date":"2012-04-16T15:09:14.420Z","type":"join"}
{"nick":"sorensen__","date":"2012-04-16T15:22:02.635Z","type":"join"}
{"nick":"sorensen__","reason":"Client Quit","date":"2012-04-16T15:22:20.321Z","type":"quit"}
{"nick":"Altreus","reason":"Ping timeout: 245 seconds","date":"2012-04-16T15:29:27.878Z","type":"quit"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) kirkusitadmin@... successfully signed up for developer browserling plan ($20). Cash money! /!\\","date":"2012-04-16T15:29:57.391Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) paid account successfully upgraded /!\\","date":"2012-04-16T15:29:57.588Z","type":"message"}
{"nick":"SubStack","message":"woot!","date":"2012-04-16T15:31:02.142Z","type":"message"}
{"nick":"pikpik","message":"\\o/","date":"2012-04-16T15:43:48.265Z","type":"message"}
{"nick":"Altreus","date":"2012-04-16T15:50:00.376Z","type":"join"}
{"nick":"wiwillia2","reason":"Ping timeout: 244 seconds","date":"2012-04-16T15:52:24.461Z","type":"quit"}
{"nick":"ryan_stevens","date":"2012-04-16T15:55:53.180Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 44]","date":"2012-04-16T15:58:33.025Z","type":"message"}
