{"nick":"mikolalysenko","date":"2014-02-11T15:03:12.902Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 272 seconds","date":"2014-02-11T15:08:21.916Z","type":"quit"}
{"nick":"shama","date":"2014-02-11T15:11:12.404Z","type":"join"}
{"nick":"kevino80","date":"2014-02-11T15:12:35.943Z","type":"join"}
{"nick":"shama","reason":"Ping timeout: 248 seconds","date":"2014-02-11T15:15:49.922Z","type":"quit"}
{"nick":"hemanth","reason":"Quit: This computer has gone to sleep","date":"2014-02-11T15:30:16.677Z","type":"quit"}
{"nick":"ogd","message":"chrisdickinson: ok h0ke figured out that doing 'git config http.postBuffer 524288000' on the client fixes the hanging pushes","date":"2014-02-11T15:33:54.598Z","type":"message"}
{"nick":"ogd","message":"chrisdickinson: and i found this post about how its not possible to have the server tell the client to up the limit, the client has to set it http://permalink.gmane.org/gmane.comp.version-control.git/233234","date":"2014-02-11T15:34:38.671Z","type":"message"}
{"nick":"ogd","message":"chrisdickinson: it seems like the code in git for doing FS IO is not as good at streaming as node","date":"2014-02-11T15:34:54.905Z","type":"message"}
{"nick":"ogd","message":"chrisdickinson: which leads me to my next question: what parts of `git-receive-pack --stateless-rpc` are already implemented in JS? packfile parsing, right?","date":"2014-02-11T15:35:27.627Z","type":"message"}
{"nick":"ednapiranha","date":"2014-02-11T15:44:51.160Z","type":"join"}
{"nick":"rowbit","message":"substack, pkrumins: A developer is waiting in the queue for chrome/23.0","date":"2014-02-11T15:46:54.052Z","type":"message"}
{"nick":"rowbit","message":"substack, pkrumins: A developer is waiting in the queue for chrome/27.0","date":"2014-02-11T15:48:53.864Z","type":"message"}
{"nick":"kenperkins","date":"2014-02-11T15:51:05.364Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 6, free: 32]","date":"2014-02-11T15:55:20.873Z","type":"message"}
