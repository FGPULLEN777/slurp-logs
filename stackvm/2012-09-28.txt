{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 11]","date":"2012-09-28T00:19:59.356Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2012-09-28T00:39:34.445Z","type":"quit"}
{"nick":"isaacs","message":"Raynos: pushed a \"fix all the bugs\" commit.  review would be much appreciated if you feel so inclined.  thanks!","date":"2012-09-28T00:43:02.182Z","type":"message"}
{"nick":"mike-d","date":"2012-09-28T00:59:44.828Z","type":"join"}
{"nick":"mike-d","reason":"Quit: mike-d","date":"2012-09-28T01:14:04.254Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 6, free: 18]","date":"2012-09-28T01:19:59.669Z","type":"message"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2012-09-28T01:29:19.391Z","type":"quit"}
{"nick":"AvianFlu","date":"2012-09-28T02:11:04.645Z","type":"join"}
{"nick":"Raynos","message":"isaacs: oh hi","date":"2012-09-28T02:17:00.063Z","type":"message"}
{"nick":"Raynos","message":"isaacs: The alternative to a weakmap is a closure and no prototypes. The other alternative is emulated weakmaps that intercept valueOf and other hacks.","date":"2012-09-28T02:17:38.763Z","type":"message"}
{"nick":"Raynos","message":"isaacs: I don't mind where the magic properties go to be honest","date":"2012-09-28T02:17:53.493Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 27]","date":"2012-09-28T02:19:59.339Z","type":"message"}
{"nick":"Raynos","message":"isaacs: I don't really follow most of readable-stream, it's complex.","date":"2012-09-28T02:33:22.948Z","type":"message"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-09-28T02:40:03.151Z","type":"nick"}
{"nick":"Raynos","message":"TOO MANY REPOS","date":"2012-09-28T03:19:16.303Z","type":"message"}
{"nick":"LOUDBOT","message":"NOBODY TOLD ME IT WOULD BE THIS MUCH WORK TO BE A SECRET MUSLIM","date":"2012-09-28T03:19:16.952Z","type":"message"}
{"nick":"Raynos","message":"REPOS WHY YOU SO MANY","date":"2012-09-28T03:19:22.721Z","type":"message"}
{"nick":"LOUDBOT","message":"ON DEMAND ICECREAM TRUCKS FROM UBER","date":"2012-09-28T03:19:23.001Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 37]","date":"2012-09-28T03:19:59.342Z","type":"message"}
{"nick":"AvianFlu_","date":"2012-09-28T03:55:47.247Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 240 seconds","date":"2012-09-28T03:57:14.435Z","type":"quit"}
{"nick":"stlsaint","reason":"Quit: leaving","date":"2012-09-28T04:19:57.310Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 26]","date":"2012-09-28T04:19:59.949Z","type":"message"}
{"nick":"AvianFlu_","new_nick":"AvianFlu","date":"2012-09-28T04:34:16.379Z","type":"nick"}
{"nick":"Raynos","message":"https://github.com/Raynos/proxy-stream#example","date":"2012-09-28T04:50:48.009Z","type":"message"}
{"nick":"Raynos","message":"isaacs: https://github.com/Raynos/proxy-stream#example","date":"2012-09-28T04:51:41.150Z","type":"message"}
{"nick":"Raynos","message":"The `transformation(chunk, next, end)` is a pretty solid primitive","date":"2012-09-28T04:51:55.338Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-09-28T05:09:01.074Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 12]","date":"2012-09-28T05:19:59.494Z","type":"message"}
{"nick":"thatguydan","date":"2012-09-28T05:49:17.850Z","type":"join"}
{"nick":"ryan_stevens","date":"2012-09-28T05:50:02.534Z","type":"join"}
{"nick":"substack","message":"oh no model.createStream() isn't emitting data :(","date":"2012-09-28T06:10:48.625Z","type":"message"}
{"nick":"saijanai_","date":"2012-09-28T06:12:24.148Z","type":"join"}
{"nick":"saijanai_","reason":"Excess Flood","date":"2012-09-28T06:12:25.219Z","type":"quit"}
{"nick":"AvianFlu_","date":"2012-09-28T06:16:16.867Z","type":"join"}
{"nick":"AvianFlu","reason":"Read error: Connection reset by peer","date":"2012-09-28T06:16:18.943Z","type":"quit"}
{"nick":"AvianFlu_","new_nick":"AvianFlu","date":"2012-09-28T06:17:14.991Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 3, free: 70]","date":"2012-09-28T06:19:59.347Z","type":"message"}
{"nick":"substack","message":"dominictarr_ZZZ: problem!","date":"2012-09-28T06:20:59.171Z","type":"message"}
{"nick":"substack","message":"in scuttlebutt","date":"2012-09-28T06:21:02.079Z","type":"message"}
{"nick":"substack","message":"the browser isn't synced!","date":"2012-09-28T06:21:11.407Z","type":"message"}
{"nick":"substack","message":"FOUND IT","date":"2012-09-28T06:24:16.811Z","type":"message"}
{"nick":"LOUDBOT","message":"THANKS FOR ASKING ME","date":"2012-09-28T06:24:17.435Z","type":"message"}
{"nick":"substack","message":"dominictarr_ZZZ: https://github.com/dominictarr/scuttlebutt/pull/8","date":"2012-09-28T06:30:25.764Z","type":"message"}
{"nick":"substack","message":"I'm observing some more bugs where the state doesn't get synchronized too","date":"2012-09-28T07:00:47.717Z","type":"message"}
{"nick":"substack","message":"but it should be ok for this demo","date":"2012-09-28T07:00:53.229Z","type":"message"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2012-09-28T07:11:05.612Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2012-09-28T07:13:55.084Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 61]","date":"2012-09-28T07:19:59.416Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-09-28T07:31:36.328Z","type":"quit"}
{"nick":"dominictarr_ZZZ","reason":"Ping timeout: 245 seconds","date":"2012-09-28T07:32:23.254Z","type":"quit"}
{"nick":"mikeal","date":"2012-09-28T07:41:45.762Z","type":"join"}
{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2012-09-28T07:45:45.523Z","type":"quit"}
{"nick":"mikeal","date":"2012-09-28T07:46:07.628Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2012-09-28T07:50:31.279Z","type":"quit"}
{"nick":"shuaib","reason":"Quit: Textual IRC Client: http://www.textualapp.com/","date":"2012-09-28T08:01:40.978Z","type":"quit"}
{"nick":"mbalho","message":"lxjs woowoo","date":"2012-09-28T08:15:21.356Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 43]","date":"2012-09-28T08:19:59.424Z","type":"message"}
{"nick":"substack","message":"for fucks sake cut the mic","date":"2012-09-28T08:44:16.920Z","type":"message"}
{"nick":"saijanai_","date":"2012-09-28T08:44:41.874Z","type":"join"}
{"nick":"saijanai_","reason":"Excess Flood","date":"2012-09-28T08:44:42.291Z","type":"quit"}
{"nick":"substack","message":"haha I cut 4 examples","date":"2012-09-28T08:54:05.962Z","type":"message"}
{"nick":"st_luke","date":"2012-09-28T08:56:27.543Z","type":"join"}
{"nick":"thatguydan","date":"2012-09-28T08:56:48.834Z","type":"join"}
{"nick":"substack","message":"still have 8 examples","date":"2012-09-28T08:58:13.367Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2012-09-28T09:00:36.443Z","type":"quit"}
{"nick":"thatguydan","reason":"Read error: Connection timed out","date":"2012-09-28T09:19:44.762Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 4, free: 52]","date":"2012-09-28T09:19:59.519Z","type":"message"}
{"nick":"thatguydan","date":"2012-09-28T09:20:50.586Z","type":"join"}
{"nick":"substack","message":"so I've got all the examples down to 17 minutes","date":"2012-09-28T09:24:25.826Z","type":"message"}
{"nick":"substack","message":"which leaves 3 minutes of slack for the intervening slides but hopefully I should go under that","date":"2012-09-28T09:24:49.751Z","type":"message"}
{"nick":"substack","message":"so I can finish with a minute or two to spare","date":"2012-09-28T09:25:00.195Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 36]","date":"2012-09-28T10:20:03.141Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 2, free: 22]","date":"2012-09-28T11:19:59.431Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 8, free: 37]","date":"2012-09-28T12:19:59.421Z","type":"message"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2012-09-28T12:33:50.579Z","type":"quit"}
{"nick":"dominictarr_ZZZ","date":"2012-09-28T12:40:33.896Z","type":"join"}
{"nick":"dominictarr_ZZZ","new_nick":"dominictarr","date":"2012-09-28T12:40:36.064Z","type":"nick"}
{"nick":"dominictarr","message":"substack, where did you put the examples?","date":"2012-09-28T12:40:50.096Z","type":"message"}
{"nick":"st_luke","date":"2012-09-28T12:43:31.791Z","type":"join"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2012-09-28T12:43:58.053Z","type":"quit"}
{"nick":"st_luke","date":"2012-09-28T12:50:22.440Z","type":"join"}
{"nick":"dominictarr","message":"nm, found it.","date":"2012-09-28T12:53:57.373Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2012-09-28T12:58:23.853Z","type":"quit"}
{"nick":"st_luke","date":"2012-09-28T12:59:58.523Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 252 seconds","date":"2012-09-28T13:05:12.324Z","type":"quit"}
{"nick":"mbalho","message":"dominictarr: ok so to do client side module caching i need to write that thing you mentioned that takes a package.json, a list of packages and versions you already have installed, and returns the missing modules","date":"2012-09-28T13:19:18.868Z","type":"message"}
{"nick":"mbalho","message":"dominictarr: what should the return format be?","date":"2012-09-28T13:19:53.174Z","type":"message"}
{"nick":"dominictarr","message":"mbalho, yes.","date":"2012-09-28T13:19:57.700Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 74]","date":"2012-09-28T13:19:59.428Z","type":"message"}
{"nick":"mbalho","message":"dominictarr: on the client im going to cache js in localstorage","date":"2012-09-28T13:20:04.740Z","type":"message"}
{"nick":"dominictarr","message":"mbalho, check out the format of a browserify bundle when you pass the --debug option.","date":"2012-09-28T13:20:49.022Z","type":"message"}
{"nick":"dominictarr","message":"you could return it as js, similar idea to jsonp, or you could just return a json structure.","date":"2012-09-28T13:21:43.472Z","type":"message"}
{"nick":"mbalho","message":"i guess im trying to figure out how to store it on the client most efficiently","date":"2012-09-28T13:22:34.141Z","type":"message"}
{"nick":"mbalho","message":"dominictarr: for example append only localstorage would have serialization/deserialization issues once the js got big","date":"2012-09-28T13:23:00.015Z","type":"message"}
{"nick":"mbalho","message":"dominictarr: assuming im storing allll the js in one big blob","date":"2012-09-28T13:23:20.136Z","type":"message"}
{"nick":"dominictarr","message":"hmm, I think you'd want to store each js file in it's own key.","date":"2012-09-28T13:23:29.147Z","type":"message"}
{"nick":"mbalho","message":"dominictarr: i wonder what the spread is like between one huge file and many small files in terms of load perf","date":"2012-09-28T13:24:05.166Z","type":"message"}
{"nick":"mbalho","message":"i guess it doesnt matter since localstorage is always blocking","date":"2012-09-28T13:24:14.975Z","type":"message"}
{"nick":"dominictarr","message":"with --debug it sends a blob, but then it adds seperate <script> tags.","date":"2012-09-28T13:24:49.532Z","type":"message"}
{"nick":"dominictarr","message":"you want to just do one request/response","date":"2012-09-28T13:25:26.404Z","type":"message"}
{"nick":"dominictarr","message":"but store each js independently, so if one changes, you can request JUST the files that have changed, or been added.","date":"2012-09-28T13:26:51.712Z","type":"message"}
{"nick":"mbalho","message":"--debug --prelude false is nice","date":"2012-09-28T13:26:55.841Z","type":"message"}
{"nick":"dominictarr","message":"mbalho, that looks handy.","date":"2012-09-28T13:27:14.744Z","type":"message"}
{"nick":"dominictarr","message":"mbalho, hey, by the way, you are at LXJS, right?","date":"2012-09-28T13:27:29.704Z","type":"message"}
{"nick":"saijanai_","date":"2012-09-28T13:27:31.233Z","type":"join"}
{"nick":"saijanai_","reason":"Excess Flood","date":"2012-09-28T13:27:31.572Z","type":"quit"}
{"nick":"mbalho","message":"dominictarr: it'd be nice if there was a json output","date":"2012-09-28T13:27:36.212Z","type":"message"}
{"nick":"mbalho","message":"dominictarr: yea im maxogden","date":"2012-09-28T13:27:45.847Z","type":"message"}
{"nick":"dominictarr","message":"had a funny feeling you where","date":"2012-09-28T13:28:05.946Z","type":"message"}
{"nick":"st_luke","date":"2012-09-28T13:46:29.426Z","type":"join"}
{"nick":"st_luke","reason":"Read error: Connection reset by peer","date":"2012-09-28T13:55:41.659Z","type":"quit"}
{"nick":"AvianFlu","date":"2012-09-28T14:08:59.757Z","type":"join"}
{"nick":"mbalho","message":"substack: trying to hack json output into browserify right now by changing this section to respect a json flag https://github.com/substack/node-browserify/blob/master/lib/wrap.js#L282-314","date":"2012-09-28T14:11:25.715Z","type":"message"}
{"nick":"mbalho","message":"substack: cant figure out what aliases, entries, and appends are though","date":"2012-09-28T14:11:42.758Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) paid account successfully upgraded /!\\","date":"2012-09-28T14:13:06.883Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) joe@... successfully signed up for developer browserling plan ($20). Cash money! /!\\","date":"2012-09-28T14:13:07.082Z","type":"message"}
{"nick":"mbalho","message":"substack: the output format i'm shooting for is {\"files\": [], \"aliases\": [], {\"request\": \"require.define(\"request\")blahblahblahblahblah\"}}","date":"2012-09-28T14:16:03.474Z","type":"message"}
{"nick":"mbalho","message":"substack: i noticed this https://github.com/substack/node-browserify/blob/master/bin/cmd.js#L101-104","date":"2012-09-28T14:16:43.438Z","type":"message"}
{"nick":"mbalho","message":"substack: and figured i should leave those in the json","date":"2012-09-28T14:17:03.400Z","type":"message"}
{"nick":"substack","message":"yep","date":"2012-09-28T14:17:18.515Z","type":"message"}
{"nick":"substack","message":"you can do all that stuff in a separate module completely from browserify","date":"2012-09-28T14:17:32.863Z","type":"message"}
{"nick":"substack","message":"implementing a different bundle() function","date":"2012-09-28T14:17:39.078Z","type":"message"}
{"nick":"substack","message":"browserify-json","date":"2012-09-28T14:18:10.471Z","type":"message"}
{"nick":"mbalho","message":"substack: i dont want to do all the stuff here again though https://github.com/substack/node-browserify/blob/master/lib/wrap.js#L231-281","date":"2012-09-28T14:19:43.646Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 2, free: 78]","date":"2012-09-28T14:19:59.366Z","type":"message"}
{"nick":"substack","message":"mbalho: how about a pull request that factors out .wrap() so it can take an optional callback with all the https://github.com/substack/node-browserify/blob/master/lib/wrap.js#L282-314","date":"2012-09-28T14:21:17.063Z","type":"message"}
{"nick":"mbalho","message":"werd","date":"2012-09-28T14:21:36.090Z","type":"message"}
{"nick":"mbalho","message":"i dont get why it cant be in browserify core though, its not like this is a generic solution in any way","date":"2012-09-28T14:21:58.477Z","type":"message"}
{"nick":"substack","message":"it actually is","date":"2012-09-28T14:22:23.776Z","type":"message"}
{"nick":"substack","message":"and an important thing for implementing bundles with static require() paths","date":"2012-09-28T14:22:47.800Z","type":"message"}
{"nick":"substack","message":"and for generating prelude-less composable bundles","date":"2012-09-28T14:23:00.915Z","type":"message"}
{"nick":"substack","message":"so you can just use browserify with a very minimal output footprint and so you can cat bundles together","date":"2012-09-28T14:23:25.031Z","type":"message"}
{"nick":"mbalho","message":"imo browserify should return a json object and the browserify command line tool should be a separate thing that takes that json and formats it for stdout","date":"2012-09-28T14:24:26.496Z","type":"message"}
{"nick":"substack","message":"correct","date":"2012-09-28T14:24:36.522Z","type":"message"}
{"nick":"substack","message":"but to get to that point will require splitting things up into some more modules","date":"2012-09-28T14:25:02.138Z","type":"message"}
{"nick":"mbalho","message":"substack: what are 'entries' and 'aliases' and 'appends'?","date":"2012-09-28T14:26:06.581Z","type":"message"}
{"nick":"mbalho","message":"substack: https://github.com/substack/node-browserify/blob/master/lib/wrap.js#L292-312","date":"2012-09-28T14:26:22.932Z","type":"message"}
{"nick":"substack","message":"browserify [entries]","date":"2012-09-28T14:26:55.282Z","type":"message"}
{"nick":"substack","message":"aliases are a horrible thing that remaps require()s","date":"2012-09-28T14:27:08.439Z","type":"message"}
{"nick":"substack","message":"appends is content to put after the bundle but inside the containing (function () {})()","date":"2012-09-28T14:27:38.343Z","type":"message"}
{"nick":"dominictarr","message":"substack, are you speaking today, or tomorrow?","date":"2012-09-28T14:27:48.620Z","type":"message"}
{"nick":"substack","message":"dominictarr: today","date":"2012-09-28T14:27:53.981Z","type":"message"}
{"nick":"dominictarr","message":"what time?","date":"2012-09-28T14:27:58.818Z","type":"message"}
{"nick":"substack","message":"17:10","date":"2012-09-28T14:28:08.158Z","type":"message"}
{"nick":"dominictarr","message":"realtime.js ? on the schedule?","date":"2012-09-28T14:28:54.453Z","type":"message"}
{"nick":"substack","message":"the last realtime.js talk","date":"2012-09-28T14:29:37.601Z","type":"message"}
{"nick":"dominictarr","message":"oh, got it.","date":"2012-09-28T14:30:42.840Z","type":"message"}
{"nick":"dominictarr","message":"trying to run your freestyle example","date":"2012-09-28T14:31:03.981Z","type":"message"}
{"nick":"shuaib","date":"2012-09-28T14:37:20.209Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 256 seconds","date":"2012-09-28T14:43:15.122Z","type":"quit"}
{"nick":"dominictarr","date":"2012-09-28T14:48:51.284Z","type":"join"}
{"nick":"_sorensen","date":"2012-09-28T14:50:24.573Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 245 seconds","date":"2012-09-28T14:53:13.282Z","type":"quit"}
{"nick":"dominictarr","date":"2012-09-28T15:00:26.152Z","type":"join"}
{"nick":"shuaib","reason":"Quit: Textual IRC Client: http://www.textualapp.com/","date":"2012-09-28T15:05:32.006Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 4, free: 53]","date":"2012-09-28T15:19:59.548Z","type":"message"}
{"nick":"_ritch","date":"2012-09-28T15:49:40.824Z","type":"join"}
{"nick":"guybrush","message":"lol mbalho i saw you on ustream :D","date":"2012-09-28T15:56:42.406Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 27]","date":"2012-09-28T16:19:59.907Z","type":"message"}
{"nick":"isaacs","message":"Raynos: in your proxy-stream examples, you're calling proxy(stream, transformFunction /*(chunk,next)*/), yes?","date":"2012-09-28T16:31:48.114Z","type":"message"}
{"nick":"isaacs","message":"Raynos: and next() may be called multiple times, or not at all.","date":"2012-09-28T16:31:59.193Z","type":"message"}
{"nick":"isaacs","message":"Raynos: how does back pressure work?","date":"2012-09-28T16:32:03.913Z","type":"message"}
{"nick":"isaacs","message":"Raynos: what if i have a transformation that takes >0 time?","date":"2012-09-28T16:32:15.963Z","type":"message"}
{"nick":"mike-d","date":"2012-09-28T16:43:33.476Z","type":"join"}
{"nick":"mike-d","reason":"Read error: Connection reset by peer","date":"2012-09-28T16:47:07.641Z","type":"quit"}
{"nick":"mike-d","date":"2012-09-28T16:47:49.622Z","type":"join"}
{"nick":"ryan_stevens","date":"2012-09-28T16:56:56.794Z","type":"join"}
{"nick":"jibay","date":"2012-09-28T17:00:11.059Z","type":"join"}
{"nick":"_sorensen","reason":"Ping timeout: 255 seconds","date":"2012-09-28T17:01:29.370Z","type":"quit"}
{"nick":"tphummel","date":"2012-09-28T17:05:44.736Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 245 seconds","date":"2012-09-28T17:11:58.415Z","type":"quit"}
{"nick":"rowbit","message":"Daily usage stats: [developer: 70, free: 907]","date":"2012-09-28T17:19:59.577Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 10, free: 27]","date":"2012-09-28T17:20:00.462Z","type":"message"}
{"nick":"_sorensen","date":"2012-09-28T17:21:17.477Z","type":"join"}
{"nick":"tphummel","reason":"Ping timeout: 248 seconds","date":"2012-09-28T17:21:52.526Z","type":"quit"}
{"nick":"isaacs","message":"Raynos: https://github.com/isaacs/readable-stream/issues/16#issuecomment-8984382 Are you saying you have no users?","date":"2012-09-28T17:22:15.176Z","type":"message"}
{"nick":"Raynos","message":"isaacs: yes, it's a badly phrased comment about making backwards breaking changes is easy if I have no users","date":"2012-09-28T17:22:42.237Z","type":"message"}
{"nick":"Raynos","message":"isaacs: next can be called multiple or not at all. back pressure works by returning false from the function","date":"2012-09-28T17:23:25.238Z","type":"message"}
{"nick":"Raynos","message":"if the transformation takes >0 time then call next later asynchronously and call end in the future","date":"2012-09-28T17:23:39.641Z","type":"message"}
{"nick":"Raynos","message":"it's really transform(chunk, write, end)","date":"2012-09-28T17:23:50.717Z","type":"message"}
{"nick":"isaacs","message":"oh, ok","date":"2012-09-28T17:23:55.885Z","type":"message"}
{"nick":"Raynos","message":"for each transformation your effectively given a writable stream to put the new state in","date":"2012-09-28T17:24:09.702Z","type":"message"}
{"nick":"isaacs","message":"so.. what happens if your transform takes time?","date":"2012-09-28T17:24:26.995Z","type":"message"}
{"nick":"Raynos","message":"proxy-stream needs a lot of testing for edgecases because the transform function is used in pipe, write & read","date":"2012-09-28T17:24:29.798Z","type":"message"}
{"nick":"Raynos","message":"isaacs: I don't understand. call next immediately or later or whatever","date":"2012-09-28T17:24:54.939Z","type":"message"}
{"nick":"isaacs","message":"so you have something like function transform(chunk, write, end) { setTimeout(write.bind(null, chunk), Math.floor(10000 * Math.random())) }","date":"2012-09-28T17:25:06.115Z","type":"message"}
{"nick":"Raynos","message":"that would work","date":"2012-09-28T17:25:22.296Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2012-09-28T17:25:25.304Z","type":"message"}
{"nick":"isaacs","message":"so, my chunks come at a rate of 1/ms","date":"2012-09-28T17:25:31.035Z","type":"message"}
{"nick":"isaacs","message":"how do i knwo that it's not ready to receive more?","date":"2012-09-28T17:25:42.824Z","type":"message"}
{"nick":"isaacs","message":"does write() return false if there's soemthing pending?","date":"2012-09-28T17:25:48.024Z","type":"message"}
{"nick":"isaacs","message":"is proxy-stream queing it up?","date":"2012-09-28T17:25:51.814Z","type":"message"}
{"nick":"Raynos","message":"Interesting","date":"2012-09-28T17:25:53.739Z","type":"message"}
{"nick":"Raynos","message":"proxy-stream queue's it up","date":"2012-09-28T17:26:05.491Z","type":"message"}
{"nick":"isaacs","message":"setInterval(stream.write.bind(stream, chunk), 1)","date":"2012-09-28T17:26:09.594Z","type":"message"}
{"nick":"isaacs","message":"i mean, you wouldn't do that of course.","date":"2012-09-28T17:26:18.574Z","type":"message"}
{"nick":"isaacs","message":"not in a setInterval","date":"2012-09-28T17:26:21.763Z","type":"message"}
{"nick":"isaacs","message":"it'd be a pipe, and the proxy-stream writable interface would have to return false to indicate that i should back off","date":"2012-09-28T17:26:35.104Z","type":"message"}
{"nick":"isaacs","message":"and then emit drain when it's ready for more","date":"2012-09-28T17:26:41.313Z","type":"message"}
{"nick":"Raynos","message":"yeah I havn't really thought about asynchronous transformations too much","date":"2012-09-28T17:27:17.352Z","type":"message"}
{"nick":"Raynos","message":"not with back pressure preservance anyway","date":"2012-09-28T17:27:28.366Z","type":"message"}
{"nick":"isaacs","message":"Raynos: my plan is to write a duplex interface, and a transform stream interface as well, where you have only to specify one method, and have all the buffering, water marks, etc. taken care of.","date":"2012-09-28T17:27:30.483Z","type":"message"}
{"nick":"Raynos","message":"proxy-stream is also a mess because it does too much","date":"2012-09-28T17:27:34.566Z","type":"message"}
{"nick":"isaacs","message":"Raynos: the issue is that, outside of synthetic userland streams, *most* transofmrations are asynchronous","date":"2012-09-28T17:27:47.583Z","type":"message"}
{"nick":"isaacs","message":"parsers can be sync, i suppose.","date":"2012-09-28T17:28:04.776Z","type":"message"}
{"nick":"Raynos","message":"it proxies write, read & pipe.","date":"2012-09-28T17:28:04.976Z","type":"message"}
{"nick":"isaacs","message":"it would be soooooo nice to just say \"Well, old readables are broken.  sorry guys.  rewrite everything\"","date":"2012-09-28T17:28:31.253Z","type":"message"}
{"nick":"isaacs","message":"but we're past that.","date":"2012-09-28T17:28:34.262Z","type":"message"}
{"nick":"isaacs","message":"that would be a python3 move.","date":"2012-09-28T17:28:36.143Z","type":"message"}
{"nick":"isaacs","message":"we're not python.  we're ok with being dirty on the way to getting clean.","date":"2012-09-28T17:28:51.102Z","type":"message"}
{"nick":"isaacs","message":"so, the path is, take on some horror bullshit shim complexity, try to convince everyone to use the new interface, and in a year maybe, remove the shims.","date":"2012-09-28T17:29:27.411Z","type":"message"}
{"nick":"tilgovi","date":"2012-09-28T17:29:29.255Z","type":"join"}
{"nick":"Raynos","message":"o/","date":"2012-09-28T17:29:46.302Z","type":"message"}
{"nick":"isaacs","message":"the real concern, at this point, is: Are we actually heading to something better?","date":"2012-09-28T17:29:54.731Z","type":"message"}
{"nick":"isaacs","message":"or are we just increasing the number of things?","date":"2012-09-28T17:30:04.201Z","type":"message"}
{"nick":"isaacs","message":"that's what keeps me up at night :)","date":"2012-09-28T17:30:13.091Z","type":"message"}
{"nick":"Raynos","message":"isaacs: do you have a good strategy for end buffering?","date":"2012-09-28T17:30:17.898Z","type":"message"}
{"nick":"isaacs","message":"Raynos: so, most streams in core will be backed by an async _read(n,cb) method, right?","date":"2012-09-28T17:30:38.171Z","type":"message"}
{"nick":"Raynos","message":"I guess so","date":"2012-09-28T17:30:52.850Z","type":"message"}
{"nick":"isaacs","message":"Raynos: since they're all either files, sockets, or \"other\" (crypto, zlib, etc.) which does some work in a thread.","date":"2012-09-28T17:31:01.200Z","type":"message"}
{"nick":"isaacs","message":"with files, when read(2) returns 0 bytes, you're done.","date":"2012-09-28T17:31:24.991Z","type":"message"}
{"nick":"isaacs","message":"with TCP streams, you get an explicit end","date":"2012-09-28T17:31:45.560Z","type":"message"}
{"nick":"Raynos","message":"I mean","date":"2012-09-28T17:31:58.026Z","type":"message"}
{"nick":"isaacs","message":"so, the _readableOptions.ended gets set to true","date":"2012-09-28T17:32:10.920Z","type":"message"}
{"nick":"Raynos","message":"a.pipe(transform).pipe(b)","date":"2012-09-28T17:32:11.773Z","type":"message"}
{"nick":"Raynos","message":"when a emits end it calls transform.end()","date":"2012-09-28T17:32:19.228Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2012-09-28T17:32:25.689Z","type":"message"}
{"nick":"Raynos","message":"transform then needs to wait for all the async transformation to finish","date":"2012-09-28T17:32:27.969Z","type":"message"}
{"nick":"Raynos","message":"and only then emit end to end b","date":"2012-09-28T17:32:31.841Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2012-09-28T17:32:35.209Z","type":"message"}
{"nick":"Raynos","message":"how do you implement that end buffering","date":"2012-09-28T17:32:37.164Z","type":"message"}
{"nick":"isaacs","message":"it only emits 'end' when its buffer is empty","date":"2012-09-28T17:32:40.400Z","type":"message"}
{"nick":"Raynos","message":"because i'm making a mess of it","date":"2012-09-28T17:32:45.007Z","type":"message"}
{"nick":"isaacs","message":"stream._readableOptions.ended = true","date":"2012-09-28T17:32:50.159Z","type":"message"}
{"nick":"isaacs","message":"then, when the buffer is cleared, emit end","date":"2012-09-28T17:32:55.332Z","type":"message"}
{"nick":"isaacs","message":"it might make more sense to call it _readableState","date":"2012-09-28T17:33:07.978Z","type":"message"}
{"nick":"isaacs","message":"since it's actually a state tracker, not an options object.","date":"2012-09-28T17:33:18.879Z","type":"message"}
{"nick":"Raynos","message":"I see","date":"2012-09-28T17:33:34.236Z","type":"message"}
{"nick":"isaacs","message":"Raynos: oh, shoot, you were right, i don't have to shallow-copy options any more.","date":"2012-09-28T17:36:11.177Z","type":"message"}
{"nick":"isaacs","message":"Raynos: since i'm putting everything on a different object anyhow.","date":"2012-09-28T17:36:21.679Z","type":"message"}
{"nick":"isaacs","message":"my bad.","date":"2012-09-28T17:36:24.266Z","type":"message"}
{"nick":"isaacs","message":"i just need to make sure it's an object at all:   options = options || {};","date":"2012-09-28T17:36:37.257Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2012-09-28T17:43:04.064Z","type":"message"}
{"nick":"Raynos","message":"isaacs: https://github.com/Raynos/read-stream#example-queue","date":"2012-09-28T17:43:20.275Z","type":"message"}
{"nick":"Raynos","message":"I've started pretending that a readable stream is simply a queue you can push stuff onto","date":"2012-09-28T17:43:38.029Z","type":"message"}
{"nick":"Raynos","message":"which is essentially what it is because every readable stream has an internal buffer and read reads from that","date":"2012-09-28T17:43:58.198Z","type":"message"}
{"nick":"isaacs","message":"Raynos: well, sure, except that it's not necessarily that :)","date":"2012-09-28T17:44:37.242Z","type":"message"}
{"nick":"Raynos","message":"its simpler to think of it like that","date":"2012-09-28T17:53:02.873Z","type":"message"}
{"nick":"mike-d","message":"isaacs: i'm sure this has been discussed, probably good reasons, but why is there no async require(…)","date":"2012-09-28T18:02:15.271Z","type":"message"}
{"nick":"isaacs","message":"mike-d: because it's very complicated, and of very limited value","date":"2012-09-28T18:02:38.367Z","type":"message"}
{"nick":"isaacs","message":"mike-d: we used to have require.async()","date":"2012-09-28T18:02:52.607Z","type":"message"}
{"nick":"isaacs","message":"mike-d: there are surprisingly complex edge cases to handle.","date":"2012-09-28T18:03:09.077Z","type":"message"}
{"nick":"_ritch","date":"2012-09-28T18:05:59.987Z","type":"part"}
{"nick":"mike-d","message":"isaacs: correct me if i'm wrong, and forgetting about the edge cases for a sec.. looking at the module code it's just fs that would need to be async… this could be useful for conditional inline requires","date":"2012-09-28T18:06:29.863Z","type":"message"}
{"nick":"isaacs","message":"mike-d: how do you know when it's loaded?","date":"2012-09-28T18:06:48.586Z","type":"message"}
{"nick":"isaacs","message":"mike-d: what if it does sync requires?  what if it has other async requires?  how do you know when allof those are loaded?","date":"2012-09-28T18:07:00.724Z","type":"message"}
{"nick":"isaacs","message":"i mean, yeah, \"forgetting about the edge cases\" it's very easy :)","date":"2012-09-28T18:07:13.349Z","type":"message"}
{"nick":"isaacs","message":"but that's a luxury i don't really have","date":"2012-09-28T18:07:20.663Z","type":"message"}
{"nick":"mike-d","message":"isaacs: in my case it's for http routing and hot loading the route handlers, which are requires and there are a bunch of them, so the require happens on the first request to that route and since require uses fs.readFileSync it blocks… but yes loading deps would be a huge pain, got it","date":"2012-09-28T18:12:29.402Z","type":"message"}
{"nick":"isaacs","message":"mike-d: how many routes is \"a bunch\"?","date":"2012-09-28T18:13:31.930Z","type":"message"}
{"nick":"isaacs","message":"mike-d: ie, how many millions of routes do you have?","date":"2012-09-28T18:13:39.199Z","type":"message"}
{"nick":"mike-d","message":"LOL 100 Billion Routes","date":"2012-09-28T18:14:14.408Z","type":"message"}
{"nick":"isaacs","message":"mike-d: if your answer is less than 1000, just load them all up front synchronously","date":"2012-09-28T18:14:16.139Z","type":"message"}
{"nick":"isaacs","message":"no, srsly.","date":"2012-09-28T18:14:19.159Z","type":"message"}
{"nick":"isaacs","message":"i mean, you have multiple gigabytes of memory in your server, right?","date":"2012-09-28T18:14:30.083Z","type":"message"}
{"nick":"isaacs","message":"it's better to just not hot-swap","date":"2012-09-28T18:14:52.018Z","type":"message"}
{"nick":"isaacs","message":"like, have a cluster, and load them up-front at start time, and when you get new ones, do a rolling restart","date":"2012-09-28T18:15:09.840Z","type":"message"}
{"nick":"mike-d","message":"isaacs: actually it's in the 1000s \u001crange, multi-tenant, lots of low traffic small sites is the use case","date":"2012-09-28T18:16:04.500Z","type":"message"}
{"nick":"isaacs","message":"mike-d: yeah.  no need for hot-swapping.","date":"2012-09-28T18:16:23.618Z","type":"message"}
{"nick":"isaacs","message":"just assume that Can't Be Done, for now, and address it when and if you ever need it (which i'm betting you won't, actually)","date":"2012-09-28T18:16:40.318Z","type":"message"}
{"nick":"isaacs","message":"when you need to, it's just js, just roll your own thingie.","date":"2012-09-28T18:17:01.598Z","type":"message"}
{"nick":"isaacs","message":"not worth adding complexity and brittleness to core.","date":"2012-09-28T18:17:09.508Z","type":"message"}
{"nick":"mike-d","message":"isaacs: i'm still gonna hot swap for other reasons, but i'll just take the sync hit, and since it's hosted at joyent it should be fine as disk io is fast","date":"2012-09-28T18:17:50.107Z","type":"message"}
{"nick":"Raynos","message":"isaacs: I would like an async require in user land that doesn't do caching.","date":"2012-09-28T18:19:34.440Z","type":"message"}
{"nick":"Raynos","message":"It's useful for hot reloading and it's bloody hard to implement correctly and it's hard coupled to the implementation of the undocumented module implementation","date":"2012-09-28T18:19:58.938Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 26]","date":"2012-09-28T18:19:59.459Z","type":"message"}
{"nick":"mike-d","message":"Raynos: let's hack it, i'm game, could we do it as a module without hitting core?","date":"2012-09-28T18:21:52.691Z","type":"message"}
{"nick":"Raynos","message":"of course you can.","date":"2012-09-28T18:22:01.653Z","type":"message"}
{"nick":"mike-d","message":"I thought so, also thought I was going to run into internal caching issues with require() as well and it looks like you're saying that would be the case","date":"2012-09-28T18:23:23.827Z","type":"message"}
{"nick":"isaacs","message":"isn't require.js like, already exactly this?","date":"2012-09-28T18:24:49.191Z","type":"message"}
{"nick":"isaacs","message":"or AMD?","date":"2012-09-28T18:24:51.881Z","type":"message"}
{"nick":"isaacs","message":"i mean, there are implementations already","date":"2012-09-28T18:24:55.940Z","type":"message"}
{"nick":"mike-d","message":"I believe require does async loading","date":"2012-09-28T18:26:04.679Z","type":"message"}
{"nick":"mike-d","message":"require.js","date":"2012-09-28T18:26:15.604Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) sherry.zhou@... successfully signed up for developer browserling plan ($20). Cash money! /!\\","date":"2012-09-28T18:30:53.172Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) paid account successfully upgraded /!\\","date":"2012-09-28T18:30:53.371Z","type":"message"}
{"nick":"Raynos","message":"isaacs: the problem is npm support","date":"2012-09-28T18:33:35.327Z","type":"message"}
{"nick":"Raynos","message":"isaacs: It's also about watching file changes of source code and swapping in a new implementation of a module at run-time without taking the server down","date":"2012-09-28T18:34:11.682Z","type":"message"}
{"nick":"Raynos","message":"it's about hot code reload","date":"2012-09-28T18:34:17.505Z","type":"message"}
{"nick":"mike-d","message":"Raynos: exactly, in my case it's a little different, i'm using function swapping so that active requests can finish up on the old code while the new code is loaded and initialized (i'm accounting for async boostraping) and then when completed, the function is swapped and any new request hit the new handler code","date":"2012-09-28T18:42:29.628Z","type":"message"}
{"nick":"mike-d","message":"Raynos: but I think module caching is going to cause pain","date":"2012-09-28T18:43:49.645Z","type":"message"}
{"nick":"tilgovi","reason":"Read error: Connection reset by peer","date":"2012-09-28T18:48:09.310Z","type":"quit"}
{"nick":"Raynos","message":"https://twitter.com/Raynos2/status/251757566781177856","date":"2012-09-28T18:59:00.977Z","type":"message"}
{"nick":"Raynos","message":"streams are like callbacks on STERIODS","date":"2012-09-28T18:59:07.703Z","type":"message"}
{"nick":"mike-d","message":"Buffers are like Arrays on Steroids :D","date":"2012-09-28T19:04:59.004Z","type":"message"}
{"nick":"mike-d","message":"Raynos: how are you \"using streams as callbacks\" do you have an example?","date":"2012-09-28T19:06:13.561Z","type":"message"}
{"nick":"Raynos","message":"mike-d: https://github.com/Raynos/proxy-stream#example","date":"2012-09-28T19:06:38.392Z","type":"message"}
{"nick":"mike-d","message":"Raynos: so instead of streaming bytes, you're streaming array elements","date":"2012-09-28T19:12:17.757Z","type":"message"}
{"nick":"thatguydan","date":"2012-09-28T19:14:18.381Z","type":"join"}
{"nick":"thatguydan","reason":"Client Quit","date":"2012-09-28T19:14:18.381Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 7, free: 46]","date":"2012-09-28T19:19:59.453Z","type":"message"}
{"nick":"tilgovi","date":"2012-09-28T19:43:20.383Z","type":"join"}
{"nick":"owen1","reason":"Ping timeout: 245 seconds","date":"2012-09-28T19:58:31.666Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 57]","date":"2012-09-28T20:19:59.541Z","type":"message"}
{"nick":"Raynos","message":"isaacs: is _read just like util._extend. i.e. meant internally for making the node core DRY. Or is it part of the public API ?","date":"2012-09-28T20:37:39.974Z","type":"message"}
{"nick":"Raynos","message":"mike-d: Something like that. but it's an infinite array","date":"2012-09-28T20:37:55.537Z","type":"message"}
{"nick":"owen1","date":"2012-09-28T20:53:33.333Z","type":"join"}
{"nick":"mike-d","message":"Raynos: cool, are you streaming them one element at a time or streaming them in batches as they come in?","date":"2012-09-28T20:54:42.879Z","type":"message"}
{"nick":"Raynos","message":"streams work one element at a time","date":"2012-09-28T20:55:00.546Z","type":"message"}
{"nick":"Raynos","message":"it depends what you mean","date":"2012-09-28T20:55:06.161Z","type":"message"}
{"nick":"mike-d","message":"one fn call per array element, is a chunk one element in the array or an array with all the elements you have at that time, sorry if it's a dumb question, did not pour through the code","date":"2012-09-28T20:56:32.277Z","type":"message"}
{"nick":"mike-d","message":"Raynos: btw, check out require.cache, just log it, interesting stuff going on, also it could be safe to invalidate based on some limited research","date":"2012-09-28T20:58:31.385Z","type":"message"}
{"nick":"Raynos","message":"mike-d: I know about that","date":"2012-09-28T20:59:17.094Z","type":"message"}
{"nick":"Raynos","message":"mike-d: a chunk is a single thing.","date":"2012-09-28T20:59:35.412Z","type":"message"}
{"nick":"Raynos","message":"mike-d: A chunk depends on what the underlying data sources gives you","date":"2012-09-28T20:59:53.765Z","type":"message"}
{"nick":"Raynos","message":"mike-d: https://github.com/Raynos/events-stream#example events stream gives you a single DOM event thing for each iterator","date":"2012-09-28T21:00:16.895Z","type":"message"}
{"nick":"mike-d","message":"i'm adding event emitter to my router as a hook for hot loading and will do some testing, yea, sorry was pretty sure you knew about require.cache, i'm a C programmer so node internals are kinda new to me","date":"2012-09-28T21:00:17.976Z","type":"message"}
{"nick":"mike-d","message":"I see so if you pipe [1,2,3] into a stream a chunk is [1,2,3] and not three chunk calls 1 then 2 then 3","date":"2012-09-28T21:01:54.747Z","type":"message"}
{"nick":"mike-d","message":"I also like your from to syntax, nice","date":"2012-09-28T21:02:46.006Z","type":"message"}
{"nick":"mike-d","message":"readable and writable IMO are not intuitive, source dest is better","date":"2012-09-28T21:03:32.557Z","type":"message"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-09-28T21:04:59.971Z","type":"nick"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2012-09-28T21:07:42.949Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-09-28T21:09:22.152Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 42]","date":"2012-09-28T21:19:59.501Z","type":"message"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-09-28T21:32:37.374Z","type":"nick"}
{"nick":"isaacs","message":"Raynos: _read is intended to be overridden, if you want to provide an asynchronous way of getting data.","date":"2012-09-28T22:17:43.056Z","type":"message"}
{"nick":"isaacs","message":"Raynos: maybe it makes sense to rename it to readAsync or somethign?","date":"2012-09-28T22:18:00.248Z","type":"message"}
{"nick":"isaacs","message":"Raynos: read2()?  readLowlevel?","date":"2012-09-28T22:18:21.025Z","type":"message"}
{"nick":"isaacs","message":"i don't know","date":"2012-09-28T22:18:23.425Z","type":"message"}
{"nick":"isaacs","message":"the _ means to me, \"internal function\"","date":"2012-09-28T22:18:42.285Z","type":"message"}
{"nick":"isaacs","message":"but some people read _ as \"do not touch, do not override, pretend you can't see this\"","date":"2012-09-28T22:18:54.885Z","type":"message"}
{"nick":"isaacs","message":"pseudo-private","date":"2012-09-28T22:18:58.835Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 35]","date":"2012-09-28T22:19:59.431Z","type":"message"}
{"nick":"Raynos","message":"isaacs: I know how its supposed to be used. I mean is it going to publically documented?","date":"2012-09-28T22:31:46.359Z","type":"message"}
{"nick":"isaacs","message":"Raynos: yes, it will be extremely documented.","date":"2012-09-28T22:43:28.787Z","type":"message"}
{"nick":"isaacs","message":"Raynos: i'm finally starting to feel kind of good about this API","date":"2012-09-28T22:50:21.722Z","type":"message"}
{"nick":"isaacs","message":"or at least, about this implementation.","date":"2012-09-28T22:50:27.442Z","type":"message"}
{"nick":"isaacs","message":"i think the complexity is fairly well isolated.","date":"2012-09-28T22:50:37.582Z","type":"message"}
{"nick":"isaacs","message":"it does suck that we have to support the existing patterns, but oh well.","date":"2012-09-28T22:51:05.702Z","type":"message"}
{"nick":"ryan_stevens","date":"2012-09-28T23:01:07.058Z","type":"join"}
{"nick":"Raynos","reason":"Remote host closed the connection","date":"2012-09-28T23:04:13.442Z","type":"quit"}
{"nick":"niftylettuce","reason":"Read error: Connection reset by peer","date":"2012-09-28T23:04:13.912Z","type":"quit"}
{"nick":"pikpik","reason":"Remote host closed the connection","date":"2012-09-28T23:04:14.111Z","type":"quit"}
{"nick":"sveisvei","reason":"Remote host closed the connection","date":"2012-09-28T23:04:14.112Z","type":"quit"}
{"nick":"ec","reason":"Remote host closed the connection","date":"2012-09-28T23:04:14.511Z","type":"quit"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-09-28T23:04:28.980Z","type":"nick"}
{"nick":"ryanseddon","reason":"Read error: Connection reset by peer","date":"2012-09-28T23:04:42.952Z","type":"quit"}
{"nick":"duncanbeevers","reason":"Read error: Connection reset by peer","date":"2012-09-28T23:04:43.152Z","type":"quit"}
{"nick":"_sorensen","reason":"Ping timeout: 245 seconds","date":"2012-09-28T23:05:18.584Z","type":"quit"}
{"nick":"sveisvei","date":"2012-09-28T23:07:19.195Z","type":"join"}
{"nick":"pikpik","date":"2012-09-28T23:08:44.432Z","type":"join"}
{"nick":"jibay","reason":"Quit: Leaving","date":"2012-09-28T23:12:21.664Z","type":"quit"}
{"nick":"sveisvei","reason":"Remote host closed the connection","date":"2012-09-28T23:13:07.483Z","type":"quit"}
{"nick":"pikpik","reason":"Remote host closed the connection","date":"2012-09-28T23:13:08.103Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 2, free: 22]","date":"2012-09-28T23:19:59.441Z","type":"message"}
{"nick":"ryanseddon","date":"2012-09-28T23:22:20.193Z","type":"join"}
{"nick":"ryanseddon","reason":"Remote host closed the connection","date":"2012-09-28T23:23:29.037Z","type":"quit"}
{"nick":"mike-d","reason":"Quit: mike-d","date":"2012-09-28T23:33:16.948Z","type":"quit"}
{"nick":"pikpik","date":"2012-09-28T23:37:29.242Z","type":"join"}
{"nick":"ec","date":"2012-09-28T23:38:58.401Z","type":"join"}
{"nick":"ryanseddon","date":"2012-09-28T23:46:31.112Z","type":"join"}
{"nick":"sveisvei","date":"2012-09-28T23:48:04.020Z","type":"join"}
{"nick":"Raynos","date":"2012-09-28T23:48:59.657Z","type":"join"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-09-28T23:58:22.462Z","type":"quit"}
