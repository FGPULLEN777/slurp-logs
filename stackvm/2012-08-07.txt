{"nick":"chapel","message":"whiskey !== water what so ever","date":"2012-08-07T00:00:35.234Z","type":"message"}
{"nick":"xaq","date":"2012-08-07T00:09:19.185Z","type":"join"}
{"nick":"xaq","reason":"Remote host closed the connection","date":"2012-08-07T00:15:46.496Z","type":"quit"}
{"nick":"saijanai_","date":"2012-08-07T00:26:56.911Z","type":"join"}
{"nick":"dominictarr","message":"dools, have you seen the size of the curiosity though?","date":"2012-08-07T00:28:11.340Z","type":"message"}
{"nick":"dominictarr","message":"(sorry guys I've been out drinking with mmalecki)","date":"2012-08-07T00:28:26.772Z","type":"message"}
{"nick":"dominictarr","message":"http://i924.photobucket.com/albums/ad81/rdbrewer/PIA15279_3rovers-stand_D2011_1215_D-1.jpg","date":"2012-08-07T00:29:32.074Z","type":"message"}
{"nick":"dominictarr","message":"Raynos, what module doesn't have a repo link?","date":"2012-08-07T00:30:11.125Z","type":"message"}
{"nick":"dominictarr","message":"isaacs all my modules have readme.markdown. but npm doesn't notice if it's lowercase filename, and npm was collecting readmes for longer than it's been showing them, so I didn't realize.","date":"2012-08-07T00:31:22.230Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: there isn't even a readme in the tarball, though","date":"2012-08-07T00:31:48.783Z","type":"message"}
{"nick":"dools","message":"dominictarr: yeah saw that photo. it's definitely bigger. i just sort of assumed that the general public would, you know, be bored of landing on mars. i understand it's an incredible achievement to do it engineering wise but, we've already \"landed on mars\" - where's the magic? where's the fascination?","date":"2012-08-07T00:32:09.197Z","type":"message"}
{"nick":"dominictarr","message":"i'm kinda bored by it actually","date":"2012-08-07T00:32:59.991Z","type":"message"}
{"nick":"dominictarr","message":"to be honest","date":"2012-08-07T00:33:05.579Z","type":"message"}
{"nick":"dominictarr","message":"but I am pleased by everyone's enthusiasm, and you should be too.","date":"2012-08-07T00:33:29.303Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: through","date":"2012-08-07T00:33:55.365Z","type":"message"}
{"nick":"dools","message":"yeah i suppose an electric atmosphere is an electric atmosphere. i remember when they had the olympics in sydney it was a massive party and i was out every night even though i don't give a shit about the olympics","date":"2012-08-07T00:34:13.732Z","type":"message"}
{"nick":"dominictarr","message":"isaacs, what module are we talking about?","date":"2012-08-07T00:34:18.872Z","type":"message"}
{"nick":"isaacs","message":"through","date":"2012-08-07T00:34:25.991Z","type":"message"}
{"nick":"dominictarr","message":"oh, hang on.","date":"2012-08-07T00:34:34.655Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: what's the git repo url for it?  if it actually does have a readme, i'll check out why it's not publishing it","date":"2012-08-07T00:34:49.251Z","type":"message"}
{"nick":"dominictarr","message":"silly me for picking such a common name.","date":"2012-08-07T00:34:56.826Z","type":"message"}
{"nick":"dominictarr","message":"next one I'll name 'what module?'","date":"2012-08-07T00:35:09.411Z","type":"message"}
{"nick":"isaacs","message":"lol","date":"2012-08-07T00:35:31.380Z","type":"message"}
{"nick":"isaacs","message":"\"what module?\"  \"yeah, that one.\"  \"which one?\"  \"no, that's the dependency.\"  \"what module is the dependency?\"  \"no, what module is the one i'm talking about.\"  \"what module?\" \"Exactly!\"","date":"2012-08-07T00:36:20.480Z","type":"message"}
{"nick":"isaacs","message":"\"so it depends on which one?\"  \"Yes.\"","date":"2012-08-07T00:36:43.605Z","type":"message"}
{"nick":"isaacs","message":"too bad spaces and ? aren't allowed in module names","date":"2012-08-07T00:36:55.439Z","type":"message"}
{"nick":"dominictarr","message":"damn, I wasn't fast enough.","date":"2012-08-07T00:37:17.613Z","type":"message"}
{"nick":"dominictarr","message":"if only I could send that idea back in time.","date":"2012-08-07T00:37:42.440Z","type":"message"}
{"nick":"dominictarr","message":"instead I will have to wait for the thing to make node look like ruby, and publish a module named \"do you really think you should allow this name?\"","date":"2012-08-07T00:38:31.682Z","type":"message"}
{"nick":"isaacs","message":"lol","date":"2012-08-07T00:39:42.330Z","type":"message"}
{"nick":"isaacs","message":"i wsn't fast enough with the case sensitivity, though","date":"2012-08-07T00:39:50.700Z","type":"message"}
{"nick":"isaacs","message":"didn't realize what a pita that'd end up being","date":"2012-08-07T00:40:00.380Z","type":"message"}
{"nick":"stlsaint","date":"2012-08-07T00:41:55.263Z","type":"join"}
{"nick":"dominictarr","message":"raynos: see through@0.1.3","date":"2012-08-07T00:42:46.692Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: I keep getting does not have stream:2df9a99d60815d5e errors from mdm","date":"2012-08-07T00:42:47.926Z","type":"message"}
{"nick":"Raynos","message":"are there any common bug patterns","date":"2012-08-07T00:42:55.638Z","type":"message"}
{"nick":"Raynos","message":"I dont know what I'm doing wrong","date":"2012-08-07T00:43:00.377Z","type":"message"}
{"nick":"dominictarr","message":"can you reproduce?","date":"2012-08-07T00:43:12.251Z","type":"message"}
{"nick":"Raynos","message":"i need to decouple it from my production code","date":"2012-08-07T00:43:38.303Z","type":"message"}
{"nick":"dominictarr","message":"it sounds like it's getting out of sync, like maybe this would happen if you reconneced a client to a server that has restarted.","date":"2012-08-07T00:43:51.218Z","type":"message"}
{"nick":"dominictarr","message":"the error throws, right?","date":"2012-08-07T00:44:13.770Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2012-08-07T00:45:20.470Z","type":"message"}
{"nick":"Raynos","message":"thats exactly what im doing","date":"2012-08-07T00:45:23.781Z","type":"message"}
{"nick":"Raynos","message":"reconnecting a client to a server that has restarted","date":"2012-08-07T00:45:29.917Z","type":"message"}
{"nick":"Raynos","message":"yes the error throws","date":"2012-08-07T00:45:36.012Z","type":"message"}
{"nick":"Raynos","message":"thus crashing the hell out of my computer","date":"2012-08-07T00:45:40.944Z","type":"message"}
{"nick":"Raynos","message":"actually I dont do it just when I reconnect","date":"2012-08-07T00:45:46.679Z","type":"message"}
{"nick":"Raynos","message":"its definitely an issue of the new event getting lost","date":"2012-08-07T00:45:58.304Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: https://github.com/Raynos/multi-channel-mdm/commit/b35c5a1d7eb201d65d0d4da029f80e020b13dd5f","date":"2012-08-07T00:47:19.738Z","type":"message"}
{"nick":"Raynos","message":"reproduced","date":"2012-08-07T00:47:24.834Z","type":"message"}
{"nick":"Raynos","message":"I should try reproducing it at a lower abstraction level :P","date":"2012-08-07T00:47:32.268Z","type":"message"}
{"nick":"dominictarr","message":"you can't send an old stream to a new server, because it won't know what you are talking about.","date":"2012-08-07T00:48:00.328Z","type":"message"}
{"nick":"dominictarr","message":"however, I've just realized that I can handle the error differently.","date":"2012-08-07T00:48:15.111Z","type":"message"}
{"nick":"dominictarr","message":"I could actually send back a message that said that stream errored.","date":"2012-08-07T00:48:32.485Z","type":"message"}
{"nick":"dominictarr","message":"and emit the error on the client side.","date":"2012-08-07T00:48:46.499Z","type":"message"}
{"nick":"dominictarr","message":"the server shouldn't crash, because the client has done something wrong.","date":"2012-08-07T00:49:06.505Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: i know but thats not what Im doing","date":"2012-08-07T00:49:11.889Z","type":"message"}
{"nick":"Raynos","message":"im not sending an old stream to a new server","date":"2012-08-07T00:49:18.815Z","type":"message"}
{"nick":"dominictarr","message":"oh, what are you doing?","date":"2012-08-07T00:49:23.587Z","type":"message"}
{"nick":"Raynos","message":"i think i found a race condition","date":"2012-08-07T00:49:27.151Z","type":"message"}
{"nick":"dominictarr","message":"reading your code","date":"2012-08-07T00:50:37.487Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: https://github.com/Raynos/boot/commit/d262c055b568d5cb4b85c416a6c6d3511bd985da","date":"2012-08-07T00:50:42.228Z","type":"message"}
{"nick":"Raynos","message":"ignore multi-channel","date":"2012-08-07T00:50:45.718Z","type":"message"}
{"nick":"Raynos","message":"its reproducable in boot which is a lower abstraction level","date":"2012-08-07T00:50:53.830Z","type":"message"}
{"nick":"Raynos","message":"ill see if I can reproduce it in mdm-shoe","date":"2012-08-07T00:51:03.161Z","type":"message"}
{"nick":"dominictarr","message":"I need a tight script that I can add as a test case.","date":"2012-08-07T00:51:23.280Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: working on it","date":"2012-08-07T00:52:15.507Z","type":"message"}
{"nick":"dominictarr","message":"like, in-process or just tcp","date":"2012-08-07T00:52:22.742Z","type":"message"}
{"nick":"Raynos","message":"dominictar: https://github.com/Raynos/mux-demux-shoe/commit/bccb427447d964d169f02a20a0600e8607405ae4","date":"2012-08-07T00:53:24.130Z","type":"message"}
{"nick":"Raynos","message":"it may only be reproducable over shoe, but at least it has nothing to do with boot or multi channel","date":"2012-08-07T00:53:43.742Z","type":"message"}
{"nick":"dominictarr","message":"does that make the same error?","date":"2012-08-07T00:55:10.700Z","type":"message"}
{"nick":"dominictarr","message":"can you paste the error trace?","date":"2012-08-07T00:55:30.672Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: https://gist.github.com/fd8bbfd46ca6be74bb7e","date":"2012-08-07T00:57:26.147Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-08-07T00:58:52.880Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: I'll try to reproduce it without shoe later.","date":"2012-08-07T01:02:36.508Z","type":"message"}
{"nick":"dominictarr","message":"mux-demux doesn't have a 'connect' event, that is shoe's thing.","date":"2012-08-07T01:03:20.694Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: I know, shoe has a connect event. but writing to a mux demux stream in that callback makes the race condition occur","date":"2012-08-07T01:05:08.213Z","type":"message"}
{"nick":"dominictarr","message":"yes","date":"2012-08-07T01:05:17.802Z","type":"message"}
{"nick":"dominictarr","message":"so when exactly does shoe emit the connect event?","date":"2012-08-07T01:05:58.115Z","type":"message"}
{"nick":"Raynos","message":"when the connection to the websocket is open","date":"2012-08-07T01:06:08.075Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/substack/shoe/blob/master/browser.js#L49","date":"2012-08-07T01:06:31.664Z","type":"message"}
{"nick":"Raynos","message":"Oh I see","date":"2012-08-07T01:06:33.677Z","type":"message"}
{"nick":"Raynos","message":"I bet its because the buffer is send after the connect event","date":"2012-08-07T01:06:40.407Z","type":"message"}
{"nick":"Raynos","message":"bingo!","date":"2012-08-07T01:06:44.044Z","type":"message"}
{"nick":"Raynos","message":"i need to move that connect event lower","date":"2012-08-07T01:06:55.104Z","type":"message"}
{"nick":"Raynos","message":"or use process.nextTick","date":"2012-08-07T01:07:07.755Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: this fixes my issue, its not an issue with mdm, its clearly an issue with shoe","date":"2012-08-07T01:07:39.768Z","type":"message"}
{"nick":"dominictarr","message":"yeah, that is a bug in shoe.","date":"2012-08-07T01:09:20.202Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: thanks and sorry :(","date":"2012-08-07T01:09:37.953Z","type":"message"}
{"nick":"dominictarr","message":"it souldn't emit the event until after it's cleared the buffer.","date":"2012-08-07T01:09:53.172Z","type":"message"}
{"nick":"dominictarr","message":"or, even better, in write() it should push onto the buffer if it has a truthy length.","date":"2012-08-07T01:10:40.793Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: https://github.com/dominictarr/mux-demux/pull/4","date":"2012-08-07T01:10:56.934Z","type":"message"}
{"nick":"dominictarr","message":"basically, it's writing the message before mux-demux has send the create stream message","date":"2012-08-07T01:11:20.397Z","type":"message"}
{"nick":"dominictarr","message":"raynos, that pr isn't right, because it's the server still has to send the end message. it may still have more information to send.","date":"2012-08-07T01:13:39.879Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: Hmm, I agree, there is still the issue of the pipe memory leak and not knowing how to handle that memory leak","date":"2012-08-07T01:14:09.821Z","type":"message"}
{"nick":"Raynos","message":"maybe it should emit another event like \"ended\" that I can catch and end the stream myself","date":"2012-08-07T01:14:23.006Z","type":"message"}
{"nick":"dominictarr","message":"it's like this http://nodejs.org/api/net.html allowHalfOpen","date":"2012-08-07T01:14:39.064Z","type":"message"}
{"nick":"dominictarr","message":"call destroy immediately after end.","date":"2012-08-07T01:14:59.221Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: I don't end it. the pipe ends it","date":"2012-08-07T01:15:33.760Z","type":"message"}
{"nick":"Raynos","message":"I guess I can call close","date":"2012-08-07T01:15:58.109Z","type":"message"}
{"nick":"dominictarr","message":"of course. you could listen to the previous stream, or wrap the function","date":"2012-08-07T01:16:42.681Z","type":"message"}
{"nick":"dominictarr","message":"... or you could modify your pr so it used a allowHalfOpen option.","date":"2012-08-07T01:17:12.585Z","type":"message"}
{"nick":"dominictarr","message":"I'd take that because it's consistent with net","date":"2012-08-07T01:17:41.614Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: how would I use allowHalfOpen?","date":"2012-08-07T01:18:13.122Z","type":"message"}
{"nick":"Raynos","message":"default to false and call end for me and if true dont call end?","date":"2012-08-07T01:18:20.730Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: take this one instead :P https://github.com/dominictarr/mux-demux/pull/5","date":"2012-08-07T01:18:31.504Z","type":"message"}
{"nick":"dominictarr","message":"yes","date":"2012-08-07T01:18:35.035Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: what version of npm did you just publish through with?","date":"2012-08-07T01:22:04.819Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: npm -v","date":"2012-08-07T01:22:07.886Z","type":"message"}
{"nick":"dominictarr","message":"Raynos, yup, I'll pull that","date":"2012-08-07T01:22:58.471Z","type":"message"}
{"nick":"dominictarr","message":"isaacs, npm@1.1.45","date":"2012-08-07T01:23:19.072Z","type":"message"}
{"nick":"isaacs","message":"k, this is odd..","date":"2012-08-07T01:23:46.975Z","type":"message"}
{"nick":"isaacs","message":"read-package-json finds the readme","date":"2012-08-07T01:23:52.625Z","type":"message"}
{"nick":"isaacs","message":"but npm doesn't publish it","date":"2012-08-07T01:23:54.995Z","type":"message"}
{"nick":"isaacs","message":"super weird","date":"2012-08-07T01:23:56.355Z","type":"message"}
{"nick":"tilgovi","reason":"Read error: Connection reset by peer","date":"2012-08-07T01:26:29.231Z","type":"quit"}
{"nick":"devaholic","date":"2012-08-07T01:29:40.110Z","type":"join"}
{"nick":"dominictarr","message":"raynos, are you gonna make a pull request on shoe?","date":"2012-08-07T01:31:23.890Z","type":"message"}
{"nick":"Raynos","message":"i already did","date":"2012-08-07T01:31:32.634Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/substack/shoe/pull/3","date":"2012-08-07T01:31:46.424Z","type":"message"}
{"nick":"Raynos","message":"SubStack: PONG","date":"2012-08-07T01:31:52.528Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: https://github.com/dominictarr/mux-demux/pull/4","date":"2012-08-07T01:35:03.323Z","type":"message"}
{"nick":"Raynos","message":"add the halfOpen flag","date":"2012-08-07T01:35:55.571Z","type":"message"}
{"nick":"dominictarr","message":"oh, can you also add && !this.ended ?","date":"2012-08-07T01:36:26.946Z","type":"message"}
{"nick":"SubStack","message":"merged","date":"2012-08-07T01:36:27.608Z","type":"message"}
{"nick":"Raynos","message":"SubStack: badass","date":"2012-08-07T01:36:34.457Z","type":"message"}
{"nick":"dominictarr","message":"don't want to emit end twice","date":"2012-08-07T01:36:42.824Z","type":"message"}
{"nick":"dominictarr","message":"SubStack, it's funny, in node you are more likely to get sync race conditions.","date":"2012-08-07T01:37:04.104Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: done","date":"2012-08-07T01:37:20.642Z","type":"message"}
{"nick":"SubStack","message":"dominictarr: especially with events since those listeners fire right away","date":"2012-08-07T01:37:55.160Z","type":"message"}
{"nick":"dominictarr","message":"Raynos, pr/4 breaks a test","date":"2012-08-07T01:39:02.995Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: I know, it says so in the PR","date":"2012-08-07T01:39:14.115Z","type":"message"}
{"nick":"Raynos","message":"i dont know what the test should do correctly","date":"2012-08-07T01:39:25.044Z","type":"message"}
{"nick":"Raynos","message":"because I cant read your tests","date":"2012-08-07T01:39:28.149Z","type":"message"}
{"nick":"Raynos","message":"they are black magic","date":"2012-08-07T01:39:30.102Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: found the bug, and took the liberty of updating your through package","date":"2012-08-07T01:43:18.231Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: it'll be in the next release of npm, which will be in node 0.8.7","date":"2012-08-07T01:43:33.450Z","type":"message"}
{"nick":"dominictarr","message":"it was my package.json ?","date":"2012-08-07T01:44:09.806Z","type":"message"}
{"nick":"dominictarr","message":"there is a long error chain that caused this to not have a repo & readme.","date":"2012-08-07T01:44:50.681Z","type":"message"}
{"nick":"dominictarr","message":"I refactored it out when offline, so I didn't have a git remote when I ran npm init.","date":"2012-08-07T01:45:30.915Z","type":"message"}
{"nick":"dominictarr","message":"it didn't have a readme because I was in a rush (okay, that is no excuse)","date":"2012-08-07T01:45:53.266Z","type":"message"}
{"nick":"dominictarr","message":"and then I miss wrote repo because I am drunk.","date":"2012-08-07T01:46:15.832Z","type":"message"}
{"nick":"dominictarr","message":"excuses, excuses.","date":"2012-08-07T01:46:20.745Z","type":"message"}
{"nick":"thatguydan","date":"2012-08-07T01:54:18.091Z","type":"join"}
{"nick":"SubStack","message":"\\o","date":"2012-08-07T01:54:21.375Z","type":"message"}
{"nick":"dominictarr","message":"Raynos, does mdm/4 work for you?","date":"2012-08-07T01:55:19.752Z","type":"message"}
{"nick":"dominictarr","message":"your using it right?","date":"2012-08-07T01:55:24.345Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-08-07T01:58:52.824Z","type":"message"}
{"nick":"ITpro","reason":"Ping timeout: 250 seconds","date":"2012-08-07T02:01:41.167Z","type":"quit"}
{"nick":"ITpro","date":"2012-08-07T02:02:27.125Z","type":"join"}
{"nick":"SubStack","message":"thatguydan: looking through http://docs.ninja.is/ any chance that GET /user/stream could do streaming json?","date":"2012-08-07T02:03:40.084Z","type":"message"}
{"nick":"SubStack","message":"not sure what you're using for the server part","date":"2012-08-07T02:03:55.411Z","type":"message"}
{"nick":"SubStack","message":"but if you're using node, JSONStream rocks for that stuff","date":"2012-08-07T02:04:07.870Z","type":"message"}
{"nick":"thatguydan","message":"definitely, v0 is pretty ghetto","date":"2012-08-07T02:04:26.562Z","type":"message"}
{"nick":"thatguydan","message":"i'll throw it on the roadmap for v1","date":"2012-08-07T02:04:35.842Z","type":"message"}
{"nick":"thatguydan","message":"right now stream is just rules that have executed, but in future will be new devices, and other important events","date":"2012-08-07T02:05:13.701Z","type":"message"}
{"nick":"thatguydan","message":"like \"Front door opened\"","date":"2012-08-07T02:05:19.937Z","type":"message"}
{"nick":"SubStack","message":"yeah it would just rock if I could have an http stream open over http that would just stay up and get populated with events as they happen","date":"2012-08-07T02:06:10.952Z","type":"message"}
{"nick":"chapel","message":"thatguydan: you use pusher?","date":"2012-08-07T02:06:40.130Z","type":"message"}
{"nick":"SubStack","message":"http outside of browsers is full duplex already, especially if you have https endpoints to prevent proxies from meddling","date":"2012-08-07T02:06:52.410Z","type":"message"}
{"nick":"thatguydan","message":"chapel: yup, only to get events from our servers to browsers.","date":"2012-08-07T02:07:06.264Z","type":"message"}
{"nick":"chapel","message":"how does that work with the api?","date":"2012-08-07T02:07:33.340Z","type":"message"}
{"nick":"thatguydan","message":"basically we return a pusher-key with one of the endpoints and you can use one of their libraries to get data in","date":"2012-08-07T02:08:11.882Z","type":"message"}
{"nick":"thatguydan","message":"we'll ultimately do it all ourselves, but for now pusher do their job pretty well and have tons of libs","date":"2012-08-07T02:08:31.259Z","type":"message"}
{"nick":"chapel","message":"ah","date":"2012-08-07T02:08:45.211Z","type":"message"}
{"nick":"chapel","message":"okay, so you just allow them to get the key to access the info","date":"2012-08-07T02:09:00.223Z","type":"message"}
{"nick":"thatguydan","message":"yup, i think the endpoint is GET user/pusherchannel","date":"2012-08-07T02:09:30.031Z","type":"message"}
{"nick":"chapel","message":"we use pusher at geeklist for our front end","date":"2012-08-07T02:09:41.927Z","type":"message"}
{"nick":"thatguydan","message":"they're good at what they do","date":"2012-08-07T02:10:02.145Z","type":"message"}
{"nick":"chapel","message":"there was talk of using pusher in the api","date":"2012-08-07T02:10:03.202Z","type":"message"}
{"nick":"dominictarr","message":"thatguydan, your thing looks very cool!","date":"2012-08-07T02:10:27.878Z","type":"message"}
{"nick":"thatguydan","message":"we haven't yet used it in the api, but we use it heaps for browser comms","date":"2012-08-07T02:10:53.279Z","type":"message"}
{"nick":"thatguydan","message":"thanks, we're trying to do the whole internet of things but built for developers","date":"2012-08-07T02:11:03.783Z","type":"message"}
{"nick":"thatguydan","message":"so devs can build apps ontop of user's devices","date":"2012-08-07T02:11:46.777Z","type":"message"}
{"nick":"dominictarr","message":"that is what is gonna make the IoT happen.","date":"2012-08-07T02:11:48.135Z","type":"message"}
{"nick":"devaholic","reason":"Ping timeout: 256 seconds","date":"2012-08-07T02:11:49.956Z","type":"quit"}
{"nick":"thatguydan","message":"we certainly think so :)","date":"2012-08-07T02:12:35.772Z","type":"message"}
{"nick":"thatguydan","message":"IFTTT and Zapier are awesome, but if I want to build an app that monitors the energy output of solar panels and adjusts my air conditioner to match the PV array's output that's a bit more than a recipe/Zap","date":"2012-08-07T02:13:22.806Z","type":"message"}
{"nick":"devaholic","date":"2012-08-07T02:19:17.609Z","type":"join"}
{"nick":"thatguydan","message":"We're currently moving over from socket.io to dnode (dunno why anybody thought that was a good idea), I was wondering if anybody had any general advice for using up/dnode server side?","date":"2012-08-07T02:19:18.060Z","type":"message"}
{"nick":"thatguydan","message":"It's all pretty straight forward, but after monkey patching socket.io-client and wading through endless issues on socket.io's github, this refactor has gone a little too…smoothly","date":"2012-08-07T02:20:03.290Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: the test that fails does not affect me negatively. I'm running it on some complex code and none of it breaks","date":"2012-08-07T02:20:12.589Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: I think that test case that breaks is a bad test case","date":"2012-08-07T02:20:21.176Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: I think that test case that breaks is a bad test case or I dont understand enough about the edgecases in streams","date":"2012-08-07T02:20:34.411Z","type":"message"}
{"nick":"dominictarr","message":"the problem was the way readable and writable are set in createStream","date":"2012-08-07T02:21:02.742Z","type":"message"}
{"nick":"dominictarr","message":"first, I had to modify the test case to have allowHalfOpen enabled,","date":"2012-08-07T02:21:28.488Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: Oh I see","date":"2012-08-07T02:21:32.949Z","type":"message"}
{"nick":"dominictarr","message":"but that created a stream that was readable == writable == false","date":"2012-08-07T02:21:47.034Z","type":"message"}
{"nick":"Raynos","message":"o.o","date":"2012-08-07T02:23:23.880Z","type":"message"}
{"nick":"Raynos","message":"all the bugs","date":"2012-08-07T02:23:35.331Z","type":"message"}
{"nick":"dominictarr","message":"raynos, mux-demux@2.0.0","date":"2012-08-07T02:24:06.401Z","type":"message"}
{"nick":"Raynos","message":"oh sweet!","date":"2012-08-07T02:24:12.461Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: nvm, it'll be included in 0.8.6","date":"2012-08-07T02:24:34.372Z","type":"message"}
{"nick":"dominictarr","message":"isaacs, what will be included?","date":"2012-08-07T02:25:21.229Z","type":"message"}
{"nick":"dominictarr","message":"node version manager?","date":"2012-08-07T02:25:30.971Z","type":"message"}
{"nick":"SubStack","message":"thatguydan: one thing that you need to be careful about is having too many requests buffer up that all fire right away when the connection comes back","date":"2012-08-07T02:25:31.632Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: the npm that does 'readme.markdown' properly","date":"2012-08-07T02:25:34.251Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: npm = 'nevermind'","date":"2012-08-07T02:25:40.760Z","type":"message"}
{"nick":"dominictarr","message":"oh, good.","date":"2012-08-07T02:25:42.301Z","type":"message"}
{"nick":"isaacs","message":"*nvm = 'nevermind'","date":"2012-08-07T02:25:48.330Z","type":"message"}
{"nick":"SubStack","message":"like if the client has an internet outage for a few hours or something and then tries to resync","date":"2012-08-07T02:25:56.681Z","type":"message"}
{"nick":"dominictarr","message":"the buffering model in upnode tends to assume that the outage will be short.","date":"2012-08-07T02:27:13.032Z","type":"message"}
{"nick":"dominictarr","message":"SubStack, oh, you need to enable the shims?","date":"2012-08-07T02:28:40.858Z","type":"message"}
{"nick":"dominictarr","message":"hmm. so ... these people must are mistaken.","date":"2012-08-07T02:29:06.582Z","type":"message"}
{"nick":"dominictarr","message":"oh yeah, Raynos skates was intending to (maybe) be that framework, but I've since redone a bunch of stuff","date":"2012-08-07T02:30:04.825Z","type":"message"}
{"nick":"SubStack","message":"well shims as in es5-shims? browserify hasn't had those for a year","date":"2012-08-07T02:30:12.650Z","type":"message"}
{"nick":"dominictarr","message":"(that was before I wrote mux-demux)","date":"2012-08-07T02:30:16.617Z","type":"message"}
{"nick":"SubStack","message":"and all the other modules you've got to require() explicitly for them to be included","date":"2012-08-07T02:30:45.132Z","type":"message"}
{"nick":"dominictarr","message":"SubStack, oh... that is good. hmm. I'll definately correct people with that objection in future","date":"2012-08-07T02:30:59.915Z","type":"message"}
{"nick":"SubStack","message":"it's only 4k compressed with uglify for an empty bundle","date":"2012-08-07T02:32:11.903Z","type":"message"}
{"nick":"SubStack","message":"and yet the same people have no qualms about a 32k compressed jquery bundle","date":"2012-08-07T02:32:54.087Z","type":"message"}
{"nick":"SubStack","message":"people are silly","date":"2012-08-07T02:33:00.347Z","type":"message"}
{"nick":"dominictarr","message":"indeed they are","date":"2012-08-07T02:33:21.804Z","type":"message"}
{"nick":"devaholic","message":"browserify is 4k compressed?","date":"2012-08-07T02:34:01.885Z","type":"message"}
{"nick":"dominictarr","message":"Raynos, boot backs off with a fibonnaci series !","date":"2012-08-07T02:34:04.496Z","type":"message"}
{"nick":"SubStack","message":"devaholic: the browser-side bundle with an empty entry file","date":"2012-08-07T02:34:24.064Z","type":"message"}
{"nick":"dominictarr","message":"don't you know node isn't webscale for fibonnaci? it'll never work","date":"2012-08-07T02:34:28.327Z","type":"message"}
{"nick":"devaholic","message":"nice, i always wondered how much it really was","date":"2012-08-07T02:34:55.072Z","type":"message"}
{"nick":"SubStack","message":"$ browserify <(echo '') | uglifyjs | wc -c","date":"2012-08-07T02:35:23.928Z","type":"message"}
{"nick":"SubStack","message":"4354","date":"2012-08-07T02:35:24.141Z","type":"message"}
{"nick":"dominictarr","message":"(actually, using fib for that is totally classy)","date":"2012-08-07T02:36:09.650Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: yes it does","date":"2012-08-07T02:36:12.740Z","type":"message"}
{"nick":"dominictarr","message":"does it transparently reconnect?","date":"2012-08-07T02:37:08.074Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2012-08-07T02:37:12.950Z","type":"message"}
{"nick":"Raynos","message":"boot gives you a new stream","date":"2012-08-07T02:37:18.095Z","type":"message"}
{"nick":"Raynos","message":"that transparently pipes into fresh mux demux streams","date":"2012-08-07T02:37:26.084Z","type":"message"}
{"nick":"Raynos","message":"and then you can use boot to drive upnode","date":"2012-08-07T02:37:34.102Z","type":"message"}
{"nick":"Raynos","message":"and you can have two layers of reconnection!","date":"2012-08-07T02:37:40.455Z","type":"message"}
{"nick":"Raynos","message":"The main thing thats nice about boot is having a persistance mdm stream that doesnt have to be recreated when ws reconnect","date":"2012-08-07T02:38:01.878Z","type":"message"}
{"nick":"dominictarr","message":"so it gives you a fresh stream on each reconnect?","date":"2012-08-07T02:38:02.028Z","type":"message"}
{"nick":"Raynos","message":"you keep one proxy stream","date":"2012-08-07T02:38:12.184Z","type":"message"}
{"nick":"Raynos","message":"and it hooks a fresh mdm stream into it on reconnect","date":"2012-08-07T02:38:18.215Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: https://github.com/Raynos/boot/blob/master/browser.js#L64","date":"2012-08-07T02:38:34.680Z","type":"message"}
{"nick":"dominictarr","message":"oh, can you add an option so that it breaks the stream each time, so that you have to start piping again?","date":"2012-08-07T02:39:00.854Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: I dont see the point of doing that. all it does is transparent reconnect","date":"2012-08-07T02:39:22.733Z","type":"message"}
{"nick":"Raynos","message":"if you dont want transparent reconnect then just use mux-demux-shoe directly","date":"2012-08-07T02:39:32.550Z","type":"message"}
{"nick":"dominictarr","message":"there are some applications that work better without transparent reconnect.","date":"2012-08-07T02:40:09.839Z","type":"message"}
{"nick":"Raynos","message":"what advantage does boot give without the transparent reconnect?","date":"2012-08-07T02:40:26.571Z","type":"message"}
{"nick":"Raynos","message":"why not use mux-demux-shoe directly?","date":"2012-08-07T02:40:34.505Z","type":"message"}
{"nick":"dominictarr","message":"okay, I'll leave that for another module.","date":"2012-08-07T02:40:52.818Z","type":"message"}
{"nick":"devaholic","message":"Raynos: can you write something that verifies that the chunks are all received in order and none are lost across redirects","date":"2012-08-07T02:40:58.985Z","type":"message"}
{"nick":"devaholic","message":"reconnects rather","date":"2012-08-07T02:41:09.785Z","type":"message"}
{"nick":"Raynos","message":"devaholic: shoe buffers when the connection isn't open","date":"2012-08-07T02:41:26.466Z","type":"message"}
{"nick":"dominictarr","message":"devaholic, tcp does most of that...","date":"2012-08-07T02:41:31.708Z","type":"message"}
{"nick":"Raynos","message":"I should add buffering back to boot","date":"2012-08-07T02:41:31.919Z","type":"message"}
{"nick":"dominictarr","message":"hmm, unless the connection is dropped.","date":"2012-08-07T02:41:44.876Z","type":"message"}
{"nick":"devaholic","message":"i just dont see anything that actually tests that will happen","date":"2012-08-07T02:42:04.044Z","type":"message"}
{"nick":"dominictarr","message":"then you don't actually know if anything was still on th wire","date":"2012-08-07T02:42:28.666Z","type":"message"}
{"nick":"devaholic","message":"and i mean as far as the chunks in the node streams, not tcp","date":"2012-08-07T02:42:33.601Z","type":"message"}
{"nick":"dominictarr","message":"devaholic, tcp is a reliable stream, since each chunk is written to this they will be emitted in order.","date":"2012-08-07T02:43:45.360Z","type":"message"}
{"nick":"dominictarr","message":"oh, you said \"reconnects\"","date":"2012-08-07T02:44:13.723Z","type":"message"}
{"nick":"dominictarr","message":"then I explained why you had a good point.","date":"2012-08-07T02:44:39.770Z","type":"message"}
{"nick":"dominictarr","message":"I need to sleep","date":"2012-08-07T02:44:51.057Z","type":"message"}
{"nick":"devaholic","message":"probably my fault :D","date":"2012-08-07T02:45:20.682Z","type":"message"}
{"nick":"dominictarr","message":"catch you guys later!","date":"2012-08-07T02:48:22.290Z","type":"message"}
{"nick":"dominictarr","new_nick":"dominictarrsleep","date":"2012-08-07T02:48:38.249Z","type":"nick"}
{"nick":"Raynos","message":"devaholic: I can do that, putting the buffering in boot","date":"2012-08-07T02:48:40.103Z","type":"message"}
{"nick":"devaholic","message":"dominictarrsleep: later","date":"2012-08-07T02:48:46.638Z","type":"message"}
{"nick":"dominictarrsleep","message":"cheers","date":"2012-08-07T02:48:52.829Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2012-08-07T02:53:50.849Z","type":"quit"}
{"nick":"devaholic","message":"Raynos: cool!","date":"2012-08-07T02:58:52.603Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-08-07T02:58:52.840Z","type":"message"}
{"nick":"devaholic","message":"Raynos: you should also consider using ``` js in your readmes","date":"2012-08-07T02:59:06.165Z","type":"message"}
{"nick":"thatguydan","date":"2012-08-07T03:01:51.169Z","type":"part"}
{"nick":"thatguydan","date":"2012-08-07T03:01:56.077Z","type":"join"}
{"nick":"thatguydan","date":"2012-08-07T03:01:56.738Z","type":"part"}
{"nick":"Raynos","message":"maybe","date":"2012-08-07T03:01:59.591Z","type":"message"}
{"nick":"thatguydan","date":"2012-08-07T03:02:06.841Z","type":"join"}
{"nick":"devaholic","message":":p","date":"2012-08-07T03:03:43.238Z","type":"message"}
{"nick":"devaholic","message":"oh and if you wanted to mke your chat stream thingy work distributed style you could consider making some streams from redis pub/subs with redis-stream","date":"2012-08-07T03:04:23.407Z","type":"message"}
{"nick":"devaholic","message":"streams all the way up and down","date":"2012-08-07T03:04:34.884Z","type":"message"}
{"nick":"devaholic","message":"just make a pub/sub channel based on the mux-demux id, even","date":"2012-08-07T03:10:47.642Z","type":"message"}
{"nick":"Raynos","message":"devaholic: https://github.com/Raynos/boot","date":"2012-08-07T03:21:38.439Z","type":"message"}
{"nick":"Raynos","message":"done !","date":"2012-08-07T03:21:39.671Z","type":"message"}
{"nick":"Raynos","message":"devaholic: redis-stream, you are a badass","date":"2012-08-07T03:22:06.254Z","type":"message"}
{"nick":"Raynos","message":"devaholic: https://github.com/Raynos/multi-channel-mdm/blob/master/index.js#L8","date":"2012-08-07T03:22:23.914Z","type":"message"}
{"nick":"Raynos","message":"multi-channel takes a store","date":"2012-08-07T03:22:29.101Z","type":"message"}
{"nick":"Raynos","message":"write a redis-stream-store","date":"2012-08-07T03:22:32.901Z","type":"message"}
{"nick":"Raynos","message":"Actually I can write one","date":"2012-08-07T03:22:38.043Z","type":"message"}
{"nick":"Raynos","message":"boot should handle reconnect and ensure no data gets lost or out of order","date":"2012-08-07T03:22:56.486Z","type":"message"}
{"nick":"Raynos","message":"if it does its bugged","date":"2012-08-07T03:23:00.901Z","type":"message"}
{"nick":"devaholic","message":"if you need to persist the chats you could fork the stream at some point before/after pubbing","date":"2012-08-07T03:23:06.673Z","type":"message"}
{"nick":"Raynos","message":"explain what you mean fork?","date":"2012-08-07T03:23:45.127Z","type":"message"}
{"nick":"devaholic","message":"well if you publish the stream coming from a browser to the chat channel, then have all the other people in the channel subscribe to that channel","date":"2012-08-07T03:24:30.631Z","type":"message"}
{"nick":"devaholic","message":"its not going to be saved because its just pub/sub, so just also pipe the stream to a redis list possibly, or a function to save to mongodb maybe, then when someone refreshes they can get the persistent data","date":"2012-08-07T03:25:34.139Z","type":"message"}
{"nick":"devaholic","message":"but with that even it would be a very small amount of code","date":"2012-08-07T03:26:24.791Z","type":"message"}
{"nick":"Raynos","message":"hmm","date":"2012-08-07T03:27:39.467Z","type":"message"}
{"nick":"Raynos","message":"getting data wont work cleanly with multi channel","date":"2012-08-07T03:27:48.748Z","type":"message"}
{"nick":"devaholic","message":"you would need to stream down some persistent data at load time, i dunno how you are handling the chat data so its hard to say what the best data structure would be","date":"2012-08-07T03:29:01.109Z","type":"message"}
{"nick":"devaholic","message":"are you saing a timestamp, username, just the text? etc","date":"2012-08-07T03:29:25.907Z","type":"message"}
{"nick":"Raynos","message":"well","date":"2012-08-07T03:29:26.113Z","type":"message"}
{"nick":"Raynos","message":"data structure is JSON","date":"2012-08-07T03:29:31.760Z","type":"message"}
{"nick":"Raynos","message":"but first I need a redis store!","date":"2012-08-07T03:29:40.628Z","type":"message"}
{"nick":"Raynos","message":"ALL THE REDIS","date":"2012-08-07T03:29:42.445Z","type":"message"}
{"nick":"LOUDBOT","message":"OH JUST SUCK IT UP AND DEAL WITH WAP OVER GPRS LIKE I DO","date":"2012-08-07T03:29:43.270Z","type":"message"}
{"nick":"Raynos","message":"i also need to install redis locally","date":"2012-08-07T03:29:47.208Z","type":"message"}
{"nick":"Raynos","message":"i also need to go to best buy","date":"2012-08-07T03:29:55.088Z","type":"message"}
{"nick":"devaholic","message":"redis-server you mean?","date":"2012-08-07T03:30:13.058Z","type":"message"}
{"nick":"Raynos","message":"devaholic: btw did you see seaport-proxy ? it works","date":"2012-08-07T03:30:15.282Z","type":"message"}
{"nick":"Raynos","message":"yeah redis server","date":"2012-08-07T03:30:19.609Z","type":"message"}
{"nick":"devaholic","message":"oh","date":"2012-08-07T03:30:27.835Z","type":"message"}
{"nick":"thatguydan","message":"how does redid-stream do its magic?","date":"2012-08-07T03:30:32.295Z","type":"message"}
{"nick":"devaholic","message":"cuz yeah, you can store whatever with the redis client","date":"2012-08-07T03:30:35.670Z","type":"message"}
{"nick":"thatguydan","message":"redis*","date":"2012-08-07T03:30:42.489Z","type":"message"}
{"nick":"thatguydan","message":"is it polling?","date":"2012-08-07T03:30:46.600Z","type":"message"}
{"nick":"devaholic","message":"thatguydan: https://github.com/tblobaum/redis-stream","date":"2012-08-07T03:30:50.187Z","type":"message"}
{"nick":"devaholic","message":"its basically a net connection that processes the redis protocol","date":"2012-08-07T03:31:25.270Z","type":"message"}
{"nick":"devaholic","message":"thatguydan: polling? never","date":"2012-08-07T03:31:53.080Z","type":"message"}
{"nick":"devaholic","message":"Raynos: i need some code to test seaport-proxy and boot","date":"2012-08-07T03:32:29.807Z","type":"message"}
{"nick":"guybrush","message":"devaholic: redis-stream looks sweet","date":"2012-08-07T03:33:02.715Z","type":"message"}
{"nick":"guybrush","message":"wtf is a star?","date":"2012-08-07T03:33:10.918Z","type":"message"}
{"nick":"guybrush","message":"now we can watch AND star a repo?","date":"2012-08-07T03:33:21.579Z","type":"message"}
{"nick":"devaholic","message":"i dunno they gayed up the place abit","date":"2012-08-07T03:33:27.788Z","type":"message"}
{"nick":"guybrush","message":"so watch is now notification-managment and star is star i guess","date":"2012-08-07T03:34:18.915Z","type":"message"}
{"nick":"guybrush","message":"devaholic: did you have to scale redis yet? if yes did you use some sort of tls-proxy or just node?","date":"2012-08-07T03:36:48.292Z","type":"message"}
{"nick":"thatguydan","message":"ah so it just streams responses for queries, I had an image of it streaming like an lrange whenever an element was pushed to it… it was about that time i realised i'm an idiot :p","date":"2012-08-07T03:36:48.505Z","type":"message"}
{"nick":"devaholic","message":"thatguydan: you can actually do that!","date":"2012-08-07T03:37:18.912Z","type":"message"}
{"nick":"thatguydan","message":"witchcraft!","date":"2012-08-07T03:37:39.017Z","type":"message"}
{"nick":"devaholic","message":"thatguydan: there are blocking lpop and rpops in redis","date":"2012-08-07T03:37:40.434Z","type":"message"}
{"nick":"thatguydan","message":"bah, there goes my lunch break :p","date":"2012-08-07T03:38:10.996Z","type":"message"}
{"nick":"devaholic","message":"thatguydan: so you jsut blpop a list and node will sit there and wait and as soon as someone pushes to that list in another process your other stream will get the data","date":"2012-08-07T03:38:17.473Z","type":"message"}
{"nick":"devaholic","message":"so its sort of polling in that case","date":"2012-08-07T03:39:00.653Z","type":"message"}
{"nick":"thatguydan","message":"but it's not, say 1op/s (if you were polling 1/s)","date":"2012-08-07T03:39:36.278Z","type":"message"}
{"nick":"devaholic","message":"no it would be a long poll, 1 poll per data item, never more","date":"2012-08-07T03:39:53.793Z","type":"message"}
{"nick":"thatguydan","message":"sweet!","date":"2012-08-07T03:40:10.226Z","type":"message"}
{"nick":"devaholic","message":"blpop is really useful, check it out on the redis site","date":"2012-08-07T03:40:55.086Z","type":"message"}
{"nick":"devaholic","message":"guybrush: i havent had to scale redis beyond simple master-slave stuff","date":"2012-08-07T03:41:19.652Z","type":"message"}
{"nick":"thatguydan","message":"redis cluster looks promising","date":"2012-08-07T03:41:54.170Z","type":"message"}
{"nick":"guybrush","message":"i think it takes some more time to be finished","date":"2012-08-07T03:42:23.377Z","type":"message"}
{"nick":"guybrush","message":"i mean antirez said in the mailinglist it will take some more time","date":"2012-08-07T03:42:49.884Z","type":"message"}
{"nick":"guybrush","message":"so for now the recommended thing to do would be presharding i think","date":"2012-08-07T03:43:11.294Z","type":"message"}
{"nick":"devaholic","message":"guybrush: and i usually just hide redis inside a private network so auth isnt much of an issue","date":"2012-08-07T03:43:39.036Z","type":"message"}
{"nick":"devaholic","message":"yeah","date":"2012-08-07T03:44:00.573Z","type":"message"}
{"nick":"guybrush","message":"i see, just wondered","date":"2012-08-07T03:44:04.187Z","type":"message"}
{"nick":"guybrush","message":"if it would be ok to use node as tls-proxy (in consideration of performance?)","date":"2012-08-07T03:44:57.909Z","type":"message"}
{"nick":"devaholic","message":"i have not run into the need to scale redis out like that, but i think just using some separate redis servers with data sharded by your applications concerns would take you a long way without needing any abstraction","date":"2012-08-07T03:45:16.142Z","type":"message"}
{"nick":"guybrush","message":"like others use stud instead of node-https","date":"2012-08-07T03:45:19.229Z","type":"message"}
{"nick":"guybrush","message":"right","date":"2012-08-07T03:45:40.467Z","type":"message"}
{"nick":"devaholic","message":"put all your users on one redis server, put your chat rooms on another, and just connect to them separately in your code","date":"2012-08-07T03:45:50.988Z","type":"message"}
{"nick":"devaholic","message":"ya","date":"2012-08-07T03:45:55.377Z","type":"message"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2012-08-07T03:51:39.731Z","type":"quit"}
{"nick":"devaholic","message":"guybrush: i think node might become a bottleneck as a proxy in front of redis, but it could be done","date":"2012-08-07T03:51:57.373Z","type":"message"}
{"nick":"devaholic","message":"and it would work","date":"2012-08-07T03:52:00.384Z","type":"message"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2012-08-07T03:54:27.438Z","type":"quit"}
{"nick":"thatguydan","date":"2012-08-07T03:57:12.545Z","type":"join"}
{"nick":"ITpro","reason":"Ping timeout: 250 seconds","date":"2012-08-07T03:58:14.561Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-08-07T03:58:52.898Z","type":"message"}
{"nick":"ITpro","date":"2012-08-07T03:59:36.715Z","type":"join"}
{"nick":"timoxley","date":"2012-08-07T04:11:45.191Z","type":"join"}
{"nick":"Raynos","message":"devaholic: boot has a bunch of examples, multi-stream has a boot example, stream-chat uses both","date":"2012-08-07T04:16:25.589Z","type":"message"}
{"nick":"Raynos","message":"devaholic: seaport-proxy isn't done yet, it just kind of works at the hackish implementation level, it needs a shiny API","date":"2012-08-07T04:16:43.339Z","type":"message"}
{"nick":"devaholic","message":"Raynos: so are you basically solving the problem of how to provide streams over dnode?","date":"2012-08-07T04:17:01.095Z","type":"message"}
{"nick":"Raynos","message":"devaholic: no, no streams over dnode","date":"2012-08-07T04:17:12.769Z","type":"message"}
{"nick":"Raynos","message":"you can get streams directly by asking for them and piping them up","date":"2012-08-07T04:17:30.049Z","type":"message"}
{"nick":"devaholic","message":"how about writing a test case for having multiple streams on the same connection between two processes","date":"2012-08-07T04:17:43.160Z","type":"message"}
{"nick":"Raynos","message":"you cant pass streams over dnode and expect it to work","date":"2012-08-07T04:17:43.988Z","type":"message"}
{"nick":"Raynos","message":"devaholic: boot handles that already it uses mdm","date":"2012-08-07T04:17:55.144Z","type":"message"}
{"nick":"Raynos","message":"devaholic: https://github.com/Raynos/multi-channel-mdm/blob/master/examples/boot/client.js#L4","date":"2012-08-07T04:18:21.862Z","type":"message"}
{"nick":"devaholic","message":"Raynos: ah, its not using dnode at all?","date":"2012-08-07T04:19:02.495Z","type":"message"}
{"nick":"Raynos","message":"correct","date":"2012-08-07T04:19:10.222Z","type":"message"}
{"nick":"Raynos","message":"but you can open a upnode connection using boot if you want","date":"2012-08-07T04:19:17.771Z","type":"message"}
{"nick":"devaholic","message":"whats this upnode stuff then?","date":"2012-08-07T04:19:36.231Z","type":"message"}
{"nick":"Raynos","message":"devaholic: https://github.com/Raynos/boot/tree/master/example/upnode","date":"2012-08-07T04:19:50.314Z","type":"message"}
{"nick":"Raynos","message":"upnode does reconnects, dnode does protocol shit. you can pass your own streams to both","date":"2012-08-07T04:20:09.350Z","type":"message"}
{"nick":"devaholic","message":"ah as i understood it upnode was just for dnode","date":"2012-08-07T04:21:02.834Z","type":"message"}
{"nick":"Raynos","message":"yeah upnode is a thin wrapper around dnode","date":"2012-08-07T04:21:28.473Z","type":"message"}
{"nick":"Raynos","message":"devaholic: I use seaport to not hardcode ports, how do I not hardcode my redis server?","date":"2012-08-07T04:23:14.291Z","type":"message"}
{"nick":"devaholic","message":"what advantage is there to having redis on a dynamically allocated port","date":"2012-08-07T04:25:22.449Z","type":"message"}
{"nick":"Raynos","message":"because I want just hard coded port in my code","date":"2012-08-07T04:26:54.168Z","type":"message"}
{"nick":"Raynos","message":"which is seaport","date":"2012-08-07T04:26:56.208Z","type":"message"}
{"nick":"devaholic","message":"i suppose it would be possible to provide different redis servers as named services in seaport","date":"2012-08-07T04:28:07.143Z","type":"message"}
{"nick":"devaholic","message":"but with how scalable a single instance of redis is, writing the code might not be worth the effort","date":"2012-08-07T04:28:33.972Z","type":"message"}
{"nick":"devaholic","message":"but if you wanted, you could have a node instance spin up a redis instance, and provide the port to listen on as a command line option, which is allocate dby seaport","date":"2012-08-07T04:29:09.045Z","type":"message"}
{"nick":"Raynos","message":"how do you do redis's over multiple machines?","date":"2012-08-07T04:29:09.413Z","type":"message"}
{"nick":"devaholic","message":"then you could have different redis instances named by different seaport services, and connect to them by connecting to seaport services without knowing the port","date":"2012-08-07T04:29:59.286Z","type":"message"}
{"nick":"devaholic","message":"but that might introduce an extra layer of failability (i.e. the node process) to the redis server that wasnt there and doesnt have to be there, and the memory footprint of that process","date":"2012-08-07T04:30:52.914Z","type":"message"}
{"nick":"devaholic","message":"i just store the redis port in a config.json","date":"2012-08-07T04:31:20.690Z","type":"message"}
{"nick":"devaholic","message":"multiple machines? connect to the redis server with the private ip address","date":"2012-08-07T04:31:58.412Z","type":"message"}
{"nick":"Raynos","message":"devaholic: what if I want to distribute it across multiple machines? I guess I can shard it","date":"2012-08-07T04:31:58.618Z","type":"message"}
{"nick":"Raynos","message":"SHARD ALL THE THINGS","date":"2012-08-07T04:32:02.238Z","type":"message"}
{"nick":"LOUDBOT","message":"POWER TO THE PEOPLE","date":"2012-08-07T04:32:02.619Z","type":"message"}
{"nick":"Raynos","message":"SHARD ALL THE STREAMS","date":"2012-08-07T04:32:05.465Z","type":"message"}
{"nick":"LOUDBOT","message":"THAT THING","date":"2012-08-07T04:32:05.798Z","type":"message"}
{"nick":"devaholic","message":"i dont think you need to shard redis","date":"2012-08-07T04:32:18.265Z","type":"message"}
{"nick":"devaholic","message":"or worry about that, at all","date":"2012-08-07T04:32:24.497Z","type":"message"}
{"nick":"devaholic","message":"you will have thousands of concurrent users and dozens of node instances before redis would be an issue","date":"2012-08-07T04:33:08.507Z","type":"message"}
{"nick":"Raynos","message":"i dont need to shard redis","date":"2012-08-07T04:33:48.701Z","type":"message"}
{"nick":"Raynos","message":"I need to shared node","date":"2012-08-07T04:33:54.340Z","type":"message"}
{"nick":"Raynos","message":"shard node*","date":"2012-08-07T04:33:58.582Z","type":"message"}
{"nick":"devaholic","message":"you want to connect to redis from distributed node processes","date":"2012-08-07T04:34:28.903Z","type":"message"}
{"nick":"devaholic","message":"?","date":"2012-08-07T04:34:35.655Z","type":"message"}
{"nick":"devaholic","message":"put all your stuff on the same private network, and (if you needed) put redis on a dedicated machine, and connect to it with the private ip in your network","date":"2012-08-07T04:35:17.404Z","type":"message"}
{"nick":"guybrush","message":"Raynos: you need to shard redis when size of data > ram","date":"2012-08-07T04:35:44.174Z","type":"message"}
{"nick":"Raynos","message":"i seee","date":"2012-08-07T04:36:03.076Z","type":"message"}
{"nick":"Raynos","message":"but waht about geolocated redis","date":"2012-08-07T04:36:08.616Z","type":"message"}
{"nick":"Raynos","message":"GEO LOCATE ALL THE DATA","date":"2012-08-07T04:36:13.213Z","type":"message"}
{"nick":"LOUDBOT","message":"BECAUSE IT COULD BE EITHER ONE","date":"2012-08-07T04:36:13.708Z","type":"message"}
{"nick":"Raynos","message":"ugh","date":"2012-08-07T04:36:27.701Z","type":"message"}
{"nick":"Raynos","message":"I need to finish seaport-proxy","date":"2012-08-07T04:36:31.999Z","type":"message"}
{"nick":"guybrush","message":"that IS some sort of sharding isnt it?","date":"2012-08-07T04:36:34.554Z","type":"message"}
{"nick":"thatguydan","message":"real men anycast","date":"2012-08-07T04:36:55.514Z","type":"message"}
{"nick":"Raynos","message":"I need to write seaport stream","date":"2012-08-07T04:37:01.843Z","type":"message"}
{"nick":"Raynos","message":"fuck getting things, give me streams! ALL THE STREAMS","date":"2012-08-07T04:37:14.657Z","type":"message"}
{"nick":"devaholic","message":"Raynos: i dont think you need to worry about that stuff","date":"2012-08-07T04:37:16.716Z","type":"message"}
{"nick":"devaholic","message":"youd have to be operating at pretty high scale to have a need to hvae networks in multiple zones","date":"2012-08-07T04:39:26.220Z","type":"message"}
{"nick":"guybrush","message":"the thing is, you want to be able to do it later when its necessary without too much effort","date":"2012-08-07T04:40:46.535Z","type":"message"}
{"nick":"guybrush","message":"and it is cool to think about such scenarios :D","date":"2012-08-07T04:41:10.955Z","type":"message"}
{"nick":"devaholic","message":"you can solve that stuff with hackery on other layers","date":"2012-08-07T04:41:24.613Z","type":"message"}
{"nick":"Raynos","message":"SOLVE ALL THE SCALING PROBLEMS UP FRONT. APPLY WATERFALL PROCESS TO YOUR SOFTWARE SCALING.","date":"2012-08-07T04:45:08.592Z","type":"message"}
{"nick":"LOUDBOT","message":"I WILL GLADLY HLAGH UNDERAGE GIRLS","date":"2012-08-07T04:45:09.253Z","type":"message"}
{"nick":"Raynos","message":"IF YOU CANT RUN AT GOOGLE SCALE FROM THE GET GO YOUR DOING IT WRONG","date":"2012-08-07T04:45:18.100Z","type":"message"}
{"nick":"LOUDBOT","message":"HE'S DESCRIBING SO MANY OTHER LANGUAGES","date":"2012-08-07T04:45:18.430Z","type":"message"}
{"nick":"devaholic","message":"oh loudbot","date":"2012-08-07T04:45:39.325Z","type":"message"}
{"nick":"Raynos","message":"im installing a mounti","date":"2012-08-07T04:47:06.120Z","type":"message"}
{"nick":"Raynos","message":"for stream chat :3","date":"2012-08-07T04:47:09.265Z","type":"message"}
{"nick":"devaholic","message":"i am getting a pile of modules i need to release","date":"2012-08-07T04:47:48.546Z","type":"message"}
{"nick":"Raynos","message":"devaholic: I dont actually know how to use redis at all","date":"2012-08-07T04:47:50.643Z","type":"message"}
{"nick":"Raynos","message":"what redis feature do I use for my stream channels?","date":"2012-08-07T04:48:02.353Z","type":"message"}
{"nick":"devaholic","message":"documenting is the suck","date":"2012-08-07T04:48:08.563Z","type":"message"}
{"nick":"Raynos","message":"I just need a function get(name, cb) { cb(stream) }","date":"2012-08-07T04:48:18.690Z","type":"message"}
{"nick":"devaholic","message":"Raynos: you could use publish/subscribe","date":"2012-08-07T04:49:10.154Z","type":"message"}
{"nick":"devaholic","message":"there is only like 2-3 relevant commands for that","date":"2012-08-07T04:49:32.095Z","type":"message"}
{"nick":"devaholic","message":"pub/sub isnt as feature rich as amqp and others but in your case it would work fine, and you can get streaming compatible stuff easy with redis-stream","date":"2012-08-07T04:51:13.216Z","type":"message"}
{"nick":"Raynos","message":"whats amqp ?","date":"2012-08-07T04:51:33.384Z","type":"message"}
{"nick":"devaholic","message":"message queue protocol","date":"2012-08-07T04:52:04.923Z","type":"message"}
{"nick":"devaholic","message":"google is your friend","date":"2012-08-07T04:52:08.289Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-08-07T04:58:52.813Z","type":"message"}
{"nick":"st_luke","date":"2012-08-07T05:21:35.726Z","type":"join"}
{"nick":"Raynos","message":"devaholic: https://gist.github.com/ba26282e39d876dd0954","date":"2012-08-07T05:41:05.750Z","type":"message"}
{"nick":"Raynos","message":"why doesnt that work?","date":"2012-08-07T05:41:30.958Z","type":"message"}
{"nick":"devaholic","message":"Raynos: what doesnt work?","date":"2012-08-07T05:45:28.013Z","type":"message"}
{"nick":"devaholic","message":"about it","date":"2012-08-07T05:45:31.282Z","type":"message"}
{"nick":"Raynos","message":"it outputs junk","date":"2012-08-07T05:45:40.845Z","type":"message"}
{"nick":"Raynos","message":"subscribe","date":"2012-08-07T05:46:01.452Z","type":"message"}
{"nick":"Raynos","message":"undefined:streamName","date":"2012-08-07T05:46:01.601Z","type":"message"}
{"nick":"Raynos","message":"1","date":"2012-08-07T05:46:01.601Z","type":"message"}
{"nick":"Raynos","message":"message","date":"2012-08-07T05:46:01.601Z","type":"message"}
{"nick":"Raynos","message":"undefined:streamName","date":"2012-08-07T05:46:01.601Z","type":"message"}
{"nick":"Raynos","message":"foo","date":"2012-08-07T05:46:01.601Z","type":"message"}
{"nick":"Raynos","message":"i see command followed by success code","date":"2012-08-07T05:46:15.330Z","type":"message"}
{"nick":"Raynos","message":"then some other junk","date":"2012-08-07T05:46:17.972Z","type":"message"}
{"nick":"Raynos","message":"ugh. I dont want that junk","date":"2012-08-07T05:46:22.304Z","type":"message"}
{"nick":"devaholic","message":"those are both readable/writable streams already, not sure what duplex might be doing","date":"2012-08-07T05:46:28.816Z","type":"message"}
{"nick":"Raynos","message":"well subscribe outputs the data","date":"2012-08-07T05:46:43.473Z","type":"message"}
{"nick":"Raynos","message":"and publish writes the data","date":"2012-08-07T05:46:46.824Z","type":"message"}
{"nick":"Raynos","message":"I want a readable / writable stream","date":"2012-08-07T05:46:53.676Z","type":"message"}
{"nick":"Raynos","message":"this redis thing was a horrible idea -.-","date":"2012-08-07T05:47:00.065Z","type":"message"}
{"nick":"Raynos","message":"back to memory streams","date":"2012-08-07T05:47:52.902Z","type":"message"}
{"nick":"devaholic","message":"i bet its pretty close to working","date":"2012-08-07T05:47:54.884Z","type":"message"}
{"nick":"Raynos","message":"i dont want the redis protocol junk in my stream output","date":"2012-08-07T05:48:07.830Z","type":"message"}
{"nick":"devaholic","message":"if you put up more code i can run i'd be happy to test it","date":"2012-08-07T05:48:15.995Z","type":"message"}
{"nick":"devaholic","message":"yeah, that shouldnt happen","date":"2012-08-07T05:48:25.726Z","type":"message"}
{"nick":"devaholic","message":"and it doesnt","date":"2012-08-07T05:48:36.323Z","type":"message"}
{"nick":"devaholic","message":"so if thats the case its a bug and ill fix it","date":"2012-08-07T05:49:07.473Z","type":"message"}
{"nick":"Raynos","message":"devaholic: https://github.com/Raynos/redis-stream-store","date":"2012-08-07T05:49:14.155Z","type":"message"}
{"nick":"devaholic","message":"running it","date":"2012-08-07T05:53:12.500Z","type":"message"}
{"nick":"Raynos","message":"the only data to be emitted that I would expect is \"foo\"","date":"2012-08-07T05:55:03.570Z","type":"message"}
{"nick":"devaholic","message":"ok well, these are streams that go across the network so you cant expect that code execution has anything to do with the order of execution in redis","date":"2012-08-07T05:56:54.406Z","type":"message"}
{"nick":"devaholic","message":"for instance the publish event would work except you arent subscribed to the channel when it is written","date":"2012-08-07T05:57:29.884Z","type":"message"}
{"nick":"devaholic","message":"and second, the response from redis for a subscribe or a publish is a boolean, thats why you have a 1, it would be 0 if it failed","date":"2012-08-07T05:57:59.453Z","type":"message"}
{"nick":"devaholic","message":"so you need to account for that, its how you handle an error connecting to a pub/sub channel not really junk","date":"2012-08-07T05:58:20.566Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-08-07T05:58:52.788Z","type":"message"}
{"nick":"devaholic","message":"so in this test you should assert that you get a `true` back before you test a publish","date":"2012-08-07T05:59:05.683Z","type":"message"}
{"nick":"Raynos","message":"devaholic: oh ...","date":"2012-08-07T05:59:10.030Z","type":"message"}
{"nick":"Raynos","message":"why does it return the name","date":"2012-08-07T05:59:35.345Z","type":"message"}
{"nick":"Raynos","message":"of the thing im connecting to","date":"2012-08-07T05:59:39.018Z","type":"message"}
{"nick":"devaholic","message":"thirdly, all publish events come with the channel as the first response, if you'd liek you can create a es.mapSync to filter those out fairly easily","date":"2012-08-07T05:59:47.938Z","type":"message"}
{"nick":"devaholic","message":"so it'll be [ 'channel1","date":"2012-08-07T06:00:02.832Z","type":"message"}
{"nick":"devaholic","message":"', 'message1' ]","date":"2012-08-07T06:00:08.317Z","type":"message"}
{"nick":"devaholic","message":"[ 'channel1', 'message2' ]","date":"2012-08-07T06:00:16.427Z","type":"message"}
{"nick":"devaholic","message":"and you could also use that to route so you didnt have to make a bunch of `publish` streams (which are net connections) to redis to handle a lot of publish channels","date":"2012-08-07T06:01:10.280Z","type":"message"}
{"nick":"Raynos","message":"whats the message string?","date":"2012-08-07T06:01:15.300Z","type":"message"}
{"nick":"devaholic","message":"i would expect the response to subscribe, after the initial boolean, to be \\n undefined:streamName \\n foo","date":"2012-08-07T06:02:00.805Z","type":"message"}
{"nick":"Raynos","message":"oh","date":"2012-08-07T06:02:35.325Z","type":"message"}
{"nick":"Raynos","message":"subscribe returns the channel name too","date":"2012-08-07T06:02:41.607Z","type":"message"}
{"nick":"devaholic","message":"yeah that way you can subscribe to 10 different channels with one connection","date":"2012-08-07T06:02:57.919Z","type":"message"}
{"nick":"Raynos","message":"i see","date":"2012-08-07T06:03:33.349Z","type":"message"}
{"nick":"devaholic","message":"the api for redis-stream might not be perfect yet but even if you have to patch it a little bit the code is going to be very short","date":"2012-08-07T06:03:38.615Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2012-08-07T06:04:21.110Z","type":"quit"}
{"nick":"Raynos","message":"how do I strip out the first few messages?","date":"2012-08-07T06:04:39.544Z","type":"message"}
{"nick":"Raynos","message":"like the boolean","date":"2012-08-07T06:04:42.391Z","type":"message"}
{"nick":"devaholic","message":"also you can use Redis.es instead of require('event-stream') so that you are sure you are using the same version of event-stream as is used internally in redis-stream, which may or may not be an issue at some point","date":"2012-08-07T06:04:47.156Z","type":"message"}
{"nick":"devaholic","message":"you should probably use it to verify that you connected, but you could just create a little thing like...","date":"2012-08-07T06:05:35.514Z","type":"message"}
{"nick":"Raynos","message":"devaholic: ...","date":"2012-08-07T06:06:09.776Z","type":"message"}
{"nick":"devaholic","message":"var connected = false; Redis.es.mapSync(function (data) { if (!connected && data === 1) connected = true; return })","date":"2012-08-07T06:06:32.405Z","type":"message"}
{"nick":"devaholic","message":"then pipe the stream to that and return that as your stream","date":"2012-08-07T06:06:53.944Z","type":"message"}
{"nick":"devaholic","message":"`return undefined` will filter the 1 from making it to your browser stuff or wherever else","date":"2012-08-07T06:07:30.738Z","type":"message"}
{"nick":"Raynos","message":"cool","date":"2012-08-07T06:08:03.703Z","type":"message"}
{"nick":"devaholic","message":"then also make sure you are connected before publishing in your test","date":"2012-08-07T06:08:19.201Z","type":"message"}
{"nick":"devaholic","message":"if that doesnt work let me know :D","date":"2012-08-07T06:08:34.608Z","type":"message"}
{"nick":"Raynos","message":"devaholic: It doesnt close the redis connection :/","date":"2012-08-07T06:12:24.227Z","type":"message"}
{"nick":"Raynos","message":"when I close the stream","date":"2012-08-07T06:12:29.828Z","type":"message"}
{"nick":"Raynos","message":"balls","date":"2012-08-07T06:12:30.986Z","type":"message"}
{"nick":"devaholic","message":"if you want to make an issue about how redis-stream should emit an error with a failed return value so those booleans can be ignored it might be a good addition","date":"2012-08-07T06:12:36.965Z","type":"message"}
{"nick":"devaholic","message":"its a net connection, so stream.close() it","date":"2012-08-07T06:13:04.898Z","type":"message"}
{"nick":"devaholic","message":"redis needs you to do that btw, or else it will only sometimes close its end","date":"2012-08-07T06:13:27.005Z","type":"message"}
{"nick":"devaholic","message":"in any case","date":"2012-08-07T06:13:37.845Z","type":"message"}
{"nick":"Raynos","message":"done!","date":"2012-08-07T06:19:52.229Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/Raynos/redis-stream-store","date":"2012-08-07T06:20:02.771Z","type":"message"}
{"nick":"Raynos","message":"npm modules++","date":"2012-08-07T06:20:07.303Z","type":"message"}
{"nick":"Raynos","message":"and dont stream.close it -.-","date":"2012-08-07T06:20:16.626Z","type":"message"}
{"nick":"Raynos","message":"stream.end it","date":"2012-08-07T06:20:18.385Z","type":"message"}
{"nick":"devaholic","message":"oh ok","date":"2012-08-07T06:20:42.646Z","type":"message"}
{"nick":"devaholic","message":"its not junk haha, you should use that to possibly pause the writable stream until you get that return value","date":"2012-08-07T06:21:03.451Z","type":"message"}
{"nick":"Raynos","message":"devaholic: I just callback it when its connected rather then pause it","date":"2012-08-07T06:21:29.742Z","type":"message"}
{"nick":"devaholic","message":"why are you filtering \"message\" ?","date":"2012-08-07T06:21:59.213Z","type":"message"}
{"nick":"Raynos","message":"devaholic: because it's an annoying junk word","date":"2012-08-07T06:23:36.261Z","type":"message"}
{"nick":"Raynos","message":"Of course maybe you want to actually send the word message, well screw you :p","date":"2012-08-07T06:23:51.595Z","type":"message"}
{"nick":"Raynos","message":"message streamName actualValue","date":"2012-08-07T06:24:22.373Z","type":"message"}
{"nick":"devaholic","message":"i bet you could turn these subscribe streams into streaming json","date":"2012-08-07T06:24:35.129Z","type":"message"}
{"nick":"devaholic","message":"with another line or two","date":"2012-08-07T06:24:41.409Z","type":"message"}
{"nick":"devaholic","message":"ah it does return message first","date":"2012-08-07T06:26:36.474Z","type":"message"}
{"nick":"devaholic","message":"redis stuff","date":"2012-08-07T06:26:41.627Z","type":"message"}
{"nick":"devaholic","message":"this is pretty cool","date":"2012-08-07T06:28:58.982Z","type":"message"}
{"nick":"devaholic","message":"its pretty much a stream broadcaster","date":"2012-08-07T06:29:05.987Z","type":"message"}
{"nick":"devaholic","message":"heh","date":"2012-08-07T06:29:24.876Z","type":"message"}
{"nick":"Raynos","message":"devaholic: yep :)","date":"2012-08-07T06:32:20.633Z","type":"message"}
{"nick":"devaholic","message":"so to send down persistent data you could initially pause the readable stream and pipe your stored data to the destination, then when its done unpause the readable stream","date":"2012-08-07T06:32:23.176Z","type":"message"}
{"nick":"Raynos","message":"its even cooler when used with MultiChannel","date":"2012-08-07T06:32:29.034Z","type":"message"}
{"nick":"devaholic","message":"made me think of what other crazy stuff you could pipe to this, like broadcasting a file stream to an unlimited number of end streams","date":"2012-08-07T06:33:24.628Z","type":"message"}
{"nick":"devaholic","message":"i should possibly add a pubsub parser along with the hmget parser to handle the message line properly","date":"2012-08-07T06:34:32.023Z","type":"message"}
{"nick":"devaholic","message":"you should count the lines and strip every third line rather than testing the string value","date":"2012-08-07T06:34:47.099Z","type":"message"}
{"nick":"Raynos","message":"i agree","date":"2012-08-07T06:35:12.089Z","type":"message"}
{"nick":"Raynos","message":"feel free to PR :D","date":"2012-08-07T06:35:15.498Z","type":"message"}
{"nick":"devaholic","message":"or pipe it to the Redis.hmget function to turn it into json","date":"2012-08-07T06:35:16.858Z","type":"message"}
{"nick":"devaholic","message":"so that message becomes a key or element 0 in an array","date":"2012-08-07T06:35:30.727Z","type":"message"}
{"nick":"Raynos","message":"devaholic: https://github.com/Raynos/seaport-proxy it is done cc SubStack","date":"2012-08-07T06:38:48.372Z","type":"message"}
{"nick":"devaholic","message":"is the streamRouter stuff just some extra bit","date":"2012-08-07T06:41:07.608Z","type":"message"}
{"nick":"devaholic","message":"why do you need a route","date":"2012-08-07T06:41:34.929Z","type":"message"}
{"nick":"Raynos","message":"devaholic: it's kind of extra. I have yet to refactor it away","date":"2012-08-07T06:42:55.489Z","type":"message"}
{"nick":"Raynos","message":"devaholic: you need some way to send named streams to specific destinations. The action service you are getting is encoded in the stream name","date":"2012-08-07T06:43:17.423Z","type":"message"}
{"nick":"Raynos","message":"you can just call proxy.get(stream, { service: \"magic@1.2.x\" })","date":"2012-08-07T06:44:12.940Z","type":"message"}
{"nick":"Raynos","message":"the browser.js code has a hard coded call to the uri :D","date":"2012-08-07T06:44:50.038Z","type":"message"}
{"nick":"Raynos","message":"devaholic: https://github.com/Raynos/multi-channel-mdm/tree/master/examples/redis","date":"2012-08-07T06:56:39.005Z","type":"message"}
{"nick":"Raynos","message":"run two servers on different ports then watch THE MAGIC","date":"2012-08-07T06:56:48.194Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-08-07T06:58:52.729Z","type":"message"}
{"nick":"Raynos","message":"devaholic: https://github.com/Raynos/stream-chat now web scale!","date":"2012-08-07T07:11:07.675Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/Raynos/stream-chat#the-interesting-bits","date":"2012-08-07T07:31:05.343Z","type":"message"}
{"nick":"chapel","reason":"*.net *.split","date":"2012-08-07T07:44:33.829Z","type":"quit"}
{"nick":"sorensen","reason":"*.net *.split","date":"2012-08-07T07:44:34.039Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-08-07T07:58:52.752Z","type":"message"}
