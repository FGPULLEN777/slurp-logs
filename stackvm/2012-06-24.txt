{"nick":"mikeal","reason":"Read error: Connection reset by peer","date":"2012-06-24T00:18:51.502Z","type":"quit"}
{"nick":"mikeal1","date":"2012-06-24T00:18:54.713Z","type":"join"}
{"nick":"st_luke","date":"2012-06-24T00:24:09.612Z","type":"join"}
{"nick":"tanepiper","message":"heh, i wonder with shoe if I even need dnode now ? :D","date":"2012-06-24T00:24:10.129Z","type":"message"}
{"nick":"tanepiper","message":"i could justs set up shoe channels and stream requests to and from","date":"2012-06-24T00:24:31.091Z","type":"message"}
{"nick":"SubStack","message":"the number of channels you can set up is limited","date":"2012-06-24T00:24:53.298Z","type":"message"}
{"nick":"SubStack","message":"by browsers","date":"2012-06-24T00:24:55.260Z","type":"message"}
{"nick":"SubStack","message":"but you could use a mux/demux to fix that","date":"2012-06-24T00:25:14.803Z","type":"message"}
{"nick":"tanepiper","message":"maxogden: that video streaming is awesome :D","date":"2012-06-24T00:25:17.042Z","type":"message"}
{"nick":"tanepiper","message":"yea i saw that module SubStack","date":"2012-06-24T00:25:48.041Z","type":"message"}
{"nick":"SubStack","message":"I need to take a close look at the api","date":"2012-06-24T00:26:48.873Z","type":"message"}
{"nick":"SubStack","message":"I might have something simpler that could work","date":"2012-06-24T00:26:57.578Z","type":"message"}
{"nick":"Raynos","message":"SubStack: Thanks for ap.","date":"2012-06-24T00:31:30.118Z","type":"message"}
{"nick":"SubStack","message":"I also want something that can do QoS at some point","date":"2012-06-24T00:31:32.022Z","type":"message"}
{"nick":"Raynos","message":"I dont know whether it's a good or bad thing when I have \"I need a small module with two functions to do two specific useful things. Oh wait substack already wrote that\"","date":"2012-06-24T00:31:58.068Z","type":"message"}
{"nick":"SubStack","message":"there are so many tiny orthogonal modules in the space of all possible modules!","date":"2012-06-24T00:32:52.394Z","type":"message"}
{"nick":"SubStack","message":"so many more to be written","date":"2012-06-24T00:32:56.551Z","type":"message"}
{"nick":"SubStack","message":"all very tiny","date":"2012-06-24T00:32:58.168Z","type":"message"}
{"nick":"SubStack","message":"tiny modules are however finitely bounded if we establish an upper bound for size","date":"2012-06-24T00:33:26.382Z","type":"message"}
{"nick":"SubStack","message":"that might explain why you report a lack of sparseness!","date":"2012-06-24T00:33:45.113Z","type":"message"}
{"nick":"SubStack","message":"dominictarr: no fair using undocumented es.stringify() :p","date":"2012-06-24T00:34:39.858Z","type":"message"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2012-06-24T00:35:46.657Z","type":"quit"}
{"nick":"SubStack","message":"in mux-demux","date":"2012-06-24T00:36:30.211Z","type":"message"}
{"nick":"Raynos","message":"SubStack: Do you have a toArray utility or just call [].slice.call(arguments) everywhere?","date":"2012-06-24T00:37:58.460Z","type":"message"}
{"nick":"SubStack","message":"the latter","date":"2012-06-24T00:39:12.260Z","type":"message"}
{"nick":"Raynos","message":"SubStack: https://github.com/substack/node-ap/pull/1","date":"2012-06-24T00:54:44.655Z","type":"message"}
{"nick":"Raynos","message":"accept and bump version please","date":"2012-06-24T00:54:50.706Z","type":"message"}
{"nick":"SubStack","message":"k","date":"2012-06-24T00:54:57.069Z","type":"message"}
{"nick":"SubStack","message":"it sucks in javascript how you can't .call or .apply the .call and .apply functions","date":"2012-06-24T00:55:19.407Z","type":"message"}
{"nick":"SubStack","message":"not very meta!","date":"2012-06-24T00:55:26.915Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T00:58:47.669Z","type":"message"}
{"nick":"Raynos","message":"you can't ?","date":"2012-06-24T01:00:02.087Z","type":"message"}
{"nick":"blakmatrix","reason":"Ping timeout: 272 seconds","date":"2012-06-24T01:04:04.013Z","type":"quit"}
{"nick":"st_luke","message":"not very metal","date":"2012-06-24T01:07:39.448Z","type":"message"}
{"nick":"st_luke","message":"SubStack: that music video is awesome","date":"2012-06-24T01:07:49.665Z","type":"message"}
{"nick":"SubStack","message":"st_luke: dominictarr is in it!","date":"2012-06-24T01:14:37.440Z","type":"message"}
{"nick":"st_luke","message":"shit really","date":"2012-06-24T01:15:23.746Z","type":"message"}
{"nick":"st_luke","message":"badass","date":"2012-06-24T01:15:24.803Z","type":"message"}
{"nick":"SubStack","message":"free wifi / hack the planet","date":"2012-06-24T01:18:10.254Z","type":"message"}
{"nick":"SubStack","message":"is him","date":"2012-06-24T01:18:13.560Z","type":"message"}
{"nick":"blakmatrix","date":"2012-06-24T01:25:36.164Z","type":"join"}
{"nick":"tanepiper","message":"SubStack: could you not just do some kind of recursive bind?","date":"2012-06-24T01:33:02.827Z","type":"message"}
{"nick":"SubStack","message":"tanepiper: I just wanted to do a sweet array concat one-liner","date":"2012-06-24T01:33:30.065Z","type":"message"}
{"nick":"SubStack","message":"but javascript wouldn't have it","date":"2012-06-24T01:33:37.985Z","type":"message"}
{"nick":"SubStack","message":"dominictarr: oh sweet maybe I can use the extra options hash in create{Read,Write}Stream to pass along QoS","date":"2012-06-24T01:38:11.719Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T01:58:47.641Z","type":"message"}
{"nick":"maxogden","message":"tanepiper: thanks, its pretty slow though cause browser video capture is slow","date":"2012-06-24T02:02:11.030Z","type":"message"}
{"nick":"SubStack","message":"woot, browser output comes back to the terminal in the new testling","date":"2012-06-24T02:09:48.249Z","type":"message"}
{"nick":"SubStack","message":"using shoe and JSONStream","date":"2012-06-24T02:09:54.763Z","type":"message"}
{"nick":"SubStack","message":"and the readable source stream is tap :D","date":"2012-06-24T02:10:21.844Z","type":"message"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-06-24T02:12:20.146Z","type":"nick"}
{"nick":"st_luke","message":"I had an excuse to use jsonstream the other day, it was awesome","date":"2012-06-24T02:12:24.190Z","type":"message"}
{"nick":"st_luke","message":"super fun","date":"2012-06-24T02:12:27.406Z","type":"message"}
{"nick":"ryan_stevens","date":"2012-06-24T02:18:02.667Z","type":"join"}
{"nick":"st_luke_","date":"2012-06-24T02:22:47.610Z","type":"join"}
{"nick":"st_luke_","reason":"Remote host closed the connection","date":"2012-06-24T02:29:51.376Z","type":"quit"}
{"nick":"st_luke","date":"2012-06-24T02:30:39.495Z","type":"quit"}
{"nick":"st_luke","date":"2012-06-24T02:30:54.783Z","type":"join"}
{"nick":"e1ven","date":"2012-06-24T02:41:53.639Z","type":"join"}
{"nick":"e1ven","reason":"Changing host","date":"2012-06-24T02:44:01.349Z","type":"quit"}
{"nick":"e1ven","date":"2012-06-24T02:44:01.520Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T02:58:47.970Z","type":"message"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-06-24T03:57:27.376Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T03:58:47.614Z","type":"message"}
{"nick":"e1ven","reason":"Quit: Textual IRC Client: http://www.textualapp.com/","date":"2012-06-24T04:12:17.758Z","type":"quit"}
{"nick":"dominictarr","message":"Raynos, I bet you can call .call.call if you assing .call.call = Function.prototype.call","date":"2012-06-24T04:20:23.277Z","type":"message"}
{"nick":"dominictarr","message":"SubStack, yeah, mux-demux just wraps remote-events and browser-stream","date":"2012-06-24T04:21:28.268Z","type":"message"}
{"nick":"dominictarr","message":"I'm contemplating ID|LENGTH|PACKET","date":"2012-06-24T04:22:20.522Z","type":"message"}
{"nick":"dominictarr","message":"but I did it that way because if I did it that way I would be finished that evening","date":"2012-06-24T04:23:07.466Z","type":"message"}
{"nick":"dominictarr","message":"which I was","date":"2012-06-24T04:23:12.235Z","type":"message"}
{"nick":"dominictarr","message":"pull request welcome","date":"2012-06-24T04:23:38.989Z","type":"message"}
{"nick":"dominictarr","message":"SubStack, you removed crypto-browserify ?","date":"2012-06-24T04:47:20.035Z","type":"message"}
{"nick":"dominictarr","message":"from browserify","date":"2012-06-24T04:49:06.558Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T04:58:47.652Z","type":"message"}
{"nick":"maxogden","message":"IM HACKIN ON WEB AUDIO STUFF it is fun","date":"2012-06-24T05:08:21.427Z","type":"message"}
{"nick":"maxogden","message":"funklet.com is amazing","date":"2012-06-24T05:20:30.105Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-06-24T05:26:46.646Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T05:58:47.667Z","type":"message"}
{"nick":"stlsaint","reason":"Quit: leaving","date":"2012-06-24T06:13:09.758Z","type":"quit"}
{"nick":"st_luke","message":"holy shit","date":"2012-06-24T06:33:34.511Z","type":"message"}
{"nick":"rowbit","message":"/!\\ ATTENTION: (default-local) dkords@... successfully signed up for developer browserling plan ($20). Cash money! /!\\","date":"2012-06-24T06:42:10.534Z","type":"message"}
{"nick":"maxogden","message":"WEWT","date":"2012-06-24T06:45:51.791Z","type":"message"}
{"nick":"blakmatrix","reason":"Read error: Connection reset by peer","date":"2012-06-24T06:48:22.456Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T06:58:47.654Z","type":"message"}
{"nick":"dominictarr","message":"maxogden, I have an idea I want to do for audio: a computer drum circle.","date":"2012-06-24T07:12:15.573Z","type":"message"}
{"nick":"dominictarr","message":"basically, you all have little sequencer things, and can make patterns","date":"2012-06-24T07:12:39.547Z","type":"message"}
{"nick":"dominictarr","message":"but you can also hear other people's patterns, which play in time with yours","date":"2012-06-24T07:13:10.136Z","type":"message"}
{"nick":"dominictarr","message":"but here is the best part: you can mute the people you don't like!","date":"2012-06-24T07:13:25.803Z","type":"message"}
{"nick":"maxogden","message":"haha","date":"2012-06-24T07:15:06.932Z","type":"message"}
{"nick":"maxogden","message":"im kind of building that","date":"2012-06-24T07:15:10.218Z","type":"message"}
{"nick":"maxogden","message":"mute is a good idea","date":"2012-06-24T07:15:20.876Z","type":"message"}
{"nick":"maxogden","message":"im trying to figure out how streams can be useful for the web audio api","date":"2012-06-24T07:15:33.963Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T07:58:47.662Z","type":"message"}
{"nick":"SubStack","message":"uh oh, didn't upgrade","date":"2012-06-24T08:10:27.823Z","type":"message"}
{"nick":"SubStack","message":"dominictarr: did I!!","date":"2012-06-24T08:10:34.878Z","type":"message"}
{"nick":"SubStack","message":"dominictarr: looks like it's still in the package.json","date":"2012-06-24T08:11:47.600Z","type":"message"}
{"nick":"SubStack","message":"does it not work anymore?","date":"2012-06-24T08:11:55.366Z","type":"message"}
{"nick":"SubStack","message":"fixed that account manually","date":"2012-06-24T08:16:42.969Z","type":"message"}
{"nick":"tanepiper","message":"maxogden: would you mind if I used your code to demo streams?","date":"2012-06-24T08:29:39.018Z","type":"message"}
{"nick":"sveisvei","reason":"Quit: Connection closed for inactivity","date":"2012-06-24T08:45:11.502Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T08:58:47.597Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T09:58:47.822Z","type":"message"}
{"nick":"tanepiper","message":"dominictarr: should i be able to pipe a es.map stream or not?","date":"2012-06-24T10:34:51.683Z","type":"message"}
{"nick":"tanepiper","message":"or only a es.streamable >","date":"2012-06-24T10:35:14.648Z","type":"message"}
{"nick":"tanepiper","message":"?","date":"2012-06-24T10:35:16.806Z","type":"message"}
{"nick":"tanepiper","message":"eh, .pipeable","date":"2012-06-24T10:36:02.322Z","type":"message"}
{"nick":"SubStack","message":"es.map is readable/writable","date":"2012-06-24T10:41:44.832Z","type":"message"}
{"nick":"SubStack","message":"NOTE: I shall use the term \"through stream\" to refer to a stream that is writable and readable.","date":"2012-06-24T10:42:15.777Z","type":"message"}
{"nick":"SubStack","message":"map (asyncFunction) Create a through stream from an asyncronous function.","date":"2012-06-24T10:42:33.554Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 244 seconds","date":"2012-06-24T10:52:14.122Z","type":"quit"}
{"nick":"AvianFlu","date":"2012-06-24T10:55:28.496Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T10:58:47.720Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2012-06-24T11:17:10.104Z","type":"quit"}
{"nick":"AvianFlu","reason":"Ping timeout: 244 seconds","date":"2012-06-24T11:39:12.159Z","type":"quit"}
{"nick":"SubStack","message":"https://github.com/substack/node-brake","date":"2012-06-24T11:44:37.553Z","type":"message"}
{"nick":"SubStack","message":"all the other throttling libs I looked at didn't implement backpressure","date":"2012-06-24T11:44:52.474Z","type":"message"}
{"nick":"SubStack","message":"now I can experiment with QoS :D","date":"2012-06-24T11:45:03.790Z","type":"message"}
{"nick":"SubStack","message":"on top of mux-demux","date":"2012-06-24T11:45:13.321Z","type":"message"}
{"nick":"tanepiper","message":"another new module!","date":"2012-06-24T11:48:41.050Z","type":"message"}
{"nick":"tanepiper","message":"i just saw it pop up on my twitter stream","date":"2012-06-24T11:48:47.497Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T11:58:47.686Z","type":"message"}
{"nick":"dominictarr","message":"tanepiper, yes you should be able to pipe map. maybe you arn't calling a callback?","date":"2012-06-24T12:55:31.234Z","type":"message"}
{"nick":"dominictarr","message":"what is happening?","date":"2012-06-24T12:55:43.113Z","type":"message"}
{"nick":"SubStack","message":"beep boop","date":"2012-06-24T12:55:50.163Z","type":"message"}
{"nick":"dominictarr","message":"hey","date":"2012-06-24T12:56:13.294Z","type":"message"}
{"nick":"SubStack","message":"thinking about how QoS could be implemented on top of a mux/demux","date":"2012-06-24T12:58:27.525Z","type":"message"}
{"nick":"dominictarr","message":"SubStack, builtins/crypto had been renamed to bulitins/_crypto on master","date":"2012-06-24T12:58:36.270Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T12:58:47.725Z","type":"message"}
{"nick":"dominictarr","message":"yeah, there are a few options.","date":"2012-06-24T12:59:06.867Z","type":"message"}
{"nick":"SubStack","message":"dominictarr: browserify doesn't use builtins/ it tries to require.resolve(name + '-browserify')","date":"2012-06-24T12:59:21.476Z","type":"message"}
{"nick":"SubStack","message":"and crypto is a dependency so that would normally work","date":"2012-06-24T12:59:37.443Z","type":"message"}
{"nick":"SubStack","message":"crypto-browserify I mean","date":"2012-06-24T12:59:45.414Z","type":"message"}
{"nick":"dominictarr","message":"hmm, if I run ./bin/cmd.js it works","date":"2012-06-24T13:02:49.979Z","type":"message"}
{"nick":"dominictarr","message":"but if I npm install -g","date":"2012-06-24T13:02:58.481Z","type":"message"}
{"nick":"dominictarr","message":"and then browserify it doesn't","date":"2012-06-24T13:03:08.378Z","type":"message"}
{"nick":"SubStack","message":"oh I see why","date":"2012-06-24T13:05:30.443Z","type":"message"}
{"nick":"SubStack","message":"it has to do with how paths get normalized","date":"2012-06-24T13:05:35.727Z","type":"message"}
{"nick":"SubStack","message":"require.define(\"/home/substack/projects/node-browserify/node_modules/crypto-browserify/package.json\",function(require,module,exports,__dirname,__filename,process){module.exports = {}});","date":"2012-06-24T13:05:36.633Z","type":"message"}
{"nick":"SubStack","message":"I see that in the bundle output","date":"2012-06-24T13:05:42.692Z","type":"message"}
{"nick":"SubStack","message":"so I need to add a check in bundle()'s re-targetting logic","date":"2012-06-24T13:06:03.859Z","type":"message"}
{"nick":"dominictarr","message":"cool","date":"2012-06-24T13:07:58.757Z","type":"message"}
{"nick":"dominictarr","message":"SubStack, you might want to throttle mux-demux overall. and pause the busyiest stream.","date":"2012-06-24T13:15:01.602Z","type":"message"}
{"nick":"dominictarr","message":"but you would want to keep it fair.","date":"2012-06-24T13:15:23.290Z","type":"message"}
{"nick":"dominictarr","message":"another approach would be to use a tcp like standoff.","date":"2012-06-24T13:16:10.247Z","type":"message"}
{"nick":"SubStack","message":"I was thinking that you give every stream a QoS quota","date":"2012-06-24T13:16:38.604Z","type":"message"}
{"nick":"dominictarr","message":"where it slows down (exponentially) on pause, then speeds up (linearly) on resume.","date":"2012-06-24T13:16:55.348Z","type":"message"}
{"nick":"SubStack","message":"and the algorithm allots according to the total allotted quota","date":"2012-06-24T13:17:07.531Z","type":"message"}
{"nick":"SubStack","message":"md.createWriteStream('bulk', 1)","date":"2012-06-24T13:17:40.268Z","type":"message"}
{"nick":"SubStack","message":"md.createWriteStream('priority', 100)","date":"2012-06-24T13:17:48.101Z","type":"message"}
{"nick":"SubStack","message":"something like that","date":"2012-06-24T13:17:51.783Z","type":"message"}
{"nick":"dominictarr","message":"oh, so it pauses who is using more than their share, once everyone goes over?","date":"2012-06-24T13:18:09.343Z","type":"message"}
{"nick":"SubStack","message":"yep","date":"2012-06-24T13:18:21.881Z","type":"message"}
{"nick":"dominictarr","message":"thats good.","date":"2012-06-24T13:18:41.851Z","type":"message"}
{"nick":"dominictarr","message":"you could also use pauses another way.","date":"2012-06-24T13:18:49.546Z","type":"message"}
{"nick":"dominictarr","message":"consider a infinite scroll based on a stream.","date":"2012-06-24T13:19:02.989Z","type":"message"}
{"nick":"dominictarr","message":"it would pipe from some serverside query through websockets, then to the dom.","date":"2012-06-24T13:19:34.178Z","type":"message"}
{"nick":"dominictarr","message":"but you could have the dom stream pause if the element last drawn is below the bottom of the screen.","date":"2012-06-24T13:20:05.856Z","type":"message"}
{"nick":"dominictarr","message":"and then resume when it becomes visible","date":"2012-06-24T13:20:22.857Z","type":"message"}
{"nick":"dominictarr","message":"this would require sending the pause events, which mux-demux does.","date":"2012-06-24T13:21:59.620Z","type":"message"}
{"nick":"SubStack","message":"hah totally","date":"2012-06-24T13:22:41.875Z","type":"message"}
{"nick":"dominictarr","message":"so there are multiple use-cases.","date":"2012-06-24T13:30:05.904Z","type":"message"}
{"nick":"tanepiper","message":"dominictarr: https://gist.github.com/3ea063c0f3b74c25bc44","date":"2012-06-24T13:46:25.959Z","type":"message"}
{"nick":"tanepiper","message":"this is how I am using map, i was testing it by doing fs.createWriteStream().pipe(process_tweet), with process_tweet being the instance","date":"2012-06-24T13:47:05.788Z","type":"message"}
{"nick":"tanepiper","message":"(although i wonder if there is a better way to do it)","date":"2012-06-24T13:47:29.038Z","type":"message"}
{"nick":"tanepiper","message":"at the moment, I am using callbacks to pass this too, ideally it would be a stream i'd pipe over shoe so something like incoming.pipe(process_tweet).pipe(shoe)","date":"2012-06-24T13:48:09.925Z","type":"message"}
{"nick":"tanepiper","message":"(then i'm thinking something like maxogden's domnode to stream directly to the dom, since i;m pre-rendering the template on the server side)","date":"2012-06-24T13:52:44.653Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T13:58:47.732Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.174.109(free2)","date":"2012-06-24T14:02:34.574Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.174.109(free2)","date":"2012-06-24T14:06:04.583Z","type":"message"}
{"nick":"SubStack","message":"dominictarr: npm install -g browserify@1.13.3","date":"2012-06-24T14:11:57.127Z","type":"message"}
{"nick":"dominictarr","message":"IT WORKS!","date":"2012-06-24T14:28:15.721Z","type":"message"}
{"nick":"LOUDBOT","message":"I HOPE YOUR HAPPY, FACEBOOK JERKS","date":"2012-06-24T14:28:17.249Z","type":"message"}
{"nick":"dominictarr","message":"THANKS","date":"2012-06-24T14:28:24.477Z","type":"message"}
{"nick":"tanepiper","message":"i just wrote a horrible, horrible bit of code :|","date":"2012-06-24T14:28:37.232Z","type":"message"}
{"nick":"dominictarr","message":"tanepiper, you mean fs.createReadStream().pipe(process_tweet) ?","date":"2012-06-24T14:30:20.148Z","type":"message"}
{"nick":"tanepiper","message":"no","date":"2012-06-24T14:30:37.685Z","type":"message"}
{"nick":"tanepiper","message":"https://gist.github.com/7759d14b58963e46fe2e","date":"2012-06-24T14:31:11.969Z","type":"message"}
{"nick":"tanepiper","message":"this is why i need to get up and running with mux/demux","date":"2012-06-24T14:31:23.496Z","type":"message"}
{"nick":"tanepiper","message":"so i have have incoming stream channels","date":"2012-06-24T14:31:32.265Z","type":"message"}
{"nick":"dominictarr","message":"yeah, the trouble is that some of the other apis you are using arn't streams","date":"2012-06-24T14:33:59.776Z","type":"message"}
{"nick":"tanepiper","message":"yea, i have to mix restful and streaming apis","date":"2012-06-24T14:34:27.782Z","type":"message"}
{"nick":"dominictarr","message":"I have an idea for that: but never got around to implementing it.","date":"2012-06-24T14:35:27.216Z","type":"message"}
{"nick":"dominictarr","message":"PageStream","date":"2012-06-24T14:35:32.259Z","type":"message"}
{"nick":"dominictarr","message":"you'd just define the pagination scheme, and then it would work like a streaming read.","date":"2012-06-24T14:36:02.431Z","type":"message"}
{"nick":"tanepiper","message":"could be interesting","date":"2012-06-24T14:36:16.442Z","type":"message"}
{"nick":"SubStack","message":"it'd be sweet if MuxDemux instances were themselves streams","date":"2012-06-24T14:36:28.038Z","type":"message"}
{"nick":"tanepiper","message":"http://memegenerator.net/instance/22453504","date":"2012-06-24T14:36:59.478Z","type":"message"}
{"nick":"dominictarr","message":"so, var m = new MuxDemux() ; m.pipe(con).pipe(m)","date":"2012-06-24T14:37:41.015Z","type":"message"}
{"nick":"SubStack","message":"yeah","date":"2012-06-24T14:38:14.783Z","type":"message"}
{"nick":"dominictarr","message":"I think thats doable.","date":"2012-06-24T14:38:37.023Z","type":"message"}
{"nick":"dominictarr","message":"it wouldn't make too many problems, since all the streams die on a disconnect anyway.","date":"2012-06-24T14:39:32.552Z","type":"message"}
{"nick":"stlsaint","date":"2012-06-24T14:42:36.528Z","type":"join"}
{"nick":"dominictarr","message":"hmm, maybe it's gonna require some refactor of remote-events","date":"2012-06-24T14:54:00.773Z","type":"message"}
{"nick":"dominictarr","message":"trouble is that remote events thinks it's connected when it pipes. and stops buffering...","date":"2012-06-24T14:55:47.107Z","type":"message"}
{"nick":"dominictarr","message":"aha I know. it just needs a buffer stream at the end.","date":"2012-06-24T14:55:59.387Z","type":"message"}
{"nick":"dominictarr","message":"hmm. that would take more refacters in es.duplex","date":"2012-06-24T14:58:15.654Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T14:58:47.953Z","type":"message"}
{"nick":"dominictarr","message":"oh no. previously, I was allowing to call createStream, before the getMuxDemuxStream() was called (and the stream was created) which was buffering the createStream messages.","date":"2012-06-24T15:02:59.886Z","type":"message"}
{"nick":"dominictarr","message":"but I could reasonably remove that feature.","date":"2012-06-24T15:03:15.875Z","type":"message"}
{"nick":"dominictarr","message":"but, later. need sleep.","date":"2012-06-24T15:04:55.193Z","type":"message"}
{"nick":"dominictarr","new_nick":"dominic_is_sleep","date":"2012-06-24T15:06:54.365Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T15:58:47.746Z","type":"message"}
{"nick":"maxogden","message":"tanepiper: use whateva you want. bonus points if you record your presentation and put it on youtube","date":"2012-06-24T16:02:48.722Z","type":"message"}
{"nick":"tanepiper","message":"the conference should be recording it","date":"2012-06-24T16:15:14.970Z","type":"message"}
{"nick":"tanepiper","message":"but i thought the video example would be a good \"LOOK AT FUCKING STREAMS!\" demo","date":"2012-06-24T16:15:31.715Z","type":"message"}
{"nick":"maxogden","message":"im working on a web audio api streams demo","date":"2012-06-24T16:21:51.173Z","type":"message"}
{"nick":"maxogden","message":"i wish there was a decent way of capturing microphone input tough","date":"2012-06-24T16:22:19.884Z","type":"message"}
{"nick":"maxogden","message":"though*","date":"2012-06-24T16:22:21.833Z","type":"message"}
{"nick":"tanepiper","message":"isn't there and <input type=\"speech\"> tag or something, that google use?","date":"2012-06-24T16:22:52.177Z","type":"message"}
{"nick":"maxogden","message":"yea the audio goes to googles servers","date":"2012-06-24T16:23:43.108Z","type":"message"}
{"nick":"tanepiper","message":"mehh","date":"2012-06-24T16:26:59.844Z","type":"message"}
{"nick":"chapel","message":"tanepiper: you should screen record before or during","date":"2012-06-24T16:32:39.115Z","type":"message"}
{"nick":"mikeal1","reason":"Quit: Leaving.","date":"2012-06-24T16:46:28.371Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T16:58:47.809Z","type":"message"}
{"nick":"tanepiper","message":"chapel: any recommendations for the mac?","date":"2012-06-24T17:04:20.183Z","type":"message"}
{"nick":"tanepiper","message":"Anyone want the domain hackno.de ? - I was going to take it but *too much effort*","date":"2012-06-24T17:06:19.408Z","type":"message"}
{"nick":"chapel","message":"tanepiper: quicktime","date":"2012-06-24T17:14:24.957Z","type":"message"}
{"nick":"chapel","message":"screenflow I think","date":"2012-06-24T17:14:28.059Z","type":"message"}
{"nick":"tilgovi","date":"2012-06-24T17:46:11.452Z","type":"join"}
{"nick":"AvianFlu","date":"2012-06-24T17:52:29.460Z","type":"join"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.174.109(free2)","date":"2012-06-24T17:55:34.681Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T17:58:47.715Z","type":"message"}
{"nick":"saijanai_","date":"2012-06-24T18:01:59.901Z","type":"join"}
{"nick":"mikeal","date":"2012-06-24T18:23:52.753Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-06-24T18:52:40.255Z","type":"quit"}
{"nick":"tanepiper","message":"woo compiling node 0.8 is making my air hot","date":"2012-06-24T18:53:01.889Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T18:58:47.667Z","type":"message"}
{"nick":"yorick","message":"SubStack: do you think it's possible to see what is going on at https://github.com/substack/fleet/issues/6 , I think fleet is amazing and I'm looking forward to using it, but this issue currently makes it unusable :/","date":"2012-06-24T19:12:41.483Z","type":"message"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-06-24T19:17:32.837Z","type":"nick"}
{"nick":"AvianFlu","reason":"Ping timeout: 250 seconds","date":"2012-06-24T19:18:35.846Z","type":"quit"}
{"nick":"AvianFlu","date":"2012-06-24T19:53:03.234Z","type":"join"}
{"nick":"rowbit","message":"Daily usage stats: []","date":"2012-06-24T19:58:47.865Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T19:58:48.061Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 244 seconds","date":"2012-06-24T20:03:31.112Z","type":"quit"}
{"nick":"AvianFlu","date":"2012-06-24T20:10:49.403Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 240 seconds","date":"2012-06-24T20:19:26.519Z","type":"quit"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-06-24T20:25:42.432Z","type":"nick"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-06-24T20:29:07.744Z","type":"nick"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-06-24T20:30:25.375Z","type":"nick"}
{"nick":"AvianFlu","date":"2012-06-24T20:43:52.352Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T20:58:47.649Z","type":"message"}
{"nick":"ryan_stevens","date":"2012-06-24T20:59:44.913Z","type":"join"}
{"nick":"dominic_is_sleep","reason":"Remote host closed the connection","date":"2012-06-24T21:24:01.314Z","type":"quit"}
{"nick":"mikeal","date":"2012-06-24T21:26:18.350Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T21:58:47.636Z","type":"message"}
{"nick":"jesusabdullah","message":"SubStack: Can you do me a favor and feed Bird?","date":"2012-06-24T22:01:23.798Z","type":"message"}
{"nick":"jesusabdullah","message":"SubStack: He'll be pretty hungry so you'll probably want to distract him with a millet spray on top of his cage","date":"2012-06-24T22:01:57.245Z","type":"message"}
{"nick":"jesusabdullah","message":"SubStack: Then you can pour some birdseed into his feeder","date":"2012-06-24T22:02:07.569Z","type":"message"}
{"nick":"SubStack","message":"k","date":"2012-06-24T22:31:19.718Z","type":"message"}
{"nick":"tilgovi","reason":"Ping timeout: 260 seconds","date":"2012-06-24T22:35:48.242Z","type":"quit"}
{"nick":"tilgovi","date":"2012-06-24T22:46:39.918Z","type":"join"}
{"nick":"tilgovi","reason":"Ping timeout: 248 seconds","date":"2012-06-24T22:56:05.710Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T22:58:47.723Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-06-24T23:27:45.602Z","type":"quit"}
{"nick":"mikeal","date":"2012-06-24T23:28:44.315Z","type":"join"}
{"nick":"chapel","message":"tanepiper: ping","date":"2012-06-24T23:56:49.830Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-06-24T23:58:47.559Z","type":"message"}
