{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-09-14T00:00:01.245Z","type":"quit"}
{"nick":"ircretary","date":"2013-09-14T00:00:12.915Z","type":"join"}
{"nick":"Maciek416","date":"2013-09-14T00:00:30.173Z","type":"join"}
{"nick":"Maciek416","reason":"Remote host closed the connection","date":"2013-09-14T00:05:30.166Z","type":"quit"}
{"nick":"Maciek416","date":"2013-09-14T00:08:31.687Z","type":"join"}
{"nick":"Maciek416","reason":"Remote host closed the connection","date":"2013-09-14T00:09:23.893Z","type":"quit"}
{"nick":"DTrejo","message":"ircretary is handy","date":"2013-09-14T00:39:04.644Z","type":"message"}
{"nick":"ircretary","message":"DTrejo: I'm not sure what to do with that command.  Ask for help in PM.","date":"2013-09-14T00:39:04.801Z","type":"message"}
{"nick":"i_m_ca","date":"2013-09-14T00:43:59.734Z","type":"join"}
{"nick":"DTrejo","reason":"Remote host closed the connection","date":"2013-09-14T00:44:37.815Z","type":"quit"}
{"nick":"DTrejo","date":"2013-09-14T00:47:00.318Z","type":"join"}
{"nick":"timoxley","date":"2013-09-14T01:06:36.414Z","type":"join"}
{"nick":"ins0mnia","reason":"Ping timeout: 264 seconds","date":"2013-09-14T01:13:18.150Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2013-09-14T01:14:37.468Z","type":"quit"}
{"nick":"calvinfo","date":"2013-09-14T01:24:09.372Z","type":"join"}
{"nick":"ralphtheninja","reason":"Ping timeout: 240 seconds","date":"2013-09-14T01:28:38.593Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-09-14T01:41:07.255Z","type":"join"}
{"nick":"Maciek416","date":"2013-09-14T01:50:15.218Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-14T01:51:39.644Z","type":"nick"}
{"nick":"thlorenz","date":"2013-09-14T02:09:15.149Z","type":"join"}
{"nick":"DTrejo","reason":"Remote host closed the connection","date":"2013-09-14T02:10:49.403Z","type":"quit"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2013-09-14T02:14:26.855Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-14T02:19:08.157Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-09-14T02:19:36.833Z","type":"join"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2013-09-14T02:26:09.433Z","type":"quit"}
{"nick":"DTrejo","date":"2013-09-14T02:26:17.600Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 260 seconds","date":"2013-09-14T02:28:07.389Z","type":"quit"}
{"nick":"michaelrhodes","date":"2013-09-14T02:36:01.856Z","type":"join"}
{"nick":"DTrejo","reason":"Remote host closed the connection","date":"2013-09-14T02:38:02.828Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-09-14T02:48:29.605Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-14T02:48:50.968Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-09-14T02:49:18.841Z","type":"join"}
{"nick":"ralphtheninja","date":"2013-09-14T02:58:13.188Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-14T02:59:47.400Z","type":"nick"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-14T03:03:34.105Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-09-14T03:04:49.776Z","type":"join"}
{"nick":"FireFly","reason":"Excess Flood","date":"2013-09-14T03:08:30.501Z","type":"quit"}
{"nick":"FireFly","date":"2013-09-14T03:08:48.801Z","type":"join"}
{"nick":"fallsemo","date":"2013-09-14T03:10:12.593Z","type":"join"}
{"nick":"tilgovi","reason":"Ping timeout: 256 seconds","date":"2013-09-14T03:11:16.205Z","type":"quit"}
{"nick":"jxson","date":"2013-09-14T03:26:29.308Z","type":"join"}
{"nick":"jxson","reason":"Ping timeout: 264 seconds","date":"2013-09-14T03:31:18.189Z","type":"quit"}
{"nick":"i_m_ca","reason":"Ping timeout: 240 seconds","date":"2013-09-14T03:31:50.588Z","type":"quit"}
{"nick":"fallsemo","reason":"Quit: Leaving.","date":"2013-09-14T03:48:31.078Z","type":"quit"}
{"nick":"i_m_ca","date":"2013-09-14T03:50:41.834Z","type":"join"}
{"nick":"timoxley","date":"2013-09-14T04:04:53.835Z","type":"join"}
{"nick":"feross","date":"2013-09-14T04:06:58.395Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-09-14T04:23:49.489Z","type":"quit"}
{"nick":"i_m_ca","reason":"Ping timeout: 264 seconds","date":"2013-09-14T04:43:06.834Z","type":"quit"}
{"nick":"feross","reason":"Quit: feross","date":"2013-09-14T04:56:50.224Z","type":"quit"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2013-09-14T05:27:32.499Z","type":"quit"}
{"nick":"Maciek416","reason":"Remote host closed the connection","date":"2013-09-14T05:47:27.356Z","type":"quit"}
{"nick":"shama","reason":"Remote host closed the connection","date":"2013-09-14T05:51:15.937Z","type":"quit"}
{"nick":"Maciek416","date":"2013-09-14T06:24:58.687Z","type":"join"}
{"nick":"Maciek416","reason":"Remote host closed the connection","date":"2013-09-14T06:33:03.989Z","type":"quit"}
{"nick":"shama","date":"2013-09-14T06:52:54.848Z","type":"join"}
{"nick":"shama","reason":"Ping timeout: 264 seconds","date":"2013-09-14T06:59:38.685Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-14T07:22:46.954Z","type":"nick"}
{"nick":"michaelrhodes","reason":"Quit: michaelrhodes","date":"2013-09-14T07:26:46.678Z","type":"quit"}
{"nick":"owenb_","reason":"Ping timeout: 248 seconds","date":"2013-09-14T07:36:37.703Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-14T07:36:43.372Z","type":"nick"}
{"nick":"dominictarr","date":"2013-09-14T07:43:37.977Z","type":"join"}
{"nick":"timoxley","date":"2013-09-14T08:14:43.187Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 264 seconds","date":"2013-09-14T08:22:42.836Z","type":"quit"}
{"nick":"ehd","reason":"Ping timeout: 240 seconds","date":"2013-09-14T08:23:02.664Z","type":"quit"}
{"nick":"ehd","date":"2013-09-14T08:27:19.667Z","type":"join"}
{"nick":"peutetre","date":"2013-09-14T08:33:17.833Z","type":"join"}
{"nick":"jlord","reason":"Ping timeout: 264 seconds","date":"2013-09-14T08:46:26.671Z","type":"quit"}
{"nick":"jlord","date":"2013-09-14T08:47:04.789Z","type":"join"}
{"nick":"peutetre","reason":"Ping timeout: 264 seconds","date":"2013-09-14T09:02:54.833Z","type":"quit"}
{"nick":"owenb_","date":"2013-09-14T09:36:04.777Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-14T09:38:50.872Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-14T09:39:04.959Z","type":"nick"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-14T09:49:27.409Z","type":"nick"}
{"nick":"dominictarr","date":"2013-09-14T09:50:14.444Z","type":"join"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-14T10:03:07.242Z","type":"nick"}
{"nick":"ralphtheninja","reason":"Ping timeout: 264 seconds","date":"2013-09-14T10:09:42.116Z","type":"quit"}
{"nick":"fuz","date":"2013-09-14T10:16:11.749Z","type":"join"}
{"nick":"ins0mnia","date":"2013-09-14T10:26:43.781Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-14T10:50:07.459Z","type":"quit"}
{"nick":"fuz","reason":"Ping timeout: 260 seconds","date":"2013-09-14T10:52:35.562Z","type":"quit"}
{"nick":"fuz","date":"2013-09-14T11:00:44.203Z","type":"join"}
{"nick":"dominictarr","date":"2013-09-14T11:17:26.344Z","type":"join"}
{"nick":"substack","message":"https://github.com/substack/node-hat#how-to-make-a-hat","date":"2013-09-14T11:59:27.770Z","type":"message"}
{"nick":"fallsemo","date":"2013-09-14T12:30:14.806Z","type":"join"}
{"nick":"ins0mnia","reason":"Ping timeout: 240 seconds","date":"2013-09-14T12:33:26.659Z","type":"quit"}
{"nick":"yorick","date":"2013-09-14T12:33:31.369Z","type":"join"}
{"nick":"mikolalysenko","date":"2013-09-14T12:52:12.254Z","type":"join"}
{"nick":"ralphtheninja","date":"2013-09-14T13:00:40.093Z","type":"join"}
{"nick":"vitorpacheco","date":"2013-09-14T13:06:54.817Z","type":"join"}
{"nick":"mbalho","message":"substack: lol","date":"2013-09-14T13:08:54.328Z","type":"message"}
{"nick":"mbalho","message":"substack: i think this is a really nice intro http://blakeembrey.com/articles/introduction-to-browserify/","date":"2013-09-14T13:09:00.874Z","type":"message"}
{"nick":"substack","message":"mbalho: yep, I saw that","date":"2013-09-14T13:10:30.265Z","type":"message"}
{"nick":"fuz","reason":"Ping timeout: 256 seconds","date":"2013-09-14T13:10:48.225Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 259 seconds","date":"2013-09-14T13:17:51.903Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-09-14T13:31:50.587Z","type":"join"}
{"nick":"vitorpacheco","reason":"Quit: Saindo","date":"2013-09-14T13:40:19.488Z","type":"quit"}
{"nick":"fallsemo","reason":"Ping timeout: 246 seconds","date":"2013-09-14T13:47:55.815Z","type":"quit"}
{"nick":"fallsemo","date":"2013-09-14T13:57:11.752Z","type":"join"}
{"nick":"i_m_ca","date":"2013-09-14T13:57:35.833Z","type":"join"}
{"nick":"shama","date":"2013-09-14T13:57:38.155Z","type":"join"}
{"nick":"fallsemo","reason":"Ping timeout: 256 seconds","date":"2013-09-14T14:01:52.763Z","type":"quit"}
{"nick":"shama","reason":"Ping timeout: 246 seconds","date":"2013-09-14T14:01:55.807Z","type":"quit"}
{"nick":"shama","date":"2013-09-14T14:21:32.920Z","type":"join"}
{"nick":"i_m_ca","reason":"Ping timeout: 264 seconds","date":"2013-09-14T14:30:30.836Z","type":"quit"}
{"nick":"Maciek416","date":"2013-09-14T14:39:34.213Z","type":"join"}
{"nick":"shama","reason":"Remote host closed the connection","date":"2013-09-14T15:03:48.439Z","type":"quit"}
{"nick":"ins0mnia","date":"2013-09-14T15:04:43.385Z","type":"join"}
{"nick":"rpflo","new_nick":"ryanflorence","date":"2013-09-14T15:16:58.667Z","type":"nick"}
{"nick":"kriskowal","date":"2013-09-14T15:28:17.206Z","type":"join"}
{"nick":"shama","date":"2013-09-14T15:34:48.900Z","type":"join"}
{"nick":"fallsemo","date":"2013-09-14T15:37:54.207Z","type":"join"}
{"nick":"shama","reason":"Ping timeout: 240 seconds","date":"2013-09-14T15:43:02.648Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-09-14T15:44:26.910Z","type":"quit"}
{"nick":"fallsemo","reason":"Ping timeout: 264 seconds","date":"2013-09-14T15:44:38.673Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-14T16:02:17.551Z","type":"quit"}
{"nick":"Maciek416","reason":"Remote host closed the connection","date":"2013-09-14T16:06:41.255Z","type":"quit"}
{"nick":"shama","date":"2013-09-14T16:08:17.373Z","type":"join"}
{"nick":"yorick","reason":"Remote host closed the connection","date":"2013-09-14T16:10:16.738Z","type":"quit"}
{"nick":"feross","date":"2013-09-14T16:12:10.638Z","type":"join"}
{"nick":"i_m_ca","date":"2013-09-14T16:12:28.610Z","type":"join"}
{"nick":"dguttman","date":"2013-09-14T16:15:07.699Z","type":"join"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2013-09-14T16:21:19.998Z","type":"quit"}
{"nick":"timoxley","date":"2013-09-14T16:21:41.834Z","type":"join"}
{"nick":"fallsemo","date":"2013-09-14T16:25:59.825Z","type":"join"}
{"nick":"fallsemo","reason":"Ping timeout: 246 seconds","date":"2013-09-14T16:30:19.850Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-09-14T16:51:38.673Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 264 seconds","date":"2013-09-14T16:56:38.703Z","type":"quit"}
{"nick":"fuz","date":"2013-09-14T16:58:58.600Z","type":"join"}
{"nick":"jcrugzz","date":"2013-09-14T16:59:15.030Z","type":"join"}
{"nick":"feross","reason":"Quit: feross","date":"2013-09-14T17:02:42.354Z","type":"quit"}
{"nick":"thlorenz","date":"2013-09-14T17:17:51.668Z","type":"join"}
{"nick":"dominictarr","date":"2013-09-14T17:24:57.767Z","type":"join"}
{"nick":"tmcw","date":"2013-09-14T17:26:07.221Z","type":"join"}
{"nick":"feross","date":"2013-09-14T17:27:29.927Z","type":"join"}
{"nick":"tmcw","reason":"Remote host closed the connection","date":"2013-09-14T17:36:36.642Z","type":"quit"}
{"nick":"tmcw","date":"2013-09-14T17:37:03.224Z","type":"join"}
{"nick":"tmcw","reason":"Ping timeout: 264 seconds","date":"2013-09-14T17:42:06.168Z","type":"quit"}
{"nick":"i_m_ca","reason":"Quit: Lost terminal","date":"2013-09-14T17:48:20.407Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-14T18:20:01.313Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-09-14T18:20:30.521Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-09-14T18:30:10.729Z","type":"quit"}
{"nick":"thlorenz","date":"2013-09-14T18:32:13.854Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-09-14T18:33:43.909Z","type":"quit"}
{"nick":"thlorenz","date":"2013-09-14T18:35:52.697Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-09-14T18:38:27.689Z","type":"quit"}
{"nick":"tmcw","date":"2013-09-14T18:47:38.872Z","type":"join"}
{"nick":"tmcw","reason":"Ping timeout: 260 seconds","date":"2013-09-14T18:52:27.905Z","type":"quit"}
{"nick":"kriskowal","reason":"Quit: kriskowal","date":"2013-09-14T18:54:51.908Z","type":"quit"}
{"nick":"missinglink","date":"2013-09-14T19:01:20.702Z","type":"join"}
{"nick":"fuz__","date":"2013-09-14T19:06:56.187Z","type":"join"}
{"nick":"fuz","reason":"Ping timeout: 260 seconds","date":"2013-09-14T19:07:15.464Z","type":"quit"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-14T19:14:12.934Z","type":"nick"}
{"nick":"dominictarr","message":"creationix: hey, what if simple-streams also had a isEnd()","date":"2013-09-14T19:22:34.216Z","type":"message"}
{"nick":"dominictarr","message":"then you could have undefined values","date":"2013-09-14T19:22:45.446Z","type":"message"}
{"nick":"dominictarr","message":"and undefined wouldn't be a sentinel","date":"2013-09-14T19:23:03.805Z","type":"message"}
{"nick":"dominictarr","message":"I could stop using cb(true) as end","date":"2013-09-14T19:23:16.680Z","type":"message"}
{"nick":"dominictarr","message":"and could make pull streams compatible","date":"2013-09-14T19:23:23.530Z","type":"message"}
{"nick":"creationix","message":"dominictarr, why do you need undefined as values?","date":"2013-09-14T19:25:34.297Z","type":"message"}
{"nick":"dominictarr","message":"because undefined happens","date":"2013-09-14T19:25:50.378Z","type":"message"}
{"nick":"dominictarr","message":"quite often","date":"2013-09-14T19:25:52.900Z","type":"message"}
{"nick":"dominictarr","message":"all the array ops etc","date":"2013-09-14T19:26:03.189Z","type":"message"}
{"nick":"dominictarr","message":"having it be end is surprising","date":"2013-09-14T19:26:10.601Z","type":"message"}
{"nick":"creationix","message":"hasn't bit me once yet","date":"2013-09-14T19:26:19.001Z","type":"message"}
{"nick":"creationix","message":"hmm","date":"2013-09-14T19:26:22.878Z","type":"message"}
{"nick":"dominictarr","message":"and your msgpack-js even encodes undefined","date":"2013-09-14T19:26:30.975Z","type":"message"}
{"nick":"dominictarr","message":"it's a value","date":"2013-09-14T19:26:57.338Z","type":"message"}
{"nick":"dominictarr","message":"but end is a state","date":"2013-09-14T19:27:10.203Z","type":"message"}
{"nick":"creationix","message":"if you need undefined as a value in simple-streams, simply wrap all values in an array or something","date":"2013-09-14T19:27:47.589Z","type":"message"}
{"nick":"dominictarr","message":"that is a work around","date":"2013-09-14T19:28:12.422Z","type":"message"}
{"nick":"creationix","message":"so it having to call isEnd with every value","date":"2013-09-14T19:28:27.749Z","type":"message"}
{"nick":"creationix","message":"or at least with every undefined value","date":"2013-09-14T19:28:35.013Z","type":"message"}
{"nick":"dominictarr","message":"what if, if there is no isEnd, then undefined isEnd","date":"2013-09-14T19:28:36.027Z","type":"message"}
{"nick":"creationix","message":"well you can do that today","date":"2013-09-14T19:29:03.440Z","type":"message"}
{"nick":"creationix","message":"it would be a superset of simple-streams","date":"2013-09-14T19:29:09.166Z","type":"message"}
{"nick":"creationix","message":"you would just need to update any generic stream consuming code","date":"2013-09-14T19:29:29.930Z","type":"message"}
{"nick":"dominictarr","message":"I want to make our stuff compatible","date":"2013-09-14T19:29:49.434Z","type":"message"}
{"nick":"creationix","message":"I've already got abort in the spec and I never use it in practice, I'm not sure I want to add more to the spec that I've never had a need for","date":"2013-09-14T19:30:07.841Z","type":"message"}
{"nick":"creationix","message":"so since your interface is more powerful, it can wrap mine","date":"2013-09-14T19:30:57.023Z","type":"message"}
{"nick":"creationix","message":"you just can't go the other way","date":"2013-09-14T19:31:01.660Z","type":"message"}
{"nick":"dominictarr","message":"I don't want two interfaces though","date":"2013-09-14T19:31:10.948Z","type":"message"}
{"nick":"creationix","message":"I see, and you care about those edge cases","date":"2013-09-14T19:31:31.521Z","type":"message"}
{"nick":"creationix","message":"hmm","date":"2013-09-14T19:31:32.554Z","type":"message"}
{"nick":"dominictarr","message":"with one interface no body has to choose which one to favor","date":"2013-09-14T19:31:33.165Z","type":"message"}
{"nick":"creationix","message":"so the only problem with push style was that back-pressure was tricky right?","date":"2013-09-14T19:32:53.490Z","type":"message"}
{"nick":"creationix","message":"otherwise it's a much better interface","date":"2013-09-14T19:32:58.977Z","type":"message"}
{"nick":"creationix","message":"having to know when to call pause and resume is a real pain","date":"2013-09-14T19:33:11.756Z","type":"message"}
{"nick":"creationix","message":"I guess you could put a callback on the onData event","date":"2013-09-14T19:33:51.865Z","type":"message"}
{"nick":"creationix","message":"(I'm exploring because I'm not happy with simple-stream or min-stream)","date":"2013-09-14T19:34:37.128Z","type":"message"}
{"nick":"creationix","message":"if I found an interface that I liked, I'd be willing to port js-git again.  But I'm about to publish public APIs, so I need to decide soon","date":"2013-09-14T19:35:17.524Z","type":"message"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2013-09-14T19:35:21.858Z","type":"quit"}
{"nick":"dominictarr","message":"yeah, pull makes back pressure implicit","date":"2013-09-14T19:35:37.638Z","type":"message"}
{"nick":"creationix","message":"but push makes all sorts of other stuff really nice","date":"2013-09-14T19:35:49.517Z","type":"message"}
{"nick":"dominictarr","message":"okay, well, for me, I want just one interface","date":"2013-09-14T19:36:14.933Z","type":"message"}
{"nick":"dominictarr","message":"that is reasonably good at everything","date":"2013-09-14T19:36:35.037Z","type":"message"}
{"nick":"dominictarr","message":"and backpressure is the hard part","date":"2013-09-14T19:36:42.811Z","type":"message"}
{"nick":"dominictarr","message":"so, optimise for that.","date":"2013-09-14T19:36:47.919Z","type":"message"}
{"nick":"creationix","message":"did you ever take the time to understand https://github.com/Gozala/reducers","date":"2013-09-14T19:36:53.564Z","type":"message"}
{"nick":"creationix","message":"he tried to explain it to me, but I didn't get it","date":"2013-09-14T19:36:53.765Z","type":"message"}
{"nick":"dominictarr","message":"so, I think I understand it","date":"2013-09-14T19:37:15.703Z","type":"message"}
{"nick":"dominictarr","message":"actually, I was an influence","date":"2013-09-14T19:37:25.037Z","type":"message"}
{"nick":"creationix","message":"the other problem I have with callback-based pull streams is the lack of tail recursion blows the stack if you're not careful","date":"2013-09-14T19:37:27.554Z","type":"message"}
{"nick":"dominictarr","message":"Oh, I have a thing for that","date":"2013-09-14T19:37:37.631Z","type":"message"}
{"nick":"dominictarr","message":"that checks if the cb is sync","date":"2013-09-14T19:37:42.700Z","type":"message"}
{"nick":"creationix","message":"and it really destroys call stacks","date":"2013-09-14T19:37:43.093Z","type":"message"}
{"nick":"dominictarr","message":"and iterates instead","date":"2013-09-14T19:37:47.360Z","type":"message"}
{"nick":"creationix","message":"everything is inverted","date":"2013-09-14T19:37:47.966Z","type":"message"}
{"nick":"creationix","message":"yeah, I've done trampolines before","date":"2013-09-14T19:37:56.141Z","type":"message"}
{"nick":"dominictarr","message":"https://npmjs.org/package/looper","date":"2013-09-14T19:38:05.549Z","type":"message"}
{"nick":"creationix","message":"my generic simple-stream tools have them","date":"2013-09-14T19:38:06.441Z","type":"message"}
{"nick":"dominictarr","message":"reducers is a nice idea, but It tried to be too clojure","date":"2013-09-14T19:38:55.593Z","type":"message"}
{"nick":"dominictarr","message":"It relied on types (as end, error sentinels)","date":"2013-09-14T19:39:12.253Z","type":"message"}
{"nick":"dominictarr","message":"which had problems with modules","date":"2013-09-14T19:39:29.544Z","type":"message"}
{"nick":"creationix","message":"could we take the general idea and simplify it though","date":"2013-09-14T19:39:29.781Z","type":"message"}
{"nick":"creationix","message":"instanceof is terrible in node","date":"2013-09-14T19:39:38.010Z","type":"message"}
{"nick":"creationix","message":"npm duplicates too much","date":"2013-09-14T19:39:41.954Z","type":"message"}
{"nick":"dominictarr","message":"exactly","date":"2013-09-14T19:39:42.930Z","type":"message"}
{"nick":"dominictarr","message":"don't use singletons in node unless you are prepared to make them global","date":"2013-09-14T19:40:08.171Z","type":"message"}
{"nick":"dominictarr","message":"or pass them around explicitly","date":"2013-09-14T19:40:22.591Z","type":"message"}
{"nick":"creationix","message":"yeah, in js-git I pass them around","date":"2013-09-14T19:40:32.170Z","type":"message"}
{"nick":"dominictarr","message":"creationix: I experimented with this https://npmjs.org/package/strm","date":"2013-09-14T19:41:50.406Z","type":"message"}
{"nick":"dominictarr","message":"before pull-streams","date":"2013-09-14T19:41:55.970Z","type":"message"}
{"nick":"dominictarr","message":"but pull is way better","date":"2013-09-14T19:42:41.314Z","type":"message"}
{"nick":"creationix","message":"so I think the idea gozala told me was to use push streams, but only pause-resume the source directly","date":"2013-09-14T19:44:28.337Z","type":"message"}
{"nick":"creationix","message":"instead of pausing your immediate parent and hoping it propagates properly","date":"2013-09-14T19:44:45.825Z","type":"message"}
{"nick":"dominictarr","message":"I have a slightly different interpretation of how reducers do that","date":"2013-09-14T19:46:59.126Z","type":"message"}
{"nick":"dominictarr","message":"but I agree that node streams do that badly","date":"2013-09-14T19:47:08.967Z","type":"message"}
{"nick":"dominictarr","message":"and both pull and reducers do it better","date":"2013-09-14T19:47:21.790Z","type":"message"}
{"nick":"creationix","message":"push style is definitely better for writing parsers","date":"2013-09-14T19:47:42.615Z","type":"message"}
{"nick":"dominictarr","message":"in both, you can have a simple transform that propagates pause state instantly","date":"2013-09-14T19:47:48.350Z","type":"message"}
{"nick":"creationix","message":"function parser(emit) { return function (item) { ... }}","date":"2013-09-14T19:48:09.814Z","type":"message"}
{"nick":"creationix","message":"I love that interface","date":"2013-09-14T19:48:10.029Z","type":"message"}
{"nick":"creationix","message":"but no back-pressure at all","date":"2013-09-14T19:48:11.976Z","type":"message"}
{"nick":"dominictarr","message":"it's easy to wrap a pusher into a puller","date":"2013-09-14T19:48:15.250Z","type":"message"}
{"nick":"creationix","message":"yep https://github.com/creationix/push-to-pull","date":"2013-09-14T19:48:28.773Z","type":"message"}
{"nick":"dominictarr","message":"push is also good for UI stuff","date":"2013-09-14T19:48:46.246Z","type":"message"}
{"nick":"dominictarr","message":"where there is no concept of back pressure anyway","date":"2013-09-14T19:48:56.110Z","type":"message"}
{"nick":"dominictarr","message":"user input is not very fast...","date":"2013-09-14T19:49:07.789Z","type":"message"}
{"nick":"dominictarr","message":"…and can't be slowed down","date":"2013-09-14T19:49:15.094Z","type":"message"}
{"nick":"creationix","message":"right","date":"2013-09-14T19:49:30.390Z","type":"message"}
{"nick":"dominictarr","message":"but, that is the easy case","date":"2013-09-14T19:49:46.063Z","type":"message"}
{"nick":"creationix","message":"and I love the interface for protocol parsers because they can ignore error handling","date":"2013-09-14T19:49:48.069Z","type":"message"}
{"nick":"creationix","message":"just throw","date":"2013-09-14T19:49:53.217Z","type":"message"}
{"nick":"thlorenz","date":"2013-09-14T19:50:09.646Z","type":"join"}
{"nick":"dominictarr","message":"better to optimize for the difficult case, because you'll spend more time there, in the end.","date":"2013-09-14T19:50:18.093Z","type":"message"}
{"nick":"creationix","message":"(unless your parser does I/O and throws in a callback)","date":"2013-09-14T19:50:21.289Z","type":"message"}
{"nick":"creationix","message":"is pause/resume really that hard though?","date":"2013-09-14T19:50:39.392Z","type":"message"}
{"nick":"creationix","message":"I've spent a ton of time in js-git implementing simple streams","date":"2013-09-14T19:50:54.083Z","type":"message"}
{"nick":"creationix","message":"and abort is almost never actually tested and pull streams have a nasty edge case of their own","date":"2013-09-14T19:51:15.180Z","type":"message"}
{"nick":"creationix","message":"what if the user calls read a second time before you call the callback","date":"2013-09-14T19:51:25.899Z","type":"message"}
{"nick":"dominictarr","message":"that isn't allowed","date":"2013-09-14T19:51:41.473Z","type":"message"}
{"nick":"creationix","message":"you can either check for that and emit an error or queue up the read callbacks","date":"2013-09-14T19:51:45.211Z","type":"message"}
{"nick":"creationix","message":"so you just assume they will never do that","date":"2013-09-14T19:51:59.653Z","type":"message"}
{"nick":"creationix","message":"and if they do strange things happen?","date":"2013-09-14T19:52:06.149Z","type":"message"}
{"nick":"creationix","message":"because I have been bitten by that one","date":"2013-09-14T19:52:20.478Z","type":"message"}
{"nick":"dominictarr","message":"well, you could easily wrap a stream in something to enforce that contract.","date":"2013-09-14T19:52:20.685Z","type":"message"}
{"nick":"creationix","message":"yeah, but that's more layers and uglier stack traces","date":"2013-09-14T19:52:41.562Z","type":"message"}
{"nick":"dominictarr","message":"1 more layer, that you can chuck in when things get hairy","date":"2013-09-14T19:53:03.266Z","type":"message"}
{"nick":"creationix","message":"my biggest issue with cps style is the worthless stack traces","date":"2013-09-14T19:53:04.204Z","type":"message"}
{"nick":"yorick","date":"2013-09-14T19:53:08.451Z","type":"join"}
{"nick":"dominictarr","message":"I just don't think you'll be able to make something much easier than pull streams that can still do everything","date":"2013-09-14T19:53:31.609Z","type":"message"}
{"nick":"kriskowal","date":"2013-09-14T19:54:40.458Z","type":"join"}
{"nick":"timoxley","date":"2013-09-14T19:55:01.756Z","type":"join"}
{"nick":"creationix","message":"what if data was pull, but error and end were push?","date":"2013-09-14T19:55:44.111Z","type":"message"}
{"nick":"creationix","message":"you don't need back-pressure for error and end events","date":"2013-09-14T19:56:00.502Z","type":"message"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2013-09-14T19:58:16.215Z","type":"quit"}
{"nick":"creationix","message":"dominictarr, https://gist.github.com/creationix/d05f75643bb0abdf2f90","date":"2013-09-14T19:58:45.168Z","type":"message"}
{"nick":"creationix","message":"that would actually be a lot easier to consume and to produce","date":"2013-09-14T19:58:56.987Z","type":"message"}
{"nick":"creationix","message":"just not sure where the idea of abort fits in","date":"2013-09-14T19:59:06.257Z","type":"message"}
{"nick":"dominictarr","message":"read takes a callback?","date":"2013-09-14T19:59:50.790Z","type":"message"}
{"nick":"creationix","message":"right, but a data-only callback","date":"2013-09-14T20:00:02.573Z","type":"message"}
{"nick":"dominictarr","message":"with no err arg?","date":"2013-09-14T20:00:03.272Z","type":"message"}
{"nick":"creationix","message":"no err param","date":"2013-09-14T20:00:04.219Z","type":"message"}
{"nick":"dominictarr","message":"ight","date":"2013-09-14T20:00:06.877Z","type":"message"}
{"nick":"dominictarr","message":"how would I pipe it?","date":"2013-09-14T20:01:02.909Z","type":"message"}
{"nick":"creationix","message":"you mean a stream transform?","date":"2013-09-14T20:01:39.700Z","type":"message"}
{"nick":"creationix","message":"just a sec...","date":"2013-09-14T20:01:41.595Z","type":"message"}
{"nick":"creationix","message":"dominictarr, https://gist.github.com/creationix/d05f75643bb0abdf2f90#file-filter-js","date":"2013-09-14T20:04:47.115Z","type":"message"}
{"nick":"creationix","message":"or if they pass in the listeners https://gist.github.com/creationix/d05f75643bb0abdf2f90#file-filter-2-js","date":"2013-09-14T20:06:55.300Z","type":"message"}
{"nick":"dominictarr","message":"okay, sure. looks reasonable","date":"2013-09-14T20:07:19.995Z","type":"message"}
{"nick":"dominictarr","message":"I just don't think there is a magic configuration that is easier","date":"2013-09-14T20:07:30.805Z","type":"message"}
{"nick":"dominictarr","message":"streams are just this hard","date":"2013-09-14T20:07:36.249Z","type":"message"}
{"nick":"dominictarr","message":"this will be hard too","date":"2013-09-14T20:07:48.063Z","type":"message"}
{"nick":"dominictarr","message":"all you can do is pick one and get on with it.","date":"2013-09-14T20:08:01.466Z","type":"message"}
{"nick":"creationix","message":"I agree that pull-streams are probably better for the data channel","date":"2013-09-14T20:08:26.816Z","type":"message"}
{"nick":"creationix","message":"people just don't get pause/resume right","date":"2013-09-14T20:08:33.025Z","type":"message"}
{"nick":"dominictarr","message":"the only way to make it easier is to do something that can't do everything","date":"2013-09-14T20:08:43.656Z","type":"message"}
{"nick":"creationix","message":"which is sad, that performs better and is nicer on stack traces","date":"2013-09-14T20:08:44.473Z","type":"message"}
{"nick":"creationix","message":"push without backpressure is easy!","date":"2013-09-14T20:08:55.408Z","type":"message"}
{"nick":"dominictarr","message":"yeah, but it's only easier until you need backpressure","date":"2013-09-14T20:09:20.359Z","type":"message"}
{"nick":"creationix","message":"right, at which point you're screwed or tack on pause/resume to the entire chain","date":"2013-09-14T20:09:37.667Z","type":"message"}
{"nick":"creationix","message":"and end up with node","date":"2013-09-14T20:09:45.395Z","type":"message"}
{"nick":"dominictarr","message":"exactly","date":"2013-09-14T20:09:51.322Z","type":"message"}
{"nick":"creationix","message":"I was there :)","date":"2013-09-14T20:09:55.623Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-14T20:10:00.543Z","type":"nick"}
{"nick":"dominictarr","message":"and then in a yeah, you'll realize that pull is simpler for back pressure and get streams 2","date":"2013-09-14T20:10:27.371Z","type":"message"}
{"nick":"creationix","message":"and then you'll realize that push is much easier in a lot of use cases and combine both into streams 3","date":"2013-09-14T20:10:58.493Z","type":"message"}
{"nick":"dominictarr","message":"and then realize that push was often good and so create streams3","date":"2013-09-14T20:10:58.982Z","type":"message"}
{"nick":"dominictarr","message":"yeah","date":"2013-09-14T20:11:04.641Z","type":"message"}
{"nick":"creationix","message":"and wish event emitters should have never been in there","date":"2013-09-14T20:11:05.078Z","type":"message"}
{"nick":"creationix","message":"so you really want undefined as a value, I can do that, but not by tacking stuff onto the simple-stream inteface","date":"2013-09-14T20:11:42.709Z","type":"message"}
{"nick":"dominictarr","message":"the only solution is a new language that completely abstracts it all, and uses static analysis to decide how to connect streams","date":"2013-09-14T20:11:43.212Z","type":"message"}
{"nick":"creationix","message":"this new hybrid interface seems to work","date":"2013-09-14T20:11:51.662Z","type":"message"}
{"nick":"creationix","message":"also I have yet to find a single useful place for \"abort\" in js-git","date":"2013-09-14T20:12:26.679Z","type":"message"}
{"nick":"dominictarr","message":"I can show you some examples","date":"2013-09-14T20:12:36.773Z","type":"message"}
{"nick":"dominictarr","message":"where I use it","date":"2013-09-14T20:12:39.490Z","type":"message"}
{"nick":"creationix","message":"does it really need to be part of the spec or can people create side-channels manually when they need it","date":"2013-09-14T20:12:40.181Z","type":"message"}
{"nick":"creationix","message":"the spec is the core, the part that all tools gurantee to implement properly","date":"2013-09-14T20:12:55.693Z","type":"message"}
{"nick":"dominictarr","message":"here is one place I use it","date":"2013-09-14T20:14:15.552Z","type":"message"}
{"nick":"dominictarr","message":"https://github.com/dominictarr/pull-level/blob/master/index.js#L21-L25","date":"2013-09-14T20:14:16.333Z","type":"message"}
{"nick":"dominictarr","message":"to clean up listeners when the stream ends","date":"2013-09-14T20:14:22.991Z","type":"message"}
{"nick":"creationix","message":"heh, I don't use event emitters anywhere","date":"2013-09-14T20:14:44.002Z","type":"message"}
{"nick":"creationix","message":"because I don't like cleanup","date":"2013-09-14T20:14:54.075Z","type":"message"}
{"nick":"dominictarr","message":"an event listener like thing is unavoidable in this case","date":"2013-09-14T20:16:12.889Z","type":"message"}
{"nick":"creationix","message":"that's fine","date":"2013-09-14T20:16:21.947Z","type":"message"}
{"nick":"creationix","message":"do you need the callback in abort?","date":"2013-09-14T20:16:27.870Z","type":"message"}
{"nick":"creationix","message":"I find I never care about when cleanup is done, just that it's done","date":"2013-09-14T20:16:45.611Z","type":"message"}
{"nick":"creationix","message":"and if there was an async error doing cleanup, I don't care usually","date":"2013-09-14T20:17:01.977Z","type":"message"}
{"nick":"creationix","message":"it's kind of a best-effort hint thing","date":"2013-09-14T20:17:27.029Z","type":"message"}
{"nick":"creationix","message":"the consumer is telling the source it won't be consuming anymore","date":"2013-09-14T20:17:37.016Z","type":"message"}
{"nick":"creationix","message":"it's not asking for any guarantees in return though","date":"2013-09-14T20:17:54.319Z","type":"message"}
{"nick":"creationix","message":"dominictarr, do you see \"abort\" the same?","date":"2013-09-14T20:18:16.789Z","type":"message"}
{"nick":"dominictarr","message":"hmm, let me think","date":"2013-09-14T20:18:42.022Z","type":"message"}
{"nick":"dominictarr","message":"I think I just gave it a cb because then a through could be really simple","date":"2013-09-14T20:22:02.804Z","type":"message"}
{"nick":"creationix","message":"ok","date":"2013-09-14T20:22:16.821Z","type":"message"}
{"nick":"dominictarr","message":"read(null, function (end, data) { cb(end, data) }","date":"2013-09-14T20:22:18.070Z","type":"message"}
{"nick":"dominictarr","message":")","date":"2013-09-14T20:22:19.542Z","type":"message"}
{"nick":"creationix","message":"are you ok with ES5 syntax?","date":"2013-09-14T20:22:44.650Z","type":"message"}
{"nick":"dominictarr","message":"it would still probably work if it ignored the cb","date":"2013-09-14T20:22:49.307Z","type":"message"}
{"nick":"creationix","message":"or do you need to support ES3","date":"2013-09-14T20:22:50.459Z","type":"message"}
{"nick":"dominictarr","message":"well, I'd want it to work in current browsers","date":"2013-09-14T20:23:04.987Z","type":"message"}
{"nick":"creationix","message":"but how much browser coverage?","date":"2013-09-14T20:23:20.816Z","type":"message"}
{"nick":"dominictarr","message":"which ES5 syntax?","date":"2013-09-14T20:23:31.442Z","type":"message"}
{"nick":"creationix","message":"most have getters/setters for example","date":"2013-09-14T20:23:31.653Z","type":"message"}
{"nick":"creationix","message":"not that they would be part of the spec, but they make some idioms really nice","date":"2013-09-14T20:23:49.932Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-14T20:24:01.236Z","type":"nick"}
{"nick":"dominictarr","message":"I think avoiding setters is better","date":"2013-09-14T20:24:18.074Z","type":"message"}
{"nick":"creationix","message":"dominictarr, https://gist.github.com/creationix/d05f75643bb0abdf2f90#file-filter-js","date":"2013-09-14T20:25:32.922Z","type":"message"}
{"nick":"creationix","message":"the transform could be implemented without setters, it's just more runtime cost","date":"2013-09-14T20:26:01.409Z","type":"message"}
{"nick":"creationix","message":"like was done at https://gist.github.com/creationix/d05f75643bb0abdf2f90/dce583f548b14581a5f2ace84b8b6623717caf08#file-filter-js","date":"2013-09-14T20:26:52.677Z","type":"message"}
{"nick":"dominictarr","message":"I'm skeptical","date":"2013-09-14T20:27:25.836Z","type":"message"}
{"nick":"dominictarr","message":"why is this better than read(err, data) ?","date":"2013-09-14T20:28:17.290Z","type":"message"}
{"nick":"creationix","message":"because it seperates concernt","date":"2013-09-14T20:28:34.380Z","type":"message"}
{"nick":"creationix","message":"*concerns","date":"2013-09-14T20:28:36.167Z","type":"message"}
{"nick":"creationix","message":"different code always handles errors, data events and end events","date":"2013-09-14T20:28:46.660Z","type":"message"}
{"nick":"creationix","message":"instead of if statements all over, there are three different streams","date":"2013-09-14T20:28:59.979Z","type":"message"}
{"nick":"timoxley","date":"2013-09-14T20:29:06.423Z","type":"join"}
{"nick":"dominictarr","message":"that is just classic streams","date":"2013-09-14T20:29:31.601Z","type":"message"}
{"nick":"dominictarr","message":"but with read(cb)","date":"2013-09-14T20:29:44.313Z","type":"message"}
{"nick":"creationix","message":"right, it's a hybrid","date":"2013-09-14T20:29:51.398Z","type":"message"}
{"nick":"creationix","message":"classic without pause/resume","date":"2013-09-14T20:29:59.032Z","type":"message"}
{"nick":"dominictarr","message":"I think the good thing about everything being past into the same cb is that you have a definite point where the state changes","date":"2013-09-14T20:30:35.533Z","type":"message"}
{"nick":"dominictarr","message":"I'll be interested to see what you come up with","date":"2013-09-14T20:30:46.775Z","type":"message"}
{"nick":"creationix","message":"also the problem with (err, data) is you can't report errors that happen between reads","date":"2013-09-14T20:30:50.454Z","type":"message"}
{"nick":"creationix","message":"suppose a socket gets disconnected, but the user isn't reading","date":"2013-09-14T20:30:58.544Z","type":"message"}
{"nick":"creationix","message":"you can't tell them till the next read","date":"2013-09-14T20:31:03.286Z","type":"message"}
{"nick":"dominictarr","message":"yes","date":"2013-09-14T20:31:07.206Z","type":"message"}
{"nick":"creationix","message":"so you have to buffer that error somewhere in a queue","date":"2013-09-14T20:31:08.768Z","type":"message"}
{"nick":"creationix","message":"it's super annoying","date":"2013-09-14T20:31:11.387Z","type":"message"}
{"nick":"creationix","message":"not that it ever happens, but it could","date":"2013-09-14T20:31:18.914Z","type":"message"}
{"nick":"dominictarr","message":"of course","date":"2013-09-14T20:31:26.802Z","type":"message"}
{"nick":"creationix","message":"and so you have to code for it, but never get to actually test that code","date":"2013-09-14T20:31:29.955Z","type":"message"}
{"nick":"creationix","message":"I hate writing code that never gets used","date":"2013-09-14T20:31:38.238Z","type":"message"}
{"nick":"dominictarr","message":"I've found it's much easier to make pull streams robust than streams1","date":"2013-09-14T20:32:12.373Z","type":"message"}
{"nick":"dominictarr","message":"I have written much more sophisticated pull-streams than I ever did streams1","date":"2013-09-14T20:32:31.962Z","type":"message"}
{"nick":"creationix","message":"and in nearly 100% of my onRead callbacks, the first thing I do is two if statements breaking out error and end events to their own handlers","date":"2013-09-14T20:32:38.385Z","type":"message"}
{"nick":"dominictarr","message":"ah, in pull-streams you can handle err and end exactly the same in most cases!","date":"2013-09-14T20:33:29.013Z","type":"message"}
{"nick":"dominictarr","message":"it just breaks fibers","date":"2013-09-14T20:33:39.188Z","type":"message"}
{"nick":"timoxley","reason":"Ping timeout: 256 seconds","date":"2013-09-14T20:34:01.133Z","type":"quit"}
{"nick":"creationix","message":"I think you're writing more middleware and I'm writing more sources and consumers","date":"2013-09-14T20:34:05.907Z","type":"message"}
{"nick":"dominictarr","message":"that is quite possible","date":"2013-09-14T20:34:23.755Z","type":"message"}
{"nick":"creationix","message":"in consumers an end event is very different than an error","date":"2013-09-14T20:34:24.685Z","type":"message"}
{"nick":"creationix","message":"but to something in the middle, they are both just a value to propigate","date":"2013-09-14T20:34:35.906Z","type":"message"}
{"nick":"creationix","message":"most middle pieces don't care","date":"2013-09-14T20:34:45.728Z","type":"message"}
{"nick":"dominictarr","message":"yes, the last value","date":"2013-09-14T20:34:52.425Z","type":"message"}
{"nick":"creationix","message":"that was why in simple-streams, both end and error are encoded with value being undefined","date":"2013-09-14T20:35:18.372Z","type":"message"}
{"nick":"creationix","message":"if (value === undefined) return callback(err);","date":"2013-09-14T20:35:35.251Z","type":"message"}
{"nick":"dominictarr","message":"so, I think the real test is how easy it is to implement things like cat - which combines N streams","date":"2013-09-14T20:35:42.708Z","type":"message"}
{"nick":"creationix","message":"or how hard it is to implement git ;)","date":"2013-09-14T20:35:56.901Z","type":"message"}
{"nick":"dominictarr","message":"well, that is a more difficult comparison","date":"2013-09-14T20:36:21.266Z","type":"message"}
{"nick":"creationix","message":"or more specifically git fetch","date":"2013-09-14T20:36:21.565Z","type":"message"}
{"nick":"creationix","message":"network protocols, multiplexing and embedded substreams","date":"2013-09-14T20:36:31.440Z","type":"message"}
{"nick":"dominictarr","message":"you can compare that stuff if it's separate modules","date":"2013-09-14T20:36:48.172Z","type":"message"}
{"nick":"creationix","message":"so cat should be easy with this spec","date":"2013-09-14T20:37:09.540Z","type":"message"}
{"nick":"creationix","action":"gists","date":"2013-09-14T20:37:12.804Z","type":"action"}
{"nick":"creationix","message":"dominictarr, how should cat behave when there is an error in a source?","date":"2013-09-14T20:39:15.316Z","type":"message"}
{"nick":"creationix","message":"should it kill everything?","date":"2013-09-14T20:39:19.249Z","type":"message"}
{"nick":"dominictarr","message":"yes","date":"2013-09-14T20:39:57.699Z","type":"message"}
{"nick":"dominictarr","message":"it should abort all the streams","date":"2013-09-14T20:40:33.150Z","type":"message"}
{"nick":"dominictarr","message":"and end the consumer","date":"2013-09-14T20:40:43.617Z","type":"message"}
{"nick":"dominictarr","message":"but when a stream ends, it should start reading from the next stream","date":"2013-09-14T20:41:13.448Z","type":"message"}
{"nick":"creationix","message":"hmm, cat is a fun case","date":"2013-09-14T20:41:50.472Z","type":"message"}
{"nick":"creationix","message":"good idea","date":"2013-09-14T20:41:53.112Z","type":"message"}
{"nick":"dominictarr","message":"another one is merging n streams, so that you always read the lowest value","date":"2013-09-14T20:42:48.191Z","type":"message"}
{"nick":"dominictarr","message":"like, in a merge sort","date":"2013-09-14T20:42:52.697Z","type":"message"}
{"nick":"creationix","message":"so a cat that also merges?","date":"2013-09-14T20:43:13.560Z","type":"message"}
{"nick":"creationix","message":"I basically just did that for git history","date":"2013-09-14T20:43:27.862Z","type":"message"}
{"nick":"creationix","message":"since history isn't linear","date":"2013-09-14T20:43:35.345Z","type":"message"}
{"nick":"dominictarr","message":"so, cat reads the entire first stream, then the entire second, and so on","date":"2013-09-14T20:43:45.091Z","type":"message"}
{"nick":"chilts","reason":"Ping timeout: 245 seconds","date":"2013-09-14T20:43:45.268Z","type":"quit"}
{"nick":"creationix","message":"oh, I was doing cat wrong","date":"2013-09-14T20:43:56.711Z","type":"message"}
{"nick":"dominictarr","message":"but merge reads from every stream, and emits the lowest value","date":"2013-09-14T20:43:58.074Z","type":"message"}
{"nick":"creationix","message":"good point","date":"2013-09-14T20:44:00.195Z","type":"message"}
{"nick":"dominictarr","message":"but keeps even pressure on every stream","date":"2013-09-14T20:44:22.235Z","type":"message"}
{"nick":"dominictarr","message":"i.e. minimum in the buffers","date":"2013-09-14T20:44:40.849Z","type":"message"}
{"nick":"creationix","message":"well cat just reads the streams one at a time right?","date":"2013-09-14T20:44:45.043Z","type":"message"}
{"nick":"dominictarr","message":"yes,","date":"2013-09-14T20:44:51.263Z","type":"message"}
{"nick":"chilts","date":"2013-09-14T20:45:00.214Z","type":"join"}
{"nick":"dominictarr","message":".","date":"2013-09-14T20:45:09.711Z","type":"message"}
{"nick":"creationix","message":"yeah, cat is much easier than merge","date":"2013-09-14T20:45:11.988Z","type":"message"}
{"nick":"dominictarr","message":"yeah, my cat is 40 lines, but my merge is 80","date":"2013-09-14T20:46:23.499Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-09-14T20:48:02.035Z","type":"nick"}
{"nick":"dominictarr","message":"another hard one is to do a binary search on a sorted table, for a range query","date":"2013-09-14T20:49:15.773Z","type":"message"}
{"nick":"dominictarr","message":"that took me 100 lines","date":"2013-09-14T20:49:26.968Z","type":"message"}
{"nick":"creationix","message":"I need to go somewhere in 10 minutes, but hopefully I'll have cat done first","date":"2013-09-14T20:49:48.804Z","type":"message"}
{"nick":"creationix","message":"these are good tests","date":"2013-09-14T20:49:51.096Z","type":"message"}
{"nick":"creationix","message":"much quicker than wasting weeks rewriting jsgit","date":"2013-09-14T20:49:59.866Z","type":"message"}
{"nick":"dominictarr","message":"indeed!","date":"2013-09-14T20:51:02.836Z","type":"message"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-09-14T20:51:20.805Z","type":"nick"}
{"nick":"creationix","message":"dominictarr, what if they call read again after I emit End","date":"2013-09-14T20:53:51.096Z","type":"message"}
{"nick":"creationix","message":"just ignore them?","date":"2013-09-14T20:53:53.472Z","type":"message"}
{"nick":"creationix","message":"unefined behavior","date":"2013-09-14T20:54:00.118Z","type":"message"}
{"nick":"dominictarr","message":"yeah, ignore","date":"2013-09-14T20:54:29.365Z","type":"message"}
{"nick":"dominictarr","message":"maybe, log an error","date":"2013-09-14T20:54:48.612Z","type":"message"}
{"nick":"creationix","message":"ok, I think this is cat","date":"2013-09-14T20:54:49.428Z","type":"message"}
{"nick":"creationix","message":"https://gist.github.com/creationix/d05f75643bb0abdf2f90#file-cat-js","date":"2013-09-14T20:54:50.128Z","type":"message"}
{"nick":"creationix","message":"hmm, missing a line","date":"2013-09-14T20:56:20.576Z","type":"message"}
{"nick":"creationix","message":"there, that's better","date":"2013-09-14T20:56:47.503Z","type":"message"}
{"nick":"creationix","message":"it's weird and different, but otherwise very elegant I thing","date":"2013-09-14T20:58:34.698Z","type":"message"}
{"nick":"creationix","message":"*think","date":"2013-09-14T20:58:37.028Z","type":"message"}
{"nick":"creationix","message":"anyway, time to go","date":"2013-09-14T20:58:42.167Z","type":"message"}
{"nick":"fuz__","new_nick":"fuz","date":"2013-09-14T21:08:31.272Z","type":"nick"}
{"nick":"timoxley","date":"2013-09-14T21:29:52.318Z","type":"join"}
{"nick":"timoxley","reason":"Ping timeout: 256 seconds","date":"2013-09-14T21:34:39.130Z","type":"quit"}
{"nick":"dominictarr","message":"creationix: looks quite good!","date":"2013-09-14T21:51:24.395Z","type":"message"}
{"nick":"dominictarr","message":"a little confused by all declerations","date":"2013-09-14T21:51:42.176Z","type":"message"}
{"nick":"dominictarr","message":"and no closures","date":"2013-09-14T21:51:47.549Z","type":"message"}
{"nick":"dominictarr","message":"if you call read but it's ended it calls onEnd?","date":"2013-09-14T21:53:11.903Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-09-14T21:55:43.156Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-09-14T21:56:15.341Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 256 seconds","date":"2013-09-14T22:00:38.163Z","type":"quit"}
{"nick":"thlorenz","message":"dominictarr: you pointed me to hipster to make my cursor reappear (remember at nodeconf)?","date":"2013-09-14T22:08:48.610Z","type":"message"}
{"nick":"dominictarr","message":"oh, yeah","date":"2013-09-14T22:08:57.067Z","type":"message"}
{"nick":"thlorenz","message":"looked through the code, but can't find where that is","date":"2013-09-14T22:09:00.683Z","type":"message"}
{"nick":"dominictarr","message":"hmm, it might just be a char code that I wrote out...","date":"2013-09-14T22:11:45.600Z","type":"message"}
{"nick":"thlorenz","message":"dominictarr: no worries, if you happen to run into it just let me know - I'll search the interwebs too :)","date":"2013-09-14T22:13:02.950Z","type":"message"}
{"nick":"dominictarr","message":"generally, I just searched and randomly tried stuff","date":"2013-09-14T22:13:24.316Z","type":"message"}
{"nick":"thlorenz","message":"dominictarr: this looks useful: https://github.com/TooTallNate/ansi.js/blob/master/lib/ansi.js#L37-L38","date":"2013-09-14T22:13:55.282Z","type":"message"}
{"nick":"dominictarr","message":"aha, I think I got it from charm:","date":"2013-09-14T22:16:03.826Z","type":"message"}
{"nick":"dominictarr","message":"    this.write(encode(visible ? '[?25h' : '[?25l'));","date":"2013-09-14T22:16:05.392Z","type":"message"}
{"nick":"dominictarr","message":"I just have https://github.com/dominictarr/hipster/blob/master/lib/render.js#L199","date":"2013-09-14T22:16:28.724Z","type":"message"}
{"nick":"dominictarr","message":"creationix: okay, so cat is a case where you require abort","date":"2013-09-14T22:21:51.264Z","type":"message"}
{"nick":"dominictarr","message":"the streams could be open files, or open network sockets","date":"2013-09-14T22:22:13.462Z","type":"message"}
{"nick":"dominictarr","message":"for a short lived program it might not matter, but for a server it does.","date":"2013-09-14T22:23:19.639Z","type":"message"}
{"nick":"timoxley","date":"2013-09-14T22:30:36.242Z","type":"join"}
{"nick":"yorick","reason":"Remote host closed the connection","date":"2013-09-14T22:31:41.156Z","type":"quit"}
{"nick":"timoxley","reason":"Ping timeout: 256 seconds","date":"2013-09-14T22:35:17.182Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-09-14T22:51:15.544Z","type":"quit"}
{"nick":"Maciek416","date":"2013-09-14T22:52:01.149Z","type":"join"}
{"nick":"substack","message":"https://github.com/substack/hacker-deps","date":"2013-09-14T23:09:00.577Z","type":"message"}
{"nick":"dominictarr","date":"2013-09-14T23:12:12.435Z","type":"join"}
{"nick":"kriskowal","reason":"Quit: kriskowal","date":"2013-09-14T23:21:35.212Z","type":"quit"}
{"nick":"rxgx","date":"2013-09-14T23:24:07.968Z","type":"join"}
{"nick":"tilgovi","date":"2013-09-14T23:25:02.145Z","type":"join"}
{"nick":"jesusabdullah","message":"yeah I ran that","date":"2013-09-14T23:29:26.633Z","type":"message"}
{"nick":"substack","message":"\\o/","date":"2013-09-14T23:30:13.845Z","type":"message"}
{"nick":"chrisdickinson","message":"mine doesn't output anything )`:","date":"2013-09-14T23:30:27.183Z","type":"message"}
{"nick":"substack","message":"chrisdickinson: I think there might be a race condition in it","date":"2013-09-14T23:30:52.370Z","type":"message"}
{"nick":"substack","message":"try running it again","date":"2013-09-14T23:30:56.162Z","type":"message"}
{"nick":"jesusabdullah","message":"yeah mine output for browserify-cdn but not a whole lotta other stuff","date":"2013-09-14T23:30:57.447Z","type":"message"}
{"nick":"timoxley","date":"2013-09-14T23:31:23.676Z","type":"join"}
{"nick":"timoxley","reason":"Ping timeout: 240 seconds","date":"2013-09-14T23:35:26.604Z","type":"quit"}
{"nick":"substack","message":"ok found and fixed the issue with empty results","date":"2013-09-14T23:41:24.916Z","type":"message"}
{"nick":"substack","message":"chrisdickinson, jesusabdullah: ^^^","date":"2013-09-14T23:41:31.205Z","type":"message"}
{"nick":"chrisdickinson","message":"substack: haha, you're usually a bigger contributor to my projects than I am","date":"2013-09-14T23:43:52.583Z","type":"message"}
{"nick":"substack","message":"yay sharing!","date":"2013-09-14T23:44:26.550Z","type":"message"}
{"nick":"chrisdickinson","message":":D","date":"2013-09-14T23:44:48.854Z","type":"message"}
{"nick":"nexxy","message":"\\o/","date":"2013-09-14T23:44:50.008Z","type":"message"}
{"nick":"fuz","reason":"Ping timeout: 256 seconds","date":"2013-09-14T23:55:40.180Z","type":"quit"}
