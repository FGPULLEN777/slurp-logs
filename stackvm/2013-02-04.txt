{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-02-04T00:00:01.282Z","type":"quit"}
{"nick":"ircretary","date":"2013-02-04T00:00:10.512Z","type":"join"}
{"nick":"Raynos","message":"I dont know","date":"2013-02-04T00:02:08.707Z","type":"message"}
{"nick":"Raynos","message":"I dont operate on buffers","date":"2013-02-04T00:02:13.156Z","type":"message"}
{"nick":"Raynos","message":"I tend to deal with _write(jsonObject, null, cb)","date":"2013-02-04T00:02:29.126Z","type":"message"}
{"nick":"isaacs","message":"wel, that's what you'll get :)","date":"2013-02-04T00:08:32.778Z","type":"message"}
{"nick":"isaacs","message":"good news!","date":"2013-02-04T00:08:34.487Z","type":"message"}
{"nick":"alunny","date":"2013-02-04T00:16:21.894Z","type":"join"}
{"nick":"saijanai_","date":"2013-02-04T00:19:07.280Z","type":"join"}
{"nick":"mirkok","reason":"Quit: mirkok","date":"2013-02-04T00:35:12.901Z","type":"quit"}
{"nick":"shuaib","date":"2013-02-04T00:50:19.309Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 264 seconds","date":"2013-02-04T00:54:06.152Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-02-04T00:54:25.529Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-02-04T00:56:37.463Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-02-04T01:03:52.570Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-02-04T01:04:45.289Z","type":"join"}
{"nick":"ralphtheninja","message":"would anyone in the SF/Oakland area be up to lending me their couch a few days around NodeConf?","date":"2013-02-04T01:24:51.435Z","type":"message"}
{"nick":"substack","message":"ralphtheninja: I've got a cot","date":"2013-02-04T01:27:58.897Z","type":"message"}
{"nick":"substack","message":"if jjjjohnnny is down for more visiting hackerfolk","date":"2013-02-04T01:28:16.965Z","type":"message"}
{"nick":"Raynos","message":"ralphtheninja: arent you going to sleep there at nodeconf?","date":"2013-02-04T01:28:20.434Z","type":"message"}
{"nick":"Raynos","message":"Oh wait you mean before / after ?","date":"2013-02-04T01:28:36.405Z","type":"message"}
{"nick":"Raynos","message":"I have a spare mattress in SF","date":"2013-02-04T01:28:49.038Z","type":"message"}
{"nick":"dominictarr","date":"2013-02-04T01:31:26.411Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-04T01:34:07.603Z","type":"quit"}
{"nick":"ralphtheninja","message":"yeah I meant before and after, might as well stay a few days more if possible :)","date":"2013-02-04T01:37:55.146Z","type":"message"}
{"nick":"ralphtheninja","message":"haven't decided on exact dates yet, nice to know there is some backup to be found, thanks!","date":"2013-02-04T01:38:56.733Z","type":"message"}
{"nick":"mikeal","date":"2013-02-04T01:39:09.086Z","type":"join"}
{"nick":"intabulas","reason":"Read error: Connection reset by peer","date":"2013-02-04T01:40:45.017Z","type":"quit"}
{"nick":"intabulas","date":"2013-02-04T01:41:11.171Z","type":"join"}
{"nick":"shuaib","reason":"Quit: Textual IRC Client: http://www.textualapp.com/","date":"2013-02-04T01:56:19.362Z","type":"quit"}
{"nick":"dominictarr","message":"so Raynos I'm thinking how to explain the need for lock in level-update","date":"2013-02-04T01:57:34.002Z","type":"message"}
{"nick":"dominictarr","message":"basically - for level-update to work, it needs to guarantee that the key in question does not change in between the GET and PUT that the conditional update uses.","date":"2013-02-04T01:58:55.497Z","type":"message"}
{"nick":"dominictarr","message":"it's necessary to use locks to make the operations atomic","date":"2013-02-04T01:59:59.747Z","type":"message"}
{"nick":"dominictarr","message":"like in a single threaded event loop, it's basically a global lock on memory","date":"2013-02-04T02:00:24.470Z","type":"message"}
{"nick":"dominictarr","message":"that releases when the sync code has finished.","date":"2013-02-04T02:00:39.669Z","type":"message"}
{"nick":"dominictarr","message":"that means you can do atomic operations on any in memory datastructure","date":"2013-02-04T02:01:21.644Z","type":"message"}
{"nick":"saijanai_","reason":"Quit: saijanai_","date":"2013-02-04T02:03:22.264Z","type":"quit"}
{"nick":"dominictarr","message":"if you are gonna expose keys to async events, like over http, then you need to use locks (or something) to make sure the updates where deterministic.","date":"2013-02-04T02:15:15.801Z","type":"message"}
{"nick":"dominictarr","message":"although, another option would be to use an append-only model","date":"2013-02-04T02:15:35.326Z","type":"message"}
{"nick":"ralphtheninja","message":"append only ftw! :)","date":"2013-02-04T02:15:50.518Z","type":"message"}
{"nick":"dominictarr","message":"but that would mean every put is saved as put(key+timestamp)","date":"2013-02-04T02:15:57.764Z","type":"message"}
{"nick":"ralphtheninja","message":"hehe i know Raynos wants that too :)","date":"2013-02-04T02:16:04.063Z","type":"message"}
{"nick":"dominictarr","message":"the problem with this is that you couldn't use get(key)","date":"2013-02-04T02:16:28.523Z","type":"message"}
{"nick":"ralphtheninja","message":"trade offs, they become so apparent when it comes to databases","date":"2013-02-04T02:16:34.364Z","type":"message"}
{"nick":"ralphtheninja","message":"nodnod","date":"2013-02-04T02:16:41.209Z","type":"message"}
{"nick":"dominictarr","message":"because the key it's saved in isn't gonna be known","date":"2013-02-04T02:16:54.315Z","type":"message"}
{"nick":"dominictarr","message":"you'd need to always do a range query instead","date":"2013-02-04T02:17:09.141Z","type":"message"}
{"nick":"dominictarr","message":"more like getLast(key)","date":"2013-02-04T02:17:21.652Z","type":"message"}
{"nick":"dominictarr","message":"and it would search backwards from get(key+'~')","date":"2013-02-04T02:17:36.210Z","type":"message"}
{"nick":"dominictarr","message":"it all depends on your use-case","date":"2013-02-04T02:17:57.255Z","type":"message"}
{"nick":"dominictarr","message":"...","date":"2013-02-04T02:18:00.470Z","type":"message"}
{"nick":"ralphtheninja","message":"but if you call with put(key) and the db does _put(key+timestamp) internally and returns key+timestamp to you","date":"2013-02-04T02:18:02.416Z","type":"message"}
{"nick":"ralphtheninja","message":"like in couchdb where you get the _rev id (or whatever it's called)","date":"2013-02-04T02:18:30.885Z","type":"message"}
{"nick":"dominictarr","message":"in couchdb you don't need the _rev to request the document,","date":"2013-02-04T02:18:54.345Z","type":"message"}
{"nick":"dominictarr","message":"so it's not really the same","date":"2013-02-04T02:19:00.568Z","type":"message"}
{"nick":"dominictarr","message":"what couchdb has is more like level-update, with locks, and it reads the current value first","date":"2013-02-04T02:19:30.742Z","type":"message"}
{"nick":"ralphtheninja","message":"true, I was thinking of getting some kind of token back","date":"2013-02-04T02:19:37.470Z","type":"message"}
{"nick":"dominictarr","message":"ralphtheninja: I implemented a thing like that https://github.com/dominictarr/level-update/blob/master/hash-version.js","date":"2013-02-04T02:20:37.278Z","type":"message"}
{"nick":"Raynos","message":"I WANT ALL THE TINGS","date":"2013-02-04T02:20:42.457Z","type":"message"}
{"nick":"LOUDBOT","message":"SHAMWOW ABSORBS TEN TIMES ITS WEIGHT IN OLYMPIC DIVERS","date":"2013-02-04T02:20:42.762Z","type":"message"}
{"nick":"dominictarr","message":"wanting all the things is much more reasonable than wanting a thing that does everything.","date":"2013-02-04T02:21:20.871Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: you never call getLast","date":"2013-02-04T02:21:26.698Z","type":"message"}
{"nick":"dominictarr","message":"?","date":"2013-02-04T02:21:38.073Z","type":"message"}
{"nick":"Raynos","message":"your map-reduce-a-gic always creates and caches a computed view in leveldb under a known key","date":"2013-02-04T02:21:50.443Z","type":"message"}
{"nick":"dominictarr","message":"oh yeah, that works too","date":"2013-02-04T02:22:12.897Z","type":"message"}
{"nick":"dominictarr","message":"actually, that is the right way to do it","date":"2013-02-04T02:22:50.101Z","type":"message"}
{"nick":"dominictarr","message":"you should implement that, Raynos","date":"2013-02-04T02:23:27.367Z","type":"message"}
{"nick":"ralphtheninja","message":"I want to know more about that, how does it work?","date":"2013-02-04T02:23:40.193Z","type":"message"}
{"nick":"ralphtheninja","message":"level-view","date":"2013-02-04T02:24:19.249Z","type":"message"}
{"nick":"dominictarr","message":"it just uses level-live-stream, but reads ranges in the way the level-map-reduce sets them up","date":"2013-02-04T02:27:11.024Z","type":"message"}
{"nick":"dominictarr","message":"that is described in the plugin patterns page in the wiki","date":"2013-02-04T02:27:28.741Z","type":"message"}
{"nick":"ralphtheninja","message":"ok","date":"2013-02-04T02:28:51.072Z","type":"message"}
{"nick":"dominictarr","message":"Raynos: either of these methods would enable replication","date":"2013-02-04T02:30:20.247Z","type":"message"}
{"nick":"thatguydan","date":"2013-02-04T02:40:47.908Z","type":"join"}
{"nick":"mikolalysenko","reason":"Remote host closed the connection","date":"2013-02-04T02:44:54.428Z","type":"quit"}
{"nick":"ins0mnia","reason":"Ping timeout: 276 seconds","date":"2013-02-04T02:45:30.412Z","type":"quit"}
{"nick":"Raynos","message":"I think its the correct way to do things","date":"2013-02-04T03:11:22.961Z","type":"message"}
{"nick":"Raynos","message":"you partition the db into two sections","date":"2013-02-04T03:11:39.520Z","type":"message"}
{"nick":"Raynos","message":"write only / append only section of the database with raw data","date":"2013-02-04T03:11:49.608Z","type":"message"}
{"nick":"Raynos","message":"which gets replicated / sharded","date":"2013-02-04T03:11:57.546Z","type":"message"}
{"nick":"Raynos","message":"and the mutative view section. i.e. map-reduce RAW data into nice keys with efficient reads","date":"2013-02-04T03:12:16.513Z","type":"message"}
{"nick":"dominictarr","message":"yeah, and you just cleanup the old appends that have been bundled","date":"2013-02-04T03:19:25.066Z","type":"message"}
{"nick":"ralphtheninja","message":"aah so you use a part of the db for the db :)","date":"2013-02-04T03:19:26.741Z","type":"message"}
{"nick":"dominictarr","message":"this will basically be like github.com/dominictarr/repred","date":"2013-02-04T03:19:47.495Z","type":"message"}
{"nick":"dominictarr","message":"another thing that would be really good about that model is that you can read the current state really fast","date":"2013-02-04T03:21:20.866Z","type":"message"}
{"nick":"dominictarr","message":"since it's a single key","date":"2013-02-04T03:21:28.785Z","type":"message"}
{"nick":"dominictarr","message":"and you can still read them within a range too","date":"2013-02-04T03:21:48.436Z","type":"message"}
{"nick":"ralphtheninja","message":"dominictarr: what do you mean with bundled appends?","date":"2013-02-04T03:23:26.425Z","type":"message"}
{"nick":"ralphtheninja","message":"like in merged updates?","date":"2013-02-04T03:23:42.688Z","type":"message"}
{"nick":"dominictarr","message":"bundle = reduce(updates, reduceFunction)","date":"2013-02-04T03:24:43.004Z","type":"message"}
{"nick":"dominictarr","message":"if reduceFunction is of type X = reduce(Xs, reducer)","date":"2013-02-04T03:25:38.318Z","type":"message"}
{"nick":"ralphtheninja","message":"ok","date":"2013-02-04T03:25:38.699Z","type":"message"}
{"nick":"dominictarr","message":"then you can just remove the old updates and replace it with the new one.","date":"2013-02-04T03:26:03.054Z","type":"message"}
{"nick":"dominictarr","message":"so, future reduces will be faster","date":"2013-02-04T03:26:15.443Z","type":"message"}
{"nick":"ralphtheninja","message":"gotcha","date":"2013-02-04T03:26:30.883Z","type":"message"}
{"nick":"mikolalysenko","date":"2013-02-04T03:26:31.249Z","type":"join"}
{"nick":"dominictarr","message":"in this case, the types of updates will be dependent on the put… maybe it's better to access it via an abstraction like scuttlebutt","date":"2013-02-04T03:27:55.531Z","type":"message"}
{"nick":"dominictarr","message":"but maybe it's simple enough that you can just write custom ones","date":"2013-02-04T03:28:08.795Z","type":"message"}
{"nick":"dominictarr","message":"but probably… there are a few simple things that work well… so you can just reuse them, or a simple basis that you can expand on - like through for transform streams","date":"2013-02-04T03:28:57.383Z","type":"message"}
{"nick":"ralphtheninja","message":"seems level-update is growing","date":"2013-02-04T03:36:33.154Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 256 seconds","date":"2013-02-04T03:37:25.693Z","type":"quit"}
{"nick":"ralphtheninja","message":"need to feed it and nurture it properly :)","date":"2013-02-04T03:37:30.267Z","type":"message"}
{"nick":"mikolalysenko","date":"2013-02-04T03:39:33.748Z","type":"join"}
{"nick":"ralphtheninja","message":"I want to fork bitcoin-server.js and make it talk to the namecoin network, that way we could get access to distributed dns directly in node","date":"2013-02-04T03:41:32.214Z","type":"message"}
{"nick":"ralphtheninja","message":"or you could just install namecoind and speak json-rpc with it, but it would be cool to have it completely in js","date":"2013-02-04T03:42:03.094Z","type":"message"}
{"nick":"ralphtheninja","message":"well, just an idea","date":"2013-02-04T03:43:04.586Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 248 seconds","date":"2013-02-04T03:43:48.749Z","type":"quit"}
{"nick":"ralphtheninja","reason":"Ping timeout: 255 seconds","date":"2013-02-04T03:56:35.518Z","type":"quit"}
{"nick":"alunny","reason":"Ping timeout: 248 seconds","date":"2013-02-04T04:08:52.744Z","type":"quit"}
{"nick":"Raynos","message":"dominictarr: never cleanup old appends !","date":"2013-02-04T04:20:33.884Z","type":"message"}
{"nick":"Raynos","message":"That's destroying history","date":"2013-02-04T04:20:37.857Z","type":"message"}
{"nick":"dominictarr","message":"it's mixed into a new value","date":"2013-02-04T04:23:57.294Z","type":"message"}
{"nick":"dominictarr","message":"growing the history won't scale for things that are constantly updated","date":"2013-02-04T04:24:20.776Z","type":"message"}
{"nick":"dominictarr","message":"if the number of updates tend to a small number, it would be okay to keep them","date":"2013-02-04T04:24:44.769Z","type":"message"}
{"nick":"dominictarr","message":"but if you needed to represent, say, the players position, then you have to delete.","date":"2013-02-04T04:25:17.098Z","type":"message"}
{"nick":"dominictarr","message":"not to save space, but to save time when reading.","date":"2013-02-04T04:25:30.561Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-02-04T04:33:16.563Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-02-04T04:38:48.435Z","type":"join"}
{"nick":"Raynos","message":"dominictarr: you store the history on disk on the server","date":"2013-02-04T04:46:07.734Z","type":"message"}
{"nick":"Raynos","message":"Well yes sure you dont re-read the history","date":"2013-02-04T04:46:21.563Z","type":"message"}
{"nick":"Raynos","message":"but it has to be stored","date":"2013-02-04T04:46:32.399Z","type":"message"}
{"nick":"dominictarr","message":"okay, then… copy it to another db for archiving","date":"2013-02-04T04:46:53.963Z","type":"message"}
{"nick":"dominictarr","message":"but don't use it for the realtime stuff","date":"2013-02-04T04:47:02.851Z","type":"message"}
{"nick":"dominictarr","message":"the reason you use append-only & reduce is because it's friendly to concurrent updates","date":"2013-02-04T04:47:41.869Z","type":"message"}
{"nick":"dominictarr","message":"that is the most important thing, if you are interested in making a system that behaves predictably","date":"2013-02-04T04:48:09.195Z","type":"message"}
{"nick":"dominictarr","message":"and there are plenty of cases when you don't care about the history","date":"2013-02-04T04:48:43.253Z","type":"message"}
{"nick":"dominictarr","message":"potentially","date":"2013-02-04T04:48:45.711Z","type":"message"}
{"nick":"dominictarr","message":"anyway, the reduced value holds all the information you need to create the current state...","date":"2013-02-04T04:50:36.651Z","type":"message"}
{"nick":"Raynos","message":"agreed","date":"2013-02-04T04:52:22.023Z","type":"message"}
{"nick":"Raynos","message":"but real time and raw data is seperate","date":"2013-02-04T04:52:36.579Z","type":"message"}
{"nick":"Raynos","message":"they go into two different databases","date":"2013-02-04T04:52:43.911Z","type":"message"}
{"nick":"dominictarr","message":"yes, totally different usecases","date":"2013-02-04T04:58:58.952Z","type":"message"}
{"nick":"dominictarr","message":"once we get the clean separation thing happening, setting up stuff like this will be easy.","date":"2013-02-04T04:59:30.744Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-04T05:40:42.891Z","type":"quit"}
{"nick":"mikeal","date":"2013-02-04T05:43:35.563Z","type":"join"}
{"nick":"substack","message":"http://www.reddit.com/r/node/comments/17tjta/fsextra_drop_in_replacement_for_fs_adds_a_few/","date":"2013-02-04T05:54:57.681Z","type":"message"}
{"nick":"substack","message":"Raynos jesusabdullah ^","date":"2013-02-04T05:55:04.638Z","type":"message"}
{"nick":"Raynos","message":"lol","date":"2013-02-04T05:55:42.682Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 255 seconds","date":"2013-02-04T05:56:17.392Z","type":"quit"}
{"nick":"mbalho","message":"f sextra","date":"2013-02-04T05:56:37.698Z","type":"message"}
{"nick":"substack","message":"fSEXtra","date":"2013-02-04T05:56:48.676Z","type":"message"}
{"nick":"dominictarr","message":"substack: I'm getting tape exiting with 1 but reporting a passing test","date":"2013-02-04T06:17:37.681Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: most likely not calling .end() on one of your tests","date":"2013-02-04T06:18:23.665Z","type":"message"}
{"nick":"dominictarr","message":"it reports that","date":"2013-02-04T06:18:38.401Z","type":"message"}
{"nick":"Raynos","message":"check to see whether there's an empty \"# test name\" at the bottom","date":"2013-02-04T06:18:40.001Z","type":"message"}
{"nick":"dominictarr","message":"# disconnect","date":"2013-02-04T06:19:14.026Z","type":"message"}
{"nick":"dominictarr","message":"error","date":"2013-02-04T06:19:14.494Z","type":"message"}
{"nick":"dominictarr","message":"ok 39 should throw","date":"2013-02-04T06:19:15.744Z","type":"message"}
{"nick":"dominictarr","message":"1..39","date":"2013-02-04T06:19:17.247Z","type":"message"}
{"nick":"dominictarr","message":"# tests 39","date":"2013-02-04T06:19:18.522Z","type":"message"}
{"nick":"dominictarr","message":"# pass  39","date":"2013-02-04T06:19:19.658Z","type":"message"}
{"nick":"dominictarr","message":"# ok","date":"2013-02-04T06:19:20.245Z","type":"message"}
{"nick":"dominictarr","message":"\"error\" is just logging","date":"2013-02-04T06:19:39.370Z","type":"message"}
{"nick":"substack","message":"odd","date":"2013-02-04T06:19:59.968Z","type":"message"}
{"nick":"substack","message":"the latest version?","date":"2013-02-04T06:20:05.798Z","type":"message"}
{"nick":"dominictarr","message":"0.2.2","date":"2013-02-04T06:22:25.524Z","type":"message"}
{"nick":"dominictarr","message":"oh, looks like raynos is right","date":"2013-02-04T06:22:38.619Z","type":"message"}
{"nick":"Raynos","message":":3","date":"2013-02-04T06:22:47.294Z","type":"message"}
{"nick":"dominictarr","message":"but it's not reporting the unfinished test","date":"2013-02-04T06:22:51.165Z","type":"message"}
{"nick":"Raynos","message":"it never reports unfinished tests for me","date":"2013-02-04T06:23:04.060Z","type":"message"}
{"nick":"Raynos","message":"probably because there are two code paths that exit 1 and only one reports","date":"2013-02-04T06:23:17.648Z","type":"message"}
{"nick":"dominictarr","message":"it exists 0 though","date":"2013-02-04T06:29:59.885Z","type":"message"}
{"nick":"dominictarr","message":"non zero, i mean","date":"2013-02-04T06:30:05.601Z","type":"message"}
{"nick":"dominictarr","message":"okay! got it working…","date":"2013-02-04T06:35:18.935Z","type":"message"}
{"nick":"dominictarr","message":"and mux-demux tests are now ported to tape","date":"2013-02-04T06:35:27.551Z","type":"message"}
{"nick":"dominictarr","message":"!","date":"2013-02-04T06:35:28.634Z","type":"message"}
{"nick":"dominictarr","message":"is there a tool to ci.testlingify a module?","date":"2013-02-04T06:35:49.544Z","type":"message"}
{"nick":"Raynos","message":"nope","date":"2013-02-04T06:36:33.225Z","type":"message"}
{"nick":"substack","message":"you can just browserify tests and see what the console.log() output is in the browser console","date":"2013-02-04T06:39:10.231Z","type":"message"}
{"nick":"dominictarr","message":"substack: I mean, to add all the package stuff","date":"2013-02-04T06:41:05.432Z","type":"message"}
{"nick":"substack","message":"package stuff?","date":"2013-02-04T06:43:13.730Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-02-04T06:45:07.339Z","type":"quit"}
{"nick":"dominictarr","message":"the stuff you have to put in the package.json","date":"2013-02-04T06:46:48.147Z","type":"message"}
{"nick":"dominictarr","message":"hmm, okay I'm getting some weirdness again","date":"2013-02-04T06:47:06.619Z","type":"message"}
{"nick":"dominictarr","message":"http://ci.testling.com/dominictarr/mux-demux","date":"2013-02-04T06:47:11.014Z","type":"message"}
{"nick":"substack","message":"ah","date":"2013-02-04T06:49:39.601Z","type":"message"}
{"nick":"substack","message":"do the tests require() the module like usual?","date":"2013-02-04T06:50:28.463Z","type":"message"}
{"nick":"mikeal","date":"2013-02-04T06:51:51.241Z","type":"join"}
{"nick":"dominictarr","message":"yes","date":"2013-02-04T06:53:00.647Z","type":"message"}
{"nick":"dominictarr","message":"of course","date":"2013-02-04T06:53:03.368Z","type":"message"}
{"nick":"dominictarr","message":"ah, one thing is that require('..') doesn't work with browserify","date":"2013-02-04T06:53:19.159Z","type":"message"}
{"nick":"dominictarr","message":"you have to use require('../')","date":"2013-02-04T06:53:26.800Z","type":"message"}
{"nick":"dominictarr","message":"but it doesn't error early","date":"2013-02-04T06:53:45.958Z","type":"message"}
{"nick":"dominictarr","message":"it just returns undefined","date":"2013-02-04T06:54:01.463Z","type":"message"}
{"nick":"substack","message":"oh pesky","date":"2013-02-04T06:55:03.870Z","type":"message"}
{"nick":"substack","message":"require('..') didn't used to work","date":"2013-02-04T06:55:22.752Z","type":"message"}
{"nick":"substack","message":"is probably why","date":"2013-02-04T06:55:24.844Z","type":"message"}
{"nick":"substack","message":"oh the require() in the browser code probably messes it up","date":"2013-02-04T06:56:21.217Z","type":"message"}
{"nick":"substack","message":"but it works in the server-side bundling","date":"2013-02-04T06:56:28.256Z","type":"message"}
{"nick":"dominictarr","message":"yes","date":"2013-02-04T07:03:56.286Z","type":"message"}
{"nick":"dominictarr","message":"that makes sense","date":"2013-02-04T07:04:00.045Z","type":"message"}
{"nick":"dominictarr","message":"substack: if I just leave the browser tab open will it update with fresh results?","date":"2013-02-04T07:06:05.983Z","type":"message"}
{"nick":"dominictarr","message":"substack: pkrumins seems to only be running ie8 sometimes http://ci.testling.com/dominictarr/mux-demux","date":"2013-02-04T07:07:20.248Z","type":"message"}
{"nick":"substack","message":"it might be running tests","date":"2013-02-04T07:10:14.241Z","type":"message"}
{"nick":"slaskis","date":"2013-02-04T07:20:52.325Z","type":"join"}
{"nick":"substack","message":"yep check it now","date":"2013-02-04T07:21:25.800Z","type":"message"}
{"nick":"substack","message":"logging in to see if the launcher crashed","date":"2013-02-04T07:21:33.647Z","type":"message"}
{"nick":"CryptoQuick","date":"2013-02-04T07:24:48.387Z","type":"join"}
{"nick":"substack","message":"the launcher was having some issues it seems","date":"2013-02-04T08:01:44.359Z","type":"message"}
{"nick":"alunny","date":"2013-02-04T08:04:57.805Z","type":"join"}
{"nick":"alunny","reason":"Ping timeout: 245 seconds","date":"2013-02-04T08:09:11.816Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-02-04T08:12:34.732Z","type":"quit"}
{"nick":"CryptoQuick","reason":"Quit: CryptoQuick","date":"2013-02-04T08:28:38.847Z","type":"quit"}
{"nick":"thatguydan","reason":"Ping timeout: 246 seconds","date":"2013-02-04T08:34:07.820Z","type":"quit"}
{"nick":"mirkok","date":"2013-02-04T08:47:41.125Z","type":"join"}
{"nick":"mirkok","reason":"Quit: mirkok","date":"2013-02-04T09:22:34.783Z","type":"quit"}
{"nick":"thatguydan","date":"2013-02-04T09:40:35.240Z","type":"join"}
{"nick":"thatguydan","reason":"Ping timeout: 256 seconds","date":"2013-02-04T09:45:21.778Z","type":"quit"}
{"nick":"nk109","reason":"Read error: Connection reset by peer","date":"2013-02-04T10:19:05.473Z","type":"quit"}
{"nick":"mirkok","date":"2013-02-04T10:33:46.924Z","type":"join"}
{"nick":"slaskis","reason":"Remote host closed the connection","date":"2013-02-04T10:39:48.898Z","type":"quit"}
{"nick":"mirkok","reason":"Read error: No route to host","date":"2013-02-04T10:41:41.956Z","type":"quit"}
{"nick":"mirkok","date":"2013-02-04T10:42:04.516Z","type":"join"}
{"nick":"mirkok","reason":"Client Quit","date":"2013-02-04T10:42:10.584Z","type":"quit"}
{"nick":"dominictarr","date":"2013-02-04T10:53:57.426Z","type":"join"}
{"nick":"on9","date":"2013-02-04T10:59:58.949Z","type":"join"}
{"nick":"slaskis","date":"2013-02-04T11:06:36.986Z","type":"join"}
{"nick":"ralphtheninja","date":"2013-02-04T11:13:44.980Z","type":"join"}
{"nick":"dominictarr","message":"substack: now I'm not getting any logging output at all for mux-demux… it just says that the test has failed","date":"2013-02-04T11:20:35.148Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-02-04T11:27:02.215Z","type":"quit"}
{"nick":"on9","reason":"Ping timeout: 246 seconds","date":"2013-02-04T12:18:07.796Z","type":"quit"}
{"nick":"fotoverite_","date":"2013-02-04T12:26:01.139Z","type":"join"}
{"nick":"Altreus","reason":"Read error: Operation timed out","date":"2013-02-04T12:26:22.115Z","type":"quit"}
{"nick":"fotoverite","reason":"Read error: Connection reset by peer","date":"2013-02-04T12:27:50.066Z","type":"quit"}
{"nick":"pikpik","reason":"Ping timeout: 252 seconds","date":"2013-02-04T12:27:50.586Z","type":"quit"}
{"nick":"fotoverite_","new_nick":"fotoverite","date":"2013-02-04T12:27:50.587Z","type":"nick"}
{"nick":"Altreus","date":"2013-02-04T12:28:57.353Z","type":"join"}
{"nick":"on9","date":"2013-02-04T12:30:53.046Z","type":"join"}
{"nick":"ins0mnia","date":"2013-02-04T12:41:41.151Z","type":"join"}
{"nick":"yorick","date":"2013-02-04T12:49:06.287Z","type":"join"}
{"nick":"yorick","reason":"Changing host","date":"2013-02-04T12:49:06.718Z","type":"quit"}
{"nick":"yorick","date":"2013-02-04T12:49:06.847Z","type":"join"}
{"nick":"on9","reason":"Ping timeout: 248 seconds","date":"2013-02-04T13:41:23.894Z","type":"quit"}
{"nick":"pikpik","date":"2013-02-04T13:52:27.154Z","type":"join"}
{"nick":"on9","date":"2013-02-04T13:54:52.181Z","type":"join"}
{"nick":"ins0mnia","message":"substack: Why not allow seaport.register() to return meta instead of meta.port? this was the service can know its own id as registered in seaport..","date":"2013-02-04T13:55:39.350Z","type":"message"}
{"nick":"ins0mnia","message":"substack: was=way","date":"2013-02-04T13:55:55.371Z","type":"message"}
{"nick":"ins0mnia","message":"substack: or even just the id, other information can easily be looked based on that","date":"2013-02-04T14:00:13.007Z","type":"message"}
{"nick":"saijanai_","date":"2013-02-04T14:37:07.261Z","type":"join"}
{"nick":"intabulas","reason":"Remote host closed the connection","date":"2013-02-04T15:06:06.842Z","type":"quit"}
{"nick":"CryptoQuick","date":"2013-02-04T15:23:58.021Z","type":"join"}
{"nick":"AvianFlu","date":"2013-02-04T15:43:39.980Z","type":"join"}
{"nick":"mikolalysenko","date":"2013-02-04T15:48:13.186Z","type":"join"}
