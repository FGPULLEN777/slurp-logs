{"nick":"Raynos","message":"isaacs: emitting a function to call is bad","date":"2012-08-22T00:09:03.348Z","type":"message"}
{"nick":"Raynos","message":"emit(\"remote invoke\", args, callback) is a bad pattern","date":"2012-08-22T00:09:20.893Z","type":"message"}
{"nick":"isaacs","message":"Raynos: i dunno.  probably some use case for it","date":"2012-08-22T00:26:19.755Z","type":"message"}
{"nick":"isaacs","message":"Raynos: i mean, there are some use cases for emit('something', someFunction)","date":"2012-08-22T00:26:45.069Z","type":"message"}
{"nick":"Raynos","message":"isaacs: `emit(\"remote invoke\", args, callback)` vs `remote.invoke(args, callback)` the latter is always better","date":"2012-08-22T00:26:48.825Z","type":"message"}
{"nick":"isaacs","message":"Raynos: we do emit('newListener', handlerFunction) in node.","date":"2012-08-22T00:26:55.729Z","type":"message"}
{"nick":"Raynos","message":"isaacs: true, but that's emitting a function as a value rather then a function with the intend that the listener calls it","date":"2012-08-22T00:27:24.925Z","type":"message"}
{"nick":"isaacs","message":"right","date":"2012-08-22T00:27:30.578Z","type":"message"}
{"nick":"isaacs","message":"so, that's one use case","date":"2012-08-22T00:27:39.231Z","type":"message"}
{"nick":"isaacs","message":"but i mean, there's probably some case where emit('some-event', pleaseCallThisFunctionSomeTime) is probably valid","date":"2012-08-22T00:27:55.060Z","type":"message"}
{"nick":"Raynos","message":"meh, I can probably refactor that into `obj['some-method'](pleaseCallThisFunctionSomeTime)","date":"2012-08-22T00:28:58.042Z","type":"message"}
{"nick":"isaacs","message":"Raynos: sure but that's not an argument for or against anythign","date":"2012-08-22T00:29:42.562Z","type":"message"}
{"nick":"isaacs","message":"Raynos: you can refactor javascript into ruby, doesn't mean you always should.","date":"2012-08-22T00:29:58.492Z","type":"message"}
{"nick":"Raynos","message":"._.","date":"2012-08-22T00:30:04.850Z","type":"message"}
{"nick":"Raynos","message":"why wyould you ever refactor js into ruby","date":"2012-08-22T00:30:13.491Z","type":"message"}
{"nick":"isaacs","message":"what i'm saying is, events and callbacks are capable of doing one anothers' jobs, just like functional programming and oop are.","date":"2012-08-22T00:31:25.493Z","type":"message"}
{"nick":"isaacs","message":"but that misses the point: one isn't necessarily always better.","date":"2012-08-22T00:31:37.191Z","type":"message"}
{"nick":"isaacs","message":"if i'm giving you a function, maybe i do want you to call it.  ruling out patterns categorically shouldn't be something we do lightly","date":"2012-08-22T00:32:03.956Z","type":"message"}
{"nick":"Raynos","message":"I just think encoding a method name as an event is bad","date":"2012-08-22T00:32:06.306Z","type":"message"}
{"nick":"Raynos","message":"but your right","date":"2012-08-22T00:32:27.976Z","type":"message"}
{"nick":"Raynos","message":"it can be valid","date":"2012-08-22T00:32:32.598Z","type":"message"}
{"nick":"Raynos","message":"if the event emitter is just a dumb proxy","date":"2012-08-22T00:32:37.103Z","type":"message"}
{"nick":"Raynos","message":"isaacs: why you wise ._.","date":"2012-08-22T00:32:53.192Z","type":"message"}
{"nick":"isaacs","message":"sure, or maybe the event emits a thing that there's a new bunch of subscribers >=1, and whatever you pass into that method will get sent to them all.","date":"2012-08-22T00:35:12.635Z","type":"message"}
{"nick":"isaacs","message":"i dunno","date":"2012-08-22T00:35:15.717Z","type":"message"}
{"nick":"isaacs","message":"there's a lot of potential programs out there.","date":"2012-08-22T00:35:19.551Z","type":"message"}
{"nick":"isaacs","message":"many many integers that can be run as javascript","date":"2012-08-22T00:35:32.827Z","type":"message"}
{"nick":"mikeal","date":"2012-08-22T00:54:29.655Z","type":"join"}
{"nick":"ryan_stevens","date":"2012-08-22T00:54:52.336Z","type":"join"}
{"nick":"_sorensen","date":"2012-08-22T01:00:34.046Z","type":"join"}
{"nick":"niftylettuce","message":"isaacs: which version of node would be most compatible with ARM you think?","date":"2012-08-22T01:01:11.172Z","type":"message"}
{"nick":"niftylettuce","message":"isaacs: e.g. an overo sands","date":"2012-08-22T01:01:18.608Z","type":"message"}
{"nick":"niftylettuce","message":"not sure if there is an answer, but just curious if u had thoughts towards it","date":"2012-08-22T01:01:58.486Z","type":"message"}
{"nick":"substack","message":"infinitely many","date":"2012-08-22T01:03:54.733Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-08-22T01:06:36.813Z","type":"quit"}
{"nick":"substack","message":"but at least countably many","date":"2012-08-22T01:18:01.439Z","type":"message"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2012-08-22T01:23:59.803Z","type":"quit"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2012-08-22T01:31:22.333Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-08-22T01:32:29.383Z","type":"quit"}
{"nick":"substack","message":"go go gadget mux-demux","date":"2012-08-22T01:41:26.410Z","type":"message"}
{"nick":"substack","message":"isaacs: new thing: npm is the \"go go gadget\" of inspector gadget","date":"2012-08-22T01:42:48.924Z","type":"message"}
{"nick":"thatguydan","date":"2012-08-22T01:46:36.559Z","type":"join"}
{"nick":"wiwillia","date":"2012-08-22T01:56:05.917Z","type":"quit"}
{"nick":"tilgovi","date":"2012-08-22T01:58:47.792Z","type":"join"}
{"nick":"ryan_stevens1","date":"2012-08-22T01:59:58.976Z","type":"join"}
{"nick":"maxogden","message":"substack: http://www.onepiecewallpaper.net/images/wallpapers/One-Piece-Brook-170356.jpeg","date":"2012-08-22T02:29:06.729Z","type":"message"}
{"nick":"joshwnj","reason":"Quit: ERC Version 5.3 (IRC client for Emacs)","date":"2012-08-22T02:47:29.620Z","type":"quit"}
{"nick":"Raynos","message":"substack: b.register(\".html\", handleHtml) doesn't work","date":"2012-08-22T03:17:17.332Z","type":"message"}
{"nick":"Raynos","message":"the function gets called","date":"2012-08-22T03:21:40.244Z","type":"message"}
{"nick":"Raynos","message":"but the code is never added to the bundle","date":"2012-08-22T03:21:44.914Z","type":"message"}
{"nick":"simcop2387","reason":"Excess Flood","date":"2012-08-22T03:22:46.399Z","type":"quit"}
{"nick":"simcop2387","date":"2012-08-22T03:22:53.696Z","type":"join"}
{"nick":"mikeal","date":"2012-08-22T03:26:28.180Z","type":"join"}
{"nick":"AvianFlu","date":"2012-08-22T03:37:19.925Z","type":"join"}
{"nick":"substack","message":"Raynos: do you return a string?","date":"2012-08-22T03:41:28.475Z","type":"message"}
{"nick":"Raynos","message":"substack: https://github.com/substack/node-browserify/blob/master/lib/wrap.js#L160","date":"2012-08-22T03:51:54.883Z","type":"message"}
{"nick":"Raynos","message":"that syntax error never bubbled up","date":"2012-08-22T03:51:59.119Z","type":"message"}
{"nick":"Raynos","message":"i forgot to handle new lines cleanly","date":"2012-08-22T03:52:10.183Z","type":"message"}
{"nick":"substack","message":"you need to listen for it explicitly","date":"2012-08-22T03:53:02.111Z","type":"message"}
{"nick":"Raynos","message":"substack: document that","date":"2012-08-22T03:53:14.069Z","type":"message"}
{"nick":"substack","message":"it is documented","date":"2012-08-22T03:53:19.202Z","type":"message"}
{"nick":"Raynos","message":";_;","date":"2012-08-22T03:53:28.451Z","type":"message"}
{"nick":"Raynos","message":"blarg","date":"2012-08-22T03:53:50.434Z","type":"message"}
{"nick":"substack","message":"it's in doc/methods.markdown","date":"2012-08-22T03:53:57.750Z","type":"message"}
{"nick":"Raynos","message":"> If you don't listen for this event, the error will be printed to stderr.","date":"2012-08-22T03:54:07.929Z","type":"message"}
{"nick":"Raynos","message":"lies","date":"2012-08-22T03:54:09.311Z","type":"message"}
{"nick":"Raynos","message":"vicious lies","date":"2012-08-22T03:54:11.441Z","type":"message"}
{"nick":"substack","message":"future versions of browserify will ditch the middleware and then I can just emit 'error'","date":"2012-08-22T03:54:12.658Z","type":"message"}
{"nick":"substack","message":"oh right that used to be true","date":"2012-08-22T03:54:23.583Z","type":"message"}
{"nick":"substack","message":"at one point it was true and then at some other point it stopped being true","date":"2012-08-22T03:54:37.026Z","type":"message"}
{"nick":"substack","message":"silence is golden","date":"2012-08-22T03:54:51.974Z","type":"message"}
{"nick":"Raynos","message":"substack: `verbose: true` appreciated","date":"2012-08-22T03:55:29.207Z","type":"message"}
{"nick":"Raynos","message":"people who build browserify extensions will love you for it","date":"2012-08-22T03:55:43.951Z","type":"message"}
{"nick":"substack","message":"people probably should use the api less","date":"2012-08-22T03:56:05.399Z","type":"message"}
{"nick":"substack","message":"they use it too much already","date":"2012-08-22T03:56:08.874Z","type":"message"}
{"nick":"substack","message":"need to delete some features","date":"2012-08-22T03:56:15.546Z","type":"message"}
{"nick":"Raynos","message":"substack: https://gist.github.com/2321202ce8df9919ef19","date":"2012-08-22T03:56:29.380Z","type":"message"}
{"nick":"Raynos","message":"substack: how do I inject env into a browserify bundle cleanly?","date":"2012-08-22T03:56:48.622Z","type":"message"}
{"nick":"substack","message":"try bundle.prepends.push('process.env=' + JSON.stringify(process.env) + '\\n')","date":"2012-08-22T03:58:47.786Z","type":"message"}
{"nick":"substack","message":"or you could use a prefilter","date":"2012-08-22T03:59:12.105Z","type":"message"}
{"nick":"Raynos","message":"substack: You don't understand. process is a local you inject","date":"2012-08-22T04:01:07.703Z","type":"message"}
{"nick":"Raynos","message":"that get's recreated each time","date":"2012-08-22T04:01:13.894Z","type":"message"}
{"nick":"Raynos","message":"why do you think I overwrite `modules.__browserify_process`","date":"2012-08-22T04:01:35.042Z","type":"message"}
{"nick":"Raynos","message":"otherwise each module get's its own local process","date":"2012-08-22T04:01:42.535Z","type":"message"}
{"nick":"substack","message":"bundle.filter(function (src) { return 'process.env=' + JSON.stringify(process.env) + '\\n' })","date":"2012-08-22T04:03:04.864Z","type":"message"}
{"nick":"substack","message":"do that","date":"2012-08-22T04:03:08.149Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 249 seconds","date":"2012-08-22T04:03:50.308Z","type":"quit"}
{"nick":"Raynos","message":"xd","date":"2012-08-22T04:05:05.534Z","type":"message"}
{"nick":"Raynos","message":"that works","date":"2012-08-22T04:05:07.549Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-08-22T04:06:58.343Z","type":"quit"}
{"nick":"simcop2387","reason":"Excess Flood","date":"2012-08-22T04:08:17.806Z","type":"quit"}
{"nick":"simcop2387","date":"2012-08-22T04:08:53.102Z","type":"join"}
{"nick":"Raynos","message":"dominictarr: I need a more detailed explanation of how crdt works","date":"2012-08-22T04:22:09.710Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: document how the sync flag thing works","date":"2012-08-22T04:25:20.225Z","type":"message"}
{"nick":"simcop2387","reason":"Excess Flood","date":"2012-08-22T04:27:21.684Z","type":"quit"}
{"nick":"simcop2387","date":"2012-08-22T04:28:52.435Z","type":"join"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2012-08-22T04:55:38.643Z","type":"quit"}
{"nick":"thatguydan","date":"2012-08-22T04:57:15.083Z","type":"join"}
{"nick":"timoxley","date":"2012-08-22T05:04:14.907Z","type":"join"}
{"nick":"_sorensen","reason":"Quit: _sorensen","date":"2012-08-22T05:09:36.587Z","type":"quit"}
{"nick":"Raynos","message":"SubStack: https://gist.github.com/3355703 I need a latency compensation library and then we won","date":"2012-08-22T05:17:54.521Z","type":"message"}
{"nick":"substack","message":"most of the value that people derive from projects like meteor comes from the docs, community, and cohesiveness of the api veneer","date":"2012-08-22T05:27:19.486Z","type":"message"}
{"nick":"joshwnj","date":"2012-08-22T05:28:20.039Z","type":"join"}
{"nick":"substack","message":"getting up to feature parity is good but there are other pieces","date":"2012-08-22T05:28:21.039Z","type":"message"}
{"nick":"substack","message":"I also don't think it's wise to rush ahead too fast with the veneer because the pieces tend to focus less on doing their one thing well","date":"2012-08-22T05:29:37.083Z","type":"message"}
{"nick":"substack","message":"the streaming libraries have steadily naturally converged on abstractions that compose very nicely","date":"2012-08-22T05:31:57.934Z","type":"message"}
{"nick":"substack","message":"it's far less clear how the ui pieces should work in a modular way","date":"2012-08-22T05:32:41.234Z","type":"message"}
{"nick":"Raynos","message":"substack: I know what you mean. But it's nice to have a mental list of tools that are alternatives","date":"2012-08-22T05:33:39.291Z","type":"message"}
{"nick":"Raynos","message":"3 months ago I didn't know i had that list","date":"2012-08-22T05:34:03.163Z","type":"message"}
{"nick":"substack","message":"yes I like how you've documented everything","date":"2012-08-22T05:34:15.852Z","type":"message"}
{"nick":"substack","message":"it seems like some library should sit on top of sorta","date":"2012-08-22T05:34:24.546Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/Raynos/data-bind","date":"2012-08-22T05:34:29.069Z","type":"message"}
{"nick":"substack","message":"to more generally handle collections","date":"2012-08-22T05:34:39.691Z","type":"message"}
{"nick":"substack","message":"using streams seems a bit low-level for updating ui elements in this particular case too","date":"2012-08-22T05:35:30.486Z","type":"message"}
{"nick":"Raynos","message":"substack: databind latched itself onto the crdt api","date":"2012-08-22T05:35:52.121Z","type":"message"}
{"nick":"Raynos","message":"I think streams are nice","date":"2012-08-22T05:35:59.581Z","type":"message"}
{"nick":"substack","message":"still not sure what crdt does","date":"2012-08-22T05:36:19.282Z","type":"message"}
{"nick":"substack","message":"I get the basic premise but I'm still unclear as to what the implications of that idea are","date":"2012-08-22T05:37:00.142Z","type":"message"}
{"nick":"substack","message":"databind?","date":"2012-08-22T05:38:46.670Z","type":"message"}
{"nick":"Raynos","message":"databind binds an updatable thing to the dom","date":"2012-08-22T05:39:15.301Z","type":"message"}
{"nick":"Raynos","message":"based on dataset properties","date":"2012-08-22T05:39:19.968Z","type":"message"}
{"nick":"Raynos","message":"crdt gives you a document of rows","date":"2012-08-22T05:39:36.662Z","type":"message"}
{"nick":"Raynos","message":"and gives you Set and Seq abstractions to \"query\" a subset of that document","date":"2012-08-22T05:39:48.914Z","type":"message"}
{"nick":"substack","message":"I more want a lib that sits between crdt and sorta and other ui collection libs","date":"2012-08-22T05:40:05.984Z","type":"message"}
{"nick":"Raynos","message":"crdt docs can be turned into a stream and piped into shit like other crdt docs","date":"2012-08-22T05:40:18.428Z","type":"message"}
{"nick":"Raynos","message":"substack: I don't know what that looks like. I'll let you see what I do with sorta","date":"2012-08-22T05:40:34.464Z","type":"message"}
{"nick":"Raynos","message":"about to use it","date":"2012-08-22T05:40:36.475Z","type":"message"}
{"nick":"substack","message":"sweet","date":"2012-08-22T05:40:42.925Z","type":"message"}
{"nick":"Raynos","message":"as part of dn-leaderboard :)","date":"2012-08-22T05:41:02.271Z","type":"message"}
{"nick":"rowbit","reason":"Ping timeout: 256 seconds","date":"2012-08-22T05:43:46.579Z","type":"quit"}
{"nick":"rowbit","date":"2012-08-22T05:44:31.575Z","type":"join"}
{"nick":"Raynos","message":"Ugh","date":"2012-08-22T05:54:38.132Z","type":"message"}
{"nick":"Raynos","message":"Meteor's leaderboard is evil","date":"2012-08-22T05:54:55.491Z","type":"message"}
{"nick":"Raynos","message":"It has a notion of selected which is hard to encode elegantly","date":"2012-08-22T05:55:05.960Z","type":"message"}
{"nick":"substack","message":"selected current element?","date":"2012-08-22T06:03:54.421Z","type":"message"}
{"nick":"substack","message":"isn't that just a property of the elements?","date":"2012-08-22T06:04:15.305Z","type":"message"}
{"nick":"Raynos","message":"substack: https://github.com/Raynos/dn-leaderboard/blob/master/leaderboard/index.js#L34","date":"2012-08-22T06:12:50.954Z","type":"message"}
{"nick":"Raynos","message":"it feels too complicated","date":"2012-08-22T06:12:55.545Z","type":"message"}
{"nick":"substack","message":"write a module to encapsulate the idea of selection/unselection","date":"2012-08-22T06:19:41.087Z","type":"message"}
{"nick":"Raynos","message":"substack: feels difficult","date":"2012-08-22T06:20:50.756Z","type":"message"}
{"nick":"substack","message":"nah","date":"2012-08-22T06:20:54.883Z","type":"message"}
{"nick":"Raynos","message":"the pain point is that this selection is stored in local storage","date":"2012-08-22T06:21:21.034Z","type":"message"}
{"nick":"Raynos","message":"but I guess that can be an opt in","date":"2012-08-22T06:21:26.157Z","type":"message"}
{"nick":"substack","message":"the selection algorithm shouldn't need to do any i/o","date":"2012-08-22T06:21:48.703Z","type":"message"}
{"nick":"substack","message":"it can just have in-memory state","date":"2012-08-22T06:21:55.463Z","type":"message"}
{"nick":"ryan_stevens1","reason":"Quit: Leaving.","date":"2012-08-22T06:23:10.316Z","type":"quit"}
{"nick":"Raynos","message":"sorta feels weird","date":"2012-08-22T06:25:49.756Z","type":"message"}
{"nick":"Raynos","message":"its backwards","date":"2012-08-22T06:26:11.201Z","type":"message"}
{"nick":"Raynos","message":"I want to pass in an event emitter that emits change events that it should listen to","date":"2012-08-22T06:26:23.893Z","type":"message"}
{"nick":"Raynos","message":"rather then it being an event emitter that emits change events I listen to","date":"2012-08-22T06:26:33.429Z","type":"message"}
{"nick":"substack","message":"hack a lib for it!","date":"2012-08-22T06:26:35.582Z","type":"message"}
{"nick":"Raynos","message":"xd","date":"2012-08-22T06:26:55.599Z","type":"message"}
{"nick":"substack","message":"the low-level stuff was crazy hard to get right","date":"2012-08-22T06:27:01.455Z","type":"message"}
{"nick":"substack","message":"but sorta works so you could just wrap it","date":"2012-08-22T06:27:08.894Z","type":"message"}
{"nick":"substack","message":"where do you get the events that the ui should listen to from?","date":"2012-08-22T06:27:39.655Z","type":"message"}
{"nick":"Raynos","message":"crdt","date":"2012-08-22T06:27:51.426Z","type":"message"}
{"nick":"Raynos","message":"substack: https://github.com/dominictarr/crdt/blob/master/example/complex/chat.js#L28","date":"2012-08-22T06:28:21.433Z","type":"message"}
{"nick":"AvianFlu","date":"2012-08-22T06:29:50.699Z","type":"join"}
{"nick":"Raynos","message":"BLARG","date":"2012-08-22T06:29:56.807Z","type":"message"}
{"nick":"Raynos","message":"you store the key on dataset","date":"2012-08-22T06:30:01.018Z","type":"message"}
{"nick":"Raynos","message":"sorta is too inflexible >_<","date":"2012-08-22T06:30:37.561Z","type":"message"}
{"nick":"substack","message":"https://gist.github.com/3422941","date":"2012-08-22T06:33:27.134Z","type":"message"}
{"nick":"Raynos","message":"substack: do I or you have to implement selective?","date":"2012-08-22T06:34:51.071Z","type":"message"}
{"nick":"substack","message":"yes","date":"2012-08-22T06:35:03.042Z","type":"message"}
{"nick":"Raynos","message":"me or you","date":"2012-08-22T06:35:11.397Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 245 seconds","date":"2012-08-22T06:35:15.408Z","type":"quit"}
{"nick":"substack","message":"well you already wrote the code that implements it nearly","date":"2012-08-22T06:35:24.610Z","type":"message"}
{"nick":"Raynos","message":"are you writing it or shall I write it?","date":"2012-08-22T06:35:36.853Z","type":"message"}
{"nick":"Raynos","message":"if your writing it right now there is no point in me doing it","date":"2012-08-22T06:35:48.124Z","type":"message"}
{"nick":"substack","message":"no I'm not presently writing it","date":"2012-08-22T06:35:48.762Z","type":"message"}
{"nick":"substack","message":"go for it!","date":"2012-08-22T06:35:53.122Z","type":"message"}
{"nick":"Raynos","message":"Ok then ill do it","date":"2012-08-22T06:35:54.686Z","type":"message"}
{"nick":"Raynos","message":"MOAR MODULES","date":"2012-08-22T06:36:00.806Z","type":"message"}
{"nick":"substack","message":"also selective is already taken on npm","date":"2012-08-22T06:36:00.857Z","type":"message"}
{"nick":"LOUDBOT","message":"FUCK OFF YOU BULLSHIT PIECE OF WANKERY","date":"2012-08-22T06:36:01.997Z","type":"message"}
{"nick":"Raynos","message":"ffff","date":"2012-08-22T06:36:05.404Z","type":"message"}
{"nick":"substack","message":"I'll think up a name while you write it","date":"2012-08-22T06:36:06.386Z","type":"message"}
{"nick":"substack","message":"selectron","date":"2012-08-22T06:36:37.566Z","type":"message"}
{"nick":"substack","message":"haha","date":"2012-08-22T06:36:38.381Z","type":"message"}
{"nick":"substack","message":"selectric","date":"2012-08-22T06:37:09.926Z","type":"message"}
{"nick":"substack","message":"selectioneering","date":"2012-08-22T06:37:20.086Z","type":"message"}
{"nick":"substack","message":"anyways selectron is the best of those","date":"2012-08-22T06:37:30.713Z","type":"message"}
{"nick":"substack","message":"might want to go the source of sel.add(player) instead of sel(player)","date":"2012-08-22T06:39:48.146Z","type":"message"}
{"nick":"Raynos","message":"yeah","date":"2012-08-22T06:41:17.372Z","type":"message"}
{"nick":"Raynos","message":"https://gist.github.com/c664833ae7b56ab48534","date":"2012-08-22T06:41:36.441Z","type":"message"}
{"nick":"substack","message":"shouldn't select(thing) return a function that actually does the stuff?","date":"2012-08-22T06:42:33.442Z","type":"message"}
{"nick":"substack","message":"I guess you could just .bind()","date":"2012-08-22T06:42:41.869Z","type":"message"}
{"nick":"Raynos","message":"I was thinking selectron is a thing that contains the current selected","date":"2012-08-22T06:43:23.160Z","type":"message"}
{"nick":"Raynos","message":"so there's the idea of there only being on selected thing at a time","date":"2012-08-22T06:43:36.901Z","type":"message"}
{"nick":"Raynos","message":"substack: https://gist.github.com/3423068","date":"2012-08-22T06:44:09.154Z","type":"message"}
{"nick":"substack","message":"that works","date":"2012-08-22T06:44:11.033Z","type":"message"}
{"nick":"substack","message":"what about the initial value?","date":"2012-08-22T06:44:36.832Z","type":"message"}
{"nick":"Raynos","message":"there is no initial value in my code","date":"2012-08-22T06:44:48.476Z","type":"message"}
{"nick":"Raynos","message":"and the initial value is a pain in the ass, because if you pass it in you miss the first select event unless it's applied on nextTick","date":"2012-08-22T06:45:18.203Z","type":"message"}
{"nick":"substack","message":"in your old version you had an initial value","date":"2012-08-22T06:45:31.821Z","type":"message"}
{"nick":"substack","message":"just throw in a nextTick then, it's all cools","date":"2012-08-22T06:45:38.449Z","type":"message"}
{"nick":"Raynos","message":"in the old version I had an initial id","date":"2012-08-22T06:45:45.773Z","type":"message"}
{"nick":"Raynos","message":"and I was waiting to get the list of incoming players and see whether any of them match the initial id","date":"2012-08-22T06:45:57.069Z","type":"message"}
{"nick":"substack","message":"do you still need oldSelection ?","date":"2012-08-22T06:46:10.248Z","type":"message"}
{"nick":"substack","message":"should probably get selectron to completely remove the need for oldSelection","date":"2012-08-22T06:46:28.473Z","type":"message"}
{"nick":"substack","message":"shouldn't `player.on(\"selected\", sel.select)` be `player.on(\"selected\", sel.select.bind(sel, player))` ?","date":"2012-08-22T06:47:32.777Z","type":"message"}
{"nick":"substack","message":"unless player emits itself in its 'selected' event which would be silly","date":"2012-08-22T06:47:56.759Z","type":"message"}
{"nick":"Raynos","message":"player emits itself in the event","date":"2012-08-22T06:48:53.440Z","type":"message"}
{"nick":"Raynos","message":"but I like where your going with this","date":"2012-08-22T06:49:09.969Z","type":"message"}
{"nick":"substack","message":"could have sel.tie(player) do the same as sel.select.bind(sel, player)","date":"2012-08-22T06:51:12.166Z","type":"message"}
{"nick":"substack","message":"`tie` or `fix` or some such","date":"2012-08-22T06:51:28.404Z","type":"message"}
{"nick":"ITpro","date":"2012-08-22T06:55:06.003Z","type":"join"}
{"nick":"Raynos","message":"makes sense","date":"2012-08-22T06:55:26.618Z","type":"message"}
{"nick":"substack","message":"looks like an initial value would eliminate the need for oldSelection entirely","date":"2012-08-22T06:57:50.358Z","type":"message"}
{"nick":"substack","message":"function selectron (init) { ..., selected = init; ... }","date":"2012-08-22T06:58:11.401Z","type":"message"}
{"nick":"substack","message":"then just selectron(selected.get('player'))","date":"2012-08-22T06:58:51.320Z","type":"message"}
{"nick":"substack","message":"STATE BE GONE","date":"2012-08-22T06:58:56.469Z","type":"message"}
{"nick":"LOUDBOT","message":"MR. PLOW.  THAT'S MY NAME.  THAT NAME AGAIN IS MR. PLOW.","date":"2012-08-22T06:58:57.445Z","type":"message"}
{"nick":"Raynos","message":"substack: but that's not how it works","date":"2012-08-22T06:59:31.654Z","type":"message"}
{"nick":"Raynos","message":"selected.get('player') returns an id not a player","date":"2012-08-22T06:59:39.287Z","type":"message"}
{"nick":"substack","message":"oh I see, you actually need to hook onto 'select' to fire the event","date":"2012-08-22T06:59:40.302Z","type":"message"}
{"nick":"Raynos","message":"substack: https://gist.github.com/3423068#L26","date":"2012-08-22T07:00:02.271Z","type":"message"}
{"nick":"substack","message":"if (init) process.nextTick(function () { if (init === selected) sel.emit('select', init) })","date":"2012-08-22T07:00:18.733Z","type":"message"}
{"nick":"Raynos","message":"i need to wait for incoming players from data store and see whether any ids match","date":"2012-08-22T07:00:22.653Z","type":"message"}
{"nick":"substack","message":"anyhow it's much cleaner now","date":"2012-08-22T07:00:50.172Z","type":"message"}
{"nick":"substack","message":"with this hypothetical library","date":"2012-08-22T07:00:57.396Z","type":"message"}
{"nick":"Raynos","message":"yes much","date":"2012-08-22T07:00:58.731Z","type":"message"}
{"nick":"Raynos","message":"substack: https://github.com/Raynos/selectron","date":"2012-08-22T07:01:07.563Z","type":"message"}
{"nick":"Raynos","message":"not hypothetical","date":"2012-08-22T07:01:10.536Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/Raynos/selectron/blob/master/index.js#L8","date":"2012-08-22T07:01:25.773Z","type":"message"}
{"nick":"Raynos","message":"sel itself is the tie","date":"2012-08-22T07:01:29.279Z","type":"message"}
{"nick":"Raynos","message":"which is neat when it's useful","date":"2012-08-22T07:01:34.576Z","type":"message"}
{"nick":"substack","message":"the solution to messy code is to move the mess to npm where the mess can be isaacs's problem","date":"2012-08-22T07:01:38.200Z","type":"message"}
{"nick":"substack","message":"I like an explicit sel.tie slightly more but whatevs","date":"2012-08-22T07:02:24.889Z","type":"message"}
{"nick":"substack","message":"this is your module, anything goes!","date":"2012-08-22T07:02:35.448Z","type":"message"}
{"nick":"Raynos","message":"now I have to write my own sortable ._.","date":"2012-08-22T07:03:42.469Z","type":"message"}
{"nick":"substack","message":"whycome?","date":"2012-08-22T07:03:48.933Z","type":"message"}
{"nick":"Raynos","message":"11:28 PM <Raynos> BLARG","date":"2012-08-22T07:04:09.723Z","type":"message"}
{"nick":"Raynos","message":"11:29 PM <Raynos> you store the key on dataset","date":"2012-08-22T07:04:09.925Z","type":"message"}
{"nick":"Raynos","message":"11:29 PM <Raynos> sorta is too inflexible >_<","date":"2012-08-22T07:04:09.925Z","type":"message"}
{"nick":"substack","message":"why is storing the key unacceptable?","date":"2012-08-22T07:04:20.592Z","type":"message"}
{"nick":"substack","message":"when row.value is undefined the key gets deleted","date":"2012-08-22T07:04:37.546Z","type":"message"}
{"nick":"substack","message":"or do you not have keys?","date":"2012-08-22T07:05:16.979Z","type":"message"}
{"nick":"Raynos","message":"because I dont return an element","date":"2012-08-22T07:05:33.618Z","type":"message"}
{"nick":"Raynos","message":"and returning an element breaks my widget","date":"2012-08-22T07:05:38.750Z","type":"message"}
{"nick":"Raynos","message":"because the widget returns { appendTo }","date":"2012-08-22T07:05:44.665Z","type":"message"}
{"nick":"substack","message":"var div = document.createElement('div'); widget.appendTo(div); return div","date":"2012-08-22T07:06:53.795Z","type":"message"}
{"nick":"Raynos","message":"._.","date":"2012-08-22T07:07:54.879Z","type":"message"}
{"nick":"Raynos","message":"WRAPPER DIVS >:(","date":"2012-08-22T07:07:58.822Z","type":"message"}
{"nick":"Raynos","message":"LOUDBOT DOESNT BITCH IF I USE >:(","date":"2012-08-22T07:08:14.939Z","type":"message"}
{"nick":"LOUDBOT","message":"ACHIEVEMENT UNLOCKED: CARNABY STREET","date":"2012-08-22T07:08:15.932Z","type":"message"}
{"nick":"Raynos","message":"oh wait","date":"2012-08-22T07:08:19.975Z","type":"message"}
{"nick":"substack","message":"just expose widget.element :p","date":"2012-08-22T07:08:20.391Z","type":"message"}
{"nick":"substack","message":"so it can't work to only have appendTo because sorta needs to call insertBefore and appendChild with your html node","date":"2012-08-22T07:09:05.756Z","type":"message"}
{"nick":"substack","message":"because it does in-place updates the correct way where it only moves what it needs to move","date":"2012-08-22T07:09:38.073Z","type":"message"}
{"nick":"substack","message":"which was crazy hard to get precisely right","date":"2012-08-22T07:11:05.816Z","type":"message"}
{"nick":"Raynos","message":"UGH","date":"2012-08-22T07:12:26.872Z","type":"message"}
{"nick":"Raynos","message":"one of these two has to be an element","date":"2012-08-22T07:12:32.010Z","type":"message"}
{"nick":"Raynos","message":"i just realized that","date":"2012-08-22T07:12:50.015Z","type":"message"}
{"nick":"Raynos","message":"epic pain in ass","date":"2012-08-22T07:12:52.133Z","type":"message"}
{"nick":"substack","message":"can't you just change your widget?","date":"2012-08-22T07:13:44.403Z","type":"message"}
{"nick":"substack","message":"or else use a container div I don't see the problem","date":"2012-08-22T07:13:54.888Z","type":"message"}
{"nick":"maxogden","message":"substack: the way i solve the problem you described above is call http://underscorejs.org/#sortedIndex and then do 0 ? insertBefore : appendChild","date":"2012-08-22T07:15:17.312Z","type":"message"}
{"nick":"Raynos","message":"substack: https://gist.github.com/2f990fc882437fd358d5","date":"2012-08-22T07:16:13.911Z","type":"message"}
{"nick":"substack","message":"maxogden: but the previous element needs to be removed too","date":"2012-08-22T07:16:15.912Z","type":"message"}
{"nick":"substack","message":"maxogden: and changing the values adjusts the ordering","date":"2012-08-22T07:16:23.955Z","type":"message"}
{"nick":"Raynos","message":"I think my place abstraction can work","date":"2012-08-22T07:16:52.611Z","type":"message"}
{"nick":"joshwnj","reason":"Quit: ERC Version 5.3 (IRC client for Emacs)","date":"2012-08-22T07:20:10.560Z","type":"quit"}
{"nick":"Raynos","message":"substack: how do I remove an element from a sorta?","date":"2012-08-22T07:23:34.361Z","type":"message"}
{"nick":"Raynos","message":"oh i see","date":"2012-08-22T07:24:05.602Z","type":"message"}
{"nick":"substack","message":"Raynos: set its value to undefined","date":"2012-08-22T07:24:18.348Z","type":"message"}
{"nick":"Raynos","message":"substack: https://gist.github.com/11d6cb7218ef3258af77","date":"2012-08-22T07:26:48.589Z","type":"message"}
{"nick":"Raynos","message":"first iteration","date":"2012-08-22T07:26:50.635Z","type":"message"}
{"nick":"Raynos","message":"substack: the main change is that append function on the returned place","date":"2012-08-22T07:28:38.449Z","type":"message"}
{"nick":"Raynos","message":"so if a row in sorta had an append function and called that append function by default if you returned a dom element","date":"2012-08-22T07:29:09.883Z","type":"message"}
{"nick":"Raynos","message":"then it would solve most problems","date":"2012-08-22T07:29:13.887Z","type":"message"}
{"nick":"substack","message":"that wouldn't work","date":"2012-08-22T07:30:21.662Z","type":"message"}
{"nick":"substack","message":"sorta needs to insertBefore","date":"2012-08-22T07:30:27.910Z","type":"message"}
{"nick":"Raynos","message":"substack: the returned place is a placeholder","date":"2012-08-22T07:31:52.793Z","type":"message"}
{"nick":"Raynos","message":"its basically something that will be inserted into the sorted list soon but not yet","date":"2012-08-22T07:32:06.469Z","type":"message"}
{"nick":"substack","message":"why don't you have a regular dom element?","date":"2012-08-22T07:32:34.642Z","type":"message"}
{"nick":"Raynos","message":"its not that simple","date":"2012-08-22T07:32:46.325Z","type":"message"}
{"nick":"Raynos","message":"I basically dont want my logic in your createElement function","date":"2012-08-22T07:32:53.528Z","type":"message"}
{"nick":"Raynos","message":"I want a thing I can append elements to and update its value and be resorted outside of a callback","date":"2012-08-22T07:33:09.146Z","type":"message"}
{"nick":"Raynos","message":"and no wrapper elements","date":"2012-08-22T07:33:20.480Z","type":"message"}
{"nick":"Raynos","message":"I hate wrapper elements","date":"2012-08-22T07:33:23.456Z","type":"message"}
{"nick":"substack","message":"then just expose the widget element directly","date":"2012-08-22T07:33:33.421Z","type":"message"}
{"nick":"Raynos","message":"no >:(","date":"2012-08-22T07:33:40.225Z","type":"message"}
{"nick":"substack","message":"you don't actually need to create anything inside of createElement","date":"2012-08-22T07:33:43.314Z","type":"message"}
{"nick":"substack","message":"just return widgets[row.key].element","date":"2012-08-22T07:34:00.080Z","type":"message"}
{"nick":"thatguydan","reason":"Ping timeout: 272 seconds","date":"2012-08-22T07:34:06.039Z","type":"quit"}
{"nick":"Raynos","message":"no ._.","date":"2012-08-22T07:34:14.441Z","type":"message"}
{"nick":"Raynos","message":"i want to pass something into widget","date":"2012-08-22T07:34:21.506Z","type":"message"}
{"nick":"Raynos","message":"which has a append method","date":"2012-08-22T07:34:26.866Z","type":"message"}
{"nick":"substack","message":"that's way too ad-hoc for sorta to do","date":"2012-08-22T07:34:38.137Z","type":"message"}
{"nick":"substack","message":"you're just being difficult I say!","date":"2012-08-22T07:34:52.647Z","type":"message"}
{"nick":"Raynos","message":"I agree","date":"2012-08-22T07:34:58.489Z","type":"message"}
{"nick":"Raynos","message":"but its midnight","date":"2012-08-22T07:35:08.914Z","type":"message"}
{"nick":"Raynos","message":"i'll think of a more elegant solution later","date":"2012-08-22T07:35:14.730Z","type":"message"}
{"nick":"substack","message":"right","date":"2012-08-22T07:35:23.010Z","type":"message"}
{"nick":"Raynos","message":"the problem is I dont want the DOM element to leave the widget encapsulation ever","date":"2012-08-22T07:35:38.060Z","type":"message"}
{"nick":"Raynos","message":"dom elements go down into other things, not up out of things","date":"2012-08-22T07:35:55.402Z","type":"message"}
{"nick":"substack","message":"sometimes abstractions need raw elements","date":"2012-08-22T07:39:13.778Z","type":"message"}
{"nick":"substack","message":"raw elements are highly regular structures","date":"2012-08-22T07:39:20.813Z","type":"message"}
{"nick":"substack","message":"and it's not always possible to use generalized interfaces","date":"2012-08-22T07:39:37.438Z","type":"message"}
{"nick":"substack","message":"dom tree manipulation is a domain where this is often the case","date":"2012-08-22T07:39:56.062Z","type":"message"}
{"nick":"Raynos","message":"feck","date":"2012-08-22T07:41:14.700Z","type":"message"}
{"nick":"Raynos","message":"i raped my code","date":"2012-08-22T07:41:22.061Z","type":"message"}
{"nick":"Raynos","message":"now its lost all its readability","date":"2012-08-22T07:41:40.343Z","type":"message"}
{"nick":"Raynos","message":"and doesn't work","date":"2012-08-22T07:41:42.388Z","type":"message"}
{"nick":"substack","message":"git branch -M master fucked; git checkout -b master goodcommithash","date":"2012-08-22T07:47:02.294Z","type":"message"}
{"nick":"Raynos","message":"it sok","date":"2012-08-22T07:52:07.486Z","type":"message"}
{"nick":"Raynos","message":"ill go back and fix it alater","date":"2012-08-22T07:52:11.367Z","type":"message"}
{"nick":"mikeal","date":"2012-08-22T08:29:35.361Z","type":"join"}
{"nick":"AvianFlu","date":"2012-08-22T08:35:36.179Z","type":"join"}
{"nick":"simcop2387","reason":"Read error: Connection reset by peer","date":"2012-08-22T08:36:14.126Z","type":"quit"}
{"nick":"perlbot","reason":"Read error: Connection reset by peer","date":"2012-08-22T08:36:23.684Z","type":"quit"}
{"nick":"perlbot","date":"2012-08-22T08:46:32.570Z","type":"join"}
{"nick":"simcop2387","date":"2012-08-22T08:47:02.132Z","type":"join"}
{"nick":"AvianFlu","reason":"Quit: AvianFlu","date":"2012-08-22T09:32:22.197Z","type":"quit"}
{"nick":"thatguydan","date":"2012-08-22T09:57:37.969Z","type":"join"}
{"nick":"AvianFlu","date":"2012-08-22T10:00:41.214Z","type":"join"}
{"nick":"AvianFlu","reason":"Client Quit","date":"2012-08-22T10:05:12.783Z","type":"quit"}
{"nick":"thatguydan","reason":"Remote host closed the connection","date":"2012-08-22T10:47:46.443Z","type":"quit"}
{"nick":"thatguydan","date":"2012-08-22T10:47:58.112Z","type":"join"}
{"nick":"tilgovi","reason":"Ping timeout: 246 seconds","date":"2012-08-22T11:48:04.279Z","type":"quit"}
{"nick":"thatguydan_","date":"2012-08-22T11:50:39.103Z","type":"join"}
{"nick":"thatguydan","reason":"Read error: No route to host","date":"2012-08-22T11:54:26.471Z","type":"quit"}
{"nick":"thatguydan_","new_nick":"thatguydan","date":"2012-08-22T12:08:03.633Z","type":"nick"}
{"nick":"ITpro","reason":"Ping timeout: 250 seconds","date":"2012-08-22T12:16:29.870Z","type":"quit"}
{"nick":"chapel","reason":"Ping timeout: 268 seconds","date":"2012-08-22T12:33:47.155Z","type":"quit"}
{"nick":"sorensen","reason":"Ping timeout: 268 seconds","date":"2012-08-22T12:33:47.351Z","type":"quit"}
{"nick":"sorensen","date":"2012-08-22T12:35:15.408Z","type":"join"}
{"nick":"chapel","date":"2012-08-22T12:37:45.370Z","type":"join"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2012-08-22T12:48:24.701Z","type":"quit"}
{"nick":"dominictarr","date":"2012-08-22T14:55:04.164Z","type":"join"}
{"nick":"_sorensen","date":"2012-08-22T15:07:33.384Z","type":"join"}
{"nick":"AvianFlu","date":"2012-08-22T15:16:38.342Z","type":"join"}
{"nick":"ryan_stevens","date":"2012-08-22T15:21:04.585Z","type":"join"}
{"nick":"ryan_stevens","reason":"Client Quit","date":"2012-08-22T15:22:05.961Z","type":"quit"}
