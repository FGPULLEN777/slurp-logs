{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-07-15T00:31:14.363Z","type":"quit"}
{"nick":"saijanai_","reason":"Quit: saijanai_","date":"2012-07-15T00:36:57.447Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-15T00:44:56.419Z","type":"quit"}
{"nick":"mikeal","date":"2012-07-15T00:57:54.106Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T00:58:50.616Z","type":"message"}
{"nick":"mikeal","reason":"Client Quit","date":"2012-07-15T01:01:59.517Z","type":"quit"}
{"nick":"SubStack","message":"sandwich time","date":"2012-07-15T01:04:16.685Z","type":"message"}
{"nick":"ryan_stevens","date":"2012-07-15T01:28:05.649Z","type":"join"}
{"nick":"Raynos","message":"SubStack: https://github.com/Raynos/iterators How do I split this \"utility library\" into multiple sensible modules?","date":"2012-07-15T01:34:28.771Z","type":"message"}
{"nick":"mikeal","date":"2012-07-15T01:38:33.751Z","type":"join"}
{"nick":"simcop2387","reason":"Excess Flood","date":"2012-07-15T01:46:12.311Z","type":"quit"}
{"nick":"simcop2387","date":"2012-07-15T01:49:14.954Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-15T01:52:55.432Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T01:58:50.371Z","type":"message"}
{"nick":"antix","date":"2012-07-15T02:06:41.902Z","type":"join"}
{"nick":"mikeal","date":"2012-07-15T02:12:00.146Z","type":"join"}
{"nick":"guybrush","message":"Raynos: i would put every file you have in a separate module","date":"2012-07-15T02:21:20.987Z","type":"message"}
{"nick":"Raynos","message":"guybrush: I was thinking that, but then I feel it's too modular and too much noise on the npm","date":"2012-07-15T02:22:14.514Z","type":"message"}
{"nick":"guybrush","message":"right","date":"2012-07-15T02:22:20.936Z","type":"message"}
{"nick":"Raynos","message":"it would be like 14 different npm modules","date":"2012-07-15T02:22:21.302Z","type":"message"}
{"nick":"guybrush","message":"thats what i think too","date":"2012-07-15T02:22:24.944Z","type":"message"}
{"nick":"Raynos","message":"This code used to be in this library called after","date":"2012-07-15T02:22:38.098Z","type":"message"}
{"nick":"guybrush","message":"but noise isnt bad maybe","date":"2012-07-15T02:22:39.128Z","type":"message"}
{"nick":"guybrush","message":"its like good noise :D","date":"2012-07-15T02:22:51.432Z","type":"message"}
{"nick":"Raynos","message":"and after was a kitchen sink of iterator code, composite code and after itself. So i've already split that library in three different modules","date":"2012-07-15T02:22:57.605Z","type":"message"}
{"nick":"guybrush","message":"the only problem i see really is the namespace","date":"2012-07-15T02:23:02.606Z","type":"message"}
{"nick":"guybrush","message":"theres only so much good module-names :D","date":"2012-07-15T02:23:14.463Z","type":"message"}
{"nick":"guybrush","message":"but thats the only problem actually","date":"2012-07-15T02:23:28.604Z","type":"message"}
{"nick":"guybrush","message":"but you can use tarball/git-dependencies anyways","date":"2012-07-15T02:24:10.868Z","type":"message"}
{"nick":"Nexxy","message":"you just have to use... imagination!","date":"2012-07-15T02:24:34.418Z","type":"message"}
{"nick":"Raynos","message":"well","date":"2012-07-15T02:24:34.653Z","type":"message"}
{"nick":"Raynos","message":"I dont know whether to call these modules map / reduce / etc","date":"2012-07-15T02:24:43.523Z","type":"message"}
{"nick":"guybrush","message":"the good thing with npm is you can load all the modules with hoarders at once","date":"2012-07-15T02:25:09.382Z","type":"message"}
{"nick":"Raynos","message":"guybrush: for example map & filter are already taken","date":"2012-07-15T02:25:51.145Z","type":"message"}
{"nick":"guybrush","message":"maybe they are useable :D","date":"2012-07-15T02:26:18.873Z","type":"message"}
{"nick":"Raynos","message":"I could add 14 modules to npm as iterators-mapSync and iterators-map","date":"2012-07-15T02:26:46.222Z","type":"message"}
{"nick":"guybrush","message":"but i understand what you mean","date":"2012-07-15T02:26:50.258Z","type":"message"}
{"nick":"Raynos","message":"or I could add one module as iterators","date":"2012-07-15T02:26:51.199Z","type":"message"}
{"nick":"Raynos","message":"I'm actually taking this route with routil ( https://github.com/Raynos/routil/tree/master/lib ) and splitting out all of those into seperate modules","date":"2012-07-15T02:27:23.479Z","type":"message"}
{"nick":"SubStack","message":"mapper","date":"2012-07-15T02:27:30.589Z","type":"message"}
{"nick":"Raynos","message":"mapper name is taken to by some weird ODM","date":"2012-07-15T02:28:09.474Z","type":"message"}
{"nick":"guybrush","message":"map2 :D","date":"2012-07-15T02:28:33.240Z","type":"message"}
{"nick":"guybrush","message":"moarBetterMap","date":"2012-07-15T02:28:45.047Z","type":"message"}
{"nick":"Raynos","message":"this is silly","date":"2012-07-15T02:29:12.474Z","type":"message"}
{"nick":"dominictarr","date":"2012-07-15T02:31:30.673Z","type":"join"}
{"nick":"SubStack","message":"maple","date":"2012-07-15T02:32:56.713Z","type":"message"}
{"nick":"Raynos","message":"all the good names are taken","date":"2012-07-15T02:33:15.118Z","type":"message"}
{"nick":"SubStack","message":"false","date":"2012-07-15T02:33:19.362Z","type":"message"}
{"nick":"Raynos","message":"the module false is not taken yet","date":"2012-07-15T02:33:46.553Z","type":"message"}
{"nick":"Raynos","message":"should I upload `module.exports = false` as the false module?","date":"2012-07-15T02:33:56.848Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-15T02:33:57.525Z","type":"quit"}
{"nick":"guybrush","message":"a funny story regarding module-names is mu2 which is a newer version of mu, now you wonder why there are 2 mu-modules from the same author :D","date":"2012-07-15T02:34:09.352Z","type":"message"}
{"nick":"guybrush","message":"mu is like a npm-zombie","date":"2012-07-15T02:35:11.093Z","type":"message"}
{"nick":"SubStack","message":"Âµ","date":"2012-07-15T02:35:29.200Z","type":"message"}
{"nick":"jesusabdullah","message":"maxogden: Tell mikeal I said we don't have localhost redises, just cloud ones","date":"2012-07-15T02:41:05.973Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T02:58:50.413Z","type":"message"}
{"nick":"dominictarr","message":"hey SubStack, just discovered that I had a bug in JSONStream","date":"2012-07-15T03:07:54.792Z","type":"message"}
{"nick":"SubStack","message":"!","date":"2012-07-15T03:08:01.130Z","type":"message"}
{"nick":"dominictarr","message":"compared to the docs","date":"2012-07-15T03:08:16.057Z","type":"message"}
{"nick":"dominictarr","message":"I wrote docs that say \"if there is no match, emit the root\"","date":"2012-07-15T03:08:42.553Z","type":"message"}
{"nick":"dominictarr","message":"just got a PR that fixes it,","date":"2012-07-15T03:08:53.000Z","type":"message"}
{"nick":"SubStack","message":"didn't I send a pull request for that?","date":"2012-07-15T03:09:04.160Z","type":"message"}
{"nick":"SubStack","message":"emitting the root is a really surprising thing to do","date":"2012-07-15T03:09:17.514Z","type":"message"}
{"nick":"dominictarr","message":"https://github.com/dominictarr/JSONStream/pull/15","date":"2012-07-15T03:09:31.288Z","type":"message"}
{"nick":"dominictarr","message":"that is what I'm kinda thinking now","date":"2012-07-15T03:09:41.739Z","type":"message"}
{"nick":"SubStack","message":"that causes bugs and special handling to work around","date":"2012-07-15T03:10:14.622Z","type":"message"}
{"nick":"SubStack","message":"much better to update the docs I think","date":"2012-07-15T03:10:44.554Z","type":"message"}
{"nick":"dominictarr","message":"oh, yeah. we made that patch, but never updated the docs.","date":"2012-07-15T03:11:46.785Z","type":"message"}
{"nick":"dominictarr","message":"it probably makes more sense to emit an error or something if there are no matches.","date":"2012-07-15T03:13:18.695Z","type":"message"}
{"nick":"SubStack","message":"I don't think so","date":"2012-07-15T03:15:20.403Z","type":"message"}
{"nick":"SubStack","message":"just don't do anything","date":"2012-07-15T03:15:22.963Z","type":"message"}
{"nick":"SubStack","message":"exactly like it is now","date":"2012-07-15T03:15:25.728Z","type":"message"}
{"nick":"SubStack","message":"sometimes there are just no matches","date":"2012-07-15T03:15:32.650Z","type":"message"}
{"nick":"SubStack","message":"if a dataset is empty that doesn't mean that it is an error, just that there is no data","date":"2012-07-15T03:16:23.761Z","type":"message"}
{"nick":"SubStack","message":"if people want to throw an error on empty data sets they can listen on 'end' and check a counter","date":"2012-07-15T03:17:06.536Z","type":"message"}
{"nick":"SubStack","message":"http://www.faqs.org/docs/artu/ch01s06.html#id2878450","date":"2012-07-15T03:19:26.796Z","type":"message"}
{"nick":"jesusabdullah","new_nick":"jhizzle","date":"2012-07-15T03:38:53.482Z","type":"nick"}
{"nick":"isaacs","message":"hey, streamy folks.","date":"2012-07-15T03:47:33.215Z","type":"message"}
{"nick":"isaacs","message":"i got an idea, wanna hear it?","date":"2012-07-15T03:47:38.377Z","type":"message"}
{"nick":"dominictarr","message":"yes please","date":"2012-07-15T03:47:48.398Z","type":"message"}
{"nick":"isaacs","message":"you do something like foo = new ReadableWhateverStream(), right?","date":"2012-07-15T03:48:05.667Z","type":"message"}
{"nick":"isaacs","message":"then foo.read() --> either a buffer, or `null` if there's nothing available","date":"2012-07-15T03:48:22.266Z","type":"message"}
{"nick":"isaacs","message":"then, there's a foo.on('readable') that tells you there's something to be read.","date":"2012-07-15T03:48:45.545Z","type":"message"}
{"nick":"isaacs","message":"instead of foo.on('data') with the buffer","date":"2012-07-15T03:48:57.972Z","type":"message"}
{"nick":"isaacs","message":"this solves the \"must listen for data on the first tick\" problem","date":"2012-07-15T03:49:12.694Z","type":"message"}
{"nick":"isaacs","message":"if you don't foo.read() it, it doesnt' get lost, it just sits there, and the stream is just paused","date":"2012-07-15T03:49:38.911Z","type":"message"}
{"nick":"SubStack","message":"seems sort of terrible","date":"2012-07-15T03:50:03.490Z","type":"message"}
{"nick":"SubStack","message":"like polling","date":"2012-07-15T03:50:06.425Z","type":"message"}
{"nick":"isaacs","message":"SubStack: right, but there's no need to poll","date":"2012-07-15T03:50:13.261Z","type":"message"}
{"nick":"isaacs","message":"you get \"woken up\" by the event","date":"2012-07-15T03:50:18.758Z","type":"message"}
{"nick":"SubStack","message":"maybe call that \"flush\"","date":"2012-07-15T03:50:26.393Z","type":"message"}
{"nick":"isaacs","message":"it's basically like kqueue or epoll","date":"2012-07-15T03:50:26.637Z","type":"message"}
{"nick":"SubStack","message":"or something that's not \"read\"","date":"2012-07-15T03:50:30.724Z","type":"message"}
{"nick":"dominictarr","message":"isaacs, I think there is a simpler solution","date":"2012-07-15T03:50:46.080Z","type":"message"}
{"nick":"isaacs","message":"but! it makes backpressure *really* easy","date":"2012-07-15T03:50:48.683Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: which is?","date":"2012-07-15T03:50:52.228Z","type":"message"}
{"nick":"dominictarr","message":"if you want some thing buffered,","date":"2012-07-15T03:50:55.350Z","type":"message"}
{"nick":"dominictarr","message":"just pipe it into something like this: github.com/dominictarr/pause-stream","date":"2012-07-15T03:51:13.816Z","type":"message"}
{"nick":"SubStack","message":"agree","date":"2012-07-15T03:51:24.008Z","type":"message"}
{"nick":"SubStack","message":"core probably shouldn't be buffering","date":"2012-07-15T03:51:30.783Z","type":"message"}
{"nick":"isaacs","message":"well, the other thing about it, that makes this solution simple, is that file descriptors and sockets already behave this way","date":"2012-07-15T03:51:33.945Z","type":"message"}
{"nick":"isaacs","message":"have some thing internally effectively doing foo.on('readable', function () { foo.emit('data', foo.read()) })(","date":"2012-07-15T03:52:10.910Z","type":"message"}
{"nick":"isaacs","message":"(but like, in C, not in JS)","date":"2012-07-15T03:52:18.195Z","type":"message"}
{"nick":"isaacs","message":"and the foo.read() clears out some internal buffer, by actually calling read(2)","date":"2012-07-15T03:52:48.177Z","type":"message"}
{"nick":"Raynos","message":"i like the pause-stream thats what I used in some code of mine","date":"2012-07-15T03:53:11.846Z","type":"message"}
{"nick":"isaacs","message":"dominictarr:     \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"","date":"2012-07-15T03:53:41.439Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: i totally trolled you","date":"2012-07-15T03:53:47.717Z","type":"message"}
{"nick":"isaacs","message":";P","date":"2012-07-15T03:53:49.475Z","type":"message"}
{"nick":"isaacs","message":"if we did something like that, it'd be a \"lower level\" interface, and we'd have to keep the current interface working forever, of course.","date":"2012-07-15T03:55:11.421Z","type":"message"}
{"nick":"dominictarr","message":"isaacs, fixed in 0.0.3","date":"2012-07-15T03:55:23.567Z","type":"message"}
{"nick":"dominictarr","message":"I I though stream was being refactored?","date":"2012-07-15T03:55:54.260Z","type":"message"}
{"nick":"dominictarr","message":"I have some ideas for a few small changes.","date":"2012-07-15T03:56:14.755Z","type":"message"}
{"nick":"isaacs","message":"but like, createServer(function (req, res) { checkRedis(req.headers.cookie, function (blerg) { if (blerg == blergeyBlerg) { req.pipe(itsATrap) }) })","date":"2012-07-15T03:56:19.170Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: wanna get the discussion going?  send to node-dev","date":"2012-07-15T03:56:44.079Z","type":"message"}
{"nick":"dominictarr","message":"will do","date":"2012-07-15T03:56:54.682Z","type":"message"}
{"nick":"isaacs","message":"if it gets too noisy, we can take it offline.  don't engage with replies that are obvious nitwitery","date":"2012-07-15T03:57:03.611Z","type":"message"}
{"nick":"dominictarr","message":"sure.","date":"2012-07-15T03:57:13.812Z","type":"message"}
{"nick":"isaacs","message":"there will be plenty of STREAMS ARE FINE SHUTUP, and JUST USE STREAMLINE","date":"2012-07-15T03:57:20.788Z","type":"message"}
{"nick":"Raynos","message":"\"just use streamline\" ?","date":"2012-07-15T03:57:46.522Z","type":"message"}
{"nick":"isaacs","message":":D","date":"2012-07-15T03:57:53.018Z","type":"message"}
{"nick":"isaacs","message":"Raynos: have fun with that.","date":"2012-07-15T03:57:57.974Z","type":"message"}
{"nick":"Raynos","message":"who would say that","date":"2012-07-15T03:57:58.210Z","type":"message"}
{"nick":"isaacs","message":"hahah","date":"2012-07-15T03:58:01.254Z","type":"message"}
{"nick":"dominictarr","message":"oh, I have only really small very anal changes to propose.","date":"2012-07-15T03:58:03.665Z","type":"message"}
{"nick":"isaacs","message":"yeah","date":"2012-07-15T03:58:10.010Z","type":"message"}
{"nick":"Raynos","message":"oh the node-dev mailing list","date":"2012-07-15T03:58:17.256Z","type":"message"}
{"nick":"isaacs","message":"so, i have a bunch of beefs wiht the current streams.","date":"2012-07-15T03:58:22.374Z","type":"message"}
{"nick":"Raynos","message":"I was like \"whos in #node-dev\" and turns out it is no-one","date":"2012-07-15T03:58:28.660Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T03:58:50.676Z","type":"message"}
{"nick":"isaacs","message":"my biggest beef is that error handling is very hard, and you MUST pipe on the first tick.","date":"2012-07-15T03:58:57.218Z","type":"message"}
{"nick":"Raynos","message":"error handling is a pain","date":"2012-07-15T03:59:06.515Z","type":"message"}
{"nick":"dominictarr","message":"isaacs means the mailing list","date":"2012-07-15T03:59:07.987Z","type":"message"}
{"nick":"Raynos","message":"I wanted to have a process global stream","date":"2012-07-15T03:59:11.979Z","type":"message"}
{"nick":"Raynos","message":"and have each req/res pipe a new chunk of data into the stream","date":"2012-07-15T03:59:23.587Z","type":"message"}
{"nick":"isaacs","message":"also, it's not clear from the Stream class which bits are for the readable interface and which bits are for writable.","date":"2012-07-15T03:59:25.588Z","type":"message"}
{"nick":"Raynos","message":"but there is no way to return an error from a stream to a single req/res pair","date":"2012-07-15T03:59:34.068Z","type":"message"}
{"nick":"Raynos","message":"so I need a new stream for each req/res pair to be able to do error handling","date":"2012-07-15T03:59:57.897Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: actually, lemme start the thread.","date":"2012-07-15T04:00:07.527Z","type":"message"}
{"nick":"Raynos","message":"The node.js room is quiet. repost o/","date":"2012-07-15T04:00:31.374Z","type":"message"}
{"nick":"Raynos","message":"Need to write an article about node. Have a few ideas ( https://gist.github.com/ceb49738b2a26018829b ) anyone want to tell me which sounds the most interesting?","date":"2012-07-15T04:00:32.261Z","type":"message"}
{"nick":"isaacs","message":"i'll write something tonight.  your complaints will be a good addition, but i want to set it going in a productive direction, hopefully","date":"2012-07-15T04:00:33.437Z","type":"message"}
{"nick":"dominictarr","message":"isaacs, have you seen https://github.com/dominictarr/stream-spec/blob/master/stream_spec.md","date":"2012-07-15T04:00:37.485Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: looking","date":"2012-07-15T04:00:46.055Z","type":"message"}
{"nick":"dominictarr","message":"https://github.com/dominictarr/stream-spec/blob/master/states.markdown","date":"2012-07-15T04:00:47.792Z","type":"message"}
{"nick":"SubStack","message":"check this https://github.com/substack/mountie","date":"2012-07-15T04:02:17.686Z","type":"message"}
{"nick":"dominictarr","message":"on some streams (\"through\" aka \"filter\" streams) automatic pausing makes sense","date":"2012-07-15T04:02:17.926Z","type":"message"}
{"nick":"SubStack","message":"module that lets you compose web servers","date":"2012-07-15T04:02:29.247Z","type":"message"}
{"nick":"dominictarr","message":"but duplex streams are different.","date":"2012-07-15T04:03:22.056Z","type":"message"}
{"nick":"dominictarr","message":"adding pause semantics to the stream adds a burden to the stream author","date":"2012-07-15T04:04:27.546Z","type":"message"}
{"nick":"dominictarr","message":"but piping to a middleware stream that handles that when desired is much more flexible","date":"2012-07-15T04:05:26.562Z","type":"message"}
{"nick":"saijanai_","date":"2012-07-15T04:05:29.324Z","type":"join"}
{"nick":"Raynos","message":"\"middleware stream\"","date":"2012-07-15T04:05:53.903Z","type":"message"}
{"nick":"Raynos","message":"can we replace connect's middleware concept with streams yet","date":"2012-07-15T04:06:29.237Z","type":"message"}
{"nick":"dominictarr","message":"Raynos, maybe next week.","date":"2012-07-15T04:07:27.759Z","type":"message"}
{"nick":"Raynos","message":"the only thing that is missing","date":"2012-07-15T04:07:57.986Z","type":"message"}
{"nick":"dominictarr","message":"github.com/dominictarr/mw-pipes","date":"2012-07-15T04:08:01.261Z","type":"message"}
{"nick":"Raynos","message":"is accessing meta data of the req object","date":"2012-07-15T04:08:03.372Z","type":"message"}
{"nick":"Raynos","message":"like req.url","date":"2012-07-15T04:08:07.019Z","type":"message"}
{"nick":"dominictarr","message":"same as connect but allows you to pass a new stream to next and it becomes the new req or res","date":"2012-07-15T04:08:40.670Z","type":"message"}
{"nick":"SubStack","message":"there's no need to replace connect middleware","date":"2012-07-15T04:08:43.964Z","type":"message"}
{"nick":"dominictarr","message":"and the metadata is copied to it.","date":"2012-07-15T04:08:50.107Z","type":"message"}
{"nick":"SubStack","message":"just build big apps by composing lots of tiny apps together in separate processes","date":"2012-07-15T04:09:02.712Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: I dont like the req, res, next thing","date":"2012-07-15T04:09:07.158Z","type":"message"}
{"nick":"SubStack","message":"instead of throwing all the functionality into a single process","date":"2012-07-15T04:09:09.893Z","type":"message"}
{"nick":"Raynos","message":"SubStack: I agree that you just dont need middleware","date":"2012-07-15T04:09:23.198Z","type":"message"}
{"nick":"SubStack","message":"connect's issues become a non-problem","date":"2012-07-15T04:09:25.910Z","type":"message"}
{"nick":"SubStack","message":"use middleware if it makes sense for your tiny pieces but mostly just split things out into lots of federated subcomponents","date":"2012-07-15T04:09:51.945Z","type":"message"}
{"nick":"SubStack","message":"also you can scale like it's nothing","date":"2012-07-15T04:09:57.753Z","type":"message"}
{"nick":"SubStack","message":"spin up as many of each type of thing as you want","date":"2012-07-15T04:10:04.481Z","type":"message"}
{"nick":"SubStack","message":"run the pieces wherever you like","date":"2012-07-15T04:10:17.048Z","type":"message"}
{"nick":"SubStack","message":"with this approach you can actually achieve that idea of the cloud where you have the slider that goes to \"webscale\"","date":"2012-07-15T04:10:48.599Z","type":"message"}
{"nick":"dominictarr","message":"ohohoh","date":"2012-07-15T04:11:07.732Z","type":"message"}
{"nick":"dominictarr","message":"need a spedometer","date":"2012-07-15T04:11:13.958Z","type":"message"}
{"nick":"SubStack","message":"haha yes","date":"2012-07-15T04:11:17.885Z","type":"message"}
{"nick":"SubStack","message":"one of the pieces that remain is the service registry replication","date":"2012-07-15T04:11:25.035Z","type":"message"}
{"nick":"dominictarr","message":"like you get on ride on lawnmowers","date":"2012-07-15T04:11:28.537Z","type":"message"}
{"nick":"dominictarr","message":"but instead of saying [tortois] ... [rabbit]","date":"2012-07-15T04:11:47.250Z","type":"message"}
{"nick":"SubStack","message":"I've got pier working but I need to update the seaport clients to be able to accept multiple fallback hosts","date":"2012-07-15T04:11:55.208Z","type":"message"}
{"nick":"SubStack","message":"ideally registered in seaport itself","date":"2012-07-15T04:12:00.777Z","type":"message"}
{"nick":"dominictarr","message":"it says \"helloworld\" ... \"WEBSCALE\"","date":"2012-07-15T04:12:05.108Z","type":"message"}
{"nick":"SubStack","message":"so then seaport pier peers can register themselves and the fallbacks will be noted automatically","date":"2012-07-15T04:12:24.314Z","type":"message"}
{"nick":"SubStack","message":"robust as fuck","date":"2012-07-15T04:12:29.466Z","type":"message"}
{"nick":"SubStack","message":"especially when paired up with a system like zygote","date":"2012-07-15T04:12:42.468Z","type":"message"}
{"nick":"SubStack","message":"although that particular implementation requires refinement","date":"2012-07-15T04:12:49.242Z","type":"message"}
{"nick":"dominictarr","message":"connect is good at stuff like the cookie parser, etc","date":"2012-07-15T04:12:54.781Z","type":"message"}
{"nick":"SubStack","message":"yeah connect is fine","date":"2012-07-15T04:13:03.313Z","type":"message"}
{"nick":"SubStack","message":"just don't build big apps with it","date":"2012-07-15T04:13:07.870Z","type":"message"}
{"nick":"SubStack","message":"but you shouldn't build big apps PERIOD","date":"2012-07-15T04:13:12.581Z","type":"message"}
{"nick":"dominictarr","message":"little stuff that needs to happen first, but is reusable.","date":"2012-07-15T04:13:12.990Z","type":"message"}
{"nick":"SubStack","message":"so it's not a problem","date":"2012-07-15T04:13:16.977Z","type":"message"}
{"nick":"dominictarr","message":"I think the problem is that it's like (req, res)","date":"2012-07-15T04:13:27.516Z","type":"message"}
{"nick":"SubStack","message":"if you need streamier pieces just write separate processes to handle those parts and compose them into your application with something like mountie","date":"2012-07-15T04:13:42.999Z","type":"message"}
{"nick":"dominictarr","message":"it should be one duplex stream, like with tcp.","date":"2012-07-15T04:13:43.369Z","type":"message"}
{"nick":"dominictarr","message":"and websockets should be the same, as they are just http.","date":"2012-07-15T04:13:59.601Z","type":"message"}
{"nick":"dominictarr","message":"but like stream.websocket = true or something.","date":"2012-07-15T04:14:18.000Z","type":"message"}
{"nick":"dominictarr","message":"there is a need in some cases, for stuff like connect on streams.","date":"2012-07-15T04:14:44.030Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: use libraries for cookie parsing like routil-cookie","date":"2012-07-15T04:15:20.024Z","type":"message"}
{"nick":"Raynos","message":"if you need a cookie. then get the cookie in your route","date":"2012-07-15T04:15:51.928Z","type":"message"}
{"nick":"Raynos","message":"dont decide that \"all your routes need a cookie so always centrally get the cookie\"","date":"2012-07-15T04:16:07.209Z","type":"message"}
{"nick":"dominictarr","message":"isaacs, I don't have complaints really. just a few small improvements that might simplify stuff.","date":"2012-07-15T04:16:12.509Z","type":"message"}
{"nick":"dominictarr","message":"but so easy to just drop the cookie middle ware in.","date":"2012-07-15T04:17:03.529Z","type":"message"}
{"nick":"SubStack","message":"isaacs: also mountie elaborates more on why I think cluster is a harmful approach","date":"2012-07-15T04:17:09.442Z","type":"message"}
{"nick":"SubStack","message":"it makes load balancing too inflexible and system-specific","date":"2012-07-15T04:17:16.897Z","type":"message"}
{"nick":"SubStack","message":"just spin up more processes","date":"2012-07-15T04:17:22.944Z","type":"message"}
{"nick":"SubStack","message":"you should be doing that anyways and it's easy","date":"2012-07-15T04:17:28.147Z","type":"message"}
{"nick":"SubStack","message":"and it makes version management and redundancy simpler","date":"2012-07-15T04:17:42.783Z","type":"message"}
{"nick":"dominictarr","message":"SubStack, do you have some instrumentation you can apply to that, to measure performance?","date":"2012-07-15T04:18:41.306Z","type":"message"}
{"nick":"SubStack","message":"that could be valuable information","date":"2012-07-15T04:19:05.846Z","type":"message"}
{"nick":"SubStack","message":"I'm more thinking in terms of when you scale out based on cluster, you're limited to the resources of the system","date":"2012-07-15T04:19:26.724Z","type":"message"}
{"nick":"SubStack","message":"whereas if you start scaling onto the network early it's a much more fluid transition","date":"2012-07-15T04:19:49.999Z","type":"message"}
{"nick":"dominictarr","message":"the logical machine","date":"2012-07-15T04:19:59.857Z","type":"message"}
{"nick":"dominictarr","message":"I've been thinking about abstracting away the machine.","date":"2012-07-15T04:20:32.574Z","type":"message"}
{"nick":"dominictarr","message":"THE 'CLOUD' NEED TO BE MORE FLUFFY","date":"2012-07-15T04:20:59.679Z","type":"message"}
{"nick":"SubStack","message":"agreed","date":"2012-07-15T04:24:50.147Z","type":"message"}
{"nick":"blakmatrix","date":"2012-07-15T04:27:16.710Z","type":"join"}
{"nick":"pikpik","reason":"Changing host","date":"2012-07-15T04:29:48.006Z","type":"quit"}
{"nick":"pikpik","date":"2012-07-15T04:29:48.243Z","type":"join"}
{"nick":"pikpik","reason":"Changing host","date":"2012-07-15T04:29:48.243Z","type":"quit"}
{"nick":"pikpik","date":"2012-07-15T04:29:48.243Z","type":"join"}
{"nick":"dominictarr","message":"isaacs, what should I call the stream api you just proposed?","date":"2012-07-15T04:51:45.307Z","type":"message"}
{"nick":"dominictarr","message":"I am writing a current-stream -> your-stream adapter, just now.","date":"2012-07-15T04:52:07.877Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: call it \"dart-streams\"","date":"2012-07-15T04:54:37.769Z","type":"message"}
{"nick":"isaacs","message":"dominictarr: since it's a rip-off of their design ;)","date":"2012-07-15T04:54:44.278Z","type":"message"}
{"nick":"isaacs","message":"SubStack: does mountie do http proxying between processes?","date":"2012-07-15T04:55:14.804Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T04:58:50.776Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: where is this stream API ?","date":"2012-07-15T04:59:18.910Z","type":"message"}
{"nick":"dominictarr","message":"the one that isaacs suggest above","date":"2012-07-15T05:01:55.901Z","type":"message"}
{"nick":"dominictarr","message":"more like in dart.","date":"2012-07-15T05:01:59.508Z","type":"message"}
{"nick":"SubStack","message":"isaacs: not between, it just sets up an http proxy and then delegates to other servers over the network","date":"2012-07-15T05:02:02.529Z","type":"message"}
{"nick":"AvianFlu","reason":"Quit: Leaving","date":"2012-07-15T05:02:51.808Z","type":"quit"}
{"nick":"dominictarr","message":"SubStack, did you make a repo of the QoS stuff you where experimenting with?","date":"2012-07-15T05:05:12.515Z","type":"message"}
{"nick":"SubStack","message":"nah, didn't get that stuff working","date":"2012-07-15T05:08:32.867Z","type":"message"}
{"nick":"SubStack","message":"building some other things at the moment","date":"2012-07-15T05:08:46.516Z","type":"message"}
{"nick":"isaacs","message":"SubStack: oh, k","date":"2012-07-15T05:16:20.562Z","type":"message"}
{"nick":"isaacs","message":"SubStack: so each route mount point is pointed at a different port?","date":"2012-07-15T05:16:41.771Z","type":"message"}
{"nick":"isaacs","message":"it'd be nice if there was an easier way to separate an http server up into independent pieces that didn't rely on http proxying","date":"2012-07-15T05:17:54.831Z","type":"message"}
{"nick":"isaacs","message":"i think what i really want is just a hot-swappable router","date":"2012-07-15T05:18:15.312Z","type":"message"}
{"nick":"SubStack","message":"um that's pretty much what mountie does","date":"2012-07-15T05:18:25.362Z","type":"message"}
{"nick":"SubStack","message":"by way of seaport and bouncy","date":"2012-07-15T05:18:35.999Z","type":"message"}
{"nick":"SubStack","message":"you spin up services and they attach themselves into the routing tables","date":"2012-07-15T05:18:48.873Z","type":"message"}
{"nick":"isaacs","message":"SubStack: yeah, but at the cost of http routing","date":"2012-07-15T05:19:06.100Z","type":"message"}
{"nick":"SubStack","message":"but the servers that you spin up define how they fit into the routing system","date":"2012-07-15T05:19:06.910Z","type":"message"}
{"nick":"isaacs","message":"that's unacceptable.","date":"2012-07-15T05:19:11.333Z","type":"message"}
{"nick":"isaacs","message":"er, http proxying","date":"2012-07-15T05:19:21.250Z","type":"message"}
{"nick":"SubStack","message":"http proxying lets you split up the requests across multiple systems","date":"2012-07-15T05:19:39.517Z","type":"message"}
{"nick":"isaacs","message":"yeah, but it's unacceptably slow.","date":"2012-07-15T05:19:56.288Z","type":"message"}
{"nick":"SubStack","message":"and it prevents shared state","date":"2012-07-15T05:19:56.659Z","type":"message"}
{"nick":"isaacs","message":"nad complicated.","date":"2012-07-15T05:20:02.413Z","type":"message"}
{"nick":"SubStack","message":"well then fix node's http parser :p","date":"2012-07-15T05:20:14.431Z","type":"message"}
{"nick":"isaacs","message":"SubStack: it's the TCP layer that's unacceptable","date":"2012-07-15T05:20:26.718Z","type":"message"}
{"nick":"SubStack","message":"why?","date":"2012-07-15T05:20:44.093Z","type":"message"}
{"nick":"SubStack","message":"which part is too slow","date":"2012-07-15T05:20:47.748Z","type":"message"}
{"nick":"isaacs","message":"SubStack: you're doubling the number of tcp connections","date":"2012-07-15T05:21:06.101Z","type":"message"}
{"nick":"SubStack","message":"and for what purposes?","date":"2012-07-15T05:21:08.115Z","type":"message"}
{"nick":"isaacs","message":"i guess it's not so terrible if you have keepalives","date":"2012-07-15T05:21:20.548Z","type":"message"}
{"nick":"isaacs","message":"i can't put my stamp of approval on any server that is not as fast as inhumanely possibble.","date":"2012-07-15T05:21:56.330Z","type":"message"}
{"nick":"SubStack","message":"that's just silly","date":"2012-07-15T05:22:10.669Z","type":"message"}
{"nick":"isaacs","message":"faster = cheaper","date":"2012-07-15T05:22:29.891Z","type":"message"}
{"nick":"SubStack","message":"there are lots of good reasons to trade latency or throughput for horizontal scalability","date":"2012-07-15T05:22:32.783Z","type":"message"}
{"nick":"isaacs","message":"sure.","date":"2012-07-15T05:22:37.341Z","type":"message"}
{"nick":"isaacs","message":"but there are also ways to get horizontal scalability that don't reduce latency or throughput","date":"2012-07-15T05:23:03.206Z","type":"message"}
{"nick":"isaacs","message":"or make websockets trickier.","date":"2012-07-15T05:23:09.593Z","type":"message"}
{"nick":"SubStack","message":"we're out of ipv4 addresses","date":"2012-07-15T05:23:22.861Z","type":"message"}
{"nick":"Raynos","message":"i like the idea of having a single application with a single public facing http server","date":"2012-07-15T05:23:29.610Z","type":"message"}
{"nick":"SubStack","message":"maybe when ipv6 works","date":"2012-07-15T05:23:34.234Z","type":"message"}
{"nick":"Raynos","message":"that proxies requests to other internal http servers","date":"2012-07-15T05:23:35.991Z","type":"message"}
{"nick":"Raynos","message":"that way you can build your application out of re-usable components that expose their interface as a http server","date":"2012-07-15T05:23:50.913Z","type":"message"}
{"nick":"SubStack","message":"likewise!","date":"2012-07-15T05:23:52.545Z","type":"message"}
{"nick":"isaacs","message":"SubStack: i mean, you can have many servers running on one machine with one ipv4 just fine","date":"2012-07-15T05:23:54.240Z","type":"message"}
{"nick":"isaacs","message":"SubStack: sharing a single server handle","date":"2012-07-15T05:24:04.895Z","type":"message"}
{"nick":"isaacs","message":"and then only resort to proxying when you exceed the capacity of a single machine","date":"2012-07-15T05:24:18.886Z","type":"message"}
{"nick":"isaacs","message":"so, each server is complete, and can stand in for any other","date":"2012-07-15T05:24:50.126Z","type":"message"}
{"nick":"SubStack","message":"sharing state like that introduces a tier of complexity that can just be skipped most of the time","date":"2012-07-15T05:24:52.168Z","type":"message"}
{"nick":"isaacs","message":"how is it sharing state?","date":"2012-07-15T05:24:59.919Z","type":"message"}
{"nick":"SubStack","message":"the server handle","date":"2012-07-15T05:25:05.898Z","type":"message"}
{"nick":"isaacs","message":"the servers are separate processes","date":"2012-07-15T05:25:06.146Z","type":"message"}
{"nick":"isaacs","message":"that server handle is hardly \"state\".  it's just a fd","date":"2012-07-15T05:25:17.975Z","type":"message"}
{"nick":"SubStack","message":"I really dislike everything to do with sharing file descriptors that way","date":"2012-07-15T05:25:33.545Z","type":"message"}
{"nick":"isaacs","message":"with 8 processes all calling accept() on it","date":"2012-07-15T05:25:34.506Z","type":"message"}
{"nick":"dominictarr","message":"isaacs, https://github.com/dominictarr/dart-stream/blob/master/index.js","date":"2012-07-15T05:25:59.950Z","type":"message"}
{"nick":"dominictarr","message":"turning a readable writable stream into a dart stream like you described.","date":"2012-07-15T05:26:34.719Z","type":"message"}
{"nick":"isaacs","message":"SubStack: why?  it's significantly less \"state sharing\" than having 8 different processes that all talk to seaport","date":"2012-07-15T05:26:41.985Z","type":"message"}
{"nick":"SubStack","message":"the service registry approach is also way more flexible","date":"2012-07-15T05:27:04.626Z","type":"message"}
{"nick":"SubStack","message":"and you can very easily expand out into multiple servers","date":"2012-07-15T05:27:18.257Z","type":"message"}
{"nick":"SubStack","message":"and you get redundancy by just spinning up extras","date":"2012-07-15T05:27:39.167Z","type":"message"}
{"nick":"isaacs","message":"when talking about completely different services, sure.  or, if you need to expand past the bounds of a single machine.","date":"2012-07-15T05:27:45.266Z","type":"message"}
{"nick":"SubStack","message":"and you can just spin up more servers that attach themselves to the whole system","date":"2012-07-15T05:27:59.509Z","type":"message"}
{"nick":"SubStack","message":"you don't need to worry about the bounds of single machines","date":"2012-07-15T05:28:13.747Z","type":"message"}
{"nick":"isaacs","message":"SubStack: and you can also have each website be a cluster sharing a fd","date":"2012-07-15T05:28:15.746Z","type":"message"}
{"nick":"SubStack","message":"just spin up more machines","date":"2012-07-15T05:28:19.592Z","type":"message"}
{"nick":"dominictarr","message":"one particular service could still run as a single machine cluster","date":"2012-07-15T05:28:31.040Z","type":"message"}
{"nick":"SubStack","message":"isaacs: sure but that optimization seems premature","date":"2012-07-15T05:28:32.930Z","type":"message"}
{"nick":"isaacs","message":"SubStack: if each machine has more than one cpu, why not use them all?","date":"2012-07-15T05:28:34.172Z","type":"message"}
{"nick":"dominictarr","message":"what is wrong with that?","date":"2012-07-15T05:28:38.182Z","type":"message"}
{"nick":"SubStack","message":"I don't think we should be steering people towards the shared fd model at first, that should be a backfill approach","date":"2012-07-15T05:29:10.189Z","type":"message"}
{"nick":"SubStack","message":"I care about scaling system complexity first","date":"2012-07-15T05:29:22.318Z","type":"message"}
{"nick":"isaacs","message":"well, since most web sites are just one website, it makes a lot of sense.","date":"2012-07-15T05:29:30.772Z","type":"message"}
{"nick":"SubStack","message":"performance is a thing you can get some minions to hack on once the overall architecture is in place","date":"2012-07-15T05:29:42.321Z","type":"message"}
{"nick":"isaacs","message":"people make their choice based on the best performance/resource ratio.","date":"2012-07-15T05:29:44.890Z","type":"message"}
{"nick":"SubStack","message":"but that is a bad design","date":"2012-07-15T05:29:52.373Z","type":"message"}
{"nick":"Raynos","message":"I have to say the seaport thing is suprisingly complex","date":"2012-07-15T05:29:57.180Z","type":"message"}
{"nick":"SubStack","message":"one big nasty gigantic webapp","date":"2012-07-15T05:29:58.079Z","type":"message"}
{"nick":"isaacs","message":"SubStack: performance is a property of architectures, though, not of code!","date":"2012-07-15T05:29:59.331Z","type":"message"}
{"nick":"SubStack","message":"let's not do that","date":"2012-07-15T05:30:01.698Z","type":"message"}
{"nick":"isaacs","message":"you can't have minions make things performance.","date":"2012-07-15T05:30:04.581Z","type":"message"}
{"nick":"isaacs","message":"that's like expecting to have minions hack on security once the overall architecture is in place.","date":"2012-07-15T05:30:24.662Z","type":"message"}
{"nick":"SubStack","message":"Raynos: which part of it?","date":"2012-07-15T05:30:31.180Z","type":"message"}
{"nick":"SubStack","message":"yes seaport needs to solve a tricky problem to work well for my purposes","date":"2012-07-15T05:30:49.056Z","type":"message"}
{"nick":"Raynos","message":"I dont know what the web. prefix is for","date":"2012-07-15T05:30:54.512Z","type":"message"}
{"nick":"isaacs","message":"the overall architecture has a huge effect on performance.","date":"2012-07-15T05:30:56.507Z","type":"message"}
{"nick":"SubStack","message":"Raynos: it's so you can have other types of services on your network","date":"2012-07-15T05:31:07.282Z","type":"message"}
{"nick":"SubStack","message":"registered in your seaport registry","date":"2012-07-15T05:31:18.824Z","type":"message"}
{"nick":"Raynos","message":"so web.localhost is actually web.<domain>","date":"2012-07-15T05:31:22.221Z","type":"message"}
{"nick":"SubStack","message":"sure, where <domain> is just the req.header.host","date":"2012-07-15T05:31:41.642Z","type":"message"}
{"nick":"isaacs","message":"SubStack: of course, we're somewhat arguing past one another - you are building a much more complicated multi-headed thing than most websites.","date":"2012-07-15T05:31:43.101Z","type":"message"}
{"nick":"Raynos","message":"so adding web.beepboop.com and redirecting beepboop.com in hosts to localhost would work ?","date":"2012-07-15T05:31:45.694Z","type":"message"}
{"nick":"SubStack","message":"Raynos: yep!","date":"2012-07-15T05:32:02.777Z","type":"message"}
{"nick":"Raynos","message":"i like this personally","date":"2012-07-15T05:32:13.641Z","type":"message"}
{"nick":"SubStack","message":"I have something like that set up for beep.boop on my localhost","date":"2012-07-15T05:32:19.117Z","type":"message"}
{"nick":"SubStack","message":"using dnsmasq though so I can also experiment with subdomains","date":"2012-07-15T05:32:59.733Z","type":"message"}
{"nick":"SubStack","message":"dnsmasq is the best thing ever for experimenting with subdomains locally","date":"2012-07-15T05:33:11.202Z","type":"message"}
{"nick":"SubStack","message":"because you can set up wildcard records","date":"2012-07-15T05:33:29.005Z","type":"message"}
{"nick":"SubStack","message":"isaacs: I'm also arguing that most websites are doing it wrong by building big apps that are mostly just a single process","date":"2012-07-15T05:33:58.836Z","type":"message"}
{"nick":"SubStack","message":"and so I offer libraries to help realize that vision","date":"2012-07-15T05:34:23.499Z","type":"message"}
{"nick":"Raynos","message":"SubStack: https://gist.github.com/3115169","date":"2012-07-15T05:34:32.648Z","type":"message"}
{"nick":"Raynos","message":"when do you want seperate processes and when should you just forward an uri to another httpServer component in the same process ?","date":"2012-07-15T05:34:49.979Z","type":"message"}
{"nick":"SubStack","message":"that part is up to you","date":"2012-07-15T05:35:28.576Z","type":"message"}
{"nick":"SubStack","message":"but it should be easy so that people can make good choices about how to best split up their apps","date":"2012-07-15T05:36:00.941Z","type":"message"}
{"nick":"Raynos","message":"SubStack: I mean, I don't know what the value of the forward-in-one-process.js is. I just came up with that idea in the last couple of days","date":"2012-07-15T05:36:03.031Z","type":"message"}
{"nick":"SubStack","message":"you could totally have multiple services registered in a single process like that","date":"2012-07-15T05:37:03.550Z","type":"message"}
{"nick":"dominictarr","message":"isaacs, is this anything like what you where thinking? https://github.com/dominictarr/dart-stream/blob/master/index.js","date":"2012-07-15T05:37:20.637Z","type":"message"}
{"nick":"SubStack","message":"I'm unsure about when that would be a good idea though","date":"2012-07-15T05:37:21.936Z","type":"message"}
{"nick":"SubStack","message":"this is all pretty new territory","date":"2012-07-15T05:37:26.431Z","type":"message"}
{"nick":"SubStack","message":"isaacs: anyways it's fine and rather expected if node itself just builds the things that people clamor for like scaling servers by sharing fds across multiple copies of processes","date":"2012-07-15T05:38:31.440Z","type":"message"}
{"nick":"SubStack","message":"that's even a useful approach to improving performance in the design that I'm advocating","date":"2012-07-15T05:38:51.438Z","type":"message"}
{"nick":"SubStack","message":"I'm just advocating that we split up the apps before they get big into lots of processes","date":"2012-07-15T05:39:28.479Z","type":"message"}
{"nick":"SubStack","message":"because big apps get completely out of control and unmaintainable very quickly","date":"2012-07-15T05:39:54.104Z","type":"message"}
{"nick":"SubStack","message":"so we should start the process of splitting them up really early","date":"2012-07-15T05:40:07.015Z","type":"message"}
{"nick":"SubStack","message":"and err on the side of making overly small components for the same reason why it's a good idea to do that with modules","date":"2012-07-15T05:40:35.128Z","type":"message"}
{"nick":"Raynos","message":"i agree","date":"2012-07-15T05:41:25.402Z","type":"message"}
{"nick":"SubStack","message":"smallify all the things","date":"2012-07-15T05:41:54.877Z","type":"message"}
{"nick":"Raynos","message":"how do you spawn all these processes?","date":"2012-07-15T05:42:00.626Z","type":"message"}
{"nick":"SubStack","message":"you can just spin them up however","date":"2012-07-15T05:42:25.458Z","type":"message"}
{"nick":"SubStack","message":"there are some implicit design decisions in seaport that should mostly cause the effect that the order shouldn't matter","date":"2012-07-15T05:43:10.823Z","type":"message"}
{"nick":"Raynos","message":"well yes","date":"2012-07-15T05:43:25.372Z","type":"message"}
{"nick":"Raynos","message":"I mean, I currently use nodemon","date":"2012-07-15T05:43:31.149Z","type":"message"}
{"nick":"Raynos","message":"to restart my single process app when I make a change to a file","date":"2012-07-15T05:43:39.997Z","type":"message"}
{"nick":"SubStack","message":"I haven't messed with that one","date":"2012-07-15T05:43:43.461Z","type":"message"}
{"nick":"Raynos","message":"are there tools like that for restarting this multi process app whena  file is changed","date":"2012-07-15T05:43:55.883Z","type":"message"}
{"nick":"Raynos","message":"nodemon is very similar to forever / supervisor","date":"2012-07-15T05:44:02.669Z","type":"message"}
{"nick":"SubStack","message":"I don't usually do stuff when files change","date":"2012-07-15T05:44:23.560Z","type":"message"}
{"nick":"Raynos","message":"and as an aside, what do you use to restart these processes when they crash?","date":"2012-07-15T05:44:37.205Z","type":"message"}
{"nick":"SubStack","message":"where?","date":"2012-07-15T05:44:49.848Z","type":"message"}
{"nick":"Raynos","message":"in production","date":"2012-07-15T05:44:55.098Z","type":"message"}
{"nick":"Raynos","message":"because of an unknown error","date":"2012-07-15T05:44:59.711Z","type":"message"}
{"nick":"SubStack","message":"trying to get everything onto fleet","date":"2012-07-15T05:45:02.487Z","type":"message"}
{"nick":"dominictarr","message":"I gotta go eat. catch you dudes later","date":"2012-07-15T05:49:35.596Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: Leaving","date":"2012-07-15T05:49:56.246Z","type":"quit"}
{"nick":"devaholic","message":"mountie looks similar to what ive used haproxy for, with seaport","date":"2012-07-15T05:52:54.686Z","type":"message"}
{"nick":"devaholic","message":"having it in node would be handy, but if its the main entry point to x number of services, it might create a bottleneck? especially if a lot of the services are simple","date":"2012-07-15T05:54:59.521Z","type":"message"}
{"nick":"SubStack","message":"having the same process doing the routing and the seaport hosting?","date":"2012-07-15T05:58:42.966Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T05:58:50.368Z","type":"message"}
{"nick":"SubStack","message":"yep that could turn into a bottleneck, but check out http://github.com/substack/node-pier for getting around that","date":"2012-07-15T05:59:03.558Z","type":"message"}
{"nick":"devaholic","message":"no its like, having a pipe of size x routing to multiple other pipes which are all also size x","date":"2012-07-15T05:59:27.144Z","type":"message"}
{"nick":"SubStack","message":"then you could just replicate with a dedicated seaport server in your mountie handler","date":"2012-07-15T05:59:30.751Z","type":"message"}
{"nick":"devaholic","message":"i.e. http servers in node","date":"2012-07-15T05:59:32.479Z","type":"message"}
{"nick":"devaholic","message":"well yeah, then am i running 9 mounties to handle routing for 9 services?","date":"2012-07-15T06:00:05.303Z","type":"message"}
{"nick":"SubStack","message":"no you just have 1 mountie proc and 1 seaport proc","date":"2012-07-15T06:00:19.794Z","type":"message"}
{"nick":"SubStack","message":"and mountie replicates from seaport to get the routing data","date":"2012-07-15T06:00:31.524Z","type":"message"}
{"nick":"devaholic","message":"it works for scaling out in terms of separation of concerns, but im not sure it works to scale up throughput is all","date":"2012-07-15T06:03:02.557Z","type":"message"}
{"nick":"SubStack","message":"correct","date":"2012-07-15T06:03:34.248Z","type":"message"}
{"nick":"devaholic","message":"i hacked up a little thing for sort of doing both a few months ago, that reloads haproxy with seaproxy config anytime there is a change","date":"2012-07-15T06:04:17.020Z","type":"message"}
{"nick":"Raynos","message":"SubStack: https://github.com/Raynos/after.js/commit/0948a4936b980ce22684638c543744f3ba9c6309","date":"2012-07-15T06:07:11.344Z","type":"message"}
{"nick":"mikeal","date":"2012-07-15T06:07:17.015Z","type":"join"}
{"nick":"Raynos","message":"Your conversation on small modules made me split up after into 3 different modules o/","date":"2012-07-15T06:07:24.298Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:08:24.740Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:11:24.654Z","type":"message"}
{"nick":"SubStack","message":"awesome! \\o","date":"2012-07-15T06:11:30.948Z","type":"message"}
{"nick":"Raynos","message":"now I need to split up routil >_<","date":"2012-07-15T06:12:31.442Z","type":"message"}
{"nick":"Raynos","message":"and then ncore too ;_;","date":"2012-07-15T06:12:45.281Z","type":"message"}
{"nick":"Raynos","message":"so much code to split up","date":"2012-07-15T06:12:49.097Z","type":"message"}
{"nick":"SubStack","message":"no rush","date":"2012-07-15T06:14:04.784Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:14:24.840Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:15:24.663Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:17:27.168Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:19:27.194Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:20:25.979Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:22:24.621Z","type":"message"}
{"nick":"Raynos","message":"isaacs: https://github.com/isaacs/error-page/pull/2","date":"2012-07-15T06:25:00.056Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:25:54.734Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:27:54.705Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:28:54.704Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:30:56.770Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.56.32.168(dev4), 50.57.174.109(free2), 173.203.67.76(free3), 50.57.226.209(free4), 50.57.223.161(dev5), 50.57.174.114(dev), 50.57.174.117(dev2), 173.203.68.112(dev3), 50.56.27.70(dev-ie6-1), 184.106.106.66(dev-ie7-1), 184.106.106.46(dev-ie8-1), 50.57.171.229(dev-ie6-2), 50.57.174.101(dev-ie7-2), 50.57.174.105(dev-ie8-2), 184.106.99.27(dev-ie7-3), 50.56.64.186(dev-ie8-3)","date":"2012-07-15T06:32:26.550Z","type":"message"}
{"nick":"dominictarr","date":"2012-07-15T06:33:00.140Z","type":"join"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:33:24.610Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:34:24.880Z","type":"message"}
{"nick":"SubStack","message":"!","date":"2012-07-15T06:36:17.881Z","type":"message"}
{"nick":"SubStack","message":"that was a lot of them","date":"2012-07-15T06:36:22.394Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:36:24.579Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:38:55.002Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:39:54.709Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-07-15T06:42:20.600Z","type":"quit"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:42:26.795Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:45:24.614Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:47:24.722Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:51:27.663Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:52:54.605Z","type":"message"}
{"nick":"dominictarr","reason":"Ping timeout: 244 seconds","date":"2012-07-15T06:54:02.908Z","type":"quit"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:54:54.637Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-07-15T06:56:21.559Z","type":"quit"}
{"nick":"mikeal","date":"2012-07-15T06:57:12.743Z","type":"join"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:57:24.604Z","type":"message"}
{"nick":"mikeal","reason":"Client Quit","date":"2012-07-15T06:57:58.651Z","type":"quit"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:58:27.019Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T06:58:50.707Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T06:59:54.758Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T07:02:24.588Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T07:04:27.451Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T07:05:27.144Z","type":"message"}
{"nick":"mikeal","date":"2012-07-15T07:06:36.136Z","type":"join"}
{"nick":"dominictarr","date":"2012-07-15T07:15:53.300Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 246 seconds","date":"2012-07-15T07:22:33.432Z","type":"quit"}
{"nick":"Raynos","message":"isaacs: https://github.com/isaacs/npm-www/pull/51","date":"2012-07-15T07:54:06.485Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T07:58:50.341Z","type":"message"}
{"nick":"Raynos","message":"isaacs: every time I learn a bit more about the npm CLI I feel cleverer","date":"2012-07-15T08:03:18.821Z","type":"message"}
{"nick":"dominictarr","date":"2012-07-15T08:18:30.522Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 250 seconds","date":"2012-07-15T08:22:56.166Z","type":"quit"}
{"nick":"dominictarr","date":"2012-07-15T08:27:54.475Z","type":"join"}
{"nick":"devaholic","message":"Raynos o/","date":"2012-07-15T08:41:16.352Z","type":"message"}
{"nick":"Raynos","message":"devaholic: \\o","date":"2012-07-15T08:41:41.162Z","type":"message"}
{"nick":"devaholic","message":"hows it goin??","date":"2012-07-15T08:42:07.656Z","type":"message"}
{"nick":"Raynos","message":"pretty good","date":"2012-07-15T08:42:34.563Z","type":"message"}
{"nick":"Raynos","message":"writing some node code \\o/","date":"2012-07-15T08:42:42.850Z","type":"message"}
{"nick":"devaholic","message":"you are droppin down a lot of repos","date":"2012-07-15T08:42:47.914Z","type":"message"}
{"nick":"devaholic","message":"hehe","date":"2012-07-15T08:42:52.430Z","type":"message"}
{"nick":"Raynos","message":"yeah","date":"2012-07-15T08:42:52.828Z","type":"message"}
{"nick":"Raynos","message":"so much code to write ._.","date":"2012-07-15T08:43:10.397Z","type":"message"}
{"nick":"Raynos","message":"test-server is bad ass :D","date":"2012-07-15T08:43:14.660Z","type":"message"}
{"nick":"devaholic","message":"not enough time","date":"2012-07-15T08:43:21.242Z","type":"message"}
{"nick":"devaholic","message":"whats test-server about?","date":"2012-07-15T08:43:25.870Z","type":"message"}
{"nick":"Raynos","message":"devaholic: https://github.com/Raynos/routil-static/blob/master/test/test.js#L11","date":"2012-07-15T08:44:52.005Z","type":"message"}
{"nick":"Raynos","message":"devaholic: https://github.com/Raynos/test-server#example","date":"2012-07-15T08:45:07.751Z","type":"message"}
{"nick":"Raynos","message":"A quick and dirty way to generate a HTTP server to run your integration tests","date":"2012-07-15T08:45:17.193Z","type":"message"}
{"nick":"Raynos","message":"I should update the example to include explanation","date":"2012-07-15T08:45:25.543Z","type":"message"}
{"nick":"devaholic","message":"whats different from just using request + tap or something","date":"2012-07-15T08:47:03.333Z","type":"message"}
{"nick":"Raynos","message":"its not","date":"2012-07-15T08:48:27.260Z","type":"message"}
{"nick":"Raynos","message":"it's agnostic to test library","date":"2012-07-15T08:48:33.605Z","type":"message"}
{"nick":"Raynos","message":"it just removes the boilerplate of \"http://localhost:port\" from your test code","date":"2012-07-15T08:48:46.680Z","type":"message"}
{"nick":"Raynos","message":"and it handles creation of server and destruction of server cleanly for you","date":"2012-07-15T08:48:57.154Z","type":"message"}
{"nick":"Raynos","message":"devaholic: https://github.com/Raynos/test-server#example should be more obvouis now","date":"2012-07-15T08:50:58.515Z","type":"message"}
{"nick":"Raynos","message":"devaholic: how did you get 35 followers in a day","date":"2012-07-15T08:57:02.247Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T08:58:51.102Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: Leaving","date":"2012-07-15T09:03:12.724Z","type":"quit"}
{"nick":"devaholic","message":"Raynos: HN","date":"2012-07-15T09:22:20.675Z","type":"message"}
{"nick":"Raynos","message":"yeah I saw :)","date":"2012-07-15T09:22:30.757Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T09:58:50.629Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T10:58:50.363Z","type":"message"}
{"nick":"dominictarr","date":"2012-07-15T11:52:29.433Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T11:58:50.449Z","type":"message"}
{"nick":"devaholic","reason":"Ping timeout: 252 seconds","date":"2012-07-15T12:12:04.192Z","type":"quit"}
{"nick":"dominictarr","reason":"Ping timeout: 252 seconds","date":"2012-07-15T12:22:42.177Z","type":"quit"}
{"nick":"dominictarr","date":"2012-07-15T12:34:18.175Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T12:58:50.372Z","type":"message"}
{"nick":"LOUDBOT","date":"2012-07-15T13:07:34.510Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 252 seconds","date":"2012-07-15T13:20:16.198Z","type":"quit"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.226.209(free4)","date":"2012-07-15T13:50:24.779Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T13:58:50.536Z","type":"message"}
{"nick":"AvianFlu","date":"2012-07-15T14:00:22.066Z","type":"join"}
{"nick":"guybrush","message":"SubStack: how do you think about that approach: mount all client-side used modules like with wreq and expose the mount-prefix (e.g. /<prefix>/<module>) in some way to those modules","date":"2012-07-15T14:04:02.526Z","type":"message"}
{"nick":"guybrush","message":"so they can use static assets","date":"2012-07-15T14:04:27.349Z","type":"message"}
{"nick":"guybrush","message":"like... $('#myImg').attr('src',prefix+'/some/module/asset.jpeg')","date":"2012-07-15T14:05:28.932Z","type":"message"}
{"nick":"guybrush","message":"or maybe a browserify-plugin which adds some mountpoint? require('foo').mountPoint","date":"2012-07-15T14:07:24.870Z","type":"message"}
{"nick":"guybrush","message":"or should images which are used for styling-purposes just be put into css and go the yarnify way","date":"2012-07-15T14:09:47.198Z","type":"message"}
{"nick":"dominictarr","date":"2012-07-15T14:33:14.570Z","type":"join"}
{"nick":"chapel","message":"SubStack: you might enjoy this http://www.slideshare.net/stonse/netflix-cloud-platform-building-blocks","date":"2012-07-15T14:50:47.945Z","type":"message"}
{"nick":"chapel","message":"SubStack: it looks like they touch on the whole many parts of the whole architecture,","date":"2012-07-15T14:51:13.411Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T14:58:50.299Z","type":"message"}
{"nick":"dominictarr","reason":"Ping timeout: 255 seconds","date":"2012-07-15T15:01:31.439Z","type":"quit"}
{"nick":"devaholic","date":"2012-07-15T15:08:56.474Z","type":"join"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T15:12:27.391Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T15:58:50.380Z","type":"message"}
{"nick":"devaholic","reason":"Ping timeout: 248 seconds","date":"2012-07-15T16:07:36.409Z","type":"quit"}
{"nick":"dominictarr","date":"2012-07-15T16:22:39.738Z","type":"join"}
{"nick":"SubStack","message":"guybrush: not sure, requires experimentation!","date":"2012-07-15T16:24:49.432Z","type":"message"}
{"nick":"SubStack","message":"chapel: awesomeness","date":"2012-07-15T16:24:58.985Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T16:58:50.420Z","type":"message"}
{"nick":"AvianFlu","reason":"Quit: Leaving","date":"2012-07-15T17:42:55.502Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T17:58:50.365Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T18:07:27.449Z","type":"message"}
{"nick":"dominictarr","reason":"Ping timeout: 246 seconds","date":"2012-07-15T18:12:56.507Z","type":"quit"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.226.209(free4)","date":"2012-07-15T18:17:24.591Z","type":"message"}
{"nick":"ryan_stevens","date":"2012-07-15T18:18:18.424Z","type":"join"}
{"nick":"rowbit","message":"SubStack, pkrumins: Developers waiting in the queue for ie8 (Queue length: 1 on 1 servers. Total servers: 3)","date":"2012-07-15T18:22:56.778Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Developers waiting in the queue for ie8 (Queue length: 1 on 1 servers. Total servers: 3)","date":"2012-07-15T18:28:24.659Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T18:31:27.092Z","type":"message"}
{"nick":"jhizzle","new_nick":"jesusabdullah","date":"2012-07-15T18:47:52.960Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T18:58:50.354Z","type":"message"}
{"nick":"dominictarr","date":"2012-07-15T19:14:16.481Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T19:58:50.444Z","type":"message"}
{"nick":"rowbit","message":"Daily usage stats: []","date":"2012-07-15T19:58:50.681Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 50.57.174.101(dev-ie7-2)","date":"2012-07-15T19:59:27.463Z","type":"message"}
{"nick":"jesusabdullah","new_nick":"mr302","date":"2012-07-15T20:08:06.987Z","type":"nick"}
{"nick":"mr302","new_nick":"jesusabdullah","date":"2012-07-15T20:10:33.750Z","type":"nick"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T20:19:25.586Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T20:21:24.597Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-07-15T20:22:22.098Z","type":"quit"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T20:22:25.045Z","type":"message"}
{"nick":"rowbit","message":"SubStack, pkrumins: Encoders down: 173.203.67.76(free3)","date":"2012-07-15T20:24:54.701Z","type":"message"}
{"nick":"ryan_stevens","date":"2012-07-15T20:42:33.093Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T20:58:50.328Z","type":"message"}
{"nick":"dominictarr","reason":"Ping timeout: 240 seconds","date":"2012-07-15T21:00:29.103Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T21:58:50.572Z","type":"message"}
{"nick":"_sorensen","date":"2012-07-15T22:21:08.694Z","type":"join"}
{"nick":"_sorensen","reason":"Quit: Bye!","date":"2012-07-15T22:42:59.756Z","type":"quit"}
{"nick":"isaacs_mobile","date":"2012-07-15T22:50:54.057Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T22:58:50.589Z","type":"message"}
{"nick":"isaacs_mobile","reason":"Remote host closed the connection","date":"2012-07-15T23:19:38.062Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-07-15T23:22:10.357Z","type":"quit"}
{"nick":"ryan_stevens","date":"2012-07-15T23:37:20.072Z","type":"join"}
{"nick":"isaacs_mobile","date":"2012-07-15T23:48:51.473Z","type":"join"}
{"nick":"ryan_stevens","reason":"Quit: Leaving.","date":"2012-07-15T23:50:10.331Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: []","date":"2012-07-15T23:58:50.562Z","type":"message"}
