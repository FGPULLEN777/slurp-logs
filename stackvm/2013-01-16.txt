{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-01-16T00:00:02.464Z","type":"quit"}
{"nick":"ircretary","date":"2013-01-16T00:00:11.557Z","type":"join"}
{"nick":"wiwillia","reason":"Ping timeout: 260 seconds","date":"2013-01-16T00:02:10.046Z","type":"quit"}
{"nick":"Raynos","message":"mbalho: and back pressure!","date":"2013-01-16T00:05:37.213Z","type":"message"}
{"nick":"Raynos","message":"mbalho: I use mdm a lot, what is it?","date":"2013-01-16T00:05:53.686Z","type":"message"}
{"nick":"CoverSlide","message":"ecstasy?","date":"2013-01-16T00:06:01.924Z","type":"message"}
{"nick":"Raynos","message":"isaacs: when you pipe a stream into a transform you pipe one \"stream over time\" into another \"stream over time\" the transform stream simply returns a stream. It doesn't have this notion that each chunk in the original stream was transformed into the other stream in the same order","date":"2013-01-16T00:07:06.866Z","type":"message"}
{"nick":"isaacs","message":"i guess","date":"2013-01-16T00:07:26.028Z","type":"message"}
{"nick":"isaacs","message":"but doing it in parallel is certainly unusual and weird.","date":"2013-01-16T00:07:35.588Z","type":"message"}
{"nick":"Raynos","message":"isaacs: I guess a transformation stream that respects order is nicer because its inversable","date":"2013-01-16T00:07:36.184Z","type":"message"}
{"nick":"Raynos","message":"isaacs: if the transformation operation is commutative then why not parallelize it","date":"2013-01-16T00:07:54.003Z","type":"message"}
{"nick":"isaacs","message":"i gues","date":"2013-01-16T00:08:05.497Z","type":"message"}
{"nick":"isaacs","message":"but i don't see the value in adding that kind of machinery to node core.","date":"2013-01-16T00:08:13.077Z","type":"message"}
{"nick":"isaacs","message":"since we never ever do that.","date":"2013-01-16T00:08:15.947Z","type":"message"}
{"nick":"isaacs","message":"zlib and crypto can't work that way","date":"2013-01-16T00:08:26.767Z","type":"message"}
{"nick":"tilgovi","reason":"Ping timeout: 264 seconds","date":"2013-01-16T00:09:12.452Z","type":"quit"}
{"nick":"Raynos","message":"isaacs: is there no commutative transformation stream in node-core ?","date":"2013-01-16T00:09:23.129Z","type":"message"}
{"nick":"Raynos","message":"I guess the only transforms are zlib and crypto","date":"2013-01-16T00:09:49.603Z","type":"message"}
{"nick":"Raynos","message":"isaacs: the only value in adding it to node-core is completeness and having a single correct implementation instead of 20 buggy ones","date":"2013-01-16T00:11:15.263Z","type":"message"}
{"nick":"Raynos","message":"but that's bullshit, userland should self organize and not be buggy","date":"2013-01-16T00:11:54.549Z","type":"message"}
{"nick":"CoverSlide","message":"isaacs: still trying to understand streams2, so basically I have a streaming parser thing, which has a read() method, and collects an array of buffers and has a cursor to know where to start reading from, returns false if it requests more bytes than there are available. essentially does the new stream interface make this obsolete?","date":"2013-01-16T00:12:25.218Z","type":"message"}
{"nick":"isaacs","message":"CoverSlide: talk to Raynos, I'm in the middle of tracking down a bug atm.","date":"2013-01-16T00:15:14.173Z","type":"message"}
{"nick":"CoverSlide","message":"oh ok","date":"2013-01-16T00:15:19.175Z","type":"message"}
{"nick":"Raynos","message":"CoverSlide: probably. streams2 is a pull stream where you can pull values out","date":"2013-01-16T00:15:23.229Z","type":"message"}
{"nick":"isaacs","message":"CoverSlide: i can answer surface questions, but i'm already in a stack, can't dive into another one :)","date":"2013-01-16T00:15:29.852Z","type":"message"}
{"nick":"Raynos","message":"CoverSlide: Actually I think streams2 will return 10 bytes if you read(20) im not sure","date":"2013-01-16T00:16:11.428Z","type":"message"}
{"nick":"CoverSlide","message":"hmm","date":"2013-01-16T00:17:34.849Z","type":"message"}
{"nick":"Raynos","message":"CoverSlide: nope wrong. read(20) returns null if there are 10 bytes","date":"2013-01-16T00:18:56.910Z","type":"message"}
{"nick":"Raynos","message":"so yes streams2 makes your thing redundant","date":"2013-01-16T00:19:05.059Z","type":"message"}
{"nick":"ins0mnia","reason":"Ping timeout: 246 seconds","date":"2013-01-16T00:30:13.803Z","type":"quit"}
{"nick":"ralphtheninja","date":"2013-01-16T00:31:36.805Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-01-16T00:35:17.097Z","type":"quit"}
{"nick":"jibay","reason":"Quit: Leaving","date":"2013-01-16T00:38:05.593Z","type":"quit"}
{"nick":"mbalho","message":"Raynos: there are just incorrect examples in the mdm readme is all","date":"2013-01-16T00:42:28.462Z","type":"message"}
{"nick":"Raynos","message":"mbalho: there are?","date":"2013-01-16T00:43:04.861Z","type":"message"}
{"nick":"mbalho","message":"Raynos: yea after i get my thing working i can fix em","date":"2013-01-16T00:43:20.938Z","type":"message"}
{"nick":"Raynos","message":"heh","date":"2013-01-16T00:43:26.937Z","type":"message"}
{"nick":"tilgovi","date":"2013-01-16T00:45:03.495Z","type":"join"}
{"nick":"wiwillia","date":"2013-01-16T00:47:20.738Z","type":"join"}
{"nick":"substack","message":"mbalho: https://0fps.wordpress.com/2013/01/15/new-years-resolution-post-more-stuff-on-npm/","date":"2013-01-16T00:51:13.513Z","type":"message"}
{"nick":"chrisdickinson","message":"woo!","date":"2013-01-16T00:53:10.513Z","type":"message"}
{"nick":"mbalho","message":"I JUST IMPLEMENTED BLOCK PERSISTENCE USING SCUTTLEBUTT AND MUX DEMUX","date":"2013-01-16T01:00:10.080Z","type":"message"}
{"nick":"LOUDBOT","message":"JOIN A HACKER MONESTARY","date":"2013-01-16T01:00:10.790Z","type":"message"}
{"nick":"mbalho","message":"substack: WOO!!!","date":"2013-01-16T01:00:17.530Z","type":"message"}
{"nick":"mbalho","message":"substack: that blog post rules","date":"2013-01-16T01:00:20.879Z","type":"message"}
{"nick":"Raynos","message":"chrisdickinson: https://github.com/mikolalysenko/Serverify/issues/1","date":"2013-01-16T01:00:32.169Z","type":"message"}
{"nick":"chrisdickinson","message":"Raynos: ah, guessing you're referring to browservefy there too :)","date":"2013-01-16T01:01:17.156Z","type":"message"}
{"nick":"Raynos","message":"yes!","date":"2013-01-16T01:01:22.724Z","type":"message"}
{"nick":"Raynos","message":"not directly","date":"2013-01-16T01:01:26.848Z","type":"message"}
{"nick":"Raynos","message":"but all of those tools are annoying","date":"2013-01-16T01:01:31.494Z","type":"message"}
{"nick":"chrisdickinson","message":"annoying how?","date":"2013-01-16T01:01:48.725Z","type":"message"}
{"nick":"mbalho","message":"substack: come test the new voxel server! you can also refresh and it will sync the world changes to you over scuttlebutt","date":"2013-01-16T01:01:49.861Z","type":"message"}
{"nick":"mbalho","message":"http://voxel.jit.su","date":"2013-01-16T01:01:55.251Z","type":"message"}
{"nick":"Raynos","message":"chrisdickinson: too much bullshit gets scaffolded","date":"2013-01-16T01:02:55.570Z","type":"message"}
{"nick":"Raynos","message":"too many commands to run","date":"2013-01-16T01:03:01.432Z","type":"message"}
{"nick":"chrisdickinson","message":"ah, mine doesn't really scaffold, which is the only problem i've had with mine","date":"2013-01-16T01:03:10.086Z","type":"message"}
{"nick":"chrisdickinson","message":"it just serves up the directory and browserifies a single path","date":"2013-01-16T01:03:31.212Z","type":"message"}
{"nick":"Raynos","message":"chrisdickinson: well however I try either the \"server tool does everything\" is inflexible or the scaffolding generates too much bullshit","date":"2013-01-16T01:03:38.639Z","type":"message"}
{"nick":"chrisdickinson","message":"i'd say having a default index.html if one doesn't exist would fix the problem","date":"2013-01-16T01:04:04.587Z","type":"message"}
{"nick":"chrisdickinson","message":"then you can add an index.html later","date":"2013-01-16T01:04:11.479Z","type":"message"}
{"nick":"chrisdickinson","message":"(if you need to)","date":"2013-01-16T01:04:15.419Z","type":"message"}
{"nick":"Raynos","message":"chrisdickinson: probably","date":"2013-01-16T01:04:43.361Z","type":"message"}
{"nick":"mbalho","message":"substack: whoa its buggy hahahaha","date":"2013-01-16T01:05:09.797Z","type":"message"}
{"nick":"chrisdickinson","message":"i generally don't like scaffolding much","date":"2013-01-16T01:05:11.116Z","type":"message"}
{"nick":"Raynos","message":"chrisdickinson: The only scaffolding I like is auto generated package.json and Makefil","date":"2013-01-16T01:05:29.195Z","type":"message"}
{"nick":"chrisdickinson","action":"nods ","date":"2013-01-16T01:05:38.386Z","type":"action"}
{"nick":"Raynos","message":"and also project -.-","date":"2013-01-16T01:05:48.023Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/Raynos/ngen/tree/raynos/templates/testling/content so much bullshit","date":"2013-01-16T01:06:07.247Z","type":"message"}
{"nick":"Raynos","message":"it is sad","date":"2013-01-16T01:06:08.390Z","type":"message"}
{"nick":"chrisdickinson","message":"oh nice","date":"2013-01-16T01:06:22.015Z","type":"message"}
{"nick":"chrisdickinson","message":"is that published on npm?","date":"2013-01-16T01:06:37.642Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2013-01-16T01:06:54.363Z","type":"message"}
{"nick":"Raynos","message":"raynos-ngen","date":"2013-01-16T01:06:56.018Z","type":"message"}
{"nick":"chrisdickinson","message":"sweet","date":"2013-01-16T01:06:58.986Z","type":"message"}
{"nick":"Raynos","message":"it may have my name hardcoded in the template somewhere :D","date":"2013-01-16T01:07:10.784Z","type":"message"}
{"nick":"chrisdickinson","message":"i'd say that scaffolding and \"lightweight browserify server\" should be separate","date":"2013-01-16T01:08:22.639Z","type":"message"}
{"nick":"chrisdickinson","message":"and we could just have a default empty index.html for things missing dirs","date":"2013-01-16T01:08:37.112Z","type":"message"}
{"nick":"mbalho","message":"Raynos: is there a LRU or anything built into scuttlebutt/model","date":"2013-01-16T01:08:44.775Z","type":"message"}
{"nick":"Raynos","message":"mbalho: use Raynos/expiry-model","date":"2013-01-16T01:08:53.816Z","type":"message"}
{"nick":"Raynos","message":"scuttlebutt/model has no LRU","date":"2013-01-16T01:09:03.019Z","type":"message"}
{"nick":"shama","message":"ahh Im being buried alive","date":"2013-01-16T01:09:20.045Z","type":"message"}
{"nick":"Raynos","message":"expiry-model is build to not expand in memory usage","date":"2013-01-16T01:09:23.700Z","type":"message"}
{"nick":"mbalho","message":"shama: there are tons of bugs still but its getting there","date":"2013-01-16T01:10:19.435Z","type":"message"}
{"nick":"shama","message":"its totally awesome","date":"2013-01-16T01:10:41.428Z","type":"message"}
{"nick":"mbalho","message":"AHAHAHahaha","date":"2013-01-16T01:12:30.391Z","type":"message"}
{"nick":"shama","message":"lol","date":"2013-01-16T01:12:32.994Z","type":"message"}
{"nick":"mbalho","message":"ok gotta run","date":"2013-01-16T01:13:03.317Z","type":"message"}
{"nick":"ryan_stevens","date":"2013-01-16T01:19:53.165Z","type":"join"}
{"nick":"ryan_stevens","reason":"Client Quit","date":"2013-01-16T01:20:10.841Z","type":"quit"}
{"nick":"ryan_stevens","date":"2013-01-16T01:22:28.145Z","type":"join"}
{"nick":"ryan_stevens","reason":"Remote host closed the connection","date":"2013-01-16T01:24:01.898Z","type":"quit"}
{"nick":"shama","reason":"Quit: shama","date":"2013-01-16T02:11:19.900Z","type":"quit"}
{"nick":"nk109","reason":"Quit: Computer has gone to sleep.","date":"2013-01-16T02:17:43.957Z","type":"quit"}
{"nick":"shama","date":"2013-01-16T03:01:24.368Z","type":"join"}
{"nick":"shama","reason":"Client Quit","date":"2013-01-16T03:02:08.911Z","type":"quit"}
{"nick":"wiwillia","reason":"Ping timeout: 248 seconds","date":"2013-01-16T03:16:36.740Z","type":"quit"}
{"nick":"devaholic","reason":"Ping timeout: 276 seconds","date":"2013-01-16T04:02:45.878Z","type":"quit"}
{"nick":"shama","date":"2013-01-16T04:11:13.087Z","type":"join"}
{"nick":"shama","reason":"Client Quit","date":"2013-01-16T04:12:27.148Z","type":"quit"}
{"nick":"exit2","date":"2013-01-16T04:32:08.778Z","type":"join"}
{"nick":"fotoverite","date":"2013-01-16T04:48:59.322Z","type":"join"}
{"nick":"dominictarr","date":"2013-01-16T04:52:05.899Z","type":"join"}
{"nick":"fotoverite","reason":"Read error: Connection reset by peer","date":"2013-01-16T04:52:08.438Z","type":"quit"}
{"nick":"fotoverite_","date":"2013-01-16T04:52:12.494Z","type":"join"}
{"nick":"exit2","reason":"Remote host closed the connection","date":"2013-01-16T04:52:13.912Z","type":"quit"}
{"nick":"fotoverite","date":"2013-01-16T04:55:12.494Z","type":"join"}
{"nick":"fotoverite_","reason":"Ping timeout: 252 seconds","date":"2013-01-16T04:56:54.492Z","type":"quit"}
{"nick":"dominictarr","reason":"Ping timeout: 248 seconds","date":"2013-01-16T04:59:15.967Z","type":"quit"}
{"nick":"mikola","date":"2013-01-16T05:03:08.096Z","type":"join"}
{"nick":"mikola","message":"hi","date":"2013-01-16T05:03:14.970Z","type":"message"}
{"nick":"substack","message":"ahoy","date":"2013-01-16T05:18:48.373Z","type":"message"}
{"nick":"mikola","message":"hey, nice job with voxeljs","date":"2013-01-16T05:19:19.913Z","type":"message"}
{"nick":"substack","action":"partially fixed the collision detection just now","date":"2013-01-16T05:20:10.214Z","type":"action"}
{"nick":"substack","message":"it's better at least","date":"2013-01-16T05:20:15.902Z","type":"message"}
{"nick":"wiwillia","date":"2013-01-16T05:21:54.049Z","type":"join"}
{"nick":"substack","message":"now finishing the pricing widget!","date":"2013-01-16T05:22:00.117Z","type":"message"}
{"nick":"Raynos","message":"mikola: o/","date":"2013-01-16T05:22:11.297Z","type":"message"}
{"nick":"Raynos","message":"thanks for feedback on browserify-server","date":"2013-01-16T05:22:25.436Z","type":"message"}
{"nick":"mikola","message":"Raynos: hey, no problem","date":"2013-01-16T05:23:07.277Z","type":"message"}
{"nick":"substack","message":"Raynos: eh?","date":"2013-01-16T05:23:12.210Z","type":"message"}
{"nick":"mikola","message":"I also changed the readme on serverify","date":"2013-01-16T05:23:18.084Z","type":"message"}
{"nick":"Raynos","message":"also awesome work on modules!","date":"2013-01-16T05:23:22.906Z","type":"message"}
{"nick":"mikola","message":"thanks!","date":"2013-01-16T05:23:29.519Z","type":"message"}
{"nick":"mikola","message":"I am putting together a little thing to deal with massive narrow band level sets in javascript","date":"2013-01-16T05:23:48.249Z","type":"message"}
{"nick":"Raynos","message":"substack: https://github.com/mikolalysenko/Serverify https://github.com/Raynos/browserify-server","date":"2013-01-16T05:23:50.219Z","type":"message"}
{"nick":"coffeecup_","date":"2013-01-16T05:25:41.381Z","type":"join"}
{"nick":"defunctzombie","message":"should get serverify to support npm-css haha","date":"2013-01-16T05:36:40.203Z","type":"message"}
{"nick":"dominictarr","date":"2013-01-16T05:51:31.784Z","type":"join"}
{"nick":"Raynos","message":"dominictarr: https://gist.github.com/477c8b821ea450c713c7","date":"2013-01-16T05:54:59.142Z","type":"message"}
{"nick":"Raynos","message":"that's the first useful thing I can think of for widgets","date":"2013-01-16T05:55:10.684Z","type":"message"}
{"nick":"dominictarr","message":"sure","date":"2013-01-16T05:55:46.527Z","type":"message"}
{"nick":"Raynos","message":"so this is exciting","date":"2013-01-16T05:56:12.074Z","type":"message"}
{"nick":"Raynos","message":"because var widget = Widget(); append(container, widget.elem) return widget; is annoying :D","date":"2013-01-16T05:56:32.001Z","type":"message"}
{"nick":"Raynos","message":"also I've been thinking about this more.","date":"2013-01-16T05:56:46.040Z","type":"message"}
{"nick":"dominictarr","message":"aha","date":"2013-01-16T05:57:12.094Z","type":"message"}
{"nick":"dominictarr","message":"so… what have you been thinking?","date":"2013-01-16T05:58:53.902Z","type":"message"}
{"nick":"substack","message":"I'm thinking I need to make fs.readFileSync() work in browserify already","date":"2013-01-16T05:59:16.213Z","type":"message"}
{"nick":"substack","message":"Raynos: return widget.appendChild || widget.element && widget.element.appendChild","date":"2013-01-16T06:00:14.052Z","type":"message"}
{"nick":"substack","message":"there's also insertBefore which is messy but sometimes you need","date":"2013-01-16T06:00:43.234Z","type":"message"}
{"nick":"Raynos","message":"substack: https://github.com/Raynos/insert/blob/master/append.js","date":"2013-01-16T06:00:56.335Z","type":"message"}
{"nick":"Raynos","message":"substack: http://dom.spec.whatwg.org/#parentnode","date":"2013-01-16T06:02:05.578Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: gisting","date":"2013-01-16T06:02:15.630Z","type":"message"}
{"nick":"dominictarr","message":"I'd rather you tell me about it in english","date":"2013-01-16T06:02:34.435Z","type":"message"}
{"nick":"Raynos","message":":D","date":"2013-01-16T06:06:09.659Z","type":"message"}
{"nick":"Raynos","message":"well it's exactly as I said yesterday.","date":"2013-01-16T06:06:20.077Z","type":"message"}
{"nick":"Raynos","message":"A widget takes some representation of what needs to be rendered and generates a view for it","date":"2013-01-16T06:06:33.261Z","type":"message"}
{"nick":"dominictarr","message":"aha","date":"2013-01-16T06:06:57.244Z","type":"message"}
{"nick":"dominictarr","message":"okay, you can show me the code now","date":"2013-01-16T06:07:13.851Z","type":"message"}
{"nick":"Raynos","message":"It then captures user input from the generated view and returns a streaming / reducible / event emitter representation of the user input and transforms it into a DOM agnostic thing","date":"2013-01-16T06:07:15.961Z","type":"message"}
{"nick":"Raynos","message":"and it then returns those \"events\" / \"stream\" and view","date":"2013-01-16T06:07:39.491Z","type":"message"}
{"nick":"Raynos","message":"https://gist.github.com/d9f6db8184a95bd52cf8","date":"2013-01-16T06:07:40.628Z","type":"message"}
{"nick":"Raynos","message":"the only difference between today and yesterday is that I implemented some code in this style","date":"2013-01-16T06:07:53.077Z","type":"message"}
{"nick":"Raynos","message":"and it works nicely","date":"2013-01-16T06:08:03.333Z","type":"message"}
{"nick":"Raynos","message":"because it puts a box around the DOM.","date":"2013-01-16T06:08:17.532Z","type":"message"}
{"nick":"Raynos","message":"emphasis being on input must map onto the DOM as cleanly as possible and DOM events must be transformed into logical events for your stuff as lightly as possible","date":"2013-01-16T06:08:39.953Z","type":"message"}
{"nick":"Raynos","message":"this pattern works the same if you replace reducers implementation detail with event emitters or streams","date":"2013-01-16T06:09:49.500Z","type":"message"}
{"nick":"Raynos","message":"substack: fs.readFileSync would be awesome for me","date":"2013-01-16T06:10:54.373Z","type":"message"}
{"nick":"Raynos","message":"substack: the only other thing I need you to do is leak process.env.NODE_ENV into the bundle ( https://github.com/Raynos/browserify-server/blob/master/index.js#L25 )","date":"2013-01-16T06:11:41.011Z","type":"message"}
{"nick":"Raynos","message":"also I should draw a picture","date":"2013-01-16T06:12:51.732Z","type":"message"}
{"nick":"Raynos","message":"of how this changed from what I did before","date":"2013-01-16T06:13:00.776Z","type":"message"}
{"nick":"dominictarr","message":"Raynos: cool. I think this pattern works well for UI->data bindings","date":"2013-01-16T06:15:17.934Z","type":"message"}
{"nick":"Raynos","message":"it works well for bidirectional things","date":"2013-01-16T06:15:50.298Z","type":"message"}
{"nick":"ralphtheninja","reason":"Ping timeout: 276 seconds","date":"2013-01-16T06:16:00.805Z","type":"quit"}
{"nick":"dominictarr","message":"what is a bidirectional widget that makes sense like this?","date":"2013-01-16T06:16:36.155Z","type":"message"}
{"nick":"Raynos","message":"lets say you have the bidirectional text editing thing","date":"2013-01-16T06:16:37.117Z","type":"message"}
{"nick":"Raynos","message":"and you want to patch on the users name to the state change of the text","date":"2013-01-16T06:16:53.491Z","type":"message"}
{"nick":"Raynos","message":"so that you can render history of text deltas","date":"2013-01-16T06:17:01.532Z","type":"message"}
{"nick":"dominictarr","message":"in that case, you can do that by hooking into the model","date":"2013-01-16T06:17:34.072Z","type":"message"}
{"nick":"dominictarr","message":"not the UI","date":"2013-01-16T06:17:36.719Z","type":"message"}
{"nick":"Raynos","message":"with this pattern its `var text = TextWidget(); return map(text, function (ev)  { ev.name = username })` instead of `var text = TextWidget(name)`","date":"2013-01-16T06:17:39.344Z","type":"message"}
{"nick":"dominictarr","message":"for that sort of case you go ui(model) -> element","date":"2013-01-16T06:18:01.924Z","type":"message"}
{"nick":"Raynos","message":"i did the latter before and pushed the state that's irrelevant about the ui into ui widget","date":"2013-01-16T06:18:19.878Z","type":"message"}
{"nick":"dominictarr","message":"because which user is editing a thing is not necessarily related to that UI","date":"2013-01-16T06:19:00.121Z","type":"message"}
{"nick":"Raynos","message":"exactly!","date":"2013-01-16T06:19:06.817Z","type":"message"}
{"nick":"Raynos","message":"but i pushed it into the UI widget so it could do `model.set(uuid(), { text: changedText, name: userName })`","date":"2013-01-16T06:19:31.843Z","type":"message"}
{"nick":"Raynos","message":"but maybe that was just me writing bad code","date":"2013-01-16T06:19:42.381Z","type":"message"}
{"nick":"dominictarr","message":"?","date":"2013-01-16T06:20:00.980Z","type":"message"}
{"nick":"Raynos","message":"well I have a TextWidget(feed) -> Element and I want it to add changes to the feed","date":"2013-01-16T06:20:31.773Z","type":"message"}
{"nick":"Raynos","message":"I had no clean way of ensuring that changes on the feed had both the text and user name context","date":"2013-01-16T06:20:44.791Z","type":"message"}
{"nick":"dominictarr","message":"that looks good","date":"2013-01-16T06:20:50.782Z","type":"message"}
{"nick":"Raynos","message":"user name is a bad example because its a global","date":"2013-01-16T06:20:51.114Z","type":"message"}
{"nick":"dominictarr","message":"the feed is a duplex stream?","date":"2013-01-16T06:21:07.816Z","type":"message"}
{"nick":"Raynos","message":"so I implemented the widget as TextWidget(feed, userName)","date":"2013-01-16T06:21:18.193Z","type":"message"}
{"nick":"Raynos","message":"lets imagine feed is instance of AppendOnly","date":"2013-01-16T06:21:24.450Z","type":"message"}
{"nick":"dominictarr","message":"I would probably go somethnig like","date":"2013-01-16T06:21:56.908Z","type":"message"}
{"nick":"Raynos","message":"now lets imagine the user can log out of the app and log in as another user without breaking the UI","date":"2013-01-16T06:22:00.091Z","type":"message"}
{"nick":"Raynos","message":"then that userName thing has to be a stream now","date":"2013-01-16T06:22:06.087Z","type":"message"}
{"nick":"dominictarr","message":"FeedWidget(feed, Template)","date":"2013-01-16T06:22:11.555Z","type":"message"}
{"nick":"Raynos","message":"and TextWidget has to do crazy state dance about \"what is current userName\"","date":"2013-01-16T06:22:16.002Z","type":"message"}
{"nick":"dominictarr","message":"where template returns and HTMLEelement/widget, that represents a particular item","date":"2013-01-16T06:22:41.189Z","type":"message"}
{"nick":"Raynos","message":"Oh I see!","date":"2013-01-16T06:23:00.642Z","type":"message"}
{"nick":"dominictarr","message":"the user name changes?","date":"2013-01-16T06:23:02.178Z","type":"message"}
{"nick":"dominictarr","message":"So, in this case, I think i'd use one thing to update the feed","date":"2013-01-16T06:23:29.088Z","type":"message"}
{"nick":"dominictarr","message":"and one thing to display it","date":"2013-01-16T06:23:37.088Z","type":"message"}
{"nick":"Raynos","message":"yeah the TextWidget updates the feed","date":"2013-01-16T06:23:41.565Z","type":"message"}
{"nick":"Raynos","message":"its a bi directional feed of the text in that widget for a collabartive text editing app","date":"2013-01-16T06:24:00.201Z","type":"message"}
{"nick":"dominictarr","message":"so I'd have a MessageEntry widget that calls feed.push(...)","date":"2013-01-16T06:24:04.213Z","type":"message"}
{"nick":"dominictarr","message":"and the FeedWidget would get triggered and render that item","date":"2013-01-16T06:24:30.474Z","type":"message"}
{"nick":"Raynos","message":"well MessageEntry needs to do feed.push({ textDelta: delta, userWhomEdits: user })","date":"2013-01-16T06:24:31.480Z","type":"message"}
{"nick":"defunctzombie","message":"substack: where is that server example for testling","date":"2013-01-16T06:24:37.642Z","type":"message"}
{"nick":"dominictarr","message":"yes","date":"2013-01-16T06:24:40.759Z","type":"message"}
{"nick":"Raynos","message":"but that's not what I want because MessageEntry shouldn't care about user","date":"2013-01-16T06:24:54.030Z","type":"message"}
{"nick":"Raynos","message":"I want MessageEntry().pipe(map(function (ev) { ev.userWhomEdits = user; return ev})).pipe(feed)","date":"2013-01-16T06:25:15.335Z","type":"message"}
{"nick":"Raynos","message":"i.e. the ability to move responsibility for unrelated shit up the scope","date":"2013-01-16T06:25:46.172Z","type":"message"}
{"nick":"dominictarr","message":"so, you go MessageEntry(function (message) { feed.push({user: UN, message: message})","date":"2013-01-16T06:25:58.599Z","type":"message"}
{"nick":"Raynos","message":"yes! that","date":"2013-01-16T06:26:16.606Z","type":"message"}
{"nick":"dominictarr","message":"or, what you said","date":"2013-01-16T06:26:17.324Z","type":"message"}
{"nick":"dominictarr","message":"or MessageEntry().on('message', function (mes) {...})","date":"2013-01-16T06:26:59.156Z","type":"message"}
{"nick":"Raynos","message":"in this case MessageEntry(feed) still takes feed because it needs to update text your editing if text delta comes in because it's like r-edit","date":"2013-01-16T06:27:01.911Z","type":"message"}
{"nick":"dominictarr","message":"that is strange behaviour for a chat widget","date":"2013-01-16T06:27:34.636Z","type":"message"}
{"nick":"substack","message":"defunctzombie: https://github.com/substack/testling-server-example","date":"2013-01-16T06:27:37.561Z","type":"message"}
{"nick":"Raynos","message":"so it takes input to render in it's UI widget and returns output that is a bunch of widget specific events / stream whatever","date":"2013-01-16T06:27:38.212Z","type":"message"}
{"nick":"defunctzombie","message":"substack: is there a way to detect what browser I am running under?","date":"2013-01-16T06:28:13.834Z","type":"message"}
{"nick":"defunctzombie","message":"I am trying to test something that should have different results in different browsers","date":"2013-01-16T06:28:42.069Z","type":"message"}
{"nick":"dominictarr","message":"so, I think in cases that the widget creates a model part - like a stream or an event emitter","date":"2013-01-16T06:28:42.755Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: yes it is. I wasn't talking about chat widget. I was talking about document editing widget. which has TextEntry for editing text and FeedWidget for viewing history","date":"2013-01-16T06:28:43.605Z","type":"message"}
{"nick":"dominictarr","message":"okay… so in that case, feed widget is a one way binding","date":"2013-01-16T06:29:34.449Z","type":"message"}
{"nick":"dominictarr","message":"you should have a list of usernames -> source_ids and the feed history, then you can show blame","date":"2013-01-16T06:30:26.738Z","type":"message"}
{"nick":"Raynos","message":"well that's a specific implementation detail of scuttlebutt","date":"2013-01-16T06:31:09.860Z","type":"message"}
{"nick":"Raynos","message":"its probably easier to not rely on source_id and just put user details in message","date":"2013-01-16T06:31:19.987Z","type":"message"}
{"nick":"dominictarr","message":"that would break r-edit","date":"2013-01-16T06:31:47.914Z","type":"message"}
{"nick":"dominictarr","message":"you would have to fork r-edit to add that feature","date":"2013-01-16T06:32:20.808Z","type":"message"}
{"nick":"dominictarr","message":"you are messing with stuff that is not part of the public api","date":"2013-01-16T06:33:03.817Z","type":"message"}
{"nick":"Raynos","message":"True","date":"2013-01-16T06:33:18.904Z","type":"message"}
{"nick":"Raynos","message":"but I'm trying to make a vague example :p","date":"2013-01-16T06:33:25.263Z","type":"message"}
{"nick":"Raynos","message":"of a situation where you want to wrap a widget's generic events in more app specific ones","date":"2013-01-16T06:33:42.524Z","type":"message"}
{"nick":"dominictarr","message":"And I'm trying to make your example realistic B)","date":"2013-01-16T06:33:51.666Z","type":"message"}
{"nick":"Raynos","message":"im just bad of thinkign of examples","date":"2013-01-16T06:33:55.467Z","type":"message"}
{"nick":"Raynos","message":"but the more you push app specific shit out of your widget and up to the widget creator's responsibility the modular and clean shit is.","date":"2013-01-16T06:34:40.217Z","type":"message"}
{"nick":"dominictarr","message":"just think how would I build fackbook, twitter, trello, etc","date":"2013-01-16T06:34:52.135Z","type":"message"}
{"nick":"Raynos","message":"also I implemented Set.every","date":"2013-01-16T06:34:57.511Z","type":"message"}
{"nick":"dominictarr","message":"usually with widget frameworks, it's like here is 30 widgets! you life is easy!","date":"2013-01-16T06:35:31.554Z","type":"message"}
{"nick":"dominictarr","message":"but that is wrong","date":"2013-01-16T06:35:38.034Z","type":"message"}
{"nick":"Raynos","message":"agreed","date":"2013-01-16T06:35:42.730Z","type":"message"}
{"nick":"dominictarr","message":"you need hundreds and hundreds","date":"2013-01-16T06:35:45.599Z","type":"message"}
{"nick":"Raynos","message":"I want a widget to be an app specific encapsulation of the DOM","date":"2013-01-16T06:35:52.318Z","type":"message"}
{"nick":"dominictarr","message":"… maybe not quite app specific","date":"2013-01-16T06:36:06.656Z","type":"message"}
{"nick":"Raynos","message":"the reason it's app specific is not the JS","date":"2013-01-16T06:36:09.181Z","type":"message"}
{"nick":"Raynos","message":"it's the HTML & CSS","date":"2013-01-16T06:36:11.726Z","type":"message"}
{"nick":"dominictarr","message":"yeah","date":"2013-01-16T06:36:15.070Z","type":"message"}
{"nick":"Raynos","message":"the HTML & CSS is very app specific","date":"2013-01-16T06:36:16.897Z","type":"message"}
{"nick":"dominictarr","message":"agree","date":"2013-01-16T06:36:17.029Z","type":"message"}
{"nick":"Raynos","message":"the JS is pretty generic","date":"2013-01-16T06:36:21.937Z","type":"message"}
{"nick":"dominictarr","message":"that is the problem with HTML","date":"2013-01-16T06:36:23.431Z","type":"message"}
{"nick":"Raynos","message":"gbut the nice thing is!","date":"2013-01-16T06:36:32.275Z","type":"message"}
{"nick":"Raynos","message":"I actually do `module.exports = Widget(template, Person)`","date":"2013-01-16T06:37:01.569Z","type":"message"}
{"nick":"Raynos","message":"so you could do `module.exports = Widget(myPersonTemplate, require(\"person-module\"))`","date":"2013-01-16T06:37:19.547Z","type":"message"}
{"nick":"Raynos","message":"and as long as there is a very thin contract between the template and the js module. i.e. \"there are these classes in the DOM that work with my query selectors\" or \"there are these meta data-x properties in the template which I can bind data to\" you can take generic modules and create specific html / css","date":"2013-01-16T06:38:05.946Z","type":"message"}
{"nick":"defunctzombie","message":"substack: how would you test something like this? https://github.com/runningskull/browser-kthx","date":"2013-01-16T06:38:37.252Z","type":"message"}
{"nick":"defunctzombie","message":"basically, want to see that the response is one thing when in IE 8 or so","date":"2013-01-16T06:39:01.785Z","type":"message"}
{"nick":"defunctzombie","message":"and another when in different browsers","date":"2013-01-16T06:39:06.831Z","type":"message"}
{"nick":"defunctzombie","message":"I can use useragent detection in the tests directly","date":"2013-01-16T06:39:18.962Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: iframes :D","date":"2013-01-16T06:39:21.571Z","type":"message"}
{"nick":"defunctzombie","message":"but was wondering if testling exposes the current browser in any way","date":"2013-01-16T06:39:31.243Z","type":"message"}
{"nick":"defunctzombie","message":"Raynos: haha","date":"2013-01-16T06:39:37.077Z","type":"message"}
{"nick":"Raynos","message":"your server starts x on port Y and your test opens iframe to testling:Y","date":"2013-01-16T06:39:46.389Z","type":"message"}
{"nick":"defunctzombie","message":"browserling you mean","date":"2013-01-16T06:40:13.661Z","type":"message"}
{"nick":"defunctzombie","message":"or testling as well I suppose","date":"2013-01-16T06:40:29.350Z","type":"message"}
{"nick":"Raynos","message":"i mean testling","date":"2013-01-16T06:40:40.017Z","type":"message"}
{"nick":"Raynos","message":"write an automated test","date":"2013-01-16T06:40:42.802Z","type":"message"}
{"nick":"defunctzombie","message":"I look forward to the day when computers will test themselves","date":"2013-01-16T06:41:29.482Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-01-16T06:44:45.382Z","type":"nick"}
{"nick":"mikola","message":"Latest package:  https://github.com/mikolalysenko/bit-twiddle","date":"2013-01-16T06:45:39.688Z","type":"message"}
{"nick":"substack","message":"defunctzombie_zz: nope there isn't anything to directly tell which browser is running aside from the UA","date":"2013-01-16T06:45:51.144Z","type":"message"}
{"nick":"substack","message":"mikola: sweet! this is the best possible new years resolution too: https://0fps.wordpress.com/2013/01/15/new-years-resolution-post-more-stuff-on-npm/","date":"2013-01-16T06:46:23.744Z","type":"message"}
{"nick":"mikola","message":"on the road to doing more geometry stuff in js","date":"2013-01-16T06:46:33.149Z","type":"message"}
{"nick":"mikola","message":"substack: haha, thanks","date":"2013-01-16T06:46:47.320Z","type":"message"}
{"nick":"mikola","message":"my next big project is to split this monstrosity up:  https://github.com/mikolalysenko/TrimeshJS","date":"2013-01-16T06:48:34.058Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: I get it. be more verbose :p","date":"2013-01-16T06:48:42.942Z","type":"message"}
{"nick":"dominictarr","message":"no, say what needs to be said","date":"2013-01-16T06:49:12.374Z","type":"message"}
{"nick":"substack","message":"mikola: did you see the voxel drone demo? http://shama.github.com/voxel-drone/","date":"2013-01-16T06:49:45.600Z","type":"message"}
{"nick":"dominictarr","message":"you need to explain what the pr actually does","date":"2013-01-16T06:49:51.171Z","type":"message"}
{"nick":"dominictarr","message":"and why I should pull it","date":"2013-01-16T06:49:56.428Z","type":"message"}
{"nick":"dominictarr","message":"don't expect someone to figure that out from reading your code","date":"2013-01-16T06:50:14.576Z","type":"message"}
{"nick":"dominictarr","message":"that is way to much work, and you are already in a good position to explain it, because you just wrote it.","date":"2013-01-16T06:50:43.417Z","type":"message"}
{"nick":"Raynos","message":"man I thought just adding tests to PR is good enough :p","date":"2013-01-16T06:51:31.303Z","type":"message"}
{"nick":"Raynos","message":"I have to actually explain it aswell?!","date":"2013-01-16T06:51:37.796Z","type":"message"}
{"nick":"dominictarr","message":"yes","date":"2013-01-16T06:51:42.272Z","type":"message"}
{"nick":"dominictarr","message":"this is actually the easyiest part though, because you already know what it does","date":"2013-01-16T06:52:20.973Z","type":"message"}
{"nick":"substack","message":"and if you can't explain something maybe it isn't narrow enough","date":"2013-01-16T06:53:01.089Z","type":"message"}
{"nick":"mikola","message":"substack:  Pretty cool!  I've never tried AR drone before, but I imagine that something like this could be useful for trying out different commands","date":"2013-01-16T06:54:23.697Z","type":"message"}
{"nick":"dominictarr_","date":"2013-01-16T06:55:31.403Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 246 seconds","date":"2013-01-16T06:56:37.773Z","type":"quit"}
{"nick":"dominictarr_","new_nick":"dominictarr","date":"2013-01-16T06:56:38.596Z","type":"nick"}
{"nick":"dominictarr","message":"reading code is hard work, so you have to convince me that it's worth my time","date":"2013-01-16T06:58:41.709Z","type":"message"}
{"nick":"wiwillia","reason":"Ping timeout: 260 seconds","date":"2013-01-16T06:59:24.050Z","type":"quit"}
{"nick":"ralphtheninja","date":"2013-01-16T07:04:21.506Z","type":"join"}
{"nick":"mikola","message":"Ok, I'm going to bed","date":"2013-01-16T07:06:00.133Z","type":"message"}
{"nick":"mikola","message":"bye","date":"2013-01-16T07:06:01.613Z","type":"message"}
{"nick":"gwenbell","reason":"Ping timeout: 260 seconds","date":"2013-01-16T07:06:19.213Z","type":"quit"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2013-01-16T07:08:59.113Z","type":"quit"}
{"nick":"mikola","reason":"Ping timeout: 245 seconds","date":"2013-01-16T07:12:33.144Z","type":"quit"}
{"nick":"dominictarr","message":"Raynos: https://github.com/dominictarr/crdt/pull/16#issuecomment-12307327","date":"2013-01-16T07:16:13.122Z","type":"message"}
{"nick":"ralphtheninja","reason":"Ping timeout: 245 seconds","date":"2013-01-16T07:16:48.448Z","type":"quit"}
{"nick":"Raynos","message":"domincitarr:","date":"2013-01-16T07:17:56.486Z","type":"message"}
{"nick":"Raynos","message":"https://github.com/dominictarr/crdt/pull/16#issuecomment-12307353","date":"2013-01-16T07:17:57.657Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: It's weird to listen to you talking ( http://vimeo.com/56227230 ) in video and then have you talk to me about something unrelated in chat","date":"2013-01-16T07:18:22.094Z","type":"message"}
{"nick":"Raynos","message":"ITS LIKE THERE ARE TWO OF YOU","date":"2013-01-16T07:18:28.819Z","type":"message"}
{"nick":"LOUDBOT","message":".A STRONG RIDGE OF HIGH PRESSURE WILL BUILD OVER THE WEST COAST ON SUNDAY RESULTING IN MUCH ABOVE NORMAL TEMPERATURES FOR THE SAN FRANCISCO BAY AREA AND CENTRAL COAST OF CALIFORNIA.","date":"2013-01-16T07:18:29.166Z","type":"message"}
{"nick":"dominictarr","message":"Raynos: a user SHOULD NOT use a stateful function as a fitler","date":"2013-01-16T07:21:25.209Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: agreed. but a function can have the same source code and not be stateful and still not be pure","date":"2013-01-16T07:21:50.817Z","type":"message"}
{"nick":"Raynos","message":"i.e. referencing closure bound variables that are constant","date":"2013-01-16T07:21:59.017Z","type":"message"}
{"nick":"Raynos","message":"i.e. using higher order functions to build sets","date":"2013-01-16T07:22:10.124Z","type":"message"}
{"nick":"dominictarr","message":"yes, so we shouldn't cache the set by the source","date":"2013-01-16T07:22:18.691Z","type":"message"}
{"nick":"dominictarr","message":"of the function","date":"2013-01-16T07:22:21.818Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2013-01-16T07:22:29.373Z","type":"message"}
{"nick":"dominictarr","message":"that is a bug","date":"2013-01-16T07:22:32.207Z","type":"message"}
{"nick":"Raynos","message":"which means either the user passes a uuid() for caching","date":"2013-01-16T07:22:38.831Z","type":"message"}
{"nick":"Raynos","message":"or no caching","date":"2013-01-16T07:22:40.270Z","type":"message"}
{"nick":"Raynos","message":"no, not uuid() thats stupid","date":"2013-01-16T07:22:50.196Z","type":"message"}
{"nick":"Raynos","message":"eitehr the user names the set or no caching","date":"2013-01-16T07:22:55.674Z","type":"message"}
{"nick":"dominictarr","message":"I will merge this","date":"2013-01-16T07:22:59.794Z","type":"message"}
{"nick":"thatguydan","reason":"Ping timeout: 255 seconds","date":"2013-01-16T07:23:02.595Z","type":"quit"}
{"nick":"dominictarr","message":"but can you add a thing that says not to use stateful functions in filters to the readme, and then i'll merge","date":"2013-01-16T07:23:48.248Z","type":"message"}
{"nick":"Raynos","message":":D","date":"2013-01-16T07:24:06.769Z","type":"message"}
{"nick":"Raynos","message":"btw !","date":"2013-01-16T07:24:41.437Z","type":"message"}
{"nick":"Raynos","message":"Rethinkdb","date":"2013-01-16T07:24:43.328Z","type":"message"}
{"nick":"dominictarr","message":"yeah, I've had a look at that","date":"2013-01-16T07:25:01.497Z","type":"message"}
{"nick":"Raynos","message":"has this database engine where you pass a filter function as like function (a, b) { return a.plus(b) }","date":"2013-01-16T07:25:09.353Z","type":"message"}
{"nick":"Raynos","message":"and it calls your function with two DBVar objects and you return a DBQuery object","date":"2013-01-16T07:25:27.981Z","type":"message"}
{"nick":"Raynos","message":"and it then runs that!","date":"2013-01-16T07:25:30.483Z","type":"message"}
{"nick":"Raynos","message":"now you can imagine a userland module","date":"2013-01-16T07:25:37.893Z","type":"message"}
{"nick":"dominictarr","message":"I don't think they are rethinking radically eno\u001c\u001cugh","date":"2013-01-16T07:25:41.686Z","type":"message"}
{"nick":"fotoverite","date":"2013-01-16T07:25:42.011Z","type":"join"}
{"nick":"Raynos","message":"that takes function (a, b) { return a + b } and parse the AST and either throws or generates a valid DBQuery object","date":"2013-01-16T07:25:59.089Z","type":"message"}
{"nick":"Raynos","message":"The set of all functions that can generate a valid DBQuery object should be what you use filters for! although fuck closure bound variables :/","date":"2013-01-16T07:26:29.954Z","type":"message"}
{"nick":"Raynos","message":"blargh","date":"2013-01-16T07:26:37.686Z","type":"message"}
{"nick":"dominictarr","message":"hmm, so to turns javascript into SQL or something?","date":"2013-01-16T07:26:44.298Z","type":"message"}
{"nick":"Raynos","message":"theres no way to cleanly close over constant values and still do AST parsing to generate a DBQuery","date":"2013-01-16T07:27:07.088Z","type":"message"}
{"nick":"dominictarr","message":"that is an interesting idea, but it's closure bound vars are too useful","date":"2013-01-16T07:27:21.663Z","type":"message"}
{"nick":"dominictarr","message":"it means you get to use require if you want","date":"2013-01-16T07:27:33.725Z","type":"message"}
{"nick":"Raynos","message":"Added thing to README","date":"2013-01-16T07:27:47.616Z","type":"message"}
{"nick":"Raynos","message":"Oh I know","date":"2013-01-16T07:28:08.802Z","type":"message"}
{"nick":"Raynos","message":"it should AST parse","date":"2013-01-16T07:28:16.085Z","type":"message"}
{"nick":"Raynos","message":"build up a list of gaps","date":"2013-01-16T07:28:21.471Z","type":"message"}
{"nick":"Raynos","message":"CALL the function","date":"2013-01-16T07:28:23.948Z","type":"message"}
{"nick":"dominictarr","message":"merging","date":"2013-01-16T07:28:25.567Z","type":"message"}
{"nick":"Raynos","message":"and fill the gaps with the values of the closure bound variables from calling it","date":"2013-01-16T07:28:32.987Z","type":"message"}
{"nick":"Raynos","message":"and then you have a way to check whether it's a pure function or a pure function that closes over constant values!","date":"2013-01-16T07:29:08.273Z","type":"message"}
{"nick":"dominictarr","message":"Raynos: set caching test fails","date":"2013-01-16T07:29:18.196Z","type":"message"}
{"nick":"Raynos","message":":(","date":"2013-01-16T07:29:22.598Z","type":"message"}
{"nick":"gwenbell","date":"2013-01-16T07:29:39.755Z","type":"join"}
{"nick":"Raynos","message":"fixed PRing","date":"2013-01-16T07:30:26.499Z","type":"message"}
{"nick":"Raynos","message":"added commit","date":"2013-01-16T07:30:35.180Z","type":"message"}
{"nick":"dominictarr","message":"great, merging","date":"2013-01-16T07:31:38.094Z","type":"message"}
{"nick":"dominictarr","message":"crdt@3.3.1","date":"2013-01-16T07:32:27.231Z","type":"message"}
{"nick":"Raynos","message":"what about Set.every?","date":"2013-01-16T07:33:17.591Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-01-16T07:39:57.975Z","type":"quit"}
{"nick":"Raynos","message":"dominictarr: btw if your interested in rethinkdb ( https://github.com/rethinkdb/rethinkdb/issues/221 )","date":"2013-01-16T07:40:17.113Z","type":"message"}
{"nick":"Raynos","message":"pitch in 2 cents about their API surface","date":"2013-01-16T07:40:28.903Z","type":"message"}
{"nick":"dominictarr_","date":"2013-01-16T07:40:44.534Z","type":"join"}
{"nick":"Raynos","message":"the rethinkdb map reduce thing is interesting","date":"2013-01-16T07:40:53.213Z","type":"message"}
{"nick":"dominictarr","reason":"Ping timeout: 245 seconds","date":"2013-01-16T07:40:58.517Z","type":"quit"}
{"nick":"dominictarr_","new_nick":"dominictarr","date":"2013-01-16T07:40:59.203Z","type":"nick"}
{"nick":"Raynos","message":"they basically say \"reduce is commutative. It's a merge function\"","date":"2013-01-16T07:41:06.495Z","type":"message"}
{"nick":"Raynos","message":"they also say the reduce is function(Type, Type) -> Type","date":"2013-01-16T07:41:28.599Z","type":"message"}
{"nick":"Raynos","message":"I like the idea of map-merge","date":"2013-01-16T07:41:44.537Z","type":"message"}
{"nick":"dominictarr","message":"yeah, that is like in monge","date":"2013-01-16T07:42:44.080Z","type":"message"}
{"nick":"dominictarr","message":"mongo","date":"2013-01-16T07:42:46.650Z","type":"message"}
{"nick":"dominictarr","message":"that approach is definately easier to implement in the database","date":"2013-01-16T07:43:05.927Z","type":"message"}
{"nick":"Raynos","message":"true actually","date":"2013-01-16T07:43:13.012Z","type":"message"}
{"nick":"dominictarr","message":"because you push those expectations to the user","date":"2013-01-16T07:43:21.579Z","type":"message"}
{"nick":"Raynos","message":"why did you not choose that approach?","date":"2013-01-16T07:43:21.858Z","type":"message"}
{"nick":"dominictarr","message":"I did","date":"2013-01-16T07:43:26.121Z","type":"message"}
{"nick":"Raynos","message":"i thought you did something more complex","date":"2013-01-16T07:43:35.334Z","type":"message"}
{"nick":"dominictarr","message":"no","date":"2013-01-16T07:43:38.219Z","type":"message"}
{"nick":"dominictarr","message":"oh… you have merge(type, type, group)","date":"2013-01-16T07:43:58.616Z","type":"message"}
{"nick":"Raynos","message":"oh I see","date":"2013-01-16T07:43:59.031Z","type":"message"}
{"nick":"dominictarr","message":"which just tells you what the key is currently","date":"2013-01-16T07:44:07.567Z","type":"message"}
{"nick":"Raynos","message":"why is it called reduce instead of merge?","date":"2013-01-16T07:44:22.138Z","type":"message"}
{"nick":"dominictarr","message":"I havn't used that, but it might be useful","date":"2013-01-16T07:44:24.735Z","type":"message"}
{"nick":"dominictarr","message":"yes, merge is better","date":"2013-01-16T07:45:01.438Z","type":"message"}
{"nick":"dominictarr","message":"I was influenced by couch and mongo calling it reduce","date":"2013-01-16T07:45:31.980Z","type":"message"}
{"nick":"dominictarr","message":"mongo works like this too","date":"2013-01-16T07:45:42.016Z","type":"message"}
{"nick":"dominictarr","message":"right? it just doesn't explain it as well","date":"2013-01-16T07:45:52.646Z","type":"message"}
{"nick":"Raynos","message":"yes mongo works like that too","date":"2013-01-16T07:47:24.873Z","type":"message"}
{"nick":"Raynos","message":"array of values all of same shape","date":"2013-01-16T07:47:33.109Z","type":"message"}
{"nick":"Raynos","message":"return single value of that shape","date":"2013-01-16T07:47:36.589Z","type":"message"}
{"nick":"substack","message":"it's odd that document dbs don't implement hash joins too","date":"2013-01-16T07:47:52.543Z","type":"message"}
{"nick":"Raynos","message":"rethinkdb implements joins","date":"2013-01-16T07:49:24.498Z","type":"message"}
{"nick":"Raynos","message":"not sure whether its a hash join","date":"2013-01-16T07:49:30.261Z","type":"message"}
{"nick":"substack","message":"hash and merge joins are the fast ones so probably","date":"2013-01-16T07:49:59.257Z","type":"message"}
{"nick":"Raynos","message":"aha substitution.","date":"2013-01-16T07:51:54.928Z","type":"message"}
{"nick":"Raynos","message":"that's what I'm looking for","date":"2013-01-16T07:52:07.092Z","type":"message"}
{"nick":"Raynos","message":"substack: do you have a module for ast tree substition of free variables?","date":"2013-01-16T07:52:18.891Z","type":"message"}
{"nick":"dominictarr","message":"we also need a fanout module for level db","date":"2013-01-16T07:53:08.215Z","type":"message"}
{"nick":"dominictarr","message":"so, you can materialize a join","date":"2013-01-16T07:53:15.910Z","type":"message"}
{"nick":"dominictarr","message":"useful for newsfeeds","date":"2013-01-16T07:53:25.628Z","type":"message"}
{"nick":"dominictarr","message":"R","date":"2013-01-16T07:53:50.080Z","type":"message"}
{"nick":"dominictarr","message":"relocating brb","date":"2013-01-16T07:53:57.575Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-01-16T07:53:59.514Z","type":"quit"}
