{"nick":"Raynos","message":"https://gist.github.com/4028488","date":"2012-11-07T00:08:38.769Z","type":"message"}
{"nick":"dominictarr","message":"yay, it's another control flow lib!","date":"2012-11-07T00:10:40.660Z","type":"message"}
{"nick":"thatguydan","date":"2012-11-07T00:10:57.315Z","type":"join"}
{"nick":"dominictarr","message":"but this is exactly the one I would use, if I used CF libs","date":"2012-11-07T00:11:14.853Z","type":"message"}
{"nick":"dominictarr","message":"also, nice gimmick.","date":"2012-11-07T00:11:30.170Z","type":"message"}
{"nick":"Raynos","message":"you dont really need sugar for sequential flows","date":"2012-11-07T00:17:14.698Z","type":"message"}
{"nick":"Raynos","message":"but for do x related things in parallel and aggregate results","date":"2012-11-07T00:17:24.706Z","type":"message"}
{"nick":"Raynos","message":"its a pain to do it manually","date":"2012-11-07T00:17:28.564Z","type":"message"}
{"nick":"dominictarr","message":"yeah.","date":"2012-11-07T00:18:27.215Z","type":"message"}
{"nick":"dominictarr","message":"normally I just do","date":"2012-11-07T00:18:33.043Z","type":"message"}
{"nick":"dominictarr","message":"var n = expected","date":"2012-11-07T00:18:44.534Z","type":"message"}
{"nick":"dominictarr","message":"then cb = function (err, null) {if(!--n) return; ...}","date":"2012-11-07T00:19:10.293Z","type":"message"}
{"nick":"Raynos","message":"yeah that shit sucks","date":"2012-11-07T00:20:44.549Z","type":"message"}
{"nick":"substack","message":"thinking I should be using convoy-stream for secure-peer but it's not obvious how to use it for what I want","date":"2012-11-07T00:21:33.082Z","type":"message"}
{"nick":"dominictarr","message":"substack, secure peer was exactly the use case I had in mind writing convoy stream.","date":"2012-11-07T00:22:04.103Z","type":"message"}
{"nick":"substack","message":"convoy-stream isn't behaving as I might expect","date":"2012-11-07T00:22:21.813Z","type":"message"}
{"nick":"dominictarr","message":"you'd create a first stream, and use (say) dnode to exchange DH, and then end the first stream, and then return create a second stream and encrypt that using the DH key","date":"2012-11-07T00:23:42.106Z","type":"message"}
{"nick":"dominictarr","message":"substack, can you show me your code?","date":"2012-11-07T00:23:54.161Z","type":"message"}
{"nick":"substack","message":"yes I get conceptually what it's supposed to do","date":"2012-11-07T00:24:29.833Z","type":"message"}
{"nick":"substack","message":"https://gist.github.com/4028657","date":"2012-11-07T00:24:43.227Z","type":"message"}
{"nick":"substack","message":"this does nothing ^","date":"2012-11-07T00:24:47.208Z","type":"message"}
{"nick":"substack","message":"or when I header.write() same thing","date":"2012-11-07T00:25:35.742Z","type":"message"}
{"nick":"substack","message":"how do I make this module do things","date":"2012-11-07T00:25:47.845Z","type":"message"}
{"nick":"dominictarr","message":"it's duplex","date":"2012-11-07T00:25:49.345Z","type":"message"}
{"nick":"dominictarr","message":"you have to attach the convoy to another instance","date":"2012-11-07T00:26:12.390Z","type":"message"}
{"nick":"dominictarr","message":"h.write('hello') -> _h.on('data',...)","date":"2012-11-07T00:26:40.084Z","type":"message"}
{"nick":"dominictarr","message":"where _h is the corrisponding stream on the second convoy","date":"2012-11-07T00:26:58.953Z","type":"message"}
{"nick":"dominictarr","message":"substack, ^^","date":"2012-11-07T00:27:06.573Z","type":"message"}
{"nick":"substack","message":"what","date":"2012-11-07T00:27:31.347Z","type":"message"}
{"nick":"substack","message":"but I haven't written that part yet","date":"2012-11-07T00:27:37.548Z","type":"message"}
{"nick":"substack","message":"I don't want to design the whole thing up-front","date":"2012-11-07T00:27:48.313Z","type":"message"}
{"nick":"substack","message":"I pretty much just want to give a module an array of streams and whenever the input writes a .end() it will skip to the next stream","date":"2012-11-07T00:28:54.953Z","type":"message"}
{"nick":"dominictarr","message":"like this https://gist.github.com/4028683","date":"2012-11-07T00:28:55.610Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 8, free: 21]","date":"2012-11-07T00:29:01.189Z","type":"message"}
{"nick":"substack","message":"dominictarr: what is going on","date":"2012-11-07T00:29:39.664Z","type":"message"}
{"nick":"substack","message":"you have var header = ... twice","date":"2012-11-07T00:29:46.296Z","type":"message"}
{"nick":"substack","message":"I'm not sold on this api","date":"2012-11-07T00:30:19.792Z","type":"message"}
{"nick":"dominictarr","message":"fixed","date":"2012-11-07T00:30:24.050Z","type":"message"}
{"nick":"substack","message":"are convoy streams meant to be 1:1 with createStream()?","date":"2012-11-07T00:31:17.690Z","type":"message"}
{"nick":"substack","message":"1 convoy() for each createStream()","date":"2012-11-07T00:31:36.932Z","type":"message"}
{"nick":"dominictarr","message":"no, each createStream() instance is packed into the convoy","date":"2012-11-07T00:31:41.372Z","type":"message"}
{"nick":"dominictarr","message":"with a length delimeted framing","date":"2012-11-07T00:31:52.279Z","type":"message"}
{"nick":"substack","message":"why do you need separate calls to convoy()?","date":"2012-11-07T00:31:59.213Z","type":"message"}
{"nick":"dominictarr","message":"because there needs to be two convoys","date":"2012-11-07T00:32:12.278Z","type":"message"}
{"nick":"dominictarr","message":"one either side of the network","date":"2012-11-07T00:32:18.648Z","type":"message"}
{"nick":"dominictarr","message":"or, reading a file the origininal one wrote.","date":"2012-11-07T00:32:31.179Z","type":"message"}
{"nick":"substack","message":"this api is not ideal","date":"2012-11-07T00:33:24.589Z","type":"message"}
{"nick":"dominictarr","message":"what would you prefer?","date":"2012-11-07T00:33:42.464Z","type":"message"}
{"nick":"substack","message":"not sure yet","date":"2012-11-07T00:34:28.397Z","type":"message"}
{"nick":"substack","message":"but convoy is far too unintuitive","date":"2012-11-07T00:34:35.365Z","type":"message"}
{"nick":"substack","message":"for what it does","date":"2012-11-07T00:34:42.728Z","type":"message"}
{"nick":"mike-d","message":"substack, domonictarr: since node streams are like unix streams and are used to implement pipes like \"who | sort | lpr\", where does the a.pipe(b).pipe(a) pattern come in, is that node specific? ( I understand the duplex pattern, just wondering if this is a node disconnect from unix pipes or am I missing something )  \u001c","date":"2012-11-07T00:36:31.134Z","type":"message"}
{"nick":"dominictarr","message":"okay, well, you could do something simpler maybe","date":"2012-11-07T00:36:42.922Z","type":"message"}
{"nick":"dominictarr","message":"substack, also see this https://gist.github.com/dominictarr/header-stream","date":"2012-11-07T00:36:47.290Z","type":"message"}
{"nick":"substack","message":"mike-d: it's something you can't really do with unix pipes","date":"2012-11-07T00:37:23.608Z","type":"message"}
{"nick":"substack","message":"unless you write a program","date":"2012-11-07T00:37:31.980Z","type":"message"}
{"nick":"dominictarr","message":"mike-d, `SOURC.pipe(DEST)` === `SOURCE | DEST`","date":"2012-11-07T00:37:40.720Z","type":"message"}
{"nick":"dominictarr","message":"oops reading your question again","date":"2012-11-07T00:38:01.211Z","type":"message"}
{"nick":"dominictarr","message":"mike-d, I understand that there IS a way to do duplex pipes in bash... but it's not easy.","date":"2012-11-07T00:38:41.597Z","type":"message"}
{"nick":"dominictarr","message":"here it is","date":"2012-11-07T00:39:37.541Z","type":"message"}
{"nick":"dominictarr","message":"http://www.gnu.org/software/bash/manual/html_node/Coprocesses.html","date":"2012-11-07T00:39:38.083Z","type":"message"}
{"nick":"mike-d","message":"I have been writing a new stream from the ground up, looking at the C api and src.pipe(dest) seems to be the only thing node streams have in common with posix","date":"2012-11-07T00:39:49.031Z","type":"message"}
{"nick":"tomshreds","reason":"Ping timeout: 260 seconds","date":"2012-11-07T00:40:58.988Z","type":"quit"}
{"nick":"dominictarr","message":"mike-d, duplex streams are more a pattern than an API.","date":"2012-11-07T00:43:30.476Z","type":"message"}
{"nick":"dominictarr","message":"you could still do them in C","date":"2012-11-07T00:43:39.599Z","type":"message"}
{"nick":"mike-d","message":"domonictarr: right and also thanks for the link...","date":"2012-11-07T00:44:21.123Z","type":"message"}
{"nick":"substack","message":"dominictarr: here's what I'm thinking for a convoy api https://gist.github.com/4028785","date":"2012-11-07T00:46:12.101Z","type":"message"}
{"nick":"substack","message":"when the current stream emits an end it just goes to the next one","date":"2012-11-07T00:46:35.254Z","type":"message"}
{"nick":"dominictarr","message":"substack, right. that is not that far from what I have","date":"2012-11-07T00:47:32.547Z","type":"message"}
{"nick":"dominictarr","message":"just iterate over the array, call header.createStream() and pipe it to that stream in the array...","date":"2012-11-07T00:47:56.785Z","type":"message"}
{"nick":"substack","message":"but with the current design why would I need multiple convoy objects?","date":"2012-11-07T00:48:02.197Z","type":"message"}
{"nick":"dominictarr","message":"the second convoy object is on the other side of the network","date":"2012-11-07T00:48:24.513Z","type":"message"}
{"nick":"dominictarr","message":"but you where logging output from the inner stream,","date":"2012-11-07T00:48:40.193Z","type":"message"}
{"nick":"dominictarr","message":"either log from outer stream","date":"2012-11-07T00:48:48.591Z","type":"message"}
{"nick":"substack","message":"I need to use a convoy stream on both sides?","date":"2012-11-07T00:48:55.407Z","type":"message"}
{"nick":"dominictarr","message":"yup","date":"2012-11-07T00:48:59.303Z","type":"message"}
{"nick":"substack","message":"ok this won't work then","date":"2012-11-07T00:49:03.293Z","type":"message"}
{"nick":"substack","message":"I thought this module did something different from what I had in mind","date":"2012-11-07T00:49:46.781Z","type":"message"}
{"nick":"dominictarr","message":"the point is to be able to recreate the boundries of the streams, not just contatenate them.","date":"2012-11-07T00:49:47.695Z","type":"message"}
{"nick":"dominictarr","message":"do you want something more like this https://npmjs.org/package/kat","date":"2012-11-07T00:50:29.951Z","type":"message"}
{"nick":"substack","message":"I just want to shift what the pipe endpoint is","date":"2012-11-07T00:50:31.165Z","type":"message"}
{"nick":"substack","message":"with buffering","date":"2012-11-07T00:50:36.976Z","type":"message"}
{"nick":"substack","message":"I don't want concatenation","date":"2012-11-07T00:50:56.933Z","type":"message"}
{"nick":"dominictarr","message":"hmm, can you elaborate on \"shift what the pipe endpoint is\" ?","date":"2012-11-07T00:51:25.854Z","type":"message"}
{"nick":"substack","message":"I want to pipe into es.split() but then be able to take that off and pipe somewhere else","date":"2012-11-07T00:51:34.296Z","type":"message"}
{"nick":"substack","message":"I only want to buffer newlines for the start of it","date":"2012-11-07T00:51:46.396Z","type":"message"}
{"nick":"substack","message":"but then I want to turn the machinery off","date":"2012-11-07T00:51:56.560Z","type":"message"}
{"nick":"substack","message":"and pipe directly","date":"2012-11-07T00:52:00.118Z","type":"message"}
{"nick":"dominictarr","message":"right, yeah, I have thought about this. for the last stream you don't need framing anymore","date":"2012-11-07T00:52:23.024Z","type":"message"}
{"nick":"substack","message":"I don't see the utility of framing at all for what I'm envisioning","date":"2012-11-07T00:52:51.026Z","type":"message"}
{"nick":"dominictarr","message":"what do you think of http://npm.im/header-stream","date":"2012-11-07T00:53:26.557Z","type":"message"}
{"nick":"substack","message":"I'm more looking for a convenience library for switching stream endpoints","date":"2012-11-07T00:53:33.289Z","type":"message"}
{"nick":"substack","message":"so I can switch between different streaming parsers","date":"2012-11-07T00:53:40.884Z","type":"message"}
{"nick":"substack","message":"and so I can shift back into raw mode","date":"2012-11-07T00:53:46.406Z","type":"message"}
{"nick":"dominictarr","message":"right, so you'd need to parse the stream endpoint your self","date":"2012-11-07T00:54:08.297Z","type":"message"}
{"nick":"substack","message":"I looked at header-stream but there's not much there to evaluate it","date":"2012-11-07T00:54:31.477Z","type":"message"}
{"nick":"substack","message":"only that test and the source itself","date":"2012-11-07T00:54:37.137Z","type":"message"}
{"nick":"dominictarr","message":"convoy is a way of doing that, but it implements a particular way of packaging the stream","date":"2012-11-07T00:55:17.909Z","type":"message"}
{"nick":"dominictarr","message":"I also have this https://github.com/dominictarr/client-reloader which uses header-stream","date":"2012-11-07T00:55:34.047Z","type":"message"}
{"nick":"substack","message":"ok I'll write a module for what I have in mind","date":"2012-11-07T00:55:37.338Z","type":"message"}
{"nick":"dominictarr","message":"this stuff isn't documented yet though, just writing this because I need it for my cascadia demos.","date":"2012-11-07T00:55:59.364Z","type":"message"}
{"nick":"_sorensen","reason":"Ping timeout: 244 seconds","date":"2012-11-07T00:56:51.603Z","type":"quit"}
{"nick":"substack","message":"I'm thinking more like a hose that you can plug into different things","date":"2012-11-07T00:56:55.040Z","type":"message"}
{"nick":"substack","message":"without having to go and get a new hose","date":"2012-11-07T00:57:03.268Z","type":"message"}
{"nick":"mike-d","message":"dominictarr: the C imp is very clean, read(int, void *, size_t); and write(int, const void *, size_t); found in unistd.h and the pipe/fd takes care of the buffering, I do see a need for pause() and resume() in node that act on the src stream, but I really like the unix way so i'm coding a new stream and just adding pipe() for the wiring","date":"2012-11-07T00:57:22.191Z","type":"message"}
{"nick":"dominictarr","message":"mike-d, have you seen isaacs/readable-stream ?","date":"2012-11-07T00:58:07.425Z","type":"message"}
{"nick":"substack","message":"mike-d: pause() and resume() aren't needed in the new stream implementation in node","date":"2012-11-07T00:58:09.296Z","type":"message"}
{"nick":"substack","message":"it's the same as the read() and write() calls","date":"2012-11-07T00:58:20.580Z","type":"message"}
{"nick":"dominictarr","message":"like, a huge bunch of work has gone into this. going and inventing a new thing is silly because you won't be able to use anyone's modules,","date":"2012-11-07T00:59:00.226Z","type":"message"}
{"nick":"dominictarr","message":"and they won't be able to use yours.","date":"2012-11-07T00:59:07.352Z","type":"message"}
{"nick":"mike-d","message":"if you don't have a read call, which in my current imp, I dont, so I use pause resume, yes, I looked at isaacs new streams","date":"2012-11-07T00:59:35.536Z","type":"message"}
{"nick":"substack","message":"calling this thing next-stream","date":"2012-11-07T00:59:40.556Z","type":"message"}
{"nick":"maks","reason":"Quit: Page closed","date":"2012-11-07T01:01:09.137Z","type":"quit"}
{"nick":"mike-d","message":"right now I only have pipe, write, pause, resume… and the base Stream constructor takes the read function which can have multiple args","date":"2012-11-07T01:02:04.315Z","type":"message"}
{"nick":"mike-d","message":"I ditched read because something has to kick off the stream, which is the first call to write","date":"2012-11-07T01:02:54.869Z","type":"message"}
{"nick":"mike-d","message":"dominictarr, substack: this is the api, https://gist.github.com/4028874","date":"2012-11-07T01:08:25.290Z","type":"message"}
{"nick":"substack","message":"mike-d: have you seen https://github.com/dominictarr/through ?","date":"2012-11-07T01:09:25.531Z","type":"message"}
{"nick":"mike-d","message":"substack: yes, looked at dominics and yours plus isaacs quite a bit","date":"2012-11-07T01:11:49.171Z","type":"message"}
{"nick":"dominictarr","message":"I gotta go! catch you dudes later","date":"2012-11-07T01:12:52.140Z","type":"message"}
{"nick":"dominictarr","reason":"Ping timeout: 252 seconds","date":"2012-11-07T01:18:22.865Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 34]","date":"2012-11-07T01:29:01.163Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-11-07T01:38:29.043Z","type":"quit"}
{"nick":"st_luke","date":"2012-11-07T01:52:54.110Z","type":"join"}
{"nick":"dominictarr","date":"2012-11-07T02:02:45.800Z","type":"join"}
{"nick":"mikeal","date":"2012-11-07T02:03:14.329Z","type":"join"}
{"nick":"substack","message":"dominictarr: I realized that it makes much more sense to only just use through for this","date":"2012-11-07T02:07:01.901Z","type":"message"}
{"nick":"substack","message":"the other abstractions don't fit very well","date":"2012-11-07T02:07:07.872Z","type":"message"}
{"nick":"dominictarr","message":"hmm, what about duplex?","date":"2012-11-07T02:07:23.986Z","type":"message"}
{"nick":"substack","message":"and the one I had in mind to make it easier actually would be really difficult since messages could be split at boundaries","date":"2012-11-07T02:07:41.129Z","type":"message"}
{"nick":"dominictarr","message":"right, that is why I put framing into convoy","date":"2012-11-07T02:08:01.944Z","type":"message"}
{"nick":"dominictarr","message":"if you only need framing for the handshake it's easier, because you can just use line seperated json.","date":"2012-11-07T02:08:34.223Z","type":"message"}
{"nick":"substack","message":"I just want to grab a line","date":"2012-11-07T02:08:48.467Z","type":"message"}
{"nick":"substack","message":"and then I want it to be regular tcp","date":"2012-11-07T02:08:56.080Z","type":"message"}
{"nick":"dominictarr","message":"1 line?","date":"2012-11-07T02:09:33.568Z","type":"message"}
{"nick":"substack","message":"yes","date":"2012-11-07T02:09:38.845Z","type":"message"}
{"nick":"dominictarr","message":"header-stream does exactly that.","date":"2012-11-07T02:10:00.110Z","type":"message"}
{"nick":"substack","message":"was also looking at header-stream","date":"2012-11-07T02:10:15.538Z","type":"message"}
{"nick":"substack","message":"no examples :(","date":"2012-11-07T02:10:19.522Z","type":"message"}
{"nick":"dominictarr","message":"I'll write a quick example ... although, I must confess that I just used monkeypatching","date":"2012-11-07T02:10:35.792Z","type":"message"}
{"nick":"substack","message":"oh so the other part","date":"2012-11-07T02:11:01.675Z","type":"message"}
{"nick":"substack","message":"was it's not obvious how I should go about returning a duplex stream while simultaneously using header-stream","date":"2012-11-07T02:11:25.260Z","type":"message"}
{"nick":"substack","message":"I've run into this before","date":"2012-11-07T02:11:30.396Z","type":"message"}
{"nick":"substack","message":"where I want to stick a writable stream on the front of something but maintain the api of the endpoint","date":"2012-11-07T02:12:06.548Z","type":"message"}
{"nick":"substack","message":"mixing streams with stream methods doesn't compose well","date":"2012-11-07T02:12:16.099Z","type":"message"}
{"nick":"fotoverite","date":"2012-11-07T02:13:01.927Z","type":"join"}
{"nick":"substack","message":"ok I have something working","date":"2012-11-07T02:18:26.784Z","type":"message"}
{"nick":"substack","message":"did sec.on('pipe', function () { sec.writeHead() })","date":"2012-11-07T02:18:35.987Z","type":"message"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2012-11-07T02:19:35.614Z","type":"quit"}
{"nick":"dominictarr","message":"substack, put the writeHead in next tick.","date":"2012-11-07T02:19:38.881Z","type":"message"}
{"nick":"Raynos","message":"NEW RULE","date":"2012-11-07T02:20:54.381Z","type":"message"}
{"nick":"LOUDBOT","message":"WHO PUT ENTER RIGHT NEXT TO THE BACKSPACE SERIOUSLY","date":"2012-11-07T02:20:55.430Z","type":"message"}
{"nick":"Raynos","message":"ALL COMPLEX CODE HAS TO BE WRITTEN IN CAPSLOCK SCRIPT","date":"2012-11-07T02:21:01.865Z","type":"message"}
{"nick":"LOUDBOT","message":"ACHIEVEMENT UNLOCKED: EVEN NUMBERS","date":"2012-11-07T02:21:02.354Z","type":"message"}
{"nick":"dominictarr","message":"because pipe is emitted before the whole pipeline is connected.","date":"2012-11-07T02:21:04.558Z","type":"message"}
{"nick":"dominictarr","message":"ALSO; UGLY HACKS MUST BE FORMATTED UGLY","date":"2012-11-07T02:21:33.893Z","type":"message"}
{"nick":"LOUDBOT","message":"AND NO IT WASN'T A SOCK","date":"2012-11-07T02:21:34.528Z","type":"message"}
{"nick":"dominictarr","message":"RAYNOS, WE SHOULD USE YOUR RULE IN OUR NKO THING","date":"2012-11-07T02:22:45.325Z","type":"message"}
{"nick":"LOUDBOT","message":"JUMPSTART YOUR CAREER WITH NUDE PICS POSTED TO FOUR CHANNEL","date":"2012-11-07T02:22:46.013Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: that's why your code looks ugly?","date":"2012-11-07T02:22:50.904Z","type":"message"}
{"nick":"dominictarr","message":"AN UGLY PROBLEM CALLS FOR AN UGLY SOLUTION","date":"2012-11-07T02:23:35.946Z","type":"message"}
{"nick":"LOUDBOT","message":"THE CREEPS WERE LOOKING AT THE WINDOWS BECAUSE SUPER MOP-TOP WAS PLAYING THE DRUMS! ULTRA-BEAN WAS PLAYING THE TRUMPETS!!!","date":"2012-11-07T02:23:36.728Z","type":"message"}
{"nick":"tphummel","reason":"Quit: tphummel","date":"2012-11-07T02:23:39.865Z","type":"quit"}
{"nick":"AvianFlu","message":"OH MY GOD TOO MANY CAPS I DON'T UNDERSTAND WHAT'S GOING ON","date":"2012-11-07T02:23:53.046Z","type":"message"}
{"nick":"LOUDBOT","message":"BRICKS I SAY","date":"2012-11-07T02:23:53.870Z","type":"message"}
{"nick":"AvianFlu","message":"OH YES.  OF COURSE IT'S BRICKS.","date":"2012-11-07T02:24:02.395Z","type":"message"}
{"nick":"LOUDBOT","message":"YOU ARE ONLY LYING TO YOURSELF.  UNDO THAT SHIT AND TRY AGAIN.","date":"2012-11-07T02:24:02.877Z","type":"message"}
{"nick":"AvianFlu","message":"WHAT THE HELL YOU JUST SAID IT WAS BRICKS!","date":"2012-11-07T02:24:12.955Z","type":"message"}
{"nick":"LOUDBOT","message":"THE NEXT PERSON TO TYPE IN CAPS WILL SUFFER","date":"2012-11-07T02:24:13.402Z","type":"message"}
{"nick":"Raynos","message":"I SUFFER","date":"2012-11-07T02:24:20.216Z","type":"message"}
{"nick":"LOUDBOT","message":"\"CUNT NUGGET SON OF A BITCH GYPSY\"","date":"2012-11-07T02:24:20.663Z","type":"message"}
{"nick":"Raynos","message":":D","date":"2012-11-07T02:24:24.742Z","type":"message"}
{"nick":"dominictarr","message":"BREAKING NEWS \"LOUDBOT\" PASSES TURING TEST","date":"2012-11-07T02:25:16.938Z","type":"message"}
{"nick":"LOUDBOT","message":"ALMOST DONE, GO ON WITHOUT ME","date":"2012-11-07T02:25:17.599Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-11-07T02:25:23.747Z","type":"quit"}
{"nick":"dominictarr","message":"substack, some example code in the header-stream/README","date":"2012-11-07T02:26:12.192Z","type":"message"}
{"nick":"substack","message":"sweet","date":"2012-11-07T02:28:37.002Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 13]","date":"2012-11-07T02:29:01.082Z","type":"message"}
{"nick":"st_luke","message":"one great thing about living in new york is that you learn you don't really miss anything at all by staying in and writing code","date":"2012-11-07T02:34:00.541Z","type":"message"}
{"nick":"anoemi","date":"2012-11-07T02:34:42.930Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 252 seconds","date":"2012-11-07T02:46:37.798Z","type":"quit"}
{"nick":"dominictarr","date":"2012-11-07T02:50:18.489Z","type":"join"}
{"nick":"mikeal","date":"2012-11-07T02:55:33.028Z","type":"join"}
{"nick":"Raynos","message":"st_luke: come to the bay","date":"2012-11-07T02:59:20.109Z","type":"message"}
{"nick":"Raynos","message":"there's tons of coding parties here","date":"2012-11-07T02:59:31.746Z","type":"message"}
{"nick":"Raynos","message":"Actually I don't think I've ever been to a coding party","date":"2012-11-07T02:59:42.196Z","type":"message"}
{"nick":"mikeal","reason":"Ping timeout: 255 seconds","date":"2012-11-07T03:00:03.892Z","type":"quit"}
{"nick":"Raynos","message":"maxogden: have you been to coding parties?","date":"2012-11-07T03:01:52.664Z","type":"message"}
{"nick":"mikeal","date":"2012-11-07T03:03:05.968Z","type":"join"}
{"nick":"dominictarr","message":"I have","date":"2012-11-07T03:03:19.616Z","type":"message"}
{"nick":"substack","message":"time for tacos","date":"2012-11-07T03:06:04.075Z","type":"message"}
{"nick":"substack","action":"made a giant vat of ingredients","date":"2012-11-07T03:06:22.001Z","type":"action"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-11-07T03:17:05.989Z","type":"quit"}
{"nick":"dominictarr","reason":"Ping timeout: 246 seconds","date":"2012-11-07T03:20:36.382Z","type":"quit"}
{"nick":"pikpik","reason":"Changing host","date":"2012-11-07T03:21:24.430Z","type":"quit"}
{"nick":"pikpik","date":"2012-11-07T03:21:24.623Z","type":"join"}
{"nick":"pikpik","reason":"Changing host","date":"2012-11-07T03:21:24.878Z","type":"quit"}
{"nick":"pikpik","date":"2012-11-07T03:21:25.072Z","type":"join"}
{"nick":"jibay_","reason":"Quit: Leaving","date":"2012-11-07T03:28:37.204Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 3, free: 17]","date":"2012-11-07T03:29:01.110Z","type":"message"}
{"nick":"tphummel","date":"2012-11-07T03:37:24.984Z","type":"join"}
{"nick":"tphummel","reason":"Quit: tphummel","date":"2012-11-07T03:44:47.760Z","type":"quit"}
{"nick":"mikeal","date":"2012-11-07T03:47:18.058Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 255 seconds","date":"2012-11-07T03:53:11.727Z","type":"quit"}
{"nick":"st_luke","message":"Raynos: yes, I need to spend some more time in the bay area.","date":"2012-11-07T03:56:48.010Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: when your down here we should throw some","date":"2012-11-07T03:57:42.141Z","type":"message"}
{"nick":"Raynos","message":"In joyent's offices cc isaacs","date":"2012-11-07T03:57:50.361Z","type":"message"}
{"nick":"mikeal","date":"2012-11-07T04:19:21.041Z","type":"join"}
{"nick":"mikeal","reason":"Ping timeout: 260 seconds","date":"2012-11-07T04:28:56.753Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 35]","date":"2012-11-07T04:29:03.106Z","type":"message"}
{"nick":"mikeal","date":"2012-11-07T04:29:58.126Z","type":"join"}
{"nick":"anoemi","reason":"Quit: anoemi","date":"2012-11-07T04:41:24.104Z","type":"quit"}
{"nick":"rowbit","message":"Daily usage stats: [developer: 35, free: 988]","date":"2012-11-07T05:29:03.058Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 64]","date":"2012-11-07T05:29:04.726Z","type":"message"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2012-11-07T05:32:08.685Z","type":"quit"}
{"nick":"tphummel","date":"2012-11-07T05:35:57.951Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-11-07T05:37:14.593Z","type":"quit"}
{"nick":"tphummel","reason":"Client Quit","date":"2012-11-07T05:39:55.566Z","type":"quit"}
{"nick":"mikeal","date":"2012-11-07T05:41:22.088Z","type":"join"}
{"nick":"tphummel","date":"2012-11-07T05:45:51.134Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2012-11-07T05:46:11.861Z","type":"quit"}
{"nick":"tphummel","reason":"Client Quit","date":"2012-11-07T05:46:17.483Z","type":"quit"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-11-07T05:48:24.902Z","type":"nick"}
{"nick":"mikeal","date":"2012-11-07T06:05:53.982Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2012-11-07T06:06:56.911Z","type":"quit"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-11-07T06:07:25.635Z","type":"nick"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-11-07T06:10:01.600Z","type":"nick"}
{"nick":"tphummel","date":"2012-11-07T06:22:06.043Z","type":"join"}
{"nick":"tphummel","reason":"Client Quit","date":"2012-11-07T06:24:33.865Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 69]","date":"2012-11-07T06:29:02.980Z","type":"message"}
{"nick":"mikeal","date":"2012-11-07T06:29:44.574Z","type":"join"}
{"nick":"fotoverite","reason":"Read error: Connection reset by peer","date":"2012-11-07T06:31:06.054Z","type":"quit"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-11-07T06:42:07.624Z","type":"quit"}
{"nick":"mikeal","date":"2012-11-07T06:48:42.619Z","type":"join"}
{"nick":"substack","message":"ok blarg this works https://github.com/substack/rsa-unpack","date":"2012-11-07T06:59:49.500Z","type":"message"}
{"nick":"substack","message":"if only core crypto just let me create a DiffieHellman instance directly from a PEM","date":"2012-11-07T07:00:12.022Z","type":"message"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2012-11-07T07:00:25.262Z","type":"quit"}
{"nick":"substack","message":"I still can't seem to create DH objects even with decoded PEMs :(","date":"2012-11-07T07:09:04.771Z","type":"message"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-11-07T07:19:54.923Z","type":"nick"}
{"nick":"substack","message":"hmmm I might need to decode the public key to get p and g","date":"2012-11-07T07:23:46.379Z","type":"message"}
{"nick":"substack","message":"looks like that's what DiffieHellman can be initialized with","date":"2012-11-07T07:23:59.762Z","type":"message"}
{"nick":"substack","message":"it's really crap that I can't just make a DiffieHellman object directly","date":"2012-11-07T07:24:20.165Z","type":"message"}
{"nick":"substack","message":"since it has setters for the public and private keys","date":"2012-11-07T07:24:31.945Z","type":"message"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-11-07T07:25:06.597Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 18]","date":"2012-11-07T07:29:03.055Z","type":"message"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-11-07T07:30:53.628Z","type":"nick"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2012-11-07T07:51:48.168Z","type":"quit"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-11-07T07:55:58.552Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 41]","date":"2012-11-07T08:29:03.341Z","type":"message"}
{"nick":"jesusabdullah","message":"yo substack what are you up to on friday","date":"2012-11-07T08:48:57.860Z","type":"message"}
{"nick":"st_luke","message":"probably streams","date":"2012-11-07T09:00:59.145Z","type":"message"}
{"nick":"zz_shykes","new_nick":"shykes","date":"2012-11-07T09:05:53.224Z","type":"nick"}
{"nick":"shykes","new_nick":"zz_shykes","date":"2012-11-07T09:11:01.035Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 43]","date":"2012-11-07T09:29:03.039Z","type":"message"}
{"nick":"juliangruber","date":"2012-11-07T09:42:07.027Z","type":"join"}
{"nick":"st_luke","reason":"Ping timeout: 246 seconds","date":"2012-11-07T09:45:14.736Z","type":"quit"}
{"nick":"juliangruber","message":"any ideas on how to do master-only replication where you can't trust nodes (eg cheating in games) ?","date":"2012-11-07T09:46:47.579Z","type":"message"}
{"nick":"juliangruber","reason":"Ping timeout: 276 seconds","date":"2012-11-07T10:19:09.780Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 7, free: 45]","date":"2012-11-07T10:29:03.181Z","type":"message"}
{"nick":"jibay","date":"2012-11-07T10:49:50.590Z","type":"join"}
{"nick":"juliangruber","date":"2012-11-07T11:22:17.690Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 2, free: 72]","date":"2012-11-07T11:29:03.003Z","type":"message"}
{"nick":"juliangruber","reason":"Ping timeout: 264 seconds","date":"2012-11-07T11:32:24.429Z","type":"quit"}
{"nick":"thatguydan","date":"2012-11-07T11:42:45.577Z","type":"join"}
{"nick":"juliangruber","date":"2012-11-07T11:47:42.574Z","type":"join"}
{"nick":"juliangruber","reason":"Ping timeout: 260 seconds","date":"2012-11-07T12:05:37.378Z","type":"quit"}
{"nick":"juliangruber","date":"2012-11-07T12:06:10.299Z","type":"join"}
{"nick":"juliangruber","reason":"Ping timeout: 248 seconds","date":"2012-11-07T12:10:31.051Z","type":"quit"}
{"nick":"juliangruber","date":"2012-11-07T12:18:42.711Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 65]","date":"2012-11-07T12:29:03.165Z","type":"message"}
{"nick":"juliangruber","reason":"Remote host closed the connection","date":"2012-11-07T13:20:08.460Z","type":"quit"}
{"nick":"shuaib","date":"2012-11-07T13:27:53.431Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 1, free: 71]","date":"2012-11-07T13:29:03.142Z","type":"message"}
{"nick":"mbalho","message":"Raynos: does this work with chrome 23? https://npmjs.org/package/webrtc-stream","date":"2012-11-07T13:53:26.621Z","type":"message"}
{"nick":"mbalho","message":"Raynos: a live demo would be cool","date":"2012-11-07T13:53:41.005Z","type":"message"}
{"nick":"anoemi","date":"2012-11-07T14:11:50.109Z","type":"join"}
{"nick":"AvianFlu","date":"2012-11-07T14:18:56.709Z","type":"join"}
{"nick":"AvianFlu_","date":"2012-11-07T14:23:07.955Z","type":"join"}
{"nick":"AvianFlu","reason":"Ping timeout: 264 seconds","date":"2012-11-07T14:24:36.422Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 74]","date":"2012-11-07T14:29:03.002Z","type":"message"}
{"nick":"juliangruber","date":"2012-11-07T14:42:52.911Z","type":"join"}
{"nick":"juliangruber_","date":"2012-11-07T14:44:24.783Z","type":"join"}
{"nick":"juliangruber","reason":"Quit: juliangruber","date":"2012-11-07T14:50:49.558Z","type":"quit"}
{"nick":"juliangruber_","new_nick":"juliangruber","date":"2012-11-07T14:50:50.006Z","type":"nick"}
{"nick":"juliangruber_","date":"2012-11-07T14:51:05.103Z","type":"join"}
{"nick":"juliangruber_","reason":"Client Quit","date":"2012-11-07T14:54:55.604Z","type":"quit"}
{"nick":"juliangruber_","date":"2012-11-07T14:55:15.918Z","type":"join"}
{"nick":"juliangruber","reason":"Quit: juliangruber","date":"2012-11-07T15:06:31.838Z","type":"quit"}
{"nick":"juliangruber_","new_nick":"juliangruber","date":"2012-11-07T15:06:32.149Z","type":"nick"}
{"nick":"AvianFlu_","new_nick":"AvianFlu","date":"2012-11-07T15:08:11.186Z","type":"nick"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 3, free: 44]","date":"2012-11-07T15:29:03.024Z","type":"message"}
{"nick":"wiwillia","date":"2012-11-07T15:37:24.133Z","type":"join"}
{"nick":"anoemi","reason":"Quit: anoemi","date":"2012-11-07T15:41:15.976Z","type":"quit"}
{"nick":"substack","message":"jesusabdullah: heading to joyent","date":"2012-11-07T15:45:52.190Z","type":"message"}
{"nick":"anoemi","date":"2012-11-07T15:50:15.104Z","type":"join"}
{"nick":"juliangruber","reason":"Quit: juliangruber","date":"2012-11-07T15:52:40.923Z","type":"quit"}
{"nick":"Dr_K1","reason":"Read error: Connection reset by peer","date":"2012-11-07T15:57:49.627Z","type":"quit"}
