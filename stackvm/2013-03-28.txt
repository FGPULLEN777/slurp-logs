{"nick":"ircretary","reason":"Remote host closed the connection","date":"2013-03-28T00:00:00.944Z","type":"quit"}
{"nick":"ircretary","date":"2013-03-28T00:00:08.900Z","type":"join"}
{"nick":"evbogue","date":"2013-03-28T00:04:50.151Z","type":"quit"}
{"nick":"mikeal","date":"2013-03-28T00:09:34.437Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-03-28T00:09:48.342Z","type":"quit"}
{"nick":"nk109","reason":"Quit: Computer has gone to sleep.","date":"2013-03-28T00:12:19.038Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-03-28T00:13:34.689Z","type":"quit"}
{"nick":"mikeal","date":"2013-03-28T00:21:41.522Z","type":"join"}
{"nick":"st_luke","message":"http://teespring.com/ceo-of-a-website","date":"2013-03-28T00:33:46.680Z","type":"message"}
{"nick":"thl0","date":"2013-03-28T00:47:51.657Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-28T00:52:05.217Z","type":"quit"}
{"nick":"spion","reason":"Ping timeout: 246 seconds","date":"2013-03-28T01:01:38.098Z","type":"quit"}
{"nick":"kenperkins","reason":"Read error: Connection reset by peer","date":"2013-03-28T01:14:47.714Z","type":"quit"}
{"nick":"kenperkins","date":"2013-03-28T01:15:33.330Z","type":"join"}
{"nick":"hij1nx","message":"st_luke: ++","date":"2013-03-28T01:16:05.938Z","type":"message"}
{"nick":"thl0","message":"substack: have you tried hoogle? http://www.haskell.org/hoogle/?hoogle=%5BT%5D+-%3E+T+-%3E+%28%5BT%5D%2C+%5BT%5D%29","date":"2013-03-28T01:16:38.618Z","type":"message"}
{"nick":"thl0","message":"substack: maybe this generic split is it?","date":"2013-03-28T01:16:46.913Z","type":"message"}
{"nick":"shama","reason":"Remote host closed the connection","date":"2013-03-28T01:17:00.542Z","type":"quit"}
{"nick":"thl0","message":"substack: or something simlar to it","date":"2013-03-28T01:17:12.739Z","type":"message"}
{"nick":"substack","message":"yes I used to write lots of haskell","date":"2013-03-28T01:17:14.626Z","type":"message"}
{"nick":"thl0","message":"substack: me too until I tried to build a website with yesod and ended back up in nodejs","date":"2013-03-28T01:17:37.237Z","type":"message"}
{"nick":"thl0","message":";)","date":"2013-03-28T01:17:38.690Z","type":"message"}
{"nick":"thl0","message":"sorry just realized that dominictarr asked the question","date":"2013-03-28T01:20:34.134Z","type":"message"}
{"nick":"blakmatrix1","date":"2013-03-28T01:33:02.895Z","type":"join"}
{"nick":"robertjd_","date":"2013-03-28T01:41:30.219Z","type":"quit"}
{"nick":"crank","reason":"Ping timeout: 255 seconds","date":"2013-03-28T01:50:35.358Z","type":"quit"}
{"nick":"ins0mnia","reason":"Ping timeout: 272 seconds","date":"2013-03-28T01:53:20.681Z","type":"quit"}
{"nick":"crank","date":"2013-03-28T01:55:39.224Z","type":"join"}
{"nick":"substack","message":"defunctzombie: https://github.com/shtylman/node-browser-resolve/pull/14","date":"2013-03-28T01:57:37.332Z","type":"message"}
{"nick":"dominictarr","date":"2013-03-28T01:58:35.871Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-03-28T01:58:59.101Z","type":"quit"}
{"nick":"defunctzombie","message":"substack: the changes look good however I have a comment","date":"2013-03-28T02:00:42.537Z","type":"message"}
{"nick":"defunctzombie","message":"I think code like if (typeof window === 'undefined')","date":"2013-03-28T02:00:52.273Z","type":"message"}
{"nick":"defunctzombie","message":"require('Canvas')","date":"2013-03-28T02:00:58.472Z","type":"message"}
{"nick":"defunctzombie","message":"should not exist","date":"2013-03-28T02:01:01.546Z","type":"message"}
{"nick":"defunctzombie","message":"user should be doing var Canvas = require('canvas');","date":"2013-03-28T02:01:13.552Z","type":"message"}
{"nick":"defunctzombie","message":"always","date":"2013-03-28T02:01:14.526Z","type":"message"}
{"nick":"defunctzombie","message":"and the canvas module need to have a browser field to return the builtin canvas","date":"2013-03-28T02:01:26.919Z","type":"message"}
{"nick":"defunctzombie","message":"this is generally why I don't see a gain for the 'false' field","date":"2013-03-28T02:01:47.872Z","type":"message"}
{"nick":"defunctzombie","message":"because it helps go against what the point of that field is in the first place","date":"2013-03-28T02:02:01.387Z","type":"message"}
{"nick":"defunctzombie","message":"which is to stop writing pragmas in the code","date":"2013-03-28T02:02:09.182Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-03-28T02:02:52.035Z","type":"quit"}
{"nick":"defunctzombie","message":"therefore, I would favor not supporting it and not documenting it .. but instead documenting the more correct way which is to have the canvas module behave correctly when being packaged","date":"2013-03-28T02:02:55.366Z","type":"message"}
{"nick":"defunctzombie","message":"also, user can do this very easily themselves with browser: { \"canvas\": \"./empty.js }","date":"2013-03-28T02:03:22.570Z","type":"message"}
{"nick":"substack","message":"that's kind of crappy to have shims everywhere though","date":"2013-03-28T02:03:35.656Z","type":"message"}
{"nick":"defunctzombie","message":"again avoiding the need for the canvas module author to use false (which I think would not be correct)","date":"2013-03-28T02:03:36.604Z","type":"message"}
{"nick":"defunctzombie","message":"substack: maybe canvas is a bad example for this, because I think canvas needs to return the builtin when bundled","date":"2013-03-28T02:04:01.454Z","type":"message"}
{"nick":"defunctzombie","message":"substack: https://github.com/einaros/ws/blob/master/package.json#L32","date":"2013-03-28T02:04:23.271Z","type":"message"}
{"nick":"defunctzombie","message":"very similar to ws module","date":"2013-03-28T02:04:27.988Z","type":"message"}
{"nick":"defunctzombie","message":"https://github.com/einaros/ws/blob/master/lib/browser.js","date":"2013-03-28T02:04:36.565Z","type":"message"}
{"nick":"substack","message":"sometimes you just want a \"don't resolve this require()\" option","date":"2013-03-28T02:04:48.357Z","type":"message"}
{"nick":"substack","message":"it'd just be an empty.js map in the browser field _anyway_","date":"2013-03-28T02:05:20.772Z","type":"message"}
{"nick":"defunctzombie","message":"k.. so here is my suggestion, change the examples to be more along the lines of (don't resolve a module) (maybe like tar) or something you know you don't need","date":"2013-03-28T02:06:06.285Z","type":"message"}
{"nick":"defunctzombie","message":"and focus on that","date":"2013-03-28T02:06:09.470Z","type":"message"}
{"nick":"defunctzombie","message":"versus this notion of pragmas","date":"2013-03-28T02:06:17.554Z","type":"message"}
{"nick":"defunctzombie","message":"cause for the canvas case I would not recommend this approach","date":"2013-03-28T02:06:27.825Z","type":"message"}
{"nick":"defunctzombie","message":"I would recommend making the canvas module act as a good browserify citizen","date":"2013-03-28T02:06:44.989Z","type":"message"}
{"nick":"substack","message":"canvas is a tj module","date":"2013-03-28T02:07:07.380Z","type":"message"}
{"nick":"defunctzombie","message":"he will accept pull for browser field","date":"2013-03-28T02:07:19.730Z","type":"message"}
{"nick":"defunctzombie","message":"I did it for his debug module","date":"2013-03-28T02:07:24.811Z","type":"message"}
{"nick":"substack","message":"oh ok","date":"2013-03-28T02:07:28.687Z","type":"message"}
{"nick":"defunctzombie","message":"but otherwise, yea, I am ok with the patch at the app level but don't want any typeof window examples :)","date":"2013-03-28T02:08:00.758Z","type":"message"}
{"nick":"defunctzombie","message":"don't want to encourage bad habits when we have better habits","date":"2013-03-28T02:08:10.138Z","type":"message"}
{"nick":"substack","message":"so the issue is just with the example?","date":"2013-03-28T02:08:14.190Z","type":"message"}
{"nick":"substack","message":"but not the underlying feature","date":"2013-03-28T02:08:18.396Z","type":"message"}
{"nick":"defunctzombie","message":"but the case of mocking out a deeply nested module that you know you don't need like tar maybe or whatnot","date":"2013-03-28T02:08:28.699Z","type":"message"}
{"nick":"defunctzombie","message":"using false at the top level package.json","date":"2013-03-28T02:08:34.973Z","type":"message"}
{"nick":"defunctzombie","message":"I think that is reasonable","date":"2013-03-28T02:08:38.255Z","type":"message"}
{"nick":"substack","message":"ok I'll update the example to use tar","date":"2013-03-28T02:08:46.480Z","type":"message"}
{"nick":"defunctzombie","action":"personally would just have my own empty file to be explicit but whatever works :)","date":"2013-03-28T02:08:58.361Z","type":"action"}
{"nick":"defunctzombie","message":"I am not against the false feature","date":"2013-03-28T02:09:06.565Z","type":"message"}
{"nick":"defunctzombie","message":"I am against the provided use case :)","date":"2013-03-28T02:09:11.787Z","type":"message"}
{"nick":"defunctzombie","message":"which I believe to be counter to the browser field","date":"2013-03-28T02:09:25.703Z","type":"message"}
{"nick":"defunctzombie","message":"I know it sounds pedantic but I think it is clearer in the long run","date":"2013-03-28T02:13:31.666Z","type":"message"}
{"nick":"substack","message":"updated https://github.com/shtylman/node-browser-resolve/pull/14","date":"2013-03-28T02:14:09.253Z","type":"message"}
{"nick":"substack","message":"https://github.com/substack/node-browser-resolve/tree/false#skip","date":"2013-03-28T02:14:38.998Z","type":"message"}
{"nick":"defunctzombie","message":"substack: oh yes","date":"2013-03-28T02:15:25.823Z","type":"message"}
{"nick":"defunctzombie","message":"substack: I think this example is much better","date":"2013-03-28T02:15:30.391Z","type":"message"}
{"nick":"defunctzombie","message":"because it shows how you have code re-use","date":"2013-03-28T02:15:36.836Z","type":"message"}
{"nick":"defunctzombie","message":"but know that a codepath is not meant to be used","date":"2013-03-28T02:15:45.076Z","type":"message"}
{"nick":"defunctzombie","message":"there are still better ways imho, but this I can go with","date":"2013-03-28T02:15:54.905Z","type":"message"}
{"nick":"defunctzombie","message":"cool","date":"2013-03-28T02:15:56.069Z","type":"message"}
{"nick":"substack","message":"it's just another way that is appropriate for some situations","date":"2013-03-28T02:16:14.652Z","type":"message"}
{"nick":"defunctzombie","message":"yep","date":"2013-03-28T02:16:43.189Z","type":"message"}
{"nick":"substack","message":"this lets me address the \"I want to ignore a require\" use-case upstream in browserify in a nice way","date":"2013-03-28T02:16:47.767Z","type":"message"}
{"nick":"substack","message":"even though I have an early flight, I so need some coffee right now","date":"2013-03-28T02:17:15.930Z","type":"message"}
{"nick":"substack","message":"to finish these browserify v2 examples","date":"2013-03-28T02:17:25.911Z","type":"message"}
{"nick":"defunctzombie","message":"substack: this will be a minor version bump btw","date":"2013-03-28T02:18:17.718Z","type":"message"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-03-28T02:18:17.969Z","type":"quit"}
{"nick":"defunctzombie","message":"substack: v0.1.0","date":"2013-03-28T02:19:11.429Z","type":"message"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2013-03-28T02:22:24.171Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-03-28T02:24:43.953Z","type":"join"}
{"nick":"defunctzombie","message":"substack: only contributor rules are (follow style and use pull requests) :)","date":"2013-03-28T02:24:57.749Z","type":"message"}
{"nick":"Raynos_","reason":"Quit: Page closed","date":"2013-03-28T02:30:56.151Z","type":"quit"}
{"nick":"defunctzombie","message":"substack: are you using bouncy?","date":"2013-03-28T02:32:41.242Z","type":"message"}
{"nick":"substack","message":"yes","date":"2013-03-28T02:32:50.422Z","type":"message"}
{"nick":"defunctzombie","message":"how has it been holding up?","date":"2013-03-28T02:34:47.905Z","type":"message"}
{"nick":"substack","message":"the latest version works very well","date":"2013-03-28T02:34:57.569Z","type":"message"}
{"nick":"substack","message":"2.x was pretty terrible but 3.x is very solid","date":"2013-03-28T02:35:14.455Z","type":"message"}
{"nick":"substack","message":"substack.net, testling.com, and browserling.com are all sitting behind bouncy@3.1.0","date":"2013-03-28T02:35:42.476Z","type":"message"}
{"nick":"defunctzombie","message":"I am thinking of putting it in from of a few of my services with a spaceport layer","date":"2013-03-28T02:35:45.417Z","type":"message"}
{"nick":"defunctzombie","message":"so I can just bring up www backends and have it discover them","date":"2013-03-28T02:35:54.894Z","type":"message"}
{"nick":"defunctzombie","message":"for the bounce pool","date":"2013-03-28T02:35:58.927Z","type":"message"}
{"nick":"defunctzombie","message":"and remove offline ones automatically","date":"2013-03-28T02:36:08.096Z","type":"message"}
{"nick":"substack","message":"that's what http://github.com/substack/ploy does","date":"2013-03-28T02:36:12.280Z","type":"message"}
{"nick":"substack","message":"without the discovery part","date":"2013-03-28T02:36:28.231Z","type":"message"}
{"nick":"defunctzombie","message":"yea, I want the discovery part and less the git push part right now","date":"2013-03-28T02:36:44.966Z","type":"message"}
{"nick":"substack","message":"a perfectly valid niche","date":"2013-03-28T02:37:02.894Z","type":"message"}
{"nick":"substack","message":"defunctzombie: can you update the browser field gist with the `false` behavior too?","date":"2013-03-28T02:37:48.444Z","type":"message"}
{"nick":"defunctzombie","message":"substack: yea","date":"2013-03-28T02:38:07.527Z","type":"message"}
{"nick":"substack","message":"everything is upgraded","date":"2013-03-28T02:41:45.195Z","type":"message"}
{"nick":"defunctzombie","message":"substack: https://gist.github.com/shtylman/4339901#ignore-a-module","date":"2013-03-28T02:42:41.378Z","type":"message"}
{"nick":"dguttman","date":"2013-03-28T02:43:30.446Z","type":"join"}
{"nick":"dguttman","reason":"Client Quit","date":"2013-03-28T02:43:56.930Z","type":"quit"}
{"nick":"dguttman","date":"2013-03-28T02:44:39.225Z","type":"join"}
{"nick":"dguttman","reason":"Client Quit","date":"2013-03-28T02:45:59.822Z","type":"quit"}
{"nick":"substack","message":"oh I see you've \"added\" me to browser-resolve","date":"2013-03-28T02:47:47.810Z","type":"message"}
{"nick":"substack","message":"not ever going to use that","date":"2013-03-28T02:47:51.731Z","type":"message"}
{"nick":"defunctzombie","message":":)","date":"2013-03-28T02:49:00.029Z","type":"message"}
{"nick":"mbalho","message":"lol","date":"2013-03-28T02:50:01.950Z","type":"message"}
{"nick":"defunctzombie","message":"one can never be too sure","date":"2013-03-28T02:51:29.896Z","type":"message"}
{"nick":"mbalho","message":"i am morally opposed to npm install browserify having a native compile step because of faye-websockets and rybytes or whatever","date":"2013-03-28T02:54:24.748Z","type":"message"}
{"nick":"mbalho","action":"just sayin","date":"2013-03-28T02:54:27.735Z","type":"action"}
{"nick":"mbalho","message":"rbytes*","date":"2013-03-28T02:54:33.665Z","type":"message"}
{"nick":"defunctzombie","message":"?","date":"2013-03-28T02:55:25.782Z","type":"message"}
{"nick":"defunctzombie","message":"does it have a compile step now","date":"2013-03-28T02:55:31.606Z","type":"message"}
{"nick":"defunctzombie","message":"for what","date":"2013-03-28T02:55:36.189Z","type":"message"}
{"nick":"mbalho","message":"defunctzombie: node-uuid i thin","date":"2013-03-28T02:55:57.276Z","type":"message"}
{"nick":"mbalho","message":"k","date":"2013-03-28T02:55:58.331Z","type":"message"}
{"nick":"defunctzombie","message":"that should not be the case","date":"2013-03-28T02:56:05.726Z","type":"message"}
{"nick":"mbalho","message":"oh its shoe","date":"2013-03-28T02:56:10.691Z","type":"message"}
{"nick":"defunctzombie","message":"that doesn't compile anything","date":"2013-03-28T02:56:10.901Z","type":"message"}
{"nick":"mbalho","message":"> rbytes@0.0.2 install /Users/maxogden/src/js/voxel-select/node_modules/beefy/node_modules/live-reload/node_modules/reconnect/node_modules/shoe/node_modules/sockjs/node_modules/rbytes","date":"2013-03-28T02:56:15.590Z","type":"message"}
{"nick":"mbalho","message":"nvm its beefy","date":"2013-03-28T02:56:21.786Z","type":"message"}
{"nick":"substack","message":"mbalho: go fix sockjs then","date":"2013-03-28T02:56:22.362Z","type":"message"}
{"nick":"mbalho","message":"STUPID BEEFY","date":"2013-03-28T02:56:24.493Z","type":"message"}
{"nick":"LOUDBOT","message":"GROWTH HORMONES DO NOT WORK THAT WAY","date":"2013-03-28T02:56:24.709Z","type":"message"}
{"nick":"mbalho","message":"i am not trying to fix anything, just complaining","date":"2013-03-28T02:56:36.991Z","type":"message"}
{"nick":"defunctzombie","message":"+1 mbalho","date":"2013-03-28T02:56:41.903Z","type":"message"}
{"nick":"substack","message":"it has rbytes as an optional dependency","date":"2013-03-28T02:56:43.162Z","type":"message"}
{"nick":"substack","message":"which is dumb","date":"2013-03-28T02:56:45.604Z","type":"message"}
{"nick":"marcello3d","date":"2013-03-28T02:56:47.821Z","type":"join"}
{"nick":"fallsemo","reason":"Quit: Leaving.","date":"2013-03-28T02:58:25.862Z","type":"quit"}
{"nick":"defunctzombie","reason":"Ping timeout: 255 seconds","date":"2013-03-28T03:03:29.380Z","type":"quit"}
{"nick":"defunctzombie","date":"2013-03-28T03:04:32.019Z","type":"join"}
{"nick":"Corren","date":"2013-03-28T03:15:17.784Z","type":"join"}
{"nick":"mikeal","date":"2013-03-28T03:15:41.854Z","type":"join"}
{"nick":"chrisdickinson","message":"mbalho: this is why i want to make live reload not use sock","date":"2013-03-28T03:16:05.651Z","type":"message"}
{"nick":"mbalho","message":"ya","date":"2013-03-28T03:16:11.128Z","type":"message"}
{"nick":"chrisdickinson","message":"on beefy","date":"2013-03-28T03:16:12.583Z","type":"message"}
{"nick":"defunctzombie","message":"chrisdickinson: engine","date":"2013-03-28T03:17:11.439Z","type":"message"}
{"nick":"kenperkins","reason":"Ping timeout: 252 seconds","date":"2013-03-28T03:17:21.198Z","type":"quit"}
{"nick":"Corren","new_nick":"kenperkins","date":"2013-03-28T03:17:21.435Z","type":"nick"}
{"nick":"defunctzombie","message":"I like engine.io for some reason","date":"2013-03-28T03:17:22.195Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-28T03:17:23.897Z","type":"quit"}
{"nick":"defunctzombie","message":"seems simple enough to understand.. maybe that isn't true","date":"2013-03-28T03:17:31.247Z","type":"message"}
{"nick":"defunctzombie","message":"substack: https://github.com/shtylman/node-browser-resolve/pull/12","date":"2013-03-28T03:35:00.978Z","type":"message"}
{"nick":"substack","message":"defunctzombie: should probably let that pull req go through","date":"2013-03-28T03:37:01.323Z","type":"message"}
{"nick":"substack","message":"although hmmm not sure","date":"2013-03-28T03:37:33.282Z","type":"message"}
{"nick":"substack","message":"being explicit is good","date":"2013-03-28T03:37:55.602Z","type":"message"}
{"nick":"defunctzombie","message":"https://code.google.com/p/ngxv8/","date":"2013-03-28T03:48:51.613Z","type":"message"}
{"nick":"defunctzombie","message":"that is crazy..but not maintained it seems","date":"2013-03-28T03:49:40.944Z","type":"message"}
{"nick":"defunctzombie","message":"thank god","date":"2013-03-28T03:49:42.644Z","type":"message"}
{"nick":"substack","message":"this is a sweet module https://github.com/ypocat/npmlv","date":"2013-03-28T03:59:56.947Z","type":"message"}
{"nick":"substack","message":"was just about to write something like this if I couldn't find anything","date":"2013-03-28T04:00:05.448Z","type":"message"}
{"nick":"defunctzombie","message":"nice","date":"2013-03-28T04:01:04.831Z","type":"message"}
{"nick":"defunctzombie","message":"the -n and -a modes should be removed haha","date":"2013-03-28T04:01:11.422Z","type":"message"}
{"nick":"shuaib","reason":"Quit: Computer has gone to sleep.","date":"2013-03-28T04:02:35.050Z","type":"quit"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-03-28T04:15:30.288Z","type":"quit"}
{"nick":"substack","message":"defunctzombie: https://github.com/substack/npmlv/tree/tilde#usage","date":"2013-03-28T04:20:03.823Z","type":"message"}
{"nick":"substack","message":"-t for tilde","date":"2013-03-28T04:20:09.649Z","type":"message"}
{"nick":"jcrugzz","reason":"Ping timeout: 245 seconds","date":"2013-03-28T04:20:24.936Z","type":"quit"}
{"nick":"defunctzombie","message":"substack: cool, I like the default pinned usage ;)","date":"2013-03-28T04:20:33.211Z","type":"message"}
{"nick":"defunctzombie","message":"substack: you should also remove the others","date":"2013-03-28T04:20:37.159Z","type":"message"}
{"nick":"defunctzombie","message":"substack: and say that it is better practice to use ~ or pin directly","date":"2013-03-28T04:20:47.860Z","type":"message"}
{"nick":"defunctzombie","message":"we shouldn't encourage libs that will break in the future","date":"2013-03-28T04:21:01.438Z","type":"message"}
{"nick":"substack","message":"it's not my module","date":"2013-03-28T04:21:03.784Z","type":"message"}
{"nick":"substack","message":"I just want -t","date":"2013-03-28T04:21:09.157Z","type":"message"}
{"nick":"defunctzombie","message":"substack: yea, I would just suggest it","date":"2013-03-28T04:21:10.826Z","type":"message"}
{"nick":"substack","message":"post an issue","date":"2013-03-28T04:21:16.416Z","type":"message"}
{"nick":"defunctzombie","message":"kk","date":"2013-03-28T04:21:19.644Z","type":"message"}
{"nick":"st_luke","date":"2013-03-28T04:28:13.689Z","type":"join"}
{"nick":"st_luke","message":"has anyone tried image resizing without bindings to a native lib?","date":"2013-03-28T04:29:35.409Z","type":"message"}
{"nick":"substack","message":"mbalho: https://github.com/substack/stream-handbook#concat-stream","date":"2013-03-28T04:41:42.260Z","type":"message"}
{"nick":"chrisdickinson","message":"substack: i have to ask based on a readme image; are you a terry pratchett fan?","date":"2013-03-28T04:45:26.229Z","type":"message"}
{"nick":"mint_xian","message":"chrisdickinson: Everyone is a Prachett fan. Some people just don't know it yet.","date":"2013-03-28T04:46:05.158Z","type":"message"}
{"nick":"chrisdickinson","message":"mint_xian: :D","date":"2013-03-28T04:46:25.930Z","type":"message"}
{"nick":"substack","message":"chrisdickinson: haven't read any of his stuff","date":"2013-03-28T04:47:58.252Z","type":"message"}
{"nick":"substack","message":"I read fiction with extreme infrequence.","date":"2013-03-28T04:48:10.865Z","type":"message"}
{"nick":"mmckegg","date":"2013-03-28T04:48:33.019Z","type":"part"}
{"nick":"Domenic_","reason":"Ping timeout: 252 seconds","date":"2013-03-28T04:53:03.102Z","type":"quit"}
{"nick":"marcello3d","reason":"Remote host closed the connection","date":"2013-03-28T04:57:55.691Z","type":"quit"}
{"nick":"mbalho","message":"substack: nice!","date":"2013-03-28T04:59:47.268Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-28T05:29:19.306Z","type":"quit"}
{"nick":"jesusabdullah","message":"I read part of a Pratchett book once","date":"2013-03-28T05:39:59.719Z","type":"message"}
{"nick":"jesusabdullah","message":"it was okay","date":"2013-03-28T05:40:01.947Z","type":"message"}
{"nick":"jesusabdullah","message":"not my deal but I understand why some people would love it","date":"2013-03-28T05:40:10.271Z","type":"message"}
{"nick":"chrisdickinson","message":"on a lighter note: node's builtin zlib is giving me infinite headaches.","date":"2013-03-28T05:46:13.066Z","type":"message"}
{"nick":"mbalho","message":"blame isaacs","date":"2013-03-28T05:47:27.401Z","type":"message"}
{"nick":"jesusabdullah","message":"is that lighter?","date":"2013-03-28T05:47:30.064Z","type":"message"}
{"nick":"jesusabdullah","message":"oh yeah, blame isaac for everything","date":"2013-03-28T05:47:37.176Z","type":"message"}
{"nick":"jesusabdullah","message":"I blame isaac for my own libraries!","date":"2013-03-28T05:47:51.179Z","type":"message"}
{"nick":"jesusabdullah","message":"also my severe lack of fresh paper","date":"2013-03-28T05:48:02.743Z","type":"message"}
{"nick":"chrisdickinson","message":"haha","date":"2013-03-28T05:48:11.243Z","type":"message"}
{"nick":"mikeal","date":"2013-03-28T05:48:22.924Z","type":"join"}
{"nick":"chrisdickinson","message":"it's really not node's fault, it's a weird use case","date":"2013-03-28T05:48:25.284Z","type":"message"}
{"nick":"chrisdickinson","message":"it's just one of those situations where, well, i wish zlib was a billion different packages","date":"2013-03-28T05:48:48.485Z","type":"message"}
{"nick":"chrisdickinson","message":"but it's just the one builtin one","date":"2013-03-28T05:48:56.876Z","type":"message"}
{"nick":"jesusabdullah","message":"your weird use case? isaac's fault","date":"2013-03-28T05:49:13.862Z","type":"message"}
{"nick":"jesusabdullah","message":"lol","date":"2013-03-28T05:49:15.225Z","type":"message"}
{"nick":"chrisdickinson","message":"i mean, i have to parse a file that has object headers that are varint encoded (this is okay and cool)","date":"2013-03-28T05:50:14.537Z","type":"message"}
{"nick":"chrisdickinson","message":"but the first byte is as follows: \"CTTTSSSS\"","date":"2013-03-28T05:50:35.291Z","type":"message"}
{"nick":"chrisdickinson","message":"where C is \"continue to next byte\"","date":"2013-03-28T05:50:43.183Z","type":"message"}
{"nick":"chrisdickinson","message":"T is \"type of subsequent object\"","date":"2013-03-28T05:50:52.487Z","type":"message"}
{"nick":"chrisdickinson","message":"and S is \"expanded size\"","date":"2013-03-28T05:51:02.914Z","type":"message"}
{"nick":"chrisdickinson","message":"so afaict there's no way to be like \"okay cool, I'll just walk N bytes ahead and read the next thing\"","date":"2013-03-28T05:51:30.626Z","type":"message"}
{"nick":"chrisdickinson","message":"since you need to give all of the rest of the bytes you have on this turn (and maybe more) to zlib","date":"2013-03-28T05:51:52.462Z","type":"message"}
{"nick":"chrisdickinson","message":"until the inflated version matches the expanded size","date":"2013-03-28T05:52:10.422Z","type":"message"}
{"nick":"chrisdickinson","message":"but oh no, deflated streams are occasionally followed by a 4 byte adler checksum, which node's zlib will output data before","date":"2013-03-28T05:52:36.834Z","type":"message"}
{"nick":"chrisdickinson","message":"so you need to blorp out those 4 bytes and hop ahead","date":"2013-03-28T05:52:49.334Z","type":"message"}
{"nick":"chrisdickinson","message":"but sometimes that's three bytes because zlib will accept more bytes? or some other reason?","date":"2013-03-28T05:53:14.560Z","type":"message"}
{"nick":"chrisdickinson","message":"the only implementation i've seen that works of this parsing is A) synchronous and B) uses the \"raw-deflate.js\" that's been floating around the internet, unlicensed, since 1998","date":"2013-03-28T05:54:19.918Z","type":"message"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-03-28T06:08:47.228Z","type":"quit"}
{"nick":"kenperkins","reason":"Quit: Computer has gone to sleep.","date":"2013-03-28T06:11:32.248Z","type":"quit"}
{"nick":"jesusabdullah","message":"chrisdickinson: read raw-deflate, take notes, re-implement based on notes","date":"2013-03-28T06:28:50.924Z","type":"message"}
{"nick":"jesusabdullah","message":"chrisdickinson: use child processes so you can have your sync algorithms and callback them too","date":"2013-03-28T06:29:15.282Z","type":"message"}
{"nick":"chrisdickinson","message":"well, a native inflate wouldn't really need to be sync","date":"2013-03-28T06:29:43.874Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-03-28T06:30:42.049Z","type":"nick"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-03-28T06:48:05.999Z","type":"quit"}
{"nick":"dominictarr","date":"2013-03-28T07:39:55.595Z","type":"join"}
{"nick":"juliangruber","message":"dominictarr: I hacked on that level-store index thing","date":"2013-03-28T07:42:07.850Z","type":"message"}
{"nick":"dominictarr","message":"aha I saw","date":"2013-03-28T07:42:31.140Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-28T07:45:16.810Z","type":"quit"}
{"nick":"calvinfo_","reason":"Quit: Leaving","date":"2013-03-28T08:02:28.462Z","type":"quit"}
{"nick":"sorensen","reason":"Ping timeout: 264 seconds","date":"2013-03-28T08:08:00.702Z","type":"quit"}
{"nick":"sorensen","date":"2013-03-28T08:08:26.342Z","type":"join"}
{"nick":"calvinfo","date":"2013-03-28T08:10:14.110Z","type":"join"}
{"nick":"calvinfo","reason":"Client Quit","date":"2013-03-28T08:12:20.585Z","type":"quit"}
{"nick":"calvinfo","date":"2013-03-28T08:18:59.036Z","type":"join"}
{"nick":"calvinfo_","date":"2013-03-28T08:19:24.056Z","type":"join"}
{"nick":"calvinfo_","reason":"Client Quit","date":"2013-03-28T08:19:24.056Z","type":"quit"}
{"nick":"calvinfo","reason":"Client Quit","date":"2013-03-28T08:21:31.456Z","type":"quit"}
{"nick":"calvinfo","date":"2013-03-28T08:27:25.983Z","type":"join"}
{"nick":"thatguydan","date":"2013-03-28T08:42:18.078Z","type":"join"}
{"nick":"jez0990","date":"2013-03-28T09:53:15.889Z","type":"join"}
{"nick":"shuaib","date":"2013-03-28T10:15:57.775Z","type":"join"}
{"nick":"ehd","reason":"Ping timeout: 246 seconds","date":"2013-03-28T10:37:44.139Z","type":"quit"}
{"nick":"sveisvei","reason":"Ping timeout: 246 seconds","date":"2013-03-28T10:39:50.077Z","type":"quit"}
{"nick":"gozala","reason":"Ping timeout: 246 seconds","date":"2013-03-28T10:40:11.271Z","type":"quit"}
{"nick":"owenb","reason":"Ping timeout: 246 seconds","date":"2013-03-28T10:40:32.104Z","type":"quit"}
{"nick":"thl0","date":"2013-03-28T10:48:17.424Z","type":"join"}
{"nick":"substack","message":"https://github.com/substack/exterminate#example","date":"2013-03-28T10:52:35.921Z","type":"message"}
{"nick":"wolfeidau","date":"2013-03-28T11:04:07.101Z","type":"join"}
{"nick":"spion","date":"2013-03-28T11:14:24.793Z","type":"join"}
{"nick":"mint_xian","reason":"Ping timeout: 260 seconds","date":"2013-03-28T11:23:44.964Z","type":"quit"}
{"nick":"isaacs","reason":"Ping timeout: 255 seconds","date":"2013-03-28T11:23:45.174Z","type":"quit"}
{"nick":"jden|zz_","reason":"Ping timeout: 260 seconds","date":"2013-03-28T11:23:45.384Z","type":"quit"}
{"nick":"rannmann","reason":"Ping timeout: 260 seconds","date":"2013-03-28T11:23:46.644Z","type":"quit"}
{"nick":"chilts","reason":"Ping timeout: 255 seconds","date":"2013-03-28T11:23:46.854Z","type":"quit"}
{"nick":"hij1nx","reason":"Ping timeout: 255 seconds","date":"2013-03-28T11:23:47.274Z","type":"quit"}
{"nick":"LOUDBOT","reason":"Ping timeout: 255 seconds","date":"2013-03-28T11:23:47.484Z","type":"quit"}
{"nick":"rook2paw1","reason":"Ping timeout: 255 seconds","date":"2013-03-28T11:23:47.485Z","type":"quit"}
{"nick":"py1hon","reason":"Ping timeout: 255 seconds","date":"2013-03-28T11:23:47.694Z","type":"quit"}
{"nick":"jesusabdullah","reason":"Ping timeout: 255 seconds","date":"2013-03-28T11:23:47.694Z","type":"quit"}
{"nick":"rannmann","date":"2013-03-28T11:23:48.745Z","type":"join"}
{"nick":"rannmann","reason":"Changing host","date":"2013-03-28T11:23:48.745Z","type":"quit"}
{"nick":"rannmann","date":"2013-03-28T11:23:48.745Z","type":"join"}
{"nick":"isaacs_","date":"2013-03-28T11:23:50.834Z","type":"join"}
{"nick":"py1hon_","date":"2013-03-28T11:23:51.044Z","type":"join"}
{"nick":"jesusabdullah","date":"2013-03-28T11:23:51.254Z","type":"join"}
{"nick":"rook2pawn","date":"2013-03-28T11:23:51.464Z","type":"join"}
{"nick":"hij1nx","date":"2013-03-28T11:23:53.145Z","type":"join"}
{"nick":"isaacs_","new_nick":"Guest93631","date":"2013-03-28T11:24:01.519Z","type":"nick"}
{"nick":"mintxian","date":"2013-03-28T11:24:21.324Z","type":"join"}
{"nick":"mintxian","new_nick":"mint_xian","date":"2013-03-28T11:24:21.744Z","type":"nick"}
{"nick":"chilts","date":"2013-03-28T11:24:21.744Z","type":"join"}
{"nick":"jden|zz","date":"2013-03-28T11:24:33.364Z","type":"join"}
{"nick":"cubert","reason":"*.net *.split","date":"2013-03-28T11:28:32.692Z","type":"quit"}
{"nick":"mbalho","reason":"*.net *.split","date":"2013-03-28T11:28:32.693Z","type":"quit"}
{"nick":"rowbit","reason":"*.net *.split","date":"2013-03-28T11:28:32.902Z","type":"quit"}
{"nick":"cubert","date":"2013-03-28T11:31:37.477Z","type":"join"}
{"nick":"mbalho","date":"2013-03-28T11:31:37.691Z","type":"join"}
{"nick":"rowbit","date":"2013-03-28T11:31:37.691Z","type":"join"}
{"nick":"juliangruber","message":"substack: is your vim running correctly in exterminate?","date":"2013-03-28T11:36:12.747Z","type":"message"}
{"nick":"calvinfo","reason":"Ping timeout: 258 seconds","date":"2013-03-28T11:38:39.305Z","type":"quit"}
{"nick":"tanepiper","message":"hmm I'm still trying to run it on OSX :(","date":"2013-03-28T11:39:14.886Z","type":"message"}
{"nick":"tanepiper","message":"net.js:50","date":"2013-03-28T11:39:18.542Z","type":"message"}
{"nick":"tanepiper","message":"  throw new TypeError('Unsupported fd type: ' + type);","date":"2013-03-28T11:39:18.758Z","type":"message"}
{"nick":"tanepiper","message":"        ^","date":"2013-03-28T11:39:18.758Z","type":"message"}
{"nick":"tanepiper","message":"TypeError: Unsupported fd type: TTY","date":"2013-03-28T11:39:20.174Z","type":"message"}
{"nick":"tanepiper","message":"then when i try run it again:","date":"2013-03-28T11:39:35.281Z","type":"message"}
{"nick":"tanepiper","message":"[3670:1799:0328/113856:ERROR:process_singleton_mac.cc(106)] Unable to obtain profile lock.","date":"2013-03-28T11:39:36.406Z","type":"message"}
{"nick":"ralphthe1inja","reason":"Quit: leaving","date":"2013-03-28T11:44:25.223Z","type":"quit"}
{"nick":"shuaib","reason":"Ping timeout: 256 seconds","date":"2013-03-28T11:55:00.566Z","type":"quit"}
{"nick":"shuaib","date":"2013-03-28T11:57:32.624Z","type":"join"}
{"nick":"ins0mnia","date":"2013-03-28T12:09:56.356Z","type":"join"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-03-28T12:16:31.421Z","type":"quit"}
{"nick":"ehd","date":"2013-03-28T12:37:58.258Z","type":"join"}
{"nick":"gozala","date":"2013-03-28T12:38:47.167Z","type":"join"}
{"nick":"owenb","date":"2013-03-28T12:39:16.206Z","type":"join"}
{"nick":"sveisvei","date":"2013-03-28T12:39:23.323Z","type":"join"}
{"nick":"evbogue","date":"2013-03-28T12:52:05.671Z","type":"join"}
{"nick":"dominictarr","date":"2013-03-28T13:05:35.171Z","type":"join"}
{"nick":"gwenbell","date":"2013-03-28T13:06:36.785Z","type":"join"}
{"nick":"fallsemo","date":"2013-03-28T13:11:10.668Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-03-28T13:13:17.434Z","type":"quit"}
{"nick":"AvianFlu","date":"2013-03-28T13:14:18.902Z","type":"join"}
{"nick":"evbogue","date":"2013-03-28T13:30:03.842Z","type":"quit"}
{"nick":"marcello3d","date":"2013-03-28T13:30:07.375Z","type":"join"}
{"nick":"dominictarr","message":"rvagg: hey, are you in dublin yet?","date":"2013-03-28T13:32:12.911Z","type":"message"}
{"nick":"timoxley","date":"2013-03-28T13:32:16.761Z","type":"join"}
{"nick":"jibay","date":"2013-03-28T13:33:57.107Z","type":"join"}
{"nick":"dominictarr","message":"hij1nx: you in dublin?","date":"2013-03-28T13:35:02.665Z","type":"message"}
{"nick":"FireFly","message":"substack: in https://github.com/substack/shux/blob/master/index.js#L81 , don't you want  cwd: opts.cwd || '/'  instead?","date":"2013-03-28T13:35:32.882Z","type":"message"}
{"nick":"gwenbell","reason":"Quit: Computer has gone to sleep.","date":"2013-03-28T13:41:41.684Z","type":"quit"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-03-28T13:41:49.129Z","type":"quit"}
{"nick":"Domenic_","date":"2013-03-28T13:49:55.326Z","type":"join"}
{"nick":"thl0","date":"2013-03-28T13:53:26.567Z","type":"join"}
{"nick":"timoxley","date":"2013-03-28T13:55:11.968Z","type":"join"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-03-28T14:11:15.422Z","type":"quit"}
{"nick":"kenperkins","date":"2013-03-28T14:12:07.815Z","type":"join"}
{"nick":"kenperkins","reason":"Max SendQ exceeded","date":"2013-03-28T14:12:36.433Z","type":"quit"}
{"nick":"kenperkins","date":"2013-03-28T14:19:34.587Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-28T14:31:35.791Z","type":"quit"}
{"nick":"crank","reason":"Ping timeout: 252 seconds","date":"2013-03-28T14:32:12.305Z","type":"quit"}
{"nick":"Domenic_","reason":"Remote host closed the connection","date":"2013-03-28T14:32:33.885Z","type":"quit"}
{"nick":"crank","date":"2013-03-28T14:37:27.868Z","type":"join"}
{"nick":"mikolalysenko","date":"2013-03-28T14:41:09.628Z","type":"join"}
{"nick":"Domenic_","date":"2013-03-28T14:42:47.648Z","type":"join"}
{"nick":"dguttman","date":"2013-03-28T14:47:09.776Z","type":"join"}
{"nick":"timoxley","date":"2013-03-28T14:47:53.785Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2013-03-28T14:54:40.611Z","type":"nick"}
{"nick":"mikolalysenko","reason":"Read error: Connection reset by peer","date":"2013-03-28T15:04:05.099Z","type":"quit"}
{"nick":"shuaib","reason":"Ping timeout: 264 seconds","date":"2013-03-28T15:04:24.775Z","type":"quit"}
{"nick":"shuaib","date":"2013-03-28T15:07:38.560Z","type":"join"}
{"nick":"shuaib","reason":"Ping timeout: 260 seconds","date":"2013-03-28T15:12:15.859Z","type":"quit"}
{"nick":"shuaib","date":"2013-03-28T15:14:13.152Z","type":"join"}
{"nick":"mikeal","date":"2013-03-28T15:16:13.065Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-03-28T15:20:25.042Z","type":"quit"}
{"nick":"evbogue","date":"2013-03-28T15:39:48.375Z","type":"join"}
{"nick":"mikeal","date":"2013-03-28T15:47:35.114Z","type":"join"}
{"nick":"evbogue","date":"2013-03-28T15:48:27.704Z","type":"quit"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-03-28T15:49:55.347Z","type":"quit"}
{"nick":"tmcw","date":"2013-03-28T15:53:02.890Z","type":"join"}
{"nick":"thatguydan","reason":"Quit: thatguydan","date":"2013-03-28T15:54:52.357Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-03-28T16:04:37.098Z","type":"join"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-03-28T16:06:20.908Z","type":"quit"}
{"nick":"tilgovi","date":"2013-03-28T16:11:38.934Z","type":"join"}
{"nick":"evbogue","date":"2013-03-28T16:14:58.285Z","type":"join"}
{"nick":"mikolalysenko","date":"2013-03-28T16:23:07.870Z","type":"join"}
{"nick":"Guest93631","new_nick":"isaacs","date":"2013-03-28T16:23:15.386Z","type":"nick"}
{"nick":"mikeal","date":"2013-03-28T16:27:11.939Z","type":"join"}
{"nick":"tanepiper","reason":"Ping timeout: 246 seconds","date":"2013-03-28T16:33:40.962Z","type":"quit"}
{"nick":"thl0","date":"2013-03-28T16:36:44.265Z","type":"join"}
{"nick":"tanepiper","date":"2013-03-28T16:36:45.795Z","type":"join"}
{"nick":"thl0","reason":"Read error: Connection reset by peer","date":"2013-03-28T16:36:59.343Z","type":"quit"}
{"nick":"thl0","date":"2013-03-28T16:37:20.055Z","type":"join"}
{"nick":"thl0","reason":"Ping timeout: 248 seconds","date":"2013-03-28T16:45:25.952Z","type":"quit"}
{"nick":"calvinfo","date":"2013-03-28T16:47:31.651Z","type":"join"}
{"nick":"fallsemo","reason":"Quit: Leaving.","date":"2013-03-28T16:53:54.891Z","type":"quit"}
{"nick":"gwenbell","date":"2013-03-28T17:00:56.656Z","type":"join"}
{"nick":"fallsemo","date":"2013-03-28T17:04:30.226Z","type":"join"}
{"nick":"thl0","date":"2013-03-28T17:07:00.523Z","type":"join"}
{"nick":"CryptoQuick","date":"2013-03-28T17:09:57.353Z","type":"join"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2013-03-28T17:10:07.345Z","type":"quit"}
{"nick":"shuaib","reason":"Ping timeout: 240 seconds","date":"2013-03-28T17:18:35.329Z","type":"quit"}
{"nick":"shuaib","date":"2013-03-28T17:20:11.246Z","type":"join"}
{"nick":"gozala","reason":"Ping timeout: 245 seconds","date":"2013-03-28T17:23:03.171Z","type":"quit"}
{"nick":"pikpik","reason":"Ping timeout: 258 seconds","date":"2013-03-28T17:25:10.259Z","type":"quit"}
{"nick":"owenb","reason":"Ping timeout: 264 seconds","date":"2013-03-28T17:25:24.608Z","type":"quit"}
{"nick":"dominictarr","message":"rvagg: you there?","date":"2013-03-28T17:26:15.062Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-28T17:33:29.422Z","type":"quit"}
{"nick":"jcrugzz","reason":"Ping timeout: 256 seconds","date":"2013-03-28T17:34:38.937Z","type":"quit"}
{"nick":"dominictarr","date":"2013-03-28T17:36:47.209Z","type":"join"}
{"nick":"gwenbell","reason":"Quit: Computer has gone to sleep.","date":"2013-03-28T17:36:49.123Z","type":"quit"}
{"nick":"sveisvei","reason":"Ping timeout: 264 seconds","date":"2013-03-28T17:37:24.641Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-03-28T17:38:15.380Z","type":"join"}
{"nick":"defunctzombie","message":"isaacs: https://npmjs.org/package/mootools-slick-parser","date":"2013-03-28T17:42:50.281Z","type":"message"}
{"nick":"defunctzombie","message":"??","date":"2013-03-28T17:42:51.260Z","type":"message"}
{"nick":"isaacs","message":"defunctzombie: means that something was unpublished, and the cache wasn't cleare.","date":"2013-03-28T17:43:15.583Z","type":"message"}
{"nick":"isaacs","message":"d","date":"2013-03-28T17:43:18.615Z","type":"message"}
{"nick":"defunctzombie","message":"sigh","date":"2013-03-28T17:43:23.725Z","type":"message"}
{"nick":"defunctzombie","message":"I am depending on an older version of some module","date":"2013-03-28T17:43:35.520Z","type":"message"}
{"nick":"defunctzombie","message":"that has that as a dep","date":"2013-03-28T17:43:41.008Z","type":"message"}
{"nick":"isaacs","message":"defunctzombie: known issue that i have a pull req to fix, but haven't landed.","date":"2013-03-28T17:43:43.134Z","type":"message"}
{"nick":"isaacs","message":"yeah, i don't know.","date":"2013-03-28T17:43:45.440Z","type":"message"}
{"nick":"isaacs","message":"talk to the author","date":"2013-03-28T17:43:48.288Z","type":"message"}
{"nick":"defunctzombie","message":"fuck","date":"2013-03-28T17:43:49.509Z","type":"message"}
{"nick":"defunctzombie","message":"ok, thanks :)","date":"2013-03-28T17:43:53.730Z","type":"message"}
{"nick":"mikolalysenko","reason":"Ping timeout: 240 seconds","date":"2013-03-28T17:45:05.381Z","type":"quit"}
{"nick":"pikpik","date":"2013-03-28T17:49:56.286Z","type":"join"}
{"nick":"sveisvei","date":"2013-03-28T17:50:38.896Z","type":"join"}
{"nick":"owenb","date":"2013-03-28T17:51:57.841Z","type":"join"}
{"nick":"Domenic_","new_nick":"Domenic_away","date":"2013-03-28T17:52:21.675Z","type":"nick"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-03-28T17:56:14.309Z","type":"quit"}
{"nick":"Domenic_away","reason":"Remote host closed the connection","date":"2013-03-28T17:57:07.906Z","type":"quit"}
{"nick":"gozala_","date":"2013-03-28T17:57:33.208Z","type":"join"}
{"nick":"shuaib","reason":"Ping timeout: 248 seconds","date":"2013-03-28T17:58:29.860Z","type":"quit"}
{"nick":"shuaib","date":"2013-03-28T18:00:14.645Z","type":"join"}
{"nick":"mikolalysenko","date":"2013-03-28T18:01:15.791Z","type":"join"}
{"nick":"sveisvei","reason":"Ping timeout: 240 seconds","date":"2013-03-28T18:13:05.302Z","type":"quit"}
{"nick":"Raynos","reason":"Ping timeout: 258 seconds","date":"2013-03-28T18:13:51.116Z","type":"quit"}
{"nick":"evbogue","date":"2013-03-28T18:14:51.349Z","type":"quit"}
{"nick":"Domenic_away","date":"2013-03-28T18:16:07.104Z","type":"join"}
{"nick":"Domenic_away","new_nick":"Domenic_","date":"2013-03-28T18:16:13.311Z","type":"nick"}
{"nick":"pikpik","reason":"Ping timeout: 256 seconds","date":"2013-03-28T18:16:18.259Z","type":"quit"}
{"nick":"gozala_","reason":"Ping timeout: 256 seconds","date":"2013-03-28T18:16:52.101Z","type":"quit"}
{"nick":"owenb","reason":"Ping timeout: 240 seconds","date":"2013-03-28T18:17:35.334Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 264 seconds","date":"2013-03-28T18:17:55.510Z","type":"quit"}
{"nick":"notalexgordon_","reason":"Ping timeout: 258 seconds","date":"2013-03-28T18:20:22.364Z","type":"quit"}
{"nick":"shuaib","reason":"Ping timeout: 256 seconds","date":"2013-03-28T18:20:50.141Z","type":"quit"}
{"nick":"shuaib","date":"2013-03-28T18:21:43.192Z","type":"join"}
{"nick":"ryanseddon","reason":"Ping timeout: 258 seconds","date":"2013-03-28T18:22:17.165Z","type":"quit"}
{"nick":"niftylettuce","reason":"Ping timeout: 258 seconds","date":"2013-03-28T18:23:03.108Z","type":"quit"}
{"nick":"shuaib","reason":"Ping timeout: 255 seconds","date":"2013-03-28T18:39:29.409Z","type":"quit"}
{"nick":"mikolalysenko","date":"2013-03-28T18:40:37.714Z","type":"join"}
{"nick":"shuaib","date":"2013-03-28T18:40:43.430Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-03-28T18:43:15.245Z","type":"quit"}
{"nick":"shama","date":"2013-03-28T18:43:40.265Z","type":"join"}
{"nick":"Benvie","date":"2013-03-28T18:44:13.047Z","type":"join"}
{"nick":"dguttman","date":"2013-03-28T18:46:04.174Z","type":"join"}
{"nick":"dguttman","reason":"Ping timeout: 240 seconds","date":"2013-03-28T18:51:05.340Z","type":"quit"}
{"nick":"spion","reason":"Ping timeout: 246 seconds","date":"2013-03-28T18:51:14.076Z","type":"quit"}
{"nick":"Domenic_","reason":"Remote host closed the connection","date":"2013-03-28T18:52:06.304Z","type":"quit"}
{"nick":"dguttman","date":"2013-03-28T18:55:11.250Z","type":"join"}
{"nick":"Domenic_","date":"2013-03-28T18:55:57.975Z","type":"join"}
{"nick":"Domenic_","message":"what do people want in ES7? I know better integer types is a high priority. Curious what other things people feel are missing. isaacs?","date":"2013-03-28T19:03:49.499Z","type":"message"}
{"nick":"dguttman","reason":"Read error: Connection reset by peer","date":"2013-03-28T19:04:57.023Z","type":"quit"}
{"nick":"fallsemo","reason":"Read error: No route to host","date":"2013-03-28T19:05:20.867Z","type":"quit"}
{"nick":"chrisdickinson","message":"kind of hard to say, i'm having a hard time keeping all of the changes from es6 in my head :)","date":"2013-03-28T19:06:00.093Z","type":"message"}
{"nick":"fallsemo","date":"2013-03-28T19:06:07.928Z","type":"join"}
{"nick":"chrisdickinson","message":"but yes, better integer types","date":"2013-03-28T19:06:10.120Z","type":"message"}
{"nick":"chrisdickinson","message":"i suppose a parser api would be ideal","date":"2013-03-28T19:07:13.515Z","type":"message"}
{"nick":"fallsemo","reason":"Read error: Connection reset by peer","date":"2013-03-28T19:07:13.726Z","type":"quit"}
{"nick":"chrisdickinson","message":"with the ability to register new tokens","date":"2013-03-28T19:07:26.303Z","type":"message"}
{"nick":"chrisdickinson","message":"etc.","date":"2013-03-28T19:07:28.347Z","type":"message"}
{"nick":"fallsemo","date":"2013-03-28T19:07:46.184Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-03-28T19:08:22.215Z","type":"quit"}
{"nick":"Domenic_","message":"macros?","date":"2013-03-28T19:09:10.804Z","type":"message"}
{"nick":"AvianFlu","date":"2013-03-28T19:09:57.545Z","type":"join"}
{"nick":"owenb","date":"2013-03-28T19:10:05.335Z","type":"join"}
{"nick":"Benvie","message":"Domenic_, based on recent es-discuss discussion, WeakRefs","date":"2013-03-28T19:11:02.873Z","type":"message"}
{"nick":"Domenic_","message":"Benvie: yeah, TC39's got that definitely. Just curious if there are things the community wants that they are missing.","date":"2013-03-28T19:11:30.221Z","type":"message"}
{"nick":"Benvie","message":"ah","date":"2013-03-28T19:11:37.909Z","type":"message"}
{"nick":"Domenic_","message":"I think access to the AST Parser fits in that category","date":"2013-03-28T19:11:44.792Z","type":"message"}
{"nick":"jesusabdullah","message":"idk dude, I'm pretty disillusioned re: tc39","date":"2013-03-28T19:11:50.859Z","type":"message"}
{"nick":"jesusabdullah","message":"they don't take feedbax well","date":"2013-03-28T19:11:56.129Z","type":"message"}
{"nick":"Domenic_","message":"jesusabdullah: really? my experience has been the opposite.","date":"2013-03-28T19:12:17.291Z","type":"message"}
{"nick":"Benvie","message":"same, but it seems there's a divide in peoples' opinions","date":"2013-03-28T19:12:30.009Z","type":"message"}
{"nick":"Benvie","message":"some people do very well interacting with tc39...and some do very poorly","date":"2013-03-28T19:12:41.075Z","type":"message"}
{"nick":"Domenic_","message":"sure they don't take feedback well from people who say \"fuck standards bodies\" or \"es6 is the new es4,\" because that causes them to flip the bozo bit on you.","date":"2013-03-28T19:12:48.755Z","type":"message"}
{"nick":"Benvie","message":"lol","date":"2013-03-28T19:12:56.885Z","type":"message"}
{"nick":"Domenic_","message":"but if you actually engage it seems to work out.","date":"2013-03-28T19:12:59.208Z","type":"message"}
{"nick":"Benvie","message":"that's been my experience","date":"2013-03-28T19:13:10.675Z","type":"message"}
{"nick":"Benvie","message":"and it's important to remember that everybody is compromising, including the people on tc39","date":"2013-03-28T19:13:27.915Z","type":"message"}
{"nick":"Benvie","message":"so the expectation needs to be metered in terms of what is possible to get in","date":"2013-03-28T19:13:38.463Z","type":"message"}
{"nick":"Benvie","message":"I would like to see syntactic support for @names, but tc39 already has people who want that too happen as well","date":"2013-03-28T19:14:23.723Z","type":"message"}
{"nick":"Benvie","message":"I do not think that a standardized parser/ast will make it. That already exists as a strawman","date":"2013-03-28T19:14:55.329Z","type":"message"}
{"nick":"dguttman","date":"2013-03-28T19:15:29.423Z","type":"join"}
{"nick":"Benvie","message":"http://wiki.ecmascript.org/doku.php?id=strawman:ast for reasons why","date":"2013-03-28T19:15:31.916Z","type":"message"}
{"nick":"jesusabdullah","message":"idk dude","date":"2013-03-28T19:15:56.064Z","type":"message"}
{"nick":"jesusabdullah","message":"these chicks don't even know the name of my band, so...","date":"2013-03-28T19:16:04.711Z","type":"message"}
{"nick":"fallsemo","reason":"Read error: No route to host","date":"2013-03-28T19:31:02.695Z","type":"quit"}
{"nick":"fallsemo","date":"2013-03-28T19:31:40.247Z","type":"join"}
{"nick":"fallsemo","reason":"Read error: No route to host","date":"2013-03-28T19:31:47.609Z","type":"quit"}
{"nick":"fallsemo","date":"2013-03-28T19:32:45.235Z","type":"join"}
{"nick":"fallsemo","reason":"Read error: No route to host","date":"2013-03-28T19:32:51.683Z","type":"quit"}
{"nick":"dguttman","reason":"Read error: Connection reset by peer","date":"2013-03-28T19:34:04.632Z","type":"quit"}
{"nick":"fallsemo","date":"2013-03-28T19:34:22.299Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2013-03-28T19:35:13.566Z","type":"quit"}
{"nick":"yorick","date":"2013-03-28T19:38:24.624Z","type":"join"}
{"nick":"Domenic_","message":"Benvie: I'm a little surprised private names even made it at all. There was real momentum for a while toward killing them in favor of just weak maps...","date":"2013-03-28T19:39:15.814Z","type":"message"}
{"nick":"Benvie","message":"well you need to understand, there's two separate things","date":"2013-03-28T19:39:53.132Z","type":"message"}
{"nick":"Benvie","message":"unique symbols and private symbols","date":"2013-03-28T19:39:57.335Z","type":"message"}
{"nick":"fallsemo","reason":"Read error: No route to host","date":"2013-03-28T19:40:02.425Z","type":"quit"}
{"nick":"Benvie","message":"unique names were never in danger","date":"2013-03-28T19:40:09.256Z","type":"message"}
{"nick":"Domenic_","message":"sure. but is syntax for unique names really a win?","date":"2013-03-28T19:40:21.692Z","type":"message"}
{"nick":"Benvie","message":"I do","date":"2013-03-28T19:40:35.223Z","type":"message"}
{"nick":"Benvie","message":"because having to use bracket notation makes the code a lot less clear","date":"2013-03-28T19:40:47.277Z","type":"message"}
{"nick":"Benvie","message":"it makes it look like you're always using a dynamic variable to get at the property, when in most cases it's actually a static value","date":"2013-03-28T19:41:11.492Z","type":"message"}
{"nick":"Domenic_","message":"i guess i would think that unique symbols would not be used very often.","date":"2013-03-28T19:41:16.645Z","type":"message"}
{"nick":"Benvie","message":"absolutely not","date":"2013-03-28T19:41:22.356Z","type":"message"}
{"nick":"Benvie","message":"they are used a lot","date":"2013-03-28T19:41:32.247Z","type":"message"}
{"nick":"fallsemo","date":"2013-03-28T19:41:36.229Z","type":"join"}
{"nick":"Domenic_","message":"use cases are basically branding and expando-ing on top of existing objects you don't control","date":"2013-03-28T19:41:42.054Z","type":"message"}
{"nick":"Benvie","message":"any time you have \"x._privateProp\" you'd replace that with a unique symbol","date":"2013-03-28T19:41:48.592Z","type":"message"}
{"nick":"fallsemo","reason":"Read error: No route to host","date":"2013-03-28T19:41:52.636Z","type":"quit"}
{"nick":"Benvie","message":"very rarely do you need a private symbol","date":"2013-03-28T19:41:53.843Z","type":"message"}
{"nick":"Domenic_","message":"even branding actually isn't any better with unique than with string-keyed","date":"2013-03-28T19:41:56.256Z","type":"message"}
{"nick":"Benvie","message":"unique symbols are only slightly more visible than private ones","date":"2013-03-28T19:42:03.373Z","type":"message"}
{"nick":"Domenic_","message":"hmm","date":"2013-03-28T19:42:08.966Z","type":"message"}
{"nick":"Domenic_","message":"i don't think people would do that replacement","date":"2013-03-28T19:42:13.931Z","type":"message"}
{"nick":"Benvie","message":"why not?","date":"2013-03-28T19:42:18.095Z","type":"message"}
{"nick":"Domenic_","message":"if you don't get the privacy closures give you, just stick to _'s.","date":"2013-03-28T19:42:24.042Z","type":"message"}
{"nick":"Benvie","message":"the whole point of unique symbols is to replace _","date":"2013-03-28T19:42:35.986Z","type":"message"}
{"nick":"Benvie","message":"because they make it so you don't have accidental namespace collisions","date":"2013-03-28T19:42:49.040Z","type":"message"}
{"nick":"Benvie","message":"like for example, EventEmitters using _listeners","date":"2013-03-28T19:43:03.331Z","type":"message"}
{"nick":"Domenic_","message":"i guess","date":"2013-03-28T19:43:10.698Z","type":"message"}
{"nick":"Benvie","message":"it's mostly private, but still reflectable if you really care to","date":"2013-03-28T19:43:29.424Z","type":"message"}
{"nick":"Benvie","message":"since they're visible with getOwnPropertyKeys or whatever it's to be called","date":"2013-03-28T19:43:42.323Z","type":"message"}
{"nick":"dguttman","date":"2013-03-28T19:44:02.212Z","type":"join"}
{"nick":"Domenic_","message":"i think that lack of collisions is a very slight win over _'s.","date":"2013-03-28T19:44:11.348Z","type":"message"}
{"nick":"Domenic_","message":"given that real-world collision hazards are minor.","date":"2013-03-28T19:44:23.951Z","type":"message"}
{"nick":"Domenic_","message":"expandos on objects you don't control is the only solid use case i can think of","date":"2013-03-28T19:44:35.396Z","type":"message"}
{"nick":"Benvie","message":"this becomes more important in an es6 world where classes and inheritance are more convenient and you need to have separation between different levels of inherited semi-private property and methods","date":"2013-03-28T19:45:05.848Z","type":"message"}
{"nick":"Benvie","message":"it's also useful for universal tokens, like @@iterator","date":"2013-03-28T19:45:54.659Z","type":"message"}
{"nick":"Benvie","message":"say the community comes up with their own semi-formal universal tokens like that","date":"2013-03-28T19:46:12.031Z","type":"message"}
{"nick":"ins0mnia","reason":"Ping timeout: 252 seconds","date":"2013-03-28T19:46:15.324Z","type":"quit"}
{"nick":"Domenic_","message":"heh","date":"2013-03-28T19:46:22.946Z","type":"message"}
{"nick":"Domenic_","message":"like \"then\"","date":"2013-03-28T19:46:25.031Z","type":"message"}
{"nick":"Benvie","message":"exactly","date":"2013-03-28T19:46:28.545Z","type":"message"}
{"nick":"Benvie","message":"and promises are a good example, because you can see issues with name collisions with them already","date":"2013-03-28T19:46:45.393Z","type":"message"}
{"nick":"Benvie","message":"amongst the different versions and whatnot","date":"2013-03-28T19:46:50.244Z","type":"message"}
{"nick":"Benvie","message":"so you could have a package that literally only exports a single unique symbol","date":"2013-03-28T19:47:30.681Z","type":"message"}
{"nick":"Benvie","message":"and then everyone who wants to advertise a compatible api uses that module","date":"2013-03-28T19:47:51.243Z","type":"message"}
{"nick":"Benvie","message":"to name their method or property (or a collection of them)","date":"2013-03-28T19:48:08.815Z","type":"message"}
{"nick":"dguttman","reason":"Ping timeout: 248 seconds","date":"2013-03-28T19:48:22.010Z","type":"quit"}
{"nick":"Benvie","message":"using npm, it would actually automatically version the symbols. Since if you import \"promise-symbols@0.0.1\" in one module and \"promise-symbols@0.0.2\" they could never accidentally overlap like a string name would","date":"2013-03-28T19:49:20.626Z","type":"message"}
{"nick":"fallsemo","date":"2013-03-28T19:49:27.082Z","type":"join"}
{"nick":"shuaib","reason":"Ping timeout: 256 seconds","date":"2013-03-28T19:50:56.051Z","type":"quit"}
{"nick":"shuaib","date":"2013-03-28T19:53:43.592Z","type":"join"}
{"nick":"ins0mnia","date":"2013-03-28T19:53:48.532Z","type":"join"}
{"nick":"defunctzombie","message":"substack: I think I want to re-write the smart multi patch using the new file event","date":"2013-03-28T19:55:57.112Z","type":"message"}
{"nick":"defunctzombie","message":"substack: methinks that might be cleaner actually","date":"2013-03-28T19:56:06.007Z","type":"message"}
{"nick":"defunctzombie","message":"to capture what the bundle includes","date":"2013-03-28T19:56:16.199Z","type":"message"}
{"nick":"dguttman","date":"2013-03-28T19:56:22.207Z","type":"join"}
{"nick":"fallsemo","reason":"Quit: Leaving.","date":"2013-03-28T19:59:14.282Z","type":"quit"}
{"nick":"shuaib","reason":"Remote host closed the connection","date":"2013-03-28T20:04:33.161Z","type":"quit"}
{"nick":"shuaib","date":"2013-03-28T20:05:12.214Z","type":"join"}
{"nick":"fallsemo","date":"2013-03-28T20:05:21.669Z","type":"join"}
{"nick":"Raynos","date":"2013-03-28T20:11:22.740Z","type":"join"}
{"nick":"shuaib","reason":"Ping timeout: 264 seconds","date":"2013-03-28T20:12:31.624Z","type":"quit"}
{"nick":"pikpik","date":"2013-03-28T20:13:19.808Z","type":"join"}
{"nick":"sveisvei","date":"2013-03-28T20:13:38.639Z","type":"join"}
{"nick":"gozala_","date":"2013-03-28T20:13:42.933Z","type":"join"}
{"nick":"shuaib","date":"2013-03-28T20:14:44.748Z","type":"join"}
{"nick":"dguttman","reason":"Read error: Connection reset by peer","date":"2013-03-28T20:17:06.777Z","type":"quit"}
{"nick":"notalexgordon_","date":"2013-03-28T20:18:19.051Z","type":"join"}
{"nick":"dguttman","date":"2013-03-28T20:19:56.672Z","type":"join"}
{"nick":"ryanseddon","date":"2013-03-28T20:20:15.205Z","type":"join"}
{"nick":"spion","date":"2013-03-28T20:22:54.783Z","type":"join"}
{"nick":"niftylettuce","date":"2013-03-28T20:25:07.213Z","type":"join"}
{"nick":"dguttman_","date":"2013-03-28T20:25:46.415Z","type":"join"}
{"nick":"dguttman","reason":"Ping timeout: 264 seconds","date":"2013-03-28T20:27:31.678Z","type":"quit"}
{"nick":"dguttman_","new_nick":"dguttman","date":"2013-03-28T20:27:31.959Z","type":"nick"}
{"nick":"gozala_","date":"2013-03-28T20:30:00.636Z","type":"quit"}
{"nick":"gozala_","date":"2013-03-28T20:30:15.659Z","type":"join"}
{"nick":"AvianFlu","date":"2013-03-28T20:31:08.113Z","type":"join"}
{"nick":"LOUDBOT","date":"2013-03-28T20:31:19.903Z","type":"join"}
{"nick":"gozala_","new_nick":"gozala","date":"2013-03-28T20:32:15.896Z","type":"nick"}
{"nick":"gozala","reason":"Client Quit","date":"2013-03-28T20:32:19.285Z","type":"quit"}
{"nick":"shuaib","reason":"Ping timeout: 255 seconds","date":"2013-03-28T20:32:53.412Z","type":"quit"}
{"nick":"Benvie","reason":"Quit: Leaving","date":"2013-03-28T20:34:07.174Z","type":"quit"}
{"nick":"shuaib","date":"2013-03-28T20:35:13.164Z","type":"join"}
{"nick":"st_luke","date":"2013-03-28T20:36:03.834Z","type":"join"}
{"nick":"Domenic_","message":"st_luke: hahahahahahahahhaa","date":"2013-03-28T20:53:14.775Z","type":"message"}
{"nick":"Domenic_","message":"https://github.com/isaacs/npm/issues/3296#issuecomment-15613627","date":"2013-03-28T20:53:23.311Z","type":"message"}
{"nick":"fallsemo","reason":"Quit: Leaving.","date":"2013-03-28T20:59:28.950Z","type":"quit"}
{"nick":"mikolalysenko","reason":"Ping timeout: 264 seconds","date":"2013-03-28T21:00:48.743Z","type":"quit"}
{"nick":"st_luke","message":"Domenic_: i had a feeling it was gonna be something kinda crazy","date":"2013-03-28T21:01:22.531Z","type":"message"}
{"nick":"st_luke","message":"whenever someone leaves out a critical bit of info it's a silent alarm that it's probably the info you need","date":"2013-03-28T21:01:44.711Z","type":"message"}
{"nick":"jcrugzz_","date":"2013-03-28T21:02:11.621Z","type":"join"}
{"nick":"st_luke","message":"Domenic_: https://github.com/isaacs/npm/issues/2257","date":"2013-03-28T21:02:28.162Z","type":"message"}
{"nick":"Domenic_","message":"st_luke: yeah i loved that","date":"2013-03-28T21:02:50.568Z","type":"message"}
{"nick":"jcrugzz","reason":"Ping timeout: 256 seconds","date":"2013-03-28T21:02:54.095Z","type":"quit"}
{"nick":"jcrugzz_","new_nick":"jcrugzz","date":"2013-03-28T21:03:48.559Z","type":"nick"}
{"nick":"shuaib","reason":"Ping timeout: 264 seconds","date":"2013-03-28T21:13:43.656Z","type":"quit"}
{"nick":"st_luke","message":"🐢.com is available","date":"2013-03-28T21:27:51.218Z","type":"message"}
{"nick":"st_luke","message":"emoji turtle","date":"2013-03-28T21:27:53.064Z","type":"message"}
{"nick":"ins0mnia","reason":"Ping timeout: 255 seconds","date":"2013-03-28T21:29:35.452Z","type":"quit"}
{"nick":"Domenic_","message":"yeah but it'll come out as some sad punycode","date":"2013-03-28T21:31:14.486Z","type":"message"}
{"nick":"Domenic_","message":"xn--qo8h","date":"2013-03-28T21:31:26.549Z","type":"message"}
{"nick":"yorick","message":"it doesn't even render for me","date":"2013-03-28T21:31:52.457Z","type":"message"}
{"nick":"ITpro","date":"2013-03-28T21:33:46.940Z","type":"join"}
{"nick":"st_luke","message":"Domenic_: yeah but in 10 years when everyone supports it, it'll be worth it","date":"2013-03-28T21:36:10.993Z","type":"message"}
{"nick":"Domenic_","message":"st_luke: i don't think it's a support issue, it's a security issue. I.e. phishing using ASCII-like Unicode chars.","date":"2013-03-28T21:40:19.222Z","type":"message"}
{"nick":"defunctzombie","message":"st_luke: get it!","date":"2013-03-28T21:42:46.793Z","type":"message"}
{"nick":"Raynos","message":"dominictarr: http://dom.spec.whatwg.org/#futures","date":"2013-03-28T21:46:28.139Z","type":"message"}
{"nick":"Raynos","message":"Or anyone really","date":"2013-03-28T21:46:34.266Z","type":"message"}
{"nick":"Raynos","message":"how does one go about telling a standards body","date":"2013-03-28T21:46:39.438Z","type":"message"}
{"nick":"Raynos","message":"that a promise is a bad abstraction","date":"2013-03-28T21:46:44.916Z","type":"message"}
{"nick":"ITpro","reason":"Ping timeout: 260 seconds","date":"2013-03-28T21:47:03.862Z","type":"quit"}
{"nick":"defunctzombie","message":"Raynos: by not using it","date":"2013-03-28T21:48:56.095Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: but right now there's a good oppurtunity to kill it and remove it or replace it with a better abstraction","date":"2013-03-28T21:49:21.614Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: you still don't understand the difference between one-and-done versus streams of events?!?","date":"2013-03-28T21:49:29.305Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: I think there are two asynchronous abstractions. a time series of values and a value over time","date":"2013-03-28T21:49:59.141Z","type":"message"}
{"nick":"Raynos","message":"I believe a promise is a shitty in between version of those abstractions","date":"2013-03-28T21:50:09.238Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: what about the asynchronous function call.","date":"2013-03-28T21:50:13.432Z","type":"message"}
{"nick":"Raynos","message":"i.e. you can trivially build a promise out of either of those","date":"2013-03-28T21:50:22.115Z","type":"message"}
{"nick":"Raynos","message":"fuck asynchronous function calls","date":"2013-03-28T21:50:25.905Z","type":"message"}
{"nick":"Domenic_","message":"O____o","date":"2013-03-28T21:50:29.688Z","type":"message"}
{"nick":"Domenic_","message":"well you're definitely in the minority there.","date":"2013-03-28T21:50:52.155Z","type":"message"}
{"nick":"Raynos","message":"i use them all of the place","date":"2013-03-28T21:51:01.979Z","type":"message"}
{"nick":"Domenic_","message":"so good luck?","date":"2013-03-28T21:51:02.602Z","type":"message"}
{"nick":"Domenic_","message":"ok...","date":"2013-03-28T21:51:07.910Z","type":"message"}
{"nick":"Raynos","message":"we already have asynchronous function calls","date":"2013-03-28T21:51:18.278Z","type":"message"}
{"nick":"Raynos","message":"that abstraction is solved","date":"2013-03-28T21:51:21.668Z","type":"message"}
{"nick":"Domenic_","message":"that is not true","date":"2013-03-28T21:51:25.558Z","type":"message"}
{"nick":"Domenic_","message":"gah typical node hubris","date":"2013-03-28T21:51:30.505Z","type":"message"}
{"nick":"Domenic_","message":"\"we solved it one way, that way is best!\"","date":"2013-03-28T21:51:34.609Z","type":"message"}
{"nick":"Domenic_","message":"\"it is impossible to improve on Node's version!\"","date":"2013-03-28T21:51:41.428Z","type":"message"}
{"nick":"Raynos","message":"no","date":"2013-03-28T21:51:42.701Z","type":"message"}
{"nick":"Raynos","message":"thats not what I said","date":"2013-03-28T21:51:45.983Z","type":"message"}
{"nick":"Domenic_","message":"asynchronous function calls <-> promises","date":"2013-03-28T21:51:58.154Z","type":"message"}
{"nick":"defunctzombie","message":"Raynos: Domenic_ both of you guys are wrong btw","date":"2013-03-28T21:51:58.791Z","type":"message"}
{"nick":"defunctzombie","message":"you both are putting into the syntax layer what should not be a programmer program","date":"2013-03-28T21:52:10.690Z","type":"message"}
{"nick":"defunctzombie","message":"*problem","date":"2013-03-28T21:52:12.389Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: I want neither cb's or promises","date":"2013-03-28T21:52:13.757Z","type":"message"}
{"nick":"st_luke","message":"i feel left out can i be wrong","date":"2013-03-28T21:52:13.972Z","type":"message"}
{"nick":"defunctzombie","message":"I should be able to write fs.read('foo');","date":"2013-03-28T21:52:23.820Z","type":"message"}
{"nick":"Domenic_","message":"defunctzombie: yes indeed! promises give you that!","date":"2013-03-28T21:52:34.771Z","type":"message"}
{"nick":"defunctzombie","message":"and have that code be run with whatever IO model","date":"2013-03-28T21:52:35.664Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: no, they don't","date":"2013-03-28T21:52:39.784Z","type":"message"}
{"nick":"Domenic_","message":"when combined with generators","date":"2013-03-28T21:52:40.512Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: they give you some syntax bullshit","date":"2013-03-28T21:52:46.417Z","type":"message"}
{"nick":"Domenic_","message":"yield fs.read('foo')","date":"2013-03-28T21:52:48.940Z","type":"message"}
{"nick":"defunctzombie","message":"that I don't want","date":"2013-03-28T21:52:49.368Z","type":"message"}
{"nick":"defunctzombie","message":"no","date":"2013-03-28T21:52:52.452Z","type":"message"}
{"nick":"defunctzombie","message":"wrong","date":"2013-03-28T21:52:55.076Z","type":"message"}
{"nick":"Domenic_","message":"right","date":"2013-03-28T21:52:57.924Z","type":"message"}
{"nick":"defunctzombie","message":"fs.read('foo');","date":"2013-03-28T21:52:58.895Z","type":"message"}
{"nick":"defunctzombie","message":"that is it","date":"2013-03-28T21:53:00.872Z","type":"message"}
{"nick":"Domenic_","message":"blocking!?","date":"2013-03-28T21:53:04.983Z","type":"message"}
{"nick":"defunctzombie","message":"no fucking yield nothing","date":"2013-03-28T21:53:05.739Z","type":"message"}
{"nick":"defunctzombie","message":"wtf are you talking about?","date":"2013-03-28T21:53:14.613Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: what does fs.read(\"foo\") return?","date":"2013-03-28T21:53:22.246Z","type":"message"}
{"nick":"defunctzombie","message":"whatever the read returns","date":"2013-03-28T21:53:32.198Z","type":"message"}
{"nick":"defunctzombie","message":"the contents","date":"2013-03-28T21:53:33.600Z","type":"message"}
{"nick":"defunctzombie","message":"it doesn't matter","date":"2013-03-28T21:53:35.502Z","type":"message"}
{"nick":"Raynos","message":"I KNOW","date":"2013-03-28T21:53:35.712Z","type":"message"}
{"nick":"Raynos","message":"I should reply to the futures thread","date":"2013-03-28T21:53:41.245Z","type":"message"}
{"nick":"Raynos","message":"and be like","date":"2013-03-28T21:53:42.767Z","type":"message"}
{"nick":"defunctzombie","message":"the point is the environment can hoist the IO","date":"2013-03-28T21:53:46.015Z","type":"message"}
{"nick":"Raynos","message":"\"YES FINALLY MONADS IN THE DOM\"","date":"2013-03-28T21:53:47.267Z","type":"message"}
{"nick":"LOUDBOT","message":"DIGGING UP SCROLLBACK THROUGH THE JOIN NOTICES WAS A PAIN","date":"2013-03-28T21:53:48.051Z","type":"message"}
{"nick":"Domenic_","message":"defunctzombie: ok. so the I/O blocks until it can return?","date":"2013-03-28T21:53:51.390Z","type":"message"}
{"nick":"Raynos","message":"that will kill the conversation immediately","date":"2013-03-28T21:53:53.426Z","type":"message"}
{"nick":"defunctzombie","message":"the developer does not give a shit about this crap","date":"2013-03-28T21:53:55.819Z","type":"message"}
{"nick":"defunctzombie","message":"I just want to read a fucking file","date":"2013-03-28T21:54:03.477Z","type":"message"}
{"nick":"defunctzombie","message":"and have that work","date":"2013-03-28T21:54:06.249Z","type":"message"}
{"nick":"defunctzombie","message":"the underlying runtime needs to make that fast","date":"2013-03-28T21:54:15.242Z","type":"message"}
{"nick":"defunctzombie","message":"and awesome","date":"2013-03-28T21:54:17.254Z","type":"message"}
{"nick":"Domenic_","message":"defunctzombie: you are avoiding the question","date":"2013-03-28T21:54:21.114Z","type":"message"}
{"nick":"defunctzombie","message":"?","date":"2013-03-28T21:54:23.786Z","type":"message"}
{"nick":"defunctzombie","message":"what question?","date":"2013-03-28T21:54:40.143Z","type":"message"}
{"nick":"Domenic_","message":"does var x = fs.read('file'); console.log(x); block until fs.read does its synchronous I/O?","date":"2013-03-28T21:54:48.262Z","type":"message"}
{"nick":"defunctzombie","message":"ya'll are avoiding the reality that all your syntax shit is a stopgap solution cause you don't have a better runtime underneath","date":"2013-03-28T21:55:14.333Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: what does it mean to \"block\"","date":"2013-03-28T21:55:22.466Z","type":"message"}
{"nick":"Domenic_","message":"defunctzombie: no code can execute","date":"2013-03-28T21:55:32.463Z","type":"message"}
{"nick":"Domenic_","message":"you know what it means","date":"2013-03-28T21:55:37.034Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: code will execute","date":"2013-03-28T21:55:40.239Z","type":"message"}
{"nick":"defunctzombie","message":"no, I don't know what you mean","date":"2013-03-28T21:55:43.731Z","type":"message"}
{"nick":"Domenic_","message":"why is fs.read different from fs.readFileSync","date":"2013-03-28T21:55:52.380Z","type":"message"}
{"nick":"defunctzombie","message":"sigh","date":"2013-03-28T21:55:59.013Z","type":"message"}
{"nick":"defunctzombie","message":"ok... stop thinking about node","date":"2013-03-28T21:56:04.297Z","type":"message"}
{"nick":"defunctzombie","message":"or anything you know","date":"2013-03-28T21:56:07.858Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: the question is about concurrency","date":"2013-03-28T21:56:13.127Z","type":"message"}
{"nick":"Domenic_","message":"can i think about operating systems","date":"2013-03-28T21:56:13.341Z","type":"message"}
{"nick":"defunctzombie","message":"no","date":"2013-03-28T21:56:21.246Z","type":"message"}
{"nick":"Raynos","message":"if I write a program","date":"2013-03-28T21:56:22.438Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: you are a developer","date":"2013-03-28T21:56:31.971Z","type":"message"}
{"nick":"Raynos","message":"is that program running a block of code concurrently","date":"2013-03-28T21:56:33.449Z","type":"message"}
{"nick":"defunctzombie","message":"you have to read a file, do something else read another file and then done","date":"2013-03-28T21:56:47.492Z","type":"message"}
{"nick":"defunctzombie","message":"you are gonna code up just like that","date":"2013-03-28T21:56:55.268Z","type":"message"}
{"nick":"st_luke","message":"yall","date":"2013-03-28T21:56:57.717Z","type":"message"}
{"nick":"defunctzombie","message":"no fucking callbacks","date":"2013-03-28T21:56:57.930Z","type":"message"}
{"nick":"defunctzombie","message":"nothing","date":"2013-03-28T21:56:59.605Z","type":"message"}
{"nick":"Domenic_","message":"sigh","date":"2013-03-28T21:57:06.459Z","type":"message"}
{"nick":"defunctzombie","message":"and the runtime will make it use your \"non blocking\" magic","date":"2013-03-28T21:57:11.660Z","type":"message"}
{"nick":"defunctzombie","message":"or whatever you think the latest hotness in concurrency is","date":"2013-03-28T21:57:23.127Z","type":"message"}
{"nick":"defunctzombie","message":"the point is that you can separate intent from this notion of \"blocking\" you have in your mind","date":"2013-03-28T21:57:42.106Z","type":"message"}
{"nick":"defunctzombie","message":"other code will execute","date":"2013-03-28T21:57:55.279Z","type":"message"}
{"nick":"defunctzombie","message":"in your program or whatever","date":"2013-03-28T21:58:03.214Z","type":"message"}
{"nick":"Domenic_","message":"so this magically causes out-of-order execution: function f() { var x = fs.read('file'); console.log('x', x); } f(); console.log('y');","date":"2013-03-28T21:58:06.630Z","type":"message"}
{"nick":"Domenic_","message":"this will log y, then x","date":"2013-03-28T21:58:12.946Z","type":"message"}
{"nick":"defunctzombie","message":"no","date":"2013-03-28T21:58:25.212Z","type":"message"}
{"nick":"defunctzombie","message":"it won't","date":"2013-03-28T21:58:27.211Z","type":"message"}
{"nick":"Domenic_","message":"ok","date":"2013-03-28T21:58:29.637Z","type":"message"}
{"nick":"Domenic_","message":"so it will spin the CPU until fs.read returns","date":"2013-03-28T21:58:42.620Z","type":"message"}
{"nick":"defunctzombie","message":"because your notions around blocking revolve around all code execution","date":"2013-03-28T21:58:51.667Z","type":"message"}
{"nick":"Domenic_","message":"you are specifically saying i can't do anything until fs.read returns is what i hear","date":"2013-03-28T21:59:01.510Z","type":"message"}
{"nick":"defunctzombie","message":"when they should revolve around IO hoisted tasks","date":"2013-03-28T21:59:07.064Z","type":"message"}
{"nick":"defunctzombie","message":"no","date":"2013-03-28T21:59:08.498Z","type":"message"}
{"nick":"Domenic_","message":"explain","date":"2013-03-28T21:59:33.209Z","type":"message"}
{"nick":"defunctzombie","message":"in your two line example nothing happens until fs read is done","date":"2013-03-28T21:59:39.294Z","type":"message"}
{"nick":"Domenic_","message":"ok so the cpu does spin","date":"2013-03-28T21:59:45.318Z","type":"message"}
{"nick":"Domenic_","message":"got it","date":"2013-03-28T21:59:46.965Z","type":"message"}
{"nick":"defunctzombie","message":"sigh","date":"2013-03-28T21:59:49.594Z","type":"message"}
{"nick":"Domenic_","message":"remember spinning = executing noop, not 100% CPU usage","date":"2013-03-28T22:00:18.946Z","type":"message"}
{"nick":"defunctzombie","message":"sure","date":"2013-03-28T22:00:25.484Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: look at lua co-routines","date":"2013-03-28T22:00:31.441Z","type":"message"}
{"nick":"defunctzombie","message":"I will try to write up in better words what I mean","date":"2013-03-28T22:00:39.343Z","type":"message"}
{"nick":"defunctzombie","message":"with some pseudocode","date":"2013-03-28T22:00:42.071Z","type":"message"}
{"nick":"defunctzombie","message":"but basically, it is entirely possible to write code that doesn't look like shit","date":"2013-03-28T22:00:53.243Z","type":"message"}
{"nick":"defunctzombie","message":"but still benefits from these notions of \"async io\" everyone seems to love","date":"2013-03-28T22:01:08.013Z","type":"message"}
{"nick":"st_luke","message":"does lua do ruby style blocks","date":"2013-03-28T22:01:10.019Z","type":"message"}
{"nick":"st_luke","message":"end end end end end end end end end end end end","date":"2013-03-28T22:01:19.666Z","type":"message"}
{"nick":"st_luke","message":"or ennnnnnnnnnnnnnnnnnnnnnnd","date":"2013-03-28T22:01:26.890Z","type":"message"}
{"nick":"FireFly","message":"Not really","date":"2013-03-28T22:01:28.685Z","type":"message"}
{"nick":"Domenic_","message":"from this page they seem to just be generators http://lua-users.org/wiki/CoroutinesTutorial","date":"2013-03-28T22:01:30.902Z","type":"message"}
{"nick":"Domenic_","message":"maybe they are deep coros instead of shallow coros like generators","date":"2013-03-28T22:01:56.607Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: do you expect anything about concurrency or order?","date":"2013-03-28T22:02:21.754Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: you can build interesting abstractions on top of it for IO bound routines is my thinking","date":"2013-03-28T22:02:25.549Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: I have had some ideas about it but haven't put anything substantial into writing","date":"2013-03-28T22:02:49.253Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: agreed. It's called IO monads","date":"2013-03-28T22:02:56.663Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: basically, you have IO concerns","date":"2013-03-28T22:03:11.429Z","type":"message"}
{"nick":"Domenic_","message":"my understanding is that this just leads you down the road of promises","date":"2013-03-28T22:03:18.177Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: it doesn't","date":"2013-03-28T22:03:25.855Z","type":"message"}
{"nick":"defunctzombie","message":"promises are syntax","date":"2013-03-28T22:03:31.183Z","type":"message"}
{"nick":"Domenic_","message":"uh they aren't","date":"2013-03-28T22:03:35.731Z","type":"message"}
{"nick":"defunctzombie","message":"and you have to buy into them","date":"2013-03-28T22:03:36.546Z","type":"message"}
{"nick":"Domenic_","message":"they're libraries","date":"2013-03-28T22:03:38.631Z","type":"message"}
{"nick":"defunctzombie","message":"same shit","date":"2013-03-28T22:03:43.200Z","type":"message"}
{"nick":"Domenic_","message":"the syntax is using coros to make it look like sync code","date":"2013-03-28T22:03:49.690Z","type":"message"}
{"nick":"defunctzombie","message":"these approaches you don't buy into at every level","date":"2013-03-28T22:03:50.977Z","type":"message"}
{"nick":"defunctzombie","message":"with promises everything needs to use it","date":"2013-03-28T22:03:57.606Z","type":"message"}
{"nick":"defunctzombie","message":"and that is stupid","date":"2013-03-28T22:04:01.670Z","type":"message"}
{"nick":"Domenic_","message":"only the i/o operations use promises","date":"2013-03-28T22:04:03.330Z","type":"message"}
{"nick":"defunctzombie","message":"this avoids promises callbacks whatever to make your code look the way you mean it without nonsense","date":"2013-03-28T22:04:28.011Z","type":"message"}
{"nick":"st_luke","message":"is there a good coworking space in berlin?","date":"2013-03-28T22:04:31.038Z","type":"message"}
{"nick":"st_luke","message":"does anyone know","date":"2013-03-28T22:04:45.993Z","type":"message"}
{"nick":"st_luke","message":"with a dedicated desk","date":"2013-03-28T22:04:49.279Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: One of the problems with promises is that people start defining promise operations on promises of arrays","date":"2013-03-28T22:04:50.095Z","type":"message"}
{"nick":"Raynos","message":"instead of list operations on streams","date":"2013-03-28T22:04:56.282Z","type":"message"}
{"nick":"Raynos","message":"promises are fine if they are not abused to do everything","date":"2013-03-28T22:05:04.395Z","type":"message"}
{"nick":"Raynos","message":"which is why I think they are the wrong abstraction","date":"2013-03-28T22:05:12.102Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: that is the correct abstraction for parallel, but yes, obviously for streams you need streams","date":"2013-03-28T22:05:13.727Z","type":"message"}
{"nick":"Domenic_","message":"i am trying to get streams into the DOM too","date":"2013-03-28T22:05:17.873Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: promises require total buy in.. you are not gonna get that because no one can agree on what shit to use or interoperate it is too high level","date":"2013-03-28T22:05:19.166Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: functions are functions","date":"2013-03-28T22:05:23.528Z","type":"message"}
{"nick":"defunctzombie","message":"that is why callbacks work","date":"2013-03-28T22:05:26.431Z","type":"message"}
{"nick":"Raynos","message":"Its not the correct abstraction for parallel at all","date":"2013-03-28T22:05:30.156Z","type":"message"}
{"nick":"defunctzombie","message":"it doesn't get any lower","date":"2013-03-28T22:05:31.506Z","type":"message"}
{"nick":"Domenic_","message":"defunctzombie: we'll see. that'll be decided by the web dev community over the next few years.","date":"2013-03-28T22:05:50.692Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: why not. Q.all([getUser(), getCompany()]).spread((user, company) => { ... })","date":"2013-03-28T22:06:12.001Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: sounds like horseshit to me ;)","date":"2013-03-28T22:06:15.487Z","type":"message"}
{"nick":"Domenic_","message":"you would have a stream of two elements?","date":"2013-03-28T22:06:18.257Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: I will write a gist on the io things I am talking about so it is clearer","date":"2013-03-28T22:06:26.366Z","type":"message"}
{"nick":"Raynos","message":"wut","date":"2013-03-28T22:06:26.577Z","type":"message"}
{"nick":"Domenic_","message":"defunctzombie: looking forward to it","date":"2013-03-28T22:06:34.801Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: irc isn't great at explaining what I am talking about","date":"2013-03-28T22:06:37.486Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: I want to perform two HTTP requests in parallel.","date":"2013-03-28T22:06:42.985Z","type":"message"}
{"nick":"Domenic_","message":"That is what I mean when I say \"arrays of promises is the correct abstraction for parallel\"","date":"2013-03-28T22:06:59.343Z","type":"message"}
{"nick":"Raynos","message":"what is spread?","date":"2013-03-28T22:07:04.934Z","type":"message"}
{"nick":"substack","message":"http://substack.net/images/screenshots/exterminate_comic_sans.png","date":"2013-03-28T22:07:14.483Z","type":"message"}
{"nick":"Domenic_","message":"Ah. In ES6 syntax: Q.all([a, b]).then(([a, b]) => { ... })","date":"2013-03-28T22:07:31.147Z","type":"message"}
{"nick":"Domenic_","message":"vs. ES6: Q.all([a, b]).spread((a, b) => { ... })","date":"2013-03-28T22:07:44.925Z","type":"message"}
{"nick":"Domenic_","message":"it's just sugar","date":"2013-03-28T22:07:49.511Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: https://gist.github.com/Raynos/d275669b81dce98b8eda","date":"2013-03-28T22:08:39.803Z","type":"message"}
{"nick":"Raynos","message":"in fact I actually think that's harmful","date":"2013-03-28T22:08:57.977Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: where's your error handling","date":"2013-03-28T22:09:07.780Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: out of scope","date":"2013-03-28T22:09:16.086Z","type":"message"}
{"nick":"Domenic_","message":"lol","date":"2013-03-28T22:09:22.338Z","type":"message"}
{"nick":"Domenic_","message":"so you lost error handling when moving to async","date":"2013-03-28T22:09:28.761Z","type":"message"}
{"nick":"Raynos","message":"im not going to force upon you","date":"2013-03-28T22:09:29.181Z","type":"message"}
{"nick":"Domenic_","message":"gj","date":"2013-03-28T22:09:29.791Z","type":"message"}
{"nick":"Raynos","message":"a particular error handling flow","date":"2013-03-28T22:09:33.260Z","type":"message"}
{"nick":"Raynos","message":"there is no loss of error handling","date":"2013-03-28T22:09:39.657Z","type":"message"}
{"nick":"ins0mnia","date":"2013-03-28T22:09:39.874Z","type":"join"}
{"nick":"Raynos","message":"its just a 100% out of fucking scope and upto you","date":"2013-03-28T22:09:46.647Z","type":"message"}
{"nick":"Raynos","message":"for all you care","date":"2013-03-28T22:09:58.910Z","type":"message"}
{"nick":"Raynos","message":"user & company can either be a value or an error","date":"2013-03-28T22:10:05.561Z","type":"message"}
{"nick":"Domenic_","message":"getUser() needs to be able to return an error","date":"2013-03-28T22:10:06.184Z","type":"message"}
{"nick":"Raynos","message":"you handle it","date":"2013-03-28T22:10:07.030Z","type":"message"}
{"nick":"Domenic_","message":"wow so switch statements","date":"2013-03-28T22:10:11.675Z","type":"message"}
{"nick":"Raynos","message":"it returns a value","date":"2013-03-28T22:10:12.238Z","type":"message"}
{"nick":"Domenic_","message":"cool","date":"2013-03-28T22:10:12.636Z","type":"message"}
{"nick":"Raynos","message":"any value","date":"2013-03-28T22:10:13.439Z","type":"message"}
{"nick":"Domenic_","message":"and no bubbling","date":"2013-03-28T22:10:15.957Z","type":"message"}
{"nick":"Raynos","message":"for my use-cases I havn't done much error handling","date":"2013-03-28T22:11:00.923Z","type":"message"}
{"nick":"Domenic_","message":"let's get more positive. what should streams in the DOM look like","date":"2013-03-28T22:11:35.547Z","type":"message"}
{"nick":"Domenic_","message":"Just binary data, or are object streams important too?","date":"2013-03-28T22:11:56.426Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: pull or push?","date":"2013-03-28T22:12:00.497Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: I'm asking you :). I still haven't absorbed the impact.","date":"2013-03-28T22:12:11.591Z","type":"message"}
{"nick":"Raynos","message":"I like mine & dominictarr's idea about pull streams ( https://github.com/Raynos/recurse-stream/issues/3 )","date":"2013-03-28T22:12:13.845Z","type":"message"}
{"nick":"Domenic_","message":"All I know is I loved Max's slides and want to get that working","date":"2013-03-28T22:12:21.872Z","type":"message"}
{"nick":"Domenic_","message":"e.g. connecting XHRs to <video> tags by piping streams together.","date":"2013-03-28T22:12:30.756Z","type":"message"}
{"nick":"Domenic_","message":"but e.g. the web worker example seems to rely on object streams not binary streams.","date":"2013-03-28T22:12:46.750Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: this is dense, hmm. What is the external API?","date":"2013-03-28T22:13:14.748Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: https://github.com/dominictarr/pull-stream","date":"2013-03-28T22:13:44.918Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: interesting. Need more examples.","date":"2013-03-28T22:14:30.109Z","type":"message"}
{"nick":"Raynos","message":"yeah we need to build more stuff out","date":"2013-03-28T22:14:39.268Z","type":"message"}
{"nick":"Domenic_","message":"this is object streams?","date":"2013-03-28T22:14:48.125Z","type":"message"}
{"nick":"Raynos","message":"but its simply functions & cbs and higher order functions on top of callbacks","date":"2013-03-28T22:14:49.130Z","type":"message"}
{"nick":"Raynos","message":"this is chunked object streams","date":"2013-03-28T22:14:58.412Z","type":"message"}
{"nick":"Domenic_","message":"what does that mean","date":"2013-03-28T22:15:07.502Z","type":"message"}
{"nick":"Raynos","message":"i.e. this pull stream","date":"2013-03-28T22:15:52.741Z","type":"message"}
{"nick":"Domenic_","message":"why is there an extra wrapper in pull.Source, why not just pass function (end, cb).","date":"2013-03-28T22:15:54.030Z","type":"message"}
{"nick":"Raynos","message":"you pull one chunk at a time","date":"2013-03-28T22:15:55.744Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: What do you mean?","date":"2013-03-28T22:16:11.805Z","type":"message"}
{"nick":"Raynos","message":"because its a stream factory","date":"2013-03-28T22:16:23.573Z","type":"message"}
{"nick":"Raynos","message":"and function (end, cb) { is a single stream }","date":"2013-03-28T22:16:37.310Z","type":"message"}
{"nick":"Domenic_","message":"so you pass the pull.Source constructor a factory?","date":"2013-03-28T22:16:57.337Z","type":"message"}
{"nick":"Domenic_","message":"what are the arguments to that factory?","date":"2013-03-28T22:17:01.863Z","type":"message"}
{"nick":"Raynos","message":"its a function that returns a readable","date":"2013-03-28T22:17:04.923Z","type":"message"}
{"nick":"Raynos","message":"well his pull.Source is bullshit abstraction","date":"2013-03-28T22:17:15.248Z","type":"message"}
{"nick":"Raynos","message":"anyway this needs way more thought","date":"2013-03-28T22:17:21.409Z","type":"message"}
{"nick":"Domenic_","message":"i think if you just named these functions it'd be cool :)","date":"2013-03-28T22:17:25.958Z","type":"message"}
{"nick":"Raynos","message":"sec","date":"2013-03-28T22:17:28.337Z","type":"message"}
{"nick":"Domenic_","message":"but tbh the creation API is much less interesting than the consumption API","date":"2013-03-28T22:17:41.642Z","type":"message"}
{"nick":"Domenic_","message":"(same for promises)","date":"2013-03-28T22:17:45.543Z","type":"message"}
{"nick":"Domenic_","message":"I see there's .pipe","date":"2013-03-28T22:17:52.042Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: https://gist.github.com/Raynos/e771cbd9d6b188972c74","date":"2013-03-28T22:17:54.111Z","type":"message"}
{"nick":"Raynos","message":"the consumption api is dead trivial","date":"2013-03-28T22:18:03.327Z","type":"message"}
{"nick":"Raynos","message":"https://gist.github.com/Raynos/e771cbd9d6b188972c74#file-0_recurse-js-L26","date":"2013-03-28T22:18:11.066Z","type":"message"}
{"nick":"Raynos","message":"you just pipe shit all the days","date":"2013-03-28T22:18:32.017Z","type":"message"}
{"nick":"Domenic_","message":"ok","date":"2013-03-28T22:18:41.954Z","type":"message"}
{"nick":"Raynos","message":"it has https://gist.github.com/Raynos/e771cbd9d6b188972c74#file-duplex-js-L6 error propagation baked in","date":"2013-03-28T22:18:53.576Z","type":"message"}
{"nick":"Raynos","message":"My value over time abstractions dont have error handling baked in","date":"2013-03-28T22:19:08.166Z","type":"message"}
{"nick":"Raynos","message":"anyway I need to fix it up","date":"2013-03-28T22:19:22.468Z","type":"message"}
{"nick":"Raynos","message":"ugh promises ;_;","date":"2013-03-28T22:19:25.183Z","type":"message"}
{"nick":"Domenic_","message":"so the fundamental concepts I see are: source streams (pipe from); transform streams (pipe to and from); sink streams (pipe to). Souce and transform streams have .pipe. That's it?","date":"2013-03-28T22:19:27.836Z","type":"message"}
{"nick":"Domenic_","message":"ugh instanceof","date":"2013-03-28T22:19:44.048Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: well not quite","date":"2013-03-28T22:19:45.342Z","type":"message"}
{"nick":"Raynos","message":"https://gist.github.com/Raynos/e771cbd9d6b188972c74#file-0_recurse-js-L4","date":"2013-03-28T22:19:48.215Z","type":"message"}
{"nick":"Raynos","message":"you have a source (Readable) and a destination (Reader)","date":"2013-03-28T22:19:55.669Z","type":"message"}
{"nick":"Raynos","message":"a transform is just a higher order Readable -> Readable","date":"2013-03-28T22:20:06.330Z","type":"message"}
{"nick":"Domenic_","message":"it shoudl be possible to use any valid javascript value as a value in the stream (including an instanceof Error)","date":"2013-03-28T22:20:16.677Z","type":"message"}
{"nick":"Raynos","message":"like it should be!","date":"2013-03-28T22:20:17.162Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: yes","date":"2013-03-28T22:20:32.274Z","type":"message"}
{"nick":"Raynos","message":"I'm going to change the API to make it easier","date":"2013-03-28T22:20:38.634Z","type":"message"}
{"nick":"Domenic_","message":"i think the functional stuff is a bit hard to grok, but probably elegant.","date":"2013-03-28T22:20:43.418Z","type":"message"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-03-28T22:20:51.181Z","type":"quit"}
{"nick":"Raynos","message":"it is hard to grok","date":"2013-03-28T22:21:00.586Z","type":"message"}
{"nick":"Domenic_","message":"but how do transforms work","date":"2013-03-28T22:21:02.540Z","type":"message"}
{"nick":"Domenic_","message":"if the only public API of readable is .pipe.","date":"2013-03-28T22:21:09.470Z","type":"message"}
{"nick":"Raynos","message":"nah","date":"2013-03-28T22:21:16.575Z","type":"message"}
{"nick":"Raynos","message":"readable is a function","date":"2013-03-28T22:21:18.846Z","type":"message"}
{"nick":"Raynos","message":"pipeable(readable) returns a function with a .pipe method","date":"2013-03-28T22:21:26.359Z","type":"message"}
{"nick":"Raynos","message":".pipe is just chaining sugar","date":"2013-03-28T22:21:32.950Z","type":"message"}
{"nick":"Raynos","message":"its straight up LISP style function calls","date":"2013-03-28T22:21:38.848Z","type":"message"}
{"nick":"Domenic_","message":"eeek","date":"2013-03-28T22:21:43.401Z","type":"message"}
{"nick":"Domenic_","message":"i'm scared of all the functional :P","date":"2013-03-28T22:21:48.158Z","type":"message"}
{"nick":"Raynos","message":"FUNCTIONAL IS THE FUTURE","date":"2013-03-28T22:21:53.858Z","type":"message"}
{"nick":"LOUDBOT","message":"YOU GOT MANA MAN ILL SUCK YOUR DICK","date":"2013-03-28T22:21:54.484Z","type":"message"}
{"nick":"Raynos","message":"but you raised a good point","date":"2013-03-28T22:22:09.813Z","type":"message"}
{"nick":"substack","message":"Raynos: false. http://substack.net/images/screenshots/exterminate_comic_sans.png is the future","date":"2013-03-28T22:22:14.162Z","type":"message"}
{"nick":"Raynos","message":"I need to think about error handling in signals ;_;","date":"2013-03-28T22:22:15.181Z","type":"message"}
{"nick":"Domenic_","message":"but all the functional can be wrapped since it's just construction-time I guess.","date":"2013-03-28T22:22:39.927Z","type":"message"}
{"nick":"FireFly","message":"*everyone* needs some comic sans in their terminal","date":"2013-03-28T22:22:51.560Z","type":"message"}
{"nick":"FireFly","message":"clearly","date":"2013-03-28T22:22:56.507Z","type":"message"}
{"nick":"st_luke","reason":"Remote host closed the connection","date":"2013-03-28T22:23:09.600Z","type":"quit"}
{"nick":"Raynos","message":"Domenic_: the problem I have with promises is that they are too limiting :(","date":"2013-03-28T22:24:23.932Z","type":"message"}
{"nick":"Raynos","message":"but I need to think harder about it","date":"2013-03-28T22:24:41.265Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: the right tool for the right job!","date":"2013-03-28T22:24:43.890Z","type":"message"}
{"nick":"Domenic_","message":"They are definitely not a complete solution","date":"2013-03-28T22:24:50.675Z","type":"message"}
{"nick":"Domenic_","message":"You need streams","date":"2013-03-28T22:24:52.762Z","type":"message"}
{"nick":"Raynos","message":"but its a massive complex abstraction","date":"2013-03-28T22:24:54.113Z","type":"message"}
{"nick":"Domenic_","message":"in some form","date":"2013-03-28T22:24:54.330Z","type":"message"}
{"nick":"Domenic_","message":"it really isn't","date":"2013-03-28T22:24:58.082Z","type":"message"}
{"nick":"Raynos","message":"with complex reasons","date":"2013-03-28T22:24:59.588Z","type":"message"}
{"nick":"Raynos","message":"see pull-streams are trivial","date":"2013-03-28T22:25:04.038Z","type":"message"}
{"nick":"Raynos","message":"\\they are just functions","date":"2013-03-28T22:25:06.182Z","type":"message"}
{"nick":"Raynos","message":"thats it","date":"2013-03-28T22:25:07.173Z","type":"message"}
{"nick":"Raynos","message":"no new abstraction","date":"2013-03-28T22:25:09.465Z","type":"message"}
{"nick":"Raynos","message":"no fucking nothing","date":"2013-03-28T22:25:11.403Z","type":"message"}
{"nick":"Raynos","message":"just functions & callbacks","date":"2013-03-28T22:25:14.093Z","type":"message"}
{"nick":"Domenic_","message":"see, that's not actually simpler","date":"2013-03-28T22:25:15.222Z","type":"message"}
{"nick":"Raynos","message":"less abstractions counts is a massive win","date":"2013-03-28T22:25:28.842Z","type":"message"}
{"nick":"Domenic_","message":"the number of primitives involved is not directly proportional to the complexity","date":"2013-03-28T22:25:30.418Z","type":"message"}
{"nick":"Raynos","message":"I really need to think of a file system api as a Signal","date":"2013-03-28T22:25:37.673Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: Scheme is simple and beautiful :3","date":"2013-03-28T22:25:48.147Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: yes, but... well, I don't know what the but is. But we both know there is one :P","date":"2013-03-28T22:26:22.722Z","type":"message"}
{"nick":"Domenic_","message":"promises are just the same abstraction as function calls, but async.","date":"2013-03-28T22:26:45.550Z","type":"message"}
{"nick":"Domenic_","message":"they can return a value, or throw an exception.","date":"2013-03-28T22:26:56.060Z","type":"message"}
{"nick":"Domenic_","message":"that's the only important part","date":"2013-03-28T22:27:05.229Z","type":"message"}
{"nick":"Domenic_","message":"the rest of it is just details.","date":"2013-03-28T22:27:16.869Z","type":"message"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-03-28T22:28:07.610Z","type":"quit"}
{"nick":"Domenic_","message":"Raynos: I'm still curious about lazy promises","date":"2013-03-28T22:28:38.970Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: a lazy promise is an IO moand","date":"2013-03-28T22:28:52.212Z","type":"message"}
{"nick":"Raynos","message":"monad*","date":"2013-03-28T22:28:53.873Z","type":"message"}
{"nick":"Domenic_","message":"welp","date":"2013-03-28T22:28:58.426Z","type":"message"}
{"nick":"Raynos","message":":D","date":"2013-03-28T22:29:02.633Z","type":"message"}
{"nick":"Domenic_","message":"knew I should have learned Haskell.","date":"2013-03-28T22:29:03.132Z","type":"message"}
{"nick":"Raynos","message":"Sorry","date":"2013-03-28T22:29:06.996Z","type":"message"}
{"nick":"Raynos","message":"that was a bad joke","date":"2013-03-28T22:29:09.105Z","type":"message"}
{"nick":"Domenic_","message":"probably true?","date":"2013-03-28T22:29:13.525Z","type":"message"}
{"nick":"Raynos","message":"yeah it is true","date":"2013-03-28T22:29:17.859Z","type":"message"}
{"nick":"Raynos","message":"I dont actually think lazy promises are that good","date":"2013-03-28T22:29:57.207Z","type":"message"}
{"nick":"Raynos","message":"I just think having a static promise graph is good","date":"2013-03-28T22:30:03.132Z","type":"message"}
{"nick":"Raynos","message":"i.e. don't create dynamic inputs","date":"2013-03-28T22:30:07.716Z","type":"message"}
{"nick":"Domenic_","message":"they might solve the unhandled rejection problem","date":"2013-03-28T22:30:11.062Z","type":"message"}
{"nick":"Raynos","message":"dont create dynamic promises","date":"2013-03-28T22:30:17.572Z","type":"message"}
{"nick":"Raynos","message":"force all promises to either A) be statically defined at startup","date":"2013-03-28T22:30:32.475Z","type":"message"}
{"nick":"Raynos","message":"like `require`","date":"2013-03-28T22:30:35.594Z","type":"message"}
{"nick":"Raynos","message":"or B) be a transformation of a static promise","date":"2013-03-28T22:30:41.302Z","type":"message"}
{"nick":"FireFly","message":"Raynos: hm, those pull-streams are nice food for thought..","date":"2013-03-28T22:30:50.018Z","type":"message"}
{"nick":"Raynos","message":"that also solves the unhandled rejection problem","date":"2013-03-28T22:30:51.973Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: that's like saying \"don't do dynamic function calls.\"","date":"2013-03-28T22:31:58.611Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: no it's not","date":"2013-03-28T22:32:04.183Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: http://raynos.graphics-server.jit.su/full/todo.js","date":"2013-03-28T22:32:21.491Z","type":"message"}
{"nick":"Raynos","message":"todomvc with only static inputs","date":"2013-03-28T22:32:26.792Z","type":"message"}
{"nick":"Raynos","message":"no dynamically created inputs (promises whatever)","date":"2013-03-28T22:32:33.603Z","type":"message"}
{"nick":"Raynos","message":"actually thats a lie","date":"2013-03-28T22:32:40.119Z","type":"message"}
{"nick":"Raynos","message":"I touch localStorage","date":"2013-03-28T22:32:44.028Z","type":"message"}
{"nick":"Raynos","message":"fuck","date":"2013-03-28T22:32:44.674Z","type":"message"}
{"nick":"Raynos","message":"ok I'm full of shit :D","date":"2013-03-28T22:32:49.175Z","type":"message"}
{"nick":"Domenic_","message":"i guess in a language without if statements that would work?","date":"2013-03-28T22:33:21.690Z","type":"message"}
{"nick":"Domenic_","message":"like lisp","date":"2013-03-28T22:33:25.924Z","type":"message"}
{"nick":"Raynos","message":"no","date":"2013-03-28T22:33:26.293Z","type":"message"}
{"nick":"Raynos","message":"i plan to do this in JS","date":"2013-03-28T22:33:33.859Z","type":"message"}
{"nick":"Raynos","message":"A static signal graph","date":"2013-03-28T22:33:41.492Z","type":"message"}
{"nick":"Domenic_","message":"well by limiting yourself to a subset of js that is mostly function calls","date":"2013-03-28T22:33:44.557Z","type":"message"}
{"nick":"Raynos","message":"there's no reason I cant use ifs :P","date":"2013-03-28T22:33:54.767Z","type":"message"}
{"nick":"Domenic_","message":"that would dynamically determine your code path","date":"2013-03-28T22:34:11.354Z","type":"message"}
{"nick":"Domenic_","message":"which breaks the rules? if i am understanding them?","date":"2013-03-28T22:34:17.877Z","type":"message"}
{"nick":"Raynos","message":"No","date":"2013-03-28T22:34:32.942Z","type":"message"}
{"nick":"Raynos","message":"I didnt explain the rules properly","date":"2013-03-28T22:34:38.698Z","type":"message"}
{"nick":"Raynos","message":"the rules are you application is a graph that connects inputs ( creation of promises that represent IO) to outputs ( sinks where shit goes to have side effects )","date":"2013-03-28T22:35:09.240Z","type":"message"}
{"nick":"Raynos","message":"you a have finite set of input functions that create inputs & outputs","date":"2013-03-28T22:35:20.998Z","type":"message"}
{"nick":"Raynos","message":"everything else in between","date":"2013-03-28T22:35:24.864Z","type":"message"}
{"nick":"Raynos","message":"is a dynamic graph that connects the list of inputs to the list of outputs","date":"2013-03-28T22:35:38.072Z","type":"message"}
{"nick":"Raynos","message":"the shape of the graph itself can change at run time. it's just that the list of inputs & outputs is static & finite","date":"2013-03-28T22:35:53.521Z","type":"message"}
{"nick":"Raynos","message":"Which is effectively arrowized FRP :D","date":"2013-03-28T22:36:07.840Z","type":"message"}
{"nick":"Domenic_","message":"so like, the list of inputs could be \"the functions in fs\"?","date":"2013-03-28T22:36:10.098Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: with some limitations","date":"2013-03-28T22:36:39.893Z","type":"message"}
{"nick":"Raynos","message":"it can be a list of inputs like the functions in fs that return promises","date":"2013-03-28T22:36:51.942Z","type":"message"}
{"nick":"Domenic_","message":"right","date":"2013-03-28T22:36:57.009Z","type":"message"}
{"nick":"Raynos","message":"with the understanding that a promise that contains a promise is a not a thing your allowed to do","date":"2013-03-28T22:37:03.394Z","type":"message"}
{"nick":"Domenic_","message":"yes!","date":"2013-03-28T22:37:08.204Z","type":"message"}
{"nick":"Domenic_","message":"that is actually something that upsets me about DOM Future","date":"2013-03-28T22:37:18.713Z","type":"message"}
{"nick":"Domenic_","message":"is that you can do that","date":"2013-03-28T22:37:21.447Z","type":"message"}
{"nick":"Raynos","message":"im sure Q has promises of promises","date":"2013-03-28T22:37:21.953Z","type":"message"}
{"nick":"Domenic_","message":"Nope","date":"2013-03-28T22:37:25.168Z","type":"message"}
{"nick":"Domenic_","message":"We explicitly disallow","date":"2013-03-28T22:37:28.170Z","type":"message"}
{"nick":"Raynos","message":"I dont believe it","date":"2013-03-28T22:37:31.546Z","type":"message"}
{"nick":"Raynos","message":"how do you do lstree with promises ?","date":"2013-03-28T22:37:38.905Z","type":"message"}
{"nick":"Domenic_","message":"I don't know what lstree is :-S","date":"2013-03-28T22:37:48.867Z","type":"message"}
{"nick":"Raynos","message":"recursive directory listing","date":"2013-03-28T22:37:58.191Z","type":"message"}
{"nick":"Raynos","message":"a function that takes a path and returns a list of all files in it recursively","date":"2013-03-28T22:38:07.431Z","type":"message"}
{"nick":"Domenic_","message":"the top promise is never fulfilled until all the children are","date":"2013-03-28T22:38:26.773Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: You need to get the DOM to ban Future's of Futures","date":"2013-03-28T22:38:35.014Z","type":"message"}
{"nick":"Raynos","message":"that has to die, right fucking now.","date":"2013-03-28T22:38:40.835Z","type":"message"}
{"nick":"Raynos","message":"i.e. the resolved value of a promise","date":"2013-03-28T22:38:54.844Z","type":"message"}
{"nick":"Raynos","message":"is not allowed to be another promise","date":"2013-03-28T22:38:58.212Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: I think if you wrote to www-dom that might actually have the right impact. A nice well-reasoned email from an outsider who seems to know his shit would be great.","date":"2013-03-28T22:39:08.581Z","type":"message"}
{"nick":"Raynos","message":"promise.then(function (otherPromise) { return otherPromise.then(...) })","date":"2013-03-28T22:39:13.855Z","type":"message"}
{"nick":"Raynos","message":"I did email the thread :P","date":"2013-03-28T22:39:26.973Z","type":"message"}
{"nick":"Domenic_","message":"yeah i saw :P","date":"2013-03-28T22:39:31.432Z","type":"message"}
{"nick":"Raynos","message":"I asked them whether its lazy :D","date":"2013-03-28T22:39:35.143Z","type":"message"}
{"nick":"Raynos","message":"I was about to say \"this sounds like an IO monad\"","date":"2013-03-28T22:39:48.110Z","type":"message"}
{"nick":"Raynos","message":"but then I thought that would be trolling","date":"2013-03-28T22:39:54.764Z","type":"message"}
{"nick":"Domenic_","message":"but yes `var p = q.then(() => r)`: `p` is not settled until `r` is.","date":"2013-03-28T22:40:30.572Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: you should hangout in SF and talk to mr Elm","date":"2013-03-28T22:40:32.442Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: what's the simplist promise thing","date":"2013-03-28T22:40:58.812Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: I'm visiting for HTML5DevConf this weekend!","date":"2013-03-28T22:41:02.270Z","type":"message"}
{"nick":"Raynos","message":"nice","date":"2013-03-28T22:41:07.170Z","type":"message"}
{"nick":"Domenic_","message":"er, next week rather","date":"2013-03-28T22:41:11.263Z","type":"message"}
{"nick":"Raynos","message":"if you need a place to crash let me know","date":"2013-03-28T22:41:15.583Z","type":"message"}
{"nick":"Domenic_","message":"should be cool, company's paying for hotel :)","date":"2013-03-28T22:41:23.328Z","type":"message"}
{"nick":"Domenic_","message":"but thanks","date":"2013-03-28T22:41:24.716Z","type":"message"}
{"nick":"Raynos","message":"so","date":"2013-03-28T22:41:33.318Z","type":"message"}
{"nick":"Raynos","message":"promise.then(function (value) { ... }) is the syntax right?","date":"2013-03-28T22:41:41.403Z","type":"message"}
{"nick":"Domenic_","message":"yeah","date":"2013-03-28T22:41:48.139Z","type":"message"}
{"nick":"substack","message":"Domenic_: visit oakland!","date":"2013-03-28T22:41:50.179Z","type":"message"}
{"nick":"Raynos","message":"Domenic_: can value be a promise itself ?","date":"2013-03-28T22:41:57.913Z","type":"message"}
{"nick":"Domenic_","message":"first callback is fulfillment handler, second callback is rejection","date":"2013-03-28T22:42:01.942Z","type":"message"}
{"nick":"Domenic_","message":"Raynos: no, it should be impossible to construct a promise whose value is a promise","date":"2013-03-28T22:42:11.551Z","type":"message"}
{"nick":"shama","reason":"Remote host closed the connection","date":"2013-03-28T22:42:12.078Z","type":"quit"}
{"nick":"substack","message":"there's js hack nights at sudoroom every monday","date":"2013-03-28T22:42:24.391Z","type":"message"}
{"nick":"Domenic_","message":"the return rule prohibits it if you're given an already-well-behaved promise","date":"2013-03-28T22:42:25.614Z","type":"message"}
{"nick":"Raynos","message":"can you return a promise in then","date":"2013-03-28T22:42:45.667Z","type":"message"}
{"nick":"Domenic_","message":"And if the library doesn't allow you to create promises-for-promises, then you're golden","date":"2013-03-28T22:42:46.333Z","type":"message"}
{"nick":"Raynos","message":"or can you only return values ?","date":"2013-03-28T22:42:49.242Z","type":"message"}
{"nick":"Domenic_","message":"you can, but that coelesces into the returned promise's fulfillment/rejection","date":"2013-03-28T22:43:08.991Z","type":"message"}
{"nick":"Raynos","message":"i dont know whether I like returning promises instead of values","date":"2013-03-28T22:43:20.572Z","type":"message"}
{"nick":"Domenic_","message":"it's a nice shortcut that also conveniently prevents you from ever getting a promise-for-promise","date":"2013-03-28T22:43:37.817Z","type":"message"}
{"nick":"Raynos","message":"but it allows you to do an async operation inside then","date":"2013-03-28T22:44:07.654Z","type":"message"}
{"nick":"Domenic_","message":"yeah which is super-useful","date":"2013-03-28T22:44:20.123Z","type":"message"}
{"nick":"Raynos","message":"but then your dynamically creating new asynchronous inputs","date":"2013-03-28T22:44:31.756Z","type":"message"}
{"nick":"Raynos","message":"at run-time","date":"2013-03-28T22:44:33.737Z","type":"message"}
{"nick":"Domenic_","message":"ah, i see.","date":"2013-03-28T22:44:37.496Z","type":"message"}
{"nick":"Domenic_","message":"but you're using existing library functions?","date":"2013-03-28T22:44:50.518Z","type":"message"}
{"nick":"Domenic_","message":"like .then(() => promisedFs.readFile(...))","date":"2013-03-28T22:45:04.618Z","type":"message"}
{"nick":"Domenic_","message":"gtg soon :-/","date":"2013-03-28T22:45:09.011Z","type":"message"}
{"nick":"Raynos","message":"Nope","date":"2013-03-28T22:45:12.066Z","type":"message"}
{"nick":"Raynos","message":"ugh","date":"2013-03-28T22:45:21.286Z","type":"message"}
{"nick":"Raynos","message":"I need to think about this more","date":"2013-03-28T22:45:25.522Z","type":"message"}
{"nick":"Domenic_","message":":)","date":"2013-03-28T22:45:30.162Z","type":"message"}
{"nick":"Raynos","message":"Fuck ;_;","date":"2013-03-28T22:45:30.792Z","type":"message"}
{"nick":"Domenic_","message":"to be continued!","date":"2013-03-28T22:45:33.096Z","type":"message"}
{"nick":"Raynos","message":"I talked to some haskell guys last night","date":"2013-03-28T22:45:36.947Z","type":"message"}
{"nick":"defunctzombie","message":"Domenic_: Raynos: https://gist.github.com/shtylman/5267456","date":"2013-03-28T22:45:44.662Z","type":"message"}
{"nick":"Raynos","message":"I feel my vocab is permanently corrupted","date":"2013-03-28T22:45:46.964Z","type":"message"}
{"nick":"substack","message":"Raynos: those haskell kids are TROUBLEMAKERS","date":"2013-03-28T22:46:04.145Z","type":"message"}
{"nick":"Domenic_","reason":"Remote host closed the connection","date":"2013-03-28T22:46:21.133Z","type":"quit"}
{"nick":"substack","message":"they will get you to start worrying about unimportant things","date":"2013-03-28T22:46:25.064Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: two problems","date":"2013-03-28T22:47:36.702Z","type":"message"}
{"nick":"Raynos","message":"you create an IO \"container\"","date":"2013-03-28T22:47:44.018Z","type":"message"}
{"nick":"Raynos","message":"now how do you share messages or state between two IO \"container\"s ?","date":"2013-03-28T22:47:57.934Z","type":"message"}
{"nick":"Raynos","message":"substack: LIKE WHY IS MY CALLBACK NOT A REAL IO MONAD","date":"2013-03-28T22:48:21.040Z","type":"message"}
{"nick":"defunctzombie","message":"Raynos: io containers are not threads","date":"2013-03-28T22:48:22.377Z","type":"message"}
{"nick":"Raynos","message":"I SHOULD BE USING APPLICATIVE FUNCTORS INSTEAD","date":"2013-03-28T22:48:29.415Z","type":"message"}
{"nick":"LOUDBOT","message":"BECAUSE THEY DON'T OWE THE WORLD SHIT MAN","date":"2013-03-28T22:48:30.194Z","type":"message"}
{"nick":"defunctzombie","message":"you share the same vars or anything","date":"2013-03-28T22:48:31.038Z","type":"message"}
{"nick":"Raynos","message":"defunctzombie: what are the semantics for reading a variable ?","date":"2013-03-28T22:48:42.941Z","type":"message"}
{"nick":"defunctzombie","message":"anyhow, I gotta run. can chat about it later","date":"2013-03-28T22:49:03.781Z","type":"message"}
{"nick":"defunctzombie","message":"it is all doable :)","date":"2013-03-28T22:49:50.946Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2013-03-28T22:50:28.600Z","type":"nick"}
{"nick":"timoxley","date":"2013-03-28T22:50:47.962Z","type":"join"}
{"nick":"thatguydan","date":"2013-03-28T23:00:40.936Z","type":"join"}
{"nick":"substack","message":"LOUDBOT: search endofunctors","date":"2013-03-28T23:00:55.490Z","type":"message"}
{"nick":"LOUDBOT","message":"substack: <SubStack:##turtles> MONADS ARE JUST MONOIDS IN THE CATEGORY OF ENDOFUNCTORS","date":"2013-03-28T23:00:56.449Z","type":"message"}
{"nick":"substack","message":"Raynos: if you do enough haskell you will start sounding like that","date":"2013-03-28T23:01:10.185Z","type":"message"}
{"nick":"Raynos","message":":D","date":"2013-03-28T23:01:25.200Z","type":"message"}
{"nick":"substack","message":"category theory is not very useful","date":"2013-03-28T23:01:47.320Z","type":"message"}
{"nick":"Raynos","message":"agreed","date":"2013-03-28T23:01:51.856Z","type":"message"}
{"nick":"marcello3d","reason":"Remote host closed the connection","date":"2013-03-28T23:01:58.821Z","type":"quit"}
{"nick":"substack","message":"it's useful if you need to write mathematical proofs but not very useful if you want to write computer programs","date":"2013-03-28T23:02:03.804Z","type":"message"}
{"nick":"Raynos","message":"when I say \"IO monad\" I mean lazy sideeffect","date":"2013-03-28T23:02:11.369Z","type":"message"}
{"nick":"Raynos","message":"but thats a stupid thing","date":"2013-03-28T23:02:18.576Z","type":"message"}
{"nick":"Raynos","message":"i should just say lazy side effect","date":"2013-03-28T23:02:23.466Z","type":"message"}
{"nick":"substack","message":"yes!","date":"2013-03-28T23:02:27.202Z","type":"message"}
{"nick":"substack","message":"then people will know what you mean","date":"2013-03-28T23:02:35.288Z","type":"message"}
{"nick":"substack","message":"and you can communicate","date":"2013-03-28T23:02:39.336Z","type":"message"}
{"nick":"Raynos","message":":D","date":"2013-03-28T23:02:39.336Z","type":"message"}
{"nick":"tmcw","reason":"Remote host closed the connection","date":"2013-03-28T23:02:57.858Z","type":"quit"}
{"nick":"substack","message":"another problem is that \"IO monad\" doesn't actually mean anything particularly","date":"2013-03-28T23:03:14.923Z","type":"message"}
{"nick":"substack","message":"only in context-dependent circumstances does a phrase like that to begin to make sense","date":"2013-03-28T23:03:45.129Z","type":"message"}
{"nick":"CryptoQuick_","date":"2013-03-28T23:21:02.767Z","type":"join"}
{"nick":"CryptoQuick","reason":"Ping timeout: 240 seconds","date":"2013-03-28T23:21:34.761Z","type":"quit"}
{"nick":"CryptoQuick_","new_nick":"CryptoQuick","date":"2013-03-28T23:21:35.111Z","type":"nick"}
{"nick":"spion","reason":"Ping timeout: 246 seconds","date":"2013-03-28T23:26:41.112Z","type":"quit"}
{"nick":"spion","date":"2013-03-28T23:27:41.126Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-03-28T23:31:18.301Z","type":"quit"}
{"nick":"thl0","date":"2013-03-28T23:38:31.052Z","type":"join"}
{"nick":"isaacs","message":"substack: does exterminate work on os x?","date":"2013-03-28T23:38:50.108Z","type":"message"}
{"nick":"isaacs","message":"substack: er, should it?","date":"2013-03-28T23:38:54.260Z","type":"message"}
{"nick":"jxson","date":"2013-03-28T23:39:36.303Z","type":"join"}
{"nick":"isaacs","message":"substack: it starts Google Chrome.app, but i don't see a thing...","date":"2013-03-28T23:43:08.688Z","type":"message"}
{"nick":"thl0","reason":"Ping timeout: 260 seconds","date":"2013-03-28T23:43:15.899Z","type":"quit"}
{"nick":"isaacs","message":"$ exterminate out/doc/index.html","date":"2013-03-28T23:43:28.222Z","type":"message"}
{"nick":"isaacs","message":"net.js:50","date":"2013-03-28T23:43:28.440Z","type":"message"}
{"nick":"isaacs","message":"  throw new TypeError('Unsupported fd type: ' + type);","date":"2013-03-28T23:43:28.440Z","type":"message"}
{"nick":"isaacs","message":"        ^","date":"2013-03-28T23:43:28.440Z","type":"message"}
{"nick":"isaacs","message":"TypeError: Unsupported fd type: TTY","date":"2013-03-28T23:43:28.709Z","type":"message"}
{"nick":"thl0","date":"2013-03-28T23:45:48.900Z","type":"join"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-03-28T23:46:34.193Z","type":"quit"}
{"nick":"blakmatrix1","reason":"Quit: Leaving.","date":"2013-03-28T23:59:44.108Z","type":"quit"}
