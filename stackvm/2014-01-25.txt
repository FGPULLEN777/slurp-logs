{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-01-25T00:00:00.494Z","type":"quit"}
{"nick":"ircretary","date":"2014-01-25T00:00:08.325Z","type":"join"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2014-01-25T00:03:18.128Z","type":"quit"}
{"nick":"jxson","date":"2014-01-25T00:06:41.260Z","type":"join"}
{"nick":"eugeneware","date":"2014-01-25T00:10:23.137Z","type":"join"}
{"nick":"DTrejo","message":"has anyone made an API library where you 1) write a json blog to describe your REST api, including types of parameters (for validation) 2) start a server which spins up routes and validators for everything in the blog 3) spits out a client-side javascript API client","date":"2014-01-25T00:12:38.144Z","type":"message"}
{"nick":"DTrejo","message":"*the blob","date":"2014-01-25T00:12:49.576Z","type":"message"}
{"nick":"DTrejo","message":"4) also a server-side javascript API client cause why not","date":"2014-01-25T00:13:03.517Z","type":"message"}
{"nick":"DTrejo","message":"google does this with their API discovery stuff","date":"2014-01-25T00:13:18.316Z","type":"message"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2014-01-25T00:13:54.575Z","type":"quit"}
{"nick":"jxson","date":"2014-01-25T00:14:29.094Z","type":"join"}
{"nick":"eugeneware","reason":"Ping timeout: 252 seconds","date":"2014-01-25T00:15:10.605Z","type":"quit"}
{"nick":"DTrejo","message":"ogd ^ i feel like you would appreciate something like this","date":"2014-01-25T00:18:13.645Z","type":"message"}
{"nick":"AvianFlu","reason":"Ping timeout: 240 seconds","date":"2014-01-25T00:18:29.074Z","type":"quit"}
{"nick":"jxson","reason":"Ping timeout: 252 seconds","date":"2014-01-25T00:18:53.644Z","type":"quit"}
{"nick":"ogd","message":"DTrejo: maybe https://github.com/sballesteros has done that","date":"2014-01-25T00:19:31.203Z","type":"message"}
{"nick":"DTrejo","message":"oh and you could also write api docs with it","date":"2014-01-25T00:20:37.581Z","type":"message"}
{"nick":"DTrejo","message":"hmm didnt see it in his repo list","date":"2014-01-25T00:22:02.546Z","type":"message"}
{"nick":"wolfeidau","date":"2014-01-25T00:23:08.238Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2014-01-25T00:23:53.139Z","type":"quit"}
{"nick":"wolfeidau","date":"2014-01-25T00:24:29.858Z","type":"join"}
{"nick":"grncdr","message":"DTrejo: I've done parts of it in the past","date":"2014-01-25T00:24:53.318Z","type":"message"}
{"nick":"grncdr","message":"in particular, lazorse and lazorse-schemas was all about that kind of thing","date":"2014-01-25T00:25:17.501Z","type":"message"}
{"nick":"grncdr","message":"slightly different though, as it was designed around writing the JSON blobs inline in the source","date":"2014-01-25T00:25:42.231Z","type":"message"}
{"nick":"grncdr","message":"so you would write JavaScript, defining route patterns with URI-templates and payload/response schemas with JSON-schema, then the API server could be introspected for all the information","date":"2014-01-25T00:26:39.343Z","type":"message"}
{"nick":"DTrejo","message":"whats your github?","date":"2014-01-25T00:26:42.601Z","type":"message"}
{"nick":"DTrejo","message":"oh nvm i can google the projcet names","date":"2014-01-25T00:26:49.001Z","type":"message"}
{"nick":"grncdr","message":"https://npm.im/lazorse","date":"2014-01-25T00:27:00.818Z","type":"message"}
{"nick":"grncdr","message":"and https://npm.im/lazorse-schemas I think","date":"2014-01-25T00:27:09.363Z","type":"message"}
{"nick":"grncdr","message":"I haven't actually used it in ages","date":"2014-01-25T00:27:14.819Z","type":"message"}
{"nick":"DTrejo","message":"is that your drawing? :0","date":"2014-01-25T00:27:42.822Z","type":"message"}
{"nick":"grncdr","message":"it was very much a learn node â†’ right a webframework","date":"2014-01-25T00:27:44.890Z","type":"message"}
{"nick":"grncdr","message":"no it's substacks!","date":"2014-01-25T00:27:49.760Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 22]","date":"2014-01-25T00:27:51.053Z","type":"message"}
{"nick":"DTrejo","message":"hehe i thought so","date":"2014-01-25T00:27:59.007Z","type":"message"}
{"nick":"DTrejo","message":"guess what...","date":"2014-01-25T00:29:30.058Z","type":"message"}
{"nick":"grncdr","message":"there's a bunch of things that do this though !","date":"2014-01-25T00:29:42.695Z","type":"message"}
{"nick":"grncdr","message":"what?","date":"2014-01-25T00:29:46.467Z","type":"message"}
{"nick":"DTrejo","message":"if one were to match your discovery document with the format that google uses, then one could have a node, ruby, java clients out of the box for your API","date":"2014-01-25T00:29:58.898Z","type":"message"}
{"nick":"DTrejo","message":"and maybe also need to fork the google clients to lookup the discovery doc from your server","date":"2014-01-25T00:30:14.212Z","type":"message"}
{"nick":"DTrejo","message":"thats the only catch","date":"2014-01-25T00:30:18.095Z","type":"message"}
{"nick":"grncdr","message":"hm, that would be nice","date":"2014-01-25T00:30:27.163Z","type":"message"}
{"nick":"grncdr","message":"I wrote a node client","date":"2014-01-25T00:30:33.863Z","type":"message"}
{"nick":"grncdr","message":"that could be browserified","date":"2014-01-25T00:30:38.837Z","type":"message"}
{"nick":"grncdr","message":"and a PHP and python one that I don't think were ever open sourced","date":"2014-01-25T00:30:52.799Z","type":"message"}
{"nick":"DTrejo","message":"mm","date":"2014-01-25T00:31:27.832Z","type":"message"}
{"nick":"DTrejo","message":"cool","date":"2014-01-25T00:31:29.879Z","type":"message"}
{"nick":"grncdr","message":"but yeah, there's been at least 100 different attempts at standardizing a discovery format, if I were starting again, going with a de-facto standard would be smarter","date":"2014-01-25T00:31:52.862Z","type":"message"}
{"nick":"grncdr","message":"oh god, I forgot about some of the stuff I did in there","date":"2014-01-25T00:33:49.171Z","type":"message"}
{"nick":"grncdr","message":"that was really not a good idea :P","date":"2014-01-25T00:33:55.937Z","type":"message"}
{"nick":"jcrugzz","reason":"Ping timeout: 252 seconds","date":"2014-01-25T00:35:45.630Z","type":"quit"}
{"nick":"DTrejo","message":"hehe","date":"2014-01-25T00:37:19.038Z","type":"message"}
{"nick":"jcrugzz","date":"2014-01-25T00:37:35.768Z","type":"join"}
{"nick":"DTrejo","message":"ooh guess what else","date":"2014-01-25T00:38:14.779Z","type":"message"}
{"nick":"grncdr","message":"?","date":"2014-01-25T00:38:24.919Z","type":"message"}
{"nick":"DTrejo","message":"you could write a testing framework that would augment the documentation part, and it would append its examples into the docs, along with output","date":"2014-01-25T00:38:50.277Z","type":"message"}
{"nick":"DTrejo","message":"lol","date":"2014-01-25T00:38:51.113Z","type":"message"}
{"nick":"DTrejo","message":"going too far","date":"2014-01-25T00:38:54.113Z","type":"message"}
{"nick":"grncdr","message":"https://grid.betsmartmedia.com might still be running","date":"2014-01-25T00:39:32.198Z","type":"message"}
{"nick":"grncdr","message":"it did pretty much exactly that","date":"2014-01-25T00:39:40.640Z","type":"message"}
{"nick":"grncdr","message":"the example requests are defined inline in the source (and can be introspected) so the integration tests ask the API for all examples, perform them, and validate the responses against the declared schema. The documentation generator does the same thing, but writes some ReStructuredText files that get included in the docs","date":"2014-01-25T00:41:22.343Z","type":"message"}
{"nick":"grncdr","message":"ah, certificate warning","date":"2014-01-25T00:41:51.069Z","type":"message"}
{"nick":"grncdr","message":"http works, but yeah the toolchain for this stuff was a bit hairy","date":"2014-01-25T00:43:05.320Z","type":"message"}
{"nick":"grncdr","message":"like, I was writing most of it as I needed it, so it wasn't really what you'd call \"robust\"","date":"2014-01-25T00:43:29.864Z","type":"message"}
{"nick":"eugeneware","date":"2014-01-25T00:53:45.914Z","type":"join"}
{"nick":"eugeneware","reason":"Ping timeout: 272 seconds","date":"2014-01-25T00:58:49.741Z","type":"quit"}
{"nick":"jcrugzz","reason":"Read error: Connection reset by peer","date":"2014-01-25T01:01:08.085Z","type":"quit"}
{"nick":"yorick","reason":"Remote host closed the connection","date":"2014-01-25T01:02:15.472Z","type":"quit"}
{"nick":"DTrejo","message":"cool","date":"2014-01-25T01:02:57.625Z","type":"message"}
{"nick":"Raynos","message":"DTrejo: i wrote something like that","date":"2014-01-25T01:03:03.403Z","type":"message"}
{"nick":"DTrejo","message":"yeah, one of those things where you only see the pattern after you've written everything","date":"2014-01-25T01:03:14.267Z","type":"message"}
{"nick":"Raynos","message":"My examples were executable and outputted tap","date":"2014-01-25T01:03:17.070Z","type":"message"}
{"nick":"Raynos","message":"and i had a thing to cp my examples into my readme","date":"2014-01-25T01:03:26.180Z","type":"message"}
{"nick":"DTrejo","message":"nice","date":"2014-01-25T01:03:31.142Z","type":"message"}
{"nick":"Raynos","message":"then i decided i was being silly","date":"2014-01-25T01:03:33.426Z","type":"message"}
{"nick":"DTrejo","message":"haha","date":"2014-01-25T01:03:37.173Z","type":"message"}
{"nick":"DTrejo","message":"aw","date":"2014-01-25T01:03:39.314Z","type":"message"}
{"nick":"tilgovi","date":"2014-01-25T01:03:50.073Z","type":"join"}
{"nick":"dguttman","date":"2014-01-25T01:06:14.955Z","type":"join"}
{"nick":"grncdr","message":"Raynos: I've been doing it the other way around","date":"2014-01-25T01:12:08.854Z","type":"message"}
{"nick":"grncdr","message":"for really small modules, I write the tests in the README synopsis, and use markdown-code-blocks to pull them out and pipe them into node","date":"2014-01-25T01:12:40.164Z","type":"message"}
{"nick":"grncdr","message":"so my test script is \"markdown-code-blocks -t javascript < README.md | node\"","date":"2014-01-25T01:12:59.791Z","type":"message"}
{"nick":"grncdr","message":"this is the largest example I have of it: https://github.com/grncdr/js-set-object-path","date":"2014-01-25T01:13:40.261Z","type":"message"}
{"nick":"grncdr","message":"so far I like it","date":"2014-01-25T01:13:50.948Z","type":"message"}
{"nick":"grncdr","message":"this one too: https://github.com/grncdr/assert-in-order","date":"2014-01-25T01:14:55.316Z","type":"message"}
{"nick":"jxson","date":"2014-01-25T01:15:03.829Z","type":"join"}
{"nick":"eugeneware","date":"2014-01-25T01:15:26.239Z","type":"join"}
{"nick":"grncdr","message":"only downside is I can't get coverage data out of it (afaik)","date":"2014-01-25T01:16:08.574Z","type":"message"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2014-01-25T01:16:42.544Z","type":"quit"}
{"nick":"jxson","reason":"Ping timeout: 260 seconds","date":"2014-01-25T01:19:43.729Z","type":"quit"}
{"nick":"eugeneware","reason":"Ping timeout: 264 seconds","date":"2014-01-25T01:20:38.699Z","type":"quit"}
{"nick":"thlorenz","date":"2014-01-25T01:25:54.029Z","type":"join"}
{"nick":"marcello3d","reason":"Remote host closed the connection","date":"2014-01-25T01:26:39.984Z","type":"quit"}
{"nick":"ednapiranha","reason":"Quit: Leaving...","date":"2014-01-25T01:26:52.540Z","type":"quit"}
{"nick":"marcello3d","date":"2014-01-25T01:27:19.740Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 11]","date":"2014-01-25T01:27:50.927Z","type":"message"}
{"nick":"phated","reason":"Ping timeout: 240 seconds","date":"2014-01-25T01:28:29.170Z","type":"quit"}
{"nick":"AvianFlu","date":"2014-01-25T01:28:38.730Z","type":"join"}
{"nick":"Raynos","message":"grncdr: thats pretty cool","date":"2014-01-25T01:28:50.769Z","type":"message"}
{"nick":"Raynos","message":"grncdr: but tests are not documentation","date":"2014-01-25T01:29:11.350Z","type":"message"}
{"nick":"wolfeidau","date":"2014-01-25T01:29:30.849Z","type":"join"}
{"nick":"phated","date":"2014-01-25T01:29:34.244Z","type":"join"}
{"nick":"marcello3d","reason":"Ping timeout: 252 seconds","date":"2014-01-25T01:31:29.634Z","type":"quit"}
{"nick":"eugeneware","date":"2014-01-25T01:37:08.754Z","type":"join"}
{"nick":"jxson","date":"2014-01-25T01:39:33.482Z","type":"join"}
{"nick":"eugeneware","reason":"Ping timeout: 252 seconds","date":"2014-01-25T01:41:39.032Z","type":"quit"}
{"nick":"paul_irish","message":"thlorenz, defunctzombie: https://code.google.com/p/chromium/issues/detail?id=337909 fyi. saw you talking about it before","date":"2014-01-25T01:43:54.512Z","type":"message"}
{"nick":"thlorenz","message":"paul_irish: ah, interesting didn't even consider that a bug","date":"2014-01-25T01:44:40.012Z","type":"message"}
{"nick":"paul_irish","message":"seems good though... your build script yells at you because jshint found a problem in balls.js:18:32","date":"2014-01-25T01:45:19.580Z","type":"message"}
{"nick":"thlorenz","message":"since it only makes sense to select a line, so in zuul we just copy the file:line of the stack trace (omitting the column) which you can then open","date":"2014-01-25T01:45:25.860Z","type":"message"}
{"nick":"paul_irish","message":"nice to jump right into it in chrome","date":"2014-01-25T01:45:27.701Z","type":"message"}
{"nick":"paul_irish","message":"aye. i still dont really understand how zuul works. would love a demo sometime :)","date":"2014-01-25T01:46:03.775Z","type":"message"}
{"nick":"thlorenz","message":"paul_irish: oh yeah, I can shoot a quick youtube thing but also defunctzombie and I are planning to give a talk about it sometime here at a local meetup (NYC)","date":"2014-01-25T01:46:44.624Z","type":"message"}
{"nick":"paul_irish","message":"niice","date":"2014-01-25T01:47:12.074Z","type":"message"}
{"nick":"thlorenz","message":"paul_irish: I'll cc you if I get the video done and tweet about it (just an ultra short demo showing the stacktrace features)","date":"2014-01-25T01:47:58.004Z","type":"message"}
{"nick":"dguttman","reason":"Ping timeout: 252 seconds","date":"2014-01-25T01:51:33.109Z","type":"quit"}
{"nick":"dguttman","date":"2014-01-25T01:52:18.163Z","type":"join"}
{"nick":"paul_irish","message":"that'd be rad :)","date":"2014-01-25T01:52:18.748Z","type":"message"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2014-01-25T01:55:13.191Z","type":"quit"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-01-25T02:02:06.757Z","type":"quit"}
{"nick":"feross","reason":"Quit: feross","date":"2014-01-25T02:03:32.031Z","type":"quit"}
{"nick":"feross_","new_nick":"feross","date":"2014-01-25T02:03:32.229Z","type":"nick"}
{"nick":"feross_","date":"2014-01-25T02:03:51.705Z","type":"join"}
{"nick":"grncdr","message":"Raynos: I agree about tests not being documentation. That first example in particular is quite opaque.","date":"2014-01-25T02:07:55.622Z","type":"message"}
{"nick":"feross_","reason":"Client Quit","date":"2014-01-25T02:08:16.446Z","type":"quit"}
{"nick":"feross_","date":"2014-01-25T02:08:34.821Z","type":"join"}
{"nick":"grncdr","message":"however, it's possible to interleave other content between the code blocks in the markdown without affecting the functionality, so I think it's my lack of attention that's flawed rather than the methodology","date":"2014-01-25T02:08:49.454Z","type":"message"}
{"nick":"grncdr","message":"thlorenz: do you use a mac?","date":"2014-01-25T02:09:01.898Z","type":"message"}
{"nick":"thlorenz","message":"grncdr: yes","date":"2014-01-25T02:09:18.524Z","type":"message"}
{"nick":"grncdr","message":"do you have issues with phantomjs & browser-launch hanging around after tests finish?","date":"2014-01-25T02:09:42.248Z","type":"message"}
{"nick":"grncdr","message":"* browser-launcher","date":"2014-01-25T02:09:48.818Z","type":"message"}
{"nick":"thlorenz","message":"not sure what browser-launcher you are talking about","date":"2014-01-25T02:10:08.753Z","type":"message"}
{"nick":"grncdr","message":"hm, the one that testling uses I would guess...","date":"2014-01-25T02:10:23.882Z","type":"message"}
{"nick":"grncdr","message":"so might not be your problem","date":"2014-01-25T02:10:28.061Z","type":"message"}
{"nick":"thlorenz","message":"ah, ok I use testling -x open","date":"2014-01-25T02:10:34.758Z","type":"message"}
{"nick":"grncdr","message":"I thought zuul et al used the same thing","date":"2014-01-25T02:10:35.110Z","type":"message"}
{"nick":"grncdr","message":"ah","date":"2014-01-25T02:10:42.313Z","type":"message"}
{"nick":"thlorenz","message":"zuul doesn't launch browsers, it gives you a route in your terminal","date":"2014-01-25T02:10:58.503Z","type":"message"}
{"nick":"thlorenz","message":"unless you specify --phantom","date":"2014-01-25T02:11:07.068Z","type":"message"}
{"nick":"DTrejo","reason":"Remote host closed the connection","date":"2014-01-25T02:11:09.706Z","type":"quit"}
{"nick":"thlorenz","message":"browser tests are done via saucelabs mostly (to get all the different ones)","date":"2014-01-25T02:11:32.246Z","type":"message"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2014-01-25T02:16:45.319Z","type":"quit"}
{"nick":"eugeneware","date":"2014-01-25T02:20:31.312Z","type":"join"}
{"nick":"defunctzombie","message":"grncdr: I think the open module is better than browser-launcher tho not sure","date":"2014-01-25T02:24:16.931Z","type":"message"}
{"nick":"feross","reason":"Quit: feross","date":"2014-01-25T02:24:18.834Z","type":"quit"}
{"nick":"feross_","new_nick":"feross","date":"2014-01-25T02:24:19.288Z","type":"nick"}
{"nick":"eugeneware","reason":"Ping timeout: 260 seconds","date":"2014-01-25T02:25:31.732Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 35]","date":"2014-01-25T02:27:51.090Z","type":"message"}
{"nick":"eugeneware","date":"2014-01-25T02:42:13.455Z","type":"join"}
{"nick":"defunctzombie","message":"thlorenz: making a zuul walkthrough could be cool","date":"2014-01-25T02:42:52.531Z","type":"message"}
{"nick":"coderzach","reason":"Remote host closed the connection","date":"2014-01-25T02:43:20.612Z","type":"quit"}
{"nick":"thlorenz","message":"defunctzombie: yeah, I'd still split it up into two parts","date":"2014-01-25T02:43:23.300Z","type":"message"}
{"nick":"thlorenz","message":"A) how it works locally","date":"2014-01-25T02:43:30.401Z","type":"message"}
{"nick":"thlorenz","message":"B) how it works with saucelabs","date":"2014-01-25T02:43:37.350Z","type":"message"}
{"nick":"defunctzombie","message":"yea","date":"2014-01-25T02:43:40.802Z","type":"message"}
{"nick":"thlorenz","message":"I can do A, you know way more about B","date":"2014-01-25T02:43:49.798Z","type":"message"}
{"nick":"defunctzombie","message":"haha","date":"2014-01-25T02:44:11.171Z","type":"message"}
{"nick":"defunctzombie","message":"yes","date":"2014-01-25T02:44:13.470Z","type":"message"}
{"nick":"coderzac_","date":"2014-01-25T02:45:52.049Z","type":"join"}
{"nick":"eugeneware","reason":"Ping timeout: 252 seconds","date":"2014-01-25T02:47:01.390Z","type":"quit"}
{"nick":"DTrejo","date":"2014-01-25T02:47:08.332Z","type":"join"}
{"nick":"eugeneware","date":"2014-01-25T03:03:55.360Z","type":"join"}
{"nick":"eugeneware","reason":"Ping timeout: 272 seconds","date":"2014-01-25T03:09:17.723Z","type":"quit"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2014-01-25T03:12:34.460Z","type":"quit"}
{"nick":"rvagg","message":"substack: is there anything we can do to replace stream-browserify with readable-stream for browserify? or perhaps just turn it in to a wrapper?","date":"2014-01-25T03:21:48.194Z","type":"message"}
{"nick":"rvagg","message":"substack: what's the actual problem with readable-stream that stream-browserify is required?","date":"2014-01-25T03:21:58.890Z","type":"message"}
{"nick":"rvagg","action":"is on a mission to make require('stream') go away completely","date":"2014-01-25T03:22:30.488Z","type":"action"}
{"nick":"jesusabdullah","message":"weirdo","date":"2014-01-25T03:22:57.303Z","type":"message"}
{"nick":"rvagg","message":"use require('readable-stream') everywhere, get compatibility with older versions of Node, get stability in which version of streams you're using (streams2 = 1.0.x, streams3 = 1.1.x) no matter what version of node","date":"2014-01-25T03:23:41.587Z","type":"message"}
{"nick":"rvagg","message":"require('stream') should be for node core cruft only","date":"2014-01-25T03:23:51.090Z","type":"message"}
{"nick":"funkytek","date":"2014-01-25T03:24:22.674Z","type":"join"}
{"nick":"feross","message":"rvagg: does streams3 change things in a non backwards compatible way?","date":"2014-01-25T03:24:54.494Z","type":"message"}
{"nick":"feross","message":"(in a meaningful way)","date":"2014-01-25T03:26:20.356Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 2, free: 27]","date":"2014-01-25T03:27:51.192Z","type":"message"}
{"nick":"coderzac_","reason":"Remote host closed the connection","date":"2014-01-25T03:28:03.239Z","type":"quit"}
{"nick":"nfroidure","reason":"Ping timeout: 240 seconds","date":"2014-01-25T03:31:59.156Z","type":"quit"}
{"nick":"nfroidure","date":"2014-01-25T03:44:16.626Z","type":"join"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2014-01-25T03:45:23.907Z","type":"quit"}
{"nick":"eugeneware","date":"2014-01-25T03:47:17.597Z","type":"join"}
{"nick":"eugeneware","reason":"Ping timeout: 252 seconds","date":"2014-01-25T03:51:56.588Z","type":"quit"}
{"nick":"rvagg","message":"feross: it's supposed to better support classic streams, make the whole 'data' event more \"first class\", but I've had some compatibility issues so I don't use readable-stream@1.1.x, only 1.0 atm, will wait for streams3 to settle more","date":"2014-01-25T03:52:07.222Z","type":"message"}
{"nick":"rvagg","message":"unfortunately, most people who use readable-stream just jump in on @latest and get 1.1, which IMO is a mistake atm","date":"2014-01-25T03:52:29.690Z","type":"message"}
{"nick":"rvagg","message":"we'll have the same thing when we go post-1.2 and have readable-stream@1.2.x and @1.3.x","date":"2014-01-25T03:52:46.222Z","type":"message"}
{"nick":"feross","message":"rvagg: one thing thatÂ sucks about readable-stream is that it balloons browserify bundle sizes for some reason","date":"2014-01-25T03:54:41.717Z","type":"message"}
{"nick":"feross","message":"if you require('stream') you get a much smaller bundle size","date":"2014-01-25T03:54:57.312Z","type":"message"}
{"nick":"rvagg","message":"feross: yeah cause that's stream-browserify, I'd like to know what the difference is and what we can do about it to make it betterer","date":"2014-01-25T03:55:17.735Z","type":"message"}
{"nick":"rvagg","message":"cause readable-stream is now kept up-to-date with each node release","date":"2014-01-25T03:55:31.006Z","type":"message"}
{"nick":"feross","message":"$ browserify -r readable-stream | wc -c","date":"2014-01-25T03:56:21.858Z","type":"message"}
{"nick":"feross","message":"  234437","date":"2014-01-25T03:56:22.410Z","type":"message"}
{"nick":"feross","message":"$ browserify -r stream | wc -c","date":"2014-01-25T03:56:26.058Z","type":"message"}
{"nick":"feross","message":"  106574","date":"2014-01-25T03:56:26.599Z","type":"message"}
{"nick":"rvagg","message":"feross: try 1.0.x","date":"2014-01-25T03:56:33.572Z","type":"message"}
{"nick":"rvagg","message":"it doesn't have core-util-is as a dependency","date":"2014-01-25T03:56:40.065Z","type":"message"}
{"nick":"feross","message":"same thing","date":"2014-01-25T03:57:13.205Z","type":"message"}
{"nick":"feross","message":"$ browserify -r readable-stream | wc -c","date":"2014-01-25T03:57:14.023Z","type":"message"}
{"nick":"feross","message":"  239716","date":"2014-01-25T03:57:14.810Z","type":"message"}
{"nick":"feross","message":"^ that was with readable-stream@1.0.25","date":"2014-01-25T03:57:33.508Z","type":"message"}
{"nick":"feross","message":"core-util-is is extremely small","date":"2014-01-25T03:57:43.002Z","type":"message"}
{"nick":"rvagg","message":"mm, so what's up with that? why does that happen if stream-browserify is just a \"copy\" of node core streams?","date":"2014-01-25T03:57:54.603Z","type":"message"}
{"nick":"feross","message":"haven't investigated too deeply, but i can take a look now","date":"2014-01-25T03:58:23.614Z","type":"message"}
{"nick":"rvagg","message":"line counts are very similar in stream-browserify/*.js and readable-stream/*.js","date":"2014-01-25T03:59:34.045Z","type":"message"}
{"nick":"substack","message":"rvagg: because it has been optimized to not require all the files that readable-stream or core streams include","date":"2014-01-25T04:01:04.304Z","type":"message"}
{"nick":"substack","message":"it's also been very carefully tuned to work in all browsers","date":"2014-01-25T04:01:25.681Z","type":"message"}
{"nick":"rvagg","message":"substack: do you have a record of the changes? we could push them back in to readable-stream","date":"2014-01-25T04:02:04.466Z","type":"message"}
{"nick":"rvagg","message":"possibly","date":"2014-01-25T04:02:10.794Z","type":"message"}
{"nick":"rvagg","message":"as long as the core streams tests still pass","date":"2014-01-25T04:02:15.688Z","type":"message"}
{"nick":"rvagg","message":"otherwise there's just going to be a continued fragmentation of 'stream' vs 'readable-stream' and the various versions thereof","date":"2014-01-25T04:03:39.603Z","type":"message"}
{"nick":"feross","message":"rvagg: i just noticed something that def isn't helping with the bundle size of readable-stream","date":"2014-01-25T04:03:59.744Z","type":"message"}
{"nick":"feross","message":"the entire Buffer shim is getting included twice","date":"2014-01-25T04:04:07.493Z","type":"message"}
{"nick":"feross","message":"that's about 35KB that could be eliminated right there","date":"2014-01-25T04:04:43.740Z","type":"message"}
{"nick":"rvagg","message":"feross: so what's the answer to that? var Buffer = require('buffer')?","date":"2014-01-25T04:05:13.062Z","type":"message"}
{"nick":"feross","message":"i recall there being some weirdness about just using the global Buffer vs require('buffer').Buffer causing the shim to get inserted twice","date":"2014-01-25T04:05:16.853Z","type":"message"}
{"nick":"feross","message":"i'm not 100% sure though, substack?","date":"2014-01-25T04:05:24.783Z","type":"message"}
{"nick":"rvagg","message":"string_decoder is doing that","date":"2014-01-25T04:05:32.286Z","type":"message"}
{"nick":"rvagg","message":"I thought about doing it in readable-stream but wasn't sure what the reasoning was for it","date":"2014-01-25T04:05:44.291Z","type":"message"}
{"nick":"feross","message":"this seems like something that should just be fixed in browserify","date":"2014-01-25T04:06:03.640Z","type":"message"}
{"nick":"substack","message":"I don't want to regress over all the patches that have gone into stream-browserify","date":"2014-01-25T04:06:05.178Z","type":"message"}
{"nick":"feross","message":"substack: any reason we can't set the global Buffer and require('buffer').Buffer to point to the same required bundle?","date":"2014-01-25T04:06:50.411Z","type":"message"}
{"nick":"feross","message":"to save 35KB of bloat","date":"2014-01-25T04:07:01.911Z","type":"message"}
{"nick":"eugeneware","date":"2014-01-25T04:08:59.421Z","type":"join"}
{"nick":"rvagg","message":"it just seems to me that this is a fairly vital part of the node ecosystem and browserify can't live up to its promised ability to allow node development in the browser without some kind of special treatment","date":"2014-01-25T04:09:40.691Z","type":"message"}
{"nick":"rvagg","message":"ignoring it is futile","date":"2014-01-25T04:09:45.054Z","type":"message"}
{"nick":"rvagg","message":"it'","date":"2014-01-25T04:09:59.368Z","type":"message"}
{"nick":"rvagg","message":"it'll just lead to bloat for people who otherwise don't know what the problem is","date":"2014-01-25T04:10:11.547Z","type":"message"}
{"nick":"funkytek","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦","date":"2014-01-25T04:10:13.369Z","type":"quit"}
{"nick":"rvagg","message":"not to mention compatibility problems: https://github.com/substack/tap-parser/pull/9","date":"2014-01-25T04:12:09.897Z","type":"message"}
{"nick":"rvagg","message":"i.e. faucet is completely unusable on node 0.8","date":"2014-01-25T04:12:17.284Z","type":"message"}
{"nick":"eugeneware","reason":"Ping timeout: 252 seconds","date":"2014-01-25T04:13:56.941Z","type":"quit"}
{"nick":"feross","message":"rvagg: porting all the browser fixes from stream-browserify into readable-stream and getting bundle size down seems worthwhile regardless of what the browserify uses as default","date":"2014-01-25T04:17:27.657Z","type":"message"}
{"nick":"feross","message":"since lots of modules require readable-stream directly","date":"2014-01-25T04:17:43.972Z","type":"message"}
{"nick":"feross","message":"rvagg: why does _stream_writable.js have this line:","date":"2014-01-25T04:25:35.427Z","type":"message"}
{"nick":"feross","message":"var Stream = require('stream');","date":"2014-01-25T04:25:37.192Z","type":"message"}
{"nick":"feross","message":"that will make browserify include stream-browserify in the bundle","date":"2014-01-25T04:26:02.633Z","type":"message"}
{"nick":"rvagg","message":"feross: since ReadableStream overwrites everything important I believe that's there so that instanceof will still work","date":"2014-01-25T04:26:11.636Z","type":"message"}
{"nick":"feross","message":"yo dawg, i herd you like streams so here's TWO implementations in ur bundle!","date":"2014-01-25T04:26:24.785Z","type":"message"}
{"nick":"rvagg","message":"feross: do you think that's the core problem?","date":"2014-01-25T04:26:41.252Z","type":"message"}
{"nick":"feross","message":"still looking into it, but yeah i mean that will make it include a huge 106KB stream implementation that isn't needed","date":"2014-01-25T04:27:16.215Z","type":"message"}
{"nick":"rvagg","message":"it means that regardless of whether you use core-streams or different versions of readable-stream you still end up with objects with a consistent prototype chain","date":"2014-01-25T04:27:26.202Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 27]","date":"2014-01-25T04:27:50.887Z","type":"message"}
{"nick":"rvagg","message":"isaacs: can you sanity check that statement? readable-stream uses require('stream') just to use core-streams as a base class purely so `instanceof` will work across all stream implementations?","date":"2014-01-25T04:28:36.779Z","type":"message"}
{"nick":"coderzach","date":"2014-01-25T04:28:49.937Z","type":"join"}
{"nick":"feross","message":"it looks like its using some of the implementation too","date":"2014-01-25T04:29:12.662Z","type":"message"}
{"nick":"feross","message":"rvagg: in the Writable constructor I see Stream.call(this);","date":"2014-01-25T04:29:32.927Z","type":"message"}
{"nick":"feross","message":"where var Stream = require('stream');","date":"2014-01-25T04:29:41.868Z","type":"message"}
{"nick":"rvagg","message":"feross: all that does is EE.call(this)","date":"2014-01-25T04:30:01.186Z","type":"message"}
{"nick":"rvagg","message":"I guess there's that ..","date":"2014-01-25T04:30:05.946Z","type":"message"}
{"nick":"feross","message":"that seems like it ties readable-stream to potential future breaking changes in node core","date":"2014-01-25T04:30:32.316Z","type":"message"}
{"nick":"eugeneware","date":"2014-01-25T04:30:42.756Z","type":"join"}
{"nick":"feross","message":"why not move the EE.call(this) directly into the source","date":"2014-01-25T04:30:43.160Z","type":"message"}
{"nick":"rvagg","message":"otherwise 'stream' is just .pipe() which is re-implemented","date":"2014-01-25T04:30:45.520Z","type":"message"}
{"nick":"rvagg","message":"feross: for that `instanceof` property, there's no Stream.isStream() like there is Buffer.isBuffer()","date":"2014-01-25T04:31:06.799Z","type":"message"}
{"nick":"rvagg","message":"`foo instanceof Stream` should always work regardless of using core streams or readable-stream@1.0 or 1.1","date":"2014-01-25T04:31:38.913Z","type":"message"}
{"nick":"feross","message":"rvagg: yeah, that seems important. still thinking about that.","date":"2014-01-25T04:31:44.932Z","type":"message"}
{"nick":"rvagg","message":"across 0.8, 0.10 and 0.11","date":"2014-01-25T04:31:46.719Z","type":"message"}
{"nick":"feross","message":"we broke that for Buffers because we're instanceof Uint8Array","date":"2014-01-25T04:31:59.688Z","type":"message"}
{"nick":"feross","message":"(in the name of performance)","date":"2014-01-25T04:32:07.942Z","type":"message"}
{"nick":"feross","message":"but at least there's Buffer.isBuffer()","date":"2014-01-25T04:32:27.725Z","type":"message"}
{"nick":"coderzach","reason":"Ping timeout: 272 seconds","date":"2014-01-25T04:33:53.907Z","type":"quit"}
{"nick":"eugeneware","reason":"Ping timeout: 252 seconds","date":"2014-01-25T04:35:24.333Z","type":"quit"}
{"nick":"rvagg","message":"ideally browserify would be smart about this and treat readable-stream as a special case","date":"2014-01-25T04:36:33.790Z","type":"message"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2014-01-25T04:37:28.859Z","type":"quit"}
{"nick":"substack","message":"rvagg: special casing userland libraries seems completely antithetical to the reason for userland libs in the first place","date":"2014-01-25T04:38:33.616Z","type":"message"}
{"nick":"substack","message":"it massively increases the coordination costs and opens the doors to *any* library that is misbehaving","date":"2014-01-25T04:38:54.156Z","type":"message"}
{"nick":"rvagg","message":"substack: then do away with require('stream') and make people use the user-land version of it","date":"2014-01-25T04:38:54.303Z","type":"message"}
{"nick":"DTrejo","reason":"Remote host closed the connection","date":"2014-01-25T04:38:55.678Z","type":"quit"}
{"nick":"substack","message":"and I don't want browserify to take on that cause","date":"2014-01-25T04:39:00.174Z","type":"message"}
{"nick":"substack","message":"the scope creep is too great","date":"2014-01-25T04:39:03.760Z","type":"message"}
{"nick":"rvagg","message":"I agree, but the fact that streams are in core screws this up royaly","date":"2014-01-25T04:39:18.972Z","type":"message"}
{"nick":"substack","message":"rvagg: that's what the browser field is for","date":"2014-01-25T04:39:23.264Z","type":"message"}
{"nick":"rvagg","message":"for special casing you mean?","date":"2014-01-25T04:39:44.421Z","type":"message"}
{"nick":"rvagg","message":"stream-browserify exists on an island, I don't imagine you pull in upstream patches from core, there's no way to try streams3 out with it","date":"2014-01-25T04:40:20.316Z","type":"message"}
{"nick":"substack","message":"readable-stream has different priorities from stream-browserify","date":"2014-01-25T04:41:51.398Z","type":"message"}
{"nick":"substack","message":"stream-browserify is built for stability and browser compatibility","date":"2014-01-25T04:42:15.116Z","type":"message"}
{"nick":"substack","message":"and file size minimization","date":"2014-01-25T04:42:24.440Z","type":"message"}
{"nick":"rvagg","message":"readable-stream exists for stability too, that's moot","date":"2014-01-25T04:42:31.853Z","type":"message"}
{"nick":"substack","message":"those are things that would regress very fast in readable-stream","date":"2014-01-25T04:42:38.336Z","type":"message"}
{"nick":"substack","message":"without a lot of tooling","date":"2014-01-25T04:42:41.996Z","type":"message"}
{"nick":"rvagg","message":"browser compatibility, we can probably fix that in readable-stream","date":"2014-01-25T04:42:42.152Z","type":"message"}
{"nick":"feross","message":"i think the file size problem with 'readable-stream' is only there because it ALSO has to include stream-browserify, effectively doubling its size","date":"2014-01-25T04:43:28.288Z","type":"message"}
{"nick":"rvagg","message":"so what's a library like this to do? https://github.com/maxogden/csv-write-stream","date":"2014-01-25T04:43:43.764Z","type":"message"}
{"nick":"rvagg","message":"it'll pull in readable-stream to do its thing, but it's getting bloat too","date":"2014-01-25T04:43:57.788Z","type":"message"}
{"nick":"substack","message":"I spent like a week fixing very subtle browser issues with stream-browserify. I don't look forward to duplicating all that work.","date":"2014-01-25T04:44:12.910Z","type":"message"}
{"nick":"rvagg","message":"substack: but you're going to have to do it anyway when 0.12 is released","date":"2014-01-25T04:44:31.349Z","type":"message"}
{"nick":"rvagg","message":"I've tried messing with the 'browser' package.json property without much success, I don't imagine there are many others out there who have the smallest clue","date":"2014-01-25T04:44:45.995Z","type":"message"}
{"nick":"rvagg","message":"https://github.com/isaacs/readable-stream/blob/master/build/files.js","date":"2014-01-25T04:45:15.321Z","type":"message"}
{"nick":"rvagg","message":"we have the capabilities to fix browser compatibility issues if they aren't going to impact too much on perf or are too complex","date":"2014-01-25T04:45:35.300Z","type":"message"}
{"nick":"rvagg","message":"looks like just some changes for process.nextTick/setImmediate, forEach and indexOf in there when I compare equivilant versions of stream-browserify and readable-stream@1.0","date":"2014-01-25T04:49:10.379Z","type":"message"}
{"nick":"coderzach","date":"2014-01-25T04:49:54.138Z","type":"join"}
{"nick":"substack","message":"rvagg: if you can get all those fixes into readable-stream and also get readable-stream on testling-ci so I can just swap stream-browserify for readable-stream","date":"2014-01-25T04:51:00.932Z","type":"message"}
{"nick":"feross","message":"rvagg, substack: i can help with this testing & debugging old browsers","date":"2014-01-25T04:52:07.753Z","type":"message"}
{"nick":"eugeneware","date":"2014-01-25T04:52:24.709Z","type":"join"}
{"nick":"feross","message":"i got buffers working down to ie6 recently :)","date":"2014-01-25T04:52:24.945Z","type":"message"}
{"nick":"rvagg","message":"we'll see what we can do without making too big a footprint","date":"2014-01-25T04:53:04.964Z","type":"message"}
{"nick":"feross","message":"i'm in favor of readable-stream becoming default for 'stream'. that will make the file size of everything that includes 'readable-stream' (which is many modules these days) much, much smaller","date":"2014-01-25T04:53:46.652Z","type":"message"}
{"nick":"coderzach","reason":"Ping timeout: 245 seconds","date":"2014-01-25T04:54:10.139Z","type":"quit"}
{"nick":"jxson","date":"2014-01-25T04:56:16.566Z","type":"join"}
{"nick":"guybrush","message":"i wonder if there will be a stream4 some day :D","date":"2014-01-25T04:56:19.276Z","type":"message"}
{"nick":"eugeneware","reason":"Ping timeout: 245 seconds","date":"2014-01-25T04:56:48.043Z","type":"quit"}
{"nick":"guybrush","message":"also i fear promises and generator stuff, basically i dont even understand code with that stuff in it :/","date":"2014-01-25T04:56:58.064Z","type":"message"}
{"nick":"guybrush","message":"also it looks ugly haha","date":"2014-01-25T04:59:19.337Z","type":"message"}
{"nick":"rvagg","message":"the day that stuff becomes mainstream Node, 1/2 the people in this channel will probably be hacking on some new platform anyway","date":"2014-01-25T05:00:12.272Z","type":"message"}
{"nick":"jxson","reason":"Ping timeout: 240 seconds","date":"2014-01-25T05:00:59.172Z","type":"quit"}
{"nick":"grncdr","message":"Node.vb","date":"2014-01-25T05:02:09.049Z","type":"message"}
{"nick":"guybrush","message":"vertx! nodejx! wow! such crazy much spread so not compatible with node-eco cool","date":"2014-01-25T05:06:20.916Z","type":"message"}
{"nick":"grncdr","message":"hah, I wanted to like vertx","date":"2014-01-25T05:07:02.847Z","type":"message"}
{"nick":"grncdr","message":"like, the idea of a reliable global event bus tying together tiny little modules implemented in any of 5 languages","date":"2014-01-25T05:08:29.354Z","type":"message"}
{"nick":"grncdr","message":"that *sounds* cool","date":"2014-01-25T05:08:34.531Z","type":"message"}
{"nick":"guybrush","message":"it hasnt 'node' in its name, so its only moderate cool","date":"2014-01-25T05:08:34.657Z","type":"message"}
{"nick":"grncdr","message":"but every time I go to JVM land I regret it :|","date":"2014-01-25T05:09:01.827Z","type":"message"}
{"nick":"guybrush","message":"i cant see why anyone would like to program in java","date":"2014-01-25T05:09:44.122Z","type":"message"}
{"nick":"grncdr","message":"different strokes","date":"2014-01-25T05:10:09.156Z","type":"message"}
{"nick":"grncdr","message":"there are people who say the same about JavaScript","date":"2014-01-25T05:10:22.590Z","type":"message"}
{"nick":"grncdr","message":":D","date":"2014-01-25T05:10:25.073Z","type":"message"}
{"nick":"guybrush","message":"its only my opinion for sure and there are lots of cool and awesome javastuff","date":"2014-01-25T05:10:32.883Z","type":"message"}
{"nick":"guybrush","message":"i only enjoy javascript c and lua","date":"2014-01-25T05:11:09.985Z","type":"message"}
{"nick":"guybrush","message":"but im really only able to build something real in js :p","date":"2014-01-25T05:11:38.246Z","type":"message"}
{"nick":"feross","message":"rvagg: when i do \"node build.js <version>\" what version from 0.10.x should i use?","date":"2014-01-25T05:12:54.147Z","type":"message"}
{"nick":"guybrush","message":"though im really looking forward to get better with c, need to look more into thlorenz stuff","date":"2014-01-25T05:12:54.387Z","type":"message"}
{"nick":"rvagg","message":"feross: ./build.js 0.10.25","date":"2014-01-25T05:13:05.432Z","type":"message"}
{"nick":"feross","message":"that adds a new test, is that cool?","date":"2014-01-25T05:13:19.137Z","type":"message"}
{"nick":"thlorenz","message":"guybrush: that may be a bit too soon as I'm just slowly coming out of my noobness ;)","date":"2014-01-25T05:13:27.512Z","type":"message"}
{"nick":"guybrush","message":"thlorenz: why did you choose clib over dotc?","date":"2014-01-25T05:13:34.978Z","type":"message"}
{"nick":"rvagg","message":"feross: oh does it? hm, mustn't have checked it in before, leave it out of the PR","date":"2014-01-25T05:13:42.033Z","type":"message"}
{"nick":"thlorenz","message":"I'd suggest to read thru some of the clibs instead","date":"2014-01-25T05:13:43.464Z","type":"message"}
{"nick":"rvagg","message":"I'll add it later, test should pass tho","date":"2014-01-25T05:13:49.198Z","type":"message"}
{"nick":"thlorenz","message":"guybrush: dotc has problems, like it doesn't work with macros at all","date":"2014-01-25T05:14:01.811Z","type":"message"}
{"nick":"eugeneware","date":"2014-01-25T05:14:07.703Z","type":"join"}
{"nick":"guybrush","message":"but its totally plugable into npm!","date":"2014-01-25T05:14:18.550Z","type":"message"}
{"nick":"thlorenz","message":"also it messes with my editor plugins like syntastic which don't understand dot.c","date":"2014-01-25T05:14:22.430Z","type":"message"}
{"nick":"guybrush","message":"who nieeds macros :p","date":"2014-01-25T05:14:26.816Z","type":"message"}
{"nick":"thlorenz","message":"guybrush: are you kidding? if you do pure C you're gonna need them","date":"2014-01-25T05:14:44.587Z","type":"message"}
{"nick":"rvagg","message":"feross: sorry, I forgot to push my latest, I'd already published 1.0.25 with this but hadn't pushed to github","date":"2014-01-25T05:14:46.307Z","type":"message"}
{"nick":"rvagg","message":"feross: rebase to latest v0.10, pushed it now","date":"2014-01-25T05:14:52.229Z","type":"message"}
{"nick":"feross","message":"k","date":"2014-01-25T05:14:57.123Z","type":"message"}
{"nick":"thlorenz","message":"guybrush: so for now I stuck with clib cuz it at least works, even if some parts aren't that pretty","date":"2014-01-25T05:15:21.447Z","type":"message"}
{"nick":"guybrush","message":"thlorenz: cool i have to look into it more maybe","date":"2014-01-25T05:15:53.924Z","type":"message"}
{"nick":"thlorenz","message":"we had a discussion in #npmalloc about this way back, you could join if you wanna talk npm modules for C","date":"2014-01-25T05:15:55.101Z","type":"message"}
{"nick":"thlorenz","message":"yeah, if you come up with something that works I'll buy you a beer :)","date":"2014-01-25T05:16:14.394Z","type":"message"}
{"nick":"eugeneware","reason":"Ping timeout: 252 seconds","date":"2014-01-25T05:18:54.027Z","type":"quit"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2014-01-25T05:19:06.876Z","type":"quit"}
{"nick":"guybrush","message":"actually i _really_ like the idea of using gh as registry, or rather just a very simple registry-api that happens to be just like gh","date":"2014-01-25T05:19:35.465Z","type":"message"}
{"nick":"guybrush","message":"like tj made component","date":"2014-01-25T05:20:19.914Z","type":"message"}
{"nick":"rvagg","message":"thlorenz: you should also /join #uvjs and help out with that with your new-found C skillz","date":"2014-01-25T05:20:20.039Z","type":"message"}
{"nick":"thlorenz","message":"rvagg: ah didn't know that existed - have been hanging in #libuv, but most stuff there is way over my head","date":"2014-01-25T05:21:02.559Z","type":"message"}
{"nick":"guybrush","message":"i like reading stuff i dont understand, whats the point of reading things you already know haha :D","date":"2014-01-25T05:21:51.011Z","type":"message"}
{"nick":"thlorenz","message":"ah defunctzombie's channel he tried to recruit me before for uvjs -- gonna polish my C first though before mixing and matchin ;)","date":"2014-01-25T05:22:03.956Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 30]","date":"2014-01-25T05:27:51.014Z","type":"message"}
{"nick":"feross","message":"rvagg: done!","date":"2014-01-25T05:31:32.732Z","type":"message"}
{"nick":"feross","message":"https://github.com/isaacs/readable-stream/pull/75","date":"2014-01-25T05:31:34.174Z","type":"message"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2014-01-25T05:37:22.417Z","type":"nick"}
{"nick":"wolfeidau","date":"2014-01-25T05:38:38.856Z","type":"join"}
{"nick":"feross","message":"rvagg: what's the point of the float.patch file? With the build file, you don't really need that around anymore, right?","date":"2014-01-25T05:40:48.725Z","type":"message"}
{"nick":"rvagg","message":"feross: I don't know .. I haven't deleted it yet because I don't know what it's for!","date":"2014-01-25T05:41:10.880Z","type":"message"}
{"nick":"rvagg","message":"I deleted some other cruft","date":"2014-01-25T05:41:16.235Z","type":"message"}
{"nick":"feross","message":"i think it's just a diff of all the changes","date":"2014-01-25T05:41:37.327Z","type":"message"}
{"nick":"feross","message":"rvagg: see this https://github.com/isaacs/core-util-is/commit/3b246db45e11bc208bfc10f10a16f55c4b71c45e","date":"2014-01-25T05:41:43.269Z","type":"message"}
{"nick":"feross","message":"that's what i had to do for isaacs to merge my change into core-util-is","date":"2014-01-25T05:42:11.226Z","type":"message"}
{"nick":"rvagg","message":"ah ok, so \"float\", do you think that's referring to \"floating the code out of core\"?","date":"2014-01-25T05:42:17.572Z","type":"message"}
{"nick":"feross","message":"yeah probably!","date":"2014-01-25T05:42:28.655Z","type":"message"}
{"nick":"rvagg","message":"mm, I should probably ditch it then","date":"2014-01-25T05:42:52.974Z","type":"message"}
{"nick":"feross","message":"but it looks massively out of date for readable-stream","date":"2014-01-25T05:43:01.663Z","type":"message"}
{"nick":"feross","message":"i would ditch it","date":"2014-01-25T05:43:04.035Z","type":"message"}
{"nick":"feross","message":"and it's super annoying to keep it up to date. the build script approach is better","date":"2014-01-25T05:43:17.162Z","type":"message"}
{"nick":"feross","message":"well, not \"super annoying\" maybe","date":"2014-01-25T05:43:28.208Z","type":"message"}
{"nick":"feross","message":"just not useful for anything","date":"2014-01-25T05:43:36.692Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-01-25T05:44:51.816Z","type":"quit"}
{"nick":"coderzach","date":"2014-01-25T05:50:47.751Z","type":"join"}
{"nick":"coderzach","reason":"Ping timeout: 272 seconds","date":"2014-01-25T05:55:35.761Z","type":"quit"}
{"nick":"eugeneware","date":"2014-01-25T05:57:30.772Z","type":"join"}
{"nick":"eugeneware","reason":"Ping timeout: 264 seconds","date":"2014-01-25T06:02:38.656Z","type":"quit"}
{"nick":"eugeneware","date":"2014-01-25T06:19:13.753Z","type":"join"}
{"nick":"eugeneware","reason":"Ping timeout: 240 seconds","date":"2014-01-25T06:23:59.049Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 14]","date":"2014-01-25T06:27:51.103Z","type":"message"}
{"nick":"Maciek416","reason":"Remote host closed the connection","date":"2014-01-25T06:29:22.125Z","type":"quit"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2014-01-25T06:29:23.434Z","type":"quit"}
{"nick":"pfraze","reason":"Ping timeout: 260 seconds","date":"2014-01-25T06:37:59.730Z","type":"quit"}
{"nick":"feross","message":"rvagg: seems like lots of the testsÂ for readable-stream are actually testing stream instead of readable-stream","date":"2014-01-25T06:39:08.131Z","type":"message"}
{"nick":"feross","message":"see: https://github.com/isaacs/readable-stream/blob/v0.10/test/simple/test-stream-pipe-event.js#L31","date":"2014-01-25T06:39:08.906Z","type":"message"}
{"nick":"dominictarr","date":"2014-01-25T06:39:15.631Z","type":"join"}
{"nick":"feross","message":"^ any idea what's up with that?","date":"2014-01-25T06:40:06.881Z","type":"message"}
{"nick":"jesusabdullah","message":"https://npmjs.org/browse/keyword/sweet-macros :o","date":"2014-01-25T06:41:10.930Z","type":"message"}
{"nick":"rvagg","message":"feross: I have to somewhat manually find and turn those into proper tests for readable-stream","date":"2014-01-25T06:45:18.959Z","type":"message"}
{"nick":"feross","message":"rvagg: so just to confirm, they're testing nothing right now?","date":"2014-01-25T06:45:43.164Z","type":"message"}
{"nick":"rvagg","message":"feross: but with respect to that, those tests probably don't even make sense here","date":"2014-01-25T06:45:53.782Z","type":"message"}
{"nick":"rvagg","message":"they are just testing the plain pipe() which we have no control over","date":"2014-01-25T06:46:06.088Z","type":"message"}
{"nick":"rvagg","message":"so ya, they are irrelevant atm","date":"2014-01-25T06:46:19.647Z","type":"message"}
{"nick":"brianloveswords","reason":"Excess Flood","date":"2014-01-25T06:46:32.024Z","type":"quit"}
{"nick":"rvagg","message":"feross: I'm still going through and making some of the newer tests pass with 0.8, got some failures there still but I think it's mostly related to the tests rather than the impl","date":"2014-01-25T06:46:44.252Z","type":"message"}
{"nick":"brianloveswords","date":"2014-01-25T06:46:50.535Z","type":"join"}
{"nick":"rvagg","message":"feross: see build/test-replacements.js for some of my work converting core tests","date":"2014-01-25T06:47:07.739Z","type":"message"}
{"nick":"feross","message":"yeah saw that","date":"2014-01-25T06:47:13.158Z","type":"message"}
{"nick":"feross","message":"okay, another question: if we want readable-stream to become the default for require('stream') in browserify then don't we need to include the implementation for pipe() in readable-stream instead of pulling that in from core streams?","date":"2014-01-25T06:47:43.313Z","type":"message"}
{"nick":"coderzach","date":"2014-01-25T06:51:32.598Z","type":"join"}
{"nick":"feross","message":"if i understand it correctly, right now the pipe() implementation that browserify'd readable-stream uses is actually from stream-browserify!","date":"2014-01-25T06:52:11.597Z","type":"message"}
{"nick":"feross","message":"STREAMS IN STREAMS","date":"2014-01-25T06:52:24.555Z","type":"message"}
{"nick":"LOUDBOT","message":"NO FLEXIN, DIDN'T EVEN LOOK IN A NIGGAS DIRECTION AS I RAN THE INTERSECTION","date":"2014-01-25T06:52:24.925Z","type":"message"}
{"nick":"feross","message":"oh, maybe i'm being silly...","date":"2014-01-25T06:53:34.766Z","type":"message"}
{"nick":"rvagg","message":"feross: we'd need to mock it out with something that just gives us the EE inheritance","date":"2014-01-25T06:54:14.208Z","type":"message"}
{"nick":"feross","message":"i see this in _stream_readable.js","date":"2014-01-25T06:54:29.771Z","type":"message"}
{"nick":"feross","message":"  // convert to an old-style stream.","date":"2014-01-25T06:54:30.617Z","type":"message"}
{"nick":"rvagg","message":"lib/_stream_readable.js overrides pipe so there's only EE left","date":"2014-01-25T06:54:31.609Z","type":"message"}
{"nick":"feross","message":"  stream.readable = true;","date":"2014-01-25T06:54:31.729Z","type":"message"}
{"nick":"feross","message":"  stream.pipe = Stream.prototype.pipe;","date":"2014-01-25T06:54:32.367Z","type":"message"}
{"nick":"rvagg","message":"oh, that's interesting","date":"2014-01-25T06:54:49.892Z","type":"message"}
{"nick":"feross","message":"the lines i pasted will set pipe to stream-browserify's pipe() method","date":"2014-01-25T06:54:54.837Z","type":"message"}
{"nick":"rvagg","message":"which is silly since that's just a copy of readable-stream also","date":"2014-01-25T06:55:09.191Z","type":"message"}
{"nick":"feross","message":"i'm a fan of very small bundle sizes, so i don't care how we do it, but i want both require('stream') and require('readable-stream') to include 100kb at most","date":"2014-01-25T06:56:08.067Z","type":"message"}
{"nick":"coderzach","reason":"Ping timeout: 252 seconds","date":"2014-01-25T06:56:14.892Z","type":"quit"}
{"nick":"feross","message":"willing to help make this happen","date":"2014-01-25T06:56:21.311Z","type":"message"}
{"nick":"feross","message":"i think one easy way to get started would be to make readable-stream not use require('stream') for anything except the instanceof trick","date":"2014-01-25T06:57:12.173Z","type":"message"}
{"nick":"feross","message":"then next we can add more browser compat","date":"2014-01-25T06:57:36.669Z","type":"message"}
{"nick":"feross","message":"then lastly, we just add a test to only require('stream') when we're not in browserify","date":"2014-01-25T06:58:17.398Z","type":"message"}
{"nick":"feross","message":"or maybe use the \"browser\" field","date":"2014-01-25T06:58:24.845Z","type":"message"}
{"nick":"feross","message":"and then i think this can become the default","date":"2014-01-25T06:58:30.867Z","type":"message"}
{"nick":"feross","message":"the instanceof trick won't be necessary if BOTH 'readable-stream' and 'stream' are the same thing in the browser","date":"2014-01-25T06:59:04.714Z","type":"message"}
{"nick":"feross","message":"so, then we've made the bundle size super small :)","date":"2014-01-25T06:59:38.130Z","type":"message"}
{"nick":"dominictarr","message":"hmm, sounds like that might break other stuff that is expecting indexof","date":"2014-01-25T07:00:46.994Z","type":"message"}
{"nick":"feross","message":"dominictarr: what do you mean?","date":"2014-01-25T07:01:25.282Z","type":"message"}
{"nick":"dominictarr","message":"generally, I advise against using instanceof in node, because node_modules can break singletons","date":"2014-01-25T07:01:28.497Z","type":"message"}
{"nick":"dominictarr","message":"well, if userland module is testing `x instanceof ReadableStream` it would be best if it reacted the same way in browserify as in node.js","date":"2014-01-25T07:02:18.009Z","type":"message"}
{"nick":"feross","message":"it would, i think","date":"2014-01-25T07:02:36.608Z","type":"message"}
{"nick":"dominictarr","message":"substack, do you have an api accessable job queue for testling?","date":"2014-01-25T07:03:45.414Z","type":"message"}
{"nick":"feross","message":"currently 'readable-stream' does require('stream') internally and makes all its streams inherit from that so that when someone checks `x instance ReadableStream` it will work","date":"2014-01-25T07:04:01.934Z","type":"message"}
{"nick":"feross","message":"but that means that when 'readable-stream' is browserified that TWO stream implementations get bundled and that's like ~250KB","date":"2014-01-25T07:04:38.465Z","type":"message"}
{"nick":"dominictarr","message":"ah, yeah. stream2 is massive.","date":"2014-01-25T07:04:58.054Z","type":"message"}
{"nick":"feross","message":"so i was suggesting that if 'readable-stream' were to be required instead of 'stream-browserify' when users do require('stream'), then we wouldn't need to include two implementations anymore","date":"2014-01-25T07:06:00.697Z","type":"message"}
{"nick":"feross","message":"because then require('stream').ReadableStream would === require('readable-stream').ReadableStream","date":"2014-01-25T07:06:38.896Z","type":"message"}
{"nick":"dominictarr","reason":"Ping timeout: 252 seconds","date":"2014-01-25T07:10:17.617Z","type":"quit"}
{"nick":"contrahax","date":"2014-01-25T07:19:35.430Z","type":"join"}
{"nick":"contrahax","reason":"Client Quit","date":"2014-01-25T07:23:39.858Z","type":"quit"}
{"nick":"eugeneware","date":"2014-01-25T07:24:00.607Z","type":"join"}
{"nick":"feross","message":"substack: I just fixed two small bugs in stream-browserify: https://github.com/substack/stream-browserify/pull/6","date":"2014-01-25T07:24:26.245Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 35]","date":"2014-01-25T07:27:51.037Z","type":"message"}
{"nick":"eugeneware","reason":"Ping timeout: 252 seconds","date":"2014-01-25T07:29:15.029Z","type":"quit"}
{"nick":"DTrejo","date":"2014-01-25T07:37:03.328Z","type":"join"}
{"nick":"rvagg","message":"doh, I just sent 4k dogecoin to a bad address","date":"2014-01-25T07:40:02.922Z","type":"message"}
{"nick":"rvagg","message":"I'm such a noob","date":"2014-01-25T07:40:04.961Z","type":"message"}
{"nick":"rvagg","message":"er, 6k","date":"2014-01-25T07:40:17.520Z","type":"message"}
{"nick":"contrahax","date":"2014-01-25T07:47:22.330Z","type":"join"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2014-01-25T07:48:14.577Z","type":"quit"}
{"nick":"coderzach","date":"2014-01-25T07:52:11.050Z","type":"join"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2014-01-25T07:54:37.111Z","type":"quit"}
{"nick":"coderzach","reason":"Ping timeout: 245 seconds","date":"2014-01-25T07:56:23.051Z","type":"quit"}
