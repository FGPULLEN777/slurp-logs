{"nick":"pfraze","reason":"Remote host closed the connection","date":"2016-03-05T00:06:52.698Z","type":"quit"}
{"nick":"vweevers","reason":"Ping timeout: 244 seconds","date":"2016-03-05T01:11:39.206Z","type":"quit"}
{"nick":"ekristen","reason":"Remote host closed the connection","date":"2016-03-05T01:27:32.112Z","type":"quit"}
{"nick":"pfraze","date":"2016-03-05T02:08:39.760Z","type":"join"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2016-03-05T02:16:21.009Z","type":"quit"}
{"nick":"pfraze","date":"2016-03-05T02:21:56.415Z","type":"join"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2016-03-05T02:24:59.812Z","type":"quit"}
{"nick":"knownasilya","reason":"Quit: Connection closed for inactivity","date":"2016-03-05T04:40:18.080Z","type":"quit"}
{"nick":"phated","date":"2016-03-05T06:43:10.997Z","type":"join"}
{"nick":"phated","reason":"Ping timeout: 244 seconds","date":"2016-03-05T06:47:30.655Z","type":"quit"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2016-03-05T07:51:13.824Z","type":"quit"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2016-03-05T08:13:04.370Z","type":"quit"}
{"nick":"phated","date":"2016-03-05T08:31:29.147Z","type":"join"}
{"nick":"phated","reason":"Ping timeout: 248 seconds","date":"2016-03-05T08:35:47.871Z","type":"quit"}
{"nick":"peutetre","date":"2016-03-05T09:36:48.757Z","type":"join"}
{"nick":"peutetre_","date":"2016-03-05T09:38:24.712Z","type":"join"}
{"nick":"peutetre","reason":"Ping timeout: 276 seconds","date":"2016-03-05T09:41:42.672Z","type":"quit"}
{"nick":"peutetre_","reason":"Quit: ...","date":"2016-03-05T10:06:35.793Z","type":"quit"}
{"nick":"phated","date":"2016-03-05T10:19:41.437Z","type":"join"}
{"nick":"phated","reason":"Ping timeout: 268 seconds","date":"2016-03-05T10:24:22.173Z","type":"quit"}
{"nick":"vweevers","date":"2016-03-05T10:30:17.170Z","type":"join"}
{"nick":"phated","date":"2016-03-05T10:43:11.544Z","type":"join"}
{"nick":"phated","reason":"Ping timeout: 268 seconds","date":"2016-03-05T10:48:25.175Z","type":"quit"}
{"nick":"fotoverite","date":"2016-03-05T14:00:31.062Z","type":"join"}
{"nick":"emilbayes","message":"mafintosh: When inheriting from Duplexify and I want to access the readable stream from one of my prototypes, should I use `_readable` or `_readable2`? `.destroy` uses _readable, but events are attached to _readable2","date":"2016-03-05T16:34:52.102Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: I think this comes down to my (still) shaky knowledge of streams1, right?","date":"2016-03-05T16:35:16.667Z","type":"message"}
{"nick":"mafintosh","message":"emilbayes: you should track them yourself","date":"2016-03-05T16:36:43.116Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: Oh okay, so bad idea using this._writable in my methods?","date":"2016-03-05T16:37:38.559Z","type":"message"}
{"nick":"mafintosh","message":"emilbayes: yea no guarantees that wont change","date":"2016-03-05T16:38:05.951Z","type":"message"}
{"nick":"mafintosh","message":"emilbayes: unless you peg the version","date":"2016-03-05T16:38:26.050Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: Alright, lesson learned","date":"2016-03-05T16:38:34.292Z","type":"message"}
{"nick":"mafintosh","message":"emilbayes: this is why subclessing is almost always a bad idea","date":"2016-03-05T16:39:10.874Z","type":"message"}
{"nick":"mafintosh","message":"emilbayes: except in the one case hehe","date":"2016-03-05T16:39:28.051Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: Arr okay, was just gonna as if keeping an internal _dup would be better :P mafintosh: Is it a new thing that you have a finalize method on readable streams?","date":"2016-03-05T16:39:52.685Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: I mean, duplexify doesn't implement a finalize method, but multi-read-stream does (I know it's just a .push(null), but still)","date":"2016-03-05T16:40:36.535Z","type":"message"}
{"nick":"mafintosh","message":"emilbayes: i don't like doing .push(null) as a public api","date":"2016-03-05T17:02:15.631Z","type":"message"}
{"nick":"mafintosh","message":"emilbayes: that's all :)","date":"2016-03-05T17:02:28.262Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: Arr ok","date":"2016-03-05T17:17:52.203Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: Sorry to keep bugging you with my module, but I keep thinking I'm doing something stupid. I just realized that what I want to do is read/write to multiple duplex streams at once, as in, is this stupid? https://github.com/emilbayes/multi-duplex-stream/blob/338b52733bcbea3c880672916033d963fb57379b/index.js#L22-L25","date":"2016-03-05T18:15:54.477Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: Can I just pass of the duplex streams to those two modules? My test keep failing because the writable sides never emit end, and when inspecting multi-write-streams, the streams array is just suddenly empty","date":"2016-03-05T18:17:07.131Z","type":"message"}
{"nick":"pfraze","date":"2016-03-05T18:23:22.589Z","type":"join"}
{"nick":"vweevers","reason":"Ping timeout: 244 seconds","date":"2016-03-05T18:36:23.958Z","type":"quit"}
{"nick":"shama","date":"2016-03-05T19:29:10.363Z","type":"join"}
{"nick":"mafintosh","message":"emilbayes: writable streams don't emit end","date":"2016-03-05T19:29:50.702Z","type":"message"}
{"nick":"mafintosh","message":"emilbayes: only finish","date":"2016-03-05T19:29:54.102Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: Should have been more careful with my working. I meant finish. It's just the method is called ._end in multi-write-stream ^^","date":"2016-03-05T19:31:01.716Z","type":"message"}
{"nick":"mafintosh","message":"emilbayes: you mean .remove here? https://github.com/emilbayes/multi-duplex-stream/blob/338b52733bcbea3c880672916033d963fb57379b/index.js#L35","date":"2016-03-05T19:31:01.890Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: That's a brain fart, but I mean in the multi-write-stream. When I the read stream that I pipe ends, the ._end method of multi-write-stream is called, but this.streams.length is 0 :(","date":"2016-03-05T19:32:25.758Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: And I can't figure out why, thought it was because what I'm doing was stupid","date":"2016-03-05T19:32:46.237Z","type":"message"}
{"nick":"mafintosh","message":"emilbayes: i'm unsure what you mean. can you gist me a small example?","date":"2016-03-05T19:33:35.063Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: Well my failing test case is what I have for now: https://github.com/emilbayes/multi-duplex-stream/blob/inherit/test.js#L36","date":"2016-03-05T19:34:31.529Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: If that's too much to take in, I can try and condense it","date":"2016-03-05T19:34:45.770Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: Piping \"hello world\" to the duplex-multi-stream never calls the concat callback, but if I hook into the write calls on concat, I can see data being written. If I hook into the .end function on concat it's never called. So I went into multi-write-stream to see what was going on, and on the first line of `MultiWrite.prototype._end`","date":"2016-03-05T19:36:43.692Z","type":"message"}
{"nick":"emilbayes","message":"`this.streams.length` is 0 for some reason","date":"2016-03-05T19:36:43.866Z","type":"message"}
{"nick":"vweevers","date":"2016-03-05T19:45:35.277Z","type":"join"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2016-03-05T20:13:20.501Z","type":"quit"}
{"nick":"mikolalysenko","message":"this is good: https://www.youtube.com/watch?v=IRTfhkiAqPw","date":"2016-03-05T20:22:32.601Z","type":"message"}
{"nick":"mikolalysenko","message":"and the prequel is good too: https://www.youtube.com/watch?v=QM1iUe6IofM","date":"2016-03-05T21:04:28.807Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: Sorry for all the rambling. It was because I passed the exact same array to multi-read-stream and multi-write-stream, and they both mutated it","date":"2016-03-05T21:23:56.065Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: And sorry for assuming you'd be able to remember every little detail of a module you wrote months ago","date":"2016-03-05T21:26:51.048Z","type":"message"}
{"nick":"mafintosh","message":"emilbayes: lol no worries. it probably shouldnt mutate i guess","date":"2016-03-05T21:27:51.644Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: Well, idk. For now I just .slice each of them and keep track of the streams myself. If you'd take another look when I've done with test, then I'd be so happy ^^","date":"2016-03-05T21:28:40.734Z","type":"message"}
{"nick":"emilbayes","message":"mafintosh: (mostly because I'm sneaking the module in under your naming convention)","date":"2016-03-05T21:30:53.794Z","type":"message"}
{"nick":"shama","reason":"Remote host closed the connection","date":"2016-03-05T21:35:14.665Z","type":"quit"}
{"nick":"shama","date":"2016-03-05T21:35:41.670Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 244 seconds","date":"2016-03-05T21:40:48.175Z","type":"quit"}
{"nick":"fotoverite","date":"2016-03-05T21:48:44.371Z","type":"join"}
{"nick":"mafintosh","message":"emilbayes: sure","date":"2016-03-05T22:03:53.265Z","type":"message"}
{"nick":"pfraze","date":"2016-03-05T22:19:24.404Z","type":"join"}
{"nick":"perlbot","reason":"Ping timeout: 250 seconds","date":"2016-03-05T22:31:50.967Z","type":"quit"}
{"nick":"simcop2387","reason":"Ping timeout: 250 seconds","date":"2016-03-05T22:32:16.975Z","type":"quit"}
{"nick":"shama","reason":"Quit: (╯°□°）╯︵ɐɯɐɥs","date":"2016-03-05T22:33:52.859Z","type":"quit"}
{"nick":"creationix","reason":"Ping timeout: 244 seconds","date":"2016-03-05T22:34:02.734Z","type":"quit"}
{"nick":"cubertfarns","reason":"Ping timeout: 276 seconds","date":"2016-03-05T22:34:33.374Z","type":"quit"}
{"nick":"farnsworth","reason":"Ping timeout: 276 seconds","date":"2016-03-05T22:35:51.496Z","type":"quit"}
{"nick":"creationix","date":"2016-03-05T22:36:41.353Z","type":"join"}
{"nick":"simcop2387","date":"2016-03-05T22:38:12.212Z","type":"join"}
{"nick":"perlbot","date":"2016-03-05T22:38:43.924Z","type":"join"}
{"nick":"farnsworth","date":"2016-03-05T22:39:31.306Z","type":"join"}
{"nick":"cubertfarns","date":"2016-03-05T22:41:01.325Z","type":"join"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2016-03-05T23:09:22.754Z","type":"quit"}
{"nick":"domanic","date":"2016-03-05T23:39:48.219Z","type":"join"}
{"nick":"fotoverite_","date":"2016-03-05T23:40:30.965Z","type":"join"}
{"nick":"fotoverite","reason":"Ping timeout: 246 seconds","date":"2016-03-05T23:42:51.386Z","type":"quit"}
{"nick":"fotoverite_","new_nick":"fotoverite","date":"2016-03-05T23:42:51.822Z","type":"nick"}
{"nick":"shama","date":"2016-03-05T23:48:08.867Z","type":"join"}
