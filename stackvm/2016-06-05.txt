{"nick":"lachenmayer","reason":"Ping timeout: 260 seconds","date":"2016-06-05T03:38:30.667Z","type":"quit"}
{"nick":"McJesus","reason":"Ping timeout: 260 seconds","date":"2016-06-05T03:38:30.706Z","type":"quit"}
{"nick":"McJesus","date":"2016-06-05T03:43:39.550Z","type":"join"}
{"nick":"lachenmayer","date":"2016-06-05T03:43:51.870Z","type":"join"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2016-06-05T06:24:41.171Z","type":"quit"}
{"nick":"contrahax","date":"2016-06-05T08:14:21.113Z","type":"join"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2016-06-05T08:59:15.198Z","type":"quit"}
{"nick":"parshap_","date":"2016-06-05T10:50:29.378Z","type":"join"}
{"nick":"thealphanerd","reason":"Quit: farewell for now","date":"2016-06-05T10:51:39.874Z","type":"quit"}
{"nick":"foreigneye","date":"2016-06-05T10:51:58.196Z","type":"join"}
{"nick":"thealphanerd","date":"2016-06-05T10:52:10.389Z","type":"join"}
{"nick":"paul_irish","date":"2016-06-05T10:52:27.284Z","type":"join"}
{"nick":"yangwao_","date":"2016-06-05T10:52:35.497Z","type":"join"}
{"nick":"mikeal_","date":"2016-06-05T10:53:06.086Z","type":"join"}
{"nick":"tanepiper","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:33.899Z","type":"quit"}
{"nick":"gozala","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:33.959Z","type":"quit"}
{"nick":"TatumCreative","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:34.175Z","type":"quit"}
{"nick":"dubroy__________","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:34.870Z","type":"quit"}
{"nick":"parshap","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:34.889Z","type":"quit"}
{"nick":"jhiesey","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:34.889Z","type":"quit"}
{"nick":"mattronix","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:35.025Z","type":"quit"}
{"nick":"mikeal","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:35.593Z","type":"quit"}
{"nick":"ELLIOTTCABLE","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:35.595Z","type":"quit"}
{"nick":"eyeforeigneye","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:35.921Z","type":"quit"}
{"nick":"yangwao","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:36.293Z","type":"quit"}
{"nick":"lachenmayer","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:36.575Z","type":"quit"}
{"nick":"McJesus","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:36.577Z","type":"quit"}
{"nick":"rwaldron","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:36.684Z","type":"quit"}
{"nick":"mint_xian","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:37.510Z","type":"quit"}
{"nick":"jaz303","reason":"Ping timeout: 260 seconds","date":"2016-06-05T10:53:38.036Z","type":"quit"}
{"nick":"paul_irish_","reason":"Read error: Connection reset by peer","date":"2016-06-05T10:53:38.251Z","type":"quit"}
{"nick":"jaz303","date":"2016-06-05T10:53:38.402Z","type":"join"}
{"nick":"McJesis","date":"2016-06-05T10:53:41.825Z","type":"join"}
{"nick":"dubroy__________","date":"2016-06-05T10:53:42.185Z","type":"join"}
{"nick":"dubroy__________","reason":"Changing host","date":"2016-06-05T10:53:52.233Z","type":"quit"}
{"nick":"dubroy__________","date":"2016-06-05T10:53:52.234Z","type":"join"}
{"nick":"rwaldron","date":"2016-06-05T10:54:13.202Z","type":"join"}
{"nick":"mikeal_","new_nick":"mikeal","date":"2016-06-05T10:54:22.590Z","type":"nick"}
{"nick":"ELLIOTTCABLE_","date":"2016-06-05T10:54:29.920Z","type":"join"}
{"nick":"lachenmayer","date":"2016-06-05T10:55:20.718Z","type":"join"}
{"nick":"mint_xian","date":"2016-06-05T10:56:16.327Z","type":"join"}
{"nick":"parshap_","new_nick":"parshap","date":"2016-06-05T10:56:28.128Z","type":"nick"}
{"nick":"jaz303","reason":"Ping timeout: 260 seconds","date":"2016-06-05T11:00:01.625Z","type":"quit"}
{"nick":"jaz303","date":"2016-06-05T11:00:01.834Z","type":"join"}
{"nick":"fotoverite","date":"2016-06-05T11:00:28.817Z","type":"join"}
{"nick":"tanepiper","date":"2016-06-05T11:02:04.381Z","type":"join"}
{"nick":"mattronix","date":"2016-06-05T11:02:20.403Z","type":"join"}
{"nick":"jhiesey","date":"2016-06-05T11:03:34.179Z","type":"join"}
{"nick":"gozala","date":"2016-06-05T11:03:49.213Z","type":"join"}
{"nick":"TatumCreative","date":"2016-06-05T11:03:52.450Z","type":"join"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2016-06-05T12:39:36.030Z","type":"quit"}
{"nick":"draynium","date":"2016-06-05T14:05:13.648Z","type":"join"}
{"nick":"draynium","reason":"Ping timeout: 240 seconds","date":"2016-06-05T14:49:04.030Z","type":"quit"}
{"nick":"substack","message":"mafintosh: what do you think about aliasing flush-write-stream to be `to2` on npm (which is available)","date":"2016-06-05T14:49:15.024Z","type":"message"}
{"nick":"substack","message":"that way there is a nice symmetry with from2","date":"2016-06-05T14:49:26.192Z","type":"message"}
{"nick":"substack","action":"is going through stream libs and ogd's mississippi for a stream workshop to put together a good list","date":"2016-06-05T14:50:31.610Z","type":"action"}
{"nick":"draynium","date":"2016-06-05T14:51:46.229Z","type":"join"}
{"nick":"draynium","reason":"Quit: ZNC 1.7.x-nightly-20160225-9b31a077 - http://znc.in","date":"2016-06-05T15:11:54.100Z","type":"quit"}
{"nick":"draynium","date":"2016-06-05T15:12:30.478Z","type":"join"}
{"nick":"draynium","reason":"Quit: ZNC 1.7.x-nightly-20160225-9b31a077 - http://znc.in","date":"2016-06-05T15:19:43.403Z","type":"quit"}
{"nick":"mafintosh","message":"substack: i like that","date":"2016-06-05T15:33:03.126Z","type":"message"}
{"nick":"substack","message":"also \"to2\" is a funny name","date":"2016-06-05T15:54:30.978Z","type":"message"}
{"nick":"contrahax","date":"2016-06-05T16:07:44.117Z","type":"join"}
{"nick":"yoshuawuyts","message":"redis streams! - https://twitter.com/antirez/status/739396440552800256","date":"2016-06-05T16:15:56.195Z","type":"message"}
{"nick":"yoshuawuyts","message":"clients keep cursors on a log structure that Redis hosts, allowing for consumption at their own pace of data - apparently like Kafka but minus buying into the complexity it brings","date":"2016-06-05T16:21:40.396Z","type":"message"}
{"nick":"substack","message":"why not save a step, and turn every client into a server","date":"2016-06-05T16:27:12.952Z","type":"message"}
{"nick":"substack","message":"mafintosh: https://www.npmjs.com/package/to2","date":"2016-06-05T16:27:25.730Z","type":"message"}
{"nick":"yoshuawuyts","message":"substack: you mean that as in replicating the data in a swarm?","date":"2016-06-05T16:28:55.975Z","type":"message"}
{"nick":"substack","message":"if a node needs some data, it seems like the best architecture is for that node to connect to the producer of the data and to other nodes that are interested in that same data","date":"2016-06-05T16:30:21.898Z","type":"message"}
{"nick":"substack","message":"because then there is no bottleneck and the load can be spread out","date":"2016-06-05T16:30:46.222Z","type":"message"}
{"nick":"substack","message":"it also means you can be really bad at devops","date":"2016-06-05T16:31:05.125Z","type":"message"}
{"nick":"substack","message":"it also means your system will magically handle rolling network outages","date":"2016-06-05T16:32:00.421Z","type":"message"}
{"nick":"substack","message":"it also means you can use signing and crypto to handle security instead of api tokens or some other hack of a solution","date":"2016-06-05T16:33:51.463Z","type":"message"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2016-06-05T16:37:43.824Z","type":"quit"}
{"nick":"substack","message":"and I mean, if you are already building a distributed system, might as well go all the way!","date":"2016-06-05T16:39:10.871Z","type":"message"}
{"nick":"yoshuawuyts","message":"but for a mad amount of data, wouldn't the overhead of the message metadata seriously impact the network? - with a redis cluster living on every node, replication is handled by redis as the cluster, onto which other nodes can latch and consume at their own pace - dropping the data once they're done; with optimized datastructures for this in Redis","date":"2016-06-05T16:45:48.644Z","type":"message"}
{"nick":"yoshuawuyts","message":"I think I'm seeing what you're saying as an equally viable alternative - ghmmm","date":"2016-06-05T16:46:15.536Z","type":"message"}
{"nick":"yoshuawuyts","message":"like: a P2P cluster can definitely be optimized, so the message overhead might be higher initially than something like a Redis stream, but yeah wouldn't per se stay an issue","date":"2016-06-05T16:47:03.228Z","type":"message"}
{"nick":"substack","message":"I think it would be easier to start out with a naive p2p topology and tune it for particular load profiles","date":"2016-06-05T16:47:46.186Z","type":"message"}
{"nick":"yoshuawuyts","message":"yup yup","date":"2016-06-05T16:48:08.087Z","type":"message"}
{"nick":"substack","message":"but then, I don't live in enterprise land where they use these tools so I'm just speculating","date":"2016-06-05T16:48:16.294Z","type":"message"}
{"nick":"yoshuawuyts","message":"actually I'm intimately familiar with the use case that drove Redis streams as I've consulted on the project","date":"2016-06-05T16:48:58.568Z","type":"message"}
{"nick":"substack","message":"but I think the scale that you get in fully p2p systems like bittorrent completely dwarfs the size that any enterprise system could ever be","date":"2016-06-05T16:48:59.439Z","type":"message"}
{"nick":"yoshuawuyts","message":"think what you're saying would work actually","date":"2016-06-05T16:49:17.823Z","type":"message"}
{"nick":"substack","message":"maroon five is now playing in the distance, in front of the presidential palace","date":"2016-06-05T16:50:32.699Z","type":"message"}
{"nick":"substack","action":"in bucharest","date":"2016-06-05T16:50:42.117Z","type":"action"}
{"nick":"yoshuawuyts","message":"maroon 5 against humanity","date":"2016-06-05T16:51:20.789Z","type":"message"}
{"nick":"ins0mnia","date":"2016-06-05T17:51:57.749Z","type":"join"}
{"nick":"substack","message":"mafintosh: browser-sync-stream next needs to support live patching, hot-reload style","date":"2016-06-05T20:38:23.081Z","type":"message"}
{"nick":"substack","message":"not because I actually want or care about that, but just to one-up all that webpack noise :p","date":"2016-06-05T20:39:02.888Z","type":"message"}
{"nick":"substack","message":"I think this could be easily done with a patch() function that injects the module definitions from one browserify bundle into another","date":"2016-06-05T20:40:29.216Z","type":"message"}
{"nick":"substack","message":"you could even live-patch users in production","date":"2016-06-05T20:43:04.477Z","type":"message"}
{"nick":"substack","message":"because why not","date":"2016-06-05T20:43:10.348Z","type":"message"}
{"nick":"mafintosh","message":"substack: nice idea. would be great for demos","date":"2016-06-05T20:51:43.522Z","type":"message"}
