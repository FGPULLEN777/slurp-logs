{"nick":"pfraze","date":"2016-03-12T00:39:24.970Z","type":"join"}
{"nick":"fotoverite","date":"2016-03-12T00:45:22.808Z","type":"join"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2016-03-12T01:15:41.257Z","type":"quit"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2016-03-12T01:17:33.527Z","type":"quit"}
{"nick":"shama","reason":"Quit: (╯°□°）╯︵ɐɯɐɥs","date":"2016-03-12T01:54:22.022Z","type":"quit"}
{"nick":"ekristen","reason":"Quit: ekristen","date":"2016-03-12T02:07:51.961Z","type":"quit"}
{"nick":"phated","date":"2016-03-12T02:12:29.617Z","type":"join"}
{"nick":"phated","reason":"Ping timeout: 244 seconds","date":"2016-03-12T02:16:55.089Z","type":"quit"}
{"nick":"warbrett","reason":"Quit: Connection closed for inactivity","date":"2016-03-12T02:38:23.365Z","type":"quit"}
{"nick":"phated","date":"2016-03-12T04:00:32.958Z","type":"join"}
{"nick":"phated","reason":"Ping timeout: 244 seconds","date":"2016-03-12T04:04:55.751Z","type":"quit"}
{"nick":"phated","date":"2016-03-12T05:16:18.764Z","type":"join"}
{"nick":"phated","reason":"Ping timeout: 276 seconds","date":"2016-03-12T05:21:15.353Z","type":"quit"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2016-03-12T05:41:14.042Z","type":"quit"}
{"nick":"pfraze","date":"2016-03-12T05:51:44.795Z","type":"join"}
{"nick":"pfraze","reason":"Remote host closed the connection","date":"2016-03-12T06:09:20.968Z","type":"quit"}
{"nick":"yorick__","date":"2016-03-12T08:41:14.124Z","type":"join"}
{"nick":"yorick","reason":"Ping timeout: 240 seconds","date":"2016-03-12T08:44:01.744Z","type":"quit"}
{"nick":"yorick","date":"2016-03-12T08:51:34.013Z","type":"join"}
{"nick":"yorick__","reason":"Ping timeout: 248 seconds","date":"2016-03-12T08:53:18.098Z","type":"quit"}
{"nick":"vweevers","date":"2016-03-12T10:36:12.066Z","type":"join"}
{"nick":"fotoverite","date":"2016-03-12T10:52:58.566Z","type":"join"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2016-03-12T14:03:16.648Z","type":"quit"}
{"nick":"fotoverite","date":"2016-03-12T14:03:51.069Z","type":"join"}
{"nick":"trevnorris","reason":"Ping timeout: 252 seconds","date":"2016-03-12T15:28:52.258Z","type":"quit"}
{"nick":"substack!~substack@ec2-50-17-202-46.compute-1.amazonaws.com","topic":"Unofficial browserling/testling mad science channel. For official help /join #browserling","date":"2016-03-12T15:29:00.546Z","type":"topic"}
{"nick":"wage","reason":"Ping timeout: 252 seconds","date":"2016-03-12T15:29:29.171Z","type":"quit"}
{"nick":"gildean","reason":"Ping timeout: 252 seconds","date":"2016-03-12T15:30:05.392Z","type":"quit"}
{"nick":"hij1nx_","reason":"Ping timeout: 252 seconds","date":"2016-03-12T15:30:05.747Z","type":"quit"}
{"nick":"hij1nx","date":"2016-03-12T15:31:35.727Z","type":"join"}
{"nick":"gildean","date":"2016-03-12T15:31:57.141Z","type":"join"}
{"nick":"trevnorris","date":"2016-03-12T15:37:41.471Z","type":"join"}
{"nick":"pfraze","date":"2016-03-12T15:37:47.726Z","type":"join"}
{"nick":"wage","date":"2016-03-12T15:38:04.075Z","type":"join"}
{"nick":"owenb___________","date":"2016-03-12T16:11:12.401Z","type":"join"}
{"nick":"mmckegg_","date":"2016-03-12T16:12:03.259Z","type":"join"}
{"nick":"jbenet","reason":"Ping timeout: 246 seconds","date":"2016-03-12T16:12:18.650Z","type":"quit"}
{"nick":"owenb__________","reason":"Ping timeout: 246 seconds","date":"2016-03-12T16:12:18.827Z","type":"quit"}
{"nick":"calvinmetcalf","reason":"Ping timeout: 246 seconds","date":"2016-03-12T16:12:19.004Z","type":"quit"}
{"nick":"feross","reason":"Ping timeout: 246 seconds","date":"2016-03-12T16:12:19.359Z","type":"quit"}
{"nick":"isaacs","reason":"Ping timeout: 246 seconds","date":"2016-03-12T16:12:19.536Z","type":"quit"}
{"nick":"dvabr","reason":"Ping timeout: 246 seconds","date":"2016-03-12T16:12:19.891Z","type":"quit"}
{"nick":"hughsk","reason":"Ping timeout: 246 seconds","date":"2016-03-12T16:12:20.068Z","type":"quit"}
{"nick":"mmckegg","reason":"Ping timeout: 246 seconds","date":"2016-03-12T16:12:20.246Z","type":"quit"}
{"nick":"McJesis","reason":"Ping timeout: 246 seconds","date":"2016-03-12T16:12:21.124Z","type":"quit"}
{"nick":"mmckegg_","new_nick":"mmckegg","date":"2016-03-12T16:12:32.592Z","type":"nick"}
{"nick":"isaacs","date":"2016-03-12T16:12:38.539Z","type":"join"}
{"nick":"jbenet_","date":"2016-03-12T16:13:05.183Z","type":"join"}
{"nick":"dvabr","date":"2016-03-12T16:13:11.537Z","type":"join"}
{"nick":"jbenet_","new_nick":"jbenet","date":"2016-03-12T16:14:16.245Z","type":"nick"}
{"nick":"feross","date":"2016-03-12T16:15:16.835Z","type":"join"}
{"nick":"hughsk","date":"2016-03-12T16:15:32.773Z","type":"join"}
{"nick":"McJesus","date":"2016-03-12T16:15:57.107Z","type":"join"}
{"nick":"calvinmetcalf","date":"2016-03-12T16:17:14.316Z","type":"join"}
{"nick":"mikolalysenko","message":"dlmanning: just make a function","date":"2016-03-12T18:10:01.007Z","type":"message"}
{"nick":"mikolalysenko","message":"var myFancyTests = wrapTape(t)","date":"2016-03-12T18:10:31.842Z","type":"message"}
{"nick":"mikolalysenko","message":"myFancyTests.myCustomAssertion(...)","date":"2016-03-12T18:10:38.965Z","type":"message"}
{"nick":"dlmanning","message":"mikolalysenko : yeah, but I want to control what's passed to this._assert","date":"2016-03-12T18:11:14.760Z","type":"message"}
{"nick":"mikolalysenko","message":"you could also make a wrapper over tape","date":"2016-03-12T18:11:38.235Z","type":"message"}
{"nick":"dlmanning","message":"Yes, I've seen other people doing that","date":"2016-03-12T18:11:48.444Z","type":"message"}
{"nick":"dlmanning","message":"But it isn't immediately obvious to me why that's better","date":"2016-03-12T18:12:02.762Z","type":"message"}
{"nick":"dlmanning","message":"I suppose just because then I wouldn't be dependent on tape's implementation details","date":"2016-03-12T18:12:45.739Z","type":"message"}
{"nick":"dlmanning","message":"Basically I need more control over the output of \"what went wrong\" than basic assertions give me","date":"2016-03-12T18:17:36.820Z","type":"message"}
{"nick":"jfhbrook","message":"that sounds annoying","date":"2016-03-12T18:32:31.546Z","type":"message"}
{"nick":"jfhbrook","message":"it'd be cool if you could punch tape's TestAssertionThing prototype","date":"2016-03-12T18:33:00.920Z","type":"message"}
{"nick":"dlmanning","message":"If I could punch it?","date":"2016-03-12T18:38:01.632Z","type":"message"}
{"nick":"jfhbrook","message":"yeah","date":"2016-03-12T18:39:46.000Z","type":"message"}
{"nick":"dlmanning","message":"are we being silly? :)","date":"2016-03-12T18:40:12.836Z","type":"message"}
{"nick":"jfhbrook","message":"not quite","date":"2016-03-12T18:40:30.586Z","type":"message"}
{"nick":"jfhbrook","message":"I don't know much about tape so give me a second","date":"2016-03-12T18:40:37.194Z","type":"message"}
{"nick":"jfhbrook","message":"oh yes","date":"2016-03-12T18:40:43.974Z","type":"message"}
{"nick":"jfhbrook","message":"so tape.TestContext.prototype.myCustomAssert = function() { }; tape.test((t) => { // g2g?","date":"2016-03-12T18:41:21.179Z","type":"message"}
{"nick":"jfhbrook","message":"I don't know that tape has a constructor for t here","date":"2016-03-12T18:41:46.778Z","type":"message"}
{"nick":"jfhbrook","message":"https://github.com/substack/tape/blob/master/index.js#L97","date":"2016-03-12T18:43:55.931Z","type":"message"}
{"nick":"dlmanning","message":"Yeah, that's the constructor whose prototype I patched","date":"2016-03-12T18:44:33.990Z","type":"message"}
{"nick":"jfhbrook","message":"https://github.com/substack/tape/blob/master/lib/test.js#L275-L289","date":"2016-03-12T18:44:50.939Z","type":"message"}
{"nick":"jfhbrook","message":"yeah","date":"2016-03-12T18:44:53.217Z","type":"message"}
{"nick":"jfhbrook","message":"that seems like the best way to do it to me","date":"2016-03-12T18:44:58.158Z","type":"message"}
{"nick":"dlmanning","message":"Well, thanks for the vote of confidence :)","date":"2016-03-12T18:45:13.990Z","type":"message"}
{"nick":"jfhbrook","message":"heh","date":"2016-03-12T18:45:39.873Z","type":"message"}
{"nick":"jfhbrook","message":"sorry, all I saw was wrapTape()","date":"2016-03-12T18:45:57.844Z","type":"message"}
{"nick":"jfhbrook","message":"because of connect/disconnect spam","date":"2016-03-12T18:46:03.063Z","type":"message"}
{"nick":"jfhbrook","message":"forgive me!","date":"2016-03-12T18:46:04.966Z","type":"message"}
{"nick":"dlmanning","message":"Ah, no worries, my original question was yesterday","date":"2016-03-12T18:46:19.674Z","type":"message"}
{"nick":"jfhbrook","message":"I think the only real reason not to do that is the \"don't punch global(-ish) prototypes\" rule","date":"2016-03-12T18:46:52.203Z","type":"message"}
{"nick":"jfhbrook","message":"this variation being \"don't punch import properties\"","date":"2016-03-12T18:47:02.852Z","type":"message"}
{"nick":"jfhbrook","message":"but I think that rule applies less in testing","date":"2016-03-12T18:47:18.636Z","type":"message"}
{"nick":"dlmanning","message":"yeah, that's naturally a concern","date":"2016-03-12T18:47:18.874Z","type":"message"}
{"nick":"jfhbrook","message":"after all people use chai.should()","date":"2016-03-12T18:47:26.982Z","type":"message"}
{"nick":"dlmanning","message":"right, this is a pretty limited use case","date":"2016-03-12T18:47:31.460Z","type":"message"}
{"nick":"jfhbrook","message":"(5).should.be.a.number; // :v","date":"2016-03-12T18:47:41.654Z","type":"message"}
{"nick":"dlmanning","message":"It seems to me like it would not be a horrible thing for tape to have an api for creating custom assertions","date":"2016-03-12T18:48:13.529Z","type":"message"}
{"nick":"jfhbrook","message":"like some sugar around what you ended up doing?","date":"2016-03-12T18:48:32.994Z","type":"message"}
{"nick":"dlmanning","message":"An official sanctioned way of doing what I did, yeah","date":"2016-03-12T18:48:46.169Z","type":"message"}
{"nick":"jfhbrook","message":"I mean","date":"2016-03-12T18:48:52.856Z","type":"message"}
{"nick":"jfhbrook","message":"Test is exposed publicly","date":"2016-03-12T18:48:58.375Z","type":"message"}
{"nick":"jfhbrook","message":"that's all the blessing *I*'d want","date":"2016-03-12T18:49:04.138Z","type":"message"}
{"nick":"dlmanning","message":"Well, substack's response yesterday was wary","date":"2016-03-12T18:49:21.480Z","type":"message"}
{"nick":"dlmanning","message":"Like... you can probably get away with it, but you're suspect","date":"2016-03-12T18:49:35.954Z","type":"message"}
{"nick":"jfhbrook","message":"yeah, I mean, I think substack was thinking packaging for reuse","date":"2016-03-12T18:49:39.511Z","type":"message"}
{"nick":"dlmanning","message":"And I get that","date":"2016-03-12T18:49:42.631Z","type":"message"}
{"nick":"jfhbrook","message":"I'm not sure how wrapping would work, tape doesn't look written in a way such that you can make your own instance, *for* instance","date":"2016-03-12T18:50:04.114Z","type":"message"}
{"nick":"jfhbrook","message":"oh, you could do a decorator pattern","date":"2016-03-12T18:50:23.395Z","type":"message"}
{"nick":"dlmanning","message":"Here's what one person did: https://github.com/atabel/extend-tape","date":"2016-03-12T18:50:38.755Z","type":"message"}
{"nick":"jfhbrook","message":"tape.test(addCustomAsserts((t) => {}))","date":"2016-03-12T18:50:40.124Z","type":"message"}
{"nick":"jfhbrook","message":"oh, you *can* create your own tape instance, apparently?","date":"2016-03-12T18:51:27.776Z","type":"message"}
{"nick":"dlmanning","message":"yes","date":"2016-03-12T18:51:32.672Z","type":"message"}
{"nick":"jfhbrook","message":"oh, no, I see how it works","date":"2016-03-12T18:51:43.817Z","type":"message"}
{"nick":"jfhbrook","message":"that's not bad","date":"2016-03-12T18:51:53.725Z","type":"message"}
{"nick":"dlmanning","message":"You can create your own harness, but he's making his own thing and merging it with tape","date":"2016-03-12T18:52:07.840Z","type":"message"}
{"nick":"jfhbrook","message":"I don't like lambda args sans parens though","date":"2016-03-12T18:52:17.435Z","type":"message"}
{"nick":"dlmanning","message":"kids these days","date":"2016-03-12T18:52:28.547Z","type":"message"}
{"nick":"jfhbrook","message":"yeah, this looks like a variation of the test handler decorator","date":"2016-03-12T18:52:31.336Z","type":"message"}
{"nick":"jfhbrook","message":"I don't really like es6'd-the-fuck-out code","date":"2016-03-12T18:52:54.944Z","type":"message"}
{"nick":"substack","message":"function wrapTape (cb) { return function (t) { t.mywhateverthing = ...; cb(t) })","date":"2016-03-12T18:52:59.640Z","type":"message"}
{"nick":"dlmanning","message":"substack : yeah, again, doesn't give me control over what gets passed to this._assert","date":"2016-03-12T18:53:34.308Z","type":"message"}
{"nick":"jfhbrook","message":"what do you mean by that dlmanning ?","date":"2016-03-12T18:53:51.803Z","type":"message"}
{"nick":"jfhbrook","message":"you can't do that by punching the instance?","date":"2016-03-12T18:54:06.054Z","type":"message"}
{"nick":"dlmanning","message":"I mean I want to control what shows up in the actual / expected fields","date":"2016-03-12T18:54:09.607Z","type":"message"}
{"nick":"jfhbrook","message":"I mean, regardless of whether it's t or t's prototype you should still be able to write a function that calls this._assert right?","date":"2016-03-12T18:54:49.667Z","type":"message"}
{"nick":"dlmanning","message":"Oh, yeah nevermind. I'm being dumb","date":"2016-03-12T18:54:59.620Z","type":"message"}
{"nick":"dlmanning","message":"did read that carefully enough","date":"2016-03-12T18:56:04.182Z","type":"message"}
{"nick":"jfhbrook","message":"punching the prototype does mean you get https://github.com/atabel/extend-tape/blob/master/src/index.js#L12 for free","date":"2016-03-12T18:57:05.549Z","type":"message"}
{"nick":"jfhbrook","message":"which is kinda cool","date":"2016-03-12T18:57:08.566Z","type":"message"}
{"nick":"dlmanning","message":"yeah, either way I'm depending on private api","date":"2016-03-12T18:57:48.278Z","type":"message"}
{"nick":"dlmanning","message":"so adding to the instance or the prototype seems roughly equally bad","date":"2016-03-12T18:58:08.232Z","type":"message"}
{"nick":"dlmanning","message":"If I only add to the instance of course I don't pollute the exported tape global, but that isn't really a big deal for a test script","date":"2016-03-12T18:59:07.100Z","type":"message"}
{"nick":"dlmanning","message":"jfhbrook : I didn't immediately understood that by \"punching\" you meant \"adding methods onto\"","date":"2016-03-12T19:01:57.754Z","type":"message"}
{"nick":"dlmanning","message":"s/stood/stand","date":"2016-03-12T19:02:12.802Z","type":"message"}
{"nick":"jfhbrook","message":"oh yeah","date":"2016-03-12T19:03:36.323Z","type":"message"}
{"nick":"dlmanning","message":"I thought you were saying it would be cool if I could somehow express aggression toward tape's internals","date":"2016-03-12T19:04:55.178Z","type":"message"}
{"nick":"jfhbrook","message":"hahaha, no","date":"2016-03-12T19:17:20.274Z","type":"message"}
{"nick":"jfhbrook","message":"monkey punching is just a synonym for monkey patching","date":"2016-03-12T19:17:31.657Z","type":"message"}
{"nick":"Boobileah","date":"2016-03-12T19:20:06.703Z","type":"join"}
{"nick":"dlmanning","message":"ah","date":"2016-03-12T19:22:06.094Z","type":"message"}
{"nick":"peutetre","date":"2016-03-12T19:49:47.350Z","type":"join"}
{"nick":"peutetre","reason":"Quit: ...","date":"2016-03-12T20:36:17.924Z","type":"quit"}
{"nick":"domanic","date":"2016-03-12T21:33:08.856Z","type":"join"}
{"nick":"domanic","reason":"Read error: Connection reset by peer","date":"2016-03-12T21:35:29.688Z","type":"quit"}
{"nick":"domanic","date":"2016-03-12T22:12:57.189Z","type":"join"}
{"nick":"Boobileah","reason":"Quit: Connection closed for inactivity","date":"2016-03-12T22:14:32.328Z","type":"quit"}
{"nick":"phated","date":"2016-03-12T23:35:20.064Z","type":"join"}
