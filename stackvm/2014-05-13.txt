{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-05-13T00:00:00.680Z","type":"quit"}
{"nick":"ircretary","date":"2014-05-13T00:00:08.472Z","type":"join"}
{"nick":"contrahax","date":"2014-05-13T00:09:22.525Z","type":"join"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2014-05-13T00:17:26.766Z","type":"quit"}
{"nick":"toddself","date":"2014-05-13T00:23:49.296Z","type":"join"}
{"nick":"phated","date":"2014-05-13T00:25:42.341Z","type":"join"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-05-13T00:27:20.042Z","type":"quit"}
{"nick":"toddself","reason":"Ping timeout: 252 seconds","date":"2014-05-13T00:28:21.296Z","type":"quit"}
{"nick":"thlorenz","date":"2014-05-13T00:30:13.408Z","type":"join"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2014-05-13T00:34:05.096Z","type":"quit"}
{"nick":"contrahax","date":"2014-05-13T00:35:17.437Z","type":"join"}
{"nick":"ednapiranha","date":"2014-05-13T00:35:32.276Z","type":"join"}
{"nick":"thealphanerd","date":"2014-05-13T00:55:24.362Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 23]","date":"2014-05-13T00:58:47.215Z","type":"message"}
{"nick":"kriskowal","reason":"Quit: kriskowal","date":"2014-05-13T01:00:34.869Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-13T01:05:02.149Z","type":"quit"}
{"nick":"collypops","date":"2014-05-13T01:11:45.780Z","type":"join"}
{"nick":"toddself","date":"2014-05-13T01:19:17.345Z","type":"join"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2014-05-13T01:19:25.173Z","type":"quit"}
{"nick":"Raynos","message":"ogd: let me know what you think about mercury btw, havn't had a chance to do any docs other then examples & some docs in the direct dependencies","date":"2014-05-13T01:22:55.315Z","type":"message"}
{"nick":"toddself","reason":"Ping timeout: 265 seconds","date":"2014-05-13T01:25:42.332Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T01:29:06.597Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2014-05-13T01:34:18.973Z","type":"quit"}
{"nick":"rowbit","message":"substack, pkrumins: testling server iphone6, ipad6 (osx, browserling1 user) is down!","date":"2014-05-13T01:37:16.125Z","type":"message"}
{"nick":"rowbit","message":"substack, pkrumins: testling server safari6 (osx, browserling1 user) is down!","date":"2014-05-13T01:37:16.380Z","type":"message"}
{"nick":"rowbit","message":"substack, pkrumins: testling server android (osx, browserling1 user) is down!","date":"2014-05-13T01:37:16.491Z","type":"message"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2014-05-13T01:38:13.759Z","type":"quit"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-05-13T01:40:32.492Z","type":"quit"}
{"nick":"dguttman_","reason":"Quit: dguttman_","date":"2014-05-13T01:41:49.634Z","type":"quit"}
{"nick":"andrewdeandrade","reason":"Ping timeout: 264 seconds","date":"2014-05-13T01:56:41.366Z","type":"quit"}
{"nick":"thealphanerd","date":"2014-05-13T01:56:46.416Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 12]","date":"2014-05-13T01:58:47.118Z","type":"message"}
{"nick":"ednapiranha","reason":"Quit: Leaving...","date":"2014-05-13T01:59:24.517Z","type":"quit"}
{"nick":"pfraze","reason":"Ping timeout: 265 seconds","date":"2014-05-13T01:59:32.374Z","type":"quit"}
{"nick":"contrahax","new_nick":"_contrahax","date":"2014-05-13T02:06:48.044Z","type":"nick"}
{"nick":"phated","date":"2014-05-13T02:13:53.240Z","type":"join"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-05-13T02:25:00.735Z","type":"quit"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2014-05-13T02:25:06.045Z","type":"quit"}
{"nick":"toddself","date":"2014-05-13T02:27:06.360Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-05-13T02:30:31.121Z","type":"quit"}
{"nick":"thealphanerd","date":"2014-05-13T02:36:28.516Z","type":"join"}
{"nick":"toddself","reason":"Ping timeout: 264 seconds","date":"2014-05-13T02:38:41.311Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-13T02:38:45.189Z","type":"quit"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-05-13T02:44:43.335Z","type":"quit"}
{"nick":"toddself","date":"2014-05-13T02:46:40.195Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 18]","date":"2014-05-13T02:58:47.026Z","type":"message"}
{"nick":"calvinfo","date":"2014-05-13T03:03:34.717Z","type":"join"}
{"nick":"tilgovi","reason":"Quit: No Ping reply in 180 seconds.","date":"2014-05-13T03:09:05.346Z","type":"quit"}
{"nick":"tilgovi","date":"2014-05-13T03:10:53.683Z","type":"join"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-13T03:19:44.519Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T03:21:03.120Z","type":"join"}
{"nick":"shama","date":"2014-05-13T03:23:32.542Z","type":"quit"}
{"nick":"rxgx","reason":"Quit: Connection closed for inactivity","date":"2014-05-13T03:30:05.866Z","type":"quit"}
{"nick":"rxgx","date":"2014-05-13T03:40:17.962Z","type":"join"}
{"nick":"gozala","reason":"Quit: Connection closed for inactivity","date":"2014-05-13T03:42:32.660Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 28]","date":"2014-05-13T03:58:46.938Z","type":"message"}
{"nick":"maksimlin","reason":"Ping timeout: 240 seconds","date":"2014-05-13T04:04:19.169Z","type":"quit"}
{"nick":"calvinmetcalf","reason":"Quit: Connection closed for inactivity","date":"2014-05-13T04:08:14.659Z","type":"quit"}
{"nick":"phated","reason":"Remote host closed the connection","date":"2014-05-13T04:10:29.113Z","type":"quit"}
{"nick":"ednapiranha","date":"2014-05-13T04:12:33.672Z","type":"join"}
{"nick":"ednapiranha","reason":"Remote host closed the connection","date":"2014-05-13T04:12:36.156Z","type":"quit"}
{"nick":"maksimlin","date":"2014-05-13T04:25:24.294Z","type":"join"}
{"nick":"dguttman","date":"2014-05-13T04:25:33.825Z","type":"join"}
{"nick":"jxson","date":"2014-05-13T04:34:52.626Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2014-05-13T04:36:48.957Z","type":"quit"}
{"nick":"defunctzombie","new_nick":"defunctzombie_zz","date":"2014-05-13T04:37:10.548Z","type":"nick"}
{"nick":"thlorenz","date":"2014-05-13T04:38:36.136Z","type":"join"}
{"nick":"ELLIOTTCABLE","new_nick":"notELLIOTTCABLE","date":"2014-05-13T04:50:05.134Z","type":"nick"}
{"nick":"notELLIOTTCABLE","new_nick":"ELLIOTTCABLE","date":"2014-05-13T04:50:34.079Z","type":"nick"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-05-13T04:53:58.904Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 25]","date":"2014-05-13T04:58:46.875Z","type":"message"}
{"nick":"contrahax","date":"2014-05-13T05:24:55.374Z","type":"join"}
{"nick":"_contrahax","reason":"Ping timeout: 258 seconds","date":"2014-05-13T05:28:27.317Z","type":"quit"}
{"nick":"quijote","date":"2014-05-13T05:39:14.834Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-05-13T05:39:54.039Z","type":"quit"}
{"nick":"Maciek416","reason":"Remote host closed the connection","date":"2014-05-13T05:43:25.681Z","type":"quit"}
{"nick":"calvinfo","reason":"Quit: Leaving.","date":"2014-05-13T05:49:03.231Z","type":"quit"}
{"nick":"quijote_","date":"2014-05-13T05:53:51.493Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 240 seconds","date":"2014-05-13T05:54:34.681Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 28]","date":"2014-05-13T05:58:46.865Z","type":"message"}
{"nick":"kumavis","date":"2014-05-13T06:02:27.127Z","type":"join"}
{"nick":"djcoin","date":"2014-05-13T06:17:44.406Z","type":"join"}
{"nick":"jan____","reason":"Quit: Terminated with extreme prejudice - dircproxy 1.0.5","date":"2014-05-13T06:19:44.032Z","type":"quit"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2014-05-13T06:23:45.454Z","type":"quit"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2014-05-13T06:26:26.097Z","type":"quit"}
{"nick":"contrahax","date":"2014-05-13T06:33:49.184Z","type":"join"}
{"nick":"contrahax","new_nick":"_contrahax","date":"2014-05-13T06:33:49.184Z","type":"nick"}
{"nick":"_contrahax","new_nick":"contrahax","date":"2014-05-13T06:34:50.272Z","type":"nick"}
{"nick":"quijote_","reason":"Ping timeout: 265 seconds","date":"2014-05-13T06:37:27.337Z","type":"quit"}
{"nick":"maksimlin","reason":"Quit: ChatZilla 0.9.90.1 [Firefox 29.0/20140428193838]","date":"2014-05-13T06:44:36.660Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T06:49:34.264Z","type":"join"}
{"nick":"cianomaidin","date":"2014-05-13T06:49:45.608Z","type":"join"}
{"nick":"calvinfo1","date":"2014-05-13T06:50:25.301Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T06:50:25.684Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T06:51:25.365Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-13T06:51:25.602Z","type":"quit"}
{"nick":"cianomaidin","reason":"Client Quit","date":"2014-05-13T06:51:28.056Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-13T06:52:16.262Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T06:52:16.381Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T06:53:14.244Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-13T06:53:14.528Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-13T06:54:06.673Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T06:54:06.910Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T06:55:00.650Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-13T06:55:00.769Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-13T06:55:55.581Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T06:55:55.698Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T06:56:55.562Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-13T06:56:55.797Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-13T06:57:49.235Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-13T06:58:29.282Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-13T06:58:44.110Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 45]","date":"2014-05-13T06:58:47.215Z","type":"message"}
{"nick":"cianomaidin","date":"2014-05-13T06:59:07.243Z","type":"join"}
{"nick":"cianomaidin","reason":"Client Quit","date":"2014-05-13T06:59:19.321Z","type":"quit"}
{"nick":"calvinfo2","date":"2014-05-13T06:59:40.297Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T07:00:22.882Z","type":"quit"}
{"nick":"calvinfo2","reason":"Read error: Connection reset by peer","date":"2014-05-13T07:00:23.539Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T07:00:35.062Z","type":"join"}
{"nick":"calvinfo1","reason":"Ping timeout: 240 seconds","date":"2014-05-13T07:03:07.063Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-13T07:04:20.299Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T07:04:53.219Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T07:05:13.272Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-13T07:06:01.936Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-13T07:06:13.280Z","type":"join"}
{"nick":"calvinfo2","date":"2014-05-13T07:07:05.372Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-13T07:07:05.610Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-13T07:07:57.720Z","type":"join"}
{"nick":"calvinfo2","reason":"Read error: Connection reset by peer","date":"2014-05-13T07:07:57.840Z","type":"quit"}
{"nick":"calvinfo","reason":"Ping timeout: 258 seconds","date":"2014-05-13T07:09:39.249Z","type":"quit"}
{"nick":"py1hon","reason":"Ping timeout: 264 seconds","date":"2014-05-13T07:10:29.502Z","type":"quit"}
{"nick":"jjjohnny","reason":"Ping timeout: 264 seconds","date":"2014-05-13T07:10:29.618Z","type":"quit"}
{"nick":"py1hon","date":"2014-05-13T07:10:36.117Z","type":"join"}
{"nick":"jjjohnny","date":"2014-05-13T07:10:36.237Z","type":"join"}
{"nick":"nfroidure","reason":"Ping timeout: 276 seconds","date":"2014-05-13T07:13:34.296Z","type":"quit"}
{"nick":"feross__","date":"2014-05-13T07:14:20.314Z","type":"join"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2014-05-13T07:26:29.244Z","type":"quit"}
{"nick":"cianomaidin","date":"2014-05-13T07:26:46.296Z","type":"join"}
{"nick":"cianomaidin","reason":"Ping timeout: 252 seconds","date":"2014-05-13T07:31:07.296Z","type":"quit"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2014-05-13T07:31:37.291Z","type":"quit"}
{"nick":"contrahax","date":"2014-05-13T07:32:08.441Z","type":"join"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2014-05-13T07:33:16.380Z","type":"quit"}
{"nick":"cianomaidin","date":"2014-05-13T07:33:45.269Z","type":"join"}
{"nick":"feross__","reason":"Quit: feross__","date":"2014-05-13T07:40:56.931Z","type":"quit"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2014-05-13T07:43:09.725Z","type":"quit"}
{"nick":"cianomaidin","reason":"Quit: cianomaidin","date":"2014-05-13T07:51:08.984Z","type":"quit"}
{"nick":"feross__","date":"2014-05-13T07:51:29.347Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 29]","date":"2014-05-13T07:58:46.920Z","type":"message"}
{"nick":"kumavis","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2014-05-13T08:02:33.514Z","type":"quit"}
{"nick":"addisonj","reason":"Quit: Connection closed for inactivity","date":"2014-05-13T08:10:47.292Z","type":"quit"}
{"nick":"feross__","reason":"Quit: feross__","date":"2014-05-13T08:14:26.026Z","type":"quit"}
{"nick":"quijote","date":"2014-05-13T08:22:49.435Z","type":"join"}
{"nick":"calvinfo1","reason":"Quit: Leaving.","date":"2014-05-13T08:23:07.222Z","type":"quit"}
{"nick":"rxgx","reason":"Quit: Connection closed for inactivity","date":"2014-05-13T08:40:05.932Z","type":"quit"}
{"nick":"cpup_","date":"2014-05-13T08:41:53.047Z","type":"join"}
{"nick":"CoderPuppy","reason":"Ping timeout: 245 seconds","date":"2014-05-13T08:42:28.090Z","type":"quit"}
{"nick":"cianomaidin","date":"2014-05-13T08:48:17.683Z","type":"join"}
{"nick":"stagas","date":"2014-05-13T08:51:20.254Z","type":"join"}
{"nick":"domanic","date":"2014-05-13T08:56:06.681Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 19]","date":"2014-05-13T08:58:47.273Z","type":"message"}
{"nick":"quijote","date":"2014-05-13T09:02:04.775Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T09:23:40.643Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T09:24:23.100Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T09:24:35.621Z","type":"join"}
{"nick":"calvinfo1","date":"2014-05-13T09:25:28.229Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T09:25:28.469Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T09:26:24.078Z","type":"join"}
{"nick":"calvinfo2","date":"2014-05-13T09:27:21.613Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T09:27:21.860Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T09:28:14.116Z","type":"join"}
{"nick":"calvinfo2","reason":"Read error: Connection reset by peer","date":"2014-05-13T09:28:14.381Z","type":"quit"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T09:29:05.579Z","type":"quit"}
{"nick":"calvinfo2","date":"2014-05-13T09:29:11.224Z","type":"join"}
{"nick":"calvinfo1","reason":"Ping timeout: 276 seconds","date":"2014-05-13T09:30:43.177Z","type":"quit"}
{"nick":"calvinfo2","reason":"Ping timeout: 258 seconds","date":"2014-05-13T09:33:47.168Z","type":"quit"}
{"nick":"wolfeidau","date":"2014-05-13T09:55:23.544Z","type":"quit"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 17]","date":"2014-05-13T09:58:47.193Z","type":"message"}
{"nick":"wolfeidau","date":"2014-05-13T10:02:03.192Z","type":"join"}
{"nick":"calvinfo","date":"2014-05-13T10:04:28.389Z","type":"join"}
{"nick":"calvinfo1","date":"2014-05-13T10:05:23.234Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T10:05:23.470Z","type":"quit"}
{"nick":"calvinfo1","reason":"Ping timeout: 240 seconds","date":"2014-05-13T10:09:38.184Z","type":"quit"}
{"nick":"domanic","reason":"Ping timeout: 255 seconds","date":"2014-05-13T10:10:44.578Z","type":"quit"}
{"nick":"Jan____","date":"2014-05-13T10:17:22.753Z","type":"join"}
{"nick":"Jan____","reason":"Changing host","date":"2014-05-13T10:17:36.857Z","type":"quit"}
{"nick":"Jan____","date":"2014-05-13T10:17:36.971Z","type":"join"}
{"nick":"stagas","reason":"Remote host closed the connection","date":"2014-05-13T10:19:55.461Z","type":"quit"}
{"nick":"domanic","date":"2014-05-13T10:54:23.324Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 21]","date":"2014-05-13T10:58:47.292Z","type":"message"}
{"nick":"domanic","message":"ogd, hey - I'm thinking about writing another mux-demux that supports binary - It could maybe be a pr to multiplex, but it would be a breaking change","date":"2014-05-13T11:01:21.459Z","type":"message"}
{"nick":"substack","message":"domanic: that would be really great!","date":"2014-05-13T11:01:43.329Z","type":"message"}
{"nick":"substack","message":"either way","date":"2014-05-13T11:02:04.229Z","type":"message"}
{"nick":"substack","message":"multiplex also has some bugs that mux-demux doesn't have","date":"2014-05-13T11:02:16.928Z","type":"message"}
{"nick":"domanic","message":"I have been learning a lot about binary encoding lately.p","date":"2014-05-13T11:02:23.628Z","type":"message"}
{"nick":"domanic","message":"substack, like what?","date":"2014-05-13T11:02:27.928Z","type":"message"}
{"nick":"domanic","message":"It also looks like it doesn't handle backpressure.","date":"2014-05-13T11:02:45.921Z","type":"message"}
{"nick":"substack","message":"like I ran into an issue where streams wouldn't start","date":"2014-05-13T11:02:46.505Z","type":"message"}
{"nick":"substack","message":"and if you try to create a duplex stream symmetrically from both sides the stream event doesn't fire","date":"2014-05-13T11:03:01.584Z","type":"message"}
{"nick":"domanic","message":"Although, backpressure isn't ideal in mux-demux either","date":"2014-05-13T11:03:02.868Z","type":"message"}
{"nick":"substack","message":"mux-demux/multiplexer whishlist:","date":"2014-05-13T11:03:21.936Z","type":"message"}
{"nick":"domanic","message":"substack, hmm, yeah, sometimes you want that.","date":"2014-05-13T11:03:27.474Z","type":"message"}
{"nick":"substack","message":"* ability to pass in an opts.qos to control the priority of sending","date":"2014-05-13T11:03:45.053Z","type":"message"}
{"nick":"substack","message":"qos would be a function (name, buf) {} or some such","date":"2014-05-13T11:04:05.383Z","type":"message"}
{"nick":"substack","message":"or opts.priority is perhaps a better name","date":"2014-05-13T11:04:22.912Z","type":"message"}
{"nick":"domanic","message":"right. finegrained control of flows.","date":"2014-05-13T11:04:26.788Z","type":"message"}
{"nick":"substack","message":"* opts.encoding would be really good too","date":"2014-05-13T11:04:51.331Z","type":"message"}
{"nick":"substack","message":"or actually, that wouldn't be necessary if the protocol is straight binary","date":"2014-05-13T11:05:30.417Z","type":"message"}
{"nick":"domanic","message":"so you can write strings/objects in?","date":"2014-05-13T11:05:31.836Z","type":"message"}
{"nick":"contrahax","date":"2014-05-13T11:05:51.265Z","type":"join"}
{"nick":"calvinfo","date":"2014-05-13T11:06:06.624Z","type":"join"}
{"nick":"substack","message":"oh yeah actually that would be really handy","date":"2014-05-13T11:06:10.288Z","type":"message"}
{"nick":"domanic","message":"it would be nice to be able to fallback to JSON for when you have a thing that doesn't do binary well (like sock.js)","date":"2014-05-13T11:06:19.500Z","type":"message"}
{"nick":"substack","message":"it could be leveldb style","date":"2014-05-13T11:06:20.730Z","type":"message"}
{"nick":"calvinfo1","date":"2014-05-13T11:07:04.296Z","type":"join"}
{"nick":"calvinmetcalf","date":"2014-05-13T11:07:09.560Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T11:07:54.817Z","type":"quit"}
{"nick":"calvinfo2","date":"2014-05-13T11:07:58.250Z","type":"join"}
{"nick":"domanic","message":"okay I certainly want better flowcontrol, non binary is lower priority currently.","date":"2014-05-13T11:08:02.177Z","type":"message"}
{"nick":"domanic","message":"one way would be to do it the way that tcp does it.","date":"2014-05-13T11:08:42.431Z","type":"message"}
{"nick":"calvinfo2","reason":"Read error: Connection reset by peer","date":"2014-05-13T11:08:42.627Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T11:08:52.656Z","type":"join"}
{"nick":"domanic","message":"send a little, then wait for ack, then maybe speedup, but if you get a pause, slow down.","date":"2014-05-13T11:09:04.350Z","type":"message"}
{"nick":"domanic","message":"speedup linearly but slow down exponentially.","date":"2014-05-13T11:09:23.280Z","type":"message"}
{"nick":"substack","message":"for non-binary you can just base64 encode on each side with separate modules","date":"2014-05-13T11:10:15.694Z","type":"message"}
{"nick":"domanic","message":"the other option would be to make the qos pull based. you would send a request saying what rate you wanted it.","date":"2014-05-13T11:10:17.181Z","type":"message"}
{"nick":"substack","message":"or what about asking for a certain priority rank?","date":"2014-05-13T11:11:05.720Z","type":"message"}
{"nick":"domanic","message":"rank the priorities of each stream?","date":"2014-05-13T11:11:20.433Z","type":"message"}
{"nick":"substack","message":"yes","date":"2014-05-13T11:11:25.340Z","type":"message"}
{"nick":"calvinfo1","reason":"Ping timeout: 252 seconds","date":"2014-05-13T11:11:29.296Z","type":"quit"}
{"nick":"substack","message":"then you could do scheduling kernel style","date":"2014-05-13T11:11:36.740Z","type":"message"}
{"nick":"substack","message":"one problem is how equitable you want to be","date":"2014-05-13T11:11:49.532Z","type":"message"}
{"nick":"domanic","message":"the real question: how do you measure bestness of qos?","date":"2014-05-13T11:12:10.251Z","type":"message"}
{"nick":"substack","message":"it's probably a good idea to have both high and low marks for priority","date":"2014-05-13T11:12:17.879Z","type":"message"}
{"nick":"cianomaidin_","date":"2014-05-13T11:12:22.296Z","type":"join"}
{"nick":"domanic","message":"I'm very suspucious about having static rules.","date":"2014-05-13T11:12:34.049Z","type":"message"}
{"nick":"domanic","message":"then you need to do manual tuning","date":"2014-05-13T11:12:53.631Z","type":"message"}
{"nick":"substack","message":"good point","date":"2014-05-13T11:13:08.238Z","type":"message"}
{"nick":"domanic","message":"that is what is better about tcp, it's selfadjusting.","date":"2014-05-13T11:13:11.434Z","type":"message"}
{"nick":"cianomaidin","reason":"Ping timeout: 240 seconds","date":"2014-05-13T11:13:34.653Z","type":"quit"}
{"nick":"cianomaidin_","new_nick":"cianomaidin","date":"2014-05-13T11:13:34.769Z","type":"nick"}
{"nick":"calvinfo","reason":"Ping timeout: 252 seconds","date":"2014-05-13T11:13:35.609Z","type":"quit"}
{"nick":"substack","message":"ok so","date":"2014-05-13T11:14:00.850Z","type":"message"}
{"nick":"substack","message":"what if A is really spammy and B sends messages just once every 10 seconds","date":"2014-05-13T11:14:13.243Z","type":"message"}
{"nick":"substack","message":"if a bunch of As get backed up and B sends a message, B's should go through before the backed up As","date":"2014-05-13T11:14:39.932Z","type":"message"}
{"nick":"domanic","message":"what is a real world context for that?","date":"2014-05-13T11:15:26.773Z","type":"message"}
{"nick":"domanic","message":"I can see priorites working there, but it's highly dependent on application. I can imagine situations where B being occasional doesn't mean it's important.","date":"2014-05-13T11:16:12.084Z","type":"message"}
{"nick":"substack","message":"metrics where some machines are spewing a ton of data but others aren't emitting very much data at all","date":"2014-05-13T11:16:25.963Z","type":"message"}
{"nick":"substack","message":"but you don't want the noisy machines to monopolize the signal, destroying latency for everyone","date":"2014-05-13T11:16:43.983Z","type":"message"}
{"nick":"domanic","message":"maybe that would be better if priorites are set in another layer that is a wrapper around mux-demux","date":"2014-05-13T11:16:46.624Z","type":"message"}
{"nick":"domanic","message":"hmm, you need all the streams to have a chance to go.","date":"2014-05-13T11:17:24.169Z","type":"message"}
{"nick":"substack","message":"well you could just pass in an opts.priority function to pick the winning stream","date":"2014-05-13T11:17:35.863Z","type":"message"}
{"nick":"substack","message":"because programmers know more about their unique domains than mux-demux does","date":"2014-05-13T11:17:49.378Z","type":"message"}
{"nick":"substack","message":"priority-wise","date":"2014-05-13T11:17:52.947Z","type":"message"}
{"nick":"substack","message":"but a reasonable default would not have starvation","date":"2014-05-13T11:18:06.309Z","type":"message"}
{"nick":"domanic","message":"yeah. okay how would you write a test suit to detect starvation?","date":"2014-05-13T11:18:28.092Z","type":"message"}
{"nick":"domanic","message":"hey, I don't think this would be too hard actually.","date":"2014-05-13T11:19:43.033Z","type":"message"}
{"nick":"domanic","message":"you just have a write buffer per stream.","date":"2014-05-13T11:19:49.992Z","type":"message"}
{"nick":"domanic","message":"so Noisy writes lots into the buffer, Quite writes one thing, and then MX takes the next packet from one of the buffers randomly.","date":"2014-05-13T11:20:38.005Z","type":"message"}
{"nick":"domanic","message":"pretty good chance it will be from Q. but then that is drained, so the next one will come from N.","date":"2014-05-13T11:21:07.374Z","type":"message"}
{"nick":"substack","message":"might be better to round-robin","date":"2014-05-13T11:21:15.486Z","type":"message"}
{"nick":"domanic","message":"sure, similar","date":"2014-05-13T11:21:31.951Z","type":"message"}
{"nick":"domanic","message":"but it will allow each to their needs, according to their ability","date":"2014-05-13T11:22:01.100Z","type":"message"}
{"nick":"domanic","message":"the tricy part, is that you have both substream flows, and super stream flow.","date":"2014-05-13T11:22:40.114Z","type":"message"}
{"nick":"domanic","message":"the tcp connection may pause, then you pause all incoming streams","date":"2014-05-13T11:22:58.392Z","type":"message"}
{"nick":"domanic","message":"but the consumer of a single substream may pause - so you want to send a nak to the other substream that will make that consumer slow down.","date":"2014-05-13T11:23:36.972Z","type":"message"}
{"nick":"substack","message":"doesn't a pull model simplify this a ton?","date":"2014-05-13T11:24:04.493Z","type":"message"}
{"nick":"substack","message":"so you don't need to explicitly pause, you just pull and your buffer gets scheduled for delivery","date":"2014-05-13T11:24:35.204Z","type":"message"}
{"nick":"substack","message":"or you don't pull with read() and nothing gets scheduled","date":"2014-05-13T11:24:48.530Z","type":"message"}
{"nick":"domanic","message":"yeah - I don't think this really works in streams2 though","date":"2014-05-13T11:25:09.114Z","type":"message"}
{"nick":"substack","message":"also check out this article, the part about streams http://jongleberry.com/why-you-should-and-shouldnt-use-koa.html","date":"2014-05-13T11:25:13.280Z","type":"message"}
{"nick":"substack","message":"\"Don't ever use .pipe() unless you know what you're doing. It's broken. Let Koa handle streams for you.\"","date":"2014-05-13T11:25:22.572Z","type":"message"}
{"nick":"Altreus","message":"does this mean my t-shirt is deprecated","date":"2014-05-13T11:25:32.428Z","type":"message"}
{"nick":"Altreus","message":"I'm wearing it right now","date":"2014-05-13T11:25:36.302Z","type":"message"}
{"nick":"Altreus","message":":/","date":"2014-05-13T11:25:38.332Z","type":"message"}
{"nick":"substack","message":"Altreus: it just means that koa knows best!","date":"2014-05-13T11:25:47.422Z","type":"message"}
{"nick":"Altreus","message":"I'm promulgating bad behaviour!","date":"2014-05-13T11:26:04.985Z","type":"message"}
{"nick":"Altreus","message":"Think of all the people who will see it","date":"2014-05-13T11:26:10.809Z","type":"message"}
{"nick":"brianloveswords","date":"2014-05-13T11:26:30.450Z","type":"join"}
{"nick":"domanic","message":"yeah if node streams propagated errors, etc then that wouldn't be such a problem.","date":"2014-05-13T11:27:13.038Z","type":"message"}
{"nick":"substack","message":"agreed","date":"2014-05-13T11:27:22.529Z","type":"message"}
{"nick":"domanic","message":"there is more to node.js life than rest apps","date":"2014-05-13T11:27:30.271Z","type":"message"}
{"nick":"domanic","message":"indeed, that is why I mostly use pull-streams now, except I expose normal streams at the edges.","date":"2014-05-13T11:27:54.747Z","type":"message"}
{"nick":"domanic","message":"because node streams are more familiar, but pull-streams are easier to reason about.","date":"2014-05-13T11:28:16.674Z","type":"message"}
{"nick":"domanic","message":"you have simplifyed error/end state transitions, and error is propagated.","date":"2014-05-13T11:28:44.941Z","type":"message"}
{"nick":"substack","message":"I wonder if there isn't a way to bolt on error propagation in a way where you can get that behavior even if the modules you are consuming don't do that","date":"2014-05-13T11:29:20.929Z","type":"message"}
{"nick":"domanic","message":"BOTH WAYS. if a sink (=\"writable\") errors, it tells the source to abort.","date":"2014-05-13T11:29:26.308Z","type":"message"}
{"nick":"substack","message":"bash uses pipefail for this mode","date":"2014-05-13T11:30:03.280Z","type":"message"}
{"nick":"domanic","message":"maybe if you used a pipeline(stream1....streamN) instead of pipe","date":"2014-05-13T11:30:10.132Z","type":"message"}
{"nick":"domanic","message":"but there are also cases where an intermediate stream is able to handle an error","date":"2014-05-13T11:30:52.565Z","type":"message"}
{"nick":"domanic","message":"so I think bolting on a new behavior is too hard, but wrapping streams into another stream api is feasible.","date":"2014-05-13T11:31:24.203Z","type":"message"}
{"nick":"substack","message":"or something like var f = onerror(function (err) {}); f(a).pipe(f(b)).pipe(f(c)) but that can get verbose","date":"2014-05-13T11:31:36.158Z","type":"message"}
{"nick":"domanic","message":"well, node streams evolved organically for a while, then had a massive yet backwards compatible rewrite","date":"2014-05-13T11:33:24.261Z","type":"message"}
{"nick":"domanic","message":"so they are really complex now","date":"2014-05-13T11:33:28.899Z","type":"message"}
{"nick":"domanic","message":"if the outside interface is simpler","date":"2014-05-13T11:33:38.218Z","type":"message"}
{"nick":"domanic","message":"s/if/even if/","date":"2014-05-13T11:33:52.533Z","type":"message"}
{"nick":"domanic","message":"but they are pretty okay for most simple things, but when you have streams of streams of streams etc","date":"2014-05-13T11:35:13.351Z","type":"message"}
{"nick":"domanic","message":"not so easy","date":"2014-05-13T11:35:21.890Z","type":"message"}
{"nick":"ogd","message":"domanic: cool! im okay with breaking multiplex","date":"2014-05-13T11:39:04.776Z","type":"message"}
{"nick":"domanic","message":"ogd, how does backpressure work in multiplex?","date":"2014-05-13T11:39:45.255Z","type":"message"}
{"nick":"ogd","message":"individual channels don't get their own backpressure","date":"2014-05-13T11:41:11.831Z","type":"message"}
{"nick":"ogd","message":"i havent had to tackle a use case yet where i needed multiplexed backpressure","date":"2014-05-13T11:41:55.102Z","type":"message"}
{"nick":"ogd","message":"not really sure what the tradeoffs would be...","date":"2014-05-13T11:42:03.432Z","type":"message"}
{"nick":"domanic","message":"substack, actually I think if I change how the output end of duplex works, I can improve some backpressure stuff in both scuttlebutt and mux-demux","date":"2014-05-13T11:42:10.023Z","type":"message"}
{"nick":"domanic","message":"ogd, okay. yeah, still figuring this stuff out here too.","date":"2014-05-13T11:43:37.283Z","type":"message"}
{"nick":"domanic","message":"ogd, substack the other thing that I want is efficient nesting of multiplexed streams.","date":"2014-05-13T11:44:08.524Z","type":"message"}
{"nick":"ogd","message":"domanic: me and mafintosh are doing lots of protocol buffers stuff right now","date":"2014-05-13T11:44:37.839Z","type":"message"}
{"nick":"ogd","message":"domanic: there are some interesting properties for nested data there","date":"2014-05-13T11:44:45.242Z","type":"message"}
{"nick":"domanic","message":"well, each thing is length delemited, right?","date":"2014-05-13T11:45:03.086Z","type":"message"}
{"nick":"mafintosh","message":"everything except fixed integers","date":"2014-05-13T11:45:32.096Z","type":"message"}
{"nick":"domanic","message":"so it's nests fine... you just want a small overhead. so framing should be very low bytes.","date":"2014-05-13T11:45:34.600Z","type":"message"}
{"nick":"domanic","message":"yeah.","date":"2014-05-13T11:45:36.033Z","type":"message"}
{"nick":"domanic","message":"naturally the message field will be length delimited, and that is where the nested stream will end up.","date":"2014-05-13T11:46:15.245Z","type":"message"}
{"nick":"substack","message":"ogd: if you haven't seen it there's http://kentonv.github.io/capnproto/ too","date":"2014-05-13T11:46:42.444Z","type":"message"}
{"nick":"substack","message":"it's by the author of protocol buffers after he left google","date":"2014-05-13T11:48:15.371Z","type":"message"}
{"nick":"contrahax","reason":"Ping timeout: 276 seconds","date":"2014-05-13T11:49:10.193Z","type":"quit"}
{"nick":"domanic","message":"oh that is really interesting.","date":"2014-05-13T11:49:43.621Z","type":"message"}
{"nick":"mafintosh","message":"any good node modules for capnproto?","date":"2014-05-13T11:51:36.265Z","type":"message"}
{"nick":"domanic","message":"mafintosh, if you see a job that needs doing, it's your job.","date":"2014-05-13T11:52:37.064Z","type":"message"}
{"nick":"mafintosh","message":"domanic: hah yeah - maybe i should publish one at some point","date":"2014-05-13T11:55:28.414Z","type":"message"}
{"nick":"domanic","message":"mafintosh, an idea I've been considering is like the reverse of capnproto","date":"2014-05-13T11:56:14.246Z","type":"message"}
{"nick":"domanic","message":"that would efficiently binary encode streams of json","date":"2014-05-13T11:56:31.551Z","type":"message"}
{"nick":"insertcoffee","date":"2014-05-13T11:56:55.267Z","type":"join"}
{"nick":"domanic","message":"you'd traverse the object leaf first, and then keys and values would be pointers back to where that value was written in the stream.","date":"2014-05-13T11:57:06.545Z","type":"message"}
{"nick":"domanic","message":"so if you had thousands of keys that where all \"name\" or \"version\" they would just be pointers back to where those where defined.","date":"2014-05-13T11:57:59.717Z","type":"message"}
{"nick":"domanic","message":"basically, compression optimized for json.","date":"2014-05-13T11:58:16.557Z","type":"message"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 8]","date":"2014-05-13T11:58:47.396Z","type":"message"}
{"nick":"mafintosh","message":"whoa - i was hacking on something similar this morning","date":"2014-05-13T11:58:56.822Z","type":"message"}
{"nick":"domanic","message":"ha!","date":"2014-05-13T12:00:18.574Z","type":"message"}
{"nick":"mafintosh","message":"i guess you would still duplicte the types in the stream right - for each value","date":"2014-05-13T12:00:19.102Z","type":"message"}
{"nick":"domanic","message":"hu?","date":"2014-05-13T12:00:48.921Z","type":"message"}
{"nick":"domanic","message":"I'm not sure what you mean there","date":"2014-05-13T12:01:00.792Z","type":"message"}
{"nick":"mafintosh","message":"i mean we do not store the type of the value with the key","date":"2014-05-13T12:01:19.247Z","type":"message"}
{"nick":"mafintosh","message":"like if you write {\"foo\":1} and then {\"foo\":\"bar\"}","date":"2014-05-13T12:02:00.659Z","type":"message"}
{"nick":"mafintosh","message":"when we write the value \"bar\" we also write that it should be a string","date":"2014-05-13T12:02:33.377Z","type":"message"}
{"nick":"domanic","message":"oh I think you'd store the types with the values","date":"2014-05-13T12:02:52.653Z","type":"message"}
{"nick":"domanic","message":"so {foo:\"bar\"}","date":"2014-05-13T12:03:02.395Z","type":"message"}
{"nick":"domanic","message":"would become \"foo\",\"bar\",{-2:-1}","date":"2014-05-13T12:03:18.822Z","type":"message"}
{"nick":"cianomaidin","reason":"Ping timeout: 252 seconds","date":"2014-05-13T12:03:33.297Z","type":"quit"}
{"nick":"mafintosh","message":"arh yeah","date":"2014-05-13T12:03:49.002Z","type":"message"}
{"nick":"domanic","message":"maybe inline numbers, or inline the first occurance, so that unique things don't need a pointer.","date":"2014-05-13T12:04:16.648Z","type":"message"}
{"nick":"domanic","message":"that would make it easy to have a pointer to an object, too.","date":"2014-05-13T12:05:27.242Z","type":"message"}
{"nick":"domanic","message":"mafintosh, oh yeah - I wrote this this morning: https://github.com/dominictarr/signed-varint","date":"2014-05-13T12:05:53.364Z","type":"message"}
{"nick":"mafintosh","message":"yeah i saw","date":"2014-05-13T12:06:11.495Z","type":"message"}
{"nick":"mafintosh","message":"have you looked at zigzag encoding?","date":"2014-05-13T12:06:20.106Z","type":"message"}
{"nick":"domanic","message":"that is what it uses","date":"2014-05-13T12:06:51.115Z","type":"message"}
{"nick":"mafintosh","message":"arh haha","date":"2014-05-13T12:07:05.732Z","type":"message"}
{"nick":"mafintosh","message":"should have read the code","date":"2014-05-13T12:07:14.925Z","type":"message"}
{"nick":"calvinfo","date":"2014-05-13T12:09:36.257Z","type":"join"}
{"nick":"calvinfo1","date":"2014-05-13T12:10:33.681Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T12:10:33.918Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T12:11:26.296Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-13T12:11:26.583Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-13T12:12:25.000Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T12:12:25.236Z","type":"quit"}
{"nick":"domanic","message":"hey, we are pretty close to being able to implement snappy is JS now https://en.wikipedia.org/wiki/Snappy_(software)","date":"2014-05-13T12:15:24.533Z","type":"message"}
{"nick":"domanic","message":"it's just varint, plus some offsets.","date":"2014-05-13T12:15:37.891Z","type":"message"}
{"nick":"calvinfo1","reason":"Ping timeout: 240 seconds","date":"2014-05-13T12:16:42.961Z","type":"quit"}
{"nick":"contrahax","date":"2014-05-13T12:39:28.766Z","type":"join"}
{"nick":"AvianFlu","date":"2014-05-13T12:41:04.795Z","type":"join"}
{"nick":"contrahax","reason":"Ping timeout: 240 seconds","date":"2014-05-13T12:51:14.689Z","type":"quit"}
{"nick":"contrahax","date":"2014-05-13T12:52:25.426Z","type":"join"}
{"nick":"naneau","date":"2014-05-13T12:56:10.744Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [developer: 0, free: 3]","date":"2014-05-13T12:58:47.276Z","type":"message"}
{"nick":"contrahax","reason":"Ping timeout: 258 seconds","date":"2014-05-13T12:59:38.192Z","type":"quit"}
{"nick":"contrahax","date":"2014-05-13T13:00:45.150Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2014-05-13T13:06:47.405Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T13:13:09.680Z","type":"join"}
{"nick":"calvinfo1","date":"2014-05-13T13:14:03.989Z","type":"join"}
{"nick":"calvinfo","reason":"Ping timeout: 240 seconds","date":"2014-05-13T13:17:14.691Z","type":"quit"}
{"nick":"yorick","date":"2014-05-13T13:17:43.392Z","type":"join"}
{"nick":"calvinfo1","reason":"Ping timeout: 240 seconds","date":"2014-05-13T13:18:18.978Z","type":"quit"}
{"nick":"contrahax","reason":"Ping timeout: 245 seconds","date":"2014-05-13T13:25:23.058Z","type":"quit"}
{"nick":"thlorenz","date":"2014-05-13T13:37:18.413Z","type":"join"}
{"nick":"rowbit","message":"substack, pkrumins: Encoders down: 50.57.72.216 (free8)","date":"2014-05-13T13:46:51.483Z","type":"message"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-05-13T13:56:00.009Z","type":"quit"}
{"nick":"fotoverite","date":"2014-05-13T14:00:21.329Z","type":"join"}
{"nick":"AvianFlu","date":"2014-05-13T14:01:13.306Z","type":"join"}
{"nick":"brianloveswords","date":"2014-05-13T14:09:23.760Z","type":"join"}
{"nick":"calvinfo","date":"2014-05-13T14:14:47.617Z","type":"join"}
{"nick":"calvinfo1","date":"2014-05-13T14:15:43.713Z","type":"join"}
{"nick":"calvinfo2","date":"2014-05-13T14:16:39.302Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-13T14:16:39.630Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-13T14:17:34.609Z","type":"join"}
{"nick":"calvinfo2","reason":"Read error: Connection reset by peer","date":"2014-05-13T14:17:34.844Z","type":"quit"}
{"nick":"calvinfo2","date":"2014-05-13T14:18:28.298Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-13T14:18:28.534Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-13T14:19:22.634Z","type":"join"}
{"nick":"calvinfo2","reason":"Read error: Connection reset by peer","date":"2014-05-13T14:19:22.873Z","type":"quit"}
{"nick":"calvinfo","reason":"Ping timeout: 252 seconds","date":"2014-05-13T14:19:29.658Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T14:20:21.318Z","type":"join"}
{"nick":"calvinfo2","date":"2014-05-13T14:21:13.653Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-13T14:21:31.679Z","type":"quit"}
{"nick":"calvinfo2","reason":"Read error: Connection reset by peer","date":"2014-05-13T14:22:06.613Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-13T14:22:08.202Z","type":"join"}
{"nick":"calvinfo2","date":"2014-05-13T14:23:08.232Z","type":"join"}
{"nick":"calvinfo1","reason":"Read error: Connection reset by peer","date":"2014-05-13T14:23:08.470Z","type":"quit"}
{"nick":"calvinfo2","reason":"Read error: Connection reset by peer","date":"2014-05-13T14:23:50.518Z","type":"quit"}
{"nick":"calvinfo1","date":"2014-05-13T14:24:00.038Z","type":"join"}
{"nick":"calvinfo","reason":"Ping timeout: 258 seconds","date":"2014-05-13T14:24:44.201Z","type":"quit"}
{"nick":"calvinfo1","reason":"Ping timeout: 245 seconds","date":"2014-05-13T14:28:18.066Z","type":"quit"}
{"nick":"insertcoffee","reason":"Ping timeout: 276 seconds","date":"2014-05-13T14:29:43.142Z","type":"quit"}
{"nick":"pfraze","date":"2014-05-13T14:32:16.528Z","type":"join"}
{"nick":"AvianFlu","reason":"Remote host closed the connection","date":"2014-05-13T14:37:11.230Z","type":"quit"}
{"nick":"AvianPhone","date":"2014-05-13T14:41:03.249Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 78]","date":"2014-05-13T14:41:32.094Z","type":"message"}
{"nick":"dguttman","date":"2014-05-13T14:42:28.847Z","type":"join"}
{"nick":"defunctzombie_zz","new_nick":"defunctzombie","date":"2014-05-13T14:45:05.541Z","type":"nick"}
{"nick":"AvianPhone","reason":"Ping timeout: 258 seconds","date":"2014-05-13T14:52:43.258Z","type":"quit"}
{"nick":"naneau","reason":"Quit: Quit.","date":"2014-05-13T14:54:03.281Z","type":"quit"}
{"nick":"ednapiranha","date":"2014-05-13T14:54:49.317Z","type":"join"}
{"nick":"addisonj","date":"2014-05-13T15:01:06.993Z","type":"join"}
{"nick":"thealphanerd","date":"2014-05-13T15:06:08.199Z","type":"join"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-05-13T15:23:54.298Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T15:24:46.635Z","type":"join"}
{"nick":"calvinfo1","date":"2014-05-13T15:25:42.633Z","type":"join"}
{"nick":"calvinfo","reason":"Read error: Connection reset by peer","date":"2014-05-13T15:25:42.745Z","type":"quit"}
{"nick":"Maciek416","date":"2014-05-13T15:26:19.717Z","type":"join"}
{"nick":"calvinfo1","reason":"Ping timeout: 255 seconds","date":"2014-05-13T15:30:14.504Z","type":"quit"}
{"nick":"calvinfo","date":"2014-05-13T15:30:29.249Z","type":"join"}
{"nick":"AvianPhone","date":"2014-05-13T15:31:32.205Z","type":"join"}
{"nick":"rowbit","message":"Hourly usage stats: [free: 62]","date":"2014-05-13T15:41:31.827Z","type":"message"}
{"nick":"tmcw","date":"2014-05-13T15:42:37.713Z","type":"join"}
{"nick":"contrahax","date":"2014-05-13T15:46:20.730Z","type":"join"}
{"nick":"AvianPhone","reason":"Quit: Bye","date":"2014-05-13T15:46:30.606Z","type":"quit"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2014-05-13T15:46:31.020Z","type":"quit"}
{"nick":"AvianFlu","date":"2014-05-13T15:46:50.010Z","type":"join"}
{"nick":"kenperkins_","reason":"Remote host closed the connection","date":"2014-05-13T15:48:33.791Z","type":"quit"}
{"nick":"kenperkins","date":"2014-05-13T15:49:21.679Z","type":"join"}
