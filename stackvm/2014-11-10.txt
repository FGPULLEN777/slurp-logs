{"nick":"ircretary","reason":"Remote host closed the connection","date":"2014-11-10T00:00:00.542Z","type":"quit"}
{"nick":"ircretary","date":"2014-11-10T00:00:11.333Z","type":"join"}
{"nick":"ryan_stevens","date":"2014-11-10T00:04:40.606Z","type":"join"}
{"nick":"ryan_stevens","reason":"Client Quit","date":"2014-11-10T00:05:04.844Z","type":"quit"}
{"nick":"stagas","reason":"Ping timeout: 244 seconds","date":"2014-11-10T00:21:05.564Z","type":"quit"}
{"nick":"anvaka","date":"2014-11-10T00:26:41.336Z","type":"join"}
{"nick":"rockbot__","date":"2014-11-10T00:40:02.710Z","type":"join"}
{"nick":"pili","reason":"Ping timeout: 245 seconds","date":"2014-11-10T00:40:14.669Z","type":"quit"}
{"nick":"rockbot__","reason":"Ping timeout: 250 seconds","date":"2014-11-10T00:44:17.337Z","type":"quit"}
{"nick":"feross","message":"cat streaming! http://instant.io/#61883b8e1fef9272d9e24e0a2a06955dafa5ba0e","date":"2014-11-10T01:11:19.131Z","type":"message"}
{"nick":"ryan_stevens","date":"2014-11-10T01:13:45.606Z","type":"join"}
{"nick":"ryan_stevens","reason":"Quit: ryan_stevens","date":"2014-11-10T01:21:24.564Z","type":"quit"}
{"nick":"AaronvanW","reason":"Ping timeout: 265 seconds","date":"2014-11-10T01:25:08.588Z","type":"quit"}
{"nick":"pfraze","message":"feross, neat, seems to be working","date":"2014-11-10T01:27:00.598Z","type":"message"}
{"nick":"pfraze","message":"feross, media play doesnt work in FF ubuntu, `MediaSource is not a constructor`","date":"2014-11-10T01:28:40.398Z","type":"message"}
{"nick":"feross","message":"pfraze: yeah, firefox hasn't enabled it by default yet","date":"2014-11-10T01:29:01.263Z","type":"message"}
{"nick":"feross","message":"you can enable it in about:config and searching for \"mediasource\"","date":"2014-11-10T01:29:10.441Z","type":"message"}
{"nick":"feross","message":"or use the nightly build","date":"2014-11-10T01:29:15.221Z","type":"message"}
{"nick":"ednapiranha","date":"2014-11-10T01:33:42.854Z","type":"join"}
{"nick":"ednapiranha","date":"2014-11-10T01:51:54.114Z","type":"quit"}
{"nick":"contrahax","new_nick":"_contrahax","date":"2014-11-10T01:54:20.056Z","type":"nick"}
{"nick":"domanic_","message":"feross, it works for me","date":"2014-11-10T01:58:08.637Z","type":"message"}
{"nick":"feross","message":"domanic_: woo hoo!","date":"2014-11-10T01:58:26.866Z","type":"message"}
{"nick":"_contrahax","reason":"Quit: Sleeping","date":"2014-11-10T01:58:39.284Z","type":"quit"}
{"nick":"domanic_","message":"feross, how big is this video?","date":"2014-11-10T01:59:34.401Z","type":"message"}
{"nick":"feross","message":"domanic_: i actually don't know because i'm not the original seeder, but i'll find out","date":"2014-11-10T02:00:19.567Z","type":"message"}
{"nick":"domanic_","reason":"Ping timeout: 265 seconds","date":"2014-11-10T02:12:05.087Z","type":"quit"}
{"nick":"pili","date":"2014-11-10T02:13:20.876Z","type":"join"}
{"nick":"cpup","date":"2014-11-10T02:13:24.820Z","type":"join"}
{"nick":"rockbot__","date":"2014-11-10T02:28:48.358Z","type":"join"}
{"nick":"rockbot__","reason":"Ping timeout: 265 seconds","date":"2014-11-10T02:33:17.545Z","type":"quit"}
{"nick":"pili","reason":"Read error: Connection reset by peer","date":"2014-11-10T02:33:48.200Z","type":"quit"}
{"nick":"ryan_stevens","date":"2014-11-10T02:39:02.336Z","type":"join"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2014-11-10T02:47:28.409Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Quit: ryan_stevens","date":"2014-11-10T02:57:37.163Z","type":"quit"}
{"nick":"contrahax","date":"2014-11-10T03:21:40.361Z","type":"join"}
{"nick":"Mso150","date":"2014-11-10T03:23:01.060Z","type":"join"}
{"nick":"warbrett","date":"2014-11-10T03:26:44.721Z","type":"join"}
{"nick":"rockbot__","date":"2014-11-10T03:29:42.118Z","type":"join"}
{"nick":"rockbot__","reason":"Ping timeout: 255 seconds","date":"2014-11-10T03:34:19.481Z","type":"quit"}
{"nick":"tanepiper__","reason":"Ping timeout: 260 seconds","date":"2014-11-10T03:39:05.127Z","type":"quit"}
{"nick":"tanepiper__","date":"2014-11-10T03:41:43.542Z","type":"join"}
{"nick":"Mso150","reason":"Ping timeout: 250 seconds","date":"2014-11-10T03:49:45.335Z","type":"quit"}
{"nick":"h0ke","date":"2014-11-10T04:14:33.616Z","type":"join"}
{"nick":"pelletier","reason":"Quit: ZNC - http://znc.in","date":"2014-11-10T04:17:29.106Z","type":"quit"}
{"nick":"prettyrobots","reason":"Quit: ZNC - http://znc.in","date":"2014-11-10T04:17:29.296Z","type":"quit"}
{"nick":"brianloveswords","date":"2014-11-10T04:20:18.765Z","type":"join"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-11-10T04:30:50.141Z","type":"quit"}
{"nick":"brianloveswords","date":"2014-11-10T04:35:28.454Z","type":"join"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-11-10T04:47:51.754Z","type":"quit"}
{"nick":"warbrett","reason":"Remote host closed the connection","date":"2014-11-10T04:50:22.962Z","type":"quit"}
{"nick":"rockbot__","date":"2014-11-10T05:18:17.382Z","type":"join"}
{"nick":"rockbot__","reason":"Ping timeout: 272 seconds","date":"2014-11-10T05:23:13.823Z","type":"quit"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-11-10T05:25:51.700Z","type":"quit"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2014-11-10T05:42:08.868Z","type":"quit"}
{"nick":"contrahax","date":"2014-11-10T05:43:54.872Z","type":"join"}
{"nick":"h0ke","date":"2014-11-10T05:51:38.089Z","type":"quit"}
{"nick":"contrahax","new_nick":"_contrahax","date":"2014-11-10T06:23:44.080Z","type":"nick"}
{"nick":"_contrahax","new_nick":"contrahax","date":"2014-11-10T06:33:58.320Z","type":"nick"}
{"nick":"contrahax","new_nick":"_contrahax","date":"2014-11-10T06:43:19.613Z","type":"nick"}
{"nick":"ryan_stevens","date":"2014-11-10T06:45:36.952Z","type":"join"}
{"nick":"rockbot__","date":"2014-11-10T07:06:59.682Z","type":"join"}
{"nick":"rockbot__","reason":"Ping timeout: 260 seconds","date":"2014-11-10T07:11:25.017Z","type":"quit"}
{"nick":"peutetre","date":"2014-11-10T07:27:34.589Z","type":"join"}
{"nick":"substack","message":"web crypto APIs are all promise-based >_<","date":"2014-11-10T07:43:09.382Z","type":"message"}
{"nick":"stagas","date":"2014-11-10T08:01:07.311Z","type":"join"}
{"nick":"fotoverite","date":"2014-11-10T08:01:41.434Z","type":"join"}
{"nick":"cpup","reason":"Read error: Connection reset by peer","date":"2014-11-10T08:13:17.808Z","type":"quit"}
{"nick":"cpup","date":"2014-11-10T08:14:32.108Z","type":"join"}
{"nick":"djcoin","date":"2014-11-10T08:23:05.580Z","type":"join"}
{"nick":"substack","message":"perfect module: https://www.npmjs.org/package/unpromise","date":"2014-11-10T08:27:31.631Z","type":"message"}
{"nick":"joepie91_","message":"substack: curious, what's the rationale for not using promises?","date":"2014-11-10T08:28:54.028Z","type":"message"}
{"nick":"substack","message":"I don't like them.","date":"2014-11-10T08:29:31.785Z","type":"message"}
{"nick":"substack","message":"I don't like how I've got to .then() and .catch() all over the place","date":"2014-11-10T08:30:11.132Z","type":"message"}
{"nick":"substack","message":"function (err, ...) {} is much more compact","date":"2014-11-10T08:30:26.549Z","type":"message"}
{"nick":"joepie91_","message":"okay...? you're still going to have the same error handling code, and instead of .then you have nested callbacks as arguuments - I don't see the practical difference other than a slightly diffferent code layout?","date":"2014-11-10T08:30:55.271Z","type":"message"}
{"nick":"substack","message":"you still have nested callbacks with promises I don't get your argument","date":"2014-11-10T08:31:19.957Z","type":"message"}
{"nick":"joepie91_","message":"I can't really think of a situation where your code becomes *less* compact by using promises when you're doing the same thing","date":"2014-11-10T08:31:27.293Z","type":"message"}
{"nick":"substack","message":".then(function (result) {})","date":"2014-11-10T08:31:28.888Z","type":"message"}
{"nick":"substack","message":"that's still a callback","date":"2014-11-10T08:31:32.033Z","type":"message"}
{"nick":"substack","message":"so what's the point","date":"2014-11-10T08:31:34.419Z","type":"message"}
{"nick":"joepie91_","message":"nested as in visually nested","date":"2014-11-10T08:31:37.944Z","type":"message"}
{"nick":"substack","message":"just use named functions appropriately","date":"2014-11-10T08:31:53.944Z","type":"message"}
{"nick":"substack","message":"or streams or events or whatever","date":"2014-11-10T08:31:57.964Z","type":"message"}
{"nick":"substack","message":"var op = someFunc(); op.then(function (result) {}); op.catch(function (err) {})","date":"2014-11-10T08:32:36.688Z","type":"message"}
{"nick":"substack","message":"versus","date":"2014-11-10T08:32:37.621Z","type":"message"}
{"nick":"substack","message":"someFunc(function (err, result) {})","date":"2014-11-10T08:32:45.647Z","type":"message"}
{"nick":"joepie91_","message":"there's a good amount of situations (in particular in webdev, I've found) where none of those make sense and/or make for easily understandable code","date":"2014-11-10T08:32:47.767Z","type":"message"}
{"nick":"substack","message":"callbacks win","date":"2014-11-10T08:32:49.744Z","type":"message"}
{"nick":"joepie91_","message":"uh..","date":"2014-11-10T08:32:57.896Z","type":"message"}
{"nick":"joepie91_","message":"that's not really an accurate comparison","date":"2014-11-10T08:33:03.877Z","type":"message"}
{"nick":"gorhgorh","reason":"Read error: Connection reset by peer","date":"2014-11-10T08:33:42.267Z","type":"quit"}
{"nick":"joepie91_","message":"someFunc().catch(function(err) {}).then(function(err) {}), with the observation that for many calls you won't even have a per-call catch statement","date":"2014-11-10T08:33:52.898Z","type":"message"}
{"nick":"substack","message":"eww that's worse","date":"2014-11-10T08:33:57.729Z","type":"message"}
{"nick":"joepie91_","message":"and on the callback side","date":"2014-11-10T08:33:59.414Z","type":"message"}
{"nick":"gorhgorh","date":"2014-11-10T08:34:06.361Z","type":"join"}
{"nick":"joepie91_","message":"someFunc(function (err, result) { if (err) { /* error handling */ } /* regular code */ })","date":"2014-11-10T08:34:33.218Z","type":"message"}
{"nick":"joepie91_","message":"so I don't really see how that's any better","date":"2014-11-10T08:34:36.922Z","type":"message"}
{"nick":"substack","message":"if (err) return cb(err)","date":"2014-11-10T08:35:41.118Z","type":"message"}
{"nick":"Mso150","date":"2014-11-10T08:35:41.908Z","type":"join"}
{"nick":"substack","message":"so it early returns and I can keep writing code","date":"2014-11-10T08:35:50.769Z","type":"message"}
{"nick":"joepie91_","message":"I mean, if you're going to leave out the error handling code in the callback version, I'm sure the callback version is going to look cleaner than the promise version, but that's hardly a fair comparison","date":"2014-11-10T08:35:52.740Z","type":"message"}
{"nick":"joepie91_","message":"eh?","date":"2014-11-10T08:35:56.996Z","type":"message"}
{"nick":"substack","message":"I really don't see the point of them. Just more annoying bullshit I've got to transform into something nice.","date":"2014-11-10T08:37:56.030Z","type":"message"}
{"nick":"joepie91_","message":"I still don't understand what exactly you're suggesting for the error handling","date":"2014-11-10T08:39:51.132Z","type":"message"}
{"nick":"joepie91_","message":"and/or how it's better than .catch statements (or absence thereof and letting them fall through)","date":"2014-11-10T08:40:07.107Z","type":"message"}
{"nick":"substack","message":"if (err) return cb(err)","date":"2014-11-10T08:40:26.145Z","type":"message"}
{"nick":"joepie91_","message":"okay? that seems meaningless to me without context...","date":"2014-11-10T08:40:43.774Z","type":"message"}
{"nick":"joepie91_","message":"where is cb defined?","date":"2014-11-10T08:40:51.544Z","type":"message"}
{"nick":"substack","message":"in the module interface where I'm calling async operations","date":"2014-11-10T08:43:05.877Z","type":"message"}
{"nick":"substack","message":"module.exports = function (opts, cb) { someFunc(opts.whatever, function (err, value) { if (err) cb(err); /* ... */ }) }","date":"2014-11-10T08:43:32.616Z","type":"message"}
{"nick":"gorhgorh","reason":"Ping timeout: 250 seconds","date":"2014-11-10T08:43:38.275Z","type":"quit"}
{"nick":"substack","message":"and pretty much nothing else that I want to use uses promises, so I get 0 benefit from returning a promise","date":"2014-11-10T08:44:38.037Z","type":"message"}
{"nick":"substack","message":"all of the code that I would want to use already uses callbacks","date":"2014-11-10T08:45:08.997Z","type":"message"}
{"nick":"Mso150","reason":"Remote host closed the connection","date":"2014-11-10T08:45:24.239Z","type":"quit"}
{"nick":"ryan_stevens","reason":"Quit: ryan_stevens","date":"2014-11-10T08:47:19.313Z","type":"quit"}
{"nick":"gorhgorh","date":"2014-11-10T08:47:49.090Z","type":"join"}
{"nick":"joepie91_","message":"substack: that's a very narrow usecase - if you have a number of chained async calls (that would be represented as a chain of .then's with promises, and as a number of nested callbacks otherwise), that need specific error-handling for one of the calls but should let all of the other errors fall through, it's still completely unclear to me how you would do this cleanly with callbacks, without endlessly duplicating error handling code and/or","date":"2014-11-10T08:50:03.061Z","type":"message"}
{"nick":"joepie91_","message":"causing spaghetti","date":"2014-11-10T08:50:04.532Z","type":"message"}
{"nick":"Mso150","date":"2014-11-10T08:50:29.753Z","type":"join"}
{"nick":"joepie91_","message":"and when you start messing around with concurrent async calls (eg. a number of DB queries running simultaneously and doing something else when all of them have completed), I have no clue how you would even do that with callbacks without constantly duplicating code for counting how many of the calls have finished and so on","date":"2014-11-10T08:50:53.314Z","type":"message"}
{"nick":"joepie91_","message":"you'd just be replicating the functionality of a promises library, inline, at that point","date":"2014-11-10T08:51:05.000Z","type":"message"}
{"nick":"rockbot__","date":"2014-11-10T08:55:43.452Z","type":"join"}
{"nick":"rockbot__","reason":"Ping timeout: 240 seconds","date":"2014-11-10T08:59:53.015Z","type":"quit"}
{"nick":"substack","message":"I have not had that problem at all.","date":"2014-11-10T09:02:41.141Z","type":"message"}
{"nick":"substack","message":"using ordinary callbacks exclusively all over the place","date":"2014-11-10T09:02:58.681Z","type":"message"}
{"nick":"joepie91_","message":"substack: okay, how would you rewrite this hypothetical example code using just callbacks? http://sprunge.us/XKRf?js","date":"2014-11-10T09:09:56.413Z","type":"message"}
{"nick":"substack","message":"I don't use apis that look like that","date":"2014-11-10T09:10:53.002Z","type":"message"}
{"nick":"substack","message":"fetchRelation should return a stream","date":"2014-11-10T09:11:09.539Z","type":"message"}
{"nick":"joepie91_","message":"substack: this is a hypothetical example.","date":"2014-11-10T09:11:32.057Z","type":"message"}
{"nick":"substack","message":"answer: use streams","date":"2014-11-10T09:11:54.819Z","type":"message"}
{"nick":"joepie91_","message":"each .fetchRelation and .fetchAll is a promise (or, in your case, method that takes a callback) that returns an array of models","date":"2014-11-10T09:11:57.787Z","type":"message"}
{"nick":"substack","message":"that would potentially buffer up a lot of memory","date":"2014-11-10T09:12:26.858Z","type":"message"}
{"nick":"joepie91_","message":"feel free to give me an example code snippet, since I have no clue how you envision streams working in this example, especially if the goal is to eg. render them on a page","date":"2014-11-10T09:12:28.045Z","type":"message"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2014-11-10T09:12:50.365Z","type":"quit"}
{"nick":"joepie91_","message":"I'm open to learning about better ways to write code, but so far I've not really seen any clear explanation as to how to avoid spaghetti without promises","date":"2014-11-10T09:13:06.639Z","type":"message"}
{"nick":"substack","message":"it would depend on how specifically you want to render them onto the page","date":"2014-11-10T09:13:19.053Z","type":"message"}
{"nick":"joepie91_","message":"assume a jade template, for example","date":"2014-11-10T09:13:34.850Z","type":"message"}
{"nick":"substack","message":"anyways with hyperstream you could just do","date":"2014-11-10T09:13:49.570Z","type":"message"}
{"nick":"substack","message":"hyperstream({ '.posts': user.fetchRelation('posts').pipe(render.posts()), '.threads': user.fetchRelation('threads').pipe(render.threads()), '.friends': user.fetchRelation('friends').pipe(render.friends()) }).pipe(res)","date":"2014-11-10T09:15:46.125Z","type":"message"}
{"nick":"substack","message":"and you just have a `render` object that contains functions that return object streams and write html output","date":"2014-11-10T09:16:32.842Z","type":"message"}
{"nick":"joepie91_","message":"this... does not some simpler to me","date":"2014-11-10T09:16:44.809Z","type":"message"}
{"nick":"joepie91_","message":"seem *","date":"2014-11-10T09:16:59.904Z","type":"message"}
{"nick":"substack","message":"it works with backpressure and doesn't require buffering all the results into memory","date":"2014-11-10T09:17:26.977Z","type":"message"}
{"nick":"substack","message":"that is the *entire* example nearly except for defining the rendering functions themselves","date":"2014-11-10T09:17:58.400Z","type":"message"}
{"nick":"joepie91_","message":"okay? I'm not really looking for either of those two features, I'm looking to concurrently retrieve a number of things, handle errors for some things individually, let errors for other things fall through to a catch-all, and conveniently use them in any widely available library for templating (eg. jade) and so on","date":"2014-11-10T09:18:36.904Z","type":"message"}
{"nick":"substack","message":"plus you can start shipping html to the endpoint as soon as you have data, you don't need to wait for all the async ops to finish before starting to send data","date":"2014-11-10T09:18:54.978Z","type":"message"}
{"nick":"joepie91_","message":"and that just looks overly complex to me, plus it's completely unclear to me where the error handling comes in","date":"2014-11-10T09:18:55.560Z","type":"message"}
{"nick":"joepie91_","message":"nor do I see a query for the user itself","date":"2014-11-10T09:18:58.727Z","type":"message"}
{"nick":"substack","message":"what do you mean \"for the user\"","date":"2014-11-10T09:19:31.404Z","type":"message"}
{"nick":"joepie91_","message":"so you say that is the \"entire example\" but it's missing the rendering functions as you mentioned (why are these functions?), and it is not functionally equivalent to what I gave as source","date":"2014-11-10T09:19:42.716Z","type":"message"}
{"nick":"joepie91_","message":"if you look at the sprunge I linked","date":"2014-11-10T09:19:49.651Z","type":"message"}
{"nick":"joepie91_","message":"the first thing it does is fetch a user","date":"2014-11-10T09:19:59.089Z","type":"message"}
{"nick":"substack","message":"I think we are coming at these problems from completely different directions","date":"2014-11-10T09:20:05.906Z","type":"message"}
{"nick":"joepie91_","message":"(rereading that, it should've been fetchOne, not fetchAll)","date":"2014-11-10T09:20:08.204Z","type":"message"}
{"nick":"substack","message":"and where I'm coming from promises are not useful at all","date":"2014-11-10T09:20:18.325Z","type":"message"}
{"nick":"substack","message":"and mostly just get in the way","date":"2014-11-10T09:20:21.458Z","type":"message"}
{"nick":"joepie91_","message":"then if it can't find the user it handles the error, and if it *can* find the user it continues on to retrieve relations and wait until completion then passes them somewhere else, eg. jade","date":"2014-11-10T09:20:35.105Z","type":"message"}
{"nick":"substack","message":"*what* does it fetch from a user","date":"2014-11-10T09:20:38.313Z","type":"message"}
{"nick":"joepie91_","message":"the model in the DB?","date":"2014-11-10T09:20:44.181Z","type":"message"}
{"nick":"joepie91_","message":"this is standard hypothetical-ORM code","date":"2014-11-10T09:20:53.020Z","type":"message"}
{"nick":"substack","message":"databases don't store models, they store data","date":"2014-11-10T09:20:58.363Z","type":"message"}
{"nick":"joepie91_","message":"ok...?","date":"2014-11-10T09:21:03.785Z","type":"message"}
{"nick":"substack","message":"so what data?","date":"2014-11-10T09:21:07.448Z","type":"message"}
{"nick":"substack","message":"that's the important part: streams of data","date":"2014-11-10T09:21:15.679Z","type":"message"}
{"nick":"joepie91_","message":"... do you understand what an ORM does?","date":"2014-11-10T09:21:20.885Z","type":"message"}
{"nick":"joepie91_","message":":|","date":"2014-11-10T09:21:23.129Z","type":"message"}
{"nick":"substack","message":"I don't like ORMs","date":"2014-11-10T09:23:15.058Z","type":"message"}
{"nick":"substack","message":"I would rather deal with data directly","date":"2014-11-10T09:23:39.099Z","type":"message"}
{"nick":"joepie91_","message":"substack: okay, but that's not the point of my question","date":"2014-11-10T09:25:18.339Z","type":"message"}
{"nick":"joepie91_","message":"assuming that you are using an ORM with the API as described in my sprunge (but assume that it'll take a callback as last arg, instead of returning a promise)","date":"2014-11-10T09:25:34.565Z","type":"message"}
{"nick":"joepie91_","message":"how would you rewrite that without using promises","date":"2014-11-10T09:25:44.009Z","type":"message"}
{"nick":"joepie91_","message":"you say streams, but you haven't given me a full example of how to do that, your example only looked at one very specific part","date":"2014-11-10T09:25:58.745Z","type":"message"}
{"nick":"joepie91_","message":"you;ve said callbacks before, but I don't see how that would work with *concurrent* queries","date":"2014-11-10T09:26:15.053Z","type":"message"}
{"nick":"substack","message":"I wouldn't have that problem in the first place.","date":"2014-11-10T09:26:18.728Z","type":"message"}
{"nick":"joepie91_","message":"without becoming a massive unmaintainable mess","date":"2014-11-10T09:26:23.065Z","type":"message"}
{"nick":"substack","message":"or occasionally, I just use a pending counter","date":"2014-11-10T09:26:45.049Z","type":"message"}
{"nick":"substack","message":"it's pretty easy for that to not turn in to a mess","date":"2014-11-10T09:26:57.126Z","type":"message"}
{"nick":"joepie91_","message":"right, that would be the \"implementing promises logic inline\" thing I was referiing to","date":"2014-11-10T09:26:58.517Z","type":"message"}
{"nick":"joepie91_","message":"because that's basically what Promise.all does","date":"2014-11-10T09:27:07.746Z","type":"message"}
{"nick":"substack","message":"promises do a lot of other things","date":"2014-11-10T09:27:16.365Z","type":"message"}
{"nick":"joepie91_","message":"and reimplementing the same boilerplate over and over again is exactly what I'm trying to avoid","date":"2014-11-10T09:27:22.350Z","type":"message"}
{"nick":"substack","message":"why not just use a module that does only that part?","date":"2014-11-10T09:27:23.107Z","type":"message"}
{"nick":"joepie91_","message":"eh, not really","date":"2014-11-10T09:27:25.952Z","type":"message"}
{"nick":"substack","message":"sure they do","date":"2014-11-10T09:27:33.542Z","type":"message"}
{"nick":"joepie91_","message":"they do a few things, but definitely not \"a lot\"","date":"2014-11-10T09:27:34.298Z","type":"message"}
{"nick":"joepie91_","message":"and seeing as they function like a core language construct, doing a few things instead of one is perfectly okay","date":"2014-11-10T09:28:02.094Z","type":"message"}
{"nick":"ahdinosaur","message":"enough to cause undesired bugs that are really painful to debug","date":"2014-11-10T09:28:03.056Z","type":"message"}
{"nick":"substack","message":"if you're super worried about duplicating code, why not use a library like waterfall or whatever?","date":"2014-11-10T09:28:04.668Z","type":"message"}
{"nick":"substack","message":"but I don't even bother with that, the code is easy enough to write correctly","date":"2014-11-10T09:28:40.569Z","type":"message"}
{"nick":"joepie91_","message":"substack: how do you put an errorr handler inbetween a series of calls rather than at the end?","date":"2014-11-10T09:28:51.266Z","type":"message"}
{"nick":"joepie91_","message":"in waterfall","date":"2014-11-10T09:28:55.108Z","type":"message"}
{"nick":"substack","message":"not sure what you're asking","date":"2014-11-10T09:29:45.585Z","type":"message"}
{"nick":"substack","message":"I just bail when there's an error","date":"2014-11-10T09:29:52.554Z","type":"message"}
{"nick":"fotoverite","date":"2014-11-10T09:30:09.337Z","type":"join"}
{"nick":"substack","message":"cb(err)","date":"2014-11-10T09:30:15.277Z","type":"message"}
{"nick":"joepie91_","message":"sometimes that is not the appropriate solution, eg. when the error is a source of some sort not being available and retrieving it from a backup source instead","date":"2014-11-10T09:30:15.466Z","type":"message"}
{"nick":"joepie91_","message":"then continuing with the rest","date":"2014-11-10T09:30:25.290Z","type":"message"}
{"nick":"substack","message":"then you just don't bail and continue along","date":"2014-11-10T09:30:32.732Z","type":"message"}
{"nick":"joepie91_","message":"yet you still need to handle the error","date":"2014-11-10T09:30:42.265Z","type":"message"}
{"nick":"substack","message":"you can do whatever you want, it's just code","date":"2014-11-10T09:30:42.587Z","type":"message"}
{"nick":"substack","message":"if (err) { whatever you want } else { something else }","date":"2014-11-10T09:30:56.976Z","type":"message"}
{"nick":"ralphtheninja","reason":"Ping timeout: 265 seconds","date":"2014-11-10T09:30:57.165Z","type":"quit"}
{"nick":"joepie91_","message":"substack: this conversation would be a lot easier if you gave me an example pastebin of the thing you're describing, rather than single context-less lines...","date":"2014-11-10T09:32:04.366Z","type":"message"}
{"nick":"joepie91_","message":"for example, I have no idea where the above line would go","date":"2014-11-10T09:32:16.208Z","type":"message"}
{"nick":"joepie91_","message":"when using waterfall","date":"2014-11-10T09:32:18.010Z","type":"message"}
{"nick":"AaronvanW","date":"2014-11-10T09:32:54.766Z","type":"join"}
{"nick":"substack","message":"var queue = [ ... ]; (function next () { if (queue.length === 0) return cb(null, results); someFn(queue.shift(), function (err, res) { ... }) })()","date":"2014-11-10T09:37:45.895Z","type":"message"}
{"nick":"substack","message":"and call next() inside the handler when the next item is required","date":"2014-11-10T09:37:59.857Z","type":"message"}
{"nick":"nickleefly","date":"2014-11-10T09:38:27.561Z","type":"join"}
{"nick":"joepie91_","message":"substack: (modifying that to run arbitrary functions), that looks a lot messier than just using Promise.all...","date":"2014-11-10T09:57:39.065Z","type":"message"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2014-11-10T10:06:38.128Z","type":"quit"}
{"nick":"olizilla","date":"2014-11-10T10:17:32.081Z","type":"join"}
{"nick":"ahdinosaur","message":"joepie91_: whether code is messy is subjective","date":"2014-11-10T10:21:41.531Z","type":"message"}
{"nick":"fotoverite","date":"2014-11-10T10:25:08.205Z","type":"join"}
{"nick":"joepie91_","message":"ahdinosaur: if it is not visible at a glance from code what it is supposed to be doing, to somebody who didn't write the code himself, then I consider it 'messy'","date":"2014-11-10T10:28:39.703Z","type":"message"}
{"nick":"joepie91_","message":"sometimes that's inevitable","date":"2014-11-10T10:28:44.317Z","type":"message"}
{"nick":"joepie91_","message":"but often it's fairly easy to work around (and that's pretty much exactly what promises are meant to do)","date":"2014-11-10T10:28:58.770Z","type":"message"}
{"nick":"joepie91_","message":"I have no particular bias towards promises, but unless something less messy and similarly usable comes along, I'm going to stick with it... this conversation has not exactly convinced me otherwise","date":"2014-11-10T10:30:00.294Z","type":"message"}
{"nick":"joepie91_","message":"my code isn't poetry, but it's written to make it obvious what's going on","date":"2014-11-10T10:30:47.887Z","type":"message"}
{"nick":"joepie91_","message":"if it's not, then I refactor the code until it is","date":"2014-11-10T10:30:58.128Z","type":"message"}
{"nick":"ahdinosaur","message":"and many people here write clear code that doesn't use promises","date":"2014-11-10T10:32:19.915Z","type":"message"}
{"nick":"joepie91_","message":"yet I would wager that the example code that substack just provided would make somebody who isn't used to that 'pattern' go \"???\"","date":"2014-11-10T10:34:18.034Z","type":"message"}
{"nick":"ahdinosaur","message":"so?","date":"2014-11-10T10:34:32.925Z","type":"message"}
{"nick":"ahdinosaur","message":"substack writing code that way taught me the beauty of streams","date":"2014-11-10T10:35:01.112Z","type":"message"}
{"nick":"joepie91_","message":"so? I've asked for an example of how you'd do something without promises, and the answer provided is significantly less clear than the promises-using code","date":"2014-11-10T10:35:30.101Z","type":"message"}
{"nick":"joepie91_","message":"thus, see above","date":"2014-11-10T10:35:35.056Z","type":"message"}
{"nick":"joepie91_","message":"and not everything can be logically abstracted as a 'stream' and still have it make sense, and that's where the problem lies","date":"2014-11-10T10:35:50.351Z","type":"message"}
{"nick":"ahdinosaur","message":"you're arguing opinions, there's no right or wrong answer here","date":"2014-11-10T10:36:01.498Z","type":"message"}
{"nick":"joepie91_","message":"I think streams are great and that the more-or-less-standardization of them in Node.js is one of the most important arguments for using it, but that doesn't mean that everything is now a nail","date":"2014-11-10T10:36:17.524Z","type":"message"}
{"nick":"joepie91_","message":"(most important arguments for using Node, I mean)","date":"2014-11-10T10:36:27.296Z","type":"message"}
{"nick":"joepie91_","message":"ahdinosaur: that's the thing - if you can write clear-at-a-glance code without using Promises, then by all means go ahead, all the better","date":"2014-11-10T10:37:07.959Z","type":"message"}
{"nick":"joepie91_","message":"but the answers I've gotten so far have not inspired much faith in me that that's the case","date":"2014-11-10T10:37:20.278Z","type":"message"}
{"nick":"joepie91_","message":"so I see no reason not to use promises myself","date":"2014-11-10T10:37:34.426Z","type":"message"}
{"nick":"rockbot__","date":"2014-11-10T10:44:31.229Z","type":"join"}
{"nick":"fotoverite","reason":"Quit: fotoverite","date":"2014-11-10T10:44:50.244Z","type":"quit"}
{"nick":"ahdinosaur","message":"i reckon if you want to learn how to write clear-at-a-glance code without using promises, follow people here on GitHub and read their code, at least that's what i did","date":"2014-11-10T10:45:54.732Z","type":"message"}
{"nick":"ahdinosaur","message":"there's no magical argument that could convince anyone of anything, we need to understand within ourselves","date":"2014-11-10T10:47:29.792Z","type":"message"}
{"nick":"rockbot__","reason":"Ping timeout: 258 seconds","date":"2014-11-10T10:48:57.858Z","type":"quit"}
{"nick":"joepie91_","message":"ahdinosaur: yes, and that is why I presented a snippet of hypothetical code and asked for a promises-less implementation - to understand exactly how these kind of concepts that are available in promises, translate to promise-less constructs","date":"2014-11-10T10:49:46.034Z","type":"message"}
{"nick":"ahdinosaur","message":"it's deeper than just promises though","date":"2014-11-10T10:50:22.696Z","type":"message"}
{"nick":"ahdinosaur","message":"also, you could ask 10 developers and get 10 different answers, all equally right","date":"2014-11-10T10:57:20.091Z","type":"message"}
{"nick":"joepie91_","message":"ahdinosaur: I took that possibility into account by asking \"how would you write this snippet without promises\" (with 'snippet' being representative of a real-world route in a web app), rather than just asking \"what's the equivalent of Promise.all\"","date":"2014-11-10T10:57:27.066Z","type":"message"}
{"nick":"ahdinosaur","message":"right, so what's wrong with the response you got?","date":"2014-11-10T10:58:40.648Z","type":"message"}
{"nick":"joepie91_","message":"well, the question wasn't really answered - I got a partial answer about doing a bunch of queries as a stream, a partial answer about error handling in a different construct (waterfall), and a partial answer about a generic Promise.all equivalent","date":"2014-11-10T11:00:50.141Z","type":"message"}
{"nick":"joepie91_","message":"but I didn't get any answer that I could slap onto pastebin and go \"here, that's the equivalent\"","date":"2014-11-10T11:01:03.468Z","type":"message"}
{"nick":"joepie91_","message":"so it's still not all that much clearer to me","date":"2014-11-10T11:01:07.378Z","type":"message"}
{"nick":"joepie91_","message":"to me, this reads like \"well you can solve problem A with construct A and problem B with construct B\" but it's not clear how the two constructs relate or whether they're compatible at all","date":"2014-11-10T11:01:27.670Z","type":"message"}
{"nick":"ahdinosaur","message":"it's async control flow, and both callbacks, promises, waterfalls, etc are each possible ways of doing it, mostly compatible with each other","date":"2014-11-10T11:03:07.277Z","type":"message"}
{"nick":"joepie91_","message":"that may very well be, but it hasn't become clear to me *how* to use this together in practice","date":"2014-11-10T11:03:48.191Z","type":"message"}
{"nick":"joepie91_","message":"as I said, I don't have a blob of code that I could throw on Pastebin and say \"see, here's an equivalent way of doing it\"","date":"2014-11-10T11:04:00.732Z","type":"message"}
{"nick":"joepie91_","message":"so it doesn't really give me much perspective on how things translate to different... 'paradigms', for lack of a better word","date":"2014-11-10T11:04:17.040Z","type":"message"}
{"nick":"substack","message":"you just use programming","date":"2014-11-10T11:04:22.347Z","type":"message"}
{"nick":"substack","message":"the approach to use for any given problems is that it depends a lot on the details","date":"2014-11-10T11:05:26.641Z","type":"message"}
{"nick":"substack","message":"and very often the best solution is to reframe and recontextualize the problem instead of solving it as presented","date":"2014-11-10T11:05:49.749Z","type":"message"}
{"nick":"ahdinosaur","message":"joepie91_: doing a 1-to-1 translation of a code snippet, let alone expecting someone else to do that translation for you, might not be the best approach to learning the various paradigms","date":"2014-11-10T11:10:50.613Z","type":"message"}
{"nick":"substack","message":"I was just complaining that I don't like these web crypto promise apis","date":"2014-11-10T11:15:34.346Z","type":"message"}
{"nick":"substack","message":"because I don't deal with promise apis often and they feel clunky and weird","date":"2014-11-10T11:15:57.058Z","type":"message"}
{"nick":"substack","message":"but I've nearly got it all working","date":"2014-11-10T11:16:16.720Z","type":"message"}
{"nick":"ahdinosaur","message":"substack: awesome!","date":"2014-11-10T11:16:45.060Z","type":"message"}
{"nick":"ahdinosaur","message":"well not the web crypto promise apis... :p","date":"2014-11-10T11:16:58.607Z","type":"message"}
{"nick":"substack","message":"it's an offline web service (using hyperboot) for single sign-on","date":"2014-11-10T11:17:46.202Z","type":"message"}
{"nick":"substack","message":"and it doesn't require any servers unless you want to back up your key","date":"2014-11-10T11:17:59.630Z","type":"message"}
{"nick":"ahdinosaur","message":"cool, i can see that being really useful","date":"2014-11-10T11:19:36.107Z","type":"message"}
{"nick":"ahdinosaur","message":"especially if it makes its way into ssb/phoenix, hehe","date":"2014-11-10T11:21:36.357Z","type":"message"}
{"nick":"anvaka","reason":"Remote host closed the connection","date":"2014-11-10T11:25:47.256Z","type":"quit"}
{"nick":"Mso150","reason":"Ping timeout: 256 seconds","date":"2014-11-10T11:33:36.534Z","type":"quit"}
{"nick":"joepie91_","message":"ahdinosaur: it is to me...","date":"2014-11-10T11:43:40.733Z","type":"message"}
{"nick":"nickleefly","reason":"Quit: Connection closed for inactivity","date":"2014-11-10T11:50:23.146Z","type":"quit"}
{"nick":"gorhgorh_","date":"2014-11-10T11:50:54.973Z","type":"join"}
{"nick":"gorhgorh","reason":"Ping timeout: 255 seconds","date":"2014-11-10T11:52:55.529Z","type":"quit"}
{"nick":"gorhgorh_","new_nick":"gorhgorh","date":"2014-11-10T11:52:55.529Z","type":"nick"}
{"nick":"insertcoffee","date":"2014-11-10T11:54:45.738Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 272 seconds","date":"2014-11-10T12:09:11.846Z","type":"quit"}
{"nick":"oncenull","date":"2014-11-10T12:21:13.890Z","type":"join"}
{"nick":"oncenull","reason":"Read error: Connection reset by peer","date":"2014-11-10T12:21:39.437Z","type":"quit"}
{"nick":"onc3null","date":"2014-11-10T12:21:39.846Z","type":"join"}
{"nick":"joepie91_","message":"substack: seeing as you maintain hyperquest... the node http documentation suggests emitting an agentRemove event for long-running/streaming requests - would this be a sufficiently good solution if you know which requests are going to be long-running and which are not (while still taking advantage of keep-alive pooling for quick requests), or is there some other snag that makes this an unsuitable solution?","date":"2014-11-10T12:44:31.922Z","type":"message"}
{"nick":"joepie91_","message":"\"know which are going to be long-running\" as in, under normal circumstances, not accounting for backend failures and such","date":"2014-11-10T12:44:56.241Z","type":"message"}
{"nick":"domanic","date":"2014-11-10T13:06:59.450Z","type":"join"}
{"nick":"gorhgorh","reason":"Quit: gorhgorh","date":"2014-11-10T13:20:15.966Z","type":"quit"}
{"nick":"ralphtheninja","date":"2014-11-10T13:49:13.885Z","type":"join"}
{"nick":"ryan_stevens","date":"2014-11-10T13:51:57.577Z","type":"join"}
{"nick":"CoderPuppy","date":"2014-11-10T13:53:42.280Z","type":"join"}
{"nick":"ryan_stevens","reason":"Client Quit","date":"2014-11-10T13:53:53.459Z","type":"quit"}
{"nick":"cpup","reason":"Ping timeout: 265 seconds","date":"2014-11-10T13:55:20.172Z","type":"quit"}
{"nick":"maxgfeller","reason":"Quit: maxgfeller","date":"2014-11-10T13:58:43.175Z","type":"quit"}
{"nick":"maxgfeller","date":"2014-11-10T13:58:53.848Z","type":"join"}
{"nick":"thlorenz","date":"2014-11-10T14:02:20.338Z","type":"join"}
{"nick":"knownasilya","date":"2014-11-10T14:14:24.357Z","type":"join"}
{"nick":"brianloveswords","date":"2014-11-10T14:15:11.640Z","type":"join"}
{"nick":"rockbot__","date":"2014-11-10T14:22:02.203Z","type":"join"}
{"nick":"olizilla","reason":"Quit: Connection closed for inactivity","date":"2014-11-10T14:25:29.482Z","type":"quit"}
{"nick":"rockbot__","reason":"Ping timeout: 256 seconds","date":"2014-11-10T14:27:00.545Z","type":"quit"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-11-10T14:28:47.441Z","type":"quit"}
{"nick":"reqshark","reason":"Quit: Be back later ...","date":"2014-11-10T14:34:29.401Z","type":"quit"}
{"nick":"brianloveswords","date":"2014-11-10T14:36:45.565Z","type":"join"}
{"nick":"ryan_stevens","date":"2014-11-10T14:39:32.656Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-11-10T14:48:04.886Z","type":"quit"}
{"nick":"thlorenz","date":"2014-11-10T14:48:18.347Z","type":"join"}
{"nick":"stagas","date":"2014-11-10T14:58:14.957Z","type":"join"}
{"nick":"insertcoffee","reason":"Ping timeout: 244 seconds","date":"2014-11-10T14:59:56.492Z","type":"quit"}
{"nick":"gorhgorh","date":"2014-11-10T15:05:26.259Z","type":"join"}
{"nick":"insertcoffee","date":"2014-11-10T15:15:03.145Z","type":"join"}
{"nick":"reqshark","date":"2014-11-10T15:19:09.472Z","type":"join"}
{"nick":"rockbot__","date":"2014-11-10T15:22:58.575Z","type":"join"}
{"nick":"domanic","message":"mafintosh sorribas hey what are you guys up to this evening?","date":"2014-11-10T15:24:15.033Z","type":"message"}
{"nick":"ryan_stevens","reason":"Quit: ryan_stevens","date":"2014-11-10T15:24:23.290Z","type":"quit"}
{"nick":"mafintosh","message":"domanic: we are heading to paludans (https://www.google.dk/maps/place/Paludan+Bog+%26+Caf%C3%A9/@55.680331,12.573319,17z/data=!3m1!4b1!4m2!3m1!1s0x465253103fe19c97:0xdcf4e0b8fae25688?hl=en) in about an hour for some hacking","date":"2014-11-10T15:25:02.562Z","type":"message"}
{"nick":"mafintosh","message":"they have decent food there also","date":"2014-11-10T15:25:11.673Z","type":"message"}
{"nick":"domanic","message":"mafintosh, cool I know that place","date":"2014-11-10T15:25:20.560Z","type":"message"}
{"nick":"mafintosh","message":"domanic: did you try their rye bread sandwiches?","date":"2014-11-10T15:25:46.446Z","type":"message"}
{"nick":"domanic","message":"mafintosh, no but sorribas has been telling me I must try the danish rye bread","date":"2014-11-10T15:26:15.701Z","type":"message"}
{"nick":"rockbot__","reason":"Ping timeout: 255 seconds","date":"2014-11-10T15:27:39.014Z","type":"quit"}
{"nick":"domanic","message":"substack, you should hangout in #scuttlebutt","date":"2014-11-10T15:29:20.468Z","type":"message"}
{"nick":"ryan_stevens","date":"2014-11-10T15:50:43.651Z","type":"join"}
