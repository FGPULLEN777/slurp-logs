{"nick":"nodejs-gh","date":"2017-08-03T00:00:10.689Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T00:00:10.860Z","type":"part"}
{"nick":"http_GK1wmSU","date":"2017-08-03T00:06:03.608Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-03T00:06:59.560Z","type":"quit"}
{"nick":"http_GK1wmSU","date":"2017-08-03T00:08:22.251Z","type":"part"}
{"nick":"mcollina","reason":"Ping timeout: 255 seconds","date":"2017-08-03T00:11:04.055Z","type":"quit"}
{"nick":"mcollina","date":"2017-08-03T00:12:38.194Z","type":"join"}
{"nick":"bradleymeck","date":"2017-08-03T00:17:06.713Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-03T00:22:57.347Z","type":"quit"}
{"nick":"chalker_","reason":"Ping timeout: 260 seconds","date":"2017-08-03T00:24:56.605Z","type":"quit"}
{"nick":"chalker_","date":"2017-08-03T00:33:06.655Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T00:33:41.657Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T00:33:41.829Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-08-03T00:34:36.646Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T00:34:36.818Z","type":"part"}
{"nick":"joepie91","reason":"Ping timeout: 264 seconds","date":"2017-08-03T00:49:34.310Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-08-03T00:53:37.650Z","type":"join"}
{"nick":"plasticle","reason":"Ping timeout: 276 seconds","date":"2017-08-03T00:56:02.140Z","type":"quit"}
{"nick":"chalker_","reason":"Ping timeout: 260 seconds","date":"2017-08-03T00:59:42.699Z","type":"quit"}
{"nick":"pudymody","date":"2017-08-03T01:06:52.899Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-03T01:09:05.526Z","type":"quit"}
{"nick":"plasticle","date":"2017-08-03T01:10:05.697Z","type":"join"}
{"nick":"not-an-aardvark","date":"2017-08-03T01:10:53.944Z","type":"join"}
{"nick":"Fishrock123","date":"2017-08-03T01:13:13.636Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-03T01:13:21.795Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-08-03T01:13:59.462Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-03T01:14:06.892Z","type":"quit"}
{"nick":"pudymody","reason":"Quit: Leaving","date":"2017-08-03T01:18:25.582Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-08-03T01:36:03.687Z","type":"join"}
{"nick":"pudymody","date":"2017-08-03T01:40:08.792Z","type":"join"}
{"nick":"snowkidind","date":"2017-08-03T01:47:15.882Z","type":"join"}
{"nick":"pudymody","reason":"Quit: Leaving","date":"2017-08-03T01:52:27.244Z","type":"quit"}
{"nick":"DavidCai1993","date":"2017-08-03T02:02:36.991Z","type":"join"}
{"nick":"xadillax","date":"2017-08-03T02:08:02.556Z","type":"join"}
{"nick":"xadillax","reason":"Remote host closed the connection","date":"2017-08-03T02:08:31.276Z","type":"quit"}
{"nick":"xadillax","date":"2017-08-03T02:09:06.572Z","type":"join"}
{"nick":"xadillax","reason":"Ping timeout: 240 seconds","date":"2017-08-03T02:13:13.582Z","type":"quit"}
{"nick":"xadillax","date":"2017-08-03T02:14:46.470Z","type":"join"}
{"nick":"BridgeAR","reason":"Ping timeout: 248 seconds","date":"2017-08-03T02:22:57.556Z","type":"quit"}
{"nick":"`8-Ball","date":"2017-08-03T02:25:17.085Z","type":"quit"}
{"nick":"TimothyGu","message":"bradleymeck: the JS one is still used in fs.js, so, no","date":"2017-08-03T02:27:03.531Z","type":"message"}
{"nick":"TimothyGu","message":"bradleymeck: is the real path stored into the moduleMap or symlink path? my reading of the WHATWG spec says it should be the symlink path...","date":"2017-08-03T02:29:50.688Z","type":"message"}
{"nick":"TimothyGu","message":"yeah that's right, so per spec just like how file:///file?search and file:///file are different keys in the module map, so should file:///symlink and file:///real","date":"2017-08-03T02:33:10.627Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-03T02:34:10.388Z","type":"quit"}
{"nick":"TimothyGu","message":"i.e. you shouldn't add any special handling for symlinks, and the same file should be evaluated multiple times if it is imported multiple times under different URLs","date":"2017-08-03T02:34:17.083Z","type":"message"}
{"nick":"TimothyGu","action":"realizes bradleymeck just quit...","date":"2017-08-03T02:34:51.969Z","type":"action"}
{"nick":"Fishrock123","date":"2017-08-03T02:38:29.676Z","type":"join"}
{"nick":"xadillax","reason":"Remote host closed the connection","date":"2017-08-03T02:39:02.976Z","type":"quit"}
{"nick":"Fishrock123","reason":"Ping timeout: 276 seconds","date":"2017-08-03T02:43:16.685Z","type":"quit"}
{"nick":"xadillax","date":"2017-08-03T02:43:30.468Z","type":"join"}
{"nick":"xadillax_","date":"2017-08-03T03:19:25.501Z","type":"join"}
{"nick":"xadillax","reason":"Ping timeout: 260 seconds","date":"2017-08-03T03:23:12.613Z","type":"quit"}
{"nick":"xadillax_","reason":"Remote host closed the connection","date":"2017-08-03T03:30:45.906Z","type":"quit"}
{"nick":"BridgeAR","date":"2017-08-03T03:40:10.657Z","type":"join"}
{"nick":"xadillax","date":"2017-08-03T03:41:26.564Z","type":"join"}
{"nick":"DavidCai1993","reason":"Ping timeout: 260 seconds","date":"2017-08-03T03:49:50.006Z","type":"quit"}
{"nick":"xadillax","reason":"Remote host closed the connection","date":"2017-08-03T04:11:21.746Z","type":"quit"}
{"nick":"pudymody","date":"2017-08-03T04:31:30.879Z","type":"join"}
{"nick":"howdoi","date":"2017-08-03T04:36:19.032Z","type":"join"}
{"nick":"snowkidind","reason":"Quit: astalaPIZZA Baby!","date":"2017-08-03T04:44:40.430Z","type":"quit"}
{"nick":"dg_","date":"2017-08-03T04:55:51.012Z","type":"join"}
{"nick":"dg_","reason":"Client Quit","date":"2017-08-03T04:56:19.205Z","type":"quit"}
{"nick":"titankiller","date":"2017-08-03T05:03:04.387Z","type":"join"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2017-08-03T05:03:20.500Z","type":"quit"}
{"nick":"xadillax","date":"2017-08-03T05:07:40.439Z","type":"join"}
{"nick":"lpin","date":"2017-08-03T05:08:28.354Z","type":"join"}
{"nick":"DavidCai1993","date":"2017-08-03T05:10:23.992Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T05:10:58.496Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T05:10:58.668Z","type":"part"}
{"nick":"titankiller","reason":"Ping timeout: 260 seconds","date":"2017-08-03T05:11:42.654Z","type":"quit"}
{"nick":"BridgeAR","reason":"Ping timeout: 260 seconds","date":"2017-08-03T05:12:24.576Z","type":"quit"}
{"nick":"pudymody","reason":"Quit: Leaving","date":"2017-08-03T05:12:29.816Z","type":"quit"}
{"nick":"jeyanthi","date":"2017-08-03T05:12:57.593Z","type":"join"}
{"nick":"titankiller","date":"2017-08-03T05:17:57.563Z","type":"join"}
{"nick":"titankiller","reason":"Ping timeout: 255 seconds","date":"2017-08-03T05:27:17.845Z","type":"quit"}
{"nick":"titankiller","date":"2017-08-03T05:29:13.295Z","type":"join"}
{"nick":"xadillax","reason":"Remote host closed the connection","date":"2017-08-03T05:40:03.812Z","type":"quit"}
{"nick":"titankiller","reason":"Ping timeout: 268 seconds","date":"2017-08-03T05:45:44.782Z","type":"quit"}
{"nick":"xadillax","date":"2017-08-03T05:49:24.511Z","type":"join"}
{"nick":"xadillax","reason":"Remote host closed the connection","date":"2017-08-03T05:49:40.977Z","type":"quit"}
{"nick":"xadillax","date":"2017-08-03T05:49:47.475Z","type":"join"}
{"nick":"xadillax","reason":"Remote host closed the connection","date":"2017-08-03T05:50:06.387Z","type":"quit"}
{"nick":"jeyanthi","reason":"Ping timeout: 260 seconds","date":"2017-08-03T05:59:04.626Z","type":"quit"}
{"nick":"jeyanthi","date":"2017-08-03T06:17:13.457Z","type":"join"}
{"nick":"seishun","date":"2017-08-03T06:29:06.515Z","type":"join"}
{"nick":"titankil_","date":"2017-08-03T06:35:01.875Z","type":"join"}
{"nick":"titankil_","reason":"Remote host closed the connection","date":"2017-08-03T06:37:00.543Z","type":"quit"}
{"nick":"titankil_","date":"2017-08-03T06:37:34.607Z","type":"join"}
{"nick":"mafintosh","reason":"Ping timeout: 246 seconds","date":"2017-08-03T06:49:41.561Z","type":"quit"}
{"nick":"mafintosh","date":"2017-08-03T06:51:22.845Z","type":"join"}
{"nick":"carnegie","date":"2017-08-03T06:56:07.454Z","type":"join"}
{"nick":"xadillax","date":"2017-08-03T07:06:30.683Z","type":"join"}
{"nick":"titankil_","reason":"Ping timeout: 276 seconds","date":"2017-08-03T07:10:25.721Z","type":"quit"}
{"nick":"titankiller","date":"2017-08-03T07:12:18.887Z","type":"join"}
{"nick":"xadillax_","date":"2017-08-03T07:12:56.461Z","type":"join"}
{"nick":"xadillax","reason":"Ping timeout: 240 seconds","date":"2017-08-03T07:15:43.317Z","type":"quit"}
{"nick":"carnegie","reason":"Remote host closed the connection","date":"2017-08-03T07:18:45.408Z","type":"quit"}
{"nick":"gain","date":"2017-08-03T07:42:19.462Z","type":"join"}
{"nick":"chalker_","date":"2017-08-03T07:57:03.507Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 260 seconds","date":"2017-08-03T08:07:24.598Z","type":"quit"}
{"nick":"gkatsev","reason":"Ping timeout: 240 seconds","date":"2017-08-03T08:16:35.535Z","type":"quit"}
{"nick":"gkatsev","date":"2017-08-03T08:17:34.046Z","type":"join"}
{"nick":"chalker_","reason":"Ping timeout: 240 seconds","date":"2017-08-03T08:31:35.540Z","type":"quit"}
{"nick":"chalker_","date":"2017-08-03T08:37:30.620Z","type":"join"}
{"nick":"jeyanthi","reason":"Ping timeout: 260 seconds","date":"2017-08-03T08:40:04.665Z","type":"quit"}
{"nick":"jeyanthi","date":"2017-08-03T08:45:44.576Z","type":"join"}
{"nick":"indistylo","date":"2017-08-03T08:49:16.694Z","type":"join"}
{"nick":"joepie91___","date":"2017-08-03T09:10:33.511Z","type":"join"}
{"nick":"joepie91___","reason":"Changing host","date":"2017-08-03T09:10:45.448Z","type":"quit"}
{"nick":"joepie91___","date":"2017-08-03T09:10:45.620Z","type":"join"}
{"nick":"joepie91___","new_nick":"joepie91","date":"2017-08-03T09:12:42.531Z","type":"nick"}
{"nick":"chalker_","reason":"Ping timeout: 246 seconds","date":"2017-08-03T09:20:53.582Z","type":"quit"}
{"nick":"xadillax_","reason":"Remote host closed the connection","date":"2017-08-03T09:25:12.335Z","type":"quit"}
{"nick":"xadillax","date":"2017-08-03T09:28:52.560Z","type":"join"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2017-08-03T09:33:18.919Z","type":"quit"}
{"nick":"xadillax","reason":"Remote host closed the connection","date":"2017-08-03T09:34:33.453Z","type":"quit"}
{"nick":"chalker_","date":"2017-08-03T09:36:04.860Z","type":"join"}
{"nick":"mscdex","reason":"Ping timeout: 240 seconds","date":"2017-08-03T09:49:10.415Z","type":"quit"}
{"nick":"mscdex","date":"2017-08-03T10:02:41.017Z","type":"join"}
{"nick":"DavidCai1993","reason":"Ping timeout: 260 seconds","date":"2017-08-03T10:06:40.003Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-08-03T10:25:33.818Z","type":"quit"}
{"nick":"indistylo","reason":"Ping timeout: 260 seconds","date":"2017-08-03T10:26:00.637Z","type":"quit"}
{"nick":"mylesborins","date":"2017-08-03T10:26:04.567Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-08-03T11:00:30.507Z","type":"quit"}
{"nick":"octetcloud","date":"2017-08-03T11:35:59.447Z","type":"join"}
{"nick":"chalker_","reason":"Ping timeout: 268 seconds","date":"2017-08-03T11:36:37.853Z","type":"quit"}
{"nick":"eihabarabia","date":"2017-08-03T11:37:04.553Z","type":"join"}
{"nick":"eihabarabia","reason":"Client Quit","date":"2017-08-03T11:38:40.666Z","type":"quit"}
{"nick":"chalker_","date":"2017-08-03T12:20:19.610Z","type":"join"}
{"nick":"titankiller","reason":"Ping timeout: 246 seconds","date":"2017-08-03T12:59:38.635Z","type":"quit"}
{"nick":"al-damiri","date":"2017-08-03T13:06:37.888Z","type":"join"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2017-08-03T13:21:10.887Z","type":"quit"}
{"nick":"indistylo","date":"2017-08-03T13:22:42.731Z","type":"join"}
{"nick":"bradleymeck","date":"2017-08-03T13:25:37.901Z","type":"join"}
{"nick":"bradleymeck","message":"TimothyGu: this is where WHATWG and Node differ","date":"2017-08-03T13:27:48.070Z","type":"message"}
{"nick":"bradleymeck","message":"we can't do Symlink path cause that breaks things ala --preserve-symlinks , also symlinks != HTTP Redirects","date":"2017-08-03T13:28:18.526Z","type":"message"}
{"nick":"octetcloud","message":"`8-ball: you probably don't need it, but check out WeakMap","date":"2017-08-03T13:28:29.001Z","type":"message"}
{"nick":"bradleymeck","message":"the cache is based upon realpath in node, always","date":"2017-08-03T13:28:35.766Z","type":"message"}
{"nick":"bradleymeck","message":"if you move it to symlink based you can see my symlink test load multiple times (not good)","date":"2017-08-03T13:29:01.048Z","type":"message"}
{"nick":"bradleymeck","message":"use query or hash fragments if you need to reload things","date":"2017-08-03T13:30:43.186Z","type":"message"}
{"nick":"bradleymeck","message":"TimothyGu: if we were to take the WHATWG approach of non-searching/only based upon specifier `import 'react'` and `import 'react/index.js'` would load 2 different times","date":"2017-08-03T13:40:03.396Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-08-03T13:43:22.625Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T13:43:22.797Z","type":"part"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-03T13:43:52.666Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-08-03T13:44:00.896Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T13:44:01.068Z","type":"part"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2017-08-03T13:47:00.384Z","type":"nick"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2017-08-03T13:47:09.266Z","type":"nick"}
{"nick":"chalker_","reason":"Ping timeout: 246 seconds","date":"2017-08-03T13:52:43.786Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-08-03T14:01:44.902Z","type":"join"}
{"nick":"refack","message":"bradleymeck: doesn't `--preserve-symlinks` break \"the cache is based upon realpath in node, always\"?","date":"2017-08-03T14:02:11.602Z","type":"message"}
{"nick":"xadillax","date":"2017-08-03T14:02:25.384Z","type":"join"}
{"nick":"bradleymeck","message":"mmm?","date":"2017-08-03T14:02:31.007Z","type":"message"}
{"nick":"bradleymeck","message":"i mean it had behavior that broke things so it was reverted","date":"2017-08-03T14:02:42.050Z","type":"message"}
{"nick":"refack","message":"Well it seem the for `require` it does","date":"2017-08-03T14:02:47.602Z","type":"message"}
{"nick":"bradleymeck","message":"I don't know of anyone using the flag","date":"2017-08-03T14:02:49.124Z","type":"message"}
{"nick":"octetcloud","reason":"Quit: Konversation terminated!","date":"2017-08-03T14:02:51.853Z","type":"quit"}
{"nick":"refack","message":"me","date":"2017-08-03T14:02:57.087Z","type":"message"}
{"nick":"bradleymeck","message":"interesting","date":"2017-08-03T14:03:02.173Z","type":"message"}
{"nick":"bradleymeck","message":"we could make it respected for ESM if someone wants to","date":"2017-08-03T14:03:24.427Z","type":"message"}
{"nick":"bradleymeck","message":"but thats not the default / revert makes me not want it to be the default","date":"2017-08-03T14:03:41.937Z","type":"message"}
{"nick":"refack","message":"I have a weird setup, my main storage is on D: , but I have \"legacy\" symlink c:\\code -> d:\\code","date":"2017-08-03T14:04:11.497Z","type":"message"}
{"nick":"bradleymeck","message":"and realpathing makes it fail?","date":"2017-08-03T14:04:35.013Z","type":"message"}
{"nick":"refack","message":"I use `--preserve-symlinks` otherwise the debugger loads two files c:\\x and d:\\x","date":"2017-08-03T14:05:11.142Z","type":"message"}
{"nick":"bradleymeck","message":"i'm now confused, c:\\code is a symlink to d:\\code","date":"2017-08-03T14:06:07.464Z","type":"message"}
{"nick":"bradleymeck","message":"so realpathing it would always be d:\\code","date":"2017-08-03T14:06:24.963Z","type":"message"}
{"nick":"bradleymeck","message":"why would it load 2 different ones without --preserve-symlinks","date":"2017-08-03T14:06:41.829Z","type":"message"}
{"nick":"refack","message":"yes, but if I work on c:\\code\\x without preserving, I get reference duplication","date":"2017-08-03T14:06:53.470Z","type":"message"}
{"nick":"refack","message":"because the IDE points to c:\\code\\x but the debugger realpaths and points to d:\\code\\x","date":"2017-08-03T14:07:18.365Z","type":"message"}
{"nick":"bradleymeck","message":"c:\\code\\x lives in d:\\code as d:\\code\\x","date":"2017-08-03T14:07:20.756Z","type":"message"}
{"nick":"bradleymeck","message":"ah, so your IDE is the thing that is confused / not using realpaths","date":"2017-08-03T14:07:37.913Z","type":"message"}
{"nick":"refack","message":"yes","date":"2017-08-03T14:07:43.459Z","type":"message"}
{"nick":"refack","message":"so I'm and edge case, pnpm and yarn are more important","date":"2017-08-03T14:08:03.369Z","type":"message"}
{"nick":"bradleymeck","message":"we could still make the flag work for ESM","date":"2017-08-03T14:08:17.154Z","type":"message"}
{"nick":"bradleymeck","message":"right now it doesn't","date":"2017-08-03T14:08:22.166Z","type":"message"}
{"nick":"refack","message":"I'll play with it, tell you what I find out. Also could open an issue for the IDEs","date":"2017-08-03T14:09:12.478Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-08-03T14:21:00.511Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T14:21:00.726Z","type":"part"}
{"nick":"xadillax","reason":"Remote host closed the connection","date":"2017-08-03T14:21:34.242Z","type":"quit"}
{"nick":"bradleymeck","message":"is there a *sane* way to rethrow an error without blowing away its .stack *consistently*","date":"2017-08-03T14:24:30.650Z","type":"message"}
{"nick":"refack","message":"I believe accesing it (.stack) will freeze it","date":"2017-08-03T14:26:15.176Z","type":"message"}
{"nick":"bradleymeck","message":"In most cases yes, not always","date":"2017-08-03T14:26:28.693Z","type":"message"}
{"nick":"bradleymeck","message":"it isnt evan a real getter T_T","date":"2017-08-03T14:27:25.831Z","type":"message"}
{"nick":"bradleymeck","message":"even*","date":"2017-08-03T14:27:29.395Z","type":"message"}
{"nick":"refack","message":"yep it's a V8 kludge, ya'll should standardize it","date":"2017-08-03T14:28:37.258Z","type":"message"}
{"nick":"refack","message":"That whole API is very old and ad hoc","date":"2017-08-03T14:29:22.807Z","type":"message"}
{"nick":"bradleymeck","message":"michael has been trying for like 2 years XD","date":"2017-08-03T14:29:26.939Z","type":"message"}
{"nick":"bradleymeck","message":"what I want is an ErrorChain extends Error thing","date":"2017-08-03T14:30:01.112Z","type":"message"}
{"nick":"bradleymeck","message":"so I can track multiple errors at a time","date":"2017-08-03T14:30:14.334Z","type":"message"}
{"nick":"chalker_","date":"2017-08-03T14:30:16.488Z","type":"join"}
{"nick":"refack","message":"Yup, I needed that several times. Played with Error.prepareStackTrace, but IMHO that could only be in userland","date":"2017-08-03T14:31:30.135Z","type":"message"}
{"nick":"refack","message":"An \"internal\" solution could be `const e1 = new Error(); e1.parentStack = e.stack;`","date":"2017-08-03T14:32:48.307Z","type":"message"}
{"nick":"bradleymeck","message":"userland can bleed into spec as APIs","date":"2017-08-03T14:33:03.227Z","type":"message"}
{"nick":"refack","message":"definatly, but I wouldn't use  Error.prepareStackTrace as it is now in core","date":"2017-08-03T14:33:53.858Z","type":"message"}
{"nick":"refack","message":"API needed some massaging","date":"2017-08-03T14:34:27.176Z","type":"message"}
{"nick":"refack","message":"*still needs","date":"2017-08-03T14:34:35.122Z","type":"message"}
{"nick":"refack","message":"Plus I don't know what chakra has","date":"2017-08-03T14:35:12.808Z","type":"message"}
{"nick":"bradleymeck","message":"preparseStackTrace isn't a thing outside v8","date":"2017-08-03T14:35:41.374Z","type":"message"}
{"nick":"bradleymeck","message":"prepare*","date":"2017-08-03T14:35:48.681Z","type":"message"}
{"nick":"bradleymeck","message":"the meetings I have been in would like to not standardize that for now","date":"2017-08-03T14:35:59.323Z","type":"message"}
{"nick":"refack","action":"goes digging in chakra code","date":"2017-08-03T14:36:16.129Z","type":"action"}
{"nick":"octetcloud","date":"2017-08-03T14:53:53.701Z","type":"join"}
{"nick":"jeyanthi","reason":"Ping timeout: 246 seconds","date":"2017-08-03T15:03:32.650Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-08-03T15:06:55.429Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T15:06:55.620Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-08-03T15:09:50.421Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T15:09:50.609Z","type":"part"}
{"nick":"TimothyGu","message":"bradleymeck: I dont actually see why node has to differ from browsers, symlink != http redirect thats true, but at the same time using browsers to visit file:/// urls will load the file multiple times per symlink, and react vs react/index isnt really a valid cpunter example since they would resolve to the same URL","date":"2017-08-03T15:19:09.797Z","type":"message"}
{"nick":"TimothyGu","message":"(sorry im on my phone rn)","date":"2017-08-03T15:19:37.477Z","type":"message"}
{"nick":"TimothyGu","message":"i guess i just dont see a reason for doing things in a way thats diff from browsers","date":"2017-08-03T15:20:16.346Z","type":"message"}
{"nick":"TimothyGu","message":"kinda like percent encoded path, p%51th vs path are arguably","date":"2017-08-03T15:21:32.956Z","type":"message"}
{"nick":"TimothyGu","message":"more similar than symlinks, yet we treat them as separate entries (just like browsers)","date":"2017-08-03T15:22:03.785Z","type":"message"}
{"nick":"bradleymeck","message":"TimothyGu: well we differ from browsers in *many* ways so idk why symlinks are the stickler","date":"2017-08-03T15:23:48.778Z","type":"message"}
{"nick":"BridgeAR","date":"2017-08-03T15:23:52.558Z","type":"join"}
{"nick":"bradleymeck","message":"we have package.json#main, file extension searches, dir/index*, node_modules all as different ways to get to files","date":"2017-08-03T15:24:23.547Z","type":"message"}
{"nick":"bradleymeck","message":"symlinks are just another way","date":"2017-08-03T15:24:35.315Z","type":"message"}
{"nick":"bradleymeck","message":"I would prefer to be consistent across all these on what causes a fresh evaluation","date":"2017-08-03T15:25:00.069Z","type":"message"}
{"nick":"bradleymeck","message":"`import './server';` and `import './server.mjs';` shouldn't evaluate 2 times, but browser behavior is to evaluate 2 times if using HTTP redirects","date":"2017-08-03T15:25:50.335Z","type":"message"}
{"nick":"bradleymeck","message":"you have to create a `./server` response that does `export ... from './server.mjs';` to avoid evaluating multiple times in the browser","date":"2017-08-03T15:26:31.425Z","type":"message"}
{"nick":"bradleymeck","message":"same for all the other ways to have node search for files listed above, not just file extension","date":"2017-08-03T15:27:24.189Z","type":"message"}
{"nick":"TimothyGu","message":"ok, you've convinced me 🙂","date":"2017-08-03T15:29:13.183Z","type":"message"}
{"nick":"refack","message":"bradleymeck: TimothyGu: what's the reasoning behind it? Should the cache have","date":"2017-08-03T15:29:30.386Z","type":"message"}
{"nick":"refack","message":"1 entry per string/key","date":"2017-08-03T15:29:30.562Z","type":"message"}
{"nick":"refack","message":"or 1 entry per code","date":"2017-08-03T15:29:30.562Z","type":"message"}
{"nick":"TimothyGu","message":"refack the whateg spec is keyed by IRL","date":"2017-08-03T15:30:14.735Z","type":"message"}
{"nick":"TimothyGu","message":"URL","date":"2017-08-03T15:30:20.732Z","type":"message"}
{"nick":"TimothyGu","message":"and it doesnt take into consideration anything fs-related like mode has to","date":"2017-08-03T15:30:51.159Z","type":"message"}
{"nick":"bradleymeck","message":"for browsers this lets them do cache lookup prior to any IO but means you have to do some odd things to avoid double reloads if you can get to a resource via multiple URLs or by redirects","date":"2017-08-03T15:30:57.089Z","type":"message"}
{"nick":"TimothyGu","message":"node*","date":"2017-08-03T15:30:58.694Z","type":"message"}
{"nick":"refack","message":"so:","date":"2017-08-03T15:33:06.313Z","type":"message"}
{"nick":"refack","message":"{location.pathname === '/'} import './gaga'","date":"2017-08-03T15:33:06.489Z","type":"message"}
{"nick":"refack","message":"and","date":"2017-08-03T15:33:06.490Z","type":"message"}
{"nick":"refack","message":"{location.pathname === '/gaga/'} import './'","date":"2017-08-03T15:33:06.490Z","type":"message"}
{"nick":"refack","message":"Resolve twice?","date":"2017-08-03T15:33:06.490Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-08-03T15:33:44.082Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T15:33:44.257Z","type":"part"}
{"nick":"bradleymeck","message":"refack: yes, but only because you don't have a `/` on the first","date":"2017-08-03T15:33:56.965Z","type":"message"}
{"nick":"bradleymeck","message":"WHATWG does ~= URL(specifier, document.baseURI) to get the \"resolved\" specifier","date":"2017-08-03T15:34:20.221Z","type":"message"}
{"nick":"bradleymeck","message":"which is super fast/cheap","date":"2017-08-03T15:34:35.370Z","type":"message"}
{"nick":"TimothyGu","action":"is sleepy","date":"2017-08-03T15:35:12.169Z","type":"action"}
{"nick":"TimothyGu","message":"later people","date":"2017-08-03T15:35:20.806Z","type":"message"}
{"nick":"refack","message":"I tend to agree with bradleymeck, browsers are clients of 2rd party servers. while node runs on a 1st party fs.","date":"2017-08-03T15:39:17.942Z","type":"message"}
{"nick":"refack","message":"So a node user knows (or can easily find out) he has symlinks","date":"2017-08-03T15:39:18.121Z","type":"message"}
{"nick":"refack","message":"While a browser user doesn't know what's happening on the server","date":"2017-08-03T15:39:18.121Z","type":"message"}
{"nick":"refack","message":"But then again there's the same-origin restriction","date":"2017-08-03T15:39:18.121Z","type":"message"}
{"nick":"refack","message":"arrrggg, I don't like the internet it's too multi-biguous","date":"2017-08-03T15:40:41.024Z","type":"message"}
{"nick":"ofrobots","reason":"Ping timeout: 255 seconds","date":"2017-08-03T15:41:59.861Z","type":"quit"}
{"nick":"ofrobots","date":"2017-08-03T15:43:10.845Z","type":"join"}
{"nick":"titankiller","date":"2017-08-03T15:45:49.708Z","type":"join"}
{"nick":"jeyanthi","date":"2017-08-03T15:59:41.415Z","type":"join"}
{"nick":"gain","reason":"Quit: Leaving","date":"2017-08-03T16:09:10.686Z","type":"quit"}
{"nick":"jeyanthi","reason":"Ping timeout: 240 seconds","date":"2017-08-03T16:14:10.415Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 260 seconds","date":"2017-08-03T16:17:17.743Z","type":"quit"}
{"nick":"octetcloud","date":"2017-08-03T16:19:58.695Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-03T16:21:30.177Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-08-03T16:32:48.932Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T16:32:49.114Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-08-03T16:39:18.919Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T16:39:19.099Z","type":"part"}
{"nick":"bradleymeck","date":"2017-08-03T16:49:53.616Z","type":"join"}
{"nick":"snowkidind","date":"2017-08-03T16:54:06.257Z","type":"join"}
{"nick":"Fishrock123","date":"2017-08-03T16:54:49.703Z","type":"join"}
{"nick":"bradleymeck","message":"Fishrock123: for the CLI flag how does `--source-name=app.{wasm,wat,js,mjs}` feel?","date":"2017-08-03T16:56:34.628Z","type":"message"}
{"nick":"Fishrock123","message":"err","date":"2017-08-03T16:57:22.336Z","type":"message"}
{"nick":"Fishrock123","message":"could you elaborate a bit more lol","date":"2017-08-03T16:57:30.897Z","type":"message"}
{"nick":"Fishrock123","message":"for -e or the repl there may be no source name?","date":"2017-08-03T16:57:48.385Z","type":"message"}
{"nick":"bradleymeck","message":"REPL is a bit complicated, this is for STDIN/-e/-p/-i/etc.","date":"2017-08-03T16:58:17.545Z","type":"message"}
{"nick":"bradleymeck","message":"people could certainly pipe in WASM for example","date":"2017-08-03T16:58:38.215Z","type":"message"}
{"nick":"bradleymeck","message":"~ emscripten app.cc | node --source-name=app.wasm","date":"2017-08-03T16:59:13.605Z","type":"message"}
{"nick":"Fishrock123","message":"i'd rather --mode={wasm,ast,script,module} maybe?","date":"2017-08-03T16:59:22.792Z","type":"message"}
{"nick":"bradleymeck","message":"wasm has 2 modes, wasm-binary, wasm-text","date":"2017-08-03T16:59:47.667Z","type":"message"}
{"nick":"Fishrock123","message":"wasm-text is wast?","date":"2017-08-03T16:59:59.204Z","type":"message"}
{"nick":"bradleymeck","message":"at least with source-name we can give a bit nicer stack traces","date":"2017-08-03T17:00:02.586Z","type":"message"}
{"nick":"bradleymeck","message":"well JS is getting an AST form it looks like as well","date":"2017-08-03T17:00:11.925Z","type":"message"}
{"nick":"Fishrock123","message":"I'm not a fan of source-name personally","date":"2017-08-03T17:00:36.749Z","type":"message"}
{"nick":"bradleymeck","message":".wat I think is the extension for wasm ast proposed by their ppl","date":"2017-08-03T17:00:38.512Z","type":"message"}
{"nick":"Fishrock123","message":"mostly because there may not be a file involved at all","date":"2017-08-03T17:00:52.235Z","type":"message"}
{"nick":"bradleymeck","message":"there is always a source though","date":"2017-08-03T17:01:06.947Z","type":"message"}
{"nick":"Fishrock123","message":"so i'd rather use the actual mode names","date":"2017-08-03T17:01:09.101Z","type":"message"}
{"nick":"Fishrock123","message":"but it isn't a file?","date":"2017-08-03T17:01:21.280Z","type":"message"}
{"nick":"bradleymeck","message":"correct","date":"2017-08-03T17:01:26.274Z","type":"message"}
{"nick":"bradleymeck","message":"-e operates on strings","date":"2017-08-03T17:01:35.373Z","type":"message"}
{"nick":"Fishrock123","message":"so... not a file, no extension","date":"2017-08-03T17:01:36.922Z","type":"message"}
{"nick":"bradleymeck","message":"i will argue that any mode string should match extension by nature","date":"2017-08-03T17:01:56.508Z","type":"message"}
{"nick":"Fishrock123","message":"we don't say \"use js\"","date":"2017-08-03T17:02:17.482Z","type":"message"}
{"nick":"Fishrock123","message":"XD","date":"2017-08-03T17:02:19.986Z","type":"message"}
{"nick":"bradleymeck","message":"don't understand","date":"2017-08-03T17:02:30.650Z","type":"message"}
{"nick":"bradleymeck","message":"I*","date":"2017-08-03T17:02:32.622Z","type":"message"}
{"nick":"bradleymeck","message":"even with vm.Script you declare a file name even though it isn't necessarily backed by a file","date":"2017-08-03T17:03:43.409Z","type":"message"}
{"nick":"Fishrock123","message":"{--wasm-mode={binary,text}, --js-mode={sloppy,strict,module}}","date":"2017-08-03T17:03:51.791Z","type":"message"}
{"nick":"Fishrock123","message":"true","date":"2017-08-03T17:03:53.266Z","type":"message"}
{"nick":"bradleymeck","message":"--webpackage mode? --js-mode=ast","date":"2017-08-03T17:04:17.156Z","type":"message"}
{"nick":"bradleymeck","message":"thats a lot of extra knowledge","date":"2017-08-03T17:04:22.973Z","type":"message"}
{"nick":"Fishrock123","message":"--mode={.extension}?","date":"2017-08-03T17:04:39.191Z","type":"message"}
{"nick":"bradleymeck","message":"sure","date":"2017-08-03T17:04:52.438Z","type":"message"}
{"nick":"ljharb","message":"it's not really a \"mode\" tho","date":"2017-08-03T17:04:57.030Z","type":"message"}
{"nick":"Fishrock123","message":"I'm just thinking through this live btw","date":"2017-08-03T17:05:03.773Z","type":"message"}
{"nick":"ljharb","message":"it's just answering the question \"how do i parse the entry point\"","date":"2017-08-03T17:05:07.020Z","type":"message"}
{"nick":"Fishrock123","message":"it's a node mode","date":"2017-08-03T17:05:19.591Z","type":"message"}
{"nick":"Fishrock123","message":":P","date":"2017-08-03T17:05:20.691Z","type":"message"}
{"nick":"ljharb","message":"successive requires/imports won't follow that \"mode\"","date":"2017-08-03T17:05:22.799Z","type":"message"}
{"nick":"ljharb","message":"a mode is persistent","date":"2017-08-03T17:05:31.506Z","type":"message"}
{"nick":"ljharb","message":"like `--strict` (which is horrible and should still be explicitly blacklisted)","date":"2017-08-03T17:05:46.824Z","type":"message"}
{"nick":"Fishrock123","message":"--entry={.ext}? I suppose I'm mostly not a fan of naming the source \"file\" in that case, rather just keeping it as the default \"main\" or whatever it gets called","date":"2017-08-03T17:06:12.700Z","type":"message"}
{"nick":"ljharb","message":"`--entry-extension=mjs`, `--entry-extension=wasm`, etc?","date":"2017-08-03T17:06:33.729Z","type":"message"}
{"nick":"ljharb","message":"then it's explicitly delegating to the file extension logic","date":"2017-08-03T17:06:41.190Z","type":"message"}
{"nick":"ljharb","message":"and also just for the entry","date":"2017-08-03T17:06:45.210Z","type":"message"}
{"nick":"Fishrock123","message":"..........","date":"2017-08-03T17:06:49.948Z","type":"message"}
{"nick":"ljharb","message":"i know it's verbose","date":"2017-08-03T17:06:53.344Z","type":"message"}
{"nick":"ljharb","message":"but if that matters `--module` is a better choice, and deal with wasm when it comes","date":"2017-08-03T17:07:11.090Z","type":"message"}
{"nick":"Fishrock123","message":"are you saying that delegating to the extension is bad or not","date":"2017-08-03T17:07:16.612Z","type":"message"}
{"nick":"ljharb","message":"`--module` and `--wasm` can still be mutually exclusive","date":"2017-08-03T17:07:19.179Z","type":"message"}
{"nick":"ljharb","message":"Fishrock123: i'm saying that *conceptually*, this is a switch to inform node that you want it to treat your entry point *as if* it had a certain extension","date":"2017-08-03T17:07:38.663Z","type":"message"}
{"nick":"ljharb","message":"… and had been required","date":"2017-08-03T17:07:46.365Z","type":"message"}
{"nick":"bradleymeck","message":"but then we also need wasm-ast and js-binary-ast and webpackage, --module doesn't scale","date":"2017-08-03T17:07:47.357Z","type":"message"}
{"nick":"bradleymeck","message":"kind of the same problem as \"module\" in package.json","date":"2017-08-03T17:07:54.353Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: i have no idea what \"webpackage\" is, but sure, that's fair","date":"2017-08-03T17:08:02.853Z","type":"message"}
{"nick":"Fishrock123","message":".zip","date":"2017-08-03T17:08:11.160Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: .jar files","date":"2017-08-03T17:08:12.456Z","type":"message"}
{"nick":"ljharb","message":"lol k","date":"2017-08-03T17:08:17.340Z","type":"message"}
{"nick":"Fishrock123","message":"future-y ideas","date":"2017-08-03T17:08:25.340Z","type":"message"}
{"nick":"ljharb","message":"at any rate then i don't think brevity is the goal, it's extensibility and accuracy","date":"2017-08-03T17:08:30.838Z","type":"message"}
{"nick":"ljharb","message":"so, 1) it only applies to the entry point, 2) it's informing node how to parse the entry point, 3) file extension normally does that","date":"2017-08-03T17:08:47.590Z","type":"message"}
{"nick":"ljharb","message":"i think it's very elegant if you configure it by providing an extension","date":"2017-08-03T17:09:02.674Z","type":"message"}
{"nick":"ljharb","message":"also, this would only be needed when the entry point lacked an extension, or when you wanted to override it, no?","date":"2017-08-03T17:10:07.947Z","type":"message"}
{"nick":"howdoi","date":"2017-08-03T17:10:20.681Z","type":"join"}
{"nick":"ljharb","message":"ie, `node module.mjs` and `node foo.wasm` would all work, but then `node --ext=mjs module.js` would work","date":"2017-08-03T17:10:28.816Z","type":"message"}
{"nick":"Fishrock123","message":"it is necessart for the repl, --eval, and source | node","date":"2017-08-03T17:10:43.514Z","type":"message"}
{"nick":"Fishrock123","message":"no","date":"2017-08-03T17:10:49.431Z","type":"message"}
{"nick":"ljharb","message":"ok sure","date":"2017-08-03T17:11:01.557Z","type":"message"}
{"nick":"Fishrock123","message":"well","date":"2017-08-03T17:11:07.289Z","type":"message"}
{"nick":"ljharb","message":"so in all cases, you're providing what the extension *would* be, if it was a file","date":"2017-08-03T17:11:09.973Z","type":"message"}
{"nick":"Fishrock123","message":"that is up for discussion","date":"2017-08-03T17:11:11.297Z","type":"message"}
{"nick":"Fishrock123","message":"but I do not think that making extenstions work with otherwise named files would be the goal","date":"2017-08-03T17:11:25.321Z","type":"message"}
{"nick":"Fishrock123","message":"yes","date":"2017-08-03T17:11:28.729Z","type":"message"}
{"nick":"ljharb","message":"ok that's fine","date":"2017-08-03T17:11:30.003Z","type":"message"}
{"nick":"ljharb","message":"ok so then why not just `--ext=mjs` or `--ext=wasm`","date":"2017-08-03T17:11:38.276Z","type":"message"}
{"nick":"Fishrock123","message":"likely","date":"2017-08-03T17:11:43.691Z","type":"message"}
{"nick":"addaleax","date":"2017-08-03T17:11:46.901Z","type":"join"}
{"nick":"Fishrock123","message":"and .ext= in-repl command, but that will be... more complex to achieve","date":"2017-08-03T17:12:03.441Z","type":"message"}
{"nick":"ljharb","message":"the convo about whether existing extensions should be the default `--ext` is separate, and if that's a thing, then it follows that `--ext` would take precedence","date":"2017-08-03T17:12:05.417Z","type":"message"}
{"nick":"bradleymeck","message":"correct this is just for things that are opaque source texts (and kicking the repl into an initial mode)","date":"2017-08-03T17:12:07.632Z","type":"message"}
{"nick":"ljharb","message":"Fishrock123: \"in-repl\"?","date":"2017-08-03T17:12:11.361Z","type":"message"}
{"nick":"ljharb","message":"`node --ext=mjs` would start the repl in module mode too, no?","date":"2017-08-03T17:12:19.933Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: so `module.mjs` isn't opaque?","date":"2017-08-03T17:12:29.057Z","type":"message"}
{"nick":"bradleymeck","message":"it has file path meta-data since it is a fs lookup","date":"2017-08-03T17:12:42.233Z","type":"message"}
{"nick":"Fishrock123","message":"ljharb: it would be nice to switch modes in-repl","date":"2017-08-03T17:13:11.581Z","type":"message"}
{"nick":"Fishrock123","message":"as a .command","date":"2017-08-03T17:13:19.511Z","type":"message"}
{"nick":"Fishrock123","message":"https://nodejs.org/dist/latest-v8.x/docs/api/repl.html#repl_commands_and_special_keys","date":"2017-08-03T17:13:22.540Z","type":"message"}
{"nick":"ljharb","message":"Fishrock123: sure, ok - that seems like it's easy to add on based on whatever the CLI switch is","date":"2017-08-03T17:14:22.315Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: ok so then my thing above was right, that `node module.mjs` and `node --mjs module.js` would both parse as ESM?","date":"2017-08-03T17:14:43.047Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: (s/--mjs/whatever)","date":"2017-08-03T17:14:51.711Z","type":"message"}
{"nick":"bradleymeck","message":"node --ext=mjs module.js would more likely error since it doesn't make any sense","date":"2017-08-03T17:15:14.614Z","type":"message"}
{"nick":"ljharb","message":"ok that's even better :-)","date":"2017-08-03T17:15:24.598Z","type":"message"}
{"nick":"ljharb","message":"altho the .js people won't like that","date":"2017-08-03T17:15:33.229Z","type":"message"}
{"nick":"Fishrock123","message":"they won't like anything","date":"2017-08-03T17:15:54.119Z","type":"message"}
{"nick":"bradleymeck","message":"`node --ext=mjs module` probably has to succeed for shebangs :( (can we get rid of shebangs pretty please???)","date":"2017-08-03T17:16:02.233Z","type":"message"}
{"nick":"Fishrock123","message":"I mean, i really do dislike .mjs on a human level but it is a great technical solution","date":"2017-08-03T17:16:41.026Z","type":"message"}
{"nick":"Fishrock123","message":"bradleymeck: why?","date":"2017-08-03T17:16:57.362Z","type":"message"}
{"nick":"Fishrock123","message":"(why does it have to succeed?)","date":"2017-08-03T17:17:14.499Z","type":"message"}
{"nick":"bradleymeck","message":"how would I make `bin/my-express-app` run as a Module/WASM file when using `npm`","date":"2017-08-03T17:17:42.683Z","type":"message"}
{"nick":"bradleymeck","message":"npm just throws it into `node_modules/.bin` basically","date":"2017-08-03T17:17:57.369Z","type":"message"}
{"nick":"bradleymeck","message":"the shebang of `bin/my-express-app` is how you configure node","date":"2017-08-03T17:18:23.316Z","type":"message"}
{"nick":"octetcloud","message":"I like the simplicity of just using a different file extenstion, too, but the compalint raised about it (the reasonable one, IMO, some aren't) is that in the future when almost all javascript is using modules, all javascript will be .mjs, and there won't be an .js anymore, which seems a pit, its the obvious extension for javascript","date":"2017-08-03T17:18:39.433Z","type":"message"}
{"nick":"Fishrock123","message":"ohhh","date":"2017-08-03T17:18:57.220Z","type":"message"}
{"nick":"octetcloud","message":"s/pit/pity/.","date":"2017-08-03T17:18:58.418Z","type":"message"}
{"nick":"Fishrock123","message":"meh","date":"2017-08-03T17:19:15.432Z","type":"message"}
{"nick":"Fishrock123","message":"remember sys.js","date":"2017-08-03T17:19:38.272Z","type":"message"}
{"nick":"bradleymeck","message":"octetcloud: what happens when the next parse goal arrives after modules?","date":"2017-08-03T17:19:56.355Z","type":"message"}
{"nick":"Fishrock123","message":".js2020","date":"2017-08-03T17:20:14.727Z","type":"message"}
{"nick":"Fishrock123","message":".js2032","date":"2017-08-03T17:20:19.656Z","type":"message"}
{"nick":"bradleymeck","message":"someone did propose that somewhere","date":"2017-08-03T17:20:27.732Z","type":"message"}
{"nick":"Fishrock123","message":"yes","date":"2017-08-03T17:20:33.310Z","type":"message"}
{"nick":"Fishrock123","message":"right here","date":"2017-08-03T17:20:34.953Z","type":"message"}
{"nick":"bradleymeck","message":"no, it was on es-discuss","date":"2017-08-03T17:20:47.533Z","type":"message"}
{"nick":"Fishrock123","message":".js'16","date":"2017-08-03T17:20:48.303Z","type":"message"}
{"nick":"ljharb","message":"Fishrock123: lol true","date":"2017-08-03T17:20:52.464Z","type":"message"}
{"nick":"octetcloud","message":"will there be another? given the pain of this, and node being better represented, maybe inline annotations `'use js2020';` will be more seriously considered next time","date":"2017-08-03T17:21:07.953Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: oh yes it definitely has to work for shebangs, isn't that the whole reason there needs to be a switch?","date":"2017-08-03T17:21:09.341Z","type":"message"}
{"nick":"ljharb","message":"octetcloud: who cares what the \"obvious extension\" is tho really","date":"2017-08-03T17:21:23.366Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: no, there are more reasons","date":"2017-08-03T17:21:24.441Z","type":"message"}
{"nick":"ljharb","message":"octetcloud: like, is that the worst world you can imagine us being in?","date":"2017-08-03T17:21:29.590Z","type":"message"}
{"nick":"Fishrock123","message":"no? we just said -e, the repl, etc","date":"2017-08-03T17:21:34.269Z","type":"message"}
{"nick":"ljharb","message":"Fishrock123: oh right eval and the repl, fair","date":"2017-08-03T17:21:48.376Z","type":"message"}
{"nick":"bradleymeck","message":"octetcloud: given that we talked about AST as a parse goal last week and had a vision talk bring up \"dialects\"... probably?","date":"2017-08-03T17:21:52.673Z","type":"message"}
{"nick":"ljharb","message":"octetcloud: because if we don't pick a new file extension, i think we'd be in a place where modules aren't everywhere, ever.","date":"2017-08-03T17:21:58.056Z","type":"message"}
{"nick":"Fishrock123","message":"\"dialects\"?","date":"2017-08-03T17:22:05.199Z","type":"message"}
{"nick":"bradleymeck","message":"vague concept of having different flavors of JS in the same program","date":"2017-08-03T17:22:23.262Z","type":"message"}
{"nick":"ljharb","message":"at any rate i think after this, TC39 would be very hard-pressed to add another parse goal","date":"2017-08-03T17:22:29.075Z","type":"message"}
{"nick":"Fishrock123","message":"oh god","date":"2017-08-03T17:22:33.674Z","type":"message"}
{"nick":"ljharb","message":"no i mean, reluctant","date":"2017-08-03T17:22:40.018Z","type":"message"}
{"nick":"Fishrock123","message":"look maybe if you save it for like","date":"2017-08-03T17:22:58.947Z","type":"message"}
{"nick":"Fishrock123","message":"once every 2 decades","date":"2017-08-03T17:23:03.273Z","type":"message"}
{"nick":"ljharb","message":"the makeup of the committee now is very different than it was pre-ES6, and i, for one, would need lots of convincing for any new mode or parse goal","date":"2017-08-03T17:23:03.633Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: depends on rollout and how it goes","date":"2017-08-03T17:23:04.814Z","type":"message"}
{"nick":"starefossen","reason":"Ping timeout: 240 seconds","date":"2017-08-03T17:23:48.488Z","type":"quit"}
{"nick":"octetcloud","message":"hey, if you all like the extension, go for it. js has enough craziness, I'm OK with explaining to go developers as they learn js that they have to use .mjs because .js is some old language, and that its the only scripting language that cares how you name your files","date":"2017-08-03T17:23:59.936Z","type":"message"}
{"nick":"octetcloud","message":"every alternative seems to have some problems","date":"2017-08-03T17:24:34.643Z","type":"message"}
{"nick":"ljharb","message":"exactly","date":"2017-08-03T17:24:41.247Z","type":"message"}
{"nick":"Fishrock123","message":"it's ok","date":"2017-08-03T17:24:44.871Z","type":"message"}
{"nick":"Fishrock123","message":"we can still call it .tc39script","date":"2017-08-03T17:24:50.790Z","type":"message"}
{"nick":"bradleymeck","message":"octetcloud: other languages have multiple file extensions (canonical example of this was perl)","date":"2017-08-03T17:25:00.865Z","type":"message"}
{"nick":"ljharb","message":"the only way to keep .js for modules would have been if Module and Script were two modes in the same parse goal. but TC39 sailed that ship in ES6.","date":"2017-08-03T17:25:01.469Z","type":"message"}
{"nick":"octetcloud","message":"I  thought consensus was converging on package.json markup, that's not the case anymore I take it?","date":"2017-08-03T17:25:08.384Z","type":"message"}
{"nick":"Fishrock123","message":"consensus converging _where_?","date":"2017-08-03T17:25:24.296Z","type":"message"}
{"nick":"octetcloud","message":"bradley: you can call `perl sam-is-great.wunderchild` and it will work just fine","date":"2017-08-03T17:25:33.764Z","type":"message"}
{"nick":"bradleymeck","message":"octetcloud: .pl vs .pm","date":"2017-08-03T17:25:41.971Z","type":"message"}
{"nick":"ljharb","message":"octetcloud: not everything has package.json","date":"2017-08-03T17:25:47.502Z","type":"message"}
{"nick":"bradleymeck","message":"octetcloud: as per package.json , the https://github.com/nodejs/node-eps/pull/60 doesn't attempt to fight .mjs in anyway and thats how that front is looking","date":"2017-08-03T17:26:27.624Z","type":"message"}
{"nick":"taaz","reason":"Ping timeout: 240 seconds","date":"2017-08-03T17:26:35.535Z","type":"quit"}
{"nick":"octetcloud","message":"not everything has a file extension either, like scripts. but as long as we can do `#!/usr/bin/env node --some-magic`, should be ok.","date":"2017-08-03T17:26:38.798Z","type":"message"}
{"nick":"ljharb","message":"octetcloud: that is true","date":"2017-08-03T17:26:58.486Z","type":"message"}
{"nick":"bradleymeck","message":"mid of last year CTC voted on file extension, tried for unambiguous late last year, and now back to file extension","date":"2017-08-03T17:27:00.897Z","type":"message"}
{"nick":"starefossen","date":"2017-08-03T17:27:29.636Z","type":"join"}
{"nick":"taaz","date":"2017-08-03T17:27:37.497Z","type":"join"}
{"nick":"octetcloud","message":"`cat blah | node` as well. so will there be both a package.json AND a file extension? where the file extension is configurable? Just curious, I'm sure this will work its way out somehow","date":"2017-08-03T17:28:24.557Z","type":"message"}
{"nick":"bradleymeck","message":"\"use module\" is stalled/dead in TC39/Web, but node could implement it as a lone thing. though if you are not writing for node there isn't an incentive to write \"use module\" so same problem as \"use strict\"","date":"2017-08-03T17:28:32.294Z","type":"message"}
{"nick":"bradleymeck","message":"octetcloud: unknown on package.json, but def a file extension","date":"2017-08-03T17:28:45.694Z","type":"message"}
{"nick":"bradleymeck","message":"not configurable, just .mjs","date":"2017-08-03T17:28:57.555Z","type":"message"}
{"nick":"octetcloud","message":"ok, great that its not configurable","date":"2017-08-03T17:29:09.526Z","type":"message"}
{"nick":"Fishrock123","message":"I mean, it might end up being configurable","date":"2017-08-03T17:29:28.580Z","type":"message"}
{"nick":"bradleymeck","message":"I shudder at the though if more become needed","date":"2017-08-03T17:29:43.216Z","type":"message"}
{"nick":"bradleymeck","message":"thought*","date":"2017-08-03T17:29:47.592Z","type":"message"}
{"nick":"Fishrock123","message":"same","date":"2017-08-03T17:29:52.758Z","type":"message"}
{"nick":"octetcloud","message":"how much javascript code is there, really, that just magically doesn't call a single platform specific API and despite that it wasn't intentionally written to be browser+node, just magically works on node? I've never seen any, but that could just be where I sit","date":"2017-08-03T17:30:31.641Z","type":"message"}
{"nick":"bradleymeck","message":"tools are langing .mjs support already (VSCode has it out in stable release!)","date":"2017-08-03T17:30:40.412Z","type":"message"}
{"nick":"bradleymeck","message":"octetcloud: a fair bit of libraries that are not trying to do like lodash, data structures, etc.","date":"2017-08-03T17:31:19.443Z","type":"message"}
{"nick":"bradleymeck","message":"do that*","date":"2017-08-03T17:31:26.612Z","type":"message"}
{"nick":"bradleymeck","message":"things get a bit more interesting with ESM since you can't do feature detection prior to imports","date":"2017-08-03T17:31:55.705Z","type":"message"}
{"nick":"octetcloud","message":"lodash is a counter example, its carefully written to be browser+node, they even package themselves up in various ways to suit the targets","date":"2017-08-03T17:32:07.945Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-08-03T17:32:19.476Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T17:32:19.651Z","type":"part"}
{"nick":"octetcloud","message":"if lodash had to put a 'use module' into their code for node, they'd do it a hearbeat, I suspect","date":"2017-08-03T17:33:13.356Z","type":"message"}
{"nick":"bradleymeck","message":"octetcloud: stuff like polyfills https://www.npmjs.com/package/whatwg-url , or simple things like algorithms (check binary search package on npm) etc.","date":"2017-08-03T17:33:20.608Z","type":"message"}
{"nick":"bradleymeck","message":"octetcloud: I'm sure they would","date":"2017-08-03T17:33:32.894Z","type":"message"}
{"nick":"titankiller","reason":"Read error: Connection reset by peer","date":"2017-08-03T17:33:35.313Z","type":"quit"}
{"nick":"titankiller","date":"2017-08-03T17:34:02.542Z","type":"join"}
{"nick":"ljharb","message":"they'll also use .mjs in a heartbeat too tho.","date":"2017-08-03T17:34:05.089Z","type":"message"}
{"nick":"bradleymeck","message":"so, more than a few. Even most react things that want to do SSR work in both","date":"2017-08-03T17:34:20.660Z","type":"message"}
{"nick":"titankiller","reason":"Remote host closed the connection","date":"2017-08-03T17:34:22.865Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-08-03T17:34:24.456Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T17:34:24.631Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-08-03T17:35:14.773Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T17:35:14.986Z","type":"part"}
{"nick":"octetcloud","message":"it just seems to me that people who publish npm modules publish them to be specifically browser, specifically node, or specifically to work with both. sometimes they might publish a module that only works in one, but not for good reasons, and someone will request they add support for the other package, and they do. If that means adding inline pragmas, that doesn't seem a big deal to me. Basically, given that the js world is already","date":"2017-08-03T17:37:35.715Z","type":"message"}
{"nick":"octetcloud","message":"fractured into node and browser code, having to do a bit of extra work to make things work in both seems to me to not be a big deal.","date":"2017-08-03T17:37:37.307Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-08-03T17:37:52.844Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T17:37:53.019Z","type":"part"}
{"nick":"octetcloud","message":"bradleymeck: I'm not worried now, but if we ever have only esm, I have some very critical code that will fail because of non-conditional imports, places where I import or do not import code based on the platform or requested features. We can't even wrap try/catch around an import, can we?","date":"2017-08-03T17:38:54.249Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-08-03T17:39:02.844Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T17:39:03.054Z","type":"part"}
{"nick":"bradleymeck","message":"octetcloud: correct, you cannot. use `import()` for such behavior","date":"2017-08-03T17:39:22.003Z","type":"message"}
{"nick":"octetcloud","message":"but we will have common.js forever to deal with that?","date":"2017-08-03T17:39:50.842Z","type":"message"}
{"nick":"bradleymeck","message":"common.js will not be removed from node in any timeline I can imagine","date":"2017-08-03T17:40:21.489Z","type":"message"}
{"nick":"octetcloud","message":"ok, thanks, good to hear. and we can use common.js from esm code, right? and we can import binary addons into esm?","date":"2017-08-03T17:41:05.131Z","type":"message"}
{"nick":"octetcloud","message":"or will binary addons always need  require()?","date":"2017-08-03T17:41:20.647Z","type":"message"}
{"nick":"bradleymeck","message":"ESM was not designed to integrate w/ other module systems originally, but this has been covered by an interop strategy.","date":"2017-08-03T17:41:57.000Z","type":"message"}
{"nick":"bradleymeck","message":"Any non-ESM import such as JSON/C++/CJS will be treated as a single `default` export","date":"2017-08-03T17:42:33.303Z","type":"message"}
{"nick":"octetcloud","message":"ok, works for me","date":"2017-08-03T17:42:59.159Z","type":"message"}
{"nick":"bradleymeck","message":"the relationship of needing other module systems to be leaf nodes on ESM graphs was also just recently merged as a PR into the JS spec","date":"2017-08-03T17:43:04.359Z","type":"message"}
{"nick":"ljharb","message":"there's a stage 1 proposal that would allow conditional static imports, fwiw","date":"2017-08-03T17:45:44.593Z","type":"message"}
{"nick":"bradleymeck","message":"you mean the nested imports one?","date":"2017-08-03T17:47:06.438Z","type":"message"}
{"nick":"bradleymeck","message":"i'm still wary of top level await concerns","date":"2017-08-03T17:47:37.659Z","type":"message"}
{"nick":"bradleymeck","message":"i feel l ike those 2 things are going to be at odd","date":"2017-08-03T17:49:48.854Z","type":"message"}
{"nick":"bradleymeck","message":"s","date":"2017-08-03T17:49:50.334Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-08-03T17:52:42.596Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T17:52:42.806Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-08-03T17:53:31.667Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T17:53:31.842Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-08-03T17:59:16.706Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T17:59:16.918Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-08-03T18:01:24.039Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T18:01:24.213Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-08-03T18:02:48.396Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T18:02:48.572Z","type":"part"}
{"nick":"BridgeAR1","date":"2017-08-03T18:08:02.839Z","type":"join"}
{"nick":"BridgeAR","reason":"Read error: Connection reset by peer","date":"2017-08-03T18:08:03.604Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-08-03T18:26:57.516Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T18:26:57.737Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-08-03T18:28:56.610Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T18:28:56.800Z","type":"part"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-08-03T19:05:55.786Z","type":"quit"}
{"nick":"BridgeAR1","reason":"Quit: Leaving.","date":"2017-08-03T19:26:45.977Z","type":"quit"}
{"nick":"BridgeAR","date":"2017-08-03T19:27:15.372Z","type":"join"}
{"nick":"indistylo","reason":"Ping timeout: 260 seconds","date":"2017-08-03T19:39:30.672Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 276 seconds","date":"2017-08-03T19:48:19.703Z","type":"quit"}
{"nick":"addaleax","message":"TimothyGu: are you landing https://github.com/nodejs/node/pull/13870 ?","date":"2017-08-03T19:49:19.914Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-03T20:14:56.099Z","type":"quit"}
{"nick":"octetcloud","date":"2017-08-03T20:23:41.969Z","type":"join"}
{"nick":"Fishrock123","date":"2017-08-03T20:24:49.931Z","type":"join"}
{"nick":"chalker_","reason":"Ping timeout: 240 seconds","date":"2017-08-03T20:42:08.489Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 240 seconds","date":"2017-08-03T21:06:57.820Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-08-03T21:12:43.389Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T21:12:43.611Z","type":"part"}
{"nick":"chalker_","date":"2017-08-03T21:23:19.708Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-03T21:54:24.912Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-03T22:03:05.455Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-08-03T22:04:45.675Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T22:33:26.658Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-08-03T22:33:26.870Z","type":"part"}
{"nick":"mylesborins","message":"anyone see this?","date":"2017-08-03T22:56:18.539Z","type":"message"}
{"nick":"mylesborins","message":"https://debconf17.debconf.org/talks/129/","date":"2017-08-03T22:56:18.910Z","type":"message"}
{"nick":"mylesborins","message":"I might try and attend","date":"2017-08-03T22:56:22.374Z","type":"message"}
{"nick":"chalker_","reason":"Ping timeout: 276 seconds","date":"2017-08-03T23:01:22.698Z","type":"quit"}
