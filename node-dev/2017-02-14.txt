{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-02-14T00:04:39.761Z","type":"quit"}
{"nick":"yuvalb","reason":"Ping timeout: 276 seconds","date":"2017-02-14T00:22:30.929Z","type":"quit"}
{"nick":"yuvalb","date":"2017-02-14T00:22:44.093Z","type":"join"}
{"nick":"joyee","date":"2017-02-14T00:29:57.637Z","type":"join"}
{"nick":"BridgeAR","reason":"Ping timeout: 240 seconds","date":"2017-02-14T00:30:26.503Z","type":"quit"}
{"nick":"joyee","reason":"Ping timeout: 252 seconds","date":"2017-02-14T00:34:15.636Z","type":"quit"}
{"nick":"kahwee","reason":"Remote host closed the connection","date":"2017-02-14T00:39:10.288Z","type":"quit"}
{"nick":"chrislea","reason":"Quit: Leaving","date":"2017-02-14T00:49:09.701Z","type":"quit"}
{"nick":"poker","date":"2017-02-14T00:51:56.949Z","type":"join"}
{"nick":"poker","reason":"Ping timeout: 260 seconds","date":"2017-02-14T00:56:40.955Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-02-14T01:01:10.206Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-02-14T01:07:53.524Z","type":"quit"}
{"nick":"notarseniy","message":"hello! should we remove unused arguments in functions? like this case: https://github.com/nodejs/node/blob/master/lib/internal/child_process.js#L234  (i'm preparing PR for this file, so i'm interested)","date":"2017-02-14T01:13:33.560Z","type":"message"}
{"nick":"notarseniy","message":"is there some reason to have those?","date":"2017-02-14T01:14:10.804Z","type":"message"}
{"nick":"john51_","reason":"Ping timeout: 245 seconds","date":"2017-02-14T01:14:31.700Z","type":"quit"}
{"nick":"john51","date":"2017-02-14T01:16:11.535Z","type":"join"}
{"nick":"mscdex","message":"notarseniy: if anything they're usually there for performance reasons. V8 used to take into account parameter counts matching argument counts when making optimizations","date":"2017-02-14T01:16:30.138Z","type":"message"}
{"nick":"mscdex","message":"notarseniy: although personally I would rather avoid forEach() altogether in core and just use a normal for-loop","date":"2017-02-14T01:17:07.625Z","type":"message"}
{"nick":"mscdex","message":"notarseniy: but others may not be inclined to agree if the forEach() is in an especially hot path","date":"2017-02-14T01:17:41.704Z","type":"message"}
{"nick":"john51","reason":"Read error: Connection reset by peer","date":"2017-02-14T01:17:46.159Z","type":"quit"}
{"nick":"mscdex","message":"er is *not* in an especially hot path","date":"2017-02-14T01:17:56.328Z","type":"message"}
{"nick":"notarseniy","message":"mscdex: hmm, is there a place where i can read more about this optimization?","date":"2017-02-14T01:18:22.279Z","type":"message"}
{"nick":"mscdex","message":"notarseniy: probably not without reviewing V8's code","date":"2017-02-14T01:19:00.315Z","type":"message"}
{"nick":"mscdex","message":"notarseniy: and it may not be an issue anymore, i don't know","date":"2017-02-14T01:19:14.465Z","type":"message"}
{"nick":"mscdex","message":"notarseniy: but definitely until V8 inlines callbacks for functional APIs like forEach(), using a plain for-loop will be faster","date":"2017-02-14T01:20:08.401Z","type":"message"}
{"nick":"john51","date":"2017-02-14T01:21:12.753Z","type":"join"}
{"nick":"notarseniy","message":"mscdex: interesting! will rewrite this piece of code to for-loop since it is really looks like good idea","date":"2017-02-14T01:22:11.552Z","type":"message"}
{"nick":"notarseniy","message":"mscdex: thank you for response! :)","date":"2017-02-14T01:22:24.975Z","type":"message"}
{"nick":"john51","reason":"Read error: Connection reset by peer","date":"2017-02-14T01:22:54.325Z","type":"quit"}
{"nick":"john51","date":"2017-02-14T01:26:13.534Z","type":"join"}
{"nick":"chalker_","date":"2017-02-14T01:26:42.661Z","type":"join"}
{"nick":"john51","reason":"Read error: Connection reset by peer","date":"2017-02-14T01:27:47.649Z","type":"quit"}
{"nick":"john51","date":"2017-02-14T01:31:12.963Z","type":"join"}
{"nick":"john51","reason":"Read error: Connection reset by peer","date":"2017-02-14T01:32:51.023Z","type":"quit"}
{"nick":"troykelly","reason":"Quit: Farewell. So long.","date":"2017-02-14T01:33:28.979Z","type":"quit"}
{"nick":"zeptoTon","reason":"Remote host closed the connection","date":"2017-02-14T01:34:01.448Z","type":"quit"}
{"nick":"john51","date":"2017-02-14T01:36:19.978Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-02-14T01:38:08.339Z","type":"quit"}
{"nick":"zeptoTon","date":"2017-02-14T01:43:05.097Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T01:52:06.083Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T01:52:06.243Z","type":"part"}
{"nick":"kst123","date":"2017-02-14T01:54:53.153Z","type":"join"}
{"nick":"kst123","reason":"Remote host closed the connection","date":"2017-02-14T01:55:41.733Z","type":"quit"}
{"nick":"zeptoTon","reason":"Remote host closed the connection","date":"2017-02-14T01:59:51.493Z","type":"quit"}
{"nick":"zeptoTon","date":"2017-02-14T02:00:08.767Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T02:09:19.453Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T02:09:19.613Z","type":"part"}
{"nick":"chalker_","reason":"Ping timeout: 245 seconds","date":"2017-02-14T02:29:56.669Z","type":"quit"}
{"nick":"justicefries","date":"2017-02-14T02:33:24.772Z","type":"part"}
{"nick":"junex","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-02-14T02:42:39.729Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-02-14T03:00:43.365Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-02-14T03:07:59.110Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-02-14T03:10:23.549Z","type":"join"}
{"nick":"joyee","date":"2017-02-14T03:44:54.453Z","type":"join"}
{"nick":"junex","date":"2017-02-14T03:47:52.775Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T03:50:58.437Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T03:50:58.596Z","type":"part"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2017-02-14T03:57:38.149Z","type":"quit"}
{"nick":"joyee","date":"2017-02-14T03:58:08.769Z","type":"join"}
{"nick":"Fishrock123","date":"2017-02-14T04:03:23.674Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-02-14T04:31:50.533Z","type":"quit"}
{"nick":"troykelly","date":"2017-02-14T04:39:08.418Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T04:39:37.264Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T04:39:37.462Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-02-14T04:49:55.239Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T04:49:55.438Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-02-14T04:50:47.140Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T04:50:47.299Z","type":"part"}
{"nick":"notarseniy","reason":"Remote host closed the connection","date":"2017-02-14T05:06:02.450Z","type":"quit"}
{"nick":"notarseniy","date":"2017-02-14T05:07:54.167Z","type":"join"}
{"nick":"notarseniy","reason":"Remote host closed the connection","date":"2017-02-14T05:08:27.039Z","type":"quit"}
{"nick":"notarseniy","date":"2017-02-14T05:11:34.168Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T05:12:37.547Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T05:12:37.746Z","type":"part"}
{"nick":"notarseniy","reason":"Remote host closed the connection","date":"2017-02-14T05:35:14.395Z","type":"quit"}
{"nick":"troykelly","reason":"Quit: Farewell. So long.","date":"2017-02-14T05:37:21.922Z","type":"quit"}
{"nick":"scott_gonzalez","reason":"Remote host closed the connection","date":"2017-02-14T06:03:33.672Z","type":"quit"}
{"nick":"mgol","reason":"Remote host closed the connection","date":"2017-02-14T06:03:33.832Z","type":"quit"}
{"nick":"howdoi","date":"2017-02-14T06:06:00.335Z","type":"join"}
{"nick":"scott_gonzalez","date":"2017-02-14T06:07:34.723Z","type":"join"}
{"nick":"zeptoTon","reason":"Remote host closed the connection","date":"2017-02-14T06:19:23.053Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-02-14T06:21:27.856Z","type":"join"}
{"nick":"Fishrock123","reason":"Client Quit","date":"2017-02-14T06:22:44.136Z","type":"quit"}
{"nick":"lpin","date":"2017-02-14T06:33:54.183Z","type":"join"}
{"nick":"chalker_","date":"2017-02-14T06:36:26.280Z","type":"join"}
{"nick":"chalker_","reason":"Ping timeout: 240 seconds","date":"2017-02-14T06:40:36.214Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-02-14T06:49:02.566Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T06:49:02.726Z","type":"part"}
{"nick":"kahwee","date":"2017-02-14T07:17:00.998Z","type":"join"}
{"nick":"chalker_","date":"2017-02-14T07:21:00.271Z","type":"join"}
{"nick":"junex","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-02-14T07:24:09.244Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-02-14T07:25:05.576Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T07:25:05.774Z","type":"part"}
{"nick":"seishun","date":"2017-02-14T07:28:25.560Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-02-14T07:58:04.547Z","type":"quit"}
{"nick":"junex","date":"2017-02-14T08:15:18.920Z","type":"join"}
{"nick":"zeptoTon","date":"2017-02-14T08:19:52.994Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 240 seconds","date":"2017-02-14T08:24:11.768Z","type":"quit"}
{"nick":"zeptoTon","reason":"Ping timeout: 240 seconds","date":"2017-02-14T08:24:41.799Z","type":"quit"}
{"nick":"junex","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-02-14T08:31:29.531Z","type":"quit"}
{"nick":"junex","date":"2017-02-14T08:45:36.336Z","type":"join"}
{"nick":"mgol","date":"2017-02-14T08:52:11.333Z","type":"join"}
{"nick":"junex","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-02-14T08:52:56.002Z","type":"quit"}
{"nick":"junex","date":"2017-02-14T08:57:58.924Z","type":"join"}
{"nick":"junex","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-02-14T09:10:25.247Z","type":"quit"}
{"nick":"junex","date":"2017-02-14T09:44:38.450Z","type":"join"}
{"nick":"junex","reason":"Client Quit","date":"2017-02-14T09:45:56.200Z","type":"quit"}
{"nick":"junex","date":"2017-02-14T09:47:06.223Z","type":"join"}
{"nick":"junex","reason":"Client Quit","date":"2017-02-14T09:48:59.932Z","type":"quit"}
{"nick":"piscisaureus","date":"2017-02-14T10:14:14.225Z","type":"join"}
{"nick":"BridgeAR","date":"2017-02-14T10:15:04.802Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-02-14T10:18:40.268Z","type":"quit"}
{"nick":"kahwee","reason":"Remote host closed the connection","date":"2017-02-14T10:19:31.778Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-02-14T10:20:45.654Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T10:20:45.814Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-02-14T10:20:56.231Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T10:20:56.391Z","type":"part"}
{"nick":"zeptoTon","date":"2017-02-14T10:21:05.841Z","type":"join"}
{"nick":"zeptoTon","reason":"Ping timeout: 260 seconds","date":"2017-02-14T10:25:58.672Z","type":"quit"}
{"nick":"joyee","reason":"Remote host closed the connection","date":"2017-02-14T10:48:06.606Z","type":"quit"}
{"nick":"joyee","date":"2017-02-14T10:48:39.421Z","type":"join"}
{"nick":"mscdex","message":"Trott: when you get a chance, could you update your copy of make-node-meeting?","date":"2017-02-14T10:49:48.937Z","type":"message"}
{"nick":"joyee","reason":"Ping timeout: 240 seconds","date":"2017-02-14T10:52:49.416Z","type":"quit"}
{"nick":"lpin","reason":"Ping timeout: 255 seconds","date":"2017-02-14T11:09:14.681Z","type":"quit"}
{"nick":"kahwee","date":"2017-02-14T11:20:40.607Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-02-14T11:25:07.526Z","type":"quit"}
{"nick":"kahwee","reason":"Ping timeout: 260 seconds","date":"2017-02-14T11:25:28.605Z","type":"quit"}
{"nick":"mylesborins","date":"2017-02-14T11:25:38.185Z","type":"join"}
{"nick":"addaleax","reason":"Quit: ChatZilla 0.9.93 [Firefox 51.0.1/20170201180315]","date":"2017-02-14T11:31:48.114Z","type":"quit"}
{"nick":"piscisaureus","date":"2017-02-14T11:40:16.990Z","type":"quit"}
{"nick":"sj___","date":"2017-02-14T11:45:45.636Z","type":"join"}
{"nick":"lpin","date":"2017-02-14T11:51:42.111Z","type":"join"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-02-14T12:10:08.379Z","type":"quit"}
{"nick":"notarseniy","date":"2017-02-14T12:17:57.724Z","type":"join"}
{"nick":"zeptoTon","date":"2017-02-14T12:21:58.103Z","type":"join"}
{"nick":"kahwee","date":"2017-02-14T12:22:10.441Z","type":"join"}
{"nick":"zeptoTon","reason":"Ping timeout: 240 seconds","date":"2017-02-14T12:25:55.898Z","type":"quit"}
{"nick":"kahwee","reason":"Ping timeout: 240 seconds","date":"2017-02-14T12:26:29.424Z","type":"quit"}
{"nick":"tanuck","date":"2017-02-14T12:40:10.455Z","type":"join"}
{"nick":"joyee","date":"2017-02-14T12:50:26.550Z","type":"join"}
{"nick":"joyee","message":"Can we use citgm-smoker now? Is there a issue tracking its status?","date":"2017-02-14T13:19:43.389Z","type":"message"}
{"nick":"kahwee","date":"2017-02-14T13:23:08.671Z","type":"join"}
{"nick":"kahwee","reason":"Ping timeout: 255 seconds","date":"2017-02-14T13:27:50.663Z","type":"quit"}
{"nick":"joyee","reason":"Remote host closed the connection","date":"2017-02-14T13:30:05.590Z","type":"quit"}
{"nick":"joyee","date":"2017-02-14T13:30:33.237Z","type":"join"}
{"nick":"notarseniy","reason":"Remote host closed the connection","date":"2017-02-14T13:34:07.834Z","type":"quit"}
{"nick":"notarseniy","date":"2017-02-14T13:35:11.723Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T13:55:05.239Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T13:55:05.398Z","type":"part"}
{"nick":"sj___","reason":"Quit: Connection closed for inactivity","date":"2017-02-14T14:04:01.234Z","type":"quit"}
{"nick":"chalker_","reason":"Quit: Konversation terminated!","date":"2017-02-14T14:04:09.720Z","type":"quit"}
{"nick":"chalker_","date":"2017-02-14T14:04:22.781Z","type":"join"}
{"nick":"bradleymeck","date":"2017-02-14T14:18:47.438Z","type":"join"}
{"nick":"zeptoTon","date":"2017-02-14T14:22:54.979Z","type":"join"}
{"nick":"kahwee","date":"2017-02-14T14:23:55.849Z","type":"join"}
{"nick":"kahwee","reason":"Ping timeout: 240 seconds","date":"2017-02-14T14:28:25.796Z","type":"quit"}
{"nick":"bchar","reason":"Ping timeout: 258 seconds","date":"2017-02-14T14:41:48.179Z","type":"quit"}
{"nick":"richardlitt","reason":"Ping timeout: 258 seconds","date":"2017-02-14T14:42:11.343Z","type":"quit"}
{"nick":"bchar","date":"2017-02-14T14:42:47.263Z","type":"join"}
{"nick":"jxv","reason":"Ping timeout: 258 seconds","date":"2017-02-14T14:42:57.326Z","type":"quit"}
{"nick":"dagobert__","reason":"Ping timeout: 258 seconds","date":"2017-02-14T14:43:22.517Z","type":"quit"}
{"nick":"thefourtheye","reason":"Ping timeout: 258 seconds","date":"2017-02-14T14:43:22.517Z","type":"quit"}
{"nick":"jeenalee","reason":"Ping timeout: 258 seconds","date":"2017-02-14T14:43:22.518Z","type":"quit"}
{"nick":"wa7son","reason":"Ping timeout: 258 seconds","date":"2017-02-14T14:43:22.518Z","type":"quit"}
{"nick":"emilbayes","reason":"Ping timeout: 258 seconds","date":"2017-02-14T14:43:43.291Z","type":"quit"}
{"nick":"MLM_","reason":"Ping timeout: 258 seconds","date":"2017-02-14T14:43:43.291Z","type":"quit"}
{"nick":"jxv","date":"2017-02-14T14:45:56.583Z","type":"join"}
{"nick":"MLM_","date":"2017-02-14T14:46:04.494Z","type":"join"}
{"nick":"jeenalee","date":"2017-02-14T14:46:15.230Z","type":"join"}
{"nick":"dagobert__","date":"2017-02-14T14:46:32.302Z","type":"join"}
{"nick":"thefourtheye","date":"2017-02-14T14:48:58.570Z","type":"join"}
{"nick":"narayanants","date":"2017-02-14T14:52:57.946Z","type":"join"}
{"nick":"narayanants","reason":"Client Quit","date":"2017-02-14T14:53:24.820Z","type":"quit"}
{"nick":"timoxley","reason":"Ping timeout: 258 seconds","date":"2017-02-14T14:54:50.178Z","type":"quit"}
{"nick":"emilbayes","date":"2017-02-14T14:57:21.684Z","type":"join"}
{"nick":"timoxley","date":"2017-02-14T14:58:41.585Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T15:18:42.392Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T15:18:42.551Z","type":"part"}
{"nick":"joyee_","date":"2017-02-14T15:31:30.547Z","type":"join"}
{"nick":"joyee__","date":"2017-02-14T15:31:59.730Z","type":"join"}
{"nick":"joyee_","reason":"Read error: Connection reset by peer","date":"2017-02-14T15:34:05.997Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-02-14T15:34:21.564Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T15:34:21.724Z","type":"part"}
{"nick":"joyee","reason":"Ping timeout: 264 seconds","date":"2017-02-14T15:35:11.239Z","type":"quit"}
{"nick":"chalker_","reason":"Ping timeout: 245 seconds","date":"2017-02-14T15:39:06.801Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-02-14T15:45:09.402Z","type":"join"}
{"nick":"richardlitt","date":"2017-02-14T15:58:47.763Z","type":"join"}
{"nick":"tanuck","reason":"Ping timeout: 240 seconds","date":"2017-02-14T16:00:36.449Z","type":"quit"}
{"nick":"tanuck","date":"2017-02-14T16:03:32.797Z","type":"join"}
{"nick":"tanuck","reason":"Client Quit","date":"2017-02-14T16:03:59.209Z","type":"quit"}
{"nick":"evanlucas","message":"so with the new internal/errors.js, how are we going to handle errors that have a .code property already?","date":"2017-02-14T16:12:53.240Z","type":"message"}
{"nick":"addaleax","date":"2017-02-14T16:15:59.888Z","type":"join"}
{"nick":"eleon","date":"2017-02-14T16:17:54.582Z","type":"join"}
{"nick":"eleon","date":"2017-02-14T16:18:17.067Z","type":"part"}
{"nick":"junex","date":"2017-02-14T16:29:29.377Z","type":"join"}
{"nick":"junex","reason":"Client Quit","date":"2017-02-14T16:30:23.803Z","type":"quit"}
{"nick":"wa7son","date":"2017-02-14T16:37:50.752Z","type":"join"}
{"nick":"lpin","date":"2017-02-14T16:49:53.628Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T16:50:03.675Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T16:50:03.836Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-02-14T16:51:02.339Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T16:51:02.499Z","type":"part"}
{"nick":"Trott","message":"mscdex: Weird. I thought I had done that already some time ago, but sure enough, I was running an earlier version. Updated. Thanks.","date":"2017-02-14T16:54:42.302Z","type":"message"}
{"nick":"Fishrock123","message":"getting `../src/node.cc:1211:44: error: template argument for template type parameter must be a type .... TrackPromise`","date":"2017-02-14T16:55:18.818Z","type":"message"}
{"nick":"Fishrock123","message":"can someone explain how to make this a \"type\"? https://github.com/nodejs/node/pull/6375/files#diff-5aac4b5acb490de217dd425c4d5091f1","date":"2017-02-14T16:55:31.789Z","type":"message"}
{"nick":"Fishrock123","message":"Is it not already a class/struct?","date":"2017-02-14T16:55:39.182Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: you also have a `TrackPromise` function in node.cc","date":"2017-02-14T16:56:50.637Z","type":"message"}
{"nick":"addaleax","message":"at least in that diff there’s one","date":"2017-02-14T16:57:23.147Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-02-14T16:57:43.486Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T16:57:43.645Z","type":"part"}
{"nick":"Fishrock123","message":"doh","date":"2017-02-14T16:58:25.512Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-02-14T16:58:28.484Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T16:58:28.644Z","type":"part"}
{"nick":"Fishrock123","message":"tfw confused by your own patch","date":"2017-02-14T17:06:31.619Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: I think I asked you this the last time but I’m not sure whether you said anything… is there going to be a problem when two promises are rejected with the same reason?","date":"2017-02-14T17:07:06.624Z","type":"message"}
{"nick":"Fishrock123","message":"aren't reasons unique","date":"2017-02-14T17:07:28.572Z","type":"message"}
{"nick":"Fishrock123","message":"like they are spearate Locals","date":"2017-02-14T17:07:37.156Z","type":"message"}
{"nick":"Fishrock123","message":"no?","date":"2017-02-14T17:07:39.759Z","type":"message"}
{"nick":"addaleax","message":"but they can refer to the same JS object, right?","date":"2017-02-14T17:08:01.447Z","type":"message"}
{"nick":"Fishrock123","message":"not sure","date":"2017-02-14T17:08:12.203Z","type":"message"}
{"nick":"addaleax","message":"a = new Error(); Promise.reject(a); Promise.reject(a);","date":"2017-02-14T17:08:25.592Z","type":"message"}
{"nick":"addaleax","message":"those give different promises but their reason is `a` in both cases… or am i missing something?","date":"2017-02-14T17:08:53.407Z","type":"message"}
{"nick":"Fishrock123","message":"pretty sure the reason is like the return from a C++ TryCatch","date":"2017-02-14T17:08:56.107Z","type":"message"}
{"nick":"Fishrock123","message":"but I'm not certain","date":"2017-02-14T17:09:00.980Z","type":"message"}
{"nick":"Fishrock123","message":"either way, I'm not certain it matters","date":"2017-02-14T17:09:15.616Z","type":"message"}
{"nick":"ljharb","message":"in JS, the rejection reason can certainly be shared across multiple promises. no idea about in C++","date":"2017-02-14T17:09:16.930Z","type":"message"}
{"nick":"Fishrock123","message":"at least it shows you one of the errors","date":"2017-02-14T17:09:21.890Z","type":"message"}
{"nick":"Fishrock123","message":"Unless you have a better suggestion","date":"2017-02-14T17:09:38.158Z","type":"message"}
{"nick":"Fishrock123","message":"maybe I can just use a Stack of promises with weak persistents?","date":"2017-02-14T17:09:55.399Z","type":"message"}
{"nick":"Fishrock123","message":"I'm really not sure I just want it to work so I can re-open a new PR","date":"2017-02-14T17:10:07.920Z","type":"message"}
{"nick":"addaleax","message":"sorry, I haven’t had the time to dig through the actual semantics of the things in your PR ^^","date":"2017-02-14T17:10:16.977Z","type":"message"}
{"nick":"italoacasas","message":"I'm going to force push to v7.x-staging in 1m since I need to drop some commits as request from another member. Sorry if I break some backports PR's doing this...","date":"2017-02-14T17:10:30.987Z","type":"message"}
{"nick":"Fishrock123","message":"what are we dropping?","date":"2017-02-14T17:10:46.968Z","type":"message"}
{"nick":"italoacasas","message":"3 commits from the new url module","date":"2017-02-14T17:10:58.318Z","type":"message"}
{"nick":"Fishrock123","message":"italoacasas: wait so","date":"2017-02-14T17:11:06.780Z","type":"message"}
{"nick":"italoacasas","message":"conflicts in the spec right now with that changes","date":"2017-02-14T17:11:06.940Z","type":"message"}
{"nick":"Fishrock123","message":"oh","date":"2017-02-14T17:11:09.638Z","type":"message"}
{"nick":"Fishrock123","message":"nvm","date":"2017-02-14T17:11:11.051Z","type":"message"}
{"nick":"italoacasas","message":"k","date":"2017-02-14T17:11:16.494Z","type":"message"}
{"nick":"seishun","date":"2017-02-14T17:16:24.098Z","type":"join"}
{"nick":"TimothyGu","reason":"Quit: WeeChat 1.6","date":"2017-02-14T17:18:05.128Z","type":"quit"}
{"nick":"Fishrock123","message":"hmmmm `error: no matching member function for call to 'insert'` ... docs seem to say unordered_map has insert too?","date":"2017-02-14T17:19:03.218Z","type":"message"}
{"nick":"Fishrock123","message":"unhandled_reject_map.insert({promise_value, trackPromise});","date":"2017-02-14T17:19:23.137Z","type":"message"}
{"nick":"BridgeAR","reason":"Ping timeout: 240 seconds","date":"2017-02-14T17:19:41.767Z","type":"quit"}
{"nick":"Fishrock123","message":"note: candidate function not viable: no known conversion from 'pair<Local<[...]>, typename __make_pair_return<TrackPromise *&>::type>' to 'const pair<const Local<[...]>, mapped_type>' for 1st argument","date":"2017-02-14T17:23:37.352Z","type":"message"}
{"nick":"Fishrock123","message":"erm what","date":"2017-02-14T17:23:44.376Z","type":"message"}
{"nick":"seishun","message":"looks like the \"value\" has wrong type","date":"2017-02-14T17:24:50.510Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: might be good to paste your code somewhere?","date":"2017-02-14T17:24:58.515Z","type":"message"}
{"nick":"Fishrock123","message":"well yes","date":"2017-02-14T17:25:04.567Z","type":"message"}
{"nick":"Fishrock123","message":"sure uh","date":"2017-02-14T17:25:06.924Z","type":"message"}
{"nick":"seishun","message":"what's the type of unhandled_reject_map and trackPromise","date":"2017-02-14T17:25:14.094Z","type":"message"}
{"nick":"addaleax","message":"also I’m still pretty sure you can’t keep v8::Local variables anywhere but on the stack","date":"2017-02-14T17:25:22.922Z","type":"message"}
{"nick":"Fishrock123","message":"std::unordered_map<v8::Local<v8::Value>, class TrackPromise, int, Environment::v8LocalCompare> unhandled_reject_map;","date":"2017-02-14T17:25:30.369Z","type":"message"}
{"nick":"Fishrock123","message":"well it hasn't yelled about that part yet so","date":"2017-02-14T17:25:43.334Z","type":"message"}
{"nick":"addaleax","message":"well… you can’t have a Local without a HandleScope and HandleScopes need to be on the stack → it’s probably going to yell at you at runtime?","date":"2017-02-14T17:27:37.705Z","type":"message"}
{"nick":"seishun","message":"and the type of trackPromise?","date":"2017-02-14T17:28:17.167Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: & seishun: https://gist.github.com/Fishrock123/43d3d85bfa789be4fe6e31758fab6be5 ontop of https://github.com/nodejs/node/pull/6375/files","date":"2017-02-14T17:28:52.838Z","type":"message"}
{"nick":"Fishrock123","message":"@seishun https://github.com/nodejs/node/pull/6375/files#diff-5aac4b5acb490de217dd425c4d5091f1","date":"2017-02-14T17:29:04.418Z","type":"message"}
{"nick":"seishun","message":"don't see that line in either","date":"2017-02-14T17:30:14.238Z","type":"message"}
{"nick":"not-an-aardvark","date":"2017-02-14T17:31:58.378Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T17:32:05.720Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T17:32:05.880Z","type":"part"}
{"nick":"Fishrock123","message":"seishun: which line?","date":"2017-02-14T17:32:29.203Z","type":"message"}
{"nick":"seishun","message":"one with insert","date":"2017-02-14T17:32:39.310Z","type":"message"}
{"nick":"Fishrock123","message":"https://gist.github.com/Fishrock123/43d3d85bfa789be4fe6e31758fab6be5#file-trackpromise-diff-L63","date":"2017-02-14T17:33:01.467Z","type":"message"}
{"nick":"seishun","message":"now how do you apply a diff...","date":"2017-02-14T17:34:00.606Z","type":"message"}
{"nick":"Fishrock123","message":"I never remember ither","date":"2017-02-14T17:34:26.685Z","type":"message"}
{"nick":"Fishrock123","message":"I can get a patch file I think if that is better","date":"2017-02-14T17:34:34.219Z","type":"message"}
{"nick":"seishun","message":"oh, git apply worked","date":"2017-02-14T17:34:41.215Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-02-14T17:34:56.312Z","type":"quit"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-02-14T17:35:43.312Z","type":"quit"}
{"nick":"lpin","date":"2017-02-14T17:36:07.850Z","type":"join"}
{"nick":"troykelly","date":"2017-02-14T17:37:50.554Z","type":"join"}
{"nick":"seishun","message":"still building...","date":"2017-02-14T17:39:02.201Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-02-14T17:39:58.439Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T17:39:58.598Z","type":"part"}
{"nick":"seishun","message":"the visual studio error looks even scarier","date":"2017-02-14T17:43:53.756Z","type":"message"}
{"nick":"Fishrock123","message":"D:","date":"2017-02-14T17:44:02.701Z","type":"message"}
{"nick":"seishun","message":"'std::_List_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>> std::_Hash<std::_Umap_traits<_Kty,_Ty,std::_Uhash_compare<_Kty,_Hasher,_Keyeq>,_Alloc,false>>::insert(std::_List_const_iterator<std::_List_val<std::_List_simple_types<std::pair<const _Kty,_Ty>>>>,const std::pair<const _Kty,_Ty> &)': cannot convert argument 1 from 'std::pair<v8::Local<v8::Value>,node::TrackPromise *>' to 'std::pair<const _Kty,_Ty> &&'","date":"2017-02-14T17:44:18.489Z","type":"message"}
{"nick":"Fishrock123","message":"well then","date":"2017-02-14T17:44:26.510Z","type":"message"}
{"nick":"addaleax","message":"Doesn’t that basically mean that you pass a TrackPromise* but it needs a TrackPromise?","date":"2017-02-14T17:45:22.978Z","type":"message"}
{"nick":"Fishrock123","message":"... maybe?","date":"2017-02-14T17:45:35.045Z","type":"message"}
{"nick":"bradleymeck","date":"2017-02-14T17:46:00.412Z","type":"join"}
{"nick":"seishun","message":"it does","date":"2017-02-14T17:46:02.345Z","type":"message"}
{"nick":"Fishrock123","message":"uh","date":"2017-02-14T17:46:32.352Z","type":"message"}
{"nick":"Fishrock123","message":"does &tp give me ** then?","date":"2017-02-14T17:46:41.841Z","type":"message"}
{"nick":"Fishrock123","message":"how do i get the actual thing?","date":"2017-02-14T17:46:48.011Z","type":"message"}
{"nick":"Fishrock123","message":"*tp?","date":"2017-02-14T17:46:51.084Z","type":"message"}
{"nick":"addaleax","message":"*tp, yeah","date":"2017-02-14T17:46:56.733Z","type":"message"}
{"nick":"addaleax","message":"but maybe the map /should/ have TrackPromise* keys?","date":"2017-02-14T17:47:34.699Z","type":"message"}
{"nick":"Fishrock123","message":"again, just trying to get things to function at all","date":"2017-02-14T17:47:53.432Z","type":"message"}
{"nick":"Fishrock123","message":"but I would agree","date":"2017-02-14T17:48:01.754Z","type":"message"}
{"nick":"Fishrock123","message":"Probably mor elike Stack<TrackPromise*> actually","date":"2017-02-14T17:48:12.442Z","type":"message"}
{"nick":"seishun","message":"that means that when you look up with a copy of the TrackPromise it won't be found","date":"2017-02-14T17:48:36.699Z","type":"message"}
{"nick":"seishun","message":"if you use TrackPromise* that is","date":"2017-02-14T17:48:47.224Z","type":"message"}
{"nick":"seishun","message":"wait, it's a value, not a key","date":"2017-02-14T17:49:19.393Z","type":"message"}
{"nick":"seishun","message":"if you use pointers for the value, then you'll have to manage their lifetimes yourself","date":"2017-02-14T17:52:37.246Z","type":"message"}
{"nick":"BridgeAR","date":"2017-02-14T17:52:53.802Z","type":"join"}
{"nick":"Fishrock123","message":"I think that is fine","date":"2017-02-14T17:53:05.421Z","type":"message"}
{"nick":"Fishrock123","message":"we already get GC notification","date":"2017-02-14T17:53:14.706Z","type":"message"}
{"nick":"Fishrock123","message":"and on the other side, if no GC happens we hold until the process dies","date":"2017-02-14T17:53:25.622Z","type":"message"}
{"nick":"Trott","message":"I would welcome some CTC feedback on https://github.com/nodejs/node/pull/11220#issuecomment-279781389. Not sure if this is well-known, discussed, and decided, and I just missed it mostly. Or if it's a surprise to some. Or something else.","date":"2017-02-14T17:58:08.597Z","type":"message"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2017-02-14T17:58:23.921Z","type":"nick"}
{"nick":"seishun","reason":"Ping timeout: 260 seconds","date":"2017-02-14T18:08:13.574Z","type":"quit"}
{"nick":"sj___","date":"2017-02-14T18:13:28.419Z","type":"join"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2017-02-14T18:19:21.467Z","type":"nick"}
{"nick":"BridgeAR","reason":"Read error: Connection reset by peer","date":"2017-02-14T18:19:24.427Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-02-14T18:23:21.556Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T18:23:21.715Z","type":"part"}
{"nick":"Fishrock123","message":"new diff, struck on some indirect error: https://gist.github.com/Fishrock123/43d3d85bfa789be4fe6e31758fab6be5","date":"2017-02-14T18:30:30.812Z","type":"message"}
{"nick":"Fishrock123","message":"something related to v8LocalHash in env.h I think","date":"2017-02-14T18:30:42.460Z","type":"message"}
{"nick":"seishun","date":"2017-02-14T18:31:58.175Z","type":"join"}
{"nick":"lpin","reason":"Ping timeout: 240 seconds","date":"2017-02-14T18:32:25.597Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-02-14T18:36:27.624Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T18:36:27.784Z","type":"part"}
{"nick":"Fishrock123","action":"I swear someday i'll understand what the compiler yells at me","date":"2017-02-14T18:36:38.387Z","type":"action"}
{"nick":"Fishrock123","message":"Maybe TrackPromise needs to actually implement `bool operator==` ?","date":"2017-02-14T18:37:51.960Z","type":"message"}
{"nick":"seishun","message":"Fishrock123: give diff and I'll take a look","date":"2017-02-14T18:38:30.653Z","type":"message"}
{"nick":"Fishrock123","message":"diff is above, let me try something before you bother tho","date":"2017-02-14T18:38:50.788Z","type":"message"}
{"nick":"Fishrock123","message":"hmmm I think storing the Isolate* on the TrackPromise is probably a bad idea?","date":"2017-02-14T18:46:09.036Z","type":"message"}
{"nick":"Fishrock123","message":"I don't think there is a wya to get the value out of the persistent during the == operation without doing that","date":"2017-02-14T18:46:26.239Z","type":"message"}
{"nick":"addaleax","message":"storing the Isolate* or the Environment* should be okay","date":"2017-02-14T18:47:13.022Z","type":"message"}
{"nick":"Fishrock123","message":"Oh?","date":"2017-02-14T18:47:20.655Z","type":"message"}
{"nick":"addaleax","message":"it just seems like a waste of space","date":"2017-02-14T18:47:35.565Z","type":"message"}
{"nick":"Fishrock123","message":"How do I do that on the subclass?","date":"2017-02-14T18:47:38.401Z","type":"message"}
{"nick":"Fishrock123","message":"how so","date":"2017-02-14T18:47:44.653Z","type":"message"}
{"nick":"addaleax","message":"having every TrackPromise in the map have the same pointer field with the same value seems a bit redundant?","date":"2017-02-14T18:48:13.042Z","type":"message"}
{"nick":"Fishrock123","message":"oh","date":"2017-02-14T18:48:40.914Z","type":"message"}
{"nick":"Fishrock123","message":"I don't disagree","date":"2017-02-14T18:48:44.216Z","type":"message"}
{"nick":"BridgeAR","date":"2017-02-14T18:48:50.514Z","type":"join"}
{"nick":"addaleax","message":"nah, you don’t need to do that","date":"2017-02-14T18:48:57.256Z","type":"message"}
{"nick":"Fishrock123","message":"uh","date":"2017-02-14T18:49:17.363Z","type":"message"}
{"nick":"addaleax","message":"you can pass instances of Hash and KeyEqual to the unordered_map constructor","date":"2017-02-14T18:49:18.336Z","type":"message"}
{"nick":"addaleax","message":"and these instances can have backrefs to the Environment*","date":"2017-02-14T18:49:41.162Z","type":"message"}
{"nick":"Fishrock123","message":"...::Hash?","date":"2017-02-14T18:49:43.973Z","type":"message"}
{"nick":"addaleax","message":"3rd and 4th template parameter of unordered_map","date":"2017-02-14T18:50:20.258Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-02-14T18:50:22.095Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T18:50:22.255Z","type":"part"}
{"nick":"addaleax","message":"wait","date":"2017-02-14T18:50:29.689Z","type":"message"}
{"nick":"addaleax","message":"sorry, getting confused – why does TrackPromise need == ?","date":"2017-02-14T18:50:39.785Z","type":"message"}
{"nick":"Fishrock123","message":"http://stackoverflow.com/questions/17016175/c-unordered-map-using-a-custom-class-type-as-the-key","date":"2017-02-14T18:50:49.508Z","type":"message"}
{"nick":"Fishrock123","message":"maybe it doesn't","date":"2017-02-14T18:50:58.899Z","type":"message"}
{"nick":"addaleax","message":"but TrackPromise is the value, not the key, right?","date":"2017-02-14T18:51:08.940Z","type":"message"}
{"nick":"Fishrock123","message":"oh","date":"2017-02-14T18:51:21.979Z","type":"message"}
{"nick":"Fishrock123","message":"<_<","date":"2017-02-14T18:51:25.027Z","type":"message"}
{"nick":"addaleax","message":"but anyway, if you want/need/… custom V8-based comparison functions for the Key, you will want to implement that using custom Hash and KeyEqual types","date":"2017-02-14T18:52:06.681Z","type":"message"}
{"nick":"Fishrock123","message":"well I'm not sure why my last patch didn't work then","date":"2017-02-14T18:52:46.807Z","type":"message"}
{"nick":"seishun","message":"what's the error?","date":"2017-02-14T18:53:24.259Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-02-14T18:55:16.637Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T18:55:16.797Z","type":"part"}
{"nick":"Fishrock123","message":"https://gist.github.com/Fishrock123/ef7572ebb0b5448de88e85644b487aa6","date":"2017-02-14T18:55:20.864Z","type":"message"}
{"nick":"Fishrock123","message":"seishun: ^","date":"2017-02-14T18:55:26.602Z","type":"message"}
{"nick":"BridgeAR","reason":"Ping timeout: 260 seconds","date":"2017-02-14T18:55:49.415Z","type":"quit"}
{"nick":"Fishrock123","message":"for this patch: https://gist.github.com/Fishrock123/43d3d85bfa789be4fe6e31758fab6be5","date":"2017-02-14T18:55:52.916Z","type":"message"}
{"nick":"Fishrock123","message":"brb gona eat lunch","date":"2017-02-14T18:55:56.111Z","type":"message"}
{"nick":"seishun","message":"well copying a map copies all the keys and values","date":"2017-02-14T18:56:22.418Z","type":"message"}
{"nick":"addaleax","message":"right, I think you might want to move it","date":"2017-02-14T18:56:33.511Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-02-14T19:02:17.713Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T19:02:17.910Z","type":"part"}
{"nick":"Fishrock123","message":"um","date":"2017-02-14T19:02:49.575Z","type":"message"}
{"nick":"Fishrock123","message":"pardon?","date":"2017-02-14T19:02:55.713Z","type":"message"}
{"nick":"addaleax","message":"env->promise_unhandled_reject_map = promise_reject_map;","date":"2017-02-14T19:03:17.711Z","type":"message"}
{"nick":"addaleax","message":"that’s a full copy operation, not just reference assignment like in JS","date":"2017-02-14T19:03:34.274Z","type":"message"}
{"nick":"addaleax","message":"using std::move(promise_reject_map) as the right hand side might help (not 100 % sure myself)","date":"2017-02-14T19:03:52.961Z","type":"message"}
{"nick":"Fishrock123","message":"that map is not initialized tho","date":"2017-02-14T19:03:58.221Z","type":"message"}
{"nick":"Fishrock123","message":"err","date":"2017-02-14T19:04:05.409Z","type":"message"}
{"nick":"Fishrock123","message":"I think?????","date":"2017-02-14T19:04:08.187Z","type":"message"}
{"nick":"addaleax","message":"the compiler doesn’t know/care that at that point","date":"2017-02-14T19:04:16.549Z","type":"message"}
{"nick":"seishun","message":"which map isn't initialized","date":"2017-02-14T19:04:40.891Z","type":"message"}
{"nick":"addaleax","message":"once you copy maps, you need to specify how to do that, whether you know that they are empty or not :/","date":"2017-02-14T19:04:41.090Z","type":"message"}
{"nick":"Fishrock123","message":"OH","date":"2017-02-14T19:04:44.824Z","type":"message"}
{"nick":"Fishrock123","message":"wait do i need to move it each time I grab the reference?","date":"2017-02-14T19:04:53.788Z","type":"message"}
{"nick":"seishun","message":"what does that even mean","date":"2017-02-14T19:04:56.505Z","type":"message"}
{"nick":"Fishrock123","message":"maybe I should just err","date":"2017-02-14T19:05:04.745Z","type":"message"}
{"nick":"Fishrock123","message":"well use a reference in the first place","date":"2017-02-14T19:05:10.604Z","type":"message"}
{"nick":"Fishrock123","message":"std::unordered_map<v8::Local<v8::Value>, TrackPromise, v8LocalHash, v8LocalCompare>* promise_unhandled_reject_map","date":"2017-02-14T19:05:33.460Z","type":"message"}
{"nick":"Fishrock123","message":"note the *","date":"2017-02-14T19:05:37.705Z","type":"message"}
{"nick":"seishun","message":"that's a pointer, not a reference","date":"2017-02-14T19:05:41.519Z","type":"message"}
{"nick":"Fishrock123","message":"I think?","date":"2017-02-14T19:05:41.842Z","type":"message"}
{"nick":"Fishrock123","message":"(aren't those the same?)","date":"2017-02-14T19:05:58.476Z","type":"message"}
{"nick":"seishun","message":"no, reference is T&","date":"2017-02-14T19:06:05.679Z","type":"message"}
{"nick":"Fishrock123","message":"Or are references like, the actual thing?","date":"2017-02-14T19:06:09.259Z","type":"message"}
{"nick":"addaleax","message":"references are a thing of their own, but kinda like pointers :P","date":"2017-02-14T19:06:32.187Z","type":"message"}
{"nick":"addaleax","message":"anyway, using a pointer should be fine","date":"2017-02-14T19:06:37.109Z","type":"message"}
{"nick":"Fishrock123","action":"*sobbing*","date":"2017-02-14T19:06:39.713Z","type":"action"}
{"nick":"seishun","message":"not sure how you're assigning a pointer to a map to a map","date":"2017-02-14T19:08:07.847Z","type":"message"}
{"nick":"addaleax","message":"er, yeah, i mean, using pointers everywhere","date":"2017-02-14T19:08:33.468Z","type":"message"}
{"nick":"addaleax","message":"it’s probably not necessary","date":"2017-02-14T19:08:46.387Z","type":"message"}
{"nick":"addaleax","message":"but a bit easier to write…","date":"2017-02-14T19:08:52.165Z","type":"message"}
{"nick":"seishun","message":"using pointer will likely just lead to more confusion","date":"2017-02-14T19:09:11.626Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-02-14T19:11:37.722Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T19:11:37.882Z","type":"part"}
{"nick":"seishun","message":"since when does cloning node take so long","date":"2017-02-14T19:13:27.999Z","type":"message"}
{"nick":"ljharb","message":"you must have done `.cloneNode(true)`","date":"2017-02-14T19:15:03.508Z","type":"message"}
{"nick":"ljharb","message":"(that's a web dev joke)","date":"2017-02-14T19:15:09.350Z","type":"message"}
{"nick":"Fishrock123","message":"seishun: ICU, newer V8, other stuff","date":"2017-02-14T19:19:26.221Z","type":"message"}
{"nick":"seishun","message":"newer means bigger? D:","date":"2017-02-14T19:19:44.464Z","type":"message"}
{"nick":"Fishrock123","message":"I'm not sure but I get the impression the diffs are fairly large","date":"2017-02-14T19:20:10.745Z","type":"message"}
{"nick":"addaleax","message":"the repo has the full history… so, yeah :P","date":"2017-02-14T19:20:10.903Z","type":"message"}
{"nick":"Fishrock123","message":"hmmm, switched to pointers, same error?","date":"2017-02-14T19:24:35.505Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: that entire env->promise_unhandled_reject_map = promise_reject_map; line would be no-op right now anyway","date":"2017-02-14T19:24:49.014Z","type":"message"}
{"nick":"addaleax","message":"no?","date":"2017-02-14T19:25:00.996Z","type":"message"}
{"nick":"Fishrock123","message":"still? https://gist.github.com/Fishrock123/43d3d85bfa789be4fe6e31758fab6be5#file-trackpromise-diff-L100","date":"2017-02-14T19:25:24.917Z","type":"message"}
{"nick":"addaleax","message":"what is that line actually supposed to do? ;)","date":"2017-02-14T19:26:09.049Z","type":"message"}
{"nick":"addaleax","message":"also, you can’t really store pointers to stack-allocated objects on the Environment","date":"2017-02-14T19:26:29.549Z","type":"message"}
{"nick":"Fishrock123","message":"well, the error log is showrter so there's that: https://gist.github.com/Fishrock123/ef7572ebb0b5448de88e85644b487aa6","date":"2017-02-14T19:26:41.891Z","type":"message"}
{"nick":"junex","date":"2017-02-14T19:27:05.878Z","type":"join"}
{"nick":"Fishrock123","message":"addaleax: um, make the map? i don't really \"get\" how std:: -maps are initialized","date":"2017-02-14T19:27:13.569Z","type":"message"}
{"nick":"Fishrock123","message":"so... I need to create it on the env and get pointers to that?","date":"2017-02-14T19:27:45.041Z","type":"message"}
{"nick":"addaleax","message":"so… just create the unordered_map field on the Environment, no pointers or anything","date":"2017-02-14T19:28:15.822Z","type":"message"}
{"nick":"seishun","message":"the way they are initialized isn't much different from vectors","date":"2017-02-14T19:28:19.145Z","type":"message"}
{"nick":"addaleax","message":"member fields will automatically be initialized when the Environment itself is created","date":"2017-02-14T19:28:43.125Z","type":"message"}
{"nick":"Fishrock123","message":"unfortunately I've never actually used Vectors in c++","date":"2017-02-14T19:28:49.525Z","type":"message"}
{"nick":"seishun","message":"what about strings","date":"2017-02-14T19:29:13.707Z","type":"message"}
{"nick":"seishun","message":"they are also pretty much the same","date":"2017-02-14T19:29:34.664Z","type":"message"}
{"nick":"Fishrock123","message":"https://gist.github.com/Fishrock123/43d3d85bfa789be4fe6e31758fab6be5 still returns the last error. Declared the map on Env and they grabbed pointers to ot","date":"2017-02-14T19:30:27.478Z","type":"message"}
{"nick":"addaleax","message":"That’s because TrackPromise has a v8::Persistent field and vanilla Persistents are un-copy-able","date":"2017-02-14T19:32:19.550Z","type":"message"}
{"nick":"addaleax","message":"but unordered_map needs a way to copy its values/keys","date":"2017-02-14T19:32:33.239Z","type":"message"}
{"nick":"addaleax","message":"you might be best of just using TrackPromise* as the value type","date":"2017-02-14T19:32:51.324Z","type":"message"}
{"nick":"addaleax","message":"especially if TrackPromise::New gives you a pointer anyway","date":"2017-02-14T19:33:06.287Z","type":"message"}
{"nick":"TimothyGu","date":"2017-02-14T19:41:47.792Z","type":"join"}
{"nick":"Fishrock123","message":"ok so now it mostly compiles... but I get an undefined symbol? https://gist.github.com/Fishrock123/6297b22d752cef8bb96c82dea0e8cfc9","date":"2017-02-14T19:44:21.537Z","type":"message"}
{"nick":"addaleax","message":"right – why is persistent() labelled inline if it isn’t inline?","date":"2017-02-14T19:45:51.851Z","type":"message"}
{"nick":"Fishrock123","message":"anyone's guess really","date":"2017-02-14T19:47:07.367Z","type":"message"}
{"nick":"Fishrock123","message":"omg it compiles","date":"2017-02-14T19:47:41.748Z","type":"message"}
{"nick":"Fishrock123","message":"and one of my tests segfaults, nice nice","date":"2017-02-14T19:49:21.002Z","type":"message"}
{"nick":"seishun","message":"this is almost literally one of nolyc's factoids","date":"2017-02-14T19:49:52.414Z","type":"message"}
{"nick":"seishun","message":"\"It works it works! Omg omg omg! I mean it compiles. Now what's a segfault?\"","date":"2017-02-14T19:49:54.876Z","type":"message"}
{"nick":"Fishrock123","message":"lol","date":"2017-02-14T19:51:57.930Z","type":"message"}
{"nick":"joyee__","reason":"Remote host closed the connection","date":"2017-02-14T19:59:59.966Z","type":"quit"}
{"nick":"joyee","date":"2017-02-14T20:00:41.717Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 268 seconds","date":"2017-02-14T20:05:22.715Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-02-14T20:08:40.422Z","type":"quit"}
{"nick":"junex","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-02-14T20:12:19.514Z","type":"quit"}
{"nick":"junex","date":"2017-02-14T20:14:30.956Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T20:15:10.182Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T20:15:10.342Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-02-14T20:15:28.548Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T20:15:28.708Z","type":"part"}
{"nick":"junex","reason":"Client Quit","date":"2017-02-14T20:17:57.067Z","type":"quit"}
{"nick":"kahwee","date":"2017-02-14T20:21:13.643Z","type":"join"}
{"nick":"junex","date":"2017-02-14T20:22:44.510Z","type":"join"}
{"nick":"kahwee","reason":"Ping timeout: 240 seconds","date":"2017-02-14T20:27:36.659Z","type":"quit"}
{"nick":"kahwee","date":"2017-02-14T20:33:28.119Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T20:35:11.127Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T20:35:11.326Z","type":"part"}
{"nick":"Fishrock123","message":"hmmm I assume this segfault is becaus eof the Locals-off-stakc thing","date":"2017-02-14T20:48:40.389Z","type":"message"}
{"nick":"Fishrock123","message":"Storing them in a strong persistent should be enough, right?","date":"2017-02-14T20:48:51.060Z","type":"message"}
{"nick":"addaleax","message":"I guess… you’ll need copyable Persistents for that and I am not really sure how to properly get those","date":"2017-02-14T20:49:35.205Z","type":"message"}
{"nick":"addaleax","message":"also, are you using a debug build? I would have guess invalid Locals would fail with some “nice” abort message","date":"2017-02-14T20:50:19.279Z","type":"message"}
{"nick":"Fishrock123","message":"no, I will try that","date":"2017-02-14T20:50:49.620Z","type":"message"}
{"nick":"addaleax","message":"it takes ages to compile but it’s probably worth it ;)","date":"2017-02-14T20:51:40.103Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-02-14T20:57:30.663Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T20:57:30.862Z","type":"part"}
{"nick":"Fishrock123","message":"eh, ccache ;P","date":"2017-02-14T20:59:21.068Z","type":"message"}
{"nick":"addaleax","message":"yeah… but even with ccache it’s so much i prefer not to do that on my regular machine :/","date":"2017-02-14T21:00:16.472Z","type":"message"}
{"nick":"Fishrock123","message":"> FATAL ERROR: v8::Object::Cast Could not convert to object","date":"2017-02-14T21:00:49.359Z","type":"message"}
{"nick":"Fishrock123","message":"hmmmmmm","date":"2017-02-14T21:00:52.500Z","type":"message"}
{"nick":"Fishrock123","message":"maybe it's something different, must be that As<Object>(), I thought that would always be a Local<Object> though","date":"2017-02-14T21:01:38.086Z","type":"message"}
{"nick":"addaleax","message":"Mh… reasons don’t have to be objects either, right?","date":"2017-02-14T21:03:05.519Z","type":"message"}
{"nick":"Fishrock123","message":".... correct","date":"2017-02-14T21:04:31.182Z","type":"message"}
{"nick":"Fishrock123","message":"Only v8::Object has GetIndentityHash though","date":"2017-02-14T21:04:56.561Z","type":"message"}
{"nick":"Fishrock123","message":"oh","date":"2017-02-14T21:05:37.452Z","type":"message"}
{"nick":"Fishrock123","message":"Symbols and Strings too","date":"2017-02-14T21:05:41.801Z","type":"message"}
{"nick":"Fishrock123","message":"maybe Reason is a String","date":"2017-02-14T21:05:53.069Z","type":"message"}
{"nick":"Fishrock123","message":"or v8::Name rather","date":"2017-02-14T21:06:04.187Z","type":"message"}
{"nick":"addaleax","message":"you could just return 0 for anything else… in practice Promise.reject(null) should be rare enough?","date":"2017-02-14T21:06:31.282Z","type":"message"}
{"nick":"Fishrock123","message":"I really have no idea, but I think Reason is some sort of stacktrace regardless","date":"2017-02-14T21:07:07.035Z","type":"message"}
{"nick":"addaleax","message":"huh? reason is just the value the promise was rejected with","date":"2017-02-14T21:07:44.230Z","type":"message"}
{"nick":"addaleax","message":"that should not be inherently related to stack traces in any way","date":"2017-02-14T21:08:07.006Z","type":"message"}
{"nick":"notarseniy","reason":"Read error: No route to host","date":"2017-02-14T21:09:13.945Z","type":"quit"}
{"nick":"notarsen_","date":"2017-02-14T21:09:16.572Z","type":"join"}
{"nick":"Fishrock123","message":"Perhaps we are not talking about the same thing","date":"2017-02-14T21:10:18.262Z","type":"message"}
{"nick":"addaleax","message":"maybe :D","date":"2017-02-14T21:10:27.694Z","type":"message"}
{"nick":"troykelly_","date":"2017-02-14T21:11:10.086Z","type":"join"}
{"nick":"Fishrock123","message":"ah yeah you're probably right","date":"2017-02-14T21:12:34.459Z","type":"message"}
{"nick":"Fishrock123","message":"geez I don't even know what this will print if you reject not an error","date":"2017-02-14T21:12:48.549Z","type":"message"}
{"nick":"Fishrock123","message":"This is definitely an Error object though...","date":"2017-02-14T21:13:01.800Z","type":"message"}
{"nick":"troykelly","reason":"Ping timeout: 276 seconds","date":"2017-02-14T21:13:06.612Z","type":"quit"}
{"nick":"addaleax","message":"weird…","date":"2017-02-14T21:14:33.641Z","type":"message"}
{"nick":"addaleax","message":"have fun with your debugger? :D","date":"2017-02-14T21:14:42.089Z","type":"message"}
{"nick":"Fishrock123","message":"i'll try? lol","date":"2017-02-14T21:16:59.051Z","type":"message"}
{"nick":"kahwee_","date":"2017-02-14T21:17:49.241Z","type":"join"}
{"nick":"addaleax","message":"are you using gdb? the v8 folks have some nice utils for that somewhere","date":"2017-02-14T21:18:16.561Z","type":"message"}
{"nick":"addaleax","message":"(if you’re using lldb you’re probably using llnode anyway? :D)","date":"2017-02-14T21:18:18.506Z","type":"message"}
{"nick":"Fishrock123","message":"llnode","date":"2017-02-14T21:20:22.529Z","type":"message"}
{"nick":"kahwee","reason":"Ping timeout: 258 seconds","date":"2017-02-14T21:21:14.117Z","type":"quit"}
{"nick":"addaleax","reason":"Ping timeout: 255 seconds","date":"2017-02-14T21:23:11.908Z","type":"quit"}
{"nick":"addaleax","date":"2017-02-14T21:23:33.599Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T21:27:17.453Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T21:27:17.650Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-02-14T21:28:37.453Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T21:28:37.613Z","type":"part"}
{"nick":"junex","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-02-14T21:28:59.810Z","type":"quit"}
{"nick":"junex","date":"2017-02-14T21:29:23.963Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T21:48:01.869Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T21:48:02.029Z","type":"part"}
{"nick":"seishun","reason":"Ping timeout: 240 seconds","date":"2017-02-14T21:54:29.416Z","type":"quit"}
{"nick":"seishun","date":"2017-02-14T22:05:35.735Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 240 seconds","date":"2017-02-14T22:09:58.402Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2017-02-14T22:14:19.039Z","type":"join"}
{"nick":"john1","reason":"Ping timeout: 255 seconds","date":"2017-02-14T22:14:20.664Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-02-14T22:16:13.417Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T22:16:13.592Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-02-14T22:16:35.549Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T22:16:35.708Z","type":"part"}
{"nick":"notarsen_","reason":"Quit: Leaving...","date":"2017-02-14T22:19:48.249Z","type":"quit"}
{"nick":"notarseniy","date":"2017-02-14T22:20:06.393Z","type":"join"}
{"nick":"doodadjs","date":"2017-02-14T22:33:56.491Z","type":"join"}
{"nick":"littledan___","date":"2017-02-14T22:34:59.663Z","type":"join"}
{"nick":"williamkapke__","date":"2017-02-14T22:35:29.480Z","type":"join"}
{"nick":"rjungemann_","date":"2017-02-14T22:35:36.147Z","type":"join"}
{"nick":"grandy__","date":"2017-02-14T22:35:45.351Z","type":"join"}
{"nick":"italoacasas_","date":"2017-02-14T22:36:31.897Z","type":"join"}
{"nick":"indexzero_","date":"2017-02-14T22:39:13.739Z","type":"join"}
{"nick":"johannh_","date":"2017-02-14T22:39:31.443Z","type":"join"}
{"nick":"lholmquist_","date":"2017-02-14T22:40:09.401Z","type":"join"}
{"nick":"lholmquist_","reason":"Changing host","date":"2017-02-14T22:40:09.623Z","type":"quit"}
{"nick":"lholmquist_","date":"2017-02-14T22:40:09.783Z","type":"join"}
{"nick":"parkerkane_","date":"2017-02-14T22:40:21.895Z","type":"join"}
{"nick":"paulfryzel","date":"2017-02-14T22:41:01.396Z","type":"join"}
{"nick":"fusl_","date":"2017-02-14T22:41:30.579Z","type":"join"}
{"nick":"mscdex","reason":"*.net *.split","date":"2017-02-14T22:42:50.896Z","type":"quit"}
{"nick":"doodadjs_","reason":"*.net *.split","date":"2017-02-14T22:42:51.055Z","type":"quit"}
{"nick":"fusl","reason":"*.net *.split","date":"2017-02-14T22:42:51.143Z","type":"quit"}
{"nick":"italoacasas","reason":"*.net *.split","date":"2017-02-14T22:42:51.144Z","type":"quit"}
{"nick":"parkerkane","reason":"*.net *.split","date":"2017-02-14T22:42:51.145Z","type":"quit"}
{"nick":"williamkapke_","reason":"*.net *.split","date":"2017-02-14T22:42:51.215Z","type":"quit"}
{"nick":"indexzero","reason":"*.net *.split","date":"2017-02-14T22:42:51.216Z","type":"quit"}
{"nick":"ForbesLindesay","reason":"*.net *.split","date":"2017-02-14T22:42:51.216Z","type":"quit"}
{"nick":"paulfryz-","reason":"*.net *.split","date":"2017-02-14T22:42:51.376Z","type":"quit"}
{"nick":"rjungemann","reason":"*.net *.split","date":"2017-02-14T22:42:51.376Z","type":"quit"}
{"nick":"littledan__","reason":"*.net *.split","date":"2017-02-14T22:42:51.376Z","type":"quit"}
{"nick":"tolmasky","reason":"*.net *.split","date":"2017-02-14T22:42:51.377Z","type":"quit"}
{"nick":"grandy_","reason":"*.net *.split","date":"2017-02-14T22:42:51.534Z","type":"quit"}
{"nick":"lholmquist","reason":"*.net *.split","date":"2017-02-14T22:42:51.534Z","type":"quit"}
{"nick":"johannh","reason":"*.net *.split","date":"2017-02-14T22:42:51.535Z","type":"quit"}
{"nick":"fusl_","new_nick":"fusl","date":"2017-02-14T22:42:56.400Z","type":"nick"}
{"nick":"johannh_","new_nick":"johannh","date":"2017-02-14T22:42:59.633Z","type":"nick"}
{"nick":"parkerkane_","new_nick":"parkerkane","date":"2017-02-14T22:44:36.208Z","type":"nick"}
{"nick":"indexzero_","new_nick":"indexzero","date":"2017-02-14T22:44:41.518Z","type":"nick"}
{"nick":"rjungemann_","new_nick":"rjungemann","date":"2017-02-14T22:46:04.277Z","type":"nick"}
{"nick":"grandy__","reason":"*.net *.split","date":"2017-02-14T22:46:36.027Z","type":"quit"}
{"nick":"jeenalee","reason":"*.net *.split","date":"2017-02-14T22:46:36.187Z","type":"quit"}
{"nick":"MLM_","reason":"*.net *.split","date":"2017-02-14T22:46:36.187Z","type":"quit"}
{"nick":"howdoi","reason":"*.net *.split","date":"2017-02-14T22:46:36.187Z","type":"quit"}
{"nick":"isaacs","reason":"*.net *.split","date":"2017-02-14T22:46:36.188Z","type":"quit"}
{"nick":"sergiocrisostomo","reason":"*.net *.split","date":"2017-02-14T22:46:36.440Z","type":"quit"}
{"nick":"robinak","reason":"*.net *.split","date":"2017-02-14T22:46:36.441Z","type":"quit"}
{"nick":"ofrobots","reason":"*.net *.split","date":"2017-02-14T22:46:36.474Z","type":"quit"}
{"nick":"hughsk","reason":"*.net *.split","date":"2017-02-14T22:46:36.506Z","type":"quit"}
{"nick":"agdubs","reason":"*.net *.split","date":"2017-02-14T22:46:36.506Z","type":"quit"}
{"nick":"Aria","reason":"*.net *.split","date":"2017-02-14T22:46:36.666Z","type":"quit"}
{"nick":"early","reason":"*.net *.split","date":"2017-02-14T22:46:36.666Z","type":"quit"}
{"nick":"ljharb","reason":"*.net *.split","date":"2017-02-14T22:46:36.825Z","type":"quit"}
{"nick":"phillipj","reason":"*.net *.split","date":"2017-02-14T22:46:36.826Z","type":"quit"}
{"nick":"JoWie","reason":"*.net *.split","date":"2017-02-14T22:46:36.985Z","type":"quit"}
{"nick":"kenansulayman","reason":"*.net *.split","date":"2017-02-14T22:46:36.986Z","type":"quit"}
{"nick":"mafintosh","reason":"*.net *.split","date":"2017-02-14T22:46:37.130Z","type":"quit"}
{"nick":"othiym23","reason":"*.net *.split","date":"2017-02-14T22:46:37.130Z","type":"quit"}
{"nick":"hackygolucky","reason":"*.net *.split","date":"2017-02-14T22:46:37.131Z","type":"quit"}
{"nick":"Trott","reason":"*.net *.split","date":"2017-02-14T22:46:37.131Z","type":"quit"}
{"nick":"Sebmaster","reason":"*.net *.split","date":"2017-02-14T22:46:37.131Z","type":"quit"}
{"nick":"STRML","reason":"*.net *.split","date":"2017-02-14T22:46:37.131Z","type":"quit"}
{"nick":"hswolff","reason":"*.net *.split","date":"2017-02-14T22:46:37.132Z","type":"quit"}
{"nick":"bzoz","reason":"*.net *.split","date":"2017-02-14T22:46:37.133Z","type":"quit"}
{"nick":"mattloring","reason":"*.net *.split","date":"2017-02-14T22:46:37.145Z","type":"quit"}
{"nick":"robink","date":"2017-02-14T22:46:54.457Z","type":"join"}
{"nick":"kenansulayman","date":"2017-02-14T22:47:45.033Z","type":"join"}
{"nick":"isaacs","date":"2017-02-14T22:47:51.762Z","type":"join"}
{"nick":"early","date":"2017-02-14T22:48:01.751Z","type":"join"}
{"nick":"sergiocrisostomo","date":"2017-02-14T22:49:03.777Z","type":"join"}
{"nick":"italoacasas_","new_nick":"italoacasas","date":"2017-02-14T22:49:06.654Z","type":"nick"}
{"nick":"jeenalee","date":"2017-02-14T22:49:47.583Z","type":"join"}
{"nick":"joyee","date":"2017-02-14T22:50:14.647Z","type":"join"}
{"nick":"MLM_","date":"2017-02-14T22:50:21.014Z","type":"join"}
{"nick":"hughsk","date":"2017-02-14T22:50:59.880Z","type":"join"}
{"nick":"JoWie","date":"2017-02-14T22:51:21.996Z","type":"join"}
{"nick":"mscdex","date":"2017-02-14T22:51:35.042Z","type":"join"}
{"nick":"mafintosh","date":"2017-02-14T22:52:12.513Z","type":"join"}
{"nick":"howdoi","date":"2017-02-14T22:52:12.673Z","type":"join"}
{"nick":"grandy__","date":"2017-02-14T22:52:12.674Z","type":"join"}
{"nick":"Aria","date":"2017-02-14T22:52:12.674Z","type":"join"}
{"nick":"hackygolucky","date":"2017-02-14T22:52:12.674Z","type":"join"}
{"nick":"STRML","date":"2017-02-14T22:52:12.674Z","type":"join"}
{"nick":"hswolff","date":"2017-02-14T22:52:12.674Z","type":"join"}
{"nick":"mattloring","date":"2017-02-14T22:52:12.674Z","type":"join"}
{"nick":"howdoi","reason":"Changing host","date":"2017-02-14T22:52:41.129Z","type":"quit"}
{"nick":"howdoi","date":"2017-02-14T22:52:41.130Z","type":"join"}
{"nick":"mafintosh","reason":"Changing host","date":"2017-02-14T22:52:43.653Z","type":"quit"}
{"nick":"mafintosh","date":"2017-02-14T22:52:43.813Z","type":"join"}
{"nick":"howdoi","reason":"Max SendQ exceeded","date":"2017-02-14T22:53:18.146Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-02-14T22:53:21.602Z","type":"quit"}
{"nick":"ofrobots","date":"2017-02-14T22:54:02.877Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 252 seconds","date":"2017-02-14T22:54:36.640Z","type":"quit"}
{"nick":"phillipj","date":"2017-02-14T22:54:42.257Z","type":"join"}
{"nick":"bradleymeck","date":"2017-02-14T22:55:00.099Z","type":"join"}
{"nick":"ljharb","date":"2017-02-14T22:55:49.123Z","type":"join"}
{"nick":"bzoz","date":"2017-02-14T22:55:54.258Z","type":"join"}
{"nick":"Sebmaster","date":"2017-02-14T22:56:05.896Z","type":"join"}
{"nick":"othiym23","date":"2017-02-14T22:57:15.430Z","type":"join"}
{"nick":"agdubs","date":"2017-02-14T22:58:08.904Z","type":"join"}
{"nick":"howdoi","date":"2017-02-14T22:58:15.549Z","type":"join"}
{"nick":"Trott","date":"2017-02-14T23:01:02.616Z","type":"join"}
{"nick":"lholmquist_","new_nick":"lholmquist","date":"2017-02-14T23:04:40.260Z","type":"nick"}
{"nick":"chalker_","date":"2017-02-14T23:05:39.234Z","type":"join"}
{"nick":"ofrobots","date":"2017-02-14T23:08:15.553Z","type":"quit"}
{"nick":"john51","reason":"Remote host closed the connection","date":"2017-02-14T23:10:30.240Z","type":"quit"}
{"nick":"john51","date":"2017-02-14T23:10:55.662Z","type":"join"}
{"nick":"joshgav","reason":"Quit: leaving","date":"2017-02-14T23:15:11.475Z","type":"quit"}
{"nick":"junex","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-02-14T23:22:54.352Z","type":"quit"}
{"nick":"addaleax","reason":"Quit: ChatZilla 0.9.93 [Firefox 51.0.1/20170201180315]","date":"2017-02-14T23:24:14.808Z","type":"quit"}
{"nick":"joshgav","date":"2017-02-14T23:27:55.375Z","type":"join"}
{"nick":"sj___","reason":"Quit: Connection closed for inactivity","date":"2017-02-14T23:34:01.477Z","type":"quit"}
{"nick":"ofrobots","date":"2017-02-14T23:38:31.890Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T23:41:33.392Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-02-14T23:41:33.555Z","type":"part"}
{"nick":"junex","date":"2017-02-14T23:43:06.674Z","type":"join"}
