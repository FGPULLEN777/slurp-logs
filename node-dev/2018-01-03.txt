{"nick":"cflatts","reason":"Quit: cflatts","date":"2018-01-03T00:04:51.998Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-01-03T00:26:35.407Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T00:26:35.512Z","type":"part"}
{"nick":"BridgeAR","reason":"Ping timeout: 248 seconds","date":"2018-01-03T00:33:37.411Z","type":"quit"}
{"nick":"BridgeAR","date":"2018-01-03T00:49:14.891Z","type":"join"}
{"nick":"BridgeAR","reason":"Quit: Leaving.","date":"2018-01-03T00:55:24.562Z","type":"quit"}
{"nick":"cflatts","date":"2018-01-03T01:04:58.447Z","type":"join"}
{"nick":"cflatts","reason":"Client Quit","date":"2018-01-03T01:05:58.669Z","type":"quit"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2018-01-03T01:09:10.101Z","type":"quit"}
{"nick":"cflatts","date":"2018-01-03T01:24:17.485Z","type":"join"}
{"nick":"cflatts","reason":"Quit: cflatts","date":"2018-01-03T01:32:06.472Z","type":"quit"}
{"nick":"cflatts","date":"2018-01-03T01:33:51.471Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T01:37:26.534Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T01:37:26.602Z","type":"part"}
{"nick":"cflatts","reason":"Client Quit","date":"2018-01-03T01:37:43.631Z","type":"quit"}
{"nick":"cflatts","date":"2018-01-03T01:40:59.976Z","type":"join"}
{"nick":"dave0x6d","date":"2018-01-03T01:44:02.586Z","type":"join"}
{"nick":"aqrln","date":"2018-01-03T01:49:31.153Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T02:00:27.113Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T02:00:27.182Z","type":"part"}
{"nick":"cflatts","reason":"Quit: cflatts","date":"2018-01-03T02:06:00.554Z","type":"quit"}
{"nick":"cflatts","date":"2018-01-03T02:13:58.472Z","type":"join"}
{"nick":"aqrln","reason":"Ping timeout: 272 seconds","date":"2018-01-03T02:14:10.482Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-01-03T02:16:20.827Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T02:16:21.098Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T02:22:00.937Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T02:22:00.983Z","type":"part"}
{"nick":"cflatts","reason":"Quit: cflatts","date":"2018-01-03T02:34:00.646Z","type":"quit"}
{"nick":"aqrln","date":"2018-01-03T02:34:47.409Z","type":"join"}
{"nick":"cflatts","date":"2018-01-03T02:35:19.873Z","type":"join"}
{"nick":"cflatts","reason":"Quit: cflatts","date":"2018-01-03T02:53:02.701Z","type":"quit"}
{"nick":"cflatts","date":"2018-01-03T03:00:01.477Z","type":"join"}
{"nick":"aqrln","reason":"Read error: Connection reset by peer","date":"2018-01-03T03:33:04.643Z","type":"quit"}
{"nick":"aqrln","date":"2018-01-03T03:38:46.443Z","type":"join"}
{"nick":"cflatts","reason":"Ping timeout: 265 seconds","date":"2018-01-03T03:43:07.459Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-01-03T03:55:19.630Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T03:55:19.698Z","type":"part"}
{"nick":"howdoi","date":"2018-01-03T03:57:58.696Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T04:10:04.265Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T04:10:04.334Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T04:15:19.225Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T04:15:19.295Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T04:15:29.088Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T04:15:29.158Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T04:22:22.119Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T04:22:22.187Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T04:24:14.441Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T04:24:14.547Z","type":"part"}
{"nick":"aqrln","reason":"Read error: Connection reset by peer","date":"2018-01-03T04:33:27.135Z","type":"quit"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-01-03T04:38:31.530Z","type":"quit"}
{"nick":"srl295","date":"2018-01-03T04:39:01.339Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T04:51:14.390Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T04:51:14.495Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T04:51:31.099Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T04:51:31.168Z","type":"part"}
{"nick":"marthinal","date":"2018-01-03T05:32:11.168Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T05:34:08.850Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T05:34:09.011Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T05:34:19.147Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T05:34:19.266Z","type":"part"}
{"nick":"lpin","date":"2018-01-03T06:34:56.185Z","type":"join"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2018-01-03T06:48:45.052Z","type":"quit"}
{"nick":"lpin","reason":"Ping timeout: 240 seconds","date":"2018-01-03T07:17:27.808Z","type":"quit"}
{"nick":"seishun","date":"2018-01-03T07:35:24.152Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 240 seconds","date":"2018-01-03T08:30:27.753Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-01-03T08:40:29.421Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T08:40:29.531Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T09:07:04.765Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T09:07:04.901Z","type":"part"}
{"nick":"BridgeAR","date":"2018-01-03T09:16:51.013Z","type":"join"}
{"nick":"mmarchini","date":"2018-01-03T09:40:37.958Z","type":"join"}
{"nick":"BridgeAR","reason":"Quit: Leaving.","date":"2018-01-03T09:58:36.788Z","type":"quit"}
{"nick":"lpin","date":"2018-01-03T10:38:45.864Z","type":"join"}
{"nick":"lpin","message":"Do we really need to check that prototype is the same in `assert.deepStrictEqual()` https://github.com/nodejs/node/blob/f51067a85d64b77f2eae2e099092209156d6e602/lib/internal/util/comparisons.js#L80?","date":"2018-01-03T10:47:36.774Z","type":"message"}
{"nick":"lpin","message":"It is technically correct but we then only validate own and enumerable properties","date":"2018-01-03T10:49:06.832Z","type":"message"}
{"nick":"lpin","message":"it also makes it a bit impratical to use, for example `assert.deepStrictEqual(Object.create(null), {})` throws","date":"2018-01-03T10:50:23.528Z","type":"message"}
{"nick":"AtumT","date":"2018-01-03T11:19:13.610Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-01-03T11:25:10.852Z","type":"quit"}
{"nick":"mylesborins","date":"2018-01-03T11:25:41.202Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-01-03T11:29:00.168Z","type":"quit"}
{"nick":"evanlucas","date":"2018-01-03T11:29:02.136Z","type":"join"}
{"nick":"plasticle","reason":"Quit: WeeChat 2.0.1","date":"2018-01-03T11:59:10.243Z","type":"quit"}
{"nick":"plasticle","date":"2018-01-03T12:01:37.360Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T13:29:48.139Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T13:29:48.251Z","type":"part"}
{"nick":"tejasmanohar","reason":"Quit: Connection closed for inactivity","date":"2018-01-03T13:39:11.714Z","type":"quit"}
{"nick":"TimothyGu","reason":"K-Lined","date":"2018-01-03T14:12:49.541Z","type":"quit"}
{"nick":"TimothyGu","date":"2018-01-03T14:13:15.180Z","type":"join"}
{"nick":"dave0x6d","reason":"Quit: Connection closed for inactivity","date":"2018-01-03T14:23:35.696Z","type":"quit"}
{"nick":"Trott","message":"lpin: You probably know this already, but I think apapirovski has been doing the most work on that. They probably would have an opinion.","date":"2018-01-03T14:29:13.036Z","type":"message"}
{"nick":"marthinal","reason":"Quit: This computer has gone to sleep","date":"2018-01-03T14:34:17.803Z","type":"quit"}
{"nick":"lpin","message":"oh I didn't know","date":"2018-01-03T14:46:13.503Z","type":"message"}
{"nick":"lpin","message":"thanks","date":"2018-01-03T14:46:16.317Z","type":"message"}
{"nick":"marthinal","date":"2018-01-03T14:46:55.518Z","type":"join"}
{"nick":"srl295","date":"2018-01-03T15:40:00.659Z","type":"join"}
{"nick":"BridgeAR","date":"2018-01-03T15:50:11.750Z","type":"join"}
{"nick":"BridgeAR","reason":"Client Quit","date":"2018-01-03T15:50:12.240Z","type":"quit"}
{"nick":"aqrln","date":"2018-01-03T16:04:46.448Z","type":"join"}
{"nick":"yuval","reason":"Ping timeout: 256 seconds","date":"2018-01-03T16:14:07.565Z","type":"quit"}
{"nick":"jhamhader","reason":"Ping timeout: 252 seconds","date":"2018-01-03T16:15:05.043Z","type":"quit"}
{"nick":"yuval","date":"2018-01-03T16:17:12.661Z","type":"join"}
{"nick":"jhamhader","date":"2018-01-03T16:17:40.168Z","type":"join"}
{"nick":"aqrln","reason":"Ping timeout: 256 seconds","date":"2018-01-03T16:19:13.473Z","type":"quit"}
{"nick":"al-damiri","date":"2018-01-03T16:37:22.615Z","type":"join"}
{"nick":"aqrln","date":"2018-01-03T16:46:04.813Z","type":"join"}
{"nick":"aqrln_","date":"2018-01-03T16:48:27.424Z","type":"join"}
{"nick":"aqrln","reason":"Ping timeout: 240 seconds","date":"2018-01-03T16:50:27.826Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-01-03T16:50:31.874Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T16:50:31.875Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T16:53:40.078Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T16:53:40.201Z","type":"part"}
{"nick":"aqrln_","reason":"Read error: Connection reset by peer","date":"2018-01-03T16:56:50.176Z","type":"quit"}
{"nick":"lpin","message":"Trott it seems it has been like this since the beginning: https://github.com/nodejs/node/pull/639","date":"2018-01-03T17:07:02.957Z","type":"message"}
{"nick":"Trott","message":"Oh, wow, I didn't know deepStrictEqual was that recent.","date":"2018-01-03T17:07:44.681Z","type":"message"}
{"nick":"lpin","message":"it's super annoying to use `{ __proto__: null }` on every assertion, I guess I have to use another assertion lib :)","date":"2018-01-03T17:08:05.953Z","type":"message"}
{"nick":"zsoc","date":"2018-01-03T17:14:32.990Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T17:24:44.950Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T17:24:45.018Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T17:25:24.957Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T17:25:25.063Z","type":"part"}
{"nick":"seishun","date":"2018-01-03T17:37:29.848Z","type":"join"}
{"nick":"ljharb","message":"lpin: yes, that should be checked","date":"2018-01-03T18:43:25.777Z","type":"message"}
{"nick":"ljharb","message":"lpin: if you want to assert on a null object, you should pass it a null objet.","date":"2018-01-03T18:43:39.236Z","type":"message"}
{"nick":"ljharb","message":"iow, `{}` and `Object.create(null)` are distinctly not equal, in subtle but important ways, and if your assertion lib treats those as the same, it's broken","date":"2018-01-03T18:44:10.497Z","type":"message"}
{"nick":"ljharb","message":"(and i say that as a maintainer of 3 relatively popular assertion libs, as well as a few other libs that compare values)","date":"2018-01-03T18:44:39.505Z","type":"message"}
{"nick":"nodejs-gh","date":"2018-01-03T18:47:07.494Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T18:47:07.599Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T18:49:22.507Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T18:49:22.575Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T18:49:43.085Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T18:49:43.165Z","type":"part"}
{"nick":"Trott","message":"FWIW, they're equal if you use `assert.deepEqual()` but I'm not sure I'd recommend that.","date":"2018-01-03T18:49:55.199Z","type":"message"}
{"nick":"reydelcompas","date":"2018-01-03T18:53:51.947Z","type":"join"}
{"nick":"lpin","message":"ljharb I understand that but I only care about own enumerable props, most assertion libs only do that","date":"2018-01-03T18:58:59.491Z","type":"message"}
{"nick":"lpin","message":"Trott that's a no go as `assert.deepEqual({}, [])` does not throw","date":"2018-01-03T18:59:21.301Z","type":"message"}
{"nick":"nodejs-gh","date":"2018-01-03T19:00:28.487Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T19:00:28.549Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T19:01:11.628Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T19:01:12.184Z","type":"part"}
{"nick":"ljharb","message":"lpin: lol but you said you only care about own enumerable props, arrays are objects too and have those.","date":"2018-01-03T19:04:14.730Z","type":"message"}
{"nick":"ljharb","message":"lpin: `assert.deepStrictEqual({ ...Object.create(null) }, {})`","date":"2018-01-03T19:04:32.709Z","type":"message"}
{"nick":"lpin","message":"ljharb yes, what I meant is that I don't care if the object doesn't inherit from Object.prototype","date":"2018-01-03T19:07:05.156Z","type":"message"}
{"nick":"lpin","message":"and yes that example works on simple objects but imagine a complex one","date":"2018-01-03T19:09:08.596Z","type":"message"}
{"nick":"ljharb","message":"lpin: then why do you care if it inherits from Array.prototype","date":"2018-01-03T19:10:13.040Z","type":"message"}
{"nick":"ljharb","message":"(i'm suggesting that the things you're claiming to want are contradictory)","date":"2018-01-03T19:10:28.597Z","type":"message"}
{"nick":"AtumT_","date":"2018-01-03T19:13:48.312Z","type":"join"}
{"nick":"lpin","message":"yes maybe, I'm probably only used to userland assertion lib","date":"2018-01-03T19:14:34.724Z","type":"message"}
{"nick":"AtumT","reason":"Ping timeout: 265 seconds","date":"2018-01-03T19:16:55.469Z","type":"quit"}
{"nick":"AtumT","date":"2018-01-03T19:27:10.751Z","type":"join"}
{"nick":"AtumT_","reason":"Ping timeout: 263 seconds","date":"2018-01-03T19:28:33.279Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-01-03T19:28:57.883Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T19:28:57.952Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T19:30:54.536Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T19:30:54.643Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T19:32:13.123Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T19:32:13.195Z","type":"part"}
{"nick":"lpin","message":"ljharb for example tape (which you maintain if I'm not wrong) treat `{ __proto__: null }` and `{}` as equal which is probably why I got used to it, but yes also `{}` and `[]`","date":"2018-01-03T19:34:09.491Z","type":"message"}
{"nick":"bradleymeck","date":"2018-01-03T19:43:45.449Z","type":"join"}
{"nick":"lpin","reason":"Ping timeout: 268 seconds","date":"2018-01-03T19:45:32.632Z","type":"quit"}
{"nick":"marthinal","reason":"Quit: This computer has gone to sleep","date":"2018-01-03T19:47:14.016Z","type":"quit"}
{"nick":"lpin","date":"2018-01-03T19:49:58.907Z","type":"join"}
{"nick":"lpin","message":"`assert.deepEqual()` is a no go for my use case as it treats `{ a: 1 }` and `{ a: '1' }` as equal. It all depends on how \"strict\" equality should be :)","date":"2018-01-03T20:00:08.113Z","type":"message"}
{"nick":"lpin","message":"Anyway it doesn't matter, sorry for the spam","date":"2018-01-03T20:00:18.718Z","type":"message"}
{"nick":"nodejs-gh","date":"2018-01-03T20:04:37.832Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T20:04:37.994Z","type":"part"}
{"nick":"Trott","message":"I kind of like the conversation. Interesting edge cases and concerns and whatnot. :-D","date":"2018-01-03T20:11:04.218Z","type":"message"}
{"nick":"ljharb","message":"lpin: yes, that's true, but i think tape's is deepEqual - deepStrictEqual isn't in tape yet because it's so new","date":"2018-01-03T20:14:42.110Z","type":"message"}
{"nick":"ljharb","message":"(if i'm wrong please do file an issue)","date":"2018-01-03T20:14:59.479Z","type":"message"}
{"nick":"ljharb","message":"Trott: btw it seems like 8.9.4 is breaking some of airbnb's internal builds that worked fine on 8.9.3","date":"2018-01-03T20:17:17.776Z","type":"message"}
{"nick":"lpin","message":"ljharb, tape's deepEqual is partially \"strict\" `t.deepEqual({ a: 1 }, { a: '1' })` fails","date":"2018-01-03T20:17:38.309Z","type":"message"}
{"nick":"ljharb","message":"Trott: stuff around fsevents","date":"2018-01-03T20:17:44.653Z","type":"message"}
{"nick":"ljharb","message":"lpin: hm, it should match assert","date":"2018-01-03T20:17:52.463Z","type":"message"}
{"nick":"ljharb","message":"it might be npm 5.6 issues (zkat) but that's still relevant since it's newly included in 8.9.4 in LTS","date":"2018-01-03T20:24:37.458Z","type":"message"}
{"nick":"not-an-aardvark","date":"2018-01-03T20:50:12.983Z","type":"join"}
{"nick":"ljharb","message":"k, it's definitely npm 5.6. downgrading to 5.5 on node 8.9.4 fixed our issue.","date":"2018-01-03T20:53:12.963Z","type":"message"}
{"nick":"nodejs-gh","date":"2018-01-03T20:58:13.801Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T20:58:13.870Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T20:59:32.985Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T20:59:33.091Z","type":"part"}
{"nick":"lpin","reason":"Quit: Leaving","date":"2018-01-03T21:01:01.494Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-01-03T21:37:49.081Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T21:37:49.214Z","type":"part"}
{"nick":"Fusl","reason":"Quit: K-Lined","date":"2018-01-03T21:44:23.237Z","type":"quit"}
{"nick":"Fusl","date":"2018-01-03T21:44:54.561Z","type":"join"}
{"nick":"Fusl","reason":"Changing host","date":"2018-01-03T21:44:58.361Z","type":"quit"}
{"nick":"Fusl","date":"2018-01-03T21:44:58.430Z","type":"join"}
{"nick":"BridgeAR","date":"2018-01-03T21:45:53.506Z","type":"join"}
{"nick":"evanlucas","reason":"Remote host closed the connection","date":"2018-01-03T21:50:30.982Z","type":"quit"}
{"nick":"boaz","date":"2018-01-03T21:53:43.455Z","type":"join"}
{"nick":"mmarchini","reason":"Quit: Connection closed for inactivity","date":"2018-01-03T22:00:28.198Z","type":"quit"}
{"nick":"zinahe","date":"2018-01-03T22:05:22.150Z","type":"join"}
{"nick":"zinahe","reason":"Client Quit","date":"2018-01-03T22:05:53.356Z","type":"quit"}
{"nick":"Fusl","reason":"Max SendQ exceeded","date":"2018-01-03T22:30:03.568Z","type":"quit"}
{"nick":"BridgeAR","reason":"Quit: Leaving.","date":"2018-01-03T22:30:04.477Z","type":"quit"}
{"nick":"Fusl","date":"2018-01-03T22:31:09.346Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T22:49:32.628Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T22:49:32.697Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T22:50:31.974Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T22:50:32.043Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T23:28:24.471Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T23:28:24.539Z","type":"part"}
{"nick":"Fusl","reason":"Quit: K-Lined","date":"2018-01-03T23:28:38.152Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-01-03T23:28:47.216Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T23:28:47.284Z","type":"part"}
{"nick":"Fusl","date":"2018-01-03T23:29:00.508Z","type":"join"}
{"nick":"Fusl","reason":"Changing host","date":"2018-01-03T23:29:00.576Z","type":"quit"}
{"nick":"Fusl","date":"2018-01-03T23:29:00.577Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T23:34:00.824Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T23:34:00.893Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-03T23:34:32.042Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-03T23:34:32.042Z","type":"part"}
{"nick":"floatleft","reason":"Read error: Connection reset by peer","date":"2018-01-03T23:36:37.130Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 256 seconds","date":"2018-01-03T23:40:05.411Z","type":"quit"}
