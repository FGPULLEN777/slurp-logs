{"nick":"Fishrock123","date":"2016-11-23T00:05:15.492Z","type":"join"}
{"nick":"benjamingr","reason":"Quit: Connection closed for inactivity","date":"2016-11-23T00:11:13.021Z","type":"quit"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2016-11-23T00:13:53.992Z","type":"quit"}
{"nick":"d10n-work","reason":"Quit: Connection closed for inactivity","date":"2016-11-23T00:30:25.344Z","type":"quit"}
{"nick":"Guest81881","reason":"Quit: Page closed","date":"2016-11-23T01:00:11.901Z","type":"quit"}
{"nick":"tesrty","reason":"Quit: -","date":"2016-11-23T01:18:22.466Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-11-23T01:24:36.304Z","type":"quit"}
{"nick":"goyapa","date":"2016-11-23T01:35:37.090Z","type":"join"}
{"nick":"italoacasas","reason":"Quit: Connection closed for inactivity","date":"2016-11-23T01:43:01.967Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-11-23T01:43:05.843Z","type":"join"}
{"nick":"italoacasas","date":"2016-11-23T01:43:29.075Z","type":"join"}
{"nick":"goyapa","reason":"Quit: goyapa","date":"2016-11-23T02:02:39.183Z","type":"quit"}
{"nick":"thealphanerd","message":"anyone around to bounce something off of?","date":"2016-11-23T02:07:47.523Z","type":"message"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T02:24:46.251Z","type":"quit"}
{"nick":"howdoi","date":"2016-11-23T02:36:40.756Z","type":"join"}
{"nick":"jasnell","date":"2016-11-23T02:44:59.729Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 258 seconds","date":"2016-11-23T02:49:26.550Z","type":"quit"}
{"nick":"phpnode","reason":"Remote host closed the connection","date":"2016-11-23T02:54:34.300Z","type":"quit"}
{"nick":"larissayvette","date":"2016-11-23T02:56:48.734Z","type":"join"}
{"nick":"jasnell","date":"2016-11-23T02:57:09.063Z","type":"join"}
{"nick":"larissayvette","reason":"Ping timeout: 250 seconds","date":"2016-11-23T03:01:08.745Z","type":"quit"}
{"nick":"indutny","message":"thealphanerd: what do you mean?","date":"2016-11-23T03:08:19.213Z","type":"message"}
{"nick":"thealphanerd","message":"got it for now :D","date":"2016-11-23T03:10:44.024Z","type":"message"}
{"nick":"thealphanerd","message":"thanks though","date":"2016-11-23T03:10:46.457Z","type":"message"}
{"nick":"Lee1092","date":"2016-11-23T03:11:37.833Z","type":"join"}
{"nick":"indutny","message":"np","date":"2016-11-23T03:29:42.785Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-11-23T03:49:14.624Z","type":"quit"}
{"nick":"joshonth_","reason":"Remote host closed the connection","date":"2016-11-23T03:50:47.316Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-11-23T03:51:35.264Z","type":"join"}
{"nick":"phpnode","date":"2016-11-23T03:55:05.219Z","type":"join"}
{"nick":"phpnode","reason":"Ping timeout: 250 seconds","date":"2016-11-23T03:59:54.915Z","type":"quit"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T04:34:32.915Z","type":"quit"}
{"nick":"joshontheweb","reason":"Read error: Connection reset by peer","date":"2016-11-23T04:36:00.515Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-11-23T04:39:08.094Z","type":"join"}
{"nick":"jasnell","date":"2016-11-23T04:42:12.527Z","type":"join"}
{"nick":"joshonth_","date":"2016-11-23T04:46:50.387Z","type":"join"}
{"nick":"joshontheweb","reason":"Ping timeout: 250 seconds","date":"2016-11-23T04:46:52.734Z","type":"quit"}
{"nick":"joshonth_","reason":"Ping timeout: 258 seconds","date":"2016-11-23T04:52:29.618Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-11-23T04:59:07.343Z","type":"join"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2016-11-23T05:00:12.351Z","type":"quit"}
{"nick":"joshonth_","date":"2016-11-23T05:05:19.622Z","type":"join"}
{"nick":"joshontheweb","reason":"Ping timeout: 258 seconds","date":"2016-11-23T05:08:12.552Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-11-23T05:23:49.622Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T05:23:49.863Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-11-23T05:23:59.634Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T05:23:59.837Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-11-23T05:42:01.482Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T05:42:01.686Z","type":"part"}
{"nick":"joshonth_","reason":"Ping timeout: 260 seconds","date":"2016-11-23T05:46:57.486Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-11-23T05:48:46.494Z","type":"join"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2016-11-23T05:49:12.470Z","type":"quit"}
{"nick":"joshontheweb","reason":"Read error: No route to host","date":"2016-11-23T05:59:02.581Z","type":"quit"}
{"nick":"joshonth_","date":"2016-11-23T05:59:06.388Z","type":"join"}
{"nick":"joshonth_","reason":"Read error: No route to host","date":"2016-11-23T06:03:24.196Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-11-23T06:05:26.176Z","type":"join"}
{"nick":"joshontheweb","reason":"Read error: Connection reset by peer","date":"2016-11-23T06:09:12.849Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-11-23T06:18:24.458Z","type":"join"}
{"nick":"joshontheweb","reason":"Read error: Connection reset by peer","date":"2016-11-23T06:23:01.865Z","type":"quit"}
{"nick":"chalker_","date":"2016-11-23T06:25:32.484Z","type":"join"}
{"nick":"bradleymeck","date":"2016-11-23T06:38:50.259Z","type":"join"}
{"nick":"stairmast0r","reason":"Ping timeout: 265 seconds","date":"2016-11-23T06:40:31.693Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-11-23T06:42:00.084Z","type":"join"}
{"nick":"joshontheweb","reason":"Read error: Connection reset by peer","date":"2016-11-23T06:43:51.125Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-11-23T06:46:20.913Z","type":"join"}
{"nick":"howdoi","date":"2016-11-23T06:49:21.745Z","type":"join"}
{"nick":"chalker_","reason":"Ping timeout: 260 seconds","date":"2016-11-23T06:49:57.487Z","type":"quit"}
{"nick":"lpin","date":"2016-11-23T06:51:14.296Z","type":"join"}
{"nick":"joshonth_","date":"2016-11-23T06:51:59.165Z","type":"join"}
{"nick":"joshontheweb","reason":"Ping timeout: 250 seconds","date":"2016-11-23T06:54:06.903Z","type":"quit"}
{"nick":"joshont__","date":"2016-11-23T06:54:28.572Z","type":"join"}
{"nick":"joshonth_","reason":"Ping timeout: 258 seconds","date":"2016-11-23T06:57:27.573Z","type":"quit"}
{"nick":"joshont__","reason":"Read error: Connection reset by peer","date":"2016-11-23T06:59:11.885Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-11-23T07:14:06.546Z","type":"join"}
{"nick":"tesrty","date":"2016-11-23T07:22:25.773Z","type":"join"}
{"nick":"joshonth_","date":"2016-11-23T07:23:46.304Z","type":"join"}
{"nick":"joshontheweb","reason":"Ping timeout: 265 seconds","date":"2016-11-23T07:24:30.685Z","type":"quit"}
{"nick":"qws-user-1228","reason":"Read error: Connection reset by peer","date":"2016-11-23T07:25:43.676Z","type":"quit"}
{"nick":"qws-user-1229","date":"2016-11-23T07:25:45.049Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T07:36:35.182Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T07:36:50.653Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T07:37:22.766Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T07:37:40.721Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T07:38:10.640Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T07:38:25.626Z","type":"join"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2016-11-23T07:38:37.690Z","type":"quit"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T07:38:58.699Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T07:39:16.377Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T07:39:46.662Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T07:40:05.625Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T07:40:34.745Z","type":"quit"}
{"nick":"seishun","date":"2016-11-23T07:40:46.533Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T07:41:04.765Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T07:41:04.968Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-11-23T07:41:24.092Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T07:41:24.296Z","type":"part"}
{"nick":"jasnell","date":"2016-11-23T07:43:03.683Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 258 seconds","date":"2016-11-23T07:47:40.566Z","type":"quit"}
{"nick":"tesrty","reason":"Quit: -","date":"2016-11-23T08:11:33.369Z","type":"quit"}
{"nick":"joshonth_","reason":"Ping timeout: 240 seconds","date":"2016-11-23T08:21:37.131Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-11-23T08:23:09.796Z","type":"join"}
{"nick":"joshonth_","date":"2016-11-23T08:27:31.329Z","type":"join"}
{"nick":"joshontheweb","reason":"Ping timeout: 258 seconds","date":"2016-11-23T08:28:41.547Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 245 seconds","date":"2016-11-23T08:33:23.781Z","type":"quit"}
{"nick":"tesrty","date":"2016-11-23T08:48:59.028Z","type":"join"}
{"nick":"phpnode","date":"2016-11-23T08:49:18.100Z","type":"join"}
{"nick":"yuval","date":"2016-11-23T08:51:31.768Z","type":"join"}
{"nick":"italoacasas","reason":"Quit: Connection closed for inactivity","date":"2016-11-23T08:53:02.173Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T08:58:15.687Z","type":"join"}
{"nick":"tesrty","reason":"Quit: -","date":"2016-11-23T09:01:39.045Z","type":"quit"}
{"nick":"tesrty","date":"2016-11-23T09:03:09.359Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T09:06:24.563Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T09:06:44.337Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T09:07:13.436Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T09:07:29.646Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T09:08:01.795Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T09:08:18.600Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T09:08:49.512Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T09:09:07.735Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T09:09:37.496Z","type":"quit"}
{"nick":"tesrty","reason":"Quit: -","date":"2016-11-23T09:12:30.205Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-11-23T09:12:53.185Z","type":"join"}
{"nick":"tesrty","date":"2016-11-23T09:14:44.963Z","type":"join"}
{"nick":"zignd","date":"2016-11-23T09:32:14.343Z","type":"join"}
{"nick":"seishun","date":"2016-11-23T09:42:37.005Z","type":"join"}
{"nick":"yuval","reason":"Ping timeout: 244 seconds","date":"2016-11-23T09:43:43.861Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-11-23T09:54:30.110Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T09:54:30.312Z","type":"part"}
{"nick":"bradleymeck","reason":"Ping timeout: 252 seconds","date":"2016-11-23T10:12:28.008Z","type":"quit"}
{"nick":"zignd","reason":"Read error: Connection reset by peer","date":"2016-11-23T10:16:47.834Z","type":"quit"}
{"nick":"BridgeAR","date":"2016-11-23T10:38:47.212Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2016-11-23T10:44:11.029Z","type":"quit"}
{"nick":"evanlucas","date":"2016-11-23T10:47:06.368Z","type":"join"}
{"nick":"jasnell","date":"2016-11-23T10:47:49.371Z","type":"join"}
{"nick":"evanlucas","reason":"Ping timeout: 248 seconds","date":"2016-11-23T10:51:17.305Z","type":"quit"}
{"nick":"tesrty","reason":"\"-\"","date":"2016-11-23T10:52:52.899Z","type":"part"}
{"nick":"jasnell","reason":"Ping timeout: 245 seconds","date":"2016-11-23T10:54:13.777Z","type":"quit"}
{"nick":"yuval","date":"2016-11-23T11:15:08.775Z","type":"join"}
{"nick":"yuval","reason":"Client Quit","date":"2016-11-23T11:15:18.725Z","type":"quit"}
{"nick":"thealphanerd","reason":"Quit: farewell for now","date":"2016-11-23T11:25:09.479Z","type":"quit"}
{"nick":"thealphanerd","date":"2016-11-23T11:25:40.201Z","type":"join"}
{"nick":"alrra","date":"2016-11-23T11:31:27.633Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T11:35:48.102Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T11:35:48.342Z","type":"part"}
{"nick":"evanlucas","date":"2016-11-23T11:42:37.488Z","type":"join"}
{"nick":"evanlucas","reason":"Ping timeout: 260 seconds","date":"2016-11-23T11:47:13.491Z","type":"quit"}
{"nick":"evanlucas","date":"2016-11-23T11:48:05.871Z","type":"join"}
{"nick":"evanlucas","reason":"Ping timeout: 260 seconds","date":"2016-11-23T11:52:32.875Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-11-23T11:53:07.850Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T11:53:08.055Z","type":"part"}
{"nick":"al-damiri","date":"2016-11-23T12:24:12.325Z","type":"join"}
{"nick":"seishun","message":"randomly noticed that the docs for the domain module are a bit confusing... it's listed as deprecated, but then it says it \"Once a replacement API has been finalized, this module will be fully deprecated.\"","date":"2016-11-23T12:33:02.497Z","type":"message"}
{"nick":"seishun","message":"what's \"fully deprecated\"? perhaps it meant to say \"removed\"?","date":"2016-11-23T12:33:14.728Z","type":"message"}
{"nick":"jasnell","date":"2016-11-23T12:36:13.823Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 256 seconds","date":"2016-11-23T12:40:59.866Z","type":"quit"}
{"nick":"seishun","message":"trevnorris: do you mind if I respond to your comment in #9531 here?","date":"2016-11-23T12:50:03.889Z","type":"message"}
{"nick":"seishun","message":"I was going to post there but then realized it wouldn't bring anything new to the discussino","date":"2016-11-23T12:50:19.353Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-11-23T13:03:40.486Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T13:03:40.690Z","type":"part"}
{"nick":"stairmast0r","date":"2016-11-23T13:12:55.825Z","type":"join"}
{"nick":"jasnell","date":"2016-11-23T13:13:19.869Z","type":"join"}
{"nick":"Lee1092","reason":"Quit: Connection closed for inactivity","date":"2016-11-23T13:16:31.842Z","type":"quit"}
{"nick":"jasnell","reason":"Ping timeout: 260 seconds","date":"2016-11-23T13:17:56.849Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-11-23T13:18:35.853Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T13:18:36.057Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-11-23T13:21:19.839Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T13:21:20.043Z","type":"part"}
{"nick":"nickleefly","date":"2016-11-23T13:34:44.136Z","type":"join"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2016-11-23T13:53:37.755Z","type":"nick"}
{"nick":"italoacasas","date":"2016-11-23T14:00:11.019Z","type":"join"}
{"nick":"evanlucas","date":"2016-11-23T14:05:10.274Z","type":"join"}
{"nick":"evanlucas","reason":"Ping timeout: 248 seconds","date":"2016-11-23T14:09:41.359Z","type":"quit"}
{"nick":"evanlucas","date":"2016-11-23T14:10:37.291Z","type":"join"}
{"nick":"evanlucas","reason":"Changing host","date":"2016-11-23T14:10:42.664Z","type":"quit"}
{"nick":"evanlucas","date":"2016-11-23T14:10:42.867Z","type":"join"}
{"nick":"jasnell","date":"2016-11-23T14:13:14.620Z","type":"join"}
{"nick":"evanlucas","reason":"Ping timeout: 248 seconds","date":"2016-11-23T14:15:01.326Z","type":"quit"}
{"nick":"evanlucas","date":"2016-11-23T14:15:16.315Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 258 seconds","date":"2016-11-23T14:17:54.620Z","type":"quit"}
{"nick":"evanlucas","reason":"Ping timeout: 248 seconds","date":"2016-11-23T14:19:49.358Z","type":"quit"}
{"nick":"Lee1092","date":"2016-11-23T14:39:35.124Z","type":"join"}
{"nick":"Fishrock123","date":"2016-11-23T14:52:05.294Z","type":"join"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2016-11-23T14:59:12.513Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-11-23T15:15:23.852Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T15:15:24.056Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-11-23T15:41:01.825Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T15:41:02.067Z","type":"part"}
{"nick":"evanlucas","date":"2016-11-23T15:41:12.315Z","type":"join"}
{"nick":"nickleefly","reason":"Quit: Connection closed for inactivity","date":"2016-11-23T15:41:42.838Z","type":"quit"}
{"nick":"addaleax","date":"2016-11-23T15:44:04.167Z","type":"join"}
{"nick":"evanlucas","reason":"Ping timeout: 248 seconds","date":"2016-11-23T15:45:41.354Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T15:46:13.706Z","type":"join"}
{"nick":"evanlucas","date":"2016-11-23T15:46:40.308Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 258 seconds","date":"2016-11-23T15:50:40.610Z","type":"quit"}
{"nick":"evanlucas","reason":"Ping timeout: 248 seconds","date":"2016-11-23T15:51:01.308Z","type":"quit"}
{"nick":"davimore_","date":"2016-11-23T15:52:37.714Z","type":"join"}
{"nick":"goyapa","date":"2016-11-23T15:53:43.764Z","type":"join"}
{"nick":"jasnell","date":"2016-11-23T15:54:43.638Z","type":"join"}
{"nick":"davimore_","reason":"Quit: Leaving","date":"2016-11-23T15:59:44.786Z","type":"quit"}
{"nick":"BridgeAR","reason":"Ping timeout: 260 seconds","date":"2016-11-23T16:01:40.152Z","type":"quit"}
{"nick":"Trott","message":"seishun: Regarding the domain docs, I'd say that sentence can be removed.","date":"2016-11-23T16:07:01.799Z","type":"message"}
{"nick":"seishun","message":"Trott: I looked at the PR and it seems \"fully deprecated\" means hard-deprecated here","date":"2016-11-23T16:10:54.248Z","type":"message"}
{"nick":"Trott","message":"I and others have been trying to avoid \"hard\" and \"soft\" deprecation in favor of \"runtime\" and \"docs-only\" or something descriptive like that.","date":"2016-11-23T16:11:30.988Z","type":"message"}
{"nick":"Fishrock123","message":"Core Technical Committee meeting live now: http://www.youtube.com/c/nodejs-foundation/live","date":"2016-11-23T16:13:24.578Z","type":"message"}
{"nick":"chalker_","date":"2016-11-23T16:14:53.135Z","type":"join"}
{"nick":"seishun","message":"Trott: \"runtime\" and \"docs-only\" will be descriptive until we add an option to display a runtime warning on \"docs-only\" deprecations","date":"2016-11-23T16:15:43.630Z","type":"message"}
{"nick":"Trott","message":"seishun: Open to suggestions for more accurate descriptions.","date":"2016-11-23T16:16:19.910Z","type":"message"}
{"nick":"Trott","message":"But \"soft\" and \"hard\" confuses people who aren't involved in core. At least that's been my experience.","date":"2016-11-23T16:16:37.654Z","type":"message"}
{"nick":"seishun","message":"yeah, so they should be documented somewhere","date":"2016-11-23T16:18:35.551Z","type":"message"}
{"nick":"seishun","message":"some people seem to be confused even by \"deprecation\" thinking it means removal or error","date":"2016-11-23T16:19:03.110Z","type":"message"}
{"nick":"evanlucas","date":"2016-11-23T16:29:17.400Z","type":"join"}
{"nick":"evanlucas","reason":"Ping timeout: 248 seconds","date":"2016-11-23T16:33:41.340Z","type":"quit"}
{"nick":"evanlucas","date":"2016-11-23T16:34:45.370Z","type":"join"}
{"nick":"thefourtheye","date":"2016-11-23T16:37:16.665Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T16:39:19.484Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T16:39:19.727Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-11-23T16:39:51.122Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T16:39:51.326Z","type":"part"}
{"nick":"evanlucas","reason":"Ping timeout: 248 seconds","date":"2016-11-23T16:47:33.328Z","type":"quit"}
{"nick":"evanlucas","date":"2016-11-23T16:47:48.349Z","type":"join"}
{"nick":"Trott","message":"seishun: For me, the difference is that \"deprecation\" has a well-defined (if not as widely-understood as we'd like) meaning outside of the project. \"soft deprecation\" and \"hard deprecation\" are specific jargon to the project (as far as I know) and something more descriptive would be (IMO) better.","date":"2016-11-23T16:51:48.330Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-11-23T16:53:42.767Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T16:53:42.971Z","type":"part"}
{"nick":"evanlucas","reason":"Ping timeout: 248 seconds","date":"2016-11-23T16:54:29.349Z","type":"quit"}
{"nick":"evanlucas","date":"2016-11-23T16:54:41.397Z","type":"join"}
{"nick":"Fishrock123","message":"jasnell: I have an idea... what if we have docs-deprecated warns on by default for nightlies and beta and then have them flagged for rc's and releases?","date":"2016-11-23T16:55:32.623Z","type":"message"}
{"nick":"goyapa","reason":"Quit: goyapa","date":"2016-11-23T16:55:44.496Z","type":"quit"}
{"nick":"Fishrock123","message":"(and on in master)","date":"2016-11-23T16:55:47.994Z","type":"message"}
{"nick":"jasnell","message":"that could definitely work","date":"2016-11-23T16:55:48.840Z","type":"message"}
{"nick":"jasnell","message":"we don't currently have a switch to detect when a build is an RC","date":"2016-11-23T16:56:36.444Z","type":"message"}
{"nick":"jasnell","message":"but we could certainly switch it off by default for releases","date":"2016-11-23T16:57:25.749Z","type":"message"}
{"nick":"evanlucas","reason":"Ping timeout: 248 seconds","date":"2016-11-23T16:59:17.287Z","type":"quit"}
{"nick":"evanlucas","date":"2016-11-23T16:59:31.386Z","type":"join"}
{"nick":"addaleax","message":"anybody got questions for the CTC meeting?","date":"2016-11-23T16:59:53.708Z","type":"message"}
{"nick":"italoacasas","message":"documentation about h2 implementation that way we can start helping ?","date":"2016-11-23T17:00:35.903Z","type":"message"}
{"nick":"addaleax","message":"italoacasas: is that a question for the CTC? sounds more like something you could ask on the http2 repo?","date":"2016-11-23T17:01:35.084Z","type":"message"}
{"nick":"italoacasas","message":"that sounds right, thanks for the clarification","date":"2016-11-23T17:02:37.888Z","type":"message"}
{"nick":"jasnell","message":"italoacasas: my goal is to get documentation for the http2 impl going by next week","date":"2016-11-23T17:03:00.449Z","type":"message"}
{"nick":"jasnell","message":"the implementation has been in quite a bit of flux but it should start settling down now","date":"2016-11-23T17:03:21.274Z","type":"message"}
{"nick":"addaleax","message":"(https://github.com/nodejs/http2)","date":"2016-11-23T17:03:26.586Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-11-23T17:03:31.759Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T17:03:31.963Z","type":"part"}
{"nick":"italoacasas","message":"jasnell: yeah I was checking the the round 6 and the benchmark looks nice","date":"2016-11-23T17:04:29.282Z","type":"message"}
{"nick":"jasnell","message":"thanks!","date":"2016-11-23T17:04:52.463Z","type":"message"}
{"nick":"jasnell","message":"the key areas where I need additional help looking into it are the streams api stuff... specifically, coordinating the stream interface in lib/internal/http2 for the Http2Incoming and Http2Outgoing and Http2Stream classes","date":"2016-11-23T17:05:37.607Z","type":"message"}
{"nick":"seishun","message":"Trott: I can't think of self-descriptive terms. \"runtime-on-by-default deprecation\" and \"runtime-off-by-default deprecation\" are a bit of a mouthful","date":"2016-11-23T17:08:48.734Z","type":"message"}
{"nick":"evanlucas","reason":"Ping timeout: 248 seconds","date":"2016-11-23T17:12:37.407Z","type":"quit"}
{"nick":"evanlucas","date":"2016-11-23T17:12:53.336Z","type":"join"}
{"nick":"Trott","message":"seishun: Yeah, which is why I make peace with the imprecise-but-hopefully-acceptable \"runtime\" and \"docs\" or \"docs-only\". Your points are valid.","date":"2016-11-23T17:14:45.820Z","type":"message"}
{"nick":"seishun","reason":"Quit: Page closed","date":"2016-11-23T17:15:32.079Z","type":"quit"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T17:16:18.605Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2016-11-23T17:17:50.102Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T17:20:45.319Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T17:20:45.563Z","type":"part"}
{"nick":"Fishrock123","message":"mhdawson: how many tests are we skipping on AIX compared to other platforms?","date":"2016-11-23T17:21:24.811Z","type":"message"}
{"nick":"evanlucas","reason":"Ping timeout: 248 seconds","date":"2016-11-23T17:23:49.357Z","type":"quit"}
{"nick":"evanlucas","date":"2016-11-23T17:24:05.277Z","type":"join"}
{"nick":"evanlucas","reason":"Remote host closed the connection","date":"2016-11-23T17:24:07.583Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T17:29:06.316Z","type":"join"}
{"nick":"bradleymeck","date":"2016-11-23T17:43:15.967Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T17:45:14.911Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T17:45:46.616Z","type":"join"}
{"nick":"seishun","date":"2016-11-23T17:47:46.537Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 258 seconds","date":"2016-11-23T17:50:16.662Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-11-23T18:03:38.164Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-11-23T18:29:01.061Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T18:29:01.265Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-11-23T18:29:21.739Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T18:29:21.943Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-11-23T18:30:19.738Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T18:30:19.942Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-11-23T18:30:39.842Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T18:30:40.046Z","type":"part"}
{"nick":"phpnode","reason":"Remote host closed the connection","date":"2016-11-23T18:34:43.400Z","type":"quit"}
{"nick":"Trott","message":"Fishrock123: Not sure if this is the info you want from mhdawson but if it is:","date":"2016-11-23T18:38:17.806Z","type":"message"}
{"nick":"Trott","message":"* 10 tests are partially or completely skipped on AIX via checking `common.isAix().","date":"2016-11-23T18:38:18.041Z","type":"message"}
{"nick":"Trott","message":"* 3 tests are treating as passing regardless of results on AIX in parallel.status (2 tests) and sequential.status (1 test).","date":"2016-11-23T18:38:18.041Z","type":"message"}
{"nick":"Trott","message":"* 1 test is skipped on AIX in pseudo-tty.status.","date":"2016-11-23T18:38:18.041Z","type":"message"}
{"nick":"Trott","message":"* A very small number of other tests have their expected results modified based on being AIX.","date":"2016-11-23T18:38:18.041Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 245 seconds","date":"2016-11-23T18:38:23.835Z","type":"quit"}
{"nick":"Trott","message":"\"very small number\" above is, I think, 2 or 3","date":"2016-11-23T18:38:46.852Z","type":"message"}
{"nick":"Fishrock123","message":"hmmm, not too bad then but it does seem like most of the flaky platform issues are coming from it (or from what I've seen)?","date":"2016-11-23T18:41:35.728Z","type":"message"}
{"nick":"seishun","date":"2016-11-23T18:44:04.149Z","type":"join"}
{"nick":"Trott","message":"AIX has been pretty OK, I think, mostly because mhdawson and a handful of other IBMers stay on top of it. (This also means they open issues in the issue tracker about it rather than just re-running CI and ignoring it, which may contribute to a perception that it's flakier than other platforms.)","date":"2016-11-23T18:45:26.848Z","type":"message"}
{"nick":"Trott","message":"Now that test-inspector is no longer flaky on Windows, AIX is the only platform with things listed in the *.status files, I think. So, I guess depending on your metric....","date":"2016-11-23T18:49:26.404Z","type":"message"}
{"nick":"Trott","message":"To be honest, everything is running OK again. FreeBSD is happy again, SmartOS has been great for a while now, Windows had the test-inspector thing but that's fixed now, AIX is good (and where it needs attention, it seems to get it from IBM), Linux and OS X are fine as ever, etc.","date":"2016-11-23T18:53:35.894Z","type":"message"}
{"nick":"Trott","message":"Even Raspberry Pi devices have been green lately without very many build failures.","date":"2016-11-23T18:54:12.044Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-11-23T18:54:40.810Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T18:54:41.014Z","type":"part"}
{"nick":"Trott","message":"(Of course, looking at CI now, I see tons of red, so maybe I have no idea what I'm talking about. *sigh*...)","date":"2016-11-23T18:58:41.508Z","type":"message"}
{"nick":"joshontheweb","date":"2016-11-23T19:01:33.136Z","type":"join"}
{"nick":"joshonth_","reason":"Ping timeout: 256 seconds","date":"2016-11-23T19:03:22.893Z","type":"quit"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2016-11-23T19:08:14.759Z","type":"quit"}
{"nick":"phpnode","date":"2016-11-23T19:21:41.210Z","type":"join"}
{"nick":"indutny","message":"overslept CTC meeting :(","date":"2016-11-23T19:31:59.683Z","type":"message"}
{"nick":"indutny","message":"sorry","date":"2016-11-23T19:32:01.171Z","type":"message"}
{"nick":"addaleax","message":"indutny: we basically only talked about the Buffer stuff","date":"2016-11-23T19:32:27.902Z","type":"message"}
{"nick":"indutny","message":"that's good","date":"2016-11-23T19:32:37.562Z","type":"message"}
{"nick":"seishun","message":"ChALkeR: btw I can't think of any reasons why reverting would make hard-deprecation in v8.0 less likely than not reverting","date":"2016-11-23T19:33:56.167Z","type":"message"}
{"nick":"jasnell","date":"2016-11-23T19:43:30.674Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 258 seconds","date":"2016-11-23T19:47:57.702Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-11-23T19:56:22.693Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2016-11-23T19:57:46.076Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-11-23T20:16:57.650Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T20:16:57.854Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-11-23T20:20:11.102Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T20:20:11.306Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-11-23T20:50:20.665Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T20:50:20.869Z","type":"part"}
{"nick":"evanlucas","date":"2016-11-23T20:59:23.454Z","type":"join"}
{"nick":"evanlucas","reason":"Remote host closed the connection","date":"2016-11-23T20:59:28.151Z","type":"quit"}
{"nick":"addaleax","reason":"Quit: ChatZilla 0.9.93 [Firefox 50.0/20161114144739]","date":"2016-11-23T21:30:15.207Z","type":"quit"}
{"nick":"trevnorris","message":"seishun: sure, go ahead!","date":"2016-11-23T21:36:03.869Z","type":"message"}
{"nick":"trevnorris","message":"wait, you already did. :)","date":"2016-11-23T21:36:04.073Z","type":"message"}
{"nick":"trevnorris","message":"seishun: in your comment you eluded to deprecating Buffer completely (including w/ new). is that what some want to do?","date":"2016-11-23T21:36:40.609Z","type":"message"}
{"nick":"seishun","message":"yep","date":"2016-11-23T21:37:15.377Z","type":"message"}
{"nick":"seishun","message":"which is what this whole discussion is about","date":"2016-11-23T21:37:42.293Z","type":"message"}
{"nick":"trevnorris","message":"seishun: so you mean print a warning whenever it's used?","date":"2016-11-23T21:39:51.464Z","type":"message"}
{"nick":"seishun","message":"no, just the first time it's used in the program","date":"2016-11-23T21:40:10.071Z","type":"message"}
{"nick":"trevnorris","message":"what's the black magic everyone is going to use to allow Buffer.alloc(), which would need to call the Buffer constructor, where that wouldn't trigger the deprecation notice?","date":"2016-11-23T21:40:54.262Z","type":"message"}
{"nick":"seishun","message":"Buffer.alloc() doesn't call the Buffer constructor, it's the opposite","date":"2016-11-23T21:41:42.620Z","type":"message"}
{"nick":"seishun","message":"at least now","date":"2016-11-23T21:41:47.128Z","type":"message"}
{"nick":"trevnorris","message":"the current solution is a stop-gap. the whole reason i started w/ the deprecate no new is so we could clean that up","date":"2016-11-23T21:42:45.794Z","type":"message"}
{"nick":"trevnorris","message":"i mean seriously: \"FastBuffer.prototype.constructor = Buffer;\"","date":"2016-11-23T21:43:03.174Z","type":"message"}
{"nick":"seishun","message":"yeah and people are clearly not convinced by this motivation","date":"2016-11-23T21:43:41.198Z","type":"message"}
{"nick":"seishun","message":"hence the vote to revert","date":"2016-11-23T21:44:12.539Z","type":"message"}
{"nick":"seishun","message":"(which you're surely aware of?)","date":"2016-11-23T21:44:25.299Z","type":"message"}
{"nick":"trevnorris","message":"i'm aware that they aren't convinced that allowing Buffer to be extended isn't enough of an argument (which is beyond me, but awesome we can have such a ridiculous api), but saying we'll maintain our current hacked together implementation indefinitely is beyond me.","date":"2016-11-23T21:45:59.985Z","type":"message"}
{"nick":"trevnorris","message":"instead of saying we'll limit the arguments to those accepted by Uint8Array, we'll instead print to stderr for eternity?","date":"2016-11-23T21:46:38.264Z","type":"message"}
{"nick":"seishun","message":"not for eternity","date":"2016-11-23T21:47:30.657Z","type":"message"}
{"nick":"trevnorris","message":"so there will be a point when new Buffer() will throw?","date":"2016-11-23T21:47:49.381Z","type":"message"}
{"nick":"seishun","message":"dunno about new Buffer() (seems unlikely), but Buffer without new sure","date":"2016-11-23T21:48:21.473Z","type":"message"}
{"nick":"seishun","message":"once most of the ecosystem has moved to the new API","date":"2016-11-23T21:48:33.024Z","type":"message"}
{"nick":"trevnorris","message":"but new Buffer() will still print to stderr? (this is where i get confused in the discussion)","date":"2016-11-23T21:49:01.302Z","type":"message"}
{"nick":"Trott","message":"trevnorris: I don't think anyone knows the answer to that yet. There's the small narrow issue to resolve in the short term (should the runtime deprecation be reverted for version 7 or not?) and then the larger issue of: What to do about `new Buffer(args)` going forward and what would the timeline be.","date":"2016-11-23T21:50:41.984Z","type":"message"}
{"nick":"trevnorris","message":"also, to support es6 class extending we'd just have to check if (typeof new.target === 'function' && new.target !== Buffer). if that's the case then we continue normally.","date":"2016-11-23T21:51:43.647Z","type":"message"}
{"nick":"jasnell","date":"2016-11-23T21:52:08.612Z","type":"join"}
{"nick":"trevnorris","message":"(normally as in propagate the Uint8Array arguments)","date":"2016-11-23T21:52:17.594Z","type":"message"}
{"nick":"trevnorris","message":"Trott: so \"officially\" there's no conclusive decision about what to do about \"new Buffer()\", but there are some that want it to either throw or be removed?","date":"2016-11-23T21:53:05.350Z","type":"message"}
{"nick":"seishun","message":"I don't think anyone wants it to throw or be removed","date":"2016-11-23T21:53:49.343Z","type":"message"}
{"nick":"Trott","message":"There are definitely some (many? most? all?) who are adamant that will never feasible.","date":"2016-11-23T21:54:30.206Z","type":"message"}
{"nick":"trevnorris","message":"gah. then what's this about hard deprecation of \"new Buffer\"? i thought that implied printing to stderr.","date":"2016-11-23T21:54:37.488Z","type":"message"}
{"nick":"seishun","message":"yeah, but not throwing","date":"2016-11-23T21:54:52.863Z","type":"message"}
{"nick":"trevnorris","message":"> instead of saying we'll limit the arguments to those accepted by Uint8Array, we'll instead print to stderr for eternity?","date":"2016-11-23T21:55:51.238Z","type":"message"}
{"nick":"trevnorris","message":"^ i was referring to calling \"new Buffer\". so we'd be printing to stderr on \"new Buffer\" for eternity.","date":"2016-11-23T21:55:51.442Z","type":"message"}
{"nick":"Trott","message":"This sleep-deprived person seems to sum up the options pretty well as I understand them: https://github.com/nodejs/node/issues/9531#issuecomment-262502524","date":"2016-11-23T21:56:50.046Z","type":"message"}
{"nick":"seishun","message":"I think there was some discussion to make new Buffer(num) zero-fill in the same version that it gets hard-deprecated. I guess it could get un-deprecated when no one uses versions of Node.js that don't zero-fill","date":"2016-11-23T21:57:42.693Z","type":"message"}
{"nick":"seishun","message":"(i.e. many years later)","date":"2016-11-23T21:58:05.008Z","type":"message"}
{"nick":"Trott","message":"\"We can force new, print a warning or leave it as-is, but it can't be fully removed.\" I don't think anyone's seriously talking about options that aren't one of those three. (I could be confused, of course.)","date":"2016-11-23T21:58:16.393Z","type":"message"}
{"nick":"trevnorris","message":"seishun: i'm am 100% okay w/ forcing zero-fill on new Buffer. we can even strip out the ability to accept strings. just allowing the same parameters as Uint8Array would simplify a lot.","date":"2016-11-23T21:58:54.926Z","type":"message"}
{"nick":"trevnorris","message":"Trott: what that was meant to exclude is printing to stderr on \"new Buffer\"","date":"2016-11-23T21:59:17.522Z","type":"message"}
{"nick":"seishun","message":"isn't that \"print a warning\"?","date":"2016-11-23T21:59:50.467Z","type":"message"}
{"nick":"Trott","message":"trevnorris: Oh, so that was referring just to `Buffer(args)` but not `new Buffer(args)`?","date":"2016-11-23T22:00:54.406Z","type":"message"}
{"nick":"trevnorris","message":"seishun: i can see how that is confusing. combined w/ the option of \"forcing new\" my logic dictated that if no-new would throw then \"new Buffer\" wouldn't need to print.","date":"2016-11-23T22:01:26.587Z","type":"message"}
{"nick":"trevnorris","message":"Trott: yeah","date":"2016-11-23T22:01:28.444Z","type":"message"}
{"nick":"trevnorris","message":"but i was very sleepy when i wrote that. my bad. sorry","date":"2016-11-23T22:01:44.652Z","type":"message"}
{"nick":"seishun","message":"trevnorris: there's some agreement that zero-filling without hard-deprecation can cause some module authors to rely on it, which would result in security issues for those on older versions of node","date":"2016-11-23T22:02:44.678Z","type":"message"}
{"nick":"trevnorris","message":"i mean, by stating that we'd \"force new\" then all options listed only pertained to not calling Buffer w/ new.","date":"2016-11-23T22:02:54.107Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-11-23T22:03:20.887Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-11-23T22:03:21.087Z","type":"part"}
{"nick":"Trott","message":"trevnorris: As I understand it, the main advocate on the CTC for emitting a deprecation warning in version 8 for `new Buffer(args)`is ChALkeR. You may want to connect with him privately in email on this. I think understanding his position fully is important. Not agreeing, of course, but understanding it top-to-bottom (which you may, already, but a private","date":"2016-11-23T22:03:34.166Z","type":"message"}
{"nick":"Trott","message":"conversation would probably help things move along).","date":"2016-11-23T22:03:34.365Z","type":"message"}
{"nick":"Trott","message":"If I could have my way, I'd get three comfortable chairs for you, ChALkeR, and addaleax and have you all talk until all three agreed that the other two fully understood them (but not necessarily agree, although that would be rad).","date":"2016-11-23T22:05:27.363Z","type":"message"}
{"nick":"trevnorris","message":"hah. they should hurry and invent holographic meeting rooms. i have a recliner in my office, so i'm ready.","date":"2016-11-23T22:06:14.751Z","type":"message"}
{"nick":"chalker_","message":"I'm currently here, but I don't think I would be able to discuss things now, I got up early today and it's past midnight here.","date":"2016-11-23T22:08:14.429Z","type":"message"}
{"nick":"seishun","message":"you might want to read the github discussions in the meantime","date":"2016-11-23T22:08:56.562Z","type":"message"}
{"nick":"chalker_","message":"trevnorris: The main reason is that (new) Buffer(string) causes to many security issues, and I don't see any other way to eradicate those in the ecosystem.","date":"2016-11-23T22:09:16.526Z","type":"message"}
{"nick":"chalker_","message":"*too","date":"2016-11-23T22:09:21.230Z","type":"message"}
{"nick":"chalker_","message":"I mean, when people want to use (and think that they are using) Buffer(string), but a Buffer(number) could be called by an attacker.","date":"2016-11-23T22:10:11.018Z","type":"message"}
{"nick":"trevnorris","message":"hey chalker_, glad you're here. :) i'd be fine throwing on new Buffer(string), but allowing new Buffer(number).","date":"2016-11-23T22:10:17.990Z","type":"message"}
{"nick":"chalker_","message":"Not printing warnings on new Buffer(number) is fine unless we want to zero-fill it.","date":"2016-11-23T22:10:53.800Z","type":"message"}
{"nick":"trevnorris","message":"i'd be happy w/ an implementation of \"class Buffer extends Uint8Array { constructor() { super(...arguments) }}\"","date":"2016-11-23T22:11:28.689Z","type":"message"}
{"nick":"chalker_","message":"If we want to zero-fill new Buffer(number) _and_ not print deprecation warings on that, things might start going bad for users who did not update their Node.js version to the latest patch release.","date":"2016-11-23T22:11:46.833Z","type":"message"}
{"nick":"chalker_","message":"I'm not entirely sure about Buffer([array]) yet, but it's probably much less dangereous than Buffer(string).","date":"2016-11-23T22:12:29.560Z","type":"message"}
{"nick":"seishun","message":"didn't new Buffer(num) itself result in security issues? you told me you'd seen a lot of code that erroneously assumed that it's zero-filled","date":"2016-11-23T22:12:36.466Z","type":"message"}
{"nick":"trevnorris","message":"how about we make it zero-fill now, then just fast-forward 2 years into the future. that way we have no supported node versions that aren't insecure? :P","date":"2016-11-23T22:12:58.665Z","type":"message"}
{"nick":"trevnorris","message":"seishun: i think that applied to people assuming it would be zero-filled, but older versions of node not having that zero-filled.","date":"2016-11-23T22:13:34.240Z","type":"message"}
{"nick":"chalker_","message":"seishun: yes, that was a significant number of usecases. Buffer(string)/Buffer(num) mixup is many times more common, though, and I would want to get that sorted out asap.","date":"2016-11-23T22:13:56.447Z","type":"message"}
{"nick":"chalker_","message":"For assuming zero-filling, perhaps soft deprecation and the introduction of the new API would already be good enough, the most prominent issue atm is calling Buffer(number) where Buffer(string) was meant.","date":"2016-11-23T22:15:24.975Z","type":"message"}
{"nick":"seishun","message":"how significant? would it not make sense to eradicate those issues as well?","date":"2016-11-23T22:16:07.850Z","type":"message"}
{"nick":"chalker_","message":"It would, of course.","date":"2016-11-23T22:16:25.316Z","type":"message"}
{"nick":"chalker_","message":"Ah, perhaps I need to get some sleep first =).","date":"2016-11-23T22:17:17.907Z","type":"message"}
{"nick":"seishun","message":"and it seems temporarily hard-deprecating new Buffer(num) is the only way to safely change its behavior to zero-filling","date":"2016-11-23T22:18:32.428Z","type":"message"}
{"nick":"chalker_","message":"Deprecating Buffer(num) would still be good, in my opinion, but it's not as important as solving the string/num mixup. If that helps include the deprecation ito v8, we could keep Buffer(num) utouched, at least for now.","date":"2016-11-23T22:18:40.970Z","type":"message"}
{"nick":"chalker_","message":"> and it seems temporarily hard-deprecating new Buffer(num) is the only way to safely change its behavior to zero-filling","date":"2016-11-23T22:18:50.867Z","type":"message"}
{"nick":"chalker_","message":"that is correct.","date":"2016-11-23T22:18:53.810Z","type":"message"}
{"nick":"chalker_","message":"Where «temporarily» is in fact for a quite significant amount of time.","date":"2016-11-23T22:19:35.123Z","type":"message"}
{"nick":"seishun","message":"what if zero-filling is backported? then it would be just until everyone updates","date":"2016-11-23T22:20:56.659Z","type":"message"}
{"nick":"chalker_","message":"> it would be just until everyone updates","date":"2016-11-23T22:21:46.619Z","type":"message"}
{"nick":"chalker_","message":"I'm not sure when would that happen.","date":"2016-11-23T22:21:54.819Z","type":"message"}
{"nick":"chalker_","message":"Judging from the GitHub issues (we have a version field there) people often use some version significantly older than the latest minor/patch.","date":"2016-11-23T22:22:38.323Z","type":"message"}
{"nick":"seishun","message":"it should still be sooner than all versions of node older than v8.0 reaching EOL","date":"2016-11-23T22:24:17.402Z","type":"message"}
{"nick":"chalker_","message":"True =). I will be able to discuss this tomorrow, though, I am falling asleep now =).","date":"2016-11-23T22:31:41.397Z","type":"message"}
{"nick":"Lee1092","reason":"Quit: Connection closed for inactivity","date":"2016-11-23T22:36:32.171Z","type":"quit"}
{"nick":"chalker_","reason":"Ping timeout: 240 seconds","date":"2016-11-23T22:40:57.208Z","type":"quit"}
{"nick":"seishun","message":"trevnorris: are you saying there's a way to make Buffer extensible without dropping support for new-less constructor?","date":"2016-11-23T22:41:09.094Z","type":"message"}
{"nick":"trevnorris","message":"seishun: think so. something along the lines of https://github.com/nodejs/node/issues/9531#issuecomment-262647023","date":"2016-11-23T22:41:44.379Z","type":"message"}
{"nick":"trevnorris","message":"but that also means we acknowledge that allowing strings to be passed to extended Buffers does not fit within the security issue.","date":"2016-11-23T22:42:25.259Z","type":"message"}
{"nick":"seishun","message":"I was under an impression that it can be extended only if it's an ES6 class","date":"2016-11-23T22:43:40.862Z","type":"message"}
{"nick":"trevnorris","message":"seishun: it's possible to extend from a normal function, and have new.target set accordingly. though i'd rather that Buffer becomes a class.","date":"2016-11-23T22:51:07.481Z","type":"message"}
{"nick":"seishun","message":"I'd love to see a PoC for that","date":"2016-11-23T22:52:37.474Z","type":"message"}
{"nick":"trevnorris","message":"though extending from a function instead of a class requires leaving out the constructor() call. which sort of defeats some forward compatibility purposes.","date":"2016-11-23T22:53:45.213Z","type":"message"}
{"nick":"trevnorris","message":"second code box here shows it: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#Sub_classing_with_extends","date":"2016-11-23T22:54:37.069Z","type":"message"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-11-23T22:56:26.103Z","type":"quit"}
{"nick":"seishun","message":"ok but can a function extend from Uint8Array?","date":"2016-11-23T22:59:52.348Z","type":"message"}
{"nick":"trevnorris","message":"seishun: ah up. missed a step. i'll work on a PoC","date":"2016-11-23T23:08:34.896Z","type":"message"}
{"nick":"seishun","message":":P","date":"2016-11-23T23:08:45.942Z","type":"message"}
{"nick":"trevnorris","message":"we can indirectly, but i'm unsure of how it'd look by the time it came out the other side.","date":"2016-11-23T23:13:09.619Z","type":"message"}
{"nick":"jasnell","date":"2016-11-23T23:13:32.597Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 245 seconds","date":"2016-11-23T23:14:38.870Z","type":"quit"}
{"nick":"jasnell","reason":"Ping timeout: 258 seconds","date":"2016-11-23T23:18:01.617Z","type":"quit"}
{"nick":"thefourtheye","reason":"Quit: Connection closed for inactivity","date":"2016-11-23T23:42:28.992Z","type":"quit"}
{"nick":"jasnell","date":"2016-11-23T23:43:15.665Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 258 seconds","date":"2016-11-23T23:47:55.568Z","type":"quit"}
{"nick":"alrra","reason":"Quit: Connection closed for inactivity","date":"2016-11-23T23:51:16.249Z","type":"quit"}
