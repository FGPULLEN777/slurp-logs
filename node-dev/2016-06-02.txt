{"nick":"nodejs-gh","date":"2016-06-02T00:02:38.036Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:02:38.256Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T00:02:58.027Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:02:58.207Z","type":"part"}
{"nick":"SomeKittens","reason":"Quit: Connection closed for inactivity","date":"2016-06-02T00:04:17.266Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T00:04:30.039Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:04:30.219Z","type":"part"}
{"nick":"qard","reason":"Quit: (╯°□°）╯︵ pɹɐb","date":"2016-06-02T00:04:44.235Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T00:04:57.291Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:04:57.472Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T00:05:30.024Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:05:30.244Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T00:18:44.345Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:18:44.526Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T00:26:02.136Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:26:02.357Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T00:26:12.133Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:26:12.313Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T00:27:37.163Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:27:37.346Z","type":"part"}
{"nick":"nuizzy","reason":"Quit: nuizzy","date":"2016-06-02T00:27:59.093Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T00:29:12.167Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:29:12.348Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T00:29:37.173Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:29:37.354Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T00:32:36.272Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:32:36.453Z","type":"part"}
{"nick":"addaleax","message":"thealphanerd: every doc change that should be backported requires a PR now because it can’t possibly land cleanly (due to .markdown), right?","date":"2016-06-02T00:35:54.497Z","type":"message"}
{"nick":"thealphanerd","message":"it just works with 3 way merge","date":"2016-06-02T00:36:06.416Z","type":"message"}
{"nick":"thealphanerd","message":"I use both of these aliases to land commits from github","date":"2016-06-02T00:36:40.644Z","type":"message"}
{"nick":"thealphanerd","message":"https://github.com/TheAlphaNerd/Dot-files/blob/master/.gitconfig#L26-L29","date":"2016-06-02T00:36:40.911Z","type":"message"}
{"nick":"thealphanerd","message":"git am -3 will smartly figure out the rename","date":"2016-06-02T00:36:50.741Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-06-02T00:37:27.008Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:37:27.189Z","type":"part"}
{"nick":"addaleax","message":"thealphanerd: oh, cool, good to know :)","date":"2016-06-02T00:38:47.923Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-06-02T00:38:49.013Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:38:49.194Z","type":"part"}
{"nick":"thealphanerd","message":":D","date":"2016-06-02T00:38:52.065Z","type":"message"}
{"nick":"thealphanerd","message":"btw @channel (which I know only pings @ajpiano) we need to be a lot more on top of the LTS labels... the backlog of issues that have not been labelled is pretty massive","date":"2016-06-02T00:39:58.579Z","type":"message"}
{"nick":"jasnell_","message":"thealphanerd: sorry, was away from the laptop","date":"2016-06-02T00:40:07.482Z","type":"message"}
{"nick":"jasnell_","message":"what would I might know better?","date":"2016-06-02T00:40:20.964Z","type":"message"}
{"nick":"ajpiano","message":"yea for real def gotta get on top of that backlog","date":"2016-06-02T00:40:54.949Z","type":"message"}
{"nick":"thealphanerd","message":"question that was being asked by srl295","date":"2016-06-02T00:41:27.558Z","type":"message"}
{"nick":"thealphanerd","message":"ajpiano :D","date":"2016-06-02T00:41:33.202Z","type":"message"}
{"nick":"sankha","date":"2016-06-02T00:49:15.455Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:51:20.951Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T00:51:21.133Z","type":"part"}
{"nick":"thealphanerd","message":"addaleax thank you so much for the prompt responses! so helpful","date":"2016-06-02T00:53:09.316Z","type":"message"}
{"nick":"thealphanerd","message":"(also big high five for all the work you've been doing)","date":"2016-06-02T00:53:21.645Z","type":"message"}
{"nick":"sankha","reason":"Ping timeout: 240 seconds","date":"2016-06-02T00:53:41.134Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-06-02T00:54:17.595Z","type":"quit"}
{"nick":"addaleax","message":"thealphanerd: yeah, thank my bad sleep patterns… ;)","date":"2016-06-02T00:55:48.198Z","type":"message"}
{"nick":"addaleax","message":"but glad to hear i’m helping ;)","date":"2016-06-02T00:56:00.645Z","type":"message"}
{"nick":"addaleax","message":"thealphanerd: and thank you for being really positive around here… i know i’m not the only one who values that a lot :)","date":"2016-06-02T00:59:28.838Z","type":"message"}
{"nick":"jasnell_","reason":"Remote host closed the connection","date":"2016-06-02T01:04:01.935Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-06-02T01:33:31.681Z","type":"join"}
{"nick":"SomeKittens","date":"2016-06-02T01:37:35.106Z","type":"join"}
{"nick":"italoacasas","date":"2016-06-02T01:54:13.402Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-06-02T01:58:10.492Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-06-02T02:03:05.652Z","type":"join"}
{"nick":"italoacasas","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-06-02T02:03:16.361Z","type":"quit"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2016-06-02T02:03:25.215Z","type":"quit"}
{"nick":"creationix","new_nick":"creationix_","date":"2016-06-02T02:21:32.679Z","type":"nick"}
{"nick":"creationix_","new_nick":"creationix","date":"2016-06-02T02:21:54.901Z","type":"nick"}
{"nick":"jasnell","date":"2016-06-02T02:30:39.697Z","type":"join"}
{"nick":"Lee1092","date":"2016-06-02T02:34:19.458Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T02:43:25.307Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T02:43:25.494Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T02:43:34.704Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T02:43:34.884Z","type":"part"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-06-02T02:46:54.319Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T02:47:09.556Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T02:47:09.739Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T02:47:31.299Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T02:47:31.517Z","type":"part"}
{"nick":"kenansulayman","reason":"Quit: ZNC - http://znc.in","date":"2016-06-02T02:47:51.868Z","type":"quit"}
{"nick":"konobi","message":"is v8 script streaming exposed anywhere?","date":"2016-06-02T03:03:25.744Z","type":"message"}
{"nick":"jasnell","date":"2016-06-02T03:05:28.691Z","type":"join"}
{"nick":"kenansulayman","date":"2016-06-02T03:05:45.126Z","type":"join"}
{"nick":"kenansulayman","new_nick":"Guest22828","date":"2016-06-02T03:06:08.173Z","type":"nick"}
{"nick":"italoacasas","date":"2016-06-02T03:12:17.141Z","type":"join"}
{"nick":"addaleax","message":"konobi: you mean, to JS code? i don't think so","date":"2016-06-02T03:17:26.926Z","type":"message"}
{"nick":"konobi","message":"addaleax: i was thinking that it might be a way to allow for extra \"stuff\" to be added to files, but ignored by the parser (while keeping line numbers, etc. intact)","date":"2016-06-02T03:20:42.218Z","type":"message"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-06-02T03:22:00.193Z","type":"quit"}
{"nick":"jasnell","date":"2016-06-02T03:23:19.771Z","type":"join"}
{"nick":"addaleax","message":"konobi: i have no idea if that's possible, with or without using v8's streaming","date":"2016-06-02T03:23:40.315Z","type":"message"}
{"nick":"Guest22828","reason":"Read error: Connection reset by peer","date":"2016-06-02T03:25:39.332Z","type":"quit"}
{"nick":"sankha","date":"2016-06-02T03:26:13.462Z","type":"join"}
{"nick":"konobi","message":"yeah","date":"2016-06-02T03:27:44.013Z","type":"message"}
{"nick":"jasnell","reason":"Ping timeout: 260 seconds","date":"2016-06-02T03:27:44.490Z","type":"quit"}
{"nick":"addaleax","message":"konobi: depending on what you're planning it might be easier to hook into the module loader/vm","date":"2016-06-02T03:29:23.444Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-06-02T03:29:42.017Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T03:29:42.209Z","type":"part"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T03:30:27.238Z","type":"quit"}
{"nick":"sankha","date":"2016-06-02T03:35:35.207Z","type":"join"}
{"nick":"italoacasas","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-06-02T03:36:42.547Z","type":"quit"}
{"nick":"konobi","message":"yeah","date":"2016-06-02T03:37:27.315Z","type":"message"}
{"nick":"italoacasas","date":"2016-06-02T03:52:31.004Z","type":"join"}
{"nick":"jasnell","date":"2016-06-02T03:55:39.739Z","type":"join"}
{"nick":"italoacasas","reason":"Client Quit","date":"2016-06-02T03:57:01.246Z","type":"quit"}
{"nick":"kenansulayman","date":"2016-06-02T04:04:27.673Z","type":"join"}
{"nick":"kenansulayman","new_nick":"Guest46284","date":"2016-06-02T04:04:51.152Z","type":"nick"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T04:16:31.662Z","type":"quit"}
{"nick":"italoacasas","date":"2016-06-02T04:28:56.123Z","type":"join"}
{"nick":"sankha","date":"2016-06-02T04:32:39.606Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T04:32:48.700Z","type":"quit"}
{"nick":"italoacasas","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-06-02T04:41:54.228Z","type":"quit"}
{"nick":"sankha","date":"2016-06-02T05:00:40.897Z","type":"join"}
{"nick":"alrra","date":"2016-06-02T05:06:40.100Z","type":"join"}
{"nick":"addaleax","reason":"Quit: ChatZilla 0.9.92 [Firefox 46.0.1/20160511223818]","date":"2016-06-02T05:11:45.333Z","type":"quit"}
{"nick":"Guest46284","reason":"Read error: Connection reset by peer","date":"2016-06-02T05:17:17.475Z","type":"quit"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T05:19:23.552Z","type":"quit"}
{"nick":"sankha","date":"2016-06-02T05:20:04.259Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T05:21:05.782Z","type":"quit"}
{"nick":"sankha","date":"2016-06-02T05:23:47.342Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T05:31:39.875Z","type":"quit"}
{"nick":"lpin","date":"2016-06-02T05:37:25.960Z","type":"join"}
{"nick":"BridgeAR","date":"2016-06-02T05:47:15.279Z","type":"join"}
{"nick":"howdoi","date":"2016-06-02T05:57:45.311Z","type":"join"}
{"nick":"sankha","date":"2016-06-02T05:58:04.556Z","type":"join"}
{"nick":"calibre720","date":"2016-06-02T06:02:00.685Z","type":"join"}
{"nick":"BridgeAR","reason":"Ping timeout: 244 seconds","date":"2016-06-02T06:09:50.118Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T06:18:55.963Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T06:18:56.141Z","type":"part"}
{"nick":"kenansulayman","date":"2016-06-02T06:28:00.858Z","type":"join"}
{"nick":"kenansulayman","new_nick":"Guest78611","date":"2016-06-02T06:28:23.963Z","type":"nick"}
{"nick":"mcollina","date":"2016-06-02T06:30:37.294Z","type":"join"}
{"nick":"mcollina","reason":"Remote host closed the connection","date":"2016-06-02T06:38:23.034Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T06:39:44.454Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T06:39:44.631Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T06:40:45.491Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T06:40:45.705Z","type":"part"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T07:08:05.323Z","type":"quit"}
{"nick":"sankha","date":"2016-06-02T07:13:15.465Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T07:23:39.235Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T07:23:39.449Z","type":"part"}
{"nick":"mcollina","date":"2016-06-02T07:34:00.166Z","type":"join"}
{"nick":"mcollina","reason":"Remote host closed the connection","date":"2016-06-02T07:37:30.612Z","type":"quit"}
{"nick":"mcollina","date":"2016-06-02T07:37:44.492Z","type":"join"}
{"nick":"johnDoe111","date":"2016-06-02T07:55:23.214Z","type":"join"}
{"nick":"johnDoe111^","date":"2016-06-02T07:59:38.573Z","type":"join"}
{"nick":"johnDoe111","reason":"Ping timeout: 264 seconds","date":"2016-06-02T07:59:52.041Z","type":"quit"}
{"nick":"johnDoe111^","reason":"Remote host closed the connection","date":"2016-06-02T08:11:08.756Z","type":"quit"}
{"nick":"johnDoe111","date":"2016-06-02T08:11:17.901Z","type":"join"}
{"nick":"peutetre","date":"2016-06-02T08:12:10.101Z","type":"join"}
{"nick":"johnDoe111","reason":"Remote host closed the connection","date":"2016-06-02T08:12:44.887Z","type":"quit"}
{"nick":"johnDoe111","date":"2016-06-02T08:14:59.165Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T08:16:18.537Z","type":"quit"}
{"nick":"johnDoe111","reason":"Remote host closed the connection","date":"2016-06-02T08:20:44.048Z","type":"quit"}
{"nick":"sankha","date":"2016-06-02T08:40:24.171Z","type":"join"}
{"nick":"johnDoe111","date":"2016-06-02T08:42:58.839Z","type":"join"}
{"nick":"MadHatter42","date":"2016-06-02T08:48:03.083Z","type":"join"}
{"nick":"johnDoe111","reason":"Remote host closed the connection","date":"2016-06-02T08:55:24.782Z","type":"quit"}
{"nick":"pol123456","date":"2016-06-02T08:56:35.428Z","type":"join"}
{"nick":"johnDoe111","date":"2016-06-02T09:01:50.184Z","type":"join"}
{"nick":"johnDoe111","reason":"Remote host closed the connection","date":"2016-06-02T09:01:53.321Z","type":"quit"}
{"nick":"MadHatter42","reason":"Ping timeout: 264 seconds","date":"2016-06-02T09:13:40.055Z","type":"quit"}
{"nick":"peutetre","reason":"Quit: ...","date":"2016-06-02T09:26:28.096Z","type":"quit"}
{"nick":"dbevenius","new_nick":"dbevenius|lunch","date":"2016-06-02T09:32:51.942Z","type":"nick"}
{"nick":"peutetre","date":"2016-06-02T09:35:49.070Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T09:46:43.446Z","type":"quit"}
{"nick":"BridgeAR","date":"2016-06-02T09:49:22.301Z","type":"join"}
{"nick":"sankha","date":"2016-06-02T10:05:09.882Z","type":"join"}
{"nick":"seishun","date":"2016-06-02T10:06:06.281Z","type":"join"}
{"nick":"peutetre","reason":"Quit: ...","date":"2016-06-02T10:45:38.661Z","type":"quit"}
{"nick":"thealphanerd","reason":"Quit: farewell for now","date":"2016-06-02T10:50:10.194Z","type":"quit"}
{"nick":"thealphanerd","date":"2016-06-02T10:50:40.884Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T10:57:01.454Z","type":"quit"}
{"nick":"johnDoe111","date":"2016-06-02T10:59:54.463Z","type":"join"}
{"nick":"peutetre","date":"2016-06-02T11:01:19.007Z","type":"join"}
{"nick":"johnDoe111","reason":"Remote host closed the connection","date":"2016-06-02T11:02:30.347Z","type":"quit"}
{"nick":"peutetre","reason":"Client Quit","date":"2016-06-02T11:02:34.349Z","type":"quit"}
{"nick":"johnDoe111","date":"2016-06-02T11:04:32.616Z","type":"join"}
{"nick":"calibre720","reason":"Ping timeout: 244 seconds","date":"2016-06-02T11:05:00.661Z","type":"quit"}
{"nick":"sankha","date":"2016-06-02T11:08:24.279Z","type":"join"}
{"nick":"calibre720","date":"2016-06-02T11:14:32.891Z","type":"join"}
{"nick":"dbevenius|lunch","new_nick":"dbevenius","date":"2016-06-02T11:16:01.630Z","type":"nick"}
{"nick":"sgimeno","reason":"Remote host closed the connection","date":"2016-06-02T11:34:10.281Z","type":"quit"}
{"nick":"johnDoe111","reason":"Remote host closed the connection","date":"2016-06-02T11:41:22.455Z","type":"quit"}
{"nick":"johnDoe111","date":"2016-06-02T11:47:00.222Z","type":"join"}
{"nick":"johnDoe111","reason":"Remote host closed the connection","date":"2016-06-02T11:48:21.754Z","type":"quit"}
{"nick":"johnDoe111","date":"2016-06-02T11:53:08.908Z","type":"join"}
{"nick":"johnDoe111","reason":"Remote host closed the connection","date":"2016-06-02T12:00:20.035Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T12:33:33.718Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T12:33:33.933Z","type":"part"}
{"nick":"dbevenius","new_nick":"dbevenius|away","date":"2016-06-02T12:42:25.995Z","type":"nick"}
{"nick":"robbyoconnor","reason":"Ping timeout: 276 seconds","date":"2016-06-02T12:45:30.328Z","type":"quit"}
{"nick":"pol123456","reason":"Remote host closed the connection","date":"2016-06-02T12:51:28.177Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T12:52:11.966Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T12:52:12.143Z","type":"part"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2016-06-02T12:55:21.664Z","type":"nick"}
{"nick":"joshontheweb","date":"2016-06-02T13:01:04.150Z","type":"join"}
{"nick":"italoacasas","date":"2016-06-02T13:02:58.597Z","type":"join"}
{"nick":"bradleymeck","date":"2016-06-02T13:14:02.469Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-06-02T13:25:03.392Z","type":"quit"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T13:25:42.425Z","type":"quit"}
{"nick":"sankha","date":"2016-06-02T13:28:40.202Z","type":"join"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2016-06-02T13:29:14.824Z","type":"quit"}
{"nick":"sgimeno","date":"2016-06-02T13:29:32.316Z","type":"join"}
{"nick":"jasnell","date":"2016-06-02T13:34:12.159Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T13:35:33.066Z","type":"quit"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2016-06-02T13:39:54.211Z","type":"quit"}
{"nick":"bradleymeck_","date":"2016-06-02T13:39:59.750Z","type":"join"}
{"nick":"sankha","date":"2016-06-02T13:40:55.509Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T13:42:23.454Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T13:44:48.002Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T13:44:48.179Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T13:48:03.014Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T13:48:03.191Z","type":"part"}
{"nick":"italoacasas","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2016-06-02T13:49:18.126Z","type":"quit"}
{"nick":"italoacasas","date":"2016-06-02T13:49:40.361Z","type":"join"}
{"nick":"sankha","date":"2016-06-02T13:49:43.654Z","type":"join"}
{"nick":"rvagg","message":"saghul: ping","date":"2016-06-02T13:51:35.229Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-06-02T13:51:38.686Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T13:51:38.863Z","type":"part"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T13:51:44.105Z","type":"quit"}
{"nick":"rvagg","message":"saghul: if you're around, I'd love a sanity check of my description of the tty fix for v6.2.1 @ https://github.com/nodejs/node/pull/7108","date":"2016-06-02T13:51:55.370Z","type":"message"}
{"nick":"rvagg","message":"would appreciate sanity checking of any of the Notable items text from anyone who's here in fact","date":"2016-06-02T13:54:23.632Z","type":"message"}
{"nick":"sankha","date":"2016-06-02T13:56:39.893Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T13:58:28.004Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T13:58:28.181Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T13:59:04.689Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T13:59:04.867Z","type":"part"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-06-02T14:08:16.692Z","type":"quit"}
{"nick":"jasnell","date":"2016-06-02T14:09:31.944Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 260 seconds","date":"2016-06-02T14:14:17.724Z","type":"quit"}
{"nick":"jasnell","date":"2016-06-02T14:20:02.525Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T14:23:41.111Z","type":"quit"}
{"nick":"sankha","date":"2016-06-02T14:30:05.873Z","type":"join"}
{"nick":"Fishrock123","date":"2016-06-02T14:33:49.128Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T14:38:55.128Z","type":"quit"}
{"nick":"sankha","date":"2016-06-02T14:40:28.860Z","type":"join"}
{"nick":"parshap","reason":"Ping timeout: 264 seconds","date":"2016-06-02T15:06:28.248Z","type":"quit"}
{"nick":"hackygolucky__","reason":"Ping timeout: 264 seconds","date":"2016-06-02T15:07:04.279Z","type":"quit"}
{"nick":"parshap","date":"2016-06-02T15:07:44.031Z","type":"join"}
{"nick":"peutetre","date":"2016-06-02T15:08:15.989Z","type":"join"}
{"nick":"hackygolucky__","date":"2016-06-02T15:09:30.309Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T15:15:48.001Z","type":"quit"}
{"nick":"peutetre","reason":"Quit: ...","date":"2016-06-02T15:18:46.488Z","type":"quit"}
{"nick":"bradleymeck_","reason":"Read error: Connection reset by peer","date":"2016-06-02T15:25:01.144Z","type":"quit"}
{"nick":"peutetre","date":"2016-06-02T15:25:41.309Z","type":"join"}
{"nick":"bradleymeck","date":"2016-06-02T15:25:55.004Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 272 seconds","date":"2016-06-02T15:36:44.108Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T15:37:04.671Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T15:37:04.853Z","type":"part"}
{"nick":"peutetre","reason":"Quit: ...","date":"2016-06-02T15:37:14.651Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T15:38:14.655Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T15:38:14.832Z","type":"part"}
{"nick":"seishun","date":"2016-06-02T15:39:39.336Z","type":"join"}
{"nick":"bradleymeck_","date":"2016-06-02T15:43:17.728Z","type":"join"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2016-06-02T15:44:07.014Z","type":"quit"}
{"nick":"bradleymeck_","new_nick":"bradleymeck","date":"2016-06-02T15:44:07.225Z","type":"nick"}
{"nick":"jgi","date":"2016-06-02T15:53:12.378Z","type":"join"}
{"nick":"sankha","date":"2016-06-02T16:00:35.424Z","type":"join"}
{"nick":"mcollina","reason":"Remote host closed the connection","date":"2016-06-02T16:01:25.384Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-06-02T16:02:27.407Z","type":"quit"}
{"nick":"thefourtheye___","reason":"Quit: Connection closed for inactivity","date":"2016-06-02T16:10:29.547Z","type":"quit"}
{"nick":"mcollina","date":"2016-06-02T16:20:26.011Z","type":"join"}
{"nick":"mcollina","reason":"Remote host closed the connection","date":"2016-06-02T16:37:32.195Z","type":"quit"}
{"nick":"thealphanerd","message":"Fishrock123 thatnks for going through all those backport questions :D","date":"2016-06-02T16:43:30.676Z","type":"message"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T16:43:41.103Z","type":"quit"}
{"nick":"thealphanerd","message":"there is still quite a backlog to go through :D","date":"2016-06-02T16:43:45.120Z","type":"message"}
{"nick":"sankha","date":"2016-06-02T16:43:56.917Z","type":"join"}
{"nick":"robink_","reason":"Ping timeout: 244 seconds","date":"2016-06-02T16:45:20.140Z","type":"quit"}
{"nick":"qard","date":"2016-06-02T16:46:22.674Z","type":"join"}
{"nick":"bradleymeck","message":"explaining how .json will work with `import` is pretty magical once people start to see what that entails","date":"2016-06-02T16:49:02.119Z","type":"message"}
{"nick":"joshontheweb","reason":"Read error: Connection reset by peer","date":"2016-06-02T16:49:17.837Z","type":"quit"}
{"nick":"ljharb","message":"wait, you'll be able to import json files?","date":"2016-06-02T16:50:23.835Z","type":"message"}
{"nick":"ljharb","message":"why?","date":"2016-06-02T16:50:28.999Z","type":"message"}
{"nick":"ljharb","message":"requiring json files is considered an antipattern as it is","date":"2016-06-02T16:50:39.256Z","type":"message"}
{"nick":"joshontheweb","date":"2016-06-02T16:52:20.973Z","type":"join"}
{"nick":"bradleymeck","message":"ljharb: i didn't suggest it but it was mentioned by other loading stuff","date":"2016-06-02T16:52:43.909Z","type":"message"}
{"nick":"bradleymeck","message":"just explaining how it would work, its not in the EPS","date":"2016-06-02T16:52:56.488Z","type":"message"}
{"nick":"ljharb","message":"ok good","date":"2016-06-02T16:53:07.199Z","type":"message"}
{"nick":"ljharb","message":"i don't care if someone wants to write a loader to do it, but it shouldn't be built in","date":"2016-06-02T16:53:17.182Z","type":"message"}
{"nick":"ljharb","message":"custom loaders can do whatever they want :-p","date":"2016-06-02T16:53:26.469Z","type":"message"}
{"nick":"sankha_","date":"2016-06-02T16:53:27.650Z","type":"join"}
{"nick":"bradleymeck","message":"mixed feelings personally","date":"2016-06-02T16:53:32.049Z","type":"message"}
{"nick":"sankha","reason":"Ping timeout: 260 seconds","date":"2016-06-02T16:56:27.729Z","type":"quit"}
{"nick":"Fishrock123","message":"ljharb: requiring json files isn't an antipattern?","date":"2016-06-02T16:59:53.727Z","type":"message"}
{"nick":"Fishrock123","message":"or at least core doesn't consider it to be","date":"2016-06-02T17:00:01.272Z","type":"message"}
{"nick":"robink_","date":"2016-06-02T17:02:22.679Z","type":"join"}
{"nick":"thefourtheye___","date":"2016-06-02T17:03:21.101Z","type":"join"}
{"nick":"ljharb","message":"Fishrock123: the community considers it one. fs.readFile ftw.","date":"2016-06-02T17:03:33.689Z","type":"message"}
{"nick":"ljharb","message":"Fishrock123: it's less bad if there's a \".json\" explicitly included","date":"2016-06-02T17:03:46.805Z","type":"message"}
{"nick":"ljharb","message":"but using \"require\" for \"not code\" is icky","date":"2016-06-02T17:03:51.856Z","type":"message"}
{"nick":"Fishrock123","message":"oh","date":"2016-06-02T17:04:42.891Z","type":"message"}
{"nick":"Fishrock123","message":"yeah I wouldn't require a json file without adding the .json","date":"2016-06-02T17:04:54.619Z","type":"message"}
{"nick":"Fishrock123","message":"But I would require it over using fs","date":"2016-06-02T17:05:02.338Z","type":"message"}
{"nick":"Fishrock123","message":"not much reason not to","date":"2016-06-02T17:05:15.522Z","type":"message"}
{"nick":"Fishrock123","message":"gets cached (iirc) etc","date":"2016-06-02T17:05:20.724Z","type":"message"}
{"nick":"ljharb","message":"true","date":"2016-06-02T17:06:23.200Z","type":"message"}
{"nick":"ljharb","message":"i'd prefer a separate global like `requireJSON` or something","date":"2016-06-02T17:06:31.335Z","type":"message"}
{"nick":"ljharb","message":"but shrug","date":"2016-06-02T17:06:32.860Z","type":"message"}
{"nick":"Fishrock123","message":"eh","date":"2016-06-02T17:06:44.383Z","type":"message"}
{"nick":"ljharb","message":"hm, what happened to my autocorrect there","date":"2016-06-02T17:06:46.029Z","type":"message"}
{"nick":"robink_","new_nick":"robink","date":"2016-06-02T17:07:52.968Z","type":"nick"}
{"nick":"Fishrock123","message":"ljharb: so the weird parts comes when you ask if json is technically \"code\" here or not","date":"2016-06-02T17:07:58.146Z","type":"message"}
{"nick":"Fishrock123","message":"because some people treat it pretty much like that","date":"2016-06-02T17:08:07.779Z","type":"message"}
{"nick":"ljharb","message":"json is data","date":"2016-06-02T17:08:08.907Z","type":"message"}
{"nick":"ljharb","message":"it can't have functions or regexes","date":"2016-06-02T17:08:16.115Z","type":"message"}
{"nick":"Fishrock123","message":"i.e. rather than importing a .js with a big object","date":"2016-06-02T17:08:20.325Z","type":"message"}
{"nick":"Fishrock123","message":"not much difference","date":"2016-06-02T17:08:26.419Z","type":"message"}
{"nick":"Fishrock123","message":"er requireing","date":"2016-06-02T17:08:33.921Z","type":"message"}
{"nick":"ljharb","message":"sure, but that makes the JS more like data, not the JSON more like code.","date":"2016-06-02T17:08:38.740Z","type":"message"}
{"nick":"Fishrock123","message":"there's not really any difference though because they both get turned into js \"code\" as in, js objects","date":"2016-06-02T17:09:08.576Z","type":"message"}
{"nick":"ljharb","message":"i get that effectively","date":"2016-06-02T17:09:34.881Z","type":"message"}
{"nick":"bradleymeck_","date":"2016-06-02T17:09:44.038Z","type":"join"}
{"nick":"ljharb","message":"but the JSON can't have side effects, the JS can, so it's a different guarantee.","date":"2016-06-02T17:09:45.113Z","type":"message"}
{"nick":"nuizzy","date":"2016-06-02T17:10:18.172Z","type":"join"}
{"nick":"Fishrock123","message":"sure, which is part of why it's preferred to do that sort of thing in json imo","date":"2016-06-02T17:10:18.612Z","type":"message"}
{"nick":"ljharb","message":"right","date":"2016-06-02T17:10:56.990Z","type":"message"}
{"nick":"bradleymeck","reason":"Ping timeout: 244 seconds","date":"2016-06-02T17:11:10.229Z","type":"quit"}
{"nick":"bradleymeck_","new_nick":"bradleymeck","date":"2016-06-02T17:11:10.407Z","type":"nick"}
{"nick":"sankha_","reason":"Remote host closed the connection","date":"2016-06-02T17:15:11.258Z","type":"quit"}
{"nick":"sankha","date":"2016-06-02T17:17:27.280Z","type":"join"}
{"nick":"nuizzy","reason":"Read error: Connection reset by peer","date":"2016-06-02T17:20:03.128Z","type":"quit"}
{"nick":"nuizzy","date":"2016-06-02T17:20:34.717Z","type":"join"}
{"nick":"mcollina","date":"2016-06-02T17:23:25.948Z","type":"join"}
{"nick":"seishun","reason":"Disconnected by services","date":"2016-06-02T17:24:00.683Z","type":"quit"}
{"nick":"seishun","date":"2016-06-02T17:24:03.400Z","type":"join"}
{"nick":"dbevenius|away","new_nick":"dbevenius","date":"2016-06-02T17:26:02.036Z","type":"nick"}
{"nick":"nodejs-gh","date":"2016-06-02T17:27:39.036Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T17:27:39.219Z","type":"part"}
{"nick":"bradleymeck_","date":"2016-06-02T17:34:22.816Z","type":"join"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2016-06-02T17:34:38.043Z","type":"quit"}
{"nick":"bradleymeck_","new_nick":"bradleymeck","date":"2016-06-02T17:34:38.294Z","type":"nick"}
{"nick":"BridgeAR","reason":"Quit: Leaving.","date":"2016-06-02T17:40:50.883Z","type":"quit"}
{"nick":"BridgeAR1","date":"2016-06-02T17:40:53.738Z","type":"join"}
{"nick":"BridgeAR1","reason":"Ping timeout: 260 seconds","date":"2016-06-02T17:45:27.696Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T17:45:46.472Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T17:45:46.658Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T17:49:56.048Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T17:49:56.228Z","type":"part"}
{"nick":"chrisdickinson","message":"re: loading json, while I tend to agree about avoiding loading it with `require`, I don't think there's broad consensus that it's a bad thing, or even that it's a particularly deprecated thing","date":"2016-06-02T17:52:20.416Z","type":"message"}
{"nick":"chrisdickinson","message":"(I'm late to the party, here)","date":"2016-06-02T17:52:41.631Z","type":"message"}
{"nick":"ljharb","message":"probably not broad","date":"2016-06-02T17:53:10.663Z","type":"message"}
{"nick":"mcollina","reason":"Ping timeout: 244 seconds","date":"2016-06-02T17:53:42.986Z","type":"quit"}
{"nick":"mcollina","date":"2016-06-02T17:54:18.664Z","type":"join"}
{"nick":"calibre720","reason":"Ping timeout: 260 seconds","date":"2016-06-02T17:57:42.710Z","type":"quit"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2016-06-02T17:59:53.819Z","type":"quit"}
{"nick":"BridgeAR","date":"2016-06-02T18:00:29.241Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T18:06:45.615Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T18:06:45.797Z","type":"part"}
{"nick":"indutny","message":"hey people","date":"2016-06-02T18:10:43.746Z","type":"message"}
{"nick":"indutny","message":"I need your advice","date":"2016-06-02T18:10:47.761Z","type":"message"}
{"nick":"indutny","message":"working on uv_http_t now","date":"2016-06-02T18:10:52.185Z","type":"message"}
{"nick":"indutny","message":"and I'm going to start fighting active vs pending requests","date":"2016-06-02T18:11:03.000Z","type":"message"}
{"nick":"indutny","message":"i.e. pipelining","date":"2016-06-02T18:11:07.026Z","type":"message"}
{"nick":"indutny","message":"there is a choice between two ways to handle it","date":"2016-06-02T18:11:22.085Z","type":"message"}
{"nick":"indutny","message":"1) do it like node does and pretend there is a way to send data for a request that isn't current","date":"2016-06-02T18:11:47.481Z","type":"message"}
{"nick":"indutny","message":"2) provide `on_current` callback for requests","date":"2016-06-02T18:12:01.522Z","type":"message"}
{"nick":"indutny","message":"so that they won't respond and/or write any data until they will become active","date":"2016-06-02T18:12:14.848Z","type":"message"}
{"nick":"indutny","message":"though, they may preload some resources or whatever","date":"2016-06-02T18:12:20.594Z","type":"message"}
{"nick":"indutny","message":"as reqs are emitted as they come anyway","date":"2016-06-02T18:12:34.381Z","type":"message"}
{"nick":"indutny","message":"what do you think is a better option?","date":"2016-06-02T18:12:38.870Z","type":"message"}
{"nick":"indutny","message":"cc creationix","date":"2016-06-02T18:12:44.942Z","type":"message"}
{"nick":"trevnorris","message":"2","date":"2016-06-02T18:12:50.060Z","type":"message"}
{"nick":"indutny","message":"thanks! May I ask you why?","date":"2016-06-02T18:13:00.510Z","type":"message"}
{"nick":"creationix","message":"indutny I would prefer whichever is simpler for the http module","date":"2016-06-02T18:13:30.454Z","type":"message"}
{"nick":"indutny","message":"oh yeah","date":"2016-06-02T18:13:36.392Z","type":"message"}
{"nick":"indutny","message":"this is why I have this option in a first place","date":"2016-06-02T18:13:42.041Z","type":"message"}
{"nick":"indutny","message":":)","date":"2016-06-02T18:13:42.687Z","type":"message"}
{"nick":"indutny","message":"first one is very complex","date":"2016-06-02T18:13:49.171Z","type":"message"}
{"nick":"creationix","message":"exactly, I guess the question is how much harder would it be for something consuming this library to add that logic","date":"2016-06-02T18:14:12.765Z","type":"message"}
{"nick":"indutny","message":"guess some kind of shim layer can be implemented on top of (2)","date":"2016-06-02T18:14:13.108Z","type":"message"}
{"nick":"indutny","message":"to emulate (1)","date":"2016-06-02T18:14:16.365Z","type":"message"}
{"nick":"indutny","message":"creationix: right! :)","date":"2016-06-02T18:14:26.529Z","type":"message"}
{"nick":"creationix","message":"if such a shim is simple enough, I'd chose #2","date":"2016-06-02T18:14:27.510Z","type":"message"}
{"nick":"indutny","message":"there are some tricks involved","date":"2016-06-02T18:14:41.770Z","type":"message"}
{"nick":"indutny","message":"to prevent DoS","date":"2016-06-02T18:14:47.427Z","type":"message"}
{"nick":"indutny","message":"i.e. don't accumulate too much data on requests that are not current","date":"2016-06-02T18:14:56.247Z","type":"message"}
{"nick":"indutny","message":"otherwise shim should be pretty simple","date":"2016-06-02T18:15:03.397Z","type":"message"}
{"nick":"indutny","message":"alright, you convinced me","date":"2016-06-02T18:15:13.335Z","type":"message"}
{"nick":"indutny","message":"thank you!","date":"2016-06-02T18:15:15.524Z","type":"message"}
{"nick":"indutny","message":":)","date":"2016-06-02T18:15:16.161Z","type":"message"}
{"nick":"creationix","message":"this is all callback based like libuv right?","date":"2016-06-02T18:15:28.412Z","type":"message"}
{"nick":"indutny","message":"yep","date":"2016-06-02T18:15:57.503Z","type":"message"}
{"nick":"indutny","message":"though, with a slight hint of uv_link_t","date":"2016-06-02T18:16:25.305Z","type":"message"}
{"nick":"indutny","message":"going to create a public uv_http_t server when I'll be done with this :)","date":"2016-06-02T18:16:42.840Z","type":"message"}
{"nick":"creationix","message":"neat","date":"2016-06-02T18:17:54.201Z","type":"message"}
{"nick":"indutny","message":"creationix: here it goes then https://github.com/indutny/uv_http_t/commit/49bc1ad765f6d123bdb61d49f4fba2d6d17a659c","date":"2016-06-02T18:26:47.422Z","type":"message"}
{"nick":"creationix","message":":)","date":"2016-06-02T18:27:08.880Z","type":"message"}
{"nick":"creationix","message":"indutny, trevnorris: so do you two think my nucleus idea might actually be a good idea?  People seem excited.  I'm willing to put time in this if people actually care, but I don't want to be pushing my agenda.  I've already got enough playgrounds to play in ;)","date":"2016-06-02T18:28:16.170Z","type":"message"}
{"nick":"indutny","message":"creationix: I think it is interesting and challenging","date":"2016-06-02T18:28:54.986Z","type":"message"}
{"nick":"trevnorris","message":"indutny: because it's easier for my simple brain to reason about","date":"2016-06-02T18:29:15.231Z","type":"message"}
{"nick":"creationix","message":"full node compat is crazy hard, but I only want to make the core that makes it possible","date":"2016-06-02T18:29:21.208Z","type":"message"}
{"nick":"indutny","message":"creationix: it is probably too late to do the same kind of thing for node","date":"2016-06-02T18:29:24.932Z","type":"message"}
{"nick":"creationix","message":"indutny for sure","date":"2016-06-02T18:29:33.021Z","type":"message"}
{"nick":"indutny","message":"oooh","date":"2016-06-02T18:29:51.604Z","type":"message"}
{"nick":"indutny","message":"I have a lovely idea","date":"2016-06-02T18:29:54.041Z","type":"message"}
{"nick":"trevnorris","message":"creationix: what you're doing is something i've been meaning to do for over a year. have even come up w/ API designs, gone through test cases, etc.","date":"2016-06-02T18:29:54.468Z","type":"message"}
{"nick":"BridgeAR","reason":"Read error: Connection reset by peer","date":"2016-06-02T18:29:54.800Z","type":"quit"}
{"nick":"creationix","message":"it does help that I've recently done the same thing for luvit and luvit is fairly close to node (except the massive popularity)","date":"2016-06-02T18:29:55.643Z","type":"message"}
{"nick":"indutny","message":"what about doing a signed packages thing :)","date":"2016-06-02T18:30:07.767Z","type":"message"}
{"nick":"trevnorris","message":"but always find myself busy w/ something else.","date":"2016-06-02T18:30:08.227Z","type":"message"}
{"nick":"indutny","message":"so we could have a tree of trust","date":"2016-06-02T18:30:13.058Z","type":"message"}
{"nick":"creationix","message":"indutny go on...","date":"2016-06-02T18:30:23.987Z","type":"message"}
{"nick":"indutny","message":"not sure if it is for nucleus, though","date":"2016-06-02T18:30:26.565Z","type":"message"}
{"nick":"indutny","message":"but anyway","date":"2016-06-02T18:30:27.629Z","type":"message"}
{"nick":"indutny","message":"so basically, there is a root CA that core devs have access too","date":"2016-06-02T18:30:41.079Z","type":"message"}
{"nick":"indutny","message":"it maybe multikey","date":"2016-06-02T18:30:50.404Z","type":"message"}
{"nick":"trevnorris","message":"(okay, not completely the same. but as far as creating a cleaner base API as the binding for native source)","date":"2016-06-02T18:30:56.951Z","type":"message"}
{"nick":"indutny","message":"so that the consensus is needed for release","date":"2016-06-02T18:30:57.670Z","type":"message"}
{"nick":"indutny","message":"then every module will need to be signed by someone","date":"2016-06-02T18:31:19.132Z","type":"message"}
{"nick":"indutny","message":"and the modules will sign their dependencies","date":"2016-06-02T18:31:26.096Z","type":"message"}
{"nick":"trevnorris","message":"beware the feature creep... ;)","date":"2016-06-02T18:31:39.562Z","type":"message"}
{"nick":"indutny","message":"and the Public Key Infrastructure will guarantee that all leads to the root CA","date":"2016-06-02T18:31:50.067Z","type":"message"}
{"nick":"indutny","message":"yeah, it is the feature creep indeed","date":"2016-06-02T18:32:00.036Z","type":"message"}
{"nick":"indutny","message":":D","date":"2016-06-02T18:32:03.357Z","type":"message"}
{"nick":"indutny","message":"just a mad idea","date":"2016-06-02T18:32:08.292Z","type":"message"}
{"nick":"trevnorris","message":"does sound cool though","date":"2016-06-02T18:32:10.363Z","type":"message"}
{"nick":"creationix","message":"I'm pretty good about saying no.  It's it's not required in core, it doesn't belong in core","date":"2016-06-02T18:32:29.283Z","type":"message"}
{"nick":"creationix","message":"but I am interested in enabling mad science to be built on top","date":"2016-06-02T18:32:42.316Z","type":"message"}
{"nick":"creationix","message":"I'm an enabler :)","date":"2016-06-02T18:32:48.319Z","type":"message"}
{"nick":"indutny","message":"ahaha","date":"2016-06-02T18:32:50.844Z","type":"message"}
{"nick":"indutny","message":"The Enabler","date":"2016-06-02T18:32:55.559Z","type":"message"}
{"nick":"creationix","message":"indutny have you see how the lit system works?","date":"2016-06-02T18:33:18.863Z","type":"message"}
{"nick":"creationix","message":"it's quite different than npm, but fills the same role for luvit","date":"2016-06-02T18:33:27.527Z","type":"message"}
{"nick":"indutny","message":"only briefly","date":"2016-06-02T18:33:27.876Z","type":"message"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-06-02T18:33:28.650Z","type":"quit"}
{"nick":"creationix","message":"the entire package repository is one giant merlke tree (git compatible even)","date":"2016-06-02T18:33:56.277Z","type":"message"}
{"nick":"creationix","message":"releases are signed tags","date":"2016-06-02T18:34:02.338Z","type":"message"}
{"nick":"trevnorris","message":"creationix: so, to clarify what you're doing. is it basically to remove stuff in lib/ and make a thing js binding to the c++ api?","date":"2016-06-02T18:34:13.413Z","type":"message"}
{"nick":"trevnorris","message":"*thin js","date":"2016-06-02T18:34:19.908Z","type":"message"}
{"nick":"creationix","message":"trevnorris effectually","date":"2016-06-02T18:34:38.898Z","type":"message"}
{"nick":"creationix","message":"I'm backporting luvit to js","date":"2016-06-02T18:34:46.097Z","type":"message"}
{"nick":"indutny","message":"creationix: nice!","date":"2016-06-02T18:34:52.577Z","type":"message"}
{"nick":"indutny","message":"creationix: this is exactly what I meant","date":"2016-06-02T18:35:04.306Z","type":"message"}
{"nick":"creationix","message":"luvit was initially a port of js to lua, bad parts and all","date":"2016-06-02T18:35:04.915Z","type":"message"}
{"nick":"creationix","message":"then I rewrote luvit to be super modular and used it in production for a year","date":"2016-06-02T18:35:24.207Z","type":"message"}
{"nick":"creationix","message":"now I want to come full circle","date":"2016-06-02T18:35:31.096Z","type":"message"}
{"nick":"creationix","message":"indutny, and in lit, when you publish an application like luvit or lit, it saves a snapshot of the dependencies as a git tree hash that's included in the signed tag","date":"2016-06-02T18:36:12.085Z","type":"message"}
{"nick":"creationix","message":"and building always uses that tree instead of dynamically resolving the dependencies","date":"2016-06-02T18:36:23.631Z","type":"message"}
{"nick":"indutny","message":"fun!","date":"2016-06-02T18:36:38.482Z","type":"message"}
{"nick":"creationix","message":"so you get automatic shrinkwrap for all published applications, but libraries themselves are always dynamic","date":"2016-06-02T18:36:40.246Z","type":"message"}
{"nick":"indutny","message":"though, there is a problem with outdated stuff","date":"2016-06-02T18:36:57.046Z","type":"message"}
{"nick":"indutny","message":"and security fixes","date":"2016-06-02T18:37:08.351Z","type":"message"}
{"nick":"creationix","message":"just publish a new version of the top-level application","date":"2016-06-02T18:37:17.135Z","type":"message"}
{"nick":"indutny","message":"but what if it is a dependency of dependency","date":"2016-06-02T18:37:26.781Z","type":"message"}
{"nick":"indutny","message":"aaaah","date":"2016-06-02T18:37:28.307Z","type":"message"}
{"nick":"indutny","message":"yeah, it is a shrinkwrap","date":"2016-06-02T18:37:32.109Z","type":"message"}
{"nick":"seishun","reason":"Disconnected by services","date":"2016-06-02T18:37:32.291Z","type":"quit"}
{"nick":"creationix","message":"deep dependencies are all re-resolved upon publish","date":"2016-06-02T18:37:32.516Z","type":"message"}
{"nick":"indutny","message":"got it","date":"2016-06-02T18:37:32.891Z","type":"message"}
{"nick":"seishun","date":"2016-06-02T18:37:38.561Z","type":"join"}
{"nick":"creationix","message":"I had to do this to get luvit onto homebrew since they require that builds have consistent hashes","date":"2016-06-02T18:37:57.815Z","type":"message"}
{"nick":"creationix","message":"and I didn't want to publish a binary, but rather build on demand","date":"2016-06-02T18:38:06.721Z","type":"message"}
{"nick":"creationix","message":"(they like building from source)","date":"2016-06-02T18:38:14.757Z","type":"message"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2016-06-02T18:41:03.968Z","type":"quit"}
{"nick":"creationix","message":"indutny the other fun part is the sync protocol is websocket and based on syncing sections of the merkle tree.  It's very fast and efficient and has perfect caching.  And can be used from a browser directly if you so desired and works over any network that allows https on port 443.","date":"2016-06-02T18:41:55.775Z","type":"message"}
{"nick":"indutny","message":"very lovely!","date":"2016-06-02T18:42:09.546Z","type":"message"}
{"nick":"creationix","message":"creating a caching proxy is dirt simple","date":"2016-06-02T18:42:16.541Z","type":"message"}
{"nick":"creationix","message":"if this ever became popular, travis could host their own proxy and be immune from me going down or packages being deleted","date":"2016-06-02T18:42:44.703Z","type":"message"}
{"nick":"creationix","message":"downside is I don't know how often a package is downloaded.  So marketing is tricky :P","date":"2016-06-02T18:43:23.822Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2016-06-02T18:47:29.253Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2016-06-02T18:47:30.295Z","type":"message"}
{"nick":"indutny","message":":)","date":"2016-06-02T18:47:30.939Z","type":"message"}
{"nick":"bradleymeck","date":"2016-06-02T18:57:45.864Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2016-06-02T18:58:08.417Z","type":"quit"}
{"nick":"Fishrock123","date":"2016-06-02T18:59:48.340Z","type":"join"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2016-06-02T19:00:27.802Z","type":"nick"}
{"nick":"Fishrock123","message":"creationix: I think the nucleus thing is a good idea, but we should probably aim for something that *could* be node compat rather than something new","date":"2016-06-02T19:04:53.663Z","type":"message"}
{"nick":"Fishrock123","message":"if it's something new it becomes... less useful","date":"2016-06-02T19:05:05.102Z","type":"message"}
{"nick":"Fishrock123","message":"imo","date":"2016-06-02T19:05:09.896Z","type":"message"}
{"nick":"creationix","message":"Fishrock123 of course a primary goal is to allow building a node replacement","date":"2016-06-02T19:05:22.269Z","type":"message"}
{"nick":"creationix","message":"but actually doing that is outside the scope","date":"2016-06-02T19:05:36.828Z","type":"message"}
{"nick":"creationix","message":"or in other words, this is aimed as being a possible replacement for node's core","date":"2016-06-02T19:06:00.965Z","type":"message"}
{"nick":"Fishrock123","message":"creationix: I think that is probably ok","date":"2016-06-02T19:06:05.761Z","type":"message"}
{"nick":"creationix","message":"a tight scope is essential to this ever getting done","date":"2016-06-02T19:06:20.313Z","type":"message"}
{"nick":"Fishrock123","message":"creationix: btw, I hadn't gotten back to the thread, but how to youa ccess c bindings from luvit?","date":"2016-06-02T19:06:44.716Z","type":"message"}
{"nick":"creationix","message":"it will clean up node internals if we ever get far enough to replace node's core","date":"2016-06-02T19:06:48.723Z","type":"message"}
{"nick":"Fishrock123","message":"for node it;s all though process.binding()","date":"2016-06-02T19:06:53.899Z","type":"message"}
{"nick":"creationix","message":"but it will also enable all kinds of other platforms to be build using the same primitives","date":"2016-06-02T19:07:09.013Z","type":"message"}
{"nick":"creationix","message":"in luvit, the core APIs are all exposed as modules","date":"2016-06-02T19:07:42.268Z","type":"message"}
{"nick":"creationix","message":"require('uv')...","date":"2016-06-02T19:07:46.060Z","type":"message"}
{"nick":"creationix","message":"require('openssl')...","date":"2016-06-02T19:07:50.176Z","type":"message"}
{"nick":"Fishrock123","message":"that only works if you expose _some_ module system though","date":"2016-06-02T19:08:00.866Z","type":"message"}
{"nick":"creationix","message":"well, luvit has built-in require","date":"2016-06-02T19:08:09.616Z","type":"message"}
{"nick":"creationix","message":"I mean lua","date":"2016-06-02T19:08:13.862Z","type":"message"}
{"nick":"creationix","message":"lua has require","date":"2016-06-02T19:08:16.893Z","type":"message"}
{"nick":"Fishrock123","message":"mmm","date":"2016-06-02T19:08:20.528Z","type":"message"}
{"nick":"creationix","message":"so I only have to put the C modules in the place that native require looks for them","date":"2016-06-02T19:08:27.122Z","type":"message"}
{"nick":"creationix","message":"and then luvit's require shadows the native (though falls back to it if a module can't be foind)","date":"2016-06-02T19:08:42.061Z","type":"message"}
{"nick":"Fishrock123","message":"I don't know if that would work in our case though","date":"2016-06-02T19:08:52.531Z","type":"message"}
{"nick":"Fishrock123","message":"even assuming es modules were added","date":"2016-06-02T19:08:58.928Z","type":"message"}
{"nick":"creationix","message":"right, JS doesn't have native `require`","date":"2016-06-02T19:09:03.857Z","type":"message"}
{"nick":"Fishrock123","message":"the semantics are very different","date":"2016-06-02T19:09:04.281Z","type":"message"}
{"nick":"creationix","message":"right, so we need some sort of global that gives access to the builtin C APIs","date":"2016-06-02T19:09:38.931Z","type":"message"}
{"nick":"Fishrock123","message":"I think we could get away with `process` and without module though","date":"2016-06-02T19:09:49.760Z","type":"message"}
{"nick":"Fishrock123","message":"I know that seems un ideal","date":"2016-06-02T19:10:06.297Z","type":"message"}
{"nick":"creationix","message":"we could expose a simple require that only loads builtins and then user-space requires would replace that (keeping the original in their closure)","date":"2016-06-02T19:10:06.677Z","type":"message"}
{"nick":"Fishrock123","message":"hmm seems like a good amount of new apis","date":"2016-06-02T19:11:00.721Z","type":"message"}
{"nick":"creationix","message":"or do like lua and expose an extensible require (which I'm moving towards in luvit instead of shadowing it)","date":"2016-06-02T19:11:33.468Z","type":"message"}
{"nick":"creationix","message":"or we could just put them on some global object","date":"2016-06-02T19:11:42.992Z","type":"message"}
{"nick":"creationix","message":"global.bindings","date":"2016-06-02T19:11:49.563Z","type":"message"}
{"nick":"creationix","message":"global.C","date":"2016-06-02T19:11:56.568Z","type":"message"}
{"nick":"Fishrock123","message":"creationix: prossibly yes","date":"2016-06-02T19:13:15.133Z","type":"message"}
{"nick":"Fishrock123","message":"creationix: I wonder if it wouldn't just be worthwhile to do it with the existing process and module out of ease though, less writing new things","date":"2016-06-02T19:13:43.867Z","type":"message"}
{"nick":"Fishrock123","message":"also, there isn't much sense in re-writing the wheel, why choose a new place to put say, process.version?","date":"2016-06-02T19:14:04.137Z","type":"message"}
{"nick":"creationix","message":"using the same name as node doesn't make anything easier.  Then I have to ensure 100% matching semantics","date":"2016-06-02T19:14:22.888Z","type":"message"}
{"nick":"creationix","message":"it's easier to do the minimal thing at a new namespace","date":"2016-06-02T19:14:31.722Z","type":"message"}
{"nick":"creationix","message":"we could have a single global.nucleus","date":"2016-06-02T19:15:16.952Z","type":"message"}
{"nick":"Fishrock123","message":"I'm not sure that would actually be difficult though, there's already tests, most of the semantics come from js, etc","date":"2016-06-02T19:15:35.524Z","type":"message"}
{"nick":"Fishrock123","message":"mmmm","date":"2016-06-02T19:15:56.818Z","type":"message"}
{"nick":"creationix","message":"I'm sure it would be difficult. Remember that before rewriting luvit 2.0 I first reimplemented all of node as-is in luvit 1.0","date":"2016-06-02T19:16:19.175Z","type":"message"}
{"nick":"Fishrock123","message":"I'll probably need to think a day or two about that, not sure replacing the lowest-level js parts is a good idea","date":"2016-06-02T19:16:27.878Z","type":"message"}
{"nick":"Fishrock123","message":"creationix: yeah but it's lua, isn't it?","date":"2016-06-02T19:16:40.639Z","type":"message"}
{"nick":"creationix","message":"it is, but people still expected identical semantics","date":"2016-06-02T19:16:50.270Z","type":"message"}
{"nick":"Fishrock123","message":"this is still js tho","date":"2016-06-02T19:16:56.466Z","type":"message"}
{"nick":"creationix","message":"imagine how much worse it will be when it is JS and existing code can be run on it","date":"2016-06-02T19:17:04.639Z","type":"message"}
{"nick":"Fishrock123","message":"it's actually the same if the libuv apis are exposed","date":"2016-06-02T19:17:09.865Z","type":"message"}
{"nick":"creationix","message":"exact semantics will be critical","date":"2016-06-02T19:17:10.577Z","type":"message"}
{"nick":"creationix","message":"I don't understand wher libuv APis fit in here.  Node doesn't expose it directly","date":"2016-06-02T19:17:51.218Z","type":"message"}
{"nick":"creationix","message":"there is no defined interface for libuv","date":"2016-06-02T19:17:57.708Z","type":"message"}
{"nick":"Fishrock123","message":"if the underlying libuv apis are the same, the rest of the semantics are pure js","date":"2016-06-02T19:18:20.870Z","type":"message"}
{"nick":"Fishrock123","message":"well","date":"2016-06-02T19:18:33.427Z","type":"message"}
{"nick":"Fishrock123","message":"for module anyways","date":"2016-06-02T19:18:36.365Z","type":"message"}
{"nick":"Fishrock123","message":"not quite for process","date":"2016-06-02T19:18:45.105Z","type":"message"}
{"nick":"creationix","message":"If you're talking about porting luvit to js, lua and js are different enough it's quite tricky","date":"2016-06-02T19:18:52.225Z","type":"message"}
{"nick":"Fishrock123","message":"no","date":"2016-06-02T19:18:56.095Z","type":"message"}
{"nick":"Fishrock123","message":"I'm just not conviced reinveting a new set of lowest-common-denominator js apis is a good idea","date":"2016-06-02T19:19:23.175Z","type":"message"}
{"nick":"Fishrock123","message":"ok well, if we have some base I will probably attempt that route if we don't agree to. Again, I'll need at least a day or two to think about it","date":"2016-06-02T19:19:39.714Z","type":"message"}
{"nick":"Fishrock123","message":"I don;t think fast, especially with a bit of a cold","date":"2016-06-02T19:19:50.926Z","type":"message"}
{"nick":"Fishrock123","message":"glad people are intrested tho","date":"2016-06-02T19:20:28.318Z","type":"message"}
{"nick":"Fishrock123","message":"I think these days it is safer to assume core is at least interested in just about any crazy idea short of what actually ships in a node binary","date":"2016-06-02T19:21:05.251Z","type":"message"}
{"nick":"creationix","message":"yep, node core is crazy mature by the force of all the users","date":"2016-06-02T19:22:43.299Z","type":"message"}
{"nick":"creationix","message":"s/mature/frozen/","date":"2016-06-02T19:22:53.042Z","type":"message"}
{"nick":"Fishrock123","message":"hmmmmmm I wonder","date":"2016-06-02T19:39:18.852Z","type":"message"}
{"nick":"Fishrock123","message":"*starts deleting core modules*","date":"2016-06-02T19:39:24.832Z","type":"message"}
{"nick":"BridgeAR","date":"2016-06-02T19:40:50.230Z","type":"join"}
{"nick":"mcollina","reason":"Remote host closed the connection","date":"2016-06-02T19:45:17.088Z","type":"quit"}
{"nick":"mcollina","date":"2016-06-02T19:49:38.380Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T19:55:32.006Z","type":"quit"}
{"nick":"sankha","date":"2016-06-02T19:58:32.613Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-02T19:58:41.635Z","type":"quit"}
{"nick":"SomeKittens","reason":"Quit: Connection closed for inactivity","date":"2016-06-02T20:04:17.021Z","type":"quit"}
{"nick":"Fishrock123","message":"creationix: what built in does luvit have for writing to stdio, if any?","date":"2016-06-02T20:14:50.724Z","type":"message"}
{"nick":"Fishrock123","message":"do you just call a libuv link?","date":"2016-06-02T20:15:02.692Z","type":"message"}
{"nick":"creationix","message":"uv_tty_t wrapped around (1)","date":"2016-06-02T20:15:34.501Z","type":"message"}
{"nick":"creationix","message":"lua has blocking print() which goes to stdout.  I replace it with one that goes through libuv (so I get pretty ansi color escapes on windows)","date":"2016-06-02T20:16:09.919Z","type":"message"}
{"nick":"Fishrock123","message":"creationix: how do you deal with object formatting?","date":"2016-06-02T20:16:48.426Z","type":"message"}
{"nick":"creationix","message":"what do you mean?","date":"2016-06-02T20:16:56.219Z","type":"message"}
{"nick":"Fishrock123","message":"or does it only work with strings?","date":"2016-06-02T20:17:02.804Z","type":"message"}
{"nick":"creationix","message":"oh, pretty printer?","date":"2016-06-02T20:17:10.825Z","type":"message"}
{"nick":"creationix","message":"I wrote one in the pretty-print module","date":"2016-06-02T20:17:15.669Z","type":"message"}
{"nick":"creationix","message":"it's not part of core","date":"2016-06-02T20:17:18.797Z","type":"message"}
{"nick":"creationix","message":"but the repl (also not part of core) depends on it","date":"2016-06-02T20:17:31.914Z","type":"message"}
{"nick":"Fishrock123","message":"creationix: for us, even process._rawDebug goes through util.format right now","date":"2016-06-02T20:17:41.601Z","type":"message"}
{"nick":"Fishrock123","message":"but","date":"2016-06-02T20:17:47.941Z","type":"message"}
{"nick":"Fishrock123","message":"it doesn't actually have to","date":"2016-06-02T20:17:52.143Z","type":"message"}
{"nick":"creationix","message":"well process won't be in core","date":"2016-06-02T20:17:53.566Z","type":"message"}
{"nick":"Fishrock123","message":"creationix: I highly doubt the ctc will ever be ok with that","date":"2016-06-02T20:18:26.475Z","type":"message"}
{"nick":"Fishrock123","message":"so I don;t think that is a great attitude to have towards it","date":"2016-06-02T20:18:39.966Z","type":"message"}
{"nick":"creationix","message":"perhaps I'm not being clear","date":"2016-06-02T20:18:47.699Z","type":"message"}
{"nick":"creationix","message":"that not be in core nucleus, it will of course be in the user-space node compat application","date":"2016-06-02T20:19:26.163Z","type":"message"}
{"nick":"creationix","message":"the basic goal of nucleus is to do the minimal work that node can be completely re-implemented in pure JS on top of it","date":"2016-06-02T20:20:11.330Z","type":"message"}
{"nick":"creationix","message":"nothing more, nothing less","date":"2016-06-02T20:20:15.064Z","type":"message"}
{"nick":"Fishrock123","message":"you can't reimplement node without something like process","date":"2016-06-02T20:20:34.224Z","type":"message"}
{"nick":"creationix","message":"the final product will have the same public APIs as now","date":"2016-06-02T20:20:36.182Z","type":"message"}
{"nick":"Fishrock123","message":"so uh","date":"2016-06-02T20:20:37.396Z","type":"message"}
{"nick":"creationix","message":"JS can add a process global","date":"2016-06-02T20:20:49.533Z","type":"message"}
{"nick":"Fishrock123","message":"i mena unless you shove bindings and print and idk somewhere else","date":"2016-06-02T20:20:54.592Z","type":"message"}
{"nick":"creationix","message":"just like is done in luvit","date":"2016-06-02T20:20:54.770Z","type":"message"}
{"nick":"Fishrock123","message":"which is pointless","date":"2016-06-02T20:21:05.835Z","type":"message"}
{"nick":"creationix","message":"process.bindings is not a public API, it doesn't have to stay","date":"2016-06-02T20:21:06.281Z","type":"message"}
{"nick":"Fishrock123","message":"there also is no reason to duplicate it elsewhere","date":"2016-06-02T20:21:22.799Z","type":"message"}
{"nick":"Fishrock123","message":"and it does actually have to stay","date":"2016-06-02T20:21:31.486Z","type":"message"}
{"nick":"creationix","message":"I don't think we're talking about the same thing","date":"2016-06-02T20:21:34.613Z","type":"message"}
{"nick":"Fishrock123","message":"because people us that shit lol","date":"2016-06-02T20:21:36.401Z","type":"message"}
{"nick":"Fishrock123","message":"use*","date":"2016-06-02T20:21:40.536Z","type":"message"}
{"nick":"Fishrock123","message":"technically yes","date":"2016-06-02T20:22:11.631Z","type":"message"}
{"nick":"creationix","message":"I have no intentions of matching non-public APIs.","date":"2016-06-02T20:22:13.311Z","type":"message"}
{"nick":"creationix","message":"it would be a new implementation that matches the public API","date":"2016-06-02T20:22:25.050Z","type":"message"}
{"nick":"Fishrock123","message":"the public api is what is exposed","date":"2016-06-02T20:22:39.673Z","type":"message"}
{"nick":"Fishrock123","message":"like it or not","date":"2016-06-02T20:22:41.734Z","type":"message"}
{"nick":"alrra","reason":"Quit: Connection closed for inactivity","date":"2016-06-02T20:22:43.035Z","type":"quit"}
{"nick":"creationix","message":"sure and semver means nothing because it's not technically enforced","date":"2016-06-02T20:23:02.019Z","type":"message"}
{"nick":"creationix","message":"but I don't care about supporting those kinds of use cases","date":"2016-06-02T20:23:09.328Z","type":"message"}
{"nick":"Fishrock123","message":"that doesn't mean the nucleus has to implement it","date":"2016-06-02T20:23:09.514Z","type":"message"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2016-06-02T20:23:17.208Z","type":"nick"}
{"nick":"Fishrock123","message":"creationix: we still semver lots of that because of the dependencies","date":"2016-06-02T20:23:28.877Z","type":"message"}
{"nick":"Fishrock123","message":"we have to care about it regardless","date":"2016-06-02T20:23:34.821Z","type":"message"}
{"nick":"Fishrock123","message":"I mean","date":"2016-06-02T20:23:38.516Z","type":"message"}
{"nick":"creationix","message":"that's not my point","date":"2016-06-02T20:23:41.435Z","type":"message"}
{"nick":"Fishrock123","message":"maybe you don;t ahve to","date":"2016-06-02T20:23:42.132Z","type":"message"}
{"nick":"Fishrock123","message":"that is fine","date":"2016-06-02T20:23:44.150Z","type":"message"}
{"nick":"creationix","message":"my point is people break rules all the time","date":"2016-06-02T20:23:53.043Z","type":"message"}
{"nick":"creationix","message":"I'm not worried about supporting them","date":"2016-06-02T20:23:58.773Z","type":"message"}
{"nick":"creationix","message":"if I reimplement node from the ground up and your app uses undocumented internal APIs, I won't support it","date":"2016-06-02T20:24:27.284Z","type":"message"}
{"nick":"Fishrock123","message":"my point is that we've locked ourselves into supporting the rules breaking in an end product","date":"2016-06-02T20:24:29.260Z","type":"message"}
{"nick":"creationix","message":"node has, I havn't","date":"2016-06-02T20:24:37.024Z","type":"message"}
{"nick":"creationix","message":"that's why we need a new implementation","date":"2016-06-02T20:24:42.077Z","type":"message"}
{"nick":"Fishrock123","message":"correct","date":"2016-06-02T20:24:42.513Z","type":"message"}
{"nick":"creationix","message":"most people follow the rules","date":"2016-06-02T20:24:45.021Z","type":"message"}
{"nick":"Fishrock123","message":"well","date":"2016-06-02T20:24:45.440Z","type":"message"}
{"nick":"Fishrock123","message":"correct for the first part","date":"2016-06-02T20:24:49.707Z","type":"message"}
{"nick":"Fishrock123","message":"incorrect for the second","date":"2016-06-02T20:24:53.423Z","type":"message"}
{"nick":"Fishrock123","message":"but that's ok","date":"2016-06-02T20:24:55.649Z","type":"message"}
{"nick":"Fishrock123","message":"again, most of that we don;t need to worry about","date":"2016-06-02T20:25:05.517Z","type":"message"}
{"nick":"creationix","message":"if you want to also implement all the undocumented parts in your shim, that's fine, nucleus will enable you","date":"2016-06-02T20:25:14.475Z","type":"message"}
{"nick":"creationix","message":"but I'm not going to go out of my way to enable someone to faithfully reproduce all of process.bindings that require custom C code, though even that has a place.  Nucleus does allow for C addons","date":"2016-06-02T20:26:13.457Z","type":"message"}
{"nick":"Fishrock123","message":"I'm not saying *you* have to","date":"2016-06-02T20:28:16.837Z","type":"message"}
{"nick":"creationix","message":"Also if my luvit experience tells anything, there won't be many people wanting to use undocumented parts of node and also wanting to use the new nucleus powered node.  With luvit some stayed on 1.0 so they wouldn't have to change anything.  Others upgraded and were willing to bring their code in-line with supported APIs","date":"2016-06-02T20:28:24.093Z","type":"message"}
{"nick":"Fishrock123","message":"I think your ecosystem may be too small","date":"2016-06-02T20:28:50.671Z","type":"message"}
{"nick":"Fishrock123","message":"there are too many modules that depend on these things","date":"2016-06-02T20:28:58.563Z","type":"message"}
{"nick":"creationix","message":"and most abandoned the node-style APIs in the \"luvit\" metapackage to use the new APIs enabled by the minimal core (the main reason to have a minimal core)","date":"2016-06-02T20:29:05.486Z","type":"message"}
{"nick":"creationix","message":"yes my ecosystem is tiny, which is why I said \"If my experience tells me anything\". It might not.","date":"2016-06-02T20:29:41.814Z","type":"message"}
{"nick":"Fishrock123","message":"ah","date":"2016-06-02T20:29:47.271Z","type":"message"}
{"nick":"creationix","message":"from what I can tell, everyone who wants a minimal core for node want it because they don't like some part of the core APIs and wish they could replace it","date":"2016-06-02T20:30:24.573Z","type":"message"}
{"nick":"creationix","message":"that audience won't mind losing support of unsupported APIs","date":"2016-06-02T20:30:41.901Z","type":"message"}
{"nick":"creationix","message":"I, for example, can't stand node streams or event emitters and wish I could access libuv directly without sugar","date":"2016-06-02T20:31:19.241Z","type":"message"}
{"nick":"Fishrock123","message":"I'm not sure we can guarentee those will be the end users of what those poeple make though","date":"2016-06-02T20:31:28.048Z","type":"message"}
{"nick":"creationix","message":"initially those will be the early adopters","date":"2016-06-02T20:31:45.006Z","type":"message"}
{"nick":"creationix","message":"as time goes on, we can polyfill in anything missing to make old code run","date":"2016-06-02T20:31:53.261Z","type":"message"}
{"nick":"creationix","message":"this may never replace node, it might just live beside it like how ruby and python have multiple implementations","date":"2016-06-02T20:32:38.644Z","type":"message"}
{"nick":"creationix","message":"but if it allows using 90% of what's in npm, that's good enough","date":"2016-06-02T20:32:52.261Z","type":"message"}
{"nick":"Fishrock123","message":"I doubt 90% of npm doesn't have sub dependancies that depend on these things (from past investigations similar to what we are currently talking about)","date":"2016-06-02T20:34:12.021Z","type":"message"}
{"nick":"Fishrock123","message":"e.g. removing years-old deprecated methods is still surprisingly rough","date":"2016-06-02T20:34:26.651Z","type":"message"}
{"nick":"creationix","message":"deprecated are harder than never-was-public","date":"2016-06-02T20:34:53.184Z","type":"message"}
{"nick":"creationix","message":"they used to be publiv","date":"2016-06-02T20:34:59.098Z","type":"message"}
{"nick":"creationix","message":"*public","date":"2016-06-02T20:35:00.977Z","type":"message"}
{"nick":"Fishrock123","message":"creationix: no","date":"2016-06-02T20:35:03.210Z","type":"message"}
{"nick":"Fishrock123","message":"not necessarily","date":"2016-06-02T20:35:05.922Z","type":"message"}
{"nick":"creationix","message":"anyway, I don't understand why this is a big deal.  My core isn't going to implement any of this so you don't have to convince me what will go in the shim that sits on top","date":"2016-06-02T20:35:49.829Z","type":"message"}
{"nick":"Fishrock123","message":"creationix: take for example, util._extend","date":"2016-06-02T20:35:51.907Z","type":"message"}
{"nick":"Fishrock123","message":"not at all public","date":"2016-06-02T20:36:07.441Z","type":"message"}
{"nick":"Fishrock123","message":"hugely used","date":"2016-06-02T20:36:09.868Z","type":"message"}
{"nick":"creationix","message":"util._extend can simply be included in the util module","date":"2016-06-02T20:36:12.295Z","type":"message"}
{"nick":"Fishrock123","message":"very difficult to deprecate","date":"2016-06-02T20:36:15.885Z","type":"message"}
{"nick":"Fishrock123","message":"yes","date":"2016-06-02T20:36:19.497Z","type":"message"}
{"nick":"Fishrock123","message":"but that wasn't what we were discussing either","date":"2016-06-02T20:36:30.374Z","type":"message"}
{"nick":"robbyoconnor","date":"2016-06-02T20:36:37.521Z","type":"join"}
{"nick":"creationix","message":"process.binding is special because it can't be implemented in pure JS","date":"2016-06-02T20:36:45.072Z","type":"message"}
{"nick":"creationix","message":"but even that can be implemented in a C addon to my core","date":"2016-06-02T20:36:58.277Z","type":"message"}
{"nick":"Fishrock123","message":"having a c addon for bindings seems pointless though","date":"2016-06-02T20:37:52.986Z","type":"message"}
{"nick":"Fishrock123","message":"what's the point if you can't import anythign at all?","date":"2016-06-02T20:38:05.941Z","type":"message"}
{"nick":"Fishrock123","message":"perfection?","date":"2016-06-02T20:38:10.730Z","type":"message"}
{"nick":"creationix","message":"what's the point of a linux kernel without userspace?","date":"2016-06-02T20:38:25.286Z","type":"message"}
{"nick":"creationix","message":"I'll have hooks for trivially including user-space code to add whatever API you want","date":"2016-06-02T20:38:46.882Z","type":"message"}
{"nick":"creationix","message":"yes, the core will be pointless on it's own.  Luvi (the core of luvit) by itself isn't very useful.  But add a zip file or a folder and you've got any application you can imagine including luvit itself","date":"2016-06-02T20:40:39.680Z","type":"message"}
{"nick":"creationix","message":"and that application doesn't require any C compiler to build, just luvi","date":"2016-06-02T20:40:59.760Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-06-02T20:41:12.915Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T20:41:13.092Z","type":"part"}
{"nick":"Fishrock123","message":"which comes back to my originally wondering of it being worthwhile to do the same things in a new way","date":"2016-06-02T20:41:39.726Z","type":"message"}
{"nick":"Fishrock123","message":"or rather","date":"2016-06-02T20:41:53.295Z","type":"message"}
{"nick":"creationix","message":"you're asking what is the value of a minimal core?","date":"2016-06-02T20:41:56.708Z","type":"message"}
{"nick":"Fishrock123","message":"the same lowest-common-denominator things","date":"2016-06-02T20:42:03.491Z","type":"message"}
{"nick":"Fishrock123","message":"no not really","date":"2016-06-02T20:42:08.991Z","type":"message"}
{"nick":"Lee1092","reason":"Quit: Connection closed for inactivity","date":"2016-06-02T20:43:06.789Z","type":"quit"}
{"nick":"creationix","message":"node isn't my only target","date":"2016-06-02T20:43:13.688Z","type":"message"}
{"nick":"mcollina","reason":"Read error: Connection reset by peer","date":"2016-06-02T20:43:25.196Z","type":"quit"}
{"nick":"creationix","message":"why have most things under nucleus but certain simple things that happen to exist in node go at the node locations?","date":"2016-06-02T20:43:39.821Z","type":"message"}
{"nick":"creationix","message":"that would be confusing","date":"2016-06-02T20:43:46.682Z","type":"message"}
{"nick":"Fishrock123","message":"creationix: do you replicate process.on('beforeExit') in luvit or a module?","date":"2016-06-02T20:43:57.167Z","type":"message"}
{"nick":"creationix","message":"that's userspace","date":"2016-06-02T20:44:11.522Z","type":"message"}
{"nick":"Fishrock123","message":"how","date":"2016-06-02T20:44:20.238Z","type":"message"}
{"nick":"creationix","message":"there is no process or event emitter in luvi","date":"2016-06-02T20:44:20.988Z","type":"message"}
{"nick":"Fishrock123","message":"uuuugh","date":"2016-06-02T20:44:26.885Z","type":"message"}
{"nick":"Fishrock123","message":"nevermind I will think about all of this myself","date":"2016-06-02T20:44:36.137Z","type":"message"}
{"nick":"creationix","message":"luvi doesn't have an implicit uv.run, therefore userspace controls the event loop","date":"2016-06-02T20:45:21.880Z","type":"message"}
{"nick":"creationix","message":"it knows when the loop exits and controls the process exit code","date":"2016-06-02T20:45:31.195Z","type":"message"}
{"nick":"creationix","message":"there is no reason to include that logic in C","date":"2016-06-02T20:45:45.529Z","type":"message"}
{"nick":"creationix","message":"the return value of the main function that luvi bootstraps is forwarded as the return value in main() in C","date":"2016-06-02T20:46:09.963Z","type":"message"}
{"nick":"mcollina_","date":"2016-06-02T20:46:45.433Z","type":"join"}
{"nick":"Fishrock123","message":"I fail to see how luvi is remotely useful","date":"2016-06-02T20:47:49.750Z","type":"message"}
{"nick":"Fishrock123","message":"it could just be a main function that forwards to another main at this point","date":"2016-06-02T20:48:02.700Z","type":"message"}
{"nick":"creationix","message":"no, it does a lot","date":"2016-06-02T20:48:09.704Z","type":"message"}
{"nick":"creationix","message":"it is a binary containing all C code pre-compiled","date":"2016-06-02T20:48:28.225Z","type":"message"}
{"nick":"Fishrock123","message":"define \"a lot\"","date":"2016-06-02T20:48:28.414Z","type":"message"}
{"nick":"creationix","message":"I don't have a compile step to work on core luvit modules","date":"2016-06-02T20:48:39.178Z","type":"message"}
{"nick":"Fishrock123","message":"is luvit \"userspace\"?","date":"2016-06-02T20:49:05.918Z","type":"message"}
{"nick":"creationix","message":"separating C from script is tremendously useful","date":"2016-06-02T20:49:08.474Z","type":"message"}
{"nick":"creationix","message":"yes, luvit is a package published to lit","date":"2016-06-02T20:49:15.202Z","type":"message"}
{"nick":"creationix","message":"it's pure lua","date":"2016-06-02T20:49:17.024Z","type":"message"}
{"nick":"creationix","message":"it's a collection of userspace modules","date":"2016-06-02T20:49:26.753Z","type":"message"}
{"nick":"creationix","message":"and an init module that ties them all together and implements the CLI interface","date":"2016-06-02T20:49:39.012Z","type":"message"}
{"nick":"creationix","message":"I can go to a new windows box, download luvit.exe and clone luvit and start hacking on core","date":"2016-06-02T20:50:04.410Z","type":"message"}
{"nick":"creationix","message":"I don't need to install python, visual studio, anything","date":"2016-06-02T20:50:14.493Z","type":"message"}
{"nick":"Fishrock123","message":"ok actually I'm pretty sure that a core that can't be used at all without only touching binding is.. not very useful lol","date":"2016-06-02T20:50:15.278Z","type":"message"}
{"nick":"creationix","message":"I don't even need git, I can just download the luvit zip from lit.luvit.io","date":"2016-06-02T20:50:33.212Z","type":"message"}
{"nick":"creationix","message":"and unzip it using windows","date":"2016-06-02T20:50:38.241Z","type":"message"}
{"nick":"creationix","message":"define \"useful\"?","date":"2016-06-02T20:50:55.336Z","type":"message"}
{"nick":"creationix","message":"I and the other luvit maintainers find it tremendously useful","date":"2016-06-02T20:51:06.380Z","type":"message"}
{"nick":"creationix","message":"and the community is starting to love it too","date":"2016-06-02T20:51:13.214Z","type":"message"}
{"nick":"mcollina_","reason":"Ping timeout: 252 seconds","date":"2016-06-02T20:51:13.443Z","type":"quit"}
{"nick":"Fishrock123","message":"who uses it besides luvit maintainers","date":"2016-06-02T20:51:19.770Z","type":"message"}
{"nick":"creationix","message":"lit","date":"2016-06-02T20:51:30.796Z","type":"message"}
{"nick":"BridgeAR","reason":"Ping timeout: 258 seconds","date":"2016-06-02T20:51:36.165Z","type":"quit"}
{"nick":"Fishrock123","message":"the package manager?","date":"2016-06-02T20:51:41.017Z","type":"message"}
{"nick":"creationix","message":"roughly","date":"2016-06-02T20:51:46.142Z","type":"message"}
{"nick":"creationix","message":"lit is a luvi app with it's own dependencies, it does not use luvit","date":"2016-06-02T20:51:58.175Z","type":"message"}
{"nick":"creationix","message":"in fact it's all coroutine based APIs while luvit is node style streams and emitters","date":"2016-06-02T20:52:09.637Z","type":"message"}
{"nick":"creationix","message":"it uses a couple luvit modules like the pretty-printer","date":"2016-06-02T20:52:20.463Z","type":"message"}
{"nick":"creationix","message":"the rackspace monitoring agent deployed to a lot of servers (I can't say how many because of rules) is a luvi app","date":"2016-06-02T20:53:02.275Z","type":"message"}
{"nick":"creationix","message":"my tiny wscat command-line app is a luvi app","date":"2016-06-02T20:53:15.140Z","type":"message"}
{"nick":"creationix","message":"basically at this point luvit is only for legacy users who want node in lua.  That's a pretty small group","date":"2016-06-02T20:53:38.666Z","type":"message"}
{"nick":"creationix","message":"though the rackspace agent uses luvit as a dependency to pull in all it's standard library","date":"2016-06-02T20:53:52.433Z","type":"message"}
{"nick":"creationix","message":"but it has it's own CLI interface.  We deploy a single binary to the vm and it runs","date":"2016-06-02T20:54:25.481Z","type":"message"}
{"nick":"creationix","message":"The lua community at large is starting to use luv without luvi or luvit at all","date":"2016-06-02T20:54:57.184Z","type":"message"}
{"nick":"creationix","message":"I made the module compatible and wrote a shim that adds node/luvit style require to lua's native require","date":"2016-06-02T20:55:12.784Z","type":"message"}
{"nick":"creationix","message":"https://luvit.io/blog/pure-luv.html","date":"2016-06-02T20:55:36.946Z","type":"message"}
{"nick":"Fishrock123","message":"well, tbh my statement is probably incorrect","date":"2016-06-02T20:57:24.771Z","type":"message"}
{"nick":"robbyoconnor","reason":"Max SendQ exceeded","date":"2016-06-02T20:57:36.107Z","type":"quit"}
{"nick":"creationix","message":"I still don't think we're on the same page.  I do want to help you understand what I'm proposing","date":"2016-06-02T20:57:57.952Z","type":"message"}
{"nick":"robbyoconnor","date":"2016-06-02T20:58:05.204Z","type":"join"}
{"nick":"Fishrock123","message":"most of the... fundamental? parts of process boilds down to bindings of sorts","date":"2016-06-02T20:58:07.162Z","type":"message"}
{"nick":"Fishrock123","message":"You are proposing only exposing bindings","date":"2016-06-02T20:58:25.919Z","type":"message"}
{"nick":"Fishrock123","message":"I think I get that","date":"2016-06-02T20:58:31.205Z","type":"message"}
{"nick":"robbyoconnor","reason":"Client Quit","date":"2016-06-02T20:58:39.455Z","type":"quit"}
{"nick":"creationix","message":"well bindings and glue functions and hooks","date":"2016-06-02T20:58:42.555Z","type":"message"}
{"nick":"Fishrock123","message":"I'm just wondering why we'd reinvent an api that already exists","date":"2016-06-02T20:59:02.276Z","type":"message"}
{"nick":"creationix","message":"does it?","date":"2016-06-02T20:59:10.389Z","type":"message"}
{"nick":"Fishrock123","message":"that does the bulk of a bunch of that glue","date":"2016-06-02T20:59:11.246Z","type":"message"}
{"nick":"creationix","message":"I don't think it's that similar","date":"2016-06-02T20:59:18.988Z","type":"message"}
{"nick":"creationix","message":"node has no concept of VFS where core libraries can come from either a zip file or a folder on disk","date":"2016-06-02T20:59:39.709Z","type":"message"}
{"nick":"Fishrock123","message":"oh","date":"2016-06-02T20:59:48.376Z","type":"message"}
{"nick":"Fishrock123","message":"no it doesn;t","date":"2016-06-02T20:59:51.267Z","type":"message"}
{"nick":"Fishrock123","message":"funny enough","date":"2016-06-02T20:59:53.681Z","type":"message"}
{"nick":"Fishrock123","message":"that was shelved to userland","date":"2016-06-02T20:59:58.889Z","type":"message"}
{"nick":"creationix","message":"that's key to being able to make standalone binaries without needing a compiler","date":"2016-06-02T21:00:11.236Z","type":"message"}
{"nick":"Fishrock123","message":"Iirc bradley meck has an impl of it still","date":"2016-06-02T21:00:20.082Z","type":"message"}
{"nick":"creationix","message":"zips can be concatenated to exes and they play nice","date":"2016-06-02T21:00:22.871Z","type":"message"}
{"nick":"creationix","message":"yep, we've talked a bit","date":"2016-06-02T21:00:26.739Z","type":"message"}
{"nick":"Fishrock123","message":"that is out of scope actually","date":"2016-06-02T21:00:28.737Z","type":"message"}
{"nick":"Fishrock123","message":"in terms of node's view","date":"2016-06-02T21:00:32.869Z","type":"message"}
{"nick":"Fishrock123","message":"well, I guess minus the \"without a compiler\" part","date":"2016-06-02T21:00:56.567Z","type":"message"}
{"nick":"creationix","message":"developing core modules in node is a pain","date":"2016-06-02T21:01:08.759Z","type":"message"}
{"nick":"Fishrock123","message":"?","date":"2016-06-02T21:01:19.101Z","type":"message"}
{"nick":"creationix","message":"also the API is forced.  If you change a core API, you change it for everyone","date":"2016-06-02T21:01:30.315Z","type":"message"}
{"nick":"Fishrock123","message":"yes","date":"2016-06-02T21:01:35.120Z","type":"message"}
{"nick":"creationix","message":"so it's hard to change anything","date":"2016-06-02T21:01:36.329Z","type":"message"}
{"nick":"Fishrock123","message":"but that does not impact the development much these days","date":"2016-06-02T21:01:44.011Z","type":"message"}
{"nick":"creationix","message":"with modular core, you pick and choose what you app needs, it's all equal","date":"2016-06-02T21:01:50.052Z","type":"message"}
{"nick":"Fishrock123","message":"(to a certain,  api is not totally different extent)","date":"2016-06-02T21:02:10.425Z","type":"message"}
{"nick":"Fishrock123","message":"ofc it;d be nice to have versioned core streams","date":"2016-06-02T21:02:19.492Z","type":"message"}
{"nick":"creationix","message":"yep, also when all modules are equal, they are all versioned the same","date":"2016-06-02T21:02:35.579Z","type":"message"}
{"nick":"Fishrock123","message":"creationix: why expose any glue at all then?","date":"2016-06-02T21:03:04.924Z","type":"message"}
{"nick":"creationix","message":"bootstrapping","date":"2016-06-02T21:03:14.865Z","type":"message"}
{"nick":"Fishrock123","message":"people can make  any modules thing and eval pretty fine with process.binding","date":"2016-06-02T21:03:18.565Z","type":"message"}
{"nick":"Fishrock123","message":"or","date":"2016-06-02T21:03:19.973Z","type":"message"}
{"nick":"Fishrock123","message":"just bindings","date":"2016-06-02T21:03:22.605Z","type":"message"}
{"nick":"Fishrock123","message":"at all","date":"2016-06-02T21:03:23.705Z","type":"message"}
{"nick":"creationix","message":"process.binding is not designed for that kind of use","date":"2016-06-02T21:03:39.894Z","type":"message"}
{"nick":"Fishrock123","message":"you don't even need the glue for bootstrapping","date":"2016-06-02T21:03:44.155Z","type":"message"}
{"nick":"creationix","message":"it's ugly and confusing","date":"2016-06-02T21:03:44.549Z","type":"message"}
{"nick":"Fishrock123","message":"errr","date":"2016-06-02T21:03:45.871Z","type":"message"}
{"nick":"Fishrock123","message":"we use it for that","date":"2016-06-02T21:03:49.257Z","type":"message"}
{"nick":"Fishrock123","message":"it's THE way to connect to native source","date":"2016-06-02T21:04:10.087Z","type":"message"}
{"nick":"Fishrock123","message":"technically it also have the precompiled js source \"in it\" but that is... a different topic","date":"2016-06-02T21:04:27.794Z","type":"message"}
{"nick":"creationix","message":"a public interface that is documented and supported is not what process.bindings is","date":"2016-06-02T21:04:58.182Z","type":"message"}
{"nick":"Fishrock123","message":"what is the difference","date":"2016-06-02T21:05:11.129Z","type":"message"}
{"nick":"Fishrock123","message":"we could add docs for it","date":"2016-06-02T21:05:18.785Z","type":"message"}
{"nick":"creationix","message":"you could just make it public and document it and promise to never change it","date":"2016-06-02T21:05:23.786Z","type":"message"}
{"nick":"creationix","message":"but it would be better to actually design something for this purpose","date":"2016-06-02T21:05:41.204Z","type":"message"}
{"nick":"creationix","message":"the libuv design is a lot nicer than process.bindings IMO","date":"2016-06-02T21:05:49.969Z","type":"message"}
{"nick":"Fishrock123","message":"the boil down to the same thing though","date":"2016-06-02T21:06:29.819Z","type":"message"}
{"nick":"Fishrock123","message":"why even bother with glue ontop of that?","date":"2016-06-02T21:06:37.248Z","type":"message"}
{"nick":"creationix","message":"?","date":"2016-06-02T21:07:06.304Z","type":"message"}
{"nick":"Fishrock123","message":"why have any glue ontop of your C bindings?","date":"2016-06-02T21:07:23.362Z","type":"message"}
{"nick":"Fishrock123","message":"or not ontop","date":"2016-06-02T21:07:30.590Z","type":"message"}
{"nick":"Fishrock123","message":"but also shipped with the \"core\"","date":"2016-06-02T21:07:37.106Z","type":"message"}
{"nick":"creationix","message":"I wonder what you're thinking this \"glue\" is exactly","date":"2016-06-02T21:08:08.183Z","type":"message"}
{"nick":"Fishrock123","message":"I don't know, you implied it was separate from the bindings","date":"2016-06-02T21:08:46.669Z","type":"message"}
{"nick":"creationix","message":"right, so there is nucleus.uv that will mirror uv_* in libuv","date":"2016-06-02T21:09:14.680Z","type":"message"}
{"nick":"Fishrock123","message":"isn't that just uv bindings?","date":"2016-06-02T21:09:35.930Z","type":"message"}
{"nick":"creationix","message":"right","date":"2016-06-02T21:09:41.963Z","type":"message"}
{"nick":"creationix","message":"there will be something like nucleus.readfile, nucleus.scandir, nucleus.pathjoin","date":"2016-06-02T21:10:04.217Z","type":"message"}
{"nick":"creationix","message":"(though not sure pathjoin belongs here, it can be done in userspace, but is required to bootstrap a require system)","date":"2016-06-02T21:10:24.209Z","type":"message"}
{"nick":"creationix","message":"and readfile and scandir will work with the vfs","date":"2016-06-02T21:10:37.272Z","type":"message"}
{"nick":"creationix","message":"so you can read bundled files","date":"2016-06-02T21:10:45.415Z","type":"message"}
{"nick":"Fishrock123","message":"how do you actually bundle them?","date":"2016-06-02T21:11:10.864Z","type":"message"}
{"nick":"Fishrock123","message":"or rather","date":"2016-06-02T21:11:19.727Z","type":"message"}
{"nick":"Fishrock123","message":"how to you make the zip and the program the same file","date":"2016-06-02T21:11:29.475Z","type":"message"}
{"nick":"Fishrock123","message":"doesn;t that still require compilation?","date":"2016-06-02T21:11:37.803Z","type":"message"}
{"nick":"creationix","message":"cat luvi luvit.zip > luvit","date":"2016-06-02T21:11:39.424Z","type":"message"}
{"nick":"creationix","message":"chmod +x luvit && ./luvit","date":"2016-06-02T21:11:54.902Z","type":"message"}
{"nick":"Fishrock123","message":"lol","date":"2016-06-02T21:11:55.346Z","type":"message"}
{"nick":"Fishrock123","message":"so luvi just looks for the data directly appended to it?","date":"2016-06-02T21:12:16.984Z","type":"message"}
{"nick":"creationix","message":"or for development, run directly out of the zip with: luvi luvit.zip -- args","date":"2016-06-02T21:12:18.482Z","type":"message"}
{"nick":"creationix","message":"yep, that's one of the hooks","date":"2016-06-02T21:12:26.112Z","type":"message"}
{"nick":"creationix","message":"appending exes to zips works really well on all platforms I've ever run across","date":"2016-06-02T21:12:41.832Z","type":"message"}
{"nick":"creationix","message":"exes allow garbage on the end and zips allow garbage on the front (they read from the back)","date":"2016-06-02T21:13:03.476Z","type":"message"}
{"nick":"Fishrock123","message":"that does make (some of) the case for default zip reading","date":"2016-06-02T21:13:16.405Z","type":"message"}
{"nick":"creationix","message":"you can even run directly out of a folder with: luvi luvit-src -- args...","date":"2016-06-02T21:13:34.933Z","type":"message"}
{"nick":"creationix","message":"or make thin apps where you include a shebang like  `#!/usr/local/bin/luvi --` that gets concatenated with the zip","date":"2016-06-02T21:14:39.820Z","type":"message"}
{"nick":"creationix","message":"lit is 225k in a single file with a shebang pointing to 3.4Mb luvi.  Compare to npm which is 48MB of files in the global node_modules tree","date":"2016-06-02T21:16:34.929Z","type":"message"}
{"nick":"creationix","message":"not to mention that npm requires it's run by the 26Mb node binary on top of that","date":"2016-06-02T21:17:05.895Z","type":"message"}
{"nick":"Fishrock123","message":"The latter is... probably not going to change lol","date":"2016-06-02T21:17:46.350Z","type":"message"}
{"nick":"creationix","message":"part of that difference is V8 vs Luajit, but having lit be a single self-contained binary is super nice","date":"2016-06-02T21:17:48.397Z","type":"message"}
{"nick":"Fishrock123","message":"and also doesn't matter very much imo","date":"2016-06-02T21:17:54.028Z","type":"message"}
{"nick":"creationix","message":"it matters when you're deploying services to various servers.  Single-file deploys are always simpler","date":"2016-06-02T21:18:22.493Z","type":"message"}
{"nick":"creationix","message":"this won't be the core for just the node compat program","date":"2016-06-02T21:18:34.817Z","type":"message"}
{"nick":"Fishrock123","message":"if you are running on extreme low memory contraints, likely is that you will make a zip ball of your deps and move them over that way","date":"2016-06-02T21:18:38.348Z","type":"message"}
{"nick":"Fishrock123","message":"rather than bothering with npm","date":"2016-06-02T21:18:50.674Z","type":"message"}
{"nick":"creationix","message":"it will also be for custom programs that include parts of the node standard library and other code as well","date":"2016-06-02T21:18:51.076Z","type":"message"}
{"nick":"Fishrock123","message":"I may be wrong","date":"2016-06-02T21:18:54.633Z","type":"message"}
{"nick":"creationix","message":"Fishrock123 of course, but you still need to put node somewhere and unzip your project somewhere and link the two","date":"2016-06-02T21:19:28.738Z","type":"message"}
{"nick":"creationix","message":"it's not terrible.  Node's local dependency design helps a lot","date":"2016-06-02T21:19:49.992Z","type":"message"}
{"nick":"creationix","message":"but a single file deploy helps even more","date":"2016-06-02T21:19:57.230Z","type":"message"}
{"nick":"creationix","message":"especially if building said single-file is trivially easy","date":"2016-06-02T21:20:06.498Z","type":"message"}
{"nick":"creationix","message":"This philosophy of only pulling in what you need is part of the reason lit is 200k and npm is almost 50mb.  I've been on production teams where `npm install` was causing real performance issues (time and space) on production, CI, and local development for non-trivial projects.","date":"2016-06-02T21:22:48.733Z","type":"message"}
{"nick":"Fishrock123","message":"yep","date":"2016-06-02T21:23:33.698Z","type":"message"}
{"nick":"Fishrock123","message":"I know about those pains","date":"2016-06-02T21:23:40.905Z","type":"message"}
{"nick":"creationix","message":"comparing lua to js isn't fair.  Lua is lighter weight","date":"2016-06-02T21:24:02.588Z","type":"message"}
{"nick":"creationix","message":"the languages themselves are about equally verbose though","date":"2016-06-02T21:24:19.709Z","type":"message"}
{"nick":"creationix","message":"(unlike comparing Java with JS for example)","date":"2016-06-02T21:24:38.783Z","type":"message"}
{"nick":"bradleymeck","message":"rvagg: trevnorris: can we land a fix to EP, correcting the value that ECMA262 declares for `this` in modules https://github.com/nodejs/node-eps/pull/29","date":"2016-06-02T21:25:04.528Z","type":"message"}
{"nick":"bradleymeck","message":"creationix: you can do self extracting EXE with noda right now, but the bloat is terrible","date":"2016-06-02T21:25:32.917Z","type":"message"}
{"nick":"bradleymeck","message":"have babel? +180MB","date":"2016-06-02T21:25:41.372Z","type":"message"}
{"nick":"creationix","message":"yikes","date":"2016-06-02T21:25:47.046Z","type":"message"}
{"nick":"bradleymeck","message":"that said zips ironically can do deduping","date":"2016-06-02T21:26:06.590Z","type":"message"}
{"nick":"creationix","message":"having a community culture of only including what you need and nothing more makes a difference","date":"2016-06-02T21:26:11.294Z","type":"message"}
{"nick":"bradleymeck","message":"which can have major savings","date":"2016-06-02T21:26:14.775Z","type":"message"}
{"nick":"creationix","message":"lit's network sync also dedupes since it's based in merlke trees","date":"2016-06-02T21:26:29.997Z","type":"message"}
{"nick":"Fishrock123","message":"that.. would be nice.","date":"2016-06-02T21:26:53.110Z","type":"message"}
{"nick":"bradleymeck","message":"but zips also need a resource API which node does not have","date":"2016-06-02T21:27:09.794Z","type":"message"}
{"nick":"bradleymeck","message":"you DO NOT want to put a virtual fs on your exe","date":"2016-06-02T21:27:24.469Z","type":"message"}
{"nick":"creationix","message":"@Fishrock123 https://github.com/creationix/nit","date":"2016-06-02T21:27:51.745Z","type":"message"}
{"nick":"bradleymeck","message":"anywho https://github.com/bmeck/noda-loader/tree/master/tests should be the basic test cases if you pursue that, or feel free to steal the code","date":"2016-06-02T21:27:54.924Z","type":"message"}
{"nick":"creationix","message":"bradleymeck the vfs is only for reading files out of the zip or folder in a uniform way","date":"2016-06-02T21:28:19.005Z","type":"message"}
{"nick":"bradleymeck","message":"loader still functions but I have to kick it a little","date":"2016-06-02T21:28:26.547Z","type":"message"}
{"nick":"creationix","message":"it doesn't touch or integrate with the generic fs module","date":"2016-06-02T21:28:27.990Z","type":"message"}
{"nick":"bradleymeck","message":"creationix: I investigated vfs but too many people do stat and things, went with a resource API so I wasn't making abstraction leaks","date":"2016-06-02T21:28:54.231Z","type":"message"}
{"nick":"creationix","message":"or rather uv.fs_* functions (there is no fs module in luvi)","date":"2016-06-02T21:28:55.964Z","type":"message"}
{"nick":"creationix","message":"bradleymeck I think we did the same thing.  Like I said, this is a new API apart from existing fs functions","date":"2016-06-02T21:29:34.446Z","type":"message"}
{"nick":"bradleymeck","message":"also fs.writeFile == sadness in vfs","date":"2016-06-02T21:29:36.421Z","type":"message"}
{"nick":"creationix","message":"in luvi it's called the bundle api","date":"2016-06-02T21:30:06.546Z","type":"message"}
{"nick":"bradleymeck","message":"https://github.com/bmeck/resource-shim i just called it \"resource\"","date":"2016-06-02T21:30:39.830Z","type":"message"}
{"nick":"bradleymeck","message":"I was gonna try to get noda style archives into node core, but that was a few years ago and its a big change","date":"2016-06-02T21:31:03.407Z","type":"message"}
{"nick":"creationix","message":"heh, I have a userspace \"resource\" module in luvit that does things like loading binary data using sync I/O with relative path resolution","date":"2016-06-02T21:31:21.316Z","type":"message"}
{"nick":"bradleymeck","message":"https://www.youtube.com/watch?v=k5r0kQlsDgU whew, that was a bit ago","date":"2016-06-02T21:31:28.526Z","type":"message"}
{"nick":"creationix","message":"so you can put a data file with your code and load it from your code during startup","date":"2016-06-02T21:31:45.121Z","type":"message"}
{"nick":"bradleymeck","action":"nods","date":"2016-06-02T21:32:06.000Z","type":"action"}
{"nick":"netweb","reason":"Ping timeout: 240 seconds","date":"2016-06-02T21:32:21.170Z","type":"quit"}
{"nick":"bradleymeck","message":"same idea, just removes problem of abstraction not being 1-1 with files by reducing what you can do","date":"2016-06-02T21:32:28.330Z","type":"message"}
{"nick":"creationix","message":"it works with both bundles and normal fs so you don't have to care how the module was loaded","date":"2016-06-02T21:32:33.720Z","type":"message"}
{"nick":"bradleymeck","message":"yessss. exactly the same","date":"2016-06-02T21:32:45.672Z","type":"message"}
{"nick":"netweb","date":"2016-06-02T21:32:52.124Z","type":"join"}
{"nick":"bradleymeck","message":"for some measure of \"exactly\"","date":"2016-06-02T21:32:53.910Z","type":"message"}
{"nick":"creationix","message":"btw, has there been much interest in noda?  My nucleus project will have some overlapping target audience I think","date":"2016-06-02T21:33:43.355Z","type":"message"}
{"nick":"bradleymeck","message":"there is whenever I show it, but the bloaty file size is a major turnoff","date":"2016-06-02T21:34:05.406Z","type":"message"}
{"nick":"trevnorris","message":"bradleymeck: done","date":"2016-06-02T21:34:56.519Z","type":"message"}
{"nick":"bradleymeck","message":"if better tooling for auto deduping of files and npmignore / pkg.json#files existed it would help a bit","date":"2016-06-02T21:35:12.741Z","type":"message"}
{"nick":"bradleymeck","message":"you can do some major deduping if I had a couple months to devote to it, but I don't :-/","date":"2016-06-02T21:35:37.722Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2016-06-02T21:36:45.228Z","type":"quit"}
{"nick":"creationix","message":"I'm considering a merkle-tree based storage for deps that would auto-dedupe everything","date":"2016-06-02T21:37:32.899Z","type":"message"}
{"nick":"creationix","message":"but first need a way to modify the require system in userspace","date":"2016-06-02T21:37:41.741Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-06-02T21:37:49.013Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T21:37:49.190Z","type":"part"}
{"nick":"bradleymeck","message":"https://www.npmjs.com/package/module-system","date":"2016-06-02T21:37:59.787Z","type":"message"}
{"nick":"creationix","message":"it's tricky to do that with full compat with existing require semantics","date":"2016-06-02T21:38:01.269Z","type":"message"}
{"nick":"bradleymeck","message":"you don't want to mod the real one, replace it with the modified one and proxy out","date":"2016-06-02T21:38:26.763Z","type":"message"}
{"nick":"creationix","message":"true, that's what I did with lua (it came with it's own require) though eventually I just used it's official extension points instead of replacing","date":"2016-06-02T21:38:59.730Z","type":"message"}
{"nick":"bradleymeck","message":"the virtual file paths are problematic for replacing using the existing module.js code","date":"2016-06-02T21:39:27.037Z","type":"message"}
{"nick":"bradleymeck","message":"whenever ES modules settles noda is back on my plate","date":"2016-06-02T21:40:24.784Z","type":"message"}
{"nick":"bradleymeck","message":"creationix: keep me informed / let me know if you need anything related to modules, I have lots of stuff lying around","date":"2016-06-02T21:41:24.995Z","type":"message"}
{"nick":"creationix","message":"well, I'm trying to explicitly push all that out of scope","date":"2016-06-02T21:41:49.531Z","type":"message"}
{"nick":"bradleymeck","message":"I would highly suggest using .zip just because it is universal / people can easily right click a dir and make one","date":"2016-06-02T21:41:49.709Z","type":"message"}
{"nick":"creationix","message":"just will be providing the bare resource API to others can implement it","date":"2016-06-02T21:41:59.403Z","type":"message"}
{"nick":"creationix","message":"yeah, will be using zip","date":"2016-06-02T21:42:06.064Z","type":"message"}
{"nick":"bradleymeck","message":"creationix: then, when it comes time, I'll make you your impl of the loader","date":"2016-06-02T21:42:14.209Z","type":"message"}
{"nick":"creationix","message":"cool","date":"2016-06-02T21:42:18.961Z","type":"message"}
{"nick":"bradleymeck","message":"gtg, gl!","date":"2016-06-02T21:43:03.925Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-06-02T21:44:41.374Z","type":"quit"}
{"nick":"mcollina","date":"2016-06-02T21:47:46.190Z","type":"join"}
{"nick":"italoacasas","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-06-02T21:50:58.474Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T21:52:16.690Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T21:52:16.876Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T21:52:43.410Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T21:52:43.587Z","type":"part"}
{"nick":"addaleax","date":"2016-06-02T21:56:22.538Z","type":"join"}
{"nick":"bradleymeck","date":"2016-06-02T21:59:47.175Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2016-06-02T21:59:47.366Z","type":"quit"}
{"nick":"Fishrock123","date":"2016-06-02T22:05:27.114Z","type":"join"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2016-06-02T22:24:25.119Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T22:36:32.483Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T22:36:32.660Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T22:37:10.162Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T22:37:10.339Z","type":"part"}
{"nick":"yoshokatana","date":"2016-06-02T22:41:16.900Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-06-02T22:44:30.024Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 272 seconds","date":"2016-06-02T22:45:30.103Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T22:47:00.917Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T22:47:01.095Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T22:50:20.375Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T22:50:20.552Z","type":"part"}
{"nick":"mscdex","reason":"Ping timeout: 272 seconds","date":"2016-06-02T22:55:00.105Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-02T22:58:46.660Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T22:58:46.838Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T22:59:04.526Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T22:59:04.703Z","type":"part"}
{"nick":"5EXAAR6LM","date":"2016-06-02T22:59:44.843Z","type":"join"}
{"nick":"mscdex","date":"2016-06-02T23:07:57.531Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:14:30.649Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:14:30.866Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T23:14:45.646Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:14:45.823Z","type":"part"}
{"nick":"saghul","message":"rvagg: LGTM","date":"2016-06-02T23:16:45.287Z","type":"message"}
{"nick":"saghul","message":"sorry for the delay, btw","date":"2016-06-02T23:16:52.083Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-06-02T23:19:06.157Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:19:06.335Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T23:20:52.140Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:20:52.318Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T23:25:14.346Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:25:14.523Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T23:25:49.479Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:25:49.657Z","type":"part"}
{"nick":"italoacasas","date":"2016-06-02T23:27:30.855Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:30:31.102Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:30:31.279Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T23:36:33.395Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:36:33.609Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T23:37:08.482Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:37:08.659Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T23:40:30.113Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:40:30.126Z","type":"part"}
{"nick":"r04r","new_nick":"zz_r04r","date":"2016-06-02T23:43:14.509Z","type":"nick"}
{"nick":"nodejs-gh","date":"2016-06-02T23:45:15.076Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:45:15.254Z","type":"part"}
{"nick":"qard","reason":"Quit: (╯°□°）╯︵ pɹɐb","date":"2016-06-02T23:48:20.598Z","type":"quit"}
{"nick":"qard","date":"2016-06-02T23:53:13.543Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:54:03.456Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:54:03.669Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T23:57:58.386Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:57:58.563Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-02T23:59:37.357Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-02T23:59:37.534Z","type":"part"}
