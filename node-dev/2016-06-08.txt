{"nick":"d10n-work","reason":"Quit: Connection closed for inactivity","date":"2016-06-08T00:01:21.192Z","type":"quit"}
{"nick":"jasnell","date":"2016-06-08T00:01:58.020Z","type":"join"}
{"nick":"m_gol","date":"2016-06-08T00:03:49.964Z","type":"join"}
{"nick":"bengo","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-06-08T00:14:05.993Z","type":"quit"}
{"nick":"bengo","date":"2016-06-08T00:25:58.302Z","type":"join"}
{"nick":"nuizzy","reason":"Quit: nuizzy","date":"2016-06-08T00:31:09.502Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-08T00:37:06.179Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T00:37:06.363Z","type":"part"}
{"nick":"bengo","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-06-08T00:51:10.829Z","type":"quit"}
{"nick":"BombStrike","reason":"Ping timeout: 240 seconds","date":"2016-06-08T00:58:41.220Z","type":"quit"}
{"nick":"BombStrike","date":"2016-06-08T01:04:09.239Z","type":"join"}
{"nick":"SomeKittens","date":"2016-06-08T01:36:40.207Z","type":"join"}
{"nick":"Lee1092","date":"2016-06-08T01:49:04.219Z","type":"join"}
{"nick":"indexzero__","date":"2016-06-08T03:23:53.232Z","type":"quit"}
{"nick":"indexzero","date":"2016-06-08T03:24:20.930Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-06-08T03:27:06.701Z","type":"quit"}
{"nick":"sankha","reason":"Ping timeout: 240 seconds","date":"2016-06-08T03:43:21.255Z","type":"quit"}
{"nick":"jasnell","date":"2016-06-08T03:43:23.440Z","type":"join"}
{"nick":"sankha","date":"2016-06-08T03:52:56.197Z","type":"join"}
{"nick":"thefourtheye___","date":"2016-06-08T03:56:03.010Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-08T04:12:26.815Z","type":"quit"}
{"nick":"addaleax","date":"2016-06-08T04:15:49.076Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T04:25:33.347Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T04:25:33.531Z","type":"part"}
{"nick":"italoacasas","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-06-08T04:45:56.384Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-08T04:55:02.009Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T04:55:02.192Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-08T04:55:14.702Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T04:55:14.886Z","type":"part"}
{"nick":"dbevenius|away","new_nick":"dbevenius","date":"2016-06-08T04:57:01.921Z","type":"nick"}
{"nick":"BridgeAR","date":"2016-06-08T05:03:34.705Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T05:08:37.905Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T05:08:38.088Z","type":"part"}
{"nick":"sankha","date":"2016-06-08T05:17:39.295Z","type":"join"}
{"nick":"BridgeAR","reason":"Ping timeout: 276 seconds","date":"2016-06-08T05:19:24.706Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-08T05:24:28.709Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T05:24:28.893Z","type":"part"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-08T05:26:41.814Z","type":"quit"}
{"nick":"sankha","date":"2016-06-08T05:33:33.652Z","type":"join"}
{"nick":"lpin","date":"2016-06-08T05:33:38.918Z","type":"join"}
{"nick":"seishun","date":"2016-06-08T05:42:20.371Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-06-08T06:18:16.309Z","type":"quit"}
{"nick":"alrra","date":"2016-06-08T06:31:42.109Z","type":"join"}
{"nick":"mcollina","date":"2016-06-08T06:38:51.410Z","type":"join"}
{"nick":"yuval","date":"2016-06-08T06:39:44.208Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T06:40:51.349Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T06:40:51.533Z","type":"part"}
{"nick":"seishun","reason":"Ping timeout: 250 seconds","date":"2016-06-08T06:53:37.822Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-08T06:59:32.128Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T06:59:32.311Z","type":"part"}
{"nick":"addaleax","reason":"Ping timeout: 264 seconds","date":"2016-06-08T07:35:16.045Z","type":"quit"}
{"nick":"zz_r04r","new_nick":"r04r","date":"2016-06-08T07:40:13.502Z","type":"nick"}
{"nick":"SomeKittens","reason":"Quit: Connection closed for inactivity","date":"2016-06-08T07:44:19.476Z","type":"quit"}
{"nick":"yuval","reason":"Quit: leaving","date":"2016-06-08T07:44:21.695Z","type":"quit"}
{"nick":"yuval","date":"2016-06-08T07:44:43.126Z","type":"join"}
{"nick":"addaleax","date":"2016-06-08T07:59:54.074Z","type":"join"}
{"nick":"riju","date":"2016-06-08T08:11:06.229Z","type":"join"}
{"nick":"saghul_","date":"2016-06-08T08:40:10.180Z","type":"join"}
{"nick":"BridgeAR","date":"2016-06-08T08:51:45.370Z","type":"join"}
{"nick":"whitlockjc","reason":"Ping timeout: 240 seconds","date":"2016-06-08T08:52:01.226Z","type":"quit"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-08T08:55:03.298Z","type":"quit"}
{"nick":"BridgeAR","reason":"Client Quit","date":"2016-06-08T08:55:14.895Z","type":"quit"}
{"nick":"sankha","date":"2016-06-08T08:55:21.495Z","type":"join"}
{"nick":"BridgeAR","date":"2016-06-08T08:56:07.279Z","type":"join"}
{"nick":"whitlockjc","date":"2016-06-08T08:57:39.366Z","type":"join"}
{"nick":"BridgeAR","reason":"Ping timeout: 260 seconds","date":"2016-06-08T09:02:25.372Z","type":"quit"}
{"nick":"dbevenius","new_nick":"dbevenius|lunch","date":"2016-06-08T09:03:58.130Z","type":"nick"}
{"nick":"nodejs-gh","date":"2016-06-08T09:29:23.427Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T09:29:23.611Z","type":"part"}
{"nick":"seishun","date":"2016-06-08T09:35:21.444Z","type":"join"}
{"nick":"seishun","message":"dumb question: why is FastBuffer needed at all? couldn't Buffer inherit directly from Uint8Array?","date":"2016-06-08T09:36:10.129Z","type":"message"}
{"nick":"konobi","message":"rvagg: do the devtools list still include that git bisect functionality that tjf got working?","date":"2016-06-08T09:39:28.133Z","type":"message"}
{"nick":"konobi","message":"seishun: it's to do with memory pooling","date":"2016-06-08T09:39:53.221Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-06-08T09:43:12.030Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T09:43:12.214Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-08T09:43:22.164Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T09:43:22.384Z","type":"part"}
{"nick":"asap_","date":"2016-06-08T09:43:43.443Z","type":"join"}
{"nick":"seishun","message":"konobi: any more details?","date":"2016-06-08T09:43:43.695Z","type":"message"}
{"nick":"asap_","message":"Hi","date":"2016-06-08T09:43:47.267Z","type":"message"}
{"nick":"asap_","message":"i need help","date":"2016-06-08T09:43:51.949Z","type":"message"}
{"nick":"addaleax","message":"seishun: I think the only real difference is that Buffer(n) currently returns slices from the allocPool, and FastBuffer does not","date":"2016-06-08T09:44:31.885Z","type":"message"}
{"nick":"asap_","message":"function readBlob() { \tvar fs = require('fs'); \tconst js = require('./common.js'); \tconst electron=require('electron'); \tvar data=\"\"; try{ \t \tloc=\"Revenue.xml\"; \t if(file.fd!=null) {   \t f=fs.readFileSync(xmlpathlocal + seprator + locfilename,'utf8');     \talert(\"ok\"+f);  \talert(js.decode_data(window.atob(f))); \tparser = new DOMParser(); \tj=js.decode_data(window.atob(f));  \txmlDoc = parser.parseFromString(j,\"text/xml\");  \tx = xmlDoc.g","date":"2016-06-08T09:44:34.191Z","type":"message"}
{"nick":"asap_","message":"is there any way to wait a function while its using createwrite stream","date":"2016-06-08T09:45:04.044Z","type":"message"}
{"nick":"dbevenius|lunch","new_nick":"dbevenius","date":"2016-06-08T09:46:04.374Z","type":"nick"}
{"nick":"seishun","message":"addaleax: couldn't FastBuffer optionally return slices from allocPool?","date":"2016-06-08T09:46:17.738Z","type":"message"}
{"nick":"asap_","message":"i am not using buffer","date":"2016-06-08T09:46:51.701Z","type":"message"}
{"nick":"asap_","message":"I am using createwritestream","date":"2016-06-08T09:47:02.069Z","type":"message"}
{"nick":"addaleax","message":"asap_: sounds like you may want to peek into #node.js rather than here?","date":"2016-06-08T09:47:15.124Z","type":"message"}
{"nick":"pol123456","date":"2016-06-08T09:47:28.067Z","type":"join"}
{"nick":"asap_","message":"no","date":"2016-06-08T09:48:34.996Z","type":"message"}
{"nick":"asap_","message":"i am try to fetch a data from server and writing it into a local file then reading the same file","date":"2016-06-08T09:49:11.312Z","type":"message"}
{"nick":"asap_","message":"can you suggest me some working way","date":"2016-06-08T09:49:20.262Z","type":"message"}
{"nick":"addaleax","message":"seishun: https://github.com/nodejs/node/pull/6893#issuecomment-224402924 and below… I guess it could, but I see the point Trevor is making there","date":"2016-06-08T09:49:39.287Z","type":"message"}
{"nick":"seishun","message":"asap_: this channel is for node core development, #node.js is for node.js questions","date":"2016-06-08T09:50:11.345Z","type":"message"}
{"nick":"asap_","message":"sorry I just began","date":"2016-06-08T09:50:51.016Z","type":"message"}
{"nick":"asap_","message":"can you guide me","date":"2016-06-08T09:50:56.047Z","type":"message"}
{"nick":"seishun","message":"addaleax: that seems to address something else","date":"2016-06-08T09:51:50.807Z","type":"message"}
{"nick":"addaleax","message":"seishun: Well, .alloc() uses FastBuffer internally (in all cases)… Or maybe I am misunderstanding your original question?","date":"2016-06-08T09:54:14.707Z","type":"message"}
{"nick":"seishun","message":"addaleax: I'm basically asking why Buffer and FastBuffer need to be separate","date":"2016-06-08T09:55:09.217Z","type":"message"}
{"nick":"konobi","message":"seishun: new buffers are mapped to unused sections of the memory pool and unmarked accordingly... this avoids some severe overhead with malloc() on some platforms.","date":"2016-06-08T09:57:12.546Z","type":"message"}
{"nick":"seishun","message":"I mean, why couldn't Buffer be defined like: class Buffer extends Uint8Array { constructor(args){ /* same logic as the current Buffer construction, with calls to `new FastBuffer` replaced with `super ( ... )` */  } }","date":"2016-06-08T10:04:57.975Z","type":"message"}
{"nick":"konobi","message":"because then memory allocation is out of your handles","date":"2016-06-08T10:05:24.885Z","type":"message"}
{"nick":"konobi","message":"*hands","date":"2016-06-08T10:05:31.646Z","type":"message"}
{"nick":"addaleax","message":"hmmm not sure that’s true, nothing would stop us from creating slices of the allocPool with that","date":"2016-06-08T10:06:15.219Z","type":"message"}
{"nick":"seishun","message":"indeed","date":"2016-06-08T10:06:39.673Z","type":"message"}
{"nick":"addaleax","message":"but one thing that would definitely change in that case (although one can certainly work around it) is that `Buffer(n)` without the `new` wouldn’t work","date":"2016-06-08T10:06:41.944Z","type":"message"}
{"nick":"seishun","message":"if (!(this instanceof Buffer)) return new Buffer(arguments)","date":"2016-06-08T10:07:27.161Z","type":"message"}
{"nick":"addaleax","message":"seishun: heh, yeah, would be cool if that worked, but that’s no longer possible with ES6 classes","date":"2016-06-08T10:08:18.914Z","type":"message"}
{"nick":"seishun","message":"oh, TIL","date":"2016-06-08T10:09:36.247Z","type":"message"}
{"nick":"seishun","message":"was Buffer always callable without new, or is it an artifact of recent refactors?","date":"2016-06-08T10:10:35.676Z","type":"message"}
{"nick":"addaleax","message":"hm, quick check with nvm says it works at least since v0.6","date":"2016-06-08T10:11:21.440Z","type":"message"}
{"nick":"seishun","message":"I see","date":"2016-06-08T10:11:29.726Z","type":"message"}
{"nick":"JakeSays","reason":"Ping timeout: 244 seconds","date":"2016-06-08T10:16:09.964Z","type":"quit"}
{"nick":"rnchamberlain","date":"2016-06-08T10:16:26.479Z","type":"join"}
{"nick":"addaleax","message":"seishun: since it’s in your head too right now… do we actually need Buffer.prototype.slice anymore?","date":"2016-06-08T10:21:03.968Z","type":"message"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-08T10:21:44.235Z","type":"quit"}
{"nick":"sankha","date":"2016-06-08T10:22:29.386Z","type":"join"}
{"nick":"BridgeAR","date":"2016-06-08T10:22:58.758Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T10:26:50.665Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T10:26:50.849Z","type":"part"}
{"nick":"seishun","message":"addaleax: not if the logic is exactly the same as TypedArray.prototype.slice","date":"2016-06-08T10:27:32.064Z","type":"message"}
{"nick":"seishun","message":"it seems to be","date":"2016-06-08T10:30:05.105Z","type":"message"}
{"nick":"addaleax","message":"oh, it isn’t sorry… but it’s confusing ôo","date":"2016-06-08T10:31:01.228Z","type":"message"}
{"nick":"addaleax","message":"Uint8Array#slice copies, but Buffer#slice doesn’t","date":"2016-06-08T10:31:17.607Z","type":"message"}
{"nick":"asap_","reason":"Quit: Page closed","date":"2016-06-08T10:31:22.823Z","type":"quit"}
{"nick":"seishun","message":"oh","date":"2016-06-08T10:31:56.285Z","type":"message"}
{"nick":"addaleax","message":"and Uint8Array#subarray() applied to a Buffer does not return a Buffer","date":"2016-06-08T10:31:57.219Z","type":"message"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-08T10:32:33.111Z","type":"quit"}
{"nick":"seishun","message":"should it?","date":"2016-06-08T10:32:49.995Z","type":"message"}
{"nick":"konobi","message":"i suppose it could be cast somehow","date":"2016-06-08T10:33:52.131Z","type":"message"}
{"nick":"addaleax","message":"mh, I’m think it’s worth doing that… there’s a cost to changing the prototype, if you’re thinking about that","date":"2016-06-08T10:34:39.593Z","type":"message"}
{"nick":"konobi","message":"seishun: but yeah... using new() without a memory pool was slow","date":"2016-06-08T10:34:42.308Z","type":"message"}
{"nick":"konobi","message":"since they have the fun of living in c++ space too","date":"2016-06-08T10:35:38.118Z","type":"message"}
{"nick":"seishun","message":"I'm still not sure why map() returns a Buffer per the spec. SpeciesConstructor should return defaultConstructor since Buffer doesn't have a species property","date":"2016-06-08T10:36:20.495Z","type":"message"}
{"nick":"seishun","message":"http://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.map","date":"2016-06-08T10:36:29.807Z","type":"message"}
{"nick":"konobi","message":"node's buffer came out of node, not a spec.","date":"2016-06-08T10:38:04.232Z","type":"message"}
{"nick":"addaleax","message":"konobi: well, Uint8Array#map does come from V8","date":"2016-06-08T10:38:36.507Z","type":"message"}
{"nick":"konobi","message":"sure, but it wasn't around when node started","date":"2016-06-08T10:39:04.876Z","type":"message"}
{"nick":"addaleax","message":"true :)","date":"2016-06-08T10:39:27.436Z","type":"message"}
{"nick":"addaleax","message":"seishun: https://github.com/nodejs/node/blob/d9e0d8b810d8b7dfc668563fde2933954e4042be/deps/v8/src/js/runtime.js#L88","date":"2016-06-08T10:40:30.376Z","type":"message"}
{"nick":"addaleax","message":"I’d read that as „because V8 wants it to be that way“","date":"2016-06-08T10:41:26.380Z","type":"message"}
{"nick":"konobi","message":"sounds about right for early node/v8 days","date":"2016-06-08T10:42:29.024Z","type":"message"}
{"nick":"sankha","date":"2016-06-08T10:52:03.409Z","type":"join"}
{"nick":"sankha","reason":"Ping timeout: 258 seconds","date":"2016-06-08T10:56:37.186Z","type":"quit"}
{"nick":"johnDoe111","date":"2016-06-08T10:59:00.287Z","type":"join"}
{"nick":"johnDoe111","reason":"Remote host closed the connection","date":"2016-06-08T10:59:05.329Z","type":"quit"}
{"nick":"thealphanerd","reason":"Quit: farewell for now","date":"2016-06-08T10:59:24.942Z","type":"quit"}
{"nick":"thealphanerd","date":"2016-06-08T10:59:55.462Z","type":"join"}
{"nick":"asap","date":"2016-06-08T11:00:33.439Z","type":"join"}
{"nick":"johnDoe111","date":"2016-06-08T11:00:34.908Z","type":"join"}
{"nick":"asap","message":"help me","date":"2016-06-08T11:00:37.807Z","type":"message"}
{"nick":"johnDoe111","reason":"Remote host closed the connection","date":"2016-06-08T11:00:59.245Z","type":"quit"}
{"nick":"addaleax","message":"asap: I still think #node.js would be a better place","date":"2016-06-08T11:01:32.309Z","type":"message"}
{"nick":"addaleax","message":"asap: or https://github.com/nodejs/help if you prefer that","date":"2016-06-08T11:01:43.159Z","type":"message"}
{"nick":"johnDoe111","date":"2016-06-08T11:10:38.565Z","type":"join"}
{"nick":"riju","reason":"Quit: Leaving","date":"2016-06-08T11:11:53.272Z","type":"quit"}
{"nick":"johnDoe111","reason":"Remote host closed the connection","date":"2016-06-08T11:13:31.012Z","type":"quit"}
{"nick":"sankha","date":"2016-06-08T11:14:30.201Z","type":"join"}
{"nick":"johnDoe111","date":"2016-06-08T11:22:17.503Z","type":"join"}
{"nick":"johnDoe111","reason":"Remote host closed the connection","date":"2016-06-08T11:23:18.515Z","type":"quit"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-08T11:29:50.659Z","type":"quit"}
{"nick":"johnDoe111","date":"2016-06-08T11:30:27.223Z","type":"join"}
{"nick":"johnDoe111","reason":"Remote host closed the connection","date":"2016-06-08T11:30:28.307Z","type":"quit"}
{"nick":"johnDoe111","date":"2016-06-08T11:30:51.162Z","type":"join"}
{"nick":"sankha","date":"2016-06-08T11:31:42.275Z","type":"join"}
{"nick":"rnchamberlain","reason":"Ping timeout: 250 seconds","date":"2016-06-08T11:36:44.456Z","type":"quit"}
{"nick":"johnDoe111^","date":"2016-06-08T11:43:07.408Z","type":"join"}
{"nick":"johnDoe111^","reason":"Remote host closed the connection","date":"2016-06-08T11:43:08.662Z","type":"quit"}
{"nick":"johnDoe111^","date":"2016-06-08T11:45:42.228Z","type":"join"}
{"nick":"johnDoe111^","reason":"Remote host closed the connection","date":"2016-06-08T11:46:00.474Z","type":"quit"}
{"nick":"johnDoe111","reason":"Ping timeout: 244 seconds","date":"2016-06-08T11:51:14.005Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-08T11:59:56.154Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T11:59:56.334Z","type":"part"}
{"nick":"seishun","message":"Buffer[Symbol.species] === Buffer","date":"2016-06-08T12:04:36.695Z","type":"message"}
{"nick":"seishun","message":"now I'm even more confused","date":"2016-06-08T12:04:40.652Z","type":"message"}
{"nick":"seishun","message":"why does it work?","date":"2016-06-08T12:04:45.207Z","type":"message"}
{"nick":"addaleax","message":"seishun: Because that’s a getter that comes from the Uint8Array’s prototype chain","date":"2016-06-08T12:05:14.205Z","type":"message"}
{"nick":"addaleax","message":"(that does just `return this`)","date":"2016-06-08T12:05:32.084Z","type":"message"}
{"nick":"addaleax","message":"I was confused, too :D","date":"2016-06-08T12:05:39.486Z","type":"message"}
{"nick":"seishun","message":"ah","date":"2016-06-08T12:05:58.261Z","type":"message"}
{"nick":"seishun","message":"\"Return the this value.\"","date":"2016-06-08T12:06:08.850Z","type":"message"}
{"nick":"addaleax","message":"is that a quote from the spec or something…?","date":"2016-06-08T12:06:40.585Z","type":"message"}
{"nick":"addaleax","message":"I don’t know if it’s supposed to do this, btw, just that it currently does","date":"2016-06-08T12:07:00.642Z","type":"message"}
{"nick":"seishun","message":"it is","date":"2016-06-08T12:08:00.522Z","type":"message"}
{"nick":"johnDoe111","date":"2016-06-08T12:08:08.421Z","type":"join"}
{"nick":"seishun","message":"http://www.ecma-international.org/ecma-262/6.0/#sec-get-%typedarray%-@@species","date":"2016-06-08T12:08:08.421Z","type":"message"}
{"nick":"addaleax","message":"huh, fun","date":"2016-06-08T12:08:44.256Z","type":"message"}
{"nick":"seishun","message":">but apparently setting Symbol.species is not even necessary","date":"2016-06-08T12:10:36.476Z","type":"message"}
{"nick":"seishun","message":"you'd still need to set it if you wanted to prevent it from calling the deprecated constructor, wouldn't you?","date":"2016-06-08T12:10:55.029Z","type":"message"}
{"nick":"johnDoe111^","date":"2016-06-08T12:12:48.308Z","type":"join"}
{"nick":"addaleax","message":"seishun: ah, yes, you’re right","date":"2016-06-08T12:15:44.261Z","type":"message"}
{"nick":"seishun","reason":"Quit: Page closed","date":"2016-06-08T12:16:45.861Z","type":"quit"}
{"nick":"addaleax","message":"maybe one can get around all that in some way","date":"2016-06-08T12:17:04.549Z","type":"message"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2016-06-08T12:35:20.764Z","type":"nick"}
{"nick":"nodejs-gh","date":"2016-06-08T12:38:53.476Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T12:38:53.696Z","type":"part"}
{"nick":"rvagg","message":"\"species\" is such a horrible name, it's like they're not even pretending that they were out of options for a sensible name because of clashes with existing usage in userland or the spec","date":"2016-06-08T12:41:37.423Z","type":"message"}
{"nick":"asap","reason":"Quit: Page closed","date":"2016-06-08T12:52:59.814Z","type":"quit"}
{"nick":"jasnell","date":"2016-06-08T12:55:32.849Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-08T13:00:03.122Z","type":"quit"}
{"nick":"17SAAEG7U","date":"2016-06-08T13:00:20.473Z","type":"join"}
{"nick":"17SAAEG7U","reason":"Remote host closed the connection","date":"2016-06-08T13:03:06.782Z","type":"quit"}
{"nick":"italoacasas","date":"2016-06-08T13:09:02.552Z","type":"join"}
{"nick":"sankha","date":"2016-06-08T13:11:56.926Z","type":"join"}
{"nick":"sgimeno","date":"2016-06-08T13:17:15.380Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T13:18:03.432Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T13:18:03.615Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-08T13:18:19.144Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T13:18:19.324Z","type":"part"}
{"nick":"italoacasas","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-06-08T13:23:05.908Z","type":"quit"}
{"nick":"washt","date":"2016-06-08T13:35:05.350Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-08T13:39:27.914Z","type":"quit"}
{"nick":"sankha","date":"2016-06-08T13:40:56.227Z","type":"join"}
{"nick":"italoacasas","date":"2016-06-08T13:43:17.357Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T13:52:37.130Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T13:52:37.310Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-08T13:52:58.418Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T13:52:58.598Z","type":"part"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-06-08T14:10:44.223Z","type":"quit"}
{"nick":"addaleax","reason":"Ping timeout: 250 seconds","date":"2016-06-08T14:10:47.136Z","type":"quit"}
{"nick":"jasnell","date":"2016-06-08T14:12:15.704Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-06-08T14:12:51.289Z","type":"quit"}
{"nick":"johnDoe111","reason":"Ping timeout: 244 seconds","date":"2016-06-08T14:32:15.264Z","type":"quit"}
{"nick":"jasnell_","date":"2016-06-08T14:45:45.473Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 250 seconds","date":"2016-06-08T14:48:33.145Z","type":"quit"}
{"nick":"yuval","reason":"Quit: leaving","date":"2016-06-08T14:52:30.036Z","type":"quit"}
{"nick":"washt","message":"I've been using node for the past couple of months and am looking for a mentor for my first contribution. Am I in the right place?","date":"2016-06-08T14:57:46.370Z","type":"message"}
{"nick":"dbevenius","new_nick":"dbevenius|away","date":"2016-06-08T14:58:55.884Z","type":"nick"}
{"nick":"sankha","date":"2016-06-08T15:03:53.700Z","type":"join"}
{"nick":"jbergstroem","message":"washt: Absolutely. I would suggest that you file a PR using the template provided and go from there","date":"2016-06-08T15:06:14.735Z","type":"message"}
{"nick":"addaleax","date":"2016-06-08T15:07:52.819Z","type":"join"}
{"nick":"JakeSays","date":"2016-06-08T15:20:15.149Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T15:30:37.073Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T15:30:37.254Z","type":"part"}
{"nick":"washt","message":"jbergstroem: I should clarify. I am looking good first contribution to start. Issues on GH with this label seem to be stale.","date":"2016-06-08T15:30:57.474Z","type":"message"}
{"nick":"jbergstroem","message":"oh","date":"2016-06-08T15:31:04.165Z","type":"message"}
{"nick":"jbergstroem","message":"stale you say","date":"2016-06-08T15:31:11.473Z","type":"message"}
{"nick":"saghul_","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-06-08T15:36:18.085Z","type":"quit"}
{"nick":"jbergstroem","message":"washt: hard to know where you feel proficient but if you check newer issues you usually get a bit of everything; be it low hanging fruit or stuff people put up just to not forget about it (read: me)","date":"2016-06-08T15:36:26.580Z","type":"message"}
{"nick":"mcollina","reason":"Remote host closed the connection","date":"2016-06-08T15:48:13.211Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-06-08T15:52:01.104Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T15:52:01.285Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-06-08T15:52:19.713Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-06-08T15:52:19.893Z","type":"part"}
