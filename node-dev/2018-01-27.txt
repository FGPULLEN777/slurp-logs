{"nick":"not-an-aardvark","date":"2018-01-27T00:27:33.737Z","type":"join"}
{"nick":"adempus","date":"2018-01-27T00:54:29.473Z","type":"join"}
{"nick":"qard","date":"2018-01-27T01:22:22.829Z","type":"join"}
{"nick":"qard","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2018-01-27T01:27:23.683Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-01-27T01:38:53.605Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T01:38:53.713Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-27T01:40:11.378Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T01:40:11.447Z","type":"part"}
{"nick":"BridgeAR","reason":"Ping timeout: 260 seconds","date":"2018-01-27T01:59:40.412Z","type":"quit"}
{"nick":"adempus","reason":"Ping timeout: 256 seconds","date":"2018-01-27T02:02:02.311Z","type":"quit"}
{"nick":"BridgeAR","date":"2018-01-27T02:02:12.462Z","type":"join"}
{"nick":"vsemozhetbyt","date":"2018-01-27T02:02:25.006Z","type":"join"}
{"nick":"maclover7","message":"fishrock123: cjihrig: post mortem at https://github.com/nodejs/node/issues/18403#issuecomment-360951306","date":"2018-01-27T02:03:21.060Z","type":"message"}
{"nick":"maclover7","message":"I am sorry for all of the hassle :(","date":"2018-01-27T02:03:38.507Z","type":"message"}
{"nick":"vsemozhetbyt","reason":"Ping timeout: 260 seconds","date":"2018-01-27T02:07:04.948Z","type":"quit"}
{"nick":"marthinal","date":"2018-01-27T02:14:01.422Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 256 seconds","date":"2018-01-27T02:18:28.377Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-01-27T02:49:06.687Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T02:49:06.804Z","type":"part"}
{"nick":"devsnek","message":"well you know what they say maclover7","date":"2018-01-27T02:53:02.780Z","type":"message"}
{"nick":"devsnek","message":"you'll never make this mistake again :3","date":"2018-01-27T02:53:13.173Z","type":"message"}
{"nick":"BridgeAR","reason":"Ping timeout: 256 seconds","date":"2018-01-27T03:01:13.383Z","type":"quit"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2018-01-27T03:54:15.058Z","type":"quit"}
{"nick":"qard","date":"2018-01-27T05:07:00.019Z","type":"join"}
{"nick":"qard","reason":"Remote host closed the connection","date":"2018-01-27T05:12:19.099Z","type":"quit"}
{"nick":"marthinal","date":"2018-01-27T05:14:19.482Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 260 seconds","date":"2018-01-27T05:19:10.301Z","type":"quit"}
{"nick":"qard","date":"2018-01-27T05:36:05.943Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T05:47:50.610Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T05:47:50.679Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-27T05:48:00.610Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T05:48:00.718Z","type":"part"}
{"nick":"joyee","message":"To err is human","date":"2018-01-27T05:51:13.138Z","type":"message"}
{"nick":"joyee","message":"That's why we need a bot to do things...in the future","date":"2018-01-27T05:51:47.720Z","type":"message"}
{"nick":"joyee","message":"do things = landing commits the way a human would do it","date":"2018-01-27T05:52:10.801Z","type":"message"}
{"nick":"qard","reason":"Quit: qard","date":"2018-01-27T06:05:09.356Z","type":"quit"}
{"nick":"qard","date":"2018-01-27T06:06:27.914Z","type":"join"}
{"nick":"marthinal","date":"2018-01-27T06:15:21.838Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-01-27T06:31:53.571Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-01-27T06:51:00.759Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T06:51:00.866Z","type":"part"}
{"nick":"lpin","date":"2018-01-27T06:51:16.066Z","type":"join"}
{"nick":"qard","reason":"Read error: Connection reset by peer","date":"2018-01-27T07:18:18.184Z","type":"quit"}
{"nick":"qard_","date":"2018-01-27T07:18:18.929Z","type":"join"}
{"nick":"qard_","new_nick":"qard","date":"2018-01-27T07:18:28.868Z","type":"nick"}
{"nick":"qard","reason":"Quit: qard","date":"2018-01-27T07:25:26.186Z","type":"quit"}
{"nick":"qard","date":"2018-01-27T07:26:31.631Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-01-27T07:27:12.034Z","type":"quit"}
{"nick":"OLNSaEzBA","date":"2018-01-27T07:44:29.327Z","type":"join"}
{"nick":"qard","reason":"Ping timeout: 256 seconds","date":"2018-01-27T08:00:44.682Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2018-01-27T08:21:10.751Z","type":"join"}
{"nick":"marthinal","date":"2018-01-27T08:32:21.714Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 268 seconds","date":"2018-01-27T08:37:32.605Z","type":"quit"}
{"nick":"TimothyGu","reason":"Quit: WeeChat 1.6","date":"2018-01-27T08:38:22.019Z","type":"quit"}
{"nick":"TimothyGu","date":"2018-01-27T08:42:26.930Z","type":"join"}
{"nick":"OLNSaEzBA","reason":"Ping timeout: 256 seconds","date":"2018-01-27T10:00:18.345Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-01-27T10:21:07.725Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T10:21:07.794Z","type":"part"}
{"nick":"OLNSaEzBA","date":"2018-01-27T10:23:19.806Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T10:23:50.839Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T10:23:50.948Z","type":"part"}
{"nick":"seishun","date":"2018-01-27T10:24:59.940Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T10:30:17.389Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T10:30:17.494Z","type":"part"}
{"nick":"marthinal","date":"2018-01-27T10:47:58.208Z","type":"join"}
{"nick":"OLNSaEzBA","reason":"Ping timeout: 240 seconds","date":"2018-01-27T10:59:57.724Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-01-27T11:06:36.402Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-01-27T11:25:10.912Z","type":"quit"}
{"nick":"mylesborins","date":"2018-01-27T11:25:41.557Z","type":"join"}
{"nick":"marthina_","date":"2018-01-27T11:32:46.445Z","type":"join"}
{"nick":"marthina_","reason":"Ping timeout: 256 seconds","date":"2018-01-27T11:37:12.325Z","type":"quit"}
{"nick":"lpin","reason":"Read error: Connection reset by peer","date":"2018-01-27T11:37:12.598Z","type":"quit"}
{"nick":"BridgeAR","date":"2018-01-27T11:44:18.668Z","type":"join"}
{"nick":"BridgeAR","reason":"Read error: Connection reset by peer","date":"2018-01-27T12:04:18.724Z","type":"quit"}
{"nick":"marthinal","reason":"Quit: This computer has gone to sleep","date":"2018-01-27T12:34:54.520Z","type":"quit"}
{"nick":"marthinal","date":"2018-01-27T12:35:42.603Z","type":"join"}
{"nick":"marthinal","reason":"Quit: This computer has gone to sleep","date":"2018-01-27T12:51:11.744Z","type":"quit"}
{"nick":"marthinal","date":"2018-01-27T12:52:30.938Z","type":"join"}
{"nick":"marthinal","reason":"Remote host closed the connection","date":"2018-01-27T12:53:37.574Z","type":"quit"}
{"nick":"marthinal","date":"2018-01-27T13:12:59.133Z","type":"join"}
{"nick":"bradleymeck","date":"2018-01-27T13:29:06.821Z","type":"join"}
{"nick":"bradleymeck","message":"what should I do if someone opens alternate implementations with alternate implications of my PRs then tries to merge them, do I have to block/request changes on all of them? https://github.com/nodejs/node/pull/18270","date":"2018-01-27T13:30:03.788Z","type":"message"}
{"nick":"bradleymeck","message":"addaleax: in particular see the \"parent\" pr which had to fix the cache behavior","date":"2018-01-27T13:30:51.759Z","type":"message"}
{"nick":"joyee","message":"bradleymeck: looks like 18261 is now building on top of 18270 with a fix to the a condition of cached entires? Then we usually would land 18270 first, since 18261 now depends on 18270. Then 18261 can land later, possibly as another commit with the cache fix. Theoretically, we could land the commits together in 18261 but if bnoordhuis  don't want his commits landed like that we usually respect the opinion of the","date":"2018-01-27T14:41:34.190Z","type":"message"}
{"nick":"joyee","message":"original author.","date":"2018-01-27T14:41:34.298Z","type":"message"}
{"nick":"joyee","message":"s/a fix to the a condition/a fix to the race condition/","date":"2018-01-27T14:41:56.977Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: bnnordhuis just opened a PR because he didn't like the original","date":"2018-01-27T14:42:06.686Z","type":"message"}
{"nick":"bradleymeck","message":"I do not see him as an \"original\" author","date":"2018-01-27T14:42:14.874Z","type":"message"}
{"nick":"joyee","message":"Yes, but now 18261 contains code from 18270","date":"2018-01-27T14:42:34.645Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: only because I get called \"Stupid\" and the like if I implement things different from him","date":"2018-01-27T14:43:00.818Z","type":"message"}
{"nick":"bradleymeck","message":"that is an actual thing","date":"2018-01-27T14:43:07.837Z","type":"message"}
{"nick":"bradleymeck","message":"so, using his code is easier than arguing on that point","date":"2018-01-27T14:43:18.839Z","type":"message"}
{"nick":"joyee","message":"If there are no disputes I would land that as two commits, one from bnnordhuis that fixes the directory thing without overhead,  one from you that fixes the cache behavior","date":"2018-01-27T14:43:35.758Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: i disagree on his behavior of not returning \"\"","date":"2018-01-27T14:43:54.270Z","type":"message"}
{"nick":"bradleymeck","message":"my PR differs in that and his PR differs intentionally from mine","date":"2018-01-27T14:44:18.327Z","type":"message"}
{"nick":"bradleymeck","message":"so, disagreement","date":"2018-01-27T14:44:27.297Z","type":"message"}
{"nick":"joyee","message":"Hmm, if you insist that returning undefined is wrong, then this is probably going to be tsc-review","date":"2018-01-27T14:44:34.008Z","type":"message"}
{"nick":"seishun","message":"has node ever added a feature that depends on a flagged V8 feature?","date":"2018-01-27T14:44:38.364Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: sounds fine to me, I also gave an alternative of making other odd non-main containing files not returning \"\" as a workable thing","date":"2018-01-27T14:45:10.228Z","type":"message"}
{"nick":"bradleymeck","message":"seishun: in days long past","date":"2018-01-27T14:45:19.295Z","type":"message"}
{"nick":"seishun","message":"bradleymeck: how did that work? The feature only worked if the flag was enabled?","date":"2018-01-27T14:45:34.676Z","type":"message"}
{"nick":"bradleymeck","message":"we don't really do that anymore, but the ESM flags are different from other flags due to how `import()` works in Script","date":"2018-01-27T14:45:41.026Z","type":"message"}
{"nick":"bradleymeck","message":"seishun: pretty much","date":"2018-01-27T14:45:50.413Z","type":"message"}
{"nick":"seishun","message":"anywhere I can see it? I'd like to add Buffer methods that read 64-bit ints and return BigInt","date":"2018-01-27T14:46:47.432Z","type":"message"}
{"nick":"bradleymeck","message":"ummm its like 0.1 stuff that I'd rather not dig up","date":"2018-01-27T14:47:04.444Z","type":"message"}
{"nick":"seishun","message":"I see","date":"2018-01-27T14:47:14.485Z","type":"message"}
{"nick":"bradleymeck","message":"seishun: maybe open up a PR if chrome has released it in their stable release?","date":"2018-01-27T14:48:34.669Z","type":"message"}
{"nick":"bradleymeck","message":"joyee: either way, there should be a better system to not preempt existing PRs is my experience","date":"2018-01-27T14:49:00.828Z","type":"message"}
{"nick":"bradleymeck","message":"that probably doesn't help things","date":"2018-01-27T14:49:19.271Z","type":"message"}
{"nick":"seishun","message":"bradleymeck: nope, it's still work in progress","date":"2018-01-27T14:49:46.926Z","type":"message"}
{"nick":"bradleymeck","message":"seishun: doubt you could land it without a flag then","date":"2018-01-27T14:49:58.589Z","type":"message"}
{"nick":"seishun","message":"that's why I'm thinking about making these methods available with --harmony_bigint flag","date":"2018-01-27T14:50:59.691Z","type":"message"}
{"nick":"bradleymeck","message":"seishun: do that on v8 side, not node. node lets you set every thing in `--v8-flags`","date":"2018-01-27T14:52:59.493Z","type":"message"}
{"nick":"seishun","message":"bradleymeck: not sure what you mean. How can Buffer methods be added on v8 side?","date":"2018-01-27T14:54:06.900Z","type":"message"}
{"nick":"bradleymeck","message":"oh, on buffer","date":"2018-01-27T14:54:16.091Z","type":"message"}
{"nick":"bradleymeck","message":"somehow I kept reading typed arrays in my head","date":"2018-01-27T14:54:30.192Z","type":"message"}
{"nick":"bradleymeck","message":"I don't think we have ever tied up flags like that","date":"2018-01-27T14:54:53.669Z","type":"message"}
{"nick":"bradleymeck","message":"we have always made a node specific one that doesn't conflict with v8's","date":"2018-01-27T14:55:05.141Z","type":"message"}
{"nick":"seishun","message":"would it be worthwhile to open a PR anyway and keep it open until BigInt is available without a flag?","date":"2018-01-27T14:56:08.460Z","type":"message"}
{"nick":"joyee","message":"bradleymeck hmm, there could be, but I am not sure how.  At best we could suggest people to resolve the disagreement in one PR and set a minimum timeout before opening a PR with an alternative, I guess.","date":"2018-01-27T15:04:21.578Z","type":"message"}
{"nick":"bradleymeck","message":"I am not sure how either. I do like the minimum timeout though since people can request changes and block things already.","date":"2018-01-27T15:05:32.328Z","type":"message"}
{"nick":"joyee","message":"seishun: if it's for a stage 4 feature it might be worthwhile...but bigint is still in stage 3. probably a bit too early?","date":"2018-01-27T15:07:49.978Z","type":"message"}
{"nick":"marthinal","reason":"Quit: This computer has gone to sleep","date":"2018-01-27T15:08:17.657Z","type":"quit"}
{"nick":"seishun","message":"fair enough","date":"2018-01-27T15:08:22.883Z","type":"message"}
{"nick":"seishun","message":"joyee: do you know what's blocking it from reaching stage 4? Just want to know what timeframe I should expect","date":"2018-01-27T15:11:01.461Z","type":"message"}
{"nick":"joyee","message":"Shipping implementations?","date":"2018-01-27T15:11:53.084Z","type":"message"}
{"nick":"seishun","message":"so it's waiting for V8?","date":"2018-01-27T15:12:15.898Z","type":"message"}
{"nick":"seishun","message":"I thought its the other way around","date":"2018-01-27T15:12:20.655Z","type":"message"}
{"nick":"joyee","message":"To reach stage 4 at least two implementations are required, I believe.","date":"2018-01-27T15:12:56.495Z","type":"message"}
{"nick":"seishun","message":"I see","date":"2018-01-27T15:13:36.099Z","type":"message"}
{"nick":"bradleymeck","message":"we had an update last week at TC39, shipping is one thing, but some type coersion spec stuff was found with typed arrays while implementing","date":"2018-01-27T15:13:43.379Z","type":"message"}
{"nick":"joyee","message":"Last time I checked, v8 has not implemented BigUint64Array/BigInt64Array","date":"2018-01-27T15:13:47.415Z","type":"message"}
{"nick":"bradleymeck","message":"stage 3 ~ means it is being implemented but may change due to implementation feedback","date":"2018-01-27T15:14:02.119Z","type":"message"}
{"nick":"devsnek","message":"BigInt64?","date":"2018-01-27T16:02:48.977Z","type":"message"}
{"nick":"devsnek","message":"isn't that redundant/limiting","date":"2018-01-27T16:02:59.228Z","type":"message"}
{"nick":"seishun","message":"devsnek: it's an array, so each element must have a certain byte length","date":"2018-01-27T16:09:20.508Z","type":"message"}
{"nick":"AtumT","date":"2018-01-27T16:30:20.751Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T17:03:36.466Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T17:03:36.560Z","type":"part"}
{"nick":"johannh","reason":"Remote host closed the connection","date":"2018-01-27T17:06:17.176Z","type":"quit"}
{"nick":"johannh","date":"2018-01-27T18:07:16.347Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T18:39:07.754Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T18:39:07.821Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-27T19:00:02.739Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T19:00:02.846Z","type":"part"}
{"nick":"qard","date":"2018-01-27T19:10:44.966Z","type":"join"}
{"nick":"not-an-aardvark","date":"2018-01-27T19:16:59.831Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-01-27T19:25:10.671Z","type":"quit"}
{"nick":"TimothyGu","message":"devsnek: BigInt itself is arbitrary precision","date":"2018-01-27T19:25:16.338Z","type":"message"}
{"nick":"devsnek","message":"yea thats why i was confused","date":"2018-01-27T19:25:29.495Z","type":"message"}
{"nick":"devsnek","message":"what seishun said makes sense","date":"2018-01-27T19:25:38.365Z","type":"message"}
{"nick":"devsnek","message":"what if we just had like BigIntArray(x, precision=64)","date":"2018-01-27T19:27:09.619Z","type":"message"}
{"nick":"devsnek","message":"would that be too hard to keep performant?","date":"2018-01-27T19:27:17.217Z","type":"message"}
{"nick":"qard","reason":"Quit: qard","date":"2018-01-27T19:27:46.299Z","type":"quit"}
{"nick":"devsnek","message":"i suppose that would be annoying for TypedArray.from","date":"2018-01-27T19:28:13.013Z","type":"message"}
{"nick":"bradleymeck","date":"2018-01-27T19:45:24.017Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T20:00:17.861Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T20:00:17.952Z","type":"part"}
{"nick":"devsnek","message":"blue is only disallowed because of powershell right","date":"2018-01-27T20:08:39.688Z","type":"message"}
{"nick":"nodejs-gh","date":"2018-01-27T20:09:07.709Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T20:09:07.778Z","type":"part"}
{"nick":"AtumT_","date":"2018-01-27T20:41:22.422Z","type":"join"}
{"nick":"AtumT","reason":"Ping timeout: 240 seconds","date":"2018-01-27T20:43:40.783Z","type":"quit"}
{"nick":"joyee","message":"BigInt64 arrays would we useful when dealing with data coming from c++ because with inttypes you will have uint64_t[] and int64_t[] that cannot be mapped into JS easily. Although I think they are there because of similar wasm types?","date":"2018-01-27T20:51:47.592Z","type":"message"}
{"nick":"OLNSaEzBA","date":"2018-01-27T20:53:21.442Z","type":"join"}
{"nick":"joyee","message":"System APIs usually just go as far as the 64bit precision so this fills the gap left","date":"2018-01-27T20:54:14.565Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-01-27T21:29:01.903Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-01-27T22:00:11.572Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T22:05:42.355Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T22:05:42.436Z","type":"part"}
{"nick":"seishun","reason":"Ping timeout: 248 seconds","date":"2018-01-27T22:17:03.872Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-01-27T23:01:50.458Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T23:01:50.539Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-01-27T23:08:11.825Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-01-27T23:08:11.893Z","type":"part"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-01-27T23:15:49.820Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-01-27T23:24:08.745Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2018-01-27T23:25:33.791Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-01-27T23:32:45.770Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-01-27T23:40:34.661Z","type":"quit"}
