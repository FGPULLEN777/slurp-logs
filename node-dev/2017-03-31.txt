{"nick":"doodadjs","reason":"Quit: Leaving","date":"2017-03-31T00:00:08.144Z","type":"quit"}
{"nick":"ndhoule","date":"2017-03-31T00:16:54.161Z","type":"join"}
{"nick":"ndhoule","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-03-31T00:27:17.089Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-03-31T00:28:50.308Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2017-03-31T00:29:31.372Z","type":"join"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2017-03-31T00:38:55.101Z","type":"quit"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2017-03-31T00:51:00.687Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T01:04:16.733Z","type":"join"}
{"nick":"srl295","date":"2017-03-31T01:13:23.289Z","type":"join"}
{"nick":"srl295","message":"trevnorris: / all … so… regarding v8 and GN  and such… this will impact how we build v8 with Intl support. I'm trying to catch up on the call with v8 / future of GYP / etc.   IS there a timeframe for when (if?) there would be a Node built that doesn't use gyp to build v8?","date":"2017-03-31T01:35:56.447Z","type":"message"}
{"nick":"srl295","message":"^ill file an issue if I know what to refer to","date":"2017-03-31T01:47:19.648Z","type":"message"}
{"nick":"joyee","reason":"Remote host closed the connection","date":"2017-03-31T02:01:58.572Z","type":"quit"}
{"nick":"plasmar","reason":"Ping timeout: 240 seconds","date":"2017-03-31T02:10:48.134Z","type":"quit"}
{"nick":"plasmar","date":"2017-03-31T02:11:52.540Z","type":"join"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2017-03-31T02:43:44.667Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T02:51:06.115Z","type":"join"}
{"nick":"jasnell","date":"2017-03-31T02:54:57.673Z","type":"join"}
{"nick":"snowkidind","date":"2017-03-31T02:59:55.856Z","type":"join"}
{"nick":"olalonde","reason":"Quit: Connection closed for inactivity","date":"2017-03-31T03:01:20.682Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-03-31T03:15:11.051Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T03:15:11.228Z","type":"part"}
{"nick":"m1911","date":"2017-03-31T03:22:33.144Z","type":"join"}
{"nick":"troykelly","reason":"Ping timeout: 260 seconds","date":"2017-03-31T03:25:12.613Z","type":"quit"}
{"nick":"snowkidind","reason":"Quit: astalaPIZZA Baby!","date":"2017-03-31T03:26:59.535Z","type":"quit"}
{"nick":"m1911","reason":"Quit: Mutter: www.mutterirc.com","date":"2017-03-31T03:32:25.248Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-03-31T03:33:39.115Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T03:33:39.329Z","type":"part"}
{"nick":"Trott","message":"srl295: No timeframe that I'm aware of. Just conversation for now trying to figure out things like what a reasonable timeframe might be.","date":"2017-03-31T03:37:00.121Z","type":"message"}
{"nick":"troykelly","date":"2017-03-31T03:51:53.508Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 260 seconds","date":"2017-03-31T03:52:16.600Z","type":"quit"}
{"nick":"gucci_meow","date":"2017-03-31T03:53:56.428Z","type":"join"}
{"nick":"joyee","reason":"Remote host closed the connection","date":"2017-03-31T03:57:59.432Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-03-31T04:01:08.695Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T04:01:08.908Z","type":"part"}
{"nick":"srl295","message":"Trott: thanks, appreciate. So doesn't have to be a front burner issue yet.","date":"2017-03-31T04:13:33.217Z","type":"message"}
{"nick":"nitpe","reason":"Ping timeout: 240 seconds","date":"2017-03-31T04:34:05.207Z","type":"quit"}
{"nick":"chalker_","date":"2017-03-31T04:55:11.854Z","type":"join"}
{"nick":"joyee","date":"2017-03-31T04:58:31.493Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 268 seconds","date":"2017-03-31T05:03:07.403Z","type":"quit"}
{"nick":"troykelly","reason":"Quit: Farewell. So long. My battery has died...","date":"2017-03-31T05:16:36.014Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-03-31T05:22:33.751Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T05:22:33.929Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-03-31T05:22:57.792Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T05:22:57.969Z","type":"part"}
{"nick":"lpin","date":"2017-03-31T05:47:24.159Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T05:50:01.124Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T05:50:01.340Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-03-31T05:50:31.195Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T05:50:31.372Z","type":"part"}
{"nick":"joyee","date":"2017-03-31T05:56:24.449Z","type":"join"}
{"nick":"alrra","date":"2017-03-31T06:07:00.757Z","type":"join"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2017-03-31T06:21:00.715Z","type":"quit"}
{"nick":"aruns","date":"2017-03-31T06:27:23.154Z","type":"join"}
{"nick":"chalker_","reason":"Ping timeout: 256 seconds","date":"2017-03-31T06:28:59.951Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-03-31T06:29:29.929Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T06:29:30.106Z","type":"part"}
{"nick":"plasmar","reason":"Ping timeout: 246 seconds","date":"2017-03-31T06:33:43.277Z","type":"quit"}
{"nick":"chalker_","date":"2017-03-31T06:51:41.229Z","type":"join"}
{"nick":"gucci_meow","reason":"Remote host closed the connection","date":"2017-03-31T06:55:46.990Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-03-31T08:02:14.559Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T08:02:14.738Z","type":"part"}
{"nick":"joyee","reason":"Remote host closed the connection","date":"2017-03-31T08:04:31.839Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T08:15:58.067Z","type":"join"}
{"nick":"pjelinek","date":"2017-03-31T08:27:23.023Z","type":"join"}
{"nick":"seishun","date":"2017-03-31T08:28:37.021Z","type":"join"}
{"nick":"indistylo","date":"2017-03-31T08:30:22.664Z","type":"join"}
{"nick":"seishun","reason":"Disconnected by services","date":"2017-03-31T08:30:50.636Z","type":"quit"}
{"nick":"seishun","date":"2017-03-31T08:30:56.938Z","type":"join"}
{"nick":"aruns","reason":"Ping timeout: 264 seconds","date":"2017-03-31T08:33:21.891Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-03-31T08:43:09.356Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T08:43:09.533Z","type":"part"}
{"nick":"kkk","date":"2017-03-31T08:44:40.668Z","type":"join"}
{"nick":"kkk","reason":"Ping timeout: 260 seconds","date":"2017-03-31T08:49:19.554Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-03-31T09:28:50.333Z","type":"quit"}
{"nick":"indistylo","reason":"Ping timeout: 240 seconds","date":"2017-03-31T09:35:03.174Z","type":"quit"}
{"nick":"chalker_","reason":"Ping timeout: 246 seconds","date":"2017-03-31T10:15:58.039Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-03-31T10:25:09.700Z","type":"quit"}
{"nick":"mylesborins","date":"2017-03-31T10:25:40.585Z","type":"join"}
{"nick":"onel0p3z","date":"2017-03-31T10:55:47.995Z","type":"join"}
{"nick":"eihabarabia","date":"2017-03-31T10:58:58.979Z","type":"join"}
{"nick":"joyee","reason":"Remote host closed the connection","date":"2017-03-31T11:06:09.211Z","type":"quit"}
{"nick":"KnownSyntax","reason":"Quit: No Ping reply in 180 seconds.","date":"2017-03-31T11:06:52.532Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T11:08:15.806Z","type":"join"}
{"nick":"KnownSyntax","date":"2017-03-31T11:09:17.316Z","type":"join"}
{"nick":"KnownSyntax","reason":"Changing host","date":"2017-03-31T11:09:17.317Z","type":"quit"}
{"nick":"KnownSyntax","date":"2017-03-31T11:09:17.317Z","type":"join"}
{"nick":"seishun","reason":"Disconnected by services","date":"2017-03-31T11:11:51.657Z","type":"quit"}
{"nick":"seishun","date":"2017-03-31T11:11:57.985Z","type":"join"}
{"nick":"al-damiri","date":"2017-03-31T11:12:27.117Z","type":"join"}
{"nick":"joyee","reason":"Remote host closed the connection","date":"2017-03-31T11:14:53.968Z","type":"quit"}
{"nick":"addaleax","reason":"Ping timeout: 264 seconds","date":"2017-03-31T11:23:45.943Z","type":"quit"}
{"nick":"otjura","date":"2017-03-31T11:32:31.555Z","type":"join"}
{"nick":"addaleax","date":"2017-03-31T11:49:05.886Z","type":"join"}
{"nick":"indistylo","date":"2017-03-31T12:10:45.007Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T12:29:47.215Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T12:29:47.393Z","type":"part"}
{"nick":"pjelinek","reason":"Ping timeout: 258 seconds","date":"2017-03-31T12:43:31.811Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-03-31T12:44:51.036Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T12:44:51.214Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-03-31T12:45:36.010Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T12:45:36.224Z","type":"part"}
{"nick":"pjelinek","date":"2017-03-31T12:58:29.827Z","type":"join"}
{"nick":"eihabarabia","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-03-31T12:59:46.587Z","type":"quit"}
{"nick":"otjura","reason":"Quit: Konversation terminated!","date":"2017-03-31T13:18:33.381Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 260 seconds","date":"2017-03-31T13:27:40.828Z","type":"quit"}
{"nick":"troykelly","date":"2017-03-31T13:41:48.621Z","type":"join"}
{"nick":"jasnell","date":"2017-03-31T13:52:58.989Z","type":"join"}
{"nick":"octetcloud","date":"2017-03-31T14:02:18.120Z","type":"join"}
{"nick":"seishun","date":"2017-03-31T14:08:14.581Z","type":"join"}
{"nick":"nacci","date":"2017-03-31T14:12:25.773Z","type":"join"}
{"nick":"doodadjs","date":"2017-03-31T14:15:52.184Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T14:18:09.374Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T14:18:09.557Z","type":"part"}
{"nick":"niketrefenix","date":"2017-03-31T14:24:10.080Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T14:27:26.645Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T14:27:26.646Z","type":"part"}
{"nick":"troykelly","reason":"Quit: Farewell. So long. My battery has died...","date":"2017-03-31T14:47:41.425Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-03-31T14:58:56.229Z","type":"join"}
{"nick":"joyee","date":"2017-03-31T15:01:42.199Z","type":"join"}
{"nick":"Fishrock123","message":"are any of the NAPI people around?","date":"2017-03-31T15:09:55.814Z","type":"message"}
{"nick":"niketrefenix","reason":"Remote host closed the connection","date":"2017-03-31T15:12:41.379Z","type":"quit"}
{"nick":"niketrefenix","date":"2017-03-31T15:13:35.068Z","type":"join"}
{"nick":"pjelinek","reason":"Ping timeout: 258 seconds","date":"2017-03-31T15:22:36.831Z","type":"quit"}
{"nick":"niketrefenix","date":"2017-03-31T15:24:24.028Z","type":"quit"}
{"nick":"troykelly","date":"2017-03-31T15:31:15.269Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 240 seconds","date":"2017-03-31T16:10:33.093Z","type":"quit"}
{"nick":"octetcloud","date":"2017-03-31T16:11:30.279Z","type":"join"}
{"nick":"srl295","date":"2017-03-31T16:17:16.084Z","type":"join"}
{"nick":"xgx","date":"2017-03-31T16:33:59.377Z","type":"join"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2017-03-31T16:46:01.534Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T16:46:30.193Z","type":"join"}
{"nick":"joyee","reason":"Remote host closed the connection","date":"2017-03-31T16:47:10.851Z","type":"quit"}
{"nick":"xgx","reason":"\"Leaving\"","date":"2017-03-31T16:51:03.766Z","type":"part"}
{"nick":"troykelly","reason":"Ping timeout: 260 seconds","date":"2017-03-31T16:55:20.746Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T16:57:06.276Z","type":"join"}
{"nick":"troykelly","date":"2017-03-31T16:58:18.216Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 240 seconds","date":"2017-03-31T17:01:35.232Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-03-31T17:13:52.197Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T17:13:52.424Z","type":"part"}
{"nick":"ndhoule","date":"2017-03-31T17:22:43.237Z","type":"join"}
{"nick":"addaleax","message":"Fishrock123: do I count? :D","date":"2017-03-31T17:26:54.882Z","type":"message"}
{"nick":"Fishrock123","message":"Sure -- although I don't know what I exactly wanted to ask earlier... just playing around with it","date":"2017-03-31T17:27:42.832Z","type":"message"}
{"nick":"addaleax","message":"heh, ok :D","date":"2017-03-31T17:27:54.639Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: symbols are exposed in the binary for everything in node_api.h, right? So you should be able to ffi to it from any language that supports symbol ffi?","date":"2017-03-31T17:29:41.339Z","type":"message"}
{"nick":"addaleax","message":"yes, that should work","date":"2017-03-31T17:30:16.030Z","type":"message"}
{"nick":"addaleax","message":"what do you have in mind? :D","date":"2017-03-31T17:30:19.526Z","type":"message"}
{"nick":"Fishrock123","message":"Rust","date":"2017-03-31T17:31:05.480Z","type":"message"}
{"nick":"Fishrock123","message":":P","date":"2017-03-31T17:31:15.683Z","type":"message"}
{"nick":"addaleax","message":"it might actually be cool if you could start a Node Environment from C/FFI at some point","date":"2017-03-31T17:31:58.434Z","type":"message"}
{"nick":"addaleax","message":"like, make node fully embeddable from any language","date":"2017-03-31T17:32:10.037Z","type":"message"}
{"nick":"Fishrock123","message":"I mean sure neon exists but it should be easy enough to FFI into NAPI directly I think","date":"2017-03-31T17:32:34.190Z","type":"message"}
{"nick":"Fishrock123","message":"hmmm interesting","date":"2017-03-31T17:32:52.294Z","type":"message"}
{"nick":"addaleax","message":"what’s neon?","date":"2017-03-31T17:33:02.370Z","type":"message"}
{"nick":"Fishrock123","message":"maybe then we can really run Javascript in Java","date":"2017-03-31T17:33:10.970Z","type":"message"}
{"nick":"Fishrock123","message":"https://www.npmjs.com/package/neon-cli","date":"2017-03-31T17:33:33.309Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-03-31T17:33:40.219Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T17:33:40.403Z","type":"part"}
{"nick":"addaleax","message":"thanks :) that name doesn’t seem very googlable :D","date":"2017-03-31T17:34:38.586Z","type":"message"}
{"nick":"alrra","reason":"Quit: Connection closed for inactivity","date":"2017-03-31T17:39:05.308Z","type":"quit"}
{"nick":"addaleax","message":"octetcloud: is there a particular reason when you ask people to squash their commits?","date":"2017-03-31T17:40:23.544Z","type":"message"}
{"nick":"troykelly","reason":"Quit: Farewell. So long. My battery has died...","date":"2017-03-31T17:41:09.639Z","type":"quit"}
{"nick":"Fishrock123","message":"what does napi_open_handle_scope do?","date":"2017-03-31T17:43:18.152Z","type":"message"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-03-31T17:43:28.967Z","type":"quit"}
{"nick":"troykelly","date":"2017-03-31T17:43:35.148Z","type":"join"}
{"nick":"addaleax","message":"the same as the v8::HandleScope constructor","date":"2017-03-31T17:43:42.634Z","type":"message"}
{"nick":"addaleax","message":"you don’t strictly need it for most addon code","date":"2017-03-31T17:43:55.834Z","type":"message"}
{"nick":"Fishrock123","message":"I've used it but I have no idea what it actually does XD","date":"2017-03-31T17:44:48.294Z","type":"message"}
{"nick":"Fishrock123","message":"some weird implicit scoping of accessible values or something I think?","date":"2017-03-31T17:45:10.347Z","type":"message"}
{"nick":"addaleax","message":"it’s for when you want to use Local<>s outside of a callback, or when you have a lot of Local<>s whose lifetime you want to restrict to help the GC","date":"2017-03-31T17:45:13.456Z","type":"message"}
{"nick":"Fishrock123","message":"oh","date":"2017-03-31T17:45:24.687Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: what's the difference between napi_call_function and napi_make_callback?","date":"2017-03-31T17:46:04.459Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Connection closed for inactivity","date":"2017-03-31T17:46:18.984Z","type":"quit"}
{"nick":"Fishrock123","message":"Literally just the stuff MakeCallback does?","date":"2017-03-31T17:46:37.858Z","type":"message"}
{"nick":"addaleax","message":"yup","date":"2017-03-31T17:46:41.539Z","type":"message"}
{"nick":"addaleax","message":"it’s just wrappers around Function::Call and node::MakeCallback","date":"2017-03-31T17:46:56.594Z","type":"message"}
{"nick":"Fishrock123","message":"Isn't that stuff like required to prevent other problems?","date":"2017-03-31T17:47:01.711Z","type":"message"}
{"nick":"addaleax","message":"depends on the context? MakeCallback() is only necessary (and most of the time it makes only sense) when there’s no JS stack","date":"2017-03-31T17:48:26.494Z","type":"message"}
{"nick":"addaleax","message":"like, from a libuv callback","date":"2017-03-31T17:48:43.724Z","type":"message"}
{"nick":"indistylo","reason":"Ping timeout: 264 seconds","date":"2017-03-31T17:48:58.100Z","type":"quit"}
{"nick":"Fishrock123","message":"hmmmm","date":"2017-03-31T17:49:17.729Z","type":"message"}
{"nick":"Fishrock123","message":"seems like something that will cause mistakes though, having both","date":"2017-03-31T17:49:33.486Z","type":"message"}
{"nick":"Fishrock123","message":"maybe I'm wrong","date":"2017-03-31T17:49:42.860Z","type":"message"}
{"nick":"addaleax","message":"it definitely will – I very recently fixed that in one of my own addons because 2 years ago I had no idea about the difference :D","date":"2017-03-31T17:50:09.084Z","type":"message"}
{"nick":"addaleax","message":"but, like, the distinction between MakeCallback and Call is already there in C++ anyway","date":"2017-03-31T17:50:24.710Z","type":"message"}
{"nick":"addaleax","message":"we just need to document it better","date":"2017-03-31T17:50:29.532Z","type":"message"}
{"nick":"Fishrock123","message":"hmmm right","date":"2017-03-31T17:50:48.941Z","type":"message"}
{"nick":"Fishrock123","message":"So I _was_ hoping to convert node-weak to NAPI as an experiment, but it seems like there is no NAPI version of NAN_PROPERTY_DELETER or NAN_PROPERTY_SETTER, etc","date":"2017-03-31T17:51:42.379Z","type":"message"}
{"nick":"octetcloud","message":"the distinction is fundamental, it matters whether calls are made with our without a js stack, but it is very subtle, and definitely needs docs","date":"2017-03-31T17:51:49.173Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: there’s something with define_properties or so, does that do what you need?","date":"2017-03-31T17:52:19.630Z","type":"message"}
{"nick":"jasnell","reason":"Ping timeout: 256 seconds","date":"2017-03-31T17:53:31.941Z","type":"quit"}
{"nick":"Fishrock123","message":"addaleax: can you make a C/++ function which is a napi_callback?","date":"2017-03-31T17:53:58.851Z","type":"message"}
{"nick":"Fishrock123","message":"It seemed to me like that was only for setting JS ones but maybe you can just set C/++ ones?","date":"2017-03-31T17:54:27.393Z","type":"message"}
{"nick":"Fishrock123","message":"https://github.com/nodejs/abi-stable-node/blob/api-prototype-8.x/src/node_api.h#L247-L251","date":"2017-03-31T17:54:41.554Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: napi_callbacks are C functions that should be exposed to JS in some way","date":"2017-03-31T17:55:24.062Z","type":"message"}
{"nick":"addaleax","message":"any function that matches void fn_name(napi_env env, napi_callback_info info); is a napi_callback","date":"2017-03-31T17:56:18.475Z","type":"message"}
{"nick":"Fishrock123","message":"What is a JS function passed to the C api then? Also a napi_callback?","date":"2017-03-31T17:56:50.068Z","type":"message"}
{"nick":"addaleax","message":"all JS values are napi_values, there’s no explicit distinction","date":"2017-03-31T17:57:38.376Z","type":"message"}
{"nick":"addaleax","message":"so basically a JS function is a napi_value that doesn’t make napi_call_function() fail when you pass it as the func parameter","date":"2017-03-31T17:58:02.164Z","type":"message"}
{"nick":"Fishrock123","message":"hmmmm insteresting","date":"2017-03-31T17:58:57.711Z","type":"message"}
{"nick":"Fishrock123","message":"kinda odd there is no napi_typeof_function, but perhaps that's just unnecessary","date":"2017-03-31T17:59:37.601Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: what would you expect that to do?","date":"2017-03-31T18:00:17.754Z","type":"message"}
{"nick":"addaleax","message":"you can call napi_typeof() and see if the result is napi_function","date":"2017-03-31T18:00:31.479Z","type":"message"}
{"nick":"Fishrock123","message":"oh hmm","date":"2017-03-31T18:01:34.318Z","type":"message"}
{"nick":"Fishrock123","message":"err, what normal JS value would return napi_external? None?","date":"2017-03-31T18:02:13.694Z","type":"message"}
{"nick":"addaleax","message":"nothing you could create from JS","date":"2017-03-31T18:02:55.934Z","type":"message"}
{"nick":"Fishrock123","message":"/ ES6 types (corresponds to typeof) ... lol","date":"2017-03-31T18:03:25.307Z","type":"message"}
{"nick":"Fishrock123","message":"so any native module that previously had `using namespace v8;` should not need it, right?","date":"2017-03-31T18:05:49.866Z","type":"message"}
{"nick":"joyee","date":"2017-03-31T18:06:37.520Z","type":"join"}
{"nick":"addaleax","message":"not if you use napi, no","date":"2017-03-31T18:06:38.531Z","type":"message"}
{"nick":"addaleax","message":"generally you don’t need any C++ stuff to use it :)","date":"2017-03-31T18:06:47.717Z","type":"message"}
{"nick":"joyee","reason":"Ping timeout: 268 seconds","date":"2017-03-31T18:11:13.536Z","type":"quit"}
{"nick":"addaleax","message":"mylesborins: backporting meeting?","date":"2017-03-31T18:13:08.089Z","type":"message"}
{"nick":"Fishrock123","message":"What would a v8::persistent be in napi?","date":"2017-03-31T18:14:34.827Z","type":"message"}
{"nick":"addaleax","message":"it’s called napi_reference or something like that","date":"2017-03-31T18:14:50.721Z","type":"message"}
{"nick":"Fishrock123","message":"Hmmm ok just wanted to doublecheck","date":"2017-03-31T18:15:01.236Z","type":"message"}
{"nick":"Fishrock123","message":"addaleax: Would you usually pass napi_value* or napi_value? I would assume the pointer since Locals are already pointers?","date":"2017-03-31T18:17:09.476Z","type":"message"}
{"nick":"addaleax","message":"napi_values are already pointers ;)","date":"2017-03-31T18:17:52.552Z","type":"message"}
{"nick":"troykelly","reason":"Quit: Farewell. So long.","date":"2017-03-31T18:18:35.374Z","type":"quit"}
{"nick":"addaleax","message":"so napi_value* is used in the napi parts where you expect napi to fill that value for you","date":"2017-03-31T18:18:40.471Z","type":"message"}
{"nick":"addaleax","message":"or for arrays of napi_values","date":"2017-03-31T18:18:49.643Z","type":"message"}
{"nick":"Fishrock123","message":"Is napi_get_value_external pretty much like GetInternalFieldPointer?","date":"2017-03-31T18:20:42.455Z","type":"message"}
{"nick":"addaleax","message":"not really … it unwraps a v8::External","date":"2017-03-31T18:21:39.920Z","type":"message"}
{"nick":"addaleax","message":"which might actually be implemented on top of GetInternalFieldPointer, i’m not sure","date":"2017-03-31T18:22:21.705Z","type":"message"}
{"nick":"addaleax","message":"but conceptually a v8::External just wraps a single void* and let’s JS pass it around","date":"2017-03-31T18:22:36.327Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-03-31T18:23:19.521Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T18:23:19.705Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-03-31T18:23:29.654Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T18:23:29.838Z","type":"part"}
{"nick":"nitpe","date":"2017-03-31T18:24:11.262Z","type":"join"}
{"nick":"ndhoule","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-03-31T18:24:31.704Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2017-03-31T18:28:16.546Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 260 seconds","date":"2017-03-31T18:40:48.761Z","type":"quit"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2017-03-31T18:48:55.773Z","type":"quit"}
{"nick":"seishun","date":"2017-03-31T18:49:38.356Z","type":"join"}
{"nick":"ndhoule","date":"2017-03-31T18:56:25.536Z","type":"join"}
{"nick":"joyee","date":"2017-03-31T18:58:36.879Z","type":"join"}
{"nick":"olalonde","date":"2017-03-31T19:05:16.298Z","type":"join"}
{"nick":"ndhoule","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-03-31T19:06:42.299Z","type":"quit"}
{"nick":"jasnell","date":"2017-03-31T19:08:50.858Z","type":"join"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2017-03-31T19:09:33.088Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T19:09:45.671Z","type":"join"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2017-03-31T19:20:39.238Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T19:20:59.287Z","type":"join"}
{"nick":"ndhoule","date":"2017-03-31T19:25:17.625Z","type":"join"}
{"nick":"joyee_","date":"2017-03-31T19:33:14.337Z","type":"join"}
{"nick":"ndhoule","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-03-31T19:36:03.227Z","type":"quit"}
{"nick":"joyee","reason":"Ping timeout: 260 seconds","date":"2017-03-31T19:36:20.360Z","type":"quit"}
{"nick":"al-damiri","date":"2017-03-31T19:36:54.212Z","type":"join"}
{"nick":"joyee_","reason":"Read error: Connection reset by peer","date":"2017-03-31T19:43:44.727Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T19:44:14.313Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T19:56:21.316Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T19:56:21.500Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-03-31T20:02:06.152Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T20:02:06.336Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-03-31T20:02:21.980Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T20:02:22.164Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-03-31T20:04:41.134Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T20:04:41.318Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-03-31T20:10:24.202Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T20:10:24.385Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-03-31T20:10:39.734Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T20:10:39.918Z","type":"part"}
{"nick":"bradleymeck","date":"2017-03-31T20:12:19.635Z","type":"join"}
{"nick":"Fishrock123","message":"addaleax: how would I use the void** that https://github.com/nodejs/abi-stable-node/blob/api-prototype-8.x/src/node_api.h#L348-L350 gives me?","date":"2017-03-31T20:17:05.726Z","type":"message"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2017-03-31T20:17:11.376Z","type":"quit"}
{"nick":"joyee_","date":"2017-03-31T20:17:17.347Z","type":"join"}
{"nick":"Fishrock123","message":"Do I just like, punch though it twice or something? lol","date":"2017-03-31T20:17:17.531Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-03-31T20:18:22.338Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T20:18:22.522Z","type":"part"}
{"nick":"addaleax","message":"Fishrock123: The idea is that you have a void* ptr; declared and then call napi_get_value_external(env, value, &ptr)","date":"2017-03-31T20:18:50.306Z","type":"message"}
{"nick":"octetcloud","message":"void* result; get_value(.., &result); struct whatever_it_really_is* real = result;","date":"2017-03-31T20:18:53.978Z","type":"message"}
{"nick":"PuterDude","date":"2017-03-31T20:19:53.987Z","type":"join"}
{"nick":"Fishrock123","message":"I don't see the point but I think I understand how to use it XD","date":"2017-03-31T20:20:18.475Z","type":"message"}
{"nick":"Fishrock123","message":"(now)","date":"2017-03-31T20:20:23.909Z","type":"message"}
{"nick":"addaleax","message":"The point in what exactly? Using a void*? Or why it doesn’t return the value directly? Or something else? ^^","date":"2017-03-31T20:20:54.667Z","type":"message"}
{"nick":"Fishrock123","message":"of accepting a void** instead of just accepting the void* directly","date":"2017-03-31T20:21:19.916Z","type":"message"}
{"nick":"Fishrock123","message":"like you could just pass `result` without the &","date":"2017-03-31T20:21:31.490Z","type":"message"}
{"nick":"Fishrock123","message":"I... think?","date":"2017-03-31T20:21:35.672Z","type":"message"}
{"nick":"addaleax","message":"C is pass-by-value, so using void* would stop napi_get_value_external from being able to actually fill it","date":"2017-03-31T20:22:29.124Z","type":"message"}
{"nick":"Fishrock123","message":"seems strange but ok","date":"2017-03-31T20:23:22.687Z","type":"message"}
{"nick":"seishun","message":"using void* means you'd have to allocate the actual value","date":"2017-03-31T20:23:39.571Z","type":"message"}
{"nick":"seishun","message":"when you do `void* result`, `result` contains some random memory address, and `&result` is the address of that address. After you call `get_value`, it uses that address to change the value of `result`","date":"2017-03-31T20:25:34.738Z","type":"message"}
{"nick":"seishun","message":"and now `result` contains a valid memory address","date":"2017-03-31T20:25:56.503Z","type":"message"}
{"nick":"seishun","message":"does that make it a bit clearer?","date":"2017-03-31T20:26:33.487Z","type":"message"}
{"nick":"Fishrock123","message":"I mean, i think I understand what happens but not why it is necessary :p","date":"2017-03-31T20:27:24.431Z","type":"message"}
{"nick":"joyee_","reason":"Read error: Connection reset by peer","date":"2017-03-31T20:27:25.167Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T20:27:35.330Z","type":"join"}
{"nick":"seishun","message":"if you just passed void*, then get_value wouldn't be able to modify the value of `result`, since it would only have a copy of your random memory address","date":"2017-03-31T20:28:31.466Z","type":"message"}
{"nick":"Fishrock123","message":"oh is this like some copy semantics stuff?","date":"2017-03-31T20:29:50.240Z","type":"message"}
{"nick":"ndhoule","date":"2017-03-31T20:33:24.323Z","type":"join"}
{"nick":"seishun","message":"I don't think the term \"copy semantics\" makes sense for POD types...","date":"2017-03-31T20:34:27.862Z","type":"message"}
{"nick":"onel0p3z","reason":"Quit: onel0p3z","date":"2017-03-31T20:35:31.239Z","type":"quit"}
{"nick":"seishun","message":"since copying a POD type just copies its value byte-by-byte","date":"2017-03-31T20:35:42.243Z","type":"message"}
{"nick":"seishun","message":"but it would be the same thing if instead of void* you had an std::string","date":"2017-03-31T20:38:04.491Z","type":"message"}
{"nick":"seishun","message":"if you just passed the string by value, the function wouldn't be able to modify your local variable","date":"2017-03-31T20:38:18.202Z","type":"message"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2017-03-31T20:38:22.788Z","type":"quit"}
{"nick":"Fishrock123","message":"addaleax: any idea if napi_create_object accepts an \"in\" value for the result to make a copy of? e.g. new Object()?","date":"2017-03-31T20:38:31.511Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: napi_create_object() is basically new Object(), yes … are you talking about a shallow clone?","date":"2017-03-31T20:41:33.167Z","type":"message"}
{"nick":"joyee","date":"2017-03-31T20:41:39.894Z","type":"join"}
{"nick":"Fishrock123","message":"yeah","date":"2017-03-31T20:42:07.632Z","type":"message"}
{"nick":"Fishrock123","message":"well the code was previously doing Nan::New<Object>","date":"2017-03-31T20:42:29.487Z","type":"message"}
{"nick":"Fishrock123","message":"so","date":"2017-03-31T20:42:31.526Z","type":"message"}
{"nick":"addaleax","message":"ok I’ll have to look up what that does","date":"2017-03-31T20:45:07.616Z","type":"message"}
{"nick":"addaleax","message":"are you sure it’s an object clone?","date":"2017-03-31T20:45:17.282Z","type":"message"}
{"nick":"addaleax","message":"Fishrock123: ok, so, it looks like Nan::New does not clone or anything, but instead turns some kind of Persistent handle into a Local handle?","date":"2017-03-31T20:49:11.750Z","type":"message"}
{"nick":"Fishrock123","message":"o_O","date":"2017-03-31T20:50:29.969Z","type":"message"}
{"nick":"Fishrock123","message":"Oh","date":"2017-03-31T20:50:45.957Z","type":"message"}
{"nick":"Fishrock123","message":"Yes that would actually make more sense","date":"2017-03-31T20:50:52.986Z","type":"message"}
{"nick":"Fishrock123","message":"That would mean what I want is napi_get_reference_value","date":"2017-03-31T20:51:17.112Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-03-31T20:51:30.912Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-03-31T20:51:31.095Z","type":"part"}
{"nick":"addaleax","message":"I’d guess so","date":"2017-03-31T20:51:31.954Z","type":"message"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2017-03-31T20:52:13.859Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T20:52:43.693Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 240 seconds","date":"2017-03-31T20:56:35.401Z","type":"quit"}
{"nick":"jasnell","reason":"Ping timeout: 260 seconds","date":"2017-03-31T20:58:00.875Z","type":"quit"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2017-03-31T21:04:16.988Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T21:04:47.221Z","type":"join"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2017-03-31T21:15:45.900Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T21:22:01.564Z","type":"join"}
{"nick":"addaleax","message":"Fishrock123: also, just so you know, I /think/ there are plans to implement Nan on top of napi","date":"2017-03-31T21:27:00.208Z","type":"message"}
{"nick":"Fishrock123","message":"Yeah I heard something about that","date":"2017-03-31T21:27:14.339Z","type":"message"}
{"nick":"Fishrock123","message":"that might be tricky as of the current time :P","date":"2017-03-31T21:27:22.303Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 264 seconds","date":"2017-03-31T21:45:22.199Z","type":"quit"}
{"nick":"ChALkeR","message":"Is it just me or did some fonts on GitHub become smaller?","date":"2017-03-31T22:10:15.823Z","type":"message"}
{"nick":"Fishrock123","message":"is NULL just the C version of nullptr?","date":"2017-03-31T22:17:03.082Z","type":"message"}
{"nick":"addaleax","message":"yes","date":"2017-03-31T22:17:08.301Z","type":"message"}
{"nick":"addaleax","message":"C++ only has nullptr because in C++ NULL originally had to be defined as a plain literal 0","date":"2017-03-31T22:18:30.177Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-03-31T22:30:07.371Z","type":"quit"}
{"nick":"joyee_","date":"2017-03-31T22:38:27.822Z","type":"join"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2017-03-31T22:39:14.035Z","type":"quit"}
{"nick":"joyee_","reason":"Read error: Connection reset by peer","date":"2017-03-31T22:42:57.483Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T22:43:29.364Z","type":"join"}
{"nick":"joyee","reason":"Remote host closed the connection","date":"2017-03-31T22:48:16.079Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T22:53:26.313Z","type":"join"}
{"nick":"ndhoule","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-03-31T22:59:48.673Z","type":"quit"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2017-03-31T23:03:29.495Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T23:04:01.076Z","type":"join"}
{"nick":"joyee_","date":"2017-03-31T23:14:34.342Z","type":"join"}
{"nick":"joyee","reason":"Read error: Connection reset by peer","date":"2017-03-31T23:14:34.754Z","type":"quit"}
{"nick":"joyee_","reason":"Read error: Connection reset by peer","date":"2017-03-31T23:26:52.236Z","type":"quit"}
{"nick":"joyee","date":"2017-03-31T23:27:09.951Z","type":"join"}
{"nick":"joyee","reason":"Remote host closed the connection","date":"2017-03-31T23:29:00.799Z","type":"quit"}
{"nick":"troykelly_","date":"2017-03-31T23:29:08.759Z","type":"join"}
{"nick":"joyee","date":"2017-03-31T23:38:54.176Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 256 seconds","date":"2017-03-31T23:43:44.070Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-03-31T23:43:56.890Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-03-31T23:48:50.708Z","type":"quit"}
{"nick":"troykelly_","reason":"Quit: Farewell. So long. My battery has died...","date":"2017-03-31T23:51:24.493Z","type":"quit"}
{"nick":"nitpe","reason":"Ping timeout: 256 seconds","date":"2017-03-31T23:52:14.180Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-03-31T23:54:50.314Z","type":"join"}
{"nick":"onel0p3z","date":"2017-03-31T23:58:20.161Z","type":"join"}
{"nick":"onel0p3z","reason":"Client Quit","date":"2017-03-31T23:58:30.687Z","type":"quit"}
{"nick":"onel0p3z","date":"2017-03-31T23:58:55.340Z","type":"join"}
