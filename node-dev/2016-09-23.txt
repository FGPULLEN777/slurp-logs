{"nick":"jasnell","date":"2016-09-23T00:00:50.137Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T00:01:00.726Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T00:01:00.909Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T00:01:37.364Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T00:01:37.365Z","type":"part"}
{"nick":"r04r","new_nick":"zz_r04r","date":"2016-09-23T00:03:41.003Z","type":"nick"}
{"nick":"jasnell","reason":"Ping timeout: 248 seconds","date":"2016-09-23T00:05:29.565Z","type":"quit"}
{"nick":"lexonight","date":"2016-09-23T00:13:13.109Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T00:13:15.101Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T00:13:15.284Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T00:14:04.004Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T00:14:04.186Z","type":"part"}
{"nick":"saghul","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-09-23T00:17:40.277Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-09-23T00:35:57.779Z","type":"quit"}
{"nick":"imyller","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2016-09-23T00:40:32.171Z","type":"quit"}
{"nick":"lexonight","reason":"Quit: Page closed","date":"2016-09-23T01:22:20.949Z","type":"quit"}
{"nick":"Lee1092","date":"2016-09-23T01:44:16.749Z","type":"join"}
{"nick":"piscisaureus","date":"2016-09-23T02:02:24.371Z","type":"join"}
{"nick":"piscisaureus","reason":"Client Quit","date":"2016-09-23T02:02:35.562Z","type":"quit"}
{"nick":"Fishrock123","date":"2016-09-23T02:40:47.886Z","type":"join"}
{"nick":"sgimeno","reason":"Ping timeout: 260 seconds","date":"2016-09-23T02:41:05.571Z","type":"quit"}
{"nick":"sgimeno","date":"2016-09-23T02:41:34.692Z","type":"join"}
{"nick":"Fishrock123","reason":"Client Quit","date":"2016-09-23T02:43:54.202Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-09-23T03:14:17.638Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T03:14:17.821Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T03:14:32.615Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T03:14:32.798Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T03:21:44.220Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T03:21:44.402Z","type":"part"}
{"nick":"olalonde","date":"2016-09-23T03:48:56.384Z","type":"join"}
{"nick":"jasnell","date":"2016-09-23T04:11:30.395Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 244 seconds","date":"2016-09-23T04:16:43.088Z","type":"quit"}
{"nick":"thefourtheye","date":"2016-09-23T04:25:19.770Z","type":"join"}
{"nick":"qws-user-1228","reason":"Ping timeout: 250 seconds","date":"2016-09-23T05:06:25.105Z","type":"quit"}
{"nick":"qws-user-1228","date":"2016-09-23T05:14:42.440Z","type":"join"}
{"nick":"qws-user-1228","reason":"Read error: Connection reset by peer","date":"2016-09-23T05:19:06.947Z","type":"quit"}
{"nick":"qws-user-1228","date":"2016-09-23T05:21:08.237Z","type":"join"}
{"nick":"qws-user-1228","reason":"Read error: Connection reset by peer","date":"2016-09-23T05:26:10.297Z","type":"quit"}
{"nick":"qws-user-1228","date":"2016-09-23T05:31:26.952Z","type":"join"}
{"nick":"qws-user-1228","reason":"Read error: Connection reset by peer","date":"2016-09-23T05:35:19.134Z","type":"quit"}
{"nick":"qws-user-1228","date":"2016-09-23T05:35:37.806Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T05:40:32.963Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T05:40:33.146Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T05:41:07.938Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T05:41:08.160Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T05:45:26.941Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T05:45:27.123Z","type":"part"}
{"nick":"lpin","date":"2016-09-23T05:49:15.526Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T05:50:31.940Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T05:50:32.123Z","type":"part"}
{"nick":"dhruv2204","date":"2016-09-23T06:03:33.728Z","type":"join"}
{"nick":"jasnell","date":"2016-09-23T06:13:56.001Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 272 seconds","date":"2016-09-23T06:18:37.720Z","type":"quit"}
{"nick":"fl0w","date":"2016-09-23T07:23:16.281Z","type":"join"}
{"nick":"Lee1092","reason":"Quit: Connection closed for inactivity","date":"2016-09-23T07:24:53.095Z","type":"quit"}
{"nick":"dhruv2204","date":"2016-09-23T07:33:04.753Z","type":"part"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2016-09-23T07:36:14.384Z","type":"quit"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T07:52:53.548Z","type":"quit"}
{"nick":"fl0w","date":"2016-09-23T07:53:32.279Z","type":"join"}
{"nick":"Literphor","reason":"Quit: Literphor","date":"2016-09-23T08:05:54.146Z","type":"quit"}
{"nick":"seishun","date":"2016-09-23T08:22:12.782Z","type":"join"}
{"nick":"saghul","date":"2016-09-23T08:30:11.832Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T08:32:53.651Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T08:32:53.833Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T08:33:33.704Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T08:33:33.887Z","type":"part"}
{"nick":"zz_r04r","new_nick":"r04r","date":"2016-09-23T08:41:02.242Z","type":"nick"}
{"nick":"saghul","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-09-23T08:46:11.796Z","type":"quit"}
{"nick":"imyller","date":"2016-09-23T09:02:06.915Z","type":"join"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T09:23:42.172Z","type":"quit"}
{"nick":"saghul","date":"2016-09-23T09:28:15.972Z","type":"join"}
{"nick":"fl0w","date":"2016-09-23T09:34:22.948Z","type":"join"}
{"nick":"seishun","message":"is there no way to stalk someone's comments on github anymore?","date":"2016-09-23T09:43:01.967Z","type":"message"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T09:49:56.244Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 250 seconds","date":"2016-09-23T09:55:52.998Z","type":"quit"}
{"nick":"seishun","date":"2016-09-23T10:01:42.616Z","type":"join"}
{"nick":"jasnell","date":"2016-09-23T10:17:23.456Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 250 seconds","date":"2016-09-23T10:18:51.020Z","type":"quit"}
{"nick":"jasnell","reason":"Ping timeout: 255 seconds","date":"2016-09-23T10:21:46.151Z","type":"quit"}
{"nick":"olalonde","reason":"Quit: Connection closed for inactivity","date":"2016-09-23T10:40:06.681Z","type":"quit"}
{"nick":"thealphanerd","reason":"Quit: farewell for now","date":"2016-09-23T10:51:24.456Z","type":"quit"}
{"nick":"thealphanerd","date":"2016-09-23T10:51:55.171Z","type":"join"}
{"nick":"fl0w","date":"2016-09-23T10:56:00.934Z","type":"join"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T11:25:56.109Z","type":"quit"}
{"nick":"fl0w","date":"2016-09-23T11:26:46.101Z","type":"join"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T11:53:44.125Z","type":"quit"}
{"nick":"fl0w","date":"2016-09-23T11:54:24.655Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T11:55:39.224Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T11:55:39.444Z","type":"part"}
{"nick":"dumindux","date":"2016-09-23T11:55:55.169Z","type":"join"}
{"nick":"dumindux_","date":"2016-09-23T11:56:00.491Z","type":"join"}
{"nick":"Lee1092","date":"2016-09-23T11:56:12.322Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T11:56:14.236Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T11:56:14.419Z","type":"part"}
{"nick":"jasnell","date":"2016-09-23T12:18:59.118Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T12:19:27.204Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T12:19:27.387Z","type":"part"}
{"nick":"jasnell","reason":"Ping timeout: 248 seconds","date":"2016-09-23T12:23:37.560Z","type":"quit"}
{"nick":"joshontheweb","reason":"Quit: Textual IRC Client: http://www.textualapp.com/","date":"2016-09-23T12:26:48.498Z","type":"quit"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T12:28:03.461Z","type":"quit"}
{"nick":"fl0w","date":"2016-09-23T12:28:50.527Z","type":"join"}
{"nick":"joshontheweb","date":"2016-09-23T12:30:15.083Z","type":"join"}
{"nick":"fl0w","reason":"Client Quit","date":"2016-09-23T12:30:29.862Z","type":"quit"}
{"nick":"seishun","date":"2016-09-23T12:38:01.726Z","type":"join"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-09-23T12:41:36.614Z","type":"quit"}
{"nick":"fl0w","date":"2016-09-23T12:45:04.433Z","type":"join"}
{"nick":"joshontheweb","date":"2016-09-23T12:51:04.417Z","type":"join"}
{"nick":"evanlucas","message":"is it possible to create a SymbolObject in js? Right now, all I'm seeing is doing it in c++","date":"2016-09-23T12:53:00.097Z","type":"message"}
{"nick":"addaleax","message":"new Object(Symbol('asdf'))?","date":"2016-09-23T12:54:56.790Z","type":"message"}
{"nick":"evanlucas","message":"wow","date":"2016-09-23T12:55:14.886Z","type":"message"}
{"nick":"evanlucas","message":"yep","date":"2016-09-23T12:55:16.573Z","type":"message"}
{"nick":"evanlucas","message":"that works","date":"2016-09-23T12:55:17.658Z","type":"message"}
{"nick":"evanlucas","message":"thanks addaleax!!!!!","date":"2016-09-23T12:55:21.803Z","type":"message"}
{"nick":"addaleax","message":"yeah… I know it’s a bit weird ;)","date":"2016-09-23T12:56:27.052Z","type":"message"}
{"nick":"evanlucas","message":"did you just randomly run across that somewhere?","date":"2016-09-23T12:56:49.468Z","type":"message"}
{"nick":"addaleax","message":"mh… I don’t really remember","date":"2016-09-23T12:58:54.878Z","type":"message"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2016-09-23T12:59:56.456Z","type":"nick"}
{"nick":"addaleax","message":"https://github.com/nodejs/node/issues/7639 there it is :)","date":"2016-09-23T13:01:03.040Z","type":"message"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-09-23T13:02:00.504Z","type":"quit"}
{"nick":"addaleax","reason":"Remote host closed the connection","date":"2016-09-23T13:02:57.064Z","type":"quit"}
{"nick":"sgimeno","reason":"Quit: Leaving","date":"2016-09-23T13:02:59.328Z","type":"quit"}
{"nick":"evanlucas","message":"ahhh that makes sense","date":"2016-09-23T13:03:12.163Z","type":"message"}
{"nick":"evanlucas","message":"thanks a bunch :]","date":"2016-09-23T13:03:29.847Z","type":"message"}
{"nick":"addaleax","date":"2016-09-23T13:03:35.914Z","type":"join"}
{"nick":"bradleymeck","date":"2016-09-23T13:19:38.665Z","type":"join"}
{"nick":"dumindux_","reason":"Ping timeout: 240 seconds","date":"2016-09-23T13:24:17.472Z","type":"quit"}
{"nick":"dumindux","reason":"Ping timeout: 255 seconds","date":"2016-09-23T13:24:28.164Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-09-23T13:25:11.437Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-09-23T13:32:57.307Z","type":"join"}
{"nick":"saghul","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2016-09-23T13:36:44.998Z","type":"quit"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-09-23T13:41:14.683Z","type":"quit"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2016-09-23T13:47:27.532Z","type":"nick"}
{"nick":"nodejs-gh","date":"2016-09-23T14:01:42.496Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:01:42.716Z","type":"part"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2016-09-23T14:03:02.608Z","type":"nick"}
{"nick":"jasnell","date":"2016-09-23T14:04:57.754Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:14:06.366Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:14:06.549Z","type":"part"}
{"nick":"ojss","date":"2016-09-23T14:16:59.107Z","type":"join"}
{"nick":"ojss","message":"hey addaleax you there?","date":"2016-09-23T14:17:25.803Z","type":"message"}
{"nick":"addaleax","message":"ojss: yup :)","date":"2016-09-23T14:17:45.270Z","type":"message"}
{"nick":"ojss","message":"oh great!","date":"2016-09-23T14:17:50.766Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T14:17:54.361Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:17:54.543Z","type":"part"}
{"nick":"ojss","message":"I will push the that change right away","date":"2016-09-23T14:18:01.969Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T14:18:04.342Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:18:04.564Z","type":"part"}
{"nick":"ojss","message":"So I open a new PR yes?","date":"2016-09-23T14:18:12.896Z","type":"message"}
{"nick":"imyller","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2016-09-23T14:18:20.325Z","type":"quit"}
{"nick":"ojss","message":"also any test I should write for this kind of thing?","date":"2016-09-23T14:19:05.549Z","type":"message"}
{"nick":"addaleax","message":"yeah, give me a sec","date":"2016-09-23T14:19:22.886Z","type":"message"}
{"nick":"addaleax","message":"there’s something in test-buffer-alloc that checks that this works","date":"2016-09-23T14:19:45.325Z","type":"message"}
{"nick":"addaleax","message":"test-buffer-alloc.js:1078: assert.doesNotThrow(() => Buffer.from({ buffer: arrayBuf }));","date":"2016-09-23T14:20:11.191Z","type":"message"}
{"nick":"addaleax","message":"you’ll probably want something like that in the sharedarraybuffer test file","date":"2016-09-23T14:20:23.538Z","type":"message"}
{"nick":"addaleax","message":"ojss: while you’re at that, it might also be a nice to reorder the entire conditional so that the `'length' in …` check comes first. that is probably a lot more performant in the common case","date":"2016-09-23T14:21:03.333Z","type":"message"}
{"nick":"ojss","message":"addaleax I was thinking of this: assert.strictequal(isSharedArraybuffer(arr1.buffer), true)","date":"2016-09-23T14:21:50.318Z","type":"message"}
{"nick":"ojss","message":"where arr1 = new Uint16Array(sab);","date":"2016-09-23T14:21:59.342Z","type":"message"}
{"nick":"ojss","message":"yeah will do that too","date":"2016-09-23T14:22:13.842Z","type":"message"}
{"nick":"addaleax","message":"mh, but that would already work","date":"2016-09-23T14:22:18.150Z","type":"message"}
{"nick":"addaleax","message":"exactly because `'length' in arr1` is already true","date":"2016-09-23T14:22:32.695Z","type":"message"}
{"nick":"ojss","message":"yeah","date":"2016-09-23T14:22:47.344Z","type":"message"}
{"nick":"addaleax","message":"tbh I’m not sure why the check for `ArrayBuffer`s is there in the first place","date":"2016-09-23T14:22:53.856Z","type":"message"}
{"nick":"addaleax","message":"it’s not a documented part of the API or anything","date":"2016-09-23T14:23:13.852Z","type":"message"}
{"nick":"ojss","message":"i noticed that.","date":"2016-09-23T14:24:18.137Z","type":"message"}
{"nick":"ojss","message":"Buffer.from is already handling an arraybuffer anyway","date":"2016-09-23T14:24:29.936Z","type":"message"}
{"nick":"ojss","message":"I am gonna leave that in there for now and just move around the conditionals","date":"2016-09-23T14:25:13.910Z","type":"message"}
{"nick":"ojss","message":"*the length check","date":"2016-09-23T14:25:34.758Z","type":"message"}
{"nick":"addaleax","message":"yeah… we might just want to remove those extra checks at some point in the future, I guess","date":"2016-09-23T14:26:20.427Z","type":"message"}
{"nick":"ojss","date":"2016-09-23T14:26:21.419Z","type":"part"}
{"nick":"bradleymeck","date":"2016-09-23T14:26:28.483Z","type":"join"}
{"nick":"ojss","date":"2016-09-23T14:26:54.203Z","type":"join"}
{"nick":"ojss","message":"sorry got disconnected","date":"2016-09-23T14:27:21.126Z","type":"message"}
{"nick":"dumindux_","date":"2016-09-23T14:28:14.724Z","type":"join"}
{"nick":"dumindux","date":"2016-09-23T14:28:38.730Z","type":"join"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T14:35:35.516Z","type":"quit"}
{"nick":"ojss","message":"@addaleax I have pushed the change to my fork I will open a PR in a few minutes.","date":"2016-09-23T14:36:42.285Z","type":"message"}
{"nick":"addaleax","message":"ojss: awesome! and don’t worry too much about it, I am pretty sure nobody out there actually makes use of that particular quirk of our API","date":"2016-09-23T14:37:27.079Z","type":"message"}
{"nick":"ojss","message":"haha","date":"2016-09-23T14:37:37.346Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T14:39:01.109Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:39:01.291Z","type":"part"}
{"nick":"ojss","message":"oh wow didnt know there was node bot that did this","date":"2016-09-23T14:39:39.511Z","type":"message"}
{"nick":"ojss","message":"@addaleax as you can see a PR has been opened","date":"2016-09-23T14:40:20.074Z","type":"message"}
{"nick":"addaleax","message":"yes, that’s a github feature you can enable :)","date":"2016-09-23T14:40:36.531Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T14:44:08.170Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:44:08.352Z","type":"part"}
{"nick":"dumindux","reason":"Ping timeout: 272 seconds","date":"2016-09-23T14:45:17.938Z","type":"quit"}
{"nick":"dumindux_","reason":"Ping timeout: 272 seconds","date":"2016-09-23T14:45:17.948Z","type":"quit"}
{"nick":"ojss","message":"@addaleax is this fine: assert.doesNotThrow(() => Buffer.from(arr1));","date":"2016-09-23T14:47:13.658Z","type":"message"}
{"nick":"ojss","message":"arr1 = new Uint16Array(sab);","date":"2016-09-23T14:47:20.704Z","type":"message"}
{"nick":"addaleax","message":"ojss: that’s something different","date":"2016-09-23T14:47:29.134Z","type":"message"}
{"nick":"ojss","message":"no need to do buffer:arr1","date":"2016-09-23T14:47:33.630Z","type":"message"}
{"nick":"ojss","message":"becuase we are checking for arr1.buffer","date":"2016-09-23T14:47:47.414Z","type":"message"}
{"nick":"ojss","message":"in the conditional","date":"2016-09-23T14:47:54.259Z","type":"message"}
{"nick":"addaleax","message":"ojss: we are not, the evaluation doesn’t even get there","date":"2016-09-23T14:48:03.516Z","type":"message"}
{"nick":"addaleax","message":"because it already fulfills `'length' in obj`","date":"2016-09-23T14:48:07.475Z","type":"message"}
{"nick":"addaleax","message":"(which is why this is so _weird_)","date":"2016-09-23T14:49:54.807Z","type":"message"}
{"nick":"ojss","message":"then how about I just delete the ‘length’ property from the arr1 object?","date":"2016-09-23T14:50:05.748Z","type":"message"}
{"nick":"ojss","message":"delete arr1.length?","date":"2016-09-23T14:50:14.419Z","type":"message"}
{"nick":"addaleax","message":"does that work?","date":"2016-09-23T14:50:20.410Z","type":"message"}
{"nick":"ojss","message":"should do it","date":"2016-09-23T14:50:20.648Z","type":"message"}
{"nick":"Literphor","date":"2016-09-23T14:50:43.664Z","type":"join"}
{"nick":"ojss","message":"yeah well we just remove the property ensuring that the other path is taken","date":"2016-09-23T14:50:45.824Z","type":"message"}
{"nick":"addaleax","message":"> 'use strict'; var a = new Uint8Array(10); delete a.length; a.length","date":"2016-09-23T14:51:25.378Z","type":"message"}
{"nick":"addaleax","message":"10","date":"2016-09-23T14:51:26.896Z","type":"message"}
{"nick":"addaleax","message":"it doesn’t seem to be able to delete it","date":"2016-09-23T14:51:48.631Z","type":"message"}
{"nick":"ojss","message":"nope not happening","date":"2016-09-23T14:52:06.895Z","type":"message"}
{"nick":"ojss","message":"shouldnt that actualy work?","date":"2016-09-23T14:52:19.572Z","type":"message"}
{"nick":"addaleax","message":"ojss: the length is inherited from TypedArray.prototype","date":"2016-09-23T14:53:24.844Z","type":"message"}
{"nick":"addaleax","message":"aka Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Object.getPrototypeOf(a)), 'length') !== undefined :P","date":"2016-09-23T14:54:12.774Z","type":"message"}
{"nick":"ojss","message":"wow","date":"2016-09-23T14:55:21.019Z","type":"message"}
{"nick":"ojss","message":"so how should I go about this then","date":"2016-09-23T14:55:28.546Z","type":"message"}
{"nick":"addaleax","message":"I’m afraid the `{ buffer: sab }` thing will have to do","date":"2016-09-23T14:55:54.446Z","type":"message"}
{"nick":"addaleax","message":"there’s probably a reason why it is done that way in test-buffer-alloc.js","date":"2016-09-23T14:56:04.403Z","type":"message"}
{"nick":"ojss","message":"well then there is a lovely I get","date":"2016-09-23T14:57:28.458Z","type":"message"}
{"nick":"dumindux","date":"2016-09-23T14:57:33.572Z","type":"join"}
{"nick":"dumindux_","date":"2016-09-23T14:57:43.563Z","type":"join"}
{"nick":"jasnell","message":"sorry, missing some context: a reason why what does what in what way in test-buffer-alloc.js? :-)","date":"2016-09-23T14:58:15.089Z","type":"message"}
{"nick":"addaleax","message":"jasnell: line 1078, assert.doesNotThrow(() => Buffer.from({ buffer: arrayBuf }));","date":"2016-09-23T14:58:37.234Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T14:58:56.148Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:58:56.328Z","type":"part"}
{"nick":"addaleax","message":"it’s a weird thing but apparently we support that","date":"2016-09-23T14:59:00.278Z","type":"message"}
{"nick":"jasnell","message":"oh.. right.. testing creation from a \"buffer-like\" object","date":"2016-09-23T14:59:01.880Z","type":"message"}
{"nick":"jasnell","message":"yeah, I always thought that was kind of weird, but we can allocate from things that just *look* like Buffers and TypedArrays","date":"2016-09-23T14:59:38.109Z","type":"message"}
{"nick":"ojss","message":"* error I get","date":"2016-09-23T14:59:39.544Z","type":"message"}
{"nick":"jasnell","message":"and Arrays for that matter","date":"2016-09-23T14:59:45.404Z","type":"message"}
{"nick":"jasnell","message":"when/where that decision was made, I don't know, but it does work","date":"2016-09-23T15:00:09.949Z","type":"message"}
{"nick":"ojss","message":"isnt that like C style “i dont care about types” more or less","date":"2016-09-23T15:00:30.015Z","type":"message"}
{"nick":"addaleax","message":"ojss: what kind of error?","date":"2016-09-23T15:00:46.188Z","type":"message"}
{"nick":"jasnell","message":"I need to run for about 30 minutes unfortunately","date":"2016-09-23T15:01:48.404Z","type":"message"}
{"nick":"jasnell","message":"will be back!","date":"2016-09-23T15:01:50.861Z","type":"message"}
{"nick":"ojss","message":"please wait recompiling..","date":"2016-09-23T15:02:34.918Z","type":"message"}
{"nick":"ojss","message":"it was an assertion error","date":"2016-09-23T15:02:44.423Z","type":"message"}
{"nick":"ojss","message":"unwanted execption was caught","date":"2016-09-23T15:02:53.816Z","type":"message"}
{"nick":"ojss","message":"now its passing","date":"2016-09-23T15:03:04.778Z","type":"message"}
{"nick":"ojss","message":"also instead of this: { buffer: sab }` shouldnt it be ‘{buffer: arr1}’?","date":"2016-09-23T15:04:11.917Z","type":"message"}
{"nick":"addaleax","message":"ojss: `obj.buffer` should be what gets passed to `isSharedArrayBuffer()`","date":"2016-09-23T15:04:56.870Z","type":"message"}
{"nick":"addaleax","message":"so I think it should be the former","date":"2016-09-23T15:05:01.737Z","type":"message"}
{"nick":"ojss","message":"okay minor confusion","date":"2016-09-23T15:09:19.565Z","type":"message"}
{"nick":"ojss","message":"we call Buffer.from(arr1.buffer)","date":"2016-09-23T15:09:33.144Z","type":"message"}
{"nick":"ojss","message":"okay?","date":"2016-09-23T15:09:42.553Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T15:09:51.388Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T15:09:51.571Z","type":"part"}
{"nick":"addaleax","message":"that works too, but it’s a different thing","date":"2016-09-23T15:09:55.070Z","type":"message"}
{"nick":"ojss","message":"it fails all checks","date":"2016-09-23T15:09:55.442Z","type":"message"}
{"nick":"ojss","message":"then fromObject(arr1.buffer) gets called","date":"2016-09-23T15:10:09.314Z","type":"message"}
{"nick":"ojss","message":"oh wait I got it sorry","date":"2016-09-23T15:10:34.396Z","type":"message"}
{"nick":"ojss","message":"it should be sab","date":"2016-09-23T15:10:38.479Z","type":"message"}
{"nick":"addaleax","message":"https://github.com/nodejs/node/commit/2a2ec9dbc3375cd1b8be58fb2ed522247474bc20#diff-196d056a936b6d2649721eb639e0442bR106 :)","date":"2016-09-23T15:10:48.736Z","type":"message"}
{"nick":"addaleax","message":"that’s where it gets detected","date":"2016-09-23T15:10:57.231Z","type":"message"}
{"nick":"ojss","message":"yeah exactly!","date":"2016-09-23T15:12:47.520Z","type":"message"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-09-23T15:12:49.486Z","type":"quit"}
{"nick":"ojss","message":"so isnt the later check a little redundant?","date":"2016-09-23T15:13:14.489Z","type":"message"}
{"nick":"addaleax","message":"it’s apparently exactly for things like `{ buffer: someArrayBuffer }`","date":"2016-09-23T15:13:45.250Z","type":"message"}
{"nick":"ojss","message":"even if a sab is passed directly the same condition is gonna catch it","date":"2016-09-23T15:14:13.924Z","type":"message"}
{"nick":"ojss","message":"its just gonna do isSharedBuffer(sab) then return fromArrayBuffer(value, …);","date":"2016-09-23T15:15:38.162Z","type":"message"}
{"nick":"ojss","message":"*SharedArrayBuffer","date":"2016-09-23T15:16:08.799Z","type":"message"}
{"nick":"addaleax","message":"why would it do that when `value === { buffer: someArrayBuffer }`?","date":"2016-09-23T15:16:42.966Z","type":"message"}
{"nick":"ojss_","date":"2016-09-23T15:18:24.013Z","type":"join"}
{"nick":"ojss_","message":"so why do we even need to handle it in fromObject?","date":"2016-09-23T15:19:38.071Z","type":"message"}
{"nick":"ojss","reason":"Ping timeout: 272 seconds","date":"2016-09-23T15:20:45.725Z","type":"quit"}
{"nick":"ojss_","new_nick":"ojss","date":"2016-09-23T15:20:46.721Z","type":"nick"}
{"nick":"addaleax","message":"ojss_ ojss: where else would you like to see it handled?","date":"2016-09-23T15:20:50.058Z","type":"message"}
{"nick":"ojss","message":"addaleax: people generally do Buffer.from(something.buffer);","date":"2016-09-23T15:21:46.948Z","type":"message"}
{"nick":"ojss","message":"where the buffer ends up being a a SharedArrayBuffer","date":"2016-09-23T15:21:59.101Z","type":"message"}
{"nick":"addaleax","message":"ojss: I know that the `{buffer:…}` isn’t something that people typically do, yes :P","date":"2016-09-23T15:22:13.651Z","type":"message"}
{"nick":"ojss","message":"so why are we supporting it ? :|","date":"2016-09-23T15:23:22.320Z","type":"message"}
{"nick":"addaleax","message":"i don’t know. if you want, you can try to look through the history for lib/buffer.js and do some archaeology","date":"2016-09-23T15:24:26.988Z","type":"message"}
{"nick":"addaleax","message":"as jasnell was hinting at, it’s about things that look like Buffers but aren’t really","date":"2016-09-23T15:24:44.295Z","type":"message"}
{"nick":"addaleax","message":"I guess that might be something really historical, like, back from the time when `Buffer`s weren’t built on top of `Uint8Array`s","date":"2016-09-23T15:25:12.752Z","type":"message"}
{"nick":"imyller","date":"2016-09-23T15:26:07.216Z","type":"join"}
{"nick":"ojss","message":"addaleax: well for now I have pushed the test change","date":"2016-09-23T15:27:35.910Z","type":"message"}
{"nick":"addaleax","message":"ojss: thanks! I would probably okay with removing that kind of code path at some point in the future","date":"2016-09-23T15:28:17.623Z","type":"message"}
{"nick":"al-damiri","date":"2016-09-23T15:28:40.770Z","type":"join"}
{"nick":"ojss","message":"addaleax: well that is really weird and would love to find out some more info when I get the time","date":"2016-09-23T15:29:46.345Z","type":"message"}
{"nick":"addaleax","message":"ack, it is really weird.","date":"2016-09-23T15:30:00.156Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-09-23T15:37:00.390Z","type":"quit"}
{"nick":"ojss","message":"addaleax: also about #8569, to be honest its just asking Buffer.from to be more bloated than necessary","date":"2016-09-23T15:38:00.262Z","type":"message"}
{"nick":"ojss","message":"isnt it better to just add a note in the documentation saying its not a strict decoder?","date":"2016-09-23T15:38:49.385Z","type":"message"}
{"nick":"bradleymeck","date":"2016-09-23T15:38:56.916Z","type":"join"}
{"nick":"addaleax","message":"yeah… so, that’s obviously something that’s up for debate. I think I have expressed my point of view, and I don’t want to start a huge argument about that","date":"2016-09-23T15:40:11.973Z","type":"message"}
{"nick":"addaleax","message":"I definitely would be against adding that to `Buffer.from`","date":"2016-09-23T15:40:19.759Z","type":"message"}
{"nick":"addaleax","message":"what I could _maybe_ see happening is a `Buffer.hasEncoding(str, encoding)`","date":"2016-09-23T15:40:40.241Z","type":"message"}
{"nick":"addaleax","message":"that would only make sense for latin1, ascii, base64, hex","date":"2016-09-23T15:40:52.779Z","type":"message"}
{"nick":"Literphor","reason":"Quit: Literphor","date":"2016-09-23T15:40:59.291Z","type":"quit"}
{"nick":"addaleax","message":"base64 should be the most complicated one, as pointed out there, that’s doable in userland","date":"2016-09-23T15:41:17.154Z","type":"message"}
{"nick":"thefourtheye","reason":"Quit: Connection closed for inactivity","date":"2016-09-23T15:41:52.095Z","type":"quit"}
{"nick":"Literphor","date":"2016-09-23T15:48:59.844Z","type":"join"}
{"nick":"jasnell","date":"2016-09-23T15:52:14.344Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T15:54:31.558Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T15:54:31.741Z","type":"part"}
