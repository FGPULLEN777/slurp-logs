{"nick":"jasnell","date":"2016-09-23T00:00:50.137Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T00:01:00.726Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T00:01:00.909Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T00:01:37.364Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T00:01:37.365Z","type":"part"}
{"nick":"r04r","new_nick":"zz_r04r","date":"2016-09-23T00:03:41.003Z","type":"nick"}
{"nick":"jasnell","reason":"Ping timeout: 248 seconds","date":"2016-09-23T00:05:29.565Z","type":"quit"}
{"nick":"lexonight","date":"2016-09-23T00:13:13.109Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T00:13:15.101Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T00:13:15.284Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T00:14:04.004Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T00:14:04.186Z","type":"part"}
{"nick":"saghul","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-09-23T00:17:40.277Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-09-23T00:35:57.779Z","type":"quit"}
{"nick":"imyller","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2016-09-23T00:40:32.171Z","type":"quit"}
{"nick":"lexonight","reason":"Quit: Page closed","date":"2016-09-23T01:22:20.949Z","type":"quit"}
{"nick":"Lee1092","date":"2016-09-23T01:44:16.749Z","type":"join"}
{"nick":"piscisaureus","date":"2016-09-23T02:02:24.371Z","type":"join"}
{"nick":"piscisaureus","reason":"Client Quit","date":"2016-09-23T02:02:35.562Z","type":"quit"}
{"nick":"Fishrock123","date":"2016-09-23T02:40:47.886Z","type":"join"}
{"nick":"sgimeno","reason":"Ping timeout: 260 seconds","date":"2016-09-23T02:41:05.571Z","type":"quit"}
{"nick":"sgimeno","date":"2016-09-23T02:41:34.692Z","type":"join"}
{"nick":"Fishrock123","reason":"Client Quit","date":"2016-09-23T02:43:54.202Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-09-23T03:14:17.638Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T03:14:17.821Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T03:14:32.615Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T03:14:32.798Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T03:21:44.220Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T03:21:44.402Z","type":"part"}
{"nick":"olalonde","date":"2016-09-23T03:48:56.384Z","type":"join"}
{"nick":"jasnell","date":"2016-09-23T04:11:30.395Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 244 seconds","date":"2016-09-23T04:16:43.088Z","type":"quit"}
{"nick":"thefourtheye","date":"2016-09-23T04:25:19.770Z","type":"join"}
{"nick":"qws-user-1228","reason":"Ping timeout: 250 seconds","date":"2016-09-23T05:06:25.105Z","type":"quit"}
{"nick":"qws-user-1228","date":"2016-09-23T05:14:42.440Z","type":"join"}
{"nick":"qws-user-1228","reason":"Read error: Connection reset by peer","date":"2016-09-23T05:19:06.947Z","type":"quit"}
{"nick":"qws-user-1228","date":"2016-09-23T05:21:08.237Z","type":"join"}
{"nick":"qws-user-1228","reason":"Read error: Connection reset by peer","date":"2016-09-23T05:26:10.297Z","type":"quit"}
{"nick":"qws-user-1228","date":"2016-09-23T05:31:26.952Z","type":"join"}
{"nick":"qws-user-1228","reason":"Read error: Connection reset by peer","date":"2016-09-23T05:35:19.134Z","type":"quit"}
{"nick":"qws-user-1228","date":"2016-09-23T05:35:37.806Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T05:40:32.963Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T05:40:33.146Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T05:41:07.938Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T05:41:08.160Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T05:45:26.941Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T05:45:27.123Z","type":"part"}
{"nick":"lpin","date":"2016-09-23T05:49:15.526Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T05:50:31.940Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T05:50:32.123Z","type":"part"}
{"nick":"dhruv2204","date":"2016-09-23T06:03:33.728Z","type":"join"}
{"nick":"jasnell","date":"2016-09-23T06:13:56.001Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 272 seconds","date":"2016-09-23T06:18:37.720Z","type":"quit"}
{"nick":"fl0w","date":"2016-09-23T07:23:16.281Z","type":"join"}
{"nick":"Lee1092","reason":"Quit: Connection closed for inactivity","date":"2016-09-23T07:24:53.095Z","type":"quit"}
{"nick":"dhruv2204","date":"2016-09-23T07:33:04.753Z","type":"part"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2016-09-23T07:36:14.384Z","type":"quit"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T07:52:53.548Z","type":"quit"}
{"nick":"fl0w","date":"2016-09-23T07:53:32.279Z","type":"join"}
{"nick":"Literphor","reason":"Quit: Literphor","date":"2016-09-23T08:05:54.146Z","type":"quit"}
{"nick":"seishun","date":"2016-09-23T08:22:12.782Z","type":"join"}
{"nick":"saghul","date":"2016-09-23T08:30:11.832Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T08:32:53.651Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T08:32:53.833Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T08:33:33.704Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T08:33:33.887Z","type":"part"}
{"nick":"zz_r04r","new_nick":"r04r","date":"2016-09-23T08:41:02.242Z","type":"nick"}
{"nick":"saghul","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-09-23T08:46:11.796Z","type":"quit"}
{"nick":"imyller","date":"2016-09-23T09:02:06.915Z","type":"join"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T09:23:42.172Z","type":"quit"}
{"nick":"saghul","date":"2016-09-23T09:28:15.972Z","type":"join"}
{"nick":"fl0w","date":"2016-09-23T09:34:22.948Z","type":"join"}
{"nick":"seishun","message":"is there no way to stalk someone's comments on github anymore?","date":"2016-09-23T09:43:01.967Z","type":"message"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T09:49:56.244Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 250 seconds","date":"2016-09-23T09:55:52.998Z","type":"quit"}
{"nick":"seishun","date":"2016-09-23T10:01:42.616Z","type":"join"}
{"nick":"jasnell","date":"2016-09-23T10:17:23.456Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 250 seconds","date":"2016-09-23T10:18:51.020Z","type":"quit"}
{"nick":"jasnell","reason":"Ping timeout: 255 seconds","date":"2016-09-23T10:21:46.151Z","type":"quit"}
{"nick":"olalonde","reason":"Quit: Connection closed for inactivity","date":"2016-09-23T10:40:06.681Z","type":"quit"}
{"nick":"thealphanerd","reason":"Quit: farewell for now","date":"2016-09-23T10:51:24.456Z","type":"quit"}
{"nick":"thealphanerd","date":"2016-09-23T10:51:55.171Z","type":"join"}
{"nick":"fl0w","date":"2016-09-23T10:56:00.934Z","type":"join"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T11:25:56.109Z","type":"quit"}
{"nick":"fl0w","date":"2016-09-23T11:26:46.101Z","type":"join"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T11:53:44.125Z","type":"quit"}
{"nick":"fl0w","date":"2016-09-23T11:54:24.655Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T11:55:39.224Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T11:55:39.444Z","type":"part"}
{"nick":"dumindux","date":"2016-09-23T11:55:55.169Z","type":"join"}
{"nick":"dumindux_","date":"2016-09-23T11:56:00.491Z","type":"join"}
{"nick":"Lee1092","date":"2016-09-23T11:56:12.322Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T11:56:14.236Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T11:56:14.419Z","type":"part"}
{"nick":"jasnell","date":"2016-09-23T12:18:59.118Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T12:19:27.204Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T12:19:27.387Z","type":"part"}
{"nick":"jasnell","reason":"Ping timeout: 248 seconds","date":"2016-09-23T12:23:37.560Z","type":"quit"}
{"nick":"joshontheweb","reason":"Quit: Textual IRC Client: http://www.textualapp.com/","date":"2016-09-23T12:26:48.498Z","type":"quit"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T12:28:03.461Z","type":"quit"}
{"nick":"fl0w","date":"2016-09-23T12:28:50.527Z","type":"join"}
{"nick":"joshontheweb","date":"2016-09-23T12:30:15.083Z","type":"join"}
{"nick":"fl0w","reason":"Client Quit","date":"2016-09-23T12:30:29.862Z","type":"quit"}
{"nick":"seishun","date":"2016-09-23T12:38:01.726Z","type":"join"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-09-23T12:41:36.614Z","type":"quit"}
{"nick":"fl0w","date":"2016-09-23T12:45:04.433Z","type":"join"}
{"nick":"joshontheweb","date":"2016-09-23T12:51:04.417Z","type":"join"}
{"nick":"evanlucas","message":"is it possible to create a SymbolObject in js? Right now, all I'm seeing is doing it in c++","date":"2016-09-23T12:53:00.097Z","type":"message"}
{"nick":"addaleax","message":"new Object(Symbol('asdf'))?","date":"2016-09-23T12:54:56.790Z","type":"message"}
{"nick":"evanlucas","message":"wow","date":"2016-09-23T12:55:14.886Z","type":"message"}
{"nick":"evanlucas","message":"yep","date":"2016-09-23T12:55:16.573Z","type":"message"}
{"nick":"evanlucas","message":"that works","date":"2016-09-23T12:55:17.658Z","type":"message"}
{"nick":"evanlucas","message":"thanks addaleax!!!!!","date":"2016-09-23T12:55:21.803Z","type":"message"}
{"nick":"addaleax","message":"yeah… I know it’s a bit weird ;)","date":"2016-09-23T12:56:27.052Z","type":"message"}
{"nick":"evanlucas","message":"did you just randomly run across that somewhere?","date":"2016-09-23T12:56:49.468Z","type":"message"}
{"nick":"addaleax","message":"mh… I don’t really remember","date":"2016-09-23T12:58:54.878Z","type":"message"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2016-09-23T12:59:56.456Z","type":"nick"}
{"nick":"addaleax","message":"https://github.com/nodejs/node/issues/7639 there it is :)","date":"2016-09-23T13:01:03.040Z","type":"message"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-09-23T13:02:00.504Z","type":"quit"}
{"nick":"addaleax","reason":"Remote host closed the connection","date":"2016-09-23T13:02:57.064Z","type":"quit"}
{"nick":"sgimeno","reason":"Quit: Leaving","date":"2016-09-23T13:02:59.328Z","type":"quit"}
{"nick":"evanlucas","message":"ahhh that makes sense","date":"2016-09-23T13:03:12.163Z","type":"message"}
{"nick":"evanlucas","message":"thanks a bunch :]","date":"2016-09-23T13:03:29.847Z","type":"message"}
{"nick":"addaleax","date":"2016-09-23T13:03:35.914Z","type":"join"}
{"nick":"bradleymeck","date":"2016-09-23T13:19:38.665Z","type":"join"}
{"nick":"dumindux_","reason":"Ping timeout: 240 seconds","date":"2016-09-23T13:24:17.472Z","type":"quit"}
{"nick":"dumindux","reason":"Ping timeout: 255 seconds","date":"2016-09-23T13:24:28.164Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-09-23T13:25:11.437Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-09-23T13:32:57.307Z","type":"join"}
{"nick":"saghul","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2016-09-23T13:36:44.998Z","type":"quit"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-09-23T13:41:14.683Z","type":"quit"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2016-09-23T13:47:27.532Z","type":"nick"}
{"nick":"nodejs-gh","date":"2016-09-23T14:01:42.496Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:01:42.716Z","type":"part"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2016-09-23T14:03:02.608Z","type":"nick"}
{"nick":"jasnell","date":"2016-09-23T14:04:57.754Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:14:06.366Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:14:06.549Z","type":"part"}
{"nick":"ojss","date":"2016-09-23T14:16:59.107Z","type":"join"}
{"nick":"ojss","message":"hey addaleax you there?","date":"2016-09-23T14:17:25.803Z","type":"message"}
{"nick":"addaleax","message":"ojss: yup :)","date":"2016-09-23T14:17:45.270Z","type":"message"}
{"nick":"ojss","message":"oh great!","date":"2016-09-23T14:17:50.766Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T14:17:54.361Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:17:54.543Z","type":"part"}
{"nick":"ojss","message":"I will push the that change right away","date":"2016-09-23T14:18:01.969Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T14:18:04.342Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:18:04.564Z","type":"part"}
{"nick":"ojss","message":"So I open a new PR yes?","date":"2016-09-23T14:18:12.896Z","type":"message"}
{"nick":"imyller","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2016-09-23T14:18:20.325Z","type":"quit"}
{"nick":"ojss","message":"also any test I should write for this kind of thing?","date":"2016-09-23T14:19:05.549Z","type":"message"}
{"nick":"addaleax","message":"yeah, give me a sec","date":"2016-09-23T14:19:22.886Z","type":"message"}
{"nick":"addaleax","message":"there’s something in test-buffer-alloc that checks that this works","date":"2016-09-23T14:19:45.325Z","type":"message"}
{"nick":"addaleax","message":"test-buffer-alloc.js:1078: assert.doesNotThrow(() => Buffer.from({ buffer: arrayBuf }));","date":"2016-09-23T14:20:11.191Z","type":"message"}
{"nick":"addaleax","message":"you’ll probably want something like that in the sharedarraybuffer test file","date":"2016-09-23T14:20:23.538Z","type":"message"}
{"nick":"addaleax","message":"ojss: while you’re at that, it might also be a nice to reorder the entire conditional so that the `'length' in …` check comes first. that is probably a lot more performant in the common case","date":"2016-09-23T14:21:03.333Z","type":"message"}
{"nick":"ojss","message":"addaleax I was thinking of this: assert.strictequal(isSharedArraybuffer(arr1.buffer), true)","date":"2016-09-23T14:21:50.318Z","type":"message"}
{"nick":"ojss","message":"where arr1 = new Uint16Array(sab);","date":"2016-09-23T14:21:59.342Z","type":"message"}
{"nick":"ojss","message":"yeah will do that too","date":"2016-09-23T14:22:13.842Z","type":"message"}
{"nick":"addaleax","message":"mh, but that would already work","date":"2016-09-23T14:22:18.150Z","type":"message"}
{"nick":"addaleax","message":"exactly because `'length' in arr1` is already true","date":"2016-09-23T14:22:32.695Z","type":"message"}
{"nick":"ojss","message":"yeah","date":"2016-09-23T14:22:47.344Z","type":"message"}
{"nick":"addaleax","message":"tbh I’m not sure why the check for `ArrayBuffer`s is there in the first place","date":"2016-09-23T14:22:53.856Z","type":"message"}
{"nick":"addaleax","message":"it’s not a documented part of the API or anything","date":"2016-09-23T14:23:13.852Z","type":"message"}
{"nick":"ojss","message":"i noticed that.","date":"2016-09-23T14:24:18.137Z","type":"message"}
{"nick":"ojss","message":"Buffer.from is already handling an arraybuffer anyway","date":"2016-09-23T14:24:29.936Z","type":"message"}
{"nick":"ojss","message":"I am gonna leave that in there for now and just move around the conditionals","date":"2016-09-23T14:25:13.910Z","type":"message"}
{"nick":"ojss","message":"*the length check","date":"2016-09-23T14:25:34.758Z","type":"message"}
{"nick":"addaleax","message":"yeah… we might just want to remove those extra checks at some point in the future, I guess","date":"2016-09-23T14:26:20.427Z","type":"message"}
{"nick":"ojss","date":"2016-09-23T14:26:21.419Z","type":"part"}
{"nick":"bradleymeck","date":"2016-09-23T14:26:28.483Z","type":"join"}
{"nick":"ojss","date":"2016-09-23T14:26:54.203Z","type":"join"}
{"nick":"ojss","message":"sorry got disconnected","date":"2016-09-23T14:27:21.126Z","type":"message"}
{"nick":"dumindux_","date":"2016-09-23T14:28:14.724Z","type":"join"}
{"nick":"dumindux","date":"2016-09-23T14:28:38.730Z","type":"join"}
{"nick":"fl0w","reason":"Quit: fl0w","date":"2016-09-23T14:35:35.516Z","type":"quit"}
{"nick":"ojss","message":"@addaleax I have pushed the change to my fork I will open a PR in a few minutes.","date":"2016-09-23T14:36:42.285Z","type":"message"}
{"nick":"addaleax","message":"ojss: awesome! and don’t worry too much about it, I am pretty sure nobody out there actually makes use of that particular quirk of our API","date":"2016-09-23T14:37:27.079Z","type":"message"}
{"nick":"ojss","message":"haha","date":"2016-09-23T14:37:37.346Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T14:39:01.109Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:39:01.291Z","type":"part"}
{"nick":"ojss","message":"oh wow didnt know there was node bot that did this","date":"2016-09-23T14:39:39.511Z","type":"message"}
{"nick":"ojss","message":"@addaleax as you can see a PR has been opened","date":"2016-09-23T14:40:20.074Z","type":"message"}
{"nick":"addaleax","message":"yes, that’s a github feature you can enable :)","date":"2016-09-23T14:40:36.531Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T14:44:08.170Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:44:08.352Z","type":"part"}
{"nick":"dumindux","reason":"Ping timeout: 272 seconds","date":"2016-09-23T14:45:17.938Z","type":"quit"}
{"nick":"dumindux_","reason":"Ping timeout: 272 seconds","date":"2016-09-23T14:45:17.948Z","type":"quit"}
{"nick":"ojss","message":"@addaleax is this fine: assert.doesNotThrow(() => Buffer.from(arr1));","date":"2016-09-23T14:47:13.658Z","type":"message"}
{"nick":"ojss","message":"arr1 = new Uint16Array(sab);","date":"2016-09-23T14:47:20.704Z","type":"message"}
{"nick":"addaleax","message":"ojss: that’s something different","date":"2016-09-23T14:47:29.134Z","type":"message"}
{"nick":"ojss","message":"no need to do buffer:arr1","date":"2016-09-23T14:47:33.630Z","type":"message"}
{"nick":"ojss","message":"becuase we are checking for arr1.buffer","date":"2016-09-23T14:47:47.414Z","type":"message"}
{"nick":"ojss","message":"in the conditional","date":"2016-09-23T14:47:54.259Z","type":"message"}
{"nick":"addaleax","message":"ojss: we are not, the evaluation doesn’t even get there","date":"2016-09-23T14:48:03.516Z","type":"message"}
{"nick":"addaleax","message":"because it already fulfills `'length' in obj`","date":"2016-09-23T14:48:07.475Z","type":"message"}
{"nick":"addaleax","message":"(which is why this is so _weird_)","date":"2016-09-23T14:49:54.807Z","type":"message"}
{"nick":"ojss","message":"then how about I just delete the ‘length’ property from the arr1 object?","date":"2016-09-23T14:50:05.748Z","type":"message"}
{"nick":"ojss","message":"delete arr1.length?","date":"2016-09-23T14:50:14.419Z","type":"message"}
{"nick":"addaleax","message":"does that work?","date":"2016-09-23T14:50:20.410Z","type":"message"}
{"nick":"ojss","message":"should do it","date":"2016-09-23T14:50:20.648Z","type":"message"}
{"nick":"Literphor","date":"2016-09-23T14:50:43.664Z","type":"join"}
{"nick":"ojss","message":"yeah well we just remove the property ensuring that the other path is taken","date":"2016-09-23T14:50:45.824Z","type":"message"}
{"nick":"addaleax","message":"> 'use strict'; var a = new Uint8Array(10); delete a.length; a.length","date":"2016-09-23T14:51:25.378Z","type":"message"}
{"nick":"addaleax","message":"10","date":"2016-09-23T14:51:26.896Z","type":"message"}
{"nick":"addaleax","message":"it doesn’t seem to be able to delete it","date":"2016-09-23T14:51:48.631Z","type":"message"}
{"nick":"ojss","message":"nope not happening","date":"2016-09-23T14:52:06.895Z","type":"message"}
{"nick":"ojss","message":"shouldnt that actualy work?","date":"2016-09-23T14:52:19.572Z","type":"message"}
{"nick":"addaleax","message":"ojss: the length is inherited from TypedArray.prototype","date":"2016-09-23T14:53:24.844Z","type":"message"}
{"nick":"addaleax","message":"aka Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Object.getPrototypeOf(a)), 'length') !== undefined :P","date":"2016-09-23T14:54:12.774Z","type":"message"}
{"nick":"ojss","message":"wow","date":"2016-09-23T14:55:21.019Z","type":"message"}
{"nick":"ojss","message":"so how should I go about this then","date":"2016-09-23T14:55:28.546Z","type":"message"}
{"nick":"addaleax","message":"I’m afraid the `{ buffer: sab }` thing will have to do","date":"2016-09-23T14:55:54.446Z","type":"message"}
{"nick":"addaleax","message":"there’s probably a reason why it is done that way in test-buffer-alloc.js","date":"2016-09-23T14:56:04.403Z","type":"message"}
{"nick":"ojss","message":"well then there is a lovely I get","date":"2016-09-23T14:57:28.458Z","type":"message"}
{"nick":"dumindux","date":"2016-09-23T14:57:33.572Z","type":"join"}
{"nick":"dumindux_","date":"2016-09-23T14:57:43.563Z","type":"join"}
{"nick":"jasnell","message":"sorry, missing some context: a reason why what does what in what way in test-buffer-alloc.js? :-)","date":"2016-09-23T14:58:15.089Z","type":"message"}
{"nick":"addaleax","message":"jasnell: line 1078, assert.doesNotThrow(() => Buffer.from({ buffer: arrayBuf }));","date":"2016-09-23T14:58:37.234Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T14:58:56.148Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T14:58:56.328Z","type":"part"}
{"nick":"addaleax","message":"it’s a weird thing but apparently we support that","date":"2016-09-23T14:59:00.278Z","type":"message"}
{"nick":"jasnell","message":"oh.. right.. testing creation from a \"buffer-like\" object","date":"2016-09-23T14:59:01.880Z","type":"message"}
{"nick":"jasnell","message":"yeah, I always thought that was kind of weird, but we can allocate from things that just *look* like Buffers and TypedArrays","date":"2016-09-23T14:59:38.109Z","type":"message"}
{"nick":"ojss","message":"* error I get","date":"2016-09-23T14:59:39.544Z","type":"message"}
{"nick":"jasnell","message":"and Arrays for that matter","date":"2016-09-23T14:59:45.404Z","type":"message"}
{"nick":"jasnell","message":"when/where that decision was made, I don't know, but it does work","date":"2016-09-23T15:00:09.949Z","type":"message"}
{"nick":"ojss","message":"isnt that like C style “i dont care about types” more or less","date":"2016-09-23T15:00:30.015Z","type":"message"}
{"nick":"addaleax","message":"ojss: what kind of error?","date":"2016-09-23T15:00:46.188Z","type":"message"}
{"nick":"jasnell","message":"I need to run for about 30 minutes unfortunately","date":"2016-09-23T15:01:48.404Z","type":"message"}
{"nick":"jasnell","message":"will be back!","date":"2016-09-23T15:01:50.861Z","type":"message"}
{"nick":"ojss","message":"please wait recompiling..","date":"2016-09-23T15:02:34.918Z","type":"message"}
{"nick":"ojss","message":"it was an assertion error","date":"2016-09-23T15:02:44.423Z","type":"message"}
{"nick":"ojss","message":"unwanted execption was caught","date":"2016-09-23T15:02:53.816Z","type":"message"}
{"nick":"ojss","message":"now its passing","date":"2016-09-23T15:03:04.778Z","type":"message"}
{"nick":"ojss","message":"also instead of this: { buffer: sab }` shouldnt it be ‘{buffer: arr1}’?","date":"2016-09-23T15:04:11.917Z","type":"message"}
{"nick":"addaleax","message":"ojss: `obj.buffer` should be what gets passed to `isSharedArrayBuffer()`","date":"2016-09-23T15:04:56.870Z","type":"message"}
{"nick":"addaleax","message":"so I think it should be the former","date":"2016-09-23T15:05:01.737Z","type":"message"}
{"nick":"ojss","message":"okay minor confusion","date":"2016-09-23T15:09:19.565Z","type":"message"}
{"nick":"ojss","message":"we call Buffer.from(arr1.buffer)","date":"2016-09-23T15:09:33.144Z","type":"message"}
{"nick":"ojss","message":"okay?","date":"2016-09-23T15:09:42.553Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T15:09:51.388Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T15:09:51.571Z","type":"part"}
{"nick":"addaleax","message":"that works too, but it’s a different thing","date":"2016-09-23T15:09:55.070Z","type":"message"}
{"nick":"ojss","message":"it fails all checks","date":"2016-09-23T15:09:55.442Z","type":"message"}
{"nick":"ojss","message":"then fromObject(arr1.buffer) gets called","date":"2016-09-23T15:10:09.314Z","type":"message"}
{"nick":"ojss","message":"oh wait I got it sorry","date":"2016-09-23T15:10:34.396Z","type":"message"}
{"nick":"ojss","message":"it should be sab","date":"2016-09-23T15:10:38.479Z","type":"message"}
{"nick":"addaleax","message":"https://github.com/nodejs/node/commit/2a2ec9dbc3375cd1b8be58fb2ed522247474bc20#diff-196d056a936b6d2649721eb639e0442bR106 :)","date":"2016-09-23T15:10:48.736Z","type":"message"}
{"nick":"addaleax","message":"that’s where it gets detected","date":"2016-09-23T15:10:57.231Z","type":"message"}
{"nick":"ojss","message":"yeah exactly!","date":"2016-09-23T15:12:47.520Z","type":"message"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-09-23T15:12:49.486Z","type":"quit"}
{"nick":"ojss","message":"so isnt the later check a little redundant?","date":"2016-09-23T15:13:14.489Z","type":"message"}
{"nick":"addaleax","message":"it’s apparently exactly for things like `{ buffer: someArrayBuffer }`","date":"2016-09-23T15:13:45.250Z","type":"message"}
{"nick":"ojss","message":"even if a sab is passed directly the same condition is gonna catch it","date":"2016-09-23T15:14:13.924Z","type":"message"}
{"nick":"ojss","message":"its just gonna do isSharedBuffer(sab) then return fromArrayBuffer(value, …);","date":"2016-09-23T15:15:38.162Z","type":"message"}
{"nick":"ojss","message":"*SharedArrayBuffer","date":"2016-09-23T15:16:08.799Z","type":"message"}
{"nick":"addaleax","message":"why would it do that when `value === { buffer: someArrayBuffer }`?","date":"2016-09-23T15:16:42.966Z","type":"message"}
{"nick":"ojss_","date":"2016-09-23T15:18:24.013Z","type":"join"}
{"nick":"ojss_","message":"so why do we even need to handle it in fromObject?","date":"2016-09-23T15:19:38.071Z","type":"message"}
{"nick":"ojss","reason":"Ping timeout: 272 seconds","date":"2016-09-23T15:20:45.725Z","type":"quit"}
{"nick":"ojss_","new_nick":"ojss","date":"2016-09-23T15:20:46.721Z","type":"nick"}
{"nick":"addaleax","message":"ojss_ ojss: where else would you like to see it handled?","date":"2016-09-23T15:20:50.058Z","type":"message"}
{"nick":"ojss","message":"addaleax: people generally do Buffer.from(something.buffer);","date":"2016-09-23T15:21:46.948Z","type":"message"}
{"nick":"ojss","message":"where the buffer ends up being a a SharedArrayBuffer","date":"2016-09-23T15:21:59.101Z","type":"message"}
{"nick":"addaleax","message":"ojss: I know that the `{buffer:…}` isn’t something that people typically do, yes :P","date":"2016-09-23T15:22:13.651Z","type":"message"}
{"nick":"ojss","message":"so why are we supporting it ? :|","date":"2016-09-23T15:23:22.320Z","type":"message"}
{"nick":"addaleax","message":"i don’t know. if you want, you can try to look through the history for lib/buffer.js and do some archaeology","date":"2016-09-23T15:24:26.988Z","type":"message"}
{"nick":"addaleax","message":"as jasnell was hinting at, it’s about things that look like Buffers but aren’t really","date":"2016-09-23T15:24:44.295Z","type":"message"}
{"nick":"addaleax","message":"I guess that might be something really historical, like, back from the time when `Buffer`s weren’t built on top of `Uint8Array`s","date":"2016-09-23T15:25:12.752Z","type":"message"}
{"nick":"imyller","date":"2016-09-23T15:26:07.216Z","type":"join"}
{"nick":"ojss","message":"addaleax: well for now I have pushed the test change","date":"2016-09-23T15:27:35.910Z","type":"message"}
{"nick":"addaleax","message":"ojss: thanks! I would probably okay with removing that kind of code path at some point in the future","date":"2016-09-23T15:28:17.623Z","type":"message"}
{"nick":"al-damiri","date":"2016-09-23T15:28:40.770Z","type":"join"}
{"nick":"ojss","message":"addaleax: well that is really weird and would love to find out some more info when I get the time","date":"2016-09-23T15:29:46.345Z","type":"message"}
{"nick":"addaleax","message":"ack, it is really weird.","date":"2016-09-23T15:30:00.156Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-09-23T15:37:00.390Z","type":"quit"}
{"nick":"ojss","message":"addaleax: also about #8569, to be honest its just asking Buffer.from to be more bloated than necessary","date":"2016-09-23T15:38:00.262Z","type":"message"}
{"nick":"ojss","message":"isnt it better to just add a note in the documentation saying its not a strict decoder?","date":"2016-09-23T15:38:49.385Z","type":"message"}
{"nick":"bradleymeck","date":"2016-09-23T15:38:56.916Z","type":"join"}
{"nick":"addaleax","message":"yeah… so, that’s obviously something that’s up for debate. I think I have expressed my point of view, and I don’t want to start a huge argument about that","date":"2016-09-23T15:40:11.973Z","type":"message"}
{"nick":"addaleax","message":"I definitely would be against adding that to `Buffer.from`","date":"2016-09-23T15:40:19.759Z","type":"message"}
{"nick":"addaleax","message":"what I could _maybe_ see happening is a `Buffer.hasEncoding(str, encoding)`","date":"2016-09-23T15:40:40.241Z","type":"message"}
{"nick":"addaleax","message":"that would only make sense for latin1, ascii, base64, hex","date":"2016-09-23T15:40:52.779Z","type":"message"}
{"nick":"Literphor","reason":"Quit: Literphor","date":"2016-09-23T15:40:59.291Z","type":"quit"}
{"nick":"addaleax","message":"base64 should be the most complicated one, as pointed out there, that’s doable in userland","date":"2016-09-23T15:41:17.154Z","type":"message"}
{"nick":"thefourtheye","reason":"Quit: Connection closed for inactivity","date":"2016-09-23T15:41:52.095Z","type":"quit"}
{"nick":"Literphor","date":"2016-09-23T15:48:59.844Z","type":"join"}
{"nick":"jasnell","date":"2016-09-23T15:52:14.344Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T15:54:31.558Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T15:54:31.741Z","type":"part"}
{"nick":"trevnorris","message":"addaleax: i believe that would be covered by the icu module api in jasnell's PR https://github.com/nodejs/node/pull/8075","date":"2016-09-23T16:02:05.316Z","type":"message"}
{"nick":"trevnorris","message":"or at least, more easily could be.","date":"2016-09-23T16:02:15.801Z","type":"message"}
{"nick":"addaleax","message":"trevnorris: mhh… that doesn’t sound like something that would care for binary-to-text encodings like hex & base64?","date":"2016-09-23T16:03:48.919Z","type":"message"}
{"nick":"Fishrock123","date":"2016-09-23T16:03:58.932Z","type":"join"}
{"nick":"addaleax","message":"having hasEncoding(buffer, encoding) for character encodings: yes, of course, that would be awesome ;)","date":"2016-09-23T16:04:25.465Z","type":"message"}
{"nick":"Fishrock123","message":"is anyone in here from node-chakracore?","date":"2016-09-23T16:04:44.943Z","type":"message"}
{"nick":"trevnorris","message":"true, though it would also feel redundant to have two locations to decode data, just for different subsets of encodings.","date":"2016-09-23T16:04:48.771Z","type":"message"}
{"nick":"trevnorris","message":"imo","date":"2016-09-23T16:04:59.252Z","type":"message"}
{"nick":"addaleax","message":"hmm. they are quite different conceptually… if you want to, you can weigh in on #8569","date":"2016-09-23T16:06:23.520Z","type":"message"}
{"nick":"addaleax","message":"irc forgets things pretty easily :)","date":"2016-09-23T16:06:36.355Z","type":"message"}
{"nick":"trevnorris","message":"and excuse any ignorant comments. have been away for work or personal reasons for a couple weeks and am just catching up today.","date":"2016-09-23T16:06:41.139Z","type":"message"}
{"nick":"dumindux_","reason":"Ping timeout: 248 seconds","date":"2016-09-23T16:07:05.561Z","type":"quit"}
{"nick":"dumindux","reason":"Ping timeout: 248 seconds","date":"2016-09-23T16:07:05.743Z","type":"quit"}
{"nick":"trevnorris","message":"heh. true. and i'm not disagreeing with you. just that even if we need to implement that for hex/base64 and use icu for the rest, we should create a single api that uses both.","date":"2016-09-23T16:07:26.433Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T16:07:28.666Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T16:07:28.849Z","type":"part"}
{"nick":"addaleax","message":"okay, I think we’re pretty much agreeing ;)","date":"2016-09-23T16:07:43.470Z","type":"message"}
{"nick":"trevnorris","message":"ojss: are you asking about why we check the instanceof for .buffer?","date":"2016-09-23T16:10:29.932Z","type":"message"}
{"nick":"addaleax","message":"trevnorris: this is about the test case in https://github.com/nodejs/node/pull/8739/files","date":"2016-09-23T16:11:18.383Z","type":"message"}
{"nick":"addaleax","message":"actually, you might be *the* person who knows why we support something like Buffer.from({ buffer: arraybuffer })","date":"2016-09-23T16:11:39.275Z","type":"message"}
{"nick":"addaleax","message":"please enlighten us :D","date":"2016-09-23T16:11:50.243Z","type":"message"}
{"nick":"saghul","date":"2016-09-23T16:13:17.156Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-09-23T16:15:29.662Z","type":"quit"}
{"nick":"ojss_","date":"2016-09-23T16:18:46.240Z","type":"join"}
{"nick":"ojss_","message":"trevnorris: not exactly","date":"2016-09-23T16:18:54.117Z","type":"message"}
{"nick":"ojss","reason":"Ping timeout: 250 seconds","date":"2016-09-23T16:20:15.037Z","type":"quit"}
{"nick":"ojss_","new_nick":"ojss","date":"2016-09-23T16:20:15.674Z","type":"nick"}
{"nick":"ojss","message":"trevnorris: who really does this: ‘Buffer.from({buffer: sab})'","date":"2016-09-23T16:22:28.300Z","type":"message"}
{"nick":"ojss","message":":D","date":"2016-09-23T16:22:45.585Z","type":"message"}
{"nick":"trevnorris","message":"as opposed to Buffer.from({buffer: ab})?","date":"2016-09-23T16:23:03.789Z","type":"message"}
{"nick":"seanmcgary","reason":"Quit: Leaving...","date":"2016-09-23T16:24:05.046Z","type":"quit"}
{"nick":"ojss","message":"no as opposed to Buffer.from(arr.buffer) or whatever","date":"2016-09-23T16:24:33.848Z","type":"message"}
{"nick":"ojss","message":"which uses a SharedArrayBuffer or ArrayBuffer","date":"2016-09-23T16:25:09.179Z","type":"message"}
{"nick":"trevnorris","message":"sorry. i mean are you asking why we check .buffer at all?","date":"2016-09-23T16:25:21.217Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T16:27:06.189Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T16:27:06.372Z","type":"part"}
{"nick":"saghul","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-09-23T16:30:35.475Z","type":"quit"}
{"nick":"trevnorris","message":"ojss: passing arr.buffer makes another buffer pointing to the original. passing arr makes a copy of data in it.","date":"2016-09-23T16:33:50.195Z","type":"message"}
{"nick":"trevnorris","message":"also you're forgetting that the start/end on arr != the size of the array buffer it's attached to.","date":"2016-09-23T16:34:27.045Z","type":"message"}
{"nick":"addaleax","message":"trevnorris: maybe it helps to point to code… what is the purpose of the first check in https://github.com/nodejs/node/blob/v6.5.0/lib/buffer.js#L247 ?","date":"2016-09-23T16:34:54.603Z","type":"message"}
{"nick":"addaleax","message":"like, what kind of object would have an .buffer property of type ArrayBuffer but no .length property?","date":"2016-09-23T16:35:28.788Z","type":"message"}
{"nick":"ojss","message":"^ yeah that","date":"2016-09-23T16:36:18.161Z","type":"message"}
{"nick":"trevnorris","message":"Buffer.from({ buffer: new ArrayBuffer(4) }). it's just a sanity check. that's why we have an error after the second conditional.","date":"2016-09-23T16:36:40.964Z","type":"message"}
{"nick":"ojss","message":"also I cant see anyone doing: Buffer.from({buffer: ab}) this in their code.","date":"2016-09-23T16:36:50.806Z","type":"message"}
{"nick":"trevnorris","message":"if they did it would throw. and you'd be surprised at what people manage to do. and not by accident. :P","date":"2016-09-23T16:37:23.894Z","type":"message"}
{"nick":"trevnorris","message":"oh wait..","date":"2016-09-23T16:37:46.123Z","type":"message"}
{"nick":"imyller","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2016-09-23T16:38:49.826Z","type":"quit"}
{"nick":"ojss","message":"?","date":"2016-09-23T16:42:08.042Z","type":"message"}
{"nick":"bradleymeck","date":"2016-09-23T16:44:09.202Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2016-09-23T16:46:18.570Z","type":"quit"}
{"nick":"ojss","message":"trevnorris?","date":"2016-09-23T16:49:46.045Z","type":"message"}
{"nick":"trevnorris","message":"sec. i'm checking current to prev implementation and writing some tests to see if some edge cases changed.","date":"2016-09-23T16:49:52.064Z","type":"message"}
{"nick":"trevnorris","message":"what's happening there is not obvious at all. and has slowly arrived there through several attempts to improve performance.","date":"2016-09-23T16:50:35.215Z","type":"message"}
{"nick":"ojss","message":"okay","date":"2016-09-23T16:51:00.121Z","type":"message"}
{"nick":"trevnorris","message":"addaleax: okay. so it's not that the check was explicitly written to allow { buffer: new ArrayBuffer() }, but the fact that it works didn't matter.","date":"2016-09-23T16:53:57.009Z","type":"message"}
{"nick":"trevnorris","message":"the checks were written to fast path what we do care about, and anything else supported is just a byproduct.","date":"2016-09-23T16:53:57.228Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T16:54:27.244Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T16:54:27.427Z","type":"part"}
{"nick":"ojss","message":"so wait","date":"2016-09-23T16:54:31.320Z","type":"message"}
{"nick":"ojss","message":"what was it written for?","date":"2016-09-23T16:54:47.505Z","type":"message"}
{"nick":"trevnorris","message":"typed arrays and arrays","date":"2016-09-23T16:55:09.198Z","type":"message"}
{"nick":"addaleax","message":"so was `… instanceof ArrayBuffer` actually faster than `'length' in …`?","date":"2016-09-23T16:55:33.192Z","type":"message"}
{"nick":"trevnorris","message":"i'll have to dig through history to figure out why we don't throw when length isn't a number.","date":"2016-09-23T16:55:35.489Z","type":"message"}
{"nick":"trevnorris","message":"addaleax: you mean, why is that check first?","date":"2016-09-23T16:57:05.607Z","type":"message"}
{"nick":"addaleax","message":"yes","date":"2016-09-23T16:57:09.167Z","type":"message"}
{"nick":"addaleax","message":"trevnorris: because what we did in v6.6.0 was replace it with isArrayBuffer(), to account for different sets of builtins in different contexts, which made performance regress ~ -10%","date":"2016-09-23T16:57:55.035Z","type":"message"}
{"nick":"addaleax","message":"(https://github.com/nodejs/node/issues/8733)","date":"2016-09-23T16:58:02.637Z","type":"message"}
{"nick":"ojss","message":"^yeah I read the issue few hours ago","date":"2016-09-23T16:58:25.721Z","type":"message"}
{"nick":"addaleax","message":"ojss: apropos, could you do a comparative benchmark for your PR using the benchmark from my PR?","date":"2016-09-23T16:59:05.028Z","type":"message"}
{"nick":"ojss","message":"can you tell me why a function call is causing the slow down? because we are calling a cpp function?","date":"2016-09-23T16:59:09.859Z","type":"message"}
{"nick":"addaleax","message":"probably, yes. V8 can’t tell what’s going on inside that function, so I guess optimizing that is pretty hard","date":"2016-09-23T16:59:39.346Z","type":"message"}
{"nick":"trevnorris","message":"depends on the call, and relative performance.","date":"2016-09-23T16:59:45.378Z","type":"message"}
{"nick":"ojss","message":"addaleax sure I can do that but will take some time, I have tests coming up next week :|","date":"2016-09-23T17:00:00.994Z","type":"message"}
{"nick":"addaleax","message":"ojss: okay, don’t worry about that, I can do that too :)","date":"2016-09-23T17:00:16.677Z","type":"message"}
{"nick":"trevnorris","message":"calling into cpp from js can be fast, but i believe it also prevents optimizations like inlining.","date":"2016-09-23T17:00:20.793Z","type":"message"}
{"nick":"addaleax","message":"trevnorris: is there something written down about these kinds of things anywhere?","date":"2016-09-23T17:00:49.077Z","type":"message"}
{"nick":"trevnorris","message":"unfortunately no. everything i know comes from experimentation, looking at code, and also ben and indutny","date":"2016-09-23T17:01:48.973Z","type":"message"}
{"nick":"trevnorris","message":"v8 embedder api is poorly documented.","date":"2016-09-23T17:02:12.955Z","type":"message"}
{"nick":"ojss","message":"trevnorris, addaleax in all seriousness shouldnt we write down things like this?","date":"2016-09-23T17:02:15.249Z","type":"message"}
{"nick":"ojss","message":"either as comments or separate files?","date":"2016-09-23T17:02:26.023Z","type":"message"}
{"nick":"addaleax","message":"I think “v8 embedder api is poorly documented.” is a pretty good description of the state of things from their side","date":"2016-09-23T17:02:51.619Z","type":"message"}
{"nick":"addaleax","message":"and, yeah, maybe we should add comments in those places where these considerations are important","date":"2016-09-23T17:03:10.325Z","type":"message"}
{"nick":"trevnorris","message":"ojss: i personally try to make note of these things in my commit messages, b/c keeping the \"one true\" document would be a pain since so much needs to be re-tested every v8 release.","date":"2016-09-23T17:03:17.076Z","type":"message"}
{"nick":"trevnorris","message":"the strange things like, calling into JS and populating an object is faster than using Object::Set(), are things i've just happen to come across.","date":"2016-09-23T17:04:34.498Z","type":"message"}
{"nick":"trevnorris","message":"it does bite","date":"2016-09-23T17:04:36.289Z","type":"message"}
{"nick":"ojss","message":"i see","date":"2016-09-23T17:05:32.250Z","type":"message"}
{"nick":"not-an-aardvark","date":"2016-09-23T17:06:45.328Z","type":"join"}
{"nick":"ojss","message":"trevnorris, addaleax thanks for all the help and the explanation","date":"2016-09-23T17:09:43.166Z","type":"message"}
{"nick":"ojss","message":"if I have anymore quests I will be sure to trouble you. :D","date":"2016-09-23T17:10:01.589Z","type":"message"}
{"nick":"trevnorris","message":"addaleax: the call to isArrayBuffer() itself is very cheap. so the call into cpp itself must be preventing some optimization.","date":"2016-09-23T17:10:10.269Z","type":"message"}
{"nick":"ojss","date":"2016-09-23T17:10:14.378Z","type":"part"}
{"nick":"trevnorris","message":"ojss: np","date":"2016-09-23T17:10:14.561Z","type":"message"}
{"nick":"addaleax","message":"addaleax: yeah, I’ve going to take a look at that anyway after seeing what comes out of https://github.com/nodejs/node/pull/8738","date":"2016-09-23T17:11:03.168Z","type":"message"}
{"nick":"trevnorris","message":"side note: we have isArrayBuffer exposed in v4, but aren't using it. maybe we were but then it was reverted?","date":"2016-09-23T17:12:14.480Z","type":"message"}
{"nick":"addaleax","message":"I guess we can label #8453 lts-watch-v4.x?","date":"2016-09-23T17:13:10.805Z","type":"message"}
{"nick":"saghul","date":"2016-09-23T17:15:05.188Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-09-23T17:19:28.922Z","type":"quit"}
{"nick":"jasnell","date":"2016-09-23T17:23:10.034Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-09-23T17:23:10.942Z","type":"quit"}
{"nick":"jasnell","date":"2016-09-23T17:23:23.518Z","type":"join"}
{"nick":"Literphor","reason":"Quit: Literphor","date":"2016-09-23T17:54:27.779Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-09-23T17:56:01.159Z","type":"join"}
{"nick":"trevnorris","message":"addaleax: fyi if we're putting isArrayBuffer() in .from() then the isArrayBuffer() check in fromArrayBuffer() is superfluous.","date":"2016-09-23T17:58:40.660Z","type":"message"}
{"nick":"addaleax","message":"trevnorris: yes, that was removed along with the change to isArrayBuffer()","date":"2016-09-23T17:59:40.597Z","type":"message"}
{"nick":"addaleax","message":"(https://github.com/nodejs/node/pull/8453)","date":"2016-09-23T17:59:50.293Z","type":"message"}
{"nick":"trevnorris","message":"ah yeah. had the 6.5..0 branch checked out. thanks.","date":"2016-09-23T18:00:19.898Z","type":"message"}
{"nick":"trevnorris","message":"i'm getting massively different graphs for calling Buffer.from(array) between 6.5 and 6.6. narrowing that down.","date":"2016-09-23T18:01:18.846Z","type":"message"}
{"nick":"addaleax","message":"how massively?","date":"2016-09-23T18:01:35.685Z","type":"message"}
{"nick":"trevnorris","message":"45 nodes vs 123 nodes","date":"2016-09-23T18:01:55.001Z","type":"message"}
{"nick":"addaleax","message":"hmm… you’re not comparing master vs 6.5, right?","date":"2016-09-23T18:02:12.914Z","type":"message"}
{"nick":"addaleax","message":"that’s about the drop that I got for the V8 5.4 update","date":"2016-09-23T18:02:21.432Z","type":"message"}
{"nick":"trevnorris","message":"building now. will confirm.","date":"2016-09-23T18:02:41.913Z","type":"message"}
{"nick":"trevnorris","message":"addaleax: confirmed. the call graph for 6.5 has 45 nodes. 6.6 has 123 nodes","date":"2016-09-23T18:04:58.243Z","type":"message"}
{"nick":"addaleax","message":"uh, okay, we’re looking at different things :D","date":"2016-09-23T18:05:40.218Z","type":"message"}
{"nick":"trevnorris","message":"sorry. i'm talking about the irhydra graph","date":"2016-09-23T18:06:29.746Z","type":"message"}
{"nick":"addaleax","message":"yeah, nothing i’ve got experience with. but i’m glad somebody’s taking a look!","date":"2016-09-23T18:06:57.059Z","type":"message"}
{"nick":"trevnorris","message":"addaleax: i assume there was a v8 upgrade between 6.5 and 6.6?","date":"2016-09-23T18:07:11.441Z","type":"message"}
{"nick":"lpin","message":"yup","date":"2016-09-23T18:07:25.780Z","type":"message"}
{"nick":"addaleax","message":"um… I don’t think so","date":"2016-09-23T18:07:39.976Z","type":"message"}
{"nick":"not-an-aardvark","message":"There was? I thought the update to v8 5.4 was on master","date":"2016-09-23T18:07:44.200Z","type":"message"}
{"nick":"addaleax","message":"we did the V8 5.1 upgrade in 6.5","date":"2016-09-23T18:07:44.933Z","type":"message"}
{"nick":"lpin","message":"oh sorry","date":"2016-09-23T18:07:49.945Z","type":"message"}
{"nick":"addaleax","message":"but yes, I’m talking about V8 5.4 on master","date":"2016-09-23T18:07:52.738Z","type":"message"}
{"nick":"lpin","message":"my bad :)","date":"2016-09-23T18:07:56.508Z","type":"message"}
{"nick":"trevnorris","message":"i have a build of 6.5 w/ the buffer changes and not seeing the issue.","date":"2016-09-23T18:08:03.476Z","type":"message"}
{"nick":"addaleax","message":"which kills Buffer.from() performance by more than -50 %","date":"2016-09-23T18:08:16.806Z","type":"message"}
{"nick":"trevnorris","message":"the Buffer.from(array) performance thing is not from isArrayBuffer()","date":"2016-09-23T18:08:19.939Z","type":"message"}
{"nick":"addaleax","message":"that’s good, too","date":"2016-09-23T18:08:25.380Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T18:08:34.353Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T18:08:34.536Z","type":"part"}
{"nick":"trevnorris","message":"wait. on master?","date":"2016-09-23T18:08:40.454Z","type":"message"}
{"nick":"trevnorris","message":"(the -50%)","date":"2016-09-23T18:08:46.978Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T18:08:59.389Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T18:08:59.572Z","type":"part"}
{"nick":"addaleax","message":"trevnorris: yeah. the V8 5.4 update that’s going into the V7 betas","date":"2016-09-23T18:09:05.093Z","type":"message"}
{"nick":"trevnorris","message":"whoa. nasty.","date":"2016-09-23T18:09:12.251Z","type":"message"}
{"nick":"trevnorris","message":"indutny: you around?","date":"2016-09-23T18:09:16.264Z","type":"message"}
{"nick":"addaleax","message":"that’s distinct from what CurryKitten reported","date":"2016-09-23T18:09:16.447Z","type":"message"}
{"nick":"trevnorris","message":"hah. haven't heard of that.","date":"2016-09-23T18:09:28.890Z","type":"message"}
{"nick":"addaleax","message":"so, yeah, two different things, one 6.5 -> 6.6 and one 6.x -> master","date":"2016-09-23T18:11:41.758Z","type":"message"}
{"nick":"trevnorris","message":"addaleax: managed to get back all the perf regression for 6.5 -> 6.6","date":"2016-09-23T18:19:18.487Z","type":"message"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2016-09-23T18:24:49.604Z","type":"quit"}
{"nick":"indutny","message":"trevnorris: yeah","date":"2016-09-23T18:27:45.100Z","type":"message"}
{"nick":"indutny","message":"trevnorris: what's up?","date":"2016-09-23T18:27:49.845Z","type":"message"}
{"nick":"trevnorris","message":"indutny: oh. just noticed that IRHydra is showing very different graphs when calling Buffer.from() between 6.5.0 and 6.6.0 and wanted your thoughts.","date":"2016-09-23T18:28:57.996Z","type":"message"}
{"nick":"trevnorris","message":"in 6.5.0 i see 31 code blocks in the graph, and 181 code block in 6.6.0.","date":"2016-09-23T18:28:58.178Z","type":"message"}
{"nick":"indutny","message":"I guess more branching","date":"2016-09-23T18:29:11.861Z","type":"message"}
{"nick":"indutny","message":"is it compiled with turbofan?","date":"2016-09-23T18:29:19.444Z","type":"message"}
{"nick":"indutny","message":"try running it with --no_turbo","date":"2016-09-23T18:29:47.115Z","type":"message"}
{"nick":"trevnorris","message":"okay","date":"2016-09-23T18:29:51.442Z","type":"message"}
{"nick":"indutny","message":";)","date":"2016-09-23T18:29:53.454Z","type":"message"}
{"nick":"trevnorris","message":"indutny: also, what's the command to print out the assembly for each function?","date":"2016-09-23T18:30:38.126Z","type":"message"}
{"nick":"indutny","message":"--print-opt-code --code-comments","date":"2016-09-23T18:30:46.520Z","type":"message"}
{"nick":"trevnorris","message":"thanks. and nope. graph is still huge.","date":"2016-09-23T18:31:08.340Z","type":"message"}
{"nick":"indutny","message":":(","date":"2016-09-23T18:31:53.527Z","type":"message"}
{"nick":"trevnorris","message":"indutny: 6.5, instruction size is 642. 6.6 is 5508. maybe i'll just need to bisect this","date":"2016-09-23T18:35:20.682Z","type":"message"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2016-09-23T18:37:28.186Z","type":"nick"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2016-09-23T18:37:31.274Z","type":"nick"}
{"nick":"indutny","message":"trevnorris: could you gist it, please?","date":"2016-09-23T18:45:24.583Z","type":"message"}
{"nick":"indutny","message":"both of them","date":"2016-09-23T18:45:32.456Z","type":"message"}
{"nick":"trevnorris","message":"sure thing.","date":"2016-09-23T18:46:01.830Z","type":"message"}
{"nick":"trevnorris","message":"indutny: https://gist.github.com/trevnorris/c28959d1b47f9af8cc2f258b368f1319","date":"2016-09-23T18:47:02.488Z","type":"message"}
{"nick":"trevnorris","message":"you probably want name = Buffer.from","date":"2016-09-23T18:47:07.536Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T18:50:21.392Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T18:50:21.575Z","type":"part"}
{"nick":"evanlucas","reason":"Remote host closed the connection","date":"2016-09-23T18:59:32.582Z","type":"quit"}
{"nick":"evanlucas","date":"2016-09-23T18:59:58.969Z","type":"join"}
{"nick":"trevnorris","message":"hm. the offending commit is 6e3db28. strange that it didn't replicate the exact same on top of v6.5.","date":"2016-09-23T19:00:13.325Z","type":"message"}
{"nick":"evanlucas","reason":"Remote host closed the connection","date":"2016-09-23T19:01:47.707Z","type":"quit"}
{"nick":"evanlucas","date":"2016-09-23T19:02:05.558Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-09-23T19:07:03.530Z","type":"quit"}
{"nick":"jasnell","date":"2016-09-23T19:07:38.773Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T19:07:47.391Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T19:07:47.574Z","type":"part"}
{"nick":"jasnell","reason":"Ping timeout: 272 seconds","date":"2016-09-23T19:12:33.762Z","type":"quit"}
{"nick":"trevnorris","message":"indutny: i've confirmed that by only chaning the following in lib/buffer.js it causes that change in output:","date":"2016-09-23T19:19:18.983Z","type":"message"}
{"nick":"trevnorris","message":"-    if (obj.buffer instanceof ArrayBuffer || 'length' in obj) {","date":"2016-09-23T19:19:19.212Z","type":"message"}
{"nick":"trevnorris","message":"+    if (isArrayBuffer(obj) || 'length' in obj) {","date":"2016-09-23T19:19:19.395Z","type":"message"}
{"nick":"trevnorris","message":"going to confirm it does the same on 6.5. b/c swear earlier it didn't.","date":"2016-09-23T19:20:30.187Z","type":"message"}
{"nick":"addaleax","reason":"Ping timeout: 265 seconds","date":"2016-09-23T19:23:03.957Z","type":"quit"}
{"nick":"trevnorris","message":"must have not built with the right file. the issue is still happening.","date":"2016-09-23T19:24:49.747Z","type":"message"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2016-09-23T19:30:31.546Z","type":"nick"}
{"nick":"saghul","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-09-23T19:32:10.562Z","type":"quit"}
{"nick":"Lee1092","reason":"Quit: Connection closed for inactivity","date":"2016-09-23T19:34:53.873Z","type":"quit"}
{"nick":"imyller","date":"2016-09-23T19:46:28.964Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-09-23T19:59:59.949Z","type":"quit"}
{"nick":"seishun","reason":"Disconnected by services","date":"2016-09-23T20:03:09.150Z","type":"quit"}
{"nick":"seishun","date":"2016-09-23T20:03:15.905Z","type":"join"}
{"nick":"indutny","message":"fun","date":"2016-09-23T20:04:15.288Z","type":"message"}
{"nick":"indutny","message":"trevnorris: wild guess","date":"2016-09-23T20:07:45.259Z","type":"message"}
{"nick":"indutny","message":"trevnorris: const isArrayBuffer = ...?","date":"2016-09-23T20:07:49.644Z","type":"message"}
{"nick":"indutny","message":"instead of { isArrayBuffer }","date":"2016-09-23T20:07:54.054Z","type":"message"}
{"nick":"indutny","message":"trevnorris: how do you benchmark it?","date":"2016-09-23T20:08:05.844Z","type":"message"}
{"nick":"indutny","message":"trevnorris: do you have  a script?","date":"2016-09-23T20:08:09.202Z","type":"message"}
{"nick":"jasnell","date":"2016-09-23T20:08:20.638Z","type":"join"}
{"nick":"Trott","message":"Somebody somewhere at some time made an npm package or something that installs the required Windows dependencies for building node. (Right?) Does anyone know the package name? Or if I'm totally wrong about that?","date":"2016-09-23T20:10:07.640Z","type":"message"}
{"nick":"jasnell","reason":"Ping timeout: 255 seconds","date":"2016-09-23T20:13:04.189Z","type":"quit"}
{"nick":"imyller","reason":"Quit: My iMac has gone to sleep. ZZZzzz…","date":"2016-09-23T20:14:59.392Z","type":"quit"}
{"nick":"indutny","message":"trevnorris: doesn't seem to help much","date":"2016-09-23T20:18:51.272Z","type":"message"}
{"nick":"chrisdickinson","message":"Fishrock123: ping!","date":"2016-09-23T20:19:27.937Z","type":"message"}
{"nick":"indutny","message":"trevnorris: oh, actually","date":"2016-09-23T20:20:27.704Z","type":"message"}
{"nick":"indutny","message":"trevnorris: not sure why, but I'm getting like 400 lines of assembly","date":"2016-09-23T20:21:55.961Z","type":"message"}
{"nick":"indutny","message":"trevnorris: from","date":"2016-09-23T20:22:10.919Z","type":"message"}
{"nick":"indutny","message":"for (let i = 0; i < 1e6; i++)","date":"2016-09-23T20:22:11.740Z","type":"message"}
{"nick":"indutny","message":"  Buffer.from('acde', 'hex');","date":"2016-09-23T20:22:11.922Z","type":"message"}
{"nick":"targos","date":"2016-09-23T20:24:20.943Z","type":"join"}
{"nick":"indutny","message":"trevnorris: so, it seems to be happening in inlined `fromObject`","date":"2016-09-23T20:30:12.666Z","type":"message"}
{"nick":"targos","message":"indutny: are you investigating the Buffer.from regression ?","date":"2016-09-23T20:31:06.437Z","type":"message"}
{"nick":"indutny","message":"targos: yep","date":"2016-09-23T20:31:12.610Z","type":"message"}
{"nick":"targos","message":"I found the cause","date":"2016-09-23T20:31:17.670Z","type":"message"}
{"nick":"targos","message":"supposedly","date":"2016-09-23T20:31:27.358Z","type":"message"}
{"nick":"indutny","message":"targos: what was it?","date":"2016-09-23T20:31:31.933Z","type":"message"}
{"nick":"addaleax","date":"2016-09-23T20:31:32.116Z","type":"join"}
{"nick":"targos","message":"I found with irhydra that somehow an ArrayIterator is created","date":"2016-09-23T20:32:30.895Z","type":"message"}
{"nick":"targos","message":"So I hacked v8's source to get the following trace:","date":"2016-09-23T20:32:56.170Z","type":"message"}
{"nick":"bengl","message":"Trott: i think this might be it https://www.npmjs.com/package/windows-build-tools","date":"2016-09-23T20:33:03.245Z","type":"message"}
{"nick":"targos","message":"Trace: test","date":"2016-09-23T20:33:04.674Z","type":"message"}
{"nick":"targos","message":"    at ArrayIterator.next (native)","date":"2016-09-23T20:33:04.856Z","type":"message"}
{"nick":"targos","message":"    at FastBuffer (buffer.js:9:1)","date":"2016-09-23T20:33:05.293Z","type":"message"}
{"nick":"targos","message":"    at allocate (buffer.js:190:13)","date":"2016-09-23T20:33:05.476Z","type":"message"}
{"nick":"targos","message":"    at fromArrayLike (buffer.js:230:13)","date":"2016-09-23T20:33:07.237Z","type":"message"}
{"nick":"targos","message":"    at fromObject (buffer.js:272:14)","date":"2016-09-23T20:33:07.420Z","type":"message"}
{"nick":"targos","message":"    at Function.Buffer.from (buffer.js:112:10)","date":"2016-09-23T20:33:09.301Z","type":"message"}
{"nick":"Trott","message":"bengl: 👍","date":"2016-09-23T20:33:29.272Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2016-09-23T20:33:35.527Z","type":"message"}
{"nick":"indutny","message":"targos: that's the issue!","date":"2016-09-23T20:33:40.854Z","type":"message"}
{"nick":"indutny","message":"cool","date":"2016-09-23T20:33:41.752Z","type":"message"}
{"nick":"targos","message":"it is the call to : new FastBuffer(allocPool, poolOffset, actual);","date":"2016-09-23T20:34:16.627Z","type":"message"}
{"nick":"targos","message":"I don't get why the TypedArray constructor creates an iterator","date":"2016-09-23T20:34:46.265Z","type":"message"}
{"nick":"targos","message":"Is it in the spec L","date":"2016-09-23T20:34:51.484Z","type":"message"}
{"nick":"Fishrock123","message":"chrisdickinson: oh sorry didn't see here","date":"2016-09-23T20:37:34.705Z","type":"message"}
{"nick":"Fishrock123","message":"chrisdickinson: still here? what's up?","date":"2016-09-23T20:37:39.572Z","type":"message"}
{"nick":"chrisdickinson","message":"ah! I took it to the issue tracker — I was just wondering where the undefined behavior seeped in in the ESM -> NCJS -> ESM eval","date":"2016-09-23T20:38:12.997Z","type":"message"}
{"nick":"chrisdickinson","message":"(that is, it seemed like given `import()`'s intended availability in the Script and Module targets, the NCJS require evaluation would happen in the ESM evaluate phase, and all subsequent ESM evals would happen after the current ESM tree)","date":"2016-09-23T20:39:17.965Z","type":"message"}
{"nick":"Fishrock123","message":"ok maybe poor wording","date":"2016-09-23T20:39:27.321Z","type":"message"}
{"nick":"Fishrock123","message":"but","date":"2016-09-23T20:39:28.181Z","type":"message"}
{"nick":"targos","message":"indutny: I'm compiling with V8 master to see if the issue is still there","date":"2016-09-23T20:40:02.027Z","type":"message"}
{"nick":"Fishrock123","message":"I feel it is undefined in the fact that doign an esm import from an eval from a previous esm import seems to be undefined / unspecified","date":"2016-09-23T20:40:03.898Z","type":"message"}
{"nick":"Fishrock123","message":"that may change with import()","date":"2016-09-23T20:40:09.249Z","type":"message"}
{"nick":"indutny","message":"targos: k","date":"2016-09-23T20:40:09.432Z","type":"message"}
{"nick":"Fishrock123","message":"chrisdickinson: make any sense?","date":"2016-09-23T20:46:13.165Z","type":"message"}
{"nick":"Fishrock123","message":"tl;dr: doign a ESM resolve from something that has already eval'd... is like concept breaking-ish","date":"2016-09-23T20:47:00.589Z","type":"message"}
{"nick":"chrisdickinson","message":"it seems like it'd be defined to evaluate after the current tick — I wonder how browsers handle this?","date":"2016-09-23T20:48:35.146Z","type":"message"}
{"nick":"chrisdickinson","message":"(assuming one can fake one's away around the lack of `import()` by adding a <script type=\"module\"> to the DOM during an ESM eval)","date":"2016-09-23T20:49:08.464Z","type":"message"}
{"nick":"Fishrock123","message":"chrisdickinson: that... is a very good question","date":"2016-09-23T20:51:21.270Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T20:56:15.998Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T20:56:16.180Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T20:57:16.017Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T20:57:16.200Z","type":"part"}
{"nick":"targos","message":"indutny: same on V8 master","date":"2016-09-23T21:01:09.299Z","type":"message"}
{"nick":"targos","message":"I suppose we should open an issue upstream ? Unless you have an idea about what's happening ?","date":"2016-09-23T21:01:36.389Z","type":"message"}
{"nick":"trevnorris","message":"targos: can that explain why swapping \"obj.buffer instanceof ArrayBuffer\" for \"isArrayBuffer(obj.buffer)\" adds a few hundred lines of assembly?","date":"2016-09-23T21:05:36.613Z","type":"message"}
{"nick":"trevnorris","message":"i assume you saw the difference in graph size in irhydra. for me Buffer.from went from 31 node to 181 nodes.","date":"2016-09-23T21:06:16.549Z","type":"message"}
{"nick":"trevnorris","message":"honestly we should native-ize copying the memory from a typed array. instead of using the for loop.","date":"2016-09-23T21:07:30.003Z","type":"message"}
{"nick":"imyller","date":"2016-09-23T21:12:24.672Z","type":"join"}
{"nick":"indutny","message":"trevnorris: well, that's normal","date":"2016-09-23T21:17:26.121Z","type":"message"}
{"nick":"indutny","message":"trevnorris: it adds few branches, few deopts","date":"2016-09-23T21:17:32.203Z","type":"message"}
{"nick":"indutny","message":"trevnorris: to check that `isArrayBuffer` is actually the same function as declared","date":"2016-09-23T21:17:48.549Z","type":"message"}
{"nick":"indutny","message":"trevnorris: not sure why it is needed, but I guess there is some reason for it","date":"2016-09-23T21:17:54.878Z","type":"message"}
{"nick":"trevnorris","message":"indutny: but it's not just a few. it's more than triple the size.","date":"2016-09-23T21:18:18.675Z","type":"message"}
{"nick":"addaleax","message":"trevnorris: do you have a gist or something with the different disassembly outputs?","date":"2016-09-23T21:18:52.680Z","type":"message"}
{"nick":"trevnorris","message":"addaleax: here's the assembly: https://gist.github.com/trevnorris/c28959d1b47f9af8cc2f258b368f1319","date":"2016-09-23T21:19:11.928Z","type":"message"}
{"nick":"trevnorris","message":"let me take a screenshot of the graphs.","date":"2016-09-23T21:19:17.669Z","type":"message"}
{"nick":"targos","message":"with the master branch the graph for my test has 92 nodes","date":"2016-09-23T21:19:42.436Z","type":"message"}
{"nick":"targos","message":"86 if I replace isArrayBuffer with instanceof","date":"2016-09-23T21:19:53.673Z","type":"message"}
{"nick":"fl0w","date":"2016-09-23T21:20:24.148Z","type":"join"}
{"nick":"fl0w","reason":"Client Quit","date":"2016-09-23T21:20:24.555Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-09-23T21:21:17.348Z","type":"join"}
{"nick":"trevnorris","message":"i've been comparing v6.5 to v6.6","date":"2016-09-23T21:21:31.677Z","type":"message"}
{"nick":"targos","message":"There is clearly a bug in V8","date":"2016-09-23T21:22:46.235Z","type":"message"}
{"nick":"targos","message":"if I do \"Array.prototype[Symbol.iterator]  = null;\" the new FastBuffer call fails","date":"2016-09-23T21:23:22.381Z","type":"message"}
{"nick":"addaleax","message":"targos: just to be sure we’re on the same page, trevnorris is looking at a regression from v6.5 to v6.6, not the V8 5.4 thing","date":"2016-09-23T21:23:33.372Z","type":"message"}
{"nick":"indutny","message":"targos: funny thing","date":"2016-09-23T21:26:39.933Z","type":"message"}
{"nick":"indutny","message":"targos: Array.from uses iterators","date":"2016-09-23T21:26:46.190Z","type":"message"}
{"nick":"indutny","message":"targos: wait wait wai","date":"2016-09-23T21:28:15.449Z","type":"message"}
{"nick":"indutny","message":"targos: why the hell are we constructing FastBuffer with three arguments","date":"2016-09-23T21:28:35.425Z","type":"message"}
{"nick":"trevnorris","message":"indutny: here are the graphs from irhydra for v6.5 and v6.6: https://cloudup.com/cS1fTZFcSEn","date":"2016-09-23T21:28:37.462Z","type":"message"}
{"nick":"trevnorris","message":"addaleax: correct","date":"2016-09-23T21:28:50.690Z","type":"message"}
{"nick":"indutny","message":"ah, nvm","date":"2016-09-23T21:28:52.381Z","type":"message"}
{"nick":"indutny","message":"buffer, byteOffset, length","date":"2016-09-23T21:28:56.892Z","type":"message"}
{"nick":"targos","message":"yes","date":"2016-09-23T21:29:04.184Z","type":"message"}
{"nick":"targos","message":"I read the spec about the 3 arguments version of TypedArray constructors","date":"2016-09-23T21:29:39.355Z","type":"message"}
{"nick":"trevnorris","message":"the only change to generate those graphs is swapping instanceof for isArrayBuffer()","date":"2016-09-23T21:29:44.159Z","type":"message"}
{"nick":"indutny","message":"targos: have you seen NAMEConstructor ?","date":"2016-09-23T21:29:49.160Z","type":"message"}
{"nick":"trevnorris","message":"addaleax: oh, forgot to mention. search for \"name = Buffer.fom\" in that gist.","date":"2016-09-23T21:30:50.443Z","type":"message"}
{"nick":"targos","message":"haha no","date":"2016-09-23T21:30:52.033Z","type":"message"}
{"nick":"targos","message":"I stopped at NAMEConstructByArrayLike","date":"2016-09-23T21:30:57.085Z","type":"message"}
{"nick":"indutny","message":"targos: any chance that it thinks that allocPool is not a typed array?","date":"2016-09-23T21:31:03.386Z","type":"message"}
{"nick":"addaleax","message":"trevnorris: yeah, I’ve looked at those outputs once or twice already ;)","date":"2016-09-23T21:31:25.830Z","type":"message"}
{"nick":"trevnorris","message":"cool :)","date":"2016-09-23T21:31:32.711Z","type":"message"}
{"nick":"targos","message":"it should call NAMEConstructByArrayBuffer in that case, right ?","date":"2016-09-23T21:31:52.188Z","type":"message"}
{"nick":"indutny","message":"targos: or NAMEConstructByIterable","date":"2016-09-23T21:32:07.363Z","type":"message"}
{"nick":"targos","message":"I mean in our case","date":"2016-09-23T21:32:40.224Z","type":"message"}
{"nick":"targos","message":"with the buffer, byteOffset, length arguments","date":"2016-09-23T21:32:59.554Z","type":"message"}
{"nick":"indutny","message":"targos: could `buffer` be undefined?","date":"2016-09-23T21:33:16.210Z","type":"message"}
{"nick":"trevnorris","message":"oh. hm. addaleax: the graph in v6.6 does have 10 inlined functions, vs v6.5 which has 0. that might be where the extra size comes from.","date":"2016-09-23T21:33:21.093Z","type":"message"}
{"nick":"indutny","message":"nah","date":"2016-09-23T21:33:33.377Z","type":"message"}
{"nick":"indutny","message":"doesn't seem to be the case","date":"2016-09-23T21:33:36.963Z","type":"message"}
{"nick":"addaleax","message":"oh… that might make sense, although I don’t understand why such a change would make V8 do that","date":"2016-09-23T21:33:46.948Z","type":"message"}
{"nick":"indutny","message":"one sec","date":"2016-09-23T21:33:50.487Z","type":"message"}
{"nick":"indutny","message":"I'll make that case throw","date":"2016-09-23T21:33:55.027Z","type":"message"}
{"nick":"indutny","message":"trevnorris: I told you!","date":"2016-09-23T21:34:05.489Z","type":"message"}
{"nick":"indutny","message":"targos:  :)","date":"2016-09-23T21:34:07.410Z","type":"message"}
{"nick":"trevnorris","message":"neither do i. and for only changing that one check.","date":"2016-09-23T21:34:08.856Z","type":"message"}
{"nick":"indutny","message":"yikes","date":"2016-09-23T21:34:10.726Z","type":"message"}
{"nick":"indutny","message":"everyone's name starts with t","date":"2016-09-23T21:34:14.245Z","type":"message"}
{"nick":"trevnorris","message":"heh.","date":"2016-09-23T21:34:44.519Z","type":"message"}
{"nick":"targos","message":"indutny: it is always an ArrayBuffer","date":"2016-09-23T21:35:16.133Z","type":"message"}
{"nick":"indutny","message":"targos: yeah, I can see this","date":"2016-09-23T21:36:50.022Z","type":"message"}
{"nick":"indutny","message":"targos: that was train of thought","date":"2016-09-23T21:37:00.020Z","type":"message"}
{"nick":"indutny","message":":D","date":"2016-09-23T21:37:00.512Z","type":"message"}
{"nick":"targos","message":"do you know what IS_ARRAYBUFFER does ?","date":"2016-09-23T21:37:22.481Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 264 seconds","date":"2016-09-23T21:37:42.220Z","type":"quit"}
{"nick":"indutny","message":"I can check","date":"2016-09-23T21:37:48.466Z","type":"message"}
{"nick":"indutny","message":"but I want to verify that it gets there first","date":"2016-09-23T21:37:53.359Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T21:38:17.667Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T21:38:17.888Z","type":"part"}
{"nick":"trevnorris","message":"addaleax: after #8739 lands i can PR that snippet about .length. for that specific path it gains us ~20%.","date":"2016-09-23T21:38:44.271Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T21:38:45.661Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T21:38:45.844Z","type":"part"}
{"nick":"indutny","message":"targos: it doesn't","date":"2016-09-23T21:38:51.516Z","type":"message"}
{"nick":"trevnorris","message":"for some reason accessing .length on a typed array is ridiculously slow.","date":"2016-09-23T21:39:01.631Z","type":"message"}
{"nick":"targos","message":"damned","date":"2016-09-23T21:39:11.846Z","type":"message"}
{"nick":"indutny","message":"trevnorris: oh, I hope this is not the same thing that we had before","date":"2016-09-23T21:39:26.745Z","type":"message"}
{"nick":"indutny","message":"trevnorris: with inherited classes","date":"2016-09-23T21:39:34.585Z","type":"message"}
{"nick":"addaleax","message":"trevnorris: uh… in that case you may want to comment that on the PR?","date":"2016-09-23T21:39:41.012Z","type":"message"}
{"nick":"addaleax","message":"on #8739, I mean","date":"2016-09-23T21:40:00.069Z","type":"message"}
{"nick":"addaleax","message":"or we can fast-track it and you do your own PR","date":"2016-09-23T21:40:18.328Z","type":"message"}
{"nick":"targos","message":"indutny: I have a reduced test case","date":"2016-09-23T21:40:29.868Z","type":"message"}
{"nick":"indutny","message":"targos: please share it","date":"2016-09-23T21:40:38.046Z","type":"message"}
{"nick":"targos","message":"It is indeed related to inheritance","date":"2016-09-23T21:40:40.423Z","type":"message"}
{"nick":"indutny","message":"targos: oooh","date":"2016-09-23T21:41:07.439Z","type":"message"}
{"nick":"indutny","message":"targos: I know this thing then","date":"2016-09-23T21:41:10.522Z","type":"message"}
{"nick":"indutny","message":"targos: GIVE ME THE CODE :D","date":"2016-09-23T21:41:18.501Z","type":"message"}
{"nick":"targos","action":"https://gist.github.com/targos/c16174a4e8c152b4129c7d32291c6f60","date":"2016-09-23T21:41:22.480Z","type":"action"}
{"nick":"indutny","message":"targos: how do I verify it?","date":"2016-09-23T21:41:35.527Z","type":"message"}
{"nick":"trevnorris","message":"indutny: maybe? i'll have to look","date":"2016-09-23T21:41:45.789Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2016-09-23T21:41:48.205Z","type":"message"}
{"nick":"indutny","message":"throw","date":"2016-09-23T21:41:49.197Z","type":"message"}
{"nick":"trevnorris","message":"addaleax: i'll mention in that PR. if it doesn't get accepted soon then i'll throw up another.","date":"2016-09-23T21:42:28.101Z","type":"message"}
{"nick":"indutny","message":"targos: I'll dig into it","date":"2016-09-23T21:43:31.664Z","type":"message"}
{"nick":"indutny","message":"targos: update: it is in _TypedArrayInitialize","date":"2016-09-23T21:44:52.802Z","type":"message"}
{"nick":"trevnorris","message":"addaleax: oh wait. that was a red herring. the culprit is 'length' in obj.","date":"2016-09-23T21:44:55.682Z","type":"message"}
{"nick":"trevnorris","message":"that's substantially slow","date":"2016-09-23T21:44:59.648Z","type":"message"}
{"nick":"targos","message":"indutny: I wonder how it can still work when it is not going in the right branch","date":"2016-09-23T21:45:02.243Z","type":"message"}
{"nick":"indutny","message":"targos: it's getting to right branch","date":"2016-09-23T21:46:52.130Z","type":"message"}
{"nick":"indutny","message":"targos: give me few minutes","date":"2016-09-23T21:46:57.717Z","type":"message"}
{"nick":"imyller","message":"quick question: is CI required for PR adding a new benchmark? probably not?","date":"2016-09-23T21:50:23.465Z","type":"message"}
{"nick":"addaleax","message":"imyller: the linter job should be run, otherwise there’s not much point in running the CI","date":"2016-09-23T21:50:44.026Z","type":"message"}
{"nick":"imyller","message":"thanks addaleax. I'll jslint locally before landing.","date":"2016-09-23T21:51:23.693Z","type":"message"}
{"nick":"indutny","message":"targos: please disregard my previous comments","date":"2016-09-23T21:52:50.294Z","type":"message"}
{"nick":"indutny","message":"targos: I was getting exceptions from other places","date":"2016-09-23T21:52:57.664Z","type":"message"}
{"nick":"indutny","message":"targos: which kind of confused me","date":"2016-09-23T21:53:02.168Z","type":"message"}
{"nick":"indutny","message":"targos: fun","date":"2016-09-23T21:55:01.029Z","type":"message"}
{"nick":"targos","message":"indutny: ?","date":"2016-09-23T21:55:46.035Z","type":"message"}
{"nick":"indutny","message":"targos: I was inserting throws in that js file","date":"2016-09-23T21:55:59.751Z","type":"message"}
{"nick":"indutny","message":"targos: but then I realized that there are several array buffers created internally by node","date":"2016-09-23T21:56:12.661Z","type":"message"}
{"nick":"indutny","message":"targos: before it gets to our test file","date":"2016-09-23T21:56:19.648Z","type":"message"}
{"nick":"targos","message":"ah yes","date":"2016-09-23T21:56:24.527Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2016-09-23T21:56:27.261Z","type":"message"}
{"nick":"indutny","message":"so getting these exceptions was kind of uninformative","date":"2016-09-23T21:56:35.062Z","type":"message"}
{"nick":"targos","message":"you can add a value","date":"2016-09-23T21:56:36.023Z","type":"message"}
{"nick":"targos","message":"to Array","date":"2016-09-23T21:56:39.035Z","type":"message"}
{"nick":"targos","message":"like Array.val = true","date":"2016-09-23T21:56:45.487Z","type":"message"}
{"nick":"targos","message":"and then if(GlobalArray.val) throw","date":"2016-09-23T21:56:59.125Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T21:57:11.889Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T21:57:12.072Z","type":"part"}
{"nick":"indutny","message":"ha","date":"2016-09-23T21:58:29.641Z","type":"message"}
{"nick":"indutny","message":"SpreadIterable","date":"2016-09-23T21:58:30.227Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-09-23T21:59:42.509Z","type":"quit"}
{"nick":"indutny","message":"targos: ooooh","date":"2016-09-23T21:59:48.238Z","type":"message"}
{"nick":"indutny","message":"targos: that's how it calls constructor now","date":"2016-09-23T21:59:50.380Z","type":"message"}
{"nick":"indutny","message":"targos: see parser.cc","date":"2016-09-23T21:59:56.966Z","type":"message"}
{"nick":"indutny","message":"      // $super_constructor = %_GetSuperConstructor(<this-function>)","date":"2016-09-23T22:00:13.457Z","type":"message"}
{"nick":"indutny","message":"      // %reflect_construct(","date":"2016-09-23T22:00:13.640Z","type":"message"}
{"nick":"indutny","message":"      //     $super_constructor, InternalArray(...args), new.target)","date":"2016-09-23T22:00:13.640Z","type":"message"}
{"nick":"indutny","message":"I have no idea what's reflect_construct","date":"2016-09-23T22:00:39.761Z","type":"message"}
{"nick":"indutny","message":"guess it is our own constructor?","date":"2016-09-23T22:00:45.568Z","type":"message"}
{"nick":"indutny","message":"anyway, this is v8 buf","date":"2016-09-23T22:00:54.740Z","type":"message"}
{"nick":"indutny","message":"s/buf/bug/","date":"2016-09-23T22:00:57.292Z","type":"message"}
{"nick":"indutny","message":"targos: trevnorris: yeah, this changed between v6.5.0 and v6.6.0","date":"2016-09-23T22:01:37.673Z","type":"message"}
{"nick":"indutny","message":"wait","date":"2016-09-23T22:01:48.815Z","type":"message"}
{"nick":"indutny","message":"between v6.5.0 and master","date":"2016-09-23T22:01:53.867Z","type":"message"}
{"nick":"indutny","message":"targos: v6.6.0 does not throw on your test case","date":"2016-09-23T22:02:10.319Z","type":"message"}
{"nick":"ofrobots","message":"indutny: https://cs.chromium.org/chromium/src/v8/src/builtins/x64/builtins-x64.cc?q=ReflectConstruct&sq=package:chromium&l=1583&dr=CSs","date":"2016-09-23T22:02:11.004Z","type":"message"}
{"nick":"targos","message":"indutny: indeed","date":"2016-09-23T22:02:32.472Z","type":"message"}
{"nick":"indutny","message":"ofrobots: yeah","date":"2016-09-23T22:02:41.666Z","type":"message"}
{"nick":"indutny","message":"ofrobots: so according to targos it makes things slower","date":"2016-09-23T22:02:53.248Z","type":"message"}
{"nick":"indutny","message":"ofrobots: because `class` constructors now spread the arguments","date":"2016-09-23T22:03:04.868Z","type":"message"}
{"nick":"indutny","message":"ofrobots: and this calls iterator","date":"2016-09-23T22:03:47.571Z","type":"message"}
{"nick":"ofrobots","message":"Yes, I think opening a V8 bug makes sense at this point","date":"2016-09-23T22:04:11.164Z","type":"message"}
{"nick":"indutny","message":"ofrobots: thanks","date":"2016-09-23T22:04:17.328Z","type":"message"}
{"nick":"indutny","message":"targos: would you mind helping me with this?","date":"2016-09-23T22:04:22.619Z","type":"message"}
{"nick":"targos","message":"indutny: sure, how can I help ?","date":"2016-09-23T22:04:58.997Z","type":"message"}
{"nick":"indutny","message":"targos: open the issue? :)","date":"2016-09-23T22:05:05.996Z","type":"message"}
{"nick":"targos","message":"Is it one or two issues ?","date":"2016-09-23T22:07:18.558Z","type":"message"}
{"nick":"targos","message":"There is the performance regression","date":"2016-09-23T22:07:47.331Z","type":"message"}
{"nick":"indutny","message":"targos: one for sure :)","date":"2016-09-23T22:08:07.491Z","type":"message"}
{"nick":"indutny","message":"targos: other one is unrelated","date":"2016-09-23T22:08:11.976Z","type":"message"}
{"nick":"targos","message":"But is it normal that super constructor call fails if we redefine the array iterator ?","date":"2016-09-23T22:08:35.976Z","type":"message"}
{"nick":"bradleymeck","date":"2016-09-23T22:08:45.887Z","type":"join"}
{"nick":"jasnell","date":"2016-09-23T22:09:56.277Z","type":"join"}
{"nick":"indutny","message":"targos: that's why we need to file a bug","date":"2016-09-23T22:11:53.363Z","type":"message"}
{"nick":"indutny","message":"targos: it fails because it calls iterator on the array buffer argument that we pass to it","date":"2016-09-23T22:12:06.602Z","type":"message"}
{"nick":"indutny","message":"ah, actually no","date":"2016-09-23T22:12:19.387Z","type":"message"}
{"nick":"targos","message":"no it doesn't","date":"2016-09-23T22:12:25.473Z","type":"message"}
{"nick":"targos","message":"it calls it on the arguments object I think","date":"2016-09-23T22:12:40.031Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2016-09-23T22:13:10.784Z","type":"message"}
{"nick":"indutny","message":"looks like so","date":"2016-09-23T22:13:12.892Z","type":"message"}
{"nick":"targos","message":"class A {}","date":"2016-09-23T22:13:14.809Z","type":"message"}
{"nick":"targos","message":"class B extends A{}","date":"2016-09-23T22:13:14.992Z","type":"message"}
{"nick":"targos","message":"new B(1, 2)","date":"2016-09-23T22:13:15.374Z","type":"message"}
{"nick":"targos","message":"this example has the same issue","date":"2016-09-23T22:13:25.105Z","type":"message"}
{"nick":"jasnell","reason":"Ping timeout: 255 seconds","date":"2016-09-23T22:14:34.160Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-09-23T22:15:55.961Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T22:15:56.144Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T22:16:55.915Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T22:16:56.136Z","type":"part"}
{"nick":"indutny","message":"targos: yeah","date":"2016-09-23T22:17:13.946Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T22:17:30.910Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T22:17:31.093Z","type":"part"}
{"nick":"targos","message":"indutny: there is a problem","date":"2016-09-23T22:20:08.865Z","type":"message"}
{"nick":"targos","message":"this seems to be following the spec","date":"2016-09-23T22:20:18.932Z","type":"message"}
{"nick":"targos","message":"https://bugs.chromium.org/p/v8/issues/detail?id=4890","date":"2016-09-23T22:20:31.616Z","type":"message"}
{"nick":"qws-user-1229","date":"2016-09-23T22:21:23.828Z","type":"join"}
{"nick":"qws-user-1228","reason":"Ping timeout: 248 seconds","date":"2016-09-23T22:21:29.617Z","type":"quit"}
{"nick":"targos","message":"ofrobots: is it better to create a new issue or comment on this one ?","date":"2016-09-23T22:21:43.802Z","type":"message"}
{"nick":"ofrobots","message":"no hard and fast rule; same one is a good starting point.","date":"2016-09-23T22:23:03.017Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T22:26:59.010Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T22:26:59.192Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T22:27:29.959Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T22:27:30.142Z","type":"part"}
{"nick":"addaleax","message":"imyller: mh… if there is an outstanding discussion on whether a PR is semver-major, I would add the dont-land-on-v?.x labels until that discussion is resolved (and you may disagree and do things a different way, especially if you’ve taken a closer look at the patch and think it’s okay that way!)","date":"2016-09-23T22:30:27.458Z","type":"message"}
{"nick":"imyller","message":"good point. the semver-major was mentioned as a possibility for that change, so let's be on the safe side and add dont-land labels :)","date":"2016-09-23T22:32:43.052Z","type":"message"}
{"nick":"addaleax","message":"yeah. i doubt it will take long to resolve that either way. :)","date":"2016-09-23T22:33:28.604Z","type":"message"}
{"nick":"imyller","message":"whoops. Wrong browser tab and just added those labels to unrelated issue.","date":"2016-09-23T22:33:57.219Z","type":"message"}
{"nick":"addaleax","message":"hehe :D","date":"2016-09-23T22:34:41.825Z","type":"message"}
{"nick":"imyller","message":"fixed, but it's one of those mistakes that you can't hide away ;)","date":"2016-09-23T22:35:32.923Z","type":"message"}
{"nick":"addaleax","message":"if you want to put it into some positive light… it’s always kind of a relief to see that other people make the exact same mistakes as you do :)","date":"2016-09-23T22:37:03.153Z","type":"message"}
{"nick":"imyller","message":":)","date":"2016-09-23T22:38:42.018Z","type":"message"}
{"nick":"targos","message":"indutny: actually we don't need to wait for V8's answer","date":"2016-09-23T22:45:06.044Z","type":"message"}
{"nick":"targos","message":"it is easy to fix on our side and the perf is better than with v6.6.0","date":"2016-09-23T22:45:50.388Z","type":"message"}
{"nick":"indutny","message":"targos: how?","date":"2016-09-23T22:45:56.587Z","type":"message"}
{"nick":"targos","message":"hold on","date":"2016-09-23T22:46:12.189Z","type":"message"}
{"nick":"gsathya","message":"targos: replied on the bug","date":"2016-09-23T22:51:39.643Z","type":"message"}
{"nick":"targos","message":"gsathya: thanks, this is what I found :)","date":"2016-09-23T22:52:44.436Z","type":"message"}
{"nick":"targos","message":"preparing a PR","date":"2016-09-23T22:52:52.117Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-09-23T22:59:19.085Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T22:59:19.268Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T23:01:48.198Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T23:01:48.380Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T23:02:03.097Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T23:02:03.279Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T23:06:07.978Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T23:06:08.161Z","type":"part"}
{"nick":"olalonde","date":"2016-09-23T23:08:47.068Z","type":"join"}
{"nick":"targos","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2016-09-23T23:10:42.907Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-09-23T23:13:54.753Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T23:13:54.935Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-09-23T23:14:34.714Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T23:14:34.936Z","type":"part"}
{"nick":"evanlucas","reason":"Remote host closed the connection","date":"2016-09-23T23:39:50.590Z","type":"quit"}
{"nick":"evanlucas","date":"2016-09-23T23:40:20.666Z","type":"join"}
{"nick":"Literphor","date":"2016-09-23T23:40:44.527Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T23:46:02.358Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-09-23T23:46:02.541Z","type":"part"}
{"nick":"jasnell","date":"2016-09-23T23:48:53.090Z","type":"join"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-09-23T23:48:58.682Z","type":"quit"}
{"nick":"jasnell","date":"2016-09-23T23:49:13.678Z","type":"join"}
