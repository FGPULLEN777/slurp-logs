{"nick":"kahwee","reason":"Remote host closed the connection","date":"2016-08-11T00:13:42.814Z","type":"quit"}
{"nick":"nodejs-gh","date":"2016-08-11T00:15:16.184Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-08-11T00:15:16.186Z","type":"part"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-08-11T00:15:20.616Z","type":"quit"}
{"nick":"saghul_","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-08-11T00:15:49.596Z","type":"quit"}
{"nick":"nuizzy","reason":"Quit: http://www.kiwiirc.com/ - A hand crafted IRC client","date":"2016-08-11T00:21:14.547Z","type":"quit"}
{"nick":"not_an_aardvark","date":"2016-08-11T00:49:18.045Z","type":"join"}
{"nick":"al-damiri","reason":"Quit: Connection closed for inactivity","date":"2016-08-11T00:50:53.117Z","type":"quit"}
{"nick":"jasnell","date":"2016-08-11T01:05:07.419Z","type":"join"}
{"nick":"Fishrock123","date":"2016-08-11T01:05:50.099Z","type":"join"}
{"nick":"qard","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-08-11T01:14:31.460Z","type":"quit"}
{"nick":"jasnell","reason":"Remote host closed the connection","date":"2016-08-11T01:21:22.519Z","type":"quit"}
{"nick":"addaleax","reason":"Quit: ChatZilla 0.9.92 [Firefox 48.0/20160728203720]","date":"2016-08-11T01:23:08.896Z","type":"quit"}
{"nick":"jasnell_","date":"2016-08-11T01:23:22.603Z","type":"join"}
{"nick":"Lee1092","date":"2016-08-11T01:31:26.113Z","type":"join"}
{"nick":"jasnell_","reason":"Remote host closed the connection","date":"2016-08-11T01:35:43.274Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-08-11T01:45:57.318Z","type":"quit"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2016-08-11T01:46:11.963Z","type":"quit"}
{"nick":"BridgeAR","reason":"Ping timeout: 264 seconds","date":"2016-08-11T01:50:16.133Z","type":"quit"}
{"nick":"qard","date":"2016-08-11T02:31:04.029Z","type":"join"}
{"nick":"qard","reason":"Client Quit","date":"2016-08-11T02:31:23.602Z","type":"quit"}
{"nick":"john51","reason":"Ping timeout: 240 seconds","date":"2016-08-11T02:31:52.649Z","type":"quit"}
{"nick":"john51","date":"2016-08-11T02:33:14.190Z","type":"join"}
{"nick":"piscisaureus","reason":"Remote host closed the connection","date":"2016-08-11T02:50:45.974Z","type":"quit"}
{"nick":"afree","date":"2016-08-11T03:04:07.207Z","type":"join"}
{"nick":"jasnell","date":"2016-08-11T03:29:56.585Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 265 seconds","date":"2016-08-11T03:35:28.404Z","type":"quit"}
{"nick":"Pagan","reason":"Ping timeout: 276 seconds","date":"2016-08-11T03:48:06.739Z","type":"quit"}
{"nick":"dbevenius","reason":"Ping timeout: 250 seconds","date":"2016-08-11T03:48:33.101Z","type":"quit"}
{"nick":"Arnavion","reason":"Quit: Arnavion","date":"2016-08-11T03:49:32.720Z","type":"quit"}
{"nick":"Arnavion","date":"2016-08-11T03:49:45.650Z","type":"join"}
{"nick":"Arnavion","reason":"Client Quit","date":"2016-08-11T03:49:45.652Z","type":"quit"}
{"nick":"dbevenius","date":"2016-08-11T03:53:09.071Z","type":"join"}
{"nick":"Arnavion","date":"2016-08-11T03:53:28.672Z","type":"join"}
{"nick":"Pagan","date":"2016-08-11T03:57:40.746Z","type":"join"}
{"nick":"Pagan","reason":"Changing host","date":"2016-08-11T03:57:40.746Z","type":"quit"}
{"nick":"Pagan","date":"2016-08-11T03:57:40.746Z","type":"join"}
{"nick":"ChALkeR","date":"2016-08-11T04:00:09.015Z","type":"join"}
{"nick":"blabal","date":"2016-08-11T04:12:08.726Z","type":"join"}
{"nick":"sankha","date":"2016-08-11T04:14:31.546Z","type":"join"}
{"nick":"thefourtheye","date":"2016-08-11T04:16:46.076Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T04:29:55.912Z","type":"quit"}
{"nick":"jasnell","date":"2016-08-11T04:32:25.909Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 244 seconds","date":"2016-08-11T04:36:35.625Z","type":"quit"}
{"nick":"blabal","reason":"Quit: Page closed","date":"2016-08-11T04:37:19.543Z","type":"quit"}
{"nick":"Pagan","reason":"*.net *.split","date":"2016-08-11T04:50:30.764Z","type":"quit"}
{"nick":"Arnavion","reason":"Quit: Arnavion","date":"2016-08-11T04:51:13.445Z","type":"quit"}
{"nick":"afree","reason":"Quit: Leaving.","date":"2016-08-11T05:00:21.504Z","type":"quit"}
{"nick":"Pagan","date":"2016-08-11T05:01:44.373Z","type":"join"}
{"nick":"lpin","date":"2016-08-11T05:15:02.798Z","type":"join"}
{"nick":"Arnavion","date":"2016-08-11T05:31:20.211Z","type":"join"}
{"nick":"not_an_aardvark_","date":"2016-08-11T05:43:16.546Z","type":"join"}
{"nick":"thefourtheye_","date":"2016-08-11T05:43:19.454Z","type":"join"}
{"nick":"mikeal_","date":"2016-08-11T05:43:22.507Z","type":"join"}
{"nick":"joaocgreis_","date":"2016-08-11T05:43:22.509Z","type":"join"}
{"nick":"tjpeden_","date":"2016-08-11T05:43:27.668Z","type":"join"}
{"nick":"Lee1092_","date":"2016-08-11T05:43:36.068Z","type":"join"}
{"nick":"johannh_","date":"2016-08-11T05:43:37.465Z","type":"join"}
{"nick":"sankha","date":"2016-08-11T05:43:59.143Z","type":"join"}
{"nick":"PhDuck_","date":"2016-08-11T05:46:11.189Z","type":"join"}
{"nick":"Lee1092","reason":"Ping timeout: 250 seconds","date":"2016-08-11T05:48:38.667Z","type":"quit"}
{"nick":"tjpeden","reason":"Ping timeout: 250 seconds","date":"2016-08-11T05:48:38.684Z","type":"quit"}
{"nick":"thefourtheye","reason":"Ping timeout: 250 seconds","date":"2016-08-11T05:48:38.805Z","type":"quit"}
{"nick":"mikeal","reason":"Ping timeout: 250 seconds","date":"2016-08-11T05:48:38.850Z","type":"quit"}
{"nick":"johannh","reason":"Ping timeout: 250 seconds","date":"2016-08-11T05:48:38.879Z","type":"quit"}
{"nick":"joaocgreis","reason":"Ping timeout: 250 seconds","date":"2016-08-11T05:48:38.923Z","type":"quit"}
{"nick":"not_an_aardvark","reason":"Ping timeout: 250 seconds","date":"2016-08-11T05:48:39.160Z","type":"quit"}
{"nick":"PhDuck","reason":"Ping timeout: 250 seconds","date":"2016-08-11T05:48:39.836Z","type":"quit"}
{"nick":"johannh_","new_nick":"johannh","date":"2016-08-11T05:48:41.405Z","type":"nick"}
{"nick":"not_an_aardvark_","new_nick":"not_an_aardvark","date":"2016-08-11T05:48:45.448Z","type":"nick"}
{"nick":"thefourtheye_","new_nick":"thefourtheye","date":"2016-08-11T05:48:51.035Z","type":"nick"}
{"nick":"tjpeden_","new_nick":"tjpeden","date":"2016-08-11T05:49:05.798Z","type":"nick"}
{"nick":"Lee1092_","new_nick":"Lee1092","date":"2016-08-11T05:49:07.068Z","type":"nick"}
{"nick":"mikeal_","new_nick":"mikeal","date":"2016-08-11T05:49:11.760Z","type":"nick"}
{"nick":"joaocgreis_","new_nick":"joaocgreis","date":"2016-08-11T05:49:14.829Z","type":"nick"}
{"nick":"doodadjs","date":"2016-08-11T05:49:45.283Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T05:54:07.077Z","type":"quit"}
{"nick":"sankha","date":"2016-08-11T05:54:54.739Z","type":"join"}
{"nick":"fusl","reason":"Quit: .","date":"2016-08-11T06:03:13.006Z","type":"quit"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T06:03:42.387Z","type":"quit"}
{"nick":"sankha","date":"2016-08-11T06:04:43.033Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T06:06:44.999Z","type":"quit"}
{"nick":"sankha","date":"2016-08-11T06:07:18.585Z","type":"join"}
{"nick":"fusl","date":"2016-08-11T06:08:27.581Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-08-11T06:19:36.585Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-08-11T06:19:36.586Z","type":"part"}
{"nick":"nodejs-gh","date":"2016-08-11T06:19:48.208Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-08-11T06:19:48.210Z","type":"part"}
{"nick":"jasnell","date":"2016-08-11T06:20:36.016Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T06:21:55.781Z","type":"quit"}
{"nick":"sankha","date":"2016-08-11T06:23:28.886Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 265 seconds","date":"2016-08-11T06:25:02.770Z","type":"quit"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T06:36:19.325Z","type":"quit"}
{"nick":"sankha","date":"2016-08-11T06:39:59.634Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T06:58:40.407Z","type":"quit"}
{"nick":"BridgeAR","date":"2016-08-11T06:58:46.076Z","type":"join"}
{"nick":"sankha","date":"2016-08-11T07:00:32.714Z","type":"join"}
{"nick":"howdoi","date":"2016-08-11T07:04:38.442Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-08-11T07:08:36.740Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-08-11T07:08:36.741Z","type":"part"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T07:18:55.335Z","type":"quit"}
{"nick":"jasnell","date":"2016-08-11T07:21:28.445Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 244 seconds","date":"2016-08-11T07:25:54.193Z","type":"quit"}
{"nick":"sankha","date":"2016-08-11T07:28:54.695Z","type":"join"}
{"nick":"BridgeAR","reason":"Ping timeout: 244 seconds","date":"2016-08-11T07:50:53.026Z","type":"quit"}
{"nick":"saghul","date":"2016-08-11T07:58:50.162Z","type":"join"}
{"nick":"ilbonte","date":"2016-08-11T08:07:29.759Z","type":"join"}
{"nick":"nickleefly","date":"2016-08-11T08:14:04.023Z","type":"join"}
{"nick":"alrra","date":"2016-08-11T08:23:06.430Z","type":"join"}
{"nick":"not_an_aardvark","reason":"Quit: Connection closed for inactivity","date":"2016-08-11T08:26:04.052Z","type":"quit"}
{"nick":"saghul","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-08-11T08:27:08.433Z","type":"quit"}
{"nick":"seishun","date":"2016-08-11T08:27:43.112Z","type":"join"}
{"nick":"saghul","date":"2016-08-11T08:30:44.668Z","type":"join"}
{"nick":"zz_r04r","new_nick":"r04r","date":"2016-08-11T08:35:27.174Z","type":"nick"}
{"nick":"r04r","new_nick":"zz_r04r","date":"2016-08-11T08:35:54.045Z","type":"nick"}
{"nick":"zz_r04r","new_nick":"r04r","date":"2016-08-11T08:36:04.429Z","type":"nick"}
{"nick":"BridgeAR","date":"2016-08-11T08:56:24.003Z","type":"join"}
{"nick":"saghul","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-08-11T09:01:51.357Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-08-11T09:16:43.102Z","type":"join"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-08-11T09:26:48.448Z","type":"quit"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T09:32:16.142Z","type":"quit"}
{"nick":"joshontheweb","date":"2016-08-11T09:46:54.546Z","type":"join"}
{"nick":"saghul","date":"2016-08-11T09:59:59.406Z","type":"join"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-08-11T10:00:29.476Z","type":"quit"}
{"nick":"sankha","date":"2016-08-11T10:05:39.753Z","type":"join"}
{"nick":"r04r","new_nick":"zz_r04r","date":"2016-08-11T10:10:21.238Z","type":"nick"}
{"nick":"BridgeAR","reason":"Read error: Connection reset by peer","date":"2016-08-11T10:20:04.127Z","type":"quit"}
{"nick":"BridgeAR","date":"2016-08-11T10:20:12.141Z","type":"join"}
{"nick":"joshontheweb","date":"2016-08-11T10:21:51.894Z","type":"join"}
{"nick":"nickleefly","reason":"Quit: Connection closed for inactivity","date":"2016-08-11T10:23:02.015Z","type":"quit"}
{"nick":"ilbonte","reason":"Read error: Connection reset by peer","date":"2016-08-11T10:29:07.855Z","type":"quit"}
{"nick":"ilbonte","date":"2016-08-11T10:29:30.434Z","type":"join"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-08-11T10:31:34.855Z","type":"quit"}
{"nick":"thealphanerd","reason":"Quit: farewell for now","date":"2016-08-11T10:52:59.417Z","type":"quit"}
{"nick":"thealphanerd","date":"2016-08-11T10:53:29.885Z","type":"join"}
{"nick":"saghul","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-08-11T10:57:13.939Z","type":"quit"}
{"nick":"seishun","reason":"Ping timeout: 265 seconds","date":"2016-08-11T11:04:29.343Z","type":"quit"}
{"nick":"seishun","date":"2016-08-11T11:07:36.217Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T11:12:50.943Z","type":"quit"}
{"nick":"saghul","date":"2016-08-11T11:14:22.505Z","type":"join"}
{"nick":"sankha","date":"2016-08-11T11:19:26.282Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T11:37:25.958Z","type":"quit"}
{"nick":"sankha","date":"2016-08-11T11:41:46.447Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T11:45:52.259Z","type":"quit"}
{"nick":"ChALkeR","reason":"Ping timeout: 264 seconds","date":"2016-08-11T11:49:04.030Z","type":"quit"}
{"nick":"Lee1092","reason":"Quit: Connection closed for inactivity","date":"2016-08-11T12:03:49.692Z","type":"quit"}
{"nick":"sankha","date":"2016-08-11T12:16:15.323Z","type":"join"}
{"nick":"saghul","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzz…","date":"2016-08-11T12:41:10.504Z","type":"quit"}
{"nick":"saghul","date":"2016-08-11T12:45:47.204Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T13:00:13.076Z","type":"quit"}
{"nick":"sankha","date":"2016-08-11T13:01:09.173Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T13:06:24.083Z","type":"quit"}
{"nick":"al-damiri","date":"2016-08-11T13:07:24.105Z","type":"join"}
{"nick":"bradleymeck","date":"2016-08-11T13:13:05.429Z","type":"join"}
{"nick":"yoshokatana","date":"2016-08-11T13:14:45.308Z","type":"join"}
{"nick":"Fishrock123","date":"2016-08-11T13:24:20.448Z","type":"join"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2016-08-11T13:36:09.428Z","type":"nick"}
{"nick":"bradleymeck","message":"Fishrock123: https://docs.google.com/drawings/d/10WwsrFKLtpvx3VikzwI1fD2O2TBSu0BHRev1rP4tui4/edit?usp=sharing might better show the evaluation ordering of top level await and import","date":"2016-08-11T13:44:20.969Z","type":"message"}
{"nick":"ChALkeR","date":"2016-08-11T13:47:33.205Z","type":"join"}
{"nick":"addaleax","date":"2016-08-11T13:48:18.017Z","type":"join"}
{"nick":"jasnell","date":"2016-08-11T13:56:33.811Z","type":"join"}
{"nick":"jasnell","reason":"Ping timeout: 250 seconds","date":"2016-08-11T14:00:58.366Z","type":"quit"}
{"nick":"sankha","date":"2016-08-11T14:08:33.313Z","type":"join"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T14:09:34.220Z","type":"quit"}
{"nick":"sankha","date":"2016-08-11T14:09:48.361Z","type":"join"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2016-08-11T14:15:06.104Z","type":"nick"}
{"nick":"jasnell","date":"2016-08-11T14:22:53.620Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 265 seconds","date":"2016-08-11T14:29:54.461Z","type":"quit"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2016-08-11T14:32:42.634Z","type":"nick"}
{"nick":"sankha","reason":"Remote host closed the connection","date":"2016-08-11T14:38:20.591Z","type":"quit"}
{"nick":"bradleymeck","message":"jasnell: did you ever get a chance to look at https://gist.github.com/bmeck/52ee45e7c34d1eac44ce8c5fe436d753#we-are-going-to-reuse-the-same-parsing-mechanism-as-new-url-to-determine-how-to-initialize-path-searching","date":"2016-08-11T14:46:43.328Z","type":"message"}
{"nick":"jasnell","message":"right! yes, I took a look but it's not 100% clear to me","date":"2016-08-11T14:47:25.073Z","type":"message"}
{"nick":"jasnell","message":"are you saying that if I do  ... require('foo')","date":"2016-08-11T14:48:26.432Z","type":"message"}
{"nick":"jasnell","message":"then the idea is to attempt a new URL('foo')","date":"2016-08-11T14:48:39.332Z","type":"message"}
{"nick":"bradleymeck","message":"I am only talking about `import()`","date":"2016-08-11T14:48:44.176Z","type":"message"}
{"nick":"bradleymeck","message":"import would indeed attempt `new URL('foo')` after a basic regex test for ./ , ../, /","date":"2016-08-11T14:49:13.312Z","type":"message"}
{"nick":"jasnell","message":"since new URL('foo') would fail, it would treat it as a require?","date":"2016-08-11T14:49:46.116Z","type":"message"}
{"nick":"bradleymeck","message":"it would load it via node_modules rules","date":"2016-08-11T14:49:56.348Z","type":"message"}
{"nick":"jasnell","message":"but if we get a import of 'file://something'","date":"2016-08-11T14:50:24.303Z","type":"message"}
{"nick":"bradleymeck","message":"it doesn't try to do things synchronously because that simply won't work","date":"2016-08-11T14:50:25.732Z","type":"message"}
{"nick":"bradleymeck","message":"it will be loaded via the file scheme , host \"something\" (since 2 slashes), path defaulting to `/`","date":"2016-08-11T14:51:32.692Z","type":"message"}
{"nick":"bradleymeck","message":"only plan on node supporting file scheme in the future","date":"2016-08-11T14:52:14.533Z","type":"message"}
{"nick":"bradleymeck","message":"but this should match what browsers are doing and unify `new URL(relative, currentScriptURL)`","date":"2016-08-11T14:52:47.496Z","type":"message"}
{"nick":"bradleymeck","message":"in order to be able to do requires that are complex T_T","date":"2016-08-11T14:53:13.762Z","type":"message"}
{"nick":"cbanta","date":"2016-08-11T14:54:28.071Z","type":"join"}
{"nick":"jasnell","message":"I *think* that works","date":"2016-08-11T14:54:42.266Z","type":"message"}
{"nick":"bradleymeck","message":"my real question is if things starting with alphanumeric / '@' seem to work properly","date":"2016-08-11T14:54:53.113Z","type":"message"}
{"nick":"jasnell","message":"relying on the parse fail may be a bit problematic","date":"2016-08-11T14:54:53.339Z","type":"message"}
{"nick":"jasnell","message":"why not use a base URL that is ignored when file:// is used","date":"2016-08-11T14:55:07.868Z","type":"message"}
{"nick":"bradleymeck","message":"welcome to trying to get paths to work w/ what browser plan is","date":"2016-08-11T14:55:11.384Z","type":"message"}
{"nick":"jasnell","message":"e.g. new URL('foo', 'node://whatever')","date":"2016-08-11T14:55:18.823Z","type":"message"}
{"nick":"bradleymeck","message":"because node_modules is dynamic, we could do our own scheme, though I am heavily reluctant to do so","date":"2016-08-11T14:55:32.563Z","type":"message"}
{"nick":"bradleymeck","message":"since \"@\" does not act like it would in URL parsing","date":"2016-08-11T14:55:46.946Z","type":"message"}
{"nick":"bradleymeck","message":"if we could disable the authority, maybe?","date":"2016-08-11T14:56:57.735Z","type":"message"}
{"nick":"jasnell","message":"hmm","date":"2016-08-11T14:57:25.962Z","type":"message"}
{"nick":"jasnell","message":"(thinking)","date":"2016-08-11T14:58:27.158Z","type":"message"}
{"nick":"jasnell","message":"if we went with something like new URL('node:scope@name') then 'scope@name' parses as the pathname","date":"2016-08-11T14:59:11.361Z","type":"message"}
{"nick":"nodejs-gh","date":"2016-08-11T14:59:17.969Z","type":"join"}
{"nick":"nodejs-gh","date":"2016-08-11T14:59:17.971Z","type":"part"}
{"nick":"jasnell","message":"but both chrome and firefox seem to have a problem with that","date":"2016-08-11T14:59:27.197Z","type":"message"}
{"nick":"jasnell","message":"when using a base URL","date":"2016-08-11T14:59:31.791Z","type":"message"}
{"nick":"jasnell","message":"I'm rebuilding my local node impl with the new URL object to test locally... gimme a sec","date":"2016-08-11T14:59:53.180Z","type":"message"}
{"nick":"bradleymeck","message":"kk","date":"2016-08-11T15:00:11.238Z","type":"message"}
{"nick":"jasnell","message":"ok, yeah, FF and Chrome seem to have a problem with it, but new URL('scope@name', 'node://') works generally as one would expect in my node impl","date":"2016-08-11T15:02:07.715Z","type":"message"}
{"nick":"jasnell","message":"the URL is node:///scope@name, with /scope@name being the path","date":"2016-08-11T15:02:40.163Z","type":"message"}
{"nick":"jasnell","message":"I'll need to reconcile against the spec to see which impl is correct ;-)","date":"2016-08-11T15:02:54.305Z","type":"message"}
{"nick":"seishun","date":"2016-08-11T15:03:24.446Z","type":"join"}
{"nick":"bradleymeck","message":"jasnell: thats fine","date":"2016-08-11T15:04:11.996Z","type":"message"}
{"nick":"bradleymeck","message":"so when we get a file:// we would convert to node:// somehow then?","date":"2016-08-11T15:04:27.267Z","type":"message"}
{"nick":"jasnell","message":"well, if you did new URL(input, 'node://'), if the input is something like 'foo' or 'scope@foo', it would be handled as relative to 'node://', so... 'node:///foo' and 'node:///scope@foo'","date":"2016-08-11T15:05:34.700Z","type":"message"}
{"nick":"jasnell","message":"but if input is 'file://whatever', then you'd get 'file://whatever'","date":"2016-08-11T15:05:52.370Z","type":"message"}
{"nick":"bradleymeck","message":"ahhh","date":"2016-08-11T15:06:07.707Z","type":"message"}
{"nick":"jasnell","message":"new URL('foo', 'node://') == node:///foo","date":"2016-08-11T15:06:15.097Z","type":"message"}
{"nick":"jasnell","message":"new URL('scope@foo', 'node://') == node:///scope@foo","date":"2016-08-11T15:06:32.647Z","type":"message"}
{"nick":"jasnell","message":"new URL('file:///something', 'node://') == file:///something","date":"2016-08-11T15:06:52.170Z","type":"message"}
{"nick":"bradleymeck","message":"ok, sounds sane","date":"2016-08-11T15:07:16.307Z","type":"message"}
{"nick":"bradleymeck","message":"idk if we want people to be able to explicitly use node:// but can't see the harm in letting them","date":"2016-08-11T15:07:35.909Z","type":"message"}
{"nick":"jasnell","message":"then you would pay attention to the protocol and pathname properties","date":"2016-08-11T15:07:51.447Z","type":"message"}
{"nick":"bradleymeck","message":"sound ok if people could pass `import('node://x')`?","date":"2016-08-11T15:08:00.428Z","type":"message"}
{"nick":"jasnell","message":"yeah, that seems ok to me","date":"2016-08-11T15:08:31.064Z","type":"message"}
{"nick":"bradleymeck","message":"rewording, thanks much","date":"2016-08-11T15:08:39.002Z","type":"message"}
{"nick":"jasnell","message":"a key challenge with relying on a URL parse failure is that there are several ways a URL can fail to parse","date":"2016-08-11T15:09:01.830Z","type":"message"}
{"nick":"jasnell","message":"new URL('file://for\\00instance')","date":"2016-08-11T15:09:39.927Z","type":"message"}
{"nick":"jasnell","message":"we'd want that to be handled as simply being invalid","date":"2016-08-11T15:10:07.408Z","type":"message"}
{"nick":"bradleymeck","message":"yea, i'm not super well versed in URL combination best practices XD","date":"2016-08-11T15:10:11.598Z","type":"message"}
{"nick":"bradleymeck","message":"so, for file:// if we did file searching that should be fine too though right? `import('file://./foo')` => ./foo/index.js","date":"2016-08-11T15:10:54.646Z","type":"message"}
{"nick":"jasnell","message":"node-path:// might be a better name... something more obscure and arcane that would discourage it's direct use ;-)","date":"2016-08-11T15:11:18.058Z","type":"message"}
{"nick":"jasnell","message":"yes, it should be","date":"2016-08-11T15:11:32.276Z","type":"message"}
{"nick":"jasnell","message":"tho there are definite security concerns with that.. there need to be clear limitations on what things can be imported that way","date":"2016-08-11T15:12:26.299Z","type":"message"}
{"nick":"jasnell","message":"import('file:///root/.ssh/') would be bad, for instance ;-)","date":"2016-08-11T15:12:52.733Z","type":"message"}
{"nick":"bradleymeck","message":"thats going to be by some security policy, not in scope for me","date":"2016-08-11T15:13:23.145Z","type":"message"}
{"nick":"bradleymeck","message":"though i agree having a security policy would be nice","date":"2016-08-11T15:13:35.267Z","type":"message"}
{"nick":"bradleymeck","action":"thinks","date":"2016-08-11T15:14:15.006Z","type":"action"}
{"nick":"bradleymeck","message":"actually for file:// we can avoid doing searching","date":"2016-08-11T15:14:26.179Z","type":"message"}
{"nick":"bradleymeck","message":"since the base urls would always be against `node://` protocol right?","date":"2016-08-11T15:14:51.100Z","type":"message"}
{"nick":"bradleymeck","message":"though `import.context.url` will need to be file:// still I would think","date":"2016-08-11T15:15:08.513Z","type":"message"}
{"nick":"bradleymeck","message":"so `import(new URL('../', import.context.url))` would not do searching and presumably fail","date":"2016-08-11T15:15:40.205Z","type":"message"}
{"nick":"bradleymeck","message":"this is harder than I hoped","date":"2016-08-11T15:15:59.036Z","type":"message"}
{"nick":"jasnell","message":"if I do import('foo'), that would translate into new URL('foo', 'node://'), which results in 'node:///foo'. The pathname would be '/foo', so the task is search node_dir for anything named 'foo'","date":"2016-08-11T15:16:31.135Z","type":"message"}
{"nick":"joshontheweb","date":"2016-08-11T15:16:34.029Z","type":"join"}
{"nick":"bradleymeck","message":"./ would be `node://./`?","date":"2016-08-11T15:17:00.662Z","type":"message"}
{"nick":"bradleymeck","message":" / would be `node:///`?","date":"2016-08-11T15:17:26.512Z","type":"message"}
{"nick":"jasnell","message":"if I do import('file:///foo'), that would translate into new URL('file:///foo', 'node://'), which results in 'file:///foo'. The pathname would be '/foo'","date":"2016-08-11T15:17:37.566Z","type":"message"}
{"nick":"jasnell","message":"new URL('./', 'node://') == node:///","date":"2016-08-11T15:17:49.935Z","type":"message"}
{"nick":"bradleymeck","message":"uggggg","date":"2016-08-11T15:17:55.575Z","type":"message"}
{"nick":"bradleymeck","message":"so './' and '/' would both resolve to node:/// ?","date":"2016-08-11T15:18:15.006Z","type":"message"}
{"nick":"jasnell","message":"because of URL normalization rules, the . normalized out","date":"2016-08-11T15:18:15.149Z","type":"message"}
{"nick":"jasnell","message":"as would ../","date":"2016-08-11T15:18:22.579Z","type":"message"}
{"nick":"bradleymeck","message":"can we disable normalization?","date":"2016-08-11T15:18:32.586Z","type":"message"}
{"nick":"jasnell","message":"unfortunately no","date":"2016-08-11T15:18:45.379Z","type":"message"}
{"nick":"jasnell","message":"not with the whatwg url parsing rules at least","date":"2016-08-11T15:18:53.722Z","type":"message"}
{"nick":"bradleymeck","message":"special case with regexp up front for those prefixes?","date":"2016-08-11T15:19:05.689Z","type":"message"}
{"nick":"jasnell","message":"likely would have to","date":"2016-08-11T15:19:15.635Z","type":"message"}
{"nick":"bradleymeck","message":"to node:// protocol?","date":"2016-08-11T15:19:23.335Z","type":"message"}
{"nick":"cbanta","date":"2016-08-11T15:19:27.354Z","type":"part"}
{"nick":"bradleymeck","message":"no, would need to flag it...","date":"2016-08-11T15:19:37.875Z","type":"message"}
{"nick":"jasnell","message":"let's back up just a bit","date":"2016-08-11T15:20:58.624Z","type":"message"}
{"nick":"jasnell","message":"trying to get my head more around the problem that's being solved","date":"2016-08-11T15:22:19.841Z","type":"message"}
{"nick":"jasnell","message":"just to make sure I understand","date":"2016-08-11T15:24:39.004Z","type":"message"}
{"nick":"jasnell","message":"I want to use import to pull in some piece of js","date":"2016-08-11T15:24:47.480Z","type":"message"}
{"nick":"bradleymeck","message":"given `import(...)` I need tohave \"../\" \"./\" \"/\" resolve relative to current script, and \"@scope/module\" \"module\" resolve against current node_modules paths, we need to be able to accept `file://` / somehow resolve against process.cwd()","date":"2016-08-11T15:24:58.534Z","type":"message"}
{"nick":"jasnell","message":"if I do import('foo'), that would essentially be the same as require('foo') ... yes?","date":"2016-08-11T15:25:00.257Z","type":"message"}
{"nick":"bradleymeck","message":"ugg formatting","date":"2016-08-11T15:25:04.574Z","type":"message"}
{"nick":"bradleymeck","message":"1. need tohave \"../\" \"./\" \"/\" resolve relative to current script","date":"2016-08-11T15:25:18.526Z","type":"message"}
{"nick":"NickEU","date":"2016-08-11T15:25:23.502Z","type":"join"}
{"nick":"bradleymeck","message":"2. \"@scope/module\" \"module\" resolve against current node_modules paths","date":"2016-08-11T15:25:31.494Z","type":"message"}
{"nick":"bradleymeck","message":"3. need to be able to accept `file://` / somehow resolve against process.cwd() (those are todoish)","date":"2016-08-11T15:25:50.106Z","type":"message"}
{"nick":"bradleymeck","message":"jasnell: it would resolve essentially the same for that case yes","date":"2016-08-11T15:26:14.441Z","type":"message"}
{"nick":"jasnell","message":"ok","date":"2016-08-11T15:26:18.736Z","type":"message"}
{"nick":"jasnell","message":"so assume that current script is identified by an absolute file: URL","date":"2016-08-11T15:26:35.647Z","type":"message"}
{"nick":"bradleymeck","message":"k","date":"2016-08-11T15:26:48.568Z","type":"message"}
{"nick":"jasnell","message":"e.g. file:///some/path/to/script.js","date":"2016-08-11T15:26:50.232Z","type":"message"}
{"nick":"jasnell","message":"then ... new URL('../', 'file:///some/path/to/script.js') would resolve to 'file://some/path'","date":"2016-08-11T15:27:48.571Z","type":"message"}
{"nick":"bradleymeck","message":"correct","date":"2016-08-11T15:28:02.300Z","type":"message"}
{"nick":"jasnell","message":"new ('./', 'file:///some/path/to/script.js') would resolve to 'file://some/path/to'","date":"2016-08-11T15:28:19.345Z","type":"message"}
{"nick":"bradleymeck","message":"correct","date":"2016-08-11T15:28:43.665Z","type":"message"}
{"nick":"jasnell","message":"ok, so to get node_dir paths to resolve correctly, what we really need is something like:","date":"2016-08-11T15:30:09.212Z","type":"message"}
{"nick":"jasnell","message":"new URL('node:foo', 'file:///some/path/to/script.js')","date":"2016-08-11T15:30:27.563Z","type":"message"}
{"nick":"jasnell","message":"so the input needs to be prefixed with node: and resolved against the absolute url of the current script","date":"2016-08-11T15:31:00.165Z","type":"message"}
{"nick":"bradleymeck","message":"but what happens if people pass in `file:///foo`, we can't prefix that","date":"2016-08-11T15:31:32.797Z","type":"message"}
{"nick":"jasnell","message":"yeah... thinking...","date":"2016-08-11T15:32:00.000Z","type":"message"}
{"nick":"jasnell","message":"doing two separate URL parses may work...","date":"2016-08-11T15:33:33.966Z","type":"message"}
{"nick":"jasnell","message":"1. var i = new URL(input, 'node://')","date":"2016-08-11T15:33:48.123Z","type":"message"}
{"nick":"jasnell","message":"var r = new URL(i.href, currentScript)","date":"2016-08-11T15:34:02.977Z","type":"message"}
{"nick":"jasnell","message":"but that's ugly","date":"2016-08-11T15:34:24.488Z","type":"message"}
{"nick":"bradleymeck","message":"we would still need to save any `.?.?/` prefix for undoing the normalization though, right?","date":"2016-08-11T15:34:51.313Z","type":"message"}
{"nick":"bradleymeck","message":"`(.?.?/)+`","date":"2016-08-11T15:35:34.576Z","type":"message"}
{"nick":"jasnell","message":"perhaps simply: prefix input with 'node:' iff (a) it's not prefixed with a protocol, (b) it's first path segment is not a dot segment or double dot segment","date":"2016-08-11T15:35:48.011Z","type":"message"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2016-08-11T15:35:58.675Z","type":"quit"}
{"nick":"jasnell","message":"that doesn't quite capture enough... '%2e' == '.'","date":"2016-08-11T15:36:18.506Z","type":"message"}
{"nick":"zz_r04r","new_nick":"r04r","date":"2016-08-11T15:36:48.860Z","type":"nick"}
{"nick":"jasnell","message":"dot segment can be '.' or '%2e' or '%2E' ; double dot segment can be '..', '.%2e', '.%2E', '%2e.', or '%2E' ;-)","date":"2016-08-11T15:37:02.845Z","type":"message"}
{"nick":"bradleymeck","message":"are we going to want to translate %2e to . for paths though, right now that doesn't translate","date":"2016-08-11T15:37:04.422Z","type":"message"}
{"nick":"bradleymeck","message":"so you can load a dir/file in windows named %2e just fine","date":"2016-08-11T15:37:23.213Z","type":"message"}
{"nick":"jasnell","message":"translation happens automatically in whatwg url parsing","date":"2016-08-11T15:37:41.743Z","type":"message"}
{"nick":"jasnell","message":"there's no way to turn it off","date":"2016-08-11T15:37:45.976Z","type":"message"}
{"nick":"bradleymeck","message":"ffffuuuu","date":"2016-08-11T15:37:47.189Z","type":"message"}
{"nick":"jasnell","message":"new URL('http://path/%2e/foo') == http://path/foo","date":"2016-08-11T15:38:15.364Z","type":"message"}
{"nick":"bradleymeck","message":"imma just back away from using new URL at this point","date":"2016-08-11T15:38:51.258Z","type":"message"}
{"nick":"jasnell","message":"heh","date":"2016-08-11T15:38:56.196Z","type":"message"}
{"nick":"jasnell","message":";-)","date":"2016-08-11T15:38:57.658Z","type":"message"}
{"nick":"bradleymeck","message":"auto lossy behavior is bad","date":"2016-08-11T15:39:18.591Z","type":"message"}
{"nick":"jasnell","message":"no worries. I do think there's a way to make it work but it may not be pretty","date":"2016-08-11T15:39:18.874Z","type":"message"}
{"nick":"bradleymeck","message":"its lossy, not really looking to handle loss of precision caused by it","date":"2016-08-11T15:39:36.151Z","type":"message"}
{"nick":"bradleymeck","message":"thats just a can of worms","date":"2016-08-11T15:39:41.908Z","type":"message"}
{"nick":"jasnell","message":"it's possible to do but the URL's need to be escaped","date":"2016-08-11T15:40:19.539Z","type":"message"}
{"nick":"bradleymeck","message":"which would be vastly different from how things currently work","date":"2016-08-11T15:40:37.655Z","type":"message"}
{"nick":"jasnell","message":"it's possible to do path segments like '%2e' but they need to be pct-encoded... e.g. new URL('http://path/%252e/foo')","date":"2016-08-11T15:41:17.318Z","type":"message"}
{"nick":"bradleymeck","action":"needs to go grep npm again","date":"2016-08-11T15:41:29.318Z","type":"action"}
{"nick":"jasnell","message":"that would translate to the path '/%252e/foo' which is '%2e/foo'","date":"2016-08-11T15:41:44.143Z","type":"message"}
{"nick":"bradleymeck","message":"if we do go w/ breaking behavior, we need to figure out how to undo the auto-normalization","date":"2016-08-11T15:42:44.039Z","type":"message"}
{"nick":"bradleymeck","message":"trying to think what happens for `../../foo/../..` which should resolve to `../../..` for node's resolution algo","date":"2016-08-11T15:43:20.907Z","type":"message"}
{"nick":"jasnell","message":"the only way to do that would be to pct-encode the input prior to parsing","date":"2016-08-11T15:43:29.168Z","type":"message"}
{"nick":"bradleymeck","message":"but if we get passed a url already wouldn't that break things?","date":"2016-08-11T15:43:51.541Z","type":"message"}
{"nick":"jasnell","message":"new URL('../../foo/../..', 'file:///path/to/current/script.js') == file:///path/","date":"2016-08-11T15:44:22.489Z","type":"message"}
{"nick":"jasnell","message":"yes, because you cannot pct-encode a URL without breaking it","date":"2016-08-11T15:44:43.684Z","type":"message"}
{"nick":"jasnell","message":"so you'd have to know if it's already a URL or not","date":"2016-08-11T15:44:59.894Z","type":"message"}
{"nick":"bradleymeck","message":"\"To pop a url’s path, if url’s scheme is not \"file\" or url’s path does not contain a single string that is a normalized Windows drive letter, remove url’s path’s last string, if any.\"","date":"2016-08-11T15:45:10.009Z","type":"message"}
{"nick":"bradleymeck","message":"does that mean file urls don't normalize?","date":"2016-08-11T15:45:20.833Z","type":"message"}
{"nick":"bradleymeck","message":"chrome seems to normalize away","date":"2016-08-11T15:46:32.529Z","type":"message"}
{"nick":"ilbonte","reason":"Quit: Leaving","date":"2016-08-11T15:46:53.772Z","type":"quit"}
{"nick":"BridgeAR","reason":"Remote host closed the connection","date":"2016-08-11T15:49:11.263Z","type":"quit"}
{"nick":"BridgeAR","date":"2016-08-11T15:50:12.228Z","type":"join"}
{"nick":"jasnell","message":"file paths do normalize","date":"2016-08-11T15:50:17.831Z","type":"message"}
{"nick":"bradleymeck","message":"this spec text is confusing then","date":"2016-08-11T15:51:54.806Z","type":"message"}
{"nick":"jasnell","message":"heh, tell me about it","date":"2016-08-11T15:53:29.415Z","type":"message"}
{"nick":"jasnell","message":"implementing was \"fun\"","date":"2016-08-11T15:53:39.413Z","type":"message"}
{"nick":"bradleymeck","message":"path-state conflicts with that text if it really does normalize","date":"2016-08-11T15:53:57.971Z","type":"message"}
{"nick":"bradleymeck","message":"\"If buffer is a double-dot path segment, pop url’s path,\" should be a noop for file://","date":"2016-08-11T15:54:20.675Z","type":"message"}
{"nick":"bradleymeck","message":"is there a test for this behavior I can check somewhere?","date":"2016-08-11T15:54:52.059Z","type":"message"}
{"nick":"Lee1092","date":"2016-08-11T15:57:00.625Z","type":"join"}
{"nick":"bradleymeck","message":"asking in #whatwg","date":"2016-08-11T15:58:49.464Z","type":"message"}
