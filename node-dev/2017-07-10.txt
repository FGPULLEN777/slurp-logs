{"nick":"jfmercer","date":"2017-07-10T00:43:53.519Z","type":"join"}
{"nick":"jfmercer","reason":"Quit: jfmercer","date":"2017-07-10T01:12:15.036Z","type":"quit"}
{"nick":"Entanor","reason":"Read error: Connection reset by peer","date":"2017-07-10T01:51:47.115Z","type":"quit"}
{"nick":"Entanor","date":"2017-07-10T01:52:26.078Z","type":"join"}
{"nick":"reconbot","reason":"Quit: Connection closed for inactivity","date":"2017-07-10T03:11:31.406Z","type":"quit"}
{"nick":"snowkidind","reason":"Quit: astalaPIZZA Baby!","date":"2017-07-10T04:39:40.480Z","type":"quit"}
{"nick":"lpin","date":"2017-07-10T05:14:32.177Z","type":"join"}
{"nick":"joshontheweb","date":"2017-07-10T06:05:19.817Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T06:08:31.503Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T06:08:31.716Z","type":"part"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2017-07-10T06:29:19.789Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-07-10T06:44:17.533Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T06:44:17.705Z","type":"part"}
{"nick":"seishun","date":"2017-07-10T06:45:35.716Z","type":"join"}
{"nick":"indistylo","date":"2017-07-10T06:52:16.627Z","type":"join"}
{"nick":"indistylo","reason":"Max SendQ exceeded","date":"2017-07-10T06:52:51.419Z","type":"quit"}
{"nick":"indistylo","date":"2017-07-10T06:53:51.481Z","type":"join"}
{"nick":"howdoi","date":"2017-07-10T07:25:06.269Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 268 seconds","date":"2017-07-10T07:56:37.880Z","type":"quit"}
{"nick":"aruns","date":"2017-07-10T08:50:13.566Z","type":"join"}
{"nick":"indistylo","reason":"Ping timeout: 240 seconds","date":"2017-07-10T08:51:40.331Z","type":"quit"}
{"nick":"joyee","date":"2017-07-10T08:54:19.546Z","type":"join"}
{"nick":"BridgeAR1","date":"2017-07-10T08:56:51.620Z","type":"join"}
{"nick":"mylesborins","message":"is anyone still using valgrind?","date":"2017-07-10T09:58:28.266Z","type":"message"}
{"nick":"sgimeno","date":"2017-07-10T10:15:04.837Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-07-10T10:25:11.349Z","type":"quit"}
{"nick":"mylesborins","date":"2017-07-10T10:25:45.767Z","type":"join"}
{"nick":"evanlucas","date":"2017-07-10T10:27:13.324Z","type":"join"}
{"nick":"seishun","date":"2017-07-10T10:52:48.974Z","type":"join"}
{"nick":"joshontheweb","date":"2017-07-10T10:52:58.420Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 276 seconds","date":"2017-07-10T10:58:04.706Z","type":"quit"}
{"nick":"joshontheweb","reason":"Quit: Computer has gone to sleep.","date":"2017-07-10T11:02:15.320Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-07-10T11:04:57.235Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:04:57.407Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:05:07.706Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:05:07.878Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:06:12.225Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:06:12.397Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:08:52.043Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:08:52.254Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:09:38.509Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:09:38.682Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:10:56.152Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:10:56.345Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:12:29.258Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:12:29.430Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:12:39.359Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:12:39.530Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:13:59.258Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:13:59.430Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:14:07.369Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:14:07.369Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:15:28.548Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:15:28.719Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:16:32.112Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:16:32.285Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:16:39.345Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:16:39.516Z","type":"part"}
{"nick":"refack","message":"(testing out a GitHub feature) Did anyone get my cc via an edit to a comment in https://github.com/nodejs/node/pull/14059?","date":"2017-07-10T11:20:13.154Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-07-10T11:21:58.592Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:21:58.764Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:22:08.548Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:22:08.721Z","type":"part"}
{"nick":"BridgeAR1","new_nick":"BridgeAR","date":"2017-07-10T11:24:37.174Z","type":"nick"}
{"nick":"nodejs-gh","date":"2017-07-10T11:30:46.843Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:30:47.015Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:31:46.842Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:31:47.051Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T11:31:56.814Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T11:31:56.985Z","type":"part"}
{"nick":"targos","message":"refack: I don't think I got a notification","date":"2017-07-10T11:37:14.129Z","type":"message"}
{"nick":"refack","message":"Thanks","date":"2017-07-10T11:37:50.514Z","type":"message"}
{"nick":"evanlucas","message":"I didn't either","date":"2017-07-10T11:39:11.109Z","type":"message"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-07-10T11:49:22.409Z","type":"quit"}
{"nick":"joyee","reason":"Remote host closed the connection","date":"2017-07-10T12:23:46.226Z","type":"quit"}
{"nick":"joyee","date":"2017-07-10T12:24:22.188Z","type":"join"}
{"nick":"bradleymeck","date":"2017-07-10T12:28:49.252Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 260 seconds","date":"2017-07-10T12:29:03.145Z","type":"quit"}
{"nick":"aruns","reason":"Ping timeout: 240 seconds","date":"2017-07-10T12:38:35.539Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-07-10T12:39:05.500Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T12:39:05.711Z","type":"part"}
{"nick":"joyee","date":"2017-07-10T12:59:27.026Z","type":"join"}
{"nick":"joyee","reason":"Remote host closed the connection","date":"2017-07-10T13:04:42.626Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2017-07-10T13:24:32.349Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-07-10T13:29:14.202Z","type":"quit"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2017-07-10T13:55:41.623Z","type":"nick"}
{"nick":"d10n-work","date":"2017-07-10T13:56:34.516Z","type":"join"}
{"nick":"aruns","date":"2017-07-10T14:07:35.522Z","type":"join"}
{"nick":"addaleax","date":"2017-07-10T14:09:58.974Z","type":"join"}
{"nick":"joyee","date":"2017-07-10T14:14:36.874Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 240 seconds","date":"2017-07-10T14:18:57.852Z","type":"quit"}
{"nick":"aruns","reason":"Ping timeout: 240 seconds","date":"2017-07-10T14:22:08.508Z","type":"quit"}
{"nick":"snowkidind","date":"2017-07-10T14:23:13.614Z","type":"join"}
{"nick":"bradleymeck","date":"2017-07-10T14:30:25.652Z","type":"join"}
{"nick":"addaleax","reason":"Read error: Connection reset by peer","date":"2017-07-10T14:37:10.266Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-07-10T15:06:07.487Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T15:06:07.695Z","type":"part"}
{"nick":"evanlucas","message":"anyone around that could help debug a crash in c++?","date":"2017-07-10T15:12:11.827Z","type":"message"}
{"nick":"evanlucas","message":"https://gist.github.com/evanlucas/0440b3994482cdcc45d8c15367fe9f0d","date":"2017-07-10T15:12:15.067Z","type":"message"}
{"nick":"refack","message":"Well you probably know it's in https://github.com/couchbase/couchnode","date":"2017-07-10T15:14:04.494Z","type":"message"}
{"nick":"evanlucas","message":"yea","date":"2017-07-10T15:14:09.702Z","type":"message"}
{"nick":"evanlucas","message":"I'm aware of that at least","date":"2017-07-10T15:14:14.335Z","type":"message"}
{"nick":"refack","message":"Well it's trying to dereference an invalid pointer (`str`) L14 in your gist","date":"2017-07-10T15:19:08.006Z","type":"message"}
{"nick":"refack","message":"while trying to JSON encode a doc, I'm assuming you provided","date":"2017-07-10T15:20:31.135Z","type":"message"}
{"nick":"evanlucas","message":"yea","date":"2017-07-10T15:20:41.812Z","type":"message"}
{"nick":"evanlucas","message":"that is a Local<Value> I'm pretty sure","date":"2017-07-10T15:20:56.164Z","type":"message"}
{"nick":"refack","message":"I guessing something disposed or freed that string lower in the stack","date":"2017-07-10T15:25:18.775Z","type":"message"}
{"nick":"refack","message":"Is this a batch update?","date":"2017-07-10T15:25:28.091Z","type":"message"}
{"nick":"evanlucas","message":"nope","date":"2017-07-10T15:25:31.823Z","type":"message"}
{"nick":"refack","message":"It seems like there's a get -> replace -> store in the stack","date":"2017-07-10T15:25:55.877Z","type":"message"}
{"nick":"refack","message":"one of them is being irresponsible with that pointer","date":"2017-07-10T15:26:18.629Z","type":"message"}
{"nick":"evanlucas","message":"there is","date":"2017-07-10T15:26:23.969Z","type":"message"}
{"nick":"refack","message":"best tip I can give is put a breakpoint in https://github.com/couchbase/couchnode/blob/master/src/operations.cc#L214 and try to find out what is that string, then re-run and watch that pointer","date":"2017-07-10T15:29:40.430Z","type":"message"}
{"nick":"evanlucas","message":"alright, cool","date":"2017-07-10T15:31:09.858Z","type":"message"}
{"nick":"evanlucas","message":"thanks!","date":"2017-07-10T15:31:11.158Z","type":"message"}
{"nick":"refack","message":"My best guess is it's a userland bug in the `get` callback, setting something wonky on the doc","date":"2017-07-10T15:34:13.049Z","type":"message"}
{"nick":"joyee","date":"2017-07-10T15:34:21.018Z","type":"join"}
{"nick":"evanlucas","message":"so there is an object declared outside of callback in the get and inside the callback of the get, if I mutate that object, then the crash happens","date":"2017-07-10T15:35:27.122Z","type":"message"}
{"nick":"evanlucas","message":"but I can log the document and all that no problem","date":"2017-07-10T15:35:34.429Z","type":"message"}
{"nick":"evanlucas","message":"it's really weird","date":"2017-07-10T15:35:36.572Z","type":"message"}
{"nick":"refack","message":"indeed, so it's probably not being properly tracked and probably gets freed / GCed between when `get` returns and `store` invokes the callback. which off the top of my head sounds like a design bug since that path should be synchronous","date":"2017-07-10T15:38:45.292Z","type":"message"}
{"nick":"joyee","reason":"Ping timeout: 255 seconds","date":"2017-07-10T15:39:17.845Z","type":"quit"}
{"nick":"bradleymeck","message":"evanlucas: can you use llnode and `v8 inspect the_local` ?","date":"2017-07-10T15:39:39.457Z","type":"message"}
{"nick":"refack","message":"clone the doc in the JS side 🤷 Shrug ¯\\_(ツ)_/¯","date":"2017-07-10T15:39:51.455Z","type":"message"}
{"nick":"evanlucas","message":"yea, that is where I got that backtrace","date":"2017-07-10T15:40:00.999Z","type":"message"}
{"nick":"evanlucas","message":"everything I inspect shows <Smi: 32767>","date":"2017-07-10T15:41:06.315Z","type":"message"}
{"nick":"evanlucas","message":"well, all of the arguments to any of the encode functions anyways","date":"2017-07-10T15:41:21.443Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-07-10T15:45:56.503Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T15:45:56.675Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T15:46:26.990Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T15:46:27.162Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T15:46:57.016Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T15:46:57.187Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T15:47:22.020Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T15:47:22.190Z","type":"part"}
{"nick":"seishun","date":"2017-07-10T15:59:59.045Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-07-10T16:05:35.313Z","type":"quit"}
{"nick":"tniessen","date":"2017-07-10T16:10:13.420Z","type":"join"}
{"nick":"joyee","date":"2017-07-10T16:15:53.285Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 260 seconds","date":"2017-07-10T16:20:38.114Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-07-10T16:34:21.440Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T16:34:21.612Z","type":"part"}
{"nick":"tniessen_","date":"2017-07-10T16:36:50.709Z","type":"join"}
{"nick":"sebas1990","date":"2017-07-10T16:41:23.004Z","type":"join"}
{"nick":"tniessen","reason":"Quit: Leaving","date":"2017-07-10T16:41:51.893Z","type":"quit"}
{"nick":"sebas1990","reason":"Client Quit","date":"2017-07-10T16:42:47.482Z","type":"quit"}
{"nick":"tniessen_","reason":"Remote host closed the connection","date":"2017-07-10T16:44:24.252Z","type":"quit"}
{"nick":"tniessen","date":"2017-07-10T16:44:35.539Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T16:54:10.564Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T16:54:10.737Z","type":"part"}
{"nick":"bradleymeck","date":"2017-07-10T17:10:21.124Z","type":"join"}
{"nick":"jessicaquynh","date":"2017-07-10T17:35:30.013Z","type":"join"}
{"nick":"jessicaquynh","reason":"Ping timeout: 255 seconds","date":"2017-07-10T17:53:55.941Z","type":"quit"}
{"nick":"mscdex","message":"what's up with jenkins? i cannot access anything when logged in","date":"2017-07-10T17:56:40.875Z","type":"message"}
{"nick":"refack","message":"It's locked for the release until tomorrow morning","date":"2017-07-10T17:57:01.248Z","type":"message"}
{"nick":"refack","message":"https://github.com/nodejs/node/issues/14153","date":"2017-07-10T17:58:08.457Z","type":"message"}
{"nick":"jessicaquynh","date":"2017-07-10T17:59:56.823Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit:  ","date":"2017-07-10T18:05:46.731Z","type":"quit"}
{"nick":"lpin","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-07-10T18:09:55.630Z","type":"quit"}
{"nick":"joyee","date":"2017-07-10T18:11:40.866Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 240 seconds","date":"2017-07-10T18:16:09.935Z","type":"quit"}
{"nick":"indistylo","date":"2017-07-10T18:18:34.657Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T18:18:52.124Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T18:18:52.332Z","type":"part"}
{"nick":"Trott","message":"With CI closed off, it's a good day to continue Triage-athon 2017!","date":"2017-07-10T18:29:56.881Z","type":"message"}
{"nick":"jessicaquynh","reason":"Ping timeout: 240 seconds","date":"2017-07-10T18:33:57.813Z","type":"quit"}
{"nick":"jbergstroem","message":":]","date":"2017-07-10T18:55:10.837Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-07-10T18:59:15.134Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T18:59:15.343Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T18:59:21.969Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T18:59:22.141Z","type":"part"}
{"nick":"octetcloud","date":"2017-07-10T19:03:39.664Z","type":"join"}
{"nick":"octetcloud","message":"I seem to have lost permissions on jenkins, anyone know whats up? \"sam-github is missing the Overall/Read permission\"","date":"2017-07-10T19:04:26.247Z","type":"message"}
{"nick":"refack","message":"It's locked for the release until tomorrow morning","date":"2017-07-10T19:04:52.531Z","type":"message"}
{"nick":"refack","message":"13:58 https://github.com/nodejs/node/issues/14153","date":"2017-07-10T19:04:52.702Z","type":"message"}
{"nick":"refack","message":"*13:58 is copy&paste artifact and not supposed to be part of the message","date":"2017-07-10T19:05:28.647Z","type":"message"}
{"nick":"octetcloud","message":"got it, thanks","date":"2017-07-10T19:06:03.967Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-07-10T19:07:13.643Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T19:07:13.815Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T19:08:26.504Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T19:08:26.715Z","type":"part"}
{"nick":"indistylo","reason":"Ping timeout: 240 seconds","date":"2017-07-10T19:19:10.446Z","type":"quit"}
{"nick":"nodejs-gh","date":"2017-07-10T19:31:42.822Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T19:31:43.031Z","type":"part"}
{"nick":"lanceball","new_nick":"lance|afk","date":"2017-07-10T19:43:56.067Z","type":"nick"}
{"nick":"joyee","date":"2017-07-10T19:59:34.309Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 260 seconds","date":"2017-07-10T20:04:16.625Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 275 seconds","date":"2017-07-10T20:08:37.699Z","type":"quit"}
{"nick":"tniessen","message":"Has anyone experienced assertion failures in zlib recently? I don't really want to put too much time into it, but it is blocking me while working on the Windows installer... https://github.com/nodejs/node/issues/14161","date":"2017-07-10T20:14:21.125Z","type":"message"}
{"nick":"octetcloud","date":"2017-07-10T20:16:09.434Z","type":"join"}
{"nick":"onel0p3z","date":"2017-07-10T20:46:07.507Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T20:50:54.371Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T20:50:54.544Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T20:51:19.446Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T20:51:19.618Z","type":"part"}
{"nick":"nodejs-gh","date":"2017-07-10T20:51:52.775Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T20:51:52.948Z","type":"part"}
{"nick":"lance|afk","new_nick":"lanceball","date":"2017-07-10T20:59:53.028Z","type":"nick"}
{"nick":"seishun","reason":"Ping timeout: 260 seconds","date":"2017-07-10T21:03:32.487Z","type":"quit"}
{"nick":"Trott","message":"tniessen: Saw your issue, but I haven't seen that problem nor heard anyone else report it.","date":"2017-07-10T21:04:24.419Z","type":"message"}
{"nick":"tniessen","message":"Trott: addaleax already pinpointed a PR which seems to cause it, thanks :)","date":"2017-07-10T21:04:41.854Z","type":"message"}
{"nick":"Trott","message":"Oh, cool, great. I was going to suggest talking with her.","date":"2017-07-10T21:04:56.395Z","type":"message"}
{"nick":"refack","message":"Trott: do we have a deal with \"irccloud\"? It sure makes IRC as usable as Slack","date":"2017-07-10T21:05:15.386Z","type":"message"}
{"nick":"addaleax","date":"2017-07-10T21:05:41.979Z","type":"join"}
{"nick":"Trott","message":"No. jbergstroem shamed me into signing up with irccloud. We don't get a special deal.","date":"2017-07-10T21:06:00.374Z","type":"message"}
{"nick":"Trott","message":"Also: Thanks to whoever else is going around closing issues that can be closed.","date":"2017-07-10T21:06:19.597Z","type":"message"}
{"nick":"tniessen","message":"I just setup ZNC as an IRC bouncer on a VPS today...","date":"2017-07-10T21:06:35.321Z","type":"message"}
{"nick":"Trott","message":"We're down to 972 open PRs and issues and I don't know the last time we've been that far under 1000. :-D","date":"2017-07-10T21:06:46.920Z","type":"message"}
{"nick":"refack","message":"I won't be surprised if irccloud runs on Node.js 😉","date":"2017-07-10T21:06:57.755Z","type":"message"}
{"nick":"al-damiri","date":"2017-07-10T21:11:48.118Z","type":"join"}
{"nick":"Trott","message":"Judging from https://github.com/irccloud, doesn't look like it. Looks like they use a lot of Erlang and Ruby.","date":"2017-07-10T21:19:26.003Z","type":"message"}
{"nick":"refack","message":"Well the desktop App is Electron","date":"2017-07-10T21:20:09.285Z","type":"message"}
{"nick":"john51","reason":"Ping timeout: 240 seconds","date":"2017-07-10T21:20:48.520Z","type":"quit"}
{"nick":"Trott","message":"Judging from the README, it's just a wrapper for the website and looks like an experiment, not something they've released.","date":"2017-07-10T21:20:57.393Z","type":"message"}
{"nick":"Trott","message":"But that could change, I suppose. Happy to see 'em messing around with it.","date":"2017-07-10T21:21:23.947Z","type":"message"}
{"nick":"refack","message":"Mind if I reach out?","date":"2017-07-10T21:21:29.567Z","type":"message"}
{"nick":"john51","date":"2017-07-10T21:22:02.267Z","type":"join"}
{"nick":"refack","message":"To them and ask for a license for the org?","date":"2017-07-10T21:22:27.735Z","type":"message"}
{"nick":"john51","reason":"Read error: Connection reset by peer","date":"2017-07-10T21:23:44.104Z","type":"quit"}
{"nick":"Trott","message":"I'd ask the TSC (of which I'm not a member). Not sure if you'd need their authority or the Foundation's, but they would know.","date":"2017-07-10T21:24:08.342Z","type":"message"}
{"nick":"Trott","message":"ETOOMANYCOMMITTEES","date":"2017-07-10T21:24:22.070Z","type":"message"}
{"nick":"refack","message":"Yeah or comm-com","date":"2017-07-10T21:24:37.920Z","type":"message"}
{"nick":"Trott","message":"Wouldn't be CommComm. Wouldn't be CTC. That I'm pretty confident about.","date":"2017-07-10T21:25:19.767Z","type":"message"}
{"nick":"Trott","message":"TSC sometimes handles money stuff (when they've been given a budget by the board) and sometimes relationships. But sometimes that stuff is handled by the Foundation and I'm not sure where the line is drawn. Probably defaults to Foundation unless explicitly delegated to the TSC, but I'd ask the TSC anyway.","date":"2017-07-10T21:26:04.878Z","type":"message"}
{"nick":"addaleax","message":"I think CommComm might not be too far off, they are the ones that took charge of the IRC vs Slack vs Whatnot debate","date":"2017-07-10T21:26:57.969Z","type":"message"}
{"nick":"john51","date":"2017-07-10T21:27:01.673Z","type":"join"}
{"nick":"addaleax","message":"but I still agree that it’s probably best to open an issue on the TSC repo","date":"2017-07-10T21:27:08.037Z","type":"message"}
{"nick":"octetcloud","message":"refack: how smart is the windows build at detecting config flags have changed? do I have to (manually) delete everything with git clean and rebuild from scratch if I change any of the .gypi files, for example? or will the project files be regenerated?","date":"2017-07-10T21:39:15.346Z","type":"message"}
{"nick":"octetcloud","message":"Its brutally slow buildling ,but I'm getting results that indicate I might need to wipe-and-rebuild :-(","date":"2017-07-10T21:39:38.307Z","type":"message"}
{"nick":"refack","message":"Well it's complicated...","date":"2017-07-10T21:40:11.901Z","type":"message"}
{"nick":"tniessen","message":"I had similar problems in the past...","date":"2017-07-10T21:40:12.119Z","type":"message"}
{"nick":"refack","message":"Git checkout doesn't change timestamps predictively","date":"2017-07-10T21:40:55.653Z","type":"message"}
{"nick":"refack","message":"And VS is BS","date":"2017-07-10T21:41:07.680Z","type":"message"}
{"nick":"refack","message":"You might try ninja","date":"2017-07-10T21:41:23.560Z","type":"message"}
{"nick":"octetcloud","message":"ninja on Windows?","date":"2017-07-10T21:42:00.794Z","type":"message"}
{"nick":"octetcloud","message":"that would be clearer to me, its more readable, but I didn't know it was supported","date":"2017-07-10T21:42:25.340Z","type":"message"}
{"nick":"refack","message":"In principle ./configure regenerates all the project files","date":"2017-07-10T21:42:28.387Z","type":"message"}
{"nick":"snowkidind","reason":"Remote host closed the connection","date":"2017-07-10T21:42:39.289Z","type":"quit"}
{"nick":"refack","message":"Yes might need a patch I have a PR for it","date":"2017-07-10T21:42:57.010Z","type":"message"}
{"nick":"refack","message":"https://github.com/nodejs/node/pull/12632","date":"2017-07-10T21:43:46.388Z","type":"message"}
{"nick":"refack","message":"and you need to run `python configure  --dest-cpu=x64 --tag= --ninja`","date":"2017-07-10T21:44:27.689Z","type":"message"}
{"nick":"refack","message":"Vcbuild.bat doesn't support it yet","date":"2017-07-10T21:45:07.135Z","type":"message"}
{"nick":"trevnorris","message":"refack addaleax: question: running timers.enroll() on an object that's already been enroll()'d calls unenroll() on the object.","date":"2017-07-10T21:58:06.422Z","type":"message"}
{"nick":"trevnorris","message":"IMO there's no need to run init() and destroy() on the object again. thoughts?","date":"2017-07-10T21:58:06.595Z","type":"message"}
{"nick":"addaleax","message":"I think I agree but I’m not sure, what’s the use case? Do people actually do that? And: Do enough people do that so that we actually should worry about it?","date":"2017-07-10T21:59:47.403Z","type":"message"}
{"nick":"Fishrock123","date":"2017-07-10T21:59:49.786Z","type":"join"}
{"nick":"Fishrock123","message":"someone (trevor) summoned my for ~timers stuff~ ... what's up?","date":"2017-07-10T21:59:59.785Z","type":"message"}
{"nick":"addaleax","message":"I mean, 99.99 % of timers usage is single calls to set*() and that’s it","date":"2017-07-10T22:00:13.464Z","type":"message"}
{"nick":"Fishrock123","message":"oh lol it was trevor asking","date":"2017-07-10T22:01:02.137Z","type":"message"}
{"nick":"addaleax","message":"sorry, I was replying to him :D","date":"2017-07-10T22:01:17.687Z","type":"message"}
{"nick":"trevnorris","message":"addaleax: it's a logic path in enroll() so have to account for it. :-(","date":"2017-07-10T22:01:24.863Z","type":"message"}
{"nick":"addaleax","message":"trevnorris: if the alternative is destroy + init, is there any harm in that?","date":"2017-07-10T22:01:43.759Z","type":"message"}
{"nick":"Fishrock123","message":"so, enroll() shouldn't call init because it does not interact with a handle","date":"2017-07-10T22:01:53.786Z","type":"message"}
{"nick":"addaleax","message":"basically, i think whatever makes the simplest code is best","date":"2017-07-10T22:01:55.304Z","type":"message"}
{"nick":"Fishrock123","message":"imo","date":"2017-07-10T22:02:10.095Z","type":"message"}
{"nick":"trevnorris","message":"addaleax: it will break a graph. e.g. if a timeout was set by the server, but then re-enrolled then that'll be a gap.","date":"2017-07-10T22:02:34.048Z","type":"message"}
{"nick":"Fishrock123","message":"you could enroll and do nothing forever - is that an async resource though?","date":"2017-07-10T22:02:34.772Z","type":"message"}
{"nick":"Fishrock123","message":"(imo, still no)","date":"2017-07-10T22:02:39.422Z","type":"message"}
{"nick":"trevnorris","message":"Fishrock123: yes. it's (in my PR) the same for net.Socket. we assign it early then can pass the async_id to the handle upon creation.","date":"2017-07-10T22:03:14.684Z","type":"message"}
{"nick":"trevnorris","message":"gets around a lot of edge cases that were causing us trouble","date":"2017-07-10T22:03:25.513Z","type":"message"}
{"nick":"trevnorris","message":"timers are even more of a special case b/c a timer can have an async_id, but aren't actually async themselves b/c the TimerWrap they're attached to has it's own async_id","date":"2017-07-10T22:04:18.932Z","type":"message"}
{"nick":"refack","message":"So the metaphor is we extend the time out, not destroy/recreate...","date":"2017-07-10T22:04:36.601Z","type":"message"}
{"nick":"trevnorris","message":"refack: pretty much. just like we can use the same socket to make multiple calls","date":"2017-07-10T22:05:53.786Z","type":"message"}
{"nick":"trevnorris","message":"(socket resource, not fd)","date":"2017-07-10T22:06:09.992Z","type":"message"}
{"nick":"Fishrock123","message":"trevnorris: you said a PR, is this code somewhere?","date":"2017-07-10T22:06:11.175Z","type":"message"}
{"nick":"refack","message":"That makes sense as long it fires most once","date":"2017-07-10T22:06:42.905Z","type":"message"}
{"nick":"trevnorris","message":"close. think this is the last of the edge cases in lib/timers.","date":"2017-07-10T22:06:57.820Z","type":"message"}
{"nick":"refack","message":"*at most","date":"2017-07-10T22:07:15.294Z","type":"message"}
{"nick":"refack","message":"And destroyed once","date":"2017-07-10T22:07:31.068Z","type":"message"}
{"nick":"Fishrock123","message":"you are not guaranteed that though","date":"2017-07-10T22:08:18.486Z","type":"message"}
{"nick":"Fishrock123","message":"you could re-activate it","date":"2017-07-10T22:08:23.659Z","type":"message"}
{"nick":"Fishrock123","message":"i, too, wish this API did not exist, fwiw","date":"2017-07-10T22:08:34.227Z","type":"message"}
{"nick":"refack","message":"In any case, I'm with addaleax, if it's simpler to destroy/init, that works as well","date":"2017-07-10T22:09:36.041Z","type":"message"}
{"nick":"trevnorris","message":"refack: it'll fire init/destroy if the user manually calls enroll()/unenroll() multiple times on the same object, but that's defined by the user.","date":"2017-07-10T22:09:56.308Z","type":"message"}
{"nick":"trevnorris","message":"my question is whether we should cover that up for internal changes to the object.","date":"2017-07-10T22:09:56.539Z","type":"message"}
{"nick":"refack","message":"re-activate is like a keepalive socket, we'll need to asyncReset","date":"2017-07-10T22:09:59.174Z","type":"message"}
{"nick":"refack","message":"trevnorris: if it doesn't require jumping through hoops, and fits with the \"timeout extended\" metaphor. I think so","date":"2017-07-10T22:11:02.455Z","type":"message"}
{"nick":"octetcloud","message":"refack: vsbuild now tells me every time I run it that \"Found Visual Studio 2015.\\nThe input line is too long.\\nThe syntax of the command is incorrect.\" I'm baffled. Any idea what's wrong? Any tips to figuring out wtf its talking about?","date":"2017-07-10T22:11:08.223Z","type":"message"}
{"nick":"octetcloud","message":"I'm also trying out ninja in parallel.","date":"2017-07-10T22:11:16.432Z","type":"message"}
{"nick":"refack","message":"bug in VS2015 fixed in https://github.com/nodejs/node/pull/13806","date":"2017-07-10T22:12:30.642Z","type":"message"}
{"nick":"refack","message":"VS2015's vcvarsall is not idempotent so it keep extending %Path% until it suffocates","date":"2017-07-10T22:13:30.474Z","type":"message"}
{"nick":"refack","message":"if you don't want to rebase, just close the console and open a new one","date":"2017-07-10T22:14:20.275Z","type":"message"}
{"nick":"Fishrock123","message":"trevnorris: fair warning, the api currently accepts active()-ating an object that is set up properly without enrolling it","date":"2017-07-10T22:15:32.405Z","type":"message"}
{"nick":"Fishrock123","message":"maybe we really should just deprecate this thing","date":"2017-07-10T22:15:42.683Z","type":"message"}
{"nick":"trevnorris","message":"Fishrock123: you're shitting me... thanks for the warning.","date":"2017-07-10T22:16:08.463Z","type":"message"}
{"nick":"Fishrock123","message":"no i am not","date":"2017-07-10T22:16:20.048Z","type":"message"}
{"nick":"Fishrock123","message":"it was built very flexibly","date":"2017-07-10T22:16:30.876Z","type":"message"}
{"nick":"Fishrock123","message":"again, no handle interaction is done whatsoever until active()","date":"2017-07-10T22:16:45.986Z","type":"message"}
{"nick":"trevnorris","message":"but using only active() doesn't give us enough information about when destroy() can be called.","date":"2017-07-10T22:17:26.751Z","type":"message"}
{"nick":"Fishrock123","message":"it doesn't?","date":"2017-07-10T22:17:42.013Z","type":"message"}
{"nick":"Fishrock123","message":"destroy after it is called or canceled","date":"2017-07-10T22:17:52.296Z","type":"message"}
{"nick":"Fishrock123","message":"I guess that doesn't fit the \"interval\" model","date":"2017-07-10T22:18:11.841Z","type":"message"}
{"nick":"trevnorris","message":"in that case it needs to call destroyed if it throws and the exception is handled by _fatalException","date":"2017-07-10T22:18:38.873Z","type":"message"}
{"nick":"Fishrock123","message":"after it is called, yes I would think so","date":"2017-07-10T22:19:01.238Z","type":"message"}
{"nick":"deep-book-gk_","date":"2017-07-10T22:21:20.045Z","type":"join"}
{"nick":"deep-book-gk_","date":"2017-07-10T22:23:05.802Z","type":"part"}
{"nick":"trevnorris","message":"okay. it's the same with a new net.Socket. if connect() is run multiple times it's assigned a new async_id each time.","date":"2017-07-10T22:25:26.557Z","type":"message"}
{"nick":"trevnorris","message":"Fishrock123: my original reasoning is b/c a user could use enroll to create an object then fire it like a setInterval()","date":"2017-07-10T22:25:47.639Z","type":"message"}
{"nick":"trevnorris","message":"and we wouldn't want to reset the async_id every time for that.","date":"2017-07-10T22:25:55.888Z","type":"message"}
{"nick":"Fishrock123","message":"they could","date":"2017-07-10T22:27:11.871Z","type":"message"}
{"nick":"Fishrock123","message":"but we have no way to know","date":"2017-07-10T22:27:20.051Z","type":"message"}
{"nick":"trevnorris","message":"if i'm using enroll() to create a timer object, would you expect init() to be called on enroll() or active()?","date":"2017-07-10T22:27:57.139Z","type":"message"}
{"nick":"trevnorris","message":"imo enroll() makes more sense... but i'm loosing interest in small technicalities at this point","date":"2017-07-10T22:28:24.225Z","type":"message"}
{"nick":"refack","message":"How? Call activate again on each callback?","date":"2017-07-10T22:28:26.749Z","type":"message"}
{"nick":"trevnorris","message":"refack: yup","date":"2017-07-10T22:28:32.465Z","type":"message"}
{"nick":"Fishrock123","message":"enroll(0 does basically nothing as shouldn't even exist","date":"2017-07-10T22:28:48.573Z","type":"message"}
{"nick":"trevnorris","message":"hah. okay. so we'll go that route.","date":"2017-07-10T22:29:04.371Z","type":"message"}
{"nick":"refack","message":"We can know it from the trigerID","date":"2017-07-10T22:29:40.511Z","type":"message"}
{"nick":"Fishrock123","message":"true","date":"2017-07-10T22:29:54.267Z","type":"message"}
{"nick":"Fishrock123","message":"the object will have an id if it was enrolled before so then you could treat it as an interval I guess","date":"2017-07-10T22:30:12.014Z","type":"message"}
{"nick":"refack","message":"Or at least assume","date":"2017-07-10T22:30:18.132Z","type":"message"}
{"nick":"Fishrock123","message":"idk that seems more confusing","date":"2017-07-10T22:30:19.170Z","type":"message"}
{"nick":"trevnorris","message":"okay. i'll treat these as requests, not handles. reason i was treating them as handles is b/c actual handles can be passed in.","date":"2017-07-10T22:31:04.207Z","type":"message"}
{"nick":"refack","message":"Yeah the callback is userland, and a new call to activate is a new asyncContext imho","date":"2017-07-10T22:31:57.129Z","type":"message"}
{"nick":"trevnorris","message":"cool. back to timers","date":"2017-07-10T22:32:23.419Z","type":"message"}
{"nick":"refack","message":"Requests sounds right","date":"2017-07-10T22:32:28.666Z","type":"message"}
{"nick":"trevnorris","message":"Fishrock123: the same reasoning applies for _unrefActive() as it does for active(), correct? then the logic will go into insert().","date":"2017-07-10T22:33:18.272Z","type":"message"}
{"nick":"Fishrock123","message":"idk I don't really care as much as I used to but this is what always made sense to me","date":"2017-07-10T22:33:35.037Z","type":"message"}
{"nick":"trevnorris","message":"thank you coding gods we don't expose insert()","date":"2017-07-10T22:33:40.123Z","type":"message"}
{"nick":"Fishrock123","message":"trevnorris: yeah that's why I originally directed it to insert","date":"2017-07-10T22:33:48.246Z","type":"message"}
{"nick":"trevnorris","message":"k","date":"2017-07-10T22:33:55.281Z","type":"message"}
{"nick":"Fishrock123","message":"i mean","date":"2017-07-10T22:33:55.655Z","type":"message"}
{"nick":"Fishrock123","message":"we basically do","date":"2017-07-10T22:33:58.469Z","type":"message"}
{"nick":"Fishrock123","message":"since active just proxies to it","date":"2017-07-10T22:34:08.196Z","type":"message"}
{"nick":"trevnorris","message":"wow. we really don't care what is passed in. anything that can hold a property.","date":"2017-07-10T22:35:06.163Z","type":"message"}
{"nick":"Fishrock123","message":"correct","date":"2017-07-10T22:35:13.671Z","type":"message"}
{"nick":"trevnorris","message":"Fishrock123: heh. so if you use active() on an object, then change _idleTimeout and run active() on that object again it doesn't cancel the previous TimerWrap.","date":"2017-07-10T22:41:04.704Z","type":"message"}
{"nick":"trevnorris","message":"so it'll fire but then call nothing b/c the timer was removed from the list","date":"2017-07-10T22:41:04.876Z","type":"message"}
{"nick":"Fishrock123","message":"how about","date":"2017-07-10T22:41:57.457Z","type":"message"}
{"nick":"Fishrock123","message":"lets not think about that one","date":"2017-07-10T22:42:01.963Z","type":"message"}
{"nick":"refack","message":",🤣","date":"2017-07-10T22:42:15.968Z","type":"message"}
{"nick":"addaleax","reason":"Remote host closed the connection","date":"2017-07-10T22:42:48.418Z","type":"quit"}
{"nick":"trevnorris","message":"Fishrock123: should it be removed from the other TimerWrap, or just sweep it under the rug?","date":"2017-07-10T22:43:55.715Z","type":"message"}
{"nick":"Fishrock123","message":"onTimeout should probably detect that and ignore it","date":"2017-07-10T22:45:01.413Z","type":"message"}
{"nick":"trevnorris","message":"it detects the list is empty and returns early, but shouldn't the TimerWrap instance be closed if all items from its list are removed?","date":"2017-07-10T22:46:30.274Z","type":"message"}
{"nick":"trevnorris","message":"otherwise the loop stops then calls into JS for no reason","date":"2017-07-10T22:46:42.491Z","type":"message"}
{"nick":"Fishrock123","message":"I suppose yeah","date":"2017-07-10T22:47:17.452Z","type":"message"}
{"nick":"octetcloud","message":"refack: was that `--tag= --ninja` or `--tag=--ninja` (note the space difference)?","date":"2017-07-10T22:50:44.459Z","type":"message"}
{"nick":"refack","message":"With the space","date":"2017-07-10T22:51:18.413Z","type":"message"}
{"nick":"trevnorris","message":"net.Socket() assigns an async_id early to get around edge cases calling instance methods, but init() isn't called until the TCPWrap is constructed.","date":"2017-07-10T22:57:17.361Z","type":"message"}
{"nick":"trevnorris","message":"problem is running socket.setTimeout() calls active() and would either","date":"2017-07-10T22:57:17.533Z","type":"message"}
{"nick":"trevnorris","message":"1) call before/after w/o any init()","date":"2017-07-10T22:57:17.534Z","type":"message"}
{"nick":"trevnorris","message":"2) call init, but would its type would be Timout","date":"2017-07-10T22:57:17.534Z","type":"message"}
{"nick":"trevnorris","message":"how about we just don't call the timeout callback if the freaking socket isn't connected to anything?","date":"2017-07-10T22:57:33.059Z","type":"message"}
{"nick":"trevnorris","message":"Fishrock123: ^","date":"2017-07-10T22:57:49.921Z","type":"message"}
{"nick":"refack","message":"I'm pro","date":"2017-07-10T22:58:40.692Z","type":"message"}
{"nick":"Fishrock123","message":"trevnorris: that too, seems like a good idea","date":"2017-07-10T23:00:15.356Z","type":"message"}
{"nick":"refack","message":"But as I understand that's a special case. Or you want to do this when ever there's no handle","date":"2017-07-10T23:00:16.974Z","type":"message"}
{"nick":"Fishrock123","message":"unless","date":"2017-07-10T23:00:38.728Z","type":"message"}
{"nick":"Fishrock123","message":"it is supposed to work like that? I actually have no idea","date":"2017-07-10T23:00:48.287Z","type":"message"}
{"nick":"trevnorris","message":"i'm writing a patch and running it through tests. hopefully nothing will fail.","date":"2017-07-10T23:01:43.894Z","type":"message"}
{"nick":"trevnorris","message":"so it's not documented anywhere, but two tests fail. though not b/c that functionality is being tested. but as a side effect","date":"2017-07-10T23:04:56.045Z","type":"message"}
{"nick":"refack","message":"Do a PR and we'll run  citgm","date":"2017-07-10T23:06:03.427Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-07-10T23:06:56.898Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T23:06:57.107Z","type":"part"}
{"nick":"trevnorris","message":"refack: good idea. thanks.","date":"2017-07-10T23:07:06.661Z","type":"message"}
{"nick":"nodejs-gh","date":"2017-07-10T23:07:08.454Z","type":"join"}
{"nick":"nodejs-gh","date":"2017-07-10T23:07:08.627Z","type":"part"}
{"nick":"trevnorris","message":"is jenkins down?","date":"2017-07-10T23:14:13.369Z","type":"message"}
{"nick":"mylesborins","message":"closed for security release","date":"2017-07-10T23:14:43.086Z","type":"message"}
{"nick":"mylesborins","message":"will be back tomorrow","date":"2017-07-10T23:14:47.118Z","type":"message"}
{"nick":"snowkidind","date":"2017-07-10T23:23:25.843Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-07-10T23:35:34.634Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-07-10T23:36:17.115Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-07-10T23:36:23.852Z","type":"quit"}
