{"nick":"AtumT__","date":"2018-02-08T00:00:50.976Z","type":"join"}
{"nick":"AtumT","reason":"Read error: Connection reset by peer","date":"2018-02-08T00:00:59.315Z","type":"quit"}
{"nick":"AtumT_","reason":"Ping timeout: 240 seconds","date":"2018-02-08T00:04:10.736Z","type":"quit"}
{"nick":"AtumT__","reason":"Remote host closed the connection","date":"2018-02-08T00:24:00.491Z","type":"quit"}
{"nick":"apapirovski","date":"2018-02-08T00:40:49.746Z","type":"join"}
{"nick":"qard","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2018-02-08T00:44:00.875Z","type":"quit"}
{"nick":"marthinal","date":"2018-02-08T00:45:10.202Z","type":"join"}
{"nick":"marthinal","reason":"Ping timeout: 260 seconds","date":"2018-02-08T00:49:45.094Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-02-08T01:23:59.743Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-02-08T01:23:59.823Z","type":"part"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 256 seconds","date":"2018-02-08T01:33:53.426Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-02-08T01:50:00.498Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-02-08T01:50:00.567Z","type":"part"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-02-08T01:53:09.686Z","type":"quit"}
{"nick":"gabrielschulhof","date":"2018-02-08T02:01:34.890Z","type":"join"}
{"nick":"d10n-work","date":"2018-02-08T02:21:09.973Z","type":"join"}
{"nick":"not-an-aardvark","date":"2018-02-08T02:34:39.833Z","type":"join"}
{"nick":"BridgeAR","reason":"Ping timeout: 255 seconds","date":"2018-02-08T02:40:47.857Z","type":"quit"}
{"nick":"apapirovski","reason":"Remote host closed the connection","date":"2018-02-08T03:03:10.757Z","type":"quit"}
{"nick":"apapirovski","date":"2018-02-08T03:23:11.208Z","type":"join"}
{"nick":"weswigham-droid","date":"2018-02-08T03:31:51.248Z","type":"join"}
{"nick":"ChALkeR","reason":"Quit: Konversation terminated!","date":"2018-02-08T03:42:06.423Z","type":"quit"}
{"nick":"ChALkeR","date":"2018-02-08T03:42:19.710Z","type":"join"}
{"nick":"weswigham-droid","message":"So @devsnek, could we implement https://github.com/nodejs/node/pull/18131#issuecomment-363652546 as a custom loader so it can be exposed for users and node's internally invested in per-package custom loaders?","date":"2018-02-08T03:43:05.974Z","type":"message"}
{"nick":"devsnek","message":"sure, i already have a mock package loader for it","date":"2018-02-08T03:43:24.714Z","type":"message"}
{"nick":"devsnek","message":"designed to be shipped around on npm","date":"2018-02-08T03:43:37.029Z","type":"message"}
{"nick":"devsnek","message":"i was actually planning to release it once loader hooks are finalized","date":"2018-02-08T03:44:08.674Z","type":"message"}
{"nick":"devsnek","message":"to the bigger topic though","date":"2018-02-08T03:44:39.813Z","type":"message"}
{"nick":"devsnek","message":"if we include one loader helper in node","date":"2018-02-08T03:44:49.297Z","type":"message"}
{"nick":"devsnek","message":"no matter how useful or wanted it is","date":"2018-02-08T03:44:53.742Z","type":"message"}
{"nick":"devsnek","message":"that seems pretty arbitrary","date":"2018-02-08T03:45:05.989Z","type":"message"}
{"nick":"devsnek","message":"the same way we don't expose our linked list implementation","date":"2018-02-08T03:45:15.879Z","type":"message"}
{"nick":"weswigham-droid","message":"Is it? Both cjs and esm are in node. The tool for adapting between them being there seems like it fits.","date":"2018-02-08T03:45:50.555Z","type":"message"}
{"nick":"ljharb","message":"devsnek: if you're trying to come up with a way for packages to be forced to use a custom loader if they want interop, at a minimum, that loader would need to be exposed in node, imo","date":"2018-02-08T03:45:53.417Z","type":"message"}
{"nick":"ljharb","message":"(I still think default interop is the best solution)","date":"2018-02-08T03:46:04.664Z","type":"message"}
{"nick":"devsnek","message":"its not forced","date":"2018-02-08T03:46:08.914Z","type":"message"}
{"nick":"devsnek","message":"i think anyone sane would prefer to provide a index.mjs","date":"2018-02-08T03:46:35.211Z","type":"message"}
{"nick":"devsnek","message":"this method adds a lot of overhead","date":"2018-02-08T03:47:22.644Z","type":"message"}
{"nick":"weswigham-droid","message":"That'd still be a choice, but I think providing the tools for a smooth transition is important","date":"2018-02-08T03:47:31.931Z","type":"message"}
{"nick":"devsnek","message":"i think adding a mjs is pretty smooth","date":"2018-02-08T03:47:55.004Z","type":"message"}
{"nick":"weswigham-droid","message":"And maintaining a facade is a continuous maintenance burden","date":"2018-02-08T03:48:02.053Z","type":"message"}
{"nick":"devsnek","message":"it also paves the way to start adding more and more mjs to your code","date":"2018-02-08T03:48:02.909Z","type":"message"}
{"nick":"devsnek","message":"once you have one file","date":"2018-02-08T03:48:09.377Z","type":"message"}
{"nick":"weswigham-droid","message":"That you have to continue to revise with your public api","date":"2018-02-08T03:48:25.009Z","type":"message"}
{"nick":"weswigham-droid","message":"Which you'd not have to do with a loader.","date":"2018-02-08T03:48:35.841Z","type":"message"}
{"nick":"devsnek","message":"people have to do that anyway","date":"2018-02-08T03:48:40.910Z","type":"message"}
{"nick":"apapirovski","reason":"Remote host closed the connection","date":"2018-02-08T03:48:57.836Z","type":"quit"}
{"nick":"weswigham-droid","message":"But not two of them, nor t","date":"2018-02-08T03:48:57.837Z","type":"message"}
{"nick":"weswigham-droid","message":"Nor do they have to ensure two of them match","date":"2018-02-08T03:49:08.281Z","type":"message"}
{"nick":"devsnek","message":"its not really that hard","date":"2018-02-08T03:49:15.316Z","type":"message"}
{"nick":"devsnek","message":"i think you're being unfair","date":"2018-02-08T03:49:18.626Z","type":"message"}
{"nick":"weswigham-droid","message":"I mean, any problem can be worked through with more tools and effort","date":"2018-02-08T03:49:55.004Z","type":"message"}
{"nick":"weswigham-droid","message":"But I don't think it being possible is an execute for not making it simpler","date":"2018-02-08T03:50:17.924Z","type":"message"}
{"nick":"weswigham-droid","message":"*excuse","date":"2018-02-08T03:50:23.580Z","type":"message"}
{"nick":"devsnek","message":"my personal position on node in general","date":"2018-02-08T03:51:12.735Z","type":"message"}
{"nick":"devsnek","message":"is that it should do as little as possible","date":"2018-02-08T03:51:35.302Z","type":"message"}
{"nick":"devsnek","message":"if that makes sense","date":"2018-02-08T03:51:39.788Z","type":"message"}
{"nick":"devsnek","message":"kind of like why we defer to userland for the PROXY protocol","date":"2018-02-08T03:52:21.421Z","type":"message"}
{"nick":"weswigham-droid","message":"Node was made to bundle up lots of disparate io functionality and make it easy to use; IMO usability of core APIs is a founding principle","date":"2018-02-08T03:52:26.870Z","type":"message"}
{"nick":"weswigham-droid","message":"Of which es modules are a part ;)","date":"2018-02-08T03:52:42.675Z","type":"message"}
{"nick":"devsnek","message":"in my eyes the feature isn't needed in core","date":"2018-02-08T03:52:46.266Z","type":"message"}
{"nick":"devsnek","message":"to make it usable","date":"2018-02-08T03:52:53.549Z","type":"message"}
{"nick":"devsnek","message":"i guess thats where we differ","date":"2018-02-08T03:52:57.888Z","type":"message"}
{"nick":"devsnek","message":"a lot of users also say that node isn't usable with lodash","date":"2018-02-08T03:53:08.103Z","type":"message"}
{"nick":"devsnek","message":"well more like all of javascript","date":"2018-02-08T03:53:17.346Z","type":"message"}
{"nick":"devsnek","message":"but i think the point fits","date":"2018-02-08T03:53:20.429Z","type":"message"}
{"nick":"weswigham-droid","message":"But, like, you're using the functionality _in core_","date":"2018-02-08T03:53:30.090Z","type":"message"}
{"nick":"weswigham-droid","message":"That's a demonstration that it's useful","date":"2018-02-08T03:53:40.254Z","type":"message"}
{"nick":"devsnek","message":"we also use linked lists and websockets _in core_","date":"2018-02-08T03:53:40.511Z","type":"message"}
{"nick":"devsnek","message":"they are defo useful","date":"2018-02-08T03:53:48.400Z","type":"message"}
{"nick":"devsnek","message":"but we don't expose them","date":"2018-02-08T03:53:51.624Z","type":"message"}
{"nick":"devsnek","message":"to be honest two months ago i would have agreed with you on this","date":"2018-02-08T03:54:31.578Z","type":"message"}
{"nick":"weswigham-droid","message":"Yeah, but most people don't need to worry about multiple.differing linked lists behaving differently for every package they include","date":"2018-02-08T03:54:33.791Z","type":"message"}
{"nick":"devsnek","message":"package loaders are transparent","date":"2018-02-08T03:54:49.841Z","type":"message"}
{"nick":"weswigham-droid","message":"They directly affect resolution and/or exports - how is that transparent?","date":"2018-02-08T03:55:39.049Z","type":"message"}
{"nick":"weswigham-droid","message":"How I can consume a package directly depends on the loaders it applies","date":"2018-02-08T03:55:58.907Z","type":"message"}
{"nick":"devsnek","message":"but the package applies that","date":"2018-02-08T03:56:09.342Z","type":"message"}
{"nick":"devsnek","message":"to the consumer of the package the loader doesn't exist","date":"2018-02-08T03:56:24.747Z","type":"message"}
{"nick":"devsnek","message":"they don't need to worry aboutit","date":"2018-02-08T03:56:28.047Z","type":"message"}
{"nick":"weswigham-droid","message":"That's leaky - so much of the community depends on looking at the code to understand how something works","date":"2018-02-08T03:57:02.740Z","type":"message"}
{"nick":"weswigham-droid","message":"Loaders are another indirection I need to understand","date":"2018-02-08T03:57:13.560Z","type":"message"}
{"nick":"devsnek","message":"loader hooks* i guess","date":"2018-02-08T03:57:22.500Z","type":"message"}
{"nick":"devsnek","message":"i used the wrong term","date":"2018-02-08T03:57:26.603Z","type":"message"}
{"nick":"devsnek","message":"lots of packages ship minified babeled code","date":"2018-02-08T03:57:47.981Z","type":"message"}
{"nick":"devsnek","message":"thats definitely not helpful for looking at code either","date":"2018-02-08T03:57:56.516Z","type":"message"}
{"nick":"weswigham-droid","message":"No, it's not, which is why unminifiers and sourcemaps got madr","date":"2018-02-08T03:58:11.929Z","type":"message"}
{"nick":"weswigham-droid","message":"Indirection to undo indirection","date":"2018-02-08T03:58:20.453Z","type":"message"}
{"nick":"devsnek","message":"sourcemaps sure","date":"2018-02-08T03:58:37.655Z","type":"message"}
{"nick":"devsnek","message":"that doesn't tell you any more about what the actual mess of babel is doing though","date":"2018-02-08T03:59:04.378Z","type":"message"}
{"nick":"devsnek","message":"you can go to the package repo for the same stuff","date":"2018-02-08T03:59:09.074Z","type":"message"}
{"nick":"weswigham-droid","message":"Right, which is why when I'm confused on why something transpiled fails in ways I don't expect I sometimes need to review the behavior of a certain Babel plugin...","date":"2018-02-08T03:59:56.837Z","type":"message"}
{"nick":"devsnek","message":"aye","date":"2018-02-08T04:00:12.599Z","type":"message"}
{"nick":"devsnek","message":"so then with this you would need to review the source of the loader","date":"2018-02-08T04:00:21.086Z","type":"message"}
{"nick":"devsnek","message":"the same issue applies by the way","date":"2018-02-08T04:00:27.036Z","type":"message"}
{"nick":"devsnek","message":"if we have this in node core","date":"2018-02-08T04:00:30.764Z","type":"message"}
{"nick":"devsnek","message":"except then the user has to dig through node core","date":"2018-02-08T04:00:38.496Z","type":"message"}
{"nick":"devsnek","message":"which is extremely confusing","date":"2018-02-08T04:00:43.584Z","type":"message"}
{"nick":"ljharb","message":"devsnek: adding a .mjs for *every single file* in their package isn't the easy way","date":"2018-02-08T04:00:56.314Z","type":"message"}
{"nick":"devsnek","message":"every single file?","date":"2018-02-08T04:01:06.046Z","type":"message"}
{"nick":"weswigham-droid","message":"Right, but by shipping it in core you bless it and reduce how many of the darn things I need to look at","date":"2018-02-08T04:01:07.712Z","type":"message"}
{"nick":"ljharb","message":"and not doing so breaks things, because every file is an entry point","date":"2018-02-08T04:01:10.138Z","type":"message"}
{"nick":"devsnek","message":"no no no they just need one","date":"2018-02-08T04:01:11.299Z","type":"message"}
{"nick":"ljharb","message":"yes","date":"2018-02-08T04:01:11.979Z","type":"message"}
{"nick":"ljharb","message":"no","date":"2018-02-08T04:01:13.335Z","type":"message"}
{"nick":"devsnek","message":"oh i see your point","date":"2018-02-08T04:01:15.590Z","type":"message"}
{"nick":"devsnek","message":"thats fair","date":"2018-02-08T04:01:17.142Z","type":"message"}
{"nick":"ljharb","message":"deep imports for all files in the package are valid.","date":"2018-02-08T04:01:22.382Z","type":"message"}
{"nick":"devsnek","message":"right but ljharb","date":"2018-02-08T04:01:27.273Z","type":"message"}
{"nick":"devsnek","message":"i see package loader hooks as the solution to that","date":"2018-02-08T04:01:34.289Z","type":"message"}
{"nick":"ljharb","message":"that's one of only two i can think of.","date":"2018-02-08T04:01:48.433Z","type":"message"}
{"nick":"ljharb","message":"one is a (ships with node) package loader hook that any package can opt in to","date":"2018-02-08T04:02:00.646Z","type":"message"}
{"nick":"ljharb","message":"the other is, `import 'cjs'` Just Works","date":"2018-02-08T04:02:08.344Z","type":"message"}
{"nick":"ljharb","message":"and given those two options, i have no idea why the latter isn't a better choice.","date":"2018-02-08T04:02:24.607Z","type":"message"}
{"nick":"devsnek","message":"i like the current behavior","date":"2018-02-08T04:02:37.333Z","type":"message"}
{"nick":"ljharb","message":"which is?","date":"2018-02-08T04:02:45.531Z","type":"message"}
{"nick":"weswigham-droid","message":"I like the builtin loader - then a package declaritively opts out of a general esm runtime compatable behavior","date":"2018-02-08T04:02:53.776Z","type":"message"}
{"nick":"devsnek","message":"module.exports to default and then defering to hooks for weirder behavior","date":"2018-02-08T04:03:03.133Z","type":"message"}
{"nick":"devsnek","message":"keeps all the weird out of node core","date":"2018-02-08T04:03:08.355Z","type":"message"}
{"nick":"ljharb","message":"devsnek: yeah i'm totally fine with that (with `import theDefault from 'cjs'` working by default, and anything else being extra)","date":"2018-02-08T04:03:34.839Z","type":"message"}
{"nick":"devsnek","message":"thats my current stance","date":"2018-02-08T04:03:41.769Z","type":"message"}
{"nick":"ljharb","message":"named imports from CJS would be amazing, but it's in no way a blocker for me.","date":"2018-02-08T04:03:47.787Z","type":"message"}
{"nick":"ljharb","message":"because you can still get named imports with a .mjs","date":"2018-02-08T04:03:57.114Z","type":"message"}
{"nick":"devsnek","message":"yea","date":"2018-02-08T04:04:00.896Z","type":"message"}
{"nick":"devsnek","message":"thats what i was talking about","date":"2018-02-08T04:04:04.203Z","type":"message"}
{"nick":"devsnek","message":"this kinda got mixed up hehe","date":"2018-02-08T04:04:09.223Z","type":"message"}
{"nick":"ljharb","message":"lol k","date":"2018-02-08T04:04:11.104Z","type":"message"}
{"nick":"ljharb","message":"sounds like we're on the same page then","date":"2018-02-08T04:04:15.469Z","type":"message"}
{"nick":"devsnek","message":":+1","date":"2018-02-08T04:04:19.943Z","type":"message"}
{"nick":"weswigham-droid","message":"I don't think even `import thedefaukt from \"cjs\"` working without a loader is correct, personally...","date":"2018-02-08T04:04:24.850Z","type":"message"}
{"nick":"devsnek","message":"omg ircchat y u do dis","date":"2018-02-08T04:04:25.691Z","type":"message"}
{"nick":"ljharb","message":"weswigham-droid: why not?","date":"2018-02-08T04:04:31.265Z","type":"message"}
{"nick":"ljharb","message":"weswigham-droid: the whole idea is that you shouldn't have to know the module format you're importing from.","date":"2018-02-08T04:04:43.445Z","type":"message"}
{"nick":"weswigham-droid","message":"It's a super easy way to make a nonportable package","date":"2018-02-08T04:04:44.670Z","type":"message"}
{"nick":"weswigham-droid","message":"Without opting into it","date":"2018-02-08T04:04:45.102Z","type":"message"}
{"nick":"ljharb","message":"how so?","date":"2018-02-08T04:04:52.404Z","type":"message"}
{"nick":"weswigham-droid","message":"Right, but you ahve to weight ease of development with portability","date":"2018-02-08T04:05:06.285Z","type":"message"}
{"nick":"ljharb","message":"weswigham-droid: remember that it could be ESM, or CJS, or HTML, or WASM, or anything else in the future","date":"2018-02-08T04:05:07.918Z","type":"message"}
{"nick":"ljharb","message":"ok so please explain how that would be less portable","date":"2018-02-08T04:05:14.389Z","type":"message"}
{"nick":"ljharb","message":"(also, portable to what)","date":"2018-02-08T04:05:18.115Z","type":"message"}
{"nick":"weswigham-droid","message":"Yeah, in the future","date":"2018-02-08T04:05:20.270Z","type":"message"}
{"nick":"weswigham-droid","message":"Browsers don't generally resolve extensions or traverse trees or any of that","date":"2018-02-08T04:05:42.492Z","type":"message"}
{"nick":"weswigham-droid","message":"Other esm runtimes that don't have node's cjs resolution","date":"2018-02-08T04:06:16.054Z","type":"message"}
{"nick":"weswigham-droid","message":"Like briwsers","date":"2018-02-08T04:06:18.606Z","type":"message"}
{"nick":"devsnek","message":"browsers don't have node modules at all","date":"2018-02-08T04:06:38.789Z","type":"message"}
{"nick":"weswigham-droid","message":"Right!","date":"2018-02-08T04:06:44.554Z","type":"message"}
{"nick":"devsnek","message":"thats kinda an unfair comparison","date":"2018-02-08T04:06:45.474Z","type":"message"}
{"nick":"ljharb","message":"browsers are irrelevant","date":"2018-02-08T04:06:50.778Z","type":"message"}
{"nick":"ljharb","message":"you'll always need a build process to run things in browsers","date":"2018-02-08T04:06:58.628Z","type":"message"}
{"nick":"ljharb","message":"if for no other reason, because browsers only work with http/https URLs","date":"2018-02-08T04:07:10.986Z","type":"message"}
{"nick":"devsnek","message":"speaking of that actually that reminds me of something","date":"2018-02-08T04:07:13.062Z","type":"message"}
{"nick":"ljharb","message":"even npm's proposal acks that you'll still need a build process for paths.","date":"2018-02-08T04:07:24.724Z","type":"message"}
{"nick":"weswigham-droid","message":"If browsers are irrelevant, then break the spec and make interop better with named exports and out of order execution, since interop with browsers in a concern","date":"2018-02-08T04:07:39.982Z","type":"message"}
{"nick":"devsnek","message":"i remember node was -1 to import from http url","date":"2018-02-08T04:07:40.959Z","type":"message"}
{"nick":"ljharb","message":"web dev requires a build process, has for years, and will for the forseeable future.","date":"2018-02-08T04:07:41.712Z","type":"message"}
{"nick":"ljharb","message":"it's not that browsers are irrelevant","date":"2018-02-08T04:07:46.764Z","type":"message"}
{"nick":"weswigham-droid","message":"*is not a concern","date":"2018-02-08T04:07:52.858Z","type":"message"}
{"nick":"ljharb","message":"it's that \"no build process to run node code in a browser\" is impossible.","date":"2018-02-08T04:07:57.030Z","type":"message"}
{"nick":"devsnek","message":"the thing we want is intertop from browser to node","date":"2018-02-08T04:07:59.683Z","type":"message"}
{"nick":"ljharb","message":"out of order execution is explicitly forbidden by the spec, and it would be a terrible idea for node to do that","date":"2018-02-08T04:08:14.017Z","type":"message"}
{"nick":"ljharb","message":"also, node won't.","date":"2018-02-08T04:08:15.409Z","type":"message"}
{"nick":"ljharb","message":"there's already interop from CJS to browsers and back, that's a solved problem. what's needed now is interop between ESM and CJS.","date":"2018-02-08T04:08:40.636Z","type":"message"}
{"nick":"ljharb","message":"interop between node ESM and browser ESM is trivial; you just rewrite paths to URLs","date":"2018-02-08T04:09:01.112Z","type":"message"}
{"nick":"ljharb","message":"(or the reverse for the reverse)","date":"2018-02-08T04:10:20.445Z","type":"message"}
{"nick":"weswigham-droid","message":"The different default import behavior makes the mode module format meaningfully divergent from browsers, though. It does mean that I need to do deep inspection to determine if a module runs on the browser and/or in node. As a transpiler, I need to have separate output options for both targets.","date":"2018-02-08T04:18:35.296Z","type":"message"}
{"nick":"ljharb","message":"you already need to do that anyways.","date":"2018-02-08T04:18:51.808Z","type":"message"}
{"nick":"ljharb","message":"it might use `process`, or `window`.","date":"2018-02-08T04:18:57.960Z","type":"message"}
{"nick":"weswigham-droid","message":"Those don't affect the dependencies I need to traverse","date":"2018-02-08T04:19:14.156Z","type":"message"}
{"nick":"ljharb","message":"and regardless, even if only because of paths vs urls, you'll *always* need separate output options for every environment target.","date":"2018-02-08T04:19:18.021Z","type":"message"}
{"nick":"ljharb","message":"they do in the general sense, even if they don't happen to for your use case.","date":"2018-02-08T04:19:27.109Z","type":"message"}
{"nick":"weswigham-droid","message":"At least if everything's encapsulated I loaders, I can rely on the loaders themselves for the differences. :(","date":"2018-02-08T04:19:39.804Z","type":"message"}
{"nick":"ljharb","message":"you'll be able to have loaders anyways if you want","date":"2018-02-08T04:20:09.163Z","type":"message"}
{"nick":"ljharb","message":"all i'm saying is what the default import loader should do when it finds a CJS module.","date":"2018-02-08T04:20:24.716Z","type":"message"}
{"nick":"weswigham-droid","message":"Right, but this is effectivly a loader that's on by default","date":"2018-02-08T04:20:27.375Z","type":"message"}
{"nick":"ljharb","message":"right","date":"2018-02-08T04:20:29.799Z","type":"message"}
{"nick":"weswigham-droid","message":"And not exposed as a loader","date":"2018-02-08T04:20:32.400Z","type":"message"}
{"nick":"ljharb","message":"as opposed to throwing an exception","date":"2018-02-08T04:20:35.719Z","type":"message"}
{"nick":"ljharb","message":"if there's a need to expose it, it can be exposed","date":"2018-02-08T04:20:47.017Z","type":"message"}
{"nick":"ljharb","message":"but i can't see a need for that if it's the default","date":"2018-02-08T04:20:54.742Z","type":"message"}
{"nick":"weswigham-droid","message":"It aught to be","date":"2018-02-08T04:20:56.493Z","type":"message"}
{"nick":"ljharb","message":"if you have concrete reasons why, i suspect that will be convincing","date":"2018-02-08T04:21:10.615Z","type":"message"}
{"nick":"weswigham-droid","message":"Or it has to be replicated by everyone that needs to do things based on it","date":"2018-02-08T04:21:15.521Z","type":"message"}
{"nick":"ljharb","message":"true","date":"2018-02-08T04:21:21.041Z","type":"message"}
{"nick":"weswigham-droid","message":"And then if it changes in any way","date":"2018-02-08T04:21:31.671Z","type":"message"}
{"nick":"ljharb","message":"that's true no matter what's on by default tho.","date":"2018-02-08T04:21:33.343Z","type":"message"}
{"nick":"weswigham-droid","message":"Yeah","date":"2018-02-08T04:21:39.796Z","type":"message"}
{"nick":"weswigham-droid","message":"That's why I was advocating for nothing by default, but encapsulate all interop with a loader that's exposed.","date":"2018-02-08T04:22:11.542Z","type":"message"}
{"nick":"weswigham-droid","message":"If there's one in by default, fine","date":"2018-02-08T04:22:21.435Z","type":"message"}
{"nick":"weswigham-droid","message":"But still expose the loader","date":"2018-02-08T04:22:27.307Z","type":"message"}
{"nick":"weswigham-droid","message":"So I can wrap it/chain it/query it","date":"2018-02-08T04:22:38.528Z","type":"message"}
{"nick":"devsnek","message":"you could also just install a npm module","date":"2018-02-08T04:22:46.025Z","type":"message"}
{"nick":"devsnek","message":"i hear having lots of deps is in right now","date":"2018-02-08T04:22:52.364Z","type":"message"}
{"nick":"ljharb","message":"one way or another you'll have something to build off of","date":"2018-02-08T04:23:09.839Z","type":"message"}
{"nick":"ljharb","message":"having \"nothing\" as the default doesn't make a loader more likely to be exposed by node core :-)","date":"2018-02-08T04:23:26.453Z","type":"message"}
{"nick":"devsnek","message":"hey ljharb i was just reading issue 20 on the global proposal","date":"2018-02-08T04:23:40.972Z","type":"message"}
{"nick":"ljharb","message":"i assume that's the flickr one","date":"2018-02-08T04:23:51.194Z","type":"message"}
{"nick":"devsnek","message":"yea","date":"2018-02-08T04:23:54.381Z","type":"message"}
{"nick":"ljharb","message":"k","date":"2018-02-08T04:23:56.391Z","type":"message"}
{"nick":"devsnek","message":"i was thinking like uh","date":"2018-02-08T04:24:06.499Z","type":"message"}
{"nick":"devsnek","message":"firefox nightly basically became a bug catcher for this","date":"2018-02-08T04:24:24.262Z","type":"message"}
{"nick":"devsnek","message":"that seems like a good way to migrate the web","date":"2018-02-08T04:24:36.975Z","type":"message"}
{"nick":"devsnek","message":"like if all the major browsers just implemented this in dev/nightly builds for a year","date":"2018-02-08T04:24:50.425Z","type":"message"}
{"nick":"ljharb","message":"that's how most web compat things are caught","date":"2018-02-08T04:24:53.711Z","type":"message"}
{"nick":"ljharb","message":"they don't want dev/nightly builds broken for anyone either tho","date":"2018-02-08T04:25:02.979Z","type":"message"}
{"nick":"ljharb","message":"so once a problem is discovered, it's rolled back regardless","date":"2018-02-08T04:25:11.040Z","type":"message"}
{"nick":"devsnek","message":"it would be a good way to ship global though","date":"2018-02-08T04:25:53.989Z","type":"message"}
{"nick":"devsnek","message":"even if its annoying","date":"2018-02-08T04:25:58.818Z","type":"message"}
{"nick":"devsnek","message":"cuz i think `root` would be more annoying to more people :(","date":"2018-02-08T04:26:08.962Z","type":"message"}
{"nick":"ljharb","message":"i'm not going to advance anything without \"global\" in it somewhere.","date":"2018-02-08T04:26:28.904Z","type":"message"}
{"nick":"weswigham-droid","message":"ljharb: nothing by default just makes portability the default, over familiarity","date":"2018-02-08T04:26:29.364Z","type":"message"}
{"nick":"ljharb","message":"devsnek: i've already got firefox and edge exploring possibilities tho","date":"2018-02-08T04:26:38.966Z","type":"message"}
{"nick":"ljharb","message":"weswigham-droid: \"nothing\" is less portable, because there's no common ground to build portable things off of.","date":"2018-02-08T04:26:53.584Z","type":"message"}
{"nick":"devsnek","message":"possible alternative names or ways to actually ship global","date":"2018-02-08T04:27:09.268Z","type":"message"}
{"nick":"ljharb","message":"former","date":"2018-02-08T04:27:17.955Z","type":"message"}
{"nick":"ljharb","message":"well, both","date":"2018-02-08T04:28:02.880Z","type":"message"}
{"nick":"ljharb","message":"via the former","date":"2018-02-08T04:28:05.167Z","type":"message"}
{"nick":"devsnek","message":"oof","date":"2018-02-08T04:28:54.667Z","type":"message"}
{"nick":"srl295","reason":"Quit: Connection closed for inactivity","date":"2018-02-08T04:40:08.410Z","type":"quit"}
{"nick":"marthinal","date":"2018-02-08T04:45:36.900Z","type":"join"}
{"nick":"devsnek","message":"what is `node-test-commit` and why does it always fail","date":"2018-02-08T04:50:19.182Z","type":"message"}
{"nick":"devsnek","message":"at first i thought it was the parent job but everything else succeeds","date":"2018-02-08T04:50:31.985Z","type":"message"}
{"nick":"marthinal","reason":"Ping timeout: 276 seconds","date":"2018-02-08T04:50:47.733Z","type":"quit"}
{"nick":"nodejs-gh","date":"2018-02-08T05:07:17.085Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-02-08T05:07:17.154Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-02-08T05:07:43.374Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-02-08T05:07:43.543Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-02-08T05:08:09.866Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-02-08T05:08:09.973Z","type":"part"}
{"nick":"ChALkeR","reason":"Ping timeout: 240 seconds","date":"2018-02-08T05:08:40.700Z","type":"quit"}
{"nick":"Trott","message":"It is the parent job and it doesn't always fail. Take a look at https://github.com/nodejs/node/pull/18593 for example or https://ci.nodejs.org/job/node-test-commit/16050/.","date":"2018-02-08T05:13:22.777Z","type":"message"}
{"nick":"Trott","message":"I can think of at least two situations, though, where it will fail even though nothing else appears to have failed.","date":"2018-02-08T05:14:04.333Z","type":"message"}
{"nick":"Trott","message":"First, there are cases where the GitHub widget simply doesn't update. (maclover7 discussed why briefly at the Build WG meeting this week, I think.) So, if you're looking at the widget rather than at the Jenkins interface, then know that it's not always correct.","date":"2018-02-08T05:15:09.114Z","type":"message"}
{"nick":"Trott","message":"Second, If a few subtasks fail and just the subtasks are re-run, everything will appear in the widget to pass but the parent job `node-test-commit` will not be updated in that case because it was not re-run.","date":"2018-02-08T05:15:52.697Z","type":"message"}
{"nick":"Trott","message":"There are probably other situations too, but those are the ones that come to mind for me.","date":"2018-02-08T05:16:04.269Z","type":"message"}
{"nick":"devsnek","message":"i see","date":"2018-02-08T05:17:15.640Z","type":"message"}
{"nick":"devsnek","message":"good stuff to know :)","date":"2018-02-08T05:17:37.444Z","type":"message"}
{"nick":"gabrielschulhof","reason":"Ping timeout: 255 seconds","date":"2018-02-08T05:18:17.865Z","type":"quit"}
{"nick":"marthinal","date":"2018-02-08T05:50:43.827Z","type":"join"}
{"nick":"weswigham-droid","reason":"Read error: Connection reset by peer","date":"2018-02-08T05:59:40.444Z","type":"quit"}
{"nick":"HoloIRCUser1","date":"2018-02-08T05:59:52.601Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-02-08T06:07:54.362Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-02-08T06:07:54.470Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-02-08T06:11:14.381Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-02-08T06:11:14.461Z","type":"part"}
{"nick":"HoloIRCUser1","reason":"Quit: HoloIRCUser1","date":"2018-02-08T06:16:58.201Z","type":"quit"}
{"nick":"d10n-work","reason":"Quit: Connection closed for inactivity","date":"2018-02-08T06:20:02.017Z","type":"quit"}
{"nick":"lpin","date":"2018-02-08T06:21:52.063Z","type":"join"}
{"nick":"weswigham-droid","date":"2018-02-08T06:24:20.987Z","type":"join"}
{"nick":"themoose5","date":"2018-02-08T06:42:00.939Z","type":"join"}
{"nick":"themoose5","reason":"Client Quit","date":"2018-02-08T06:46:26.660Z","type":"quit"}
{"nick":"HoloIRCUser2","date":"2018-02-08T07:01:35.600Z","type":"join"}
{"nick":"HoloIRCUser2","reason":"Read error: Connection reset by peer","date":"2018-02-08T07:02:09.641Z","type":"quit"}
{"nick":"HoloIRCUser2","date":"2018-02-08T07:02:45.940Z","type":"join"}
{"nick":"weswigham-droid","reason":"Read error: Connection reset by peer","date":"2018-02-08T07:03:15.062Z","type":"quit"}
{"nick":"HoloIRCUser2","reason":"Read error: Connection reset by peer","date":"2018-02-08T07:03:33.583Z","type":"quit"}
{"nick":"HoloIRCUser2","date":"2018-02-08T07:03:49.758Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-02-08T07:35:27.601Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-02-08T07:35:27.669Z","type":"part"}
{"nick":"nodejs-gh","date":"2018-02-08T07:41:56.850Z","type":"join"}
{"nick":"nodejs-gh","date":"2018-02-08T07:41:56.918Z","type":"part"}
