{"nick":"chapel","date":"2013-12-28T00:10:10.792Z","type":"join"}
{"nick":"ralphtheninja","reason":"Ping timeout: 252 seconds","date":"2013-12-28T00:24:26.719Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-28T00:29:47.647Z","type":"quit"}
{"nick":"thlorenz","date":"2013-12-28T00:30:22.197Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 246 seconds","date":"2013-12-28T00:34:28.811Z","type":"quit"}
{"nick":"wolfeidau","reason":"Read error: No buffer space available","date":"2013-12-28T00:38:31.062Z","type":"quit"}
{"nick":"Guest47861","new_nick":"prettyrobots_","date":"2013-12-28T01:03:31.348Z","type":"nick"}
{"nick":"jiffe98","date":"2013-12-28T01:21:59.739Z","type":"join"}
{"nick":"ramitos","reason":"Ping timeout: 245 seconds","date":"2013-12-28T01:36:23.358Z","type":"quit"}
{"nick":"blessYahu","reason":"Ping timeout: 245 seconds","date":"2013-12-28T01:39:18.329Z","type":"quit"}
{"nick":"blessYahu","date":"2013-12-28T01:39:32.056Z","type":"join"}
{"nick":"thlorenz","date":"2013-12-28T02:05:05.027Z","type":"join"}
{"nick":"blessYahu","reason":"Read error: Connection reset by peer","date":"2013-12-28T02:07:21.927Z","type":"quit"}
{"nick":"blessYahu","date":"2013-12-28T02:07:36.136Z","type":"join"}
{"nick":"blessYahu","reason":"Read error: Connection reset by peer","date":"2013-12-28T02:09:11.095Z","type":"quit"}
{"nick":"blessYahu","date":"2013-12-28T02:10:27.843Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-28T02:46:21.090Z","type":"quit"}
{"nick":"kenansulayman","new_nick":"kenan|afk","date":"2013-12-28T03:02:13.499Z","type":"nick"}
{"nick":"Sorella","reason":"Remote host closed the connection","date":"2013-12-28T03:19:06.831Z","type":"quit"}
{"nick":"jcrugzz","reason":"Ping timeout: 246 seconds","date":"2013-12-28T03:24:24.003Z","type":"quit"}
{"nick":"contrahax","reason":"Read error: Connection reset by peer","date":"2013-12-28T03:25:55.186Z","type":"quit"}
{"nick":"contrahax","date":"2013-12-28T03:26:45.107Z","type":"join"}
{"nick":"contrahax","reason":"Quit: Sleeping","date":"2013-12-28T03:40:01.463Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-12-28T04:01:01.324Z","type":"join"}
{"nick":"jcrugzz","date":"2013-12-28T04:30:50.964Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 272 seconds","date":"2013-12-28T04:36:09.722Z","type":"quit"}
{"nick":"rvagg","message":"prettyrobots: https://github.com/rvagg/node-leveldown/pull/85","date":"2013-12-28T04:43:22.869Z","type":"message"}
{"nick":"rvagg","message":"prettyrobots: re utf8, we've designed leveldown to handle either String or Buffer types (only), we can extract the raw data out of either so we don't do conversion in JS to save extra copies\\","date":"2013-12-28T04:44:28.519Z","type":"message"}
{"nick":"rvagg","message":"if you pass in a string then it goes all the way down into C++ land as a string","date":"2013-12-28T04:44:41.714Z","type":"message"}
{"nick":"rvagg","message":"if you pass in a Buffer than same","date":"2013-12-28T04:44:47.365Z","type":"message"}
{"nick":"rvagg","message":"if you pass in anything else then you incur a conversion cost somewhere, likely minimal","date":"2013-12-28T04:45:00.483Z","type":"message"}
{"nick":"prettyrobots","message":"rvagg","date":"2013-12-28T04:45:08.414Z","type":"message"}
{"nick":"prettyrobots","message":"rvagg: https://github.com/bigeasy/encode/blob/master/index.js","date":"2013-12-28T04:45:25.306Z","type":"message"}
{"nick":"prettyrobots","message":"rvagg: That is my sketch of encoding for Locket. Indeed, it would be easy enough to store Strings if strings are present.","date":"2013-12-28T04:46:13.192Z","type":"message"}
{"nick":"contrahax","date":"2013-12-28T04:46:17.469Z","type":"join"}
{"nick":"rvagg","message":"prettyrobots: so.. you have a string->buffer->leveldb slice copy cost going on there","date":"2013-12-28T04:46:17.640Z","type":"message"}
{"nick":"rvagg","message":"for levelup/leveldown you only have string->leveldb slice","date":"2013-12-28T04:46:28.353Z","type":"message"}
{"nick":"rvagg","message":"might be fine for your use case but we're trying to be efficient for the inevitable memcpys","date":"2013-12-28T04:46:54.639Z","type":"message"}
{"nick":"prettyrobots","message":"rvagg: I'm not writing to LevelDB.","date":"2013-12-28T04:46:58.567Z","type":"message"}
{"nick":"prettyrobots","message":"rvagg: I suppose I'll have to profile. Ultimately, I'm writing buffers or strings to a file using Node.js. If Node.js needs to convert the string anyway, then the sooner the better.","date":"2013-12-28T04:48:09.622Z","type":"message"}
{"nick":"prettyrobots","message":"rvagg: Or it might not matter.","date":"2013-12-28T04:48:17.078Z","type":"message"}
{"nick":"prettyrobots","message":"rvagg: But, what about collation? If use specify UTF8 and you do not convert to buffer, then how are keys ordered? Using a bytewise comparison or using JavasScript string < and >?","date":"2013-12-28T04:49:02.627Z","type":"message"}
{"nick":"contrahax","reason":"Client Quit","date":"2013-12-28T04:49:57.717Z","type":"quit"}
{"nick":"rvagg","message":"bytewise still","date":"2013-12-28T04:50:11.588Z","type":"message"}
{"nick":"prettyrobots","message":"Oh, using bytewise, because the comparison is done by leveldb, it's been converted at that point.","date":"2013-12-28T04:50:20.376Z","type":"message"}
{"nick":"prettyrobots","message":"So, hell yeah I need Buffers.","date":"2013-12-28T04:50:31.488Z","type":"message"}
{"nick":"rvagg","message":"prettyrobots: https://github.com/rvagg/nan/blob/master/nan.h#L1014","date":"2013-12-28T04:50:33.081Z","type":"message"}
{"nick":"rvagg","message":"so I think node core does the same here, it doesn't need to *convert to buffers* to write I/O, it just pulls the char array out of the string","date":"2013-12-28T04:51:01.831Z","type":"message"}
{"nick":"rvagg","message":"for raw strings it'll do a full utf8 decode which is costly of course it's costing you that anyway in your conversion","date":"2013-12-28T04:51:26.158Z","type":"message"}
{"nick":"prettyrobots","message":"A byte wise compare of UTF8 in JavaScript is going to require converting to UTF-8 to be compatible with LevelUP.","date":"2013-12-28T04:53:06.006Z","type":"message"}
{"nick":"prettyrobots","message":"rvagg: So if JSON is a key encoding it converted to UTF-8 and then sorted byte wise?","date":"2013-12-28T05:03:57.156Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-28T05:15:32.346Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-12-28T05:24:22.860Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 272 seconds","date":"2013-12-28T05:29:21.724Z","type":"quit"}
{"nick":"levelbot","message":"[npm] procede@0.0.1 <http://npm.im/procede>: In-memory forward iterator for use with the Strata b-tree MVCC tool collection. (@bigeasy)","date":"2013-12-28T05:41:23.064Z","type":"message"}
{"nick":"jcrugzz","date":"2013-12-28T05:55:10.678Z","type":"join"}
{"nick":"prettyrobots","message":"My notes on implementing the key/value structure necessary to store a LevelUP key/value pair. https://github.com/bigeasy/pair","date":"2013-12-28T06:02:20.368Z","type":"message"}
{"nick":"jcrugzz","reason":"Ping timeout: 272 seconds","date":"2013-12-28T06:02:55.753Z","type":"quit"}
{"nick":"daviddias","date":"2013-12-28T06:22:58.936Z","type":"join"}
{"nick":"chapel","message":"prettyrobots: no gh-pages branch","date":"2013-12-28T06:34:00.345Z","type":"message"}
{"nick":"prettyrobots","message":"chapel: Not yet. Starting this just now.","date":"2013-12-28T06:34:28.531Z","type":"message"}
{"nick":"daviddias","date":"2013-12-28T06:46:58.854Z","type":"quit"}
{"nick":"Aredridel","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2013-12-28T07:07:46.569Z","type":"quit"}
{"nick":"blessYahu","reason":"Ping timeout: 252 seconds","date":"2013-12-28T07:19:41.685Z","type":"quit"}
{"nick":"daviddias","date":"2013-12-28T07:41:02.085Z","type":"join"}
