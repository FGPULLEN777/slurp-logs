{"nick":"jerrysv","message":"rvagg: yeah, was going to do some updates tonight - silly hobbies","date":"2013-11-26T00:03:39.519Z","type":"message"}
{"nick":"jjmalina","reason":"Ping timeout: 252 seconds","date":"2013-11-26T00:05:49.824Z","type":"quit"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-11-26T00:08:45.818Z","type":"quit"}
{"nick":"ednapiranha","reason":"Quit: Leaving...","date":"2013-11-26T00:14:32.040Z","type":"quit"}
{"nick":"thlorenz","date":"2013-11-26T00:15:27.220Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-11-26T00:15:43.641Z","type":"quit"}
{"nick":"thlorenz","date":"2013-11-26T00:15:59.730Z","type":"join"}
{"nick":"paulfryzel","reason":"Read error: Connection reset by peer","date":"2013-11-26T00:28:50.143Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-11-26T00:29:18.461Z","type":"join"}
{"nick":"ryan_ramage","reason":"Quit: ryan_ramage","date":"2013-11-26T00:29:27.561Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-11-26T00:33:14.427Z","type":"join"}
{"nick":"kenansulayman","reason":"Ping timeout: 246 seconds","date":"2013-11-26T00:36:48.000Z","type":"quit"}
{"nick":"kenansulayman","date":"2013-11-26T00:37:50.315Z","type":"join"}
{"nick":"paulfryzel","reason":"Read error: Connection reset by peer","date":"2013-11-26T00:37:58.851Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-11-26T00:38:29.383Z","type":"join"}
{"nick":"rescrv","message":"rvagg, kenansulayman:  what would you recommend for the \"set\" data type in JS?  string, int, float, list, map should be easy, but JS doesn't have sets","date":"2013-11-26T00:38:57.766Z","type":"message"}
{"nick":"brycebaril","message":"rescrv: probably just the same as map, though it will have Sets very soon, in fact you can enable them in node at the command-line","date":"2013-11-26T00:40:02.336Z","type":"message"}
{"nick":"kenansulayman","message":"Isn't set best described by an object?","date":"2013-11-26T00:40:55.945Z","type":"message"}
{"nick":"rescrv","message":"brycebaril: we do type introspection of sorts.  you pass {attr: \"some string\"}, and we tell hyperdex that attr is a string.  It makes writing bindings easier","date":"2013-11-26T00:41:00.868Z","type":"message"}
{"nick":"rescrv","message":"so each type needs to be distinctive or I have to write some hacky code","date":"2013-11-26T00:41:15.445Z","type":"message"}
{"nick":"brycebaril","message":"rescrv: http://dailyjs.com/2012/10/15/preparing-for-esnext/ though you can't generally rely on users using these flags yet","date":"2013-11-26T00:41:30.500Z","type":"message"}
{"nick":"kenansulayman","message":"In object each value must be unique and is identified by its key; so it's actually the matching type afaik","date":"2013-11-26T00:41:49.330Z","type":"message"}
{"nick":"brycebaril","message":"rescrv i see","date":"2013-11-26T00:41:50.011Z","type":"message"}
{"nick":"kenansulayman","message":"s/afaik/imho/","date":"2013-11-26T00:41:56.242Z","type":"message"}
{"nick":"brycebaril","message":"rescrv: I'd most likely go through npm and find the best choice, ideally one that uses native Sets if available https://npmjs.org/search?q=set","date":"2013-11-26T00:43:39.974Z","type":"message"}
{"nick":"kenansulayman","message":"Is there a misunderstanding here? rescrv, what are up to?","date":"2013-11-26T00:44:26.125Z","type":"message"}
{"nick":"paulfryzel","reason":"Remote host closed the connection","date":"2013-11-26T00:44:48.212Z","type":"quit"}
{"nick":"rescrv","message":"kenansulayman: I'm not sure.  I think brycebaril suggesting sets from npm might be best.  Essentially a HyperDex scripting language binding is just type conversion.  All the fancy stuff is in the HyperDex client lib and should not be duplicated.  Things like, \"Can someone do setContains(\"x\") on a set of integers\".  There's one place we check this and it's correct.  I don't want to have to validate this in","date":"2013-11-26T00:47:30.074Z","type":"message"}
{"nick":"rescrv","message":"the scripting language and again in the hyperdex client library.","date":"2013-11-26T00:47:32.510Z","type":"message"}
{"nick":"rescrv","message":"The way I do this now is to just convert whatever the user gives into its appropriate HyperDex representation.  So \"foo\" becomes a hyperdex string.  5 becomes a hyperdex int.  [1,2,3","date":"2013-11-26T00:48:03.434Z","type":"message"}
{"nick":"rescrv","message":"] is a list of strings","date":"2013-11-26T00:48:07.280Z","type":"message"}
{"nick":"rescrv","message":"I'll then throw the appropriate error by interpreting the failure of the C call.","date":"2013-11-26T00:48:25.877Z","type":"message"}
{"nick":"rescrv","message":"I'm just figuring out how to decide the question, \"Is this thing the user is passing in a set?\"  If I can unambiguously decide this, I can always encode it as a set, and let the HyeprDex library decide if that's acceptable.","date":"2013-11-26T00:49:07.951Z","type":"message"}
{"nick":"kenansulayman","message":"If the user is able to input a set and you want to detect that; what would you expect it to be? I think the only \"comparable\" instance of a \"set\" would be a plain object","date":"2013-11-26T00:50:35.416Z","type":"message"}
{"nick":"rvagg","message":"rescrv: if you really wanted to you could take a class-based approach and if the user wants to pass in a particular type then they need to pass it in as one of your types","date":"2013-11-26T00:51:20.148Z","type":"message"}
{"nick":"rvagg","message":"rescrv: new HyperSet({ whatever })","date":"2013-11-26T00:51:27.939Z","type":"message"}
{"nick":"kenansulayman","message":"indeed","date":"2013-11-26T00:51:34.924Z","type":"message"}
{"nick":"rvagg","message":"accept sloppy input and convert as you see appropriate but provide the option for them to be strict with types","date":"2013-11-26T00:51:58.783Z","type":"message"}
{"nick":"rescrv","message":"rvagg kenansulayman:  I think what I'm going to do is go read up on all this that you guys have sent, and then come back when I have some functioning code to run by you.","date":"2013-11-26T00:52:21.559Z","type":"message"}
{"nick":"kenansulayman","message":"Sure, whatever it takes :)","date":"2013-11-26T00:52:50.411Z","type":"message"}
{"nick":"brycebaril","message":"rescrv: yes, what rvagg says for the api-layer. You pretty much won't be able to infer a 'set' vs a 'hash' unless the user specifically tells you, and the best way for that would be to expose a set constructor in the api","date":"2013-11-26T00:53:01.276Z","type":"message"}
{"nick":"rescrv","message":"brycebaril: that's all I'm looking for.  I'll probably go that route then.","date":"2013-11-26T00:53:35.886Z","type":"message"}
{"nick":"esundahl_","reason":"Remote host closed the connection","date":"2013-11-26T00:57:07.116Z","type":"quit"}
{"nick":"kenansulayman","reason":"Ping timeout: 245 seconds","date":"2013-11-26T00:57:16.155Z","type":"quit"}
{"nick":"esundahl","date":"2013-11-26T00:57:34.118Z","type":"join"}
{"nick":"dguttman","date":"2013-11-26T00:59:54.336Z","type":"join"}
{"nick":"kenansulayman","date":"2013-11-26T01:01:19.197Z","type":"join"}
{"nick":"esundahl","reason":"Ping timeout: 272 seconds","date":"2013-11-26T01:02:24.017Z","type":"quit"}
{"nick":"kenansulayman","reason":"Quit: ≈ and thus my mac took a subtle yet profound nap ≈","date":"2013-11-26T01:28:07.960Z","type":"quit"}
{"nick":"daleharvey","date":"2013-11-26T01:30:30.385Z","type":"join"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2013-11-26T01:30:30.603Z","type":"quit"}
{"nick":"rvagg","message":"rescrv: can you recall reasons this might happen: (dummy_versions_.next_ == &dummy_versions_), function ~VersionSet, file ../deps/leveldb/leveldb-1.14.0/db/version_set.cc, line 803","date":"2013-11-26T01:30:37.192Z","type":"message"}
{"nick":"rvagg","message":"I remember coming across this a few times a while ago but I haven't seen it for a while","date":"2013-11-26T01:30:46.163Z","type":"message"}
{"nick":"rvagg","message":"rescrv: daleharvey is running in to it now with a recent upgrade and I can't explain it","date":"2013-11-26T01:30:57.271Z","type":"message"}
{"nick":"jxson","date":"2013-11-26T01:30:58.292Z","type":"join"}
{"nick":"daleharvey","message":"ill give 10.8 vs 10.9 a shot","date":"2013-11-26T01:31:42.455Z","type":"message"}
{"nick":"jxson","reason":"Ping timeout: 246 seconds","date":"2013-11-26T01:35:25.954Z","type":"quit"}
{"nick":"rescrv","message":"rvagg: is this an assert fail?","date":"2013-11-26T01:35:52.214Z","type":"message"}
{"nick":"jxson","date":"2013-11-26T01:36:01.024Z","type":"join"}
{"nick":"rvagg","message":"yeah, internal leveldb assertion","date":"2013-11-26T01:36:07.376Z","type":"message"}
{"nick":"rescrv","message":"rvagg: stock level?  I think so, but double checking","date":"2013-11-26T01:36:27.709Z","type":"message"}
{"nick":"rescrv","message":"so what's going on is you're deleting the database while a snapshot to it still exists.","date":"2013-11-26T01:37:20.559Z","type":"message"}
{"nick":"rvagg","message":"yeah, stock, unchanged","date":"2013-11-26T01:37:23.327Z","type":"message"}
{"nick":"rvagg","message":"ah, hm... we're only making snapshots via iterators so we must not be freeing those","date":"2013-11-26T01:37:49.880Z","type":"message"}
{"nick":"rescrv","message":"create db, create snapshot, delete db, see failure","date":"2013-11-26T01:37:55.995Z","type":"message"}
{"nick":"rvagg","message":"we should be.. ugh","date":"2013-11-26T01:37:57.216Z","type":"message"}
{"nick":"rvagg","message":"I have a whole lot of code dedicated to dealing with this, which is I guess why we haven't seen this come up again","date":"2013-11-26T01:38:20.184Z","type":"message"}
{"nick":"rescrv","message":"the way I solved this in HyperDex was to make everything that wrapped a snapshot or iterator keep a ref-counted pointer to the db","date":"2013-11-26T01:38:26.136Z","type":"message"}
{"nick":"daleharvey","message":"Its fairly likely I can hit something like that, the code that this is hitting is fairly quircky, a bunch of it is slated to get removed","date":"2013-11-26T01:38:56.254Z","type":"message"}
{"nick":"rescrv","message":"that way we could just delete stof in any order and it'd take care of itself","date":"2013-11-26T01:38:57.327Z","type":"message"}
{"nick":"daleharvey","message":"but I have a database registry, so every open is getting wrapped in an open write to the registry database, and both of these are being created / deleted constantly (its in a test harness)","date":"2013-11-26T01:39:46.234Z","type":"message"}
{"nick":"rescrv","message":"daleharvey: then make sure that you don't delete without deleting the iterators too","date":"2013-11-26T01:40:06.481Z","type":"message"}
{"nick":"tarruda","reason":"Read error: Connection reset by peer","date":"2013-11-26T01:42:40.069Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-11-26T01:42:42.726Z","type":"quit"}
{"nick":"rescrv","message":"rvagg: if you can, I'd solve this at the levelX layer as that seems most appropriate","date":"2013-11-26T01:43:08.020Z","type":"message"}
{"nick":"rvagg","message":"rescrv: yeah, we have code that keeps references to each iterator so that prior to a proper close() we can go ahead and end each of the currently open ones","date":"2013-11-26T01:43:59.398Z","type":"message"}
{"nick":"rvagg","message":"I guess that's not working quite right... tho I have some tests for this situation","date":"2013-11-26T01:44:22.229Z","type":"message"}
{"nick":"thlorenz","date":"2013-11-26T01:52:24.517Z","type":"join"}
{"nick":"jerrysv","reason":"Remote host closed the connection","date":"2013-11-26T01:52:47.494Z","type":"quit"}
{"nick":"kevinswiber","date":"2013-11-26T02:00:26.559Z","type":"join"}
{"nick":"DTrejo","reason":"Remote host closed the connection","date":"2013-11-26T02:03:45.397Z","type":"quit"}
{"nick":"stagas","date":"2013-11-26T02:03:54.296Z","type":"join"}
{"nick":"DTrejo","date":"2013-11-26T02:05:19.346Z","type":"join"}
{"nick":"DTrejo","reason":"Remote host closed the connection","date":"2013-11-26T02:10:07.902Z","type":"quit"}
{"nick":"quim","date":"2013-11-26T02:11:06.110Z","type":"quit"}
{"nick":"jcrugzz","reason":"Ping timeout: 240 seconds","date":"2013-11-26T02:12:24.800Z","type":"quit"}
{"nick":"DTrejo","date":"2013-11-26T02:13:16.719Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-11-26T02:13:18.901Z","type":"quit"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2013-11-26T02:14:42.204Z","type":"quit"}
{"nick":"jxson","date":"2013-11-26T02:15:10.316Z","type":"join"}
{"nick":"paulfryzel","date":"2013-11-26T02:16:33.399Z","type":"join"}
{"nick":"DTrejo","reason":"Remote host closed the connection","date":"2013-11-26T02:17:26.613Z","type":"quit"}
{"nick":"jxson","reason":"Ping timeout: 265 seconds","date":"2013-11-26T02:20:10.941Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-11-26T02:20:58.166Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-11-26T02:22:50.056Z","type":"quit"}
{"nick":"wolfeidau","reason":"Ping timeout: 245 seconds","date":"2013-11-26T02:24:18.184Z","type":"quit"}
{"nick":"esundahl","date":"2013-11-26T02:25:34.560Z","type":"join"}
{"nick":"thlorenz_","date":"2013-11-26T02:26:21.170Z","type":"join"}
{"nick":"kevinswiber","reason":"Remote host closed the connection","date":"2013-11-26T02:26:39.288Z","type":"quit"}
{"nick":"jxson","date":"2013-11-26T02:31:39.543Z","type":"join"}
{"nick":"daleharvey","message":"rvagg: is there an open issue for this?","date":"2013-11-26T02:42:42.976Z","type":"message"}
{"nick":"jxson","reason":"Ping timeout: 245 seconds","date":"2013-11-26T02:44:43.172Z","type":"quit"}
{"nick":"rvagg","message":"daleharvey: no, hang on and I'll see if I can find the old one","date":"2013-11-26T02:46:39.849Z","type":"message"}
{"nick":"rvagg","message":"daleharvey: if this is causing problems then perhaps you could try switching to level-hyper and see if it makes a difference at all? you should get a speed increase at least","date":"2013-11-26T02:50:11.060Z","type":"message"}
{"nick":"ogd","message":"heh https://twitter.com/HackerNewsOnion/status/405165602517446659","date":"2013-11-26T02:51:41.395Z","type":"message"}
{"nick":"daleharvey","message":"rvagg: will do, ill give a shot at bisecting a well since its only started happening recently","date":"2013-11-26T02:53:01.643Z","type":"message"}
{"nick":"rvagg","message":"excellent","date":"2013-11-26T02:53:12.611Z","type":"message"}
{"nick":"rvagg","message":"ogd: haha!","date":"2013-11-26T02:53:27.057Z","type":"message"}
{"nick":"rescrv","message":"rvagg: iterator vs. snapshot.  An iterator will make an implicit snapshot.","date":"2013-11-26T02:57:21.040Z","type":"message"}
{"nick":"rescrv","message":"it may make a difference to you","date":"2013-11-26T02:57:28.426Z","type":"message"}
{"nick":"rvagg","message":"rescrv: yeah, we haven't exposed the snapshot api yet at all so it'll be all about iterators","date":"2013-11-26T02:57:37.797Z","type":"message"}
{"nick":"rvagg","message":"it never got done and there just hasn't been a demand for it at all","date":"2013-11-26T02:57:51.381Z","type":"message"}
{"nick":"wolfeidau","date":"2013-11-26T03:01:24.362Z","type":"join"}
{"nick":"tmcw","reason":"Read error: Connection reset by peer","date":"2013-11-26T03:15:36.715Z","type":"quit"}
{"nick":"jxson","date":"2013-11-26T03:16:09.713Z","type":"join"}
{"nick":"paulfryzel","date":"2013-11-26T03:17:18.380Z","type":"join"}
{"nick":"tmcw","date":"2013-11-26T03:18:26.170Z","type":"join"}
{"nick":"jxson","reason":"Read error: Connection reset by peer","date":"2013-11-26T03:20:02.976Z","type":"quit"}
{"nick":"jxson","date":"2013-11-26T03:20:31.684Z","type":"join"}
{"nick":"jxson","reason":"Read error: Connection reset by peer","date":"2013-11-26T03:21:27.348Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-11-26T03:21:48.170Z","type":"quit"}
{"nick":"brycebaril","reason":"Ping timeout: 240 seconds","date":"2013-11-26T03:57:08.131Z","type":"quit"}
{"nick":"mikeal","date":"2013-11-26T04:04:05.055Z","type":"join"}
{"nick":"thlorenz_","reason":"Remote host closed the connection","date":"2013-11-26T04:09:48.550Z","type":"quit"}
{"nick":"thlorenz_","date":"2013-11-26T04:10:26.372Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 246 seconds","date":"2013-11-26T04:14:40.917Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-11-26T04:18:02.386Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-11-26T04:22:13.168Z","type":"quit"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-11-26T04:24:12.963Z","type":"quit"}
{"nick":"jxson","date":"2013-11-26T04:25:48.523Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-11-26T04:29:25.313Z","type":"quit"}
{"nick":"brycebaril","date":"2013-11-26T04:29:47.285Z","type":"join"}
{"nick":"dominictarr_","date":"2013-11-26T04:34:11.948Z","type":"join"}
{"nick":"dominictarr_","reason":"Quit: Leaving","date":"2013-11-26T04:44:36.827Z","type":"quit"}
{"nick":"dominictarr_","date":"2013-11-26T04:44:45.866Z","type":"join"}
{"nick":"dominictarr_","reason":"Ping timeout: 272 seconds","date":"2013-11-26T04:53:34.011Z","type":"quit"}
{"nick":"thlorenz","date":"2013-11-26T05:11:01.934Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-11-26T05:14:01.243Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-11-26T05:18:48.389Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 265 seconds","date":"2013-11-26T05:19:29.757Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-11-26T05:23:03.384Z","type":"quit"}
{"nick":"chapel","message":"want some advice on how to handle multiple writes at the same time, in a job queue like system","date":"2013-11-26T05:29:08.609Z","type":"message"}
{"nick":"chapel","message":"preventing overwriting the same key even if a write with the same key is called multiple times in the same tick","date":"2013-11-26T05:31:39.419Z","type":"message"}
{"nick":"stagas","message":"chapel: https://github.com/stagas/level-atomic","date":"2013-11-26T05:33:28.786Z","type":"message"}
{"nick":"mikeal","date":"2013-11-26T05:33:34.037Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-11-26T05:35:32.698Z","type":"quit"}
{"nick":"chapel","message":"thanks","date":"2013-11-26T05:36:44.598Z","type":"message"}
{"nick":"esundahl","reason":"Remote host closed the connection","date":"2013-11-26T05:36:53.356Z","type":"quit"}
{"nick":"esundahl","date":"2013-11-26T05:37:30.954Z","type":"join"}
{"nick":"dominictarr_","date":"2013-11-26T05:39:15.194Z","type":"join"}
{"nick":"dguttman","date":"2013-11-26T05:42:03.315Z","type":"join"}
{"nick":"esundahl","reason":"Ping timeout: 264 seconds","date":"2013-11-26T05:42:28.382Z","type":"quit"}
{"nick":"wolfeidau","date":"2013-11-26T05:44:29.494Z","type":"join"}
{"nick":"rvagg","message":"chapel: also https://github.com/mikeal/level-mutex","date":"2013-11-26T05:46:33.352Z","type":"message"}
{"nick":"mikeal","date":"2013-11-26T05:46:49.656Z","type":"join"}
{"nick":"chapel","message":"yeah found that as well","date":"2013-11-26T05:46:58.394Z","type":"message"}
{"nick":"chapel","message":"its for a coworker","date":"2013-11-26T05:47:03.658Z","type":"message"}
{"nick":"mikeal","reason":"Ping timeout: 246 seconds","date":"2013-11-26T05:51:03.453Z","type":"quit"}
{"nick":"mikeal","date":"2013-11-26T05:58:34.327Z","type":"join"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2013-11-26T06:00:24.707Z","type":"quit"}
{"nick":"jxson","date":"2013-11-26T06:00:52.070Z","type":"join"}
{"nick":"jxson","reason":"Ping timeout: 240 seconds","date":"2013-11-26T06:05:11.850Z","type":"quit"}
{"nick":"levelbot","message":"[npm] dynalite@0.2.1 <http://npm.im/dynalite>: A mock implementation of Amazon's DynamoDB built on LevelDB (@hichaelmart)","date":"2013-11-26T06:05:18.606Z","type":"message"}
{"nick":"thlorenz","date":"2013-11-26T06:16:07.814Z","type":"join"}
{"nick":"wolfeidau","reason":"Remote host closed the connection","date":"2013-11-26T06:18:29.886Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-11-26T06:19:35.382Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-11-26T06:23:53.168Z","type":"quit"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-11-26T06:26:43.015Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 265 seconds","date":"2013-11-26T06:30:03.734Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-11-26T06:32:47.341Z","type":"join"}
{"nick":"esundahl","date":"2013-11-26T06:33:23.672Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 245 seconds","date":"2013-11-26T06:37:05.130Z","type":"quit"}
{"nick":"esundahl","reason":"Ping timeout: 265 seconds","date":"2013-11-26T06:38:16.659Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-11-26T06:38:29.417Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 272 seconds","date":"2013-11-26T06:55:09.932Z","type":"quit"}
{"nick":"thlorenz","date":"2013-11-26T07:08:42.554Z","type":"join"}
{"nick":"paulfryzel","date":"2013-11-26T07:20:21.406Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 246 seconds","date":"2013-11-26T07:21:55.888Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-11-26T07:24:43.166Z","type":"quit"}
{"nick":"jcrugzz","reason":"Ping timeout: 272 seconds","date":"2013-11-26T07:25:55.348Z","type":"quit"}
{"nick":"stagas","date":"2013-11-26T07:34:11.733Z","type":"join"}
{"nick":"jcrugzz","date":"2013-11-26T07:56:19.351Z","type":"join"}
{"nick":"aba_","date":"2013-11-26T08:03:00.983Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 272 seconds","date":"2013-11-26T08:03:49.996Z","type":"quit"}
{"nick":"ramitos","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2013-11-26T08:15:56.443Z","type":"quit"}
{"nick":"thlorenz","date":"2013-11-26T08:18:32.251Z","type":"join"}
{"nick":"paulfryzel","date":"2013-11-26T08:21:07.379Z","type":"join"}
{"nick":"brycebaril","reason":"Ping timeout: 265 seconds","date":"2013-11-26T08:24:07.649Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-11-26T08:25:33.165Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 252 seconds","date":"2013-11-26T08:32:11.720Z","type":"quit"}
{"nick":"jcrugzz","reason":"Ping timeout: 245 seconds","date":"2013-11-26T08:36:15.135Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-11-26T08:36:51.337Z","type":"join"}
{"nick":"dominictarr_","reason":"Ping timeout: 272 seconds","date":"2013-11-26T08:36:51.338Z","type":"quit"}
{"nick":"levelbot","message":"[npm] levelup@0.18.2 <http://npm.im/levelup>: Fast & simple storage - a Node.js-style LevelDB wrapper (@rvagg)","date":"2013-11-26T08:38:50.668Z","type":"message"}
{"nick":"rvagg","message":"^^readable-stream@1.0.x, was 1.1.x which is streams3 but that = breakage for some higher level modules","date":"2013-11-26T08:46:42.105Z","type":"message"}
{"nick":"aba_","reason":"Quit: aba_","date":"2013-11-26T08:53:46.739Z","type":"quit"}
{"nick":"aba_","date":"2013-11-26T08:56:21.112Z","type":"join"}
{"nick":"tarruda","date":"2013-11-26T08:56:56.691Z","type":"join"}
{"nick":"aba_","reason":"Quit: aba_","date":"2013-11-26T09:06:52.521Z","type":"quit"}
{"nick":"mcavage_","date":"2013-11-26T09:07:35.344Z","type":"join"}
{"nick":"mcavage","reason":"Read error: Connection reset by peer","date":"2013-11-26T09:07:36.182Z","type":"quit"}
{"nick":"mcollina_","reason":"Read error: Connection reset by peer","date":"2013-11-26T09:11:42.870Z","type":"quit"}
{"nick":"mcollina","date":"2013-11-26T09:11:51.497Z","type":"join"}
{"nick":"kenansulayman","date":"2013-11-26T09:12:36.189Z","type":"join"}
{"nick":"frankblizzard","date":"2013-11-26T09:15:06.448Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 265 seconds","date":"2013-11-26T09:17:17.523Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-11-26T09:21:53.384Z","type":"join"}
{"nick":"kenansulayman","reason":"Ping timeout: 245 seconds","date":"2013-11-26T09:25:11.217Z","type":"quit"}
{"nick":"kenansulayman","date":"2013-11-26T09:26:13.011Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-11-26T09:26:23.181Z","type":"quit"}
{"nick":"thlorenz","date":"2013-11-26T09:28:28.100Z","type":"join"}
{"nick":"quim","date":"2013-11-26T09:37:51.382Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 248 seconds","date":"2013-11-26T09:41:57.742Z","type":"quit"}
{"nick":"quim","reason":"Ping timeout: 245 seconds","date":"2013-11-26T09:45:08.165Z","type":"quit"}
{"nick":"quim","date":"2013-11-26T09:45:16.837Z","type":"join"}
{"nick":"quim","reason":"Ping timeout: 240 seconds","date":"2013-11-26T09:52:18.617Z","type":"quit"}
{"nick":"quim","date":"2013-11-26T09:52:26.411Z","type":"join"}
{"nick":"quim_","date":"2013-11-26T10:01:39.345Z","type":"join"}
{"nick":"quim","reason":"Ping timeout: 272 seconds","date":"2013-11-26T10:04:53.201Z","type":"quit"}
{"nick":"paulfryzel","date":"2013-11-26T10:22:35.380Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-11-26T10:27:13.164Z","type":"quit"}
{"nick":"kenansulayman","message":"rescrv What do you think about Facebook Presto?","date":"2013-11-26T10:29:22.920Z","type":"message"}
{"nick":"quim_","reason":"Ping timeout: 245 seconds","date":"2013-11-26T10:35:50.163Z","type":"quit"}
{"nick":"thlorenz","date":"2013-11-26T10:38:25.252Z","type":"join"}
{"nick":"quim","date":"2013-11-26T10:39:07.187Z","type":"join"}
{"nick":"insertcoffee","date":"2013-11-26T10:44:01.617Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 272 seconds","date":"2013-11-26T10:52:01.916Z","type":"quit"}
{"nick":"frankblizzard","date":"2013-11-26T10:54:40.360Z","type":"part"}
{"nick":"wolfeidau","date":"2013-11-26T10:56:42.373Z","type":"join"}
{"nick":"aba_","date":"2013-11-26T10:58:04.684Z","type":"join"}
{"nick":"aba_","reason":"Quit: aba_","date":"2013-11-26T11:09:16.503Z","type":"quit"}
{"nick":"kenansulayman","reason":"Quit: ≈♡≈","date":"2013-11-26T11:20:10.853Z","type":"quit"}
{"nick":"quim_","date":"2013-11-26T11:21:01.096Z","type":"join"}
{"nick":"paulfryzel","date":"2013-11-26T11:23:25.386Z","type":"join"}
{"nick":"quim__","date":"2013-11-26T11:24:17.674Z","type":"join"}
{"nick":"quim","reason":"Ping timeout: 272 seconds","date":"2013-11-26T11:24:57.966Z","type":"quit"}
{"nick":"kenansulayman","date":"2013-11-26T11:26:44.033Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-11-26T11:27:38.165Z","type":"quit"}
{"nick":"quim_","reason":"Ping timeout: 272 seconds","date":"2013-11-26T11:27:45.866Z","type":"quit"}
{"nick":"quim","date":"2013-11-26T11:36:34.715Z","type":"join"}
{"nick":"quim__","reason":"Ping timeout: 246 seconds","date":"2013-11-26T11:38:36.510Z","type":"quit"}
{"nick":"thlorenz","date":"2013-11-26T11:47:55.267Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-11-26T11:48:32.227Z","type":"quit"}
{"nick":"tarruda","reason":"Remote host closed the connection","date":"2013-11-26T12:08:04.547Z","type":"quit"}
{"nick":"dominictarr_","date":"2013-11-26T12:11:30.123Z","type":"join"}
{"nick":"dominictarr_","message":"rvagg, hey, I'm setting up my own rpi + tablet + bluetooth kb thing","date":"2013-11-26T12:11:54.607Z","type":"message"}
{"nick":"dominictarr_","message":"and also, I found a solution to the slippery screen not being in a good position problem","date":"2013-11-26T12:12:20.334Z","type":"message"}
{"nick":"thlorenz","date":"2013-11-26T12:16:07.726Z","type":"join"}
{"nick":"thlorenz_","date":"2013-11-26T12:19:49.134Z","type":"join"}
{"nick":"paulfryzel","date":"2013-11-26T12:24:11.380Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 245 seconds","date":"2013-11-26T12:28:28.165Z","type":"quit"}
{"nick":"rescrv","message":"kenansulayman: it works for them.  I have other ideas in this space, but it's hard to argue with \"It works for Facebook\"","date":"2013-11-26T12:28:51.906Z","type":"message"}
{"nick":"kenansulayman","message":"How could BigTable be approached in K/V?","date":"2013-11-26T12:29:35.504Z","type":"message"}
{"nick":"kenansulayman","message":"BigQuery*","date":"2013-11-26T12:29:56.862Z","type":"message"}
{"nick":"kenansulayman","message":"Or whatever its called","date":"2013-11-26T12:30:05.307Z","type":"message"}
{"nick":"esundahl","date":"2013-11-26T12:32:27.702Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 246 seconds","date":"2013-11-26T12:33:12.505Z","type":"quit"}
{"nick":"esundahl","reason":"Ping timeout: 245 seconds","date":"2013-11-26T12:37:05.125Z","type":"quit"}
{"nick":"dominictarr_","reason":"Quit: Leaving","date":"2013-11-26T12:37:10.525Z","type":"quit"}
{"nick":"dominictarr_","date":"2013-11-26T12:37:22.165Z","type":"join"}
{"nick":"quim","reason":"Remote host closed the connection","date":"2013-11-26T12:48:02.729Z","type":"quit"}
{"nick":"kenansulayman","message":"rescrv","date":"2013-11-26T12:52:04.672Z","type":"message"}
{"nick":"aba_","date":"2013-11-26T12:53:26.148Z","type":"join"}
{"nick":"tmcw","date":"2013-11-26T12:56:16.562Z","type":"quit"}
{"nick":"thlorenz_","date":"2013-11-26T12:59:50.792Z","type":"join"}
{"nick":"kenansulayman","reason":"Ping timeout: 246 seconds","date":"2013-11-26T13:04:45.088Z","type":"quit"}
{"nick":"aba_","reason":"Quit: aba_","date":"2013-11-26T13:07:15.751Z","type":"quit"}
{"nick":"kenansulayman","date":"2013-11-26T13:07:16.825Z","type":"join"}
{"nick":"aba_","date":"2013-11-26T13:10:38.605Z","type":"join"}
{"nick":"thlorenz_","reason":"Ping timeout: 245 seconds","date":"2013-11-26T13:13:03.172Z","type":"quit"}
