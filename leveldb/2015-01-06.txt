{"nick":"ednapiranha","reason":"Quit: Leaving...","date":"2015-01-06T00:08:56.422Z","type":"quit"}
{"nick":"ryan_ramage","reason":"Quit: ryan_ramage","date":"2015-01-06T00:18:02.812Z","type":"quit"}
{"nick":"jjmalina","reason":"Ping timeout: 245 seconds","date":"2015-01-06T00:23:34.835Z","type":"quit"}
{"nick":"mhernandez1","date":"2015-01-06T00:37:28.754Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 244 seconds","date":"2015-01-06T01:22:19.225Z","type":"quit"}
{"nick":"yarong","reason":"Ping timeout: 256 seconds","date":"2015-01-06T01:49:35.290Z","type":"quit"}
{"nick":"ednapiranha","date":"2015-01-06T03:07:24.212Z","type":"join"}
{"nick":"mhernandez1","reason":"Remote host closed the connection","date":"2015-01-06T03:17:08.315Z","type":"quit"}
{"nick":"mhernandez1","date":"2015-01-06T03:17:44.054Z","type":"join"}
{"nick":"mhernandez1","reason":"Ping timeout: 245 seconds","date":"2015-01-06T03:21:54.590Z","type":"quit"}
{"nick":"bradleymeck","date":"2015-01-06T03:51:31.257Z","type":"join"}
{"nick":"bradleymeck","message":"anyone know of an effor to get transactions on level that is still being maintained","date":"2015-01-06T04:04:01.271Z","type":"message"}
{"nick":"bradleymeck","message":"nolanlawson: are there docs on snapshotting in memdown","date":"2015-01-06T04:42:15.755Z","type":"message"}
{"nick":"bradleymeck","message":"with pessimistic locking you can get retry transactions https://gist.github.com/bmeck/db4b6d58192a3f94386d but unsure if someone is already doing this","date":"2015-01-06T04:57:02.140Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-01-06T05:27:10.459Z","type":"quit"}
{"nick":"nolanlawson","message":"bradleymeck: the snapshotting is really simple. if you start an iterator, then that iterator will always reflect the state of the DB when it was instantiated","date":"2015-01-06T05:51:59.054Z","type":"message"}
{"nick":"nolanlawson","message":"it's supported by several adapters (memdown, localstorage-down come to mind), and there's a test in abstract-leveldown that confirms it","date":"2015-01-06T05:52:16.416Z","type":"message"}
{"nick":"nolanlawson","message":"also batch() is a transactional write operation","date":"2015-01-06T05:56:07.369Z","type":"message"}
{"nick":"nolanlawson","message":"e.g. see how pouchdb does leveldb transactions: https://github.com/pouchdb/pouchdb/blob/master/lib/adapters/leveldb/leveldb-transaction.js","date":"2015-01-06T05:56:42.714Z","type":"message"}
{"nick":"ednapiranha","date":"2015-01-06T06:05:06.141Z","type":"quit"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2015-01-06T06:43:24.565Z","type":"quit"}
{"nick":"sveisvei","date":"2015-01-06T06:47:05.214Z","type":"join"}
{"nick":"ChrisPartridge","reason":"Ping timeout: 264 seconds","date":"2015-01-06T06:49:51.888Z","type":"quit"}
{"nick":"bonswouar","date":"2015-01-06T08:25:09.770Z","type":"join"}
{"nick":"joakino","date":"2015-01-06T09:28:22.673Z","type":"join"}
{"nick":"joakino","date":"2015-01-06T09:41:48.432Z","type":"quit"}
{"nick":"joakino","date":"2015-01-06T09:43:17.800Z","type":"join"}
{"nick":"bradleymeck","date":"2015-01-06T10:45:15.108Z","type":"join"}
{"nick":"bradleymeck","reason":"Ping timeout: 245 seconds","date":"2015-01-06T10:49:27.822Z","type":"quit"}
{"nick":"stagas","date":"2015-01-06T10:54:54.901Z","type":"join"}
{"nick":"bradleymeck","date":"2015-01-06T11:35:12.774Z","type":"join"}
{"nick":"bradleymeck","message":"nolanlawson: it looks like pouchdb does not bail on concurrent writes, but i am relying on atomic writes in batch() just trying to get www.postgresql.org/files/developer/concurrency.pdf style transactions","date":"2015-01-06T11:35:40.905Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-01-06T12:24:11.946Z","type":"quit"}
{"nick":"mhernandez1","date":"2015-01-06T12:46:25.157Z","type":"join"}
{"nick":"mhernandez1","reason":"Remote host closed the connection","date":"2015-01-06T12:46:25.780Z","type":"quit"}
{"nick":"tarruda","date":"2015-01-06T12:57:33.921Z","type":"join"}
{"nick":"ramitos","date":"2015-01-06T13:13:50.375Z","type":"join"}
{"nick":"mhernandez1","date":"2015-01-06T13:51:28.565Z","type":"join"}
{"nick":"mhernandez1","reason":"Ping timeout: 244 seconds","date":"2015-01-06T13:55:49.196Z","type":"quit"}
{"nick":"mhernandez1","date":"2015-01-06T13:57:40.443Z","type":"join"}
{"nick":"jez0990_","reason":"Quit: No Ping reply in 180 seconds.","date":"2015-01-06T14:20:41.578Z","type":"quit"}
{"nick":"jez0990","date":"2015-01-06T14:22:33.222Z","type":"join"}
{"nick":"neonstalwart","date":"2015-01-06T14:36:13.163Z","type":"join"}
{"nick":"neonstalwart1","date":"2015-01-06T14:41:35.149Z","type":"join"}
{"nick":"neonstalwart","reason":"Ping timeout: 244 seconds","date":"2015-01-06T14:44:42.240Z","type":"quit"}
{"nick":"dguttman","date":"2015-01-06T14:45:23.319Z","type":"join"}
{"nick":"dguttman","reason":"Client Quit","date":"2015-01-06T14:46:45.894Z","type":"quit"}
{"nick":"mhernandez1","reason":"Read error: Connection reset by peer","date":"2015-01-06T14:48:36.854Z","type":"quit"}
{"nick":"rescrv","reason":"Ping timeout: 250 seconds","date":"2015-01-06T14:54:50.314Z","type":"quit"}
