{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-29T00:05:30.611Z","type":"quit"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-05-29T00:16:04.150Z","type":"quit"}
{"nick":"dominictarr","date":"2013-05-29T00:20:52.462Z","type":"join"}
{"nick":"ralphtheninja","reason":"Ping timeout: 248 seconds","date":"2013-05-29T00:21:57.666Z","type":"quit"}
{"nick":"thl0","date":"2013-05-29T00:27:25.453Z","type":"join"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-05-29T00:35:26.767Z","type":"quit"}
{"nick":"timoxley","date":"2013-05-29T01:14:40.494Z","type":"join"}
{"nick":"levelbot","reason":"Remote host closed the connection","date":"2013-05-29T01:35:35.196Z","type":"quit"}
{"nick":"thl0","message":"juliangruber: rvagg: so there is one problem I see with the .pre add indexing approach","date":"2013-05-29T01:37:02.337Z","type":"message"}
{"nick":"thl0","message":"it forces me to JSON.parse the value if I wanna index on one of it's properties","date":"2013-05-29T01:38:02.009Z","type":"message"}
{"nick":"thl0","message":"juliangruber: rvagg: i.e. https://github.com/thlorenz/level1/blob/master/samples/indexing/with-sublevel-hooks.js#L29","date":"2013-05-29T01:38:09.176Z","type":"message"}
{"nick":"thl0","message":"although this only makes inserts slow, so it depends on what you are trying to do","date":"2013-05-29T01:39:00.290Z","type":"message"}
{"nick":"thl0","message":"still though, there should be a better way, i.e. don't just give me the value, but instead the entire thing, so I could attach a property right next to key and value and wouldn't have to parse","date":"2013-05-29T01:39:58.861Z","type":"message"}
{"nick":"thl0","message":"somehow everything but key and value gets stripped before pre is called","date":"2013-05-29T01:42:20.538Z","type":"message"}
{"nick":"thl0","message":"may do that right after pre so I can use that info to index?","date":"2013-05-29T01:42:35.181Z","type":"message"}
{"nick":"thl0","message":"juliangruber: rvagg: submitted an issue, maybe dominictarr will have a chance to look at it: https://github.com/dominictarr/level-sublevel/issues/12","date":"2013-05-29T01:50:50.513Z","type":"message"}
{"nick":"eugeneware","date":"2013-05-29T02:25:33.626Z","type":"join"}
{"nick":"Pwnna","reason":"Remote host closed the connection","date":"2013-05-29T02:41:50.682Z","type":"quit"}
{"nick":"Pwnna","date":"2013-05-29T02:58:10.883Z","type":"join"}
{"nick":"levelbot","date":"2013-05-29T03:01:36.502Z","type":"join"}
{"nick":"thl0","message":"rvagg: seems like mapped-index is broken due to patches of dependencies?","date":"2013-05-29T03:02:16.949Z","type":"message"}
{"nick":"thl0","message":"crypto.js:132","date":"2013-05-29T03:02:50.038Z","type":"message"}
{"nick":"thl0","message":"  return new Hash(hash);","date":"2013-05-29T03:02:50.240Z","type":"message"}
{"nick":"thl0","message":"         ^","date":"2013-05-29T03:02:50.383Z","type":"message"}
{"nick":"thl0","message":"RangeError: Maximum call stack size exceeded","date":"2013-05-29T03:02:51.614Z","type":"message"}
{"nick":"thl0","message":"is the error I get when running the tests","date":"2013-05-29T03:03:34.756Z","type":"message"}
{"nick":"rvagg","message":"eeek","date":"2013-05-29T03:03:57.377Z","type":"message"}
{"nick":"rvagg","message":"thl0: thanks, will get on to it when I find a spare moment","date":"2013-05-29T03:04:10.431Z","type":"message"}
{"nick":"rvagg","action":"is fixing raid arrays with busted disks","date":"2013-05-29T03:04:21.961Z","type":"action"}
{"nick":"thl0","message":"cool - I'll stick with just sublevel for now then - also mapped-index still depends on levelup 0.7","date":"2013-05-29T03:05:07.686Z","type":"message"}
{"nick":"rvagg","message":"it probably shouldn't depend on anything","date":"2013-05-29T03:05:24.367Z","type":"message"}
{"nick":"rvagg","message":"I need to update the main place where I'm using it, that'll force me to fix stuff","date":"2013-05-29T03:05:37.505Z","type":"message"}
{"nick":"thl0","message":"np - whenever you have a chance - I'm good for now - sublevel is fine all these other things are just very nice wrappers","date":"2013-05-29T03:06:31.136Z","type":"message"}
{"nick":"thl0","message":"I can rewite stuff later","date":"2013-05-29T03:06:38.835Z","type":"message"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-05-29T03:30:16.263Z","type":"quit"}
{"nick":"eugeneware_","date":"2013-05-29T03:40:12.109Z","type":"join"}
{"nick":"eugeneware_","date":"2013-05-29T03:41:22.980Z","type":"part"}
{"nick":"levelbot","message":"[npm] jsonquery@0.0.0 <http://npm.im/jsonquery>: MongoDB query language implemented as a Streaming filter (@nharbour)","date":"2013-05-29T04:15:27.652Z","type":"message"}
{"nick":"rvagg","message":"eugeneware: going hot with all the leveldb packages, would be interested to hear what you're doing with it","date":"2013-05-29T04:18:39.955Z","type":"message"}
{"nick":"ramitos","reason":"Ping timeout: 252 seconds","date":"2013-05-29T05:19:06.952Z","type":"quit"}
{"nick":"levelbot","message":"[npm] jsonquery@0.0.1 <http://npm.im/jsonquery>: MongoDB query language implemented as a Streaming filter (@nharbour)","date":"2013-05-29T05:21:28.937Z","type":"message"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-05-29T05:36:38.541Z","type":"quit"}
{"nick":"nemequ","reason":"\"Ex-Chat\"","date":"2013-05-29T06:25:23.640Z","type":"part"}
{"nick":"timoxley","date":"2013-05-29T06:34:54.261Z","type":"join"}
{"nick":"Pwnna","reason":"Ping timeout: 277 seconds","date":"2013-05-29T06:35:29.732Z","type":"quit"}
{"nick":"ralphtheninja","date":"2013-05-29T06:57:07.293Z","type":"join"}
{"nick":"Pwnna","date":"2013-05-29T07:12:03.561Z","type":"join"}
{"nick":"Pwnna","reason":"Remote host closed the connection","date":"2013-05-29T07:25:27.983Z","type":"quit"}
{"nick":"Pwnna","date":"2013-05-29T07:30:08.552Z","type":"join"}
{"nick":"dominictarr","date":"2013-05-29T07:48:22.945Z","type":"join"}
{"nick":"no9","date":"2013-05-29T07:53:03.520Z","type":"join"}
{"nick":"num9","date":"2013-05-29T08:11:41.136Z","type":"join"}
{"nick":"eugeneware","reason":"Quit: Leaving.","date":"2013-05-29T08:19:18.190Z","type":"quit"}
{"nick":"levelbot","reason":"Remote host closed the connection","date":"2013-05-29T08:22:12.726Z","type":"quit"}
{"nick":"ChrisPartridge","reason":"Ping timeout: 276 seconds","date":"2013-05-29T08:36:26.642Z","type":"quit"}
{"nick":"hij1nx","reason":"Ping timeout: 264 seconds","date":"2013-05-29T08:55:54.201Z","type":"quit"}
{"nick":"Pwnna","reason":"Ping timeout: 256 seconds","date":"2013-05-29T08:56:10.519Z","type":"quit"}
{"nick":"hij1nx","date":"2013-05-29T08:56:55.210Z","type":"join"}
{"nick":"timoxley","reason":"Quit: Computer has gone to sleep.","date":"2013-05-29T10:30:46.444Z","type":"quit"}
{"nick":"werle","date":"2013-05-29T10:39:14.060Z","type":"join"}
{"nick":"timoxley","date":"2013-05-29T10:43:42.339Z","type":"join"}
{"nick":"thl0","date":"2013-05-29T10:59:33.212Z","type":"join"}
{"nick":"dominictarr","message":"hij1nx: ping?","date":"2013-05-29T12:10:53.142Z","type":"message"}
{"nick":"thl0","reason":"Remote host closed the connection","date":"2013-05-29T12:33:39.680Z","type":"quit"}
{"nick":"werle","reason":"Quit: Leaving.","date":"2013-05-29T13:13:29.695Z","type":"quit"}
{"nick":"thl0","date":"2013-05-29T13:17:00.264Z","type":"join"}
{"nick":"thl0","message":"dominictarr: I created somewhat of a plan on how to mine npm registry and github to get the necessary data in order to analyze a package an properly rate it","date":"2013-05-29T13:26:02.104Z","type":"message"}
{"nick":"thl0","message":"https://github.com/thlorenz/valuepack/blob/master/data/mine.md","date":"2013-05-29T13:26:08.353Z","type":"message"}
{"nick":"thl0","message":"probably will first just store all this info and then run an analyzer over the data","date":"2013-05-29T13:26:26.956Z","type":"message"}
{"nick":"thl0","message":"will prob. use levelup and sublevel only (don't need more abstraction) and mapped-index didn't really work for me","date":"2013-05-29T13:27:39.058Z","type":"message"}
{"nick":"dominictarr","message":"mapped-index?","date":"2013-05-29T13:40:09.343Z","type":"message"}
{"nick":"dominictarr","message":"so, I should probably tell you about my ideas for npmd, so that we can work together where they overlap","date":"2013-05-29T13:42:06.513Z","type":"message"}
{"nick":"dominictarr","message":"thl0: which is basically about making npm install really fast","date":"2013-05-29T13:45:04.551Z","type":"message"}
{"nick":"thl0","message":"dominictarr: ok, do you have anything written up?","date":"2013-05-29T13:50:37.210Z","type":"message"}
{"nick":"thl0","message":"level-mapped-index by rvagg didn't work for me","date":"2013-05-29T13:50:56.201Z","type":"message"}
{"nick":"thl0","message":"so yes, the first part of what I'm doing may overlap, since I'm pulling down all repos metadata","date":"2013-05-29T13:51:28.037Z","type":"message"}
{"nick":"thl0","message":"but after that I'm not sure (I'm not pulling tars or readmes)","date":"2013-05-29T13:51:54.618Z","type":"message"}
{"nick":"thl0","action":"takes a look at npmd","date":"2013-05-29T13:52:03.680Z","type":"action"}
{"nick":"thl0","message":"dominictarr: so looks like for npmd dealing with deltas make sense, but maybe not for valuepack","date":"2013-05-29T13:54:24.617Z","type":"message"}
{"nick":"thl0","message":"in my case it will be hard to reason about what data will have to be updated due to a change in the npm registry","date":"2013-05-29T13:54:52.044Z","type":"message"}
{"nick":"thl0","message":"also I need to look at github info, which has no update feed","date":"2013-05-29T13:55:07.102Z","type":"message"}
{"nick":"thl0","message":"so for now I was just gonna run a daily thing that pulls down everything and runs analyzer over the data","date":"2013-05-29T13:55:32.312Z","type":"message"}
{"nick":"dominictarr","message":"you could get an updated feed from github by creating a user, and following everyone you want to follow","date":"2013-05-29T13:55:56.880Z","type":"message"}
{"nick":"dominictarr","message":"or every project.","date":"2013-05-29T13:56:01.583Z","type":"message"}
{"nick":"mbalho","message":"ooh good idea","date":"2013-05-29T13:56:04.504Z","type":"message"}
{"nick":"thl0","message":"this may be the easiest and actually be fast enough - tonight I'm gonna do some experimentation on how long everything will take","date":"2013-05-29T13:56:13.724Z","type":"message"}
{"nick":"thl0","message":"dominictarr: ah that's an idea","date":"2013-05-29T13:56:26.362Z","type":"message"}
{"nick":"dominictarr","message":"plus, then you get near realtime updates","date":"2013-05-29T13:56:47.892Z","type":"message"}
{"nick":"thl0","message":"but to get a start I'd need to pull down everything anyways","date":"2013-05-29T13:57:01.695Z","type":"message"}
{"nick":"dominictarr","message":"thl0: I also implemented a simpler index thing for level","date":"2013-05-29T13:57:14.812Z","type":"message"}
{"nick":"thl0","message":"so I'll see how long that takes and then build it out from there","date":"2013-05-29T13:57:19.376Z","type":"message"}
{"nick":"dominictarr","message":"level-index","date":"2013-05-29T13:57:20.818Z","type":"message"}
{"nick":"thl0","message":"I saw that, but sublevel seems fine","date":"2013-05-29T13:57:49.455Z","type":"message"}
{"nick":"dominictarr","message":"thl0: good point. you need both of those parts combined for data replication","date":"2013-05-29T13:57:51.587Z","type":"message"}
{"nick":"dominictarr","message":"have a bit that finds where it was last up to, and pull down everything since then","date":"2013-05-29T13:58:17.618Z","type":"message"}
{"nick":"dominictarr","message":"and then a bit that keeps it up to date.","date":"2013-05-29T13:58:26.228Z","type":"message"}
{"nick":"thl0","message":"dominictarr: as far as I understand from reading level-hooks, the pre first goes thru entire batch and just tags the indexing operations onto it?","date":"2013-05-29T13:58:39.145Z","type":"message"}
{"nick":"thl0","message":"so puts and indexing is done in one batch right?","date":"2013-05-29T13:59:01.511Z","type":"message"}
{"nick":"dominictarr","message":"yes","date":"2013-05-29T13:59:01.762Z","type":"message"}
{"nick":"thl0","message":"nice","date":"2013-05-29T13:59:06.210Z","type":"message"}
{"nick":"dominictarr","message":"exactly. so your indexes and your data will always be consistent.","date":"2013-05-29T13:59:24.313Z","type":"message"}
{"nick":"thl0","message":"dominictarr: yeah I thought about that way, but it's way more complex to handle deltas","date":"2013-05-29T13:59:43.300Z","type":"message"}
{"nick":"dominictarr","message":"(well, you need to handle deletes differently)","date":"2013-05-29T13:59:43.776Z","type":"message"}
{"nick":"thl0","message":"dominictarr: I'll have none if I don't deal with deltas ;)","date":"2013-05-29T13:59:58.507Z","type":"message"}
{"nick":"thl0","message":"so if I can get away with just reevaluating everything i.e. daily I'll probably go with that for now","date":"2013-05-29T14:00:37.583Z","type":"message"}
{"nick":"thl0","message":"I can always get smart and more efficient later ;)","date":"2013-05-29T14:00:56.608Z","type":"message"}
{"nick":"dominictarr","message":"sure, that is probably the simple way to start.","date":"2013-05-29T14:00:56.826Z","type":"message"}
{"nick":"thl0","message":"but the follow all users on github is a grand idea :)","date":"2013-05-29T14:01:13.496Z","type":"message"}
{"nick":"thl0","message":"dominictarr: for pre analyzation data, would you store the npm (users and packages) in a separate db than the github user info?","date":"2013-05-29T14:01:56.454Z","type":"message"}
{"nick":"thl0","message":"or is it better in one?","date":"2013-05-29T14:02:05.714Z","type":"message"}
{"nick":"dominictarr","message":"well, if you use sublevel it doesn't make much difference","date":"2013-05-29T14:02:24.069Z","type":"message"}
{"nick":"dominictarr","message":"it's easy to decouple the github part, and the npm part","date":"2013-05-29T14:02:36.868Z","type":"message"}
{"nick":"thl0","message":"except I could run two processes in parallel if I use two dbs","date":"2013-05-29T14:02:57.402Z","type":"message"}
{"nick":"thl0","message":"yeah decoupling is automatic","date":"2013-05-29T14:03:10.909Z","type":"message"}
{"nick":"dominictarr","message":"might be simpler to use multilevel","date":"2013-05-29T14:03:34.856Z","type":"message"}
{"nick":"dominictarr","message":"that could let you fan out to many workers","date":"2013-05-29T14:03:44.790Z","type":"message"}
{"nick":"dominictarr","message":"if necessary","date":"2013-05-29T14:03:47.765Z","type":"message"}
{"nick":"thl0","message":"working on replicated dbs?","date":"2013-05-29T14:04:20.695Z","type":"message"}
{"nick":"thl0","message":"or is this on same machine?","date":"2013-05-29T14:04:37.967Z","type":"message"}
{"nick":"thl0","message":"dominictarr: ah, I think I got it now this uses a server so multiple processes can connect to same db, how about contention juliangruber?","date":"2013-05-29T14:05:33.633Z","type":"message"}
{"nick":"thl0","message":"i.e. if two process try to write at same time?","date":"2013-05-29T14:06:05.211Z","type":"message"}
{"nick":"thl0","message":"maybe even to same key?","date":"2013-05-29T14:06:13.118Z","type":"message"}
{"nick":"no9","reason":"Ping timeout: 256 seconds","date":"2013-05-29T14:07:16.510Z","type":"quit"}
{"nick":"num9","reason":"Ping timeout: 252 seconds","date":"2013-05-29T14:07:17.977Z","type":"quit"}
{"nick":"dominictarr","message":"so, that isn't a part of multilevel, you'd want to handle that another way","date":"2013-05-29T14:07:52.439Z","type":"message"}
{"nick":"dominictarr","message":"the simplest, would be to arange your workers so that they worked with different data, so they never collided.","date":"2013-05-29T14:08:22.602Z","type":"message"}
{"nick":"dominictarr","message":"they can write to different keys, just fine, but the same key the last one will win","date":"2013-05-29T14:08:53.304Z","type":"message"}
{"nick":"dominictarr","message":"like in mongo.","date":"2013-05-29T14:08:56.227Z","type":"message"}
{"nick":"dominictarr","message":"we have been experimenting with ways to do a conditional update, though.","date":"2013-05-29T14:09:17.632Z","type":"message"}
{"nick":"thl0","message":"got it","date":"2013-05-29T14:09:23.709Z","type":"message"}
{"nick":"thl0","message":"also if I give each worker a subset (i.e. of github users) to work with, the keys should never collide","date":"2013-05-29T14:09:48.972Z","type":"message"}
{"nick":"thl0","message":"knowing of that option it makes sense to just use one db","date":"2013-05-29T14:10:04.109Z","type":"message"}
{"nick":"thl0","message":"can't wait to get home and give this a try ;)","date":"2013-05-29T14:10:34.962Z","type":"message"}
{"nick":"dominictarr","message":"but I'm gonna work on the conditional update stuff soon, because that will give us master-master replication","date":"2013-05-29T14:11:49.322Z","type":"message"}
{"nick":"thl0","message":"that will be nice to have","date":"2013-05-29T14:12:09.014Z","type":"message"}
{"nick":"thl0","message":"dominictarr: btw I saw that all these modules basically mixin functionality into the level db instance","date":"2013-05-29T14:12:38.616Z","type":"message"}
{"nick":"thl0","message":"aren't you worried about possible name collides?","date":"2013-05-29T14:12:51.791Z","type":"message"}
{"nick":"thl0","message":"i.e. if more people write mixins like that?","date":"2013-05-29T14:13:07.610Z","type":"message"}
{"nick":"thl0","message":"also some mixins depend on mixins from other modules (i.e. sublevel), but don't require it","date":"2013-05-29T14:14:04.360Z","type":"message"}
{"nick":"dominictarr","message":"well, only level-sublevel does that","date":"2013-05-29T14:14:08.077Z","type":"message"}
{"nick":"dominictarr","message":"and then sublevel gives you a new instance that you are free to extend.","date":"2013-05-29T14:14:59.839Z","type":"message"}
{"nick":"thl0","message":"mapped-index does as well","date":"2013-05-29T14:15:04.802Z","type":"message"}
{"nick":"thl0","message":"you have to do db = sublevel(db); db = mappedIndex(db)","date":"2013-05-29T14:15:43.004Z","type":"message"}
{"nick":"thl0","message":"each call mixes more stuff in","date":"2013-05-29T14:15:50.823Z","type":"message"}
{"nick":"dominictarr","message":"hmm","date":"2013-05-29T14:16:01.905Z","type":"message"}
{"nick":"dominictarr","message":"you should do it like this:","date":"2013-05-29T14:16:07.842Z","type":"message"}
{"nick":"dominictarr","message":"db = sublevel(level(path))","date":"2013-05-29T14:16:17.383Z","type":"message"}
{"nick":"dominictarr","message":"mapDb = MapReduce(db, ...)","date":"2013-05-29T14:16:25.505Z","type":"message"}
{"nick":"dominictarr","message":"mapDb !== db","date":"2013-05-29T14:16:30.359Z","type":"message"}
{"nick":"thl0","message":"just wondering if there is maybe a better way, i.e. just exposing functions into which you pass your db instead of mutating the db itself by adding functions itself","date":"2013-05-29T14:16:39.744Z","type":"message"}
{"nick":"dominictarr","message":"then add map-reduce related features to mapDb","date":"2013-05-29T14:16:45.673Z","type":"message"}
{"nick":"thl0","message":"yeah, but different modules may try to add fns with same name","date":"2013-05-29T14:16:58.030Z","type":"message"}
{"nick":"thl0","message":"then you are screwed","date":"2013-05-29T14:17:07.244Z","type":"message"}
{"nick":"thl0","message":"and get weird behaviors depending on what module mixed itself in last","date":"2013-05-29T14:17:40.643Z","type":"message"}
{"nick":"dominictarr","message":"okay, mapped-index is a bad pattern","date":"2013-05-29T14:17:56.085Z","type":"message"}
{"nick":"thl0","message":"dominictarr: just pointing this out, since it's still fairly new and API may still be fixed now, but maybe harder to do later","date":"2013-05-29T14:18:26.737Z","type":"message"}
{"nick":"dominictarr","message":"yes.","date":"2013-05-29T14:18:35.611Z","type":"message"}
{"nick":"dominictarr","message":"this is a huge improvement since before sublevel","date":"2013-05-29T14:18:47.603Z","type":"message"}
{"nick":"dominictarr","message":"but if you only extend sublevels, and not the root db (except for sublevel, of course)","date":"2013-05-29T14:19:18.355Z","type":"message"}
{"nick":"dominictarr","message":"I mean, sublevel is the only thing that changes stuff.","date":"2013-05-29T14:19:40.819Z","type":"message"}
{"nick":"thl0","message":"well hooks does too","date":"2013-05-29T14:19:48.452Z","type":"message"}
{"nick":"dominictarr","message":"and then everything else can be clean.","date":"2013-05-29T14:19:48.983Z","type":"message"}
{"nick":"thl0","message":"https://github.com/dominictarr/level-hooks/blob/master/index.js#L134-L146","date":"2013-05-29T14:19:56.905Z","type":"message"}
{"nick":"dominictarr","message":"oh, right. consider that a part of sublevel.","date":"2013-05-29T14:20:04.423Z","type":"message"}
{"nick":"dominictarr","message":"we are looking at combining hooks into levelup, anyway.","date":"2013-05-29T14:20:19.427Z","type":"message"}
{"nick":"dominictarr","message":"the blocker is just deciding how to handle async prehooks,","date":"2013-05-29T14:20:49.914Z","type":"message"}
{"nick":"dominictarr","message":"(for example, for conditional updates)","date":"2013-05-29T14:20:59.144Z","type":"message"}
{"nick":"thl0","message":"ok, that is better then","date":"2013-05-29T14:22:22.940Z","type":"message"}
{"nick":"thl0","message":"I also saw another one that added a bunch of readStream functions (with two names each) - can't remember which one","date":"2013-05-29T14:23:31.973Z","type":"message"}
{"nick":"thl0","message":"dominictarr: but if you consolidate this stuff and keep this under control it should be ok","date":"2013-05-29T14:24:00.522Z","type":"message"}
{"nick":"dominictarr","message":"the other reason for this, is that it makes multilevel able to expose sublevels (and features added in them) to client connections.","date":"2013-05-29T14:26:40.879Z","type":"message"}
{"nick":"thl0","message":"ah, that makes sense","date":"2013-05-29T14:27:30.245Z","type":"message"}
{"nick":"thl0","message":"it would just suck if way further down the line you realize that this mixin model breaks down and it's too late to fix it without breaking lots of things","date":"2013-05-29T14:28:03.465Z","type":"message"}
{"nick":"werle","date":"2013-05-29T14:33:20.263Z","type":"join"}
{"nick":"levelbot","date":"2013-05-29T14:41:29.121Z","type":"join"}
{"nick":"no9","date":"2013-05-29T14:58:10.390Z","type":"join"}
{"nick":"num9","date":"2013-05-29T14:58:28.423Z","type":"join"}
{"nick":"levelbot","reason":"Remote host closed the connection","date":"2013-05-29T15:06:01.589Z","type":"quit"}
{"nick":"levelbot","date":"2013-05-29T15:07:45.343Z","type":"join"}
{"nick":"brianloveswords","reason":"Excess Flood","date":"2013-05-29T15:26:16.852Z","type":"quit"}
{"nick":"brianloveswords","date":"2013-05-29T15:27:48.675Z","type":"join"}
{"nick":"thl0","reason":"Ping timeout: 245 seconds","date":"2013-05-29T15:38:24.253Z","type":"quit"}
{"nick":"thl0","date":"2013-05-29T15:39:14.797Z","type":"join"}
{"nick":"ramitos","date":"2013-05-29T15:44:47.787Z","type":"join"}
{"nick":"thl0","message":"dominictarr: ping","date":"2013-05-29T15:48:50.876Z","type":"message"}
{"nick":"dominictarr","message":"yo","date":"2013-05-29T15:48:56.331Z","type":"message"}
{"nick":"thl0","message":"am I missing something in that issue?","date":"2013-05-29T15:49:05.589Z","type":"message"}
{"nick":"thl0","message":"i.e. I don't wanna store the values of my indexes as json","date":"2013-05-29T15:49:19.007Z","type":"message"}
{"nick":"thl0","message":"unnec. overhead","date":"2013-05-29T15:49:29.600Z","type":"message"}
