{"nick":"kenansulayman","message":"juliangruber Thanks you for help btw.","date":"2013-08-23T00:04:59.021Z","type":"message"}
{"nick":"juliangruber","message":"kenansulayman: sure :)","date":"2013-08-23T00:05:09.501Z","type":"message"}
{"nick":"kenansulayman","message":"The coffee is on me then","date":"2013-08-23T00:05:18.232Z","type":"message"}
{"nick":"juliangruber","message":":)","date":"2013-08-23T00:14:27.575Z","type":"message"}
{"nick":"thlorenz","date":"2013-08-23T00:15:27.372Z","type":"join"}
{"nick":"juliangruber","message":"substack dominictarr: I get the impression that pull based streams aren't optimal for slow connections, as the roundtrip for \"give me data\" might take a long time","date":"2013-08-23T00:20:31.964Z","type":"message"}
{"nick":"juliangruber","message":"shouldn't that kind of feedback be transmitted in the background/off-line?","date":"2013-08-23T00:24:32.121Z","type":"message"}
{"nick":"ryan_ramage","reason":"Quit: ryan_ramage","date":"2013-08-23T00:29:38.891Z","type":"quit"}
{"nick":"juliangruber","message":"and how do you do backpressure with websockets?","date":"2013-08-23T00:31:52.823Z","type":"message"}
{"nick":"ryan_ramage","date":"2013-08-23T00:41:41.956Z","type":"join"}
{"nick":"kenansulayman","reason":"Quit: ≈♡≈","date":"2013-08-23T00:47:42.068Z","type":"quit"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2013-08-23T00:58:55.618Z","type":"quit"}
{"nick":"jxson","date":"2013-08-23T01:00:04.791Z","type":"join"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2013-08-23T01:00:37.471Z","type":"quit"}
{"nick":"dominictarr_","date":"2013-08-23T01:01:28.966Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 268 seconds","date":"2013-08-23T01:04:56.175Z","type":"quit"}
{"nick":"dominictarr_","new_nick":"dominictarr","date":"2013-08-23T01:04:56.395Z","type":"nick"}
{"nick":"kenansulayman","date":"2013-08-23T01:07:04.615Z","type":"join"}
{"nick":"kenansulayman","reason":"Ping timeout: 264 seconds","date":"2013-08-23T01:14:16.405Z","type":"quit"}
{"nick":"i_m_ca","date":"2013-08-23T01:21:35.319Z","type":"join"}
{"nick":"jxson","date":"2013-08-23T01:30:56.869Z","type":"join"}
{"nick":"jxson","reason":"Ping timeout: 246 seconds","date":"2013-08-23T01:38:58.935Z","type":"quit"}
{"nick":"substack","message":"mbalho: now lexicographic-integer doesn't have the precision problems I mentioned earlier","date":"2013-08-23T01:44:09.180Z","type":"message"}
{"nick":"substack","message":"at the expense of an extra byte in the worst case","date":"2013-08-23T01:44:29.643Z","type":"message"}
{"nick":"substack","message":"integers greater than ~4 billion will take 10 bytes to store","date":"2013-08-23T01:45:01.051Z","type":"message"}
{"nick":"substack","message":"and if you want a compact floating point representation, you can just store the lexicographic integer paired with a single-byte power-of-16 exponent divisor","date":"2013-08-23T01:48:34.596Z","type":"message"}
{"nick":"tmcw","date":"2013-08-23T01:51:59.378Z","type":"join"}
{"nick":"tmcw","reason":"Remote host closed the connection","date":"2013-08-23T01:53:58.666Z","type":"quit"}
{"nick":"soldair","reason":"Quit: Page closed","date":"2013-08-23T01:57:48.168Z","type":"quit"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-08-23T02:08:54.051Z","type":"quit"}
{"nick":"i_m_ca","reason":"Read error: Connection reset by peer","date":"2013-08-23T02:11:12.488Z","type":"quit"}
{"nick":"i_m_ca","date":"2013-08-23T02:11:38.131Z","type":"join"}
{"nick":"timoxley","date":"2013-08-23T02:21:10.878Z","type":"join"}
{"nick":"eugeneware","date":"2013-08-23T02:28:33.625Z","type":"join"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2013-08-23T02:45:23.195Z","type":"quit"}
{"nick":"ryan_ramage","reason":"Quit: ryan_ramage","date":"2013-08-23T02:53:45.402Z","type":"quit"}
{"nick":"eugeneware","reason":"Remote host closed the connection","date":"2013-08-23T03:01:33.343Z","type":"quit"}
{"nick":"timoxley","date":"2013-08-23T03:05:30.083Z","type":"join"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2013-08-23T03:09:55.341Z","type":"quit"}
{"nick":"timoxley","date":"2013-08-23T03:11:04.811Z","type":"join"}
{"nick":"ryan_ramage","date":"2013-08-23T03:21:07.080Z","type":"join"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2013-08-23T03:21:30.082Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-08-23T03:29:59.925Z","type":"quit"}
{"nick":"dominictarr_","date":"2013-08-23T03:34:39.052Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 248 seconds","date":"2013-08-23T03:37:41.729Z","type":"quit"}
{"nick":"dominictarr_","new_nick":"dominictarr","date":"2013-08-23T03:37:42.304Z","type":"nick"}
{"nick":"timoxley","date":"2013-08-23T03:40:17.310Z","type":"join"}
{"nick":"ryan_ramage","reason":"Quit: ryan_ramage","date":"2013-08-23T03:48:42.544Z","type":"quit"}
{"nick":"ryan_ramage","date":"2013-08-23T03:51:39.537Z","type":"join"}
{"nick":"ryan_ramage","reason":"Quit: ryan_ramage","date":"2013-08-23T04:04:37.723Z","type":"quit"}
{"nick":"i_m_ca","reason":"Ping timeout: 260 seconds","date":"2013-08-23T04:28:59.975Z","type":"quit"}
{"nick":"ryan_ramage","date":"2013-08-23T04:50:34.744Z","type":"join"}
{"nick":"ryan_ramage","reason":"Quit: ryan_ramage","date":"2013-08-23T05:22:29.138Z","type":"quit"}
{"nick":"jxson","date":"2013-08-23T05:53:34.652Z","type":"join"}
{"nick":"jxson_","date":"2013-08-23T05:56:15.805Z","type":"join"}
{"nick":"jxson","reason":"Ping timeout: 240 seconds","date":"2013-08-23T05:57:51.339Z","type":"quit"}
{"nick":"jxson_","reason":"Remote host closed the connection","date":"2013-08-23T05:59:31.319Z","type":"quit"}
{"nick":"jxson","date":"2013-08-23T06:03:26.642Z","type":"join"}
{"nick":"ryan_ramage","date":"2013-08-23T06:08:07.309Z","type":"join"}
{"nick":"ryan_ramage","reason":"Client Quit","date":"2013-08-23T06:08:11.797Z","type":"quit"}
{"nick":"dominictarr_","date":"2013-08-23T06:17:34.437Z","type":"join"}
{"nick":"dominictarr","reason":"Ping timeout: 264 seconds","date":"2013-08-23T06:20:38.851Z","type":"quit"}
{"nick":"dominictarr_","new_nick":"dominictarr","date":"2013-08-23T06:20:39.066Z","type":"nick"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2013-08-23T06:22:30.494Z","type":"quit"}
{"nick":"jxson","date":"2013-08-23T06:47:33.636Z","type":"join"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2013-08-23T06:47:37.828Z","type":"quit"}
{"nick":"mbalho","message":"anyone know how to determine the best batch size for mazimum write throughput?","date":"2013-08-23T07:30:39.514Z","type":"message"}
{"nick":"mbalho","message":"for instance if i do 1 million small documents in a batch its about 1/3 as many writes/ssecond as if i do 50,000","date":"2013-08-23T07:31:06.932Z","type":"message"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-23T07:40:30.781Z","type":"quit"}
{"nick":"kenansulayman","date":"2013-08-23T08:24:21.581Z","type":"join"}
{"nick":"kenansulayman","reason":"Ping timeout: 264 seconds","date":"2013-08-23T08:34:04.344Z","type":"quit"}
{"nick":"kenansulayman","date":"2013-08-23T08:34:27.587Z","type":"join"}
{"nick":"esundahl_","date":"2013-08-23T09:27:06.879Z","type":"join"}
{"nick":"esundahl_","reason":"Remote host closed the connection","date":"2013-08-23T09:29:26.824Z","type":"quit"}
{"nick":"kenansulayman","reason":"Quit: ∞♡∞","date":"2013-08-23T09:40:55.002Z","type":"quit"}
{"nick":"kenansulayman","date":"2013-08-23T09:41:18.606Z","type":"join"}
{"nick":"dominictarr","date":"2013-08-23T09:57:10.980Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 248 seconds","date":"2013-08-23T10:05:57.824Z","type":"quit"}
{"nick":"timoxley","reason":"Remote host closed the connection","date":"2013-08-23T10:28:29.924Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-08-23T10:34:13.988Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 276 seconds","date":"2013-08-23T10:40:48.758Z","type":"quit"}
{"nick":"fb55","date":"2013-08-23T10:49:38.143Z","type":"join"}
{"nick":"thlorenz_","date":"2013-08-23T10:59:13.929Z","type":"join"}
{"nick":"thlorenz_","reason":"Remote host closed the connection","date":"2013-08-23T11:01:39.735Z","type":"quit"}
{"nick":"Acconut","date":"2013-08-23T11:13:28.056Z","type":"join"}
{"nick":"Acconut","reason":"Remote host closed the connection","date":"2013-08-23T11:13:43.681Z","type":"quit"}
{"nick":"fb55","reason":"Remote host closed the connection","date":"2013-08-23T11:18:40.711Z","type":"quit"}
{"nick":"rescrv","message":"substack: you may find \"ordered_encode_double\" useful: https://github.com/rescrv/HyperDex/blob/master/common/ordered_encoding.cc","date":"2013-08-23T11:19:15.247Z","type":"message"}
{"nick":"rescrv","message":"it takes a double and returns a uint64_t whose big-endian representation is memcmp-able where double(a) < double(b) => memcmp(a, b) < 0","date":"2013-08-23T11:20:02.219Z","type":"message"}
{"nick":"rescrv","message":"mbalho: your batch size should not exceed your write-buffer size","date":"2013-08-23T11:20:26.266Z","type":"message"}
{"nick":"rescrv","message":"mbalho: If by \"small documents\", you mean sizeof(key) + sizeof(value) < 32B, then you'll find that inserting in reverse order of how they eventually end up in LevelDB will give you best perf.","date":"2013-08-23T11:23:24.753Z","type":"message"}
{"nick":"rescrv","message":"and smaller batches will help","date":"2013-08-23T11:27:13.324Z","type":"message"}
{"nick":"thlorenz","date":"2013-08-23T11:55:49.122Z","type":"join"}
{"nick":"ednapiranha","date":"2013-08-23T12:59:39.750Z","type":"join"}
{"nick":"kenansulayman","message":"dominictarr Can be partial matching be implemented efficiently with level-search?","date":"2013-08-23T13:27:06.601Z","type":"message"}
{"nick":"dominictarr","message":"kenansulayman: what do you mean by partial matching?","date":"2013-08-23T13:31:55.874Z","type":"message"}
{"nick":"kenansulayman","message":"Kenan Sulayman <= \"kenan\" \"Sulayman\" whereas also \"ken\" will match \"Kenan Sulayman\"","date":"2013-08-23T13:32:19.593Z","type":"message"}
{"nick":"dominictarr","message":"kenansulayman: yes, although that isn't implemented just","date":"2013-08-23T13:33:34.329Z","type":"message"}
{"nick":"dominictarr","message":"level-search implements partial matching on json properties","date":"2013-08-23T13:34:06.400Z","type":"message"}
{"nick":"dominictarr","message":"strings could be split into sections by spaces - but not implemented yet","date":"2013-08-23T13:34:32.009Z","type":"message"}
{"nick":"kenansulayman","message":"That sounds extremely inefficient","date":"2013-08-23T13:34:45.124Z","type":"message"}
{"nick":"kenansulayman","message":"That could be done with a tree","date":"2013-08-23T13:34:59.670Z","type":"message"}
{"nick":"dominictarr","message":"you should also check this https://github.com/eugeneware/level-queryengine","date":"2013-08-23T13:35:02.040Z","type":"message"}
{"nick":"dominictarr","message":"kenansulayman: a trie?","date":"2013-08-23T13:35:16.720Z","type":"message"}
{"nick":"kenansulayman","message":"Oh yes","date":"2013-08-23T13:35:34.024Z","type":"message"}
{"nick":"dominictarr","message":"kenansulayman: you end up taking 3 times as much space to save each document - but it's not really a big deal","date":"2013-08-23T13:36:02.863Z","type":"message"}
{"nick":"dominictarr","message":"I trie probably works best in memory, because it will take more lookups","date":"2013-08-23T13:36:41.536Z","type":"message"}
{"nick":"dominictarr","message":"but if you are putting it on disk you want optimize for a a single seek, I think.","date":"2013-08-23T13:37:33.997Z","type":"message"}
{"nick":"kenansulayman","message":"actually we're not saving documents","date":"2013-08-23T13:37:50.899Z","type":"message"}
{"nick":"kenansulayman","message":"we want search for people","date":"2013-08-23T13:38:00.256Z","type":"message"}
{"nick":"kenansulayman","message":"But a person can change names rapidly; also Graph is not an option and quite overkill","date":"2013-08-23T13:38:32.647Z","type":"message"}
{"nick":"dominictarr","message":"Graph?","date":"2013-08-23T13:38:52.113Z","type":"message"}
{"nick":"dominictarr","message":"kenansulayman: if you just want to index names or a few fields then implementing something like that is pretty easy","date":"2013-08-23T13:39:56.036Z","type":"message"}
{"nick":"kenansulayman","message":"Graph = Graph Database","date":"2013-08-23T13:40:31.116Z","type":"message"}
{"nick":"dominictarr","message":"just save an extra two pointers, firstname -> doc_id, lastname -> doc_id","date":"2013-08-23T13:40:45.825Z","type":"message"}
{"nick":"kenansulayman","message":"ah","date":"2013-08-23T13:41:02.088Z","type":"message"}
{"nick":"kenansulayman","message":"yes","date":"2013-08-23T13:41:02.706Z","type":"message"}
{"nick":"kenansulayman","message":"range search","date":"2013-08-23T13:41:04.653Z","type":"message"}
{"nick":"dominictarr","message":"probably, put the indexes into the same database","date":"2013-08-23T13:41:06.572Z","type":"message"}
{"nick":"dominictarr","message":"so you can update them atomically","date":"2013-08-23T13:41:17.060Z","type":"message"}
{"nick":"dominictarr","message":"with the document","date":"2013-08-23T13:41:22.059Z","type":"message"}
{"nick":"dominictarr","message":"then you will know that the indexes are consistent.","date":"2013-08-23T13:41:36.272Z","type":"message"}
{"nick":"kenansulayman","message":"yo bg","date":"2013-08-23T13:41:47.968Z","type":"message"}
{"nick":"dominictarr","message":"sorry - you arn't saving the whole document again","date":"2013-08-23T13:41:50.400Z","type":"message"}
{"nick":"kenansulayman","message":"wupps","date":"2013-08-23T13:41:52.213Z","type":"message"}
{"nick":"kenansulayman","message":"okay","date":"2013-08-23T13:42:14.362Z","type":"message"}
{"nick":"dominictarr","message":"but, if you use pointers like this, you can index every property and it only takes 3 times the space - this is what level-search does.","date":"2013-08-23T13:42:22.401Z","type":"message"}
{"nick":"kenansulayman","message":"How do you make multiple keys point on a user?","date":"2013-08-23T13:42:42.293Z","type":"message"}
{"nick":"kenansulayman","message":"Also how do you magically update the index?","date":"2013-08-23T13:43:00.531Z","type":"message"}
{"nick":"kenansulayman","message":"Remove the reference in-fly?","date":"2013-08-23T13:43:09.439Z","type":"message"}
{"nick":"dominictarr","message":"kenansulayman: I use level-sublevel, and prehooks","date":"2013-08-23T13:43:23.495Z","type":"message"}
{"nick":"dominictarr","message":"then you do indexSubDb.query(name) and it returns a stream of document that match that query.","date":"2013-08-23T13:43:56.038Z","type":"message"}
{"nick":"alanhoff","date":"2013-08-23T13:48:28.344Z","type":"quit"}
{"nick":"kenansulayman","message":"that is awesome","date":"2013-08-23T13:51:04.344Z","type":"message"}
{"nick":"kenansulayman","message":"How can a How can an index be most efficiently be removed?","date":"2013-08-23T13:52:15.735Z","type":"message"}
{"nick":"fallsemo","date":"2013-08-23T14:03:37.057Z","type":"join"}
{"nick":"kenansulayman","reason":"Remote host closed the connection","date":"2013-08-23T14:04:16.592Z","type":"quit"}
{"nick":"dguttman","date":"2013-08-23T14:10:25.601Z","type":"join"}
{"nick":"kenansulayman","date":"2013-08-23T14:13:23.574Z","type":"join"}
{"nick":"fallsemo","reason":"Quit: Leaving.","date":"2013-08-23T14:21:01.192Z","type":"quit"}
{"nick":"Acconut","date":"2013-08-23T14:22:36.789Z","type":"join"}
{"nick":"Acconut","reason":"Client Quit","date":"2013-08-23T14:22:40.632Z","type":"quit"}
{"nick":"esundahl","date":"2013-08-23T14:25:22.541Z","type":"join"}
{"nick":"tmcw","date":"2013-08-23T14:32:43.978Z","type":"join"}
{"nick":"fallsemo","date":"2013-08-23T14:37:00.376Z","type":"join"}
{"nick":"paulfryzel","date":"2013-08-23T14:44:37.759Z","type":"join"}
{"nick":"dominictarr","message":"kenansulayman: so, the simplest way is to delete stale indexes on read","date":"2013-08-23T14:48:34.580Z","type":"message"}
{"nick":"kenansulayman","message":"ok","date":"2013-08-23T14:48:43.934Z","type":"message"}
{"nick":"dominictarr","message":"otherwise you can have a batch job that periodically cleans","date":"2013-08-23T14:48:48.829Z","type":"message"}
{"nick":"dominictarr","message":"oh! substack used this technique the otherday with level-assoc","date":"2013-08-23T14:49:42.783Z","type":"message"}
{"nick":"jerrysv","date":"2013-08-23T15:01:43.681Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2013-08-23T15:22:40.749Z","type":"quit"}
{"nick":"dguttman","date":"2013-08-23T15:26:06.681Z","type":"join"}
