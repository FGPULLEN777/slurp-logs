{"nick":"Aredridel","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2013-12-29T00:14:29.814Z","type":"quit"}
{"nick":"Aredridel","date":"2013-12-29T00:21:44.426Z","type":"join"}
{"nick":"levelbot","message":"[npm] mosca@0.15.0 <http://npm.im/mosca>: The multi-transport MQTT broker for node.js. It supports AMQP, Redis, ZeroMQ, MongoDB or just MQTT. (@matteo.collina)","date":"2013-12-29T00:31:31.168Z","type":"message"}
{"nick":"blessYahu","date":"2013-12-29T00:38:14.943Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-29T00:45:44.057Z","type":"quit"}
{"nick":"blessYahu","reason":"Remote host closed the connection","date":"2013-12-29T00:50:52.494Z","type":"quit"}
{"nick":"cwmma","date":"2013-12-29T00:57:28.996Z","type":"join"}
{"nick":"cwmma","date":"2013-12-29T00:57:34.990Z","type":"part"}
{"nick":"cwmma","date":"2013-12-29T00:57:53.132Z","type":"join"}
{"nick":"blessYahu","date":"2013-12-29T00:58:36.219Z","type":"join"}
{"nick":"cwmma","message":"rtree implementations, the only ones that have been written for leveled are in memory right ?","date":"2013-12-29T01:02:19.657Z","type":"message"}
{"nick":"kenansulayman","new_nick":"kenan|afk","date":"2013-12-29T01:07:56.021Z","type":"nick"}
{"nick":"cwmma","reason":"Quit: cwmma","date":"2013-12-29T01:17:14.074Z","type":"quit"}
{"nick":"Aredridel","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2013-12-29T01:17:25.150Z","type":"quit"}
{"nick":"contrahax","date":"2013-12-29T01:18:48.091Z","type":"part"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-29T01:32:47.030Z","type":"quit"}
{"nick":"ramitos","reason":"Ping timeout: 246 seconds","date":"2013-12-29T01:35:37.865Z","type":"quit"}
{"nick":"thlorenz","date":"2013-12-29T01:51:29.419Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 245 seconds","date":"2013-12-29T01:55:58.253Z","type":"quit"}
{"nick":"katocolon","date":"2013-12-29T02:01:05.612Z","type":"join"}
{"nick":"katocolon","message":"log","date":"2013-12-29T02:04:46.739Z","type":"message"}
{"nick":"cwmma","date":"2013-12-29T02:12:58.923Z","type":"join"}
{"nick":"cwmma","reason":"Client Quit","date":"2013-12-29T02:13:51.146Z","type":"quit"}
{"nick":"thlorenz","date":"2013-12-29T02:20:57.807Z","type":"join"}
{"nick":"Aredridel","date":"2013-12-29T02:24:42.954Z","type":"join"}
{"nick":"ramitos","date":"2013-12-29T03:26:08.896Z","type":"join"}
{"nick":"levelbot","message":"[npm] riffle@0.0.3 <http://npm.im/riffle>: Forward and reverse iteration of a Strata b-tree. (@bigeasy)","date":"2013-12-29T03:31:24.845Z","type":"message"}
{"nick":"eugeneware","date":"2013-12-29T03:45:11.326Z","type":"join"}
{"nick":"Sorella","reason":"Remote host closed the connection","date":"2013-12-29T03:55:30.912Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-12-29T04:34:48.922Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 272 seconds","date":"2013-12-29T04:46:29.724Z","type":"quit"}
{"nick":"ogd","message":"prettyrobots: can you run leveldown on top of strata yet?","date":"2013-12-29T05:20:34.115Z","type":"message"}
{"nick":"prettyrobots","message":"ogd: I'm refactoring.","date":"2013-12-29T05:21:29.100Z","type":"message"}
{"nick":"prettyrobots","message":"ogd: When I got to reverse iterators, I extracted components into their own modules.","date":"2013-12-29T05:22:10.158Z","type":"message"}
{"nick":"ogd","message":"ah cool","date":"2013-12-29T05:22:29.873Z","type":"message"}
{"nick":"prettyrobots","message":"ogd: Reverse iterators had a lot of edge cases that were going to be ugly to test.","date":"2013-12-29T05:22:37.211Z","type":"message"}
{"nick":"prettyrobots","message":"ogd: https://www.prettyrobots.com/coverage/bigeasy/riffle/18/18.1/lcov-report/riffle/index.js.html","date":"2013-12-29T05:23:03.086Z","type":"message"}
{"nick":"prettyrobots","message":"That's \"Riffle\" which riffles through pages backward and forward. 100% test coverage.","date":"2013-12-29T05:23:20.301Z","type":"message"}
{"nick":"prettyrobots","message":"ogd: I'd like to think I'll be it all put back together over the rest of the weekend and do a release by Tuesday.","date":"2013-12-29T05:25:10.138Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-29T05:50:45.454Z","type":"quit"}
{"nick":"thlorenz","date":"2013-12-29T05:51:18.644Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 245 seconds","date":"2013-12-29T05:55:33.328Z","type":"quit"}
{"nick":"ramitos","reason":"Quit: Computer has gone to sleep.","date":"2013-12-29T06:16:25.287Z","type":"quit"}
{"nick":"Aredridel","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2013-12-29T06:19:06.099Z","type":"quit"}
{"nick":"eugeneware","reason":"Remote host closed the connection","date":"2013-12-29T06:26:30.848Z","type":"quit"}
{"nick":"eugeneware","date":"2013-12-29T06:27:28.676Z","type":"join"}
{"nick":"blessYahu","reason":"Ping timeout: 246 seconds","date":"2013-12-29T06:31:33.001Z","type":"quit"}
{"nick":"levelbot","message":"[npm] pair@0.0.2 <http://npm.im/pair>: Encode key/value pairs for database storage. (@bigeasy)","date":"2013-12-29T07:19:23.750Z","type":"message"}
{"nick":"mikeal","date":"2013-12-29T08:02:49.965Z","type":"join"}
{"nick":"katocolon","reason":"Ping timeout: 246 seconds","date":"2013-12-29T08:10:35.920Z","type":"quit"}
{"nick":"katocolon","date":"2013-12-29T08:14:49.644Z","type":"join"}
{"nick":"katocolon","reason":"Ping timeout: 252 seconds","date":"2013-12-29T08:22:17.646Z","type":"quit"}
{"nick":"eugeneware","reason":"Remote host closed the connection","date":"2013-12-29T08:30:01.688Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-12-29T08:41:38.977Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 246 seconds","date":"2013-12-29T08:46:07.825Z","type":"quit"}
{"nick":"eugeneware","date":"2013-12-29T09:11:34.848Z","type":"join"}
{"nick":"eugeneware","reason":"Ping timeout: 245 seconds","date":"2013-12-29T09:20:58.224Z","type":"quit"}
{"nick":"katocolon","date":"2013-12-29T09:28:29.227Z","type":"join"}
{"nick":"katocolon","reason":"Ping timeout: 245 seconds","date":"2013-12-29T09:33:03.237Z","type":"quit"}
{"nick":"eugeneware","date":"2013-12-29T09:43:14.690Z","type":"join"}
{"nick":"kenan|afk","new_nick":"kenansulayman","date":"2013-12-29T10:37:57.017Z","type":"nick"}
{"nick":"daviddias","date":"2013-12-29T13:05:05.977Z","type":"join"}
{"nick":"levelbot","message":"[npm] livelydb@0.0.1 <http://npm.im/livelydb>: Abstract base class for Lively live-streaming database implementations. (@eugeneware)","date":"2013-12-29T13:22:53.397Z","type":"message"}
{"nick":"levelbot","message":"[npm] livelydb@0.0.2 <http://npm.im/livelydb>: Abstract base class for Lively live-streaming database implementations. (@eugeneware)","date":"2013-12-29T13:31:22.853Z","type":"message"}
{"nick":"Sorella","date":"2013-12-29T13:34:59.938Z","type":"join"}
{"nick":"Sorella","reason":"Changing host","date":"2013-12-29T13:35:08.281Z","type":"quit"}
{"nick":"Sorella","date":"2013-12-29T13:35:08.433Z","type":"join"}
{"nick":"levelbot","message":"[npm] memlively@0.0.1 <http://npm.im/memlively>: Pure memory implementation of LivelyDb for doing real-time data binding of a database with local javascript objects. (@eugeneware)","date":"2013-12-29T13:41:23.168Z","type":"message"}
{"nick":"levelbot","message":"[npm] daily-storage@0.4.0 <http://npm.im/daily-storage>: daily - The LevelDB storage abstaction (@andreasmadsen)","date":"2013-12-29T13:49:53.315Z","type":"message"}
{"nick":"juliangruber","message":"robertkowalski: that shirt isn't made any more unfortunately. substack made it","date":"2013-12-29T13:54:11.059Z","type":"message"}
{"nick":"AndreasMadsen","date":"2013-12-29T14:04:15.001Z","type":"join"}
{"nick":"Sorella","reason":"Read error: Connection reset by peer","date":"2013-12-29T14:13:29.057Z","type":"quit"}
{"nick":"Sorella","date":"2013-12-29T14:14:13.215Z","type":"join"}
{"nick":"Sorella","reason":"Changing host","date":"2013-12-29T14:14:23.912Z","type":"quit"}
{"nick":"Sorella","date":"2013-12-29T14:14:24.064Z","type":"join"}
{"nick":"levelbot","message":"[npm] livelystream@0.0.1 <http://npm.im/livelystream>: Stream changes to and from a lively database as a node.js stream. (@eugeneware)","date":"2013-12-29T14:26:23.242Z","type":"message"}
{"nick":"levelbot","message":"[npm] observestream@0.0.1 <http://npm.im/observestream>: Duplex node.js stream to replicate live changes to and from Javascript objects. (@eugeneware)","date":"2013-12-29T14:51:53.276Z","type":"message"}
{"nick":"levelbot","message":"[npm] livelystream@0.0.2 <http://npm.im/livelystream>: Stream changes to and from a lively database as a node.js stream. (@eugeneware)","date":"2013-12-29T15:09:22.992Z","type":"message"}
{"nick":"levelbot","message":"[npm] observestream@0.0.2 <http://npm.im/observestream>: Duplex node.js stream to replicate live changes to and from Javascript objects. (@eugeneware)","date":"2013-12-29T15:10:23.094Z","type":"message"}
{"nick":"levelbot","message":"[npm] memlively@0.0.2 <http://npm.im/memlively>: Pure memory implementation of LivelyDb for doing real-time data binding of a database with local javascript objects. (@eugeneware)","date":"2013-12-29T15:11:26.537Z","type":"message"}
{"nick":"ogd","reason":"Ping timeout: 246 seconds","date":"2013-12-29T15:20:45.063Z","type":"quit"}
{"nick":"ogd","date":"2013-12-29T15:21:20.693Z","type":"join"}
{"nick":"rud","date":"2013-12-29T15:25:18.663Z","type":"join"}
{"nick":"rud","reason":"Changing host","date":"2013-12-29T15:25:18.821Z","type":"quit"}
{"nick":"rud","date":"2013-12-29T15:25:18.821Z","type":"join"}
{"nick":"AndreasMadsen","reason":"Remote host closed the connection","date":"2013-12-29T15:38:04.907Z","type":"quit"}
{"nick":"AndreasMadsen","date":"2013-12-29T15:38:58.330Z","type":"join"}
{"nick":"ogd","reason":"Ping timeout: 240 seconds","date":"2013-12-29T15:51:03.334Z","type":"quit"}
{"nick":"ogd","date":"2013-12-29T15:51:11.041Z","type":"join"}
{"nick":"blessYahu","date":"2013-12-29T15:58:44.976Z","type":"join"}
