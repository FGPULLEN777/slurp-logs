{"nick":"Aredridel","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2013-12-29T00:14:29.814Z","type":"quit"}
{"nick":"Aredridel","date":"2013-12-29T00:21:44.426Z","type":"join"}
{"nick":"levelbot","message":"[npm] mosca@0.15.0 <http://npm.im/mosca>: The multi-transport MQTT broker for node.js. It supports AMQP, Redis, ZeroMQ, MongoDB or just MQTT. (@matteo.collina)","date":"2013-12-29T00:31:31.168Z","type":"message"}
{"nick":"blessYahu","date":"2013-12-29T00:38:14.943Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-29T00:45:44.057Z","type":"quit"}
{"nick":"blessYahu","reason":"Remote host closed the connection","date":"2013-12-29T00:50:52.494Z","type":"quit"}
{"nick":"cwmma","date":"2013-12-29T00:57:28.996Z","type":"join"}
{"nick":"cwmma","date":"2013-12-29T00:57:34.990Z","type":"part"}
{"nick":"cwmma","date":"2013-12-29T00:57:53.132Z","type":"join"}
{"nick":"blessYahu","date":"2013-12-29T00:58:36.219Z","type":"join"}
{"nick":"cwmma","message":"rtree implementations, the only ones that have been written for leveled are in memory right ?","date":"2013-12-29T01:02:19.657Z","type":"message"}
{"nick":"kenansulayman","new_nick":"kenan|afk","date":"2013-12-29T01:07:56.021Z","type":"nick"}
{"nick":"cwmma","reason":"Quit: cwmma","date":"2013-12-29T01:17:14.074Z","type":"quit"}
{"nick":"Aredridel","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2013-12-29T01:17:25.150Z","type":"quit"}
{"nick":"contrahax","date":"2013-12-29T01:18:48.091Z","type":"part"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-29T01:32:47.030Z","type":"quit"}
{"nick":"ramitos","reason":"Ping timeout: 246 seconds","date":"2013-12-29T01:35:37.865Z","type":"quit"}
{"nick":"thlorenz","date":"2013-12-29T01:51:29.419Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 245 seconds","date":"2013-12-29T01:55:58.253Z","type":"quit"}
{"nick":"katocolon","date":"2013-12-29T02:01:05.612Z","type":"join"}
{"nick":"katocolon","message":"log","date":"2013-12-29T02:04:46.739Z","type":"message"}
{"nick":"cwmma","date":"2013-12-29T02:12:58.923Z","type":"join"}
{"nick":"cwmma","reason":"Client Quit","date":"2013-12-29T02:13:51.146Z","type":"quit"}
{"nick":"thlorenz","date":"2013-12-29T02:20:57.807Z","type":"join"}
{"nick":"Aredridel","date":"2013-12-29T02:24:42.954Z","type":"join"}
{"nick":"ramitos","date":"2013-12-29T03:26:08.896Z","type":"join"}
{"nick":"levelbot","message":"[npm] riffle@0.0.3 <http://npm.im/riffle>: Forward and reverse iteration of a Strata b-tree. (@bigeasy)","date":"2013-12-29T03:31:24.845Z","type":"message"}
{"nick":"eugeneware","date":"2013-12-29T03:45:11.326Z","type":"join"}
{"nick":"Sorella","reason":"Remote host closed the connection","date":"2013-12-29T03:55:30.912Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-12-29T04:34:48.922Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 272 seconds","date":"2013-12-29T04:46:29.724Z","type":"quit"}
{"nick":"ogd","message":"prettyrobots: can you run leveldown on top of strata yet?","date":"2013-12-29T05:20:34.115Z","type":"message"}
{"nick":"prettyrobots","message":"ogd: I'm refactoring.","date":"2013-12-29T05:21:29.100Z","type":"message"}
{"nick":"prettyrobots","message":"ogd: When I got to reverse iterators, I extracted components into their own modules.","date":"2013-12-29T05:22:10.158Z","type":"message"}
{"nick":"ogd","message":"ah cool","date":"2013-12-29T05:22:29.873Z","type":"message"}
{"nick":"prettyrobots","message":"ogd: Reverse iterators had a lot of edge cases that were going to be ugly to test.","date":"2013-12-29T05:22:37.211Z","type":"message"}
{"nick":"prettyrobots","message":"ogd: https://www.prettyrobots.com/coverage/bigeasy/riffle/18/18.1/lcov-report/riffle/index.js.html","date":"2013-12-29T05:23:03.086Z","type":"message"}
{"nick":"prettyrobots","message":"That's \"Riffle\" which riffles through pages backward and forward. 100% test coverage.","date":"2013-12-29T05:23:20.301Z","type":"message"}
{"nick":"prettyrobots","message":"ogd: I'd like to think I'll be it all put back together over the rest of the weekend and do a release by Tuesday.","date":"2013-12-29T05:25:10.138Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-29T05:50:45.454Z","type":"quit"}
{"nick":"thlorenz","date":"2013-12-29T05:51:18.644Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 245 seconds","date":"2013-12-29T05:55:33.328Z","type":"quit"}
{"nick":"ramitos","reason":"Quit: Computer has gone to sleep.","date":"2013-12-29T06:16:25.287Z","type":"quit"}
{"nick":"Aredridel","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2013-12-29T06:19:06.099Z","type":"quit"}
{"nick":"eugeneware","reason":"Remote host closed the connection","date":"2013-12-29T06:26:30.848Z","type":"quit"}
{"nick":"eugeneware","date":"2013-12-29T06:27:28.676Z","type":"join"}
{"nick":"blessYahu","reason":"Ping timeout: 246 seconds","date":"2013-12-29T06:31:33.001Z","type":"quit"}
{"nick":"levelbot","message":"[npm] pair@0.0.2 <http://npm.im/pair>: Encode key/value pairs for database storage. (@bigeasy)","date":"2013-12-29T07:19:23.750Z","type":"message"}
{"nick":"mikeal","date":"2013-12-29T08:02:49.965Z","type":"join"}
{"nick":"katocolon","reason":"Ping timeout: 246 seconds","date":"2013-12-29T08:10:35.920Z","type":"quit"}
{"nick":"katocolon","date":"2013-12-29T08:14:49.644Z","type":"join"}
{"nick":"katocolon","reason":"Ping timeout: 252 seconds","date":"2013-12-29T08:22:17.646Z","type":"quit"}
{"nick":"eugeneware","reason":"Remote host closed the connection","date":"2013-12-29T08:30:01.688Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-12-29T08:41:38.977Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 246 seconds","date":"2013-12-29T08:46:07.825Z","type":"quit"}
{"nick":"eugeneware","date":"2013-12-29T09:11:34.848Z","type":"join"}
{"nick":"eugeneware","reason":"Ping timeout: 245 seconds","date":"2013-12-29T09:20:58.224Z","type":"quit"}
{"nick":"katocolon","date":"2013-12-29T09:28:29.227Z","type":"join"}
{"nick":"katocolon","reason":"Ping timeout: 245 seconds","date":"2013-12-29T09:33:03.237Z","type":"quit"}
{"nick":"eugeneware","date":"2013-12-29T09:43:14.690Z","type":"join"}
{"nick":"kenan|afk","new_nick":"kenansulayman","date":"2013-12-29T10:37:57.017Z","type":"nick"}
{"nick":"daviddias","date":"2013-12-29T13:05:05.977Z","type":"join"}
{"nick":"levelbot","message":"[npm] livelydb@0.0.1 <http://npm.im/livelydb>: Abstract base class for Lively live-streaming database implementations. (@eugeneware)","date":"2013-12-29T13:22:53.397Z","type":"message"}
{"nick":"levelbot","message":"[npm] livelydb@0.0.2 <http://npm.im/livelydb>: Abstract base class for Lively live-streaming database implementations. (@eugeneware)","date":"2013-12-29T13:31:22.853Z","type":"message"}
{"nick":"Sorella","date":"2013-12-29T13:34:59.938Z","type":"join"}
{"nick":"Sorella","reason":"Changing host","date":"2013-12-29T13:35:08.281Z","type":"quit"}
{"nick":"Sorella","date":"2013-12-29T13:35:08.433Z","type":"join"}
{"nick":"levelbot","message":"[npm] memlively@0.0.1 <http://npm.im/memlively>: Pure memory implementation of LivelyDb for doing real-time data binding of a database with local javascript objects. (@eugeneware)","date":"2013-12-29T13:41:23.168Z","type":"message"}
{"nick":"levelbot","message":"[npm] daily-storage@0.4.0 <http://npm.im/daily-storage>: daily - The LevelDB storage abstaction (@andreasmadsen)","date":"2013-12-29T13:49:53.315Z","type":"message"}
{"nick":"juliangruber","message":"robertkowalski: that shirt isn't made any more unfortunately. substack made it","date":"2013-12-29T13:54:11.059Z","type":"message"}
{"nick":"AndreasMadsen","date":"2013-12-29T14:04:15.001Z","type":"join"}
{"nick":"Sorella","reason":"Read error: Connection reset by peer","date":"2013-12-29T14:13:29.057Z","type":"quit"}
{"nick":"Sorella","date":"2013-12-29T14:14:13.215Z","type":"join"}
{"nick":"Sorella","reason":"Changing host","date":"2013-12-29T14:14:23.912Z","type":"quit"}
{"nick":"Sorella","date":"2013-12-29T14:14:24.064Z","type":"join"}
{"nick":"levelbot","message":"[npm] livelystream@0.0.1 <http://npm.im/livelystream>: Stream changes to and from a lively database as a node.js stream. (@eugeneware)","date":"2013-12-29T14:26:23.242Z","type":"message"}
{"nick":"levelbot","message":"[npm] observestream@0.0.1 <http://npm.im/observestream>: Duplex node.js stream to replicate live changes to and from Javascript objects. (@eugeneware)","date":"2013-12-29T14:51:53.276Z","type":"message"}
{"nick":"levelbot","message":"[npm] livelystream@0.0.2 <http://npm.im/livelystream>: Stream changes to and from a lively database as a node.js stream. (@eugeneware)","date":"2013-12-29T15:09:22.992Z","type":"message"}
{"nick":"levelbot","message":"[npm] observestream@0.0.2 <http://npm.im/observestream>: Duplex node.js stream to replicate live changes to and from Javascript objects. (@eugeneware)","date":"2013-12-29T15:10:23.094Z","type":"message"}
{"nick":"levelbot","message":"[npm] memlively@0.0.2 <http://npm.im/memlively>: Pure memory implementation of LivelyDb for doing real-time data binding of a database with local javascript objects. (@eugeneware)","date":"2013-12-29T15:11:26.537Z","type":"message"}
{"nick":"ogd","reason":"Ping timeout: 246 seconds","date":"2013-12-29T15:20:45.063Z","type":"quit"}
{"nick":"ogd","date":"2013-12-29T15:21:20.693Z","type":"join"}
{"nick":"rud","date":"2013-12-29T15:25:18.663Z","type":"join"}
{"nick":"rud","reason":"Changing host","date":"2013-12-29T15:25:18.821Z","type":"quit"}
{"nick":"rud","date":"2013-12-29T15:25:18.821Z","type":"join"}
{"nick":"AndreasMadsen","reason":"Remote host closed the connection","date":"2013-12-29T15:38:04.907Z","type":"quit"}
{"nick":"AndreasMadsen","date":"2013-12-29T15:38:58.330Z","type":"join"}
{"nick":"ogd","reason":"Ping timeout: 240 seconds","date":"2013-12-29T15:51:03.334Z","type":"quit"}
{"nick":"ogd","date":"2013-12-29T15:51:11.041Z","type":"join"}
{"nick":"blessYahu","date":"2013-12-29T15:58:44.976Z","type":"join"}
{"nick":"eugeneware","reason":"Remote host closed the connection","date":"2013-12-29T16:02:54.360Z","type":"quit"}
{"nick":"cwmma","date":"2013-12-29T16:10:24.458Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-29T16:10:56.250Z","type":"quit"}
{"nick":"eugeneware","date":"2013-12-29T17:02:34.647Z","type":"join"}
{"nick":"eugeneware","reason":"Ping timeout: 252 seconds","date":"2013-12-29T17:10:50.647Z","type":"quit"}
{"nick":"thlorenz","date":"2013-12-29T17:20:45.445Z","type":"join"}
{"nick":"AndreasMadsen","reason":"Remote host closed the connection","date":"2013-12-29T17:31:18.810Z","type":"quit"}
{"nick":"cwmma","reason":"Quit: cwmma","date":"2013-12-29T17:40:38.723Z","type":"quit"}
{"nick":"AndreasMadsen","date":"2013-12-29T18:02:04.119Z","type":"join"}
{"nick":"AndreasMadsen","reason":"Ping timeout: 260 seconds","date":"2013-12-29T18:08:47.775Z","type":"quit"}
{"nick":"prettyrobots","message":"Notes on algorithm design: gist.github.com/bigeasy/8173012","date":"2013-12-29T18:14:36.903Z","type":"message"}
{"nick":"prettyrobots","message":"Algorithm interface design, that is.","date":"2013-12-29T18:14:48.269Z","type":"message"}
{"nick":"AndreasMadsen","date":"2013-12-29T18:25:27.902Z","type":"join"}
{"nick":"cwmma","date":"2013-12-29T19:00:48.995Z","type":"join"}
{"nick":"cwmma","reason":"Quit: cwmma","date":"2013-12-29T19:18:52.129Z","type":"quit"}
{"nick":"cwmma","date":"2013-12-29T19:20:08.621Z","type":"join"}
{"nick":"AndreasMadsen","reason":"Remote host closed the connection","date":"2013-12-29T19:36:04.307Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-12-29T19:56:01.457Z","type":"quit"}
{"nick":"cwmma","reason":"Quit: cwmma","date":"2013-12-29T20:02:26.586Z","type":"quit"}
{"nick":"cwmma","date":"2013-12-29T20:05:56.992Z","type":"join"}
{"nick":"rud","reason":"Quit: rud","date":"2013-12-29T20:08:57.209Z","type":"quit"}
{"nick":"cwmma","reason":"Quit: cwmma","date":"2013-12-29T20:15:17.841Z","type":"quit"}
{"nick":"levelbot","message":"[npm] skip@0.0.2 <http://npm.im/skip>: Iterate an MVCC b-tree skipping defunct versions of the records. (@bigeasy)","date":"2013-12-29T20:25:22.728Z","type":"message"}
{"nick":"mikeal","date":"2013-12-29T20:28:17.973Z","type":"join"}
{"nick":"mikeal","reason":"Client Quit","date":"2013-12-29T20:28:58.812Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-12-29T20:34:06.459Z","type":"join"}
{"nick":"AndreasMadsen","date":"2013-12-29T20:34:17.078Z","type":"join"}
{"nick":"AndreasMadsen","reason":"Remote host closed the connection","date":"2013-12-29T20:35:59.799Z","type":"quit"}
{"nick":"AndreasMadsen","date":"2013-12-29T20:36:17.837Z","type":"join"}
{"nick":"kenansulayman","message":"prettyrobots you should either include a synopsis or a tl;dr :F","date":"2013-12-29T20:40:32.771Z","type":"message"}
{"nick":"katocolon","date":"2013-12-29T20:46:43.608Z","type":"join"}
{"nick":"prettyrobots","message":"kenansulayman: Thank you. That was helpful. https://gist.github.com/bigeasy/8173012","date":"2013-12-29T20:48:55.218Z","type":"message"}
{"nick":"kenansulayman","message":"prettyrobots much better. thanks :)","date":"2013-12-29T20:49:39.694Z","type":"message"}
{"nick":"kenansulayman","message":"Arrays, sets, maps and graphs are a valid level of abstraction.","date":"2013-12-29T20:50:23.097Z","type":"message"}
{"nick":"kenansulayman","message":"what do you mean with that?","date":"2013-12-29T20:50:31.089Z","type":"message"}
{"nick":"prettyrobots","message":"kenansulayman: There are time when you need to expose objects that point to other objects, i.e. a graph of objects, and you can't flatten that into `getTPSReportMarginRight`.","date":"2013-12-29T20:53:21.658Z","type":"message"}
{"nick":"prettyrobots","message":"Also, sometimes just use arrays, use objects as maps and sets, and don't sweat how untyped it is. You can add structure at a higher level.","date":"2013-12-29T20:55:24.541Z","type":"message"}
{"nick":"kenansulayman","message":"Ah, ok. So you're saying that exposing internals is the better approach. It's confusing when saying \"exposing abstractions\"; you could say \"exposing abstractions of internals\" et al.","date":"2013-12-29T20:55:32.560Z","type":"message"}
{"nick":"kenansulayman","message":":>","date":"2013-12-29T20:55:53.095Z","type":"message"}
{"nick":"kenansulayman","message":"Well. It depends on an algorithms' complexity IMHO","date":"2013-12-29T20:56:17.003Z","type":"message"}
{"nick":"kenansulayman","message":"The maintainability should overweight","date":"2013-12-29T20:56:40.756Z","type":"message"}
{"nick":"prettyrobots","message":"Yes. Not all libraries are \"abstractions.\" More like, the internals of of a b-tree are that there are no internals. It is a graph. (A tree.)","date":"2013-12-29T20:56:43.922Z","type":"message"}
{"nick":"mikeal","date":"2013-12-29T20:56:51.471Z","type":"join"}
{"nick":"prettyrobots","message":"If you want to reuse it, you need to expose pages, iteration, balancing. If you build a database engine, then you abstract the b-tree.","date":"2013-12-29T20:57:38.505Z","type":"message"}
{"nick":"kenansulayman","message":"Well! If you're building a database library, that is. An engine is a construct where far more is abstracted then in an SDK (library in this case)","date":"2013-12-29T20:58:45.652Z","type":"message"}
{"nick":"prettyrobots","message":"kenansulayman: Yes. That is the distinction. I'm implementing a collection of concurrency controls on top of a JavaScript implementation of b-tree.","date":"2013-12-29T21:04:36.911Z","type":"message"}
{"nick":"prettyrobots","message":"kenansulayman: And I need to keep reminding myself that the EventEmitter level of abstraction is a mismatch for these libraries, which makes them appear odd and unfashionable.","date":"2013-12-29T21:05:21.380Z","type":"message"}
{"nick":"kenansulayman","message":"hum. you should keep in mind that you're in JS land","date":"2013-12-29T21:06:17.710Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-29T21:06:45.132Z","type":"quit"}
{"nick":"mikeal","date":"2013-12-29T21:07:15.395Z","type":"join"}
{"nick":"ramitos","date":"2013-12-29T21:07:31.929Z","type":"join"}
{"nick":"thlorenz","date":"2013-12-29T21:08:39.893Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-29T21:12:09.978Z","type":"quit"}
{"nick":"mikeal","date":"2013-12-29T21:14:37.438Z","type":"join"}
{"nick":"prettyrobots","message":"prettyrobots: How do you mean?","date":"2013-12-29T21:17:02.645Z","type":"message"}
{"nick":"AndreasMadsen","reason":"Remote host closed the connection","date":"2013-12-29T21:20:08.806Z","type":"quit"}
{"nick":"kenansulayman","message":"prettyrobots do you mean me?","date":"2013-12-29T21:25:23.752Z","type":"message"}
{"nick":"prettyrobots","message":"kenansulayman: Yes. Whoops.","date":"2013-12-29T21:25:39.229Z","type":"message"}
{"nick":"kenansulayman","message":"I mean that EventEmitter is a convention for higher-level libraries. node-hid, for instance, lacks everything alike and just exposes the \"current\" value of the incoming data","date":"2013-12-29T21:26:47.794Z","type":"message"}
{"nick":"AndreasMadsen","date":"2013-12-29T21:29:37.687Z","type":"join"}
{"nick":"kenansulayman","topic":"Happy 2014! — 2014 % 2 === 0 — http://logs.nodejs.org/leveldb/latest — http://r.va.gg/2013/11/leveldown-v0.10-managing-gc-in-native-v8-programming.html","date":"2013-12-29T21:30:57.257Z","type":"topic"}
{"nick":"levelbot","message":"[npm] skip@0.0.3 <http://npm.im/skip>: Iterate an MVCC b-tree skipping defunct versions of the records. (@bigeasy)","date":"2013-12-29T21:31:24.975Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-12-29T21:34:38.540Z","type":"quit"}
{"nick":"levelbot","message":"[npm] daily@0.1.2 <http://npm.im/daily>: daily - A LevelDB based logging system (@andreasmadsen)","date":"2013-12-29T21:40:23.165Z","type":"message"}
{"nick":"kenansulayman","new_nick":"kenan|afk","date":"2013-12-29T21:46:41.653Z","type":"nick"}
{"nick":"kenan|afk","new_nick":"kenansulayman","date":"2013-12-29T21:46:56.552Z","type":"nick"}
{"nick":"levelbot","message":"[npm] designate@0.0.1 <http://npm.im/designate>: Iterate a collection of MVCC b-tree cursors choosing the most recent version of a record from each tree. (@bigeasy)","date":"2013-12-29T21:57:53.251Z","type":"message"}
{"nick":"AndreasMadsen","date":"2013-12-29T22:14:15.174Z","type":"quit"}
{"nick":"ralphtheninja","reason":"Read error: Connection reset by peer","date":"2013-12-29T23:00:01.543Z","type":"quit"}
{"nick":"ralphtheninja","date":"2013-12-29T23:01:13.879Z","type":"join"}
{"nick":"ralphtheninja","reason":"Read error: Connection reset by peer","date":"2013-12-29T23:01:36.881Z","type":"quit"}
{"nick":"levelbot","message":"[npm] amalgamate@0.0.2 <http://npm.im/amalgamate>: Forward and reverse iteration of a Strata b-tree. (@bigeasy)","date":"2013-12-29T23:09:52.948Z","type":"message"}
{"nick":"ralphtheninja","date":"2013-12-29T23:11:31.621Z","type":"join"}
{"nick":"ralphtheninja","reason":"Read error: Connection reset by peer","date":"2013-12-29T23:12:17.585Z","type":"quit"}
{"nick":"kenansulayman","message":"prettyrobots you noticed my message?","date":"2013-12-29T23:14:56.503Z","type":"message"}
{"nick":"prettyrobots","message":"kenansulayman: Yes. I think your saying that JavaScript and Node.js are two different things.","date":"2013-12-29T23:15:27.610Z","type":"message"}
{"nick":"prettyrobots","message":"kenansulayman: That some things are not full blown Node.js-ish.","date":"2013-12-29T23:15:44.287Z","type":"message"}
{"nick":"kenansulayman","message":"Yes, pretty much","date":"2013-12-29T23:15:51.594Z","type":"message"}
{"nick":"katocolon","reason":"Quit: leaving","date":"2013-12-29T23:16:40.539Z","type":"quit"}
{"nick":"levelbot","message":"[npm] amalgamate@0.0.3 <http://npm.im/amalgamate>: Merge staging Strata b-trees containing MVCC versioned records into a primary Strata b-tree.  (@bigeasy)","date":"2013-12-29T23:18:23.318Z","type":"message"}
{"nick":"ralphtheninja","date":"2013-12-29T23:21:53.034Z","type":"join"}
{"nick":"ralphtheninja","reason":"Read error: Connection reset by peer","date":"2013-12-29T23:22:52.978Z","type":"quit"}
{"nick":"ralphtheninja","date":"2013-12-29T23:26:53.890Z","type":"join"}
{"nick":"ralphtheninja","reason":"Read error: Connection reset by peer","date":"2013-12-29T23:27:11.107Z","type":"quit"}
{"nick":"eugeneware","date":"2013-12-29T23:36:04.781Z","type":"join"}
{"nick":"ralphtheninja","date":"2013-12-29T23:47:20.854Z","type":"join"}
{"nick":"ryan_ramage","date":"2013-12-29T23:49:43.756Z","type":"join"}
{"nick":"daviddias","reason":"Ping timeout: 240 seconds","date":"2013-12-29T23:53:02.930Z","type":"quit"}
{"nick":"kenansulayman","new_nick":"kenan|afk","date":"2013-12-29T23:55:11.787Z","type":"nick"}
{"nick":"ryan_ramage","reason":"Quit: ryan_ramage","date":"2013-12-29T23:55:41.169Z","type":"quit"}
