{"nick":"timoxley","date":"2013-08-03T00:10:49.324Z","type":"join"}
{"nick":"julianduque","reason":"Quit: leaving","date":"2013-08-03T00:18:08.856Z","type":"quit"}
{"nick":"jxson","reason":"Remote host closed the connection","date":"2013-08-03T00:31:22.641Z","type":"quit"}
{"nick":"dominictarr","reason":"Quit: dominictarr","date":"2013-08-03T00:52:15.974Z","type":"quit"}
{"nick":"rvagg","message":"mm.. levelbot has been having some issues...","date":"2013-08-03T00:59:04.067Z","type":"message"}
{"nick":"levelbot","reason":"Remote host closed the connection","date":"2013-08-03T00:59:20.889Z","type":"quit"}
{"nick":"levelbot","date":"2013-08-03T00:59:39.937Z","type":"join"}
{"nick":"timoxley","reason":"Ping timeout: 264 seconds","date":"2013-08-03T01:09:30.943Z","type":"quit"}
{"nick":"timoxley","date":"2013-08-03T01:10:08.162Z","type":"join"}
{"nick":"timoxley","reason":"Client Quit","date":"2013-08-03T01:14:15.652Z","type":"quit"}
{"nick":"levelbot","message":"[npm] level-live-cache@1.0.0 <http://npm.im/level-live-cache>: An in-memory cache that keeps up to date with its source. (@juliangruber)","date":"2013-08-03T01:19:31.461Z","type":"message"}
{"nick":"timoxley","date":"2013-08-03T01:21:06.518Z","type":"join"}
{"nick":"fallsemo","date":"2013-08-03T01:21:58.958Z","type":"join"}
{"nick":"levelbot","message":"[npm] lev@1.0.0 <http://npm.im/lev>: commandline and REPL access for leveldb (@hij1nx)","date":"2013-08-03T01:23:01.591Z","type":"message"}
{"nick":"rvagg","message":"brycebaril: level-gc is nice, but you need to replace the Transform boilerplate in the readme example with through2!","date":"2013-08-03T01:25:00.787Z","type":"message"}
{"nick":"rvagg","message":"down with boilerplate!","date":"2013-08-03T01:25:15.703Z","type":"message"}
{"nick":"ralphtheninja","reason":"Ping timeout: 264 seconds","date":"2013-08-03T01:28:57.808Z","type":"quit"}
{"nick":"thlorenz","date":"2013-08-03T01:37:09.612Z","type":"join"}
{"nick":"levelbot","message":"[npm] level-live-cache@1.0.1 <http://npm.im/level-live-cache>: An in-memory cache that keeps up to date with its source. (@juliangruber)","date":"2013-08-03T01:46:31.330Z","type":"message"}
{"nick":"levelbot","message":"[npm] lev@1.0.0 <http://npm.im/lev>: commandline and REPL access for leveldb (@hij1nx)","date":"2013-08-03T01:50:31.506Z","type":"message"}
{"nick":"juliangruber","message":"rvagg: whooo, :party!","date":"2013-08-03T02:05:02.164Z","type":"message"}
{"nick":"rvagg","message":"lev@1.0.0 = party! that's a rewrite or has some nice encoding fixes?","date":"2013-08-03T02:07:52.998Z","type":"message"}
{"nick":"tphummel","reason":"Quit: tphummel","date":"2013-08-03T02:18:58.377Z","type":"quit"}
{"nick":"fallsemo","reason":"Ping timeout: 264 seconds","date":"2013-08-03T02:24:45.873Z","type":"quit"}
{"nick":"juliangruber","message":"rvagg: No9 gave it a serious amount of love :)","date":"2013-08-03T02:29:31.391Z","type":"message"}
{"nick":"rvagg","message":"nice","date":"2013-08-03T02:35:43.503Z","type":"message"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2013-08-03T02:55:58.611Z","type":"quit"}
{"nick":"levelbot","message":"[npm] level-co@0.0.0 <http://npm.im/level-co>: levelup wrappers for 'co' (@juliangruber)","date":"2013-08-03T03:05:01.315Z","type":"message"}
{"nick":"timoxley","reason":"Ping timeout: 240 seconds","date":"2013-08-03T03:07:27.281Z","type":"quit"}
{"nick":"timoxley","date":"2013-08-03T03:08:24.040Z","type":"join"}
{"nick":"juliangruber","message":"woop woop","date":"2013-08-03T03:08:31.297Z","type":"message"}
{"nick":"juliangruber","message":"generators interface for levelup","date":"2013-08-03T03:08:37.805Z","type":"message"}
{"nick":"rvagg","message":"not sure how I feel about that.. we have level-promises... npm is becoming quite polluted with wrappers for stuff just to suit personal API preferences","date":"2013-08-03T03:16:11.251Z","type":"message"}
{"nick":"rvagg","message":"perhaps that's ok, but ... it doesn't really *feel* ok","date":"2013-08-03T03:16:23.169Z","type":"message"}
{"nick":"timoxley","reason":"Ping timeout: 264 seconds","date":"2013-08-03T03:27:45.838Z","type":"quit"}
{"nick":"jcrugzz","reason":"Ping timeout: 276 seconds","date":"2013-08-03T03:32:15.949Z","type":"quit"}
{"nick":"timoxley_","date":"2013-08-03T03:33:06.642Z","type":"join"}
{"nick":"tmcw","date":"2013-08-03T03:37:31.321Z","type":"join"}
{"nick":"prettyrobots","message":"weakmaps are not what I thought they were","date":"2013-08-03T03:40:02.164Z","type":"message"}
{"nick":"timoxley_","message":"prettyrobots: what did you think they were","date":"2013-08-03T03:40:18.562Z","type":"message"}
{"nick":"prettyrobots","message":"timoxley_: I thought they would be like Java's weak references.","date":"2013-08-03T03:40:45.955Z","type":"message"}
{"nick":"timoxley_","new_nick":"timoxley","date":"2013-08-03T03:41:02.237Z","type":"nick"}
{"nick":"prettyrobots","message":"http://mozilla.6506.n7.nabble.com/What-is-the-status-of-Weak-References-td271746.html","date":"2013-08-03T03:45:38.008Z","type":"message"}
{"nick":"juliangruber","message":"rvagg: anarchy","date":"2013-08-03T03:56:22.225Z","type":"message"}
{"nick":"rvagg","message":"yeah, I'm totally for that juliangruber, I'm not going to try and stop people putting stuff in there","date":"2013-08-03T03:57:08.757Z","type":"message"}
{"nick":"rvagg","message":"it just seems like pollution","date":"2013-08-03T03:57:14.042Z","type":"message"}
{"nick":"rvagg","message":"but I'll probably come around! I'm pragmatic","date":"2013-08-03T03:57:20.351Z","type":"message"}
{"nick":"juliangruber","message":"rvagg: the more people use levelup the better","date":"2013-08-03T03:57:36.385Z","type":"message"}
{"nick":"juliangruber","message":"rvagg: also, i'm not going to use it until node 0.12.0 is out, it's more like an experiment","date":"2013-08-03T03:57:58.269Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2013-08-03T04:12:23.384Z","type":"quit"}
{"nick":"tmcw","reason":"Remote host closed the connection","date":"2013-08-03T04:15:24.659Z","type":"quit"}
{"nick":"mikeal","date":"2013-08-03T04:37:35.260Z","type":"join"}
{"nick":"hij1nx","reason":"Ping timeout: 264 seconds","date":"2013-08-03T04:40:23.530Z","type":"quit"}
{"nick":"hij1nx","date":"2013-08-03T04:49:41.185Z","type":"join"}
{"nick":"tmcw","date":"2013-08-03T05:25:51.332Z","type":"join"}
{"nick":"hij1nx","message":"rvagg: yep, No9 added a ton of tests and I rewrote a lot of it to simplify the code and make it easier to understand","date":"2013-08-03T05:27:31.347Z","type":"message"}
{"nick":"tmcw","reason":"Ping timeout: 245 seconds","date":"2013-08-03T05:30:25.114Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-08-03T05:30:50.971Z","type":"join"}
{"nick":"jcrugzz","reason":"Ping timeout: 264 seconds","date":"2013-08-03T05:54:45.750Z","type":"quit"}
{"nick":"jcrugzz","date":"2013-08-03T05:55:23.612Z","type":"join"}
{"nick":"brycebaril","message":"rvagg: I haven't come up with a good way to have the transform be reusable with through2 :/","date":"2013-08-03T07:01:21.880Z","type":"message"}
{"nick":"rvagg","message":"brycebaril: each through2() call does an implicit `new`","date":"2013-08-03T07:02:23.983Z","type":"message"}
{"nick":"rvagg","message":"so you could just reuse the original function perhaps?","date":"2013-08-03T07:03:19.317Z","type":"message"}
{"nick":"rvagg","message":"gc(db, through2(filterFn), lts)","date":"2013-08-03T07:03:44.447Z","type":"message"}
{"nick":"brycebaril","message":"Oh, hmm... I'll play around with it","date":"2013-08-03T07:04:05.023Z","type":"message"}
{"nick":"rvagg","message":"perhaps there could be some form of through2 call that creates a class for you...","date":"2013-08-03T07:06:26.715Z","type":"message"}
{"nick":"rvagg","message":"hmm","date":"2013-08-03T07:06:27.497Z","type":"message"}
{"nick":"rvagg","message":"var Filter = through2.create(filterFn)","date":"2013-08-03T07:06:43.961Z","type":"message"}
{"nick":"rvagg","message":"new Filter()","date":"2013-08-03T07:06:46.207Z","type":"message"}
{"nick":"brycebaril","message":"Something like that should work","date":"2013-08-03T07:07:12.511Z","type":"message"}
{"nick":"rvagg","message":"timoxley is bugging me to make a through2.object(filterFn) or similar, that makes an object stream without the need to pass an options param","date":"2013-08-03T07:09:06.619Z","type":"message"}
{"nick":"brycebaril","message":"I was playing a few weeks ago with a pair of transforms for context switching between objectMode and non objectMode streams but I need to revisit it.","date":"2013-08-03T07:10:21.527Z","type":"message"}
{"nick":"brycebaril","message":"I was thinking something like that might be nice as a layer for \"I don't care what mode you give me, I can handle it\" buffer","date":"2013-08-03T07:10:47.392Z","type":"message"}
{"nick":"timoxley","message":"^ +1 to \"I don't care\"","date":"2013-08-03T07:17:39.359Z","type":"message"}
{"nick":"timoxley","message":"brycebaril rvagg i can't recall why the auto selection was disabled","date":"2013-08-03T07:18:51.318Z","type":"message"}
{"nick":"timoxley","message":"Is there a good reason it can't just switch based on the first data event it gets and just run with that","date":"2013-08-03T07:19:30.740Z","type":"message"}
{"nick":"jcrugzz","reason":"Ping timeout: 264 seconds","date":"2013-08-03T07:20:16.453Z","type":"quit"}
{"nick":"brycebaril","message":"I don't know if the difference with working with Buffers and heap memory for objects is significantly different... I should dig deeper into that code","date":"2013-08-03T07:20:40.743Z","type":"message"}
{"nick":"rvagg","message":"I think the main reason is because of .read(bytes) doesn't work for object streams","date":"2013-08-03T07:21:52.071Z","type":"message"}
{"nick":"rvagg","message":"it becomes .read(objects) [i.e. 1]","date":"2013-08-03T07:21:59.876Z","type":"message"}
{"nick":"brycebaril","message":"rvagg: var Filter = through2.ctor(filterFn)  https://gist.github.com/brycebaril/6145578","date":"2013-08-03T07:26:27.774Z","type":"message"}
{"nick":"rvagg","message":"brycebaril: yeah, that kind of idea, except you need to handle 'options' object and 'flush' function too,","date":"2013-08-03T07:27:17.128Z","type":"message"}
{"nick":"rvagg","message":"but it could easily extend what's in through2 now","date":"2013-08-03T07:27:24.707Z","type":"message"}
{"nick":"rvagg","message":"actually, a plain call to through2() should use a through2.ctor() to do its work","date":"2013-08-03T07:28:23.759Z","type":"message"}
{"nick":"brycebaril","message":"Yeah, it wouldn't add much to through2 at all to include this functionality. This should handle options so much as it is the responsability of the user who instantiates the Transform it creates. I left flush off because gist :)","date":"2013-08-03T07:30:05.512Z","type":"message"}
{"nick":"brycebaril","message":"that's it for me tonight. I'll write up a PR tomorrow morning if you haven't already done it by then","date":"2013-08-03T07:31:59.526Z","type":"message"}
{"nick":"rvagg","message":"https://github.com/rvagg/through2/pull/3","date":"2013-08-03T07:33:00.240Z","type":"message"}
{"nick":"rvagg","message":"needs tests though; works for the default case","date":"2013-08-03T07:33:05.824Z","type":"message"}
{"nick":"eugeneware","reason":"Remote host closed the connection","date":"2013-08-03T07:40:30.474Z","type":"quit"}
