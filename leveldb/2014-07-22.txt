{"nick":"ednapiranha","reason":"Quit: Leaving...","date":"2014-07-22T00:13:47.636Z","type":"quit"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-07-22T00:15:04.423Z","type":"quit"}
{"nick":"SuperPhly","message":"are there any quick ways to update a single property of a key without reading the whole key out and then writing the whole key back? for instance, I just want to change the timestamp on a key, but not touch/distrub the rest of the object.","date":"2014-07-22T00:23:41.223Z","type":"message"}
{"nick":"fritzy","message":"not that I'm aware of SuperPhly","date":"2014-07-22T00:30:10.028Z","type":"message"}
{"nick":"mhernandez1","reason":"Remote host closed the connection","date":"2014-07-22T00:37:26.105Z","type":"quit"}
{"nick":"domanic","message":"SuperPhly, no - there is only get and set. leveldb is not aware of json or anything like that - only sql databases can do stuff like this,","date":"2014-07-22T00:39:36.035Z","type":"message"}
{"nick":"domanic","message":"because they organize the data differently on disk.","date":"2014-07-22T00:39:56.199Z","type":"message"}
{"nick":"brianloveswords","date":"2014-07-22T00:40:33.356Z","type":"join"}
{"nick":"fritzy","reason":"Remote host closed the connection","date":"2014-07-22T00:40:48.210Z","type":"quit"}
{"nick":"kid_icarus","date":"2014-07-22T00:47:44.519Z","type":"join"}
{"nick":"substack","message":"SuperPhly: you can normalize your data for that kind of thing","date":"2014-07-22T00:48:20.310Z","type":"message"}
{"nick":"substack","message":"and then construct objects from foreign key strings","date":"2014-07-22T00:48:47.706Z","type":"message"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-07-22T00:51:08.612Z","type":"quit"}
{"nick":"domanic","message":"SuperPhly, but the question we *should* ask you is what are you trying to represent? there are so many ways to do everything when it comes to databases, there may be a better, different way","date":"2014-07-22T00:51:26.311Z","type":"message"}
{"nick":"SuperPhly","message":"1 sec guys, client on the phone :(","date":"2014-07-22T00:51:52.641Z","type":"message"}
{"nick":"SuperPhly","message":"what is a foreign key string?","date":"2014-07-22T00:52:14.993Z","type":"message"}
{"nick":"hij1nx","message":"SuperPhly: when you want to do X, and you think Y is the best way of doing so. Instead of asking about X, you ask about Y. maybe it's an xy problem if that helps to help you clarify what you want to do :)","date":"2014-07-22T01:00:13.530Z","type":"message"}
{"nick":"mhernandez1","date":"2014-07-22T01:10:11.101Z","type":"join"}
{"nick":"SuperPhly","message":"Ok, I'll have 500,000 records each has a few categories/tags that they will belong to. I'll need to be able to grab records based on tags, categories (with pagination), autocomplete searches by a few fields, and do a bunch of mass updating of records.","date":"2014-07-22T01:27:51.233Z","type":"message"}
{"nick":"SuperPhly","message":"hij1nx, substack: i'm a n00b with Node.JS and would like to keep everything in an object model, so I can retrieve, change, update, store, etc really easily.","date":"2014-07-22T01:28:47.836Z","type":"message"}
{"nick":"SuperPhly","message":"Right now, I'm having to update 3-4 hash tables in redis with each action. It's a recipe for inconsistency.","date":"2014-07-22T01:29:10.144Z","type":"message"}
{"nick":"mcollina","date":"2014-07-22T01:30:32.112Z","type":"join"}
{"nick":"SuperPhly","message":"I've been writing this app for about a week really. I started off with leveldb, but handling indexes was a pain in the butt. So I switched to redis, but man that's so low level!","date":"2014-07-22T01:30:41.574Z","type":"message"}
{"nick":"SuperPhly","message":"I haven't tried Couch or Mongo.","date":"2014-07-22T01:30:59.641Z","type":"message"}
{"nick":"mcollina","reason":"Ping timeout: 240 seconds","date":"2014-07-22T01:34:43.974Z","type":"quit"}
{"nick":"hij1nx","message":"SuperPhly: sounds like your data is highly normalized, with a lot of relationships, why do you want to use a key/value store? (you can have relationships with a key value store quite easily, im just curious)","date":"2014-07-22T01:39:39.900Z","type":"message"}
{"nick":"kid_icarus","message":"one day i'll have a relationship","date":"2014-07-22T01:40:27.975Z","type":"message"}
{"nick":"kid_icarus","message":";_;","date":"2014-07-22T01:40:29.832Z","type":"message"}
{"nick":"kid_icarus","reason":"Quit: Leaving","date":"2014-07-22T01:41:35.918Z","type":"quit"}
{"nick":"SuperPhly","message":"hij1nx: I guess I don't... I have just been wanting to learn.","date":"2014-07-22T01:42:02.378Z","type":"message"}
{"nick":"domanic","message":"SuperPhly, there are level-* modules that do indexes for you","date":"2014-07-22T01:43:58.632Z","type":"message"}
{"nick":"SuperPhly","message":"domanic: yeah?","date":"2014-07-22T01:44:13.657Z","type":"message"}
{"nick":"hij1nx","message":"SuperPhly: ah ;) so, before you get yourself into a situation where you've learned on code that you depend on running, you could try this -> https://github.com/rvagg/levelmeup","date":"2014-07-22T01:44:29.853Z","type":"message"}
{"nick":"SuperPhly","message":"do you guys have any reading that i could maybe take a look at?","date":"2014-07-22T01:44:43.546Z","type":"message"}
{"nick":"hij1nx","message":"SuperPhly: ^","date":"2014-07-22T01:44:53.390Z","type":"message"}
{"nick":"domanic","message":"for example, here is one I wrote that indexes every json property https://github.com/dominictarr/level-search","date":"2014-07-22T01:45:21.076Z","type":"message"}
{"nick":"domanic","message":"so, you can just stuff a bunch of json objects into your database and search it","date":"2014-07-22T01:45:45.741Z","type":"message"}
{"nick":"domanic","message":"also check out substack's thing on top of that https://github.com/substack/level-query","date":"2014-07-22T01:46:29.385Z","type":"message"}
{"nick":"domanic","message":"there are a bunch more here: https://www.npmjs.org/search?q=level%20index","date":"2014-07-22T01:47:47.277Z","type":"message"}
{"nick":"SuperPhly","message":"domanic: say I have 500k json objects that has anywhere from 2-50 tags. could i create an index of those tags to objects? As in, \"Hey DB, give me all the objects (of the 500k) that are in tag x\"?","date":"2014-07-22T01:51:12.992Z","type":"message"}
{"nick":"domanic","message":"SuperPhly, of course!","date":"2014-07-22T01:51:43.032Z","type":"message"}
{"nick":"SuperPhly","message":"and it would return the objects, possibly paginated?","date":"2014-07-22T01:52:00.961Z","type":"message"}
{"nick":"SuperPhly","message":"because that was going to be a real pain in the ass to create with redis.","date":"2014-07-22T01:52:16.111Z","type":"message"}
{"nick":"SuperPhly","message":"or at least it was the way i was thinking","date":"2014-07-22T01:52:22.851Z","type":"message"}
{"nick":"domanic","message":"as a stream would be best, which is I think how level-search does it","date":"2014-07-22T01:52:26.464Z","type":"message"}
{"nick":"domanic","message":"you just create an index [tag, doc_id] : ''","date":"2014-07-22T01:53:00.330Z","type":"message"}
{"nick":"domanic","message":"and then stream through [tag, null] -> [tag, undefined] (using bytewise keys, here)","date":"2014-07-22T01:53:44.854Z","type":"message"}
{"nick":"SuperPhly","message":"what's the ,null for?","date":"2014-07-22T01:54:06.895Z","type":"message"}
{"nick":"SuperPhly","message":"and undefined?","date":"2014-07-22T01:54:17.224Z","type":"message"}
{"nick":"domanic","message":"in bytewise all the values are sorted","date":"2014-07-22T01:54:24.360Z","type":"message"}
{"nick":"domanic","message":"null is the lowest possible, undefined is the highest","date":"2014-07-22T01:54:40.298Z","type":"message"}
{"nick":"brianloveswords","date":"2014-07-22T01:54:51.348Z","type":"join"}
{"nick":"SuperPhly","message":"ahhh, ok","date":"2014-07-22T01:54:54.021Z","type":"message"}
{"nick":"SuperPhly","message":"i've done that before, just checking.","date":"2014-07-22T01:55:02.518Z","type":"message"}
{"nick":"domanic","message":"you could also do [tag, a], [tag, ZZZZZZZ]","date":"2014-07-22T01:55:06.927Z","type":"message"}
{"nick":"SuperPhly","message":"that's one thing i liked about leveldb","date":"2014-07-22T01:55:13.286Z","type":"message"}
{"nick":"SuperPhly","message":"right","date":"2014-07-22T01:55:16.567Z","type":"message"}
{"nick":"SuperPhly","message":"but now we're playing with fire","date":"2014-07-22T01:55:22.743Z","type":"message"}
{"nick":"domanic","message":"but null, undefined are better","date":"2014-07-22T01:55:27.746Z","type":"message"}
{"nick":"SuperPhly","message":":P","date":"2014-07-22T01:55:28.031Z","type":"message"}
{"nick":"SuperPhly","message":"yeah","date":"2014-07-22T01:55:30.553Z","type":"message"}
{"nick":"domanic","message":"well, you can always rebuild the index from the raw data","date":"2014-07-22T01:55:50.816Z","type":"message"}
{"nick":"SuperPhly","message":"how's that done?","date":"2014-07-22T01:56:13.330Z","type":"message"}
{"nick":"SuperPhly","message":"can that be automated?","date":"2014-07-22T01:56:16.926Z","type":"message"}
{"nick":"domanic","message":"SuperPhly, also, have you seen level-sublevel? that gives you prehooks which make it really easy to create indexes, or modules that add a sort of index","date":"2014-07-22T01:56:37.849Z","type":"message"}
{"nick":"SuperPhly","message":"as in, when i add a new object that matches record-* index it","date":"2014-07-22T01:56:40.488Z","type":"message"}
{"nick":"SuperPhly","message":"haha, you read my mind ;)","date":"2014-07-22T01:56:52.863Z","type":"message"}
{"nick":"domanic","message":"this is probably the simplest example of that: https://github.com/dominictarr/level-index/blob/master/index.js","date":"2014-07-22T01:57:13.888Z","type":"message"}
{"nick":"domanic","message":"(oh this module leaves the query bit as an exercise for the reader)","date":"2014-07-22T01:57:54.337Z","type":"message"}
{"nick":"domanic","message":"level-search is a more full bodied example - the most important part is here: https://github.com/dominictarr/level-search/blob/master/index.js#L31-L40","date":"2014-07-22T01:59:22.178Z","type":"message"}
{"nick":"SuperPhly","message":"this makes my head hurt...","date":"2014-07-22T02:00:27.590Z","type":"message"}
{"nick":"SuperPhly","message":"is there a decent job queue system that runs on level?","date":"2014-07-22T02:00:42.402Z","type":"message"}
{"nick":"SuperPhly","message":"but then we get back to the issue of updating 100 records... :(","date":"2014-07-22T02:01:51.070Z","type":"message"}
{"nick":"SuperPhly","message":"that's 100 objects read, pulled into memory, changed, then written back :(","date":"2014-07-22T02:02:20.766Z","type":"message"}
{"nick":"SuperPhly","message":"i see why this database stuff is so difficult to architect.","date":"2014-07-22T02:02:41.766Z","type":"message"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-07-22T02:08:11.651Z","type":"quit"}
{"nick":"brianloveswords","date":"2014-07-22T02:11:39.270Z","type":"join"}
{"nick":"domanic","message":"SuperPhly, so, the simplest is to use prehooks - just insert the indexes when you insert the record","date":"2014-07-22T02:28:51.570Z","type":"message"}
{"nick":"domanic","message":"this works best if the index doesn't depend on anything other than the value of the record","date":"2014-07-22T02:29:11.216Z","type":"message"}
{"nick":"domanic","message":"(which seems like it will work in your case)","date":"2014-07-22T02:29:22.198Z","type":"message"}
{"nick":"SuperPhly","message":"right.","date":"2014-07-22T02:30:05.832Z","type":"message"}
{"nick":"SuperPhly","message":"prehooks.","date":"2014-07-22T02:30:11.010Z","type":"message"}
{"nick":"domanic","message":"if you need something async, there is also level-trigger - that gives you a job gauranteed to runs eventually (and will recover after crashes)","date":"2014-07-22T02:30:14.788Z","type":"message"}
{"nick":"domanic","message":"that is used by my map-reduce module... which you can use for indexes, but to be honest, usually there is a simpler alternative than map reduce when you are doing leveldb.","date":"2014-07-22T02:31:04.983Z","type":"message"}
{"nick":"mcollina","date":"2014-07-22T02:31:23.825Z","type":"join"}
{"nick":"brianloveswords","reason":"Quit: Computer has gone to sleep.","date":"2014-07-22T02:31:40.811Z","type":"quit"}
{"nick":"substack","message":"domanic: what about if the indexes need to change?","date":"2014-07-22T02:32:23.891Z","type":"message"}
{"nick":"domanic","message":"you mean you want to migrate the indexes?","date":"2014-07-22T02:32:44.394Z","type":"message"}
{"nick":"mhernandez1","reason":"Remote host closed the connection","date":"2014-07-22T02:32:55.595Z","type":"quit"}
{"nick":"substack","message":"yes, what if you need to add a new index for existing data or modify how an index gets computed","date":"2014-07-22T02:33:09.399Z","type":"message"}
{"nick":"domanic","message":"ah - well I think that is the same as adding an index to already existing data, i.e. you have a batch job that runs once and gets the index back in sync.","date":"2014-07-22T02:34:06.226Z","type":"message"}
{"nick":"mhernandez1","date":"2014-07-22T02:34:49.160Z","type":"join"}
{"nick":"mcollina","reason":"Ping timeout: 240 seconds","date":"2014-07-22T02:35:52.837Z","type":"quit"}
{"nick":"fritzy","date":"2014-07-22T02:36:22.041Z","type":"join"}
{"nick":"mhernandez1","reason":"Ping timeout: 240 seconds","date":"2014-07-22T02:38:52.828Z","type":"quit"}
{"nick":"domanic","reason":"Ping timeout: 260 seconds","date":"2014-07-22T02:46:28.181Z","type":"quit"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2014-07-22T02:54:08.981Z","type":"quit"}
{"nick":"Sorella","reason":"Quit: It is tiem!","date":"2014-07-22T02:55:15.900Z","type":"quit"}
{"nick":"wilmoore","date":"2014-07-22T02:55:22.699Z","type":"join"}
{"nick":"ednapiranha","date":"2014-07-22T03:01:03.311Z","type":"join"}
{"nick":"brianloveswords","date":"2014-07-22T03:03:08.891Z","type":"join"}
{"nick":"mcollina","date":"2014-07-22T03:32:07.137Z","type":"join"}
{"nick":"domanic","date":"2014-07-22T03:33:08.047Z","type":"join"}
{"nick":"mikeal","date":"2014-07-22T03:33:43.517Z","type":"join"}
{"nick":"mcollina","reason":"Ping timeout: 260 seconds","date":"2014-07-22T03:36:52.131Z","type":"quit"}
{"nick":"dguttman","date":"2014-07-22T03:44:14.446Z","type":"join"}
{"nick":"fritzy","reason":"Remote host closed the connection","date":"2014-07-22T04:18:30.097Z","type":"quit"}
{"nick":"wilmoore","reason":"Ping timeout: 240 seconds","date":"2014-07-22T04:20:22.832Z","type":"quit"}
{"nick":"domanic","reason":"Ping timeout: 256 seconds","date":"2014-07-22T04:30:03.081Z","type":"quit"}
{"nick":"mcollina","date":"2014-07-22T04:32:57.377Z","type":"join"}
{"nick":"mcollina","reason":"Ping timeout: 245 seconds","date":"2014-07-22T04:37:17.379Z","type":"quit"}
{"nick":"hareth","date":"2014-07-22T04:45:47.355Z","type":"join"}
{"nick":"fritzy","date":"2014-07-22T04:46:35.538Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2014-07-22T04:48:26.508Z","type":"quit"}
{"nick":"hareth","message":"hello","date":"2014-07-22T04:49:57.989Z","type":"message"}
{"nick":"fritzy","reason":"Remote host closed the connection","date":"2014-07-22T05:10:04.283Z","type":"quit"}
{"nick":"brianloveswords","reason":"Ping timeout: 264 seconds","date":"2014-07-22T05:29:22.972Z","type":"quit"}
{"nick":"mcollina","date":"2014-07-22T05:33:46.040Z","type":"join"}
{"nick":"hareth","reason":"Quit: hareth","date":"2014-07-22T05:37:02.537Z","type":"quit"}
{"nick":"domanic","date":"2014-07-22T05:37:16.968Z","type":"join"}
{"nick":"mcollina","reason":"Ping timeout: 256 seconds","date":"2014-07-22T05:38:03.039Z","type":"quit"}
{"nick":"wilmoore","date":"2014-07-22T05:42:14.807Z","type":"join"}
{"nick":"hareth","date":"2014-07-22T05:44:19.312Z","type":"join"}
{"nick":"mcollina","date":"2014-07-22T05:46:40.418Z","type":"join"}
{"nick":"mcollina","reason":"Ping timeout: 245 seconds","date":"2014-07-22T05:51:02.393Z","type":"quit"}
{"nick":"fritzy","date":"2014-07-22T06:18:32.023Z","type":"join"}
{"nick":"mcollina","date":"2014-07-22T06:21:30.829Z","type":"join"}
{"nick":"thefoxis","date":"2014-07-22T06:25:51.283Z","type":"join"}
{"nick":"ednapiranha","date":"2014-07-22T06:26:08.994Z","type":"quit"}
{"nick":"hareth","reason":"Quit: hareth","date":"2014-07-22T06:26:16.839Z","type":"quit"}
{"nick":"fritzy","reason":"Remote host closed the connection","date":"2014-07-22T06:42:26.546Z","type":"quit"}
{"nick":"domanic","reason":"Ping timeout: 264 seconds","date":"2014-07-22T06:49:10.926Z","type":"quit"}
{"nick":"domanic","date":"2014-07-22T06:56:03.135Z","type":"join"}
{"nick":"domanic","reason":"Ping timeout: 260 seconds","date":"2014-07-22T07:43:16.174Z","type":"quit"}
{"nick":"wilmoore","reason":"Ping timeout: 256 seconds","date":"2014-07-22T08:24:05.062Z","type":"quit"}
{"nick":"thefoxis","reason":"Quit: Connection closed for inactivity","date":"2014-07-22T08:33:28.026Z","type":"quit"}
{"nick":"wilmoore","date":"2014-07-22T09:03:18.880Z","type":"join"}
{"nick":"hareth","date":"2014-07-22T09:20:59.324Z","type":"join"}
{"nick":"hareth","reason":"Quit: hareth","date":"2014-07-22T09:33:35.139Z","type":"quit"}
{"nick":"wilmoore","reason":"Ping timeout: 245 seconds","date":"2014-07-22T09:41:52.419Z","type":"quit"}
{"nick":"juul","reason":"*.net *.split","date":"2014-07-22T09:54:47.781Z","type":"quit"}
{"nick":"Pwnna","reason":"*.net *.split","date":"2014-07-22T09:54:48.021Z","type":"quit"}
{"nick":"Pwnna","date":"2014-07-22T09:55:01.883Z","type":"join"}
{"nick":"juul","date":"2014-07-22T09:55:31.399Z","type":"join"}
{"nick":"stagas","reason":"Ping timeout: 245 seconds","date":"2014-07-22T10:13:32.398Z","type":"quit"}
{"nick":"hareth","date":"2014-07-22T10:31:36.774Z","type":"join"}
{"nick":"kenansulayman","new_nick":"kenan|afk","date":"2014-07-22T10:59:39.804Z","type":"nick"}
{"nick":"kenan|afk","new_nick":"kenansulayman","date":"2014-07-22T11:03:31.297Z","type":"nick"}
{"nick":"mhernandez1","date":"2014-07-22T11:03:42.328Z","type":"join"}
{"nick":"hareth","reason":"Quit: hareth","date":"2014-07-22T11:15:22.293Z","type":"quit"}
{"nick":"mhernandez1","reason":"Remote host closed the connection","date":"2014-07-22T11:39:37.831Z","type":"quit"}
{"nick":"hareth","date":"2014-07-22T11:56:46.779Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-07-22T12:24:52.297Z","type":"quit"}
{"nick":"hareth","reason":"Quit: hareth","date":"2014-07-22T12:39:04.465Z","type":"quit"}
{"nick":"hareth","date":"2014-07-22T12:41:32.786Z","type":"join"}
{"nick":"mhernandez1","date":"2014-07-22T12:42:47.610Z","type":"join"}
{"nick":"mikeal","date":"2014-07-22T12:45:46.133Z","type":"join"}
{"nick":"mikeal","reason":"Quit: Leaving.","date":"2014-07-22T13:03:56.710Z","type":"quit"}
{"nick":"mikeal","date":"2014-07-22T13:06:35.530Z","type":"join"}
{"nick":"hareth","reason":"Quit: hareth","date":"2014-07-22T13:10:51.578Z","type":"quit"}
{"nick":"hareth","date":"2014-07-22T13:11:13.776Z","type":"join"}
{"nick":"kenansulayman","new_nick":"kenan|afk","date":"2014-07-22T13:18:16.838Z","type":"nick"}
{"nick":"kenan|afk","new_nick":"kenansulayman","date":"2014-07-22T13:21:56.528Z","type":"nick"}
{"nick":"neonstalwart","date":"2014-07-22T13:48:33.804Z","type":"join"}
{"nick":"hareth","reason":"Quit: hareth","date":"2014-07-22T14:02:11.015Z","type":"quit"}
{"nick":"mhernandez1","reason":"Remote host closed the connection","date":"2014-07-22T14:02:30.943Z","type":"quit"}
{"nick":"tarruda","date":"2014-07-22T14:05:19.266Z","type":"join"}
{"nick":"hareth","date":"2014-07-22T14:09:55.813Z","type":"join"}
{"nick":"jjmalina","date":"2014-07-22T14:13:51.780Z","type":"join"}
{"nick":"brianloveswords","date":"2014-07-22T14:15:30.705Z","type":"join"}
{"nick":"hareth","reason":"Quit: hareth","date":"2014-07-22T14:25:08.709Z","type":"quit"}
{"nick":"dguttman","date":"2014-07-22T14:36:19.227Z","type":"join"}
{"nick":"hareth","date":"2014-07-22T14:36:32.774Z","type":"join"}
{"nick":"jerrysv","date":"2014-07-22T14:54:03.454Z","type":"join"}
{"nick":"hareth","reason":"Quit: hareth","date":"2014-07-22T15:01:22.963Z","type":"quit"}
{"nick":"Sorella","date":"2014-07-22T15:13:12.607Z","type":"join"}
{"nick":"hareth","date":"2014-07-22T15:14:37.677Z","type":"join"}
{"nick":"hij1nx","message":"rvagg","date":"2014-07-22T15:25:26.449Z","type":"message"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2014-07-22T15:31:32.213Z","type":"quit"}
{"nick":"dguttman","date":"2014-07-22T15:32:11.295Z","type":"join"}
{"nick":"wilmoore","date":"2014-07-22T15:33:25.133Z","type":"join"}
{"nick":"dguttman","reason":"Quit: dguttman","date":"2014-07-22T15:54:05.851Z","type":"quit"}
{"nick":"hareth","reason":"Quit: hareth","date":"2014-07-22T15:57:26.627Z","type":"quit"}
