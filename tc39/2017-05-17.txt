{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-05-17T00:14:03.295Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T00:46:37.642Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 246 seconds","date":"2017-05-17T00:51:02.466Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-05-17T01:04:22.450Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-05-17T01:08:32.576Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T01:48:36.006Z","type":"join"}
{"nick":"Qria","date":"2017-05-17T01:59:12.136Z","type":"join"}
{"nick":"Qria","message":"Hi, I'm trying to conditionally set a key, and came up with this solution using a spread operator: (https://jsbin.com/gixedodoqi/edit?js ) (this does not work in jsbin, i used https://babeljs.io/repl/ to actually run it) But my coworker points out that {...false} evaluating to {} is an undefined behavior in that [...false] is an error, and that the behavior","date":"2017-05-17T01:59:55.355Z","type":"message"}
{"nick":"Qria","message":"may change. Is this true?","date":"2017-05-17T01:59:55.544Z","type":"message"}
{"nick":"not-an-aardvark","message":"Yes, I'm pretty sure ({...false}) is supposed to throw an error","date":"2017-05-17T02:03:29.947Z","type":"message"}
{"nick":"Qria","message":"ah I see","date":"2017-05-17T02:04:59.642Z","type":"message"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 240 seconds","date":"2017-05-17T02:05:05.883Z","type":"quit"}
{"nick":"not-an-aardvark","message":"Actually I might be wrong","date":"2017-05-17T02:06:44.679Z","type":"message"}
{"nick":"Qria","message":"Then is there a good way to conditionally apply spread operators? If {...false} was allowed I would have used `{...condition && obj}`","date":"2017-05-17T02:06:57.788Z","type":"message"}
{"nick":"Qria","message":"oh?","date":"2017-05-17T02:07:03.737Z","type":"message"}
{"nick":"not-an-aardvark","message":"Based on https://tc39.github.io/proposal-object-rest-spread/#AbstractOperations-CopyDataProperties it seems like ({...false}) enumerates the own keys of `new Boolean(false)`, but there are no such keys","date":"2017-05-17T02:07:44.844Z","type":"message"}
{"nick":"not-an-aardvark","message":"so it would just end up not modifying the object.","date":"2017-05-17T02:07:58.123Z","type":"message"}
{"nick":"not-an-aardvark","message":"I'm not sure about this, so maybe it would be better to wait for someone who knows what they're talking about","date":"2017-05-17T02:08:34.063Z","type":"message"}
{"nick":"Qria","message":"oh, okay I will wait","date":"2017-05-17T02:08:52.749Z","type":"message"}
{"nick":"Qria","message":"I spun up an issue just in case https://github.com/tc39/proposal-object-rest-spread/issues/45","date":"2017-05-17T02:25:15.203Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-05-17T02:37:52.771Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T03:02:20.625Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 240 seconds","date":"2017-05-17T03:06:28.202Z","type":"quit"}
{"nick":"ljharb","message":"it should do exactly what Object.assign does.","date":"2017-05-17T03:07:13.172Z","type":"message"}
{"nick":"ljharb","message":"which means it should be a noop.","date":"2017-05-17T03:07:28.746Z","type":"message"}
{"nick":"ljharb","message":"answered on the issue.","date":"2017-05-17T03:09:18.652Z","type":"message"}
{"nick":"ljharb","message":"Qria: ^","date":"2017-05-17T03:09:21.394Z","type":"message"}
{"nick":"Qria","message":"Nice, thanks for answering!","date":"2017-05-17T03:10:16.440Z","type":"message"}
{"nick":"ljharb","message":"np","date":"2017-05-17T03:12:25.511Z","type":"message"}
{"nick":"Qria","message":"should I close the issue?","date":"2017-05-17T03:13:30.625Z","type":"message"}
{"nick":"Qria","message":"I closed the issue","date":"2017-05-17T03:15:04.158Z","type":"message"}
{"nick":"ljharb","message":"yes, please :-) thanks","date":"2017-05-17T03:17:14.466Z","type":"message"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2017-05-17T04:04:46.910Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T04:04:55.596Z","type":"join"}
{"nick":"bradleymeck","date":"2017-05-17T04:17:34.515Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 246 seconds","date":"2017-05-17T04:22:05.500Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-05-17T04:56:17.402Z","type":"join"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2017-05-17T05:02:57.544Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-05-17T05:25:44.166Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T05:29:20.807Z","type":"join"}
{"nick":"bradleymeck","date":"2017-05-17T05:31:06.733Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-05-17T05:36:59.237Z","type":"quit"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2017-05-17T06:20:11.709Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T07:05:28.042Z","type":"join"}
{"nick":"chicoxyz_","date":"2017-05-17T07:08:57.290Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 260 seconds","date":"2017-05-17T07:11:03.639Z","type":"quit"}
{"nick":"chicoxyz_","reason":"Ping timeout: 260 seconds","date":"2017-05-17T07:28:32.152Z","type":"quit"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-05-17T07:30:18.921Z","type":"quit"}
{"nick":"gskachkov","date":"2017-05-17T07:31:11.016Z","type":"join"}
{"nick":"gskachkov","reason":"Client Quit","date":"2017-05-17T07:31:34.099Z","type":"quit"}
{"nick":"gskachkov","date":"2017-05-17T08:26:39.801Z","type":"join"}
{"nick":"gskachkov","reason":"Client Quit","date":"2017-05-17T08:30:36.014Z","type":"quit"}
{"nick":"gskachkov","date":"2017-05-17T08:31:23.760Z","type":"join"}
{"nick":"gskachkov","reason":"Client Quit","date":"2017-05-17T08:31:25.032Z","type":"quit"}
{"nick":"gskachkov","date":"2017-05-17T08:32:09.723Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-05-17T09:15:32.024Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-05-17T10:26:02.202Z","type":"quit"}
{"nick":"mylesborins","date":"2017-05-17T10:26:32.773Z","type":"join"}
{"nick":"littledan","message":"Is getter/setter coalescing for decorators (step 22 of http://tc39.github.io/proposal-decorators/#sec-runtime-semantics-classdefinitionevaluation ) supposed to be based not just on [[Key]] but also [[IsStatic]]?","date":"2017-05-17T11:13:04.462Z","type":"message"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-05-17T11:39:12.552Z","type":"quit"}
{"nick":"jmdyck","date":"2017-05-17T12:00:57.518Z","type":"join"}
{"nick":"Qria","reason":"Quit: Connection closed for inactivity","date":"2017-05-17T12:45:14.072Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-05-17T14:32:11.081Z","type":"join"}
{"nick":"not-an-aardvark","date":"2017-05-17T14:42:29.491Z","type":"join"}
{"nick":"chicoxyzzy","date":"2017-05-17T14:44:03.408Z","type":"join"}
{"nick":"chicoxyz_","date":"2017-05-17T15:08:30.773Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 240 seconds","date":"2017-05-17T15:09:27.854Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T16:04:43.060Z","type":"join"}
{"nick":"chicoxyz_","reason":"Ping timeout: 240 seconds","date":"2017-05-17T16:06:48.554Z","type":"quit"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2017-05-17T16:07:06.048Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T16:09:53.609Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2017-05-17T16:11:18.037Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T16:18:34.918Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 255 seconds","date":"2017-05-17T16:26:59.991Z","type":"quit"}
{"nick":"gskachkov","date":"2017-05-17T16:27:14.434Z","type":"join"}
{"nick":"chicoxyzzy","date":"2017-05-17T16:32:51.093Z","type":"join"}
{"nick":"chicoxyz_","date":"2017-05-17T16:44:19.126Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 260 seconds","date":"2017-05-17T16:45:38.370Z","type":"quit"}
{"nick":"chicoxyz_","reason":"Remote host closed the connection","date":"2017-05-17T16:52:16.324Z","type":"quit"}
{"nick":"caridy","date":"2017-05-17T16:58:32.624Z","type":"join"}
{"nick":"caridy_","reason":"Ping timeout: 272 seconds","date":"2017-05-17T17:02:41.296Z","type":"quit"}
{"nick":"abernix","date":"2017-05-17T17:09:23.097Z","type":"join"}
{"nick":"abernix","reason":"Client Quit","date":"2017-05-17T17:09:27.812Z","type":"quit"}
{"nick":"ljharb","message":"littledan: the [[key]] would be on a different object, are instance items and static items processed in the same batch?","date":"2017-05-17T17:53:19.754Z","type":"message"}
{"nick":"basicdays","reason":"Ping timeout: 240 seconds","date":"2017-05-17T19:19:53.953Z","type":"quit"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2017-05-17T19:25:31.739Z","type":"quit"}
{"nick":"caridy","date":"2017-05-17T19:26:03.917Z","type":"join"}
{"nick":"basicdays","date":"2017-05-17T19:26:20.957Z","type":"join"}
{"nick":"littledan","message":"ljharb: Looks like both static and non-static things get put on the same _elements_ list","date":"2017-05-17T19:29:39.737Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-05-17T20:00:41.288Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-05-17T20:07:31.885Z","type":"join"}
{"nick":"ljharb","message":"ah, then it definitely seems like it'd need to pivot on both","date":"2017-05-17T20:18:25.059Z","type":"message"}
{"nick":"tcare","date":"2017-05-17T21:24:38.052Z","type":"join"}
{"nick":"caridy","reason":"Read error: Connection reset by peer","date":"2017-05-17T22:22:16.698Z","type":"quit"}
{"nick":"caridy","date":"2017-05-17T22:23:38.161Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-05-17T22:47:05.162Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-05-17T23:10:16.964Z","type":"join"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2017-05-17T23:27:12.238Z","type":"quit"}
{"nick":"bterlson","message":"https://github.com/tc39/ecma262/pull/919","date":"2017-05-17T23:32:56.310Z","type":"message"}
{"nick":"bterlson","message":"wherein I make algorithm conventions actually understandable? :-P","date":"2017-05-17T23:33:07.240Z","type":"message"}
