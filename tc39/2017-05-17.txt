{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-05-17T00:14:03.295Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T00:46:37.642Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 246 seconds","date":"2017-05-17T00:51:02.466Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-05-17T01:04:22.450Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-05-17T01:08:32.576Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T01:48:36.006Z","type":"join"}
{"nick":"Qria","date":"2017-05-17T01:59:12.136Z","type":"join"}
{"nick":"Qria","message":"Hi, I'm trying to conditionally set a key, and came up with this solution using a spread operator: (https://jsbin.com/gixedodoqi/edit?js ) (this does not work in jsbin, i used https://babeljs.io/repl/ to actually run it) But my coworker points out that {...false} evaluating to {} is an undefined behavior in that [...false] is an error, and that the behavior","date":"2017-05-17T01:59:55.355Z","type":"message"}
{"nick":"Qria","message":"may change. Is this true?","date":"2017-05-17T01:59:55.544Z","type":"message"}
{"nick":"not-an-aardvark","message":"Yes, I'm pretty sure ({...false}) is supposed to throw an error","date":"2017-05-17T02:03:29.947Z","type":"message"}
{"nick":"Qria","message":"ah I see","date":"2017-05-17T02:04:59.642Z","type":"message"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 240 seconds","date":"2017-05-17T02:05:05.883Z","type":"quit"}
{"nick":"not-an-aardvark","message":"Actually I might be wrong","date":"2017-05-17T02:06:44.679Z","type":"message"}
{"nick":"Qria","message":"Then is there a good way to conditionally apply spread operators? If {...false} was allowed I would have used `{...condition && obj}`","date":"2017-05-17T02:06:57.788Z","type":"message"}
{"nick":"Qria","message":"oh?","date":"2017-05-17T02:07:03.737Z","type":"message"}
{"nick":"not-an-aardvark","message":"Based on https://tc39.github.io/proposal-object-rest-spread/#AbstractOperations-CopyDataProperties it seems like ({...false}) enumerates the own keys of `new Boolean(false)`, but there are no such keys","date":"2017-05-17T02:07:44.844Z","type":"message"}
{"nick":"not-an-aardvark","message":"so it would just end up not modifying the object.","date":"2017-05-17T02:07:58.123Z","type":"message"}
{"nick":"not-an-aardvark","message":"I'm not sure about this, so maybe it would be better to wait for someone who knows what they're talking about","date":"2017-05-17T02:08:34.063Z","type":"message"}
{"nick":"Qria","message":"oh, okay I will wait","date":"2017-05-17T02:08:52.749Z","type":"message"}
{"nick":"Qria","message":"I spun up an issue just in case https://github.com/tc39/proposal-object-rest-spread/issues/45","date":"2017-05-17T02:25:15.203Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-05-17T02:37:52.771Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T03:02:20.625Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 240 seconds","date":"2017-05-17T03:06:28.202Z","type":"quit"}
{"nick":"ljharb","message":"it should do exactly what Object.assign does.","date":"2017-05-17T03:07:13.172Z","type":"message"}
{"nick":"ljharb","message":"which means it should be a noop.","date":"2017-05-17T03:07:28.746Z","type":"message"}
{"nick":"ljharb","message":"answered on the issue.","date":"2017-05-17T03:09:18.652Z","type":"message"}
{"nick":"ljharb","message":"Qria: ^","date":"2017-05-17T03:09:21.394Z","type":"message"}
{"nick":"Qria","message":"Nice, thanks for answering!","date":"2017-05-17T03:10:16.440Z","type":"message"}
{"nick":"ljharb","message":"np","date":"2017-05-17T03:12:25.511Z","type":"message"}
{"nick":"Qria","message":"should I close the issue?","date":"2017-05-17T03:13:30.625Z","type":"message"}
{"nick":"Qria","message":"I closed the issue","date":"2017-05-17T03:15:04.158Z","type":"message"}
{"nick":"ljharb","message":"yes, please :-) thanks","date":"2017-05-17T03:17:14.466Z","type":"message"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2017-05-17T04:04:46.910Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T04:04:55.596Z","type":"join"}
{"nick":"bradleymeck","date":"2017-05-17T04:17:34.515Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 246 seconds","date":"2017-05-17T04:22:05.500Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-05-17T04:56:17.402Z","type":"join"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2017-05-17T05:02:57.544Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-05-17T05:25:44.166Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T05:29:20.807Z","type":"join"}
{"nick":"bradleymeck","date":"2017-05-17T05:31:06.733Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-05-17T05:36:59.237Z","type":"quit"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2017-05-17T06:20:11.709Z","type":"quit"}
{"nick":"chicoxyzzy","date":"2017-05-17T07:05:28.042Z","type":"join"}
{"nick":"chicoxyz_","date":"2017-05-17T07:08:57.290Z","type":"join"}
{"nick":"chicoxyzzy","reason":"Ping timeout: 260 seconds","date":"2017-05-17T07:11:03.639Z","type":"quit"}
{"nick":"chicoxyz_","reason":"Ping timeout: 260 seconds","date":"2017-05-17T07:28:32.152Z","type":"quit"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-05-17T07:30:18.921Z","type":"quit"}
{"nick":"gskachkov","date":"2017-05-17T07:31:11.016Z","type":"join"}
{"nick":"gskachkov","reason":"Client Quit","date":"2017-05-17T07:31:34.099Z","type":"quit"}
