{"nick":"sebmarkbage","new_nick":"sebmarkbage|away","date":"2017-12-01T00:00:29.779Z","type":"nick"}
{"nick":"brab","reason":"Ping timeout: 264 seconds","date":"2017-12-01T00:10:34.327Z","type":"quit"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2017-12-01T00:39:08.707Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-12-01T02:14:48.915Z","type":"quit"}
{"nick":"sebmarkbage|away","new_nick":"sebmarkbage","date":"2017-12-01T02:15:35.082Z","type":"nick"}
{"nick":"akirose","reason":"*.net *.split","date":"2017-12-01T02:22:41.420Z","type":"quit"}
{"nick":"caitp","reason":"*.net *.split","date":"2017-12-01T02:22:41.948Z","type":"quit"}
{"nick":"caitp","date":"2017-12-01T02:25:12.762Z","type":"join"}
{"nick":"akirose","date":"2017-12-01T02:27:44.974Z","type":"join"}
{"nick":"sebmarkbage","new_nick":"sebmarkbage|away","date":"2017-12-01T02:34:09.378Z","type":"nick"}
{"nick":"rbuckton","reason":"Quit: Connection closed for inactivity","date":"2017-12-01T02:34:43.083Z","type":"quit"}
{"nick":"sebmck","date":"2017-12-01T02:34:51.910Z","type":"join"}
{"nick":"sgoto","reason":"Quit: Connection closed for inactivity","date":"2017-12-01T02:37:15.800Z","type":"quit"}
{"nick":"sebmarkbage|away","new_nick":"sebmarkbage","date":"2017-12-01T02:47:02.339Z","type":"nick"}
{"nick":"sebmarkbage","new_nick":"sebmarkbage|away","date":"2017-12-01T02:55:10.804Z","type":"nick"}
{"nick":"Fishrock123","date":"2017-12-01T03:06:18.769Z","type":"join"}
{"nick":"sebmck_","date":"2017-12-01T03:21:05.884Z","type":"join"}
{"nick":"sebmck","reason":"Ping timeout: 255 seconds","date":"2017-12-01T03:21:17.918Z","type":"quit"}
{"nick":"sebmck_","new_nick":"sebmck","date":"2017-12-01T03:21:18.402Z","type":"nick"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-12-01T03:38:12.213Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-12-01T03:49:52.879Z","type":"join"}
{"nick":"sebmck","reason":"Ping timeout: 248 seconds","date":"2017-12-01T04:10:09.650Z","type":"quit"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2017-12-01T04:28:55.508Z","type":"quit"}
{"nick":"sebmck","date":"2017-12-01T04:39:08.737Z","type":"join"}
{"nick":"sebmck","reason":"Client Quit","date":"2017-12-01T04:40:13.364Z","type":"quit"}
{"nick":"sfink","reason":"Ping timeout: 240 seconds","date":"2017-12-01T04:42:21.964Z","type":"quit"}
{"nick":"sfink","date":"2017-12-01T04:44:28.765Z","type":"join"}
{"nick":"sfink","reason":"Remote host closed the connection","date":"2017-12-01T04:48:31.482Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-12-01T05:04:42.725Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-12-01T05:05:51.975Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-12-01T05:28:35.805Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-12-01T05:28:54.132Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-12-01T05:29:21.036Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-12-01T06:33:54.929Z","type":"join"}
{"nick":"Fishrock123","reason":"Ping timeout: 246 seconds","date":"2017-12-01T06:38:09.797Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-12-01T06:44:13.893Z","type":"join"}
{"nick":"annevk","message":"tschneidereit: where is the latest on typed objects?","date":"2017-12-01T07:12:26.661Z","type":"message"}
{"nick":"tschneidereit","message":"annevk: currently waiting on wasm's requirements to become clear enough to usefully coordinate. I want to revive work on TOs sometime next year. Ideally H1, but not sure","date":"2017-12-01T07:14:22.334Z","type":"message"}
{"nick":"annevk","message":"tschneidereit: kk, wycats and I were wondering if they would be useful in a future version of the DOMChangeList idea where we'd expose the underlying buffer/object","date":"2017-12-01T07:19:30.107Z","type":"message"}
{"nick":"annevk","message":"tschneidereit: I take it they'd be generic and work on top of SAB too?","date":"2017-12-01T07:19:51.112Z","type":"message"}
{"nick":"annevk","message":"oh well, prolly asking stuff too soon","date":"2017-12-01T07:20:22.616Z","type":"message"}
{"nick":"tschneidereit","message":"annevk: I haven't spent much time investigating the implications of SABs, but AFAICT there's nothing fatal that would prevent that","date":"2017-12-01T07:20:58.591Z","type":"message"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2017-12-01T07:32:12.569Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2017-12-01T07:32:47.080Z","type":"quit"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2017-12-01T07:54:48.641Z","type":"quit"}
{"nick":"Bakkot","message":"gsathya / aklein / other class field implementors: re: https://github.com/tc39/proposal-class-fields/issues/43, if we went with the current semantics, do you think it would be doable to give a good error message in this case, along the lines of \"inherited static methods can't access static private fields when referred to using `this`; use [base class name].#field instead\"","date":"2017-12-01T09:23:19.875Z","type":"message"}
{"nick":"AtumT","date":"2017-12-01T11:04:04.677Z","type":"join"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2017-12-01T11:04:31.940Z","type":"quit"}
{"nick":"AtumT","date":"2017-12-01T11:05:09.616Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-12-01T11:25:10.497Z","type":"quit"}
{"nick":"mylesborins","date":"2017-12-01T11:25:41.085Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-12-01T12:21:47.772Z","type":"quit"}
{"nick":"jmdyck","date":"2017-12-01T13:11:04.542Z","type":"join"}
{"nick":"sebmarkbage|away","new_nick":"sebmarkbage","date":"2017-12-01T16:30:27.532Z","type":"nick"}
{"nick":"tschneidereit","message":"Bakkot: that would be possible, but wouldn't catch all cases. In theory you could have `let that = this; that.#field`, in which case an error message such as yours would be confusing at best, and certainly not possible as an early error","date":"2017-12-01T16:37:19.102Z","type":"message"}
{"nick":"tschneidereit","message":"Bakkot: that last part seems most unfortunate to me: the early error would essentially be a lint. A pretty solid one, but still","date":"2017-12-01T16:38:16.282Z","type":"message"}
{"nick":"sebmarkbage","new_nick":"sebmarkbage|away","date":"2017-12-01T16:39:20.735Z","type":"nick"}
{"nick":"Bakkot","message":"tschneidereit: in theory, but I think static private field accesses which looked like that would be *vanishingly* rare","date":"2017-12-01T18:21:51.495Z","type":"message"}
{"nick":"Bakkot","message":"since (at least with the proposed semantics) there is exactly one object ever which you can refer to that field of","date":"2017-12-01T18:22:18.915Z","type":"message"}
{"nick":"Bakkot","message":"in any case, you could still give an informative message i that case: the runtime can detect that B is a subclass of A, that A has private field #foo, and that you tried to access B.#foo, and that therefore your error was trying to access #foo on a subclass on A and should instead have written A.#foo","date":"2017-12-01T18:24:26.574Z","type":"message"}
{"nick":"Bakkot","message":"(I would not like to see this as an early error, but I think an informative runtime error would help a lot if we go with the current semantics.)","date":"2017-12-01T18:25:02.534Z","type":"message"}
{"nick":"Bakkot","message":"I know this would make ljharb sad, who does not want to have to repeat the class name, but it might be the best option.","date":"2017-12-01T18:26:05.630Z","type":"message"}
{"nick":"ljharb","message":"Bakkot: so, i think it's fine for now, because we could still add a `static.` or `class.` later - but also, the spec doesn't mandate specific error messages, so i'm not sure that's automatically a solution","date":"2017-12-01T18:30:31.105Z","type":"message"}
{"nick":"ljharb","message":"in general tho, static privates are just weird and not that useful, because you already get that with closures","date":"2017-12-01T18:30:45.182Z","type":"message"}
{"nick":"bterlson","message":"tschneidereit: I don't know why I can't make you voice... can you try parting and joining?","date":"2017-12-01T18:39:38.571Z","type":"message"}
{"nick":"Bakkot","message":"ljharb: *could* mandate specific error messages, but won't","date":"2017-12-01T18:43:02.805Z","type":"message"}
{"nick":"Bakkot","message":"but it is kind of a solution; generally, \"this will be confusing\" is less of a concern if we think runtimes can in practice provide guidance in error messages","date":"2017-12-01T18:43:33.925Z","type":"message"}
{"nick":"ljharb","message":"Bakkot: right, effectively the same thing (altho i'd be SUPER STOKED if we all agreed we could)","date":"2017-12-01T18:43:41.687Z","type":"message"}
{"nick":"ljharb","message":"yeah true","date":"2017-12-01T18:43:48.401Z","type":"message"}
{"nick":"Bakkot","message":"I guess I should say, I wouldn't want this to go in with the understanding that \"we could still add a `static.` or `class.` later\", because I think I would kill such a proposal","date":"2017-12-01T18:52:56.968Z","type":"message"}
{"nick":"ljharb","message":"interesting, why?","date":"2017-12-01T18:56:29.046Z","type":"message"}
{"nick":"cloudshu","date":"2017-12-01T18:57:05.837Z","type":"join"}
{"nick":"gskachkov","date":"2017-12-01T18:57:27.131Z","type":"join"}
{"nick":"msaboff","date":"2017-12-01T19:05:07.474Z","type":"join"}
{"nick":"Bakkot","message":"ljharb: syntax is expensive","date":"2017-12-01T19:12:44.002Z","type":"message"}
{"nick":"Bakkot","message":"syntax is really expensive","date":"2017-12-01T19:12:47.985Z","type":"message"}
{"nick":"Bakkot","message":"not in terms of blocking ourselves from using it for other things, just in terms of the size of the language","date":"2017-12-01T19:13:07.446Z","type":"message"}
{"nick":"caridy","date":"2017-12-01T19:19:11.526Z","type":"join"}
{"nick":"caridy","reason":"Read error: Connection reset by peer","date":"2017-12-01T19:19:11.678Z","type":"quit"}
{"nick":"caridy","date":"2017-12-01T19:19:34.604Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-12-01T19:21:18.126Z","type":"quit"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2017-12-01T19:21:50.128Z","type":"quit"}
{"nick":"gskachkov","date":"2017-12-01T19:22:01.539Z","type":"join"}
{"nick":"caridy","date":"2017-12-01T19:22:24.590Z","type":"join"}
{"nick":"ljharb","message":"meh, kind of","date":"2017-12-01T19:47:03.096Z","type":"message"}
{"nick":"ljharb","message":"this is a metaproperty","date":"2017-12-01T19:47:06.378Z","type":"message"}
{"nick":"Bakkot","message":"not really; more like `super.prop`, which isn't a metaproperty","date":"2017-12-01T19:51:26.877Z","type":"message"}
{"nick":"Bakkot","message":"but even so, new metaproperties are also expensive","date":"2017-12-01T19:51:44.382Z","type":"message"}
{"nick":"jwalden","date":"2017-12-01T19:52:45.862Z","type":"join"}
{"nick":"ljharb","message":"yeah true, it is more like super.prop","date":"2017-12-01T19:53:22.847Z","type":"message"}
{"nick":"tschneidereit","message":"bterlson: bleh, I had, but apparently irccloud at some point forgot about that. Fixed now","date":"2017-12-01T19:59:21.310Z","type":"message"}
{"nick":"zkat","date":"2017-12-01T20:03:20.961Z","type":"join"}
{"nick":"tschneidereit","message":"Bakkot: I agree that a good error message goes a long way here. And I'm quite sure all engines should be able to give those","date":"2017-12-01T20:04:13.949Z","type":"message"}
{"nick":"tschneidereit","message":"I don't think I fully agree with that class.#field would be all that expensive as syntax, but I do agree that it's not free and not to be introduced lightly just because we could","date":"2017-12-01T20:05:11.868Z","type":"message"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-12-01T20:22:32.683Z","type":"quit"}
{"nick":"gskachkov","date":"2017-12-01T20:23:01.137Z","type":"join"}
{"nick":"gskachkov","reason":"Ping timeout: 248 seconds","date":"2017-12-01T20:27:12.027Z","type":"quit"}
{"nick":"gskachkov","date":"2017-12-01T20:30:16.852Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-12-01T20:43:10.199Z","type":"quit"}
{"nick":"gskachkov","date":"2017-12-01T20:44:52.081Z","type":"join"}
{"nick":"not-an-aardvark","date":"2017-12-01T22:26:01.814Z","type":"join"}
{"nick":"aklein","message":"Bakkot: I'm not of the opinion that the current specced semantics are disastrously bad, but I agree that a good error message would be nice","date":"2017-12-01T23:27:39.962Z","type":"message"}
{"nick":"ljharb","message":"good error messages are nice regardless, and every engine likely has places to improve there :-)","date":"2017-12-01T23:30:28.406Z","type":"message"}
