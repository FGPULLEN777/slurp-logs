{"nick":"bradleymeck","date":"2017-08-22T00:11:37.736Z","type":"join"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2017-08-22T00:33:16.608Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-22T01:07:57.590Z","type":"quit"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2017-08-22T01:16:34.711Z","type":"quit"}
{"nick":"caridy","date":"2017-08-22T01:17:23.640Z","type":"join"}
{"nick":"bradleymeck","date":"2017-08-22T01:21:15.918Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-22T02:04:11.575Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-08-22T02:17:45.451Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-22T03:16:01.988Z","type":"quit"}
{"nick":"howdoi","date":"2017-08-22T03:35:03.802Z","type":"join"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2017-08-22T03:51:56.167Z","type":"quit"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-08-22T05:24:23.705Z","type":"quit"}
{"nick":"Draggor","reason":"Ping timeout: 240 seconds","date":"2017-08-22T06:39:22.283Z","type":"quit"}
{"nick":"Draggor","date":"2017-08-22T06:45:21.842Z","type":"join"}
{"nick":"gskachkov","date":"2017-08-22T06:52:05.570Z","type":"join"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2017-08-22T07:08:32.766Z","type":"quit"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-08-22T07:29:36.333Z","type":"quit"}
{"nick":"caridy","reason":"Ping timeout: 276 seconds","date":"2017-08-22T07:30:22.665Z","type":"quit"}
{"nick":"gskachkov","date":"2017-08-22T07:31:45.645Z","type":"join"}
{"nick":"caridy","date":"2017-08-22T07:35:15.639Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-08-22T10:17:10.159Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-08-22T10:25:10.832Z","type":"quit"}
{"nick":"mylesborins","date":"2017-08-22T10:25:41.552Z","type":"join"}
{"nick":"AtumT","date":"2017-08-22T10:25:52.950Z","type":"join"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2017-08-22T10:52:57.621Z","type":"quit"}
{"nick":"caridy","date":"2017-08-22T10:53:44.439Z","type":"join"}
{"nick":"STRML","reason":"Ping timeout: 248 seconds","date":"2017-08-22T11:00:16.295Z","type":"quit"}
{"nick":"STRML","date":"2017-08-22T11:05:06.071Z","type":"join"}
{"nick":"jmdyck","date":"2017-08-22T11:29:21.040Z","type":"join"}
{"nick":"gibson042","reason":"Ping timeout: 246 seconds","date":"2017-08-22T12:07:34.456Z","type":"quit"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2017-08-22T13:06:42.978Z","type":"quit"}
{"nick":"jmdyck","reason":"Ping timeout: 240 seconds","date":"2017-08-22T13:22:21.955Z","type":"quit"}
{"nick":"jmdyck1","date":"2017-08-22T13:22:23.863Z","type":"join"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2017-08-22T13:54:30.805Z","type":"quit"}
{"nick":"caridy","date":"2017-08-22T13:55:08.581Z","type":"join"}
{"nick":"Fishrock123","date":"2017-08-22T14:22:34.030Z","type":"join"}
{"nick":"abernix","date":"2017-08-22T15:04:59.565Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-08-22T15:06:41.880Z","type":"quit"}
{"nick":"gskachkov","date":"2017-08-22T15:07:15.863Z","type":"join"}
{"nick":"bradleymeck","date":"2017-08-22T15:11:23.340Z","type":"join"}
{"nick":"gskachkov","reason":"Ping timeout: 240 seconds","date":"2017-08-22T15:16:27.866Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-22T15:21:39.074Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-08-22T15:40:05.877Z","type":"join"}
{"nick":"cloudshu","date":"2017-08-22T15:44:52.653Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-22T16:32:03.218Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-08-22T16:32:40.803Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-22T16:32:48.612Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-08-22T16:41:35.871Z","type":"join"}
{"nick":"howdoi","date":"2017-08-22T16:53:24.905Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-22T16:58:17.146Z","type":"quit"}
{"nick":"gskachkov","date":"2017-08-22T17:22:48.592Z","type":"join"}
{"nick":"bradleymeck","date":"2017-08-22T18:04:54.994Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-22T18:31:28.468Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-08-22T18:33:05.927Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-22T18:38:35.205Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-08-22T18:42:34.702Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-22T18:43:49.495Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-08-22T18:53:05.573Z","type":"join"}
{"nick":"not-an-aardvark","date":"2017-08-22T20:02:03.437Z","type":"join"}
{"nick":"jridgewell","date":"2017-08-22T20:40:50.454Z","type":"join"}
{"nick":"jridgewell","reason":"Client Quit","date":"2017-08-22T20:45:00.168Z","type":"quit"}
{"nick":"jridgewell","date":"2017-08-22T20:45:24.453Z","type":"join"}
{"nick":"abernix","reason":"Quit: Bye","date":"2017-08-22T21:09:48.374Z","type":"quit"}
{"nick":"jridgewell","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2017-08-22T22:11:33.668Z","type":"quit"}
{"nick":"jridgewell","date":"2017-08-22T22:17:33.447Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-22T22:18:30.965Z","type":"quit"}
{"nick":"bterlson","message":"jmdyck1: ping?","date":"2017-08-22T22:18:48.410Z","type":"message"}
{"nick":"jmdyck1","message":"bterlson: pong?","date":"2017-08-22T22:32:42.683Z","type":"message"}
{"nick":"bterlson","message":"jmdyck1: objections to adding use=example, use=definition, and default use=reference? (l like use over status, personally)","date":"2017-08-22T22:33:59.445Z","type":"message"}
{"nick":"bterlson","message":"jmdyck1: sorry this is for https://github.com/tc39/ecma262/pull/960","date":"2017-08-22T22:35:00.361Z","type":"message"}
{"nick":"jmdyck1","message":"if you like 'use' over 'status', i won't object. There's still my qualm about 'reference', but if it's the default, people won't actually see it, so not as big a deal.","date":"2017-08-22T22:37:08.999Z","type":"message"}
{"nick":"bterlson","message":"which qualm over \"reference\"?","date":"2017-08-22T22:38:12.991Z","type":"message"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-08-22T22:38:20.091Z","type":"quit"}
{"nick":"bterlson","message":"the word you mean?","date":"2017-08-22T22:38:23.436Z","type":"message"}
{"nick":"jmdyck1","message":"yup,","date":"2017-08-22T22:38:33.554Z","type":"message"}
{"nick":"jmdyck1","message":"see the issue.","date":"2017-08-22T22:38:43.765Z","type":"message"}
{"nick":"jmdyck1","message":"https://github.com/tc39/ecma262/pull/960#issuecomment-318527414","date":"2017-08-22T22:39:44.208Z","type":"message"}
{"nick":"bterlson","message":"right ok, just making sure it's not a semantic concern","date":"2017-08-22T22:39:45.656Z","type":"message"}
{"nick":"bterlson","message":"I buy your point","date":"2017-08-22T22:39:56.774Z","type":"message"}
{"nick":"bterlson","message":"I can read it both ways in my head","date":"2017-08-22T22:40:01.996Z","type":"message"}
{"nick":"bterlson","message":"tbh I just want to get this in so I can get my nice tooling, we can discuss changes over time","date":"2017-08-22T22:40:13.466Z","type":"message"}
{"nick":"bterlson","message":"Ron kind of wants them to be different elements entirely","date":"2017-08-22T22:40:20.973Z","type":"message"}
{"nick":"jmdyck1","message":"oh!","date":"2017-08-22T22:40:38.280Z","type":"message"}
{"nick":"jmdyck1","message":"<emu-grammar-def>, etc?","date":"2017-08-22T22:40:51.701Z","type":"message"}
{"nick":"bterlson","message":"yeah","date":"2017-08-22T22:41:04.221Z","type":"message"}
{"nick":"jmdyck1","message":"hm","date":"2017-08-22T22:41:20.847Z","type":"message"}
{"nick":"bterlson","message":"could even re-use emu-prodref","date":"2017-08-22T22:41:28.013Z","type":"message"}
{"nick":"bterlson","message":"for use=reference","date":"2017-08-22T22:41:36.213Z","type":"message"}
{"nick":"jmdyck1","message":"isn't emu-prodref a single production?","date":"2017-08-22T22:42:06.530Z","type":"message"}
{"nick":"bterlson","message":"custom elements can't be void unfortunately","date":"2017-08-22T22:42:17.358Z","type":"message"}
{"nick":"bterlson","message":"but its contents are replaced based on its attributes","date":"2017-08-22T22:42:31.005Z","type":"message"}
{"nick":"jmdyck1","message":"i'm not following what you're suggesting","date":"2017-08-22T22:42:58.336Z","type":"message"}
{"nick":"bradleymeck","date":"2017-08-22T22:44:20.889Z","type":"join"}
{"nick":"bterlson","message":"Idea is you can either refer by using emu-prodref's attrs (emu-prodref name=NonTerminal) or by copying the production into the emu-prodref element (in which case it is verified to be identical to some existing production)","date":"2017-08-22T22:44:21.627Z","type":"message"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2017-08-22T22:44:40.518Z","type":"quit"}
{"nick":"bterlson","message":"jmdyck1: pick 1: use, status, mode, class, type","date":"2017-08-22T22:45:12.611Z","type":"message"}
{"nick":"bterlson","message":"now that I look at type it feels good to me","date":"2017-08-22T22:45:23.734Z","type":"message"}
{"nick":"jmdyck1","message":"\"type\" is better than \"use\", i'd say.","date":"2017-08-22T22:46:42.349Z","type":"message"}
{"nick":"jmdyck1","message":"i might even prefer it over \"status\" if it weren't for the general overuse of \"type\"","date":"2017-08-22T22:47:33.948Z","type":"message"}
{"nick":"bterlson","message":"hah I know","date":"2017-08-22T22:48:09.266Z","type":"message"}
{"nick":"bterlson","message":"TabAtkins: pedantry afoot: ^","date":"2017-08-22T22:48:35.708Z","type":"message"}
{"nick":"jmdyck1","message":"(\"mode\" doesn't sound right to me at all.)","date":"2017-08-22T22:48:44.370Z","type":"message"}
{"nick":"TabAtkins","message":"Ahaha, I don't care what y'all do for this. ^_^","date":"2017-08-22T22:48:57.650Z","type":"message"}
{"nick":"bterlson","message":"mode makes sense when you look at it from the dev tools/GMD implementation perspective ;)","date":"2017-08-22T22:49:13.856Z","type":"message"}
{"nick":"TabAtkins","message":"I'm busy micro-optimizing. Shaved about a second off of the DOM spec's generation time already!","date":"2017-08-22T22:49:23.258Z","type":"message"}
{"nick":"bterlson","message":"which is not the right perspective I agree","date":"2017-08-22T22:49:25.650Z","type":"message"}
{"nick":"bterlson","message":"TabAtkins: you and me both!! I spent the weekend trying to make loops go faster.","date":"2017-08-22T22:49:38.827Z","type":"message"}
{"nick":"TabAtkins","message":"Turns out the secret is: don't do work you dont' need to, duh.","date":"2017-08-22T22:50:11.640Z","type":"message"}
{"nick":"bterlson","message":"I think the next big gains for emu are going to come from incremental build","date":"2017-08-22T22:51:05.098Z","type":"message"}
{"nick":"bterlson","message":"it's getting hard to justify perf work when I could just do incremental build and make it mostly irrelevant","date":"2017-08-22T22:51:23.579Z","type":"message"}
{"nick":"jmdyck1","message":"Of those choices, I think i still prefer \"status\".","date":"2017-08-22T22:51:58.486Z","type":"message"}
{"nick":"jmdyck1","message":"there might be a better word though...","date":"2017-08-22T22:52:25.496Z","type":"message"}
{"nick":"TabAtkins","message":"Incremental build?","date":"2017-08-22T22:52:32.891Z","type":"message"}
{"nick":"bterlson","message":"status > type > use, for you?","date":"2017-08-22T22:52:39.296Z","type":"message"}
{"nick":"bterlson","message":"TabAtkins: yeah, only rebuilding the parts of the spec that changed, and just pull the rest of the content verbatim from an existing build source document or metadata file","date":"2017-08-22T22:53:06.850Z","type":"message"}
{"nick":"bterlson","message":"s/build source document/built document","date":"2017-08-22T22:53:23.146Z","type":"message"}
{"nick":"TabAtkins","message":"Interesting.","date":"2017-08-22T22:53:30.955Z","type":"message"}
{"nick":"TabAtkins","message":"I'd like to do something like that, if only to let me start flagging some sorts of errors that are only obvious from a delta.","date":"2017-08-22T22:53:58.749Z","type":"message"}
{"nick":"jmdyck1","message":"actually, i can see why \"status\" sounds wrong, if you think of something's status changing over time.","date":"2017-08-22T22:54:22.589Z","type":"message"}
{"nick":"jmdyck1","message":"\"kind\"?","date":"2017-08-22T22:54:35.372Z","type":"message"}
{"nick":"bterlson","message":"the \"type\" vs. \"kind\" debate is one I always have with myself and never have a good reason to pick one or the other","date":"2017-08-22T22:55:24.344Z","type":"message"}
{"nick":"TabAtkins","message":"Go with Haskell/etc; \"kind\" describes higher-order types (types of types) only. ^_^","date":"2017-08-22T22:55:54.696Z","type":"message"}
{"nick":"jmdyck1","message":"164 uses of \"kind\" in spec, 2682 of \"type\"","date":"2017-08-22T22:56:08.065Z","type":"message"}
{"nick":"jmdyck1","message":"(case insensitive)","date":"2017-08-22T22:56:20.451Z","type":"message"}
{"nick":"bterlson","message":"type= has a few uses","date":"2017-08-22T22:56:21.194Z","type":"message"}
{"nick":"bterlson","message":"I think type is more common than kind (see, e.g., all the various AST formats)","date":"2017-08-22T22:56:44.692Z","type":"message"}
{"nick":"jmdyck1","message":"kind= has 0 uses","date":"2017-08-22T22:56:44.936Z","type":"message"}
{"nick":"bterlson","message":"ok going with type= for now, we can change it later","date":"2017-08-22T22:57:14.065Z","type":"message"}
{"nick":"jmdyck1","message":"if it's a tossup between type and kind, i'm ok with either","date":"2017-08-22T22:57:18.974Z","type":"message"}
{"nick":"bterlson","message":"I think we'll eventually want distinct elements","date":"2017-08-22T22:57:19.432Z","type":"message"}
{"nick":"jmdyck1","message":"separate issue for that!","date":"2017-08-22T22:57:37.993Z","type":"message"}
{"nick":"bterlson","message":"yep","date":"2017-08-22T22:57:42.295Z","type":"message"}
{"nick":"jmdyck1","message":"done for now? (late for supper)","date":"2017-08-22T22:58:00.325Z","type":"message"}
{"nick":"bterlson","message":"jmdyck1: yes thank you :-D","date":"2017-08-22T22:58:14.357Z","type":"message"}
{"nick":"jmdyck1","message":"afk","date":"2017-08-22T22:58:18.394Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-22T23:08:53.260Z","type":"quit"}
{"nick":"Domenic","message":"Incremental build seems a little easier in ecmarkup than Bikeshed due to Ecmarkup's extensive use of nested sections","date":"2017-08-22T23:10:06.782Z","type":"message"}
{"nick":"Domenic","message":"(in the source document)","date":"2017-08-22T23:10:16.556Z","type":"message"}
{"nick":"Domenic","message":"So you can very precisely say what part of the output tree will change, since you know what part of the input tree did, and you already have a good granularity (emu-clause)","date":"2017-08-22T23:10:40.593Z","type":"message"}
{"nick":"Domenic","message":"Whereas in Bikeshed a lot of people do <hN> style flat documents","date":"2017-08-22T23:10:51.229Z","type":"message"}
{"nick":"TabAtkins","message":"On that note, I'm strongly wondering if it's worthwhile to do an \"automatically section-ize document\" pass; I'm spending a decent amount of time searching for \"relevant headings\" for each element, when I'd prefer to just do an ancestor walk.","date":"2017-08-22T23:18:40.377Z","type":"message"}
{"nick":"TabAtkins","message":"I'm also getting ever-more anxious to just write my own HTML parser and DOM tree; a ton of my runtime is spent in parsing and in running selectors, when I could instead just be heavily caching instead.","date":"2017-08-22T23:19:41.780Z","type":"message"}
{"nick":"bterlson","message":"TabAtkins: biggest perf boost I got to date was the rewrite where I went from random builders calling querySelectorAll and etc. to a single forward pass of the document","date":"2017-08-22T23:31:29.221Z","type":"message"}
{"nick":"bterlson","message":"code is now 10x more complex but 10x faster too","date":"2017-08-22T23:31:42.960Z","type":"message"}
{"nick":"TabAtkins","message":"My querySelector calls only amount to 7% of runtime even on a large document; I've eliminated a lot of it.","date":"2017-08-22T23:32:00.055Z","type":"message"}
{"nick":"TabAtkins","message":"Single forward pass would be... interesting, but I probably wouldn't get a ton out of it.","date":"2017-08-22T23:32:19.328Z","type":"message"}
{"nick":"TabAtkins","message":"I presume you handle it by stashing the things you'll need to process based on whole-document info, and just running thru them at the end?","date":"2017-08-22T23:32:46.343Z","type":"message"}
{"nick":"bterlson","message":"yeah if QSA is only 7%","date":"2017-08-22T23:32:46.494Z","type":"message"}
{"nick":"bterlson","message":"exactly","date":"2017-08-22T23:32:56.737Z","type":"message"}
{"nick":"bterlson","message":"including ALL text nodes","date":"2017-08-22T23:33:01.207Z","type":"message"}
{"nick":"TabAtkins","message":"Oh gosh.","date":"2017-08-22T23:33:14.367Z","type":"message"}
{"nick":"bterlson","message":"and other random bits","date":"2017-08-22T23:33:17.988Z","type":"message"}
{"nick":"TabAtkins","message":"All told that would probably be worthwhile, honestly.  qSA is only 7%, but I do lot more tree-walking and attr-checking that would speed up a ton if it was just some set-membership checks.","date":"2017-08-22T23:34:09.199Z","type":"message"}
{"nick":"TabAtkins","message":"I bet I could drop 20% from it.","date":"2017-08-22T23:34:17.903Z","type":"message"}
{"nick":"bterlson","message":"you're probably a better coder than I am but the understandability of the build process took a giant hit","date":"2017-08-22T23:34:47.380Z","type":"message"}
{"nick":"bterlson","message":"that not even a massive \"here's what's going to happen\" comment could fix :-P","date":"2017-08-22T23:35:04.103Z","type":"message"}
{"nick":"TabAtkins","message":"Eh, most of the complexity falls into the dom-mutator methods, which need to shuffle things around.","date":"2017-08-22T23:35:30.849Z","type":"message"}
{"nick":"bterlson","message":"Domenic: You're right about emu-clause being helpful for this","date":"2017-08-22T23:35:35.582Z","type":"message"}
{"nick":"bterlson","message":"Domenic: I'm also using it as the granularity level for my lazy renderer","date":"2017-08-22T23:35:45.509Z","type":"message"}
{"nick":"bterlson","message":"(where this = incremental build)","date":"2017-08-22T23:36:16.595Z","type":"message"}
{"nick":"TabAtkins","message":"(Interesting - checking over my empty-document cProfile data, it looks like about 30% of runtime is just loading modules.)","date":"2017-08-22T23:36:48.139Z","type":"message"}
{"nick":"bterlson","message":"heh","date":"2017-08-22T23:37:00.307Z","type":"message"}
{"nick":"bterlson","message":"require('jsdom') still takes like 500ms for me","date":"2017-08-22T23:37:09.482Z","type":"message"}
{"nick":"TabAtkins","message":"Woah!","date":"2017-08-22T23:37:27.206Z","type":"message"}
{"nick":"TabAtkins","message":"Luckily empty-document is down to about 500ms total now, so the module loading cost is only about 150ms.","date":"2017-08-22T23:37:50.624Z","type":"message"}
{"nick":"jridgewell","reason":"Quit: My MacBook has gone to sleep. ZZZzzzâ€¦","date":"2017-08-22T23:40:46.195Z","type":"quit"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2017-08-22T23:54:37.487Z","type":"quit"}
{"nick":"jridgewell","date":"2017-08-22T23:56:32.442Z","type":"join"}
