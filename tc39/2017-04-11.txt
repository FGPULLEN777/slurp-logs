{"nick":"dilijev","message":"for slow and tiny embedded systems, FP multiplication is relatively expensive even if you only do it once during setup, although in practice i think people will inline 2*PI and pay the cost if the compiler doesn't deal with it, and for floats, that loss of a bit is important","date":"2017-04-11T00:00:36.633Z","type":"message"}
{"nick":"dilijev","message":"(compilers for embedded systems are often bad)","date":"2017-04-11T00:01:00.230Z","type":"message"}
{"nick":"dilijev","message":"well adding TAU is one thing, maybe it's political, but I think there's a good case to having a constant equivalent to PI*2","date":"2017-04-11T00:02:27.472Z","type":"message"}
{"nick":"dilijev","message":" even if its name is PI2","date":"2017-04-11T00:02:49.914Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-04-11T00:13:43.957Z","type":"quit"}
{"nick":"Bakkot","message":"have a degree in math and was not taught about τ, but I agree it's probably worth adding.","date":"2017-04-11T00:17:14.817Z","type":"message"}
{"nick":"Bakkot","message":"PI2 might be easier to get through committee? I dunno.","date":"2017-04-11T00:17:24.745Z","type":"message"}
{"nick":"dilijev","message":"ljharb: how many slices of pizza are there and are they uniform?","date":"2017-04-11T00:19:02.334Z","type":"message"}
{"nick":"dilijev","message":"how many pi radians are there in a slice of a pizza pi, er i mean, pie?","date":"2017-04-11T00:19:56.431Z","type":"message"}
{"nick":"ljharb","message":"dilijev: if there are N equal slices of pizza, a slice is always τ/N radians :-p for π, it's 2π/N, and then you have to reduce 2/N in your head","date":"2017-04-11T00:26:19.111Z","type":"message"}
{"nick":"dilijev","message":"yep yep, i was just being facetious","date":"2017-04-11T00:26:40.536Z","type":"message"}
{"nick":"ljharb","message":":-p","date":"2017-04-11T00:26:42.928Z","type":"message"}
{"nick":"ljharb","message":"the benefit imo is the concept of \"tau\", not just \"a constant for 2pi\"","date":"2017-04-11T00:26:50.339Z","type":"message"}
{"nick":"dilijev","message":"mathematically, yes","date":"2017-04-11T00:27:16.270Z","type":"message"}
{"nick":"dilijev","message":"but practically, the issue is the inconsistency between (PI, nothing) and (SQRT2, SQRT1_2) and the loss of a bit in calcs","date":"2017-04-11T00:27:46.767Z","type":"message"}
{"nick":"dilijev","message":"imho","date":"2017-04-11T00:27:54.466Z","type":"message"}
{"nick":"dilijev","message":"but while we're at it, might as well increase awareness of TAU and people can trivially polyfill PI2 if they wish","date":"2017-04-11T00:28:36.664Z","type":"message"}
{"nick":"ljharb","message":"^","date":"2017-04-11T00:33:00.495Z","type":"message"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-04-11T00:48:53.789Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-04-11T01:06:29.062Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-04-11T01:06:32.679Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2017-04-11T02:53:16.597Z","type":"join"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2017-04-11T03:30:18.081Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T06:19:44.439Z","type":"join"}
{"nick":"brab","date":"2017-04-11T06:23:45.632Z","type":"join"}
{"nick":"bttf","reason":"Ping timeout: 260 seconds","date":"2017-04-11T06:45:57.364Z","type":"quit"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T06:53:01.266Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T06:55:34.035Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T07:00:53.839Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T07:02:18.464Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-11T07:04:33.494Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T07:05:24.593Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T08:12:29.685Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T08:28:49.745Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-04-11T08:48:53.710Z","type":"quit"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T09:15:38.093Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T09:16:09.660Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T09:34:45.299Z","type":"quit"}
{"nick":"littledan","message":"dilijev: The proposal for Unicode properties in regular expressions adds the ability to check for ID_Start and ID_Continue","date":"2017-04-11T09:36:01.120Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-11T09:45:14.207Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-11T09:46:22.948Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T10:21:17.547Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-11T10:22:08.885Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T10:22:47.677Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-04-11T10:25:11.054Z","type":"quit"}
{"nick":"mylesborins","date":"2017-04-11T10:25:41.551Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T10:54:39.712Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T11:02:22.271Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T11:08:21.181Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T11:11:57.507Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T11:30:01.278Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T11:31:16.195Z","type":"join"}
{"nick":"littledan","message":"dilijev: What we don't have proposed yet is an API to get the ranges which are included (e.g., as ICU exposes). What's the use case you're thinking of?","date":"2017-04-11T11:33:48.739Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T12:09:09.601Z","type":"quit"}
{"nick":"jmdyck","date":"2017-04-11T12:12:50.305Z","type":"join"}
{"nick":"gskachkov_","date":"2017-04-11T12:36:13.557Z","type":"join"}
{"nick":"brab","reason":"Quit: ERC (IRC client for Emacs 25.2.1)","date":"2017-04-11T12:48:47.578Z","type":"quit"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T12:55:54.886Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T12:58:43.479Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-11T13:00:47.997Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T13:02:33.438Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T13:13:05.582Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T13:13:58.447Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-11T13:17:38.618Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T13:19:22.339Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T13:29:35.808Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T13:37:49.351Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T13:44:01.203Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T13:53:04.566Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T13:58:43.711Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T14:06:50.392Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-11T14:09:30.994Z","type":"quit"}
{"nick":"leobalter","message":"dilijev, mathiasbynens: I'm really excited with the tests for unicode properties. If it helps, we can have a audio (or video) call to discuss some more strategies for test262 formatting","date":"2017-04-11T15:25:09.601Z","type":"message"}
{"nick":"leobalter","message":"If I can use my open source to contribute, that's even a +1 to help even more","date":"2017-04-11T15:25:30.040Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-11T15:39:28.211Z","type":"join"}
{"nick":"not-an-aardvark","date":"2017-04-11T17:02:34.513Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T17:05:10.829Z","type":"quit"}
{"nick":"jeffmo","message":"#lazyweb: If I have constants.js with `export const C = 42`, and then moreconstants.js with `export const C = 42; export * from \"constants.js\"`, is that a runtime error? Or does the second export win?","date":"2017-04-11T17:19:31.978Z","type":"message"}
{"nick":"jeffmo","message":"(While I dig through the spec, wondering if anyone just remembers off-hand)","date":"2017-04-11T17:19:50.356Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-11T17:20:19.143Z","type":"join"}
{"nick":"jeffmo","message":"wycats: ^ I feel like we discussed this 3-4 meetings ago, do you remember the answer off-hand?","date":"2017-04-11T17:23:17.618Z","type":"message"}
{"nick":"jeffmo","message":"Ok -- seems to throw a SyntaxError in ModuleDeclarationInstantiation: https://tc39.github.io/ecma262/#sec-moduledeclarationinstantiation","date":"2017-04-11T17:25:50.475Z","type":"message"}
{"nick":"mathiasbynens","message":"leobalter: what should the [features] flag be for these new tests?","date":"2017-04-11T17:27:00.410Z","type":"message"}
{"nick":"mathiasbynens","message":"features: [UnicodePropertyEscapes]?","date":"2017-04-11T17:27:03.182Z","type":"message"}
{"nick":"mathiasbynens","message":"the docs don’t say where those IDs are coming from","date":"2017-04-11T17:27:15.476Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T17:42:58.023Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T17:47:35.182Z","type":"join"}
{"nick":"wycats","message":"jeffmo: people claimed it only  errors when you import","date":"2017-04-11T17:52:01.551Z","type":"message"}
{"nick":"wycats","message":"I think the current behavior is probably an accident","date":"2017-04-11T17:52:10.092Z","type":"message"}
{"nick":"wycats","message":"and we should try to make it error to re-export multiple things with the same name","date":"2017-04-11T17:52:21.256Z","type":"message"}
{"nick":"jeffmo","message":"wycats: I guess it's really a matter of when we *can* error -- which would be at link time","date":"2017-04-11T17:58:04.602Z","type":"message"}
{"nick":"wycats","message":"right","date":"2017-04-11T17:58:10.915Z","type":"message"}
{"nick":"jeffmo","message":"*a matter of how early we *can*","date":"2017-04-11T17:58:12.864Z","type":"message"}
{"nick":"wycats","message":"I think it should be a link error *at the point when you compute the exports for a module*","date":"2017-04-11T17:58:38.309Z","type":"message"}
{"nick":"jeffmo","message":"https://tc39.github.io/ecma262/#sec-moduledeclarationinstantiation","date":"2017-04-11T17:58:49.868Z","type":"message"}
{"nick":"jeffmo","message":"it seems to be?","date":"2017-04-11T17:58:55.582Z","type":"message"}
{"nick":"jeffmo","message":"12.d.2","date":"2017-04-11T17:59:20.695Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T18:03:48.459Z","type":"quit"}
{"nick":"aklein","message":"jeffmo: star exports are special","date":"2017-04-11T18:06:52.078Z","type":"message"}
{"nick":"leobalter","message":"mathiasbynens: we don't have any specific documentation for the features flags so far","date":"2017-04-11T18:06:58.099Z","type":"message"}
{"nick":"leobalter","message":"as long as we start with one flag, I'll also write some docs specifying some used flags for consistency","date":"2017-04-11T18:07:24.708Z","type":"message"}
{"nick":"jeffmo","message":"aklein: special in that they are necessarily deferred, but not in that they can sneak through a dupe/name override right?","date":"2017-04-11T18:07:40.692Z","type":"message"}
{"nick":"leobalter","message":"so far, it's only conventions: async-iteration, object-spread,  etc","date":"2017-04-11T18:07:42.863Z","type":"message"}
{"nick":"aklein","message":"jeffmo: well, to start with, the first part: they don't do anything in the exporting module at ModuleDeclarationInstantiation time","date":"2017-04-11T18:08:32.598Z","type":"message"}
{"nick":"mathiasbynens","message":"leobalter: so is lowercase slug-case preferred?","date":"2017-04-11T18:08:37.296Z","type":"message"}
{"nick":"mathiasbynens","message":"I’ll go with `features: [regexp-unicode-property-escapes]` then","date":"2017-04-11T18:09:07.770Z","type":"message"}
{"nick":"aklein","message":"jeffmo: in your example, there's no error","date":"2017-04-11T18:09:16.354Z","type":"message"}
{"nick":"aklein","message":"the second export C wins","date":"2017-04-11T18:09:25.377Z","type":"message"}
{"nick":"aklein","message":"this is all in https://tc39.github.io/ecma262/#sec-resolveexport","date":"2017-04-11T18:09:33.174Z","type":"message"}
{"nick":"jeffmo","message":"faceplam","date":"2017-04-11T18:11:55.033Z","type":"message"}
{"nick":"jeffmo","message":"(which is like a facepalm, except sadder)","date":"2017-04-11T18:12:11.136Z","type":"message"}
{"nick":"aklein","message":"jeffmo: context?","date":"2017-04-11T18:13:08.715Z","type":"message"}
{"nick":"jeffmo","message":"aklein: syntactic exports error, but * exports don't","date":"2017-04-11T18:13:25.766Z","type":"message"}
{"nick":"jeffmo","message":"(IIU what you're saying correctly?)","date":"2017-04-11T18:13:40.820Z","type":"message"}
{"nick":"jeffmo","message":"I haven't read your linked spec text yet","date":"2017-04-11T18:13:54.705Z","type":"message"}
{"nick":"aklein","message":"right, you can't do","date":"2017-04-11T18:14:04.302Z","type":"message"}
{"nick":"aklein","message":"export const C = 42;","date":"2017-04-11T18:14:10.036Z","type":"message"}
{"nick":"aklein","message":"export { C } from \"constants.js\";","date":"2017-04-11T18:14:16.883Z","type":"message"}
{"nick":"aklein","message":"but you can with export * from \"constants.js\";","date":"2017-04-11T18:14:29.435Z","type":"message"}
{"nick":"aklein","message":"jeffmo: but why the facepalm?","date":"2017-04-11T18:14:43.710Z","type":"message"}
{"nick":"jeffmo","message":"and we *want* this behavior? that's not an accident?","date":"2017-04-11T18:14:47.492Z","type":"message"}
{"nick":"samth","message":"jeffmo: it means that other people adding new exports doesn't break your code","date":"2017-04-11T18:15:30.513Z","type":"message"}
{"nick":"jeffmo","message":"samth: unless your module has the `export *` after the `export {C} from ...`?","date":"2017-04-11T18:15:56.790Z","type":"message"}
{"nick":"jeffmo","message":"Checking my premise: Is there a difference between `export const C = 42; export * from \"constants.js\";` and `export * from \"constants.js\"; export const C = 42;`?","date":"2017-04-11T18:17:15.714Z","type":"message"}
{"nick":"samth","message":"jeffmo: the algorithm in the spec doesn't depend on order","date":"2017-04-11T18:17:25.663Z","type":"message"}
{"nick":"Fishrock123","date":"2017-04-11T18:17:46.343Z","type":"join"}
{"nick":"jeffmo","message":"ok, so local exports always win over \"*\"-imported exports?","date":"2017-04-11T18:18:06.283Z","type":"message"}
{"nick":"aklein","message":"jeffmo: yup","date":"2017-04-11T18:18:23.304Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-11T18:18:50.241Z","type":"join"}
{"nick":"samth","message":"jeffmo: it's exports with a name that win over exports without them","date":"2017-04-11T18:18:53.402Z","type":"message"}
{"nick":"jeffmo","message":"ok got it","date":"2017-04-11T18:29:56.303Z","type":"message"}
{"nick":"jeffmo","message":"thanks for clarifying","date":"2017-04-11T18:30:00.526Z","type":"message"}
{"nick":"jeffmo","message":"this was way quicker than trying to page in all the module spec text/context","date":"2017-04-11T18:30:40.687Z","type":"message"}
{"nick":"dilijev","message":"leobalter, mathiasbynens: I was thinking along the lines of the test262 tests we had discussed on the test262 repo, wanting to do some in-Javascript logic rather than generating giant tests based on a priori knowledge specific to an engine or Unicode version number. Also possible applications to fuzzing. I think a call to discuss might be a good idea.","date":"2017-04-11T18:40:13.356Z","type":"message"}
{"nick":"leobalter","message":"dilijev: +1. mathiasbynens has already made some generation tool using node but we still need to figure out how to upstream it to test262, so discussion is valid to find the best approach.","date":"2017-04-11T18:57:26.089Z","type":"message"}
{"nick":"jeffmo","message":"aklein: samth: Ok, am I understanding the spec correctly that `export * from \"ExportsC.js\"; export * from \"AlsoExportsC.js\"`results in the `C` from \"ExportsC.js\" winning over AlsoExportsC because it comes first?","date":"2017-04-11T19:04:14.248Z","type":"message"}
{"nick":"jeffmo","message":"oh sorry... I guess AlsoExportsC would win *because* it is last","date":"2017-04-11T19:05:05.095Z","type":"message"}
{"nick":"jeffmo","message":"jk, first one wins by my reading","date":"2017-04-11T19:05:22.663Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T19:06:44.187Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T19:07:35.434Z","type":"join"}
{"nick":"jeffmo","message":"*syntactically-first even","date":"2017-04-11T19:09:51.575Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T19:37:31.245Z","type":"quit"}
{"nick":"mathiasbynens","message":"leobalter, dilijev: WIP test generator is here https://github.com/mathiasbynens/unicode-property-escapes-tests these settings can be tweaked to make tests more precise/larger/slower: https://github.com/mathiasbynens/unicode-property-escapes-tests/blob/c784de53f008f2062a691f65d2de24b2f2900791/build.js#L1-L6","date":"2017-04-11T19:38:45.022Z","type":"message"}
{"nick":"mathiasbynens","message":"using a priori knowledge for a given Unicode version number is the only way to ensure full interoperability, so imho it’s the best option in this case","date":"2017-04-11T19:39:40.894Z","type":"message"}
{"nick":"mathiasbynens","message":"(although to *fully* ensure interoperability, the settings would have to be tweaked, but then each `*.case` file would be ~13 MB or more, and generating all tests would take ages)","date":"2017-04-11T19:41:07.969Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-11T19:42:06.883Z","type":"join"}
{"nick":"aklein","message":"jeffmo: I believe that fails","date":"2017-04-11T20:00:55.637Z","type":"message"}
{"nick":"aklein","message":"as \"ambiguous\"","date":"2017-04-11T20:01:05.506Z","type":"message"}
{"nick":"jeffmo","message":"aklein: oh right, because of 8.d.ii.2","date":"2017-04-11T20:06:27.116Z","type":"message"}
{"nick":"aklein","message":"you can manually disambiguate by adding `export { C } from \"ExportsC.js\"` in addition","date":"2017-04-11T20:08:51.557Z","type":"message"}
{"nick":"jeffmo","message":"aklein: samth: doesn't this behavior fail the previous justification for having locals override remotes? (i.e. \"don't want a change to another module to break yours\")","date":"2017-04-11T20:10:27.679Z","type":"message"}
{"nick":"jeffmo","message":"A works in isolation, B works in isolation, C pulls the two together -- A changes and only breaks C","date":"2017-04-11T20:10:54.979Z","type":"message"}
{"nick":"aklein","message":"jeffmo: C doesn't break, though, only folks who import from C break","date":"2017-04-11T20:11:23.769Z","type":"message"}
{"nick":"aklein","message":"not that that gets past your complaint","date":"2017-04-11T20:11:35.565Z","type":"message"}
{"nick":"aklein","message":"I'll let samth comment on motivation","date":"2017-04-11T20:11:39.983Z","type":"message"}
{"nick":"aklein","message":"I just happen to be an interpreter of the spec","date":"2017-04-11T20:11:47.102Z","type":"message"}
{"nick":"jeffmo","message":"my complain is how messy this is to implement in Flow :p","date":"2017-04-11T20:11:47.951Z","type":"message"}
{"nick":"aklein","message":"heheh","date":"2017-04-11T20:11:52.813Z","type":"message"}
{"nick":"samth","message":"jeffmo: you could make it even lazier about producing errors, ie only error if you import C from that module that has the two conflicting * exports","date":"2017-04-11T20:24:46.886Z","type":"message"}
{"nick":"samth","message":"I think that was my preference","date":"2017-04-11T20:24:55.412Z","type":"message"}
{"nick":"samth","message":"but that also results in seeming spooky action at a distance and could be confusing","date":"2017-04-11T20:25:11.354Z","type":"message"}
{"nick":"jeffmo","message":"samth: I wish it could be a link-time error","date":"2017-04-11T20:27:46.210Z","type":"message"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-04-11T20:28:54.273Z","type":"quit"}
{"nick":"aklein","message":"samth: it does only cause an error if you import C","date":"2017-04-11T20:29:55.435Z","type":"message"}
{"nick":"aklein","message":"jeffmo: it _is_ a link-time error","date":"2017-04-11T20:30:08.008Z","type":"message"}
{"nick":"samth","message":"aklein: oh, I misunderstood your statment about \"that fails\"","date":"2017-04-11T20:30:37.257Z","type":"message"}
{"nick":"aklein","message":"samth: ah, yes, I clarified further down","date":"2017-04-11T20:30:59.095Z","type":"message"}
{"nick":"samth","message":"oh, sorry, I see that now","date":"2017-04-11T20:31:16.229Z","type":"message"}
{"nick":"samth","message":"jeffmo: the justification is to only error when there was some actual use of a name that is ambigous, so as to avoid new exports being a breaking change as much as possible","date":"2017-04-11T20:32:09.061Z","type":"message"}
{"nick":"samth","message":"obviously in any situation with `export *` eventually it could break something","date":"2017-04-11T20:32:37.573Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T20:58:15.785Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-11T21:04:17.371Z","type":"join"}
{"nick":"dilijev","message":"maybe dumb question, but is the only resolution to a name overlap in imported modules (if you want all symbols) to rename one of them? Assuming you don't have control over either module, Is it possible to force a new name at import time?","date":"2017-04-11T21:23:03.708Z","type":"message"}
{"nick":"Havvy","reason":"Quit: Computer Restarted or Restarting IRC","date":"2017-04-11T21:26:02.278Z","type":"quit"}
{"nick":"ljharb","message":"dilijev: you mean you want something like, `import { a as renamed }, * as all from 'path'; path.a = renamed;`? (not sure if that actually works)","date":"2017-04-11T21:27:18.930Z","type":"message"}
{"nick":"Havvy","date":"2017-04-11T21:31:34.792Z","type":"join"}
{"nick":"dilijev","message":"yeah I've only looked at modules in typescript personally so i don't know how much of the syntax overlaps with ES modules, but I think `import { a as renamed } from 'path'` is allowed there, as is `import * as all from 'path'`","date":"2017-04-11T21:35:41.813Z","type":"message"}
{"nick":"dilijev","message":"In the latter, all gets all exports from 'path' as properties which basically sets up a namespace and sidesteps the problem that `import { a as renamed } from 'path'` solves directly","date":"2017-04-11T21:36:43.426Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-11T21:36:59.451Z","type":"quit"}
{"nick":"dilijev","message":"so i guess i'm asking is ES modules supports that syntax","date":"2017-04-11T21:37:01.834Z","type":"message"}
{"nick":"dilijev","message":"s/is/if/","date":"2017-04-11T21:40:31.269Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-04-11T22:14:13.573Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-04-11T22:14:59.331Z","type":"join"}
{"nick":"Fishrock123","reason":"Client Quit","date":"2017-04-11T22:15:49.824Z","type":"quit"}
{"nick":"aklein","message":"dilijev: yes, that syntax is ES syntax","date":"2017-04-11T22:21:42.921Z","type":"message"}
{"nick":"aklein","message":"dilijev: https://tc39.github.io/ecma262/#sec-imports and https://tc39.github.io/ecma262/#sec-exports for the full grammar","date":"2017-04-11T22:23:30.601Z","type":"message"}
{"nick":"aklein","message":"random question: anyone remember what happened to comprehensions?","date":"2017-04-11T23:20:05.956Z","type":"message"}
{"nick":"aklein","message":"I think dherman presented something that killed it at one of the first meetings I attended","date":"2017-04-11T23:20:19.083Z","type":"message"}
{"nick":"cloudshu","message":"aklein: yes","date":"2017-04-11T23:21:40.113Z","type":"message"}
{"nick":"cloudshu","message":"aklein: comprehensions got killed from what i remember","date":"2017-04-11T23:22:20.240Z","type":"message"}
{"nick":"aklein","message":"cloudshu: I know they got killed, what I'm wondering is if there's somewhere on the web explaining why","date":"2017-04-11T23:22:55.691Z","type":"message"}
{"nick":"cloudshu","message":"aklein: ah good question, let me dig through logs and see","date":"2017-04-11T23:24:05.537Z","type":"message"}
{"nick":"aklein","message":"cloudshu: thanks","date":"2017-04-11T23:24:12.087Z","type":"message"}
{"nick":"aklein","message":"I found some broken links to dherman's blog, and to the ecmascript harmony wiki (RIP)","date":"2017-04-11T23:24:30.976Z","type":"message"}
{"nick":"cloudshu","message":"wingo would remember...","date":"2017-04-11T23:24:33.132Z","type":"message"}
{"nick":"cloudshu","action":"pours one out for harmony wiki","date":"2017-04-11T23:24:40.152Z","type":"action"}
{"nick":"aklein","message":"yeah wingo's blog scores highly","date":"2017-04-11T23:24:41.112Z","type":"message"}
{"nick":"aklein","message":"except the thing I found says \"hey it's implemented!\"","date":"2017-04-11T23:24:56.319Z","type":"message"}
{"nick":"tcare","message":"ah the harmony wiki.. good times..","date":"2017-04-11T23:24:56.837Z","type":"message"}
{"nick":"dherman","message":"wingo might never forgive me","date":"2017-04-11T23:25:00.550Z","type":"message"}
{"nick":"dherman","message":"there should be meeting minutes from that meeting","date":"2017-04-11T23:25:26.223Z","type":"message"}
{"nick":"dherman","message":"I can picture the room but can't remember where/when it was","date":"2017-04-11T23:25:48.351Z","type":"message"}
{"nick":"cloudshu","action":"still digging","date":"2017-04-11T23:27:15.231Z","type":"action"}
{"nick":"aklein","message":"if only github search worked","date":"2017-04-11T23:27:24.432Z","type":"message"}
{"nick":"dherman","message":"last commit on my sudoku repo was 2/7/2015","date":"2017-04-11T23:27:59.160Z","type":"message"}
{"nick":"dherman","message":"so I bet it was the meeting right around that time","date":"2017-04-11T23:28:04.417Z","type":"message"}
{"nick":"dherman","message":"https://github.com/dherman/sudoku/","date":"2017-04-11T23:28:06.940Z","type":"message"}
{"nick":"cloudshu","message":"MDN says removed in revision 27","date":"2017-04-11T23:29:18.626Z","type":"message"}
{"nick":"cloudshu","message":"whenever that was","date":"2017-04-11T23:29:20.714Z","type":"message"}
{"nick":"aklein","message":"notes from sep 2014 say they were removed in that spec draft","date":"2017-04-11T23:29:43.017Z","type":"message"}
{"nick":"aklein","message":"https://github.com/tc39/tc39-notes/blob/master/es6/2014-06/comprehensions.pdf","date":"2017-04-11T23:30:42.133Z","type":"message"}
{"nick":"dherman","message":"https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-06/comprehensions.pdf","date":"2017-04-11T23:30:49.885Z","type":"message"}
{"nick":"dherman","message":"lol","date":"2017-04-11T23:30:51.363Z","type":"message"}
{"nick":"aklein","message":"ha!","date":"2017-04-11T23:31:07.637Z","type":"message"}
{"nick":"dherman","message":"that's not the death knell though","date":"2017-04-11T23:31:18.402Z","type":"message"}
{"nick":"dherman","message":"just the death rattle","date":"2017-04-11T23:31:21.807Z","type":"message"}
{"nick":"dherman","message":"https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-07/jul-30.md","date":"2017-04-11T23:31:38.924Z","type":"message"}
{"nick":"dherman","message":"https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-07/jul-30.md#47-revisit-comprehension-decision-from-last-meeting","date":"2017-04-11T23:31:48.473Z","type":"message"}
{"nick":"dherman","message":"> MM: after seeing this code I will never use comprehensions","date":"2017-04-11T23:32:14.048Z","type":"message"}
{"nick":"dherman","message":"I had the same reaction :)","date":"2017-04-11T23:32:21.956Z","type":"message"}
{"nick":"dherman","message":"lol: > BE: who will own explaining to Andy Wingo and es-discuss?","date":"2017-04-11T23:32:47.474Z","type":"message"}
{"nick":"cloudshu","message":"lol","date":"2017-04-11T23:33:08.043Z","type":"message"}
{"nick":"cloudshu","message":"i just read that","date":"2017-04-11T23:33:09.313Z","type":"message"}
{"nick":"rbuckton","message":"Adding onto bterlson's comment yesterday about cancellation, first draft of spec text is now up at https://tc39.github.io/proposal-cancellation","date":"2017-04-11T23:36:38.006Z","type":"message"}
{"nick":"not-an-aardvark","date":"2017-04-11T23:48:36.351Z","type":"join"}
