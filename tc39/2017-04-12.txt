{"nick":"aklein","message":"dherman, cloudshu: thanks!","date":"2017-04-12T00:16:00.609Z","type":"message"}
{"nick":"cloudshu","message":"aklein: i wasn't very successful :)","date":"2017-04-12T00:16:26.427Z","type":"message"}
{"nick":"rbuckton","reason":"Ping timeout: 260 seconds","date":"2017-04-12T00:32:25.441Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-04-12T00:50:14.989Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-04-12T01:05:38.506Z","type":"quit"}
{"nick":"Domenic","message":"I still haven't seen a good LINQ-style lazy iterator library","date":"2017-04-12T02:26:30.261Z","type":"message"}
{"nick":"Domenic","message":"where e.g. lazy(iter).map(f).filter(g).reduce(h) creates an iterator where looping over it performs f-g-h in a single loop, instead of three passes","date":"2017-04-12T02:27:15.792Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-12T03:36:20.414Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-12T03:40:50.166Z","type":"quit"}
{"nick":"ljharb","message":"doesn't lodash do that with its chaining stuff?","date":"2017-04-12T03:45:51.912Z","type":"message"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2017-04-12T03:55:59.842Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-04-12T03:58:19.939Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2017-04-12T04:02:02.376Z","type":"quit"}
{"nick":"tcare","reason":"Quit: Connection closed for inactivity","date":"2017-04-12T05:10:05.245Z","type":"quit"}
{"nick":"brab","date":"2017-04-12T06:20:55.224Z","type":"join"}
{"nick":"gskachkov_","date":"2017-04-12T06:27:03.192Z","type":"join"}
{"nick":"gcommer","reason":"Ping timeout: 260 seconds","date":"2017-04-12T06:55:25.191Z","type":"quit"}
{"nick":"gcommer","date":"2017-04-12T06:56:09.249Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T07:33:08.239Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T07:33:57.334Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-12T07:35:43.968Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T07:40:55.702Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T07:45:49.531Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T07:59:02.329Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-12T07:59:50.890Z","type":"quit"}
{"nick":"Havvy","reason":"Remote host closed the connection","date":"2017-04-12T08:14:51.478Z","type":"quit"}
{"nick":"Havvy","date":"2017-04-12T08:15:15.965Z","type":"join"}
{"nick":"gskachkov_","date":"2017-04-12T08:23:45.072Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-12T08:24:45.074Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T08:37:06.129Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-04-12T08:38:53.494Z","type":"quit"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-12T08:38:56.744Z","type":"quit"}
{"nick":"M-IvanSanchez","reason":"Read error: Connection reset by peer","date":"2017-04-12T09:11:30.502Z","type":"quit"}
{"nick":"M-IvanSanchez","date":"2017-04-12T09:13:36.608Z","type":"join"}
{"nick":"gskachkov_","date":"2017-04-12T09:35:13.240Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T10:07:09.371Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-04-12T10:25:10.476Z","type":"quit"}
{"nick":"mylesborins","date":"2017-04-12T10:25:40.983Z","type":"join"}
{"nick":"gskachkov_","date":"2017-04-12T10:26:13.374Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-12T10:27:53.323Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T10:34:38.100Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-12T10:39:18.315Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T10:55:30.935Z","type":"join"}
{"nick":"jmdyck","date":"2017-04-12T11:03:50.483Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T11:06:57.594Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T11:11:14.616Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T11:42:17.488Z","type":"quit"}
{"nick":"brab","reason":"Quit: ERC (IRC client for Emacs 25.2.1)","date":"2017-04-12T11:56:25.387Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T12:26:55.065Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T12:36:20.463Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T12:37:47.832Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T12:51:21.866Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T12:54:00.689Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T13:26:27.610Z","type":"quit"}
{"nick":"annevk","message":"leobalter: do we have SAB tests? Do we have tests for the [[CanBlock]] bit on agents?","date":"2017-04-12T13:28:48.184Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-12T13:29:59.895Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T13:38:39.370Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T13:45:50.173Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-12T13:46:58.158Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T13:50:52.042Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T14:00:33.015Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T14:02:12.023Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-12T14:04:24.311Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-04-12T14:40:09.847Z","type":"join"}
{"nick":"bradleymeck","date":"2017-04-12T14:42:03.166Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-04-12T14:59:03.592Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-04-12T15:45:15.185Z","type":"join"}
{"nick":"gskachkov_","date":"2017-04-12T16:17:51.411Z","type":"join"}
{"nick":"bradleymeck","message":"my brain my not be awake yet, but I don't see the Promise state adoption w/o enqueueing a new job in https://tc39.github.io/ecma262/#sec-promise-resolve-functions ? I know it was a big part of the A+ stuff but wasn't around for spec adoption","date":"2017-04-12T16:18:05.586Z","type":"message"}
{"nick":"bradleymeck","message":"anyone know if that was just an oversight?","date":"2017-04-12T16:18:16.544Z","type":"message"}
{"nick":"bradleymeck","message":"or was it talked about?","date":"2017-04-12T16:18:21.777Z","type":"message"}
{"nick":"tcare","date":"2017-04-12T17:24:11.231Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-04-12T17:28:22.282Z","type":"quit"}
{"nick":"leobalter","message":"annevk: we do have SAB tests. I need to check on the CanBlock, maybe cloudshu has a quick answer","date":"2017-04-12T17:28:30.334Z","type":"message"}
{"nick":"leobalter","message":"let me check","date":"2017-04-12T17:28:33.338Z","type":"message"}
{"nick":"cloudshu","message":"annevk: leobalter: i don't recall any tests for [[CanBlock]]","date":"2017-04-12T17:29:42.994Z","type":"message"}
{"nick":"leobalter","message":"me neither","date":"2017-04-12T17:29:56.943Z","type":"message"}
{"nick":"leobalter","message":"and `git grep -i CanBlock` is not returning anything","date":"2017-04-12T17:30:48.390Z","type":"message"}
{"nick":"annevk","message":"That would be good to test, web has 3 globals that want it false, 2 for true","date":"2017-04-12T17:35:30.158Z","type":"message"}
{"nick":"annevk","message":"We can also write tests I suppose, never quite sure what is best","date":"2017-04-12T17:36:07.796Z","type":"message"}
{"nick":"leobalter","message":"which reminds me: how can we determine the value for CanBlock in test262. For what I'm seeing in the tests for Atomics.wait, we need to rely in agent with a [[CanBlock]] == true","date":"2017-04-12T17:36:09.189Z","type":"message"}
{"nick":"leobalter","message":"annevk: Atomics.wait is the observable place for test CanBlock, I believe.","date":"2017-04-12T17:36:47.192Z","type":"message"}
{"nick":"annevk","message":"Nothing ends up throwing? I have not studied this much","date":"2017-04-12T17:36:56.695Z","type":"message"}
{"nick":"leobalter","message":"let me check","date":"2017-04-12T17:37:03.971Z","type":"message"}
{"nick":"bradleymeck","date":"2017-04-12T17:37:12.927Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T17:37:31.716Z","type":"quit"}
{"nick":"annevk","message":"And when I say globals I mean agents","date":"2017-04-12T17:37:40.376Z","type":"message"}
{"nick":"annevk","message":"How do you test multiple agents? Those are host-supplied somehow again?","date":"2017-04-12T17:38:11.440Z","type":"message"}
{"nick":"leobalter","message":"we have a $262.agent api abstraction","date":"2017-04-12T17:38:12.219Z","type":"message"}
{"nick":"leobalter","message":"and we don't have any tests for Atomics.wait throwing when [[CanBlock]] is not true","date":"2017-04-12T17:38:57.699Z","type":"message"}
{"nick":"leobalter","message":"https://tc39.github.io/ecma262/#sec-atomics.wait steps 6, 7","date":"2017-04-12T17:39:22.191Z","type":"message"}
{"nick":"annevk","message":"Is CanBlock all a host needs to determine btw?","date":"2017-04-12T17:39:35.906Z","type":"message"}
{"nick":"annevk","message":"Other fields did not seem applicable","date":"2017-04-12T17:39:52.475Z","type":"message"}
{"nick":"Domenic","message":"annevk: leobalter: I am pretty sure we'll need to write the tests ourselves instead of in test262; test262 doesn't have the infrastructure for differentiating between window/worker/serviceworker/worklet/...","date":"2017-04-12T17:54:27.696Z","type":"message"}
{"nick":"Domenic","message":"And people might argue that it shouldn't have such infrastructure as they're web-only concepts","date":"2017-04-12T17:54:43.283Z","type":"message"}
{"nick":"annevk","message":"Domenic: yeah, but my impression is that test262 provides abstractions for this so user agents can fill in for the various forms","date":"2017-04-12T17:55:13.483Z","type":"message"}
{"nick":"annevk","message":"Domenic: there's a similar thing for how detached ArrayBuffer is tested","date":"2017-04-12T17:55:36.229Z","type":"message"}
{"nick":"Domenic","message":"I think it might aspire to, but nobody runs the tests in multiple globals","date":"2017-04-12T17:55:47.062Z","type":"message"}
{"nick":"annevk","message":"Domenic: now whether everyone implements those hooks and does things properly etc. I don't know, but then folks also seem to ignore large swaths of web-platform-tests :/","date":"2017-04-12T17:56:14.490Z","type":"message"}
{"nick":"Domenic","message":"In other words, the abstractions in place right now allow the host to supply one behave (e.g. \"detach an array buffer\") not multiple behaviors for multiple globals","date":"2017-04-12T17:56:16.133Z","type":"message"}
{"nick":"Domenic","message":"Nobody runs test262 on multiple globals from what I understand. Maybe they should, but it seems easier to do this in WPT, which has good multi-global infrastructure in place.","date":"2017-04-12T17:56:57.598Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-12T17:57:35.588Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-12T17:58:39.507Z","type":"quit"}
{"nick":"annevk","message":"They should run it in all the globals :/","date":"2017-04-12T17:59:57.165Z","type":"message"}
{"nick":"annevk","message":"Which apparently is upwards of five","date":"2017-04-12T18:00:19.385Z","type":"message"}
{"nick":"annevk","message":"All these Worklet subclasses are going to be the downfall","date":"2017-04-12T18:00:37.555Z","type":"message"}
{"nick":"leobalter","message":"Domenic annevk: it's easy to the $262.agent abstraction to determine CanBlock in a very simple way, but consuming it holds the complexity","date":"2017-04-12T18:00:51.117Z","type":"message"}
{"nick":"annevk","message":"leobalter: I don't understand that sentence","date":"2017-04-12T18:01:19.555Z","type":"message"}
{"nick":"leobalter","message":"maybe we should mention the tests for Atomics.wait are relying in a CanBlock != false only agent","date":"2017-04-12T18:01:19.896Z","type":"message"}
{"nick":"leobalter","message":"annevk: it's easy to create some $262.agent.canBlock(false) thing","date":"2017-04-12T18:01:53.258Z","type":"message"}
{"nick":"leobalter","message":"for test262","date":"2017-04-12T18:01:57.384Z","type":"message"}
{"nick":"leobalter","message":"how the runtimes will deal with that is where the whole complexity is","date":"2017-04-12T18:02:20.939Z","type":"message"}
{"nick":"annevk","message":"Okay","date":"2017-04-12T18:02:26.157Z","type":"message"}
{"nick":"annevk","message":"Domenic brings up some good points about coverage","date":"2017-04-12T18:02:55.648Z","type":"message"}
{"nick":"leobalter","message":"adding this api I mentioned, it would be just about using it to create a test throwing a TypeError for a otherwise valid call on Atomics.wait","date":"2017-04-12T18:03:14.916Z","type":"message"}
{"nick":"cloudshu","action":"will read backlog later","date":"2017-04-12T18:03:29.796Z","type":"action"}
{"nick":"cloudshu","message":"can't right now","date":"2017-04-12T18:03:32.022Z","type":"message"}
{"nick":"annevk","message":"We need tests to run in [maybe variants]Worklet*, ServiceWorker*, DedicatedWorker*, and SharedWorkerGlobalScope, and also Window","date":"2017-04-12T18:03:37.929Z","type":"message"}
{"nick":"annevk","message":"And any kind of shared memory business needs to run in arbitrary combinations","date":"2017-04-12T18:03:56.474Z","type":"message"}
{"nick":"annevk","message":"For instance Service* and SharedWorkerGlobalScope end up creating their own agent cluster","date":"2017-04-12T18:04:42.912Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-04-12T18:10:32.591Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-04-12T18:19:05.344Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2017-04-12T18:19:46.926Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T18:24:53.065Z","type":"join"}
{"nick":"annevk","message":"To continue, I don't have good solutions, and I'd rather avoid writing all these things myself, I didn't add this to the platform and I'm already spending enough time on it as it is","date":"2017-04-12T18:28:31.627Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T18:44:08.559Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T18:44:34.757Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T19:12:33.478Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T19:14:29.038Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-04-12T19:22:25.316Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-04-12T19:29:18.712Z","type":"join"}
{"nick":"aklein","message":"annevk: it seems like there are two things you want to test","date":"2017-04-12T20:15:06.833Z","type":"message"}
{"nick":"aklein","message":"on the test262 side, test that when [[CanBlock]] is false, whatever is supposed to happen happens (if that's actually visible from ES)","date":"2017-04-12T20:15:38.063Z","type":"message"}
{"nick":"aklein","message":"on the WPT side, test that each of the globals behaves as expected","date":"2017-04-12T20:15:52.757Z","type":"message"}
{"nick":"aklein","message":"that is, it's not test262's job to make sure that a given user-agent's ServiceWorkerGlobalScope is set up properly","date":"2017-04-12T20:16:17.469Z","type":"message"}
{"nick":"aklein","message":"cloudshu: ^^ when you return","date":"2017-04-12T20:16:30.886Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T20:25:41.062Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-12T20:26:17.959Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-12T21:00:31.034Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2017-04-12T21:23:04.944Z","type":"join"}
{"nick":"cloudshu","message":"Domenic: annevk: i agree with aklein here. similar to what Domenic said, i think it's outside of test262 purview to test web globals behave certain ways -- and in practice nobody's going to run it that way even if we do somehow check in tests that test web globals","date":"2017-04-12T22:01:02.833Z","type":"message"}
{"nick":"cloudshu","message":"as for testing [[CanBlock]] itself, there's the easy case of having Atomics.wait throw","date":"2017-04-12T22:02:04.307Z","type":"message"}
{"nick":"cloudshu","message":"testing 8.9 Forward Progress is probably... good luck","date":"2017-04-12T22:02:10.904Z","type":"message"}
{"nick":"cloudshu","message":"aklein: that's the only case of [[CanBlock]] being visible, i think, if your agent can't block, wait throws","date":"2017-04-12T22:02:50.436Z","type":"message"}
{"nick":"aklein","message":"cloudshu: ah, sounds good. I think someone may have already mentioned Atomics.wait above (I actually have very few of the details of SAB in my head)","date":"2017-04-12T22:03:42.103Z","type":"message"}
{"nick":"cloudshu","message":"annevk: as for your concern of actual tests, i think the test262 test would leave you unsatisfied, since you really want the web global tests","date":"2017-04-12T22:03:56.501Z","type":"message"}
{"nick":"cloudshu","message":"annevk: i don't know who's best to do that, i don't know much about WPT. someone at Bocoup who's working on WPT maybe (i think lyza is)? ^leobalter","date":"2017-04-12T22:04:43.852Z","type":"message"}
{"nick":"leobalter","message":"cloudshu annevk: Lyza was workign on WPT w/ Mozilla.","date":"2017-04-12T22:25:56.658Z","type":"message"}
{"nick":"leobalter","message":"aklein: that's accurate","date":"2017-04-12T22:26:02.800Z","type":"message"}
{"nick":"leobalter","message":"I'll contact Lyza and the team here working on WPT","date":"2017-04-12T22:26:47.820Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-04-12T23:33:48.804Z","type":"quit"}
