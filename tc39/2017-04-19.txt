{"nick":"TabAtkins","message":"littledan: You can just use our instance! Might as well get all the web standards together.","date":"2017-04-19T00:03:35.451Z","type":"message"}
{"nick":"cloudshu","message":"TabAtkins: what's your instance?","date":"2017-04-19T01:03:02.489Z","type":"message"}
{"nick":"TabAtkins","message":"The one up above - social.csswg.org","date":"2017-04-19T01:08:04.821Z","type":"message"}
{"nick":"basicdays","reason":"Ping timeout: 240 seconds","date":"2017-04-19T02:04:28.431Z","type":"quit"}
{"nick":"basicdays","date":"2017-04-19T02:17:33.654Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-04-19T03:53:44.509Z","type":"quit"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2017-04-19T04:02:13.116Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-19T04:08:15.224Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-19T04:18:31.956Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-19T06:29:45.580Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-19T07:42:41.814Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2017-04-19T07:59:47.595Z","type":"join"}
{"nick":"gskachkov_","date":"2017-04-19T08:15:56.720Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-19T08:27:26.214Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-19T08:28:14.488Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-04-19T10:25:09.104Z","type":"quit"}
{"nick":"mylesborins","date":"2017-04-19T10:25:39.739Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-04-19T10:28:54.584Z","type":"quit"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-19T10:44:26.756Z","type":"quit"}
{"nick":"Kovensky","message":"I was dismissing mastodon as a fad, but then my employer put an instance up... that kinda blew up","date":"2017-04-19T10:45:38.765Z","type":"message"}
{"nick":"Kovensky","message":"not sure if it'll actually grow beyond the initial excitement, though; see google+","date":"2017-04-19T10:46:18.470Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-19T10:57:58.570Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-19T11:00:14.111Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-19T11:08:16.395Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-19T11:13:02.340Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-19T11:21:25.787Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-19T11:24:50.765Z","type":"quit"}
{"nick":"jmdyck","date":"2017-04-19T11:43:07.310Z","type":"join"}
{"nick":"gskachkov_","date":"2017-04-19T11:44:15.501Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-19T11:48:04.143Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-19T11:48:54.758Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-19T11:52:16.940Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-19T11:56:10.683Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-19T12:01:16.133Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-04-19T12:41:04.659Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-04-19T13:59:02.255Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-04-19T14:16:21.635Z","type":"join"}
{"nick":"Fishrock123","date":"2017-04-19T15:02:42.262Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-04-19T15:23:48.483Z","type":"quit"}
{"nick":"jeffmo","message":"bterlson: have you ever considered adding an index for all the various grammar params' purpose? (currently trying to figure out what \"+In\" means...)","date":"2017-04-19T15:39:34.228Z","type":"message"}
{"nick":"Bakkot","message":"There's only a few","date":"2017-04-19T15:41:22.030Z","type":"message"}
{"nick":"Bakkot","message":"+In means it's acceptable to have an unparenthesized 'a in b' in that production","date":"2017-04-19T15:42:42.454Z","type":"message"}
{"nick":"jeffmo","message":"should be quick to summarize then :) (The problem is that I pay attention to them rarely enough that each time they matter/might matter I have to scour for a while to figure them out again)","date":"2017-04-19T15:43:03.966Z","type":"message"}
{"nick":"jeffmo","message":"Bakkot: thanks","date":"2017-04-19T15:43:11.254Z","type":"message"}
{"nick":"Bakkot","message":"the only place it's disabled, I'm pretty sure, is in the init of for loops, so that you can't have `for (a in b; c; d);`","date":"2017-04-19T15:43:24.684Z","type":"message"}
{"nick":"jeffmo","message":"ah yes, makes sense","date":"2017-04-19T15:43:55.715Z","type":"message"}
{"nick":"Fishrock123","date":"2017-04-19T15:45:05.685Z","type":"join"}
{"nick":"Bakkot","message":"(I guess also in the init of B.3.6 initialized for-in loops.)","date":"2017-04-19T15:46:04.403Z","type":"message"}
{"nick":"leobalter","message":"where is the name property defined for a true anonmyous function in the specs? i.e: `Object.prototype.hasOwnProperty.call(function() {}, 'name'); // true`","date":"2017-04-19T16:13:22.314Z","type":"message"}
{"nick":"leobalter","message":"its value is set as the empty string, but I can't find any call in the specs defining it. At least not with SetFunctionName","date":"2017-04-19T16:13:56.229Z","type":"message"}
{"nick":"not-an-aardvark","date":"2017-04-19T16:15:51.970Z","type":"join"}
{"nick":"leobalter","message":"ok, https://tc39.github.io/ecma262/#sec-function-instances-name, this works for me","date":"2017-04-19T16:16:33.004Z","type":"message"}
{"nick":"Bakkot","message":"leobalter: actually, that looks like anonymous functions should *not* have an own name property, no?","date":"2017-04-19T16:17:33.110Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-04-19T16:25:46.800Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-19T16:42:53.069Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-19T17:00:49.722Z","type":"quit"}
{"nick":"ljharb","message":"Bakkot: thats what the spec says but in practice its always an own property iirc","date":"2017-04-19T17:01:05.849Z","type":"message"}
{"nick":"Bakkot","message":"ljharb: yeah, that's what it looks like; assuming I'm not missing something, might be worth fixing the spec","date":"2017-04-19T17:03:02.976Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-19T17:13:26.748Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-19T17:30:48.357Z","type":"quit"}
{"nick":"aklein","message":"Bakkot: +1 to fixing the spec here","date":"2017-04-19T17:37:20.774Z","type":"message"}
{"nick":"leobalter","message":"I believe the spec is right, but confusing","date":"2017-04-19T17:42:47.880Z","type":"message"}
{"nick":"leobalter","message":"It got me bikesheding over it for too long with Rick.","date":"2017-04-19T17:43:10.449Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-19T17:43:32.242Z","type":"join"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-19T17:44:28.811Z","type":"quit"}
{"nick":"leobalter","message":"\"The Function instances have the following properties:\" is defining own properties.","date":"2017-04-19T17:44:46.631Z","type":"message"}
{"nick":"leobalter","message":"\"Anonymous functions objects that do not have a contextual name associated with them by this specification do not have a name own property but inherit the name property of %FunctionPrototype%.\"","date":"2017-04-19T17:44:49.958Z","type":"message"}
{"nick":"leobalter","message":"this is probably describing functions defined in the specs","date":"2017-04-19T17:45:18.696Z","type":"message"}
{"nick":"leobalter","message":"that's my understanding","date":"2017-04-19T17:45:25.820Z","type":"message"}
{"nick":"leobalter","message":"it's just unclear, ambiguous.","date":"2017-04-19T17:45:35.970Z","type":"message"}
{"nick":"leobalter","message":"we can fix this phrase to refer to anonymous built-in functions","date":"2017-04-19T17:46:57.694Z","type":"message"}
{"nick":"aklein","message":"leobalter: what do you mean \"right\"?","date":"2017-04-19T17:49:43.786Z","type":"message"}
{"nick":"aklein","message":"leobalter: I'm pretty sure that spec bit you quoted says that anonymous functions don't have an own \"name\" property","date":"2017-04-19T17:51:20.857Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-19T17:53:35.584Z","type":"join"}
{"nick":"leobalter","message":"I believe it means anonymous built-in functions, but the current text is not saying that","date":"2017-04-19T18:02:50.766Z","type":"message"}
{"nick":"leobalter","message":"If I'm right, the 'built-in' part can be added as an editorial change, I guess. Let me check the tests for this, we should have some","date":"2017-04-19T18:03:45.507Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-19T18:10:46.998Z","type":"quit"}
{"nick":"aklein","message":"leobalter: sorry, I came in in the middle of this conversation. is your theory that built-in anonymous functions have no names, but author-generated ones do have names?","date":"2017-04-19T18:25:03.969Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-19T18:25:54.638Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-19T18:36:01.089Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-19T18:40:53.660Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-19T18:47:26.098Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-19T18:50:58.613Z","type":"join"}
{"nick":"ljharb","message":"are there any built-in anonymous functions?","date":"2017-04-19T19:30:50.347Z","type":"message"}
{"nick":"caitp","message":"builtin promise resolve/reject closures, and the \"AsyncIteratorValueUnwrap\" thing","date":"2017-04-19T19:31:39.254Z","type":"message"}
{"nick":"ljharb","message":"altho i just opened up node and did `new Promise(function (y, n) { console.log(y.name, n.name); })` and it printed out \"y\" and \"z\", so that's super screwy","date":"2017-04-19T19:31:42.117Z","type":"message"}
{"nick":"caitp","message":"I'm pretty sure that one isn't caused by the es2015 anonymous function naming stuff","date":"2017-04-19T19:32:45.225Z","type":"message"}
{"nick":"annevk","message":"ljharb: wrapper for event handler attributes?","date":"2017-04-19T19:32:46.637Z","type":"message"}
{"nick":"ljharb","message":"in safari, both have an empty string that is not an own property `new Promise(function (y, n) { console.log(1, y.name, y.hasOwnProperty('name'), 2, n.name, n.hasOwnProperty('name'), 3); })`","date":"2017-04-19T19:33:00.983Z","type":"message"}
{"nick":"ljharb","message":"annevk: event handlers wouldn't be in ES, that's what i was asking about","date":"2017-04-19T19:33:13.181Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-19T19:34:14.028Z","type":"quit"}
{"nick":"ljharb","message":"ok so safari and firefox and chrome both have them as empty strings; safari has inherited but firefox and chrome have own.","date":"2017-04-19T19:34:21.907Z","type":"message"}
{"nick":"ljharb","message":"and node has something totally odd","date":"2017-04-19T19:34:29.295Z","type":"message"}
{"nick":"ljharb","message":"i'm curious what chakra says","date":"2017-04-19T19:34:38.736Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-19T19:35:06.118Z","type":"join"}
{"nick":"ljharb","message":"we need an eshostbot","date":"2017-04-19T19:37:02.176Z","type":"message"}
{"nick":"leobalter","message":"aklein: author generated does have an own .name, the value is the empty string. I need to check if all the runtimes are doing the same","date":"2017-04-19T19:37:51.406Z","type":"message"}
{"nick":"ljharb","message":"but suffice to say it seems web compatible to go in either direction (own or inherited) for builtin functions","date":"2017-04-19T19:37:55.703Z","type":"message"}
{"nick":"leobalter","message":"I'll collect the information from runtimes, whatever is happening I'll probably come with some sort of fix to that text","date":"2017-04-19T19:38:24.654Z","type":"message"}
{"nick":"leobalter","message":"unles someone else wants to do it, my time is already short :)","date":"2017-04-19T19:38:46.500Z","type":"message"}
{"nick":"aklein","message":"leobalter: where's the spec text that you think gives author-created anonymous functions names?","date":"2017-04-19T19:39:30.216Z","type":"message"}
{"nick":"leobalter","message":"https://tc39.github.io/ecma262/#sec-function-instances-name","date":"2017-04-19T19:40:15.556Z","type":"message"}
{"nick":"leobalter","message":"aklein: propeties of function instances","date":"2017-04-19T19:40:24.505Z","type":"message"}
{"nick":"aklein","message":"ljharb: what's your test that shows it not being an own property in safari? my near-ToT build of JSC says otherwise","date":"2017-04-19T19:40:54.756Z","type":"message"}
{"nick":"aklein","message":"eshost -e '(function(){}).hasOwnProperty(\"name\")'","date":"2017-04-19T19:41:02.278Z","type":"message"}
{"nick":"aklein","message":"leobalter: my reading of that second paragraph applies to all anonymous functions, not just built ins","date":"2017-04-19T19:41:54.049Z","type":"message"}
{"nick":"aklein","message":"\" a contextual name associated with them by this specification \" seems to be trying to refer to the name inference stuff for AssignmentExpression, PropertyDefinition, etc","date":"2017-04-19T19:42:27.532Z","type":"message"}
{"nick":"aklein","message":"but I agree that this spec text could be tightened up","date":"2017-04-19T19:42:47.384Z","type":"message"}
{"nick":"ljharb","message":"aklein: new Promise(function (y, n) { console.log(1, y.name, y.hasOwnProperty('name'), 2, n.name, n.hasOwnProperty('name'), 3); })","date":"2017-04-19T19:42:54.628Z","type":"message"}
{"nick":"aklein","message":"ljharb: oh, the promise functions. I'm interested in the general issue","date":"2017-04-19T19:43:47.737Z","type":"message"}
{"nick":"aklein","message":"\"(function(){}).hasOwnProperty('name')\" is true in V8, JSC, and SpiderMonkey, false in Chakra","date":"2017-04-19T19:44:18.204Z","type":"message"}
{"nick":"rwaldron_","date":"2017-04-19T19:44:37.247Z","type":"join"}
{"nick":"leobalter","message":"thanks for catching that in Chakra","date":"2017-04-19T19:44:38.503Z","type":"message"}
{"nick":"aklein","message":"leobalter: was reminded by https://bugs.chromium.org/p/v8/issues/detail?id=4709","date":"2017-04-19T19:44:54.118Z","type":"message"}
{"nick":"leobalter","message":"it saves loading my virtual machine","date":"2017-04-19T19:44:54.904Z","type":"message"}
{"nick":"aklein","message":"and verified that what I said there is still the case","date":"2017-04-19T19:45:16.937Z","type":"message"}
{"nick":"ljharb","message":"aklein: user-created anon functions have own properties, yes - but i don't know if that makes a difference to anyone","date":"2017-04-19T19:45:34.462Z","type":"message"}
{"nick":"leobalter","message":"it's a test262 failure. That's great. Now I only need to find it :)","date":"2017-04-19T19:46:01.542Z","type":"message"}
{"nick":"leobalter","message":"ljharb: it might make difference for me only, on test262","date":"2017-04-19T19:46:27.064Z","type":"message"}
{"nick":"leobalter","message":"that's me against the whole world. If it's in the specs, I should assert it's passing.","date":"2017-04-19T19:47:09.464Z","type":"message"}
{"nick":"ljharb","message":"sure, test262 would care :-)","date":"2017-04-19T19:47:54.813Z","type":"message"}
{"nick":"leobalter","message":"ljharb: https://github.com/tc39/test262/blob/098f9ca3de5043c376e0cb68c14acf535ad8d66e/test/language/statements/empty/S12.3_A1.js","date":"2017-04-19T19:49:34.922Z","type":"message"}
{"nick":"ljharb","message":"but i have a Function.prototype.name polyfill for IE 9-11 and i don't think it cares if it's an own property","date":"2017-04-19T19:49:40.763Z","type":"message"}
{"nick":"ljharb","message":"leobalter: lol","date":"2017-04-19T19:50:46.804Z","type":"message"}
{"nick":"aklein","message":"leobalter: https://cs.chromium.org/chromium/src/v8/test/test262/test262.status?l=63","date":"2017-04-19T19:52:44.004Z","type":"message"}
{"nick":"leobalter","message":"can we have a bot to save/log the chat from this public channel?  This is good to save as a reference too","date":"2017-04-19T19:53:07.944Z","type":"message"}
{"nick":"aklein","message":"hah, I'll bet JSC removed the names from the Promise code just to pass these tests","date":"2017-04-19T19:53:28.328Z","type":"message"}
{"nick":"ljharb","message":"leobalter: it's already logged by slurp","date":"2017-04-19T19:53:36.888Z","type":"message"}
{"nick":"leobalter","message":"aklein: Thanks for this link! This is great to have! rwaldron_ ^^","date":"2017-04-19T19:53:45.117Z","type":"message"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-04-19T19:58:54.603Z","type":"quit"}
{"nick":"leobalter","message":"aklein: https://github.com/tc39/test262/issues/988","date":"2017-04-19T20:13:44.854Z","type":"message"}
{"nick":"not-an-aardvark","date":"2017-04-19T20:14:24.390Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-04-19T20:37:21.676Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-04-19T20:38:02.835Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-04-19T20:38:10.002Z","type":"quit"}
{"nick":"rwaldron_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-04-19T20:41:00.664Z","type":"quit"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-19T21:16:56.728Z","type":"quit"}
{"nick":"dilijev","message":"eshost -e \"new Promise(function (y, n) { console.log(1, y.name, y.hasOwnProperty('name'), 2, n.name, n.hasOwnProperty('name'), 3); })\" shows `1  false 2  false 3` in chakracore","date":"2017-04-19T21:39:19.738Z","type":"message"}
{"nick":"dilijev","message":"> \"(function(){}).hasOwnProperty('name')\" is true in V8, JSC, and SpiderMonkey, false in Chakra","date":"2017-04-19T21:40:06.876Z","type":"message"}
{"nick":"dilijev","message":"aklein: leobalter: bterlson: shall we open a bug on chakracore for that?","date":"2017-04-19T21:40:31.188Z","type":"message"}
{"nick":"dilijev","message":"from my reading of the spec Chakra does the right thing here -- or am I missing something","date":"2017-04-19T21:41:21.193Z","type":"message"}
{"nick":"aklein","message":"dilijev: Chakra does the spec thing, everyone else does the legacy thing, yeah. not clear which direction we should go.","date":"2017-04-19T21:42:07.146Z","type":"message"}
{"nick":"dilijev","message":"leobalter: isn't this the archive saved by slurp? http://logs.libuv.org/tc39/latest","date":"2017-04-19T21:44:43.679Z","type":"message"}
{"nick":"dilijev","message":"I think that link is in the channel's /topic","date":"2017-04-19T21:45:23.911Z","type":"message"}
{"nick":"dilijev","message":"I'm using irccloud so for me it's just displayed at the top","date":"2017-04-19T21:45:33.893Z","type":"message"}
{"nick":"caridy_","date":"2017-04-19T21:57:40.641Z","type":"join"}
{"nick":"Fishrock123","date":"2017-04-19T21:59:01.632Z","type":"join"}
{"nick":"caridy","reason":"Ping timeout: 240 seconds","date":"2017-04-19T22:01:10.619Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-04-19T22:25:27.363Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-04-19T22:26:07.332Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-04-19T22:26:14.472Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-04-19T22:46:21.274Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-04-19T23:03:59.994Z","type":"quit"}
{"nick":"caridy","date":"2017-04-19T23:44:19.983Z","type":"join"}
{"nick":"caridy_","reason":"Read error: Connection reset by peer","date":"2017-04-19T23:44:20.173Z","type":"quit"}
