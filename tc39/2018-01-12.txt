{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-01-12T00:11:52.211Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2018-01-12T00:14:14.224Z","type":"join"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-01-12T00:26:59.110Z","type":"quit"}
{"nick":"h11","date":"2018-01-12T03:02:35.386Z","type":"join"}
{"nick":"trysound","reason":"Quit: Connection closed for inactivity","date":"2018-01-12T04:11:28.606Z","type":"quit"}
{"nick":"keenwon","date":"2018-01-12T06:07:24.989Z","type":"join"}
{"nick":"keenwon","reason":"Client Quit","date":"2018-01-12T06:07:52.844Z","type":"quit"}
{"nick":"M-IvanSanchez","reason":"Ping timeout: 264 seconds","date":"2018-01-12T06:26:10.927Z","type":"quit"}
{"nick":"M-IvanSanchez","date":"2018-01-12T06:26:34.820Z","type":"join"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-01-12T06:30:27.717Z","type":"quit"}
{"nick":"darkSeid_","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2018-01-12T07:31:39.660Z","type":"quit"}
{"nick":"gibson042","reason":"Ping timeout: 255 seconds","date":"2018-01-12T08:07:56.880Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-01-12T08:33:55.980Z","type":"quit"}
{"nick":"ack__","date":"2018-01-12T09:06:56.989Z","type":"join"}
{"nick":"ack__","new_nick":"Guest88547","date":"2018-01-12T09:07:21.310Z","type":"nick"}
{"nick":"Guest88547","reason":"Client Quit","date":"2018-01-12T09:07:48.451Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-01-12T11:25:10.513Z","type":"quit"}
{"nick":"mylesborins","date":"2018-01-12T11:25:41.096Z","type":"join"}
{"nick":"littledan","message":"Bakkot: Which discussion?","date":"2018-01-12T12:28:26.368Z","type":"message"}
{"nick":"AtumT","date":"2018-01-12T13:01:37.490Z","type":"join"}
{"nick":"TabAtkins","reason":"Ping timeout: 252 seconds","date":"2018-01-12T13:11:01.885Z","type":"quit"}
{"nick":"TabAtkins","date":"2018-01-12T13:13:13.931Z","type":"join"}
{"nick":"jmdyck","date":"2018-01-12T13:40:10.737Z","type":"join"}
{"nick":"bradleymeck","date":"2018-01-12T14:47:25.562Z","type":"join"}
{"nick":"Fishrock123","date":"2018-01-12T15:11:10.812Z","type":"join"}
{"nick":"STRML","reason":"Quit: ZNC - http://znc.in","date":"2018-01-12T16:02:50.689Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-01-12T16:03:41.412Z","type":"quit"}
{"nick":"STRML","date":"2018-01-12T16:06:31.900Z","type":"join"}
{"nick":"bradleymeck","date":"2018-01-12T16:24:30.676Z","type":"join"}
{"nick":"jeffmo","reason":"*.net *.split","date":"2018-01-12T16:37:25.983Z","type":"quit"}
{"nick":"jeffmo","date":"2018-01-12T16:38:09.983Z","type":"join"}
{"nick":"devsnek","date":"2018-01-12T16:41:09.487Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-01-12T17:17:40.100Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-01-12T17:40:54.880Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-01-12T17:57:57.450Z","type":"quit"}
{"nick":"darkSeid_","date":"2018-01-12T18:03:05.082Z","type":"join"}
{"nick":"TimothyGu","date":"2018-01-12T18:19:38.292Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2018-01-12T18:20:39.255Z","type":"quit"}
{"nick":"TimothyGu","message":"Hey #tc39! I made a tutorial on how to get started with reading the ES spec for JS users. Would be awesome if y'all could provide some feedback/suggestions/correction on it! Link: https://timothygu.me/es-howto/","date":"2018-01-12T18:24:57.071Z","type":"message"}
{"nick":"TimothyGu","message":"For now it's pretty focused on the runtime aspect of it, as that's what I assume people have the most questions about","date":"2018-01-12T18:25:37.887Z","type":"message"}
{"nick":"bradleymeck","date":"2018-01-12T18:28:39.299Z","type":"join"}
{"nick":"Fishrock123","date":"2018-01-12T18:32:43.198Z","type":"join"}
{"nick":"devsnek","message":"as someone who had tried to read the spec several times and failed","date":"2018-01-12T18:40:44.488Z","type":"message"}
{"nick":"devsnek","message":"that page is so useful","date":"2018-01-12T18:40:49.365Z","type":"message"}
{"nick":"devsnek","message":"it should be in the actual spec tbh","date":"2018-01-12T18:40:55.149Z","type":"message"}
{"nick":"TabAtkins","message":"@TimothyGu: btw, the thinking-face emoji isn't present in the default fonts for some platforms (such as my Ubuntu Trusty).","date":"2018-01-12T18:48:28.136Z","type":"message"}
{"nick":"TabAtkins","message":"(Had to manually decode it from the surrogates to figure out what it was supposed to be ^_^)","date":"2018-01-12T18:48:47.239Z","type":"message"}
{"nick":"TimothyGu","message":"TabAtkins: :(","date":"2018-01-12T18:51:37.082Z","type":"message"}
{"nick":"TabAtkins","message":"There's plenty of question marks you can use that have higher support!","date":"2018-01-12T18:51:59.394Z","type":"message"}
{"nick":"TimothyGu","message":"TabAtkins: should be better now. Picked a pretty standard black question mark","date":"2018-01-12T18:58:13.989Z","type":"message"}
{"nick":"TimothyGu","message":"looks more consistent with the existing checkmarks/crosses also","date":"2018-01-12T18:58:54.987Z","type":"message"}
{"nick":"TabAtkins","message":"+1","date":"2018-01-12T18:58:58.856Z","type":"message"}
{"nick":"devsnek","message":"should get noto","date":"2018-01-12T18:59:17.604Z","type":"message"}
{"nick":"TabAtkins","message":"Sure, but in the meantime I was able to point out a problem that other people might have. ^_^","date":"2018-01-12T18:59:55.488Z","type":"message"}
{"nick":"littledan","message":"TimothyGu: That's awesome! Thanks so much for doing that. I'll review it and get back to you","date":"2018-01-12T19:11:43.194Z","type":"message"}
{"nick":"alextes","date":"2018-01-12T19:16:35.157Z","type":"join"}
{"nick":"TimothyGu","message":"littledan: thanks!","date":"2018-01-12T19:46:26.773Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: idk if you reread the new ASI text but i'm just going to assume you have at this point","date":"2018-01-12T20:30:07.217Z","type":"message"}
{"nick":"jmdyck","message":"TimothyGu: s/an notation/a notation/","date":"2018-01-12T20:30:35.943Z","type":"message"}
{"nick":"jmdyck","message":"\"uses this notation to extensively\": delete \"to\"","date":"2018-01-12T20:32:21.084Z","type":"message"}
{"nick":"jmdyck","message":"Found https://github.com/TimothyGu/es-howto , maybe I'll just make a PR","date":"2018-01-12T20:33:53.042Z","type":"message"}
{"nick":"jmdyck","message":"There are actually two more uses of the double-square-bracket notation: names of property attributes like [[Enumerable]] and [[Get]]; and [[Description]] of Symbol.","date":"2018-01-12T20:48:31.985Z","type":"message"}
{"nick":"TimothyGu","message":"jmdyck: isn't property descriptor a Record?","date":"2018-01-12T20:50:30.135Z","type":"message"}
{"nick":"jmdyck","message":"yes, Property *Descriptor* is a record, but that's different from a property","date":"2018-01-12T20:51:14.734Z","type":"message"}
{"nick":"TimothyGu","message":"but PRs are always welcome!","date":"2018-01-12T20:51:18.624Z","type":"message"}
{"nick":"TimothyGu","message":"oh heh","date":"2018-01-12T20:51:44.116Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: not quite, one sec","date":"2018-01-12T21:01:01.531Z","type":"message"}
{"nick":"TimothyGu","message":"jmdyck: what is the difference between property attributes and fields of a property descriptor? Are there any concrete reasons why they are not coalesced to a single concept?","date":"2018-01-12T21:05:20.032Z","type":"message"}
{"nick":"bradleymeck","message":"TimothyGu: field -> record, attribute -> property -> object (not record)","date":"2018-01-12T21:08:10.830Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: \"In order to prevent cases where automatic semicolon insertion could change\" - there will be no cases where it will change, but there will be cases where humans relying on certain patterns of ASI will use those patterns with new features, and their program will break as a result","date":"2018-01-12T21:08:22.883Z","type":"message"}
{"nick":"bradleymeck","message":"slots ~= fields for objects","date":"2018-01-12T21:08:44.935Z","type":"message"}
{"nick":"Domenic","message":"Wait what, how are property attributes not just fields in the PropertyDescriptor record","date":"2018-01-12T21:09:07.879Z","type":"message"}
{"nick":"bradleymeck","message":"Domenic: just wording to my knowledge nothing in terms of usage","date":"2018-01-12T21:09:23.618Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: the text is talking about alteration of source text right there","date":"2018-01-12T21:09:57.011Z","type":"message"}
{"nick":"ljharb","message":"hm","date":"2018-01-12T21:10:04.735Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: not in that paragraph tho","date":"2018-01-12T21:10:32.496Z","type":"message"}
{"nick":"ljharb","message":"bradleymeck: maybe just \"In order to prevent cases where automatic semicolon insertion could change when adding new code\"?","date":"2018-01-12T21:10:55.174Z","type":"message"}
{"nick":"bradleymeck","message":"ljharb: can rephrase to add that intent yea","date":"2018-01-12T21:11:08.211Z","type":"message"}
{"nick":"bradleymeck","message":"\"could change when adding additional source text around places with ASI\"?","date":"2018-01-12T21:11:56.190Z","type":"message"}
{"nick":"bradleymeck","message":"we don't need around places bit I guess","date":"2018-01-12T21:12:13.489Z","type":"message"}
{"nick":"ljharb","message":"yeah","date":"2018-01-12T21:12:51.134Z","type":"message"}
{"nick":"bradleymeck","message":"\"by adding source text outside of a grammar productions existing text boundaries\".","date":"2018-01-12T21:12:58.220Z","type":"message"}
{"nick":"bradleymeck","message":"that should fully get it I think","date":"2018-01-12T21:13:06.036Z","type":"message"}
{"nick":"Domenic","message":"zbraniecki: can you add me as a collaborator to your ecma262 fork so I can push directly to it?","date":"2018-01-12T21:15:04.677Z","type":"message"}
{"nick":"jmdyck","message":"Domenic: there's a correspondence between the fields of a PropDesc record and the attributes of a property, but they're not the same thing. See ValidateAndApplyPropertyDescriptor maybe.","date":"2018-01-12T21:21:54.096Z","type":"message"}
{"nick":"trysound","date":"2018-01-12T21:22:45.817Z","type":"join"}
{"nick":"Domenic","message":"Not seeing the difference there","date":"2018-01-12T21:22:51.000Z","type":"message"}
{"nick":"ljharb","message":"hm, https://tc39.github.io/ecma262/#sec-validateandapplypropertydescriptor step 2 c?","date":"2018-01-12T21:23:15.543Z","type":"message"}
{"nick":"Domenic","message":"That's just operating on a Property Descriptor record","date":"2018-01-12T21:23:34.329Z","type":"message"}
{"nick":"ljharb","message":"https://tc39.github.io/ecma262/#sec-property-attributes","date":"2018-01-12T21:23:43.917Z","type":"message"}
{"nick":"ljharb","message":"step 2 c says \"create an own data property named P of object O whose [[Value]], [[Writable]], [[Enumerable]] and [[Configurable]] attribute values are described by Desc\"","date":"2018-01-12T21:24:07.559Z","type":"message"}
{"nick":"Domenic","message":"Oh, 2.c.i.","date":"2018-01-12T21:24:28.412Z","type":"message"}
{"nick":"Domenic","message":"That's dumb","date":"2018-01-12T21:24:38.134Z","type":"message"}
{"nick":"ljharb","message":"it'd probably be a lot simpler tho for the spec to have a property have a [[Descriptor]], rather than having separate properties","date":"2018-01-12T21:24:42.513Z","type":"message"}
{"nick":"jmdyck","message":"TimothyGu: I'm not exactly sure why they're distinct, but it would probably be weird to have things called 'properties' that weren't associated with objects.","date":"2018-01-12T21:24:55.060Z","type":"message"}
{"nick":"Domenic","message":"Objects should have an internal slot, [[Properties]], which is a List of PropertyDescriptor Records","date":"2018-01-12T21:25:10.888Z","type":"message"}
{"nick":"ljharb","message":"then an \"is enumerable\" check would be \"property.[[Descriptor]].[[Enumerable]]`","date":"2018-01-12T21:25:13.492Z","type":"message"}
{"nick":"ljharb","message":"yeah","date":"2018-01-12T21:25:14.341Z","type":"message"}
{"nick":"ljharb","message":"Domenic: tbh that seems like a moderately sized unobservable spec refactor that would make the spec simpler.","date":"2018-01-12T21:25:30.472Z","type":"message"}
{"nick":"ljharb","message":"if that's true we should look into making that change","date":"2018-01-12T21:25:42.316Z","type":"message"}
{"nick":"TimothyGu","message":"agreed","date":"2018-01-12T21:25:42.530Z","type":"message"}
{"nick":"TimothyGu","message":"making that change could also reduce confusions between \"have an own property\" versus \"result of obj.[[Has]]\"","date":"2018-01-12T21:27:38.362Z","type":"message"}
{"nick":"TimothyGu","message":"https://github.com/heycam/webidl/issues/366#issuecomment-306689819 for instance","date":"2018-01-12T21:27:48.004Z","type":"message"}
{"nick":"TimothyGu","message":"*result of [[GetOwnProperty]]","date":"2018-01-12T21:28:06.541Z","type":"message"}
{"nick":"bret","message":"@bradleymeck re https://github.com/tc39/ecma262/pull/1062#issuecomment-357358943 I'll re-review the current changes","date":"2018-01-12T21:29:24.850Z","type":"message"}
{"nick":"jmdyck","message":"https://bugs.ecmascript.org/show_bug.cgi?id=3812","date":"2018-01-12T21:45:35.210Z","type":"message"}
{"nick":"jmdyck","message":"(re properties of an object)","date":"2018-01-12T21:45:46.895Z","type":"message"}
{"nick":"devsnek","message":"whats up with the certs on that site :/","date":"2018-01-12T21:46:12.807Z","type":"message"}
{"nick":"jmdyck","message":"\"Deferred to ES7\" and then some.","date":"2018-01-12T21:46:12.990Z","type":"message"}
{"nick":"jmdyck","message":"TimothyGu: not sure what's happening around \"easily one of the [most undesirable features in JavaScript][ydkjs-object-wrappers] \"","date":"2018-01-12T22:13:58.602Z","type":"message"}
{"nick":"jmdyck","message":"(brackets look like markdown)","date":"2018-01-12T22:15:14.618Z","type":"message"}
{"nick":"devsnek","message":"oyea i was gonna ask about that","date":"2018-01-12T22:15:32.255Z","type":"message"}
{"nick":"not-an-aardvark","date":"2018-01-12T22:20:01.678Z","type":"join"}
{"nick":"darkSeid_","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2018-01-12T22:28:04.719Z","type":"quit"}
{"nick":"jmdyck","message":"TimothyGu: PR submitted","date":"2018-01-12T22:29:46.571Z","type":"message"}
{"nick":"bret","message":"ljharb: how did https://github.com/tc39/ecma262/pull/1062#issuecomment-357371576 break COC?","date":"2018-01-12T22:41:48.711Z","type":"message"}
{"nick":"ljharb","message":"bret: it didn't, but it's off-topic, and things like \"overreaching\" etc fuels the trolling we're trying to avoid.","date":"2018-01-12T22:46:10.519Z","type":"message"}
{"nick":"ljharb","message":"bret: if it's a problem you can edit it back to remove the details tags","date":"2018-01-12T22:46:38.058Z","type":"message"}
{"nick":"bret","message":"im try to stay on topic wrt the statement, not preferences on the interior of class body, though I do appreciate the energy Bakkot put into clarifying the situtaion","date":"2018-01-12T22:47:43.871Z","type":"message"}
{"nick":"bret","message":"ljharb: I'm going to withhold 'overreaching' and remove the detail tag","date":"2018-01-12T22:49:07.661Z","type":"message"}
{"nick":"ljharb","message":"sounds great, thanks","date":"2018-01-12T22:50:43.365Z","type":"message"}
{"nick":"ljharb","message":"bret: i didn't realize you were on irc or i'd have pinged you directly; i'll do that in future","date":"2018-01-12T22:50:53.613Z","type":"message"}
{"nick":"bret","message":"🙏","date":"2018-01-12T22:51:09.300Z","type":"message"}
{"nick":"iarna","date":"2018-01-12T23:11:41.292Z","type":"join"}
{"nick":"linclark","message":"we're trying to invite someone to the next TC39 but the form is saying \"Words entered in the Captcha field contain errors.\"","date":"2018-01-12T23:20:40.795Z","type":"message"}
{"nick":"linclark","message":"has anyone run into this before?","date":"2018-01-12T23:20:50.243Z","type":"message"}
{"nick":"trysound","reason":"Quit: Connection closed for inactivity","date":"2018-01-12T23:31:30.080Z","type":"quit"}
{"nick":"Bakkot","message":"linclark: on ECMA's site, or the doodle?","date":"2018-01-12T23:36:27.198Z","type":"message"}
{"nick":"Bakkot","message":"ljharb: can you expand on \"basically, which inner is it referring to\"? I don't know what that means.","date":"2018-01-12T23:36:41.394Z","type":"message"}
{"nick":"linclark","message":"Bakkot: on https://www.ecma-international.org/memento/contribute_TC39_Royalty_Free_Task_Group.php","date":"2018-01-12T23:37:08.540Z","type":"message"}
{"nick":"ljharb","message":"Bakkot: `class A { inner x; foo = class B { inner y; } }` to me both x and y are \"inner\" the A class","date":"2018-01-12T23:37:48.096Z","type":"message"}
{"nick":"Bakkot","message":"mm... ok, yes, but I don't see what's wrong with the keyword there; I don't expect confusion about which class the declaration is inner to, in that case","date":"2018-01-12T23:39:52.416Z","type":"message"}
{"nick":"Bakkot","message":"it's also an existing term: https://en.wikipedia.org/wiki/Inner_class","date":"2018-01-12T23:40:40.178Z","type":"message"}
{"nick":"Bakkot","message":"(though \"nested\" is too)","date":"2018-01-12T23:40:46.385Z","type":"message"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-01-12T23:41:28.180Z","type":"quit"}
{"nick":"ljharb","message":"i still like \"class\" tbh","date":"2018-01-12T23:49:59.481Z","type":"message"}
{"nick":"ljharb","message":"\"static\" means to me \"related to the constructor\", so lexically scoped probably isn't actually great for that","date":"2018-01-12T23:50:16.265Z","type":"message"}
