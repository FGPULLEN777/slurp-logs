{"nick":"AtumT_","reason":"Remote host closed the connection","date":"2017-08-17T02:50:35.107Z","type":"quit"}
{"nick":"abernix","reason":"Read error: Connection reset by peer","date":"2017-08-17T02:51:37.350Z","type":"quit"}
{"nick":"abernix","date":"2017-08-17T02:52:19.816Z","type":"join"}
{"nick":"abernix","reason":"Quit: Bye","date":"2017-08-17T03:03:09.337Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2017-08-17T03:08:28.640Z","type":"join"}
{"nick":"howdoi","date":"2017-08-17T03:25:01.555Z","type":"join"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2017-08-17T03:36:52.416Z","type":"quit"}
{"nick":"sebmarkbage|away","date":"2017-08-17T04:43:46.746Z","type":"join"}
{"nick":"ephemera_","date":"2017-08-17T04:44:02.654Z","type":"join"}
{"nick":"caridy","date":"2017-08-17T04:44:25.869Z","type":"join"}
{"nick":"basicdays","date":"2017-08-17T04:44:50.817Z","type":"join"}
{"nick":"gsathya","date":"2017-08-17T04:44:53.769Z","type":"join"}
{"nick":"wha121[m]","reason":"Ping timeout: 240 seconds","date":"2017-08-17T04:45:29.234Z","type":"quit"}
{"nick":"Jasuruzakovgmail","reason":"Ping timeout: 240 seconds","date":"2017-08-17T04:45:29.460Z","type":"quit"}
{"nick":"leobalter","date":"2017-08-17T04:45:42.239Z","type":"join"}
{"nick":"M-IvanSanchez","reason":"Ping timeout: 240 seconds","date":"2017-08-17T04:45:43.023Z","type":"quit"}
{"nick":"spion","date":"2017-08-17T04:46:54.863Z","type":"join"}
{"nick":"mattt1","date":"2017-08-17T04:47:37.794Z","type":"join"}
{"nick":"gcommer","date":"2017-08-17T04:47:44.608Z","type":"join"}
{"nick":"STRML","date":"2017-08-17T04:48:01.016Z","type":"join"}
{"nick":"caitp","date":"2017-08-17T04:48:19.598Z","type":"join"}
{"nick":"bttf","date":"2017-08-17T04:48:41.976Z","type":"join"}
{"nick":"rwaldron","date":"2017-08-17T04:49:42.598Z","type":"join"}
{"nick":"Draggor1","date":"2017-08-17T04:50:06.941Z","type":"join"}
{"nick":"Bakkot","date":"2017-08-17T04:52:40.274Z","type":"join"}
{"nick":"Jasuruzakovgmail","date":"2017-08-17T04:52:48.571Z","type":"join"}
{"nick":"wha121[m]","date":"2017-08-17T04:58:03.495Z","type":"join"}
{"nick":"M-IvanSanchez","date":"2017-08-17T04:58:03.695Z","type":"join"}
{"nick":"gkatsev","date":"2017-08-17T05:27:17.452Z","type":"join"}
{"nick":"Havvy","date":"2017-08-17T06:51:15.772Z","type":"join"}
{"nick":"gskachkov","date":"2017-08-17T07:52:59.002Z","type":"join"}
{"nick":"pandem","date":"2017-08-17T08:51:17.136Z","type":"join"}
{"nick":"cloudshu","reason":"Ping timeout: 255 seconds","date":"2017-08-17T10:10:52.978Z","type":"quit"}
{"nick":"wha121[m]","reason":"Ping timeout: 255 seconds","date":"2017-08-17T10:11:20.188Z","type":"quit"}
{"nick":"cloudshu","date":"2017-08-17T10:11:21.636Z","type":"join"}
{"nick":"dilijev","reason":"Ping timeout: 255 seconds","date":"2017-08-17T10:11:47.290Z","type":"quit"}
{"nick":"M-IvanSanchez","reason":"Ping timeout: 255 seconds","date":"2017-08-17T10:12:14.209Z","type":"quit"}
{"nick":"M-IvanSanchez","date":"2017-08-17T10:13:01.043Z","type":"join"}
{"nick":"mylesborins","reason":"Ping timeout: 260 seconds","date":"2017-08-17T10:14:27.677Z","type":"quit"}
{"nick":"dilijev","date":"2017-08-17T10:14:33.444Z","type":"join"}
{"nick":"mylesborins","date":"2017-08-17T10:16:45.440Z","type":"join"}
{"nick":"wha121[m]","date":"2017-08-17T10:24:18.037Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-08-17T10:25:12.145Z","type":"quit"}
{"nick":"mylesborins","date":"2017-08-17T10:25:42.834Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-08-17T10:27:51.894Z","type":"quit"}
{"nick":"IgnoredAmbience","date":"2017-08-17T12:18:02.042Z","type":"join"}
{"nick":"jmdyck","date":"2017-08-17T12:27:47.862Z","type":"join"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2017-08-17T13:24:57.642Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-08-17T13:58:52.012Z","type":"join"}
{"nick":"gskachkov","reason":"Read error: Connection reset by peer","date":"2017-08-17T14:39:41.011Z","type":"quit"}
{"nick":"AtumT","date":"2017-08-17T14:52:21.818Z","type":"join"}
{"nick":"Fishrock123","date":"2017-08-17T15:21:35.404Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-17T15:33:01.886Z","type":"quit"}
{"nick":"gskachkov","date":"2017-08-17T15:39:40.513Z","type":"join"}
{"nick":"bradleymeck","date":"2017-08-17T16:04:51.417Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-17T16:15:00.645Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-08-17T16:15:38.785Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-17T16:15:46.261Z","type":"quit"}
{"nick":"howdoi","date":"2017-08-17T16:21:34.985Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-08-17T16:29:40.432Z","type":"quit"}
{"nick":"gskachkov","date":"2017-08-17T16:30:24.483Z","type":"join"}
{"nick":"nobso","date":"2017-08-17T17:07:27.493Z","type":"join"}
{"nick":"nobso","date":"2017-08-17T17:08:20.792Z","type":"part"}
{"nick":"nobso","date":"2017-08-17T17:08:48.495Z","type":"join"}
{"nick":"Fishrock123","date":"2017-08-17T17:13:55.498Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-08-17T17:36:54.987Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-08-17T17:37:45.049Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-17T17:50:01.480Z","type":"quit"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2017-08-17T17:56:22.679Z","type":"quit"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-08-17T17:57:10.176Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-08-17T18:35:16.949Z","type":"join"}
{"nick":"Fishrock123","date":"2017-08-17T18:59:43.486Z","type":"join"}
{"nick":"gskachkov","date":"2017-08-17T19:03:57.034Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-08-17T19:25:42.382Z","type":"quit"}
{"nick":"gskachkov","date":"2017-08-17T19:26:32.903Z","type":"join"}
{"nick":"bterlson","message":"Domenic/annevk curious how you handle layering with types (esp. exotic ones) when you need different slot implementations - handy example link?","date":"2017-08-17T19:27:27.552Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-17T19:28:06.066Z","type":"quit"}
{"nick":"Domenic","message":"Different internal methods, you mean?","date":"2017-08-17T19:28:58.570Z","type":"message"}
{"nick":"bterlson","message":"sorry, yeah","date":"2017-08-17T19:29:06.499Z","type":"message"}
{"nick":"Domenic","message":"Basically https://heycam.github.io/webidl/ \"legacy platform objects\"","date":"2017-08-17T19:29:28.864Z","type":"message"}
{"nick":"Domenic","message":"(which has a bug right now where everything overrides [[Call]], so ignore call for now.)","date":"2017-08-17T19:29:58.188Z","type":"message"}
{"nick":"Domenic","message":"Everything on the platform is either a normal object or one of those, I believe.","date":"2017-08-17T19:30:19.908Z","type":"message"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-08-17T19:31:34.010Z","type":"quit"}
{"nick":"Domenic","message":"Hmm or the variant above it which only overrides [[SetPrototypeOf]]","date":"2017-08-17T19:31:50.133Z","type":"message"}
{"nick":"gskachkov","date":"2017-08-17T19:32:31.374Z","type":"join"}
{"nick":"bterlson","message":"Domenic: if overriding is a thing, isn't saying that a ULEO has the slots of an ordinary object ok for 262?","date":"2017-08-17T19:32:34.013Z","type":"message"}
{"nick":"bterlson","message":"other than it's a lie","date":"2017-08-17T19:32:39.832Z","type":"message"}
{"nick":"bterlson","message":"I just mean in terms of current practices","date":"2017-08-17T19:32:47.241Z","type":"message"}
{"nick":"bterlson","message":"brb","date":"2017-08-17T19:32:48.509Z","type":"message"}
{"nick":"AtumT_","date":"2017-08-17T19:47:48.898Z","type":"join"}
{"nick":"AtumT","reason":"Ping timeout: 240 seconds","date":"2017-08-17T19:48:27.879Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-08-17T19:51:40.421Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-08-17T20:15:59.792Z","type":"quit"}
{"nick":"gskachkov","date":"2017-08-17T20:27:13.850Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-08-17T20:33:00.261Z","type":"quit"}
{"nick":"Domenic","message":"bterlson: not sure what you mean about overriding being a thing","date":"2017-08-17T20:34:16.885Z","type":"message"}
{"nick":"Domenic","message":"In general legacy platform objects are exotic","date":"2017-08-17T20:34:37.787Z","type":"message"}
{"nick":"Domenic","message":"So e.g. document.all will have legacy platform object exotic methods","date":"2017-08-17T20:34:49.890Z","type":"message"}
{"nick":"Domenic","message":"Not because we override ES, but because we specify that it is an instance of HTMLAllCollection, and all HTMLAllCollection instances use the legacy platform object internal methods","date":"2017-08-17T20:35:12.321Z","type":"message"}
{"nick":"bterlson","message":"Domenic: this is re: \"tagging\" vs. \"exotic object\"","date":"2017-08-17T20:35:29.759Z","type":"message"}
{"nick":"bterlson","message":"seems like making it an exotic object with all the normal internal slots works for all 262 text and the layering could be accomplished however you define slots for ecmascript things","date":"2017-08-17T20:36:03.155Z","type":"message"}
{"nick":"Domenic","message":"Hmm I don't understand","date":"2017-08-17T20:36:28.182Z","type":"message"}
{"nick":"Domenic","message":"Right now we define internal methods for e.g. HTMLOptionsCollection by saying it is not an ordinary object, it is a legacy platform object","date":"2017-08-17T20:36:51.071Z","type":"message"}
{"nick":"Domenic","message":"The question is, can we say HTMLAllCollection instances are HTML document dot all exotic objects?","date":"2017-08-17T20:37:14.396Z","type":"message"}
{"nick":"Domenic","message":"It seems weird to do so","date":"2017-08-17T20:37:21.474Z","type":"message"}
{"nick":"Domenic","message":"Because you can only be one type of \"thing\"","date":"2017-08-17T20:37:25.523Z","type":"message"}
{"nick":"Domenic","message":"Either legacy platform object or HTML document dot all exotic object","date":"2017-08-17T20:37:34.076Z","type":"message"}
{"nick":"Domenic","message":"(s/\"thing\"/exotic object/)","date":"2017-08-17T20:37:40.339Z","type":"message"}
{"nick":"bterlson","message":"FTR it is I who don't understand, I'm trying to find a way to ask the right question ;)","date":"2017-08-17T20:37:46.684Z","type":"message"}
{"nick":"Domenic","message":"Maybe let's do it this way. Let's say I wanted to define something that had all the internal methods of https://heycam.github.io/webidl/#named-properties-object + the [[Call]] and [[Construct]] of bound function exotic objects","date":"2017-08-17T20:38:43.955Z","type":"message"}
{"nick":"Domenic","message":"Can I say \"x is both a named properties object and a bound function exotic object\"?","date":"2017-08-17T20:38:53.382Z","type":"message"}
{"nick":"Domenic","message":"Maybe I can, and people will know what I mean, but it feels weird","date":"2017-08-17T20:39:04.273Z","type":"message"}
{"nick":"bterlson","message":"I mean, you kinda have that already with interfaces right?","date":"2017-08-17T20:39:14.745Z","type":"message"}
{"nick":"Domenic","message":"Because generally I think bound function exotic objects *only* have overridden [[Call]] and [[Construct]]","date":"2017-08-17T20:39:16.058Z","type":"message"}
{"nick":"Domenic","message":"How so?","date":"2017-08-17T20:39:19.305Z","type":"message"}
{"nick":"bterlson","message":"an object can implement multiple interfaces and those interfaces might conflict","date":"2017-08-17T20:41:00.425Z","type":"message"}
{"nick":"Domenic","message":"they cannot conflict in the internal methods they implement","date":"2017-08-17T20:41:39.367Z","type":"message"}
{"nick":"Domenic","message":"An object will either be a legacy platform object (and implement those internal methods), or not (and be an ordinary object). It depends on whether the union of its interfaces uses certain features.","date":"2017-08-17T20:42:14.165Z","type":"message"}
{"nick":"bterlson","message":"doesn't graph 2 of https://heycam.github.io/webidl/#es-legacy-platform-objects say otherwise?","date":"2017-08-17T20:42:22.741Z","type":"message"}
{"nick":"Domenic","message":"graph 2?","date":"2017-08-17T20:42:46.750Z","type":"message"}
{"nick":"bterlson","message":"paragraph","date":"2017-08-17T20:42:55.771Z","type":"message"}
{"nick":"TabAtkins","message":"\"graf\" then ^_^","date":"2017-08-17T20:43:06.769Z","type":"message"}
{"nick":"bterlson","message":"TabAtkins: depends on the shop ;)","date":"2017-08-17T20:43:23.154Z","type":"message"}
{"nick":"Domenic","message":"No. If it implements any interfaces that have indexed properties, then it's a legacy platform object, with the specified internal methods.","date":"2017-08-17T20:43:38.919Z","type":"message"}
{"nick":"bterlson","message":"right, I was pointing out that at the interface level there is multiple inheritance and conflicts can happen... seemed analogous to me to multiple \"inheritance\" of \"types\" but maybe that's a stretch :-P","date":"2017-08-17T20:45:33.230Z","type":"message"}
{"nick":"gskachkov","date":"2017-08-17T20:45:53.315Z","type":"join"}
{"nick":"Domenic","message":"Yeah, not of types in terms of \"normal object\" vs. \"legacy platform object\" vs. \"bound function object\". Those are all exclusive.","date":"2017-08-17T20:46:00.379Z","type":"message"}
{"nick":"Domenic","message":"You pick one when creating the object","date":"2017-08-17T20:46:10.125Z","type":"message"}
{"nick":"bterlson","message":"ok, how about this then","date":"2017-08-17T20:46:22.837Z","type":"message"}
{"nick":"bterlson","message":"the object has no slots","date":"2017-08-17T20:46:29.567Z","type":"message"}
{"nick":"caitp","reason":"Quit: *","date":"2017-08-17T20:46:37.018Z","type":"quit"}
{"nick":"bterlson","message":"no","date":"2017-08-17T20:46:45.516Z","type":"message"}
{"nick":"bterlson","message":"the object has all of the essential slots and are implementation defined.","date":"2017-08-17T20:46:58.697Z","type":"message"}
{"nick":"bterlson","message":"I am trying to avoid some kind of tagged union machinery","date":"2017-08-17T20:47:23.381Z","type":"message"}
{"nick":"Domenic","message":"So I guess what I would propose is more like \"Any object can be marked as being a HTML document.all exotic object. If so, it behaves like undefined in ...\". Then just leave out the last sentence.","date":"2017-08-17T20:49:09.225Z","type":"message"}
{"nick":"Domenic","message":"(Optionally, replace \"any object\" with \"Only one object defined by one specification\" or something)","date":"2017-08-17T20:49:35.068Z","type":"message"}
{"nick":"bterlson","message":"marked seems too hand-wavey to me","date":"2017-08-17T20:49:56.775Z","type":"message"}
{"nick":"bterlson","message":"like it's a convention that would need to be defined somewhere at least","date":"2017-08-17T20:50:08.443Z","type":"message"}
{"nick":"caitp","date":"2017-08-17T20:50:20.353Z","type":"join"}
{"nick":"bterlson","message":"will saying it must implement all the essential methods of objects but leave their semantics implementation defined not work?","date":"2017-08-17T20:50:52.112Z","type":"message"}
{"nick":"Domenic","message":"Hmm","date":"2017-08-17T20:51:38.927Z","type":"message"}
{"nick":"cloudshu","date":"2017-08-17T20:51:51.582Z","type":"quit"}
{"nick":"Domenic","message":"I guess so, but I mean, isn't that true of all objects?","date":"2017-08-17T20:51:54.521Z","type":"message"}
{"nick":"Domenic","message":"Like, why is that last sentence even necessary, in your view.","date":"2017-08-17T20:52:06.035Z","type":"message"}
{"nick":"Domenic","message":"You could also make it a formal term that we reference: \"marked being a HTML document.all exotic object\"","date":"2017-08-17T20:52:30.235Z","type":"message"}
{"nick":"bterlson","message":"I don't think so - if you say you're an ordinary object but you define a slot differently, you are now no longer an ordinary object","date":"2017-08-17T20:52:32.422Z","type":"message"}
{"nick":"Domenic","message":"you keep saying slot, but I sure hope that's not true","date":"2017-08-17T20:52:42.136Z","type":"message"}
{"nick":"Domenic","message":"do you mean internal method?","date":"2017-08-17T20:52:46.249Z","type":"message"}
{"nick":"bterlson","message":"yes","date":"2017-08-17T20:52:50.476Z","type":"message"}
{"nick":"Domenic","message":"ok. so, sure, if you lie about being an ordinary object, that's bad. but who's going to do that?","date":"2017-08-17T20:53:09.979Z","type":"message"}
{"nick":"bterlson","message":"what I'm saying is that I believe object type is essentially a union of the internal methods it implements. In other words, with current PR, you can't change the ULEO's slots and still have a ULEO, but if I say they're implementation defined, they can be anything and still be a ULEO.","date":"2017-08-17T20:54:46.972Z","type":"message"}
{"nick":"Domenic","message":"I guess I see. Maybe \"other-specification defined\" instead of implementation-defined","date":"2017-08-17T20:55:57.419Z","type":"message"}
{"nick":"bterlson","message":"I think my proposal and yours are identical, it's just mine keeps a bit closer to existing conventions","date":"2017-08-17T20:56:16.317Z","type":"message"}
{"nick":"Domenic","message":"Still unsure why it's important to make this a *type* instead of a marker though","date":"2017-08-17T20:56:21.163Z","type":"message"}
{"nick":"Domenic","message":"Because with your proposal I'll have to say something like \"this is a legacy platform exotic object that also has the characteristics of a HTMLDDAEO\"","date":"2017-08-17T20:56:53.603Z","type":"message"}
{"nick":"Domenic","message":"Or I guess \"This is a HTMLDDAEO but all its internal methods are derived from legacy platform exotic object definitions and also every time a spec says 'is this a legacy platform object' the answer is yes\"","date":"2017-08-17T20:57:20.713Z","type":"message"}
{"nick":"bterlson","action":"is presently carving ULEO into his forearm. ULEO FOREVER!!!!","date":"2017-08-17T20:57:28.670Z","type":"action"}
{"nick":"Domenic","message":"I don't think that's a huge deal but it seems more awkard than just marking a legacy platform exotic object as a HTMLDDAEO","date":"2017-08-17T20:58:16.263Z","type":"message"}
{"nick":"Domenic","message":"I also think it's a bit weird to have an exotic object type that doesn't override internal methods","date":"2017-08-17T20:58:33.849Z","type":"message"}
{"nick":"bterlson","message":"the latter I would expect, but isn't the second clause of that tautological with the previous statement of \"internal methods are derived from legacy platform exotic object definitions\"?","date":"2017-08-17T20:59:30.741Z","type":"message"}
{"nick":"bterlson","message":"For marking, the best I can think of is adding an internal slot to all objects that says whether it's a ULEO or not","date":"2017-08-17T21:00:15.017Z","type":"message"}
{"nick":"Domenic","message":"I don't think we currently define \"is a legacy platform object\" as \"has the internal methods of a legacy platform object\". We define it as \"when we created it, we said, create a legacy platform object\"","date":"2017-08-17T21:00:29.137Z","type":"message"}
{"nick":"Domenic","message":"Hmm, I see how that would be more formal, and suck. I guess it kind of is what implementations do actually, lol?","date":"2017-08-17T21:01:06.393Z","type":"message"}
{"nick":"Domenic","message":"Oh!","date":"2017-08-17T21:02:21.572Z","type":"message"}
{"nick":"Domenic","message":"You could just say \"if it has a [[IsHTMLDDAEO]] slot\"","date":"2017-08-17T21:02:32.038Z","type":"message"}
{"nick":"Domenic","message":"You don't have to add it with a value false to every object","date":"2017-08-17T21:02:45.832Z","type":"message"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-08-17T21:02:48.771Z","type":"quit"}
{"nick":"Domenic","message":"You just check for its presence","date":"2017-08-17T21:02:49.068Z","type":"message"}
{"nick":"Domenic","message":"Which will only be true for document.all","date":"2017-08-17T21:02:54.164Z","type":"message"}
{"nick":"bterlson","message":"Ahh I was reading https://heycam.github.io/webidl/#dfn-legacy-platform-object wrong. I thought the first part was saying if those things are implemented on the object then it's a legacy platform object, but it's actually saying what the requirements of such objects are","date":"2017-08-17T21:02:59.445Z","type":"message"}
{"nick":"bterlson","message":"I still need an exotic object type for that, which still has the problem of how do I define its other slots?","date":"2017-08-17T21:03:40.876Z","type":"message"}
{"nick":"gskachkov","date":"2017-08-17T21:03:46.577Z","type":"join"}
{"nick":"Domenic","message":"No, why do you?","date":"2017-08-17T21:03:51.277Z","type":"message"}
{"nick":"Domenic","message":"Just change all the \"if\"s from \"if it's a HTML document dot all exotic object\" to \"if it's an Object with a [[IsHTMLDDAEO]] slot\"","date":"2017-08-17T21:04:14.853Z","type":"message"}
{"nick":"bterlson","message":"I feel like I can't just reference the slot without there being a definition of an object that has that slot anywhere in 262","date":"2017-08-17T21:05:17.492Z","type":"message"}
{"nick":"Domenic","message":"Hmm that seems totally fine to me","date":"2017-08-17T21:05:47.646Z","type":"message"}
{"nick":"Domenic","message":"You can still have the intro to the clause talk about what the slot means","date":"2017-08-17T21:05:55.152Z","type":"message"}
{"nick":"Domenic","message":"Even <dfn> it","date":"2017-08-17T21:06:00.143Z","type":"message"}
{"nick":"bterlson","message":"yeah this seems reasonable","date":"2017-08-17T21:06:43.730Z","type":"message"}
{"nick":"Domenic","message":"\\o/","date":"2017-08-17T21:07:00.695Z","type":"message"}
{"nick":"Domenic","message":"This seems really nice to me","date":"2017-08-17T21:07:12.917Z","type":"message"}
{"nick":"bterlson","message":"I'll say something to the effect of host-defined exotic objects may have an [[IsHTMLDDAEO]] slot","date":"2017-08-17T21:07:24.930Z","type":"message"}
{"nick":"bterlson","message":"should be good","date":"2017-08-17T21:07:47.100Z","type":"message"}
{"nick":"howdoi","reason":"Quit: Connection closed for inactivity","date":"2017-08-17T21:31:38.278Z","type":"quit"}
{"nick":"bterlson","message":"Domenic: https://github.com/tc39/ecma262/pull/673 updated","date":"2017-08-17T21:36:47.712Z","type":"message"}
{"nick":"Domenic","message":"bterlson: still curious whether those emu-xrefs are really needed","date":"2017-08-17T21:46:08.052Z","type":"message"}
{"nick":"bterlson","message":"ToBoolean isn't auto-linked naked I don't think, only when it's called (followed by a paren)","date":"2017-08-17T21:50:02.401Z","type":"message"}
{"nick":"bterlson","message":"they don't necessarily need the contents filled in, could use the title attribute","date":"2017-08-17T21:51:20.267Z","type":"message"}
{"nick":"bterlson","message":"although it copies the signature of toboolean which I didn't like","date":"2017-08-17T21:51:26.901Z","type":"message"}
{"nick":"bterlson","message":"it also capitalizes \"The\" in \"The Typeof Operator\" which seems weird","date":"2017-08-17T21:54:12.486Z","type":"message"}
{"nick":"dilijev","message":"You mean you don't think Capitalization of The Typeof Operator is A Good Thing?","date":"2017-08-17T21:55:36.863Z","type":"message"}
{"nick":"dilijev","message":"mumble mumble ™","date":"2017-08-17T21:56:02.987Z","type":"message"}
{"nick":"Domenic","message":"Huh interesting, I'm surprised it overrides the clause capitalization","date":"2017-08-17T22:16:45.453Z","type":"message"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2017-08-17T22:36:02.002Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-08-17T22:43:04.525Z","type":"quit"}
{"nick":"bterlson","message":"Domenic: it doesn't, the clause is title case","date":"2017-08-17T22:50:54.117Z","type":"message"}
{"nick":"Domenic","message":"bterlson: doesn't seem to be? https://tc39.github.io/ecma262/#sec-typeof-operator","date":"2017-08-17T22:51:23.464Z","type":"message"}
{"nick":"Domenic","message":"Oh, \"The\", not \"Typeof\"","date":"2017-08-17T22:51:37.710Z","type":"message"}
{"nick":"bterlson","message":"yeah","date":"2017-08-17T22:51:51.598Z","type":"message"}
{"nick":"Domenic","message":"That seems fine, cross-clause references suddenly breaking into a capital letter seems fairly standard. But shrug.","date":"2017-08-17T22:51:56.711Z","type":"message"}
{"nick":"bterlson","message":"yes, shrug","date":"2017-08-17T22:52:09.491Z","type":"message"}
{"nick":"nobso","reason":"Quit: nobso","date":"2017-08-17T23:19:13.281Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-08-17T23:26:20.081Z","type":"join"}
