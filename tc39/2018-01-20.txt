{"nick":"h11","reason":"Quit: WeeChat 2.0.1","date":"2018-01-20T00:00:44.315Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2018-01-20T00:12:48.796Z","type":"join"}
{"nick":"gibson042","date":"2018-01-20T00:37:54.804Z","type":"join"}
{"nick":"AtumT_","reason":"Remote host closed the connection","date":"2018-01-20T00:40:53.907Z","type":"quit"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2018-01-20T01:19:30.095Z","type":"quit"}
{"nick":"gibson042","date":"2018-01-20T01:19:57.018Z","type":"join"}
{"nick":"cloudshu","reason":"Quit: Connection closed for inactivity","date":"2018-01-20T01:22:10.492Z","type":"quit"}
{"nick":"gibson042","reason":"Ping timeout: 248 seconds","date":"2018-01-20T01:27:59.962Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-01-20T03:01:06.123Z","type":"quit"}
{"nick":"jmdyck","reason":"Remote host closed the connection","date":"2018-01-20T05:24:38.917Z","type":"quit"}
{"nick":"jwalden","reason":"Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805]","date":"2018-01-20T06:41:11.701Z","type":"quit"}
{"nick":"gskachkov","date":"2018-01-20T08:22:29.297Z","type":"join"}
{"nick":"AtumT","date":"2018-01-20T09:02:32.863Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2018-01-20T11:02:32.166Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-01-20T11:25:09.905Z","type":"quit"}
{"nick":"mylesborins","date":"2018-01-20T11:25:40.348Z","type":"join"}
{"nick":"jmdyck","date":"2018-01-20T13:30:02.748Z","type":"join"}
{"nick":"bradleymeck","date":"2018-01-20T14:28:33.046Z","type":"join"}
{"nick":"AtumT_","date":"2018-01-20T16:11:48.672Z","type":"join"}
{"nick":"AtumT","reason":"Ping timeout: 268 seconds","date":"2018-01-20T16:13:13.779Z","type":"quit"}
{"nick":"AtumT_","reason":"Ping timeout: 276 seconds","date":"2018-01-20T16:23:14.932Z","type":"quit"}
{"nick":"AtumT","date":"2018-01-20T16:25:26.832Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-01-20T17:12:19.685Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2018-01-20T19:25:35.469Z","type":"join"}
{"nick":"bradleymeck","date":"2018-01-20T20:36:15.232Z","type":"join"}
{"nick":"basicdays","reason":"*.net *.split","date":"2018-01-20T22:05:39.315Z","type":"quit"}
{"nick":"wycats","reason":"*.net *.split","date":"2018-01-20T22:05:39.760Z","type":"quit"}
{"nick":"mmun","reason":"*.net *.split","date":"2018-01-20T22:05:39.831Z","type":"quit"}
{"nick":"bterlson","reason":"*.net *.split","date":"2018-01-20T22:05:39.831Z","type":"quit"}
{"nick":"daveherman","reason":"*.net *.split","date":"2018-01-20T22:05:39.901Z","type":"quit"}
{"nick":"maggiepint","reason":"*.net *.split","date":"2018-01-20T22:05:39.901Z","type":"quit"}
{"nick":"bterlson","date":"2018-01-20T22:06:08.223Z","type":"join"}
{"nick":"maggiepint","date":"2018-01-20T22:06:08.591Z","type":"join"}
{"nick":"basicdays","date":"2018-01-20T22:06:12.498Z","type":"join"}
{"nick":"daveherman","date":"2018-01-20T22:06:15.364Z","type":"join"}
{"nick":"mmun","date":"2018-01-20T22:06:32.262Z","type":"join"}
{"nick":"wycats","date":"2018-01-20T22:06:48.275Z","type":"join"}
{"nick":"AtumT_","date":"2018-01-20T22:27:57.342Z","type":"join"}
{"nick":"AtumT","reason":"Ping timeout: 268 seconds","date":"2018-01-20T22:29:23.891Z","type":"quit"}
{"nick":"caiolima","message":"Hey guys. Why does \"{} + [] === '0'\"? Where can I find it into Spec?","date":"2018-01-20T22:45:11.834Z","type":"message"}
{"nick":"bradleymeck","message":"caiolima: the `{}` is an empty block statement when parsed is why","date":"2018-01-20T22:48:00.936Z","type":"message"}
{"nick":"caiolima","message":"bradleymeck: Oh, in such case, ```+[]``` is then unary operation, right?","date":"2018-01-20T22:50:34.288Z","type":"message"}
{"nick":"bradleymeck","message":"caiolima: yes, which actually ends up using toString to get the empty string, which turns into 0","date":"2018-01-20T22:51:59.545Z","type":"message"}
{"nick":"bradleymeck","message":"because Array#valueOf returns an Object (the array itself) it is not used","date":"2018-01-20T22:52:19.708Z","type":"message"}
{"nick":"bradleymeck","message":"well Object#valueOf *","date":"2018-01-20T22:52:45.819Z","type":"message"}
{"nick":"caiolima","message":"bradleymeck: thanks. I'm asking because I wasn't sure if ```{} + 3n === 3n```or ```{} + 3n === '3'```","date":"2018-01-20T22:54:01.737Z","type":"message"}
{"nick":"bradleymeck","message":"oh, in the top example I thought the ' was a typo","date":"2018-01-20T22:55:01.570Z","type":"message"}
{"nick":"caiolima","message":"my bad","date":"2018-01-20T22:57:21.214Z","type":"message"}
{"nick":"caiolima","message":"```{} + 3n === 3n```","date":"2018-01-20T22:57:30.749Z","type":"message"}
{"nick":"caiolima","message":"```{} + 3n === '3'```","date":"2018-01-20T22:57:39.102Z","type":"message"}
{"nick":"caiolima","message":"If  ```{}``` is an empty block, then ```+3n``` is parsed as unary operation and then it returns ```3n```","date":"2018-01-20T22:58:46.299Z","type":"message"}
{"nick":"jackhorton","reason":"Read error: Connection reset by peer","date":"2018-01-20T22:58:58.269Z","type":"quit"}
{"nick":"jackhorton","date":"2018-01-20T22:59:13.667Z","type":"join"}
{"nick":"mylesborins","reason":"Ping timeout: 240 seconds","date":"2018-01-20T23:02:57.840Z","type":"quit"}
{"nick":"mylesborins","date":"2018-01-20T23:06:10.882Z","type":"join"}
{"nick":"AtumT_","reason":"Ping timeout: 264 seconds","date":"2018-01-20T23:09:57.352Z","type":"quit"}
{"nick":"AtumT","date":"2018-01-20T23:16:06.752Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-01-20T23:24:39.484Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-01-20T23:30:13.783Z","type":"join"}
{"nick":"cloudshu","date":"2018-01-20T23:31:29.490Z","type":"join"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-01-20T23:49:05.500Z","type":"quit"}
