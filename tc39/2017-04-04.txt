{"nick":"piscisaureus","message":"seems to work","date":"2017-04-04T17:21:13.920Z","type":"message"}
{"nick":"piscisaureus","reason":"Remote host closed the connection","date":"2017-04-04T17:29:37.465Z","type":"quit"}
{"nick":"leobalter","message":"littledan: the summary helps a lot to navigate through the topics","date":"2017-04-04T17:41:51.784Z","type":"message"}
{"nick":"leobalter","message":"thank you!","date":"2017-04-04T17:41:54.878Z","type":"message"}
{"nick":"littledan","message":"thanks","date":"2017-04-04T17:42:07.597Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-04T18:43:59.697Z","type":"quit"}
{"nick":"TehShrike","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-04-04T18:49:19.618Z","type":"quit"}
{"nick":"TehShrike","date":"2017-04-04T18:55:02.436Z","type":"join"}
{"nick":"gskachkov_","date":"2017-04-04T19:01:37.568Z","type":"join"}
{"nick":"bterlson","message":"what summary is this?","date":"2017-04-04T19:43:07.027Z","type":"message"}
{"nick":"bterlson","topic":"ECMA TC39 | https://github.com/tc39 | +v's are your friendly neighborhood delegates! | Logs: http://logs.libuv.org/tc39/latest","date":"2017-04-04T19:45:55.612Z","type":"topic"}
{"nick":"bterlson","message":"also wow that bot updates fast","date":"2017-04-04T19:47:42.309Z","type":"message"}
{"nick":"bterlson","message":"as in, instantly","date":"2017-04-04T19:47:53.001Z","type":"message"}
{"nick":"sebmck","date":"2017-04-04T19:51:26.147Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-04-04T20:28:51.579Z","type":"quit"}
{"nick":"bterlson","message":"I would love to make ALL steps in ECMA262 linkable. However, I need these step links to be stable across builds and modifications. One idea I'm toying with: each step gets a random slug that is then stored in a separate metadata file. Simple operations (straight add/remove) can automatically update the step map. More complex operations would require telling","date":"2017-04-04T20:46:16.844Z","type":"message"}
{"nick":"bterlson","message":"Ecmarkup where steps moved. Any thoughts on this approach?","date":"2017-04-04T20:46:17.032Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-04-04T20:48:45.356Z","type":"quit"}
{"nick":"TabAtkins","message":"bterlson: Bikeshed has a `source` operation for things that manipulate the source file itself. I've thought about having one option be to add IDs to various things. Then it's just there in your source, perfectly stable, and it's obvious when you need to re-run the tool.","date":"2017-04-04T20:50:50.693Z","type":"message"}
{"nick":"TabAtkins","message":"(Or just manually add an ID to a new step, whatever.)","date":"2017-04-04T20:50:59.861Z","type":"message"}
{"nick":"Fishrock123","date":"2017-04-04T20:51:10.253Z","type":"join"}
{"nick":"bterlson","message":"I don't want to clutter the source document since we're talking ~10k ids","date":"2017-04-04T20:51:47.070Z","type":"message"}
{"nick":"bterlson","message":"and it will get hard to read the plaintext document","date":"2017-04-04T20:51:56.107Z","type":"message"}
{"nick":"bterlson","message":"I went down this route first because I thought at very least we can have manual IDs for steps we know have in-bound references","date":"2017-04-04T20:52:23.699Z","type":"message"}
{"nick":"bterlson","message":"but the syntax I was coming up with wasn't so good (either some special markdownalike for it, else an anchor/span with an id)","date":"2017-04-04T20:52:42.388Z","type":"message"}
{"nick":"bterlson","message":"I agree it makes the updating logic substantially easier though, maybe that's the most important aspect","date":"2017-04-04T20:53:00.058Z","type":"message"}
{"nick":"tcare","date":"2017-04-04T20:53:54.312Z","type":"join"}
{"nick":"TabAtkins","message":"I think it is. Easy update logic means it's easy to reason about stabiity. And it's only a little clutter; easy enough to do something trivial like gensym some 4-character IDs or something (half a million possibilities!)","date":"2017-04-04T20:54:47.516Z","type":"message"}
{"nick":"TabAtkins","message":"That's just 8 extra chars to each dfn.","date":"2017-04-04T20:55:00.903Z","type":"message"}
{"nick":"cloudshu","message":"bterlson: how much bigger does that make the html file?","date":"2017-04-04T20:55:34.457Z","type":"message"}
{"nick":"cloudshu","message":"bterlson: the final document","date":"2017-04-04T20:55:40.602Z","type":"message"}
{"nick":"bterlson","message":"TabAtkins: it's not each dfn though, it's every step","date":"2017-04-04T20:55:46.570Z","type":"message"}
{"nick":"bterlson","message":"in every algorithm","date":"2017-04-04T20:55:51.818Z","type":"message"}
{"nick":"sebmck","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-04-04T20:56:04.980Z","type":"quit"}
{"nick":"TabAtkins","message":"Right, that's what I meant. Still. It's the equivalent of 1.5 extra words per step.","date":"2017-04-04T20:56:08.412Z","type":"message"}
{"nick":"cloudshu","message":"bterlson: can JS intercept # values in the URL?","date":"2017-04-04T20:56:29.888Z","type":"message"}
{"nick":"sebmck","date":"2017-04-04T20:56:33.590Z","type":"join"}
{"nick":"bterlson","message":"cloudshu: umm, 10k *, say, 8 bytes ~80kb","date":"2017-04-04T20:56:38.800Z","type":"message"}
{"nick":"bterlson","message":"or <0.1% increase in payload size","date":"2017-04-04T20:56:53.797Z","type":"message"}
{"nick":"bterlson","message":"JS can indeed","date":"2017-04-04T20:57:01.673Z","type":"message"}
{"nick":"cloudshu","message":"bterlson: is it possible to have JS that can interpret #alg-step-1 or whatever and jump to the right thing","date":"2017-04-04T20:57:07.987Z","type":"message"}
{"nick":"cloudshu","message":"bterlson: oh <0.1% who cares, uuids for everyone","date":"2017-04-04T20:57:14.443Z","type":"message"}
{"nick":"TabAtkins","message":"That's not stable, cloudshu","date":"2017-04-04T20:57:19.521Z","type":"message"}
{"nick":"bterlson","message":"yeah stability is key","date":"2017-04-04T20:57:34.108Z","type":"message"}
{"nick":"TabAtkins","message":"As in, if I link to #step-5, but the algo's been changed since then, it might be a different step.","date":"2017-04-04T20:57:35.214Z","type":"message"}
{"nick":"cloudshu","message":"ah yes, stability","date":"2017-04-04T20:57:48.108Z","type":"message"}
{"nick":"TabAtkins","message":"bterlson: Heck, at 10k you can use 3-char ids and have plenty of room to grow","date":"2017-04-04T20:58:53.696Z","type":"message"}
{"nick":"cloudshu","message":"there's still a limit to the kind of modifications that can be made to an algorithm and still maintain stability","date":"2017-04-04T20:58:56.803Z","type":"message"}
{"nick":"TabAtkins","message":"Just so long as your code can upgrade to 4-char automatically when necessary.","date":"2017-04-04T20:59:06.314Z","type":"message"}
{"nick":"TabAtkins","message":"cloudshu: That's when you change the ID, so the link goes away.","date":"2017-04-04T20:59:22.852Z","type":"message"}
{"nick":"cloudshu","message":"the side question is: how often do we edit algorithms in such a way that still maintains stability","date":"2017-04-04T20:59:52.227Z","type":"message"}
{"nick":"TabAtkins","message":"In my experience (in CSS), often.","date":"2017-04-04T21:00:10.531Z","type":"message"}
{"nick":"cloudshu","message":"i see","date":"2017-04-04T21:00:29.666Z","type":"message"}
{"nick":"sebmck","reason":"Ping timeout: 240 seconds","date":"2017-04-04T21:00:35.579Z","type":"quit"}
{"nick":"TehShrike","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-04-04T21:05:28.336Z","type":"quit"}
{"nick":"TehShrike","date":"2017-04-04T21:07:56.592Z","type":"join"}
{"nick":"bterlson","message":"steps might look like:","date":"2017-04-04T21:09:20.281Z","type":"message"}
{"nick":"bterlson","message":"https://www.irccloud.com/pastebin/xmVsQ0tE/i","date":"2017-04-04T21:09:30.096Z","type":"message"}
{"nick":"bterlson","message":"if the source document was updated","date":"2017-04-04T21:09:42.438Z","type":"message"}
{"nick":"TabAtkins","message":"Yeah.","date":"2017-04-04T21:10:05.002Z","type":"message"}
{"nick":"TabAtkins","message":"Also: Oooh, I should adopt that sorta syntax. Tho I think the usual method for adding classes/ids to Markdown constructs is to wrap them in {}","date":"2017-04-04T21:10:31.842Z","type":"message"}
{"nick":"TabAtkins","message":"Like, headings are `### heading ### {#foo}`","date":"2017-04-04T21:10:46.870Z","type":"message"}
{"nick":"bterlson","message":"{#step-xxx}?","date":"2017-04-04T21:10:52.478Z","type":"message"}
{"nick":"bterlson","message":"ok","date":"2017-04-04T21:10:54.103Z","type":"message"}
{"nick":"bterlson","message":"need to think about it","date":"2017-04-04T21:11:01.987Z","type":"message"}
{"nick":"TabAtkins","message":"If you go that way, I can add similar syntax support to Bikeshed, and work on the source command to match.","date":"2017-04-04T21:11:27.284Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-04T21:17:12.021Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2017-04-04T21:43:10.280Z","type":"join"}
{"nick":"bterlson","message":"is there an encoding scheme which packs into all printable utf-8 characters?","date":"2017-04-04T22:08:01.267Z","type":"message"}
{"nick":"TabAtkins","message":"Yeah, base-65536","date":"2017-04-04T22:11:41.122Z","type":"message"}
{"nick":"TabAtkins","message":"https://github.com/ferno/base65536","date":"2017-04-04T22:11:52.753Z","type":"message"}
{"nick":"TabAtkins","message":"It optimizes for visible characters (Twitter, text editors), not necessarily bytes, but it doesn't do terribly there.","date":"2017-04-04T22:12:29.889Z","type":"message"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2017-04-04T22:13:13.510Z","type":"quit"}
{"nick":"TabAtkins","message":"That way you could drop it down to a single character and do fine. ^_^","date":"2017-04-04T22:14:00.845Z","type":"message"}
{"nick":"TabAtkins","message":"(Or use ferno's base-32768 project, which is actually reasonably optimized for UTF-8, and very efficient in UTF-16.)","date":"2017-04-04T22:18:50.795Z","type":"message"}
{"nick":"tcare","message":"that's pretty awesome :)","date":"2017-04-04T22:23:25.407Z","type":"message"}
{"nick":"bterlson","message":"TabAtkins: so great, thanks :-D And yeah, I'm thinking two characters just for future proofings sake :-P Preserving alignment will be key.","date":"2017-04-04T22:42:52.810Z","type":"message"}
{"nick":"TabAtkins","message":"Ah, sure.","date":"2017-04-04T22:43:02.332Z","type":"message"}
{"nick":"bterlson","message":"which would you pick?","date":"2017-04-04T22:43:08.986Z","type":"message"}
{"nick":"bterlson","message":"65536 or 32768","date":"2017-04-04T22:43:15.190Z","type":"message"}
{"nick":"TabAtkins","message":"32768 seems reasonable. More likely to be installed fonts, better compression, almost no difference in string length (15b vs 16b per character)","date":"2017-04-04T22:43:47.507Z","type":"message"}
{"nick":"bterlson","message":"that's what I was thinking","date":"2017-04-04T22:44:02.796Z","type":"message"}
{"nick":"bterlson","message":"Domenic: thoughts about encoding step IDs directly into the source document (auto-generated by ecmarkup if not manually defined)?","date":"2017-04-04T22:45:52.796Z","type":"message"}
{"nick":"TabAtkins","message":"bterlson: Don't forget to record in the doc what the highest step # used so far is, so you don't reuse previously-used ones that were deleted (thus rendering old links confusing).","date":"2017-04-04T22:50:08.316Z","type":"message"}
{"nick":"TabAtkins","message":"Maybe just scanning all IDs and looking for the largest one fitting your pattern will work okay.","date":"2017-04-04T22:50:35.416Z","type":"message"}
{"nick":"TehShrike","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-04-04T22:58:46.066Z","type":"quit"}
{"nick":"bterlson","message":"Is teh shrike a reference to the hyperion cantos I wonder?","date":"2017-04-04T23:05:59.566Z","type":"message"}
{"nick":"bterlson","message":"TabAtkins: Maybe if I do base-32768 of length 3 I can just randomly generate and check for conflicts","date":"2017-04-04T23:06:44.578Z","type":"message"}
{"nick":"bterlson","message":"which would be quite unlikely if my birthday paradox calculations are correct","date":"2017-04-04T23:07:22.590Z","type":"message"}
{"nick":"TabAtkins","message":"At, uh, ~16 quadrillion possibilities, yeah, you're good.","date":"2017-04-04T23:07:37.612Z","type":"message"}
{"nick":"TabAtkins","message":"2^45 values, so 2^23 before birthday paradox starts mattering","date":"2017-04-04T23:07:56.109Z","type":"message"}
{"nick":"TabAtkins","message":"And a spec with 8 million steps in it would, uh, stress the browser even more than HTML/ES already do.","date":"2017-04-04T23:08:25.126Z","type":"message"}
{"nick":"TabAtkins","message":"Tho \"check for conflicts\" is approximately as expensive as \"look for highest value\".","date":"2017-04-04T23:11:17.053Z","type":"message"}
{"nick":"bterlson","message":"true","date":"2017-04-04T23:11:29.650Z","type":"message"}
{"nick":"bterlson","message":"but I can't look for highest value - need some metadata in the document","date":"2017-04-04T23:18:46.818Z","type":"message"}
{"nick":"bterlson","message":"maybe can just stuff it in the frontmatter","date":"2017-04-04T23:18:53.187Z","type":"message"}
{"nick":"TabAtkins","message":"You can look for highest value, then skip ahead a few, just in case the previously-highest few steps were deleted.","date":"2017-04-04T23:19:27.224Z","type":"message"}
{"nick":"TabAtkins","message":"Or, yeah, just track it in the frontmatter.","date":"2017-04-04T23:19:34.851Z","type":"message"}
{"nick":"bterlson","message":"I'm vaguely uncomfortable with the build touching the input file","date":"2017-04-04T23:26:51.223Z","type":"message"}
{"nick":"bterlson","message":"but maybe I just need to get over that","date":"2017-04-04T23:26:58.095Z","type":"message"}
{"nick":"TabAtkins","message":"It's so so much better than trying to maintain an implicit connection between steps and a separate file ^_^","date":"2017-04-04T23:29:28.355Z","type":"message"}
{"nick":"bterlson","message":"in some ways","date":"2017-04-04T23:30:52.338Z","type":"message"}
{"nick":"bterlson","message":"it's also much likelier to accidentally clobber something you wanted to keep","date":"2017-04-04T23:31:04.379Z","type":"message"}
{"nick":"bterlson","message":"especially in --watch mode where ctrl+s will trigger changes to the current file between 1 and 5 seconds later","date":"2017-04-04T23:31:32.707Z","type":"message"}
{"nick":"TabAtkins","message":"Oh wow, no, do *not* automatically do this on build.","date":"2017-04-04T23:34:59.701Z","type":"message"}
{"nick":"TabAtkins","message":"Modifying the source file is deffo a separate command.","date":"2017-04-04T23:35:10.225Z","type":"message"}
{"nick":"bterlson","message":"ok, getting more comfortable","date":"2017-04-04T23:36:34.104Z","type":"message"}
