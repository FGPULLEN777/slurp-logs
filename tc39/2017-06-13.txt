{"nick":"zsoc","reason":"Ping timeout: 240 seconds","date":"2017-06-13T00:16:57.806Z","type":"quit"}
{"nick":"zsoc","date":"2017-06-13T00:30:05.291Z","type":"join"}
{"nick":"zsoc","reason":"Ping timeout: 268 seconds","date":"2017-06-13T01:28:31.749Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2017-06-13T01:57:59.949Z","type":"join"}
{"nick":"zsoc","date":"2017-06-13T03:26:24.531Z","type":"join"}
{"nick":"gibson042","reason":"Quit: Leaving.","date":"2017-06-13T04:03:09.415Z","type":"quit"}
{"nick":"tobie","reason":"Ping timeout: 255 seconds","date":"2017-06-13T06:19:29.869Z","type":"quit"}
{"nick":"tobie","date":"2017-06-13T06:20:26.926Z","type":"join"}
{"nick":"gskachkov","date":"2017-06-13T06:39:23.857Z","type":"join"}
{"nick":"gskachkov","reason":"Read error: Connection reset by peer","date":"2017-06-13T08:44:14.949Z","type":"quit"}
{"nick":"gskachkov","date":"2017-06-13T08:46:15.582Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-06-13T10:25:11.405Z","type":"quit"}
{"nick":"mylesborins","date":"2017-06-13T10:25:41.957Z","type":"join"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-06-13T11:06:48.051Z","type":"quit"}
{"nick":"gskachkov","reason":"Read error: Connection reset by peer","date":"2017-06-13T12:09:16.344Z","type":"quit"}
{"nick":"gskachkov","date":"2017-06-13T12:09:34.986Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-06-13T12:19:36.253Z","type":"quit"}
{"nick":"gskachkov","date":"2017-06-13T12:29:32.768Z","type":"join"}
{"nick":"gskachkov","reason":"Client Quit","date":"2017-06-13T12:30:20.671Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-06-13T13:26:42.472Z","type":"join"}
{"nick":"Fishrock123","date":"2017-06-13T14:13:40.018Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-06-13T16:04:55.263Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-06-13T16:35:53.389Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-06-13T16:57:29.673Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-06-13T17:59:01.043Z","type":"join"}
{"nick":"Fishrock123","reason":"Ping timeout: 255 seconds","date":"2017-06-13T18:05:12.985Z","type":"quit"}
{"nick":"bterlson","message":"cloudshu: pong?","date":"2017-06-13T18:52:57.130Z","type":"message"}
{"nick":"cloudshu","message":"bterlson: was about the pr","date":"2017-06-13T19:00:06.696Z","type":"message"}
{"nick":"bterlson","message":"#930? I replied :)","date":"2017-06-13T19:00:58.839Z","type":"message"}
{"nick":"chicoxyzzy","date":"2017-06-13T19:15:32.884Z","type":"join"}
{"nick":"bterlson","message":"is there justification for \"Parse Node\" over \"parse node\"?","date":"2017-06-13T19:18:52.847Z","type":"message"}
{"nick":"bterlson","message":"is it really a proper noun?","date":"2017-06-13T19:18:58.276Z","type":"message"}
{"nick":"not-an-aardvark","date":"2017-06-13T19:19:05.426Z","type":"join"}
{"nick":"caitp","message":"(note that an implementation is having a bit of trouble with the current #930 proposal)","date":"2017-06-13T19:22:29.768Z","type":"message"}
{"nick":"caitp","message":"potential to leak cross-realm caches that might be a bit sad to fix","date":"2017-06-13T19:23:09.437Z","type":"message"}
{"nick":"bterlson","message":"caitp: boo","date":"2017-06-13T19:25:28.319Z","type":"message"}
{"nick":"bterlson","message":"littledan: re: #890 (Caching of template literals), this is needs consensus yeah?","date":"2017-06-13T19:25:53.129Z","type":"message"}
{"nick":"littledan","message":"yeah, in particular I'm not sure if it has reasonable implications for code caching, which could be good to discuss with other implementers","date":"2017-06-13T19:26:33.468Z","type":"message"}
{"nick":"littledan","message":"caitp implemented this in V8, but that was a particular question that came up, so it'd be nice to chat with others about it","date":"2017-06-13T19:27:00.984Z","type":"message"}
{"nick":"caitp","message":"I'm not sure if the caching issue can ever actually happen in chromium","date":"2017-06-13T19:27:46.783Z","type":"message"}
{"nick":"caitp","message":"never really heard back from daniel about that.","date":"2017-06-13T19:28:23.120Z","type":"message"}
{"nick":"sugendran","date":"2017-06-13T19:56:02.965Z","type":"join"}
{"nick":"sugendran","reason":"Client Quit","date":"2017-06-13T19:57:06.479Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-06-13T20:42:24.467Z","type":"join"}
{"nick":"cloudshu","message":"caitp: wait, an implementation is having trouble with my proposal to remove \"do\"?","date":"2017-06-13T21:42:04.725Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit:  ","date":"2017-06-13T22:12:39.477Z","type":"quit"}
{"nick":"jmdyck","date":"2017-06-13T22:19:23.836Z","type":"join"}
{"nick":"zsoc","reason":"Ping timeout: 246 seconds","date":"2017-06-13T23:04:10.513Z","type":"quit"}
{"nick":"bterlson","message":"Domenic: re: #933, upon further inspection I'm confused by (2)","date":"2017-06-13T23:04:18.694Z","type":"message"}
{"nick":"bterlson","message":"did you mean to transform between steps 2 and 3?","date":"2017-06-13T23:04:45.452Z","type":"message"}
{"nick":"Domenic","message":"bterlson: step 2 is using \"a promise resolved with\" which is basically Promise.resolve(value)","date":"2017-06-13T23:05:11.051Z","type":"message"}
{"nick":"bterlson","message":"it's the next part that confuses me","date":"2017-06-13T23:05:28.469Z","type":"message"}
{"nick":"bterlson","message":"upon fulfillment of this already resolved promise","date":"2017-06-13T23:05:34.770Z","type":"message"}
{"nick":"Domenic","message":"Promise.resolve(value).then(uponFulfillmentSteps, uponRejectionSteps)","date":"2017-06-13T23:05:52.852Z","type":"message"}
{"nick":"bterlson","message":"don't you need the \"Transforming\" helper for that?","date":"2017-06-13T23:06:20.583Z","type":"message"}
{"nick":"Domenic","message":"No, although I can see the confusion","date":"2017-06-13T23:06:29.728Z","type":"message"}
{"nick":"Domenic","message":"Transforming is used when you care about the return value","date":"2017-06-13T23:06:36.490Z","type":"message"}
{"nick":"Domenic","message":"Which turns out to be rare","date":"2017-06-13T23:06:38.746Z","type":"message"}
{"nick":"bterlson","message":"yeah, I see","date":"2017-06-13T23:09:53.049Z","type":"message"}
{"nick":"bterlson","message":"still concerned that it's confusing","date":"2017-06-13T23:10:13.564Z","type":"message"}
{"nick":"Domenic","message":"Transforming might not pull its own weight, or might need to be done differently","date":"2017-06-13T23:11:51.247Z","type":"message"}
{"nick":"bterlson","message":"I'm not necessarily arguing for transform","date":"2017-06-13T23:12:10.887Z","type":"message"}
{"nick":"Domenic","message":"Yeah I'm in general very open to suggestions, as I don't think the current crop we've developed for web specs is perfect; it has weird edges and I'd be happy to get suggestions for ironing them out. Even if it's just renaming.","date":"2017-06-13T23:12:51.500Z","type":"message"}
{"nick":"bterlson","message":"let me mull a bit","date":"2017-06-13T23:13:05.614Z","type":"message"}
{"nick":"bterlson","message":"I also have to re-consider some things Allen has said re: how juggling execution contexts and ECMASpeak \"scope\" works","date":"2017-06-13T23:13:25.764Z","type":"message"}
{"nick":"Domenic","message":"Oh interesting","date":"2017-06-13T23:13:34.000Z","type":"message"}
{"nick":"bterlson","message":"possible we need \"closing over\"","date":"2017-06-13T23:13:38.151Z","type":"message"}
{"nick":"cloudshu","message":"i would love for the spec to actually talk about scopes","date":"2017-06-13T23:18:46.888Z","type":"message"}
{"nick":"cloudshu","message":"in a static fashion, to make the static guarantees clearer","date":"2017-06-13T23:18:56.129Z","type":"message"}
{"nick":"gibson042","date":"2017-06-13T23:22:01.386Z","type":"join"}
{"nick":"caitp","message":"cloudshu: was referring to the template callsite caching change. issue # might have been wrong","date":"2017-06-13T23:30:34.945Z","type":"message"}
{"nick":"cloudshu","message":"caitp: ah yeah","date":"2017-06-13T23:31:49.341Z","type":"message"}
{"nick":"chicoxyzzy","reason":"Remote host closed the connection","date":"2017-06-13T23:39:14.000Z","type":"quit"}
{"nick":"bterlson","message":"What if we changed this: \"Return the result of performing BindingInitialization for _lhs_ passing _nextValue_ and *undefined* as the arguments.\"","date":"2017-06-13T23:45:04.865Z","type":"message"}
{"nick":"bterlson","message":"to:  \"Return BindingInitialization[Literal](_nextValue_, *undefined*).\"","date":"2017-06-13T23:45:12.182Z","type":"message"}
{"nick":"bterlson","message":"in specese: allow this invocation pattern for syntax-directed operations, dispense with \"the result of\"","date":"2017-06-13T23:47:21.937Z","type":"message"}
{"nick":"chicoxyz_","date":"2017-06-13T23:49:52.912Z","type":"join"}
{"nick":"Domenic","message":"+9001","date":"2017-06-13T23:54:47.334Z","type":"message"}
{"nick":"Domenic","message":"Well, not sure on the details","date":"2017-06-13T23:55:04.813Z","type":"message"}
{"nick":"Domenic","message":"Where did _lhs_ go?","date":"2017-06-13T23:55:09.473Z","type":"message"}
{"nick":"Domenic","message":"Also _lhs_.BindingInitialization(_nextValue_, *undefined*) seems reasonable","date":"2017-06-13T23:55:30.715Z","type":"message"}
{"nick":"Domenic","message":"From how you explained it to me that once","date":"2017-06-13T23:55:36.872Z","type":"message"}
{"nick":"bterlson","message":"err","date":"2017-06-13T23:56:58.889Z","type":"message"}
{"nick":"bterlson","message":"Literal should be _lhs_","date":"2017-06-13T23:57:03.261Z","type":"message"}
{"nick":"bterlson","message":"yeah that's another option","date":"2017-06-13T23:57:29.654Z","type":"message"}
