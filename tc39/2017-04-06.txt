{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-06T00:42:10.313Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-04-06T02:39:42.086Z","type":"quit"}
{"nick":"Domenic","message":"Wow this is not going to be a fun spec to edit anymore :(","date":"2017-04-06T03:16:32.459Z","type":"message"}
{"nick":"Domenic","message":"Or read the source of","date":"2017-04-06T03:16:39.750Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-06T03:30:46.553Z","type":"join"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2017-04-06T03:40:54.979Z","type":"quit"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-06T03:41:22.968Z","type":"quit"}
{"nick":"not-an-aardvark_","date":"2017-04-06T04:04:47.368Z","type":"join"}
{"nick":"not-an-aardvark","reason":"*.net *.split","date":"2017-04-06T04:10:46.262Z","type":"quit"}
{"nick":"TehShrike","reason":"*.net *.split","date":"2017-04-06T04:10:46.554Z","type":"quit"}
{"nick":"not-an-aardvark_","new_nick":"not-an-aardvark","date":"2017-04-06T04:10:54.538Z","type":"nick"}
{"nick":"ljharb","message":"what's the benefit of linking directly to a step, as opposed to an algorithm with a numbered step? is it just to protect against step reorderings?","date":"2017-04-06T04:42:05.780Z","type":"message"}
{"nick":"ljharb","message":"(since it wouldn't help with step removals, or many refactors)","date":"2017-04-06T04:42:20.596Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-06T05:04:05.954Z","type":"join"}
{"nick":"gskachkov_","reason":"Ping timeout: 240 seconds","date":"2017-04-06T05:08:27.694Z","type":"quit"}
{"nick":"Bakkot","message":"ljharb, did you see https://github.com/babel/babylon/issues/440 ?","date":"2017-04-06T05:28:50.820Z","type":"message"}
{"nick":"Bakkot","message":"(I don't know why I have in my head that you are a person who cares about sourcetype and node + ESM compatibility, but I do, so now you get to be pinged)","date":"2017-04-06T05:29:24.575Z","type":"message"}
{"nick":"Bakkot","message":"(plz ignore if you do not in fact care)","date":"2017-04-06T05:29:31.519Z","type":"message"}
{"nick":"ljharb","message":"lol will look shortly","date":"2017-04-06T05:29:49.135Z","type":"message"}
{"nick":"ljharb","message":"Bakkot: k commented","date":"2017-04-06T05:40:27.299Z","type":"message"}
{"nick":"Bakkot","message":"thanks!","date":"2017-04-06T05:40:50.758Z","type":"message"}
{"nick":"Bakkot","message":"I have not been keeping good track of the state of the various grammar proposals.","date":"2017-04-06T05:41:14.504Z","type":"message"}
{"nick":"ljharb","message":"unambiguous is a nice idea, i like it, but a number of folks were super against it","date":"2017-04-06T05:43:27.256Z","type":"message"}
{"nick":"ljharb","message":"and jdd really wants it to happen, but shipping it in lodash or eslint won't make it happen ¯\\_(ツ)_/¯","date":"2017-04-06T05:43:43.081Z","type":"message"}
{"nick":"cmatheson","message":"~/exit","date":"2017-04-06T05:47:15.232Z","type":"message"}
{"nick":"ljharb","message":"error: exit not found","date":"2017-04-06T05:49:09.218Z","type":"message"}
{"nick":"not-an-aardvark","message":"I think it was supposed to be ~/exit/, which is -1.","date":"2017-04-06T05:50:53.154Z","type":"message"}
{"nick":"ljharb","message":":-p","date":"2017-04-06T05:51:40.170Z","type":"message"}
{"nick":"dilijev","message":"What about per-algorithm unique?","date":"2017-04-06T06:02:41.672Z","type":"message"}
{"nick":"dilijev","message":"Still handles the ability to reorder steps in an algorithm. Moving the same step to another algorithm wouldn't be meaningful to have the same link. Reduces the need for large numbers.","date":"2017-04-06T06:03:24.000Z","type":"message"}
{"nick":"ljharb","message":"ooh, that seems much nicer","date":"2017-04-06T06:03:27.826Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-06T06:41:24.521Z","type":"join"}
{"nick":"tarjei","date":"2017-04-06T06:45:25.307Z","type":"join"}
{"nick":"tarjei","message":"Good morning. I'm just wondering if Set.size is a work accident of if  it was intended. Since arrays have .length it would have been great to follow that convention.","date":"2017-04-06T06:46:37.751Z","type":"message"}
{"nick":"ljharb","message":"tarjei: nope, it's intentional and they aren't the same thing","date":"2017-04-06T06:47:03.615Z","type":"message"}
{"nick":"ljharb","message":"tarjei: \"length\" would imply it's arraylike. which it isn't.","date":"2017-04-06T06:47:10.668Z","type":"message"}
{"nick":"tarjei","message":"I can see that, but at the same time you end up increasing the developer overhead since one has to go look up the property","date":"2017-04-06T06:48:19.624Z","type":"message"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-06T06:48:30.107Z","type":"quit"}
{"nick":"tarjei","message":"I just expected all collections to have a length.","date":"2017-04-06T06:48:43.692Z","type":"message"}
{"nick":"ljharb","message":"theres a ton of differences; you simply can't \"not know\" if you have an Array, Map, or Set.","date":"2017-04-06T06:49:05.821Z","type":"message"}
{"nick":"Bakkot","message":"Yes, it's a bit of a tradeoff, but I think it comes out overwhelmingly in favor of not looking arraylike.","date":"2017-04-06T06:49:09.513Z","type":"message"}
{"nick":"ljharb","message":"really the only thing that's universal between all 3 collections is that they're iterable","date":"2017-04-06T06:49:34.200Z","type":"message"}
{"nick":"tarjei","message":"Ok, you're the expert :P","date":"2017-04-06T06:49:46.064Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-06T06:50:03.077Z","type":"join"}
{"nick":"tarjei","message":"Thank you for taking the time to answering me.","date":"2017-04-06T06:50:12.535Z","type":"message"}
{"nick":"ljharb","message":"tarjei: np. fwiw, i think it would be nice to be able to take a generic collection - array, map, set, or \"other\" - and operate on it without knowing which kind it is. but that's not a goal of the current spec, and that'd be a monumental task i think.","date":"2017-04-06T06:51:12.053Z","type":"message"}
{"nick":"tarjei","message":"It is too late now :P","date":"2017-04-06T06:51:32.699Z","type":"message"}
{"nick":"tarjei","message":"Oh, and has anyone considered an operation for converting an array to a map? Something like:","date":"2017-04-06T06:51:58.054Z","type":"message"}
{"nick":"tarjei","message":"myArray.mapToMap(function(item, i) { return [item.id, item] })","date":"2017-04-06T06:51:58.202Z","type":"message"}
{"nick":"ljharb","message":"if you have an array of entries (like `[key, value]`) you can just pass it into `new Map()`","date":"2017-04-06T06:54:00.296Z","type":"message"}
{"nick":"ljharb","message":"ie, `new Map([[1, 2], [3, 4]])` gets you a map of 1 → 2, and 3 → 4","date":"2017-04-06T06:54:13.695Z","type":"message"}
{"nick":"tarjei","message":"duh! I didn't know!","date":"2017-04-06T06:54:35.137Z","type":"message"}
{"nick":"tarjei","message":"thanks","date":"2017-04-06T06:54:36.273Z","type":"message"}
{"nick":"tarjei","message":"You just made my day :)","date":"2017-04-06T06:54:56.420Z","type":"message"}
{"nick":"ljharb","message":"also `Object.entries()` will take an object and give you that array of entries.","date":"2017-04-06T06:55:09.672Z","type":"message"}
{"nick":"tarjei","message":"Yes, I've used that one a lot :P","date":"2017-04-06T06:56:02.258Z","type":"message"}
{"nick":"Bakkot","message":"There's actually an annoying subtlety here, which is that Maps consider +0 and '0' to be different keys","date":"2017-04-06T06:56:52.133Z","type":"message"}
{"nick":"Bakkot","message":"so (new Map(Object.entries(['a', 'b', 'c']))).get(0) will give you undefined","date":"2017-04-06T06:57:08.015Z","type":"message"}
{"nick":"Bakkot","message":"whereas (new Map(['a', 'b', 'c'].map((v, i) => [i, v]))).get(0) will give you 'a'","date":"2017-04-06T06:57:22.584Z","type":"message"}
{"nick":"tarjei","message":"wft. Thanks!","date":"2017-04-06T06:57:37.899Z","type":"message"}
{"nick":"ljharb","message":"well sure but you wouldn't pass an array into Object.entries in the first place; you'd use `new Map(...arr.entries())`","date":"2017-04-06T06:58:46.363Z","type":"message"}
{"nick":"ljharb","message":"Object.entries is for objects; arrays are special","date":"2017-04-06T06:58:52.875Z","type":"message"}
{"nick":"ljharb","message":"(conceptually)","date":"2017-04-06T06:58:59.176Z","type":"message"}
{"nick":"ljharb","message":"* oops, `new Map(arr.entries())`","date":"2017-04-06T06:59:18.627Z","type":"message"}
{"nick":"tarjei","message":";)","date":"2017-04-06T06:59:22.206Z","type":"message"}
{"nick":"ljharb","message":"but i suppose that'd still have the problem where `0` would be a string, not a number","date":"2017-04-06T06:59:26.663Z","type":"message"}
{"nick":"ljharb","message":"or hmm, maybe not, if the .entries() iterator provides integer indexes","date":"2017-04-06T06:59:45.586Z","type":"message"}
{"nick":"Bakkot","message":"ah, yes, right","date":"2017-04-06T07:00:01.952Z","type":"message"}
{"nick":"Bakkot","message":"and yes, it does","date":"2017-04-06T07:00:03.565Z","type":"message"}
{"nick":"Bakkot","message":"that is, it gives integer indexes","date":"2017-04-06T07:01:13.310Z","type":"message"}
{"nick":"ljharb","message":"sweet, that's what i'd expect","date":"2017-04-06T07:02:04.904Z","type":"message"}
{"nick":"Bakkot","message":".entries() also works better with holey arrays, looks like.","date":"2017-04-06T07:02:28.943Z","type":"message"}
{"nick":"Bakkot","message":"because .map skips holes.","date":"2017-04-06T07:02:39.102Z","type":"message"}
{"nick":"ljharb","message":"dense or bust","date":"2017-04-06T07:02:52.587Z","type":"message"}
{"nick":"Bakkot","message":"So! `new Map(ar.entries())` is definitely the thing to do to get the behavior you'd expect.","date":"2017-04-06T07:03:03.105Z","type":"message"}
{"nick":"Bakkot","message":"unless you expect the resulting map to not have keys for holes.","date":"2017-04-06T07:03:20.236Z","type":"message"}
{"nick":"Bakkot","message":"I don't know if anyone really has intuitions about the behavior of arrays with holes though.","date":"2017-04-06T07:03:38.768Z","type":"message"}
{"nick":"Bakkot","message":"for my part, my intuition about holey arrays that my arrays should not have holes.","date":"2017-04-06T07:04:21.167Z","type":"message"}
{"nick":"ljharb","message":"that is mine as well","date":"2017-04-06T07:20:31.368Z","type":"message"}
{"nick":"tarjei","message":"Again, thanks a lot for the tips. I also note that Map.length always is 0.","date":"2017-04-06T07:22:17.542Z","type":"message"}
{"nick":"tarjei","message":"According to https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map","date":"2017-04-06T07:22:41.041Z","type":"message"}
{"nick":"ljharb","message":"tarjei: Map.length is 0 because Map is a function that has 0 required arguments","date":"2017-04-06T07:23:11.913Z","type":"message"}
{"nick":"tarjei","message":"ah! But new Map().length is undefined","date":"2017-04-06T07:23:44.604Z","type":"message"}
{"nick":"tarjei","message":"My bad.","date":"2017-04-06T07:23:55.784Z","type":"message"}
{"nick":"ljharb","message":"correct","date":"2017-04-06T07:24:30.160Z","type":"message"}
{"nick":"dilijev","message":"another way to think about the difference between length and size is that length is an own property of an array, but size is a getter of Map and Set's prototypes","date":"2017-04-06T07:35:47.977Z","type":"message"}
{"nick":"ljharb","message":"array length is exotic tho, so it's a bit weird","date":"2017-04-06T07:36:24.748Z","type":"message"}
{"nick":"dilijev","message":"as a mental model, just another part of arrays being special","date":"2017-04-06T07:42:15.321Z","type":"message"}
{"nick":"dilijev","message":"for the spec and implementation, that's a bit more important","date":"2017-04-06T07:42:26.433Z","type":"message"}
{"nick":"dilijev","message":"imo","date":"2017-04-06T07:42:36.640Z","type":"message"}
{"nick":"dilijev","message":"unless i'm missing something important from a js perspective","date":"2017-04-06T07:45:34.557Z","type":"message"}
{"nick":"dilijev","message":"mental-model wise","date":"2017-04-06T07:45:40.609Z","type":"message"}
{"nick":"tcare","reason":"Quit: Connection closed for inactivity","date":"2017-04-06T10:10:04.157Z","type":"quit"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-04-06T10:18:52.279Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-04-06T10:26:08.325Z","type":"quit"}
{"nick":"mylesborins","date":"2017-04-06T10:26:38.772Z","type":"join"}
{"nick":"annevk","message":"I'm guessing most folks here are aware of the cancelable fetch thread. Since there's other interested consumers, there's a proposal floating around to make it more generic: https://github.com/whatwg/dom/pull/434. I pinged aklein already, but others might want to take a look too.","date":"2017-04-06T11:07:52.200Z","type":"message"}
{"nick":"jmdyck","date":"2017-04-06T11:33:13.984Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-06T11:52:02.819Z","type":"quit"}
{"nick":"tarjei","reason":"Quit: Leaving.","date":"2017-04-06T11:54:54.991Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-06T11:59:33.084Z","type":"join"}
{"nick":"sebmck","date":"2017-04-06T12:07:49.688Z","type":"join"}
{"nick":"bradleymeck","date":"2017-04-06T12:33:24.668Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2017-04-06T12:34:15.018Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-04-06T12:43:34.710Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-04-06T12:50:56.201Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-04-06T13:17:59.791Z","type":"join"}
{"nick":"jeffmo","reason":"Ping timeout: 255 seconds","date":"2017-04-06T14:11:38.281Z","type":"quit"}
{"nick":"jeffmo","date":"2017-04-06T14:13:00.775Z","type":"join"}
{"nick":"ErikCorry","reason":"Ping timeout: 255 seconds","date":"2017-04-06T14:17:02.267Z","type":"quit"}
{"nick":"Havvy","reason":"Remote host closed the connection","date":"2017-04-06T14:17:46.611Z","type":"quit"}
{"nick":"Havvy","date":"2017-04-06T14:18:18.106Z","type":"join"}
{"nick":"ErikCorry","date":"2017-04-06T14:19:19.752Z","type":"join"}
{"nick":"TabAtkins","message":"Domenic: All it means is that the algo steps will sprout a tiny `{#s-NN}`prefix after the step number.  Hardly something to make the spec \"unfun to edit\".","date":"2017-04-06T14:25:40.940Z","type":"message"}
{"nick":"Domenic","message":"I can only speak for myself, but that definitely would make it unfun for me","date":"2017-04-06T14:28:44.845Z","type":"message"}
{"nick":"Fishrock123","date":"2017-04-06T14:32:19.207Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-06T14:47:16.148Z","type":"quit"}
{"nick":"annevk","message":"When are these added?","date":"2017-04-06T14:56:16.001Z","type":"message"}
{"nick":"jmdyck","message":"is adding them to master going to cause conflicts for every pending PR?","date":"2017-04-06T15:08:40.818Z","type":"message"}
{"nick":"jmdyck","message":"maybe not every PR, but any PR with changes in or near an algorithm?","date":"2017-04-06T15:10:37.930Z","type":"message"}
{"nick":"jmdyck","reason":"Ping timeout: 268 seconds","date":"2017-04-06T15:23:37.998Z","type":"quit"}
{"nick":"jmdyck","date":"2017-04-06T15:26:04.784Z","type":"join"}
{"nick":"sebmck","reason":"Ping timeout: 246 seconds","date":"2017-04-06T16:10:16.838Z","type":"quit"}
{"nick":"not-an-aardvark","date":"2017-04-06T16:14:48.473Z","type":"join"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2017-04-06T16:18:16.476Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-04-06T16:22:25.526Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-04-06T16:22:31.780Z","type":"join"}
{"nick":"gskachkov_","date":"2017-04-06T16:44:13.703Z","type":"join"}
{"nick":"bradleymeck","date":"2017-04-06T16:48:01.700Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-06T16:54:12.002Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-06T17:07:32.613Z","type":"join"}
{"nick":"bterlson","message":"jmdyck: it'll be a pain, but I'm pretty good with resolving these kinds of conflicts by now","date":"2017-04-06T17:07:47.733Z","type":"message"}
{"nick":"bterlson","message":"Domenic: just to be clear are you thinking that the editing downsides outweigh the benefits of having every step linkable?","date":"2017-04-06T17:08:58.678Z","type":"message"}
{"nick":"bterlson","message":"or are you just wishing we had a better way","date":"2017-04-06T17:09:18.887Z","type":"message"}
{"nick":"gskachkov_","reason":"Client Quit","date":"2017-04-06T17:09:59.615Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-06T17:11:34.660Z","type":"join"}
{"nick":"bterlson","message":"annevk: is there a higher level write up of this? It smells like cancellation tokens with a different name but I haven't looked deeply yrt","date":"2017-04-06T17:11:45.461Z","type":"message"}
{"nick":"annevk","message":"bterlson: maybe in https://github.com/whatwg/fetch/issues/447","date":"2017-04-06T17:13:01.732Z","type":"message"}
{"nick":"annevk","message":"bterlson: no easy tl;dr though","date":"2017-04-06T17:13:14.139Z","type":"message"}
{"nick":"annevk","message":"bterlson: it kinda is like that","date":"2017-04-06T17:13:29.646Z","type":"message"}
{"nick":"annevk","message":"bterlson: not sure how different or if","date":"2017-04-06T17:13:48.505Z","type":"message"}
{"nick":"tcare","date":"2017-04-06T17:23:28.359Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-04-06T17:26:57.534Z","type":"quit"}
{"nick":"rbuckton","date":"2017-04-06T18:44:48.693Z","type":"join"}
{"nick":"sebmck","date":"2017-04-06T18:44:55.696Z","type":"join"}
{"nick":"rbuckton","reason":"Client Quit","date":"2017-04-06T18:45:27.342Z","type":"quit"}
{"nick":"rbuckton","date":"2017-04-06T18:50:37.751Z","type":"join"}
{"nick":"rbuckton","reason":"Client Quit","date":"2017-04-06T18:54:21.757Z","type":"quit"}
{"nick":"rbuckton","date":"2017-04-06T18:57:09.654Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-06T19:01:28.975Z","type":"quit"}
{"nick":"rbuckton","reason":"Client Quit","date":"2017-04-06T19:01:38.771Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-06T19:03:05.101Z","type":"join"}
{"nick":"ronbuckton","date":"2017-04-06T19:03:34.433Z","type":"join"}
{"nick":"bradleymeck","date":"2017-04-06T19:04:14.739Z","type":"join"}
{"nick":"ronbuckton","new_nick":"rbuckton","date":"2017-04-06T19:06:00.086Z","type":"nick"}
{"nick":"ronbuckton","date":"2017-04-06T19:07:17.848Z","type":"join"}
{"nick":"rbuckton","reason":"Ping timeout: 260 seconds","date":"2017-04-06T19:10:33.208Z","type":"quit"}
{"nick":"ronbuckton","new_nick":"rbuckton","date":"2017-04-06T19:10:43.167Z","type":"nick"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-06T19:11:49.028Z","type":"quit"}
{"nick":"ronbuckton","date":"2017-04-06T19:12:28.331Z","type":"join"}
{"nick":"ronbuckton","message":"bterlson brought https://github.com/whatwg/dom/pull/434 to my attention. It looks like WHATWG needs cancellation for asynchronous operations.","date":"2017-04-06T19:13:09.434Z","type":"message"}
{"nick":"annevk","message":"ronbuckton: indeed, posted that here a lil earlier today","date":"2017-04-06T19:14:33.081Z","type":"message"}
{"nick":"rbuckton","reason":"Ping timeout: 246 seconds","date":"2017-04-06T19:15:04.872Z","type":"quit"}
{"nick":"ronbuckton","new_nick":"rbuckton","date":"2017-04-06T19:15:14.197Z","type":"nick"}
{"nick":"gskachkov_","date":"2017-04-06T19:16:16.504Z","type":"join"}
{"nick":"annevk","message":"Thoughts welcome there and in private; we'll likely move somewhat quicker now after having waited for a long time","date":"2017-04-06T19:16:56.048Z","type":"message"}
{"nick":"ronbuckton","date":"2017-04-06T19:18:19.002Z","type":"join"}
{"nick":"ronbuckton","message":"A year ago I created the \"prex\" library to provide a number of asynchronous coordination primitives, partly as a means to illustrate possible future proposals for ECMA262. I wanted to bring up https://github.com/rbuckton/prex/blob/master/docs/cancellation.md as a possible topic (assuming my mobile hotspot stops dying on me repeatedly)","date":"2017-04-06T19:18:27.557Z","type":"message"}
{"nick":"rbuckton","reason":"Ping timeout: 260 seconds","date":"2017-04-06T19:19:49.301Z","type":"quit"}
{"nick":"ronbuckton","new_nick":"rbuckton","date":"2017-04-06T19:19:55.436Z","type":"nick"}
{"nick":"rbuckton2","date":"2017-04-06T19:20:40.237Z","type":"join"}
{"nick":"rbuckton2","message":"unfortunately it seems my hotspot is a lost cause","date":"2017-04-06T19:22:22.684Z","type":"message"}
{"nick":"rbuckton","reason":"Ping timeout: 268 seconds","date":"2017-04-06T19:24:44.036Z","type":"quit"}
{"nick":"ronbuckton","date":"2017-04-06T19:26:35.176Z","type":"join"}
{"nick":"ronbuckton","new_nick":"rbuckton","date":"2017-04-06T19:26:35.364Z","type":"nick"}
{"nick":"rbuckton_","date":"2017-04-06T19:28:53.290Z","type":"join"}
{"nick":"rbuckton2","reason":"Quit: Page closed","date":"2017-04-06T19:29:39.723Z","type":"quit"}
{"nick":"rbuckton","reason":"Ping timeout: 260 seconds","date":"2017-04-06T19:31:05.181Z","type":"quit"}
{"nick":"rbuckton_","message":"I'm going to give webchat a try, and hopefully my hotspot won't continue to freak out on me.","date":"2017-04-06T19:32:50.038Z","type":"message"}
{"nick":"bterlson","message":"rbuckton_: godspeed sir","date":"2017-04-06T19:34:23.904Z","type":"message"}
{"nick":"rbuckton_","message":" With regards to cancellation. I am concerned that the WHATWG implementation, while good for the web, may not translate well into other host environments like NodeJS.","date":"2017-04-06T19:34:55.037Z","type":"message"}
{"nick":"rbuckton_","new_nick":"rbuckton","date":"2017-04-06T19:34:59.946Z","type":"nick"}
{"nick":"bterlson","message":"bradleymeck: ^","date":"2017-04-06T19:35:14.720Z","type":"message"}
{"nick":"bradleymeck","action":"perks up","date":"2017-04-06T19:35:29.410Z","type":"action"}
{"nick":"sebmck","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2017-04-06T19:35:44.292Z","type":"quit"}
{"nick":"bradleymeck","message":"not up to date on what the WHATWG is doing","date":"2017-04-06T19:35:44.456Z","type":"message"}
{"nick":"rbuckton","message":"The current PR for WHATWG regarding cancellation introduces two new objects: CancellationController and CancellationSignal. My concern is that CancellationSignal inherits from the DOM EventTarget, which strongly ties the implementation to the DOM.","date":"2017-04-06T19:37:51.875Z","type":"message"}
{"nick":"rbuckton","message":"For comparison to the implementation in 'prex', CancellationController is similar to https://github.com/rbuckton/prex/blob/master/docs/cancellation.md#class-cancellationtokensource, while CancellationSignal is similar to https://github.com/rbuckton/prex/blob/master/docs/cancellation.md#class-cancellationtoken","date":"2017-04-06T19:38:48.520Z","type":"message"}
{"nick":"bradleymeck","message":"that certainly would be hard not just for that but I don't see the exact nature of how the CancellationSignal is passed down the chain","date":"2017-04-06T19:39:03.093Z","type":"message"}
{"nick":"sebmck","date":"2017-04-06T19:39:13.217Z","type":"join"}
{"nick":"bradleymeck","message":"i guess this doesn't propagate, it is just per invocation","date":"2017-04-06T19:40:03.946Z","type":"message"}
{"nick":"rbuckton","message":"A CancellationSignal (or CancellationToken) is explicitly handed off to each running asynchronous operation as an argument to the user-defined function.","date":"2017-04-06T19:40:06.542Z","type":"message"}
{"nick":"rbuckton","message":"You can pass the token on, or (with the 'prex' implementation) create a new source from an existing token to create an entire cancellation graph.","date":"2017-04-06T19:40:52.593Z","type":"message"}
{"nick":"bradleymeck","message":"so that seems fine","date":"2017-04-06T19:41:09.636Z","type":"message"}
{"nick":"bradleymeck","message":"probably wouldn't ship EventTarget","date":"2017-04-06T19:41:26.855Z","type":"message"}
{"nick":"bradleymeck","message":"EventHandler using null instead of undefined would be :shrug:","date":"2017-04-06T19:42:28.691Z","type":"message"}
{"nick":"bradleymeck","message":"mostly seems fine except EventTarget","date":"2017-04-06T19:42:35.344Z","type":"message"}
{"nick":"rbuckton","message":"In general, I would like to propose https://github.com/rbuckton/prex/blob/master/docs/cancellation.md as a starting point for a discussion on bringing Cancellation Tokens to ES.","date":"2017-04-06T19:42:39.919Z","type":"message"}
{"nick":"rbuckton","message":"My implementation/proposal is roughly the same as the one proposed to WHATWG, though it has a few more capabilities.","date":"2017-04-06T19:43:52.144Z","type":"message"}
{"nick":"bradleymeck","message":"Domenic was the champion for Promise cancellation, I think we went very far down the investigations","date":"2017-04-06T19:43:58.587Z","type":"message"}
{"nick":"bradleymeck","message":"more capabilities makes me worried","date":"2017-04-06T19:44:07.401Z","type":"message"}
{"nick":"sebmck","reason":"Ping timeout: 260 seconds","date":"2017-04-06T19:44:09.204Z","type":"quit"}
{"nick":"rbuckton","message":"I'm not talking about a significant difference, though. Mainly in the 'prex' implementation, you can \"close\" or \"dispose\" of the source/controller in such a way that it cannot be cancelled in the future.","date":"2017-04-06T19:45:36.317Z","type":"message"}
{"nick":"rbuckton","message":"This is somewhat similar to the design of CancellationTokenSource in the .NET Framework.","date":"2017-04-06T19:45:57.151Z","type":"message"}
{"nick":"rbuckton","message":"The 'prex' CancellationTokenSource also can create a cancellation graph through linked tokens, which is a fairly powerful feature when building UIs that depend on multiple asynchronous operations (such as cancelling fetch operations and animations when navigating away from a page in a single-page-application)","date":"2017-04-06T19:47:58.509Z","type":"message"}
{"nick":"rbuckton","message":"Other than that, the two approaches have the same goals. You have a single source (CancellationTokenSource/CancellationController) created by the caller whose role is to initiate a cancellation signal, and a sink (CancellationToken/CancellationSignal) whose role is to observe a cancellation signal.","date":"2017-04-06T19:49:50.079Z","type":"message"}
{"nick":"rbuckton","message":"Both the 'prex' implementation and the WHATWG proposal support the ability to \"unsubscribe\" from cancellation. The WHATWG approach would be to use `removeEventListener`, whereas with the 'prex' approach you can call `unregister`","date":"2017-04-06T19:51:53.968Z","type":"message"}
{"nick":"rbuckton","message":"Unfortunately, I have to run for a bit. I will be back on later to discuss further.","date":"2017-04-06T19:53:08.881Z","type":"message"}
{"nick":"bradleymeck","message":"i'm +1 for not using a string based argument, but I think this ball is more in WHATWG court than Node right now","date":"2017-04-06T19:53:24.267Z","type":"message"}
{"nick":"rbuckton","message":"True, but Promises were originally in WHATWG's court as well (nee. Futures), but it was definately worth TC39 adopting that proposal as part of the language.","date":"2017-04-06T19:54:29.807Z","type":"message"}
{"nick":"rbuckton","message":"I'll return in a bit.","date":"2017-04-06T19:54:37.000Z","type":"message"}
{"nick":"rbuckton","date":"2017-04-06T19:54:39.558Z","type":"quit"}
{"nick":"bradleymeck","message":"@bterlson to sum up, w/o the EventTarget interface and the EventHandler defaulting to `null` it doesn't look unreasonable","date":"2017-04-06T20:08:26.950Z","type":"message"}
{"nick":"rbuckton","date":"2017-04-06T20:08:57.304Z","type":"join"}
{"nick":"rbuckton","message":"I know cancellation was investigated by domenic and others, but I am unsure as to the current status of that effort. I seem to recall it was withdrawn, but if that's the case I'm not certain what the reasons were.","date":"2017-04-06T20:18:04.480Z","type":"message"}
{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-04-06T20:28:52.523Z","type":"quit"}
{"nick":"rbuckton","reason":"Disconnected by services","date":"2017-04-06T20:44:50.934Z","type":"quit"}
{"nick":"rbuckton","date":"2017-04-06T20:45:07.428Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-06T20:49:39.138Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-06T20:55:34.438Z","type":"join"}
{"nick":"bterlson","message":"rbuckton bradleymeck: it's dead, but its approach was also much less likely to succeed than this I think","date":"2017-04-06T21:10:49.288Z","type":"message"}
{"nick":"bterlson","message":"not because it was worse but just a harder row to hoe","date":"2017-04-06T21:10:57.875Z","type":"message"}
{"nick":"Bakkot","reason":"Quit: death","date":"2017-04-06T21:28:52.796Z","type":"quit"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-06T21:30:36.792Z","type":"quit"}
{"nick":"ronbuckton","date":"2017-04-06T21:55:13.649Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-04-06T21:58:16.006Z","type":"quit"}
{"nick":"rbuckton","reason":"Remote host closed the connection","date":"2017-04-06T21:59:59.548Z","type":"quit"}
{"nick":"ronbuckton","new_nick":"rbuckton","date":"2017-04-06T22:00:00.887Z","type":"nick"}
{"nick":"Bakkot","date":"2017-04-06T22:47:59.006Z","type":"join"}
{"nick":"Bakkot","reason":"Quit: death","date":"2017-04-06T22:55:42.894Z","type":"quit"}
{"nick":"Bakkot","date":"2017-04-06T23:00:54.434Z","type":"join"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2017-04-06T23:03:40.441Z","type":"quit"}
{"nick":"Bakkot","reason":"Quit: death","date":"2017-04-06T23:07:19.388Z","type":"quit"}
{"nick":"cloudshu","message":"bterlson: did you mean with(prejudice)","date":"2017-04-06T23:11:21.375Z","type":"message"}
{"nick":"bterlson","message":"cloudshu: lol","date":"2017-04-06T23:12:35.875Z","type":"message"}
{"nick":"bterlson","message":"cloudshu: damnit should have used my humor consultant","date":"2017-04-06T23:12:49.665Z","type":"message"}
{"nick":"bterlson","message":"too late now","date":"2017-04-06T23:12:51.707Z","type":"message"}
{"nick":"Bakkot","date":"2017-04-06T23:15:28.808Z","type":"join"}
{"nick":"Bakkot","reason":"Client Quit","date":"2017-04-06T23:17:28.195Z","type":"quit"}
