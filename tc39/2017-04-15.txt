{"nick":"not-an-aardvark","reason":"Quit: Connection closed for inactivity","date":"2017-04-15T01:18:54.102Z","type":"quit"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2017-04-15T04:56:24.538Z","type":"quit"}
{"nick":"littledan","message":"I don't really get any of these arguments","date":"2017-04-15T06:33:44.964Z","type":"message"}
{"nick":"littledan","message":"In programming it's always possible to implement things multiple ways","date":"2017-04-15T06:34:09.444Z","type":"message"}
{"nick":"littledan","message":"Ljharb, you could also ban literal this.#x","date":"2017-04-15T06:34:24.943Z","type":"message"}
{"nick":"littledan","message":"And force people to use #x where possible","date":"2017-04-15T06:34:39.138Z","type":"message"}
{"nick":"littledan","message":"I don't see the confusion with .call; could you elaborate on why that wouldn't​ be intuitive?","date":"2017-04-15T06:35:13.389Z","type":"message"}
{"nick":"littledan","message":"Bakkot: yes, the intention is that you would use #x almost all the time. This gives you an 'ergonomics sweetener' for upgrading to private state. What's the problem caused here?","date":"2017-04-15T06:37:10.831Z","type":"message"}
{"nick":"littledan","message":"Wycats was always a big champion of creating this sweetener","date":"2017-04-15T06:38:20.153Z","type":"message"}
{"nick":"wycats","message":"Yeah I am","date":"2017-04-15T06:42:48.561Z","type":"message"}
{"nick":"wycats","message":"And I think the style of using #foo almost all of the time will be highly plausible unless people successfully advocate against it ;)","date":"2017-04-15T06:43:38.656Z","type":"message"}
{"nick":"wycats","message":"Need to sleep though","date":"2017-04-15T06:43:50.903Z","type":"message"}
{"nick":"gskachkov_","date":"2017-04-15T07:00:33.901Z","type":"join"}
{"nick":"gskachkov_","reason":"Quit: gskachkov_","date":"2017-04-15T07:23:47.056Z","type":"quit"}
{"nick":"gskachkov_","date":"2017-04-15T07:24:52.878Z","type":"join"}
{"nick":"ljharb","message":"littledan: yes, my very light preference would be to require only `#x` or `this.#x`, but if we end up with both that'll be fine, it'll just be a lint rule to force one or the other","date":"2017-04-15T07:52:18.458Z","type":"message"}
{"nick":"littledan","message":"It would be very strange to ban this.#x in the language as 'this' is a perfectly fine expression","date":"2017-04-15T07:53:44.018Z","type":"message"}
{"nick":"ljharb","message":"oh totally","date":"2017-04-15T07:53:58.636Z","type":"message"}
{"nick":"ljharb","message":"i'm saying that from a style perspective, a codebase generally should only do a given thing a single way. so it's always nicer when the number of ways to do a thing are as close to 1 as possible, since it means one less lint rule to apply.","date":"2017-04-15T07:54:35.742Z","type":"message"}
{"nick":"ljharb","message":"outside of casual chatting tho, i'm not planning on pushing against #x at all. this came up because the FAQ on the private fields repo lacks a section on the shorthand, and someone pointed out that the shorthand is the only reason there's an ASI hazard requiring `this.#x`","date":"2017-04-15T07:55:45.156Z","type":"message"}
{"nick":"ljharb","message":"overall i think private fields, as-is, is a great feature and would rather have it (and simply implement a linting rule to enforce a single style) than risk not having it based on arguing \"shorthand or not\" ¯\\_(ツ)_/¯","date":"2017-04-15T07:56:36.477Z","type":"message"}
