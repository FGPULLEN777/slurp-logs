{"nick":"caridy","reason":"Read error: Connection reset by peer","date":"2017-07-14T00:25:04.613Z","type":"quit"}
{"nick":"caridy_","date":"2017-07-14T00:25:10.338Z","type":"join"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2017-07-14T00:53:29.718Z","type":"quit"}
{"nick":"jmdyck","reason":"Quit: Leaving.","date":"2017-07-14T04:35:39.697Z","type":"quit"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-07-14T04:52:46.622Z","type":"quit"}
{"nick":"afrael_","date":"2017-07-14T06:13:07.445Z","type":"join"}
{"nick":"gskachkov","date":"2017-07-14T08:22:15.006Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-07-14T09:12:34.496Z","type":"quit"}
{"nick":"gskachkov","date":"2017-07-14T09:13:07.032Z","type":"join"}
{"nick":"gskachkov","reason":"Client Quit","date":"2017-07-14T09:13:10.713Z","type":"quit"}
{"nick":"gskachkov","date":"2017-07-14T10:19:28.508Z","type":"join"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-07-14T10:25:09.575Z","type":"quit"}
{"nick":"mylesborins","date":"2017-07-14T10:25:40.139Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-07-14T10:32:45.479Z","type":"quit"}
{"nick":"gskachkov","date":"2017-07-14T10:34:41.838Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-07-14T11:08:17.297Z","type":"quit"}
{"nick":"gskachkov","date":"2017-07-14T11:09:03.455Z","type":"join"}
{"nick":"gskachkov","reason":"Client Quit","date":"2017-07-14T11:11:16.347Z","type":"quit"}
{"nick":"gskachkov","date":"2017-07-14T11:11:54.952Z","type":"join"}
{"nick":"gskachkov","reason":"Client Quit","date":"2017-07-14T11:13:46.006Z","type":"quit"}
{"nick":"gskachkov","date":"2017-07-14T11:17:01.815Z","type":"join"}
{"nick":"gskachkov","reason":"Client Quit","date":"2017-07-14T11:18:35.209Z","type":"quit"}
{"nick":"gskachkov","date":"2017-07-14T11:20:50.861Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-07-14T11:27:43.317Z","type":"quit"}
{"nick":"gskachkov","date":"2017-07-14T11:34:25.463Z","type":"join"}
{"nick":"gskachkov","reason":"Client Quit","date":"2017-07-14T11:36:31.902Z","type":"quit"}
{"nick":"gskachkov","date":"2017-07-14T11:36:57.611Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-07-14T11:53:16.844Z","type":"quit"}
{"nick":"jmdyck","date":"2017-07-14T11:55:45.771Z","type":"join"}
{"nick":"gskachkov","date":"2017-07-14T11:56:42.514Z","type":"join"}
{"nick":"gskachkov","reason":"Client Quit","date":"2017-07-14T11:59:45.680Z","type":"quit"}
{"nick":"gskachkov","date":"2017-07-14T12:11:44.412Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-07-14T14:27:35.249Z","type":"quit"}
{"nick":"gskachkov","date":"2017-07-14T14:28:12.680Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-07-14T14:42:34.864Z","type":"quit"}
{"nick":"AtumT","date":"2017-07-14T14:46:09.694Z","type":"join"}
{"nick":"caridy_","reason":"Remote host closed the connection","date":"2017-07-14T14:57:19.122Z","type":"quit"}
{"nick":"caridy","date":"2017-07-14T14:58:11.276Z","type":"join"}
{"nick":"momo","date":"2017-07-14T15:24:12.039Z","type":"join"}
{"nick":"kdex","date":"2017-07-14T15:35:32.629Z","type":"join"}
{"nick":"kdex","reason":"Quit: Konversation terminated!","date":"2017-07-14T16:00:06.256Z","type":"quit"}
{"nick":"gskachkov","date":"2017-07-14T16:01:37.390Z","type":"join"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-07-14T16:33:20.320Z","type":"quit"}
{"nick":"gskachkov","date":"2017-07-14T16:36:21.203Z","type":"join"}
{"nick":"momo","reason":"Quit: Page closed","date":"2017-07-14T16:40:03.265Z","type":"quit"}
{"nick":"gskachkov","reason":"Quit: gskachkov","date":"2017-07-14T16:42:17.281Z","type":"quit"}
{"nick":"AtumT_","date":"2017-07-14T18:10:21.957Z","type":"join"}
{"nick":"AtumT","reason":"Ping timeout: 240 seconds","date":"2017-07-14T18:13:05.489Z","type":"quit"}
{"nick":"AtumT","date":"2017-07-14T18:24:09.965Z","type":"join"}
{"nick":"AtumT_","reason":"Ping timeout: 255 seconds","date":"2017-07-14T18:24:58.931Z","type":"quit"}
{"nick":"duaneb","date":"2017-07-14T18:46:18.924Z","type":"join"}
{"nick":"duaneb","message":"o/ hey guys","date":"2017-07-14T18:46:25.037Z","type":"message"}
{"nick":"duaneb","message":"I'm looking at a specific draft: https://github.com/tc39/proposal-class-fields","date":"2017-07-14T18:46:39.819Z","type":"message"}
{"nick":"duaneb","message":"I'm trying to get a pulse on how much of that is likely to change","date":"2017-07-14T18:46:51.865Z","type":"message"}
{"nick":"duaneb","message":"where can i see the discussion on said draft?","date":"2017-07-14T18:46:58.216Z","type":"message"}
{"nick":"duaneb","message":"I've found this but it doesn't appear at all recent: https://esdiscuss.org/topic/define-static-properties-and-prototype-properties-with-the-class-syntax","date":"2017-07-14T18:49:29.370Z","type":"message"}
{"nick":"duaneb","message":"also this: https://esdiscuss.org/topic/proposal-for-a-static-constructor-and-static-member-variables","date":"2017-07-14T18:50:07.001Z","type":"message"}
{"nick":"afrael_","reason":"Remote host closed the connection","date":"2017-07-14T19:00:04.482Z","type":"quit"}
{"nick":"afrael_","date":"2017-07-14T19:00:39.522Z","type":"join"}
{"nick":"ljharb","message":"duaneb: in the general case, it's all subject to change until stage 4; changes in stage 3 tend to only be for web compat, or implementation difficulty; but changes in stage 2 can be more varied.","date":"2017-07-14T19:05:27.787Z","type":"message"}
{"nick":"afrael_","reason":"Ping timeout: 248 seconds","date":"2017-07-14T19:05:37.454Z","type":"quit"}
{"nick":"Bakkot","message":"that said, this particular feature is going for stage 3 in about two weeks, and I don't personally expect any (further) normative changes before then. It may or may not get stage 3, but if it does, as I think it probably will, then as @ljharb says it's unlikely to change much after that. but it still might if the need arises, especially in details.","date":"2017-07-14T19:08:45.527Z","type":"message"}
{"nick":"Fishrock123","date":"2017-07-14T20:28:08.113Z","type":"join"}
{"nick":"duaneb","message":"ljharb, Bakkot, thank you :)","date":"2017-07-14T20:35:00.265Z","type":"message"}
{"nick":"duaneb","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-07-14T20:35:07.137Z","type":"quit"}
{"nick":"aklein","message":"bug of the day: what should this print? \"for (let a = false, b = () => a; !a; true) { a = true; print(b()); }\"","date":"2017-07-14T21:08:45.401Z","type":"message"}
{"nick":"aklein","message":"(really the followup is more interesting: what does it print in actual implementations?)","date":"2017-07-14T21:09:22.776Z","type":"message"}
{"nick":"ljharb","message":"hm","date":"2017-07-14T21:10:08.443Z","type":"message"}
{"nick":"ljharb","message":"i would assume that either it never enters the block; or that it prints true forever","date":"2017-07-14T21:10:25.936Z","type":"message"}
{"nick":"bterlson","message":"aklein: is the confusion around how the a captured by b is an outer a?","date":"2017-07-14T21:11:25.739Z","type":"message"}
{"nick":"aklein","message":"bterlson: yup","date":"2017-07-14T21:28:00.488Z","type":"message"}
{"nick":"aklein","message":"but per spec there is no outer a","date":"2017-07-14T21:28:04.959Z","type":"message"}
{"nick":"aklein","message":"eshost output:","date":"2017-07-14T21:28:22.449Z","type":"message"}
{"nick":"aklein","message":"#### v8","date":"2017-07-14T21:28:27.767Z","type":"message"}
{"nick":"aklein","message":"false","date":"2017-07-14T21:28:27.767Z","type":"message"}
{"nick":"aklein","message":"#### chakra","date":"2017-07-14T21:28:27.767Z","type":"message"}
{"nick":"aklein","message":"false","date":"2017-07-14T21:28:27.817Z","type":"message"}
{"nick":"aklein","message":"#### jsc","date":"2017-07-14T21:28:27.817Z","type":"message"}
{"nick":"aklein","message":"true","date":"2017-07-14T21:28:27.945Z","type":"message"}
{"nick":"aklein","message":"#### spidermonkey","date":"2017-07-14T21:28:28.000Z","type":"message"}
{"nick":"aklein","message":"false","date":"2017-07-14T21:28:28.934Z","type":"message"}
{"nick":"aklein","message":"jsc is the only one to get this right","date":"2017-07-14T21:29:07.402Z","type":"message"}
{"nick":"aklein","message":"makes me wonder if chakra and spidermonkey are using the same desugaring strategy as v8","date":"2017-07-14T21:29:24.851Z","type":"message"}
{"nick":"bterlson","message":"aklein: I think jsc is the only one to get this wrong?","date":"2017-07-14T21:32:06.422Z","type":"message"}
{"nick":"aklein","message":"bterlson: interesting, why do you think it's wrong?","date":"2017-07-14T21:32:26.725Z","type":"message"}
{"nick":"bterlson","message":"a is bound once before evaluating the loop head","date":"2017-07-14T21:33:09.436Z","type":"message"}
{"nick":"bterlson","message":"and then rebound at the start of each iteration in a new lexical environment","date":"2017-07-14T21:33:20.099Z","type":"message"}
{"nick":"bterlson","message":"so the a = true assignment doesn't impact the binding captured by b","date":"2017-07-14T21:34:17.728Z","type":"message"}
{"nick":"aklein","message":"ah I see this now","date":"2017-07-14T21:35:18.868Z","type":"message"}
{"nick":"gskachkov","date":"2017-07-14T21:36:16.517Z","type":"join"}
{"nick":"aklein","message":"the factoring is different from the ForIn/Of case, leading me to confusion","date":"2017-07-14T21:36:47.971Z","type":"message"}
{"nick":"aklein","message":"so that was a Friday afternoon question in more ways than one","date":"2017-07-14T21:42:24.798Z","type":"message"}
{"nick":"bterlson","message":"aklein: :-D","date":"2017-07-14T21:47:03.999Z","type":"message"}
{"nick":"bterlson","message":"with the best outcome: no changes needed ;)","date":"2017-07-14T21:47:18.933Z","type":"message"}
{"nick":"bterlson","message":"lol benedikt tweeting about the perf optimization I requested","date":"2017-07-14T21:48:04.219Z","type":"message"}
{"nick":"bterlson","message":"now over an order of magnitude faster than Chakra at set iteration I think","date":"2017-07-14T21:48:35.692Z","type":"message"}
{"nick":"bterlson","message":"very cool","date":"2017-07-14T21:48:38.003Z","type":"message"}
{"nick":"aklein","message":"heh","date":"2017-07-14T21:55:57.022Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-07-14T22:15:03.486Z","type":"quit"}
{"nick":"Bakkot","message":"ljharb: any interest in writing a polyfill for https://michaelficarra.github.io/Symbol-description-proposal/ ?","date":"2017-07-14T22:21:23.508Z","type":"message"}
{"nick":"Bakkot","message":"I haven't done one before or I'd do it myself. Still will if no one else wants to.","date":"2017-07-14T22:21:35.939Z","type":"message"}
{"nick":"Bakkot","message":"I have an implementation in v8, which somewhat ironically was probably less less work than the polyfill would be.","date":"2017-07-14T22:21:59.191Z","type":"message"}
{"nick":"Bakkot","message":"(Note that it's actually not totally polyfillable as it stands, since there's no way to distinguish between `x = Symbol()` and `y = Symbol('')`.)","date":"2017-07-14T22:22:37.330Z","type":"message"}
{"nick":"ljharb","message":"sure there is, i'd just have to overwrite `Symbol` itself :-p","date":"2017-07-14T22:23:20.154Z","type":"message"}
{"nick":"ljharb","message":"so sure, i can add that to my list","date":"2017-07-14T22:23:27.205Z","type":"message"}
{"nick":"Fishrock123","date":"2017-07-14T22:35:57.557Z","type":"join"}
{"nick":"caridy","reason":"Remote host closed the connection","date":"2017-07-14T23:00:18.711Z","type":"quit"}
{"nick":"caridy","date":"2017-07-14T23:00:50.578Z","type":"join"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2017-07-14T23:49:14.453Z","type":"quit"}
{"nick":"Fishrock123","date":"2017-07-14T23:55:01.157Z","type":"join"}
{"nick":"Fishrock123","reason":"Client Quit","date":"2017-07-14T23:56:51.690Z","type":"quit"}
