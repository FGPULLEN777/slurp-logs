{"nick":"vtali","message":"yeah how is it? :)","date":"2013-04-18T00:19:10.812Z","type":"message"}
{"nick":"erobit","date":"2013-04-18T01:09:43.414Z","type":"join"}
{"nick":"vtali","reason":"Remote host closed the connection","date":"2013-04-18T01:14:59.175Z","type":"quit"}
{"nick":"dennisma_","date":"2013-04-18T01:38:49.238Z","type":"join"}
{"nick":"dennismartensson","reason":"Read error: Connection reset by peer","date":"2013-04-18T01:38:49.509Z","type":"quit"}
{"nick":"dennismartensson","date":"2013-04-18T01:43:06.269Z","type":"join"}
{"nick":"dennisma_","reason":"Read error: Connection reset by peer","date":"2013-04-18T01:43:06.495Z","type":"quit"}
{"nick":"vtali","date":"2013-04-18T01:48:28.517Z","type":"join"}
{"nick":"k1i","date":"2013-04-18T01:49:13.409Z","type":"join"}
{"nick":"k1i","message":"owenb: you on?","date":"2013-04-18T01:50:23.944Z","type":"message"}
{"nick":"vtali","reason":"Ping timeout: 256 seconds","date":"2013-04-18T01:56:58.486Z","type":"quit"}
{"nick":"k1i_","date":"2013-04-18T02:05:40.818Z","type":"join"}
{"nick":"k1i","reason":"Ping timeout: 255 seconds","date":"2013-04-18T02:09:02.417Z","type":"quit"}
{"nick":"k1i_","new_nick":"k1i","date":"2013-04-18T02:09:02.753Z","type":"nick"}
{"nick":"vtali","date":"2013-04-18T02:23:25.423Z","type":"join"}
{"nick":"vtali","reason":"Ping timeout: 245 seconds","date":"2013-04-18T02:27:38.492Z","type":"quit"}
{"nick":"k1i","reason":"Read error: Connection reset by peer","date":"2013-04-18T03:15:29.163Z","type":"quit"}
{"nick":"k1i","date":"2013-04-18T03:15:53.425Z","type":"join"}
{"nick":"liorix","date":"2013-04-18T03:50:22.395Z","type":"join"}
{"nick":"vtali","date":"2013-04-18T03:54:30.275Z","type":"join"}
{"nick":"vtali","reason":"Ping timeout: 245 seconds","date":"2013-04-18T03:58:53.388Z","type":"quit"}
{"nick":"majek","reason":"Ping timeout: 276 seconds","date":"2013-04-18T04:00:12.473Z","type":"quit"}
{"nick":"oal","reason":"Ping timeout: 256 seconds","date":"2013-04-18T04:00:30.566Z","type":"quit"}
{"nick":"owenb","reason":"Ping timeout: 264 seconds","date":"2013-04-18T04:00:48.677Z","type":"quit"}
{"nick":"ArxPoetica","reason":"Quit: Leaving.","date":"2013-04-18T04:20:53.015Z","type":"quit"}
{"nick":"liorix","reason":"Remote host closed the connection","date":"2013-04-18T04:25:25.009Z","type":"quit"}
{"nick":"ArxPoetica","date":"2013-04-18T04:45:25.384Z","type":"join"}
{"nick":"ArxPoetica","reason":"Client Quit","date":"2013-04-18T04:45:35.416Z","type":"quit"}
{"nick":"ArxPoetica","date":"2013-04-18T04:53:20.520Z","type":"join"}
{"nick":"vtali","date":"2013-04-18T04:55:00.134Z","type":"join"}
{"nick":"ArxPoetica","reason":"Quit: Leaving.","date":"2013-04-18T04:58:30.051Z","type":"quit"}
{"nick":"vtali","reason":"Ping timeout: 264 seconds","date":"2013-04-18T05:00:06.096Z","type":"quit"}
{"nick":"liorix","date":"2013-04-18T05:10:13.314Z","type":"join"}
{"nick":"lluad","reason":"Quit: lluad","date":"2013-04-18T05:11:50.861Z","type":"quit"}
{"nick":"mtsr","date":"2013-04-18T05:15:05.682Z","type":"join"}
{"nick":"vtali","date":"2013-04-18T05:25:58.423Z","type":"join"}
{"nick":"mtsr","reason":"Ping timeout: 276 seconds","date":"2013-04-18T05:26:00.417Z","type":"quit"}
{"nick":"vtali","reason":"Ping timeout: 245 seconds","date":"2013-04-18T05:30:33.368Z","type":"quit"}
{"nick":"majek","date":"2013-04-18T05:59:24.806Z","type":"join"}
{"nick":"owenb","date":"2013-04-18T06:00:14.995Z","type":"join"}
{"nick":"oal","date":"2013-04-18T06:00:38.986Z","type":"join"}
{"nick":"vtali","date":"2013-04-18T06:26:28.318Z","type":"join"}
{"nick":"vtali","reason":"Ping timeout: 245 seconds","date":"2013-04-18T06:30:33.520Z","type":"quit"}
{"nick":"mtsr","date":"2013-04-18T06:45:12.114Z","type":"join"}
{"nick":"vtali","date":"2013-04-18T06:57:03.342Z","type":"join"}
{"nick":"vtali","reason":"Ping timeout: 245 seconds","date":"2013-04-18T07:01:23.308Z","type":"quit"}
{"nick":"liorix","reason":"Remote host closed the connection","date":"2013-04-18T07:11:33.478Z","type":"quit"}
{"nick":"liorix","date":"2013-04-18T07:12:07.649Z","type":"join"}
{"nick":"liorix","reason":"Ping timeout: 248 seconds","date":"2013-04-18T07:16:21.600Z","type":"quit"}
{"nick":"erobit","reason":"Quit: Leaving.","date":"2013-04-18T07:21:35.412Z","type":"quit"}
{"nick":"liorix","date":"2013-04-18T07:43:27.475Z","type":"join"}
{"nick":"liorix","reason":"Ping timeout: 255 seconds","date":"2013-04-18T07:51:56.388Z","type":"quit"}
{"nick":"vtali","date":"2013-04-18T07:57:28.344Z","type":"join"}
{"nick":"vtali","reason":"Ping timeout: 245 seconds","date":"2013-04-18T08:01:48.338Z","type":"quit"}
{"nick":"k1i","reason":"Quit: k1i","date":"2013-04-18T08:43:42.546Z","type":"quit"}
{"nick":"dennisma_","date":"2013-04-18T08:47:59.311Z","type":"join"}
{"nick":"dennismartensson","reason":"Read error: Connection reset by peer","date":"2013-04-18T08:48:00.488Z","type":"quit"}
{"nick":"dennismartensson","date":"2013-04-18T08:49:59.599Z","type":"join"}
{"nick":"dennisma_","reason":"Read error: Connection reset by peer","date":"2013-04-18T08:49:59.725Z","type":"quit"}
{"nick":"vtali","date":"2013-04-18T09:29:49.381Z","type":"join"}
{"nick":"vtali","reason":"Ping timeout: 245 seconds","date":"2013-04-18T09:33:53.399Z","type":"quit"}
{"nick":"vtali","date":"2013-04-18T10:31:14.286Z","type":"join"}
{"nick":"vtali","reason":"Ping timeout: 245 seconds","date":"2013-04-18T10:35:33.305Z","type":"quit"}
{"nick":"dennismartensson","reason":"Read error: Connection reset by peer","date":"2013-04-18T10:42:15.631Z","type":"quit"}
{"nick":"dennismartensson","date":"2013-04-18T10:42:48.640Z","type":"join"}
{"nick":"erobit","date":"2013-04-18T10:43:28.429Z","type":"join"}
{"nick":"vtali","date":"2013-04-18T11:15:12.411Z","type":"join"}
{"nick":"liorix","date":"2013-04-18T11:15:57.516Z","type":"join"}
{"nick":"liorix","reason":"Read error: Connection reset by peer","date":"2013-04-18T11:16:58.187Z","type":"quit"}
{"nick":"liorix","date":"2013-04-18T11:17:30.140Z","type":"join"}
{"nick":"vtali","reason":"Ping timeout: 245 seconds","date":"2013-04-18T11:19:44.166Z","type":"quit"}
{"nick":"liorix","reason":"Ping timeout: 264 seconds","date":"2013-04-18T11:58:54.103Z","type":"quit"}
{"nick":"liorix","date":"2013-04-18T12:06:38.800Z","type":"join"}
{"nick":"vtali","date":"2013-04-18T12:21:07.004Z","type":"join"}
{"nick":"vtali","reason":"Remote host closed the connection","date":"2013-04-18T12:23:03.207Z","type":"quit"}
{"nick":"vtali","date":"2013-04-18T12:24:18.516Z","type":"join"}
{"nick":"liorix","reason":"Remote host closed the connection","date":"2013-04-18T12:42:25.594Z","type":"quit"}
{"nick":"liorix","date":"2013-04-18T12:42:57.329Z","type":"join"}
{"nick":"liorix","reason":"Ping timeout: 264 seconds","date":"2013-04-18T12:47:55.274Z","type":"quit"}
{"nick":"ArxPoetica","date":"2013-04-18T12:49:04.461Z","type":"join"}
{"nick":"ArxPoetica1","date":"2013-04-18T12:51:28.391Z","type":"join"}
{"nick":"ArxPoetica","reason":"Read error: Connection reset by peer","date":"2013-04-18T12:51:28.910Z","type":"quit"}
{"nick":"erobit","reason":"Quit: Leaving.","date":"2013-04-18T13:23:11.032Z","type":"quit"}
{"nick":"owenb","message":"hey vtali","date":"2013-04-18T13:25:35.495Z","type":"message"}
{"nick":"owenb","message":"and Arx","date":"2013-04-18T13:25:41.128Z","type":"message"}
{"nick":"vtali","message":"hi owenb, how was the talk","date":"2013-04-18T13:28:17.677Z","type":"message"}
{"nick":"owenb","message":"it's on Monday :)","date":"2013-04-18T13:40:01.180Z","type":"message"}
{"nick":"ArxPoetica1","message":"what talk you giving?","date":"2013-04-18T13:45:43.473Z","type":"message"}
{"nick":"ArxPoetica1","new_nick":"ArxPoetica","date":"2013-04-18T13:46:04.521Z","type":"nick"}
{"nick":"owenb","message":"oh the usual ;)  but lots of new stuff to talk about wrt socketstream 0.4","date":"2013-04-18T13:57:35.514Z","type":"message"}
{"nick":"ArxPoetica","message":"that's awesome","date":"2013-04-18T14:10:42.147Z","type":"message"}
{"nick":"ArxPoetica","message":"can't wait for beta ha","date":"2013-04-18T14:10:46.972Z","type":"message"}
{"nick":"ArxPoetica","message":"did you do an official alpha?","date":"2013-04-18T14:11:02.312Z","type":"message"}
{"nick":"owenb","message":"not yet","date":"2013-04-18T14:14:39.202Z","type":"message"}
{"nick":"owenb","message":"but very soon now","date":"2013-04-18T14:14:45.455Z","type":"message"}
{"nick":"owenb","message":"just to give you a heads up, i'll be finishing off the design of the 'realtime server' part of socketstream 0.4 this weekend","date":"2013-04-18T14:15:23.522Z","type":"message"}
{"nick":"owenb","message":"it will be released as a separate module in time for monday","date":"2013-04-18T14:15:36.430Z","type":"message"}
{"nick":"owenb","message":"so people who just want that part of SS can use it without any of the other ideas","date":"2013-04-18T14:15:49.619Z","type":"message"}
{"nick":"owenb","message":"i'll then begin working on finishing off all the client asset building etc","date":"2013-04-18T14:16:12.730Z","type":"message"}
{"nick":"owenb","message":"when all the component parts are ready, that will be the first alpha of ss 0.4","date":"2013-04-18T14:16:37.452Z","type":"message"}
{"nick":"owenb","message":"the first realtime framework that will let you get started quickly, but also expand into your own custom tech stack in the future. it's going to be good :)","date":"2013-04-18T14:17:21.423Z","type":"message"}
{"nick":"vtali","message":"saweet!","date":"2013-04-18T14:41:01.998Z","type":"message"}
{"nick":"vtali","message":"looking forward to integrating it with angularjs :)","date":"2013-04-18T14:41:22.295Z","type":"message"}
{"nick":"owenb","message":"me too :) it's coming soon","date":"2013-04-18T14:59:07.032Z","type":"message"}
{"nick":"ArxPoetica1","date":"2013-04-18T15:43:21.109Z","type":"join"}
{"nick":"ArxPoetica","reason":"Ping timeout: 245 seconds","date":"2013-04-18T15:45:33.442Z","type":"quit"}
{"nick":"ArxPoetica1","message":"awesome","date":"2013-04-18T15:48:01.731Z","type":"message"}
{"nick":"mtsr","reason":"Read error: Operation timed out","date":"2013-04-18T15:48:02.066Z","type":"quit"}
{"nick":"erobit","date":"2013-04-18T15:52:55.310Z","type":"join"}
{"nick":"ArxPoetica1","new_nick":"ArxPoetica","date":"2013-04-18T16:06:31.049Z","type":"nick"}
{"nick":"lluad","date":"2013-04-18T16:16:50.891Z","type":"join"}
{"nick":"erobit","reason":"Ping timeout: 245 seconds","date":"2013-04-18T16:57:56.388Z","type":"quit"}
{"nick":"k1i","date":"2013-04-18T17:04:00.981Z","type":"join"}
{"nick":"k1i","message":"owenb: you here?","date":"2013-04-18T17:04:13.300Z","type":"message"}
{"nick":"sonofjack","reason":"Read error: Connection reset by peer","date":"2013-04-18T17:32:18.057Z","type":"quit"}
{"nick":"sonofjack","date":"2013-04-18T17:32:31.439Z","type":"join"}
{"nick":"sonofjack","reason":"Read error: Connection reset by peer","date":"2013-04-18T17:49:38.120Z","type":"quit"}
{"nick":"sonofjack","date":"2013-04-18T17:50:59.834Z","type":"join"}
{"nick":"zenocon","date":"2013-04-18T18:02:18.935Z","type":"join"}
{"nick":"zenocon","reason":"Read error: Connection reset by peer","date":"2013-04-18T18:04:15.342Z","type":"quit"}
{"nick":"k1i","reason":"Quit: k1i","date":"2013-04-18T18:20:59.704Z","type":"quit"}
{"nick":"k1i","date":"2013-04-18T18:22:22.884Z","type":"join"}
{"nick":"ArxPoetica","reason":"Quit: Leaving.","date":"2013-04-18T20:51:14.685Z","type":"quit"}
{"nick":"owenb","message":"hey k1i","date":"2013-04-18T21:22:28.896Z","type":"message"}
{"nick":"k1i","message":"dude","date":"2013-04-18T21:22:34.701Z","type":"message"}
{"nick":"k1i","message":"ok","date":"2013-04-18T21:22:39.509Z","type":"message"}
{"nick":"k1i","message":"so","date":"2013-04-18T21:22:40.323Z","type":"message"}
{"nick":"owenb","message":"sorry, i'm on irccloud so i guess it often shows me as here when i'm not","date":"2013-04-18T21:22:40.815Z","type":"message"}
{"nick":"k1i","message":"time to talk about this wohle situation","date":"2013-04-18T21:22:59.176Z","type":"message"}
{"nick":"k1i","message":"my model proxy library works really really well","date":"2013-04-18T21:23:05.177Z","type":"message"}
{"nick":"k1i","message":"there are a few problems I need help solving","date":"2013-04-18T21:23:10.050Z","type":"message"}
{"nick":"owenb","message":"ok","date":"2013-04-18T21:23:18.954Z","type":"message"}
{"nick":"k1i","message":"but instance methods and class methods properly proxy","date":"2013-04-18T21:23:22.663Z","type":"message"}
{"nick":"k1i","message":"let me upload this to a repo","date":"2013-04-18T21:23:25.421Z","type":"message"}
{"nick":"owenb","message":"cool ok","date":"2013-04-18T21:23:32.091Z","type":"message"}
{"nick":"k1i","message":"I had to modify something in realtime-service to serialize properly","date":"2013-04-18T21:23:34.303Z","type":"message"}
{"nick":"owenb","message":"sure","date":"2013-04-18T21:23:39.791Z","type":"message"}
{"nick":"k1i","message":"but, if you download this, I will show you the main idea and what's left","date":"2013-04-18T21:23:44.907Z","type":"message"}
{"nick":"owenb","message":"cool ok","date":"2013-04-18T21:23:51.527Z","type":"message"}
{"nick":"k1i","message":"forking now","date":"2013-04-18T21:24:17.767Z","type":"message"}
{"nick":"k1i","message":"https://github.com/korbin/socketstream-0.4","date":"2013-04-18T21:26:42.447Z","type":"message"}
{"nick":"k1i","message":"based on your initial recommendation, you can instantiate models like this","date":"2013-04-18T21:28:11.596Z","type":"message"}
{"nick":"k1i","message":"ss.model.get(\"book\", function(book) {","date":"2013-04-18T21:28:16.861Z","type":"message"}
{"nick":"k1i","message":"  book.find(1, function(err, model) {","date":"2013-04-18T21:28:17.436Z","type":"message"}
{"nick":"k1i","message":"    model.fancyColor();","date":"2013-04-18T21:28:18.686Z","type":"message"}
{"nick":"k1i","message":"    model.changeColor(\"green\", function(err, model) {","date":"2013-04-18T21:28:19.690Z","type":"message"}
{"nick":"k1i","message":"      console.log(model);","date":"2013-04-18T21:28:20.468Z","type":"message"}
{"nick":"k1i","message":"https://github.com/korbin/socketstream-0.4/blob/master/example_app/client/app/app.js","date":"2013-04-18T21:28:21.236Z","type":"message"}
{"nick":"k1i","message":"oh siht","date":"2013-04-18T21:28:57.571Z","type":"message"}
{"nick":"k1i","message":"I didnt git add, sec","date":"2013-04-18T21:28:59.836Z","type":"message"}
{"nick":"owenb","message":"np","date":"2013-04-18T21:29:23.158Z","type":"message"}
{"nick":"k1i","message":"https://github.com/korbin/socketstream-0.4/tree/master/mods/rts-model now contains","date":"2013-04-18T21:29:31.921Z","type":"message"}
{"nick":"k1i","message":"so, it does dynamic code generation to proxy off class/instance methods","date":"2013-04-18T21:31:20.761Z","type":"message"}
{"nick":"k1i","message":"it proxies so well that it actually creates the argument list on the clientside as well (for console purposes, etc.)","date":"2013-04-18T21:31:48.143Z","type":"message"}
{"nick":"k1i","message":"I dont think this DSL is too heavy: https://github.com/korbin/socketstream-0.4/blob/master/example_app/services/model/book.coffee","date":"2013-04-18T21:32:42.542Z","type":"message"}
{"nick":"k1i","message":"i wanted the actual model proxying framework to be really really clever","date":"2013-04-18T21:33:42.402Z","type":"message"}
{"nick":"owenb","message":"in your example, what does 'local' mean? server-side?","date":"2013-04-18T21:34:12.824Z","type":"message"}
{"nick":"k1i","message":"local means executable in a browser context","date":"2013-04-18T21:34:34.652Z","type":"message"}
{"nick":"k1i","message":"it's relative to the client","date":"2013-04-18T21:34:39.390Z","type":"message"}
{"nick":"owenb","message":"ah i see","date":"2013-04-18T21:34:41.735Z","type":"message"}
{"nick":"k1i","message":"client executable functions = local","date":"2013-04-18T21:34:43.916Z","type":"message"}
{"nick":"k1i","message":"remote = serverside","date":"2013-04-18T21:34:46.468Z","type":"message"}
{"nick":"k1i","message":"a serverside instance of the model could execute either","date":"2013-04-18T21:34:53.653Z","type":"message"}
{"nick":"owenb","message":"could be worth changing that to 'client' and 'server' to make it totally clear","date":"2013-04-18T21:34:57.335Z","type":"message"}
{"nick":"k1i","message":"seamlessly","date":"2013-04-18T21:34:57.763Z","type":"message"}
{"nick":"k1i","message":"yep","date":"2013-04-18T21:34:59.578Z","type":"message"}
{"nick":"k1i","message":"will do","date":"2013-04-18T21:35:01.320Z","type":"message"}
{"nick":"k1i","message":"the reason I didn't, though","date":"2013-04-18T21:35:14.519Z","type":"message"}
{"nick":"k1i","message":"is because \"local\" just means it is executable within the browser (very limited scope)","date":"2013-04-18T21:35:27.824Z","type":"message"}
{"nick":"k1i","message":"the model itself with limited resources","date":"2013-04-18T21:35:31.235Z","type":"message"}
{"nick":"k1i","message":"not necessarily clientside","date":"2013-04-18T21:35:36.037Z","type":"message"}
{"nick":"k1i","message":"when we have backend services also consuming models, they will be able to execute local or remote functions, simply because it is the same environment","date":"2013-04-18T21:35:50.130Z","type":"message"}
{"nick":"k1i","message":"no proxying necessary","date":"2013-04-18T21:35:53.893Z","type":"message"}
{"nick":"k1i","message":"but yeah, for all intents and purposes, I can change that","date":"2013-04-18T21:36:00.445Z","type":"message"}
{"nick":"owenb","message":"ok i see","date":"2013-04-18T21:36:07.535Z","type":"message"}
{"nick":"owenb","message":"i'm amazed at what you've done without any documentation and an api which is changing a lot :)","date":"2013-04-18T21:36:55.760Z","type":"message"}
{"nick":"k1i","message":"thanks I am surprised the code works myself","date":"2013-04-18T21:37:15.533Z","type":"message"}
{"nick":"k1i","message":"it is so clever, IMO","date":"2013-04-18T21:37:17.311Z","type":"message"}
{"nick":"k1i","message":"the model object stays in sync with the serverside","date":"2013-04-18T21:37:23.344Z","type":"message"}
{"nick":"k1i","message":"and allows you to interact with it like it is a normal JS object","date":"2013-04-18T21:37:30.262Z","type":"message"}
{"nick":"owenb","message":"this is cool","date":"2013-04-18T21:38:04.332Z","type":"message"}
{"nick":"k1i","message":"needs DRY'ed out","date":"2013-04-18T21:38:11.717Z","type":"message"}
{"nick":"owenb","message":"i'm going to run it and try it now. give me a few mins","date":"2013-04-18T21:38:16.937Z","type":"message"}
{"nick":"k1i","message":"and there is a bit of a scoping challenge I am working on","date":"2013-04-18T21:38:18.272Z","type":"message"}
{"nick":"k1i","message":"basically","date":"2013-04-18T21:38:22.400Z","type":"message"}
{"nick":"k1i","message":"the problem is","date":"2013-04-18T21:38:34.602Z","type":"message"}
{"nick":"k1i","message":"if a client is executing a remote (serverside) instance method","date":"2013-04-18T21:38:43.059Z","type":"message"}
{"nick":"k1i","message":"and you reference \"this\" - it passes the context of the clientside model to \"this\"","date":"2013-04-18T21:38:57.657Z","type":"message"}
{"nick":"k1i","message":"so you cant chain an additional serverside method on","date":"2013-04-18T21:39:07.392Z","type":"message"}
{"nick":"k1i","message":"so in an instance method, I can't execute this.save() and have it refer to an instance method in scope","date":"2013-04-18T21:39:25.685Z","type":"message"}
{"nick":"k1i","message":"I am thinking about passing an additional scope somehow (for the serverside model) such as @@ or _this to allow that to happen","date":"2013-04-18T21:39:44.267Z","type":"message"}
{"nick":"owenb","message":"ah right. i see the problem, but not a solution as yet","date":"2013-04-18T21:44:35.212Z","type":"message"}
{"nick":"k1i","message":"yeah, you can't call @save within an instance method","date":"2013-04-18T21:44:55.467Z","type":"message"}
{"nick":"k1i","message":"the solution would be either - pass another scope","date":"2013-04-18T21:45:00.654Z","type":"message"}
{"nick":"k1i","message":"or my other idea","date":"2013-04-18T21:45:02.586Z","type":"message"}
{"nick":"k1i","message":"transparently re-filter and re-proxy serverside/clientside methods","date":"2013-04-18T21:45:14.532Z","type":"message"}
{"nick":"k1i","message":"or provide an alias: \"ss.model.send\" that can be executed in the server scope","date":"2013-04-18T21:45:43.299Z","type":"message"}
{"nick":"k1i","message":"which may be a cleaner, easier solution","date":"2013-04-18T21:45:53.047Z","type":"message"}
{"nick":"owenb","message":"aim for simple and clear over 'magical'","date":"2013-04-18T21:46:21.591Z","type":"message"}
{"nick":"owenb","message":"i've learned that lesson the hard way :)","date":"2013-04-18T21:46:29.212Z","type":"message"}
{"nick":"k1i","message":"heh","date":"2013-04-18T21:46:31.499Z","type":"message"}
{"nick":"k1i","message":"ss.model.__send__","date":"2013-04-18T21:46:32.460Z","type":"message"}
{"nick":"k1i","message":"needs to exist on the serverside","date":"2013-04-18T21:46:35.214Z","type":"message"}
{"nick":"k1i","message":"then","date":"2013-04-18T21:46:46.769Z","type":"message"}
{"nick":"k1i","message":"that would be probably the simplest way, but, I couldn't figure out how to randomly inject that variable into the function calling context","date":"2013-04-18T21:47:11.660Z","type":"message"}
{"nick":"k1i","message":"models.server[msg.model]::[msg.method].apply msg.context, args","date":"2013-04-18T21:47:24.496Z","type":"message"}
{"nick":"k1i","message":"since .apply only sets \"this\"","date":"2013-04-18T21:47:33.228Z","type":"message"}
{"nick":"k1i","message":"and \"this\" really needs to be the clientside representation of the model","date":"2013-04-18T21:47:43.727Z","type":"message"}
{"nick":"owenb","message":"that's why now.js had the magical this.now object which would (supposedly) always be kept in sync between server and client","date":"2013-04-18T21:48:18.287Z","type":"message"}
{"nick":"owenb","message":"unfortunately it never worked properly","date":"2013-04-18T21:48:25.586Z","type":"message"}
{"nick":"k1i","message":"well","date":"2013-04-18T21:48:30.027Z","type":"message"}
{"nick":"k1i","message":"this works really well","date":"2013-04-18T21:48:31.553Z","type":"message"}
{"nick":"k1i","message":"with that one caveat.","date":"2013-04-18T21:48:33.361Z","type":"message"}
{"nick":"k1i","message":"now.js always had problems proxying instance methods","date":"2013-04-18T21:48:43.944Z","type":"message"}
{"nick":"k1i","message":"and I've cracked that","date":"2013-04-18T21:48:46.235Z","type":"message"}
{"nick":"owenb","message":":)","date":"2013-04-18T21:48:52.540Z","type":"message"}
{"nick":"k1i","message":"if this issue can be solved, this will be perfect","date":"2013-04-18T21:49:03.299Z","type":"message"}
{"nick":"k1i","message":"either that, or ship it with the warning \"can't call instance methods from other instance methods\"","date":"2013-04-18T21:49:16.150Z","type":"message"}
{"nick":"k1i","message":"which kind of sucks","date":"2013-04-18T21:49:18.398Z","type":"message"}
{"nick":"owenb","message":"thing is though, often the client will have a tonne of code in the instance model that the serve shouldn't have to know anything about","date":"2013-04-18T21:49:26.885Z","type":"message"}
{"nick":"owenb","message":"e.g. dom stuff","date":"2013-04-18T21:49:29.649Z","type":"message"}
{"nick":"k1i","message":"but, if we were able to alias ss.model.__send__ to the real method, it'd be game over","date":"2013-04-18T21:49:34.394Z","type":"message"}
{"nick":"vtali","reason":"Ping timeout: 245 seconds","date":"2013-04-18T21:49:43.574Z","type":"quit"}
{"nick":"k1i","message":"example?","date":"2013-04-18T21:49:57.471Z","type":"message"}
{"nick":"owenb","message":"well i was thinking display logic","date":"2013-04-18T21:50:54.019Z","type":"message"}
{"nick":"owenb","message":"or are you wanting to keep this 'purely data' ?","date":"2013-04-18T21:51:35.215Z","type":"message"}
{"nick":"k1i","message":"I was thinking it was supposed to be purely data","date":"2013-04-18T21:52:01.332Z","type":"message"}
{"nick":"k1i","message":"and then display logic would get added onto another module","date":"2013-04-18T21:52:05.273Z","type":"message"}
{"nick":"k1i","message":"such as rts-angular","date":"2013-04-18T21:52:09.952Z","type":"message"}
{"nick":"k1i","message":"rts-angular would consume rts-model's models","date":"2013-04-18T21:52:15.268Z","type":"message"}
{"nick":"owenb","message":"ah i see","date":"2013-04-18T21:52:17.588Z","type":"message"}
{"nick":"owenb","message":"i'm all for that approach","date":"2013-04-18T21:52:20.961Z","type":"message"}
{"nick":"k1i","message":"this is simply a JS object syncing system","date":"2013-04-18T21:52:34.014Z","type":"message"}
{"nick":"k1i","message":"which will have pubsub shortly to handle live-model-updates (easy)","date":"2013-04-18T21:52:45.237Z","type":"message"}
{"nick":"k1i","message":"this is, if I must say, a better approach IMO than minimongo","date":"2013-04-18T21:52:54.989Z","type":"message"}
{"nick":"k1i","message":"because it will be trivially easy to add mongoose, squel, or whatever datastore you want onto it","date":"2013-04-18T21:53:03.931Z","type":"message"}
{"nick":"owenb","message":"exactly!","date":"2013-04-18T21:53:09.150Z","type":"message"}
{"nick":"owenb","message":"that's so important","date":"2013-04-18T21:53:11.597Z","type":"message"}
{"nick":"k1i","message":"the \"rtm-mongoose\" module will simply append its own methods into the model","date":"2013-04-18T21:53:22.021Z","type":"message"}
{"nick":"k1i","message":"and the best part","date":"2013-04-18T21:53:33.423Z","type":"message"}
{"nick":"k1i","message":"the rtm-mongoose module can have its own set of requirements for exports within book(the model).js","date":"2013-04-18T21:53:49.269Z","type":"message"}
{"nick":"k1i","message":"exports.schema, could be one of those, if you are using rtm-mongoose","date":"2013-04-18T21:53:59.976Z","type":"message"}
{"nick":"k1i","message":"I think it feels very node-like.","date":"2013-04-18T21:54:37.056Z","type":"message"}
{"nick":"k1i","message":"callbacks are sent and received/proxied cleanly","date":"2013-04-18T21:54:49.398Z","type":"message"}
{"nick":"k1i","message":"ss.model.__send__ just needs to be accessible on the serverside and this thing will be a great POC","date":"2013-04-18T21:55:23.139Z","type":"message"}
{"nick":"k1i","message":"the DSL in model.js is fairly loose, I don't think it is too restrictive - it is more there to determine where a function is being capable of executed, to save network overhead.","date":"2013-04-18T21:55:42.644Z","type":"message"}
{"nick":"k1i","message":"you certainly could execute everything on the server, but, I figure, if it just adds a tiny bit of DSL complexity and a ton of potential performance, that's an acceptable trade-off in this case","date":"2013-04-18T21:56:15.062Z","type":"message"}
{"nick":"owenb","message":"i agree","date":"2013-04-18T21:56:58.796Z","type":"message"}
{"nick":"k1i","message":"I really thought the .find function would be so cool when implemented with something like mongoose","date":"2013-04-18T21:57:27.135Z","type":"message"}
{"nick":"owenb","message":"my main concern is that a lot of client-side functionality is already implemented in backbone models or in angular directly. i'm not sure how people using this frameworks would benefit form having yet another place to put their client-side model logic","date":"2013-04-18T21:57:51.955Z","type":"message"}
{"nick":"k1i","message":"backbone models are specifically designed to use REST","date":"2013-04-18T21:58:06.474Z","type":"message"}
{"nick":"k1i","message":"angular doesn't have any reliance on $resource","date":"2013-04-18T21:58:13.092Z","type":"message"}
{"nick":"k1i","message":"this will simply be $model","date":"2013-04-18T21:58:17.422Z","type":"message"}
{"nick":"k1i","message":"$model will need to be written (rts-angular)","date":"2013-04-18T21:58:29.670Z","type":"message"}
{"nick":"owenb","message":"have you seen firebase-angular ?","date":"2013-04-18T21:58:32.960Z","type":"message"}
{"nick":"owenb","message":"totally","date":"2013-04-18T21:58:36.857Z","type":"message"}
{"nick":"k1i","message":"yes","date":"2013-04-18T21:58:38.419Z","type":"message"}
{"nick":"owenb","message":"i did rts-angular without seeing firebas","date":"2013-04-18T21:58:51.588Z","type":"message"}
{"nick":"owenb","message":"e","date":"2013-04-18T21:58:52.120Z","type":"message"}
{"nick":"owenb","message":"it came out 2 days after hehe","date":"2013-04-18T21:58:59.378Z","type":"message"}
{"nick":"k1i","message":"rts-model is essentially firebase","date":"2013-04-18T21:59:09.354Z","type":"message"}
{"nick":"owenb","message":"now i've seen that i def want to re-write the whole thing","date":"2013-04-18T21:59:13.765Z","type":"message"}
{"nick":"owenb","message":"that's good","date":"2013-04-18T21:59:19.593Z","type":"message"}
{"nick":"k1i","message":"rts-angular is going to be like","date":"2013-04-18T21:59:31.398Z","type":"message"}
{"nick":"k1i","message":"the angularfire module","date":"2013-04-18T21:59:33.765Z","type":"message"}
{"nick":"k1i","message":"I like Backbone, and have used it extensively (more than angular), but it really isn't easy to use outside of a RESTful environment, which is exactly what we are doing","date":"2013-04-18T22:00:02.509Z","type":"message"}
{"nick":"k1i","message":"angular is pretty model-agnostic","date":"2013-04-18T22:00:13.153Z","type":"message"}
{"nick":"k1i","message":"and likes javascript objects served as factories","date":"2013-04-18T22:00:19.094Z","type":"message"}
{"nick":"k1i","message":"I think angular <-> (rts-model) <-> socketstream will blow the socks off of meteor's minimongo implementation","date":"2013-04-18T22:01:16.656Z","type":"message"}
{"nick":"k1i","message":"and handlebars","date":"2013-04-18T22:01:18.337Z","type":"message"}
{"nick":"owenb","message":"btw as an aside, i've checked out your repo and trying to run the example app. i'm having loads of npm errors saying the 'colors' module is missing... which it is as i've not added it as a dep to rts-pubsub etc. thinking i should really take this out and say that you shouldn't log colors to server.log() at all but instead you'll be able to pass params which","date":"2013-04-18T22:01:49.457Z","type":"message"}
{"nick":"owenb","message":"the realtime service logger will use to render colors in the terminal","date":"2013-04-18T22:01:49.587Z","type":"message"}
{"nick":"k1i","message":"ok","date":"2013-04-18T22:02:14.638Z","type":"message"}
{"nick":"owenb","message":"if it all works reliably and scales amazingly well, it certainly will :)","date":"2013-04-18T22:02:14.767Z","type":"message"}
{"nick":"k1i","message":"well","date":"2013-04-18T22:02:18.273Z","type":"message"}
{"nick":"k1i","message":"scaling with connect-redis-realtime should be pretty simple","date":"2013-04-18T22:02:25.913Z","type":"message"}
{"nick":"k1i","message":"I see no potential scaling issues with this","date":"2013-04-18T22:02:28.952Z","type":"message"}
{"nick":"k1i","message":"at least at first glance","date":"2013-04-18T22:02:56.186Z","type":"message"}
{"nick":"owenb","message":"well for session storage you'll be fine - we just tell people to use connect redis session store, which we're going to anyhway","date":"2013-04-18T22:03:24.156Z","type":"message"}
{"nick":"owenb","message":"for pubsub, the realtime-models module will need to take a pub-sub transport","date":"2013-04-18T22:03:42.576Z","type":"message"}
{"nick":"k1i","message":"yep","date":"2013-04-18T22:03:46.415Z","type":"message"}
{"nick":"owenb","message":"this should be anything - activemq, rabbitmq, redis","date":"2013-04-18T22:04:00.850Z","type":"message"}
{"nick":"k1i","message":"i was thinking you specify in the app config file","date":"2013-04-18T22:04:14.608Z","type":"message"}
{"nick":"k1i","message":"rts-pubsub","date":"2013-04-18T22:04:16.352Z","type":"message"}
{"nick":"k1i","message":"the already-instanced rts-pubsub, that is","date":"2013-04-18T22:04:22.476Z","type":"message"}
{"nick":"k1i","message":"that you could also use for the rest of your app","date":"2013-04-18T22:04:27.650Z","type":"message"}
{"nick":"k1i","message":"so rts-model consumes rts-pubsub","date":"2013-04-18T22:04:32.532Z","type":"message"}
{"nick":"owenb","message":"no","date":"2013-04-18T22:04:49.312Z","type":"message"}
{"nick":"owenb","message":"i really don't want this","date":"2013-04-18T22:04:52.195Z","type":"message"}
{"nick":"owenb","message":"rts pubsub is crappy","date":"2013-04-18T22:05:00.758Z","type":"message"}
{"nick":"k1i","message":"the same pubsub bus?","date":"2013-04-18T22:05:01.229Z","type":"message"}
{"nick":"owenb","message":"and will go away soon","date":"2013-04-18T22:05:07.284Z","type":"message"}
{"nick":"owenb","message":"it's only there to be compatible with 0.3","date":"2013-04-18T22:05:11.392Z","type":"message"}
{"nick":"k1i","message":"  var pubsub = require('rts-pubsub')();","date":"2013-04-18T22:05:12.749Z","type":"message"}
{"nick":"k1i","message":"  app.server.service('pubsub', pubsub);","date":"2013-04-18T22:05:13.344Z","type":"message"}
{"nick":"k1i","message":"  app.server.service('model', require('rts-model')(pubsub: pubsub));","date":"2013-04-18T22:05:14.094Z","type":"message"}
{"nick":"owenb","message":"i can do much better","date":"2013-04-18T22:05:14.455Z","type":"message"}
{"nick":"k1i","message":"im not specifically stating that module in particular","date":"2013-04-18T22:05:22.152Z","type":"message"}
{"nick":"owenb","message":"we need this instead: https://github.com/socketstream/socketstream/blob/master/src/publish/transports/redis.coffee","date":"2013-04-18T22:05:22.563Z","type":"message"}
{"nick":"k1i","message":"i am saying","date":"2013-04-18T22:05:23.550Z","type":"message"}
{"nick":"k1i","message":"a proxied version of the same pubusb transport that is being used by the rest of the app","date":"2013-04-18T22:05:34.232Z","type":"message"}
{"nick":"owenb","message":"this is just a thin wrapper of send and listen","date":"2013-04-18T22:05:38.827Z","type":"message"}
{"nick":"owenb","message":"you can use anything","date":"2013-04-18T22:05:42.545Z","type":"message"}
{"nick":"owenb","message":"redis, activemq","date":"2013-04-18T22:05:45.455Z","type":"message"}
{"nick":"owenb","message":"whatever","date":"2013-04-18T22:05:48.165Z","type":"message"}
{"nick":"k1i","message":"yeah","date":"2013-04-18T22:05:56.181Z","type":"message"}
{"nick":"owenb","message":"hmmmm","date":"2013-04-18T22:05:57.235Z","type":"message"}
{"nick":"owenb","message":"so hang on","date":"2013-04-18T22:05:59.978Z","type":"message"}
{"nick":"owenb","message":"ignore rpc-pubsub","date":"2013-04-18T22:06:09.241Z","type":"message"}
{"nick":"owenb","message":"we could have one way of doing pubsub for all realtime services","date":"2013-04-18T22:06:22.791Z","type":"message"}
{"nick":"k1i","message":"yea","date":"2013-04-18T22:06:26.737Z","type":"message"}
{"nick":"k1i","message":"i think that is highly necessary.","date":"2013-04-18T22:06:29.368Z","type":"message"}
{"nick":"owenb","message":"you pass it in when you create the server","date":"2013-04-18T22:06:32.883Z","type":"message"}
{"nick":"k1i","message":"so you arent doubly-configuring the same service","date":"2013-04-18T22:06:35.347Z","type":"message"}
{"nick":"k1i","message":"yep","date":"2013-04-18T22:06:37.842Z","type":"message"}
{"nick":"owenb","message":"just like you do with the session store","date":"2013-04-18T22:06:40.263Z","type":"message"}
{"nick":"owenb","message":"BUT","date":"2013-04-18T22:06:41.759Z","type":"message"}
{"nick":"k1i","message":"and that is something that needs to be done at a low level like that","date":"2013-04-18T22:06:47.496Z","type":"message"}
{"nick":"k1i","message":"also","date":"2013-04-18T22:06:50.459Z","type":"message"}
{"nick":"k1i","message":"if you do it when you configure the session store","date":"2013-04-18T22:06:54.842Z","type":"message"}
{"nick":"k1i","message":"you can send the same redis engine/config to the pubsub variable or whatever","date":"2013-04-18T22:07:08.468Z","type":"message"}
{"nick":"owenb","message":"it would mean there is no abiiity to use activeMq for RT Models and Redis for something else","date":"2013-04-18T22:07:11.023Z","type":"message"}
{"nick":"k1i","message":"sure it would","date":"2013-04-18T22:07:21.540Z","type":"message"}
{"nick":"k1i","message":"you have two variables","date":"2013-04-18T22:07:27.024Z","type":"message"}
{"nick":"k1i","message":"sessionStore = require(connect-redis-realtime)","date":"2013-04-18T22:07:37.419Z","type":"message"}
{"nick":"k1i","message":"pubsub = require('zmq');","date":"2013-04-18T22:07:50.090Z","type":"message"}
{"nick":"k1i","message":"or","date":"2013-04-18T22:07:51.053Z","type":"message"}
{"nick":"k1i","message":"pubsub = redisStore.redis;","date":"2013-04-18T22:07:58.665Z","type":"message"}
{"nick":"k1i","message":"if you wanted to use the same one","date":"2013-04-18T22:08:04.890Z","type":"message"}
{"nick":"owenb","message":"hmmm","date":"2013-04-18T22:08:10.778Z","type":"message"}
{"nick":"owenb","message":"actually i can think of a way","date":"2013-04-18T22:08:20.687Z","type":"message"}
{"nick":"k1i","message":"but this is something that is so low level that it needs to be provided to realtime services before server start.","date":"2013-04-18T22:08:29.564Z","type":"message"}
{"nick":"k1i","message":"ZMQ is not something that you could just configure (or want to) at runtime","date":"2013-04-18T22:08:42.020Z","type":"message"}
{"nick":"k1i","message":"things like multicast would make that tricky","date":"2013-04-18T22:08:50.901Z","type":"message"}
{"nick":"owenb","message":"when you do app.service() the first param is the name, the second is the realtime service object, but the third is for overriding the behavour - e.g. do not send me any client-side assets. you could pass your own pub/sub transport here JUST for that service. otherwise it would use the default","date":"2013-04-18T22:09:11.339Z","type":"message"}
{"nick":"k1i","message":"yes","date":"2013-04-18T22:09:20.993Z","type":"message"}
{"nick":"k1i","message":"and the default should be set-up before the realtime server starts","date":"2013-04-18T22:09:29.764Z","type":"message"}
{"nick":"owenb","message":"ok","date":"2013-04-18T22:09:30.937Z","type":"message"}
{"nick":"owenb","message":"agreed","date":"2013-04-18T22:09:36.253Z","type":"message"}
{"nick":"k1i","message":"same place as the session store","date":"2013-04-18T22:09:40.046Z","type":"message"}
{"nick":"k1i","message":"also","date":"2013-04-18T22:09:45.976Z","type":"message"}
{"nick":"owenb","message":"one session store, one pubsub transport","date":"2013-04-18T22:09:47.284Z","type":"message"}
{"nick":"k1i","message":"we need to implement bson","date":"2013-04-18T22:09:51.439Z","type":"message"}
{"nick":"k1i","message":"services.use.bson","date":"2013-04-18T22:09:57.533Z","type":"message"}
{"nick":"k1i","message":"not exactly a priority, but, would be nice","date":"2013-04-18T22:10:13.710Z","type":"message"}
{"nick":"owenb","message":"that means a massive c dependency. i can barely compile that for mongo","date":"2013-04-18T22:10:19.569Z","type":"message"}
{"nick":"owenb","message":"normally it craps out","date":"2013-04-18T22:10:25.491Z","type":"message"}
{"nick":"owenb","message":"i'd rather not do that.","date":"2013-04-18T22:10:33.048Z","type":"message"}
{"nick":"k1i","message":"\bthey have a browser-capable version","date":"2013-04-18T22:10:33.961Z","type":"message"}
{"nick":"owenb","message":"but we do need to support binary","date":"2013-04-18T22:10:36.551Z","type":"message"}
{"nick":"k1i","message":"works reall well man","date":"2013-04-18T22:10:39.400Z","type":"message"}
{"nick":"k1i","message":"https://github.com/mongodb/js-bson/tree/master/browser_build","date":"2013-04-18T22:10:41.382Z","type":"message"}
{"nick":"owenb","message":"(binary websocket data i was thinking)","date":"2013-04-18T22:10:56.423Z","type":"message"}
{"nick":"owenb","message":"for transports that support it","date":"2013-04-18T22:11:06.668Z","type":"message"}
{"nick":"owenb","message":"but that's in the future","date":"2013-04-18T22:11:10.480Z","type":"message"}
{"nick":"k1i","message":"yea","date":"2013-04-18T22:11:21.626Z","type":"message"}
{"nick":"k1i","message":"did you see my serialization I had to add to the realtime-service?","date":"2013-04-18T22:11:30.004Z","type":"message"}
{"nick":"k1i","message":"to pull off the realtime model integration","date":"2013-04-18T22:11:37.395Z","type":"message"}
{"nick":"owenb","message":"no can you show me the line number?","date":"2013-04-18T22:11:46.027Z","type":"message"}
{"nick":"k1i","message":"in order to serialize whole objects, some decorator data had to be added to the reply/send funcs","date":"2013-04-18T22:11:50.531Z","type":"message"}
{"nick":"k1i","message":"sec","date":"2013-04-18T22:11:51.433Z","type":"message"}
{"nick":"k1i","message":"it's at the very top of both of the files","date":"2013-04-18T22:12:00.204Z","type":"message"}
{"nick":"k1i","message":"i crudely threw it in there","date":"2013-04-18T22:12:03.963Z","type":"message"}
{"nick":"owenb","message":"i see","date":"2013-04-18T22:12:16.633Z","type":"message"}
{"nick":"k1i","message":"https://github.com/korbin/socketstream-0.4/blob/master/mods/realtime-service/server.js","date":"2013-04-18T22:12:20.477Z","type":"message"}
{"nick":"k1i","message":"deflateModel / inflateModel","date":"2013-04-18T22:12:27.628Z","type":"message"}
{"nick":"k1i","message":"adds decorator data to allow JSON to serialize complicated objects/responses","date":"2013-04-18T22:12:47.214Z","type":"message"}
{"nick":"k1i","message":"namely, function objects (models)","date":"2013-04-18T22:12:59.812Z","type":"message"}
{"nick":"owenb","message":"i see","date":"2013-04-18T22:13:13.395Z","type":"message"}
{"nick":"owenb","message":"i'm in no rush to put BSON it into realtime services. i'm really happy with how light and simple everything is at the moment, but i'm totally cool with you using it in realtime-models. it makes sense there","date":"2013-04-18T22:13:54.630Z","type":"message"}
{"nick":"k1i","message":"wlel","date":"2013-04-18T22:13:59.367Z","type":"message"}
{"nick":"k1i","message":"I don't need BSON","date":"2013-04-18T22:14:02.825Z","type":"message"}
{"nick":"k1i","message":"JSON works just fine","date":"2013-04-18T22:14:04.937Z","type":"message"}
{"nick":"k1i","message":"but it would save a bit of serialization time","date":"2013-04-18T22:14:09.733Z","type":"message"}
{"nick":"k1i","message":"so when performance matters (1.0), we should have it","date":"2013-04-18T22:14:15.500Z","type":"message"}
{"nick":"owenb","message":"you mentioned you had to modify something in realtime services. what was that?","date":"2013-04-18T22:14:21.860Z","type":"message"}
{"nick":"k1i","message":"just linke dit","date":"2013-04-18T22:14:25.313Z","type":"message"}
{"nick":"k1i","message":"https://github.com/korbin/socketstream-0.4/blob/master/mods/realtime-service/server.js","date":"2013-04-18T22:14:27.367Z","type":"message"}
{"nick":"k1i","message":"the JSON decorator","date":"2013-04-18T22:14:31.171Z","type":"message"}
{"nick":"k1i","message":"k1i: it's at the very top of both of the files","date":"2013-04-18T22:14:37.314Z","type":"message"}
{"nick":"k1i","message":"[5:12pm] k1i: i crudely threw it in there","date":"2013-04-18T22:14:37.922Z","type":"message"}
{"nick":"k1i","message":"[5:12pm] owenb: i see","date":"2013-04-18T22:14:39.423Z","type":"message"}
{"nick":"k1i","message":"[5:12pm] k1i: https://github.com/korbin/socketstream-0.4/blob/master/mods/realtime-service/server.js","date":"2013-04-18T22:14:40.674Z","type":"message"}
{"nick":"k1i","message":"[5:12pm] k1i: deflateModel / inflateModel","date":"2013-04-18T22:14:41.676Z","type":"message"}
{"nick":"k1i","message":"[5:12pm] k1i: adds decorator data to allow JSON to serialize complicated objects/responses","date":"2013-04-18T22:14:42.431Z","type":"message"}
{"nick":"k1i","message":"it's just a bit of code that allows a javascript function object to be JSON.stringified","date":"2013-04-18T22:15:14.210Z","type":"message"}
{"nick":"owenb","message":"best do that in your own module","date":"2013-04-18T22:15:52.124Z","type":"message"}
{"nick":"k1i","message":"well","date":"2013-04-18T22:15:54.714Z","type":"message"}
{"nick":"k1i","message":"the problem is","date":"2013-04-18T22:15:55.939Z","type":"message"}
{"nick":"owenb","message":"just don't use the json feature of realtime services","date":"2013-04-18T22:16:02.081Z","type":"message"}
{"nick":"k1i","message":"it has to happen before and after every client.send and reply()","date":"2013-04-18T22:16:13.363Z","type":"message"}
{"nick":"owenb","message":"it's only there for convinence.","date":"2013-04-18T22:16:25.703Z","type":"message"}
{"nick":"owenb","message":"you can still do that in your lib","date":"2013-04-18T22:16:42.866Z","type":"message"}
{"nick":"k1i","message":"    server.onmessage = (msg, meta, reply) ->","date":"2013-04-18T22:16:54.601Z","type":"message"}
{"nick":"k1i","message":"        when \"RPC_CLASS\"","date":"2013-04-18T22:16:55.189Z","type":"message"}
{"nick":"k1i","message":"          msg.args.cb = ->","date":"2013-04-18T22:16:56.190Z","type":"message"}
{"nick":"k1i","message":"            reply arguments","date":"2013-04-18T22:16:56.944Z","type":"message"}
{"nick":"owenb","message":"just wrap it","date":"2013-04-18T22:16:58.004Z","type":"message"}
{"nick":"k1i","message":"ok","date":"2013-04-18T22:17:00.090Z","type":"message"}
{"nick":"k1i","message":"I forgot why I had to do it there","date":"2013-04-18T22:17:04.993Z","type":"message"}
{"nick":"k1i","message":"I feel like there was some fringe case","date":"2013-04-18T22:17:08.261Z","type":"message"}
{"nick":"owenb","message":"i need to be really ruthless about not including things in services. need to keep everything as fast and 'close to the wire' as possible","date":"2013-04-18T22:17:37.309Z","type":"message"}
{"nick":"owenb","message":"let me know if there is","date":"2013-04-18T22:17:42.588Z","type":"message"}
{"nick":"k1i","message":"yeah","date":"2013-04-18T22:17:42.868Z","type":"message"}
{"nick":"k1i","message":"i forgot what it was, but there was a reason","date":"2013-04-18T22:17:50.324Z","type":"message"}
{"nick":"k1i","message":"I tried to stay out of there","date":"2013-04-18T22:17:52.600Z","type":"message"}
{"nick":"owenb","message":"sure","date":"2013-04-18T22:17:57.029Z","type":"message"}
{"nick":"owenb","message":"when you remember what it is let me know","date":"2013-04-18T22:18:06.214Z","type":"message"}
{"nick":"owenb","message":"we'll find a fix","date":"2013-04-18T22:18:10.501Z","type":"message"}
{"nick":"owenb","message":"so let me tell you some news","date":"2013-04-18T22:18:32.925Z","type":"message"}
{"nick":"owenb","message":"i've decided to call 'socketstream-server' 'prism'","date":"2013-04-18T22:18:56.364Z","type":"message"}
{"nick":"owenb","message":"i.e. the name of the pure realtime server will be called Prism","date":"2013-04-18T22:19:08.804Z","type":"message"}
{"nick":"k1i_","date":"2013-04-18T22:19:19.422Z","type":"join"}
{"nick":"owenb","message":"think of white light being split into components","date":"2013-04-18T22:19:20.125Z","type":"message"}
{"nick":"owenb","message":"(services)","date":"2013-04-18T22:19:25.173Z","type":"message"}
{"nick":"k1i_","message":"whoops","date":"2013-04-18T22:19:33.008Z","type":"message"}
{"nick":"k1i_","message":"internet died","date":"2013-04-18T22:19:34.473Z","type":"message"}
{"nick":"k1i_","message":"owenb: sure","date":"2013-04-18T22:19:36.074Z","type":"message"}
{"nick":"owenb","message":"np","date":"2013-04-18T22:19:36.598Z","type":"message"}
{"nick":"k1i_","message":"[5:18pm] k1i: oh yeah.","date":"2013-04-18T22:19:37.458Z","type":"message"}
{"nick":"k1i_","message":"[5:18pm] k1i: because on the callbacks, there is no way to re-inflate the object","date":"2013-04-18T22:19:39.110Z","type":"message"}
{"nick":"k1i_","message":"[5:18pm] k1i: I can obviously throw reply deflateModel(arguments) there","date":"2013-04-18T22:19:40.223Z","type":"message"}
{"nick":"k1i_","message":"[5:18pm] k1i: but then on the clientside","date":"2013-04-18T22:19:41.248Z","type":"message"}
{"nick":"k1i_","message":"[5:18pm]","date":"2013-04-18T22:19:41.984Z","type":"message"}
{"nick":"owenb","message":"ah i see","date":"2013-04-18T22:19:58.801Z","type":"message"}
{"nick":"k1i_","message":"but yeah, i would have rather not modified realtime-service","date":"2013-04-18T22:20:16.340Z","type":"message"}
{"nick":"owenb","message":"can you just not use: json","date":"2013-04-18T22:20:22.693Z","type":"message"}
{"nick":"owenb","message":"and stick to strings","date":"2013-04-18T22:20:24.959Z","type":"message"}
{"nick":"owenb","message":"then you can do whatever you like","date":"2013-04-18T22:20:29.470Z","type":"message"}
{"nick":"owenb","message":"or am i missing the point?","date":"2013-04-18T22:20:34.001Z","type":"message"}
{"nick":"k1i_","message":"I think I can","date":"2013-04-18T22:20:44.568Z","type":"message"}
{"nick":"k1i_","message":"the inflatemodel/deflatemodel was added before I refactored some of this code","date":"2013-04-18T22:20:56.794Z","type":"message"}
{"nick":"k1i_","message":"originally I was generating/compiling/regenerating model objects on both the serverside and clientside","date":"2013-04-18T22:21:12.648Z","type":"message"}
{"nick":"k1i_","message":"and then it got to be too much","date":"2013-04-18T22:21:14.817Z","type":"message"}
{"nick":"owenb","message":"(when you dropped out I was saying that the socketstream-server module is going to be renamed prism and launched as it's own project/module on Monday when i give my talk)","date":"2013-04-18T22:21:20.740Z","type":"message"}
{"nick":"k1i_","message":"ok","date":"2013-04-18T22:21:25.849Z","type":"message"}
{"nick":"k1i_","message":"give a talk where","date":"2013-04-18T22:21:28.874Z","type":"message"}
{"nick":"owenb","message":"Realtime Conf EU","date":"2013-04-18T22:21:33.628Z","type":"message"}
{"nick":"k1i_","message":"where is this at","date":"2013-04-18T22:22:01.303Z","type":"message"}
{"nick":"owenb","message":"lyon","date":"2013-04-18T22:22:15.187Z","type":"message"}
{"nick":"owenb","message":"where are you based?","date":"2013-04-18T22:22:17.275Z","type":"message"}
{"nick":"k1i_","message":"USA","date":"2013-04-18T22:22:21.037Z","type":"message"}
{"nick":"k1i","reason":"Ping timeout: 252 seconds","date":"2013-04-18T22:22:32.886Z","type":"quit"}
{"nick":"k1i_","new_nick":"k1i","date":"2013-04-18T22:22:33.109Z","type":"nick"}
{"nick":"owenb","message":"cool ok. where abouts? i'm in VA in two weeks","date":"2013-04-18T22:22:43.144Z","type":"message"}
{"nick":"k1i","message":"south dakota, heh.","date":"2013-04-18T22:22:47.386Z","type":"message"}
{"nick":"k1i","message":"wild west","date":"2013-04-18T22:22:53.994Z","type":"message"}
{"nick":"owenb","message":"http://lanyrd.com/2013/realtime-conf-europe/schedule/","date":"2013-04-18T22:22:57.465Z","type":"message"}
{"nick":"k1i","message":"I am normally in NYC","date":"2013-04-18T22:22:59.343Z","type":"message"}
{"nick":"owenb","message":"cool ok","date":"2013-04-18T22:23:00.567Z","type":"message"}
{"nick":"owenb","message":"there may be live streaming","date":"2013-04-18T22:23:06.233Z","type":"message"}
{"nick":"k1i","message":"for a good portion fo the year","date":"2013-04-18T22:23:06.708Z","type":"message"}
{"nick":"k1i","message":"i wil look out for it","date":"2013-04-18T22:23:11.436Z","type":"message"}
{"nick":"owenb","message":"i'm speaking 4th or 5th i think","date":"2013-04-18T22:23:13.439Z","type":"message"}
{"nick":"owenb","message":"cool","date":"2013-04-18T22:23:17.075Z","type":"message"}
{"nick":"k1i","message":"why is ss-server being separated?","date":"2013-04-18T22:23:18.440Z","type":"message"}
{"nick":"owenb","message":"many people in Node know of socketstream","date":"2013-04-18T22:23:34.217Z","type":"message"}
{"nick":"owenb","message":"but they think it's a framework, which it is","date":"2013-04-18T22:23:46.896Z","type":"message"}
{"nick":"owenb","message":"Prism is going to be a standalone realtime server","date":"2013-04-18T22:24:00.141Z","type":"message"}
{"nick":"owenb","message":"nothing else","date":"2013-04-18T22:24:01.369Z","type":"message"}
{"nick":"k1i","message":"with the ability to add realtime models?","date":"2013-04-18T22:24:09.507Z","type":"message"}
{"nick":"k1i","message":"err","date":"2013-04-18T22:24:11.091Z","type":"message"}
{"nick":"k1i","message":"services rather","date":"2013-04-18T22:24:12.085Z","type":"message"}
{"nick":"k1i","message":"such as rts-model et al","date":"2013-04-18T22:24:15.350Z","type":"message"}
{"nick":"owenb","message":"yup","date":"2013-04-18T22:24:15.571Z","type":"message"}
{"nick":"owenb","message":"everything","date":"2013-04-18T22:24:17.523Z","type":"message"}
{"nick":"owenb","message":"and transports","date":"2013-04-18T22:24:20.178Z","type":"message"}
{"nick":"owenb","message":"socketstream 0.4 will use prism","date":"2013-04-18T22:24:26.827Z","type":"message"}
{"nick":"owenb","message":"socketstream 0.4 will become an even more oppionated high-productivity framework","date":"2013-04-18T22:25:06.316Z","type":"message"}
{"nick":"k1i","message":"good","date":"2013-04-18T22:25:10.074Z","type":"message"}
{"nick":"k1i","message":"how do you suggest I make ss.model.__send__ available in the serverside scope when executing .apply?","date":"2013-04-18T22:25:13.638Z","type":"message"}
{"nick":"owenb","message":"BUT unlike meteor, if you want to change your build system in the future, or move from mongo to something else, you'll totally be able to do that","date":"2013-04-18T22:25:38.498Z","type":"message"}
{"nick":"k1i","message":"ss.model.__send__ just needs to be an alias for every method","date":"2013-04-18T22:25:41.025Z","type":"message"}
{"nick":"k1i","message":"meteor pisses me off","date":"2013-04-18T22:25:45.810Z","type":"message"}
{"nick":"owenb","message":"and realtime transports and services can be used in any framework etc in the future","date":"2013-04-18T22:25:56.448Z","type":"message"}
{"nick":"owenb","message":"so there is zero vendor lock in","date":"2013-04-18T22:26:03.485Z","type":"message"}
{"nick":"k1i","message":"meteor is the definition of vendor lock-in","date":"2013-04-18T22:26:10.374Z","type":"message"}
{"nick":"k1i","message":"the packages system, holy shit","date":"2013-04-18T22:26:15.311Z","type":"message"}
{"nick":"owenb","message":"exactly","date":"2013-04-18T22:26:15.496Z","type":"message"}
{"nick":"k1i","message":"makes my blood boil","date":"2013-04-18T22:26:20.711Z","type":"message"}
{"nick":"owenb","message":"realtime services are just objects with no knowledge of the realtime server (prism) or framework (socketstream)","date":"2013-04-18T22:26:40.669Z","type":"message"}
{"nick":"owenb","message":"it's a much better design i think","date":"2013-04-18T22:26:49.731Z","type":"message"}
{"nick":"k1i","message":"yeah","date":"2013-04-18T22:27:09.784Z","type":"message"}
{"nick":"k1i","message":"the thing that i think turns a lot of people off about SS","date":"2013-04-18T22:27:35.762Z","type":"message"}
{"nick":"k1i","message":"is the fact that it isnt turnkey","date":"2013-04-18T22:27:44.006Z","type":"message"}
{"nick":"owenb","message":"exactly","date":"2013-04-18T22:28:15.849Z","type":"message"}
{"nick":"owenb","message":"so by breaking things into tiny modules, we're going to get the best of both","date":"2013-04-18T22:28:32.821Z","type":"message"}
{"nick":"k1i","message":"SS, without models and database opinions, cant replace meteor","date":"2013-04-18T22:28:34.301Z","type":"message"}
{"nick":"k1i","message":"yeah","date":"2013-04-18T22:28:36.751Z","type":"message"}
{"nick":"owenb","message":"you can start off with a highly oppionated framework","date":"2013-04-18T22:28:39.862Z","type":"message"}
{"nick":"owenb","message":"get up and running instantly","date":"2013-04-18T22:28:44.204Z","type":"message"}
{"nick":"k1i","message":"heh, try and remove minimongo from meteor.","date":"2013-04-18T22:28:51.292Z","type":"message"}
{"nick":"owenb","message":"i'll pick the best of everything etc","date":"2013-04-18T22:28:53.592Z","type":"message"}
{"nick":"owenb","message":"and show tutorials examples screencasts","date":"2013-04-18T22:29:08.700Z","type":"message"}
{"nick":"owenb","message":"BUT at no stage are you locked in","date":"2013-04-18T22:29:17.712Z","type":"message"}
{"nick":"k1i","message":"yep","date":"2013-04-18T22:29:27.235Z","type":"message"}
{"nick":"k1i","message":"for instance","date":"2013-04-18T22:29:29.950Z","type":"message"}
{"nick":"k1i","message":"I believe angular to be the best frontend framework for realtime apps","date":"2013-04-18T22:29:40.428Z","type":"message"}
{"nick":"k1i","message":"JS and ember are too locked into REST, IMO","date":"2013-04-18T22:29:46.518Z","type":"message"}
{"nick":"owenb","message":"e.g. you will easily be able to switch out the socketstream build process with Grunt","date":"2013-04-18T22:29:51.759Z","type":"message"}
{"nick":"k1i","message":"that should be a modular choice though","date":"2013-04-18T22:29:52.604Z","type":"message"}
{"nick":"owenb","message":"yup","date":"2013-04-18T22:30:02.087Z","type":"message"}
{"nick":"owenb","message":"so i'm going to go in a sec and work on this some more. so much to do before monday","date":"2013-04-18T22:30:42.623Z","type":"message"}
{"nick":"k1i","message":"I was honestly really relieved when this proxying thing started working","date":"2013-04-18T22:30:44.750Z","type":"message"}
{"nick":"owenb","message":"but i'm going to explore the idea of a global pubsub","date":"2013-04-18T22:30:53.178Z","type":"message"}
{"nick":"owenb","message":"like https://github.com/socketstream/socketstream/blob/master/src/publish/transports/redis.coffee","date":"2013-04-18T22:30:55.584Z","type":"message"}
{"nick":"k1i","message":"im going to push a refactored version of this inflatemodel/deflatemodel to my repo","date":"2013-04-18T22:30:59.640Z","type":"message"}
{"nick":"owenb","message":"cool","date":"2013-04-18T22:31:03.899Z","type":"message"}
{"nick":"k1i","message":"so it isnt in realtime-service","date":"2013-04-18T22:31:04.726Z","type":"message"}
{"nick":"owenb","message":"look out for changes over the weekend","date":"2013-04-18T22:31:08.509Z","type":"message"}
{"nick":"k1i","message":"do yo uhave any thoughts of passing ss.model.__send__ to a serverside function","date":"2013-04-18T22:31:14.960Z","type":"message"}
{"nick":"owenb","message":"everything should be good to go by monday","date":"2013-04-18T22:31:16.589Z","type":"message"}
{"nick":"k1i","message":"called with .apply?","date":"2013-04-18T22:31:16.716Z","type":"message"}
{"nick":"k1i","message":"i cant think of a good way to declare that variable in-scope, since, .apply doesn't execute stuff in-scope","date":"2013-04-18T22:31:35.757Z","type":"message"}
{"nick":"owenb","message":"not off hand, sorry. the problem you'll have is syncing the instance data","date":"2013-04-18T22:31:39.100Z","type":"message"}
{"nick":"k1i","message":"it's already synced","date":"2013-04-18T22:31:51.577Z","type":"message"}
{"nick":"owenb","message":"yeah?","date":"2013-04-18T22:31:54.713Z","type":"message"}
{"nick":"k1i","message":"already syncs, rather","date":"2013-04-18T22:31:55.096Z","type":"message"}
{"nick":"owenb","message":"then can't you just .bind() to the function?","date":"2013-04-18T22:32:07.392Z","type":"message"}
{"nick":"k1i","message":"if you look","date":"2013-04-18T22:32:14.934Z","type":"message"}
{"nick":"k1i","message":"          models.server[msg.model]::[msg.method].apply msg.context, args is how an instance method is executed","date":"2013-04-18T22:32:22.281Z","type":"message"}
{"nick":"k1i","message":"msg.context, though, is the clientside representation of the model object","date":"2013-04-18T22:32:41.177Z","type":"message"}
{"nick":"owenb","message":"ok","date":"2013-04-18T22:32:49.453Z","type":"message"}
{"nick":"k1i","message":"in the clientside representation","date":"2013-04-18T22:32:52.457Z","type":"message"}
{"nick":"k1i","message":"all instance method calls are proxied to ss.model.__send__","date":"2013-04-18T22:32:59.832Z","type":"message"}
{"nick":"k1i","message":"which doesnt exist on the serverside","date":"2013-04-18T22:33:03.091Z","type":"message"}
{"nick":"k1i","message":"I want to make it exist, and then apply the function","date":"2013-04-18T22:33:17.317Z","type":"message"}
{"nick":"k1i","message":".apply doesn't execute in scope","date":"2013-04-18T22:33:34.741Z","type":"message"}
{"nick":"k1i","message":"if I can make ss.model.__send__ exist when .applying the function like that, this will work flawlessly","date":"2013-04-18T22:34:26.083Z","type":"message"}
{"nick":"owenb","message":"sorry i'm dense but i thought the first argument to .apply() was the instance of this","date":"2013-04-18T22:34:28.553Z","type":"message"}
{"nick":"owenb","message":"e.g. the scope","date":"2013-04-18T22:34:31.202Z","type":"message"}
{"nick":"k1i","message":"yes, but I want the scope to remain the clientside copy of the model","date":"2013-04-18T22:35:11.470Z","type":"message"}
{"nick":"k1i","message":"the clientside copy of the model thinks of instance methods as ss.model.send calls which doesnt exist on the server","date":"2013-04-18T22:35:22.201Z","type":"message"}
{"nick":"k1i","message":"I just want to alias it, so there is no code-regeneration","date":"2013-04-18T22:35:27.821Z","type":"message"}
{"nick":"owenb","message":"but you said you have local methods","date":"2013-04-18T22:35:37.708Z","type":"message"}
{"nick":"owenb","message":"these could change the value of properties of the instance on the client","date":"2013-04-18T22:35:50.606Z","type":"message"}
{"nick":"k1i","message":"yep","date":"2013-04-18T22:35:55.557Z","type":"message"}
{"nick":"owenb","message":"there is no way for the server to know what these are","date":"2013-04-18T22:35:57.933Z","type":"message"}
{"nick":"k1i","message":"yes","date":"2013-04-18T22:36:00.143Z","type":"message"}
{"nick":"k1i","message":"you would then execute a .save()","date":"2013-04-18T22:36:07.370Z","type":"message"}
{"nick":"k1i","message":"which is a remote instance method","date":"2013-04-18T22:36:14.844Z","type":"message"}
{"nick":"k1i","message":"or whatever","date":"2013-04-18T22:36:15.884Z","type":"message"}
{"nick":"owenb","message":"ok","date":"2013-04-18T22:36:22.518Z","type":"message"}
{"nick":"owenb","message":"so it just saves all the properties to the server?","date":"2013-04-18T22:36:33.149Z","type":"message"}
{"nick":"k1i","message":"the local instance methods aren't designed to do persistent data manipulation, they only execute the object in memory, anything persistent needs to execute on the server naturally","date":"2013-04-18T22:36:34.712Z","type":"message"}
{"nick":"k1i","message":"it sends the whole model object over the wire.","date":"2013-04-18T22:36:41.020Z","type":"message"}
{"nick":"owenb","message":"ok","date":"2013-04-18T22:36:43.876Z","type":"message"}
{"nick":"k1i","message":"and would save it","date":"2013-04-18T22:36:44.958Z","type":"message"}
{"nick":"k1i","message":"the code works just fine entirely","date":"2013-04-18T22:36:51.980Z","type":"message"}
{"nick":"owenb","message":"and i guess in the future you can just send patches","date":"2013-04-18T22:36:55.251Z","type":"message"}
{"nick":"k1i","message":"yep","date":"2013-04-18T22:36:59.674Z","type":"message"}
{"nick":"owenb","message":"ok","date":"2013-04-18T22:37:00.855Z","type":"message"}
{"nick":"k1i","message":"OT will be implementable","date":"2013-04-18T22:37:04.512Z","type":"message"}
{"nick":"k1i","message":"the problem I am having","date":"2013-04-18T22:37:07.480Z","type":"message"}
{"nick":"owenb","message":"yes","date":"2013-04-18T22:37:07.725Z","type":"message"}
{"nick":"k1i","message":"is i want to be able to this.save from another remote instance method","date":"2013-04-18T22:37:17.084Z","type":"message"}
{"nick":"k1i","message":"or this.anyremoteinstancemethod","date":"2013-04-18T22:37:29.685Z","type":"message"}
{"nick":"owenb","message":"on the server?","date":"2013-04-18T22:37:30.740Z","type":"message"}
{"nick":"k1i","message":"yes","date":"2013-04-18T22:37:32.111Z","type":"message"}
{"nick":"owenb","message":"ok","date":"2013-04-18T22:37:41.894Z","type":"message"}
{"nick":"k1i","message":"however, since you are working with a clientside copy of the model","date":"2013-04-18T22:37:44.819Z","type":"message"}
{"nick":"k1i","message":"ss.model.send doesnt exist","date":"2013-04-18T22:37:54.103Z","type":"message"}
{"nick":"k1i","message":"I want to make that exist seamlessly on the server so you can access \"remote\" (which arent really remote anymore) instance/class methods","date":"2013-04-18T22:38:19.197Z","type":"message"}
{"nick":"owenb","message":"yes i see now","date":"2013-04-18T22:38:34.304Z","type":"message"}
{"nick":"owenb","message":"so you can do this inside RPC code for example","date":"2013-04-18T22:38:44.424Z","type":"message"}
{"nick":"owenb","message":"or your own node scripts","date":"2013-04-18T22:38:50.861Z","type":"message"}
{"nick":"owenb","message":"so i guess you need an object prototype for the server","date":"2013-04-18T22:39:15.475Z","type":"message"}
{"nick":"owenb","message":"which has .save() and stuff","date":"2013-04-18T22:39:22.268Z","type":"message"}
{"nick":"k1i","message":"yeah, it makes one","date":"2013-04-18T22:39:23.932Z","type":"message"}
{"nick":"k1i","message":"its just that I want it to call it seamlessly","date":"2013-04-18T22:39:31.560Z","type":"message"}
{"nick":"k1i","message":"models.server[msg.model]::[msg.method].apply msg.context, args","date":"2013-04-18T22:39:35.257Z","type":"message"}
{"nick":"k1i","message":"it executes the serverside copy of the model's initial function","date":"2013-04-18T22:39:45.561Z","type":"message"}
{"nick":"k1i","message":"however, if you add a this.save() into that function, since, the context is the clientside version","date":"2013-04-18T22:39:56.452Z","type":"message"}
{"nick":"k1i","message":"it wont be able to execute that \"over the wire\"","date":"2013-04-18T22:40:07.745Z","type":"message"}
{"nick":"owenb","message":"hmm","date":"2013-04-18T22:40:23.364Z","type":"message"}
{"nick":"k1i","message":"since its already in the serverside","date":"2013-04-18T22:40:24.863Z","type":"message"}
{"nick":"owenb","message":"i get it","date":"2013-04-18T22:40:42.107Z","type":"message"}
{"nick":"k1i","message":"the way I want to achieve that, is to create ss.models.send on the serverside, and have it really just execute the serverside function directly","date":"2013-04-18T22:40:48.527Z","type":"message"}
{"nick":"owenb","message":"yes","date":"2013-04-18T22:40:56.496Z","type":"message"}
{"nick":"k1i","message":"but .apply doesn't let you call functions in scope","date":"2013-04-18T22:41:13.392Z","type":"message"}
{"nick":"k1i","message":"heh, maybe I just do more code generation on the fly ;)","date":"2013-04-18T22:41:41.405Z","type":"message"}
{"nick":"k1i","message":"I try to avoid it unless I can make it really clean","date":"2013-04-18T22:41:49.487Z","type":"message"}
{"nick":"owenb","message":"yeah","date":"2013-04-18T22:41:54.227Z","type":"message"}
{"nick":"owenb","message":"think about the performance","date":"2013-04-18T22:41:58.709Z","type":"message"}
{"nick":"k1i","message":"well all of the code is generated before-hand","date":"2013-04-18T22:42:07.355Z","type":"message"}
{"nick":"k1i","message":"at server start","date":"2013-04-18T22:42:11.808Z","type":"message"}
{"nick":"k1i","message":"there is negligible performance hit on that","date":"2013-04-18T22:42:23.038Z","type":"message"}
{"nick":"k1i","message":"I will work on this","date":"2013-04-18T22:42:36.646Z","type":"message"}
{"nick":"k1i","message":"let me know what changes you are making","date":"2013-04-18T22:42:40.110Z","type":"message"}
{"nick":"owenb","message":"there will be plenty over the next few days as i want to get everything ready for monday (just the realtime server). i have made some changes to the asset serving but i'm no where near happy with those yet","date":"2013-04-18T22:43:43.042Z","type":"message"}
{"nick":"owenb","message":"i'll push what i can soon","date":"2013-04-18T22:43:48.484Z","type":"message"}
{"nick":"k1i","message":"also","date":"2013-04-18T22:44:06.015Z","type":"message"}
{"nick":"k1i","message":"one thing I saw in rts-angular","date":"2013-04-18T22:44:08.229Z","type":"message"}
{"nick":"owenb","message":"main thing i need to do is make prism it's own npm module/repo","date":"2013-04-18T22:44:12.774Z","type":"message"}
{"nick":"k1i","message":"how would you add angular.js to the asset pipeline","date":"2013-04-18T22:44:15.126Z","type":"message"}
{"nick":"owenb","message":"so right now you do it with browserAssets","date":"2013-04-18T22:44:31.619Z","type":"message"}
{"nick":"owenb","message":"but it's the weakest part of realtime services","date":"2013-04-18T22:44:38.183Z","type":"message"}
{"nick":"owenb","message":"today i looked at Bower","date":"2013-04-18T22:44:42.766Z","type":"message"}
{"nick":"owenb","message":"i'm thinking about using that","date":"2013-04-18T22:44:46.130Z","type":"message"}
{"nick":"owenb","message":"but not decided yet","date":"2013-04-18T22:44:48.798Z","type":"message"}
{"nick":"owenb","message":"on my list to explore this weekend","date":"2013-04-18T22:44:55.827Z","type":"message"}
{"nick":"k1i","message":"it is hard to design this cleanly","date":"2013-04-18T22:44:55.951Z","type":"message"}
{"nick":"k1i","message":"i mean","date":"2013-04-18T22:44:58.155Z","type":"message"}
{"nick":"owenb","message":"yes","date":"2013-04-18T22:44:58.985Z","type":"message"}
{"nick":"k1i","message":"do you like the idea of rts-angular packaging/vendoring a version of angular.js?","date":"2013-04-18T22:45:07.321Z","type":"message"}
{"nick":"k1i","message":"a la rails gems","date":"2013-04-18T22:45:10.820Z","type":"message"}
{"nick":"owenb","message":"i like the idea of saying my module is designed to work with a specific version","date":"2013-04-18T22:45:28.652Z","type":"message"}
{"nick":"owenb","message":"and it's been tested","date":"2013-04-18T22:45:30.798Z","type":"message"}
{"nick":"owenb","message":"but the app dev should be able to override that","date":"2013-04-18T22:45:41.738Z","type":"message"}
{"nick":"owenb","message":"i'm really not sure yet","date":"2013-04-18T22:45:44.859Z","type":"message"}
{"nick":"owenb","message":"lots to think about here","date":"2013-04-18T22:45:51.247Z","type":"message"}
{"nick":"k1i","message":"also","date":"2013-04-18T22:45:58.719Z","type":"message"}
{"nick":"owenb","message":"this area is likely to change a lot over the next few days","date":"2013-04-18T22:45:59.372Z","type":"message"}
{"nick":"k1i","message":"you said browserify doesnt allow you to send stuff over the wire?","date":"2013-04-18T22:46:04.755Z","type":"message"}
{"nick":"owenb","message":"no","date":"2013-04-18T22:46:08.755Z","type":"message"}
{"nick":"k1i","message":"er","date":"2013-04-18T22:46:28.364Z","type":"message"}
{"nick":"k1i","message":"what was the limitation of browseirfy?","date":"2013-04-18T22:46:33.494Z","type":"message"}
{"nick":"owenb","message":"it's a design decision. results in less code","date":"2013-04-18T22:47:04.036Z","type":"message"}
{"nick":"owenb","message":"which is good","date":"2013-04-18T22:47:05.286Z","type":"message"}
{"nick":"owenb","message":"and less to go wrong","date":"2013-04-18T22:47:09.463Z","type":"message"}
{"nick":"owenb","message":"client-side code for realtime services will defintily use common js","date":"2013-04-18T22:47:22.065Z","type":"message"}
{"nick":"owenb","message":"that's for sure","date":"2013-04-18T22:47:24.692Z","type":"message"}
{"nick":"owenb","message":"but it will be left up to the realtime server and framework to use whatever module system they want","date":"2013-04-18T22:47:52.498Z","type":"message"}
{"nick":"owenb","message":"which should be fine","date":"2013-04-18T22:48:01.074Z","type":"message"}
{"nick":"k1i","message":"what will ss use?","date":"2013-04-18T22:48:03.507Z","type":"message"}
{"nick":"owenb","message":"right must go","date":"2013-04-18T22:48:04.434Z","type":"message"}
{"nick":"owenb","message":"browerify i think","date":"2013-04-18T22:48:08.904Z","type":"message"}
{"nick":"owenb","message":"but yet to decide totally","date":"2013-04-18T22:48:14.437Z","type":"message"}
{"nick":"k1i","message":"gotcha","date":"2013-04-18T22:48:24.021Z","type":"message"}
{"nick":"owenb","message":"common js for 100% sure","date":"2013-04-18T22:48:26.665Z","type":"message"}
{"nick":"k1i","message":"let me know next time you are on","date":"2013-04-18T22:48:28.767Z","type":"message"}
{"nick":"owenb","message":"not require js","date":"2013-04-18T22:48:29.085Z","type":"message"}
{"nick":"owenb","message":"when i know you'll know :)","date":"2013-04-18T22:48:35.016Z","type":"message"}
{"nick":"owenb","message":"lots still to figure out","date":"2013-04-18T22:48:39.455Z","type":"message"}
{"nick":"k1i","message":"yep","date":"2013-04-18T22:48:50.119Z","type":"message"}
{"nick":"k1i","message":"I hope this model system can make it in and work with the new api","date":"2013-04-18T22:48:59.033Z","type":"message"}
{"nick":"owenb","message":"bye for now","date":"2013-04-18T22:49:13.476Z","type":"message"}
{"nick":"owenb","message":"bye for now","date":"2013-04-18T22:49:18.758Z","type":"message"}
{"nick":"k1i","message":"later","date":"2013-04-18T22:49:30.755Z","type":"message"}
{"nick":"owenb","message":"don't worry - the stuff you've done will work fine. that area of things won't change much. it's the browser asset serving stuff that's not sorted yet","date":"2013-04-18T22:50:02.190Z","type":"message"}
{"nick":"owenb","message":"right. going!","date":"2013-04-18T22:50:04.518Z","type":"message"}
{"nick":"owenb","message":":)\\","date":"2013-04-18T22:50:05.899Z","type":"message"}
