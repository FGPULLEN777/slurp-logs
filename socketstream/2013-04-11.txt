{"nick":"k1i","date":"2013-04-11T00:10:54.346Z","type":"join"}
{"nick":"k1i","message":"owenb: you on?","date":"2013-04-11T00:11:18.775Z","type":"message"}
{"nick":"cjm","date":"2013-04-11T00:27:56.047Z","type":"join"}
{"nick":"evangenieur","reason":"Remote host closed the connection","date":"2013-04-11T00:58:48.201Z","type":"quit"}
{"nick":"evangenieur","date":"2013-04-11T00:59:23.551Z","type":"join"}
{"nick":"evangenieur","reason":"Ping timeout: 256 seconds","date":"2013-04-11T01:03:50.513Z","type":"quit"}
{"nick":"liorix","reason":"Remote host closed the connection","date":"2013-04-11T01:04:39.006Z","type":"quit"}
{"nick":"liorix","date":"2013-04-11T01:05:11.712Z","type":"join"}
{"nick":"liorix","reason":"Read error: Connection reset by peer","date":"2013-04-11T01:09:05.683Z","type":"quit"}
{"nick":"liorix","date":"2013-04-11T01:09:20.521Z","type":"join"}
{"nick":"colinsullivan","reason":"Quit: Leaving.","date":"2013-04-11T01:59:39.816Z","type":"quit"}
{"nick":"lluad","reason":"Quit: lluad","date":"2013-04-11T02:02:56.910Z","type":"quit"}
{"nick":"zenocon","date":"2013-04-11T02:25:21.413Z","type":"join"}
{"nick":"k1i","reason":"Quit: k1i","date":"2013-04-11T02:28:13.995Z","type":"quit"}
{"nick":"zenocon","reason":"Remote host closed the connection","date":"2013-04-11T02:31:46.006Z","type":"quit"}
{"nick":"k1i","date":"2013-04-11T02:32:59.476Z","type":"join"}
{"nick":"k1i","reason":"Client Quit","date":"2013-04-11T02:34:19.948Z","type":"quit"}
{"nick":"liorix","reason":"Remote host closed the connection","date":"2013-04-11T03:24:55.375Z","type":"quit"}
{"nick":"liorix","date":"2013-04-11T03:25:29.017Z","type":"join"}
{"nick":"liorix","reason":"Ping timeout: 256 seconds","date":"2013-04-11T03:29:57.760Z","type":"quit"}
{"nick":"liorix","date":"2013-04-11T03:56:23.530Z","type":"join"}
{"nick":"colinsullivan","date":"2013-04-11T04:01:53.508Z","type":"join"}
{"nick":"liorix","reason":"Ping timeout: 255 seconds","date":"2013-04-11T04:04:41.462Z","type":"quit"}
{"nick":"k1i","date":"2013-04-11T05:34:51.484Z","type":"join"}
{"nick":"k1i","reason":"Quit: k1i","date":"2013-04-11T06:15:44.191Z","type":"quit"}
{"nick":"liorix","date":"2013-04-11T07:25:37.867Z","type":"join"}
{"nick":"liorix","reason":"Ping timeout: 256 seconds","date":"2013-04-11T07:30:01.843Z","type":"quit"}
{"nick":"liorix","date":"2013-04-11T07:55:41.544Z","type":"join"}
{"nick":"mtsr","date":"2013-04-11T08:15:48.935Z","type":"join"}
{"nick":"evangenieur","date":"2013-04-11T08:57:49.539Z","type":"join"}
{"nick":"liorix","reason":"Remote host closed the connection","date":"2013-04-11T09:06:41.024Z","type":"quit"}
{"nick":"liorix","date":"2013-04-11T09:07:16.516Z","type":"join"}
{"nick":"liorix","reason":"Ping timeout: 252 seconds","date":"2013-04-11T09:11:47.501Z","type":"quit"}
{"nick":"vguerra","date":"2013-04-11T11:05:05.256Z","type":"join"}
{"nick":"evangenieur","reason":"Remote host closed the connection","date":"2013-04-11T11:08:07.755Z","type":"quit"}
{"nick":"evangenieur","date":"2013-04-11T11:08:42.887Z","type":"join"}
{"nick":"evangenieur","reason":"Ping timeout: 256 seconds","date":"2013-04-11T11:13:17.879Z","type":"quit"}
{"nick":"liorix","date":"2013-04-11T13:31:35.894Z","type":"join"}
{"nick":"majek","reason":"Ping timeout: 248 seconds","date":"2013-04-11T14:04:21.672Z","type":"quit"}
{"nick":"majek","date":"2013-04-11T14:04:40.738Z","type":"join"}
{"nick":"zenocon","date":"2013-04-11T14:10:02.441Z","type":"join"}
{"nick":"liorix","reason":"Remote host closed the connection","date":"2013-04-11T14:11:36.888Z","type":"quit"}
{"nick":"liorix","date":"2013-04-11T14:12:12.393Z","type":"join"}
{"nick":"wafflesauce","date":"2013-04-11T14:12:51.968Z","type":"join"}
{"nick":"wafflesauce","message":"is there a way to get a list of users currently subscribed to a specific channel?","date":"2013-04-11T14:13:44.063Z","type":"message"}
{"nick":"zenocon","reason":"Ping timeout: 256 seconds","date":"2013-04-11T14:14:54.477Z","type":"quit"}
{"nick":"liorix","reason":"Ping timeout: 255 seconds","date":"2013-04-11T14:16:41.484Z","type":"quit"}
{"nick":"liorix","date":"2013-04-11T14:33:10.455Z","type":"join"}
{"nick":"lluad","date":"2013-04-11T15:17:32.152Z","type":"join"}
{"nick":"mtsr","reason":"Ping timeout: 240 seconds","date":"2013-04-11T15:32:53.725Z","type":"quit"}
{"nick":"zenocon","date":"2013-04-11T15:40:21.012Z","type":"join"}
{"nick":"vguerra","reason":"Remote host closed the connection","date":"2013-04-11T15:41:00.842Z","type":"quit"}
{"nick":"zenocon","reason":"Ping timeout: 264 seconds","date":"2013-04-11T15:44:55.275Z","type":"quit"}
{"nick":"cjm","reason":"Remote host closed the connection","date":"2013-04-11T15:49:15.233Z","type":"quit"}
{"nick":"liorix","reason":"Remote host closed the connection","date":"2013-04-11T16:52:27.356Z","type":"quit"}
{"nick":"liorix","date":"2013-04-11T16:52:59.877Z","type":"join"}
{"nick":"liorix","reason":"Ping timeout: 256 seconds","date":"2013-04-11T16:57:15.854Z","type":"quit"}
{"nick":"liorix","date":"2013-04-11T17:15:22.557Z","type":"join"}
{"nick":"wafflesauce1","date":"2013-04-11T17:30:44.317Z","type":"join"}
{"nick":"wafflesauce","reason":"Read error: Connection reset by peer","date":"2013-04-11T17:30:44.494Z","type":"quit"}
{"nick":"wafflesauce1","reason":"Quit: Leaving.","date":"2013-04-11T18:45:23.592Z","type":"quit"}
{"nick":"wafflesauce","date":"2013-04-11T18:52:40.034Z","type":"join"}
{"nick":"liorix","reason":"Remote host closed the connection","date":"2013-04-11T19:32:00.293Z","type":"quit"}
{"nick":"liorix","date":"2013-04-11T19:32:34.361Z","type":"join"}
{"nick":"liorix_","date":"2013-04-11T19:35:57.478Z","type":"join"}
{"nick":"liorix","reason":"Read error: Connection reset by peer","date":"2013-04-11T19:36:37.230Z","type":"quit"}
{"nick":"dennismartensson","date":"2013-04-11T19:40:01.050Z","type":"join"}
{"nick":"k1i","date":"2013-04-11T19:58:04.144Z","type":"join"}
{"nick":"dennismartensson","reason":"Remote host closed the connection","date":"2013-04-11T20:03:14.346Z","type":"quit"}
{"nick":"wafflesauce","date":"2013-04-11T20:28:37.536Z","type":"part"}
{"nick":"owenb","message":"hey k1i","date":"2013-04-11T20:45:25.830Z","type":"message"}
{"nick":"k1i","message":"owenb: holy shit","date":"2013-04-11T20:46:18.166Z","type":"message"}
{"nick":"k1i","message":"owenb: been trying to get ahold of yo","date":"2013-04-11T20:46:22.192Z","type":"message"}
{"nick":"k1i","message":"so, I saw your initial realtime model implementation","date":"2013-04-11T20:46:48.430Z","type":"message"}
{"nick":"k1i","message":"and I'd like to try and convince you to change it a bit","date":"2013-04-11T20:46:52.497Z","type":"message"}
{"nick":"owenb","message":"i'm not on here at a lot at the mo. will try to be more when everything is released. focussing on that right now","date":"2013-04-11T20:46:52.986Z","type":"message"}
{"nick":"owenb","message":"it got committed by mistake. i've pulled it today","date":"2013-04-11T20:47:09.450Z","type":"message"}
{"nick":"k1i","message":"well","date":"2013-04-11T20:47:16.561Z","type":"message"}
{"nick":"owenb","message":"it's totally and utterly not ready","date":"2013-04-11T20:47:17.406Z","type":"message"}
{"nick":"k1i","message":"I'd like to show you my take on it","date":"2013-04-11T20:47:23.689Z","type":"message"}
{"nick":"owenb","message":"ok sure","date":"2013-04-11T20:47:27.107Z","type":"message"}
{"nick":"k1i","message":"im reviewing your last commit","date":"2013-04-11T20:47:36.512Z","type":"message"}
{"nick":"k1i","message":"just to get up to speed","date":"2013-04-11T20:47:46.822Z","type":"message"}
{"nick":"k1i","message":"however, I saw your initial realtime model implementation, I think it needs to be altered in a few (fairly simple) ways","date":"2013-04-11T20:48:07.893Z","type":"message"}
{"nick":"k1i","message":"i began writing a proof of concept","date":"2013-04-11T20:48:14.911Z","type":"message"}
{"nick":"owenb","message":"for sure","date":"2013-04-11T20:48:43.685Z","type":"message"}
{"nick":"owenb","message":"sounds good :)","date":"2013-04-11T20:48:49.259Z","type":"message"}
{"nick":"k1i","message":"I believe you should have a service directory /services/models/mymodel.js","date":"2013-04-11T20:48:51.187Z","type":"message"}
{"nick":"k1i","message":"the model in there would then have 3+ exports","date":"2013-04-11T20:49:00.017Z","type":"message"}
{"nick":"k1i","message":"exports.config, exports.class, exports.instance","date":"2013-04-11T20:49:06.509Z","type":"message"}
{"nick":"k1i","message":"exports.config would mainly contain \"Driver\" - a la, \"mongoose,\" \"squel,\" etc.","date":"2013-04-11T20:49:22.610Z","type":"message"}
{"nick":"k1i","message":"exports.instance and exports.class would get merged into the prototype/class function respecitvely and proxied over the wire","date":"2013-04-11T20:49:41.809Z","type":"message"}
{"nick":"k1i","message":"and then, upon the initial load of the app, it would find the model file, create an API tree, and then require() the driver (rtm-mongoose) and merge those proxied methods in","date":"2013-04-11T20:50:11.058Z","type":"message"}
{"nick":"k1i","message":"to use a model on the clientside, you need to do something like ss.models.load(\"book\", (loaded) ->); - to grab the proxied methods, etc. after runtime","date":"2013-04-11T20:51:10.389Z","type":"message"}
{"nick":"k1i","message":"and then you could just var myBook = new ss.models[\"Book\"]","date":"2013-04-11T20:51:31.319Z","type":"message"}
{"nick":"k1i","message":"the trickiest part, which, I found a solution to, would be instance methods","date":"2013-04-11T20:51:41.381Z","type":"message"}
{"nick":"k1i","message":"if I call an instance function that needs to be handled remotely, you'd need to transfer that individual model's state","date":"2013-04-11T20:51:52.279Z","type":"message"}
{"nick":"owenb","message":"hmm yes","date":"2013-04-11T20:52:09.646Z","type":"message"}
{"nick":"k1i","message":"in the individual \"driver,\" you could specify a function (defaulting to object ID)","date":"2013-04-11T20:52:16.614Z","type":"message"}
{"nick":"k1i","message":"that would be used for state persistence","date":"2013-04-11T20:52:27.854Z","type":"message"}
{"nick":"k1i","message":"in backbone, ID is used (and is good enough)","date":"2013-04-11T20:52:31.473Z","type":"message"}
{"nick":"k1i","message":"this would obviously be driver-specific","date":"2013-04-11T20:52:37.946Z","type":"message"}
{"nick":"k1i","message":"but other than that, it seemed like a pretty elegant and simple way to have real class/instance methods proxied over the wire","date":"2013-04-11T20:52:52.729Z","type":"message"}
{"nick":"k1i","message":"exports.config, exports.class, exports.instance","date":"2013-04-11T20:53:17.172Z","type":"message"}
{"nick":"k1i","message":"and potentially an exports.instance.local/remote","date":"2013-04-11T20:53:24.031Z","type":"message"}
{"nick":"owenb","message":"well it's just a start right now, but i'd love to work with you on this when i get chance to revisit it (likely to be may now as I'm focussing on getting socketstream-server as ready as it can be for Realtime Conf)","date":"2013-04-11T20:53:39.072Z","type":"message"}
{"nick":"k1i","message":"for functions that can use the model's own (this) attributes on the clientside to do fthings","date":"2013-04-11T20:53:40.840Z","type":"message"}
{"nick":"owenb","message":"so here are my thoughts","date":"2013-04-11T20:53:59.739Z","type":"message"}
{"nick":"owenb","message":"in terms of where i want to go next","date":"2013-04-11T20:54:04.709Z","type":"message"}
{"nick":"owenb","message":"first of all i still would prefer to keep services independent of each other. that said, i think it's reasonable to say if you want to use rts-angular you must install rts-models","date":"2013-04-11T20:54:46.562Z","type":"message"}
{"nick":"owenb","message":"hence rts-angular are just client-side bindings to the rts-models event emitter","date":"2013-04-11T20:55:04.729Z","type":"message"}
{"nick":"owenb","message":"that way you can still have /services/models","date":"2013-04-11T20:55:12.915Z","type":"message"}
{"nick":"owenb","message":"and switch to backbone later on","date":"2013-04-11T20:55:16.708Z","type":"message"}
{"nick":"owenb","message":"without having to change anything","date":"2013-04-11T20:55:19.817Z","type":"message"}
{"nick":"owenb","message":"so realtime models should just give the simplest and most lightweight bindings to the client possible","date":"2013-04-11T20:55:50.677Z","type":"message"}
{"nick":"k1i","message":"yep","date":"2013-04-11T20:56:02.639Z","type":"message"}
{"nick":"owenb","message":"and then separate wrappers can be made for angular, backbone, ember","date":"2013-04-11T20:56:05.526Z","type":"message"}
{"nick":"owenb","message":"i'm wanting to take a closer look here: https://www.firebase.com/blog/2013-03-29-firebase-bindings-for-angular.html","date":"2013-04-11T20:56:17.668Z","type":"message"}
{"nick":"owenb","message":"we could totally use this for SS","date":"2013-04-11T20:56:25.285Z","type":"message"}
{"nick":"k1i","message":"I really want transparent proxying of instance/class methods","date":"2013-04-11T20:56:42.149Z","type":"message"}
{"nick":"owenb","message":"in fact if you look at how i attempted to do the live models, the approach happens to be the same","date":"2013-04-11T20:56:46.981Z","type":"message"}
{"nick":"owenb","message":"yeah","date":"2013-04-11T20:56:48.814Z","type":"message"}
{"nick":"owenb","message":"this is going to get a lot harder","date":"2013-04-11T20:56:52.864Z","type":"message"}
{"nick":"k1i","message":"right now I only saw class methods","date":"2013-04-11T20:56:55.029Z","type":"message"}
{"nick":"owenb","message":"but i know what you're saying","date":"2013-04-11T20:56:56.518Z","type":"message"}
{"nick":"k1i","message":"proxied","date":"2013-04-11T20:56:56.648Z","type":"message"}
{"nick":"k1i","message":"in your initial push","date":"2013-04-11T20:57:00.639Z","type":"message"}
{"nick":"owenb","message":"but it means having to work out where and how to do validatoins","date":"2013-04-11T20:57:06.215Z","type":"message"}
{"nick":"owenb","message":"can they be done on the client? or do they need the server","date":"2013-04-11T20:57:13.860Z","type":"message"}
{"nick":"k1i","message":"they need to be doable in both places with the same code","date":"2013-04-11T20:57:20.001Z","type":"message"}
{"nick":"owenb","message":"anyway - other things to consider:","date":"2013-04-11T20:57:22.050Z","type":"message"}
{"nick":"k1i","message":"exports.validations - in the model file","date":"2013-04-11T20:57:26.200Z","type":"message"}
{"nick":"owenb","message":"event streams","date":"2013-04-11T20:57:26.754Z","type":"message"}
{"nick":"owenb","message":"computed values","date":"2013-04-11T20:57:39.287Z","type":"message"}
{"nick":"k1i","message":"and in the exports.config in the model, you could override the default validators","date":"2013-04-11T20:57:39.789Z","type":"message"}
{"nick":"owenb","message":"ok i see","date":"2013-04-11T20:57:45.174Z","type":"message"}
{"nick":"owenb","message":"so i tried making a realime dashboard using the realtime-models thing i'd done so far","date":"2013-04-11T20:58:08.607Z","type":"message"}
{"nick":"owenb","message":"it's hard","date":"2013-04-11T20:58:09.910Z","type":"message"}
{"nick":"k1i","message":"exports.config validatorModule defaults to ss-validators, but, someone could easily just put another validator in there that will require() and follow the same strategy","date":"2013-04-11T20:58:12.438Z","type":"message"}
{"nick":"owenb","message":"because a lot of values are computed","date":"2013-04-11T20:58:14.726Z","type":"message"}
{"nick":"k1i","message":"what do you mean","date":"2013-04-11T20:58:44.607Z","type":"message"}
{"nick":"owenb","message":"so i had a model called totalHits","date":"2013-04-11T20:58:55.456Z","type":"message"}
{"nick":"owenb","message":"and i find a record on that","date":"2013-04-11T20:59:01.232Z","type":"message"}
{"nick":"owenb","message":"called something like 'widget1'","date":"2013-04-11T20:59:08.466Z","type":"message"}
{"nick":"owenb","message":"so give me the total hits for widget 1","date":"2013-04-11T20:59:16.022Z","type":"message"}
{"nick":"owenb","message":"but to caculate that i need to do a sum of all keys in redis","date":"2013-04-11T20:59:29.882Z","type":"message"}
{"nick":"owenb","message":"so the data is not real, it's calculated","date":"2013-04-11T20:59:36.186Z","type":"message"}
{"nick":"owenb","message":"so either we say realtime models is not for that, or we find a way to do this","date":"2013-04-11T20:59:58.850Z","type":"message"}
{"nick":"k1i","message":"uh","date":"2013-04-11T21:00:03.246Z","type":"message"}
{"nick":"k1i","message":"why not just have a server-proxied class method","date":"2013-04-11T21:00:08.798Z","type":"message"}
{"nick":"k1i","message":"err","date":"2013-04-11T21:00:11.966Z","type":"message"}
{"nick":"k1i","message":"this is a server-proxied instance method","date":"2013-04-11T21:00:16.002Z","type":"message"}
{"nick":"k1i","message":"so in the clientside","date":"2013-04-11T21:00:17.900Z","type":"message"}
{"nick":"k1i","message":"you have var widget1 = new ss.models[\"widget1\"];","date":"2013-04-11T21:00:32.342Z","type":"message"}
{"nick":"k1i","message":"err","date":"2013-04-11T21:00:44.583Z","type":"message"}
{"nick":"k1i","message":"sorry","date":"2013-04-11T21:00:45.109Z","type":"message"}
{"nick":"k1i","message":"var widget1 = new ss.models[\"totalHits\"].find(\"widget1\");","date":"2013-04-11T21:01:17.783Z","type":"message"}
{"nick":"k1i","message":"widget1.totalHits();","date":"2013-04-11T21:01:26.881Z","type":"message"}
{"nick":"k1i","message":"the ID of the model gets proxied over the wire and the model gets re-instantiated on the server-side, and the function gets called","date":"2013-04-11T21:01:55.724Z","type":"message"}
{"nick":"k1i","message":"but the calling convention is the same on both the client and the server","date":"2013-04-11T21:02:05.834Z","type":"message"}
{"nick":"owenb","message":"sure that's ok, but what happens when the data changes","date":"2013-04-11T21:02:22.957Z","type":"message"}
{"nick":"owenb","message":"and there is a new key created","date":"2013-04-11T21:02:27.839Z","type":"message"}
{"nick":"k1i","message":"it gets recalculatd","date":"2013-04-11T21:02:28.088Z","type":"message"}
{"nick":"k1i","message":"describe to me what totalHits looks like","date":"2013-04-11T21:02:42.298Z","type":"message"}
{"nick":"owenb","message":"it's a redis list. so i rpush() another key onto the list","date":"2013-04-11T21:02:57.677Z","type":"message"}
{"nick":"k1i","message":"can you describe it in an SQL fashion","date":"2013-04-11T21:03:14.582Z","type":"message"}
{"nick":"owenb","message":"but i also want to get several metrics from this","date":"2013-04-11T21:03:16.878Z","type":"message"}
{"nick":"owenb","message":"which change in realtime","date":"2013-04-11T21:03:20.689Z","type":"message"}
{"nick":"owenb","message":"sure","date":"2013-04-11T21:03:22.556Z","type":"message"}
{"nick":"owenb","message":"so i INSERT a row","date":"2013-04-11T21:03:29.038Z","type":"message"}
{"nick":"k1i","message":"into a table with what schema","date":"2013-04-11T21:03:33.943Z","type":"message"}
{"nick":"owenb","message":"INSERT useragent, widgetVersion, VALUES 'MSIE\", 'widget1'","date":"2013-04-11T21:04:00.191Z","type":"message"}
{"nick":"owenb","message":"something like that","date":"2013-04-11T21:04:02.049Z","type":"message"}
{"nick":"owenb","message":"now i want my dashboard to display the total number of hits for widget 1 and widget 2","date":"2013-04-11T21:04:14.597Z","type":"message"}
{"nick":"owenb","message":"in realtime, everytime there is a change to the data","date":"2013-04-11T21:04:26.057Z","type":"message"}
{"nick":"owenb","message":"but i also want a realtime conversion rate","date":"2013-04-11T21:04:32.072Z","type":"message"}
{"nick":"owenb","message":"which uses the CLICKS table ;)","date":"2013-04-11T21:04:43.464Z","type":"message"}
{"nick":"owenb","message":"so when either the HITS or the CLICKS table changes, my conversion rate needs to change too","date":"2013-04-11T21:05:08.837Z","type":"message"}
{"nick":"k1i","message":"the issue here","date":"2013-04-11T21:05:12.203Z","type":"message"}
{"nick":"k1i","message":"ah","date":"2013-04-11T21:05:13.230Z","type":"message"}
{"nick":"k1i","message":"okay","date":"2013-04-11T21:05:14.135Z","type":"message"}
{"nick":"k1i","message":"so","date":"2013-04-11T21:05:14.797Z","type":"message"}
{"nick":"k1i","message":"rails solved this already","date":"2013-04-11T21:05:15.503Z","type":"message"}
{"nick":"k1i","message":"you need to do this","date":"2013-04-11T21:05:17.126Z","type":"message"}
{"nick":"k1i","message":"TABLE \"widgets\" id:integer, name:string, created_at:datetime, updated_at:datetime","date":"2013-04-11T21:05:46.111Z","type":"message"}
{"nick":"k1i","message":"TABLE \"hits\" id:integer, widget_id:integer, agent:string","date":"2013-04-11T21:06:03.727Z","type":"message"}
{"nick":"k1i","message":"TABLE \"clicks\" id:integer, widget_id:integer","date":"2013-04-11T21:06:12.488Z","type":"message"}
{"nick":"k1i","message":"part of the driver that handles the relationship between hits/widgets (in this case, a MySQL driver)","date":"2013-04-11T21:06:34.054Z","type":"message"}
{"nick":"k1i","message":"will \"touch\" (update updated_at) whenever hits/clicks have a record created with the widget_id of the widget you are watching","date":"2013-04-11T21:06:56.081Z","type":"message"}
{"nick":"k1i","message":"so the individual record in widgets will get updated whenever a related record is created","date":"2013-04-11T21:07:09.742Z","type":"message"}
{"nick":"k1i","message":"this is how cache breaking is handled in rails, and this is essentially cache breaking","date":"2013-04-11T21:07:20.924Z","type":"message"}
{"nick":"owenb","message":"yup","date":"2013-04-11T21:07:27.639Z","type":"message"}
{"nick":"owenb","message":"many of the time it's just simple counters","date":"2013-04-11T21:07:37.043Z","type":"message"}
{"nick":"k1i","message":"so as soon as that main widget is changed","date":"2013-04-11T21:07:41.655Z","type":"message"}
{"nick":"owenb","message":"and we may well decide all this is too complicated for realtime models","date":"2013-04-11T21:07:45.904Z","type":"message"}
{"nick":"k1i","message":"you redraw all of the dependent data","date":"2013-04-11T21:07:47.588Z","type":"message"}
{"nick":"k1i","message":"I don't think so at all","date":"2013-04-11T21:07:52.603Z","type":"message"}
{"nick":"owenb","message":"and that realtime models should just deal with real tangible data","date":"2013-04-11T21:07:56.350Z","type":"message"}
{"nick":"k1i","message":"no","date":"2013-04-11T21:08:03.757Z","type":"message"}
{"nick":"k1i","message":"this is a widget","date":"2013-04-11T21:08:07.572Z","type":"message"}
{"nick":"k1i","message":"errr","date":"2013-04-11T21:08:08.718Z","type":"message"}
{"nick":"k1i","message":"this is an instance method on the model \"widget\"","date":"2013-04-11T21:08:17.888Z","type":"message"}
{"nick":"k1i","message":"so whenever you call the instance method, it will re-count everything, etc.","date":"2013-04-11T21:08:39.839Z","type":"message"}
{"nick":"k1i","message":"but the \"order to recall\" is based on observing the \"updated_at\" in this case","date":"2013-04-11T21:08:52.519Z","type":"message"}
{"nick":"k1i","message":"this is totally a datastore-driver related thing","date":"2013-04-11T21:08:58.855Z","type":"message"}
{"nick":"k1i","message":"realtime-model isn't supposed to be an ORM","date":"2013-04-11T21:09:08.213Z","type":"message"}
{"nick":"k1i","message":"it is supposed to be a proxy (at least my take on it) between clientside model methods and serverside model methods/definition","date":"2013-04-11T21:09:23.857Z","type":"message"}
{"nick":"owenb","message":"yes","date":"2013-04-11T21:09:35.275Z","type":"message"}
{"nick":"owenb","message":"i really don't want to get into orm","date":"2013-04-11T21:09:39.819Z","type":"message"}
{"nick":"owenb","message":"someone else can do that if they want","date":"2013-04-11T21:09:43.524Z","type":"message"}
{"nick":"k1i","message":"the mongoose driver would handle that kind of a scenario entirely different than the activerecord-like functionality I just described","date":"2013-04-11T21:09:47.966Z","type":"message"}
{"nick":"owenb","message":"it's an observable proxy i guess","date":"2013-04-11T21:09:55.544Z","type":"message"}
{"nick":"owenb","message":"yes","date":"2013-04-11T21:10:00.858Z","type":"message"}
{"nick":"k1i","message":"as would the redis one","date":"2013-04-11T21:10:06.637Z","type":"message"}
{"nick":"k1i","message":"but, the main thing would stay the same","date":"2013-04-11T21:10:17.595Z","type":"message"}
{"nick":"k1i","message":"instance method to calculate those values","date":"2013-04-11T21:10:21.701Z","type":"message"}
{"nick":"k1i","message":"an observe on the model itself","date":"2013-04-11T21:10:25.948Z","type":"message"}
{"nick":"k1i","message":"and whenever the model updates, the observe fires and the function is recalled","date":"2013-04-11T21:10:39.228Z","type":"message"}
{"nick":"k1i","message":"now, one cool thing that can be done at this point, though, is cacheable functions","date":"2013-04-11T21:10:47.138Z","type":"message"}
{"nick":"k1i","message":"the datastore driver would internally cache the output of those queries","date":"2013-04-11T21:11:03.121Z","type":"message"}
{"nick":"k1i","message":"(not related to realtime-model)","date":"2013-04-11T21:11:10.103Z","type":"message"}
{"nick":"k1i","message":"there are some assumptions that will need to be made, though, to make things like instance methods work over the wire","date":"2013-04-11T21:12:03.732Z","type":"message"}
{"nick":"owenb","message":"yes indeed","date":"2013-04-11T21:13:40.968Z","type":"message"}
{"nick":"k1i","message":"the biggest problem I had when doing this","date":"2013-04-11T21:14:05.654Z","type":"message"}
{"nick":"owenb","message":"well i'm unlikely to get chance to do any more work in this area for a while. if you fancy giving it a go, i'd love to see what you come up with","date":"2013-04-11T21:14:11.374Z","type":"message"}
{"nick":"k1i","message":"was transmitting the dynamically generated model definitions to the client","date":"2013-04-11T21:14:11.550Z","type":"message"}
{"nick":"k1i","message":"since, system.js is generated as soon as the server starts","date":"2013-04-11T21:14:25.383Z","type":"message"}
{"nick":"owenb","message":"i really don't think you should","date":"2013-04-11T21:14:29.567Z","type":"message"}
{"nick":"owenb","message":"just send the instructions to reproduce that","date":"2013-04-11T21:14:34.347Z","type":"message"}
{"nick":"k1i","message":"what I am saying is","date":"2013-04-11T21:14:42.097Z","type":"message"}
{"nick":"owenb","message":"system js will one day be inside a pre-build minified file on a CDN","date":"2013-04-11T21:14:50.961Z","type":"message"}
{"nick":"k1i","message":"right now, without a way to send models on the initial pageload since system.js is static","date":"2013-04-11T21:14:52.763Z","type":"message"}
{"nick":"k1i","message":"ok","date":"2013-04-11T21:14:54.923Z","type":"message"}
{"nick":"k1i","message":"I have to run an ss.model.get(\"modelname\")","date":"2013-04-11T21:15:02.514Z","type":"message"}
{"nick":"k1i","message":"to download a copy of the model function prototype","date":"2013-04-11T21:15:09.117Z","type":"message"}
{"nick":"owenb","message":"yes","date":"2013-04-11T21:15:10.665Z","type":"message"}
{"nick":"owenb","message":"indeed","date":"2013-04-11T21:15:16.965Z","type":"message"}
{"nick":"owenb","message":"but only for the ones you need","date":"2013-04-11T21:15:21.157Z","type":"message"}
{"nick":"k1i","message":"and this is intended functionality?","date":"2013-04-11T21:15:22.698Z","type":"message"}
{"nick":"k1i","message":"yea","date":"2013-04-11T21:15:23.629Z","type":"message"}
{"nick":"owenb","message":"well it works. but i'm not yet convinced we need this at all","date":"2013-04-11T21:15:46.064Z","type":"message"}
{"nick":"owenb","message":"but i'm happy to see it in action","date":"2013-04-11T21:15:50.900Z","type":"message"}
{"nick":"k1i","message":"what do you mean?","date":"2013-04-11T21:15:51.641Z","type":"message"}
{"nick":"owenb","message":"and decide","date":"2013-04-11T21:15:52.595Z","type":"message"}
{"nick":"k1i","message":"proxying?","date":"2013-04-11T21:15:54.184Z","type":"message"}
{"nick":"owenb","message":"to be able to define models and methods on the server and get them sent to the client","date":"2013-04-11T21:16:09.339Z","type":"message"}
{"nick":"k1i","message":"i want to be able to call functions the exact same way on the server as the client","date":"2013-04-11T21:16:25.415Z","type":"message"}
{"nick":"k1i","message":"var myWidget = ss.models.widget.find(1);","date":"2013-04-11T21:16:38.816Z","type":"message"}
{"nick":"k1i","message":"myWidget.changeColor(\"blue\");","date":"2013-04-11T21:16:48.061Z","type":"message"}
{"nick":"k1i","message":"or ss.models.widget.deleteAll","date":"2013-04-11T21:16:54.161Z","type":"message"}
{"nick":"owenb","message":"but if your function needs data from the server it's hard. a lot of magic needs to happen to make this a reality.","date":"2013-04-11T21:16:55.272Z","type":"message"}
{"nick":"owenb","message":"then you have to think about security","date":"2013-04-11T21:17:03.190Z","type":"message"}
{"nick":"owenb","message":"there's a lot to conisder","date":"2013-04-11T21:17:10.223Z","type":"message"}
{"nick":"k1i","message":"no, because any function that needs data form the server just gets executed there anyway","date":"2013-04-11T21:17:14.365Z","type":"message"}
{"nick":"k1i","message":"that isnt a local function","date":"2013-04-11T21:17:17.322Z","type":"message"}
{"nick":"k1i","message":"it's a remotely proxied functio","date":"2013-04-11T21:17:22.091Z","type":"message"}
{"nick":"k1i","message":"a la rts-rpc","date":"2013-04-11T21:17:25.441Z","type":"message"}
{"nick":"owenb","message":"i see","date":"2013-04-11T21:17:26.292Z","type":"message"}
{"nick":"owenb","message":"then why not use rpc-style? just execute an action?","date":"2013-04-11T21:17:41.688Z","type":"message"}
{"nick":"owenb","message":"it's more explicit","date":"2013-04-11T21:17:47.740Z","type":"message"}
{"nick":"owenb","message":"so you would still have delete all","date":"2013-04-11T21:17:55.899Z","type":"message"}
{"nick":"owenb","message":"etc","date":"2013-04-11T21:17:56.669Z","type":"message"}
{"nick":"owenb","message":"but you pass it as a string","date":"2013-04-11T21:18:00.165Z","type":"message"}
{"nick":"owenb","message":"and hence no overhead","date":"2013-04-11T21:18:03.999Z","type":"message"}
{"nick":"owenb","message":"(do discover what methods i can call)","date":"2013-04-11T21:18:10.424Z","type":"message"}
{"nick":"owenb","message":"*to","date":"2013-04-11T21:18:17.088Z","type":"message"}
{"nick":"k1i","message":"because","date":"2013-04-11T21:19:38.020Z","type":"message"}
{"nick":"k1i","message":"of the serverside eventuality","date":"2013-04-11T21:19:42.539Z","type":"message"}
{"nick":"k1i","message":"also, because you are persisting properties within the model itself","date":"2013-04-11T21:19:53.472Z","type":"message"}
{"nick":"k1i","message":"like backbone","date":"2013-04-11T21:19:55.507Z","type":"message"}
{"nick":"k1i","message":"and not every function is going to be remote","date":"2013-04-11T21:20:02.359Z","type":"message"}
{"nick":"k1i","message":"there will be local ones that do simple reformatting, etc. that can easily be executed without a round-trip across the wire","date":"2013-04-11T21:20:12.424Z","type":"message"}
{"nick":"k1i","message":"I hate that model.execute() shit that meteor uses","date":"2013-04-11T21:20:18.101Z","type":"message"}
{"nick":"k1i","message":"if the model is the exact same on the client as the server, you can re-use code that does cool stuff","date":"2013-04-11T21:20:43.636Z","type":"message"}
{"nick":"k1i","message":"myModel.find is the same on the server as the client","date":"2013-04-11T21:20:54.601Z","type":"message"}
{"nick":"k1i","message":"and mainly because instance methods require this","date":"2013-04-11T21:21:22.961Z","type":"message"}
{"nick":"k1i","message":"that model.execute() shit works for class methods, but if you are going to emulate activerecord (like I hope to do), the model has to exist in memory in the client with instance methods attached","date":"2013-04-11T21:21:58.031Z","type":"message"}
{"nick":"k1i","message":"honestly it's just a loop that modifies the function.object.prototype","date":"2013-04-11T21:22:07.944Z","type":"message"}
{"nick":"owenb","message":"i see","date":"2013-04-11T21:22:19.720Z","type":"message"}
{"nick":"k1i","message":"this is something I wrote for proof of concept","date":"2013-04-11T21:22:27.679Z","type":"message"}
{"nick":"k1i","message":"right now, with realtime-model and rts-angular","date":"2013-04-11T21:22:35.116Z","type":"message"}
{"nick":"k1i","message":"the clientside has no idea of the \"possible functions\" that can be executed","date":"2013-04-11T21:22:43.470Z","type":"message"}
{"nick":"owenb","message":"no. but i would argue, nor should it","date":"2013-04-11T21:22:54.621Z","type":"message"}
{"nick":"k1i","message":"or default values, or IDs, or anything","date":"2013-04-11T21:22:55.219Z","type":"message"}
{"nick":"owenb","message":"the only time it's useful really is if you want to autocomplete on the Chrome console","date":"2013-04-11T21:23:10.907Z","type":"message"}
{"nick":"k1i","message":"I believe function myModel() should essentially have the same members/methods on the client as the server","date":"2013-04-11T21:23:13.680Z","type":"message"}
{"nick":"k1i","message":"but on the clientside, some of these are proxied to RPC","date":"2013-04-11T21:23:23.731Z","type":"message"}
{"nick":"k1i","message":"and then any code you write can be used either place seamlessly","date":"2013-04-11T21:23:32.982Z","type":"message"}
{"nick":"k1i","message":"but yeah, the autocomplete would be sweet, too.","date":"2013-04-11T21:23:42.678Z","type":"message"}
{"nick":"owenb","message":"i just worry about the 'discovery lag'","date":"2013-04-11T21:23:43.928Z","type":"message"}
{"nick":"owenb","message":"but it only benefits the developer debugging","date":"2013-04-11T21:23:54.174Z","type":"message"}
{"nick":"owenb","message":"it hurts things in productoin","date":"2013-04-11T21:23:59.021Z","type":"message"}
{"nick":"k1i","message":"well","date":"2013-04-11T21:24:03.516Z","type":"message"}
{"nick":"owenb","message":"where you can't do anything with a model before you first download it's prototype","date":"2013-04-11T21:24:07.621Z","type":"message"}
{"nick":"k1i","message":"the only reason that is the case is because you cant send the prototype over the wire with the client load","date":"2013-04-11T21:24:13.189Z","type":"message"}
{"nick":"k1i","message":"backbone has been doing this forever","date":"2013-04-11T21:24:18.654Z","type":"message"}
{"nick":"owenb","message":"sure","date":"2013-04-11T21:24:22.898Z","type":"message"}
{"nick":"k1i","message":"you send every model prototype on initial pageload","date":"2013-04-11T21:24:24.141Z","type":"message"}
{"nick":"owenb","message":"i think we must think about that too","date":"2013-04-11T21:24:27.154Z","type":"message"}
{"nick":"owenb","message":"backbone","date":"2013-04-11T21:24:28.185Z","type":"message"}
{"nick":"owenb","message":"a lot of people put their model logic in there","date":"2013-04-11T21:24:38.123Z","type":"message"}
{"nick":"k1i","message":"the problem is, SS doesn't allow me to send model prototypes because of how system.js is generated","date":"2013-04-11T21:24:39.641Z","type":"message"}
{"nick":"k1i","message":"shit","date":"2013-04-11T21:24:40.265Z","type":"message"}
{"nick":"k1i","message":"I don't mind putting the model prototypes into the client section of system.js","date":"2013-04-11T21:24:58.699Z","type":"message"}
{"nick":"k1i","message":"but","date":"2013-04-11T21:24:59.701Z","type":"message"}
{"nick":"evangenieur","date":"2013-04-11T21:25:06.314Z","type":"join"}
{"nick":"k1i","message":"there is no way to send them at the moment","date":"2013-04-11T21:25:08.295Z","type":"message"}
{"nick":"owenb","message":"if you do it means you expose all methods to every hacker. i'm not advocating security through obscurity here, but it something to think about","date":"2013-04-11T21:25:37.563Z","type":"message"}
{"nick":"k1i","message":"I can't access /services/models/mymodel.js when system.js is generated","date":"2013-04-11T21:25:38.029Z","type":"message"}
{"nick":"owenb","message":"no","date":"2013-04-11T21:25:46.504Z","type":"message"}
{"nick":"k1i","message":"yes, it does expose every method, but, yeah, security through obscurity isn't a good idea","date":"2013-04-11T21:26:06.919Z","type":"message"}
{"nick":"k1i","message":"it doesn't expose any remote function prototypes","date":"2013-04-11T21:26:18.483Z","type":"message"}
{"nick":"k1i","message":"only their names.","date":"2013-04-11T21:26:20.513Z","type":"message"}
{"nick":"owenb","message":"i think you should write a solution like this. one that downloads the prototypes","date":"2013-04-11T21:26:37.537Z","type":"message"}
{"nick":"owenb","message":"over the ws","date":"2013-04-11T21:26:41.557Z","type":"message"}
{"nick":"k1i","message":"also, theoretically, you should be able to have private functions as well - this is just an effect of rails being shitty","date":"2013-04-11T21:26:41.719Z","type":"message"}
{"nick":"k1i","message":"err","date":"2013-04-11T21:26:42.848Z","type":"message"}
{"nick":"k1i","message":"JS being shitty","date":"2013-04-11T21:26:44.340Z","type":"message"}
{"nick":"owenb","message":"yeah","date":"2013-04-11T21:26:47.580Z","type":"message"}
{"nick":"k1i","message":"shit, maybe we assume some sane defaults","date":"2013-04-11T21:27:10.304Z","type":"message"}
{"nick":"k1i","message":"and do like","date":"2013-04-11T21:27:13.262Z","type":"message"}
{"nick":"k1i","message":"exports.methods.private.class = { findAllBlueWidgets: -> };","date":"2013-04-11T21:27:35.564Z","type":"message"}
{"nick":"owenb","message":"personally, unless it works like a dream, i'd rather stick with a rpc-esque solution which just monitors which client sees what records and notifies them of updates. but then again i may be wrong and find what you're advocating is just what i want","date":"2013-04-11T21:27:43.106Z","type":"message"}
{"nick":"k1i","message":"exports.methods.public.instance = { deleteMe: -> };","date":"2013-04-11T21:27:47.431Z","type":"message"}
{"nick":"k1i","message":"I believe the notification of update thing is 100% the job of realtime model","date":"2013-04-11T21:28:16.767Z","type":"message"}
{"nick":"owenb","message":"for sure","date":"2013-04-11T21:28:23.158Z","type":"message"}
{"nick":"k1i","message":"also","date":"2013-04-11T21:28:25.792Z","type":"message"}
{"nick":"k1i","message":"just some food for thought","date":"2013-04-11T21:28:28.350Z","type":"message"}
{"nick":"k1i","message":"everyone hates the meteor.call bullshit.","date":"2013-04-11T21:28:32.467Z","type":"message"}
{"nick":"k1i","message":"everyone.","date":"2013-04-11T21:28:33.506Z","type":"message"}
{"nick":"k1i","message":"they advertise \"models\" in both places (client/server), but everyone ends up using meteor.call because of the limitations of functions you can send to the client","date":"2013-04-11T21:28:51.553Z","type":"message"}
{"nick":"k1i","message":"a la, meteor wants what I am describing, but can't do it do to architectural concerns","date":"2013-04-11T21:29:07.100Z","type":"message"}
{"nick":"k1i","message":"the Meteor.call way of doing things is totally unnecessary and makes it so your clientside code has to look different than your serverside code","date":"2013-04-11T21:29:29.827Z","type":"message"}
{"nick":"k1i","message":"also, some more food for thought","date":"2013-04-11T21:31:21.292Z","type":"message"}
{"nick":"k1i","message":"if I want to make \"Mongoose in the client\" a la minimongo, I'd have to rewrite everything in mongoose to make use of the model.rpc(\"func\") notation rather than just copy/paste and roll","date":"2013-04-11T21:31:53.293Z","type":"message"}
{"nick":"k1i","message":"it's like browserify - I should be able to use node modules in the client, rather than adding abstraction that makes that impossible","date":"2013-04-11T21:32:14.795Z","type":"message"}
{"nick":"owenb","message":"i think you have the huge advantage here of spending a lot of time with Meteor. something I haven't really done. i just keep abreast of the changes and am very friendly with the devs. i like what they have done, but I'm sure there are ways to improve the model system","date":"2013-04-11T21:32:19.290Z","type":"message"}
{"nick":"k1i","message":"I never thought about this before","date":"2013-04-11T21:32:33.660Z","type":"message"}
{"nick":"k1i","message":"but, this is the biggest reason for the \"proxied prototypes\" method","date":"2013-04-11T21:32:44.862Z","type":"message"}
{"nick":"k1i","message":"if I want to make Mongoose work in the client, mongoose assumes all models are javascript functions in their own \"way\", and you can call functions on them just as i've described","date":"2013-04-11T21:33:03.626Z","type":"message"}
{"nick":"k1i","message":"some of the functions that mongoose has are combinations of other class/instance methods in mongoose","date":"2013-04-11T21:33:21.127Z","type":"message"}
{"nick":"k1i","message":"if you change the calling convention, that entire driver becomes unusable","date":"2013-04-11T21:33:34.376Z","type":"message"}
{"nick":"k1i","message":"I havent spent too much time with meteor, but I've dug heavily into the source of both meteor and derby","date":"2013-04-11T21:34:12.975Z","type":"message"}
{"nick":"k1i","message":"I know that the model.rpc() method thing is hated over there, and makes more sense, quite honestly, for them, because they use fibers","date":"2013-04-11T21:34:47.937Z","type":"message"}
{"nick":"k1i","message":"SS is asynchronous, as are any node libraries SS is using","date":"2013-04-11T21:34:52.774Z","type":"message"}
{"nick":"k1i","message":"again, the trickiest thing, IMO about doing this, is how to replicate model state in the serverside","date":"2013-04-11T21:36:46.385Z","type":"message"}
{"nick":"k1i","message":"so when I call an instance method, the real (non-proxied) version of the instance method on the serverside can do what it needs to","date":"2013-04-11T21:37:21.512Z","type":"message"}
{"nick":"k1i","message":"backbone handles this with  just a simple assumption of a model having an \"ID\" property, we could/should assume the same (and allow overriding if need be)","date":"2013-04-11T21:37:52.906Z","type":"message"}
{"nick":"owenb","message":"yes","date":"2013-04-11T21:38:05.547Z","type":"message"}
{"nick":"k1i","message":"https://github.com/ianserlin/now-mongoose is a cute exmaple","date":"2013-04-11T21:38:11.518Z","type":"message"}
{"nick":"owenb","message":"i see true models as having an 'id' of some sort","date":"2013-04-11T21:38:18.073Z","type":"message"}
{"nick":"k1i","message":"he puts this in a comment","date":"2013-04-11T21:38:25.414Z","type":"message"}
{"nick":"k1i","message":"at the bottom of the rEADME","date":"2013-04-11T21:38:27.606Z","type":"message"}
{"nick":"k1i","message":"NOTE: Model instance level methods are more tricky and I haven't figured out how to proxy those yet, any suggestions welcome!","date":"2013-04-11T21:38:28.119Z","type":"message"}
{"nick":"k1i","message":"I believe firmly, that, I have that solution","date":"2013-04-11T21:38:34.292Z","type":"message"}
{"nick":"owenb","message":"things like the 'tell me how many hits widget a got' may not have an ID at all","date":"2013-04-11T21:38:37.429Z","type":"message"}
{"nick":"k1i","message":"those arent models","date":"2013-04-11T21:38:46.616Z","type":"message"}
{"nick":"k1i","message":"I believe in that case","date":"2013-04-11T21:38:49.559Z","type":"message"}
{"nick":"k1i","message":"the model would be \"widget\"","date":"2013-04-11T21:38:52.496Z","type":"message"}
{"nick":"owenb","message":"which is why I'm doubtful it should be handled the same way","date":"2013-04-11T21:38:55.311Z","type":"message"}
{"nick":"k1i","message":"and the \"Tell me how many hits\" is an instance method","date":"2013-04-11T21:38:57.276Z","type":"message"}
{"nick":"k1i","message":"on said widget","date":"2013-04-11T21:39:01.376Z","type":"message"}
{"nick":"owenb","message":"yes","date":"2013-04-11T21:39:01.756Z","type":"message"}
{"nick":"k1i","message":"that does the actual calculation","date":"2013-04-11T21:39:07.094Z","type":"message"}
{"nick":"owenb","message":"but the key is getting realtime updates","date":"2013-04-11T21:39:07.948Z","type":"message"}
{"nick":"owenb","message":"to that value","date":"2013-04-11T21:39:10.070Z","type":"message"}
{"nick":"owenb","message":"the calculating","date":"2013-04-11T21:39:13.770Z","type":"message"}
{"nick":"k1i","message":"whenever the \"widget\" issues a \"change\" event","date":"2013-04-11T21:39:16.677Z","type":"message"}
{"nick":"owenb","message":"it may have to be polled on the server","date":"2013-04-11T21:39:19.364Z","type":"message"}
{"nick":"k1i","message":"the clients recall","date":"2013-04-11T21:39:20.728Z","type":"message"}
{"nick":"k1i","message":"\"getTotalHits\"","date":"2013-04-11T21:39:24.150Z","type":"message"}
{"nick":"owenb","message":"yeah","date":"2013-04-11T21:39:26.418Z","type":"message"}
{"nick":"k1i","message":"on that instance of the widget","date":"2013-04-11T21:39:26.744Z","type":"message"}
{"nick":"k1i","message":"but the model itself isn't a collection of data","date":"2013-04-11T21:39:36.398Z","type":"message"}
{"nick":"k1i","message":"the model itself is the widget","date":"2013-04-11T21:39:38.630Z","type":"message"}
{"nick":"k1i","message":"Hit is another model","date":"2013-04-11T21:39:42.075Z","type":"message"}
{"nick":"k1i","message":"Click is another model","date":"2013-04-11T21:39:45.269Z","type":"message"}
{"nick":"owenb","message":"yes","date":"2013-04-11T21:39:45.723Z","type":"message"}
{"nick":"k1i","message":"both of those models have routines in their \"Save\" functions that update their parent model","date":"2013-04-11T21:39:52.886Z","type":"message"}
{"nick":"k1i","message":"which in turn handles the \"observer\" update event","date":"2013-04-11T21:40:05.129Z","type":"message"}
{"nick":"k1i","message":"pretty simple if you think of it in terms of ths","date":"2013-04-11T21:40:22.563Z","type":"message"}
{"nick":"k1i","message":"and that actual relationship structure isn't something realtime-model should handle, IMO","date":"2013-04-11T21:40:34.523Z","type":"message"}
{"nick":"k1i","message":"there are other ORMS/activerecord clones that pull off this exact relationship system (touching, etc.) that exist today","date":"2013-04-11T21:40:49.219Z","type":"message"}
{"nick":"k1i","message":"a realtime-model \"driver\" that links whatever ORM that may be with realtime-model, is in charge of handling that kind of functionality","date":"2013-04-11T21:41:08.053Z","type":"message"}
{"nick":"k1i","message":"also, something more cool I was working on with my implementation (initially)","date":"2013-04-11T21:41:41.002Z","type":"message"}
{"nick":"k1i","message":"the entire api buildout of the model gets sent to the driver","date":"2013-04-11T21:41:50.606Z","type":"message"}
{"nick":"k1i","message":"model.js's \"createApiTree\"","date":"2013-04-11T21:41:58.004Z","type":"message"}
{"nick":"k1i","message":"so, you can add other, driver-specific exports","date":"2013-04-11T21:42:06.357Z","type":"message"}
{"nick":"k1i","message":"for instance, if my exports.config.driver == \"Mongoose\", mongoose then expects an exports.schema as well","date":"2013-04-11T21:42:18.997Z","type":"message"}
{"nick":"owenb","message":"i think as soon as we talk about drivers and save methods automatically updating other relationships it starts becoming an ORM, or at least a wrapper around one. That's not a bad thing per-se, and there is a huge demand for something like this - but we just need to be clear about what we are building and what it is. I have a feeling what you are wanting is a","date":"2013-04-11T21:45:00.393Z","type":"message"}
{"nick":"owenb","message":"layer above the core 'observing' stuff I was thinking of - but that's fine, they could easily work well together. brb food","date":"2013-04-11T21:45:00.522Z","type":"message"}
{"nick":"k1i","message":"well","date":"2013-04-11T21:45:10.043Z","type":"message"}
{"nick":"k1i","message":"I want things to be low level","date":"2013-04-11T21:45:17.130Z","type":"message"}
{"nick":"k1i","message":"which is why the \"driver\" implementation is where the ORM-functionality gets implemented","date":"2013-04-11T21:45:26.282Z","type":"message"}
{"nick":"k1i","message":"\"driver\" is simply a way to \"require\" other code that people can write to interact with models","date":"2013-04-11T21:45:42.516Z","type":"message"}
{"nick":"k1i","message":"and proxy it out","date":"2013-04-11T21:45:46.800Z","type":"message"}
{"nick":"k1i","message":"technically, all it really is, is a JS object that gets merged into the api tree generated out of model.js, exposing functions etc, and then the realtime-model does its job of proxying","date":"2013-04-11T21:46:22.463Z","type":"message"}
{"nick":"k1i","message":"it's just a way to send model.js to mongoose and get a tailored response that is proxyable in this kind of an environment","date":"2013-04-11T21:46:51.813Z","type":"message"}
{"nick":"k1i","message":"the save methods updating other relationships is a very driver-specific thing","date":"2013-04-11T21:47:17.784Z","type":"message"}
{"nick":"k1i","message":"in a model file (for a hit), this would be like this: exports.methods.instance.save: -> var myParentWidget = ss.models[\"widget\"].find(self.widget_id); myParentWidget.touch();","date":"2013-04-11T21:48:21.371Z","type":"message"}
{"nick":"k1i","message":"pretty elegant ,IMO","date":"2013-04-11T21:48:23.651Z","type":"message"}
{"nick":"k1i","message":"obviously add a super() up there, but you get the idea","date":"2013-04-11T21:48:42.952Z","type":"message"}
{"nick":"k1i","message":"this actually sounds cooler and cooler as I talk about it","date":"2013-04-11T21:52:24.600Z","type":"message"}
{"nick":"k1i","message":"exports.methods.private.instance.beforeSave could be implemented in the individual drivers to be called in .save if it exists (totally SS-independent and irrelevant)","date":"2013-04-11T21:53:08.187Z","type":"message"}
{"nick":"k1i","message":"at the end of the day, though, the outline of what we are building is just a system to proxy whole javascript objects (with a somewhat-defined structure) on both a client and server, and allow the intermingling of methods in between them with the same calling convention","date":"2013-04-11T21:54:29.849Z","type":"message"}
{"nick":"k1i","message":"validators, ORMs, schemas, all that extra bullshit is exposed (and just proxied) in the \"driver\"","date":"2013-04-11T21:55:14.972Z","type":"message"}
{"nick":"k1i","message":"we obviously release it with a base driver implementation (I will write mongoose) that will get expanded upon, etc, but isn't totally necessary","date":"2013-04-11T21:55:45.307Z","type":"message"}
{"nick":"liorix_","reason":"Remote host closed the connection","date":"2013-04-11T22:19:44.466Z","type":"quit"}
{"nick":"zenocon","date":"2013-04-11T22:24:58.030Z","type":"join"}
{"nick":"zenocon","reason":"Remote host closed the connection","date":"2013-04-11T22:27:40.689Z","type":"quit"}
{"nick":"owenb","message":"hey","date":"2013-04-11T22:44:50.336Z","type":"message"}
{"nick":"owenb","message":"k1i : I think you should build this","date":"2013-04-11T22:45:07.169Z","type":"message"}
{"nick":"owenb","message":"the realtime service api may still change a little, but I'm happy with the overal design and don't expect to make too many changes to the realtime server bit from now on","date":"2013-04-11T22:45:35.975Z","type":"message"}
{"nick":"k1i","message":"I will build this","date":"2013-04-11T22:45:51.930Z","type":"message"}
{"nick":"owenb","message":"great","date":"2013-04-11T22:45:56.431Z","type":"message"}
{"nick":"k1i","message":"I was just worried about skew","date":"2013-04-11T22:45:59.468Z","type":"message"}
{"nick":"owenb","message":"how so?","date":"2013-04-11T22:46:06.465Z","type":"message"}
{"nick":"k1i","message":"well, if there are a bunch of model implementations on top of realtime-service, I dont know that we will get the activerecord-like community that exists with rails","date":"2013-04-11T22:46:39.872Z","type":"message"}
{"nick":"k1i","message":"i believe, honestly and firmly, after spending a ton of time looking into frameworks etc.","date":"2013-04-11T22:46:50.652Z","type":"message"}
{"nick":"k1i","message":"that this is the biggest sticking point for SS/other frameworks (model implementation)","date":"2013-04-11T22:46:55.390Z","type":"message"}
{"nick":"k1i","message":"that and scaling","date":"2013-04-11T22:47:04.831Z","type":"message"}
{"nick":"owenb","message":"iyes","date":"2013-04-11T22:47:07.839Z","type":"message"}
{"nick":"owenb","message":"yes","date":"2013-04-11T22:47:08.869Z","type":"message"}
{"nick":"owenb","message":"scaling is really hard","date":"2013-04-11T22:47:15.374Z","type":"message"}
{"nick":"owenb","message":"but doable","date":"2013-04-11T22:47:18.562Z","type":"message"}
{"nick":"k1i","message":"did you see connect-redis-realtime?","date":"2013-04-11T22:47:21.550Z","type":"message"}
{"nick":"liorix","date":"2013-04-11T22:47:21.679Z","type":"join"}
{"nick":"owenb","message":"no?","date":"2013-04-11T22:47:26.549Z","type":"message"}
{"nick":"k1i","message":"https://github.com/korbin/connect-redis-realtime I wrote this.","date":"2013-04-11T22:47:33.617Z","type":"message"}
{"nick":"k1i","message":"it is in npm","date":"2013-04-11T22:47:43.124Z","type":"message"}
{"nick":"k1i","message":"it's an LRU-cached version of connect-redis that utilizes pubsub for updates","date":"2013-04-11T22:47:59.498Z","type":"message"}
{"nick":"k1i","message":"like we talked about","date":"2013-04-11T22:48:07.707Z","type":"message"}
{"nick":"owenb","message":"this is great :)","date":"2013-04-11T22:48:43.121Z","type":"message"}
{"nick":"k1i","message":"so you shut off caching in SS, use this session-store, and it keeps sessions in memory while persisting them to redis, communicating updates over the redis built-in pubsub","date":"2013-04-11T22:48:49.356Z","type":"message"}
{"nick":"owenb","message":"hopefully you spotted the caching stuff i put in for sessions","date":"2013-04-11T22:48:59.159Z","type":"message"}
{"nick":"k1i","message":"yep","date":"2013-04-11T22:49:02.308Z","type":"message"}
{"nick":"owenb","message":"great","date":"2013-04-11T22:49:04.409Z","type":"message"}
{"nick":"k1i","message":"works really well","date":"2013-04-11T22:49:07.740Z","type":"message"}
{"nick":"k1i","message":"with SS .3","date":"2013-04-11T22:49:08.664Z","type":"message"}
{"nick":"owenb","message":"i'll give it a go with 0.4 when i get a moment","date":"2013-04-11T22:49:15.726Z","type":"message"}
{"nick":"k1i","message":"I did","date":"2013-04-11T22:49:18.380Z","type":"message"}
{"nick":"k1i","message":"worked just fine","date":"2013-04-11T22:49:20.115Z","type":"message"}
{"nick":"owenb","message":"as for skew","date":"2013-04-11T22:49:22.155Z","type":"message"}
{"nick":"owenb","message":"they key is layers","date":"2013-04-11T22:49:26.554Z","type":"message"}
{"nick":"owenb","message":"each as separate testable libraries that do one thing","date":"2013-04-11T22:49:37.625Z","type":"message"}
{"nick":"k1i","message":"I believe realtime-model should just be a proxy layer","date":"2013-04-11T22:49:39.977Z","type":"message"}
{"nick":"k1i","message":"i wish I could leverage rts-pubsub within realtime model","date":"2013-04-11T22:49:51.520Z","type":"message"}
{"nick":"owenb","message":"what i mean is, people should be able to select as much realtime model functionality as they need. i would probably go for a really lightweight thing, some want a full meteor-like ORM. but each layer should build on each other","date":"2013-04-11T22:50:59.804Z","type":"message"}
{"nick":"owenb","message":"i think and hope it's possible to do it like that","date":"2013-04-11T22:51:12.967Z","type":"message"}
{"nick":"k1i","message":"yeah","date":"2013-04-11T22:51:35.096Z","type":"message"}
{"nick":"k1i","message":"I feel like you should (technically) be able to use realtime-model without a \"driver\" specified at all","date":"2013-04-11T22:51:44.366Z","type":"message"}
{"nick":"k1i","message":"technically it could just be used to contain methods and do clientside model manipulation","date":"2013-04-11T22:51:53.617Z","type":"message"}
{"nick":"k1i","message":"for very basic stuff","date":"2013-04-11T22:51:57.836Z","type":"message"}
{"nick":"k1i","message":"or an in-memory driver could exist","date":"2013-04-11T22:52:02.208Z","type":"message"}
{"nick":"owenb","message":"i'm just not sure yet","date":"2013-04-11T22:52:18.691Z","type":"message"}
{"nick":"k1i","message":"I believe the over-the-socket proxying should be very clever (I have this in mind), and the leave the drivers free for people to add cool functionality","date":"2013-04-11T22:52:29.574Z","type":"message"}
{"nick":"owenb","message":"but i know that whatever observes the data that's going in and out of the client needs to be one thing","date":"2013-04-11T22:52:31.057Z","type":"message"}
{"nick":"owenb","message":"and whatever lets you define a schema and handle validations needs to be another","date":"2013-04-11T22:52:43.633Z","type":"message"}
{"nick":"owenb","message":"but they can use each other","date":"2013-04-11T22:52:46.279Z","type":"message"}
{"nick":"k1i","message":"yeah, that's pretty much what I am talking about with \"drivers\"","date":"2013-04-11T22:52:57.575Z","type":"message"}
{"nick":"owenb","message":"right i must go.","date":"2013-04-11T22:52:58.283Z","type":"message"}
{"nick":"k1i","message":"all \"driver\" really is a \"require\"","date":"2013-04-11T22:53:01.803Z","type":"message"}
{"nick":"owenb","message":"cool ok :)","date":"2013-04-11T22:53:02.590Z","type":"message"}
{"nick":"k1i","message":"gotcha","date":"2013-04-11T22:53:06.049Z","type":"message"}
{"nick":"k1i","message":"again","date":"2013-04-11T22:53:22.103Z","type":"message"}
{"nick":"k1i","message":"the biggest complication I am running into right now, I think ,is the ability to send model prototypes in system.js","date":"2013-04-11T22:53:41.545Z","type":"message"}
{"nick":"k1i","message":"I wish I could access services/model/model.js  pre-system.js build","date":"2013-04-11T22:54:03.838Z","type":"message"}
{"nick":"owenb","message":"don't do it lol. think cdns and varnish cache","date":"2013-04-11T22:54:21.644Z","type":"message"}
{"nick":"owenb","message":"not everyone will want the same models","date":"2013-04-11T22:54:27.316Z","type":"message"}
{"nick":"owenb","message":"you should only get what you need","date":"2013-04-11T22:54:35.740Z","type":"message"}
{"nick":"k1i","message":"I guess","date":"2013-04-11T22:54:37.718Z","type":"message"}
{"nick":"k1i","message":"I don't mind initializing a meteor app","date":"2013-04-11T22:54:42.987Z","type":"message"}
{"nick":"k1i","message":"and calling ss.models.get(\"modelname\") to load the prototype","date":"2013-04-11T22:54:54.621Z","type":"message"}
{"nick":"k1i","message":"err","date":"2013-04-11T22:54:57.737Z","type":"message"}
{"nick":"k1i","message":"angular app","date":"2013-04-11T22:54:58.983Z","type":"message"}
{"nick":"k1i","message":"controller","date":"2013-04-11T22:55:00.409Z","type":"message"}
{"nick":"k1i","message":"it would be really cool if you could do a browserify require()","date":"2013-04-11T22:55:30.042Z","type":"message"}
{"nick":"owenb","message":"if you really want protoypes in the client, do something like rtsModel('products, function(err, model))","date":"2013-04-11T22:55:31.276Z","type":"message"}
{"nick":"owenb","message":"then you can call model.find()","date":"2013-04-11T22:55:36.788Z","type":"message"}
{"nick":"owenb","message":"model.checkout()","date":"2013-04-11T22:55:43.957Z","type":"message"}
{"nick":"owenb","message":"whatever","date":"2013-04-11T22:55:45.153Z","type":"message"}
{"nick":"k1i","message":"ye[","date":"2013-04-11T22:55:46.818Z","type":"message"}
{"nick":"k1i","message":"yep","date":"2013-04-11T22:55:47.449Z","type":"message"}
{"nick":"k1i","message":"I want to be able to do instances of models though as well","date":"2013-04-11T22:55:54.173Z","type":"message"}
{"nick":"owenb","message":"yeah","date":"2013-04-11T22:55:59.370Z","type":"message"}
{"nick":"k1i","message":".find returns a new model instance, etc.","date":"2013-04-11T22:55:59.984Z","type":"message"}
{"nick":"owenb","message":"i get it","date":"2013-04-11T22:56:04.568Z","type":"message"}
{"nick":"owenb","message":"but think how it plays with angular and backbone/ember models","date":"2013-04-11T22:56:14.640Z","type":"message"}
{"nick":"owenb","message":"anyway","date":"2013-04-11T22:56:16.636Z","type":"message"}
{"nick":"owenb","message":"must go","date":"2013-04-11T22:56:17.507Z","type":"message"}
{"nick":"k1i","message":"gotcha","date":"2013-04-11T22:56:19.198Z","type":"message"}
{"nick":"k1i","message":"later","date":"2013-04-11T22:56:22.173Z","type":"message"}
{"nick":"owenb","message":"i'll leave you to it","date":"2013-04-11T22:56:22.597Z","type":"message"}
{"nick":"owenb","message":"indeed","date":"2013-04-11T22:56:24.474Z","type":"message"}
{"nick":"owenb","message":"and thanks :)","date":"2013-04-11T22:56:28.537Z","type":"message"}
{"nick":"owenb","message":"chat soon","date":"2013-04-11T22:56:31.326Z","type":"message"}
{"nick":"sveisvei","reason":"Ping timeout: 246 seconds","date":"2013-04-11T23:24:13.986Z","type":"quit"}
