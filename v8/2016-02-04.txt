{"nick":"aklein","message":"also, in general, no, jkummerow doesn't hang out here","date":"2016-02-04T00:09:54.574Z","type":"message"}
{"nick":"seventh","reason":"Ping timeout: 272 seconds","date":"2016-02-04T00:12:46.461Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-02-04T00:13:46.425Z","type":"join"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2016-02-04T00:26:36.168Z","type":"quit"}
{"nick":"BobGneu","reason":"Read error: Connection reset by peer","date":"2016-02-04T00:27:49.204Z","type":"quit"}
{"nick":"BobGneu","date":"2016-02-04T00:38:53.731Z","type":"join"}
{"nick":"jugglinmike","reason":"Ping timeout: 250 seconds","date":"2016-02-04T00:49:32.451Z","type":"quit"}
{"nick":"watilde","date":"2016-02-04T00:55:32.732Z","type":"join"}
{"nick":"dherman","message":"aklein: who'd be the best person to ask about the relationship between FunctionTemplates and realms?","date":"2016-02-04T00:56:25.057Z","type":"message"}
{"nick":"aklein","message":"dherman: depending on how big your question is you could try me :)","date":"2016-02-04T01:00:27.687Z","type":"message"}
{"nick":"dherman","message":"thanks!","date":"2016-02-04T01:00:42.472Z","type":"message"}
{"nick":"watilde","reason":"Ping timeout: 245 seconds","date":"2016-02-04T01:00:55.799Z","type":"quit"}
{"nick":"dherman","message":"when I create a FunctionTemplate, it creates a new \"brand\"","date":"2016-02-04T01:01:32.995Z","type":"message"}
{"nick":"dherman","message":"so HasInstance can distinguish instances of that \"class\" from any other object type","date":"2016-02-04T01:01:46.959Z","type":"message"}
{"nick":"dherman","message":"and it also creates its own constructor and prototype","date":"2016-02-04T01:01:57.261Z","type":"message"}
{"nick":"dherman","message":"so brands and constructor/prototype pairs seem to be in 1:1 correspondence","date":"2016-02-04T01:02:09.800Z","type":"message"}
{"nick":"dherman","message":"on the web, you can have object types from multiple realms interact","date":"2016-02-04T01:02:35.740Z","type":"message"}
{"nick":"dherman","message":"I'm fuzzy on the web semantics of this","date":"2016-02-04T01:02:41.025Z","type":"message"}
{"nick":"dherman","message":"you get distinct constructor/prototype pairs in distinct realms","date":"2016-02-04T01:02:52.591Z","type":"message"}
{"nick":"dherman","message":"say, for a DOM object type","date":"2016-02-04T01:02:59.343Z","type":"message"}
{"nick":"dherman","message":"but I'm fuzzy on whether they are considered the same brand","date":"2016-02-04T01:03:07.054Z","type":"message"}
{"nick":"dherman","message":"I'm curious whether chrome uses the v8 FunctionTemplate API for DOM types","date":"2016-02-04T01:03:22.074Z","type":"message"}
{"nick":"aklein","message":"I believe it does, yes","date":"2016-02-04T01:03:36.318Z","type":"message"}
{"nick":"dherman","message":"and whether the semantics of cross-realm DOM classes results in incompatible brands","date":"2016-02-04T01:03:40.890Z","type":"message"}
{"nick":"aklein","message":"easy to create a quick test...","date":"2016-02-04T01:03:42.289Z","type":"message"}
{"nick":"dherman","message":"I wasn't quite sure how to test it","date":"2016-02-04T01:03:49.768Z","type":"message"}
{"nick":"aklein","message":"no, FunctionTemplate HasInstance works across realms","date":"2016-02-04T01:04:03.119Z","type":"message"}
{"nick":"dherman","message":"I'm confused","date":"2016-02-04T01:05:03.874Z","type":"message"}
{"nick":"dherman","message":"don't you have to create multiple FunctionTemplates?","date":"2016-02-04T01:05:13.765Z","type":"message"}
{"nick":"dherman","message":"one per realm?","date":"2016-02-04T01:05:15.255Z","type":"message"}
{"nick":"aklein","message":"no","date":"2016-02-04T01:05:19.646Z","type":"message"}
{"nick":"dherman","message":"or do you create an \"ur-constructor\"","date":"2016-02-04T01:05:34.215Z","type":"message"}
{"nick":"dherman","message":"and then a distinct function and prototype object in each realm","date":"2016-02-04T01:05:41.747Z","type":"message"}
{"nick":"dherman","message":"where the distinct function delegates to the ur-constructor","date":"2016-02-04T01:05:48.839Z","type":"message"}
{"nick":"dherman","message":"using constructor-override","date":"2016-02-04T01:05:52.312Z","type":"message"}
{"nick":"aklein","message":"this makes more sense if you know the internals of V8...","date":"2016-02-04T01:05:53.348Z","type":"message"}
{"nick":"dherman","message":"turns out I don't ;P","date":"2016-02-04T01:05:59.909Z","type":"message"}
{"nick":"aklein","message":"so there are SharedFunctionInfo objects","date":"2016-02-04T01:06:11.633Z","type":"message"}
{"nick":"aklein","message":"which represent Realm-independent functions","date":"2016-02-04T01:06:18.188Z","type":"message"}
{"nick":"aklein","message":"and then there are JSFunction objects","date":"2016-02-04T01:06:23.961Z","type":"message"}
{"nick":"aklein","message":"which represent the concrete instances of that SharedFunctionInfo","date":"2016-02-04T01:06:48.622Z","type":"message"}
{"nick":"dherman","message":"does chrome use these internals for the DOM?","date":"2016-02-04T01:07:21.647Z","type":"message"}
{"nick":"aklein","message":"and are associated with a Realm (along with other per-instance associations, like the set of closures they're nested inside of)","date":"2016-02-04T01:07:31.615Z","type":"message"}
{"nick":"aklein","message":"so I'm working back out to the API now","date":"2016-02-04T01:07:47.859Z","type":"message"}
{"nick":"dherman","message":"oh ok","date":"2016-02-04T01:08:03.622Z","type":"message"}
{"nick":"dherman","message":"sorry continue :)","date":"2016-02-04T01:08:06.320Z","type":"message"}
{"nick":"aklein","message":"given a JSFunction (say, the 'Window' constructor function)","date":"2016-02-04T01:08:10.637Z","type":"message"}
{"nick":"aklein","message":"it's associated with some SharedFunctionInfo that has a 1:1 relationship with some FunctionTemplate","date":"2016-02-04T01:08:32.367Z","type":"message"}
{"nick":"aklein","message":"and it's that linkage that lets us do brand checks","date":"2016-02-04T01:08:52.581Z","type":"message"}
{"nick":"aklein","message":"for object's there's one more link, right, which is from the object to its constructor","date":"2016-02-04T01:09:11.297Z","type":"message"}
{"nick":"aklein","message":"and you can observe this by, for example, calling methods on a DOM object of the \"same\" type from another realm and seeing that it works","date":"2016-02-04T01:10:08.099Z","type":"message"}
{"nick":"aklein","message":"so now I'll ask, did I answer your question? :)","date":"2016-02-04T01:11:05.469Z","type":"message"}
{"nick":"dherman","message":"partly","date":"2016-02-04T01:11:17.481Z","type":"message"}
{"nick":"dherman","message":"I get what the semantics is","date":"2016-02-04T01:11:21.430Z","type":"message"}
{"nick":"dherman","message":"but I don't get how it works with the v8 api","date":"2016-02-04T01:11:26.015Z","type":"message"}
{"nick":"dherman","message":"because a FunctionTemplate doesn't let you create multiple distinct constructor functions","date":"2016-02-04T01:11:36.359Z","type":"message"}
{"nick":"dherman","message":"unless you're saying that the implementation strategy is just to create an otherwise-unrelated distinct JSFunction","date":"2016-02-04T01:12:13.129Z","type":"message"}
{"nick":"dherman","message":"that uses the constructor override pattern","date":"2016-02-04T01:12:17.704Z","type":"message"}
{"nick":"aklein","message":"I'm probably missing something about the details of the API","date":"2016-02-04T01:12:25.055Z","type":"message"}
{"nick":"dherman","message":"if I create a FunctionTemplate","date":"2016-02-04T01:12:46.488Z","type":"message"}
{"nick":"dherman","message":"it represents a brand","date":"2016-02-04T01:12:50.045Z","type":"message"}
{"nick":"dherman","message":"and has HasInstance to check the brand","date":"2016-02-04T01:12:57.216Z","type":"message"}
{"nick":"dherman","message":"but I can only call GetFunction to get the one and only constructor function associated with it","date":"2016-02-04T01:13:08.502Z","type":"message"}
{"nick":"dherman","message":"if I were implementing the DOM I could just create one such FunctionTemplate,","date":"2016-02-04T01:13:22.765Z","type":"message"}
{"nick":"aklein","message":"GetFunction() takes a Context, right?","date":"2016-02-04T01:13:22.949Z","type":"message"}
{"nick":"dherman","message":"oh!","date":"2016-02-04T01:13:29.619Z","type":"message"}
{"nick":"aklein","message":"or has an implied current context","date":"2016-02-04T01:13:31.811Z","type":"message"}
{"nick":"aklein","message":"(in the deprecated version)","date":"2016-02-04T01:13:41.990Z","type":"message"}
{"nick":"dherman","message":"yeah it takes a context","date":"2016-02-04T01:13:44.094Z","type":"message"}
{"nick":"dherman","message":"I see!","date":"2016-02-04T01:13:50.451Z","type":"message"}
{"nick":"dherman","message":"that's the piece I was missing","date":"2016-02-04T01:13:54.105Z","type":"message"}
{"nick":"aklein","message":"And the docc omment:  /** Returns the unique function instance in the current execution context.*/","date":"2016-02-04T01:13:54.781Z","type":"message"}
{"nick":"dherman","message":"got it, that's what I was missing","date":"2016-02-04T01:14:17.472Z","type":"message"}
{"nick":"aklein","message":"cool","date":"2016-02-04T01:14:19.859Z","type":"message"}
{"nick":"aklein","message":"sorry for the gritty details, I can't keep all the API and the internals in my head at the same time","date":"2016-02-04T01:14:39.563Z","type":"message"}
{"nick":"aklein","message":"partially because they have overlapping but incompatible names","date":"2016-02-04T01:14:46.810Z","type":"message"}
{"nick":"dherman","message":"np","date":"2016-02-04T01:15:25.643Z","type":"message"}
{"nick":"dherman","message":"mystery solved","date":"2016-02-04T01:15:28.239Z","type":"message"}
{"nick":"bradleymeck","reason":"Ping timeout: 250 seconds","date":"2016-02-04T01:17:01.389Z","type":"quit"}
{"nick":"dherman","message":"aklein: would it be accurate to say isolates correspond to workers and contexts to realms?","date":"2016-02-04T01:25:45.984Z","type":"message"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-02-04T01:40:15.698Z","type":"quit"}
{"nick":"jgi","date":"2016-02-04T01:41:58.345Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-02-04T01:47:58.321Z","type":"quit"}
{"nick":"caitp","message":"something in the past two weeks has made link times skyrocket for me in v8, and only with the bundled clang toolchain :|","date":"2016-02-04T02:07:19.335Z","type":"message"}
{"nick":"caitp","message":"using system clang, it does a much better job","date":"2016-02-04T02:07:42.266Z","type":"message"}
{"nick":"caitp","message":"I guess it must not be affecting most people or it would probably have been noticed","date":"2016-02-04T02:07:54.141Z","type":"message"}
{"nick":"caitp","message":"just hangs there for like 8 minutes when it used to be almost instantaneous D:","date":"2016-02-04T02:10:16.335Z","type":"message"}
{"nick":"lerela","reason":"Ping timeout: 276 seconds","date":"2016-02-04T02:32:17.119Z","type":"quit"}
{"nick":"plutoniix","reason":"Read error: Connection reset by peer","date":"2016-02-04T02:44:22.878Z","type":"quit"}
{"nick":"plutoniix","date":"2016-02-04T02:45:02.360Z","type":"join"}
{"nick":"zv_","date":"2016-02-04T03:32:11.165Z","type":"join"}
{"nick":"zv_","reason":"Quit: WeeChat 1.4","date":"2016-02-04T03:56:10.649Z","type":"quit"}
{"nick":"zv","date":"2016-02-04T03:56:45.290Z","type":"join"}
{"nick":"esas","reason":"Ping timeout: 245 seconds","date":"2016-02-04T04:01:11.884Z","type":"quit"}
{"nick":"ErikCorry__","date":"2016-02-04T04:11:33.401Z","type":"join"}
{"nick":"seththompson_","date":"2016-02-04T04:11:33.807Z","type":"join"}
{"nick":"Martijnc_","date":"2016-02-04T04:11:39.876Z","type":"join"}
{"nick":"mikolalysenko","reason":"Ping timeout: 260 seconds","date":"2016-02-04T04:11:39.876Z","type":"quit"}
{"nick":"eseidel_","date":"2016-02-04T04:11:39.876Z","type":"join"}
{"nick":"seththompson","reason":"Ping timeout: 260 seconds","date":"2016-02-04T04:12:10.912Z","type":"quit"}
{"nick":"seththompson_","new_nick":"seththompson","date":"2016-02-04T04:12:15.419Z","type":"nick"}
{"nick":"ErikCorry_","reason":"Ping timeout: 260 seconds","date":"2016-02-04T04:12:49.546Z","type":"quit"}
{"nick":"Martijnc","reason":"Ping timeout: 260 seconds","date":"2016-02-04T04:12:49.732Z","type":"quit"}
{"nick":"eseidel","reason":"Ping timeout: 260 seconds","date":"2016-02-04T04:12:49.732Z","type":"quit"}
{"nick":"ErikCorry__","new_nick":"ErikCorry_","date":"2016-02-04T04:12:49.733Z","type":"nick"}
{"nick":"Martijnc_","new_nick":"Martijnc","date":"2016-02-04T04:12:56.639Z","type":"nick"}
{"nick":"littledan_","reason":"Ping timeout: 260 seconds","date":"2016-02-04T04:13:24.702Z","type":"quit"}
{"nick":"eseidel_","new_nick":"eseidel","date":"2016-02-04T04:13:42.179Z","type":"nick"}
{"nick":"saper_","date":"2016-02-04T04:16:49.304Z","type":"join"}
{"nick":"stalled","reason":"Ping timeout: 260 seconds","date":"2016-02-04T04:19:09.927Z","type":"quit"}
{"nick":"Guest50070","reason":"Ping timeout: 260 seconds","date":"2016-02-04T04:19:09.927Z","type":"quit"}
{"nick":"saper","reason":"Ping timeout: 260 seconds","date":"2016-02-04T04:19:49.042Z","type":"quit"}
{"nick":"s1w","date":"2016-02-04T04:20:02.445Z","type":"join"}
{"nick":"s1w","new_nick":"Guest51729","date":"2016-02-04T04:20:25.949Z","type":"nick"}
{"nick":"mikolalysenko","date":"2016-02-04T04:21:35.384Z","type":"join"}
{"nick":"ec\\","date":"2016-02-04T04:24:04.339Z","type":"join"}
{"nick":"littledan_","date":"2016-02-04T04:24:50.791Z","type":"join"}
{"nick":"stalled","date":"2016-02-04T04:32:41.988Z","type":"join"}
{"nick":"jgi","date":"2016-02-04T05:11:17.590Z","type":"join"}
{"nick":"xaxxon","date":"2016-02-04T05:20:50.367Z","type":"join"}
{"nick":"xaxxon","message":"I'm throwing an exception in a functinotemplate function.. and my program is instantly dying with SIGABRT and printing the contents of my exception to stdout.   I have a TryCatch and a try{}catch(...)} in the call stack of the code that's throwing and it's all being ignored.   When I put a breakpoint on the actual throw line, it's in the main thread.   Any ideas?   Here's the code that throws, the code that's supposed to catch (though t","date":"2016-02-04T05:23:09.800Z","type":"message"}
{"nick":"xaxxon","message":"here's a TryCatch object in the call stack as well) and the stack trace here: https://gist.github.com/xaxxon/ab7093bf7d3888c0acbd","date":"2016-02-04T05:23:10.157Z","type":"message"}
{"nick":"xaxxon","message":"does v8 do some crazy-whacked things to exception handling?   Also, I tried this in code that shouldn't call v8::locker anywhere to try to stop it from being multi-thready but I'm not sure if I succeeded or not","date":"2016-02-04T05:23:55.233Z","type":"message"}
{"nick":"xaxxon","message":"because there are a bunch of v8 workerthread's","date":"2016-02-04T05:24:24.316Z","type":"message"}
{"nick":"xaxxon","message":"I literally do one \"s\"tep  in the debugger after my thrown object constructor returns and I'm in pthread_kill","date":"2016-02-04T05:35:49.075Z","type":"message"}
{"nick":"xaxxon","message":"but I guess if the stack isn't unwindable, that is what could happen?","date":"2016-02-04T05:36:07.425Z","type":"message"}
{"nick":"xaxxon","message":"or... ?","date":"2016-02-04T05:36:12.580Z","type":"message"}
{"nick":"xaxxon","message":"maybe it's the generated machine code, but I have a v8::TryCatch object before I run the script","date":"2016-02-04T05:41:55.484Z","type":"message"}
{"nick":"jgi","message":"xaxxon: TryCatch instances catch JavaScript errors thrown from JavaScript code, you’re throwing a C++ exception from your native code","date":"2016-02-04T05:55:08.960Z","type":"message"}
{"nick":"xaxxon","message":"jgi, it also catches things like compilation errors, doesn't it?","date":"2016-02-04T05:55:32.826Z","type":"message"}
{"nick":"xaxxon","message":"jgi, anyhow, I have multiple try{}catch(...){} around it as well... and those don't fire, either","date":"2016-02-04T05:55:46.512Z","type":"message"}
{"nick":"xaxxon","message":"like I said, it goes straight from the thrown object constructor to pthread_kill in one debugger \"step\"","date":"2016-02-04T05:57:33.240Z","type":"message"}
{"nick":"jgi","message":"xaxxon: the code you posted doesn’t seem to be self-contained, and I don’t see where _add_method is called. Could you post some code that reproduces your problem with build instructions? It seems it would be easier to help you this way.","date":"2016-02-04T05:57:39.801Z","type":"message"}
{"nick":"xaxxon","message":"yep","date":"2016-02-04T05:57:49.221Z","type":"message"}
{"nick":"xaxxon","message":"it'll take like .. 15m","date":"2016-02-04T05:58:14.140Z","type":"message"}
{"nick":"jgi","message":"xaxxon: I might be offline in a while though, but I could take a look tomorrow","date":"2016-02-04T05:58:21.670Z","type":"message"}
{"nick":"xaxxon","message":"I may send it to the list if I get a full repro case","date":"2016-02-04T05:58:37.138Z","type":"message"}
{"nick":"jgi","message":"that would be even better","date":"2016-02-04T05:59:07.604Z","type":"message"}
{"nick":"xaxxon","message":"I was just hoping to make progress quickly, so I figured I'd check here to see if I was missing anything obvious","date":"2016-02-04T05:59:32.957Z","type":"message"}
{"nick":"xaxxon","message":"valgrind shows no errors","date":"2016-02-04T06:00:45.928Z","type":"message"}
{"nick":"xaxxon","message":"I've got it... posting it to gist now...","date":"2016-02-04T06:18:43.733Z","type":"message"}
{"nick":"xaxxon","message":"jgi, https://gist.github.com/xaxxon/d45ba2bd11675735b4fa","date":"2016-02-04T06:19:45.168Z","type":"message"}
{"nick":"jgi","message":"xaxxon: do you have a build script for that?","date":"2016-02-04T06:20:17.470Z","type":"message"}
{"nick":"xaxxon","message":"i'll make something","date":"2016-02-04T06:20:56.104Z","type":"message"}
{"nick":"xaxxon","message":"added to gist","date":"2016-02-04T06:23:41.624Z","type":"message"}
{"nick":"xaxxon","message":"i mean.. it's just the command line I use..","date":"2016-02-04T06:24:23.408Z","type":"message"}
{"nick":"xaxxon","message":"my makefile wouldn't make sense for anyone else","date":"2016-02-04T06:24:30.457Z","type":"message"}
{"nick":"xaxxon","message":"I'm running latest v8 .. from a few days ago... on latest OS X","date":"2016-02-04T06:26:12.677Z","type":"message"}
{"nick":"xaxxon","message":"not a bad estimate... I said it would take 15m.. took 18","date":"2016-02-04T06:27:37.520Z","type":"message"}
{"nick":"xaxxon","message":"https://bugs.chromium.org/p/v8/issues/detail?id=1072  hrmm","date":"2016-02-04T06:36:29.600Z","type":"message"}
{"nick":"xaxxon","message":"oh.. https://bugs.chromium.org/p/v8/source/detail?r=7548  <== page does not exist","date":"2016-02-04T06:36:40.132Z","type":"message"}
{"nick":"xaxxon","message":"am I supposed to use this:  v8::Isolate::ThrowException\t(\tLocal< Value > \texception\t)\t ?","date":"2016-02-04T06:38:08.188Z","type":"message"}
{"nick":"xaxxon","message":"typedef bool(* v8::Isolate::AbortOnUncaughtExceptionCallback) (Isolate *)  or maybe it has something to do with this?  (I don't call this at all)","date":"2016-02-04T06:38:57.985Z","type":"message"}
{"nick":"xaxxon","message":"SetAbortOnUncaughtExceptionCallback","date":"2016-02-04T06:39:42.136Z","type":"message"}
{"nick":"xaxxon","message":"I never knew about any of this...","date":"2016-02-04T06:40:17.962Z","type":"message"}
{"nick":"xaxxon","message":"jgi, maybe I'm supposed to use one or more of these things?  I never knew they existed","date":"2016-02-04T06:40:35.506Z","type":"message"}
{"nick":"jgi","message":"SetAbortOnUncaughtExceptionCallback is used to provide V8 with a callback to determine whether or not to abort when an uncaught exception is thrown","date":"2016-02-04T06:41:42.271Z","type":"message"}
{"nick":"jgi","message":"xaxxon: it should not be related to what you’re doing","date":"2016-02-04T06:42:01.732Z","type":"message"}
{"nick":"xaxxon","message":"ok","date":"2016-02-04T06:42:26.881Z","type":"message"}
{"nick":"jgi","message":"xaxxon: if you don’t set a callback, your process will abort if you pass the —abort-on-uncaught-exception command line option to V8, it will not abort otherwise","date":"2016-02-04T06:42:37.964Z","type":"message"}
{"nick":"xaxxon","message":"ok","date":"2016-02-04T06:42:46.816Z","type":"message"}
{"nick":"jgi","message":"xaxxon: I don’t have the time to compile your program tonight :(, maybe I’ll have more time tomorrow","date":"2016-02-04T06:43:03.171Z","type":"message"}
{"nick":"xaxxon","message":"jgi, no problem.  I'll post to the list","date":"2016-02-04T06:43:12.966Z","type":"message"}
{"nick":"xaxxon","message":"jgi, thank you","date":"2016-02-04T06:43:22.602Z","type":"message"}
{"nick":"jgi","message":"xaxxon: and also yes, TryCatch instances can be used to “catch” errors when compiling JavaScript code with v8::Script::Compile","date":"2016-02-04T06:43:54.346Z","type":"message"}
{"nick":"jgi","message":"xaxxon: but looking again at the code, the v8::TryCatch instance would “catch” an exception if you compiled “throw new Error(‘boom’);” instead of “throw_exception();”","date":"2016-02-04T06:47:19.202Z","type":"message"}
{"nick":"xaxxon","message":"that makes sense.  but my actual use case is the functiontemplate callback throwing because it didn't get enough arguments from javascript to call the real funciton I want to call","date":"2016-02-04T06:48:07.581Z","type":"message"}
{"nick":"jgi","message":"xaxxon: in that case you should use v8::Isolate::ThrowException","date":"2016-02-04T06:49:35.047Z","type":"message"}
{"nick":"xaxxon","message":"    i->ThrowException(v8::Number::New(i, 4.4));\tmakes the trycatch fire","date":"2016-02-04T06:49:47.424Z","type":"message"}
{"nick":"xaxxon","message":"yeah, that's what I just did","date":"2016-02-04T06:49:50.998Z","type":"message"}
{"nick":"jgi","message":"xaxxon: and remove the c++ try/catch","date":"2016-02-04T06:50:04.253Z","type":"message"}
{"nick":"xaxxon","message":"jgi, but you don't know offhand why I get the specific behavior I do when I throw the c++ exception?","date":"2016-02-04T06:50:20.352Z","type":"message"}
{"nick":"jgi","message":"xaxxon: I don’t","date":"2016-02-04T06:50:42.246Z","type":"message"}
{"nick":"xaxxon","message":"it's just weird that I don't see something in the call stack ","date":"2016-02-04T06:50:44.903Z","type":"message"}
{"nick":"xaxxon","message":"ok, well this is a good workaround, at least... maybe even a perfectly good final solution","date":"2016-02-04T06:51:02.558Z","type":"message"}
{"nick":"xaxxon","message":"so thank you again :)","date":"2016-02-04T06:51:04.836Z","type":"message"}
{"nick":"xaxxon","message":"jgi, I'm wondering if the V8-generated machine code in the stack trace isn't exception friendly and that causes the stack unwinding to barf... but I'm far from an expert on what goes on under the covers","date":"2016-02-04T06:53:54.628Z","type":"message"}
{"nick":"jgi","message":"xaxxon: that would be my hunch too, but I’ve actually never looked at how the runtime support for C++ exception is implemented","date":"2016-02-04T06:54:23.012Z","type":"message"}
{"nick":"jgi","message":"xaxxon: but now I’m tempted :)","date":"2016-02-04T06:54:31.560Z","type":"message"}
{"nick":"xaxxon","message":"jgi, oh wait... what happens when you throw an exception through a function marked noexcept?","date":"2016-02-04T06:54:42.845Z","type":"message"}
{"nick":"jgi","message":"xaxxon: yes, I think that could cause std::terminate to be called, but not the exception handler","date":"2016-02-04T06:57:00.453Z","type":"message"}
{"nick":"xaxxon","message":"yeah..","date":"2016-02-04T06:57:11.835Z","type":"message"}
{"nick":"jgi","message":"xaxxon: which of these functions is declared as noexcept?","date":"2016-02-04T06:57:35.510Z","type":"message"}
{"nick":"xaxxon","message":"none of mine","date":"2016-02-04T06:57:50.413Z","type":"message"}
{"nick":"xaxxon","message":"but I don't know about v8","date":"2016-02-04T06:57:54.620Z","type":"message"}
{"nick":"xaxxon","message":"..or maybe the generated code is generated as if noexcept","date":"2016-02-04T06:58:09.439Z","type":"message"}
{"nick":"jgi","message":"xaxxon: if you find out what’s going on, I’m interested","date":"2016-02-04T06:59:34.907Z","type":"message"}
{"nick":"jgi","message":"xaxxon: I probably won’t have time to look into it","date":"2016-02-04T06:59:43.571Z","type":"message"}
{"nick":"xaxxon","message":"I've started my post to the list","date":"2016-02-04T06:59:46.053Z","type":"message"}
{"nick":"xaxxon","message":"so it'll be on v8-dev","date":"2016-02-04T06:59:50.243Z","type":"message"}
{"nick":"jgi","message":"xaxxon: maybe v8-user would be more appropriate?","date":"2016-02-04T07:00:33.591Z","type":"message"}
{"nick":"jgi","message":"xaxxon: sorry v8-userS","date":"2016-02-04T07:00:49.556Z","type":"message"}
{"nick":"xaxxon","message":"oh didn't know about that.   sure","date":"2016-02-04T07:01:14.763Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2016-02-04T07:11:00.053Z","type":"quit"}
{"nick":"plutoniix","date":"2016-02-04T07:15:06.479Z","type":"join"}
{"nick":"watilde","date":"2016-02-04T07:32:53.838Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-02-04T07:33:20.076Z","type":"quit"}
{"nick":"watilde","reason":"Remote host closed the connection","date":"2016-02-04T07:49:03.983Z","type":"quit"}
{"nick":"davi","date":"2016-02-04T08:14:12.625Z","type":"join"}
{"nick":"davi","reason":"Ping timeout: 250 seconds","date":"2016-02-04T08:22:07.402Z","type":"quit"}
{"nick":"rendar","date":"2016-02-04T08:25:32.333Z","type":"join"}
{"nick":"xaxxon","reason":"Ping timeout: 240 seconds","date":"2016-02-04T08:42:15.608Z","type":"quit"}
{"nick":"xaxxon","date":"2016-02-04T09:18:37.957Z","type":"join"}
{"nick":"etnbrd","date":"2016-02-04T09:47:15.608Z","type":"join"}
{"nick":"xaxxon","reason":"Ping timeout: 276 seconds","date":"2016-02-04T10:05:59.032Z","type":"quit"}
{"nick":"seventh","date":"2016-02-04T11:59:23.449Z","type":"join"}
{"nick":"seventh","reason":"Ping timeout: 250 seconds","date":"2016-02-04T13:07:06.760Z","type":"quit"}
{"nick":"esas","date":"2016-02-04T14:16:20.819Z","type":"join"}
{"nick":"jugglinmike","date":"2016-02-04T14:51:52.630Z","type":"join"}
{"nick":"jugglinmike","reason":"Ping timeout: 240 seconds","date":"2016-02-04T14:58:55.633Z","type":"quit"}
{"nick":"jugglinmike","date":"2016-02-04T15:02:23.083Z","type":"join"}
{"nick":"bobmcw","reason":"Ping timeout: 245 seconds","date":"2016-02-04T15:10:21.881Z","type":"quit"}
{"nick":"bobmcw","date":"2016-02-04T15:13:09.794Z","type":"join"}
{"nick":"bobmcw","reason":"Changing host","date":"2016-02-04T15:13:09.795Z","type":"quit"}
{"nick":"bobmcw","date":"2016-02-04T15:13:09.795Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2010030309]","date":"2016-02-04T15:53:45.753Z","type":"quit"}
{"nick":"jgi","date":"2016-02-04T16:08:48.707Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-02-04T16:31:22.524Z","type":"quit"}
{"nick":"davi","date":"2016-02-04T16:47:39.693Z","type":"join"}
{"nick":"davi","reason":"Changing host","date":"2016-02-04T16:47:39.694Z","type":"quit"}
{"nick":"davi","date":"2016-02-04T16:47:39.694Z","type":"join"}
{"nick":"jgi","date":"2016-02-04T17:01:05.459Z","type":"join"}
{"nick":"C-Man","date":"2016-02-04T17:07:01.137Z","type":"join"}
{"nick":"davi","reason":"Remote host closed the connection","date":"2016-02-04T17:18:23.615Z","type":"quit"}
{"nick":"watilde","date":"2016-02-04T17:34:08.049Z","type":"join"}
{"nick":"davi","date":"2016-02-04T17:35:13.585Z","type":"join"}
{"nick":"davi","reason":"Changing host","date":"2016-02-04T17:35:13.585Z","type":"quit"}
{"nick":"davi","date":"2016-02-04T17:35:13.586Z","type":"join"}
{"nick":"watilde","reason":"Remote host closed the connection","date":"2016-02-04T17:41:47.121Z","type":"quit"}
{"nick":"watilde","date":"2016-02-04T17:42:29.763Z","type":"join"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2016-02-04T17:43:40.036Z","type":"quit"}
{"nick":"C-Man","date":"2016-02-04T17:56:07.428Z","type":"join"}
{"nick":"C-Man","reason":"Client Quit","date":"2016-02-04T17:58:46.044Z","type":"quit"}
{"nick":"C-Man","date":"2016-02-04T18:00:08.456Z","type":"join"}
{"nick":"C-Man","reason":"Client Quit","date":"2016-02-04T18:01:03.762Z","type":"quit"}
{"nick":"C-Man","date":"2016-02-04T18:01:58.459Z","type":"join"}
{"nick":"lerela","date":"2016-02-04T18:20:06.608Z","type":"join"}
{"nick":"davi","reason":"Remote host closed the connection","date":"2016-02-04T18:34:11.123Z","type":"quit"}
{"nick":"davi","date":"2016-02-04T18:37:43.262Z","type":"join"}
{"nick":"JoWie","date":"2016-02-04T18:42:17.490Z","type":"join"}
{"nick":"bradleymeck","date":"2016-02-04T18:45:06.192Z","type":"join"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2016-02-04T19:07:35.639Z","type":"quit"}
{"nick":"C-Man","date":"2016-02-04T19:10:02.391Z","type":"join"}
{"nick":"watilde","reason":"Remote host closed the connection","date":"2016-02-04T19:26:28.573Z","type":"quit"}
{"nick":"watilde","date":"2016-02-04T19:36:13.012Z","type":"join"}
{"nick":"watilde","reason":"Remote host closed the connection","date":"2016-02-04T19:36:13.197Z","type":"quit"}
{"nick":"watilde","date":"2016-02-04T19:36:45.715Z","type":"join"}
{"nick":"kenansul-","date":"2016-02-04T19:38:04.578Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 240 seconds","date":"2016-02-04T19:40:56.333Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-02-04T20:08:40.994Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-02-04T20:21:09.385Z","type":"join"}
{"nick":"xiinotulp","date":"2016-02-04T20:24:16.195Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 272 seconds","date":"2016-02-04T20:26:52.459Z","type":"quit"}
{"nick":"rendar","reason":"Ping timeout: 256 seconds","date":"2016-02-04T20:28:32.670Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Test262 - no variants\" on http://build.chromium.org/p/client.v8/builders/V8%20Win32%20-%20debug/builds/485 \"V8 Win32 - debug\" from 271f68ba026d252753ca9b2c947f4807b473cd08: alph@chromium.org)","date":"2016-02-04T20:29:01.468Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: open","date":"2016-02-04T20:34:05.771Z","type":"message"}
{"nick":"davi","reason":"Remote host closed the connection","date":"2016-02-04T20:34:14.236Z","type":"quit"}
{"nick":"rendar","date":"2016-02-04T20:34:28.491Z","type":"join"}
{"nick":"lmkmplm","date":"2016-02-04T20:37:10.094Z","type":"join"}
{"nick":"s1w","date":"2016-02-04T20:39:29.056Z","type":"join"}
{"nick":"s1w","new_nick":"Guest72371","date":"2016-02-04T20:39:52.177Z","type":"nick"}
{"nick":"C-Man","reason":"*.net *.split","date":"2016-02-04T20:47:46.989Z","type":"quit"}
{"nick":"Guest51729","reason":"*.net *.split","date":"2016-02-04T20:47:50.498Z","type":"quit"}
{"nick":"ErikCorry_","reason":"*.net *.split","date":"2016-02-04T20:47:50.498Z","type":"quit"}
{"nick":"phpnode","reason":"*.net *.split","date":"2016-02-04T20:47:50.501Z","type":"quit"}
{"nick":"ErikCorry_","date":"2016-02-04T20:49:38.744Z","type":"join"}
{"nick":"phpnode","date":"2016-02-04T21:00:49.723Z","type":"join"}
{"nick":"watilde","date":"2016-02-04T21:09:22.045Z","type":"join"}
{"nick":"davi","date":"2016-02-04T21:10:18.574Z","type":"join"}
{"nick":"davi","reason":"Changing host","date":"2016-02-04T21:10:18.574Z","type":"quit"}
{"nick":"davi","date":"2016-02-04T21:10:18.574Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-02-04T21:41:14.522Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-02-04T21:52:53.860Z","type":"join"}
{"nick":"davi","reason":"Ping timeout: 240 seconds","date":"2016-02-04T22:01:26.407Z","type":"quit"}
{"nick":"saper_","new_nick":"saper","date":"2016-02-04T22:03:19.880Z","type":"nick"}
{"nick":"watilde","reason":"Ping timeout: 276 seconds","date":"2016-02-04T22:14:38.124Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-02-04T22:26:23.509Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2016-02-04T22:32:32.705Z","type":"join"}
{"nick":"bradleymeck","date":"2016-02-04T22:34:37.685Z","type":"join"}
{"nick":"kenansul-","reason":"Read error: Connection reset by peer","date":"2016-02-04T23:10:08.396Z","type":"quit"}
{"nick":"kenansulayman","date":"2016-02-04T23:10:31.648Z","type":"join"}
{"nick":"watilde","date":"2016-02-04T23:10:42.789Z","type":"join"}
{"nick":"kenansulayman","new_nick":"Guest20356","date":"2016-02-04T23:10:54.967Z","type":"nick"}
{"nick":"watilde","reason":"Ping timeout: 240 seconds","date":"2016-02-04T23:15:56.361Z","type":"quit"}
{"nick":"lerela","reason":"Quit: Leaving","date":"2016-02-04T23:17:59.873Z","type":"quit"}
{"nick":"seventh","date":"2016-02-04T23:24:56.488Z","type":"join"}
{"nick":"seventh","reason":"Ping timeout: 240 seconds","date":"2016-02-04T23:50:58.042Z","type":"quit"}
{"nick":"xaxxon","date":"2016-02-04T23:51:03.077Z","type":"join"}
{"nick":"xaxxon","message":"jgi did you see the posting?  turns out all of V8 is built with -fno-exceptions so any exception thrown through its code will cause the program to exit immediately... so in my code, I just catch all exceptions before it returns to V8 and wrap it in an isolate->ThrowException to be caught by a TryCatch on the backside","date":"2016-02-04T23:52:01.432Z","type":"message"}
{"nick":"xaxxon","message":"also TryCatch and isolate->ThrowException have nothing to do with C++ exceptions... it's a completely proprietary exception system","date":"2016-02-04T23:52:30.574Z","type":"message"}
{"nick":"jgi","message":"xaxxon: yes, I saw that for -fno-exceptions, thanks! As for TryCatch and Isolate::ThrowException having nothing to do with C++ exceptions, that’s exactly what I was describing last night :)","date":"2016-02-04T23:59:55.579Z","type":"message"}
