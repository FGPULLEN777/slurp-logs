{"nick":"ysaberi","reason":"Quit: ysaberi","date":"2015-05-06T00:11:01.338Z","type":"quit"}
{"nick":"bnoordhuis","date":"2015-05-06T00:26:20.344Z","type":"join"}
{"nick":"BobGneu","date":"2015-05-06T00:28:40.369Z","type":"join"}
{"nick":"Bob_Gneu","reason":"Ping timeout: 245 seconds","date":"2015-05-06T00:29:49.593Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 250 seconds","date":"2015-05-06T00:31:01.342Z","type":"quit"}
{"nick":"plutoniix","date":"2015-05-06T01:00:08.305Z","type":"join"}
{"nick":"ncthom91","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2015-05-06T01:29:45.916Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-05-06T01:45:23.191Z","type":"quit"}
{"nick":"bradleymeck","date":"2015-05-06T01:55:21.291Z","type":"join"}
{"nick":"j0hnsm1th","date":"2015-05-06T02:12:07.639Z","type":"join"}
{"nick":"ncthom91","date":"2015-05-06T02:29:44.353Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-05-06T02:44:24.904Z","type":"quit"}
{"nick":"ofrobots","date":"2015-05-06T02:54:37.386Z","type":"join"}
{"nick":"ncthom91","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2015-05-06T03:22:54.813Z","type":"quit"}
{"nick":"bradleymeck","date":"2015-05-06T03:24:34.763Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-05-06T03:37:38.320Z","type":"quit"}
{"nick":"ncthom91","date":"2015-05-06T03:41:42.526Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-05-06T03:44:06.828Z","type":"quit"}
{"nick":"ncthom91","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2015-05-06T03:54:15.783Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on http://build.chromium.org/p/client.v8/builders/V8%20Win64%20-%20debug/builds/3243 \"V8 Win64 - debug\" from 5f047ff651a51a95f9625aab26c2a4a5f4f37587: chunyang.dai@intel.com)","date":"2015-05-06T04:04:47.659Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by bmeurer@google.com: Tree is open (same procedure as every day)","date":"2015-05-06T04:07:48.905Z","type":"message"}
{"nick":"ncthom91","date":"2015-05-06T04:18:43.589Z","type":"join"}
{"nick":"ncthom91","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2015-05-06T04:29:35.689Z","type":"quit"}
{"nick":"caitp-","reason":"Ping timeout: 244 seconds","date":"2015-05-06T04:32:00.326Z","type":"quit"}
{"nick":"ncthom91","date":"2015-05-06T04:57:46.133Z","type":"join"}
{"nick":"caitp-","date":"2015-05-06T05:28:23.485Z","type":"join"}
{"nick":"caitp-","reason":"Ping timeout: 244 seconds","date":"2015-05-06T05:32:58.236Z","type":"quit"}
{"nick":"ncthom91","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2015-05-06T05:40:14.214Z","type":"quit"}
{"nick":"dobson","reason":"Ping timeout: 264 seconds","date":"2015-05-06T05:52:22.484Z","type":"quit"}
{"nick":"muelli","date":"2015-05-06T06:04:24.462Z","type":"join"}
{"nick":"dobson","date":"2015-05-06T06:07:46.640Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux%20-%20noi18n%20-%20debug/builds/3543 \"V8 Linux - noi18n - debug\" from 4a2b4cdbf8a2cd18d5bb8bb85aa6fee59e4ea3ca: machenbach@chromium.org)","date":"2015-05-06T07:28:02.721Z","type":"message"}
{"nick":"caitp-","date":"2015-05-06T07:30:44.347Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: Tree is open","date":"2015-05-06T07:33:05.552Z","type":"message"}
{"nick":"caitp-","reason":"Ping timeout: 244 seconds","date":"2015-05-06T07:35:25.334Z","type":"quit"}
{"nick":"decoder","reason":"Quit: No Ping reply in 180 seconds.","date":"2015-05-06T08:04:12.643Z","type":"quit"}
{"nick":"decoder","date":"2015-05-06T08:04:29.917Z","type":"join"}
{"nick":"stalled","reason":"Ping timeout: 255 seconds","date":"2015-05-06T08:44:22.554Z","type":"quit"}
{"nick":"bnoordhuis","date":"2015-05-06T08:52:29.761Z","type":"join"}
{"nick":"plutoniix","reason":"Read error: Connection reset by peer","date":"2015-05-06T08:55:30.437Z","type":"quit"}
{"nick":"stalled","date":"2015-05-06T09:10:03.491Z","type":"join"}
{"nick":"plutoniix","date":"2015-05-06T09:11:04.072Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2015-05-06T09:32:09.799Z","type":"quit"}
{"nick":"bnoordhuis","date":"2015-05-06T09:39:10.263Z","type":"join"}
{"nick":"caitp-","date":"2015-05-06T09:47:40.298Z","type":"join"}
{"nick":"caitp-","reason":"Ping timeout: 244 seconds","date":"2015-05-06T09:52:51.228Z","type":"quit"}
{"nick":"muelli","reason":"Ping timeout: 264 seconds","date":"2015-05-06T10:02:34.718Z","type":"quit"}
{"nick":"bnoordhu1s","date":"2015-05-06T10:19:22.938Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 272 seconds","date":"2015-05-06T10:22:32.251Z","type":"quit"}
{"nick":"rendar","date":"2015-05-06T10:28:41.379Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2015-05-06T10:49:09.621Z","type":"quit"}
{"nick":"bnoordhu1s","message":"when a CL lands, how do i make it get back-ported to older branches?","date":"2015-05-06T11:17:28.602Z","type":"message"}
{"nick":"bnoordhu1s","message":"i usually ask but as often as not, that ends up by the wayside","date":"2015-05-06T11:18:00.266Z","type":"message"}
{"nick":"bnoordhu1s","new_nick":"bnoordhuis","date":"2015-05-06T11:22:24.230Z","type":"nick"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on http://build.chromium.org/p/client.v8/builders/V8%20Win32%20-%20debug%20-%203/builds/3005 \"V8 Win32 - debug - 3\" from 8ceb90356b0098c7df01678359535e4ed4bf05e8: ben@strongloop.com,conradw@chromium.org,vogelheim@chromium.org)","date":"2015-05-06T11:46:36.655Z","type":"message"}
{"nick":"StephenLynx","date":"2015-05-06T11:54:03.853Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: Tree is open","date":"2015-05-06T11:55:41.625Z","type":"message"}
{"nick":"esas","date":"2015-05-06T12:32:30.588Z","type":"quit"}
{"nick":"bobmcw","date":"2015-05-06T12:34:12.472Z","type":"join"}
{"nick":"ofrobots","date":"2015-05-06T12:48:58.340Z","type":"join"}
{"nick":"ofrobots","reason":"Client Quit","date":"2015-05-06T12:50:15.627Z","type":"quit"}
{"nick":"muelli","date":"2015-05-06T12:52:17.663Z","type":"join"}
{"nick":"ofrobots","date":"2015-05-06T12:54:04.877Z","type":"join"}
{"nick":"enaqx","date":"2015-05-06T12:54:07.459Z","type":"join"}
{"nick":"enaqx_","reason":"Read error: Connection reset by peer","date":"2015-05-06T12:56:30.268Z","type":"quit"}
{"nick":"caitp-","date":"2015-05-06T13:03:49.261Z","type":"join"}
{"nick":"Net147","date":"2015-05-06T13:08:57.783Z","type":"join"}
{"nick":"muelli","reason":"Ping timeout: 245 seconds","date":"2015-05-06T13:18:09.670Z","type":"quit"}
{"nick":"arv","message":"bnoordhuis: Talk/email to hablich@google.com","date":"2015-05-06T13:25:44.114Z","type":"message"}
{"nick":"arv","message":"bnoordhuis: There is `tools/release/merge_to_branch.py` but I'm not sure if there are any instructions (I found this on the internal wiki)","date":"2015-05-06T13:27:32.779Z","type":"message"}
{"nick":"bradleymeck","date":"2015-05-06T13:33:44.397Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-05-06T13:35:18.960Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by machenbach@chromium.org: Tree is closed (maintenance)","date":"2015-05-06T13:35:19.210Z","type":"message"}
{"nick":"plutoniix","date":"2015-05-06T13:36:14.570Z","type":"join"}
{"nick":"bnoordhuis","message":"arv: thanks","date":"2015-05-06T13:43:41.915Z","type":"message"}
{"nick":"wingo","action":"races the cq versus tree maintenance","date":"2015-05-06T13:45:23.861Z","type":"action"}
{"nick":"C-Man","date":"2015-05-06T13:54:00.885Z","type":"join"}
{"nick":"caitp-","message":"what exactly does an IC accomplish in Function.apply() anyway?","date":"2015-05-06T13:54:16.641Z","type":"message"}
{"nick":"Net147","reason":"Quit:  HydraIRC -> http://www.hydrairc.com <- It'll be on slashdot one day...","date":"2015-05-06T13:54:36.932Z","type":"quit"}
{"nick":"wingo","message":"feedback on the receiver and target function?  /me guesses","date":"2015-05-06T13:55:09.236Z","type":"message"}
{"nick":"caitp-","message":"hum","date":"2015-05-06T13:56:11.124Z","type":"message"}
{"nick":"esas","date":"2015-05-06T14:07:25.549Z","type":"join"}
{"nick":"caitp-","reason":"Ping timeout: 244 seconds","date":"2015-05-06T14:09:07.289Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: Tree is open","date":"2015-05-06T14:10:37.819Z","type":"message"}
{"nick":"bnoordhuis","message":"\"Please wait for an LGTM, then type \"LGTM<Return>\" to commit your change. (If you need to iterate on the patch or double check that it's sane, do so in another shell, but remember to not change the headline of the uploaded CL.\"","date":"2015-05-06T14:11:20.909Z","type":"message"}
{"nick":"bnoordhuis","message":"this has got to be the weirdest way of cherry-picking patches i've encountered so far","date":"2015-05-06T14:11:48.645Z","type":"message"}
{"nick":"bnoordhuis","message":"that's from tools/release/merge_to_branch.py","date":"2015-05-06T14:12:05.267Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't dare ^C it","date":"2015-05-06T14:12:17.328Z","type":"message"}
{"nick":"wingo","message":"wow :)","date":"2015-05-06T14:13:07.816Z","type":"message"}
{"nick":"ofrobots","date":"2015-05-06T14:23:58.240Z","type":"join"}
{"nick":"bnoordhuis","message":"\"CLs for remote refs other than refs/pending/heads/master must contain NOTRY=true","date":"2015-05-06T14:47:49.292Z","type":"message"}
{"nick":"bnoordhuis","message":"and NOPRESUBMIT=true in order for the CQ to process them\"","date":"2015-05-06T14:47:50.151Z","type":"message"}
{"nick":"bnoordhuis","message":"does that mean i need to edit the CL or should i resubmit it?","date":"2015-05-06T14:48:02.351Z","type":"message"}
{"nick":"wingo","message":"sounds like edit to me but i am not an owner","date":"2015-05-06T14:48:33.037Z","type":"message"}
{"nick":"wingo","message":"you might try to find your reviewer over hangouts","date":"2015-05-06T14:48:42.234Z","type":"message"}
{"nick":"bnoordhuis","message":"please god, no. i like my hermetic lifestyle. i'll try editing it","date":"2015-05-06T14:49:14.695Z","type":"message"}
{"nick":"wingo","message":"i meant hangouts chat :)","date":"2015-05-06T14:49:45.092Z","type":"message"}
{"nick":"wingo","message":"anyway :)","date":"2015-05-06T14:49:59.971Z","type":"message"}
{"nick":"bnoordhuis","message":"curious though; i've never seen the commit bot complain about that with other cherry-pick CLs","date":"2015-05-06T14:51:51.988Z","type":"message"}
{"nick":"bnoordhuis","message":"but edit+commit seems to have worked so hurray","date":"2015-05-06T14:53:47.396Z","type":"message"}
{"nick":"caitp","message":"i really don't get the fixation on hangouts, irc works so much better in terms of not endlessly beeping at me :(","date":"2015-05-06T15:00:36.686Z","type":"message"}
{"nick":"caitp-","date":"2015-05-06T15:05:22.345Z","type":"join"}
{"nick":"caitp-","reason":"Ping timeout: 244 seconds","date":"2015-05-06T15:12:09.304Z","type":"quit"}
{"nick":"bnoordhuis","message":"probably something to do with dog food","date":"2015-05-06T15:13:09.153Z","type":"message"}
{"nick":"caitp","message":"yeah it just seems like the wrong tool for the job","date":"2015-05-06T15:17:26.587Z","type":"message"}
{"nick":"StephenLynx","message":"millenials","date":"2015-05-06T15:18:01.403Z","type":"message"}
{"nick":"arv","message":"caitp: you can turn of the sound ;-)","date":"2015-05-06T15:20:26.993Z","type":"message"}
{"nick":"caitp","message":"arv do you have any last bits on 548833002 before I cq it?","date":"2015-05-06T15:22:46.731Z","type":"message"}
{"nick":"caitp","message":"it's been a long timewaiting","date":"2015-05-06T15:22:53.266Z","type":"message"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2009081014]","date":"2015-05-06T15:44:35.496Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-05-06T15:51:07.760Z","type":"quit"}
{"nick":"caitp-","date":"2015-05-06T15:54:18.378Z","type":"join"}
{"nick":"caitp-","reason":"Client Quit","date":"2015-05-06T15:56:33.335Z","type":"quit"}
{"nick":"caitp-","date":"2015-05-06T15:57:59.227Z","type":"join"}
{"nick":"ncthom91","date":"2015-05-06T16:03:59.460Z","type":"join"}
{"nick":"ysaberi","date":"2015-05-06T16:06:51.884Z","type":"join"}
{"nick":"ofrobots","date":"2015-05-06T16:06:59.770Z","type":"join"}
{"nick":"davi","date":"2015-05-06T16:18:01.010Z","type":"join"}
{"nick":"davi","reason":"Changing host","date":"2015-05-06T16:18:01.010Z","type":"quit"}
{"nick":"davi","date":"2015-05-06T16:18:01.010Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-05-06T16:21:40.661Z","type":"quit"}
{"nick":"ofrobots","date":"2015-05-06T16:22:45.045Z","type":"join"}
{"nick":"ncthom91","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2015-05-06T16:25:23.561Z","type":"quit"}
{"nick":"ncthom91","date":"2015-05-06T16:29:05.328Z","type":"join"}
{"nick":"ncthom91","message":"hi all. Is it possible to create a new Isolate from an existing isolate?","date":"2015-05-06T16:32:45.717Z","type":"message"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-05-06T16:32:57.744Z","type":"quit"}
{"nick":"bradleymeck","message":"ncthom91: look at snapshots? you can't exactly do a memcpy","date":"2015-05-06T16:34:11.111Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-05-06T16:34:29.256Z","type":"quit"}
{"nick":"ncthom91","message":"i'd like to try writing a nodejs addon wherein, from JS-land I can fill a shared work queue, and in C++ land I have a pool of worker threads that just pop off the queue and do their processing. The hard part with that is that the processing step that each thread will run involves executing javascript","date":"2015-05-06T16:35:00.955Z","type":"message"}
{"nick":"ncthom91","message":"I suppose http://stackoverflow.com/a/7921673/2320243 that might be what I need","date":"2015-05-06T16:36:37.506Z","type":"message"}
{"nick":"ncthom91","message":"although I'm not sure how much concurrency I'll get by using that since the main task involves using v8","date":"2015-05-06T16:37:31.071Z","type":"message"}
{"nick":"ncthom91","message":"hence my question about duplicating isolates :)","date":"2015-05-06T16:37:45.368Z","type":"message"}
{"nick":"ysaberi_","date":"2015-05-06T16:47:27.517Z","type":"join"}
{"nick":"ysaberi","reason":"Ping timeout: 252 seconds","date":"2015-05-06T16:47:44.896Z","type":"quit"}
{"nick":"ysaberi_","new_nick":"ysaberi","date":"2015-05-06T16:47:45.551Z","type":"nick"}
{"nick":"ncthom91","message":"for anyone following that ^, I suspect Node's VM source code will point me to the answers I need :) https://nodejs.org/api/vm.html#vm_vm_createcontext_sandbox","date":"2015-05-06T17:05:58.334Z","type":"message"}
{"nick":"rendar","reason":"Ping timeout: 264 seconds","date":"2015-05-06T17:19:01.427Z","type":"quit"}
{"nick":"j0hnsm1th","reason":"Remote host closed the connection","date":"2015-05-06T17:20:32.305Z","type":"quit"}
{"nick":"rendar","date":"2015-05-06T17:25:44.131Z","type":"join"}
{"nick":"ofrobots","date":"2015-05-06T17:42:47.092Z","type":"join"}
{"nick":"ncthom91","message":"ok, so after doing a bit more research, I understand that v8 is not thread-safe by default. However, I intend to create a new isolate for each thread and duplicate the relevant context into each of those isolates. I can use v8::Locker for those isolates as well, though I'm not sure it will be necessary. For those of you with more experience embedding v8... is this a bad idea?","date":"2015-05-06T17:58:46.553Z","type":"message"}
{"nick":"bradleymeck","date":"2015-05-06T18:14:40.963Z","type":"join"}
{"nick":"bradleymeck","message":"ncthom91: ended up leaving before i saw if you got an answer, did you figure out snapshots ?","date":"2015-05-06T18:23:35.131Z","type":"message"}
{"nick":"ncthom91","message":"bradleymeck no :P, but I came up with a different approach that I think will work. Can I run it by you?","date":"2015-05-06T18:24:20.702Z","type":"message"}
{"nick":"bradleymeck","message":"ok","date":"2015-05-06T18:24:30.079Z","type":"message"}
{"nick":"ncthom91","message":"ok so the plan is to write a node addon wherein, from JS-land I can push things into a work queue, then from C++ land spin a bunch of threads off to consume the queue concurrently, passing the results into a different queue that the main JS thread will read from","date":"2015-05-06T18:25:39.140Z","type":"message"}
{"nick":"ncthom91","message":"the challenging part is that the task that each thread will execute requires running JS, so now I'm in a threaded-v8 mindset, but v8 isn't threadsafe","date":"2015-05-06T18:26:11.308Z","type":"message"}
{"nick":"ncthom91","message":"so I'm thinking: in each thread, create a new isolate, attach a new Context (which I can create with the same Global object as the default context), and eval my script to get the result","date":"2015-05-06T18:26:58.059Z","type":"message"}
{"nick":"StephenLynx","message":"what if","date":"2015-05-06T18:27:37.865Z","type":"message"}
{"nick":"ncthom91","message":"because, my understanding is that using multiple isolates will circumvent v8's non-threadsafe issues","date":"2015-05-06T18:27:39.902Z","type":"message"}
{"nick":"StephenLynx","message":"ok, hear me out.","date":"2015-05-06T18:27:46.766Z","type":"message"}
{"nick":"StephenLynx","message":"what if you use the cluster module on node/io?","date":"2015-05-06T18:28:00.466Z","type":"message"}
{"nick":"StephenLynx","message":"and use workers as threads that send information back to the main thread?","date":"2015-05-06T18:28:20.611Z","type":"message"}
{"nick":"ncthom91","message":"StephenLynx I have, this is sort of an experiment to see if I can accomplish the same goal faster","date":"2015-05-06T18:28:38.571Z","type":"message"}
{"nick":"StephenLynx","message":"oh, nvm then.","date":"2015-05-06T18:28:46.262Z","type":"message"}
{"nick":"bradleymeck","message":"ncthom91: sounds like threx","date":"2015-05-06T18:29:04.186Z","type":"message"}
{"nick":"davi","reason":"Ping timeout: 256 seconds","date":"2015-05-06T18:29:05.838Z","type":"quit"}
{"nick":"ncthom91","message":"bradleymeck https://github.com/trevnorris/threx ?","date":"2015-05-06T18:30:16.263Z","type":"message"}
{"nick":"bradleymeck","message":"ya","date":"2015-05-06T18:30:19.679Z","type":"message"}
{"nick":"ncthom91","message":"interesting... hadn't seen this","date":"2015-05-06T18:30:43.022Z","type":"message"}
{"nick":"trevnorris","message":"what's up?","date":"2015-05-06T18:31:00.408Z","type":"message"}
{"nick":"ncthom91","message":"trevnorris heh, how convenient. We were just chatting about threaded node addons","date":"2015-05-06T18:32:39.994Z","type":"message"}
{"nick":"ncthom91","message":"and bradleymeck suggested your project","date":"2015-05-06T18:32:50.423Z","type":"message"}
{"nick":"ncthom91","message":"trevnorris I'm looking over your main.cc file, and don't see exactly where you guarantee MT safety?","date":"2015-05-06T18:33:47.995Z","type":"message"}
{"nick":"trevnorris","message":"threx does absolutely minimum. it's up to the user to make sure the thread is cleaned up before it's brought down.","date":"2015-05-06T18:35:04.967Z","type":"message"}
{"nick":"ncthom91","message":"it also looks like threx encourages only 1 thread?","date":"2015-05-06T18:35:49.070Z","type":"message"}
{"nick":"trevnorris","message":"no. running `new Thread()` should spawn a new thread every time.","date":"2015-05-06T18:36:56.061Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-05-06T18:37:44.587Z","type":"quit"}
{"nick":"ncthom91","message":"oh, oops, i see","date":"2015-05-06T18:38:16.102Z","type":"message"}
{"nick":"trevnorris","message":"it's not the most elegant API, but wanted to leave it as flexible as possible for better interfaces down the road.","date":"2015-05-06T18:38:26.083Z","type":"message"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2015-05-06T18:38:45.142Z","type":"quit"}
{"nick":"ncthom91","message":"trevnorris should each thread have it's own isolate?","date":"2015-05-06T18:42:15.114Z","type":"message"}
{"nick":"trevnorris","message":"ncthom91: yes","date":"2015-05-06T18:42:39.957Z","type":"message"}
{"nick":"trevnorris","message":"you can't share an Isolate across threads.","date":"2015-05-06T18:42:50.501Z","type":"message"}
{"nick":"ncthom91","message":"is that something thex does for you?","date":"2015-05-06T18:42:52.834Z","type":"message"}
{"nick":"ncthom91","message":"I don't see it in main.cc (but i suck at reading C++ still, so taht's probably why)","date":"2015-05-06T18:43:12.579Z","type":"message"}
{"nick":"trevnorris","message":"threx only handles thread management. it's up to the user to implement whatever they want on top of that.","date":"2015-05-06T18:43:58.258Z","type":"message"}
{"nick":"trevnorris","message":"basically, it's a tiny library that someone could use to more easily create a multi-threaded JS env.","date":"2015-05-06T18:44:26.410Z","type":"message"}
{"nick":"ncthom91","message":"i see","date":"2015-05-06T18:45:49.967Z","type":"message"}
{"nick":"BobGneu","date":"2015-05-06T18:47:32.422Z","type":"quit"}
{"nick":"StephenLynx","reason":"*.net *.split","date":"2015-05-06T18:47:57.807Z","type":"quit"}
{"nick":"stalled","reason":"*.net *.split","date":"2015-05-06T18:47:57.808Z","type":"quit"}
{"nick":"ysaberi","reason":"*.net *.split","date":"2015-05-06T18:47:59.460Z","type":"quit"}
{"nick":"esas","reason":"*.net *.split","date":"2015-05-06T18:47:59.663Z","type":"quit"}
{"nick":"wingo","reason":"*.net *.split","date":"2015-05-06T18:48:00.275Z","type":"quit"}
{"nick":"jwilm","reason":"*.net *.split","date":"2015-05-06T18:48:00.913Z","type":"quit"}
{"nick":"dobson","reason":"*.net *.split","date":"2015-05-06T18:48:01.524Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-05-06T18:49:13.958Z","type":"quit"}
{"nick":"ysaberi","date":"2015-05-06T18:49:27.170Z","type":"join"}
{"nick":"esas","date":"2015-05-06T18:49:27.374Z","type":"join"}
{"nick":"dobson","date":"2015-05-06T18:49:27.374Z","type":"join"}
{"nick":"wingo","date":"2015-05-06T18:49:27.374Z","type":"join"}
{"nick":"jwilm","date":"2015-05-06T18:49:27.374Z","type":"join"}
{"nick":"StephenLynx","date":"2015-05-06T18:49:34.937Z","type":"join"}
{"nick":"stalled","date":"2015-05-06T18:49:34.937Z","type":"join"}
{"nick":"stalled","reason":"Max SendQ exceeded","date":"2015-05-06T18:49:58.840Z","type":"quit"}
{"nick":"ncthom91","message":"trevnorris did you ever have success making new isolates and attaching new node contexts? Any chance you have code I could look at for that?","date":"2015-05-06T18:51:39.850Z","type":"message"}
{"nick":"trevnorris","message":"ncthom91: i did some experimentation simply evaluating a script and returning some simple output, but nothing serious.","date":"2015-05-06T18:53:33.171Z","type":"message"}
{"nick":"ofrobots","date":"2015-05-06T18:53:44.439Z","type":"join"}
{"nick":"ncthom91","message":"that sounds roughly like what I intend to do ;)","date":"2015-05-06T18:53:58.191Z","type":"message"}
{"nick":"trevnorris","message":"sure. you can look at the code in node.cc to see how to spin up a new Isolate, Context and execute a script.","date":"2015-05-06T18:54:39.571Z","type":"message"}
{"nick":"trevnorris","message":"after evaluating you can pass the message back using threx.","date":"2015-05-06T18:54:51.846Z","type":"message"}
{"nick":"ncthom91","message":"trevnorris have you seen https://github.com/iojs/nan/blob/master/examples/async_pi_estimate/async.cc ?","date":"2015-05-06T19:00:29.856Z","type":"message"}
{"nick":"stalled","date":"2015-05-06T19:01:09.910Z","type":"join"}
{"nick":"ncthom91","message":"it seems similar to what you built; using NAN with the NanAsyncWorker abstraction, threading is kind of taken care of for you, so long as you're safe about v8 access in the Execute method","date":"2015-05-06T19:01:16.607Z","type":"message"}
{"nick":"ncthom91","message":"which, as far as I can tell, would be accomplished by creating a new isolate","date":"2015-05-06T19:01:44.202Z","type":"message"}
{"nick":"ncthom91","message":"(also, I don't see a node.cc file?)","date":"2015-05-06T19:02:31.301Z","type":"message"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-05-06T19:06:02.954Z","type":"quit"}
{"nick":"ofrobots","date":"2015-05-06T19:10:01.427Z","type":"join"}
{"nick":"trevnorris","message":"interesting. I haven't used that before.","date":"2015-05-06T19:10:20.302Z","type":"message"}
{"nick":"ncthom91","message":"trevnorris can you point me to that node.cc file you mentioned? I'm not sure where you were referring, but I'd love tos ee it","date":"2015-05-06T19:12:09.550Z","type":"message"}
{"nick":"trevnorris","message":"oop. meant from io.js. here's where we start up the JS application, as an example: https://github.com/iojs/io.js/blob/master/src/node.cc#L3870-L3881","date":"2015-05-06T19:13:14.395Z","type":"message"}
{"nick":"ncthom91","message":"ah interesting","date":"2015-05-06T19:15:39.565Z","type":"message"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2015-05-06T19:17:23.935Z","type":"quit"}
{"nick":"ysaberi","reason":"*.net *.split","date":"2015-05-06T19:18:49.115Z","type":"quit"}
{"nick":"esas","reason":"*.net *.split","date":"2015-05-06T19:18:49.318Z","type":"quit"}
{"nick":"wingo","reason":"*.net *.split","date":"2015-05-06T19:18:49.825Z","type":"quit"}
{"nick":"jwilm","reason":"*.net *.split","date":"2015-05-06T19:18:50.277Z","type":"quit"}
{"nick":"ysaberi","date":"2015-05-06T19:19:14.469Z","type":"join"}
{"nick":"esas","date":"2015-05-06T19:19:14.673Z","type":"join"}
{"nick":"wingo","date":"2015-05-06T19:19:14.673Z","type":"join"}
{"nick":"jwilm","date":"2015-05-06T19:19:14.673Z","type":"join"}
{"nick":"ncthom91","message":"hey trevnorris can I bug you a little more? With this idea of creating a new isolate for each thread, I don't quite see how Context comes into play, particularly because of examples  like this: https://github.com/iojs/node-addon-examples/blob/master/2_function_arguments/node_0.12/addon.cc#L6-L8","date":"2015-05-06T19:30:54.978Z","type":"message"}
{"nick":"ncthom91","message":"do you suppose it would be sufficient to just create a new isolate?","date":"2015-05-06T19:32:05.770Z","type":"message"}
{"nick":"bradleymeck","date":"2015-05-06T19:34:50.524Z","type":"join"}
{"nick":"bobmcw","date":"2015-05-06T19:35:54.280Z","type":"join"}
{"nick":"ncthom91","message":"hm nvm i think i got it","date":"2015-05-06T19:36:08.424Z","type":"message"}
{"nick":"{aaron}","date":"2015-05-06T19:41:05.743Z","type":"join"}
{"nick":"{aaron}","reason":"Quit: Leaving","date":"2015-05-06T19:49:36.725Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux%20-%20nosnap/builds/2872 \"V8 Linux - nosnap\" from 65c56d49b2d671ac9e379de726bff3eb03a508c1: yangguo@chromium.org)","date":"2015-05-06T19:56:16.508Z","type":"message"}
{"nick":"{aaron}","date":"2015-05-06T20:00:04.953Z","type":"join"}
{"nick":"{aaron}","message":"guys, i don't know if this is the right channel, but I have encountered very bizarre js behavior and i'm wondering if it may have to do with array iteration or function call optimizations","date":"2015-05-06T20:06:10.958Z","type":"message"}
{"nick":"{aaron}","message":"essentially, before a jump into a function (a run of the mill lodash predicate), a parameter has a certain value, but once stepped through it has a completely different type and value","date":"2015-05-06T20:07:10.805Z","type":"message"}
{"nick":"{aaron}","message":"i have a couple of console screenshots","date":"2015-05-06T20:07:31.569Z","type":"message"}
{"nick":"bnoordhuis","message":"{aaron}: not a v8 dev but i can channel what they'd ask: a) does it happen in other browsers, and b) do you have a reduced test case?","date":"2015-05-06T20:09:32.142Z","type":"message"}
{"nick":"{aaron}","message":"it's hard to reproduce. i have not yet reproduced it in firefox","date":"2015-05-06T20:10:13.351Z","type":"message"}
{"nick":"{aaron}","message":"i don't have a reduced test case because again it appears sporadically, i have no idea what the underlying cause is or how i'd reproduce it","date":"2015-05-06T20:10:39.609Z","type":"message"}
{"nick":"{aaron}","message":"i'll try to paste the console output somewhere hold on","date":"2015-05-06T20:10:51.009Z","type":"message"}
{"nick":"{aaron}","message":"http://ctrlv.in/570598","date":"2015-05-06T20:11:51.031Z","type":"message"}
{"nick":"{aaron}","message":"as you can see here the first invocation of _.any produces what i consider the correct output: we have an array with single item which is a PhraseModel, which is an object defined with coffeescript inheritence (nothing really remarkable)","date":"2015-05-06T20:13:02.005Z","type":"message"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-05-06T20:13:21.333Z","type":"quit"}
{"nick":"{aaron}","message":"i key up and invoke the same exact command, and now magically the output has changed. i have made 0 changes between the two invocations","date":"2015-05-06T20:13:31.571Z","type":"message"}
{"nick":"{aaron}","message":"from then on out, the value is \"stuck\" to the number 5002, which doesn't appear to have any relation to anything else in the object ","date":"2015-05-06T20:13:55.737Z","type":"message"}
{"nick":"bnoordhuis","message":"{aaron}: that's a lot of moving layers (lodash, coffeescript)","date":"2015-05-06T20:14:23.931Z","type":"message"}
{"nick":"{aaron}","message":"hold on i'll paste the debug screenshot","date":"2015-05-06T20:14:45.666Z","type":"message"}
{"nick":"{aaron}","message":"http://ctrlv.in/570605","date":"2015-05-06T20:15:28.114Z","type":"message"}
{"nick":"{aaron}","message":"yes i wondering if lodash had anything to do with it so i debugged, it's really just a typical loop over array. the output in the second screenshot shows the values before and after this invocation:","date":"2015-05-06T20:16:11.036Z","type":"message"}
{"nick":"{aaron}","message":"if (predicate(array[index], index, array)) {","date":"2015-05-06T20:16:25.299Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: Tree is open","date":"2015-05-06T20:16:27.561Z","type":"message"}
{"nick":"bnoordhuis","message":"maybe try starting chrome with --nocrankshaft to disable the optimizing compiler and see if the problem goes away","date":"2015-05-06T20:16:36.899Z","type":"message"}
{"nick":"{aaron}","message":"ah ok","date":"2015-05-06T20:16:43.185Z","type":"message"}
{"nick":"{aaron}","message":"there is one reason i suspect it mayy have to do with arrays. the object returned by getPhrases() is not a vanilla array.  i used this technique to add methods to a vanilla array: http://www.bennadel.com/blog/2292-extending-javascript-arrays-while-keeping-native-bracket-notation-functionality.htm","date":"2015-05-06T20:18:15.408Z","type":"message"}
{"nick":"{aaron}","message":"my next step is to just dispense with that and use a vanilla array (the problem disappears when the item is placed in a new array)","date":"2015-05-06T20:18:55.201Z","type":"message"}
{"nick":"{aaron}","message":"i will try --nocrankshaft and see if that changes anything","date":"2015-05-06T20:19:18.905Z","type":"message"}
{"nick":"ofrobots","date":"2015-05-06T20:29:46.947Z","type":"join"}
{"nick":"ncthom91","message":"Hey all. I've another quick question about threading and v8, particularly in respect to the NAN AsyncQueueWorker abstraction:","date":"2015-05-06T20:32:29.907Z","type":"message"}
{"nick":"ncthom91","message":"the Execute method explicitly suggests not touching v8: https://github.com/iojs/nan/blob/master/examples/async_pi_estimate/async.cc#L25-L31","date":"2015-05-06T20:32:40.437Z","type":"message"}
{"nick":"ncthom91","message":"however, I see a lot of suggestions that v8 can be made threadsafe by using separate isolates and Locker instances","date":"2015-05-06T20:32:58.360Z","type":"message"}
{"nick":"ncthom91","message":"\"threadsafe\" might be the wrong word, but, hopefully that gets my point across","date":"2015-05-06T20:33:12.074Z","type":"message"}
{"nick":"ncthom91","message":"my question then is, is it unsafe to instantiate new Isolates in the execute method?","date":"2015-05-06T20:33:21.465Z","type":"message"}
{"nick":"ncthom91","message":"and compile/execute scripts against that isolate?","date":"2015-05-06T20:33:29.636Z","type":"message"}
{"nick":"ncthom91","message":"maybe it's smarter to send new isolates in as arguments to the constructor?","date":"2015-05-06T20:34:33.026Z","type":"message"}
{"nick":"bnoordhuis","message":"ncthom91: you can create a new isolate in Execute()","date":"2015-05-06T20:37:47.442Z","type":"message"}
{"nick":"bnoordhuis","message":"ncthom91: if you're using nan with io.js, keep in mind that Execute() runs in the (limited size) thread pool ","date":"2015-05-06T20:38:14.805Z","type":"message"}
{"nick":"ncthom91","message":"bnoordhuis and that will be \"safe\" in this case?","date":"2015-05-06T20:38:25.008Z","type":"message"}
{"nick":"ncthom91","message":"I'm ok with a limited thread pool. Do you know per chance how big it is?","date":"2015-05-06T20:38:34.977Z","type":"message"}
{"nick":"bnoordhuis","message":"sadly i do. i wrote it :-/ it defaults to 4, configurable with the UV_THREADPOOL_SIZE env var","date":"2015-05-06T20:39:02.041Z","type":"message"}
{"nick":"ncthom91","message":"bnoordhuis my other question, is it costly to create new isolates & contexts all the time like that?","date":"2015-05-06T20:39:12.749Z","type":"message"}
{"nick":"bnoordhuis","message":"i never got around to making it auto-scale without regressing some use cases","date":"2015-05-06T20:39:15.064Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, it's costly","date":"2015-05-06T20:39:26.147Z","type":"message"}
{"nick":"bnoordhuis","message":"it's on the order of milliseconds","date":"2015-05-06T20:39:43.405Z","type":"message"}
{"nick":"ncthom91","message":"hah, awesome. I'm talking to the right person then :). Is there a way to make it less costly?","date":"2015-05-06T20:40:24.698Z","type":"message"}
{"nick":"ncthom91","message":"the v8 embedders guide suggests adding the build option `snapshot=yes`?","date":"2015-05-06T20:40:41.173Z","type":"message"}
{"nick":"bradleymeck","message":"it is still costly","date":"2015-05-06T20:40:59.249Z","type":"message"}
{"nick":"bnoordhuis","message":"snapshots help but yeah, still costly","date":"2015-05-06T20:41:04.609Z","type":"message"}
{"nick":"{aaron}","reason":"Ping timeout: 246 seconds","date":"2015-05-06T20:41:47.934Z","type":"quit"}
{"nick":"ncthom91","message":"how do I supply that option in a binding.gyp file? ","date":"2015-05-06T20:42:39.805Z","type":"message"}
{"nick":"bnoordhuis","message":"you don't, you set it at run-time: env UV_THREADPOOL_SIZE=64 iojs app.js","date":"2015-05-06T20:44:15.809Z","type":"message"}
{"nick":"bnoordhuis","message":"oh wait, you mean snapshots?","date":"2015-05-06T20:44:28.016Z","type":"message"}
{"nick":"bnoordhuis","message":"set v8_use_snapshot to true","date":"2015-05-06T20:44:49.985Z","type":"message"}
{"nick":"bradleymeck","message":"does snapshotting still keep the fns deopted?","date":"2015-05-06T20:44:58.169Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't think so. i know hydrogen optimizes some intrinsics so i assume the builtins are eligible for optimization now","date":"2015-05-06T20:46:03.874Z","type":"message"}
{"nick":"ncthom91","message":"bnoordhuis sorry, i'm super new to all of this. How do I set v8_use_snapshot to true? Is that a binding.gyp file option?","date":"2015-05-06T20:47:10.498Z","type":"message"}
{"nick":"bnoordhuis","message":"ncthom91: apologies, i took a shortcut there. you can't influence it from an addon's binding.gyp","date":"2015-05-06T20:47:57.583Z","type":"message"}
{"nick":"bnoordhuis","message":"you can when you build v8 from source (with v8_use_snapshot) or when you build io.js from source (./configure --with-snapshot)","date":"2015-05-06T20:48:31.054Z","type":"message"}
{"nick":"caitp-","message":"code has to get pretty hot before it can be inlined","date":"2015-05-06T20:49:01.525Z","type":"message"}
{"nick":"ncthom91","message":"oh, i see. hm... that's a bummer. Well, a few ms per instantiation hopefully won't be bad","date":"2015-05-06T20:49:01.853Z","type":"message"}
{"nick":"caitp-","message":"and not everything can be inlined","date":"2015-05-06T20:49:11.001Z","type":"message"}
{"nick":"bnoordhuis","message":"caitp-: nice work on the optional params. exciting times","date":"2015-05-06T20:52:34.161Z","type":"message"}
{"nick":"caitp-","message":"well, it will be nicer work when they work correctly :p","date":"2015-05-06T20:52:58.453Z","type":"message"}
{"nick":"caitp-","message":"but yeah, it's cool","date":"2015-05-06T20:53:01.837Z","type":"message"}
{"nick":"bnoordhuis","message":"did you figure out the lazy parsing thing?","date":"2015-05-06T20:53:38.578Z","type":"message"}
{"nick":"caitp-","message":"no, but that's deferred until scoping is done right i guess","date":"2015-05-06T20:54:35.310Z","type":"message"}
{"nick":"caitp-","message":"andreas wanted scoping in a followup","date":"2015-05-06T20:54:42.343Z","type":"message"}
{"nick":"StephenLynx","reason":"Remote host closed the connection","date":"2015-05-06T20:55:09.375Z","type":"quit"}
{"nick":"ncthom91","message":"cool, my test project to evaluate the perf of NanAsyncQueueWorker vs. Node's default IPC vs. a shared memory IPC message queue has NanAsyncQueueWorker winning by almost 4x, even with context & isolate creation in the Execute function","date":"2015-05-06T20:55:20.259Z","type":"message"}
{"nick":"caitp-","message":"i'm hoping marja can help with that when she gets back, since i'm guessing she knows the lazy parsing stuff best","date":"2015-05-06T20:55:31.609Z","type":"message"}
{"nick":"{aaron}","date":"2015-05-06T20:55:34.899Z","type":"join"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2015-05-06T20:56:55.625Z","type":"quit"}
{"nick":"ncthom91","message":"bnoordhuis I don't suppose there's any way to create one individual, thread-local isolate for each of the threads in the pool, is there? To limit the create cost?","date":"2015-05-06T21:01:52.793Z","type":"message"}
{"nick":"ncthom91","message":"and somehow have Execute called with a reference to that isolate","date":"2015-05-06T21:03:05.029Z","type":"message"}
{"nick":"bnoordhuis","message":"ncthom91: you could do that. libuv has apis for thread-local storage","date":"2015-05-06T21:04:41.337Z","type":"message"}
{"nick":"bnoordhuis","message":"not in node.js v0.10 though","date":"2015-05-06T21:04:49.841Z","type":"message"}
{"nick":"ncthom91","message":"interesting... that's ok, I don't need node v10","date":"2015-05-06T21:05:09.867Z","type":"message"}
{"nick":"bnoordhuis","message":"ncthom91: maybe you should move over to #io.js :) we've moved mostly outside the realm of v8 proper","date":"2015-05-06T21:05:51.626Z","type":"message"}
{"nick":"ncthom91","message":"bnoordhuis heh, sure :)","date":"2015-05-06T21:08:40.245Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-05-06T21:33:59.239Z","type":"quit"}
{"nick":"{aaron}","reason":"Quit: Leaving","date":"2015-05-06T21:34:07.344Z","type":"quit"}
{"nick":"{aaron}","date":"2015-05-06T21:35:42.921Z","type":"join"}
{"nick":"{aaron}","message":"bnoordhuis: this is as close as i can get to a reduced test case: http://jsfiddle.net/aaronh/g7m9z95m/","date":"2015-05-06T21:37:14.351Z","type":"message"}
{"nick":"ncthom91","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2015-05-06T21:38:24.447Z","type":"quit"}
{"nick":"{aaron}","message":"of course this doesn't demonstrate the bug. in reality i have have hundreds or thousands of collection items and only see the bug on 1-4 of them, which don't look any different from any of the other items on visual inspection (the __proto__s are all identical as well)","date":"2015-05-06T21:38:25.458Z","type":"message"}
{"nick":"caitp-","message":"what exactly is the bug?","date":"2015-05-06T21:42:57.469Z","type":"message"}
{"nick":"{aaron}","message":"http://ctrlv.in/570598","date":"2015-05-06T21:43:34.345Z","type":"message"}
{"nick":"{aaron}","message":"http://ctrlv.in/570605","date":"2015-05-06T21:43:38.381Z","type":"message"}
{"nick":"{aaron}","message":"essentially, before a jump into a function (a run of the mill lodash predicate), a parameter has a certain value, but once stepped through it has a completely different type and value","date":"2015-05-06T21:43:42.719Z","type":"message"}
{"nick":"{aaron}","message":"the item (object) in the array magically transforms to an integer on the other side of the function invocation","date":"2015-05-06T21:44:49.418Z","type":"message"}
{"nick":"{aaron}","message":"despite the fact that the collection argument itself is intact, and you can see arr[2][0] is clearly not an integer but the object","date":"2015-05-06T21:45:21.726Z","type":"message"}
{"nick":"{aaron}","message":"have not been able to trigger it since using --js-flags=\"--nocrankshaft\"...but i can't reliably trigger it in the first place so don' tknow if that means anything","date":"2015-05-06T21:48:12.830Z","type":"message"}
{"nick":"caitp-","message":"well, it's possible it's a crankshaft bug","date":"2015-05-06T21:49:59.923Z","type":"message"}
{"nick":"caitp-","message":"try to shrink the reperoduction down to something really simple and file a bug","date":"2015-05-06T21:50:13.879Z","type":"message"}
{"nick":"{aaron}","message":"ok i just relaunched chrome without nocrankshaft and triggered it","date":"2015-05-06T21:50:19.878Z","type":"message"}
{"nick":"caitp-","message":"probably a type feedback issue","date":"2015-05-06T21:50:36.470Z","type":"message"}
{"nick":"{aaron}","message":"i'm decorating array instances probably in an inadvisable manner","date":"2015-05-06T21:51:03.676Z","type":"message"}
{"nick":"{aaron}","message":"http://www.bennadel.com/blog/2292-extending-javascript-arrays-while-keeping-native-bracket-notation-functionality.htm","date":"2015-05-06T21:51:07.823Z","type":"message"}
{"nick":"{aaron}","message":"i strongly suspect this, and my next step will be to dispense with that and just wrap a vanilla array","date":"2015-05-06T21:51:26.957Z","type":"message"}
{"nick":"caitp-","message":"i don't think it's even worth doing it like that","date":"2015-05-06T21:52:13.137Z","type":"message"}
{"nick":"caitp-","message":"look at how babel emulates the class [[Construct]] protocol","date":"2015-05-06T21:52:32.694Z","type":"message"}
{"nick":"caitp-","message":"you should be able to do what you want a lot easier using something like that","date":"2015-05-06T21:52:50.466Z","type":"message"}
{"nick":"{aaron}","message":"that is all coffeescript boilerplate","date":"2015-05-06T21:52:53.777Z","type":"message"}
{"nick":"{aaron}","message":"original source is coffeescript","date":"2015-05-06T21:53:02.698Z","type":"message"}
{"nick":"ncthom91","date":"2015-05-06T21:53:10.549Z","type":"join"}
{"nick":"{aaron}","message":"the approach i'm talking about is right in the Collection constructor","date":"2015-05-06T21:53:14.046Z","type":"message"}
{"nick":"{aaron}","message":"where it's assigning methods directly to array instance","date":"2015-05-06T21:53:23.506Z","type":"message"}
{"nick":"caitp-","message":"i can see what you're talking about","date":"2015-05-06T21:53:50.088Z","type":"message"}
{"nick":"caitp-","message":"and there is a better way =)","date":"2015-05-06T21:53:54.773Z","type":"message"}
{"nick":"{aaron}","message":"well, my better way will be to stop playing with fire and just wrap the damn array :)","date":"2015-05-06T21:54:10.209Z","type":"message"}
{"nick":"caitp-","message":"all you need to do is make sure you return an Array exotic object, and set its prototype to the class prototype you want to use in the constructor","date":"2015-05-06T21:54:15.895Z","type":"message"}
{"nick":"caitp-","message":"you won't have newTarget without extra work, but if you don't need it, it's good enough","date":"2015-05-06T21:54:43.789Z","type":"message"}
{"nick":"{aaron}","message":"do you have a link, this is hard to google","date":"2015-05-06T21:55:04.406Z","type":"message"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-05-06T21:55:16.277Z","type":"quit"}
{"nick":"caitp-","message":"i'll link you a version of it","date":"2015-05-06T21:55:34.750Z","type":"message"}
{"nick":"{aaron}","message":"hmm i do see here where babel says it has \"Subclassable Built-ins\"","date":"2015-05-06T21:56:34.160Z","type":"message"}
{"nick":"caitp-","message":"https://jsfiddle.net/0L11e3xf/ the whole ExtendedArray stuff","date":"2015-05-06T21:56:41.110Z","type":"message"}
{"nick":"{aaron}","message":"thanks man","date":"2015-05-06T21:57:15.235Z","type":"message"}
{"nick":"ofrobots","date":"2015-05-06T22:05:03.509Z","type":"join"}
{"nick":"ncthom91","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2015-05-06T22:07:24.890Z","type":"quit"}
{"nick":"caitp-","reason":"Ping timeout: 244 seconds","date":"2015-05-06T22:12:43.335Z","type":"quit"}
{"nick":"{aaron}","reason":"Quit: Leaving","date":"2015-05-06T22:13:58.306Z","type":"quit"}
{"nick":"StephenLynx","date":"2015-05-06T22:25:17.230Z","type":"join"}
{"nick":"tav","date":"2015-05-06T22:27:03.890Z","type":"join"}
{"nick":"RT|Chatzilla","date":"2015-05-06T22:27:34.186Z","type":"join"}
{"nick":"caitp-","date":"2015-05-06T22:29:20.279Z","type":"join"}
{"nick":"ncthom91","date":"2015-05-06T22:52:45.347Z","type":"join"}
{"nick":"rendar","date":"2015-05-06T22:54:02.536Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-05-06T23:01:03.807Z","type":"quit"}
{"nick":"ofrobots","date":"2015-05-06T23:05:07.424Z","type":"join"}
{"nick":"tav","reason":"Ping timeout: 276 seconds","date":"2015-05-06T23:12:39.085Z","type":"quit"}
{"nick":"tav","date":"2015-05-06T23:14:14.777Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 246 seconds","date":"2015-05-06T23:42:02.919Z","type":"quit"}
