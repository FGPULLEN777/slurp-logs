{"nick":"plutoniix","date":"2016-07-15T00:00:00.367Z","type":"join"}
{"nick":"caitp","message":"pikajude: yes, you can ask about #v8 in here","date":"2016-07-15T00:01:19.073Z","type":"message"}
{"nick":"caitp","message":"bradleymeck: do you think you'd be able to help me test out a build of Node with a patched version of ToT v8? it seems pretty daunting to try to do it myself","date":"2016-07-15T00:01:46.299Z","type":"message"}
{"nick":"caitp","message":"if you can't that's ok","date":"2016-07-15T00:02:00.722Z","type":"message"}
{"nick":"bradleymeck","reason":"Ping timeout: 246 seconds","date":"2016-07-15T00:02:45.102Z","type":"quit"}
{"nick":"pikajude","message":"ok cool","date":"2016-07-15T00:03:05.558Z","type":"message"}
{"nick":"pikajude","message":"sorry, i know this is going to be a really basic level question, but this is the 4th place i've gone trying to figure it out","date":"2016-07-15T00:03:18.159Z","type":"message"}
{"nick":"pikajude","message":"i used v8-profiler to profile part of my testsuite for my node app. the test run takes 3300ms and v8-profiler says about 2800 of that is idle","date":"2016-07-15T00:03:40.949Z","type":"message"}
{"nick":"pikajude","message":"what causes it to be idle","date":"2016-07-15T00:03:45.724Z","type":"message"}
{"nick":"caitp","message":"pikajude: it looks like it's explained in the Node code at https://github.com/nodejs/node/blob/aac79dfd78a20ac66d99a55f24ddf91f937a2388/src/env.cc#L41-L53 --- when that handle is pinged, Node tells v8 that it's idle","date":"2016-07-15T00:09:35.726Z","type":"message"}
{"nick":"caitp","message":"the comment makes it look like that's specifically done for some UV apis","date":"2016-07-15T00:09:49.748Z","type":"message"}
{"nick":"pikajude","message":"i see","date":"2016-07-15T00:10:57.601Z","type":"message"}
{"nick":"caitp","message":"bnoordhuis is probably the guy to ask, or one of the other Node guys in here","date":"2016-07-15T00:11:30.819Z","type":"message"}
{"nick":"caitp","message":"dunno if any of them are around though","date":"2016-07-15T00:11:36.587Z","type":"message"}
{"nick":"pikajude","message":"i can wait","date":"2016-07-15T00:11:42.486Z","type":"message"}
{"nick":"bradleymeck","date":"2016-07-15T00:14:44.144Z","type":"join"}
{"nick":"mostynb","reason":"Quit: Leaving","date":"2016-07-15T00:39:20.180Z","type":"quit"}
{"nick":"jwolfe","message":"if there are flags available like FLAG_harmony_something, why do the parsers have fields for enabled harmony flags?","date":"2016-07-15T00:45:06.142Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2016-07-15T00:53:18.232Z","type":"quit"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2016-07-15T00:54:44.553Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-07-15T00:54:59.948Z","type":"join"}
{"nick":"sin8h","date":"2016-07-15T02:18:17.580Z","type":"join"}
{"nick":"plutoniix","date":"2016-07-15T02:19:36.939Z","type":"join"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2016-07-15T02:46:02.387Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-07-15T02:48:13.625Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 240 seconds","date":"2016-07-15T03:48:31.284Z","type":"quit"}
{"nick":"plutoniix","date":"2016-07-15T03:51:03.326Z","type":"join"}
{"nick":"mal","topic":"see #chromium, http://code.google.com/p/v8/","date":"2016-07-15T05:04:10.921Z","type":"topic"}
{"nick":"mal","topic":"see #chromium, http://code.google.com/p/v8/","date":"2016-07-15T05:04:49.562Z","type":"topic"}
{"nick":"mal","topic":"see #chromium, http://code.google.com/p/v8/","date":"2016-07-15T05:05:48.566Z","type":"topic"}
{"nick":"mal","topic":"see #chromium, http://code.google.com/p/v8/","date":"2016-07-15T05:06:25.988Z","type":"topic"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2016-07-15T05:08:55.253Z","type":"quit"}
{"nick":"bradleymeck_","date":"2016-07-15T05:15:30.068Z","type":"join"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2016-07-15T05:15:38.040Z","type":"quit"}
{"nick":"bradleymeck_","new_nick":"bradleymeck","date":"2016-07-15T05:15:38.474Z","type":"nick"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2016-07-15T05:18:07.138Z","type":"quit"}
{"nick":"plutoniix","date":"2016-07-15T06:24:44.157Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2016-07-15T06:24:47.061Z","type":"quit"}
{"nick":"plutoniix","date":"2016-07-15T06:25:16.237Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2016-07-15T06:26:25.154Z","type":"quit"}
{"nick":"plutoniix","date":"2016-07-15T06:26:54.782Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2016-07-15T06:27:55.782Z","type":"quit"}
{"nick":"plutoniix","date":"2016-07-15T06:28:24.827Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2016-07-15T06:29:25.823Z","type":"quit"}
{"nick":"plutoniix","date":"2016-07-15T06:29:54.780Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2016-07-15T06:30:55.835Z","type":"quit"}
{"nick":"plutoniix","date":"2016-07-15T06:31:20.839Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2016-07-15T06:32:22.782Z","type":"quit"}
{"nick":"plutoniix","date":"2016-07-15T06:32:52.162Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2016-07-15T06:33:54.166Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: open","date":"2016-07-15T06:49:17.380Z","type":"message"}
{"nick":"sin8h","reason":"Quit: Leaving.","date":"2016-07-15T07:22:26.791Z","type":"quit"}
{"nick":"sin8h","date":"2016-07-15T07:57:34.994Z","type":"join"}
{"nick":"plutoniix","date":"2016-07-15T08:24:18.780Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux%20-%20arm64%20-%20sim%20-%20MSAN/builds/9663 \"V8 Linux - arm64 - sim - MSAN\" from 73df92fc2fdbbfadc17e8ab4e58ec56ae2b3d91a: gdeepti@chromium.org)","date":"2016-07-15T08:52:12.159Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: open","date":"2016-07-15T09:03:16.813Z","type":"message"}
{"nick":"plutoniix","reason":"Read error: Connection reset by peer","date":"2016-07-15T09:24:27.467Z","type":"quit"}
{"nick":"plutoniix","date":"2016-07-15T09:35:33.071Z","type":"join"}
{"nick":"sin8h","reason":"Quit: Leaving.","date":"2016-07-15T10:44:45.328Z","type":"quit"}
{"nick":"sin8h","date":"2016-07-15T10:45:01.219Z","type":"join"}
{"nick":"sin8h","reason":"Quit: Leaving.","date":"2016-07-15T11:15:05.895Z","type":"quit"}
{"nick":"aperezdc","reason":"Remote host closed the connection","date":"2016-07-15T11:15:56.947Z","type":"quit"}
{"nick":"sin8h","date":"2016-07-15T11:21:42.313Z","type":"join"}
{"nick":"sin8h","reason":"Client Quit","date":"2016-07-15T11:21:54.546Z","type":"quit"}
{"nick":"thefourtheye","reason":"Quit: Connection closed for inactivity","date":"2016-07-15T11:30:56.463Z","type":"quit"}
{"nick":"plutoniix","reason":"Read error: Connection reset by peer","date":"2016-07-15T11:58:28.715Z","type":"quit"}
{"nick":"Garbee","date":"2016-07-15T12:04:10.235Z","type":"join"}
{"nick":"sin8h","date":"2016-07-15T12:11:54.224Z","type":"join"}
{"nick":"sin8h","reason":"Client Quit","date":"2016-07-15T12:12:50.438Z","type":"quit"}
{"nick":"bobmcw","date":"2016-07-15T12:19:27.703Z","type":"join"}
{"nick":"sin8h","date":"2016-07-15T13:52:29.272Z","type":"join"}
{"nick":"sin8h","reason":"Quit: Leaving.","date":"2016-07-15T14:02:07.079Z","type":"quit"}
{"nick":"Garbee","reason":"Quit: Connection closed for inactivity","date":"2016-07-15T14:14:40.036Z","type":"quit"}
{"nick":"plutoniix","date":"2016-07-15T15:23:35.096Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2010030309]","date":"2016-07-15T16:30:14.961Z","type":"quit"}
{"nick":"unixpickle","date":"2016-07-15T16:58:03.879Z","type":"join"}
{"nick":"seventh","date":"2016-07-15T17:04:06.535Z","type":"join"}
{"nick":"bradleymeck","date":"2016-07-15T17:12:59.165Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-07-15T17:18:11.531Z","type":"quit"}
{"nick":"unixpickle","reason":"Ping timeout: 260 seconds","date":"2016-07-15T17:21:12.824Z","type":"quit"}
{"nick":"hferreiro","date":"2016-07-15T17:26:15.201Z","type":"join"}
{"nick":"pikajude","message":"hey, anyone had a chance to look at my question from yesterday","date":"2016-07-15T17:34:51.527Z","type":"message"}
{"nick":"jwolfe","reason":"Ping timeout: 276 seconds","date":"2016-07-15T17:52:36.672Z","type":"quit"}
{"nick":"jwolfe","date":"2016-07-15T18:05:40.044Z","type":"join"}
{"nick":"Garbee","date":"2016-07-15T18:07:35.036Z","type":"join"}
{"nick":"hferreiro","reason":"Ping timeout: 272 seconds","date":"2016-07-15T18:48:22.195Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-07-15T19:19:46.206Z","type":"join"}
{"nick":"jwolfe","message":"i'm guessing the reason that parser objects have fields like allow_harmony_for_in_ (which seem to be redundant with the global variable FLAG_harmony_for_in) is so that different compilation units can have differently configured harmony settings? if that's the case, then only harmony features that can be scoped to a compilation unit need to follow this pattern. is this correct?","date":"2016-07-15T19:33:47.360Z","type":"message"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2016-07-15T19:52:18.535Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-07-15T19:54:54.766Z","type":"join"}
{"nick":"seventh","reason":"Remote host closed the connection","date":"2016-07-15T19:58:24.359Z","type":"quit"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2016-07-15T20:27:34.285Z","type":"quit"}
{"nick":"aklein","message":"jwolfe: my memory of why the parser does that is for threading reasons, actually","date":"2016-07-15T20:46:50.362Z","type":"message"}
{"nick":"aklein","message":"the parser can run off the main thread","date":"2016-07-15T20:47:11.670Z","type":"message"}
{"nick":"jwolfe","message":"are you implying that the values of FLAG_harmony_* change well after startup? like they can be turned on and off at runtime?","date":"2016-07-15T20:48:33.321Z","type":"message"}
{"nick":"aklein","message":"jwolfe: not in practice, but in tests they are sometimes.","date":"2016-07-15T20:57:18.648Z","type":"message"}
{"nick":"aklein","message":"let me see what I can unearth","date":"2016-07-15T20:57:36.893Z","type":"message"}
{"nick":"bobmcw","date":"2016-07-15T20:58:01.944Z","type":"join"}
{"nick":"aklein","message":"huh, maybe the threading thing was made up. the use of allow_* everywhere seems to have begun at https://codereview.chromium.org/13450007","date":"2016-07-15T20:59:25.849Z","type":"message"}
{"nick":"pikajude","reason":"\"WeeChat 1.5\"","date":"2016-07-15T21:01:21.312Z","type":"part"}
{"nick":"aklein","message":"looks like it was done mostly for consistency","date":"2016-07-15T21:03:27.548Z","type":"message"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2016-07-15T21:03:36.900Z","type":"quit"}
{"nick":"jwolfe","message":"aklein, but if we've got a global variable, why would we want a field? duplicating that information doesn't seem like it's good for anyone. i could argue that it's more \"consistent\" for all the v8 code to use the same global variable rather than all the parser configuration to be parser fields.","date":"2016-07-15T21:07:18.697Z","type":"message"}
{"nick":"jwolfe","message":"anyway. the point at hand is what do i do in the code i'm writing right now. i'd like to ignore whole idea of parser fields for harmony flags and just use the global variables. is that ok?","date":"2016-07-15T21:07:20.635Z","type":"message"}
{"nick":"aklein","message":"jwolfe: which is this for?","date":"2016-07-15T21:09:15.449Z","type":"message"}
{"nick":"aklein","message":"function toString?","date":"2016-07-15T21:09:24.920Z","type":"message"}
{"nick":"jwolfe","message":"aklein, yes","date":"2016-07-15T21:09:41.642Z","type":"message"}
{"nick":"aklein","message":"I assume that has to touch stuff outside the parser","date":"2016-07-15T21:10:22.187Z","type":"message"}
{"nick":"jwolfe","message":"aklein, yes.","date":"2016-07-15T21:11:34.009Z","type":"message"}
{"nick":"jwolfe","message":"aklein, there might be a way to do it just in the parser, but probably not without adding fields to runtime objects. i think it's probably going to be easier to do it with logic outside the parser","date":"2016-07-15T21:12:12.417Z","type":"message"}
{"nick":"aklein","message":"I suspect that it'll be OK to not use an allow_* field in the parser for this; you can certainly start out that way","date":"2016-07-15T21:13:42.129Z","type":"message"}
{"nick":"aklein","message":"it would be good to get some _real_ consistency around that, though","date":"2016-07-15T21:13:59.358Z","type":"message"}
{"nick":"aklein","message":"(outside the context of your CL)","date":"2016-07-15T21:14:05.716Z","type":"message"}
{"nick":"jwolfe","message":"aklein, are you thinking of removing all the allow_* fields and changing the parser to just use the global FLAG_* fields?","date":"2016-07-15T21:16:12.233Z","type":"message"}
{"nick":"aklein","message":"jwolfe: that would be one way to achieve consistency, yes","date":"2016-07-15T21:16:29.939Z","type":"message"}
{"nick":"jwolfe","message":"aklein, ok thanks. i'll use FLAG_* for my CL.","date":"2016-07-15T21:16:44.400Z","type":"message"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2016-07-15T21:28:40.211Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-07-15T22:00:28.978Z","type":"join"}
{"nick":"bradleymeck","reason":"Ping timeout: 244 seconds","date":"2016-07-15T22:04:44.024Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2016-07-15T22:58:45.144Z","type":"join"}
