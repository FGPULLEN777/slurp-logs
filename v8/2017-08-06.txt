{"nick":"ncthom91","date":"2017-08-06T01:11:47.527Z","type":"join"}
{"nick":"ncthom91","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-08-06T01:26:32.638Z","type":"quit"}
{"nick":"caitp","message":"dsamarin: if the object is null/undefined (at least in near-ToT v8), it should throw an exception","date":"2017-08-06T03:40:02.366Z","type":"message"}
{"nick":"caitp","message":"so you'd probably need to wrap that in a TryCatch","date":"2017-08-06T03:40:30.940Z","type":"message"}
{"nick":"dsamarin","message":"Thanks caitp, in my case I'm okay with it throwing an exception, so I just return false","date":"2017-08-06T03:41:46.772Z","type":"message"}
{"nick":"dsamarin","message":"I have a bool ParseSockaddrFromObject(Isolate *, Local<Value>, sockaddr_storage *, size_t*); which takes an incoming object { port: 12346, family: 'IPv4', address: '127.0.0.1' } and populates the sockaddr stucture","date":"2017-08-06T03:42:44.222Z","type":"message"}
{"nick":"caitp","message":"and this isn't called from JS code?","date":"2017-08-06T03:43:26.050Z","type":"message"}
{"nick":"caitp","message":"like, if the pending exception leaks back to JS that's probably not what you want","date":"2017-08-06T03:43:33.075Z","type":"message"}
{"nick":"caitp","message":"but I dunno","date":"2017-08-06T03:43:45.138Z","type":"message"}
{"nick":"caitp","message":"if it works that's great :D","date":"2017-08-06T03:43:48.663Z","type":"message"}
{"nick":"dsamarin","message":"I'm happy, looks like if (!value->ToObject(context).ToLocal(&object)) { return false; } works great!","date":"2017-08-06T03:44:23.161Z","type":"message"}
{"nick":"caitp","message":"If the exception does become a problem, you could avoid it using Value::IsNullOrUndefined(), which looks pretty convenient","date":"2017-08-06T03:44:53.405Z","type":"message"}
{"nick":"caitp","message":"probably see performance increase in cases that run into that too","date":"2017-08-06T03:45:04.254Z","type":"message"}
{"nick":"dsamarin","message":"Cool","date":"2017-08-06T03:46:06.164Z","type":"message"}
{"nick":"dsamarin","message":"All in all, the new Maybe stuff seems to be a good idea and the API is still easier to use than when I worked with Spidermonkey","date":"2017-08-06T03:47:19.803Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-08-06T05:47:27.929Z","type":"quit"}
{"nick":"jugglinmike","reason":"Quit: Leaving.","date":"2017-08-06T05:56:15.808Z","type":"quit"}
{"nick":"jugglinmike","date":"2017-08-06T05:56:58.103Z","type":"join"}
{"nick":"jugglinmike","reason":"Ping timeout: 240 seconds","date":"2017-08-06T06:01:10.111Z","type":"quit"}
{"nick":"dsamarin","reason":"Quit: Leaving","date":"2017-08-06T09:26:40.839Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-08-06T10:25:11.092Z","type":"quit"}
{"nick":"mylesborins","date":"2017-08-06T10:25:41.737Z","type":"join"}
{"nick":"jugglinmike","date":"2017-08-06T14:30:53.583Z","type":"join"}
{"nick":"Garbee","reason":"Quit: Connection closed for inactivity","date":"2017-08-06T15:35:31.973Z","type":"quit"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2010030309]","date":"2017-08-06T16:28:12.415Z","type":"quit"}
{"nick":"plutoniix","date":"2017-08-06T16:56:24.240Z","type":"join"}
{"nick":"xiinotulp","date":"2017-08-06T18:44:49.616Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 268 seconds","date":"2017-08-06T18:48:39.630Z","type":"quit"}
{"nick":"dsamarin","date":"2017-08-06T18:56:46.704Z","type":"join"}
{"nick":"dsamarin","message":"Is this possible to do easily with the C++ API? ((Local<Function>)constructor).prototype.__proto__ = ((Local<Function>)object).prototype;","date":"2017-08-06T18:59:39.066Z","type":"message"}
{"nick":"dsamarin","message":"The normal method would be tpl->Inherit(BaseClass::tpl) but I don't know how to get the FunctionTemplate for a regular JS function","date":"2017-08-06T19:04:03.849Z","type":"message"}
{"nick":"Vbitz","date":"2017-08-06T19:06:32.707Z","type":"join"}
{"nick":"ofrobots","reason":"*.net *.split","date":"2017-08-06T19:07:54.056Z","type":"quit"}
{"nick":"bengl","reason":"*.net *.split","date":"2017-08-06T19:07:55.698Z","type":"quit"}
{"nick":"seththompson_","reason":"*.net *.split","date":"2017-08-06T19:07:56.074Z","type":"quit"}
{"nick":"arv","reason":"*.net *.split","date":"2017-08-06T19:07:56.238Z","type":"quit"}
{"nick":"Vbitz_","reason":"*.net *.split","date":"2017-08-06T19:07:56.292Z","type":"quit"}
{"nick":"mylesborins","reason":"Ping timeout: 260 seconds","date":"2017-08-06T19:10:42.642Z","type":"quit"}
{"nick":"mylesborins","date":"2017-08-06T19:12:55.914Z","type":"join"}
{"nick":"Pablo[m]","reason":"Ping timeout: 240 seconds","date":"2017-08-06T19:16:48.672Z","type":"quit"}
{"nick":"ofrobots","date":"2017-08-06T19:18:49.230Z","type":"join"}
{"nick":"bengl","date":"2017-08-06T19:18:49.231Z","type":"join"}
{"nick":"seththompson_","date":"2017-08-06T19:18:49.231Z","type":"join"}
{"nick":"arv","date":"2017-08-06T19:18:49.231Z","type":"join"}
{"nick":"rniwa","date":"2017-08-06T19:29:13.279Z","type":"join"}
{"nick":"rniwa","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-08-06T19:38:09.949Z","type":"quit"}
{"nick":"Pablo[m]","date":"2017-08-06T21:16:30.810Z","type":"join"}
{"nick":"RT|Chatzilla","date":"2017-08-06T22:47:03.345Z","type":"join"}
{"nick":"jugglinmike","reason":"Quit: Leaving.","date":"2017-08-06T22:53:32.400Z","type":"quit"}
