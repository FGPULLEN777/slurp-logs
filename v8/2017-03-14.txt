{"nick":"unixpickle","date":"2017-03-14T00:01:59.576Z","type":"join"}
{"nick":"plutoniix","date":"2017-03-14T00:33:52.294Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2017-03-14T00:33:58.337Z","type":"quit"}
{"nick":"plutoniix","date":"2017-03-14T00:34:31.407Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-03-14T01:56:23.727Z","type":"quit"}
{"nick":"unixpickle","reason":"Quit: My Mac has gone to sleep. ZZZzzzâ€¦","date":"2017-03-14T02:47:18.417Z","type":"quit"}
{"nick":"unixpickle","date":"2017-03-14T03:02:09.493Z","type":"join"}
{"nick":"unixpickle","reason":"Client Quit","date":"2017-03-14T03:06:22.114Z","type":"quit"}
{"nick":"unixpickle","date":"2017-03-14T03:23:48.524Z","type":"join"}
{"nick":"unixpickle","reason":"Client Quit","date":"2017-03-14T03:26:55.005Z","type":"quit"}
{"nick":"Guest28860","message":"caitp: yep I did mean, say, casting a Value that is a number to a Function","date":"2017-03-14T05:15:43.793Z","type":"message"}
{"nick":"BobGneu","date":"2017-03-14T06:38:25.644Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 260 seconds","date":"2017-03-14T07:16:45.405Z","type":"quit"}
{"nick":"BobGneu","reason":"Read error: Connection reset by peer","date":"2017-03-14T07:19:10.340Z","type":"quit"}
{"nick":"plutoniix","date":"2017-03-14T07:29:20.331Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-03-14T09:50:58.279Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-03-14T10:25:10.532Z","type":"quit"}
{"nick":"mylesborins","date":"2017-03-14T10:25:41.235Z","type":"join"}
{"nick":"kkaefer","date":"2017-03-14T10:29:30.580Z","type":"join"}
{"nick":"chrisdickinson","reason":"Ping timeout: 268 seconds","date":"2017-03-14T11:07:09.711Z","type":"quit"}
{"nick":"chrisdickinson","date":"2017-03-14T11:08:27.695Z","type":"join"}
{"nick":"ebarrett","reason":"Quit: WeeChat 1.5","date":"2017-03-14T11:09:02.620Z","type":"quit"}
{"nick":"kkaefer","date":"2017-03-14T12:14:25.778Z","type":"quit"}
{"nick":"caitp","message":"Guest28860: well, I think it will fail an assertion if it's not a valid cast","date":"2017-03-14T12:47:12.177Z","type":"message"}
{"nick":"caitp","message":"so, should crash your app","date":"2017-03-14T12:47:34.042Z","type":"message"}
{"nick":"Guest28860","message":"caitp: As() doesn't actually do any assertion (unless compiled with additional flags)","date":"2017-03-14T12:48:03.939Z","type":"message"}
{"nick":"caitp","message":"well, if you compile out assertions, you won't hit them","date":"2017-03-14T12:48:50.370Z","type":"message"}
{"nick":"caitp","message":"you can add a typecheck before casting if you aren't sure","date":"2017-03-14T12:49:22.466Z","type":"message"}
{"nick":"Guest28860","message":"Right, so I can use val->IsFunction()","date":"2017-03-14T12:49:39.287Z","type":"message"}
{"nick":"Guest28860","message":"before casting","date":"2017-03-14T12:49:42.775Z","type":"message"}
{"nick":"caitp","message":"yes","date":"2017-03-14T12:49:49.524Z","type":"message"}
{"nick":"Guest28860","message":"I'm curious about the kinds of security issues that can arise if I don't","date":"2017-03-14T12:50:05.321Z","type":"message"}
{"nick":"Guest28860","message":"since (by default) the assertions don't seem to be compiled in","date":"2017-03-14T12:50:22.672Z","type":"message"}
{"nick":"caitp","message":"if you aren't building with assertions, you can very easily make invalid accesses to an object","date":"2017-03-14T12:51:05.003Z","type":"message"}
{"nick":"caitp","message":"especially when in-object fields are present","date":"2017-03-14T12:51:26.325Z","type":"message"}
{"nick":"Guest28860","message":"mind elaborating on the later part? (sorry, and thanks for replying to me!)","date":"2017-03-14T12:52:27.824Z","type":"message"}
{"nick":"caitp","message":"so, lets say you cast your function to something else, like a JSMap","date":"2017-03-14T12:57:34.435Z","type":"message"}
{"nick":"caitp","message":"their memory layout is incompatible, and code expecting a JSMap will assume that memory is not a function","date":"2017-03-14T12:58:30.731Z","type":"message"}
{"nick":"caitp","message":"potentially you could overwrite the code entry ptr, with some nonsense, and accidentally call it","date":"2017-03-14T12:59:24.561Z","type":"message"}
{"nick":"caitp","message":"that could then be exploited by a clever attacker to get you to execute remote code","date":"2017-03-14T13:00:22.329Z","type":"message"}
{"nick":"Guest28860","message":"ah fantastic, I suspect something like this to be possible!","date":"2017-03-14T13:00:34.376Z","type":"message"}
{"nick":"Guest28860","message":"thanks for your explanation","date":"2017-03-14T13:01:01.787Z","type":"message"}
{"nick":"caitp","message":"i suggest enabling assertions for development :)","date":"2017-03-14T13:01:33.543Z","type":"message"}
{"nick":"Guest28860","message":"oh I agree, I am more trying to understand what an attacker can do :)","date":"2017-03-14T13:02:00.731Z","type":"message"}
{"nick":"bradleymeck","date":"2017-03-14T13:10:01.417Z","type":"join"}
{"nick":"unixpickle","date":"2017-03-14T14:20:26.290Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-03-14T15:46:27.314Z","type":"quit"}
