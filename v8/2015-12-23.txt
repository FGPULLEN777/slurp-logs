{"nick":"caitp","message":"littledan_: specifically I'm thinking of things implemented in C++ which care about the various typedarray instance types --- I __think__ it would end up working okay, but I just want to be sure","date":"2015-12-23T00:04:08.283Z","type":"message"}
{"nick":"littledan_","message":"caitp, could you give me an example of one to look at?","date":"2015-12-23T00:04:30.751Z","type":"message"}
{"nick":"littledan_","message":"I don't know much about all the web APIs that use TypedArrays if that's what you're referring to","date":"2015-12-23T00:04:52.624Z","type":"message"}
{"nick":"caitp","message":"I dunno, I might be overthinking it, if it's a problem toon or someone will bring it up","date":"2015-12-23T00:06:27.574Z","type":"message"}
{"nick":"littledan_","message":"well, I'd like to fix a problem if it's there. If you're overthinking it, maybe you can overthink it a little more and figure out a more concrete problem","date":"2015-12-23T00:08:08.299Z","type":"message"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2015-12-23T00:08:30.383Z","type":"quit"}
{"nick":"caitp","message":"I think it's probably safe because of the \"this is non-generic\" assertions in TypedArray methods","date":"2015-12-23T00:11:51.234Z","type":"message"}
{"nick":"caitp","message":"so maybe it doesn't amtter","date":"2015-12-23T00:11:58.985Z","type":"message"}
{"nick":"caitp","message":"you probably just end up with a bogus object whose methods always throw","date":"2015-12-23T00:12:16.016Z","type":"message"}
{"nick":"watilde","date":"2015-12-23T00:44:51.604Z","type":"join"}
{"nick":"plutoniix","date":"2015-12-23T00:49:33.808Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 265 seconds","date":"2015-12-23T00:50:38.693Z","type":"quit"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2015-12-23T00:56:22.454Z","type":"quit"}
{"nick":"esas","reason":"Read error: Connection reset by peer","date":"2015-12-23T00:59:58.690Z","type":"quit"}
{"nick":"esas","date":"2015-12-23T01:17:59.485Z","type":"join"}
{"nick":"Bob_Gneu","reason":"Ping timeout: 245 seconds","date":"2015-12-23T01:23:29.856Z","type":"quit"}
{"nick":"BobGneu","date":"2015-12-23T01:23:57.809Z","type":"join"}
{"nick":"mesch","message":"hello, I'm wondering if persistent v8 types be shared across isolates or if this is guaranteed to be unsafe?","date":"2015-12-23T01:28:11.747Z","type":"message"}
{"nick":"mesch","message":"I'm really wondering if it is possible to manage an independent memory space of v8 types that I can share between isolates","date":"2015-12-23T01:30:29.170Z","type":"message"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-12-23T01:35:56.555Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 272 seconds","date":"2015-12-23T01:39:10.469Z","type":"quit"}
{"nick":"seventh","reason":"Ping timeout: 260 seconds","date":"2015-12-23T01:43:10.855Z","type":"quit"}
{"nick":"bobmcw","date":"2015-12-23T01:56:47.207Z","type":"join"}
{"nick":"bobmcw","reason":"Changing host","date":"2015-12-23T01:56:47.208Z","type":"quit"}
{"nick":"bobmcw","date":"2015-12-23T01:56:47.208Z","type":"join"}
{"nick":"xaxxon","date":"2015-12-23T01:58:00.607Z","type":"join"}
{"nick":"xaxxon","message":"anyone know how to send in feedback for pages on developers.google.com?   I found an error in some sample code but I don't see any way to give feedback other than the number of *'s to give it at the top","date":"2015-12-23T01:58:47.597Z","type":"message"}
{"nick":"caitp","message":"there's probably no baked in way to give feedback (maybe there is, idk)","date":"2015-12-23T02:01:28.666Z","type":"message"}
{"nick":"caitp","message":"try mailing v8-users@googlegroups.com","date":"2015-12-23T02:01:39.267Z","type":"message"}
{"nick":"caitp","message":"or filing a bug","date":"2015-12-23T02:01:43.032Z","type":"message"}
{"nick":"bobmcw","reason":"Ping timeout: 250 seconds","date":"2015-12-23T02:02:08.967Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-12-23T02:02:24.084Z","type":"quit"}
{"nick":"lerela","reason":"Ping timeout: 240 seconds","date":"2015-12-23T02:02:46.445Z","type":"quit"}
{"nick":"ofrobots","date":"2015-12-23T02:04:06.211Z","type":"join"}
{"nick":"xaxxon","message":"caitp, hrmm.. I might not even have found a problem, but I think the \"setter\" here is wrong.. https://developers.google.com/v8/embed#accessing-static-global-variables  should be  const PropertyCallbackInfo<~~Value~~void>","date":"2015-12-23T02:04:11.356Z","type":"message"}
{"nick":"xaxxon","message":"it didn't build for me until I changed it and it worked..","date":"2015-12-23T02:04:25.480Z","type":"message"}
{"nick":"ofrobots","reason":"Client Quit","date":"2015-12-23T02:04:25.777Z","type":"quit"}
{"nick":"xaxxon","message":"I'll toss something in the v8 github issue tracker I gues","date":"2015-12-23T02:04:46.506Z","type":"message"}
{"nick":"xaxxon","message":"s","date":"2015-12-23T02:04:47.102Z","type":"message"}
{"nick":"xaxxon","message":"oh.. maybe that's not even where they go?","date":"2015-12-23T02:05:31.245Z","type":"message"}
{"nick":"caitp","message":"the github issue tracker isn't really used, no","date":"2015-12-23T02:06:14.952Z","type":"message"}
{"nick":"caitp","message":"let me see if i have the address memorized","date":"2015-12-23T02:06:23.647Z","type":"message"}
{"nick":"caitp","message":"bugs.chromium.org/p/v8","date":"2015-12-23T02:06:32.344Z","type":"message"}
{"nick":"caitp","message":"bingo","date":"2015-12-23T02:06:40.483Z","type":"message"}
{"nick":"ofrobots","date":"2015-12-23T02:09:51.504Z","type":"join"}
{"nick":"xaxxon","message":"thanks:  https://bugs.chromium.org/p/v8/issues/detail?id=4641","date":"2015-12-23T02:10:11.469Z","type":"message"}
{"nick":"caitp","message":"https://chromium.googlesource.com/v8/v8/+/master/include/v8.h is the ToT v8.h btw, not the one under https://v8.googlecode.com/svn/trunk/include/v8.h","date":"2015-12-23T02:12:46.479Z","type":"message"}
{"nick":"xaxxon","message":"oh,  I just googled real quick... but the prototype matches what actually compiled on my brand new checkout","date":"2015-12-23T02:14:04.149Z","type":"message"}
{"nick":"xaxxon","message":"so it's probably sufficient in this case, but good toknow","date":"2015-12-23T02:14:11.873Z","type":"message"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-12-23T02:16:28.050Z","type":"quit"}
{"nick":"caitp","message":"anyways, I think you're right","date":"2015-12-23T02:24:02.572Z","type":"message"}
{"nick":"xaxxon","message":"should I be able to use fat arrow functions in my code that I send to v8?   I'm just changing up the code here: https://developers.google.com/v8/get_started#hello-world","date":"2015-12-23T02:33:58.241Z","type":"message"}
{"nick":"xaxxon","message":"oh","date":"2015-12-23T02:35:56.728Z","type":"message"}
{"nick":"xaxxon","message":"I re-used a variable name in my javascript that I had defined in my c++ via a template.   ","date":"2015-12-23T02:36:19.066Z","type":"message"}
{"nick":"ofrobots","date":"2015-12-23T02:55:51.448Z","type":"join"}
{"nick":"xaxxon_","date":"2015-12-23T02:59:09.526Z","type":"join"}
{"nick":"xaxxon","reason":"Read error: Connection reset by peer","date":"2015-12-23T02:59:23.120Z","type":"quit"}
{"nick":"caitp","message":"if you're using a recent version of v8, yes","date":"2015-12-23T03:21:21.556Z","type":"message"}
{"nick":"caitp","message":"can't remember when they shipped","date":"2015-12-23T03:21:29.642Z","type":"message"}
{"nick":"caitp","message":"been a few major releases probably","date":"2015-12-23T03:21:45.729Z","type":"message"}
{"nick":"xaxxon_","reason":"Ping timeout: 272 seconds","date":"2015-12-23T03:30:00.456Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-12-23T03:50:36.079Z","type":"quit"}
{"nick":"ofrobots","date":"2015-12-23T04:11:29.448Z","type":"join"}
{"nick":"ofrobots","reason":"Client Quit","date":"2015-12-23T04:14:27.609Z","type":"quit"}
{"nick":"ofrobots","date":"2015-12-23T04:16:29.270Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-12-23T04:36:46.741Z","type":"quit"}
{"nick":"ofrobots","date":"2015-12-23T04:38:29.461Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-12-23T04:43:33.265Z","type":"quit"}
{"nick":"jgi","date":"2015-12-23T04:45:57.457Z","type":"join"}
{"nick":"watilde","date":"2015-12-23T04:47:42.595Z","type":"join"}
{"nick":"ofrobots","date":"2015-12-23T04:49:55.324Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 246 seconds","date":"2015-12-23T04:51:59.657Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-12-23T04:59:55.772Z","type":"quit"}
{"nick":"ofrobots","date":"2015-12-23T05:12:32.199Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-12-23T05:39:58.310Z","type":"quit"}
{"nick":"esas","reason":"Ping timeout: 272 seconds","date":"2015-12-23T06:29:14.475Z","type":"quit"}
{"nick":"watilde","date":"2015-12-23T06:44:17.218Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-12-23T06:48:36.461Z","type":"quit"}
{"nick":"jgi","date":"2015-12-23T06:49:08.776Z","type":"join"}
{"nick":"xaxxon_","date":"2015-12-23T06:59:13.895Z","type":"join"}
{"nick":"bobmcw","date":"2015-12-23T07:00:19.604Z","type":"join"}
{"nick":"bobmcw","reason":"Changing host","date":"2015-12-23T07:00:19.604Z","type":"quit"}
{"nick":"bobmcw","date":"2015-12-23T07:00:19.605Z","type":"join"}
{"nick":"bobmcw","reason":"Ping timeout: 240 seconds","date":"2015-12-23T07:05:06.308Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-12-23T07:05:59.553Z","type":"quit"}
{"nick":"mostynb","date":"2015-12-23T07:10:07.843Z","type":"join"}
{"nick":"watilde","reason":"Remote host closed the connection","date":"2015-12-23T08:00:04.071Z","type":"quit"}
{"nick":"xaxxon_","reason":"Quit: This computer has gone to sleep","date":"2015-12-23T08:37:06.825Z","type":"quit"}
{"nick":"C-Man","date":"2015-12-23T08:59:34.239Z","type":"join"}
{"nick":"xaxxon_","date":"2015-12-23T09:02:12.207Z","type":"join"}
{"nick":"bnoordhuis","date":"2015-12-23T10:29:28.965Z","type":"join"}
{"nick":"rendar","date":"2015-12-23T10:39:31.508Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2015-12-23T10:50:57.689Z","type":"quit"}
{"nick":"bobmcw","date":"2015-12-23T11:04:02.718Z","type":"join"}
{"nick":"bobmcw","reason":"Ping timeout: 260 seconds","date":"2015-12-23T11:08:59.142Z","type":"quit"}
{"nick":"mostynb","reason":"Ping timeout: 246 seconds","date":"2015-12-23T11:18:44.727Z","type":"quit"}
{"nick":"mostynb","date":"2015-12-23T11:19:10.276Z","type":"join"}
{"nick":"C-Man","reason":"Ping timeout: 260 seconds","date":"2015-12-23T11:36:03.290Z","type":"quit"}
{"nick":"ewanas","date":"2015-12-23T11:42:39.214Z","type":"join"}
{"nick":"JoWie","date":"2015-12-23T11:53:12.923Z","type":"join"}
{"nick":"C-Man","date":"2015-12-23T12:12:10.197Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2015-12-23T12:22:40.064Z","type":"quit"}
{"nick":"bnoordhuis","date":"2015-12-23T12:23:05.960Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2015-12-23T12:51:11.930Z","type":"quit"}
{"nick":"plutoniix","date":"2015-12-23T13:11:11.851Z","type":"join"}
{"nick":"bobmcw","date":"2015-12-23T14:08:10.044Z","type":"join"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2015-12-23T14:26:41.033Z","type":"quit"}
{"nick":"ofrobots","date":"2015-12-23T14:47:50.259Z","type":"join"}
{"nick":"bradleymeck","date":"2015-12-23T14:48:19.560Z","type":"join"}
{"nick":"bnoordhuis","date":"2015-12-23T15:05:00.167Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2009081014]","date":"2015-12-23T15:52:21.508Z","type":"quit"}
{"nick":"ewanas","reason":"Quit: leaving","date":"2015-12-23T16:04:21.222Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2015-12-23T16:08:35.325Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-12-23T16:14:46.465Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-12-23T16:19:44.384Z","type":"quit"}
{"nick":"seventh","date":"2015-12-23T16:20:05.851Z","type":"join"}
{"nick":"bradleymeck","date":"2015-12-23T16:22:30.940Z","type":"join"}
{"nick":"ofrobots","date":"2015-12-23T16:52:47.761Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-12-23T16:58:57.707Z","type":"quit"}
{"nick":"bnoordhuis","date":"2015-12-23T17:14:51.224Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2015-12-23T17:19:59.178Z","type":"quit"}
{"nick":"jgi","date":"2015-12-23T17:25:00.956Z","type":"join"}
{"nick":"ofrobots","date":"2015-12-23T17:32:44.461Z","type":"join"}
{"nick":"lerela","date":"2015-12-23T17:38:54.991Z","type":"join"}
{"nick":"bnoordhuis","date":"2015-12-23T17:43:27.916Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-12-23T17:45:25.728Z","type":"quit"}
{"nick":"mostynb","reason":"Quit: Leaving","date":"2015-12-23T17:56:10.634Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-12-23T18:09:12.945Z","type":"quit"}
{"nick":"ofrobots","date":"2015-12-23T18:11:36.037Z","type":"join"}
{"nick":"esas","date":"2015-12-23T18:23:51.048Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-12-23T18:24:40.583Z","type":"quit"}
{"nick":"bradleymeck","date":"2015-12-23T18:28:43.488Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-12-23T18:30:36.644Z","type":"quit"}
{"nick":"jgi","date":"2015-12-23T18:36:44.260Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-12-23T18:38:01.083Z","type":"quit"}
{"nick":"watilde","date":"2015-12-23T18:46:49.481Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-12-23T19:06:22.673Z","type":"quit"}
{"nick":"xaxxon_","reason":"Quit: This computer has gone to sleep","date":"2015-12-23T19:43:36.106Z","type":"quit"}
{"nick":"xaxxon_","date":"2015-12-23T19:45:41.467Z","type":"join"}
{"nick":"C-Man","date":"2015-12-23T19:46:22.154Z","type":"join"}
{"nick":"bradleymeck","date":"2015-12-23T20:02:16.558Z","type":"join"}
{"nick":"ofrobots","date":"2015-12-23T20:11:33.264Z","type":"join"}
{"nick":"JoWie","reason":"Quit: Connection closed for inactivity","date":"2015-12-23T20:29:38.333Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-12-23T20:32:54.100Z","type":"quit"}
{"nick":"ofrobots","date":"2015-12-23T20:39:46.099Z","type":"join"}
{"nick":"watilde","reason":"Remote host closed the connection","date":"2015-12-23T20:44:17.613Z","type":"quit"}
{"nick":"watilde","date":"2015-12-23T20:47:47.417Z","type":"join"}
{"nick":"C-Man","reason":"Ping timeout: 276 seconds","date":"2015-12-23T20:57:38.241Z","type":"quit"}
{"nick":"C-Man","date":"2015-12-23T20:59:32.994Z","type":"join"}
{"nick":"watilde","reason":"Remote host closed the connection","date":"2015-12-23T21:00:50.185Z","type":"quit"}
{"nick":"lmkmplm","date":"2015-12-23T21:02:22.983Z","type":"join"}
{"nick":"C-Man","reason":"Ping timeout: 264 seconds","date":"2015-12-23T21:06:47.930Z","type":"quit"}
{"nick":"lmkmplm","reason":"Ping timeout: 245 seconds","date":"2015-12-23T21:06:50.018Z","type":"quit"}
{"nick":"C-Man","date":"2015-12-23T21:07:38.813Z","type":"join"}
{"nick":"C-Man","reason":"Ping timeout: 240 seconds","date":"2015-12-23T21:11:55.723Z","type":"quit"}
{"nick":"zv","reason":"Ping timeout: 240 seconds","date":"2015-12-23T21:11:56.020Z","type":"quit"}
{"nick":"xaxxon_","reason":"Ping timeout: 272 seconds","date":"2015-12-23T21:15:16.474Z","type":"quit"}
{"nick":"C-Man","date":"2015-12-23T21:17:15.945Z","type":"join"}
{"nick":"C-Man","reason":"Ping timeout: 255 seconds","date":"2015-12-23T21:24:00.024Z","type":"quit"}
{"nick":"zv","date":"2015-12-23T21:26:44.514Z","type":"join"}
{"nick":"xaxxon","date":"2015-12-23T21:31:17.981Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-12-23T21:40:32.793Z","type":"quit"}
{"nick":"ofrobots","date":"2015-12-23T21:45:05.949Z","type":"join"}
{"nick":"C-Man","date":"2015-12-23T21:45:55.675Z","type":"join"}
{"nick":"ofrobots","reason":"Client Quit","date":"2015-12-23T21:46:37.489Z","type":"quit"}
{"nick":"xiinotulp","date":"2015-12-23T21:54:25.554Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 246 seconds","date":"2015-12-23T21:55:44.704Z","type":"quit"}
{"nick":"lerela","reason":"Remote host closed the connection","date":"2015-12-23T22:21:41.296Z","type":"quit"}
{"nick":"C-Man","reason":"Remote host closed the connection","date":"2015-12-23T22:32:06.452Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2015-12-23T22:32:07.645Z","type":"join"}
{"nick":"C-Man","date":"2015-12-23T22:34:15.936Z","type":"join"}
{"nick":"C-Man","reason":"Client Quit","date":"2015-12-23T22:34:27.668Z","type":"quit"}
{"nick":"rendar","reason":"Ping timeout: 245 seconds","date":"2015-12-23T22:42:40.121Z","type":"quit"}
{"nick":"xaxxon","message":"I'm sure I'm missing something basic, but how do you associate multiple templates with a context?   I see how you pass one in as the third parameter to Conext::New but I'm confused how to use multiple... can you set more than one?  Or do you somehow merge a lot of functionality into a single template?","date":"2015-12-23T22:42:54.244Z","type":"message"}
{"nick":"bnoordhuis","message":"xaxxon: you mean the ObjectTemplate for the global object?","date":"2015-12-23T22:44:05.294Z","type":"message"}
{"nick":"xaxxon","message":"hang on...","date":"2015-12-23T22:44:47.430Z","type":"message"}
{"nick":"xaxxon","message":"maybe?   I got the sample code working for a single global variable and I see that to add more you simply add more calls to ->SetAccessor","date":"2015-12-23T22:46:38.222Z","type":"message"}
{"nick":"bnoordhuis","message":"does that mean it's working or ?","date":"2015-12-23T22:48:09.493Z","type":"message"}
{"nick":"xaxxon","message":"https://developers.google.com/v8/embed#accessing-dynamic-variables <== on this page, what does this line do:   Local<Object> obj = point_templ->NewInstance();","date":"2015-12-23T22:48:16.201Z","type":"message"}
{"nick":"bnoordhuis","message":"it creates a new js object","date":"2015-12-23T22:48:44.495Z","type":"message"}
{"nick":"rendar","date":"2015-12-23T22:48:44.920Z","type":"join"}
{"nick":"xaxxon","message":"sorry, it was taking me a little while to figure out what exactly was confusing me.  I'm brand new to this","date":"2015-12-23T22:48:46.419Z","type":"message"}
{"nick":"xaxxon","message":"how do you access it in js?","date":"2015-12-23T22:49:39.131Z","type":"message"}
{"nick":"xaxxon","message":"in the global variable example you give it a string for the name it should have in js","date":"2015-12-23T22:49:58.497Z","type":"message"}
{"nick":"xaxxon","message":"as in:   point_templ.SetAccessor(String::NewFromUtf8(isolate, \"x\"), GetPointX, SetPointX);","date":"2015-12-23T22:50:07.653Z","type":"message"}
{"nick":"bnoordhuis","message":"you return it to js or you pass it as an argument to a js function that you call","date":"2015-12-23T22:50:09.482Z","type":"message"}
{"nick":"xaxxon","message":"hrmm, I don't understand that but let me read a bit more","date":"2015-12-23T22:50:26.802Z","type":"message"}
{"nick":"xaxxon","message":"I understand how the extractors work and such...","date":"2015-12-23T22:50:53.784Z","type":"message"}
{"nick":"xaxxon","message":"bnoordhuis, in the code snippits here: https://developers.google.com/v8/embed#accessing-dynamic-variables is there anything that gives javascript code access to the   Point* p = ...; object that is declared?","date":"2015-12-23T22:54:27.851Z","type":"message"}
{"nick":"bnoordhuis","message":"xaxxon: you'd normally create a FunctionTemplate. that's your construction function that you expose to js land. then you populate the function_template->PrototypeTemplate() template with the methods","date":"2015-12-23T22:56:13.891Z","type":"message"}
{"nick":"xaxxon","message":"ok","date":"2015-12-23T22:56:24.262Z","type":"message"}
{"nick":"xaxxon","message":"I think that makes sense","date":"2015-12-23T22:56:27.061Z","type":"message"}
{"nick":"bnoordhuis","message":"construction function... constructor, really","date":"2015-12-23T22:56:52.222Z","type":"message"}
{"nick":"bnoordhuis","message":"if you need to store a pointer to a c++ class or struct, don't forget to configure function_template->PrototypeTemplate()->SetInternalFieldCount() as well","date":"2015-12-23T22:57:50.773Z","type":"message"}
{"nick":"xaxxon","message":"so my function make_a_point would return the object from this: Local<Object> obj = point_templ->NewInstance();","date":"2015-12-23T22:58:07.326Z","type":"message"}
{"nick":"xaxxon","message":"and I use this to make the function?  http://bespin.cz/~ondras/html/classv8_1_1FunctionTemplate.html","date":"2015-12-23T22:59:27.489Z","type":"message"}
{"nick":"xaxxon","message":"to expose it, I mean","date":"2015-12-23T22:59:39.281Z","type":"message"}
{"nick":"bnoordhuis","message":"xaxxon: correct","date":"2015-12-23T22:59:52.588Z","type":"message"}
{"nick":"bnoordhuis","message":"it's basically Local<FunctionTemplate> ft = FunctionTemplate::New(isolate, PointNew)","date":"2015-12-23T23:00:27.954Z","type":"message"}
{"nick":"bnoordhuis","message":"then you expose it with global_object->Set(String::NewFromUtf8(isolate, \"Point\"), ft->GetFunction())","date":"2015-12-23T23:01:17.193Z","type":"message"}
{"nick":"bnoordhuis","message":"global_object is context->Global(); you can also configure an ObjectTemplate that you pass to Context::New","date":"2015-12-23T23:01:45.528Z","type":"message"}
{"nick":"bnoordhuis","message":"in your PointNew function, check that args.IsConstructCall() == true, then args.Holder() is your object","date":"2015-12-23T23:02:46.585Z","type":"message"}
{"nick":"bnoordhuis","message":"hope that makes sense","date":"2015-12-23T23:03:04.306Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-12-23T23:08:39.502Z","type":"quit"}
{"nick":"watilde","date":"2015-12-23T23:27:16.325Z","type":"join"}
{"nick":"aperezdc","reason":"Quit: Reconnecting","date":"2015-12-23T23:31:08.819Z","type":"quit"}
{"nick":"aperezdc","date":"2015-12-23T23:31:15.465Z","type":"join"}
{"nick":"aperezdc","reason":"Client Quit","date":"2015-12-23T23:31:29.918Z","type":"quit"}
{"nick":"aperezdc","date":"2015-12-23T23:31:39.740Z","type":"join"}
{"nick":"chrisdickinson_","new_nick":"chrisdickinson","date":"2015-12-23T23:59:11.280Z","type":"nick"}
