{"nick":"seventh","reason":"Ping timeout: 245 seconds","date":"2012-09-24T00:54:22.047Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2012-09-24T01:58:37.410Z","type":"quit"}
{"nick":"seventh","date":"2012-09-24T02:22:19.424Z","type":"join"}
{"nick":"seventh","reason":"Ping timeout: 246 seconds","date":"2012-09-24T02:26:43.366Z","type":"quit"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2012-09-24T02:32:04.451Z","type":"quit"}
{"nick":"rendar","date":"2012-09-24T06:52:21.793Z","type":"join"}
{"nick":"xan_","date":"2012-09-24T09:01:46.579Z","type":"join"}
{"nick":"stampho","reason":"Ping timeout: 252 seconds","date":"2012-09-24T09:03:58.715Z","type":"quit"}
{"nick":"abraxas","date":"2012-09-24T09:55:04.237Z","type":"join"}
{"nick":"C-Man","date":"2012-09-24T10:02:20.338Z","type":"join"}
{"nick":"stampho","date":"2012-09-24T10:17:27.344Z","type":"join"}
{"nick":"stampho","reason":"Ping timeout: 264 seconds","date":"2012-09-24T10:35:54.323Z","type":"quit"}
{"nick":"stampho","date":"2012-09-24T10:49:06.168Z","type":"join"}
{"nick":"[[zzz]]","date":"2012-09-24T11:03:55.560Z","type":"join"}
{"nick":"Net147","date":"2012-09-24T11:04:45.894Z","type":"join"}
{"nick":"[[zz]]","reason":"Ping timeout: 246 seconds","date":"2012-09-24T11:07:19.492Z","type":"quit"}
{"nick":"CIA-70","message":"\u000303jkummerow@chromium.org\u000f * r\u000212583\u000f \u000310\u000f/branches/bleeding_edge/ (52 files in 16 dirs)\u0002:\u000f ","date":"2012-09-24T11:17:41.113Z","type":"message"}
{"nick":"CIA-70","message":"First commit of new tools/run-tests.py","date":"2012-09-24T11:17:41.334Z","type":"message"}
{"nick":"CIA-70","message":"Review URL: https://codereview.chromium.org/10919265","date":"2012-09-24T11:17:41.335Z","type":"message"}
{"nick":"CIA-70","message":"\u000303jkummerow@chromium.org\u000f * r\u000212584\u000f \u000310\u000f/branches/bleeding_edge/test/mjsunit/regress/regress-crbug-119926.js\u0002:\u000f ","date":"2012-09-24T11:17:41.628Z","type":"message"}
{"nick":"CIA-70","message":"Speed up test/mjsunit/regress/regress-crbug-119926","date":"2012-09-24T11:17:41.844Z","type":"message"}
{"nick":"CIA-70","message":"Review URL: https://codereview.chromium.org/10958063","date":"2012-09-24T11:17:41.844Z","type":"message"}
{"nick":"CIA-70","message":"\u000303jkummerow@chromium.org\u000f * r\u000212585\u000f \u000310\u000f/branches/bleeding_edge/test/mjsunit/d8-os.js\u0002:\u000f ","date":"2012-09-24T11:17:42.654Z","type":"message"}
{"nick":"CIA-70","message":"Speed up test/mjsunit/d8-os by reducing sleep times","date":"2012-09-24T11:17:42.874Z","type":"message"}
{"nick":"CIA-70","message":"Review URL: https://codereview.chromium.org/10973003","date":"2012-09-24T11:17:43.588Z","type":"message"}
{"nick":"CIA-70","message":"\u000303jkummerow@chromium.org\u000f * r\u000212586\u000f \u000310\u000f/branches/bleeding_edge/test/mjsunit/debug-multiple-breakpoints.js\u0002:\u000f ","date":"2012-09-24T11:17:43.804Z","type":"message"}
{"nick":"CIA-70","message":"Speed up test/mjsunit/debug-multiple-breakpoints","date":"2012-09-24T11:17:44.607Z","type":"message"}
{"nick":"CIA-70","message":"Review URL: https://codereview.chromium.org/10961064","date":"2012-09-24T11:17:44.824Z","type":"message"}
{"nick":"CIA-70","message":"\u000303jkummerow@chromium.org\u000f * r\u000212587\u000f \u000310\u000f/branches/bleeding_edge/test/mjsunit/greedy.js\u0002:\u000f ","date":"2012-09-24T11:17:45.574Z","type":"message"}
{"nick":"CIA-70","message":"Speed up test/mjsunit/greedy.js","date":"2012-09-24T11:17:45.794Z","type":"message"}
{"nick":"CIA-70","message":"Review URL: https://codereview.chromium.org/10969062","date":"2012-09-24T11:17:46.598Z","type":"message"}
{"nick":"CIA-70","message":"\u000303jkummerow@chromium.org\u000f * r\u000212588\u000f \u000310\u000f/branches/bleeding_edge/test/mjsunit/ (5 files)\u0002:\u000f ","date":"2012-09-24T11:17:46.814Z","type":"message"}
{"nick":"CIA-70","message":"Speed up test/mjsunit/compiler/regress-or","date":"2012-09-24T11:18:04.032Z","type":"message"}
{"nick":"CIA-70","message":"Review URL: https://codereview.chromium.org/10969063","date":"2012-09-24T11:18:04.245Z","type":"message"}
{"nick":"CIA-70","message":"\u000303jkummerow@chromium.org\u000f * r\u000212594\u000f \u000310\u000f/branches/bleeding_edge/test/mjsunit/regress/regress-crbug-119926.js\u0002:\u000f ","date":"2012-09-24T11:18:04.246Z","type":"message"}
{"nick":"CIA-70","message":"Remove trailing whitespace","date":"2012-09-24T11:18:04.246Z","type":"message"}
{"nick":"CIA-70","message":"R=mstarzinger@chromium.org","date":"2012-09-24T11:18:04.552Z","type":"message"}
{"nick":"CIA-70","message":"Review URL: https://codereview.chromium.org/10969064","date":"2012-09-24T11:18:04.775Z","type":"message"}
{"nick":"CIA-70","message":"\u000303jkummerow@chromium.org\u000f * r\u000212595\u000f \u000310\u000f/branches/bleeding_edge/test/mjsunit/ (mjsunit.status regress/regress-1969.js)\u0002:\u000f ","date":"2012-09-24T11:18:05.675Z","type":"message"}
{"nick":"CIA-70","message":"Delete test/mjsunit/regress-1969.","date":"2012-09-24T11:18:05.895Z","type":"message"}
{"nick":"CIA-70","message":"It was flaky, and its usefulness was doubtful.","date":"2012-09-24T11:18:06.582Z","type":"message"}
{"nick":"CIA-70","message":"(1 lines omitted)","date":"2012-09-24T11:18:06.805Z","type":"message"}
{"nick":"bnoordhuis","date":"2012-09-24T11:25:44.991Z","type":"join"}
{"nick":"TheJH","date":"2012-09-24T12:23:27.335Z","type":"join"}
{"nick":"[[zzz]]","new_nick":"[[zz]]","date":"2012-09-24T13:05:09.950Z","type":"nick"}
{"nick":"CIA-70","message":"\u000303jkummerow@chromium.org\u000f * r\u000212596\u000f \u000310\u000f/branches/bleeding_edge/test/mjsunit/ (9 files)\u0002:\u000f ","date":"2012-09-24T13:30:31.438Z","type":"message"}
{"nick":"CIA-70","message":"Split test/mjsunit/debug-stepout-scope into smaller chunks","date":"2012-09-24T13:30:31.654Z","type":"message"}
{"nick":"CIA-70","message":"Review URL: https://codereview.chromium.org/10969061","date":"2012-09-24T13:30:31.655Z","type":"message"}
{"nick":"CIA-70","message":"\u000303mstarzinger@chromium.org\u000f * r\u000212597\u000f \u000310\u000f/branches/bleeding_edge/src/heap.cc\u0002:\u000f ","date":"2012-09-24T13:30:32.047Z","type":"message"}
{"nick":"CIA-70","message":"Improve --trace-gc-verbose to show sum of all spaces.","date":"2012-09-24T13:30:32.264Z","type":"message"}
{"nick":"CIA-70","message":"R=ulan@chromium.org","date":"2012-09-24T13:30:32.264Z","type":"message"}
{"nick":"CIA-70","message":"Review URL: https://codereview.chromium.org/10974006","date":"2012-09-24T13:30:32.264Z","type":"message"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2012-09-24T13:36:40.895Z","type":"quit"}
{"nick":"bradleymeck","date":"2012-09-24T15:21:12.973Z","type":"join"}
{"nick":"Net147","reason":"Quit:  HydraIRC -> http://www.hydrairc.com <- Organize your IRC","date":"2012-09-24T15:25:20.804Z","type":"quit"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2009081014]","date":"2012-09-24T15:37:55.405Z","type":"quit"}
{"nick":"CIA-70","message":"\u000303yangguo@chromium.org\u000f * r\u000212598\u000f \u000310\u000f/branches/bleeding_edge/src/ (json-parser.h objects.cc objects-inl.h objects.h)\u0002:\u000f ","date":"2012-09-24T15:51:01.641Z","type":"message"}
{"nick":"CIA-70","message":"Fast path for symbol lookup in JSON.parse.","date":"2012-09-24T15:51:01.864Z","type":"message"}
{"nick":"CIA-70","message":"R=verwaest@chromium.org","date":"2012-09-24T15:51:01.864Z","type":"message"}
{"nick":"CIA-70","message":"BUG=","date":"2012-09-24T15:51:01.864Z","type":"message"}
{"nick":"CIA-70","message":"Review URL: https://chromiumcodereview.appspot.com/10969069","date":"2012-09-24T15:51:01.865Z","type":"message"}
{"nick":"CIA-70","message":"\u000303yangguo@chromium.org\u000f * r\u000212599\u000f \u000310\u000f/branches/bleeding_edge/src/json-parser.h\u0002:\u000f ","date":"2012-09-24T15:51:02.799Z","type":"message"}
{"nick":"CIA-70","message":"Fix failures caused by r12598.","date":"2012-09-24T15:51:03.015Z","type":"message"}
{"nick":"CIA-70","message":"R=verwaest@chromium.org","date":"2012-09-24T15:51:03.642Z","type":"message"}
{"nick":"CIA-70","message":"BUG=","date":"2012-09-24T15:51:04.574Z","type":"message"}
{"nick":"CIA-70","message":"Review URL: https://chromiumcodereview.appspot.com/10958070","date":"2012-09-24T15:51:04.794Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2012-09-24T16:09:43.789Z","type":"quit"}
{"nick":"xan_","reason":"Quit: leaving","date":"2012-09-24T17:01:43.129Z","type":"quit"}
{"nick":"bradleymeck","date":"2012-09-24T17:21:13.047Z","type":"join"}
{"nick":"bnoordhuis_","date":"2012-09-24T18:45:52.294Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2012-09-24T18:48:24.455Z","type":"quit"}
{"nick":"jamespage","reason":"*.net *.split","date":"2012-09-24T18:48:25.127Z","type":"quit"}
{"nick":"Alex_Gaynor","reason":"*.net *.split","date":"2012-09-24T18:48:25.346Z","type":"quit"}
{"nick":"jamespage","date":"2012-09-24T18:49:30.447Z","type":"join"}
{"nick":"Alex_Gaynor","date":"2012-09-24T18:49:50.755Z","type":"join"}
{"nick":"rendar_","date":"2012-09-24T18:53:54.338Z","type":"join"}
{"nick":"luite","message":"is there a way to see the arguments a function was called with when it's deoptimized? i have some code that runs twice as slow with v8 as with ionmonkey and i'm trying to figure out why :)","date":"2012-09-24T18:55:14.257Z","type":"message"}
{"nick":"eoh|","date":"2012-09-24T18:56:01.022Z","type":"join"}
{"nick":"rendar","reason":"Read error: Connection reset by peer","date":"2012-09-24T18:57:38.267Z","type":"quit"}
{"nick":"eoh","reason":"Ping timeout: 246 seconds","date":"2012-09-24T18:57:38.948Z","type":"quit"}
{"nick":"Alex_Gaynor","reason":"Ping timeout: 246 seconds","date":"2012-09-24T18:57:39.168Z","type":"quit"}
{"nick":"Deathzor","reason":"Ping timeout: 246 seconds","date":"2012-09-24T18:57:39.607Z","type":"quit"}
{"nick":"Deathzor","date":"2012-09-24T18:58:16.519Z","type":"join"}
{"nick":"Alex_Gaynor","date":"2012-09-24T18:59:25.409Z","type":"join"}
{"nick":"stalled","reason":"Ping timeout: 244 seconds","date":"2012-09-24T19:02:15.435Z","type":"quit"}
{"nick":"stalled","date":"2012-09-24T19:05:47.398Z","type":"join"}
{"nick":"[[zz]]","reason":"Ping timeout: 274 seconds","date":"2012-09-24T19:14:27.424Z","type":"quit"}
{"nick":"stampho","reason":"Ping timeout: 274 seconds","date":"2012-09-24T19:14:27.425Z","type":"quit"}
{"nick":"stampho","date":"2012-09-24T19:14:28.331Z","type":"join"}
{"nick":"[[zz]]","date":"2012-09-24T19:14:28.550Z","type":"join"}
{"nick":"luite","message":"wow (x === y)|0 is really slow compared to (x === y)?1:0","date":"2012-09-24T19:22:16.551Z","type":"message"}
{"nick":"luite","message":"is there an even faster way?","date":"2012-09-24T19:22:44.670Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2012-09-24T19:33:43.853Z","type":"quit"}
{"nick":"CIA-70","message":"\u000303rossberg@chromium.org\u000f * r\u000212600\u000f \u000310\u000f/branches/bleeding_edge/ (src/messages.js src/parser.h test/mjsunit/limit-locals.js)\u0002:\u000f ","date":"2012-09-24T19:35:20.319Z","type":"message"}
{"nick":"CIA-70","message":"Bump number of allowed variables per scope to 65535, to address GWT.","date":"2012-09-24T19:35:20.539Z","type":"message"}
{"nick":"CIA-70","message":"R=jkummerow@chromium.org","date":"2012-09-24T19:35:20.539Z","type":"message"}
{"nick":"CIA-70","message":"BUG=151625","date":"2012-09-24T19:35:20.539Z","type":"message"}
{"nick":"CIA-70","message":"Review URL: https://codereview.chromium.org/10965063","date":"2012-09-24T19:35:20.539Z","type":"message"}
{"nick":"CIA-70","message":"\u000303rossberg@chromium.org\u000f * r\u000212601\u000f \u000310\u000f/branches/3.13/ (4 files in 2 dirs)\u0002:\u000f ","date":"2012-09-24T19:35:21.115Z","type":"message"}
{"nick":"CIA-70","message":"Merged r12600 into 3.13 branch.","date":"2012-09-24T19:35:21.328Z","type":"message"}
{"nick":"CIA-70","message":"Bump number of allowed variables per scope to 65535, to address GWT.","date":"2012-09-24T19:35:21.570Z","type":"message"}
{"nick":"CIA-70","message":"BUG=151625","date":"2012-09-24T19:35:22.546Z","type":"message"}
{"nick":"CIA-70","message":"R=jkummerow@chromium.org","date":"2012-09-24T19:35:22.769Z","type":"message"}
{"nick":"CIA-70","message":"Review URL: https://codereview.chromium.org/10973012","date":"2012-09-24T19:35:23.582Z","type":"message"}
{"nick":"CIA-70","message":"\u000303rossberg@chromium.org\u000f * r\u000212602\u000f \u000310\u000f/tags/3.13.7.2\u0002:\u000f Tagging version 3.13.7.2","date":"2012-09-24T19:35:23.798Z","type":"message"}
{"nick":"bradleymeck","date":"2012-09-24T19:48:03.505Z","type":"join"}
{"nick":"mraleph","message":"luite: well you are doing bitwise on boolean values… nobody thinks that should be fast :-)","date":"2012-09-24T19:51:43.767Z","type":"message"}
{"nick":"mraleph","message":"or in other words: Crankshaft does not like that","date":"2012-09-24T19:52:26.589Z","type":"message"}
{"nick":"jamespage","reason":"Ping timeout: 245 seconds","date":"2012-09-24T19:53:21.279Z","type":"quit"}
{"nick":"C-Man","reason":"Read error: Connection reset by peer","date":"2012-09-24T19:55:42.344Z","type":"quit"}
{"nick":"C-Man","date":"2012-09-24T19:56:29.218Z","type":"join"}
{"nick":"luite","message":"mraleph: yeah i noticed, i just needed a fast way to convert to ints, i assumed that it would recognize that the result would always be bool, and then inline a fast conversion. apparently not :)","date":"2012-09-24T20:12:52.120Z","type":"message"}
{"nick":"luite","message":"but i guess it not really a common thing to do (i need to return a heap location for the result of a comparison, not a bool value, False and True are statically stored at heap locations 0 and 1)","date":"2012-09-24T20:14:11.975Z","type":"message"}
{"nick":"C-Man","reason":"Ping timeout: 241 seconds","date":"2012-09-24T20:15:28.572Z","type":"quit"}
{"nick":"bradleymeck","reason":"Ping timeout: 241 seconds","date":"2012-09-24T20:15:29.102Z","type":"quit"}
{"nick":"[[zz]]","reason":"Ping timeout: 241 seconds","date":"2012-09-24T20:15:29.332Z","type":"quit"}
{"nick":"stampho","reason":"Ping timeout: 241 seconds","date":"2012-09-24T20:15:29.332Z","type":"quit"}
{"nick":"stampho","date":"2012-09-24T20:15:29.791Z","type":"join"}
{"nick":"C-Man","date":"2012-09-24T20:16:12.814Z","type":"join"}
{"nick":"[[zz]]","date":"2012-09-24T20:16:13.806Z","type":"join"}
{"nick":"luite","message":"after fixing the |0 thing it's now only 25% slower than ionmonkey","date":"2012-09-24T20:17:48.541Z","type":"message"}
{"nick":"Alex_Gaynor","message":"mraleph: why shouldn't bitwise arithmetic be fast on bools?","date":"2012-09-24T20:20:25.027Z","type":"message"}
{"nick":"mraleph","message":"luite: now you have my attention. what are you actually measuring? it should not be slower than IonMonkey :-)","date":"2012-09-24T20:21:55.008Z","type":"message"}
{"nick":"luite","message":"haha","date":"2012-09-24T20:22:02.845Z","type":"message"}
{"nick":"luite","message":"i'm still optimizing","date":"2012-09-24T20:22:07.883Z","type":"message"}
{"nick":"mraleph","message":"Alex_Gaynor: well it should be :-) just nobody went and did it.","date":"2012-09-24T20:22:19.367Z","type":"message"}
{"nick":"luite","message":"it's code from a haskell->js compiler","date":"2012-09-24T20:22:19.695Z","type":"message"}
{"nick":"mraleph","message":"mhm.","date":"2012-09-24T20:22:30.290Z","type":"message"}
{"nick":"mraleph","message":"is it open source?","date":"2012-09-24T20:22:46.840Z","type":"message"}
{"nick":"luite","message":"so not really easy to read","date":"2012-09-24T20:22:48.705Z","type":"message"}
{"nick":"mraleph","message":"well I can read the compiler itself :-)","date":"2012-09-24T20:23:10.183Z","type":"message"}
{"nick":"luite","message":"yeah but the new code generator i'm working on is not public yet","date":"2012-09-24T20:23:11.345Z","type":"message"}
{"nick":"mraleph","message":"ok","date":"2012-09-24T20:23:14.128Z","type":"message"}
{"nick":"mraleph","message":"please send me a mail when it'll be public: vegorov@google.com","date":"2012-09-24T20:23:31.182Z","type":"message"}
{"nick":"mraleph","message":"if there are some corner cases where V8 is suffering I at least would like to materialize some issues from them :-)","date":"2012-09-24T20:24:00.561Z","type":"message"}
{"nick":"luite","message":"it's extremely experimental so tricky to get running","date":"2012-09-24T20:24:06.081Z","type":"message"}
{"nick":"mraleph","message":"well you can send selfcontained js output. that would work as well.","date":"2012-09-24T20:24:32.176Z","type":"message"}
{"nick":"Alex_Gaynor","message":"mraleph: I'm curious why would anyone need to spend time optimizing it? Presumabley bool->int coercion just generates some op that widens the bits, and then int | 0 is an obvious noop (+ checking for valueOf or whatever that function is called).","date":"2012-09-24T20:24:57.439Z","type":"message"}
{"nick":"luite","message":"it relies heavily on arrays (stack and heap global variables), the main loop is something like while(c !== done) { c = c(); }, arguments are passed in global variables r1...32 (yes i really want tco :) )","date":"2012-09-24T20:24:59.521Z","type":"message"}
{"nick":"mraleph","message":"Alex_Gaynor: well it would work if boolean was a number, but in V8 it is a pointer to the object.","date":"2012-09-24T20:25:44.555Z","type":"message"}
{"nick":"Alex_Gaynor","message":"mraleph: so it's a field read + widening :)","date":"2012-09-24T20:26:13.120Z","type":"message"}
{"nick":"Alex_Gaynor","message":"which is really just one instruction on x86 I think","date":"2012-09-24T20:26:20.426Z","type":"message"}
{"nick":"mraleph","message":"Alex_Gaynor: yeah that works.","date":"2012-09-24T20:26:21.935Z","type":"message"}
{"nick":"mraleph","message":"yeah it is simple.","date":"2012-09-24T20:26:27.486Z","type":"message"}
{"nick":"Alex_Gaynor","message":"So the missing operation is bool.toint() or similar?","date":"2012-09-24T20:26:42.422Z","type":"message"}
{"nick":"mraleph","message":"yep.","date":"2012-09-24T20:27:16.216Z","type":"message"}
{"nick":"mraleph","message":"I would rephrase it.","date":"2012-09-24T20:27:39.709Z","type":"message"}
{"nick":"mraleph","message":"the design of the compiler pipeline in this place is a bit borked.","date":"2012-09-24T20:28:05.539Z","type":"message"}
{"nick":"mraleph","message":"conversions do not exist as proper IR instructions.","date":"2012-09-24T20:28:30.804Z","type":"message"}
{"nick":"mraleph","message":"translation layer just assumes that nobody would use boolean in a bitwise expression","date":"2012-09-24T20:28:58.822Z","type":"message"}
{"nick":"Alex_Gaynor","message":"fun times","date":"2012-09-24T20:29:07.920Z","type":"message"}
{"nick":"mraleph","message":"there is not such thing as boolean-to-int, only number-to-int.","date":"2012-09-24T20:29:42.636Z","type":"message"}
{"nick":"mraleph","message":"it's either real number in a numeric operation or you are out of sweet spot :-)","date":"2012-09-24T20:30:05.266Z","type":"message"}
{"nick":"mraleph","message":"this is why I always say that I want to rewrite V8 from scratch :-)","date":"2012-09-24T20:30:27.268Z","type":"message"}
{"nick":"luite","message":"i've replaced the primitive operations in my compiler with the ?0:1 construct now, until you guys improve it :)","date":"2012-09-24T20:30:28.741Z","type":"message"}
{"nick":"mraleph","message":"there are two many special cases accumulated over years in places where generic approach should be favored.","date":"2012-09-24T20:30:49.884Z","type":"message"}
{"nick":"Alex_Gaynor","message":"mraleph: haha, I know the feeling I have a document on my desktop describing how I want to rewrite RPython from scratch","date":"2012-09-24T20:30:59.475Z","type":"message"}
{"nick":"mraleph","message":"yeah IonMonkey is better then we with this… they have a real ToInt32 instruction in IR http://hg.mozilla.org/mozilla-central/file/4a9d494f4376/js/src/ion/MIR.h#l1666","date":"2012-09-24T20:33:45.079Z","type":"message"}
{"nick":"luite","message":"hm the last change helped ionmonkey more than v8 :) https://gist.github.com/3778197","date":"2012-09-24T20:35:23.976Z","type":"message"}
{"nick":"luite","message":"that's the benchmark, which runs in ~1.6s on v8, 1.2s on ionmonkeyt on my system","date":"2012-09-24T20:35:44.418Z","type":"message"}
{"nick":"mraleph","message":"luite: thanks!","date":"2012-09-24T20:36:10.130Z","type":"message"}
{"nick":"luite","message":"sorry for the ugliness :)","date":"2012-09-24T20:36:13.307Z","type":"message"}
{"nick":"mraleph","message":"luite: np.","date":"2012-09-24T20:36:18.445Z","type":"message"}
{"nick":"mraleph","message":"lovely Core","date":"2012-09-24T20:36:22.023Z","type":"message"}
{"nick":"luite","message":"it has lots of redundant assignments since i don't have the dataflow analsys working yet","date":"2012-09-24T20:36:35.061Z","type":"message"}
{"nick":"luite","message":"but i guess v8 would remove many of then anyway","date":"2012-09-24T20:36:47.395Z","type":"message"}
{"nick":"mraleph","message":"n-queens, hohoho","date":"2012-09-24T20:36:51.005Z","type":"message"}
{"nick":"mraleph","message":"let me try running it.","date":"2012-09-24T20:37:28.058Z","type":"message"}
{"nick":"luite","message":"every haskell object is a function with 6 extra properties, i hope that's not a bad thing to do :)","date":"2012-09-24T20:40:21.435Z","type":"message"}
{"nick":"mraleph","message":"luite: so how do I know if it works? if it printed at the end con[1] :: $hs_GHC.Types.I#_con_e -> (2680 :: double)? ","date":"2012-09-24T20:40:42.202Z","type":"message"}
{"nick":"luite","message":"yeah","date":"2012-09-24T20:40:47.244Z","type":"message"}
{"nick":"mraleph","message":"ok","date":"2012-09-24T20:40:50.617Z","type":"message"}
{"nick":"luite","message":"that means the reduced result is an Int with value 2680","date":"2012-09-24T20:40:58.201Z","type":"message"}
{"nick":"luite","message":"the correct answer, number of solutions for an 11x11 field","date":"2012-09-24T20:41:18.067Z","type":"message"}
{"nick":"mraleph","message":"one thing: I suggest not to log anything when measuring time. console.log is actually much slower on Chrome than on FF, last time I checked… I doubt that it dominates runtime, but still.","date":"2012-09-24T20:41:55.463Z","type":"message"}
{"nick":"luite","message":"oh i use the v8 and ionmonkey console things","date":"2012-09-24T20:42:12.987Z","type":"message"}
{"nick":"mraleph","message":"ok.","date":"2012-09-24T20:46:07.509Z","type":"message"}
{"nick":"luite","message":"that part of the code runs much faster in v8 anyway :)","date":"2012-09-24T20:46:31.323Z","type":"message"}
{"nick":"mraleph","message":"I briefly looked through IR for the hottest function, did not spot anything obviously bad… Need to take a deeper look later.","date":"2012-09-24T20:46:46.677Z","type":"message"}
{"nick":"luite","message":"the garbage collector, which is a few loops through arrays","date":"2012-09-24T20:46:53.419Z","type":"message"}
{"nick":"luite","message":"but it doesn't take much time compared to the rest","date":"2012-09-24T20:47:00.623Z","type":"message"}
{"nick":"luite","message":"mraleph: ok, great, thanks","date":"2012-09-24T20:47:34.142Z","type":"message"}
{"nick":"mraleph","message":"there are some LoadKeyedGeneric there, but without closer look it's hard to say if they are a genuine problem (e.g. you read out of bounds; v8 does not like that) or something else.","date":"2012-09-24T20:48:20.747Z","type":"message"}
{"nick":"luite","message":"hmm, it shouldn't read anything out of bounds ever. out of bounds writes are probably more common, the stack should grow","date":"2012-09-24T20:50:09.945Z","type":"message"}
{"nick":"luite","message":"do you ahve tips for reading deopt messages? output IR code with the checks somehow to see which failed?","date":"2012-09-24T20:58:35.722Z","type":"message"}
{"nick":"deavid","reason":"*.net *.split","date":"2012-09-24T21:00:59.738Z","type":"quit"}
{"nick":"deavid","date":"2012-09-24T21:05:01.507Z","type":"join"}
{"nick":"jamespage","date":"2012-09-24T21:06:33.273Z","type":"join"}
{"nick":"jamespage","reason":"Changing host","date":"2012-09-24T21:06:33.501Z","type":"quit"}
{"nick":"jamespage","date":"2012-09-24T21:06:33.501Z","type":"join"}
{"nick":"rendar_","date":"2012-09-24T21:11:03.911Z","type":"quit"}
{"nick":"luite_","date":"2012-09-24T21:17:47.094Z","type":"join"}
{"nick":"luite_","message":"hm my code segfaults v8 now :(","date":"2012-09-24T21:18:04.664Z","type":"message"}
{"nick":"luite","reason":"Ping timeout: 240 seconds","date":"2012-09-24T21:18:20.355Z","type":"quit"}
{"nick":"Raynos","reason":"Ping timeout: 240 seconds","date":"2012-09-24T21:18:20.587Z","type":"quit"}
{"nick":"TheJH","reason":"Ping timeout: 256 seconds","date":"2012-09-24T21:18:35.396Z","type":"quit"}
