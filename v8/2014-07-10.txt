{"nick":"Allyz","date":"2014-07-10T01:01:15.299Z","type":"join"}
{"nick":"Allyz","reason":"Ping timeout: 240 seconds","date":"2014-07-10T01:05:33.285Z","type":"quit"}
{"nick":"iamdustan","date":"2014-07-10T01:13:35.664Z","type":"join"}
{"nick":"jmar777","date":"2014-07-10T01:17:11.505Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2014-07-10T01:53:10.627Z","type":"quit"}
{"nick":"jmar777","date":"2014-07-10T01:57:08.646Z","type":"join"}
{"nick":"Allyz","date":"2014-07-10T02:28:19.211Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Ping timeout: 252 seconds","date":"2014-07-10T03:01:02.729Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2014-07-10T03:08:12.103Z","type":"join"}
{"nick":"RT|Chatzilla_","date":"2014-07-10T03:13:26.279Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Read error: Connection reset by peer","date":"2014-07-10T03:13:41.787Z","type":"quit"}
{"nick":"RT|Chatzilla_","new_nick":"RT|Chatzilla","date":"2014-07-10T03:13:46.204Z","type":"nick"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2014-07-10T03:53:48.488Z","type":"quit"}
{"nick":"c4milo","date":"2014-07-10T03:57:17.818Z","type":"join"}
{"nick":"jmar777","date":"2014-07-10T04:00:41.575Z","type":"join"}
{"nick":"iamdustan","reason":"Ping timeout: 252 seconds","date":"2014-07-10T04:08:08.622Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2014-07-10T04:44:04.682Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2014-07-10T04:47:00.294Z","type":"quit"}
{"nick":"c4milo","date":"2014-07-10T04:47:26.511Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2014-07-10T04:48:41.111Z","type":"quit"}
{"nick":"c4milo","reason":"Ping timeout: 255 seconds","date":"2014-07-10T04:52:03.234Z","type":"quit"}
{"nick":"mostynb","date":"2014-07-10T05:15:08.877Z","type":"join"}
{"nick":"jmar777","date":"2014-07-10T05:19:28.247Z","type":"join"}
{"nick":"jmar777","reason":"Ping timeout: 240 seconds","date":"2014-07-10T05:23:33.824Z","type":"quit"}
{"nick":"jmar777","date":"2014-07-10T05:51:37.422Z","type":"join"}
{"nick":"jmar777","reason":"Ping timeout: 264 seconds","date":"2014-07-10T05:56:22.921Z","type":"quit"}
{"nick":"plutoniix","date":"2014-07-10T06:31:09.415Z","type":"join"}
{"nick":"c4milo","date":"2014-07-10T06:36:12.331Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 256 seconds","date":"2014-07-10T06:41:01.050Z","type":"quit"}
{"nick":"rendar","date":"2014-07-10T06:43:03.554Z","type":"join"}
{"nick":"jmar777","date":"2014-07-10T06:52:16.427Z","type":"join"}
{"nick":"jmar777","reason":"Ping timeout: 256 seconds","date":"2014-07-10T06:56:53.035Z","type":"quit"}
{"nick":"Lethalman","date":"2014-07-10T07:32:59.281Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"compile\" on \"Webkit Linux 64\" from 22311: yurys@chromium.org)","date":"2014-07-10T07:37:15.783Z","type":"message"}
{"nick":"muelli_","date":"2014-07-10T07:46:57.704Z","type":"join"}
{"nick":"jmar777","date":"2014-07-10T08:25:47.221Z","type":"join"}
{"nick":"jmar777","reason":"Ping timeout: 240 seconds","date":"2014-07-10T08:30:03.795Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by yurys@chromium.org: Tree is open (r22311 reverted)","date":"2014-07-10T08:47:45.351Z","type":"message"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by machenbach@chromium.org: Tree is closed (master restart - no commits please)","date":"2014-07-10T09:13:54.638Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2014-07-10T09:19:50.388Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: Tree is open","date":"2014-07-10T09:48:11.820Z","type":"message"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"compile\" on \"Webkit Linux\" from 22312: yurys@chromium.org)","date":"2014-07-10T09:54:14.173Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: Tree is open","date":"2014-07-10T10:01:15.962Z","type":"message"}
{"nick":"deavid","reason":"Ping timeout: 252 seconds","date":"2014-07-10T10:11:08.774Z","type":"quit"}
{"nick":"deavid","date":"2014-07-10T10:12:57.223Z","type":"join"}
{"nick":"c4milo","date":"2014-07-10T10:14:12.332Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 256 seconds","date":"2014-07-10T10:18:37.065Z","type":"quit"}
{"nick":"jmar777","date":"2014-07-10T10:27:21.592Z","type":"join"}
{"nick":"jmar777","reason":"Ping timeout: 255 seconds","date":"2014-07-10T10:31:48.224Z","type":"quit"}
{"nick":"mostynb","reason":"Quit: Leaving","date":"2014-07-10T10:37:16.681Z","type":"quit"}
{"nick":"Allyz","reason":"Remote host closed the connection","date":"2014-07-10T10:38:56.901Z","type":"quit"}
{"nick":"Allyz","date":"2014-07-10T10:39:56.201Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"compile\" on \"NaCl V8 Linux\" from 22314: machenbach@chromium.org, yangguo@chromium.org, yurys@chromium.org)","date":"2014-07-10T10:41:34.891Z","type":"message"}
{"nick":"Allyz","reason":"Ping timeout: 240 seconds","date":"2014-07-10T10:44:18.208Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by yangguo@google.com: Tree is open","date":"2014-07-10T10:49:36.939Z","type":"message"}
{"nick":"C-Man","date":"2014-07-10T10:49:58.397Z","type":"join"}
{"nick":"mostynb","date":"2014-07-10T11:16:10.512Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on \"V8 Linux64 ASAN\" from 22316: yangguo@chromium.org, yurys@chromium.org)","date":"2014-07-10T11:25:52.788Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by yangguo@google.com: Tree is open (yangguo investigating asan issue)","date":"2014-07-10T11:26:53.615Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by yangguo@google.com: Tree is open","date":"2014-07-10T11:34:57.317Z","type":"message"}
{"nick":"c4milo","date":"2014-07-10T12:02:51.502Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 240 seconds","date":"2014-07-10T12:07:18.197Z","type":"quit"}
{"nick":"jmar777","date":"2014-07-10T12:28:50.624Z","type":"join"}
{"nick":"Allyz","date":"2014-07-10T12:29:06.811Z","type":"join"}
{"nick":"jmar777","reason":"Ping timeout: 240 seconds","date":"2014-07-10T12:32:58.191Z","type":"quit"}
{"nick":"Allyz","reason":"Ping timeout: 240 seconds","date":"2014-07-10T12:34:33.806Z","type":"quit"}
{"nick":"caitp","message":"so now that we're parsing arrow functions, I guess it's time to make them actually work :d","date":"2014-07-10T12:46:17.678Z","type":"message"}
{"nick":"caitp","message":"well, I guess fixing the parsing bugs would need to be done first","date":"2014-07-10T13:08:39.101Z","type":"message"}
{"nick":"caitp","message":"mm","date":"2014-07-10T13:08:42.094Z","type":"message"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"compile\" on \"V8 Win64\" from 22321: hpayer@chromium.org, marja@chromium.org, mstarzinger@chromium.org)","date":"2014-07-10T13:15:43.100Z","type":"message"}
{"nick":"plutoniix","date":"2014-07-10T13:29:19.211Z","type":"join"}
{"nick":"jochen__","message":"i blame hannes","date":"2014-07-10T13:38:33.000Z","type":"message"}
{"nick":"c4milo","date":"2014-07-10T13:52:02.573Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 260 seconds","date":"2014-07-10T13:56:52.154Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by dslomov@chromium.org: Tree is open (Win64 build fix committed)","date":"2014-07-10T14:04:02.054Z","type":"message"}
{"nick":"marja___","message":"caitp: :)","date":"2014-07-10T14:07:43.727Z","type":"message"}
{"nick":"mostynb","reason":"Quit: Leaving","date":"2014-07-10T14:13:05.500Z","type":"quit"}
{"nick":"caitp","message":"marja___, there are a few issues with the preparser, and the lazy parsing seems to always result in an error :[ should I open a new issue regarding the preparsing problems?","date":"2014-07-10T14:18:33.559Z","type":"message"}
{"nick":"marja___","message":"caitp: related to arrow functions, or other issues?","date":"2014-07-10T14:20:47.196Z","type":"message"}
{"nick":"caitp","message":"yes, arrow functions","date":"2014-07-10T14:20:55.816Z","type":"message"}
{"nick":"marja___","message":"caitp: opening a new issue sounds good, pls cc me and aperez@igalia.com","date":"2014-07-10T14:21:22.375Z","type":"message"}
{"nick":"marja___","message":"soon we will see how come the tests didn't catch it!","date":"2014-07-10T14:21:55.822Z","type":"message"}
{"nick":"caitp","message":"well this one is pretty simple, it looks like there are no test cases covering it, which would explain why =)","date":"2014-07-10T14:23:19.060Z","type":"message"}
{"nick":"caitp","message":"marja___, I can't add CCs, but https://code.google.com/p/v8/issues/detail?id=3431&thanks=3431&ts=1405002576","date":"2014-07-10T14:30:00.464Z","type":"message"}
{"nick":"caitp","message":"but yeah, lazy binding is an issue even for the supported syntaxes, calling an arrow function will result in a syntax error","date":"2014-07-10T14:30:38.272Z","type":"message"}
{"nick":"caitp","message":"which is unfortunate, and maybe a bit more work to fix","date":"2014-07-10T14:30:58.711Z","type":"message"}
{"nick":"marja___","message":"caitp: thx, i'll add the ccs","date":"2014-07-10T14:33:55.017Z","type":"message"}
{"nick":"caitp","message":"actually, maybe I'm wrong... hmm,","date":"2014-07-10T14:34:08.129Z","type":"message"}
{"nick":"caitp","message":"yeah I'm wrong there is actually a test for this","date":"2014-07-10T14:34:35.904Z","type":"message"}
{"nick":"caitp","message":"and it is passing, so there you go","date":"2014-07-10T14:34:41.117Z","type":"message"}
{"nick":"caitp","message":"lets close that, it's definitely just the lazy parsing issues","date":"2014-07-10T14:34:48.716Z","type":"message"}
{"nick":"marja___","message":"yes, there should be a test, that's such a simple case","date":"2014-07-10T14:35:04.728Z","type":"message"}
{"nick":"marja___","message":"caitp: but... hmm.. what do yo mean by lazy parsing issues","date":"2014-07-10T14:35:46.089Z","type":"message"}
{"nick":"marja___","message":"caitp: as in, is there a bug in arrow function parsing, or not?","date":"2014-07-10T14:36:16.204Z","type":"message"}
{"nick":"caitp","message":"so, if you declare `var x = () => whatever;` and invoke x(), we go through a second run of parsing","date":"2014-07-10T14:36:16.667Z","type":"message"}
{"nick":"caitp","message":"and in that second run of parsing, we always trip over the `=>` token","date":"2014-07-10T14:36:41.284Z","type":"message"}
{"nick":"caitp","message":"although interestingly, `(function() { var x = () => 6; return x(); })()` is a syntax error, while `(() => 6)()` isn't","date":"2014-07-10T14:38:38.700Z","type":"message"}
{"nick":"marja___","message":"... now i'm thinking whether it makes sense for arrow functions to be lazy at all","date":"2014-07-10T14:39:08.114Z","type":"message"}
{"nick":"marja___","message":"but anyway, that aside...","date":"2014-07-10T14:39:14.930Z","type":"message"}
{"nick":"marja___","message":"argh, the preparse data","date":"2014-07-10T14:40:14.588Z","type":"message"}
{"nick":"marja___","message":"i think that just breaks with arrow functions, whoops","date":"2014-07-10T14:40:23.900Z","type":"message"}
{"nick":"marja___","message":"but that's probably a separate issue...","date":"2014-07-10T14:40:27.865Z","type":"message"}
{"nick":"caitp","message":"it is separate to the one I opened, I think that can be closed","date":"2014-07-10T14:41:41.388Z","type":"message"}
{"nick":"marja___","message":"wait no, it works, we produce the preparse data for lazy arrow functions too. that was just a sidetrack.","date":"2014-07-10T14:41:42.727Z","type":"message"}
{"nick":"marja___","message":"okay, back to the problem you're talking about..","date":"2014-07-10T14:41:48.882Z","type":"message"}
{"nick":"aperezdc","date":"2014-07-10T14:42:35.776Z","type":"join"}
{"nick":"aperezdc","message":"marja___: here I am","date":"2014-07-10T14:42:53.012Z","type":"message"}
{"nick":"marja___","message":"okay, so, the problem is...","date":"2014-07-10T14:42:55.108Z","type":"message"}
{"nick":"marja___","message":"<caitp> so, if you declare `var x = () => whatever;` and invoke x(), we go through a second run of parsing","date":"2014-07-10T14:43:08.660Z","type":"message"}
{"nick":"aperezdc","action":"adds #v8 to autojoin channels","date":"2014-07-10T14:43:08.911Z","type":"action"}
{"nick":"marja___","message":"<caitp> and in that second run of parsing, we always trip over the `=>` token","date":"2014-07-10T14:43:13.752Z","type":"message"}
{"nick":"marja___","message":"<caitp> although interestingly, `(function() { var x = () => 6; return x(); })()` is a syntax error, while `(() => 6)()` isn't","date":"2014-07-10T14:43:18.953Z","type":"message"}
{"nick":"caitp","message":"hi aperez, nice work on landing the arrow function parsing regardless of the issues still remaining =)","date":"2014-07-10T14:43:52.916Z","type":"message"}
{"nick":"marja___","message":"(a side thing is that i'm still not convinced that lazy arrow functions make much sense! but that's a separate thing.)","date":"2014-07-10T14:44:00.880Z","type":"message"}
{"nick":"caitp","message":"maybe we don't need to lazy parse arrow functions with concise bodies?","date":"2014-07-10T14:44:36.716Z","type":"message"}
{"nick":"marja___","message":"but we don't know how long the arrow function is before we parse it :)","date":"2014-07-10T14:44:50.750Z","type":"message"}
{"nick":"marja___","message":"so the decision whether to lazy-parse it or normal-parse it needs to be made when the function starts.","date":"2014-07-10T14:45:11.903Z","type":"message"}
{"nick":"caitp","message":"well if it's a concise body then it can only be so long, right, a single expression","date":"2014-07-10T14:45:12.024Z","type":"message"}
{"nick":"marja___","message":"yeah","date":"2014-07-10T14:45:23.875Z","type":"message"}
{"nick":"marja___","message":"but even if it's something very �{ short; } we probably shouldn't","date":"2014-07-10T14:45:34.889Z","type":"message"}
{"nick":"marja___","message":"anyhow","date":"2014-07-10T14:46:06.134Z","type":"message"}
{"nick":"aperezdc","message":"about that, I'd say concise ones (single expression body) arrow functions would not be lazy parsed","date":"2014-07-10T14:46:11.627Z","type":"message"}
{"nick":"aperezdc","message":"it is guaranteed that it is always only one expression","date":"2014-07-10T14:46:23.432Z","type":"message"}
{"nick":"aperezdc","message":"so I would not expect those to be long in mosy of the cases","date":"2014-07-10T14:46:35.700Z","type":"message"}
{"nick":"marja___","message":"actually, would the problem go away if we just say all arrow functions are parsed eagerly?","date":"2014-07-10T14:46:35.920Z","type":"message"}
{"nick":"aperezdc","message":"marja___: yes","date":"2014-07-10T14:47:04.954Z","type":"message"}
{"nick":"marja___","message":"is there any reason to have lazy arrow functions? (i remember we discussed this but then it slipped out of my radar)","date":"2014-07-10T14:47:23.353Z","type":"message"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on \"V8 Linux - arm64 - sim - debug\" from 22323: rossberg@chromium.org)","date":"2014-07-10T14:47:25.550Z","type":"message"}
{"nick":"caitp","message":"I thought the argument was that people would use them for event handlers that are crazy-long in node.js or something","date":"2014-07-10T14:47:45.432Z","type":"message"}
{"nick":"marja___","message":"oh my.","date":"2014-07-10T14:47:52.290Z","type":"message"}
{"nick":"aperezdc","message":"the issue that caitp found is because in Parser::ParseLazy() we want to check for: if (shared_info->is_arrow()) { ParseAssignmentExpression() } else { ParseFunctionLiteral() }","date":"2014-07-10T14:47:53.732Z","type":"message"}
{"nick":"marja___","message":"alright.","date":"2014-07-10T14:48:05.629Z","type":"message"}
{"nick":"aperezdc","message":"caitp: yes, that is my though as well, long callbacks in node.js and so","date":"2014-07-10T14:48:23.000Z","type":"message"}
{"nick":"marja___","message":"i'm not so sure what we should think of that. we'll take a performance hit on small arrow functions :/","date":"2014-07-10T14:48:54.762Z","type":"message"}
{"nick":"aperezdc","message":"but SharedFunctionInfo::is_arrow() is gonna be added in the next patch","date":"2014-07-10T14:48:58.278Z","type":"message"}
{"nick":"marja___","message":"yup. okay. that is fair enough.","date":"2014-07-10T14:49:05.366Z","type":"message"}
{"nick":"marja___","message":"and the always-eager vs. lazy arrow functions can be solved separately.","date":"2014-07-10T14:50:32.751Z","type":"message"}
{"nick":"marja___","message":"at some point in time.","date":"2014-07-10T14:50:37.851Z","type":"message"}
{"nick":"marja___","message":"caitp: thanks for reaching out, we're ofc excited to find all the problems as early as possible. :)","date":"2014-07-10T14:52:19.865Z","type":"message"}
{"nick":"aperezdc","message":"fwiw, I have the follow-up patch ready, I am making a run of the tests","date":"2014-07-10T14:52:20.538Z","type":"message"}
{"nick":"marja___","message":"aperezdc: regarding that, i route you to rossberg@ who'll review that part.","date":"2014-07-10T14:54:21.776Z","type":"message"}
{"nick":"aperezdc","message":"marja___: yeah, I know... what I can make for you is a separate patch for disabling lazy parsing for concise arrow functions ","date":"2014-07-10T14:55:26.898Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by rossberg@chromium.org: Tree is open","date":"2014-07-10T14:55:29.121Z","type":"message"}
{"nick":"marja___","message":"aperezdc: ok","date":"2014-07-10T14:55:53.961Z","type":"message"}
{"nick":"marja___","message":"aperezdc: btw, it would be good to have a test that we produce sane preparse data for arrow functions and also use it in a sane way. maybe.","date":"2014-07-10T14:57:06.381Z","type":"message"}
{"nick":"marja___","message":"there are already some tests which test that we actually do use the preparse data (because whoops, there were some year-long bugs where we actually didn't use parts of it :P) which might be helpful or not.","date":"2014-07-10T14:57:42.999Z","type":"message"}
{"nick":"aperezdc","message":"marja___: sure, I can look into that as well","date":"2014-07-10T14:57:53.601Z","type":"message"}
{"nick":"aperezdc","message":"as a bonus, making sure that the concise ones are parsed eagerly and do not generate preparse data","date":"2014-07-10T14:58:14.504Z","type":"message"}
{"nick":"marja___","message":"sg :)","date":"2014-07-10T14:58:22.526Z","type":"message"}
{"nick":"marja___","message":"ah yes, there is a test \"don't regeress data sizes\" or such, you can see there how you assert that you get the right amount of data","date":"2014-07-10T14:59:02.492Z","type":"message"}
{"nick":"marja___","message":"and a separate one which asserts that it's actually used.","date":"2014-07-10T14:59:16.073Z","type":"message"}
{"nick":"aperezdc","message":"marja___: sounds like the perfect place to add those test cases","date":"2014-07-10T14:59:28.245Z","type":"message"}
{"nick":"aperezdc","message":":)","date":"2014-07-10T14:59:30.797Z","type":"message"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on \"V8 Mac64 - debug\" from 22325: hpayer@chromium.org, mstarzinger@chromium.org, rossberg@chromium.org)","date":"2014-07-10T15:08:34.950Z","type":"message"}
{"nick":"mostynb","date":"2014-07-10T15:14:28.176Z","type":"join"}
{"nick":"rmcilroy","message":"I blame mstarzinger","date":"2014-07-10T15:20:43.391Z","type":"message"}
{"nick":"dpino__","date":"2014-07-10T15:25:44.959Z","type":"join"}
{"nick":"mostynb","reason":"Quit: Leaving","date":"2014-07-10T15:26:07.296Z","type":"quit"}
{"nick":"dpino","date":"2014-07-10T15:27:14.387Z","type":"join"}
{"nick":"dpino__","reason":"Client Quit","date":"2014-07-10T15:27:33.813Z","type":"quit"}
{"nick":"dpino","reason":"Ping timeout: 245 seconds","date":"2014-07-10T15:34:22.393Z","type":"quit"}
{"nick":"unixpickle","date":"2014-07-10T15:34:34.423Z","type":"join"}
{"nick":"dpino","date":"2014-07-10T15:37:18.567Z","type":"join"}
{"nick":"dpino","reason":"Ping timeout: 272 seconds","date":"2014-07-10T15:43:59.705Z","type":"quit"}
{"nick":"dpino","date":"2014-07-10T15:45:40.633Z","type":"join"}
{"nick":"dpino","reason":"Ping timeout: 252 seconds","date":"2014-07-10T15:53:14.630Z","type":"quit"}
{"nick":"dpino","date":"2014-07-10T15:57:21.208Z","type":"join"}
