{"nick":"mostynb","reason":"Quit: Leaving","date":"2015-08-31T15:10:41.205Z","type":"quit"}
{"nick":"enaqx","reason":"Remote host closed the connection","date":"2015-08-31T15:18:12.716Z","type":"quit"}
{"nick":"enaqx","date":"2015-08-31T15:18:26.931Z","type":"join"}
{"nick":"enaqx","reason":"Remote host closed the connection","date":"2015-08-31T15:18:57.962Z","type":"quit"}
{"nick":"caitp","new_nick":"caitp|away","date":"2015-08-31T15:30:54.409Z","type":"nick"}
{"nick":"enaqx","date":"2015-08-31T16:02:41.361Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2009081014]","date":"2015-08-31T16:04:24.253Z","type":"quit"}
{"nick":"bnoordhuis","date":"2015-08-31T16:35:45.654Z","type":"join"}
{"nick":"enaqx","reason":"Remote host closed the connection","date":"2015-08-31T16:52:25.523Z","type":"quit"}
{"nick":"ncthom91","date":"2015-08-31T17:10:27.253Z","type":"join"}
{"nick":"ncthom91","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2015-08-31T17:33:43.711Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2015-08-31T17:59:11.659Z","type":"quit"}
{"nick":"davi","reason":"Remote host closed the connection","date":"2015-08-31T17:59:37.729Z","type":"quit"}
{"nick":"ncthom91","date":"2015-08-31T18:04:21.272Z","type":"join"}
{"nick":"enaqx","date":"2015-08-31T18:05:16.724Z","type":"join"}
{"nick":"enaqx","reason":"Ping timeout: 246 seconds","date":"2015-08-31T18:09:56.734Z","type":"quit"}
{"nick":"C-Man","date":"2015-08-31T18:35:15.933Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-08-31T18:41:35.517Z","type":"quit"}
{"nick":"ncthom91","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2015-08-31T18:49:40.856Z","type":"quit"}
{"nick":"bnoordhuis","date":"2015-08-31T18:59:50.953Z","type":"join"}
{"nick":"rendar","reason":"Ping timeout: 268 seconds","date":"2015-08-31T19:12:54.848Z","type":"quit"}
{"nick":"ofrobots","date":"2015-08-31T19:17:18.251Z","type":"join"}
{"nick":"rendar","date":"2015-08-31T19:18:18.217Z","type":"join"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2015-08-31T19:32:43.994Z","type":"quit"}
{"nick":"davi","date":"2015-08-31T19:48:24.968Z","type":"join"}
{"nick":"davi","reason":"Changing host","date":"2015-08-31T19:48:47.495Z","type":"quit"}
{"nick":"davi","date":"2015-08-31T19:48:47.691Z","type":"join"}
{"nick":"JoWie","reason":"Quit: Connection closed for inactivity","date":"2015-08-31T20:12:13.616Z","type":"quit"}
{"nick":"JoWie","date":"2015-08-31T20:47:06.906Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 246 seconds","date":"2015-08-31T20:47:56.928Z","type":"quit"}
{"nick":"bnoordhuis","date":"2015-08-31T20:48:49.706Z","type":"join"}
{"nick":"bnoordhuis","reason":"Quit: leaving","date":"2015-08-31T21:01:29.416Z","type":"quit"}
{"nick":"caitp|away","new_nick":"caitp","date":"2015-08-31T21:08:51.510Z","type":"nick"}
{"nick":"davi","reason":"Ping timeout: 246 seconds","date":"2015-08-31T21:15:05.693Z","type":"quit"}
{"nick":"aklein","message":"caitp: to be clear, I agree that fixing the literal counting mess isn't needed in this patch","date":"2015-08-31T21:18:36.214Z","type":"message"}
{"nick":"caitp","new_nick":"caitp|away","date":"2015-08-31T21:20:22.197Z","type":"nick"}
{"nick":"esas","reason":"Read error: Connection reset by peer","date":"2015-08-31T21:57:59.691Z","type":"quit"}
{"nick":"enaqx","date":"2015-08-31T22:05:45.242Z","type":"join"}
{"nick":"caitp|away","new_nick":"caitp","date":"2015-08-31T22:20:02.263Z","type":"nick"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2015-08-31T22:20:08.883Z","type":"quit"}
{"nick":"caitp-","date":"2015-08-31T22:22:27.619Z","type":"join"}
{"nick":"RT|Chatzilla","date":"2015-08-31T22:27:40.906Z","type":"join"}
{"nick":"caitp","message":"aklein: I don't think your approach to v8:4400 works in all cases, at least not without allocating unused literal indexes than are needed. The Checkpoint::Restore() mechanism already does most of what you're talking about, but it's not quite enough","date":"2015-08-31T22:33:39.497Z","type":"message"}
{"nick":"caitp","message":"I played around with it a few times over the weekend, I think what is needed is tracking literal counts on a per-expression basis and coagulating them in the appropriate places, because only per-expression can you distinguish between real literals and patterns","date":"2015-08-31T22:34:43.568Z","type":"message"}
{"nick":"caitp","message":"Especially important for arrow functions, where you don't have a real FunctionState while parsing the formal parameters","date":"2015-08-31T22:35:15.186Z","type":"message"}
{"nick":"caitp","message":"but your version of that strategy might be slightly different, we'll see","date":"2015-08-31T22:35:51.672Z","type":"message"}
{"nick":"aklein","message":"caitp: yeah, I ran into the over-allocating problem with some simple tests cases","date":"2015-08-31T22:37:18.414Z","type":"message"}
{"nick":"aklein","message":"more worryingly, I think we might already be over-allocating with destructuring bind","date":"2015-08-31T22:37:31.510Z","type":"message"}
{"nick":"aklein","message":"\"var {b} = {}\" seems to add two materialized literal slots","date":"2015-08-31T22:37:46.401Z","type":"message"}
{"nick":"caitp","message":"we are, dslomov had mentioned it in a bug","date":"2015-08-31T22:37:48.519Z","type":"message"}
{"nick":"aklein","message":"ok","date":"2015-08-31T22:37:52.042Z","type":"message"}
{"nick":"aklein","message":"it's worrying that rossberg didn't mention this when talking about staging...","date":"2015-08-31T22:38:18.784Z","type":"message"}
{"nick":"aklein","message":"happen to have the bug handy?","date":"2015-08-31T22:38:43.725Z","type":"message"}
{"nick":"caitp","message":"no,it might have been a CL or something","date":"2015-08-31T22:38:52.157Z","type":"message"}
{"nick":"aklein","message":"k","date":"2015-08-31T22:38:55.487Z","type":"message"}
{"nick":"aklein","message":"your outline sounds right","date":"2015-08-31T22:39:14.224Z","type":"message"}
{"nick":"caitp","message":"it seems functionally correct but I'm not sure how to do it without hurting codeload very badly","date":"2015-08-31T22:39:54.181Z","type":"message"}
{"nick":"aklein","message":"for now, it still seems better to over-allocate than crash :)","date":"2015-08-31T22:41:59.751Z","type":"message"}
{"nick":"caitp","message":"yes","date":"2015-08-31T22:42:15.178Z","type":"message"}
{"nick":"seventh","date":"2015-08-31T22:43:54.008Z","type":"join"}
{"nick":"caitp-","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-08-31T22:44:04.478Z","type":"quit"}
{"nick":"aklein","message":"I'll bet we don't catch 4400 in parsing tests because we run the PreParser on the whole string","date":"2015-08-31T22:44:15.797Z","type":"message"}
{"nick":"aklein","message":"caitp: I'm going to let you land your rest patch (assuming you get an lgtm stamp from bmeurer) before fixing this, btw; it's clearly going to conflict with your patch","date":"2015-08-31T22:45:57.505Z","type":"message"}
{"nick":"caitp","message":"I think the function needs to be invoked in order to cause the crash, so parsing tests would never catch it anyways","date":"2015-08-31T22:46:24.190Z","type":"message"}
{"nick":"aklein","message":"parsing tests do compare the literal counts, though","date":"2015-08-31T22:47:22.487Z","type":"message"}
{"nick":"caitp","message":"ah","date":"2015-08-31T22:47:51.190Z","type":"message"}
{"nick":"aklein","message":"https://code.google.com/p/chromium/codesearch#chromium/src/v8/test/cctest/test-parsing.cc&l=1581","date":"2015-08-31T22:48:04.437Z","type":"message"}
{"nick":"aklein","message":"maybe the bug is that function_state should be passed along to SkipLazyFunctionBody instead of being recreated inside the preparser? lots seems broken here.","date":"2015-08-31T22:48:56.490Z","type":"message"}
{"nick":"caitp","new_nick":"caitp|away","date":"2015-08-31T22:50:57.981Z","type":"nick"}
{"nick":"caitp|away","new_nick":"caitp","date":"2015-08-31T22:52:13.425Z","type":"nick"}
{"nick":"caitp","message":"yeah, IIRC it only compared the top-level literal counts though","date":"2015-08-31T22:52:36.226Z","type":"message"}
{"nick":"rendar","date":"2015-08-31T23:17:43.162Z","type":"quit"}
{"nick":"deavid","reason":"Ping timeout: 250 seconds","date":"2015-08-31T23:25:07.351Z","type":"quit"}
{"nick":"deavid","date":"2015-08-31T23:32:36.361Z","type":"join"}
{"nick":"caitp","new_nick":"caitp__","date":"2015-08-31T23:39:29.304Z","type":"nick"}
{"nick":"caitp-","date":"2015-08-31T23:39:29.945Z","type":"join"}
{"nick":"caitp__","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2015-08-31T23:42:08.514Z","type":"quit"}
{"nick":"caitp-","reason":"Remote host closed the connection","date":"2015-08-31T23:55:34.590Z","type":"quit"}
