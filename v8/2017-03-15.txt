{"nick":"plutoniix","date":"2017-03-15T00:26:48.792Z","type":"join"}
{"nick":"unixpickle","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-03-15T01:41:12.311Z","type":"quit"}
{"nick":"rwlbuis_","reason":"Quit: Connection closed for inactivity","date":"2017-03-15T01:56:47.539Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-03-15T02:16:22.443Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-03-15T03:04:42.329Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-03-15T05:02:39.669Z","type":"quit"}
{"nick":"plutoniix","date":"2017-03-15T06:09:29.984Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2017-03-15T06:10:13.944Z","type":"quit"}
{"nick":"plutoniix","date":"2017-03-15T06:10:48.502Z","type":"join"}
{"nick":"Keverw","date":"2017-03-15T06:55:05.425Z","type":"join"}
{"nick":"Keverw","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2017-03-15T07:06:18.917Z","type":"quit"}
{"nick":"plutoniix","reason":"Ping timeout: 260 seconds","date":"2017-03-15T07:16:40.404Z","type":"quit"}
{"nick":"plutoniix","date":"2017-03-15T07:30:02.244Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2017-03-15T07:31:04.211Z","type":"quit"}
{"nick":"plutoniix","date":"2017-03-15T07:31:32.319Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by machenbach@chromium.org: closed - maintenance","date":"2017-03-15T08:00:26.355Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: open","date":"2017-03-15T08:11:29.890Z","type":"message"}
{"nick":"Net147","reason":"Quit: Quit","date":"2017-03-15T08:34:58.375Z","type":"quit"}
{"nick":"privik","date":"2017-03-15T09:20:14.373Z","type":"join"}
{"nick":"privik","message":"Can anyone explain to me why new wins over bind?","date":"2017-03-15T09:20:30.409Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-03-15T09:39:27.185Z","type":"quit"}
{"nick":"plutoniix","date":"2017-03-15T09:43:46.355Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2017-03-15T09:44:23.311Z","type":"quit"}
{"nick":"plutoniix","date":"2017-03-15T09:44:57.349Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by machenbach@chromium.org: closed - maintenance","date":"2017-03-15T10:02:21.376Z","type":"message"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-03-15T10:25:10.493Z","type":"quit"}
{"nick":"mylesborins","date":"2017-03-15T10:25:41.249Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-03-15T10:51:31.629Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: open","date":"2017-03-15T10:59:38.309Z","type":"message"}
{"nick":"bradleymeck","date":"2017-03-15T12:51:22.308Z","type":"join"}
{"nick":"unixpickle","date":"2017-03-15T13:10:35.660Z","type":"join"}
{"nick":"unixpickle","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-03-15T13:18:41.885Z","type":"quit"}
{"nick":"unixpickle","date":"2017-03-15T13:26:39.273Z","type":"join"}
{"nick":"unixpickle","reason":"Client Quit","date":"2017-03-15T13:30:56.110Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-03-15T13:33:12.892Z","type":"quit"}
{"nick":"trungl-bot","reason":"Ping timeout: 246 seconds","date":"2017-03-15T13:50:02.328Z","type":"quit"}
{"nick":"plutoniix","date":"2017-03-15T13:51:15.075Z","type":"join"}
{"nick":"trungl-bot","date":"2017-03-15T14:01:53.344Z","type":"join"}
{"nick":"bradleymeck","date":"2017-03-15T14:03:10.315Z","type":"join"}
{"nick":"Net147","date":"2017-03-15T14:04:31.594Z","type":"join"}
{"nick":"unixpickle","date":"2017-03-15T15:06:14.579Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-03-15T16:09:21.071Z","type":"quit"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2010030309]","date":"2017-03-15T16:34:40.978Z","type":"quit"}
{"nick":"littledan","message":"privik: What do you mean?","date":"2017-03-15T16:43:35.387Z","type":"message"}
{"nick":"privik","message":"littledan: A function bound to an object loses its this binding with new.","date":"2017-03-15T16:44:06.795Z","type":"message"}
{"nick":"privik","message":"littledan: So there is something that makes the function returned by bind know when we are constructing a new object or when we are calling it plain.","date":"2017-03-15T16:44:52.201Z","type":"message"}
{"nick":"littledan","message":"yeah, that's right, this is per spec, see https://tc39.github.io/ecma262/#sec-bound-function-exotic-objects-construct-argumentslist-newtarget","date":"2017-03-15T16:45:27.869Z","type":"message"}
{"nick":"littledan","message":"the target used is the one in the bound function, even for new (which uses [[Construct]])(","date":"2017-03-15T16:45:47.201Z","type":"message"}
{"nick":"littledan","message":"maybe bound functions aren't the right thing for your use case","date":"2017-03-15T16:45:58.915Z","type":"message"}
{"nick":"littledan","message":"or, sorry, I'm confused--the [[BoundFunctionThis]] is only used in [[Call]]","date":"2017-03-15T16:47:09.353Z","type":"message"}
{"nick":"littledan","message":"so, it looses the this binding with new","date":"2017-03-15T16:47:23.216Z","type":"message"}
{"nick":"littledan","message":"(the target I was thinking of is actually the underlying function)","date":"2017-03-15T16:47:34.650Z","type":"message"}
{"nick":"caitp","message":"how would it make sense if it didn't lose the binding with new?","date":"2017-03-15T16:54:34.650Z","type":"message"}
{"nick":"privik","reason":"Ping timeout: 240 seconds","date":"2017-03-15T17:09:58.310Z","type":"quit"}
{"nick":"littledan","message":"well, it would make new on a bound function act just like call","date":"2017-03-15T17:31:23.939Z","type":"message"}
{"nick":"littledan","message":"you can achieve this with a Proxy","date":"2017-03-15T17:31:28.579Z","type":"message"}
{"nick":"littledan","message":"what does \"make sense\" even mean in JavaScript anyway?","date":"2017-03-15T17:31:37.093Z","type":"message"}
{"nick":"bradleymeck","date":"2017-03-15T17:34:02.963Z","type":"join"}
{"nick":"unixpickle","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-03-15T17:35:03.940Z","type":"quit"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2017-03-15T17:37:20.147Z","type":"quit"}
{"nick":"unixpickle","date":"2017-03-15T17:41:07.238Z","type":"join"}
{"nick":"bradleymeck","date":"2017-03-15T17:42:45.512Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-03-15T17:48:56.599Z","type":"quit"}
{"nick":"caitp","message":"I don't see how you can achieve it with a Proxy, the `this` is a new object every time","date":"2017-03-15T18:02:43.970Z","type":"message"}
{"nick":"caitp","message":"i mean I guess you could avoid calling [[Construct]] without failing invariant checks, but that just makes `new` meaningless","date":"2017-03-15T18:05:59.341Z","type":"message"}
{"nick":"littledan","message":"Yeah, Proxies can do a lot of meaningless things","date":"2017-03-15T18:23:26.142Z","type":"message"}
{"nick":"Guest59","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-03-15T18:35:18.570Z","type":"quit"}
{"nick":"Guest59","date":"2017-03-15T18:36:55.380Z","type":"join"}
{"nick":"Guest59","reason":"Read error: Connection reset by peer","date":"2017-03-15T18:39:08.605Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-03-15T19:30:49.205Z","type":"join"}
{"nick":"Guest59","date":"2017-03-15T19:53:25.562Z","type":"join"}
{"nick":"Guest59","reason":"Client Quit","date":"2017-03-15T19:53:41.879Z","type":"quit"}
{"nick":"Kronuz","reason":"Ping timeout: 268 seconds","date":"2017-03-15T20:10:58.618Z","type":"quit"}
{"nick":"Kronuz","date":"2017-03-15T20:15:18.614Z","type":"join"}
{"nick":"unixpickle","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-03-15T21:20:40.891Z","type":"quit"}
{"nick":"jwolfe","message":"is the test webkit/fast/js/excessive-comma-usage specifically designed to fail in no-optimization builds? i'm getting a maximum call stack exceeded error, which is understandable, but are we making debug builds fail on purpose?","date":"2017-03-15T21:33:52.447Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-03-15T21:33:55.070Z","type":"quit"}
{"nick":"jwolfe","message":"do bots pass that test in debug builds? do they do any special configuration to increase the call stack limit?","date":"2017-03-15T21:34:09.264Z","type":"message"}
{"nick":"jwolfe","message":"i guess the question is: do any bots run with optimizations turned off? i would imagine not.","date":"2017-03-15T21:34:47.789Z","type":"message"}
{"nick":"unixpickle","date":"2017-03-15T21:41:13.197Z","type":"join"}
{"nick":"unixpickle","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-03-15T21:52:25.485Z","type":"quit"}
{"nick":"caitp","message":"jwolfe: that test gets skipped on a number of slow configurations","date":"2017-03-15T22:09:35.729Z","type":"message"}
{"nick":"unixpickle","date":"2017-03-15T22:10:18.518Z","type":"join"}
{"nick":"jwolfe","message":"caitp: is there a way to skip tests using run-tests.py (...looking now)","date":"2017-03-15T22:10:24.544Z","type":"message"}
{"nick":"caitp","message":"yes, everything with the SKIP flag in webkit.status (or mjsunit.status, or other status files)","date":"2017-03-15T22:10:51.218Z","type":"message"}
{"nick":"jwolfe","message":"i mean from the command line.","date":"2017-03-15T22:13:16.203Z","type":"message"}
{"nick":"caitp","message":"run-tests.py will skip it","date":"2017-03-15T22:13:25.472Z","type":"message"}
{"nick":"jwolfe","message":"looks like --slow-tests=skip","date":"2017-03-15T22:13:28.106Z","type":"message"}
{"nick":"caitp","message":"based on the status files","date":"2017-03-15T22:13:30.714Z","type":"message"}
{"nick":"caitp","message":"if you use the msan variant on an arm64 build for instance, it will skip it","date":"2017-03-15T22:13:45.791Z","type":"message"}
{"nick":"caitp","message":"so, if something changed and it's now too slow on architectures that aren't configured to skip it, lets see if trybots can still do it","date":"2017-03-15T22:14:29.328Z","type":"message"}
{"nick":"jwolfe","message":"when i `python tools/run-tests.py bot_default tests262` with a gn configuration v8_optimized_debug=false, then that test runs and fails.","date":"2017-03-15T22:16:03.644Z","type":"message"}
{"nick":"caitp","message":"you'd have to use a configuration that gets skipped","date":"2017-03-15T22:38:59.578Z","type":"message"}
{"nick":"bradleymeck","date":"2017-03-15T22:39:12.300Z","type":"join"}
{"nick":"caitp","message":"I don't believe there's a way to skip arbitrary tests other than the status files, but could be wrong","date":"2017-03-15T22:39:47.286Z","type":"message"}
{"nick":"caitp","message":"now, if the test wasn't too slow to pass before, and there's a good reason for it, you may want to add a status line","date":"2017-03-15T22:40:22.547Z","type":"message"}
{"nick":"RT|Chatzilla","date":"2017-03-15T22:51:41.178Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-03-15T22:52:20.090Z","type":"quit"}
{"nick":"jwolfe","message":"the dry run on my WIP CL passed even though i didn't do any `#ifdef V8_I18N_SUPPORT`. i assume this means none of the default bots test a no-i18n configuration. is there a CQ_INCLUDE_TRYBOTS= line i can add to the CL that will test some no-i18n configurations?","date":"2017-03-15T22:56:53.144Z","type":"message"}
{"nick":"jwolfe","message":"this is the CL for reference: https://codereview.chromium.org/2728763006/","date":"2017-03-15T22:56:59.448Z","type":"message"}
{"nick":"caitp","message":"not aware, you should ask jungshik I think","date":"2017-03-15T22:58:16.807Z","type":"message"}
{"nick":"caitp","message":"or dan may know","date":"2017-03-15T22:58:23.469Z","type":"message"}
{"nick":"aklein","message":"jwolfe: from a quick git grep, looks like CQ_INCLUDE_TRYBOTS=master.tryserver.v8:v8_linux_noi18n_rel_ng","date":"2017-03-15T23:09:51.933Z","type":"message"}
{"nick":"jwolfe","message":"aklein: thanks i'll try that.","date":"2017-03-15T23:11:59.062Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-03-15T23:12:48.198Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-03-15T23:21:30.351Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2017-03-15T23:24:33.831Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-03-15T23:25:41.596Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2017-03-15T23:25:46.043Z","type":"quit"}
{"nick":"unixpickle","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-03-15T23:29:28.181Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-03-15T23:48:57.861Z","type":"join"}
