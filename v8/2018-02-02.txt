{"nick":"xaxxon","date":"2018-02-02T00:05:42.516Z","type":"join"}
{"nick":"xaxxon","reason":"Quit: xaxxon","date":"2018-02-02T00:49:25.311Z","type":"quit"}
{"nick":"zv","reason":"Ping timeout: 248 seconds","date":"2018-02-02T02:37:51.947Z","type":"quit"}
{"nick":"oleavr","reason":"Quit: Connection closed for inactivity","date":"2018-02-02T03:05:53.679Z","type":"quit"}
{"nick":"plutoniix","date":"2018-02-02T03:18:14.317Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2018-02-02T03:19:23.294Z","type":"quit"}
{"nick":"plutoniix","date":"2018-02-02T03:19:49.301Z","type":"join"}
{"nick":"xaxxon","date":"2018-02-02T04:04:20.521Z","type":"join"}
{"nick":"Guest59","reason":"Quit: My Mac has gone to sleep. ZZZzzzâ€¦","date":"2018-02-02T04:14:24.303Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-02-02T04:31:30.137Z","type":"quit"}
{"nick":"xaxxon","reason":"Read error: Connection reset by peer","date":"2018-02-02T04:32:29.368Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-02-02T04:44:55.251Z","type":"join"}
{"nick":"zv","date":"2018-02-02T04:52:11.826Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-02-02T05:03:16.514Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-02-02T05:13:23.335Z","type":"join"}
{"nick":"zv","reason":"Ping timeout: 276 seconds","date":"2018-02-02T05:14:23.783Z","type":"quit"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2018-02-02T05:17:48.688Z","type":"quit"}
{"nick":"xaxxon","date":"2018-02-02T05:40:17.120Z","type":"join"}
{"nick":"zv","date":"2018-02-02T05:48:39.373Z","type":"join"}
{"nick":"xaxxon","reason":"Ping timeout: 256 seconds","date":"2018-02-02T06:20:58.236Z","type":"quit"}
{"nick":"xaxxon","date":"2018-02-02T07:04:34.900Z","type":"join"}
{"nick":"xaxxon","reason":"Quit: xaxxon","date":"2018-02-02T07:45:36.089Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2018-02-02T09:00:01.021Z","type":"quit"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2018-02-02T11:25:11.576Z","type":"quit"}
{"nick":"mylesborins","date":"2018-02-02T11:25:42.261Z","type":"join"}
{"nick":"AtumT","date":"2018-02-02T11:26:47.461Z","type":"join"}
{"nick":"bradleymeck","date":"2018-02-02T15:19:22.833Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-02-02T15:44:20.116Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-02-02T17:08:08.847Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2010030309]","date":"2018-02-02T17:08:40.906Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-02-02T17:14:35.388Z","type":"quit"}
{"nick":"seventh","date":"2018-02-02T17:18:04.173Z","type":"join"}
{"nick":"caitp","message":"aklein: I don't think I'm going to find a simpler fix for the bug you CC'd me on... the simplest things are going to be either the rewindable parser, or the \"get rid of PatternRewriter\" things. so, I'm looking at seeing if parts of it are fixable with just the Destructuring Assignment portion of that CL","date":"2018-02-02T17:30:34.822Z","type":"message"}
{"nick":"caitp","message":"but I don't think I am going to find a smaller/hackier fix for it","date":"2018-02-02T17:30:53.621Z","type":"message"}
{"nick":"bradleymeck","date":"2018-02-02T18:54:40.086Z","type":"join"}
{"nick":"bradleymeck","reason":"Ping timeout: 256 seconds","date":"2018-02-02T18:59:10.240Z","type":"quit"}
{"nick":"seventh","reason":"Remote host closed the connection","date":"2018-02-02T18:59:38.027Z","type":"quit"}
{"nick":"bradleymeck","date":"2018-02-02T19:00:11.276Z","type":"join"}
{"nick":"aklein","message":"caitp: thanks for the heads-up. I may spend a bit of time this afternoon looking for a hack to fix it. but I do think that changing how we do destructuring assignment would be a nice fix for it","date":"2018-02-02T21:24:00.059Z","type":"message"}
{"nick":"bradleymeck","message":"does HeapProfiler::FindObjectById return things that definitely should never actually hit userland code even though they pass local->IsObject() == true ?","date":"2018-02-02T21:33:52.461Z","type":"message"}
{"nick":"bradleymeck","message":"\"    2: formatPrimitive(aka formatPrimitive) [util.js:616] [bytecode=0x1cdbe036e261 offset=99](this=0x1cdbd4a822d1 <undefined>,fn=0x1cdb39383a41 <JSFunction stylizeNoColor (sfi = 0x1cdbe0343f79)>#1#,value=0x1cdbd4a82251 <Odd Oddball: uninitialized>)\"","date":"2018-02-02T21:36:57.170Z","type":"message"}
{"nick":"bradleymeck","message":"Odd Oddball: uninitialized seems very weird to me to get out of that API","date":"2018-02-02T21:37:12.857Z","type":"message"}
{"nick":"aklein","message":"bradleymeck: that's in the object graph of the object you searched for, though, not the object itself, from what I can tell","date":"2018-02-02T21:42:52.398Z","type":"message"}
{"nick":"aklein","message":"it's to be expected that some of the heap objects kept alive by a v8::Object might be internal things","date":"2018-02-02T21:43:10.012Z","type":"message"}
{"nick":"bradleymeck","message":"aklein: correct, i only found this once I started to print the object","date":"2018-02-02T21:43:15.904Z","type":"message"}
{"nick":"bradleymeck","message":"i'm unsure how to detect these oddballs that blow up if touched though","date":"2018-02-02T21:43:30.637Z","type":"message"}
{"nick":"bradleymeck","message":"i can use C++ but don't see any obvious API","date":"2018-02-02T21:43:41.060Z","type":"message"}
{"nick":"aklein","message":"how are you \"touching\" them?","date":"2018-02-02T21:43:53.724Z","type":"message"}
{"nick":"bradleymeck","message":"util.format in node... sec","date":"2018-02-02T21:44:08.932Z","type":"message"}
{"nick":"bradleymeck","message":"https://github.com/nodejs/node/blob/master/lib/util.js#L378 appears to be where it gets the angry thing , will gist a full trace","date":"2018-02-02T21:45:38.862Z","type":"message"}
{"nick":"bradleymeck","message":"https://gist.github.com/bmeck/f8090346c760665b4916d436e523c3d2","date":"2018-02-02T21:46:01.845Z","type":"message"}
{"nick":"bradleymeck","message":"no clue why that line is numbered that since it doesn't seem to match the fn call names ","date":"2018-02-02T21:47:30.428Z","type":"message"}
{"nick":"bradleymeck","message":"but... i'm pretty lost","date":"2018-02-02T21:47:37.653Z","type":"message"}
{"nick":"aklein","message":"bradleymeck: I'm pretty lost too, I don't understand how you're feeding objects into that code","date":"2018-02-02T21:49:32.049Z","type":"message"}
{"nick":"aklein","message":"I'm not very familiar with the heap profiler API","date":"2018-02-02T21:49:38.585Z","type":"message"}
{"nick":"bradleymeck","message":"i'll keep poking around","date":"2018-02-02T21:50:14.293Z","type":"message"}
{"nick":"bradleymeck","message":"i'm basically just having a huge loop of `1 ... 20_000` that I'm iterating on and trying to make sure my code doesn't blow up when the profiler doesn't have valid results for that API","date":"2018-02-02T21:51:17.039Z","type":"message"}
{"nick":"bradleymeck","message":"~= for (var i = 0; i < 20000; i++) console.log(profiler.getObjectBySnapshotId(i))","date":"2018-02-02T21:52:02.770Z","type":"message"}
{"nick":"bradleymeck","message":"aklein: yup, it got a hold of some Object with a JS property edge to a hidden `system / Oddball` node","date":"2018-02-02T22:33:35.789Z","type":"message"}
{"nick":"bradleymeck","message":"no real way to test this that I can tell from JS/C++, it just looks like Undefined","date":"2018-02-02T22:34:00.331Z","type":"message"}
{"nick":"aklein","message":"bradleymeck: I know of at least one place where we use a JSObject for an internal purpose","date":"2018-02-02T22:34:23.956Z","type":"message"}
{"nick":"aklein","message":"so it's not inconceivable","date":"2018-02-02T22:34:28.398Z","type":"message"}
{"nick":"bradleymeck","message":"aklein: it seems fine for now, they would have to just be guessing random Ids to get a hold of this","date":"2018-02-02T22:35:13.602Z","type":"message"}
{"nick":"bradleymeck","message":"and since they already are dumping snapshots for my use case :shrug:","date":"2018-02-02T22:35:30.883Z","type":"message"}
{"nick":"cloudshu","message":"is there a way to get prevent Chrome Infra Package Deployer from verifying certificates, or a way to pass it a cacert","date":"2018-02-02T22:55:00.288Z","type":"message"}
{"nick":"cloudshu","message":"getting depot_tools behind a corporate proxy is unending torment","date":"2018-02-02T22:55:16.717Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2018-02-02T23:14:39.317Z","type":"quit"}
{"nick":"aklein","message":"cloudshu: dunno. you might have luck asking on #chromium; dpranke is who I'd bug :)","date":"2018-02-02T23:26:20.964Z","type":"message"}
{"nick":"RT|Chatzilla","date":"2018-02-02T23:26:50.387Z","type":"join"}
{"nick":"cloudshu","message":"aklein: thanks","date":"2018-02-02T23:29:07.508Z","type":"message"}
{"nick":"AtumT","reason":"Remote host closed the connection","date":"2018-02-02T23:33:05.697Z","type":"quit"}
