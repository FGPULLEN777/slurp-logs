{"nick":"bradleymeck","date":"2017-01-06T00:00:53.566Z","type":"join"}
{"nick":"jwolfe","message":"i'm stepping through a CreateDynamicFunction call in v8, and it looks like Parser::DoParseProgram() determined that the ParsingModeScope was lazy, even though this is all being done by a real Parser, not a PreParser. I thought PreParser and lazy parser were synonymous. Can someone explain this to me?","date":"2017-01-06T00:04:56.944Z","type":"message"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2017-01-06T00:07:48.802Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-01-06T00:08:42.632Z","type":"quit"}
{"nick":"bradleymeck","date":"2017-01-06T00:14:50.546Z","type":"join"}
{"nick":"aklein","message":"jwolfe: I can explain at a high level","date":"2017-01-06T00:45:11.968Z","type":"message"}
{"nick":"aklein","message":"outside of tests, we never use the PreParser by itself","date":"2017-01-06T00:45:20.915Z","type":"message"}
{"nick":"aklein","message":"rather, when the Parser hits a function, it decides whether it's going to continue using itself to fully parse that function","date":"2017-01-06T00:45:50.667Z","type":"message"}
{"nick":"aklein","message":"or ask the PreParser to do so","date":"2017-01-06T00:46:01.600Z","type":"message"}
{"nick":"aklein","message":"for example, in the program \"print('x'); function f() { print('y') }\", the parser will parse the first print statement","date":"2017-01-06T00:46:41.500Z","type":"message"}
{"nick":"aklein","message":"then call into the PreParser to skip over the body of `f`","date":"2017-01-06T00:47:06.903Z","type":"message"}
{"nick":"aklein","message":"PARSE_LAZILY, for ParsingModeScope, means \"fire up the PreParser to skip the next function\"","date":"2017-01-06T00:47:30.333Z","type":"message"}
{"nick":"aklein","message":"whereas PARSE_EAGERLY means \"keep parsing eagerly\"","date":"2017-01-06T00:47:47.669Z","type":"message"}
{"nick":"aklein","message":"as for the fact that we set PARSE_LAZILY at the top of DoParseProgram","date":"2017-01-06T00:48:17.337Z","type":"message"}
{"nick":"aklein","message":"that's just so that later calls to parse_lazily() will be used","date":"2017-01-06T00:49:48.824Z","type":"message"}
{"nick":"aklein","message":"instead of asking for the allow_lazy_ bit (which is set only at the top level)","date":"2017-01-06T00:50:08.204Z","type":"message"}
{"nick":"aklein","message":"I believe this is required to support lazy parsing of inner function","date":"2017-01-06T00:50:24.286Z","type":"message"}
{"nick":"aklein","message":"+s","date":"2017-01-06T00:50:25.649Z","type":"message"}
{"nick":"aklein","message":"which is still experimental","date":"2017-01-06T00:50:30.087Z","type":"message"}
{"nick":"aklein","message":"currently only functions whose outer scope is the global scope are eligible for PreParsing","date":"2017-01-06T00:50:57.662Z","type":"message"}
{"nick":"aklein","message":"(marja is working on allowing inner functions to work)","date":"2017-01-06T00:51:15.548Z","type":"message"}
{"nick":"aklein","message":"jwolfe: so that's a nice wall of text :)","date":"2017-01-06T00:51:23.170Z","type":"message"}
{"nick":"jwolfe","message":"aklein, thanks! that answers my question.","date":"2017-01-06T00:53:25.473Z","type":"message"}
{"nick":"aklein","message":"actually I think I could have answered that more simply if I'd understood ParsingModeScope (which is pretty new) up front","date":"2017-01-06T00:56:07.966Z","type":"message"}
{"nick":"aklein","message":"glad to hear it","date":"2017-01-06T00:56:10.388Z","type":"message"}
{"nick":"aklein","message":"and happy new year","date":"2017-01-06T00:56:15.861Z","type":"message"}
{"nick":"aklein","message":"I had a question for you, actually: should we ship trailing commas?","date":"2017-01-06T00:56:27.439Z","type":"message"}
{"nick":"Guest59","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-01-06T01:05:27.127Z","type":"quit"}
{"nick":"JoWie","reason":"*.net *.split","date":"2017-01-06T01:13:52.802Z","type":"quit"}
{"nick":"scottmg","reason":"*.net *.split","date":"2017-01-06T01:13:52.802Z","type":"quit"}
{"nick":"mikolalysenko","reason":"*.net *.split","date":"2017-01-06T01:13:52.802Z","type":"quit"}
{"nick":"dagobert__","reason":"*.net *.split","date":"2017-01-06T01:13:52.955Z","type":"quit"}
{"nick":"luite_","reason":"*.net *.split","date":"2017-01-06T01:13:54.085Z","type":"quit"}
{"nick":"utkarsh","reason":"*.net *.split","date":"2017-01-06T01:13:54.247Z","type":"quit"}
{"nick":"sof","reason":"*.net *.split","date":"2017-01-06T01:14:01.587Z","type":"quit"}
{"nick":"Garbee","reason":"*.net *.split","date":"2017-01-06T01:14:01.588Z","type":"quit"}
{"nick":"Super-Human","reason":"*.net *.split","date":"2017-01-06T01:14:02.054Z","type":"quit"}
{"nick":"aklein","reason":"*.net *.split","date":"2017-01-06T01:14:02.373Z","type":"quit"}
{"nick":"Vbitz","reason":"*.net *.split","date":"2017-01-06T01:14:02.886Z","type":"quit"}
{"nick":"Guest10574","reason":"*.net *.split","date":"2017-01-06T01:14:03.105Z","type":"quit"}
{"nick":"Kronuz","reason":"*.net *.split","date":"2017-01-06T01:14:03.287Z","type":"quit"}
{"nick":"luite","date":"2017-01-06T01:14:03.597Z","type":"join"}
{"nick":"s1w","date":"2017-01-06T01:14:14.480Z","type":"join"}
{"nick":"Vbitz_","date":"2017-01-06T01:14:27.346Z","type":"join"}
{"nick":"utkarsh","date":"2017-01-06T01:14:59.502Z","type":"join"}
{"nick":"Kronuz","date":"2017-01-06T01:15:16.695Z","type":"join"}
{"nick":"Guest59","date":"2017-01-06T01:17:48.659Z","type":"join"}
{"nick":"dagobert__","date":"2017-01-06T01:20:01.245Z","type":"join"}
{"nick":"scottmg","date":"2017-01-06T01:23:46.024Z","type":"join"}
{"nick":"mikolalysenko","date":"2017-01-06T01:24:28.206Z","type":"join"}
{"nick":"JoWie","date":"2017-01-06T01:25:14.001Z","type":"join"}
{"nick":"Garbee","date":"2017-01-06T01:25:53.308Z","type":"join"}
{"nick":"sof","date":"2017-01-06T01:27:09.244Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-01-06T01:28:32.623Z","type":"quit"}
{"nick":"Guest59","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-01-06T01:28:40.728Z","type":"quit"}
{"nick":"Vbitz_","reason":"Quit: ZNC - http://znc.in","date":"2017-01-06T01:36:50.275Z","type":"quit"}
{"nick":"Vbitz","date":"2017-01-06T01:37:37.960Z","type":"join"}
{"nick":"aklein","date":"2017-01-06T01:37:40.186Z","type":"join"}
{"nick":"bradleymeck","date":"2017-01-06T01:40:53.815Z","type":"join"}
{"nick":"Super-Human","date":"2017-01-06T01:44:21.866Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-01-06T02:12:36.136Z","type":"quit"}
{"nick":"plutoniix","date":"2017-01-06T02:14:41.852Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2017-01-06T02:14:50.828Z","type":"quit"}
{"nick":"plutoniix","date":"2017-01-06T02:15:44.852Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 248 seconds","date":"2017-01-06T03:42:45.833Z","type":"quit"}
{"nick":"plutoniix","date":"2017-01-06T03:49:06.948Z","type":"join"}
{"nick":"AKPWD","reason":"Read error: Connection reset by peer","date":"2017-01-06T05:01:39.049Z","type":"quit"}
{"nick":"AKPWD","date":"2017-01-06T05:20:49.413Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 255 seconds","date":"2017-01-06T05:32:53.722Z","type":"quit"}
{"nick":"plutoniix","date":"2017-01-06T06:00:29.094Z","type":"join"}
