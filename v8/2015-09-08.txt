{"nick":"esas","reason":"Ping timeout: 265 seconds","date":"2015-09-08T00:36:35.611Z","type":"quit"}
{"nick":"plutoniix","date":"2015-09-08T01:19:40.587Z","type":"join"}
{"nick":"seventh","reason":"Ping timeout: 244 seconds","date":"2015-09-08T01:41:27.271Z","type":"quit"}
{"nick":"enaqx","date":"2015-09-08T01:52:12.649Z","type":"join"}
{"nick":"jgi","date":"2015-09-08T02:11:28.323Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2015-09-08T03:14:45.957Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-09-08T03:19:55.527Z","type":"quit"}
{"nick":"plutoniix","date":"2015-09-08T03:33:31.342Z","type":"join"}
{"nick":"katu","reason":"Ping timeout: 240 seconds","date":"2015-09-08T04:11:27.164Z","type":"quit"}
{"nick":"jgi","date":"2015-09-08T04:14:13.971Z","type":"join"}
{"nick":"enaqx","reason":"Remote host closed the connection","date":"2015-09-08T04:26:35.277Z","type":"quit"}
{"nick":"enaqx","date":"2015-09-08T04:49:21.949Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-09-08T05:19:13.031Z","type":"quit"}
{"nick":"jgi","date":"2015-09-08T05:28:16.556Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-09-08T05:33:23.130Z","type":"quit"}
{"nick":"deavid","reason":"Ping timeout: 250 seconds","date":"2015-09-08T05:39:24.379Z","type":"quit"}
{"nick":"deavid","date":"2015-09-08T05:51:58.764Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux%20-%20nosnap%20-%20debug%20-%201/builds/1843 \"V8 Linux - nosnap - debug - 1\" from ef268a83be4dead004047c25b702319ea4be7277: bmeurer@chromium.org)","date":"2015-09-08T06:04:22.362Z","type":"message"}
{"nick":"deavid","reason":"Ping timeout: 264 seconds","date":"2015-09-08T06:22:24.775Z","type":"quit"}
{"nick":"deavid","date":"2015-09-08T06:24:35.030Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: Tree is open","date":"2015-09-08T06:25:32.528Z","type":"message"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"bot_update\" on http://build.chromium.org/p/client.v8.fyi/builders/V8-Blink%20Win/builds/1539 \"V8-Blink Win\" from 298d4a6b7636f9c8aace971e8fe35500fbd40392: bmeurer@chromium.org)","date":"2015-09-08T06:39:37.767Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: Tree is open","date":"2015-09-08T06:41:38.365Z","type":"message"}
{"nick":"mostynb","date":"2015-09-08T06:54:45.064Z","type":"join"}
{"nick":"rendar","date":"2015-09-08T07:33:03.132Z","type":"join"}
{"nick":"JoWie","date":"2015-09-08T07:52:07.121Z","type":"join"}
{"nick":"enaqx","reason":"Remote host closed the connection","date":"2015-09-08T08:04:59.093Z","type":"quit"}
{"nick":"enaqx","date":"2015-09-08T08:06:54.954Z","type":"join"}
{"nick":"enaqx","reason":"Remote host closed the connection","date":"2015-09-08T08:13:59.380Z","type":"quit"}
{"nick":"enaqx","date":"2015-09-08T08:15:37.999Z","type":"join"}
{"nick":"kenansulayman","reason":"Ping timeout: 264 seconds","date":"2015-09-08T08:36:25.461Z","type":"quit"}
{"nick":"aperezdc","date":"2015-09-08T08:59:48.427Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2015-09-08T10:53:31.925Z","type":"quit"}
{"nick":"kenansulayman","date":"2015-09-08T11:38:35.630Z","type":"join"}
{"nick":"kenansulayman","new_nick":"Guest50310","date":"2015-09-08T11:38:59.942Z","type":"nick"}
{"nick":"dobson","reason":"Ping timeout: 240 seconds","date":"2015-09-08T11:39:26.308Z","type":"quit"}
{"nick":"dobson","date":"2015-09-08T11:45:43.459Z","type":"join"}
{"nick":"Guest50310","reason":"Changing host","date":"2015-09-08T12:04:09.206Z","type":"quit"}
{"nick":"Guest50310","date":"2015-09-08T12:04:09.457Z","type":"join"}
{"nick":"Guest50310","new_nick":"kenansulayman","date":"2015-09-08T12:05:51.203Z","type":"nick"}
{"nick":"enaqx","reason":"Ping timeout: 260 seconds","date":"2015-09-08T12:23:59.998Z","type":"quit"}
{"nick":"enaqx","date":"2015-09-08T12:24:42.960Z","type":"join"}
{"nick":"aperezdc","reason":"Quit: aperezdc","date":"2015-09-08T12:37:06.036Z","type":"quit"}
{"nick":"rmichnik","date":"2015-09-08T13:08:06.461Z","type":"join"}
{"nick":"bobmcw","date":"2015-09-08T13:09:59.805Z","type":"join"}
{"nick":"thefourtheye","reason":"Quit: Connection closed for inactivity","date":"2015-09-08T13:24:28.571Z","type":"quit"}
{"nick":"plutoniix","date":"2015-09-08T13:44:29.160Z","type":"join"}
{"nick":"dcherman","date":"2015-09-08T14:02:32.621Z","type":"join"}
{"nick":"aperezdc","date":"2015-09-08T14:04:35.468Z","type":"join"}
{"nick":"enaqx","reason":"Ping timeout: 246 seconds","date":"2015-09-08T14:24:04.939Z","type":"quit"}
{"nick":"esas","date":"2015-09-08T14:26:22.585Z","type":"join"}
{"nick":"davi_","date":"2015-09-08T14:28:21.173Z","type":"join"}
{"nick":"davi_","new_nick":"Guest64984","date":"2015-09-08T14:28:44.550Z","type":"nick"}
{"nick":"jgi","date":"2015-09-08T14:39:10.340Z","type":"join"}
{"nick":"ofrobots","date":"2015-09-08T14:45:14.001Z","type":"join"}
{"nick":"C-Man","date":"2015-09-08T15:00:49.594Z","type":"join"}
{"nick":"dcherman2","date":"2015-09-08T15:03:04.893Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-09-08T15:03:05.145Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2015-09-08T15:03:35.924Z","type":"quit"}
{"nick":"dcherman","reason":"Ping timeout: 265 seconds","date":"2015-09-08T15:06:35.588Z","type":"quit"}
{"nick":"dobson","reason":"Ping timeout: 240 seconds","date":"2015-09-08T15:36:14.848Z","type":"quit"}
{"nick":"mostynb","reason":"Quit: Leaving","date":"2015-09-08T15:36:24.114Z","type":"quit"}
{"nick":"dobson","date":"2015-09-08T15:39:42.578Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2009081014]","date":"2015-09-08T15:44:57.304Z","type":"quit"}
{"nick":"jgi","date":"2015-09-08T16:01:46.959Z","type":"join"}
{"nick":"scottmg","date":"2015-09-08T16:02:54.233Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"bot_update\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux64%20-%20debug/builds/4902 \"V8 Linux64 - debug\" from 057514d3fa79af4732e136f5daad4b805a65e569: ulan@chromium.org,vogelheim@chromium.org)","date":"2015-09-08T16:30:41.219Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by vogelheim@chromium.org: Tree is open (\"bot_update\" fail on \"V8 Linux64 - debug\" doesn't look like it's related to the changes)","date":"2015-09-08T16:46:49.289Z","type":"message"}
{"nick":"esas","reason":"Read error: Connection reset by peer","date":"2015-09-08T17:42:07.773Z","type":"quit"}
{"nick":"esas","date":"2015-09-08T17:57:40.555Z","type":"join"}
{"nick":"Guest64984","reason":"Ping timeout: 246 seconds","date":"2015-09-08T18:16:49.883Z","type":"quit"}
{"nick":"davi__","date":"2015-09-08T18:57:09.157Z","type":"join"}
{"nick":"bnoordhuis","date":"2015-09-08T18:59:10.364Z","type":"join"}
{"nick":"dcherman","date":"2015-09-08T19:04:32.534Z","type":"join"}
{"nick":"dcherman2","reason":"Ping timeout: 244 seconds","date":"2015-09-08T19:07:12.972Z","type":"quit"}
{"nick":"enaqx","date":"2015-09-08T19:13:19.526Z","type":"join"}
{"nick":"enaqx","reason":"Ping timeout: 250 seconds","date":"2015-09-08T19:21:26.326Z","type":"quit"}
{"nick":"enaqx","date":"2015-09-08T19:25:50.533Z","type":"join"}
{"nick":"dcherman2","date":"2015-09-08T19:34:40.887Z","type":"join"}
{"nick":"rendar","reason":"Ping timeout: 265 seconds","date":"2015-09-08T19:36:17.602Z","type":"quit"}
{"nick":"caitp","message":"how hard would it be to create an inline version of CreateDataProperty()?","date":"2015-09-08T19:37:32.769Z","type":"message"}
{"nick":"dcherman","reason":"Ping timeout: 255 seconds","date":"2015-09-08T19:37:46.616Z","type":"quit"}
{"nick":"caitp","message":"I think the IC infrastructure still needs to be used to find the slot within the object which gets stored, but not totally sure","date":"2015-09-08T19:39:02.471Z","type":"message"}
{"nick":"rendar","date":"2015-09-08T19:42:03.793Z","type":"join"}
{"nick":"JoWie","reason":"Quit: Connection closed for inactivity","date":"2015-09-08T19:42:16.882Z","type":"quit"}
{"nick":"enaqx","reason":"Ping timeout: 250 seconds","date":"2015-09-08T19:50:54.339Z","type":"quit"}
{"nick":"esas","reason":"Read error: Connection reset by peer","date":"2015-09-08T20:00:19.947Z","type":"quit"}
{"nick":"enaqx","date":"2015-09-08T20:00:27.232Z","type":"join"}
{"nick":"enaqx","reason":"Ping timeout: 244 seconds","date":"2015-09-08T20:11:47.910Z","type":"quit"}
{"nick":"enaqx","date":"2015-09-08T20:18:05.032Z","type":"join"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2015-09-08T20:23:27.455Z","type":"quit"}
{"nick":"davi__","reason":"Ping timeout: 246 seconds","date":"2015-09-08T20:23:52.890Z","type":"quit"}
{"nick":"scottmg","reason":"Ping timeout: 244 seconds","date":"2015-09-08T20:25:44.377Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-09-08T20:28:45.183Z","type":"quit"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2015-09-08T20:43:58.597Z","type":"quit"}
{"nick":"aklein","message":"caitp: good afternoon, finally back from vacation and finishing wading through email","date":"2015-09-08T21:01:25.473Z","type":"message"}
{"nick":"caitp","message":"I was just about to reply. It seems to be a problem with Chrome's console.log, which outputs `[1]` for the 2-argument case, despite the length being set correctly and having its own data property","date":"2015-09-08T21:02:47.804Z","type":"message"}
{"nick":"caitp","message":"so, that was misleading","date":"2015-09-08T21:02:57.817Z","type":"message"}
{"nick":"caitp","message":"it's also doing some other weird things, like throwing the setter error whenever the array is inspected, which is weird","date":"2015-09-08T21:03:11.949Z","type":"message"}
{"nick":"caitp","message":"but anyways, I'm happy to leave it unmerged until we can do it in a spec-correct way with %_CreateDataProperty().","date":"2015-09-08T21:03:42.026Z","type":"message"}
{"nick":"caitp","message":"but, the argument for not leaving it unmerged is, you get a 2-3x performance boost, which for any legitimate application is not observably incorrect","date":"2015-09-08T21:07:06.005Z","type":"message"}
{"nick":"enaqx","reason":"Ping timeout: 246 seconds","date":"2015-09-08T21:08:19.872Z","type":"quit"}
{"nick":"enaqx","date":"2015-09-08T21:10:47.536Z","type":"join"}
{"nick":"caitp","message":"anyways, hope the vacation was a good one, let me know what you think of those","date":"2015-09-08T21:11:42.178Z","type":"message"}
{"nick":"aklein","message":"caitp: I understand the concern, but the right way to address that is to figure out how to do the spec-compliant thing in a fast way. we really try to avoid purposeful spec non-compliance","date":"2015-09-08T21:13:06.712Z","type":"message"}
{"nick":"aklein","message":"caitp: I'm also hesitant to poke the desugaring much more without getting more feedback from bmeurer","date":"2015-09-08T21:13:42.603Z","type":"message"}
{"nick":"caitp","message":"that's fine","date":"2015-09-08T21:15:40.282Z","type":"message"}
{"nick":"jgi","date":"2015-09-08T21:15:57.887Z","type":"join"}
{"nick":"scottmg","date":"2015-09-08T21:16:19.256Z","type":"join"}
{"nick":"caitp","message":"this should be easily converted to spec-correct with an inline-able CreateDataProperty","date":"2015-09-08T21:16:34.746Z","type":"message"}
{"nick":"aklein","message":"it's definitely unclear to me how doable that is; bmeurer is _also_ worried about adding more %_ intrinsics (at a high level, there's some discussion to be had between the language team and the runtime/compiler folks; we","date":"2015-09-08T21:18:16.822Z","type":"message"}
{"nick":"aklein","message":"'re hoping to set up a broader public list for such discussions)","date":"2015-09-08T21:18:30.994Z","type":"message"}
{"nick":"caitp","message":"mm","date":"2015-09-08T21:18:52.570Z","type":"message"}
{"nick":"bobmcw","date":"2015-09-08T21:44:24.555Z","type":"join"}
{"nick":"bobmcw","reason":"Ping timeout: 264 seconds","date":"2015-09-08T21:49:24.737Z","type":"quit"}
{"nick":"aperezdc","reason":"Quit: aperezdc","date":"2015-09-08T21:56:10.579Z","type":"quit"}
{"nick":"dcherman2","reason":"Ping timeout: 246 seconds","date":"2015-09-08T22:04:19.868Z","type":"quit"}
{"nick":"caitp","message":"Well, for what it's worth, based on performance and correctness, Mozilla's implementation seems to be using an inlined CreateDataProperty, although I'd have to take a closer look to be sure","date":"2015-09-08T22:04:48.427Z","type":"message"}
{"nick":"aklein","message":"caitp: I believe that an inlined CreateDataProperty and this desugaring is one way to do it, but given that bmeurer's worried about the use of %_ArgumentsLength(i), some higher-level rethinking might be the way to improve performance here","date":"2015-09-08T22:12:17.817Z","type":"message"}
{"nick":"aklein","message":"are, %_Arguments(i) that is","date":"2015-09-08T22:12:30.809Z","type":"message"}
{"nick":"caitp","message":"arguments access doesn't seem to be the major hotspot, and the approach he suggested wrt loop unrolling seemed like it could create a code size explosion","date":"2015-09-08T22:13:54.189Z","type":"message"}
{"nick":"caitp","message":"i dunno","date":"2015-09-08T22:14:04.284Z","type":"message"}
{"nick":"caitp","message":"maybe I misunderstood what he meant, but the switch statement thing seemed potentially bad without a lot of static info","date":"2015-09-08T22:15:18.159Z","type":"message"}
{"nick":"dcherman","date":"2015-09-08T22:16:11.401Z","type":"join"}
{"nick":"aklein","message":"let me go read his original message on that review; the main thing he mentioned to me in conversation was that %_Arguments(i) defeats inlining","date":"2015-09-08T22:16:21.491Z","type":"message"}
{"nick":"scottmg","reason":"Ping timeout: 244 seconds","date":"2015-09-08T22:18:21.377Z","type":"quit"}
{"nick":"aklein","message":"so he's focused here on a particular case: inlining a call to a function that uses rest params (where the call doesn't use apply() or spread)","date":"2015-09-08T22:20:41.857Z","type":"message"}
{"nick":"aklein","message":"I agree it's not obvious that inlining such calls is the biggest win, compared to other overhead","date":"2015-09-08T22:21:01.274Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2015-09-08T22:23:00.982Z","type":"quit"}
{"nick":"caitp","message":"anyway, I have some other CLs that are a lot less  scary, the perf test for rest parameters, and a bugfix for shorthand properties / binding patterns","date":"2015-09-08T22:24:45.215Z","type":"message"}
{"nick":"caitp","message":"if you have some time today it would be great if you could take a look","date":"2015-09-08T22:24:55.196Z","type":"message"}
{"nick":"aklein","message":"caitp: yeah I'm working through your bugfix right now; would you mind landing a fix separately from the refactor?","date":"2015-09-08T22:25:45.878Z","type":"message"}
{"nick":"caitp","message":"the 3 patchsets are just different solutions for it, the third one includes a refactor and avoids the \"hack\"","date":"2015-09-08T22:26:52.039Z","type":"message"}
{"nick":"caitp","message":"so if you just look at the other 2, they're hackier solutions that still fix it","date":"2015-09-08T22:27:10.210Z","type":"message"}
{"nick":"caitp","message":"the 3 patch sets that aren't \"add more tests\" or whatever","date":"2015-09-08T22:27:28.267Z","type":"message"}
{"nick":"aklein","message":"caitp: so I should choose the one I like and lgtm that one? :)","date":"2015-09-08T22:28:27.684Z","type":"message"}
{"nick":"caitp","message":"yeah, pretty much","date":"2015-09-08T22:29:03.095Z","type":"message"}
{"nick":"caitp","message":"or if you think the hacks could be a bit better, I can fix those up first","date":"2015-09-08T22:29:29.411Z","type":"message"}
{"nick":"RT|Chatzilla","date":"2015-09-08T22:30:24.848Z","type":"join"}
{"nick":"aklein","message":"caitp: the hacks look all right at first but I agree that it's really hard to reason about them, working through the refactored version now.","date":"2015-09-08T22:33:35.295Z","type":"message"}
{"nick":"scottmg","date":"2015-09-08T22:43:18.271Z","type":"join"}
{"nick":"dcherman","reason":"Ping timeout: 264 seconds","date":"2015-09-08T23:03:25.418Z","type":"quit"}
{"nick":"enaqx","reason":"Remote host closed the connection","date":"2015-09-08T23:06:28.190Z","type":"quit"}
{"nick":"rendar","date":"2015-09-08T23:08:52.113Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2015-09-08T23:11:43.949Z","type":"quit"}
{"nick":"jgi","date":"2015-09-08T23:13:57.897Z","type":"join"}
{"nick":"aklein","message":"caitp: ok, digging into the param scoping patch now","date":"2015-09-08T23:18:37.989Z","type":"message"}
{"nick":"enaqx","date":"2015-09-08T23:18:40.971Z","type":"join"}
{"nick":"saapas","reason":"Ping timeout: 264 seconds","date":"2015-09-08T23:22:01.443Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 244 seconds","date":"2015-09-08T23:28:06.293Z","type":"quit"}
{"nick":"saapas","date":"2015-09-08T23:33:47.526Z","type":"join"}
{"nick":"caitp","message":"i think i mentioned it on the patch, but something which could probably get similar perf gains is doing a better job of eliminating unnecessary hole-checks","date":"2015-09-08T23:43:22.928Z","type":"message"}
{"nick":"caitp","message":"which I'm sure we want to do anyways","date":"2015-09-08T23:45:47.194Z","type":"message"}
