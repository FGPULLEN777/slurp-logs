{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2015-02-12T00:39:52.673Z","type":"quit"}
{"nick":"plutoniix","reason":"Ping timeout: 245 seconds","date":"2015-02-12T01:19:27.668Z","type":"quit"}
{"nick":"jmar777","date":"2015-02-12T01:38:14.782Z","type":"join"}
{"nick":"plutoniix","date":"2015-02-12T01:45:51.560Z","type":"join"}
{"nick":"bnoordhuis","date":"2015-02-12T01:46:17.559Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 255 seconds","date":"2015-02-12T01:50:49.568Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2015-02-12T02:10:13.571Z","type":"quit"}
{"nick":"petka__","reason":"Quit: Connection closed for inactivity","date":"2015-02-12T02:16:43.885Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"compile\" on http://build.chromium.org/p/client.v8/builders/V8-Blink%20Mac/builds/2076 \"V8-Blink Mac\" from fb55eae323e69e6382efb7afda3301776a4206fd: chunyang.dai@intel.com)","date":"2015-02-12T04:06:37.419Z","type":"message"}
{"nick":"caitp-","date":"2015-02-12T04:10:31.224Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by bmeurer@google.com: Tree is open (someone with debug fuu should fix the ProcessDebugMessages flakiness)","date":"2015-02-12T04:43:08.396Z","type":"message"}
{"nick":"caitp-","reason":"Ping timeout: 256 seconds","date":"2015-02-12T05:47:51.331Z","type":"quit"}
{"nick":"mathiasbynens","message":"getting this on OS X – any ideas?","date":"2015-02-12T06:01:29.094Z","type":"message"}
{"nick":"mathiasbynens","message":"$ make native","date":"2015-02-12T06:01:32.404Z","type":"message"}
{"nick":"mathiasbynens","message":"make: *** No rule to make target `buildtools/third_party/libc++abi/libc++abi.gyp', needed by `out/Makefile.native'.  Stop.","date":"2015-02-12T06:01:32.587Z","type":"message"}
{"nick":"mathiasbynens","action":"runs `gclient sync`","date":"2015-02-12T06:02:43.077Z","type":"action"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2015-02-12T06:45:50.218Z","type":"quit"}
{"nick":"mostynb","date":"2015-02-12T07:14:06.345Z","type":"join"}
{"nick":"enaqx","reason":"Ping timeout: 245 seconds","date":"2015-02-12T07:18:09.637Z","type":"quit"}
{"nick":"juanjosanchez","reason":"Ping timeout: 256 seconds","date":"2015-02-12T07:22:29.354Z","type":"quit"}
{"nick":"muelli","date":"2015-02-12T07:23:56.562Z","type":"join"}
{"nick":"mostynb","reason":"Remote host closed the connection","date":"2015-02-12T07:31:29.847Z","type":"quit"}
{"nick":"mostynb","date":"2015-02-12T07:32:24.666Z","type":"join"}
{"nick":"Lethalman","date":"2015-02-12T09:05:50.645Z","type":"join"}
{"nick":"juanjosanchez","date":"2015-02-12T09:56:37.686Z","type":"join"}
{"nick":"juanjosanchez_","date":"2015-02-12T10:04:29.848Z","type":"join"}
{"nick":"juanjosanchez","reason":"Ping timeout: 245 seconds","date":"2015-02-12T10:06:57.661Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"compile\" on http://build.chromium.org/p/client.v8/builders/V8%20Arm%20-%20builder/builds/2632 \"V8 Arm - builder\" from bd61a85fafd6461a40dc1e20252fd843f148e837: hpayer@chromium.org)","date":"2015-02-12T10:11:00.437Z","type":"message"}
{"nick":"juanjosanchez_","reason":"Remote host closed the connection","date":"2015-02-12T10:11:59.778Z","type":"quit"}
{"nick":"ashnur","reason":"Remote host closed the connection","date":"2015-02-12T10:15:22.689Z","type":"quit"}
{"nick":"ashnur","date":"2015-02-12T10:17:42.261Z","type":"join"}
{"nick":"juanjosanchez_","date":"2015-02-12T10:28:00.153Z","type":"join"}
{"nick":"juanjosanchez_","reason":"Quit: Ex-Chat","date":"2015-02-12T10:34:16.891Z","type":"quit"}
{"nick":"petka__","date":"2015-02-12T10:34:42.070Z","type":"join"}
{"nick":"bnoordhuis","date":"2015-02-12T10:36:11.043Z","type":"join"}
{"nick":"juanjosanchez","date":"2015-02-12T10:36:42.301Z","type":"join"}
{"nick":"muelli","reason":"Ping timeout: 255 seconds","date":"2015-02-12T10:47:40.533Z","type":"quit"}
{"nick":"juanjosanchez_","date":"2015-02-12T10:52:43.088Z","type":"join"}
{"nick":"juanjosanchez","reason":"Ping timeout: 256 seconds","date":"2015-02-12T10:55:33.395Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by hpayer@google.com: Tree is closed (fixing...)","date":"2015-02-12T11:26:08.876Z","type":"message"}
{"nick":"dobson","reason":"Read error: Connection reset by peer","date":"2015-02-12T11:27:25.115Z","type":"quit"}
{"nick":"dobson","date":"2015-02-12T11:34:31.403Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by hpayer@google.com: Tree is closed (potential fix in flight)","date":"2015-02-12T11:37:20.639Z","type":"message"}
{"nick":"juanjosanchez_","reason":"Read error: No route to host","date":"2015-02-12T11:47:29.563Z","type":"quit"}
{"nick":"juanjosanchez_","date":"2015-02-12T11:47:50.561Z","type":"join"}
{"nick":"juanjosanchez_","reason":"Read error: Connection reset by peer","date":"2015-02-12T11:54:18.936Z","type":"quit"}
{"nick":"juanjosanchez_","date":"2015-02-12T11:54:34.350Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by hpayer@google.com: Tree is open (potential fix in flight)","date":"2015-02-12T11:55:38.633Z","type":"message"}
{"nick":"juanjosanchez_","reason":"Ping timeout: 245 seconds","date":"2015-02-12T12:03:12.682Z","type":"quit"}
{"nick":"plutoniix","date":"2015-02-12T12:16:46.243Z","type":"join"}
{"nick":"KillerJim","date":"2015-02-12T12:24:44.470Z","type":"join"}
{"nick":"caitp-","date":"2015-02-12T13:46:19.032Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux%20-%20arm64%20-%20sim%20-%20debug/builds/1754 \"V8 Linux - arm64 - sim - debug\" from 9159c419e8773d939c899989af3851edd33312a3: bmeurer@chromium.org,marja@chromium.org,mstarzinger@chromium.org,svenpanne@chromium.org)","date":"2015-02-12T13:48:22.030Z","type":"message"}
{"nick":"enaqx","date":"2015-02-12T14:00:42.018Z","type":"join"}
{"nick":"caitp-","reason":"Ping timeout: 246 seconds","date":"2015-02-12T14:28:53.974Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by verwaest@google.com: Tree is open","date":"2015-02-12T14:39:08.824Z","type":"message"}
{"nick":"caitp-","date":"2015-02-12T14:42:25.329Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux%20-%20isolates/builds/2234 \"V8 Linux - isolates\" from cb6ea146dc8813f7dc8fa7445d6d0f542509f317: loislo@chromium.org)","date":"2015-02-12T14:43:11.771Z","type":"message"}
{"nick":"caitp","reason":"Ping timeout: 244 seconds","date":"2015-02-12T14:44:05.251Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by loislo@chromium.org: Tree is open (it was a revert, so the test looks flaky)","date":"2015-02-12T14:48:17.600Z","type":"message"}
{"nick":"juanjosanchez_","date":"2015-02-12T14:59:33.796Z","type":"join"}
{"nick":"juanjosanchez_","reason":"Ping timeout: 265 seconds","date":"2015-02-12T15:04:22.232Z","type":"quit"}
{"nick":"jmar777","date":"2015-02-12T15:06:44.947Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux64%20TSAN/builds/2523 \"V8 Linux64 TSAN\" from 30c71859edceae15d299534c0aecfb0362b94434: marja@chromium.org,rossberg@chromium.org)","date":"2015-02-12T15:26:56.165Z","type":"message"}
{"nick":"caitp__","date":"2015-02-12T15:30:03.894Z","type":"join"}
{"nick":"bnoordhuis","message":"out of curiosity, what's the plan / goal for 'use strong'?","date":"2015-02-12T15:33:31.038Z","type":"message"}
{"nick":"caitp__","message":"my understanding is, opportunities to eliminate some things that are hard to optimize","date":"2015-02-12T15:34:32.915Z","type":"message"}
{"nick":"caitp__","message":"and that's basically it","date":"2015-02-12T15:34:39.985Z","type":"message"}
{"nick":"bnoordhuis","message":"is it something that came out of tc39 or is it a v8 special?","date":"2015-02-12T15:35:52.891Z","type":"message"}
{"nick":"KillerJim","reason":"Quit: Leaving","date":"2015-02-12T15:36:43.274Z","type":"quit"}
{"nick":"caitp__","message":"it's all v8, although spidermonkey has done some similar things","date":"2015-02-12T15:37:14.380Z","type":"message"}
{"nick":"caitp__","message":"like disallowing arguments when rest parameters are used","date":"2015-02-12T15:37:19.909Z","type":"message"}
{"nick":"caitp__","message":"wonder if that's fixed yet","date":"2015-02-12T15:38:09.765Z","type":"message"}
{"nick":"bnoordhuis","message":"that reminds me, have you seen this? https://github.com/erights/quasiParserGenerator","date":"2015-02-12T15:39:11.973Z","type":"message"}
{"nick":"juanjosanchez","date":"2015-02-12T15:39:31.987Z","type":"join"}
{"nick":"caitp__","message":"I saw the es-discuss message about it saying \"please deprecate this code\", haven't really looked at it","date":"2015-02-12T15:39:58.788Z","type":"message"}
{"nick":"caitp__","message":"interesting, but i would predict that performance would be really bad","date":"2015-02-12T15:41:16.532Z","type":"message"}
{"nick":"bnoordhuis","message":"yes? how so?","date":"2015-02-12T15:41:35.085Z","type":"message"}
{"nick":"caitp__","message":"tagged templates themselves are rather expensive in v8, although probably a lot faster in SM","date":"2015-02-12T15:41:57.703Z","type":"message"}
{"nick":"caitp__","message":"that could change in the future, but the caching mechanism is really non-ideal right now","date":"2015-02-12T15:42:20.273Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, implementation-wise you mean. that just requires the SMOP","date":"2015-02-12T15:42:37.436Z","type":"message"}
{"nick":"caitp__","message":"right now, the parser builds an array literal featuring the strings, another array featuring the raw strings, and adds each evaluated expression value as an argument --- then it does a lookup for the callsite based on a hash key and comparison of raw string literals with the cached literals","date":"2015-02-12T15:44:37.333Z","type":"message"}
{"nick":"caitp__","message":"so if you had a lot of different cached template callsites, it would get nasty","date":"2015-02-12T15:44:57.526Z","type":"message"}
{"nick":"caitp__","message":"and it's pretty bad even without","date":"2015-02-12T15:45:02.904Z","type":"message"}
{"nick":"bnoordhuis","message":"right. i remember that discussion from one of your CLs","date":"2015-02-12T15:46:33.985Z","type":"message"}
{"nick":"mostynb","reason":"Quit: Leaving","date":"2015-02-12T15:47:01.710Z","type":"quit"}
{"nick":"caitp__","message":"i'd like to see how fast FF's tagged templates are, it's probably a lot quicker and it would take some work to be that fast","date":"2015-02-12T15:47:38.930Z","type":"message"}
{"nick":"bnoordhuis","message":"what's the most expensive part? evaluating the expressions or doing the lookup?","date":"2015-02-12T15:47:54.516Z","type":"message"}
{"nick":"bnoordhuis","message":"OSE-less expressions could be evaluated as needed. perhaps easier said than done :)","date":"2015-02-12T15:48:29.423Z","type":"message"}
{"nick":"caitp__","message":"building the arrays, calculating the hash, Map lookup, iterating over collided hashes to find an exact match even if there is only one cached entry with the hash","date":"2015-02-12T15:48:59.105Z","type":"message"}
{"nick":"caitp__","message":"and then, if cache lookup fails, adding a new entry","date":"2015-02-12T15:49:23.336Z","type":"message"}
{"nick":"caitp__","message":"not as simple as you'd like it to be","date":"2015-02-12T15:49:34.309Z","type":"message"}
{"nick":"bnoordhuis","message":"there was a reason for not embedding it in the code, wasn't there? gc?","date":"2015-02-12T15:49:59.082Z","type":"message"}
{"nick":"caitp__","message":"the complicated thing is that, templates with the same set of identical raw strings have to use the same callsite object","date":"2015-02-12T15:50:31.848Z","type":"message"}
{"nick":"caitp__","message":"if you could just build a new one every time it would be easier to optimize","date":"2015-02-12T15:50:43.976Z","type":"message"}
{"nick":"caitp__","message":"and likely better on the gc, since they wouldn't be tenured","date":"2015-02-12T15:51:05.356Z","type":"message"}
{"nick":"bnoordhuis","message":"right, that sounds familiar. that's from the spec, isn't it?","date":"2015-02-12T15:51:14.280Z","type":"message"}
{"nick":"caitp__","message":"yeah","date":"2015-02-12T15:51:18.875Z","type":"message"}
{"nick":"bnoordhuis","message":"do you know what the rationale for that was?","date":"2015-02-12T15:51:32.740Z","type":"message"}
{"nick":"caitp__","message":"I haven't read the notes on that particular decision","date":"2015-02-12T15:51:58.143Z","type":"message"}
{"nick":"bnoordhuis","message":"you just implemented it :)","date":"2015-02-12T15:52:16.582Z","type":"message"}
{"nick":"caitp__","message":"https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-11/nov-18.md#48-template-literal-call-site-object-caching covered here","date":"2015-02-12T15:52:34.521Z","type":"message"}
{"nick":"caitp__","message":"yeah, I think arv wanted to get it clarified because the spec was sort of vague","date":"2015-02-12T15:52:47.418Z","type":"message"}
{"nick":"caitp__","message":"and it wound up being \"cache per-realm, per-raw strings\"","date":"2015-02-12T15:53:00.907Z","type":"message"}
{"nick":"bnoordhuis","message":"hrm, i don't think i understand the performance arguments that are being made in those notes. why are 5 call sites worse than 1?","date":"2015-02-12T15:55:07.961Z","type":"message"}
{"nick":"caitp__","message":"I think it depends on a lot of things --- if you end up with tenured callsites, that contributes to the \"big, expensive GC\" that hurts performance","date":"2015-02-12T15:56:52.354Z","type":"message"}
{"nick":"caitp__","message":"so 5 tenured callsites is worse than 1 tenured callsite","date":"2015-02-12T15:57:00.837Z","type":"message"}
{"nick":"caitp__","message":"but if you're careful with them and they aren't tenured, you do a lot better","date":"2015-02-12T15:57:11.048Z","type":"message"}
{"nick":"caitp__","message":"but I guess it also enables people to like, special case specific callsites","date":"2015-02-12T15:57:48.137Z","type":"message"}
{"nick":"caitp__","message":"or similar","date":"2015-02-12T15:57:50.892Z","type":"message"}
{"nick":"caitp__","message":"i'm not personally convinced by the whole caching thing, it's likely a lot cheaper without","date":"2015-02-12T15:58:54.694Z","type":"message"}
{"nick":"bnoordhuis","message":"right, i see the gc argument. but why does tc39 mandate that when it can be left to implementors to decide whether they want to do sharing or not?","date":"2015-02-12T15:59:03.240Z","type":"message"}
{"nick":"bnoordhuis","message":"intuitively, it feels like an implementation detail, not a spec requirement","date":"2015-02-12T15:59:16.468Z","type":"message"}
{"nick":"caitp__","message":"it's observable in some ways, so","date":"2015-02-12T15:59:19.000Z","type":"message"}
{"nick":"caitp__","message":"ideally, it wouldn't be observable","date":"2015-02-12T15:59:31.648Z","type":"message"}
