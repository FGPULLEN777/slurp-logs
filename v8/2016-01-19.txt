{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2016-01-19T00:22:37.257Z","type":"quit"}
{"nick":"bnoordhuis","date":"2016-01-19T00:28:45.420Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2016-01-19T00:33:06.327Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-01-19T00:39:09.203Z","type":"quit"}
{"nick":"plutoniix","date":"2016-01-19T00:52:20.956Z","type":"join"}
{"nick":"watilde","date":"2016-01-19T01:06:15.300Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 240 seconds","date":"2016-01-19T01:10:55.808Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-01-19T01:17:46.965Z","type":"quit"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2016-01-19T01:22:21.424Z","type":"quit"}
{"nick":"JoWie","reason":"Quit: Connection closed for inactivity","date":"2016-01-19T01:39:43.493Z","type":"quit"}
{"nick":"watilde","date":"2016-01-19T02:07:14.323Z","type":"join"}
{"nick":"ncthom91","date":"2016-01-19T02:07:54.953Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 240 seconds","date":"2016-01-19T02:11:26.321Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-01-19T02:31:21.244Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-01-19T03:08:29.286Z","type":"quit"}
{"nick":"ncthom91","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2016-01-19T03:11:06.187Z","type":"quit"}
{"nick":"ncthom91","date":"2016-01-19T03:12:20.952Z","type":"join"}
{"nick":"s1w","reason":"Ping timeout: 265 seconds","date":"2016-01-19T03:23:40.809Z","type":"quit"}
{"nick":"s1w","date":"2016-01-19T03:26:14.850Z","type":"join"}
{"nick":"s1w","new_nick":"Guest50070","date":"2016-01-19T03:26:38.355Z","type":"nick"}
{"nick":"ncthom91","reason":"Quit: My MacBook has gone to sleep. ZZZzzz…","date":"2016-01-19T03:33:59.321Z","type":"quit"}
{"nick":"ncthom91","date":"2016-01-19T03:58:45.978Z","type":"join"}
{"nick":"ncthom91","reason":"Ping timeout: 240 seconds","date":"2016-01-19T04:02:55.806Z","type":"quit"}
{"nick":"watilde","date":"2016-01-19T04:08:36.361Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 255 seconds","date":"2016-01-19T04:13:30.061Z","type":"quit"}
{"nick":"jgi","date":"2016-01-19T05:31:04.829Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-01-19T05:52:59.553Z","type":"quit"}
{"nick":"jgi","date":"2016-01-19T05:53:22.011Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-01-19T06:06:30.058Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2016-01-19T06:07:33.779Z","type":"quit"}
{"nick":"watilde","date":"2016-01-19T06:10:45.587Z","type":"join"}
{"nick":"plutoniix","date":"2016-01-19T06:12:35.921Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 265 seconds","date":"2016-01-19T06:15:44.736Z","type":"quit"}
{"nick":"watilde","date":"2016-01-19T08:12:48.137Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 260 seconds","date":"2016-01-19T08:17:15.792Z","type":"quit"}
{"nick":"bnoordhuis","date":"2016-01-19T08:35:52.488Z","type":"join"}
{"nick":"rendar","date":"2016-01-19T08:43:24.754Z","type":"join"}
{"nick":"watilde","date":"2016-01-19T08:55:08.286Z","type":"join"}
{"nick":"watilde","reason":"Remote host closed the connection","date":"2016-01-19T09:27:21.723Z","type":"quit"}
{"nick":"guor","date":"2016-01-19T09:30:14.892Z","type":"join"}
{"nick":"esas","reason":"Ping timeout: 260 seconds","date":"2016-01-19T10:13:55.870Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2016-01-19T10:40:55.964Z","type":"quit"}
{"nick":"xaxxon","date":"2016-01-19T11:11:49.924Z","type":"join"}
{"nick":"xaxxon","message":"when you create a v8::External with a pointer so some data.. who's responsible for what memory?  does the external copy it?   does the caller have to make sure the data stick around as long as the external may want it?   How does this work in relation to passing in data to a functiontemplate?","date":"2016-01-19T11:12:58.488Z","type":"message"}
{"nick":"xaxxon","message":"is external basically just a holder for a dumb pointer?","date":"2016-01-19T11:14:26.136Z","type":"message"}
{"nick":"xaxxon","message":"or does it .. make copies of stuff and other \"smart\" things?","date":"2016-01-19T11:14:41.765Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2016-01-19T11:30:47.169Z","type":"quit"}
{"nick":"jochen__","message":"it's a container for a dumb pointer","date":"2016-01-19T11:59:33.811Z","type":"message"}
{"nick":"bnoordhuis","date":"2016-01-19T12:33:35.798Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 265 seconds","date":"2016-01-19T13:03:40.666Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-01-19T13:45:23.303Z","type":"join"}
{"nick":"bnoordhuis","date":"2016-01-19T14:10:08.086Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2016-01-19T14:14:19.943Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-01-19T14:39:01.624Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-01-19T14:56:38.280Z","type":"join"}
{"nick":"bnoordhuis","date":"2016-01-19T15:15:28.996Z","type":"join"}
{"nick":"C-Man","date":"2016-01-19T15:49:01.169Z","type":"join"}
{"nick":"ofrobots","date":"2016-01-19T16:11:10.196Z","type":"join"}
{"nick":"dherman","message":"is Object#Get(Local<Context>, uint32_t) not supposed to be used for the indexed properties of an array?","date":"2016-01-19T16:12:02.395Z","type":"message"}
{"nick":"bnoordhuis","message":"dherman: it is (for indexed properties, i mean)","date":"2016-01-19T16:19:58.817Z","type":"message"}
{"nick":"dherman","message":"bnoordhuis: ok. I'm trying to debug a mysterious segfault","date":"2016-01-19T16:20:18.764Z","type":"message"}
{"nick":"dherman","message":"I have an array of length 1, obj->IsArray() confirms it is an array, and Nan::Get(cx, 0) / obj->Get(cx, 0) repeatably crash","date":"2016-01-19T16:20:56.303Z","type":"message"}
{"nick":"bnoordhuis","message":"dherman: are you testing a release build?","date":"2016-01-19T16:21:22.754Z","type":"message"}
{"nick":"bnoordhuis","message":"a debug build will usually give a useful error message","date":"2016-01-19T16:21:38.570Z","type":"message"}
{"nick":"bnoordhuis","message":"bonus points if you build with extrachecks=on","date":"2016-01-19T16:21:54.964Z","type":"message"}
{"nick":"dherman","message":"how hard is it to build a debug build of node?","date":"2016-01-19T16:22:04.661Z","type":"message"}
{"nick":"bnoordhuis","message":"not hard. `make -j8 -C out BUILDTYPE=Debug`","date":"2016-01-19T16:22:23.771Z","type":"message"}
{"nick":"dherman","message":"bonus points if I can get a debug build of node 4 :)","date":"2016-01-19T16:22:26.123Z","type":"message"}
{"nick":"bnoordhuis","message":"just check out the right branch and run configure first","date":"2016-01-19T16:23:05.033Z","type":"message"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2009081014]","date":"2016-01-19T16:24:34.354Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-01-19T16:33:42.274Z","type":"quit"}
{"nick":"dherman","message":"bnoordhuis: so when the debug build doesn't segfault and silently succeeds, that's when it's time to start drinking, right?","date":"2016-01-19T16:41:28.988Z","type":"message"}
{"nick":"bnoordhuis","message":"dherman: either that or whip out valgrind :)","date":"2016-01-19T16:45:12.141Z","type":"message"}
{"nick":"dherman","message":"hm yes, maybe it's time I learned valgrind","date":"2016-01-19T16:45:33.762Z","type":"message"}
{"nick":"bnoordhuis","message":"dherman: does a release build from the same commit work?","date":"2016-01-19T16:45:37.031Z","type":"message"}
{"nick":"dherman","message":"good question","date":"2016-01-19T16:45:45.274Z","type":"message"}
{"nick":"dherman","message":"BUILDTYPE=Release ?","date":"2016-01-19T16:46:13.200Z","type":"message"}
{"nick":"bnoordhuis","message":"dherman: yes","date":"2016-01-19T16:47:12.830Z","type":"message"}
{"nick":"plutoniix","date":"2016-01-19T16:49:14.945Z","type":"join"}
{"nick":"dherman","message":"ok yeah the release build crashes","date":"2016-01-19T16:55:51.279Z","type":"message"}
{"nick":"ofrobots","date":"2016-01-19T16:59:22.025Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-01-19T17:05:55.091Z","type":"quit"}
{"nick":"ofrobots","date":"2016-01-19T17:07:31.290Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-01-19T17:13:47.582Z","type":"quit"}
{"nick":"ofrobots","date":"2016-01-19T17:16:00.475Z","type":"join"}
{"nick":"jgi","date":"2016-01-19T17:22:17.109Z","type":"join"}
{"nick":"mostynb","date":"2016-01-19T17:29:42.779Z","type":"join"}
{"nick":"bradleymeck","message":"is tthere a good way to discuss API proposals we need in v8 for https://github.com/nodejs/node-eps/pull/3 ? just talk to people who are doing the Module work in v8's issue tracker? or is there a place to submit API requests more formally","date":"2016-01-19T17:41:53.137Z","type":"message"}
{"nick":"dherman","message":"bradleymeck: I assume you're talking about v8 APIs you need, not Loader/ECMAScript APIs, right?","date":"2016-01-19T17:45:10.064Z","type":"message"}
{"nick":"bradleymeck","message":"yes","date":"2016-01-19T17:45:22.846Z","type":"message"}
{"nick":"dherman","message":"kk, just checking. afaik aklein is the droid you're looking for, but you probably knew that","date":"2016-01-19T17:45:31.625Z","type":"message"}
{"nick":"bradleymeck","message":"ECMAScript standard sets up abstract ops but we need more concrete things for interop","date":"2016-01-19T17:45:52.349Z","type":"message"}
{"nick":"dherman","action":"nods","date":"2016-01-19T17:46:25.203Z","type":"action"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2016-01-19T17:58:59.888Z","type":"quit"}
{"nick":"davi","date":"2016-01-19T18:01:28.086Z","type":"join"}
{"nick":"davi","reason":"Changing host","date":"2016-01-19T18:01:28.282Z","type":"quit"}
{"nick":"davi","date":"2016-01-19T18:01:28.282Z","type":"join"}
{"nick":"bnoordhuis","date":"2016-01-19T18:09:55.905Z","type":"join"}
{"nick":"dagobert______","reason":"Ping timeout: 255 seconds","date":"2016-01-19T18:33:54.405Z","type":"quit"}
{"nick":"mathiasbynens","reason":"Ping timeout: 255 seconds","date":"2016-01-19T18:34:50.400Z","type":"quit"}
{"nick":"wycats","reason":"Ping timeout: 255 seconds","date":"2016-01-19T18:35:45.702Z","type":"quit"}
{"nick":"dherman","reason":"Ping timeout: 255 seconds","date":"2016-01-19T18:35:45.702Z","type":"quit"}
{"nick":"dagobert______","date":"2016-01-19T18:36:24.863Z","type":"join"}
{"nick":"wycats","date":"2016-01-19T18:37:15.361Z","type":"join"}
{"nick":"mathiasbynens","date":"2016-01-19T18:38:27.715Z","type":"join"}
{"nick":"dherman","date":"2016-01-19T18:39:16.948Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-01-19T19:19:14.596Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-01-19T19:19:34.499Z","type":"quit"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2016-01-19T19:19:55.664Z","type":"quit"}
{"nick":"C-Man","date":"2016-01-19T19:20:54.842Z","type":"join"}
{"nick":"jugglinmike","date":"2016-01-19T19:26:19.336Z","type":"join"}
{"nick":"jugglinmike","message":"I'm making changes to preparser.cc, but they don't seem to be reflected through `d8` after I run `make`","date":"2016-01-19T19:27:16.313Z","type":"message"}
{"nick":"jugglinmike","message":"I shouldn't say that","date":"2016-01-19T19:27:32.245Z","type":"message"}
{"nick":"jugglinmike","message":"To be more specific","date":"2016-01-19T19:28:03.710Z","type":"message"}
{"nick":"jugglinmike","message":"I'm making a change to preparsing that I *know* will break thngs","date":"2016-01-19T19:28:15.036Z","type":"message"}
{"nick":"jugglinmike","message":"things*","date":"2016-01-19T19:28:16.921Z","type":"message"}
{"nick":"jugglinmike","message":"when I run `d8 foo.js`, I don't see any errors, expected or otherwise","date":"2016-01-19T19:28:51.716Z","type":"message"}
{"nick":"jugglinmike","message":"when I run `d8 -e \"for(x of []) {}\", I also don't see any errors","date":"2016-01-19T19:29:19.117Z","type":"message"}
{"nick":"jugglinmike","message":"but when I run `d8` without any command-line arguments, I see the kind of errors I am expecting","date":"2016-01-19T19:29:36.836Z","type":"message"}
{"nick":"jugglinmike","message":"Is this related to how/when preparsing occurs?","date":"2016-01-19T19:29:58.047Z","type":"message"}
{"nick":"jugglinmike","message":"Or maybe I am issuing the wrong build command. I've been running `make x64.release` between changes","date":"2016-01-19T19:30:34.096Z","type":"message"}
{"nick":"jugglinmike","message":"I suppose I should try `make x64`. Running that now...","date":"2016-01-19T19:31:38.337Z","type":"message"}
{"nick":"bradleymeck","date":"2016-01-19T19:33:22.797Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2016-01-19T19:33:36.950Z","type":"quit"}
{"nick":"jgi","date":"2016-01-19T19:33:48.166Z","type":"join"}
{"nick":"davi","reason":"Ping timeout: 250 seconds","date":"2016-01-19T19:44:39.109Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-01-19T19:54:25.385Z","type":"join"}
{"nick":"watilde","date":"2016-01-19T19:55:09.318Z","type":"join"}
{"nick":"watilde_","date":"2016-01-19T20:10:47.385Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 255 seconds","date":"2016-01-19T20:13:21.021Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2016-01-19T20:16:30.745Z","type":"quit"}
{"nick":"watilde","date":"2016-01-19T20:28:37.057Z","type":"join"}
{"nick":"watilde_","reason":"Ping timeout: 255 seconds","date":"2016-01-19T20:31:21.113Z","type":"quit"}
{"nick":"watilde_","date":"2016-01-19T20:38:26.267Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 260 seconds","date":"2016-01-19T20:39:15.821Z","type":"quit"}
{"nick":"watilde","date":"2016-01-19T20:40:36.217Z","type":"join"}
{"nick":"watilde_","reason":"Ping timeout: 255 seconds","date":"2016-01-19T20:44:23.988Z","type":"quit"}
{"nick":"watilde_","date":"2016-01-19T20:45:03.339Z","type":"join"}
{"nick":"rendar","reason":"Ping timeout: 255 seconds","date":"2016-01-19T20:45:44.957Z","type":"quit"}
{"nick":"watilde","reason":"Ping timeout: 240 seconds","date":"2016-01-19T20:47:46.303Z","type":"quit"}
{"nick":"bnoordhuis","date":"2016-01-19T20:51:55.659Z","type":"join"}
{"nick":"rendar","date":"2016-01-19T20:52:02.871Z","type":"join"}
{"nick":"watilde_","reason":"Remote host closed the connection","date":"2016-01-19T20:56:11.360Z","type":"quit"}
{"nick":"watilde","date":"2016-01-19T21:11:08.269Z","type":"join"}
{"nick":"aklein","message":"jugglinmike: triggering preparsing can be a bit tricky","date":"2016-01-19T21:14:50.609Z","type":"message"}
{"nick":"aklein","message":"jugglinmike: I tend to do \"d8 --min-preparse-length=0 -e 'function() { whatevershouldbreakgoeshere }'\"","date":"2016-01-19T21:15:15.773Z","type":"message"}
{"nick":"jugglinmike","message":"aklein: thanks!","date":"2016-01-19T21:17:09.252Z","type":"message"}
{"nick":"jugglinmike","message":"aklein: though this raises a bigger question","date":"2016-01-19T21:17:28.253Z","type":"message"}
{"nick":"jugglinmike","message":"If preparsing doesn't always occur, should I be modifying additional files?","date":"2016-01-19T21:18:05.546Z","type":"message"}
{"nick":"esas","date":"2016-01-19T21:18:47.403Z","type":"join"}
{"nick":"aklein","message":"jugglinmike: not sure what you're trying to do, but yeah, in general if you're modifying preparser.cc you'll have to touch parser.cc to mirror the changes (and vice-versa)","date":"2016-01-19T21:18:49.492Z","type":"message"}
{"nick":"aklein","message":"most of expression parsing is unified in parser-base.h","date":"2016-01-19T21:18:57.927Z","type":"message"}
{"nick":"jugglinmike","message":"aklein: hm, okay. I don't really know what I'm doing (could you guess?). For my basic workflow, would you recommend starting with one of the files?","date":"2016-01-19T21:21:15.726Z","type":"message"}
{"nick":"aklein","message":"jugglinmike: I would start with parser-base.h and parser.cc","date":"2016-01-19T21:23:03.906Z","type":"message"}
{"nick":"jugglinmike","message":"got it","date":"2016-01-19T21:23:09.576Z","type":"message"}
{"nick":"jugglinmike","message":"thanks!","date":"2016-01-19T21:23:10.697Z","type":"message"}
{"nick":"aklein","message":"I usually do preparsing as a second pass if necessary","date":"2016-01-19T21:23:16.798Z","type":"message"}
{"nick":"aklein","message":"(when implementing something new)","date":"2016-01-19T21:23:21.701Z","type":"message"}
{"nick":"aklein","message":"for the top level, we never pre-parse","date":"2016-01-19T21:23:37.143Z","type":"message"}
{"nick":"aklein","message":"so d8 -e 'whatever' will always hit just Parser","date":"2016-01-19T21:23:47.106Z","type":"message"}
{"nick":"aklein","message":"by way of slightly more explanation, the main thing the PreParser needs to get \"right\" is syntax errors","date":"2016-01-19T21:24:16.126Z","type":"message"}
{"nick":"aklein","message":"it doesn't keep track of much more (it's designed to swiftly skip over function bodies during page load)","date":"2016-01-19T21:24:32.187Z","type":"message"}
{"nick":"jugglinmike","message":"aklein: Is this distinction mjsunit tests run more than once?","date":"2016-01-19T21:26:24.793Z","type":"message"}
{"nick":"aklein","message":"jugglinmike: sorry, is that question missing a word?","date":"2016-01-19T21:31:16.064Z","type":"message"}
{"nick":"aklein","message":"in general the preparser is best-covered by cctest/test-parsing.cc","date":"2016-01-19T21:31:52.559Z","type":"message"}
{"nick":"aklein","message":"which runs everything through both the parser and preparser and makes sure they agree","date":"2016-01-19T21:32:05.734Z","type":"message"}
{"nick":"aklein","message":"then there's a smattering of regression tests that exercise the preparser, usually using --min-preparse-length but sometimes just by having a big-enough function body","date":"2016-01-19T21:32:38.264Z","type":"message"}
{"nick":"jugglinmike","message":"aklein: it was missing a word. I was wondering if the test runner ran each mjsunit test file more than once--for the parser and preparser respectively","date":"2016-01-19T21:37:00.916Z","type":"message"}
{"nick":"aklein","message":"jugglinmike: ah, yeah, the answer is no","date":"2016-01-19T21:38:11.142Z","type":"message"}
{"nick":"jugglinmike","message":"roger that. Thanks!","date":"2016-01-19T21:43:29.706Z","type":"message"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-01-19T21:46:19.532Z","type":"quit"}
{"nick":"watilde","reason":"Remote host closed the connection","date":"2016-01-19T21:48:37.604Z","type":"quit"}
{"nick":"jugglinmike","message":"aklein: Can I flag you for a review?","date":"2016-01-19T21:59:48.295Z","type":"message"}
{"nick":"aklein","message":"jugglinmike: sure (adamk@chromium.org, btw; adamk on freenode is someone else :)","date":"2016-01-19T22:00:27.788Z","type":"message"}
{"nick":"jugglinmike","message":"got it!","date":"2016-01-19T22:00:39.207Z","type":"message"}
{"nick":"jugglinmike","message":"and thank you","date":"2016-01-19T22:00:44.825Z","type":"message"}
{"nick":"jugglinmike","message":"aklein: It's been a while; I just used `git cl upload`. Is there anything else I need to do?","date":"2016-01-19T22:06:24.576Z","type":"message"}
{"nick":"aklein","message":"jugglinmike: nope, I got your email","date":"2016-01-19T22:09:05.324Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2016-01-19T22:10:26.606Z","type":"quit"}
{"nick":"watilde","date":"2016-01-19T22:17:04.182Z","type":"join"}
{"nick":"ofrobots","reason":"Ping timeout: 245 seconds","date":"2016-01-19T22:21:00.068Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-01-19T22:22:38.076Z","type":"quit"}
{"nick":"watilde","reason":"Ping timeout: 255 seconds","date":"2016-01-19T22:24:44.935Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2016-01-19T22:26:41.697Z","type":"quit"}
{"nick":"jgi","date":"2016-01-19T22:27:25.929Z","type":"join"}
{"nick":"RT|Chatzilla","date":"2016-01-19T22:31:40.623Z","type":"join"}
{"nick":"bnoordhuis","date":"2016-01-19T23:16:48.217Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2016-01-19T23:21:31.237Z","type":"quit"}
{"nick":"xaxxon","message":"is the \"--expose-gc\" flag still valid and if so, how do I pass it to v8 on startup?   I'm not seeing it on \"platform\" or \"isolate\" but maybe I'm missing it?","date":"2016-01-19T23:22:57.094Z","type":"message"}
{"nick":"xaxxon","message":"I was expecting to see something that took argc/argv as parameters and returned versions with the v8 params stripped out","date":"2016-01-19T23:23:38.604Z","type":"message"}
{"nick":"xaxxon","message":"hrmm: http://v8.paulfryzel.com/docs/master/classv8_1_1_v8.html#abcb10a34880aa738f00dc37f74113f69","date":"2016-01-19T23:26:41.795Z","type":"message"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2016-01-19T23:33:58.646Z","type":"quit"}
{"nick":"xaxxon","message":"yeah, I found it.   SetFlagsFromCommandLine/String","date":"2016-01-19T23:34:45.057Z","type":"message"}
{"nick":"jugglinmike1","date":"2016-01-19T23:46:09.434Z","type":"join"}
{"nick":"jugglinmike","reason":"Ping timeout: 265 seconds","date":"2016-01-19T23:46:30.791Z","type":"quit"}
