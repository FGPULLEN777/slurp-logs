{"nick":"zv","reason":"Quit: WeeChat 1.4","date":"2016-03-21T00:03:55.165Z","type":"quit"}
{"nick":"zv","date":"2016-03-21T00:04:17.703Z","type":"join"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2016-03-21T00:14:40.000Z","type":"quit"}
{"nick":"ofrobots","date":"2016-03-21T00:24:23.559Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-03-21T01:31:16.954Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-03-21T02:55:07.693Z","type":"join"}
{"nick":"saper","reason":"Ping timeout: 260 seconds","date":"2016-03-21T03:16:29.496Z","type":"quit"}
{"nick":"saper","date":"2016-03-21T03:21:03.033Z","type":"join"}
{"nick":"saper","reason":"Ping timeout: 264 seconds","date":"2016-03-21T03:30:28.034Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-03-21T03:32:54.994Z","type":"quit"}
{"nick":"saper","date":"2016-03-21T03:33:44.106Z","type":"join"}
{"nick":"bradleymeck","date":"2016-03-21T03:44:04.731Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"compile\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux%20gcc%204.8/builds/5590 \"V8 Linux gcc 4.8\" from 1d6dba43c2b61900be68777297634e05d479a25a: v8-autoroll@chromium.org)","date":"2016-03-21T03:47:22.578Z","type":"message"}
{"nick":"zv","reason":"Ping timeout: 244 seconds","date":"2016-03-21T04:05:30.720Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-03-21T05:10:31.959Z","type":"quit"}
{"nick":"xiinotulp","new_nick":"plutoniix","date":"2016-03-21T05:12:59.168Z","type":"nick"}
{"nick":"ofrobots","date":"2016-03-21T05:16:15.400Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by bmeurer@google.com: Tree is open","date":"2016-03-21T05:41:02.459Z","type":"message"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-03-21T05:47:29.754Z","type":"quit"}
{"nick":"zv_","date":"2016-03-21T08:53:28.269Z","type":"join"}
{"nick":"rendar","date":"2016-03-21T09:48:49.346Z","type":"join"}
{"nick":"foocraft","date":"2016-03-21T10:12:59.197Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Mjsunit\" on http://build.chromium.org/p/client.v8/builders/V8%20Mac%20GC%20Stress/builds/5049 \"V8 Mac GC Stress\" from 369a6ac01852d3991a556052c4af5beeb6fef92f: bmeurer@chromium.org,epertoso@chromium.org)","date":"2016-03-21T10:47:49.451Z","type":"message"}
{"nick":"davi_","date":"2016-03-21T10:50:18.206Z","type":"join"}
{"nick":"davi_","reason":"Ping timeout: 240 seconds","date":"2016-03-21T10:58:03.898Z","type":"quit"}
{"nick":"davi_","date":"2016-03-21T10:58:46.640Z","type":"join"}
{"nick":"davi_","reason":"Remote host closed the connection","date":"2016-03-21T10:59:33.287Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: open","date":"2016-03-21T11:01:55.148Z","type":"message"}
{"nick":"esas","reason":"Ping timeout: 260 seconds","date":"2016-03-21T11:37:34.549Z","type":"quit"}
{"nick":"foocraft","message":"Is there any way to tell v8 not to forward \"prototype\" property requests to a given v8::Object's property handlers?","date":"2016-03-21T12:03:57.058Z","type":"message"}
{"nick":"foocraft","message":"It seems the requests are going to the named property handlers I'm creating and even when I return an empty handler the prototype seems to be undefined","date":"2016-03-21T12:04:46.894Z","type":"message"}
{"nick":"xiinotulp","date":"2016-03-21T12:47:58.760Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 244 seconds","date":"2016-03-21T12:50:57.682Z","type":"quit"}
{"nick":"xiinotulp","new_nick":"plutoniix","date":"2016-03-21T12:55:13.733Z","type":"nick"}
{"nick":"bradleymeck","date":"2016-03-21T13:00:14.537Z","type":"join"}
{"nick":"jugglinmike","date":"2016-03-21T13:45:47.072Z","type":"join"}
{"nick":"ofrobots","date":"2016-03-21T14:05:24.913Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-03-21T15:05:16.876Z","type":"quit"}
{"nick":"stalled","reason":"Read error: Connection reset by peer","date":"2016-03-21T15:06:23.873Z","type":"quit"}
{"nick":"ofrobots","date":"2016-03-21T15:25:02.435Z","type":"join"}
{"nick":"Venemo","date":"2016-03-21T15:27:36.300Z","type":"join"}
{"nick":"stalled","date":"2016-03-21T15:33:06.643Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-03-21T15:35:02.884Z","type":"quit"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2010030309]","date":"2016-03-21T15:49:19.861Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-03-21T16:26:04.724Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-03-21T16:42:12.059Z","type":"join"}
{"nick":"foocraft","reason":"Remote host closed the connection","date":"2016-03-21T16:55:14.942Z","type":"quit"}
{"nick":"davi","date":"2016-03-21T17:13:02.451Z","type":"join"}
{"nick":"iamstef","reason":"Ping timeout: 260 seconds","date":"2016-03-21T17:17:39.623Z","type":"quit"}
{"nick":"sof","reason":"Ping timeout: 260 seconds","date":"2016-03-21T17:17:39.835Z","type":"quit"}
{"nick":"sof","date":"2016-03-21T17:18:00.215Z","type":"join"}
{"nick":"iamstef","date":"2016-03-21T17:21:20.753Z","type":"join"}
{"nick":"plutoniix","reason":"Read error: Connection reset by peer","date":"2016-03-21T17:35:17.735Z","type":"quit"}
{"nick":"ofrobots","date":"2016-03-21T17:43:19.306Z","type":"join"}
{"nick":"plutoniix","date":"2016-03-21T17:59:27.045Z","type":"join"}
{"nick":"bobmcw","date":"2016-03-21T18:22:34.148Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-03-21T18:24:51.819Z","type":"quit"}
{"nick":"ofrobots","date":"2016-03-21T18:25:50.711Z","type":"join"}
{"nick":"ofrobots","reason":"Client Quit","date":"2016-03-21T18:27:01.746Z","type":"quit"}
{"nick":"ofrobots","date":"2016-03-21T18:30:37.175Z","type":"join"}
{"nick":"Venemo","reason":"Ping timeout: 260 seconds","date":"2016-03-21T18:38:22.732Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"compile\" on http://build.chromium.org/p/client.v8/builders/V8%20Win64/builds/8969 \"V8 Win64\" from 5ff7901e24c2c6029114567de5a08ed0f1494c81: ulan@chromium.org)","date":"2016-03-21T18:43:58.140Z","type":"message"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2016-03-21T18:52:15.502Z","type":"quit"}
{"nick":"zv_","new_nick":"zv","date":"2016-03-21T19:12:52.008Z","type":"nick"}
{"nick":"zv","reason":"Changing host","date":"2016-03-21T19:12:59.778Z","type":"quit"}
{"nick":"zv","date":"2016-03-21T19:12:59.956Z","type":"join"}
{"nick":"trungl-bot","message":"\u00036\u0002Unknown tree status set\u000f by machenbach@chromium.org: ulan@chromium.org)","date":"2016-03-21T19:21:15.263Z","type":"message"}
{"nick":"jugglinmike","message":"That's a new one","date":"2016-03-21T19:22:08.661Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: Open","date":"2016-03-21T19:22:15.892Z","type":"message"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-03-21T19:26:50.918Z","type":"quit"}
{"nick":"evanlucas","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2016-03-21T19:39:23.422Z","type":"quit"}
{"nick":"bradleymeck","message":"maybe I am misreading spec, but is the catch needed for iterator closing? wouldn't a finally still perform the same steps?","date":"2016-03-21T19:41:16.408Z","type":"message"}
{"nick":"evanlucas","date":"2016-03-21T19:41:28.496Z","type":"join"}
{"nick":"ofrobots","date":"2016-03-21T19:46:16.532Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-03-21T19:58:32.973Z","type":"quit"}
{"nick":"ofrobots","date":"2016-03-21T19:59:37.793Z","type":"join"}
{"nick":"rhalff","reason":"Ping timeout: 260 seconds","date":"2016-03-21T20:15:47.735Z","type":"quit"}
{"nick":"littledan__","message":"bradleymeck: The spec is extremely specific about various cases where the exception is propagated and .return() is not called","date":"2016-03-21T20:23:56.899Z","type":"message"}
{"nick":"littledan__","message":"there are extensive tests in test262 for this, and V8 passes them","date":"2016-03-21T20:24:05.908Z","type":"message"}
{"nick":"bradleymeck","message":"well thats a bit annoying","date":"2016-03-21T20:24:42.789Z","type":"message"}
{"nick":"bradleymeck","message":"littledan__: do you have the exact reason, I am staring at 7.4.6 / 13.7.5.13 any my mind is just not seeing it","date":"2016-03-21T20:27:32.137Z","type":"message"}
{"nick":"littledan__","message":"there are tons of parts of the spec for this","date":"2016-03-21T20:27:49.640Z","type":"message"}
{"nick":"littledan__","message":"overall, it wasn't so bad for us to implement that; the real overhead comes from having a try/catch at all","date":"2016-03-21T20:28:04.119Z","type":"message"}
{"nick":"bradleymeck","message":"yea, I see it now, it is just a bit strange for throwing in a loop to not close the iterator","date":"2016-03-21T20:29:22.635Z","type":"message"}
{"nick":"bradleymeck","message":"hells, that makes my use case thrown out the window for now","date":"2016-03-21T20:29:56.920Z","type":"message"}
{"nick":"littledan__","message":"well, you incur the overhead on all for-of loops, not just for-of loops that use it","date":"2016-03-21T20:31:47.170Z","type":"message"}
{"nick":"littledan__","message":"or what's your use case?","date":"2016-03-21T20:31:54.041Z","type":"message"}
{"nick":"littledan__","message":"is it throwing from next()?","date":"2016-03-21T20:32:04.901Z","type":"message"}
{"nick":"littledan__","message":"the idea is, if next() itself throws, then you can put the try/catch there to call return","date":"2016-03-21T20:32:14.761Z","type":"message"}
{"nick":"bradleymeck","message":"littledan__: no, the idea is I can create resource management using iterator closing","date":"2016-03-21T20:35:36.798Z","type":"message"}
{"nick":"littledan__","message":"bradleymeck: what blocks you from doing that?","date":"2016-03-21T20:35:49.815Z","type":"message"}
{"nick":"littledan__","message":"iterator closing is designed for that","date":"2016-03-21T20:35:58.087Z","type":"message"}
{"nick":"bradleymeck","message":"littledan__: errors won't close resources in loops","date":"2016-03-21T20:36:07.302Z","type":"message"}
{"nick":"littledan__","message":"they will, if they come from the iterator user, rather than inside of the iterator itself","date":"2016-03-21T20:36:26.959Z","type":"message"}
{"nick":"littledan__","message":"do you have a test case?","date":"2016-03-21T20:36:30.481Z","type":"message"}
{"nick":"bradleymeck","message":"so I still need the junky finally I use in https://github.com/bmeck/managed-task/blob/master/lib/examples/lockfile.js","date":"2016-03-21T20:36:48.079Z","type":"message"}
{"nick":"bradleymeck","message":"littledan__: I do not for the real syntax, but I can write one","date":"2016-03-21T20:36:58.411Z","type":"message"}
{"nick":"littledan__","message":"bradleymeck: That would be nice. The iterator close feature was a ton of work and we still may be able to tweak it if it would make it more useful","date":"2016-03-21T20:37:36.749Z","type":"message"}
{"nick":"bradleymeck","message":"littledan__: https://gist.github.com/bmeck/e78f0fbc486369b05027","date":"2016-03-21T20:38:54.105Z","type":"message"}
{"nick":"littledan__","message":"if you have a generator, you should be able to simply use try/finally inside the generator and the finally block will always run, as long as the iterator is either exhausted or the for-of loop exits early","date":"2016-03-21T20:38:58.837Z","type":"message"}
{"nick":"littledan__","message":"yeah, that example should close it","date":"2016-03-21T20:39:05.127Z","type":"message"}
{"nick":"bradleymeck","message":"now I am even more confused","date":"2016-03-21T20:39:13.781Z","type":"message"}
{"nick":"littledan__","message":"it's only obscure cases where .return() is not called","date":"2016-03-21T20:39:21.883Z","type":"message"}
{"nick":"littledan__","message":"they only matter if you implement your own iterator","date":"2016-03-21T20:39:28.112Z","type":"message"}
{"nick":"bradleymeck","message":"can you point me to an example","date":"2016-03-21T20:39:30.231Z","type":"message"}
{"nick":"bradleymeck","message":"oh","date":"2016-03-21T20:39:33.887Z","type":"message"}
{"nick":"bradleymeck","message":"so thats only in the iterator","date":"2016-03-21T20:39:38.462Z","type":"message"}
{"nick":"littledan__","message":"It doesn't come into play if you use generators, only for custom implementations of the iteration protocol","date":"2016-03-21T20:39:47.308Z","type":"message"}
{"nick":"littledan__","message":"so it should work! But bug reports are welcome","date":"2016-03-21T20:40:05.049Z","type":"message"}
{"nick":"bradleymeck","message":"littledan__: ok, so eventually generators may be able to skip the catch{}","date":"2016-03-21T20:40:12.789Z","type":"message"}
{"nick":"bradleymeck","message":"littledan__: about to break it in for a parser so I had to ask XD","date":"2016-03-21T20:40:25.580Z","type":"message"}
{"nick":"bradleymeck","message":"thanks much for the work!","date":"2016-03-21T20:40:41.287Z","type":"message"}
{"nick":"littledan__","message":"well, the catch block will not be reached if an exception is thrown by the loop body, only the finally block","date":"2016-03-21T20:41:02.867Z","type":"message"}
{"nick":"littledan__","message":"the catch block will only be reached if the generator body throws","date":"2016-03-21T20:41:18.495Z","type":"message"}
{"nick":"littledan__","message":"it was mostly Georg Neis! I just did a couple little fixes","date":"2016-03-21T20:41:38.845Z","type":"message"}
{"nick":"aklein","message":"caitp: any reason not to stage exponentiation?","date":"2016-03-21T21:00:50.568Z","type":"message"}
{"nick":"Venemo","date":"2016-03-21T21:03:18.333Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-03-21T21:23:11.470Z","type":"quit"}
{"nick":"caitp","message":"aklein: I mean there are no obvious problems with it, and the extra test coverage would be nice","date":"2016-03-21T21:24:39.412Z","type":"message"}
{"nick":"aklein","message":"caitp: I would be happy to lgtm such a patch :)","date":"2016-03-21T21:25:34.036Z","type":"message"}
{"nick":"caitp","message":"s/no obvious problems/no obvious (to me) problems/ --- but I've been sick the past few days and my head is a bit foggy","date":"2016-03-21T21:25:44.718Z","type":"message"}
{"nick":"aklein","message":"k. seems like it wouldn't hurt to get it a bit more coverage","date":"2016-03-21T21:28:23.167Z","type":"message"}
{"nick":"caitp","message":"alright, well there's a CL at https://codereview.chromium.org/1823683004","date":"2016-03-21T21:29:19.447Z","type":"message"}
{"nick":"bradleymeck","date":"2016-03-21T21:31:20.966Z","type":"join"}
{"nick":"rendar","reason":"Ping timeout: 248 seconds","date":"2016-03-21T21:51:26.097Z","type":"quit"}
{"nick":"rendar","date":"2016-03-21T21:57:35.543Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-03-21T22:04:37.476Z","type":"quit"}
{"nick":"ofrobots","date":"2016-03-21T22:08:27.552Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-03-21T22:23:50.033Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2016-03-21T22:24:34.892Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2016-03-21T22:32:24.841Z","type":"join"}
{"nick":"davi","reason":"Ping timeout: 268 seconds","date":"2016-03-21T22:34:24.287Z","type":"quit"}
{"nick":"rhalff","date":"2016-03-21T22:37:17.319Z","type":"join"}
{"nick":"jugglinmike","reason":"Ping timeout: 244 seconds","date":"2016-03-21T22:37:52.088Z","type":"quit"}
{"nick":"esas","date":"2016-03-21T22:56:51.966Z","type":"join"}
{"nick":"rendar","reason":"Quit: std::lower_bound + std::less_equal *works* with a vector without duplicates!","date":"2016-03-21T23:50:38.900Z","type":"quit"}
