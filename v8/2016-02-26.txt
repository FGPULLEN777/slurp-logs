{"nick":"xaxxon","date":"2016-02-26T00:02:25.803Z","type":"join"}
{"nick":"bradleymeck","date":"2016-02-26T00:15:03.105Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2016-02-26T00:15:03.355Z","type":"quit"}
{"nick":"watilde","date":"2016-02-26T00:24:10.794Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 240 seconds","date":"2016-02-26T00:28:34.087Z","type":"quit"}
{"nick":"xaxxon","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T00:35:00.013Z","type":"quit"}
{"nick":"xaxxon","date":"2016-02-26T00:38:23.168Z","type":"join"}
{"nick":"xaxxon","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T00:54:59.571Z","type":"quit"}
{"nick":"xaxxon","date":"2016-02-26T00:56:14.148Z","type":"join"}
{"nick":"xaxxon","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T01:01:20.934Z","type":"quit"}
{"nick":"xaxxon","date":"2016-02-26T01:02:03.687Z","type":"join"}
{"nick":"Fishrock123","date":"2016-02-26T01:06:02.767Z","type":"join"}
{"nick":"Fishrock123","message":"littledan__: heya, Ali said I should ask you about this. I'm hoping there is a way I can get the reject value of a promise from c++ (Where the Promise is a Local)","date":"2016-02-26T01:07:11.899Z","type":"message"}
{"nick":"littledan__","message":"Fishrock123: Yeah, call the Catch method","date":"2016-02-26T01:09:35.124Z","type":"message"}
{"nick":"littledan__","message":"the C++ interface is just like the JavaScript one; there's no synchronous way to get the contents out","date":"2016-02-26T01:10:22.800Z","type":"message"}
{"nick":"Fishrock123","message":"littledan__: hmm, well what we are doing for JS is making a debug context and pulling it out of that","date":"2016-02-26T01:10:54.036Z","type":"message"}
{"nick":"littledan__","message":"I don't quite understand, could you explain more?","date":"2016-02-26T01:11:16.728Z","type":"message"}
{"nick":"Fishrock123","message":"do you mean (Local)->Catch()?","date":"2016-02-26T01:11:25.727Z","type":"message"}
{"nick":"Fishrock123","message":"one sec, i'll get a link","date":"2016-02-26T01:11:31.844Z","type":"message"}
{"nick":"littledan__","message":"yes","date":"2016-02-26T01:11:43.835Z","type":"message"}
{"nick":"Fishrock123","message":"littledan__: https://github.com/nodejs/node/blob/master/lib/util.js#L204","date":"2016-02-26T01:12:42.063Z","type":"message"}
{"nick":"Fishrock123","message":"where Debug is https://github.com/nodejs/node/blob/master/lib/util.js#L191","date":"2016-02-26T01:13:04.554Z","type":"message"}
{"nick":"Fishrock123","message":"hmm yeah, I need something that is synchronous","date":"2016-02-26T01:13:44.395Z","type":"message"}
{"nick":"littledan__","message":"oh, huh.:e :e","date":"2016-02-26T01:13:54.148Z","type":"message"}
{"nick":"Fishrock123","message":"at the point that we are at we are exiting the program","date":"2016-02-26T01:13:56.959Z","type":"message"}
{"nick":"Fishrock123","message":"or well, hoping to","date":"2016-02-26T01:14:26.416Z","type":"message"}
{"nick":"littledan__","message":"oops, some of that was supposed to go to vim :)","date":"2016-02-26T01:15:40.333Z","type":"message"}
{"nick":"Fishrock123","message":"XD","date":"2016-02-26T01:16:00.493Z","type":"message"}
{"nick":"littledan__","message":"so if you want to get at the debug information, Runtime::GetInternalProperties will give you an array of secret internal properties, which includes [[PromiseValue]]. But this is not guaranteed to be a stable interface, and not high performance! It would not be useful for someone writing a module outside of node core. Let me see how/if that's exposed via the","date":"2016-02-26T01:17:47.878Z","type":"message"}
{"nick":"littledan__","message":"API...","date":"2016-02-26T01:17:48.127Z","type":"message"}
{"nick":"Fishrock123","message":"That is fine","date":"2016-02-26T01:19:38.541Z","type":"message"}
{"nick":"littledan__","message":"in include/v8-debug.h, Debug::GetInternalProperties will do the trick","date":"2016-02-26T01:19:43.551Z","type":"message"}
{"nick":"Fishrock123","message":"I am writing something for node core :)","date":"2016-02-26T01:19:47.294Z","type":"message"}
{"nick":"littledan__","message":"(I wrote that disclaimer more for other people who might be listening in; you're good for this use case I think)","date":"2016-02-26T01:19:59.807Z","type":"message"}
{"nick":"Fishrock123","message":"ah","date":"2016-02-26T01:20:13.986Z","type":"message"}
{"nick":"Fishrock123","message":"is that v8::Debug::GetInternalProperties?","date":"2016-02-26T01:20:44.086Z","type":"message"}
{"nick":"Fishrock123","message":"Sorry, my C++ is not very good lol","date":"2016-02-26T01:20:51.689Z","type":"message"}
{"nick":"littledan__","message":"yep","date":"2016-02-26T01:21:03.227Z","type":"message"}
{"nick":"littledan__","message":"The internal properties exposed here are meant to match the ES2016 draft spec. But we don't have quite as good tests for them as we do for other aspects of spec compliance, so let me know if anything ends up working differently than what you expect.","date":"2016-02-26T01:22:17.112Z","type":"message"}
{"nick":"Fishrock123","message":"littledan__: do I need to iterate to find [[PromiseValue], or?","date":"2016-02-26T01:23:33.326Z","type":"message"}
{"nick":"littledan__","message":"yes, I think it gives you an array of key-value pairs, and you iterate through it","date":"2016-02-26T01:23:49.979Z","type":"message"}
{"nick":"littledan__","message":"oh, sorry, it gives you an array of [key, value, key, value, ...]","date":"2016-02-26T01:24:23.162Z","type":"message"}
{"nick":"watilde","date":"2016-02-26T01:24:40.120Z","type":"join"}
{"nick":"Fishrock123","message":"oh ok, key is like a Local<String>?","date":"2016-02-26T01:24:43.165Z","type":"message"}
{"nick":"Fishrock123","message":"and I'm looking for one that has \"PromiseValue\"?","date":"2016-02-26T01:24:56.508Z","type":"message"}
{"nick":"Fishrock123","message":"or MaybeLocal<String>... I don't really know the difference","date":"2016-02-26T01:25:29.468Z","type":"message"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2016-02-26T01:27:32.904Z","type":"quit"}
{"nick":"littledan__","message":"Sorry, I'm actually not an expert on the external API either. But you're looking for one that has \"[[PromiseValue]]\" in an even-numbered position. You can just pass this value out to JS and do the iteration there.","date":"2016-02-26T01:28:29.324Z","type":"message"}
{"nick":"Fishrock123","message":"Yeah, I guess that is the easiest route for now, I really have no idea how to iterate on this in c++","date":"2016-02-26T01:29:16.187Z","type":"message"}
{"nick":"littledan__","message":"it's probably better long-term to do as much as possible in JS too","date":"2016-02-26T01:29:40.879Z","type":"message"}
{"nick":"petka____","reason":"Quit: Connection closed for inactivity","date":"2016-02-26T01:30:37.540Z","type":"quit"}
{"nick":"watilde","reason":"Ping timeout: 240 seconds","date":"2016-02-26T01:30:59.756Z","type":"quit"}
{"nick":"Fishrock123","message":"littledan__: To use `bool ToLocal(Local<S>* out)` I need to pass in an empty Local? How do I make one that is empty?","date":"2016-02-26T01:34:32.757Z","type":"message"}
{"nick":"littledan__","message":"eh, I'm not the best one to answer these questions, maybe Ali knows better","date":"2016-02-26T01:34:58.998Z","type":"message"}
{"nick":"littledan__","message":"or someone else here","date":"2016-02-26T01:35:03.988Z","type":"message"}
{"nick":"Fishrock123","message":"ok","date":"2016-02-26T01:35:05.698Z","type":"message"}
{"nick":"Fishrock123","message":"ofrobots: ^","date":"2016-02-26T01:35:11.852Z","type":"message"}
{"nick":"littledan__","message":"does Local<S> out; work?","date":"2016-02-26T01:35:22.003Z","type":"message"}
{"nick":"littledan__","message":"and then you pass in a reference to that?","date":"2016-02-26T01:35:40.033Z","type":"message"}
{"nick":"Fishrock123","message":"Basically I need to get a local out of a MaybeLocal","date":"2016-02-26T01:35:46.630Z","type":"message"}
{"nick":"Fishrock123","message":"I think","date":"2016-02-26T01:35:50.240Z","type":"message"}
{"nick":"Fishrock123","message":"I probably should have been more specific about that","date":"2016-02-26T01:36:23.233Z","type":"message"}
{"nick":"ofrobots","message":"littledan__ thanks for the pointers.. I wasn't familar with GetInternalProperties","date":"2016-02-26T01:38:36.739Z","type":"message"}
{"nick":"ofrobots","message":"Fishrock123 let me take a look at this.. I can probably code up an example for you to look at","date":"2016-02-26T01:39:09.085Z","type":"message"}
{"nick":"ofrobots","message":"I don't want you to be flailing with C++","date":"2016-02-26T01:39:17.765Z","type":"message"}
{"nick":"ofrobots","message":"(is tomorrow okay?)","date":"2016-02-26T01:39:36.906Z","type":"message"}
{"nick":"Fishrock123","message":"ofrobots: I suppose. I can do the rest for now so long as I can get a Local<Value> out of the MaybeLocal","date":"2016-02-26T01:40:41.556Z","type":"message"}
{"nick":"ofrobots","message":"For that you can do maybe_local.ToLocalChecked() <-- assumes that the local is non-empty","date":"2016-02-26T01:41:16.541Z","type":"message"}
{"nick":"ofrobots","message":"*maybe_local is non-empty","date":"2016-02-26T01:41:23.349Z","type":"message"}
{"nick":"ofrobots","message":"if emptiness is possible, you will need to test upfront for emptiness","date":"2016-02-26T01:41:38.876Z","type":"message"}
{"nick":"ofrobots","message":"something like if (maybe_local.IsEmpty()) { /* do something */} else { Local<Value> promise = maybe_local.ToLocalChecked();.. ","date":"2016-02-26T01:42:17.705Z","type":"message"}
{"nick":"Fishrock123","message":"ok uh","date":"2016-02-26T01:42:20.199Z","type":"message"}
{"nick":"Fishrock123","message":"I don't this will be empty","date":"2016-02-26T01:42:26.711Z","type":"message"}
{"nick":"Fishrock123","message":"we shall see!","date":"2016-02-26T01:42:29.407Z","type":"message"}
{"nick":"Fishrock123","message":"ofrobots: yup, that worked, thanks!","date":"2016-02-26T01:45:40.543Z","type":"message"}
{"nick":"ofrobots","message":"Fishrock123 To answer your question about how to use ToLocal, here are some examples from Node: https://github.com/nodejs/node/blob/master/src/node_contextify.cc#L340","date":"2016-02-26T01:46:27.858Z","type":"message"}
{"nick":"Fishrock123","message":"oh shoot you can literally just do `Local<Value> context_external_v;`? doh","date":"2016-02-26T01:47:23.428Z","type":"message"}
{"nick":"Fishrock123","message":"cool, well, I'll try to work this out more tomorrow, thanks both for your help :)","date":"2016-02-26T01:49:11.701Z","type":"message"}
{"nick":"ofrobots","message":"Basically MaybeLocal returns you a value or null. You must deal with the nullness before you can access the value. This avoids null pointer crashes.","date":"2016-02-26T01:49:29.870Z","type":"message"}
{"nick":"Fishrock123","message":"right","date":"2016-02-26T01:50:09.542Z","type":"message"}
{"nick":"evanlucas","reason":"Read error: Connection reset by peer","date":"2016-02-26T01:58:15.427Z","type":"quit"}
{"nick":"evanluca_","date":"2016-02-26T01:58:16.995Z","type":"join"}
{"nick":"evanluca_","reason":"Ping timeout: 248 seconds","date":"2016-02-26T02:10:11.794Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T02:10:26.691Z","type":"quit"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2016-02-26T02:13:37.144Z","type":"quit"}
{"nick":"ofrobots","date":"2016-02-26T02:15:16.057Z","type":"join"}
{"nick":"evanlucas","date":"2016-02-26T02:19:48.299Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T02:26:27.391Z","type":"quit"}
{"nick":"ofrobots","date":"2016-02-26T03:22:33.269Z","type":"join"}
{"nick":"phpnode","reason":"Ping timeout: 244 seconds","date":"2016-02-26T03:35:10.138Z","type":"quit"}
{"nick":"phpnode","date":"2016-02-26T03:48:38.232Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T04:04:00.717Z","type":"quit"}
{"nick":"ofrobots","date":"2016-02-26T04:10:55.732Z","type":"join"}
{"nick":"Fishrock123","date":"2016-02-26T04:16:03.223Z","type":"join"}
{"nick":"Fishrock123","reason":"Ping timeout: 240 seconds","date":"2016-02-26T04:21:03.961Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T04:25:13.018Z","type":"quit"}
{"nick":"watilde","date":"2016-02-26T04:28:37.475Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 250 seconds","date":"2016-02-26T04:33:33.105Z","type":"quit"}
{"nick":"ofrobots","date":"2016-02-26T04:50:48.696Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux%20-%20nosnap/builds/6812 \"V8 Linux - nosnap\" from a40830577d80f699282dd83864619656b7a7966c: littledan@chromium.org)","date":"2016-02-26T05:20:53.536Z","type":"message"}
{"nick":"watilde","date":"2016-02-26T05:30:05.583Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T05:30:55.006Z","type":"quit"}
{"nick":"watilde","reason":"Ping timeout: 250 seconds","date":"2016-02-26T05:34:39.078Z","type":"quit"}
{"nick":"ofrobots","date":"2016-02-26T05:58:58.343Z","type":"join"}
{"nick":"Fishrock123","date":"2016-02-26T06:10:02.283Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by dehrenberg@google.com: open (reverted breaking patch)","date":"2016-02-26T06:14:09.539Z","type":"message"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2016-02-26T06:18:41.027Z","type":"quit"}
{"nick":"watilde","date":"2016-02-26T06:30:18.465Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 250 seconds","date":"2016-02-26T06:34:53.046Z","type":"quit"}
{"nick":"watilde","date":"2016-02-26T07:47:01.221Z","type":"join"}
{"nick":"bnoordhuis","date":"2016-02-26T07:57:13.732Z","type":"join"}
{"nick":"watilde","reason":"Remote host closed the connection","date":"2016-02-26T07:58:12.091Z","type":"quit"}
{"nick":"rendar","date":"2016-02-26T08:01:05.515Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T08:24:20.391Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2016-02-26T08:33:59.714Z","type":"quit"}
{"nick":"ofrobots","date":"2016-02-26T08:51:24.536Z","type":"join"}
{"nick":"watilde","date":"2016-02-26T08:58:45.236Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 240 seconds","date":"2016-02-26T09:03:59.727Z","type":"quit"}
{"nick":"behelit","date":"2016-02-26T09:10:09.541Z","type":"join"}
{"nick":"petka____","date":"2016-02-26T09:12:46.141Z","type":"join"}
{"nick":"C-Man","date":"2016-02-26T09:19:04.984Z","type":"join"}
{"nick":"behelit","message":"hi guys. when i attempted to build v8 on my dev machine this morning i get an error when linking mksnapshot","date":"2016-02-26T09:31:57.493Z","type":"message"}
{"nick":"behelit","message":"http://dpaste.com/2PKJC53","date":"2016-02-26T09:32:01.797Z","type":"message"}
{"nick":"behelit","message":"\"unsupported reloc 42\"","date":"2016-02-26T09:32:10.770Z","type":"message"}
{"nick":"behelit","message":"i'm guessing i updated my system in between builds and that something (clang or whatnot) is not compatible","date":"2016-02-26T09:32:41.889Z","type":"message"}
{"nick":"behelit","message":"any ideas?","date":"2016-02-26T09:32:50.743Z","type":"message"}
{"nick":"cjihrig_","date":"2016-02-26T09:33:20.338Z","type":"join"}
{"nick":"esas","reason":"Ping timeout: 240 seconds","date":"2016-02-26T09:35:01.691Z","type":"quit"}
{"nick":"cjihrig","reason":"Ping timeout: 240 seconds","date":"2016-02-26T09:35:01.896Z","type":"quit"}
{"nick":"cjihrig_","new_nick":"cjihrig","date":"2016-02-26T09:35:02.118Z","type":"nick"}
{"nick":"behelit","message":"might be bundled binutils","date":"2016-02-26T09:35:33.519Z","type":"message"}
{"nick":"JoWie","date":"2016-02-26T09:35:35.117Z","type":"join"}
{"nick":"behelit","message":"attempting to build without bundled binutils","date":"2016-02-26T09:38:23.460Z","type":"message"}
{"nick":"bnoordhuis","date":"2016-02-26T09:40:18.751Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2016-02-26T09:44:29.697Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T09:53:17.591Z","type":"quit"}
{"nick":"xaxxon","message":"behelit sorry, no clue.  this place is almost always dead","date":"2016-02-26T09:57:42.133Z","type":"message"}
{"nick":"watilde","date":"2016-02-26T09:59:49.210Z","type":"join"}
{"nick":"behelit","message":"ah","date":"2016-02-26T10:02:43.075Z","type":"message"}
{"nick":"watilde","reason":"Ping timeout: 240 seconds","date":"2016-02-26T10:04:59.696Z","type":"quit"}
{"nick":"xiinotulp","date":"2016-02-26T10:17:54.335Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 252 seconds","date":"2016-02-26T10:21:16.436Z","type":"quit"}
{"nick":"xiinotulp","new_nick":"plutoniix","date":"2016-02-26T10:42:03.008Z","type":"nick"}
{"nick":"behelit","message":"-Dlinux_use_bundled_binutils=0 seems to have solved it, for reference","date":"2016-02-26T11:00:44.065Z","type":"message"}
{"nick":"watilde","date":"2016-02-26T11:01:03.099Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 255 seconds","date":"2016-02-26T11:06:43.686Z","type":"quit"}
{"nick":"bnoordhuis","date":"2016-02-26T11:37:05.172Z","type":"join"}
{"nick":"watilde","date":"2016-02-26T12:02:44.769Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 276 seconds","date":"2016-02-26T12:08:00.312Z","type":"quit"}
{"nick":"xaxxon","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T12:11:38.718Z","type":"quit"}
{"nick":"watilde","date":"2016-02-26T13:03:47.006Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 244 seconds","date":"2016-02-26T13:08:09.213Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 250 seconds","date":"2016-02-26T13:14:51.057Z","type":"quit"}
{"nick":"watilde","date":"2016-02-26T14:04:44.257Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 250 seconds","date":"2016-02-26T14:09:01.080Z","type":"quit"}
{"nick":"bnoordhuis","date":"2016-02-26T14:21:07.698Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2016-02-26T14:25:29.728Z","type":"quit"}
{"nick":"davi","date":"2016-02-26T14:43:16.345Z","type":"join"}
{"nick":"davi","reason":"Changing host","date":"2016-02-26T14:43:16.345Z","type":"quit"}
{"nick":"davi","date":"2016-02-26T14:43:16.345Z","type":"join"}
{"nick":"jugglinmike","date":"2016-02-26T14:44:34.092Z","type":"join"}
{"nick":"davi","reason":"Ping timeout: 244 seconds","date":"2016-02-26T14:48:54.150Z","type":"quit"}
{"nick":"ofrobots","date":"2016-02-26T14:50:27.521Z","type":"join"}
{"nick":"watilde","date":"2016-02-26T15:05:02.059Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 240 seconds","date":"2016-02-26T15:09:59.968Z","type":"quit"}
{"nick":"bnoordhuis","date":"2016-02-26T15:13:53.017Z","type":"join"}
{"nick":"davi__","date":"2016-02-26T15:25:14.777Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T15:33:16.543Z","type":"quit"}
{"nick":"ofrobots","date":"2016-02-26T15:50:50.260Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T15:59:10.276Z","type":"quit"}
{"nick":"jugglinmike1","date":"2016-02-26T16:07:10.090Z","type":"join"}
{"nick":"jugglinmike","reason":"Quit: Leaving.","date":"2016-02-26T16:07:11.323Z","type":"quit"}
{"nick":"Fishrock123","date":"2016-02-26T16:09:45.729Z","type":"join"}
{"nick":"ofrobots","date":"2016-02-26T16:12:21.114Z","type":"join"}
{"nick":"davi__","reason":"Ping timeout: 252 seconds","date":"2016-02-26T16:20:58.645Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-02-26T16:38:19.677Z","type":"quit"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2010030309]","date":"2016-02-26T16:42:29.248Z","type":"quit"}
{"nick":"ofrobots","date":"2016-02-26T16:44:01.617Z","type":"join"}
