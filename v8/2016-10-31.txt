{"nick":"xaxxon","message":"koldbrutality, commit: a05f85a3db33860f7f9651d904fd4193ee757848    `v8::internal::Runtime_KeyedStoreIC_Miss(args_length=5, args_object=0x00007fff5fbfdfb8, isolate=0x0000000104800000) + 297 at ic.cc:2488 v8::internal::__RT_impl_Runtime_KeyedStoreIC_Miss(args=Arguments @ 0x00007fff5fbfde60, isolate=0x0000000104800000) + 775 at ic.cc:2502  v8::internal::KeyedStoreIC::Store(this=0x00007fff5fbfdd60, object=Handle<v8::internal::Object> @ 0x00007","date":"2016-10-31T01:07:11.534Z","type":"message"}
{"nick":"xaxxon","message":"fff5fbfdcd8, key=Handle<v8::internal::Object> @ 0x00007fff5fbfdcd0, value=Handle<v8::internal::Object> @ 0x00007fff5fbfdcc8) + 2135 at ic.cc:2207","date":"2016-10-31T01:07:11.737Z","type":"message"}
{"nick":"xaxxon","message":"vs v8::internal::Runtime_StoreIC_Miss(args_length=5, args_object=0x00007fff5b03cce8, isolate=0x00007fdf49801000) + 297 at ic.cc:2460 v8::internal::__RT_impl_Runtime_StoreIC_Miss(args=Arguments @ 0x00007fff5b03cb18, isolate=0x00007fdf49801000) + 945 at ic.cc:2475 v8::internal::StoreIC::Store(this=0x00007fff5b03ca10, object=Handle<v8::internal::Object> @ 0x00007fff5b03c858, name=Handle<v8::internal::Name> @ 0x00007fff5b03c850, value=Handle<v","date":"2016-10-31T01:07:50.775Z","type":"message"}
{"nick":"xaxxon","message":"8::internal::Object> @ 0x00007fff5b03c848, store_mode=CERTAINLY_NOT_STORE_FROM_KEYED) + 1748 at ic.cc:1625 v8::internal::Object::SetProperty(it=0x00007fff5b03c6d8, value=Handle<v8::internal::Object> @ 0x00007fff5b03c610, language_mode=SLOPPY, store_mode=CERTAINLY_NOT_STORE_FROM_KEYED) + 82 at objects.cc:4713","date":"2016-10-31T01:07:51.017Z","type":"message"}
{"nick":"xaxxon","message":"hrmm","date":"2016-10-31T01:07:53.126Z","type":"message"}
{"nick":"xaxxon","message":"that was dumb","date":"2016-10-31T01:07:54.739Z","type":"message"}
{"nick":"xaxxon","message":"han gon","date":"2016-10-31T01:07:56.414Z","type":"message"}
{"nick":"xaxxon","message":"but anyhow, that was the commit","date":"2016-10-31T01:08:10.504Z","type":"message"}
{"nick":"xaxxon","message":"koldbrutality, both stack traces: https://gist.github.com/xaxxon/5eabcc079a3103abd0f7b3239b2cf3b2","date":"2016-10-31T01:08:59.340Z","type":"message"}
{"nick":"xaxxon","message":"does it matter if the object with the interceptor comes from a template the context was created from or if it was added after the context was created?","date":"2016-10-31T01:19:49.236Z","type":"message"}
{"nick":"xaxxon","message":"nope.   it doesn't.","date":"2016-10-31T01:48:45.166Z","type":"message"}
{"nick":"plutoniix","date":"2016-10-31T02:21:04.221Z","type":"join"}
{"nick":"koldbrutality","message":"it already creates an interceptor when you call it","date":"2016-10-31T02:58:31.483Z","type":"message"}
{"nick":"xaxxon","message":"ok, well I'm out of ideas :(   Hopefully someone on v8-users will have some ideas","date":"2016-10-31T04:14:35.969Z","type":"message"}
{"nick":"xaxxon","message":"i can't seem to find anything on what it means to be a keyed store vs not","date":"2016-10-31T04:31:09.421Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2016-10-31T05:04:31.855Z","type":"quit"}
{"nick":"thefourtheye","date":"2016-10-31T05:15:33.599Z","type":"join"}
{"nick":"plutoniix","date":"2016-10-31T06:48:20.863Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2016-10-31T06:48:23.862Z","type":"quit"}
{"nick":"plutoniix","date":"2016-10-31T06:49:52.309Z","type":"join"}
{"nick":"xaxxon","message":"plutoniix, thefourtheye anyone have any idea why when I register a named property handler, when I do a set, why it would call either the query or (if there is no query) a getter callback instead of a setter?   I can't repro it with simplfied code, either.   The only thing I see is the one that works does a keyed store and the one that doesn't isn't a keyed store.   Thank you.","date":"2016-10-31T07:22:32.018Z","type":"message"}
{"nick":"Keverw","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2016-10-31T07:34:02.221Z","type":"quit"}
{"nick":"xaxxon","message":"or I guess.. it means \"holder isnt receiver\" but I'm not 100% on holder.   that means holder != this... but still not 100% on what it means","date":"2016-10-31T07:55:05.521Z","type":"message"}
{"nick":"thefourtheye","reason":"Quit: Connection closed for inactivity","date":"2016-10-31T08:02:13.722Z","type":"quit"}
{"nick":"xaxxon","message":"reading that thread about it again","date":"2016-10-31T08:12:39.701Z","type":"message"}
{"nick":"xaxxon","message":"I guess I'm seeing why it doesn't work.. because I'm not asking it to write to the object I set the handler on","date":"2016-10-31T08:27:32.897Z","type":"message"}
{"nick":"xaxxon","message":"i'm not sure how/why it's a different object, but I guess it makes sense","date":"2016-10-31T08:27:44.942Z","type":"message"}
{"nick":"xaxxon","message":"does it somehow know if I put an object in an internal field?","date":"2016-10-31T08:32:42.391Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2016-10-31T08:36:12.335Z","type":"quit"}
{"nick":"xaxxon","message":"so maybe a better question to ask... how do I map arbitrary property sets back to a std::map embedded in the internalfield of an object?","date":"2016-10-31T08:36:13.629Z","type":"message"}
{"nick":"plutoniix","date":"2016-10-31T08:56:30.041Z","type":"join"}
{"nick":"xaxxon","message":"got my answer on mailing list.","date":"2016-10-31T09:07:40.079Z","type":"message"}
{"nick":"xaxxon","message":"but I still do'nt know exactly what it is I'm doing that causes the holder != this :(","date":"2016-10-31T10:17:11.484Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2016-10-31T10:27:38.560Z","type":"quit"}
{"nick":"caitp-","new_nick":"caitp","date":"2016-10-31T11:27:26.243Z","type":"nick"}
{"nick":"xaxxon","reason":"Quit: This computer has gone to sleep","date":"2016-10-31T12:32:34.965Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-10-31T13:01:36.773Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-10-31T13:23:29.157Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-10-31T13:26:43.089Z","type":"join"}
{"nick":"bradleymeck_","date":"2016-10-31T14:09:42.599Z","type":"join"}
{"nick":"bradleymeck","reason":"Ping timeout: 265 seconds","date":"2016-10-31T14:10:05.722Z","type":"quit"}
{"nick":"bradleymeck_","new_nick":"bradleymeck","date":"2016-10-31T14:10:05.863Z","type":"nick"}
{"nick":"mikolalysenko","reason":"Ping timeout: 250 seconds","date":"2016-10-31T14:19:54.953Z","type":"quit"}
{"nick":"mikolalysenko","date":"2016-10-31T14:21:28.784Z","type":"join"}
{"nick":"aklein","reason":"Ping timeout: 250 seconds","date":"2016-10-31T15:31:50.935Z","type":"quit"}
{"nick":"aklein","date":"2016-10-31T15:33:25.851Z","type":"join"}
{"nick":"seventh","date":"2016-10-31T15:52:52.144Z","type":"join"}
