{"nick":"jgi","reason":"Quit: jgi","date":"2016-01-07T00:08:03.189Z","type":"quit"}
{"nick":"jgi","date":"2016-01-07T00:13:34.473Z","type":"join"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2016-01-07T00:29:30.975Z","type":"quit"}
{"nick":"xaxxon","date":"2016-01-07T00:39:29.740Z","type":"join"}
{"nick":"xaxxon","message":"what's the \"right way\" to wrap an context and a global object template into a class?   I'm fighting with handlescopes and don't completely understand when things are valid vs invalid","date":"2016-01-07T00:40:28.453Z","type":"message"}
{"nick":"xaxxon","message":"can I just create a HandleScope as the first thing in my main() and everything will use that forever?  (not saying that's the best idea but conceptually?)","date":"2016-01-07T00:41:07.600Z","type":"message"}
{"nick":"xaxxon","message":"when escapable handle scope says it will move your handle to the containing scope, would that refer to the \"main\" handlescope I metnioned above?","date":"2016-01-07T00:41:51.399Z","type":"message"}
{"nick":"watilde","date":"2016-01-07T00:47:19.120Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 255 seconds","date":"2016-01-07T00:52:20.951Z","type":"quit"}
{"nick":"bobmcw","date":"2016-01-07T01:00:42.690Z","type":"join"}
{"nick":"bobmcw","reason":"Changing host","date":"2016-01-07T01:00:42.899Z","type":"quit"}
{"nick":"bobmcw","date":"2016-01-07T01:00:42.899Z","type":"join"}
{"nick":"bobmcw","reason":"Ping timeout: 272 seconds","date":"2016-01-07T01:06:42.485Z","type":"quit"}
{"nick":"jugglinmike","reason":"Ping timeout: 272 seconds","date":"2016-01-07T01:23:10.491Z","type":"quit"}
{"nick":"JoWie","reason":"Quit: Connection closed for inactivity","date":"2016-01-07T01:39:40.933Z","type":"quit"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-01-07T01:46:41.253Z","type":"quit"}
{"nick":"xaxxon","message":"oh.. persistent/global","date":"2016-01-07T01:52:03.145Z","type":"message"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-01-07T02:03:47.311Z","type":"quit"}
{"nick":"ofrobots","date":"2016-01-07T02:10:38.648Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-01-07T02:17:28.097Z","type":"quit"}
{"nick":"xaxxon","message":"having a lot of trouble passing a Script object out of a function and then using it later... Persistent gives compiler errors and Global isn't right because I need to pass it in and out of functions on a regular basis and don't want to throw ownership around with it","date":"2016-01-07T02:37:59.037Z","type":"message"}
{"nick":"xaxxon","message":"and so much of the docs on persistent are out of date..","date":"2016-01-07T02:44:07.044Z","type":"message"}
{"nick":"xaxxon","message":"maybe it's this copyable trait thing","date":"2016-01-07T02:48:02.745Z","type":"message"}
{"nick":"xaxxon","message":"man... it's always someting wrong and I think it's mostly related to me not undersatnding the scope of different handle types","date":"2016-01-07T03:05:26.672Z","type":"message"}
{"nick":"xaxxon","message":"globals are what used to be called uniquepersistent right?","date":"2016-01-07T03:18:44.412Z","type":"message"}
{"nick":"xaxxon","message":"looks like there's a typedef somewhere","date":"2016-01-07T03:18:54.039Z","type":"message"}
{"nick":"xaxxon","message":"can't get past this isolate native context being null...","date":"2016-01-07T03:21:18.531Z","type":"message"}
{"nick":"xaxxon","message":"maybe I Forgot a contextscope","date":"2016-01-07T03:52:02.387Z","type":"message"}
{"nick":"xaxxon","message":"well, that was at least part of it.. now chances are like 6 different things I tried would have worked if I had had a context scope","date":"2016-01-07T03:53:53.964Z","type":"message"}
{"nick":"xaxxon","message":"fuck the lack of state checking in v8... ","date":"2016-01-07T03:54:01.994Z","type":"message"}
{"nick":"xaxxon","message":"something wrong?  just crash","date":"2016-01-07T03:54:04.985Z","type":"message"}
{"nick":"xaxxon","message":"yeah, the scopes were my whole problem... missing context scope at compile time and then isolate scope at runtime","date":"2016-01-07T04:06:36.393Z","type":"message"}
{"nick":"ofrobots","date":"2016-01-07T04:08:11.675Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-01-07T04:36:32.597Z","type":"quit"}
{"nick":"ofrobots","date":"2016-01-07T04:51:09.860Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-01-07T05:03:27.746Z","type":"quit"}
{"nick":"ofrobots","date":"2016-01-07T05:07:49.304Z","type":"join"}
{"nick":"ofrobots","reason":"Ping timeout: 255 seconds","date":"2016-01-07T05:12:27.087Z","type":"quit"}
{"nick":"ofrobots","date":"2016-01-07T05:21:57.290Z","type":"join"}
{"nick":"jgi","date":"2016-01-07T05:38:26.466Z","type":"join"}
{"nick":"watilde","date":"2016-01-07T05:43:35.341Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-01-07T05:46:18.849Z","type":"quit"}
{"nick":"watilde","reason":"Ping timeout: 264 seconds","date":"2016-01-07T05:48:11.892Z","type":"quit"}
{"nick":"ofrobots","date":"2016-01-07T06:04:41.386Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-01-07T06:14:06.057Z","type":"quit"}
{"nick":"BobGneu","reason":"Ping timeout: 265 seconds","date":"2016-01-07T06:20:55.697Z","type":"quit"}
{"nick":"ofrobots","date":"2016-01-07T06:44:39.492Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-01-07T06:58:50.335Z","type":"quit"}
{"nick":"bobmcw","date":"2016-01-07T07:05:38.584Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-01-07T07:07:42.669Z","type":"quit"}
{"nick":"bobmcw","reason":"Ping timeout: 264 seconds","date":"2016-01-07T07:11:00.016Z","type":"quit"}
{"nick":"BobGneu","date":"2016-01-07T07:19:39.967Z","type":"join"}
{"nick":"ofrobots","date":"2016-01-07T07:27:36.491Z","type":"join"}
{"nick":"davi","date":"2016-01-07T07:38:45.680Z","type":"join"}
{"nick":"davi","reason":"Changing host","date":"2016-01-07T07:38:45.680Z","type":"quit"}
{"nick":"davi","date":"2016-01-07T07:38:45.874Z","type":"join"}
{"nick":"watilde","date":"2016-01-07T07:45:07.785Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 276 seconds","date":"2016-01-07T07:50:38.146Z","type":"quit"}
{"nick":"rendar","date":"2016-01-07T07:51:32.209Z","type":"join"}
{"nick":"JoWie","date":"2016-01-07T07:53:50.313Z","type":"join"}
{"nick":"mostynb","date":"2016-01-07T08:06:18.103Z","type":"join"}
{"nick":"xaxxon","reason":"Quit: Leaving","date":"2016-01-07T08:15:33.115Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-01-07T08:29:46.520Z","type":"quit"}
{"nick":"davi","reason":"Ping timeout: 250 seconds","date":"2016-01-07T09:08:02.988Z","type":"quit"}
{"nick":"BobGneu","reason":"Remote host closed the connection","date":"2016-01-07T09:11:02.537Z","type":"quit"}
{"nick":"davi","date":"2016-01-07T09:41:58.102Z","type":"join"}
{"nick":"davi","reason":"Changing host","date":"2016-01-07T09:41:58.103Z","type":"quit"}
{"nick":"davi","date":"2016-01-07T09:41:58.103Z","type":"join"}
{"nick":"bnoordhuis","date":"2016-01-07T09:49:43.210Z","type":"join"}
{"nick":"watilde","date":"2016-01-07T09:50:14.441Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 260 seconds","date":"2016-01-07T09:54:55.269Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2016-01-07T11:36:06.006Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 276 seconds","date":"2016-01-07T11:39:26.145Z","type":"quit"}
{"nick":"esas","reason":"Ping timeout: 265 seconds","date":"2016-01-07T11:41:22.908Z","type":"quit"}
{"nick":"watilde","date":"2016-01-07T11:51:45.707Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 240 seconds","date":"2016-01-07T11:56:35.795Z","type":"quit"}
{"nick":"evanluca_","reason":"Read error: Connection reset by peer","date":"2016-01-07T12:02:39.043Z","type":"quit"}
{"nick":"evanlucas","date":"2016-01-07T12:04:41.677Z","type":"join"}
{"nick":"evanlucas","reason":"Read error: Connection reset by peer","date":"2016-01-07T12:35:16.045Z","type":"quit"}
{"nick":"evanlucas","date":"2016-01-07T12:35:55.905Z","type":"join"}
{"nick":"bobmcw","date":"2016-01-07T12:40:32.560Z","type":"join"}
{"nick":"bnoordhuis","date":"2016-01-07T12:44:59.316Z","type":"join"}
{"nick":"bobmcw","reason":"Ping timeout: 240 seconds","date":"2016-01-07T12:45:15.861Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2016-01-07T12:49:26.346Z","type":"quit"}
{"nick":"evanlucas","reason":"Read error: Connection reset by peer","date":"2016-01-07T13:06:01.009Z","type":"quit"}
{"nick":"evanlucas","date":"2016-01-07T13:06:17.421Z","type":"join"}
{"nick":"behelit","reason":"Quit: ZNC - http://znc.in","date":"2016-01-07T13:18:59.680Z","type":"quit"}
{"nick":"behelit","date":"2016-01-07T13:19:13.830Z","type":"join"}
{"nick":"trungl-bot`","message":"\u00034\u0002Tree closed\u000f by machenbach@chromium.org: closed (maintenance)","date":"2016-01-07T13:29:44.553Z","type":"message"}
{"nick":"watilde","date":"2016-01-07T13:54:01.509Z","type":"join"}
{"nick":"ofrobots","date":"2016-01-07T13:58:04.417Z","type":"join"}
{"nick":"watilde","reason":"Ping timeout: 246 seconds","date":"2016-01-07T13:58:14.777Z","type":"quit"}
{"nick":"evanlucas","new_nick":"evanluca_","date":"2016-01-07T14:02:16.673Z","type":"nick"}
{"nick":"trungl-bot`","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: open","date":"2016-01-07T14:08:58.587Z","type":"message"}
{"nick":"xaxxon","date":"2016-01-07T14:20:19.700Z","type":"join"}
{"nick":"evanluca_","new_nick":"evanlucas","date":"2016-01-07T14:21:12.835Z","type":"nick"}
{"nick":"xaxxon","message":"after I've created a context, if I want to set a javascript variable to a specific value from c++, how do I do it?   I thought it looked at the global template at runtime, but data suggests it only looks at your objecttemplate during context creation and never again","date":"2016-01-07T14:21:13.220Z","type":"message"}
{"nick":"xaxxon","message":"as in if I ->Set it before I create the context, it's seen, but if I do it after, it's not.","date":"2016-01-07T14:21:34.535Z","type":"message"}
{"nick":"caitp","message":"uh","date":"2016-01-07T14:21:45.943Z","type":"message"}
{"nick":"caitp","message":"have you entered the context? j/w","date":"2016-01-07T14:22:05.074Z","type":"message"}
{"nick":"xaxxon","message":"I don't know what that means...","date":"2016-01-07T14:22:19.675Z","type":"message"}
{"nick":"xaxxon","message":"I understand what my code does I just don't know exactly what that phrase refers to","date":"2016-01-07T14:22:38.375Z","type":"message"}
{"nick":"xaxxon","message":"does that mean in a context scope?  ","date":"2016-01-07T14:22:45.971Z","type":"message"}
{"nick":"caitp","message":"yes","date":"2016-01-07T14:23:06.511Z","type":"message"}
{"nick":"caitp","message":"I'm not sure if that's necessary, though","date":"2016-01-07T14:23:16.825Z","type":"message"}
{"nick":"bnoordhuis","date":"2016-01-07T14:24:14.239Z","type":"join"}
{"nick":"xaxxon","message":"well, if I create ObjTemp, create context(ObjTemp), objTEmp->set(...) the set isn't seen.   if I create ObjTemp, , objTEmp->set(...) , create context(ObjTemp) it IS seen.   I don't think I've tried doing the ->Set while in a context scope","date":"2016-01-07T14:24:31.266Z","type":"message"}
{"nick":"xaxxon","message":"caitp, so it is supposed to look back at the global object template?","date":"2016-01-07T14:24:57.662Z","type":"message"}
{"nick":"xaxxon","message":"afayk?","date":"2016-01-07T14:25:01.768Z","type":"message"}
{"nick":"caitp","message":"I don't use the API a whole lot, mostly work on the internal side of things, but maybe if you post some code I could piece it together =)","date":"2016-01-07T14:25:31.455Z","type":"message"}
{"nick":"xaxxon","message":"ok","date":"2016-01-07T14:25:40.981Z","type":"message"}
{"nick":"caitp","message":"and your v8 version would help, too","date":"2016-01-07T14:25:54.685Z","type":"message"}
{"nick":"xaxxon","message":"4.9","date":"2016-01-07T14:25:58.217Z","type":"message"}
{"nick":"xaxxon","message":"that's latest release, right?","date":"2016-01-07T14:26:11.817Z","type":"message"}
{"nick":"bobmcw","date":"2016-01-07T14:27:29.186Z","type":"join"}
{"nick":"xaxxon","message":"https://gist.github.com/xaxxon/bffe70dc93abca22ead3  ","date":"2016-01-07T14:31:48.450Z","type":"message"}
{"nick":"xaxxon","message":"There's a bunch of code because I don't know what's important...  but it's fairly straight forward I hope","date":"2016-01-07T14:32:04.851Z","type":"message"}
{"nick":"xaxxon","message":"any pointers on use of different handle types and scopes would be great too... I just toss stuff in places until it compiles :-\\","date":"2016-01-07T14:32:57.958Z","type":"message"}
{"nick":"xaxxon","message":"caitp, thank you","date":"2016-01-07T14:33:11.548Z","type":"message"}
{"nick":"caitp","message":"hang on a sec, booking a flight","date":"2016-01-07T14:33:21.690Z","type":"message"}
{"nick":"xaxxon","message":"yeah, no worries!","date":"2016-01-07T14:33:27.347Z","type":"message"}
{"nick":"xaxxon","message":"coming to seattle?","date":"2016-01-07T14:33:31.151Z","type":"message"}
{"nick":"xaxxon","message":"I'll buy you beers","date":"2016-01-07T14:33:41.902Z","type":"message"}
{"nick":"mostynb","reason":"Quit: -","date":"2016-01-07T14:37:02.370Z","type":"quit"}
{"nick":"jugglinmike","date":"2016-01-07T14:49:25.462Z","type":"join"}
{"nick":"caitp","message":"neh, just SF","date":"2016-01-07T14:59:38.951Z","type":"message"}
{"nick":"caitp","message":"alright, lets see","date":"2016-01-07T14:59:45.791Z","type":"message"}
{"nick":"xaxxon","message":"whatever we find out I'll write up on stack overflow or somewhere so other people can find it, too","date":"2016-01-07T15:05:08.588Z","type":"message"}
{"nick":"xaxxon","message":"also I just double checked v8-version.h.  I'm on 4.9.0.0","date":"2016-01-07T15:09:19.947Z","type":"message"}
{"nick":"caitp","message":"in d8, the context is created differently","date":"2016-01-07T15:22:19.206Z","type":"message"}
{"nick":"caitp","message":"I see that you're trying to create it as a CopyablePersistent, but...","date":"2016-01-07T15:22:30.234Z","type":"message"}
{"nick":"caitp","message":"that looks like the only difference that I can see","date":"2016-01-07T15:22:42.257Z","type":"message"}
{"nick":"xaxxon","message":"I just couldn't figure out how to get it out of the function","date":"2016-01-07T15:22:44.093Z","type":"message"}
{"nick":"xaxxon","message":"I don't understand the whole local/persistent/global/external...","date":"2016-01-07T15:23:06.476Z","type":"message"}
{"nick":"caitp","message":"yeah, it's admittedly confusing","date":"2016-01-07T15:23:19.236Z","type":"message"}
{"nick":"xaxxon","message":"I store the values in a class for use spanning the different methods","date":"2016-01-07T15:23:21.119Z","type":"message"}
{"nick":"xaxxon","message":"you can't just ship a Local out of it's HandleScope, right?  cuz it gets cleaned up when the stack gets cleaned up, right?","date":"2016-01-07T15:23:55.864Z","type":"message"}
{"nick":"xaxxon","message":"and since this wrapper object gets shipped around, there's no clear containing handlescope to use an escapablehandlescope for (though the docs on that are lacking)","date":"2016-01-07T15:24:39.147Z","type":"message"}
{"nick":"xaxxon","message":"so it seemed like a persistent was the right thing... that type is just a typedef:  template <class T> using CopyablePersistent = v8::Persistent<T, v8::CopyablePersistentTraits<T>>;","date":"2016-01-07T15:25:11.315Z","type":"message"}
{"nick":"xaxxon","message":"without the CopyablePersistentTraits I was getting errors creating persistent v8::Script objects","date":"2016-01-07T15:25:34.734Z","type":"message"}
{"nick":"xaxxon","message":"but.. I don't know what that does, I just read somewhere to try it... I think I could not use that on the context","date":"2016-01-07T15:25:55.387Z","type":"message"}
{"nick":"xaxxon","message":"if I get rid of the copyable bit, I get this error message: /users/xaxxon/v8/include/v8.h:680:5: error: assigning to 'v8::Object *volatile' from incompatible type 'v8::Primitive *'","date":"2016-01-07T15:27:36.994Z","type":"message"}
{"nick":"xaxxon","message":"and I don't know what that means","date":"2016-01-07T15:27:52.098Z","type":"message"}
{"nick":"xaxxon","message":"\tv8::Persistent<v8::Context> get_context(){return this->context;}","date":"2016-01-07T15:29:02.281Z","type":"message"}
{"nick":"xaxxon","message":"that's the line that causes the error - if I remove the copyable trait.. ","date":"2016-01-07T15:29:23.637Z","type":"message"}
{"nick":"caitp","message":"by default, they're non-copyable, eg no assignment operator or copyconstructor","date":"2016-01-07T15:30:02.364Z","type":"message"}
{"nick":"caitp","message":"it's just code designed to produce a compiler error if you usei t","date":"2016-01-07T15:30:17.482Z","type":"message"}
{"nick":"xaxxon","message":"oh ok","date":"2016-01-07T15:30:23.200Z","type":"message"}
{"nick":"xaxxon","message":"caitp, I am having a lot of time going from the simple examples on the \"v8 embedder's guide\" to actual real-world stuff where it's not all just one function with a constant stack shared amongst all the calls","date":"2016-01-07T15:31:30.090Z","type":"message"}
{"nick":"caitp","message":"for what it's worth, Chromium creates a Local<v8::Context> using v8::Context::New()","date":"2016-01-07T15:31:38.049Z","type":"message"}
{"nick":"caitp","message":"just like d8","date":"2016-01-07T15:31:42.341Z","type":"message"}
{"nick":"xaxxon","message":"caitp, I've been trying to reference process.cc as well","date":"2016-01-07T15:31:48.877Z","type":"message"}
{"nick":"caitp","message":"the CopyablePersristent approach might be the wrong strategy","date":"2016-01-07T15:31:51.344Z","type":"message"}
{"nick":"caitp","message":"I think the template needs to be persistent, but not the actual context","date":"2016-01-07T15:32:29.332Z","type":"message"}
{"nick":"xaxxon","message":"I am doing that too:  Local<v8::Context> using v8::Context::New()","date":"2016-01-07T15:32:37.892Z","type":"message"}
{"nick":"caitp","message":"ah so you are","date":"2016-01-07T15:33:08.741Z","type":"message"}
{"nick":"xaxxon","message":"\t\tauto local_context = v8::Context::New(this->isolate, NULL, ot);","date":"2016-01-07T15:33:08.973Z","type":"message"}
{"nick":"xaxxon","message":"are persistent and global similar to a \"normal pointer\" and a std::unique_ptr?","date":"2016-01-07T15:34:07.629Z","type":"message"}
{"nick":"xaxxon","message":"also I updated that gist with the class definition.. ","date":"2016-01-07T15:34:54.724Z","type":"message"}
{"nick":"xaxxon","message":"the context member when I copy/pasted was back to a \"normal\" persistent, but that doesn't compile","date":"2016-01-07T15:35:29.773Z","type":"message"}
{"nick":"caitp","message":"it probably doesn't need to be persistent, you just need to keep it alive throughout the lifetime of your program","date":"2016-01-07T15:36:14.715Z","type":"message"}
{"nick":"caitp","message":"or of your use of it","date":"2016-01-07T15:36:19.018Z","type":"message"}
{"nick":"plutoniix","date":"2016-01-07T15:37:19.877Z","type":"join"}
{"nick":"xaxxon","message":"ok, so when you create a Local<..> that means it's tied to the stack lifetime of the handlescope that exists when you create the Local right?  so if you want to keep it around past then, how are you supposed to do it?  I thought that was what persistent and global were for.. ","date":"2016-01-07T15:37:34.717Z","type":"message"}
{"nick":"caitp","message":"https://chromium.googlesource.com/chromium/src/+/master/third_party/WebKit/Source/bindings/core/v8/ScriptState.h seems to be the main context holder for chromium, which oilpan presumably gets rid of when finished with it","date":"2016-01-07T15:37:50.211Z","type":"message"}
{"nick":"xaxxon","message":"checking","date":"2016-01-07T15:37:59.364Z","type":"message"}
{"nick":"xaxxon","message":"ok, so in that file you linked, ScriptState has a member:         v8::Local<v8::Context> m_context;","date":"2016-01-07T15:41:46.347Z","type":"message"}
{"nick":"xaxxon","message":"I didn't think that was legal.. because I thought a local had to exist within a handlescope","date":"2016-01-07T15:42:21.099Z","type":"message"}
{"nick":"caitp","message":"whether that's the actual issue you're running into or not, I'm not sure =)","date":"2016-01-07T15:45:36.036Z","type":"message"}
{"nick":"caitp","message":"but you might want to give it a try and see","date":"2016-01-07T15:45:47.873Z","type":"message"}
{"nick":"caitp","message":"d8.cc is probably the simplest embedder reference you can look at, though","date":"2016-01-07T15:46:25.104Z","type":"message"}
{"nick":"xaxxon","message":"ok.   I'll take a look at it.   Thank you for your help","date":"2016-01-07T15:47:01.748Z","type":"message"}
{"nick":"mounibec","date":"2016-01-07T15:47:48.143Z","type":"join"}
{"nick":"mounibec","reason":"Client Quit","date":"2016-01-07T15:51:02.220Z","type":"quit"}
{"nick":"mounibec","date":"2016-01-07T15:51:26.712Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-01-07T15:53:10.816Z","type":"quit"}
{"nick":"watilde","date":"2016-01-07T15:56:14.509Z","type":"join"}
