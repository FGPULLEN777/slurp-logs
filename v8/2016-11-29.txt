{"nick":"Guest59","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-11-29T00:10:29.532Z","type":"quit"}
{"nick":"Guest59","date":"2016-11-29T00:12:03.767Z","type":"join"}
{"nick":"Guest59","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-11-29T00:28:21.452Z","type":"quit"}
{"nick":"Guest59","date":"2016-11-29T00:29:04.873Z","type":"join"}
{"nick":"hferreiro","reason":"Quit: Connection closed for inactivity","date":"2016-11-29T02:00:29.046Z","type":"quit"}
{"nick":"plutoniix","date":"2016-11-29T02:11:14.445Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2016-11-29T02:11:16.419Z","type":"quit"}
{"nick":"decoder","reason":"Ping timeout: 256 seconds","date":"2016-11-29T02:17:30.902Z","type":"quit"}
{"nick":"decoder","date":"2016-11-29T02:19:18.542Z","type":"join"}
{"nick":"xaxxon","date":"2016-11-29T03:22:04.992Z","type":"join"}
{"nick":"xaxxon","reason":"Quit: Leaving","date":"2016-11-29T03:48:28.522Z","type":"quit"}
{"nick":"plutoniix","date":"2016-11-29T05:13:56.182Z","type":"join"}
{"nick":"BobGneu","date":"2016-11-29T07:08:40.010Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Mjsunit\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux64%20GC%20Stress%20-%20custom%20snapshot/builds/9474 \"V8 Linux64 GC Stress - custom snapshot\" from 1e3c5c90cdb1d2b2e5a950d72cb509cfc341e374: jgruber@chromium.org)","date":"2016-11-29T07:58:08.776Z","type":"message"}
{"nick":"hferreiro","date":"2016-11-29T08:16:55.394Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: open","date":"2016-11-29T08:36:24.183Z","type":"message"}
{"nick":"plutoniix","reason":"Ping timeout: 240 seconds","date":"2016-11-29T09:38:57.124Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check,Check - extra\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux64%20TSAN/builds/12915 \"V8 Linux64 TSAN\" from fa2fdf275197185d9bca9d5e72c16a60722c3893: ahaas@chromium.org,hpayer@chromium.org,jgruber@chromium.org,mstarzinger@chromium.org)","date":"2016-11-29T09:47:51.244Z","type":"message"}
{"nick":"plutoniix","date":"2016-11-29T09:48:19.772Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by machenbach@chromium.org: closed - tsan fa2fdf275197 ? - waiting for bisect","date":"2016-11-29T09:50:52.865Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: open","date":"2016-11-29T10:05:59.276Z","type":"message"}
{"nick":"ebarrett","message":"caitp: here?","date":"2016-11-29T10:29:52.636Z","type":"message"}
{"nick":"ebarrett","message":"i was wondering where you read about the v8 versions?","date":"2016-11-29T10:33:24.746Z","type":"message"}
{"nick":"ebarrett","message":"perhaps in sync with chrome?","date":"2016-11-29T10:35:01.140Z","type":"message"}
{"nick":"ebarrett","message":"https://www.chromium.org/developers/calendar","date":"2016-11-29T10:35:04.497Z","type":"message"}
{"nick":"ebarrett","message":"caitp: this page says 5.4 is stable: https://omahaproxy.appspot.com/","date":"2016-11-29T10:39:42.428Z","type":"message"}
{"nick":"ebarrett","message":"5.5 is beta","date":"2016-11-29T10:40:59.269Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2016-11-29T10:42:41.840Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"compile\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux%20-%20shared/builds/14886 \"V8 Linux - shared\" from 1852300954c216c29cf93444430681d213e87925: leszeks@chromium.org)","date":"2016-11-29T10:49:17.059Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: open","date":"2016-11-29T10:52:17.998Z","type":"message"}
{"nick":"caitp","message":"ebarrett: 5.5 will be branched to stable in the next week","date":"2016-11-29T11:15:38.828Z","type":"message"}
{"nick":"ebarrett","message":"ok","date":"2016-11-29T11:16:49.346Z","type":"message"}
{"nick":"BobGneu","reason":"Read error: Connection reset by peer","date":"2016-11-29T11:38:02.215Z","type":"quit"}
{"nick":"plutoniix","date":"2016-11-29T13:40:19.028Z","type":"join"}
{"nick":"bobmcw","date":"2016-11-29T14:03:27.509Z","type":"join"}
{"nick":"sxa","reason":"Ping timeout: 244 seconds","date":"2016-11-29T14:21:57.427Z","type":"quit"}
{"nick":"sxa","date":"2016-11-29T14:47:39.630Z","type":"join"}
{"nick":"caitp","message":"anba is at it again","date":"2016-11-29T16:17:57.121Z","type":"message"}
{"nick":"bradleymeck","date":"2016-11-29T16:18:50.942Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2010030309]","date":"2016-11-29T16:23:06.738Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-11-29T16:25:07.437Z","type":"quit"}
{"nick":"seventh","date":"2016-11-29T16:56:46.898Z","type":"join"}
{"nick":"xaxxon","date":"2016-11-29T17:01:23.128Z","type":"join"}
{"nick":"gsathya","message":"caitp: the ispromise function installation code in boostrapper sets up the formal_parameter_count ","date":"2016-11-29T17:27:13.232Z","type":"message"}
{"nick":"gsathya","message":"(re: using kDontAdaptArgumentsSentinel)","date":"2016-11-29T17:27:59.237Z","type":"message"}
{"nick":"caitp","message":"I remember seeing a comment from Benedikt saying it was \"redundant and wrong\", though","date":"2016-11-29T17:28:18.218Z","type":"message"}
{"nick":"caitp","message":"maybe that was just for a stub","date":"2016-11-29T17:28:39.377Z","type":"message"}
{"nick":"caitp","message":"dunno","date":"2016-11-29T17:28:40.997Z","type":"message"}
{"nick":"caitp","message":"gsathya: anba's 2 bugs re: promises and async functions are the result of invalid optimizations in our code :\\","date":"2016-11-29T17:46:37.255Z","type":"message"}
{"nick":"caitp","message":"and I've just noticed that we have some weird observable behaviour that shouldn't be observable","date":"2016-11-29T17:46:49.661Z","type":"message"}
{"nick":"gsathya","message":"caitp: i don't think your comment#6 is non-compliance. Promise.resolve(p) should return p","date":"2016-11-29T17:58:15.355Z","type":"message"}
{"nick":"caitp","message":"I erased comment #6","date":"2016-11-29T17:58:32.998Z","type":"message"}
{"nick":"gsathya","message":"PromiseCastResolved is busted, we need a check for PromiseThen","date":"2016-11-29T17:58:36.798Z","type":"message"}
{"nick":"gsathya","message":"oh sorry","date":"2016-11-29T17:58:52.320Z","type":"message"}
{"nick":"caitp","message":"the get should be observable, you're right","date":"2016-11-29T17:59:00.082Z","type":"message"}
{"nick":"caitp","message":"but, we can't skip the enqueue promise job for builtin promises, unfortunately","date":"2016-11-29T17:59:10.129Z","type":"message"}
{"nick":"caitp","message":"we might be able to do a special promise job that doesn't call handler functions","date":"2016-11-29T17:59:35.587Z","type":"message"}
{"nick":"gsathya","message":"caitp: ugh, yes","date":"2016-11-29T18:15:10.485Z","type":"message"}
{"nick":"caitp","message":"I'm not sure it's worth having a separate path for builtin promises though","date":"2016-11-29T18:15:28.984Z","type":"message"}
{"nick":"gsathya","message":"it definitely is, we skip the runtime call to enqueue and a tick","date":"2016-11-29T18:16:33.726Z","type":"message"}
{"nick":"caitp","message":"well, not enqueueing the task is an observable spec violation, even though most people wouldn't notice","date":"2016-11-29T18:17:25.924Z","type":"message"}
{"nick":"gsathya","message":"well, according to the spec we should resolve in two ticks(one tick for enqueue, one tick for fulfill), but we do it in one, so it isn't noticeable ","date":"2016-11-29T18:18:37.428Z","type":"message"}
{"nick":"caitp","message":"but it is noticeable based on anba's bug","date":"2016-11-29T18:18:54.081Z","type":"message"}
{"nick":"gsathya","message":"but this is super special cased for resolving against builtin promises that are already resolved .. which isn't all that common ","date":"2016-11-29T18:18:55.522Z","type":"message"}
{"nick":"caitp","message":"it's definitely hard to notice","date":"2016-11-29T18:18:57.640Z","type":"message"}
{"nick":"caitp","message":"but it's clearly observable","date":"2016-11-29T18:19:07.915Z","type":"message"}
{"nick":"caitp","message":"it affects the ordering of other promises","date":"2016-11-29T18:19:15.723Z","type":"message"}
{"nick":"caitp","message":"or, ordering of other promise tasks","date":"2016-11-29T18:19:25.257Z","type":"message"}
{"nick":"gsathya","message":"yes, it is observable now with async await","date":"2016-11-29T18:19:36.331Z","type":"message"}
{"nick":"bradleymeck","date":"2016-11-29T18:26:14.847Z","type":"join"}
{"nick":"gsathya","message":"caitp: https://bugs.chromium.org/p/v8/issues/detail?id=5691 ah","date":"2016-11-29T18:26:42.582Z","type":"message"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2016-11-29T18:28:04.987Z","type":"quit"}
{"nick":"caitp","message":"yeah, it's observable without async","date":"2016-11-29T18:28:22.651Z","type":"message"}
{"nick":"gsathya","message":":(","date":"2016-11-29T18:28:28.299Z","type":"message"}
{"nick":"caitp","message":"it's weird to require microtasks ticks for Promise.resolve() though, maybe there's an argument to be made to change the spec","date":"2016-11-29T18:34:17.544Z","type":"message"}
{"nick":"caitp","message":"er, require 2 microtasks*","date":"2016-11-29T18:34:23.934Z","type":"message"}
{"nick":"thefourtheye","reason":"Quit: Connection closed for inactivity","date":"2016-11-29T18:42:32.020Z","type":"quit"}
{"nick":"xiinotulp","date":"2016-11-29T19:01:29.556Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 250 seconds","date":"2016-11-29T19:04:56.949Z","type":"quit"}
{"nick":"Guest59","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-11-29T19:32:11.491Z","type":"quit"}
{"nick":"Guest59","date":"2016-11-29T19:34:18.861Z","type":"join"}
{"nick":"Guest59","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-11-29T20:10:19.111Z","type":"quit"}
{"nick":"seventh","reason":"Quit: ...","date":"2016-11-29T20:55:12.194Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-11-29T21:00:42.834Z","type":"join"}
{"nick":"Guest59","date":"2016-11-29T21:04:45.231Z","type":"join"}
{"nick":"sxa","reason":"Ping timeout: 260 seconds","date":"2016-11-29T21:06:37.544Z","type":"quit"}
{"nick":"sxa","date":"2016-11-29T21:06:45.443Z","type":"join"}
{"nick":"rwlbuis","reason":"Quit: Connection closed for inactivity","date":"2016-11-29T21:20:06.338Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-11-29T22:28:46.244Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-11-29T22:31:47.108Z","type":"join"}
{"nick":"RT|Chatzilla","date":"2016-11-29T22:45:55.371Z","type":"join"}
{"nick":"Guest59","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-11-29T22:57:48.193Z","type":"quit"}
{"nick":"Guest59","date":"2016-11-29T23:01:00.931Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-11-29T23:13:14.890Z","type":"quit"}
{"nick":"Guest59","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-11-29T23:32:19.040Z","type":"quit"}
{"nick":"gsathya","message":"caitp: did you figure out reason for the GC crash with your promise inobject prop CL?","date":"2016-11-29T23:32:43.237Z","type":"message"}
{"nick":"Guest59","date":"2016-11-29T23:35:04.840Z","type":"join"}
{"nick":"bradleymeck","date":"2016-11-29T23:37:26.425Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2016-11-29T23:39:26.118Z","type":"quit"}
{"nick":"xiinotulp","reason":"Quit: Leaving","date":"2016-11-29T23:40:53.983Z","type":"quit"}
{"nick":"caitp","message":"gsathya: like igor said, it fails if the object goes into slow mode","date":"2016-11-29T23:44:37.974Z","type":"message"}
{"nick":"caitp","message":"i thought the fields before header size would stay fast, but nope","date":"2016-11-29T23:45:00.279Z","type":"message"}
{"nick":"caitp","message":"i think that is fixable","date":"2016-11-29T23:45:35.529Z","type":"message"}
{"nick":"caitp","message":"but maybe not worth it","date":"2016-11-29T23:45:46.448Z","type":"message"}
{"nick":"xaxxon","message":"any general guidelines about how to make the process of going back and forth between javascript and c++ fast?   like when you call a native function?   like maybe something that the debug javascript library does?   ","date":"2016-11-29T23:46:45.253Z","type":"message"}
{"nick":"xaxxon","message":"is that special @ syntax anything special?","date":"2016-11-29T23:47:07.603Z","type":"message"}
{"nick":"xaxxon","message":"from a performance perspective?","date":"2016-11-29T23:48:45.563Z","type":"message"}
{"nick":"caitp","message":"xaxxon: the thing is, you have entry/exit frames, can't inline (you could add inlining support if you needed to downstream, but not automatic), bunch of other things","date":"2016-11-29T23:57:05.255Z","type":"message"}
{"nick":"caitp","message":"v8 intrinsics still need entry/exit frames, and generally aren't handled specially by optimizing backends (but can be, ditto for ignition)","date":"2016-11-29T23:59:08.639Z","type":"message"}
{"nick":"xaxxon","message":"ahh","date":"2016-11-29T23:59:16.564Z","type":"message"}
{"nick":"xaxxon","message":"just figured I'd ask.   I very poorly implemented an interface thinking that doing stuff in c++ would be good.   I understand better now, but it's sort of too late","date":"2016-11-29T23:59:56.635Z","type":"message"}
