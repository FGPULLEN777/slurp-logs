{"nick":"iamdustan","reason":"Ping timeout: 265 seconds","date":"2013-10-18T00:38:26.853Z","type":"quit"}
{"nick":"jmar777","date":"2013-10-18T00:59:51.866Z","type":"join"}
{"nick":"iamdustan","date":"2013-10-18T01:31:02.699Z","type":"join"}
{"nick":"abraxas","date":"2013-10-18T01:38:17.593Z","type":"join"}
{"nick":"iamdustan","reason":"Ping timeout: 245 seconds","date":"2013-10-18T01:40:51.686Z","type":"quit"}
{"nick":"iamdustan","date":"2013-10-18T01:46:38.775Z","type":"join"}
{"nick":"iamdustan","reason":"Ping timeout: 272 seconds","date":"2013-10-18T01:54:07.730Z","type":"quit"}
{"nick":"seventh","reason":"Ping timeout: 252 seconds","date":"2013-10-18T02:04:45.221Z","type":"quit"}
{"nick":"carif","date":"2013-10-18T02:12:39.423Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2013-10-18T03:40:35.910Z","type":"quit"}
{"nick":"jmar777","date":"2013-10-18T03:41:14.033Z","type":"join"}
{"nick":"jmar777","reason":"Ping timeout: 265 seconds","date":"2013-10-18T03:45:58.915Z","type":"quit"}
{"nick":"jaseemabid","date":"2013-10-18T03:53:23.039Z","type":"join"}
{"nick":"c4milo","date":"2013-10-18T04:04:50.242Z","type":"join"}
{"nick":"Petka","date":"2013-10-18T04:25:50.734Z","type":"join"}
{"nick":"jaseemabid","reason":"Quit: Leaving","date":"2013-10-18T04:55:01.495Z","type":"quit"}
{"nick":"jaseemabid","date":"2013-10-18T04:56:45.828Z","type":"join"}
{"nick":"jaseemabid","reason":"Max SendQ exceeded","date":"2013-10-18T04:56:59.704Z","type":"quit"}
{"nick":"utkarsh","reason":"Ping timeout: 248 seconds","date":"2013-10-18T05:21:41.743Z","type":"quit"}
{"nick":"utkarsh","date":"2013-10-18T05:23:44.025Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T06:28:02.995Z","type":"quit"}
{"nick":"spolu","date":"2013-10-18T06:28:05.139Z","type":"join"}
{"nick":"c4milo","date":"2013-10-18T06:32:38.558Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-18T06:51:36.757Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T06:52:04.462Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 252 seconds","date":"2013-10-18T06:56:48.267Z","type":"quit"}
{"nick":"jaseemabid","date":"2013-10-18T07:49:25.347Z","type":"join"}
{"nick":"juanjosanchez","date":"2013-10-18T07:55:08.638Z","type":"join"}
{"nick":"Lethalman","date":"2013-10-18T07:58:16.936Z","type":"join"}
{"nick":"juanjosanchez_","date":"2013-10-18T07:59:02.200Z","type":"join"}
{"nick":"muelli","date":"2013-10-18T08:03:07.027Z","type":"join"}
{"nick":"Janzeh","reason":"Ping timeout: 245 seconds","date":"2013-10-18T08:30:51.889Z","type":"quit"}
{"nick":"hackygolucky_","reason":"Ping timeout: 245 seconds","date":"2013-10-18T08:31:16.716Z","type":"quit"}
{"nick":"matjas","reason":"Ping timeout: 245 seconds","date":"2013-10-18T08:31:16.929Z","type":"quit"}
{"nick":"sanjoyd","reason":"Ping timeout: 264 seconds","date":"2013-10-18T08:31:27.120Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-10-18T08:38:04.196Z","type":"join"}
{"nick":"guor","message":"muelli, we differentiate between internalized strings that are unique, and normal strings that are just that","date":"2013-10-18T08:40:48.807Z","type":"message"}
{"nick":"guor","message":"for the former we compare address for equality, for the latter we compare hash and content","date":"2013-10-18T08:41:05.131Z","type":"message"}
{"nick":"muelli","message":"guor: yeah. thanks. I've seen the piece of code. Only if hashes are false, it returns immediately, assuming the strings to be different. If the hashes are true, it goes on to compare the characters of the strings.","date":"2013-10-18T08:43:03.082Z","type":"message"}
{"nick":"muelli","message":"It puzzled me so hard that I wrote a small test case and stepped through (as I didn't see it immediately from the code)...","date":"2013-10-18T08:43:34.609Z","type":"message"}
{"nick":"Janzeh","date":"2013-10-18T08:43:36.627Z","type":"join"}
{"nick":"jaseemabid","reason":"Ping timeout: 263 seconds","date":"2013-10-18T09:05:28.736Z","type":"quit"}
{"nick":"juanjosanchez_","reason":"Quit: Leaving","date":"2013-10-18T09:13:39.514Z","type":"quit"}
{"nick":"Net147","date":"2013-10-18T09:59:47.192Z","type":"join"}
{"nick":"jaseemabid","date":"2013-10-18T10:02:54.896Z","type":"join"}
{"nick":"sanjoyd","date":"2013-10-18T10:27:00.054Z","type":"join"}
{"nick":"matjas","date":"2013-10-18T10:30:15.813Z","type":"join"}
{"nick":"hackygolucky_","date":"2013-10-18T10:30:16.098Z","type":"join"}
{"nick":"jkummerow","date":"2013-10-18T10:44:17.558Z","type":"join"}
{"nick":"juanjosanchez","reason":"Ping timeout: 245 seconds","date":"2013-10-18T10:59:11.672Z","type":"quit"}
{"nick":"loislo","date":"2013-10-18T11:01:18.483Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-10-18T11:14:43.496Z","type":"quit"}
{"nick":"dbr","date":"2013-10-18T11:23:26.287Z","type":"join"}
{"nick":"Net147","reason":"Quit:  HydraIRC -> http://www.hydrairc.com <- In tests, 0x09 out of 0x0A l33t h4x0rz prefer it :)","date":"2013-10-18T11:25:05.844Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 260 seconds","date":"2013-10-18T12:03:59.979Z","type":"quit"}
{"nick":"juanjosanchez","date":"2013-10-18T12:04:06.260Z","type":"join"}
{"nick":"iamdustan","date":"2013-10-18T12:24:05.742Z","type":"join"}
{"nick":"nierob_","reason":"Quit: Konversation terminated!","date":"2013-10-18T12:59:51.360Z","type":"quit"}
{"nick":"nierob_","date":"2013-10-18T13:00:04.152Z","type":"join"}
{"nick":"c4milo","date":"2013-10-18T13:05:17.957Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:06:16.854Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:06:45.749Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:07:47.872Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:08:20.956Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:09:22.495Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:09:50.956Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-10-18T13:10:05.056Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:10:50.048Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:11:22.036Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:12:21.666Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:12:50.336Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:14:06.181Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:14:25.885Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 248 seconds","date":"2013-10-18T13:14:35.818Z","type":"quit"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:15:22.593Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-10-18T13:15:25.334Z","type":"join"}
{"nick":"c4milo","date":"2013-10-18T13:15:56.105Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:16:53.286Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:17:27.034Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:18:24.565Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:18:57.513Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:19:55.715Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:20:24.403Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:21:27.669Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:21:57.522Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:22:58.481Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:23:30.632Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:24:28.596Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:25:00.951Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:26:03.011Z","type":"quit"}
{"nick":"jaseemabid","reason":"Quit: Leaving","date":"2013-10-18T13:26:23.833Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:26:29.411Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:27:44.125Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:28:00.900Z","type":"join"}
{"nick":"jaseemabid","date":"2013-10-18T13:28:27.610Z","type":"join"}
{"nick":"jaseemabid","reason":"Max SendQ exceeded","date":"2013-10-18T13:28:45.951Z","type":"quit"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:29:01.440Z","type":"quit"}
{"nick":"jaseemabid","date":"2013-10-18T13:29:13.357Z","type":"join"}
{"nick":"c4milo","date":"2013-10-18T13:29:31.930Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:30:33.431Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:31:05.430Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:32:03.864Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:32:36.482Z","type":"join"}
{"nick":"ager","reason":"Remote host closed the connection","date":"2013-10-18T13:33:43.609Z","type":"quit"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:33:44.447Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:34:04.968Z","type":"join"}
{"nick":"juanjosanchez","reason":"Ping timeout: 252 seconds","date":"2013-10-18T13:35:00.249Z","type":"quit"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:35:06.459Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:35:38.378Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:36:40.795Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:37:08.767Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:38:08.405Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:38:38.957Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:39:40.294Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:40:08.816Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:41:15.016Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:41:43.756Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:42:44.072Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:43:10.025Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:44:11.934Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:44:43.915Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:45:43.335Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:46:16.436Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:47:15.489Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:47:46.074Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:48:48.304Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:49:14.854Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:50:27.484Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:50:47.813Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:51:55.569Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:52:19.522Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:53:20.382Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:53:51.942Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:54:50.182Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:55:22.541Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-10-18T13:56:24.644Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-18T13:56:55.401Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-18T13:57:08.763Z","type":"quit"}
{"nick":"jaseemabid","reason":"Ping timeout: 248 seconds","date":"2013-10-18T14:13:57.827Z","type":"quit"}
{"nick":"jmar777","date":"2013-10-18T14:29:44.400Z","type":"join"}
{"nick":"muelli","message":"hm. Given that I can call Isolate::Current() pretty much everywhere, can I also allocate managed objects from everywhere?","date":"2013-10-18T14:31:56.943Z","type":"message"}
{"nick":"muelli","message":"i.e. from within a very exotic place like the parser or scanner","date":"2013-10-18T14:32:10.464Z","type":"message"}
{"nick":"guor","message":"muelli, you can't allocate from anywhere, but that's complicated...","date":"2013-10-18T14:34:46.046Z","type":"message"}
{"nick":"guor","message":"some part of v8 is not GC safe","date":"2013-10-18T14:34:51.142Z","type":"message"}
{"nick":"muelli","message":"guor: How would I know whether I can allocate from within the scanner or the parser?","date":"2013-10-18T14:36:52.896Z","type":"message"}
{"nick":"guor","message":"hm... idk which part you are looking at","date":"2013-10-18T14:37:11.434Z","type":"message"}
{"nick":"muelli","message":"say, scanner. From within the Scanner::Next().","date":"2013-10-18T14:37:25.639Z","type":"message"}
{"nick":"guor","message":"but if you see other allocations nearby, you probably can do it :)","date":"2013-10-18T14:37:26.234Z","type":"message"}
{"nick":"muelli","message":"I know it's a stupid place and all. Let's just assume for now.","date":"2013-10-18T14:37:36.241Z","type":"message"}
{"nick":"muelli","message":";-)","date":"2013-10-18T14:37:40.656Z","type":"message"}
{"nick":"bnoordhuis","message":"i was about to ask :)","date":"2013-10-18T14:37:48.523Z","type":"message"}
{"nick":"guor","message":"that's probably safe","date":"2013-10-18T14:38:09.473Z","type":"message"}
{"nick":"guor","message":"we are in the process of making more v8 code gc safe though","date":"2013-10-18T14:38:36.368Z","type":"message"}
{"nick":"muelli","message":"yeah, read smth on the list.","date":"2013-10-18T14:38:46.655Z","type":"message"}
{"nick":"guor","message":"all of those revisions that start with \"Handlify...\" do that","date":"2013-10-18T14:38:47.240Z","type":"message"}
{"nick":"guor","message":"just landed some of those lately","date":"2013-10-18T14:39:04.271Z","type":"message"}
{"nick":"muelli","message":"The requirement I have is to \"report back\" certain things about parsed code. I.e. the tokens seen. Due to bad design the idea is to call an existing JavaScript function in Chromium (provided by some extension) from within the scanner. And to not make too many bad choices, I was wondering whether it'll explode right into my face. Or whether it'll explode when I'm long gone ;-)","date":"2013-10-18T14:40:28.115Z","type":"message"}
{"nick":"guor","message":"anybody unrelated with v8 will tell you that bad design will explode will you are long gone if not right into your face","date":"2013-10-18T14:41:43.492Z","type":"message"}
{"nick":"guor","message":":)","date":"2013-10-18T14:41:44.891Z","type":"message"}
{"nick":"guor","message":"but... if it's just some experiment, why not","date":"2013-10-18T14:41:58.587Z","type":"message"}
{"nick":"guor","message":"the thing is","date":"2013-10-18T14:42:07.372Z","type":"message"}
{"nick":"guor","message":"if the scanner calls a callback in js","date":"2013-10-18T14:42:13.339Z","type":"message"}
{"nick":"guor","message":"then.. what happens if that callback is being parsed?","date":"2013-10-18T14:42:26.411Z","type":"message"}
{"nick":"muelli","message":"yeah, good call.","date":"2013-10-18T14:43:10.510Z","type":"message"}
{"nick":"muelli","message":"I guess that calls for some more bad design choices.","date":"2013-10-18T14:43:23.442Z","type":"message"}
{"nick":"muelli","message":"Hm. It's crashing on isolate->global_object() in FixedArrayBase::length (this=0x0). So I guess there is no \"global object\".  But can I check for that? I couldn't find any \"has_global_object\" on Isolate nor on Context.","date":"2013-10-18T15:25:29.556Z","type":"message"}
