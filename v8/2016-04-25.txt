{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-04-25T00:19:33.599Z","type":"quit"}
{"nick":"ofrobots","date":"2016-04-25T00:21:05.525Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-04-25T00:26:21.995Z","type":"quit"}
{"nick":"ofrobots","date":"2016-04-25T00:29:40.240Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-04-25T00:42:22.170Z","type":"quit"}
{"nick":"ofrobots","date":"2016-04-25T00:44:47.907Z","type":"join"}
{"nick":"JoWie","reason":"Quit: Connection closed for inactivity","date":"2016-04-25T00:50:27.181Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-04-25T00:50:44.984Z","type":"quit"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2016-04-25T00:52:19.631Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-04-25T01:19:30.767Z","type":"quit"}
{"nick":"esas","reason":"Ping timeout: 240 seconds","date":"2016-04-25T02:11:34.041Z","type":"quit"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2016-04-25T02:16:49.969Z","type":"quit"}
{"nick":"xaxxon_","reason":"Ping timeout: 246 seconds","date":"2016-04-25T02:28:24.106Z","type":"quit"}
{"nick":"plutoniix","date":"2016-04-25T03:18:12.476Z","type":"join"}
{"nick":"xaxxon","date":"2016-04-25T03:26:58.227Z","type":"join"}
{"nick":"bradleymeck","date":"2016-04-25T03:40:27.250Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-04-25T04:02:04.100Z","type":"quit"}
{"nick":"xaxxon","reason":"Ping timeout: 268 seconds","date":"2016-04-25T04:05:48.212Z","type":"quit"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2016-04-25T04:20:48.507Z","type":"quit"}
{"nick":"bobmcw","date":"2016-04-25T04:20:58.876Z","type":"join"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2016-04-25T04:21:04.516Z","type":"quit"}
{"nick":"bobmcw","date":"2016-04-25T04:30:36.213Z","type":"join"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2016-04-25T04:37:30.679Z","type":"quit"}
{"nick":"bobmcw","date":"2016-04-25T04:37:42.444Z","type":"join"}
{"nick":"xaxxon","date":"2016-04-25T04:55:44.129Z","type":"join"}
{"nick":"ofrobots","date":"2016-04-25T05:18:38.697Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 252 seconds","date":"2016-04-25T05:34:52.428Z","type":"quit"}
{"nick":"plutoniix","date":"2016-04-25T05:47:55.642Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 260 seconds","date":"2016-04-25T05:59:49.473Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-04-25T06:01:50.826Z","type":"quit"}
{"nick":"plutoniix","date":"2016-04-25T06:16:35.746Z","type":"join"}
{"nick":"rendar","date":"2016-04-25T06:40:36.720Z","type":"join"}
{"nick":"rendar","reason":"Ping timeout: 246 seconds","date":"2016-04-25T06:55:06.109Z","type":"quit"}
{"nick":"plutoniix","reason":"Ping timeout: 252 seconds","date":"2016-04-25T06:57:55.539Z","type":"quit"}
{"nick":"ofrobots","date":"2016-04-25T07:02:33.184Z","type":"join"}
{"nick":"rendar","date":"2016-04-25T07:04:22.072Z","type":"join"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2016-04-25T07:04:59.520Z","type":"quit"}
{"nick":"bobmcw","date":"2016-04-25T07:05:31.462Z","type":"join"}
{"nick":"plutoniix","date":"2016-04-25T07:10:40.674Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-04-25T07:59:19.158Z","type":"quit"}
{"nick":"zv","reason":"Ping timeout: 268 seconds","date":"2016-04-25T08:30:58.269Z","type":"quit"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2016-04-25T09:09:17.947Z","type":"quit"}
{"nick":"bobmcw","date":"2016-04-25T09:09:26.767Z","type":"join"}
{"nick":"bobmcw","reason":"Read error: Connection reset by peer","date":"2016-04-25T10:01:42.015Z","type":"quit"}
{"nick":"bobmcw","date":"2016-04-25T10:20:25.341Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2016-04-25T11:15:52.104Z","type":"quit"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2016-04-25T11:27:39.853Z","type":"quit"}
{"nick":"oleavr","reason":"Ping timeout: 268 seconds","date":"2016-04-25T12:58:36.315Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-04-25T13:04:08.911Z","type":"join"}
{"nick":"oleavr","date":"2016-04-25T13:05:57.187Z","type":"join"}
{"nick":"jugglinmike","date":"2016-04-25T13:26:48.485Z","type":"join"}
{"nick":"caitp","message":"do you think ignition will eventually allow us to move all of the desugaring from the parser to the bytecode generator","date":"2016-04-25T13:40:21.751Z","type":"message"}
{"nick":"caitp","message":"because that would be awesome","date":"2016-04-25T13:40:24.853Z","type":"message"}
{"nick":"caitp","message":"registers instead of variables, imagine","date":"2016-04-25T13:40:47.148Z","type":"message"}
{"nick":"jugglinmike","reason":"Ping timeout: 240 seconds","date":"2016-04-25T13:41:34.027Z","type":"quit"}
{"nick":"caitp","message":"that would probably boost CodeLoad scores a good amount, too","date":"2016-04-25T13:42:00.530Z","type":"message"}
{"nick":"caitp","message":"and maybe some day, parser-base can be implemented in a source file rather than a header, and making small changes to it won't require rebuilding a bunch of unrelated stuff --- and inlining will still be totally possible, because all callers will be in the source file itself","date":"2016-04-25T13:43:24.686Z","type":"message"}
{"nick":"caitp","message":"between the two of those changes, you could make the difference between the parser and preparser totally transparent","date":"2016-04-25T13:43:46.575Z","type":"message"}
{"nick":"caitp","message":"simplifying everything, wow","date":"2016-04-25T13:43:58.997Z","type":"message"}
{"nick":"caitp","message":"well, one can hope","date":"2016-04-25T13:44:11.980Z","type":"message"}
{"nick":"pringlescan","date":"2016-04-25T13:45:33.511Z","type":"join"}
{"nick":"jugglinmike","date":"2016-04-25T13:48:39.717Z","type":"join"}
{"nick":"davi_","date":"2016-04-25T14:05:49.860Z","type":"join"}
{"nick":"davi_","reason":"Remote host closed the connection","date":"2016-04-25T14:11:49.816Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-04-25T14:12:51.589Z","type":"quit"}
{"nick":"davi","date":"2016-04-25T14:13:08.120Z","type":"join"}
{"nick":"xaxxon","reason":"Ping timeout: 246 seconds","date":"2016-04-25T14:15:24.114Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-04-25T14:18:29.923Z","type":"join"}
{"nick":"ofrobots","date":"2016-04-25T14:37:02.768Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-04-25T15:06:04.391Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2016-04-25T15:06:22.011Z","type":"quit"}
{"nick":"ofrobots","date":"2016-04-25T15:10:00.320Z","type":"join"}
{"nick":"ofrobots","reason":"Client Quit","date":"2016-04-25T15:14:30.724Z","type":"quit"}
{"nick":"Fishrock123","date":"2016-04-25T15:19:27.841Z","type":"join"}
{"nick":"Fishrock123","message":"ANyone here able to help me with the v8::Set native API?","date":"2016-04-25T15:19:40.799Z","type":"message"}
{"nick":"plutoniix","date":"2016-04-25T15:20:06.719Z","type":"join"}
{"nick":"caitp","message":"Fishrock123: what about it?","date":"2016-04-25T15:21:01.449Z","type":"message"}
{"nick":"Fishrock123","message":"caitp: When I do a `set->Delete(env->context(), value);`, it has 3 items in it. One gets deleted, one turns to undefined, the other is untouched.","date":"2016-04-25T15:22:43.701Z","type":"message"}
{"nick":"Fishrock123","message":"The undefined part is the problem","date":"2016-04-25T15:22:50.016Z","type":"message"}
{"nick":"Fishrock123","message":"One of the keys keeps turning to undefined without my doing anything to it as far as I can tel","date":"2016-04-25T15:23:08.451Z","type":"message"}
{"nick":"Fishrock123","message":"This is v8 5.0 (Node master)","date":"2016-04-25T15:23:28.127Z","type":"message"}
{"nick":"caitp","message":"you mean that Set::Has() continues to return true for the key?","date":"2016-04-25T15:23:35.438Z","type":"message"}
{"nick":"caitp","message":"it continues to show up in forEach() / etc?","date":"2016-04-25T15:23:58.486Z","type":"message"}
{"nick":"Fishrock123","message":"caitp: I mean wehn I get the Array of values (AsArray()), one of the values is undefined","date":"2016-04-25T15:24:13.335Z","type":"message"}
{"nick":"caitp","message":"interesting, hang on a sec","date":"2016-04-25T15:24:23.582Z","type":"message"}
{"nick":"Fishrock123","message":"(I'm viewing it from JavaScript but the problem is also present in c++)","date":"2016-04-25T15:24:26.788Z","type":"message"}
{"nick":"caitp","message":"does the `undefined` show up at the end of the array, no matter which item was deleted?","date":"2016-04-25T15:26:08.571Z","type":"message"}
{"nick":"caitp","message":"actually, I guess it wouldn't","date":"2016-04-25T15:26:41.530Z","type":"message"}
{"nick":"Fishrock123","message":"caitp: It appears to show up at the beginning","date":"2016-04-25T15:27:04.114Z","type":"message"}
{"nick":"caitp","message":"yeah, I think the Set::AsArray code is a bit off","date":"2016-04-25T15:27:35.706Z","type":"message"}
{"nick":"Fishrock123","message":"Note again, I'm only deleting one, which gets deleted but another turns to undefined and ends up at the start of the array","date":"2016-04-25T15:27:38.340Z","type":"message"}
{"nick":"caitp","message":"afaik you should get a different result from Array.from(<the set>)","date":"2016-04-25T15:27:48.155Z","type":"message"}
{"nick":"Fishrock123","message":"caitp: oh hmmm, is there a better way to iterate? (Preferably in c++...)","date":"2016-04-25T15:28:03.454Z","type":"message"}
{"nick":"caitp","message":"aklein might know if the chrome api depends on this quirk, but if not it seems like a bug","date":"2016-04-25T15:28:06.849Z","type":"message"}
{"nick":"caitp","message":"er, if chrome depends on it","date":"2016-04-25T15:28:19.323Z","type":"message"}
{"nick":"caitp","message":"there isn't really another way exposed in the api","date":"2016-04-25T15:28:44.301Z","type":"message"}
{"nick":"caitp","message":"far as I can see","date":"2016-04-25T15:28:47.234Z","type":"message"}
{"nick":"Fishrock123","message":"*sigh*, aight. Thanks for the info.","date":"2016-04-25T15:29:25.384Z","type":"message"}
{"nick":"caitp","message":"you should probably file a bug, I can't think of a good reason to record the hole-y items as undefined","date":"2016-04-25T15:29:44.732Z","type":"message"}
{"nick":"Fishrock123","message":"caitp: hole-y?","date":"2016-04-25T15:30:12.762Z","type":"message"}
{"nick":"caitp","message":"what happens is, AsArray allocates a backing store for the Array it creates, initializing each item to undefined --- then loops over each element in the hash set. if it's not deleted, it puts the value in the backing store, otherwise it doesn't","date":"2016-04-25T15:31:21.940Z","type":"message"}
{"nick":"caitp","message":"so deleted items show up in the list as undefined, as an own property","date":"2016-04-25T15:31:59.098Z","type":"message"}
{"nick":"caitp","message":"I think this is a bug, and it's still present on ToT --- so you should file it","date":"2016-04-25T15:32:34.778Z","type":"message"}
{"nick":"Fishrock123","message":"caitp: ok, mind linking the bug tracker? I always forget where it is at :(","date":"2016-04-25T15:37:01.188Z","type":"message"}
{"nick":"caitp","message":"https://bugs.chromium.org/p/v8/issues/list","date":"2016-04-25T15:37:16.503Z","type":"message"}
{"nick":"Fishrock123","message":"caitp: Hmmm, isn't there still another issue though? I have a Set with 3 items, do a single Delete, and it ends up with one item and an undefined..","date":"2016-04-25T15:39:25.186Z","type":"message"}
{"nick":"caitp","message":"hm","date":"2016-04-25T15:39:48.945Z","type":"message"}
{"nick":"Fishrock123","message":"If it matters, the items are Errors, specifically promise rejection \"reason\"s.","date":"2016-04-25T15:39:57.545Z","type":"message"}
{"nick":"caitp","message":"do two of those errors have the same identity?","date":"2016-04-25T15:40:20.648Z","type":"message"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2010030309]","date":"2016-04-25T15:40:23.082Z","type":"quit"}
{"nick":"caitp","message":"that could be a separate issue with the hashtable implementation, but that's more work to deal with","date":"2016-04-25T15:40:59.539Z","type":"message"}
{"nick":"caitp","message":"if you can provide a reproduction for that, we can look into it easier","date":"2016-04-25T15:41:08.406Z","type":"message"}
{"nick":"Fishrock123","message":"caitp: How would I check if they have the same identity? They definitely have different stack traces.","date":"2016-04-25T15:41:44.349Z","type":"message"}
{"nick":"caitp","message":"either they're the same object, (eg obj1 === obj2), or we're erroneously giving them the same hash value","date":"2016-04-25T15:42:21.591Z","type":"message"}
{"nick":"caitp","message":"or, a third possibility is that the internal iteration over the hash table is just wrong","date":"2016-04-25T15:42:45.944Z","type":"message"}
{"nick":"Fishrock123","message":"caitp: Is that just Local1 == Local2 in c++?","date":"2016-04-25T15:43:06.268Z","type":"message"}
{"nick":"caitp","message":"yeah","date":"2016-04-25T15:43:50.338Z","type":"message"}
{"nick":"pringlescan1","date":"2016-04-25T15:45:49.947Z","type":"join"}
{"nick":"pringlescan","reason":"Ping timeout: 252 seconds","date":"2016-04-25T15:45:55.476Z","type":"quit"}
{"nick":"bobmcw","date":"2016-04-25T15:51:49.377Z","type":"join"}
{"nick":"ofrobots","date":"2016-04-25T15:52:16.039Z","type":"join"}
{"nick":"ofrobots","reason":"Ping timeout: 276 seconds","date":"2016-04-25T15:57:00.628Z","type":"quit"}
