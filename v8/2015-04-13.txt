{"nick":"bnoordhuis","date":"2015-04-13T00:15:14.487Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2015-04-13T00:19:59.472Z","type":"quit"}
{"nick":"caitp-","date":"2015-04-13T00:36:15.207Z","type":"join"}
{"nick":"enaqx","date":"2015-04-13T00:42:27.458Z","type":"join"}
{"nick":"enaqx","reason":"Remote host closed the connection","date":"2015-04-13T01:56:47.728Z","type":"quit"}
{"nick":"enaqx","date":"2015-04-13T01:59:08.334Z","type":"join"}
{"nick":"phpnode_","reason":"Ping timeout: 248 seconds","date":"2015-04-13T04:08:21.264Z","type":"quit"}
{"nick":"phpnode_","date":"2015-04-13T04:21:21.238Z","type":"join"}
{"nick":"muelli","date":"2015-04-13T06:26:43.869Z","type":"join"}
{"nick":"muelli","reason":"Ping timeout: 264 seconds","date":"2015-04-13T06:31:23.849Z","type":"quit"}
{"nick":"bnoordhuis","date":"2015-04-13T06:34:21.246Z","type":"join"}
{"nick":"marja___","reason":"Ping timeout: 256 seconds","date":"2015-04-13T06:43:28.287Z","type":"quit"}
{"nick":"marja___","date":"2015-04-13T06:55:30.122Z","type":"join"}
{"nick":"mostynb","date":"2015-04-13T06:55:55.063Z","type":"join"}
{"nick":"wingo","date":"2015-04-13T07:00:40.612Z","type":"join"}
{"nick":"caitp-","reason":"Ping timeout: 256 seconds","date":"2015-04-13T07:15:46.290Z","type":"quit"}
{"nick":"jwilm","reason":"Read error: Connection reset by peer","date":"2015-04-13T07:21:36.880Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 244 seconds","date":"2015-04-13T07:42:46.353Z","type":"quit"}
{"nick":"rendar","date":"2015-04-13T07:43:32.760Z","type":"join"}
{"nick":"xiinotulp","date":"2015-04-13T07:59:46.209Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 240 seconds","date":"2015-04-13T08:02:56.278Z","type":"quit"}
{"nick":"caitp-","date":"2015-04-13T08:07:01.269Z","type":"join"}
{"nick":"caitp-","reason":"Ping timeout: 264 seconds","date":"2015-04-13T08:11:49.379Z","type":"quit"}
{"nick":"caitp-","date":"2015-04-13T08:18:27.349Z","type":"join"}
{"nick":"bnoordhuis","date":"2015-04-13T08:28:33.269Z","type":"join"}
{"nick":"xiinotulp","new_nick":"plutoniix","date":"2015-04-13T08:36:46.733Z","type":"nick"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Mozilla\" on http://build.chromium.org/p/client.v8/builders/V8%20Win32%20-%202/builds/2376 \"V8 Win32 - 2\" from 1dbc43272954e8cfdf7be9a57c953a74b2a4d9da: wingo@igalia.com)","date":"2015-04-13T08:57:02.093Z","type":"message"}
{"nick":"wingo","message":"d'oh","date":"2015-04-13T08:57:12.691Z","type":"message"}
{"nick":"wingo","message":"why is this test a flake, i wonder","date":"2015-04-13T08:58:53.665Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by yangguo@chromium.org: Tree is open (will keep an eye on flakes)","date":"2015-04-13T09:03:05.156Z","type":"message"}
{"nick":"caitp-","reason":"Ping timeout: 264 seconds","date":"2015-04-13T09:16:01.352Z","type":"quit"}
{"nick":"enaqx","reason":"Remote host closed the connection","date":"2015-04-13T09:21:53.135Z","type":"quit"}
{"nick":"caitp-","date":"2015-04-13T09:26:54.730Z","type":"join"}
{"nick":"enaqx","date":"2015-04-13T09:28:57.474Z","type":"join"}
{"nick":"caitp-","reason":"Ping timeout: 240 seconds","date":"2015-04-13T09:31:16.273Z","type":"quit"}
{"nick":"mostynb","reason":"Remote host closed the connection","date":"2015-04-13T11:01:06.070Z","type":"quit"}
{"nick":"mostynb","date":"2015-04-13T11:01:35.435Z","type":"join"}
{"nick":"caitp-","date":"2015-04-13T11:12:31.186Z","type":"join"}
{"nick":"caitp-","reason":"Ping timeout: 264 seconds","date":"2015-04-13T11:18:25.349Z","type":"quit"}
{"nick":"caitp-","date":"2015-04-13T11:23:34.033Z","type":"join"}
{"nick":"mostynb","reason":"Ping timeout: 250 seconds","date":"2015-04-13T11:52:07.363Z","type":"quit"}
{"nick":"muelli","date":"2015-04-13T11:53:24.400Z","type":"join"}
{"nick":"mostynb","date":"2015-04-13T12:04:52.236Z","type":"join"}
{"nick":"caitp-","reason":"Ping timeout: 250 seconds","date":"2015-04-13T12:05:07.369Z","type":"quit"}
{"nick":"enaqx","reason":"Ping timeout: 250 seconds","date":"2015-04-13T12:19:14.459Z","type":"quit"}
{"nick":"bradleymeck","date":"2015-04-13T12:46:38.895Z","type":"join"}
{"nick":"mostynb","reason":"Ping timeout: 245 seconds","date":"2015-04-13T13:12:28.238Z","type":"quit"}
{"nick":"mostynb","date":"2015-04-13T13:25:47.338Z","type":"join"}
{"nick":"bobmcw_","new_nick":"bobmcw","date":"2015-04-13T13:35:49.051Z","type":"nick"}
{"nick":"bobmcw","reason":"Changing host","date":"2015-04-13T13:35:49.359Z","type":"quit"}
{"nick":"bobmcw","date":"2015-04-13T13:35:49.518Z","type":"join"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2015-04-13T13:46:46.639Z","type":"quit"}
{"nick":"bradleymeck","date":"2015-04-13T13:48:45.346Z","type":"join"}
{"nick":"mostynb","reason":"Quit: Leaving","date":"2015-04-13T14:05:58.269Z","type":"quit"}
{"nick":"caitp-","date":"2015-04-13T14:17:33.268Z","type":"join"}
{"nick":"jugglinmike","date":"2015-04-13T14:19:04.480Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 244 seconds","date":"2015-04-13T14:20:36.218Z","type":"quit"}
{"nick":"caitp-","reason":"Ping timeout: 245 seconds","date":"2015-04-13T14:22:03.228Z","type":"quit"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2015-04-13T14:47:27.275Z","type":"quit"}
{"nick":"bradleymeck","date":"2015-04-13T14:48:54.133Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Check\" on http://build.chromium.org/p/client.v8/builders/V8%20Win32%20-%20debug%20-%202/builds/2891 \"V8 Win32 - debug - 2\" from c8e4d57d3b3036a05902f5b916cb5d853a57393c: dcarney@chromium.org,mvstanton@chromium.org)","date":"2015-04-13T14:55:40.249Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-04-13T15:12:56.525Z","type":"quit"}
{"nick":"caitp-","date":"2015-04-13T15:18:41.409Z","type":"join"}
{"nick":"wingo","reason":"Remote host closed the connection","date":"2015-04-13T15:19:55.068Z","type":"quit"}
{"nick":"wingo","date":"2015-04-13T15:22:28.879Z","type":"join"}
{"nick":"caitp-","reason":"Ping timeout: 250 seconds","date":"2015-04-13T15:23:50.457Z","type":"quit"}
{"nick":"bnoordhuis","date":"2015-04-13T15:27:32.521Z","type":"join"}
{"nick":"muelli","reason":"Ping timeout: 252 seconds","date":"2015-04-13T15:31:25.598Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 255 seconds","date":"2015-04-13T15:32:04.512Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by machenbach@chromium.org: Tree is closed (looking into test failures)","date":"2015-04-13T15:36:01.317Z","type":"message"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2009081014]","date":"2015-04-13T15:38:19.754Z","type":"quit"}
{"nick":"bnoordhuis","date":"2015-04-13T15:44:07.102Z","type":"join"}
{"nick":"bobmcw","date":"2015-04-13T15:45:18.023Z","type":"quit"}
{"nick":"bobmcw","date":"2015-04-13T15:45:59.413Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 265 seconds","date":"2015-04-13T16:11:15.073Z","type":"quit"}
{"nick":"BobGneu","reason":"Ping timeout: 256 seconds","date":"2015-04-13T16:14:40.257Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: Tree is open after speculative revert","date":"2015-04-13T16:21:22.345Z","type":"message"}
{"nick":"bradleymeck","date":"2015-04-13T16:23:20.489Z","type":"join"}
{"nick":"bnoordhuis","date":"2015-04-13T16:26:04.606Z","type":"join"}
{"nick":"caitp","message":"arv / marja___ (if around) --- I'm not totally sure unifying parameter parsing in ParserBase works well now :l","date":"2015-04-13T16:30:25.350Z","type":"message"}
{"nick":"arv","message":"caitp: Why not?","date":"2015-04-13T16:30:48.630Z","type":"message"}
{"nick":"caitp","message":"it makes some assumptions about what formal parameters look like, and I don't think there's a way around those assumptions without making the preparser track more info","date":"2015-04-13T16:31:14.384Z","type":"message"}
{"nick":"caitp","message":"which might be too expensive","date":"2015-04-13T16:31:34.006Z","type":"message"}
{"nick":"arv","message":"what do you mean that it makes assumptions?","date":"2015-04-13T16:32:38.922Z","type":"message"}
{"nick":"caitp","message":"right now the idea is that the formal parameters list is a set of names, which is fine --- the preparser can keep track of all the names it needs to care about easily --- but with destructuring, it really needs to track full AST nodes","date":"2015-04-13T16:33:55.387Z","type":"message"}
{"nick":"caitp","message":"and in the preparser impl, you lose that info, so you end up with different behaviour between the two","date":"2015-04-13T16:35:02.593Z","type":"message"}
{"nick":"caitp","message":"maybe I'm wrong but I don't think it works","date":"2015-04-13T16:35:13.729Z","type":"message"}
{"nick":"caitp","message":"maybe I'm wrong, an expression list should be fine","date":"2015-04-13T16:38:21.310Z","type":"message"}
{"nick":"caitp","message":"but needs some analog for GetBoundNames()","date":"2015-04-13T16:38:38.491Z","type":"message"}
{"nick":"arv","message":"Even with destructuring params we can do the duplicate check as we go and do the eval/arguments/keyword check","date":"2015-04-13T16:38:41.909Z","type":"message"}
{"nick":"arv","message":"The bound names are known as we parse, we do not need to hold on to them in the preparser","date":"2015-04-13T16:39:17.444Z","type":"message"}
{"nick":"caitp","message":"they aren't really though","date":"2015-04-13T16:39:29.127Z","type":"message"}
{"nick":"arv","message":"we know if it is a keyword","date":"2015-04-13T16:39:39.162Z","type":"message"}
{"nick":"caitp","message":"when you parse an Object/Array pattern, you're not going to know","date":"2015-04-13T16:39:41.723Z","type":"message"}
{"nick":"arv","message":"and we knows it is a duplicate","date":"2015-04-13T16:39:49.739Z","type":"message"}
{"nick":"arv","message":"For destructuring bindings we do not need to use the array/object literal parser","date":"2015-04-13T16:40:36.025Z","type":"message"}
{"nick":"arv","message":"Dmitry should be involved in this discussion","date":"2015-04-13T16:40:55.727Z","type":"message"}
{"nick":"arv","message":"To make it clear. We should have dedicated parse functions for parseBindingPattern","date":"2015-04-13T16:42:08.415Z","type":"message"}
{"nick":"arv","message":"it is only for BindingAssignment you need the cover grammaar","date":"2015-04-13T16:42:25.980Z","type":"message"}
{"nick":"caitp","message":"that's fine, but you still need to be able to communicate the info back to ParseFormalParameters","date":"2015-04-13T16:42:32.358Z","type":"message"}
{"nick":"caitp","message":"on a per binding basis","date":"2015-04-13T16:43:07.811Z","type":"message"}
{"nick":"arv","message":"Agreed. The current list needs to contain an AST","date":"2015-04-13T16:43:08.807Z","type":"message"}
{"nick":"caitp","message":"if you have a list of bound names (which may or may not be an actual list), an error location, and an expression list, and the index of a rest parameter, maybe that's enough info","date":"2015-04-13T16:46:22.775Z","type":"message"}
{"nick":"arv","message":"Once you have destructuring in there you probably need to store an AST (unless we use some kind of syntactic sugar)","date":"2015-04-13T16:47:58.898Z","type":"message"}
{"nick":"arv","message":"Not sure what the plan is there?","date":"2015-04-13T16:48:09.860Z","type":"message"}
{"nick":"caitp","message":"well you need ast info for initializers, it probably makes sense for the rest of destructuring too","date":"2015-04-13T16:54:00.778Z","type":"message"}
{"nick":"davi","date":"2015-04-13T17:05:01.042Z","type":"join"}
{"nick":"davi","reason":"Changing host","date":"2015-04-13T17:05:01.042Z","type":"quit"}
{"nick":"davi","date":"2015-04-13T17:05:01.042Z","type":"join"}
{"nick":"muelli","date":"2015-04-13T17:05:23.189Z","type":"join"}
{"nick":"jugglinmike","message":"arv: I'm having trouble figuring out the correct behavior of a certain statement in es6. Mind taking a look?","date":"2015-04-13T17:06:43.149Z","type":"message"}
{"nick":"jugglinmike","message":"(function*() { var yield; yield; })().next();","date":"2015-04-13T17:06:47.581Z","type":"message"}
{"nick":"jugglinmike","message":"in cases like that ^, does the environment record take precedence? Or does the syntax?","date":"2015-04-13T17:07:35.023Z","type":"message"}
{"nick":"jugglinmike","message":"in other words, should that produce `{ result: undefined, done: false }` or `{ result: undefined, done: true }`?","date":"2015-04-13T17:08:48.662Z","type":"message"}
{"nick":"arv","message":"A binding cannot be named yield inside a generator function","date":"2015-04-13T17:08:51.586Z","type":"message"}
{"nick":"arv","message":"It should be a SyntaxError","date":"2015-04-13T17:09:02.660Z","type":"message"}
{"nick":"jugglinmike","message":"Isn't that only the case in Strict mode?","date":"2015-04-13T17:09:18.390Z","type":"message"}
{"nick":"arv","message":"I don't think so","date":"2015-04-13T17:09:41.750Z","type":"message"}
{"nick":"ofrobots","date":"2015-04-13T17:09:46.891Z","type":"join"}
{"nick":"jugglinmike","message":"the same way that `(function() { var let; })` is valid?","date":"2015-04-13T17:09:47.787Z","type":"message"}
{"nick":"arv","message":"gtg... I can dig into the spec a bit when I come back","date":"2015-04-13T17:10:02.701Z","type":"message"}
{"nick":"jugglinmike","message":"thanks--I'll keep looking in the mean time","date":"2015-04-13T17:10:47.649Z","type":"message"}
{"nick":"caitp","message":"i'm reading it, and it looks to me like you can declare a variable named \"yield\" in non-strict code","date":"2015-04-13T17:14:26.069Z","type":"message"}
{"nick":"caitp","message":"which seems like it's probably a spec bug","date":"2015-04-13T17:14:33.323Z","type":"message"}
{"nick":"caitp","message":"you know what","date":"2015-04-13T17:16:27.183Z","type":"message"}
{"nick":"caitp","message":"I might be wrong","date":"2015-04-13T17:16:32.380Z","type":"message"}
{"nick":"jugglinmike","message":"caitp: yeah, it's only FutureReserved in strict mode","date":"2015-04-13T17:17:00.378Z","type":"message"}
{"nick":"jugglinmike","message":"If there were to be a restriction on `yield` that was specific to generator function bodies (strict or otherwise), I think it would be here https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generator-function-definitions-static-semantics-early-errors","date":"2015-04-13T17:17:11.152Z","type":"message"}
{"nick":"caitp","message":"it's hard to read the parameterization rules","date":"2015-04-13T17:17:38.231Z","type":"message"}
{"nick":"caitp","message":"but it looks like it might be disallowed by parameterization","date":"2015-04-13T17:17:45.885Z","type":"message"}
{"nick":"jugglinmike","message":"wouldn't that be denoted on the GeneratorBody references themselves?","date":"2015-04-13T17:18:52.575Z","type":"message"}
{"nick":"caitp","message":"BindingIdentifier[Yield]: Identifier [~Yield] yield","date":"2015-04-13T17:19:43.117Z","type":"message"}
{"nick":"caitp","message":"should mean that \"yield\" can only be a BindingIdentifier if the [YIeld] parameterization is \"off\"","date":"2015-04-13T17:20:13.929Z","type":"message"}
{"nick":"caitp","message":"the notation is really hard to read so it's possible I'm wrong, but that's what it looks like to me","date":"2015-04-13T17:20:33.971Z","type":"message"}
{"nick":"jugglinmike","message":"I've been tripped up by these more than a few times","date":"2015-04-13T17:20:52.244Z","type":"message"}
{"nick":"jugglinmike","message":"caitp: Rick just pointed me to https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generator-function-definitions","date":"2015-04-13T17:22:26.977Z","type":"message"}
{"nick":"jugglinmike","message":"GeneratorBody :         FunctionBody[Yield]       ","date":"2015-04-13T17:22:42.404Z","type":"message"}
{"nick":"caitp","message":"yes, which is why VariableStatements within the GeneratorBody should not be able to use \"yield\" as a BindingIdentifier","date":"2015-04-13T17:23:04.339Z","type":"message"}
{"nick":"caitp","message":"if I'm reading it right :p","date":"2015-04-13T17:23:08.738Z","type":"message"}
{"nick":"jugglinmike","message":"If a right-hand side alternative is prefixed with “[+parameter]” that alternative is only available if the       named parameter was used in referencing the production’s nonterminal symbol. If a right-hand side alternative is       prefixed with “[~parameter]” that alternative is only available if the named parameter was not used in       referencing the production’s nonterminal symbol.","date":"2015-04-13T17:24:30.636Z","type":"message"}
{"nick":"jugglinmike","message":"caitp: I think you are","date":"2015-04-13T17:24:39.111Z","type":"message"}
{"nick":"jugglinmike","message":"thanks for the help!","date":"2015-04-13T17:26:15.492Z","type":"message"}
{"nick":"caitp","message":"shur","date":"2015-04-13T17:26:22.549Z","type":"message"}
{"nick":"mostynb","date":"2015-04-13T17:29:15.263Z","type":"join"}
{"nick":"muelli","reason":"Ping timeout: 245 seconds","date":"2015-04-13T17:41:13.177Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-04-13T17:44:58.262Z","type":"quit"}
{"nick":"caitp-","date":"2015-04-13T18:05:52.171Z","type":"join"}
{"nick":"ofrobots","date":"2015-04-13T18:08:03.332Z","type":"join"}
{"nick":"caitp-","reason":"Ping timeout: 244 seconds","date":"2015-04-13T18:11:02.269Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-04-13T18:43:46.994Z","type":"quit"}
{"nick":"bradleymeck","date":"2015-04-13T18:48:08.108Z","type":"join"}
{"nick":"muelli","date":"2015-04-13T18:49:32.272Z","type":"join"}
{"nick":"srl295","reason":"Ping timeout: 250 seconds","date":"2015-04-13T18:53:08.520Z","type":"quit"}
{"nick":"srl295","date":"2015-04-13T18:53:57.213Z","type":"join"}
{"nick":"srl295","reason":"Changing host","date":"2015-04-13T18:53:57.373Z","type":"quit"}
{"nick":"srl295","date":"2015-04-13T18:53:57.373Z","type":"join"}
{"nick":"davi","reason":"Ping timeout: 246 seconds","date":"2015-04-13T19:05:02.885Z","type":"quit"}
{"nick":"jonaslund","date":"2015-04-13T19:13:21.861Z","type":"join"}
{"nick":"jonaslund","date":"2015-04-13T19:13:24.248Z","type":"part"}
{"nick":"caitp-","date":"2015-04-13T19:21:09.210Z","type":"join"}
{"nick":"jugglinmike","message":"caitp- caitp Do you know why it is written as `Identifier [~Yield]  yield` and not `Identifier [+Yield]  yield` ? It seems like if it were written with `+`, the productions would be more intuitive--the \"[Yield]\" subscript parameter would then mean, \"`yield` *is* valid in this production\". Of course, I may have just confused myself again","date":"2015-04-13T19:27:44.225Z","type":"message"}
{"nick":"arv","message":"I also find the parameter notation overly confusing... maybe this annotation is common in cs though?","date":"2015-04-13T19:30:14.597Z","type":"message"}
{"nick":"caitp-","message":"i haven't really seen it in any other bnf-ish grammar","date":"2015-04-13T19:30:58.034Z","type":"message"}
{"nick":"caitp-","message":"i guess yacc has some similar concepts with states though","date":"2015-04-13T19:31:32.777Z","type":"message"}
{"nick":"caitp-","message":"but not really","date":"2015-04-13T19:31:36.019Z","type":"message"}
{"nick":"jugglinmike","message":"I couldn't say :/","date":"2015-04-13T19:33:08.764Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2015-04-13T19:34:24.639Z","type":"quit"}
{"nick":"bradleymeck","message":"im not sure https://code.google.com/p/v8/issues/detail?id=3133&q=generator&colspec=ID%20Pri%20M%20Week%20ReleaseBlock%20Cr%20Status%20Owner%20Summary%20OS%20Modified should be an issue given the spec test I linked","date":"2015-04-13T19:38:58.071Z","type":"message"}
{"nick":"jugglinmike","message":"alternatively, `Identifier [~NoYield] yield`","date":"2015-04-13T19:39:46.638Z","type":"message"}
{"nick":"mostynb","reason":"Quit: Leaving","date":"2015-04-13T19:40:07.610Z","type":"quit"}
{"nick":"jugglinmike","message":"then just find-and-replace `[Yield]` with `[NoYield]`","date":"2015-04-13T19:40:09.507Z","type":"message"}
{"nick":"caitp-","message":"haven't you heard, default-deny is better than default-permit","date":"2015-04-13T19:42:11.383Z","type":"message"}
{"nick":"rendar","reason":"Ping timeout: 250 seconds","date":"2015-04-13T19:46:11.443Z","type":"quit"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-04-13T19:51:47.900Z","type":"quit"}
{"nick":"rendar","date":"2015-04-13T19:52:59.391Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-04-13T19:54:42.919Z","type":"quit"}
{"nick":"wingo","reason":"Ping timeout: 246 seconds","date":"2015-04-13T20:05:35.882Z","type":"quit"}
{"nick":"enaqx","date":"2015-04-13T20:08:51.274Z","type":"join"}
{"nick":"ofrobots","date":"2015-04-13T20:15:46.362Z","type":"join"}
{"nick":"wingo","date":"2015-04-13T20:20:10.224Z","type":"join"}
{"nick":"bradleymeck","date":"2015-04-13T20:26:43.258Z","type":"join"}
{"nick":"enaqx","reason":"Remote host closed the connection","date":"2015-04-13T20:35:32.934Z","type":"quit"}
{"nick":"bnoordhuis","date":"2015-04-13T20:40:34.487Z","type":"join"}
{"nick":"enaqx","date":"2015-04-13T20:41:59.248Z","type":"join"}
{"nick":"enaqx","reason":"Remote host closed the connection","date":"2015-04-13T20:43:25.084Z","type":"quit"}
{"nick":"enaqx","date":"2015-04-13T20:45:04.111Z","type":"join"}
{"nick":"enaqx","reason":"Remote host closed the connection","date":"2015-04-13T20:52:23.375Z","type":"quit"}
{"nick":"plutoniix","reason":"Ping timeout: 272 seconds","date":"2015-04-13T21:01:24.235Z","type":"quit"}
{"nick":"enaqx","date":"2015-04-13T21:05:21.069Z","type":"join"}
{"nick":"enaqx","reason":"Remote host closed the connection","date":"2015-04-13T21:05:58.798Z","type":"quit"}
{"nick":"enaqx","date":"2015-04-13T21:06:12.390Z","type":"join"}
{"nick":"plutoniix","date":"2015-04-13T21:28:47.297Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-04-13T21:35:44.797Z","type":"quit"}
{"nick":"muelli","reason":"Ping timeout: 245 seconds","date":"2015-04-13T21:50:23.139Z","type":"quit"}
{"nick":"rendar","date":"2015-04-13T21:52:48.023Z","type":"quit"}
{"nick":"wingo","reason":"Ping timeout: 265 seconds","date":"2015-04-13T21:59:15.113Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2015-04-13T22:19:12.658Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 250 seconds","date":"2015-04-13T22:19:50.465Z","type":"quit"}
{"nick":"jugglinmike","reason":"Ping timeout: 255 seconds","date":"2015-04-13T22:24:43.508Z","type":"quit"}
{"nick":"bradleymeck","date":"2015-04-13T22:43:04.229Z","type":"join"}
{"nick":"ofrobots","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2015-04-13T22:49:27.552Z","type":"quit"}
{"nick":"ofrobots","date":"2015-04-13T22:50:14.511Z","type":"join"}
{"nick":"ofrobots","reason":"Client Quit","date":"2015-04-13T22:50:59.852Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2015-04-13T22:59:44.637Z","type":"quit"}
{"nick":"ofrobots","date":"2015-04-13T23:02:31.252Z","type":"join"}
{"nick":"ofrobots","reason":"Client Quit","date":"2015-04-13T23:03:41.603Z","type":"quit"}
{"nick":"ofrobots","date":"2015-04-13T23:05:01.600Z","type":"join"}
{"nick":"ofrobots","reason":"Client Quit","date":"2015-04-13T23:07:01.969Z","type":"quit"}
{"nick":"ofrobots","date":"2015-04-13T23:23:12.376Z","type":"join"}
{"nick":"ofrobots","reason":"Client Quit","date":"2015-04-13T23:24:05.380Z","type":"quit"}
{"nick":"bradleymeck","date":"2015-04-13T23:26:16.084Z","type":"join"}
{"nick":"bnoordhuis","date":"2015-04-13T23:26:30.878Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 246 seconds","date":"2015-04-13T23:31:02.878Z","type":"quit"}
{"nick":"ofrobots","date":"2015-04-13T23:37:03.396Z","type":"join"}
{"nick":"ph0dder","new_nick":"erichanson","date":"2015-04-13T23:56:47.887Z","type":"nick"}
