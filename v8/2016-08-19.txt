{"nick":"plutoniix","reason":"Quit: Leaving","date":"2016-08-19T00:10:09.101Z","type":"quit"}
{"nick":"xaxxon","reason":"Quit: xaxxon","date":"2016-08-19T00:34:35.917Z","type":"quit"}
{"nick":"plutoniix","date":"2016-08-19T02:19:03.347Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Ping timeout: 276 seconds","date":"2016-08-19T02:41:00.292Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2016-08-19T03:00:23.696Z","type":"join"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2016-08-19T03:56:25.853Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-08-19T03:58:18.515Z","type":"join"}
{"nick":"bradleymeck","reason":"Read error: Connection reset by peer","date":"2016-08-19T04:26:16.489Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-08-19T04:29:05.496Z","type":"join"}
{"nick":"plutoniix","reason":"Remote host closed the connection","date":"2016-08-19T06:49:12.186Z","type":"quit"}
{"nick":"hferreiro","date":"2016-08-19T10:06:53.869Z","type":"join"}
{"nick":"Keverw","reason":"Read error: Connection reset by peer","date":"2016-08-19T10:24:14.622Z","type":"quit"}
{"nick":"hferreiro","reason":"Remote host closed the connection","date":"2016-08-19T10:29:44.070Z","type":"quit"}
{"nick":"seventh","date":"2016-08-19T12:33:04.734Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-08-19T12:34:54.349Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-08-19T13:07:39.278Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"gclient runhooks\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux%20-%20debug%20builder/builds/16014 \"V8 Linux - debug builder\" from 20a8ef0b92604d65f7d2d27be406245588d18b22: jbroman@chromium.org)","date":"2016-08-19T13:44:16.427Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-08-19T13:53:56.712Z","type":"quit"}
{"nick":"RT|Chatzilla","reason":"Read error: Connection reset by peer","date":"2016-08-19T13:54:26.897Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2016-08-19T13:59:48.234Z","type":"join"}
{"nick":"bradleymeck","date":"2016-08-19T14:26:47.660Z","type":"join"}
{"nick":"seventh","reason":"Ping timeout: 244 seconds","date":"2016-08-19T14:38:07.921Z","type":"quit"}
{"nick":"plutoniix","date":"2016-08-19T14:59:41.708Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-08-19T15:10:49.823Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by vogelheim@chromium.org: Tree is open (looks like a fluke; not really sure, though)","date":"2016-08-19T15:24:03.409Z","type":"message"}
{"nick":"bradleymeck","date":"2016-08-19T15:42:18.714Z","type":"join"}
{"nick":"bradleymeck","date":"2016-08-19T15:42:35.353Z","type":"part"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by vogelheim@chromium.org: Tree is open (oooooopen)","date":"2016-08-19T15:46:12.821Z","type":"message"}
{"nick":"bobmcw","date":"2016-08-19T15:53:16.227Z","type":"join"}
{"nick":"seventh","date":"2016-08-19T16:25:09.172Z","type":"join"}
{"nick":"cslcm","date":"2016-08-19T16:27:21.899Z","type":"quit"}
{"nick":"thefourtheye","date":"2016-08-19T16:29:15.213Z","type":"join"}
{"nick":"bradleymeck","date":"2016-08-19T16:29:46.767Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Read error: Connection reset by peer","date":"2016-08-19T16:43:16.104Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-08-19T17:13:06.955Z","type":"quit"}
{"nick":"seventh","reason":"Quit: ...","date":"2016-08-19T18:57:13.557Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-08-19T19:03:11.210Z","type":"join"}
{"nick":"dherman","message":"what does oilpan mean for the future of the rooting/handle API?","date":"2016-08-19T19:16:38.795Z","type":"message"}
{"nick":"aklein","message":"dherman: hard to see the future...I can't imagine we'd want to require embedders to have a traceable heap though :)","date":"2016-08-19T19:56:15.716Z","type":"message"}
{"nick":"dherman","message":"aklein: I can see that. it might be good to be able to enable embedders to if they want to though","date":"2016-08-19T19:57:26.618Z","type":"message"}
{"nick":"dherman","message":"btw I'm curious if you have thoughts about my API request","date":"2016-08-19T19:57:45.885Z","type":"message"}
{"nick":"aklein","message":"seems reasonable","date":"2016-08-19T19:57:48.684Z","type":"message"}
{"nick":"dherman","message":"any advice on how to move it forward?","date":"2016-08-19T19:58:10.545Z","type":"message"}
{"nick":"dherman","message":"I'm happy to Do The Work","date":"2016-08-19T19:58:26.802Z","type":"message"}
{"nick":"aklein","message":"it did get triaged correctly to the right folks...August can just be a fairly slow month as many folks are on vacation","date":"2016-08-19T20:00:24.200Z","type":"message"}
{"nick":"dherman","message":"np","date":"2016-08-19T20:01:13.446Z","type":"message"}
{"nick":"aklein","message":"CCed a few more people","date":"2016-08-19T20:01:41.604Z","type":"message"}
{"nick":"aklein","message":"cbruni@ in particular is our current ElementsAccessor expert","date":"2016-08-19T20:02:09.175Z","type":"message"}
{"nick":"aklein","message":"and has been looking a lot at what makes using the API slow","date":"2016-08-19T20:02:20.215Z","type":"message"}
{"nick":"caitp","message":"jakob seems pretty knowledgable about it as well","date":"2016-08-19T20:02:33.066Z","type":"message"}
{"nick":"aklein","message":"yeah","date":"2016-08-19T20:03:02.015Z","type":"message"}
{"nick":"dherman","message":"thx!","date":"2016-08-19T20:03:16.235Z","type":"message"}
{"nick":"aklein","message":"as for Doing The Work, I think I'd like to get someone to say \"yes that's a good idea\" before suggesting you go write code...","date":"2016-08-19T20:03:27.861Z","type":"message"}
{"nick":"dherman","message":"oh absolutely","date":"2016-08-19T20:03:34.227Z","type":"message"}
{"nick":"dherman","message":"that's why I ask","date":"2016-08-19T20:03:36.427Z","type":"message"}
{"nick":"dherman","message":"and I also include \"flesh out more of the design\" amongst \"The Work\"","date":"2016-08-19T20:03:46.433Z","type":"message"}
{"nick":"dherman","message":"basically I'm looking to help but I'm not going to run ahead of consensus","date":"2016-08-19T20:03:56.619Z","type":"message"}
{"nick":"aklein","message":"sounds about right, hopefully we can get you some initial feedback","date":"2016-08-19T20:10:03.994Z","type":"message"}
{"nick":"aklein","message":"(my initial feedback is that it seems reasonable but that particular code isn't my usual responsibility :)","date":"2016-08-19T20:10:20.234Z","type":"message"}
{"nick":"dherman","message":"kk! and thanks for the help!","date":"2016-08-19T20:13:07.088Z","type":"message"}
{"nick":"dherman","message":"ok I have a probably dumb question","date":"2016-08-19T20:22:03.436Z","type":"message"}
{"nick":"dherman","message":"actually nvm","date":"2016-08-19T20:22:27.597Z","type":"message"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2016-08-19T20:51:52.256Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-08-19T21:07:04.851Z","type":"quit"}
{"nick":"koldbrutality","reason":"Ping timeout: 240 seconds","date":"2016-08-19T21:56:03.879Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-08-19T21:58:36.664Z","type":"join"}
{"nick":"koldbrutality","date":"2016-08-19T22:05:09.886Z","type":"join"}
{"nick":"koldbrutality","reason":"Ping timeout: 240 seconds","date":"2016-08-19T22:09:33.918Z","type":"quit"}
{"nick":"koldbrutality","date":"2016-08-19T22:12:36.880Z","type":"join"}
{"nick":"aklein","message":"caitp: if you're around, I'm curious if you know why this line exists: https://cs.chromium.org/chromium/src/v8/src/parsing/parser-base.h?rcl=0&l=2787","date":"2016-08-19T22:14:46.845Z","type":"message"}
{"nick":"caitp","message":"to ban an arrow function with `await` as a formal parameter defined within an async function, afaik","date":"2016-08-19T22:17:47.687Z","type":"message"}
{"nick":"aklein","message":"that's what the third line down does, I think","date":"2016-08-19T22:18:18.049Z","type":"message"}
{"nick":"aklein","message":"I removed the ExpressionError line and no tests fail...","date":"2016-08-19T22:18:26.942Z","type":"message"}
{"nick":"aklein","message":"hmm, let's run test262","date":"2016-08-19T22:18:35.993Z","type":"message"}
{"nick":"caitp","message":"feel free to remove it if tests pass","date":"2016-08-19T22:19:00.644Z","type":"message"}
{"nick":"aklein","message":"k, the \"just in case\" made me immediately suspicious of it","date":"2016-08-19T22:19:16.317Z","type":"message"}
{"nick":"aklein","message":"another related question, is there a reason that AsyncBindingPatternProduction is separate from BindingPatternProduction?","date":"2016-08-19T22:23:12.014Z","type":"message"}
{"nick":"aklein","message":"similar question for AsyncArrowFormalParameters","date":"2016-08-19T22:23:21.645Z","type":"message"}
{"nick":"aklein","message":"caitp: ^","date":"2016-08-19T22:23:25.464Z","type":"message"}
{"nick":"caitp","message":"well, within an async function, you do always need an operand for await, so }, ) and ], and , would all mean not operands","date":"2016-08-19T22:24:01.408Z","type":"message"}
{"nick":"aklein","message":"hmm, ok, trying to wrap my head around this","date":"2016-08-19T22:24:15.516Z","type":"message"}
{"nick":"caitp","message":"the thing on line 3 actually looks wrong, since the AsyncArrowFormalParameters error should be recorded in ParseAndClassifyIdentifier or w/e it's called","date":"2016-08-19T22:27:29.973Z","type":"message"}
{"nick":"caitp","message":"should just be a plain arrow function error, afaik","date":"2016-08-19T22:27:41.709Z","type":"message"}
{"nick":"caitp","message":"iirc `async function() { var f = (await) => await; }` is illegal, similar to `function* g() { var f = (yield) => yield; }` is illegal","date":"2016-08-19T22:28:22.057Z","type":"message"}
{"nick":"caitp","message":"but I would ask bterlson for clarification","date":"2016-08-19T22:28:34.074Z","type":"message"}
{"nick":"aklein","message":"I was _just_ about to ask that","date":"2016-08-19T22:28:35.672Z","type":"message"}
{"nick":"aklein","message":"to bterlson","date":"2016-08-19T22:28:38.481Z","type":"message"}
{"nick":"aklein","message":"because it seems weird to not follow what we did for yield","date":"2016-08-19T22:28:47.271Z","type":"message"}
{"nick":"aklein","message":"our parsing tests test that it works","date":"2016-08-19T22:31:17.999Z","type":"message"}
{"nick":"caitp","message":"hmm","date":"2016-08-19T22:31:41.719Z","type":"message"}
{"nick":"caitp","message":"I think I did ask him before but I can't remember","date":"2016-08-19T22:31:46.181Z","type":"message"}
{"nick":"caitp","message":"I think we can get rid of the UnexpectedToken thing, but probably need to change the classifier error to an ArrowFunction error","date":"2016-08-19T22:35:21.377Z","type":"message"}
{"nick":"caitp","message":"and fix tests if the tests are just wrong","date":"2016-08-19T22:35:59.714Z","type":"message"}
{"nick":"aklein","message":"k, working on it...","date":"2016-08-19T22:38:11.377Z","type":"message"}
{"nick":"caitp","message":"I can't actually find tests in test-parsing.cc that involve the normal arrow function with the `await` keyword","date":"2016-08-19T22:38:22.698Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-08-19T22:38:44.278Z","type":"quit"}
{"nick":"aklein","message":"caitp: I found 1","date":"2016-08-19T22:39:46.217Z","type":"message"}
{"nick":"aklein","message":"search for \"(await) =>\"","date":"2016-08-19T22:39:51.260Z","type":"message"}
{"nick":"caitp","message":"only instance I see is an async arrow function","date":"2016-08-19T22:40:29.033Z","type":"message"}
{"nick":"caitp","message":"none with the plain non-async arrow","date":"2016-08-19T22:40:52.608Z","type":"message"}
{"nick":"caitp","message":"`async function f() { var x = (await) => 1; }` is not a SyntaxError in Canary, so I'm pretty sure the bug is that line recording the wrong type of error","date":"2016-08-19T22:43:03.551Z","type":"message"}
{"nick":"aklein","message":"yes, it is","date":"2016-08-19T22:43:35.158Z","type":"message"}
{"nick":"aklein","message":"https://cs.chromium.org/chromium/src/v8/test/cctest/test-parsing.cc?q=%5C(await%5C)%5C+%3D%3E&sq=package:chromium&l=7755&dr=C","date":"2016-08-19T22:43:40.958Z","type":"message"}
{"nick":"aklein","message":"that's the test","date":"2016-08-19T22:43:43.463Z","type":"message"}
{"nick":"aklein","message":"there's other weird stuff here","date":"2016-08-19T22:44:18.909Z","type":"message"}
{"nick":"caitp","message":"ah I see. that's testing that it's not an error, though","date":"2016-08-19T22:44:24.811Z","type":"message"}
{"nick":"aklein","message":"right :)","date":"2016-08-19T22:44:29.300Z","type":"message"}
{"nick":"caitp","message":"so yeah, bad test","date":"2016-08-19T22:44:31.166Z","type":"message"}
{"nick":"aklein","message":"fix coming up","date":"2016-08-19T22:45:33.928Z","type":"message"}
{"nick":"caitp","message":"what other weird stuff? those other things all look pretty normal","date":"2016-08-19T22:45:35.808Z","type":"message"}
{"nick":"aklein","message":"hmm, actually, no, ignore the \"other weird stuff\" thing","date":"2016-08-19T22:46:02.646Z","type":"message"}
{"nick":"aklein","message":"looks like we don't need AsyncBindingPatternProduction as its own category in ExpressionClassifier","date":"2016-08-19T22:54:44.533Z","type":"message"}
{"nick":"aklein","message":"though it sounds like we do need AsyncArrowFormalParametersProduction?","date":"2016-08-19T22:54:58.182Z","type":"message"}
{"nick":"caitp","message":"I believe we do need AsyncArrowFormalParametersProduction to ban `await`. I believe the BindingPattern thing was for banning `await` in var { ... } declarations","date":"2016-08-19T22:55:57.395Z","type":"message"}
{"nick":"caitp","message":"some of that stuff also probably helps ban it in `var [ ... ]` too, not sure. the recursive decent parser has become a bit hard to follow.","date":"2016-08-19T22:56:55.012Z","type":"message"}
{"nick":"aklein","message":"yeah","date":"2016-08-19T22:58:51.101Z","type":"message"}
{"nick":"aklein","message":"we may finally be getting rewindable token stream, some day!","date":"2016-08-19T22:59:07.114Z","type":"message"}
{"nick":"aklein","message":"just happened to find this stuff when trying to answer questions gsathya was posing...","date":"2016-08-19T23:08:41.302Z","type":"message"}
{"nick":"caitp","message":"I posted on that to give you background on it. ","date":"2016-08-19T23:11:46.020Z","type":"message"}
{"nick":"caitp","message":"unfortunately, rietveld posted a double comment, so sorry about the extra email","date":"2016-08-19T23:12:04.781Z","type":"message"}
{"nick":"dherman","reason":"Ping timeout: 244 seconds","date":"2016-08-19T23:12:43.954Z","type":"quit"}
{"nick":"oleavr","reason":"Ping timeout: 276 seconds","date":"2016-08-19T23:12:45.733Z","type":"quit"}
{"nick":"littledan__","reason":"Ping timeout: 264 seconds","date":"2016-08-19T23:13:04.042Z","type":"quit"}
{"nick":"littledan__","date":"2016-08-19T23:13:15.428Z","type":"join"}
{"nick":"aklein","message":"oh dear","date":"2016-08-19T23:13:58.423Z","type":"message"}
{"nick":"aklein","message":"that RecordExpressionError is very much required","date":"2016-08-19T23:14:06.357Z","type":"message"}
{"nick":"aklein","message":"we just have to test coverage for it","date":"2016-08-19T23:14:10.754Z","type":"message"}
{"nick":"caitp","message":"what breaks without it?","date":"2016-08-19T23:15:56.776Z","type":"message"}
{"nick":"dherman","date":"2016-08-19T23:16:05.468Z","type":"join"}
{"nick":"aklein","message":"async function foo() { return (await) }","date":"2016-08-19T23:16:17.174Z","type":"message"}
{"nick":"aklein","message":"isn't reported as an error","date":"2016-08-19T23:16:21.583Z","type":"message"}
{"nick":"caitp","message":"ah","date":"2016-08-19T23:16:22.683Z","type":"message"}
{"nick":"aklein","message":"ooo, and I found another bug!","date":"2016-08-19T23:19:02.010Z","type":"message"}
{"nick":"oleavr","date":"2016-08-19T23:19:23.194Z","type":"join"}
{"nick":"aklein","message":"async function foo() { return {await} }","date":"2016-08-19T23:19:31.006Z","type":"message"}
{"nick":"aklein","message":"sigh","date":"2016-08-19T23:19:32.429Z","type":"message"}
{"nick":"aklein","message":"this parser is hard to maintain","date":"2016-08-19T23:19:41.877Z","type":"message"}
{"nick":"caitp","message":"well, if any of those tokens are found following an `await` in an async function, I think it's valid to just instantly SyntaxError, and not involve the classifier","date":"2016-08-19T23:20:45.446Z","type":"message"}
{"nick":"caitp","message":"since the operand is not optional in async funcitons","date":"2016-08-19T23:20:51.676Z","type":"message"}
{"nick":"aklein","message":"yeah it's the structure of this code that's leading to those errors","date":"2016-08-19T23:21:02.213Z","type":"message"}
{"nick":"caitp","message":"it was probably all written that way to make `await` legal in arrow formal params inside an async function, so the classifier stuff there is probably not needed at all anymore","date":"2016-08-19T23:22:20.625Z","type":"message"}
{"nick":"RT|Chatzilla","date":"2016-08-19T23:22:23.078Z","type":"join"}
{"nick":"aklein","message":"yeah that's the definite feeling I'm getting :)","date":"2016-08-19T23:23:00.929Z","type":"message"}
{"nick":"aklein","message":"let's try deleting it and see what we get","date":"2016-08-19T23:23:18.174Z","type":"message"}
{"nick":"caitp","message":"well, delete and replace with `ReportMessageAt()`","date":"2016-08-19T23:25:15.839Z","type":"message"}
{"nick":"caitp","message":"i guess the only issue is not knowing if it's a \"bad formal parameters\" message or a \"bad expression\" message","date":"2016-08-19T23:25:55.215Z","type":"message"}
{"nick":"caitp","message":"personally, I'm fine with reporting a less understandable message if it means getting rid of more uses of the classifier","date":"2016-08-19T23:26:35.033Z","type":"message"}
{"nick":"thefourtheye","reason":"Quit: Connection closed for inactivity","date":"2016-08-19T23:31:26.081Z","type":"quit"}
{"nick":"aklein","message":"I can just delete, it causes ParseUnaryExpression() to choke on an RPAREN, COMMA, etc","date":"2016-08-19T23:33:13.729Z","type":"message"}
{"nick":"aklein","message":"that is, the error is that your await expression is malformed, not that you tried to use 'await' as an identifier","date":"2016-08-19T23:33:44.748Z","type":"message"}
{"nick":"aklein","message":"actually I'm not sure about the \"{await}\" case now","date":"2016-08-19T23:33:59.655Z","type":"message"}
{"nick":"aklein","message":"does object literal shorthand have any special rules?","date":"2016-08-19T23:34:11.270Z","type":"message"}
{"nick":"caitp","message":"what do you mean by special?","date":"2016-08-19T23:35:02.124Z","type":"message"}
{"nick":"aklein","message":"well, {await: 42} is clearly valid","date":"2016-08-19T23:35:40.227Z","type":"message"}
{"nick":"caitp","message":"`BindingIdentifier Initializer(opt)`","date":"2016-08-19T23:35:46.835Z","type":"message"}
{"nick":"caitp","message":"you can't declare a variable named await, so `var {await} = {}` would be an error","date":"2016-08-19T23:36:23.415Z","type":"message"}
{"nick":"caitp","message":"as would `var {await = 10}`","date":"2016-08-19T23:36:36.909Z","type":"message"}
{"nick":"aklein","message":"you can outside the function","date":"2016-08-19T23:36:39.970Z","type":"message"}
{"nick":"aklein","message":"I'm not talking about destructuring","date":"2016-08-19T23:36:48.072Z","type":"message"}
{"nick":"aklein","message":"this is for an object litearl","date":"2016-08-19T23:36:51.963Z","type":"message"}
{"nick":"aklein","message":"ok, the shorthand is an IdentifierReference","date":"2016-08-19T23:37:05.891Z","type":"message"}
{"nick":"aklein","message":"whee","date":"2016-08-19T23:37:14.688Z","type":"message"}
{"nick":"caitp","message":"what is the difference between IdentifierReference and BindingIdentifier?","date":"2016-08-19T23:39:03.264Z","type":"message"}
{"nick":"caitp","message":"their productions look identical","date":"2016-08-19T23:39:10.328Z","type":"message"}
{"nick":"aklein","message":"the difference I was talking about is between PropertyName and IdentifierReference","date":"2016-08-19T23:40:30.505Z","type":"message"}
{"nick":"caitp","message":"oh, yes, you can't have { \"foo\" = 1 } or { [foo] = 1 }","date":"2016-08-19T23:41:05.051Z","type":"message"}
{"nick":"aklein","message":"we're still talking about different things...","date":"2016-08-19T23:41:42.604Z","type":"message"}
{"nick":"caitp","message":"\"yield\" restrictions (and \"await\" restrictions) still apply to IdentifierReferences, not to PropertyNames","date":"2016-08-19T23:43:05.687Z","type":"message"}
{"nick":"aklein","message":"right","date":"2016-08-19T23:43:10.176Z","type":"message"}
{"nick":"aklein","message":"I think we actually get this wrong in a variety of ways","date":"2016-08-19T23:43:17.498Z","type":"message"}
{"nick":"aklein","message":"\"{eval}\" is treated as a valid object literal in strict code","date":"2016-08-19T23:43:29.393Z","type":"message"}
{"nick":"caitp","message":"would not surprise me","date":"2016-08-19T23:43:34.843Z","type":"message"}
{"nick":"aklein","message":"whee off to file a bug","date":"2016-08-19T23:43:43.616Z","type":"message"}
{"nick":"aklein","message":"kinda shocked there aren't test262 tests for this","date":"2016-08-19T23:43:54.517Z","type":"message"}
{"nick":"caitp","message":"it looks like that particular rule only applies to BindingIdentifier?","date":"2016-08-19T23:44:42.309Z","type":"message"}
{"nick":"caitp","message":"at least, in 12.1.1","date":"2016-08-19T23:44:55.139Z","type":"message"}
{"nick":"caitp","message":"I'm sure it comes up again somewhere","date":"2016-08-19T23:45:05.844Z","type":"message"}
{"nick":"caitp","message":"IsValidSimpleAssignmentTarget, ok","date":"2016-08-19T23:45:22.271Z","type":"message"}
{"nick":"caitp","message":"anyways, I\"m gonna walk away from this for now, ping me if any of my parser code is weird or something","date":"2016-08-19T23:46:16.995Z","type":"message"}
{"nick":"aklein","message":"have a good weekend","date":"2016-08-19T23:46:38.111Z","type":"message"}
{"nick":"aklein","message":"it's too late on friday to be worried about this stuff","date":"2016-08-19T23:46:44.072Z","type":"message"}
{"nick":"aklein","message":"oh, yeah","date":"2016-08-19T23:47:09.138Z","type":"message"}
{"nick":"aklein","message":"ok","date":"2016-08-19T23:47:10.718Z","type":"message"}
{"nick":"aklein","message":"yield is just special for other reasons","date":"2016-08-19T23:47:19.270Z","type":"message"}
