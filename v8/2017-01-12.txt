{"nick":"black_13","reason":"Ping timeout: 260 seconds","date":"2017-01-12T00:59:30.960Z","type":"quit"}
{"nick":"plutoniix","date":"2017-01-12T01:26:57.091Z","type":"join"}
{"nick":"trungl-bot`","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Mjsunit\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux64%20GC%20Stress%20-%20custom%20snapshot/builds/10295 \"V8 Linux64 GC Stress - custom snapshot\" from f5f22cfc581a6bc52275053c0ce4d5e7cc2ad9f1: bradnelson@chromium.org)","date":"2017-01-12T02:02:57.563Z","type":"message"}
{"nick":"trungl-bot`","message":"\u00033\u0002Tree opened\u000f by bradnelson@google.com: open","date":"2017-01-12T02:04:59.063Z","type":"message"}
{"nick":"Cube8","reason":"Quit: Leaving","date":"2017-01-12T02:11:27.970Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-01-12T02:34:56.220Z","type":"quit"}
{"nick":"nine_milli","reason":"Quit: nine_milli","date":"2017-01-12T03:48:16.935Z","type":"quit"}
{"nick":"nine_milli","date":"2017-01-12T04:15:48.769Z","type":"join"}
{"nick":"nine_milli","reason":"Quit: nine_milli","date":"2017-01-12T04:25:19.276Z","type":"quit"}
{"nick":"rosseaux","reason":"\"Leaving\"","date":"2017-01-12T05:40:01.562Z","type":"part"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-01-12T05:58:05.604Z","type":"quit"}
{"nick":"plutoniix","date":"2017-01-12T06:28:16.314Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-01-12T08:01:26.513Z","type":"quit"}
{"nick":"trungl-bot`","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Mjsunit,Mjsunit - ignition - turbofan,Bisect 31887804.Retry\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux%20-%20gc%20stress/builds/8105 \"V8 Linux - gc stress\" from cfc2e5e180f416e24fcbf532f32ded47d38a49ff: clemensh@chromium.org,mvstanton@chromium.org)","date":"2017-01-12T10:00:02.398Z","type":"message"}
{"nick":"trungl-bot`","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: open","date":"2017-01-12T10:16:07.662Z","type":"message"}
{"nick":"trigen","date":"2017-01-12T10:46:27.480Z","type":"join"}
{"nick":"trigen","message":"Hi, I have a EC6 `class some_class {}` already defined after a compile and run, now in C++ I want to create a new instance of this some_class. My approach seems wrong but I get stuck already at trying to get a handle (probably not the correct term); https://gist.github.com/rayburgemeestre/df6193d532c7b7908fe27c89799bfa3a ","date":"2017-01-12T10:51:24.068Z","type":"message"}
{"nick":"trigen","message":"Any pointer in the right direction would be greatly appreciated :)","date":"2017-01-12T10:51:35.237Z","type":"message"}
{"nick":"Guest59_","date":"2017-01-12T11:22:41.183Z","type":"join"}
{"nick":"Guest59","reason":"Ping timeout: 252 seconds","date":"2017-01-12T11:25:27.638Z","type":"quit"}
{"nick":"Cube8","date":"2017-01-12T12:15:01.752Z","type":"join"}
{"nick":"hferreiro","date":"2017-01-12T12:19:26.375Z","type":"join"}
{"nick":"rmcilroy","reason":"Ping timeout: 240 seconds","date":"2017-01-12T12:39:52.392Z","type":"quit"}
{"nick":"rmcilroy","date":"2017-01-12T12:51:31.373Z","type":"join"}
{"nick":"Net147","reason":"Ping timeout: 240 seconds","date":"2017-01-12T13:01:34.551Z","type":"quit"}
{"nick":"Net147","date":"2017-01-12T13:03:28.517Z","type":"join"}
{"nick":"bobmcw_","date":"2017-01-12T13:14:38.129Z","type":"join"}
{"nick":"Tweth-V-PDS","date":"2017-01-12T13:15:12.091Z","type":"join"}
{"nick":"Tweth-U-PDS","reason":"Read error: Connection reset by peer","date":"2017-01-12T13:17:39.763Z","type":"quit"}
{"nick":"bobmcw","reason":"Read error: Connection reset by peer","date":"2017-01-12T13:17:39.921Z","type":"quit"}
{"nick":"bobmcw_","new_nick":"bobmcw","date":"2017-01-12T13:18:07.215Z","type":"nick"}
{"nick":"bobmcw","reason":"Changing host","date":"2017-01-12T13:18:07.216Z","type":"quit"}
{"nick":"bobmcw","date":"2017-01-12T13:18:07.216Z","type":"join"}
{"nick":"trigen","message":"I also posted it to v8-users, perhaps how I explain it there is more clear; https://groups.google.com/forum/#!topic/v8-users/Hj2j4rJMwBw","date":"2017-01-12T14:38:54.247Z","type":"message"}
{"nick":"bradleymeck","date":"2017-01-12T14:39:50.952Z","type":"join"}
{"nick":"hferreiro","reason":"Quit: Connection closed for inactivity","date":"2017-01-12T14:41:18.403Z","type":"quit"}
{"nick":"black_13","date":"2017-01-12T15:23:43.960Z","type":"join"}
{"nick":"black_13","message":"it seems that articles related to binding a c++ object to v8,js are dated.","date":"2017-01-12T15:39:35.898Z","type":"message"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2010030309]","date":"2017-01-12T16:18:45.965Z","type":"quit"}
{"nick":"black_13","reason":"Ping timeout: 260 seconds","date":"2017-01-12T16:40:25.953Z","type":"quit"}
{"nick":"black_13","date":"2017-01-12T16:58:03.949Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-01-12T17:07:11.282Z","type":"quit"}
{"nick":"stalled","reason":"Ping timeout: 258 seconds","date":"2017-01-12T17:08:59.843Z","type":"quit"}
{"nick":"trevnorris","reason":"Ping timeout: 258 seconds","date":"2017-01-12T17:10:19.431Z","type":"quit"}
{"nick":"trevnorris","date":"2017-01-12T17:10:55.181Z","type":"join"}
{"nick":"black_13","message":"the point example on the wiki seems to be incomplete.","date":"2017-01-12T17:15:59.195Z","type":"message"}
{"nick":"xaxxon","date":"2017-01-12T17:20:35.552Z","type":"join"}
{"nick":"xaxxon","message":"if you’ve created an es6-syntax class, how do you construct an object of that type from c++ calls?   trying to help someone and I can’t figure out what c++ api type that name is","date":"2017-01-12T17:21:32.359Z","type":"message"}
{"nick":"plutoniix","date":"2017-01-12T17:22:39.593Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2017-01-12T17:22:48.522Z","type":"quit"}
{"nick":"plutoniix","date":"2017-01-12T17:23:27.322Z","type":"join"}
{"nick":"stalled","date":"2017-01-12T17:28:17.130Z","type":"join"}
{"nick":"bradleymeck","date":"2017-01-12T17:28:53.288Z","type":"join"}
{"nick":"xaxxon","message":"variables defined with class aren’t in the global object.","date":"2017-01-12T17:53:18.331Z","type":"message"}
{"nick":"indutny","message":"heya","date":"2017-01-12T17:55:23.827Z","type":"message"}
{"nick":"indutny","message":"so I'm working on semi-secret project :)","date":"2017-01-12T17:55:28.682Z","type":"message"}
{"nick":"xaxxon","message":"tell me all about it","date":"2017-01-12T17:55:45.180Z","type":"message"}
{"nick":"indutny","message":"cracking hash seed in running v8 instance","date":"2017-01-12T17:55:45.511Z","type":"message"}
{"nick":"indutny","message":"I can tell only one thing at this point - timing","date":"2017-01-12T17:56:28.032Z","type":"message"}
{"nick":"indutny","message":"so I was wondering: given that I know hash(A) < hash(B) for several thousands of values","date":"2017-01-12T17:57:05.615Z","type":"message"}
{"nick":"indutny","message":"strictly saying this means knowing bits of the seed","date":"2017-01-12T17:57:26.718Z","type":"message"}
{"nick":"indutny","message":"is there any other way to find the seed other than brute force?","date":"2017-01-12T17:57:44.964Z","type":"message"}
{"nick":"sxa","reason":"Ping timeout: 245 seconds","date":"2017-01-12T18:01:03.582Z","type":"quit"}
{"nick":"sxa","date":"2017-01-12T18:02:26.159Z","type":"join"}
{"nick":"trungl-bot`","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"OptimizeForSize\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux64/builds/15228 \"V8 Linux64\" from db13ed1d4c845d2bb795b3aad93842ebcf89cea4: littledan@chromium.org)","date":"2017-01-12T18:16:20.757Z","type":"message"}
{"nick":"black_13","message":"xaxxon: you figure it out tell me.","date":"2017-01-12T18:29:33.531Z","type":"message"}
{"nick":"black_13","message":"are you trying to bind c++ object to javascript?","date":"2017-01-12T18:30:01.070Z","type":"message"}
{"nick":"trungl-bot`","message":"\u00033\u0002Tree opened\u000f by dehrenberg@google.com: open (can't repro crash locally, want to see if it happens again)","date":"2017-01-12T18:30:25.283Z","type":"message"}
{"nick":"xaxxon","message":"black_13: pretty sure it’s just a scoping issue that I don’t quite understand yet..","date":"2017-01-12T18:32:59.279Z","type":"message"}
{"nick":"xaxxon","message":"ok, I’m confused again.   You can share a class Foo{}; across scripts, but it is not a global property","date":"2017-01-12T18:44:21.161Z","type":"message"}
{"nick":"black_13","message":"xaxxon: https://github.com/TheCodeInside/v8-example","date":"2017-01-12T18:46:30.026Z","type":"message"}
{"nick":"xaxxon","message":"I think the answer is that a context has a “lexical environment” that stores the name and that each script’s lexical environment’s parent is the context’s lexical environment.  but if anyone can confirm, that’d be neat","date":"2017-01-12T18:57:34.671Z","type":"message"}
{"nick":"xaxxon","message":"also I’d be interested in understanding the use of having a non-global property that is accessible from everywhere (which to me is what a global is)","date":"2017-01-12T19:00:20.118Z","type":"message"}
{"nick":"xaxxon","message":"“global but not global\"","date":"2017-01-12T19:00:41.718Z","type":"message"}
{"nick":"plutoniix","reason":"Read error: Connection reset by peer","date":"2017-01-12T19:06:50.126Z","type":"quit"}
{"nick":"plutoniix","date":"2017-01-12T19:07:28.476Z","type":"join"}
{"nick":"seventh","reason":"Ping timeout: 240 seconds","date":"2017-01-12T19:14:34.605Z","type":"quit"}
{"nick":"seventh","date":"2017-01-12T19:17:17.406Z","type":"join"}
{"nick":"xaxxon","reason":"Quit: xaxxon","date":"2017-01-12T19:38:59.601Z","type":"quit"}
{"nick":"trungl-bot`","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"compile\" on http://build.chromium.org/p/client.v8/builders/V8%20Win64%20-%20clang/builds/4451 \"V8 Win64 - clang\" from fcc6e85ec6b01e5367795f98aff104b1ff23f619: clemensh@chromium.org,titzer@chromium.org)","date":"2017-01-12T19:57:01.696Z","type":"message"}
{"nick":"trungl-bot`","message":"\u00033\u0002Tree opened\u000f by buildbot@chromium.org: Tree is open (Automatic: 祝你好运！)","date":"2017-01-12T20:32:15.207Z","type":"message"}
{"nick":"indutny","message":"anyone from v8 team around?","date":"2017-01-12T20:37:31.081Z","type":"message"}
{"nick":"indutny","message":"I realize that munich is either at home now, or sleeping","date":"2017-01-12T20:37:45.482Z","type":"message"}
{"nick":"indutny","message":"but anyway","date":"2017-01-12T20:37:46.522Z","type":"message"}
{"nick":"indutny","message":"perhaps someone from east coast?","date":"2017-01-12T20:37:50.486Z","type":"message"}
{"nick":"aklein","message":"indutny: hello","date":"2017-01-12T20:40:58.530Z","type":"message"}
{"nick":"aklein","message":"I am in fact on the west coast","date":"2017-01-12T20:41:03.250Z","type":"message"}
{"nick":"aklein","message":"what's up?","date":"2017-01-12T20:41:10.419Z","type":"message"}
{"nick":"indutny","message":"that's cool too","date":"2017-01-12T20:41:11.111Z","type":"message"}
{"nick":"aklein","message":"I like to think it's cool","date":"2017-01-12T20:41:33.428Z","type":"message"}
{"nick":"indutny","message":"actually, while waiting for reply I decided to open a security issue straight ahead :)","date":"2017-01-12T20:41:59.183Z","type":"message"}
{"nick":"indutny","message":"sorry","date":"2017-01-12T20:41:59.854Z","type":"message"}
{"nick":"aklein","message":"oh dear","date":"2017-01-12T20:44:09.995Z","type":"message"}
{"nick":"aklein","message":"but thanks!","date":"2017-01-12T20:44:15.982Z","type":"message"}
{"nick":"indutny","message":"its not that bad","date":"2017-01-12T20:44:19.783Z","type":"message"}
{"nick":"indutny","message":"don't worry","date":"2017-01-12T20:44:23.044Z","type":"message"}
{"nick":"indutny","message":"np","date":"2017-01-12T20:44:24.192Z","type":"message"}
{"nick":"aklein","message":"does it involve TypedArrays? :)","date":"2017-01-12T20:44:27.341Z","type":"message"}
{"nick":"indutny","message":"no no","date":"2017-01-12T20:44:29.793Z","type":"message"}
{"nick":"aklein","message":"ok that's always a good start","date":"2017-01-12T20:44:37.034Z","type":"message"}
{"nick":"indutny","message":"it actually can't harm Chromium at all","date":"2017-01-12T20:44:37.527Z","type":"message"}
{"nick":"indutny","message":"just node.js in some cases","date":"2017-01-12T20:44:48.361Z","type":"message"}
{"nick":"indutny","message":"I've got a way to guess hash seed","date":"2017-01-12T20:44:57.802Z","type":"message"}
{"nick":"black_13","reason":"Ping timeout: 260 seconds","date":"2017-01-12T21:01:45.958Z","type":"quit"}
{"nick":"zv","date":"2017-01-12T21:13:50.664Z","type":"join"}
{"nick":"jwolfe","message":"according to my investigation, the relationship between CompilationCacheTable and CompilationCache is nothing. they're totally independent solutions to similar problems.","date":"2017-01-12T21:32:07.603Z","type":"message"}
{"nick":"jwolfe","message":"wait. no. A CompilationCache has a couple of CompilationCacheEvals, which are a CompilationSubCaches, which have arrays of handles to CompilationCacheTables declared as Object**. Ok. that actually makes sense.","date":"2017-01-12T21:40:11.775Z","type":"message"}
{"nick":"jwolfe","message":"and I supposed the array of Handle<CompilationCacheTable> is declared Object** to prevent constructors and destructors from running.","date":"2017-01-12T21:43:16.038Z","type":"message"}
{"nick":"trungl-bot`","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"OptimizeForSize\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux64/builds/15240 \"V8 Linux64\" from aee244b0e115f4c3aef56055b739777dde94c3ac: ishell@chromium.org)","date":"2017-01-12T22:18:58.530Z","type":"message"}
{"nick":"trungl-bot`","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: open - linux64 got flaky - any volunteers?","date":"2017-01-12T22:40:05.562Z","type":"message"}
{"nick":"black_13","date":"2017-01-12T22:50:20.950Z","type":"join"}
{"nick":"RT|Chatzilla","date":"2017-01-12T22:52:10.244Z","type":"join"}
{"nick":"trungl-bot`","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"compile\" on http://build.chromium.org/p/client.v8/builders/V8%20Win64%20-%20clang/builds/4456 \"V8 Win64 - clang\" from e539bd8e0eb6afc8e7c98c38584928d6bc799b5b: gsathya@chromium.org,littledan@chromium.org)","date":"2017-01-12T22:52:10.439Z","type":"message"}
{"nick":"jwolfe","message":"are there min/max util functions available to do (a < b) ? a : b?","date":"2017-01-12T22:59:43.008Z","type":"message"}
{"nick":"black_13","message":"could someone update the following code to work with the latest version of v8 https://github.com/TheCodeInside/v8-example/blob/master/point.cpp","date":"2017-01-12T23:07:55.188Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-01-12T23:11:14.303Z","type":"quit"}
{"nick":"aklein","message":"jwolfe: what are a and b?","date":"2017-01-12T23:11:47.105Z","type":"message"}
{"nick":"jwolfe","message":"aklein, i was hoping for something generic. like template<typename T> T min(T a, T b) { return (a < b) ? a : b; }.","date":"2017-01-12T23:12:49.971Z","type":"message"}
{"nick":"jwolfe","message":"in my case, they are ints","date":"2017-01-12T23:12:56.048Z","type":"message"}
{"nick":"aklein","message":"jwolfe: std::min() should work","date":"2017-01-12T23:12:58.813Z","type":"message"}
{"nick":"aklein","message":"it's in <algorithm>","date":"2017-01-12T23:13:18.323Z","type":"message"}
{"nick":"aklein","message":"I was worried they were JS values :)","date":"2017-01-12T23:13:42.509Z","type":"message"}
{"nick":"jwolfe","message":"aklein, oh thanks. i forget C++ has a standard library :)","date":"2017-01-12T23:14:13.151Z","type":"message"}
{"nick":"black_13","reason":"Ping timeout: 260 seconds","date":"2017-01-12T23:14:45.953Z","type":"quit"}
{"nick":"aklein","message":"yeah unlike _some_ languages","date":"2017-01-12T23:15:49.373Z","type":"message"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2017-01-12T23:21:21.648Z","type":"quit"}
{"nick":"trungl-bot`","message":"\u00033\u0002Tree opened\u000f by buildbot@chromium.org: Tree is open (Automatic: Boa sorte!)","date":"2017-01-12T23:40:29.687Z","type":"message"}
