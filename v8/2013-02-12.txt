{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-12T00:14:25.924Z","type":"quit"}
{"nick":"c4milo","date":"2013-02-12T00:18:22.618Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-12T01:39:18.444Z","type":"quit"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2013-02-12T02:01:11.670Z","type":"quit"}
{"nick":"joshthecoder_","date":"2013-02-12T03:39:29.759Z","type":"join"}
{"nick":"joshthecoder","reason":"*.net *.split","date":"2013-02-12T03:39:49.010Z","type":"quit"}
{"nick":"TheJH","date":"2013-02-12T05:59:09.692Z","type":"join"}
{"nick":"TheJH","reason":"Ping timeout: 255 seconds","date":"2013-02-12T06:12:50.567Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-02-12T07:22:50.141Z","type":"join"}
{"nick":"[[zz]]","reason":"Ping timeout: 246 seconds","date":"2013-02-12T07:26:07.812Z","type":"quit"}
{"nick":"[[zz]]","date":"2013-02-12T07:39:27.885Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-02-12T07:48:46.073Z","type":"quit"}
{"nick":"[[zz]]","reason":"Ping timeout: 245 seconds","date":"2013-02-12T08:03:28.464Z","type":"quit"}
{"nick":"[[zz]]","date":"2013-02-12T08:08:09.901Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-02-12T08:55:17.140Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-02-12T09:00:10.004Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2013-02-12T09:27:23.545Z","type":"join"}
{"nick":"Net147","date":"2013-02-12T10:10:10.119Z","type":"join"}
{"nick":"C-Man","date":"2013-02-12T10:23:25.004Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-02-12T10:27:27.932Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 272 seconds","date":"2013-02-12T10:36:32.717Z","type":"quit"}
{"nick":"cha0s","reason":"Quit: Viva La Revoluciï¿½n!","date":"2013-02-12T10:55:41.749Z","type":"quit"}
{"nick":"cha0s","date":"2013-02-12T10:56:06.719Z","type":"join"}
{"nick":"cha0s","reason":"Changing host","date":"2013-02-12T10:56:06.946Z","type":"quit"}
{"nick":"cha0s","date":"2013-02-12T10:56:07.079Z","type":"join"}
{"nick":"xan_","reason":"Ping timeout: 240 seconds","date":"2013-02-12T11:04:49.191Z","type":"quit"}
{"nick":"xan_","date":"2013-02-12T11:10:23.245Z","type":"join"}
{"nick":"seventh","date":"2013-02-12T11:17:40.363Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-02-12T11:18:56.499Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-02-12T12:02:13.436Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-02-12T12:28:17.662Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 252 seconds","date":"2013-02-12T12:36:34.530Z","type":"quit"}
{"nick":"[sqrts]ben","date":"2013-02-12T12:51:57.750Z","type":"join"}
{"nick":"[sqrts]ben","message":"Hi guys.","date":"2013-02-12T12:52:01.558Z","type":"message"}
{"nick":"[sqrts]ben","message":"I tried to change some of the implementation in v8, specifically right now I changed the way charCodeAt should work","date":"2013-02-12T12:52:30.926Z","type":"message"}
{"nick":"[sqrts]ben","message":"sorry, charAt","date":"2013-02-12T12:52:52.406Z","type":"message"}
{"nick":"[sqrts]ben","message":"therefore, I changed the call from string.js to from %_StringCharAt to %StringCharAt and defined the function accordingly in runtime.h and runtime.cc","date":"2013-02-12T12:53:10.935Z","type":"message"}
{"nick":"[sqrts]ben","message":"however, I get errors when starting up Chromium, stating that the v8/i18n extension could not be loaded","date":"2013-02-12T12:53:41.087Z","type":"message"}
{"nick":"[sqrts]ben","message":"Any hints? :)","date":"2013-02-12T12:53:44.105Z","type":"message"}
{"nick":"guor","message":"I'd assume that v8/i18n uses some of the stuff you changed...","date":"2013-02-12T12:54:14.512Z","type":"message"}
{"nick":"guor","message":"it's a separate project","date":"2013-02-12T12:54:22.279Z","type":"message"}
{"nick":"[sqrts]ben","message":"The interesting fact is that I build in logging","date":"2013-02-12T12:55:10.357Z","type":"message"}
{"nick":"[sqrts]ben","message":"essentially, I just to a log message to the linux console when \"my\" stringCharAt is called","date":"2013-02-12T12:55:30.978Z","type":"message"}
{"nick":"[sqrts]ben","message":"however, this is never triggered","date":"2013-02-12T12:55:39.123Z","type":"message"}
{"nick":"[sqrts]ben","message":"although its the first statement in my code","date":"2013-02-12T12:55:48.137Z","type":"message"}
{"nick":"guor","message":"also, String.prototype.charAt is being inlined in crankshaft, so maybe you need to turn off crankshaft","date":"2013-02-12T12:56:03.926Z","type":"message"}
{"nick":"[sqrts]ben","message":"as far as i gathered from the code, one can \"choose\" which method to call?","date":"2013-02-12T12:56:43.418Z","type":"message"}
{"nick":"[sqrts]ben","message":"so %StringCharAt is the runtime.cc code","date":"2013-02-12T12:56:51.890Z","type":"message"}
{"nick":"[sqrts]ben","message":"whereas %_StringCharAt is the inline code?","date":"2013-02-12T12:57:04.181Z","type":"message"}
{"nick":"guor","message":"yes, and %_StringCharAt is inlined, but it may bail out to runtime code if somethings are unexpected","date":"2013-02-12T12:57:19.356Z","type":"message"}
{"nick":"guor","message":"like GC, or wrong types, etc.","date":"2013-02-12T12:57:26.955Z","type":"message"}
{"nick":"[sqrts]ben","message":"for StringCharAt, in the default code, there is no fallback","date":"2013-02-12T12:57:37.109Z","type":"message"}
{"nick":"[sqrts]ben","message":"at least not in my older checkout","date":"2013-02-12T12:57:43.715Z","type":"message"}
{"nick":"[sqrts]ben","message":"it's normally purely inline","date":"2013-02-12T12:57:49.082Z","type":"message"}
{"nick":"[sqrts]ben","message":"I changed the definition though","date":"2013-02-12T12:57:53.391Z","type":"message"}
{"nick":"bnoordhuis","date":"2013-02-12T12:58:00.260Z","type":"join"}
{"nick":"guor","message":"look at StringCharAtGenerator","date":"2013-02-12T12:58:10.946Z","type":"message"}
{"nick":"guor","message":"in code-stubs.h","date":"2013-02-12T12:58:14.257Z","type":"message"}
{"nick":"guor","message":"that generates the code","date":"2013-02-12T12:58:23.994Z","type":"message"}
{"nick":"guor","message":"there is a GenerateFast","date":"2013-02-12T12:58:27.122Z","type":"message"}
{"nick":"guor","message":"and a GenerateSlow","date":"2013-02-12T12:58:31.427Z","type":"message"}
{"nick":"[sqrts]ben","message":"yeah","date":"2013-02-12T12:58:33.686Z","type":"message"}
{"nick":"guor","message":"the slow part calls out to runtime","date":"2013-02-12T12:58:38.521Z","type":"message"}
{"nick":"guor","message":"the safest way imo to always redirect to runtime code is to add a line at the top of GenerateFast to jump to the call_runtime_ label","date":"2013-02-12T12:59:52.033Z","type":"message"}
{"nick":"guor","message":"so that the inlined code always bails out to runtime code","date":"2013-02-12T13:00:00.339Z","type":"message"}
{"nick":"[sqrts]ben","message":"but there is no runtime function","date":"2013-02-12T13:00:01.300Z","type":"message"}
{"nick":"[sqrts]ben","message":"at least not Runtime_StringCharAt","date":"2013-02-12T13:00:09.277Z","type":"message"}
{"nick":"[sqrts]ben","message":"except for the one I defined :x","date":"2013-02-12T13:00:15.926Z","type":"message"}
{"nick":"[sqrts]ben","message":"that is what I don't quite get :)","date":"2013-02-12T13:00:28.733Z","type":"message"}
{"nick":"guor","message":"no, because charAt is chaining charCodeAt and charFromCode","date":"2013-02-12T13:00:48.839Z","type":"message"}
{"nick":"[sqrts]ben","message":"Mh, wo which function is actually responsible to handle that fallthrough case?","date":"2013-02-12T13:02:09.406Z","type":"message"}
{"nick":"guor","message":"the StringCharAtGenerator basically delegates to StringCharCodeAtGenerator and StringCharFromCodeGenerator","date":"2013-02-12T13:02:21.709Z","type":"message"}
{"nick":"guor","message":"both delegated generators do their thing, when it bails out, it returns from runtime after it gets the result","date":"2013-02-12T13:02:54.750Z","type":"message"}
{"nick":"guor","message":"what you actually want to do is do two things:","date":"2013-02-12T13:03:37.523Z","type":"message"}
{"nick":"guor","message":"first, change string.js to not point at %_StringCharAt, but to a custom %StringCharAt","date":"2013-02-12T13:03:57.443Z","type":"message"}
{"nick":"guor","message":"and in hydrogen.cc, remove the inlining of String.prototype.charAt","date":"2013-02-12T13:04:20.427Z","type":"message"}
{"nick":"[sqrts]ben","message":"ok","date":"2013-02-12T13:05:08.226Z","type":"message"}
{"nick":"guor","message":"it's in HOptimizedGraphBuilder::TryInlineBuiltinMethodCall","date":"2013-02-12T13:05:19.577Z","type":"message"}
{"nick":"[sqrts]ben","message":"just remove the case in hydrogen?","date":"2013-02-12T13:05:39.031Z","type":"message"}
{"nick":"guor","message":"yup","date":"2013-02-12T13:07:49.043Z","type":"message"}
{"nick":"[sqrts]ben","message":"Ok, so it would that worked","date":"2013-02-12T13:07:52.793Z","type":"message"}
{"nick":"guor","message":"it would fall through to default","date":"2013-02-12T13:07:54.536Z","type":"message"}
{"nick":"[sqrts]ben","message":"and charAt still returns stuff ;-)","date":"2013-02-12T13:07:57.798Z","type":"message"}
{"nick":"guor","message":"so your logging confirms that it works?","date":"2013-02-12T13:08:39.012Z","type":"message"}
{"nick":"[sqrts]ben","message":"not yet","date":"2013-02-12T13:09:16.242Z","type":"message"}
{"nick":"[sqrts]ben","message":"Now i only removed the optimized part","date":"2013-02-12T13:09:28.059Z","type":"message"}
{"nick":"[sqrts]ben","message":"not the custom %String..","date":"2013-02-12T13:09:36.607Z","type":"message"}
{"nick":"[sqrts]ben","message":"gnah","date":"2013-02-12T13:09:44.687Z","type":"message"}
{"nick":"[sqrts]ben","message":"still kills me :(","date":"2013-02-12T13:09:47.204Z","type":"message"}
{"nick":"[sqrts]ben","message":"is there anything else I need to change to add the runtime function?","date":"2013-02-12T13:10:09.137Z","type":"message"}
{"nick":"[sqrts]ben","message":"apart from runtime.h","date":"2013-02-12T13:10:23.656Z","type":"message"}
{"nick":"guor","message":"and you added Runtime_StringCharAt, right?","date":"2013-02-12T13:10:34.930Z","type":"message"}
{"nick":"[sqrts]ben","message":"yeah","date":"2013-02-12T13:10:39.832Z","type":"message"}
{"nick":"[sqrts]ben","message":"and added it to  INLINE_RUNTIME_FUNCTION_LIST as well","date":"2013-02-12T13:10:55.569Z","type":"message"}
{"nick":"[sqrts]ben","message":"and removed it from INLINE_FUNCTION_LIST","date":"2013-02-12T13:11:08.508Z","type":"message"}
{"nick":"guor","message":"uh.... just add it to RUNTIME_FUNCTION_LIST","date":"2013-02-12T13:11:26.929Z","type":"message"}
{"nick":"guor","message":"it's not inline","date":"2013-02-12T13:11:38.792Z","type":"message"}
{"nick":"[sqrts]ben","message":"mh okay","date":"2013-02-12T13:11:50.281Z","type":"message"}
{"nick":"guor","message":"what happens if you start d8 with --allow-natives-syntax and call %StringCharAt directly?","date":"2013-02-12T13:12:12.746Z","type":"message"}
{"nick":"[sqrts]ben","message":".. compiling ;-) just a sec","date":"2013-02-12T13:12:42.003Z","type":"message"}
{"nick":"[sqrts]ben","message":"needed to remove some more calls to the %_ version","date":"2013-02-12T13:25:47.082Z","type":"message"}
{"nick":"[sqrts]ben","message":"and to code that is now no longer used","date":"2013-02-12T13:25:54.413Z","type":"message"}
{"nick":"[sqrts]ben","message":"*compiling*","date":"2013-02-12T13:25:57.087Z","type":"message"}
{"nick":"[sqrts]ben","message":"a, that seems to work :-)","date":"2013-02-12T13:26:49.985Z","type":"message"}
{"nick":"guor","message":":)","date":"2013-02-12T13:30:36.159Z","type":"message"}
{"nick":"[sqrts]ben","message":"not that my code does what it should","date":"2013-02-12T13:30:51.356Z","type":"message"}
{"nick":"[sqrts]ben","message":"but well :D","date":"2013-02-12T13:30:52.646Z","type":"message"}
{"nick":"[sqrts]ben","message":"at least it's called :P","date":"2013-02-12T13:31:03.357Z","type":"message"}
{"nick":"guor","message":"at least the plumbing works :)","date":"2013-02-12T13:31:12.023Z","type":"message"}
{"nick":"[sqrts]ben","message":"yeah","date":"2013-02-12T13:33:30.088Z","type":"message"}
{"nick":"Net147","reason":"Quit:  HydraIRC -> http://www.hydrairc.com <- Chicks dig it","date":"2013-02-12T13:40:18.339Z","type":"quit"}
{"nick":"[sqrts]ben","message":"thank you very much for the hints","date":"2013-02-12T13:48:27.427Z","type":"message"}
{"nick":"[sqrts]ben","message":"still trying to get my stuff to work though ;)","date":"2013-02-12T13:48:38.385Z","type":"message"}
{"nick":"guor","message":"np","date":"2013-02-12T13:52:48.000Z","type":"message"}
{"nick":"[sqrts]ben","message":"well","date":"2013-02-12T14:05:07.320Z","type":"message"}
{"nick":"[sqrts]ben","message":"the only problem is an illegal access triggered by the devtools","date":"2013-02-12T14:05:19.507Z","type":"message"}
{"nick":"[sqrts]ben","message":"from my understanding of the ECMA definition, charAt should return either the matching character","date":"2013-02-12T14:06:18.091Z","type":"message"}
{"nick":"[sqrts]ben","message":"or an empty string, right?","date":"2013-02-12T14:06:28.524Z","type":"message"}
{"nick":"[sqrts]ben","reason":"Ping timeout: 248 seconds","date":"2013-02-12T14:15:29.120Z","type":"quit"}
{"nick":"c4milo","date":"2013-02-12T14:16:33.661Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-12T14:18:13.121Z","type":"quit"}
{"nick":"heath","reason":"Remote host closed the connection","date":"2013-02-12T14:33:51.188Z","type":"quit"}
{"nick":"guor","message":"uh. i guess.","date":"2013-02-12T14:42:38.131Z","type":"message"}
{"nick":"guor","message":"illegal access points to some invalid type assumptions in runtime.cc","date":"2013-02-12T14:42:56.499Z","type":"message"}
{"nick":"heath","date":"2013-02-12T14:43:21.970Z","type":"join"}
{"nick":"guor","message":"you can set a breakpoint in v8::internal::Isolate::ThrowIllegalOperation to catch it","date":"2013-02-12T14:43:22.316Z","type":"message"}
{"nick":"guor","message":"and see what the cause is","date":"2013-02-12T14:43:31.817Z","type":"message"}
{"nick":"heath","reason":"Client Quit","date":"2013-02-12T14:45:29.431Z","type":"quit"}
{"nick":"heath","date":"2013-02-12T14:46:50.978Z","type":"join"}
{"nick":"mraleph","reason":"Quit: Leaving.","date":"2013-02-12T14:50:29.542Z","type":"quit"}
{"nick":"c4milo","date":"2013-02-12T14:52:37.677Z","type":"join"}
{"nick":"TheJH","date":"2013-02-12T15:10:02.891Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2009081014]","date":"2013-02-12T15:37:13.675Z","type":"quit"}
{"nick":"guor","reason":"Read error: Connection timed out","date":"2013-02-12T15:50:26.286Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 248 seconds","date":"2013-02-12T17:04:33.118Z","type":"quit"}
{"nick":"guor","date":"2013-02-12T17:56:39.033Z","type":"join"}
{"nick":"stalled","reason":"Ping timeout: 255 seconds","date":"2013-02-12T18:03:29.493Z","type":"quit"}
{"nick":"stalled","date":"2013-02-12T18:10:02.635Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-02-12T18:14:30.143Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 272 seconds","date":"2013-02-12T19:05:44.879Z","type":"quit"}
{"nick":"TheJH","reason":"*.net *.split","date":"2013-02-12T19:24:54.800Z","type":"quit"}
{"nick":"TheJH","date":"2013-02-12T19:31:51.188Z","type":"join"}
{"nick":"seventh","reason":"Remote host closed the connection","date":"2013-02-12T19:54:45.602Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-02-12T20:11:41.529Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2013-02-12T20:16:23.896Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-12T20:53:31.527Z","type":"quit"}
{"nick":"c4milo","date":"2013-02-12T20:54:15.921Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-12T21:02:44.543Z","type":"quit"}
{"nick":"c4milo","date":"2013-02-12T21:03:57.157Z","type":"join"}
{"nick":"c4milo","reason":"Read error: Connection reset by peer","date":"2013-02-12T21:04:40.348Z","type":"quit"}
{"nick":"c4milo_","date":"2013-02-12T21:04:42.347Z","type":"join"}
{"nick":"c4milo_","reason":"Remote host closed the connection","date":"2013-02-12T21:13:26.202Z","type":"quit"}
{"nick":"c4milo","date":"2013-02-12T21:13:57.002Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-12T21:14:08.196Z","type":"quit"}
{"nick":"c4milo","date":"2013-02-12T21:14:15.282Z","type":"join"}
{"nick":"xan_","reason":"Quit: leaving","date":"2013-02-12T21:15:59.704Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-02-12T22:44:46.037Z","type":"quit"}
{"nick":"c4milo","date":"2013-02-12T22:50:16.890Z","type":"join"}
{"nick":"TheJH","reason":"Ping timeout: 252 seconds","date":"2013-02-12T23:48:06.356Z","type":"quit"}
