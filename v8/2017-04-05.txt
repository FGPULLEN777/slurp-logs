{"nick":"Guest59","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-04-05T00:08:13.186Z","type":"quit"}
{"nick":"plutoniix","date":"2017-04-05T00:26:14.476Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2017-04-05T00:27:19.404Z","type":"quit"}
{"nick":"plutoniix","date":"2017-04-05T00:27:51.512Z","type":"join"}
{"nick":"joyee","date":"2017-04-05T00:31:43.416Z","type":"join"}
{"nick":"joyee","reason":"Ping timeout: 258 seconds","date":"2017-04-05T00:36:07.347Z","type":"quit"}
{"nick":"toddynho","reason":"Ping timeout: 240 seconds","date":"2017-04-05T00:42:08.322Z","type":"quit"}
{"nick":"toddynho","date":"2017-04-05T00:45:44.965Z","type":"join"}
{"nick":"joyee","date":"2017-04-05T01:43:40.264Z","type":"join"}
{"nick":"joyee","date":"2017-04-05T01:57:41.810Z","type":"quit"}
{"nick":"cjihrig","date":"2017-04-05T02:56:59.623Z","type":"part"}
{"nick":"toddynho","reason":"Remote host closed the connection","date":"2017-04-05T03:21:22.965Z","type":"quit"}
{"nick":"Guest59","date":"2017-04-05T04:07:20.639Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2017-04-05T05:04:07.087Z","type":"quit"}
{"nick":"Guest59","reason":"Quit: My Mac has gone to sleep. ZZZzzz…","date":"2017-04-05T05:44:27.744Z","type":"quit"}
{"nick":"plutoniix","date":"2017-04-05T06:05:01.290Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2017-04-05T06:05:47.662Z","type":"quit"}
{"nick":"plutoniix","date":"2017-04-05T06:06:25.848Z","type":"join"}
{"nick":"s1341","date":"2017-04-05T09:45:51.278Z","type":"join"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: closed (/builders/V8%20Mips%20-%20builder/builds/8600 from 4bca9dc7016ed72b8275488d064b488cc2adb144)","date":"2017-04-05T10:22:09.474Z","type":"message"}
{"nick":"mylesborins","reason":"Quit: farewell for now","date":"2017-04-05T10:25:10.014Z","type":"quit"}
{"nick":"mylesborins","date":"2017-04-05T10:25:40.499Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by machenbach@chromium.org: open","date":"2017-04-05T10:32:13.566Z","type":"message"}
{"nick":"toddynho","date":"2017-04-05T10:34:12.948Z","type":"join"}
{"nick":"toddynho","message":"i want to insert \"my types\" into javascript, like unity did with unityscript .. its possible with v8 ?","date":"2017-04-05T10:35:52.716Z","type":"message"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: closed (/builders/V8%20Linux64%20-%20gyp/builds/5156 from 02b4d0e6752c7b989aab6ef817f44ceb26741169)","date":"2017-04-05T10:41:17.486Z","type":"message"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by clemensh@chromium.org: open - http://crbug.com/708482","date":"2017-04-05T10:45:18.381Z","type":"message"}
{"nick":"plutoniix","reason":"Ping timeout: 264 seconds","date":"2017-04-05T11:25:34.448Z","type":"quit"}
{"nick":"toddynho","reason":"Ping timeout: 240 seconds","date":"2017-04-05T12:59:48.598Z","type":"quit"}
{"nick":"toddynho","date":"2017-04-05T13:01:50.594Z","type":"join"}
{"nick":"caitp","message":"toddynho: what do you mean by \"my types\"?","date":"2017-04-05T13:45:12.782Z","type":"message"}
{"nick":"cjihrig","date":"2017-04-05T13:48:24.338Z","type":"join"}
{"nick":"caitp","message":"I'm guessing you want to expose C++ types to javascript, which is absolutely doable using the v8 API","date":"2017-04-05T13:49:23.300Z","type":"message"}
{"nick":"caitp","message":"\"expose\" as in, create bindings so that JS can use them","date":"2017-04-05T13:49:48.190Z","type":"message"}
{"nick":"caitp","message":"if you're talking about the result of the typeof operator, you might be out of luck","date":"2017-04-05T13:50:10.591Z","type":"message"}
{"nick":"toddynho","message":"caitp: thank you for the answer .. i am trying to overload operation .. for example.. i define a type \"my\" . so my A,B; then A \"+\" B  will use my \"+\", how i wanna no permute elements.. i think ","date":"2017-04-05T13:52:35.965Z","type":"message"}
{"nick":"caitp","message":"right","date":"2017-04-05T13:53:40.023Z","type":"message"}
{"nick":"caitp","message":"there's no API to overload operators, but JS provides a mechanism itself","date":"2017-04-05T13:53:54.684Z","type":"message"}
{"nick":"caitp","message":"sort of","date":"2017-04-05T13:53:56.966Z","type":"message"}
{"nick":"caitp","message":"eg from https://tc39.github.io/ecma262/#sec-addition-operator-plus-runtime-semantics-evaluation, you can see that ToPrimitive allows you to customize behaviour a bit","date":"2017-04-05T13:55:53.519Z","type":"message"}
{"nick":"caitp","message":"mainly via @@toPrimitive and valueOf methods","date":"2017-04-05T13:56:21.470Z","type":"message"}
{"nick":"toddynho","message":"thank for the link, i will look at. I was reading \"fake operators at javascript\" but doesn't do what i am trying to achieve. basically i wanna a group struct and its operations.","date":"2017-04-05T14:04:59.715Z","type":"message"}
{"nick":"plutoniix","date":"2017-04-05T14:26:32.809Z","type":"join"}
{"nick":"plutoniix","reason":"Max SendQ exceeded","date":"2017-04-05T14:27:36.596Z","type":"quit"}
{"nick":"plutoniix","date":"2017-04-05T14:28:15.883Z","type":"join"}
{"nick":"s1341","message":"caitp thanks again for clarifying things for me yesterday.","date":"2017-04-05T14:47:20.954Z","type":"message"}
{"nick":"s1341","message":"i'm still trying to wrap my head around all this code ;)","date":"2017-04-05T14:47:33.909Z","type":"message"}
