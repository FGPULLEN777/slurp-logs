{"nick":"getty","new_nick":"Getty","date":"2016-11-25T00:10:58.190Z","type":"nick"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by buildbot@chromium.org: Tree is open (Automatic: \\(･ω･)/)","date":"2016-11-25T00:27:19.395Z","type":"message"}
{"nick":"plutoniix","date":"2016-11-25T00:45:45.103Z","type":"join"}
{"nick":"sustained","date":"2016-11-25T01:49:12.033Z","type":"join"}
{"nick":"sustained","message":"I'm trying to find a tool to allow me to view the output of the v8 lexer but I'm struggling. I've found an npm package called recast which generates an AST of arbitary JS but I want to also see what things look like before the AST is constructed.","date":"2016-11-25T01:50:05.463Z","type":"message"}
{"nick":"sustained","message":"Maybe my search terms are just bad but I'm struggling to find anything on Google.","date":"2016-11-25T01:50:33.940Z","type":"message"}
{"nick":"caitp","message":"sustained: you could add a token printer and call it every time the next token is scanned","date":"2016-11-25T02:12:06.326Z","type":"message"}
{"nick":"caitp","message":"there isn't really another way, the stream isn't tokenized before parsing, it's tokenized during parsing","date":"2016-11-25T02:12:33.708Z","type":"message"}
{"nick":"sustained","message":"I don't think I'd even know where to begin.","date":"2016-11-25T02:15:02.761Z","type":"message"}
{"nick":"sustained","message":"I was just hoping to gain a better understanding of the various stages of parsing and I like JS so.","date":"2016-11-25T02:15:16.691Z","type":"message"}
{"nick":"caitp","message":"it shouldn't be too hard, you'd just associate each token defined in src/parser/token.h with a string indicating the token name (a lot of them already have string representations, but might be confusing to read, and not all of them do)","date":"2016-11-25T02:17:42.009Z","type":"message"}
{"nick":"caitp","message":"the token enum is declared with macros, so you can do it easily by writing a macro to tokenize each token name","date":"2016-11-25T02:18:07.334Z","type":"message"}
{"nick":"caitp","message":"then just adding a PrintF() call in Scanner::Next()","date":"2016-11-25T02:18:56.998Z","type":"message"}
{"nick":"caitp","message":"build that, run parser-shell or something, and it should spit out all the parsed tokens in order to your terminal","date":"2016-11-25T02:19:26.524Z","type":"message"}
{"nick":"sustained","message":"I'm not so good... like, at all, with C(++). I guess I should find some other way, perhaps use another programming language that is able to make the lexer output available.","date":"2016-11-25T02:20:04.372Z","type":"message"}
{"nick":"sustained","message":"But thanks anyway!","date":"2016-11-25T02:20:14.505Z","type":"message"}
{"nick":"caitp","message":"well, it would be about 10 minutes of work, but alright, good luck","date":"2016-11-25T02:20:25.020Z","type":"message"}
{"nick":"sustained","message":"I don't have time to learn C (yet) but maybe I'll add it to my list!","date":"2016-11-25T02:20:45.756Z","type":"message"}
{"nick":"sustained","message":"As I plan to, eventually.","date":"2016-11-25T02:20:54.866Z","type":"message"}
{"nick":"caitp","message":"maybe Rust can do it? I think I recall the rust compiler's parser module having some interesting tools like that","date":"2016-11-25T02:21:50.608Z","type":"message"}
{"nick":"caitp","message":"been a few years since I've looked at it though","date":"2016-11-25T02:22:08.656Z","type":"message"}
{"nick":"sustained","message":"Rust is also on my RADAR. The issue is, I'd like to view the lexer output for a language I /already know/ because it's to gain an understanding in order to help me with my assignment and I just don't have time but this is really off-topic. Hopefully Python or /something/ is able to do what I need.","date":"2016-11-25T02:23:28.581Z","type":"message"}
{"nick":"caitp","message":"well, in practice most of these implementations only do what they need to do, and printing out a stream of tokens is generally not on the list of requirements","date":"2016-11-25T02:33:15.087Z","type":"message"}
{"nick":"caitp","message":"that doesn't mean no engine does it, but I'm not sure of any that do","date":"2016-11-25T02:33:32.352Z","type":"message"}
{"nick":"caitp","message":"so you'd probably need to do some very slight modifications to source code to get them to do what you want. Honestly, it wouldn't be very complicated","date":"2016-11-25T02:34:17.049Z","type":"message"}
{"nick":"caitp","message":"sustained: something like this ought to do it for you, https://gist.github.com/caitp/440049dbc4bac6880434fd4d04d39a85","date":"2016-11-25T02:42:18.973Z","type":"message"}
{"nick":"caitp","message":"pretty minor changes to make","date":"2016-11-25T02:42:26.691Z","type":"message"}
{"nick":"hferreiro","date":"2016-11-25T09:47:00.559Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: Leaving","date":"2016-11-25T11:41:37.354Z","type":"quit"}
{"nick":"sustained","reason":"Quit: I Retire Chat","date":"2016-11-25T12:26:23.721Z","type":"quit"}
{"nick":"rmcilroy","date":"2016-11-25T12:27:02.067Z","type":"join"}
{"nick":"xaxxon","date":"2016-11-25T14:39:19.273Z","type":"join"}
{"nick":"xaxxon","reason":"Client Quit","date":"2016-11-25T14:41:47.111Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-11-25T15:21:08.598Z","type":"join"}
{"nick":"jugglinmike","date":"2016-11-25T15:23:43.740Z","type":"join"}
{"nick":"zv","reason":"Ping timeout: 244 seconds","date":"2016-11-25T15:25:08.598Z","type":"quit"}
{"nick":"jugglinmike","date":"2016-11-25T15:25:32.962Z","type":"part"}
{"nick":"zv","date":"2016-11-25T15:41:31.102Z","type":"join"}
{"nick":"seventh","date":"2016-11-25T15:51:51.903Z","type":"join"}
