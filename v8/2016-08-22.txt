{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2010030309]","date":"2016-08-22T03:03:26.180Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2016-08-22T03:21:23.480Z","type":"join"}
{"nick":"xaxxon","date":"2016-08-22T08:04:09.110Z","type":"join"}
{"nick":"xaxxon","message":"is FunctionTemplate::Inherit how you set up the inheritance hierarchy for objects created with \"new SomeFunction()\"?","date":"2016-08-22T08:04:40.079Z","type":"message"}
{"nick":"xiinotulp","date":"2016-08-22T08:18:41.983Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 258 seconds","date":"2016-08-22T08:22:25.105Z","type":"quit"}
{"nick":"sin8h","date":"2016-08-22T08:23:28.294Z","type":"join"}
{"nick":"sin8h","reason":"Quit: Leaving.","date":"2016-08-22T09:11:40.862Z","type":"quit"}
{"nick":"sin8h","date":"2016-08-22T10:02:27.316Z","type":"join"}
{"nick":"sin8h","reason":"Client Quit","date":"2016-08-22T10:03:48.261Z","type":"quit"}
{"nick":"sin8h","date":"2016-08-22T10:12:32.692Z","type":"join"}
{"nick":"sin8h","reason":"Quit: Leaving.","date":"2016-08-22T10:25:07.778Z","type":"quit"}
{"nick":"sin8h","date":"2016-08-22T10:25:49.637Z","type":"join"}
{"nick":"sin8h","reason":"Quit: Leaving.","date":"2016-08-22T10:35:43.102Z","type":"quit"}
{"nick":"sin8h","date":"2016-08-22T10:46:15.871Z","type":"join"}
{"nick":"sin8h","reason":"Client Quit","date":"2016-08-22T10:46:28.008Z","type":"quit"}
{"nick":"koldbrutality","reason":"Ping timeout: 240 seconds","date":"2016-08-22T10:54:33.878Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"Ignition - turbofan\" on http://build.chromium.org/p/client.v8/builders/V8%20Linux%20-%20arm64%20-%20sim%20-%20MSAN/builds/10355 \"V8 Linux - arm64 - sim - MSAN\" from c13acc815388aff94a5694ae9ad2587fa3cf42b2: rmcilroy@chromium.org)","date":"2016-08-22T10:55:50.558Z","type":"message"}
{"nick":"koldbrutality","date":"2016-08-22T10:55:59.891Z","type":"join"}
{"nick":"xaxxon","message":"figured out what I was doing wrong, btw... nothing to do with Inherit","date":"2016-08-22T11:01:00.781Z","type":"message"}
{"nick":"xaxxon","date":"2016-08-22T11:01:01.965Z","type":"part"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by rmcilroy@google.com: Tree is open (Fix on the way)","date":"2016-08-22T11:01:53.063Z","type":"message"}
{"nick":"clinth","reason":"Ping timeout: 250 seconds","date":"2016-08-22T11:17:19.636Z","type":"quit"}
{"nick":"clinth","date":"2016-08-22T11:20:14.196Z","type":"join"}
{"nick":"clinth","reason":"Ping timeout: 244 seconds","date":"2016-08-22T11:28:11.084Z","type":"quit"}
{"nick":"clinth","date":"2016-08-22T11:31:42.895Z","type":"join"}
{"nick":"bradleymeck","date":"2016-08-22T13:20:40.572Z","type":"join"}
{"nick":"bobmcw","date":"2016-08-22T13:21:11.456Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-08-22T14:26:49.412Z","type":"quit"}
{"nick":"bradleymeck","date":"2016-08-22T14:54:20.249Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by rmcilroy@google.com: Tree is open","date":"2016-08-22T15:16:08.439Z","type":"message"}
{"nick":"ofrobots_ooo","new_nick":"ofrobots","date":"2016-08-22T15:17:28.971Z","type":"nick"}
{"nick":"kenansulayman","date":"2016-08-22T15:22:07.630Z","type":"join"}
{"nick":"kenansulayman","new_nick":"Guest26216","date":"2016-08-22T15:22:30.966Z","type":"nick"}
{"nick":"Guest26216","reason":"Changing host","date":"2016-08-22T15:24:09.116Z","type":"quit"}
{"nick":"Guest26216","date":"2016-08-22T15:24:09.274Z","type":"join"}
{"nick":"caitp","reason":"Ping timeout: 240 seconds","date":"2016-08-22T16:04:35.904Z","type":"quit"}
{"nick":"clinth","reason":"Ping timeout: 240 seconds","date":"2016-08-22T16:07:33.893Z","type":"quit"}
{"nick":"caitp","date":"2016-08-22T16:11:09.525Z","type":"join"}
{"nick":"clinth","date":"2016-08-22T16:13:04.099Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2010030309]","date":"2016-08-22T16:33:41.508Z","type":"quit"}
{"nick":"seventh","date":"2016-08-22T16:52:18.039Z","type":"join"}
{"nick":"Guest10485","reason":"Ping timeout: 264 seconds","date":"2016-08-22T16:55:40.000Z","type":"quit"}
{"nick":"s1w","date":"2016-08-22T16:56:43.113Z","type":"join"}
{"nick":"s1w","new_nick":"Guest49323","date":"2016-08-22T16:57:05.972Z","type":"nick"}
{"nick":"jgi","date":"2016-08-22T17:28:59.087Z","type":"join"}
{"nick":"trevnorr1s","new_nick":"trevnorris","date":"2016-08-22T17:36:06.348Z","type":"nick"}
{"nick":"caitp","message":"hello #v8","date":"2016-08-22T18:27:43.633Z","type":"message"}
{"nick":"caitp","message":"hows it goin","date":"2016-08-22T18:27:51.108Z","type":"message"}
{"nick":"caitp","message":"cool","date":"2016-08-22T18:27:55.284Z","type":"message"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-08-22T18:42:48.296Z","type":"quit"}
{"nick":"jgi","date":"2016-08-22T18:49:13.924Z","type":"join"}
{"nick":"jgi","reason":"Quit: jgi","date":"2016-08-22T18:57:25.596Z","type":"quit"}
{"nick":"aklein","message":"caitp: hi :)","date":"2016-08-22T18:58:23.844Z","type":"message"}
{"nick":"caitp","message":"hey","date":"2016-08-22T18:59:08.728Z","type":"message"}
{"nick":"caitp","message":"the reason those extra stack overflow checks were added in dan's desugaring CL, was a regression test that started failing again, iirc","date":"2016-08-22T18:59:33.545Z","type":"message"}
{"nick":"caitp","message":"I guess adding those checks in the compiler was a simpler fix or something?","date":"2016-08-22T19:00:00.376Z","type":"message"}
{"nick":"caitp","message":"I think it's about https://cs.chromium.org/chromium/src/v8/test/mjsunit/harmony/regress/regress-624300.js?l=11","date":"2016-08-22T19:00:57.448Z","type":"message"}
{"nick":"bnoordhuis","date":"2016-08-22T19:01:11.462Z","type":"join"}
{"nick":"caitp","message":"ah, he just explained the fix. pretty sure that's the test that broke, but it makes sense now at least","date":"2016-08-22T19:02:12.865Z","type":"message"}
{"nick":"bnoordhuis","reason":"Client Quit","date":"2016-08-22T19:04:09.349Z","type":"quit"}
{"nick":"jgi","date":"2016-08-22T19:07:21.976Z","type":"join"}
{"nick":"jgi","reason":"Client Quit","date":"2016-08-22T19:07:31.348Z","type":"quit"}
{"nick":"aklein","message":"caitp: yeah, I see this while loop now","date":"2016-08-22T19:20:07.712Z","type":"message"}
{"nick":"seventh","reason":"Ping timeout: 258 seconds","date":"2016-08-22T20:28:27.109Z","type":"quit"}
{"nick":"seventh","date":"2016-08-22T20:52:44.305Z","type":"join"}
{"nick":"bobmcw","reason":"Remote host closed the connection","date":"2016-08-22T21:06:06.000Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2016-08-22T21:25:06.603Z","type":"quit"}
{"nick":"seventh","reason":"Ping timeout: 240 seconds","date":"2016-08-22T22:04:32.516Z","type":"quit"}
{"nick":"aklein","message":"caitp: do you recall why you went with this CheckDestructuringElement() approach to error-checking in destructuring assignment instead of changing BindingPatternError to PatternError in all the places where something's disallowed?","date":"2016-08-22T22:29:56.375Z","type":"message"}
{"nick":"caitp","message":"it was there already","date":"2016-08-22T22:30:46.723Z","type":"message"}
{"nick":"aklein","message":"it seems odd to me that 'var {y: ++x} = {}' and '({y: ++x} = {})' get their errors detected at totally different places","date":"2016-08-22T22:30:47.922Z","type":"message"}
{"nick":"aklein","message":"caitp: afaict CheckDestructuringElement() was created in https://codereview.chromium.org/1309813007","date":"2016-08-22T22:32:38.196Z","type":"message"}
{"nick":"caitp","message":"it was based on stuff that was already in the tree","date":"2016-08-22T22:32:57.509Z","type":"message"}
{"nick":"caitp","message":"the approach dudnt originate there","date":"2016-08-22T22:33:27.353Z","type":"message"}
{"nick":"aklein","message":"oh heh, and the blamelist shows that I was the one that left CheckDestructuringElement as it is...","date":"2016-08-22T22:34:39.589Z","type":"message"}
{"nick":"caitp","message":"also, not clear how they could happen in the same place","date":"2016-08-22T22:36:46.064Z","type":"message"}
{"nick":"caitp","message":"since when you parse it, it doesnt look like an assignment target","date":"2016-08-22T22:37:13.280Z","type":"message"}
{"nick":"caitp","message":"and its unknown if its a pattern or not","date":"2016-08-22T22:37:44.431Z","type":"message"}
{"nick":"aklein","message":"well CheckDestructuringElement just records a bit  in the expression classifier, it doesn't assume it knows that it's dealing with a pattern","date":"2016-08-22T22:38:38.342Z","type":"message"}
{"nick":"caitp","message":"that sounds diff from the original version","date":"2016-08-22T22:40:02.793Z","type":"message"}
{"nick":"aklein","message":"maybe you're thinking of  a different function?","date":"2016-08-22T22:40:29.508Z","type":"message"}
{"nick":"aklein","message":"this one has always been about poking the classifier","date":"2016-08-22T22:40:36.279Z","type":"message"}
{"nick":"caitp","message":"poking it as in recording errors?","date":"2016-08-22T22:57:13.241Z","type":"message"}
{"nick":"caitp","message":"because thats what I remember writing","date":"2016-08-22T22:57:32.645Z","type":"message"}
{"nick":"caitp","message":"there was no bit to set other than at one point recording if","date":"2016-08-22T22:58:06.350Z","type":"message"}
{"nick":"caitp","message":"cover-initialized-name occurred, but was removed before landing","date":"2016-08-22T22:58:30.558Z","type":"message"}
{"nick":"RT|Chatzilla","date":"2016-08-22T23:16:44.072Z","type":"join"}
