{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-16T00:01:56.843Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-16T01:02:45.956Z","type":"join"}
{"nick":"iamdustan","date":"2013-10-16T01:16:13.464Z","type":"join"}
{"nick":"abraxas","date":"2013-10-16T02:16:19.671Z","type":"join"}
{"nick":"leostera","date":"2013-10-16T02:31:30.456Z","type":"join"}
{"nick":"stalled","reason":"Ping timeout: 260 seconds","date":"2013-10-16T02:38:08.039Z","type":"quit"}
{"nick":"stalled","date":"2013-10-16T02:47:45.100Z","type":"join"}
{"nick":"scathen^C","date":"2013-10-16T03:01:22.070Z","type":"join"}
{"nick":"scathen^C","date":"2013-10-16T03:01:34.431Z","type":"part"}
{"nick":"jaseemabid","date":"2013-10-16T04:19:20.013Z","type":"join"}
{"nick":"Petka","date":"2013-10-16T04:50:24.762Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-16T05:25:51.181Z","type":"quit"}
{"nick":"jazz264","date":"2013-10-16T05:48:20.882Z","type":"join"}
{"nick":"jaseemabid","reason":"Ping timeout: 248 seconds","date":"2013-10-16T05:50:19.746Z","type":"quit"}
{"nick":"Lethalman","date":"2013-10-16T07:58:25.941Z","type":"join"}
{"nick":"juanjosanchez","date":"2013-10-16T08:01:56.265Z","type":"join"}
{"nick":"muelli","date":"2013-10-16T08:05:46.995Z","type":"join"}
{"nick":"RT|Chatzilla_","date":"2013-10-16T08:06:09.134Z","type":"join"}
{"nick":"RT|Chatzilla","reason":"*.net *.split","date":"2013-10-16T08:13:03.426Z","type":"quit"}
{"nick":"ager","date":"2013-10-16T08:39:33.822Z","type":"join"}
{"nick":"C-Man","date":"2013-10-16T09:02:49.184Z","type":"join"}
{"nick":"Net147","date":"2013-10-16T09:22:20.414Z","type":"join"}
{"nick":"bnoordhuis","date":"2013-10-16T09:55:01.949Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2013-10-16T10:17:24.765Z","type":"quit"}
{"nick":"abraxas","date":"2013-10-16T10:18:00.842Z","type":"join"}
{"nick":"abraxas","reason":"Ping timeout: 260 seconds","date":"2013-10-16T10:22:28.150Z","type":"quit"}
{"nick":"juanjosanchez","reason":"Ping timeout: 252 seconds","date":"2013-10-16T10:44:09.181Z","type":"quit"}
{"nick":"jazz264","reason":"Ping timeout: 272 seconds","date":"2013-10-16T11:04:21.894Z","type":"quit"}
{"nick":"iamdustan","reason":"Ping timeout: 240 seconds","date":"2013-10-16T11:10:28.657Z","type":"quit"}
{"nick":"xan_","reason":"Quit: leaving","date":"2013-10-16T12:19:12.144Z","type":"quit"}
{"nick":"Net147","reason":"Quit:  HydraIRC -> http://www.hydrairc.com <- IRC with a difference","date":"2013-10-16T12:23:53.677Z","type":"quit"}
{"nick":"juanjosanchez","date":"2013-10-16T12:25:42.263Z","type":"join"}
{"nick":"iamdustan","date":"2013-10-16T12:26:43.738Z","type":"join"}
{"nick":"c4milo","date":"2013-10-16T12:50:27.571Z","type":"join"}
{"nick":"jazz264","date":"2013-10-16T13:06:30.549Z","type":"join"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-10-16T13:08:26.045Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-16T13:08:59.055Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 248 seconds","date":"2013-10-16T13:13:31.760Z","type":"quit"}
{"nick":"soluble","date":"2013-10-16T13:42:50.244Z","type":"join"}
{"nick":"juanjosanchez","reason":"Ping timeout: 256 seconds","date":"2013-10-16T13:56:54.333Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 272 seconds","date":"2013-10-16T14:05:13.746Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-16T14:17:17.552Z","type":"join"}
{"nick":"c4milo","reason":"Ping timeout: 248 seconds","date":"2013-10-16T14:21:47.744Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-10-16T15:10:23.413Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-10-16T15:14:48.269Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-10-16T15:21:36.480Z","type":"join"}
{"nick":"soluble","reason":"Ping timeout: 252 seconds","date":"2013-10-16T15:43:54.229Z","type":"quit"}
{"nick":"RT|Chatzilla_","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2009081014]","date":"2013-10-16T16:06:39.558Z","type":"quit"}
{"nick":"juanjosanchez","date":"2013-10-16T16:29:15.785Z","type":"join"}
{"nick":"jazz264","reason":"Read error: Operation timed out","date":"2013-10-16T16:31:05.942Z","type":"quit"}
{"nick":"Lethalman","reason":"Remote host closed the connection","date":"2013-10-16T16:54:30.088Z","type":"quit"}
{"nick":"juanjosanchez","reason":"Quit: Leaving","date":"2013-10-16T16:57:52.309Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 252 seconds","date":"2013-10-16T16:58:42.186Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-10-16T17:24:40.428Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2013-10-16T17:33:06.212Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-10-16T17:39:27.772Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-10-16T17:57:50.565Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-10-16T18:23:11.295Z","type":"join"}
{"nick":"Lethalman","date":"2013-10-16T18:28:40.268Z","type":"join"}
{"nick":"Petka","reason":"Quit: L�hd�ss�","date":"2013-10-16T18:36:21.640Z","type":"quit"}
{"nick":"futhark1","date":"2013-10-16T18:57:43.719Z","type":"join"}
{"nick":"futhark1","message":"hi, anyone here who knows about v8 strings, strings between v8 <-> blink, and garbage collection who can explain slowness in: https://code.google.com/p/chromium/issues/attachmentText?id=305037&aid=3050370002000&name=gc.html&token=YZwhDIn5bgkUwL7r3qXLNdCvdB4%3A1381950682339  ?","date":"2013-10-16T19:15:01.640Z","type":"message"}
{"nick":"bnoordhuis","message":"futhark1: broken link? what's the issue #?","date":"2013-10-16T19:19:19.269Z","type":"message"}
{"nick":"futhark1","message":"305037","date":"2013-10-16T19:19:47.469Z","type":"message"}
{"nick":"futhark1","message":"bnoordhuis: gc.html attachment","date":"2013-10-16T19:19:58.810Z","type":"message"}
{"nick":"bnoordhuis","message":"futhark1: right, i see it.","date":"2013-10-16T19:21:23.529Z","type":"message"}
{"nick":"bnoordhuis","message":"don't know what would be causing that. maybe the repeated flattening of the `str` cons string","date":"2013-10-16T19:21:40.537Z","type":"message"}
{"nick":"bnoordhuis","message":"the first one, oneMillionChars, should really have an impact though unless you have a constrained heap","date":"2013-10-16T19:22:57.506Z","type":"message"}
{"nick":"bnoordhuis","message":"*shouldn't","date":"2013-10-16T19:23:03.640Z","type":"message"}
{"nick":"futhark1","message":"bnoordhuis: I'm working in blink and don't have much knowledge about ecmascript engine details.","date":"2013-10-16T19:23:45.742Z","type":"message"}
{"nick":"futhark1","message":"bnoordhuis: I ran about:tracing","date":"2013-10-16T19:24:05.812Z","type":"message"}
{"nick":"futhark1","message":"bnoordhuis: long lasting garbage collections during the latter loop.","date":"2013-10-16T19:24:39.339Z","type":"message"}
{"nick":"bnoordhuis","message":"futhark1: when you do s += s, v8 creates an object that looks like { left: \"...\", right: \"...\" }","date":"2013-10-16T19:25:12.844Z","type":"message"}
{"nick":"bnoordhuis","message":"it's called a cons string and you can build trees of them","date":"2013-10-16T19:25:31.061Z","type":"message"}
{"nick":"bnoordhuis","message":"but eventually you need to flatten the tree. that's when you alloc memory, walk the tree and copy the fragments out","date":"2013-10-16T19:26:05.880Z","type":"message"}
{"nick":"bnoordhuis","message":"if you're repeatedly flattening it, that's going to cost","date":"2013-10-16T19:26:29.875Z","type":"message"}
{"nick":"futhark1","message":"ok","date":"2013-10-16T19:26:39.215Z","type":"message"}
{"nick":"bnoordhuis","message":"used to be something of an issue in node.js","date":"2013-10-16T19:26:44.039Z","type":"message"}
{"nick":"bnoordhuis","message":"we worked around that by caching the flattened string on the c++ side","date":"2013-10-16T19:27:45.151Z","type":"message"}
{"nick":"futhark1","message":"bnoordhuis: since the second part is not related to the oneMillionChars thing, you're saying that creating the strings in the second part could cause flattening of the tree built by the oneMillionChars thing?","date":"2013-10-16T19:28:09.621Z","type":"message"}
{"nick":"bnoordhuis","message":"futhark1: no, i was saying that i don't see how the oneMillionChars thing affects what comes after it :)","date":"2013-10-16T19:28:39.391Z","type":"message"}
{"nick":"bnoordhuis","message":"futhark1: the only semi-plausible reason i can think of is heap pressure","date":"2013-10-16T19:29:16.213Z","type":"message"}
{"nick":"futhark1","message":"bnoordhuis: no exactly. unless there is some heap constraint that indirectly causes flattening","date":"2013-10-16T19:29:23.506Z","type":"message"}
{"nick":"futhark1","message":"right","date":"2013-10-16T19:29:25.300Z","type":"message"}
{"nick":"bnoordhuis","message":"i don't think v8 actually does implicit flattening, only on demand","date":"2013-10-16T19:30:07.550Z","type":"message"}
{"nick":"bnoordhuis","message":"but oneMillionChars is a tree of one million cons strings","date":"2013-10-16T19:30:18.649Z","type":"message"}
{"nick":"bnoordhuis","message":"later on, you're repeatedly flattening the other cons string","date":"2013-10-16T19:30:36.189Z","type":"message"}
{"nick":"bnoordhuis","message":"which requires v8 to allocate heap memory","date":"2013-10-16T19:30:43.773Z","type":"message"}
{"nick":"bnoordhuis","message":"which in turn will make it run the garbage collector a lot","date":"2013-10-16T19:30:59.560Z","type":"message"}
{"nick":"futhark1","message":"bnoordhuis: but wait. interesting part is that it's the createTextNode loop that is slow.","date":"2013-10-16T19:31:00.338Z","type":"message"}
{"nick":"bnoordhuis","message":"which then has to traverse that one million cons string objects","date":"2013-10-16T19:31:08.520Z","type":"message"}
{"nick":"futhark1","message":"the str += str is actually not slow.","date":"2013-10-16T19:31:38.216Z","type":"message"}
{"nick":"bnoordhuis","message":"no, but the createTextNode thing is, right?","date":"2013-10-16T19:31:52.646Z","type":"message"}
{"nick":"futhark1","message":"If I just comment out the createTextNode call, it's faster.","date":"2013-10-16T19:31:54.825Z","type":"message"}
{"nick":"bnoordhuis","message":"right. because createTextNode undoubtedly has to flatten the string","date":"2013-10-16T19:32:13.409Z","type":"message"}
{"nick":"futhark1","message":"If I call createElement instead, it's the same perf issue","date":"2013-10-16T19:32:15.410Z","type":"message"}
{"nick":"futhark1","message":"so I thought it might be some v8 -> blink string translation","date":"2013-10-16T19:32:36.497Z","type":"message"}
{"nick":"bnoordhuis","message":"if createTextNode does something like String::Utf8Value s(arg[0]), that'll flatten it","date":"2013-10-16T19:32:36.715Z","type":"message"}
{"nick":"futhark1","message":"bnoordhuis: so the funny thing is that still that oneMillionChars should not affect flattening of str","date":"2013-10-16T19:33:29.719Z","type":"message"}
{"nick":"bnoordhuis","message":"well, it would if the gc has to traverse all those cons strings","date":"2013-10-16T19:33:52.002Z","type":"message"}
{"nick":"bnoordhuis","message":"but... the var is nulled so it should be reclaimable on the first gc run","date":"2013-10-16T19:34:09.254Z","type":"message"}
{"nick":"bnoordhuis","message":"maybe run with --trace_gc --trace_gc_verbose to see what's happening :)","date":"2013-10-16T19:34:22.130Z","type":"message"}
{"nick":"futhark1","message":"bnoordhuis: thanks for your help. I'll try that. I don't expect to be able to fix it myself, though.","date":"2013-10-16T19:35:35.298Z","type":"message"}
{"nick":"muelli","message":"Hm. Weird. I see ConsStrings but I don't see where they are coming from. I.e. I printf on AllocateConsString but I don't see the creation of the ConsString I see later. Is there another place for ConsStrings to be created?","date":"2013-10-16T19:41:23.391Z","type":"message"}
{"nick":"Lethalman","reason":"Read error: Connection reset by peer","date":"2013-10-16T19:42:19.065Z","type":"quit"}
{"nick":"bnoordhuis","message":"muelli: the generated code can allocate cons strings inline","date":"2013-10-16T19:51:25.169Z","type":"message"}
{"nick":"muelli","message":"ah! Damn.","date":"2013-10-16T19:51:36.891Z","type":"message"}
{"nick":"muelli","message":"hm. But I could turn that off, right?","date":"2013-10-16T19:51:51.023Z","type":"message"}
{"nick":"bnoordhuis","message":"hm, don't think there's a switch for that","date":"2013-10-16T19:52:41.308Z","type":"message"}
{"nick":"bnoordhuis","message":"fwiw, it's the StringAddStub code in src/code-stubs-*","date":"2013-10-16T19:53:14.375Z","type":"message"}
{"nick":"muelli","message":"hm. interesting. My version is apparently too old. I think I found the place though.","date":"2013-10-16T19:55:33.107Z","type":"message"}
{"nick":"futhark1","message":"bnoordhuis: I did run with --trace-gc --trace-gc-verbose but I don't know what to look for.","date":"2013-10-16T20:01:29.538Z","type":"message"}
{"nick":"futhark1","message":"bnoordhuis: should I mark the issue with a label for v8?","date":"2013-10-16T20:02:28.606Z","type":"message"}
{"nick":"bnoordhuis","message":"futhark1: i don't know. i suspect it's not really a v8 issue but...","date":"2013-10-16T20:03:18.631Z","type":"message"}
{"nick":"futhark1","message":"ok","date":"2013-10-16T20:03:40.900Z","type":"message"}
{"nick":"bnoordhuis","message":"what did --trace-gc etc. print?","date":"2013-10-16T20:03:42.157Z","type":"message"}
{"nick":"muelli","message":"hm. I see AllocateTwoByteConsString(rcx, rdi, no_reg, &call_runtime) and AllocateTwoByteConsString(rcx, rdi, no_reg, &runtime). I wonder whether \"runtime\" or \"call_runtime\" refer to the code in runtime.cc...","date":"2013-10-16T20:05:19.866Z","type":"message"}
{"nick":"futhark1","message":"bnoordhuis: well. various used/available memory data. As I said, I wouldn't know what to look for. It did say \"allocation failure\", but then again that was also the case when loading some arbitrary news site.","date":"2013-10-16T20:06:32.486Z","type":"message"}
{"nick":"bnoordhuis","message":"muelli: it does","date":"2013-10-16T20:08:57.540Z","type":"message"}
{"nick":"bnoordhuis","message":"futhark1: yeah, v8's gc is lazy. it doesn't start scanning until it has to (somewhat simplified)","date":"2013-10-16T20:09:25.342Z","type":"message"}
{"nick":"muelli","message":"bnoordhuis: hm. So I could replace AllocateTwoByteConsString(rcx, rdi, no_reg, &runtime) with AllocateTwoByteConsString(rcx, rdi, no_reg, &call_runtime)? Or the other way around?","date":"2013-10-16T20:09:41.718Z","type":"message"}
{"nick":"bnoordhuis","message":"muelli: you mean change the label from runtime to call_runtime or vice versa?","date":"2013-10-16T20:10:47.237Z","type":"message"}
{"nick":"muelli","message":"bnoordhuis: yes. My question is whether this would be sufficient to not call the generated code, but the stuff in runtime.cc","date":"2013-10-16T20:11:20.533Z","type":"message"}
{"nick":"bnoordhuis","message":"muelli: depends on what the code behind the label does. a label is basically a jump in the generated code to some other generated code","date":"2013-10-16T20:13:20.572Z","type":"message"}
{"nick":"muelli","message":"hm. yeah. well. it's way too late now for me. I'm coming back tomorrow. gn8 guys.","date":"2013-10-16T20:16:19.011Z","type":"message"}
{"nick":"bnoordhuis","message":"sleep tight :)","date":"2013-10-16T20:20:26.959Z","type":"message"}
{"nick":"muelli","reason":"Ping timeout: 246 seconds","date":"2013-10-16T21:18:19.876Z","type":"quit"}
{"nick":"iamdustan","reason":"Ping timeout: 272 seconds","date":"2013-10-16T21:19:41.749Z","type":"quit"}
{"nick":"futhark1","reason":"Read error: Connection reset by peer","date":"2013-10-16T21:21:33.273Z","type":"quit"}
{"nick":"Vbitz","reason":"Ping timeout: 245 seconds","date":"2013-10-16T22:10:50.183Z","type":"quit"}
{"nick":"seventh","date":"2013-10-16T22:10:53.549Z","type":"join"}
{"nick":"Vbitz","date":"2013-10-16T22:12:51.975Z","type":"join"}
{"nick":"wadey","reason":"Ping timeout: 245 seconds","date":"2013-10-16T22:14:35.354Z","type":"quit"}
{"nick":"wadey","date":"2013-10-16T22:17:23.733Z","type":"join"}
{"nick":"RT|Chatzilla","date":"2013-10-16T22:23:59.155Z","type":"join"}
{"nick":"leostera","reason":"Quit: leostera","date":"2013-10-16T22:53:22.318Z","type":"quit"}
{"nick":"iamdustan","date":"2013-10-16T22:53:50.188Z","type":"join"}
{"nick":"iamdustan","reason":"Remote host closed the connection","date":"2013-10-16T22:57:15.129Z","type":"quit"}
{"nick":"c4milo","date":"2013-10-16T23:06:05.968Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 268 seconds","date":"2013-10-16T23:12:26.088Z","type":"quit"}
{"nick":"iamdustan","date":"2013-10-16T23:52:58.230Z","type":"join"}
