{"nick":"carif_","reason":"Ping timeout: 276 seconds","date":"2013-07-08T00:06:13.155Z","type":"quit"}
{"nick":"c4milo","date":"2013-07-08T00:11:50.693Z","type":"join"}
{"nick":"qengho","reason":"Remote host closed the connection","date":"2013-07-08T00:17:29.248Z","type":"quit"}
{"nick":"Vbitz","date":"2013-07-08T00:20:02.141Z","type":"join"}
{"nick":"qengho","date":"2013-07-08T00:21:10.568Z","type":"join"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2013-07-08T00:21:43.927Z","type":"quit"}
{"nick":"C-Man","date":"2013-07-08T00:24:28.980Z","type":"join"}
{"nick":"C-Man","reason":"Client Quit","date":"2013-07-08T00:27:47.440Z","type":"quit"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-07-08T00:32:47.776Z","type":"quit"}
{"nick":"seventh","reason":"Ping timeout: 276 seconds","date":"2013-07-08T00:38:04.189Z","type":"quit"}
{"nick":"Vbitz","reason":"Ping timeout: 260 seconds","date":"2013-07-08T00:43:31.998Z","type":"quit"}
{"nick":"Vbitz","date":"2013-07-08T00:47:30.171Z","type":"join"}
{"nick":"Vbitz","reason":"Ping timeout: 240 seconds","date":"2013-07-08T00:51:53.940Z","type":"quit"}
{"nick":"carif_","date":"2013-07-08T01:09:18.172Z","type":"join"}
{"nick":"carif_","reason":"Ping timeout: 276 seconds","date":"2013-07-08T02:21:25.148Z","type":"quit"}
{"nick":"carif_","date":"2013-07-08T02:35:27.081Z","type":"join"}
{"nick":"cha0s","reason":"Ping timeout: 248 seconds","date":"2013-07-08T02:37:57.730Z","type":"quit"}
{"nick":"Vbitz","date":"2013-07-08T03:18:13.150Z","type":"join"}
{"nick":"Vbitz","reason":"Max SendQ exceeded","date":"2013-07-08T03:18:16.172Z","type":"quit"}
{"nick":"Vbitz","date":"2013-07-08T03:18:51.250Z","type":"join"}
{"nick":"Vbitz","reason":"Max SendQ exceeded","date":"2013-07-08T03:18:57.012Z","type":"quit"}
{"nick":"Vbitz","date":"2013-07-08T03:19:36.101Z","type":"join"}
{"nick":"Vbitz","reason":"Max SendQ exceeded","date":"2013-07-08T03:19:39.886Z","type":"quit"}
{"nick":"Vbitz","date":"2013-07-08T03:20:15.380Z","type":"join"}
{"nick":"Vbitz","reason":"Max SendQ exceeded","date":"2013-07-08T03:20:19.144Z","type":"quit"}
{"nick":"Vbitz","date":"2013-07-08T03:20:57.169Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 246 seconds","date":"2013-07-08T03:42:12.151Z","type":"quit"}
{"nick":"cha0s","date":"2013-07-08T03:44:55.171Z","type":"join"}
{"nick":"carif_","reason":"Ping timeout: 276 seconds","date":"2013-07-08T03:49:10.148Z","type":"quit"}
{"nick":"vivekg","date":"2013-07-08T03:52:34.396Z","type":"join"}
{"nick":"Vbitz","reason":"Quit: Computer has gone to sleep.","date":"2013-07-08T03:57:39.043Z","type":"quit"}
{"nick":"Lethalman","date":"2013-07-08T07:24:41.137Z","type":"join"}
{"nick":"iccthedral","date":"2013-07-08T07:45:40.080Z","type":"join"}
{"nick":"jonaslund","reason":"Ping timeout: 252 seconds","date":"2013-07-08T07:58:13.368Z","type":"quit"}
{"nick":"jonaslund","date":"2013-07-08T08:02:14.685Z","type":"join"}
{"nick":"juanjosanchez","date":"2013-07-08T08:10:30.305Z","type":"join"}
{"nick":"C-Man","date":"2013-07-08T08:43:40.078Z","type":"join"}
{"nick":"stampho","date":"2013-07-08T08:49:12.915Z","type":"join"}
{"nick":"seventh","date":"2013-07-08T09:17:43.164Z","type":"join"}
{"nick":"juanjosanchez","reason":"Ping timeout: 241 seconds","date":"2013-07-08T09:18:09.528Z","type":"quit"}
{"nick":"juanjosanchez","date":"2013-07-08T09:19:30.330Z","type":"join"}
{"nick":"muelli","date":"2013-07-08T09:26:26.885Z","type":"join"}
{"nick":"xan_","date":"2013-07-08T09:57:33.124Z","type":"join"}
{"nick":"juanjosanchez","reason":"Ping timeout: 241 seconds","date":"2013-07-08T10:58:12.491Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-07-08T11:01:46.283Z","type":"join"}
{"nick":"juanjosanchez","date":"2013-07-08T11:18:12.934Z","type":"join"}
{"nick":"juanjosanchez","reason":"Ping timeout: 246 seconds","date":"2013-07-08T11:55:01.919Z","type":"quit"}
{"nick":"Mast3rPlan","date":"2013-07-08T12:06:21.467Z","type":"join"}
{"nick":"Mast3rPlan","message":"Hey guys, would anyone in here know if it's possible to get the Isolate beloning to an Object from an Object?","date":"2013-07-08T12:07:02.607Z","type":"message"}
{"nick":"Mast3rPlan","message":"I'm implementing an EventEmitter that would work with multiple threads using multiple isolates.","date":"2013-07-08T12:07:26.879Z","type":"message"}
{"nick":"seventh","reason":"Read error: Connection reset by peer","date":"2013-07-08T12:09:35.948Z","type":"quit"}
{"nick":"bnoordhuis","message":"Mast3rPlan: you can get the isolate with args.GetIsolate() unless i'm misunderstanding what you're trying to do","date":"2013-07-08T12:12:43.341Z","type":"message"}
{"nick":"Mast3rPlan","message":"bnoordhuis, with args, you mean args I would get from a callback?","date":"2013-07-08T12:13:17.749Z","type":"message"}
{"nick":"Mast3rPlan","message":"bnoordhuis, I want to store callbacks in a map of lists, when they need to be invoked I need to get the associated isolates of them","date":"2013-07-08T12:13:42.084Z","type":"message"}
{"nick":"Mast3rPlan","message":"It might be a better idea to actually store them into map<eventid, map<isolate, list<listener>>>","date":"2013-07-08T12:14:30.996Z","type":"message"}
{"nick":"bnoordhuis","message":"Mast3rPlan: oh, like that. there's no api functionality for that, you'll need to store the isolate when you add the callback to the list","date":"2013-07-08T12:14:39.290Z","type":"message"}
{"nick":"Mast3rPlan","message":"this way i cna iterate them isolate by isolate","date":"2013-07-08T12:14:39.540Z","type":"message"}
{"nick":"bnoordhuis","message":"yep, exactly","date":"2013-07-08T12:14:49.754Z","type":"message"}
{"nick":"Mast3rPlan","message":"nice, do you think it's possible? Isolates can be used on different threads, right?","date":"2013-07-08T12:15:07.986Z","type":"message"}
{"nick":"Mast3rPlan","message":"I really dislike that javascript only supports one thread, doing expensive operations in js itself would 'pause' the entire vm","date":"2013-07-08T12:15:40.882Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, with some caveats. you'll want to read up on the v8::Locker api","date":"2013-07-08T12:15:58.947Z","type":"message"}
{"nick":"Mast3rPlan","message":"Anyway, thanks for the support bnoordhuis, I'll play around with it later.","date":"2013-07-08T12:16:07.221Z","type":"message"}
{"nick":"guor","message":"You can use web workers in Chrome, and I think node also supports some sort of message passing","date":"2013-07-08T12:16:14.442Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, good luck :)","date":"2013-07-08T12:16:18.431Z","type":"message"}
{"nick":"Mast3rPlan","message":"bnoordhuis, http://izs.me/v8-docs/classv8_1_1Locker.html ","date":"2013-07-08T12:16:26.417Z","type":"message"}
{"nick":"Mast3rPlan","message":"not alot of documentation... :p","date":"2013-07-08T12:16:30.478Z","type":"message"}
{"nick":"[[zz]]","reason":"Read error: Connection reset by peer","date":"2013-07-08T12:16:45.625Z","type":"quit"}
{"nick":"Mast3rPlan","message":"guor, webworkers are actual threads?","date":"2013-07-08T12:16:47.568Z","type":"message"}
{"nick":"guor","message":"as far as I can tell, yes","date":"2013-07-08T12:16:58.253Z","type":"message"}
{"nick":"bnoordhuis","message":"no, but check its definition in v8.h and the tests in test/cctest/","date":"2013-07-08T12:16:58.469Z","type":"message"}
{"nick":"Mast3rPlan","message":"node supports forking I believe","date":"2013-07-08T12:17:01.958Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, node spawns child processes. it doesn't use isolates","date":"2013-07-08T12:17:17.767Z","type":"message"}
{"nick":"guor","message":"they run on their own isolates","date":"2013-07-08T12:17:20.049Z","type":"message"}
{"nick":"[[zz]]","date":"2013-07-08T12:17:38.030Z","type":"join"}
{"nick":"Mast3rPlan","message":"If I'm correct, there is one default isolate spawned on the main thread unless I explicitly create it before using v8?","date":"2013-07-08T12:18:20.712Z","type":"message"}
{"nick":"Mast3rPlan","message":"bnoordhuis, what is the point of Isolate::Enter ?","date":"2013-07-08T12:19:20.832Z","type":"message"}
{"nick":"bnoordhuis","message":"Mast3rPlan: to, well, enter the isolate","date":"2013-07-08T12:19:34.702Z","type":"message"}
{"nick":"guor","message":"you can also just use the isolate scope as wrapper","date":"2013-07-08T12:19:56.505Z","type":"message"}
{"nick":"bnoordhuis","message":"^ that","date":"2013-07-08T12:20:03.393Z","type":"message"}
{"nick":"Mast3rPlan","message":"Would it act like a locker?","date":"2013-07-08T12:20:04.751Z","type":"message"}
{"nick":"bnoordhuis","message":"no","date":"2013-07-08T12:20:07.291Z","type":"message"}
{"nick":"guor","message":"no the locker is separate","date":"2013-07-08T12:20:12.054Z","type":"message"}
{"nick":"Mast3rPlan","message":"okay, so entering the isolate does what exactly?","date":"2013-07-08T12:20:25.615Z","type":"message"}
{"nick":"bnoordhuis","message":"it makes that isolate the active isolate","date":"2013-07-08T12:20:34.961Z","type":"message"}
{"nick":"Mast3rPlan","message":"Do I need to enter the Isolate before I can use objects bound to it?","date":"2013-07-08T12:20:39.547Z","type":"message"}
{"nick":"bnoordhuis","message":"when you exit it, the previous isolate becomes active again","date":"2013-07-08T12:20:48.649Z","type":"message"}
{"nick":"Mast3rPlan","message":"Oh it set's the current isolate for the thread","date":"2013-07-08T12:20:49.428Z","type":"message"}
{"nick":"Mast3rPlan","message":"correct?","date":"2013-07-08T12:20:50.947Z","type":"message"}
{"nick":"bnoordhuis","message":"it's a stack really","date":"2013-07-08T12:20:53.284Z","type":"message"}
{"nick":"bnoordhuis","message":"exactly","date":"2013-07-08T12:20:55.671Z","type":"message"}
{"nick":"Mast3rPlan","message":"let's say I would emit an event that then calls in a certain js vm, that listener then emits an event to another js vm","date":"2013-07-08T12:21:48.764Z","type":"message"}
{"nick":"Mast3rPlan","message":"I would have to enter the isolate but when emit is called from js I would have to exit the isolate?","date":"2013-07-08T12:22:05.942Z","type":"message"}
{"nick":"bnoordhuis","message":"i assume each vm runs on its own thread?","date":"2013-07-08T12:22:20.779Z","type":"message"}
{"nick":"Mast3rPlan","message":"Or would it be best to make some kind of threadpool for executing these events?","date":"2013-07-08T12:22:23.244Z","type":"message"}
{"nick":"Mast3rPlan","message":"bnoordhuis, I want the eventemitter to be independent of vms","date":"2013-07-08T12:22:44.352Z","type":"message"}
{"nick":"Mast3rPlan","message":"the event emitter will be the only way i interact with the js code","date":"2013-07-08T12:22:57.639Z","type":"message"}
{"nick":"Mast3rPlan","message":"scripts will attach events and that's it","date":"2013-07-08T12:23:09.483Z","type":"message"}
{"nick":"Mast3rPlan","message":"then in c++ i just dispatch events","date":"2013-07-08T12:23:18.749Z","type":"message"}
{"nick":"bnoordhuis","message":"so the thing is you can't reenter a running vm","date":"2013-07-08T12:23:19.346Z","type":"message"}
{"nick":"Mast3rPlan","message":"I understand","date":"2013-07-08T12:23:26.130Z","type":"message"}
{"nick":"Mast3rPlan","message":"a vm isn't bound to a thread though, right?","date":"2013-07-08T12:23:41.614Z","type":"message"}
{"nick":"bnoordhuis","message":"that is, if A emits an event to B but B is already executing js code, you can't call into it, you need to synchronize somehow","date":"2013-07-08T12:23:42.553Z","type":"message"}
{"nick":"bnoordhuis","message":"that's correct, they can switch threads","date":"2013-07-08T12:23:52.312Z","type":"message"}
{"nick":"Mast3rPlan","message":"so i can just create 10 vms, initialize objects on them by cycling trough the vms, and then I have 10 threads that do event dispatching and processing","date":"2013-07-08T12:24:15.382Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, but you still need to synchronize somehow","date":"2013-07-08T12:24:32.022Z","type":"message"}
{"nick":"Mast3rPlan","message":"when there is an emit call from vm 1 it would push the event onto a stack of some sort for all the threads","date":"2013-07-08T12:24:50.611Z","type":"message"}
{"nick":"Mast3rPlan","message":"they would then process it by calling the appropriate callbacks on the correct thread","date":"2013-07-08T12:25:08.561Z","type":"message"}
{"nick":"bnoordhuis","message":"yes, in a nutshell","date":"2013-07-08T12:25:19.024Z","type":"message"}
{"nick":"Mast3rPlan","message":"do you have any idea on how I would be able to share objects between vms?","date":"2013-07-08T12:25:34.176Z","type":"message"}
{"nick":"Mast3rPlan","message":"just marshall them to json?...","date":"2013-07-08T12:25:39.611Z","type":"message"}
{"nick":"Mast3rPlan","message":"the thing is that I would have vm A that emits an event (could be anything) and B receives it, so I have to copy the object over from A to B","date":"2013-07-08T12:26:11.403Z","type":"message"}
{"nick":"Mast3rPlan","message":"this is a problem because obviously object A can have references to objects in vm A","date":"2013-07-08T12:26:26.770Z","type":"message"}
{"nick":"Mast3rPlan","message":"maybe a nested object or something","date":"2013-07-08T12:26:35.578Z","type":"message"}
{"nick":"Mast3rPlan","message":"how would I efficiently copy this over?","date":"2013-07-08T12:26:43.115Z","type":"message"}
{"nick":"bnoordhuis","message":"well, you can't really","date":"2013-07-08T12:27:05.946Z","type":"message"}
{"nick":"bnoordhuis","message":"objects are tied to their isolate/context","date":"2013-07-08T12:27:15.001Z","type":"message"}
{"nick":"bnoordhuis","message":"you have to serialize and deserialize them","date":"2013-07-08T12:27:29.347Z","type":"message"}
{"nick":"Mast3rPlan","message":"so the best way to go is JSON I imagene","date":"2013-07-08T12:28:07.587Z","type":"message"}
{"nick":"Mast3rPlan","message":"or the easiest","date":"2013-07-08T12:28:16.421Z","type":"message"}
{"nick":"Mast3rPlan","message":"I could look for a BSON implementation in js maybe as well","date":"2013-07-08T12:28:34.606Z","type":"message"}
{"nick":"bnoordhuis","message":"json is probably easiest, yes","date":"2013-07-08T12:28:35.027Z","type":"message"}
{"nick":"bnoordhuis","message":"it's what we use in node","date":"2013-07-08T12:28:38.610Z","type":"message"}
{"nick":"Mast3rPlan","message":"since it's faster to parse","date":"2013-07-08T12:28:39.794Z","type":"message"}
{"nick":"bnoordhuis","message":"v8's json serializer/deserializer is reasonably fast","date":"2013-07-08T12:29:14.332Z","type":"message"}
{"nick":"Mast3rPlan","message":"yes but ofcours bson is 10 times faster, I'm sure","date":"2013-07-08T12:29:26.381Z","type":"message"}
{"nick":"bnoordhuis","message":"if you're not sending really huge messages, that is","date":"2013-07-08T12:29:29.295Z","type":"message"}
{"nick":"Mast3rPlan","message":"json requires tokenizing","date":"2013-07-08T12:29:34.087Z","type":"message"}
{"nick":"Mast3rPlan","message":"bson doesn't","date":"2013-07-08T12:29:38.021Z","type":"message"}
{"nick":"guor","message":"inb4 premature optimizations","date":"2013-07-08T12:29:53.203Z","type":"message"}
{"nick":"guor","message":":)","date":"2013-07-08T12:29:54.742Z","type":"message"}
{"nick":"Mast3rPlan","message":"Well, if there's 1000's of events going on and they all have  to be serialized it might have some inpact","date":"2013-07-08T12:30:22.764Z","type":"message"}
{"nick":"Mast3rPlan","message":"and there will be 1000's of events","date":"2013-07-08T12:30:30.853Z","type":"message"}
{"nick":"Mast3rPlan","message":"apparently it is extremely fast","date":"2013-07-08T12:32:39.134Z","type":"message"}
{"nick":"Mast3rPlan","message":"~300 ms for 100000 on an i7","date":"2013-07-08T12:35:06.931Z","type":"message"}
{"nick":"carif_","date":"2013-07-08T13:12:17.433Z","type":"join"}
{"nick":"Net147","date":"2013-07-08T13:19:06.124Z","type":"join"}
{"nick":"juanjosanchez","date":"2013-07-08T13:40:37.432Z","type":"join"}
{"nick":"c4milo","date":"2013-07-08T13:45:08.337Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 240 seconds","date":"2013-07-08T13:56:37.873Z","type":"quit"}
{"nick":"bnoordhuis","date":"2013-07-08T14:02:01.100Z","type":"join"}
{"nick":"muelli_","date":"2013-07-08T14:16:04.884Z","type":"join"}
{"nick":"muelli","message":"If I have a MaybeObject (or an Object), how would I determine it's type, i.e. ConsString or SeqTwoByteString?","date":"2013-07-08T14:18:08.736Z","type":"message"}
{"nick":"Net147","reason":"Quit:  HydraIRC -> http://www.hydrairc.com <-","date":"2013-07-08T14:19:55.973Z","type":"quit"}
{"nick":"bnoordhuis","message":"muelli: Object* obj; if (maybe_object->To(&obj) && obj->IsConsString()) { /* ... */ }","date":"2013-07-08T14:31:46.597Z","type":"message"}
{"nick":"carif_","reason":"Ping timeout: 276 seconds","date":"2013-07-08T14:32:01.149Z","type":"quit"}
{"nick":"bnoordhuis","message":"i guess you could also do maybe_object->ToObjectUnchecked() but then you need to check that maybe_object->IsFailure() == false first","date":"2013-07-08T14:33:02.361Z","type":"message"}
{"nick":"muelli_","message":"hm bnoordhuis. I see. So there is no way to see straight from the object what type it is? I.e. in GDB?","date":"2013-07-08T14:38:21.927Z","type":"message"}
{"nick":"c4milo","reason":"Remote host closed the connection","date":"2013-07-08T14:41:45.542Z","type":"quit"}
{"nick":"c4milo","date":"2013-07-08T14:41:58.387Z","type":"join"}
{"nick":"bnoordhuis","message":"muelli: if you compile with debugprint=on, you can `call maybe_object->Print()` in gdb","date":"2013-07-08T14:44:02.321Z","type":"message"}
{"nick":"bnoordhuis","message":"sorry, i mean objectprint=on","date":"2013-07-08T14:44:19.014Z","type":"message"}
{"nick":"bnoordhuis","message":"if gdb complains it can't find Print(), try maybe_object->Print(stdout) instead","date":"2013-07-08T14:45:08.245Z","type":"message"}
{"nick":"carif_","date":"2013-07-08T14:46:19.117Z","type":"join"}
{"nick":"muelli","message":"ah! Wow. Merci beaucoup. I'll give it a shot. My GDB is very slow :-\\ I accidentally hit the the tab key for completion and it's busy for several dozen minutes :-\\","date":"2013-07-08T14:50:03.125Z","type":"message"}
{"nick":"jonaslund","reason":"Ping timeout: 246 seconds","date":"2013-07-08T14:57:21.199Z","type":"quit"}
{"nick":"carif_","reason":"Ping timeout: 276 seconds","date":"2013-07-08T14:59:19.181Z","type":"quit"}
{"nick":"carif_","date":"2013-07-08T15:10:55.181Z","type":"join"}
{"nick":"vivekg","date":"2013-07-08T15:12:47.734Z","type":"part"}
{"nick":"Chiffon35","reason":"Quit: Quitte","date":"2013-07-08T15:15:40.794Z","type":"quit"}
{"nick":"juanjosanchez","reason":"Quit: Leaving","date":"2013-07-08T15:28:19.250Z","type":"quit"}
{"nick":"xan_","reason":"Ping timeout: 268 seconds","date":"2013-07-08T15:38:16.103Z","type":"quit"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2009081014]","date":"2013-07-08T15:43:34.478Z","type":"quit"}
