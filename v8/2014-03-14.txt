{"nick":"abraxas","date":"2014-03-14T00:16:17.672Z","type":"join"}
{"nick":"muelli_","date":"2014-03-14T00:16:52.232Z","type":"join"}
{"nick":"muelli","reason":"Ping timeout: 240 seconds","date":"2014-03-14T00:18:29.051Z","type":"quit"}
{"nick":"abraxas","reason":"Ping timeout: 255 seconds","date":"2014-03-14T00:20:41.863Z","type":"quit"}
{"nick":"Vbitz","reason":"Ping timeout: 240 seconds","date":"2014-03-14T00:25:44.146Z","type":"quit"}
{"nick":"Vbitz","date":"2014-03-14T00:26:19.150Z","type":"join"}
{"nick":"paulfryzel","date":"2014-03-14T00:31:18.974Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 255 seconds","date":"2014-03-14T00:35:32.898Z","type":"quit"}
{"nick":"xaq_","reason":"Remote host closed the connection","date":"2014-03-14T00:36:09.147Z","type":"quit"}
{"nick":"Vbitz","reason":"Quit: ZNC - http://znc.in","date":"2014-03-14T00:36:30.475Z","type":"quit"}
{"nick":"Vbitz","date":"2014-03-14T00:36:49.977Z","type":"join"}
{"nick":"Vbitz","reason":"Ping timeout: 240 seconds","date":"2014-03-14T00:50:25.134Z","type":"quit"}
{"nick":"Guest39367","reason":"Ping timeout: 255 seconds","date":"2014-03-14T00:50:51.038Z","type":"quit"}
{"nick":"xaq","date":"2014-03-14T00:56:57.022Z","type":"join"}
{"nick":"jdummy","date":"2014-03-14T01:09:46.135Z","type":"join"}
{"nick":"jdummy","message":"Total noob here... is it possible to convert an LPSTR to v8::String?","date":"2014-03-14T01:10:30.836Z","type":"message"}
{"nick":"Jarvix","message":"you can convert unicode strings :) find a way to make LPSTR to UTF8 :)","date":"2014-03-14T01:11:30.951Z","type":"message"}
{"nick":"jdummy","message":"Awww... I wish I knew what that means!!!  :)","date":"2014-03-14T01:11:53.841Z","type":"message"}
{"nick":"jdummy","message":"I tried _T(), which was said to convert to unicode... I've been digging for hours.","date":"2014-03-14T01:12:12.994Z","type":"message"}
{"nick":"Jarvix","message":"UTF-8 char string","date":"2014-03-14T01:12:19.184Z","type":"message"}
{"nick":"Jarvix","message":"Well, I dunno your language :P","date":"2014-03-14T01:12:24.566Z","type":"message"}
{"nick":"Jarvix","message":"isn't LPSTR just a Long Pointer (64bit) to a String?","date":"2014-03-14T01:12:46.217Z","type":"message"}
{"nick":"jdummy","message":"I'm attempting to write a node module that can call Window's EnumPrinters()","date":"2014-03-14T01:12:54.650Z","type":"message"}
{"nick":"jdummy","message":"const char *","date":"2014-03-14T01:13:03.384Z","type":"message"}
{"nick":"jdummy","message":"same thing?","date":"2014-03-14T01:13:06.697Z","type":"message"}
{"nick":"jdummy","message":"v8::String::Cast() says \"cannot convert parameter 1 from 'LPSTR' to 'v8::Value *'","date":"2014-03-14T01:15:00.699Z","type":"message"}
{"nick":"jdummy","message":"Clearly, I'm in over my head :)","date":"2014-03-14T01:15:12.065Z","type":"message"}
{"nick":"jdummy","message":"BUT... I've read many cries for printing support in node, hoping I can learn just enough to accomplish the task (then I'll go back to the frontend, never to be seen again... I promise)","date":"2014-03-14T01:15:59.779Z","type":"message"}
{"nick":"Jarvix","message":"wait","date":"2014-03-14T01:16:20.752Z","type":"message"}
{"nick":"Jarvix","message":"just do this","date":"2014-03-14T01:16:53.040Z","type":"message"}
{"nick":"Jarvix","message":"Local<String> str = String::NewFromUtf8(isolate, (char *)lpstr)","date":"2014-03-14T01:17:29.141Z","type":"message"}
{"nick":"xaq","reason":"Remote host closed the connection","date":"2014-03-14T01:22:19.837Z","type":"quit"}
{"nick":"jdummy","message":"Jarvix: hmm... 'NewFromUtf8' : is not a member of 'v8::String'  :(   http://bespin.cz/~ondras/html/classv8_1_1String.html#aa4b8c052f5108ca6350c45922602b9d4","date":"2014-03-14T01:23:52.648Z","type":"message"}
{"nick":"jdummy","message":"I've gotta be doing something wrong... lemme tinker","date":"2014-03-14T01:24:07.053Z","type":"message"}
{"nick":"jdummy","message":"Thanks for your help!","date":"2014-03-14T01:24:12.623Z","type":"message"}
{"nick":"Jarvix","message":"be spin is 1000 years old","date":"2014-03-14T01:24:37.966Z","type":"message"}
{"nick":"Jarvix","message":"what version of v8 are you using?","date":"2014-03-14T01:24:56.281Z","type":"message"}
{"nick":"jdummy","message":"Only reference I can find :) ... and it mentions String::NewFromUtf8","date":"2014-03-14T01:25:24.384Z","type":"message"}
{"nick":"jdummy","message":"not sure","date":"2014-03-14T01:25:25.899Z","type":"message"}
{"nick":"Jarvix","message":"it is best to just go into the include directory, run 'doxygen -g && doxygen'","date":"2014-03-14T01:25:53.517Z","type":"message"}
{"nick":"Jarvix","message":"so you have your own documentation in include/docs/html/index.html","date":"2014-03-14T01:26:05.247Z","type":"message"}
{"nick":"Jarvix","message":"the api changes with every minor version","date":"2014-03-14T01:26:15.803Z","type":"message"}
{"nick":"jdummy","message":"Yeah, I'm pretty clueless... don't even know where my \"include\" directory is... I started with some working winapi code compiled with Visual Studio 2010... not a big fan of MS products, but I needed winapi for this project","date":"2014-03-14T01:32:01.348Z","type":"message"}
{"nick":"paulfryzel","date":"2014-03-14T01:32:03.916Z","type":"join"}
{"nick":"jdummy","message":"I'm building it with node-gyp currently","date":"2014-03-14T01:32:20.477Z","type":"message"}
{"nick":"jdummy","message":"#include <v8.h>, that's all I know","date":"2014-03-14T01:32:34.224Z","type":"message"}
{"nick":"jdummy","message":"I'm going to upgrade Visual Studio and see if that helps.","date":"2014-03-14T01:32:54.870Z","type":"message"}
{"nick":"jdummy","message":"Thanks again Jarvix, I appreciate it","date":"2014-03-14T01:33:10.298Z","type":"message"}
{"nick":"Jarvix","message":"hehe ok","date":"2014-03-14T01:35:34.275Z","type":"message"}
{"nick":"Jarvix","message":"You must know that this is not the easiest place to start. With such a complex project as V8","date":"2014-03-14T01:35:53.483Z","type":"message"}
{"nick":"paulfryzel","reason":"Ping timeout: 255 seconds","date":"2014-03-14T01:36:17.878Z","type":"quit"}
{"nick":"jdummy","message":"oh, v8 came with node... duh.  it's latest node... 0.10.26","date":"2014-03-14T01:36:59.855Z","type":"message"}
{"nick":"jdummy","message":"Jarvix: oh yeah, that's why I said I'm in over my head :)","date":"2014-03-14T01:37:14.325Z","type":"message"}
{"nick":"jdummy","message":"doesn't mean I won't keep at it","date":"2014-03-14T01:37:20.815Z","type":"message"}
{"nick":"jdummy","message":"AND... I'm able to build and get data back to node, so that's even pretty exciting... baby steps","date":"2014-03-14T01:37:57.853Z","type":"message"}
{"nick":"abraxas","date":"2014-03-14T01:38:26.831Z","type":"join"}
{"nick":"Jarvix","message":"well you are in the internals of node. pretty complex","date":"2014-03-14T01:38:44.318Z","type":"message"}
{"nick":"jdummy","message":"well... I can run this winapi code and get a list of printers back, I'm simply trying to create a node module of it... I'm actually pretty close... damned typecasting :)","date":"2014-03-14T01:39:17.573Z","type":"message"}
{"nick":"Jarvix","message":"can also use reinterpret_cast<char*>()","date":"2014-03-14T01:47:01.529Z","type":"message"}
{"nick":"xaq","date":"2014-03-14T01:48:25.184Z","type":"join"}
{"nick":"abraxas","reason":"Remote host closed the connection","date":"2014-03-14T01:50:38.222Z","type":"quit"}
{"nick":"jdummy","message":"already tried that one, now I realize the problem is different than I originally understood... \"cannot convert from 'char *' to 'v8::Handle<T>'... so reinterpret_cast works","date":"2014-03-14T01:53:33.415Z","type":"message"}
{"nick":"jdummy","message":"Any chance you'd peek at my (terrible, smelly) code?  http://ideone.com/T3m4BV","date":"2014-03-14T01:55:33.618Z","type":"message"}
{"nick":"jdummy","message":"I simply want to return an array, the problem starts at that ugly block at line 69","date":"2014-03-14T01:56:06.537Z","type":"message"}
{"nick":"Jarvix","message":"you never opened your scope","date":"2014-03-14T01:57:03.894Z","type":"message"}
{"nick":"Jarvix","message":"HandleScope scope(v8::Isolate::GetCurrent())","date":"2014-03-14T01:57:14.567Z","type":"message"}
{"nick":"Jarvix","message":"in the first method","date":"2014-03-14T01:57:37.079Z","type":"message"}
{"nick":"Jarvix","message":"you can't reinterpret to char* and then use that as handle","date":"2014-03-14T01:58:15.750Z","type":"message"}
{"nick":"Jarvix","message":"you need to cast to char* and then put that in a string","date":"2014-03-14T01:58:25.813Z","type":"message"}
{"nick":"jdummy","message":"hmmm... this is what I started with, and it worked: http://ideone.com/ybpw6y","date":"2014-03-14T01:58:39.037Z","type":"message"}
{"nick":"Jarvix","message":"String::New((char *)lpInfo[i].pPortName)","date":"2014-03-14T01:58:43.410Z","type":"message"}
{"nick":"jdummy","message":"They didn't either","date":"2014-03-14T01:58:43.861Z","type":"message"}
{"nick":"Jarvix","message":"oh ok :)","date":"2014-03-14T01:58:59.646Z","type":"message"}
{"nick":"Jarvix","message":"maybe I am wrong then","date":"2014-03-14T01:59:03.340Z","type":"message"}
{"nick":"jdummy","message":"I certainly don't know :)","date":"2014-03-14T01:59:15.300Z","type":"message"}
{"nick":"Jarvix","message":"the V8 sample code put isolate in there ;)","date":"2014-03-14T01:59:50.254Z","type":"message"}
{"nick":"Jarvix","message":"oh well if it works","date":"2014-03-14T01:59:53.702Z","type":"message"}
{"nick":"Jarvix","message":"anyways, the thing I said about the strings, do that","date":"2014-03-14T02:00:15.042Z","type":"message"}
{"nick":"Jarvix","message":"Tip: write a method for that","date":"2014-03-14T02:00:39.141Z","type":"message"}
{"nick":"Jarvix","message":"Local<String> LpStrToV8(LPSTR str) { HandleScope scope; return scope.Close(String::New((char *)str)); }","date":"2014-03-14T02:01:26.180Z","type":"message"}
{"nick":"Jarvix","message":"and then LpStrToV8(lpInfo[i].pPrinterName)","date":"2014-03-14T02:01:42.703Z","type":"message"}
{"nick":"Jarvix","message":"also are you sure you don't want to create an Object instead of an array for each printer?","date":"2014-03-14T02:02:35.854Z","type":"message"}
{"nick":"jdummy","message":"I'm sure of nothing :0","date":"2014-03-14T02:02:45.657Z","type":"message"}
{"nick":"Jarvix","message":"try that ;)","date":"2014-03-14T02:02:51.878Z","type":"message"}
{"nick":"jdummy","message":"I simply want a nice JSON result set of the machine's installed printers","date":"2014-03-14T02:03:03.546Z","type":"message"}
{"nick":"Jarvix","message":"an object is in javascript {'printer':xxx,'port:10.'comments':'lala'}","date":"2014-03-14T02:03:14.981Z","type":"message"}
{"nick":"Jarvix","message":"indeed","date":"2014-03-14T02:03:18.461Z","type":"message"}
{"nick":"jdummy","message":"I can already print to one in another module if I explicity supply the printer name, so I'm halfway there","date":"2014-03-14T02:03:23.248Z","type":"message"}
{"nick":"Jarvix","message":"lemme make some code","date":"2014-03-14T02:03:23.811Z","type":"message"}
{"nick":"jdummy","message":"SRSLY??","date":"2014-03-14T02:03:33.820Z","type":"message"}
{"nick":"xaq_","date":"2014-03-14T02:03:41.992Z","type":"join"}
{"nick":"jdummy","message":"Where can I send the beers to?","date":"2014-03-14T02:03:46.632Z","type":"message"}
{"nick":"Jarvix","message":"untested, just changing yours","date":"2014-03-14T02:03:47.591Z","type":"message"}
{"nick":"Jarvix","message":"Netherlands lol","date":"2014-03-14T02:03:52.254Z","type":"message"}
{"nick":"jdummy","message":"hmm... digital beers?","date":"2014-03-14T02:03:59.902Z","type":"message"}
{"nick":"Jarvix","message":"fine","date":"2014-03-14T02:04:06.902Z","type":"message"}
{"nick":"jdummy","message":"I've got a few hundred bitcoin I found on mtgox","date":"2014-03-14T02:04:36.791Z","type":"message"}
{"nick":"xaq","reason":"Ping timeout: 240 seconds","date":"2014-03-14T02:06:25.340Z","type":"quit"}
{"nick":"Jarvix","message":"https://gist.github.com/joskuijpers/9540937","date":"2014-03-14T02:07:59.406Z","type":"message"}
{"nick":"jdummy","message":"Hmmm... only returns the first character of each LPSTR... that's what min was doing","date":"2014-03-14T02:11:06.885Z","type":"message"}
{"nick":"jdummy","message":"BUT... object is much better... docs don't show ->Set() for objects","date":"2014-03-14T02:11:26.640Z","type":"message"}
{"nick":"jdummy","message":"Thanks Jarvix!","date":"2014-03-14T02:11:40.923Z","type":"message"}
{"nick":"Jarvix","message":"sure they do","date":"2014-03-14T02:11:53.679Z","type":"message"}
{"nick":"Jarvix","message":"if i wasn't so lazy i would upload some docs myself","date":"2014-03-14T02:12:08.344Z","type":"message"}
{"nick":"jdummy","message":"well... bespin, remember? :)","date":"2014-03-14T02:12:17.855Z","type":"message"}
{"nick":"jdummy","message":"I'll figure out how to generate them","date":"2014-03-14T02:12:26.728Z","type":"message"}
{"nick":"Jarvix","message":"ey, before you include any windows files","date":"2014-03-14T02:12:44.963Z","type":"message"}
{"nick":"jdummy","message":"Windows sucks?","date":"2014-03-14T02:12:55.371Z","type":"message"}
{"nick":"jdummy","message":"and is on it's way out?","date":"2014-03-14T02:12:59.828Z","type":"message"}
{"nick":"jdummy","message":":)","date":"2014-03-14T02:13:01.344Z","type":"message"}
{"nick":"Jarvix","message":"put #ifdef _UNICODE ","date":"2014-03-14T02:13:05.396Z","type":"message"}
{"nick":"Jarvix","message":"#undef _UNICODE","date":"2014-03-14T02:13:10.227Z","type":"message"}
{"nick":"Jarvix","message":"#endif","date":"2014-03-14T02:13:11.370Z","type":"message"}
{"nick":"Jarvix","message":"and move that around a bit","date":"2014-03-14T02:13:36.559Z","type":"message"}
{"nick":"Jarvix","message":"well, casting should just work anyways","date":"2014-03-14T02:14:20.468Z","type":"message"}
{"nick":"Jarvix","message":"maybe static_cast<char*>(str) in the LpStrToV8 method","date":"2014-03-14T02:14:37.554Z","type":"message"}
{"nick":"Jarvix","message":"It is just so very stupid of microsoft to even THINK of doing such a stupid thing as LPSTR and LPCSTR and LPCTSTR","date":"2014-03-14T02:15:50.204Z","type":"message"}
{"nick":"Jarvix","message":"or HANDLE for that matter","date":"2014-03-14T02:15:58.862Z","type":"message"}
{"nick":"jdummy","message":"v8str = static_cast<char*>(str); ?","date":"2014-03-14T02:16:08.368Z","type":"message"}
{"nick":"Jarvix","message":"yeh","date":"2014-03-14T02:16:13.716Z","type":"message"}
{"nick":"jdummy","message":"explosion","date":"2014-03-14T02:16:16.666Z","type":"message"}
{"nick":"Jarvix","message":"lol, and reinterpret cast?","date":"2014-03-14T02:16:24.426Z","type":"message"}
{"nick":"jdummy","message":"nope, full circle :)      cannot convert from 'char *' to 'v8::String *'","date":"2014-03-14T02:17:13.086Z","type":"message"}
{"nick":"Jarvix","message":"oh wait","date":"2014-03-14T02:18:02.266Z","type":"message"}
{"nick":"Jarvix","message":"nonono","date":"2014-03-14T02:18:05.142Z","type":"message"}
{"nick":"Jarvix","message":"v8str = v8::String::New(static_cast<char *>(str)) ofcourse","date":"2014-03-14T02:18:25.355Z","type":"message"}
{"nick":"jdummy","message":"oops, that was my doing","date":"2014-03-14T02:19:26.096Z","type":"message"}
{"nick":"jdummy","message":"still just getting the first character of each string","date":"2014-03-14T02:20:40.165Z","type":"message"}
{"nick":"Jarvix","message":"can you send the code again?","date":"2014-03-14T02:20:51.467Z","type":"message"}
{"nick":"jdummy","message":"http://ideone.com/d6pmWw","date":"2014-03-14T02:21:21.172Z","type":"message"}
{"nick":"Jarvix","message":"maybe you can just print some stuff to the debug console so you are sure your pPrinterName is a full string","date":"2014-03-14T02:24:50.380Z","type":"message"}
{"nick":"Jarvix","message":"https://gist.github.com/joskuijpers/9540937 Removed the v8:: namespace prefixes","date":"2014-03-14T02:25:13.692Z","type":"message"}
{"nick":"Jarvix","message":"you need the using namespace as you see there","date":"2014-03-14T02:25:49.767Z","type":"message"}
{"nick":"jdummy","message":"I learned that one, but somewhere read that it may cause conflicts","date":"2014-03-14T02:28:17.359Z","type":"message"}
{"nick":"jdummy","message":"so I added them all back :)","date":"2014-03-14T02:28:26.957Z","type":"message"}
{"nick":"jdummy","message":"hmmm... I have steered you wrong somewhere.  lpInfo[i].pPrinterName already IS a char *","date":"2014-03-14T02:29:18.012Z","type":"message"}
{"nick":"jdummy","message":"printer->Set(v8::String::New(\"printer\"),\tv8::String::New(lpInfo[i].pPrinterName)); works","date":"2014-03-14T02:29:28.847Z","type":"message"}
{"nick":"jdummy","message":"also only the first character though","date":"2014-03-14T02:29:34.552Z","type":"message"}
{"nick":"jdummy","message":"I've run the same code in VC++ and get full strings using wprintf()","date":"2014-03-14T02:30:41.900Z","type":"message"}
{"nick":"jdummy","message":"I'm certainly close though, I really appreciate your time and expertise... thanks","date":"2014-03-14T02:31:11.379Z","type":"message"}
{"nick":"jdummy","message":"I'll try again tomorrow :)","date":"2014-03-14T02:31:24.738Z","type":"message"}
{"nick":"Jarvix","message":"but that is wprintf()","date":"2014-03-14T02:37:51.318Z","type":"message"}
{"nick":"Jarvix","message":"try printf() ","date":"2014-03-14T02:37:53.802Z","type":"message"}
{"nick":"jdummy","message":"but that would be to stdout... how would I return the object to JavaScript/Node?","date":"2014-03-14T02:39:01.169Z","type":"message"}
{"nick":"Jarvix","message":"but does that work :P","date":"2014-03-14T02:39:15.356Z","type":"message"}
{"nick":"Jarvix","message":"does it print a string or 1 letter","date":"2014-03-14T02:39:21.335Z","type":"message"}
{"nick":"jdummy","message":"aha!  it prints 1 letter","date":"2014-03-14T02:40:18.418Z","type":"message"}
{"nick":"jdummy","message":"well... no aha","date":"2014-03-14T02:40:24.920Z","type":"message"}
{"nick":"jdummy","message":"HMMM.... I must've broke something somewhere.  I'll backtrack and find where I went wrong","date":"2014-03-14T02:41:13.244Z","type":"message"}
{"nick":"Jarvix","message":"because wprintf() prints wide characters","date":"2014-03-14T02:41:36.346Z","type":"message"}
{"nick":"Jarvix","message":"and printf() does not","date":"2014-03-14T02:41:43.704Z","type":"message"}
{"nick":"Jarvix","message":"and it is because windows is horrible, that wide characters even exist","date":"2014-03-14T02:41:57.091Z","type":"message"}
{"nick":"jdummy","message":"yep, sure enough... wprint(L\"Printer: %s\\n\", lpInfo[i].pPrinterName); does the trick","date":"2014-03-14T02:44:29.732Z","type":"message"}
{"nick":"Jarvix","message":"you need to find a way to convert the wide characters to not-wide characters and put that in LpStrToV8","date":"2014-03-14T02:45:58.708Z","type":"message"}
{"nick":"jdummy","message":"Aha!!!!!","date":"2014-03-14T02:47:40.757Z","type":"message"}
{"nick":"jdummy","message":"I was using EnumPrintersW(), based on a previous recommendation","date":"2014-03-14T02:47:57.185Z","type":"message"}
{"nick":"jdummy","message":"EnumPrinters() FTW!!!!","date":"2014-03-14T02:48:02.496Z","type":"message"}
{"nick":"jdummy","message":"Jarvix, you're my hero dude!!!","date":"2014-03-14T02:50:25.845Z","type":"message"}
{"nick":"Jarvix","message":"lol","date":"2014-03-14T02:52:10.305Z","type":"message"}
{"nick":"Jarvix","message":"Well, have fun :)","date":"2014-03-14T02:52:20.117Z","type":"message"}
{"nick":"Jarvix","message":"I am going to bed. 4AM here ^^","date":"2014-03-14T02:52:29.379Z","type":"message"}
{"nick":"jdummy","message":"Thanks again!  Ouch!  night-owl","date":"2014-03-14T02:53:17.447Z","type":"message"}
{"nick":"jdummy","message":"See ya","date":"2014-03-14T02:53:21.092Z","type":"message"}
{"nick":"jdummy","reason":"Quit: Page closed","date":"2014-03-14T03:02:41.257Z","type":"quit"}
{"nick":"Vbitz","date":"2014-03-14T03:18:59.187Z","type":"join"}
{"nick":"xaq_","reason":"Remote host closed the connection","date":"2014-03-14T03:25:02.913Z","type":"quit"}
{"nick":"ebryn","reason":"Quit: Connection closed for inactivity","date":"2014-03-14T03:30:07.620Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-03-14T03:33:24.171Z","type":"join"}
{"nick":"iceisfun","message":"I am getting \"Fatal error in heap object creation\" process out of memory when creating a bunch of test threads. Process is using 182MB mem","date":"2014-03-14T03:36:06.781Z","type":"message"}
{"nick":"paulfryzel","reason":"Ping timeout: 264 seconds","date":"2014-03-14T03:38:19.260Z","type":"quit"}
{"nick":"Jarvix","message":"I think you ran out of memory","date":"2014-03-14T03:38:54.544Z","type":"message"}
{"nick":"Jarvix","reason":"Quit: Jarvix","date":"2014-03-14T03:39:23.740Z","type":"quit"}
{"nick":"iceisfun","message":"am i just dealing with the builtin heap size then?","date":"2014-03-14T03:48:14.413Z","type":"message"}
{"nick":"paulfryzel","date":"2014-03-14T04:34:13.926Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 255 seconds","date":"2014-03-14T04:38:59.932Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-03-14T05:35:04.077Z","type":"join"}
{"nick":"ebryn","date":"2014-03-14T05:39:18.223Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 255 seconds","date":"2014-03-14T05:39:45.042Z","type":"quit"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2014-03-14T05:57:22.639Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-03-14T06:35:48.982Z","type":"join"}
{"nick":"Halcy0n","reason":"Ping timeout: 264 seconds","date":"2014-03-14T06:36:08.732Z","type":"quit"}
{"nick":"Halcy0n","date":"2014-03-14T06:37:41.153Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 255 seconds","date":"2014-03-14T06:40:29.973Z","type":"quit"}
{"nick":"jonaslund","date":"2014-03-14T07:24:58.340Z","type":"join"}
{"nick":"jonaslund_","reason":"Ping timeout: 265 seconds","date":"2014-03-14T07:27:03.471Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-03-14T07:36:28.968Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 255 seconds","date":"2014-03-14T07:41:14.927Z","type":"quit"}
{"nick":"mostynb","date":"2014-03-14T08:02:55.276Z","type":"join"}
{"nick":"rendar","date":"2014-03-14T08:04:59.806Z","type":"join"}
{"nick":"paulfryzel","date":"2014-03-14T08:37:19.860Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 255 seconds","date":"2014-03-14T08:41:59.895Z","type":"quit"}
{"nick":"Lethalman","date":"2014-03-14T08:45:59.117Z","type":"join"}
{"nick":"juanjosanchez","date":"2014-03-14T09:05:36.114Z","type":"join"}
{"nick":"paulfryzel","date":"2014-03-14T09:38:08.202Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-03-14T09:42:18.234Z","type":"quit"}
{"nick":"muelli","date":"2014-03-14T10:02:53.152Z","type":"join"}
{"nick":"Net147","date":"2014-03-14T10:18:12.186Z","type":"join"}
{"nick":"marja___","reason":"Read error: No route to host","date":"2014-03-14T12:47:02.267Z","type":"quit"}
{"nick":"iamdustan","date":"2014-03-14T12:49:50.397Z","type":"join"}
{"nick":"marja___","date":"2014-03-14T13:08:23.251Z","type":"join"}
{"nick":"Net147","reason":"Quit:  HydraIRC -> http://www.hydrairc.com <- The alternative IRC client","date":"2014-03-14T13:13:33.194Z","type":"quit"}
{"nick":"jmar777","date":"2014-03-14T13:56:23.216Z","type":"join"}
{"nick":"guybrush","reason":"Excess Flood","date":"2014-03-14T14:19:59.493Z","type":"quit"}
{"nick":"guybrush","date":"2014-03-14T14:20:23.170Z","type":"join"}
{"nick":"muelli","reason":"Ping timeout: 240 seconds","date":"2014-03-14T14:35:08.134Z","type":"quit"}
{"nick":"Jarvix","date":"2014-03-14T14:54:15.510Z","type":"join"}
{"nick":"paulfryzel","date":"2014-03-14T15:42:39.227Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-03-14T15:46:58.209Z","type":"quit"}
{"nick":"spolu__","date":"2014-03-14T15:57:43.946Z","type":"join"}
{"nick":"muelli","date":"2014-03-14T16:02:07.115Z","type":"join"}
{"nick":"juanjosanchez","reason":"Quit: Ex-Chat","date":"2014-03-14T16:10:40.946Z","type":"quit"}
{"nick":"mostynb","reason":"Quit: Leaving","date":"2014-03-14T16:14:22.848Z","type":"quit"}
{"nick":"iamdustan","reason":"Ping timeout: 252 seconds","date":"2014-03-14T16:18:50.541Z","type":"quit"}
{"nick":"iamdustan","date":"2014-03-14T16:35:47.088Z","type":"join"}
{"nick":"paulfryzel","date":"2014-03-14T16:43:39.184Z","type":"join"}
{"nick":"iamdustan","reason":"Ping timeout: 240 seconds","date":"2014-03-14T16:46:25.147Z","type":"quit"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-03-14T16:47:38.194Z","type":"quit"}
{"nick":"jmar777","reason":"Read error: Connection reset by peer","date":"2014-03-14T16:51:54.721Z","type":"quit"}
{"nick":"jmar777","date":"2014-03-14T16:52:20.304Z","type":"join"}
{"nick":"iamdustan","date":"2014-03-14T16:52:40.163Z","type":"join"}
{"nick":"spolu__","reason":"Remote host closed the connection","date":"2014-03-14T17:32:20.892Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-03-14T17:44:24.197Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-03-14T17:48:38.225Z","type":"quit"}
{"nick":"Lethalman","reason":"Remote host closed the connection","date":"2014-03-14T18:01:55.062Z","type":"quit"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2014-03-14T18:02:59.591Z","type":"quit"}
{"nick":"jmar777","date":"2014-03-14T18:03:35.213Z","type":"join"}
{"nick":"Jarvix_","reason":"Ping timeout: 264 seconds","date":"2014-03-14T18:08:32.531Z","type":"quit"}
{"nick":"muelli","reason":"Ping timeout: 240 seconds","date":"2014-03-14T18:36:08.127Z","type":"quit"}
{"nick":"muelli_","reason":"Quit: Leaving","date":"2014-03-14T18:37:01.323Z","type":"quit"}
{"nick":"paulfryzel","date":"2014-03-14T18:45:05.184Z","type":"join"}
{"nick":"paulfryzel","reason":"Ping timeout: 240 seconds","date":"2014-03-14T18:49:18.206Z","type":"quit"}
{"nick":"muelli","date":"2014-03-14T19:16:48.103Z","type":"join"}
{"nick":"expr","date":"2014-03-14T19:50:11.703Z","type":"join"}
{"nick":"expr","message":"messing around with the v8 shell. how would I go about reading a line and storing it in a variable? something like Python's raw_input","date":"2014-03-14T19:50:46.408Z","type":"message"}
{"nick":"expr","message":"reading a line from standard input, of course","date":"2014-03-14T19:52:16.872Z","type":"message"}
{"nick":"petka_","date":"2014-03-14T20:19:52.058Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2014-03-14T20:32:25.742Z","type":"quit"}
{"nick":"iamdustan","reason":"Ping timeout: 252 seconds","date":"2014-03-14T20:33:34.174Z","type":"quit"}
{"nick":"Lethalman","date":"2014-03-14T21:10:31.026Z","type":"join"}
{"nick":"seventh","date":"2014-03-14T21:21:05.255Z","type":"join"}
{"nick":"muelli","reason":"Ping timeout: 240 seconds","date":"2014-03-14T21:30:01.146Z","type":"quit"}
{"nick":"Vbitz","reason":"Ping timeout: 240 seconds","date":"2014-03-14T21:55:21.868Z","type":"quit"}
{"nick":"Vbitz","date":"2014-03-14T21:57:54.546Z","type":"join"}
{"nick":"marja___","reason":"Ping timeout: 240 seconds","date":"2014-03-14T22:06:25.244Z","type":"quit"}
{"nick":"marja___","date":"2014-03-14T22:06:49.083Z","type":"join"}
{"nick":"Net147","date":"2014-03-14T22:10:11.217Z","type":"join"}
{"nick":"ebryn","reason":"Ping timeout: 240 seconds","date":"2014-03-14T22:18:26.771Z","type":"quit"}
{"nick":"petka_","reason":"Ping timeout: 240 seconds","date":"2014-03-14T22:19:30.810Z","type":"quit"}
{"nick":"petka_","date":"2014-03-14T22:19:55.116Z","type":"join"}
{"nick":"ebryn","date":"2014-03-14T22:20:25.680Z","type":"join"}
{"nick":"marja___","reason":"Ping timeout: 240 seconds","date":"2014-03-14T22:22:25.088Z","type":"quit"}
{"nick":"marja___","date":"2014-03-14T22:26:36.244Z","type":"join"}
{"nick":"umax","date":"2014-03-14T22:34:53.796Z","type":"join"}
{"nick":"rendar","date":"2014-03-14T22:59:18.255Z","type":"quit"}
{"nick":"muelli","date":"2014-03-14T23:23:46.992Z","type":"join"}
{"nick":"jonaslund_","date":"2014-03-14T23:35:00.008Z","type":"join"}
{"nick":"guybrush_","date":"2014-03-14T23:36:55.635Z","type":"join"}
{"nick":"petka__","date":"2014-03-14T23:37:47.051Z","type":"join"}
{"nick":"Halcyon","date":"2014-03-14T23:44:33.675Z","type":"join"}
{"nick":"marja___","reason":"*.net *.split","date":"2014-03-14T23:44:34.419Z","type":"quit"}
{"nick":"petka_","reason":"*.net *.split","date":"2014-03-14T23:44:34.420Z","type":"quit"}
{"nick":"guybrush","reason":"*.net *.split","date":"2014-03-14T23:44:36.090Z","type":"quit"}
{"nick":"jonaslund","reason":"*.net *.split","date":"2014-03-14T23:44:36.875Z","type":"quit"}
{"nick":"Halcy0n","reason":"*.net *.split","date":"2014-03-14T23:44:36.876Z","type":"quit"}
{"nick":"petka__","new_nick":"petka_","date":"2014-03-14T23:44:40.950Z","type":"nick"}
{"nick":"jmar777","date":"2014-03-14T23:54:37.352Z","type":"join"}
{"nick":"seventh","reason":"*.net *.split","date":"2014-03-14T23:55:55.601Z","type":"quit"}
