{"nick":"bnoordhuis","reason":"Ping timeout: 255 seconds","date":"2015-01-06T00:03:16.432Z","type":"quit"}
{"nick":"plutoniix","date":"2015-01-06T00:38:05.552Z","type":"join"}
{"nick":"bnoordhuis","date":"2015-01-06T01:09:22.029Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 265 seconds","date":"2015-01-06T01:14:14.029Z","type":"quit"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2009081014]","date":"2015-01-06T01:34:32.504Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2015-01-06T01:38:22.478Z","type":"join"}
{"nick":"caitp","reason":"Quit: Leaving","date":"2015-01-06T02:11:33.607Z","type":"quit"}
{"nick":"caitp","date":"2015-01-06T02:11:53.305Z","type":"join"}
{"nick":"octetclo1","reason":"Quit: WeeChat 1.0.1","date":"2015-01-06T04:47:05.292Z","type":"quit"}
{"nick":"caitp","reason":"Ping timeout: 244 seconds","date":"2015-01-06T04:52:48.227Z","type":"quit"}
{"nick":"xiinotulp","date":"2015-01-06T04:53:03.704Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 255 seconds","date":"2015-01-06T04:56:13.560Z","type":"quit"}
{"nick":"xiinotulp","new_nick":"plutoniix","date":"2015-01-06T05:00:35.595Z","type":"nick"}
{"nick":"caitp","date":"2015-01-06T05:20:16.962Z","type":"join"}
{"nick":"caitp","reason":"Ping timeout: 244 seconds","date":"2015-01-06T05:26:23.219Z","type":"quit"}
{"nick":"petka_","reason":"Quit: Connection closed for inactivity","date":"2015-01-06T05:44:48.105Z","type":"quit"}
{"nick":"octetcloud","date":"2015-01-06T06:01:20.591Z","type":"join"}
{"nick":"jonaslund","reason":"Ping timeout: 265 seconds","date":"2015-01-06T06:04:43.034Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 255 seconds","date":"2015-01-06T06:36:34.578Z","type":"quit"}
{"nick":"caitp","date":"2015-01-06T07:11:23.302Z","type":"join"}
{"nick":"caitp","reason":"Ping timeout: 244 seconds","date":"2015-01-06T07:15:55.259Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"check clusterfuzz,steps\" on http://build.chromium.org/p/client.v8/builders/Auto-roll%20-%20release%20process/builds/4489 \"Auto-roll - release process\" from None: )","date":"2015-01-06T07:18:37.315Z","type":"message"}
{"nick":"plutoniix","reason":"Read error: Connection reset by peer","date":"2015-01-06T07:30:07.628Z","type":"quit"}
{"nick":"plutoniix","date":"2015-01-06T07:31:51.715Z","type":"join"}
{"nick":"trungl-bot","message":"\u00033\u0002Tree opened\u000f by buildbot@chromium.org: Tree is open (Automatic: Удачи!)","date":"2015-01-06T07:33:43.465Z","type":"message"}
{"nick":"xiinotulp","date":"2015-01-06T07:47:50.996Z","type":"join"}
{"nick":"plutoniix","reason":"Ping timeout: 264 seconds","date":"2015-01-06T07:51:49.678Z","type":"quit"}
{"nick":"plutonux","date":"2015-01-06T07:58:25.914Z","type":"join"}
{"nick":"xiinotulp","reason":"Ping timeout: 240 seconds","date":"2015-01-06T08:01:53.012Z","type":"quit"}
{"nick":"plutonux","new_nick":"plutoniix","date":"2015-01-06T08:25:55.037Z","type":"nick"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2015-01-06T08:36:37.795Z","type":"quit"}
{"nick":"Net147","date":"2015-01-06T08:45:40.691Z","type":"join"}
{"nick":"Net147","reason":"Quit:  HydraIRC -> http://www.hydrairc.com <- Nine out of ten l33t h4x0rz prefer it","date":"2015-01-06T08:56:20.744Z","type":"quit"}
{"nick":"caitp","date":"2015-01-06T09:00:11.461Z","type":"join"}
{"nick":"caitp","reason":"Ping timeout: 244 seconds","date":"2015-01-06T09:06:29.303Z","type":"quit"}
{"nick":"muelli","date":"2015-01-06T09:14:43.306Z","type":"join"}
{"nick":"muelli","reason":"Ping timeout: 256 seconds","date":"2015-01-06T09:21:47.309Z","type":"quit"}
{"nick":"plutoniix","date":"2015-01-06T10:08:47.947Z","type":"join"}
{"nick":"davi_","date":"2015-01-06T10:37:50.459Z","type":"join"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2015-01-06T10:46:12.716Z","type":"quit"}
{"nick":"jonaslund","date":"2015-01-06T10:51:08.496Z","type":"join"}
{"nick":"caitp","date":"2015-01-06T10:51:38.370Z","type":"join"}
{"nick":"bnoordhuis","date":"2015-01-06T11:09:41.831Z","type":"join"}
{"nick":"caitp","reason":"Ping timeout: 244 seconds","date":"2015-01-06T11:09:58.260Z","type":"quit"}
{"nick":"jas-","date":"2015-01-06T11:35:08.288Z","type":"join"}
{"nick":"KillerJim","date":"2015-01-06T11:52:22.657Z","type":"join"}
{"nick":"KillerJim","message":"I'm seeing \"Cannot create a handle without a HandleScope\" error thrown in my app when calling \"EscapableHandleScope handle_scope(isolate);\"","date":"2015-01-06T11:53:38.515Z","type":"message"}
{"nick":"KillerJim","message":"It seems kind of strange, given I'm creating a handleScope - it is something to do with the EscapableHandleScope being created early?","date":"2015-01-06T11:54:13.782Z","type":"message"}
{"nick":"KillerJim","message":"wtf.. creating a normal HandleScope nails it :|","date":"2015-01-06T11:58:05.325Z","type":"message"}
{"nick":"caitp","date":"2015-01-06T12:19:44.343Z","type":"join"}
{"nick":"caitp","reason":"Ping timeout: 244 seconds","date":"2015-01-06T12:29:01.213Z","type":"quit"}
{"nick":"petka_","date":"2015-01-06T12:56:26.384Z","type":"join"}
{"nick":"caitp","date":"2015-01-06T13:25:57.320Z","type":"join"}
{"nick":"plutoniix","date":"2015-01-06T14:07:50.382Z","type":"join"}
{"nick":"muelli","date":"2015-01-06T14:25:22.610Z","type":"join"}
{"nick":"davi_","reason":"Ping timeout: 250 seconds","date":"2015-01-06T14:59:21.097Z","type":"quit"}
{"nick":"motownavi","date":"2015-01-06T16:15:56.233Z","type":"join"}
{"nick":"ludamad","date":"2015-01-06T16:16:29.896Z","type":"join"}
{"nick":"motownavi","reason":"\"adios\"","date":"2015-01-06T16:16:33.680Z","type":"part"}
{"nick":"ludamad","message":"Any V8 people here that can tell me where JIT compilation of native functions/intrinsics is handled?","date":"2015-01-06T16:16:39.774Z","type":"message"}
{"nick":"caitp","message":"i believe those are compiled in mksnapshot, but I may be wrong","date":"2015-01-06T16:19:01.623Z","type":"message"}
{"nick":"caitp","message":"i'm not sure how much is kept from that process, since we'd need scope info and an AST for crankshaft","date":"2015-01-06T16:19:42.263Z","type":"message"}
{"nick":"bnoordhuis","message":"ludamad: native is builtin? those are baked into the snapshot with mksnapshot, like caitp said","date":"2015-01-06T16:20:54.787Z","type":"message"}
{"nick":"RT|Chatzilla","reason":"Quit: ChatZilla 0.9.86.1 [Firefox 2.0.0.22pre/2009081014]","date":"2015-01-06T16:21:07.985Z","type":"quit"}
{"nick":"bnoordhuis","message":"ludamad: if you mean %foo intrinsics, that's complicated. it depends on the intrinsic","date":"2015-01-06T16:21:31.868Z","type":"message"}
{"nick":"caitp","message":"some of the runtime functions are called as a fallback from some stub code, so the stubs do some of that","date":"2015-01-06T16:22:33.161Z","type":"message"}
{"nick":"octetcloud","date":"2015-01-06T17:02:55.658Z","type":"join"}
{"nick":"muelli","reason":"Ping timeout: 264 seconds","date":"2015-01-06T17:13:51.901Z","type":"quit"}
{"nick":"muelli","date":"2015-01-06T17:14:18.055Z","type":"join"}
{"nick":"KillerJim","reason":"Quit: Leaving","date":"2015-01-06T17:17:41.675Z","type":"quit"}
{"nick":"ludamad","message":"ok thanks","date":"2015-01-06T17:20:53.168Z","type":"message"}
{"nick":"ludamad","message":"bnoordhuis: I do mean the % intrinsics","date":"2015-01-06T17:23:11.327Z","type":"message"}
{"nick":"ludamad","message":"I want to add a new one","date":"2015-01-06T17:23:13.899Z","type":"message"}
{"nick":"caitp","message":"the %... functions are runtime functions, which may be implemented in C++ or JS","date":"2015-01-06T17:24:48.335Z","type":"message"}
{"nick":"caitp","message":"or ASM even","date":"2015-01-06T17:24:58.951Z","type":"message"}
{"nick":"caitp","message":"there's um","date":"2015-01-06T17:25:04.285Z","type":"message"}
{"nick":"caitp","message":"hang on","date":"2015-01-06T17:25:04.797Z","type":"message"}
{"nick":"caitp","message":"nah i'm wrong about the JS builtins, I don't think you can call those via %<builtin name>","date":"2015-01-06T17:28:20.491Z","type":"message"}
{"nick":"caitp","message":"those are just there for codegen to use I guess","date":"2015-01-06T17:28:28.533Z","type":"message"}
{"nick":"ludamad","message":"caitp: so the % functions are never directly compiled?","date":"2015-01-06T17:29:50.668Z","type":"message"}
{"nick":"ludamad","message":"er","date":"2015-01-06T17:29:52.761Z","type":"message"}
{"nick":"caitp","message":"well the runtime functions aren't","date":"2015-01-06T17:30:01.145Z","type":"message"}
{"nick":"caitp","message":"i mean not by the JIT compiler","date":"2015-01-06T17:30:06.300Z","type":"message"}
{"nick":"ludamad","message":"yea","date":"2015-01-06T17:30:14.037Z","type":"message"}
{"nick":"ludamad","message":"ok","date":"2015-01-06T17:30:14.527Z","type":"message"}
{"nick":"ludamad","message":"so if I wanted to add a new jitted native that wouldn't be the route","date":"2015-01-06T17:30:28.891Z","type":"message"}
{"nick":"ludamad","message":"I suppose?","date":"2015-01-06T17:30:30.280Z","type":"message"}
{"nick":"caitp","message":"if you want like","date":"2015-01-06T17:30:49.467Z","type":"message"}
{"nick":"caitp","message":"to write a self-hosted function","date":"2015-01-06T17:30:55.607Z","type":"message"}
{"nick":"caitp","message":"all you really need to do is write the self-hosted function, and expose it somehow","date":"2015-01-06T17:31:05.819Z","type":"message"}
{"nick":"ludamad","message":"self-hosted?","date":"2015-01-06T17:31:13.147Z","type":"message"}
{"nick":"ludamad","message":"Ok","date":"2015-01-06T17:31:15.105Z","type":"message"}
{"nick":"ludamad","message":"specifically I want to add an unsafe function %UnsafeGetByIndex(obj, 0) for example","date":"2015-01-06T17:31:29.317Z","type":"message"}
{"nick":"ludamad","message":"which can possibly segfault, for example","date":"2015-01-06T17:31:38.300Z","type":"message"}
{"nick":"ludamad","message":"but I want to JIT it with the assumption its valid","date":"2015-01-06T17:31:49.066Z","type":"message"}
{"nick":"caitp","message":">_-","date":"2015-01-06T17:32:29.781Z","type":"message"}
{"nick":"ludamad","message":"hehe","date":"2015-01-06T17:32:50.109Z","type":"message"}
{"nick":"ludamad","message":"if its a terrible idea let me know why for sure","date":"2015-01-06T17:33:02.339Z","type":"message"}
{"nick":"caitp","message":"say you have a function which calls a runtime function called UnsafeGetByIndex(obj, 0) --- the code gen is always going to push arguments, set up a stack frame and call that function, unless it gets removed via dead code removal","date":"2015-01-06T17:34:21.160Z","type":"message"}
{"nick":"ludamad","message":"its for research purposes, BTW","date":"2015-01-06T17:34:21.380Z","type":"message"}
{"nick":"ludamad","message":"Ok","date":"2015-01-06T17:34:29.750Z","type":"message"}
{"nick":"ludamad","message":"I want to do something jittable","date":"2015-01-06T17:34:44.063Z","type":"message"}
{"nick":"ludamad","message":"hm","date":"2015-01-06T17:34:46.479Z","type":"message"}
{"nick":"caitp","message":"it's not really able to change the way that function executes, because that function is compiled with v8, not JIT-ed","date":"2015-01-06T17:34:54.276Z","type":"message"}
{"nick":"caitp","message":"with self-hosting, you could JIT compile it, and the inline cache will possibly optimize element accesses where possible","date":"2015-01-06T17:35:44.704Z","type":"message"}
{"nick":"caitp","message":"but they won't let you segfault, unless there's a bug in v8","date":"2015-01-06T17:35:58.619Z","type":"message"}
{"nick":"caitp","message":"**keep in mind I am still pretty new to crankshaft and don't have a thorough understanding of how the optimizing compiler works ;)","date":"2015-01-06T17:36:37.348Z","type":"message"}
{"nick":"caitp","message":"but my understanding is that type feedback and ICs should inform the engine that it can optimize certain accesses, and if it can't, it should deopt","date":"2015-01-06T17:37:25.025Z","type":"message"}
{"nick":"ludamad","message":"Yeah. I'm being asked to investigate if something like %UnsafeIntAdd(%UnsafeGet... , %UnsafeGet); is feasible to add to V8","date":"2015-01-06T17:38:48.669Z","type":"message"}
{"nick":"ludamad","message":"with JIT support","date":"2015-01-06T17:44:57.724Z","type":"message"}
{"nick":"ludamad","message":"that is","date":"2015-01-06T17:44:58.552Z","type":"message"}
{"nick":"caitp","message":"unfortunately, runtime functions can't really be optimized by the jit compiler","date":"2015-01-06T17:45:38.424Z","type":"message"}
{"nick":"caitp","message":"so there's no way","date":"2015-01-06T17:45:40.175Z","type":"message"}
{"nick":"bnoordhuis","message":"well... that depends on whether the intrinsic corresponds to a runtime function or not, doesn't it?","date":"2015-01-06T17:59:39.894Z","type":"message"}
{"nick":"bnoordhuis","message":"for example, %IS_VAR() and %_IsSmi() are not runtime functions, they're translated to machine code","date":"2015-01-06T18:00:19.689Z","type":"message"}
{"nick":"bnoordhuis","message":"(not 100% sure about %_IsSmi() so don't quote me on that)","date":"2015-01-06T18:01:22.984Z","type":"message"}
{"nick":"bnoordhuis","message":"when in doubt, consult the source and all that... %_IsSmi() gets inlined in src/compiler/js-intrinsic-builder.cc along with a number of other intrinsics","date":"2015-01-06T18:03:20.514Z","type":"message"}
{"nick":"bnoordhuis","message":"ludamad: ^","date":"2015-01-06T18:04:22.098Z","type":"message"}
{"nick":"caitp","message":"I don't think %_IsSmi is actually translated to code pre-crankshaft","date":"2015-01-06T18:10:52.055Z","type":"message"}
{"nick":"caitp","message":"or rather translated and inlined","date":"2015-01-06T18:11:04.791Z","type":"message"}
{"nick":"caitp","message":"it doesn't get inlined during full-codegen","date":"2015-01-06T18:11:50.766Z","type":"message"}
{"nick":"caitp","message":"based on reading the code at least, haven't looked at the disassembly yet","date":"2015-01-06T18:13:43.626Z","type":"message"}
{"nick":"bnoordhuis","message":"caitp: you could very well be right; there's a RuntimeReference_IsSmi() function in src/runtime/runtime-numbers.cc","date":"2015-01-06T18:16:45.869Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, Runtime_IS_VAR()... okay, disregard what i said","date":"2015-01-06T18:17:27.378Z","type":"message"}
{"nick":"caitp","message":"yeah, and it looks like there is very specific instructions in crankshaft for inlining those specific things","date":"2015-01-06T18:19:53.569Z","type":"message"}
{"nick":"muelli","reason":"Ping timeout: 240 seconds","date":"2015-01-06T18:20:23.011Z","type":"quit"}
{"nick":"ludamad","message":"ah","date":"2015-01-06T18:20:30.825Z","type":"message"}
{"nick":"caitp","message":"v8 is a complicated codebase but it's a lot of fun trying to figure that stuff out ;)","date":"2015-01-06T18:20:34.042Z","type":"message"}
{"nick":"ludamad","message":"I don't expect anything less than black magic from an optimizing jit","date":"2015-01-06T18:20:50.363Z","type":"message"}
{"nick":"jmar777","date":"2015-01-06T18:29:05.682Z","type":"join"}
{"nick":"ludamad","reason":"Ping timeout: 265 seconds","date":"2015-01-06T18:30:01.031Z","type":"quit"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2015-01-06T18:36:50.181Z","type":"quit"}
{"nick":"Gregor","date":"2015-01-06T18:44:13.573Z","type":"join"}
{"nick":"dpino","date":"2015-01-06T18:59:31.291Z","type":"join"}
{"nick":"jmar777_","date":"2015-01-06T19:04:47.641Z","type":"join"}
{"nick":"jmar777","reason":"Read error: Connection reset by peer","date":"2015-01-06T19:06:18.009Z","type":"quit"}
{"nick":"jmar777_","reason":"Remote host closed the connection","date":"2015-01-06T19:13:44.578Z","type":"quit"}
{"nick":"jmar777","date":"2015-01-06T19:14:18.827Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2015-01-06T19:17:12.150Z","type":"quit"}
{"nick":"jmar777","date":"2015-01-06T19:17:18.602Z","type":"join"}
{"nick":"Gregor","reason":"Ping timeout: 250 seconds","date":"2015-01-06T19:28:28.036Z","type":"quit"}
{"nick":"Gregor``","date":"2015-01-06T19:28:43.451Z","type":"join"}
{"nick":"Gregor``","new_nick":"Gregor","date":"2015-01-06T19:30:05.598Z","type":"nick"}
{"nick":"bnoordhuis","date":"2015-01-06T19:42:42.856Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 264 seconds","date":"2015-01-06T19:47:27.831Z","type":"quit"}
{"nick":"C-Man","date":"2015-01-06T19:53:30.312Z","type":"join"}
{"nick":"jmar777_","date":"2015-01-06T20:07:22.373Z","type":"join"}
{"nick":"jmar777","reason":"Ping timeout: 245 seconds","date":"2015-01-06T20:08:34.639Z","type":"quit"}
{"nick":"KillerJim","date":"2015-01-06T20:14:45.971Z","type":"join"}
{"nick":"phpnode","date":"2015-01-06T20:17:32.796Z","type":"join"}
{"nick":"aeroevan","reason":"Ping timeout: 255 seconds","date":"2015-01-06T20:19:10.529Z","type":"quit"}
{"nick":"C-Man","reason":"Quit: Connection reset by beer","date":"2015-01-06T20:59:07.408Z","type":"quit"}
{"nick":"jpdery","date":"2015-01-06T21:00:13.254Z","type":"join"}
{"nick":"bobmcw_","new_nick":"bobmcw","date":"2015-01-06T21:06:52.549Z","type":"nick"}
{"nick":"bobmcw","reason":"Changing host","date":"2015-01-06T21:06:52.987Z","type":"quit"}
{"nick":"bobmcw","date":"2015-01-06T21:06:53.171Z","type":"join"}
{"nick":"jmar777","date":"2015-01-06T21:09:17.688Z","type":"join"}
{"nick":"jmar777_","reason":"Read error: Connection reset by peer","date":"2015-01-06T21:09:23.970Z","type":"quit"}
{"nick":"KillerJim","reason":"Quit: Leaving","date":"2015-01-06T21:18:27.526Z","type":"quit"}
{"nick":"muelli","date":"2015-01-06T21:32:35.290Z","type":"join"}
{"nick":"bnoordhuis","date":"2015-01-06T21:32:47.338Z","type":"join"}
{"nick":"jmar777","reason":"Remote host closed the connection","date":"2015-01-06T21:33:11.857Z","type":"quit"}
{"nick":"trungl-bot","message":"\u00034\u0002Tree closed\u000f by buildbot@chromium.org: Tree is closed (Automatic: \"check clusterfuzz,steps\" on http://build.chromium.org/p/client.v8/builders/Auto-roll%20-%20release%20process/builds/4548 \"Auto-roll - release process\" from None: )","date":"2015-01-06T22:04:56.535Z","type":"message"}
{"nick":"plutoniix","reason":"Quit: จรลี จรลา","date":"2015-01-06T22:06:45.777Z","type":"quit"}
{"nick":"jpdery","reason":"Quit: Leaving...","date":"2015-01-06T22:08:21.825Z","type":"quit"}
{"nick":"dpino","reason":"Ping timeout: 256 seconds","date":"2015-01-06T22:31:09.392Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 244 seconds","date":"2015-01-06T22:35:04.378Z","type":"quit"}
{"nick":"jonaslund","reason":"*.net *.split","date":"2015-01-06T23:20:55.221Z","type":"quit"}
{"nick":"luite","reason":"*.net *.split","date":"2015-01-06T23:20:57.621Z","type":"quit"}
{"nick":"mawe","reason":"*.net *.split","date":"2015-01-06T23:20:57.621Z","type":"quit"}
{"nick":"chrisdickinson","reason":"*.net *.split","date":"2015-01-06T23:20:58.108Z","type":"quit"}
{"nick":"phI||Ip","reason":"*.net *.split","date":"2015-01-06T23:20:58.109Z","type":"quit"}
{"nick":"aperezdc","reason":"*.net *.split","date":"2015-01-06T23:20:58.623Z","type":"quit"}
{"nick":"Halcy0n","reason":"*.net *.split","date":"2015-01-06T23:20:58.623Z","type":"quit"}
{"nick":"RT|Chatzilla","date":"2015-01-06T23:21:03.149Z","type":"join"}
{"nick":"luite","date":"2015-01-06T23:21:03.579Z","type":"join"}
{"nick":"jonaslund","date":"2015-01-06T23:21:41.888Z","type":"join"}
{"nick":"chrisdickinson","date":"2015-01-06T23:22:53.478Z","type":"join"}
{"nick":"phI||Ip","date":"2015-01-06T23:22:53.479Z","type":"join"}
{"nick":"aperezdc","date":"2015-01-06T23:22:53.479Z","type":"join"}
{"nick":"Halcy0n","date":"2015-01-06T23:22:53.479Z","type":"join"}
{"nick":"muelli","reason":"Ping timeout: 264 seconds","date":"2015-01-06T23:23:02.429Z","type":"quit"}
{"nick":"wycats","reason":"Ping timeout: 245 seconds","date":"2015-01-06T23:24:28.598Z","type":"quit"}
{"nick":"wycats","date":"2015-01-06T23:26:05.077Z","type":"join"}
{"nick":"jonaslund_","date":"2015-01-06T23:31:28.179Z","type":"join"}
{"nick":"decoder_","date":"2015-01-06T23:33:16.603Z","type":"join"}
{"nick":"decoder","reason":"Quit: No Ping reply in 180 seconds.","date":"2015-01-06T23:33:54.953Z","type":"quit"}
{"nick":"jonaslund","reason":"Read error: Connection reset by peer","date":"2015-01-06T23:33:56.553Z","type":"quit"}
{"nick":"jonaslund_","new_nick":"jonaslund","date":"2015-01-06T23:34:04.440Z","type":"nick"}
{"nick":"bobmcw","reason":"Read error: Connection reset by peer","date":"2015-01-06T23:39:04.586Z","type":"quit"}
{"nick":"bobmcw","date":"2015-01-06T23:39:46.197Z","type":"join"}
{"nick":"mawe","date":"2015-01-06T23:55:21.993Z","type":"join"}
