{"nick":"alejandromg","date":"2012-03-12T01:01:53.306Z","type":"join"}
{"nick":"alejandromg","reason":"Quit: leaving","date":"2012-03-12T01:11:50.386Z","type":"quit"}
{"nick":"mmalecki","reason":"Quit: leaving","date":"2012-03-12T02:06:55.830Z","type":"quit"}
{"nick":"mmalecki","date":"2012-03-12T07:25:10.955Z","type":"join"}
{"nick":"mmalecki","reason":"Ping timeout: 244 seconds","date":"2012-03-12T07:29:46.424Z","type":"quit"}
{"nick":"mmalecki","date":"2012-03-12T07:31:44.924Z","type":"join"}
{"nick":"mmalecki","new_nick":"mmalecki[away]","date":"2012-03-12T07:32:09.265Z","type":"nick"}
{"nick":"mmalecki","date":"2012-03-12T11:11:21.181Z","type":"join"}
{"nick":"mmalecki","reason":"Client Quit","date":"2012-03-12T11:13:39.634Z","type":"quit"}
{"nick":"indutny","message":"heya","date":"2012-03-12T11:27:29.817Z","type":"message"}
{"nick":"indutny","message":"anyone around?","date":"2012-03-12T11:27:33.686Z","type":"message"}
{"nick":"wankdanker","reason":"Remote host closed the connection","date":"2012-03-12T11:44:37.881Z","type":"quit"}
{"nick":"mmalecki[away]","new_nick":"mmalecki","date":"2012-03-12T13:07:32.354Z","type":"nick"}
{"nick":"indutny","message":"mmalecki: ping :)","date":"2012-03-12T13:39:17.652Z","type":"message"}
{"nick":"mmalecki","message":"indutny: PONGETY PONG","date":"2012-03-12T13:39:35.367Z","type":"message"}
{"nick":"mmalecki","message":"indutny: what's up?","date":"2012-03-12T13:40:39.701Z","type":"message"}
{"nick":"indutny","message":"mmalecki: sorry, was on a call","date":"2012-03-12T13:44:26.735Z","type":"message"}
{"nick":"indutny","message":"mmalecki: I removed global vars, replaced globals with a 'global' variables","date":"2012-03-12T13:44:43.626Z","type":"message"}
{"nick":"indutny","message":"what do you think?","date":"2012-03-12T13:44:55.106Z","type":"message"}
{"nick":"indutny","message":"that should definitely solve global leaking problem","date":"2012-03-12T13:45:14.829Z","type":"message"}
{"nick":"mmalecki","message":"indutny: sounds fun! how do you take variables from outer scope?","date":"2012-03-12T13:45:31.589Z","type":"message"}
{"nick":"indutny","message":"mmalecki: it's like in coffee-script","date":"2012-03-12T13:45:55.609Z","type":"message"}
{"nick":"indutny","message":"lexical scoping","date":"2012-03-12T13:46:00.831Z","type":"message"}
{"nick":"mmalecki","message":"ah, nice","date":"2012-03-12T13:46:19.998Z","type":"message"}
{"nick":"indutny","message":"creationix: hey man, where are you?","date":"2012-03-12T13:50:44.611Z","type":"message"}
{"nick":"indutny","message":"haven't seen you for two days","date":"2012-03-12T13:50:49.590Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-03-12T14:24:55.583Z","type":"join"}
{"nick":"creationix","message":"I","date":"2012-03-12T14:26:34.559Z","type":"message"}
{"nick":"creationix","message":"indutny, I'm here","date":"2012-03-12T14:26:40.987Z","type":"message"}
{"nick":"creationix","message":"remember I'm half a world away time-zone wise and I don't work on Sundays","date":"2012-03-12T14:27:04.099Z","type":"message"}
{"nick":"mmalecki","message":"one does not simply not work on Sundays ;)","date":"2012-03-12T14:28:11.212Z","type":"message"}
{"nick":"mmalecki","message":"(I release modules on Sundays)","date":"2012-03-12T14:28:53.065Z","type":"message"}
{"nick":"indutny","message":"срш","date":"2012-03-12T14:55:17.704Z","type":"message"}
{"nick":"indutny","message":"Ж)","date":"2012-03-12T14:55:20.776Z","type":"message"}
{"nick":"indutny","message":"hi! :)","date":"2012-03-12T14:55:23.753Z","type":"message"}
{"nick":"indutny","message":"I'm not working at sabbath","date":"2012-03-12T14:55:42.303Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-03-12T14:55:44.943Z","type":"message"}
{"nick":"mmalecki","message":"some crazy letters you have there, Fedor","date":"2012-03-12T14:55:48.237Z","type":"message"}
{"nick":"indutny","message":"have you guys seen Big Lebowski?","date":"2012-03-12T14:55:50.033Z","type":"message"}
{"nick":"mmalecki","message":"yeah","date":"2012-03-12T14:55:55.374Z","type":"message"}
{"nick":"mmalecki","message":"hahaha","date":"2012-03-12T14:56:02.851Z","type":"message"}
{"nick":"indutny","message":"mmalecki: man, you Poland people are using latin letter","date":"2012-03-12T14:56:08.894Z","type":"message"}
{"nick":"indutny","message":"letters*","date":"2012-03-12T14:56:12.433Z","type":"message"}
{"nick":"indutny","message":"you're so happy nation","date":"2012-03-12T14:56:18.633Z","type":"message"}
{"nick":"mmalecki","message":":D","date":"2012-03-12T14:56:23.812Z","type":"message"}
{"nick":"indutny","message":"we use that kind of cyrillic stuff","date":"2012-03-12T14:56:30.155Z","type":"message"}
{"nick":"indutny","message":"meh","date":"2012-03-12T14:56:32.331Z","type":"message"}
{"nick":"indutny","message":"don't like it","date":"2012-03-12T14:56:33.945Z","type":"message"}
{"nick":"indutny","message":"creationix: so, what I'm interested in","date":"2012-03-12T14:56:53.963Z","type":"message"}
{"nick":"indutny","message":"why CWrapper doesn't work for you?","date":"2012-03-12T14:57:04.602Z","type":"message"}
{"nick":"indutny","message":"creationix: ^","date":"2012-03-12T15:01:45.194Z","type":"message"}
{"nick":"mmalecki","reason":"Quit: leaving","date":"2012-03-12T15:06:10.674Z","type":"quit"}
{"nick":"mmalecki","date":"2012-03-12T15:06:19.749Z","type":"join"}
{"nick":"creationix","message":"indutny, not sure","date":"2012-03-12T15:39:22.819Z","type":"message"}
{"nick":"creationix","message":"it just doesn't work","date":"2012-03-12T15:39:25.844Z","type":"message"}
{"nick":"creationix","message":"and I see it's not actually in any test case","date":"2012-03-12T15:39:30.976Z","type":"message"}
{"nick":"creationix","message":"tell you what though.  This daily syntax changes keep my on my toes","date":"2012-03-12T16:24:47.777Z","type":"message"}
{"nick":"creationix","message":"good thing I don't have more than 100 lines of candor code I depend on","date":"2012-03-12T16:25:06.722Z","type":"message"}
{"nick":"creationix","message":"(not complaining btw)","date":"2012-03-12T16:25:20.674Z","type":"message"}
{"nick":"indutny","message":"sorry :)","date":"2012-03-12T16:27:30.445Z","type":"message"}
{"nick":"indutny","message":"creationix: well, it's in test-api","date":"2012-03-12T16:27:52.441Z","type":"message"}
{"nick":"creationix","message":"alright figured out global","date":"2012-03-12T16:28:33.160Z","type":"message"}
{"nick":"indutny","message":"creationix: cool","date":"2012-03-12T16:28:46.586Z","type":"message"}
{"nick":"indutny","message":"I think it's much more intuitive this way","date":"2012-03-12T16:28:56.581Z","type":"message"}
{"nick":"indutny","message":"lexical scoping + global object","date":"2012-03-12T16:29:05.913Z","type":"message"}
{"nick":"creationix","message":"indutny, is this how you intend it to be used: https://github.com/creationix/candor.io/blob/master/test.can#L1-3","date":"2012-03-12T16:29:41.439Z","type":"message"}
{"nick":"indutny","message":"probably","date":"2012-03-12T16:30:05.677Z","type":"message"}
{"nick":"creationix","message":"so there is only one implicit global variable, \"global\"","date":"2012-03-12T16:30:09.862Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-12T16:30:13.627Z","type":"message"}
{"nick":"creationix","message":"that makes linting easier","date":"2012-03-12T16:30:14.505Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-12T16:30:17.617Z","type":"message"}
{"nick":"creationix","message":"so, CWrapper","date":"2012-03-12T16:30:39.921Z","type":"message"}
{"nick":"creationix","message":"is what I did an OK solution","date":"2012-03-12T16:32:01.604Z","type":"message"}
{"nick":"indutny","message":"creationix: https://github.com/indutny/candor/blob/master/test/test-api.cc#L93-106","date":"2012-03-12T16:32:07.196Z","type":"message"}
{"nick":"indutny","message":"creationix: what you did?","date":"2012-03-12T16:32:13.724Z","type":"message"}
{"nick":"creationix","message":"or is it better to only store the pointer in the cdata?","date":"2012-03-12T16:32:15.656Z","type":"message"}
{"nick":"indutny","message":"creationix: that depends","date":"2012-03-12T16:32:33.398Z","type":"message"}
{"nick":"creationix","message":"https://github.com/creationix/candor.io/blob/master/src/luv_handle.cc#L23-25","date":"2012-03-12T16:32:40.403Z","type":"message"}
{"nick":"indutny","message":"creationix: it's simpiler to call vtable's destructor if pointer was stored","date":"2012-03-12T16:32:59.157Z","type":"message"}
{"nick":"creationix","message":"https://github.com/creationix/candor.io/blob/master/src/luv_timer.cc#L72-76","date":"2012-03-12T16:33:00.289Z","type":"message"}
{"nick":"creationix","message":"yeah, I don't know how classes in C++ work","date":"2012-03-12T16:33:15.591Z","type":"message"}
{"nick":"indutny","message":"creationix: so you just do new CWrapper()","date":"2012-03-12T16:33:36.218Z","type":"message"}
{"nick":"indutny","message":"creationix: or new YourClass()","date":"2012-03-12T16:33:50.025Z","type":"message"}
{"nick":"indutny","message":"then do instance->Wrap()","date":"2012-03-12T16:33:58.773Z","type":"message"}
{"nick":"indutny","message":"and use it","date":"2012-03-12T16:34:00.364Z","type":"message"}
{"nick":"creationix","message":"when I tried it before, it was segfaulting like crazy","date":"2012-03-12T16:34:44.886Z","type":"message"}
{"nick":"indutny","message":"probably it was GCed","date":"2012-03-12T16:34:52.442Z","type":"message"}
{"nick":"indutny","message":"have you implemented destructor?","date":"2012-03-12T16:34:57.480Z","type":"message"}
{"nick":"creationix","message":"and when I printed the pointer values, they didn't match at all","date":"2012-03-12T16:34:58.400Z","type":"message"}
{"nick":"creationix","message":"no, it wasn't GC issues","date":"2012-03-12T16:35:02.790Z","type":"message"}
{"nick":"indutny","message":"that's odd","date":"2012-03-12T16:35:04.881Z","type":"message"}
{"nick":"creationix","message":"between wrap and unwrap something was way off","date":"2012-03-12T16:35:10.519Z","type":"message"}
{"nick":"indutny","message":"let me check","date":"2012-03-12T16:35:17.283Z","type":"message"}
{"nick":"indutny","message":"ooh","date":"2012-03-12T16:38:05.102Z","type":"message"}
{"nick":"indutny","message":"odd","date":"2012-03-12T16:38:05.767Z","type":"message"}
{"nick":"indutny","message":"you're right","date":"2012-03-12T16:38:11.921Z","type":"message"}
{"nick":"indutny","message":"it's crashing","date":"2012-03-12T16:38:59.347Z","type":"message"}
{"nick":"creationix","message":"I didn't understand enough C++ to debug it","date":"2012-03-12T16:41:10.569Z","type":"message"}
{"nick":"creationix","message":"I handle single pointers, but that's about it","date":"2012-03-12T16:41:18.383Z","type":"message"}
{"nick":"indutny","message":"aaah","date":"2012-03-12T16:42:37.870Z","type":"message"}
{"nick":"indutny","message":"I think I fixed it :)","date":"2012-03-12T16:42:47.448Z","type":"message"}
{"nick":"creationix","message":"cool","date":"2012-03-12T16:42:52.606Z","type":"message"}
{"nick":"creationix","message":"I'll switch back to it then","date":"2012-03-12T16:42:59.150Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-12T16:43:03.562Z","type":"message"}
{"nick":"indutny","message":"Unwrap was incorrect","date":"2012-03-12T16:43:12.340Z","type":"message"}
{"nick":"indutny","message":"please pull latest changes","date":"2012-03-12T16:43:20.100Z","type":"message"}
{"nick":"indutny","message":"I was doing (T*)(data)","date":"2012-03-12T16:43:26.323Z","type":"message"}
{"nick":"indutny","message":"instead of *(T**)(data)","date":"2012-03-12T16:43:30.400Z","type":"message"}
{"nick":"indutny","message":"so that was not a pointer to the instance","date":"2012-03-12T16:43:44.371Z","type":"message"}
{"nick":"indutny","message":"but pointer to the pointer","date":"2012-03-12T16:43:47.992Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-12T16:43:49.982Z","type":"message"}
{"nick":"indutny","message":"btw, you should increase liveness of object","date":"2012-03-12T16:45:33.297Z","type":"message"}
{"nick":"indutny","message":"one second, I think I can implement some sort of api for that","date":"2012-03-12T16:45:42.785Z","type":"message"}
{"nick":"indutny","message":"like instance->Ref()","date":"2012-03-12T16:45:47.879Z","type":"message"}
{"nick":"indutny","message":"instance->Unref()","date":"2012-03-12T16:45:50.588Z","type":"message"}
{"nick":"creationix","message":"ok, I don't understand what Handle is and when to use it","date":"2012-03-12T16:51:40.597Z","type":"message"}
{"nick":"creationix","message":"will Ref and UnRef be Handle methods?","date":"2012-03-12T16:51:55.210Z","type":"message"}
{"nick":"indutny","message":"no","date":"2012-03-12T16:54:19.020Z","type":"message"}
{"nick":"indutny","message":"CWrapper's ones","date":"2012-03-12T16:54:23.315Z","type":"message"}
{"nick":"indutny","message":"almost finished it","date":"2012-03-12T16:54:33.024Z","type":"message"}
{"nick":"indutny","message":"one sec","date":"2012-03-12T16:54:34.443Z","type":"message"}
{"nick":"indutny","message":"strange","date":"2012-03-12T17:01:35.346Z","type":"message"}
{"nick":"indutny","message":"it's segfaulting...","date":"2012-03-12T17:01:40.116Z","type":"message"}
{"nick":"indutny","message":"and I can't get why","date":"2012-03-12T17:01:45.025Z","type":"message"}
{"nick":"creationix","message":"are your pointer values right?","date":"2012-03-12T17:04:16.778Z","type":"message"}
{"nick":"indutny","message":"that's it","date":"2012-03-12T17:04:41.412Z","type":"message"}
{"nick":"indutny","message":"they're incorrect","date":"2012-03-12T17:04:50.852Z","type":"message"}
{"nick":"indutny","message":"probably GC has moved them","date":"2012-03-12T17:04:56.728Z","type":"message"}
{"nick":"indutny","message":"but haven't updated","date":"2012-03-12T17:05:06.157Z","type":"message"}
{"nick":"indutny","message":"i.e. haven't relocated","date":"2012-03-12T17:05:11.010Z","type":"message"}
{"nick":"indutny","message":"yes, that's what happened","date":"2012-03-12T17:06:41.939Z","type":"message"}
{"nick":"indutny","message":"aaah","date":"2012-03-12T17:10:19.263Z","type":"message"}
{"nick":"indutny","message":"well,ok","date":"2012-03-12T17:10:22.067Z","type":"message"}
{"nick":"indutny","message":"got it","date":"2012-03-12T17:10:23.044Z","type":"message"}
{"nick":"indutny","message":"ok, fixed","date":"2012-03-12T17:11:56.522Z","type":"message"}
{"nick":"indutny","message":"so the thing is","date":"2012-03-12T17:12:03.944Z","type":"message"}
{"nick":"indutny","message":"that if you're running some async action on object - you should Ref() it","date":"2012-03-12T17:12:19.353Z","type":"message"}
{"nick":"indutny","message":"one action has finished - Unref() it","date":"2012-03-12T17:12:29.485Z","type":"message"}
{"nick":"indutny","message":"this way you'll get GC safity","date":"2012-03-12T17:12:37.763Z","type":"message"}
{"nick":"indutny","message":"s/safity/safety","date":"2012-03-12T17:12:43.182Z","type":"message"}
{"nick":"indutny","message":"creationix: ^","date":"2012-03-12T17:12:44.826Z","type":"message"}
{"nick":"creationix","message":"right","date":"2012-03-12T17:13:42.205Z","type":"message"}
{"nick":"creationix","message":"so creating a handle doesn't do that?","date":"2012-03-12T17:13:51.713Z","type":"message"}
{"nick":"indutny","message":"creationix: yes","date":"2012-03-12T17:14:18.155Z","type":"message"}
{"nick":"indutny","message":"creationix: and you should not ref it on creation","date":"2012-03-12T17:14:26.648Z","type":"message"}
{"nick":"creationix","message":"btw https://github.com/creationix/candor.io/commit/2dda0e74b6d87483dab3a3d8ba21a5d448b46ede","date":"2012-03-12T17:14:26.970Z","type":"message"}
{"nick":"indutny","message":"otherwise it won't be ever GCed","date":"2012-03-12T17:14:35.351Z","type":"message"}
{"nick":"creationix","message":"how do I test gc?","date":"2012-03-12T17:15:11.697Z","type":"message"}
{"nick":"indutny","message":"you should definitely add ~uvTimer()","date":"2012-03-12T17:15:12.584Z","type":"message"}
{"nick":"indutny","message":"__$gc() call","date":"2012-03-12T17:15:18.065Z","type":"message"}
{"nick":"indutny","message":"or allocate a lot of data","date":"2012-03-12T17:15:27.929Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-12T17:15:28.684Z","type":"message"}
{"nick":"indutny","message":"oh, destructor is optional, sorry","date":"2012-03-12T17:16:04.882Z","type":"message"}
{"nick":"indutny","message":"but I think you may want to cleanup something","date":"2012-03-12T17:16:18.525Z","type":"message"}
{"nick":"indutny","message":"like, uv_timer_stop","date":"2012-03-12T17:16:43.367Z","type":"message"}
{"nick":"creationix","message":"ok, so in C++ super calls are implicit?","date":"2012-03-12T17:17:08.093Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-12T17:17:18.152Z","type":"message"}
{"nick":"creationix","message":"so if I override the destructor, CWrapper's destructor is still called","date":"2012-03-12T17:17:21.050Z","type":"message"}
{"nick":"creationix","message":"before or after?","date":"2012-03-12T17:17:23.292Z","type":"message"}
{"nick":"indutny","message":"ah","date":"2012-03-12T17:17:28.092Z","type":"message"}
{"nick":"indutny","message":"no","date":"2012-03-12T17:17:28.707Z","type":"message"}
{"nick":"indutny","message":"it won't be called","date":"2012-03-12T17:17:31.768Z","type":"message"}
{"nick":"indutny","message":"and it's actually empty","date":"2012-03-12T17:17:35.134Z","type":"message"}
{"nick":"indutny","message":"it's a virtual method","date":"2012-03-12T17:17:43.667Z","type":"message"}
{"nick":"creationix","message":"right, it's the weakcallback that's the gc cleanup","date":"2012-03-12T17:17:53.337Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-12T17:17:59.672Z","type":"message"}
{"nick":"creationix","message":"ok, so my constructor is called right before the instance gets deleted","date":"2012-03-12T17:18:16.026Z","type":"message"}
{"nick":"indutny","message":"weakcallback calls delete on your pointer","date":"2012-03-12T17:18:17.870Z","type":"message"}
{"nick":"indutny","message":"destructor, but yes","date":"2012-03-12T17:18:26.214Z","type":"message"}
{"nick":"creationix","message":"hah, right","date":"2012-03-12T17:18:33.120Z","type":"message"}
{"nick":"creationix","message":"ok, putting a __$gc() call after every statement crashed my program","date":"2012-03-12T17:19:47.867Z","type":"message"}
{"nick":"creationix","message":"time to add the proper Ref and Unref calls","date":"2012-03-12T17:19:57.161Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-03-12T17:20:24.971Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-12T17:20:26.371Z","type":"message"}
{"nick":"indutny","message":"for example .onClose may be invoked after your object was destroyed","date":"2012-03-12T17:20:37.754Z","type":"message"}
{"nick":"indutny","message":"so you may want to call Ref() in Close()","date":"2012-03-12T17:21:02.501Z","type":"message"}
{"nick":"indutny","message":"and Unref() in OnClose()","date":"2012-03-12T17:21:07.072Z","type":"message"}
{"nick":"creationix","message":"right at any async boundary to keep a reference to it","date":"2012-03-12T17:27:06.140Z","type":"message"}
{"nick":"indutny","message":"huh","date":"2012-03-12T17:34:39.281Z","type":"message"}
{"nick":"indutny","message":"https://gist.github.com/4d6e3270ff9020441373","date":"2012-03-12T17:34:39.882Z","type":"message"}
{"nick":"indutny","message":"too much assembly here","date":"2012-03-12T17:34:46.631Z","type":"message"}
{"nick":"indutny","message":"for:","date":"2012-03-12T17:35:03.112Z","type":"message"}
{"nick":"indutny","message":"i = 1000000000","date":"2012-03-12T17:35:03.647Z","type":"message"}
{"nick":"indutny","message":"while (--i) {","date":"2012-03-12T17:35:03.840Z","type":"message"}
{"nick":"indutny","message":"}","date":"2012-03-12T17:35:03.841Z","type":"message"}
{"nick":"creationix","message":"yeah, can't help there","date":"2012-03-12T17:35:23.668Z","type":"message"}
{"nick":"creationix","message":"good luck","date":"2012-03-12T17:35:25.621Z","type":"message"}
{"nick":"indutny","message":"hehe","date":"2012-03-12T17:35:49.263Z","type":"message"}
{"nick":"indutny","message":"thanks :)","date":"2012-03-12T17:35:50.921Z","type":"message"}
{"nick":"indutny","message":"I think I'm spilling too much","date":"2012-03-12T17:35:55.911Z","type":"message"}
{"nick":"indutny","message":"and not using registers correclty","date":"2012-03-12T17:36:05.702Z","type":"message"}
{"nick":"creationix","message":"how much of that assembly are you writing and how much is generated?","date":"2012-03-12T17:37:33.974Z","type":"message"}
{"nick":"creationix","message":"just curious","date":"2012-03-12T17:37:37.954Z","type":"message"}
{"nick":"indutny","message":"it's handwritten","date":"2012-03-12T17:37:55.149Z","type":"message"}
{"nick":"indutny","message":"and generated","date":"2012-03-12T17:38:03.918Z","type":"message"}
{"nick":"indutny","message":"fullgen visit each AST node and produce some sort of code, using templates","date":"2012-03-12T17:38:23.679Z","type":"message"}
{"nick":"indutny","message":"well, not exactly like that, but almost","date":"2012-03-12T17:38:30.374Z","type":"message"}
{"nick":"indutny","message":"ok, going to read that GC book","date":"2012-03-12T17:43:06.722Z","type":"message"}
{"nick":"creationix","message":"I see","date":"2012-03-12T17:43:07.243Z","type":"message"}
{"nick":"creationix","message":"have fun","date":"2012-03-12T17:43:10.605Z","type":"message"}
{"nick":"indutny","message":"can you please add me at gtalk?","date":"2012-03-12T17:43:13.607Z","type":"message"}
{"nick":"creationix","message":"sure","date":"2012-03-12T17:43:17.059Z","type":"message"}
{"nick":"creationix","message":"tim@creationix.com","date":"2012-03-12T17:43:20.981Z","type":"message"}
{"nick":"indutny","message":"fedor.indutny@gmail.com","date":"2012-03-12T17:43:22.093Z","type":"message"}
{"nick":"indutny","message":"ok, one sec","date":"2012-03-12T17:43:25.621Z","type":"message"}
{"nick":"indutny","message":"I'm not receiving notifications from irc","date":"2012-03-12T17:43:37.163Z","type":"message"}
{"nick":"indutny","message":"sent request","date":"2012-03-12T17:44:17.490Z","type":"message"}
{"nick":"indutny","new_nick":"indutny_sleeping","date":"2012-03-12T18:24:27.144Z","type":"nick"}
{"nick":"mraleph","date":"2012-03-12T18:55:48.620Z","type":"join"}
{"nick":"phuu","date":"2012-03-12T20:13:05.380Z","type":"join"}
{"nick":"mraleph","reason":"Quit: Leaving.","date":"2012-03-12T20:16:40.732Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 260 seconds","date":"2012-03-12T20:41:46.382Z","type":"quit"}
{"nick":"piscisaureus_","date":"2012-03-12T20:56:22.633Z","type":"join"}
{"nick":"phuu","reason":"Quit: phuu","date":"2012-03-12T22:11:08.961Z","type":"quit"}
