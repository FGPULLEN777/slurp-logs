{"nick":"phuu","date":"2012-03-09T00:07:13.733Z","type":"join"}
{"nick":"phuu","reason":"Quit: phuu","date":"2012-03-09T00:34:29.089Z","type":"quit"}
{"nick":"hij1nx","reason":"Quit: hij1nx","date":"2012-03-09T01:00:43.512Z","type":"quit"}
{"nick":"mmalecki","new_nick":"mmalecki[zzz]","date":"2012-03-09T01:35:04.300Z","type":"nick"}
{"nick":"alejandromg","date":"2012-03-09T02:53:48.263Z","type":"join"}
{"nick":"indutny_sleeping","message":"heya","date":"2012-03-09T04:09:09.136Z","type":"message"}
{"nick":"indutny_sleeping","message":"good morning","date":"2012-03-09T04:09:11.521Z","type":"message"}
{"nick":"indutny_sleeping","new_nick":"indutny","date":"2012-03-09T04:09:13.473Z","type":"nick"}
{"nick":"hij1nx","date":"2012-03-09T04:21:35.027Z","type":"join"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-03-09T04:25:00.666Z","type":"quit"}
{"nick":"indutny","message":"creationix: fixed one of two issues","date":"2012-03-09T04:54:54.631Z","type":"message"}
{"nick":"indutny","message":"creationix: and second too","date":"2012-03-09T06:06:05.371Z","type":"message"}
{"nick":"indutny","message":"creationix: timers are working, woot! :)","date":"2012-03-09T06:06:29.518Z","type":"message"}
{"nick":"indutny","message":"creationix: though, you should persist your timer object","date":"2012-03-09T06:16:00.339Z","type":"message"}
{"nick":"alejandromg","reason":"Quit: leaving","date":"2012-03-09T06:45:10.422Z","type":"quit"}
{"nick":"mmalecki[zzz]","new_nick":"mmalecki","date":"2012-03-09T07:15:18.448Z","type":"nick"}
{"nick":"mmalecki","new_nick":"mmalecki[away]","date":"2012-03-09T08:41:11.406Z","type":"nick"}
{"nick":"mmalecki[away]","new_nick":"mmalecki","date":"2012-03-09T10:07:48.411Z","type":"nick"}
{"nick":"mmalecki","new_nick":"mmalecki[away]","date":"2012-03-09T10:51:40.416Z","type":"nick"}
{"nick":"indutny","message":"creationix: that cdata thing won't work","date":"2012-03-09T11:34:49.779Z","type":"message"}
{"nick":"indutny","message":"creationix: I'm testing it with __$gc() calls","date":"2012-03-09T11:35:01.129Z","type":"message"}
{"nick":"indutny","message":"fixed all issues in candor, btw :)","date":"2012-03-09T11:35:12.949Z","type":"message"}
{"nick":"indutny","message":"there was a lot","date":"2012-03-09T11:35:15.729Z","type":"message"}
{"nick":"indutny","message":"reentering, visiting functions from GC","date":"2012-03-09T11:35:31.029Z","type":"message"}
{"nick":"indutny","message":"and etc","date":"2012-03-09T11:35:32.909Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-03-09T12:28:53.391Z","type":"join"}
{"nick":"hij1nx","reason":"Quit: hij1nx","date":"2012-03-09T13:44:25.968Z","type":"quit"}
{"nick":"piscisaureus_","reason":"Ping timeout: 265 seconds","date":"2012-03-09T13:52:04.199Z","type":"quit"}
{"nick":"indutny","message":"creationix: implemented weak references","date":"2012-03-09T13:52:46.602Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-03-09T14:10:10.428Z","type":"join"}
{"nick":"mmalecki[away]","new_nick":"mmalecki","date":"2012-03-09T14:15:18.488Z","type":"nick"}
{"nick":"indutny","message":"oooh","date":"2012-03-09T14:29:41.613Z","type":"message"}
{"nick":"indutny","message":"some unexpected problems with old space stuff :D","date":"2012-03-09T14:29:50.443Z","type":"message"}
{"nick":"indutny","message":"yeah, fixed","date":"2012-03-09T14:40:24.468Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-03-09T15:11:56.233Z","type":"quit"}
{"nick":"indutny","message":"creationix: yt?","date":"2012-03-09T15:11:58.083Z","type":"message"}
{"nick":"indutny","message":"creationix: you should like that -> https://github.com/indutny/candor/commit/fa62eb92e5bd6557631718c045583bc079c73734","date":"2012-03-09T15:12:19.513Z","type":"message"}
{"nick":"indutny","message":":D","date":"2012-03-09T15:12:22.557Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-03-09T15:16:05.867Z","type":"join"}
{"nick":"indutny","message":"piscisaureus_: hey man","date":"2012-03-09T15:19:00.640Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: https://github.com/indutny/candor/commit/fa62eb92e5bd6557631718c045583bc079c73734","date":"2012-03-09T15:19:12.619Z","type":"message"}
{"nick":"indutny","message":"what do you think about API?","date":"2012-03-09T15:19:20.447Z","type":"message"}
{"nick":"phuu","date":"2012-03-09T15:24:40.394Z","type":"join"}
{"nick":"phuu","message":"yoo","date":"2012-03-09T15:24:41.046Z","type":"message"}
{"nick":"phuu","message":"oops, sorry, wrong window","date":"2012-03-09T15:24:51.298Z","type":"message"}
{"nick":"creationix","message":"morning","date":"2012-03-09T15:36:15.059Z","type":"message"}
{"nick":"creationix","message":"thunderstorm knocked out power yesterday","date":"2012-03-09T15:36:26.060Z","type":"message"}
{"nick":"creationix","message":"indutny, nice, you made good progress","date":"2012-03-09T15:38:12.893Z","type":"message"}
{"nick":"creationix","message":"so sizeof and typeof just return the original value for now?","date":"2012-03-09T15:41:39.913Z","type":"message"}
{"nick":"indutny","message":"creationix: they don't do anything","date":"2012-03-09T15:42:42.654Z","type":"message"}
{"nick":"indutny","message":"creationix: but yeah, probably","date":"2012-03-09T15:42:51.515Z","type":"message"}
{"nick":"indutny","message":"creationix: implementing them at the moment","date":"2012-03-09T15:43:00.410Z","type":"message"}
{"nick":"creationix","message":"did you see my code for the first two?","date":"2012-03-09T15:45:32.328Z","type":"message"}
{"nick":"indutny","message":"creationix: looking","date":"2012-03-09T15:46:05.986Z","type":"message"}
{"nick":"creationix","message":"you can probably do something faster, but that's what I used","date":"2012-03-09T15:46:28.306Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-09T15:46:31.486Z","type":"message"}
{"nick":"indutny","message":"I'll do it in JIT","date":"2012-03-09T15:46:34.319Z","type":"message"}
{"nick":"indutny","message":"and won't create any strings","date":"2012-03-09T15:46:40.715Z","type":"message"}
{"nick":"creationix","message":"that works","date":"2012-03-09T15:46:41.338Z","type":"message"}
{"nick":"indutny","message":"btw, setTimeout should work now","date":"2012-03-09T15:46:53.205Z","type":"message"}
{"nick":"indutny","message":"but you should move to CWrapper or CData","date":"2012-03-09T15:47:00.297Z","type":"message"}
{"nick":"indutny","message":"and use SetWeakCallback","date":"2012-03-09T15:47:03.804Z","type":"message"}
{"nick":"phuu","message":"hey guys - i'd love to get involved but i don't have a huge amount of C++ experience (nothing better than jumping in at the deep end!). what can I do that'll help you?","date":"2012-03-09T16:00:19.123Z","type":"message"}
{"nick":"indutny","message":"phuu: cool! are you familiar with gyp?","date":"2012-03-09T16:00:50.915Z","type":"message"}
{"nick":"phuu","message":"no, sorry","date":"2012-03-09T16:01:20.247Z","type":"message"}
{"nick":"indutny","message":"phuu: let me think","date":"2012-03-09T16:02:18.132Z","type":"message"}
{"nick":"phuu","message":"are you trying to build candor on various platforms?","date":"2012-03-09T16:03:39.179Z","type":"message"}
{"nick":"indutny","message":"phuu: yes","date":"2012-03-09T16:03:56.748Z","type":"message"}
{"nick":"indutny","message":"phuu: but now it works only on linux and x64","date":"2012-03-09T16:04:04.954Z","type":"message"}
{"nick":"phuu","message":"yeah, I was just asking cos I was having a look at gyp","date":"2012-03-09T16:04:26.516Z","type":"message"}
{"nick":"indutny","message":"phuu: great!","date":"2012-03-09T16:04:42.836Z","type":"message"}
{"nick":"indutny","message":"phuu: that would be a great help","date":"2012-03-09T16:04:51.145Z","type":"message"}
{"nick":"phuu","message":"which environments are you targeting first?","date":"2012-03-09T16:07:44.416Z","type":"message"}
{"nick":"indutny","message":"phuu: linux/x64, but I'll add linux/ia32 soon","date":"2012-03-09T16:08:29.824Z","type":"message"}
{"nick":"indutny","message":"and osx","date":"2012-03-09T16:08:41.004Z","type":"message"}
{"nick":"indutny","message":"no win support in near future","date":"2012-03-09T16:08:49.543Z","type":"message"}
{"nick":"indutny","message":"and no arm/mips","date":"2012-03-09T16:08:54.333Z","type":"message"}
{"nick":"phuu","message":"is gyp for configuring build environments in any context, or for specific IDE project files?","date":"2012-03-09T16:18:45.778Z","type":"message"}
{"nick":"indutny","message":"ok, typeof is here","date":"2012-03-09T16:18:46.803Z","type":"message"}
{"nick":"indutny","message":"phuu: gyp is high-level alternative to makefile","date":"2012-03-09T16:19:00.255Z","type":"message"}
{"nick":"indutny","message":"phuu: it's a build system","date":"2012-03-09T16:19:05.962Z","type":"message"}
{"nick":"indutny","message":"phuu: what I do want, is to move from Makefile to gyp","date":"2012-03-09T16:19:22.242Z","type":"message"}
{"nick":"phuu","message":"ok. the gyp docs are a bit confusing on that front, thanks.","date":"2012-03-09T16:20:14.665Z","type":"message"}
{"nick":"indutny","message":"phuu: yeah, you can try looking at joyent/node for example","date":"2012-03-09T16:21:42.729Z","type":"message"}
{"nick":"phuu","message":"indutny: yeah i was, makes sense now.","date":"2012-03-09T16:24:59.786Z","type":"message"}
{"nick":"indutny","message":"creationix: what sizeof 1 should return?","date":"2012-03-09T16:26:57.122Z","type":"message"}
{"nick":"indutny","message":"creationix: 1?","date":"2012-03-09T16:26:59.142Z","type":"message"}
{"nick":"creationix","message":"nil","date":"2012-03-09T16:29:37.714Z","type":"message"}
{"nick":"creationix","message":"it only matters for arrays and strings","date":"2012-03-09T16:29:44.458Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-03-09T16:30:24.363Z","type":"message"}
{"nick":"indutny","message":"creationix: one more question, sizeof {a: 1, b : 2} == 2 ?","date":"2012-03-09T16:35:08.694Z","type":"message"}
{"nick":"creationix","message":"I don't think so","date":"2012-03-09T16:35:50.415Z","type":"message"}
{"nick":"creationix","message":"what would that be useful for?","date":"2012-03-09T16:35:57.866Z","type":"message"}
{"nick":"indutny","message":"dunno :)","date":"2012-03-09T16:36:07.686Z","type":"message"}
{"nick":"creationix","message":"btw, are arrays and objects going to be different internally?","date":"2012-03-09T16:36:23.811Z","type":"message"}
{"nick":"indutny","message":"creationix: that's a interesting question","date":"2012-03-09T16:36:46.516Z","type":"message"}
{"nick":"indutny","message":"creationix: no arrays here so far","date":"2012-03-09T16:36:50.526Z","type":"message"}
{"nick":"indutny","message":"creationix: but object is actually two heap values","date":"2012-03-09T16:37:01.717Z","type":"message"}
{"nick":"indutny","message":"creationix: HObject and HMap","date":"2012-03-09T16:37:05.714Z","type":"message"}
{"nick":"creationix","message":"sizeof needs to know maxInt","date":"2012-03-09T16:38:42.386Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-09T16:38:46.424Z","type":"message"}
{"nick":"indutny","message":"HArray may have it","date":"2012-03-09T16:38:55.734Z","type":"message"}
{"nick":"creationix","message":"I guess they can be the same, especially once we can store numbers as keys","date":"2012-03-09T16:39:01.746Z","type":"message"}
{"nick":"creationix","message":"not just strings","date":"2012-03-09T16:39:04.027Z","type":"message"}
{"nick":"creationix","message":"it's an \"array\" if there is at lease one int key?","date":"2012-03-09T16:39:12.979Z","type":"message"}
{"nick":"creationix","message":"the only problem there is you can't tell the difference between [] and {}","date":"2012-03-09T16:39:23.089Z","type":"message"}
{"nick":"indutny","message":"that's a good question","date":"2012-03-09T16:39:23.386Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-09T16:39:28.193Z","type":"message"}
{"nick":"creationix","message":"which when dealing with JSON can matter","date":"2012-03-09T16:39:35.874Z","type":"message"}
{"nick":"indutny","message":"ok, I'll add arrays later","date":"2012-03-09T16:39:43.394Z","type":"message"}
{"nick":"indutny","message":"I need to think about implementation","date":"2012-03-09T16:39:49.843Z","type":"message"}
{"nick":"indutny","message":"separate heap value would work fine","date":"2012-03-09T16:39:57.812Z","type":"message"}
{"nick":"creationix","message":"maybe instead of maxInt, have length (maxInt + 1)","date":"2012-03-09T16:40:13.081Z","type":"message"}
{"nick":"creationix","message":"and set it to 0 for arrays","date":"2012-03-09T16:40:19.836Z","type":"message"}
{"nick":"creationix","message":"and -1 for objects","date":"2012-03-09T16:40:23.160Z","type":"message"}
{"nick":"creationix","message":"?","date":"2012-03-09T16:40:24.568Z","type":"message"}
{"nick":"creationix","message":"and only on arrays do we update maxint when new int keys are added","date":"2012-03-09T16:41:04.444Z","type":"message"}
{"nick":"indutny","message":"hm..","date":"2012-03-09T16:44:54.578Z","type":"message"}
{"nick":"creationix","message":"well, whatever you want internally, but objects stay objects and arrays stay arrays","date":"2012-03-09T16:52:08.587Z","type":"message"}
{"nick":"phuu","message":"ach, i jumped in way over my head i think. good luck guys, i'll be really interested to see what candor becomes.","date":"2012-03-09T16:52:33.189Z","type":"message"}
{"nick":"creationix","message":"indutny, language wise, I even think it's fine for only objects to have arbitrary keys on them","date":"2012-03-09T16:53:43.609Z","type":"message"}
{"nick":"creationix","message":"arrays could be dense lists and functions propertyless","date":"2012-03-09T16:53:56.698Z","type":"message"}
{"nick":"creationix","message":"if it makes the vm a lot faster, I think it would be worth it.  arbitrary properties on arrays and functions is kinda edge case","date":"2012-03-09T16:54:28.152Z","type":"message"}
{"nick":"creationix","message":"if functions and arrays can have arbitrary properties, it would consistent to do the same for cdata as well","date":"2012-03-09T16:55:36.070Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 246 seconds","date":"2012-03-09T17:05:21.595Z","type":"quit"}
{"nick":"indutny","message":"creationix: hm... I got your point","date":"2012-03-09T17:13:03.648Z","type":"message"}
{"nick":"indutny","message":"creationix: yes, arrays will support only int64_t keys","date":"2012-03-09T17:13:16.408Z","type":"message"}
{"nick":"creationix","message":"cool","date":"2012-03-09T17:14:01.101Z","type":"message"}
{"nick":"indutny","message":"that makes sense","date":"2012-03-09T17:14:33.535Z","type":"message"}
{"nick":"creationix","message":"will they be dense","date":"2012-03-09T17:14:51.474Z","type":"message"}
{"nick":"creationix","message":"or allow holes","date":"2012-03-09T17:14:53.916Z","type":"message"}
{"nick":"indutny","message":"creationix: with holes","date":"2012-03-09T17:15:24.044Z","type":"message"}
{"nick":"indutny","message":"creationix: they'll be a hashmaps","date":"2012-03-09T17:15:28.251Z","type":"message"}
{"nick":"indutny","message":"but with specific hashing","date":"2012-03-09T17:15:34.996Z","type":"message"}
{"nick":"creationix","message":"ok","date":"2012-03-09T17:16:12.945Z","type":"message"}
{"nick":"creationix","message":"ok, sparse is fine as long as keysof works with it","date":"2012-03-09T17:30:04.654Z","type":"message"}
{"nick":"creationix","message":"bonus points if the keys come out sorted","date":"2012-03-09T17:30:48.810Z","type":"message"}
{"nick":"creationix","message":"but not required","date":"2012-03-09T17:30:51.049Z","type":"message"}
{"nick":"bradleymeck","date":"2012-03-09T17:31:16.614Z","type":"join"}
{"nick":"indutny","message":"I'm afraid that's imposible","date":"2012-03-09T17:35:20.687Z","type":"message"}
{"nick":"indutny","message":"impossible*","date":"2012-03-09T17:35:24.158Z","type":"message"}
{"nick":"creationix","message":"yeah, hashes aren't really ordered","date":"2012-03-09T17:36:10.554Z","type":"message"}
{"nick":"creationix","message":"unless you used a linked list or something","date":"2012-03-09T17:36:29.225Z","type":"message"}
{"nick":"creationix","message":"with a shortcut to the last accessed index","date":"2012-03-09T17:36:37.152Z","type":"message"}
{"nick":"creationix","message":"(since most access will be in order)","date":"2012-03-09T17:36:43.000Z","type":"message"}
{"nick":"indutny","message":"linked lists are slow","date":"2012-03-09T17:36:59.977Z","type":"message"}
{"nick":"creationix","message":"or maybe linked list and hash?","date":"2012-03-09T17:37:03.768Z","type":"message"}
{"nick":"creationix","message":"or is that too much overhead","date":"2012-03-09T17:37:07.725Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-09T17:37:11.066Z","type":"message"}
{"nick":"creationix","message":"linked lists are slow for random access","date":"2012-03-09T17:37:32.712Z","type":"message"}
{"nick":"creationix","message":"but much faster for ordered traversal","date":"2012-03-09T17:37:38.970Z","type":"message"}
{"nick":"indutny","message":"nono","date":"2012-03-09T17:37:49.136Z","type":"message"}
{"nick":"indutny","message":"for allocation","date":"2012-03-09T17:37:52.485Z","type":"message"}
{"nick":"creationix","message":"yeah, that I can believe","date":"2012-03-09T17:38:01.440Z","type":"message"}
{"nick":"creationix","message":"just trying to think of how to make the loop case fast for sparse arrays","date":"2012-03-09T17:38:17.352Z","type":"message"}
{"nick":"creationix","message":"or does that not matter?","date":"2012-03-09T17:38:21.050Z","type":"message"}
{"nick":"indutny","message":"that does matter","date":"2012-03-09T17:38:28.972Z","type":"message"}
{"nick":"indutny","message":"dense arrays will have different structure","date":"2012-03-09T17:38:38.935Z","type":"message"}
{"nick":"indutny","message":"but for now let me implement them as hashmaps","date":"2012-03-09T17:38:45.935Z","type":"message"}
{"nick":"creationix","message":"well, dense arrays are easy, just use for(;;) in candor","date":"2012-03-09T17:39:01.752Z","type":"message"}
{"nick":"creationix","message":"0 to sizeof - 1","date":"2012-03-09T17:39:07.189Z","type":"message"}
{"nick":"creationix","message":"but yeah, later add real dense stores internally would make some cases more effecient","date":"2012-03-09T17:39:53.444Z","type":"message"}
{"nick":"creationix","message":"I know v8 does this for some arrays","date":"2012-03-09T17:40:07.824Z","type":"message"}
{"nick":"creationix","message":"that's why Array.prototype.shift is fast for small arrays","date":"2012-03-09T17:40:15.872Z","type":"message"}
{"nick":"creationix","message":"it just moves the offset pointer instead of renumbering all keys","date":"2012-03-09T17:40:24.458Z","type":"message"}
{"nick":"creationix","message":"I always end up implementing my own fast queue in js anyway","date":"2012-03-09T17:41:14.760Z","type":"message"}
{"nick":"creationix","message":"since the v8 trick only works for small queues","date":"2012-03-09T17:41:20.741Z","type":"message"}
{"nick":"creationix","message":"candor won't have push and shift built-in to the core vm, so it's all fair ground","date":"2012-03-09T17:41:59.831Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-09T17:43:49.644Z","type":"message"}
{"nick":"creationix","message":"can I have a way to store an integer type tag on cdata?","date":"2012-03-09T17:45:24.888Z","type":"message"}
{"nick":"indutny","message":"creationix: no","date":"2012-03-09T17:45:39.295Z","type":"message"}
{"nick":"indutny","message":"creationix: I don't think there're use for it","date":"2012-03-09T17:45:55.451Z","type":"message"}
{"nick":"creationix","message":"type saftey","date":"2012-03-09T17:46:03.432Z","type":"message"}
{"nick":"indutny","message":"and it can be easilty implemented in user-land","date":"2012-03-09T17:46:04.516Z","type":"message"}
{"nick":"indutny","message":"meh","date":"2012-03-09T17:46:07.876Z","type":"message"}
{"nick":"indutny","message":"you still need to coordinate numbers","date":"2012-03-09T17:46:16.953Z","type":"message"}
{"nick":"creationix","message":"it shouldn't be possible for scripts to trigger segfaults (assuming no bugs in the vm)","date":"2012-03-09T17:46:17.964Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-09T17:46:43.324Z","type":"message"}
{"nick":"indutny","message":"you can create class with 'type' property","date":"2012-03-09T17:47:13.244Z","type":"message"}
{"nick":"indutny","message":"and inherit all your objects from it","date":"2012-03-09T17:47:25.089Z","type":"message"}
{"nick":"creationix","message":"I can, but people can replace the cdata property with an invalid one","date":"2012-03-09T17:47:33.968Z","type":"message"}
{"nick":"indutny","message":"and that class from CWrapper","date":"2012-03-09T17:47:46.345Z","type":"message"}
{"nick":"indutny","message":"creationix: no, they can't","date":"2012-03-09T17:48:00.983Z","type":"message"}
{"nick":"indutny","message":"only C++ side can","date":"2012-03-09T17:48:04.353Z","type":"message"}
{"nick":"indutny","message":"and for CWrapper, cdata value is a pointer","date":"2012-03-09T17:48:15.227Z","type":"message"}
{"nick":"indutny","message":"to class instance","date":"2012-03-09T17:48:23.802Z","type":"message"}
{"nick":"creationix","message":"no, I mean 'timer = {cdata:[CData], type:\"Handle\"}","date":"2012-03-09T17:48:40.335Z","type":"message"}
{"nick":"creationix","message":"timer.cdata = evilCdata","date":"2012-03-09T17:48:46.320Z","type":"message"}
{"nick":"indutny","message":"type should be in C++","date":"2012-03-09T17:49:04.140Z","type":"message"}
{"nick":"creationix","message":"you're right though","date":"2012-03-09T17:49:10.583Z","type":"message"}
{"nick":"indutny","message":"just create a middle-class","date":"2012-03-09T17:49:11.470Z","type":"message"}
{"nick":"creationix","message":"numbers can conflict too","date":"2012-03-09T17:49:18.000Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-09T17:49:20.700Z","type":"message"}
{"nick":"indutny","message":"that's it","date":"2012-03-09T17:49:23.812Z","type":"message"}
{"nick":"creationix","message":"I guess embedding the type inside my cdata is just as good","date":"2012-03-09T17:49:26.392Z","type":"message"}
{"nick":"creationix","message":"I wonder if libuv has that already","date":"2012-03-09T17:49:38.775Z","type":"message"}
{"nick":"indutny","message":"I went the way of less complexity","date":"2012-03-09T17:49:45.699Z","type":"message"}
{"nick":"creationix","message":"in part of the common structure between all the structs","date":"2012-03-09T17:49:51.674Z","type":"message"}
{"nick":"indutny","message":"you should definitely use CWrapper","date":"2012-03-09T17:50:10.779Z","type":"message"}
{"nick":"creationix","message":"then assuming it's any uv type, I can read that property safely","date":"2012-03-09T17:50:15.947Z","type":"message"}
{"nick":"indutny","message":"or at least have a weak callbacks","date":"2012-03-09T17:50:22.529Z","type":"message"}
{"nick":"creationix","message":"what do cwrapper instances look like to the script?","date":"2012-03-09T17:50:58.739Z","type":"message"}
{"nick":"creationix","message":"are they objects","date":"2012-03-09T17:51:01.487Z","type":"message"}
{"nick":"creationix","message":"or opaque values","date":"2012-03-09T17:51:05.542Z","type":"message"}
{"nick":"creationix","message":"cdata instances are opaque I assume","date":"2012-03-09T17:51:16.767Z","type":"message"}
{"nick":"indutny","message":"they're cdata","date":"2012-03-09T17:51:21.929Z","type":"message"}
{"nick":"creationix","message":"ok, so no properties can be set on them from candor script","date":"2012-03-09T17:51:39.643Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-09T17:51:44.497Z","type":"message"}
{"nick":"creationix","message":"or read from them","date":"2012-03-09T17:51:48.023Z","type":"message"}
{"nick":"creationix","message":"so the difference between cdata and cwrapper is cdata is managed by the vm and cwrapper is managed by the c++ class with a gc callback (WeakCallback)","date":"2012-03-09T17:52:46.974Z","type":"message"}
{"nick":"creationix","message":"hmm, so I could make a UVHandle class that inherits from CWrapper","date":"2012-03-09T17:54:05.881Z","type":"message"}
{"nick":"creationix","message":"and use value->As<UVHandle>() and value->Is<UVHandle>() ?","date":"2012-03-09T17:54:27.662Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-09T17:58:14.007Z","type":"message"}
{"nick":"indutny","message":"cwrapper is API on the top of cdata","date":"2012-03-09T17:58:22.133Z","type":"message"}
{"nick":"indutny","message":"that won't work","date":"2012-03-09T17:58:30.511Z","type":"message"}
{"nick":"indutny","message":"aaah","date":"2012-03-09T17:59:12.215Z","type":"message"}
{"nick":"indutny","message":"fuck","date":"2012-03-09T17:59:13.266Z","type":"message"}
{"nick":"creationix","message":"ok, so CWrapper isn't a Value type?","date":"2012-03-09T17:59:16.053Z","type":"message"}
{"nick":"indutny","message":"sorry, I'll fix API","date":"2012-03-09T17:59:18.930Z","type":"message"}
{"nick":"indutny","message":"one second","date":"2012-03-09T17:59:22.007Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-09T17:59:23.688Z","type":"message"}
{"nick":"indutny","message":"creationix: https://github.com/indutny/candor/commit/d8d231ba1e1f8d12016ddbac73ce3b17fbaa579e","date":"2012-03-09T18:02:01.898Z","type":"message"}
{"nick":"indutny","message":"creationix: ->Wrap() to get CData* object which inherits from Value","date":"2012-03-09T18:02:26.036Z","type":"message"}
{"nick":"indutny","message":"creationix: ->Unwrap<YourClass>(CData* data)","date":"2012-03-09T18:02:44.516Z","type":"message"}
{"nick":"indutny","message":"to get YourClass* c","date":"2012-03-09T18:02:49.083Z","type":"message"}
{"nick":"indutny","message":"one sec","date":"2012-03-09T18:02:50.797Z","type":"message"}
{"nick":"indutny","message":"it should be possible to do ->Unwrap<YourClass>(Value* value)","date":"2012-03-09T18:03:25.931Z","type":"message"}
{"nick":"creationix","message":"what happens if the value isn't the right type?","date":"2012-03-09T18:03:45.908Z","type":"message"}
{"nick":"indutny","message":"done","date":"2012-03-09T18:03:51.853Z","type":"message"}
{"nick":"indutny","message":"creationix: segfault :D","date":"2012-03-09T18:04:03.390Z","type":"message"}
{"nick":"indutny","message":"creationix: but cdata is dangerous itself","date":"2012-03-09T18:04:13.326Z","type":"message"}
{"nick":"indutny","message":":D","date":"2012-03-09T18:04:20.316Z","type":"message"}
{"nick":"indutny","message":"ok, gtg","date":"2012-03-09T18:04:26.421Z","type":"message"}
{"nick":"creationix","message":"it is, but that kind of type unsafty can make for easy security holes","date":"2012-03-09T18:04:33.187Z","type":"message"}
{"nick":"creationix","message":"take care","date":"2012-03-09T18:04:34.746Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2012-03-09T18:04:45.989Z","type":"message"}
{"nick":"indutny","message":"but that's a danger zone for all APIs","date":"2012-03-09T18:04:53.583Z","type":"message"}
{"nick":"indutny","message":"supporting storing pointer to any object","date":"2012-03-09T18:05:01.465Z","type":"message"}
{"nick":"indutny","message":"you can't get guarantee that this object is instance of some class","date":"2012-03-09T18:05:11.702Z","type":"message"}
{"nick":"creationix","message":"not if you tag it with a type somehow so that it's never typecast to the wrong type","date":"2012-03-09T18:05:17.933Z","type":"message"}
{"nick":"indutny","message":"that won't work","date":"2012-03-09T18:05:26.417Z","type":"message"}
{"nick":"indutny","message":"that's illusion of type safity","date":"2012-03-09T18:05:41.140Z","type":"message"}
{"nick":"indutny","message":"by the cost of API speed","date":"2012-03-09T18:05:47.868Z","type":"message"}
{"nick":"indutny","message":"though it may prevent some stupid errors","date":"2012-03-09T18:05:56.512Z","type":"message"}
{"nick":"indutny","message":"lets see how it'll go with that API","date":"2012-03-09T18:06:05.335Z","type":"message"}
{"nick":"creationix","message":"ok","date":"2012-03-09T18:06:09.404Z","type":"message"}
{"nick":"indutny","message":"we're pretty flexible with it now","date":"2012-03-09T18:06:13.920Z","type":"message"}
{"nick":"indutny","new_nick":"indutny_away","date":"2012-03-09T18:06:24.832Z","type":"nick"}
{"nick":"indutny_away","message":"have you tried new API?","date":"2012-03-09T18:06:31.459Z","type":"message"}
{"nick":"indutny_away","message":"looking forward to see how candor.io will work with it","date":"2012-03-09T18:06:43.549Z","type":"message"}
{"nick":"indutny_away","message":"btw, HandleScope are gone","date":"2012-03-09T18:06:49.349Z","type":"message"}
{"nick":"indutny_away","message":"they were useless","date":"2012-03-09T18:06:55.867Z","type":"message"}
{"nick":"indutny_away","message":"ok, finally, I'm away","date":"2012-03-09T18:07:05.328Z","type":"message"}
{"nick":"indutny_away","message":"for 30-45 minutes","date":"2012-03-09T18:07:07.689Z","type":"message"}
{"nick":"creationix","message":"ok","date":"2012-03-09T18:08:45.671Z","type":"message"}
{"nick":"indutny_away","message":"back","date":"2012-03-09T18:31:15.644Z","type":"message"}
{"nick":"indutny_away","new_nick":"indutny","date":"2012-03-09T18:31:18.507Z","type":"nick"}
{"nick":"indutny","message":"creationix: I think sizeof should return number","date":"2012-03-09T18:47:27.140Z","type":"message"}
{"nick":"indutny","message":"may be 0 instead of nil","date":"2012-03-09T18:47:33.151Z","type":"message"}
{"nick":"indutny","message":"would be good if one would always now that sizeof returns number","date":"2012-03-09T18:47:48.165Z","type":"message"}
{"nick":"indutny","message":"less type checks and etc","date":"2012-03-09T18:47:52.507Z","type":"message"}
{"nick":"indutny","message":"creationix: arrays landed","date":"2012-03-09T19:34:15.335Z","type":"message"}
{"nick":"indutny","message":"adding API support for them","date":"2012-03-09T19:34:19.007Z","type":"message"}
{"nick":"indutny","message":"done","date":"2012-03-09T19:43:18.687Z","type":"message"}
{"nick":"indutny","message":"creationix: should keys of [1,2,3,4] return [0,1,2,3] ?","date":"2012-03-09T19:50:29.581Z","type":"message"}
{"nick":"indutny","message":"should it work for arrays?","date":"2012-03-09T19:50:44.457Z","type":"message"}
{"nick":"indutny","message":"ok, it'll","date":"2012-03-09T19:51:15.369Z","type":"message"}
{"nick":"indutny","message":"keysof are here now too","date":"2012-03-09T20:03:12.310Z","type":"message"}
{"nick":"indutny","message":"creationix: I urgently insist on using SetWeakCallback or some sort of persistent handle here, better using CWrapper","date":"2012-03-09T20:06:47.071Z","type":"message"}
{"nick":"indutny","message":"creationix: things may go wierd if GC will run between timer's callbacks","date":"2012-03-09T20:07:16.962Z","type":"message"}
{"nick":"indutny","message":"creationix: like calling .onClose for destroyed object","date":"2012-03-09T20:07:24.810Z","type":"message"}
{"nick":"indutny","message":"not good at all","date":"2012-03-09T20:07:27.462Z","type":"message"}
{"nick":"indutny","message":"or GCing object with running interval timer","date":"2012-03-09T20:07:49.849Z","type":"message"}
{"nick":"indutny","message":"so timer won't ever stop","date":"2012-03-09T20:07:59.689Z","type":"message"}
{"nick":"indutny","message":"btw, I don't like for loops","date":"2012-03-09T20:14:53.569Z","type":"message"}
{"nick":"indutny","message":"no semicolons in candor","date":"2012-03-09T20:15:00.230Z","type":"message"}
{"nick":"indutny","message":"I removed them","date":"2012-03-09T20:15:06.493Z","type":"message"}
{"nick":"indutny","message":"they're essentially the same thing as while","date":"2012-03-09T20:15:14.479Z","type":"message"}
{"nick":"indutny","message":"just a sugar","date":"2012-03-09T20:15:19.128Z","type":"message"}
{"nick":"indutny","message":"and array iteration can be implemented as high-level function","date":"2012-03-09T20:15:38.020Z","type":"message"}
{"nick":"indutny","message":"hey people, vote up http://news.ycombinator.com/item?id=3685883","date":"2012-03-09T20:57:10.772Z","type":"message"}
{"nick":"irrumat0r","date":"2012-03-09T21:02:16.603Z","type":"join"}
{"nick":"creationix","message":"back","date":"2012-03-09T21:03:24.152Z","type":"message"}
{"nick":"indutny","message":"creationix: cool","date":"2012-03-09T21:03:39.364Z","type":"message"}
{"nick":"irrumat0r","message":"haha: `code := statement*","date":"2012-03-09T21:03:40.382Z","type":"message"}
{"nick":"creationix","message":"so what's the error handling story for candor","date":"2012-03-09T21:03:42.378Z","type":"message"}
{"nick":"irrumat0r","message":"are any of you here J-ers by chance? :>","date":"2012-03-09T21:03:54.603Z","type":"message"}
{"nick":"indutny","message":"irrumat0r: that's a grammar :)","date":"2012-03-09T21:03:54.808Z","type":"message"}
{"nick":"creationix","message":"I know we don't want exceptions","date":"2012-03-09T21:04:01.385Z","type":"message"}
{"nick":"irrumat0r","message":"in J, that would be code=: statement","date":"2012-03-09T21:04:06.654Z","type":"message"}
{"nick":"irrumat0r","message":"except probably with not as many words","date":"2012-03-09T21:04:19.804Z","type":"message"}
{"nick":"indutny","message":"irrumat0r: candor is very js-like","date":"2012-03-09T21:04:35.823Z","type":"message"}
{"nick":"indutny","message":"irrumat0r: := is only for a grammar definiteion","date":"2012-03-09T21:04:48.884Z","type":"message"}
{"nick":"indutny","message":"definition*","date":"2012-03-09T21:04:52.629Z","type":"message"}
{"nick":"irrumat0r","message":"ah, I see (I don't do js)","date":"2012-03-09T21:04:58.105Z","type":"message"}
{"nick":"indutny","message":"and is not a part of candorlang","date":"2012-03-09T21:05:00.295Z","type":"message"}
{"nick":"indutny","message":"creationix: so, sizeof nil = 0","date":"2012-03-09T21:05:40.382Z","type":"message"}
{"nick":"indutny","message":"creationix: keysof nil = []","date":"2012-03-09T21:05:44.662Z","type":"message"}
{"nick":"creationix","message":"I think in general, the error handling should be early fatal errors for programming mistakes, but be more graceful on user-suplied problems (like invalid input or connecting to a server that's down","date":"2012-03-09T21:05:49.267Z","type":"message"}
{"nick":"irrumat0r","message":"Oh, I see. I just got excited thinking another kewl array language was born :D","date":"2012-03-09T21:05:53.239Z","type":"message"}
{"nick":"indutny","message":"irrumat0r: :)","date":"2012-03-09T21:06:07.822Z","type":"message"}
{"nick":"indutny","message":"creationix: yes, compile-time fatal errors","date":"2012-03-09T21:06:15.780Z","type":"message"}
{"nick":"creationix","message":"for sure we want compile time errors about using undefined variables","date":"2012-03-09T21:06:33.546Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2012-03-09T21:06:45.420Z","type":"message"}
{"nick":"irrumat0r","reason":"\"may the progeny of APL spread far and wide!\"","date":"2012-03-09T21:06:47.143Z","type":"part"}
{"nick":"creationix","message":"it's really hard to debug as it is now","date":"2012-03-09T21:06:54.630Z","type":"message"}
{"nick":"creationix","message":"even my tiny experiments were very painful","date":"2012-03-09T21:07:01.695Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-03-09T21:07:12.234Z","type":"message"}
{"nick":"creationix","message":"things simply don't happen and there is no indication why","date":"2012-03-09T21:07:13.161Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-09T21:07:22.469Z","type":"message"}
{"nick":"indutny","message":"stuff like","date":"2012-03-09T21:07:25.208Z","type":"message"}
{"nick":"indutny","message":"nil.a = x is not really good","date":"2012-03-09T21:07:31.629Z","type":"message"}
{"nick":"creationix","message":"that and there were some nasty bugs in the vm that you just fixed","date":"2012-03-09T21:07:35.303Z","type":"message"}
{"nick":"indutny","message":"yeah, there were a lot","date":"2012-03-09T21:07:43.538Z","type":"message"}
{"nick":"creationix","message":"if we design the language in such a way that a static type inference can run on it, then that can catch a ton of errors","date":"2012-03-09T21:08:02.337Z","type":"message"}
{"nick":"creationix","message":"and would probably be enough","date":"2012-03-09T21:08:05.794Z","type":"message"}
{"nick":"creationix","message":"not having eval goes a long ways towards that","date":"2012-03-09T21:08:14.958Z","type":"message"}
{"nick":"indutny","message":"hehe :)","date":"2012-03-09T21:08:20.307Z","type":"message"}
{"nick":"creationix","message":"and that engine doesn't even have to be in the core, it could be part of a lint tool","date":"2012-03-09T21:08:40.723Z","type":"message"}
{"nick":"indutny","message":"yes, we can do that at cost of compile time","date":"2012-03-09T21:08:41.508Z","type":"message"}
{"nick":"indutny","message":"yeah, probably","date":"2012-03-09T21:08:53.677Z","type":"message"}
{"nick":"indutny","message":"that can be implemented in candor.io ;)","date":"2012-03-09T21:09:02.397Z","type":"message"}
{"nick":"creationix","message":"or candor.js","date":"2012-03-09T21:09:11.158Z","type":"message"}
{"nick":"indutny","message":"may be","date":"2012-03-09T21:09:16.086Z","type":"message"}
{"nick":"creationix","message":"since I need to re-implement the parser anyway","date":"2012-03-09T21:09:22.927Z","type":"message"}
{"nick":"creationix","message":"or implement it in candor itself","date":"2012-03-09T21:09:37.378Z","type":"message"}
{"nick":"creationix","message":"and it can run on either","date":"2012-03-09T21:09:40.238Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-03-09T21:09:52.105Z","type":"message"}
{"nick":"indutny","message":"time to sleep for me","date":"2012-03-09T21:09:55.805Z","type":"message"}
{"nick":"indutny","message":"err","date":"2012-03-09T21:10:00.670Z","type":"message"}
{"nick":"indutny","message":"bad bad grammar","date":"2012-03-09T21:10:11.415Z","type":"message"}
{"nick":"indutny","message":"going to sleep, anyway","date":"2012-03-09T21:10:18.026Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-09T21:10:20.015Z","type":"message"}
{"nick":"indutny","message":"4am in my place","date":"2012-03-09T21:10:23.455Z","type":"message"}
{"nick":"indutny","message":"so ttyl, thanks for your work man","date":"2012-03-09T21:10:29.845Z","type":"message"}
{"nick":"indutny","new_nick":"indutny_sleeping","date":"2012-03-09T21:10:34.894Z","type":"nick"}
{"nick":"creationix","message":"ok, so sizeof and keysof always return the same type","date":"2012-03-09T21:10:36.838Z","type":"message"}
{"nick":"creationix","message":"I'm fine with that","date":"2012-03-09T21:10:39.161Z","type":"message"}
{"nick":"indutny_sleeping","message":"yes","date":"2012-03-09T21:10:46.774Z","type":"message"}
{"nick":"indutny_sleeping","message":"and btw","date":"2012-03-09T21:11:15.304Z","type":"message"}
{"nick":"mraleph","date":"2012-03-09T21:11:17.562Z","type":"join"}
{"nick":"indutny_sleeping","message":"array length won't decrement","date":"2012-03-09T21:11:22.133Z","type":"message"}
{"nick":"indutny_sleeping","message":"mraleph: heya!","date":"2012-03-09T21:11:24.129Z","type":"message"}
{"nick":"indutny_sleeping","message":"nice to see you there :)","date":"2012-03-09T21:11:28.314Z","type":"message"}
{"nick":"mraleph","message":"I am just passing by :-)","date":"2012-03-09T21:11:41.637Z","type":"message"}
{"nick":"indutny_sleeping","message":"creationix: not sure how to implement decrementing","date":"2012-03-09T21:11:46.127Z","type":"message"}
{"nick":"indutny_sleeping","message":"creationix: but will add that to TODO","date":"2012-03-09T21:11:54.997Z","type":"message"}
{"nick":"indutny_sleeping","message":"mraleph: language is going more mature :)","date":"2012-03-09T21:12:22.883Z","type":"message"}
{"nick":"mraleph","message":"well, it looks just like many other languages out there","date":"2012-03-09T21:15:03.899Z","type":"message"}
{"nick":"mraleph","message":"so it's not surprising it is getting mature :-)","date":"2012-03-09T21:15:17.468Z","type":"message"}
{"nick":"indutny_sleeping","message":":)","date":"2012-03-09T21:16:13.826Z","type":"message"}
{"nick":"indutny_sleeping","message":"heh","date":"2012-03-09T21:16:17.722Z","type":"message"}
{"nick":"indutny_sleeping","message":"yeah, nothing brilliant here","date":"2012-03-09T21:16:31.336Z","type":"message"}
{"nick":"indutny_sleeping","message":"but anyway I like it","date":"2012-03-09T21:16:35.446Z","type":"message"}
{"nick":"indutny_sleeping","message":"ok, time to sleep","date":"2012-03-09T21:21:25.498Z","type":"message"}
{"nick":"bradleymeck","reason":"Ping timeout: 246 seconds","date":"2012-03-09T21:38:21.747Z","type":"quit"}
{"nick":"phuu","reason":"Quit: phuu","date":"2012-03-09T22:53:01.183Z","type":"quit"}
{"nick":"mmalecki","new_nick":"mmalecki[zzz]","date":"2012-03-09T23:02:56.258Z","type":"nick"}
{"nick":"alejandromg","date":"2012-03-09T23:55:06.845Z","type":"join"}
