{"nick":"piscisaureus__","date":"2012-03-26T00:04:13.794Z","type":"join"}
{"nick":"piscisaureus_","reason":"Ping timeout: 245 seconds","date":"2012-03-26T00:06:23.042Z","type":"quit"}
{"nick":"piscisaureus__","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-03-26T00:17:49.061Z","type":"quit"}
{"nick":"tilgovi","reason":"Remote host closed the connection","date":"2012-03-26T00:33:59.074Z","type":"quit"}
{"nick":"alejandro[away]","new_nick":"alejandromg","date":"2012-03-26T00:58:00.335Z","type":"nick"}
{"nick":"piscisaureus_","date":"2012-03-26T02:19:01.934Z","type":"join"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-03-26T02:56:26.079Z","type":"quit"}
{"nick":"bradleymeck","date":"2012-03-26T03:25:21.856Z","type":"join"}
{"nick":"indutny","date":"2012-03-26T03:32:43.921Z","type":"join"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2012-03-26T03:38:49.238Z","type":"quit"}
{"nick":"alejandromg","reason":"Read error: Connection reset by peer","date":"2012-03-26T03:49:40.280Z","type":"quit"}
{"nick":"alejandromg","date":"2012-03-26T03:54:13.785Z","type":"join"}
{"nick":"mmalecki[away]","new_nick":"mmalecki","date":"2012-03-26T05:52:22.064Z","type":"nick"}
{"nick":"alejandromg","reason":"Quit: leaving","date":"2012-03-26T06:32:10.390Z","type":"quit"}
{"nick":"mmalecki","new_nick":"mmalecki[away]","date":"2012-03-26T07:16:57.521Z","type":"nick"}
{"nick":"indutny","message":"creationix: https://github.com/indutny/candor/commit/3c73da62e2f476e498f7a47653fb80138ce99154","date":"2012-03-26T09:06:16.539Z","type":"message"}
{"nick":"indutny","message":"cons strings implemented","date":"2012-03-26T09:06:18.908Z","type":"message"}
{"nick":"indutny","message":"well, performance is not as fast as I would like it to be","date":"2012-03-26T09:06:31.164Z","type":"message"}
{"nick":"indutny","message":"but at least much faster than regular concatenation","date":"2012-03-26T09:06:40.191Z","type":"message"}
{"nick":"indutny","message":"it's 1.5x slower than in v8","date":"2012-03-26T09:06:57.966Z","type":"message"}
{"nick":"indutny","message":"(approximately)","date":"2012-03-26T09:07:00.303Z","type":"message"}
{"nick":"Raynos","date":"2012-03-26T09:20:50.213Z","type":"join"}
{"nick":"piscisaureus_","date":"2012-03-26T12:05:25.799Z","type":"join"}
{"nick":"indutny","message":"piscisaureus_: hey man","date":"2012-03-26T12:07:17.114Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: can you please take a look at this, once you'll have a free time: https://github.com/indutny/candor/commit/3c73da62e2f476e498f7a47653fb80138ce99154","date":"2012-03-26T12:07:50.333Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: it's a cons string implementation for candor","date":"2012-03-26T12:08:00.323Z","type":"message"}
{"nick":"creationix","message":"const strings wohoo!","date":"2012-03-26T12:08:18.943Z","type":"message"}
{"nick":"creationix","message":"*cons","date":"2012-03-26T12:08:21.854Z","type":"message"}
{"nick":"creationix","message":"did api.h not change?","date":"2012-03-26T12:10:31.310Z","type":"message"}
{"nick":"indutny","message":"creationix: no","date":"2012-03-26T12:11:03.669Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-26T12:11:04.771Z","type":"message"}
{"nick":"indutny","message":"creationix: morning","date":"2012-03-26T12:11:11.349Z","type":"message"}
{"nick":"indutny","message":"creationix: creating can2c utlility for candor.io","date":"2012-03-26T12:11:23.884Z","type":"message"}
{"nick":"creationix","message":"good idea","date":"2012-03-26T12:11:36.581Z","type":"message"}
{"nick":"creationix","message":"what's the GC going to be in the C version","date":"2012-03-26T12:12:13.468Z","type":"message"}
{"nick":"indutny","message":"GC?","date":"2012-03-26T12:12:30.281Z","type":"message"}
{"nick":"creationix","message":"or is it just candor to candor API","date":"2012-03-26T12:12:32.850Z","type":"message"}
{"nick":"indutny","message":"it's just for builtins","date":"2012-03-26T12:12:42.290Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-26T12:12:44.143Z","type":"message"}
{"nick":"indutny","message":"lib/net.can","date":"2012-03-26T12:12:45.996Z","type":"message"}
{"nick":"indutny","message":"js2c","date":"2012-03-26T12:12:52.042Z","type":"message"}
{"nick":"creationix","message":"ahh, that kind of c","date":"2012-03-26T12:12:57.651Z","type":"message"}
{"nick":"creationix","message":"but I was thinking, other than the GC, your compiler isn't that different from a static compiler right?","date":"2012-03-26T12:13:34.529Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: I am not a gc expert. But I will look at the string functions.","date":"2012-03-26T12:14:20.762Z","type":"message"}
{"nick":"indutny","message":"not really","date":"2012-03-26T12:14:23.407Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: gc doesn't matter here","date":"2012-03-26T12:14:30.209Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: but thanks :)","date":"2012-03-26T12:14:36.248Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: how is queue implemented? as a linked list on the heap?","date":"2012-03-26T12:16:03.234Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: in Flatten? as a stack in C++ heap memory","date":"2012-03-26T12:16:25.495Z","type":"message"}
{"nick":"indutny","message":"but allocations are going inside zone, so it's quite fast","date":"2012-03-26T12:16:44.007Z","type":"message"}
{"nick":"indutny","message":"\"stack\" as CS structure","date":"2012-03-26T12:16:56.265Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: why do you create Cons-es with NULL on either side?","date":"2012-03-26T12:20:04.360Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: on only one side actually","date":"2012-03-26T12:20:13.294Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: it seems to me that that should be trivial to eliminate","date":"2012-03-26T12:20:24.914Z","type":"message"}
{"nick":"indutny","message":"when cons string is flatten, right side is nulled and left will point to flattened string","date":"2012-03-26T12:20:26.312Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: how's so?","date":"2012-03-26T12:20:33.127Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: well what v8 does is it has an empty flat string object in the roots","date":"2012-03-26T12:20:51.906Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: so if they flatten a string they make the rhs the empty string","date":"2012-03-26T12:21:06.071Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: that's what I do","date":"2012-03-26T12:21:13.889Z","type":"message"}
{"nick":"indutny","message":"except I use NULL","date":"2012-03-26T12:21:17.829Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: so you can eliminate all the == NULL checks","date":"2012-03-26T12:21:20.021Z","type":"message"}
{"nick":"piscisaureus_","message":"like, in push_grey etc","date":"2012-03-26T12:21:25.786Z","type":"message"}
{"nick":"indutny","message":"aah","date":"2012-03-26T12:21:29.340Z","type":"message"}
{"nick":"indutny","message":"I can put nil here","date":"2012-03-26T12:21:32.991Z","type":"message"}
{"nick":"indutny","message":"good point","date":"2012-03-26T12:21:34.409Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: fixed, thanks","date":"2012-03-26T12:22:54.550Z","type":"message"}
{"nick":"indutny","message":"creationix: how are you doing that https://github.com/creationix/candor.io/blob/master/Makefile#L50","date":"2012-03-26T12:27:25.114Z","type":"message"}
{"nick":"indutny","message":"If I'll put %.h here https://github.com/indutny/candor/blob/master/Makefile#L68","date":"2012-03-26T12:27:43.875Z","type":"message"}
{"nick":"indutny","message":"everything will stop working","date":"2012-03-26T12:27:47.657Z","type":"message"}
{"nick":"creationix","message":"hmm, that shouldn't work","date":"2012-03-26T12:29:06.956Z","type":"message"}
{"nick":"creationix","message":"(mine)","date":"2012-03-26T12:29:10.372Z","type":"message"}
{"nick":"indutny","message":"creationix: it starts running strange build commands for me","date":"2012-03-26T12:29:22.495Z","type":"message"}
{"nick":"creationix","message":"oh nevermind","date":"2012-03-26T12:29:25.300Z","type":"message"}
{"nick":"indutny","message":"with -Isrc/","date":"2012-03-26T12:29:26.614Z","type":"message"}
{"nick":"indutny","message":"creationix: ?","date":"2012-03-26T12:29:43.085Z","type":"message"}
{"nick":"creationix","message":"the only gotcha about make wildcards is the first dependencty needs to be the wildcard dependency","date":"2012-03-26T12:30:26.982Z","type":"message"}
{"nick":"creationix","message":"I once put \"build\" first","date":"2012-03-26T12:30:33.207Z","type":"message"}
{"nick":"creationix","message":"and very strange things happened","date":"2012-03-26T12:30:38.304Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2012-03-26T12:30:49.461Z","type":"message"}
{"nick":"creationix","message":"so make sure the %.h is after the %.cc","date":"2012-03-26T12:31:28.397Z","type":"message"}
{"nick":"creationix","message":"$< is the first one","date":"2012-03-26T12:31:49.627Z","type":"message"}
{"nick":"indutny","message":"well it is","date":"2012-03-26T12:31:54.814Z","type":"message"}
{"nick":"indutny","message":"can you try adding this?","date":"2012-03-26T12:32:00.278Z","type":"message"}
{"nick":"creationix","message":"ok","date":"2012-03-26T12:32:14.082Z","type":"message"}
{"nick":"creationix","message":"indutny, seems to work, except not all your .cc files have .h files to go with them","date":"2012-03-26T12:35:13.367Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2012-03-26T12:35:56.231Z","type":"message"}
{"nick":"indutny","message":"that may be the case!","date":"2012-03-26T12:36:01.420Z","type":"message"}
{"nick":"creationix","message":"even empty files will help","date":"2012-03-26T12:36:21.871Z","type":"message"}
{"nick":"creationix","message":"just something for make to check against","date":"2012-03-26T12:36:30.971Z","type":"message"}
{"nick":"creationix","message":"`touch src/x64/fullgen-x64.h && touch src/x64/stubs-x64.h`","date":"2012-03-26T12:37:00.281Z","type":"message"}
{"nick":"indutny","message":"hell yeah!","date":"2012-03-26T12:38:17.985Z","type":"message"}
{"nick":"indutny","message":":D","date":"2012-03-26T12:38:18.523Z","type":"message"}
{"nick":"indutny","message":"creationix: thanks, https://github.com/indutny/candor/commit/895368106eb2f8f24e41bcc7e69c1120c322b159","date":"2012-03-26T12:40:12.768Z","type":"message"}
{"nick":"indutny","message":"that means no more -B for candor.io and candor :)","date":"2012-03-26T12:40:41.466Z","type":"message"}
{"nick":"indutny","message":"finally","date":"2012-03-26T12:40:42.484Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: the cons string impl looks good to me","date":"2012-03-26T12:41:36.248Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: cool, thanks for reviewing!","date":"2012-03-26T12:41:52.817Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: I don't know whether your queue approach is faster than v8's recursive flattening","date":"2012-03-26T12:41:54.297Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: wow","date":"2012-03-26T12:42:04.520Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: how are they managing big depth?","date":"2012-03-26T12:42:09.213Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: my recursive approach was segfaulting on cons with depth 200000","date":"2012-03-26T12:42:27.761Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: they flatten out of order","date":"2012-03-26T12:42:28.780Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: and they recurse on the short end and iterate on the long side","date":"2012-03-26T12:42:48.756Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: hm... but both sides may be long","date":"2012-03-26T12:43:02.026Z","type":"message"}
{"nick":"indutny","message":"cons + cons","date":"2012-03-26T12:43:13.074Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: that means that you have to create a really big string to overflow the heap (so that the string wouldn't fit on the heap anyway)","date":"2012-03-26T12:43:13.905Z","type":"message"}
{"nick":"indutny","message":"well, recursion is faster","date":"2012-03-26T12:43:34.841Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: well you can only create such a situation by creating a tree shape","date":"2012-03-26T12:43:35.516Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: that's it","date":"2012-03-26T12:43:47.004Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: but also possible to do a = 'long-string' + a","date":"2012-03-26T12:44:02.197Z","type":"message"}
{"nick":"indutny","message":"and tree will grow on right side","date":"2012-03-26T12:44:11.021Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: yeah, so that triggers recursion once","date":"2012-03-26T12:44:20.919Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: looks like I don't understand what kind of recursion you're talking about","date":"2012-03-26T12:44:40.225Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: but then in the flatten function that is called recursively it will iterate over the long trail","date":"2012-03-26T12:44:45.052Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: they make the recursion vs iteration decision every time","date":"2012-03-26T12:44:56.136Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: btw - the v8 implementation of flattening to utf8 is really pathetic at the moment.","date":"2012-03-26T12:45:24.509Z","type":"message"}
{"nick":"piscisaureus_","message":"because out of order flattening is not possible there","date":"2012-03-26T12:45:34.454Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, you still working on string issues?","date":"2012-03-26T12:45:49.149Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: unfortunately, yes","date":"2012-03-26T12:47:01.526Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: so, do you have any comments on that?","date":"2012-03-26T12:49:47.131Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-26T12:51:02.844Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: recursion thing looks very unstable to me","date":"2012-03-26T12:51:14.427Z","type":"message"}
{"nick":"indutny","message":"but I may be wrong","date":"2012-03-26T12:51:19.453Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: I don't think it is really unstable","date":"2012-03-26T12:52:19.797Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: it is somewhat fragile because it relies on the fact that an allocation failure will happen before a flattening operation is started that might overflow the stack","date":"2012-03-26T12:52:57.600Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: hehe","date":"2012-03-26T12:53:09.001Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: yes, that's it","date":"2012-03-26T12:53:12.563Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: but v8 has limited heap","date":"2012-03-26T12:53:16.425Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: so they know it better","date":"2012-03-26T12:53:23.144Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: candor's heap grow on-demand","date":"2012-03-26T12:53:27.140Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: v8's heap can also grow on demand","date":"2012-03-26T12:54:03.606Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: I thought it has an upper limit","date":"2012-03-26T12:54:19.879Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: which should be specified before execution","date":"2012-03-26T12:54:31.215Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: anyway, dunno how, but candor was segfaulting :D","date":"2012-03-26T12:54:49.130Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: on stack overflow","date":"2012-03-26T12:54:54.108Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, no, sorry, unicode is a mess","date":"2012-03-26T12:55:19.529Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: yeah but on x64 you can now set the v8 heap limit to *crazy big*","date":"2012-03-26T12:55:20.720Z","type":"message"}
{"nick":"indutny","message":"hehe","date":"2012-03-26T12:55:27.592Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: what's the purpose of that limit, btw?","date":"2012-03-26T12:55:33.701Z","type":"message"}
{"nick":"creationix","message":"I prefer languages where the string primitive is just binary data and then unicode is a library on top of that","date":"2012-03-26T12:55:39.184Z","type":"message"}
{"nick":"indutny","message":"creationix: ++","date":"2012-03-26T12:55:45.935Z","type":"message"}
{"nick":"kohai","message":"creationix has 6 cherry juices","date":"2012-03-26T12:55:46.092Z","type":"message"}
{"nick":"indutny","message":"definitely","date":"2012-03-26T12:55:47.823Z","type":"message"}
{"nick":"indutny","message":"two-byte string are awful","date":"2012-03-26T12:55:53.665Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: isn't it? ;)","date":"2012-03-26T12:56:00.486Z","type":"message"}
{"nick":"indutny","message":"s/string/strings","date":"2012-03-26T12:56:12.589Z","type":"message"}
{"nick":"creationix","message":"well awful or not, it's javascript","date":"2012-03-26T12:56:13.409Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: actually, I think that if you would make the v8 heap reallybig then you could trigger a stack overflow flattening. I don't think they considered the option","date":"2012-03-26T12:56:15.940Z","type":"message"}
{"nick":"creationix","message":"the language isn't going away","date":"2012-03-26T12:56:18.094Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: and segfaulting on stack overflow is expected","date":"2012-03-26T12:56:31.774Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: yes","date":"2012-03-26T12:56:36.708Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: because you will hit a guard page","date":"2012-03-26T12:56:41.000Z","type":"message"}
{"nick":"creationix","message":"hmm new node vunlerability? ;)","date":"2012-03-26T12:56:48.740Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: odd that it was happening on 200000 recursion iteration","date":"2012-03-26T12:56:52.369Z","type":"message"}
{"nick":"indutny","message":"creationix: hahahaha","date":"2012-03-26T12:56:58.511Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: well not one that will trigger in chrome","date":"2012-03-26T12:57:07.382Z","type":"message"}
{"nick":"indutny","message":"creationix: and not on every node server","date":"2012-03-26T12:57:18.120Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: or I would just have earned myself a new car :-p","date":"2012-03-26T12:57:18.320Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: hey, that's my idea :)","date":"2012-03-26T12:57:25.707Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: dunno if I agree with you on the binary strings thing","date":"2012-03-26T12:58:36.789Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: but I do think that exposing the underlying representation makes sense","date":"2012-03-26T12:58:50.598Z","type":"message"}
{"nick":"piscisaureus_","message":"or hmm","date":"2012-03-26T12:59:11.379Z","type":"message"}
{"nick":"piscisaureus_","message":"maybe not","date":"2012-03-26T12:59:15.454Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: https://github.com/v8/v8/blob/master/src/objects.cc#L6728-6778","date":"2012-03-26T12:59:24.926Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: recursion","date":"2012-03-26T13:00:37.448Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, I guess it depends on what the language is for.  If you only deal with character strings, then why not treat the contents as characters.  Unicode is good for that.","date":"2012-03-26T13:01:26.950Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: well, the thing is that you need a 2^N -1 strings to get depth (N-1)","date":"2012-03-26T13:01:49.065Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, but in networking, byte strings are pretty common","date":"2012-03-26T13:01:56.171Z","type":"message"}
{"nick":"creationix","message":"that's a lot of strings","date":"2012-03-26T13:03:05.086Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-26T13:03:26.643Z","type":"message"}
{"nick":"creationix","message":"1^(N-1) won't work becuse it iterates in single chains right?","date":"2012-03-26T13:03:32.582Z","type":"message"}
{"nick":"indutny","message":"sorry?","date":"2012-03-26T13:03:51.183Z","type":"message"}
{"nick":"creationix","message":"well, does the tree have to have two children at every node (be a full binary tree)","date":"2012-03-26T13:04:17.404Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: yeah, that's why languages need a native buffer type, and an easy way to cast buffers to strings and vice versa (preferrably zero copy)","date":"2012-03-26T13:04:44.275Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: just memcpy in candor :)","date":"2012-03-26T13:05:14.152Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, then there is mutability of these buffers","date":"2012-03-26T13:05:24.838Z","type":"message"}
{"nick":"creationix","message":"in most cases, you don't need mutable buffers, just a way to build up buffers","date":"2012-03-26T13:05:49.917Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: yeah but given that the minimum cons length is 8 you also need to allocate (2^N-1)*8 bytes before you can flatten a string which requires depth N","date":"2012-03-26T13:06:28.722Z","type":"message"}
{"nick":"creationix","message":"cons buffers where the nodes can be things like UInt32, Int8, char[17], etc","date":"2012-03-26T13:06:28.923Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: 13","date":"2012-03-26T13:06:47.487Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: at least in my trunk's clone","date":"2012-03-26T13:07:01.944Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: I think in v8 it's 8 or so","date":"2012-03-26T13:07:11.062Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: I seen const=13","date":"2012-03-26T13:07:23.503Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_:   // minimum length for a cons string.","date":"2012-03-26T13:07:37.071Z","type":"message"}
{"nick":"indutny","message":"  static const int kminlength = 13;","date":"2012-03-26T13:07:37.274Z","type":"message"}
{"nick":"indutny","message":"src/objects.h","date":"2012-03-26T13:07:48.389Z","type":"message"}
{"nick":"piscisaureus_","message":"ah, right","date":"2012-03-26T13:08:11.138Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: although this does not mean that a cons can never be shorter than 1","date":"2012-03-26T13:08:38.468Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: of course","date":"2012-03-26T13:08:45.918Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: it's just for runtime","date":"2012-03-26T13:08:50.745Z","type":"message"}
{"nick":"indutny","message":"but concatenating \"1\" + \"1\" will end in normal string","date":"2012-03-26T13:09:03.239Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: if you do \"verylongstring + 'a'\" then I think it will always make another cons","date":"2012-03-26T13:09:11.833Z","type":"message"}
{"nick":"indutny","message":"that's too","date":"2012-03-26T13:09:20.018Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: so if you do `for(;;) s += 'a';` then you will end up with conses of 1","date":"2012-03-26T13:09:52.145Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, indutny, do either of you know if it would be faster to pass uv_write the flattened string or the invidual parts as a vector?","date":"2012-03-26T13:10:13.775Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: umm. uv-win has no support for writev except for tcp atm :-(","date":"2012-03-26T13:10:58.196Z","type":"message"}
{"nick":"creationix","message":"so then uv would have to flatten it or is it a ton of syscalls?","date":"2012-03-26T13:11:24.416Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: well right now libuv just asserts if you use writev on a pipe or on a file","date":"2012-03-26T13:12:34.257Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: not on unix of course","date":"2012-03-26T13:12:39.708Z","type":"message"}
{"nick":"creationix","message":"ouch","date":"2012-03-26T13:12:52.452Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: but on unix it should be faster with one caveat","date":"2012-03-26T13:13:02.620Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: libuv will malloc memory to store the vectors if you do uv_write","date":"2012-03-26T13:13:20.908Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: so if you send a lot of vectors that point to strings that are only a couple bytes in size the overhead of that is probably bigger than just flattening","date":"2012-03-26T13:13:49.476Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: but if the strings are long then yes, writev is preferrable","date":"2012-03-26T13:14:01.282Z","type":"message"}
{"nick":"piscisaureus_","message":"(just checked the situation with ben too)","date":"2012-03-26T13:14:13.979Z","type":"message"}
{"nick":"creationix","message":"hmm","date":"2012-03-26T13:14:18.341Z","type":"message"}
{"nick":"creationix","message":"so malloc does have memory overhead","date":"2012-03-26T13:14:29.109Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: yes","date":"2012-03-26T13:14:33.851Z","type":"message"}
{"nick":"creationix","message":"I was wondering how it knew how much to free","date":"2012-03-26T13:14:37.122Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: but memory overhead is not so much of the issue - it's the time overhead :-)","date":"2012-03-26T13:14:54.181Z","type":"message"}
{"nick":"creationix","message":"yeah, malloc is kinda slow","date":"2012-03-26T13:15:04.353Z","type":"message"}
{"nick":"creationix","message":"I have noticed that","date":"2012-03-26T13:15:17.885Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: btw - I take patches for writev support :-p","date":"2012-03-26T13:15:42.921Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: although I am afraid your religion does not allow you to write patches for uv-win","date":"2012-03-26T13:16:04.919Z","type":"message"}
{"nick":"creationix","message":"ok, so the case that I'm using candor cons strings to build large binary strings out of thousands of tiny (~4byte) chunks, it's better to flatten in candor","date":"2012-03-26T13:16:09.918Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: yeah definitely","date":"2012-03-26T13:16:21.018Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, hey, I have two windows machines on my desk","date":"2012-03-26T13:16:37.651Z","type":"message"}
{"nick":"creationix","message":"(they just happen to both be booted into linux atm)","date":"2012-03-26T13:16:47.748Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: you should consider that if the string is small than flattening requires you to copy 4 bytes","date":"2012-03-26T13:16:53.426Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: creating a vector means setting a pointer and a length which is 16 bytes :-)","date":"2012-03-26T13:17:11.458Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: kinda obvious innit ;-)","date":"2012-03-26T13:17:18.980Z","type":"message"}
{"nick":"creationix","message":"I guess I can't reuse the candor pointers since it's a tree and writev needs a flat vector","date":"2012-03-26T13:17:56.762Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: also, the sweet spot is probably with bigger strings, because of (a) the malloc overhead and (b) the overhead of the kernel accessing userspace pages.","date":"2012-03-26T13:18:44.407Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: which requires validation of those pages etc. The more pages involved, the more pain we have to incur.","date":"2012-03-26T13:19:11.046Z","type":"message"}
{"nick":"bnoordhuis","date":"2012-03-26T13:21:03.191Z","type":"join"}
{"nick":"bnoordhuis","message":"creationix: speak to me","date":"2012-03-26T13:21:17.174Z","type":"message"}
{"nick":"indutny","message":"oooh","date":"2012-03-26T13:22:35.184Z","type":"message"}
{"nick":"indutny","message":"who's there :)","date":"2012-03-26T13:22:39.710Z","type":"message"}
{"nick":"indutny","message":"btw, malloc is badly working when called from different threads","date":"2012-03-26T13:22:54.580Z","type":"message"}
{"nick":"bnoordhuis","message":"depends on the malloc implementation","date":"2012-03-26T13:23:11.075Z","type":"message"}
{"nick":"bnoordhuis","message":"glibc's is quite smart","date":"2012-03-26T13:23:19.171Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: yes, various implementations suffers from different things :)","date":"2012-03-26T13:23:40.655Z","type":"message"}
{"nick":"creationix","message":"bnoordhuis, hello","date":"2012-03-26T13:28:52.801Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: https://github.com/indutny/candor/commit/aedc93fce7cf01ea736d45bfd81a1f925ea2a19b","date":"2012-03-26T13:29:07.841Z","type":"message"}
{"nick":"creationix","message":"bnoordhuis, what about C++ new?","date":"2012-03-26T13:29:21.181Z","type":"message"}
{"nick":"indutny","message":"creationix: the same hell","date":"2012-03-26T13:29:49.697Z","type":"message"}
{"nick":"indutny","message":"AFAIK","date":"2012-03-26T13:29:57.931Z","type":"message"}
{"nick":"creationix","message":"wow multithreading cross-platform sucks","date":"2012-03-26T13:30:11.239Z","type":"message"}
{"nick":"indutny","message":"hahaha","date":"2012-03-26T13:30:17.491Z","type":"message"}
{"nick":"indutny","message":"hell yes","date":"2012-03-26T13:30:23.179Z","type":"message"}
{"nick":"indutny","message":"cross-platform *anything* sucks","date":"2012-03-26T13:30:42.291Z","type":"message"}
{"nick":"creationix","message":"people are wanting me to add threading and writev support to luvit","date":"2012-03-26T13:31:05.210Z","type":"message"}
{"nick":"creationix","message":"I see now that will make windows support even more painful","date":"2012-03-26T13:31:12.482Z","type":"message"}
{"nick":"creationix","message":"actually, threading via uv_work_t should be safe right?","date":"2012-03-26T13:31:30.514Z","type":"message"}
{"nick":"creationix","message":"(I would treat it like a webworker)","date":"2012-03-26T13:31:41.264Z","type":"message"}
{"nick":"creationix","message":"or use candor Isolate in candor.io","date":"2012-03-26T13:31:59.646Z","type":"message"}
{"nick":"creationix","message":"with uv_work_t","date":"2012-03-26T13:32:10.697Z","type":"message"}
{"nick":"indutny","message":"err","date":"2012-03-26T13:32:20.957Z","type":"message"}
{"nick":"indutny","message":"do not rely on that now :)","date":"2012-03-26T13:32:24.543Z","type":"message"}
{"nick":"indutny","message":"Isolate is not really thread-safe now","date":"2012-03-26T13:32:33.863Z","type":"message"}
{"nick":"indutny","message":"Isolate::GetCurrent() needs to be fixed","date":"2012-03-26T13:32:39.490Z","type":"message"}
{"nick":"indutny","message":"and Zone should be relocated into isolate (which is simple)","date":"2012-03-26T13:32:50.186Z","type":"message"}
{"nick":"indutny","message":"but yeah, Isolate is very cheap","date":"2012-03-26T13:34:04.954Z","type":"message"}
{"nick":"indutny","message":"probably much chepear than in v8","date":"2012-03-26T13:34:15.606Z","type":"message"}
{"nick":"creationix","message":"ok, so eventually, we can use Isolate for threading","date":"2012-03-26T13:34:26.929Z","type":"message"}
{"nick":"indutny","message":"if you'll reduce initial heap size from 2mb to 200kb","date":"2012-03-26T13:34:31.134Z","type":"message"}
{"nick":"indutny","message":"creationix: yes","date":"2012-03-26T13:34:41.116Z","type":"message"}
{"nick":"indutny","message":"creationix: but data sharing is a problem","date":"2012-03-26T13:34:45.972Z","type":"message"}
{"nick":"creationix","message":"for sure","date":"2012-03-26T13:34:52.762Z","type":"message"}
{"nick":"piscisaureus_","message":"indutny: lgtm","date":"2012-03-26T13:34:56.129Z","type":"message"}
{"nick":"indutny","message":"I do not want to implement parallel GC","date":"2012-03-26T13:34:56.760Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: cool! :)","date":"2012-03-26T13:34:59.697Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: it even works :D","date":"2012-03-26T13:35:02.768Z","type":"message"}
{"nick":"creationix","message":"so each Isolate won't have it's own gc?","date":"2012-03-26T13:35:18.009Z","type":"message"}
{"nick":"indutny","message":"piscisaureus_: thanks","date":"2012-03-26T13:35:18.212Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: libuv has threading support","date":"2012-03-26T13:35:19.874Z","type":"message"}
{"nick":"indutny","message":"creationix: it will","date":"2012-03-26T13:35:23.992Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: uv_thread_create etc","date":"2012-03-26T13:35:28.662Z","type":"message"}
{"nick":"piscisaureus_","message":"creationix: as well as locks","date":"2012-03-26T13:35:34.714Z","type":"message"}
{"nick":"piscisaureus_","message":"even SRW locks","date":"2012-03-26T13:35:42.379Z","type":"message"}
{"nick":"indutny","message":"creationix: in languages with natural thread support, Parallel GC is used","date":"2012-03-26T13:35:44.529Z","type":"message"}
{"nick":"creationix","message":"piscisaureus_, is that new? I don't remember seeing that","date":"2012-03-26T13:35:49.278Z","type":"message"}
{"nick":"indutny","message":"creationix: but in candor - Mark-Copying","date":"2012-03-26T13:35:58.025Z","type":"message"}
{"nick":"creationix","message":"indutny, yeah, I'm fine with each isolate not sharing anything","date":"2012-03-26T13:36:17.770Z","type":"message"}
{"nick":"indutny","message":"ok","date":"2012-03-26T13:36:26.218Z","type":"message"}
{"nick":"indutny","message":"though, it's possible to move to shared data","date":"2012-03-26T13:36:36.592Z","type":"message"}
{"nick":"indutny","message":"if we really will want that","date":"2012-03-26T13:36:44.878Z","type":"message"}
{"nick":"creationix","message":"could you transfer a candor object between isolates","date":"2012-03-26T13:36:59.062Z","type":"message"}
{"nick":"indutny","message":"creationix: by copying","date":"2012-03-26T13:37:05.016Z","type":"message"}
{"nick":"indutny","message":"recursive copying","date":"2012-03-26T13:37:10.457Z","type":"message"}
{"nick":"creationix","message":"so it's never shared, but doesn't require a copy or serialize/deserialize?","date":"2012-03-26T13:37:14.935Z","type":"message"}
{"nick":"creationix","message":"I guess deep copy is easier","date":"2012-03-26T13:37:38.767Z","type":"message"}
{"nick":"indutny","message":"it's essentially the same thing as serialize/deserialize","date":"2012-03-26T13:37:50.662Z","type":"message"}
{"nick":"creationix","message":"the language doesn't have the concept of losing ownership of an object","date":"2012-03-26T13:37:55.593Z","type":"message"}
{"nick":"indutny","message":"well, sort of","date":"2012-03-26T13:37:57.591Z","type":"message"}
{"nick":"indutny","message":"creationix: it's just impossible in current heap implementation","date":"2012-03-26T13:38:08.294Z","type":"message"}
{"nick":"creationix","message":"I don't need it any time soon","date":"2012-03-26T13:38:20.397Z","type":"message"}
{"nick":"indutny","message":"creationix: heap is a continuous region of memory","date":"2012-03-26T13:38:23.065Z","type":"message"}
{"nick":"indutny","message":"creationix: so separate heaps have separate chunks of memory","date":"2012-03-26T13:38:38.020Z","type":"message"}
{"nick":"creationix","message":"I see","date":"2012-03-26T13:38:46.879Z","type":"message"}
{"nick":"creationix","message":"so it has to copy at the moment","date":"2012-03-26T13:38:52.958Z","type":"message"}
{"nick":"bnoordhuis","message":"creationix: sorry, back","date":"2012-03-26T13:38:57.232Z","type":"message"}
{"nick":"bnoordhuis","message":"had to explain the basics to bert, you know how it is","date":"2012-03-26T13:39:08.961Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-26T13:39:09.157Z","type":"message"}
{"nick":"creationix","message":"though, a recursive C++ copy is probably fast enough","date":"2012-03-26T13:39:10.861Z","type":"message"}
{"nick":"creationix","message":"bnoordhuis, heh, try explaining C/C++ to me ;)","date":"2012-03-26T13:39:27.496Z","type":"message"}
{"nick":"bnoordhuis","message":"creationix: new and new[] are backed by malloc on most if not all platforms","date":"2012-03-26T13:39:40.454Z","type":"message"}
{"nick":"creationix","message":"bnoordhuis, ok then","date":"2012-03-26T13:39:54.083Z","type":"message"}
{"nick":"bnoordhuis","message":"you can do pool-based allocation with placement new btw","date":"2012-03-26T13:40:18.286Z","type":"message"}
{"nick":"bnoordhuis","message":"if you're afraid of the overhead of new / new[], that is","date":"2012-03-26T13:40:31.471Z","type":"message"}
{"nick":"indutny","message":"creationix: aka Zone","date":"2012-03-26T13:40:43.969Z","type":"message"}
{"nick":"indutny","message":"creationix: and freelist","date":"2012-03-26T13:40:54.066Z","type":"message"}
{"nick":"creationix","message":"luvit does naive malloc all over the place and it's still twice as fast as node","date":"2012-03-26T13:41:16.104Z","type":"message"}
{"nick":"indutny","message":"as I know malloc adds some tagging to bytes that it allocates","date":"2012-03-26T13:41:16.711Z","type":"message"}
{"nick":"indutny","message":"to determine sizeof chunk","date":"2012-03-26T13:41:22.261Z","type":"message"}
{"nick":"creationix","message":"the vm seems to make a larger difference","date":"2012-03-26T13:41:27.078Z","type":"message"}
{"nick":"creationix","message":"indutny, that makes sense","date":"2012-03-26T13:41:46.655Z","type":"message"}
{"nick":"Raynos","reason":"Read error: Connection reset by peer","date":"2012-03-26T13:47:48.009Z","type":"quit"}
{"nick":"indutny","reason":"Ping timeout: 246 seconds","date":"2012-03-26T13:47:53.891Z","type":"quit"}
{"nick":"piscisaureus_","message":"creationix: https://github.com/joyent/libuv/blob/master/include/uv.h#L1410-1440","date":"2012-03-26T13:59:12.026Z","type":"message"}
{"nick":"indutny","date":"2012-03-26T14:26:02.076Z","type":"join"}
{"nick":"indutny","message":"creationix: heya","date":"2012-03-26T14:26:27.843Z","type":"message"}
{"nick":"indutny","message":"it works, thanks :)","date":"2012-03-26T14:26:37.851Z","type":"message"}
{"nick":"creationix","message":":)","date":"2012-03-26T14:31:43.240Z","type":"message"}
{"nick":"indutny","message":"interesting","date":"2012-03-26T14:37:00.707Z","type":"message"}
{"nick":"indutny","message":"I'm not operator of this channel","date":"2012-03-26T14:37:09.291Z","type":"message"}
{"nick":"indutny","message":"are you?","date":"2012-03-26T14:37:15.377Z","type":"message"}
{"nick":"indutny_","date":"2012-03-26T14:40:37.590Z","type":"join"}
{"nick":"Raynos","date":"2012-03-26T14:49:18.468Z","type":"join"}
{"nick":"creationix","message":"indutny, you need to msg chanserv","date":"2012-03-26T14:52:11.856Z","type":"message"}
{"nick":"creationix","message":"I assume you registered the channel","date":"2012-03-26T14:52:17.619Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-26T14:52:24.580Z","type":"message"}
{"nick":"indutny","message":"I registered it","date":"2012-03-26T14:52:31.143Z","type":"message"}
{"nick":"indutny","message":"but /op doesn't work","date":"2012-03-26T14:52:34.166Z","type":"message"}
{"nick":"indutny","message":"should I message it about it?","date":"2012-03-26T14:52:40.488Z","type":"message"}
{"nick":"creationix","message":"so I think it's /msg ChanServ op #luvit indutly","date":"2012-03-26T14:52:47.464Z","type":"message"}
{"nick":"creationix","message":"(minus typos)","date":"2012-03-26T14:52:55.787Z","type":"message"}
{"nick":"indutny","message":"hell yeah :)","date":"2012-03-26T14:53:10.208Z","type":"message"}
{"nick":"indutny","message":"thanks once again","date":"2012-03-26T14:53:12.132Z","type":"message"}
{"nick":"creationix","message":"I lost my op status a while back when my creationix.com server restarted","date":"2012-03-26T14:53:16.178Z","type":"message"}
{"nick":"creationix","message":"you have to give it to me","date":"2012-03-26T14:53:19.497Z","type":"message"}
{"nick":"creationix","message":"chanserv won't","date":"2012-03-26T14:53:21.698Z","type":"message"}
{"nick":"creationix","message":"(if you want me to have it that is)","date":"2012-03-26T14:53:27.610Z","type":"message"}
{"nick":"creationix","message":"indutny, I wonder if we should rename \"new\" to be \"clone\"","date":"2012-03-26T14:55:17.242Z","type":"message"}
{"nick":"creationix","message":"\"new\" may confuse people","date":"2012-03-26T14:55:24.288Z","type":"message"}
{"nick":"indutny","message":"that's what I thought too","date":"2012-03-26T14:55:39.522Z","type":"message"}
{"nick":"indutny","message":"creationix: https://github.com/creationix/candor.io/pull/3","date":"2012-03-26T14:55:46.310Z","type":"message"}
{"nick":"indutny","message":"creationix: can you put that on mailing list?","date":"2012-03-26T14:56:06.146Z","type":"message"}
{"nick":"indutny","message":"creationix: trying to keep everyone notified","date":"2012-03-26T14:56:12.847Z","type":"message"}
{"nick":"indutny","message":"(I mean new=>clone)","date":"2012-03-26T14:56:22.122Z","type":"message"}
{"nick":"creationix","message":"sure","date":"2012-03-26T14:56:24.613Z","type":"message"}
{"nick":"indutny","message":"cool","date":"2012-03-26T14:59:28.573Z","type":"message"}
{"nick":"indutny","message":"thank you","date":"2012-03-26T14:59:29.631Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-03-26T15:01:58.627Z","type":"quit"}
{"nick":"piscisaureus_","date":"2012-03-26T15:06:04.164Z","type":"join"}
{"nick":"indutny","message":"ok, it builds on osx now :)","date":"2012-03-26T15:07:13.542Z","type":"message"}
{"nick":"indutny","message":"now time to fix those stupid segfaults","date":"2012-03-26T15:07:20.336Z","type":"message"}
{"nick":"creationix","message":":)","date":"2012-03-26T15:08:17.896Z","type":"message"}
{"nick":"indutny","message":"crap RuntimeLookupProperty assertion","date":"2012-03-26T15:10:19.832Z","type":"message"}
{"nick":"bradleymeck","date":"2012-03-26T15:21:12.265Z","type":"join"}
{"nick":"bradleymeck","reason":"Client Quit","date":"2012-03-26T15:21:30.471Z","type":"quit"}
{"nick":"indutny","message":"ok, fixed","date":"2012-03-26T15:27:57.702Z","type":"message"}
{"nick":"piscisaureus_","reason":"Ping timeout: 265 seconds","date":"2012-03-26T15:34:27.971Z","type":"quit"}
{"nick":"indutny","message":"or not :(","date":"2012-03-26T15:34:30.078Z","type":"message"}
{"nick":"indutny","message":"or yes :D","date":"2012-03-26T15:35:43.094Z","type":"message"}
{"nick":"indutny","message":"creationix: basically, it fails now, because you're putting Handle<Object>* in req->data and then using it as Object*","date":"2012-03-26T15:51:50.720Z","type":"message"}
