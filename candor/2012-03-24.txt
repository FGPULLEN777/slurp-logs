{"nick":"karterk","date":"2012-03-24T01:41:10.431Z","type":"join"}
{"nick":"karterk","reason":"Ping timeout: 260 seconds","date":"2012-03-24T01:45:43.432Z","type":"quit"}
{"nick":"mmalecki","date":"2012-03-24T15:43:36.768Z","type":"join"}
{"nick":"indutny","date":"2012-03-24T15:43:36.966Z","type":"join"}
{"nick":"kohai","date":"2012-03-24T15:43:36.966Z","type":"join"}
{"nick":"creationix","date":"2012-03-24T15:43:36.966Z","type":"join"}
{"nick":"ryah","date":"2012-03-24T15:43:36.966Z","type":"join"}
{"nick":"indutny","message":"whoa","date":"2012-03-24T16:50:40.616Z","type":"message"}
{"nick":"indutny","message":"https://github.com/indutny/candor/commit/d3602c04dc4e2073ea3f4b3388a7778e92c12693","date":"2012-03-24T16:51:01.751Z","type":"message"}
{"nick":"indutny","message":"stack trace support","date":"2012-03-24T16:51:04.855Z","type":"message"}
{"nick":"indutny","message":"creationix: ^^","date":"2012-03-24T16:51:07.902Z","type":"message"}
{"nick":"indutny","message":"I promised ya","date":"2012-03-24T16:51:09.634Z","type":"message"}
{"nick":"hij1nx","date":"2012-03-24T16:53:01.871Z","type":"join"}
{"nick":"indutny","message":"hij1nx: hey man! https://github.com/indutny/candor/commit/d3602c04dc4e2073ea3f4b3388a7778e92c12693 :)","date":"2012-03-24T16:54:12.053Z","type":"message"}
{"nick":"hij1nx","message":"oh nice!","date":"2012-03-24T16:54:49.156Z","type":"message"}
{"nick":"hij1nx","message":"source map","date":"2012-03-24T16:55:14.195Z","type":"message"}
{"nick":"indutny","message":"hehe","date":"2012-03-24T16:55:17.103Z","type":"message"}
{"nick":"indutny","message":"yes, that was very interesting thing to implement","date":"2012-03-24T16:55:28.205Z","type":"message"}
{"nick":"indutny","message":"AVL trees, etc","date":"2012-03-24T16:55:32.651Z","type":"message"}
{"nick":"hij1nx","action":"likes","date":"2012-03-24T16:55:37.945Z","type":"action"}
{"nick":"hij1nx","message":"oh! so it looks like i could super easily just get the AST?","date":"2012-03-24T16:56:16.193Z","type":"message"}
{"nick":"hij1nx","message":"from a candor script?","date":"2012-03-24T16:56:22.808Z","type":"message"}
{"nick":"indutny","message":"hm... yes, but in C++","date":"2012-03-24T16:56:39.220Z","type":"message"}
{"nick":"indutny","message":"source maps has nothing to do with AST","date":"2012-03-24T16:56:57.258Z","type":"message"}
{"nick":"hij1nx","message":"hehe i moved on","date":"2012-03-24T16:57:05.664Z","type":"message"}
{"nick":"hij1nx","message":"I'm still code reading","date":"2012-03-24T16:57:08.530Z","type":"message"}
{"nick":"hij1nx","message":"im talking about getting the AST","date":"2012-03-24T16:57:13.984Z","type":"message"}
{"nick":"hij1nx","message":"wouldn't need something like uglify","date":"2012-03-24T16:57:42.297Z","type":"message"}
{"nick":"indutny","message":"hm... I've no candor interface to parser","date":"2012-03-24T16:58:27.212Z","type":"message"}
{"nick":"hij1nx","message":"would be awesome like functionname.toAST();","date":"2012-03-24T16:58:34.705Z","type":"message"}
{"nick":"indutny","message":"heh, it's possible","date":"2012-03-24T16:58:48.612Z","type":"message"}
{"nick":"indutny","message":"I know function's offset and length in the source","date":"2012-03-24T16:58:59.987Z","type":"message"}
{"nick":"hij1nx","message":"that would be bad ass","date":"2012-03-24T16:59:01.515Z","type":"message"}
{"nick":"hij1nx","message":"I'm not sure how significant new lines prevent JS from doing function-keyword-less functions...","date":"2012-03-24T17:00:25.488Z","type":"message"}
{"nick":"hij1nx","message":"./be says we can't have that in JS because of significant newlines.","date":"2012-03-24T17:00:59.239Z","type":"message"}
{"nick":"indutny","message":"huh?","date":"2012-03-24T17:00:59.543Z","type":"message"}
{"nick":"indutny","message":"well","date":"2012-03-24T17:01:13.456Z","type":"message"}
{"nick":"hij1nx","message":"./be (brendan eich)","date":"2012-03-24T17:01:14.113Z","type":"message"}
{"nick":"indutny","message":"yes, I know that","date":"2012-03-24T17:01:20.701Z","type":"message"}
{"nick":"hij1nx","message":";)","date":"2012-03-24T17:01:23.579Z","type":"message"}
{"nick":"indutny","message":"function a","date":"2012-03-24T17:01:36.780Z","type":"message"}
{"nick":"indutny","message":"()","date":"2012-03-24T17:01:37.528Z","type":"message"}
{"nick":"indutny","message":"{","date":"2012-03-24T17:01:38.331Z","type":"message"}
{"nick":"indutny","message":"}","date":"2012-03-24T17:01:38.716Z","type":"message"}
{"nick":"indutny","message":"that's possible in es","date":"2012-03-24T17:01:41.982Z","type":"message"}
{"nick":"hij1nx","message":"ASI rules are the problem?","date":"2012-03-24T17:02:03.932Z","type":"message"}
{"nick":"indutny","message":"what ASI stands for?","date":"2012-03-24T17:02:15.102Z","type":"message"}
{"nick":"hij1nx","message":"automatic semicolon insertion","date":"2012-03-24T17:02:23.254Z","type":"message"}
{"nick":"indutny","message":"ah, yes then","date":"2012-03-24T17:02:33.009Z","type":"message"}
{"nick":"hij1nx","message":"ahh","date":"2012-03-24T17:02:36.481Z","type":"message"}
{"nick":"indutny","message":"it'll insert ; after a","date":"2012-03-24T17:02:37.949Z","type":"message"}
{"nick":"hij1nx","message":"yep","date":"2012-03-24T17:02:40.443Z","type":"message"}
{"nick":"indutny","message":"so function's syntax should be changed dramatically","date":"2012-03-24T17:02:52.926Z","type":"message"}
{"nick":"alejandromg","date":"2012-03-24T17:02:53.124Z","type":"join"}
{"nick":"hij1nx","message":"I'm not sure how he associates additional `significant new line` rules with the risk of delivering ES6","date":"2012-03-24T17:03:46.255Z","type":"message"}
{"nick":"indutny","message":"btw, we should invite ./be here :)","date":"2012-03-24T17:03:51.344Z","type":"message"}
{"nick":"hij1nx","message":"yea for sure","date":"2012-03-24T17:03:57.426Z","type":"message"}
{"nick":"indutny","message":"do you know his IRC nickname?","date":"2012-03-24T17:04:05.801Z","type":"message"}
{"nick":"hij1nx","message":"i can't remember, I've seen him in #node.js before though","date":"2012-03-24T17:04:42.060Z","type":"message"}
{"nick":"hij1nx","message":"#moz maybe?","date":"2012-03-24T17:04:55.115Z","type":"message"}
{"nick":"hij1nx","message":"nope","date":"2012-03-24T17:05:03.662Z","type":"message"}
{"nick":"hij1nx","message":"#mozilla","date":"2012-03-24T17:05:07.957Z","type":"message"}
{"nick":"indutny","message":"hm... we can still do it at twitter :)","date":"2012-03-24T17:05:15.929Z","type":"message"}
{"nick":"hij1nx","message":"yep","date":"2012-03-24T17:05:27.501Z","type":"message"}
{"nick":"indutny","message":"one sec, finishing \"Hello world\" email","date":"2012-03-24T17:05:30.057Z","type":"message"}
{"nick":"hij1nx","message":"this is essentially a self-balancing tree yeah? like a splay tree? https://github.com/indutny/candor/commit/d3602c04dc4e2073ea3f4b3388a7778e92c12693#L14R356","date":"2012-03-24T17:08:12.372Z","type":"message"}
{"nick":"indutny","message":"not like splay, but yes","date":"2012-03-24T17:08:21.079Z","type":"message"}
{"nick":"indutny","message":"that's AVL tree","date":"2012-03-24T17:08:24.571Z","type":"message"}
{"nick":"hij1nx","message":"I'm not familiar with AVLTree","date":"2012-03-24T17:08:52.994Z","type":"message"}
{"nick":"hij1nx","message":"what is the primary difference?","date":"2012-03-24T17:09:02.632Z","type":"message"}
{"nick":"indutny","message":"splay is changing tree on reads","date":"2012-03-24T17:09:12.142Z","type":"message"}
{"nick":"hij1nx","action":"lazy","date":"2012-03-24T17:09:13.902Z","type":"action"}
{"nick":"hij1nx","message":"ok, I'm fumbling through reading it =)","date":"2012-03-24T17:09:31.341Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-24T17:10:25.286Z","type":"message"}
{"nick":"hij1nx","message":"ok i see how this is working, cool","date":"2012-03-24T17:10:31.278Z","type":"message"}
{"nick":"hij1nx","message":"i was doing this a while agoâ€¦ https://github.com/hij1nx/forest/blob/master/lib/splayTree.js","date":"2012-03-24T17:11:01.180Z","type":"message"}
{"nick":"indutny","message":"oh","date":"2012-03-24T17:11:15.322Z","type":"message"}
{"nick":"indutny","message":"cool :)","date":"2012-03-24T17:11:16.909Z","type":"message"}
{"nick":"hij1nx","message":"i wanted to put together a huge collections of trees","date":"2012-03-24T17:11:23.101Z","type":"message"}
{"nick":"indutny","message":"what v8 is using it for?","date":"2012-03-24T17:11:32.062Z","type":"message"}
{"nick":"hij1nx","message":"i got too busy =)","date":"2012-03-24T17:11:39.064Z","type":"message"}
{"nick":"indutny","message":"hahah","date":"2012-03-24T17:11:51.107Z","type":"message"}
{"nick":"indutny","message":"kk","date":"2012-03-24T17:11:53.269Z","type":"message"}
{"nick":"hij1nx","message":"bench marks","date":"2012-03-24T17:12:10.192Z","type":"message"}
{"nick":"hij1nx","message":"its in the trunk for benches","date":"2012-03-24T17:12:22.743Z","type":"message"}
{"nick":"indutny","message":"interesting","date":"2012-03-24T17:12:41.491Z","type":"message"}
{"nick":"indutny","message":"curious what they're using for sourcemaps","date":"2012-03-24T17:12:52.647Z","type":"message"}
{"nick":"hij1nx","message":"i just saw paul irish talking about that","date":"2012-03-24T17:14:07.403Z","type":"message"}
{"nick":"hij1nx","message":"looking for the article","date":"2012-03-24T17:14:10.618Z","type":"message"}
{"nick":"indutny","message":"nono","date":"2012-03-24T17:14:23.073Z","type":"message"}
{"nick":"indutny","message":"not that sourcemaps","date":"2012-03-24T17:14:28.104Z","type":"message"}
{"nick":"indutny","message":"sorry, wrong term","date":"2012-03-24T17:14:32.097Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-24T17:14:36.523Z","type":"message"}
{"nick":"indutny","message":"they should have some sort of assembly-address to js-offset mapping","date":"2012-03-24T17:15:03.686Z","type":"message"}
{"nick":"hij1nx","message":"ahh =)","date":"2012-03-24T17:15:09.012Z","type":"message"}
{"nick":"hij1nx","message":"i have too many conversations going at the same time...","date":"2012-03-24T17:15:26.498Z","type":"message"}
{"nick":"indutny","message":"hehe","date":"2012-03-24T17:15:48.617Z","type":"message"}
{"nick":"indutny","message":"multitasking doesn't really work well for humans","date":"2012-03-24T17:15:59.008Z","type":"message"}
{"nick":"hij1nx","message":"I'm looking through trunk and I'm not really seeing that code =(","date":"2012-03-24T17:17:06.264Z","type":"message"}
{"nick":"alejandromg","reason":"Quit: leaving","date":"2012-03-24T17:18:58.915Z","type":"quit"}
{"nick":"hij1nx","message":"okâ€¦ back to cloud sockets...","date":"2012-03-24T17:19:37.718Z","type":"message"}
{"nick":"indutny","message":"hij1nx: ++","date":"2012-03-24T17:21:06.995Z","type":"message"}
{"nick":"kohai","message":"hij1nx has 9 kohais","date":"2012-03-24T17:21:07.198Z","type":"message"}
{"nick":"mmalecki","message":"hij1nx: ++","date":"2012-03-24T17:21:10.583Z","type":"message"}
{"nick":"kohai","message":"hij1nx has 10 kohais","date":"2012-03-24T17:21:10.778Z","type":"message"}
{"nick":"alejandromg","date":"2012-03-24T17:42:06.956Z","type":"join"}
{"nick":"hij1nx","reason":"Quit: hij1nx","date":"2012-03-24T18:04:03.175Z","type":"quit"}
{"nick":"alejandromg","new_nick":"alejandromg_w","date":"2012-03-24T18:08:47.812Z","type":"nick"}
{"nick":"creationix","message":"hello everyone","date":"2012-03-24T18:09:00.071Z","type":"message"}
{"nick":"creationix","message":"brenden is in the #jsapi room all the time, but it's not freenode, it's mozilla's own irc server","date":"2012-03-24T18:09:28.448Z","type":"message"}
{"nick":"creationix","message":"I like the stack trace API","date":"2012-03-24T18:10:11.114Z","type":"message"}
{"nick":"creationix","message":"I can add stack traces to my error messages in candor.io now","date":"2012-03-24T18:10:24.659Z","type":"message"}
{"nick":"indutny","message":"hi","date":"2012-03-24T18:10:38.282Z","type":"message"}
{"nick":"creationix","message":"btw, how persistent is this array?","date":"2012-03-24T18:10:55.761Z","type":"message"}
{"nick":"creationix","message":"and is it mutable","date":"2012-03-24T18:11:02.536Z","type":"message"}
{"nick":"indutny","message":"creationix: totally not persistent","date":"2012-03-24T18:11:05.399Z","type":"message"}
{"nick":"indutny","message":"yes it's mutable","date":"2012-03-24T18:11:08.379Z","type":"message"}
{"nick":"indutny","message":"it's generated on each __$trace() call","date":"2012-03-24T18:11:15.130Z","type":"message"}
{"nick":"indutny","message":"I can implement an API for you","date":"2012-03-24T18:11:19.047Z","type":"message"}
{"nick":"creationix","message":"the v8 stack trace API (JS facing) is persistent and mutable","date":"2012-03-24T18:11:32.537Z","type":"message"}
{"nick":"creationix","message":"meaning if I insert random properties in a level of the stack, I can retrieve it later on","date":"2012-03-24T18:11:47.493Z","type":"message"}
{"nick":"indutny","message":"that won't work","date":"2012-03-24T18:11:55.630Z","type":"message"}
{"nick":"creationix","message":"ok","date":"2012-03-24T18:12:05.528Z","type":"message"}
{"nick":"creationix","message":"if it did work, I could implement a try..catch like semantic in pure candor","date":"2012-03-24T18:12:18.879Z","type":"message"}
{"nick":"creationix","message":"that's how I implement pure js domains in node","date":"2012-03-24T18:12:28.618Z","type":"message"}
{"nick":"creationix","message":"it can even cross async calls if I control all the event sources","date":"2012-03-24T18:12:55.304Z","type":"message"}
{"nick":"creationix","message":"chained stack traces","date":"2012-03-24T18:13:01.571Z","type":"message"}
{"nick":"creationix","message":"and chained error handlers","date":"2012-03-24T18:13:07.409Z","type":"message"}
{"nick":"creationix","message":"so, for example, you register an error handler at the start of an http request, and then when an uncaught exception happens, I can trace it down to the http request that it originates from and clean up resources and send that client a 500 response","date":"2012-03-24T18:14:15.805Z","type":"message"}
{"nick":"creationix","message":"all I need from candor is a stack-local storage","date":"2012-03-24T18:15:14.347Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2012-03-24T18:15:30.602Z","type":"message"}
{"nick":"indutny","message":"so you want to store somethink in stack-trace array","date":"2012-03-24T18:16:56.727Z","type":"message"}
{"nick":"indutny","message":"something*","date":"2012-03-24T18:17:05.648Z","type":"message"}
{"nick":"creationix","message":"right","date":"2012-03-24T18:27:29.472Z","type":"message"}
{"nick":"alejandromg_w","new_nick":"alejandromg","date":"2012-03-24T18:28:43.553Z","type":"nick"}
{"nick":"creationix","message":"my try(fn) function will store something in the stack and call fn, then remove it when fn returns, but it throw(err) is called later in the stack, it will look for any stored handlers","date":"2012-03-24T18:28:50.707Z","type":"message"}
{"nick":"indutny","message":"oooh","date":"2012-03-24T18:30:37.414Z","type":"message"}
{"nick":"indutny","message":"let me think","date":"2012-03-24T18:30:39.742Z","type":"message"}
{"nick":"creationix","message":"it doesn't have to be in the stack exactly","date":"2012-03-24T18:30:39.942Z","type":"message"}
{"nick":"creationix","message":"A single stack local variable is fine","date":"2012-03-24T18:30:46.511Z","type":"message"}
{"nick":"creationix","message":"I can still nest try by creating my own list and storing it in that single slot","date":"2012-03-24T18:31:03.334Z","type":"message"}
{"nick":"creationix","message":"I just use the v8 stack array because it's stack local and persistent","date":"2012-03-24T18:31:42.407Z","type":"message"}
{"nick":"indutny","message":"can't that be managed in candor-land?","date":"2012-03-24T18:32:30.854Z","type":"message"}
{"nick":"creationix","message":"I guess what I can't do is force the stack to unwind","date":"2012-03-24T18:32:38.061Z","type":"message"}
{"nick":"creationix","message":"how would I store a stack local variable in pure candor?","date":"2012-03-24T18:32:58.441Z","type":"message"}
{"nick":"creationix","message":"I don't control every function call","date":"2012-03-24T18:33:03.588Z","type":"message"}
{"nick":"creationix","message":"my programming language professor always said exceptions were evil","date":"2012-03-24T18:36:02.188Z","type":"message"}
{"nick":"creationix","message":"I don't understand why","date":"2012-03-24T18:36:05.320Z","type":"message"}
{"nick":"creationix","message":"of course he was into provable languages and ml variants","date":"2012-03-24T18:36:30.467Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2012-03-24T18:37:16.981Z","type":"message"}
{"nick":"indutny","message":"creationix: https://github.com/indutny/candor/commit/ea5ee4e8261216251c39410fa6ca3cb0fb132124","date":"2012-03-24T18:58:20.102Z","type":"message"}
{"nick":"creationix","message":"cool","date":"2012-03-24T19:00:43.113Z","type":"message"}
{"nick":"indutny","message":"exceptions are evil","date":"2012-03-24T19:24:47.727Z","type":"message"}
{"nick":"indutny","message":"like a goto","date":"2012-03-24T19:24:55.413Z","type":"message"}
{"nick":"mmalecki","message":"well, they are a bit like goto ;)","date":"2012-03-24T19:32:46.186Z","type":"message"}
{"nick":"indutny","message":"not really :)","date":"2012-03-24T19:35:21.724Z","type":"message"}
{"nick":"indutny","message":"but yes","date":"2012-03-24T19:35:25.454Z","type":"message"}
{"nick":"indutny","message":"goto are just jumps","date":"2012-03-24T19:35:26.521Z","type":"message"}
{"nick":"indutny","message":"exceptions are unwinding stack and sending some information to handler","date":"2012-03-24T19:35:47.637Z","type":"message"}
{"nick":"Raynos","date":"2012-03-24T19:41:51.893Z","type":"join"}
{"nick":"indutny","message":"creationix: I think pure candor exceptions won't behave well","date":"2012-03-24T19:42:57.802Z","type":"message"}
{"nick":"indutny","message":"creationix: that works fine in functional languages, because they're using CPS","date":"2012-03-24T19:43:13.799Z","type":"message"}
{"nick":"indutny","message":"creationix: and compiler transforms that stuff in optimized code","date":"2012-03-24T19:43:28.511Z","type":"message"}
{"nick":"indutny","message":"optimizing such level of abstraction in non-functional language is quite hard","date":"2012-03-24T19:43:44.305Z","type":"message"}
{"nick":"indutny","message":"so we should decide: either we need exceptions or not","date":"2012-03-24T19:44:46.431Z","type":"message"}
{"nick":"Raynos","message":"Is there a plan for candor -> js compiler","date":"2012-03-24T19:46:26.348Z","type":"message"}
{"nick":"Raynos","message":"or is the purpose of candor completely abstract from compliance with browsers / node / js environments","date":"2012-03-24T19:46:48.501Z","type":"message"}
{"nick":"Raynos","message":"Ah I see candor.io","date":"2012-03-24T19:48:32.670Z","type":"message"}
{"nick":"indutny","message":"Raynos: creationix was working on candor.js","date":"2012-03-24T19:59:24.833Z","type":"message"}
{"nick":"indutny","message":"but it's far from something working now : https://github.com/creationix/candor.js","date":"2012-03-24T19:59:45.946Z","type":"message"}
{"nick":"indutny","message":"though it shouldn't be really hard to implement (except non-string keys)","date":"2012-03-24T20:00:03.228Z","type":"message"}
{"nick":"Raynos","message":"I see","date":"2012-03-24T20:00:36.263Z","type":"message"}
{"nick":"indutny","message":"Raynos: candor itself is an abstract language which itself can't do any IO","date":"2012-03-24T20:00:53.528Z","type":"message"}
{"nick":"indutny","message":"Raynos: and should have bindings like in candor.io","date":"2012-03-24T20:01:00.594Z","type":"message"}
{"nick":"Raynos","message":"whats the purpose of it?","date":"2012-03-24T20:01:19.562Z","type":"message"}
{"nick":"Raynos","message":"What problem does it solve?","date":"2012-03-24T20:01:22.850Z","type":"message"}
{"nick":"indutny","message":"Raynos: of candor?","date":"2012-03-24T20:01:25.904Z","type":"message"}
{"nick":"Raynos","message":"Alternatively is candor just an experiment for fun","date":"2012-03-24T20:01:35.642Z","type":"message"}
{"nick":"indutny","message":"can't argue with that, developing candor is fun :)","date":"2012-03-24T20:01:54.274Z","type":"message"}
{"nick":"indutny","message":"though, it's purpose is to provide simple language with js-like semantics, but with less features, and, therefore, better performance","date":"2012-03-24T20:02:21.683Z","type":"message"}
{"nick":"indutny","message":"so I'm completely serious about it","date":"2012-03-24T20:02:56.162Z","type":"message"}
{"nick":"indutny","message":"Raynos: btw, join candor's google group: https://groups.google.com/forum/?fromgroups#!forum/candorlang","date":"2012-03-24T20:06:25.750Z","type":"message"}
{"nick":"Raynos","message":"I see","date":"2012-03-24T20:07:04.495Z","type":"message"}
{"nick":"Raynos","message":"Looking at it as a js dev I wonder what I need","date":"2012-03-24T20:07:15.448Z","type":"message"}
{"nick":"indutny","message":"Raynos: would be great if you'll put your ideas here: https://groups.google.com/forum/?fromgroups#!topic/candorlang/0ms6AvrQjYQ","date":"2012-03-24T20:08:01.940Z","type":"message"}
{"nick":"indutny","message":"candor is not a replacement for js, but it should solve a lot of WAT that people feel about js (though, I love JS with all my heart)","date":"2012-03-24T20:08:37.205Z","type":"message"}
{"nick":"hij1nx","date":"2012-03-24T20:10:58.998Z","type":"join"}
{"nick":"Raynos","message":"One thing I like is a way to do modules","date":"2012-03-24T20:12:01.333Z","type":"message"}
{"nick":"Raynos","message":"cross file development of some format","date":"2012-03-24T20:12:10.693Z","type":"message"}
{"nick":"hij1nx","reason":"Client Quit","date":"2012-03-24T20:14:25.592Z","type":"quit"}
{"nick":"hij1nx","date":"2012-03-24T20:15:52.100Z","type":"join"}
{"nick":"indutny","message":"Raynos: well, by default each compiled file has it's own global context","date":"2012-03-24T20:18:46.681Z","type":"message"}
{"nick":"indutny","message":"implementing modules is up to IO bindings developer","date":"2012-03-24T20:18:56.468Z","type":"message"}
{"nick":"Raynos","message":"I can see that","date":"2012-03-24T20:19:05.455Z","type":"message"}
{"nick":"Raynos","message":"however you have an oppurtunity to do modules correctly at the syntax level","date":"2012-03-24T20:19:16.300Z","type":"message"}
{"nick":"Raynos","message":"that might be worth exploring","date":"2012-03-24T20:19:21.357Z","type":"message"}
{"nick":"indutny","message":"right","date":"2012-03-24T20:19:24.963Z","type":"message"}
{"nick":"indutny","message":"what's your proposal","date":"2012-03-24T20:19:28.852Z","type":"message"}
{"nick":"indutny","message":"can you send it to the group?","date":"2012-03-24T20:19:34.567Z","type":"message"}
{"nick":"Raynos","message":"No clue what to propose","date":"2012-03-24T20:19:40.868Z","type":"message"}
{"nick":"hij1nx","reason":"Quit: hij1nx","date":"2012-03-24T20:21:04.392Z","type":"quit"}
{"nick":"Raynos","message":"Are functions hoisted up like javascript is?","date":"2012-03-24T20:22:00.611Z","type":"message"}
{"nick":"indutny","message":"no","date":"2012-03-24T20:22:19.708Z","type":"message"}
{"nick":"indutny","message":"but they may be","date":"2012-03-24T20:22:28.161Z","type":"message"}
{"nick":"indutny","message":"if there's a need for that","date":"2012-03-24T20:22:37.816Z","type":"message"}
{"nick":"indutny","message":"a() { } <=> a = () {} now","date":"2012-03-24T20:22:46.059Z","type":"message"}
{"nick":"Raynos","message":"I personally like that feature for code organization but thats opinionated","date":"2012-03-24T20:22:47.386Z","type":"message"}
{"nick":"Raynos","message":"Is there anything equivelant to arguments?","date":"2012-03-24T20:23:26.985Z","type":"message"}
{"nick":"indutny","message":"creationix proposed some sort of vargs via \"...\", but I haven't decided about that yet","date":"2012-03-24T20:23:59.734Z","type":"message"}
{"nick":"hij1nx","date":"2012-03-24T20:29:18.683Z","type":"join"}
{"nick":"Raynos","message":"I was thinking that","date":"2012-03-24T20:34:25.073Z","type":"message"}
{"nick":"Raynos","message":"https://gist.github.com/b86ed871069c90a55bb7","date":"2012-03-24T20:34:26.018Z","type":"message"}
{"nick":"Raynos","message":"I rewrote my pd js lib using candor (I think)","date":"2012-03-24T20:34:33.466Z","type":"message"}
{"nick":"indutny","message":"hm... looks good!","date":"2012-03-24T20:35:14.874Z","type":"message"}
{"nick":"indutny","message":"can I ask you to put that into group too?","date":"2012-03-24T20:35:26.732Z","type":"message"}
{"nick":"indutny","message":"I like it, it's like in lua, but w/o vague \"args\" variable that poisons on-stack vars","date":"2012-03-24T20:36:11.470Z","type":"message"}
{"nick":"Raynos","message":"I quite like ... as well","date":"2012-03-24T20:38:29.477Z","type":"message"}
{"nick":"indutny","message":"Raynos: thanks","date":"2012-03-24T20:39:21.451Z","type":"message"}
{"nick":"indutny","message":"going to sleep now","date":"2012-03-24T20:39:23.431Z","type":"message"}
{"nick":"indutny","message":"ttyl","date":"2012-03-24T20:39:24.729Z","type":"message"}
{"nick":"Raynos","message":"gn","date":"2012-03-24T20:39:26.627Z","type":"message"}
{"nick":"indutny","new_nick":"indutny_sleeping","date":"2012-03-24T20:39:27.385Z","type":"nick"}
{"nick":"hij1nx","reason":"Quit: hij1nx","date":"2012-03-24T20:51:00.508Z","type":"quit"}
{"nick":"hij1nx","date":"2012-03-24T21:09:57.588Z","type":"join"}
{"nick":"hij1nx","reason":"Quit: hij1nx","date":"2012-03-24T21:19:38.519Z","type":"quit"}
{"nick":"creationix","message":"did I really just say \"if we has\" on the mailing list?","date":"2012-03-24T21:24:01.863Z","type":"message"}
{"nick":"creationix","action":"hangs head in shame","date":"2012-03-24T21:24:07.366Z","type":"action"}
{"nick":"creationix","message":"heh, stated goal of harmony rest arguments \"Provide a better arguments so we can deprecate, obsolete, and some years hence burn with fire / salt the earth anything to do with arguments, foo.arguments, etc.\"","date":"2012-03-24T21:31:07.462Z","type":"message"}
{"nick":"Raynos","message":"I quite like the rest arguments","date":"2012-03-24T21:47:34.943Z","type":"message"}
{"nick":"Raynos","message":"Is there an equivelant to functionReference.length in candor?","date":"2012-03-24T21:47:47.049Z","type":"message"}
{"nick":"Raynos","message":"For example express and async.js send different parameters based on the parameters the function accepts","date":"2012-03-24T21:48:11.663Z","type":"message"}
{"nick":"hij1nx","date":"2012-03-24T21:50:44.349Z","type":"join"}
{"nick":"creationix","message":"Raynos, still here","date":"2012-03-24T22:30:29.603Z","type":"message"}
{"nick":"creationix","message":"?","date":"2012-03-24T22:30:32.079Z","type":"message"}
{"nick":"Raynos","message":"yes","date":"2012-03-24T22:31:30.186Z","type":"message"}
{"nick":"Raynos","message":"functions dont have properties :(","date":"2012-03-24T22:31:56.960Z","type":"message"}
{"nick":"Raynos","message":"that is sad","date":"2012-03-24T22:31:58.643Z","type":"message"}
{"nick":"creationix","message":"keeps things simple","date":"2012-03-24T22:34:38.406Z","type":"message"}
{"nick":"hij1nx","reason":"Ping timeout: 240 seconds","date":"2012-03-24T22:34:38.630Z","type":"quit"}
{"nick":"Raynos","message":"But I like treating functions as objects","date":"2012-03-24T22:34:51.496Z","type":"message"}
{"nick":"creationix","message":"as do I","date":"2012-03-24T22:35:19.626Z","type":"message"}
{"nick":"creationix","message":"but it's not required","date":"2012-03-24T22:35:22.570Z","type":"message"}
{"nick":"creationix","message":"and it does complicate things","date":"2012-03-24T22:35:28.660Z","type":"message"}
{"nick":"Raynos","message":"I see your point","date":"2012-03-24T22:35:41.019Z","type":"message"}
{"nick":"creationix","message":"anyway, function arity should be using sizeof","date":"2012-03-24T22:35:54.210Z","type":"message"}
{"nick":"creationix","message":"I think that' fair to add if indutny_sleeping can implement it","date":"2012-03-24T22:36:03.757Z","type":"message"}
{"nick":"creationix","message":"so I think destructuring is too much","date":"2012-03-24T22:37:48.716Z","type":"message"}
{"nick":"creationix","message":"and it's just sugar","date":"2012-03-24T22:37:52.036Z","type":"message"}
{"nick":"creationix","message":"but varargs is a primitive","date":"2012-03-24T22:37:56.375Z","type":"message"}
{"nick":"creationix","message":"it really limits the language if it's not there somehow","date":"2012-03-24T22:38:06.943Z","type":"message"}
{"nick":"creationix","message":"I want a way for people to add sugar to the language a'la coffeescript","date":"2012-03-24T22:39:18.945Z","type":"message"}
{"nick":"creationix","message":"with sourcemap","date":"2012-03-24T22:39:24.042Z","type":"message"}
{"nick":"creationix","message":"then candor can just provide the bare primitives and focus on being an awesome vm","date":"2012-03-24T22:39:37.931Z","type":"message"}
{"nick":"Raynos","message":":)","date":"2012-03-24T22:40:55.365Z","type":"message"}
{"nick":"Raynos","message":"I think function arity with sizeof is useful and I would still push for functions to have properties because it gets annoying if they can't","date":"2012-03-24T22:41:19.812Z","type":"message"}
{"nick":"Raynos","message":"and since candor has no exception","date":"2012-03-24T22:41:57.942Z","type":"message"}
{"nick":"Raynos","message":"what would adding properties at run time to a function do?","date":"2012-03-24T22:42:13.260Z","type":"message"}
{"nick":"hij1nx_","date":"2012-03-24T23:03:46.050Z","type":"join"}
{"nick":"hij1nx_","reason":"Quit: hij1nx_","date":"2012-03-24T23:13:33.033Z","type":"quit"}
{"nick":"creationix","message":"what does adding properties to a number do","date":"2012-03-24T23:19:26.967Z","type":"message"}
{"nick":"creationix","message":"candor basically does nothing or returns nil when there is a problem","date":"2012-03-24T23:19:43.810Z","type":"message"}
