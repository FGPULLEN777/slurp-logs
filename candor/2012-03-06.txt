{"nick":"piscisaureus_","new_nick":"piscisaureus","date":"2012-03-06T00:03:20.124Z","type":"nick"}
{"nick":"mmalecki","new_nick":"mmalecki[zzz]","date":"2012-03-06T00:13:55.302Z","type":"nick"}
{"nick":"piscisaureus","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-03-06T00:28:12.975Z","type":"quit"}
{"nick":"alejandromg","date":"2012-03-06T00:28:29.807Z","type":"join"}
{"nick":"piscisaureus_","date":"2012-03-06T00:54:03.469Z","type":"join"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2012-03-06T04:17:36.538Z","type":"quit"}
{"nick":"creationix","message":"bah, going back to the 185 release","date":"2012-03-06T04:19:38.492Z","type":"message"}
{"nick":"creationix","message":"oops, wrong channel","date":"2012-03-06T04:19:47.458Z","type":"message"}
{"nick":"alejandromg","reason":"Quit: Lost terminal","date":"2012-03-06T05:40:17.227Z","type":"quit"}
{"nick":"mmalecki[zzz]","reason":"Quit: Reconnecting","date":"2012-03-06T09:11:22.817Z","type":"quit"}
{"nick":"mmalecki[zzz]","date":"2012-03-06T09:11:40.302Z","type":"join"}
{"nick":"mmalecki[zzz]","new_nick":"mmalecki","date":"2012-03-06T09:11:50.189Z","type":"nick"}
{"nick":"mmalecki","reason":"Client Quit","date":"2012-03-06T09:11:56.559Z","type":"quit"}
{"nick":"mmalecki","date":"2012-03-06T09:12:13.333Z","type":"join"}
{"nick":"mmalecki","new_nick":"away","date":"2012-03-06T09:14:13.281Z","type":"nick"}
{"nick":"away","new_nick":"mmalecki[away]","date":"2012-03-06T09:14:20.673Z","type":"nick"}
{"nick":"indutny_sleeping","message":"evening","date":"2012-03-06T13:18:33.055Z","type":"message"}
{"nick":"indutny_sleeping","message":"morning","date":"2012-03-06T13:18:34.834Z","type":"message"}
{"nick":"indutny_sleeping","new_nick":"indutny","date":"2012-03-06T13:18:36.960Z","type":"nick"}
{"nick":"creationix","message":"morning","date":"2012-03-06T13:19:28.498Z","type":"message"}
{"nick":"creationix","message":"we need a way to remove object properties","date":"2012-03-06T13:29:03.288Z","type":"message"}
{"nick":"creationix","message":"just reuse \"delete\" from js?","date":"2012-03-06T13:29:12.386Z","type":"message"}
{"nick":"indutny","message":"creationix: yeah, sounds good","date":"2012-03-06T13:34:46.478Z","type":"message"}
{"nick":"indutny","message":"ah, wait","date":"2012-03-06T13:34:49.851Z","type":"message"}
{"nick":"indutny","message":"why not just a.property = nil","date":"2012-03-06T13:34:59.741Z","type":"message"}
{"nick":"creationix","message":"that's what lua does","date":"2012-03-06T13:35:30.602Z","type":"message"}
{"nick":"indutny","message":"do we need to support nil values in hashmaps?","date":"2012-03-06T13:35:31.328Z","type":"message"}
{"nick":"indutny","message":"isn't it good?","date":"2012-03-06T13:35:39.120Z","type":"message"}
{"nick":"creationix","message":"it works fine except for json values that contain nils","date":"2012-03-06T13:35:42.352Z","type":"message"}
{"nick":"indutny","message":"aaah, JSON","date":"2012-03-06T13:35:53.060Z","type":"message"}
{"nick":"indutny","message":"ok, delete sounds fine then","date":"2012-03-06T13:36:10.009Z","type":"message"}
{"nick":"creationix","message":"so what happens when I try to read a non-existant property","date":"2012-03-06T13:36:41.539Z","type":"message"}
{"nick":"creationix","message":"a = {}; a.b","date":"2012-03-06T13:36:47.564Z","type":"message"}
{"nick":"creationix","message":"does it error or return nil?","date":"2012-03-06T13:36:56.732Z","type":"message"}
{"nick":"indutny","message":"nil","date":"2012-03-06T13:37:19.370Z","type":"message"}
{"nick":"creationix","message":"what about undefined variables","date":"2012-03-06T13:37:25.028Z","type":"message"}
{"nick":"indutny","message":"I should test it, but nil :)","date":"2012-03-06T13:37:26.068Z","type":"message"}
{"nick":"indutny","message":"nil === undefined","date":"2012-03-06T13:37:33.219Z","type":"message"}
{"nick":"creationix","message":"compile-time error or runtime error or nil?","date":"2012-03-06T13:37:44.779Z","type":"message"}
{"nick":"indutny","message":"for what?","date":"2012-03-06T13:38:02.472Z","type":"message"}
{"nick":"creationix","message":"I expect compile-time error, but just making sure","date":"2012-03-06T13:38:02.666Z","type":"message"}
{"nick":"creationix","message":"undefined variables","date":"2012-03-06T13:38:07.102Z","type":"message"}
{"nick":"indutny","message":"undefined variables have nil value","date":"2012-03-06T13:38:16.397Z","type":"message"}
{"nick":"indutny","message":"so it's the same as a[nil]","date":"2012-03-06T13:38:28.009Z","type":"message"}
{"nick":"indutny","message":"which is nil","date":"2012-03-06T13:38:30.066Z","type":"message"}
{"nick":"creationix","message":"do we want that behavior?","date":"2012-03-06T13:38:42.757Z","type":"message"}
{"nick":"indutny","message":"why not?","date":"2012-03-06T13:38:50.768Z","type":"message"}
{"nick":"creationix","message":"I can't think where it's useful","date":"2012-03-06T13:39:24.231Z","type":"message"}
{"nick":"creationix","message":"and it makes it harder to detect typos","date":"2012-03-06T13:39:30.457Z","type":"message"}
{"nick":"creationix","message":"strict mode in js disallows it","date":"2012-03-06T13:39:43.615Z","type":"message"}
{"nick":"indutny","message":"but js supports exceptions","date":"2012-03-06T13:39:54.805Z","type":"message"}
{"nick":"indutny","message":"candor has only runtime errors","date":"2012-03-06T13:40:02.457Z","type":"message"}
{"nick":"indutny","message":"which can be transformed to compile errors, actually","date":"2012-03-06T13:40:18.937Z","type":"message"}
{"nick":"indutny","message":"I need to add todo for this","date":"2012-03-06T13:40:25.793Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2012-03-06T13:41:25.085Z","type":"message"}
{"nick":"creationix","message":"right, compile errors should be possible since all local variables are explicit","date":"2012-03-06T13:43:27.633Z","type":"message"}
{"nick":"creationix","message":"also we need some hook into the compiler (limited eval for module loaders and such) and a way to read characters and bytes from strings","date":"2012-03-06T13:49:41.971Z","type":"message"}
{"nick":"indutny","message":"well, first of all, no eval inside candor","date":"2012-03-06T13:50:05.405Z","type":"message"}
{"nick":"indutny","message":"but eval will be available as C++ API","date":"2012-03-06T13:50:18.048Z","type":"message"}
{"nick":"creationix","message":"good enough","date":"2012-03-06T13:50:24.452Z","type":"message"}
{"nick":"indutny","message":"i.e. you can compile script which will use same Heap as one that you already have compiled","date":"2012-03-06T13:50:36.187Z","type":"message"}
{"nick":"creationix","message":"and inject local variables as if they were \"scope\"ed in","date":"2012-03-06T13:51:13.380Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2012-03-06T13:51:44.709Z","type":"message"}
{"nick":"indutny","message":"I think that won't work","date":"2012-03-06T13:51:49.440Z","type":"message"}
{"nick":"creationix","message":"or treat is as a function and they are arguments passed in?","date":"2012-03-06T13:52:04.720Z","type":"message"}
{"nick":"indutny","message":"it's already a function with a hidden declaration :D","date":"2012-03-06T13:52:24.692Z","type":"message"}
{"nick":"indutny","message":"anyway, why not just use globals?","date":"2012-03-06T13:53:08.523Z","type":"message"}
{"nick":"creationix","message":"I guess globals work, there is just the chance for name conflicts","date":"2012-03-06T13:53:26.706Z","type":"message"}
{"nick":"creationix","message":"module a requires module b requires module c","date":"2012-03-06T13:53:37.187Z","type":"message"}
{"nick":"creationix","message":"a is reading from global \"exports\", but requires b before returning","date":"2012-03-06T13:53:54.946Z","type":"message"}
{"nick":"indutny","message":"ok, we can solve this by giving different globals to each module","date":"2012-03-06T13:53:57.896Z","type":"message"}
{"nick":"indutny","message":"s/to/for","date":"2012-03-06T13:54:07.666Z","type":"message"}
{"nick":"creationix","message":"that works","date":"2012-03-06T13:54:11.675Z","type":"message"}
{"nick":"indutny","message":"global is essentially just a hashmap","date":"2012-03-06T13:54:26.756Z","type":"message"}
{"nick":"indutny","message":"so that's not a problem at all","date":"2012-03-06T13:54:33.916Z","type":"message"}
{"nick":"creationix","message":"global scope, function scope, upvalue scope, doesn't really matter.  As long as each one has a place","date":"2012-03-06T13:54:38.759Z","type":"message"}
{"nick":"creationix","message":"*as long as each module has a place to get it's injected values","date":"2012-03-06T13:55:52.783Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-03-06T14:17:16.775Z","type":"join"}
{"nick":"hij1nx","date":"2012-03-06T15:31:38.796Z","type":"join"}
{"nick":"piscisaureus__","date":"2012-03-06T15:53:13.226Z","type":"join"}
{"nick":"piscisaureus_","reason":"Read error: Connection reset by peer","date":"2012-03-06T15:53:24.606Z","type":"quit"}
{"nick":"piscisaureus__","reason":"Ping timeout: 248 seconds","date":"2012-03-06T15:59:12.026Z","type":"quit"}
