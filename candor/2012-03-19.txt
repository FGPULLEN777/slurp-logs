{"nick":"indutny","message":"creationix: woot be neat","date":"2012-03-19T00:45:48.908Z","type":"message"}
{"nick":"indutny","new_nick":"indutny_away","date":"2012-03-19T00:50:01.151Z","type":"nick"}
{"nick":"indutny_away","message":"s/woot/wood","date":"2012-03-19T01:10:32.191Z","type":"message"}
{"nick":"indutny_away","message":"s/wood/would","date":"2012-03-19T01:10:38.741Z","type":"message"}
{"nick":"indutny_away","message":":D","date":"2012-03-19T01:10:39.501Z","type":"message"}
{"nick":"indutny_away","message":"lol","date":"2012-03-19T01:10:40.272Z","type":"message"}
{"nick":"alejandromg","date":"2012-03-19T01:31:42.793Z","type":"join"}
{"nick":"karterk","date":"2012-03-19T01:45:31.044Z","type":"join"}
{"nick":"alejandromg","reason":"Ping timeout: 245 seconds","date":"2012-03-19T01:53:32.582Z","type":"quit"}
{"nick":"alejandromg","date":"2012-03-19T02:02:16.865Z","type":"join"}
{"nick":"alejandromg","reason":"Ping timeout: 248 seconds","date":"2012-03-19T02:09:53.982Z","type":"quit"}
{"nick":"alejandromg","date":"2012-03-19T02:10:16.858Z","type":"join"}
{"nick":"karterk_","date":"2012-03-19T02:25:44.226Z","type":"join"}
{"nick":"karterk","reason":"Ping timeout: 246 seconds","date":"2012-03-19T02:28:52.081Z","type":"quit"}
{"nick":"alejandromg","reason":"Ping timeout: 245 seconds","date":"2012-03-19T02:43:07.601Z","type":"quit"}
{"nick":"alejandromg","date":"2012-03-19T02:46:36.285Z","type":"join"}
{"nick":"karterk_","reason":"Remote host closed the connection","date":"2012-03-19T02:47:30.935Z","type":"quit"}
{"nick":"alejandr1mg","date":"2012-03-19T04:38:42.110Z","type":"join"}
{"nick":"alejandromg","reason":"Ping timeout: 244 seconds","date":"2012-03-19T04:39:35.352Z","type":"quit"}
{"nick":"alejandr1mg","reason":"Quit: leaving","date":"2012-03-19T05:56:07.719Z","type":"quit"}
{"nick":"indutny_away","new_nick":"indutny","date":"2012-03-19T09:19:27.476Z","type":"nick"}
{"nick":"karterk","date":"2012-03-19T09:44:12.673Z","type":"join"}
{"nick":"karterk","reason":"Ping timeout: 276 seconds","date":"2012-03-19T11:16:08.720Z","type":"quit"}
{"nick":"karterk","date":"2012-03-19T11:38:43.045Z","type":"join"}
{"nick":"mmalecki[zzz]","new_nick":"mmalecki","date":"2012-03-19T11:59:32.087Z","type":"nick"}
{"nick":"karterk","reason":"Remote host closed the connection","date":"2012-03-19T12:06:26.017Z","type":"quit"}
{"nick":"karterk","date":"2012-03-19T12:08:24.041Z","type":"join"}
{"nick":"karterk","reason":"Remote host closed the connection","date":"2012-03-19T12:08:46.115Z","type":"quit"}
{"nick":"creationix","message":"back","date":"2012-03-19T13:07:52.488Z","type":"message"}
{"nick":"indutny","message":"creationix: hi","date":"2012-03-19T13:09:57.422Z","type":"message"}
{"nick":"indutny","message":"creationix: invited you and few other people to the newly created group","date":"2012-03-19T13:10:11.868Z","type":"message"}
{"nick":"creationix","message":"group where?","date":"2012-03-19T13:10:41.138Z","type":"message"}
{"nick":"indutny","message":"creationix: google group","date":"2012-03-19T13:10:55.954Z","type":"message"}
{"nick":"indutny","message":"creationix: have you received email?","date":"2012-03-19T13:11:11.210Z","type":"message"}
{"nick":"creationix","message":"yep","date":"2012-03-19T13:11:22.867Z","type":"message"}
{"nick":"indutny","message":"creationix: https://groups.google.com/forum/?fromgroups#!forum/candorlang","date":"2012-03-19T13:11:23.865Z","type":"message"}
{"nick":"indutny","message":"cool","date":"2012-03-19T13:11:26.345Z","type":"message"}
{"nick":"creationix","message":"heh, the invite email is in russian","date":"2012-03-19T13:11:27.431Z","type":"message"}
{"nick":"indutny","message":"creationix: that's google's fault :)","date":"2012-03-19T13:11:48.198Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-03-19T13:11:56.343Z","type":"message"}
{"nick":"creationix","message":"it's ok, I just change the url to english http://groups.google.com/group/candorlang?hl=en","date":"2012-03-19T13:12:10.137Z","type":"message"}
{"nick":"indutny","message":"aah","date":"2012-03-19T13:12:20.575Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-19T13:12:22.511Z","type":"message"}
{"nick":"creationix","message":"so let's see if I can make more progress on candor.io today","date":"2012-03-19T13:15:13.969Z","type":"message"}
{"nick":"creationix","message":"still stuck on how to organize the code though","date":"2012-03-19T13:15:21.617Z","type":"message"}
{"nick":"indutny","message":"with that class stuff?","date":"2012-03-19T13:16:08.893Z","type":"message"}
{"nick":"creationix","message":"yeah","date":"2012-03-19T13:18:53.924Z","type":"message"}
{"nick":"creationix","message":"bert left for a ski trip","date":"2012-03-19T13:19:02.277Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2012-03-19T13:19:13.774Z","type":"message"}
{"nick":"indutny","message":"`whoa","date":"2012-03-19T14:29:44.612Z","type":"message"}
{"nick":"indutny","message":"inline object property lookup","date":"2012-03-19T14:30:54.101Z","type":"message"}
{"nick":"indutny","message":"should be a little bit faster now","date":"2012-03-19T14:31:13.760Z","type":"message"}
{"nick":"indutny","message":"s/inline/inlined","date":"2012-03-19T14:31:18.350Z","type":"message"}
{"nick":"indutny","message":"creationix: do you need a help with candor.io?","date":"2012-03-19T14:31:27.881Z","type":"message"}
{"nick":"creationix","message":"if you want","date":"2012-03-19T14:31:56.576Z","type":"message"}
{"nick":"creationix","message":"I can't devote much time to it","date":"2012-03-19T14:32:02.121Z","type":"message"}
{"nick":"creationix","message":"depends on how fast you want it done","date":"2012-03-19T14:32:07.261Z","type":"message"}
{"nick":"creationix","message":"I don't mind doing it myself, it will just take a while","date":"2012-03-19T14:32:14.437Z","type":"message"}
{"nick":"creationix","message":"if I can get http-bench.lua ported to candor, it would be interesting to see how it performs","date":"2012-03-19T14:33:52.701Z","type":"message"}
{"nick":"creationix","message":"that means I need tcp and stream from libuv bound","date":"2012-03-19T14:34:01.401Z","type":"message"}
{"nick":"creationix","message":"as well as http_parser","date":"2012-03-19T14:34:06.614Z","type":"message"}
{"nick":"creationix","message":"I see you changed the Isolate syntax error API","date":"2012-03-19T14:35:25.447Z","type":"message"}
{"nick":"indutny","message":"em","date":"2012-03-19T14:36:04.733Z","type":"message"}
{"nick":"indutny","message":"really?","date":"2012-03-19T14:36:10.225Z","type":"message"}
{"nick":"creationix","message":"removed Syntax","date":"2012-03-19T14:36:40.901Z","type":"message"}
{"nick":"indutny","message":"aah","date":"2012-03-19T14:36:46.953Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-19T14:36:47.772Z","type":"message"}
{"nick":"indutny","message":"that's because I've introduced compiler errors","date":"2012-03-19T14:36:56.483Z","type":"message"}
{"nick":"creationix","message":"I see","date":"2012-03-19T14:37:00.632Z","type":"message"}
{"nick":"creationix","message":"I figured it was something like that","date":"2012-03-19T14:37:04.865Z","type":"message"}
{"nick":"creationix","message":"ok, so I think I'll just punt on inheritance for now","date":"2012-03-19T14:37:27.831Z","type":"message"}
{"nick":"creationix","message":"handle is just one method","date":"2012-03-19T14:37:33.113Z","type":"message"}
{"nick":"creationix","message":"handle->Close","date":"2012-03-19T14:37:37.814Z","type":"message"}
{"nick":"creationix","message":"I'll implement Tcp which has Stream and Handle methods too","date":"2012-03-19T14:37:58.331Z","type":"message"}
{"nick":"creationix","message":"and Timer will have Handle too","date":"2012-03-19T14:38:02.685Z","type":"message"}
{"nick":"creationix","message":"then later when we add Pipe, Tty, and all the other types, we'll need to find a way to not duplicate code","date":"2012-03-19T14:38:22.832Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2012-03-19T14:38:23.471Z","type":"message"}
{"nick":"indutny","message":"I'll help you then","date":"2012-03-19T14:38:31.453Z","type":"message"}
{"nick":"indutny","message":"when you'll get to that point","date":"2012-03-19T14:38:36.903Z","type":"message"}
{"nick":"creationix","message":"ok","date":"2012-03-19T14:38:39.567Z","type":"message"}
{"nick":"creationix","message":"btw, how can I implement something like node buffers?","date":"2012-03-19T14:39:04.848Z","type":"message"}
{"nick":"creationix","message":"mutable char* arrays","date":"2012-03-19T14:39:22.150Z","type":"message"}
{"nick":"creationix","message":"Currently, it would be bufferSet(buffer, 0, 5)","date":"2012-03-19T14:39:43.660Z","type":"message"}
{"nick":"creationix","message":"or something like that","date":"2012-03-19T14:39:46.254Z","type":"message"}
{"nick":"creationix","message":"where buffer is cdata","date":"2012-03-19T14:39:49.770Z","type":"message"}
{"nick":"creationix","message":"which if that's the API style we want, it's fine","date":"2012-03-19T14:40:14.295Z","type":"message"}
{"nick":"creationix","message":"Buffer.setUInt8(buffer, 0, 5)","date":"2012-03-19T14:40:29.805Z","type":"message"}
{"nick":"creationix","message":"and so forth","date":"2012-03-19T14:40:35.424Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2012-03-19T14:40:51.447Z","type":"message"}
{"nick":"indutny","message":"buffers are just cdata","date":"2012-03-19T14:40:55.470Z","type":"message"}
{"nick":"creationix","message":"so no buffer[5] = 3","date":"2012-03-19T14:41:05.814Z","type":"message"}
{"nick":"creationix","message":"or sizeof buffer","date":"2012-03-19T14:41:12.015Z","type":"message"}
{"nick":"indutny","message":"well, sizeof may work","date":"2012-03-19T14:41:18.260Z","type":"message"}
{"nick":"indutny","message":"but it'll work for all cdata's","date":"2012-03-19T14:41:26.891Z","type":"message"}
{"nick":"creationix","message":"right, but no user-specified sizeof function","date":"2012-03-19T14:41:41.031Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-19T14:41:46.709Z","type":"message"}
{"nick":"creationix","message":"or custom [] access","date":"2012-03-19T14:41:48.260Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-19T14:41:52.359Z","type":"message"}
{"nick":"creationix","message":"that's fine, just wondering","date":"2012-03-19T14:41:57.652Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-19T14:42:01.240Z","type":"message"}
{"nick":"creationix","message":"so on OOP style programming","date":"2012-03-19T14:42:25.037Z","type":"message"}
{"nick":"creationix","message":"we last decided on fast clones and : syntax","date":"2012-03-19T14:42:34.718Z","type":"message"}
{"nick":"creationix","message":"is that still something you want","date":"2012-03-19T14:42:43.405Z","type":"message"}
{"nick":"indutny","message":"I think yes","date":"2012-03-19T14:42:49.403Z","type":"message"}
{"nick":"indutny","message":"have we decided what syntax to use for fast cloning?","date":"2012-03-19T14:43:03.375Z","type":"message"}
{"nick":"creationix","message":"I'm still trying to figure out how I want the API in candor.io to look","date":"2012-03-19T14:43:04.038Z","type":"message"}
{"nick":"creationix","message":"indutny, since you reserve \"new\" that could be it","date":"2012-03-19T14:43:16.407Z","type":"message"}
{"nick":"creationix","message":"new obj -> clone of obj","date":"2012-03-19T14:43:22.496Z","type":"message"}
{"nick":"indutny","message":"`new`?","date":"2012-03-19T14:43:41.437Z","type":"message"}
{"nick":"creationix","message":"but that implies obj is a prototype","date":"2012-03-19T14:43:47.413Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2012-03-19T14:43:54.027Z","type":"message"}
{"nick":"creationix","message":"which only works if we have : syntax","date":"2012-03-19T14:43:54.226Z","type":"message"}
{"nick":"indutny","message":"interesting","date":"2012-03-19T14:43:56.857Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-19T14:44:15.907Z","type":"message"}
{"nick":"creationix","message":"local Square = {getArea:(self) { return self.w * self.h }}","date":"2012-03-19T14:44:45.075Z","type":"message"}
{"nick":"creationix","message":"square = new Square","date":"2012-03-19T14:44:48.805Z","type":"message"}
{"nick":"creationix","message":"square.w = 5","date":"2012-03-19T14:44:50.829Z","type":"message"}
{"nick":"creationix","message":"square.h = 3","date":"2012-03-19T14:44:52.781Z","type":"message"}
{"nick":"creationix","message":"square:getArea() -> 15","date":"2012-03-19T14:44:57.927Z","type":"message"}
{"nick":"indutny","message":"ok, I'll implement it now","date":"2012-03-19T14:45:08.086Z","type":"message"}
{"nick":"indutny","message":"can you add that to the readme?","date":"2012-03-19T14:45:11.934Z","type":"message"}
{"nick":"creationix","message":"sure","date":"2012-03-19T14:45:26.380Z","type":"message"}
{"nick":"creationix","message":": syntax too?","date":"2012-03-19T14:45:29.364Z","type":"message"}
{"nick":"indutny","message":"creationix: yes","date":"2012-03-19T14:45:32.903Z","type":"message"}
{"nick":"creationix","message":"do we want to enable automatic constructors too?","date":"2012-03-19T14:46:06.129Z","type":"message"}
{"nick":"creationix","message":"new Square(3, 5) clones Square and then calls :initialize(3,5) if there is one?","date":"2012-03-19T14:46:27.864Z","type":"message"}
{"nick":"creationix","message":"or is that too much magic","date":"2012-03-19T14:46:33.397Z","type":"message"}
{"nick":"creationix","message":"if not, it's easy to have Square.create(3, 5) that does that internally","date":"2012-03-19T14:47:11.310Z","type":"message"}
{"nick":"creationix","message":"inside it does","date":"2012-03-19T14:47:18.661Z","type":"message"}
{"nick":"creationix","message":"obj = new Square","date":"2012-03-19T14:47:24.036Z","type":"message"}
{"nick":"indutny","message":"creationix: hm...","date":"2012-03-19T14:47:27.564Z","type":"message"}
{"nick":"creationix","message":"obj:initialize(3, 5)","date":"2012-03-19T14:47:28.842Z","type":"message"}
{"nick":"creationix","message":"return obj","date":"2012-03-19T14:47:29.875Z","type":"message"}
{"nick":"creationix","message":"that's how I do objects in luvit","date":"2012-03-19T14:47:49.981Z","type":"message"}
{"nick":"creationix","message":"except there it's inheritance via metatables instead of fast-clone","date":"2012-03-19T14:48:01.683Z","type":"message"}
{"nick":"creationix","message":"but same effect more or less","date":"2012-03-19T14:48:09.221Z","type":"message"}
{"nick":"indutny","message":"lets do just new obj","date":"2012-03-19T14:48:25.029Z","type":"message"}
{"nick":"indutny","message":"without parens for now","date":"2012-03-19T14:48:27.738Z","type":"message"}
{"nick":"creationix","message":"sounds good","date":"2012-03-19T14:48:29.806Z","type":"message"}
{"nick":"creationix","message":"also, it would be great if the parser allowed keywords as properties","date":"2012-03-19T14:48:57.006Z","type":"message"}
{"nick":"creationix","message":"it shouldn't be hard","date":"2012-03-19T14:49:03.425Z","type":"message"}
{"nick":"creationix","message":"a.new = () {}","date":"2012-03-19T14:49:11.920Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2012-03-19T14:49:34.024Z","type":"message"}
{"nick":"indutny","message":"right","date":"2012-03-19T14:49:35.536Z","type":"message"}
{"nick":"creationix","message":"only check for keywords when an identifier is a standalone variable","date":"2012-03-19T14:49:59.335Z","type":"message"}
{"nick":"creationix","message":"can't do `local new = 5`","date":"2012-03-19T14:50:10.087Z","type":"message"}
{"nick":"indutny","message":"btw, you can still do","date":"2012-03-19T14:52:03.257Z","type":"message"}
{"nick":"indutny","message":"a[\"new\"] = x","date":"2012-03-19T14:52:05.383Z","type":"message"}
{"nick":"indutny","message":"like in js","date":"2012-03-19T14:52:09.752Z","type":"message"}
{"nick":"indutny","message":"creationix: ok, implemented a.new = 1","date":"2012-03-19T14:56:36.041Z","type":"message"}
{"nick":"creationix","message":":)","date":"2012-03-19T14:56:48.661Z","type":"message"}
{"nick":"creationix","message":"how is https://gist.github.com/b5e7c4c97a5110f6ff69 ?","date":"2012-03-19T15:00:03.304Z","type":"message"}
{"nick":"creationix","message":"hmm, maybe s/fast-clone operator/fast-clone keyword/","date":"2012-03-19T15:00:38.937Z","type":"message"}
{"nick":"indutny","message":"wait what is `local`?","date":"2012-03-19T15:01:27.703Z","type":"message"}
{"nick":"creationix","message":"hah","date":"2012-03-19T15:01:32.648Z","type":"message"}
{"nick":"creationix","message":"too much lua","date":"2012-03-19T15:01:35.168Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2012-03-19T15:01:43.752Z","type":"message"}
{"nick":"indutny","message":"please remove it","date":"2012-03-19T15:01:45.697Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2012-03-19T15:01:46.661Z","type":"message"}
{"nick":"creationix","message":"updated","date":"2012-03-19T15:02:13.167Z","type":"message"}
{"nick":"indutny","message":"creationix: cool","date":"2012-03-19T15:16:00.847Z","type":"message"}
{"nick":"indutny","message":"back","date":"2012-03-19T15:16:01.857Z","type":"message"}
{"nick":"creationix","message":"ok, so should I push the readme changes then?","date":"2012-03-19T15:17:31.137Z","type":"message"}
{"nick":"indutny","message":"creationix: lgtm","date":"2012-03-19T15:17:48.210Z","type":"message"}
{"nick":"indutny","message":"sure","date":"2012-03-19T15:18:23.829Z","type":"message"}
{"nick":"creationix","message":"ok, pushed","date":"2012-03-19T15:20:01.136Z","type":"message"}
{"nick":"indutny","message":"creationix: cool","date":"2012-03-19T15:21:23.763Z","type":"message"}
{"nick":"karterk","date":"2012-03-19T15:38:22.382Z","type":"join"}
{"nick":"indutny","message":"crap, something is broken with my `new` implementation :)","date":"2012-03-19T15:41:46.100Z","type":"message"}
{"nick":"mmalecki","message":"indutny: add candor to travis, btw :)","date":"2012-03-19T15:49:01.672Z","type":"message"}
{"nick":"indutny","message":"mmalecki: do you have x64 support?","date":"2012-03-19T15:51:47.176Z","type":"message"}
{"nick":"mmalecki","message":"indutny: ah, right, that's what you need","date":"2012-03-19T15:52:30.505Z","type":"message"}
{"nick":"indutny","message":"mmalecki: yeah","date":"2012-03-19T15:52:38.919Z","type":"message"}
{"nick":"indutny","message":"mmalecki: I want PL to stabilize enough before implementing ia32","date":"2012-03-19T15:52:52.439Z","type":"message"}
{"nick":"karterk","message":"indutny: I have forked and built candor. N00b question: where is the binary?","date":"2012-03-19T15:56:03.509Z","type":"message"}
{"nick":"indutny","message":"karterk: hahaha","date":"2012-03-19T16:00:07.436Z","type":"message"}
{"nick":"indutny","message":"karterk: make -B -j4 ARCH=x64 cand","date":"2012-03-19T16:00:19.394Z","type":"message"}
{"nick":"indutny","message":"karterk: ./cand will open the repl","date":"2012-03-19T16:00:24.673Z","type":"message"}
{"nick":"indutny","message":"karterk: ./cand test/functional/objects.can","date":"2012-03-19T16:00:35.136Z","type":"message"}
{"nick":"indutny","message":"creationix: implemented new","date":"2012-03-19T16:02:29.697Z","type":"message"}
{"nick":"creationix","message":"cool","date":"2012-03-19T16:02:38.490Z","type":"message"}
{"nick":"creationix","message":"I'm burning though binding tcp","date":"2012-03-19T16:02:43.786Z","type":"message"}
{"nick":"creationix","message":"maybe 30% done","date":"2012-03-19T16:02:50.069Z","type":"message"}
{"nick":"indutny","message":"creationix: cool","date":"2012-03-19T16:03:00.095Z","type":"message"}
{"nick":"creationix","message":"I'm going to skip the *2 and *6 functions for now","date":"2012-03-19T16:03:06.137Z","type":"message"}
{"nick":"indutny","message":"creationix: GC should be much more stable now","date":"2012-03-19T16:03:06.333Z","type":"message"}
{"nick":"creationix","message":"(fd passing and ipv6)","date":"2012-03-19T16:03:10.512Z","type":"message"}
{"nick":"indutny","message":"creationix: heh, that's ok","date":"2012-03-19T16:03:16.620Z","type":"message"}
{"nick":"indutny","message":"creationix: would be neat to see a basic http server","date":"2012-03-19T16:03:35.881Z","type":"message"}
{"nick":"creationix","message":"it's a lot of stuff to do tcp https://gist.github.com/c5c3020829bb94f2919a","date":"2012-03-19T16:03:50.195Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2012-03-19T16:04:14.689Z","type":"message"}
{"nick":"indutny","message":"creationix: done","date":"2012-03-19T16:33:22.213Z","type":"message"}
{"nick":"indutny","message":"creationix: implemented colon syntax","date":"2012-03-19T16:33:26.386Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2012-03-19T16:33:27.163Z","type":"message"}
{"nick":"creationix","message":":)","date":"2012-03-19T16:33:52.233Z","type":"message"}
{"nick":"karterk","message":"I have started splitting test-functional.cc into individual tests","date":"2012-03-19T16:37:15.411Z","type":"message"}
{"nick":"karterk","message":"but when I do this, it always asserts true","date":"2012-03-19T16:37:30.448Z","type":"message"}
{"nick":"karterk","message":"returnOne() {","date":"2012-03-19T16:37:37.985Z","type":"message"}
{"nick":"karterk","message":"  return 1","date":"2012-03-19T16:37:38.232Z","type":"message"}
{"nick":"karterk","message":"}","date":"2012-03-19T16:37:38.430Z","type":"message"}
{"nick":"karterk","message":"assert(returnOne(), 2)","date":"2012-03-19T16:37:39.535Z","type":"message"}
{"nick":"karterk","message":"any idea?","date":"2012-03-19T16:37:50.180Z","type":"message"}
{"nick":"karterk","message":"figured out! it must be: assert(returnOne() == 1)","date":"2012-03-19T16:42:53.233Z","type":"message"}
{"nick":"karterk","message":"figured out! it must be: assert(returnOne() == 1)","date":"2012-03-19T16:49:26.070Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-19T16:49:36.729Z","type":"message"}
{"nick":"indutny","message":"better ====","date":"2012-03-19T16:49:40.649Z","type":"message"}
{"nick":"indutny","message":"oops","date":"2012-03-19T16:49:42.838Z","type":"message"}
{"nick":"indutny","message":"===","date":"2012-03-19T16:49:43.649Z","type":"message"}
{"nick":"indutny","message":"creationix: btw, current behaviour of == is quite confusing","date":"2012-03-19T16:49:52.045Z","type":"message"}
{"nick":"karterk","message":"ok","date":"2012-03-19T16:49:53.938Z","type":"message"}
{"nick":"indutny","message":"creationix: it's coercing right argument to left's one type","date":"2012-03-19T16:50:06.774Z","type":"message"}
{"nick":"indutny","message":"creationix: so nil == 1 - is true","date":"2012-03-19T16:50:19.498Z","type":"message"}
{"nick":"creationix","message":"can we just make it not coerce?","date":"2012-03-19T16:50:28.937Z","type":"message"}
{"nick":"creationix","message":"and return false if the types differ","date":"2012-03-19T16:50:36.156Z","type":"message"}
{"nick":"indutny","message":"creationix: I think yes","date":"2012-03-19T16:51:22.296Z","type":"message"}
{"nick":"indutny","message":"creationix: is that just for nil?","date":"2012-03-19T16:51:27.930Z","type":"message"}
{"nick":"creationix","message":"we can still have falsy and truthy values if we want","date":"2012-03-19T16:51:28.448Z","type":"message"}
{"nick":"karterk","message":"indutny: running this produces an error on line 11","date":"2012-03-19T16:51:33.693Z","type":"message"}
{"nick":"karterk","message":"https://gist.github.com/2118923","date":"2012-03-19T16:51:34.633Z","type":"message"}
{"nick":"creationix","message":"no, for anything","date":"2012-03-19T16:51:36.223Z","type":"message"}
{"nick":"creationix","message":"I don't 5 == \"5\" to be true","date":"2012-03-19T16:51:42.319Z","type":"message"}
{"nick":"creationix","message":"they aren't the same thing","date":"2012-03-19T16:51:52.739Z","type":"message"}
{"nick":"karterk","message":"\"Error on line 11: Expected statement after '{'\"","date":"2012-03-19T16:51:54.789Z","type":"message"}
{"nick":"indutny","message":"karterk: I think you're using tabs :)","date":"2012-03-19T16:52:23.937Z","type":"message"}
{"nick":"karterk","message":"oh yeah :D","date":"2012-03-19T16:52:32.688Z","type":"message"}
{"nick":"karterk","message":"is it whitespace sensitive>","date":"2012-03-19T16:52:44.597Z","type":"message"}
{"nick":"karterk","message":"?","date":"2012-03-19T16:52:45.356Z","type":"message"}
{"nick":"indutny","message":"karterk: just tab is not a whitespace","date":"2012-03-19T16:53:40.483Z","type":"message"}
{"nick":"indutny","message":"I really dislike tabs","date":"2012-03-19T16:53:50.608Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-19T16:53:51.653Z","type":"message"}
{"nick":"karterk","message":"me too :) I was just trying a new editor, and I forgot to change it to spaces.","date":"2012-03-19T16:54:09.085Z","type":"message"}
{"nick":"indutny","message":":)","date":"2012-03-19T16:54:21.423Z","type":"message"}
{"nick":"karterk","message":"all set now, I should port the return stuff to return.can today","date":"2012-03-19T16:54:40.097Z","type":"message"}
{"nick":"indutny","message":"karterk: cool","date":"2012-03-19T16:54:51.212Z","type":"message"}
{"nick":"karterk","message":"btw, do you think its a good idea to have it just \"can filename.can\" instead of \"cand filename.can\"?","date":"2012-03-19T16:55:13.769Z","type":"message"}
{"nick":"indutny","message":"probably","date":"2012-03-19T16:56:28.073Z","type":"message"}
{"nick":"indutny","message":"creationix: what do you think?","date":"2012-03-19T16:56:39.919Z","type":"message"}
{"nick":"creationix","message":"people will use tabs","date":"2012-03-19T16:57:26.202Z","type":"message"}
{"nick":"creationix","message":"you can't force that at the langauge level","date":"2012-03-19T16:57:31.534Z","type":"message"}
{"nick":"creationix","message":"you can convert tabs to spaces in the lexer","date":"2012-03-19T16:57:42.826Z","type":"message"}
{"nick":"creationix","message":"then the vm won't care","date":"2012-03-19T16:57:50.288Z","type":"message"}
{"nick":"indutny","message":"creationix: ook","date":"2012-03-19T16:58:04.619Z","type":"message"}
{"nick":"indutny","message":"creationix: what about cand=>can","date":"2012-03-19T16:58:08.653Z","type":"message"}
{"nick":"creationix","message":"what's that?","date":"2012-03-19T16:58:22.090Z","type":"message"}
{"nick":"karterk","message":"instead of cand file.can","date":"2012-03-19T16:58:30.601Z","type":"message"}
{"nick":"creationix","message":"oh, the executable","date":"2012-03-19T16:58:35.735Z","type":"message"}
{"nick":"karterk","message":"to \"can file.can\"","date":"2012-03-19T16:58:37.225Z","type":"message"}
{"nick":"karterk","message":"yup","date":"2012-03-19T16:58:40.926Z","type":"message"}
{"nick":"creationix","message":"dunno, I still don't have a name for candor.io","date":"2012-03-19T16:58:44.456Z","type":"message"}
{"nick":"creationix","message":"right now it's canio","date":"2012-03-19T16:58:47.168Z","type":"message"}
{"nick":"creationix","message":"looks like there is no \"can\" executable registered in debian/ubuntu","date":"2012-03-19T16:59:10.972Z","type":"message"}
{"nick":"indutny","message":"creationix: no in osx too","date":"2012-03-19T16:59:19.667Z","type":"message"}
{"nick":"karterk","message":"should snatch it then :)","date":"2012-03-19T16:59:22.272Z","type":"message"}
{"nick":"creationix","message":"can is cool","date":"2012-03-19T16:59:40.453Z","type":"message"}
{"nick":"creationix","message":"and I can have canio or can.io","date":"2012-03-19T16:59:47.901Z","type":"message"}
{"nick":"creationix","message":"for candor.io","date":"2012-03-19T16:59:50.521Z","type":"message"}
{"nick":"indutny","message":"ok, lets rename it then","date":"2012-03-19T16:59:52.881Z","type":"message"}
{"nick":"karterk","message":"creationix: what is canio?","date":"2012-03-19T17:00:05.415Z","type":"message"}
{"nick":"creationix","message":"https://github.com/creationix/candor.io","date":"2012-03-19T17:00:20.216Z","type":"message"}
{"nick":"creationix","message":"it's like node, but in candor","date":"2012-03-19T17:00:26.742Z","type":"message"}
{"nick":"karterk","message":"awesome :)","date":"2012-03-19T17:00:36.426Z","type":"message"}
{"nick":"karterk","message":"indutny: for \"return keysof { a: 1, b: 2 }\", why does the following fail:","date":"2012-03-19T17:21:36.373Z","type":"message"}
{"nick":"karterk","message":"assert(returnKeysOfDict() === ['a', 'b'], \"return keys of a dict\")","date":"2012-03-19T17:21:39.400Z","type":"message"}
{"nick":"indutny","message":"karterk: heh, that won't work","date":"2012-03-19T17:22:02.302Z","type":"message"}
{"nick":"indutny","message":"karterk: you're trying to compare different objects","date":"2012-03-19T17:22:39.667Z","type":"message"}
{"nick":"karterk","message":"ok","date":"2012-03-19T17:23:06.181Z","type":"message"}
{"nick":"indutny","message":"karterk: better do something like that: keys = returnKeysOfDict()","date":"2012-03-19T17:23:10.277Z","type":"message"}
{"nick":"karterk","message":"will do that","date":"2012-03-19T17:23:25.134Z","type":"message"}
{"nick":"indutny","message":"assert(keys[0] == 'a' || keys[1] == 'a')","date":"2012-03-19T17:23:26.216Z","type":"message"}
{"nick":"indutny","message":"btw","date":"2012-03-19T17:23:30.524Z","type":"message"}
{"nick":"indutny","message":"can you please remove `return` prefix?","date":"2012-03-19T17:23:40.246Z","type":"message"}
{"nick":"indutny","message":"returnKeysOfDict() -> keysOfDict()","date":"2012-03-19T17:23:51.346Z","type":"message"}
{"nick":"karterk","message":"from the functional calls? sure","date":"2012-03-19T17:23:55.285Z","type":"message"}
{"nick":"indutny","message":"less verbosity - good","date":"2012-03-19T17:23:56.715Z","type":"message"}
{"nick":"karterk","message":"*names","date":"2012-03-19T17:23:57.983Z","type":"message"}
{"nick":"indutny","message":"karterk: yeah","date":"2012-03-19T17:23:59.555Z","type":"message"}
{"nick":"karterk","message":"definitely!","date":"2012-03-19T17:24:02.819Z","type":"message"}
{"nick":"indutny","message":"thank you","date":"2012-03-19T17:24:04.155Z","type":"message"}
{"nick":"karterk","message":":) welcome","date":"2012-03-19T17:24:19.099Z","type":"message"}
{"nick":"karterk","message":"indutny: so, I have ported \"return + assign\" and \"prefix\" to return.can - do you want me to commit it now (and delete the ones ported from test-functional.cc) or wait till all is done?","date":"2012-03-19T17:29:37.737Z","type":"message"}
{"nick":"karterk","message":"*all are done. my english!","date":"2012-03-19T17:30:05.789Z","type":"message"}
{"nick":"indutny","message":"karterk: better commit all-in-one","date":"2012-03-19T17:30:27.259Z","type":"message"}
{"nick":"karterk","message":"cool","date":"2012-03-19T17:30:36.335Z","type":"message"}
{"nick":"karterk","message":"indutny: gotta run, will continue tomorrow. btw, awesome work, glad to be of some help! :)","date":"2012-03-19T17:31:14.620Z","type":"message"}
{"nick":"indutny","message":"karterk: thank you for your help","date":"2012-03-19T17:31:41.702Z","type":"message"}
{"nick":"indutny","message":"creationix: woot https://github.com/creationix/candor.io/commit/133ad4b226142b37e47a12936ae8f3c17d02258f","date":"2012-03-19T17:34:38.323Z","type":"message"}
{"nick":"creationix","message":"that's actually a bad commit","date":"2012-03-19T17:35:29.147Z","type":"message"}
{"nick":"creationix","message":"but here comes a better one","date":"2012-03-19T17:35:39.923Z","type":"message"}
{"nick":"creationix","message":"how do I rewrite the history?","date":"2012-03-19T17:36:08.084Z","type":"message"}
{"nick":"creationix","message":"I want 133ad4b226142b37e47a12936ae8f3c17d02258f to never have happened","date":"2012-03-19T17:36:33.061Z","type":"message"}
{"nick":"creationix","message":"and keep the history linear","date":"2012-03-19T17:36:37.235Z","type":"message"}
{"nick":"creationix","message":"88fe51f8dba8e8c420b13e544f10445ee38f00c3 and def5b5941940f0a5f4426a8305cef7c48c90d804","date":"2012-03-19T17:36:52.405Z","type":"message"}
{"nick":"creationix","message":"I guess I just need to somehow move master to point to def5b5941940f0a5f4426a8305cef7c48c90d804","date":"2012-03-19T17:39:01.991Z","type":"message"}
{"nick":"indutny","message":"creationix: git rebase -i HEAD~2","date":"2012-03-19T17:40:19.348Z","type":"message"}
{"nick":"indutny","message":"or","date":"2012-03-19T17:40:30.175Z","type":"message"}
{"nick":"indutny","message":"git reset HEAD~1","date":"2012-03-19T17:40:33.300Z","type":"message"}
{"nick":"indutny","message":"and git commit","date":"2012-03-19T17:40:36.779Z","type":"message"}
{"nick":"creationix","message":"ahh reset","date":"2012-03-19T17:40:38.682Z","type":"message"}
{"nick":"indutny","message":"git commit -f","date":"2012-03-19T17:40:39.814Z","type":"message"}
{"nick":"creationix","message":"git reset --hard def5b5941940f0a5f4426a8305cef7c48c90d804","date":"2012-03-19T17:40:53.918Z","type":"message"}
{"nick":"indutny","message":"creationix:probably","date":"2012-03-19T17:41:30.673Z","type":"message"}
{"nick":"creationix","message":"hmm, but I can't seem to push it to github","date":"2012-03-19T17:41:31.856Z","type":"message"}
{"nick":"karterk","reason":"Remote host closed the connection","date":"2012-03-19T17:41:46.278Z","type":"quit"}
{"nick":"indutny","message":"creationix: git push -f origin master","date":"2012-03-19T17:42:13.845Z","type":"message"}
{"nick":"creationix","message":"yeah, that just says \"Everything up-to-date\"","date":"2012-03-19T17:42:38.861Z","type":"message"}
{"nick":"creationix","message":"I guess I have to reset --hard while in the master branch","date":"2012-03-19T17:43:10.551Z","type":"message"}
{"nick":"creationix","message":"should be good now","date":"2012-03-19T17:43:13.554Z","type":"message"}
{"nick":"creationix","message":"there, a clean commit for tcp https://github.com/creationix/candor.io/commit/def5b5941940f0a5f4426a8305cef7c48c90d804","date":"2012-03-19T17:43:28.882Z","type":"message"}
{"nick":"creationix","message":"now to test it","date":"2012-03-19T17:44:01.121Z","type":"message"}
{"nick":"indutny","message":"woot it's running :)","date":"2012-03-19T17:46:10.797Z","type":"message"}
{"nick":"indutny","message":"creationix: btw, I think candor needs some sort of stl","date":"2012-03-19T17:46:24.377Z","type":"message"}
{"nick":"indutny","message":"creationix: dump is really useful","date":"2012-03-19T17:46:34.282Z","type":"message"}
{"nick":"creationix","message":"that's up to you","date":"2012-03-19T17:46:48.208Z","type":"message"}
{"nick":"indutny","message":"ah, nvm","date":"2012-03-19T17:46:51.803Z","type":"message"}
{"nick":"indutny","message":"v8 doesn't contain any","date":"2012-03-19T17:46:57.913Z","type":"message"}
{"nick":"creationix","message":"I'd keep it lean","date":"2012-03-19T17:47:15.097Z","type":"message"}
{"nick":"creationix","message":"it's already much easier to use than most VMs","date":"2012-03-19T17:47:21.248Z","type":"message"}
{"nick":"indutny","message":"creationix: hehe","date":"2012-03-19T17:47:32.317Z","type":"message"}
{"nick":"indutny","message":"creationix: looks like it's time to implement optimizations","date":"2012-03-19T17:47:55.864Z","type":"message"}
{"nick":"indutny","message":"creationix: I think I've implemented everything else","date":"2012-03-19T17:48:06.475Z","type":"message"}
{"nick":"creationix","message":"fix the lexer bugs","date":"2012-03-19T17:48:08.931Z","type":"message"}
{"nick":"indutny","message":"creationix: which exactly?","date":"2012-03-19T17:48:17.972Z","type":"message"}
{"nick":"creationix","message":"I should really file those as I find them","date":"2012-03-19T17:48:19.300Z","type":"message"}
{"nick":"creationix","message":"the most common is files starting or ending with comments","date":"2012-03-19T17:48:31.497Z","type":"message"}
{"nick":"creationix","message":"often break the lexer","date":"2012-03-19T17:48:34.734Z","type":"message"}
{"nick":"creationix","message":"I'll block comment a large section of my test script","date":"2012-03-19T17:48:45.281Z","type":"message"}
{"nick":"creationix","message":"and it will die","date":"2012-03-19T17:48:47.454Z","type":"message"}
{"nick":"creationix","message":"I have to actually delete it","date":"2012-03-19T17:48:51.111Z","type":"message"}
{"nick":"indutny","message":"creationix: oh, not goo","date":"2012-03-19T17:48:55.283Z","type":"message"}
{"nick":"creationix","message":"and the string literal needs escaping","date":"2012-03-19T17:49:14.454Z","type":"message"}
{"nick":"indutny","message":"creationix: Implemented that","date":"2012-03-19T17:49:22.242Z","type":"message"}
{"nick":"creationix","message":"cool","date":"2012-03-19T17:49:25.953Z","type":"message"}
{"nick":"indutny","message":"creationix: escaping","date":"2012-03-19T17:49:26.671Z","type":"message"}
{"nick":"indutny","message":"creationix: \"\\x00 and \\u0000\"","date":"2012-03-19T17:49:34.852Z","type":"message"}
{"nick":"creationix","message":"and \\r \\n \\t and friends?","date":"2012-03-19T17:49:52.274Z","type":"message"}
{"nick":"creationix","message":"\\0 ?","date":"2012-03-19T17:49:55.795Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-19T17:50:02.637Z","type":"message"}
{"nick":"indutny","message":"\\r \\n \\t \\v \\0","date":"2012-03-19T17:50:10.903Z","type":"message"}
{"nick":"creationix","message":"what's \\v?","date":"2012-03-19T17:50:16.987Z","type":"message"}
{"nick":"indutny","message":"and \\b","date":"2012-03-19T17:50:23.251Z","type":"message"}
{"nick":"creationix","message":"and I've seen \\b sometimes","date":"2012-03-19T17:50:25.595Z","type":"message"}
{"nick":"indutny","message":"vertical tab","date":"2012-03-19T17:50:25.905Z","type":"message"}
{"nick":"creationix","message":"ahh","date":"2012-03-19T17:50:28.920Z","type":"message"}
{"nick":"creationix","message":"now supposing I want to write a candor pretty printer","date":"2012-03-19T17:50:47.739Z","type":"message"}
{"nick":"indutny","message":"not that useful but pretty default for all other languages","date":"2012-03-19T17:50:48.491Z","type":"message"}
{"nick":"creationix","message":"and I want to escape a string","date":"2012-03-19T17:50:55.174Z","type":"message"}
{"nick":"creationix","message":"how do I read the bytes at an offset?","date":"2012-03-19T17:51:00.764Z","type":"message"}
{"nick":"indutny","message":"creationix: from string?","date":"2012-03-19T17:51:08.830Z","type":"message"}
{"nick":"creationix","message":"a = \"foo\"; a[1] return \"f\"","date":"2012-03-19T17:51:12.809Z","type":"message"}
{"nick":"indutny","message":"creationix: heh, no way so far","date":"2012-03-19T17:51:13.009Z","type":"message"}
{"nick":"creationix","message":"*returns","date":"2012-03-19T17:51:20.532Z","type":"message"}
{"nick":"indutny","message":"creationix: can be implemented as function","date":"2012-03-19T17:51:25.259Z","type":"message"}
{"nick":"indutny","message":"or library","date":"2012-03-19T17:51:26.986Z","type":"message"}
{"nick":"indutny","message":"C++ binding should be simple to implement","date":"2012-03-19T17:51:41.339Z","type":"message"}
{"nick":"creationix","message":"so String.byteAt(a, 4)","date":"2012-03-19T17:51:42.739Z","type":"message"}
{"nick":"kohai","message":"C has 12 beers","date":"2012-03-19T17:51:45.868Z","type":"message"}
{"nick":"creationix","message":"or something like that","date":"2012-03-19T17:51:47.838Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-19T17:51:54.002Z","type":"message"}
{"nick":"creationix","message":"since strings are binary safe, I can return strings where the chunk doesn't need to be mutated","date":"2012-03-19T17:52:06.519Z","type":"message"}
{"nick":"creationix","message":"just provide a way to read the bytes","date":"2012-03-19T17:52:13.864Z","type":"message"}
{"nick":"creationix","message":"actually, if you can make string concat very fast, I won't even need a buffer type","date":"2012-03-19T17:52:43.312Z","type":"message"}
{"nick":"indutny","message":"creationix: oh, concat is very slow now","date":"2012-03-19T17:52:52.711Z","type":"message"}
{"nick":"indutny","message":"creationix: I need to implement cons tree","date":"2012-03-19T17:53:00.064Z","type":"message"}
{"nick":"creationix","message":"right, it's very slow in lua too","date":"2012-03-19T17:53:01.140Z","type":"message"}
{"nick":"creationix","message":"that would be a good optimization to start with","date":"2012-03-19T17:53:10.145Z","type":"message"}
{"nick":"creationix","message":"web servers concat strings all the time","date":"2012-03-19T17:53:23.371Z","type":"message"}
{"nick":"indutny","message":"well","date":"2012-03-19T17:53:38.117Z","type":"message"}
{"nick":"indutny","message":"I want to implement register allocation and CFG first","date":"2012-03-19T17:53:51.847Z","type":"message"}
{"nick":"indutny","message":"lets see if that is a really deep rabbit hole","date":"2012-03-19T17:54:05.546Z","type":"message"}
{"nick":"creationix","message":"ok","date":"2012-03-19T17:55:38.351Z","type":"message"}
{"nick":"creationix","message":"I'm just trying to decide if I need a buffer type","date":"2012-03-19T17:55:48.850Z","type":"message"}
{"nick":"creationix","message":"or just a good string library","date":"2012-03-19T17:55:54.050Z","type":"message"}
{"nick":"creationix","message":"when do you need actual mutable buffers?","date":"2012-03-19T17:56:13.991Z","type":"message"}
{"nick":"creationix","message":"most the time you're either parsing a binary stream or encoding a binary stream","date":"2012-03-19T17:56:26.326Z","type":"message"}
{"nick":"creationix","message":"rarely mutating an existing data structure","date":"2012-03-19T17:56:36.501Z","type":"message"}
{"nick":"creationix","message":"what happens if I mutate a string from C++?","date":"2012-03-19T17:57:48.339Z","type":"message"}
{"nick":"indutny","message":"creationix: nothing","date":"2012-03-19T17:57:56.145Z","type":"message"}
{"nick":"creationix","message":"is that bad, does it break VM assumptions","date":"2012-03-19T17:57:57.181Z","type":"message"}
{"nick":"indutny","message":"creationix: it shouldn't","date":"2012-03-19T17:58:05.420Z","type":"message"}
{"nick":"indutny","message":"creationix: but that won't work for cons strings","date":"2012-03-19T17:58:09.951Z","type":"message"}
{"nick":"indutny","message":"creationix: as they're essentially a trees","date":"2012-03-19T17:58:16.301Z","type":"message"}
{"nick":"creationix","message":"true, calling ->Value on them would have to convert it to a static tree","date":"2012-03-19T17:58:36.033Z","type":"message"}
{"nick":"indutny","message":"creationix: C++ is accessing all properties directly","date":"2012-03-19T17:58:37.635Z","type":"message"}
{"nick":"indutny","message":"creationix: yes","date":"2012-03-19T17:58:42.051Z","type":"message"}
{"nick":"creationix","message":"though for writev, I can take an array of strings of that's faster","date":"2012-03-19T17:58:58.538Z","type":"message"}
{"nick":"indutny","message":"it won't be faster","date":"2012-03-19T17:59:41.511Z","type":"message"}
{"nick":"indutny","message":"at least until I'll implement dense arrays","date":"2012-03-19T17:59:53.880Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2012-03-19T18:02:21.784Z","type":"message"}
{"nick":"indutny","message":"going to take a shower","date":"2012-03-19T18:02:24.473Z","type":"message"}
{"nick":"creationix","message":"ok","date":"2012-03-19T18:02:27.325Z","type":"message"}
{"nick":"indutny","message":"back","date":"2012-03-19T18:16:42.385Z","type":"message"}
{"nick":"indutny","message":"from another point of view","date":"2012-03-19T18:17:30.926Z","type":"message"}
{"nick":"indutny","message":"implementing dense arrays and cons strings first makes sense","date":"2012-03-19T18:17:45.596Z","type":"message"}
{"nick":"creationix","message":"it affects the C++ api","date":"2012-03-19T18:21:38.981Z","type":"message"}
{"nick":"creationix","message":"well, cons strings can","date":"2012-03-19T18:21:51.548Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-19T18:21:58.759Z","type":"message"}
{"nick":"indutny","message":"they're","date":"2012-03-19T18:22:00.337Z","type":"message"}
{"nick":"indutny","message":"dense arrays not","date":"2012-03-19T18:22:04.489Z","type":"message"}
{"nick":"creationix","message":"yeah, the actual Value[] array isn't much use","date":"2012-03-19T18:22:32.679Z","type":"message"}
{"nick":"creationix","message":"well, maybe for fast iteration","date":"2012-03-19T18:23:15.304Z","type":"message"}
{"nick":"creationix","message":"but we already have the Arguments thing","date":"2012-03-19T18:23:31.291Z","type":"message"}
{"nick":"creationix","message":"hmm, uvTcp::Write is not working","date":"2012-03-19T18:25:33.675Z","type":"message"}
{"nick":"creationix","message":"indutny, how well do you know libuv internals?","date":"2012-03-19T18:25:42.183Z","type":"message"}
{"nick":"indutny","message":"creationix: not really weell","date":"2012-03-19T18:29:23.952Z","type":"message"}
{"nick":"indutny","message":"especially tcp stuff","date":"2012-03-19T18:29:32.458Z","type":"message"}
{"nick":"creationix","message":"ok, candor question","date":"2012-03-19T18:45:31.149Z","type":"message"}
{"nick":"creationix","message":"how can I get a stack trace","date":"2012-03-19T18:45:34.123Z","type":"message"}
{"nick":"creationix","message":"I'm writing my error handler","date":"2012-03-19T18:45:37.524Z","type":"message"}
{"nick":"creationix","message":"stack traces make debugging easier","date":"2012-03-19T18:45:42.815Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-03-19T18:51:54.053Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2012-03-19T18:52:01.467Z","type":"message"}
{"nick":"indutny","message":"I'll implement that","date":"2012-03-19T18:52:14.304Z","type":"message"}
{"nick":"indutny","message":"creationix: sorry, going to sleep now","date":"2012-03-19T18:52:49.792Z","type":"message"}
{"nick":"indutny","message":"ttyl","date":"2012-03-19T18:52:51.842Z","type":"message"}
{"nick":"indutny","new_nick":"indutny_sleeping","date":"2012-03-19T18:52:54.594Z","type":"nick"}
{"nick":"creationix","message":"is `foo() {}` not the same as `foo = () {}`","date":"2012-03-19T20:32:05.663Z","type":"message"}
{"nick":"creationix","message":"the latter seems to have wider scope","date":"2012-03-19T20:32:13.041Z","type":"message"}
{"nick":"creationix","message":"I suggest removing dart-style function declarations outright","date":"2012-03-19T20:36:48.990Z","type":"message"}
{"nick":"creationix","message":"they are very hard to read, it's hard to tell if something is a function call or definition","date":"2012-03-19T20:37:06.534Z","type":"message"}
