{"nick":"piscisaureus_","date":"2012-03-21T00:00:34.369Z","type":"join"}
{"nick":"piscisaureus_","reason":"Read error: Connection reset by peer","date":"2012-03-21T00:01:12.599Z","type":"quit"}
{"nick":"alejandromg","date":"2012-03-21T00:24:20.071Z","type":"join"}
{"nick":"indutny_sleeping","message":"creationix: cool!","date":"2012-03-21T00:34:54.640Z","type":"message"}
{"nick":"mmalecki","new_nick":"mmalecki[zzz]","date":"2012-03-21T01:30:07.186Z","type":"nick"}
{"nick":"karterk","date":"2012-03-21T01:49:03.409Z","type":"join"}
{"nick":"karterk","reason":"Remote host closed the connection","date":"2012-03-21T01:55:01.276Z","type":"quit"}
{"nick":"creationix","message":"indutny_sleeping: when you get a chance, I need a Object::New(Object *) clone API (or Value::New(Value*) if that's easier)","date":"2012-03-21T03:17:44.974Z","type":"message"}
{"nick":"creationix","message":"indutny_sleeping: also an API for deleting from objects","date":"2012-03-21T04:05:05.329Z","type":"message"}
{"nick":"creationix","message":"I think a Bool::New(bool) constructor would be handy so I don't have to do uv_is_writable(handle) ? Boolean::True() : Boolean::False();","date":"2012-03-21T04:21:59.476Z","type":"message"}
{"nick":"karterk","date":"2012-03-21T04:46:20.221Z","type":"join"}
{"nick":"creationix","message":"I'll file issues so it's easier to track","date":"2012-03-21T05:00:49.502Z","type":"message"}
{"nick":"karterk","reason":"Ping timeout: 245 seconds","date":"2012-03-21T05:48:26.201Z","type":"quit"}
{"nick":"karterk","date":"2012-03-21T06:09:39.165Z","type":"join"}
{"nick":"alejandromg","reason":"Quit: leaving","date":"2012-03-21T06:52:02.867Z","type":"quit"}
{"nick":"karterk_","date":"2012-03-21T07:11:41.052Z","type":"join"}
{"nick":"karterk_","reason":"Read error: Connection reset by peer","date":"2012-03-21T07:12:07.546Z","type":"quit"}
{"nick":"karterk_","date":"2012-03-21T07:12:21.064Z","type":"join"}
{"nick":"karterk","reason":"Read error: Connection reset by peer","date":"2012-03-21T07:12:41.489Z","type":"quit"}
{"nick":"karterk","date":"2012-03-21T07:50:45.053Z","type":"join"}
{"nick":"karterk","reason":"Remote host closed the connection","date":"2012-03-21T07:50:57.382Z","type":"quit"}
{"nick":"karterk_","reason":"Ping timeout: 246 seconds","date":"2012-03-21T07:53:28.026Z","type":"quit"}
{"nick":"karterk","date":"2012-03-21T08:08:04.617Z","type":"join"}
{"nick":"piscisaureus_","date":"2012-03-21T10:47:06.201Z","type":"join"}
{"nick":"indutny_sleeping","message":"creationix:hi","date":"2012-03-21T11:01:36.057Z","type":"message"}
{"nick":"indutny_sleeping","new_nick":"indutny","date":"2012-03-21T11:01:38.937Z","type":"nick"}
{"nick":"karterk","reason":"Remote host closed the connection","date":"2012-03-21T12:04:27.033Z","type":"quit"}
{"nick":"karterk","date":"2012-03-21T12:30:08.651Z","type":"join"}
{"nick":"creationix","message":"indutny: morning","date":"2012-03-21T13:16:26.614Z","type":"message"}
{"nick":"indutny","message":"creationix: morning","date":"2012-03-21T13:17:41.825Z","type":"message"}
{"nick":"indutny","message":"creationix: I need more info about that Set issue","date":"2012-03-21T13:17:53.246Z","type":"message"}
{"nick":"creationix","message":"ok","date":"2012-03-21T13:18:27.584Z","type":"message"}
{"nick":"creationix","message":"I did notice that setting the property via script works fine","date":"2012-03-21T13:18:27.795Z","type":"message"}
{"nick":"creationix","message":"but when I set it via the API it doesn't work","date":"2012-03-21T13:18:33.495Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2012-03-21T13:18:39.717Z","type":"message"}
{"nick":"creationix","message":"the object has been cloned several times too","date":"2012-03-21T13:18:51.274Z","type":"message"}
{"nick":"indutny","message":"what keysof reports?","date":"2012-03-21T13:18:51.855Z","type":"message"}
{"nick":"creationix","message":"let me check","date":"2012-03-21T13:19:50.261Z","type":"message"}
{"nick":"creationix","message":"I was using the C++ API to introspect it","date":"2012-03-21T13:19:50.461Z","type":"message"}
{"nick":"creationix","message":"candor.io has a nice pretty printer","date":"2012-03-21T13:19:50.461Z","type":"message"}
{"nick":"indutny","message":"yeah, I seen it","date":"2012-03-21T13:20:08.521Z","type":"message"}
{"nick":"indutny","message":"good job","date":"2012-03-21T13:20:11.829Z","type":"message"}
{"nick":"creationix","message":"keysof seems to return the same thing as Object::Keys","date":"2012-03-21T13:20:43.890Z","type":"message"}
{"nick":"creationix","message":"[ \"getpeername\", \"isReadable\", \"onConnection\", \"write\", \"cdata\", \"keepalive\", \"close\", \"accept\", \"isWritable\", \"getsockname\", \"listen\", \"nodelay\", \"readStop\", \"readStart\", \"shutdown\", \"bind\" ]","date":"2012-03-21T13:20:51.359Z","type":"message"}
{"nick":"indutny","message":"so \"onConnection\" is present, but nil","date":"2012-03-21T13:21:18.481Z","type":"message"}
{"nick":"creationix","message":"yep","date":"2012-03-21T13:21:42.339Z","type":"message"}
{"nick":"indutny","message":"creationix: what if you'll do obj.onConnection in candor-land?","date":"2012-03-21T13:21:51.859Z","type":"message"}
{"nick":"creationix","message":"and if I set onConnection2 to true, then there is a new key nil with value nil","date":"2012-03-21T13:22:00.704Z","type":"message"}
{"nick":"creationix","message":"if I set onConnection in candor-land, it's fine","date":"2012-03-21T13:22:07.656Z","type":"message"}
{"nick":"indutny","message":"I mean getting","date":"2012-03-21T13:22:15.270Z","type":"message"}
{"nick":"indutny","message":"after setting in C++","date":"2012-03-21T13:22:20.381Z","type":"message"}
{"nick":"creationix","message":"getting it in candor gives nil","date":"2012-03-21T13:22:52.464Z","type":"message"}
{"nick":"indutny","message":"great","date":"2012-03-21T13:23:04.117Z","type":"message"}
{"nick":"indutny","message":"can you create some sort of regression test?","date":"2012-03-21T13:23:12.362Z","type":"message"}
{"nick":"creationix","message":"I can try","date":"2012-03-21T13:23:24.181Z","type":"message"}
{"nick":"creationix","message":"but it involves native C++ functions","date":"2012-03-21T13:24:07.077Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-21T13:24:20.247Z","type":"message"}
{"nick":"indutny","message":"use test-api.cc for that","date":"2012-03-21T13:24:23.689Z","type":"message"}
{"nick":"indutny","message":"I just can't reproduce it","date":"2012-03-21T13:24:32.687Z","type":"message"}
{"nick":"creationix","message":"btw, does it repeat for you?","date":"2012-03-21T13:25:04.331Z","type":"message"}
{"nick":"creationix","message":"I think what I have in master will do it","date":"2012-03-21T13:25:11.061Z","type":"message"}
{"nick":"creationix","message":"build candor.io and run test-tcp.can","date":"2012-03-21T13:25:19.224Z","type":"message"}
{"nick":"indutny","message":"ok, I'll try","date":"2012-03-21T13:25:32.886Z","type":"message"}
{"nick":"indutny","message":"is it still reproducible with a latest candor?","date":"2012-03-21T13:25:41.958Z","type":"message"}
{"nick":"indutny","message":"ooh","date":"2012-03-21T13:26:25.993Z","type":"message"}
{"nick":"indutny","message":"even better","date":"2012-03-21T13:26:27.683Z","type":"message"}
{"nick":"indutny","message":"onConnection=0 for me","date":"2012-03-21T13:26:31.322Z","type":"message"}
{"nick":"indutny","message":"oooh","date":"2012-03-21T13:30:36.545Z","type":"message"}
{"nick":"indutny","message":"keys are somehow 0 in object","date":"2012-03-21T13:30:47.797Z","type":"message"}
{"nick":"indutny","message":"not nil","date":"2012-03-21T13:30:49.080Z","type":"message"}
{"nick":"indutny","message":"ok,gtg","date":"2012-03-21T13:33:56.067Z","type":"message"}
{"nick":"indutny","message":"will take a look at your stuff later","date":"2012-03-21T13:34:00.624Z","type":"message"}
{"nick":"indutny","message":"ok, onConnection is not 0 anymore :)","date":"2012-03-21T13:39:21.049Z","type":"message"}
{"nick":"indutny","message":"it's nil now","date":"2012-03-21T13:39:27.646Z","type":"message"}
{"nick":"indutny","message":"lol :D","date":"2012-03-21T13:42:19.205Z","type":"message"}
{"nick":"indutny","message":"creationix: aaah","date":"2012-03-21T13:44:58.062Z","type":"message"}
{"nick":"indutny","message":"man","date":"2012-03-21T13:44:59.089Z","type":"message"}
{"nick":"indutny","message":"creationix: that's your mistake","date":"2012-03-21T13:45:03.791Z","type":"message"}
{"nick":"indutny","message":"static Object* prototype should be a static Handle<Object> prototype","date":"2012-03-21T13:45:20.387Z","type":"message"}
{"nick":"indutny","message":"Object just was relocated","date":"2012-03-21T13:45:30.944Z","type":"message"}
{"nick":"indutny","message":"and you was trying to update non-existing location","date":"2012-03-21T13:45:39.020Z","type":"message"}
{"nick":"indutny","message":"creationix: ^^","date":"2012-03-21T13:45:40.259Z","type":"message"}
{"nick":"karterk_","date":"2012-03-21T13:46:19.710Z","type":"join"}
{"nick":"indutny","message":"creationix: oh, API doesn't support that now","date":"2012-03-21T13:49:16.921Z","type":"message"}
{"nick":"karterk","reason":"Ping timeout: 260 seconds","date":"2012-03-21T13:49:28.562Z","type":"quit"}
{"nick":"indutny","message":"mmalecki[zzz]: ping","date":"2012-03-21T13:51:03.831Z","type":"message"}
{"nick":"indutny","message":"creationix: or probably not","date":"2012-03-21T13:54:48.468Z","type":"message"}
{"nick":"indutny","message":"but better use handles","date":"2012-03-21T13:54:51.748Z","type":"message"}
{"nick":"indutny","message":"creationix: aaah","date":"2012-03-21T14:08:01.944Z","type":"message"}
{"nick":"indutny","message":"got it","date":"2012-03-21T14:08:02.584Z","type":"message"}
{"nick":"indutny","message":"creationix: yes, it works","date":"2012-03-21T14:09:38.873Z","type":"message"}
{"nick":"indutny","message":"creationix: fixed","date":"2012-03-21T14:09:54.878Z","type":"message"}
{"nick":"indutny","message":"creationix: btw, can I send you a pull requseet?","date":"2012-03-21T14:10:06.262Z","type":"message"}
{"nick":"indutny","message":"request*","date":"2012-03-21T14:10:08.420Z","type":"message"}
{"nick":"indutny","message":"creationix: https://github.com/creationix/candor.io/pull/1/files","date":"2012-03-21T14:12:39.761Z","type":"message"}
{"nick":"karterk_","reason":"Remote host closed the connection","date":"2012-03-21T14:13:30.898Z","type":"quit"}
{"nick":"indutny","message":"creationix: and btw you should store handle, not Object within uv handle","date":"2012-03-21T14:34:41.027Z","type":"message"}
{"nick":"mmalecki[zzz]","new_nick":"mmalecki","date":"2012-03-21T14:35:34.819Z","type":"nick"}
{"nick":"mmalecki","message":"indutny: pong","date":"2012-03-21T14:35:37.219Z","type":"message"}
{"nick":"indutny","message":"mmalecki: heya","date":"2012-03-21T14:35:42.505Z","type":"message"}
{"nick":"mmalecki","message":"indutny: yo :)","date":"2012-03-21T14:35:49.251Z","type":"message"}
{"nick":"indutny","message":"mmalecki: can you please remind me","date":"2012-03-21T14:35:53.174Z","type":"message"}
{"nick":"indutny","message":"mmalecki: will travis support x64?","date":"2012-03-21T14:36:01.290Z","type":"message"}
{"nick":"indutny","message":"mmalecki: and is there any expected date of that?","date":"2012-03-21T14:36:13.233Z","type":"message"}
{"nick":"mmalecki","message":"indutny: yeah, it guess it'll one day, but I have no eta","date":"2012-03-21T14:40:32.122Z","type":"message"}
{"nick":"mmalecki","message":"there's gonna be like a big refactor needed to make it happen","date":"2012-03-21T14:40:46.257Z","type":"message"}
{"nick":"mmalecki","new_nick":"mmalecki[away]","date":"2012-03-21T14:46:28.132Z","type":"nick"}
{"nick":"mmalecki[away]","message":"gotta go, Fedor. I'll be back soon.","date":"2012-03-21T14:46:46.163Z","type":"message"}
{"nick":"creationix","message":"indutny, thanks","date":"2012-03-21T14:47:17.837Z","type":"message"}
{"nick":"creationix","message":"heh, broke the linux build though","date":"2012-03-21T14:49:09.214Z","type":"message"}
{"nick":"indutny","message":"-lrt?","date":"2012-03-21T14:49:13.949Z","type":"message"}
{"nick":"creationix","message":"-lrt is required there","date":"2012-03-21T14:49:18.971Z","type":"message"}
{"nick":"creationix","message":"I'll add in os hacks to the makefile","date":"2012-03-21T14:49:24.679Z","type":"message"}
{"nick":"creationix","message":"what that all that was needed for osx?","date":"2012-03-21T14:49:47.358Z","type":"message"}
{"nick":"creationix","message":"I don't test there very often","date":"2012-03-21T14:49:55.148Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-21T14:50:53.217Z","type":"message"}
{"nick":"creationix","message":"hmm, testing the echo server with `nc localhost 8080 < /dev/urandom > /dev/null` segfaults","date":"2012-03-21T14:52:54.753Z","type":"message"}
{"nick":"creationix","message":"probably my bug though","date":"2012-03-21T14:53:03.540Z","type":"message"}
{"nick":"creationix","message":"yeah, in a luv_write call","date":"2012-03-21T14:53:44.923Z","type":"message"}
{"nick":"creationix","message":"I'm probably doing something unsafe in there with the char* and it only breaks in high load","date":"2012-03-21T14:54:25.663Z","type":"message"}
{"nick":"indutny","message":"haha","date":"2012-03-21T14:54:33.704Z","type":"message"}
{"nick":"indutny","message":"you're storing Object* in .data","date":"2012-03-21T14:54:41.739Z","type":"message"}
{"nick":"indutny","message":"that's incorrect","date":"2012-03-21T14:54:44.812Z","type":"message"}
{"nick":"creationix","message":"needs to change that to Handle<Object> too","date":"2012-03-21T14:54:57.792Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-21T14:55:02.111Z","type":"message"}
{"nick":"creationix","message":"so what do Handle::SetWeakCallback and Handle::ClearWeak do","date":"2012-03-21T14:56:12.680Z","type":"message"}
{"nick":"indutny","message":"creationix: lets start from the beggining :)","date":"2012-03-21T14:56:33.208Z","type":"message"}
{"nick":"indutny","message":"Value* is a pointer to a value","date":"2012-03-21T14:56:45.879Z","type":"message"}
{"nick":"creationix","message":"and it's not GC safe by default","date":"2012-03-21T14:56:53.780Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-21T14:56:56.927Z","type":"message"}
{"nick":"indutny","message":"because GC may move objects","date":"2012-03-21T14:57:01.188Z","type":"message"}
{"nick":"creationix","message":"oh, so the value of them can change too","date":"2012-03-21T14:57:11.878Z","type":"message"}
{"nick":"creationix","message":"good to know","date":"2012-03-21T14:57:14.706Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-21T14:57:16.838Z","type":"message"}
{"nick":"indutny","message":"Handle will track those changes","date":"2012-03-21T14:57:22.517Z","type":"message"}
{"nick":"creationix","message":"that explains a lot of breakage","date":"2012-03-21T14:57:24.563Z","type":"message"}
{"nick":"indutny","message":"and change internal pointer","date":"2012-03-21T14:57:28.527Z","type":"message"}
{"nick":"creationix","message":"I thought Handle was only for when I wanted to root something to prevent it from getting collected","date":"2012-03-21T14:57:58.399Z","type":"message"}
{"nick":"indutny","message":"and for that too, yes","date":"2012-03-21T14:58:30.626Z","type":"message"}
{"nick":"creationix","message":"ok, so any value I'm accessing from C++ needs to use a Handle","date":"2012-03-21T14:58:32.373Z","type":"message"}
{"nick":"indutny","message":"not really","date":"2012-03-21T14:58:41.656Z","type":"message"}
{"nick":"creationix","message":"except for local stuff that I won't use outside the current function","date":"2012-03-21T14:58:43.522Z","type":"message"}
{"nick":"indutny","message":"just Values that you may use in later C++ interruptions","date":"2012-03-21T14:58:53.746Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-21T14:58:56.173Z","type":"message"}
{"nick":"creationix","message":"ok","date":"2012-03-21T14:59:01.319Z","type":"message"}
{"nick":"indutny","message":"or something that you'll return and 'forget'","date":"2012-03-21T14:59:05.051Z","type":"message"}
{"nick":"creationix","message":"now about being persistent","date":"2012-03-21T14:59:09.570Z","type":"message"}
{"nick":"indutny","message":"like return Object::NewEmpty()","date":"2012-03-21T14:59:12.385Z","type":"message"}
{"nick":"creationix","message":"are values in handles always persistent?","date":"2012-03-21T14:59:30.845Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-21T14:59:34.061Z","type":"message"}
{"nick":"creationix","message":"so how do I make a handle weak","date":"2012-03-21T14:59:44.816Z","type":"message"}
{"nick":"creationix","message":"I want to track something, but not prevent it from being collected","date":"2012-03-21T14:59:58.678Z","type":"message"}
{"nick":"indutny","message":"creationix: create a temporary handle","date":"2012-03-21T15:00:22.954Z","type":"message"}
{"nick":"creationix","message":"does SetWeakCallback do that as well or just notify me when it's about to be GCed","date":"2012-03-21T15:00:38.570Z","type":"message"}
{"nick":"indutny","message":"call SetWeakCallback","date":"2012-03-21T15:00:40.997Z","type":"message"}
{"nick":"indutny","message":"no","date":"2012-03-21T15:00:42.112Z","type":"message"}
{"nick":"indutny","message":"it just adds that pointer to a weak list","date":"2012-03-21T15:01:00.654Z","type":"message"}
{"nick":"indutny","message":"which is checked on every GC","date":"2012-03-21T15:01:05.460Z","type":"message"}
{"nick":"indutny","message":"before finalization","date":"2012-03-21T15:01:08.953Z","type":"message"}
{"nick":"indutny","message":"and if pointer was GCed - your callback will be called","date":"2012-03-21T15:01:20.441Z","type":"message"}
{"nick":"creationix","message":"got it","date":"2012-03-21T15:01:26.343Z","type":"message"}
{"nick":"creationix","message":"I just don't understand how a temporary handle makes it weak","date":"2012-03-21T15:01:35.519Z","type":"message"}
{"nick":"creationix","message":"what is  \"temporary\" handle","date":"2012-03-21T15:01:47.291Z","type":"message"}
{"nick":"indutny","message":"the idea is that temporary handle lives only in a current C++ scope","date":"2012-03-21T15:01:57.910Z","type":"message"}
{"nick":"indutny","message":"and will remove persistent flag once destroyed","date":"2012-03-21T15:02:06.796Z","type":"message"}
{"nick":"creationix","message":"ahh, the Handle's destructor","date":"2012-03-21T15:02:12.188Z","type":"message"}
{"nick":"indutny","message":"while WeakCallback will stay in weak list","date":"2012-03-21T15:02:13.995Z","type":"message"}
{"nick":"indutny","message":"hm...","date":"2012-03-21T15:02:30.429Z","type":"message"}
{"nick":"indutny","message":"looks like it's not straight-forward","date":"2012-03-21T15:02:39.229Z","type":"message"}
{"nick":"creationix","message":"so how do I create a permanent handle other than static handles at the file level?","date":"2012-03-21T15:02:50.883Z","type":"message"}
{"nick":"indutny","message":"you can embed handle inside some static object","date":"2012-03-21T15:03:06.229Z","type":"message"}
{"nick":"indutny","message":"or class","date":"2012-03-21T15:03:14.591Z","type":"message"}
{"nick":"indutny","message":"it should remain live","date":"2012-03-21T15:03:28.058Z","type":"message"}
{"nick":"creationix","message":"like a malloced uv_handle_t's data property?","date":"2012-03-21T15:03:31.983Z","type":"message"}
{"nick":"indutny","message":"something like that","date":"2012-03-21T15:03:38.868Z","type":"message"}
{"nick":"indutny","message":"but constructor should be called","date":"2012-03-21T15:03:43.325Z","type":"message"}
{"nick":"indutny","message":"and destructor not","date":"2012-03-21T15:03:49.387Z","type":"message"}
{"nick":"creationix","message":"handle->data = new Handle<Object>(myObj)","date":"2012-03-21T15:04:08.335Z","type":"message"}
{"nick":"creationix","message":"and delete handle->data when I want it to be not persistent?","date":"2012-03-21T15:04:43.082Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-21T15:04:52.893Z","type":"message"}
{"nick":"indutny","message":"what do you think about Value::SetWeakCallback","date":"2012-03-21T15:05:31.536Z","type":"message"}
{"nick":"creationix","message":"that would be handy","date":"2012-03-21T15:05:40.642Z","type":"message"}
{"nick":"indutny","message":"I think that too","date":"2012-03-21T15:05:46.127Z","type":"message"}
{"nick":"creationix","message":"I'd really like Value::Ref() and Value::Unref()","date":"2012-03-21T15:06:04.904Z","type":"message"}
{"nick":"creationix","message":"but I guess that doesn't make sense","date":"2012-03-21T15:06:12.066Z","type":"message"}
{"nick":"creationix","message":"I need the handle to keep track of the Value","date":"2012-03-21T15:06:20.502Z","type":"message"}
{"nick":"indutny","message":"that doesn't make sense","date":"2012-03-21T15:06:34.091Z","type":"message"}
{"nick":"indutny","message":"you're right","date":"2012-03-21T15:06:38.074Z","type":"message"}
{"nick":"creationix","message":"maybe Handle::Ref and Handle::Unref?","date":"2012-03-21T15:06:43.689Z","type":"message"}
{"nick":"creationix","message":"hmm","date":"2012-03-21T15:07:03.061Z","type":"message"}
{"nick":"indutny","message":"no","date":"2012-03-21T15:07:18.234Z","type":"message"}
{"nick":"creationix","message":"I can't do what CWrapper does without creating a new structure","date":"2012-03-21T15:07:21.337Z","type":"message"}
{"nick":"creationix","message":"I'd like to avoid that if possible","date":"2012-03-21T15:07:25.968Z","type":"message"}
{"nick":"creationix","message":"but I can't think of a clean way to do it","date":"2012-03-21T15:07:33.616Z","type":"message"}
{"nick":"creationix","message":"I guess I just won't make my objects weak till close is called","date":"2012-03-21T15:08:30.704Z","type":"message"}
{"nick":"creationix","message":"or rather in onClose","date":"2012-03-21T15:08:46.335Z","type":"message"}
{"nick":"creationix","message":"but that's the last callback to ever fire","date":"2012-03-21T15:08:51.229Z","type":"message"}
{"nick":"indutny","message":"nono","date":"2012-03-21T15:08:56.251Z","type":"message"}
{"nick":"creationix","message":"so I don't need a C++ persistent handle anymore","date":"2012-03-21T15:08:58.155Z","type":"message"}
{"nick":"indutny","message":"that's not good","date":"2012-03-21T15:08:58.631Z","type":"message"}
{"nick":"indutny","message":"you should set weak callback","date":"2012-03-21T15:09:08.593Z","type":"message"}
{"nick":"creationix","message":"can you prevent it from cleaning in the weak callback","date":"2012-03-21T15:09:21.691Z","type":"message"}
{"nick":"indutny","message":"and do Handle.Wrap in any action that need value to persist for some time","date":"2012-03-21T15:09:35.441Z","type":"message"}
{"nick":"indutny","message":"brb","date":"2012-03-21T15:09:53.627Z","type":"message"}
{"nick":"creationix","message":"I guess I don't understand what Wrap does","date":"2012-03-21T15:10:29.740Z","type":"message"}
{"nick":"indutny","message":"you can create an \"empty\" handle","date":"2012-03-21T15:12:11.248Z","type":"message"}
{"nick":"indutny","message":"without a pointer inside it","date":"2012-03-21T15:12:15.647Z","type":"message"}
{"nick":"indutny","message":"and Wrap some pointer later","date":"2012-03-21T15:12:20.546Z","type":"message"}
{"nick":"creationix","message":"so it's the same thing as what the constructor does then?","date":"2012-03-21T15:12:30.154Z","type":"message"}
{"nick":"indutny","message":"that'll make that pointer persist (while handle itself is live)","date":"2012-03-21T15:12:33.306Z","type":"message"}
{"nick":"indutny","message":"Wrap()? yes","date":"2012-03-21T15:12:39.233Z","type":"message"}
{"nick":"indutny","message":"moved SetWeakCallback to Value class","date":"2012-03-21T15:12:57.766Z","type":"message"}
{"nick":"indutny","message":"gtg","date":"2012-03-21T15:12:59.319Z","type":"message"}
{"nick":"indutny","new_nick":"indutny_away","date":"2012-03-21T15:13:02.438Z","type":"nick"}
{"nick":"indutny_away","action":"should be back in 30-40 minutes","date":"2012-03-21T15:13:20.194Z","type":"action"}
{"nick":"karterk","date":"2012-03-21T15:15:40.386Z","type":"join"}
{"nick":"creationix","message":"should I document the api in the header file or in a markdown file","date":"2012-03-21T15:15:49.176Z","type":"message"}
{"nick":"creationix","message":"I'm thinking markdown","date":"2012-03-21T15:16:06.977Z","type":"message"}
{"nick":"karterk_","date":"2012-03-21T15:22:48.459Z","type":"join"}
{"nick":"karterk","reason":"Ping timeout: 255 seconds","date":"2012-03-21T15:26:08.505Z","type":"quit"}
{"nick":"karterk","date":"2012-03-21T15:44:13.345Z","type":"join"}
{"nick":"karterk_","reason":"Ping timeout: 244 seconds","date":"2012-03-21T15:47:56.468Z","type":"quit"}
{"nick":"indutny_away","message":"back","date":"2012-03-21T15:48:04.833Z","type":"message"}
{"nick":"indutny_away","message":"creationix: may be both? :)","date":"2012-03-21T15:48:19.521Z","type":"message"}
{"nick":"indutny_away","message":"one brief (header) and second full (markdown)","date":"2012-03-21T15:48:32.980Z","type":"message"}
{"nick":"creationix","message":"perhaps","date":"2012-03-21T15:48:41.780Z","type":"message"}
{"nick":"creationix","message":"examples in the markdown","date":"2012-03-21T15:48:46.766Z","type":"message"}
{"nick":"creationix","message":"btw, is Value::tag meant to be used as public?","date":"2012-03-21T15:48:58.765Z","type":"message"}
{"nick":"creationix","message":"I'm trying to switch on it instead of chaining if else using Is<T>","date":"2012-03-21T15:49:12.262Z","type":"message"}
{"nick":"creationix","message":"I see it's a static on the class","date":"2012-03-21T15:49:46.709Z","type":"message"}
{"nick":"creationix","message":"not a property on the instance","date":"2012-03-21T15:49:51.141Z","type":"message"}
{"nick":"indutny_away","message":"creationix: tag won't work","date":"2012-03-21T15:50:51.877Z","type":"message"}
{"nick":"indutny_away","message":"I may introduce Type() if you need that","date":"2012-03-21T15:51:03.705Z","type":"message"}
{"nick":"creationix","message":"I just want a fast way to switch on type","date":"2012-03-21T15:51:47.183Z","type":"message"}
{"nick":"indutny_away","message":"ok","date":"2012-03-21T15:53:16.464Z","type":"message"}
{"nick":"indutny_away","message":"adding it atm","date":"2012-03-21T15:53:20.934Z","type":"message"}
{"nick":"indutny_away","message":"creationix: done","date":"2012-03-21T15:54:18.291Z","type":"message"}
{"nick":"indutny_away","message":"creationix: https://github.com/indutny/candor/commit/83e4073f403bd5d7df7c27c1d7b27d813d098bf7","date":"2012-03-21T15:54:29.349Z","type":"message"}
{"nick":"creationix","message":"cool","date":"2012-03-21T15:55:07.013Z","type":"message"}
{"nick":"indutny_away","new_nick":"indutny","date":"2012-03-21T15:55:21.653Z","type":"nick"}
{"nick":"creationix","message":"kString","date":"2012-03-21T15:55:41.209Z","type":"message"}
{"nick":"creationix","message":"src/cio.cc:25:9: error: �kString� was not declared in this scope","date":"2012-03-21T15:55:45.143Z","type":"message"}
{"nick":"indutny","message":"creationix: ooops","date":"2012-03-21T15:56:00.424Z","type":"message"}
{"nick":"indutny","message":"aah","date":"2012-03-21T15:56:03.268Z","type":"message"}
{"nick":"indutny","message":"Value::kString","date":"2012-03-21T15:56:05.869Z","type":"message"}
{"nick":"creationix","message":"ok","date":"2012-03-21T15:56:12.916Z","type":"message"}
{"nick":"creationix","message":"cool, now I just have a lot of","date":"2012-03-21T15:57:40.063Z","type":"message"}
{"nick":"creationix","message":"src/cio.cc:30:16: error: jump to case label [-fpermissive]","date":"2012-03-21T15:57:40.452Z","type":"message"}
{"nick":"creationix","message":"src/cio.cc:26:13: error:   crosses initialization of �candor::String* string�","date":"2012-03-21T15:57:40.655Z","type":"message"}
{"nick":"creationix","message":"I guess that's dangerous somehow","date":"2012-03-21T15:57:51.114Z","type":"message"}
{"nick":"creationix","message":"it didn't complain when it was chained it else","date":"2012-03-21T15:58:01.366Z","type":"message"}
{"nick":"creationix","message":"*else if","date":"2012-03-21T15:58:05.385Z","type":"message"}
{"nick":"indutny","message":"hehe","date":"2012-03-21T15:58:09.586Z","type":"message"}
{"nick":"indutny","message":"wrap case bodies with \"{\" \"}\"","date":"2012-03-21T15:58:15.957Z","type":"message"}
{"nick":"creationix","message":"ahh, right","date":"2012-03-21T15:58:26.149Z","type":"message"}
{"nick":"indutny","message":"http://en.wikipedia.org/w/index.php?title=Candor_(programming_language)&action=edit&redlink=1","date":"2012-03-21T16:13:22.076Z","type":"message"}
{"nick":"indutny","message":":D","date":"2012-03-21T16:13:25.582Z","type":"message"}
{"nick":"indutny","message":"http://en.wikipedia.org/wiki/Candor_(programming_language)","date":"2012-03-21T16:24:36.511Z","type":"message"}
{"nick":"indutny","message":"creationix: ^ ;)","date":"2012-03-21T16:24:44.851Z","type":"message"}
{"nick":"creationix","message":":)","date":"2012-03-21T16:30:59.756Z","type":"message"}
{"nick":"indutny","reason":"Ping timeout: 265 seconds","date":"2012-03-21T16:52:31.157Z","type":"quit"}
{"nick":"indutny","date":"2012-03-21T16:56:44.040Z","type":"join"}
{"nick":"mmalecki[away]","new_nick":"mmalecki","date":"2012-03-21T17:19:29.337Z","type":"nick"}
{"nick":"indutny","date":"2012-03-21T17:29:27.313Z","type":"part"}
{"nick":"piscisaureus_","reason":"Ping timeout: 248 seconds","date":"2012-03-21T17:41:05.966Z","type":"quit"}
{"nick":"indutny","date":"2012-03-21T17:44:07.003Z","type":"join"}
{"nick":"indutny","message":"kk","date":"2012-03-21T17:44:27.760Z","type":"message"}
{"nick":"indutny","message":"ooops","date":"2012-03-21T17:44:29.335Z","type":"message"}
{"nick":"indutny","message":"have I missed anything?","date":"2012-03-21T17:44:34.432Z","type":"message"}
{"nick":"creationix","message":"I'm writing API docs","date":"2012-03-21T17:51:51.970Z","type":"message"}
{"nick":"creationix","message":"https://gist.github.com/2150205","date":"2012-03-21T17:52:16.331Z","type":"message"}
{"nick":"indutny","message":"creationix: cool!","date":"2012-03-21T18:03:25.781Z","type":"message"}
{"nick":"indutny","message":"creationix: wooow, it looks awesome!","date":"2012-03-21T18:04:41.014Z","type":"message"}
{"nick":"creationix","message":"indutny, you'll want to check it for inaccuracies, but I think I understand the API now","date":"2012-03-21T18:05:14.367Z","type":"message"}
{"nick":"karterk","reason":"Remote host closed the connection","date":"2012-03-21T18:05:26.106Z","type":"quit"}
{"nick":"creationix","message":"I'm writing the Handle section now, not sure if I'll get to CWrapper today","date":"2012-03-21T18:05:36.209Z","type":"message"}
{"nick":"indutny","message":"k","date":"2012-03-21T18:05:46.515Z","type":"message"}
{"nick":"creationix","message":"since I don't use CWrapper anymore, I'm not sure the best way to use it","date":"2012-03-21T18:05:52.330Z","type":"message"}
{"nick":"indutny","message":"I'm thinking about Function::New(\"asd\")","date":"2012-03-21T18:05:54.118Z","type":"message"}
{"nick":"creationix","message":"without length","date":"2012-03-21T18:05:59.670Z","type":"message"}
{"nick":"creationix","message":"that's fine","date":"2012-03-21T18:06:02.390Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-21T18:06:02.879Z","type":"message"}
{"nick":"creationix","message":"btw, Arguments is nothing like Array under the hood right?","date":"2012-03-21T18:06:38.826Z","type":"message"}
{"nick":"creationix","message":"Arguments is an actual dense Value* array","date":"2012-03-21T18:06:51.629Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-21T18:07:22.338Z","type":"message"}
{"nick":"indutny","message":"arguments are reversed on stack","date":"2012-03-21T18:07:35.027Z","type":"message"}
{"nick":"indutny","message":"it's just to rewrite access to do negative lookups","date":"2012-03-21T18:07:49.307Z","type":"message"}
{"nick":"indutny","message":"i.e [1] -> [-1]","date":"2012-03-21T18:07:54.228Z","type":"message"}
{"nick":"indutny","message":"and","date":"2012-03-21T18:08:48.456Z","type":"message"}
{"nick":"indutny","message":"function has an empty object as context by default","date":"2012-03-21T18:08:58.125Z","type":"message"}
{"nick":"indutny","message":"\"C@nd0rRr0cks!\" … probably, better R0cks","date":"2012-03-21T18:10:49.102Z","type":"message"}
{"nick":"indutny","message":"but that's not important","date":"2012-03-21T18:10:57.136Z","type":"message"}
{"nick":"indutny","message":"arrays can hold only positive integer keys","date":"2012-03-21T18:11:21.918Z","type":"message"}
{"nick":"indutny","message":"(going to add this restriction as a part of implementing dense arrays)","date":"2012-03-21T18:11:34.573Z","type":"message"}
{"nick":"indutny","message":"man, that's gorgeous","date":"2012-03-21T18:13:07.854Z","type":"message"}
{"nick":"indutny","message":"creationix++","date":"2012-03-21T18:13:11.723Z","type":"message"}
{"nick":"creationix","message":":)","date":"2012-03-21T18:13:15.263Z","type":"message"}
{"nick":"indutny","message":"creationix: ++","date":"2012-03-21T18:13:16.458Z","type":"message"}
{"nick":"kohai","message":"creationix has 3 cherry juices","date":"2012-03-21T18:13:17.374Z","type":"message"}
{"nick":"kohai","message":"creationix has 4 cherry juices","date":"2012-03-21T18:13:17.866Z","type":"message"}
{"nick":"indutny","message":"I think better put Handle part right after the Value definition","date":"2012-03-21T18:13:53.740Z","type":"message"}
{"nick":"creationix","message":"Handle::IsEmpty(), could we reverse the logic?","date":"2012-03-21T18:14:07.748Z","type":"message"}
{"nick":"indutny","message":"otherwise everyone will met GC issues","date":"2012-03-21T18:14:09.075Z","type":"message"}
{"nick":"creationix","message":"usually I'm checking if there is a value, not if there isn't a value","date":"2012-03-21T18:14:21.805Z","type":"message"}
{"nick":"indutny","message":"how should it be called then?","date":"2012-03-21T18:14:31.062Z","type":"message"}
{"nick":"creationix","message":"unless you can think of other common use cases","date":"2012-03-21T18:14:32.425Z","type":"message"}
{"nick":"indutny","message":"it's ok","date":"2012-03-21T18:14:40.904Z","type":"message"}
{"nick":"creationix","message":"good point","date":"2012-03-21T18:14:45.938Z","type":"message"}
{"nick":"indutny","message":"just give me a hint on naming","date":"2012-03-21T18:14:48.118Z","type":"message"}
{"nick":"creationix","message":"I just ordered the sections like in the header","date":"2012-03-21T18:15:19.009Z","type":"message"}
{"nick":"creationix","message":"but we can reorder based on order they need to be learned","date":"2012-03-21T18:15:28.419Z","type":"message"}
{"nick":"creationix","message":"handles should go up top somewhere","date":"2012-03-21T18:15:35.082Z","type":"message"}
{"nick":"creationix","message":"CWrapper goes after CData","date":"2012-03-21T18:15:48.669Z","type":"message"}
{"nick":"creationix","message":"IsEmpty is fine, I can't think of a good name for reversed logic","date":"2012-03-21T18:16:07.653Z","type":"message"}
{"nick":"indutny","message":"yeah","date":"2012-03-21T18:16:22.615Z","type":"message"}
{"nick":"indutny","message":"me too","date":"2012-03-21T18:16:23.791Z","type":"message"}
{"nick":"creationix","message":"indutny, ok, reordered the sections and wrote about handles","date":"2012-03-21T18:29:10.715Z","type":"message"}
{"nick":"creationix","message":"now just have CWrapper left","date":"2012-03-21T18:29:15.248Z","type":"message"}
{"nick":"indutny","message":"cool!","date":"2012-03-21T18:29:38.920Z","type":"message"}
{"nick":"indutny","message":"s/rooted/root","date":"2012-03-21T18:29:42.255Z","type":"message"}
{"nick":"indutny","message":"otherwise lgtm!","date":"2012-03-21T18:30:53.392Z","type":"message"}
{"nick":"indutny","message":"really nice","date":"2012-03-21T18:31:00.594Z","type":"message"}
{"nick":"creationix","message":"s/rooted/root/?","date":"2012-03-21T18:37:50.991Z","type":"message"}
{"nick":"creationix","message":"where","date":"2012-03-21T18:37:52.495Z","type":"message"}
{"nick":"creationix","message":"how about \"Also handles mark a value as being GC in the root.  This prevents them from being collected.  This is required if your value isn't accessable from some already rooted value and you intend for it to stick around.\"","date":"2012-03-21T18:38:06.596Z","type":"message"}
{"nick":"creationix","message":"hmm","date":"2012-03-21T18:38:18.021Z","type":"message"}
{"nick":"creationix","message":"I've always heard the phrase \"GC rooted\" but maybe I'm wrong","date":"2012-03-21T18:38:40.380Z","type":"message"}
{"nick":"indutny","message":"GC has roots","date":"2012-03-21T18:45:18.160Z","type":"message"}
{"nick":"indutny","message":"some values that are definitely should remain after GC","date":"2012-03-21T18:45:33.970Z","type":"message"}
{"nick":"creationix","message":"ok, so it adds it as a new GC root","date":"2012-03-21T18:45:39.196Z","type":"message"}
{"nick":"indutny","message":"yes","date":"2012-03-21T18:45:43.462Z","type":"message"}
{"nick":"indutny","message":"or adds value to the GC roots","date":"2012-03-21T18:45:48.382Z","type":"message"}
{"nick":"indutny","message":"better latter one","date":"2012-03-21T18:45:58.799Z","type":"message"}
{"nick":"creationix","message":"\"Also handles mark a value as being a new GC root\"","date":"2012-03-21T18:46:15.458Z","type":"message"}
{"nick":"indutny","message":"sounds good","date":"2012-03-21T18:46:41.378Z","type":"message"}
{"nick":"creationix","message":"ok, so on CWrapper, remind me how that's meant to be used","date":"2012-03-21T18:48:22.291Z","type":"message"}
{"nick":"creationix","message":"class MyObject : public CWrapper","date":"2012-03-21T18:48:31.915Z","type":"message"}
{"nick":"creationix","message":"Implement WeakCallback if I want to be notified?","date":"2012-03-21T18:49:00.646Z","type":"message"}
{"nick":"creationix","message":"or implement the destructor","date":"2012-03-21T18:49:05.507Z","type":"message"}
{"nick":"indutny","message":"nono","date":"2012-03-21T18:49:22.275Z","type":"message"}
{"nick":"indutny","message":"implement destructor","date":"2012-03-21T18:49:28.076Z","type":"message"}
{"nick":"indutny","message":"sorry","date":"2012-03-21T18:49:30.182Z","type":"message"}
{"nick":"indutny","message":"gtg","date":"2012-03-21T18:49:30.710Z","type":"message"}
{"nick":"indutny","message":"ttyl","date":"2012-03-21T18:49:31.765Z","type":"message"}
{"nick":"creationix","message":"ok","date":"2012-03-21T18:49:47.068Z","type":"message"}
{"nick":"creationix","message":"indutny, pushed to API.md","date":"2012-03-21T19:03:43.509Z","type":"message"}
{"nick":"creationix","message":":)","date":"2012-03-21T19:03:44.800Z","type":"message"}
{"nick":"creationix","message":"https://github.com/indutny/candor/blob/master/API.md","date":"2012-03-21T19:04:10.312Z","type":"message"}
{"nick":"indutny","message":"creationix: cool!","date":"2012-03-21T19:19:43.431Z","type":"message"}
{"nick":"indutny","message":"thank you","date":"2012-03-21T19:19:44.839Z","type":"message"}
{"nick":"creationix","message":"now back to cleaning up candor.io and getting that http server running","date":"2012-03-21T19:20:17.080Z","type":"message"}
{"nick":"creationix","message":"it's getting close","date":"2012-03-21T19:20:19.640Z","type":"message"}
{"nick":"creationix","message":"btw, the wikipedia article isn't good enough for them yet http://en.wikipedia.org/wiki/Candor_(programming_language)","date":"2012-03-21T19:27:45.864Z","type":"message"}
{"nick":"creationix","message":"\"It is proposed that this article be deleted because of the following concern: No evidence of notability\"","date":"2012-03-21T19:27:58.493Z","type":"message"}
{"nick":"indutny","message":"heh","date":"2012-03-21T19:30:30.552Z","type":"message"}
{"nick":"indutny","message":"well, may be better fill it later","date":"2012-03-21T19:30:44.971Z","type":"message"}
{"nick":"creationix","message":"yeah, it's a little early for candor","date":"2012-03-21T19:31:45.085Z","type":"message"}
{"nick":"creationix","message":"I'm not even sure I can put luvit on there","date":"2012-03-21T19:31:52.873Z","type":"message"}
{"nick":"creationix","message":"and rackspace is using it in production","date":"2012-03-21T19:31:58.491Z","type":"message"}
{"nick":"kohai","reason":"Remote host closed the connection","date":"2012-03-21T19:32:19.803Z","type":"quit"}
{"nick":"kohai","date":"2012-03-21T19:33:55.655Z","type":"join"}
{"nick":"indutny","message":"yes","date":"2012-03-21T19:47:34.229Z","type":"message"}
{"nick":"indutny","message":"agreed, that was hasty","date":"2012-03-21T19:47:56.912Z","type":"message"}
{"nick":"indutny","message":"going to sleep","date":"2012-03-21T19:48:00.265Z","type":"message"}
{"nick":"indutny","message":"ttyl","date":"2012-03-21T19:48:01.682Z","type":"message"}
{"nick":"piscisaureus_","date":"2012-03-21T22:23:35.158Z","type":"join"}
{"nick":"mmalecki","new_nick":"mmalecki[zzz]","date":"2012-03-21T23:16:56.381Z","type":"nick"}
