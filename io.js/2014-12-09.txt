{"nick":"Domenic","message":"rvagg: and I'm saying that there's nothing sync-style about using promises. yo ucan equally well make those learning hurdles with promises as with callbacks. easier, even, since it's distinct from [1, 2, 3].forEach(() => ...)","date":"2014-12-09T00:00:10.844Z","type":"message"}
{"nick":"piscisaureus","message":"rvagg: it's just a matter of supporting async/await if for some reason callbacks are not practical","date":"2014-12-09T00:00:18.502Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 252 seconds","date":"2014-12-09T00:00:29.412Z","type":"quit"}
{"nick":"rvagg","message":"Promises let you pretend there is no I/O cost to your execution and encourages serialisation, as if it were Java or some other traditional platform. Callbacks force you to consider the I/O because they introduce some flow-complexity, and this is a good thing","date":"2014-12-09T00:00:43.971Z","type":"message"}
{"nick":"stagas","reason":"Ping timeout: 264 seconds","date":"2014-12-09T00:00:53.496Z","type":"quit"}
{"nick":"Domenic","message":"why would you say promises let you pretend that? so totally false","date":"2014-12-09T00:00:55.351Z","type":"message"}
{"nick":"Domenic","message":"have you ever used them?","date":"2014-12-09T00:00:58.750Z","type":"message"}
{"nick":"trevnorris","message":"before this conversation blows up here, for starters I'd like to see the main core API be simplified and the existing streams/ee interface be moved to like lib/interfaces/","date":"2014-12-09T00:01:06.971Z","type":"message"}
{"nick":"trevnorris","message":"let's discuss what other APIs we want to put in, and how we want to put them in, after that.","date":"2014-12-09T00:01:19.195Z","type":"message"}
{"nick":"piscisaureus","message":"I like that we're having this discussion with the TC (extended)","date":"2014-12-09T00:01:39.183Z","type":"message"}
{"nick":"stanzheng","date":"2014-12-09T00:01:45.468Z","type":"join"}
{"nick":"rvagg","message":"Domenic: yes, it's about code structure, making your code _look_ as if the lines match up with the flow of operations, that's fine from an understandability POV but suboptimal from a making-the-most-of-the-platform POV","date":"2014-12-09T00:01:56.353Z","type":"message"}
{"nick":"eh_eff","date":"2014-12-09T00:02:03.250Z","type":"join"}
{"nick":"trevnorris","message":"piscisaureus: what I mean is, anything we discuss isn't even going to be possible to implement for quite a while. until after the API is simplified.","date":"2014-12-09T00:02:10.100Z","type":"message"}
{"nick":"rvagg","message":"I/O incurs massive cost, it's right for I/O operations to introduce complexity into flow-control","date":"2014-12-09T00:02:13.066Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: what if you don't have to do it but other people do?","date":"2014-12-09T00:02:30.550Z","type":"message"}
{"nick":"therebelrobot","reason":"Remote host closed the connection","date":"2014-12-09T00:02:35.269Z","type":"quit"}
{"nick":"piscisaureus","message":"trevnorris: if we do our TC job right we'll face this kind of question more and more. It's not about deciding what you or me work on, but what gets accepted.","date":"2014-12-09T00:03:05.911Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: you're at Google. Can you tell the V8 team to program in a way for us to extend JS natives? I've been hacking the V8 code and adding assembly to do stuff, but it's a pain. :-P","date":"2014-12-09T00:03:12.382Z","type":"message"}
{"nick":"rvagg","message":"meeting, gotta opt out of this fun bikeshed","date":"2014-12-09T00:03:18.381Z","type":"message"}
{"nick":"Domenic","message":"rvagg: that argument doesn't scale. call stacks introduce a massive cost; should they be more complex and we only introduce people to functions after they learn goto? ram introduces a massive cost; should we only introduce pepole to variables after they learn register allocation?","date":"2014-12-09T00:03:24.203Z","type":"message"}
{"nick":"Domenic","message":"trevnorris: you mean, add more % functions?","date":"2014-12-09T00:03:37.293Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: no. like how Math.random() will be replaced w/ platform specific assembly when the code is JIT'd.","date":"2014-12-09T00:04:09.031Z","type":"message"}
{"nick":"rvagg","message":"Domenic: memory vs other kinds of I/O are a totally different scale of operation, Node wins at perf because of this","date":"2014-12-09T00:04:10.154Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: erm. I guess that's actually done internally using the % functions, huh.","date":"2014-12-09T00:04:30.053Z","type":"message"}
{"nick":"Domenic","message":"rvagg: not really, the orders of magnitude are the same","date":"2014-12-09T00:04:57.891Z","type":"message"}
{"nick":"trevnorris","message":"hell. I'd love if I could control register allocation from JS...","date":"2014-12-09T00:04:57.955Z","type":"message"}
{"nick":"piscisaureus","message":"haha you;d pull your hair out","date":"2014-12-09T00:05:15.828Z","type":"message"}
{"nick":"piscisaureus","message":"do you have 8 registers or 32?","date":"2014-12-09T00:05:21.008Z","type":"message"}
{"nick":"Domenic","message":"should we make networking more complex than hard disk access? how about a simpler API for SSDs than for HDDs?","date":"2014-12-09T00:05:22.599Z","type":"message"}
{"nick":"chrisdickinson","message":"trevnorris: I think indutny's js.js might be up your alley ;)","date":"2014-12-09T00:05:31.090Z","type":"message"}
{"nick":"rvagg","message":"Domenic: that's totally false: http://r.va.gg/presentations/love-the-async/#7","date":"2014-12-09T00:05:34.446Z","type":"message"}
{"nick":"Domenic","message":"an API that requires more contortions the further away your target is!","date":"2014-12-09T00:05:37.804Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: dude. w/ that ability we could create a JS compiler in JS that generates machine code. ;-P","date":"2014-12-09T00:05:39.701Z","type":"message"}
{"nick":"piscisaureus","message":"jsjs","date":"2014-12-09T00:05:50.413Z","type":"message"}
{"nick":"piscisaureus","message":"is what we call that in the hallway","date":"2014-12-09T00:06:00.621Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: it's not impossible though.","date":"2014-12-09T00:06:42.838Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: if you add an mprotect() binding and a jump instruction, you can assemble  into a Buffer object and run it","date":"2014-12-09T00:07:17.985Z","type":"message"}
{"nick":"trevnorris","message":"haha. freaking awesome. didn't think about that.","date":"2014-12-09T00:07:35.055Z","type":"message"}
{"nick":"piscisaureus","message":"mraleph did an on stage demo at jsconf.eu once","date":"2014-12-09T00:07:51.275Z","type":"message"}
{"nick":"piscisaureus","message":"with just one instruction","date":"2014-12-09T00:08:07.141Z","type":"message"}
{"nick":"trevnorris","action":"ponders the amazing possibilities","date":"2014-12-09T00:08:17.297Z","type":"action"}
{"nick":"piscisaureus","message":"http://www.onlinevideolecture.com/computer-programming/likablemedia/javascript/index.php?course_id=2451&lecture_no=39","date":"2014-12-09T00:09:01.439Z","type":"message"}
{"nick":"chrisdickinson","message":"(& of course, https://github.com/js-js)","date":"2014-12-09T00:09:15.525Z","type":"message"}
{"nick":"trevnorris","message":"oh dude. you just made my day.","date":"2014-12-09T00:09:17.886Z","type":"message"}
{"nick":"chrisdickinson","message":"(just to linkify it)","date":"2014-12-09T00:09:20.442Z","type":"message"}
{"nick":"chrisdickinson","message":"(I think the mmap binding is in heap.js, iirc)","date":"2014-12-09T00:09:40.509Z","type":"message"}
{"nick":"Domenic","message":"piscisaureus: oh man I should re-watch that now that I know more things. Did you see his 2014 talk? I enjoyed that a lot too.","date":"2014-12-09T00:09:43.435Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: well, doubt the V8 team will extend their API to allow externally extending native built-ins. so, for now I'll keep a custom V8 build w/ my own.","date":"2014-12-09T00:12:08.748Z","type":"message"}
{"nick":"Domenic","message":"trevnorris: I dunno, if you write it up in a bit more detail I think they might be open to it","date":"2014-12-09T00:12:59.826Z","type":"message"}
{"nick":"Domenic","message":"seems important for any embedder","date":"2014-12-09T00:13:16.050Z","type":"message"}
{"nick":"piscisaureus","message":"I wonder if we can find a good compromise that keeps everyone happy","date":"2014-12-09T00:14:48.124Z","type":"message"}
{"nick":"piscisaureus","message":"and also makes people happy that are eagerly waiting for promises","date":"2014-12-09T00:14:58.650Z","type":"message"}
{"nick":"piscisaureus","message":"could we make the stack look like this: node <- (v8|spidermonkey) <- nan <- libuvjs <- libuv","date":"2014-12-09T00:15:57.429Z","type":"message"}
{"nick":"chrisdickinson","message":"I'm +0 on promises. as a streams fan, I really enjoy their composability & the parallels between `.then` and `.pipe`.","date":"2014-12-09T00:16:16.422Z","type":"message"}
{"nick":"chrisdickinson","message":"I mostly don't know how we can swing such a big ecosystem from one core primitive to the other without undue sturm Ã¼nd drang","date":"2014-12-09T00:17:30.203Z","type":"message"}
{"nick":"piscisaureus","message":"we can't take away callbacks","date":"2014-12-09T00:17:45.771Z","type":"message"}
{"nick":"piscisaureus","message":"for years node needs to support old and new","date":"2014-12-09T00:18:05.380Z","type":"message"}
{"nick":"chrisdickinson","message":"could steal a page from go and release source transformers at some point before the breaking changes :)","date":"2014-12-09T00:18:40.027Z","type":"message"}
{"nick":"piscisaureus","message":"could work although js is a bit harder to statically analyze","date":"2014-12-09T00:19:06.363Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: it'd be difficult because the user would have to write assembly code the same way it's written in all src/<platform>/. e.g. src/ia32/lithium-codegen-ia32.cc","date":"2014-12-09T00:19:18.301Z","type":"message"}
{"nick":"piscisaureus","message":"(although browserify does it too and it works fine for most people)","date":"2014-12-09T00:19:23.227Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: and they have to implement generic alternatives for before the code is JIT'd","date":"2014-12-09T00:19:33.580Z","type":"message"}
{"nick":"chrisdickinson","message":"piscisaureus: and CFG / DFA libs have started coming out, which makes it ... at least a little more feasible","date":"2014-12-09T00:19:58.937Z","type":"message"}
{"nick":"Domenic","message":"trevnorris: yeah, true. although that will be getting better (or at least different) with crankshaft","date":"2014-12-09T00:20:24.425Z","type":"message"}
{"nick":"srl295","message":"trevnorris: rebased with a test case https://github.com/joyent/node/pull/8719#issuecomment-66213845","date":"2014-12-09T00:20:53.327Z","type":"message"}
{"nick":"Domenic","message":"chrisdickinson: piscisaureus: I doubt this is robust but https://stuk.github.io/promise-me/","date":"2014-12-09T00:20:59.352Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: you mean TurboFan?","date":"2014-12-09T00:21:00.539Z","type":"message"}
{"nick":"bmac","date":"2014-12-09T00:21:10.684Z","type":"join"}
{"nick":"trevnorris","message":"piscisaureus: control flow dogma aside. I like the idea of mimicking libuv closely from JS for simplicity of testing, etc.","date":"2014-12-09T00:21:28.147Z","type":"message"}
{"nick":"Domenic","message":"trevnorris: yes -_-.","date":"2014-12-09T00:21:33.770Z","type":"message"}
{"nick":"srl295","message":"trevnorris: I just added test/simple/test-intl.js - does it need to be referenced anywhere else? // https://github.com/joyent/node/pull/8719#issuecomment-66213845","date":"2014-12-09T00:21:39.650Z","type":"message"}
{"nick":"Domenic","message":"trevnorris: piscisaureus: yes libuvjs seems like a pretty clear win. Might pay off for JIT optimizations too.","date":"2014-12-09T00:22:02.412Z","type":"message"}
{"nick":"srl295","message":"oops, paste what i mean.  should have been https://github.com/joyent/node/pull/8719#issuecomment-66213845","date":"2014-12-09T00:22:02.751Z","type":"message"}
{"nick":"srl295","message":"trevnorris:  https://github.com/joyent/node/blob/dc2100e41d97b7068bc63940733bf34736637d46/test/simple/test-intl.js","date":"2014-12-09T00:22:23.694Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: honestly, that's the reason I want to extend built-in natives. then we can make libuv calls directly from JS. ;-P","date":"2014-12-09T00:22:47.389Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: I agree - but at the same time libuv is moving toward a promise based model","date":"2014-12-09T00:22:47.898Z","type":"message"}
{"nick":"Domenic","message":"OH SHIT JUST GOT REAL","date":"2014-12-09T00:23:12.380Z","type":"message"}
{"nick":"Domenic","message":"(sorry couldn't resist)","date":"2014-12-09T00:23:17.226Z","type":"message"}
{"nick":"piscisaureus","message":"that is - it's now a mixed bag (reqs are basically promises in c, but handles are not)","date":"2014-12-09T00:23:17.282Z","type":"message"}
{"nick":"chrisdickinson","message":"haha :)","date":"2014-12-09T00:23:19.763Z","type":"message"}
{"nick":"michaelrhodes","date":"2014-12-09T00:23:32.400Z","type":"join"}
{"nick":"piscisaureus","message":"trevnorris: but with \"request all the things\" it'll all be requests, so basically a completely promise-ified api","date":"2014-12-09T00:23:42.955Z","type":"message"}
{"nick":"stanzheng","reason":"Remote host closed the connection","date":"2014-12-09T00:24:22.453Z","type":"quit"}
{"nick":"stanzheng","date":"2014-12-09T00:24:36.385Z","type":"join"}
{"nick":"rvagg","message":"is there an existing package that promisifies entire core to give a feel for what it looks like? core docs promisified would be neat too","date":"2014-12-09T00:25:50.098Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: that's not a coincidence. http://logs.libuv.org/libuv/2011-09-05#03:18:04.244","date":"2014-12-09T00:26:38.439Z","type":"message"}
{"nick":"bmac","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzzâ¦","date":"2014-12-09T00:26:51.406Z","type":"quit"}
{"nick":"piscisaureus","message":"trevnorris: libuv req objects are exposed to javascript. They are basically \"naked\" promises that allow no interaction.","date":"2014-12-09T00:27:17.843Z","type":"message"}
{"nick":"Domenic","message":"good times","date":"2014-12-09T00:27:55.051Z","type":"message"}
{"nick":"Domenic","message":"03:18:43\t<ryah>\ti need them for domains","date":"2014-12-09T00:27:58.762Z","type":"message"}
{"nick":"Domenic","message":"03:19:03\t<piscisaureus_>\twhen will you finish domains?","date":"2014-12-09T00:27:58.819Z","type":"message"}
{"nick":"trevnorris","message":"hehe. we really need LOUDBOT in here.","date":"2014-12-09T00:28:10.068Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: what's the leps for that?","date":"2014-12-09T00:28:10.150Z","type":"message"}
{"nick":"trevnorris","message":"srl295: oooh. _nice_ job checking the config build options against global.Intl. didn't even think about that.","date":"2014-12-09T00:28:14.955Z","type":"message"}
{"nick":"piscisaureus","message":"#w","date":"2014-12-09T00:28:15.784Z","type":"message"}
{"nick":"piscisaureus","message":"#2","date":"2014-12-09T00:28:18.155Z","type":"message"}
{"nick":"trevnorris","message":"srl295: oh, but the test will fail if en wasn't a configuration option. (can't it be configured like \"./configuration --with-intl=ge\" or something like that?)","date":"2014-12-09T00:28:22.346Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: holy shit. did you just reference a chat log from 2011?","date":"2014-12-09T00:28:24.360Z","type":"message"}
{"nick":"trevnorris","message":"oh. fuck. yeah, that's not a good reason at all.....","date":"2014-12-09T00:28:27.469Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: I hate domains more than I like callbacks. If that tells you anything. :P","date":"2014-12-09T00:29:10.043Z","type":"message"}
{"nick":"Domenic","message":"I don't think they're the same domains","date":"2014-12-09T00:29:20.619Z","type":"message"}
{"nick":"skift","date":"2014-12-09T00:29:25.594Z","type":"join"}
{"nick":"jvrousseau","date":"2014-12-09T00:29:27.098Z","type":"join"}
{"nick":"Domenic","message":"domains used to be bigger in ryah's head IIRC","date":"2014-12-09T00:29:30.587Z","type":"message"}
{"nick":"trevnorris","message":"ah, okay.","date":"2014-12-09T00:29:32.978Z","type":"message"}
{"nick":"piscisaureus","message":"yes","date":"2014-12-09T00:29:41.847Z","type":"message"}
{"nick":"piscisaureus","message":"but he got stuck and after him, yours truly","date":"2014-12-09T00:29:52.083Z","type":"message"}
{"nick":"piscisaureus","message":"so we can take a piss on isaac for not making them great, but he was in good company :p","date":"2014-12-09T00:30:09.535Z","type":"message"}
{"nick":"srl295","message":"trevnorris: grep is my friend today.   I don't have `with-intl=ge` - but filed a ticket for https://github.com/srl295/node/issues/10  and also https://github.com/srl295/node/issues/11 - was not sure if these were nice to have or needed for \"now\"","date":"2014-12-09T00:30:31.939Z","type":"message"}
{"nick":"trevnorris","message":"srl295: oh. I just made up ge. thought it was another internationalization code.","date":"2014-12-09T00:31:01.239Z","type":"message"}
{"nick":"piscisaureus","message":"I wonder what DrPizza is doing these days","date":"2014-12-09T00:31:23.889Z","type":"message"}
{"nick":"trevnorris","message":"srl295: thought we were going to do something like --with-intl=<comma separated codes>","date":"2014-12-09T00:31:29.308Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: do you mean uv_req_t, or requests in node? i'm really confused now.","date":"2014-12-09T00:32:06.895Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: so uv_req_ t objects are basically a generalized promise, e.g. a reference to an operation that's ongoing in the background . In node there are javascript objects tied to an uv_req_t (now AsyncWrap I think).","date":"2014-12-09T00:33:41.092Z","type":"message"}
{"nick":"piscisaureus","message":"Just like there are handle objects tied to an uv_handle_t (or a subclass thereof)","date":"2014-12-09T00:33:55.117Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: well, ReqWrap. but I get ya.","date":"2014-12-09T00:35:12.131Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: you're right. I'm guessing you are the resident expert in the c++ binding layer nowadays.","date":"2014-12-09T00:35:55.463Z","type":"message"}
{"nick":"trevnorris","message":"heh. sadly.","date":"2014-12-09T00:36:08.786Z","type":"message"}
{"nick":"srl295","message":"trevnorris: [intl] sorry, could have chatted about it a bit on Friday.","date":"2014-12-09T00:36:09.410Z","type":"message"}
{"nick":"piscisaureus","message":"I didn't really keep up","date":"2014-12-09T00:36:11.494Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: well, one thing I did do is make it so all requests now have a proper request object. hopefully in the future it'll be possible for users to track those.","date":"2014-12-09T00:36:47.813Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: in my magical land, async operations would return that request object.","date":"2014-12-09T00:37:15.123Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: anyhow, my idea would be that if we can feed the ReqWrap a special __proto__ you've gote a promise based api","date":"2014-12-09T00:37:18.723Z","type":"message"}
{"nick":"piscisaureus","message":"that's all you need to do realy","date":"2014-12-09T00:37:40.377Z","type":"message"}
{"nick":"trevnorris","message":"can you define \"special\"?","date":"2014-12-09T00:37:40.741Z","type":"message"}
{"nick":"piscisaureus","message":"yes the __proto__ needs to be Promise.prototype","date":"2014-12-09T00:37:58.027Z","type":"message"}
{"nick":"trevnorris","message":"oh, and one thing I absolutely disagree with is swallowing exceptions. IMO it's dangerous.","date":"2014-12-09T00:38:18.031Z","type":"message"}
{"nick":"piscisaureus","message":"in practice it's probably more practical make ReqWeap inherit from v8::Promise","date":"2014-12-09T00:38:18.390Z","type":"message"}
{"nick":"piscisaureus","message":"which callbacks do too","date":"2014-12-09T00:38:30.110Z","type":"message"}
{"nick":"piscisaureus","message":"you'd have to ask Domenic but I think the promise spec allows for not swallowing exceptions","date":"2014-12-09T00:38:45.518Z","type":"message"}
{"nick":"piscisaureus","message":"and I agree with you that it's bad","date":"2014-12-09T00:38:58.156Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: no. v8::Promise is a type of v8::Object. it'd make more sense to have the ReqWrap FunctionTemplate inherit from Promise.","date":"2014-12-09T00:39:21.874Z","type":"message"}
{"nick":"piscisaureus","message":"right, yes possible","date":"2014-12-09T00:39:38.137Z","type":"message"}
{"nick":"trevnorris","message":"Domenic: there something you can toggle to tell Promise not to swallow exceptions?","date":"2014-12-09T00:39:45.831Z","type":"message"}
{"nick":"piscisaureus","message":"You really know this better than me. I can't even question it.","date":"2014-12-09T00:39:49.178Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: Promise.resolve or reject is more or less the same as MakeCallback","date":"2014-12-09T00:40:09.717Z","type":"message"}
{"nick":"piscisaureus","message":"anyhow","date":"2014-12-09T00:41:39.554Z","type":"message"}
{"nick":"piscisaureus","message":"we can talk about it wednesday and probably more than that","date":"2014-12-09T00:41:53.185Z","type":"message"}
{"nick":"trevnorris","message":"sure thing.","date":"2014-12-09T00:42:14.416Z","type":"message"}
{"nick":"sehrope","date":"2014-12-09T00:42:54.559Z","type":"quit"}
{"nick":"trevnorris","message":"piscisaureus: while i may disagree that we should bundle a Promise API by default, I do strongly agree that extendability should be made as easy as possible.","date":"2014-12-09T00:43:13.900Z","type":"message"}
{"nick":"trevnorris","message":"there are some tricks we could use to make this simpler. i'll try to write something up. that'll help guide the design of the lower-level API.","date":"2014-12-09T00:43:48.740Z","type":"message"}
{"nick":"piscisaureus","message":"I'm looking forward to it","date":"2014-12-09T00:47:21.373Z","type":"message"}
{"nick":"guarilha","reason":"Read error: Connection reset by peer","date":"2014-12-09T00:47:28.033Z","type":"quit"}
{"nick":"piscisaureus","message":"Domenic: is there any TC talk about Promise#cancel ?","date":"2014-12-09T00:47:39.059Z","type":"message"}
{"nick":"piscisaureus","message":"Domenic: and what are you planning to do with setTimeout / setInterval ?","date":"2014-12-09T00:47:50.106Z","type":"message"}
{"nick":"bmac","date":"2014-12-09T00:48:59.884Z","type":"join"}
{"nick":"robertmaxrees","date":"2014-12-09T00:50:30.126Z","type":"join"}
{"nick":"AbeEstrada","reason":"Ping timeout: 255 seconds","date":"2014-12-09T00:50:31.280Z","type":"quit"}
{"nick":"trevnorris","message":"Domenic: one thing, is there any way under heaven I could convince the V8 team to at least add an ArrayBuffer API to copy out the data? Needing to Externalize() it just to memcpy out the contents is a serious PITA.","date":"2014-12-09T00:53:22.786Z","type":"message"}
{"nick":"piscisaureus","message":"It doesn't have that? weird. They could more or less clone the String::Write api and call it day","date":"2014-12-09T00:55:12.527Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: something. it's been a thorn in my side. V8 did a ton to optimize GC of ArrayBuffer's, and needing to Externalize() them completely defeats that.","date":"2014-12-09T00:56:36.907Z","type":"message"}
{"nick":"quijote","date":"2014-12-09T00:56:47.664Z","type":"join"}
{"nick":"bmac","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzzâ¦","date":"2014-12-09T00:56:55.210Z","type":"quit"}
{"nick":"piscisaureus","message":"trevnorris: TBH it looks like a simple oversight to me. I am sure they'd be amenable to an API suggestion to support copying.","date":"2014-12-09T00:57:19.650Z","type":"message"}
{"nick":"trevnorris","message":"there've been several mailing list requests. every one of them denied...","date":"2014-12-09T00:57:51.149Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: I think this would be a good v8 patch that you could actually get done yourself and get landed.","date":"2014-12-09T00:58:06.972Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: (that is  - maybe you did more than I know, but I do know that actually making a change to the JIT is really hard)","date":"2014-12-09T00:58:28.903Z","type":"message"}
{"nick":"trevnorris","message":"hm. i'll give it a try.","date":"2014-12-09T00:58:34.068Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: it shouldn't require a change to the JIT. I just want to memcpy out the data and return the void* to the user.","date":"2014-12-09T00:59:10.099Z","type":"message"}
{"nick":"bradleymeck","date":"2014-12-09T00:59:28.071Z","type":"join"}
{"nick":"piscisaureus","message":"trevnorris: exactly, that 's what I meant. This is actually tractable.","date":"2014-12-09T00:59:48.261Z","type":"message"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-12-09T00:59:59.804Z","type":"quit"}
{"nick":"piscisaureus","message":"Making changes to the JIT isn't, unless you focus 100% on v8 for a long time.","date":"2014-12-09T01:00:45.538Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 256 seconds","date":"2014-12-09T01:01:42.593Z","type":"quit"}
{"nick":"piscisaureus","message":"It never was for me either. The closest I got was optimizations to String::Write","date":"2014-12-09T01:02:28.670Z","type":"message"}
{"nick":"tridnguyen","reason":"Quit: Connection closed for inactivity","date":"2014-12-09T01:02:29.530Z","type":"quit"}
{"nick":"piscisaureus","message":"I work on crankshaft to get it to optimize try...catch, but to no avail","date":"2014-12-09T01:03:15.374Z","type":"message"}
{"nick":"Sebmaster","date":"2014-12-09T01:03:20.555Z","type":"join"}
{"nick":"Domenic","message":"trevnorris: it's devs tools work","date":"2014-12-09T01:05:53.320Z","type":"message"}
{"nick":"Domenic","message":"to not swallow exceptions","date":"2014-12-09T01:05:58.376Z","type":"message"}
{"nick":"Domenic","message":"chrome doesn't, firefox doesn't","date":"2014-12-09T01:06:03.871Z","type":"message"}
{"nick":"Domenic","message":"piscisaureus: yes, some talk about Promise#cancel. Some talk about setTimeout counterpart. setInterval is not really promise-able.","date":"2014-12-09T01:06:46.326Z","type":"message"}
{"nick":"Domenic","message":"trevnorris: again, probably could convince the V8 team, they're generally looking forward to working with node people :)","date":"2014-12-09T01:07:07.665Z","type":"message"}
{"nick":"trevnorris","message":"cool.","date":"2014-12-09T01:07:20.891Z","type":"message"}
{"nick":"trevnorris","message":"i'll try to do it myself first. haven't done a proper v8 patch before.","date":"2014-12-09T01:07:36.784Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: what do you think about adding a GCD type API where you can queue up tasks? i'm shimming one on top of libuv right now. it's ugly, but the only way I can think to improve multi-thread performance.","date":"2014-12-09T01:10:43.769Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: what do you mean exactly? something like uv_callback (also in lep 2)","date":"2014-12-09T01:11:32.581Z","type":"message"}
{"nick":"piscisaureus","message":"?","date":"2014-12-09T01:11:35.174Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: or do you want to queue up javascript callbacks>","date":"2014-12-09T01:12:15.415Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: that's very basic. the queue'ing mechanism allows to linearize calls so if one fails it can alert the user and stop processing of the queue.","date":"2014-12-09T01:12:18.632Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: it also has things like queue prioritization.","date":"2014-12-09T01:12:39.809Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: not for libuv but if it makes sense we could do it in the binding layer","date":"2014-12-09T01:12:50.246Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: there is talk about using a port/queue based model instead of a callback based model","date":"2014-12-09T01:13:04.028Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2014-12-09T01:13:32.557Z","type":"quit"}
{"nick":"piscisaureus","message":"trevnorris: so the user can take requests out of a completed requests queue and take control of dispatching","date":"2014-12-09T01:13:36.753Z","type":"message"}
{"nick":"xbuzz","date":"2014-12-09T01:13:49.631Z","type":"join"}
{"nick":"piscisaureus","message":"trevnorris: see https://github.com/libuv/leps/pull/3#discussion_r20995363 for example","date":"2014-12-09T01:14:03.147Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: i'm already shimming it in libnub. but it's ugly. only allows queue'ing of callbacks w/ data. in GCD you actually pass the queue to the function, much like how libuv requires you to pass the loop.","date":"2014-12-09T01:14:05.938Z","type":"message"}
{"nick":"trevnorris","message":"I could shim the entire API, but that would be a serious PITA.","date":"2014-12-09T01:14:40.608Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: what do you mean with \"passing the queue to the function\" ? What does the API look like?","date":"2014-12-09T01:15:11.694Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: thanks for pointing me to that discussion.","date":"2014-12-09T01:15:16.905Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: for an example: https://developer.apple.com/library/ios/documentation/Performance/Reference/GCD_libdispatch_Ref/index.html#//apple_ref/c/func/dispatch_io_read","date":"2014-12-09T01:15:35.583Z","type":"message"}
{"nick":"trevnorris","message":"notice how you pass the dispatch_queue_t.","date":"2014-12-09T01:15:50.094Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: that discussion is not yet converging though. There are two \"camps\", saul wants to have a separate uv_dispatch that calls callbacks, and creationix wants to have full control over dispatching without using callbacks at all.","date":"2014-12-09T01:16:39.400Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: yes, I'd like an API like that in libuv","date":"2014-12-09T01:17:37.935Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: but there isn't even a lep for it right now.","date":"2014-12-09T01:17:52.398Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: the idea behind uv_dispatch is what i'm already coding in libnub.","date":"2014-12-09T01:18:14.212Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: the fact that the uv_write_t is always dispatched to the loop that owns the target stream is something that spilled over from windows.","date":"2014-12-09T01:18:40.361Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: and it sounds like creationx wants a replication of the GCD API.","date":"2014-12-09T01:18:50.741Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: well, isn't that basically required since the socket is tied to the port on Windows?","date":"2014-12-09T01:19:36.698Z","type":"message"}
{"nick":"xbuzz","reason":"Quit: Be back later ...","date":"2014-12-09T01:19:44.892Z","type":"quit"}
{"nick":"piscisaureus","message":"trevnorris: creationix wants a port that produces \"packets\", that contain the type, parameters and the result.","date":"2014-12-09T01:19:46.937Z","type":"message"}
{"nick":"trevnorris","message":"ooh. no no. that's too much.","date":"2014-12-09T01:20:03.476Z","type":"message"}
{"nick":"piscisaureus","message":"but he (luvi) doesn't use c callbacks","date":"2014-12-09T01:20:13.299Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: yes, it's the windows model. Lacks flexibility though.","date":"2014-12-09T01:20:35.677Z","type":"message"}
{"nick":"piscisaureus","message":"I shouldn't have had that happen","date":"2014-12-09T01:20:50.645Z","type":"message"}
{"nick":"trevnorris","message":"yeah. and I'm fine w/ that since we're dealing w/ cross platform compatibility.","date":"2014-12-09T01:20:58.595Z","type":"message"}
{"nick":"piscisaureus","message":"it's not said that there is no way around","date":"2014-12-09T01:21:36.327Z","type":"message"}
{"nick":"piscisaureus","message":"even if it'd be a bit hacky","date":"2014-12-09T01:21:40.455Z","type":"message"}
{"nick":"trevnorris","message":"oh. well cool.","date":"2014-12-09T01:21:46.512Z","type":"message"}
{"nick":"piscisaureus","message":"it'd probably not be worse than what we do for cluster nowadays","date":"2014-12-09T01:21:54.536Z","type":"message"}
{"nick":"DaveMethvin","new_nick":"DaveMethvin|away","date":"2014-12-09T01:22:03.832Z","type":"nick"}
{"nick":"trevnorris","message":"honestly, my ideal is that the event loop thread only performs the I/O operations, and spawned threads do work and queue up what I/O for the event loop to perform.","date":"2014-12-09T01:22:06.455Z","type":"message"}
{"nick":"piscisaureus","message":"but we can't focus on that use case only","date":"2014-12-09T01:22:28.296Z","type":"message"}
{"nick":"piscisaureus","message":"so we need a flexible dispatch where it's up to you to decide which thread performs i/o and which thread receives the completion message","date":"2014-12-09T01:23:05.593Z","type":"message"}
{"nick":"trevnorris","message":"can you do that w/ a single event loop?","date":"2014-12-09T01:23:35.061Z","type":"message"}
{"nick":"piscisaureus","message":"and in cases where the platform actually does support async i/o it doesn't really make any sense to \"kick off\" the async operation from a worker thread","date":"2014-12-09T01:23:57.676Z","type":"message"}
{"nick":"piscisaureus","message":"but it might make sense to send the completion packet to another thread","date":"2014-12-09T01:24:13.158Z","type":"message"}
{"nick":"trevnorris","message":"are you basically talking about making calls like uv_write thread safe?","date":"2014-12-09T01:24:29.283Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: yes","date":"2014-12-09T01:24:34.940Z","type":"message"}
{"nick":"i0rn","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzzâ¦","date":"2014-12-09T01:24:42.439Z","type":"quit"}
{"nick":"piscisaureus","message":"trevnorris: I think everything should be thread safe (or we could be optionally thread safe, depending on a flag you set on the handle)","date":"2014-12-09T01:25:11.799Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: but how would the return callback know which thread to call back to? and how would you notify that thread?","date":"2014-12-09T01:25:39.941Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: this is what rust needed. It's what node needs to optimize the accept->tls->http->gzip flow","date":"2014-12-09T01:25:55.226Z","type":"message"}
{"nick":"trevnorris","message":"this is all stuff I've been working on in libnub, but I doubt it's the same model you'd want to adopt.","date":"2014-12-09T01:25:57.757Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: because you specify the target thread in the api I would think. But there's a lot of details to be worked out, agreed.","date":"2014-12-09T01:26:27.836Z","type":"message"}
{"nick":"piscisaureus","message":"(or completion queue, port, name it the way you like)","date":"2014-12-09T01:27:06.525Z","type":"message"}
{"nick":"trevnorris","message":"we may want to offer that flexibility, but having a thread dedicated to a single thing like decryption isn't going to work well. it requires too much cross thread communication.","date":"2014-12-09T01:27:06.581Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: that's why I would like to minimize x-thread communication","date":"2014-12-09T01:27:31.139Z","type":"message"}
{"nick":"trevnorris","message":"yeah. but having several threads spawned, each to do accept, tls, http, gzip, etc. is going to add a lot of cost.","date":"2014-12-09T01:28:09.041Z","type":"message"}
{"nick":"piscisaureus","message":"what if you could call an asynchronous version of uv_accept(sock, cb, threadpool_port)","date":"2014-12-09T01:28:24.131Z","type":"message"}
{"nick":"piscisaureus","message":"and the threadpool port received a callback with a new connection","date":"2014-12-09T01:28:37.006Z","type":"message"}
{"nick":"piscisaureus","message":"which it will then read data from, and then decrypt, parse, and unzip","date":"2014-12-09T01:28:52.519Z","type":"message"}
{"nick":"piscisaureus","message":"and only after that is all done it sends the result back to the main threead","date":"2014-12-09T01:29:01.933Z","type":"message"}
{"nick":"trevnorris","message":"the best you can do is add the work task to a queue. if the thread is already working then it'll just continue to process the queue until empty. but needing to signal the queue that there's more work to be done is expensive.","date":"2014-12-09T01:29:21.722Z","type":"message"}
{"nick":"piscisaureus","message":"the uv_accept call could be done on the main thread","date":"2014-12-09T01:29:22.154Z","type":"message"}
{"nick":"piscisaureus","message":"but once libuv accepts a connection it immediately sends it to a worker thread","date":"2014-12-09T01:29:41.190Z","type":"message"}
{"nick":"trevnorris","message":"i've tried to do a couple things to get around this. like spin locking for a short while on sem_trywait. but still costs a lot.","date":"2014-12-09T01:29:43.256Z","type":"message"}
{"nick":"piscisaureus","message":"and all further processing is done there","date":"2014-12-09T01:29:46.102Z","type":"message"}
{"nick":"trevnorris","message":"yeah. that's great.","date":"2014-12-09T01:29:56.977Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: try to find an algorithm that uses only spinlocks when uncontended","date":"2014-12-09T01:30:07.028Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: the problem with the semaphore is that it requires a syscall","date":"2014-12-09T01:30:24.165Z","type":"message"}
{"nick":"trevnorris","message":"what i'm saying is that, that one thread should do all the work. so spawn N threads and all those threads do the entire tls/http/gzip data flow.","date":"2014-12-09T01:30:33.608Z","type":"message"}
{"nick":"divinegod","reason":"Quit: My Mac has gone to sleep. ZZZzzzâ¦","date":"2014-12-09T01:30:40.452Z","type":"quit"}
{"nick":"piscisaureus","message":"yeah, I don't see the point of doing that","date":"2014-12-09T01:30:56.131Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: well, sem_trywait checks if it's immediately available (avoiding the syscall), so i'll spin lock checking that for a bit. then fallback to a full sem_wait so I don't burn up the CPI","date":"2014-12-09T01:31:23.447Z","type":"message"}
{"nick":"trevnorris","message":"*CPU","date":"2014-12-09T01:31:26.096Z","type":"message"}
{"nick":"trevnorris","message":"I disagreed w/ my mentioned data flow model for a while. until I actually tried implementing the alternative and realized that it's a performance hit.","date":"2014-12-09T01:32:23.667Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: right. so it'll probably be fast, unless many cores are trying to access the same semaphore at the same time","date":"2014-12-09T01:33:05.887Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: my expectectation is that most of the time a handle will not be locked by different threads all the time. It'll be mostly the same thread accessing it.","date":"2014-12-09T01:33:57.693Z","type":"message"}
{"nick":"trevnorris","message":"piscisaureus: since you're saying you want to allow arbitrary communication between child threads you're going to run into contention. that's why my thread model is a tree structure. that way I can guarantee no contention.","date":"2014-12-09T01:34:18.772Z","type":"message"}
{"nick":"piscisaureus","message":"Under these circumstances atomic operations are quite fast","date":"2014-12-09T01:34:19.999Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: I allow it, but I expect that the handle will be locked a couple of times in a row by the same thread","date":"2014-12-09T01:35:05.759Z","type":"message"}
{"nick":"trevnorris","message":"it also allows me to use thread safe lock free queue's to handle my message passing.","date":"2014-12-09T01:35:21.326Z","type":"message"}
{"nick":"piscisaureus","message":"that's different from e.g. your queue experiment where the lock owner bounces between threads","date":"2014-12-09T01:35:35.689Z","type":"message"}
{"nick":"piscisaureus","message":"which is much slower","date":"2014-12-09T01:35:45.781Z","type":"message"}
{"nick":"trevnorris","message":"well, when I spin lock on a sem_trywait it goes from 200k/sec to like 50m/sec.","date":"2014-12-09T01:36:21.276Z","type":"message"}
{"nick":"robertmaxrees","date":"2014-12-09T01:36:27.300Z","type":"quit"}
{"nick":"trevnorris","message":"because it always avoids the syscall. problem is it hs the potential to burn a bunch more CPU.","date":"2014-12-09T01:37:33.953Z","type":"message"}
{"nick":"rossk","date":"2014-12-09T01:39:45.279Z","type":"quit"}
{"nick":"thlorenz","date":"2014-12-09T01:39:50.869Z","type":"join"}
{"nick":"skeuomorf","date":"2014-12-09T01:41:10.730Z","type":"join"}
{"nick":"piscisaureus","message":"trevnorris: that's because it bounces","date":"2014-12-09T01:41:42.362Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: benchmark this for comparison: one thread locks and releases a mutex that is uncontended","date":"2014-12-09T01:42:20.170Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: an no there thread touches it","date":"2014-12-09T01:42:26.903Z","type":"message"}
{"nick":"trevnorris","message":"yeah. it's pretty much a freebie.","date":"2014-12-09T01:42:37.784Z","type":"message"}
{"nick":"trevnorris","message":"that's because it first does a futex and sees it's uncontended.","date":"2014-12-09T01:42:54.119Z","type":"message"}
{"nick":"sintaxi","reason":"Quit: sintaxi","date":"2014-12-09T01:43:09.417Z","type":"quit"}
{"nick":"piscisaureus","message":"trevnorris: well, it does an atomic op","date":"2014-12-09T01:43:14.255Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: futex is a syscall - if it gets there it is also slow","date":"2014-12-09T01:43:26.793Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: as long as you're using an atomic op and you're doing it from the same thread all the time (or most of the the time) it's fast","date":"2014-12-09T01:43:58.524Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: it sounds like on linux semaphores are optimied the same way","date":"2014-12-09T01:44:27.762Z","type":"message"}
{"nick":"piscisaureus","message":"*optimized","date":"2014-12-09T01:44:33.159Z","type":"message"}
{"nick":"trevnorris","message":"sure. that's why I created fuq.h and why I use a tree structure w/ my child thread data flow.","date":"2014-12-09T01:44:55.132Z","type":"message"}
{"nick":"trevnorris","message":"yeah, they are.","date":"2014-12-09T01:45:09.605Z","type":"message"}
{"nick":"sintaxi","date":"2014-12-09T01:45:17.340Z","type":"join"}
{"nick":"trevnorris","message":"that way I can simultaneously add tasks to the queue, and retrieve those same tasks w/o needing a lock.","date":"2014-12-09T01:45:45.585Z","type":"message"}
{"nick":"trevnorris","message":"but once you have N:M thread communication you need to force a lock on the queue.","date":"2014-12-09T01:46:12.898Z","type":"message"}
{"nick":"trevnorris","message":"if it's never contended then great. almost no cost. but if it is then performance pain will ensue.","date":"2014-12-09T01:47:01.328Z","type":"message"}
{"nick":"piscisaureus","message":"trevnorris: that's also when it gets slow. Because the lock owner is this thread and then another thread and then that thread","date":"2014-12-09T01:47:35.762Z","type":"message"}
{"nick":"trevnorris","message":"sure.","date":"2014-12-09T01:47:54.649Z","type":"message"}
{"nick":"DaveMethvin|away","new_nick":"DaveMethvin","date":"2014-12-09T01:48:53.358Z","type":"nick"}
{"nick":"xbuzz","date":"2014-12-09T01:49:03.305Z","type":"join"}
{"nick":"xbuzz","reason":"Quit: Lingo: www.lingoirc.com","date":"2014-12-09T01:57:17.359Z","type":"quit"}
{"nick":"quijote","date":"2014-12-09T01:57:28.888Z","type":"join"}
{"nick":"xbuzz","date":"2014-12-09T01:58:10.425Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-12-09T02:00:12.176Z","type":"quit"}
{"nick":"sintaxi","reason":"Quit: sintaxi","date":"2014-12-09T02:01:16.744Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 258 seconds","date":"2014-12-09T02:02:11.809Z","type":"quit"}
{"nick":"i0rn","date":"2014-12-09T02:06:34.886Z","type":"join"}
{"nick":"xbuzz","reason":"Quit: Be back later ...","date":"2014-12-09T02:07:17.491Z","type":"quit"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-12-09T02:08:56.384Z","type":"quit"}
{"nick":"iojs-gh","date":"2014-12-09T02:10:36.523Z","type":"join"}
{"nick":"iojs-gh","date":"2014-12-09T02:10:36.616Z","type":"part"}
{"nick":"jvrousseau","reason":"Quit: (null)","date":"2014-12-09T02:13:51.435Z","type":"quit"}
{"nick":"thlorenz","date":"2014-12-09T02:13:57.475Z","type":"join"}
{"nick":"divinegod","date":"2014-12-09T02:14:45.871Z","type":"join"}
{"nick":"eh_eff","reason":"Ping timeout: 265 seconds","date":"2014-12-09T02:15:28.163Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-12-09T02:16:58.212Z","type":"quit"}
{"nick":"Fishrock123","date":"2014-12-09T02:21:06.802Z","type":"join"}
{"nick":"tridnguyen","date":"2014-12-09T02:22:00.489Z","type":"join"}
{"nick":"thlorenz","date":"2014-12-09T02:27:29.740Z","type":"join"}
{"nick":"skift","reason":"Remote host closed the connection","date":"2014-12-09T02:35:08.744Z","type":"quit"}
{"nick":"skift","date":"2014-12-09T02:35:38.389Z","type":"join"}
{"nick":"abrams","date":"2014-12-09T02:37:24.649Z","type":"join"}
{"nick":"skift","reason":"Ping timeout: 252 seconds","date":"2014-12-09T02:39:59.347Z","type":"quit"}
{"nick":"bmac","date":"2014-12-09T02:40:30.105Z","type":"join"}
{"nick":"kenperki_","date":"2014-12-09T02:42:57.141Z","type":"join"}
{"nick":"kenperkins","reason":"Ping timeout: 256 seconds","date":"2014-12-09T02:44:50.627Z","type":"quit"}
{"nick":"quijote","date":"2014-12-09T02:58:20.780Z","type":"join"}
{"nick":"s34n","reason":"Read error: Connection reset by peer","date":"2014-12-09T03:01:01.322Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 256 seconds","date":"2014-12-09T03:02:58.614Z","type":"quit"}
{"nick":"thealphanerd","date":"2014-12-09T03:08:22.501Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-12-09T03:11:04.460Z","type":"quit"}
{"nick":"Fishrock123","reason":"Quit: Leaving...","date":"2014-12-09T03:14:56.980Z","type":"quit"}
{"nick":"thlorenz","date":"2014-12-09T03:16:20.277Z","type":"join"}
{"nick":"bmac","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzzâ¦","date":"2014-12-09T03:16:43.968Z","type":"quit"}
{"nick":"xbuzz","date":"2014-12-09T03:18:13.161Z","type":"join"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-12-09T03:18:59.827Z","type":"quit"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-12-09T03:20:04.098Z","type":"quit"}
{"nick":"xbuzz","reason":"Ping timeout: 240 seconds","date":"2014-12-09T03:22:17.074Z","type":"quit"}
{"nick":"TheAceOfHearts","reason":"Quit: Leaving.","date":"2014-12-09T03:30:38.452Z","type":"quit"}
{"nick":"bmac","date":"2014-12-09T03:48:32.629Z","type":"join"}
{"nick":"thealphanerd","date":"2014-12-09T03:56:18.642Z","type":"join"}
{"nick":"abrams","reason":"Quit: Leaving...","date":"2014-12-09T03:57:34.162Z","type":"quit"}
{"nick":"bmac","reason":"Quit: My MacBook Pro has gone to sleep. ZZZzzzâ¦","date":"2014-12-09T03:58:17.598Z","type":"quit"}
{"nick":"quijote","date":"2014-12-09T03:59:06.042Z","type":"join"}
{"nick":"quijote","reason":"Ping timeout: 264 seconds","date":"2014-12-09T04:04:05.898Z","type":"quit"}
{"nick":"billautomata","reason":"Remote host closed the connection","date":"2014-12-09T04:09:58.869Z","type":"quit"}
{"nick":"billautomata","date":"2014-12-09T04:10:54.561Z","type":"join"}
{"nick":"billautomata","reason":"Remote host closed the connection","date":"2014-12-09T04:11:00.529Z","type":"quit"}
{"nick":"thlorenz","date":"2014-12-09T04:19:50.721Z","type":"join"}
{"nick":"Sebmaster","reason":"Quit: Leaving","date":"2014-12-09T04:24:43.803Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 264 seconds","date":"2014-12-09T04:24:53.722Z","type":"quit"}
{"nick":"thlorenz","date":"2014-12-09T04:36:55.837Z","type":"join"}
{"nick":"blakehall","new_nick":"[blakehall]","date":"2014-12-09T04:39:28.620Z","type":"nick"}
{"nick":"divinegod","reason":"Quit: My Mac has gone to sleep. ZZZzzzâ¦","date":"2014-12-09T04:53:55.884Z","type":"quit"}
{"nick":"chetandhembre","date":"2014-12-09T04:59:26.177Z","type":"join"}
{"nick":"quijote","date":"2014-12-09T04:59:52.705Z","type":"join"}
{"nick":"chetandhembre","reason":"Client Quit","date":"2014-12-09T05:02:40.421Z","type":"quit"}
{"nick":"j201","reason":"Quit: Leaving","date":"2014-12-09T05:04:04.137Z","type":"quit"}
{"nick":"thlorenz","reason":"Remote host closed the connection","date":"2014-12-09T05:04:15.572Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 244 seconds","date":"2014-12-09T05:04:19.499Z","type":"quit"}
{"nick":"chetandhembre","date":"2014-12-09T05:04:50.732Z","type":"join"}
{"nick":"DaveMethvin","new_nick":"DaveMethvin|away","date":"2014-12-09T05:06:36.226Z","type":"nick"}
{"nick":"eh_eff","date":"2014-12-09T05:09:26.646Z","type":"join"}
{"nick":"bradleymeck","date":"2014-12-09T05:12:41.728Z","type":"join"}
{"nick":"chetandhembre","reason":"Quit: This computer has gone to sleep","date":"2014-12-09T05:17:55.838Z","type":"quit"}
{"nick":"chetandhembre","date":"2014-12-09T05:18:17.461Z","type":"join"}
{"nick":"divinegod","date":"2014-12-09T05:23:40.933Z","type":"join"}
{"nick":"seishun","date":"2014-12-09T05:24:03.391Z","type":"join"}
{"nick":"TheAceOfHearts","date":"2014-12-09T05:27:50.498Z","type":"join"}
{"nick":"stanzheng","reason":"Ping timeout: 250 seconds","date":"2014-12-09T05:28:06.358Z","type":"quit"}
{"nick":"KicStart","date":"2014-12-09T05:31:08.166Z","type":"join"}
{"nick":"kenperki_","message":" rvagg you awake","date":"2014-12-09T05:36:25.173Z","type":"message"}
{"nick":"kenperki_","new_nick":"kenperkins","date":"2014-12-09T05:36:30.681Z","type":"nick"}
{"nick":"bradleymeck","reason":"Quit: bradleymeck","date":"2014-12-09T05:38:17.816Z","type":"quit"}
{"nick":"octetcloud","reason":"Ping timeout: 244 seconds","date":"2014-12-09T05:38:56.627Z","type":"quit"}
{"nick":"stanzheng","date":"2014-12-09T05:42:08.826Z","type":"join"}
{"nick":"divinegod","reason":"Quit: My Mac has gone to sleep. ZZZzzzâ¦","date":"2014-12-09T05:51:33.941Z","type":"quit"}
{"nick":"chetandhembre","reason":"Quit: This computer has gone to sleep","date":"2014-12-09T05:54:29.561Z","type":"quit"}
{"nick":"quijote","date":"2014-12-09T06:00:38.968Z","type":"join"}
{"nick":"thealphanerd","reason":"Read error: Connection reset by peer","date":"2014-12-09T06:00:52.252Z","type":"quit"}
{"nick":"chetandhembre","date":"2014-12-09T06:01:55.337Z","type":"join"}
{"nick":"thealphanerd","date":"2014-12-09T06:02:28.933Z","type":"join"}
{"nick":"rvagg","message":"kenperkins: es","date":"2014-12-09T06:04:41.604Z","type":"message"}
{"nick":"rvagg","message":"kenperkins: yes","date":"2014-12-09T06:04:44.410Z","type":"message"}
{"nick":"thlorenz","date":"2014-12-09T06:05:09.173Z","type":"join"}
{"nick":"kenperkins","message":"so, I saw on https://github.com/iojs/build#hardware-sponsors that pq stepped forward","date":"2014-12-09T06:05:35.393Z","type":"message"}
{"nick":"quijote","reason":"Ping timeout: 272 seconds","date":"2014-12-09T06:05:45.852Z","type":"quit"}
{"nick":"thlorenz","reason":"Ping timeout: 265 seconds","date":"2014-12-09T06:10:22.148Z","type":"quit"}
{"nick":"Killswitch","reason":"Ping timeout: 272 seconds","date":"2014-12-09T06:12:05.964Z","type":"quit"}
{"nick":"srl295","reason":"Ping timeout: 272 seconds","date":"2014-12-09T06:12:43.970Z","type":"quit"}
{"nick":"kenperkins","message":"I guess that's not really a question, but anyway, feel free to reach out to me for anything else as well","date":"2014-12-09T06:12:44.802Z","type":"message"}
{"nick":"Killswitch","date":"2014-12-09T06:13:44.670Z","type":"join"}
{"nick":"Killswitch","new_nick":"Guest35705","date":"2014-12-09T06:13:45.237Z","type":"nick"}
{"nick":"srl295","date":"2014-12-09T06:13:51.859Z","type":"join"}
{"nick":"chetandhembre","reason":"Ping timeout: 255 seconds","date":"2014-12-09T06:23:04.281Z","type":"quit"}
{"nick":"ziles88","date":"2014-12-09T06:23:36.990Z","type":"join"}
{"nick":"chetandhembre","date":"2014-12-09T06:25:09.795Z","type":"join"}
{"nick":"nuizzy","date":"2014-12-09T06:25:56.093Z","type":"join"}
{"nick":"skift","date":"2014-12-09T06:28:09.013Z","type":"join"}
{"nick":"ziles88","message":"I respect what you guys are doing, I really do, but one thing has me puzzled. Was the break down in communication so strong on Joyents part that there just wasn't any other way? Did they offer any last minute 'negotiations' to try to keep you all working to the same goals? Or did they essentially brick wall all of your PR's and stop responding?","date":"2014-12-09T06:29:25.323Z","type":"message"}
{"nick":"ziles88","message":"Were they given an ultimatum? Or some sort of indication a fork work be made, and still didn't care?","date":"2014-12-09T06:33:19.038Z","type":"message"}
{"nick":"stanzheng","reason":"Remote host closed the connection","date":"2014-12-09T06:34:42.533Z","type":"quit"}
{"nick":"bajtos","date":"2014-12-09T06:35:12.354Z","type":"join"}
{"nick":"chetandhembre","reason":"Ping timeout: 264 seconds","date":"2014-12-09T06:35:41.785Z","type":"quit"}
{"nick":"chrisdickinson","message":"ziles88: have you seen http://blog.izs.me/post/104685388058/io-js ?","date":"2014-12-09T06:35:54.572Z","type":"message"}
{"nick":"chetandhembre","date":"2014-12-09T06:37:12.399Z","type":"join"}
{"nick":"KicStart","message":"chrisdickinson: It all boils down to controlling language -- attempting to control the narrative. The pronouns, and then the name.  Fair assessment?","date":"2014-12-09T06:39:09.122Z","type":"message"}
{"nick":"seishun","reason":"Ping timeout: 265 seconds","date":"2014-12-09T06:44:12.137Z","type":"quit"}
{"nick":"_pid","date":"2014-12-09T06:44:40.481Z","type":"join"}
{"nick":"p15__","message":"I didn't realize that joyent threatened legal action","date":"2014-12-09T06:44:43.666Z","type":"message"}
{"nick":"ziles88","message":"Joyent is unreal","date":"2014-12-09T06:45:09.584Z","type":"message"}
{"nick":"KicStart","message":"bullies","date":"2014-12-09T06:45:15.050Z","type":"message"}
{"nick":"ziles88","message":"they literally tried to trademark a 4 letter word? is that a joke?","date":"2014-12-09T06:45:36.063Z","type":"message"}
{"nick":"chrisdickinson","message":"KicStart: iojs is a way for the work on node-forward/node to continue in public with community involvement","date":"2014-12-09T06:45:43.702Z","type":"message"}
{"nick":"p15__","message":"i'm sure nike is trademarked","date":"2014-12-09T06:45:58.021Z","type":"message"}
{"nick":"ziles88","message":"nike isnt a word it'sa name","date":"2014-12-09T06:46:08.162Z","type":"message"}
{"nick":"ziles88","message":"maybe they mean node.js","date":"2014-12-09T06:46:24.942Z","type":"message"}
{"nick":"p15__","message":"I think the point is that joyent wasn't being super receptive to the work done in node-forward","date":"2014-12-09T06:46:33.471Z","type":"message"}
{"nick":"AbeEstrada","date":"2014-12-09T06:46:35.281Z","type":"join"}
{"nick":"p15__","message":"so the hope is that eventually they will, until then everything will happen in the fork","date":"2014-12-09T06:47:07.070Z","type":"message"}
{"nick":"chetandhembre","reason":"Quit: This computer has gone to sleep","date":"2014-12-09T06:48:11.363Z","type":"quit"}
{"nick":"p15__","message":"I hope that joyent gives node over to a well managed foundation","date":"2014-12-09T06:48:23.666Z","type":"message"}
{"nick":"KicStart","message":"p15: perhaps because they couldn't foster and control the community themselves and it gives them great dishonor?","date":"2014-12-09T06:48:32.296Z","type":"message"}
{"nick":"chetandhembre","date":"2014-12-09T06:49:18.509Z","type":"join"}
{"nick":"ziles88","message":"They plaster \"sponsored by joyent\" everywhere then try and say the name is a trademark.","date":"2014-12-09T06:49:20.025Z","type":"message"}
{"nick":"AbeEstrada","reason":"Client Quit","date":"2014-12-09T06:49:25.608Z","type":"quit"}
{"nick":"p15__","message":"I feel like node is kind of a red headed stepchild now, no one wants to take responsibility for it","date":"2014-12-09T06:49:53.789Z","type":"message"}
{"nick":"p15__","message":"iojs project on github should probably remove links to node b/c it will trigger trademark action?","date":"2014-12-09T06:50:53.605Z","type":"message"}
{"nick":"ziles88","message":"That is clearly not true, io.js is proof people want to take responsibility for it.","date":"2014-12-09T06:52:31.211Z","type":"message"}
{"nick":"p15__","message":"why not position as a direct replacement for node.js like mariadb is for mysql?","date":"2014-12-09T06:53:23.399Z","type":"message"}
{"nick":"KicStart","message":"It's all fun and games until the lawyers and government thugs come in.","date":"2014-12-09T06:55:04.766Z","type":"message"}
{"nick":"ziles88","date":"2014-12-09T06:55:08.876Z","type":"part"}
{"nick":"kenperkins","reason":"Quit: Apparently I've still forgotten to change my automatic sleep message Zzzz....","date":"2014-12-09T06:56:31.544Z","type":"quit"}
{"nick":"piscisaureus","reason":"Read error: Connection reset by peer","date":"2014-12-09T06:56:41.010Z","type":"quit"}
{"nick":"piscisaureus","date":"2014-12-09T06:57:27.339Z","type":"join"}
{"nick":"StoneCypher","reason":"Ping timeout: 264 seconds","date":"2014-12-09T06:57:29.907Z","type":"quit"}
{"nick":"thealphanerd","reason":"Quit: thealphanerd","date":"2014-12-09T06:58:21.451Z","type":"quit"}
{"nick":"playjax","date":"2014-12-09T06:58:28.393Z","type":"join"}
{"nick":"divinegod","date":"2014-12-09T06:59:22.684Z","type":"join"}
{"nick":"quijote","date":"2014-12-09T07:01:24.700Z","type":"join"}
{"nick":"divinegod","reason":"Quit: My Mac has gone to sleep. ZZZzzzâ¦","date":"2014-12-09T07:04:44.264Z","type":"quit"}
{"nick":"chetandhembre","reason":"Quit: This computer has gone to sleep","date":"2014-12-09T07:05:41.354Z","type":"quit"}
{"nick":"quijote","reason":"Ping timeout: 256 seconds","date":"2014-12-09T07:06:04.565Z","type":"quit"}
{"nick":"chetandhembre","date":"2014-12-09T07:07:16.282Z","type":"join"}
{"nick":"playjax","reason":"Ping timeout: 265 seconds","date":"2014-12-09T07:07:24.175Z","type":"quit"}
{"nick":"gkatsev","reason":"Read error: Connection reset by peer","date":"2014-12-09T07:07:27.467Z","type":"quit"}
{"nick":"RGiskard","reason":"Read error: Connection reset by peer","date":"2014-12-09T07:07:36.651Z","type":"quit"}
{"nick":"iojs-gh","date":"2014-12-09T07:10:41.817Z","type":"join"}
{"nick":"iojs-gh","date":"2014-12-09T07:10:41.912Z","type":"part"}
{"nick":"iojs-gh","date":"2014-12-09T07:13:14.803Z","type":"join"}
{"nick":"iojs-gh","date":"2014-12-09T07:13:14.896Z","type":"part"}
{"nick":"iojs-gh","date":"2014-12-09T07:13:44.760Z","type":"join"}
{"nick":"iojs-gh","date":"2014-12-09T07:13:44.919Z","type":"part"}
{"nick":"iojs-gh","date":"2014-12-09T07:15:20.479Z","type":"join"}
{"nick":"iojs-gh","date":"2014-12-09T07:15:20.628Z","type":"part"}
{"nick":"reqshark","reason":"Quit: Be back later ...","date":"2014-12-09T07:18:57.705Z","type":"quit"}
{"nick":"bajtos","reason":"Quit: bajtos","date":"2014-12-09T07:23:40.433Z","type":"quit"}
{"nick":"eh_eff","reason":"Ping timeout: 252 seconds","date":"2014-12-09T07:24:31.399Z","type":"quit"}
{"nick":"bajtos","date":"2014-12-09T07:27:38.540Z","type":"join"}
{"nick":"KicStart","reason":"Quit: Leaving.","date":"2014-12-09T07:31:05.022Z","type":"quit"}
{"nick":"stanzheng","date":"2014-12-09T07:35:10.543Z","type":"join"}
{"nick":"eh_eff","date":"2014-12-09T07:36:41.736Z","type":"join"}
{"nick":"eh_eff","reason":"Client Quit","date":"2014-12-09T07:39:09.643Z","type":"quit"}
{"nick":"stanzheng","reason":"Ping timeout: 256 seconds","date":"2014-12-09T07:40:04.561Z","type":"quit"}
{"nick":"piscisaureus","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2014-12-09T07:48:22.285Z","type":"quit"}
{"nick":"playjax","date":"2014-12-09T07:49:52.837Z","type":"join"}
{"nick":"thlorenz","date":"2014-12-09T07:54:16.089Z","type":"join"}
{"nick":"thlorenz","reason":"Ping timeout: 244 seconds","date":"2014-12-09T07:58:39.089Z","type":"quit"}
