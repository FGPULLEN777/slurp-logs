{"nick":"ramitos_","date":"2014-10-27T00:44:24.384Z","type":"join"}
{"nick":"ramitos","reason":"Ping timeout: 240 seconds","date":"2014-10-27T00:46:52.948Z","type":"quit"}
{"nick":"bnoordhuis","date":"2014-10-27T00:47:02.967Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 256 seconds","date":"2014-10-27T00:51:37.985Z","type":"quit"}
{"nick":"ijroth","date":"2014-10-27T01:19:16.431Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-10-27T02:13:37.625Z","type":"quit"}
{"nick":"ijroth","date":"2014-10-27T03:12:14.797Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-10-27T03:26:33.529Z","type":"quit"}
{"nick":"cjihrig","reason":"Quit: Leaving.","date":"2014-10-27T03:59:40.478Z","type":"quit"}
{"nick":"rmg","date":"2014-10-27T06:12:59.266Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 255 seconds","date":"2014-10-27T06:17:45.095Z","type":"quit"}
{"nick":"ijroth","date":"2014-10-27T07:00:11.136Z","type":"join"}
{"nick":"wolfeidau","reason":"Read error: Permission denied","date":"2014-10-27T07:06:19.978Z","type":"quit"}
{"nick":"wolfeidau","date":"2014-10-27T07:06:51.590Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-10-27T07:32:10.711Z","type":"quit"}
{"nick":"ijroth","date":"2014-10-27T07:32:31.355Z","type":"join"}
{"nick":"damncabbage","date":"2014-10-27T07:33:43.575Z","type":"part"}
{"nick":"seishun","date":"2014-10-27T07:53:58.959Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-10-27T09:04:42.431Z","type":"quit"}
{"nick":"bnoordhuis","date":"2014-10-27T09:25:45.667Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 240 seconds","date":"2014-10-27T09:36:23.069Z","type":"quit"}
{"nick":"chovy_","new_nick":"chovy","date":"2014-10-27T10:07:22.731Z","type":"nick"}
{"nick":"bnoordhuis","message":"another round of isolate-ification... https://github.com/v8/v8/commit/289e3232d0fcf546be03f183b2681717a3dad486 - pass isolate to Value::To* functions","date":"2014-10-27T11:05:18.161Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 245 seconds","date":"2014-10-27T11:17:47.658Z","type":"quit"}
{"nick":"rmg","date":"2014-10-27T11:39:18.177Z","type":"join"}
{"nick":"rmg","reason":"Ping timeout: 240 seconds","date":"2014-10-27T11:43:53.009Z","type":"quit"}
{"nick":"bnoordhuis","date":"2014-10-27T12:16:58.734Z","type":"join"}
{"nick":"ramitos","date":"2014-10-27T12:25:18.312Z","type":"join"}
{"nick":"ramitos__","date":"2014-10-27T12:27:15.286Z","type":"join"}
{"nick":"ramitos_","reason":"Ping timeout: 250 seconds","date":"2014-10-27T12:27:16.299Z","type":"quit"}
{"nick":"ramitos","reason":"Ping timeout: 244 seconds","date":"2014-10-27T12:29:59.276Z","type":"quit"}
{"nick":"indutny","message":"bnoordhuis: yay","date":"2014-10-27T12:30:15.969Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: finally","date":"2014-10-27T12:30:22.483Z","type":"message"}
{"nick":"seishun","date":"2014-10-27T12:42:02.144Z","type":"join"}
{"nick":"node-forward-gh","date":"2014-10-27T12:44:21.325Z","type":"join"}
{"nick":"node-forward-gh","message":"[node\u000f] bnoordhuis\u000f created bnoordhuis-fix-35\u000f (+1\u000f new commit): https://github.com/node-forward/node/commit/1104293ef63d\u000f","date":"2014-10-27T12:44:21.506Z","type":"message"}
{"nick":"node-forward-gh","message":"node\u000f/bnoordhuis-fix-35\u000f 1104293\u000f Ben Noordhuis\u000f: doc: update compiler requirements in README...","date":"2014-10-27T12:44:21.506Z","type":"message"}
{"nick":"node-forward-gh","date":"2014-10-27T12:44:21.506Z","type":"part"}
{"nick":"node-forward-gh","date":"2014-10-27T12:44:55.777Z","type":"join"}
{"nick":"node-forward-gh","message":"[node\u000f] bnoordhuis\u000f opened pull request #36: doc: update compiler requirements in README (v0.12\u000f...bnoordhuis-fix-35\u000f) https://github.com/node-forward/node/pull/36\u000f","date":"2014-10-27T12:44:55.959Z","type":"message"}
{"nick":"node-forward-gh","date":"2014-10-27T12:44:55.959Z","type":"part"}
{"nick":"node-forward-gh","date":"2014-10-27T12:48:59.049Z","type":"join"}
{"nick":"node-forward-gh","message":"[node\u000f] bnoordhuis\u000f pushed 1\u000f new commit to bnoordhuis-fix-33\u000f: https://github.com/node-forward/node/commit/f7de5ddaec3084173fc99c9e3cbf6c83bb097de4\u000f","date":"2014-10-27T12:48:59.269Z","type":"message"}
{"nick":"node-forward-gh","message":"node\u000f/bnoordhuis-fix-33\u000f f7de5dd\u000f Ben Noordhuis\u000f: fixup! document TaskQueue::can_write()","date":"2014-10-27T12:48:59.269Z","type":"message"}
{"nick":"node-forward-gh","date":"2014-10-27T12:48:59.269Z","type":"part"}
{"nick":"cjihrig","date":"2014-10-27T12:50:41.847Z","type":"join"}
{"nick":"bnoordhuis","message":"turbofan is enabled by default now in v8 master","date":"2014-10-27T13:02:07.356Z","type":"message"}
{"nick":"bnoordhuis","message":"i predict interesting times","date":"2014-10-27T13:02:17.486Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 258 seconds","date":"2014-10-27T13:28:32.843Z","type":"quit"}
{"nick":"cjihrig","reason":"Quit: Leaving.","date":"2014-10-27T13:32:59.760Z","type":"quit"}
{"nick":"cjihrig","date":"2014-10-27T14:02:11.271Z","type":"join"}
{"nick":"bnoordhuis","date":"2014-10-27T14:12:55.851Z","type":"join"}
{"nick":"rmg","date":"2014-10-27T14:17:30.310Z","type":"join"}
{"nick":"piscisaureus","date":"2014-10-27T15:05:10.272Z","type":"join"}
{"nick":"piscisaureus","message":"Hello","date":"2014-10-27T15:10:03.562Z","type":"message"}
{"nick":"Aria","message":"morning!","date":"2014-10-27T15:12:11.224Z","type":"message"}
{"nick":"indutny","message":"hello","date":"2014-10-27T16:14:17.069Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: you must be kidding","date":"2014-10-27T16:14:21.798Z","type":"message"}
{"nick":"indutny","message":"bnoordhuis: enabled for everything?","date":"2014-10-27T16:14:27.457Z","type":"message"}
{"nick":"octetcloud","date":"2014-10-27T16:16:30.414Z","type":"join"}
{"nick":"bnoordhuis","message":"indutny: i think so but i might be wrong. i only did a quick scan of the recent commits","date":"2014-10-27T16:18:25.717Z","type":"message"}
{"nick":"ijroth","date":"2014-10-27T17:01:33.921Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 258 seconds","date":"2014-10-27T17:13:10.838Z","type":"quit"}
{"nick":"bnoordhuis","date":"2014-10-27T17:13:55.855Z","type":"join"}
{"nick":"trevnorris","message":"morning","date":"2014-10-27T17:27:07.094Z","type":"message"}
{"nick":"bnoordhuis","message":"hey trevor","date":"2014-10-27T17:28:58.963Z","type":"message"}
{"nick":"bnoordhuis","message":"so, you got libnub working?","date":"2014-10-27T17:29:08.645Z","type":"message"}
{"nick":"trevnorris","message":"yeah. working great.","date":"2014-10-27T17:29:13.341Z","type":"message"}
{"nick":"trevnorris","message":"on linux anyways. don't have the build setup for windows.","date":"2014-10-27T17:29:40.643Z","type":"message"}
{"nick":"trevnorris","message":"porting more tests over to make sure things like tcp work under the assumptions I've made.","date":"2014-10-27T17:30:06.683Z","type":"message"}
{"nick":"bnoordhuis","message":"i suggest co-opting bert as your personal build slave, that's what i do when it comes to windows","date":"2014-10-27T17:30:15.031Z","type":"message"}
{"nick":"trevnorris","message":"heh, i'll do that.","date":"2014-10-27T17:30:25.627Z","type":"message"}
{"nick":"trevnorris","message":"also made a change to fuq.h to use read/write barriers where possible. instead of using a full mem barrier.","date":"2014-10-27T17:30:56.056Z","type":"message"}
{"nick":"trevnorris","message":"saves more than I thought in terms of performance.","date":"2014-10-27T17:31:06.127Z","type":"message"}
{"nick":"bnoordhuis","message":"you measured it?","date":"2014-10-27T17:31:23.670Z","type":"message"}
{"nick":"trevnorris","message":"yeah","date":"2014-10-27T17:31:26.993Z","type":"message"}
{"nick":"bnoordhuis","message":"show me the numbers!","date":"2014-10-27T17:31:33.814Z","type":"message"}
{"nick":"cjihrig","reason":"Quit: Leaving.","date":"2014-10-27T17:31:52.810Z","type":"quit"}
{"nick":"bnoordhuis","message":"depending on what you do, you may not need a barrier (on x86) or get away with a locked add or sub","date":"2014-10-27T17:32:35.809Z","type":"message"}
{"nick":"bnoordhuis","message":"(locked arithmetic is generally much faster than a fence)","date":"2014-10-27T17:33:01.303Z","type":"message"}
{"nick":"trevnorris","message":"it's not super technical. just ran it with /usr/bin/time and checked the total run time.","date":"2014-10-27T17:34:06.532Z","type":"message"}
{"nick":"trevnorris","message":"before change: 1.33user 0.00system 0:00.66elapsed","date":"2014-10-27T17:34:45.008Z","type":"message"}
{"nick":"trevnorris","message":"after change: 0.42user 0.00system 0:00.23elapsed 182%CPU","date":"2014-10-27T17:34:45.286Z","type":"message"}
{"nick":"trevnorris","message":"so little under 200% faster.","date":"2014-10-27T17:35:13.165Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, okay","date":"2014-10-27T17:35:58.235Z","type":"message"}
{"nick":"trevnorris","message":"here's the file I ran: https://github.com/trevnorris/fuq.h/blob/master/example/sporadic.c","date":"2014-10-27T17:36:01.075Z","type":"message"}
{"nick":"bnoordhuis","message":"dinner, biab","date":"2014-10-27T17:37:16.886Z","type":"message"}
{"nick":"trevnorris","message":"cool","date":"2014-10-27T17:37:29.119Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: btw, apropos eliding memory barriers, http://bartoszmilewski.com/2008/11/05/who-ordered-memory-fences-on-an-x86/","date":"2014-10-27T17:37:47.670Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: awesome. thanks.","date":"2014-10-27T17:38:10.267Z","type":"message"}
{"nick":"bnoordhuis","message":"and note that some microarchitectures implement even stronger guarantees but never weaker","date":"2014-10-27T17:38:22.128Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, off i go. tata!","date":"2014-10-27T17:38:26.744Z","type":"message"}
{"nick":"mmalecki","message":"hmm, so I'm back to trying to get the latest V8 to compile on SmartOS","date":"2014-10-27T17:40:44.210Z","type":"message"}
{"nick":"trevnorris","message":"mmalecki: latest as in the 3.30 branch?","date":"2014-10-27T17:41:01.875Z","type":"message"}
{"nick":"mmalecki","message":"Version 3.30.11 (based on bleeding_edge revision r24621)","date":"2014-10-27T17:41:22.727Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok. what issues come up?","date":"2014-10-27T17:42:00.458Z","type":"message"}
{"nick":"mmalecki","message":"I got past the signbit, now having fun with 'Compiler or options invalid for pre-UNIX 03 X/Open applications   and pre-2001 POSIX applications'","date":"2014-10-27T17:42:14.718Z","type":"message"}
{"nick":"trevnorris","message":"ahh. yeah, not fun.","date":"2014-10-27T17:42:43.864Z","type":"message"}
{"nick":"ramitos__","reason":"Quit: Textual IRC Client: www.textualapp.com","date":"2014-10-27T17:45:41.800Z","type":"quit"}
{"nick":"ramitos","date":"2014-10-27T17:45:56.944Z","type":"join"}
{"nick":"bnoordhuis","message":"mmalecki: missing -D_XOPEN_SOURCE=600?","date":"2014-10-27T18:05:43.602Z","type":"message"}
{"nick":"cjihrig","date":"2014-10-27T18:06:24.035Z","type":"join"}
{"nick":"bnoordhuis","message":"you could set it at 700. solaris should be posix-2008 compatible by now","date":"2014-10-27T18:07:08.612Z","type":"message"}
{"nick":"piscisaureus_","date":"2014-10-27T18:08:06.490Z","type":"join"}
{"nick":"trevnorris","message":"bnoordhuis: so is x86 the most relaxed when it comes to reordering memory instructions?","date":"2014-10-27T18:10:05.603Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: least relaxed, actually :-)","date":"2014-10-27T18:10:34.783Z","type":"message"}
{"nick":"bnoordhuis","message":"most relaxed to program for though","date":"2014-10-27T18:10:47.830Z","type":"message"}
{"nick":"trevnorris","message":"oh...","date":"2014-10-27T18:10:53.335Z","type":"message"}
{"nick":"piscisaureus","reason":"Ping timeout: 244 seconds","date":"2014-10-27T18:10:59.218Z","type":"quit"}
{"nick":"bnoordhuis","message":"x86's memory model is pretty strict, meaning you have lots of guarantees about what the cpu will and won't do","date":"2014-10-27T18:11:25.842Z","type":"message"}
{"nick":"bnoordhuis","message":"my 2003 alpha workstation on the other hand... now that was quite something","date":"2014-10-27T18:11:41.688Z","type":"message"}
{"nick":"Aria","message":"HEh. Quite.","date":"2014-10-27T18:12:06.379Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: in a linked article he says that x86 has lfence, sfence and mfence (x > 3)","date":"2014-10-27T18:13:19.340Z","type":"message"}
{"nick":"trevnorris","message":"so does that mean 386 doesn't support those instructions?","date":"2014-10-27T18:13:32.367Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: you mean like the original 386?","date":"2014-10-27T18:15:15.059Z","type":"message"}
{"nick":"trevnorris","message":"yeah.","date":"2014-10-27T18:15:19.560Z","type":"message"}
{"nick":"bnoordhuis","message":"i guess not. i don't think there were multi-core i386 systems so yeah, what do you need fences for in that case?","date":"2014-10-27T18:16:26.384Z","type":"message"}
{"nick":"trevnorris","message":"just curious because I use the following to check if the arch is x86 or x86_64: https://github.com/trevnorris/fuq.h/blob/master/fuq.h#L26-L27","date":"2014-10-27T18:16:53.178Z","type":"message"}
{"nick":"trevnorris","message":"(got that from http://nadeausoftware.com/articles/2012/02/c_c_tip_how_detect_processor_type_using_compiler_predefined_macros)","date":"2014-10-27T18:16:54.075Z","type":"message"}
{"nick":"bnoordhuis","message":"oh, hah.  that's really a check if you're compiling for 32 or 64 bits","date":"2014-10-27T18:17:22.310Z","type":"message"}
{"nick":"trevnorris","message":"ugh....","date":"2014-10-27T18:17:36.935Z","type":"message"}
{"nick":"bnoordhuis","message":"i wouldn't worry about 386s and 486s if i were you :-)","date":"2014-10-27T18:17:44.192Z","type":"message"}
{"nick":"trevnorris","message":"ok, noted.","date":"2014-10-27T18:18:00.073Z","type":"message"}
{"nick":"trevnorris","message":"some time I really need to figure out how to test that queue more extensively. forcing read/write race conditions hasn't been easy to figure out.","date":"2014-10-27T18:20:39.362Z","type":"message"}
{"nick":"piscisaureus_","reason":"Quit: ~ Trillian Astra - www.trillian.im ~","date":"2014-10-27T18:35:27.608Z","type":"quit"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-10-27T18:43:09.851Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: from the following, it looks like a write barrier doesn't need to be put in until after the write? http://bartoszmilewski.com/2008/08/04/multicores-and-publication-safety/","date":"2014-10-27T18:50:15.821Z","type":"message"}
{"nick":"ijroth","date":"2014-10-27T18:59:03.998Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: correct. read barriers go before reads, write barriers after writes","date":"2014-10-27T19:03:01.286Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: think of a barrier as a command to the cpu to sync up with the other cpus in the system","date":"2014-10-27T19:03:26.838Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: interesting. I've structured fuq.h so the write is always the last thing that happens in a function. does that mean I don't need any write barriers?","date":"2014-10-27T19:03:36.131Z","type":"message"}
{"nick":"bnoordhuis","message":"in general, no, you do need write barriers","date":"2014-10-27T19:04:03.910Z","type":"message"}
{"nick":"bnoordhuis","message":"why would it matter if the write is the last thing in the function?","date":"2014-10-27T19:04:19.680Z","type":"message"}
{"nick":"trevnorris","message":"um... no reason. was momentarily thinking at the source level (of reordering the compiled code) not the hardware level.","date":"2014-10-27T19:05:30.307Z","type":"message"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2014-10-27T19:07:22.697Z","type":"quit"}
{"nick":"bnoordhuis","message":"okay. to be clear, when i said \"in general\", i mean that you need them on architectures with weak memory models. depending on what you do, you may not need them on x86","date":"2014-10-27T19:07:57.716Z","type":"message"}
{"nick":"bnoordhuis","message":"SOP is to define macros or inline functions that evaluate to nothing if no load or store barrier is needed for this architecture","date":"2014-10-27T19:09:16.581Z","type":"message"}
{"nick":"trevnorris","message":"sorry, SOP?","date":"2014-10-27T19:11:48.406Z","type":"message"}
{"nick":"bnoordhuis","message":"Standard Operating Procedure :-)","date":"2014-10-27T19:11:59.603Z","type":"message"}
{"nick":"bnoordhuis","message":"btw, i managed to compile a slimmed down chromium base against node","date":"2014-10-27T19:12:46.655Z","type":"message"}
{"nick":"bnoordhuis","message":"i got it down from 31 MB to 3.3 MB","date":"2014-10-27T19:13:13.016Z","type":"message"}
{"nick":"trevnorris","message":"ah, okay. guess that means more research on what architectures actually need the memory barrier. :)","date":"2014-10-27T19:13:13.646Z","type":"message"}
{"nick":"trevnorris","message":"awesome.","date":"2014-10-27T19:13:15.640Z","type":"message"}
{"nick":"bnoordhuis","message":"yeah, i guess it's not too bad.  v8 is 75 MB, i won't feel too bad about 3.3 MB","date":"2014-10-27T19:14:05.222Z","type":"message"}
{"nick":"trevnorris","message":"actually i'm confused. what does it mean to compile chromium against node? guess i'm thinking, why compile a browser against node.","date":"2014-10-27T19:15:28.314Z","type":"message"}
{"nick":"mmalecki","message":"bnoordhuis: I'll try, thanks. I wasn't too sure how to approach this one","date":"2014-10-27T19:15:31.711Z","type":"message"}
{"nick":"node-forward-gh","date":"2014-10-27T19:21:22.015Z","type":"join"}
{"nick":"node-forward-gh","message":"[node\u000f] bnoordhuis\u000f closed pull request #36: doc: update compiler requirements in README (v0.12\u000f...bnoordhuis-fix-35\u000f) https://github.com/node-forward/node/pull/36\u000f","date":"2014-10-27T19:21:22.234Z","type":"message"}
{"nick":"node-forward-gh","date":"2014-10-27T19:21:22.234Z","type":"part"}
{"nick":"bnoordhuis","message":"argh","date":"2014-10-27T19:22:05.327Z","type":"message"}
{"nick":"node-forward-gh","date":"2014-10-27T19:23:03.480Z","type":"join"}
{"nick":"node-forward-gh","message":"[node\u000f] bnoordhuis\u000f deleted\u000f bnoordhuis-fix-35\u000f at 1104293\u000f: https://github.com/node-forward/node/commit/1104293\u000f","date":"2014-10-27T19:23:03.715Z","type":"message"}
{"nick":"node-forward-gh","date":"2014-10-27T19:23:03.715Z","type":"part"}
{"nick":"seishun","message":"github should get a way to specify which branch an issue applies to","date":"2014-10-27T19:25:57.476Z","type":"message"}
{"nick":"seishun","message":"since they don't auto-close unless merged into master","date":"2014-10-27T19:26:28.513Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: so I got around the uv_async_send() by setting uv_prepare_start() and checking if there are is anything queued.","date":"2014-10-27T19:32:41.348Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: the thing that's killing me is needing to sem_wait on the main thread, then sem_post to the other thread, then that thread needing to do a sem_post back when it's done.","date":"2014-10-27T19:33:57.958Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: it's eating my face. have any performance tricks to get around this?","date":"2014-10-27T19:34:21.900Z","type":"message"}
{"nick":"rmg","date":"2014-10-27T19:38:47.126Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 240 seconds","date":"2014-10-27T19:39:22.972Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: also, appears turbofan by default was reverted: Revert \"Enable turbofan deoptimization by default.\" Review URL: https://codereview.chromium.org/681713004","date":"2014-10-27T19:44:17.139Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: also, does sort of chafe me that SetIndexedPropertiesToExternalArrayData() doesn't allow > 1GB but ArrayBuffer does.","date":"2014-10-27T19:55:51.265Z","type":"message"}
{"nick":"Fishrock123","date":"2014-10-27T20:19:33.087Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: apropos the semaphore, are you sure that's the right order of events that you describe?","date":"2014-10-27T20:19:48.023Z","type":"message"}
{"nick":"bnoordhuis","message":"or does the main thread wait for the worker thread first?","date":"2014-10-27T20:20:32.891Z","type":"message"}
{"nick":"bnoordhuis","message":"apropos SetIndexedPropertiesToExternalArrayData(), i don't know why the limit is 1G elements. i think it should be capable of holding up to 2G elements","date":"2014-10-27T20:22:48.231Z","type":"message"}
{"nick":"Domenic","reason":"Ping timeout: 244 seconds","date":"2014-10-27T20:25:37.719Z","type":"quit"}
{"nick":"trevnorris","message":"bnoordhuis: re SetIndexedPropertiesToExternalArrayData: maybe they just haven't updated their code but this is at the beginning of allocation: DCHECK(0 <= length && length <= Smi::kMaxValue);","date":"2014-10-27T20:26:25.466Z","type":"message"}
{"nick":"bnoordhuis","message":"trevnorris: yes, that sounds plausible. CL time?","date":"2014-10-27T20:27:14.000Z","type":"message"}
{"nick":"trevnorris","message":"was thinking so.","date":"2014-10-27T20:27:20.889Z","type":"message"}
{"nick":"Domenic","date":"2014-10-27T20:27:24.026Z","type":"join"}
{"nick":"trevnorris","message":"looking through code to verify that's viable.","date":"2014-10-27T20:27:31.090Z","type":"message"}
{"nick":"trevnorris","message":"re event order: the child thread first does a uv_async_send() and then enters sem_wait. the main thread then signals the child it's ready and enters sem_wait itself.","date":"2014-10-27T20:27:53.411Z","type":"message"}
{"nick":"octetcloud","date":"2014-10-27T20:27:57.855Z","type":"join"}
{"nick":"bnoordhuis","message":"what does the child do in the time between waking up and sem_post/","date":"2014-10-27T20:28:55.936Z","type":"message"}
{"nick":"bnoordhuis","message":"that should have been a question mark :-)","date":"2014-10-27T20:29:07.372Z","type":"message"}
{"nick":"trevnorris","message":"the child receiving the sem_post from the main thread is the signal that it's alright to work on the event loop (e.g. create write req, etc.)","date":"2014-10-27T20:30:35.900Z","type":"message"}
{"nick":"trevnorris","message":"it's sort of an event loop critical section.","date":"2014-10-27T20:30:44.610Z","type":"message"}
{"nick":"bnoordhuis","message":"alright. so why shouldn't the main thread go to sleep until the worker thread is done?","date":"2014-10-27T20:31:37.523Z","type":"message"}
{"nick":"trevnorris","message":"it does. after the main thread does a sem_post to the child thread it then does a sem_wait","date":"2014-10-27T20:32:58.084Z","type":"message"}
{"nick":"trevnorris","message":"the child thread then needs to sem_post back to the main thread after the \"event loop critical section\"","date":"2014-10-27T20:33:12.574Z","type":"message"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-10-27T20:33:51.299Z","type":"quit"}
{"nick":"bnoordhuis","message":"yes. but what's the part that's eating you?","date":"2014-10-27T20:35:34.114Z","type":"message"}
{"nick":"bnoordhuis","message":"i mean, if the main thread can't continue until the worker is done, what else is there to do but sleep?","date":"2014-10-27T20:36:13.130Z","type":"message"}
{"nick":"trevnorris","message":"just all the sem_{wait,post}'s. perf shows that as +25% of cpu usage.","date":"2014-10-27T20:37:06.194Z","type":"message"}
{"nick":"bnoordhuis","message":"cpu time or wall clock time?","date":"2014-10-27T20:37:41.129Z","type":"message"}
{"nick":"trevnorris","message":"um... need to double check. i run perf with -e cycles:u and perf report shows 34% for sem_wait and 20% for sem_post","date":"2014-10-27T20:41:00.418Z","type":"message"}
{"nick":"Fishrock123","reason":"Remote host closed the connection","date":"2014-10-27T20:44:41.998Z","type":"quit"}
{"nick":"trevnorris","message":"annotated shows that sem_wait is spending 43% of its time in a spin lock, \"test %eax,%eax\" (at least, that's what I think it's for)","date":"2014-10-27T20:49:36.067Z","type":"message"}
{"nick":"trevnorris","message":"bnoordhuis: honestly I can't tell. get the following from /usr/bin/time: 0.32user 5.53system 0:04.57elapsed 128%CPU","date":"2014-10-27T21:00:18.003Z","type":"message"}
{"nick":"trevnorris","message":"but I forget how to measure cpu time vs wall clock time.","date":"2014-10-27T21:00:33.867Z","type":"message"}
{"nick":"ijroth","date":"2014-10-27T21:01:30.795Z","type":"join"}
{"nick":"bnoordhuis","message":"trevnorris: the system time suggests that your program is sleeping most of the time","date":"2014-10-27T21:09:22.227Z","type":"message"}
{"nick":"bnoordhuis","message":"or at least doing something inside a system call","date":"2014-10-27T21:09:29.392Z","type":"message"}
{"nick":"trevnorris","message":"think switching to using condvar would help performance?","date":"2014-10-27T21:10:16.842Z","type":"message"}
{"nick":"bnoordhuis","message":"i would first check what system calls most time is spent inside","date":"2014-10-27T21:13:36.671Z","type":"message"}
{"nick":"trevnorris","message":"99% futex","date":"2014-10-27T21:14:23.011Z","type":"message"}
{"nick":"bnoordhuis","message":"ah, okay. then the semaphore is indeed expensive","date":"2014-10-27T21:17:45.872Z","type":"message"}
{"nick":"bnoordhuis","message":"it's not a microbenchmark, is it?","date":"2014-10-27T21:17:59.158Z","type":"message"}
{"nick":"trevnorris","message":"the benchmark tests how quickly a child thread can hit the main thread, and have the main thread respond","date":"2014-10-27T21:18:35.534Z","type":"message"}
{"nick":"trevnorris","message":"it's making out around 200k/sec.","date":"2014-10-27T21:18:45.595Z","type":"message"}
{"nick":"trevnorris","message":"that seems far too low.","date":"2014-10-27T21:18:49.491Z","type":"message"}
{"nick":"rmg","reason":"Remote host closed the connection","date":"2014-10-27T21:19:11.426Z","type":"quit"}
{"nick":"bnoordhuis","message":"i don't know. it sounds like most cpu time is spent on waking up the other thread","date":"2014-10-27T21:21:01.643Z","type":"message"}
{"nick":"bnoordhuis","message":"try it with -e cycles:k or just -e cycles to see what the kernel is doing","date":"2014-10-27T21:21:25.152Z","type":"message"}
{"nick":"trevnorris","message":"it's from the uv_async_send() call I believe.","date":"2014-10-27T21:21:32.305Z","type":"message"}
{"nick":"trevnorris","message":"ok, will do","date":"2014-10-27T21:21:39.294Z","type":"message"}
{"nick":"bnoordhuis","message":"the kernel function names are usually a good indicator of what your process is doing","date":"2014-10-27T21:21:49.498Z","type":"message"}
{"nick":"bnoordhuis","message":"okay, i'm off to bed. sleep tight","date":"2014-10-27T21:21:54.298Z","type":"message"}
{"nick":"trevnorris","message":"night.","date":"2014-10-27T21:22:07.597Z","type":"message"}
{"nick":"trevnorris","message":"yeah... no idea what this means: effective_load.isra.41","date":"2014-10-27T21:22:32.145Z","type":"message"}
{"nick":"bnoordhuis","message":"effective load is from the kernel's scheduler, i.e. waking up processes","date":"2014-10-27T21:24:07.988Z","type":"message"}
{"nick":"bnoordhuis","message":"isra stands for interprocedural scalar replacement of aggregates","date":"2014-10-27T21:24:33.070Z","type":"message"}
{"nick":"trevnorris","message":"wow, ok.","date":"2014-10-27T21:25:28.293Z","type":"message"}
{"nick":"bnoordhuis","message":"it's a function that is synthesized by gcc's optimizer :-)","date":"2014-10-27T21:25:35.705Z","type":"message"}
{"nick":"trevnorris","message":"wish there was a user space solution for waking up a thread...","date":"2014-10-27T21:26:15.024Z","type":"message"}
{"nick":"bnoordhuis","message":"you could try your hand at spinlocks","date":"2014-10-27T21:26:58.836Z","type":"message"}
{"nick":"trevnorris","message":"ah, good point.","date":"2014-10-27T21:27:18.966Z","type":"message"}
{"nick":"bnoordhuis","message":"but that only makes sense if the critical section is really short and neither process should sleep","date":"2014-10-27T21:27:21.027Z","type":"message"}
{"nick":"trevnorris","message":"well, they should be short.","date":"2014-10-27T21:27:40.149Z","type":"message"}
{"nick":"trevnorris","message":"e.g. a single uv_write()","date":"2014-10-27T21:27:51.302Z","type":"message"}
{"nick":"bnoordhuis","message":"that's not short...","date":"2014-10-27T21:27:57.664Z","type":"message"}
{"nick":"trevnorris","message":"heh, guess it's short in terms of code length. :P","date":"2014-10-27T21:28:19.466Z","type":"message"}
{"nick":"bnoordhuis","message":"short is a handful of instructions","date":"2014-10-27T21:28:19.830Z","type":"message"}
{"nick":"trevnorris","message":"ah, ok. so no. not short.","date":"2014-10-27T21:28:28.648Z","type":"message"}
{"nick":"bnoordhuis","reason":"Ping timeout: 258 seconds","date":"2014-10-27T21:33:50.782Z","type":"quit"}
{"nick":"rmg","date":"2014-10-27T22:00:07.495Z","type":"join"}
{"nick":"octetcloud","reason":"Ping timeout: 240 seconds","date":"2014-10-27T22:13:53.028Z","type":"quit"}
{"nick":"trevnorris","message":"Does node-forward have a mailing list?","date":"2014-10-27T22:33:34.156Z","type":"message"}
{"nick":"trevnorris","message":"I need to let everyone know I won't be there Wednesday, but it's a bit of a pain right now.","date":"2014-10-27T22:34:03.793Z","type":"message"}
{"nick":"bnoordhuis","date":"2014-10-27T22:40:18.290Z","type":"join"}
{"nick":"bnoordhuis","reason":"Ping timeout: 244 seconds","date":"2014-10-27T22:44:49.210Z","type":"quit"}
{"nick":"octetcloud","date":"2014-10-27T22:45:59.130Z","type":"join"}
{"nick":"seishun","reason":"Ping timeout: 258 seconds","date":"2014-10-27T23:06:59.802Z","type":"quit"}
{"nick":"cjihrig","reason":"Read error: Connection reset by peer","date":"2014-10-27T23:08:18.001Z","type":"quit"}
{"nick":"cjihrig","date":"2014-10-27T23:11:08.013Z","type":"join"}
{"nick":"cjihrig","reason":"Client Quit","date":"2014-10-27T23:11:26.314Z","type":"quit"}
{"nick":"cjihrig","date":"2014-10-27T23:34:30.438Z","type":"join"}
{"nick":"ijroth","reason":"Quit: Leaving.","date":"2014-10-27T23:58:11.471Z","type":"quit"}
